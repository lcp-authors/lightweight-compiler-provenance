
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//m4_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402300 <.init>:
  402300:	stp	x29, x30, [sp, #-16]!
  402304:	mov	x29, sp
  402308:	bl	403198 <ferror@plt+0x7f8>
  40230c:	ldp	x29, x30, [sp], #16
  402310:	ret

Disassembly of section .plt:

0000000000402320 <mbrtowc@plt-0x20>:
  402320:	stp	x16, x30, [sp, #-16]!
  402324:	adrp	x16, 437000 <_obstack_memory_used@@Base+0x19640>
  402328:	ldr	x17, [x16, #4088]
  40232c:	add	x16, x16, #0xff8
  402330:	br	x17
  402334:	nop
  402338:	nop
  40233c:	nop

0000000000402340 <mbrtowc@plt>:
  402340:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16]
  402348:	add	x16, x16, #0x0
  40234c:	br	x17

0000000000402350 <memcpy@plt>:
  402350:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #8]
  402358:	add	x16, x16, #0x8
  40235c:	br	x17

0000000000402360 <sigaltstack@plt>:
  402360:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #16]
  402368:	add	x16, x16, #0x10
  40236c:	br	x17

0000000000402370 <_exit@plt>:
  402370:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #24]
  402378:	add	x16, x16, #0x18
  40237c:	br	x17

0000000000402380 <fwrite_unlocked@plt>:
  402380:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #32]
  402388:	add	x16, x16, #0x20
  40238c:	br	x17

0000000000402390 <strlen@plt>:
  402390:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #40]
  402398:	add	x16, x16, #0x28
  40239c:	br	x17

00000000004023a0 <fputs@plt>:
  4023a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #48]
  4023a8:	add	x16, x16, #0x30
  4023ac:	br	x17

00000000004023b0 <__sprintf_chk@plt>:
  4023b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #56]
  4023b8:	add	x16, x16, #0x38
  4023bc:	br	x17

00000000004023c0 <exit@plt>:
  4023c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #64]
  4023c8:	add	x16, x16, #0x40
  4023cc:	br	x17

00000000004023d0 <raise@plt>:
  4023d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #72]
  4023d8:	add	x16, x16, #0x48
  4023dc:	br	x17

00000000004023e0 <error@plt>:
  4023e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #80]
  4023e8:	add	x16, x16, #0x50
  4023ec:	br	x17

00000000004023f0 <sigprocmask@plt>:
  4023f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #88]
  4023f8:	add	x16, x16, #0x58
  4023fc:	br	x17

0000000000402400 <strtod@plt>:
  402400:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #96]
  402408:	add	x16, x16, #0x60
  40240c:	br	x17

0000000000402410 <secure_getenv@plt>:
  402410:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #104]
  402418:	add	x16, x16, #0x68
  40241c:	br	x17

0000000000402420 <setbuf@plt>:
  402420:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #112]
  402428:	add	x16, x16, #0x70
  40242c:	br	x17

0000000000402430 <putc@plt>:
  402430:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #120]
  402438:	add	x16, x16, #0x78
  40243c:	br	x17

0000000000402440 <pipe@plt>:
  402440:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #128]
  402448:	add	x16, x16, #0x80
  40244c:	br	x17

0000000000402450 <__cxa_atexit@plt>:
  402450:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #136]
  402458:	add	x16, x16, #0x88
  40245c:	br	x17

0000000000402460 <fputc@plt>:
  402460:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #144]
  402468:	add	x16, x16, #0x90
  40246c:	br	x17

0000000000402470 <qsort@plt>:
  402470:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #152]
  402478:	add	x16, x16, #0x98
  40247c:	br	x17

0000000000402480 <posix_spawn_file_actions_addopen@plt>:
  402480:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #160]
  402488:	add	x16, x16, #0xa0
  40248c:	br	x17

0000000000402490 <kill@plt>:
  402490:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #168]
  402498:	add	x16, x16, #0xa8
  40249c:	br	x17

00000000004024a0 <lseek@plt>:
  4024a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #176]
  4024a8:	add	x16, x16, #0xb0
  4024ac:	br	x17

00000000004024b0 <__fpending@plt>:
  4024b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #184]
  4024b8:	add	x16, x16, #0xb8
  4024bc:	br	x17

00000000004024c0 <fileno@plt>:
  4024c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #192]
  4024c8:	add	x16, x16, #0xc0
  4024cc:	br	x17

00000000004024d0 <posix_spawn_file_actions_adddup2@plt>:
  4024d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #200]
  4024d8:	add	x16, x16, #0xc8
  4024dc:	br	x17

00000000004024e0 <signal@plt>:
  4024e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #208]
  4024e8:	add	x16, x16, #0xd0
  4024ec:	br	x17

00000000004024f0 <fclose@plt>:
  4024f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #216]
  4024f8:	add	x16, x16, #0xd8
  4024fc:	br	x17

0000000000402500 <getpid@plt>:
  402500:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #224]
  402508:	add	x16, x16, #0xe0
  40250c:	br	x17

0000000000402510 <nl_langinfo@plt>:
  402510:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #232]
  402518:	add	x16, x16, #0xe8
  40251c:	br	x17

0000000000402520 <fopen@plt>:
  402520:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #240]
  402528:	add	x16, x16, #0xf0
  40252c:	br	x17

0000000000402530 <malloc@plt>:
  402530:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #248]
  402538:	add	x16, x16, #0xf8
  40253c:	br	x17

0000000000402540 <open@plt>:
  402540:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #256]
  402548:	add	x16, x16, #0x100
  40254c:	br	x17

0000000000402550 <__vasprintf_chk@plt>:
  402550:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #264]
  402558:	add	x16, x16, #0x108
  40255c:	br	x17

0000000000402560 <__isoc99_fscanf@plt>:
  402560:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #272]
  402568:	add	x16, x16, #0x110
  40256c:	br	x17

0000000000402570 <sigemptyset@plt>:
  402570:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #280]
  402578:	add	x16, x16, #0x118
  40257c:	br	x17

0000000000402580 <posix_spawnattr_destroy@plt>:
  402580:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #288]
  402588:	add	x16, x16, #0x120
  40258c:	br	x17

0000000000402590 <strncmp@plt>:
  402590:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #296]
  402598:	add	x16, x16, #0x128
  40259c:	br	x17

00000000004025a0 <__libc_start_main@plt>:
  4025a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #304]
  4025a8:	add	x16, x16, #0x130
  4025ac:	br	x17

00000000004025b0 <__printf_chk@plt>:
  4025b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #312]
  4025b8:	add	x16, x16, #0x138
  4025bc:	br	x17

00000000004025c0 <memset@plt>:
  4025c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #320]
  4025c8:	add	x16, x16, #0x140
  4025cc:	br	x17

00000000004025d0 <fdopen@plt>:
  4025d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #328]
  4025d8:	add	x16, x16, #0x148
  4025dc:	br	x17

00000000004025e0 <re_set_registers@plt>:
  4025e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #336]
  4025e8:	add	x16, x16, #0x150
  4025ec:	br	x17

00000000004025f0 <__vfprintf_chk@plt>:
  4025f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #344]
  4025f8:	add	x16, x16, #0x158
  4025fc:	br	x17

0000000000402600 <calloc@plt>:
  402600:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #352]
  402608:	add	x16, x16, #0x160
  40260c:	br	x17

0000000000402610 <posix_spawn_file_actions_destroy@plt>:
  402610:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #360]
  402618:	add	x16, x16, #0x168
  40261c:	br	x17

0000000000402620 <realloc@plt>:
  402620:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #368]
  402628:	add	x16, x16, #0x170
  40262c:	br	x17

0000000000402630 <re_search@plt>:
  402630:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #376]
  402638:	add	x16, x16, #0x178
  40263c:	br	x17

0000000000402640 <getc@plt>:
  402640:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #384]
  402648:	add	x16, x16, #0x180
  40264c:	br	x17

0000000000402650 <posix_spawn_file_actions_addclose@plt>:
  402650:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #392]
  402658:	add	x16, x16, #0x188
  40265c:	br	x17

0000000000402660 <close@plt>:
  402660:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #400]
  402668:	add	x16, x16, #0x190
  40266c:	br	x17

0000000000402670 <sigaction@plt>:
  402670:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #408]
  402678:	add	x16, x16, #0x198
  40267c:	br	x17

0000000000402680 <strrchr@plt>:
  402680:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #416]
  402688:	add	x16, x16, #0x1a0
  40268c:	br	x17

0000000000402690 <__gmon_start__@plt>:
  402690:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #424]
  402698:	add	x16, x16, #0x1a8
  40269c:	br	x17

00000000004026a0 <write@plt>:
  4026a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #432]
  4026a8:	add	x16, x16, #0x1b0
  4026ac:	br	x17

00000000004026b0 <mkdtemp@plt>:
  4026b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #440]
  4026b8:	add	x16, x16, #0x1b8
  4026bc:	br	x17

00000000004026c0 <posix_spawnattr_setflags@plt>:
  4026c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #448]
  4026c8:	add	x16, x16, #0x1c0
  4026cc:	br	x17

00000000004026d0 <abort@plt>:
  4026d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #456]
  4026d8:	add	x16, x16, #0x1c8
  4026dc:	br	x17

00000000004026e0 <re_compile_pattern@plt>:
  4026e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #464]
  4026e8:	add	x16, x16, #0x1d0
  4026ec:	br	x17

00000000004026f0 <mbsinit@plt>:
  4026f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #472]
  4026f8:	add	x16, x16, #0x1d8
  4026fc:	br	x17

0000000000402700 <posix_spawnattr_setsigmask@plt>:
  402700:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #480]
  402708:	add	x16, x16, #0x1e0
  40270c:	br	x17

0000000000402710 <puts@plt>:
  402710:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #488]
  402718:	add	x16, x16, #0x1e8
  40271c:	br	x17

0000000000402720 <posix_spawn_file_actions_init@plt>:
  402720:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #496]
  402728:	add	x16, x16, #0x1f0
  40272c:	br	x17

0000000000402730 <memcmp@plt>:
  402730:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #504]
  402738:	add	x16, x16, #0x1f8
  40273c:	br	x17

0000000000402740 <getopt_long@plt>:
  402740:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #512]
  402748:	add	x16, x16, #0x200
  40274c:	br	x17

0000000000402750 <__fprintf_chk@plt>:
  402750:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #520]
  402758:	add	x16, x16, #0x208
  40275c:	br	x17

0000000000402760 <strcmp@plt>:
  402760:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #528]
  402768:	add	x16, x16, #0x210
  40276c:	br	x17

0000000000402770 <__ctype_b_loc@plt>:
  402770:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #536]
  402778:	add	x16, x16, #0x218
  40277c:	br	x17

0000000000402780 <rmdir@plt>:
  402780:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #544]
  402788:	add	x16, x16, #0x220
  40278c:	br	x17

0000000000402790 <strtol@plt>:
  402790:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #552]
  402798:	add	x16, x16, #0x228
  40279c:	br	x17

00000000004027a0 <fseeko@plt>:
  4027a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #560]
  4027a8:	add	x16, x16, #0x230
  4027ac:	br	x17

00000000004027b0 <fread@plt>:
  4027b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #568]
  4027b8:	add	x16, x16, #0x238
  4027bc:	br	x17

00000000004027c0 <free@plt>:
  4027c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #576]
  4027c8:	add	x16, x16, #0x240
  4027cc:	br	x17

00000000004027d0 <ungetc@plt>:
  4027d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #584]
  4027d8:	add	x16, x16, #0x248
  4027dc:	br	x17

00000000004027e0 <__ctype_get_mb_cur_max@plt>:
  4027e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #592]
  4027e8:	add	x16, x16, #0x250
  4027ec:	br	x17

00000000004027f0 <mempcpy@plt>:
  4027f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #600]
  4027f8:	add	x16, x16, #0x258
  4027fc:	br	x17

0000000000402800 <posix_spawnp@plt>:
  402800:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #608]
  402808:	add	x16, x16, #0x260
  40280c:	br	x17

0000000000402810 <strchr@plt>:
  402810:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #616]
  402818:	add	x16, x16, #0x268
  40281c:	br	x17

0000000000402820 <rename@plt>:
  402820:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #624]
  402828:	add	x16, x16, #0x270
  40282c:	br	x17

0000000000402830 <fwrite@plt>:
  402830:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #632]
  402838:	add	x16, x16, #0x278
  40283c:	br	x17

0000000000402840 <fcntl@plt>:
  402840:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #640]
  402848:	add	x16, x16, #0x280
  40284c:	br	x17

0000000000402850 <fflush@plt>:
  402850:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #648]
  402858:	add	x16, x16, #0x288
  40285c:	br	x17

0000000000402860 <strcpy@plt>:
  402860:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #656]
  402868:	add	x16, x16, #0x290
  40286c:	br	x17

0000000000402870 <posix_spawnattr_init@plt>:
  402870:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #664]
  402878:	add	x16, x16, #0x298
  40287c:	br	x17

0000000000402880 <memchr@plt>:
  402880:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #672]
  402888:	add	x16, x16, #0x2a0
  40288c:	br	x17

0000000000402890 <mkstemp@plt>:
  402890:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #680]
  402898:	add	x16, x16, #0x2a8
  40289c:	br	x17

00000000004028a0 <__fxstat@plt>:
  4028a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #688]
  4028a8:	add	x16, x16, #0x2b0
  4028ac:	br	x17

00000000004028b0 <strstr@plt>:
  4028b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #696]
  4028b8:	add	x16, x16, #0x2b8
  4028bc:	br	x17

00000000004028c0 <__freading@plt>:
  4028c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #704]
  4028c8:	add	x16, x16, #0x2c0
  4028cc:	br	x17

00000000004028d0 <regfree@plt>:
  4028d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #712]
  4028d8:	add	x16, x16, #0x2c8
  4028dc:	br	x17

00000000004028e0 <strsignal@plt>:
  4028e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #720]
  4028e8:	add	x16, x16, #0x2d0
  4028ec:	br	x17

00000000004028f0 <sigaddset@plt>:
  4028f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #728]
  4028f8:	add	x16, x16, #0x2d8
  4028fc:	br	x17

0000000000402900 <iswprint@plt>:
  402900:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #736]
  402908:	add	x16, x16, #0x2e0
  40290c:	br	x17

0000000000402910 <__assert_fail@plt>:
  402910:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #744]
  402918:	add	x16, x16, #0x2e8
  40291c:	br	x17

0000000000402920 <__errno_location@plt>:
  402920:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #752]
  402928:	add	x16, x16, #0x2f0
  40292c:	br	x17

0000000000402930 <getenv@plt>:
  402930:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #760]
  402938:	add	x16, x16, #0x2f8
  40293c:	br	x17

0000000000402940 <__xstat@plt>:
  402940:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #768]
  402948:	add	x16, x16, #0x300
  40294c:	br	x17

0000000000402950 <waitpid@plt>:
  402950:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #776]
  402958:	add	x16, x16, #0x308
  40295c:	br	x17

0000000000402960 <unlink@plt>:
  402960:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #784]
  402968:	add	x16, x16, #0x310
  40296c:	br	x17

0000000000402970 <error_at_line@plt>:
  402970:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #792]
  402978:	add	x16, x16, #0x318
  40297c:	br	x17

0000000000402980 <__uflow@plt>:
  402980:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #800]
  402988:	add	x16, x16, #0x320
  40298c:	br	x17

0000000000402990 <setlocale@plt>:
  402990:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #808]
  402998:	add	x16, x16, #0x328
  40299c:	br	x17

00000000004029a0 <ferror@plt>:
  4029a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #816]
  4029a8:	add	x16, x16, #0x330
  4029ac:	br	x17

Disassembly of section .text:

00000000004029b0 <_obstack_begin@@Base-0x1ac00>:
  4029b0:	stp	x29, x30, [sp, #-320]!
  4029b4:	mov	x29, sp
  4029b8:	stp	x21, x22, [sp, #32]
  4029bc:	mov	w21, w0
  4029c0:	ldr	x0, [x1]
  4029c4:	stp	x27, x28, [sp, #80]
  4029c8:	adrp	x28, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4029cc:	stp	x19, x20, [sp, #16]
  4029d0:	mov	x20, x1
  4029d4:	adrp	x19, 403000 <ferror@plt+0x660>
  4029d8:	stp	x23, x24, [sp, #48]
  4029dc:	add	x19, x19, #0x258
  4029e0:	stp	x25, x26, [sp, #64]
  4029e4:	bl	417be0 <ferror@plt+0x15240>
  4029e8:	adrp	x0, 415000 <ferror@plt+0x12660>
  4029ec:	str	wzr, [x28, #3520]
  4029f0:	add	x0, x0, #0x458
  4029f4:	bl	41df08 <_obstack_memory_used@@Base+0x548>
  4029f8:	bl	4111e8 <ferror@plt+0xe848>
  4029fc:	bl	409448 <ferror@plt+0x6aa8>
  402a00:	adrp	x1, 41d000 <ferror@plt+0x1a660>
  402a04:	adrp	x0, 41d000 <ferror@plt+0x1a660>
  402a08:	add	x1, x1, #0xf88
  402a0c:	add	x0, x0, #0xf98
  402a10:	bl	41d188 <ferror@plt+0x1a7e8>
  402a14:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  402a18:	add	x26, x1, #0x470
  402a1c:	str	x0, [x1, #1136]
  402a20:	mov	w0, #0xb                   	// #11
  402a24:	bl	4028e0 <strsignal@plt>
  402a28:	bl	41cbb8 <ferror@plt+0x1a218>
  402a2c:	mov	x1, x0
  402a30:	mov	w0, #0x6                   	// #6
  402a34:	str	x1, [x26, #104]
  402a38:	bl	4028e0 <strsignal@plt>
  402a3c:	bl	41cbb8 <ferror@plt+0x1a218>
  402a40:	mov	x1, x0
  402a44:	mov	w0, #0x4                   	// #4
  402a48:	str	x1, [x26, #64]
  402a4c:	bl	4028e0 <strsignal@plt>
  402a50:	bl	41cbb8 <ferror@plt+0x1a218>
  402a54:	mov	x1, x0
  402a58:	mov	w0, #0x8                   	// #8
  402a5c:	str	x1, [x26, #48]
  402a60:	bl	4028e0 <strsignal@plt>
  402a64:	bl	41cbb8 <ferror@plt+0x1a218>
  402a68:	mov	x1, x0
  402a6c:	mov	w0, #0x7                   	// #7
  402a70:	str	x1, [x26, #80]
  402a74:	bl	4028e0 <strsignal@plt>
  402a78:	bl	41cbb8 <ferror@plt+0x1a218>
  402a7c:	mov	x1, x0
  402a80:	add	x0, sp, #0xb0
  402a84:	str	x1, [x26, #72]
  402a88:	bl	402570 <sigemptyset@plt>
  402a8c:	str	x19, [sp, #168]
  402a90:	mov	w3, #0xc0000000            	// #-1073741824
  402a94:	add	x1, sp, #0xa8
  402a98:	mov	x2, #0x0                   	// #0
  402a9c:	mov	w0, #0xb                   	// #11
  402aa0:	str	w3, [sp, #304]
  402aa4:	bl	402670 <sigaction@plt>
  402aa8:	add	x1, sp, #0xa8
  402aac:	mov	x2, #0x0                   	// #0
  402ab0:	mov	w0, #0x6                   	// #6
  402ab4:	bl	402670 <sigaction@plt>
  402ab8:	add	x1, sp, #0xa8
  402abc:	mov	x2, #0x0                   	// #0
  402ac0:	mov	w0, #0x4                   	// #4
  402ac4:	bl	402670 <sigaction@plt>
  402ac8:	add	x1, sp, #0xa8
  402acc:	mov	x2, #0x0                   	// #0
  402ad0:	mov	w0, #0x8                   	// #8
  402ad4:	bl	402670 <sigaction@plt>
  402ad8:	add	x1, sp, #0xa8
  402adc:	mov	x2, #0x0                   	// #0
  402ae0:	mov	w0, #0x7                   	// #7
  402ae4:	bl	402670 <sigaction@plt>
  402ae8:	mov	x0, x19
  402aec:	bl	414488 <ferror@plt+0x11ae8>
  402af0:	cbnz	w0, 402afc <ferror@plt+0x15c>
  402af4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402af8:	str	wzr, [x0, #848]
  402afc:	adrp	x24, 41e000 <_obstack_memory_used@@Base+0x640>
  402b00:	adrp	x23, 41e000 <_obstack_memory_used@@Base+0x640>
  402b04:	adrp	x22, 41e000 <_obstack_memory_used@@Base+0x640>
  402b08:	add	x24, x24, #0xeb8
  402b0c:	add	x23, x23, #0xb60
  402b10:	add	x22, x22, #0xd30
  402b14:	adrp	x27, 41e000 <_obstack_memory_used@@Base+0x640>
  402b18:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402b1c:	add	x27, x27, #0xe8
  402b20:	add	x0, x0, #0x68
  402b24:	mov	w25, #0x0                   	// #0
  402b28:	mov	x19, #0x0                   	// #0
  402b2c:	stp	xzr, xzr, [sp, #104]
  402b30:	stp	x27, xzr, [sp, #120]
  402b34:	stp	xzr, x0, [sp, #136]
  402b38:	mov	x3, x24
  402b3c:	mov	x2, x23
  402b40:	mov	x1, x20
  402b44:	mov	w0, w21
  402b48:	mov	x4, #0x0                   	// #0
  402b4c:	bl	402740 <getopt_long@plt>
  402b50:	mov	w3, w0
  402b54:	cmn	w0, #0x1
  402b58:	b.eq	402ef0 <ferror@plt+0x550>  // b.none
  402b5c:	cmp	w3, #0x1
  402b60:	b.eq	402e94 <ferror@plt+0x4f4>  // b.none
  402b64:	sub	w0, w3, #0x42
  402b68:	cmp	w0, #0xc2
  402b6c:	b.hi	402e70 <ferror@plt+0x4d0>  // b.pmore
  402b70:	ldrh	w0, [x22, w0, uxtw #1]
  402b74:	adr	x1, 402b80 <ferror@plt+0x1e0>
  402b78:	add	x0, x1, w0, sxth #2
  402b7c:	br	x0
  402b80:	mov	w25, #0x1                   	// #1
  402b84:	b	402b38 <ferror@plt+0x198>
  402b88:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402b8c:	adrp	x4, 41e000 <_obstack_memory_used@@Base+0x640>
  402b90:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0x640>
  402b94:	add	x4, x4, #0xa0
  402b98:	ldr	x0, [x0, #1088]
  402b9c:	add	x3, x3, #0xb0
  402ba0:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x640>
  402ba4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  402ba8:	add	x2, x2, #0xb8
  402bac:	add	x1, x1, #0xc0
  402bb0:	mov	x5, #0x0                   	// #0
  402bb4:	bl	41c378 <ferror@plt+0x199d8>
  402bb8:	mov	w0, #0x0                   	// #0
  402bbc:	bl	4023c0 <exit@plt>
  402bc0:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  402bc4:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  402bc8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402bcc:	add	x0, x0, #0xc8
  402bd0:	ldr	x1, [x1, #2904]
  402bd4:	bl	41cc48 <ferror@plt+0x1a2a8>
  402bd8:	ldr	x3, [x19, #1088]
  402bdc:	mov	x2, #0x50                  	// #80
  402be0:	mov	x1, #0x1                   	// #1
  402be4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402be8:	add	x0, x0, #0xf0
  402bec:	bl	402830 <fwrite@plt>
  402bf0:	ldr	x3, [x19, #1088]
  402bf4:	mov	x2, #0xf1                  	// #241
  402bf8:	mov	x1, #0x1                   	// #1
  402bfc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402c00:	add	x0, x0, #0x148
  402c04:	bl	402830 <fwrite@plt>
  402c08:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  402c0c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402c10:	add	x1, x1, #0x240
  402c14:	add	x0, x0, #0x260
  402c18:	bl	41cc48 <ferror@plt+0x1a2a8>
  402c1c:	ldr	x3, [x19, #1088]
  402c20:	mov	x2, #0x10b                 	// #267
  402c24:	mov	x1, #0x1                   	// #1
  402c28:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402c2c:	add	x0, x0, #0x448
  402c30:	bl	402830 <fwrite@plt>
  402c34:	mov	x0, x27
  402c38:	bl	402710 <puts@plt>
  402c3c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  402c40:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402c44:	add	x0, x0, #0x558
  402c48:	ldr	w1, [x1, #848]
  402c4c:	bl	41cc48 <ferror@plt+0x1a2a8>
  402c50:	mov	x0, x27
  402c54:	bl	402710 <puts@plt>
  402c58:	ldr	x3, [x19, #1088]
  402c5c:	mov	x2, #0xa1                  	// #161
  402c60:	mov	x1, #0x1                   	// #1
  402c64:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402c68:	add	x0, x0, #0x680
  402c6c:	bl	402830 <fwrite@plt>
  402c70:	ldr	x3, [x19, #1088]
  402c74:	mov	x2, #0x15e                 	// #350
  402c78:	mov	x1, #0x1                   	// #1
  402c7c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402c80:	add	x0, x0, #0x728
  402c84:	bl	402830 <fwrite@plt>
  402c88:	ldr	x3, [x19, #1088]
  402c8c:	mov	x2, #0x1ce                 	// #462
  402c90:	mov	x1, #0x1                   	// #1
  402c94:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402c98:	add	x0, x0, #0x888
  402c9c:	bl	402830 <fwrite@plt>
  402ca0:	ldr	x3, [x19, #1088]
  402ca4:	mov	x2, #0x7e                  	// #126
  402ca8:	mov	x1, #0x1                   	// #1
  402cac:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402cb0:	add	x0, x0, #0xa58
  402cb4:	bl	402830 <fwrite@plt>
  402cb8:	ldr	x3, [x19, #1088]
  402cbc:	mov	x2, #0x85                  	// #133
  402cc0:	mov	x1, #0x1                   	// #1
  402cc4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  402cc8:	add	x0, x0, #0xad8
  402ccc:	bl	402830 <fwrite@plt>
  402cd0:	bl	41c4c0 <ferror@plt+0x19b20>
  402cd4:	mov	w0, #0x0                   	// #0
  402cd8:	bl	4023c0 <exit@plt>
  402cdc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402ce0:	ldr	x0, [x0, #1072]
  402ce4:	str	x0, [sp, #120]
  402ce8:	b	402b38 <ferror@plt+0x198>
  402cec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402cf0:	ldr	x0, [x0, #1072]
  402cf4:	str	x0, [sp, #104]
  402cf8:	b	402b38 <ferror@plt+0x198>
  402cfc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402d00:	mov	w2, #0xa                   	// #10
  402d04:	mov	x1, #0x0                   	// #0
  402d08:	ldr	x0, [x0, #1072]
  402d0c:	bl	402790 <strtol@plt>
  402d10:	cmp	w0, #0x0
  402d14:	csel	w0, w0, wzr, gt
  402d18:	str	w0, [x26, #560]
  402d1c:	b	402b38 <ferror@plt+0x198>
  402d20:	str	wzr, [x26, #544]
  402d24:	b	402b38 <ferror@plt+0x198>
  402d28:	ldr	x2, [sp, #144]
  402d2c:	mov	w1, #0x0                   	// #0
  402d30:	mov	w0, #0x0                   	// #0
  402d34:	mov	w25, #0x1                   	// #1
  402d38:	bl	4023e0 <error@plt>
  402d3c:	b	402b38 <ferror@plt+0x198>
  402d40:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  402d44:	ldr	x0, [x1, #1072]
  402d48:	bl	4095b8 <ferror@plt+0x6c18>
  402d4c:	str	w0, [x26, #556]
  402d50:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  402d54:	tbz	w0, #31, 402b38 <ferror@plt+0x198>
  402d58:	ldr	x3, [x1, #1072]
  402d5c:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x640>
  402d60:	mov	w1, #0x0                   	// #0
  402d64:	add	x2, x2, #0x50
  402d68:	mov	w0, #0x0                   	// #0
  402d6c:	bl	4023e0 <error@plt>
  402d70:	str	wzr, [x26, #556]
  402d74:	b	402b38 <ferror@plt+0x198>
  402d78:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402d7c:	ldr	x0, [x0, #1072]
  402d80:	str	x0, [sp, #128]
  402d84:	b	402b38 <ferror@plt+0x198>
  402d88:	mov	w0, #0x1                   	// #1
  402d8c:	str	w0, [x26, #552]
  402d90:	b	402b38 <ferror@plt+0x198>
  402d94:	mov	w0, #0x1                   	// #1
  402d98:	str	w0, [x26, #548]
  402d9c:	b	402b38 <ferror@plt+0x198>
  402da0:	cmp	w3, #0x4e
  402da4:	adrp	x0, 41d000 <ferror@plt+0x1a660>
  402da8:	adrp	x3, 41d000 <ferror@plt+0x1a660>
  402dac:	add	x0, x0, #0xf78
  402db0:	add	x3, x3, #0xf70
  402db4:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x640>
  402db8:	csel	x3, x3, x0, eq  // eq = none
  402dbc:	add	x2, x2, #0x30
  402dc0:	mov	w1, #0x0                   	// #0
  402dc4:	mov	w0, #0x0                   	// #0
  402dc8:	bl	4023e0 <error@plt>
  402dcc:	b	402b38 <ferror@plt+0x198>
  402dd0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402dd4:	mov	x1, #0x0                   	// #0
  402dd8:	mov	w2, #0xa                   	// #10
  402ddc:	ldr	x0, [x0, #1072]
  402de0:	bl	402790 <strtol@plt>
  402de4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  402de8:	str	w0, [x1, #848]
  402dec:	b	402b38 <ferror@plt+0x198>
  402df0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402df4:	ldr	x0, [x0, #1072]
  402df8:	bl	411338 <ferror@plt+0xe998>
  402dfc:	b	402b38 <ferror@plt+0x198>
  402e00:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402e04:	mov	w2, #0xa                   	// #10
  402e08:	mov	x1, #0x0                   	// #0
  402e0c:	ldr	x0, [x0, #1072]
  402e10:	bl	402790 <strtol@plt>
  402e14:	cbnz	x0, 402ed8 <ferror@plt+0x538>
  402e18:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402e1c:	mov	x1, #0x1fd                 	// #509
  402e20:	str	x1, [x0, #856]
  402e24:	b	402b38 <ferror@plt+0x198>
  402e28:	mov	w0, #0x1                   	// #1
  402e2c:	str	w0, [x26, #544]
  402e30:	b	402b38 <ferror@plt+0x198>
  402e34:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402e38:	ldr	x0, [x0, #1072]
  402e3c:	str	x0, [sp, #136]
  402e40:	b	402b38 <ferror@plt+0x198>
  402e44:	ldrb	w0, [x26, #536]
  402e48:	cbnz	w0, 402ecc <ferror@plt+0x52c>
  402e4c:	mov	w0, #0x1                   	// #1
  402e50:	strb	w0, [x26, #536]
  402e54:	b	402b38 <ferror@plt+0x198>
  402e58:	adrp	x2, 41d000 <ferror@plt+0x1a660>
  402e5c:	mov	w1, #0x0                   	// #0
  402e60:	add	x2, x2, #0xff8
  402e64:	mov	w0, #0x0                   	// #0
  402e68:	bl	4023e0 <error@plt>
  402e6c:	b	402b38 <ferror@plt+0x198>
  402e70:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  402e74:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402e78:	adrp	x1, 41d000 <ferror@plt+0x1a660>
  402e7c:	add	x1, x1, #0xfd0
  402e80:	ldr	x2, [x2, #2904]
  402e84:	ldr	x0, [x0, #1064]
  402e88:	bl	41cdb0 <ferror@plt+0x1a410>
  402e8c:	mov	w0, #0x1                   	// #1
  402e90:	bl	4023c0 <exit@plt>
  402e94:	mov	x0, #0x18                  	// #24
  402e98:	str	w3, [sp, #156]
  402e9c:	bl	41ca30 <ferror@plt+0x1a090>
  402ea0:	str	xzr, [x0]
  402ea4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  402ea8:	ldr	w3, [sp, #156]
  402eac:	str	w3, [x0, #8]
  402eb0:	ldr	x1, [x1, #1072]
  402eb4:	str	x1, [x0, #16]
  402eb8:	cbz	x19, 402ee4 <ferror@plt+0x544>
  402ebc:	ldr	x1, [sp, #112]
  402ec0:	str	x0, [sp, #112]
  402ec4:	str	x0, [x1]
  402ec8:	b	402b38 <ferror@plt+0x198>
  402ecc:	mov	w0, #0x1                   	// #1
  402ed0:	str	w0, [x26, #540]
  402ed4:	b	402b38 <ferror@plt+0x198>
  402ed8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  402edc:	str	x0, [x1, #856]
  402ee0:	b	402b38 <ferror@plt+0x198>
  402ee4:	mov	x19, x0
  402ee8:	str	x0, [sp, #112]
  402eec:	b	402b38 <ferror@plt+0x198>
  402ef0:	ldr	x0, [sp, #104]
  402ef4:	cbz	x0, 402f04 <ferror@plt+0x564>
  402ef8:	bl	4097e8 <ferror@plt+0x6e48>
  402efc:	tst	w0, #0xff
  402f00:	b.eq	403100 <ferror@plt+0x760>  // b.none
  402f04:	bl	40d700 <ferror@plt+0xad60>
  402f08:	bl	40f760 <ferror@plt+0xcdc0>
  402f0c:	bl	411558 <ferror@plt+0xebb8>
  402f10:	ldr	x0, [sp, #120]
  402f14:	bl	408338 <ferror@plt+0x5998>
  402f18:	bl	411200 <ferror@plt+0xe860>
  402f1c:	ldr	x0, [sp, #128]
  402f20:	cbz	x0, 4030e4 <ferror@plt+0x744>
  402f24:	bl	40bfc8 <ferror@plt+0x9628>
  402f28:	cbnz	w25, 402fc0 <ferror@plt+0x620>
  402f2c:	cbz	x19, 40306c <ferror@plt+0x6cc>
  402f30:	ldr	x0, [sp, #104]
  402f34:	adrp	x22, 41e000 <_obstack_memory_used@@Base+0x640>
  402f38:	add	x22, x22, #0xbb0
  402f3c:	adrp	x24, 41e000 <_obstack_memory_used@@Base+0x640>
  402f40:	cmp	x0, #0x0
  402f44:	add	x24, x24, #0xb90
  402f48:	csel	x22, x0, x22, ne  // ne = any
  402f4c:	mov	w23, #0x0                   	// #0
  402f50:	mov	w25, #0x1                   	// #1
  402f54:	b	402f8c <ferror@plt+0x5ec>
  402f58:	cmp	w1, #0x44
  402f5c:	b.eq	40302c <ferror@plt+0x68c>  // b.none
  402f60:	cmp	w1, #0x55
  402f64:	b.ne	402fe0 <ferror@plt+0x640>  // b.any
  402f68:	ldr	x0, [x19, #16]
  402f6c:	mov	w1, #0x2                   	// #2
  402f70:	bl	411620 <ferror@plt+0xec80>
  402f74:	nop
  402f78:	ldr	x27, [x19]
  402f7c:	mov	x0, x19
  402f80:	bl	4027c0 <free@plt>
  402f84:	cbz	x27, 403070 <ferror@plt+0x6d0>
  402f88:	mov	x19, x27
  402f8c:	ldr	w1, [x19, #8]
  402f90:	cmp	w1, #0x73
  402f94:	b.eq	403064 <ferror@plt+0x6c4>  // b.none
  402f98:	b.le	402f58 <ferror@plt+0x5b8>
  402f9c:	cmp	w1, #0x74
  402fa0:	b.ne	402ff8 <ferror@plt+0x658>  // b.any
  402fa4:	ldr	x0, [x19, #16]
  402fa8:	mov	w1, #0x1                   	// #1
  402fac:	bl	411620 <ferror@plt+0xec80>
  402fb0:	ldrb	w1, [x0, #8]
  402fb4:	orr	w1, w1, #0x1
  402fb8:	strb	w1, [x0, #8]
  402fbc:	b	402f78 <ferror@plt+0x5d8>
  402fc0:	mov	x1, #0x1                   	// #1
  402fc4:	mov	w0, #0x2                   	// #2
  402fc8:	bl	4024e0 <signal@plt>
  402fcc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  402fd0:	mov	x1, #0x0                   	// #0
  402fd4:	ldr	x0, [x0, #1088]
  402fd8:	bl	402420 <setbuf@plt>
  402fdc:	b	402f2c <ferror@plt+0x58c>
  402fe0:	cmp	w1, #0x1
  402fe4:	b.ne	403130 <ferror@plt+0x790>  // b.any
  402fe8:	ldr	x0, [x19, #16]
  402fec:	mov	w23, w1
  402ff0:	bl	403328 <ferror@plt+0x988>
  402ff4:	b	402f78 <ferror@plt+0x5d8>
  402ff8:	cmp	w1, #0x100
  402ffc:	b.ne	403130 <ferror@plt+0x790>  // b.any
  403000:	ldr	x0, [x19, #16]
  403004:	bl	4097e8 <ferror@plt+0x6e48>
  403008:	tst	w0, #0xff
  40300c:	b.ne	402f78 <ferror@plt+0x5d8>  // b.any
  403010:	bl	402920 <__errno_location@plt>
  403014:	ldr	w1, [x0]
  403018:	ldr	w0, [x26, #540]
  40301c:	mov	x3, x22
  403020:	mov	x2, x24
  403024:	bl	4033d0 <ferror@plt+0xa30>
  403028:	b	402f78 <ferror@plt+0x5d8>
  40302c:	ldr	x0, [x19, #16]
  403030:	bl	41cbb8 <ferror@plt+0x1a218>
  403034:	mov	x27, x0
  403038:	mov	w1, #0x3d                  	// #61
  40303c:	bl	402810 <strchr@plt>
  403040:	mov	x1, x0
  403044:	cbz	x0, 40304c <ferror@plt+0x6ac>
  403048:	strb	wzr, [x1], #1
  40304c:	mov	w2, #0x1                   	// #1
  403050:	mov	x0, x27
  403054:	bl	408418 <ferror@plt+0x5a78>
  403058:	mov	x0, x27
  40305c:	bl	4027c0 <free@plt>
  403060:	b	402f78 <ferror@plt+0x5d8>
  403064:	str	w25, [x26, #564]
  403068:	b	402f78 <ferror@plt+0x5d8>
  40306c:	mov	w23, #0x0                   	// #0
  403070:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  403074:	cmp	w23, #0x0
  403078:	ldr	w0, [x19, #1080]
  40307c:	ccmp	w0, w21, #0x0, eq  // eq = none
  403080:	b.eq	403120 <ferror@plt+0x780>  // b.none
  403084:	add	x19, x19, #0x438
  403088:	cmp	w0, w21
  40308c:	b.ge	4030b4 <ferror@plt+0x714>  // b.tcont
  403090:	ldr	x0, [x20, w0, sxtw #3]
  403094:	bl	403328 <ferror@plt+0x988>
  403098:	ldr	w0, [x19]
  40309c:	add	w0, w0, #0x1
  4030a0:	str	w0, [x19]
  4030a4:	cmp	w0, w21
  4030a8:	b.lt	403090 <ferror@plt+0x6f0>  // b.tstop
  4030ac:	b	4030b4 <ferror@plt+0x714>
  4030b0:	bl	40edb0 <ferror@plt+0xc410>
  4030b4:	bl	40d558 <ferror@plt+0xabb8>
  4030b8:	tst	w0, #0xff
  4030bc:	b.ne	4030b0 <ferror@plt+0x710>  // b.any
  4030c0:	mov	x0, #0x0                   	// #0
  4030c4:	bl	4097e8 <ferror@plt+0x6e48>
  4030c8:	ldr	x0, [sp, #136]
  4030cc:	cbz	x0, 4030f0 <ferror@plt+0x750>
  4030d0:	bl	40bc10 <ferror@plt+0x9270>
  4030d4:	bl	40f7d8 <ferror@plt+0xce38>
  4030d8:	bl	4083e0 <ferror@plt+0x5a40>
  4030dc:	ldr	w0, [x28, #3520]
  4030e0:	bl	4023c0 <exit@plt>
  4030e4:	bl	408990 <ferror@plt+0x5ff0>
  4030e8:	cbz	w25, 402f2c <ferror@plt+0x58c>
  4030ec:	b	402fc0 <ferror@plt+0x620>
  4030f0:	mov	w0, #0x0                   	// #0
  4030f4:	bl	410a28 <ferror@plt+0xe088>
  4030f8:	bl	410ef0 <ferror@plt+0xe550>
  4030fc:	b	4030d4 <ferror@plt+0x734>
  403100:	bl	402920 <__errno_location@plt>
  403104:	ldr	w1, [x0]
  403108:	ldr	w0, [x26, #540]
  40310c:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x640>
  403110:	ldr	x3, [sp, #104]
  403114:	add	x2, x2, #0xb90
  403118:	bl	4033d0 <ferror@plt+0xa30>
  40311c:	b	402f04 <ferror@plt+0x564>
  403120:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  403124:	add	x0, x0, #0xbe8
  403128:	bl	403328 <ferror@plt+0x988>
  40312c:	b	4030b4 <ferror@plt+0x714>
  403130:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x640>
  403134:	add	x2, x2, #0xbb8
  403138:	mov	w1, #0x0                   	// #0
  40313c:	mov	w0, #0x0                   	// #0
  403140:	bl	4033d0 <ferror@plt+0xa30>
  403144:	bl	4026d0 <abort@plt>
  403148:	mov	x29, #0x0                   	// #0
  40314c:	mov	x30, #0x0                   	// #0
  403150:	mov	x5, x0
  403154:	ldr	x1, [sp]
  403158:	add	x2, sp, #0x8
  40315c:	mov	x6, sp
  403160:	movz	x0, #0x0, lsl #48
  403164:	movk	x0, #0x0, lsl #32
  403168:	movk	x0, #0x40, lsl #16
  40316c:	movk	x0, #0x29b0
  403170:	movz	x3, #0x0, lsl #48
  403174:	movk	x3, #0x0, lsl #32
  403178:	movk	x3, #0x41, lsl #16
  40317c:	movk	x3, #0xde80
  403180:	movz	x4, #0x0, lsl #48
  403184:	movk	x4, #0x0, lsl #32
  403188:	movk	x4, #0x41, lsl #16
  40318c:	movk	x4, #0xdf00
  403190:	bl	4025a0 <__libc_start_main@plt>
  403194:	bl	4026d0 <abort@plt>
  403198:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x19640>
  40319c:	ldr	x0, [x0, #4064]
  4031a0:	cbz	x0, 4031a8 <ferror@plt+0x808>
  4031a4:	b	402690 <__gmon_start__@plt>
  4031a8:	ret
  4031ac:	nop
  4031b0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4031b4:	add	x0, x0, #0x418
  4031b8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4031bc:	add	x1, x1, #0x418
  4031c0:	cmp	x1, x0
  4031c4:	b.eq	4031dc <ferror@plt+0x83c>  // b.none
  4031c8:	adrp	x1, 41d000 <ferror@plt+0x1a660>
  4031cc:	ldr	x1, [x1, #3896]
  4031d0:	cbz	x1, 4031dc <ferror@plt+0x83c>
  4031d4:	mov	x16, x1
  4031d8:	br	x16
  4031dc:	ret
  4031e0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4031e4:	add	x0, x0, #0x418
  4031e8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4031ec:	add	x1, x1, #0x418
  4031f0:	sub	x1, x1, x0
  4031f4:	lsr	x2, x1, #63
  4031f8:	add	x1, x2, x1, asr #3
  4031fc:	cmp	xzr, x1, asr #1
  403200:	asr	x1, x1, #1
  403204:	b.eq	40321c <ferror@plt+0x87c>  // b.none
  403208:	adrp	x2, 41d000 <ferror@plt+0x1a660>
  40320c:	ldr	x2, [x2, #3904]
  403210:	cbz	x2, 40321c <ferror@plt+0x87c>
  403214:	mov	x16, x2
  403218:	br	x16
  40321c:	ret
  403220:	stp	x29, x30, [sp, #-32]!
  403224:	mov	x29, sp
  403228:	str	x19, [sp, #16]
  40322c:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  403230:	ldrb	w0, [x19, #1120]
  403234:	cbnz	w0, 403244 <ferror@plt+0x8a4>
  403238:	bl	4031b0 <ferror@plt+0x810>
  40323c:	mov	w0, #0x1                   	// #1
  403240:	strb	w0, [x19, #1120]
  403244:	ldr	x19, [sp, #16]
  403248:	ldp	x29, x30, [sp], #32
  40324c:	ret
  403250:	b	4031e0 <ferror@plt+0x840>
  403254:	nop
  403258:	cbnz	w0, 403260 <ferror@plt+0x8c0>
  40325c:	ret
  403260:	stp	x29, x30, [sp, #-48]!
  403264:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  403268:	mov	x29, sp
  40326c:	stp	x19, x20, [sp, #16]
  403270:	sxtw	x19, w0
  403274:	ldr	x20, [x1, #2904]
  403278:	stp	x21, x22, [sp, #32]
  40327c:	adrp	x21, 41d000 <ferror@plt+0x1a660>
  403280:	mov	x0, x20
  403284:	bl	402390 <strlen@plt>
  403288:	mov	x1, x20
  40328c:	mov	x2, x0
  403290:	add	x21, x21, #0xf48
  403294:	mov	w0, #0x2                   	// #2
  403298:	bl	4026a0 <write@plt>
  40329c:	mov	x2, #0x2                   	// #2
  4032a0:	mov	x1, x21
  4032a4:	mov	w0, w2
  4032a8:	bl	4026a0 <write@plt>
  4032ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4032b0:	add	x20, x0, #0x470
  4032b4:	add	x20, x20, #0x10
  4032b8:	ldr	x22, [x0, #1136]
  4032bc:	ldr	x0, [x0, #1136]
  4032c0:	bl	402390 <strlen@plt>
  4032c4:	mov	x2, x0
  4032c8:	mov	x1, x22
  4032cc:	mov	w0, #0x2                   	// #2
  4032d0:	bl	4026a0 <write@plt>
  4032d4:	ldr	x0, [x20, x19, lsl #3]
  4032d8:	cbz	x0, 403308 <ferror@plt+0x968>
  4032dc:	mov	x1, x21
  4032e0:	mov	x2, #0x2                   	// #2
  4032e4:	mov	w0, w2
  4032e8:	bl	4026a0 <write@plt>
  4032ec:	ldr	x21, [x20, x19, lsl #3]
  4032f0:	ldr	x0, [x20, x19, lsl #3]
  4032f4:	bl	402390 <strlen@plt>
  4032f8:	mov	x2, x0
  4032fc:	mov	x1, x21
  403300:	mov	w0, #0x2                   	// #2
  403304:	bl	4026a0 <write@plt>
  403308:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  40330c:	add	x1, x1, #0x238
  403310:	mov	x2, #0x1                   	// #1
  403314:	mov	w0, #0x2                   	// #2
  403318:	bl	4026a0 <write@plt>
  40331c:	mov	w0, #0x2                   	// #2
  403320:	bl	402370 <_exit@plt>
  403324:	nop
  403328:	stp	x29, x30, [sp, #-48]!
  40332c:	mov	x29, sp
  403330:	str	x19, [sp, #16]
  403334:	mov	x19, x0
  403338:	ldrb	w0, [x0]
  40333c:	cmp	w0, #0x2d
  403340:	b.ne	403374 <ferror@plt+0x9d4>  // b.any
  403344:	ldrb	w0, [x19, #1]
  403348:	cbnz	w0, 403374 <ferror@plt+0x9d4>
  40334c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  403350:	adrp	x1, 41d000 <ferror@plt+0x1a660>
  403354:	mov	w2, #0x0                   	// #0
  403358:	add	x1, x1, #0xf50
  40335c:	ldr	x0, [x0, #1096]
  403360:	bl	40cc68 <ferror@plt+0xa2c8>
  403364:	bl	40edb0 <ferror@plt+0xc410>
  403368:	ldr	x19, [sp, #16]
  40336c:	ldp	x29, x30, [sp], #48
  403370:	ret
  403374:	add	x1, sp, #0x28
  403378:	mov	x0, x19
  40337c:	bl	4113d8 <ferror@plt+0xea38>
  403380:	cbz	x0, 40339c <ferror@plt+0x9fc>
  403384:	ldr	x1, [sp, #40]
  403388:	mov	w2, #0x1                   	// #1
  40338c:	bl	40cc68 <ferror@plt+0xa2c8>
  403390:	ldr	x0, [sp, #40]
  403394:	bl	4027c0 <free@plt>
  403398:	b	403364 <ferror@plt+0x9c4>
  40339c:	bl	402920 <__errno_location@plt>
  4033a0:	mov	x1, x0
  4033a4:	mov	x3, x19
  4033a8:	mov	w0, #0x0                   	// #0
  4033ac:	adrp	x2, 41d000 <ferror@plt+0x1a660>
  4033b0:	add	x2, x2, #0xf58
  4033b4:	ldr	w1, [x1]
  4033b8:	bl	4023e0 <error@plt>
  4033bc:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4033c0:	mov	w1, #0x1                   	// #1
  4033c4:	str	w1, [x0, #3520]
  4033c8:	b	403368 <ferror@plt+0x9c8>
  4033cc:	nop
  4033d0:	stp	x29, x30, [sp, #-256]!
  4033d4:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4033d8:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4033dc:	mov	x29, sp
  4033e0:	ldr	x13, [x9, #3552]
  4033e4:	add	x9, sp, #0x100
  4033e8:	ldr	w8, [x8, #3528]
  4033ec:	add	x12, sp, #0xd0
  4033f0:	mov	w11, #0xffffffd8            	// #-40
  4033f4:	mov	w10, #0xffffff80            	// #-128
  4033f8:	str	x9, [sp, #48]
  4033fc:	mov	x9, x2
  403400:	add	x2, sp, #0x100
  403404:	str	x2, [sp, #56]
  403408:	str	x12, [sp, #64]
  40340c:	cmp	w8, #0x0
  403410:	stp	w11, w10, [sp, #72]
  403414:	csel	x2, x13, xzr, ne  // ne = any
  403418:	ldp	x12, x13, [sp, #48]
  40341c:	stp	x12, x13, [sp, #16]
  403420:	ldp	x10, x11, [sp, #64]
  403424:	stp	x10, x11, [sp, #32]
  403428:	str	q0, [sp, #80]
  40342c:	str	q1, [sp, #96]
  403430:	str	q2, [sp, #112]
  403434:	str	q3, [sp, #128]
  403438:	str	q4, [sp, #144]
  40343c:	str	q5, [sp, #160]
  403440:	str	q6, [sp, #176]
  403444:	str	q7, [sp, #192]
  403448:	stp	x3, x4, [sp, #216]
  40344c:	mov	w3, w8
  403450:	mov	x4, x9
  403454:	stp	x5, x6, [sp, #232]
  403458:	add	x5, sp, #0x10
  40345c:	str	x7, [sp, #248]
  403460:	bl	41b9c8 <ferror@plt+0x19028>
  403464:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  403468:	ldrb	w0, [x0, #1672]
  40346c:	cbz	w0, 403484 <ferror@plt+0xae4>
  403470:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  403474:	ldr	w1, [x0, #3520]
  403478:	cbnz	w1, 403484 <ferror@plt+0xae4>
  40347c:	mov	w1, #0x1                   	// #1
  403480:	str	w1, [x0, #3520]
  403484:	ldp	x29, x30, [sp], #256
  403488:	ret
  40348c:	nop
  403490:	stp	x29, x30, [sp, #-240]!
  403494:	mov	w9, #0xffffffe8            	// #-24
  403498:	mov	w8, #0xffffff80            	// #-128
  40349c:	mov	x29, sp
  4034a0:	add	x10, sp, #0xd0
  4034a4:	add	x11, sp, #0xf0
  4034a8:	stp	x11, x11, [sp, #48]
  4034ac:	cmp	w3, #0x0
  4034b0:	csel	x2, x2, xzr, ne  // ne = any
  4034b4:	str	x10, [sp, #64]
  4034b8:	stp	w9, w8, [sp, #72]
  4034bc:	ldp	x10, x11, [sp, #48]
  4034c0:	stp	x10, x11, [sp, #16]
  4034c4:	ldp	x8, x9, [sp, #64]
  4034c8:	stp	x8, x9, [sp, #32]
  4034cc:	str	q0, [sp, #80]
  4034d0:	str	q1, [sp, #96]
  4034d4:	str	q2, [sp, #112]
  4034d8:	str	q3, [sp, #128]
  4034dc:	str	q4, [sp, #144]
  4034e0:	str	q5, [sp, #160]
  4034e4:	str	q6, [sp, #176]
  4034e8:	str	q7, [sp, #192]
  4034ec:	stp	x5, x6, [sp, #216]
  4034f0:	add	x5, sp, #0x10
  4034f4:	str	x7, [sp, #232]
  4034f8:	bl	41b9c8 <ferror@plt+0x19028>
  4034fc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  403500:	ldrb	w0, [x0, #1672]
  403504:	cbz	w0, 40351c <ferror@plt+0xb7c>
  403508:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40350c:	ldr	w1, [x0, #3520]
  403510:	cbnz	w1, 40351c <ferror@plt+0xb7c>
  403514:	mov	w1, #0x1                   	// #1
  403518:	str	w1, [x0, #3520]
  40351c:	ldp	x29, x30, [sp], #240
  403520:	ret
  403524:	nop
  403528:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40352c:	cmp	w1, #0x0
  403530:	ldr	w0, [x0, #1676]
  403534:	b.le	403550 <ferror@plt+0xbb0>
  403538:	ldr	x1, [x2]
  40353c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  403540:	add	x2, x2, #0x1d8
  403544:	ldr	x3, [x1, #8]
  403548:	mov	w1, #0x0                   	// #0
  40354c:	b	4033d0 <ferror@plt+0xa30>
  403550:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0x640>
  403554:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  403558:	add	x3, x3, #0xe8
  40355c:	add	x2, x2, #0x1d8
  403560:	mov	w1, #0x0                   	// #0
  403564:	b	4033d0 <ferror@plt+0xa30>
  403568:	stp	x29, x30, [sp, #-80]!
  40356c:	mov	x29, sp
  403570:	stp	x19, x20, [sp, #16]
  403574:	mov	x19, x1
  403578:	stp	x21, x22, [sp, #32]
  40357c:	mov	x21, x0
  403580:	ldrb	w1, [x0]
  403584:	ldp	x2, x0, [x19, #24]
  403588:	cbz	w1, 403680 <ferror@plt+0xce0>
  40358c:	mov	w20, #0x0                   	// #0
  403590:	stp	x23, x24, [sp, #48]
  403594:	str	x25, [sp, #64]
  403598:	b	4035d0 <ferror@plt+0xc30>
  40359c:	cmp	x0, x2
  4035a0:	b.eq	4036e4 <ferror@plt+0xd44>  // b.none
  4035a4:	add	x0, x2, #0x1
  4035a8:	str	x0, [x19, #24]
  4035ac:	mov	x0, x22
  4035b0:	mov	x22, x21
  4035b4:	ldrb	w1, [x21]
  4035b8:	strb	w1, [x2]
  4035bc:	ldrb	w20, [x21]
  4035c0:	mov	x21, x0
  4035c4:	ldp	x2, x0, [x19, #24]
  4035c8:	ldrb	w1, [x22, #1]
  4035cc:	cbz	w1, 403678 <ferror@plt+0xcd8>
  4035d0:	cmp	w1, #0x2d
  4035d4:	add	x22, x21, #0x1
  4035d8:	ccmp	w20, #0x0, #0x4, eq  // eq = none
  4035dc:	b.eq	40359c <ferror@plt+0xbfc>  // b.none
  4035e0:	ldrb	w25, [x21, #1]
  4035e4:	cbz	w25, 4037a0 <ferror@plt+0xe00>
  4035e8:	cmp	w25, w20
  4035ec:	add	x23, x21, #0x2
  4035f0:	b.cs	4036f8 <ferror@plt+0xd58>  // b.hs, b.nlast
  4035f4:	sub	w20, w20, #0x1
  4035f8:	and	w24, w20, #0xff
  4035fc:	cmp	w25, w20, uxtb
  403600:	b.ls	403624 <ferror@plt+0xc84>  // b.plast
  403604:	b	403780 <ferror@plt+0xde0>
  403608:	str	x3, [x19, #24]
  40360c:	and	w0, w1, #0xff
  403610:	strb	w24, [x2]
  403614:	cmp	w25, w24
  403618:	b.eq	403660 <ferror@plt+0xcc0>  // b.none
  40361c:	mov	w24, w0
  403620:	ldp	x2, x0, [x19, #24]
  403624:	add	x3, x2, #0x1
  403628:	sub	w1, w24, #0x1
  40362c:	cmp	x0, x2
  403630:	b.ne	403608 <ferror@plt+0xc68>  // b.any
  403634:	mov	x0, x19
  403638:	mov	x1, #0x1                   	// #1
  40363c:	bl	41d788 <_obstack_newchunk@@Base>
  403640:	ldr	x1, [x19, #24]
  403644:	sub	w0, w24, #0x1
  403648:	cmp	w25, w24
  40364c:	and	w0, w0, #0xff
  403650:	add	x2, x1, #0x1
  403654:	str	x2, [x19, #24]
  403658:	strb	w24, [x1]
  40365c:	b.ne	40361c <ferror@plt+0xc7c>  // b.any
  403660:	ldp	x2, x0, [x19, #24]
  403664:	ldrb	w20, [x21, #1]
  403668:	mov	x21, x23
  40366c:	ldrb	w1, [x22, #1]
  403670:	cbnz	w1, 4035d0 <ferror@plt+0xc30>
  403674:	nop
  403678:	ldp	x23, x24, [sp, #48]
  40367c:	ldr	x25, [sp, #64]
  403680:	cmp	x0, x2
  403684:	b.eq	40378c <ferror@plt+0xdec>  // b.none
  403688:	add	x0, x2, #0x1
  40368c:	str	x0, [x19, #24]
  403690:	strb	wzr, [x2]
  403694:	ldp	x0, x3, [x19, #16]
  403698:	cmp	x3, x0
  40369c:	b.eq	403770 <ferror@plt+0xdd0>  // b.none
  4036a0:	ldr	x1, [x19, #48]
  4036a4:	ldr	x2, [x19, #8]
  4036a8:	add	x3, x3, x1
  4036ac:	ldr	x4, [x19, #32]
  4036b0:	bic	x1, x3, x1
  4036b4:	str	x1, [x19, #24]
  4036b8:	sub	x3, x1, x2
  4036bc:	sub	x2, x4, x2
  4036c0:	cmp	x3, x2
  4036c4:	b.ls	4036d0 <ferror@plt+0xd30>  // b.plast
  4036c8:	mov	x1, x4
  4036cc:	str	x4, [x19, #24]
  4036d0:	ldp	x21, x22, [sp, #32]
  4036d4:	str	x1, [x19, #16]
  4036d8:	ldp	x19, x20, [sp, #16]
  4036dc:	ldp	x29, x30, [sp], #80
  4036e0:	ret
  4036e4:	mov	x0, x19
  4036e8:	mov	x1, #0x1                   	// #1
  4036ec:	bl	41d788 <_obstack_newchunk@@Base>
  4036f0:	ldr	x2, [x19, #24]
  4036f4:	b	4035a4 <ferror@plt+0xc04>
  4036f8:	add	w20, w20, #0x1
  4036fc:	and	w20, w20, #0xff
  403700:	b.hi	403724 <ferror@plt+0xd84>  // b.pmore
  403704:	b	403780 <ferror@plt+0xde0>
  403708:	str	x3, [x19, #24]
  40370c:	and	w0, w1, #0xff
  403710:	strb	w20, [x2]
  403714:	cmp	w25, w20
  403718:	b.eq	403660 <ferror@plt+0xcc0>  // b.none
  40371c:	mov	w20, w0
  403720:	ldp	x2, x0, [x19, #24]
  403724:	add	x3, x2, #0x1
  403728:	add	w1, w20, #0x1
  40372c:	cmp	x0, x2
  403730:	b.ne	403708 <ferror@plt+0xd68>  // b.any
  403734:	mov	x0, x19
  403738:	mov	x1, #0x1                   	// #1
  40373c:	bl	41d788 <_obstack_newchunk@@Base>
  403740:	ldr	x1, [x19, #24]
  403744:	add	w0, w20, #0x1
  403748:	cmp	w25, w20
  40374c:	and	w0, w0, #0xff
  403750:	add	x2, x1, #0x1
  403754:	str	x2, [x19, #24]
  403758:	strb	w20, [x1]
  40375c:	b.ne	40371c <ferror@plt+0xd7c>  // b.any
  403760:	ldrb	w20, [x21, #1]
  403764:	mov	x21, x23
  403768:	ldp	x2, x0, [x19, #24]
  40376c:	b	40366c <ferror@plt+0xccc>
  403770:	ldrb	w1, [x19, #80]
  403774:	orr	w1, w1, #0x2
  403778:	strb	w1, [x19, #80]
  40377c:	b	4036a0 <ferror@plt+0xd00>
  403780:	mov	x21, x23
  403784:	mov	w20, w25
  403788:	b	4035c8 <ferror@plt+0xc28>
  40378c:	mov	x0, x19
  403790:	mov	x1, #0x1                   	// #1
  403794:	bl	41d788 <_obstack_newchunk@@Base>
  403798:	ldr	x2, [x19, #24]
  40379c:	b	403688 <ferror@plt+0xce8>
  4037a0:	cmp	x0, x2
  4037a4:	b.eq	4037c8 <ferror@plt+0xe28>  // b.none
  4037a8:	add	x0, x2, #0x1
  4037ac:	str	x0, [x19, #24]
  4037b0:	mov	w0, #0x2d                  	// #45
  4037b4:	strb	w0, [x2]
  4037b8:	ldp	x2, x0, [x19, #24]
  4037bc:	ldp	x23, x24, [sp, #48]
  4037c0:	ldr	x25, [sp, #64]
  4037c4:	b	403680 <ferror@plt+0xce0>
  4037c8:	mov	x0, x19
  4037cc:	mov	x1, #0x1                   	// #1
  4037d0:	bl	41d788 <_obstack_newchunk@@Base>
  4037d4:	ldr	x2, [x19, #24]
  4037d8:	b	4037a8 <ferror@plt+0xe08>
  4037dc:	nop
  4037e0:	stp	x29, x30, [sp, #-112]!
  4037e4:	mov	x29, sp
  4037e8:	stp	x19, x20, [sp, #16]
  4037ec:	mov	x20, x2
  4037f0:	stp	x21, x22, [sp, #32]
  4037f4:	and	w22, w4, #0xff
  4037f8:	stp	x23, x24, [sp, #48]
  4037fc:	mov	w23, w1
  403800:	mov	x24, x3
  403804:	stp	x27, x28, [sp, #80]
  403808:	mov	x27, x0
  40380c:	mov	x0, x3
  403810:	bl	402390 <strlen@plt>
  403814:	cmp	w23, #0x1
  403818:	b.le	403984 <ferror@plt+0xfe4>
  40381c:	sub	w23, w23, #0x2
  403820:	stp	x25, x26, [sp, #64]
  403824:	adrp	x26, 443000 <__progname@@GLIBC_2.17+0xaba8>
  403828:	ldr	x19, [x27, #24]
  40382c:	adrp	x25, 443000 <__progname@@GLIBC_2.17+0xaba8>
  403830:	add	x26, x26, #0xdd0
  403834:	add	x25, x25, #0xe08
  403838:	mov	x21, x0
  40383c:	add	x0, x20, w23, uxtw #3
  403840:	str	x0, [sp, #104]
  403844:	nop
  403848:	cbz	w22, 40387c <ferror@plt+0xedc>
  40384c:	ldr	x1, [x27, #32]
  403850:	mov	x0, x19
  403854:	ldr	x28, [x26, #8]
  403858:	sub	x1, x1, x19
  40385c:	cmp	x28, x1
  403860:	b.hi	40396c <ferror@plt+0xfcc>  // b.pmore
  403864:	ldr	x1, [x26]
  403868:	mov	x2, x28
  40386c:	bl	402350 <memcpy@plt>
  403870:	ldr	x19, [x27, #24]
  403874:	add	x19, x19, x28
  403878:	str	x19, [x27, #24]
  40387c:	ldr	x0, [x20, #8]
  403880:	ldr	x23, [x0, #8]
  403884:	mov	x0, x23
  403888:	bl	402390 <strlen@plt>
  40388c:	ldr	x2, [x27, #32]
  403890:	mov	x28, x0
  403894:	sub	x2, x2, x19
  403898:	cmp	x0, x2
  40389c:	b.hi	403928 <ferror@plt+0xf88>  // b.pmore
  4038a0:	mov	x1, x23
  4038a4:	mov	x0, x19
  4038a8:	mov	x2, x28
  4038ac:	bl	402350 <memcpy@plt>
  4038b0:	ldr	x1, [x27, #24]
  4038b4:	add	x0, x1, x28
  4038b8:	str	x0, [x27, #24]
  4038bc:	cbz	w22, 4038ec <ferror@plt+0xf4c>
  4038c0:	ldr	x1, [x27, #32]
  4038c4:	ldr	x19, [x25, #8]
  4038c8:	sub	x1, x1, x0
  4038cc:	cmp	x19, x1
  4038d0:	b.hi	403958 <ferror@plt+0xfb8>  // b.pmore
  4038d4:	ldr	x1, [x25]
  4038d8:	mov	x2, x19
  4038dc:	bl	402350 <memcpy@plt>
  4038e0:	ldr	x0, [x27, #24]
  4038e4:	add	x0, x0, x19
  4038e8:	str	x0, [x27, #24]
  4038ec:	ldr	x1, [sp, #104]
  4038f0:	cmp	x1, x20
  4038f4:	b.eq	403980 <ferror@plt+0xfe0>  // b.none
  4038f8:	ldr	x1, [x27, #32]
  4038fc:	sub	x1, x1, x0
  403900:	cmp	x21, x1
  403904:	b.hi	403944 <ferror@plt+0xfa4>  // b.pmore
  403908:	mov	x2, x21
  40390c:	mov	x1, x24
  403910:	bl	402350 <memcpy@plt>
  403914:	add	x20, x20, #0x8
  403918:	ldr	x19, [x27, #24]
  40391c:	add	x19, x19, x21
  403920:	str	x19, [x27, #24]
  403924:	b	403848 <ferror@plt+0xea8>
  403928:	mov	x1, x0
  40392c:	mov	x0, x27
  403930:	bl	41d788 <_obstack_newchunk@@Base>
  403934:	ldr	x0, [x20, #8]
  403938:	ldr	x19, [x27, #24]
  40393c:	ldr	x23, [x0, #8]
  403940:	b	4038a0 <ferror@plt+0xf00>
  403944:	mov	x0, x27
  403948:	mov	x1, x21
  40394c:	bl	41d788 <_obstack_newchunk@@Base>
  403950:	ldr	x0, [x27, #24]
  403954:	b	403908 <ferror@plt+0xf68>
  403958:	mov	x0, x27
  40395c:	mov	x1, x19
  403960:	bl	41d788 <_obstack_newchunk@@Base>
  403964:	ldr	x0, [x27, #24]
  403968:	b	4038d4 <ferror@plt+0xf34>
  40396c:	mov	x0, x27
  403970:	mov	x1, x28
  403974:	bl	41d788 <_obstack_newchunk@@Base>
  403978:	ldr	x0, [x27, #24]
  40397c:	b	403864 <ferror@plt+0xec4>
  403980:	ldp	x25, x26, [sp, #64]
  403984:	ldp	x19, x20, [sp, #16]
  403988:	ldp	x21, x22, [sp, #32]
  40398c:	ldp	x23, x24, [sp, #48]
  403990:	ldp	x27, x28, [sp, #80]
  403994:	ldp	x29, x30, [sp], #112
  403998:	ret
  40399c:	nop
  4039a0:	stp	x29, x30, [sp, #-96]!
  4039a4:	mov	x29, sp
  4039a8:	stp	x19, x20, [sp, #16]
  4039ac:	ldr	x19, [x0, #24]
  4039b0:	stp	x21, x22, [sp, #32]
  4039b4:	mov	x21, x2
  4039b8:	mov	x22, x3
  4039bc:	stp	x23, x24, [sp, #48]
  4039c0:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  4039c4:	mov	x23, x1
  4039c8:	add	x24, x24, #0x6b0
  4039cc:	stp	x25, x26, [sp, #64]
  4039d0:	adrp	x25, 41f000 <_obstack_memory_used@@Base+0x1640>
  4039d4:	add	x25, x25, #0x210
  4039d8:	stp	x27, x28, [sp, #80]
  4039dc:	mov	x27, x0
  4039e0:	mov	x0, x21
  4039e4:	mov	w1, #0x5c                  	// #92
  4039e8:	bl	402810 <strchr@plt>
  4039ec:	mov	x28, x0
  4039f0:	cbz	x0, 403a98 <ferror@plt+0x10f8>
  4039f4:	ldr	x1, [x27, #32]
  4039f8:	sub	x20, x28, x21
  4039fc:	mov	x0, x19
  403a00:	sub	x1, x1, x19
  403a04:	cmp	x20, x1
  403a08:	b.hi	403b64 <ferror@plt+0x11c4>  // b.pmore
  403a0c:	mov	x2, x20
  403a10:	mov	x1, x21
  403a14:	bl	402350 <memcpy@plt>
  403a18:	ldr	x19, [x27, #24]
  403a1c:	add	x0, x19, x20
  403a20:	str	x0, [x27, #24]
  403a24:	mov	x19, x0
  403a28:	ldrb	w20, [x28, #1]
  403a2c:	cmp	w20, #0x30
  403a30:	b.eq	403b78 <ferror@plt+0x11d8>  // b.none
  403a34:	b.hi	403aec <ferror@plt+0x114c>  // b.pmore
  403a38:	cbz	w20, 403bc4 <ferror@plt+0x1224>
  403a3c:	cmp	w20, #0x26
  403a40:	b.ne	403ba0 <ferror@plt+0x1200>  // b.any
  403a44:	ldp	x1, x3, [x22, #8]
  403a48:	ldr	x2, [x27, #32]
  403a4c:	sub	x2, x2, x0
  403a50:	ldr	w1, [x1]
  403a54:	ldr	w26, [x3]
  403a58:	sub	w26, w26, w1
  403a5c:	cmp	x2, w26, sxtw
  403a60:	sxtw	x26, w26
  403a64:	b.cc	403bf4 <ferror@plt+0x1254>  // b.lo, b.ul, b.last
  403a68:	add	x1, x23, w1, sxtw
  403a6c:	mov	x2, x26
  403a70:	bl	402350 <memcpy@plt>
  403a74:	add	x21, x28, #0x2
  403a78:	ldr	x19, [x27, #24]
  403a7c:	mov	x0, x21
  403a80:	mov	w1, #0x5c                  	// #92
  403a84:	add	x19, x19, x26
  403a88:	str	x19, [x27, #24]
  403a8c:	bl	402810 <strchr@plt>
  403a90:	mov	x28, x0
  403a94:	cbnz	x0, 4039f4 <ferror@plt+0x1054>
  403a98:	mov	x0, x21
  403a9c:	bl	402390 <strlen@plt>
  403aa0:	ldr	x1, [x27, #32]
  403aa4:	mov	x20, x0
  403aa8:	sub	x1, x1, x19
  403aac:	cmp	x0, x1
  403ab0:	b.hi	403c34 <ferror@plt+0x1294>  // b.pmore
  403ab4:	mov	x1, x21
  403ab8:	mov	x2, x20
  403abc:	mov	x0, x19
  403ac0:	bl	402350 <memcpy@plt>
  403ac4:	ldr	x0, [x27, #24]
  403ac8:	ldp	x21, x22, [sp, #32]
  403acc:	add	x0, x0, x20
  403ad0:	ldp	x19, x20, [sp, #16]
  403ad4:	ldp	x23, x24, [sp, #48]
  403ad8:	ldp	x25, x26, [sp, #64]
  403adc:	str	x0, [x27, #24]
  403ae0:	ldp	x27, x28, [sp, #80]
  403ae4:	ldp	x29, x30, [sp], #96
  403ae8:	ret
  403aec:	sub	w1, w20, #0x31
  403af0:	and	w1, w1, #0xff
  403af4:	cmp	w1, #0x8
  403af8:	b.hi	403ba0 <ferror@plt+0x1200>  // b.pmore
  403afc:	ldr	w1, [x22]
  403b00:	sub	w3, w20, #0x30
  403b04:	sub	w1, w1, #0x1
  403b08:	cmp	w1, w3
  403b0c:	b.ls	403c10 <ferror@plt+0x1270>  // b.plast
  403b10:	ldr	x1, [x22, #16]
  403b14:	sxtw	x20, w3
  403b18:	ldr	w2, [x1, x20, lsl #2]
  403b1c:	cmp	w2, #0x0
  403b20:	b.le	403b5c <ferror@plt+0x11bc>
  403b24:	ldr	x1, [x22, #8]
  403b28:	ldr	x3, [x27, #32]
  403b2c:	ldr	w1, [x1, x20, lsl #2]
  403b30:	sub	x3, x3, x0
  403b34:	sub	w2, w2, w1
  403b38:	sxtw	x21, w2
  403b3c:	cmp	x3, w2, sxtw
  403b40:	b.cc	403c5c <ferror@plt+0x12bc>  // b.lo, b.ul, b.last
  403b44:	add	x1, x23, w1, sxtw
  403b48:	mov	x2, x21
  403b4c:	bl	402350 <memcpy@plt>
  403b50:	ldr	x19, [x27, #24]
  403b54:	add	x19, x19, x21
  403b58:	str	x19, [x27, #24]
  403b5c:	add	x21, x28, #0x2
  403b60:	b	4039e0 <ferror@plt+0x1040>
  403b64:	mov	x0, x27
  403b68:	mov	x1, x20
  403b6c:	bl	41d788 <_obstack_newchunk@@Base>
  403b70:	ldr	x0, [x27, #24]
  403b74:	b	403a0c <ferror@plt+0x106c>
  403b78:	ldr	w1, [x24]
  403b7c:	cbnz	w1, 403a44 <ferror@plt+0x10a4>
  403b80:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  403b84:	mov	x2, x25
  403b88:	ldr	w0, [x0, #1676]
  403b8c:	bl	4033d0 <ferror@plt+0xa30>
  403b90:	mov	w1, #0x1                   	// #1
  403b94:	str	w1, [x24]
  403b98:	ldr	x0, [x27, #24]
  403b9c:	b	403a44 <ferror@plt+0x10a4>
  403ba0:	ldr	x1, [x27, #32]
  403ba4:	cmp	x0, x1
  403ba8:	b.eq	403c48 <ferror@plt+0x12a8>  // b.none
  403bac:	add	x1, x0, #0x1
  403bb0:	str	x1, [x27, #24]
  403bb4:	strb	w20, [x0]
  403bb8:	add	x21, x28, #0x2
  403bbc:	ldr	x19, [x27, #24]
  403bc0:	b	4039e0 <ferror@plt+0x1040>
  403bc4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  403bc8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  403bcc:	ldp	x19, x20, [sp, #16]
  403bd0:	add	x2, x2, #0x278
  403bd4:	ldp	x21, x22, [sp, #32]
  403bd8:	mov	w1, #0x0                   	// #0
  403bdc:	ldp	x23, x24, [sp, #48]
  403be0:	ldp	x25, x26, [sp, #64]
  403be4:	ldp	x27, x28, [sp, #80]
  403be8:	ldp	x29, x30, [sp], #96
  403bec:	ldr	w0, [x0, #1676]
  403bf0:	b	4033d0 <ferror@plt+0xa30>
  403bf4:	mov	x1, x26
  403bf8:	mov	x0, x27
  403bfc:	bl	41d788 <_obstack_newchunk@@Base>
  403c00:	ldr	x1, [x22, #8]
  403c04:	ldr	x0, [x27, #24]
  403c08:	ldr	w1, [x1]
  403c0c:	b	403a68 <ferror@plt+0x10c8>
  403c10:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  403c14:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  403c18:	mov	w1, #0x0                   	// #0
  403c1c:	add	x2, x2, #0x250
  403c20:	ldr	w0, [x0, #1676]
  403c24:	add	x21, x28, #0x2
  403c28:	bl	4033d0 <ferror@plt+0xa30>
  403c2c:	ldr	x19, [x27, #24]
  403c30:	b	4039e0 <ferror@plt+0x1040>
  403c34:	mov	x1, x0
  403c38:	mov	x0, x27
  403c3c:	bl	41d788 <_obstack_newchunk@@Base>
  403c40:	ldr	x19, [x27, #24]
  403c44:	b	403ab4 <ferror@plt+0x1114>
  403c48:	mov	x0, x27
  403c4c:	mov	x1, #0x1                   	// #1
  403c50:	bl	41d788 <_obstack_newchunk@@Base>
  403c54:	ldr	x0, [x27, #24]
  403c58:	b	403bac <ferror@plt+0x120c>
  403c5c:	mov	x1, x21
  403c60:	mov	x0, x27
  403c64:	bl	41d788 <_obstack_newchunk@@Base>
  403c68:	ldr	x1, [x22, #8]
  403c6c:	ldr	x0, [x27, #24]
  403c70:	ldr	w1, [x1, x20, lsl #2]
  403c74:	b	403b44 <ferror@plt+0x11a4>
  403c78:	stp	x29, x30, [sp, #-48]!
  403c7c:	mov	x29, sp
  403c80:	stp	x19, x20, [sp, #16]
  403c84:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  403c88:	add	x19, x19, #0x6b0
  403c8c:	str	x21, [sp, #32]
  403c90:	mov	x20, x0
  403c94:	mov	w0, #0x0                   	// #0
  403c98:	strb	wzr, [x19, #271]
  403c9c:	tbz	w1, #31, 403ca8 <ferror@plt+0x1308>
  403ca0:	neg	w1, w1
  403ca4:	mov	w0, #0x1                   	// #1
  403ca8:	adrp	x4, 41f000 <_obstack_memory_used@@Base+0x1640>
  403cac:	mov	w5, #0xcccd                	// #52429
  403cb0:	add	x19, x19, #0x10f
  403cb4:	add	x4, x4, #0xa00
  403cb8:	movk	w5, #0xcccc, lsl #16
  403cbc:	nop
  403cc0:	umull	x2, w1, w5
  403cc4:	cmp	w1, #0x9
  403cc8:	mov	x6, x19
  403ccc:	lsr	x2, x2, #35
  403cd0:	add	w3, w2, w2, lsl #2
  403cd4:	sub	w3, w1, w3, lsl #1
  403cd8:	mov	w1, w2
  403cdc:	ldrb	w2, [x4, w3, uxtw]
  403ce0:	strb	w2, [x19, #-1]!
  403ce4:	b.hi	403cc0 <ferror@plt+0x1320>  // b.pmore
  403ce8:	cbz	w0, 403cf8 <ferror@plt+0x1358>
  403cec:	mov	w0, #0x2d                  	// #45
  403cf0:	sturb	w0, [x19, #-1]
  403cf4:	sub	x19, x6, #0x2
  403cf8:	mov	x0, x19
  403cfc:	bl	402390 <strlen@plt>
  403d00:	mov	x21, x0
  403d04:	ldp	x0, x1, [x20, #24]
  403d08:	sub	x1, x1, x0
  403d0c:	cmp	x21, x1
  403d10:	b.hi	403d3c <ferror@plt+0x139c>  // b.pmore
  403d14:	mov	x1, x19
  403d18:	mov	x2, x21
  403d1c:	bl	402350 <memcpy@plt>
  403d20:	ldr	x0, [x20, #24]
  403d24:	add	x0, x0, x21
  403d28:	ldr	x21, [sp, #32]
  403d2c:	str	x0, [x20, #24]
  403d30:	ldp	x19, x20, [sp, #16]
  403d34:	ldp	x29, x30, [sp], #48
  403d38:	ret
  403d3c:	mov	x0, x20
  403d40:	mov	x1, x21
  403d44:	bl	41d788 <_obstack_newchunk@@Base>
  403d48:	ldr	x0, [x20, #24]
  403d4c:	b	403d14 <ferror@plt+0x1374>
  403d50:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  403d54:	ldr	w1, [x1, #1984]
  403d58:	b	403c78 <ferror@plt+0x12d8>
  403d5c:	nop
  403d60:	stp	x29, x30, [sp, #-80]!
  403d64:	mov	x29, sp
  403d68:	stp	x21, x22, [sp, #32]
  403d6c:	mov	x22, x1
  403d70:	mov	x21, x2
  403d74:	ldp	x4, x1, [x0, #24]
  403d78:	stp	x23, x24, [sp, #48]
  403d7c:	str	x25, [sp, #64]
  403d80:	adrp	x25, 443000 <__progname@@GLIBC_2.17+0xaba8>
  403d84:	add	x23, x25, #0xdd0
  403d88:	stp	x19, x20, [sp, #16]
  403d8c:	mov	x19, x0
  403d90:	sub	x1, x1, x4
  403d94:	mov	x20, x3
  403d98:	ldr	x24, [x23, #8]
  403d9c:	cmp	x24, x1
  403da0:	b.hi	403fb4 <ferror@plt+0x1614>  // b.pmore
  403da4:	ldr	x1, [x25, #3536]
  403da8:	mov	x0, x4
  403dac:	mov	x2, x24
  403db0:	bl	402350 <memcpy@plt>
  403db4:	ldp	x0, x1, [x19, #24]
  403db8:	add	x0, x0, x24
  403dbc:	str	x0, [x19, #24]
  403dc0:	sub	x1, x1, x0
  403dc4:	cmp	x20, x1
  403dc8:	b.hi	403f84 <ferror@plt+0x15e4>  // b.pmore
  403dcc:	mov	x2, x20
  403dd0:	mov	x1, x21
  403dd4:	bl	402350 <memcpy@plt>
  403dd8:	ldr	x0, [x19, #24]
  403ddc:	add	x3, x0, x20
  403de0:	str	x3, [x19, #24]
  403de4:	mov	x0, x3
  403de8:	cbz	x20, 404008 <ferror@plt+0x1668>
  403dec:	add	x20, x21, x20
  403df0:	ldurb	w1, [x20, #-1]
  403df4:	cmp	w1, #0x58
  403df8:	b.ne	404014 <ferror@plt+0x1674>  // b.any
  403dfc:	ldurb	w1, [x20, #-2]
  403e00:	cmp	w1, #0x58
  403e04:	b.ne	40402c <ferror@plt+0x168c>  // b.any
  403e08:	ldurb	w1, [x20, #-3]
  403e0c:	cmp	w1, #0x58
  403e10:	b.ne	404034 <ferror@plt+0x1694>  // b.any
  403e14:	ldurb	w1, [x20, #-4]
  403e18:	cmp	w1, #0x58
  403e1c:	b.ne	40403c <ferror@plt+0x169c>  // b.any
  403e20:	ldurb	w1, [x20, #-5]
  403e24:	cmp	w1, #0x58
  403e28:	b.ne	404044 <ferror@plt+0x16a4>  // b.any
  403e2c:	ldurb	w2, [x20, #-6]
  403e30:	mov	x1, #0x1                   	// #1
  403e34:	mov	x20, #0x0                   	// #0
  403e38:	cmp	w2, #0x58
  403e3c:	b.ne	40404c <ferror@plt+0x16ac>  // b.any
  403e40:	ldr	x2, [x19, #32]
  403e44:	sub	x2, x2, x3
  403e48:	cmp	x2, x1
  403e4c:	b.cc	403f74 <ferror@plt+0x15d4>  // b.lo, b.ul, b.last
  403e50:	mov	x2, x20
  403e54:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  403e58:	add	x1, x1, #0x2a8
  403e5c:	bl	402350 <memcpy@plt>
  403e60:	ldr	x1, [x19, #24]
  403e64:	add	x0, x1, x20
  403e68:	add	x0, x0, #0x1
  403e6c:	str	x0, [x19, #24]
  403e70:	strb	wzr, [x1, x20]
  403e74:	ldr	x0, [x23, #8]
  403e78:	ldr	x23, [x19, #16]
  403e7c:	add	x23, x23, x0
  403e80:	bl	402920 <__errno_location@plt>
  403e84:	mov	x20, x0
  403e88:	mov	x0, x23
  403e8c:	str	wzr, [x20]
  403e90:	bl	41b618 <ferror@plt+0x18c78>
  403e94:	tbnz	w0, #31, 403ef0 <ferror@plt+0x1550>
  403e98:	bl	402660 <close@plt>
  403e9c:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  403ea0:	ldp	x0, x1, [x19, #24]
  403ea4:	add	x2, x21, #0xe08
  403ea8:	ldr	x20, [x2, #8]
  403eac:	sub	x0, x0, #0x1
  403eb0:	str	x0, [x19, #24]
  403eb4:	sub	x1, x1, x0
  403eb8:	cmp	x20, x1
  403ebc:	b.hi	403fc4 <ferror@plt+0x1624>  // b.pmore
  403ec0:	ldr	x1, [x21, #3592]
  403ec4:	mov	x2, x20
  403ec8:	bl	402350 <memcpy@plt>
  403ecc:	ldr	x0, [x19, #24]
  403ed0:	ldp	x21, x22, [sp, #32]
  403ed4:	add	x20, x0, x20
  403ed8:	str	x20, [x19, #24]
  403edc:	ldp	x19, x20, [sp, #16]
  403ee0:	ldp	x23, x24, [sp, #48]
  403ee4:	ldr	x25, [sp, #64]
  403ee8:	ldp	x29, x30, [sp], #80
  403eec:	ret
  403ef0:	ldr	w1, [x20]
  403ef4:	mov	x4, x21
  403ef8:	mov	x3, x22
  403efc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  403f00:	mov	w0, #0x0                   	// #0
  403f04:	add	x2, x2, #0x2b0
  403f08:	bl	4033d0 <ferror@plt+0xa30>
  403f0c:	ldp	x1, x2, [x19, #16]
  403f10:	cmp	x2, x1
  403f14:	b.eq	403ff8 <ferror@plt+0x1658>  // b.none
  403f18:	ldr	x0, [x19, #48]
  403f1c:	ldr	x3, [x19, #8]
  403f20:	add	x2, x2, x0
  403f24:	ldr	x4, [x19, #32]
  403f28:	bic	x0, x2, x0
  403f2c:	str	x0, [x19, #24]
  403f30:	sub	x5, x0, x3
  403f34:	sub	x2, x4, x3
  403f38:	cmp	x5, x2
  403f3c:	b.ls	403f48 <ferror@plt+0x15a8>  // b.plast
  403f40:	mov	x0, x4
  403f44:	str	x4, [x19, #24]
  403f48:	str	x0, [x19, #16]
  403f4c:	cmp	x4, x1
  403f50:	ccmp	x3, x1, #0x2, hi  // hi = pmore
  403f54:	b.cc	403fd8 <ferror@plt+0x1638>  // b.lo, b.ul, b.last
  403f58:	mov	x0, x19
  403f5c:	ldp	x19, x20, [sp, #16]
  403f60:	ldp	x21, x22, [sp, #32]
  403f64:	ldp	x23, x24, [sp, #48]
  403f68:	ldr	x25, [sp, #64]
  403f6c:	ldp	x29, x30, [sp], #80
  403f70:	b	41d910 <_obstack_free@@Base>
  403f74:	mov	x0, x19
  403f78:	bl	41d788 <_obstack_newchunk@@Base>
  403f7c:	ldr	x0, [x19, #24]
  403f80:	b	403e50 <ferror@plt+0x14b0>
  403f84:	mov	x1, x20
  403f88:	mov	x0, x19
  403f8c:	bl	41d788 <_obstack_newchunk@@Base>
  403f90:	ldr	x0, [x19, #24]
  403f94:	mov	x2, x20
  403f98:	mov	x1, x21
  403f9c:	bl	402350 <memcpy@plt>
  403fa0:	ldr	x0, [x19, #24]
  403fa4:	add	x3, x0, x20
  403fa8:	str	x3, [x19, #24]
  403fac:	mov	x0, x3
  403fb0:	b	403dec <ferror@plt+0x144c>
  403fb4:	mov	x1, x24
  403fb8:	bl	41d788 <_obstack_newchunk@@Base>
  403fbc:	ldr	x4, [x19, #24]
  403fc0:	b	403da4 <ferror@plt+0x1404>
  403fc4:	mov	x0, x19
  403fc8:	mov	x1, x20
  403fcc:	bl	41d788 <_obstack_newchunk@@Base>
  403fd0:	ldr	x0, [x19, #24]
  403fd4:	b	403ec0 <ferror@plt+0x1520>
  403fd8:	dup	v0.2d, x1
  403fdc:	ldp	x21, x22, [sp, #32]
  403fe0:	ldp	x23, x24, [sp, #48]
  403fe4:	str	q0, [x19, #16]
  403fe8:	ldp	x19, x20, [sp, #16]
  403fec:	ldr	x25, [sp, #64]
  403ff0:	ldp	x29, x30, [sp], #80
  403ff4:	ret
  403ff8:	ldrb	w0, [x19, #80]
  403ffc:	orr	w0, w0, #0x2
  404000:	strb	w0, [x19, #80]
  404004:	b	403f18 <ferror@plt+0x1578>
  404008:	mov	x20, #0x6                   	// #6
  40400c:	mov	x1, #0x7                   	// #7
  404010:	b	403e40 <ferror@plt+0x14a0>
  404014:	mov	x2, #0x0                   	// #0
  404018:	mov	x1, #0x7                   	// #7
  40401c:	mov	x20, #0x6                   	// #6
  404020:	sub	x1, x1, x2
  404024:	sub	x20, x20, x2
  404028:	b	403e40 <ferror@plt+0x14a0>
  40402c:	mov	x2, #0x1                   	// #1
  404030:	b	404018 <ferror@plt+0x1678>
  404034:	mov	x2, #0x2                   	// #2
  404038:	b	404018 <ferror@plt+0x1678>
  40403c:	mov	x2, #0x3                   	// #3
  404040:	b	404018 <ferror@plt+0x1678>
  404044:	mov	x2, #0x4                   	// #4
  404048:	b	404018 <ferror@plt+0x1678>
  40404c:	mov	x2, #0x5                   	// #5
  404050:	b	404018 <ferror@plt+0x1678>
  404054:	nop
  404058:	ldr	x0, [x0]
  40405c:	ldr	x1, [x1]
  404060:	ldr	x0, [x0, #16]
  404064:	ldr	x1, [x1, #16]
  404068:	b	402760 <strcmp@plt>
  40406c:	nop
  404070:	stp	x29, x30, [sp, #-80]!
  404074:	cmp	w1, #0x1
  404078:	mov	x29, sp
  40407c:	b.eq	4041c4 <ferror@plt+0x1824>  // b.none
  404080:	b.le	40418c <ferror@plt+0x17ec>
  404084:	sub	w1, w1, #0x2
  404088:	stp	x19, x20, [sp, #16]
  40408c:	mov	x19, #0x1                   	// #1
  404090:	stp	x21, x22, [sp, #32]
  404094:	mov	x21, x2
  404098:	add	x22, x1, #0x2
  40409c:	stp	x23, x24, [sp, #48]
  4040a0:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x1a640>
  4040a4:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  4040a8:	add	x23, x23, #0x690
  4040ac:	add	x24, x24, #0x68c
  4040b0:	b	4040d0 <ferror@plt+0x1730>
  4040b4:	ldr	x3, [x21]
  4040b8:	ldr	w0, [x24]
  4040bc:	ldr	x3, [x3, #8]
  4040c0:	bl	4033d0 <ferror@plt+0xa30>
  4040c4:	add	x19, x19, #0x1
  4040c8:	cmp	x22, x19
  4040cc:	b.eq	404180 <ferror@plt+0x17e0>  // b.none
  4040d0:	ldr	x0, [x21, x19, lsl #3]
  4040d4:	add	x1, sp, #0x48
  4040d8:	mov	w2, #0xa                   	// #10
  4040dc:	ldr	x0, [x0, #8]
  4040e0:	bl	402790 <strtol@plt>
  4040e4:	mov	x20, x0
  4040e8:	ldr	x1, [sp, #72]
  4040ec:	ldrb	w0, [x1]
  4040f0:	cbnz	w0, 404110 <ferror@plt+0x1770>
  4040f4:	bl	402770 <__ctype_b_loc@plt>
  4040f8:	ldr	x1, [x21, x19, lsl #3]
  4040fc:	ldr	x0, [x0]
  404100:	ldr	x1, [x1, #8]
  404104:	ldrb	w1, [x1]
  404108:	ldrh	w0, [x0, x1, lsl #1]
  40410c:	tbz	w0, #13, 404194 <ferror@plt+0x17f4>
  404110:	ldr	w0, [x23]
  404114:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404118:	mov	x1, #0x0                   	// #0
  40411c:	add	x2, x2, #0x2d0
  404120:	cbnz	w0, 4040b4 <ferror@plt+0x1714>
  404124:	ldr	x0, [x21, x19, lsl #3]
  404128:	ldr	x0, [x0, #8]
  40412c:	bl	4113d8 <ferror@plt+0xea38>
  404130:	mov	x20, x0
  404134:	cbz	x0, 4041a0 <ferror@plt+0x1800>
  404138:	bl	410d30 <ferror@plt+0xe390>
  40413c:	mov	x0, x20
  404140:	bl	41d200 <ferror@plt+0x1a860>
  404144:	cmn	w0, #0x1
  404148:	b.ne	4040c4 <ferror@plt+0x1724>  // b.any
  40414c:	bl	402920 <__errno_location@plt>
  404150:	ldr	w1, [x0]
  404154:	ldr	x3, [x21, x19, lsl #3]
  404158:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40415c:	ldr	w20, [x24]
  404160:	add	x2, x2, #0x2f8
  404164:	add	x19, x19, #0x1
  404168:	ldr	x3, [x3, #8]
  40416c:	mov	w0, w20
  404170:	bl	4033d0 <ferror@plt+0xa30>
  404174:	cmp	x22, x19
  404178:	b.ne	4040d0 <ferror@plt+0x1730>  // b.any
  40417c:	nop
  404180:	ldp	x19, x20, [sp, #16]
  404184:	ldp	x21, x22, [sp, #32]
  404188:	ldp	x23, x24, [sp, #48]
  40418c:	ldp	x29, x30, [sp], #80
  404190:	ret
  404194:	mov	w0, w20
  404198:	bl	410e78 <ferror@plt+0xe4d8>
  40419c:	b	4040c4 <ferror@plt+0x1724>
  4041a0:	bl	402920 <__errno_location@plt>
  4041a4:	ldr	w1, [x0]
  4041a8:	ldr	x3, [x21, x19, lsl #3]
  4041ac:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4041b0:	ldr	w0, [x24]
  4041b4:	add	x2, x2, #0x310
  4041b8:	ldr	x3, [x3, #8]
  4041bc:	bl	4033d0 <ferror@plt+0xa30>
  4041c0:	b	4040c4 <ferror@plt+0x1724>
  4041c4:	bl	410ef0 <ferror@plt+0xe550>
  4041c8:	ldp	x29, x30, [sp], #80
  4041cc:	ret
  4041d0:	stp	x29, x30, [sp, #-64]!
  4041d4:	mov	x29, sp
  4041d8:	stp	x19, x20, [sp, #16]
  4041dc:	mov	x19, x1
  4041e0:	stp	x21, x22, [sp, #32]
  4041e4:	mov	x21, x2
  4041e8:	mov	x22, x0
  4041ec:	bl	402920 <__errno_location@plt>
  4041f0:	mov	x20, x0
  4041f4:	add	x1, sp, #0x38
  4041f8:	mov	x0, x19
  4041fc:	mov	w2, #0xa                   	// #10
  404200:	str	wzr, [x20]
  404204:	bl	402790 <strtol@plt>
  404208:	str	w0, [x21]
  40420c:	ldr	x1, [sp, #56]
  404210:	ldrb	w1, [x1]
  404214:	cbnz	w1, 404284 <ferror@plt+0x18e4>
  404218:	bl	402770 <__ctype_b_loc@plt>
  40421c:	ldrb	w1, [x19]
  404220:	ldr	x0, [x0]
  404224:	ldrh	w0, [x0, x1, lsl #1]
  404228:	tbnz	w0, #13, 404250 <ferror@plt+0x18b0>
  40422c:	ldr	w0, [x20]
  404230:	mov	w19, #0x1                   	// #1
  404234:	cmp	w0, #0x22
  404238:	b.eq	4042b8 <ferror@plt+0x1918>  // b.none
  40423c:	mov	w0, w19
  404240:	ldp	x19, x20, [sp, #16]
  404244:	ldp	x21, x22, [sp, #32]
  404248:	ldp	x29, x30, [sp], #64
  40424c:	ret
  404250:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404254:	mov	w1, #0x0                   	// #0
  404258:	ldr	x3, [x22]
  40425c:	mov	w19, #0x1                   	// #1
  404260:	ldr	w0, [x0, #1676]
  404264:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404268:	add	x2, x2, #0x328
  40426c:	bl	4033d0 <ferror@plt+0xa30>
  404270:	mov	w0, w19
  404274:	ldp	x19, x20, [sp, #16]
  404278:	ldp	x21, x22, [sp, #32]
  40427c:	ldp	x29, x30, [sp], #64
  404280:	ret
  404284:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404288:	mov	w1, #0x0                   	// #0
  40428c:	ldr	x3, [x22]
  404290:	mov	w19, #0x0                   	// #0
  404294:	ldr	w0, [x0, #1676]
  404298:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40429c:	add	x2, x2, #0x2d0
  4042a0:	bl	4033d0 <ferror@plt+0xa30>
  4042a4:	mov	w0, w19
  4042a8:	ldp	x19, x20, [sp, #16]
  4042ac:	ldp	x21, x22, [sp, #32]
  4042b0:	ldp	x29, x30, [sp], #64
  4042b4:	ret
  4042b8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4042bc:	mov	w1, #0x0                   	// #0
  4042c0:	ldr	x3, [x22]
  4042c4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4042c8:	ldr	w0, [x0, #1676]
  4042cc:	add	x2, x2, #0x358
  4042d0:	bl	4033d0 <ferror@plt+0xa30>
  4042d4:	mov	w0, w19
  4042d8:	ldp	x19, x20, [sp, #16]
  4042dc:	ldp	x21, x22, [sp, #32]
  4042e0:	ldp	x29, x30, [sp], #64
  4042e4:	ret
  4042e8:	ldrb	w2, [x0, #8]
  4042ec:	cmp	x1, #0x0
  4042f0:	cset	w4, ne  // ne = any
  4042f4:	ldr	w3, [x0, #24]
  4042f8:	bfxil	w2, w4, #0, #1
  4042fc:	strb	w2, [x0, #8]
  404300:	cmp	w3, #0x0
  404304:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  404308:	b.eq	404310 <ferror@plt+0x1970>  // b.none
  40430c:	ret
  404310:	ldr	x0, [x0, #16]
  404314:	mov	w1, #0x4                   	// #4
  404318:	b	411620 <ferror@plt+0xec80>
  40431c:	nop
  404320:	stp	x29, x30, [sp, #-112]!
  404324:	cmp	w1, #0x1
  404328:	mov	x29, sp
  40432c:	stp	x21, x22, [sp, #32]
  404330:	mov	x22, x0
  404334:	str	x0, [sp, #88]
  404338:	ldr	x0, [x0, #16]
  40433c:	stp	x19, x20, [sp, #16]
  404340:	stp	x23, x24, [sp, #48]
  404344:	str	x25, [sp, #64]
  404348:	str	x0, [sp, #96]
  40434c:	str	wzr, [sp, #104]
  404350:	b.eq	404610 <ferror@plt+0x1c70>  // b.none
  404354:	b.le	404630 <ferror@plt+0x1c90>
  404358:	sub	w1, w1, #0x2
  40435c:	add	x21, x2, #0x10
  404360:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0x1640>
  404364:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x1a640>
  404368:	add	x20, x2, #0x8
  40436c:	add	x21, x21, w1, uxtw #3
  404370:	add	x24, x24, #0x388
  404374:	add	x23, x23, #0x68c
  404378:	b	4043c8 <ferror@plt+0x1a28>
  40437c:	ldrb	w0, [x19, #8]
  404380:	tbnz	w0, #1, 4043bc <ferror@plt+0x1a1c>
  404384:	ldr	x25, [sp, #88]
  404388:	mov	x3, x25
  40438c:	ldp	x0, x1, [x25, #24]
  404390:	sub	x1, x1, x0
  404394:	cmp	x1, #0x7
  404398:	b.ls	4045e0 <ferror@plt+0x1c40>  // b.plast
  40439c:	ldr	w2, [sp, #104]
  4043a0:	add	x0, x0, #0x8
  4043a4:	ldr	x1, [x3, #16]
  4043a8:	add	w3, w2, #0x1
  4043ac:	str	x0, [x25, #24]
  4043b0:	str	x1, [sp, #96]
  4043b4:	str	w3, [sp, #104]
  4043b8:	str	x19, [x1, w2, sxtw #3]
  4043bc:	add	x20, x20, #0x8
  4043c0:	cmp	x21, x20
  4043c4:	b.eq	40440c <ferror@plt+0x1a6c>  // b.none
  4043c8:	ldr	x2, [x20]
  4043cc:	mov	w1, #0x0                   	// #0
  4043d0:	ldr	x0, [x2, #8]
  4043d4:	bl	411620 <ferror@plt+0xec80>
  4043d8:	mov	x19, x0
  4043dc:	cbz	x0, 4043e8 <ferror@plt+0x1a48>
  4043e0:	ldr	w0, [x0, #24]
  4043e4:	cbnz	w0, 40437c <ferror@plt+0x19dc>
  4043e8:	ldr	x3, [x20]
  4043ec:	mov	x2, x24
  4043f0:	ldr	w0, [x23]
  4043f4:	add	x20, x20, #0x8
  4043f8:	mov	w1, #0x0                   	// #0
  4043fc:	ldr	x3, [x3, #8]
  404400:	bl	4033d0 <ferror@plt+0xa30>
  404404:	cmp	x21, x20
  404408:	b.ne	4043c8 <ferror@plt+0x1a28>  // b.any
  40440c:	ldrsw	x1, [sp, #104]
  404410:	ldr	x2, [x22, #16]
  404414:	ldr	x0, [sp, #96]
  404418:	ldr	x4, [x22, #24]
  40441c:	cmp	x4, x2
  404420:	b.eq	404600 <ferror@plt+0x1c60>  // b.none
  404424:	ldr	x2, [x22, #48]
  404428:	ldr	x3, [x22, #8]
  40442c:	add	x4, x4, x2
  404430:	ldr	x5, [x22, #32]
  404434:	bic	x2, x4, x2
  404438:	str	x2, [x22, #24]
  40443c:	sub	x4, x2, x3
  404440:	sub	x3, x5, x3
  404444:	cmp	x4, x3
  404448:	b.ls	404454 <ferror@plt+0x1ab4>  // b.plast
  40444c:	mov	x2, x5
  404450:	str	x5, [x22, #24]
  404454:	str	x2, [x22, #16]
  404458:	adrp	x3, 404000 <ferror@plt+0x1660>
  40445c:	mov	x2, #0x8                   	// #8
  404460:	add	x3, x3, #0x58
  404464:	bl	402470 <qsort@plt>
  404468:	ldr	w0, [sp, #104]
  40446c:	cmp	w0, #0x0
  404470:	b.le	404584 <ferror@plt+0x1be4>
  404474:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  404478:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  40447c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  404480:	add	x22, x22, #0x820
  404484:	add	x19, x19, #0x3a0
  404488:	add	x20, x20, #0x69c
  40448c:	adrp	x21, 421000 <_obstack_memory_used@@Base+0x3640>
  404490:	ldr	x3, [sp, #96]
  404494:	b	4044e8 <ferror@plt+0x1b48>
  404498:	ldr	w1, [x20]
  40449c:	ldr	x0, [x22]
  4044a0:	tbz	w1, #2, 4045c8 <ferror@plt+0x1c28>
  4044a4:	cbz	x0, 4044cc <ferror@plt+0x1b2c>
  4044a8:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4044ac:	adrp	x5, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4044b0:	ldr	x3, [x2, #32]
  4044b4:	ldr	x4, [x1, #3592]
  4044b8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  4044bc:	ldr	x2, [x5, #3536]
  4044c0:	add	x1, x1, #0x3a8
  4044c4:	bl	41cdb0 <ferror@plt+0x1a410>
  4044c8:	ldr	x3, [sp, #96]
  4044cc:	add	x3, x3, #0x8
  4044d0:	ldr	w0, [sp, #104]
  4044d4:	str	x3, [sp, #96]
  4044d8:	sub	w0, w0, #0x1
  4044dc:	str	w0, [sp, #104]
  4044e0:	cmp	w0, #0x0
  4044e4:	b.le	404584 <ferror@plt+0x1be4>
  4044e8:	ldr	x0, [x22]
  4044ec:	ldr	x2, [x3]
  4044f0:	cbz	x0, 404508 <ferror@plt+0x1b68>
  4044f4:	ldr	x2, [x2, #16]
  4044f8:	mov	x1, x19
  4044fc:	bl	41cdb0 <ferror@plt+0x1a410>
  404500:	ldr	x3, [sp, #96]
  404504:	ldr	x2, [x3]
  404508:	ldr	w0, [x2, #24]
  40450c:	cmp	w0, #0x1
  404510:	b.eq	404498 <ferror@plt+0x1af8>  // b.none
  404514:	cmp	w0, #0x2
  404518:	b.ne	40463c <ferror@plt+0x1c9c>  // b.any
  40451c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  404520:	add	x1, x1, #0xa00
  404524:	add	x1, x1, #0x28
  404528:	ldr	x4, [x2, #32]
  40452c:	b	404540 <ferror@plt+0x1ba0>
  404530:	ldr	x0, [x1, #24]
  404534:	add	x2, x1, #0x18
  404538:	cbz	x0, 40459c <ferror@plt+0x1bfc>
  40453c:	mov	x1, x2
  404540:	ldr	x0, [x1, #16]
  404544:	cmp	x4, x0
  404548:	b.ne	404530 <ferror@plt+0x1b90>  // b.any
  40454c:	ldr	x0, [x22]
  404550:	cbz	x0, 4044cc <ferror@plt+0x1b2c>
  404554:	ldr	x2, [x1]
  404558:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  40455c:	add	x1, x1, #0x3e8
  404560:	bl	41cdb0 <ferror@plt+0x1a410>
  404564:	ldr	x3, [sp, #96]
  404568:	ldr	w0, [sp, #104]
  40456c:	add	x3, x3, #0x8
  404570:	str	x3, [sp, #96]
  404574:	sub	w0, w0, #0x1
  404578:	str	w0, [sp, #104]
  40457c:	cmp	w0, #0x0
  404580:	b.gt	4044e8 <ferror@plt+0x1b48>
  404584:	ldp	x19, x20, [sp, #16]
  404588:	ldp	x21, x22, [sp, #32]
  40458c:	ldp	x23, x24, [sp, #48]
  404590:	ldr	x25, [sp, #64]
  404594:	ldp	x29, x30, [sp], #112
  404598:	ret
  40459c:	adrp	x0, 403000 <ferror@plt+0x660>
  4045a0:	add	x0, x0, #0x528
  4045a4:	cmp	x4, x0
  4045a8:	b.eq	4045f8 <ferror@plt+0x1c58>  // b.none
  4045ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4045b0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4045b4:	add	x2, x2, #0x3b0
  4045b8:	mov	w1, #0x0                   	// #0
  4045bc:	ldr	w0, [x0, #1676]
  4045c0:	bl	4033d0 <ferror@plt+0xa30>
  4045c4:	bl	4026d0 <abort@plt>
  4045c8:	cbz	x0, 4044cc <ferror@plt+0x1b2c>
  4045cc:	ldr	x2, [x2, #32]
  4045d0:	add	x1, x21, #0xa60
  4045d4:	bl	41cdb0 <ferror@plt+0x1a410>
  4045d8:	ldr	x3, [sp, #96]
  4045dc:	b	4044cc <ferror@plt+0x1b2c>
  4045e0:	mov	x0, x25
  4045e4:	mov	x1, #0x8                   	// #8
  4045e8:	bl	41d788 <_obstack_newchunk@@Base>
  4045ec:	ldr	x0, [x25, #24]
  4045f0:	ldr	x3, [sp, #88]
  4045f4:	b	40439c <ferror@plt+0x19fc>
  4045f8:	add	x1, x1, #0x30
  4045fc:	b	40454c <ferror@plt+0x1bac>
  404600:	ldrb	w2, [x22, #80]
  404604:	orr	w2, w2, #0x2
  404608:	strb	w2, [x22, #80]
  40460c:	b	404424 <ferror@plt+0x1a84>
  404610:	add	x1, sp, #0x58
  404614:	adrp	x0, 404000 <ferror@plt+0x1660>
  404618:	add	x0, x0, #0x8b0
  40461c:	bl	411a18 <ferror@plt+0xf078>
  404620:	ldrsw	x1, [sp, #104]
  404624:	ldr	x2, [x22, #16]
  404628:	ldr	x0, [sp, #96]
  40462c:	b	404418 <ferror@plt+0x1a78>
  404630:	mov	x2, x0
  404634:	mov	x1, #0x0                   	// #0
  404638:	b	404418 <ferror@plt+0x1a78>
  40463c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404640:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404644:	add	x2, x2, #0x3f0
  404648:	mov	w1, #0x0                   	// #0
  40464c:	ldr	w0, [x0, #1676]
  404650:	bl	4033d0 <ferror@plt+0xa30>
  404654:	bl	4026d0 <abort@plt>
  404658:	cmp	w1, #0x1
  40465c:	b.le	404744 <ferror@plt+0x1da4>
  404660:	stp	x29, x30, [sp, #-80]!
  404664:	sub	w1, w1, #0x2
  404668:	mov	x29, sp
  40466c:	stp	x19, x20, [sp, #16]
  404670:	mov	x20, x0
  404674:	stp	x21, x22, [sp, #32]
  404678:	mov	x22, x2
  40467c:	stp	x23, x24, [sp, #48]
  404680:	add	x23, x2, w1, uxtw #3
  404684:	mov	w24, #0x20                  	// #32
  404688:	ldr	x19, [x0, #24]
  40468c:	str	x25, [sp, #64]
  404690:	b	4046d8 <ferror@plt+0x1d38>
  404694:	mov	x2, x21
  404698:	mov	x0, x19
  40469c:	mov	x1, x25
  4046a0:	bl	402350 <memcpy@plt>
  4046a4:	ldr	x2, [x20, #24]
  4046a8:	cmp	x22, x23
  4046ac:	add	x22, x22, #0x8
  4046b0:	add	x21, x2, x21
  4046b4:	str	x21, [x20, #24]
  4046b8:	b.eq	40472c <ferror@plt+0x1d8c>  // b.none
  4046bc:	ldr	x0, [x20, #32]
  4046c0:	cmp	x0, x21
  4046c4:	b.eq	404718 <ferror@plt+0x1d78>  // b.none
  4046c8:	strb	w24, [x21]
  4046cc:	ldr	x19, [x20, #24]
  4046d0:	add	x19, x19, #0x1
  4046d4:	str	x19, [x20, #24]
  4046d8:	ldr	x0, [x22, #8]
  4046dc:	ldr	x25, [x0, #8]
  4046e0:	mov	x0, x25
  4046e4:	bl	402390 <strlen@plt>
  4046e8:	ldr	x2, [x20, #32]
  4046ec:	mov	x21, x0
  4046f0:	sub	x2, x2, x19
  4046f4:	cmp	x0, x2
  4046f8:	b.ls	404694 <ferror@plt+0x1cf4>  // b.plast
  4046fc:	mov	x1, x0
  404700:	mov	x0, x20
  404704:	bl	41d788 <_obstack_newchunk@@Base>
  404708:	ldr	x0, [x22, #8]
  40470c:	ldr	x19, [x20, #24]
  404710:	ldr	x25, [x0, #8]
  404714:	b	404694 <ferror@plt+0x1cf4>
  404718:	mov	x0, x20
  40471c:	mov	x1, #0x1                   	// #1
  404720:	bl	41d788 <_obstack_newchunk@@Base>
  404724:	ldr	x21, [x20, #24]
  404728:	b	4046c8 <ferror@plt+0x1d28>
  40472c:	ldp	x19, x20, [sp, #16]
  404730:	ldp	x21, x22, [sp, #32]
  404734:	ldp	x23, x24, [sp, #48]
  404738:	ldr	x25, [sp, #64]
  40473c:	ldp	x29, x30, [sp], #80
  404740:	ret
  404744:	ret
  404748:	cmp	w1, #0x1
  40474c:	b.eq	4047bc <ferror@plt+0x1e1c>  // b.none
  404750:	b.le	4047cc <ferror@plt+0x1e2c>
  404754:	stp	x29, x30, [sp, #-32]!
  404758:	sub	w1, w1, #0x2
  40475c:	mov	x29, sp
  404760:	stp	x19, x20, [sp, #16]
  404764:	add	x20, x2, #0x10
  404768:	add	x19, x2, #0x8
  40476c:	add	x20, x20, w1, uxtw #3
  404770:	ldr	x0, [x19]
  404774:	mov	w1, #0x0                   	// #0
  404778:	add	x19, x19, #0x8
  40477c:	ldr	x0, [x0, #8]
  404780:	bl	411620 <ferror@plt+0xec80>
  404784:	cbz	x0, 4047a8 <ferror@plt+0x1e08>
  404788:	ldrb	w2, [x0, #8]
  40478c:	mov	w1, #0x4                   	// #4
  404790:	ldr	w3, [x0, #24]
  404794:	and	w2, w2, #0xfffffffe
  404798:	strb	w2, [x0, #8]
  40479c:	cbnz	w3, 4047a8 <ferror@plt+0x1e08>
  4047a0:	ldr	x0, [x0, #16]
  4047a4:	bl	411620 <ferror@plt+0xec80>
  4047a8:	cmp	x19, x20
  4047ac:	b.ne	404770 <ferror@plt+0x1dd0>  // b.any
  4047b0:	ldp	x19, x20, [sp, #16]
  4047b4:	ldp	x29, x30, [sp], #32
  4047b8:	ret
  4047bc:	adrp	x0, 404000 <ferror@plt+0x1660>
  4047c0:	mov	x1, #0x0                   	// #0
  4047c4:	add	x0, x0, #0x2e8
  4047c8:	b	411a18 <ferror@plt+0xf078>
  4047cc:	ret
  4047d0:	cmp	w1, #0x1
  4047d4:	b.eq	40489c <ferror@plt+0x1efc>  // b.none
  4047d8:	b.le	4048ac <ferror@plt+0x1f0c>
  4047dc:	stp	x29, x30, [sp, #-48]!
  4047e0:	cmp	x0, #0x0
  4047e4:	mov	x29, sp
  4047e8:	stp	x19, x20, [sp, #16]
  4047ec:	sub	w20, w1, #0x2
  4047f0:	add	x1, x2, #0x10
  4047f4:	add	x20, x1, w20, uxtw #3
  4047f8:	add	x19, x2, #0x8
  4047fc:	stp	x21, x22, [sp, #32]
  404800:	cset	w21, eq  // eq = none
  404804:	cset	w22, ne  // ne = any
  404808:	b	404834 <ferror@plt+0x1e94>
  40480c:	ldrb	w1, [x0, #8]
  404810:	add	x19, x19, #0x8
  404814:	ldr	w2, [x0, #24]
  404818:	bfxil	w1, w22, #0, #1
  40481c:	strb	w1, [x0, #8]
  404820:	cmp	w2, #0x0
  404824:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  404828:	b.ne	404878 <ferror@plt+0x1ed8>  // b.any
  40482c:	cmp	x19, x20
  404830:	b.eq	40488c <ferror@plt+0x1eec>  // b.none
  404834:	ldr	x0, [x19]
  404838:	mov	w1, #0x0                   	// #0
  40483c:	ldr	x0, [x0, #8]
  404840:	bl	411620 <ferror@plt+0xec80>
  404844:	cbnz	x0, 40480c <ferror@plt+0x1e6c>
  404848:	ldr	x0, [x19]
  40484c:	mov	w1, #0x1                   	// #1
  404850:	add	x19, x19, #0x8
  404854:	ldr	x0, [x0, #8]
  404858:	bl	411620 <ferror@plt+0xec80>
  40485c:	ldrb	w1, [x0, #8]
  404860:	ldr	w2, [x0, #24]
  404864:	bfxil	w1, w22, #0, #1
  404868:	strb	w1, [x0, #8]
  40486c:	cmp	w2, #0x0
  404870:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  404874:	b.eq	40482c <ferror@plt+0x1e8c>  // b.none
  404878:	ldr	x0, [x0, #16]
  40487c:	mov	w1, #0x4                   	// #4
  404880:	bl	411620 <ferror@plt+0xec80>
  404884:	cmp	x19, x20
  404888:	b.ne	404834 <ferror@plt+0x1e94>  // b.any
  40488c:	ldp	x19, x20, [sp, #16]
  404890:	ldp	x21, x22, [sp, #32]
  404894:	ldp	x29, x30, [sp], #48
  404898:	ret
  40489c:	mov	x1, x0
  4048a0:	adrp	x0, 404000 <ferror@plt+0x1660>
  4048a4:	add	x0, x0, #0x2e8
  4048a8:	b	411a18 <ferror@plt+0xf078>
  4048ac:	ret
  4048b0:	stp	x29, x30, [sp, #-48]!
  4048b4:	mov	x29, sp
  4048b8:	stp	x19, x20, [sp, #16]
  4048bc:	mov	x19, x0
  4048c0:	ldrb	w0, [x0, #8]
  4048c4:	tbnz	w0, #1, 404914 <ferror@plt+0x1f74>
  4048c8:	ldr	w0, [x19, #24]
  4048cc:	cbz	w0, 404914 <ferror@plt+0x1f74>
  4048d0:	str	x21, [sp, #32]
  4048d4:	mov	x20, x1
  4048d8:	ldr	x21, [x1]
  4048dc:	mov	x2, x21
  4048e0:	ldp	x0, x1, [x21, #24]
  4048e4:	sub	x1, x1, x0
  4048e8:	cmp	x1, #0x7
  4048ec:	b.ls	404920 <ferror@plt+0x1f80>  // b.plast
  4048f0:	add	x0, x0, #0x8
  4048f4:	ldr	x1, [x2, #16]
  4048f8:	str	x0, [x21, #24]
  4048fc:	ldr	w0, [x20, #16]
  404900:	ldr	x21, [sp, #32]
  404904:	add	w2, w0, #0x1
  404908:	str	x1, [x20, #8]
  40490c:	str	w2, [x20, #16]
  404910:	str	x19, [x1, w0, sxtw #3]
  404914:	ldp	x19, x20, [sp, #16]
  404918:	ldp	x29, x30, [sp], #48
  40491c:	ret
  404920:	mov	x0, x21
  404924:	mov	x1, #0x8                   	// #8
  404928:	bl	41d788 <_obstack_newchunk@@Base>
  40492c:	ldr	x2, [x20]
  404930:	ldr	x0, [x21, #24]
  404934:	b	4048f0 <ferror@plt+0x1f50>
  404938:	stp	x29, x30, [sp, #-64]!
  40493c:	mov	x29, sp
  404940:	stp	x19, x20, [sp, #16]
  404944:	mov	x19, x1
  404948:	mov	x20, x2
  40494c:	stp	x21, x22, [sp, #32]
  404950:	mov	x22, x0
  404954:	ldrb	w1, [x1]
  404958:	cbnz	w1, 404990 <ferror@plt+0x1ff0>
  40495c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404960:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404964:	ldr	x3, [x22]
  404968:	str	wzr, [x20]
  40496c:	add	x2, x2, #0x428
  404970:	mov	w19, #0x1                   	// #1
  404974:	ldr	w0, [x0, #1676]
  404978:	bl	4033d0 <ferror@plt+0xa30>
  40497c:	mov	w0, w19
  404980:	ldp	x19, x20, [sp, #16]
  404984:	ldp	x21, x22, [sp, #32]
  404988:	ldp	x29, x30, [sp], #64
  40498c:	ret
  404990:	bl	402920 <__errno_location@plt>
  404994:	mov	x21, x0
  404998:	add	x1, sp, #0x38
  40499c:	mov	x0, x19
  4049a0:	mov	w2, #0xa                   	// #10
  4049a4:	str	wzr, [x21]
  4049a8:	bl	402790 <strtol@plt>
  4049ac:	str	w0, [x20]
  4049b0:	ldr	x1, [sp, #56]
  4049b4:	ldrb	w0, [x1]
  4049b8:	cbnz	w0, 404a00 <ferror@plt+0x2060>
  4049bc:	bl	402770 <__ctype_b_loc@plt>
  4049c0:	ldrb	w1, [x19]
  4049c4:	ldr	x0, [x0]
  4049c8:	ldrh	w0, [x0, x1, lsl #1]
  4049cc:	tbnz	w0, #13, 404a34 <ferror@plt+0x2094>
  4049d0:	ldr	w0, [x21]
  4049d4:	mov	w19, #0x1                   	// #1
  4049d8:	cmp	w0, #0x22
  4049dc:	b.ne	40497c <ferror@plt+0x1fdc>  // b.any
  4049e0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4049e4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4049e8:	ldr	x3, [x22]
  4049ec:	add	x2, x2, #0x358
  4049f0:	ldr	w0, [x0, #1676]
  4049f4:	mov	w1, #0x0                   	// #0
  4049f8:	bl	4033d0 <ferror@plt+0xa30>
  4049fc:	b	40497c <ferror@plt+0x1fdc>
  404a00:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404a04:	mov	w1, #0x0                   	// #0
  404a08:	ldr	x3, [x22]
  404a0c:	mov	w19, #0x0                   	// #0
  404a10:	ldr	w0, [x0, #1676]
  404a14:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404a18:	add	x2, x2, #0x2d0
  404a1c:	bl	4033d0 <ferror@plt+0xa30>
  404a20:	mov	w0, w19
  404a24:	ldp	x19, x20, [sp, #16]
  404a28:	ldp	x21, x22, [sp, #32]
  404a2c:	ldp	x29, x30, [sp], #64
  404a30:	ret
  404a34:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404a38:	mov	w1, #0x0                   	// #0
  404a3c:	ldr	x3, [x22]
  404a40:	mov	w19, #0x1                   	// #1
  404a44:	ldr	w0, [x0, #1676]
  404a48:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404a4c:	add	x2, x2, #0x328
  404a50:	bl	4033d0 <ferror@plt+0xa30>
  404a54:	mov	w0, w19
  404a58:	ldp	x19, x20, [sp, #16]
  404a5c:	ldp	x21, x22, [sp, #32]
  404a60:	ldp	x29, x30, [sp], #64
  404a64:	ret
  404a68:	stp	x29, x30, [sp, #-64]!
  404a6c:	mov	w3, #0xa                   	// #10
  404a70:	mov	x29, sp
  404a74:	stp	x19, x20, [sp, #16]
  404a78:	mov	x20, x2
  404a7c:	mov	w2, #0x1                   	// #1
  404a80:	stp	wzr, w3, [sp, #52]
  404a84:	mov	x19, x0
  404a88:	str	w2, [sp, #60]
  404a8c:	cmp	w1, w2
  404a90:	ldr	x0, [x20]
  404a94:	b.gt	404ab0 <ferror@plt+0x2110>
  404a98:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  404a9c:	ldr	w1, [x1, #1688]
  404aa0:	cbz	w1, 404cbc <ferror@plt+0x231c>
  404aa4:	ldp	x19, x20, [sp, #16]
  404aa8:	ldp	x29, x30, [sp], #64
  404aac:	ret
  404ab0:	str	x21, [sp, #32]
  404ab4:	cmp	w1, #0x4
  404ab8:	mov	w21, w1
  404abc:	b.gt	404c24 <ferror@plt+0x2284>
  404ac0:	cmp	w1, #0x2
  404ac4:	b.ne	404d8c <ferror@plt+0x23ec>  // b.any
  404ac8:	ldr	x0, [x20, #8]
  404acc:	ldr	x0, [x0, #8]
  404ad0:	ldrb	w1, [x0]
  404ad4:	cbz	w1, 404d18 <ferror@plt+0x2378>
  404ad8:	add	x1, sp, #0x34
  404adc:	bl	40aef8 <ferror@plt+0x8558>
  404ae0:	tst	w0, #0xff
  404ae4:	b.ne	404d6c <ferror@plt+0x23cc>  // b.any
  404ae8:	ldp	w0, w1, [sp, #52]
  404aec:	cmp	w1, #0x1
  404af0:	b.eq	404dc8 <ferror@plt+0x2428>  // b.none
  404af4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  404af8:	add	x20, x20, #0x6b0
  404afc:	mov	w6, #0x0                   	// #0
  404b00:	strb	wzr, [x20, #271]
  404b04:	tbz	w0, #31, 404b10 <ferror@plt+0x2170>
  404b08:	neg	w0, w0
  404b0c:	mov	w6, #0x1                   	// #1
  404b10:	adrp	x4, 41f000 <_obstack_memory_used@@Base+0x1640>
  404b14:	add	x20, x20, #0x10f
  404b18:	add	x4, x4, #0xa00
  404b1c:	nop
  404b20:	udiv	w2, w0, w1
  404b24:	cmp	w0, w1
  404b28:	mov	x5, x20
  404b2c:	msub	w3, w2, w1, w0
  404b30:	mov	w0, w2
  404b34:	ldrb	w2, [x4, w3, uxtw]
  404b38:	strb	w2, [x20, #-1]!
  404b3c:	b.cs	404b20 <ferror@plt+0x2180>  // b.hs, b.nlast
  404b40:	cbz	w6, 404d7c <ferror@plt+0x23dc>
  404b44:	mov	w0, #0x2d                  	// #45
  404b48:	sturb	w0, [x20, #-1]
  404b4c:	ldp	x0, x1, [x19, #24]
  404b50:	cmp	x1, x0
  404b54:	b.eq	404db4 <ferror@plt+0x2414>  // b.none
  404b58:	add	x1, x0, #0x1
  404b5c:	str	x1, [x19, #24]
  404b60:	mov	w1, #0x2d                  	// #45
  404b64:	strb	w1, [x0]
  404b68:	mov	x0, x20
  404b6c:	bl	402390 <strlen@plt>
  404b70:	ldr	w1, [sp, #60]
  404b74:	mov	w21, #0x30                  	// #48
  404b78:	sub	w0, w1, w0
  404b7c:	sub	w0, w0, #0x1
  404b80:	str	w0, [sp, #60]
  404b84:	tbz	w0, #31, 404ba4 <ferror@plt+0x2204>
  404b88:	b	404be0 <ferror@plt+0x2240>
  404b8c:	str	x2, [x19, #24]
  404b90:	strb	w21, [x0]
  404b94:	ldr	w0, [sp, #60]
  404b98:	sub	w0, w0, #0x1
  404b9c:	str	w0, [sp, #60]
  404ba0:	tbnz	w0, #31, 404be0 <ferror@plt+0x2240>
  404ba4:	ldp	x0, x1, [x19, #24]
  404ba8:	add	x2, x0, #0x1
  404bac:	cmp	x1, x0
  404bb0:	b.ne	404b8c <ferror@plt+0x21ec>  // b.any
  404bb4:	mov	x0, x19
  404bb8:	mov	x1, #0x1                   	// #1
  404bbc:	bl	41d788 <_obstack_newchunk@@Base>
  404bc0:	ldr	x0, [x19, #24]
  404bc4:	add	x1, x0, #0x1
  404bc8:	str	x1, [x19, #24]
  404bcc:	strb	w21, [x0]
  404bd0:	ldr	w0, [sp, #60]
  404bd4:	sub	w0, w0, #0x1
  404bd8:	str	w0, [sp, #60]
  404bdc:	tbz	w0, #31, 404ba4 <ferror@plt+0x2204>
  404be0:	mov	x0, x20
  404be4:	bl	402390 <strlen@plt>
  404be8:	mov	x21, x0
  404bec:	ldp	x0, x1, [x19, #24]
  404bf0:	sub	x1, x1, x0
  404bf4:	cmp	x21, x1
  404bf8:	b.hi	404da0 <ferror@plt+0x2400>  // b.pmore
  404bfc:	mov	x1, x20
  404c00:	mov	x2, x21
  404c04:	bl	402350 <memcpy@plt>
  404c08:	ldr	x0, [x19, #24]
  404c0c:	add	x0, x0, x21
  404c10:	ldr	x21, [sp, #32]
  404c14:	str	x0, [x19, #24]
  404c18:	ldp	x19, x20, [sp, #16]
  404c1c:	ldp	x29, x30, [sp], #64
  404c20:	ret
  404c24:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  404c28:	ldr	w1, [x1, #1688]
  404c2c:	cbz	w1, 404ce4 <ferror@plt+0x2344>
  404c30:	ldr	x1, [x20, #16]
  404c34:	ldr	x1, [x1, #8]
  404c38:	ldrb	w2, [x1]
  404c3c:	cbz	w2, 404c70 <ferror@plt+0x22d0>
  404c40:	add	x0, x0, #0x8
  404c44:	add	x2, sp, #0x38
  404c48:	bl	404938 <ferror@plt+0x1f98>
  404c4c:	tst	w0, #0xff
  404c50:	b.eq	404d6c <ferror@plt+0x23cc>  // b.none
  404c54:	ldr	w3, [sp, #56]
  404c58:	sub	w0, w3, #0x1
  404c5c:	cmp	w0, #0x23
  404c60:	b.hi	404d3c <ferror@plt+0x239c>  // b.pmore
  404c64:	cmp	w21, #0x3
  404c68:	b.le	404c8c <ferror@plt+0x22ec>
  404c6c:	ldr	x0, [x20]
  404c70:	add	x0, x0, #0x8
  404c74:	ldr	x1, [x20, #24]
  404c78:	add	x2, sp, #0x3c
  404c7c:	ldr	x1, [x1, #8]
  404c80:	bl	404938 <ferror@plt+0x1f98>
  404c84:	tst	w0, #0xff
  404c88:	b.eq	404d6c <ferror@plt+0x23cc>  // b.none
  404c8c:	ldr	w0, [sp, #60]
  404c90:	tbz	w0, #31, 404ac8 <ferror@plt+0x2128>
  404c94:	ldr	x3, [x20]
  404c98:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404c9c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404ca0:	mov	w1, #0x0                   	// #0
  404ca4:	ldr	w0, [x0, #1676]
  404ca8:	add	x2, x2, #0x4c0
  404cac:	ldr	x3, [x3, #8]
  404cb0:	bl	4033d0 <ferror@plt+0xa30>
  404cb4:	ldr	x21, [sp, #32]
  404cb8:	b	404aa4 <ferror@plt+0x2104>
  404cbc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  404cc0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404cc4:	ldr	x3, [x0, #8]
  404cc8:	add	x2, x2, #0x458
  404ccc:	ldr	w0, [x1, #1676]
  404cd0:	mov	w1, #0x0                   	// #0
  404cd4:	bl	4033d0 <ferror@plt+0xa30>
  404cd8:	ldp	x19, x20, [sp, #16]
  404cdc:	ldp	x29, x30, [sp], #64
  404ce0:	ret
  404ce4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  404ce8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404cec:	ldr	x3, [x0, #8]
  404cf0:	add	x2, x2, #0x488
  404cf4:	ldr	w0, [x1, #1676]
  404cf8:	mov	w1, #0x0                   	// #0
  404cfc:	bl	4033d0 <ferror@plt+0xa30>
  404d00:	ldr	x0, [x20, #16]
  404d04:	ldr	x1, [x0, #8]
  404d08:	ldrb	w0, [x1]
  404d0c:	cbz	w0, 404c54 <ferror@plt+0x22b4>
  404d10:	ldr	x0, [x20]
  404d14:	b	404c40 <ferror@plt+0x22a0>
  404d18:	ldr	x3, [x20]
  404d1c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404d20:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404d24:	mov	w1, #0x0                   	// #0
  404d28:	ldr	w0, [x0, #1676]
  404d2c:	add	x2, x2, #0x428
  404d30:	ldr	x3, [x3, #8]
  404d34:	bl	4033d0 <ferror@plt+0xa30>
  404d38:	b	404ae8 <ferror@plt+0x2148>
  404d3c:	ldr	x1, [x20]
  404d40:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404d44:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404d48:	add	x2, x2, #0x4e0
  404d4c:	ldr	w0, [x0, #1676]
  404d50:	ldr	x4, [x1, #8]
  404d54:	mov	w1, #0x0                   	// #0
  404d58:	bl	4033d0 <ferror@plt+0xa30>
  404d5c:	ldp	x19, x20, [sp, #16]
  404d60:	ldr	x21, [sp, #32]
  404d64:	ldp	x29, x30, [sp], #64
  404d68:	ret
  404d6c:	ldp	x19, x20, [sp, #16]
  404d70:	ldr	x21, [sp, #32]
  404d74:	ldp	x29, x30, [sp], #64
  404d78:	ret
  404d7c:	cmp	w2, #0x2d
  404d80:	b.ne	404b68 <ferror@plt+0x21c8>  // b.any
  404d84:	mov	x20, x5
  404d88:	b	404b4c <ferror@plt+0x21ac>
  404d8c:	ldr	x1, [x20, #16]
  404d90:	ldr	x1, [x1, #8]
  404d94:	ldrb	w2, [x1]
  404d98:	cbnz	w2, 404c40 <ferror@plt+0x22a0>
  404d9c:	b	404c64 <ferror@plt+0x22c4>
  404da0:	mov	x0, x19
  404da4:	mov	x1, x21
  404da8:	bl	41d788 <_obstack_newchunk@@Base>
  404dac:	ldr	x0, [x19, #24]
  404db0:	b	404bfc <ferror@plt+0x225c>
  404db4:	mov	x0, x19
  404db8:	mov	x1, #0x1                   	// #1
  404dbc:	bl	41d788 <_obstack_newchunk@@Base>
  404dc0:	ldr	x0, [x19, #24]
  404dc4:	b	404b58 <ferror@plt+0x21b8>
  404dc8:	ldp	x1, x2, [x19, #24]
  404dcc:	tbnz	w0, #31, 404ed0 <ferror@plt+0x2530>
  404dd0:	ldr	w3, [sp, #60]
  404dd4:	sub	w4, w3, #0x1
  404dd8:	str	w4, [sp, #60]
  404ddc:	sub	w3, w3, w0
  404de0:	cmp	w3, #0x0
  404de4:	b.le	404e48 <ferror@plt+0x24a8>
  404de8:	mov	w20, #0x30                  	// #48
  404dec:	b	404e1c <ferror@plt+0x247c>
  404df0:	str	x0, [x19, #24]
  404df4:	strb	w20, [x1]
  404df8:	ldr	w1, [sp, #60]
  404dfc:	ldr	w0, [sp, #52]
  404e00:	sub	w2, w1, #0x1
  404e04:	str	w2, [sp, #60]
  404e08:	sub	w1, w1, w0
  404e0c:	cmp	w1, #0x0
  404e10:	ldr	x1, [x19, #24]
  404e14:	ldr	x2, [x19, #32]
  404e18:	b.le	404e48 <ferror@plt+0x24a8>
  404e1c:	add	x0, x1, #0x1
  404e20:	cmp	x2, x1
  404e24:	b.ne	404df0 <ferror@plt+0x2450>  // b.any
  404e28:	mov	x0, x19
  404e2c:	mov	x1, #0x1                   	// #1
  404e30:	bl	41d788 <_obstack_newchunk@@Base>
  404e34:	ldr	x0, [x19, #24]
  404e38:	add	x1, x0, #0x1
  404e3c:	str	x1, [x19, #24]
  404e40:	strb	w20, [x0]
  404e44:	b	404df8 <ferror@plt+0x2458>
  404e48:	sub	w3, w0, #0x1
  404e4c:	str	w3, [sp, #52]
  404e50:	cbz	w0, 404eb4 <ferror@plt+0x2514>
  404e54:	mov	w20, #0x31                  	// #49
  404e58:	add	x0, x1, #0x1
  404e5c:	cmp	x2, x1
  404e60:	b.eq	404e84 <ferror@plt+0x24e4>  // b.none
  404e64:	str	x0, [x19, #24]
  404e68:	strb	w20, [x1]
  404e6c:	ldr	w0, [sp, #52]
  404e70:	sub	w1, w0, #0x1
  404e74:	str	w1, [sp, #52]
  404e78:	cbz	w0, 404eb0 <ferror@plt+0x2510>
  404e7c:	ldp	x1, x2, [x19, #24]
  404e80:	b	404e58 <ferror@plt+0x24b8>
  404e84:	mov	x0, x19
  404e88:	mov	x1, #0x1                   	// #1
  404e8c:	bl	41d788 <_obstack_newchunk@@Base>
  404e90:	ldr	x0, [x19, #24]
  404e94:	add	x1, x0, #0x1
  404e98:	str	x1, [x19, #24]
  404e9c:	strb	w20, [x0]
  404ea0:	ldr	w0, [sp, #52]
  404ea4:	sub	w1, w0, #0x1
  404ea8:	str	w1, [sp, #52]
  404eac:	cbnz	w0, 404e7c <ferror@plt+0x24dc>
  404eb0:	ldp	x1, x2, [x19, #24]
  404eb4:	cmp	x2, x1
  404eb8:	b.eq	404efc <ferror@plt+0x255c>  // b.none
  404ebc:	add	x0, x1, #0x1
  404ec0:	str	x0, [x19, #24]
  404ec4:	strb	wzr, [x1]
  404ec8:	ldr	x21, [sp, #32]
  404ecc:	b	404aa4 <ferror@plt+0x2104>
  404ed0:	cmp	x2, x1
  404ed4:	b.eq	404f10 <ferror@plt+0x2570>  // b.none
  404ed8:	add	x0, x1, #0x1
  404edc:	str	x0, [x19, #24]
  404ee0:	mov	w0, #0x2d                  	// #45
  404ee4:	strb	w0, [x1]
  404ee8:	ldr	w0, [sp, #52]
  404eec:	ldp	x1, x2, [x19, #24]
  404ef0:	neg	w0, w0
  404ef4:	str	w0, [sp, #52]
  404ef8:	b	404dd0 <ferror@plt+0x2430>
  404efc:	mov	x1, #0x1                   	// #1
  404f00:	mov	x0, x19
  404f04:	bl	41d788 <_obstack_newchunk@@Base>
  404f08:	ldr	x1, [x19, #24]
  404f0c:	b	404ebc <ferror@plt+0x251c>
  404f10:	mov	x1, #0x1                   	// #1
  404f14:	mov	x0, x19
  404f18:	bl	41d788 <_obstack_newchunk@@Base>
  404f1c:	ldr	x1, [x19, #24]
  404f20:	b	404ed8 <ferror@plt+0x2538>
  404f24:	nop
  404f28:	stp	x29, x30, [sp, #-48]!
  404f2c:	cmp	w1, #0x1
  404f30:	mov	x29, sp
  404f34:	ldr	x0, [x2]
  404f38:	b.gt	404f50 <ferror@plt+0x25b0>
  404f3c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  404f40:	ldr	w1, [x1, #1688]
  404f44:	cbz	w1, 404fe4 <ferror@plt+0x2644>
  404f48:	ldp	x29, x30, [sp], #48
  404f4c:	ret
  404f50:	stp	x19, x20, [sp, #16]
  404f54:	cmp	w1, #0x2
  404f58:	mov	x19, x2
  404f5c:	b.eq	404f6c <ferror@plt+0x25cc>  // b.none
  404f60:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  404f64:	ldr	w1, [x1, #1688]
  404f68:	cbz	w1, 405008 <ferror@plt+0x2668>
  404f6c:	ldr	x0, [x19, #8]
  404f70:	add	x1, sp, #0x28
  404f74:	ldr	x0, [x0, #8]
  404f78:	bl	4113d8 <ferror@plt+0xea38>
  404f7c:	cbz	x0, 404fa0 <ferror@plt+0x2600>
  404f80:	ldr	x1, [sp, #40]
  404f84:	mov	w2, #0x1                   	// #1
  404f88:	bl	40cc68 <ferror@plt+0xa2c8>
  404f8c:	ldr	x0, [sp, #40]
  404f90:	bl	4027c0 <free@plt>
  404f94:	ldp	x19, x20, [sp, #16]
  404f98:	ldp	x29, x30, [sp], #48
  404f9c:	ret
  404fa0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  404fa4:	ldr	w20, [x0, #1676]
  404fa8:	bl	402920 <__errno_location@plt>
  404fac:	ldr	x3, [x19, #8]
  404fb0:	mov	x1, x0
  404fb4:	adrp	x2, 41d000 <ferror@plt+0x1a660>
  404fb8:	mov	w0, w20
  404fbc:	add	x2, x2, #0xf58
  404fc0:	ldr	w1, [x1]
  404fc4:	ldr	x3, [x3, #8]
  404fc8:	bl	4033d0 <ferror@plt+0xa30>
  404fcc:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  404fd0:	mov	w1, #0x1                   	// #1
  404fd4:	ldp	x19, x20, [sp, #16]
  404fd8:	str	w1, [x0, #3520]
  404fdc:	ldp	x29, x30, [sp], #48
  404fe0:	ret
  404fe4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  404fe8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  404fec:	ldr	x3, [x0, #8]
  404ff0:	add	x2, x2, #0x458
  404ff4:	ldr	w0, [x1, #1676]
  404ff8:	mov	w1, #0x0                   	// #0
  404ffc:	bl	4033d0 <ferror@plt+0xa30>
  405000:	ldp	x29, x30, [sp], #48
  405004:	ret
  405008:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40500c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405010:	ldr	x3, [x0, #8]
  405014:	add	x2, x2, #0x488
  405018:	ldr	w0, [x1, #1676]
  40501c:	mov	w1, #0x0                   	// #0
  405020:	bl	4033d0 <ferror@plt+0xa30>
  405024:	b	404f6c <ferror@plt+0x25cc>
  405028:	stp	x29, x30, [sp, #-48]!
  40502c:	cmp	w1, #0x1
  405030:	mov	x29, sp
  405034:	ldr	x0, [x2]
  405038:	b.gt	405050 <ferror@plt+0x26b0>
  40503c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405040:	ldr	w1, [x1, #1688]
  405044:	cbz	w1, 4050ac <ferror@plt+0x270c>
  405048:	ldp	x29, x30, [sp], #48
  40504c:	ret
  405050:	str	x19, [sp, #16]
  405054:	cmp	w1, #0x2
  405058:	mov	x19, x2
  40505c:	b.eq	40506c <ferror@plt+0x26cc>  // b.none
  405060:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405064:	ldr	w1, [x1, #1688]
  405068:	cbz	w1, 4050d0 <ferror@plt+0x2730>
  40506c:	ldr	x0, [x19, #8]
  405070:	add	x1, sp, #0x28
  405074:	ldr	x0, [x0, #8]
  405078:	bl	4113d8 <ferror@plt+0xea38>
  40507c:	cbz	x0, 4050a0 <ferror@plt+0x2700>
  405080:	ldr	x1, [sp, #40]
  405084:	mov	w2, #0x1                   	// #1
  405088:	bl	40cc68 <ferror@plt+0xa2c8>
  40508c:	ldr	x0, [sp, #40]
  405090:	bl	4027c0 <free@plt>
  405094:	ldr	x19, [sp, #16]
  405098:	ldp	x29, x30, [sp], #48
  40509c:	ret
  4050a0:	ldr	x19, [sp, #16]
  4050a4:	ldp	x29, x30, [sp], #48
  4050a8:	ret
  4050ac:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4050b0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4050b4:	ldr	x3, [x0, #8]
  4050b8:	add	x2, x2, #0x458
  4050bc:	ldr	w0, [x1, #1676]
  4050c0:	mov	w1, #0x0                   	// #0
  4050c4:	bl	4033d0 <ferror@plt+0xa30>
  4050c8:	ldp	x29, x30, [sp], #48
  4050cc:	ret
  4050d0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4050d4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4050d8:	ldr	x3, [x0, #8]
  4050dc:	add	x2, x2, #0x488
  4050e0:	ldr	w0, [x1, #1676]
  4050e4:	mov	w1, #0x0                   	// #0
  4050e8:	bl	4033d0 <ferror@plt+0xa30>
  4050ec:	b	40506c <ferror@plt+0x26cc>
  4050f0:	cmp	w1, #0x0
  4050f4:	ldr	x0, [x2]
  4050f8:	b.gt	40510c <ferror@plt+0x276c>
  4050fc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405100:	ldr	w1, [x1, #1688]
  405104:	cbz	w1, 405124 <ferror@plt+0x2784>
  405108:	ret
  40510c:	cmp	w1, #0x1
  405110:	b.eq	405120 <ferror@plt+0x2780>  // b.none
  405114:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405118:	ldr	w1, [x1, #1688]
  40511c:	cbz	w1, 405140 <ferror@plt+0x27a0>
  405120:	b	40d620 <ferror@plt+0xac80>
  405124:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405128:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40512c:	ldr	x3, [x0, #8]
  405130:	add	x2, x2, #0x458
  405134:	ldr	w0, [x1, #1676]
  405138:	mov	w1, #0x0                   	// #0
  40513c:	b	4033d0 <ferror@plt+0xa30>
  405140:	stp	x29, x30, [sp, #-16]!
  405144:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405148:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40514c:	mov	x29, sp
  405150:	ldr	x3, [x0, #8]
  405154:	add	x2, x2, #0x488
  405158:	ldr	w0, [x1, #1676]
  40515c:	mov	w1, #0x0                   	// #0
  405160:	bl	4033d0 <ferror@plt+0xa30>
  405164:	ldp	x29, x30, [sp], #16
  405168:	b	40d620 <ferror@plt+0xac80>
  40516c:	nop
  405170:	stp	x29, x30, [sp, #-32]!
  405174:	cmp	w1, #0x0
  405178:	mov	x29, sp
  40517c:	str	x19, [sp, #16]
  405180:	mov	x19, x0
  405184:	ldr	x0, [x2]
  405188:	b.gt	4051a4 <ferror@plt+0x2804>
  40518c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405190:	ldr	w1, [x1, #1688]
  405194:	cbz	w1, 4051d0 <ferror@plt+0x2830>
  405198:	ldr	x19, [sp, #16]
  40519c:	ldp	x29, x30, [sp], #32
  4051a0:	ret
  4051a4:	cmp	w1, #0x1
  4051a8:	b.eq	4051b8 <ferror@plt+0x2818>  // b.none
  4051ac:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4051b0:	ldr	w1, [x1, #1688]
  4051b4:	cbz	w1, 4051f4 <ferror@plt+0x2854>
  4051b8:	mov	x0, x19
  4051bc:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4051c0:	ldr	x19, [sp, #16]
  4051c4:	ldp	x29, x30, [sp], #32
  4051c8:	ldr	w1, [x1, #3528]
  4051cc:	b	403c78 <ferror@plt+0x12d8>
  4051d0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4051d4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4051d8:	ldr	x19, [sp, #16]
  4051dc:	add	x2, x2, #0x458
  4051e0:	ldp	x29, x30, [sp], #32
  4051e4:	ldr	x3, [x0, #8]
  4051e8:	ldr	w0, [x1, #1676]
  4051ec:	mov	w1, #0x0                   	// #0
  4051f0:	b	4033d0 <ferror@plt+0xa30>
  4051f4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4051f8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4051fc:	ldr	x3, [x0, #8]
  405200:	add	x2, x2, #0x488
  405204:	ldr	w0, [x1, #1676]
  405208:	mov	w1, #0x0                   	// #0
  40520c:	bl	4033d0 <ferror@plt+0xa30>
  405210:	b	4051b8 <ferror@plt+0x2818>
  405214:	nop
  405218:	stp	x29, x30, [sp, #-32]!
  40521c:	cmp	w1, #0x0
  405220:	mov	x29, sp
  405224:	str	x19, [sp, #16]
  405228:	mov	x19, x0
  40522c:	ldr	x0, [x2]
  405230:	b.gt	40524c <ferror@plt+0x28ac>
  405234:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405238:	ldr	w1, [x1, #1688]
  40523c:	cbz	w1, 405278 <ferror@plt+0x28d8>
  405240:	ldr	x19, [sp, #16]
  405244:	ldp	x29, x30, [sp], #32
  405248:	ret
  40524c:	cmp	w1, #0x1
  405250:	b.eq	405260 <ferror@plt+0x28c0>  // b.none
  405254:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405258:	ldr	w1, [x1, #1688]
  40525c:	cbz	w1, 40529c <ferror@plt+0x28fc>
  405260:	mov	x0, x19
  405264:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  405268:	ldr	x19, [sp, #16]
  40526c:	ldp	x29, x30, [sp], #32
  405270:	ldr	w1, [x1, #3612]
  405274:	b	403c78 <ferror@plt+0x12d8>
  405278:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40527c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405280:	ldr	x19, [sp, #16]
  405284:	add	x2, x2, #0x458
  405288:	ldp	x29, x30, [sp], #32
  40528c:	ldr	x3, [x0, #8]
  405290:	ldr	w0, [x1, #1676]
  405294:	mov	w1, #0x0                   	// #0
  405298:	b	4033d0 <ferror@plt+0xa30>
  40529c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4052a0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4052a4:	ldr	x3, [x0, #8]
  4052a8:	add	x2, x2, #0x488
  4052ac:	ldr	w0, [x1, #1676]
  4052b0:	mov	w1, #0x0                   	// #0
  4052b4:	bl	4033d0 <ferror@plt+0xa30>
  4052b8:	b	405260 <ferror@plt+0x28c0>
  4052bc:	nop
  4052c0:	stp	x29, x30, [sp, #-64]!
  4052c4:	cmp	w1, #0x0
  4052c8:	mov	x29, sp
  4052cc:	stp	x19, x20, [sp, #16]
  4052d0:	mov	x19, x0
  4052d4:	ldr	x0, [x2]
  4052d8:	b.gt	4052f4 <ferror@plt+0x2954>
  4052dc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4052e0:	ldr	w1, [x1, #1688]
  4052e4:	cbz	w1, 405408 <ferror@plt+0x2a68>
  4052e8:	ldp	x19, x20, [sp, #16]
  4052ec:	ldp	x29, x30, [sp], #64
  4052f0:	ret
  4052f4:	stp	x21, x22, [sp, #32]
  4052f8:	cmp	w1, #0x1
  4052fc:	str	x23, [sp, #48]
  405300:	b.eq	405310 <ferror@plt+0x2970>  // b.none
  405304:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405308:	ldr	w1, [x1, #1688]
  40530c:	cbz	w1, 40542c <ferror@plt+0x2a8c>
  405310:	ldp	x0, x1, [x19, #24]
  405314:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  405318:	add	x2, x21, #0xdd0
  40531c:	ldr	x20, [x2, #8]
  405320:	sub	x1, x1, x0
  405324:	cmp	x20, x1
  405328:	b.hi	4053c8 <ferror@plt+0x2a28>  // b.pmore
  40532c:	ldr	x1, [x21, #3536]
  405330:	mov	x2, x20
  405334:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0xaba8>
  405338:	bl	402350 <memcpy@plt>
  40533c:	ldr	x21, [x19, #24]
  405340:	ldr	x22, [x23, #3552]
  405344:	add	x21, x21, x20
  405348:	str	x21, [x19, #24]
  40534c:	mov	x0, x22
  405350:	bl	402390 <strlen@plt>
  405354:	mov	x20, x0
  405358:	ldr	x2, [x19, #32]
  40535c:	sub	x2, x2, x21
  405360:	cmp	x0, x2
  405364:	b.hi	4053f0 <ferror@plt+0x2a50>  // b.pmore
  405368:	mov	x2, x20
  40536c:	mov	x1, x22
  405370:	mov	x0, x21
  405374:	bl	402350 <memcpy@plt>
  405378:	ldp	x1, x2, [x19, #24]
  40537c:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  405380:	add	x3, x21, #0xe08
  405384:	add	x0, x1, x20
  405388:	str	x0, [x19, #24]
  40538c:	ldr	x20, [x3, #8]
  405390:	sub	x2, x2, x0
  405394:	cmp	x20, x2
  405398:	b.hi	4053dc <ferror@plt+0x2a3c>  // b.pmore
  40539c:	ldr	x1, [x21, #3592]
  4053a0:	mov	x2, x20
  4053a4:	bl	402350 <memcpy@plt>
  4053a8:	ldr	x2, [x19, #24]
  4053ac:	ldp	x21, x22, [sp, #32]
  4053b0:	add	x2, x2, x20
  4053b4:	ldr	x23, [sp, #48]
  4053b8:	str	x2, [x19, #24]
  4053bc:	ldp	x19, x20, [sp, #16]
  4053c0:	ldp	x29, x30, [sp], #64
  4053c4:	ret
  4053c8:	mov	x0, x19
  4053cc:	mov	x1, x20
  4053d0:	bl	41d788 <_obstack_newchunk@@Base>
  4053d4:	ldr	x0, [x19, #24]
  4053d8:	b	40532c <ferror@plt+0x298c>
  4053dc:	mov	x0, x19
  4053e0:	mov	x1, x20
  4053e4:	bl	41d788 <_obstack_newchunk@@Base>
  4053e8:	ldr	x0, [x19, #24]
  4053ec:	b	40539c <ferror@plt+0x29fc>
  4053f0:	mov	x1, x0
  4053f4:	mov	x0, x19
  4053f8:	bl	41d788 <_obstack_newchunk@@Base>
  4053fc:	ldr	x22, [x23, #3552]
  405400:	ldr	x21, [x19, #24]
  405404:	b	405368 <ferror@plt+0x29c8>
  405408:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40540c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405410:	ldp	x19, x20, [sp, #16]
  405414:	add	x2, x2, #0x458
  405418:	ldp	x29, x30, [sp], #64
  40541c:	ldr	x3, [x0, #8]
  405420:	ldr	w0, [x1, #1676]
  405424:	mov	w1, #0x0                   	// #0
  405428:	b	4033d0 <ferror@plt+0xa30>
  40542c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405430:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405434:	ldr	x3, [x0, #8]
  405438:	add	x2, x2, #0x488
  40543c:	ldr	w0, [x1, #1676]
  405440:	mov	w1, #0x0                   	// #0
  405444:	bl	4033d0 <ferror@plt+0xa30>
  405448:	b	405310 <ferror@plt+0x2970>
  40544c:	nop
  405450:	stp	x29, x30, [sp, #-64]!
  405454:	cmp	w1, #0x0
  405458:	mov	x29, sp
  40545c:	stp	x19, x20, [sp, #16]
  405460:	mov	x19, x0
  405464:	ldr	x0, [x2]
  405468:	b.gt	405484 <ferror@plt+0x2ae4>
  40546c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405470:	ldr	w1, [x1, #1688]
  405474:	cbz	w1, 405598 <ferror@plt+0x2bf8>
  405478:	ldp	x19, x20, [sp, #16]
  40547c:	ldp	x29, x30, [sp], #64
  405480:	ret
  405484:	stp	x21, x22, [sp, #32]
  405488:	cmp	w1, #0x1
  40548c:	str	x23, [sp, #48]
  405490:	b.eq	4054a0 <ferror@plt+0x2b00>  // b.none
  405494:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405498:	ldr	w1, [x1, #1688]
  40549c:	cbz	w1, 4055bc <ferror@plt+0x2c1c>
  4054a0:	ldp	x0, x1, [x19, #24]
  4054a4:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4054a8:	add	x2, x21, #0xdd0
  4054ac:	ldr	x20, [x2, #8]
  4054b0:	sub	x1, x1, x0
  4054b4:	cmp	x20, x1
  4054b8:	b.hi	405558 <ferror@plt+0x2bb8>  // b.pmore
  4054bc:	ldr	x1, [x21, #3536]
  4054c0:	mov	x2, x20
  4054c4:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4054c8:	bl	402350 <memcpy@plt>
  4054cc:	ldr	x21, [x19, #24]
  4054d0:	ldr	x22, [x23, #2904]
  4054d4:	add	x21, x21, x20
  4054d8:	str	x21, [x19, #24]
  4054dc:	mov	x0, x22
  4054e0:	bl	402390 <strlen@plt>
  4054e4:	mov	x20, x0
  4054e8:	ldr	x2, [x19, #32]
  4054ec:	sub	x2, x2, x21
  4054f0:	cmp	x0, x2
  4054f4:	b.hi	405580 <ferror@plt+0x2be0>  // b.pmore
  4054f8:	mov	x2, x20
  4054fc:	mov	x1, x22
  405500:	mov	x0, x21
  405504:	bl	402350 <memcpy@plt>
  405508:	ldp	x1, x2, [x19, #24]
  40550c:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  405510:	add	x3, x21, #0xe08
  405514:	add	x0, x1, x20
  405518:	str	x0, [x19, #24]
  40551c:	ldr	x20, [x3, #8]
  405520:	sub	x2, x2, x0
  405524:	cmp	x20, x2
  405528:	b.hi	40556c <ferror@plt+0x2bcc>  // b.pmore
  40552c:	ldr	x1, [x21, #3592]
  405530:	mov	x2, x20
  405534:	bl	402350 <memcpy@plt>
  405538:	ldr	x2, [x19, #24]
  40553c:	ldp	x21, x22, [sp, #32]
  405540:	add	x2, x2, x20
  405544:	ldr	x23, [sp, #48]
  405548:	str	x2, [x19, #24]
  40554c:	ldp	x19, x20, [sp, #16]
  405550:	ldp	x29, x30, [sp], #64
  405554:	ret
  405558:	mov	x0, x19
  40555c:	mov	x1, x20
  405560:	bl	41d788 <_obstack_newchunk@@Base>
  405564:	ldr	x0, [x19, #24]
  405568:	b	4054bc <ferror@plt+0x2b1c>
  40556c:	mov	x0, x19
  405570:	mov	x1, x20
  405574:	bl	41d788 <_obstack_newchunk@@Base>
  405578:	ldr	x0, [x19, #24]
  40557c:	b	40552c <ferror@plt+0x2b8c>
  405580:	mov	x1, x0
  405584:	mov	x0, x19
  405588:	bl	41d788 <_obstack_newchunk@@Base>
  40558c:	ldr	x22, [x23, #2904]
  405590:	ldr	x21, [x19, #24]
  405594:	b	4054f8 <ferror@plt+0x2b58>
  405598:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40559c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4055a0:	ldp	x19, x20, [sp, #16]
  4055a4:	add	x2, x2, #0x458
  4055a8:	ldp	x29, x30, [sp], #64
  4055ac:	ldr	x3, [x0, #8]
  4055b0:	ldr	w0, [x1, #1676]
  4055b4:	mov	w1, #0x0                   	// #0
  4055b8:	b	4033d0 <ferror@plt+0xa30>
  4055bc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4055c0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4055c4:	ldr	x3, [x0, #8]
  4055c8:	add	x2, x2, #0x488
  4055cc:	ldr	w0, [x1, #1676]
  4055d0:	mov	w1, #0x0                   	// #0
  4055d4:	bl	4033d0 <ferror@plt+0xa30>
  4055d8:	b	4054a0 <ferror@plt+0x2b00>
  4055dc:	nop
  4055e0:	cmp	w1, #0x1
  4055e4:	b.gt	4055f8 <ferror@plt+0x2c58>
  4055e8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4055ec:	ldr	w0, [x0, #1688]
  4055f0:	cbz	w0, 40563c <ferror@plt+0x2c9c>
  4055f4:	ret
  4055f8:	stp	x29, x30, [sp, #-32]!
  4055fc:	sub	w1, w1, #0x2
  405600:	mov	x29, sp
  405604:	stp	x19, x20, [sp, #16]
  405608:	add	x20, x2, #0x10
  40560c:	add	x19, x2, #0x8
  405610:	add	x20, x20, w1, uxtw #3
  405614:	nop
  405618:	ldr	x0, [x19], #8
  40561c:	mov	w1, #0x4                   	// #4
  405620:	ldr	x0, [x0, #8]
  405624:	bl	411620 <ferror@plt+0xec80>
  405628:	cmp	x20, x19
  40562c:	b.ne	405618 <ferror@plt+0x2c78>  // b.any
  405630:	ldp	x19, x20, [sp, #16]
  405634:	ldp	x29, x30, [sp], #32
  405638:	ret
  40563c:	ldr	x3, [x2]
  405640:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405644:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405648:	mov	w1, #0x0                   	// #0
  40564c:	ldr	w0, [x0, #1676]
  405650:	add	x2, x2, #0x458
  405654:	ldr	x3, [x3, #8]
  405658:	b	4033d0 <ferror@plt+0xa30>
  40565c:	nop
  405660:	cmp	w1, #0x1
  405664:	b.gt	405678 <ferror@plt+0x2cd8>
  405668:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40566c:	ldr	w0, [x0, #1688]
  405670:	cbz	w0, 4056bc <ferror@plt+0x2d1c>
  405674:	ret
  405678:	stp	x29, x30, [sp, #-32]!
  40567c:	sub	w1, w1, #0x2
  405680:	mov	x29, sp
  405684:	stp	x19, x20, [sp, #16]
  405688:	add	x20, x2, #0x10
  40568c:	add	x19, x2, #0x8
  405690:	add	x20, x20, w1, uxtw #3
  405694:	nop
  405698:	ldr	x0, [x19], #8
  40569c:	mov	w1, #0x2                   	// #2
  4056a0:	ldr	x0, [x0, #8]
  4056a4:	bl	411620 <ferror@plt+0xec80>
  4056a8:	cmp	x20, x19
  4056ac:	b.ne	405698 <ferror@plt+0x2cf8>  // b.any
  4056b0:	ldp	x19, x20, [sp, #16]
  4056b4:	ldp	x29, x30, [sp], #32
  4056b8:	ret
  4056bc:	ldr	x3, [x2]
  4056c0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4056c4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4056c8:	mov	w1, #0x0                   	// #0
  4056cc:	ldr	w0, [x0, #1676]
  4056d0:	add	x2, x2, #0x458
  4056d4:	ldr	x3, [x3, #8]
  4056d8:	b	4033d0 <ferror@plt+0xa30>
  4056dc:	nop
  4056e0:	cmp	w1, #0x0
  4056e4:	ldr	x0, [x2]
  4056e8:	b.gt	4056fc <ferror@plt+0x2d5c>
  4056ec:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4056f0:	ldr	w1, [x1, #1688]
  4056f4:	cbz	w1, 405758 <ferror@plt+0x2db8>
  4056f8:	ret
  4056fc:	stp	x29, x30, [sp, #-32]!
  405700:	cmp	w1, #0x3
  405704:	mov	x29, sp
  405708:	str	x19, [sp, #16]
  40570c:	mov	x19, x2
  405710:	b.le	40573c <ferror@plt+0x2d9c>
  405714:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405718:	ldr	w1, [x1, #1688]
  40571c:	cbz	w1, 405774 <ferror@plt+0x2dd4>
  405720:	ldr	x0, [x19, #8]
  405724:	ldr	x0, [x0, #8]
  405728:	ldr	x1, [x19, #16]
  40572c:	ldr	x1, [x1, #8]
  405730:	ldr	x19, [sp, #16]
  405734:	ldp	x29, x30, [sp], #32
  405738:	b	40d8e0 <ferror@plt+0xaf40>
  40573c:	cmp	w1, #0x1
  405740:	b.ne	405794 <ferror@plt+0x2df4>  // b.any
  405744:	ldr	x19, [sp, #16]
  405748:	mov	x0, #0x0                   	// #0
  40574c:	ldp	x29, x30, [sp], #32
  405750:	mov	x1, #0x0                   	// #0
  405754:	b	40d8e0 <ferror@plt+0xaf40>
  405758:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40575c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405760:	ldr	x3, [x0, #8]
  405764:	add	x2, x2, #0x458
  405768:	ldr	w0, [x1, #1676]
  40576c:	mov	w1, #0x0                   	// #0
  405770:	b	4033d0 <ferror@plt+0xa30>
  405774:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405778:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40577c:	ldr	x3, [x0, #8]
  405780:	add	x2, x2, #0x488
  405784:	ldr	w0, [x1, #1676]
  405788:	mov	w1, #0x0                   	// #0
  40578c:	bl	4033d0 <ferror@plt+0xa30>
  405790:	b	405720 <ferror@plt+0x2d80>
  405794:	ldr	x0, [x2, #8]
  405798:	cmp	w1, #0x3
  40579c:	ldr	x0, [x0, #8]
  4057a0:	b.eq	405728 <ferror@plt+0x2d88>  // b.none
  4057a4:	mov	x1, #0x0                   	// #0
  4057a8:	b	405730 <ferror@plt+0x2d90>
  4057ac:	nop
  4057b0:	cmp	w1, #0x0
  4057b4:	ldr	x0, [x2]
  4057b8:	b.gt	4057cc <ferror@plt+0x2e2c>
  4057bc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4057c0:	ldr	w1, [x1, #1688]
  4057c4:	cbz	w1, 405828 <ferror@plt+0x2e88>
  4057c8:	ret
  4057cc:	stp	x29, x30, [sp, #-32]!
  4057d0:	cmp	w1, #0x3
  4057d4:	mov	x29, sp
  4057d8:	str	x19, [sp, #16]
  4057dc:	mov	x19, x2
  4057e0:	b.le	40580c <ferror@plt+0x2e6c>
  4057e4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4057e8:	ldr	w1, [x1, #1688]
  4057ec:	cbz	w1, 405844 <ferror@plt+0x2ea4>
  4057f0:	ldr	x0, [x19, #8]
  4057f4:	ldr	x0, [x0, #8]
  4057f8:	ldr	x1, [x19, #16]
  4057fc:	ldr	x1, [x1, #8]
  405800:	ldr	x19, [sp, #16]
  405804:	ldp	x29, x30, [sp], #32
  405808:	b	40d9a0 <ferror@plt+0xb000>
  40580c:	cmp	w1, #0x1
  405810:	b.ne	405864 <ferror@plt+0x2ec4>  // b.any
  405814:	ldr	x19, [sp, #16]
  405818:	mov	x0, #0x0                   	// #0
  40581c:	ldp	x29, x30, [sp], #32
  405820:	mov	x1, #0x0                   	// #0
  405824:	b	40d9a0 <ferror@plt+0xb000>
  405828:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40582c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405830:	ldr	x3, [x0, #8]
  405834:	add	x2, x2, #0x458
  405838:	ldr	w0, [x1, #1676]
  40583c:	mov	w1, #0x0                   	// #0
  405840:	b	4033d0 <ferror@plt+0xa30>
  405844:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405848:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40584c:	ldr	x3, [x0, #8]
  405850:	add	x2, x2, #0x488
  405854:	ldr	w0, [x1, #1676]
  405858:	mov	w1, #0x0                   	// #0
  40585c:	bl	4033d0 <ferror@plt+0xa30>
  405860:	b	4057f0 <ferror@plt+0x2e50>
  405864:	ldr	x0, [x2, #8]
  405868:	cmp	w1, #0x3
  40586c:	ldr	x0, [x0, #8]
  405870:	b.eq	4057f8 <ferror@plt+0x2e58>  // b.none
  405874:	mov	x1, #0x0                   	// #0
  405878:	b	405800 <ferror@plt+0x2e60>
  40587c:	nop
  405880:	cmp	w1, #0x1
  405884:	b.gt	405898 <ferror@plt+0x2ef8>
  405888:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40588c:	ldr	w0, [x0, #1688]
  405890:	cbz	w0, 40592c <ferror@plt+0x2f8c>
  405894:	ret
  405898:	stp	x29, x30, [sp, #-32]!
  40589c:	mov	x29, sp
  4058a0:	stp	x19, x20, [sp, #16]
  4058a4:	mov	x19, x0
  4058a8:	bl	404658 <ferror@plt+0x1cb8>
  4058ac:	ldp	x0, x1, [x19, #24]
  4058b0:	cmp	x1, x0
  4058b4:	b.eq	405960 <ferror@plt+0x2fc0>  // b.none
  4058b8:	add	x1, x0, #0x1
  4058bc:	str	x1, [x19, #24]
  4058c0:	strb	wzr, [x0]
  4058c4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  4058c8:	bl	409750 <ferror@plt+0x6db0>
  4058cc:	ldp	x2, x4, [x19, #16]
  4058d0:	ldr	x0, [x20, #1064]
  4058d4:	cmp	x2, x4
  4058d8:	b.eq	405950 <ferror@plt+0x2fb0>  // b.none
  4058dc:	ldr	x1, [x19, #48]
  4058e0:	ldr	x3, [x19, #8]
  4058e4:	add	x4, x4, x1
  4058e8:	ldr	x5, [x19, #32]
  4058ec:	bic	x1, x4, x1
  4058f0:	str	x1, [x19, #24]
  4058f4:	sub	x4, x1, x3
  4058f8:	sub	x3, x5, x3
  4058fc:	cmp	x4, x3
  405900:	b.ls	40590c <ferror@plt+0x2f6c>  // b.plast
  405904:	mov	x1, x5
  405908:	str	x5, [x19, #24]
  40590c:	str	x1, [x19, #16]
  405910:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  405914:	add	x1, x1, #0x150
  405918:	bl	41cdb0 <ferror@plt+0x1a410>
  40591c:	ldr	x0, [x20, #1064]
  405920:	ldp	x19, x20, [sp, #16]
  405924:	ldp	x29, x30, [sp], #32
  405928:	b	41d3d8 <ferror@plt+0x1aa38>
  40592c:	mov	x3, x2
  405930:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405934:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405938:	mov	w1, #0x0                   	// #0
  40593c:	ldr	w0, [x0, #1676]
  405940:	add	x2, x2, #0x458
  405944:	ldr	x3, [x3]
  405948:	ldr	x3, [x3, #8]
  40594c:	b	4033d0 <ferror@plt+0xa30>
  405950:	ldrb	w1, [x19, #80]
  405954:	orr	w1, w1, #0x2
  405958:	strb	w1, [x19, #80]
  40595c:	b	4058dc <ferror@plt+0x2f3c>
  405960:	mov	x0, x19
  405964:	mov	x1, #0x1                   	// #1
  405968:	bl	41d788 <_obstack_newchunk@@Base>
  40596c:	ldr	x0, [x19, #24]
  405970:	b	4058b8 <ferror@plt+0x2f18>
  405974:	nop
  405978:	cmp	w1, #0x1
  40597c:	b.gt	405990 <ferror@plt+0x2ff0>
  405980:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405984:	ldr	w0, [x0, #1688]
  405988:	cbz	w0, 40599c <ferror@plt+0x2ffc>
  40598c:	ret
  405990:	add	x2, x2, #0x8
  405994:	sub	w1, w1, #0x1
  405998:	b	40b258 <ferror@plt+0x88b8>
  40599c:	ldr	x3, [x2]
  4059a0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4059a4:	mov	w1, #0x0                   	// #0
  4059a8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4059ac:	ldr	w0, [x0, #1676]
  4059b0:	add	x2, x2, #0x458
  4059b4:	ldr	x3, [x3, #8]
  4059b8:	b	4033d0 <ferror@plt+0xa30>
  4059bc:	nop
  4059c0:	stp	x29, x30, [sp, #-32]!
  4059c4:	cmp	w1, #0x1
  4059c8:	mov	x29, sp
  4059cc:	stp	x19, x20, [sp, #16]
  4059d0:	mov	x20, x0
  4059d4:	ldr	x0, [x2]
  4059d8:	b.gt	4059f4 <ferror@plt+0x3054>
  4059dc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4059e0:	ldr	w1, [x1, #1688]
  4059e4:	cbz	w1, 405a2c <ferror@plt+0x308c>
  4059e8:	ldp	x19, x20, [sp, #16]
  4059ec:	ldp	x29, x30, [sp], #32
  4059f0:	ret
  4059f4:	mov	x19, x2
  4059f8:	cmp	w1, #0x2
  4059fc:	b.eq	405a0c <ferror@plt+0x306c>  // b.none
  405a00:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405a04:	ldr	w1, [x1, #1688]
  405a08:	cbz	w1, 405a50 <ferror@plt+0x30b0>
  405a0c:	ldr	x0, [x19, #8]
  405a10:	ldr	x0, [x0, #8]
  405a14:	bl	402390 <strlen@plt>
  405a18:	mov	w1, w0
  405a1c:	mov	x0, x20
  405a20:	ldp	x19, x20, [sp, #16]
  405a24:	ldp	x29, x30, [sp], #32
  405a28:	b	403c78 <ferror@plt+0x12d8>
  405a2c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405a30:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405a34:	ldp	x19, x20, [sp, #16]
  405a38:	add	x2, x2, #0x458
  405a3c:	ldp	x29, x30, [sp], #32
  405a40:	ldr	x3, [x0, #8]
  405a44:	ldr	w0, [x1, #1676]
  405a48:	mov	w1, #0x0                   	// #0
  405a4c:	b	4033d0 <ferror@plt+0xa30>
  405a50:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405a54:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405a58:	ldr	x3, [x0, #8]
  405a5c:	add	x2, x2, #0x488
  405a60:	ldr	w0, [x1, #1676]
  405a64:	mov	w1, #0x0                   	// #0
  405a68:	bl	4033d0 <ferror@plt+0xa30>
  405a6c:	b	405a0c <ferror@plt+0x306c>
  405a70:	stp	x29, x30, [sp, #-64]!
  405a74:	cmp	w1, #0x1
  405a78:	mov	x29, sp
  405a7c:	stp	x19, x20, [sp, #16]
  405a80:	mov	w20, w1
  405a84:	ldr	x1, [x2]
  405a88:	b.gt	405aa4 <ferror@plt+0x3104>
  405a8c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405a90:	ldr	w0, [x0, #1688]
  405a94:	cbz	w0, 405b6c <ferror@plt+0x31cc>
  405a98:	ldp	x19, x20, [sp, #16]
  405a9c:	ldp	x29, x30, [sp], #64
  405aa0:	ret
  405aa4:	stp	x21, x22, [sp, #32]
  405aa8:	mov	x21, x0
  405aac:	mov	x19, x2
  405ab0:	ldr	x0, [x2, #8]
  405ab4:	ldr	w22, [x0]
  405ab8:	cmp	w22, #0x1
  405abc:	b.ne	405b44 <ferror@plt+0x31a4>  // b.any
  405ac0:	str	x23, [sp, #48]
  405ac4:	mov	w1, #0x0                   	// #0
  405ac8:	ldr	x23, [x0, #8]
  405acc:	mov	x0, x23
  405ad0:	bl	411620 <ferror@plt+0xec80>
  405ad4:	cbz	x0, 405b90 <ferror@plt+0x31f0>
  405ad8:	ldr	w1, [x0, #24]
  405adc:	cbz	w1, 405b90 <ferror@plt+0x31f0>
  405ae0:	ldrb	w1, [x0, #8]
  405ae4:	tbnz	w1, #2, 405b24 <ferror@plt+0x3184>
  405ae8:	cmp	w20, #0x2
  405aec:	b.eq	405b24 <ferror@plt+0x3184>  // b.none
  405af0:	adrp	x4, 41e000 <_obstack_memory_used@@Base+0x640>
  405af4:	add	x4, x4, #0xe8
  405af8:	mov	x1, #0x2                   	// #2
  405afc:	nop
  405b00:	ldr	x2, [x19, x1, lsl #3]
  405b04:	add	x1, x1, #0x1
  405b08:	ldr	w3, [x2]
  405b0c:	cmp	w3, #0x1
  405b10:	b.eq	405b1c <ferror@plt+0x317c>  // b.none
  405b14:	str	w22, [x2]
  405b18:	str	x4, [x2, #8]
  405b1c:	cmp	w20, w1
  405b20:	b.gt	405b00 <ferror@plt+0x3160>
  405b24:	mov	x3, x21
  405b28:	add	x2, x19, #0x8
  405b2c:	sub	w1, w20, #0x1
  405b30:	ldp	x19, x20, [sp, #16]
  405b34:	ldp	x21, x22, [sp, #32]
  405b38:	ldr	x23, [sp, #48]
  405b3c:	ldp	x29, x30, [sp], #64
  405b40:	b	40eef8 <ferror@plt+0xc558>
  405b44:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405b48:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405b4c:	ldp	x19, x20, [sp, #16]
  405b50:	add	x2, x2, #0x508
  405b54:	ldp	x21, x22, [sp, #32]
  405b58:	ldp	x29, x30, [sp], #64
  405b5c:	ldr	w0, [x0, #1676]
  405b60:	ldr	x3, [x1, #8]
  405b64:	mov	w1, #0x0                   	// #0
  405b68:	b	4033d0 <ferror@plt+0xa30>
  405b6c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405b70:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405b74:	ldp	x19, x20, [sp, #16]
  405b78:	add	x2, x2, #0x458
  405b7c:	ldp	x29, x30, [sp], #64
  405b80:	ldr	w0, [x0, #1676]
  405b84:	ldr	x3, [x1, #8]
  405b88:	mov	w1, #0x0                   	// #0
  405b8c:	b	4033d0 <ferror@plt+0xa30>
  405b90:	mov	x3, x23
  405b94:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405b98:	ldp	x19, x20, [sp, #16]
  405b9c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405ba0:	ldp	x21, x22, [sp, #32]
  405ba4:	add	x2, x2, #0x388
  405ba8:	ldr	x23, [sp, #48]
  405bac:	mov	w1, #0x0                   	// #0
  405bb0:	ldp	x29, x30, [sp], #64
  405bb4:	ldr	w0, [x0, #1676]
  405bb8:	b	4033d0 <ferror@plt+0xa30>
  405bbc:	nop
  405bc0:	stp	x29, x30, [sp, #-48]!
  405bc4:	cmp	w1, #0x1
  405bc8:	mov	x29, sp
  405bcc:	stp	x19, x20, [sp, #16]
  405bd0:	mov	x20, x0
  405bd4:	ldr	x0, [x2]
  405bd8:	b.gt	405bf4 <ferror@plt+0x3254>
  405bdc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405be0:	ldr	w1, [x1, #1688]
  405be4:	cbz	w1, 405c44 <ferror@plt+0x32a4>
  405be8:	ldp	x19, x20, [sp, #16]
  405bec:	ldp	x29, x30, [sp], #48
  405bf0:	ret
  405bf4:	str	x21, [sp, #32]
  405bf8:	mov	x19, x2
  405bfc:	cmp	w1, #0x2
  405c00:	ldr	x21, [x0, #8]
  405c04:	b.eq	405c14 <ferror@plt+0x3274>  // b.none
  405c08:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405c0c:	ldr	w0, [x0, #1688]
  405c10:	cbz	w0, 405c68 <ferror@plt+0x32c8>
  405c14:	ldr	x0, [x19, #8]
  405c18:	ldr	x19, [x0, #8]
  405c1c:	mov	x0, x19
  405c20:	bl	402390 <strlen@plt>
  405c24:	mov	x2, x19
  405c28:	mov	x3, x0
  405c2c:	mov	x1, x21
  405c30:	mov	x0, x20
  405c34:	ldp	x19, x20, [sp, #16]
  405c38:	ldr	x21, [sp, #32]
  405c3c:	ldp	x29, x30, [sp], #48
  405c40:	b	403d60 <ferror@plt+0x13c0>
  405c44:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405c48:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405c4c:	ldp	x19, x20, [sp, #16]
  405c50:	add	x2, x2, #0x458
  405c54:	ldp	x29, x30, [sp], #48
  405c58:	ldr	x3, [x0, #8]
  405c5c:	ldr	w0, [x1, #1676]
  405c60:	mov	w1, #0x0                   	// #0
  405c64:	b	4033d0 <ferror@plt+0xa30>
  405c68:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405c6c:	mov	x3, x21
  405c70:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405c74:	mov	w1, #0x0                   	// #0
  405c78:	ldr	w0, [x0, #1676]
  405c7c:	add	x2, x2, #0x488
  405c80:	bl	4033d0 <ferror@plt+0xa30>
  405c84:	ldr	x0, [x19]
  405c88:	ldr	x21, [x0, #8]
  405c8c:	b	405c14 <ferror@plt+0x3274>
  405c90:	stp	x29, x30, [sp, #-64]!
  405c94:	cmp	w1, #0x1
  405c98:	mov	x29, sp
  405c9c:	stp	x21, x22, [sp, #32]
  405ca0:	mov	x22, x0
  405ca4:	ldr	x0, [x2]
  405ca8:	b.gt	405cc4 <ferror@plt+0x3324>
  405cac:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405cb0:	ldr	w1, [x1, #1688]
  405cb4:	cbz	w1, 405dc0 <ferror@plt+0x3420>
  405cb8:	ldp	x21, x22, [sp, #32]
  405cbc:	ldp	x29, x30, [sp], #64
  405cc0:	ret
  405cc4:	stp	x19, x20, [sp, #16]
  405cc8:	mov	x20, x2
  405ccc:	mov	w21, w1
  405cd0:	ldr	x2, [x2, #8]
  405cd4:	ldr	w1, [x2]
  405cd8:	cmp	w1, #0x1
  405cdc:	b.ne	405d98 <ferror@plt+0x33f8>  // b.any
  405ce0:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  405ce4:	add	x19, x19, #0xa00
  405ce8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  405cec:	add	x19, x19, #0x28
  405cf0:	add	x0, x1, #0x530
  405cf4:	str	x23, [sp, #48]
  405cf8:	ldr	x23, [x2, #8]
  405cfc:	b	405d10 <ferror@plt+0x3370>
  405d00:	ldr	x0, [x19, #24]
  405d04:	add	x2, x19, #0x18
  405d08:	cbz	x0, 405de4 <ferror@plt+0x3444>
  405d0c:	mov	x19, x2
  405d10:	mov	x1, x23
  405d14:	bl	402760 <strcmp@plt>
  405d18:	cbnz	w0, 405d00 <ferror@plt+0x3360>
  405d1c:	ldr	x4, [x19, #16]
  405d20:	adrp	x0, 403000 <ferror@plt+0x660>
  405d24:	add	x0, x0, #0x528
  405d28:	cmp	x4, x0
  405d2c:	b.eq	405dec <ferror@plt+0x344c>  // b.none
  405d30:	ldrb	w0, [x19, #8]
  405d34:	tbnz	w0, #1, 405d74 <ferror@plt+0x33d4>
  405d38:	cmp	w21, #0x2
  405d3c:	b.eq	405d74 <ferror@plt+0x33d4>  // b.none
  405d40:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0x640>
  405d44:	add	x3, x3, #0xe8
  405d48:	mov	x1, #0x2                   	// #2
  405d4c:	mov	w5, #0x1                   	// #1
  405d50:	ldr	x2, [x20, x1, lsl #3]
  405d54:	add	x1, x1, #0x1
  405d58:	ldr	w0, [x2]
  405d5c:	cmp	w0, #0x1
  405d60:	b.eq	405d6c <ferror@plt+0x33cc>  // b.none
  405d64:	str	w5, [x2]
  405d68:	str	x3, [x2, #8]
  405d6c:	cmp	w21, w1
  405d70:	b.gt	405d50 <ferror@plt+0x33b0>
  405d74:	add	x2, x20, #0x8
  405d78:	sub	w1, w21, #0x1
  405d7c:	mov	x0, x22
  405d80:	mov	x16, x4
  405d84:	ldp	x19, x20, [sp, #16]
  405d88:	ldp	x21, x22, [sp, #32]
  405d8c:	ldr	x23, [sp, #48]
  405d90:	ldp	x29, x30, [sp], #64
  405d94:	br	x16
  405d98:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405d9c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405da0:	ldp	x19, x20, [sp, #16]
  405da4:	add	x2, x2, #0x508
  405da8:	ldp	x21, x22, [sp, #32]
  405dac:	ldp	x29, x30, [sp], #64
  405db0:	ldr	x3, [x0, #8]
  405db4:	ldr	w0, [x1, #1676]
  405db8:	mov	w1, #0x0                   	// #0
  405dbc:	b	4033d0 <ferror@plt+0xa30>
  405dc0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  405dc4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405dc8:	ldp	x21, x22, [sp, #32]
  405dcc:	add	x2, x2, #0x458
  405dd0:	ldp	x29, x30, [sp], #64
  405dd4:	ldr	x3, [x0, #8]
  405dd8:	ldr	w0, [x1, #1676]
  405ddc:	mov	w1, #0x0                   	// #0
  405de0:	b	4033d0 <ferror@plt+0xa30>
  405de4:	add	x19, x19, #0x30
  405de8:	b	405d1c <ferror@plt+0x337c>
  405dec:	mov	x3, x23
  405df0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405df4:	ldp	x19, x20, [sp, #16]
  405df8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405dfc:	ldp	x21, x22, [sp, #32]
  405e00:	add	x2, x2, #0x540
  405e04:	ldr	x23, [sp, #48]
  405e08:	mov	w1, #0x0                   	// #0
  405e0c:	ldp	x29, x30, [sp], #64
  405e10:	ldr	w0, [x0, #1676]
  405e14:	b	4033d0 <ferror@plt+0xa30>
  405e18:	stp	x29, x30, [sp, #-48]!
  405e1c:	cmp	w1, #0x1
  405e20:	mov	x29, sp
  405e24:	stp	x19, x20, [sp, #16]
  405e28:	mov	x20, x2
  405e2c:	b.gt	405e48 <ferror@plt+0x34a8>
  405e30:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405e34:	ldr	w0, [x0, #1688]
  405e38:	cbz	w0, 405f64 <ferror@plt+0x35c4>
  405e3c:	ldp	x19, x20, [sp, #16]
  405e40:	ldp	x29, x30, [sp], #48
  405e44:	ret
  405e48:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x1a640>
  405e4c:	mov	x19, x0
  405e50:	ldr	w3, [x3, #1680]
  405e54:	cbz	w3, 405ef8 <ferror@plt+0x3558>
  405e58:	ldr	x0, [x2, #8]
  405e5c:	stp	x21, x22, [sp, #32]
  405e60:	ldr	x22, [x0, #8]
  405e64:	mov	x0, x22
  405e68:	bl	402390 <strlen@plt>
  405e6c:	mov	x21, x0
  405e70:	ldp	x0, x1, [x19, #24]
  405e74:	sub	x1, x1, x0
  405e78:	cmp	x21, x1
  405e7c:	b.ls	405e98 <ferror@plt+0x34f8>  // b.plast
  405e80:	mov	x1, x21
  405e84:	mov	x0, x19
  405e88:	bl	41d788 <_obstack_newchunk@@Base>
  405e8c:	ldr	x1, [x20, #8]
  405e90:	ldr	x0, [x19, #24]
  405e94:	ldr	x22, [x1, #8]
  405e98:	mov	x1, x22
  405e9c:	mov	x2, x21
  405ea0:	bl	402350 <memcpy@plt>
  405ea4:	ldr	x1, [x19, #24]
  405ea8:	add	x0, x1, x21
  405eac:	ldr	x1, [x19, #32]
  405eb0:	ldp	x21, x22, [sp, #32]
  405eb4:	str	x0, [x19, #24]
  405eb8:	cmp	x0, x1
  405ebc:	b.ne	405f0c <ferror@plt+0x356c>  // b.any
  405ec0:	mov	x0, x19
  405ec4:	mov	x1, #0x1                   	// #1
  405ec8:	bl	41d788 <_obstack_newchunk@@Base>
  405ecc:	ldr	x0, [x19, #24]
  405ed0:	add	x1, x0, #0x1
  405ed4:	str	x1, [x19, #24]
  405ed8:	strb	wzr, [x0]
  405edc:	ldp	x0, x3, [x19, #16]
  405ee0:	cmp	x0, x3
  405ee4:	b.ne	405f24 <ferror@plt+0x3584>  // b.any
  405ee8:	ldrb	w1, [x19, #80]
  405eec:	orr	w1, w1, #0x2
  405ef0:	strb	w1, [x19, #80]
  405ef4:	b	405f24 <ferror@plt+0x3584>
  405ef8:	bl	404658 <ferror@plt+0x1cb8>
  405efc:	ldr	x0, [x19, #24]
  405f00:	ldr	x1, [x19, #32]
  405f04:	cmp	x0, x1
  405f08:	b.eq	405ec0 <ferror@plt+0x3520>  // b.none
  405f0c:	add	x1, x0, #0x1
  405f10:	str	x1, [x19, #24]
  405f14:	strb	wzr, [x0]
  405f18:	ldp	x0, x3, [x19, #16]
  405f1c:	cmp	x0, x3
  405f20:	b.eq	405ee8 <ferror@plt+0x3548>  // b.none
  405f24:	ldr	x1, [x19, #48]
  405f28:	ldr	x2, [x19, #8]
  405f2c:	add	x3, x3, x1
  405f30:	ldr	x4, [x19, #32]
  405f34:	bic	x1, x3, x1
  405f38:	str	x1, [x19, #24]
  405f3c:	sub	x3, x1, x2
  405f40:	sub	x2, x4, x2
  405f44:	cmp	x3, x2
  405f48:	b.ls	405f54 <ferror@plt+0x35b4>  // b.plast
  405f4c:	mov	x1, x4
  405f50:	str	x4, [x19, #24]
  405f54:	str	x1, [x19, #16]
  405f58:	ldp	x19, x20, [sp, #16]
  405f5c:	ldp	x29, x30, [sp], #48
  405f60:	b	40d3c0 <ferror@plt+0xaa20>
  405f64:	ldr	x3, [x20]
  405f68:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405f6c:	ldp	x19, x20, [sp, #16]
  405f70:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405f74:	ldp	x29, x30, [sp], #48
  405f78:	add	x2, x2, #0x458
  405f7c:	ldr	w0, [x0, #1676]
  405f80:	mov	w1, #0x0                   	// #0
  405f84:	ldr	x3, [x3, #8]
  405f88:	b	4033d0 <ferror@plt+0xa30>
  405f8c:	nop
  405f90:	cmp	w1, #0x1
  405f94:	b.gt	405fa8 <ferror@plt+0x3608>
  405f98:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405f9c:	ldr	w0, [x0, #1688]
  405fa0:	cbz	w0, 405fc0 <ferror@plt+0x3620>
  405fa4:	ret
  405fa8:	add	x2, x2, #0x8
  405fac:	sub	w1, w1, #0x1
  405fb0:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0x1640>
  405fb4:	mov	w4, #0x1                   	// #1
  405fb8:	add	x3, x3, #0x558
  405fbc:	b	4037e0 <ferror@plt+0xe40>
  405fc0:	ldr	x3, [x2]
  405fc4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  405fc8:	mov	w1, #0x0                   	// #0
  405fcc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  405fd0:	ldr	w0, [x0, #1676]
  405fd4:	add	x2, x2, #0x458
  405fd8:	ldr	x3, [x3, #8]
  405fdc:	b	4033d0 <ferror@plt+0xa30>
  405fe0:	stp	x29, x30, [sp, #-48]!
  405fe4:	cmp	w1, #0x2
  405fe8:	mov	x29, sp
  405fec:	str	x21, [sp, #32]
  405ff0:	mov	x21, x0
  405ff4:	ldr	x0, [x2]
  405ff8:	b.gt	406014 <ferror@plt+0x3674>
  405ffc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406000:	ldr	w1, [x1, #1688]
  406004:	cbz	w1, 4060e0 <ferror@plt+0x3740>
  406008:	ldr	x21, [sp, #32]
  40600c:	ldp	x29, x30, [sp], #48
  406010:	ret
  406014:	stp	x19, x20, [sp, #16]
  406018:	cmp	w1, #0x4
  40601c:	mov	x19, x2
  406020:	mov	w20, w1
  406024:	b.le	4060a0 <ferror@plt+0x3700>
  406028:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40602c:	ldr	w1, [x1, #1688]
  406030:	cbz	w1, 406104 <ferror@plt+0x3764>
  406034:	ldr	x0, [x19, #8]
  406038:	mov	w1, #0x0                   	// #0
  40603c:	ldr	x0, [x0, #8]
  406040:	bl	411620 <ferror@plt+0xec80>
  406044:	cbz	x0, 4060c4 <ferror@plt+0x3724>
  406048:	ldr	w0, [x0, #24]
  40604c:	cbz	w0, 4060c4 <ferror@plt+0x3724>
  406050:	ldr	x0, [x19, #16]
  406054:	ldr	x20, [x0, #8]
  406058:	cbz	x20, 4060d0 <ferror@plt+0x3730>
  40605c:	mov	x0, x20
  406060:	bl	402390 <strlen@plt>
  406064:	mov	x19, x0
  406068:	ldp	x0, x1, [x21, #24]
  40606c:	sub	x1, x1, x0
  406070:	cmp	x19, x1
  406074:	b.hi	406124 <ferror@plt+0x3784>  // b.pmore
  406078:	mov	x1, x20
  40607c:	mov	x2, x19
  406080:	bl	402350 <memcpy@plt>
  406084:	ldr	x0, [x21, #24]
  406088:	add	x0, x0, x19
  40608c:	ldp	x19, x20, [sp, #16]
  406090:	str	x0, [x21, #24]
  406094:	ldr	x21, [sp, #32]
  406098:	ldp	x29, x30, [sp], #48
  40609c:	ret
  4060a0:	ldr	x0, [x2, #8]
  4060a4:	mov	w1, #0x0                   	// #0
  4060a8:	ldr	x0, [x0, #8]
  4060ac:	bl	411620 <ferror@plt+0xec80>
  4060b0:	cbz	x0, 4060bc <ferror@plt+0x371c>
  4060b4:	ldr	w0, [x0, #24]
  4060b8:	cbnz	w0, 406050 <ferror@plt+0x36b0>
  4060bc:	cmp	w20, #0x3
  4060c0:	b.eq	4060d0 <ferror@plt+0x3730>  // b.none
  4060c4:	ldr	x0, [x19, #24]
  4060c8:	ldr	x20, [x0, #8]
  4060cc:	cbnz	x20, 40605c <ferror@plt+0x36bc>
  4060d0:	ldp	x19, x20, [sp, #16]
  4060d4:	ldr	x21, [sp, #32]
  4060d8:	ldp	x29, x30, [sp], #48
  4060dc:	ret
  4060e0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4060e4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4060e8:	ldr	x21, [sp, #32]
  4060ec:	add	x2, x2, #0x458
  4060f0:	ldp	x29, x30, [sp], #48
  4060f4:	ldr	x3, [x0, #8]
  4060f8:	ldr	w0, [x1, #1676]
  4060fc:	mov	w1, #0x0                   	// #0
  406100:	b	4033d0 <ferror@plt+0xa30>
  406104:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406108:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40610c:	ldr	x3, [x0, #8]
  406110:	add	x2, x2, #0x488
  406114:	ldr	w0, [x1, #1676]
  406118:	mov	w1, #0x0                   	// #0
  40611c:	bl	4033d0 <ferror@plt+0xa30>
  406120:	b	406034 <ferror@plt+0x3694>
  406124:	mov	x0, x21
  406128:	mov	x1, x19
  40612c:	bl	41d788 <_obstack_newchunk@@Base>
  406130:	ldr	x0, [x21, #24]
  406134:	b	406078 <ferror@plt+0x36d8>
  406138:	cmp	w1, #0x0
  40613c:	ldr	x0, [x2]
  406140:	b.gt	406154 <ferror@plt+0x37b4>
  406144:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406148:	ldr	w1, [x1, #1688]
  40614c:	cbz	w1, 4061e0 <ferror@plt+0x3840>
  406150:	ret
  406154:	stp	x29, x30, [sp, #-32]!
  406158:	cmp	w1, #0x2
  40615c:	mov	x29, sp
  406160:	stp	x19, x20, [sp, #16]
  406164:	mov	x19, x2
  406168:	b.le	4061c4 <ferror@plt+0x3824>
  40616c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406170:	ldr	w1, [x1, #1688]
  406174:	cbz	w1, 406224 <ferror@plt+0x3884>
  406178:	ldr	x0, [x19, #8]
  40617c:	mov	w1, #0xfd                  	// #253
  406180:	ldr	x0, [x0, #8]
  406184:	ldrb	w20, [x0]
  406188:	sub	w2, w20, #0x2b
  40618c:	tst	w2, w1
  406190:	b.ne	406264 <ferror@plt+0x38c4>  // b.any
  406194:	add	x0, x0, #0x1
  406198:	bl	4095b8 <ferror@plt+0x6c18>
  40619c:	tbnz	w0, #31, 4061fc <ferror@plt+0x385c>
  4061a0:	cmp	w20, #0x2b
  4061a4:	b.eq	406278 <ferror@plt+0x38d8>  // b.none
  4061a8:	cmp	w20, #0x2d
  4061ac:	b.ne	406244 <ferror@plt+0x38a4>  // b.any
  4061b0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4061b4:	ldr	w2, [x1, #1692]
  4061b8:	bic	w0, w2, w0
  4061bc:	str	w0, [x1, #1692]
  4061c0:	b	4061d4 <ferror@plt+0x3834>
  4061c4:	cmp	w1, #0x1
  4061c8:	b.ne	406178 <ferror@plt+0x37d8>  // b.any
  4061cc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4061d0:	str	wzr, [x0, #1692]
  4061d4:	ldp	x19, x20, [sp, #16]
  4061d8:	ldp	x29, x30, [sp], #32
  4061dc:	ret
  4061e0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4061e4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4061e8:	ldr	x3, [x0, #8]
  4061ec:	add	x2, x2, #0x458
  4061f0:	ldr	w0, [x1, #1676]
  4061f4:	mov	w1, #0x0                   	// #0
  4061f8:	b	4033d0 <ferror@plt+0xa30>
  4061fc:	ldr	x3, [x19, #8]
  406200:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406204:	ldp	x19, x20, [sp, #16]
  406208:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40620c:	ldp	x29, x30, [sp], #32
  406210:	add	x2, x2, #0x590
  406214:	ldr	w0, [x0, #1676]
  406218:	mov	w1, #0x0                   	// #0
  40621c:	ldr	x3, [x3, #8]
  406220:	b	4033d0 <ferror@plt+0xa30>
  406224:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406228:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40622c:	ldr	x3, [x0, #8]
  406230:	add	x2, x2, #0x488
  406234:	ldr	w0, [x1, #1676]
  406238:	mov	w1, #0x0                   	// #0
  40623c:	bl	4033d0 <ferror@plt+0xa30>
  406240:	b	406178 <ferror@plt+0x37d8>
  406244:	cbz	w20, 40626c <ferror@plt+0x38cc>
  406248:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40624c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406250:	add	x2, x2, #0x560
  406254:	mov	w1, #0x0                   	// #0
  406258:	ldr	w0, [x0, #1676]
  40625c:	bl	4033d0 <ferror@plt+0xa30>
  406260:	bl	4026d0 <abort@plt>
  406264:	bl	4095b8 <ferror@plt+0x6c18>
  406268:	tbnz	w0, #31, 4061fc <ferror@plt+0x385c>
  40626c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406270:	str	w0, [x1, #1692]
  406274:	b	4061d4 <ferror@plt+0x3834>
  406278:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x1a640>
  40627c:	ldr	w1, [x2, #1692]
  406280:	orr	w0, w1, w0
  406284:	str	w0, [x2, #1692]
  406288:	b	4061d4 <ferror@plt+0x3834>
  40628c:	nop
  406290:	stp	x29, x30, [sp, #-112]!
  406294:	cmp	w1, #0x1
  406298:	mov	x29, sp
  40629c:	stp	x23, x24, [sp, #48]
  4062a0:	mov	x24, x2
  4062a4:	b.le	406498 <ferror@plt+0x3af8>
  4062a8:	adrp	x23, 41e000 <_obstack_memory_used@@Base+0x640>
  4062ac:	add	x23, x23, #0xe8
  4062b0:	stp	x19, x20, [sp, #16]
  4062b4:	mov	w20, #0x1                   	// #1
  4062b8:	stp	x21, x22, [sp, #32]
  4062bc:	mov	w22, w1
  4062c0:	mov	x21, x0
  4062c4:	stp	x25, x26, [sp, #64]
  4062c8:	adrp	x25, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4062cc:	adrp	x26, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4062d0:	add	x25, x25, #0xdd0
  4062d4:	stp	x27, x28, [sp, #80]
  4062d8:	b	406324 <ferror@plt+0x3984>
  4062dc:	ldr	x0, [x19, #32]
  4062e0:	adrp	x1, 403000 <ferror@plt+0x660>
  4062e4:	add	x1, x1, #0x528
  4062e8:	cmp	x0, x1
  4062ec:	b.eq	406478 <ferror@plt+0x3ad8>  // b.none
  4062f0:	cmp	w22, #0x2
  4062f4:	b.eq	40645c <ferror@plt+0x3abc>  // b.none
  4062f8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4062fc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406300:	mov	x3, x27
  406304:	add	x2, x2, #0x5b8
  406308:	ldr	w0, [x0, #1676]
  40630c:	mov	w1, #0x0                   	// #0
  406310:	bl	4033d0 <ferror@plt+0xa30>
  406314:	nop
  406318:	add	w20, w20, #0x1
  40631c:	cmp	w22, w20
  406320:	b.eq	4064d8 <ferror@plt+0x3b38>  // b.none
  406324:	cmp	w22, w20
  406328:	mov	x27, x23
  40632c:	b.le	406338 <ferror@plt+0x3998>
  406330:	ldr	x0, [x24, w20, sxtw #3]
  406334:	ldr	x27, [x0, #8]
  406338:	mov	x0, x27
  40633c:	mov	w1, #0x0                   	// #0
  406340:	bl	411620 <ferror@plt+0xec80>
  406344:	mov	x19, x0
  406348:	cbz	x0, 406318 <ferror@plt+0x3978>
  40634c:	ldr	w0, [x0, #24]
  406350:	cmp	w0, #0x1
  406354:	b.eq	406380 <ferror@plt+0x39e0>  // b.none
  406358:	cmp	w0, #0x2
  40635c:	b.eq	4062dc <ferror@plt+0x393c>  // b.none
  406360:	cbz	w0, 406318 <ferror@plt+0x3978>
  406364:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406368:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40636c:	add	x2, x2, #0x5e8
  406370:	mov	w1, #0x0                   	// #0
  406374:	ldr	w0, [x0, #1676]
  406378:	bl	4033d0 <ferror@plt+0xa30>
  40637c:	bl	4026d0 <abort@plt>
  406380:	ldp	x0, x1, [x21, #24]
  406384:	ldr	x27, [x25, #8]
  406388:	sub	x1, x1, x0
  40638c:	cmp	x27, x1
  406390:	b.hi	40641c <ferror@plt+0x3a7c>  // b.pmore
  406394:	ldr	x1, [x25]
  406398:	mov	x2, x27
  40639c:	bl	402350 <memcpy@plt>
  4063a0:	ldr	x28, [x21, #24]
  4063a4:	ldr	x1, [x19, #32]
  4063a8:	add	x28, x28, x27
  4063ac:	str	x28, [x21, #24]
  4063b0:	mov	x0, x1
  4063b4:	str	x1, [sp, #104]
  4063b8:	bl	402390 <strlen@plt>
  4063bc:	mov	x27, x0
  4063c0:	ldr	x2, [x21, #32]
  4063c4:	ldr	x1, [sp, #104]
  4063c8:	sub	x2, x2, x28
  4063cc:	cmp	x0, x2
  4063d0:	b.hi	406444 <ferror@plt+0x3aa4>  // b.pmore
  4063d4:	mov	x2, x27
  4063d8:	mov	x0, x28
  4063dc:	bl	402350 <memcpy@plt>
  4063e0:	ldp	x1, x2, [x21, #24]
  4063e4:	add	x3, x26, #0xe08
  4063e8:	ldr	x19, [x3, #8]
  4063ec:	add	x0, x1, x27
  4063f0:	str	x0, [x21, #24]
  4063f4:	sub	x2, x2, x0
  4063f8:	cmp	x19, x2
  4063fc:	b.hi	406430 <ferror@plt+0x3a90>  // b.pmore
  406400:	ldr	x1, [x26, #3592]
  406404:	mov	x2, x19
  406408:	bl	402350 <memcpy@plt>
  40640c:	ldr	x2, [x21, #24]
  406410:	add	x2, x2, x19
  406414:	str	x2, [x21, #24]
  406418:	b	406318 <ferror@plt+0x3978>
  40641c:	mov	x0, x21
  406420:	mov	x1, x27
  406424:	bl	41d788 <_obstack_newchunk@@Base>
  406428:	ldr	x0, [x21, #24]
  40642c:	b	406394 <ferror@plt+0x39f4>
  406430:	mov	x0, x21
  406434:	mov	x1, x19
  406438:	bl	41d788 <_obstack_newchunk@@Base>
  40643c:	ldr	x0, [x21, #24]
  406440:	b	406400 <ferror@plt+0x3a60>
  406444:	mov	x1, x0
  406448:	mov	x0, x21
  40644c:	bl	41d788 <_obstack_newchunk@@Base>
  406450:	ldr	x28, [x21, #24]
  406454:	ldr	x1, [x19, #32]
  406458:	b	4063d4 <ferror@plt+0x3a34>
  40645c:	ldp	x19, x20, [sp, #16]
  406460:	ldp	x21, x22, [sp, #32]
  406464:	ldp	x23, x24, [sp, #48]
  406468:	ldp	x25, x26, [sp, #64]
  40646c:	ldp	x27, x28, [sp, #80]
  406470:	ldp	x29, x30, [sp], #112
  406474:	b	40cea0 <ferror@plt+0xa500>
  406478:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40647c:	mov	x3, x27
  406480:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406484:	mov	w1, #0x0                   	// #0
  406488:	ldr	w0, [x0, #1676]
  40648c:	add	x2, x2, #0x1d8
  406490:	bl	4033d0 <ferror@plt+0xa30>
  406494:	b	406318 <ferror@plt+0x3978>
  406498:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40649c:	ldr	w0, [x0, #1688]
  4064a0:	cbz	w0, 4064b0 <ferror@plt+0x3b10>
  4064a4:	ldp	x23, x24, [sp, #48]
  4064a8:	ldp	x29, x30, [sp], #112
  4064ac:	ret
  4064b0:	ldr	x3, [x24]
  4064b4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4064b8:	ldp	x23, x24, [sp, #48]
  4064bc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4064c0:	ldr	w0, [x0, #1676]
  4064c4:	add	x2, x2, #0x458
  4064c8:	ldr	x3, [x3, #8]
  4064cc:	mov	w1, #0x0                   	// #0
  4064d0:	ldp	x29, x30, [sp], #112
  4064d4:	b	4033d0 <ferror@plt+0xa30>
  4064d8:	ldp	x19, x20, [sp, #16]
  4064dc:	ldp	x21, x22, [sp, #32]
  4064e0:	ldp	x25, x26, [sp, #64]
  4064e4:	ldp	x27, x28, [sp, #80]
  4064e8:	b	4064a4 <ferror@plt+0x3b04>
  4064ec:	nop
  4064f0:	cmp	w1, #0x0
  4064f4:	ldr	x0, [x2]
  4064f8:	b.gt	40650c <ferror@plt+0x3b6c>
  4064fc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406500:	ldr	w1, [x1, #1688]
  406504:	cbz	w1, 40659c <ferror@plt+0x3bfc>
  406508:	ret
  40650c:	stp	x29, x30, [sp, #-32]!
  406510:	cmp	w1, #0x2
  406514:	mov	x29, sp
  406518:	stp	x19, x20, [sp, #16]
  40651c:	mov	x19, x2
  406520:	b.le	406584 <ferror@plt+0x3be4>
  406524:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406528:	ldr	w1, [x1, #1688]
  40652c:	cbz	w1, 4065b8 <ferror@plt+0x3c18>
  406530:	ldr	x0, [x19, #8]
  406534:	ldr	x0, [x0, #8]
  406538:	bl	4097e8 <ferror@plt+0x6e48>
  40653c:	tst	w0, #0xff
  406540:	b.eq	406550 <ferror@plt+0x3bb0>  // b.none
  406544:	ldp	x19, x20, [sp, #16]
  406548:	ldp	x29, x30, [sp], #32
  40654c:	ret
  406550:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406554:	ldr	w20, [x0, #1676]
  406558:	bl	402920 <__errno_location@plt>
  40655c:	ldr	x3, [x19, #8]
  406560:	mov	x1, x0
  406564:	mov	w0, w20
  406568:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x640>
  40656c:	ldp	x19, x20, [sp, #16]
  406570:	add	x2, x2, #0xb90
  406574:	ldp	x29, x30, [sp], #32
  406578:	ldr	w1, [x1]
  40657c:	ldr	x3, [x3, #8]
  406580:	b	4033d0 <ferror@plt+0xa30>
  406584:	cmp	w1, #0x1
  406588:	b.ne	406530 <ferror@plt+0x3b90>  // b.any
  40658c:	ldp	x19, x20, [sp, #16]
  406590:	mov	x0, #0x0                   	// #0
  406594:	ldp	x29, x30, [sp], #32
  406598:	b	4097e8 <ferror@plt+0x6e48>
  40659c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4065a0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4065a4:	ldr	x3, [x0, #8]
  4065a8:	add	x2, x2, #0x458
  4065ac:	ldr	w0, [x1, #1676]
  4065b0:	mov	w1, #0x0                   	// #0
  4065b4:	b	4033d0 <ferror@plt+0xa30>
  4065b8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4065bc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4065c0:	ldr	x3, [x0, #8]
  4065c4:	add	x2, x2, #0x488
  4065c8:	ldr	w0, [x1, #1676]
  4065cc:	mov	w1, #0x0                   	// #0
  4065d0:	bl	4033d0 <ferror@plt+0xa30>
  4065d4:	b	406530 <ferror@plt+0x3b90>
  4065d8:	stp	x29, x30, [sp, #-48]!
  4065dc:	cmp	w1, #0x0
  4065e0:	mov	x29, sp
  4065e4:	str	wzr, [sp, #44]
  4065e8:	ldr	x3, [x2]
  4065ec:	b.gt	406604 <ferror@plt+0x3c64>
  4065f0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4065f4:	ldr	w0, [x0, #1688]
  4065f8:	cbz	w0, 406694 <ferror@plt+0x3cf4>
  4065fc:	ldp	x29, x30, [sp], #48
  406600:	ret
  406604:	str	x19, [sp, #16]
  406608:	cmp	w1, #0x2
  40660c:	mov	x19, x2
  406610:	b.le	406650 <ferror@plt+0x3cb0>
  406614:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406618:	ldr	w0, [x0, #1688]
  40661c:	cbz	w0, 4066b8 <ferror@plt+0x3d18>
  406620:	ldr	x0, [x19, #8]
  406624:	ldr	x1, [x0, #8]
  406628:	ldrb	w0, [x1]
  40662c:	cbz	w0, 40666c <ferror@plt+0x3ccc>
  406630:	add	x0, x3, #0x8
  406634:	add	x2, sp, #0x2c
  406638:	bl	4041d0 <ferror@plt+0x1830>
  40663c:	tst	w0, #0xff
  406640:	b.ne	4066dc <ferror@plt+0x3d3c>  // b.any
  406644:	ldr	x19, [sp, #16]
  406648:	ldp	x29, x30, [sp], #48
  40664c:	ret
  406650:	cmp	w1, #0x1
  406654:	mov	w0, #0x0                   	// #0
  406658:	b.ne	406620 <ferror@plt+0x3c80>  // b.any
  40665c:	bl	410a28 <ferror@plt+0xe088>
  406660:	ldr	x19, [sp, #16]
  406664:	ldp	x29, x30, [sp], #48
  406668:	ret
  40666c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406670:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406674:	ldr	x3, [x3, #8]
  406678:	add	x2, x2, #0x428
  40667c:	ldr	w0, [x0, #1676]
  406680:	mov	w1, #0x0                   	// #0
  406684:	str	wzr, [sp, #44]
  406688:	bl	4033d0 <ferror@plt+0xa30>
  40668c:	ldr	w0, [sp, #44]
  406690:	b	40665c <ferror@plt+0x3cbc>
  406694:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406698:	mov	w1, #0x0                   	// #0
  40669c:	ldr	x3, [x3, #8]
  4066a0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4066a4:	ldr	w0, [x0, #1676]
  4066a8:	add	x2, x2, #0x458
  4066ac:	bl	4033d0 <ferror@plt+0xa30>
  4066b0:	ldp	x29, x30, [sp], #48
  4066b4:	ret
  4066b8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4066bc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4066c0:	ldr	x3, [x3, #8]
  4066c4:	add	x2, x2, #0x488
  4066c8:	ldr	w0, [x0, #1676]
  4066cc:	mov	w1, #0x0                   	// #0
  4066d0:	bl	4033d0 <ferror@plt+0xa30>
  4066d4:	ldr	x3, [x19]
  4066d8:	b	406620 <ferror@plt+0x3c80>
  4066dc:	ldr	w0, [sp, #44]
  4066e0:	b	40665c <ferror@plt+0x3cbc>
  4066e4:	nop
  4066e8:	stp	x29, x30, [sp, #-48]!
  4066ec:	cmp	w1, #0x1
  4066f0:	mov	x29, sp
  4066f4:	ldr	x3, [x2]
  4066f8:	b.gt	406710 <ferror@plt+0x3d70>
  4066fc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406700:	ldr	w0, [x0, #1688]
  406704:	cbz	w0, 40679c <ferror@plt+0x3dfc>
  406708:	ldp	x29, x30, [sp], #48
  40670c:	ret
  406710:	stp	x19, x20, [sp, #16]
  406714:	cmp	w1, #0x2
  406718:	mov	x19, x2
  40671c:	mov	x20, x0
  406720:	b.eq	406730 <ferror@plt+0x3d90>  // b.none
  406724:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406728:	ldr	w0, [x0, #1688]
  40672c:	cbz	w0, 4067c0 <ferror@plt+0x3e20>
  406730:	ldr	x1, [x19, #8]
  406734:	add	x0, x3, #0x8
  406738:	ldr	x1, [x1, #8]
  40673c:	ldrb	w2, [x1]
  406740:	cbz	w2, 406760 <ferror@plt+0x3dc0>
  406744:	add	x2, sp, #0x2c
  406748:	bl	4041d0 <ferror@plt+0x1830>
  40674c:	tst	w0, #0xff
  406750:	b.ne	406780 <ferror@plt+0x3de0>  // b.any
  406754:	ldp	x19, x20, [sp, #16]
  406758:	ldp	x29, x30, [sp], #48
  40675c:	ret
  406760:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406764:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406768:	ldr	x3, [x3, #8]
  40676c:	add	x2, x2, #0x428
  406770:	ldr	w0, [x0, #1676]
  406774:	mov	w1, #0x0                   	// #0
  406778:	str	wzr, [sp, #44]
  40677c:	bl	4033d0 <ferror@plt+0xa30>
  406780:	ldr	w1, [sp, #44]
  406784:	mov	x0, x20
  406788:	add	w1, w1, #0x1
  40678c:	bl	403c78 <ferror@plt+0x12d8>
  406790:	ldp	x19, x20, [sp, #16]
  406794:	ldp	x29, x30, [sp], #48
  406798:	ret
  40679c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4067a0:	mov	w1, #0x0                   	// #0
  4067a4:	ldr	x3, [x3, #8]
  4067a8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4067ac:	ldr	w0, [x0, #1676]
  4067b0:	add	x2, x2, #0x458
  4067b4:	bl	4033d0 <ferror@plt+0xa30>
  4067b8:	ldp	x29, x30, [sp], #48
  4067bc:	ret
  4067c0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4067c4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4067c8:	ldr	x3, [x3, #8]
  4067cc:	add	x2, x2, #0x488
  4067d0:	ldr	w0, [x0, #1676]
  4067d4:	mov	w1, #0x0                   	// #0
  4067d8:	bl	4033d0 <ferror@plt+0xa30>
  4067dc:	ldr	x3, [x19]
  4067e0:	b	406730 <ferror@plt+0x3d90>
  4067e4:	nop
  4067e8:	stp	x29, x30, [sp, #-48]!
  4067ec:	cmp	w1, #0x1
  4067f0:	mov	x29, sp
  4067f4:	ldr	x3, [x2]
  4067f8:	b.gt	406810 <ferror@plt+0x3e70>
  4067fc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406800:	ldr	w0, [x0, #1688]
  406804:	cbz	w0, 40689c <ferror@plt+0x3efc>
  406808:	ldp	x29, x30, [sp], #48
  40680c:	ret
  406810:	stp	x19, x20, [sp, #16]
  406814:	cmp	w1, #0x2
  406818:	mov	x19, x2
  40681c:	mov	x20, x0
  406820:	b.eq	406830 <ferror@plt+0x3e90>  // b.none
  406824:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406828:	ldr	w0, [x0, #1688]
  40682c:	cbz	w0, 4068c0 <ferror@plt+0x3f20>
  406830:	ldr	x1, [x19, #8]
  406834:	add	x0, x3, #0x8
  406838:	ldr	x1, [x1, #8]
  40683c:	ldrb	w2, [x1]
  406840:	cbz	w2, 406860 <ferror@plt+0x3ec0>
  406844:	add	x2, sp, #0x2c
  406848:	bl	4041d0 <ferror@plt+0x1830>
  40684c:	tst	w0, #0xff
  406850:	b.ne	406880 <ferror@plt+0x3ee0>  // b.any
  406854:	ldp	x19, x20, [sp, #16]
  406858:	ldp	x29, x30, [sp], #48
  40685c:	ret
  406860:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406864:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406868:	ldr	x3, [x3, #8]
  40686c:	add	x2, x2, #0x428
  406870:	ldr	w0, [x0, #1676]
  406874:	mov	w1, #0x0                   	// #0
  406878:	str	wzr, [sp, #44]
  40687c:	bl	4033d0 <ferror@plt+0xa30>
  406880:	ldr	w1, [sp, #44]
  406884:	mov	x0, x20
  406888:	sub	w1, w1, #0x1
  40688c:	bl	403c78 <ferror@plt+0x12d8>
  406890:	ldp	x19, x20, [sp, #16]
  406894:	ldp	x29, x30, [sp], #48
  406898:	ret
  40689c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4068a0:	mov	w1, #0x0                   	// #0
  4068a4:	ldr	x3, [x3, #8]
  4068a8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4068ac:	ldr	w0, [x0, #1676]
  4068b0:	add	x2, x2, #0x458
  4068b4:	bl	4033d0 <ferror@plt+0xa30>
  4068b8:	ldp	x29, x30, [sp], #48
  4068bc:	ret
  4068c0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4068c4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4068c8:	ldr	x3, [x3, #8]
  4068cc:	add	x2, x2, #0x488
  4068d0:	ldr	w0, [x0, #1676]
  4068d4:	mov	w1, #0x0                   	// #0
  4068d8:	bl	4033d0 <ferror@plt+0xa30>
  4068dc:	ldr	x3, [x19]
  4068e0:	b	406830 <ferror@plt+0x3e90>
  4068e4:	nop
  4068e8:	stp	x29, x30, [sp, #-64]!
  4068ec:	cmp	w1, #0x1
  4068f0:	mov	x29, sp
  4068f4:	stp	x19, x20, [sp, #16]
  4068f8:	mov	x20, x0
  4068fc:	ldr	x0, [x2]
  406900:	b.gt	40691c <ferror@plt+0x3f7c>
  406904:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406908:	ldr	w1, [x1, #1688]
  40690c:	cbz	w1, 406b4c <ferror@plt+0x41ac>
  406910:	ldp	x19, x20, [sp, #16]
  406914:	ldp	x29, x30, [sp], #64
  406918:	ret
  40691c:	stp	x23, x24, [sp, #48]
  406920:	mov	x19, x2
  406924:	cmp	w1, #0x2
  406928:	b.eq	406938 <ferror@plt+0x3f98>  // b.none
  40692c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406930:	ldr	w1, [x1, #1688]
  406934:	cbz	w1, 406b70 <ferror@plt+0x41d0>
  406938:	ldr	x0, [x19, #8]
  40693c:	ldr	x24, [x0, #8]
  406940:	mov	x0, x24
  406944:	bl	402390 <strlen@plt>
  406948:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40694c:	mov	x23, x0
  406950:	ldr	w0, [x1, #1680]
  406954:	cbnz	w0, 40697c <ferror@plt+0x3fdc>
  406958:	ldr	x1, [x19]
  40695c:	mov	x3, x23
  406960:	mov	x2, x24
  406964:	mov	x0, x20
  406968:	ldp	x19, x20, [sp, #16]
  40696c:	ldp	x23, x24, [sp, #48]
  406970:	ldp	x29, x30, [sp], #64
  406974:	ldr	x1, [x1, #8]
  406978:	b	403d60 <ferror@plt+0x13c0>
  40697c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406980:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406984:	mov	w1, #0x0                   	// #0
  406988:	add	x2, x2, #0x618
  40698c:	ldr	w0, [x0, #1676]
  406990:	sxtw	x19, w23
  406994:	stp	x21, x22, [sp, #32]
  406998:	mov	w22, w23
  40699c:	mov	w21, #0x0                   	// #0
  4069a0:	bl	4033d0 <ferror@plt+0xa30>
  4069a4:	sub	x0, x24, #0x1
  4069a8:	cmp	w23, #0x1
  4069ac:	b.gt	4069c4 <ferror@plt+0x4024>
  4069b0:	b	4069d8 <ferror@plt+0x4038>
  4069b4:	sub	w22, w19, #0x1
  4069b8:	sub	x19, x19, #0x1
  4069bc:	cmp	w19, #0x1
  4069c0:	b.le	406be0 <ferror@plt+0x4240>
  4069c4:	ldrb	w1, [x0, x19]
  4069c8:	mov	w22, w19
  4069cc:	cmp	w1, #0x58
  4069d0:	b.eq	4069b4 <ferror@plt+0x4014>  // b.none
  4069d4:	sub	w21, w23, w22
  4069d8:	ldp	x0, x1, [x20, #24]
  4069dc:	sub	x1, x1, x0
  4069e0:	cmp	x19, x1
  4069e4:	b.hi	406be8 <ferror@plt+0x4248>  // b.pmore
  4069e8:	mov	x2, x19
  4069ec:	mov	x1, x24
  4069f0:	bl	402350 <memcpy@plt>
  4069f4:	ldr	x0, [x20, #24]
  4069f8:	add	x19, x0, x19
  4069fc:	str	x19, [x20, #24]
  406a00:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  406a04:	add	x19, x19, #0x6b0
  406a08:	bl	402500 <getpid@plt>
  406a0c:	mov	w2, w0
  406a10:	mov	w6, #0x0                   	// #0
  406a14:	strb	wzr, [x19, #271]
  406a18:	tbz	w0, #31, 406a24 <ferror@plt+0x4084>
  406a1c:	neg	w2, w0
  406a20:	mov	w6, #0x1                   	// #1
  406a24:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  406a28:	mov	w3, #0xcccd                	// #52429
  406a2c:	add	x19, x19, #0x10f
  406a30:	add	x0, x0, #0xa00
  406a34:	movk	w3, #0xcccc, lsl #16
  406a38:	umull	x1, w2, w3
  406a3c:	cmp	w2, #0x9
  406a40:	mov	x5, x19
  406a44:	lsr	x1, x1, #35
  406a48:	add	w4, w1, w1, lsl #2
  406a4c:	sub	w4, w2, w4, lsl #1
  406a50:	mov	w2, w1
  406a54:	ldrb	w1, [x0, w4, uxtw]
  406a58:	strb	w1, [x19, #-1]!
  406a5c:	b.hi	406a38 <ferror@plt+0x4098>  // b.pmore
  406a60:	cbz	w6, 406a70 <ferror@plt+0x40d0>
  406a64:	mov	w0, #0x2d                  	// #45
  406a68:	sturb	w0, [x19, #-1]
  406a6c:	sub	x19, x5, #0x2
  406a70:	mov	x0, x19
  406a74:	bl	402390 <strlen@plt>
  406a78:	mov	x24, x0
  406a7c:	cmp	w21, w0
  406a80:	ldp	x0, x1, [x20, #24]
  406a84:	b.lt	406b90 <ferror@plt+0x41f0>  // b.tstop
  406a88:	sub	w23, w23, w24
  406a8c:	add	w21, w22, #0x1
  406a90:	cmp	w23, w22
  406a94:	b.le	406b04 <ferror@plt+0x4164>
  406a98:	add	w23, w23, #0x1
  406a9c:	add	x2, x0, #0x1
  406aa0:	cmp	x1, x0
  406aa4:	mov	w22, #0x30                  	// #48
  406aa8:	b.eq	406ad4 <ferror@plt+0x4134>  // b.none
  406aac:	nop
  406ab0:	str	x2, [x20, #24]
  406ab4:	add	w21, w21, #0x1
  406ab8:	strb	w22, [x0]
  406abc:	cmp	w21, w23
  406ac0:	b.eq	406b00 <ferror@plt+0x4160>  // b.none
  406ac4:	ldp	x0, x1, [x20, #24]
  406ac8:	add	x2, x0, #0x1
  406acc:	cmp	x1, x0
  406ad0:	b.ne	406ab0 <ferror@plt+0x4110>  // b.any
  406ad4:	mov	x0, x20
  406ad8:	mov	x1, #0x1                   	// #1
  406adc:	bl	41d788 <_obstack_newchunk@@Base>
  406ae0:	add	w21, w21, #0x1
  406ae4:	ldr	x0, [x20, #24]
  406ae8:	cmp	w21, w23
  406aec:	add	x1, x0, #0x1
  406af0:	str	x1, [x20, #24]
  406af4:	strb	w22, [x0]
  406af8:	b.ne	406ac4 <ferror@plt+0x4124>  // b.any
  406afc:	nop
  406b00:	ldp	x0, x1, [x20, #24]
  406b04:	sxtw	x24, w24
  406b08:	sub	x3, x1, x0
  406b0c:	add	x1, x24, #0x1
  406b10:	cmp	x3, x1
  406b14:	b.cc	406bfc <ferror@plt+0x425c>  // b.lo, b.ul, b.last
  406b18:	mov	x1, x19
  406b1c:	mov	x2, x24
  406b20:	bl	402350 <memcpy@plt>
  406b24:	ldr	x1, [x20, #24]
  406b28:	add	x0, x1, x24
  406b2c:	add	x0, x0, #0x1
  406b30:	str	x0, [x20, #24]
  406b34:	strb	wzr, [x1, x24]
  406b38:	ldp	x19, x20, [sp, #16]
  406b3c:	ldp	x21, x22, [sp, #32]
  406b40:	ldp	x23, x24, [sp, #48]
  406b44:	ldp	x29, x30, [sp], #64
  406b48:	ret
  406b4c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406b50:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406b54:	ldp	x19, x20, [sp, #16]
  406b58:	add	x2, x2, #0x458
  406b5c:	ldp	x29, x30, [sp], #64
  406b60:	ldr	x3, [x0, #8]
  406b64:	ldr	w0, [x1, #1676]
  406b68:	mov	w1, #0x0                   	// #0
  406b6c:	b	4033d0 <ferror@plt+0xa30>
  406b70:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  406b74:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406b78:	ldr	x3, [x0, #8]
  406b7c:	add	x2, x2, #0x488
  406b80:	ldr	w0, [x1, #1676]
  406b84:	mov	w1, #0x0                   	// #0
  406b88:	bl	4033d0 <ferror@plt+0xa30>
  406b8c:	b	406938 <ferror@plt+0x3f98>
  406b90:	sxtw	x21, w21
  406b94:	sub	x3, x1, x0
  406b98:	add	x1, x21, #0x1
  406b9c:	cmp	x3, x1
  406ba0:	b.cc	406c0c <ferror@plt+0x426c>  // b.lo, b.ul, b.last
  406ba4:	sxtw	x1, w24
  406ba8:	mov	x2, x21
  406bac:	sub	x1, x1, x21
  406bb0:	add	x1, x19, x1
  406bb4:	bl	402350 <memcpy@plt>
  406bb8:	ldr	x1, [x20, #24]
  406bbc:	add	x0, x1, x21
  406bc0:	add	x0, x0, #0x1
  406bc4:	str	x0, [x20, #24]
  406bc8:	strb	wzr, [x1, x21]
  406bcc:	ldp	x19, x20, [sp, #16]
  406bd0:	ldp	x21, x22, [sp, #32]
  406bd4:	ldp	x23, x24, [sp, #48]
  406bd8:	ldp	x29, x30, [sp], #64
  406bdc:	ret
  406be0:	sxtw	x19, w22
  406be4:	b	4069d4 <ferror@plt+0x4034>
  406be8:	mov	x0, x20
  406bec:	mov	x1, x19
  406bf0:	bl	41d788 <_obstack_newchunk@@Base>
  406bf4:	ldr	x0, [x20, #24]
  406bf8:	b	4069e8 <ferror@plt+0x4048>
  406bfc:	mov	x0, x20
  406c00:	bl	41d788 <_obstack_newchunk@@Base>
  406c04:	ldr	x0, [x20, #24]
  406c08:	b	406b18 <ferror@plt+0x4178>
  406c0c:	mov	x0, x20
  406c10:	bl	41d788 <_obstack_newchunk@@Base>
  406c14:	ldr	x0, [x20, #24]
  406c18:	b	406ba4 <ferror@plt+0x4204>
  406c1c:	nop
  406c20:	sub	sp, sp, #0x70
  406c24:	cmp	w1, #0x1
  406c28:	stp	x29, x30, [sp, #16]
  406c2c:	add	x29, sp, #0x10
  406c30:	ldr	x3, [x2]
  406c34:	b.le	406c94 <ferror@plt+0x42f4>
  406c38:	stp	x19, x20, [sp, #32]
  406c3c:	mov	x19, x2
  406c40:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  406c44:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406c48:	add	x0, x0, #0x640
  406c4c:	ldr	x4, [x19, #8]
  406c50:	add	x2, x2, #0x638
  406c54:	cmp	w1, #0x2
  406c58:	ldr	x20, [x4, #8]
  406c5c:	stp	x2, x0, [sp, #80]
  406c60:	stp	xzr, xzr, [sp, #96]
  406c64:	b.eq	406c74 <ferror@plt+0x42d4>  // b.none
  406c68:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406c6c:	ldr	w0, [x0, #1688]
  406c70:	cbz	w0, 406d5c <ferror@plt+0x43bc>
  406c74:	ldrb	w0, [x20]
  406c78:	cbnz	w0, 406cd8 <ferror@plt+0x4338>
  406c7c:	ldp	x19, x20, [sp, #32]
  406c80:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406c84:	ldp	x29, x30, [sp, #16]
  406c88:	str	wzr, [x0, #1984]
  406c8c:	add	sp, sp, #0x70
  406c90:	ret
  406c94:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x1a640>
  406c98:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  406c9c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  406ca0:	add	x1, x1, #0x638
  406ca4:	ldr	w2, [x2, #1688]
  406ca8:	add	x0, x0, #0x640
  406cac:	stp	x1, x0, [sp, #80]
  406cb0:	stp	xzr, xzr, [sp, #96]
  406cb4:	cbnz	w2, 406c80 <ferror@plt+0x42e0>
  406cb8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406cbc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406cc0:	ldr	x3, [x3, #8]
  406cc4:	add	x2, x2, #0x458
  406cc8:	ldr	w0, [x0, #1676]
  406ccc:	mov	w1, #0x0                   	// #0
  406cd0:	bl	4033d0 <ferror@plt+0xa30>
  406cd4:	b	406c80 <ferror@plt+0x42e0>
  406cd8:	str	x21, [sp, #48]
  406cdc:	bl	409750 <ferror@plt+0x6db0>
  406ce0:	str	x20, [sp, #96]
  406ce4:	bl	402920 <__errno_location@plt>
  406ce8:	ldr	x4, [x19]
  406cec:	mov	x21, x0
  406cf0:	add	x3, sp, #0x4c
  406cf4:	add	x2, sp, #0x50
  406cf8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  406cfc:	mov	w7, #0x1                   	// #1
  406d00:	ldr	x0, [x4, #8]
  406d04:	str	wzr, [x21]
  406d08:	strb	wzr, [sp]
  406d0c:	add	x1, x1, #0x680
  406d10:	str	x3, [sp, #8]
  406d14:	mov	w6, #0x0                   	// #0
  406d18:	mov	w5, #0x0                   	// #0
  406d1c:	mov	w4, #0x0                   	// #0
  406d20:	mov	w3, #0x0                   	// #0
  406d24:	bl	415620 <ferror@plt+0x12c80>
  406d28:	ldr	w1, [sp, #76]
  406d2c:	mov	w19, w0
  406d30:	cbz	w1, 406d7c <ferror@plt+0x43dc>
  406d34:	cmp	w19, #0x7f
  406d38:	b.ne	406dc4 <ferror@plt+0x4424>  // b.any
  406d3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406d40:	lsl	w1, w1, #8
  406d44:	ldp	x29, x30, [sp, #16]
  406d48:	str	w1, [x0, #1984]
  406d4c:	ldp	x19, x20, [sp, #32]
  406d50:	ldr	x21, [sp, #48]
  406d54:	add	sp, sp, #0x70
  406d58:	ret
  406d5c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406d60:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406d64:	ldr	x3, [x3, #8]
  406d68:	add	x2, x2, #0x488
  406d6c:	ldr	w0, [x0, #1676]
  406d70:	mov	w1, #0x0                   	// #0
  406d74:	bl	4033d0 <ferror@plt+0xa30>
  406d78:	b	406c74 <ferror@plt+0x42d4>
  406d7c:	cmp	w19, #0x7f
  406d80:	b.eq	406da0 <ferror@plt+0x4400>  // b.none
  406d84:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406d88:	ldp	x29, x30, [sp, #16]
  406d8c:	str	w19, [x0, #1984]
  406d90:	ldp	x19, x20, [sp, #32]
  406d94:	ldr	x21, [sp, #48]
  406d98:	add	sp, sp, #0x70
  406d9c:	ret
  406da0:	ldr	w1, [x21]
  406da4:	cbz	w1, 406d84 <ferror@plt+0x43e4>
  406da8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406dac:	mov	x3, x20
  406db0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406db4:	add	x2, x2, #0x668
  406db8:	ldr	w0, [x0, #1676]
  406dbc:	bl	4033d0 <ferror@plt+0xa30>
  406dc0:	b	406d84 <ferror@plt+0x43e4>
  406dc4:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0x1640>
  406dc8:	add	x3, x3, #0xa00
  406dcc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  406dd0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  406dd4:	add	x3, x3, #0x478
  406dd8:	add	x1, x1, #0x648
  406ddc:	add	x0, x0, #0x658
  406de0:	mov	w2, #0x3cf                 	// #975
  406de4:	bl	402910 <__assert_fail@plt>
  406de8:	stp	x29, x30, [sp, #-80]!
  406dec:	cmp	w1, #0x2
  406df0:	mov	x29, sp
  406df4:	stp	x19, x20, [sp, #16]
  406df8:	mov	x19, x2
  406dfc:	mov	w20, w1
  406e00:	stp	x21, x22, [sp, #32]
  406e04:	mov	x21, x0
  406e08:	str	wzr, [sp, #72]
  406e0c:	ldr	x22, [x2]
  406e10:	b.gt	406e38 <ferror@plt+0x4498>
  406e14:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406e18:	ldr	w0, [x0, #1688]
  406e1c:	cbz	w0, 406f68 <ferror@plt+0x45c8>
  406e20:	cmp	w20, #0x2
  406e24:	b.eq	406f8c <ferror@plt+0x45ec>  // b.none
  406e28:	ldp	x19, x20, [sp, #16]
  406e2c:	ldp	x21, x22, [sp, #32]
  406e30:	ldp	x29, x30, [sp], #80
  406e34:	ret
  406e38:	str	x23, [sp, #48]
  406e3c:	cmp	w1, #0x4
  406e40:	b.le	406eb8 <ferror@plt+0x4518>
  406e44:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406e48:	ldr	w0, [x0, #1688]
  406e4c:	cbz	w0, 406fd8 <ferror@plt+0x4638>
  406e50:	ldr	x0, [x19, #8]
  406e54:	ldr	x0, [x0, #8]
  406e58:	bl	402390 <strlen@plt>
  406e5c:	mov	x1, x0
  406e60:	ldr	x3, [x19, #16]
  406e64:	str	w1, [sp, #76]
  406e68:	mov	w23, w0
  406e6c:	add	x2, sp, #0x48
  406e70:	add	x0, x22, #0x8
  406e74:	ldr	x1, [x3, #8]
  406e78:	bl	404938 <ferror@plt+0x1f98>
  406e7c:	tst	w0, #0xff
  406e80:	b.eq	406ea4 <ferror@plt+0x4504>  // b.none
  406e84:	ldr	x1, [x19, #24]
  406e88:	add	x2, sp, #0x4c
  406e8c:	ldr	x0, [x19]
  406e90:	ldr	x1, [x1, #8]
  406e94:	add	x0, x0, #0x8
  406e98:	bl	404938 <ferror@plt+0x1f98>
  406e9c:	tst	w0, #0xff
  406ea0:	b.ne	406ef4 <ferror@plt+0x4554>  // b.any
  406ea4:	ldp	x19, x20, [sp, #16]
  406ea8:	ldp	x21, x22, [sp, #32]
  406eac:	ldr	x23, [sp, #48]
  406eb0:	ldp	x29, x30, [sp], #80
  406eb4:	ret
  406eb8:	ldr	x0, [x2, #8]
  406ebc:	ldr	x0, [x0, #8]
  406ec0:	bl	402390 <strlen@plt>
  406ec4:	mov	x1, x0
  406ec8:	ldr	x3, [x19, #16]
  406ecc:	str	w1, [sp, #76]
  406ed0:	mov	w23, w0
  406ed4:	add	x2, sp, #0x48
  406ed8:	add	x0, x22, #0x8
  406edc:	ldr	x1, [x3, #8]
  406ee0:	bl	404938 <ferror@plt+0x1f98>
  406ee4:	tst	w0, #0xff
  406ee8:	b.eq	406ea4 <ferror@plt+0x4504>  // b.none
  406eec:	cmp	w20, #0x3
  406ef0:	b.ne	406e84 <ferror@plt+0x44e4>  // b.any
  406ef4:	ldr	w1, [sp, #72]
  406ef8:	tbnz	w1, #31, 406ea4 <ferror@plt+0x4504>
  406efc:	ldr	w3, [sp, #76]
  406f00:	cmp	w3, #0x0
  406f04:	ccmp	w1, w23, #0x0, gt
  406f08:	b.ge	406ea4 <ferror@plt+0x4504>  // b.tcont
  406f0c:	add	w0, w1, w3
  406f10:	cmp	w0, w23
  406f14:	b.le	406f20 <ferror@plt+0x4580>
  406f18:	sub	w3, w23, w1
  406f1c:	str	w3, [sp, #76]
  406f20:	ldp	x0, x4, [x21, #24]
  406f24:	sxtw	x20, w3
  406f28:	sub	x4, x4, x0
  406f2c:	cmp	x4, w3, sxtw
  406f30:	b.cc	406ffc <ferror@plt+0x465c>  // b.lo, b.ul, b.last
  406f34:	ldr	x3, [x19, #8]
  406f38:	mov	x2, x20
  406f3c:	ldr	x3, [x3, #8]
  406f40:	add	x1, x3, w1, sxtw
  406f44:	bl	402350 <memcpy@plt>
  406f48:	ldr	x0, [x21, #24]
  406f4c:	ldr	x23, [sp, #48]
  406f50:	add	x0, x0, x20
  406f54:	str	x0, [x21, #24]
  406f58:	ldp	x19, x20, [sp, #16]
  406f5c:	ldp	x21, x22, [sp, #32]
  406f60:	ldp	x29, x30, [sp], #80
  406f64:	ret
  406f68:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406f6c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406f70:	ldr	x3, [x22, #8]
  406f74:	add	x2, x2, #0x458
  406f78:	ldr	w0, [x0, #1676]
  406f7c:	mov	w1, #0x0                   	// #0
  406f80:	bl	4033d0 <ferror@plt+0xa30>
  406f84:	cmp	w20, #0x2
  406f88:	b.ne	406e28 <ferror@plt+0x4488>  // b.any
  406f8c:	ldr	x0, [x19, #8]
  406f90:	ldr	x22, [x0, #8]
  406f94:	mov	x0, x22
  406f98:	bl	402390 <strlen@plt>
  406f9c:	mov	x20, x0
  406fa0:	ldp	x0, x2, [x21, #24]
  406fa4:	sub	x2, x2, x0
  406fa8:	cmp	x20, x2
  406fac:	b.hi	407014 <ferror@plt+0x4674>  // b.pmore
  406fb0:	mov	x1, x22
  406fb4:	mov	x2, x20
  406fb8:	bl	402350 <memcpy@plt>
  406fbc:	ldr	x0, [x21, #24]
  406fc0:	add	x0, x0, x20
  406fc4:	str	x0, [x21, #24]
  406fc8:	ldp	x19, x20, [sp, #16]
  406fcc:	ldp	x21, x22, [sp, #32]
  406fd0:	ldp	x29, x30, [sp], #80
  406fd4:	ret
  406fd8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  406fdc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  406fe0:	ldr	x3, [x22, #8]
  406fe4:	add	x2, x2, #0x488
  406fe8:	ldr	w0, [x0, #1676]
  406fec:	mov	w1, #0x0                   	// #0
  406ff0:	bl	4033d0 <ferror@plt+0xa30>
  406ff4:	ldr	x22, [x19]
  406ff8:	b	406e50 <ferror@plt+0x44b0>
  406ffc:	mov	x1, x20
  407000:	mov	x0, x21
  407004:	bl	41d788 <_obstack_newchunk@@Base>
  407008:	ldr	w1, [sp, #72]
  40700c:	ldr	x0, [x21, #24]
  407010:	b	406f34 <ferror@plt+0x4594>
  407014:	mov	x1, x20
  407018:	mov	x0, x21
  40701c:	bl	41d788 <_obstack_newchunk@@Base>
  407020:	ldr	x1, [x19, #8]
  407024:	ldr	x0, [x21, #24]
  407028:	ldr	x22, [x1, #8]
  40702c:	b	406fb0 <ferror@plt+0x4610>
  407030:	stp	x29, x30, [sp, #-128]!
  407034:	cmp	w1, #0x1
  407038:	mov	x29, sp
  40703c:	ldr	x3, [x2]
  407040:	b.le	4070c8 <ferror@plt+0x4728>
  407044:	stp	x19, x20, [sp, #16]
  407048:	mov	x20, x2
  40704c:	mov	x19, x0
  407050:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407054:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  407058:	ldr	x4, [x20, #8]
  40705c:	add	x2, x2, #0x638
  407060:	add	x0, x0, #0x640
  407064:	stp	x23, x24, [sp, #48]
  407068:	cmp	w1, #0x2
  40706c:	ldr	x23, [x4, #8]
  407070:	stp	x2, x0, [sp, #96]
  407074:	stp	xzr, xzr, [sp, #112]
  407078:	b.ne	40709c <ferror@plt+0x46fc>  // b.any
  40707c:	ldrb	w0, [x23]
  407080:	cbnz	w0, 40710c <ferror@plt+0x476c>
  407084:	ldp	x19, x20, [sp, #16]
  407088:	ldp	x23, x24, [sp, #48]
  40708c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407090:	str	wzr, [x0, #1984]
  407094:	ldp	x29, x30, [sp], #128
  407098:	ret
  40709c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4070a0:	ldr	w0, [x0, #1688]
  4070a4:	cbnz	w0, 40707c <ferror@plt+0x46dc>
  4070a8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4070ac:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4070b0:	ldr	x3, [x3, #8]
  4070b4:	add	x2, x2, #0x488
  4070b8:	ldr	w0, [x0, #1676]
  4070bc:	mov	w1, #0x0                   	// #0
  4070c0:	bl	4033d0 <ferror@plt+0xa30>
  4070c4:	b	40707c <ferror@plt+0x46dc>
  4070c8:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x1a640>
  4070cc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  4070d0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  4070d4:	add	x1, x1, #0x638
  4070d8:	ldr	w2, [x2, #1688]
  4070dc:	add	x0, x0, #0x640
  4070e0:	stp	x1, x0, [sp, #96]
  4070e4:	stp	xzr, xzr, [sp, #112]
  4070e8:	cbnz	w2, 40708c <ferror@plt+0x46ec>
  4070ec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4070f0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4070f4:	ldr	x3, [x3, #8]
  4070f8:	add	x2, x2, #0x458
  4070fc:	ldr	w0, [x0, #1676]
  407100:	mov	w1, #0x0                   	// #0
  407104:	bl	4033d0 <ferror@plt+0xa30>
  407108:	b	40708c <ferror@plt+0x46ec>
  40710c:	stp	x21, x22, [sp, #32]
  407110:	str	x25, [sp, #64]
  407114:	bl	409750 <ferror@plt+0x6db0>
  407118:	str	x23, [sp, #112]
  40711c:	bl	402920 <__errno_location@plt>
  407120:	ldr	x3, [x20]
  407124:	mov	x21, x0
  407128:	add	x2, sp, #0x60
  40712c:	add	x7, sp, #0x58
  407130:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  407134:	mov	w6, #0x0                   	// #0
  407138:	ldr	x0, [x3, #8]
  40713c:	str	wzr, [x21]
  407140:	add	x1, x1, #0x680
  407144:	mov	w5, #0x1                   	// #1
  407148:	mov	w4, #0x0                   	// #0
  40714c:	mov	x3, #0x0                   	// #0
  407150:	bl	41b558 <ferror@plt+0x18bb8>
  407154:	mov	w22, w0
  407158:	cmn	w0, #0x1
  40715c:	b.eq	407294 <ferror@plt+0x48f4>  // b.none
  407160:	ldr	w0, [sp, #88]
  407164:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  407168:	add	x1, x1, #0x688
  40716c:	bl	4025d0 <fdopen@plt>
  407170:	mov	x24, x0
  407174:	cbz	x0, 4072bc <ferror@plt+0x491c>
  407178:	ldr	x0, [x19, #24]
  40717c:	ldr	x1, [x19, #32]
  407180:	subs	x2, x1, x0
  407184:	b.eq	4071b0 <ferror@plt+0x4810>  // b.none
  407188:	mov	x3, x24
  40718c:	mov	x1, #0x1                   	// #1
  407190:	bl	4027b0 <fread@plt>
  407194:	cbz	x0, 4071e0 <ferror@plt+0x4840>
  407198:	ldr	x1, [x19, #24]
  40719c:	add	x0, x1, x0
  4071a0:	str	x0, [x19, #24]
  4071a4:	ldr	x1, [x19, #32]
  4071a8:	subs	x2, x1, x0
  4071ac:	b.ne	407188 <ferror@plt+0x47e8>  // b.any
  4071b0:	mov	x0, x24
  4071b4:	bl	402640 <getc@plt>
  4071b8:	mov	w25, w0
  4071bc:	cmn	w0, #0x1
  4071c0:	b.eq	4071e0 <ferror@plt+0x4840>  // b.none
  4071c4:	ldp	x0, x1, [x19, #24]
  4071c8:	cmp	x1, x0
  4071cc:	b.eq	407324 <ferror@plt+0x4984>  // b.none
  4071d0:	add	x1, x0, #0x1
  4071d4:	str	x1, [x19, #24]
  4071d8:	strb	w25, [x0]
  4071dc:	b	407178 <ferror@plt+0x47d8>
  4071e0:	mov	x0, x24
  4071e4:	bl	4029a0 <ferror@plt>
  4071e8:	cbnz	w0, 4071f8 <ferror@plt+0x4858>
  4071ec:	mov	x0, x24
  4071f0:	bl	41d200 <ferror@plt+0x1a860>
  4071f4:	cbz	w0, 40720c <ferror@plt+0x486c>
  4071f8:	ldr	w1, [x21]
  4071fc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407200:	mov	w0, #0x1                   	// #1
  407204:	add	x2, x2, #0x690
  407208:	bl	4033d0 <ferror@plt+0xa30>
  40720c:	ldr	x1, [x20]
  407210:	mov	w4, #0x1                   	// #1
  407214:	mov	w0, w22
  407218:	add	x6, sp, #0x5c
  40721c:	mov	w3, w4
  407220:	mov	w5, #0x0                   	// #0
  407224:	ldr	x1, [x1, #8]
  407228:	str	wzr, [x21]
  40722c:	mov	w2, #0x0                   	// #0
  407230:	bl	41c6f0 <ferror@plt+0x19d50>
  407234:	mov	w19, w0
  407238:	ldr	w1, [sp, #92]
  40723c:	cbz	w1, 40726c <ferror@plt+0x48cc>
  407240:	cmp	w19, #0x7f
  407244:	b.ne	407338 <ferror@plt+0x4998>  // b.any
  407248:	lsl	w1, w1, #8
  40724c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407250:	str	w1, [x0, #1984]
  407254:	ldp	x19, x20, [sp, #16]
  407258:	ldp	x21, x22, [sp, #32]
  40725c:	ldp	x23, x24, [sp, #48]
  407260:	ldr	x25, [sp, #64]
  407264:	ldp	x29, x30, [sp], #128
  407268:	ret
  40726c:	cmp	w19, #0x7f
  407270:	b.eq	407300 <ferror@plt+0x4960>  // b.none
  407274:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407278:	ldp	x21, x22, [sp, #32]
  40727c:	str	w19, [x0, #1984]
  407280:	ldp	x19, x20, [sp, #16]
  407284:	ldp	x23, x24, [sp, #48]
  407288:	ldr	x25, [sp, #64]
  40728c:	ldp	x29, x30, [sp], #128
  407290:	ret
  407294:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407298:	ldr	w1, [x21]
  40729c:	mov	x3, x23
  4072a0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4072a4:	ldr	w0, [x0, #1676]
  4072a8:	add	x2, x2, #0x668
  4072ac:	bl	4033d0 <ferror@plt+0xa30>
  4072b0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4072b4:	mov	w1, #0x7f                  	// #127
  4072b8:	b	407250 <ferror@plt+0x48b0>
  4072bc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4072c0:	ldr	w1, [x21]
  4072c4:	mov	x3, x23
  4072c8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4072cc:	ldr	w0, [x0, #1676]
  4072d0:	add	x2, x2, #0x668
  4072d4:	bl	4033d0 <ferror@plt+0xa30>
  4072d8:	ldr	w0, [sp, #88]
  4072dc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4072e0:	mov	w2, #0x7f                  	// #127
  4072e4:	str	w2, [x1, #1984]
  4072e8:	bl	402660 <close@plt>
  4072ec:	ldp	x19, x20, [sp, #16]
  4072f0:	ldp	x21, x22, [sp, #32]
  4072f4:	ldp	x23, x24, [sp, #48]
  4072f8:	ldr	x25, [sp, #64]
  4072fc:	b	407094 <ferror@plt+0x46f4>
  407300:	ldr	w1, [x21]
  407304:	cbz	w1, 407274 <ferror@plt+0x48d4>
  407308:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40730c:	mov	x3, x23
  407310:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407314:	add	x2, x2, #0x668
  407318:	ldr	w0, [x0, #1676]
  40731c:	bl	4033d0 <ferror@plt+0xa30>
  407320:	b	407274 <ferror@plt+0x48d4>
  407324:	mov	x0, x19
  407328:	mov	x1, #0x1                   	// #1
  40732c:	bl	41d788 <_obstack_newchunk@@Base>
  407330:	ldr	x0, [x19, #24]
  407334:	b	4071d0 <ferror@plt+0x4830>
  407338:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0x1640>
  40733c:	add	x3, x3, #0xa00
  407340:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  407344:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  407348:	add	x3, x3, #0x488
  40734c:	add	x1, x1, #0x648
  407350:	add	x0, x0, #0x658
  407354:	mov	w2, #0x424                 	// #1060
  407358:	bl	402910 <__assert_fail@plt>
  40735c:	nop
  407360:	stp	x29, x30, [sp, #-192]!
  407364:	cmp	w1, #0x2
  407368:	mov	x29, sp
  40736c:	stp	x21, x22, [sp, #32]
  407370:	mov	x22, x2
  407374:	stp	x23, x24, [sp, #48]
  407378:	mov	w23, w1
  40737c:	stp	x27, x28, [sp, #80]
  407380:	mov	x27, x0
  407384:	ldr	x0, [x2]
  407388:	b.gt	4073b4 <ferror@plt+0x4a14>
  40738c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407390:	ldr	w1, [x1, #1688]
  407394:	cbz	w1, 4075f0 <ferror@plt+0x4c50>
  407398:	cmp	w23, #0x2
  40739c:	b.eq	407598 <ferror@plt+0x4bf8>  // b.none
  4073a0:	ldp	x21, x22, [sp, #32]
  4073a4:	ldp	x23, x24, [sp, #48]
  4073a8:	ldp	x27, x28, [sp, #80]
  4073ac:	ldp	x29, x30, [sp], #192
  4073b0:	ret
  4073b4:	stp	x25, x26, [sp, #64]
  4073b8:	cmp	w1, #0x4
  4073bc:	b.gt	40756c <ferror@plt+0x4bcc>
  4073c0:	ldr	x0, [x22, #16]
  4073c4:	movi	v0.4s, #0x0
  4073c8:	ldr	x25, [x0, #8]
  4073cc:	stp	xzr, xzr, [sp, #128]
  4073d0:	mov	x0, x25
  4073d4:	stur	q0, [sp, #104]
  4073d8:	str	q0, [sp, #160]
  4073dc:	bl	402390 <strlen@plt>
  4073e0:	add	x2, sp, #0x80
  4073e4:	mov	x1, x0
  4073e8:	mov	x0, x25
  4073ec:	bl	4026e0 <re_compile_pattern@plt>
  4073f0:	mov	x4, x0
  4073f4:	cbnz	x0, 407618 <ferror@plt+0x4c78>
  4073f8:	ldr	x0, [x22, #8]
  4073fc:	adrp	x24, 41e000 <_obstack_memory_used@@Base+0x640>
  407400:	add	x24, x24, #0xe8
  407404:	stp	x19, x20, [sp, #16]
  407408:	mov	w19, #0x0                   	// #0
  40740c:	ldr	x21, [x0, #8]
  407410:	mov	x0, x21
  407414:	bl	402390 <strlen@plt>
  407418:	mov	x26, x0
  40741c:	mov	w20, w0
  407420:	cmp	w23, #0x3
  407424:	b.ne	40751c <ferror@plt+0x4b7c>  // b.any
  407428:	b	40746c <ferror@plt+0x4acc>
  40742c:	add	x1, x21, w19, sxtw
  407430:	mov	x2, x28
  407434:	bl	402350 <memcpy@plt>
  407438:	ldr	x0, [x27, #24]
  40743c:	add	x0, x0, x28
  407440:	str	x0, [x27, #24]
  407444:	mov	x1, x21
  407448:	mov	x0, x27
  40744c:	add	x3, sp, #0x60
  407450:	mov	x2, x24
  407454:	bl	4039a0 <ferror@plt+0x1000>
  407458:	ldp	x0, x1, [sp, #104]
  40745c:	ldr	w0, [x0]
  407460:	ldr	w19, [x1]
  407464:	cmp	w19, w0
  407468:	b.eq	4076e4 <ferror@plt+0x4d44>  // b.none
  40746c:	sub	w28, w20, w19
  407470:	mov	w3, w19
  407474:	add	x5, sp, #0x60
  407478:	mov	w4, w28
  40747c:	mov	w2, w20
  407480:	mov	x1, x21
  407484:	add	x0, sp, #0x80
  407488:	cmp	w20, w19
  40748c:	b.lt	407654 <ferror@plt+0x4cb4>  // b.tstop
  407490:	bl	402630 <re_search@plt>
  407494:	tbnz	w0, #31, 4076a0 <ferror@plt+0x4d00>
  407498:	subs	w3, w0, w19
  40749c:	b.le	407444 <ferror@plt+0x4aa4>
  4074a0:	ldp	x0, x1, [x27, #24]
  4074a4:	sxtw	x28, w3
  4074a8:	sub	x1, x1, x0
  4074ac:	cmp	x1, w3, sxtw
  4074b0:	b.cs	40742c <ferror@plt+0x4a8c>  // b.hs, b.nlast
  4074b4:	mov	x0, x27
  4074b8:	mov	x1, x28
  4074bc:	bl	41d788 <_obstack_newchunk@@Base>
  4074c0:	ldr	x0, [x27, #24]
  4074c4:	b	40742c <ferror@plt+0x4a8c>
  4074c8:	mov	x0, x27
  4074cc:	mov	x1, x28
  4074d0:	bl	41d788 <_obstack_newchunk@@Base>
  4074d4:	ldr	x0, [x27, #24]
  4074d8:	add	x1, x21, w19, sxtw
  4074dc:	mov	x2, x28
  4074e0:	bl	402350 <memcpy@plt>
  4074e4:	ldr	x0, [x27, #24]
  4074e8:	add	x0, x0, x28
  4074ec:	str	x0, [x27, #24]
  4074f0:	ldr	x2, [x22, #24]
  4074f4:	mov	x1, x21
  4074f8:	mov	x0, x27
  4074fc:	add	x3, sp, #0x60
  407500:	ldr	x2, [x2, #8]
  407504:	bl	4039a0 <ferror@plt+0x1000>
  407508:	ldp	x0, x1, [sp, #104]
  40750c:	ldr	w0, [x0]
  407510:	ldr	w19, [x1]
  407514:	cmp	w0, w19
  407518:	b.eq	4076e4 <ferror@plt+0x4d44>  // b.none
  40751c:	sub	w28, w20, w19
  407520:	mov	w3, w19
  407524:	add	x5, sp, #0x60
  407528:	mov	w4, w28
  40752c:	mov	w2, w20
  407530:	mov	x1, x21
  407534:	add	x0, sp, #0x80
  407538:	cmp	w19, w20
  40753c:	b.gt	407654 <ferror@plt+0x4cb4>
  407540:	bl	402630 <re_search@plt>
  407544:	tbnz	w0, #31, 4076a0 <ferror@plt+0x4d00>
  407548:	sub	w3, w0, w19
  40754c:	cmp	w19, w0
  407550:	b.ge	4074f0 <ferror@plt+0x4b50>  // b.tcont
  407554:	ldp	x0, x1, [x27, #24]
  407558:	sxtw	x28, w3
  40755c:	sub	x1, x1, x0
  407560:	cmp	x1, w3, sxtw
  407564:	b.cs	4074d8 <ferror@plt+0x4b38>  // b.hs, b.nlast
  407568:	b	4074c8 <ferror@plt+0x4b28>
  40756c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407570:	ldr	w1, [x1, #1688]
  407574:	cbnz	w1, 4073c0 <ferror@plt+0x4a20>
  407578:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40757c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407580:	ldr	x3, [x0, #8]
  407584:	add	x2, x2, #0x488
  407588:	ldr	w0, [x1, #1676]
  40758c:	mov	w1, #0x0                   	// #0
  407590:	bl	4033d0 <ferror@plt+0xa30>
  407594:	b	4073c0 <ferror@plt+0x4a20>
  407598:	ldr	x0, [x22, #8]
  40759c:	stp	x19, x20, [sp, #16]
  4075a0:	ldr	x20, [x0, #8]
  4075a4:	mov	x0, x20
  4075a8:	bl	402390 <strlen@plt>
  4075ac:	mov	x19, x0
  4075b0:	ldp	x0, x2, [x27, #24]
  4075b4:	sub	x2, x2, x0
  4075b8:	cmp	x19, x2
  4075bc:	b.hi	407708 <ferror@plt+0x4d68>  // b.pmore
  4075c0:	mov	x1, x20
  4075c4:	mov	x2, x19
  4075c8:	bl	402350 <memcpy@plt>
  4075cc:	ldr	x0, [x27, #24]
  4075d0:	ldp	x21, x22, [sp, #32]
  4075d4:	add	x0, x0, x19
  4075d8:	ldp	x19, x20, [sp, #16]
  4075dc:	str	x0, [x27, #24]
  4075e0:	ldp	x23, x24, [sp, #48]
  4075e4:	ldp	x27, x28, [sp, #80]
  4075e8:	ldp	x29, x30, [sp], #192
  4075ec:	ret
  4075f0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4075f4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4075f8:	ldr	x3, [x0, #8]
  4075fc:	add	x2, x2, #0x458
  407600:	ldr	w0, [x1, #1676]
  407604:	mov	w1, #0x0                   	// #0
  407608:	bl	4033d0 <ferror@plt+0xa30>
  40760c:	cmp	w23, #0x2
  407610:	b.ne	4073a0 <ferror@plt+0x4a00>  // b.any
  407614:	b	407598 <ferror@plt+0x4bf8>
  407618:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40761c:	mov	x3, x25
  407620:	mov	w1, #0x0                   	// #0
  407624:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407628:	ldr	w0, [x0, #1676]
  40762c:	add	x2, x2, #0x6a8
  407630:	bl	4033d0 <ferror@plt+0xa30>
  407634:	ldr	x0, [sp, #128]
  407638:	bl	4027c0 <free@plt>
  40763c:	ldp	x21, x22, [sp, #32]
  407640:	ldp	x23, x24, [sp, #48]
  407644:	ldp	x25, x26, [sp, #64]
  407648:	ldp	x27, x28, [sp, #80]
  40764c:	ldp	x29, x30, [sp], #192
  407650:	ret
  407654:	ldp	x3, x0, [x27, #24]
  407658:	cmp	x0, x3
  40765c:	b.eq	407724 <ferror@plt+0x4d84>  // b.none
  407660:	add	x0, x3, #0x1
  407664:	str	x0, [x27, #24]
  407668:	strb	wzr, [x3]
  40766c:	add	x0, sp, #0x80
  407670:	bl	4028d0 <regfree@plt>
  407674:	ldr	x0, [sp, #104]
  407678:	bl	4027c0 <free@plt>
  40767c:	ldr	x0, [sp, #112]
  407680:	bl	4027c0 <free@plt>
  407684:	ldp	x19, x20, [sp, #16]
  407688:	ldp	x21, x22, [sp, #32]
  40768c:	ldp	x23, x24, [sp, #48]
  407690:	ldp	x25, x26, [sp, #64]
  407694:	ldp	x27, x28, [sp, #80]
  407698:	ldp	x29, x30, [sp], #192
  40769c:	ret
  4076a0:	cmn	w0, #0x2
  4076a4:	b.eq	40774c <ferror@plt+0x4dac>  // b.none
  4076a8:	cmp	w26, w19
  4076ac:	ldp	x3, x0, [x27, #24]
  4076b0:	b.le	407658 <ferror@plt+0x4cb8>
  4076b4:	sub	x0, x0, x3
  4076b8:	sxtw	x20, w28
  4076bc:	cmp	x0, w28, sxtw
  4076c0:	b.cc	407738 <ferror@plt+0x4d98>  // b.lo, b.ul, b.last
  4076c4:	mov	x0, x3
  4076c8:	add	x1, x21, w19, sxtw
  4076cc:	mov	x2, x20
  4076d0:	bl	402350 <memcpy@plt>
  4076d4:	ldp	x3, x0, [x27, #24]
  4076d8:	add	x3, x3, x20
  4076dc:	str	x3, [x27, #24]
  4076e0:	b	407658 <ferror@plt+0x4cb8>
  4076e4:	ldp	x0, x1, [x27, #24]
  4076e8:	cmp	x1, x0
  4076ec:	b.eq	407770 <ferror@plt+0x4dd0>  // b.none
  4076f0:	add	x1, x0, #0x1
  4076f4:	str	x1, [x27, #24]
  4076f8:	ldrb	w1, [x21, w19, sxtw]
  4076fc:	add	w19, w19, #0x1
  407700:	strb	w1, [x0]
  407704:	b	407420 <ferror@plt+0x4a80>
  407708:	mov	x1, x19
  40770c:	mov	x0, x27
  407710:	bl	41d788 <_obstack_newchunk@@Base>
  407714:	ldr	x1, [x22, #8]
  407718:	ldr	x0, [x27, #24]
  40771c:	ldr	x20, [x1, #8]
  407720:	b	4075c0 <ferror@plt+0x4c20>
  407724:	mov	x0, x27
  407728:	mov	x1, #0x1                   	// #1
  40772c:	bl	41d788 <_obstack_newchunk@@Base>
  407730:	ldr	x3, [x27, #24]
  407734:	b	407660 <ferror@plt+0x4cc0>
  407738:	mov	x1, x20
  40773c:	mov	x0, x27
  407740:	bl	41d788 <_obstack_newchunk@@Base>
  407744:	ldr	x3, [x27, #24]
  407748:	b	4076c4 <ferror@plt+0x4d24>
  40774c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407750:	mov	x3, x25
  407754:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407758:	mov	w1, #0x0                   	// #0
  40775c:	ldr	w0, [x0, #1676]
  407760:	add	x2, x2, #0x6c8
  407764:	bl	4033d0 <ferror@plt+0xa30>
  407768:	ldp	x3, x0, [x27, #24]
  40776c:	b	407658 <ferror@plt+0x4cb8>
  407770:	mov	x0, x27
  407774:	mov	x1, #0x1                   	// #1
  407778:	bl	41d788 <_obstack_newchunk@@Base>
  40777c:	ldr	x0, [x27, #24]
  407780:	b	4076f0 <ferror@plt+0x4d50>
  407784:	nop
  407788:	sub	sp, sp, #0x260
  40778c:	cmp	w1, #0x1
  407790:	stp	x29, x30, [sp]
  407794:	mov	x29, sp
  407798:	stp	x19, x20, [sp, #16]
  40779c:	mov	x19, x0
  4077a0:	ldr	x0, [x2]
  4077a4:	b.le	407970 <ferror@plt+0x4fd0>
  4077a8:	mov	w20, w1
  4077ac:	cmp	w1, #0x2
  4077b0:	ldr	x1, [x2, #8]
  4077b4:	stp	x21, x22, [sp, #32]
  4077b8:	mov	x22, x2
  4077bc:	ldr	x21, [x1, #8]
  4077c0:	b.eq	407b58 <ferror@plt+0x51b8>  // b.none
  4077c4:	ldr	x1, [x2, #16]
  4077c8:	stp	x25, x26, [sp, #64]
  4077cc:	cmp	w20, #0x4
  4077d0:	ldr	x25, [x1, #8]
  4077d4:	b.le	4077e4 <ferror@plt+0x4e44>
  4077d8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4077dc:	ldr	w1, [x1, #1688]
  4077e0:	cbz	w1, 407acc <ferror@plt+0x512c>
  4077e4:	ldrb	w0, [x21]
  4077e8:	cbz	w0, 407924 <ferror@plt+0x4f84>
  4077ec:	ldrb	w0, [x25]
  4077f0:	cbz	w0, 407924 <ferror@plt+0x4f84>
  4077f4:	stp	x23, x24, [sp, #48]
  4077f8:	cmp	w20, #0x3
  4077fc:	b.eq	4079a4 <ferror@plt+0x5004>  // b.none
  407800:	ldr	x0, [x22, #24]
  407804:	mov	w1, #0x2d                  	// #45
  407808:	ldr	x26, [x0, #8]
  40780c:	mov	x0, x26
  407810:	bl	402810 <strchr@plt>
  407814:	cbz	x0, 407834 <ferror@plt+0x4e94>
  407818:	mov	x0, x26
  40781c:	mov	x1, x19
  407820:	bl	403568 <ferror@plt+0xbc8>
  407824:	mov	x26, x0
  407828:	cbz	x0, 407bc0 <ferror@plt+0x5220>
  40782c:	ldrb	w0, [x0]
  407830:	cbz	w0, 407bc0 <ferror@plt+0x5220>
  407834:	ldrb	w2, [x25, #1]
  407838:	cbz	w2, 4079b4 <ferror@plt+0x5014>
  40783c:	ldrb	w0, [x25, #2]
  407840:	cbz	w0, 4079b4 <ferror@plt+0x5014>
  407844:	mov	x0, x25
  407848:	mov	w1, #0x2d                  	// #45
  40784c:	bl	402810 <strchr@plt>
  407850:	cbz	x0, 407870 <ferror@plt+0x4ed0>
  407854:	mov	x0, x25
  407858:	mov	x1, x19
  40785c:	bl	403568 <ferror@plt+0xbc8>
  407860:	mov	x25, x0
  407864:	cbz	x0, 407be4 <ferror@plt+0x5244>
  407868:	ldrb	w0, [x0]
  40786c:	cbz	w0, 407be4 <ferror@plt+0x5244>
  407870:	add	x23, sp, #0x60
  407874:	mov	x2, #0x100                 	// #256
  407878:	mov	w1, #0x0                   	// #0
  40787c:	mov	x0, x23
  407880:	add	x21, sp, #0x160
  407884:	bl	4025c0 <memset@plt>
  407888:	mov	x0, x21
  40788c:	mov	x2, #0x100                 	// #256
  407890:	mov	w1, #0x0                   	// #0
  407894:	bl	4025c0 <memset@plt>
  407898:	ldrb	w0, [x25]
  40789c:	mov	w3, #0x1                   	// #1
  4078a0:	cbz	w0, 4078cc <ferror@plt+0x4f2c>
  4078a4:	nop
  4078a8:	ldrb	w2, [x21, w0, sxtw]
  4078ac:	ldrb	w1, [x26]
  4078b0:	cbnz	w2, 4078bc <ferror@plt+0x4f1c>
  4078b4:	strb	w3, [x21, w0, sxtw]
  4078b8:	strb	w1, [x23, w0, sxtw]
  4078bc:	ldrb	w0, [x25, #1]!
  4078c0:	cmp	w1, #0x0
  4078c4:	cinc	x26, x26, ne  // ne = any
  4078c8:	cbnz	w0, 4078a8 <ferror@plt+0x4f08>
  4078cc:	ldr	x0, [x22, #8]
  4078d0:	ldr	x22, [x0, #8]
  4078d4:	ldrb	w20, [x22]
  4078d8:	cbnz	w20, 4078f4 <ferror@plt+0x4f54>
  4078dc:	b	407b28 <ferror@plt+0x5188>
  4078e0:	add	x1, x0, #0x1
  4078e4:	str	x1, [x19, #24]
  4078e8:	strb	w20, [x0]
  4078ec:	ldrb	w20, [x22, #1]!
  4078f0:	cbz	w20, 407b28 <ferror@plt+0x5188>
  4078f4:	ldrb	w0, [x21, w20, sxtw]
  4078f8:	cbz	w0, 407904 <ferror@plt+0x4f64>
  4078fc:	ldrb	w20, [x23, w20, sxtw]
  407900:	cbz	w20, 4078ec <ferror@plt+0x4f4c>
  407904:	ldp	x0, x1, [x19, #24]
  407908:	cmp	x1, x0
  40790c:	b.ne	4078e0 <ferror@plt+0x4f40>  // b.any
  407910:	mov	x0, x19
  407914:	mov	x1, #0x1                   	// #1
  407918:	bl	41d788 <_obstack_newchunk@@Base>
  40791c:	ldr	x0, [x19, #24]
  407920:	b	4078e0 <ferror@plt+0x4f40>
  407924:	ldp	x25, x26, [sp, #64]
  407928:	mov	x0, x21
  40792c:	bl	402390 <strlen@plt>
  407930:	mov	x20, x0
  407934:	ldp	x0, x1, [x19, #24]
  407938:	sub	x1, x1, x0
  40793c:	cmp	x20, x1
  407940:	b.hi	407b44 <ferror@plt+0x51a4>  // b.pmore
  407944:	mov	x1, x21
  407948:	mov	x2, x20
  40794c:	bl	402350 <memcpy@plt>
  407950:	ldr	x0, [x19, #24]
  407954:	ldp	x21, x22, [sp, #32]
  407958:	add	x0, x0, x20
  40795c:	str	x0, [x19, #24]
  407960:	ldp	x29, x30, [sp]
  407964:	ldp	x19, x20, [sp, #16]
  407968:	add	sp, sp, #0x260
  40796c:	ret
  407970:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407974:	ldr	w1, [x1, #1688]
  407978:	cbnz	w1, 407960 <ferror@plt+0x4fc0>
  40797c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407980:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407984:	ldp	x29, x30, [sp]
  407988:	add	x2, x2, #0x458
  40798c:	ldp	x19, x20, [sp, #16]
  407990:	ldr	x3, [x0, #8]
  407994:	ldr	w0, [x1, #1676]
  407998:	mov	w1, #0x0                   	// #0
  40799c:	add	sp, sp, #0x260
  4079a0:	b	4033d0 <ferror@plt+0xa30>
  4079a4:	ldrb	w2, [x25, #1]
  4079a8:	adrp	x26, 41e000 <_obstack_memory_used@@Base+0x640>
  4079ac:	add	x26, x26, #0xe8
  4079b0:	cbnz	w2, 40783c <ferror@plt+0x4e9c>
  4079b4:	mov	x0, x21
  4079b8:	str	w2, [sp, #92]
  4079bc:	bl	402390 <strlen@plt>
  4079c0:	mov	x22, x0
  4079c4:	ldp	x20, x23, [x19, #24]
  4079c8:	ldrb	w1, [x25]
  4079cc:	ldr	w2, [sp, #92]
  4079d0:	mov	x3, x22
  4079d4:	mov	x0, x21
  4079d8:	bl	417ac0 <ferror@plt+0x15120>
  4079dc:	mov	x24, x0
  4079e0:	sub	x1, x23, x20
  4079e4:	cbz	x0, 407a8c <ferror@plt+0x50ec>
  4079e8:	sub	x23, x24, x21
  4079ec:	cmp	x23, x1
  4079f0:	b.hi	407aec <ferror@plt+0x514c>  // b.pmore
  4079f4:	mov	x0, x20
  4079f8:	mov	x1, x21
  4079fc:	mov	x2, x23
  407a00:	bl	402350 <memcpy@plt>
  407a04:	ldr	x20, [x19, #24]
  407a08:	subs	x22, x22, x23
  407a0c:	add	x20, x20, x23
  407a10:	str	x20, [x19, #24]
  407a14:	b.eq	407b28 <ferror@plt+0x5188>  // b.none
  407a18:	mov	x21, x24
  407a1c:	ldrb	w1, [x25]
  407a20:	sub	x22, x22, #0x1
  407a24:	ldr	x23, [x19, #32]
  407a28:	ldrb	w0, [x21], #1
  407a2c:	cmp	w0, w1
  407a30:	b.eq	407b00 <ferror@plt+0x5160>  // b.none
  407a34:	ldrb	w2, [x25, #1]
  407a38:	cmp	w0, w2
  407a3c:	b.ne	4079d0 <ferror@plt+0x5030>  // b.any
  407a40:	ldrb	w0, [x26]
  407a44:	cbz	w0, 4079d0 <ferror@plt+0x5030>
  407a48:	ldrb	w0, [x26, #1]
  407a4c:	cbz	w0, 4079d0 <ferror@plt+0x5030>
  407a50:	cmp	x20, x23
  407a54:	b.eq	407bac <ferror@plt+0x520c>  // b.none
  407a58:	add	x0, x20, #0x1
  407a5c:	str	x0, [x19, #24]
  407a60:	ldrb	w0, [x26, #1]
  407a64:	strb	w0, [x20]
  407a68:	mov	x3, x22
  407a6c:	mov	x0, x21
  407a70:	ldp	x20, x23, [x19, #24]
  407a74:	ldrb	w1, [x25]
  407a78:	ldrb	w2, [x25, #1]
  407a7c:	bl	417ac0 <ferror@plt+0x15120>
  407a80:	mov	x24, x0
  407a84:	sub	x1, x23, x20
  407a88:	cbnz	x0, 4079e8 <ferror@plt+0x5048>
  407a8c:	cmp	x22, x1
  407a90:	b.hi	407b98 <ferror@plt+0x51f8>  // b.pmore
  407a94:	mov	x1, x21
  407a98:	mov	x2, x22
  407a9c:	mov	x0, x20
  407aa0:	bl	402350 <memcpy@plt>
  407aa4:	ldr	x0, [x19, #24]
  407aa8:	ldp	x23, x24, [sp, #48]
  407aac:	add	x22, x0, x22
  407ab0:	ldp	x25, x26, [sp, #64]
  407ab4:	str	x22, [x19, #24]
  407ab8:	ldp	x29, x30, [sp]
  407abc:	ldp	x19, x20, [sp, #16]
  407ac0:	ldp	x21, x22, [sp, #32]
  407ac4:	add	sp, sp, #0x260
  407ac8:	ret
  407acc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407ad0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407ad4:	ldr	x3, [x0, #8]
  407ad8:	add	x2, x2, #0x488
  407adc:	ldr	w0, [x1, #1676]
  407ae0:	mov	w1, #0x0                   	// #0
  407ae4:	bl	4033d0 <ferror@plt+0xa30>
  407ae8:	b	4077e4 <ferror@plt+0x4e44>
  407aec:	mov	x1, x23
  407af0:	mov	x0, x19
  407af4:	bl	41d788 <_obstack_newchunk@@Base>
  407af8:	ldr	x20, [x19, #24]
  407afc:	b	4079f4 <ferror@plt+0x5054>
  407b00:	ldrb	w0, [x26]
  407b04:	cbz	w0, 407b20 <ferror@plt+0x5180>
  407b08:	cmp	x20, x23
  407b0c:	b.eq	407b84 <ferror@plt+0x51e4>  // b.none
  407b10:	add	x0, x20, #0x1
  407b14:	str	x0, [x19, #24]
  407b18:	ldrb	w0, [x26]
  407b1c:	b	407a64 <ferror@plt+0x50c4>
  407b20:	ldrb	w2, [x25, #1]
  407b24:	b	4079d0 <ferror@plt+0x5030>
  407b28:	ldp	x29, x30, [sp]
  407b2c:	ldp	x19, x20, [sp, #16]
  407b30:	ldp	x21, x22, [sp, #32]
  407b34:	ldp	x23, x24, [sp, #48]
  407b38:	ldp	x25, x26, [sp, #64]
  407b3c:	add	sp, sp, #0x260
  407b40:	ret
  407b44:	mov	x0, x19
  407b48:	mov	x1, x20
  407b4c:	bl	41d788 <_obstack_newchunk@@Base>
  407b50:	ldr	x0, [x19, #24]
  407b54:	b	407944 <ferror@plt+0x4fa4>
  407b58:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407b5c:	ldr	w1, [x1, #1688]
  407b60:	cbnz	w1, 407928 <ferror@plt+0x4f88>
  407b64:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407b68:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407b6c:	ldr	x3, [x0, #8]
  407b70:	add	x2, x2, #0x458
  407b74:	ldr	w0, [x1, #1676]
  407b78:	mov	w1, #0x0                   	// #0
  407b7c:	bl	4033d0 <ferror@plt+0xa30>
  407b80:	b	407928 <ferror@plt+0x4f88>
  407b84:	mov	x0, x19
  407b88:	mov	x1, #0x1                   	// #1
  407b8c:	bl	41d788 <_obstack_newchunk@@Base>
  407b90:	ldr	x20, [x19, #24]
  407b94:	b	407b10 <ferror@plt+0x5170>
  407b98:	mov	x1, x22
  407b9c:	mov	x0, x19
  407ba0:	bl	41d788 <_obstack_newchunk@@Base>
  407ba4:	ldr	x20, [x19, #24]
  407ba8:	b	407a94 <ferror@plt+0x50f4>
  407bac:	mov	x0, x19
  407bb0:	mov	x1, #0x1                   	// #1
  407bb4:	bl	41d788 <_obstack_newchunk@@Base>
  407bb8:	ldr	x20, [x19, #24]
  407bbc:	b	407a58 <ferror@plt+0x50b8>
  407bc0:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0x1640>
  407bc4:	add	x3, x3, #0xa00
  407bc8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  407bcc:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  407bd0:	add	x3, x3, #0x498
  407bd4:	add	x1, x1, #0x648
  407bd8:	add	x0, x0, #0x6f0
  407bdc:	mov	w2, #0x752                 	// #1874
  407be0:	bl	402910 <__assert_fail@plt>
  407be4:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0x1640>
  407be8:	add	x3, x3, #0xa00
  407bec:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  407bf0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  407bf4:	add	x3, x3, #0x498
  407bf8:	add	x1, x1, #0x648
  407bfc:	add	x0, x0, #0x700
  407c00:	mov	w2, #0x770                 	// #1904
  407c04:	bl	402910 <__assert_fail@plt>
  407c08:	cmp	w1, #0x2
  407c0c:	b.eq	407d08 <ferror@plt+0x5368>  // b.none
  407c10:	stp	x29, x30, [sp, #-48]!
  407c14:	cmp	w1, #0x3
  407c18:	mov	x29, sp
  407c1c:	stp	x19, x20, [sp, #16]
  407c20:	mov	w19, w1
  407c24:	mov	x20, x2
  407c28:	ldr	x1, [x2]
  407c2c:	b.gt	407c48 <ferror@plt+0x52a8>
  407c30:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407c34:	ldr	w0, [x0, #1688]
  407c38:	cbz	w0, 407d3c <ferror@plt+0x539c>
  407c3c:	ldp	x19, x20, [sp, #16]
  407c40:	ldp	x29, x30, [sp], #48
  407c44:	ret
  407c48:	mov	w4, #0xaaab                	// #43691
  407c4c:	stp	x21, x22, [sp, #32]
  407c50:	mov	x22, x0
  407c54:	add	w0, w19, #0x2
  407c58:	movk	w4, #0xaaaa, lsl #16
  407c5c:	mov	w3, #0xaaaaaaaa            	// #-1431655766
  407c60:	mov	w2, #0x55555555            	// #1431655765
  407c64:	madd	w0, w0, w4, w3
  407c68:	cmp	w0, w2
  407c6c:	b.cs	407c7c <ferror@plt+0x52dc>  // b.hs, b.nlast
  407c70:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407c74:	ldr	w0, [x0, #1688]
  407c78:	cbz	w0, 407d60 <ferror@plt+0x53c0>
  407c7c:	ldp	x0, x1, [x20, #8]
  407c80:	sub	w19, w19, #0x1
  407c84:	add	x20, x20, #0x8
  407c88:	ldr	x0, [x0, #8]
  407c8c:	ldr	x1, [x1, #8]
  407c90:	bl	402760 <strcmp@plt>
  407c94:	nop
  407c98:	cbnz	w0, 407ce4 <ferror@plt+0x5344>
  407c9c:	ldr	x1, [x20, #16]
  407ca0:	ldr	x21, [x1, #8]
  407ca4:	cbz	x21, 407c98 <ferror@plt+0x52f8>
  407ca8:	mov	x0, x21
  407cac:	bl	402390 <strlen@plt>
  407cb0:	mov	x19, x0
  407cb4:	ldp	x0, x1, [x22, #24]
  407cb8:	sub	x1, x1, x0
  407cbc:	cmp	x19, x1
  407cc0:	b.hi	407d80 <ferror@plt+0x53e0>  // b.pmore
  407cc4:	mov	x1, x21
  407cc8:	mov	x2, x19
  407ccc:	bl	402350 <memcpy@plt>
  407cd0:	ldr	x0, [x22, #24]
  407cd4:	add	x0, x0, x19
  407cd8:	str	x0, [x22, #24]
  407cdc:	ldp	x21, x22, [sp, #32]
  407ce0:	b	407c3c <ferror@plt+0x529c>
  407ce4:	sub	w1, w19, #0x4
  407ce8:	cmp	w19, #0x3
  407cec:	b.eq	407d2c <ferror@plt+0x538c>  // b.none
  407cf0:	cmp	w1, #0x1
  407cf4:	b.hi	407d0c <ferror@plt+0x536c>  // b.pmore
  407cf8:	ldr	x1, [x20, #24]
  407cfc:	ldr	x21, [x1, #8]
  407d00:	cbz	x21, 407c98 <ferror@plt+0x52f8>
  407d04:	b	407ca8 <ferror@plt+0x5308>
  407d08:	ret
  407d0c:	ldp	x0, x1, [x20, #24]
  407d10:	add	x2, x20, #0x18
  407d14:	sub	w19, w19, #0x3
  407d18:	mov	x20, x2
  407d1c:	ldr	x0, [x0, #8]
  407d20:	ldr	x1, [x1, #8]
  407d24:	bl	402760 <strcmp@plt>
  407d28:	b	407c98 <ferror@plt+0x52f8>
  407d2c:	ldp	x19, x20, [sp, #16]
  407d30:	ldp	x21, x22, [sp, #32]
  407d34:	ldp	x29, x30, [sp], #48
  407d38:	ret
  407d3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407d40:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407d44:	ldp	x19, x20, [sp, #16]
  407d48:	add	x2, x2, #0x458
  407d4c:	ldp	x29, x30, [sp], #48
  407d50:	ldr	w0, [x0, #1676]
  407d54:	ldr	x3, [x1, #8]
  407d58:	mov	w1, #0x0                   	// #0
  407d5c:	b	4033d0 <ferror@plt+0xa30>
  407d60:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  407d64:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407d68:	ldr	x3, [x1, #8]
  407d6c:	add	x2, x2, #0x488
  407d70:	ldr	w0, [x0, #1676]
  407d74:	mov	w1, #0x0                   	// #0
  407d78:	bl	4033d0 <ferror@plt+0xa30>
  407d7c:	b	407c7c <ferror@plt+0x52dc>
  407d80:	mov	x0, x22
  407d84:	mov	x1, x19
  407d88:	bl	41d788 <_obstack_newchunk@@Base>
  407d8c:	ldr	x0, [x22, #24]
  407d90:	b	407cc4 <ferror@plt+0x5324>
  407d94:	nop
  407d98:	stp	x29, x30, [sp, #-48]!
  407d9c:	cmp	w1, #0x2
  407da0:	mov	x29, sp
  407da4:	stp	x19, x20, [sp, #16]
  407da8:	mov	w20, w1
  407dac:	str	x21, [sp, #32]
  407db0:	mov	x21, x0
  407db4:	ldr	x0, [x2]
  407db8:	b.gt	407de0 <ferror@plt+0x5440>
  407dbc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407dc0:	ldr	w1, [x1, #1688]
  407dc4:	cbz	w1, 407e30 <ferror@plt+0x5490>
  407dc8:	cmp	w20, #0x2
  407dcc:	b.eq	407e70 <ferror@plt+0x54d0>  // b.none
  407dd0:	ldp	x19, x20, [sp, #16]
  407dd4:	ldr	x21, [sp, #32]
  407dd8:	ldp	x29, x30, [sp], #48
  407ddc:	ret
  407de0:	mov	x19, x2
  407de4:	cmp	w1, #0x3
  407de8:	b.eq	407df8 <ferror@plt+0x5458>  // b.none
  407dec:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407df0:	ldr	w1, [x1, #1688]
  407df4:	cbz	w1, 407e50 <ferror@plt+0x54b0>
  407df8:	ldp	x0, x1, [x19, #8]
  407dfc:	ldr	x1, [x1, #8]
  407e00:	ldr	x19, [x0, #8]
  407e04:	mov	x0, x19
  407e08:	bl	4028b0 <strstr@plt>
  407e0c:	mov	x2, x0
  407e10:	mov	x0, x21
  407e14:	sub	x1, x2, x19
  407e18:	cmp	x2, #0x0
  407e1c:	ldp	x19, x20, [sp, #16]
  407e20:	csinv	w1, w1, wzr, ne  // ne = any
  407e24:	ldr	x21, [sp, #32]
  407e28:	ldp	x29, x30, [sp], #48
  407e2c:	b	403c78 <ferror@plt+0x12d8>
  407e30:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407e34:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407e38:	ldr	x3, [x0, #8]
  407e3c:	add	x2, x2, #0x458
  407e40:	ldr	w0, [x1, #1676]
  407e44:	mov	w1, #0x0                   	// #0
  407e48:	bl	4033d0 <ferror@plt+0xa30>
  407e4c:	b	407dc8 <ferror@plt+0x5428>
  407e50:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407e54:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407e58:	ldr	x3, [x0, #8]
  407e5c:	add	x2, x2, #0x488
  407e60:	ldr	w0, [x1, #1676]
  407e64:	mov	w1, #0x0                   	// #0
  407e68:	bl	4033d0 <ferror@plt+0xa30>
  407e6c:	b	407df8 <ferror@plt+0x5458>
  407e70:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  407e74:	add	x20, x20, #0x6b0
  407e78:	mov	w1, #0x30                  	// #48
  407e7c:	add	x0, x20, #0x10e
  407e80:	strh	w1, [x20, #270]
  407e84:	bl	402390 <strlen@plt>
  407e88:	mov	x19, x0
  407e8c:	ldp	x0, x1, [x21, #24]
  407e90:	sub	x1, x1, x0
  407e94:	cmp	x19, x1
  407e98:	b.hi	407eb8 <ferror@plt+0x5518>  // b.pmore
  407e9c:	add	x1, x20, #0x10e
  407ea0:	mov	x2, x19
  407ea4:	bl	402350 <memcpy@plt>
  407ea8:	ldr	x0, [x21, #24]
  407eac:	add	x0, x0, x19
  407eb0:	str	x0, [x21, #24]
  407eb4:	b	407dd0 <ferror@plt+0x5430>
  407eb8:	mov	x0, x21
  407ebc:	mov	x1, x19
  407ec0:	bl	41d788 <_obstack_newchunk@@Base>
  407ec4:	ldr	x0, [x21, #24]
  407ec8:	b	407e9c <ferror@plt+0x54fc>
  407ecc:	nop
  407ed0:	stp	x29, x30, [sp, #-160]!
  407ed4:	cmp	w1, #0x2
  407ed8:	mov	x29, sp
  407edc:	stp	x19, x20, [sp, #16]
  407ee0:	mov	w19, w1
  407ee4:	stp	x21, x22, [sp, #32]
  407ee8:	mov	x21, x0
  407eec:	ldr	x0, [x2]
  407ef0:	b.gt	407f18 <ferror@plt+0x5578>
  407ef4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407ef8:	ldr	w1, [x1, #1688]
  407efc:	cbz	w1, 407fec <ferror@plt+0x564c>
  407f00:	cmp	w19, #0x2
  407f04:	b.eq	408010 <ferror@plt+0x5670>  // b.none
  407f08:	ldp	x19, x20, [sp, #16]
  407f0c:	ldp	x21, x22, [sp, #32]
  407f10:	ldp	x29, x30, [sp], #160
  407f14:	ret
  407f18:	str	x23, [sp, #48]
  407f1c:	mov	x20, x2
  407f20:	cmp	w1, #0x4
  407f24:	b.le	407f34 <ferror@plt+0x5594>
  407f28:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407f2c:	ldr	w1, [x1, #1688]
  407f30:	cbz	w1, 408064 <ferror@plt+0x56c4>
  407f34:	ldp	x0, x1, [x20, #8]
  407f38:	movi	v0.4s, #0x0
  407f3c:	ldr	x22, [x1, #8]
  407f40:	ldr	x23, [x0, #8]
  407f44:	mov	x0, x22
  407f48:	stur	q0, [sp, #72]
  407f4c:	stp	xzr, xzr, [sp, #96]
  407f50:	str	q0, [sp, #128]
  407f54:	bl	402390 <strlen@plt>
  407f58:	add	x2, sp, #0x60
  407f5c:	mov	x1, x0
  407f60:	mov	x0, x22
  407f64:	bl	4026e0 <re_compile_pattern@plt>
  407f68:	mov	x4, x0
  407f6c:	cbnz	x0, 4080c8 <ferror@plt+0x5728>
  407f70:	mov	x0, x23
  407f74:	bl	402390 <strlen@plt>
  407f78:	cmp	w19, #0x3
  407f7c:	b.eq	408084 <ferror@plt+0x56e4>  // b.none
  407f80:	mov	w4, w0
  407f84:	mov	w2, w0
  407f88:	add	x5, sp, #0x40
  407f8c:	mov	x1, x23
  407f90:	add	x0, sp, #0x60
  407f94:	mov	w3, #0x0                   	// #0
  407f98:	bl	402630 <re_search@plt>
  407f9c:	cmn	w0, #0x2
  407fa0:	b.eq	4080a8 <ferror@plt+0x5708>  // b.none
  407fa4:	tbnz	w0, #31, 407fc0 <ferror@plt+0x5620>
  407fa8:	ldr	x2, [x20, #24]
  407fac:	add	x3, sp, #0x40
  407fb0:	mov	x1, x23
  407fb4:	mov	x0, x21
  407fb8:	ldr	x2, [x2, #8]
  407fbc:	bl	4039a0 <ferror@plt+0x1000>
  407fc0:	add	x0, sp, #0x60
  407fc4:	bl	4028d0 <regfree@plt>
  407fc8:	ldr	x0, [sp, #72]
  407fcc:	bl	4027c0 <free@plt>
  407fd0:	ldr	x0, [sp, #80]
  407fd4:	bl	4027c0 <free@plt>
  407fd8:	ldp	x19, x20, [sp, #16]
  407fdc:	ldp	x21, x22, [sp, #32]
  407fe0:	ldr	x23, [sp, #48]
  407fe4:	ldp	x29, x30, [sp], #160
  407fe8:	ret
  407fec:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  407ff0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  407ff4:	ldr	x3, [x0, #8]
  407ff8:	add	x2, x2, #0x458
  407ffc:	ldr	w0, [x1, #1676]
  408000:	mov	w1, #0x0                   	// #0
  408004:	bl	4033d0 <ferror@plt+0xa30>
  408008:	cmp	w19, #0x2
  40800c:	b.ne	407f08 <ferror@plt+0x5568>  // b.any
  408010:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  408014:	add	x20, x20, #0x6b0
  408018:	mov	w1, #0x30                  	// #48
  40801c:	add	x0, x20, #0x10e
  408020:	strh	w1, [x20, #270]
  408024:	bl	402390 <strlen@plt>
  408028:	mov	x19, x0
  40802c:	ldp	x0, x1, [x21, #24]
  408030:	sub	x1, x1, x0
  408034:	cmp	x19, x1
  408038:	b.hi	4080f8 <ferror@plt+0x5758>  // b.pmore
  40803c:	add	x1, x20, #0x10e
  408040:	mov	x2, x19
  408044:	bl	402350 <memcpy@plt>
  408048:	ldr	x0, [x21, #24]
  40804c:	add	x0, x0, x19
  408050:	str	x0, [x21, #24]
  408054:	ldp	x19, x20, [sp, #16]
  408058:	ldp	x21, x22, [sp, #32]
  40805c:	ldp	x29, x30, [sp], #160
  408060:	ret
  408064:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408068:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40806c:	ldr	x3, [x0, #8]
  408070:	add	x2, x2, #0x488
  408074:	ldr	w0, [x1, #1676]
  408078:	mov	w1, #0x0                   	// #0
  40807c:	bl	4033d0 <ferror@plt+0xa30>
  408080:	b	407f34 <ferror@plt+0x5594>
  408084:	mov	w4, w0
  408088:	mov	w2, w0
  40808c:	mov	x1, x23
  408090:	add	x0, sp, #0x60
  408094:	mov	x5, #0x0                   	// #0
  408098:	mov	w3, #0x0                   	// #0
  40809c:	bl	402630 <re_search@plt>
  4080a0:	cmn	w0, #0x2
  4080a4:	b.ne	4080e8 <ferror@plt+0x5748>  // b.any
  4080a8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4080ac:	mov	x3, x22
  4080b0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4080b4:	mov	w1, #0x0                   	// #0
  4080b8:	ldr	w0, [x0, #1676]
  4080bc:	add	x2, x2, #0x6c8
  4080c0:	bl	4033d0 <ferror@plt+0xa30>
  4080c4:	b	407fc0 <ferror@plt+0x5620>
  4080c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4080cc:	mov	x3, x22
  4080d0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4080d4:	mov	w1, #0x0                   	// #0
  4080d8:	ldr	w0, [x0, #1676]
  4080dc:	add	x2, x2, #0x710
  4080e0:	bl	4033d0 <ferror@plt+0xa30>
  4080e4:	b	407fc0 <ferror@plt+0x5620>
  4080e8:	mov	w1, w0
  4080ec:	mov	x0, x21
  4080f0:	bl	403c78 <ferror@plt+0x12d8>
  4080f4:	b	407fc0 <ferror@plt+0x5620>
  4080f8:	mov	x0, x21
  4080fc:	mov	x1, x19
  408100:	bl	41d788 <_obstack_newchunk@@Base>
  408104:	ldr	x0, [x21, #24]
  408108:	b	40803c <ferror@plt+0x569c>
  40810c:	nop
  408110:	stp	x29, x30, [sp, #-48]!
  408114:	cmp	w1, #0x0
  408118:	mov	x29, sp
  40811c:	str	wzr, [sp, #44]
  408120:	ldr	x0, [x2]
  408124:	str	x19, [sp, #16]
  408128:	b.gt	408170 <ferror@plt+0x57d0>
  40812c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408130:	ldr	w1, [x1, #1688]
  408134:	cbz	w1, 4081dc <ferror@plt+0x583c>
  408138:	mov	x0, #0x0                   	// #0
  40813c:	bl	4097e8 <ferror@plt+0x6e48>
  408140:	bl	409750 <ferror@plt+0x6db0>
  408144:	ldr	w1, [sp, #44]
  408148:	cbnz	w1, 408160 <ferror@plt+0x57c0>
  40814c:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  408150:	ldr	w0, [x0, #3520]
  408154:	cbz	w0, 40816c <ferror@plt+0x57cc>
  408158:	mov	w1, w0
  40815c:	str	w0, [sp, #44]
  408160:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x1a640>
  408164:	mov	w0, w1
  408168:	str	w1, [x2, #868]
  40816c:	bl	4023c0 <exit@plt>
  408170:	mov	x19, x2
  408174:	cmp	w1, #0x2
  408178:	b.le	4081d4 <ferror@plt+0x5834>
  40817c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408180:	ldr	w1, [x1, #1688]
  408184:	cbz	w1, 4081fc <ferror@plt+0x585c>
  408188:	ldr	x1, [x19, #8]
  40818c:	add	x0, x0, #0x8
  408190:	add	x2, sp, #0x2c
  408194:	ldr	x1, [x1, #8]
  408198:	bl	404938 <ferror@plt+0x1f98>
  40819c:	tst	w0, #0xff
  4081a0:	b.eq	4081c8 <ferror@plt+0x5828>  // b.none
  4081a4:	ldr	w3, [sp, #44]
  4081a8:	cmp	w3, #0xff
  4081ac:	b.ls	408138 <ferror@plt+0x5798>  // b.plast
  4081b0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4081b4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4081b8:	mov	w1, #0x0                   	// #0
  4081bc:	add	x2, x2, #0x738
  4081c0:	ldr	w0, [x0, #1676]
  4081c4:	bl	4033d0 <ferror@plt+0xa30>
  4081c8:	mov	w0, #0x1                   	// #1
  4081cc:	str	w0, [sp, #44]
  4081d0:	b	408138 <ferror@plt+0x5798>
  4081d4:	b.eq	408188 <ferror@plt+0x57e8>  // b.none
  4081d8:	b	408138 <ferror@plt+0x5798>
  4081dc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4081e0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4081e4:	ldr	x3, [x0, #8]
  4081e8:	add	x2, x2, #0x458
  4081ec:	ldr	w0, [x1, #1676]
  4081f0:	mov	w1, #0x0                   	// #0
  4081f4:	bl	4033d0 <ferror@plt+0xa30>
  4081f8:	b	4081a4 <ferror@plt+0x5804>
  4081fc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408200:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  408204:	ldr	x3, [x0, #8]
  408208:	add	x2, x2, #0x488
  40820c:	ldr	w0, [x1, #1676]
  408210:	mov	w1, #0x0                   	// #0
  408214:	bl	4033d0 <ferror@plt+0xa30>
  408218:	ldr	x0, [x19]
  40821c:	b	408188 <ferror@plt+0x57e8>
  408220:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  408224:	add	x1, x1, #0xa00
  408228:	mov	x3, x0
  40822c:	add	x0, x1, #0x28
  408230:	b	408240 <ferror@plt+0x58a0>
  408234:	ldr	x1, [x0, #24]
  408238:	cbz	x1, 408254 <ferror@plt+0x58b4>
  40823c:	mov	x0, x2
  408240:	ldr	x1, [x0, #16]
  408244:	add	x2, x0, #0x18
  408248:	cmp	x1, x3
  40824c:	b.ne	408234 <ferror@plt+0x5894>  // b.any
  408250:	ret
  408254:	adrp	x2, 403000 <ferror@plt+0x660>
  408258:	add	x2, x2, #0x528
  40825c:	add	x1, x0, #0x30
  408260:	cmp	x3, x2
  408264:	csel	x0, x1, xzr, eq  // eq = none
  408268:	ret
  40826c:	nop
  408270:	stp	x29, x30, [sp, #-32]!
  408274:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  408278:	mov	x29, sp
  40827c:	stp	x19, x20, [sp, #16]
  408280:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  408284:	add	x19, x19, #0xa00
  408288:	mov	x20, x0
  40828c:	add	x19, x19, #0x28
  408290:	add	x0, x2, #0x530
  408294:	b	4082a8 <ferror@plt+0x5908>
  408298:	ldr	x0, [x19, #24]
  40829c:	add	x2, x19, #0x18
  4082a0:	cbz	x0, 4082c4 <ferror@plt+0x5924>
  4082a4:	mov	x19, x2
  4082a8:	mov	x1, x20
  4082ac:	bl	402760 <strcmp@plt>
  4082b0:	cbnz	w0, 408298 <ferror@plt+0x58f8>
  4082b4:	mov	x0, x19
  4082b8:	ldp	x19, x20, [sp, #16]
  4082bc:	ldp	x29, x30, [sp], #32
  4082c0:	ret
  4082c4:	add	x19, x19, #0x30
  4082c8:	mov	x0, x19
  4082cc:	ldp	x19, x20, [sp, #16]
  4082d0:	ldp	x29, x30, [sp], #32
  4082d4:	ret
  4082d8:	stp	x29, x30, [sp, #-32]!
  4082dc:	mov	x29, sp
  4082e0:	str	x19, [sp, #16]
  4082e4:	mov	x19, x1
  4082e8:	mov	w1, w2
  4082ec:	bl	411620 <ferror@plt+0xec80>
  4082f0:	mov	w1, #0x2                   	// #2
  4082f4:	ldrb	w3, [x0, #8]
  4082f8:	ldrb	w2, [x19, #8]
  4082fc:	ldr	x4, [x19, #16]
  408300:	ldr	x19, [sp, #16]
  408304:	str	w1, [x0, #24]
  408308:	ubfx	x1, x2, #2, #1
  40830c:	ubfx	x2, x2, #1, #1
  408310:	str	x4, [x0, #32]
  408314:	ubfiz	w2, w2, #2, #6
  408318:	ubfiz	w1, w1, #3, #5
  40831c:	orr	w1, w1, w2
  408320:	and	w2, w3, #0xfffffff3
  408324:	orr	w1, w1, w2
  408328:	strb	w1, [x0, #8]
  40832c:	ldp	x29, x30, [sp], #32
  408330:	ret
  408334:	nop
  408338:	stp	x29, x30, [sp, #-32]!
  40833c:	mov	x29, sp
  408340:	stp	x19, x20, [sp, #16]
  408344:	cbz	x0, 4083cc <ferror@plt+0x5a2c>
  408348:	ldrb	w1, [x0]
  40834c:	mov	x19, x0
  408350:	cbz	w1, 4083b8 <ferror@plt+0x5a18>
  408354:	bl	402390 <strlen@plt>
  408358:	mov	x1, x0
  40835c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  408360:	add	x20, x20, #0x6b0
  408364:	add	x2, x20, #0x118
  408368:	mov	x0, x19
  40836c:	bl	4026e0 <re_compile_pattern@plt>
  408370:	mov	x4, x0
  408374:	cbz	x0, 408390 <ferror@plt+0x59f0>
  408378:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40837c:	mov	x3, x19
  408380:	add	x2, x2, #0x758
  408384:	mov	w1, #0x0                   	// #0
  408388:	mov	w0, #0x1                   	// #1
  40838c:	bl	4033d0 <ferror@plt+0xa30>
  408390:	add	x1, x20, #0x158
  408394:	ldr	w2, [x20, #344]
  408398:	add	x0, x20, #0x118
  40839c:	ldp	x3, x4, [x1, #8]
  4083a0:	bl	4025e0 <re_set_registers@plt>
  4083a4:	mov	w0, #0x1                   	// #1
  4083a8:	strb	w0, [x20, #276]
  4083ac:	ldp	x19, x20, [sp, #16]
  4083b0:	ldp	x29, x30, [sp], #32
  4083b4:	ret
  4083b8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4083bc:	ldp	x19, x20, [sp, #16]
  4083c0:	strb	wzr, [x0, #1988]
  4083c4:	ldp	x29, x30, [sp], #32
  4083c8:	ret
  4083cc:	adrp	x19, 41e000 <_obstack_memory_used@@Base+0x640>
  4083d0:	mov	x1, #0x1a                  	// #26
  4083d4:	add	x19, x19, #0x240
  4083d8:	b	40835c <ferror@plt+0x59bc>
  4083dc:	nop
  4083e0:	stp	x29, x30, [sp, #-32]!
  4083e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4083e8:	add	x0, x0, #0x6b0
  4083ec:	mov	x29, sp
  4083f0:	str	x19, [sp, #16]
  4083f4:	add	x19, x0, #0x158
  4083f8:	add	x0, x0, #0x118
  4083fc:	bl	4028d0 <regfree@plt>
  408400:	ldr	x0, [x19, #8]
  408404:	bl	4027c0 <free@plt>
  408408:	ldr	x0, [x19, #16]
  40840c:	ldr	x19, [sp, #16]
  408410:	ldp	x29, x30, [sp], #32
  408414:	b	4027c0 <free@plt>
  408418:	stp	x29, x30, [sp, #-96]!
  40841c:	mov	x29, sp
  408420:	stp	x19, x20, [sp, #16]
  408424:	mov	w19, w2
  408428:	stp	x21, x22, [sp, #32]
  40842c:	mov	x21, x0
  408430:	stp	x23, x24, [sp, #48]
  408434:	mov	x23, x1
  408438:	cbz	x1, 40855c <ferror@plt+0x5bbc>
  40843c:	mov	x0, x1
  408440:	bl	41cbb8 <ferror@plt+0x1a218>
  408444:	mov	w1, w19
  408448:	mov	x20, x0
  40844c:	mov	x0, x21
  408450:	bl	411620 <ferror@plt+0xec80>
  408454:	mov	x19, x0
  408458:	ldr	w0, [x0, #24]
  40845c:	cmp	w0, #0x1
  408460:	b.eq	4085ac <ferror@plt+0x5c0c>  // b.none
  408464:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  408468:	add	x22, x22, #0x6b0
  40846c:	mov	w0, #0x1                   	// #1
  408470:	cmp	x23, #0x0
  408474:	str	w0, [x19, #24]
  408478:	cset	w1, ne  // ne = any
  40847c:	ldrb	w0, [x22, #276]
  408480:	str	x20, [x19, #32]
  408484:	tst	w1, w0
  408488:	b.ne	4084a0 <ferror@plt+0x5b00>  // b.any
  40848c:	ldp	x19, x20, [sp, #16]
  408490:	ldp	x21, x22, [sp, #32]
  408494:	ldp	x23, x24, [sp, #48]
  408498:	ldp	x29, x30, [sp], #96
  40849c:	ret
  4084a0:	mov	x0, x20
  4084a4:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0x1640>
  4084a8:	add	x24, x24, #0x790
  4084ac:	stp	x25, x26, [sp, #64]
  4084b0:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x1a640>
  4084b4:	add	x26, x26, #0x68c
  4084b8:	stp	x27, x28, [sp, #80]
  4084bc:	bl	402390 <strlen@plt>
  4084c0:	add	x27, x22, #0x158
  4084c4:	mov	x23, x0
  4084c8:	mov	w25, w0
  4084cc:	mov	w19, #0x0                   	// #0
  4084d0:	mov	w3, w19
  4084d4:	mov	w2, w25
  4084d8:	mov	x1, x20
  4084dc:	mov	x5, x27
  4084e0:	sub	w4, w23, w19
  4084e4:	add	x0, x22, #0x118
  4084e8:	bl	402630 <re_search@plt>
  4084ec:	mov	x3, x21
  4084f0:	mov	x2, x24
  4084f4:	mov	w1, #0x0                   	// #0
  4084f8:	tbnz	w0, #31, 408538 <ferror@plt+0x5b98>
  4084fc:	ldp	x4, x6, [x27, #8]
  408500:	ldr	w5, [x4]
  408504:	ldr	w19, [x6]
  408508:	cmp	w5, w19
  40850c:	b.ne	408518 <ferror@plt+0x5b78>  // b.any
  408510:	add	w19, w0, #0x1
  408514:	b	4084d0 <ferror@plt+0x5b30>
  408518:	ldrb	w28, [x20, w19, sxtw]
  40851c:	ldr	w0, [x26]
  408520:	strb	wzr, [x20, w19, sxtw]
  408524:	ldrsw	x4, [x4]
  408528:	add	x4, x20, x4
  40852c:	bl	4033d0 <ferror@plt+0xa30>
  408530:	strb	w28, [x20, w19, sxtw]
  408534:	b	4084d0 <ferror@plt+0x5b30>
  408538:	cmn	w0, #0x2
  40853c:	b.eq	4085b8 <ferror@plt+0x5c18>  // b.none
  408540:	ldp	x19, x20, [sp, #16]
  408544:	ldp	x21, x22, [sp, #32]
  408548:	ldp	x23, x24, [sp, #48]
  40854c:	ldp	x25, x26, [sp, #64]
  408550:	ldp	x27, x28, [sp, #80]
  408554:	ldp	x29, x30, [sp], #96
  408558:	ret
  40855c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  408560:	add	x0, x0, #0xe8
  408564:	bl	41cbb8 <ferror@plt+0x1a218>
  408568:	mov	x22, x0
  40856c:	mov	w1, w19
  408570:	mov	x0, x21
  408574:	bl	411620 <ferror@plt+0xec80>
  408578:	mov	x19, x0
  40857c:	ldr	w0, [x0, #24]
  408580:	mov	x20, x22
  408584:	cmp	w0, #0x1
  408588:	b.eq	4085ac <ferror@plt+0x5c0c>  // b.none
  40858c:	mov	w0, #0x1                   	// #1
  408590:	str	w0, [x19, #24]
  408594:	str	x22, [x19, #32]
  408598:	ldp	x19, x20, [sp, #16]
  40859c:	ldp	x21, x22, [sp, #32]
  4085a0:	ldp	x23, x24, [sp, #48]
  4085a4:	ldp	x29, x30, [sp], #96
  4085a8:	ret
  4085ac:	ldr	x0, [x19, #32]
  4085b0:	bl	4027c0 <free@plt>
  4085b4:	b	408464 <ferror@plt+0x5ac4>
  4085b8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4085bc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4085c0:	ldp	x19, x20, [sp, #16]
  4085c4:	add	x2, x2, #0x7c8
  4085c8:	ldp	x21, x22, [sp, #32]
  4085cc:	ldp	x23, x24, [sp, #48]
  4085d0:	ldp	x25, x26, [sp, #64]
  4085d4:	ldp	x27, x28, [sp, #80]
  4085d8:	ldp	x29, x30, [sp], #96
  4085dc:	ldr	w0, [x0, #1676]
  4085e0:	b	4033d0 <ferror@plt+0xa30>
  4085e4:	nop
  4085e8:	cmp	w1, #0x1
  4085ec:	ldr	x0, [x2]
  4085f0:	b.gt	408604 <ferror@plt+0x5c64>
  4085f4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4085f8:	ldr	w1, [x1, #1688]
  4085fc:	cbz	w1, 408734 <ferror@plt+0x5d94>
  408600:	ret
  408604:	stp	x29, x30, [sp, #-32]!
  408608:	cmp	w1, #0x3
  40860c:	mov	x29, sp
  408610:	str	x19, [sp, #16]
  408614:	mov	x19, x2
  408618:	b.le	4086dc <ferror@plt+0x5d3c>
  40861c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408620:	ldr	w1, [x1, #1688]
  408624:	cbz	w1, 408764 <ferror@plt+0x5dc4>
  408628:	ldr	x3, [x19, #8]
  40862c:	ldr	w0, [x3]
  408630:	cmp	w0, #0x1
  408634:	b.ne	40870c <ferror@plt+0x5d6c>  // b.any
  408638:	ldr	x0, [x19, #16]
  40863c:	ldr	w2, [x0]
  408640:	cmp	w2, #0x1
  408644:	b.eq	408750 <ferror@plt+0x5db0>  // b.none
  408648:	cmp	w2, #0x2
  40864c:	b.ne	40879c <ferror@plt+0x5dfc>  // b.any
  408650:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  408654:	add	x19, x19, #0xa00
  408658:	add	x19, x19, #0x28
  40865c:	ldr	x2, [x0, #8]
  408660:	ldr	x0, [x19, #16]
  408664:	cmp	x2, x0
  408668:	b.eq	40868c <ferror@plt+0x5cec>  // b.none
  40866c:	nop
  408670:	ldr	x0, [x19, #24]
  408674:	add	x1, x19, #0x18
  408678:	cbz	x0, 408784 <ferror@plt+0x5de4>
  40867c:	mov	x19, x1
  408680:	ldr	x0, [x19, #16]
  408684:	cmp	x2, x0
  408688:	b.ne	408670 <ferror@plt+0x5cd0>  // b.any
  40868c:	ldr	x0, [x3, #8]
  408690:	mov	w1, #0x1                   	// #1
  408694:	bl	411620 <ferror@plt+0xec80>
  408698:	ldrb	w3, [x0, #8]
  40869c:	ldrb	w2, [x19, #8]
  4086a0:	mov	w5, #0x2                   	// #2
  4086a4:	and	w3, w3, #0xfffffff3
  4086a8:	ldr	x4, [x19, #16]
  4086ac:	ubfx	x1, x2, #2, #1
  4086b0:	ubfx	x2, x2, #1, #1
  4086b4:	str	w5, [x0, #24]
  4086b8:	ubfiz	w1, w1, #3, #5
  4086bc:	str	x4, [x0, #32]
  4086c0:	ubfiz	w2, w2, #2, #6
  4086c4:	orr	w1, w1, w2
  4086c8:	orr	w1, w1, w3
  4086cc:	strb	w1, [x0, #8]
  4086d0:	ldr	x19, [sp, #16]
  4086d4:	ldp	x29, x30, [sp], #32
  4086d8:	ret
  4086dc:	ldr	x3, [x2, #8]
  4086e0:	ldr	w2, [x3]
  4086e4:	cmp	w2, #0x1
  4086e8:	b.ne	408710 <ferror@plt+0x5d70>  // b.any
  4086ec:	cmp	w1, #0x2
  4086f0:	b.ne	408638 <ferror@plt+0x5c98>  // b.any
  4086f4:	ldr	x19, [sp, #16]
  4086f8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  4086fc:	ldp	x29, x30, [sp], #32
  408700:	add	x1, x1, #0xe8
  408704:	ldr	x0, [x3, #8]
  408708:	b	408418 <ferror@plt+0x5a78>
  40870c:	ldr	x0, [x19]
  408710:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408714:	ldr	x19, [sp, #16]
  408718:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40871c:	ldp	x29, x30, [sp], #32
  408720:	add	x2, x2, #0x508
  408724:	ldr	x3, [x0, #8]
  408728:	ldr	w0, [x1, #1676]
  40872c:	mov	w1, #0x0                   	// #0
  408730:	b	4033d0 <ferror@plt+0xa30>
  408734:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408738:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40873c:	ldr	x3, [x0, #8]
  408740:	add	x2, x2, #0x458
  408744:	ldr	w0, [x1, #1676]
  408748:	mov	w1, #0x0                   	// #0
  40874c:	b	4033d0 <ferror@plt+0xa30>
  408750:	ldr	x19, [sp, #16]
  408754:	ldp	x29, x30, [sp], #32
  408758:	ldr	x1, [x0, #8]
  40875c:	ldr	x0, [x3, #8]
  408760:	b	408418 <ferror@plt+0x5a78>
  408764:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408768:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40876c:	ldr	x3, [x0, #8]
  408770:	add	x2, x2, #0x488
  408774:	ldr	w0, [x1, #1676]
  408778:	mov	w1, #0x0                   	// #0
  40877c:	bl	4033d0 <ferror@plt+0xa30>
  408780:	b	408628 <ferror@plt+0x5c88>
  408784:	adrp	x0, 403000 <ferror@plt+0x660>
  408788:	add	x0, x0, #0x528
  40878c:	add	x19, x19, #0x30
  408790:	cmp	x2, x0
  408794:	b.ne	4086d0 <ferror@plt+0x5d30>  // b.any
  408798:	b	40868c <ferror@plt+0x5cec>
  40879c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4087a0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4087a4:	add	x2, x2, #0x800
  4087a8:	mov	w1, #0x0                   	// #0
  4087ac:	ldr	w0, [x0, #1676]
  4087b0:	bl	4033d0 <ferror@plt+0xa30>
  4087b4:	bl	4026d0 <abort@plt>
  4087b8:	cmp	w1, #0x1
  4087bc:	ldr	x0, [x2]
  4087c0:	b.gt	4087d4 <ferror@plt+0x5e34>
  4087c4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4087c8:	ldr	w1, [x1, #1688]
  4087cc:	cbz	w1, 408908 <ferror@plt+0x5f68>
  4087d0:	ret
  4087d4:	stp	x29, x30, [sp, #-32]!
  4087d8:	cmp	w1, #0x3
  4087dc:	mov	x29, sp
  4087e0:	str	x19, [sp, #16]
  4087e4:	mov	x19, x2
  4087e8:	b.le	4088ac <ferror@plt+0x5f0c>
  4087ec:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4087f0:	ldr	w1, [x1, #1688]
  4087f4:	cbz	w1, 40893c <ferror@plt+0x5f9c>
  4087f8:	ldr	x3, [x19, #8]
  4087fc:	ldr	w0, [x3]
  408800:	cmp	w0, #0x1
  408804:	b.ne	4088e0 <ferror@plt+0x5f40>  // b.any
  408808:	ldr	x1, [x19, #16]
  40880c:	ldr	w0, [x1]
  408810:	cmp	w0, #0x1
  408814:	b.eq	408924 <ferror@plt+0x5f84>  // b.none
  408818:	cmp	w0, #0x2
  40881c:	b.ne	408974 <ferror@plt+0x5fd4>  // b.any
  408820:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  408824:	add	x19, x19, #0xa00
  408828:	ldr	x2, [x1, #8]
  40882c:	add	x19, x19, #0x28
  408830:	ldr	x0, [x19, #16]
  408834:	cmp	x2, x0
  408838:	b.eq	40885c <ferror@plt+0x5ebc>  // b.none
  40883c:	nop
  408840:	ldr	x0, [x19, #24]
  408844:	add	x1, x19, #0x18
  408848:	cbz	x0, 40895c <ferror@plt+0x5fbc>
  40884c:	mov	x19, x1
  408850:	ldr	x0, [x19, #16]
  408854:	cmp	x2, x0
  408858:	b.ne	408840 <ferror@plt+0x5ea0>  // b.any
  40885c:	ldr	x0, [x3, #8]
  408860:	mov	w1, #0x3                   	// #3
  408864:	bl	411620 <ferror@plt+0xec80>
  408868:	ldrb	w3, [x0, #8]
  40886c:	ldrb	w2, [x19, #8]
  408870:	mov	w5, #0x2                   	// #2
  408874:	and	w3, w3, #0xfffffff3
  408878:	ldr	x4, [x19, #16]
  40887c:	ubfx	x1, x2, #2, #1
  408880:	ubfx	x2, x2, #1, #1
  408884:	str	w5, [x0, #24]
  408888:	ubfiz	w1, w1, #3, #5
  40888c:	str	x4, [x0, #32]
  408890:	ubfiz	w2, w2, #2, #6
  408894:	orr	w1, w1, w2
  408898:	orr	w1, w1, w3
  40889c:	strb	w1, [x0, #8]
  4088a0:	ldr	x19, [sp, #16]
  4088a4:	ldp	x29, x30, [sp], #32
  4088a8:	ret
  4088ac:	ldr	x3, [x2, #8]
  4088b0:	ldr	w2, [x3]
  4088b4:	cmp	w2, #0x1
  4088b8:	b.ne	4088e4 <ferror@plt+0x5f44>  // b.any
  4088bc:	cmp	w1, #0x2
  4088c0:	b.ne	408808 <ferror@plt+0x5e68>  // b.any
  4088c4:	ldr	x19, [sp, #16]
  4088c8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  4088cc:	ldp	x29, x30, [sp], #32
  4088d0:	add	x1, x1, #0xe8
  4088d4:	ldr	x0, [x3, #8]
  4088d8:	mov	w2, #0x3                   	// #3
  4088dc:	b	408418 <ferror@plt+0x5a78>
  4088e0:	ldr	x0, [x19]
  4088e4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4088e8:	ldr	x19, [sp, #16]
  4088ec:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4088f0:	ldp	x29, x30, [sp], #32
  4088f4:	add	x2, x2, #0x508
  4088f8:	ldr	x3, [x0, #8]
  4088fc:	ldr	w0, [x1, #1676]
  408900:	mov	w1, #0x0                   	// #0
  408904:	b	4033d0 <ferror@plt+0xa30>
  408908:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40890c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  408910:	ldr	x3, [x0, #8]
  408914:	add	x2, x2, #0x458
  408918:	ldr	w0, [x1, #1676]
  40891c:	mov	w1, #0x0                   	// #0
  408920:	b	4033d0 <ferror@plt+0xa30>
  408924:	ldr	x19, [sp, #16]
  408928:	mov	w2, #0x3                   	// #3
  40892c:	ldp	x29, x30, [sp], #32
  408930:	ldr	x1, [x1, #8]
  408934:	ldr	x0, [x3, #8]
  408938:	b	408418 <ferror@plt+0x5a78>
  40893c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408940:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  408944:	ldr	x3, [x0, #8]
  408948:	add	x2, x2, #0x488
  40894c:	ldr	w0, [x1, #1676]
  408950:	mov	w1, #0x0                   	// #0
  408954:	bl	4033d0 <ferror@plt+0xa30>
  408958:	b	4087f8 <ferror@plt+0x5e58>
  40895c:	adrp	x0, 403000 <ferror@plt+0x660>
  408960:	add	x0, x0, #0x528
  408964:	add	x19, x19, #0x30
  408968:	cmp	x2, x0
  40896c:	b.ne	4088a0 <ferror@plt+0x5f00>  // b.any
  408970:	b	40885c <ferror@plt+0x5ebc>
  408974:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  408978:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  40897c:	add	x2, x2, #0x800
  408980:	mov	w1, #0x0                   	// #0
  408984:	ldr	w0, [x0, #1676]
  408988:	bl	4033d0 <ferror@plt+0xa30>
  40898c:	bl	4026d0 <abort@plt>
  408990:	stp	x29, x30, [sp, #-80]!
  408994:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  408998:	add	x0, x0, #0x530
  40899c:	mov	x29, sp
  4089a0:	stp	x21, x22, [sp, #32]
  4089a4:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  4089a8:	mov	w22, #0x2                   	// #2
  4089ac:	ldr	w2, [x21, #1680]
  4089b0:	stp	x19, x20, [sp, #16]
  4089b4:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  4089b8:	add	x20, x19, #0xa00
  4089bc:	add	x19, x20, #0x28
  4089c0:	stp	x23, x24, [sp, #48]
  4089c4:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  4089c8:	mov	w23, #0x346d                	// #13421
  4089cc:	add	x24, x24, #0x694
  4089d0:	movk	w23, #0x5f, lsl #16
  4089d4:	str	x25, [sp, #64]
  4089d8:	cbz	w2, 4089e4 <ferror@plt+0x6044>
  4089dc:	ldrb	w1, [x19, #8]
  4089e0:	tbnz	w1, #0, 408a5c <ferror@plt+0x60bc>
  4089e4:	ldr	w2, [x24]
  4089e8:	mov	w1, #0x1                   	// #1
  4089ec:	cbz	w2, 408acc <ferror@plt+0x612c>
  4089f0:	bl	402390 <strlen@plt>
  4089f4:	add	x0, x0, #0x4
  4089f8:	bl	41ca30 <ferror@plt+0x1a090>
  4089fc:	mov	x25, x0
  408a00:	ldr	x1, [x19]
  408a04:	str	w23, [x0], #3
  408a08:	bl	402860 <strcpy@plt>
  408a0c:	mov	w1, #0x1                   	// #1
  408a10:	mov	x0, x25
  408a14:	bl	411620 <ferror@plt+0xec80>
  408a18:	mov	x2, x0
  408a1c:	ldrb	w3, [x19, #8]
  408a20:	mov	x0, x25
  408a24:	ldrb	w4, [x2, #8]
  408a28:	ubfx	x1, x3, #2, #1
  408a2c:	ubfx	x3, x3, #1, #1
  408a30:	and	w4, w4, #0xfffffff3
  408a34:	ubfiz	w3, w3, #2, #6
  408a38:	ubfiz	w1, w1, #3, #5
  408a3c:	orr	w1, w1, w3
  408a40:	orr	w1, w1, w4
  408a44:	strb	w1, [x2, #8]
  408a48:	ldr	x1, [x19, #16]
  408a4c:	str	w22, [x2, #24]
  408a50:	str	x1, [x2, #32]
  408a54:	bl	4027c0 <free@plt>
  408a58:	ldr	w2, [x21, #1680]
  408a5c:	ldr	x0, [x19, #24]!
  408a60:	cbnz	x0, 4089d8 <ferror@plt+0x6038>
  408a64:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  408a68:	add	x20, x20, #0x4a8
  408a6c:	add	x21, x21, #0x690
  408a70:	add	x1, x1, #0xe8
  408a74:	cbz	w2, 408a9c <ferror@plt+0x60fc>
  408a78:	ldr	x0, [x20]
  408a7c:	mov	w2, #0x1                   	// #1
  408a80:	cbz	x0, 408a88 <ferror@plt+0x60e8>
  408a84:	bl	408418 <ferror@plt+0x5a78>
  408a88:	ldr	x1, [x20, #40]
  408a8c:	add	x20, x20, #0x18
  408a90:	cbz	x1, 408ab4 <ferror@plt+0x6114>
  408a94:	ldr	w2, [x21]
  408a98:	cbnz	w2, 408a78 <ferror@plt+0x60d8>
  408a9c:	ldr	x0, [x20, #8]
  408aa0:	mov	w2, #0x1                   	// #1
  408aa4:	cbnz	x0, 408a84 <ferror@plt+0x60e4>
  408aa8:	ldr	x1, [x20, #40]
  408aac:	add	x20, x20, #0x18
  408ab0:	cbnz	x1, 408a94 <ferror@plt+0x60f4>
  408ab4:	ldp	x19, x20, [sp, #16]
  408ab8:	ldp	x21, x22, [sp, #32]
  408abc:	ldp	x23, x24, [sp, #48]
  408ac0:	ldr	x25, [sp, #64]
  408ac4:	ldp	x29, x30, [sp], #80
  408ac8:	ret
  408acc:	bl	411620 <ferror@plt+0xec80>
  408ad0:	ldrb	w4, [x0, #8]
  408ad4:	ldrb	w3, [x19, #8]
  408ad8:	and	w4, w4, #0xfffffff3
  408adc:	ldr	w2, [x21, #1680]
  408ae0:	ubfx	x1, x3, #2, #1
  408ae4:	ubfx	x3, x3, #1, #1
  408ae8:	ubfiz	w1, w1, #3, #5
  408aec:	ubfiz	w3, w3, #2, #6
  408af0:	orr	w1, w1, w3
  408af4:	orr	w1, w1, w4
  408af8:	strb	w1, [x0, #8]
  408afc:	ldr	x1, [x19, #16]
  408b00:	str	w22, [x0, #24]
  408b04:	str	x1, [x0, #32]
  408b08:	b	408a5c <ferror@plt+0x60bc>
  408b0c:	nop
  408b10:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x1a640>
  408b14:	add	x3, x3, #0x6b0
  408b18:	mov	w2, w0
  408b1c:	mov	w7, #0x0                   	// #0
  408b20:	strb	wzr, [x3, #271]
  408b24:	tbz	w0, #31, 408b30 <ferror@plt+0x6190>
  408b28:	neg	w2, w0
  408b2c:	mov	w7, #0x1                   	// #1
  408b30:	adrp	x5, 41f000 <_obstack_memory_used@@Base+0x1640>
  408b34:	add	x0, x3, #0x10f
  408b38:	add	x5, x5, #0xa00
  408b3c:	nop
  408b40:	udiv	w3, w2, w1
  408b44:	cmp	w2, w1
  408b48:	mov	x6, x0
  408b4c:	msub	w4, w3, w1, w2
  408b50:	mov	w2, w3
  408b54:	ldrb	w3, [x5, w4, uxtw]
  408b58:	strb	w3, [x0, #-1]!
  408b5c:	b.cs	408b40 <ferror@plt+0x61a0>  // b.hs, b.nlast
  408b60:	cbz	w7, 408b70 <ferror@plt+0x61d0>
  408b64:	mov	w1, #0x2d                  	// #45
  408b68:	sturb	w1, [x0, #-1]
  408b6c:	sub	x0, x6, #0x2
  408b70:	ret
  408b74:	nop
  408b78:	movi	v0.4s, #0x0
  408b7c:	stp	xzr, xzr, [x0]
  408b80:	str	q0, [x0, #32]
  408b84:	cbz	x1, 408b8c <ferror@plt+0x61ec>
  408b88:	stur	q0, [x1, #8]
  408b8c:	ret
  408b90:	stp	x29, x30, [sp, #-112]!
  408b94:	mov	x29, sp
  408b98:	stp	x25, x26, [sp, #64]
  408b9c:	mov	x26, x0
  408ba0:	adrp	x25, 41f000 <_obstack_memory_used@@Base+0x1640>
  408ba4:	stp	x19, x20, [sp, #16]
  408ba8:	sub	w0, w2, #0x1
  408bac:	add	x25, x25, #0x558
  408bb0:	stp	x23, x24, [sp, #48]
  408bb4:	mov	x23, x3
  408bb8:	ldr	x19, [x26, #24]
  408bbc:	stp	x21, x22, [sp, #32]
  408bc0:	mov	w22, w2
  408bc4:	ldr	x24, [x1, #32]
  408bc8:	stp	x27, x28, [sp, #80]
  408bcc:	str	w0, [sp, #108]
  408bd0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  408bd4:	add	x0, x0, #0x690
  408bd8:	str	x0, [sp, #96]
  408bdc:	nop
  408be0:	mov	x0, x24
  408be4:	mov	w1, #0x24                  	// #36
  408be8:	bl	402810 <strchr@plt>
  408bec:	mov	x21, x0
  408bf0:	cbz	x0, 408c70 <ferror@plt+0x62d0>
  408bf4:	ldr	x1, [x26, #32]
  408bf8:	sub	x28, x21, x24
  408bfc:	mov	x0, x19
  408c00:	sub	x1, x1, x19
  408c04:	cmp	x28, x1
  408c08:	b.hi	408d20 <ferror@plt+0x6380>  // b.pmore
  408c0c:	mov	x1, x24
  408c10:	mov	x2, x28
  408c14:	bl	402350 <memcpy@plt>
  408c18:	add	x24, x21, #0x1
  408c1c:	ldr	x19, [x26, #24]
  408c20:	add	x28, x19, x28
  408c24:	str	x28, [x26, #24]
  408c28:	mov	x19, x28
  408c2c:	ldrb	w20, [x21, #1]
  408c30:	cmp	w20, #0x39
  408c34:	b.hi	408cf4 <ferror@plt+0x6354>  // b.pmore
  408c38:	cmp	w20, #0x2f
  408c3c:	b.hi	408d34 <ferror@plt+0x6394>  // b.pmore
  408c40:	cmp	w20, #0x23
  408c44:	b.ne	408cc4 <ferror@plt+0x6324>  // b.any
  408c48:	ldr	w1, [sp, #108]
  408c4c:	add	x24, x21, #0x2
  408c50:	mov	x0, x26
  408c54:	bl	403c78 <ferror@plt+0x12d8>
  408c58:	mov	x0, x24
  408c5c:	mov	w1, #0x24                  	// #36
  408c60:	bl	402810 <strchr@plt>
  408c64:	mov	x21, x0
  408c68:	ldr	x19, [x26, #24]
  408c6c:	cbnz	x0, 408bf4 <ferror@plt+0x6254>
  408c70:	mov	x0, x24
  408c74:	bl	402390 <strlen@plt>
  408c78:	ldr	x1, [x26, #32]
  408c7c:	mov	x20, x0
  408c80:	sub	x1, x1, x19
  408c84:	cmp	x0, x1
  408c88:	b.hi	408e1c <ferror@plt+0x647c>  // b.pmore
  408c8c:	mov	x1, x24
  408c90:	mov	x2, x20
  408c94:	mov	x0, x19
  408c98:	bl	402350 <memcpy@plt>
  408c9c:	ldr	x0, [x26, #24]
  408ca0:	ldp	x21, x22, [sp, #32]
  408ca4:	add	x0, x0, x20
  408ca8:	ldp	x19, x20, [sp, #16]
  408cac:	ldp	x23, x24, [sp, #48]
  408cb0:	ldp	x27, x28, [sp, #80]
  408cb4:	str	x0, [x26, #24]
  408cb8:	ldp	x25, x26, [sp, #64]
  408cbc:	ldp	x29, x30, [sp], #112
  408cc0:	ret
  408cc4:	cmp	w20, #0x2a
  408cc8:	b.ne	408cfc <ferror@plt+0x635c>  // b.any
  408ccc:	cmp	w20, #0x40
  408cd0:	mov	x3, x25
  408cd4:	cset	w4, eq  // eq = none
  408cd8:	mov	x2, x23
  408cdc:	mov	w1, w22
  408ce0:	mov	x0, x26
  408ce4:	add	x24, x21, #0x2
  408ce8:	bl	4037e0 <ferror@plt+0xe40>
  408cec:	ldr	x19, [x26, #24]
  408cf0:	b	408be0 <ferror@plt+0x6240>
  408cf4:	cmp	w20, #0x40
  408cf8:	b.eq	408ccc <ferror@plt+0x632c>  // b.none
  408cfc:	ldr	x0, [x26, #32]
  408d00:	cmp	x28, x0
  408d04:	b.eq	408dec <ferror@plt+0x644c>  // b.none
  408d08:	add	x0, x28, #0x1
  408d0c:	str	x0, [x26, #24]
  408d10:	mov	w0, #0x24                  	// #36
  408d14:	strb	w0, [x28]
  408d18:	ldr	x19, [x26, #24]
  408d1c:	b	408be0 <ferror@plt+0x6240>
  408d20:	mov	x0, x26
  408d24:	mov	x1, x28
  408d28:	bl	41d788 <_obstack_newchunk@@Base>
  408d2c:	ldr	x0, [x26, #24]
  408d30:	b	408c0c <ferror@plt+0x626c>
  408d34:	ldr	x0, [sp, #96]
  408d38:	ldr	w27, [x0]
  408d3c:	cbz	w27, 408d98 <ferror@plt+0x63f8>
  408d40:	add	x24, x21, #0x2
  408d44:	sub	w27, w20, #0x30
  408d48:	cmp	w27, w22
  408d4c:	b.ge	408be0 <ferror@plt+0x6240>  // b.tcont
  408d50:	sxtw	x27, w27
  408d54:	ldr	x0, [x23, x27, lsl #3]
  408d58:	ldr	x19, [x0, #8]
  408d5c:	mov	x0, x19
  408d60:	bl	402390 <strlen@plt>
  408d64:	ldr	x2, [x26, #32]
  408d68:	mov	x20, x0
  408d6c:	sub	x2, x2, x28
  408d70:	cmp	x0, x2
  408d74:	b.hi	408e00 <ferror@plt+0x6460>  // b.pmore
  408d78:	mov	x1, x19
  408d7c:	mov	x0, x28
  408d80:	mov	x2, x20
  408d84:	bl	402350 <memcpy@plt>
  408d88:	ldr	x19, [x26, #24]
  408d8c:	add	x19, x19, x20
  408d90:	str	x19, [x26, #24]
  408d94:	b	408be0 <ferror@plt+0x6240>
  408d98:	bl	402770 <__ctype_b_loc@plt>
  408d9c:	ldr	x2, [x0]
  408da0:	ubfiz	x0, x20, #1, #8
  408da4:	ldrh	w0, [x2, x0]
  408da8:	tbz	w0, #11, 408d48 <ferror@plt+0x63a8>
  408dac:	nop
  408db0:	sub	w1, w20, #0x30
  408db4:	ldrb	w20, [x24, #1]!
  408db8:	add	w27, w27, w27, lsl #2
  408dbc:	ubfiz	x0, x20, #1, #8
  408dc0:	add	w27, w1, w27, lsl #1
  408dc4:	ldrh	w0, [x2, x0]
  408dc8:	tbz	w0, #11, 408d48 <ferror@plt+0x63a8>
  408dcc:	sub	w1, w20, #0x30
  408dd0:	ldrb	w20, [x24, #1]!
  408dd4:	add	w27, w27, w27, lsl #2
  408dd8:	ubfiz	x0, x20, #1, #8
  408ddc:	add	w27, w1, w27, lsl #1
  408de0:	ldrh	w0, [x2, x0]
  408de4:	tbnz	w0, #11, 408db0 <ferror@plt+0x6410>
  408de8:	b	408d48 <ferror@plt+0x63a8>
  408dec:	mov	x0, x26
  408df0:	mov	x1, #0x1                   	// #1
  408df4:	bl	41d788 <_obstack_newchunk@@Base>
  408df8:	ldr	x28, [x26, #24]
  408dfc:	b	408d08 <ferror@plt+0x6368>
  408e00:	mov	x1, x0
  408e04:	mov	x0, x26
  408e08:	bl	41d788 <_obstack_newchunk@@Base>
  408e0c:	ldr	x0, [x23, x27, lsl #3]
  408e10:	ldr	x28, [x26, #24]
  408e14:	ldr	x19, [x0, #8]
  408e18:	b	408d78 <ferror@plt+0x63d8>
  408e1c:	mov	x1, x0
  408e20:	mov	x0, x26
  408e24:	bl	41d788 <_obstack_newchunk@@Base>
  408e28:	ldr	x19, [x26, #24]
  408e2c:	b	408c8c <ferror@plt+0x62ec>
  408e30:	stp	x29, x30, [sp, #-304]!
  408e34:	mov	x29, sp
  408e38:	stp	x19, x20, [sp, #16]
  408e3c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  408e40:	mov	x19, x0
  408e44:	ldr	x0, [x20, #2080]
  408e48:	cbz	x0, 408e78 <ferror@plt+0x64d8>
  408e4c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408e50:	ldr	x1, [x1, #1064]
  408e54:	cmp	x0, x1
  408e58:	b.eq	408e78 <ferror@plt+0x64d8>  // b.none
  408e5c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408e60:	ldr	x1, [x1, #1088]
  408e64:	cmp	x0, x1
  408e68:	b.eq	408e78 <ferror@plt+0x64d8>  // b.none
  408e6c:	bl	4153d8 <ferror@plt+0x12a38>
  408e70:	cbnz	w0, 408ef8 <ferror@plt+0x6558>
  408e74:	nop
  408e78:	str	x19, [x20, #2080]
  408e7c:	cbz	x19, 408eec <ferror@plt+0x654c>
  408e80:	str	x21, [sp, #32]
  408e84:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  408e88:	ldr	x0, [x21, #1088]
  408e8c:	cmp	x0, x19
  408e90:	b.eq	408ee8 <ferror@plt+0x6548>  // b.none
  408e94:	add	x2, sp, #0x30
  408e98:	mov	w1, #0x1                   	// #1
  408e9c:	mov	w0, #0x0                   	// #0
  408ea0:	bl	4028a0 <__fxstat@plt>
  408ea4:	tbnz	w0, #31, 408ee8 <ferror@plt+0x6548>
  408ea8:	ldr	x0, [x20, #2080]
  408eac:	bl	4024c0 <fileno@plt>
  408eb0:	mov	w1, w0
  408eb4:	add	x2, sp, #0xb0
  408eb8:	mov	w0, #0x0                   	// #0
  408ebc:	bl	4028a0 <__fxstat@plt>
  408ec0:	tbnz	w0, #31, 408ee8 <ferror@plt+0x6548>
  408ec4:	ldr	x0, [sp, #56]
  408ec8:	ldr	x1, [sp, #184]
  408ecc:	cmp	x0, x1
  408ed0:	b.ne	408ee8 <ferror@plt+0x6548>  // b.any
  408ed4:	cmp	x0, #0x0
  408ed8:	ldr	x1, [sp, #48]
  408edc:	ldr	x0, [sp, #176]
  408ee0:	ccmp	x1, x0, #0x0, ne  // ne = any
  408ee4:	b.eq	408f34 <ferror@plt+0x6594>  // b.none
  408ee8:	ldr	x21, [sp, #32]
  408eec:	ldp	x19, x20, [sp, #16]
  408ef0:	ldp	x29, x30, [sp], #304
  408ef4:	ret
  408ef8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  408efc:	str	x21, [sp, #32]
  408f00:	ldr	w21, [x0, #1676]
  408f04:	bl	402920 <__errno_location@plt>
  408f08:	mov	x1, x0
  408f0c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  408f10:	mov	w0, w21
  408f14:	add	x2, x2, #0xef0
  408f18:	ldr	w1, [x1]
  408f1c:	bl	4033d0 <ferror@plt+0xa30>
  408f20:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  408f24:	mov	w1, #0x1                   	// #1
  408f28:	ldr	x21, [sp, #32]
  408f2c:	str	w1, [x0, #3520]
  408f30:	b	408e78 <ferror@plt+0x64d8>
  408f34:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  408f38:	ldr	x0, [x20, #2080]
  408f3c:	ldr	x1, [x1, #1064]
  408f40:	cmp	x0, x1
  408f44:	b.eq	408f50 <ferror@plt+0x65b0>  // b.none
  408f48:	bl	4153d8 <ferror@plt+0x12a38>
  408f4c:	cbnz	w0, 408f60 <ferror@plt+0x65c0>
  408f50:	ldr	x0, [x21, #1088]
  408f54:	str	x0, [x20, #2080]
  408f58:	ldr	x21, [sp, #32]
  408f5c:	b	408eec <ferror@plt+0x654c>
  408f60:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  408f64:	ldr	w19, [x0, #1676]
  408f68:	bl	402920 <__errno_location@plt>
  408f6c:	mov	x1, x0
  408f70:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  408f74:	mov	w0, w19
  408f78:	add	x2, x2, #0xef0
  408f7c:	ldr	w1, [x1]
  408f80:	bl	4033d0 <ferror@plt+0xa30>
  408f84:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  408f88:	mov	w1, #0x1                   	// #1
  408f8c:	str	w1, [x0, #3520]
  408f90:	b	408f50 <ferror@plt+0x65b0>
  408f94:	nop
  408f98:	stp	x29, x30, [sp, #-48]!
  408f9c:	mov	x29, sp
  408fa0:	stp	x19, x20, [sp, #16]
  408fa4:	stp	x21, x22, [sp, #32]
  408fa8:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  408fac:	add	x19, x21, #0x820
  408fb0:	ldp	x1, x0, [x19, #40]
  408fb4:	cmp	x0, x1
  408fb8:	b.eq	409078 <ferror@plt+0x66d8>  // b.none
  408fbc:	add	x2, x1, #0x1
  408fc0:	str	x2, [x19, #40]
  408fc4:	strb	wzr, [x1]
  408fc8:	ldp	x20, x2, [x19, #32]
  408fcc:	cmp	x2, x20
  408fd0:	b.eq	409068 <ferror@plt+0x66c8>  // b.none
  408fd4:	ldr	x1, [x19, #64]
  408fd8:	ldr	x3, [x19, #24]
  408fdc:	add	x2, x2, x1
  408fe0:	ldr	x4, [x19, #48]
  408fe4:	bic	x1, x2, x1
  408fe8:	str	x1, [x19, #40]
  408fec:	sub	x5, x1, x3
  408ff0:	sub	x2, x4, x3
  408ff4:	cmp	x5, x2
  408ff8:	b.ls	409004 <ferror@plt+0x6664>  // b.plast
  408ffc:	mov	x1, x4
  409000:	str	x4, [x19, #40]
  409004:	ldr	x0, [x21, #2080]
  409008:	str	x1, [x19, #32]
  40900c:	cbz	x0, 409024 <ferror@plt+0x6684>
  409010:	mov	x2, x20
  409014:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  409018:	add	x1, x1, #0xa60
  40901c:	bl	41cdb0 <ferror@plt+0x1a410>
  409020:	ldr	x3, [x19, #24]
  409024:	cmp	x20, x3
  409028:	b.ls	409050 <ferror@plt+0x66b0>  // b.plast
  40902c:	ldr	x1, [x19, #48]
  409030:	cmp	x1, x20
  409034:	b.ls	409050 <ferror@plt+0x66b0>  // b.plast
  409038:	dup	v0.2d, x20
  40903c:	ldp	x21, x22, [sp, #32]
  409040:	str	q0, [x19, #32]
  409044:	ldp	x19, x20, [sp, #16]
  409048:	ldp	x29, x30, [sp], #48
  40904c:	ret
  409050:	mov	x1, x20
  409054:	add	x0, x19, #0x10
  409058:	ldp	x19, x20, [sp, #16]
  40905c:	ldp	x21, x22, [sp, #32]
  409060:	ldp	x29, x30, [sp], #48
  409064:	b	41d910 <_obstack_free@@Base>
  409068:	ldrb	w1, [x19, #96]
  40906c:	orr	w1, w1, #0x2
  409070:	strb	w1, [x19, #96]
  409074:	b	408fd4 <ferror@plt+0x6634>
  409078:	add	x20, x19, #0x10
  40907c:	mov	x1, #0x1                   	// #1
  409080:	mov	x0, x20
  409084:	bl	41d788 <_obstack_newchunk@@Base>
  409088:	ldr	x1, [x19, #40]
  40908c:	b	408fbc <ferror@plt+0x661c>
  409090:	stp	x29, x30, [sp, #-192]!
  409094:	mov	x29, sp
  409098:	stp	x19, x20, [sp, #16]
  40909c:	mov	x19, x0
  4090a0:	mov	w0, #0xffffffc8            	// #-56
  4090a4:	stp	x23, x24, [sp, #48]
  4090a8:	stp	x1, x2, [sp, #136]
  4090ac:	add	x1, sp, #0x80
  4090b0:	add	x2, sp, #0xc0
  4090b4:	stp	x3, x4, [sp, #152]
  4090b8:	stp	x5, x6, [sp, #168]
  4090bc:	str	x7, [sp, #184]
  4090c0:	stp	x2, x2, [sp, #96]
  4090c4:	ldrb	w24, [x19]
  4090c8:	str	x1, [sp, #112]
  4090cc:	stp	w0, wzr, [sp, #120]
  4090d0:	cbz	w24, 409140 <ferror@plt+0x67a0>
  4090d4:	adrp	x23, 41e000 <_obstack_memory_used@@Base+0x640>
  4090d8:	add	x20, x19, #0x1
  4090dc:	add	x23, x23, #0xe8
  4090e0:	stp	x21, x22, [sp, #32]
  4090e4:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  4090e8:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  4090ec:	add	x21, x21, #0x820
  4090f0:	add	x22, x22, #0x69c
  4090f4:	stp	x25, x26, [sp, #64]
  4090f8:	str	x27, [sp, #80]
  4090fc:	nop
  409100:	cmp	w24, #0x25
  409104:	b.eq	409150 <ferror@plt+0x67b0>  // b.none
  409108:	ldp	x1, x0, [x21, #40]
  40910c:	add	x19, x21, #0x10
  409110:	cmp	x0, x1
  409114:	b.eq	40934c <ferror@plt+0x69ac>  // b.none
  409118:	add	x0, x1, #0x1
  40911c:	mov	x19, x20
  409120:	str	x0, [x21, #40]
  409124:	strb	w24, [x1]
  409128:	mov	x20, x19
  40912c:	ldrb	w24, [x20], #1
  409130:	cbnz	w24, 409100 <ferror@plt+0x6760>
  409134:	ldp	x21, x22, [sp, #32]
  409138:	ldp	x25, x26, [sp, #64]
  40913c:	ldr	x27, [sp, #80]
  409140:	ldp	x19, x20, [sp, #16]
  409144:	ldp	x23, x24, [sp, #48]
  409148:	ldp	x29, x30, [sp], #192
  40914c:	ret
  409150:	ldrb	w1, [x19, #1]
  409154:	add	x19, x19, #0x2
  409158:	cmp	w1, #0x6c
  40915c:	b.eq	4092d4 <ferror@plt+0x6934>  // b.none
  409160:	b.hi	4091e4 <ferror@plt+0x6844>  // b.pmore
  409164:	cmp	w1, #0x53
  409168:	b.eq	409298 <ferror@plt+0x68f8>  // b.none
  40916c:	cmp	w1, #0x64
  409170:	b.ne	40937c <ferror@plt+0x69dc>  // b.any
  409174:	ldr	w1, [sp, #120]
  409178:	ldr	x0, [sp, #96]
  40917c:	tbnz	w1, #31, 409360 <ferror@plt+0x69c0>
  409180:	add	x1, x0, #0xb
  409184:	and	x1, x1, #0xfffffffffffffff8
  409188:	str	x1, [sp, #96]
  40918c:	ldr	w0, [x0]
  409190:	mov	w1, #0xa                   	// #10
  409194:	bl	408b10 <ferror@plt+0x6170>
  409198:	mov	x25, x0
  40919c:	bl	402390 <strlen@plt>
  4091a0:	sxtw	x20, w0
  4091a4:	ldp	x0, x1, [x21, #40]
  4091a8:	add	x24, x21, #0x10
  4091ac:	sub	x1, x1, x0
  4091b0:	cmp	x1, x20
  4091b4:	b.cs	4091c8 <ferror@plt+0x6828>  // b.hs, b.nlast
  4091b8:	mov	x0, x24
  4091bc:	mov	x1, x20
  4091c0:	bl	41d788 <_obstack_newchunk@@Base>
  4091c4:	ldr	x0, [x21, #40]
  4091c8:	mov	x1, x25
  4091cc:	mov	x2, x20
  4091d0:	bl	402350 <memcpy@plt>
  4091d4:	ldr	x0, [x21, #40]
  4091d8:	add	x0, x0, x20
  4091dc:	str	x0, [x21, #40]
  4091e0:	b	409128 <ferror@plt+0x6788>
  4091e4:	cmp	w1, #0x72
  4091e8:	b.eq	4092f4 <ferror@plt+0x6954>  // b.none
  4091ec:	cmp	w1, #0x73
  4091f0:	b.ne	40937c <ferror@plt+0x69dc>  // b.any
  4091f4:	ldr	w1, [sp, #120]
  4091f8:	mov	w27, #0x1                   	// #1
  4091fc:	mov	w24, #0x0                   	// #0
  409200:	ldr	x0, [sp, #96]
  409204:	tbnz	w1, #31, 4092b8 <ferror@plt+0x6918>
  409208:	add	x1, x0, #0xf
  40920c:	and	x1, x1, #0xfffffffffffffff8
  409210:	str	x1, [sp, #96]
  409214:	ldr	x25, [x0]
  409218:	add	x26, x21, #0x10
  40921c:	mov	x0, x25
  409220:	bl	402390 <strlen@plt>
  409224:	cmp	w27, #0x0
  409228:	mov	x20, x0
  40922c:	ccmp	w24, w0, #0x0, eq  // eq = none
  409230:	ldp	x0, x1, [x26, #24]
  409234:	sub	x1, x1, x0
  409238:	b.gt	409384 <ferror@plt+0x69e4>
  40923c:	cmp	x1, w24, sxtw
  409240:	sxtw	x24, w24
  409244:	b.cc	409338 <ferror@plt+0x6998>  // b.lo, b.ul, b.last
  409248:	mov	x2, x24
  40924c:	mov	x1, x25
  409250:	bl	402350 <memcpy@plt>
  409254:	add	x20, x21, #0x10
  409258:	ldp	x2, x0, [x21, #40]
  40925c:	add	x24, x2, x24
  409260:	str	x24, [x21, #40]
  409264:	sub	x0, x0, x24
  409268:	cmp	x0, #0x2
  40926c:	b.ls	409324 <ferror@plt+0x6984>  // b.plast
  409270:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409274:	add	x0, x0, #0xf10
  409278:	ldrh	w2, [x0]
  40927c:	ldrb	w0, [x0, #2]
  409280:	strh	w2, [x24]
  409284:	strb	w0, [x24, #2]
  409288:	ldr	x0, [x21, #40]
  40928c:	add	x0, x0, #0x3
  409290:	str	x0, [x21, #40]
  409294:	b	409128 <ferror@plt+0x6788>
  409298:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40929c:	ldr	w1, [sp, #120]
  4092a0:	ldr	w24, [x0, #1696]
  4092a4:	ldr	x0, [sp, #96]
  4092a8:	cmp	w24, #0x0
  4092ac:	cset	w27, eq  // eq = none
  4092b0:	tbz	w1, #31, 409208 <ferror@plt+0x6868>
  4092b4:	nop
  4092b8:	add	w2, w1, #0x8
  4092bc:	str	w2, [sp, #120]
  4092c0:	cmp	w2, #0x0
  4092c4:	b.gt	409208 <ferror@plt+0x6868>
  4092c8:	ldr	x0, [sp, #104]
  4092cc:	add	x0, x0, w1, sxtw
  4092d0:	b	409214 <ferror@plt+0x6874>
  4092d4:	ldr	w0, [x22]
  4092d8:	tbz	w0, #2, 409314 <ferror@plt+0x6974>
  4092dc:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4092e0:	ldr	x25, [x0, #3536]
  4092e4:	mov	x0, x25
  4092e8:	bl	402390 <strlen@plt>
  4092ec:	sxtw	x20, w0
  4092f0:	b	4091a4 <ferror@plt+0x6804>
  4092f4:	ldr	w0, [x22]
  4092f8:	tbz	w0, #2, 409314 <ferror@plt+0x6974>
  4092fc:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  409300:	ldr	x25, [x0, #3592]
  409304:	mov	x0, x25
  409308:	bl	402390 <strlen@plt>
  40930c:	sxtw	x20, w0
  409310:	b	4091a4 <ferror@plt+0x6804>
  409314:	mov	x25, x23
  409318:	mov	x20, #0x0                   	// #0
  40931c:	ldr	x0, [x21, #40]
  409320:	b	4091c8 <ferror@plt+0x6828>
  409324:	mov	x0, x20
  409328:	mov	x1, #0x3                   	// #3
  40932c:	bl	41d788 <_obstack_newchunk@@Base>
  409330:	ldr	x24, [x21, #40]
  409334:	b	409270 <ferror@plt+0x68d0>
  409338:	mov	x0, x26
  40933c:	mov	x1, x24
  409340:	bl	41d788 <_obstack_newchunk@@Base>
  409344:	ldr	x0, [x26, #24]
  409348:	b	409248 <ferror@plt+0x68a8>
  40934c:	mov	x1, #0x1                   	// #1
  409350:	mov	x0, x19
  409354:	bl	41d788 <_obstack_newchunk@@Base>
  409358:	ldr	x1, [x21, #40]
  40935c:	b	409118 <ferror@plt+0x6778>
  409360:	add	w2, w1, #0x8
  409364:	str	w2, [sp, #120]
  409368:	cmp	w2, #0x0
  40936c:	b.gt	409180 <ferror@plt+0x67e0>
  409370:	ldr	x0, [sp, #104]
  409374:	add	x0, x0, w1, sxtw
  409378:	b	40918c <ferror@plt+0x67ec>
  40937c:	mov	x25, x23
  409380:	mov	w20, #0x0                   	// #0
  409384:	sxtw	x20, w20
  409388:	b	4091a4 <ferror@plt+0x6804>
  40938c:	nop
  409390:	stp	x29, x30, [sp, #-48]!
  409394:	mov	x29, sp
  409398:	stp	x19, x20, [sp, #16]
  40939c:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4093a0:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  4093a4:	str	x21, [sp, #32]
  4093a8:	mov	w21, w0
  4093ac:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  4093b0:	add	x0, x0, #0xf18
  4093b4:	bl	409090 <ferror@plt+0x66f0>
  4093b8:	ldr	w1, [x20, #3528]
  4093bc:	cbz	w1, 4093cc <ferror@plt+0x6a2c>
  4093c0:	ldr	w0, [x19, #1692]
  4093c4:	tbnz	w0, #5, 409428 <ferror@plt+0x6a88>
  4093c8:	tbnz	w0, #4, 409414 <ferror@plt+0x6a74>
  4093cc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  4093d0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  4093d4:	add	x0, x0, #0xf38
  4093d8:	ldr	w1, [x1, #2536]
  4093dc:	bl	409090 <ferror@plt+0x66f0>
  4093e0:	ldr	w1, [x19, #1692]
  4093e4:	tbnz	w1, #9, 4093f8 <ferror@plt+0x6a58>
  4093e8:	ldp	x19, x20, [sp, #16]
  4093ec:	ldr	x21, [sp, #32]
  4093f0:	ldp	x29, x30, [sp], #48
  4093f4:	ret
  4093f8:	mov	w1, w21
  4093fc:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409400:	ldp	x19, x20, [sp, #16]
  409404:	add	x0, x0, #0xf40
  409408:	ldr	x21, [sp, #32]
  40940c:	ldp	x29, x30, [sp], #48
  409410:	b	409090 <ferror@plt+0x66f0>
  409414:	ldr	w1, [x20, #3528]
  409418:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  40941c:	add	x0, x0, #0xf30
  409420:	bl	409090 <ferror@plt+0x66f0>
  409424:	b	4093cc <ferror@plt+0x6a2c>
  409428:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40942c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409430:	add	x0, x0, #0xf28
  409434:	ldr	x1, [x1, #3552]
  409438:	bl	409090 <ferror@plt+0x66f0>
  40943c:	ldr	w0, [x19, #1692]
  409440:	tbz	w0, #4, 4093cc <ferror@plt+0x6a2c>
  409444:	b	409414 <ferror@plt+0x6a74>
  409448:	stp	x29, x30, [sp, #-304]!
  40944c:	mov	x29, sp
  409450:	stp	x19, x20, [sp, #16]
  409454:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  409458:	ldr	x0, [x19, #2080]
  40945c:	stp	x21, x22, [sp, #32]
  409460:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  409464:	ldr	x20, [x22, #1064]
  409468:	cbz	x0, 40948c <ferror@plt+0x6aec>
  40946c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  409470:	cmp	x20, x0
  409474:	ldr	x1, [x21, #1088]
  409478:	b.eq	40949c <ferror@plt+0x6afc>  // b.none
  40947c:	cmp	x0, x1
  409480:	b.eq	40948c <ferror@plt+0x6aec>  // b.none
  409484:	bl	4153d8 <ferror@plt+0x12a38>
  409488:	cbnz	w0, 40952c <ferror@plt+0x6b8c>
  40948c:	str	x20, [x19, #2080]
  409490:	cbz	x20, 4094f8 <ferror@plt+0x6b58>
  409494:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  409498:	ldr	x1, [x21, #1088]
  40949c:	cmp	x20, x1
  4094a0:	b.eq	4094f8 <ferror@plt+0x6b58>  // b.none
  4094a4:	add	x2, sp, #0x30
  4094a8:	mov	w1, #0x1                   	// #1
  4094ac:	mov	w0, #0x0                   	// #0
  4094b0:	bl	4028a0 <__fxstat@plt>
  4094b4:	tbnz	w0, #31, 4094f8 <ferror@plt+0x6b58>
  4094b8:	ldr	x0, [x19, #2080]
  4094bc:	bl	4024c0 <fileno@plt>
  4094c0:	mov	w1, w0
  4094c4:	add	x2, sp, #0xb0
  4094c8:	mov	w0, #0x0                   	// #0
  4094cc:	bl	4028a0 <__fxstat@plt>
  4094d0:	tbnz	w0, #31, 4094f8 <ferror@plt+0x6b58>
  4094d4:	ldr	x0, [sp, #56]
  4094d8:	ldr	x1, [sp, #184]
  4094dc:	cmp	x0, x1
  4094e0:	b.ne	4094f8 <ferror@plt+0x6b58>  // b.any
  4094e4:	cmp	x0, #0x0
  4094e8:	ldr	x1, [sp, #48]
  4094ec:	ldr	x0, [sp, #176]
  4094f0:	ccmp	x1, x0, #0x0, ne  // ne = any
  4094f4:	b.eq	409560 <ferror@plt+0x6bc0>  // b.none
  4094f8:	add	x0, x19, #0x820
  4094fc:	mov	x2, #0x0                   	// #0
  409500:	mov	x1, #0x0                   	// #0
  409504:	add	x0, x0, #0x10
  409508:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40950c:	adrp	x3, 41c000 <ferror@plt+0x19660>
  409510:	add	x4, x4, #0x7c0
  409514:	add	x3, x3, #0xa30
  409518:	bl	41d5b0 <_obstack_begin@@Base>
  40951c:	ldp	x19, x20, [sp, #16]
  409520:	ldp	x21, x22, [sp, #32]
  409524:	ldp	x29, x30, [sp], #304
  409528:	ret
  40952c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409530:	ldr	w21, [x0, #1676]
  409534:	bl	402920 <__errno_location@plt>
  409538:	mov	x1, x0
  40953c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  409540:	mov	w0, w21
  409544:	add	x2, x2, #0xef0
  409548:	ldr	w1, [x1]
  40954c:	bl	4033d0 <ferror@plt+0xa30>
  409550:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  409554:	mov	w1, #0x1                   	// #1
  409558:	str	w1, [x0, #3520]
  40955c:	b	40948c <ferror@plt+0x6aec>
  409560:	ldr	x1, [x22, #1064]
  409564:	ldr	x0, [x19, #2080]
  409568:	cmp	x0, x1
  40956c:	b.eq	409578 <ferror@plt+0x6bd8>  // b.none
  409570:	bl	4153d8 <ferror@plt+0x12a38>
  409574:	cbnz	w0, 409584 <ferror@plt+0x6be4>
  409578:	ldr	x0, [x21, #1088]
  40957c:	str	x0, [x19, #2080]
  409580:	b	4094f8 <ferror@plt+0x6b58>
  409584:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409588:	ldr	w20, [x0, #1676]
  40958c:	bl	402920 <__errno_location@plt>
  409590:	mov	x1, x0
  409594:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  409598:	mov	w0, w20
  40959c:	add	x2, x2, #0xef0
  4095a0:	ldr	w1, [x1]
  4095a4:	bl	4033d0 <ferror@plt+0xa30>
  4095a8:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4095ac:	mov	w1, #0x1                   	// #1
  4095b0:	str	w1, [x0, #3520]
  4095b4:	b	409578 <ferror@plt+0x6bd8>
  4095b8:	stp	x29, x30, [sp, #-32]!
  4095bc:	mov	x29, sp
  4095c0:	str	x19, [sp, #16]
  4095c4:	cbz	x0, 409630 <ferror@plt+0x6c90>
  4095c8:	ldrb	w1, [x0]
  4095cc:	cbz	w1, 409630 <ferror@plt+0x6c90>
  4095d0:	mov	w19, #0x0                   	// #0
  4095d4:	b	409600 <ferror@plt+0x6c60>
  4095d8:	cmp	w1, #0x63
  4095dc:	b.eq	409724 <ferror@plt+0x6d84>  // b.none
  4095e0:	b.ls	4096cc <ferror@plt+0x6d2c>  // b.plast
  4095e4:	cmp	w1, #0x65
  4095e8:	b.eq	40971c <ferror@plt+0x6d7c>  // b.none
  4095ec:	cmp	w1, #0x66
  4095f0:	b.ne	409744 <ferror@plt+0x6da4>  // b.any
  4095f4:	orr	w19, w19, #0x20
  4095f8:	ldrb	w1, [x0, #1]!
  4095fc:	cbz	w1, 409634 <ferror@plt+0x6c94>
  409600:	cmp	w1, #0x69
  409604:	b.eq	409714 <ferror@plt+0x6d74>  // b.none
  409608:	b.ls	4095d8 <ferror@plt+0x6c38>  // b.plast
  40960c:	cmp	w1, #0x71
  409610:	b.eq	409734 <ferror@plt+0x6d94>  // b.none
  409614:	b.ls	4096e4 <ferror@plt+0x6d44>  // b.plast
  409618:	cmp	w1, #0x74
  40961c:	b.eq	40972c <ferror@plt+0x6d8c>  // b.none
  409620:	cmp	w1, #0x78
  409624:	b.ne	409744 <ferror@plt+0x6da4>  // b.any
  409628:	orr	w19, w19, #0x200
  40962c:	b	4095f8 <ferror@plt+0x6c58>
  409630:	mov	w19, #0x7                   	// #7
  409634:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409638:	add	x0, x0, #0x820
  40963c:	ldp	x1, x4, [x0, #32]
  409640:	cmp	x4, x1
  409644:	b.eq	409704 <ferror@plt+0x6d64>  // b.none
  409648:	ldr	x2, [x0, #64]
  40964c:	ldr	x6, [x0, #24]
  409650:	add	x4, x4, x2
  409654:	ldr	x5, [x0, #48]
  409658:	bic	x2, x4, x2
  40965c:	str	x2, [x0, #40]
  409660:	sub	x7, x2, x6
  409664:	sub	x4, x5, x6
  409668:	cmp	x7, x4
  40966c:	b.hi	409698 <ferror@plt+0x6cf8>  // b.pmore
  409670:	str	x2, [x0, #32]
  409674:	cmp	x6, x1
  409678:	add	x0, x0, #0x10
  40967c:	ccmp	x5, x1, #0x0, cc  // cc = lo, ul, last
  409680:	b.hi	4096b4 <ferror@plt+0x6d14>  // b.pmore
  409684:	bl	41d910 <_obstack_free@@Base>
  409688:	mov	w0, w19
  40968c:	ldr	x19, [sp, #16]
  409690:	ldp	x29, x30, [sp], #32
  409694:	ret
  409698:	add	x0, x0, #0x10
  40969c:	str	x5, [x0, #24]
  4096a0:	mov	x2, x5
  4096a4:	cmp	x6, x1
  4096a8:	ccmp	x5, x1, #0x0, cc  // cc = lo, ul, last
  4096ac:	str	x2, [x0, #16]
  4096b0:	b.ls	409684 <ferror@plt+0x6ce4>  // b.plast
  4096b4:	dup	v0.2d, x1
  4096b8:	str	q0, [x0, #16]
  4096bc:	mov	w0, w19
  4096c0:	ldr	x19, [sp, #16]
  4096c4:	ldp	x29, x30, [sp], #32
  4096c8:	ret
  4096cc:	cmp	w1, #0x56
  4096d0:	b.eq	4096fc <ferror@plt+0x6d5c>  // b.none
  4096d4:	cmp	w1, #0x61
  4096d8:	b.ne	409744 <ferror@plt+0x6da4>  // b.any
  4096dc:	orr	w19, w19, #0x1
  4096e0:	b	4095f8 <ferror@plt+0x6c58>
  4096e4:	cmp	w1, #0x6c
  4096e8:	b.eq	40973c <ferror@plt+0x6d9c>  // b.none
  4096ec:	cmp	w1, #0x70
  4096f0:	b.ne	409744 <ferror@plt+0x6da4>  // b.any
  4096f4:	orr	w19, w19, #0x40
  4096f8:	b	4095f8 <ferror@plt+0x6c58>
  4096fc:	mov	w19, #0x3ff                 	// #1023
  409700:	b	4095f8 <ferror@plt+0x6c58>
  409704:	ldrb	w3, [x0, #96]
  409708:	orr	w3, w3, #0x2
  40970c:	strb	w3, [x0, #96]
  409710:	b	409648 <ferror@plt+0x6ca8>
  409714:	orr	w19, w19, #0x100
  409718:	b	4095f8 <ferror@plt+0x6c58>
  40971c:	orr	w19, w19, #0x2
  409720:	b	4095f8 <ferror@plt+0x6c58>
  409724:	orr	w19, w19, #0x80
  409728:	b	4095f8 <ferror@plt+0x6c58>
  40972c:	orr	w19, w19, #0x8
  409730:	b	4095f8 <ferror@plt+0x6c58>
  409734:	orr	w19, w19, #0x4
  409738:	b	4095f8 <ferror@plt+0x6c58>
  40973c:	orr	w19, w19, #0x10
  409740:	b	4095f8 <ferror@plt+0x6c58>
  409744:	mov	w19, #0xffffffff            	// #-1
  409748:	b	409688 <ferror@plt+0x6ce8>
  40974c:	nop
  409750:	stp	x29, x30, [sp, #-32]!
  409754:	mov	x29, sp
  409758:	stp	x19, x20, [sp, #16]
  40975c:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  409760:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  409764:	ldr	x0, [x19, #1088]
  409768:	bl	41d3d8 <ferror@plt+0x1aa38>
  40976c:	ldr	x0, [x20, #1064]
  409770:	bl	41d3d8 <ferror@plt+0x1aa38>
  409774:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409778:	ldr	x0, [x0, #2080]
  40977c:	cbz	x0, 40979c <ferror@plt+0x6dfc>
  409780:	ldr	x1, [x19, #1088]
  409784:	cmp	x0, x1
  409788:	b.eq	40979c <ferror@plt+0x6dfc>  // b.none
  40978c:	ldr	x1, [x20, #1064]
  409790:	cmp	x0, x1
  409794:	b.eq	40979c <ferror@plt+0x6dfc>  // b.none
  409798:	bl	41d3d8 <ferror@plt+0x1aa38>
  40979c:	mov	w2, #0x1                   	// #1
  4097a0:	mov	x1, #0x0                   	// #0
  4097a4:	mov	w0, #0x0                   	// #0
  4097a8:	bl	4024a0 <lseek@plt>
  4097ac:	tbz	x0, #63, 4097bc <ferror@plt+0x6e1c>
  4097b0:	ldp	x19, x20, [sp, #16]
  4097b4:	ldp	x29, x30, [sp], #32
  4097b8:	ret
  4097bc:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  4097c0:	ldr	x0, [x19, #1096]
  4097c4:	bl	41d3d8 <ferror@plt+0x1aa38>
  4097c8:	cbnz	w0, 4097b0 <ferror@plt+0x6e10>
  4097cc:	ldr	x0, [x19, #1096]
  4097d0:	mov	w2, #0x1                   	// #1
  4097d4:	ldp	x19, x20, [sp, #16]
  4097d8:	mov	x1, #0x0                   	// #0
  4097dc:	ldp	x29, x30, [sp], #32
  4097e0:	b	41d470 <ferror@plt+0x1aad0>
  4097e4:	nop
  4097e8:	stp	x29, x30, [sp, #-32]!
  4097ec:	mov	x29, sp
  4097f0:	cbz	x0, 4098b8 <ferror@plt+0x6f18>
  4097f4:	stp	x19, x20, [sp, #16]
  4097f8:	ldrb	w1, [x0]
  4097fc:	cbnz	w1, 40984c <ferror@plt+0x6eac>
  409800:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  409804:	ldr	x0, [x19, #2080]
  409808:	cbz	x0, 409834 <ferror@plt+0x6e94>
  40980c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  409810:	ldr	x1, [x1, #1064]
  409814:	cmp	x0, x1
  409818:	b.eq	409834 <ferror@plt+0x6e94>  // b.none
  40981c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  409820:	ldr	x1, [x1, #1088]
  409824:	cmp	x0, x1
  409828:	b.eq	409834 <ferror@plt+0x6e94>  // b.none
  40982c:	bl	4153d8 <ferror@plt+0x12a38>
  409830:	cbnz	w0, 4098e4 <ferror@plt+0x6f44>
  409834:	str	xzr, [x19, #2080]
  409838:	mov	w1, #0x1                   	// #1
  40983c:	mov	w0, w1
  409840:	ldp	x19, x20, [sp, #16]
  409844:	ldp	x29, x30, [sp], #32
  409848:	ret
  40984c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  409850:	add	x1, x1, #0xf48
  409854:	bl	415ef0 <ferror@plt+0x13550>
  409858:	mov	x19, x0
  40985c:	mov	w1, #0x0                   	// #0
  409860:	cbz	x0, 4098d4 <ferror@plt+0x6f34>
  409864:	bl	4024c0 <fileno@plt>
  409868:	mov	w1, #0x1                   	// #1
  40986c:	bl	415358 <ferror@plt+0x129b8>
  409870:	cbnz	w0, 409890 <ferror@plt+0x6ef0>
  409874:	mov	x0, x19
  409878:	bl	408e30 <ferror@plt+0x6490>
  40987c:	mov	w1, #0x1                   	// #1
  409880:	mov	w0, w1
  409884:	ldp	x19, x20, [sp, #16]
  409888:	ldp	x29, x30, [sp], #32
  40988c:	ret
  409890:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409894:	ldr	w20, [x0, #1676]
  409898:	bl	402920 <__errno_location@plt>
  40989c:	mov	x1, x0
  4098a0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4098a4:	mov	w0, w20
  4098a8:	add	x2, x2, #0xf50
  4098ac:	ldr	w1, [x1]
  4098b0:	bl	4033d0 <ferror@plt+0xa30>
  4098b4:	b	409874 <ferror@plt+0x6ed4>
  4098b8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4098bc:	ldr	x0, [x0, #1064]
  4098c0:	bl	408e30 <ferror@plt+0x6490>
  4098c4:	mov	w1, #0x1                   	// #1
  4098c8:	mov	w0, w1
  4098cc:	ldp	x29, x30, [sp], #32
  4098d0:	ret
  4098d4:	mov	w0, w1
  4098d8:	ldp	x19, x20, [sp, #16]
  4098dc:	ldp	x29, x30, [sp], #32
  4098e0:	ret
  4098e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4098e8:	ldr	w20, [x0, #1676]
  4098ec:	bl	402920 <__errno_location@plt>
  4098f0:	mov	x1, x0
  4098f4:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  4098f8:	mov	w0, w20
  4098fc:	add	x2, x2, #0xef0
  409900:	ldr	w1, [x1]
  409904:	bl	4033d0 <ferror@plt+0xa30>
  409908:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40990c:	mov	w1, #0x1                   	// #1
  409910:	str	w1, [x0, #3520]
  409914:	b	409834 <ferror@plt+0x6e94>
  409918:	stp	x29, x30, [sp, #-48]!
  40991c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  409920:	add	x1, x1, #0xf80
  409924:	mov	x29, sp
  409928:	stp	x19, x20, [sp, #16]
  40992c:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  409930:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  409934:	ldr	x0, [x19, #2080]
  409938:	bl	41cdb0 <ferror@plt+0x1a410>
  40993c:	ldr	w0, [x20, #3528]
  409940:	cbnz	w0, 409958 <ferror@plt+0x6fb8>
  409944:	ldr	x1, [x19, #2080]
  409948:	mov	w0, #0x20                  	// #32
  40994c:	ldp	x19, x20, [sp, #16]
  409950:	ldp	x29, x30, [sp], #48
  409954:	b	402430 <putc@plt>
  409958:	str	x21, [sp, #32]
  40995c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  409960:	ldr	x1, [x19, #2080]
  409964:	ldr	w0, [x21, #1692]
  409968:	tbnz	w0, #5, 4099b0 <ferror@plt+0x7010>
  40996c:	tbnz	w0, #4, 409984 <ferror@plt+0x6fe4>
  409970:	ldp	x19, x20, [sp, #16]
  409974:	mov	w0, #0x20                  	// #32
  409978:	ldr	x21, [sp, #32]
  40997c:	ldp	x29, x30, [sp], #48
  409980:	b	402430 <putc@plt>
  409984:	ldr	w2, [x20, #3528]
  409988:	mov	x0, x1
  40998c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  409990:	add	x1, x1, #0xf30
  409994:	bl	41cdb0 <ferror@plt+0x1a410>
  409998:	ldr	x1, [x19, #2080]
  40999c:	mov	w0, #0x20                  	// #32
  4099a0:	ldp	x19, x20, [sp, #16]
  4099a4:	ldr	x21, [sp, #32]
  4099a8:	ldp	x29, x30, [sp], #48
  4099ac:	b	402430 <putc@plt>
  4099b0:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4099b4:	mov	x0, x1
  4099b8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  4099bc:	add	x1, x1, #0xf28
  4099c0:	ldr	x2, [x2, #3552]
  4099c4:	bl	41cdb0 <ferror@plt+0x1a410>
  4099c8:	ldr	w0, [x21, #1692]
  4099cc:	ldr	x1, [x19, #2080]
  4099d0:	tbz	w0, #4, 409970 <ferror@plt+0x6fd0>
  4099d4:	b	409984 <ferror@plt+0x6fe4>
  4099d8:	stp	x29, x30, [sp, #-48]!
  4099dc:	mov	x29, sp
  4099e0:	stp	x21, x22, [sp, #32]
  4099e4:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4099e8:	mov	w22, w1
  4099ec:	stp	x19, x20, [sp, #16]
  4099f0:	mov	x19, x0
  4099f4:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  4099f8:	add	x0, x0, #0xf18
  4099fc:	bl	409090 <ferror@plt+0x66f0>
  409a00:	ldr	w0, [x21, #3528]
  409a04:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  409a08:	cbz	w0, 409a18 <ferror@plt+0x7078>
  409a0c:	ldr	w0, [x20, #1692]
  409a10:	tbnz	w0, #5, 409a98 <ferror@plt+0x70f8>
  409a14:	tbnz	w0, #4, 409a84 <ferror@plt+0x70e4>
  409a18:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x1a640>
  409a1c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409a20:	add	x0, x0, #0xf38
  409a24:	ldr	w1, [x2, #2536]
  409a28:	bl	409090 <ferror@plt+0x66f0>
  409a2c:	ldr	w0, [x20, #1692]
  409a30:	tbnz	w0, #9, 409a54 <ferror@plt+0x70b4>
  409a34:	mov	x1, x19
  409a38:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409a3c:	add	x0, x0, #0xf90
  409a40:	bl	409090 <ferror@plt+0x66f0>
  409a44:	ldp	x19, x20, [sp, #16]
  409a48:	ldp	x21, x22, [sp, #32]
  409a4c:	ldp	x29, x30, [sp], #48
  409a50:	b	408f98 <ferror@plt+0x65f8>
  409a54:	mov	w1, w22
  409a58:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409a5c:	add	x0, x0, #0xf40
  409a60:	bl	409090 <ferror@plt+0x66f0>
  409a64:	mov	x1, x19
  409a68:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409a6c:	add	x0, x0, #0xf90
  409a70:	bl	409090 <ferror@plt+0x66f0>
  409a74:	ldp	x19, x20, [sp, #16]
  409a78:	ldp	x21, x22, [sp, #32]
  409a7c:	ldp	x29, x30, [sp], #48
  409a80:	b	408f98 <ferror@plt+0x65f8>
  409a84:	ldr	w1, [x21, #3528]
  409a88:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409a8c:	add	x0, x0, #0xf30
  409a90:	bl	409090 <ferror@plt+0x66f0>
  409a94:	b	409a18 <ferror@plt+0x7078>
  409a98:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  409a9c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409aa0:	add	x0, x0, #0xf28
  409aa4:	ldr	x1, [x1, #3552]
  409aa8:	bl	409090 <ferror@plt+0x66f0>
  409aac:	ldr	w0, [x20, #1692]
  409ab0:	tbz	w0, #4, 409a18 <ferror@plt+0x7078>
  409ab4:	b	409a84 <ferror@plt+0x70e4>
  409ab8:	stp	x29, x30, [sp, #-64]!
  409abc:	mov	x29, sp
  409ac0:	stp	x19, x20, [sp, #16]
  409ac4:	mov	w20, w2
  409ac8:	mov	x19, x3
  409acc:	stp	x21, x22, [sp, #32]
  409ad0:	mov	x21, x0
  409ad4:	mov	w0, w1
  409ad8:	bl	409390 <ferror@plt+0x69f0>
  409adc:	mov	x1, x21
  409ae0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  409ae4:	add	x0, x0, #0x150
  409ae8:	bl	409090 <ferror@plt+0x66f0>
  409aec:	cmp	w20, #0x1
  409af0:	b.le	409b14 <ferror@plt+0x7174>
  409af4:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  409af8:	ldr	w0, [x22, #1692]
  409afc:	tbnz	w0, #0, 409b3c <ferror@plt+0x719c>
  409b00:	tbnz	w0, #7, 409b20 <ferror@plt+0x7180>
  409b04:	ldp	x19, x20, [sp, #16]
  409b08:	ldp	x21, x22, [sp, #32]
  409b0c:	ldp	x29, x30, [sp], #64
  409b10:	ret
  409b14:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409b18:	ldr	w0, [x0, #1692]
  409b1c:	tbz	w0, #7, 409b04 <ferror@plt+0x7164>
  409b20:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  409b24:	add	x0, x0, #0x38
  409b28:	bl	409090 <ferror@plt+0x66f0>
  409b2c:	ldp	x19, x20, [sp, #16]
  409b30:	ldp	x21, x22, [sp, #32]
  409b34:	ldp	x29, x30, [sp], #64
  409b38:	b	408f98 <ferror@plt+0x65f8>
  409b3c:	sub	w20, w20, #0x2
  409b40:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  409b44:	adrp	x21, 41f000 <_obstack_memory_used@@Base+0x1640>
  409b48:	add	x0, x0, #0xf98
  409b4c:	add	x20, x19, w20, uxtw #3
  409b50:	stp	x23, x24, [sp, #48]
  409b54:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0x1640>
  409b58:	adrp	x23, 41f000 <_obstack_memory_used@@Base+0x1640>
  409b5c:	add	x24, x24, #0xfa8
  409b60:	add	x23, x23, #0xff8
  409b64:	bl	409090 <ferror@plt+0x66f0>
  409b68:	b	409b8c <ferror@plt+0x71ec>
  409b6c:	ldr	x1, [x1, #8]
  409b70:	mov	x0, x24
  409b74:	bl	409090 <ferror@plt+0x66f0>
  409b78:	cmp	x19, x20
  409b7c:	b.eq	409bc4 <ferror@plt+0x7224>  // b.none
  409b80:	add	x19, x19, #0x8
  409b84:	add	x0, x21, #0xfa0
  409b88:	bl	409090 <ferror@plt+0x66f0>
  409b8c:	ldr	x1, [x19, #8]
  409b90:	ldr	w0, [x1]
  409b94:	cmp	w0, #0x1
  409b98:	b.eq	409b6c <ferror@plt+0x71cc>  // b.none
  409b9c:	cmp	w0, #0x2
  409ba0:	b.ne	409bdc <ferror@plt+0x723c>  // b.any
  409ba4:	ldr	x0, [x1, #8]
  409ba8:	bl	408220 <ferror@plt+0x5880>
  409bac:	cbz	x0, 409bf8 <ferror@plt+0x7258>
  409bb0:	ldr	x1, [x0]
  409bb4:	mov	x0, x23
  409bb8:	bl	409090 <ferror@plt+0x66f0>
  409bbc:	cmp	x19, x20
  409bc0:	b.ne	409b80 <ferror@plt+0x71e0>  // b.any
  409bc4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  409bc8:	add	x0, x0, #0x8a8
  409bcc:	bl	409090 <ferror@plt+0x66f0>
  409bd0:	ldr	w0, [x22, #1692]
  409bd4:	ldp	x23, x24, [sp, #48]
  409bd8:	b	409b00 <ferror@plt+0x7160>
  409bdc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409be0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  409be4:	add	x2, x2, #0x0
  409be8:	mov	w1, #0x0                   	// #0
  409bec:	ldr	w0, [x0, #1676]
  409bf0:	bl	4033d0 <ferror@plt+0xa30>
  409bf4:	bl	4026d0 <abort@plt>
  409bf8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  409bfc:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0x1640>
  409c00:	add	x2, x2, #0xfb0
  409c04:	mov	w1, #0x0                   	// #0
  409c08:	ldr	w0, [x0, #1676]
  409c0c:	bl	4033d0 <ferror@plt+0xa30>
  409c10:	bl	4026d0 <abort@plt>
  409c14:	nop
  409c18:	stp	x29, x30, [sp, #-48]!
  409c1c:	mov	x29, sp
  409c20:	stp	x21, x22, [sp, #32]
  409c24:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  409c28:	ldr	w4, [x22, #1692]
  409c2c:	stp	x19, x20, [sp, #16]
  409c30:	mov	x19, x3
  409c34:	tbnz	w4, #7, 409c54 <ferror@plt+0x72b4>
  409c38:	cbz	x19, 409c44 <ferror@plt+0x72a4>
  409c3c:	ldr	w0, [x22, #1692]
  409c40:	tbnz	w0, #1, 409c90 <ferror@plt+0x72f0>
  409c44:	ldp	x19, x20, [sp, #16]
  409c48:	ldp	x21, x22, [sp, #32]
  409c4c:	ldp	x29, x30, [sp], #48
  409c50:	b	408f98 <ferror@plt+0x65f8>
  409c54:	mov	w21, w2
  409c58:	mov	x20, x0
  409c5c:	mov	w0, w1
  409c60:	bl	409390 <ferror@plt+0x69f0>
  409c64:	cmp	w21, #0x1
  409c68:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  409c6c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  409c70:	add	x0, x0, #0xe8
  409c74:	add	x2, x2, #0x40
  409c78:	mov	x1, x20
  409c7c:	csel	x2, x2, x0, gt
  409c80:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  409c84:	add	x0, x0, #0x48
  409c88:	bl	409090 <ferror@plt+0x66f0>
  409c8c:	b	409c38 <ferror@plt+0x7298>
  409c90:	mov	x1, x19
  409c94:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  409c98:	add	x0, x0, #0x50
  409c9c:	bl	409090 <ferror@plt+0x66f0>
  409ca0:	ldp	x19, x20, [sp, #16]
  409ca4:	ldp	x21, x22, [sp, #32]
  409ca8:	ldp	x29, x30, [sp], #48
  409cac:	b	408f98 <ferror@plt+0x65f8>
  409cb0:	stp	x29, x30, [sp, #-32]!
  409cb4:	mov	x29, sp
  409cb8:	str	x19, [sp, #16]
  409cbc:	mov	x19, x0
  409cc0:	bl	402770 <__ctype_b_loc@plt>
  409cc4:	adrp	x6, 438000 <_obstack_memory_used@@Base+0x1a640>
  409cc8:	ldr	x5, [x0]
  409ccc:	ldr	x2, [x6, #2184]
  409cd0:	ldrb	w1, [x2]
  409cd4:	ubfiz	x0, x1, #1, #8
  409cd8:	ldrh	w4, [x5, x0]
  409cdc:	tbz	w4, #13, 409f54 <ferror@plt+0x75b4>
  409ce0:	add	x3, x2, #0x1
  409ce4:	nop
  409ce8:	ldrb	w1, [x3]
  409cec:	mov	x2, x3
  409cf0:	add	x3, x3, #0x1
  409cf4:	ubfiz	x4, x1, #1, #8
  409cf8:	ldrh	w4, [x5, x4]
  409cfc:	tbnz	w4, #13, 409ce8 <ferror@plt+0x7348>
  409d00:	mov	x7, x2
  409d04:	str	x2, [x6, #2184]
  409d08:	add	x3, x6, #0x888
  409d0c:	mov	w0, #0x1b                  	// #27
  409d10:	str	x2, [x3, #8]
  409d14:	cbz	w1, 409de0 <ferror@plt+0x7440>
  409d18:	tbz	w4, #11, 409dec <ferror@plt+0x744c>
  409d1c:	cmp	w1, #0x30
  409d20:	b.ne	409f4c <ferror@plt+0x75ac>  // b.any
  409d24:	ldrb	w1, [x7, #1]
  409d28:	add	x2, x2, #0x1
  409d2c:	str	x2, [x6, #2184]
  409d30:	sub	w1, w1, #0x42
  409d34:	and	w3, w1, #0xff
  409d38:	cmp	w3, #0x36
  409d3c:	b.hi	409ff8 <ferror@plt+0x7658>  // b.pmore
  409d40:	mov	x1, #0x1                   	// #1
  409d44:	lsl	x1, x1, x3
  409d48:	tst	x1, #0x1000000010000
  409d4c:	b.ne	409f7c <ferror@plt+0x75dc>  // b.any
  409d50:	tst	x1, #0x100000001
  409d54:	b.ne	409f6c <ferror@plt+0x75cc>  // b.any
  409d58:	tst	x1, #0x40000000400000
  409d5c:	mov	w1, #0x8                   	// #8
  409d60:	b.ne	409f5c <ferror@plt+0x75bc>  // b.any
  409d64:	str	wzr, [x19]
  409d68:	ldrb	w3, [x2]
  409d6c:	cbz	w3, 409ddc <ferror@plt+0x743c>
  409d70:	mov	w4, #0x0                   	// #0
  409d74:	b	409da4 <ferror@plt+0x7404>
  409d78:	sub	w3, w3, #0x30
  409d7c:	cmp	w1, #0x1
  409d80:	b.eq	409dc0 <ferror@plt+0x7420>  // b.none
  409d84:	cmp	w1, w3
  409d88:	b.le	409dd4 <ferror@plt+0x7434>
  409d8c:	ldr	w0, [x19]
  409d90:	madd	w3, w1, w0, w3
  409d94:	str	w3, [x19]
  409d98:	ldrb	w3, [x2, #1]!
  409d9c:	mov	w4, #0x1                   	// #1
  409da0:	cbz	w3, 40a010 <ferror@plt+0x7670>
  409da4:	ubfiz	x0, x3, #1, #8
  409da8:	ldrh	w0, [x5, x0]
  409dac:	tbnz	w0, #11, 409d78 <ferror@plt+0x73d8>
  409db0:	tbz	w0, #9, 409e78 <ferror@plt+0x74d8>
  409db4:	sub	w3, w3, #0x57
  409db8:	cmp	w1, #0x1
  409dbc:	b.ne	409d84 <ferror@plt+0x73e4>  // b.any
  409dc0:	cmp	w3, #0x1
  409dc4:	b.eq	409f3c <ferror@plt+0x759c>  // b.none
  409dc8:	cbnz	w3, 409dd4 <ferror@plt+0x7434>
  409dcc:	ldr	w0, [x19]
  409dd0:	cbz	w0, 409d98 <ferror@plt+0x73f8>
  409dd4:	cbz	w4, 409ddc <ferror@plt+0x743c>
  409dd8:	str	x2, [x6, #2184]
  409ddc:	mov	w0, #0x1a                  	// #26
  409de0:	ldr	x19, [sp, #16]
  409de4:	ldp	x29, x30, [sp], #32
  409de8:	ret
  409dec:	add	x0, x2, #0x1
  409df0:	str	x0, [x6, #2184]
  409df4:	cmp	w1, #0x2d
  409df8:	b.eq	40a0d0 <ferror@plt+0x7730>  // b.none
  409dfc:	b.hi	409e3c <ferror@plt+0x749c>  // b.pmore
  409e00:	cmp	w1, #0x28
  409e04:	b.eq	409ff0 <ferror@plt+0x7650>  // b.none
  409e08:	b.ls	409ecc <ferror@plt+0x752c>  // b.plast
  409e0c:	cmp	w1, #0x2a
  409e10:	b.eq	40a01c <ferror@plt+0x767c>  // b.none
  409e14:	cmp	w1, #0x2b
  409e18:	b.ne	409eb4 <ferror@plt+0x7514>  // b.any
  409e1c:	ldrb	w0, [x2, #1]
  409e20:	mov	w1, #0x3d                  	// #61
  409e24:	cmp	w0, #0x2b
  409e28:	ccmp	w0, w1, #0x4, ne  // ne = any
  409e2c:	mov	w0, #0x2                   	// #2
  409e30:	b.ne	409de0 <ferror@plt+0x7440>  // b.any
  409e34:	mov	w0, #0x1                   	// #1
  409e38:	b	409de0 <ferror@plt+0x7440>
  409e3c:	cmp	w1, #0x3e
  409e40:	b.eq	40a038 <ferror@plt+0x7698>  // b.none
  409e44:	b.ls	409e84 <ferror@plt+0x74e4>  // b.plast
  409e48:	cmp	w1, #0x7c
  409e4c:	b.eq	40a06c <ferror@plt+0x76cc>  // b.none
  409e50:	cmp	w1, #0x7e
  409e54:	mov	w0, #0x14                  	// #20
  409e58:	b.eq	409de0 <ferror@plt+0x7440>  // b.none
  409e5c:	cmp	w1, #0x5e
  409e60:	b.ne	409fe8 <ferror@plt+0x7648>  // b.any
  409e64:	ldrb	w0, [x2, #1]
  409e68:	cmp	w0, #0x3d
  409e6c:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  409e70:	mov	w0, #0x17                  	// #23
  409e74:	b	409de0 <ferror@plt+0x7440>
  409e78:	tbz	w0, #8, 409dd4 <ferror@plt+0x7434>
  409e7c:	sub	w3, w3, #0x37
  409e80:	b	409d7c <ferror@plt+0x73dc>
  409e84:	cmp	w1, #0x3c
  409e88:	b.eq	40a088 <ferror@plt+0x76e8>  // b.none
  409e8c:	cmp	w1, #0x3d
  409e90:	b.ne	409ef8 <ferror@plt+0x7558>  // b.any
  409e94:	ldrb	w1, [x2, #1]
  409e98:	mov	w0, #0x8                   	// #8
  409e9c:	cmp	w1, #0x3d
  409ea0:	b.ne	409de0 <ferror@plt+0x7440>  // b.any
  409ea4:	add	x2, x2, #0x2
  409ea8:	mov	w0, #0x9                   	// #9
  409eac:	str	x2, [x6, #2184]
  409eb0:	b	409de0 <ferror@plt+0x7440>
  409eb4:	cmp	w1, #0x29
  409eb8:	mov	w0, #0x19                  	// #25
  409ebc:	csel	w0, wzr, w0, ne  // ne = any
  409ec0:	ldr	x19, [sp, #16]
  409ec4:	ldp	x29, x30, [sp], #32
  409ec8:	ret
  409ecc:	cmp	w1, #0x25
  409ed0:	b.eq	40a0bc <ferror@plt+0x771c>  // b.none
  409ed4:	cmp	w1, #0x26
  409ed8:	b.ne	409f14 <ferror@plt+0x7574>  // b.any
  409edc:	ldrb	w0, [x2, #1]
  409ee0:	cmp	w0, #0x26
  409ee4:	b.eq	40a000 <ferror@plt+0x7660>  // b.none
  409ee8:	cmp	w0, #0x3d
  409eec:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  409ef0:	mov	w0, #0x15                  	// #21
  409ef4:	b	409de0 <ferror@plt+0x7440>
  409ef8:	cmp	w1, #0x2f
  409efc:	b.ne	409fe8 <ferror@plt+0x7648>  // b.any
  409f00:	ldrb	w0, [x2, #1]
  409f04:	cmp	w0, #0x3d
  409f08:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  409f0c:	mov	w0, #0x6                   	// #6
  409f10:	b	409de0 <ferror@plt+0x7440>
  409f14:	cmp	w1, #0x21
  409f18:	b.ne	409fe8 <ferror@plt+0x7648>  // b.any
  409f1c:	ldrb	w1, [x2, #1]
  409f20:	mov	w0, #0x11                  	// #17
  409f24:	cmp	w1, #0x3d
  409f28:	b.ne	409de0 <ferror@plt+0x7440>  // b.any
  409f2c:	add	x2, x2, #0x2
  409f30:	mov	w0, #0xa                   	// #10
  409f34:	str	x2, [x6, #2184]
  409f38:	b	409de0 <ferror@plt+0x7440>
  409f3c:	ldr	w0, [x19]
  409f40:	add	w0, w0, #0x1
  409f44:	str	w0, [x19]
  409f48:	b	409d98 <ferror@plt+0x73f8>
  409f4c:	mov	w1, #0xa                   	// #10
  409f50:	b	409d64 <ferror@plt+0x73c4>
  409f54:	mov	x7, x2
  409f58:	b	409d08 <ferror@plt+0x7368>
  409f5c:	add	x2, x7, #0x2
  409f60:	mov	w1, #0x10                  	// #16
  409f64:	str	x2, [x6, #2184]
  409f68:	b	409d64 <ferror@plt+0x73c4>
  409f6c:	add	x2, x7, #0x2
  409f70:	mov	w1, #0x2                   	// #2
  409f74:	str	x2, [x6, #2184]
  409f78:	b	409d64 <ferror@plt+0x73c4>
  409f7c:	ldrb	w3, [x7, #2]
  409f80:	add	x0, x7, #0x2
  409f84:	str	x0, [x6, #2184]
  409f88:	mov	w1, #0x0                   	// #0
  409f8c:	ubfiz	x2, x3, #1, #8
  409f90:	ldrh	w2, [x5, x2]
  409f94:	tbnz	w2, #11, 409fa4 <ferror@plt+0x7604>
  409f98:	b	409fe8 <ferror@plt+0x7648>
  409f9c:	cmp	w1, #0x24
  409fa0:	b.gt	409fe4 <ferror@plt+0x7644>
  409fa4:	add	w1, w1, w1, lsl #2
  409fa8:	mov	x2, x0
  409fac:	add	w1, w3, w1, lsl #1
  409fb0:	ldrb	w3, [x0, #1]!
  409fb4:	sub	w1, w1, #0x30
  409fb8:	ubfiz	x4, x3, #1, #8
  409fbc:	ldrh	w4, [x5, x4]
  409fc0:	tbnz	w4, #11, 409f9c <ferror@plt+0x75fc>
  409fc4:	cmp	w1, #0x24
  409fc8:	mov	w4, #0x3a                  	// #58
  409fcc:	ccmp	w1, #0x0, #0x4, le
  409fd0:	ccmp	w3, w4, #0x0, ne  // ne = any
  409fd4:	b.ne	409fe4 <ferror@plt+0x7644>  // b.any
  409fd8:	add	x2, x2, #0x2
  409fdc:	str	x2, [x6, #2184]
  409fe0:	b	409d64 <ferror@plt+0x73c4>
  409fe4:	str	x0, [x6, #2184]
  409fe8:	mov	w0, #0x0                   	// #0
  409fec:	b	409de0 <ferror@plt+0x7440>
  409ff0:	mov	w0, #0x18                  	// #24
  409ff4:	b	409de0 <ferror@plt+0x7440>
  409ff8:	mov	w1, #0x8                   	// #8
  409ffc:	b	409d64 <ferror@plt+0x73c4>
  40a000:	add	x2, x2, #0x2
  40a004:	mov	w0, #0x12                  	// #18
  40a008:	str	x2, [x6, #2184]
  40a00c:	b	409de0 <ferror@plt+0x7440>
  40a010:	str	x2, [x6, #2184]
  40a014:	mov	w0, #0x1a                  	// #26
  40a018:	b	409de0 <ferror@plt+0x7440>
  40a01c:	ldrb	w0, [x2, #1]
  40a020:	cmp	w0, #0x2a
  40a024:	b.eq	40a0ec <ferror@plt+0x774c>  // b.none
  40a028:	cmp	w0, #0x3d
  40a02c:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  40a030:	mov	w0, #0x5                   	// #5
  40a034:	b	409de0 <ferror@plt+0x7440>
  40a038:	ldrb	w0, [x2, #1]
  40a03c:	cmp	w0, #0x3d
  40a040:	b.eq	40a10c <ferror@plt+0x776c>  // b.none
  40a044:	cmp	w0, #0x3e
  40a048:	mov	w0, #0xb                   	// #11
  40a04c:	b.ne	409de0 <ferror@plt+0x7440>  // b.any
  40a050:	add	x0, x2, #0x2
  40a054:	ldrb	w1, [x2, #2]
  40a058:	str	x0, [x6, #2184]
  40a05c:	mov	w0, #0x10                  	// #16
  40a060:	cmp	w1, #0x3d
  40a064:	b.ne	409de0 <ferror@plt+0x7440>  // b.any
  40a068:	b	409e34 <ferror@plt+0x7494>
  40a06c:	ldrb	w0, [x2, #1]
  40a070:	cmp	w0, #0x7c
  40a074:	b.eq	40a0fc <ferror@plt+0x775c>  // b.none
  40a078:	cmp	w0, #0x3d
  40a07c:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  40a080:	mov	w0, #0x16                  	// #22
  40a084:	b	409de0 <ferror@plt+0x7440>
  40a088:	ldrb	w0, [x2, #1]
  40a08c:	cmp	w0, #0x3d
  40a090:	b.eq	40a11c <ferror@plt+0x777c>  // b.none
  40a094:	cmp	w0, #0x3c
  40a098:	mov	w0, #0xd                   	// #13
  40a09c:	b.ne	409de0 <ferror@plt+0x7440>  // b.any
  40a0a0:	ldrb	w0, [x2, #2]
  40a0a4:	add	x1, x2, #0x2
  40a0a8:	str	x1, [x6, #2184]
  40a0ac:	cmp	w0, #0x3d
  40a0b0:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  40a0b4:	mov	w0, #0xf                   	// #15
  40a0b8:	b	409de0 <ferror@plt+0x7440>
  40a0bc:	ldrb	w0, [x2, #1]
  40a0c0:	cmp	w0, #0x3d
  40a0c4:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  40a0c8:	mov	w0, #0x7                   	// #7
  40a0cc:	b	409de0 <ferror@plt+0x7440>
  40a0d0:	ldrb	w0, [x2, #1]
  40a0d4:	and	w0, w0, #0xffffffef
  40a0d8:	and	w0, w0, #0xff
  40a0dc:	cmp	w0, #0x2d
  40a0e0:	b.eq	409e34 <ferror@plt+0x7494>  // b.none
  40a0e4:	mov	w0, #0x3                   	// #3
  40a0e8:	b	409de0 <ferror@plt+0x7440>
  40a0ec:	add	x2, x2, #0x2
  40a0f0:	mov	w0, #0x4                   	// #4
  40a0f4:	str	x2, [x6, #2184]
  40a0f8:	b	409de0 <ferror@plt+0x7440>
  40a0fc:	add	x2, x2, #0x2
  40a100:	mov	w0, #0x13                  	// #19
  40a104:	str	x2, [x6, #2184]
  40a108:	b	409de0 <ferror@plt+0x7440>
  40a10c:	add	x2, x2, #0x2
  40a110:	mov	w0, #0xc                   	// #12
  40a114:	str	x2, [x6, #2184]
  40a118:	b	409de0 <ferror@plt+0x7440>
  40a11c:	add	x2, x2, #0x2
  40a120:	mov	w0, #0xe                   	// #14
  40a124:	str	x2, [x6, #2184]
  40a128:	b	409de0 <ferror@plt+0x7440>
  40a12c:	nop
  40a130:	stp	x29, x30, [sp, #-48]!
  40a134:	mov	x29, sp
  40a138:	stp	x19, x20, [sp, #16]
  40a13c:	mov	x19, x0
  40a140:	mov	w20, #0xffffffff            	// #-1
  40a144:	add	x0, sp, #0x2c
  40a148:	bl	409cb0 <ferror@plt+0x7310>
  40a14c:	cmp	w0, #0x4
  40a150:	b.ne	40a270 <ferror@plt+0x78d0>  // b.any
  40a154:	nop
  40a158:	add	x0, sp, #0x2c
  40a15c:	bl	409cb0 <ferror@plt+0x7310>
  40a160:	cbz	w0, 40a2a8 <ferror@plt+0x7908>
  40a164:	add	x1, sp, #0x2c
  40a168:	bl	40a698 <ferror@plt+0x7cf8>
  40a16c:	cbnz	w0, 40a288 <ferror@plt+0x78e8>
  40a170:	add	x0, sp, #0x2c
  40a174:	bl	40a130 <ferror@plt+0x7790>
  40a178:	cbnz	w0, 40a288 <ferror@plt+0x78e8>
  40a17c:	ldr	w1, [sp, #44]
  40a180:	tbnz	w1, #31, 40a2b8 <ferror@plt+0x7918>
  40a184:	ldr	w3, [x19]
  40a188:	orr	w2, w1, w3
  40a18c:	cbz	w2, 40a2c8 <ferror@plt+0x7928>
  40a190:	sub	w2, w1, #0x1
  40a194:	str	w2, [sp, #44]
  40a198:	cbz	w1, 40a294 <ferror@plt+0x78f4>
  40a19c:	cmp	w2, #0x9
  40a1a0:	b.ls	40a2a0 <ferror@plt+0x7900>  // b.plast
  40a1a4:	dup	v1.4s, w3
  40a1a8:	lsr	w4, w1, #2
  40a1ac:	movi	v0.4s, #0x1
  40a1b0:	mul	v0.4s, v0.4s, v1.4s
  40a1b4:	add	w0, w0, #0x1
  40a1b8:	cmp	w0, w4
  40a1bc:	b.ne	40a1b0 <ferror@plt+0x7810>  // b.any
  40a1c0:	movi	v2.4s, #0x0
  40a1c4:	and	w0, w1, #0xfffffffc
  40a1c8:	cmp	w1, w0
  40a1cc:	sub	w2, w2, w0
  40a1d0:	ext	v1.16b, v0.16b, v2.16b, #8
  40a1d4:	mul	v0.4s, v0.4s, v1.4s
  40a1d8:	ext	v1.16b, v0.16b, v2.16b, #4
  40a1dc:	mul	v0.4s, v0.4s, v1.4s
  40a1e0:	mov	w1, v0.s[0]
  40a1e4:	b.eq	40a258 <ferror@plt+0x78b8>  // b.none
  40a1e8:	mul	w1, w1, w3
  40a1ec:	cmp	w2, #0x0
  40a1f0:	b.le	40a258 <ferror@plt+0x78b8>
  40a1f4:	mul	w1, w1, w3
  40a1f8:	cmp	w2, #0x1
  40a1fc:	b.le	40a258 <ferror@plt+0x78b8>
  40a200:	mul	w1, w1, w3
  40a204:	cmp	w2, #0x2
  40a208:	b.le	40a258 <ferror@plt+0x78b8>
  40a20c:	mul	w1, w1, w3
  40a210:	cmp	w2, #0x3
  40a214:	b.le	40a258 <ferror@plt+0x78b8>
  40a218:	mul	w1, w1, w3
  40a21c:	cmp	w2, #0x4
  40a220:	b.le	40a258 <ferror@plt+0x78b8>
  40a224:	mul	w1, w1, w3
  40a228:	cmp	w2, #0x5
  40a22c:	b.le	40a258 <ferror@plt+0x78b8>
  40a230:	mul	w1, w1, w3
  40a234:	cmp	w2, #0x6
  40a238:	b.le	40a258 <ferror@plt+0x78b8>
  40a23c:	mul	w1, w1, w3
  40a240:	cmp	w2, #0x7
  40a244:	b.le	40a258 <ferror@plt+0x78b8>
  40a248:	mul	w1, w1, w3
  40a24c:	cmp	w2, #0x8
  40a250:	mul	w3, w1, w3
  40a254:	csel	w1, w3, w1, gt
  40a258:	str	w1, [x19]
  40a25c:	str	w20, [sp, #44]
  40a260:	add	x0, sp, #0x2c
  40a264:	bl	409cb0 <ferror@plt+0x7310>
  40a268:	cmp	w0, #0x4
  40a26c:	b.eq	40a158 <ferror@plt+0x77b8>  // b.none
  40a270:	cbz	w0, 40a2a8 <ferror@plt+0x7908>
  40a274:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a278:	add	x2, x1, #0x888
  40a27c:	mov	w0, #0x0                   	// #0
  40a280:	ldr	x2, [x2, #8]
  40a284:	str	x2, [x1, #2184]
  40a288:	ldp	x19, x20, [sp, #16]
  40a28c:	ldp	x29, x30, [sp], #48
  40a290:	ret
  40a294:	mov	w1, #0x1                   	// #1
  40a298:	str	w1, [x19]
  40a29c:	b	40a260 <ferror@plt+0x78c0>
  40a2a0:	mov	w1, #0x1                   	// #1
  40a2a4:	b	40a1e8 <ferror@plt+0x7848>
  40a2a8:	mov	w0, #0x6                   	// #6
  40a2ac:	ldp	x19, x20, [sp, #16]
  40a2b0:	ldp	x29, x30, [sp], #48
  40a2b4:	ret
  40a2b8:	mov	w0, #0x3                   	// #3
  40a2bc:	ldp	x19, x20, [sp, #16]
  40a2c0:	ldp	x29, x30, [sp], #48
  40a2c4:	ret
  40a2c8:	mov	w0, #0x1                   	// #1
  40a2cc:	ldp	x19, x20, [sp, #16]
  40a2d0:	ldp	x29, x30, [sp], #48
  40a2d4:	ret
  40a2d8:	stp	x29, x30, [sp, #-64]!
  40a2dc:	mov	x29, sp
  40a2e0:	stp	x19, x20, [sp, #16]
  40a2e4:	mov	x20, x0
  40a2e8:	stp	x21, x22, [sp, #32]
  40a2ec:	adrp	x22, 420000 <_obstack_memory_used@@Base+0x2640>
  40a2f0:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a2f4:	add	x22, x22, #0x60
  40a2f8:	add	x21, x21, #0x68c
  40a2fc:	b	40a364 <ferror@plt+0x79c4>
  40a300:	add	x0, sp, #0x3c
  40a304:	bl	40a130 <ferror@plt+0x7790>
  40a308:	cbnz	w0, 40a394 <ferror@plt+0x79f4>
  40a30c:	add	x0, sp, #0x3c
  40a310:	bl	40a7b0 <ferror@plt+0x7e10>
  40a314:	cbnz	w0, 40a394 <ferror@plt+0x79f4>
  40a318:	add	x0, sp, #0x3c
  40a31c:	bl	40a8e0 <ferror@plt+0x7f40>
  40a320:	cbnz	w0, 40a394 <ferror@plt+0x79f4>
  40a324:	add	x0, sp, #0x3c
  40a328:	bl	40a9b0 <ferror@plt+0x8010>
  40a32c:	cbnz	w0, 40a394 <ferror@plt+0x79f4>
  40a330:	add	x0, sp, #0x3c
  40a334:	bl	40aab8 <ferror@plt+0x8118>
  40a338:	cbnz	w0, 40a394 <ferror@plt+0x79f4>
  40a33c:	cmp	w19, #0x8
  40a340:	b.eq	40a3a4 <ferror@plt+0x7a04>  // b.none
  40a344:	cmp	w19, #0x9
  40a348:	cset	w0, ne  // ne = any
  40a34c:	ldr	w2, [x20]
  40a350:	ldr	w1, [sp, #60]
  40a354:	cmp	w2, w1
  40a358:	cset	w1, eq  // eq = none
  40a35c:	eor	w0, w0, w1
  40a360:	str	w0, [x20]
  40a364:	add	x0, sp, #0x3c
  40a368:	bl	409cb0 <ferror@plt+0x7310>
  40a36c:	mov	w19, w0
  40a370:	sub	w0, w0, #0x8
  40a374:	cmp	w0, #0x2
  40a378:	b.hi	40a3d0 <ferror@plt+0x7a30>  // b.pmore
  40a37c:	add	x0, sp, #0x3c
  40a380:	bl	409cb0 <ferror@plt+0x7310>
  40a384:	cbz	w0, 40a3bc <ferror@plt+0x7a1c>
  40a388:	add	x1, sp, #0x3c
  40a38c:	bl	40a698 <ferror@plt+0x7cf8>
  40a390:	cbz	w0, 40a300 <ferror@plt+0x7960>
  40a394:	ldp	x19, x20, [sp, #16]
  40a398:	ldp	x21, x22, [sp, #32]
  40a39c:	ldp	x29, x30, [sp], #64
  40a3a0:	ret
  40a3a4:	ldr	w0, [x21]
  40a3a8:	mov	x2, x22
  40a3ac:	mov	w1, #0x0                   	// #0
  40a3b0:	bl	4033d0 <ferror@plt+0xa30>
  40a3b4:	mov	w0, #0x0                   	// #0
  40a3b8:	b	40a34c <ferror@plt+0x79ac>
  40a3bc:	mov	w0, #0x6                   	// #6
  40a3c0:	ldp	x19, x20, [sp, #16]
  40a3c4:	ldp	x21, x22, [sp, #32]
  40a3c8:	ldp	x29, x30, [sp], #64
  40a3cc:	ret
  40a3d0:	cbz	w19, 40a3bc <ferror@plt+0x7a1c>
  40a3d4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a3d8:	add	x2, x1, #0x888
  40a3dc:	mov	w0, #0x0                   	// #0
  40a3e0:	ldp	x19, x20, [sp, #16]
  40a3e4:	ldr	x2, [x2, #8]
  40a3e8:	str	x2, [x1, #2184]
  40a3ec:	ldp	x21, x22, [sp, #32]
  40a3f0:	ldp	x29, x30, [sp], #64
  40a3f4:	ret
  40a3f8:	stp	x29, x30, [sp, #-48]!
  40a3fc:	mov	x29, sp
  40a400:	str	x19, [sp, #16]
  40a404:	mov	x19, x0
  40a408:	b	40a47c <ferror@plt+0x7adc>
  40a40c:	add	x0, sp, #0x2c
  40a410:	bl	40a130 <ferror@plt+0x7790>
  40a414:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a418:	add	x0, sp, #0x2c
  40a41c:	bl	40a7b0 <ferror@plt+0x7e10>
  40a420:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a424:	add	x0, sp, #0x2c
  40a428:	bl	40a8e0 <ferror@plt+0x7f40>
  40a42c:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a430:	add	x0, sp, #0x2c
  40a434:	bl	40a9b0 <ferror@plt+0x8010>
  40a438:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a43c:	add	x0, sp, #0x2c
  40a440:	bl	40aab8 <ferror@plt+0x8118>
  40a444:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a448:	add	x0, sp, #0x2c
  40a44c:	bl	40a2d8 <ferror@plt+0x7938>
  40a450:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a454:	add	x0, sp, #0x2c
  40a458:	bl	40abf8 <ferror@plt+0x8258>
  40a45c:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a460:	add	x0, sp, #0x2c
  40a464:	bl	40acf8 <ferror@plt+0x8358>
  40a468:	cbnz	w0, 40a4a4 <ferror@plt+0x7b04>
  40a46c:	ldr	w0, [x19]
  40a470:	ldr	w1, [sp, #44]
  40a474:	orr	w0, w0, w1
  40a478:	str	w0, [x19]
  40a47c:	add	x0, sp, #0x2c
  40a480:	bl	409cb0 <ferror@plt+0x7310>
  40a484:	cmp	w0, #0x16
  40a488:	b.ne	40a4c0 <ferror@plt+0x7b20>  // b.any
  40a48c:	add	x0, sp, #0x2c
  40a490:	bl	409cb0 <ferror@plt+0x7310>
  40a494:	cbz	w0, 40a4b0 <ferror@plt+0x7b10>
  40a498:	add	x1, sp, #0x2c
  40a49c:	bl	40a698 <ferror@plt+0x7cf8>
  40a4a0:	cbz	w0, 40a40c <ferror@plt+0x7a6c>
  40a4a4:	ldr	x19, [sp, #16]
  40a4a8:	ldp	x29, x30, [sp], #48
  40a4ac:	ret
  40a4b0:	mov	w0, #0x6                   	// #6
  40a4b4:	ldr	x19, [sp, #16]
  40a4b8:	ldp	x29, x30, [sp], #48
  40a4bc:	ret
  40a4c0:	cbz	w0, 40a4b0 <ferror@plt+0x7b10>
  40a4c4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a4c8:	add	x2, x1, #0x888
  40a4cc:	mov	w0, #0x0                   	// #0
  40a4d0:	ldr	x19, [sp, #16]
  40a4d4:	ldr	x2, [x2, #8]
  40a4d8:	str	x2, [x1, #2184]
  40a4dc:	ldp	x29, x30, [sp], #48
  40a4e0:	ret
  40a4e4:	nop
  40a4e8:	stp	x29, x30, [sp, #-48]!
  40a4ec:	mov	x29, sp
  40a4f0:	stp	x19, x20, [sp, #16]
  40a4f4:	mov	x19, x1
  40a4f8:	bl	40a698 <ferror@plt+0x7cf8>
  40a4fc:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a500:	mov	x0, x19
  40a504:	bl	40a130 <ferror@plt+0x7790>
  40a508:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a50c:	mov	x0, x19
  40a510:	bl	40a7b0 <ferror@plt+0x7e10>
  40a514:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a518:	mov	x0, x19
  40a51c:	bl	40a8e0 <ferror@plt+0x7f40>
  40a520:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a524:	mov	x0, x19
  40a528:	bl	40a9b0 <ferror@plt+0x8010>
  40a52c:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a530:	mov	x0, x19
  40a534:	bl	40aab8 <ferror@plt+0x8118>
  40a538:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a53c:	mov	x0, x19
  40a540:	bl	40a2d8 <ferror@plt+0x7938>
  40a544:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a548:	mov	x0, x19
  40a54c:	bl	40abf8 <ferror@plt+0x8258>
  40a550:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a554:	mov	x0, x19
  40a558:	bl	40acf8 <ferror@plt+0x8358>
  40a55c:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a560:	mov	x0, x19
  40a564:	bl	40a3f8 <ferror@plt+0x7a58>
  40a568:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a56c:	mov	x0, x19
  40a570:	bl	40add8 <ferror@plt+0x8438>
  40a574:	cbnz	w0, 40a660 <ferror@plt+0x7cc0>
  40a578:	mov	w20, #0x1                   	// #1
  40a57c:	nop
  40a580:	add	x0, sp, #0x2c
  40a584:	bl	409cb0 <ferror@plt+0x7310>
  40a588:	cmp	w0, #0x13
  40a58c:	b.ne	40a648 <ferror@plt+0x7ca8>  // b.any
  40a590:	add	x0, sp, #0x2c
  40a594:	bl	409cb0 <ferror@plt+0x7310>
  40a598:	cbz	w0, 40a684 <ferror@plt+0x7ce4>
  40a59c:	add	x1, sp, #0x2c
  40a5a0:	bl	40a698 <ferror@plt+0x7cf8>
  40a5a4:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5a8:	add	x0, sp, #0x2c
  40a5ac:	bl	40a130 <ferror@plt+0x7790>
  40a5b0:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5b4:	add	x0, sp, #0x2c
  40a5b8:	bl	40a7b0 <ferror@plt+0x7e10>
  40a5bc:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5c0:	add	x0, sp, #0x2c
  40a5c4:	bl	40a8e0 <ferror@plt+0x7f40>
  40a5c8:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5cc:	add	x0, sp, #0x2c
  40a5d0:	bl	40a9b0 <ferror@plt+0x8010>
  40a5d4:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5d8:	add	x0, sp, #0x2c
  40a5dc:	bl	40aab8 <ferror@plt+0x8118>
  40a5e0:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5e4:	add	x0, sp, #0x2c
  40a5e8:	bl	40a2d8 <ferror@plt+0x7938>
  40a5ec:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5f0:	add	x0, sp, #0x2c
  40a5f4:	bl	40abf8 <ferror@plt+0x8258>
  40a5f8:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a5fc:	add	x0, sp, #0x2c
  40a600:	bl	40acf8 <ferror@plt+0x8358>
  40a604:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a608:	add	x0, sp, #0x2c
  40a60c:	bl	40a3f8 <ferror@plt+0x7a58>
  40a610:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a614:	add	x0, sp, #0x2c
  40a618:	bl	40add8 <ferror@plt+0x8438>
  40a61c:	cbnz	w0, 40a66c <ferror@plt+0x7ccc>
  40a620:	ldr	w0, [x19]
  40a624:	ldr	w1, [sp, #44]
  40a628:	orr	w0, w0, w1
  40a62c:	cmp	w0, #0x0
  40a630:	cset	w0, ne  // ne = any
  40a634:	str	w0, [x19]
  40a638:	add	x0, sp, #0x2c
  40a63c:	bl	409cb0 <ferror@plt+0x7310>
  40a640:	cmp	w0, #0x13
  40a644:	b.eq	40a590 <ferror@plt+0x7bf0>  // b.none
  40a648:	cbz	w0, 40a684 <ferror@plt+0x7ce4>
  40a64c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a650:	add	x2, x1, #0x888
  40a654:	mov	w0, #0x0                   	// #0
  40a658:	ldr	x2, [x2, #8]
  40a65c:	str	x2, [x1, #2184]
  40a660:	ldp	x19, x20, [sp, #16]
  40a664:	ldp	x29, x30, [sp], #48
  40a668:	ret
  40a66c:	ldr	w1, [x19]
  40a670:	cmp	w1, #0x0
  40a674:	ccmp	w0, #0x3, #0x2, ne  // ne = any
  40a678:	b.hi	40a660 <ferror@plt+0x7cc0>  // b.pmore
  40a67c:	str	w20, [x19]
  40a680:	b	40a580 <ferror@plt+0x7be0>
  40a684:	mov	w0, #0x6                   	// #6
  40a688:	ldp	x19, x20, [sp, #16]
  40a68c:	ldp	x29, x30, [sp], #48
  40a690:	ret
  40a694:	nop
  40a698:	stp	x29, x30, [sp, #-48]!
  40a69c:	cmp	w0, #0x14
  40a6a0:	mov	x29, sp
  40a6a4:	stp	x19, x20, [sp, #16]
  40a6a8:	mov	w19, w0
  40a6ac:	ccmp	w19, #0x11, #0x4, ne  // ne = any
  40a6b0:	sub	w0, w0, #0x2
  40a6b4:	mov	x20, x1
  40a6b8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  40a6bc:	b.hi	40a708 <ferror@plt+0x7d68>  // b.pmore
  40a6c0:	mov	x0, x1
  40a6c4:	bl	409cb0 <ferror@plt+0x7310>
  40a6c8:	mov	w2, #0x6                   	// #6
  40a6cc:	cbz	w0, 40a6f8 <ferror@plt+0x7d58>
  40a6d0:	mov	x1, x20
  40a6d4:	bl	40a698 <ferror@plt+0x7cf8>
  40a6d8:	mov	w2, w0
  40a6dc:	cbnz	w0, 40a6f8 <ferror@plt+0x7d58>
  40a6e0:	cmp	w19, #0x3
  40a6e4:	b.eq	40a73c <ferror@plt+0x7d9c>  // b.none
  40a6e8:	cmp	w19, #0x14
  40a6ec:	b.eq	40a784 <ferror@plt+0x7de4>  // b.none
  40a6f0:	cmp	w19, #0x11
  40a6f4:	b.eq	40a794 <ferror@plt+0x7df4>  // b.none
  40a6f8:	mov	w0, w2
  40a6fc:	ldp	x19, x20, [sp, #16]
  40a700:	ldp	x29, x30, [sp], #48
  40a704:	ret
  40a708:	cmp	w19, #0x18
  40a70c:	b.eq	40a74c <ferror@plt+0x7dac>  // b.none
  40a710:	cmp	w19, #0x1a
  40a714:	mov	w2, #0x0                   	// #0
  40a718:	b.eq	40a6f8 <ferror@plt+0x7d58>  // b.none
  40a71c:	cmp	w19, #0x1
  40a720:	mov	w0, #0x8                   	// #8
  40a724:	mov	w2, #0x4                   	// #4
  40a728:	csel	w2, w2, w0, ne  // ne = any
  40a72c:	mov	w0, w2
  40a730:	ldp	x19, x20, [sp, #16]
  40a734:	ldp	x29, x30, [sp], #48
  40a738:	ret
  40a73c:	ldr	w0, [x20]
  40a740:	neg	w0, w0
  40a744:	str	w0, [x20]
  40a748:	b	40a6f8 <ferror@plt+0x7d58>
  40a74c:	mov	x0, x1
  40a750:	bl	409cb0 <ferror@plt+0x7310>
  40a754:	cbz	w0, 40a7a8 <ferror@plt+0x7e08>
  40a758:	mov	x1, x20
  40a75c:	bl	40a4e8 <ferror@plt+0x7b48>
  40a760:	mov	w2, w0
  40a764:	cbnz	w0, 40a6f8 <ferror@plt+0x7d58>
  40a768:	add	x0, sp, #0x2c
  40a76c:	bl	409cb0 <ferror@plt+0x7310>
  40a770:	cbz	w0, 40a7a8 <ferror@plt+0x7e08>
  40a774:	cmp	w0, #0x19
  40a778:	mov	w2, #0x5                   	// #5
  40a77c:	csel	w2, wzr, w2, eq  // eq = none
  40a780:	b	40a6f8 <ferror@plt+0x7d58>
  40a784:	ldr	w0, [x20]
  40a788:	mvn	w0, w0
  40a78c:	str	w0, [x20]
  40a790:	b	40a6f8 <ferror@plt+0x7d58>
  40a794:	ldr	w0, [x20]
  40a798:	cmp	w0, #0x0
  40a79c:	cset	w0, eq  // eq = none
  40a7a0:	str	w0, [x20]
  40a7a4:	b	40a6f8 <ferror@plt+0x7d58>
  40a7a8:	mov	w2, #0x6                   	// #6
  40a7ac:	b	40a6f8 <ferror@plt+0x7d58>
  40a7b0:	stp	x29, x30, [sp, #-48]!
  40a7b4:	mov	x29, sp
  40a7b8:	stp	x19, x20, [sp, #16]
  40a7bc:	mov	x20, x0
  40a7c0:	add	x0, sp, #0x2c
  40a7c4:	bl	409cb0 <ferror@plt+0x7310>
  40a7c8:	sub	w1, w0, #0x5
  40a7cc:	mov	w19, w0
  40a7d0:	cmp	w1, #0x2
  40a7d4:	b.ls	40a7fc <ferror@plt+0x7e5c>  // b.plast
  40a7d8:	cbz	w0, 40a8ac <ferror@plt+0x7f0c>
  40a7dc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a7e0:	add	x2, x1, #0x888
  40a7e4:	mov	w0, #0x0                   	// #0
  40a7e8:	ldr	x2, [x2, #8]
  40a7ec:	str	x2, [x1, #2184]
  40a7f0:	ldp	x19, x20, [sp, #16]
  40a7f4:	ldp	x29, x30, [sp], #48
  40a7f8:	ret
  40a7fc:	add	x0, sp, #0x2c
  40a800:	bl	409cb0 <ferror@plt+0x7310>
  40a804:	cbz	w0, 40a8ac <ferror@plt+0x7f0c>
  40a808:	add	x1, sp, #0x2c
  40a80c:	bl	40a698 <ferror@plt+0x7cf8>
  40a810:	cbnz	w0, 40a7f0 <ferror@plt+0x7e50>
  40a814:	add	x0, sp, #0x2c
  40a818:	bl	40a130 <ferror@plt+0x7790>
  40a81c:	cbnz	w0, 40a7f0 <ferror@plt+0x7e50>
  40a820:	cmp	w19, #0x6
  40a824:	b.eq	40a878 <ferror@plt+0x7ed8>  // b.none
  40a828:	cmp	w19, #0x7
  40a82c:	b.ne	40a854 <ferror@plt+0x7eb4>  // b.any
  40a830:	ldr	w0, [sp, #44]
  40a834:	cbz	w0, 40a8d0 <ferror@plt+0x7f30>
  40a838:	cmn	w0, #0x1
  40a83c:	b.eq	40a8c8 <ferror@plt+0x7f28>  // b.none
  40a840:	ldr	w2, [x20]
  40a844:	sdiv	w1, w2, w0
  40a848:	msub	w0, w1, w0, w2
  40a84c:	str	w0, [x20]
  40a850:	b	40a7c0 <ferror@plt+0x7e20>
  40a854:	cmp	w19, #0x5
  40a858:	b.eq	40a898 <ferror@plt+0x7ef8>  // b.none
  40a85c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a860:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40a864:	add	x2, x2, #0x98
  40a868:	mov	w1, #0x0                   	// #0
  40a86c:	ldr	w0, [x0, #1676]
  40a870:	bl	4033d0 <ferror@plt+0xa30>
  40a874:	bl	4026d0 <abort@plt>
  40a878:	ldr	w1, [sp, #44]
  40a87c:	cbz	w1, 40a8d8 <ferror@plt+0x7f38>
  40a880:	ldr	w0, [x20]
  40a884:	cmn	w1, #0x1
  40a888:	b.eq	40a8bc <ferror@plt+0x7f1c>  // b.none
  40a88c:	sdiv	w0, w0, w1
  40a890:	str	w0, [x20]
  40a894:	b	40a7c0 <ferror@plt+0x7e20>
  40a898:	ldr	w0, [x20]
  40a89c:	ldr	w1, [sp, #44]
  40a8a0:	mul	w0, w0, w1
  40a8a4:	str	w0, [x20]
  40a8a8:	b	40a7c0 <ferror@plt+0x7e20>
  40a8ac:	mov	w0, #0x6                   	// #6
  40a8b0:	ldp	x19, x20, [sp, #16]
  40a8b4:	ldp	x29, x30, [sp], #48
  40a8b8:	ret
  40a8bc:	neg	w0, w0
  40a8c0:	str	w0, [x20]
  40a8c4:	b	40a7c0 <ferror@plt+0x7e20>
  40a8c8:	str	wzr, [x20]
  40a8cc:	b	40a7c0 <ferror@plt+0x7e20>
  40a8d0:	mov	w0, #0x2                   	// #2
  40a8d4:	b	40a7f0 <ferror@plt+0x7e50>
  40a8d8:	mov	w0, #0x1                   	// #1
  40a8dc:	b	40a7f0 <ferror@plt+0x7e50>
  40a8e0:	stp	x29, x30, [sp, #-48]!
  40a8e4:	mov	x29, sp
  40a8e8:	stp	x19, x20, [sp, #16]
  40a8ec:	mov	x20, x0
  40a8f0:	b	40a92c <ferror@plt+0x7f8c>
  40a8f4:	bl	40a130 <ferror@plt+0x7790>
  40a8f8:	mov	w1, w0
  40a8fc:	add	x0, sp, #0x2c
  40a900:	cbnz	w1, 40a964 <ferror@plt+0x7fc4>
  40a904:	bl	40a7b0 <ferror@plt+0x7e10>
  40a908:	mov	w1, w0
  40a90c:	cmp	w19, #0x2
  40a910:	cbnz	w0, 40a964 <ferror@plt+0x7fc4>
  40a914:	ldr	w1, [x20]
  40a918:	ldr	w0, [sp, #44]
  40a91c:	add	w2, w0, w1
  40a920:	sub	w1, w1, w0
  40a924:	csel	w1, w1, w2, ne  // ne = any
  40a928:	str	w1, [x20]
  40a92c:	add	x0, sp, #0x2c
  40a930:	bl	409cb0 <ferror@plt+0x7310>
  40a934:	mov	w19, w0
  40a938:	add	x0, sp, #0x2c
  40a93c:	sub	w1, w19, #0x2
  40a940:	cmp	w1, #0x1
  40a944:	b.hi	40a988 <ferror@plt+0x7fe8>  // b.pmore
  40a948:	bl	409cb0 <ferror@plt+0x7310>
  40a94c:	add	x1, sp, #0x2c
  40a950:	cbz	w0, 40a974 <ferror@plt+0x7fd4>
  40a954:	bl	40a698 <ferror@plt+0x7cf8>
  40a958:	mov	w1, w0
  40a95c:	add	x0, sp, #0x2c
  40a960:	cbz	w1, 40a8f4 <ferror@plt+0x7f54>
  40a964:	mov	w0, w1
  40a968:	ldp	x19, x20, [sp, #16]
  40a96c:	ldp	x29, x30, [sp], #48
  40a970:	ret
  40a974:	mov	w1, #0x6                   	// #6
  40a978:	mov	w0, w1
  40a97c:	ldp	x19, x20, [sp, #16]
  40a980:	ldp	x29, x30, [sp], #48
  40a984:	ret
  40a988:	cbz	w19, 40a974 <ferror@plt+0x7fd4>
  40a98c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40a990:	add	x2, x0, #0x888
  40a994:	mov	w1, #0x0                   	// #0
  40a998:	ldp	x19, x20, [sp, #16]
  40a99c:	ldr	x2, [x2, #8]
  40a9a0:	str	x2, [x0, #2184]
  40a9a4:	mov	w0, w1
  40a9a8:	ldp	x29, x30, [sp], #48
  40a9ac:	ret
  40a9b0:	stp	x29, x30, [sp, #-48]!
  40a9b4:	mov	x29, sp
  40a9b8:	stp	x19, x20, [sp, #16]
  40a9bc:	mov	x20, x0
  40a9c0:	add	x0, sp, #0x2c
  40a9c4:	bl	409cb0 <ferror@plt+0x7310>
  40a9c8:	mov	w19, w0
  40a9cc:	sub	w1, w19, #0xf
  40a9d0:	add	x0, sp, #0x2c
  40a9d4:	cmp	w1, #0x1
  40a9d8:	b.hi	40aa58 <ferror@plt+0x80b8>  // b.pmore
  40a9dc:	bl	409cb0 <ferror@plt+0x7310>
  40a9e0:	add	x1, sp, #0x2c
  40a9e4:	cbz	w0, 40aaa0 <ferror@plt+0x8100>
  40a9e8:	bl	40a698 <ferror@plt+0x7cf8>
  40a9ec:	mov	w1, w0
  40a9f0:	add	x0, sp, #0x2c
  40a9f4:	cbnz	w1, 40aa70 <ferror@plt+0x80d0>
  40a9f8:	bl	40a130 <ferror@plt+0x7790>
  40a9fc:	mov	w1, w0
  40aa00:	add	x0, sp, #0x2c
  40aa04:	cbnz	w1, 40aa70 <ferror@plt+0x80d0>
  40aa08:	bl	40a7b0 <ferror@plt+0x7e10>
  40aa0c:	mov	w1, w0
  40aa10:	add	x0, sp, #0x2c
  40aa14:	cbnz	w1, 40aa70 <ferror@plt+0x80d0>
  40aa18:	bl	40a8e0 <ferror@plt+0x7f40>
  40aa1c:	mov	w1, w0
  40aa20:	cbnz	w0, 40aa70 <ferror@plt+0x80d0>
  40aa24:	ldr	w0, [x20]
  40aa28:	cmp	w19, #0xf
  40aa2c:	ldr	w1, [sp, #44]
  40aa30:	b.ne	40aa80 <ferror@plt+0x80e0>  // b.any
  40aa34:	lsl	w0, w0, w1
  40aa38:	str	w0, [x20]
  40aa3c:	add	x0, sp, #0x2c
  40aa40:	bl	409cb0 <ferror@plt+0x7310>
  40aa44:	mov	w19, w0
  40aa48:	sub	w1, w19, #0xf
  40aa4c:	add	x0, sp, #0x2c
  40aa50:	cmp	w1, #0x1
  40aa54:	b.ls	40a9dc <ferror@plt+0x803c>  // b.plast
  40aa58:	cbz	w19, 40aaa0 <ferror@plt+0x8100>
  40aa5c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40aa60:	add	x2, x0, #0x888
  40aa64:	mov	w1, #0x0                   	// #0
  40aa68:	ldr	x2, [x2, #8]
  40aa6c:	str	x2, [x0, #2184]
  40aa70:	mov	w0, w1
  40aa74:	ldp	x19, x20, [sp, #16]
  40aa78:	ldp	x29, x30, [sp], #48
  40aa7c:	ret
  40aa80:	and	w2, w1, #0x1f
  40aa84:	mvn	w1, w0
  40aa88:	cmp	w0, #0x0
  40aa8c:	lsr	w1, w1, w2
  40aa90:	lsr	w0, w0, w2
  40aa94:	csinv	w1, w0, w1, ge  // ge = tcont
  40aa98:	str	w1, [x20]
  40aa9c:	b	40a9c0 <ferror@plt+0x8020>
  40aaa0:	mov	w1, #0x6                   	// #6
  40aaa4:	mov	w0, w1
  40aaa8:	ldp	x19, x20, [sp, #16]
  40aaac:	ldp	x29, x30, [sp], #48
  40aab0:	ret
  40aab4:	nop
  40aab8:	stp	x29, x30, [sp, #-48]!
  40aabc:	mov	x29, sp
  40aac0:	stp	x19, x20, [sp, #16]
  40aac4:	mov	x20, x0
  40aac8:	add	x0, sp, #0x2c
  40aacc:	bl	409cb0 <ferror@plt+0x7310>
  40aad0:	mov	w19, w0
  40aad4:	sub	w0, w0, #0xb
  40aad8:	cmp	w0, #0x3
  40aadc:	b.ls	40ab04 <ferror@plt+0x8164>  // b.plast
  40aae0:	cbz	w19, 40abcc <ferror@plt+0x822c>
  40aae4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40aae8:	add	x2, x1, #0x888
  40aaec:	mov	w0, #0x0                   	// #0
  40aaf0:	ldr	x2, [x2, #8]
  40aaf4:	str	x2, [x1, #2184]
  40aaf8:	ldp	x19, x20, [sp, #16]
  40aafc:	ldp	x29, x30, [sp], #48
  40ab00:	ret
  40ab04:	add	x0, sp, #0x2c
  40ab08:	bl	409cb0 <ferror@plt+0x7310>
  40ab0c:	cbz	w0, 40abcc <ferror@plt+0x822c>
  40ab10:	add	x1, sp, #0x2c
  40ab14:	bl	40a698 <ferror@plt+0x7cf8>
  40ab18:	cbnz	w0, 40aaf8 <ferror@plt+0x8158>
  40ab1c:	add	x0, sp, #0x2c
  40ab20:	bl	40a130 <ferror@plt+0x7790>
  40ab24:	cbnz	w0, 40aaf8 <ferror@plt+0x8158>
  40ab28:	add	x0, sp, #0x2c
  40ab2c:	bl	40a7b0 <ferror@plt+0x7e10>
  40ab30:	cbnz	w0, 40aaf8 <ferror@plt+0x8158>
  40ab34:	add	x0, sp, #0x2c
  40ab38:	bl	40a8e0 <ferror@plt+0x7f40>
  40ab3c:	cbnz	w0, 40aaf8 <ferror@plt+0x8158>
  40ab40:	add	x0, sp, #0x2c
  40ab44:	bl	40a9b0 <ferror@plt+0x8010>
  40ab48:	cbnz	w0, 40aaf8 <ferror@plt+0x8158>
  40ab4c:	cmp	w19, #0xd
  40ab50:	b.eq	40abb4 <ferror@plt+0x8214>  // b.none
  40ab54:	cmp	w19, #0xe
  40ab58:	b.eq	40ab9c <ferror@plt+0x81fc>  // b.none
  40ab5c:	cmp	w19, #0xb
  40ab60:	b.ne	40ab7c <ferror@plt+0x81dc>  // b.any
  40ab64:	ldr	w1, [x20]
  40ab68:	ldr	w0, [sp, #44]
  40ab6c:	cmp	w1, w0
  40ab70:	cset	w0, gt
  40ab74:	str	w0, [x20]
  40ab78:	b	40aac8 <ferror@plt+0x8128>
  40ab7c:	cmp	w19, #0xc
  40ab80:	b.ne	40abdc <ferror@plt+0x823c>  // b.any
  40ab84:	ldr	w1, [x20]
  40ab88:	ldr	w0, [sp, #44]
  40ab8c:	cmp	w1, w0
  40ab90:	cset	w0, ge  // ge = tcont
  40ab94:	str	w0, [x20]
  40ab98:	b	40aac8 <ferror@plt+0x8128>
  40ab9c:	ldr	w1, [x20]
  40aba0:	ldr	w0, [sp, #44]
  40aba4:	cmp	w1, w0
  40aba8:	cset	w0, le
  40abac:	str	w0, [x20]
  40abb0:	b	40aac8 <ferror@plt+0x8128>
  40abb4:	ldr	w1, [x20]
  40abb8:	ldr	w0, [sp, #44]
  40abbc:	cmp	w1, w0
  40abc0:	cset	w0, lt  // lt = tstop
  40abc4:	str	w0, [x20]
  40abc8:	b	40aac8 <ferror@plt+0x8128>
  40abcc:	mov	w0, #0x6                   	// #6
  40abd0:	ldp	x19, x20, [sp, #16]
  40abd4:	ldp	x29, x30, [sp], #48
  40abd8:	ret
  40abdc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40abe0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40abe4:	add	x2, x2, #0xc8
  40abe8:	mov	w1, #0x0                   	// #0
  40abec:	ldr	w0, [x0, #1676]
  40abf0:	bl	4033d0 <ferror@plt+0xa30>
  40abf4:	bl	4026d0 <abort@plt>
  40abf8:	stp	x29, x30, [sp, #-48]!
  40abfc:	mov	x29, sp
  40ac00:	str	x19, [sp, #16]
  40ac04:	mov	x19, x0
  40ac08:	b	40ac78 <ferror@plt+0x82d8>
  40ac0c:	bl	40a130 <ferror@plt+0x7790>
  40ac10:	mov	w1, w0
  40ac14:	add	x0, sp, #0x2c
  40ac18:	cbnz	w1, 40acac <ferror@plt+0x830c>
  40ac1c:	bl	40a7b0 <ferror@plt+0x7e10>
  40ac20:	mov	w1, w0
  40ac24:	add	x0, sp, #0x2c
  40ac28:	cbnz	w1, 40acac <ferror@plt+0x830c>
  40ac2c:	bl	40a8e0 <ferror@plt+0x7f40>
  40ac30:	mov	w1, w0
  40ac34:	add	x0, sp, #0x2c
  40ac38:	cbnz	w1, 40acac <ferror@plt+0x830c>
  40ac3c:	bl	40a9b0 <ferror@plt+0x8010>
  40ac40:	mov	w1, w0
  40ac44:	add	x0, sp, #0x2c
  40ac48:	cbnz	w1, 40acac <ferror@plt+0x830c>
  40ac4c:	bl	40aab8 <ferror@plt+0x8118>
  40ac50:	mov	w1, w0
  40ac54:	add	x0, sp, #0x2c
  40ac58:	cbnz	w1, 40acac <ferror@plt+0x830c>
  40ac5c:	bl	40a2d8 <ferror@plt+0x7938>
  40ac60:	mov	w1, w0
  40ac64:	cbnz	w0, 40acac <ferror@plt+0x830c>
  40ac68:	ldr	w0, [x19]
  40ac6c:	ldr	w1, [sp, #44]
  40ac70:	and	w0, w0, w1
  40ac74:	str	w0, [x19]
  40ac78:	add	x0, sp, #0x2c
  40ac7c:	bl	409cb0 <ferror@plt+0x7310>
  40ac80:	mov	w1, w0
  40ac84:	add	x0, sp, #0x2c
  40ac88:	cmp	w1, #0x15
  40ac8c:	b.ne	40acd0 <ferror@plt+0x8330>  // b.any
  40ac90:	bl	409cb0 <ferror@plt+0x7310>
  40ac94:	add	x1, sp, #0x2c
  40ac98:	cbz	w0, 40acbc <ferror@plt+0x831c>
  40ac9c:	bl	40a698 <ferror@plt+0x7cf8>
  40aca0:	mov	w1, w0
  40aca4:	add	x0, sp, #0x2c
  40aca8:	cbz	w1, 40ac0c <ferror@plt+0x826c>
  40acac:	mov	w0, w1
  40acb0:	ldr	x19, [sp, #16]
  40acb4:	ldp	x29, x30, [sp], #48
  40acb8:	ret
  40acbc:	mov	w1, #0x6                   	// #6
  40acc0:	mov	w0, w1
  40acc4:	ldr	x19, [sp, #16]
  40acc8:	ldp	x29, x30, [sp], #48
  40accc:	ret
  40acd0:	cbz	w1, 40acbc <ferror@plt+0x831c>
  40acd4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40acd8:	add	x2, x0, #0x888
  40acdc:	mov	w1, #0x0                   	// #0
  40ace0:	ldr	x19, [sp, #16]
  40ace4:	ldr	x2, [x2, #8]
  40ace8:	str	x2, [x0, #2184]
  40acec:	mov	w0, w1
  40acf0:	ldp	x29, x30, [sp], #48
  40acf4:	ret
  40acf8:	stp	x29, x30, [sp, #-48]!
  40acfc:	mov	x29, sp
  40ad00:	str	x19, [sp, #16]
  40ad04:	mov	x19, x0
  40ad08:	b	40ad70 <ferror@plt+0x83d0>
  40ad0c:	add	x0, sp, #0x2c
  40ad10:	bl	40a130 <ferror@plt+0x7790>
  40ad14:	cbnz	w0, 40ad98 <ferror@plt+0x83f8>
  40ad18:	add	x0, sp, #0x2c
  40ad1c:	bl	40a7b0 <ferror@plt+0x7e10>
  40ad20:	cbnz	w0, 40ad98 <ferror@plt+0x83f8>
  40ad24:	add	x0, sp, #0x2c
  40ad28:	bl	40a8e0 <ferror@plt+0x7f40>
  40ad2c:	cbnz	w0, 40ad98 <ferror@plt+0x83f8>
  40ad30:	add	x0, sp, #0x2c
  40ad34:	bl	40a9b0 <ferror@plt+0x8010>
  40ad38:	cbnz	w0, 40ad98 <ferror@plt+0x83f8>
  40ad3c:	add	x0, sp, #0x2c
  40ad40:	bl	40aab8 <ferror@plt+0x8118>
  40ad44:	cbnz	w0, 40ad98 <ferror@plt+0x83f8>
  40ad48:	add	x0, sp, #0x2c
  40ad4c:	bl	40a2d8 <ferror@plt+0x7938>
  40ad50:	cbnz	w0, 40ad98 <ferror@plt+0x83f8>
  40ad54:	add	x0, sp, #0x2c
  40ad58:	bl	40abf8 <ferror@plt+0x8258>
  40ad5c:	cbnz	w0, 40ad98 <ferror@plt+0x83f8>
  40ad60:	ldr	w0, [x19]
  40ad64:	ldr	w1, [sp, #44]
  40ad68:	eor	w0, w0, w1
  40ad6c:	str	w0, [x19]
  40ad70:	add	x0, sp, #0x2c
  40ad74:	bl	409cb0 <ferror@plt+0x7310>
  40ad78:	cmp	w0, #0x17
  40ad7c:	b.ne	40adb4 <ferror@plt+0x8414>  // b.any
  40ad80:	add	x0, sp, #0x2c
  40ad84:	bl	409cb0 <ferror@plt+0x7310>
  40ad88:	cbz	w0, 40ada4 <ferror@plt+0x8404>
  40ad8c:	add	x1, sp, #0x2c
  40ad90:	bl	40a698 <ferror@plt+0x7cf8>
  40ad94:	cbz	w0, 40ad0c <ferror@plt+0x836c>
  40ad98:	ldr	x19, [sp, #16]
  40ad9c:	ldp	x29, x30, [sp], #48
  40ada0:	ret
  40ada4:	mov	w0, #0x6                   	// #6
  40ada8:	ldr	x19, [sp, #16]
  40adac:	ldp	x29, x30, [sp], #48
  40adb0:	ret
  40adb4:	cbz	w0, 40ada4 <ferror@plt+0x8404>
  40adb8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40adbc:	add	x2, x1, #0x888
  40adc0:	mov	w0, #0x0                   	// #0
  40adc4:	ldr	x19, [sp, #16]
  40adc8:	ldr	x2, [x2, #8]
  40adcc:	str	x2, [x1, #2184]
  40add0:	ldp	x29, x30, [sp], #48
  40add4:	ret
  40add8:	stp	x29, x30, [sp, #-48]!
  40addc:	mov	x29, sp
  40ade0:	str	x19, [sp, #16]
  40ade4:	mov	x19, x0
  40ade8:	add	x0, sp, #0x2c
  40adec:	bl	409cb0 <ferror@plt+0x7310>
  40adf0:	cmp	w0, #0x12
  40adf4:	b.ne	40aea4 <ferror@plt+0x8504>  // b.any
  40adf8:	add	x0, sp, #0x2c
  40adfc:	bl	409cb0 <ferror@plt+0x7310>
  40ae00:	cbz	w0, 40aee4 <ferror@plt+0x8544>
  40ae04:	add	x1, sp, #0x2c
  40ae08:	bl	40a698 <ferror@plt+0x7cf8>
  40ae0c:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae10:	add	x0, sp, #0x2c
  40ae14:	bl	40a130 <ferror@plt+0x7790>
  40ae18:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae1c:	add	x0, sp, #0x2c
  40ae20:	bl	40a7b0 <ferror@plt+0x7e10>
  40ae24:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae28:	add	x0, sp, #0x2c
  40ae2c:	bl	40a8e0 <ferror@plt+0x7f40>
  40ae30:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae34:	add	x0, sp, #0x2c
  40ae38:	bl	40a9b0 <ferror@plt+0x8010>
  40ae3c:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae40:	add	x0, sp, #0x2c
  40ae44:	bl	40aab8 <ferror@plt+0x8118>
  40ae48:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae4c:	add	x0, sp, #0x2c
  40ae50:	bl	40a2d8 <ferror@plt+0x7938>
  40ae54:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae58:	add	x0, sp, #0x2c
  40ae5c:	bl	40abf8 <ferror@plt+0x8258>
  40ae60:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae64:	add	x0, sp, #0x2c
  40ae68:	bl	40acf8 <ferror@plt+0x8358>
  40ae6c:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae70:	add	x0, sp, #0x2c
  40ae74:	bl	40a3f8 <ferror@plt+0x7a58>
  40ae78:	cbnz	w0, 40aec8 <ferror@plt+0x8528>
  40ae7c:	ldr	w0, [x19]
  40ae80:	cbz	w0, 40ae90 <ferror@plt+0x84f0>
  40ae84:	ldr	w0, [sp, #44]
  40ae88:	cmp	w0, #0x0
  40ae8c:	cset	w0, ne  // ne = any
  40ae90:	str	w0, [x19]
  40ae94:	add	x0, sp, #0x2c
  40ae98:	bl	409cb0 <ferror@plt+0x7310>
  40ae9c:	cmp	w0, #0x12
  40aea0:	b.eq	40adf8 <ferror@plt+0x8458>  // b.none
  40aea4:	cbz	w0, 40aee4 <ferror@plt+0x8544>
  40aea8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  40aeac:	add	x2, x1, #0x888
  40aeb0:	mov	w0, #0x0                   	// #0
  40aeb4:	ldr	x19, [sp, #16]
  40aeb8:	ldr	x2, [x2, #8]
  40aebc:	str	x2, [x1, #2184]
  40aec0:	ldp	x29, x30, [sp], #48
  40aec4:	ret
  40aec8:	ldr	w1, [x19]
  40aecc:	cmp	w1, #0x0
  40aed0:	ccmp	w0, #0x3, #0x2, eq  // eq = none
  40aed4:	b.ls	40ade8 <ferror@plt+0x8448>  // b.plast
  40aed8:	ldr	x19, [sp, #16]
  40aedc:	ldp	x29, x30, [sp], #48
  40aee0:	ret
  40aee4:	mov	w0, #0x6                   	// #6
  40aee8:	ldr	x19, [sp, #16]
  40aeec:	ldp	x29, x30, [sp], #48
  40aef0:	ret
  40aef4:	nop
  40aef8:	stp	x29, x30, [sp, #-48]!
  40aefc:	mov	x29, sp
  40af00:	stp	x21, x22, [sp, #32]
  40af04:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  40af08:	add	x2, x22, #0x888
  40af0c:	stp	x19, x20, [sp, #16]
  40af10:	mov	x21, x0
  40af14:	mov	x20, x1
  40af18:	mov	x0, x1
  40af1c:	str	x21, [x22, #2184]
  40af20:	str	xzr, [x2, #8]
  40af24:	bl	409cb0 <ferror@plt+0x7310>
  40af28:	mov	x1, x20
  40af2c:	bl	40a4e8 <ferror@plt+0x7b48>
  40af30:	cbnz	w0, 40af54 <ferror@plt+0x85b4>
  40af34:	ldr	x1, [x22, #2184]
  40af38:	mov	w0, #0x0                   	// #0
  40af3c:	ldrb	w1, [x1]
  40af40:	cbnz	w1, 40b068 <ferror@plt+0x86c8>
  40af44:	ldp	x19, x20, [sp, #16]
  40af48:	ldp	x21, x22, [sp, #32]
  40af4c:	ldp	x29, x30, [sp], #48
  40af50:	ret
  40af54:	mov	w19, w0
  40af58:	cmp	w0, #0x5
  40af5c:	b.eq	40b0cc <ferror@plt+0x872c>  // b.none
  40af60:	b.hi	40aff0 <ferror@plt+0x8650>  // b.pmore
  40af64:	cmp	w0, #0x3
  40af68:	b.eq	40b0f0 <ferror@plt+0x8750>  // b.none
  40af6c:	cmp	w0, #0x4
  40af70:	b.ne	40af98 <ferror@plt+0x85f8>  // b.any
  40af74:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40af78:	mov	x3, x21
  40af7c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40af80:	mov	w1, #0x0                   	// #0
  40af84:	ldr	w0, [x0, #1676]
  40af88:	add	x2, x2, #0x138
  40af8c:	bl	4033d0 <ferror@plt+0xa30>
  40af90:	mov	w0, #0x1                   	// #1
  40af94:	b	40af44 <ferror@plt+0x85a4>
  40af98:	cmp	w0, #0x2
  40af9c:	b.eq	40b0a8 <ferror@plt+0x8708>  // b.none
  40afa0:	cmp	w0, #0x3
  40afa4:	b.ne	40afc4 <ferror@plt+0x8624>  // b.any
  40afa8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40afac:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40afb0:	add	x2, x2, #0x230
  40afb4:	mov	w1, #0x0                   	// #0
  40afb8:	ldr	w0, [x0, #1676]
  40afbc:	bl	4033d0 <ferror@plt+0xa30>
  40afc0:	bl	4026d0 <abort@plt>
  40afc4:	cmp	w0, #0x1
  40afc8:	b.ne	40afa8 <ferror@plt+0x8608>  // b.any
  40afcc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40afd0:	mov	x3, x21
  40afd4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40afd8:	mov	w1, #0x0                   	// #0
  40afdc:	ldr	w0, [x0, #1676]
  40afe0:	add	x2, x2, #0x1d0
  40afe4:	bl	4033d0 <ferror@plt+0xa30>
  40afe8:	mov	w0, w19
  40afec:	b	40af44 <ferror@plt+0x85a4>
  40aff0:	cmp	w0, #0x7
  40aff4:	b.eq	40b078 <ferror@plt+0x86d8>  // b.none
  40aff8:	cmp	w0, #0x8
  40affc:	b.ne	40b03c <ferror@plt+0x869c>  // b.any
  40b000:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b004:	mov	x3, x21
  40b008:	mov	w1, #0x0                   	// #0
  40b00c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b010:	ldr	w0, [x0, #1676]
  40b014:	add	x2, x2, #0x1b0
  40b018:	bl	4033d0 <ferror@plt+0xa30>
  40b01c:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40b020:	mov	w1, #0x1                   	// #1
  40b024:	mov	w0, w1
  40b028:	str	w1, [x2, #3520]
  40b02c:	ldp	x19, x20, [sp, #16]
  40b030:	ldp	x21, x22, [sp, #32]
  40b034:	ldp	x29, x30, [sp], #48
  40b038:	ret
  40b03c:	cmp	w0, #0x6
  40b040:	b.ne	40afa8 <ferror@plt+0x8608>  // b.any
  40b044:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b048:	mov	x3, x21
  40b04c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b050:	mov	w1, #0x0                   	// #0
  40b054:	ldr	w0, [x0, #1676]
  40b058:	add	x2, x2, #0x158
  40b05c:	bl	4033d0 <ferror@plt+0xa30>
  40b060:	mov	w0, #0x1                   	// #1
  40b064:	b	40af44 <ferror@plt+0x85a4>
  40b068:	mov	x0, x20
  40b06c:	bl	409cb0 <ferror@plt+0x7310>
  40b070:	cmp	w0, #0x1
  40b074:	b.eq	40b000 <ferror@plt+0x8660>  // b.none
  40b078:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b07c:	mov	x3, x21
  40b080:	mov	w1, #0x0                   	// #0
  40b084:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b088:	ldr	w0, [x0, #1676]
  40b08c:	add	x2, x2, #0x180
  40b090:	bl	4033d0 <ferror@plt+0xa30>
  40b094:	mov	w0, #0x1                   	// #1
  40b098:	ldp	x19, x20, [sp, #16]
  40b09c:	ldp	x21, x22, [sp, #32]
  40b0a0:	ldp	x29, x30, [sp], #48
  40b0a4:	ret
  40b0a8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b0ac:	mov	x3, x21
  40b0b0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b0b4:	mov	w1, #0x0                   	// #0
  40b0b8:	ldr	w0, [x0, #1676]
  40b0bc:	add	x2, x2, #0x1f0
  40b0c0:	bl	4033d0 <ferror@plt+0xa30>
  40b0c4:	mov	w0, #0x1                   	// #1
  40b0c8:	b	40af44 <ferror@plt+0x85a4>
  40b0cc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b0d0:	mov	x3, x21
  40b0d4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b0d8:	mov	w1, #0x0                   	// #0
  40b0dc:	ldr	w0, [x0, #1676]
  40b0e0:	add	x2, x2, #0x100
  40b0e4:	bl	4033d0 <ferror@plt+0xa30>
  40b0e8:	mov	w0, #0x1                   	// #1
  40b0ec:	b	40af44 <ferror@plt+0x85a4>
  40b0f0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b0f4:	mov	x3, x21
  40b0f8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b0fc:	mov	w1, #0x0                   	// #0
  40b100:	ldr	w0, [x0, #1676]
  40b104:	add	x2, x2, #0x210
  40b108:	bl	4033d0 <ferror@plt+0xa30>
  40b10c:	mov	w0, #0x1                   	// #1
  40b110:	b	40af44 <ferror@plt+0x85a4>
  40b114:	nop
  40b118:	stp	x29, x30, [sp, #-64]!
  40b11c:	mov	x29, sp
  40b120:	stp	x19, x20, [sp, #16]
  40b124:	mov	x19, x0
  40b128:	bl	402390 <strlen@plt>
  40b12c:	cbz	x0, 40b1f4 <ferror@plt+0x8854>
  40b130:	mov	x20, x0
  40b134:	stp	x21, x22, [sp, #32]
  40b138:	bl	402920 <__errno_location@plt>
  40b13c:	mov	x22, x0
  40b140:	add	x1, sp, #0x38
  40b144:	mov	x0, x19
  40b148:	mov	w2, #0xa                   	// #10
  40b14c:	str	wzr, [x22]
  40b150:	bl	402790 <strtol@plt>
  40b154:	mov	x21, x0
  40b158:	ldr	x1, [sp, #56]
  40b15c:	sub	x1, x1, x19
  40b160:	cmp	x1, x20
  40b164:	b.ne	40b1c0 <ferror@plt+0x8820>  // b.any
  40b168:	bl	402770 <__ctype_b_loc@plt>
  40b16c:	ldrb	w1, [x19]
  40b170:	mov	w19, w21
  40b174:	ldr	x0, [x0]
  40b178:	ldrh	w0, [x0, x1, lsl #1]
  40b17c:	tbnz	w0, #13, 40b220 <ferror@plt+0x8880>
  40b180:	ldr	w0, [x22]
  40b184:	cmp	w0, #0x22
  40b188:	b.eq	40b194 <ferror@plt+0x87f4>  // b.none
  40b18c:	cmp	x21, w21, sxtw
  40b190:	b.eq	40b24c <ferror@plt+0x88ac>  // b.none
  40b194:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b198:	mov	w1, #0x0                   	// #0
  40b19c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b1a0:	add	x2, x2, #0x2b8
  40b1a4:	ldr	w0, [x0, #1676]
  40b1a8:	bl	4033d0 <ferror@plt+0xa30>
  40b1ac:	mov	w0, w19
  40b1b0:	ldp	x19, x20, [sp, #16]
  40b1b4:	ldp	x21, x22, [sp, #32]
  40b1b8:	ldp	x29, x30, [sp], #64
  40b1bc:	ret
  40b1c0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b1c4:	mov	x3, x19
  40b1c8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b1cc:	mov	w19, w21
  40b1d0:	ldr	w0, [x0, #1676]
  40b1d4:	add	x2, x2, #0x280
  40b1d8:	mov	w1, #0x0                   	// #0
  40b1dc:	bl	4033d0 <ferror@plt+0xa30>
  40b1e0:	ldp	x21, x22, [sp, #32]
  40b1e4:	mov	w0, w19
  40b1e8:	ldp	x19, x20, [sp, #16]
  40b1ec:	ldp	x29, x30, [sp], #64
  40b1f0:	ret
  40b1f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b1f8:	mov	w1, #0x0                   	// #0
  40b1fc:	mov	w19, #0x0                   	// #0
  40b200:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b204:	ldr	w0, [x0, #1676]
  40b208:	add	x2, x2, #0x260
  40b20c:	bl	4033d0 <ferror@plt+0xa30>
  40b210:	mov	w0, w19
  40b214:	ldp	x19, x20, [sp, #16]
  40b218:	ldp	x29, x30, [sp], #64
  40b21c:	ret
  40b220:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b224:	mov	w1, #0x0                   	// #0
  40b228:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b22c:	add	x2, x2, #0x298
  40b230:	ldr	w0, [x0, #1676]
  40b234:	bl	4033d0 <ferror@plt+0xa30>
  40b238:	mov	w0, w19
  40b23c:	ldp	x19, x20, [sp, #16]
  40b240:	ldp	x21, x22, [sp, #32]
  40b244:	ldp	x29, x30, [sp], #64
  40b248:	ret
  40b24c:	ldp	x21, x22, [sp, #32]
  40b250:	b	40b1e4 <ferror@plt+0x8844>
  40b254:	nop
  40b258:	stp	x29, x30, [sp, #-272]!
  40b25c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  40b260:	add	x3, x3, #0x300
  40b264:	mov	x29, sp
  40b268:	stp	x27, x28, [sp, #80]
  40b26c:	mov	x27, x0
  40b270:	ldr	x0, [x3]
  40b274:	str	x0, [sp, #128]
  40b278:	ldur	x0, [x3, #6]
  40b27c:	stp	x19, x20, [sp, #16]
  40b280:	mov	x20, x2
  40b284:	stp	x21, x22, [sp, #32]
  40b288:	mov	w21, w1
  40b28c:	stp	x23, x24, [sp, #48]
  40b290:	stp	x25, x26, [sp, #64]
  40b294:	stur	x0, [sp, #134]
  40b298:	cbz	w1, 40b6b0 <ferror@plt+0x8d10>
  40b29c:	ldr	x0, [x20], #8
  40b2a0:	sub	w21, w1, #0x1
  40b2a4:	ldr	x23, [x0, #8]
  40b2a8:	mov	x24, x23
  40b2ac:	add	x22, sp, #0x81
  40b2b0:	stp	xzr, xzr, [sp, #144]
  40b2b4:	stp	xzr, xzr, [sp, #160]
  40b2b8:	stp	xzr, xzr, [sp, #176]
  40b2bc:	stp	xzr, xzr, [sp, #192]
  40b2c0:	stp	xzr, xzr, [sp, #208]
  40b2c4:	stp	xzr, xzr, [sp, #224]
  40b2c8:	stp	xzr, xzr, [sp, #240]
  40b2cc:	stp	xzr, xzr, [sp, #256]
  40b2d0:	mov	x0, x24
  40b2d4:	mov	w1, #0x25                  	// #37
  40b2d8:	bl	402810 <strchr@plt>
  40b2dc:	mov	x19, x0
  40b2e0:	cbz	x0, 40b5f8 <ferror@plt+0x8c58>
  40b2e4:	sub	x25, x0, x24
  40b2e8:	ldp	x0, x1, [x27, #24]
  40b2ec:	sub	x1, x1, x0
  40b2f0:	cmp	x25, x1
  40b2f4:	b.hi	40b678 <ferror@plt+0x8cd8>  // b.pmore
  40b2f8:	mov	x2, x25
  40b2fc:	mov	x1, x24
  40b300:	bl	402350 <memcpy@plt>
  40b304:	ldr	x0, [x27, #24]
  40b308:	add	x2, x0, x25
  40b30c:	str	x2, [x27, #24]
  40b310:	ldrb	w0, [x19, #1]
  40b314:	cmp	w0, #0x25
  40b318:	b.eq	40b654 <ferror@plt+0x8cb4>  // b.none
  40b31c:	mov	w0, #0x1                   	// #1
  40b320:	mov	w9, #0x1                   	// #1
  40b324:	mov	w3, #0x101                 	// #257
  40b328:	mov	w1, #0x1010101             	// #16843009
  40b32c:	add	x19, x19, #0x1
  40b330:	mov	w12, w9
  40b334:	mov	w14, w9
  40b338:	mov	w7, w9
  40b33c:	mov	w8, w9
  40b340:	mov	w13, #0x0                   	// #0
  40b344:	mov	w5, #0x0                   	// #0
  40b348:	mov	w11, #0x0                   	// #0
  40b34c:	mov	w6, #0x0                   	// #0
  40b350:	mov	w10, #0x0                   	// #0
  40b354:	mov	w2, #0x0                   	// #0
  40b358:	strb	w0, [sp, #209]
  40b35c:	strb	w0, [sp, #213]
  40b360:	strh	w3, [sp, #214]
  40b364:	strb	w0, [sp, #232]
  40b368:	strb	w0, [sp, #241]
  40b36c:	strb	w0, [sp, #243]
  40b370:	str	w1, [sp, #244]
  40b374:	strb	w0, [sp, #249]
  40b378:	strb	w0, [sp, #255]
  40b37c:	strb	w0, [sp, #259]
  40b380:	strb	w0, [sp, #261]
  40b384:	strb	w0, [sp, #264]
  40b388:	b	40b3d0 <ferror@plt+0x8a30>
  40b38c:	cmp	w3, #0x23
  40b390:	b.eq	40b430 <ferror@plt+0x8a90>  // b.none
  40b394:	cmp	w3, #0x27
  40b398:	b.ne	40b404 <ferror@plt+0x8a64>  // b.any
  40b39c:	mov	w11, #0x1                   	// #1
  40b3a0:	and	w1, w2, #0x40
  40b3a4:	mov	w6, w11
  40b3a8:	orr	w2, w2, w11
  40b3ac:	mov	w10, w11
  40b3b0:	mov	w14, #0x0                   	// #0
  40b3b4:	mov	w7, #0x0                   	// #0
  40b3b8:	mov	w8, #0x0                   	// #0
  40b3bc:	nop
  40b3c0:	add	x24, x19, #0x1
  40b3c4:	mov	x4, x24
  40b3c8:	cbnz	w1, 40b470 <ferror@plt+0x8ad0>
  40b3cc:	mov	x19, x24
  40b3d0:	ldrb	w3, [x19]
  40b3d4:	cmp	w3, #0x2b
  40b3d8:	b.eq	40b454 <ferror@plt+0x8ab4>  // b.none
  40b3dc:	b.ls	40b38c <ferror@plt+0x89ec>  // b.plast
  40b3e0:	cmp	w3, #0x2d
  40b3e4:	b.eq	40b648 <ferror@plt+0x8ca8>  // b.none
  40b3e8:	cmp	w3, #0x30
  40b3ec:	b.ne	40b464 <ferror@plt+0x8ac4>  // b.any
  40b3f0:	and	w1, w2, #0x40
  40b3f4:	mov	w6, #0x1                   	// #1
  40b3f8:	orr	w2, w2, #0x10
  40b3fc:	mov	w7, #0x0                   	// #0
  40b400:	b	40b3c0 <ferror@plt+0x8a20>
  40b404:	cmp	w3, #0x20
  40b408:	b.ne	40b464 <ferror@plt+0x8ac4>  // b.any
  40b40c:	and	w1, w2, #0x40
  40b410:	orr	w2, w2, #0x8
  40b414:	mov	w5, #0x1                   	// #1
  40b418:	mov	w6, w5
  40b41c:	mov	w10, w5
  40b420:	mov	w12, #0x0                   	// #0
  40b424:	mov	w7, #0x0                   	// #0
  40b428:	mov	w8, #0x0                   	// #0
  40b42c:	b	40b3c0 <ferror@plt+0x8a20>
  40b430:	mov	w13, #0x1                   	// #1
  40b434:	and	w1, w2, #0x40
  40b438:	mov	w5, w13
  40b43c:	orr	w2, w2, #0x20
  40b440:	mov	w6, w13
  40b444:	mov	w9, #0x0                   	// #0
  40b448:	mov	w12, #0x0                   	// #0
  40b44c:	mov	w7, #0x0                   	// #0
  40b450:	b	40b3c0 <ferror@plt+0x8a20>
  40b454:	and	w1, w2, #0x40
  40b458:	mov	w5, #0x1                   	// #1
  40b45c:	orr	w2, w2, #0x2
  40b460:	b	40b418 <ferror@plt+0x8a78>
  40b464:	add	x24, x19, #0x1
  40b468:	orr	w2, w2, #0x40
  40b46c:	mov	x4, x24
  40b470:	cbz	w10, 40b68c <ferror@plt+0x8cec>
  40b474:	strb	w8, [sp, #232]
  40b478:	strb	w8, [sp, #264]
  40b47c:	cbz	w6, 40b488 <ferror@plt+0x8ae8>
  40b480:	strb	w7, [sp, #259]
  40b484:	cbz	w10, 40b48c <ferror@plt+0x8aec>
  40b488:	strb	w8, [sp, #255]
  40b48c:	cbz	w11, 40b694 <ferror@plt+0x8cf4>
  40b490:	strb	w14, [sp, #213]
  40b494:	strb	w14, [sp, #245]
  40b498:	cbz	w6, 40b4a4 <ferror@plt+0x8b04>
  40b49c:	strb	w7, [sp, #243]
  40b4a0:	cbz	w11, 40b4ac <ferror@plt+0x8b0c>
  40b4a4:	strb	w14, [sp, #209]
  40b4a8:	strb	w14, [sp, #241]
  40b4ac:	cbz	w5, 40b4b4 <ferror@plt+0x8b14>
  40b4b0:	strb	w12, [sp, #261]
  40b4b4:	cbz	w13, 40b4c0 <ferror@plt+0x8b20>
  40b4b8:	strb	w9, [sp, #244]
  40b4bc:	strb	w9, [sp, #249]
  40b4c0:	mov	x25, x22
  40b4c4:	tbz	w2, #0, 40b4d4 <ferror@plt+0x8b34>
  40b4c8:	add	x25, sp, #0x82
  40b4cc:	mov	w0, #0x27                  	// #39
  40b4d0:	strb	w0, [sp, #129]
  40b4d4:	tbz	w2, #1, 40b4e0 <ferror@plt+0x8b40>
  40b4d8:	mov	w0, #0x2b                  	// #43
  40b4dc:	strb	w0, [x25], #1
  40b4e0:	tbz	w2, #2, 40b4ec <ferror@plt+0x8b4c>
  40b4e4:	mov	w0, #0x2d                  	// #45
  40b4e8:	strb	w0, [x25], #1
  40b4ec:	tbz	w2, #3, 40b4f8 <ferror@plt+0x8b58>
  40b4f0:	mov	w0, #0x20                  	// #32
  40b4f4:	strb	w0, [x25], #1
  40b4f8:	tbz	w2, #4, 40b504 <ferror@plt+0x8b64>
  40b4fc:	mov	w0, #0x30                  	// #48
  40b500:	strb	w0, [x25], #1
  40b504:	tbz	w2, #5, 40b510 <ferror@plt+0x8b70>
  40b508:	mov	w0, #0x23                  	// #35
  40b50c:	strb	w0, [x25], #1
  40b510:	mov	w0, #0x2a                  	// #42
  40b514:	strb	w0, [x25]
  40b518:	ldrb	w28, [x19]
  40b51c:	cmp	w28, #0x2a
  40b520:	b.ne	40b820 <ferror@plt+0x8e80>  // b.any
  40b524:	mov	w26, #0x0                   	// #0
  40b528:	cbnz	w21, 40b6d0 <ferror@plt+0x8d30>
  40b52c:	add	x24, x24, #0x1
  40b530:	mov	w0, #0x2a2e                	// #10798
  40b534:	sturh	w0, [x25, #1]
  40b538:	mov	w28, #0xffffffff            	// #-1
  40b53c:	ldrb	w19, [x4]
  40b540:	cmp	w19, #0x2e
  40b544:	b.eq	40b87c <ferror@plt+0x8edc>  // b.none
  40b548:	cmp	w19, #0x6c
  40b54c:	b.eq	40b8a8 <ferror@plt+0x8f08>  // b.none
  40b550:	cmp	w19, #0x68
  40b554:	b.eq	40b91c <ferror@plt+0x8f7c>  // b.none
  40b558:	add	x25, x25, #0x3
  40b55c:	mov	w2, #0x0                   	// #0
  40b560:	tbnz	w19, #7, 40b8cc <ferror@plt+0x8f2c>
  40b564:	add	x0, sp, #0x90
  40b568:	ldrb	w0, [x0, w19, sxtw]
  40b56c:	cbz	w0, 40b8ec <ferror@plt+0x8f4c>
  40b570:	cmp	w19, #0x78
  40b574:	b.hi	40b718 <ferror@plt+0x8d78>  // b.pmore
  40b578:	cmp	w19, #0x63
  40b57c:	b.hi	40b6f0 <ferror@plt+0x8d50>  // b.pmore
  40b580:	b.ne	40b74c <ferror@plt+0x8dac>  // b.any
  40b584:	sturb	w19, [x25, #-2]
  40b588:	mov	w2, #0x0                   	// #0
  40b58c:	sturb	wzr, [x25, #-1]
  40b590:	cbnz	w21, 40bad4 <ferror@plt+0x9134>
  40b594:	mov	w1, w26
  40b598:	add	x0, sp, #0x80
  40b59c:	bl	41d188 <ferror@plt+0x1a7e8>
  40b5a0:	mov	x19, x0
  40b5a4:	cbz	x19, 40b2d0 <ferror@plt+0x8930>
  40b5a8:	mov	x0, x19
  40b5ac:	bl	402390 <strlen@plt>
  40b5b0:	mov	x25, x0
  40b5b4:	ldp	x0, x1, [x27, #24]
  40b5b8:	sub	x1, x1, x0
  40b5bc:	cmp	x25, x1
  40b5c0:	b.hi	40b960 <ferror@plt+0x8fc0>  // b.pmore
  40b5c4:	mov	x2, x25
  40b5c8:	mov	x1, x19
  40b5cc:	bl	402350 <memcpy@plt>
  40b5d0:	ldr	x1, [x27, #24]
  40b5d4:	mov	x0, x19
  40b5d8:	add	x25, x1, x25
  40b5dc:	str	x25, [x27, #24]
  40b5e0:	bl	4027c0 <free@plt>
  40b5e4:	mov	x0, x24
  40b5e8:	mov	w1, #0x25                  	// #37
  40b5ec:	bl	402810 <strchr@plt>
  40b5f0:	mov	x19, x0
  40b5f4:	cbnz	x0, 40b2e4 <ferror@plt+0x8944>
  40b5f8:	mov	x0, x24
  40b5fc:	bl	402390 <strlen@plt>
  40b600:	mov	x19, x0
  40b604:	ldp	x0, x1, [x27, #24]
  40b608:	sub	x1, x1, x0
  40b60c:	cmp	x19, x1
  40b610:	b.hi	40b6bc <ferror@plt+0x8d1c>  // b.pmore
  40b614:	mov	x1, x24
  40b618:	mov	x2, x19
  40b61c:	bl	402350 <memcpy@plt>
  40b620:	ldr	x0, [x27, #24]
  40b624:	ldp	x21, x22, [sp, #32]
  40b628:	add	x0, x0, x19
  40b62c:	ldp	x19, x20, [sp, #16]
  40b630:	ldp	x23, x24, [sp, #48]
  40b634:	ldp	x25, x26, [sp, #64]
  40b638:	str	x0, [x27, #24]
  40b63c:	ldp	x27, x28, [sp, #80]
  40b640:	ldp	x29, x30, [sp], #272
  40b644:	ret
  40b648:	and	w1, w2, #0x40
  40b64c:	orr	w2, w2, #0x4
  40b650:	b	40b3c0 <ferror@plt+0x8a20>
  40b654:	ldr	x0, [x27, #32]
  40b658:	cmp	x2, x0
  40b65c:	b.eq	40b69c <ferror@plt+0x8cfc>  // b.none
  40b660:	add	x0, x2, #0x1
  40b664:	str	x0, [x27, #24]
  40b668:	add	x24, x19, #0x2
  40b66c:	mov	w0, #0x25                  	// #37
  40b670:	strb	w0, [x2]
  40b674:	b	40b2d0 <ferror@plt+0x8930>
  40b678:	mov	x0, x27
  40b67c:	mov	x1, x25
  40b680:	bl	41d788 <_obstack_newchunk@@Base>
  40b684:	ldr	x0, [x27, #24]
  40b688:	b	40b2f8 <ferror@plt+0x8958>
  40b68c:	cbnz	w6, 40b480 <ferror@plt+0x8ae0>
  40b690:	cbnz	w11, 40b490 <ferror@plt+0x8af0>
  40b694:	cbnz	w6, 40b49c <ferror@plt+0x8afc>
  40b698:	b	40b4ac <ferror@plt+0x8b0c>
  40b69c:	mov	x0, x27
  40b6a0:	mov	x1, #0x1                   	// #1
  40b6a4:	bl	41d788 <_obstack_newchunk@@Base>
  40b6a8:	ldr	x2, [x27, #24]
  40b6ac:	b	40b660 <ferror@plt+0x8cc0>
  40b6b0:	adrp	x23, 41e000 <_obstack_memory_used@@Base+0x640>
  40b6b4:	add	x23, x23, #0xe8
  40b6b8:	b	40b2a8 <ferror@plt+0x8908>
  40b6bc:	mov	x0, x27
  40b6c0:	mov	x1, x19
  40b6c4:	bl	41d788 <_obstack_newchunk@@Base>
  40b6c8:	ldr	x0, [x27, #24]
  40b6cc:	b	40b614 <ferror@plt+0x8c74>
  40b6d0:	ldr	x0, [x20], #8
  40b6d4:	str	x4, [sp, #96]
  40b6d8:	sub	w21, w21, #0x1
  40b6dc:	ldr	x0, [x0, #8]
  40b6e0:	bl	40b118 <ferror@plt+0x8778>
  40b6e4:	mov	w26, w0
  40b6e8:	ldr	x4, [sp, #96]
  40b6ec:	b	40b52c <ferror@plt+0x8b8c>
  40b6f0:	sub	w3, w19, #0x64
  40b6f4:	mov	x4, #0x1                   	// #1
  40b6f8:	mov	x1, #0x821                 	// #2081
  40b6fc:	movk	x1, #0x12, lsl #16
  40b700:	lsl	x3, x4, x3
  40b704:	tst	x3, x1
  40b708:	b.ne	40b974 <ferror@plt+0x8fd4>  // b.any
  40b70c:	tst	x3, #0xe
  40b710:	b.ne	40b764 <ferror@plt+0x8dc4>  // b.any
  40b714:	tbnz	w3, #15, 40b71c <ferror@plt+0x8d7c>
  40b718:	bl	4026d0 <abort@plt>
  40b71c:	mov	w0, #0x73                  	// #115
  40b720:	strh	w0, [x25]
  40b724:	cbz	w21, 40ba90 <ferror@plt+0x90f0>
  40b728:	ldr	x0, [x20], #8
  40b72c:	sub	w21, w21, #0x1
  40b730:	ldr	x3, [x0, #8]
  40b734:	mov	w2, w28
  40b738:	mov	w1, w26
  40b73c:	add	x0, sp, #0x80
  40b740:	bl	41d188 <ferror@plt+0x1a7e8>
  40b744:	mov	x19, x0
  40b748:	b	40b5a4 <ferror@plt+0x8c04>
  40b74c:	cmp	w19, #0x47
  40b750:	b.hi	40b790 <ferror@plt+0x8df0>  // b.pmore
  40b754:	cmp	w19, #0x44
  40b758:	b.hi	40b764 <ferror@plt+0x8dc4>  // b.pmore
  40b75c:	cmp	w19, #0x41
  40b760:	b.ne	40b718 <ferror@plt+0x8d78>  // b.any
  40b764:	strb	w19, [x25]
  40b768:	movi	d0, #0x0
  40b76c:	strb	wzr, [x25, #1]
  40b770:	cbnz	w21, 40b7b0 <ferror@plt+0x8e10>
  40b774:	nop
  40b778:	mov	w2, w28
  40b77c:	mov	w1, w26
  40b780:	add	x0, sp, #0x80
  40b784:	bl	41d188 <ferror@plt+0x1a7e8>
  40b788:	mov	x19, x0
  40b78c:	b	40b5a4 <ferror@plt+0x8c04>
  40b790:	cmp	w19, #0x58
  40b794:	b.eq	40b974 <ferror@plt+0x8fd4>  // b.none
  40b798:	cmp	w19, #0x61
  40b79c:	b.ne	40b718 <ferror@plt+0x8d78>  // b.any
  40b7a0:	strb	w19, [x25]
  40b7a4:	movi	d0, #0x0
  40b7a8:	strb	wzr, [x25, #1]
  40b7ac:	cbz	w21, 40b778 <ferror@plt+0x8dd8>
  40b7b0:	ldr	x0, [x20], #8
  40b7b4:	sub	w21, w21, #0x1
  40b7b8:	ldr	x25, [x0, #8]
  40b7bc:	mov	x0, x25
  40b7c0:	bl	402390 <strlen@plt>
  40b7c4:	mov	x19, x0
  40b7c8:	cbz	x0, 40bb3c <ferror@plt+0x919c>
  40b7cc:	bl	402920 <__errno_location@plt>
  40b7d0:	mov	x2, x0
  40b7d4:	add	x1, sp, #0x78
  40b7d8:	mov	x0, x25
  40b7dc:	str	x2, [sp, #96]
  40b7e0:	str	wzr, [x2]
  40b7e4:	bl	402400 <strtod@plt>
  40b7e8:	ldr	x0, [sp, #120]
  40b7ec:	sub	x0, x0, x25
  40b7f0:	cmp	x0, x19
  40b7f4:	b.eq	40baec <ferror@plt+0x914c>  // b.none
  40b7f8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b7fc:	mov	x3, x25
  40b800:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b804:	mov	w1, #0x0                   	// #0
  40b808:	ldr	w0, [x0, #1676]
  40b80c:	add	x2, x2, #0x280
  40b810:	str	d0, [sp, #96]
  40b814:	bl	4033d0 <ferror@plt+0xa30>
  40b818:	ldr	d0, [sp, #96]
  40b81c:	b	40b778 <ferror@plt+0x8dd8>
  40b820:	bl	402770 <__ctype_b_loc@plt>
  40b824:	mov	w26, #0x0                   	// #0
  40b828:	ldr	x2, [x0]
  40b82c:	ubfiz	x1, x28, #1, #8
  40b830:	mov	x4, x19
  40b834:	ldrh	w0, [x2, x1]
  40b838:	tbz	w0, #11, 40b530 <ferror@plt+0x8b90>
  40b83c:	nop
  40b840:	add	w1, w26, w26, lsl #2
  40b844:	mov	x4, x24
  40b848:	add	x24, x24, #0x1
  40b84c:	add	w1, w28, w1, lsl #1
  40b850:	ldurb	w28, [x24, #-1]
  40b854:	sub	w26, w1, #0x30
  40b858:	ubfiz	x0, x28, #1, #8
  40b85c:	ldrh	w0, [x2, x0]
  40b860:	tbnz	w0, #11, 40b840 <ferror@plt+0x8ea0>
  40b864:	mov	w0, #0x2a2e                	// #10798
  40b868:	sturh	w0, [x25, #1]
  40b86c:	mov	w28, #0xffffffff            	// #-1
  40b870:	ldrb	w19, [x4]
  40b874:	cmp	w19, #0x2e
  40b878:	b.ne	40b548 <ferror@plt+0x8ba8>  // b.any
  40b87c:	ldrb	w0, [x4, #1]
  40b880:	strb	wzr, [sp, #243]
  40b884:	cmp	w0, #0x2a
  40b888:	b.ne	40b9a0 <ferror@plt+0x9000>  // b.any
  40b88c:	mov	w28, #0x0                   	// #0
  40b890:	cbnz	w21, 40ba9c <ferror@plt+0x90fc>
  40b894:	ldrb	w19, [x4, #2]
  40b898:	add	x24, x4, #0x3
  40b89c:	add	x4, x4, #0x2
  40b8a0:	cmp	w19, #0x6c
  40b8a4:	b.ne	40b550 <ferror@plt+0x8bb0>  // b.any
  40b8a8:	strb	w19, [x25, #3]
  40b8ac:	mov	w2, #0x1                   	// #1
  40b8b0:	strb	wzr, [sp, #243]
  40b8b4:	add	x25, x25, #0x4
  40b8b8:	ldrb	w19, [x4, #1]
  40b8bc:	mov	x4, x24
  40b8c0:	strb	wzr, [sp, #259]
  40b8c4:	add	x24, x24, #0x1
  40b8c8:	tbz	w19, #7, 40b564 <ferror@plt+0x8bc4>
  40b8cc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b8d0:	mov	x3, x23
  40b8d4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b8d8:	mov	w1, #0x0                   	// #0
  40b8dc:	ldr	w0, [x0, #1676]
  40b8e0:	add	x2, x2, #0x2d8
  40b8e4:	bl	4033d0 <ferror@plt+0xa30>
  40b8e8:	b	40b2d0 <ferror@plt+0x8930>
  40b8ec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40b8f0:	mov	x3, x23
  40b8f4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40b8f8:	mov	w1, #0x0                   	// #0
  40b8fc:	ldr	w0, [x0, #1676]
  40b900:	add	x2, x2, #0x2d8
  40b904:	str	x4, [sp, #96]
  40b908:	bl	4033d0 <ferror@plt+0xa30>
  40b90c:	ldr	x4, [sp, #96]
  40b910:	cmp	w19, #0x0
  40b914:	csel	x24, x24, x4, ne  // ne = any
  40b918:	b	40b2d0 <ferror@plt+0x8930>
  40b91c:	strb	w19, [x25, #3]
  40b920:	ldrb	w19, [x4, #1]
  40b924:	cmp	w19, #0x68
  40b928:	b.eq	40ba7c <ferror@plt+0x90dc>  // b.none
  40b92c:	add	x25, x25, #0x4
  40b930:	mov	x4, x24
  40b934:	add	x24, x4, #0x1
  40b938:	mov	w2, #0x0                   	// #0
  40b93c:	strb	wzr, [sp, #209]
  40b940:	strb	wzr, [sp, #213]
  40b944:	strh	wzr, [sp, #214]
  40b948:	strb	wzr, [sp, #241]
  40b94c:	strb	wzr, [sp, #243]
  40b950:	strb	wzr, [sp, #245]
  40b954:	strh	wzr, [sp, #246]
  40b958:	strb	wzr, [sp, #259]
  40b95c:	b	40b560 <ferror@plt+0x8bc0>
  40b960:	mov	x0, x27
  40b964:	mov	x1, x25
  40b968:	bl	41d788 <_obstack_newchunk@@Base>
  40b96c:	ldr	x0, [x27, #24]
  40b970:	b	40b5c4 <ferror@plt+0x8c24>
  40b974:	strb	w19, [x25]
  40b978:	strb	wzr, [x25, #1]
  40b97c:	cbnz	w2, 40b9f4 <ferror@plt+0x9054>
  40b980:	mov	w3, #0x0                   	// #0
  40b984:	cbnz	w21, 40babc <ferror@plt+0x911c>
  40b988:	mov	w2, w28
  40b98c:	mov	w1, w26
  40b990:	add	x0, sp, #0x80
  40b994:	bl	41d188 <ferror@plt+0x1a7e8>
  40b998:	mov	x19, x0
  40b99c:	b	40b5a4 <ferror@plt+0x8c04>
  40b9a0:	bl	402770 <__ctype_b_loc@plt>
  40b9a4:	mov	w28, #0x0                   	// #0
  40b9a8:	mov	x1, x24
  40b9ac:	mov	x4, x24
  40b9b0:	ldr	x2, [x0]
  40b9b4:	ldrb	w19, [x1], #1
  40b9b8:	mov	x24, x1
  40b9bc:	ubfiz	x0, x19, #1, #8
  40b9c0:	ldrh	w0, [x2, x0]
  40b9c4:	tbz	w0, #11, 40b548 <ferror@plt+0x8ba8>
  40b9c8:	add	w28, w28, w28, lsl #2
  40b9cc:	mov	x4, x1
  40b9d0:	add	x1, x1, #0x1
  40b9d4:	add	w28, w19, w28, lsl #1
  40b9d8:	ldurb	w19, [x1, #-1]
  40b9dc:	sub	w28, w28, #0x30
  40b9e0:	ubfiz	x0, x19, #1, #8
  40b9e4:	ldrh	w0, [x2, x0]
  40b9e8:	tbnz	w0, #11, 40b9c8 <ferror@plt+0x9028>
  40b9ec:	mov	x24, x1
  40b9f0:	b	40b548 <ferror@plt+0x8ba8>
  40b9f4:	mov	x19, #0x0                   	// #0
  40b9f8:	cbnz	w21, 40ba04 <ferror@plt+0x9064>
  40b9fc:	mov	x3, x19
  40ba00:	b	40b734 <ferror@plt+0x8d94>
  40ba04:	ldr	x0, [x20], #8
  40ba08:	sub	w21, w21, #0x1
  40ba0c:	ldr	x25, [x0, #8]
  40ba10:	mov	x0, x25
  40ba14:	bl	402390 <strlen@plt>
  40ba18:	cbz	x0, 40bba8 <ferror@plt+0x9208>
  40ba1c:	str	x0, [sp, #96]
  40ba20:	bl	402920 <__errno_location@plt>
  40ba24:	mov	x3, x0
  40ba28:	add	x1, sp, #0x78
  40ba2c:	mov	x0, x25
  40ba30:	mov	w2, #0xa                   	// #10
  40ba34:	str	x3, [sp, #104]
  40ba38:	str	wzr, [x3]
  40ba3c:	bl	402790 <strtol@plt>
  40ba40:	mov	x19, x0
  40ba44:	ldr	x1, [sp, #120]
  40ba48:	ldr	x4, [sp, #96]
  40ba4c:	sub	x1, x1, x25
  40ba50:	cmp	x1, x4
  40ba54:	b.eq	40bb64 <ferror@plt+0x91c4>  // b.none
  40ba58:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ba5c:	mov	x3, x25
  40ba60:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40ba64:	mov	w1, #0x0                   	// #0
  40ba68:	ldr	w0, [x0, #1676]
  40ba6c:	add	x2, x2, #0x280
  40ba70:	bl	4033d0 <ferror@plt+0xa30>
  40ba74:	mov	x3, x19
  40ba78:	b	40b734 <ferror@plt+0x8d94>
  40ba7c:	strb	w19, [x25, #4]
  40ba80:	add	x4, x4, #0x2
  40ba84:	add	x25, x25, #0x5
  40ba88:	ldrb	w19, [x4]
  40ba8c:	b	40b934 <ferror@plt+0x8f94>
  40ba90:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0x640>
  40ba94:	add	x3, x3, #0xe8
  40ba98:	b	40b734 <ferror@plt+0x8d94>
  40ba9c:	ldr	x0, [x20], #8
  40baa0:	str	x4, [sp, #96]
  40baa4:	sub	w21, w21, #0x1
  40baa8:	ldr	x0, [x0, #8]
  40baac:	bl	40b118 <ferror@plt+0x8778>
  40bab0:	mov	w28, w0
  40bab4:	ldr	x4, [sp, #96]
  40bab8:	b	40b894 <ferror@plt+0x8ef4>
  40babc:	ldr	x0, [x20], #8
  40bac0:	sub	w21, w21, #0x1
  40bac4:	ldr	x0, [x0, #8]
  40bac8:	bl	40b118 <ferror@plt+0x8778>
  40bacc:	mov	w3, w0
  40bad0:	b	40b988 <ferror@plt+0x8fe8>
  40bad4:	ldr	x0, [x20], #8
  40bad8:	sub	w21, w21, #0x1
  40badc:	ldr	x0, [x0, #8]
  40bae0:	bl	40b118 <ferror@plt+0x8778>
  40bae4:	mov	w2, w0
  40bae8:	b	40b594 <ferror@plt+0x8bf4>
  40baec:	str	d0, [sp, #104]
  40baf0:	bl	402770 <__ctype_b_loc@plt>
  40baf4:	ldrb	w1, [x25]
  40baf8:	ldr	x0, [x0]
  40bafc:	ldr	d0, [sp, #104]
  40bb00:	ldrh	w0, [x0, x1, lsl #1]
  40bb04:	tbnz	w0, #13, 40bbe8 <ferror@plt+0x9248>
  40bb08:	ldr	x0, [sp, #96]
  40bb0c:	ldr	w0, [x0]
  40bb10:	cmp	w0, #0x22
  40bb14:	b.ne	40b778 <ferror@plt+0x8dd8>  // b.any
  40bb18:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bb1c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bb20:	mov	w1, #0x0                   	// #0
  40bb24:	add	x2, x2, #0x2b8
  40bb28:	ldr	w0, [x0, #1676]
  40bb2c:	str	d0, [sp, #96]
  40bb30:	bl	4033d0 <ferror@plt+0xa30>
  40bb34:	ldr	d0, [sp, #96]
  40bb38:	b	40b778 <ferror@plt+0x8dd8>
  40bb3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bb40:	movi	d0, #0x0
  40bb44:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bb48:	mov	w1, #0x0                   	// #0
  40bb4c:	ldr	w0, [x0, #1676]
  40bb50:	add	x2, x2, #0x260
  40bb54:	str	d0, [sp, #96]
  40bb58:	bl	4033d0 <ferror@plt+0xa30>
  40bb5c:	ldr	d0, [sp, #96]
  40bb60:	b	40b778 <ferror@plt+0x8dd8>
  40bb64:	bl	402770 <__ctype_b_loc@plt>
  40bb68:	ldrb	w1, [x25]
  40bb6c:	ldr	x0, [x0]
  40bb70:	ldrh	w0, [x0, x1, lsl #1]
  40bb74:	tbnz	w0, #13, 40bbc8 <ferror@plt+0x9228>
  40bb78:	ldr	x0, [sp, #104]
  40bb7c:	ldr	w0, [x0]
  40bb80:	cmp	w0, #0x22
  40bb84:	b.ne	40b9fc <ferror@plt+0x905c>  // b.any
  40bb88:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bb8c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bb90:	mov	w1, #0x0                   	// #0
  40bb94:	add	x2, x2, #0x2b8
  40bb98:	ldr	w0, [x0, #1676]
  40bb9c:	bl	4033d0 <ferror@plt+0xa30>
  40bba0:	mov	x3, x19
  40bba4:	b	40b734 <ferror@plt+0x8d94>
  40bba8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bbac:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bbb0:	mov	w1, #0x0                   	// #0
  40bbb4:	add	x2, x2, #0x260
  40bbb8:	ldr	w0, [x0, #1676]
  40bbbc:	bl	4033d0 <ferror@plt+0xa30>
  40bbc0:	mov	x3, x19
  40bbc4:	b	40b734 <ferror@plt+0x8d94>
  40bbc8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bbcc:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bbd0:	mov	w1, #0x0                   	// #0
  40bbd4:	add	x2, x2, #0x298
  40bbd8:	ldr	w0, [x0, #1676]
  40bbdc:	bl	4033d0 <ferror@plt+0xa30>
  40bbe0:	mov	x3, x19
  40bbe4:	b	40b734 <ferror@plt+0x8d94>
  40bbe8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bbec:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bbf0:	mov	w1, #0x0                   	// #0
  40bbf4:	add	x2, x2, #0x298
  40bbf8:	ldr	w0, [x0, #1676]
  40bbfc:	str	d0, [sp, #96]
  40bc00:	bl	4033d0 <ferror@plt+0xa30>
  40bc04:	ldr	d0, [sp, #96]
  40bc08:	b	40b778 <ferror@plt+0x8dd8>
  40bc0c:	nop
  40bc10:	stp	x29, x30, [sp, #-96]!
  40bc14:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40bc18:	add	x1, x1, #0x310
  40bc1c:	mov	x29, sp
  40bc20:	stp	x19, x20, [sp, #16]
  40bc24:	mov	x19, x0
  40bc28:	bl	415ef0 <ferror@plt+0x13550>
  40bc2c:	cbz	x0, 40bf80 <ferror@plt+0x95e0>
  40bc30:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bc34:	add	x2, x2, #0x318
  40bc38:	mov	x20, x0
  40bc3c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40bc40:	add	x1, x1, #0x328
  40bc44:	stp	x21, x22, [sp, #32]
  40bc48:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bc4c:	stp	x27, x28, [sp, #80]
  40bc50:	bl	41cdb0 <ferror@plt+0x1a410>
  40bc54:	mov	x0, x20
  40bc58:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40bc5c:	add	x1, x1, #0x358
  40bc60:	bl	41cdb0 <ferror@plt+0x1a410>
  40bc64:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bc68:	ldr	x0, [x21, #3536]
  40bc6c:	ldrb	w1, [x0]
  40bc70:	cmp	w1, #0x60
  40bc74:	b.ne	40bc9c <ferror@plt+0x92fc>  // b.any
  40bc78:	ldrb	w0, [x0, #1]
  40bc7c:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bc80:	cbnz	w0, 40bc9c <ferror@plt+0x92fc>
  40bc84:	ldr	x0, [x19, #3592]
  40bc88:	ldrb	w1, [x0]
  40bc8c:	cmp	w1, #0x27
  40bc90:	b.ne	40bc9c <ferror@plt+0x92fc>  // b.any
  40bc94:	ldrb	w0, [x0, #1]
  40bc98:	cbz	w0, 40bce0 <ferror@plt+0x9340>
  40bc9c:	add	x3, x19, #0xe08
  40bca0:	add	x2, x21, #0xdd0
  40bca4:	mov	x0, x20
  40bca8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40bcac:	add	x1, x1, #0x360
  40bcb0:	ldr	w2, [x2, #8]
  40bcb4:	ldr	w3, [x3, #8]
  40bcb8:	bl	41cdb0 <ferror@plt+0x1a410>
  40bcbc:	ldr	x0, [x21, #3536]
  40bcc0:	mov	x1, x20
  40bcc4:	bl	4023a0 <fputs@plt>
  40bcc8:	ldr	x0, [x19, #3592]
  40bccc:	mov	x1, x20
  40bcd0:	bl	4023a0 <fputs@plt>
  40bcd4:	mov	x1, x20
  40bcd8:	mov	w0, #0xa                   	// #10
  40bcdc:	bl	402460 <fputc@plt>
  40bce0:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bce4:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bce8:	ldr	x0, [x21, #3560]
  40bcec:	ldrb	w1, [x0]
  40bcf0:	cmp	w1, #0x23
  40bcf4:	b.eq	40bf2c <ferror@plt+0x958c>  // b.none
  40bcf8:	add	x3, x19, #0xdf8
  40bcfc:	add	x2, x21, #0xde8
  40bd00:	mov	x0, x20
  40bd04:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40bd08:	add	x1, x1, #0x368
  40bd0c:	ldr	w2, [x2, #8]
  40bd10:	ldr	w3, [x3, #8]
  40bd14:	bl	41cdb0 <ferror@plt+0x1a410>
  40bd18:	ldr	x0, [x21, #3560]
  40bd1c:	mov	x1, x20
  40bd20:	bl	4023a0 <fputs@plt>
  40bd24:	ldr	x0, [x19, #3576]
  40bd28:	mov	x1, x20
  40bd2c:	bl	4023a0 <fputs@plt>
  40bd30:	mov	x1, x20
  40bd34:	mov	w0, #0xa                   	// #10
  40bd38:	bl	402460 <fputc@plt>
  40bd3c:	adrp	x27, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bd40:	ldr	x4, [x27, #856]
  40bd44:	cbz	x4, 40bed4 <ferror@plt+0x9534>
  40bd48:	stp	x25, x26, [sp, #64]
  40bd4c:	adrp	x26, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bd50:	adrp	x22, 420000 <_obstack_memory_used@@Base+0x2640>
  40bd54:	ldr	x2, [x26, #3616]
  40bd58:	add	x22, x22, #0x390
  40bd5c:	stp	x23, x24, [sp, #48]
  40bd60:	adrp	x23, 420000 <_obstack_memory_used@@Base+0x2640>
  40bd64:	add	x23, x23, #0x3d0
  40bd68:	mov	x24, #0x0                   	// #0
  40bd6c:	nop
  40bd70:	ldr	x19, [x2, x24, lsl #3]
  40bd74:	lsl	x25, x24, #3
  40bd78:	add	x3, x2, x25
  40bd7c:	cbz	x19, 40bf14 <ferror@plt+0x9574>
  40bd80:	mov	x1, #0x0                   	// #0
  40bd84:	b	40bd8c <ferror@plt+0x93ec>
  40bd88:	mov	x19, x0
  40bd8c:	ldr	x0, [x19]
  40bd90:	str	x1, [x19]
  40bd94:	mov	x1, x19
  40bd98:	cbnz	x0, 40bd88 <ferror@plt+0x93e8>
  40bd9c:	str	x19, [x3]
  40bda0:	b	40be08 <ferror@plt+0x9468>
  40bda4:	ldr	x0, [x19, #32]
  40bda8:	bl	408220 <ferror@plt+0x5880>
  40bdac:	mov	x21, x0
  40bdb0:	cbz	x0, 40bfa8 <ferror@plt+0x9608>
  40bdb4:	ldr	x0, [x19, #16]
  40bdb8:	bl	402390 <strlen@plt>
  40bdbc:	mov	x28, x0
  40bdc0:	ldr	x0, [x21]
  40bdc4:	bl	402390 <strlen@plt>
  40bdc8:	mov	w3, w0
  40bdcc:	mov	w2, w28
  40bdd0:	mov	x1, x23
  40bdd4:	mov	x0, x20
  40bdd8:	bl	41cdb0 <ferror@plt+0x1a410>
  40bddc:	ldr	x0, [x19, #16]
  40bde0:	mov	x1, x20
  40bde4:	bl	4023a0 <fputs@plt>
  40bde8:	ldr	x0, [x21]
  40bdec:	mov	x1, x20
  40bdf0:	bl	4023a0 <fputs@plt>
  40bdf4:	mov	x1, x20
  40bdf8:	mov	w0, #0xa                   	// #10
  40bdfc:	bl	402460 <fputc@plt>
  40be00:	ldr	x19, [x19]
  40be04:	cbz	x19, 40be90 <ferror@plt+0x94f0>
  40be08:	ldr	w0, [x19, #24]
  40be0c:	cmp	w0, #0x1
  40be10:	b.eq	40be3c <ferror@plt+0x949c>  // b.none
  40be14:	cmp	w0, #0x2
  40be18:	b.eq	40bda4 <ferror@plt+0x9404>  // b.none
  40be1c:	cbz	w0, 40be00 <ferror@plt+0x9460>
  40be20:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40be24:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40be28:	add	x2, x2, #0x3d8
  40be2c:	mov	w1, #0x0                   	// #0
  40be30:	ldr	w0, [x0, #1676]
  40be34:	bl	4033d0 <ferror@plt+0xa30>
  40be38:	bl	4026d0 <abort@plt>
  40be3c:	ldr	x0, [x19, #16]
  40be40:	bl	402390 <strlen@plt>
  40be44:	mov	x21, x0
  40be48:	ldr	x0, [x19, #32]
  40be4c:	bl	402390 <strlen@plt>
  40be50:	mov	w3, w0
  40be54:	mov	w2, w21
  40be58:	mov	x1, x22
  40be5c:	mov	x0, x20
  40be60:	bl	41cdb0 <ferror@plt+0x1a410>
  40be64:	ldr	x0, [x19, #16]
  40be68:	mov	x1, x20
  40be6c:	bl	4023a0 <fputs@plt>
  40be70:	ldr	x0, [x19, #32]
  40be74:	mov	x1, x20
  40be78:	bl	4023a0 <fputs@plt>
  40be7c:	mov	x1, x20
  40be80:	mov	w0, #0xa                   	// #10
  40be84:	bl	402460 <fputc@plt>
  40be88:	ldr	x19, [x19]
  40be8c:	cbnz	x19, 40be08 <ferror@plt+0x9468>
  40be90:	ldr	x2, [x26, #3616]
  40be94:	ldr	x4, [x27, #856]
  40be98:	add	x3, x2, x25
  40be9c:	ldr	x0, [x2, x25]
  40bea0:	cbnz	x0, 40beac <ferror@plt+0x950c>
  40bea4:	b	40bebc <ferror@plt+0x951c>
  40bea8:	mov	x0, x1
  40beac:	ldr	x1, [x0]
  40beb0:	str	x19, [x0]
  40beb4:	mov	x19, x0
  40beb8:	cbnz	x1, 40bea8 <ferror@plt+0x9508>
  40bebc:	str	x0, [x3]
  40bec0:	add	x24, x24, #0x1
  40bec4:	cmp	x24, x4
  40bec8:	b.cc	40bd70 <ferror@plt+0x93d0>  // b.lo, b.ul, b.last
  40becc:	ldp	x23, x24, [sp, #48]
  40bed0:	ldp	x25, x26, [sp, #64]
  40bed4:	mov	x0, x20
  40bed8:	bl	410f78 <ferror@plt+0xe5d8>
  40bedc:	mov	x3, x20
  40bee0:	mov	x2, #0x1b                  	// #27
  40bee4:	mov	x1, #0x1                   	// #1
  40bee8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40beec:	add	x0, x0, #0x370
  40bef0:	bl	402830 <fwrite@plt>
  40bef4:	mov	x0, x20
  40bef8:	bl	4153d8 <ferror@plt+0x12a38>
  40befc:	cbnz	w0, 40bf54 <ferror@plt+0x95b4>
  40bf00:	ldp	x19, x20, [sp, #16]
  40bf04:	ldp	x21, x22, [sp, #32]
  40bf08:	ldp	x27, x28, [sp, #80]
  40bf0c:	ldp	x29, x30, [sp], #96
  40bf10:	ret
  40bf14:	mov	x0, #0x0                   	// #0
  40bf18:	str	x0, [x3]
  40bf1c:	add	x24, x24, #0x1
  40bf20:	cmp	x24, x4
  40bf24:	b.cc	40bd70 <ferror@plt+0x93d0>  // b.lo, b.ul, b.last
  40bf28:	b	40becc <ferror@plt+0x952c>
  40bf2c:	ldrb	w0, [x0, #1]
  40bf30:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bf34:	cbnz	w0, 40bcf8 <ferror@plt+0x9358>
  40bf38:	ldr	x0, [x19, #3576]
  40bf3c:	ldrb	w1, [x0]
  40bf40:	cmp	w1, #0xa
  40bf44:	b.ne	40bcf8 <ferror@plt+0x9358>  // b.any
  40bf48:	ldrb	w0, [x0, #1]
  40bf4c:	cbz	w0, 40bd3c <ferror@plt+0x939c>
  40bf50:	b	40bcf8 <ferror@plt+0x9358>
  40bf54:	bl	402920 <__errno_location@plt>
  40bf58:	mov	x1, x0
  40bf5c:	ldp	x19, x20, [sp, #16]
  40bf60:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bf64:	ldp	x21, x22, [sp, #32]
  40bf68:	add	x2, x2, #0x418
  40bf6c:	ldp	x27, x28, [sp, #80]
  40bf70:	mov	w0, #0x1                   	// #1
  40bf74:	ldp	x29, x30, [sp], #96
  40bf78:	ldr	w1, [x1]
  40bf7c:	b	4033d0 <ferror@plt+0xa30>
  40bf80:	bl	402920 <__errno_location@plt>
  40bf84:	mov	x1, x0
  40bf88:	mov	x3, x19
  40bf8c:	adrp	x2, 41d000 <ferror@plt+0x1a660>
  40bf90:	ldp	x19, x20, [sp, #16]
  40bf94:	add	x2, x2, #0xf58
  40bf98:	ldp	x29, x30, [sp], #96
  40bf9c:	mov	w0, #0x1                   	// #1
  40bfa0:	ldr	w1, [x1]
  40bfa4:	b	4033d0 <ferror@plt+0xa30>
  40bfa8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40bfac:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40bfb0:	add	x2, x2, #0x398
  40bfb4:	mov	w1, #0x0                   	// #0
  40bfb8:	ldr	w0, [x0, #1676]
  40bfbc:	bl	4033d0 <ferror@plt+0xa30>
  40bfc0:	bl	4026d0 <abort@plt>
  40bfc4:	nop
  40bfc8:	stp	x29, x30, [sp, #-144]!
  40bfcc:	mov	x1, #0x0                   	// #0
  40bfd0:	mov	x29, sp
  40bfd4:	stp	x19, x20, [sp, #16]
  40bfd8:	mov	x19, x0
  40bfdc:	stp	x21, x22, [sp, #32]
  40bfe0:	stp	x23, x24, [sp, #48]
  40bfe4:	stp	x25, x26, [sp, #64]
  40bfe8:	stp	x27, x28, [sp, #80]
  40bfec:	bl	4113d8 <ferror@plt+0xea38>
  40bff0:	mov	x21, x0
  40bff4:	cbz	x0, 40c860 <ferror@plt+0x9ec0>
  40bff8:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40bffc:	add	x20, x1, #0xdc8
  40c000:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40c004:	mov	x0, #0x64                  	// #100
  40c008:	str	x19, [x1, #3552]
  40c00c:	bl	41ca30 <ferror@plt+0x1a090>
  40c010:	mov	x28, x0
  40c014:	mov	x0, #0x64                  	// #100
  40c018:	bl	41ca30 <ferror@plt+0x1a090>
  40c01c:	mov	x25, x0
  40c020:	ldr	w1, [x20]
  40c024:	mov	x0, x21
  40c028:	add	w1, w1, #0x1
  40c02c:	str	w1, [x20]
  40c030:	bl	402640 <getc@plt>
  40c034:	cmp	w0, #0xa
  40c038:	b.eq	40c020 <ferror@plt+0x9680>  // b.none
  40c03c:	cmp	w0, #0x23
  40c040:	b.eq	40c3d8 <ferror@plt+0x9a38>  // b.none
  40c044:	cmp	w0, #0x56
  40c048:	b.ne	40c404 <ferror@plt+0x9a64>  // b.any
  40c04c:	mov	x0, x21
  40c050:	bl	402640 <getc@plt>
  40c054:	cmp	w0, #0xa
  40c058:	mov	w23, #0xcccc                	// #52428
  40c05c:	mov	w19, w0
  40c060:	cset	w26, eq  // eq = none
  40c064:	mov	w24, #0x0                   	// #0
  40c068:	movk	w23, #0xccc, lsl #16
  40c06c:	bl	402770 <__ctype_b_loc@plt>
  40c070:	mov	x22, x0
  40c074:	b	40c0a4 <ferror@plt+0x9704>
  40c078:	cmp	w24, w23
  40c07c:	b.hi	40c420 <ferror@plt+0x9a80>  // b.pmore
  40c080:	sub	w24, w1, #0x30
  40c084:	cbz	w26, 40c094 <ferror@plt+0x96f4>
  40c088:	ldr	w1, [x20]
  40c08c:	add	w1, w1, #0x1
  40c090:	str	w1, [x20]
  40c094:	bl	402640 <getc@plt>
  40c098:	cmp	w0, #0xa
  40c09c:	mov	w19, w0
  40c0a0:	cset	w26, eq  // eq = none
  40c0a4:	ldr	x2, [x22]
  40c0a8:	add	w1, w24, w24, lsl #2
  40c0ac:	mov	x0, x21
  40c0b0:	add	w1, w19, w1, lsl #1
  40c0b4:	ldrh	w2, [x2, w19, sxtw #1]
  40c0b8:	tbnz	w2, #11, 40c078 <ferror@plt+0x96d8>
  40c0bc:	tbnz	w24, #31, 40c420 <ferror@plt+0x9a80>
  40c0c0:	cmp	w24, #0x1
  40c0c4:	b.gt	40c43c <ferror@plt+0x9a9c>
  40c0c8:	b.ne	40c51c <ferror@plt+0x9b7c>  // b.any
  40c0cc:	cmp	w19, #0xa
  40c0d0:	b.eq	40c0e8 <ferror@plt+0x9748>  // b.none
  40c0d4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c0d8:	mov	w1, #0x0                   	// #0
  40c0dc:	add	x2, x2, #0x500
  40c0e0:	mov	w0, #0x1                   	// #1
  40c0e4:	bl	4033d0 <ferror@plt+0xa30>
  40c0e8:	cbnz	w26, 40c4cc <ferror@plt+0x9b2c>
  40c0ec:	nop
  40c0f0:	mov	x0, x21
  40c0f4:	bl	402640 <getc@plt>
  40c0f8:	mov	w19, w0
  40c0fc:	cmp	w0, #0xa
  40c100:	b.eq	40c4cc <ferror@plt+0x9b2c>  // b.none
  40c104:	cmp	w0, #0x23
  40c108:	b.eq	40c458 <ferror@plt+0x9ab8>  // b.none
  40c10c:	cmn	w0, #0x1
  40c110:	b.eq	40c484 <ferror@plt+0x9ae4>  // b.none
  40c114:	mov	w0, #0x64                  	// #100
  40c118:	mov	x26, #0x400b                	// #16395
  40c11c:	mov	w24, #0xcccc                	// #52428
  40c120:	mov	w1, w0
  40c124:	movk	x26, #0x2, lsl #16
  40c128:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40c12c:	movk	w24, #0xccc, lsl #16
  40c130:	add	x0, x0, #0x528
  40c134:	str	w1, [sp, #124]
  40c138:	str	w1, [sp, #132]
  40c13c:	str	x0, [sp, #136]
  40c140:	sub	w1, w19, #0x43
  40c144:	cmp	w1, #0x11
  40c148:	b.hi	40c15c <ferror@plt+0x97bc>  // b.pmore
  40c14c:	mov	x0, #0x1                   	// #1
  40c150:	lsl	x0, x0, x1
  40c154:	tst	x0, x26
  40c158:	b.ne	40c16c <ferror@plt+0x97cc>  // b.any
  40c15c:	ldr	x2, [sp, #136]
  40c160:	mov	w1, #0x0                   	// #0
  40c164:	mov	w0, #0x1                   	// #1
  40c168:	bl	4033d0 <ferror@plt+0xa30>
  40c16c:	mov	x0, x21
  40c170:	bl	402640 <getc@plt>
  40c174:	mov	w23, w0
  40c178:	cmp	w0, #0xa
  40c17c:	b.eq	40c534 <ferror@plt+0x9b94>  // b.none
  40c180:	cmp	w19, #0x44
  40c184:	cset	w4, eq  // eq = none
  40c188:	cmp	w0, #0x2d
  40c18c:	csel	w4, w4, wzr, eq  // eq = none
  40c190:	sbfiz	x0, x0, #1, #32
  40c194:	cbz	w4, 40c53c <ferror@plt+0x9b9c>
  40c198:	mov	x0, x21
  40c19c:	bl	402640 <getc@plt>
  40c1a0:	ldr	x1, [x22]
  40c1a4:	mov	w23, w0
  40c1a8:	cmp	w0, #0xa
  40c1ac:	cset	w4, eq  // eq = none
  40c1b0:	ldrh	w0, [x1, w23, sxtw #1]
  40c1b4:	tbz	w0, #11, 40c7e0 <ferror@plt+0x9e40>
  40c1b8:	mov	w27, #0x0                   	// #0
  40c1bc:	b	40c1c8 <ferror@plt+0x9828>
  40c1c0:	cmp	w27, w24
  40c1c4:	b.hi	40c748 <ferror@plt+0x9da8>  // b.pmore
  40c1c8:	add	w27, w27, w27, lsl #2
  40c1cc:	mov	x0, x21
  40c1d0:	add	w23, w23, w27, lsl #1
  40c1d4:	sub	w27, w23, #0x30
  40c1d8:	cbz	w4, 40c1e8 <ferror@plt+0x9848>
  40c1dc:	ldr	w1, [x20]
  40c1e0:	add	w1, w1, #0x1
  40c1e4:	str	w1, [x20]
  40c1e8:	bl	402640 <getc@plt>
  40c1ec:	mov	w23, w0
  40c1f0:	ldr	x1, [x22]
  40c1f4:	cmp	w0, #0xa
  40c1f8:	cset	w4, eq  // eq = none
  40c1fc:	ldrh	w0, [x1, w23, sxtw #1]
  40c200:	tbnz	w0, #11, 40c1c0 <ferror@plt+0x9820>
  40c204:	neg	w1, w27
  40c208:	str	w1, [sp, #128]
  40c20c:	mov	w0, #0x80000000            	// #-2147483648
  40c210:	cmp	w27, w0
  40c214:	b.hi	40c5a0 <ferror@plt+0x9c00>  // b.pmore
  40c218:	cmp	w23, #0x2c
  40c21c:	b.eq	40c240 <ferror@plt+0x98a0>  // b.none
  40c220:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c224:	mov	w3, #0x2c                  	// #44
  40c228:	add	x2, x2, #0x448
  40c22c:	mov	w1, #0x0                   	// #0
  40c230:	mov	w0, #0x1                   	// #1
  40c234:	str	w4, [sp, #104]
  40c238:	bl	4033d0 <ferror@plt+0xa30>
  40c23c:	ldr	w4, [sp, #104]
  40c240:	cbz	w4, 40c250 <ferror@plt+0x98b0>
  40c244:	ldr	w0, [x20]
  40c248:	add	w0, w0, #0x1
  40c24c:	str	w0, [x20]
  40c250:	mov	x0, x21
  40c254:	bl	402640 <getc@plt>
  40c258:	ldr	x1, [x22]
  40c25c:	mov	w3, w0
  40c260:	cmp	w0, #0xa
  40c264:	cset	w23, eq  // eq = none
  40c268:	ldrh	w0, [x1, w3, sxtw #1]
  40c26c:	tbz	w0, #11, 40c810 <ferror@plt+0x9e70>
  40c270:	mov	w27, #0x0                   	// #0
  40c274:	b	40c280 <ferror@plt+0x98e0>
  40c278:	cmp	w27, w24
  40c27c:	b.hi	40c5c0 <ferror@plt+0x9c20>  // b.pmore
  40c280:	add	w27, w27, w27, lsl #2
  40c284:	mov	x0, x21
  40c288:	add	w27, w3, w27, lsl #1
  40c28c:	sub	w27, w27, #0x30
  40c290:	cbz	w23, 40c2a0 <ferror@plt+0x9900>
  40c294:	ldr	w1, [x20]
  40c298:	add	w1, w1, #0x1
  40c29c:	str	w1, [x20]
  40c2a0:	bl	402640 <getc@plt>
  40c2a4:	mov	w3, w0
  40c2a8:	ldr	x1, [x22]
  40c2ac:	cmp	w0, #0xa
  40c2b0:	cset	w23, eq  // eq = none
  40c2b4:	ldrh	w0, [x1, w3, sxtw #1]
  40c2b8:	tbnz	w0, #11, 40c278 <ferror@plt+0x98d8>
  40c2bc:	sxtw	x1, w27
  40c2c0:	str	x1, [sp, #112]
  40c2c4:	str	w1, [sp, #120]
  40c2c8:	mov	x27, x1
  40c2cc:	tbnz	w1, #31, 40c5d0 <ferror@plt+0x9c30>
  40c2d0:	cmp	w3, #0xa
  40c2d4:	b.eq	40c2ec <ferror@plt+0x994c>  // b.none
  40c2d8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c2dc:	mov	w1, #0x0                   	// #0
  40c2e0:	add	x2, x2, #0x500
  40c2e4:	mov	w0, #0x1                   	// #1
  40c2e8:	bl	4033d0 <ferror@plt+0xa30>
  40c2ec:	cmp	w19, #0x44
  40c2f0:	b.ne	40c660 <ferror@plt+0x9cc0>  // b.any
  40c2f4:	ldp	w1, w0, [sp, #120]
  40c2f8:	cmp	w0, w1
  40c2fc:	b.le	40c5f0 <ferror@plt+0x9c50>
  40c300:	ldr	w0, [sp, #120]
  40c304:	cmp	w0, #0x0
  40c308:	b.gt	40c60c <ferror@plt+0x9c6c>
  40c30c:	ldr	x1, [sp, #112]
  40c310:	mov	x0, x25
  40c314:	strb	wzr, [x25, x1]
  40c318:	b	40c32c <ferror@plt+0x998c>
  40c31c:	ldr	w1, [x20]
  40c320:	add	x0, x0, #0x1
  40c324:	add	w1, w1, #0x1
  40c328:	str	w1, [x20]
  40c32c:	sub	x2, x0, x25
  40c330:	mov	w1, #0xa                   	// #10
  40c334:	sub	x2, x27, x2
  40c338:	bl	402880 <memchr@plt>
  40c33c:	cbnz	x0, 40c31c <ferror@plt+0x997c>
  40c340:	cbz	w23, 40c350 <ferror@plt+0x99b0>
  40c344:	ldr	w0, [x20]
  40c348:	add	w0, w0, #0x1
  40c34c:	str	w0, [x20]
  40c350:	mov	x0, x21
  40c354:	bl	402640 <getc@plt>
  40c358:	cmp	w0, #0xa
  40c35c:	b.eq	40c6d4 <ferror@plt+0x9d34>  // b.none
  40c360:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c364:	mov	w1, #0x0                   	// #0
  40c368:	add	x2, x2, #0x500
  40c36c:	mov	w0, #0x1                   	// #1
  40c370:	bl	4033d0 <ferror@plt+0xa30>
  40c374:	cmp	w19, #0x46
  40c378:	b.eq	40c7c4 <ferror@plt+0x9e24>  // b.none
  40c37c:	b.gt	40c63c <ferror@plt+0x9c9c>
  40c380:	cmp	w19, #0x43
  40c384:	b.eq	40c840 <ferror@plt+0x9ea0>  // b.none
  40c388:	cmp	w19, #0x44
  40c38c:	b.ne	40c3b0 <ferror@plt+0x9a10>  // b.any
  40c390:	ldr	w0, [sp, #128]
  40c394:	bl	410a28 <ferror@plt+0xe088>
  40c398:	ldr	w0, [sp, #120]
  40c39c:	cmp	w0, #0x0
  40c3a0:	b.le	40c3b0 <ferror@plt+0x9a10>
  40c3a4:	mov	w1, w0
  40c3a8:	mov	x0, x25
  40c3ac:	bl	40f8b0 <ferror@plt+0xcf10>
  40c3b0:	mov	x0, x21
  40c3b4:	bl	402640 <getc@plt>
  40c3b8:	mov	w19, w0
  40c3bc:	cmp	w0, #0xa
  40c3c0:	b.eq	40c50c <ferror@plt+0x9b6c>  // b.none
  40c3c4:	cmp	w0, #0x23
  40c3c8:	b.eq	40c4e4 <ferror@plt+0x9b44>  // b.none
  40c3cc:	cmn	w0, #0x1
  40c3d0:	b.ne	40c140 <ferror@plt+0x97a0>  // b.any
  40c3d4:	b	40c484 <ferror@plt+0x9ae4>
  40c3d8:	mov	x0, x21
  40c3dc:	bl	402640 <getc@plt>
  40c3e0:	cmp	w0, #0xa
  40c3e4:	b.eq	40c020 <ferror@plt+0x9680>  // b.none
  40c3e8:	cmn	w0, #0x1
  40c3ec:	b.ne	40c3d8 <ferror@plt+0x9a38>  // b.any
  40c3f0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c3f4:	mov	w1, #0x0                   	// #0
  40c3f8:	add	x2, x2, #0x500
  40c3fc:	mov	w0, #0x1                   	// #1
  40c400:	bl	4033d0 <ferror@plt+0xa30>
  40c404:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c408:	mov	w3, #0x56                  	// #86
  40c40c:	add	x2, x2, #0x448
  40c410:	mov	w1, #0x0                   	// #0
  40c414:	mov	w0, #0x1                   	// #1
  40c418:	bl	4033d0 <ferror@plt+0xa30>
  40c41c:	b	40c04c <ferror@plt+0x96ac>
  40c420:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c424:	mov	w1, #0x0                   	// #0
  40c428:	add	x2, x2, #0x470
  40c42c:	mov	w0, #0x1                   	// #1
  40c430:	bl	4033d0 <ferror@plt+0xa30>
  40c434:	cmp	w24, #0x1
  40c438:	b.le	40c51c <ferror@plt+0x9b7c>
  40c43c:	mov	w3, w24
  40c440:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c444:	mov	w1, #0x0                   	// #0
  40c448:	add	x2, x2, #0x490
  40c44c:	mov	w0, #0x3f                  	// #63
  40c450:	bl	4033d0 <ferror@plt+0xa30>
  40c454:	b	40c0cc <ferror@plt+0x972c>
  40c458:	mov	x0, x21
  40c45c:	bl	402640 <getc@plt>
  40c460:	cmp	w0, #0xa
  40c464:	b.eq	40c4cc <ferror@plt+0x9b2c>  // b.none
  40c468:	cmn	w0, #0x1
  40c46c:	b.ne	40c458 <ferror@plt+0x9ab8>  // b.any
  40c470:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c474:	mov	w1, #0x0                   	// #0
  40c478:	add	x2, x2, #0x500
  40c47c:	mov	w0, #0x1                   	// #1
  40c480:	bl	4033d0 <ferror@plt+0xa30>
  40c484:	mov	x0, x28
  40c488:	bl	4027c0 <free@plt>
  40c48c:	mov	x0, x25
  40c490:	bl	4027c0 <free@plt>
  40c494:	mov	x0, x21
  40c498:	bl	4153d8 <ferror@plt+0x12a38>
  40c49c:	cbnz	w0, 40c820 <ferror@plt+0x9e80>
  40c4a0:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40c4a4:	ldp	x19, x20, [sp, #16]
  40c4a8:	str	xzr, [x0, #3552]
  40c4ac:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40c4b0:	ldp	x21, x22, [sp, #32]
  40c4b4:	str	wzr, [x0, #3528]
  40c4b8:	ldp	x23, x24, [sp, #48]
  40c4bc:	ldp	x25, x26, [sp, #64]
  40c4c0:	ldp	x27, x28, [sp, #80]
  40c4c4:	ldp	x29, x30, [sp], #144
  40c4c8:	ret
  40c4cc:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40c4d0:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40c4d4:	ldr	w0, [x0, #3528]
  40c4d8:	add	w0, w0, #0x1
  40c4dc:	str	w0, [x1, #3528]
  40c4e0:	b	40c0f0 <ferror@plt+0x9750>
  40c4e4:	mov	x0, x21
  40c4e8:	bl	402640 <getc@plt>
  40c4ec:	cmp	w0, #0xa
  40c4f0:	b.eq	40c50c <ferror@plt+0x9b6c>  // b.none
  40c4f4:	cmn	w0, #0x1
  40c4f8:	b.eq	40c470 <ferror@plt+0x9ad0>  // b.none
  40c4fc:	mov	x0, x21
  40c500:	bl	402640 <getc@plt>
  40c504:	cmp	w0, #0xa
  40c508:	b.ne	40c4f4 <ferror@plt+0x9b54>  // b.any
  40c50c:	ldr	w0, [x20]
  40c510:	add	w0, w0, #0x1
  40c514:	str	w0, [x20]
  40c518:	b	40c3b0 <ferror@plt+0x9a10>
  40c51c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c520:	mov	w1, #0x0                   	// #0
  40c524:	add	x2, x2, #0x4c8
  40c528:	mov	w0, #0x1                   	// #1
  40c52c:	bl	4033d0 <ferror@plt+0xa30>
  40c530:	b	40c0cc <ferror@plt+0x972c>
  40c534:	mov	x0, #0x14                  	// #20
  40c538:	mov	w4, #0x1                   	// #1
  40c53c:	ldr	x1, [x22]
  40c540:	mov	w27, #0x0                   	// #0
  40c544:	ldrh	w0, [x1, x0]
  40c548:	tbnz	w0, #11, 40c558 <ferror@plt+0x9bb8>
  40c54c:	b	40c7e0 <ferror@plt+0x9e40>
  40c550:	cmp	w27, w24
  40c554:	b.hi	40c740 <ferror@plt+0x9da0>  // b.pmore
  40c558:	add	w27, w27, w27, lsl #2
  40c55c:	mov	x0, x21
  40c560:	add	w23, w23, w27, lsl #1
  40c564:	sub	w27, w23, #0x30
  40c568:	cbz	w4, 40c578 <ferror@plt+0x9bd8>
  40c56c:	ldr	w1, [x20]
  40c570:	add	w1, w1, #0x1
  40c574:	str	w1, [x20]
  40c578:	bl	402640 <getc@plt>
  40c57c:	mov	w23, w0
  40c580:	ldr	x1, [x22]
  40c584:	cmp	w0, #0xa
  40c588:	cset	w4, eq  // eq = none
  40c58c:	ldrh	w0, [x1, w23, sxtw #1]
  40c590:	tbnz	w0, #11, 40c550 <ferror@plt+0x9bb0>
  40c594:	str	w27, [sp, #128]
  40c598:	tbz	w27, #31, 40c218 <ferror@plt+0x9878>
  40c59c:	nop
  40c5a0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c5a4:	mov	w1, #0x0                   	// #0
  40c5a8:	add	x2, x2, #0x470
  40c5ac:	mov	w0, #0x1                   	// #1
  40c5b0:	str	w4, [sp, #104]
  40c5b4:	bl	4033d0 <ferror@plt+0xa30>
  40c5b8:	ldr	w4, [sp, #104]
  40c5bc:	b	40c218 <ferror@plt+0x9878>
  40c5c0:	sxtw	x0, w27
  40c5c4:	str	w27, [sp, #120]
  40c5c8:	mov	x27, x0
  40c5cc:	str	x0, [sp, #112]
  40c5d0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c5d4:	mov	w1, #0x0                   	// #0
  40c5d8:	add	x2, x2, #0x470
  40c5dc:	mov	w0, #0x1                   	// #1
  40c5e0:	str	w3, [sp, #104]
  40c5e4:	bl	4033d0 <ferror@plt+0xa30>
  40c5e8:	ldr	w3, [sp, #104]
  40c5ec:	b	40c2d0 <ferror@plt+0x9930>
  40c5f0:	add	w0, w1, #0x1
  40c5f4:	str	w0, [sp, #124]
  40c5f8:	mov	x0, x25
  40c5fc:	bl	4027c0 <free@plt>
  40c600:	ldrsw	x0, [sp, #124]
  40c604:	bl	41ca30 <ferror@plt+0x1a090>
  40c608:	mov	x25, x0
  40c60c:	ldr	x1, [sp, #112]
  40c610:	mov	x3, x21
  40c614:	mov	x0, x25
  40c618:	mov	x2, #0x1                   	// #1
  40c61c:	bl	4027b0 <fread@plt>
  40c620:	cbnz	x0, 40c30c <ferror@plt+0x996c>
  40c624:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c628:	mov	w1, #0x0                   	// #0
  40c62c:	add	x2, x2, #0x540
  40c630:	mov	w0, #0x1                   	// #1
  40c634:	bl	4033d0 <ferror@plt+0xa30>
  40c638:	b	40c30c <ferror@plt+0x996c>
  40c63c:	cmp	w19, #0x51
  40c640:	b.eq	40c850 <ferror@plt+0x9eb0>  // b.none
  40c644:	cmp	w19, #0x54
  40c648:	b.ne	40c3b0 <ferror@plt+0x9a10>  // b.any
  40c64c:	mov	x1, x25
  40c650:	mov	x0, x28
  40c654:	mov	w2, #0x3                   	// #3
  40c658:	bl	408418 <ferror@plt+0x5a78>
  40c65c:	b	40c3b0 <ferror@plt+0x9a10>
  40c660:	ldp	w1, w0, [sp, #128]
  40c664:	cmp	w0, w1
  40c668:	b.le	40c78c <ferror@plt+0x9dec>
  40c66c:	ldr	w0, [sp, #128]
  40c670:	cmp	w0, #0x0
  40c674:	sxtw	x0, w0
  40c678:	str	x0, [sp, #104]
  40c67c:	b.le	40c698 <ferror@plt+0x9cf8>
  40c680:	mov	x1, x0
  40c684:	mov	x3, x21
  40c688:	mov	x0, x28
  40c68c:	mov	x2, #0x1                   	// #1
  40c690:	bl	4027b0 <fread@plt>
  40c694:	cbz	x0, 40c7ac <ferror@plt+0x9e0c>
  40c698:	ldr	x1, [sp, #104]
  40c69c:	mov	x0, x28
  40c6a0:	strb	wzr, [x28, x1]
  40c6a4:	b	40c6b8 <ferror@plt+0x9d18>
  40c6a8:	ldr	w1, [x20]
  40c6ac:	add	x0, x0, #0x1
  40c6b0:	add	w1, w1, #0x1
  40c6b4:	str	w1, [x20]
  40c6b8:	ldr	x1, [sp, #104]
  40c6bc:	sub	x2, x0, x28
  40c6c0:	sub	x2, x1, x2
  40c6c4:	mov	w1, #0xa                   	// #10
  40c6c8:	bl	402880 <memchr@plt>
  40c6cc:	cbnz	x0, 40c6a8 <ferror@plt+0x9d08>
  40c6d0:	b	40c2f4 <ferror@plt+0x9954>
  40c6d4:	cmp	w19, #0x46
  40c6d8:	b.eq	40c7e8 <ferror@plt+0x9e48>  // b.none
  40c6dc:	b.gt	40c710 <ferror@plt+0x9d70>
  40c6e0:	cmp	w19, #0x43
  40c6e4:	b.eq	40c754 <ferror@plt+0x9db4>  // b.none
  40c6e8:	cmp	w19, #0x44
  40c6ec:	b.ne	40c50c <ferror@plt+0x9b6c>  // b.any
  40c6f0:	ldr	w0, [sp, #128]
  40c6f4:	bl	410a28 <ferror@plt+0xe088>
  40c6f8:	ldr	w1, [sp, #120]
  40c6fc:	cmp	w1, #0x0
  40c700:	b.le	40c50c <ferror@plt+0x9b6c>
  40c704:	mov	x0, x25
  40c708:	bl	40f8b0 <ferror@plt+0xcf10>
  40c70c:	b	40c50c <ferror@plt+0x9b6c>
  40c710:	cmp	w19, #0x51
  40c714:	b.eq	40c770 <ferror@plt+0x9dd0>  // b.none
  40c718:	cmp	w19, #0x54
  40c71c:	b.ne	40c50c <ferror@plt+0x9b6c>  // b.any
  40c720:	mov	x0, x28
  40c724:	mov	x1, x25
  40c728:	mov	w2, #0x3                   	// #3
  40c72c:	bl	408418 <ferror@plt+0x5a78>
  40c730:	ldr	w0, [x20]
  40c734:	add	w0, w0, #0x1
  40c738:	str	w0, [x20]
  40c73c:	b	40c3b0 <ferror@plt+0x9a10>
  40c740:	str	w27, [sp, #128]
  40c744:	b	40c5a0 <ferror@plt+0x9c00>
  40c748:	neg	w0, w27
  40c74c:	str	w0, [sp, #128]
  40c750:	b	40c5a0 <ferror@plt+0x9c00>
  40c754:	mov	x0, x28
  40c758:	mov	x1, x25
  40c75c:	bl	40d9a0 <ferror@plt+0xb000>
  40c760:	ldr	w0, [x20]
  40c764:	add	w0, w0, #0x1
  40c768:	str	w0, [x20]
  40c76c:	b	40c3b0 <ferror@plt+0x9a10>
  40c770:	mov	x0, x28
  40c774:	mov	x1, x25
  40c778:	bl	40d8e0 <ferror@plt+0xaf40>
  40c77c:	ldr	w0, [x20]
  40c780:	add	w0, w0, #0x1
  40c784:	str	w0, [x20]
  40c788:	b	40c3b0 <ferror@plt+0x9a10>
  40c78c:	add	w0, w1, #0x1
  40c790:	str	w0, [sp, #132]
  40c794:	mov	x0, x28
  40c798:	bl	4027c0 <free@plt>
  40c79c:	ldrsw	x0, [sp, #132]
  40c7a0:	bl	41ca30 <ferror@plt+0x1a090>
  40c7a4:	mov	x28, x0
  40c7a8:	b	40c66c <ferror@plt+0x9ccc>
  40c7ac:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c7b0:	mov	w1, #0x0                   	// #0
  40c7b4:	add	x2, x2, #0x540
  40c7b8:	mov	w0, #0x1                   	// #1
  40c7bc:	bl	4033d0 <ferror@plt+0xa30>
  40c7c0:	b	40c698 <ferror@plt+0x9cf8>
  40c7c4:	mov	x0, x25
  40c7c8:	bl	408270 <ferror@plt+0x58d0>
  40c7cc:	mov	w2, #0x3                   	// #3
  40c7d0:	mov	x1, x0
  40c7d4:	mov	x0, x28
  40c7d8:	bl	4082d8 <ferror@plt+0x5938>
  40c7dc:	b	40c3b0 <ferror@plt+0x9a10>
  40c7e0:	str	wzr, [sp, #128]
  40c7e4:	b	40c218 <ferror@plt+0x9878>
  40c7e8:	mov	x0, x25
  40c7ec:	bl	408270 <ferror@plt+0x58d0>
  40c7f0:	mov	w2, #0x3                   	// #3
  40c7f4:	mov	x1, x0
  40c7f8:	mov	x0, x28
  40c7fc:	bl	4082d8 <ferror@plt+0x5938>
  40c800:	ldr	w0, [x20]
  40c804:	add	w0, w0, #0x1
  40c808:	str	w0, [x20]
  40c80c:	b	40c3b0 <ferror@plt+0x9a10>
  40c810:	mov	x27, #0x0                   	// #0
  40c814:	str	xzr, [sp, #112]
  40c818:	str	wzr, [sp, #120]
  40c81c:	b	40c2d0 <ferror@plt+0x9930>
  40c820:	bl	402920 <__errno_location@plt>
  40c824:	mov	x1, x0
  40c828:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c82c:	mov	w0, #0x1                   	// #1
  40c830:	add	x2, x2, #0x560
  40c834:	ldr	w1, [x1]
  40c838:	bl	4033d0 <ferror@plt+0xa30>
  40c83c:	b	40c4a0 <ferror@plt+0x9b00>
  40c840:	mov	x1, x25
  40c844:	mov	x0, x28
  40c848:	bl	40d9a0 <ferror@plt+0xb000>
  40c84c:	b	40c3b0 <ferror@plt+0x9a10>
  40c850:	mov	x1, x25
  40c854:	mov	x0, x28
  40c858:	bl	40d8e0 <ferror@plt+0xaf40>
  40c85c:	b	40c3b0 <ferror@plt+0x9a10>
  40c860:	bl	402920 <__errno_location@plt>
  40c864:	mov	x1, x0
  40c868:	mov	x3, x19
  40c86c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c870:	mov	w0, #0x1                   	// #1
  40c874:	add	x2, x2, #0x438
  40c878:	ldr	w1, [x1]
  40c87c:	bl	4033d0 <ferror@plt+0xa30>
  40c880:	b	40bff8 <ferror@plt+0x9658>
  40c884:	nop
  40c888:	stp	x29, x30, [sp, #-48]!
  40c88c:	mov	x29, sp
  40c890:	stp	x21, x22, [sp, #32]
  40c894:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  40c898:	stp	x19, x20, [sp, #16]
  40c89c:	ldr	x19, [x21, #2200]
  40c8a0:	ldr	w0, [x19, #8]
  40c8a4:	ldr	x22, [x19]
  40c8a8:	cmp	w0, #0x1
  40c8ac:	b.eq	40c8d8 <ferror@plt+0x9f38>  // b.none
  40c8b0:	add	x20, x21, #0x898
  40c8b4:	tst	w0, #0xfffffffd
  40c8b8:	b.eq	40c950 <ferror@plt+0x9fb0>  // b.none
  40c8bc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40c8c0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c8c4:	add	x2, x2, #0x5d8
  40c8c8:	mov	w1, #0x0                   	// #0
  40c8cc:	ldr	w0, [x0, #1676]
  40c8d0:	bl	4033d0 <ferror@plt+0xa30>
  40c8d4:	bl	4026d0 <abort@plt>
  40c8d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40c8dc:	ldr	w0, [x0, #1692]
  40c8e0:	tbz	w0, #8, 40c920 <ferror@plt+0x9f80>
  40c8e4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40c8e8:	ldr	x0, [x20, #2080]
  40c8ec:	cbz	x22, 40c9bc <ferror@plt+0xa01c>
  40c8f0:	cbz	x0, 40c920 <ferror@plt+0x9f80>
  40c8f4:	bl	409918 <ferror@plt+0x6f78>
  40c8f8:	ldr	w3, [x22, #24]
  40c8fc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40c900:	ldr	x0, [x20, #2080]
  40c904:	add	x1, x1, #0x580
  40c908:	ldr	x2, [x22, #16]
  40c90c:	bl	41cdb0 <ferror@plt+0x1a410>
  40c910:	ldr	x1, [x20, #2080]
  40c914:	mov	w0, #0xa                   	// #10
  40c918:	bl	402430 <putc@plt>
  40c91c:	ldr	x19, [x21, #2200]
  40c920:	ldr	x0, [x19, #32]
  40c924:	bl	4029a0 <ferror@plt>
  40c928:	cbnz	w0, 40c9e8 <ferror@plt+0xa048>
  40c92c:	ldrb	w0, [x19, #40]
  40c930:	tbnz	w0, #1, 40ca1c <ferror@plt+0xa07c>
  40c934:	ldrb	w0, [x19, #40]
  40c938:	add	x20, x21, #0x898
  40c93c:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40c940:	mov	w2, #0xffffffff            	// #-1
  40c944:	ubfx	x0, x0, #2, #1
  40c948:	str	w2, [x1, #3608]
  40c94c:	strb	w0, [x20, #8]
  40c950:	ldr	x0, [x20, #16]
  40c954:	ldr	x1, [x0, #8]
  40c958:	cmp	x1, x19
  40c95c:	b.cs	40c96c <ferror@plt+0x9fcc>  // b.hs, b.nlast
  40c960:	ldr	x1, [x0, #32]
  40c964:	cmp	x1, x19
  40c968:	b.hi	40c994 <ferror@plt+0x9ff4>  // b.pmore
  40c96c:	mov	x1, x19
  40c970:	bl	41d910 <_obstack_free@@Base>
  40c974:	mov	w0, #0x1                   	// #1
  40c978:	str	x22, [x21, #2200]
  40c97c:	strb	w0, [x20, #32]
  40c980:	ldp	x21, x22, [sp, #32]
  40c984:	str	xzr, [x20, #24]
  40c988:	ldp	x19, x20, [sp, #16]
  40c98c:	ldp	x29, x30, [sp], #48
  40c990:	ret
  40c994:	dup	v0.2d, x19
  40c998:	str	x22, [x21, #2200]
  40c99c:	ldp	x21, x22, [sp, #32]
  40c9a0:	str	xzr, [x20, #24]
  40c9a4:	str	q0, [x0, #16]
  40c9a8:	mov	w0, #0x1                   	// #1
  40c9ac:	strb	w0, [x20, #32]
  40c9b0:	ldp	x19, x20, [sp, #16]
  40c9b4:	ldp	x29, x30, [sp], #48
  40c9b8:	ret
  40c9bc:	cbz	x0, 40c920 <ferror@plt+0x9f80>
  40c9c0:	bl	409918 <ferror@plt+0x6f78>
  40c9c4:	ldr	x0, [x20, #2080]
  40c9c8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40c9cc:	add	x1, x1, #0x5a0
  40c9d0:	bl	41cdb0 <ferror@plt+0x1a410>
  40c9d4:	ldr	x1, [x20, #2080]
  40c9d8:	mov	w0, #0xa                   	// #10
  40c9dc:	bl	402430 <putc@plt>
  40c9e0:	ldr	x19, [x21, #2200]
  40c9e4:	b	40c920 <ferror@plt+0x9f80>
  40c9e8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40c9ec:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40c9f0:	mov	w1, #0x0                   	// #0
  40c9f4:	add	x2, x2, #0x5b0
  40c9f8:	ldr	w0, [x0, #1676]
  40c9fc:	bl	4033d0 <ferror@plt+0xa30>
  40ca00:	ldr	x19, [x21, #2200]
  40ca04:	ldrb	w0, [x19, #40]
  40ca08:	tbnz	w0, #1, 40ca34 <ferror@plt+0xa094>
  40ca0c:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40ca10:	mov	w1, #0x1                   	// #1
  40ca14:	str	w1, [x0, #3520]
  40ca18:	b	40c934 <ferror@plt+0x9f94>
  40ca1c:	ldr	x0, [x19, #32]
  40ca20:	bl	41d200 <ferror@plt+0x1a860>
  40ca24:	cmn	w0, #0x1
  40ca28:	b.eq	40ca44 <ferror@plt+0xa0a4>  // b.none
  40ca2c:	ldr	x19, [x21, #2200]
  40ca30:	b	40c934 <ferror@plt+0x9f94>
  40ca34:	ldr	x0, [x19, #32]
  40ca38:	bl	41d200 <ferror@plt+0x1a860>
  40ca3c:	ldr	x19, [x21, #2200]
  40ca40:	b	40ca0c <ferror@plt+0xa06c>
  40ca44:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ca48:	ldr	w19, [x0, #1676]
  40ca4c:	bl	402920 <__errno_location@plt>
  40ca50:	mov	x1, x0
  40ca54:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40ca58:	mov	w0, w19
  40ca5c:	add	x2, x2, #0x5c0
  40ca60:	ldr	w1, [x1]
  40ca64:	bl	4033d0 <ferror@plt+0xa30>
  40ca68:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40ca6c:	mov	w1, #0x1                   	// #1
  40ca70:	ldr	x19, [x21, #2200]
  40ca74:	str	w1, [x0, #3520]
  40ca78:	b	40c934 <ferror@plt+0x9f94>
  40ca7c:	nop
  40ca80:	stp	x29, x30, [sp, #-48]!
  40ca84:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ca88:	mov	x29, sp
  40ca8c:	stp	x19, x20, [sp, #16]
  40ca90:	add	x19, x0, #0x898
  40ca94:	ldr	x0, [x0, #2200]
  40ca98:	cbz	x0, 40cb38 <ferror@plt+0xa198>
  40ca9c:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40caa0:	add	x20, x20, #0xdc8
  40caa4:	str	x21, [sp, #32]
  40caa8:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40caac:	ldrb	w1, [x19, #32]
  40cab0:	cbz	w1, 40cac8 <ferror@plt+0xa128>
  40cab4:	ldr	x1, [x0, #16]
  40cab8:	str	x1, [x21, #3552]
  40cabc:	ldr	w1, [x0, #24]
  40cac0:	str	w1, [x20]
  40cac4:	strb	wzr, [x19, #32]
  40cac8:	ldr	w1, [x0, #8]
  40cacc:	cmp	w1, #0x1
  40cad0:	b.eq	40cb14 <ferror@plt+0xa174>  // b.none
  40cad4:	cmp	w1, #0x2
  40cad8:	b.ne	40caf4 <ferror@plt+0xa154>  // b.any
  40cadc:	bl	40c888 <ferror@plt+0x9ee8>
  40cae0:	ldr	x21, [sp, #32]
  40cae4:	mov	w0, #0x101                 	// #257
  40cae8:	ldp	x19, x20, [sp, #16]
  40caec:	ldp	x29, x30, [sp], #48
  40caf0:	ret
  40caf4:	cbz	w1, 40cb58 <ferror@plt+0xa1b8>
  40caf8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40cafc:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40cb00:	add	x2, x2, #0x610
  40cb04:	mov	w1, #0x0                   	// #0
  40cb08:	ldr	w0, [x0, #1676]
  40cb0c:	bl	4033d0 <ferror@plt+0xa30>
  40cb10:	bl	4026d0 <abort@plt>
  40cb14:	ldrb	w1, [x19, #8]
  40cb18:	cbnz	w1, 40cb74 <ferror@plt+0xa1d4>
  40cb1c:	ldrb	w1, [x0, #40]
  40cb20:	tbz	w1, #0, 40cb90 <ferror@plt+0xa1f0>
  40cb24:	nop
  40cb28:	bl	40c888 <ferror@plt+0x9ee8>
  40cb2c:	ldr	x0, [x19]
  40cb30:	cbnz	x0, 40caac <ferror@plt+0xa10c>
  40cb34:	ldr	x21, [sp, #32]
  40cb38:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40cb3c:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40cb40:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  40cb44:	mov	w0, #0x100                 	// #256
  40cb48:	add	x1, x1, #0xe8
  40cb4c:	str	wzr, [x3, #3528]
  40cb50:	str	x1, [x2, #3552]
  40cb54:	b	40cae8 <ferror@plt+0xa148>
  40cb58:	ldr	x1, [x0, #32]
  40cb5c:	add	x2, x1, #0x1
  40cb60:	str	x2, [x0, #32]
  40cb64:	ldrb	w0, [x1]
  40cb68:	cbz	w0, 40cb28 <ferror@plt+0xa188>
  40cb6c:	ldr	x21, [sp, #32]
  40cb70:	b	40cae8 <ferror@plt+0xa148>
  40cb74:	ldr	w1, [x0, #24]
  40cb78:	strb	wzr, [x19, #8]
  40cb7c:	add	w1, w1, #0x1
  40cb80:	str	w1, [x20]
  40cb84:	str	w1, [x0, #24]
  40cb88:	ldrb	w1, [x0, #40]
  40cb8c:	tbnz	w1, #0, 40cb28 <ferror@plt+0xa188>
  40cb90:	ldr	x0, [x0, #32]
  40cb94:	bl	402640 <getc@plt>
  40cb98:	cmn	w0, #0x1
  40cb9c:	b.eq	40cb28 <ferror@plt+0xa188>  // b.none
  40cba0:	cmp	w0, #0xa
  40cba4:	b.ne	40cb6c <ferror@plt+0xa1cc>  // b.any
  40cba8:	mov	w1, #0x1                   	// #1
  40cbac:	strb	w1, [x19, #8]
  40cbb0:	ldr	x21, [sp, #32]
  40cbb4:	b	40cae8 <ferror@plt+0xa148>
  40cbb8:	stp	x29, x30, [sp, #-32]!
  40cbbc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40cbc0:	mov	x29, sp
  40cbc4:	stp	x19, x20, [sp, #16]
  40cbc8:	ldr	x19, [x0, #2200]
  40cbcc:	cbz	x19, 40cc40 <ferror@plt+0xa2a0>
  40cbd0:	ldr	w0, [x19, #8]
  40cbd4:	cmp	w0, #0x1
  40cbd8:	b.eq	40cc18 <ferror@plt+0xa278>  // b.none
  40cbdc:	cmp	w0, #0x2
  40cbe0:	b.ne	40cbf8 <ferror@plt+0xa258>  // b.any
  40cbe4:	mov	w20, #0x101                 	// #257
  40cbe8:	mov	w0, w20
  40cbec:	ldp	x19, x20, [sp, #16]
  40cbf0:	ldp	x29, x30, [sp], #32
  40cbf4:	ret
  40cbf8:	cbz	w0, 40cc48 <ferror@plt+0xa2a8>
  40cbfc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40cc00:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40cc04:	add	x2, x2, #0x648
  40cc08:	mov	w1, #0x0                   	// #0
  40cc0c:	ldr	w0, [x0, #1676]
  40cc10:	bl	4033d0 <ferror@plt+0xa30>
  40cc14:	bl	4026d0 <abort@plt>
  40cc18:	ldr	x0, [x19, #32]
  40cc1c:	bl	402640 <getc@plt>
  40cc20:	mov	w20, w0
  40cc24:	cmn	w0, #0x1
  40cc28:	b.ne	40cc58 <ferror@plt+0xa2b8>  // b.any
  40cc2c:	ldrb	w0, [x19, #40]
  40cc30:	orr	w0, w0, #0x1
  40cc34:	strb	w0, [x19, #40]
  40cc38:	ldr	x19, [x19]
  40cc3c:	cbnz	x19, 40cbd0 <ferror@plt+0xa230>
  40cc40:	mov	w20, #0x100                 	// #256
  40cc44:	b	40cbe8 <ferror@plt+0xa248>
  40cc48:	ldr	x0, [x19, #32]
  40cc4c:	ldrb	w20, [x0]
  40cc50:	cbz	w20, 40cc38 <ferror@plt+0xa298>
  40cc54:	b	40cbe8 <ferror@plt+0xa248>
  40cc58:	ldr	x1, [x19, #32]
  40cc5c:	bl	4027d0 <ungetc@plt>
  40cc60:	b	40cbe8 <ferror@plt+0xa248>
  40cc64:	nop
  40cc68:	stp	x29, x30, [sp, #-80]!
  40cc6c:	mov	x29, sp
  40cc70:	stp	x19, x20, [sp, #16]
  40cc74:	stp	x23, x24, [sp, #48]
  40cc78:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  40cc7c:	add	x19, x24, #0x898
  40cc80:	stp	x25, x26, [sp, #64]
  40cc84:	mov	x25, x1
  40cc88:	mov	x23, x0
  40cc8c:	ldr	x1, [x19, #24]
  40cc90:	stp	x21, x22, [sp, #32]
  40cc94:	and	w22, w2, #0xff
  40cc98:	cbz	x1, 40ccc4 <ferror@plt+0xa324>
  40cc9c:	ldr	x0, [x19, #16]
  40cca0:	ldr	x2, [x0, #8]
  40cca4:	cmp	x1, x2
  40cca8:	b.ls	40ce48 <ferror@plt+0xa4a8>  // b.plast
  40ccac:	ldr	x2, [x0, #32]
  40ccb0:	cmp	x1, x2
  40ccb4:	b.cs	40ce48 <ferror@plt+0xa4a8>  // b.hs, b.nlast
  40ccb8:	dup	v0.2d, x1
  40ccbc:	str	xzr, [x19, #24]
  40ccc0:	str	q0, [x0, #16]
  40ccc4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ccc8:	ldr	w0, [x0, #1692]
  40cccc:	tbz	w0, #8, 40cd00 <ferror@plt+0xa360>
  40ccd0:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ccd4:	ldr	x0, [x20, #2080]
  40ccd8:	cbz	x0, 40cd00 <ferror@plt+0xa360>
  40ccdc:	bl	409918 <ferror@plt+0x6f78>
  40cce0:	ldr	x0, [x20, #2080]
  40cce4:	mov	x2, x25
  40cce8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40ccec:	add	x1, x1, #0x680
  40ccf0:	bl	41cdb0 <ferror@plt+0x1a410>
  40ccf4:	ldr	x1, [x20, #2080]
  40ccf8:	mov	w0, #0xa                   	// #10
  40ccfc:	bl	402430 <putc@plt>
  40cd00:	ldr	x20, [x19, #16]
  40cd04:	ldp	x2, x3, [x20, #24]
  40cd08:	sub	x0, x3, x2
  40cd0c:	cmp	x0, #0x2f
  40cd10:	b.ls	40ce60 <ferror@plt+0xa4c0>  // b.plast
  40cd14:	ldr	x21, [x20, #16]
  40cd18:	add	x2, x2, #0x30
  40cd1c:	cmp	x2, x21
  40cd20:	b.eq	40ce80 <ferror@plt+0xa4e0>  // b.none
  40cd24:	ldr	x0, [x20, #48]
  40cd28:	ldr	x1, [x20, #8]
  40cd2c:	add	x2, x2, x0
  40cd30:	bic	x2, x2, x0
  40cd34:	str	x2, [x20, #24]
  40cd38:	sub	x0, x2, x1
  40cd3c:	sub	x1, x3, x1
  40cd40:	cmp	x0, x1
  40cd44:	b.ls	40cd50 <ferror@plt+0xa3b0>  // b.plast
  40cd48:	mov	x2, x3
  40cd4c:	str	x3, [x20, #24]
  40cd50:	str	x2, [x20, #16]
  40cd54:	mov	w0, #0x1                   	// #1
  40cd58:	str	w0, [x21, #8]
  40cd5c:	mov	x0, x25
  40cd60:	bl	402390 <strlen@plt>
  40cd64:	add	x1, x0, #0x1
  40cd68:	mov	x20, x0
  40cd6c:	add	x3, x19, #0x28
  40cd70:	ldp	x0, x2, [x19, #64]
  40cd74:	sub	x2, x2, x0
  40cd78:	cmp	x1, x2
  40cd7c:	b.hi	40ce54 <ferror@plt+0xa4b4>  // b.pmore
  40cd80:	ldr	x0, [x19, #64]
  40cd84:	mov	x1, x25
  40cd88:	mov	x2, x20
  40cd8c:	bl	402350 <memcpy@plt>
  40cd90:	ldr	x1, [x19, #64]
  40cd94:	add	x0, x1, x20
  40cd98:	add	x0, x0, #0x1
  40cd9c:	str	x0, [x19, #64]
  40cda0:	strb	wzr, [x1, x20]
  40cda4:	ldp	x4, x3, [x19, #56]
  40cda8:	cmp	x3, x4
  40cdac:	b.eq	40ce90 <ferror@plt+0xa4f0>  // b.none
  40cdb0:	ldr	x0, [x19, #88]
  40cdb4:	ldr	x2, [x19, #48]
  40cdb8:	add	x3, x3, x0
  40cdbc:	ldr	x5, [x19, #72]
  40cdc0:	bic	x0, x3, x0
  40cdc4:	str	x0, [x19, #64]
  40cdc8:	sub	x3, x0, x2
  40cdcc:	sub	x2, x5, x2
  40cdd0:	cmp	x3, x2
  40cdd4:	b.ls	40cde0 <ferror@plt+0xa440>  // b.plast
  40cdd8:	mov	x0, x5
  40cddc:	str	x5, [x19, #64]
  40cde0:	ldrb	w2, [x19, #8]
  40cde4:	adrp	x5, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40cde8:	ldrb	w1, [x21, #40]
  40cdec:	mov	w6, #0xffffffff            	// #-1
  40cdf0:	ldr	x3, [x24, #2200]
  40cdf4:	ubfiz	w2, w2, #2, #6
  40cdf8:	orr	w22, w2, w22, lsl #1
  40cdfc:	and	w1, w1, #0xfffffff8
  40ce00:	str	w6, [x5, #3608]
  40ce04:	and	w22, w22, #0x7
  40ce08:	str	x0, [x19, #56]
  40ce0c:	orr	w22, w22, w1
  40ce10:	mov	w0, #0x1                   	// #1
  40ce14:	strb	w0, [x19, #32]
  40ce18:	strb	w22, [x21, #40]
  40ce1c:	ldp	x19, x20, [sp, #16]
  40ce20:	str	x21, [x24, #2200]
  40ce24:	ldp	x25, x26, [sp, #64]
  40ce28:	str	x3, [x21]
  40ce2c:	str	x4, [x21, #16]
  40ce30:	str	w0, [x21, #24]
  40ce34:	str	x23, [x21, #32]
  40ce38:	ldp	x21, x22, [sp, #32]
  40ce3c:	ldp	x23, x24, [sp, #48]
  40ce40:	ldp	x29, x30, [sp], #80
  40ce44:	ret
  40ce48:	bl	41d910 <_obstack_free@@Base>
  40ce4c:	str	xzr, [x19, #24]
  40ce50:	b	40ccc4 <ferror@plt+0xa324>
  40ce54:	mov	x0, x3
  40ce58:	bl	41d788 <_obstack_newchunk@@Base>
  40ce5c:	b	40cd80 <ferror@plt+0xa3e0>
  40ce60:	mov	x0, x20
  40ce64:	mov	x1, #0x30                  	// #48
  40ce68:	bl	41d788 <_obstack_newchunk@@Base>
  40ce6c:	ldp	x2, x3, [x20, #24]
  40ce70:	ldr	x21, [x20, #16]
  40ce74:	add	x2, x2, #0x30
  40ce78:	cmp	x2, x21
  40ce7c:	b.ne	40cd24 <ferror@plt+0xa384>  // b.any
  40ce80:	ldrb	w0, [x20, #80]
  40ce84:	orr	w0, w0, #0x2
  40ce88:	strb	w0, [x20, #80]
  40ce8c:	b	40cd24 <ferror@plt+0xa384>
  40ce90:	ldrb	w0, [x19, #120]
  40ce94:	orr	w0, w0, #0x2
  40ce98:	strb	w0, [x19, #120]
  40ce9c:	b	40cdb0 <ferror@plt+0xa410>
  40cea0:	stp	x29, x30, [sp, #-48]!
  40cea4:	mov	x29, sp
  40cea8:	stp	x19, x20, [sp, #16]
  40ceac:	stp	x21, x22, [sp, #32]
  40ceb0:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ceb4:	add	x20, x22, #0x898
  40ceb8:	mov	x21, x0
  40cebc:	ldp	x19, x1, [x20, #16]
  40cec0:	cbz	x1, 40cfc0 <ferror@plt+0xa620>
  40cec4:	ldr	x0, [x19, #8]
  40cec8:	cmp	x1, x0
  40cecc:	b.ls	40cf7c <ferror@plt+0xa5dc>  // b.plast
  40ced0:	ldr	x4, [x19, #32]
  40ced4:	cmp	x1, x4
  40ced8:	b.cs	40cf7c <ferror@plt+0xa5dc>  // b.hs, b.nlast
  40cedc:	dup	v0.2d, x1
  40cee0:	str	q0, [x19, #16]
  40cee4:	str	xzr, [x20, #24]
  40cee8:	sub	x0, x4, x1
  40ceec:	cmp	x0, #0x2f
  40cef0:	b.ls	40cf90 <ferror@plt+0xa5f0>  // b.plast
  40cef4:	ldr	x2, [x19, #16]
  40cef8:	add	x1, x1, #0x30
  40cefc:	cmp	x1, x2
  40cf00:	b.eq	40cfb0 <ferror@plt+0xa610>  // b.none
  40cf04:	ldr	x3, [x19, #48]
  40cf08:	ldr	x5, [x19, #8]
  40cf0c:	add	x1, x1, x3
  40cf10:	bic	x1, x1, x3
  40cf14:	str	x1, [x19, #24]
  40cf18:	sub	x0, x1, x5
  40cf1c:	sub	x5, x4, x5
  40cf20:	cmp	x0, x5
  40cf24:	b.ls	40cf30 <ferror@plt+0xa590>  // b.plast
  40cf28:	mov	x1, x4
  40cf2c:	str	x4, [x19, #24]
  40cf30:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40cf34:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40cf38:	ldr	x5, [x22, #2200]
  40cf3c:	str	x1, [x19, #16]
  40cf40:	ldr	x3, [x3, #3552]
  40cf44:	mov	w4, #0x2                   	// #2
  40cf48:	ldr	w1, [x0, #3528]
  40cf4c:	mov	w0, #0x1                   	// #1
  40cf50:	strb	w0, [x20, #32]
  40cf54:	ldp	x19, x20, [sp, #16]
  40cf58:	str	x5, [x2]
  40cf5c:	str	w4, [x2, #8]
  40cf60:	str	x3, [x2, #16]
  40cf64:	str	w1, [x2, #24]
  40cf68:	str	x21, [x2, #32]
  40cf6c:	str	x2, [x22, #2200]
  40cf70:	ldp	x21, x22, [sp, #32]
  40cf74:	ldp	x29, x30, [sp], #48
  40cf78:	ret
  40cf7c:	mov	x0, x19
  40cf80:	bl	41d910 <_obstack_free@@Base>
  40cf84:	ldr	x19, [x20, #16]
  40cf88:	ldp	x1, x4, [x19, #24]
  40cf8c:	b	40cee4 <ferror@plt+0xa544>
  40cf90:	mov	x1, #0x30                  	// #48
  40cf94:	mov	x0, x19
  40cf98:	bl	41d788 <_obstack_newchunk@@Base>
  40cf9c:	ldp	x1, x4, [x19, #24]
  40cfa0:	ldr	x2, [x19, #16]
  40cfa4:	add	x1, x1, #0x30
  40cfa8:	cmp	x1, x2
  40cfac:	b.ne	40cf04 <ferror@plt+0xa564>  // b.any
  40cfb0:	ldrb	w0, [x19, #80]
  40cfb4:	orr	w0, w0, #0x2
  40cfb8:	strb	w0, [x19, #80]
  40cfbc:	b	40cf04 <ferror@plt+0xa564>
  40cfc0:	ldp	x1, x4, [x19, #24]
  40cfc4:	b	40cee8 <ferror@plt+0xa548>
  40cfc8:	stp	x29, x30, [sp, #-32]!
  40cfcc:	mov	x29, sp
  40cfd0:	stp	x19, x20, [sp, #16]
  40cfd4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40cfd8:	add	x20, x20, #0x898
  40cfdc:	ldr	x0, [x20, #24]
  40cfe0:	cbnz	x0, 40d098 <ferror@plt+0xa6f8>
  40cfe4:	ldr	x19, [x20, #16]
  40cfe8:	mov	x0, x19
  40cfec:	ldp	x1, x5, [x19, #24]
  40cff0:	sub	x2, x5, x1
  40cff4:	cmp	x2, #0x2f
  40cff8:	b.ls	40d068 <ferror@plt+0xa6c8>  // b.plast
  40cffc:	ldr	x3, [x19, #16]
  40d000:	add	x1, x1, #0x30
  40d004:	cmp	x1, x3
  40d008:	b.eq	40d088 <ferror@plt+0xa6e8>  // b.none
  40d00c:	ldr	x2, [x19, #48]
  40d010:	ldr	x4, [x19, #8]
  40d014:	add	x1, x1, x2
  40d018:	bic	x1, x1, x2
  40d01c:	str	x1, [x19, #24]
  40d020:	sub	x2, x1, x4
  40d024:	sub	x4, x5, x4
  40d028:	cmp	x2, x4
  40d02c:	b.ls	40d038 <ferror@plt+0xa698>  // b.plast
  40d030:	mov	x1, x5
  40d034:	str	x5, [x19, #24]
  40d038:	adrp	x4, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d03c:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d040:	str	x1, [x19, #16]
  40d044:	ldr	x2, [x2, #3552]
  40d048:	str	wzr, [x3, #8]
  40d04c:	ldr	w1, [x4, #3528]
  40d050:	str	x2, [x3, #16]
  40d054:	str	w1, [x3, #24]
  40d058:	str	x3, [x20, #24]
  40d05c:	ldp	x19, x20, [sp, #16]
  40d060:	ldp	x29, x30, [sp], #32
  40d064:	ret
  40d068:	mov	x1, #0x30                  	// #48
  40d06c:	bl	41d788 <_obstack_newchunk@@Base>
  40d070:	ldp	x1, x5, [x19, #24]
  40d074:	ldr	x3, [x19, #16]
  40d078:	ldr	x0, [x20, #16]
  40d07c:	add	x1, x1, #0x30
  40d080:	cmp	x1, x3
  40d084:	b.ne	40d00c <ferror@plt+0xa66c>  // b.any
  40d088:	ldrb	w2, [x19, #80]
  40d08c:	orr	w2, w2, #0x2
  40d090:	strb	w2, [x19, #80]
  40d094:	b	40d00c <ferror@plt+0xa66c>
  40d098:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d09c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40d0a0:	add	x2, x2, #0x698
  40d0a4:	mov	w1, #0x0                   	// #0
  40d0a8:	ldr	w0, [x0, #1676]
  40d0ac:	bl	4033d0 <ferror@plt+0xa30>
  40d0b0:	bl	4026d0 <abort@plt>
  40d0b4:	nop
  40d0b8:	stp	x29, x30, [sp, #-64]!
  40d0bc:	mov	x29, sp
  40d0c0:	stp	x21, x22, [sp, #32]
  40d0c4:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d0c8:	add	x21, x22, #0x898
  40d0cc:	ldr	x1, [x21, #24]
  40d0d0:	cbz	x1, 40d1ec <ferror@plt+0xa84c>
  40d0d4:	stp	x19, x20, [sp, #16]
  40d0d8:	ldr	x20, [x21, #16]
  40d0dc:	ldr	x19, [x20, #24]
  40d0e0:	str	x23, [sp, #48]
  40d0e4:	ldr	x23, [x20, #16]
  40d0e8:	cmp	x19, x23
  40d0ec:	b.eq	40d18c <ferror@plt+0xa7ec>  // b.none
  40d0f0:	ldr	x3, [x20, #32]
  40d0f4:	mov	x2, x20
  40d0f8:	mov	x0, x19
  40d0fc:	cmp	x19, x3
  40d100:	b.eq	40d1d4 <ferror@plt+0xa834>  // b.none
  40d104:	add	x3, x0, #0x1
  40d108:	str	x3, [x20, #24]
  40d10c:	strb	wzr, [x0]
  40d110:	ldp	x0, x5, [x2, #16]
  40d114:	cmp	x5, x0
  40d118:	b.eq	40d1b4 <ferror@plt+0xa814>  // b.none
  40d11c:	ldr	x3, [x2, #48]
  40d120:	ldr	x4, [x2, #8]
  40d124:	add	x5, x5, x3
  40d128:	ldr	x6, [x2, #32]
  40d12c:	bic	x3, x5, x3
  40d130:	str	x3, [x2, #24]
  40d134:	sub	x5, x3, x4
  40d138:	sub	x4, x6, x4
  40d13c:	cmp	x5, x4
  40d140:	b.hi	40d180 <ferror@plt+0xa7e0>  // b.pmore
  40d144:	sub	x19, x19, x23
  40d148:	str	x3, [x2, #16]
  40d14c:	ldr	x3, [x22, #2200]
  40d150:	add	x19, x0, x19
  40d154:	mov	w2, #0x1                   	// #1
  40d158:	str	x1, [x22, #2200]
  40d15c:	str	x3, [x1]
  40d160:	strb	w2, [x21, #32]
  40d164:	stp	x0, x19, [x1, #32]
  40d168:	ldp	x19, x20, [sp, #16]
  40d16c:	str	xzr, [x21, #24]
  40d170:	ldr	x23, [sp, #48]
  40d174:	ldp	x21, x22, [sp, #32]
  40d178:	ldp	x29, x30, [sp], #64
  40d17c:	ret
  40d180:	mov	x3, x6
  40d184:	str	x6, [x2, #24]
  40d188:	b	40d144 <ferror@plt+0xa7a4>
  40d18c:	ldr	x0, [x20, #8]
  40d190:	cmp	x1, x0
  40d194:	b.ls	40d1c4 <ferror@plt+0xa824>  // b.plast
  40d198:	ldr	x0, [x20, #32]
  40d19c:	cmp	x1, x0
  40d1a0:	b.cs	40d1c4 <ferror@plt+0xa824>  // b.hs, b.nlast
  40d1a4:	dup	v0.2d, x1
  40d1a8:	mov	x0, #0x0                   	// #0
  40d1ac:	str	q0, [x20, #16]
  40d1b0:	b	40d168 <ferror@plt+0xa7c8>
  40d1b4:	ldrb	w3, [x2, #80]
  40d1b8:	orr	w3, w3, #0x2
  40d1bc:	strb	w3, [x2, #80]
  40d1c0:	b	40d11c <ferror@plt+0xa77c>
  40d1c4:	mov	x0, x20
  40d1c8:	bl	41d910 <_obstack_free@@Base>
  40d1cc:	mov	x0, #0x0                   	// #0
  40d1d0:	b	40d168 <ferror@plt+0xa7c8>
  40d1d4:	mov	x0, x20
  40d1d8:	mov	x1, #0x1                   	// #1
  40d1dc:	bl	41d788 <_obstack_newchunk@@Base>
  40d1e0:	ldp	x2, x1, [x21, #16]
  40d1e4:	ldr	x0, [x20, #24]
  40d1e8:	b	40d104 <ferror@plt+0xa764>
  40d1ec:	mov	x0, #0x0                   	// #0
  40d1f0:	b	40d174 <ferror@plt+0xa7d4>
  40d1f4:	nop
  40d1f8:	stp	x29, x30, [sp, #-64]!
  40d1fc:	mov	x29, sp
  40d200:	stp	x21, x22, [sp, #32]
  40d204:	mov	x21, x0
  40d208:	str	x23, [sp, #48]
  40d20c:	and	w23, w1, #0xff
  40d210:	bl	40cbb8 <ferror@plt+0xa218>
  40d214:	ldrb	w1, [x21]
  40d218:	cmp	w1, w0
  40d21c:	b.ne	40d2bc <ferror@plt+0xa91c>  // b.any
  40d220:	ldrb	w0, [x21, #1]
  40d224:	cbz	w0, 40d2d4 <ferror@plt+0xa934>
  40d228:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d22c:	add	x22, x0, #0x898
  40d230:	stp	x19, x20, [sp, #16]
  40d234:	ldr	x0, [x0, #2200]
  40d238:	cbz	x0, 40d244 <ferror@plt+0xa8a4>
  40d23c:	ldr	w1, [x0, #8]
  40d240:	cbz	w1, 40d310 <ferror@plt+0xa970>
  40d244:	bl	40ca80 <ferror@plt+0xa0e0>
  40d248:	add	x19, x21, #0x1
  40d24c:	mov	w20, #0x1                   	// #1
  40d250:	b	40d280 <ferror@plt+0xa8e0>
  40d254:	ldr	x0, [x1, #32]
  40d258:	ldrb	w2, [x0]
  40d25c:	cbz	w2, 40d2a0 <ferror@plt+0xa900>
  40d260:	ldrb	w2, [x22, #32]
  40d264:	add	x0, x0, #0x1
  40d268:	cbnz	w2, 40d2a0 <ferror@plt+0xa900>
  40d26c:	str	x0, [x1, #32]
  40d270:	add	w20, w20, #0x1
  40d274:	ldrb	w1, [x19]
  40d278:	cbz	w1, 40d2b0 <ferror@plt+0xa910>
  40d27c:	nop
  40d280:	bl	40cbb8 <ferror@plt+0xa218>
  40d284:	ldrb	w1, [x19], #1
  40d288:	cmp	w0, w1
  40d28c:	b.ne	40d338 <ferror@plt+0xa998>  // b.any
  40d290:	ldr	x1, [x22]
  40d294:	cbz	x1, 40d2a0 <ferror@plt+0xa900>
  40d298:	ldr	w0, [x1, #8]
  40d29c:	cbz	w0, 40d254 <ferror@plt+0xa8b4>
  40d2a0:	bl	40ca80 <ferror@plt+0xa0e0>
  40d2a4:	add	w20, w20, #0x1
  40d2a8:	ldrb	w1, [x19]
  40d2ac:	cbnz	w1, 40d280 <ferror@plt+0xa8e0>
  40d2b0:	cbnz	w23, 40d390 <ferror@plt+0xa9f0>
  40d2b4:	mov	w23, #0x1                   	// #1
  40d2b8:	b	40d33c <ferror@plt+0xa99c>
  40d2bc:	mov	w23, #0x0                   	// #0
  40d2c0:	mov	w0, w23
  40d2c4:	ldp	x21, x22, [sp, #32]
  40d2c8:	ldr	x23, [sp, #48]
  40d2cc:	ldp	x29, x30, [sp], #64
  40d2d0:	ret
  40d2d4:	cbz	w23, 40d394 <ferror@plt+0xa9f4>
  40d2d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d2dc:	add	x2, x0, #0x898
  40d2e0:	ldr	x0, [x0, #2200]
  40d2e4:	cbz	x0, 40d330 <ferror@plt+0xa990>
  40d2e8:	ldr	w1, [x0, #8]
  40d2ec:	cbnz	w1, 40d330 <ferror@plt+0xa990>
  40d2f0:	ldr	x1, [x0, #32]
  40d2f4:	ldrb	w3, [x1]
  40d2f8:	cbz	w3, 40d330 <ferror@plt+0xa990>
  40d2fc:	ldrb	w2, [x2, #32]
  40d300:	cbnz	w2, 40d330 <ferror@plt+0xa990>
  40d304:	add	x1, x1, #0x1
  40d308:	str	x1, [x0, #32]
  40d30c:	b	40d2c0 <ferror@plt+0xa920>
  40d310:	ldr	x1, [x0, #32]
  40d314:	ldrb	w2, [x1]
  40d318:	cbz	w2, 40d244 <ferror@plt+0xa8a4>
  40d31c:	ldrb	w2, [x22, #32]
  40d320:	cbnz	w2, 40d244 <ferror@plt+0xa8a4>
  40d324:	add	x1, x1, #0x1
  40d328:	str	x1, [x0, #32]
  40d32c:	b	40d248 <ferror@plt+0xa8a8>
  40d330:	bl	40ca80 <ferror@plt+0xa0e0>
  40d334:	b	40d2c0 <ferror@plt+0xa920>
  40d338:	mov	w23, #0x0                   	// #0
  40d33c:	bl	40cfc8 <ferror@plt+0xa628>
  40d340:	sxtw	x22, w20
  40d344:	ldp	x2, x1, [x0, #24]
  40d348:	mov	x19, x0
  40d34c:	sub	x1, x1, x2
  40d350:	cmp	x1, w20, sxtw
  40d354:	b.cc	40d3ac <ferror@plt+0xaa0c>  // b.lo, b.ul, b.last
  40d358:	mov	x1, x21
  40d35c:	mov	x0, x2
  40d360:	mov	x2, x22
  40d364:	bl	402350 <memcpy@plt>
  40d368:	ldr	x0, [x19, #24]
  40d36c:	add	x0, x0, x22
  40d370:	str	x0, [x19, #24]
  40d374:	bl	40d0b8 <ferror@plt+0xa718>
  40d378:	mov	w0, w23
  40d37c:	ldp	x19, x20, [sp, #16]
  40d380:	ldp	x21, x22, [sp, #32]
  40d384:	ldr	x23, [sp, #48]
  40d388:	ldp	x29, x30, [sp], #64
  40d38c:	ret
  40d390:	ldp	x19, x20, [sp, #16]
  40d394:	mov	w23, #0x1                   	// #1
  40d398:	mov	w0, w23
  40d39c:	ldp	x21, x22, [sp, #32]
  40d3a0:	ldr	x23, [sp, #48]
  40d3a4:	ldp	x29, x30, [sp], #64
  40d3a8:	ret
  40d3ac:	mov	x1, x22
  40d3b0:	bl	41d788 <_obstack_newchunk@@Base>
  40d3b4:	ldr	x2, [x19, #24]
  40d3b8:	b	40d358 <ferror@plt+0xa9b8>
  40d3bc:	nop
  40d3c0:	stp	x29, x30, [sp, #-64]!
  40d3c4:	mov	x29, sp
  40d3c8:	stp	x23, x24, [sp, #48]
  40d3cc:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d3d0:	add	x24, x24, #0x898
  40d3d4:	mov	x23, x0
  40d3d8:	stp	x19, x20, [sp, #16]
  40d3dc:	stp	x21, x22, [sp, #32]
  40d3e0:	bl	402390 <strlen@plt>
  40d3e4:	mov	x21, x0
  40d3e8:	ldr	x20, [x24, #128]
  40d3ec:	mov	x19, x20
  40d3f0:	ldp	x1, x0, [x20, #24]
  40d3f4:	sub	x2, x0, x1
  40d3f8:	mov	x4, x0
  40d3fc:	cmp	x2, #0x2f
  40d400:	b.ls	40d4fc <ferror@plt+0xab5c>  // b.plast
  40d404:	ldr	x22, [x20, #16]
  40d408:	add	x1, x1, #0x30
  40d40c:	cmp	x1, x22
  40d410:	b.eq	40d524 <ferror@plt+0xab84>  // b.none
  40d414:	ldr	x2, [x20, #48]
  40d418:	ldr	x3, [x20, #8]
  40d41c:	add	x1, x1, x2
  40d420:	bic	x1, x1, x2
  40d424:	str	x1, [x20, #24]
  40d428:	sub	x2, x1, x3
  40d42c:	sub	x3, x0, x3
  40d430:	cmp	x2, x3
  40d434:	b.ls	40d440 <ferror@plt+0xaaa0>  // b.plast
  40d438:	mov	x1, x0
  40d43c:	str	x0, [x20, #24]
  40d440:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d444:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d448:	ldr	x0, [x19, #24]
  40d44c:	str	x1, [x20, #16]
  40d450:	ldr	w2, [x2, #3528]
  40d454:	ldr	x1, [x3, #3552]
  40d458:	str	wzr, [x22, #8]
  40d45c:	ldr	x3, [x24, #136]
  40d460:	str	x3, [x22]
  40d464:	str	x1, [x22, #16]
  40d468:	sub	x4, x4, x0
  40d46c:	str	w2, [x22, #24]
  40d470:	add	x1, x21, #0x1
  40d474:	cmp	x1, x4
  40d478:	b.hi	40d534 <ferror@plt+0xab94>  // b.pmore
  40d47c:	mov	x1, x23
  40d480:	mov	x2, x21
  40d484:	bl	402350 <memcpy@plt>
  40d488:	ldr	x1, [x19, #24]
  40d48c:	add	x0, x1, x21
  40d490:	add	x0, x0, #0x1
  40d494:	str	x0, [x19, #24]
  40d498:	strb	wzr, [x1, x21]
  40d49c:	ldp	x3, x2, [x19, #16]
  40d4a0:	cmp	x2, x3
  40d4a4:	b.eq	40d544 <ferror@plt+0xaba4>  // b.none
  40d4a8:	ldr	x0, [x19, #48]
  40d4ac:	ldr	x1, [x19, #8]
  40d4b0:	add	x2, x2, x0
  40d4b4:	ldr	x4, [x19, #32]
  40d4b8:	bic	x0, x2, x0
  40d4bc:	str	x0, [x19, #24]
  40d4c0:	sub	x2, x0, x1
  40d4c4:	sub	x1, x4, x1
  40d4c8:	cmp	x2, x1
  40d4cc:	b.ls	40d4d8 <ferror@plt+0xab38>  // b.plast
  40d4d0:	mov	x0, x4
  40d4d4:	str	x4, [x19, #24]
  40d4d8:	str	x0, [x19, #16]
  40d4dc:	add	x21, x3, x21
  40d4e0:	ldp	x19, x20, [sp, #16]
  40d4e4:	stp	x3, x21, [x22, #32]
  40d4e8:	str	x22, [x24, #136]
  40d4ec:	ldp	x21, x22, [sp, #32]
  40d4f0:	ldp	x23, x24, [sp, #48]
  40d4f4:	ldp	x29, x30, [sp], #64
  40d4f8:	ret
  40d4fc:	mov	x0, x20
  40d500:	mov	x1, #0x30                  	// #48
  40d504:	bl	41d788 <_obstack_newchunk@@Base>
  40d508:	ldp	x1, x0, [x20, #24]
  40d50c:	ldr	x19, [x24, #128]
  40d510:	ldr	x22, [x20, #16]
  40d514:	add	x1, x1, #0x30
  40d518:	cmp	x1, x22
  40d51c:	ldr	x4, [x19, #32]
  40d520:	b.ne	40d414 <ferror@plt+0xaa74>  // b.any
  40d524:	ldrb	w2, [x20, #80]
  40d528:	orr	w2, w2, #0x2
  40d52c:	strb	w2, [x20, #80]
  40d530:	b	40d414 <ferror@plt+0xaa74>
  40d534:	mov	x0, x19
  40d538:	bl	41d788 <_obstack_newchunk@@Base>
  40d53c:	ldr	x0, [x19, #24]
  40d540:	b	40d47c <ferror@plt+0xaadc>
  40d544:	ldrb	w0, [x19, #80]
  40d548:	orr	w0, w0, #0x2
  40d54c:	strb	w0, [x19, #80]
  40d550:	b	40d4a8 <ferror@plt+0xab08>
  40d554:	nop
  40d558:	stp	x29, x30, [sp, #-32]!
  40d55c:	mov	x1, #0x0                   	// #0
  40d560:	mov	x29, sp
  40d564:	stp	x19, x20, [sp, #16]
  40d568:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d56c:	add	x19, x20, #0x898
  40d570:	ldr	x0, [x19, #16]
  40d574:	str	xzr, [x19, #24]
  40d578:	bl	41d910 <_obstack_free@@Base>
  40d57c:	ldr	x0, [x19, #16]
  40d580:	bl	4027c0 <free@plt>
  40d584:	ldr	x0, [x19, #136]
  40d588:	cbz	x0, 40d5e0 <ferror@plt+0xac40>
  40d58c:	ldr	x1, [x19, #128]
  40d590:	mov	x0, #0x58                  	// #88
  40d594:	str	x1, [x19, #16]
  40d598:	bl	41ca30 <ferror@plt+0x1a090>
  40d59c:	str	x0, [x19, #128]
  40d5a0:	mov	x2, #0x0                   	// #0
  40d5a4:	mov	x1, #0x0                   	// #0
  40d5a8:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40d5ac:	adrp	x3, 41c000 <ferror@plt+0x19660>
  40d5b0:	add	x4, x4, #0x7c0
  40d5b4:	add	x3, x3, #0xa30
  40d5b8:	bl	41d5b0 <_obstack_begin@@Base>
  40d5bc:	ldr	x0, [x19, #136]
  40d5c0:	str	x0, [x20, #2200]
  40d5c4:	mov	w1, #0x1                   	// #1
  40d5c8:	mov	w0, #0x1                   	// #1
  40d5cc:	strb	w1, [x19, #32]
  40d5d0:	str	xzr, [x19, #136]
  40d5d4:	ldp	x19, x20, [sp, #16]
  40d5d8:	ldp	x29, x30, [sp], #32
  40d5dc:	ret
  40d5e0:	add	x0, x19, #0x90
  40d5e4:	mov	x1, #0x0                   	// #0
  40d5e8:	bl	41d910 <_obstack_free@@Base>
  40d5ec:	add	x0, x19, #0x28
  40d5f0:	mov	x1, #0x0                   	// #0
  40d5f4:	bl	41d910 <_obstack_free@@Base>
  40d5f8:	ldr	x0, [x19, #128]
  40d5fc:	mov	x1, #0x0                   	// #0
  40d600:	bl	41d910 <_obstack_free@@Base>
  40d604:	ldr	x0, [x19, #128]
  40d608:	bl	4027c0 <free@plt>
  40d60c:	mov	w0, #0x0                   	// #0
  40d610:	ldp	x19, x20, [sp, #16]
  40d614:	ldp	x29, x30, [sp], #32
  40d618:	ret
  40d61c:	nop
  40d620:	stp	x29, x30, [sp, #-64]!
  40d624:	mov	x29, sp
  40d628:	stp	x19, x20, [sp, #16]
  40d62c:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d630:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d634:	stp	x21, x22, [sp, #32]
  40d638:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d63c:	add	x19, x19, #0x898
  40d640:	ldr	x22, [x20, #3552]
  40d644:	str	x23, [sp, #48]
  40d648:	ldr	w23, [x21, #3528]
  40d64c:	b	40d678 <ferror@plt+0xacd8>
  40d650:	ldr	x1, [x0, #32]
  40d654:	ldrb	w2, [x1]
  40d658:	cbz	w2, 40d688 <ferror@plt+0xace8>
  40d65c:	ldrb	w2, [x19, #32]
  40d660:	add	x3, x1, #0x1
  40d664:	cbnz	w2, 40d688 <ferror@plt+0xace8>
  40d668:	str	x3, [x0, #32]
  40d66c:	ldrb	w0, [x1]
  40d670:	cmp	w0, #0xa
  40d674:	b.eq	40d6b4 <ferror@plt+0xad14>  // b.none
  40d678:	ldr	x0, [x19]
  40d67c:	cbz	x0, 40d688 <ferror@plt+0xace8>
  40d680:	ldr	w1, [x0, #8]
  40d684:	cbz	w1, 40d650 <ferror@plt+0xacb0>
  40d688:	bl	40ca80 <ferror@plt+0xa0e0>
  40d68c:	cmp	w0, #0x100
  40d690:	b.ne	40d670 <ferror@plt+0xacd0>  // b.any
  40d694:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d698:	adrp	x4, 420000 <_obstack_memory_used@@Base+0x2640>
  40d69c:	mov	w3, w23
  40d6a0:	add	x4, x4, #0x6c0
  40d6a4:	ldr	w0, [x0, #1676]
  40d6a8:	mov	x2, x22
  40d6ac:	mov	w1, #0x0                   	// #0
  40d6b0:	bl	403490 <ferror@plt+0xaf0>
  40d6b4:	ldr	x0, [x20, #3552]
  40d6b8:	cmp	x0, x22
  40d6bc:	b.eq	40d6dc <ferror@plt+0xad3c>  // b.none
  40d6c0:	mov	w0, #0x1                   	// #1
  40d6c4:	strb	w0, [x19, #32]
  40d6c8:	ldp	x19, x20, [sp, #16]
  40d6cc:	ldp	x21, x22, [sp, #32]
  40d6d0:	ldr	x23, [sp, #48]
  40d6d4:	ldp	x29, x30, [sp], #64
  40d6d8:	ret
  40d6dc:	ldr	w0, [x21, #3528]
  40d6e0:	cmp	w0, w23
  40d6e4:	b.ne	40d6c0 <ferror@plt+0xad20>  // b.any
  40d6e8:	ldp	x19, x20, [sp, #16]
  40d6ec:	ldp	x21, x22, [sp, #32]
  40d6f0:	ldr	x23, [sp, #48]
  40d6f4:	ldp	x29, x30, [sp], #64
  40d6f8:	ret
  40d6fc:	nop
  40d700:	stp	x29, x30, [sp, #-64]!
  40d704:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  40d708:	add	x1, x1, #0xe8
  40d70c:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d710:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d714:	mov	x29, sp
  40d718:	str	x1, [x2, #3552]
  40d71c:	mov	x0, #0x58                  	// #88
  40d720:	str	wzr, [x3, #3528]
  40d724:	stp	x19, x20, [sp, #16]
  40d728:	adrp	x20, 41c000 <ferror@plt+0x19660>
  40d72c:	add	x20, x20, #0xa30
  40d730:	stp	x21, x22, [sp, #32]
  40d734:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  40d738:	adrp	x21, 402000 <mbrtowc@plt-0x340>
  40d73c:	add	x19, x22, #0x898
  40d740:	add	x21, x21, #0x7c0
  40d744:	str	x23, [sp, #48]
  40d748:	bl	41ca30 <ferror@plt+0x1a090>
  40d74c:	mov	x4, x21
  40d750:	mov	x3, x20
  40d754:	mov	x2, #0x0                   	// #0
  40d758:	mov	x1, #0x0                   	// #0
  40d75c:	str	x0, [x19, #16]
  40d760:	bl	41d5b0 <_obstack_begin@@Base>
  40d764:	mov	x0, #0x58                  	// #88
  40d768:	bl	41ca30 <ferror@plt+0x1a090>
  40d76c:	mov	x4, x21
  40d770:	mov	x3, x20
  40d774:	mov	x2, #0x0                   	// #0
  40d778:	mov	x1, #0x0                   	// #0
  40d77c:	str	x0, [x19, #128]
  40d780:	bl	41d5b0 <_obstack_begin@@Base>
  40d784:	mov	x4, x21
  40d788:	mov	x3, x20
  40d78c:	mov	x2, #0x0                   	// #0
  40d790:	mov	x1, #0x0                   	// #0
  40d794:	add	x23, x19, #0x90
  40d798:	add	x0, x19, #0x28
  40d79c:	bl	41d5b0 <_obstack_begin@@Base>
  40d7a0:	mov	x4, x21
  40d7a4:	mov	x1, #0x0                   	// #0
  40d7a8:	mov	x3, x20
  40d7ac:	mov	x0, x23
  40d7b0:	mov	x2, #0x0                   	// #0
  40d7b4:	bl	41d5b0 <_obstack_begin@@Base>
  40d7b8:	ldp	x1, x4, [x19, #168]
  40d7bc:	cmp	x4, x1
  40d7c0:	b.eq	40d8c8 <ferror@plt+0xaf28>  // b.none
  40d7c4:	add	x0, x1, #0x1
  40d7c8:	ldr	x1, [x19, #160]
  40d7cc:	cmp	x0, x1
  40d7d0:	b.eq	40d8b8 <ferror@plt+0xaf18>  // b.none
  40d7d4:	ldr	x1, [x19, #192]
  40d7d8:	ldr	x2, [x19, #152]
  40d7dc:	add	x0, x0, x1
  40d7e0:	bic	x1, x0, x1
  40d7e4:	str	x1, [x19, #168]
  40d7e8:	sub	x0, x1, x2
  40d7ec:	sub	x2, x4, x2
  40d7f0:	cmp	x0, x2
  40d7f4:	b.ls	40d800 <ferror@plt+0xae60>  // b.plast
  40d7f8:	mov	x1, x4
  40d7fc:	str	x4, [x19, #168]
  40d800:	str	xzr, [x22, #2200]
  40d804:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40d808:	add	x0, x0, #0x6e8
  40d80c:	strb	wzr, [x19, #8]
  40d810:	str	xzr, [x19, #24]
  40d814:	str	xzr, [x19, #136]
  40d818:	str	x1, [x19, #160]
  40d81c:	str	x1, [x19, #232]
  40d820:	bl	41cbb8 <ferror@plt+0x1a218>
  40d824:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d828:	add	x19, x1, #0xdd0
  40d82c:	str	x0, [x1, #3536]
  40d830:	bl	402390 <strlen@plt>
  40d834:	mov	x1, x0
  40d838:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  40d83c:	add	x0, x0, #0x450
  40d840:	str	x1, [x19, #8]
  40d844:	bl	41cbb8 <ferror@plt+0x1a218>
  40d848:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d84c:	add	x19, x1, #0xe08
  40d850:	str	x0, [x1, #3592]
  40d854:	bl	402390 <strlen@plt>
  40d858:	mov	x1, x0
  40d85c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40d860:	add	x0, x0, #0x6f0
  40d864:	str	x1, [x19, #8]
  40d868:	bl	41cbb8 <ferror@plt+0x1a218>
  40d86c:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d870:	add	x19, x1, #0xde8
  40d874:	str	x0, [x1, #3560]
  40d878:	bl	402390 <strlen@plt>
  40d87c:	mov	x1, x0
  40d880:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  40d884:	add	x0, x0, #0x238
  40d888:	str	x1, [x19, #8]
  40d88c:	bl	41cbb8 <ferror@plt+0x1a218>
  40d890:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d894:	add	x19, x1, #0xdf8
  40d898:	str	x0, [x1, #3576]
  40d89c:	bl	402390 <strlen@plt>
  40d8a0:	ldp	x21, x22, [sp, #32]
  40d8a4:	ldr	x23, [sp, #48]
  40d8a8:	str	x0, [x19, #8]
  40d8ac:	ldp	x19, x20, [sp, #16]
  40d8b0:	ldp	x29, x30, [sp], #64
  40d8b4:	ret
  40d8b8:	ldrb	w1, [x19, #224]
  40d8bc:	orr	w1, w1, #0x2
  40d8c0:	strb	w1, [x19, #224]
  40d8c4:	b	40d7d4 <ferror@plt+0xae34>
  40d8c8:	mov	x1, #0x1                   	// #1
  40d8cc:	mov	x0, x23
  40d8d0:	bl	41d788 <_obstack_newchunk@@Base>
  40d8d4:	ldp	x1, x4, [x19, #168]
  40d8d8:	b	40d7c4 <ferror@plt+0xae24>
  40d8dc:	nop
  40d8e0:	stp	x29, x30, [sp, #-64]!
  40d8e4:	mov	x29, sp
  40d8e8:	stp	x21, x22, [sp, #32]
  40d8ec:	adrp	x22, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d8f0:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d8f4:	stp	x19, x20, [sp, #16]
  40d8f8:	mov	x20, x0
  40d8fc:	mov	x19, x1
  40d900:	ldr	x0, [x22, #3536]
  40d904:	stp	x23, x24, [sp, #48]
  40d908:	bl	4027c0 <free@plt>
  40d90c:	ldr	x0, [x21, #3592]
  40d910:	bl	4027c0 <free@plt>
  40d914:	cbz	x20, 40d98c <ferror@plt+0xafec>
  40d918:	cbz	x19, 40d980 <ferror@plt+0xafe0>
  40d91c:	ldrb	w0, [x20]
  40d920:	cbz	w0, 40d938 <ferror@plt+0xaf98>
  40d924:	ldrb	w1, [x19]
  40d928:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  40d92c:	add	x0, x0, #0x450
  40d930:	cmp	w1, #0x0
  40d934:	csel	x19, x0, x19, eq  // eq = none
  40d938:	mov	x0, x20
  40d93c:	bl	41cbb8 <ferror@plt+0x1a218>
  40d940:	add	x24, x22, #0xdd0
  40d944:	str	x0, [x22, #3536]
  40d948:	bl	402390 <strlen@plt>
  40d94c:	mov	x1, x0
  40d950:	add	x23, x21, #0xe08
  40d954:	mov	x0, x19
  40d958:	str	x1, [x24, #8]
  40d95c:	bl	41cbb8 <ferror@plt+0x1a218>
  40d960:	str	x0, [x21, #3592]
  40d964:	bl	402390 <strlen@plt>
  40d968:	str	x0, [x23, #8]
  40d96c:	ldp	x19, x20, [sp, #16]
  40d970:	ldp	x21, x22, [sp, #32]
  40d974:	ldp	x23, x24, [sp, #48]
  40d978:	ldp	x29, x30, [sp], #64
  40d97c:	ret
  40d980:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  40d984:	add	x19, x19, #0x450
  40d988:	b	40d938 <ferror@plt+0xaf98>
  40d98c:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0x1640>
  40d990:	adrp	x20, 420000 <_obstack_memory_used@@Base+0x2640>
  40d994:	add	x19, x19, #0x450
  40d998:	add	x20, x20, #0x6e8
  40d99c:	b	40d938 <ferror@plt+0xaf98>
  40d9a0:	stp	x29, x30, [sp, #-64]!
  40d9a4:	mov	x29, sp
  40d9a8:	stp	x21, x22, [sp, #32]
  40d9ac:	adrp	x22, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d9b0:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40d9b4:	stp	x19, x20, [sp, #16]
  40d9b8:	mov	x20, x0
  40d9bc:	mov	x19, x1
  40d9c0:	ldr	x0, [x22, #3560]
  40d9c4:	stp	x23, x24, [sp, #48]
  40d9c8:	bl	4027c0 <free@plt>
  40d9cc:	ldr	x0, [x21, #3576]
  40d9d0:	bl	4027c0 <free@plt>
  40d9d4:	cbz	x20, 40da4c <ferror@plt+0xb0ac>
  40d9d8:	cbz	x19, 40da40 <ferror@plt+0xb0a0>
  40d9dc:	ldrb	w0, [x20]
  40d9e0:	cbz	w0, 40d9f8 <ferror@plt+0xb058>
  40d9e4:	ldrb	w1, [x19]
  40d9e8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  40d9ec:	add	x0, x0, #0x238
  40d9f0:	cmp	w1, #0x0
  40d9f4:	csel	x19, x0, x19, eq  // eq = none
  40d9f8:	mov	x0, x20
  40d9fc:	bl	41cbb8 <ferror@plt+0x1a218>
  40da00:	add	x24, x22, #0xde8
  40da04:	str	x0, [x22, #3560]
  40da08:	bl	402390 <strlen@plt>
  40da0c:	mov	x1, x0
  40da10:	add	x23, x21, #0xdf8
  40da14:	mov	x0, x19
  40da18:	str	x1, [x24, #8]
  40da1c:	bl	41cbb8 <ferror@plt+0x1a218>
  40da20:	str	x0, [x21, #3576]
  40da24:	bl	402390 <strlen@plt>
  40da28:	str	x0, [x23, #8]
  40da2c:	ldp	x19, x20, [sp, #16]
  40da30:	ldp	x21, x22, [sp, #32]
  40da34:	ldp	x23, x24, [sp, #48]
  40da38:	ldp	x29, x30, [sp], #64
  40da3c:	ret
  40da40:	adrp	x19, 41e000 <_obstack_memory_used@@Base+0x640>
  40da44:	add	x19, x19, #0x238
  40da48:	b	40d9f8 <ferror@plt+0xb058>
  40da4c:	adrp	x19, 41e000 <_obstack_memory_used@@Base+0x640>
  40da50:	add	x19, x19, #0xe8
  40da54:	mov	x20, x19
  40da58:	b	40d9f8 <ferror@plt+0xb058>
  40da5c:	nop
  40da60:	stp	x29, x30, [sp, #-176]!
  40da64:	mov	x29, sp
  40da68:	stp	x19, x20, [sp, #16]
  40da6c:	stp	x25, x26, [sp, #64]
  40da70:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x1a640>
  40da74:	add	x19, x25, #0x898
  40da78:	stp	x21, x22, [sp, #32]
  40da7c:	mov	x21, x1
  40da80:	str	x0, [sp, #112]
  40da84:	ldr	x1, [x19, #152]
  40da88:	ldr	x0, [x19, #232]
  40da8c:	cmp	x1, x0
  40da90:	b.cs	40daa0 <ferror@plt+0xb100>  // b.hs, b.nlast
  40da94:	ldr	x1, [x19, #176]
  40da98:	cmp	x1, x0
  40da9c:	b.hi	40dc6c <ferror@plt+0xb2cc>  // b.pmore
  40daa0:	mov	x1, x0
  40daa4:	add	x0, x19, #0x90
  40daa8:	bl	41d910 <_obstack_free@@Base>
  40daac:	cmp	x21, #0x0
  40dab0:	add	x0, sp, #0xac
  40dab4:	csel	x21, x0, x21, eq  // eq = none
  40dab8:	bl	40cbb8 <ferror@plt+0xa218>
  40dabc:	mov	w20, w0
  40dac0:	cmp	w0, #0x100
  40dac4:	b.eq	40dc90 <ferror@plt+0xb2f0>  // b.none
  40dac8:	cmp	w0, #0x101
  40dacc:	ldr	x0, [x25, #2200]
  40dad0:	b.eq	40df1c <ferror@plt+0xb57c>  // b.none
  40dad4:	stp	x23, x24, [sp, #48]
  40dad8:	cbz	x0, 40dae4 <ferror@plt+0xb144>
  40dadc:	ldr	w1, [x0, #8]
  40dae0:	cbz	w1, 40dcc0 <ferror@plt+0xb320>
  40dae4:	bl	40ca80 <ferror@plt+0xa0e0>
  40dae8:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40daec:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40daf0:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40daf4:	cmp	w20, #0x0
  40daf8:	ldr	x0, [x23, #3560]
  40dafc:	ldr	w1, [x1, #3528]
  40db00:	ldr	x2, [x2, #3552]
  40db04:	str	w1, [x21]
  40db08:	str	x2, [sp, #136]
  40db0c:	ldrb	w1, [x0]
  40db10:	ccmp	w1, w20, #0x0, ne  // ne = any
  40db14:	b.eq	40ddb8 <ferror@plt+0xb418>  // b.none
  40db18:	bl	402770 <__ctype_b_loc@plt>
  40db1c:	mov	x23, x0
  40db20:	ldr	x0, [x0]
  40db24:	cmp	w20, #0x5f
  40db28:	ldrh	w0, [x0, w20, sxtw #1]
  40db2c:	and	w0, w0, #0x400
  40db30:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40db34:	b.eq	40dce0 <ferror@plt+0xb340>  // b.none
  40db38:	ldp	x1, x0, [x19, #168]
  40db3c:	add	x21, x19, #0x90
  40db40:	cmp	x0, x1
  40db44:	b.eq	40df08 <ferror@plt+0xb568>  // b.none
  40db48:	add	x0, x19, #0x90
  40db4c:	add	x2, x1, #0x1
  40db50:	mov	x21, x0
  40db54:	str	x2, [x19, #168]
  40db58:	strb	w20, [x1]
  40db5c:	nop
  40db60:	bl	40cbb8 <ferror@plt+0xa218>
  40db64:	mov	w20, w0
  40db68:	cmp	w0, #0x100
  40db6c:	b.eq	40dbe0 <ferror@plt+0xb240>  // b.none
  40db70:	ldr	x1, [x23]
  40db74:	cmp	w0, #0x5f
  40db78:	ldp	x0, x3, [x21, #24]
  40db7c:	ldrh	w1, [x1, w20, sxtw #1]
  40db80:	and	w1, w1, #0x8
  40db84:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40db88:	b.eq	40ddb0 <ferror@plt+0xb410>  // b.none
  40db8c:	cmp	x3, x0
  40db90:	b.eq	40dd6c <ferror@plt+0xb3cc>  // b.none
  40db94:	ldr	x1, [x19]
  40db98:	add	x2, x0, #0x1
  40db9c:	str	x2, [x21, #24]
  40dba0:	strb	w20, [x0]
  40dba4:	cbz	x1, 40dd64 <ferror@plt+0xb3c4>
  40dba8:	ldr	w0, [x1, #8]
  40dbac:	cbnz	w0, 40dd64 <ferror@plt+0xb3c4>
  40dbb0:	ldr	x0, [x1, #32]
  40dbb4:	ldrb	w2, [x0]
  40dbb8:	cbz	w2, 40dd64 <ferror@plt+0xb3c4>
  40dbbc:	ldrb	w2, [x19, #32]
  40dbc0:	cbnz	w2, 40dd64 <ferror@plt+0xb3c4>
  40dbc4:	add	x0, x0, #0x1
  40dbc8:	str	x0, [x1, #32]
  40dbcc:	bl	40cbb8 <ferror@plt+0xa218>
  40dbd0:	mov	w20, w0
  40dbd4:	cmp	w0, #0x100
  40dbd8:	b.ne	40db70 <ferror@plt+0xb1d0>  // b.any
  40dbdc:	nop
  40dbe0:	ldp	x0, x3, [x19, #168]
  40dbe4:	mov	w21, #0x2                   	// #2
  40dbe8:	cmp	x0, x3
  40dbec:	b.eq	40dd4c <ferror@plt+0xb3ac>  // b.none
  40dbf0:	add	x3, x0, #0x1
  40dbf4:	str	x3, [x19, #168]
  40dbf8:	strb	wzr, [x0]
  40dbfc:	mov	w2, #0x1                   	// #1
  40dc00:	ldr	x0, [sp, #112]
  40dc04:	ldp	x4, x3, [x19, #160]
  40dc08:	str	w2, [x0]
  40dc0c:	cmp	x3, x4
  40dc10:	b.eq	40dd80 <ferror@plt+0xb3e0>  // b.none
  40dc14:	ldr	x0, [x19, #192]
  40dc18:	ldr	x2, [x19, #152]
  40dc1c:	add	x3, x3, x0
  40dc20:	ldr	x5, [x19, #176]
  40dc24:	bic	x0, x3, x0
  40dc28:	str	x0, [x19, #168]
  40dc2c:	sub	x3, x0, x2
  40dc30:	sub	x2, x5, x2
  40dc34:	cmp	x3, x2
  40dc38:	b.ls	40dc44 <ferror@plt+0xb2a4>  // b.plast
  40dc3c:	mov	x0, x5
  40dc40:	str	x5, [x19, #168]
  40dc44:	str	x0, [x19, #160]
  40dc48:	ldr	x0, [sp, #112]
  40dc4c:	ldp	x23, x24, [sp, #48]
  40dc50:	str	x4, [x0, #8]
  40dc54:	mov	w0, w21
  40dc58:	ldp	x19, x20, [sp, #16]
  40dc5c:	ldp	x21, x22, [sp, #32]
  40dc60:	ldp	x25, x26, [sp, #64]
  40dc64:	ldp	x29, x30, [sp], #176
  40dc68:	ret
  40dc6c:	dup	v0.2d, x0
  40dc70:	cmp	x21, #0x0
  40dc74:	add	x0, sp, #0xac
  40dc78:	csel	x21, x0, x21, eq  // eq = none
  40dc7c:	str	q0, [x19, #160]
  40dc80:	bl	40cbb8 <ferror@plt+0xa218>
  40dc84:	mov	w20, w0
  40dc88:	cmp	w0, #0x100
  40dc8c:	b.ne	40dac8 <ferror@plt+0xb128>  // b.any
  40dc90:	ldr	x0, [x25, #2200]
  40dc94:	cbz	x0, 40dd90 <ferror@plt+0xb3f0>
  40dc98:	ldr	w21, [x0, #8]
  40dc9c:	cbnz	w21, 40dd90 <ferror@plt+0xb3f0>
  40dca0:	ldr	x1, [x0, #32]
  40dca4:	ldrb	w2, [x1]
  40dca8:	cbz	w2, 40dd90 <ferror@plt+0xb3f0>
  40dcac:	ldrb	w2, [x19, #32]
  40dcb0:	cbnz	w2, 40dd90 <ferror@plt+0xb3f0>
  40dcb4:	add	x1, x1, #0x1
  40dcb8:	str	x1, [x0, #32]
  40dcbc:	b	40dc54 <ferror@plt+0xb2b4>
  40dcc0:	ldr	x1, [x0, #32]
  40dcc4:	ldrb	w2, [x1]
  40dcc8:	cbz	w2, 40dae4 <ferror@plt+0xb144>
  40dccc:	ldrb	w2, [x19, #32]
  40dcd0:	cbnz	w2, 40dae4 <ferror@plt+0xb144>
  40dcd4:	add	x1, x1, #0x1
  40dcd8:	str	x1, [x0, #32]
  40dcdc:	b	40dae8 <ferror@plt+0xb148>
  40dce0:	stp	x27, x28, [sp, #80]
  40dce4:	adrp	x27, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40dce8:	ldr	x0, [x27, #3536]
  40dcec:	ldrb	w1, [x0]
  40dcf0:	cmp	w1, w20
  40dcf4:	cset	w23, ne  // ne = any
  40dcf8:	cmp	w20, #0x0
  40dcfc:	csinc	w23, w23, wzr, ne  // ne = any
  40dd00:	cbz	w23, 40df64 <ferror@plt+0xb5c4>
  40dd04:	sub	w0, w20, #0x28
  40dd08:	mov	w21, #0x6                   	// #6
  40dd0c:	cmp	w0, #0x4
  40dd10:	b.hi	40dd20 <ferror@plt+0xb380>  // b.pmore
  40dd14:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40dd18:	add	x1, x1, #0x780
  40dd1c:	ldr	w21, [x1, w0, uxtw #2]
  40dd20:	ldp	x1, x0, [x19, #168]
  40dd24:	add	x23, x19, #0x90
  40dd28:	cmp	x0, x1
  40dd2c:	b.eq	40e290 <ferror@plt+0xb8f0>  // b.none
  40dd30:	add	x0, x1, #0x1
  40dd34:	str	x0, [x19, #168]
  40dd38:	strb	w20, [x1]
  40dd3c:	ldp	x0, x3, [x19, #168]
  40dd40:	ldp	x27, x28, [sp, #80]
  40dd44:	cmp	x0, x3
  40dd48:	b.ne	40dbf0 <ferror@plt+0xb250>  // b.any
  40dd4c:	add	x20, x19, #0x90
  40dd50:	mov	x1, #0x1                   	// #1
  40dd54:	mov	x0, x20
  40dd58:	bl	41d788 <_obstack_newchunk@@Base>
  40dd5c:	ldr	x0, [x19, #168]
  40dd60:	b	40dbf0 <ferror@plt+0xb250>
  40dd64:	bl	40ca80 <ferror@plt+0xa0e0>
  40dd68:	b	40db60 <ferror@plt+0xb1c0>
  40dd6c:	mov	x0, x21
  40dd70:	mov	x1, #0x1                   	// #1
  40dd74:	bl	41d788 <_obstack_newchunk@@Base>
  40dd78:	ldr	x0, [x21, #24]
  40dd7c:	b	40db94 <ferror@plt+0xb1f4>
  40dd80:	ldrb	w0, [x19, #224]
  40dd84:	orr	w0, w0, #0x2
  40dd88:	strb	w0, [x19, #224]
  40dd8c:	b	40dc14 <ferror@plt+0xb274>
  40dd90:	bl	40ca80 <ferror@plt+0xa0e0>
  40dd94:	mov	w21, #0x0                   	// #0
  40dd98:	mov	w0, w21
  40dd9c:	ldp	x19, x20, [sp, #16]
  40dda0:	ldp	x21, x22, [sp, #32]
  40dda4:	ldp	x25, x26, [sp, #64]
  40dda8:	ldp	x29, x30, [sp], #176
  40ddac:	ret
  40ddb0:	mov	w21, #0x2                   	// #2
  40ddb4:	b	40dbe8 <ferror@plt+0xb248>
  40ddb8:	ldrb	w1, [x0, #1]
  40ddbc:	cbnz	w1, 40e264 <ferror@plt+0xb8c4>
  40ddc0:	add	x24, x19, #0x90
  40ddc4:	add	x2, x23, #0xde8
  40ddc8:	ldp	x0, x1, [x24, #24]
  40ddcc:	ldr	x20, [x2, #8]
  40ddd0:	sub	x1, x1, x0
  40ddd4:	cmp	x20, x1
  40ddd8:	b.hi	40e27c <ferror@plt+0xb8dc>  // b.pmore
  40dddc:	ldr	x1, [x23, #3560]
  40dde0:	mov	x2, x20
  40dde4:	adrp	x24, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40dde8:	bl	402350 <memcpy@plt>
  40ddec:	ldr	x1, [x19, #168]
  40ddf0:	add	x0, x19, #0x90
  40ddf4:	mov	x23, x0
  40ddf8:	add	x1, x1, x20
  40ddfc:	str	x1, [x19, #168]
  40de00:	b	40de58 <ferror@plt+0xb4b8>
  40de04:	ldr	x1, [x0, #32]
  40de08:	ldrb	w2, [x1]
  40de0c:	cbz	w2, 40de68 <ferror@plt+0xb4c8>
  40de10:	ldrb	w2, [x19, #32]
  40de14:	cbnz	w2, 40de68 <ferror@plt+0xb4c8>
  40de18:	add	x2, x1, #0x1
  40de1c:	str	x2, [x0, #32]
  40de20:	ldrb	w20, [x1]
  40de24:	nop
  40de28:	ldr	x0, [x24, #3576]
  40de2c:	cmp	w20, #0x0
  40de30:	add	x25, x24, #0xdf8
  40de34:	ldrb	w1, [x0]
  40de38:	ccmp	w1, w20, #0x0, ne  // ne = any
  40de3c:	b.eq	40deb4 <ferror@plt+0xb514>  // b.none
  40de40:	ldp	x0, x1, [x23, #24]
  40de44:	cmp	x1, x0
  40de48:	b.eq	40dea0 <ferror@plt+0xb500>  // b.none
  40de4c:	add	x1, x0, #0x1
  40de50:	str	x1, [x23, #24]
  40de54:	strb	w20, [x0]
  40de58:	ldr	x0, [x19]
  40de5c:	cbz	x0, 40de68 <ferror@plt+0xb4c8>
  40de60:	ldr	w1, [x0, #8]
  40de64:	cbz	w1, 40de04 <ferror@plt+0xb464>
  40de68:	bl	40ca80 <ferror@plt+0xa0e0>
  40de6c:	mov	w20, w0
  40de70:	cmp	w0, #0x100
  40de74:	b.ne	40de28 <ferror@plt+0xb488>  // b.any
  40de78:	ldr	w3, [x21]
  40de7c:	mov	w0, #0x1                   	// #1
  40de80:	ldr	x2, [sp, #136]
  40de84:	mov	w21, w0
  40de88:	adrp	x4, 420000 <_obstack_memory_used@@Base+0x2640>
  40de8c:	mov	w1, #0x0                   	// #0
  40de90:	add	x4, x4, #0x760
  40de94:	bl	403490 <ferror@plt+0xaf0>
  40de98:	ldp	x0, x3, [x19, #168]
  40de9c:	b	40dbe8 <ferror@plt+0xb248>
  40dea0:	mov	x0, x23
  40dea4:	mov	x1, #0x1                   	// #1
  40dea8:	bl	41d788 <_obstack_newchunk@@Base>
  40deac:	ldr	x0, [x23, #24]
  40deb0:	b	40de4c <ferror@plt+0xb4ac>
  40deb4:	ldrb	w1, [x0, #1]
  40deb8:	cbz	w1, 40ded0 <ferror@plt+0xb530>
  40debc:	add	x0, x0, #0x1
  40dec0:	mov	w1, #0x1                   	// #1
  40dec4:	bl	40d1f8 <ferror@plt+0xa858>
  40dec8:	tst	w0, #0xff
  40decc:	b.eq	40de40 <ferror@plt+0xb4a0>  // b.none
  40ded0:	add	x21, x19, #0x90
  40ded4:	ldr	x20, [x25, #8]
  40ded8:	ldp	x0, x1, [x21, #24]
  40dedc:	sub	x1, x1, x0
  40dee0:	cmp	x20, x1
  40dee4:	b.hi	40e2a4 <ferror@plt+0xb904>  // b.pmore
  40dee8:	ldr	x1, [x24, #3576]
  40deec:	mov	x2, x20
  40def0:	mov	w21, #0x1                   	// #1
  40def4:	bl	402350 <memcpy@plt>
  40def8:	ldp	x0, x3, [x19, #168]
  40defc:	add	x0, x0, x20
  40df00:	str	x0, [x19, #168]
  40df04:	b	40dbe8 <ferror@plt+0xb248>
  40df08:	mov	x1, #0x1                   	// #1
  40df0c:	mov	x0, x21
  40df10:	bl	41d788 <_obstack_newchunk@@Base>
  40df14:	ldr	x1, [x19, #168]
  40df18:	b	40db48 <ferror@plt+0xb1a8>
  40df1c:	ldr	w1, [x0, #8]
  40df20:	cmp	w1, #0x2
  40df24:	b.ne	40e3a4 <ferror@plt+0xba04>  // b.any
  40df28:	ldr	x2, [sp, #112]
  40df2c:	str	w1, [x2]
  40df30:	ldr	x1, [x0, #32]
  40df34:	str	x1, [x2, #8]
  40df38:	ldr	w1, [x0, #8]
  40df3c:	cbnz	w1, 40e020 <ferror@plt+0xb680>
  40df40:	ldr	x1, [x0, #32]
  40df44:	ldrb	w2, [x1]
  40df48:	cbz	w2, 40e020 <ferror@plt+0xb680>
  40df4c:	ldrb	w2, [x19, #32]
  40df50:	cbnz	w2, 40e020 <ferror@plt+0xb680>
  40df54:	add	x1, x1, #0x1
  40df58:	mov	w21, #0x7                   	// #7
  40df5c:	str	x1, [x0, #32]
  40df60:	b	40dc54 <ferror@plt+0xb2b4>
  40df64:	ldrb	w1, [x0, #1]
  40df68:	cbnz	w1, 40e2c4 <ferror@plt+0xb924>
  40df6c:	add	x0, x27, #0xdd0
  40df70:	str	x0, [sp, #120]
  40df74:	adrp	x24, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40df78:	add	x24, x24, #0xe08
  40df7c:	ldr	x0, [x0, #8]
  40df80:	cmp	x0, #0x1
  40df84:	b.eq	40e2f4 <ferror@plt+0xb954>  // b.none
  40df88:	str	wzr, [sp, #156]
  40df8c:	ldr	x27, [x25, #2200]
  40df90:	add	x22, x19, #0x90
  40df94:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40df98:	mov	w20, #0x1                   	// #1
  40df9c:	add	x0, x0, #0x740
  40dfa0:	str	x0, [sp, #144]
  40dfa4:	nop
  40dfa8:	cbz	x27, 40dfc4 <ferror@plt+0xb624>
  40dfac:	ldr	w0, [x27, #8]
  40dfb0:	cbnz	w0, 40dfc4 <ferror@plt+0xb624>
  40dfb4:	ldr	x0, [x27, #32]
  40dfb8:	str	x0, [sp, #128]
  40dfbc:	ldrb	w0, [x0]
  40dfc0:	cbnz	w0, 40e0f0 <ferror@plt+0xb750>
  40dfc4:	bl	40ca80 <ferror@plt+0xa0e0>
  40dfc8:	mov	w26, w0
  40dfcc:	cmp	w0, #0x100
  40dfd0:	b.eq	40e088 <ferror@plt+0xb6e8>  // b.none
  40dfd4:	ldr	x0, [x24]
  40dfd8:	ldrb	w1, [x0]
  40dfdc:	cmp	w1, w26
  40dfe0:	b.eq	40e02c <ferror@plt+0xb68c>  // b.none
  40dfe4:	ldr	x0, [sp, #120]
  40dfe8:	cmp	w26, #0x0
  40dfec:	and	w28, w26, #0xff
  40dff0:	ldr	x0, [x0]
  40dff4:	ldrb	w1, [x0]
  40dff8:	ccmp	w1, w26, #0x0, ne  // ne = any
  40dffc:	b.eq	40e0c0 <ferror@plt+0xb720>  // b.none
  40e000:	ldp	x0, x1, [x22, #24]
  40e004:	cmp	x1, x0
  40e008:	b.eq	40e0ac <ferror@plt+0xb70c>  // b.none
  40e00c:	add	x1, x0, #0x1
  40e010:	str	x1, [x22, #24]
  40e014:	strb	w28, [x0]
  40e018:	ldr	x27, [x19]
  40e01c:	b	40dfa8 <ferror@plt+0xb608>
  40e020:	mov	w21, #0x7                   	// #7
  40e024:	bl	40ca80 <ferror@plt+0xa0e0>
  40e028:	b	40dc54 <ferror@plt+0xb2b4>
  40e02c:	cbz	w26, 40e09c <ferror@plt+0xb6fc>
  40e030:	ldrb	w1, [x0, #1]
  40e034:	cbnz	w1, 40e1b4 <ferror@plt+0xb814>
  40e038:	subs	w20, w20, #0x1
  40e03c:	ldp	x0, x3, [x22, #24]
  40e040:	b.eq	40e2b8 <ferror@plt+0xb918>  // b.none
  40e044:	ldr	x26, [x24, #8]
  40e048:	sub	x3, x3, x0
  40e04c:	cmp	x26, x3
  40e050:	b.hi	40e074 <ferror@plt+0xb6d4>  // b.pmore
  40e054:	ldr	x1, [x24]
  40e058:	mov	x2, x26
  40e05c:	bl	402350 <memcpy@plt>
  40e060:	ldr	x0, [x22, #24]
  40e064:	ldr	x27, [x19]
  40e068:	add	x26, x0, x26
  40e06c:	str	x26, [x22, #24]
  40e070:	b	40dfa8 <ferror@plt+0xb608>
  40e074:	mov	x0, x22
  40e078:	mov	x1, x26
  40e07c:	bl	41d788 <_obstack_newchunk@@Base>
  40e080:	ldr	x0, [x22, #24]
  40e084:	b	40e054 <ferror@plt+0xb6b4>
  40e088:	ldp	x2, x4, [sp, #136]
  40e08c:	mov	w1, #0x0                   	// #0
  40e090:	ldr	w3, [x21]
  40e094:	mov	w0, #0x1                   	// #1
  40e098:	bl	403490 <ferror@plt+0xaf0>
  40e09c:	ldp	x0, x1, [x22, #24]
  40e0a0:	mov	w28, #0x0                   	// #0
  40e0a4:	cmp	x1, x0
  40e0a8:	b.ne	40e00c <ferror@plt+0xb66c>  // b.any
  40e0ac:	mov	x0, x22
  40e0b0:	mov	x1, #0x1                   	// #1
  40e0b4:	bl	41d788 <_obstack_newchunk@@Base>
  40e0b8:	ldr	x0, [x22, #24]
  40e0bc:	b	40e00c <ferror@plt+0xb66c>
  40e0c0:	ldrb	w1, [x0, #1]
  40e0c4:	cbnz	w1, 40e1cc <ferror@plt+0xb82c>
  40e0c8:	ldp	x0, x1, [x22, #24]
  40e0cc:	add	w20, w20, #0x1
  40e0d0:	ldr	x2, [sp, #120]
  40e0d4:	ldr	x26, [x2, #8]
  40e0d8:	sub	x1, x1, x0
  40e0dc:	cmp	x26, x1
  40e0e0:	b.hi	40e1e4 <ferror@plt+0xb844>  // b.pmore
  40e0e4:	ldr	x1, [sp, #120]
  40e0e8:	ldr	x1, [x1]
  40e0ec:	b	40e058 <ferror@plt+0xb6b8>
  40e0f0:	ldp	x0, x4, [sp, #120]
  40e0f4:	ldr	x1, [x0]
  40e0f8:	ldr	x0, [x24]
  40e0fc:	ldrb	w26, [x1]
  40e100:	ldr	x1, [x27, #40]
  40e104:	str	x1, [sp, #104]
  40e108:	ldrb	w28, [x0]
  40e10c:	nop
  40e110:	ldr	x0, [sp, #104]
  40e114:	mov	w2, w28
  40e118:	mov	w1, w26
  40e11c:	sub	x3, x0, x4
  40e120:	mov	x0, x4
  40e124:	bl	417ac0 <ferror@plt+0x15120>
  40e128:	cmp	x0, #0x0
  40e12c:	mov	x4, x0
  40e130:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  40e134:	b.eq	40e1f8 <ferror@plt+0xb858>  // b.none
  40e138:	ldrb	w0, [x4], #1
  40e13c:	cmp	w0, w28
  40e140:	b.eq	40e1a8 <ferror@plt+0xb808>  // b.none
  40e144:	adds	w20, w20, #0x1
  40e148:	b.ne	40e110 <ferror@plt+0xb770>  // b.any
  40e14c:	ldr	w0, [sp, #156]
  40e150:	cbnz	w0, 40e310 <ferror@plt+0xb970>
  40e154:	ldr	x1, [sp, #128]
  40e158:	ldr	x0, [x22, #24]
  40e15c:	sub	x26, x4, x1
  40e160:	ldr	x1, [x22, #32]
  40e164:	sub	x1, x1, x0
  40e168:	cmp	x26, x1
  40e16c:	b.hi	40e244 <ferror@plt+0xb8a4>  // b.pmore
  40e170:	ldr	x1, [sp, #128]
  40e174:	mov	x2, x26
  40e178:	str	x4, [sp, #104]
  40e17c:	bl	402350 <memcpy@plt>
  40e180:	ldr	x1, [x22, #24]
  40e184:	add	x2, x26, #0x1
  40e188:	ldr	x4, [sp, #104]
  40e18c:	add	x1, x1, x26
  40e190:	ldr	x0, [x27, #32]
  40e194:	str	x1, [x22, #24]
  40e198:	add	x0, x0, x2
  40e19c:	ldrb	w26, [x4]
  40e1a0:	str	x0, [x27, #32]
  40e1a4:	b	40dfd4 <ferror@plt+0xb634>
  40e1a8:	subs	w20, w20, #0x1
  40e1ac:	b.ne	40e110 <ferror@plt+0xb770>  // b.any
  40e1b0:	b	40e14c <ferror@plt+0xb7ac>
  40e1b4:	add	x0, x0, #0x1
  40e1b8:	mov	w1, #0x1                   	// #1
  40e1bc:	bl	40d1f8 <ferror@plt+0xa858>
  40e1c0:	tst	w0, #0xff
  40e1c4:	b.ne	40e038 <ferror@plt+0xb698>  // b.any
  40e1c8:	b	40dfe4 <ferror@plt+0xb644>
  40e1cc:	add	x0, x0, #0x1
  40e1d0:	mov	w1, #0x1                   	// #1
  40e1d4:	bl	40d1f8 <ferror@plt+0xa858>
  40e1d8:	tst	w0, #0xff
  40e1dc:	b.eq	40e000 <ferror@plt+0xb660>  // b.none
  40e1e0:	b	40e0c8 <ferror@plt+0xb728>
  40e1e4:	mov	x0, x22
  40e1e8:	mov	x1, x26
  40e1ec:	bl	41d788 <_obstack_newchunk@@Base>
  40e1f0:	ldr	x0, [x22, #24]
  40e1f4:	b	40e0e4 <ferror@plt+0xb744>
  40e1f8:	cbnz	x0, 40e14c <ferror@plt+0xb7ac>
  40e1fc:	ldr	x1, [sp, #104]
  40e200:	ldr	x2, [sp, #128]
  40e204:	ldr	x0, [x22, #24]
  40e208:	sub	x26, x1, x2
  40e20c:	ldr	x1, [x22, #32]
  40e210:	sub	x1, x1, x0
  40e214:	cmp	x26, x1
  40e218:	b.hi	40e2dc <ferror@plt+0xb93c>  // b.pmore
  40e21c:	ldr	x1, [sp, #128]
  40e220:	mov	x2, x26
  40e224:	bl	402350 <memcpy@plt>
  40e228:	ldr	x1, [x22, #24]
  40e22c:	ldr	x0, [x27, #32]
  40e230:	add	x1, x1, x26
  40e234:	str	x1, [x22, #24]
  40e238:	add	x26, x0, x26
  40e23c:	str	x26, [x27, #32]
  40e240:	b	40dfa8 <ferror@plt+0xb608>
  40e244:	mov	x0, x22
  40e248:	mov	x1, x26
  40e24c:	str	x4, [sp, #104]
  40e250:	bl	41d788 <_obstack_newchunk@@Base>
  40e254:	ldr	x27, [x19]
  40e258:	ldr	x0, [x22, #24]
  40e25c:	ldr	x4, [sp, #104]
  40e260:	b	40e170 <ferror@plt+0xb7d0>
  40e264:	add	x0, x0, #0x1
  40e268:	mov	w1, #0x1                   	// #1
  40e26c:	bl	40d1f8 <ferror@plt+0xa858>
  40e270:	tst	w0, #0xff
  40e274:	b.ne	40ddc0 <ferror@plt+0xb420>  // b.any
  40e278:	b	40db18 <ferror@plt+0xb178>
  40e27c:	mov	x0, x24
  40e280:	mov	x1, x20
  40e284:	bl	41d788 <_obstack_newchunk@@Base>
  40e288:	ldr	x0, [x24, #24]
  40e28c:	b	40dddc <ferror@plt+0xb43c>
  40e290:	mov	x1, #0x1                   	// #1
  40e294:	mov	x0, x23
  40e298:	bl	41d788 <_obstack_newchunk@@Base>
  40e29c:	ldr	x1, [x19, #168]
  40e2a0:	b	40dd30 <ferror@plt+0xb390>
  40e2a4:	mov	x0, x21
  40e2a8:	mov	x1, x20
  40e2ac:	bl	41d788 <_obstack_newchunk@@Base>
  40e2b0:	ldr	x0, [x21, #24]
  40e2b4:	b	40dee8 <ferror@plt+0xb548>
  40e2b8:	mov	w21, #0x1                   	// #1
  40e2bc:	ldp	x27, x28, [sp, #80]
  40e2c0:	b	40dbe8 <ferror@plt+0xb248>
  40e2c4:	add	x0, x0, #0x1
  40e2c8:	mov	w1, #0x1                   	// #1
  40e2cc:	bl	40d1f8 <ferror@plt+0xa858>
  40e2d0:	tst	w0, #0xff
  40e2d4:	b.ne	40df6c <ferror@plt+0xb5cc>  // b.any
  40e2d8:	b	40dd04 <ferror@plt+0xb364>
  40e2dc:	mov	x0, x22
  40e2e0:	mov	x1, x26
  40e2e4:	bl	41d788 <_obstack_newchunk@@Base>
  40e2e8:	ldr	x27, [x19]
  40e2ec:	ldr	x0, [x22, #24]
  40e2f0:	b	40e21c <ferror@plt+0xb87c>
  40e2f4:	ldr	x0, [x24, #8]
  40e2f8:	mov	w1, #0x0                   	// #0
  40e2fc:	cmp	x0, #0x1
  40e300:	csel	w23, w23, w0, ne  // ne = any
  40e304:	csel	w0, w1, w0, ne  // ne = any
  40e308:	str	w0, [sp, #156]
  40e30c:	b	40df8c <ferror@plt+0xb5ec>
  40e310:	cbnz	w20, 40e380 <ferror@plt+0xb9e0>
  40e314:	ldr	x0, [sp, #128]
  40e318:	add	x21, x19, #0x90
  40e31c:	ldr	x1, [x19, #176]
  40e320:	sub	x23, x4, x0
  40e324:	ldr	x0, [x19, #168]
  40e328:	sub	x20, x23, #0x1
  40e32c:	sub	x1, x1, x0
  40e330:	cmp	x20, x1
  40e334:	b.hi	40e368 <ferror@plt+0xb9c8>  // b.pmore
  40e338:	ldr	x1, [sp, #128]
  40e33c:	mov	x2, x20
  40e340:	mov	w21, #0x1                   	// #1
  40e344:	bl	402350 <memcpy@plt>
  40e348:	ldp	x0, x3, [x19, #168]
  40e34c:	ldr	x4, [x27, #32]
  40e350:	add	x4, x4, x23
  40e354:	str	x4, [x27, #32]
  40e358:	add	x0, x0, x20
  40e35c:	str	x0, [x19, #168]
  40e360:	ldp	x27, x28, [sp, #80]
  40e364:	b	40dbe8 <ferror@plt+0xb248>
  40e368:	mov	x0, x21
  40e36c:	mov	x1, x20
  40e370:	bl	41d788 <_obstack_newchunk@@Base>
  40e374:	ldr	x27, [x25, #2200]
  40e378:	ldr	x0, [x19, #168]
  40e37c:	b	40e338 <ferror@plt+0xb998>
  40e380:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  40e384:	add	x3, x3, #0x780
  40e388:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40e38c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40e390:	add	x3, x3, #0x18
  40e394:	add	x1, x1, #0x728
  40e398:	add	x0, x0, #0x730
  40e39c:	mov	w2, #0x3cd                 	// #973
  40e3a0:	bl	402910 <__assert_fail@plt>
  40e3a4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40e3a8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40e3ac:	add	x2, x2, #0x6f8
  40e3b0:	mov	w1, #0x0                   	// #0
  40e3b4:	ldr	w0, [x0, #1676]
  40e3b8:	stp	x23, x24, [sp, #48]
  40e3bc:	stp	x27, x28, [sp, #80]
  40e3c0:	bl	4033d0 <ferror@plt+0xa30>
  40e3c4:	bl	4026d0 <abort@plt>
  40e3c8:	stp	x29, x30, [sp, #-32]!
  40e3cc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40e3d0:	mov	x29, sp
  40e3d4:	stp	x19, x20, [sp, #16]
  40e3d8:	ldr	x19, [x0, #2200]
  40e3dc:	cbz	x19, 40e468 <ferror@plt+0xbac8>
  40e3e0:	ldr	w0, [x19, #8]
  40e3e4:	cmp	w0, #0x1
  40e3e8:	b.eq	40e440 <ferror@plt+0xbaa0>  // b.none
  40e3ec:	cmp	w0, #0x2
  40e3f0:	b.eq	40e430 <ferror@plt+0xba90>  // b.none
  40e3f4:	cbz	w0, 40e478 <ferror@plt+0xbad8>
  40e3f8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40e3fc:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40e400:	add	x2, x2, #0x648
  40e404:	mov	w1, #0x0                   	// #0
  40e408:	ldr	w0, [x0, #1676]
  40e40c:	bl	4033d0 <ferror@plt+0xa30>
  40e410:	bl	4026d0 <abort@plt>
  40e414:	ldr	x1, [x19, #32]
  40e418:	bl	4027d0 <ungetc@plt>
  40e41c:	cmp	w20, #0x100
  40e420:	b.eq	40e468 <ferror@plt+0xbac8>  // b.none
  40e424:	cmp	w20, #0x101
  40e428:	b.ne	40e488 <ferror@plt+0xbae8>  // b.any
  40e42c:	nop
  40e430:	mov	w0, #0x7                   	// #7
  40e434:	ldp	x19, x20, [sp, #16]
  40e438:	ldp	x29, x30, [sp], #32
  40e43c:	ret
  40e440:	ldr	x0, [x19, #32]
  40e444:	bl	402640 <getc@plt>
  40e448:	mov	w20, w0
  40e44c:	cmn	w0, #0x1
  40e450:	b.ne	40e414 <ferror@plt+0xba74>  // b.any
  40e454:	ldrb	w0, [x19, #40]
  40e458:	orr	w0, w0, #0x1
  40e45c:	strb	w0, [x19, #40]
  40e460:	ldr	x19, [x19]
  40e464:	cbnz	x19, 40e3e0 <ferror@plt+0xba40>
  40e468:	mov	w0, #0x0                   	// #0
  40e46c:	ldp	x19, x20, [sp, #16]
  40e470:	ldp	x29, x30, [sp], #32
  40e474:	ret
  40e478:	ldr	x0, [x19, #32]
  40e47c:	ldrb	w20, [x0]
  40e480:	cbz	w20, 40e460 <ferror@plt+0xbac0>
  40e484:	nop
  40e488:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40e48c:	cmp	w20, #0x0
  40e490:	cset	w19, ne  // ne = any
  40e494:	ldr	x0, [x0, #3560]
  40e498:	cmp	w19, #0x0
  40e49c:	ldrb	w1, [x0]
  40e4a0:	ccmp	w1, w20, #0x0, ne  // ne = any
  40e4a4:	b.eq	40e504 <ferror@plt+0xbb64>  // b.none
  40e4a8:	bl	402770 <__ctype_b_loc@plt>
  40e4ac:	mov	x1, x0
  40e4b0:	cmp	w20, #0x5f
  40e4b4:	mov	w0, #0x2                   	// #2
  40e4b8:	ldr	x1, [x1]
  40e4bc:	ldrh	w1, [x1, w20, sxtw #1]
  40e4c0:	and	w1, w1, #0x400
  40e4c4:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40e4c8:	b.ne	40e434 <ferror@plt+0xba94>  // b.any
  40e4cc:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40e4d0:	cmp	w19, #0x0
  40e4d4:	ldr	x0, [x0, #3536]
  40e4d8:	ldrb	w1, [x0]
  40e4dc:	ccmp	w1, w20, #0x0, ne  // ne = any
  40e4e0:	b.eq	40e51c <ferror@plt+0xbb7c>  // b.none
  40e4e4:	sub	w20, w20, #0x28
  40e4e8:	mov	w0, #0x6                   	// #6
  40e4ec:	cmp	w20, #0x4
  40e4f0:	b.hi	40e434 <ferror@plt+0xba94>  // b.pmore
  40e4f4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40e4f8:	add	x0, x0, #0x780
  40e4fc:	ldr	w0, [x0, w20, uxtw #2]
  40e500:	b	40e434 <ferror@plt+0xba94>
  40e504:	ldrb	w1, [x0, #1]
  40e508:	cbnz	w1, 40e53c <ferror@plt+0xbb9c>
  40e50c:	mov	w0, #0x1                   	// #1
  40e510:	ldp	x19, x20, [sp, #16]
  40e514:	ldp	x29, x30, [sp], #32
  40e518:	ret
  40e51c:	ldrb	w1, [x0, #1]
  40e520:	cbz	w1, 40e50c <ferror@plt+0xbb6c>
  40e524:	mov	w1, #0x0                   	// #0
  40e528:	bl	40d1f8 <ferror@plt+0xa858>
  40e52c:	tst	w0, #0xff
  40e530:	b.eq	40e4e4 <ferror@plt+0xbb44>  // b.none
  40e534:	mov	w0, #0x1                   	// #1
  40e538:	b	40e510 <ferror@plt+0xbb70>
  40e53c:	mov	w1, #0x0                   	// #0
  40e540:	bl	40d1f8 <ferror@plt+0xa858>
  40e544:	tst	w0, #0xff
  40e548:	b.eq	40e4a8 <ferror@plt+0xbb08>  // b.none
  40e54c:	mov	w0, #0x1                   	// #1
  40e550:	b	40e510 <ferror@plt+0xbb70>
  40e554:	nop
  40e558:	stp	x29, x30, [sp, #-304]!
  40e55c:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x1a640>
  40e560:	mov	x29, sp
  40e564:	stp	x19, x20, [sp, #16]
  40e568:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  40e56c:	add	x19, x19, #0x990
  40e570:	ldr	w1, [x0, #12]
  40e574:	mov	x20, x0
  40e578:	ldr	w3, [x2, #848]
  40e57c:	ldr	w0, [x19, #88]
  40e580:	add	w1, w1, #0x1
  40e584:	stp	x23, x24, [sp, #48]
  40e588:	adrp	x24, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40e58c:	add	w0, w0, #0x1
  40e590:	cmp	w3, #0x0
  40e594:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40e598:	ccmp	w0, w3, #0x4, gt
  40e59c:	str	w0, [x19, #88]
  40e5a0:	ldr	w0, [x24, #3528]
  40e5a4:	stp	x21, x22, [sp, #32]
  40e5a8:	stp	x25, x26, [sp, #64]
  40e5ac:	stp	x27, x28, [sp, #80]
  40e5b0:	str	w0, [sp, #136]
  40e5b4:	ldr	x0, [x23, #3552]
  40e5b8:	str	w1, [x20, #12]
  40e5bc:	str	x0, [sp, #128]
  40e5c0:	b.gt	40ec78 <ferror@plt+0xc2d8>
  40e5c4:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  40e5c8:	ldr	w25, [x19, #92]
  40e5cc:	ldp	x3, x21, [x19, #112]
  40e5d0:	add	w1, w25, #0x1
  40e5d4:	ldr	w2, [x22, #1692]
  40e5d8:	str	w1, [x19, #92]
  40e5dc:	str	w1, [sp, #140]
  40e5e0:	and	w27, w2, #0x8
  40e5e4:	ldr	x0, [x19, #24]
  40e5e8:	sub	x21, x21, x3
  40e5ec:	ldr	x3, [x19, #16]
  40e5f0:	tbnz	w2, #3, 40e7d0 <ferror@plt+0xbe30>
  40e5f4:	ldrb	w1, [x20, #8]
  40e5f8:	cmp	x0, x3
  40e5fc:	and	w28, w1, #0x1
  40e600:	b.eq	40e818 <ferror@plt+0xbe78>  // b.none
  40e604:	add	x25, sp, #0xd8
  40e608:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40e60c:	adrp	x3, 41c000 <ferror@plt+0x19660>
  40e610:	mov	x0, x25
  40e614:	add	x4, x4, #0x7c0
  40e618:	add	x3, x3, #0xa30
  40e61c:	mov	x2, #0x0                   	// #0
  40e620:	mov	x1, #0x0                   	// #0
  40e624:	bl	41d5b0 <_obstack_begin@@Base>
  40e628:	cbnz	w28, 40e7fc <ferror@plt+0xbe5c>
  40e62c:	ldrb	w1, [x20, #8]
  40e630:	ldr	x0, [sp, #240]
  40e634:	str	wzr, [sp, #116]
  40e638:	ldr	x2, [x25, #32]
  40e63c:	ubfx	x1, x1, #2, #1
  40e640:	ldr	x3, [x20, #16]
  40e644:	mov	w4, #0x1                   	// #1
  40e648:	str	x1, [sp, #144]
  40e64c:	sub	x2, x2, x0
  40e650:	str	w4, [sp, #184]
  40e654:	cmp	x2, #0xf
  40e658:	str	x3, [sp, #192]
  40e65c:	b.ls	40e89c <ferror@plt+0xbefc>  // b.plast
  40e660:	ldp	x2, x3, [sp, #184]
  40e664:	stp	x2, x3, [x0]
  40e668:	ldp	x26, x0, [x25, #16]
  40e66c:	add	x0, x0, #0x10
  40e670:	cmp	x0, x26
  40e674:	b.eq	40e8c4 <ferror@plt+0xbf24>  // b.none
  40e678:	ldr	x1, [x25, #48]
  40e67c:	ldr	x2, [x25, #8]
  40e680:	add	x0, x0, x1
  40e684:	ldr	x3, [x25, #32]
  40e688:	bic	x1, x0, x1
  40e68c:	str	x1, [x25, #24]
  40e690:	sub	x0, x1, x2
  40e694:	sub	x2, x3, x2
  40e698:	cmp	x0, x2
  40e69c:	b.ls	40e6a8 <ferror@plt+0xbd08>  // b.plast
  40e6a0:	mov	x1, x3
  40e6a4:	str	x3, [x25, #24]
  40e6a8:	str	x1, [x25, #16]
  40e6ac:	add	x22, x19, #0x60
  40e6b0:	ldr	x0, [x19, #120]
  40e6b4:	ldr	x1, [x19, #128]
  40e6b8:	sub	x1, x1, x0
  40e6bc:	cmp	x1, #0x7
  40e6c0:	b.ls	40e8d4 <ferror@plt+0xbf34>  // b.plast
  40e6c4:	add	x22, x19, #0x60
  40e6c8:	str	x26, [x0]
  40e6cc:	ldr	x0, [x22, #24]
  40e6d0:	add	x0, x0, #0x8
  40e6d4:	str	x0, [x22, #24]
  40e6d8:	bl	40e3c8 <ferror@plt+0xba28>
  40e6dc:	cmp	w0, #0x3
  40e6e0:	b.eq	40e904 <ferror@plt+0xbf64>  // b.none
  40e6e4:	ldr	x1, [x22, #24]
  40e6e8:	and	x0, x21, #0xffffffff
  40e6ec:	ldr	x22, [x19, #112]
  40e6f0:	str	x0, [sp, #104]
  40e6f4:	ldr	x0, [sp, #128]
  40e6f8:	sub	x28, x1, x22
  40e6fc:	ldr	x26, [x23, #3552]
  40e700:	str	x0, [x23, #3552]
  40e704:	ldr	w0, [sp, #136]
  40e708:	sub	x28, x28, w21, uxtw
  40e70c:	ldr	w25, [x24, #3528]
  40e710:	add	x21, x22, w21, uxtw
  40e714:	str	w0, [x24, #3528]
  40e718:	lsr	x28, x28, #3
  40e71c:	cbnz	w27, 40e9e4 <ferror@plt+0xc044>
  40e720:	bl	40cfc8 <ferror@plt+0xa628>
  40e724:	ldr	w1, [x20, #24]
  40e728:	cmp	w1, #0x1
  40e72c:	b.ne	40e858 <ferror@plt+0xbeb8>  // b.any
  40e730:	mov	x3, x21
  40e734:	mov	w2, w28
  40e738:	mov	x1, x20
  40e73c:	bl	408b90 <ferror@plt+0x61f0>
  40e740:	bl	40d0b8 <ferror@plt+0xa718>
  40e744:	mov	x3, x0
  40e748:	cbnz	w27, 40e87c <ferror@plt+0xbedc>
  40e74c:	ldr	w0, [x19, #88]
  40e750:	ldr	w1, [x20, #12]
  40e754:	ldrb	w2, [x20, #8]
  40e758:	sub	w0, w0, #0x1
  40e75c:	sub	w1, w1, #0x1
  40e760:	str	x26, [x23, #3552]
  40e764:	str	w25, [x24, #3528]
  40e768:	str	w1, [x20, #12]
  40e76c:	str	w0, [x19, #88]
  40e770:	tbnz	w2, #4, 40ea0c <ferror@plt+0xc06c>
  40e774:	ldr	w0, [sp, #116]
  40e778:	cbz	w0, 40e9fc <ferror@plt+0xc05c>
  40e77c:	ldr	x0, [sp, #104]
  40e780:	ldr	x1, [x22, x0]
  40e784:	ldr	x0, [x19, #8]
  40e788:	cmp	x0, x1
  40e78c:	b.cs	40e890 <ferror@plt+0xbef0>  // b.hs, b.nlast
  40e790:	ldr	x0, [x19, #32]
  40e794:	cmp	x0, x1
  40e798:	b.ls	40e890 <ferror@plt+0xbef0>  // b.plast
  40e79c:	dup	v0.2d, x1
  40e7a0:	str	q0, [x19, #16]
  40e7a4:	neg	w28, w28
  40e7a8:	ldr	x0, [x19, #120]
  40e7ac:	ldp	x21, x22, [sp, #32]
  40e7b0:	add	x28, x0, w28, sxtw #3
  40e7b4:	str	x28, [x19, #120]
  40e7b8:	ldp	x19, x20, [sp, #16]
  40e7bc:	ldp	x23, x24, [sp, #48]
  40e7c0:	ldp	x25, x26, [sp, #64]
  40e7c4:	ldp	x27, x28, [sp, #80]
  40e7c8:	ldp	x29, x30, [sp], #304
  40e7cc:	ret
  40e7d0:	cmp	x0, x3
  40e7d4:	b.eq	40e840 <ferror@plt+0xbea0>  // b.none
  40e7d8:	add	x25, sp, #0xd8
  40e7dc:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40e7e0:	adrp	x3, 41c000 <ferror@plt+0x19660>
  40e7e4:	mov	x0, x25
  40e7e8:	add	x4, x4, #0x7c0
  40e7ec:	add	x3, x3, #0xa30
  40e7f0:	mov	x2, #0x0                   	// #0
  40e7f4:	mov	x1, #0x0                   	// #0
  40e7f8:	bl	41d5b0 <_obstack_begin@@Base>
  40e7fc:	ldr	w0, [x22, #1692]
  40e800:	tbnz	w0, #7, 40ec68 <ferror@plt+0xc2c8>
  40e804:	ldrb	w1, [x20, #8]
  40e808:	mov	w27, #0x1                   	// #1
  40e80c:	str	wzr, [sp, #116]
  40e810:	ldr	x0, [sp, #240]
  40e814:	b	40e638 <ferror@plt+0xbc98>
  40e818:	mov	w3, #0x1                   	// #1
  40e81c:	str	w3, [sp, #116]
  40e820:	mov	x25, x19
  40e824:	cbz	w28, 40e638 <ferror@plt+0xbc98>
  40e828:	tbnz	w2, #7, 40ec54 <ferror@plt+0xc2b4>
  40e82c:	mov	w27, #0x1                   	// #1
  40e830:	mov	x25, x19
  40e834:	str	w27, [sp, #116]
  40e838:	ldr	x0, [x19, #24]
  40e83c:	b	40e638 <ferror@plt+0xbc98>
  40e840:	tbnz	w2, #7, 40ec54 <ferror@plt+0xc2b4>
  40e844:	mov	w27, #0x1                   	// #1
  40e848:	ldrb	w1, [x20, #8]
  40e84c:	mov	x25, x19
  40e850:	str	w27, [sp, #116]
  40e854:	b	40e638 <ferror@plt+0xbc98>
  40e858:	cmp	w1, #0x2
  40e85c:	b.ne	40ecac <ferror@plt+0xc30c>  // b.any
  40e860:	ldr	x3, [x20, #32]
  40e864:	mov	x2, x21
  40e868:	mov	w1, w28
  40e86c:	blr	x3
  40e870:	bl	40d0b8 <ferror@plt+0xa718>
  40e874:	mov	x3, x0
  40e878:	cbz	w27, 40e74c <ferror@plt+0xbdac>
  40e87c:	ldr	w1, [sp, #140]
  40e880:	mov	w2, w28
  40e884:	ldr	x0, [x20, #16]
  40e888:	bl	409c18 <ferror@plt+0x7278>
  40e88c:	b	40e74c <ferror@plt+0xbdac>
  40e890:	mov	x0, x19
  40e894:	bl	41d910 <_obstack_free@@Base>
  40e898:	b	40e7a4 <ferror@plt+0xbe04>
  40e89c:	mov	x0, x25
  40e8a0:	mov	x1, #0x10                  	// #16
  40e8a4:	bl	41d788 <_obstack_newchunk@@Base>
  40e8a8:	ldr	x0, [x25, #24]
  40e8ac:	ldp	x2, x3, [sp, #184]
  40e8b0:	stp	x2, x3, [x0]
  40e8b4:	ldp	x26, x0, [x25, #16]
  40e8b8:	add	x0, x0, #0x10
  40e8bc:	cmp	x0, x26
  40e8c0:	b.ne	40e678 <ferror@plt+0xbcd8>  // b.any
  40e8c4:	ldrb	w1, [x25, #80]
  40e8c8:	orr	w1, w1, #0x2
  40e8cc:	strb	w1, [x25, #80]
  40e8d0:	b	40e678 <ferror@plt+0xbcd8>
  40e8d4:	mov	x0, x22
  40e8d8:	mov	x1, #0x8                   	// #8
  40e8dc:	bl	41d788 <_obstack_newchunk@@Base>
  40e8e0:	add	x22, x19, #0x60
  40e8e4:	ldr	x0, [x19, #120]
  40e8e8:	str	x26, [x0]
  40e8ec:	ldr	x0, [x22, #24]
  40e8f0:	add	x0, x0, #0x8
  40e8f4:	str	x0, [x22, #24]
  40e8f8:	bl	40e3c8 <ferror@plt+0xba28>
  40e8fc:	cmp	w0, #0x3
  40e900:	b.ne	40e6e4 <ferror@plt+0xbd44>  // b.any
  40e904:	add	x2, sp, #0xd0
  40e908:	mov	x1, #0x0                   	// #0
  40e90c:	add	x0, sp, #0xb8
  40e910:	str	x2, [sp, #104]
  40e914:	bl	40da60 <ferror@plt+0xb0c0>
  40e918:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40e91c:	add	x0, x0, #0xdc8
  40e920:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40e924:	add	x1, x1, #0xde0
  40e928:	stp	x0, x1, [sp, #152]
  40e92c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40e930:	add	x0, x0, #0x7e0
  40e934:	str	x0, [sp, #168]
  40e938:	ldr	x0, [sp, #160]
  40e93c:	str	wzr, [sp, #184]
  40e940:	ldr	x0, [x0]
  40e944:	str	x0, [sp, #120]
  40e948:	ldr	x0, [sp, #152]
  40e94c:	ldr	w26, [x0]
  40e950:	b	40e96c <ferror@plt+0xbfcc>
  40e954:	bl	402770 <__ctype_b_loc@plt>
  40e958:	ldr	x1, [sp, #208]
  40e95c:	ldr	x0, [x0]
  40e960:	ldrb	w1, [x1]
  40e964:	ldrh	w0, [x0, x1, lsl #1]
  40e968:	tbz	w0, #13, 40e984 <ferror@plt+0xbfe4>
  40e96c:	add	x0, sp, #0xc8
  40e970:	mov	x1, #0x0                   	// #0
  40e974:	bl	40da60 <ferror@plt+0xb0c0>
  40e978:	mov	w28, w0
  40e97c:	cmp	w0, #0x6
  40e980:	b.eq	40e954 <ferror@plt+0xbfb4>  // b.none
  40e984:	mov	w22, #0x0                   	// #0
  40e988:	b	40e9b4 <ferror@plt+0xc014>
  40e98c:	ldr	x2, [sp, #120]
  40e990:	mov	w3, w26
  40e994:	ldr	x4, [sp, #168]
  40e998:	mov	w1, #0x0                   	// #0
  40e99c:	mov	w0, #0x1                   	// #1
  40e9a0:	bl	403490 <ferror@plt+0xaf0>
  40e9a4:	add	x0, sp, #0xc8
  40e9a8:	mov	x1, #0x0                   	// #0
  40e9ac:	bl	40da60 <ferror@plt+0xb0c0>
  40e9b0:	mov	w28, w0
  40e9b4:	cmp	w28, #0x5
  40e9b8:	b.hi	40eb60 <ferror@plt+0xc1c0>  // b.pmore
  40e9bc:	cmp	w28, #0x3
  40e9c0:	b.hi	40ea18 <ferror@plt+0xc078>  // b.pmore
  40e9c4:	b.eq	40ea1c <ferror@plt+0xc07c>  // b.none
  40e9c8:	cbz	w28, 40e98c <ferror@plt+0xbfec>
  40e9cc:	ldr	x2, [sp, #104]
  40e9d0:	mov	w1, w28
  40e9d4:	mov	w3, w26
  40e9d8:	mov	x0, x25
  40e9dc:	bl	40ecc8 <ferror@plt+0xc328>
  40e9e0:	b	40e9a4 <ferror@plt+0xc004>
  40e9e4:	ldr	w1, [sp, #140]
  40e9e8:	mov	x3, x21
  40e9ec:	ldr	x0, [x20, #16]
  40e9f0:	mov	w2, w28
  40e9f4:	bl	409ab8 <ferror@plt+0x7118>
  40e9f8:	b	40e720 <ferror@plt+0xbd80>
  40e9fc:	add	x0, sp, #0xd8
  40ea00:	mov	x1, #0x0                   	// #0
  40ea04:	bl	41d910 <_obstack_free@@Base>
  40ea08:	b	40e7a4 <ferror@plt+0xbe04>
  40ea0c:	mov	x0, x20
  40ea10:	bl	4115b8 <ferror@plt+0xec18>
  40ea14:	b	40e774 <ferror@plt+0xbdd4>
  40ea18:	cbz	w22, 40ea50 <ferror@plt+0xc0b0>
  40ea1c:	ldr	x0, [sp, #208]
  40ea20:	ldrb	w0, [x0]
  40ea24:	cmp	w0, #0x28
  40ea28:	b.eq	40eb44 <ferror@plt+0xc1a4>  // b.none
  40ea2c:	ldr	x2, [sp, #104]
  40ea30:	cmp	w0, #0x29
  40ea34:	cset	w0, eq  // eq = none
  40ea38:	mov	w1, w28
  40ea3c:	sub	w22, w22, w0
  40ea40:	mov	w3, w26
  40ea44:	mov	x0, x25
  40ea48:	bl	40ecc8 <ferror@plt+0xc328>
  40ea4c:	b	40e9a4 <ferror@plt+0xc004>
  40ea50:	ldp	x0, x1, [x25, #24]
  40ea54:	cmp	x1, x0
  40ea58:	b.eq	40ec40 <ferror@plt+0xc2a0>  // b.none
  40ea5c:	add	x1, x0, #0x1
  40ea60:	str	x1, [x25, #24]
  40ea64:	strb	wzr, [x0]
  40ea68:	ldp	x6, x1, [x25, #16]
  40ea6c:	cmp	x6, x1
  40ea70:	b.eq	40ec30 <ferror@plt+0xc290>  // b.none
  40ea74:	ldr	x0, [x25, #48]
  40ea78:	ldr	x3, [x25, #8]
  40ea7c:	add	x4, x1, x0
  40ea80:	ldr	x1, [x25, #32]
  40ea84:	bic	x0, x4, x0
  40ea88:	str	x0, [x25, #24]
  40ea8c:	sub	x4, x0, x3
  40ea90:	sub	x3, x1, x3
  40ea94:	cmp	x4, x3
  40ea98:	b.hi	40ebf8 <ferror@plt+0xc258>  // b.pmore
  40ea9c:	sub	x3, x1, x0
  40eaa0:	mov	x1, x0
  40eaa4:	ldr	w0, [sp, #184]
  40eaa8:	str	x1, [x25, #16]
  40eaac:	cbnz	w0, 40eb90 <ferror@plt+0xc1f0>
  40eab0:	mov	w0, #0x1                   	// #1
  40eab4:	str	w0, [sp, #184]
  40eab8:	str	x6, [sp, #192]
  40eabc:	cmp	x3, #0xf
  40eac0:	b.ls	40ebc0 <ferror@plt+0xc220>  // b.plast
  40eac4:	ldp	x6, x7, [sp, #184]
  40eac8:	stp	x6, x7, [x1]
  40eacc:	ldp	x26, x0, [x25, #16]
  40ead0:	add	x0, x0, #0x10
  40ead4:	cmp	x0, x26
  40ead8:	b.eq	40ebe8 <ferror@plt+0xc248>  // b.none
  40eadc:	ldr	x1, [x25, #48]
  40eae0:	ldr	x3, [x25, #8]
  40eae4:	add	x0, x0, x1
  40eae8:	ldr	x4, [x25, #32]
  40eaec:	bic	x1, x0, x1
  40eaf0:	str	x1, [x25, #24]
  40eaf4:	sub	x0, x1, x3
  40eaf8:	sub	x3, x4, x3
  40eafc:	cmp	x0, x3
  40eb00:	b.ls	40eb0c <ferror@plt+0xc16c>  // b.plast
  40eb04:	mov	x1, x4
  40eb08:	str	x4, [x25, #24]
  40eb0c:	str	x1, [x25, #16]
  40eb10:	add	x22, x19, #0x60
  40eb14:	ldr	x1, [x22, #24]
  40eb18:	ldr	x0, [x22, #32]
  40eb1c:	sub	x0, x0, x1
  40eb20:	cmp	x0, #0x7
  40eb24:	b.ls	40ec04 <ferror@plt+0xc264>  // b.plast
  40eb28:	str	x26, [x1]
  40eb2c:	cmp	w28, #0x4
  40eb30:	ldr	x1, [x22, #24]
  40eb34:	add	x1, x1, #0x8
  40eb38:	str	x1, [x22, #24]
  40eb3c:	b.eq	40e938 <ferror@plt+0xbf98>  // b.none
  40eb40:	b	40e6e8 <ferror@plt+0xbd48>
  40eb44:	ldr	x2, [sp, #104]
  40eb48:	add	w22, w22, #0x1
  40eb4c:	mov	w1, w28
  40eb50:	mov	w3, w26
  40eb54:	mov	x0, x25
  40eb58:	bl	40ecc8 <ferror@plt+0xc328>
  40eb5c:	b	40e9a4 <ferror@plt+0xc004>
  40eb60:	cmp	w28, #0x6
  40eb64:	b.eq	40ea1c <ferror@plt+0xc07c>  // b.none
  40eb68:	cmp	w28, #0x7
  40eb6c:	b.ne	40ec90 <ferror@plt+0xc2f0>  // b.any
  40eb70:	ldp	x0, x1, [x25, #16]
  40eb74:	cmp	x1, x0
  40eb78:	b.ne	40e9a4 <ferror@plt+0xc004>  // b.any
  40eb7c:	ldr	x0, [sp, #208]
  40eb80:	mov	w1, #0x2                   	// #2
  40eb84:	str	w1, [sp, #184]
  40eb88:	str	x0, [sp, #192]
  40eb8c:	b	40e9a4 <ferror@plt+0xc004>
  40eb90:	ldr	w2, [sp, #144]
  40eb94:	cbnz	w2, 40eabc <ferror@plt+0xc11c>
  40eb98:	cmp	w0, #0x2
  40eb9c:	b.ne	40eabc <ferror@plt+0xc11c>  // b.any
  40eba0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  40eba4:	add	x0, x0, #0xe8
  40eba8:	str	x0, [sp, #192]
  40ebac:	mov	w0, #0x1                   	// #1
  40ebb0:	str	w0, [sp, #184]
  40ebb4:	cmp	x3, #0xf
  40ebb8:	b.hi	40eac4 <ferror@plt+0xc124>  // b.pmore
  40ebbc:	nop
  40ebc0:	mov	x0, x25
  40ebc4:	mov	x1, #0x10                  	// #16
  40ebc8:	bl	41d788 <_obstack_newchunk@@Base>
  40ebcc:	ldr	x1, [x25, #24]
  40ebd0:	ldp	x6, x7, [sp, #184]
  40ebd4:	stp	x6, x7, [x1]
  40ebd8:	ldp	x26, x0, [x25, #16]
  40ebdc:	add	x0, x0, #0x10
  40ebe0:	cmp	x0, x26
  40ebe4:	b.ne	40eadc <ferror@plt+0xc13c>  // b.any
  40ebe8:	ldrb	w1, [x25, #80]
  40ebec:	orr	w1, w1, #0x2
  40ebf0:	strb	w1, [x25, #80]
  40ebf4:	b	40eadc <ferror@plt+0xc13c>
  40ebf8:	mov	x3, #0x0                   	// #0
  40ebfc:	str	x1, [x25, #24]
  40ec00:	b	40eaa4 <ferror@plt+0xc104>
  40ec04:	mov	x0, x22
  40ec08:	mov	x1, #0x8                   	// #8
  40ec0c:	bl	41d788 <_obstack_newchunk@@Base>
  40ec10:	ldr	x0, [x22, #24]
  40ec14:	cmp	w28, #0x4
  40ec18:	str	x26, [x0]
  40ec1c:	ldr	x1, [x22, #24]
  40ec20:	add	x1, x1, #0x8
  40ec24:	str	x1, [x22, #24]
  40ec28:	b.eq	40e938 <ferror@plt+0xbf98>  // b.none
  40ec2c:	b	40e6e8 <ferror@plt+0xbd48>
  40ec30:	ldrb	w0, [x25, #80]
  40ec34:	orr	w0, w0, #0x2
  40ec38:	strb	w0, [x25, #80]
  40ec3c:	b	40ea74 <ferror@plt+0xc0d4>
  40ec40:	mov	x0, x25
  40ec44:	mov	x1, #0x1                   	// #1
  40ec48:	bl	41d788 <_obstack_newchunk@@Base>
  40ec4c:	ldr	x0, [x25, #24]
  40ec50:	b	40ea5c <ferror@plt+0xc0bc>
  40ec54:	ldr	w1, [sp, #140]
  40ec58:	ldr	x0, [x20, #16]
  40ec5c:	bl	4099d8 <ferror@plt+0x7038>
  40ec60:	ldrb	w1, [x20, #8]
  40ec64:	b	40e82c <ferror@plt+0xbe8c>
  40ec68:	ldr	w1, [sp, #140]
  40ec6c:	ldr	x0, [x20, #16]
  40ec70:	bl	4099d8 <ferror@plt+0x7038>
  40ec74:	b	40e804 <ferror@plt+0xbe64>
  40ec78:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40ec7c:	mov	w1, #0x0                   	// #0
  40ec80:	add	x2, x2, #0x7a8
  40ec84:	mov	w0, #0x1                   	// #1
  40ec88:	bl	4033d0 <ferror@plt+0xa30>
  40ec8c:	b	40e5c4 <ferror@plt+0xbc24>
  40ec90:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ec94:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40ec98:	add	x2, x2, #0x808
  40ec9c:	mov	w1, #0x0                   	// #0
  40eca0:	ldr	w0, [x0, #1676]
  40eca4:	bl	4033d0 <ferror@plt+0xa30>
  40eca8:	bl	4026d0 <abort@plt>
  40ecac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ecb0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40ecb4:	add	x2, x2, #0x840
  40ecb8:	mov	w1, #0x0                   	// #0
  40ecbc:	ldr	w0, [x0, #1676]
  40ecc0:	bl	4033d0 <ferror@plt+0xa30>
  40ecc4:	bl	4026d0 <abort@plt>
  40ecc8:	stp	x29, x30, [sp, #-48]!
  40eccc:	cmp	w1, #0x2
  40ecd0:	mov	x29, sp
  40ecd4:	stp	x19, x20, [sp, #16]
  40ecd8:	mov	x20, x0
  40ecdc:	mov	x19, x2
  40ece0:	stp	x21, x22, [sp, #32]
  40ece4:	mov	w21, w3
  40ece8:	b.eq	40ed40 <ferror@plt+0xc3a0>  // b.none
  40ecec:	b.hi	40ed20 <ferror@plt+0xc380>  // b.pmore
  40ecf0:	cbz	w1, 40ed30 <ferror@plt+0xc390>
  40ecf4:	ldr	x19, [x19]
  40ecf8:	mov	x0, x19
  40ecfc:	bl	402390 <strlen@plt>
  40ed00:	mov	w3, w21
  40ed04:	mov	w2, w0
  40ed08:	mov	x1, x19
  40ed0c:	mov	x0, x20
  40ed10:	ldp	x19, x20, [sp, #16]
  40ed14:	ldp	x21, x22, [sp, #32]
  40ed18:	ldp	x29, x30, [sp], #48
  40ed1c:	b	40fe78 <ferror@plt+0xd4d8>
  40ed20:	cmp	w1, #0x6
  40ed24:	b.ls	40ecf4 <ferror@plt+0xc354>  // b.plast
  40ed28:	cmp	w1, #0x7
  40ed2c:	b.ne	40ed90 <ferror@plt+0xc3f0>  // b.any
  40ed30:	ldp	x19, x20, [sp, #16]
  40ed34:	ldp	x21, x22, [sp, #32]
  40ed38:	ldp	x29, x30, [sp], #48
  40ed3c:	ret
  40ed40:	ldr	x0, [x2]
  40ed44:	mov	w1, #0x0                   	// #0
  40ed48:	bl	411620 <ferror@plt+0xec80>
  40ed4c:	mov	x22, x0
  40ed50:	cbz	x0, 40ecf4 <ferror@plt+0xc354>
  40ed54:	ldr	w0, [x0, #24]
  40ed58:	cbz	w0, 40ecf4 <ferror@plt+0xc354>
  40ed5c:	cmp	w0, #0x2
  40ed60:	b.ne	40ed6c <ferror@plt+0xc3cc>  // b.any
  40ed64:	ldrb	w0, [x22, #8]
  40ed68:	tbnz	w0, #3, 40ed80 <ferror@plt+0xc3e0>
  40ed6c:	mov	x0, x22
  40ed70:	ldp	x19, x20, [sp, #16]
  40ed74:	ldp	x21, x22, [sp, #32]
  40ed78:	ldp	x29, x30, [sp], #48
  40ed7c:	b	40e558 <ferror@plt+0xbbb8>
  40ed80:	bl	40e3c8 <ferror@plt+0xba28>
  40ed84:	cmp	w0, #0x3
  40ed88:	b.ne	40ecf4 <ferror@plt+0xc354>  // b.any
  40ed8c:	b	40ed6c <ferror@plt+0xc3cc>
  40ed90:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ed94:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40ed98:	add	x2, x2, #0x878
  40ed9c:	mov	w1, #0x0                   	// #0
  40eda0:	ldr	w0, [x0, #1676]
  40eda4:	bl	4033d0 <ferror@plt+0xa30>
  40eda8:	bl	4026d0 <abort@plt>
  40edac:	nop
  40edb0:	stp	x29, x30, [sp, #-80]!
  40edb4:	mov	x2, #0x0                   	// #0
  40edb8:	mov	x1, #0x0                   	// #0
  40edbc:	mov	x29, sp
  40edc0:	stp	x19, x20, [sp, #16]
  40edc4:	adrp	x20, 402000 <mbrtowc@plt-0x340>
  40edc8:	adrp	x19, 41c000 <ferror@plt+0x19660>
  40edcc:	add	x20, x20, #0x7c0
  40edd0:	add	x19, x19, #0xa30
  40edd4:	str	x21, [sp, #32]
  40edd8:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  40eddc:	add	x21, x21, #0x990
  40ede0:	mov	x4, x20
  40ede4:	mov	x3, x19
  40ede8:	mov	x0, x21
  40edec:	bl	41d5b0 <_obstack_begin@@Base>
  40edf0:	mov	x4, x20
  40edf4:	mov	x3, x19
  40edf8:	add	x0, x21, #0x60
  40edfc:	mov	x2, #0x0                   	// #0
  40ee00:	mov	x1, #0x0                   	// #0
  40ee04:	bl	41d5b0 <_obstack_begin@@Base>
  40ee08:	add	x1, sp, #0x3c
  40ee0c:	add	x0, sp, #0x40
  40ee10:	bl	40da60 <ferror@plt+0xb0c0>
  40ee14:	cbz	w0, 40ee78 <ferror@plt+0xc4d8>
  40ee18:	ldr	w20, [sp, #60]
  40ee1c:	cmp	w0, #0x6
  40ee20:	b.hi	40eea0 <ferror@plt+0xc500>  // b.pmore
  40ee24:	cmp	w0, #0x2
  40ee28:	b.hi	40eed0 <ferror@plt+0xc530>  // b.pmore
  40ee2c:	cmp	w0, #0x1
  40ee30:	b.eq	40eed0 <ferror@plt+0xc530>  // b.none
  40ee34:	ldr	x0, [sp, #72]
  40ee38:	mov	w1, #0x0                   	// #0
  40ee3c:	bl	411620 <ferror@plt+0xec80>
  40ee40:	mov	x19, x0
  40ee44:	cbz	x0, 40eed0 <ferror@plt+0xc530>
  40ee48:	ldr	w0, [x0, #24]
  40ee4c:	cbz	w0, 40eed0 <ferror@plt+0xc530>
  40ee50:	cmp	w0, #0x2
  40ee54:	b.ne	40ee60 <ferror@plt+0xc4c0>  // b.any
  40ee58:	ldrb	w0, [x19, #8]
  40ee5c:	tbnz	w0, #3, 40eec4 <ferror@plt+0xc524>
  40ee60:	mov	x0, x19
  40ee64:	bl	40e558 <ferror@plt+0xbbb8>
  40ee68:	add	x1, sp, #0x3c
  40ee6c:	add	x0, sp, #0x40
  40ee70:	bl	40da60 <ferror@plt+0xb0c0>
  40ee74:	cbnz	w0, 40ee18 <ferror@plt+0xc478>
  40ee78:	mov	x0, x21
  40ee7c:	mov	x1, #0x0                   	// #0
  40ee80:	bl	41d910 <_obstack_free@@Base>
  40ee84:	add	x0, x21, #0x60
  40ee88:	mov	x1, #0x0                   	// #0
  40ee8c:	bl	41d910 <_obstack_free@@Base>
  40ee90:	ldp	x19, x20, [sp, #16]
  40ee94:	ldr	x21, [sp, #32]
  40ee98:	ldp	x29, x30, [sp], #80
  40ee9c:	ret
  40eea0:	cmp	w0, #0x7
  40eea4:	b.eq	40ee08 <ferror@plt+0xc468>  // b.none
  40eea8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40eeac:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40eeb0:	add	x2, x2, #0x878
  40eeb4:	mov	w1, #0x0                   	// #0
  40eeb8:	ldr	w0, [x0, #1676]
  40eebc:	bl	4033d0 <ferror@plt+0xa30>
  40eec0:	bl	4026d0 <abort@plt>
  40eec4:	bl	40e3c8 <ferror@plt+0xba28>
  40eec8:	cmp	w0, #0x3
  40eecc:	b.eq	40ee60 <ferror@plt+0xc4c0>  // b.none
  40eed0:	ldr	x19, [sp, #72]
  40eed4:	mov	x0, x19
  40eed8:	bl	402390 <strlen@plt>
  40eedc:	mov	w3, w20
  40eee0:	mov	w2, w0
  40eee4:	mov	x1, x19
  40eee8:	mov	x0, #0x0                   	// #0
  40eeec:	bl	40fe78 <ferror@plt+0xd4d8>
  40eef0:	b	40ee08 <ferror@plt+0xc468>
  40eef4:	nop
  40eef8:	mov	x4, x0
  40eefc:	mov	x0, x3
  40ef00:	ldr	w6, [x4, #24]
  40ef04:	cmp	w6, #0x1
  40ef08:	b.eq	40ef20 <ferror@plt+0xc580>  // b.none
  40ef0c:	cmp	w6, #0x2
  40ef10:	b.ne	40ef30 <ferror@plt+0xc590>  // b.any
  40ef14:	ldr	x3, [x4, #32]
  40ef18:	mov	x16, x3
  40ef1c:	br	x16
  40ef20:	mov	x3, x2
  40ef24:	mov	w2, w1
  40ef28:	mov	x1, x4
  40ef2c:	b	408b90 <ferror@plt+0x61f0>
  40ef30:	stp	x29, x30, [sp, #-16]!
  40ef34:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ef38:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40ef3c:	mov	x29, sp
  40ef40:	ldr	w0, [x0, #1676]
  40ef44:	add	x2, x2, #0x840
  40ef48:	mov	w1, #0x0                   	// #0
  40ef4c:	bl	4033d0 <ferror@plt+0xa30>
  40ef50:	bl	4026d0 <abort@plt>
  40ef54:	nop
  40ef58:	ldr	w2, [x0, #8]
  40ef5c:	ldr	w0, [x1, #8]
  40ef60:	sub	w0, w2, w0
  40ef64:	ret
  40ef68:	ldr	w0, [x0, #8]
  40ef6c:	ldr	w1, [x1]
  40ef70:	cmp	w0, w1
  40ef74:	cset	w0, ge  // ge = tcont
  40ef78:	ret
  40ef7c:	nop
  40ef80:	stp	x29, x30, [sp, #-64]!
  40ef84:	mov	x29, sp
  40ef88:	stp	x19, x20, [sp, #16]
  40ef8c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ef90:	mov	w19, w0
  40ef94:	ldr	x0, [x20, #2640]
  40ef98:	stp	x21, x22, [sp, #32]
  40ef9c:	add	x21, x20, #0xa50
  40efa0:	cbz	x0, 40efdc <ferror@plt+0xc63c>
  40efa4:	cmp	w19, #0x0
  40efa8:	b.le	40f0cc <ferror@plt+0xc72c>
  40efac:	ldr	x0, [x21, #16]
  40efb0:	mov	w4, w19
  40efb4:	mov	x2, #0xffffffffffffffff    	// #-1
  40efb8:	mov	w1, #0x1                   	// #1
  40efbc:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  40efc0:	add	x3, x3, #0x8e0
  40efc4:	bl	4023b0 <__sprintf_chk@plt>
  40efc8:	ldr	x0, [x20, #2640]
  40efcc:	ldp	x19, x20, [sp, #16]
  40efd0:	ldp	x21, x22, [sp, #32]
  40efd4:	ldp	x29, x30, [sp], #64
  40efd8:	ret
  40efdc:	ldr	x1, [x21, #8]
  40efe0:	mov	w2, #0x7fffffff            	// #2147483647
  40efe4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40efe8:	add	x0, x0, #0x8b0
  40efec:	stp	x23, x24, [sp, #48]
  40eff0:	add	x24, x21, #0x18
  40eff4:	ldr	x1, [x1]
  40eff8:	bl	41d188 <ferror@plt+0x1a7e8>
  40effc:	mov	x23, x0
  40f000:	str	x0, [x21, #16]
  40f004:	bl	402390 <strlen@plt>
  40f008:	add	x1, x0, #0x1
  40f00c:	mov	x22, x0
  40f010:	ldp	x0, x2, [x21, #48]
  40f014:	sub	x2, x2, x0
  40f018:	cmp	x1, x2
  40f01c:	b.hi	40f0a8 <ferror@plt+0xc708>  // b.pmore
  40f020:	mov	x2, x22
  40f024:	mov	x1, x23
  40f028:	bl	402350 <memcpy@plt>
  40f02c:	ldr	x2, [x21, #48]
  40f030:	add	x1, x2, x22
  40f034:	add	x1, x1, #0x1
  40f038:	str	x1, [x21, #48]
  40f03c:	strb	wzr, [x2, x22]
  40f040:	ldp	x22, x3, [x21, #40]
  40f044:	cmp	x3, x22
  40f048:	b.eq	40f0bc <ferror@plt+0xc71c>  // b.none
  40f04c:	ldr	x2, [x21, #72]
  40f050:	ldr	x1, [x21, #32]
  40f054:	add	x3, x3, x2
  40f058:	ldr	x4, [x21, #56]
  40f05c:	bic	x2, x3, x2
  40f060:	str	x2, [x21, #48]
  40f064:	sub	x3, x2, x1
  40f068:	sub	x1, x4, x1
  40f06c:	cmp	x3, x1
  40f070:	b.ls	40f07c <ferror@plt+0xc6dc>  // b.plast
  40f074:	mov	x2, x4
  40f078:	str	x4, [x21, #48]
  40f07c:	mov	x0, x23
  40f080:	str	x22, [x20, #2640]
  40f084:	str	x2, [x21, #40]
  40f088:	bl	4027c0 <free@plt>
  40f08c:	mov	x0, x22
  40f090:	mov	w1, #0x2d                  	// #45
  40f094:	bl	402680 <strrchr@plt>
  40f098:	add	x0, x0, #0x1
  40f09c:	str	x0, [x21, #16]
  40f0a0:	ldp	x23, x24, [sp, #48]
  40f0a4:	b	40efa4 <ferror@plt+0xc604>
  40f0a8:	mov	x0, x24
  40f0ac:	bl	41d788 <_obstack_newchunk@@Base>
  40f0b0:	ldr	x23, [x21, #16]
  40f0b4:	ldr	x0, [x21, #48]
  40f0b8:	b	40f020 <ferror@plt+0xc680>
  40f0bc:	ldrb	w1, [x21, #104]
  40f0c0:	orr	w1, w1, #0x2
  40f0c4:	strb	w1, [x21, #104]
  40f0c8:	b	40f04c <ferror@plt+0xc6ac>
  40f0cc:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  40f0d0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40f0d4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40f0d8:	add	x3, x3, #0xb30
  40f0dc:	add	x1, x1, #0x8c0
  40f0e0:	add	x0, x0, #0x8d0
  40f0e4:	mov	w2, #0xc8                  	// #200
  40f0e8:	stp	x23, x24, [sp, #48]
  40f0ec:	bl	402910 <__assert_fail@plt>
  40f0f0:	stp	x29, x30, [sp, #-112]!
  40f0f4:	mov	x29, sp
  40f0f8:	stp	x19, x20, [sp, #16]
  40f0fc:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f100:	add	x20, x20, #0xa50
  40f104:	ldr	x0, [x20, #112]
  40f108:	cbz	x0, 40f1d4 <ferror@plt+0xc834>
  40f10c:	ldr	x1, [x0]
  40f110:	stp	x21, x22, [sp, #32]
  40f114:	add	x8, sp, #0x38
  40f118:	adrp	x21, 420000 <_obstack_memory_used@@Base+0x2640>
  40f11c:	mov	w22, #0x0                   	// #0
  40f120:	ldr	x1, [x1, #56]
  40f124:	add	x21, x21, #0x8e8
  40f128:	blr	x1
  40f12c:	nop
  40f130:	ldr	x2, [sp, #56]
  40f134:	add	x1, sp, #0x30
  40f138:	add	x0, sp, #0x38
  40f13c:	ldr	x2, [x2, #64]
  40f140:	blr	x2
  40f144:	ands	w19, w0, #0xff
  40f148:	b.eq	40f1a0 <ferror@plt+0xc800>  // b.none
  40f14c:	ldr	x0, [sp, #48]
  40f150:	ldr	w1, [x0, #12]
  40f154:	cbnz	w1, 40f130 <ferror@plt+0xc790>
  40f158:	ldr	x0, [x0]
  40f15c:	cbz	x0, 40f130 <ferror@plt+0xc790>
  40f160:	bl	4152b0 <ferror@plt+0x12910>
  40f164:	cbz	w0, 40f130 <ferror@plt+0xc790>
  40f168:	bl	402920 <__errno_location@plt>
  40f16c:	mov	x1, x0
  40f170:	mov	x2, x21
  40f174:	mov	w0, #0x0                   	// #0
  40f178:	mov	w22, w19
  40f17c:	ldr	w1, [x1]
  40f180:	bl	4033d0 <ferror@plt+0xa30>
  40f184:	ldr	x2, [sp, #56]
  40f188:	add	x1, sp, #0x30
  40f18c:	add	x0, sp, #0x38
  40f190:	ldr	x2, [x2, #64]
  40f194:	blr	x2
  40f198:	ands	w19, w0, #0xff
  40f19c:	b.ne	40f14c <ferror@plt+0xc7ac>  // b.any
  40f1a0:	ldr	x1, [sp, #56]
  40f1a4:	add	x0, sp, #0x38
  40f1a8:	ldr	x1, [x1, #72]
  40f1ac:	blr	x1
  40f1b0:	ldr	x0, [x20, #8]
  40f1b4:	bl	414eb8 <ferror@plt+0x12518>
  40f1b8:	cmp	w0, #0x0
  40f1bc:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  40f1c0:	b.ne	40f1e4 <ferror@plt+0xc844>  // b.any
  40f1c4:	ldp	x21, x22, [sp, #32]
  40f1c8:	ldp	x19, x20, [sp, #16]
  40f1cc:	ldp	x29, x30, [sp], #112
  40f1d0:	ret
  40f1d4:	ldr	x0, [x20, #8]
  40f1d8:	bl	414eb8 <ferror@plt+0x12518>
  40f1dc:	cbz	w0, 40f1c8 <ferror@plt+0xc828>
  40f1e0:	stp	x21, x22, [sp, #32]
  40f1e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f1e8:	ldr	w0, [x0, #868]
  40f1ec:	bl	402370 <_exit@plt>
  40f1f0:	stp	x29, x30, [sp, #-48]!
  40f1f4:	mov	x29, sp
  40f1f8:	stp	x19, x20, [sp, #16]
  40f1fc:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f200:	add	x19, x19, #0xa50
  40f204:	str	x21, [sp, #32]
  40f208:	and	w21, w1, #0xff
  40f20c:	ldr	w2, [x19, #120]
  40f210:	cmp	w2, w0
  40f214:	b.eq	40f288 <ferror@plt+0xc8e8>  // b.none
  40f218:	ldr	w2, [x19, #140]
  40f21c:	cmp	w2, w0
  40f220:	b.eq	40f264 <ferror@plt+0xc8c4>  // b.none
  40f224:	bl	40ef80 <ferror@plt+0xc5e0>
  40f228:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40f22c:	add	x1, x1, #0x938
  40f230:	bl	415098 <ferror@plt+0x126f8>
  40f234:	mov	x20, x0
  40f238:	cbz	x0, 40f2a8 <ferror@plt+0xc908>
  40f23c:	bl	4024c0 <fileno@plt>
  40f240:	mov	w1, #0x1                   	// #1
  40f244:	bl	415358 <ferror@plt+0x129b8>
  40f248:	cbnz	w0, 40f348 <ferror@plt+0xc9a8>
  40f24c:	cbz	w21, 40f2f4 <ferror@plt+0xc954>
  40f250:	mov	x0, x20
  40f254:	ldp	x19, x20, [sp, #16]
  40f258:	ldr	x21, [sp, #32]
  40f25c:	ldp	x29, x30, [sp], #48
  40f260:	ret
  40f264:	ldr	x20, [x19, #144]
  40f268:	cbnz	w21, 40f2d8 <ferror@plt+0xc938>
  40f26c:	mov	w0, #0x1                   	// #1
  40f270:	strb	w0, [x19, #136]
  40f274:	mov	x0, x20
  40f278:	ldp	x19, x20, [sp, #16]
  40f27c:	ldr	x21, [sp, #32]
  40f280:	ldp	x29, x30, [sp], #48
  40f284:	ret
  40f288:	ldr	x20, [x19, #128]
  40f28c:	cbnz	w21, 40f328 <ferror@plt+0xc988>
  40f290:	strb	wzr, [x19, #136]
  40f294:	mov	x0, x20
  40f298:	ldp	x19, x20, [sp, #16]
  40f29c:	ldr	x21, [sp, #32]
  40f2a0:	ldp	x29, x30, [sp], #48
  40f2a4:	ret
  40f2a8:	bl	402920 <__errno_location@plt>
  40f2ac:	mov	x1, x0
  40f2b0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f2b4:	mov	w0, #0x1                   	// #1
  40f2b8:	add	x2, x2, #0x940
  40f2bc:	ldr	w1, [x1]
  40f2c0:	bl	4033d0 <ferror@plt+0xa30>
  40f2c4:	mov	x0, x20
  40f2c8:	ldp	x19, x20, [sp, #16]
  40f2cc:	ldr	x21, [sp, #32]
  40f2d0:	ldp	x29, x30, [sp], #48
  40f2d4:	ret
  40f2d8:	mov	x0, x20
  40f2dc:	mov	w2, #0x0                   	// #0
  40f2e0:	mov	x1, #0x0                   	// #0
  40f2e4:	bl	41d470 <ferror@plt+0x1aad0>
  40f2e8:	cbnz	w0, 40f378 <ferror@plt+0xc9d8>
  40f2ec:	ldr	x20, [x19, #144]
  40f2f0:	b	40f26c <ferror@plt+0xc8cc>
  40f2f4:	mov	x0, x20
  40f2f8:	mov	w2, #0x2                   	// #2
  40f2fc:	mov	x1, #0x0                   	// #0
  40f300:	bl	41d470 <ferror@plt+0x1aad0>
  40f304:	cbz	w0, 40f250 <ferror@plt+0xc8b0>
  40f308:	bl	402920 <__errno_location@plt>
  40f30c:	mov	x1, x0
  40f310:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f314:	mov	w0, #0x1                   	// #1
  40f318:	add	x2, x2, #0x918
  40f31c:	ldr	w1, [x1]
  40f320:	bl	4033d0 <ferror@plt+0xa30>
  40f324:	b	40f250 <ferror@plt+0xc8b0>
  40f328:	mov	x0, x20
  40f32c:	mov	w2, #0x0                   	// #0
  40f330:	mov	x1, #0x0                   	// #0
  40f334:	bl	41d470 <ferror@plt+0x1aad0>
  40f338:	cbnz	w0, 40f39c <ferror@plt+0xc9fc>
  40f33c:	ldr	x20, [x19, #128]
  40f340:	strb	wzr, [x19, #136]
  40f344:	b	40f294 <ferror@plt+0xc8f4>
  40f348:	bl	402920 <__errno_location@plt>
  40f34c:	mov	x1, x0
  40f350:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f354:	mov	w0, #0x0                   	// #0
  40f358:	add	x2, x2, #0x970
  40f35c:	ldr	w1, [x1]
  40f360:	bl	4033d0 <ferror@plt+0xa30>
  40f364:	mov	x0, x20
  40f368:	ldp	x19, x20, [sp, #16]
  40f36c:	ldr	x21, [sp, #32]
  40f370:	ldp	x29, x30, [sp], #48
  40f374:	ret
  40f378:	bl	402920 <__errno_location@plt>
  40f37c:	mov	x1, x0
  40f380:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f384:	mov	w0, #0x1                   	// #1
  40f388:	add	x2, x2, #0x918
  40f38c:	ldr	w1, [x1]
  40f390:	bl	4033d0 <ferror@plt+0xa30>
  40f394:	ldr	x20, [x19, #144]
  40f398:	b	40f26c <ferror@plt+0xc8cc>
  40f39c:	bl	402920 <__errno_location@plt>
  40f3a0:	mov	x1, x0
  40f3a4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f3a8:	mov	w0, #0x1                   	// #1
  40f3ac:	add	x2, x2, #0x918
  40f3b0:	ldr	w1, [x1]
  40f3b4:	bl	4033d0 <ferror@plt+0xa30>
  40f3b8:	ldr	x20, [x19, #128]
  40f3bc:	b	40f340 <ferror@plt+0xc9a0>
  40f3c0:	stp	x29, x30, [sp, #-176]!
  40f3c4:	mov	x29, sp
  40f3c8:	stp	x19, x20, [sp, #16]
  40f3cc:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f3d0:	add	x20, x20, #0xa50
  40f3d4:	stp	x23, x24, [sp, #48]
  40f3d8:	ldr	x23, [x20, #152]
  40f3dc:	stp	x21, x22, [sp, #32]
  40f3e0:	ldr	w19, [x20, #160]
  40f3e4:	ldr	w1, [x23, #12]
  40f3e8:	sub	w19, w1, w19
  40f3ec:	str	w19, [x23, #16]
  40f3f0:	add	w19, w19, w0
  40f3f4:	cmp	w1, w19
  40f3f8:	b.ge	40f6ec <ferror@plt+0xcd4c>  // b.tcont
  40f3fc:	cmp	w19, #0x200
  40f400:	mov	w22, w1
  40f404:	b.le	40f654 <ferror@plt+0xccb4>
  40f408:	cbnz	w22, 40f418 <ferror@plt+0xca78>
  40f40c:	mov	w22, #0x400                 	// #1024
  40f410:	cmp	w19, w22
  40f414:	b.le	40f428 <ferror@plt+0xca88>
  40f418:	lsl	w22, w22, #1
  40f41c:	cmp	w22, w19
  40f420:	b.lt	40f408 <ferror@plt+0xca68>  // b.tstop
  40f424:	nop
  40f428:	ldr	w0, [x20, #164]
  40f42c:	sub	w0, w0, w1
  40f430:	add	w0, w0, w22
  40f434:	cmp	w0, #0x80, lsl #12
  40f438:	b.le	40f584 <ferror@plt+0xcbe4>
  40f43c:	ldr	x0, [x20, #112]
  40f440:	add	x8, sp, #0x78
  40f444:	mov	x21, x23
  40f448:	ldr	x1, [x0]
  40f44c:	ldr	x1, [x1, #56]
  40f450:	blr	x1
  40f454:	ldp	x0, x1, [sp, #120]
  40f458:	stp	x0, x1, [sp, #64]
  40f45c:	ldp	x0, x1, [sp, #136]
  40f460:	stp	x0, x1, [sp, #80]
  40f464:	ldp	x0, x1, [sp, #152]
  40f468:	stp	x0, x1, [sp, #96]
  40f46c:	ldr	x0, [sp, #168]
  40f470:	str	x0, [sp, #112]
  40f474:	b	40f490 <ferror@plt+0xcaf0>
  40f478:	ldr	x1, [sp, #120]
  40f47c:	ldr	w0, [x1, #16]
  40f480:	cmp	w0, w19
  40f484:	csel	w2, w19, w0, le
  40f488:	csel	x21, x21, x1, le
  40f48c:	mov	w19, w2
  40f490:	ldr	x2, [sp, #64]
  40f494:	add	x1, sp, #0x78
  40f498:	add	x0, sp, #0x40
  40f49c:	ldr	x2, [x2, #64]
  40f4a0:	blr	x2
  40f4a4:	tst	w0, #0xff
  40f4a8:	b.ne	40f478 <ferror@plt+0xcad8>  // b.any
  40f4ac:	ldr	x1, [sp, #64]
  40f4b0:	add	x0, sp, #0x40
  40f4b4:	ldr	x1, [x1, #72]
  40f4b8:	blr	x1
  40f4bc:	ldp	w19, w2, [x21, #8]
  40f4c0:	str	wzr, [x21, #12]
  40f4c4:	ldr	w0, [x20, #164]
  40f4c8:	ldr	x1, [x20, #8]
  40f4cc:	sub	w0, w0, w2
  40f4d0:	str	w0, [x20, #164]
  40f4d4:	ldr	x24, [x21]
  40f4d8:	str	xzr, [x21]
  40f4dc:	cbz	x1, 40f6b4 <ferror@plt+0xcd14>
  40f4e0:	mov	w0, w19
  40f4e4:	bl	40ef80 <ferror@plt+0xc5e0>
  40f4e8:	mov	x1, x0
  40f4ec:	mov	x23, x0
  40f4f0:	ldr	x0, [x20, #8]
  40f4f4:	bl	4149a0 <ferror@plt+0x12000>
  40f4f8:	mov	x0, x23
  40f4fc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40f500:	add	x1, x1, #0x9a0
  40f504:	bl	415098 <ferror@plt+0x126f8>
  40f508:	mov	x19, x0
  40f50c:	cbz	x0, 40f660 <ferror@plt+0xccc0>
  40f510:	bl	4024c0 <fileno@plt>
  40f514:	mov	w1, #0x1                   	// #1
  40f518:	bl	415358 <ferror@plt+0x129b8>
  40f51c:	cbnz	w0, 40f68c <ferror@plt+0xccec>
  40f520:	ldr	w1, [x21, #16]
  40f524:	str	x19, [x21]
  40f528:	cmp	w1, #0x0
  40f52c:	b.gt	40f60c <ferror@plt+0xcc6c>
  40f530:	mov	x0, x24
  40f534:	bl	4027c0 <free@plt>
  40f538:	ldr	x23, [x20, #152]
  40f53c:	mov	w0, #0x1                   	// #1
  40f540:	str	w0, [x21, #16]
  40f544:	cmp	x21, x23
  40f548:	b.eq	40f5ec <ferror@plt+0xcc4c>  // b.none
  40f54c:	ldr	w0, [x20, #120]
  40f550:	ldr	w19, [x21, #8]
  40f554:	ldr	x24, [x21]
  40f558:	str	xzr, [x21]
  40f55c:	cmp	w19, w0
  40f560:	b.eq	40f584 <ferror@plt+0xcbe4>  // b.none
  40f564:	ldr	w1, [x20, #140]
  40f568:	cmp	w19, w1
  40f56c:	b.eq	40f584 <ferror@plt+0xcbe4>  // b.none
  40f570:	ldrb	w2, [x20, #136]
  40f574:	cbz	w2, 40f6dc <ferror@plt+0xcd3c>
  40f578:	cbnz	w0, 40f6f4 <ferror@plt+0xcd54>
  40f57c:	str	w19, [x20, #120]
  40f580:	str	x24, [x20, #128]
  40f584:	sxtw	x0, w22
  40f588:	ldr	x21, [x23]
  40f58c:	bl	41ca30 <ferror@plt+0x1a090>
  40f590:	ldr	x19, [x20, #152]
  40f594:	mov	x1, x21
  40f598:	ldrsw	x2, [x19, #16]
  40f59c:	str	x0, [x23]
  40f5a0:	ldr	x0, [x19]
  40f5a4:	bl	402350 <memcpy@plt>
  40f5a8:	mov	x0, x21
  40f5ac:	bl	4027c0 <free@plt>
  40f5b0:	ldp	w0, w1, [x19, #12]
  40f5b4:	str	w22, [x19, #12]
  40f5b8:	ldr	x3, [x19]
  40f5bc:	sub	w0, w22, w0
  40f5c0:	ldr	w4, [x20, #164]
  40f5c4:	sub	w2, w22, w1
  40f5c8:	ldp	x21, x22, [sp, #32]
  40f5cc:	add	w0, w0, w4
  40f5d0:	add	x1, x3, w1, sxtw
  40f5d4:	stp	w2, w0, [x20, #160]
  40f5d8:	str	x1, [x20, #176]
  40f5dc:	ldp	x19, x20, [sp, #16]
  40f5e0:	ldp	x23, x24, [sp, #48]
  40f5e4:	ldp	x29, x30, [sp], #176
  40f5e8:	ret
  40f5ec:	ldr	x0, [x21]
  40f5f0:	str	wzr, [x20, #160]
  40f5f4:	stp	x0, xzr, [x20, #168]
  40f5f8:	ldp	x19, x20, [sp, #16]
  40f5fc:	ldp	x21, x22, [sp, #32]
  40f600:	ldp	x23, x24, [sp, #48]
  40f604:	ldp	x29, x30, [sp], #176
  40f608:	ret
  40f60c:	mov	x3, x19
  40f610:	sxtw	x1, w1
  40f614:	mov	x0, x24
  40f618:	mov	x2, #0x1                   	// #1
  40f61c:	bl	402830 <fwrite@plt>
  40f620:	cmp	w0, #0x1
  40f624:	b.eq	40f530 <ferror@plt+0xcb90>  // b.none
  40f628:	bl	402920 <__errno_location@plt>
  40f62c:	mov	x1, x0
  40f630:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f634:	mov	w0, #0x1                   	// #1
  40f638:	add	x2, x2, #0x9d8
  40f63c:	ldr	w1, [x1]
  40f640:	bl	4033d0 <ferror@plt+0xa30>
  40f644:	b	40f530 <ferror@plt+0xcb90>
  40f648:	lsl	w22, w22, #1
  40f64c:	cmp	w19, w22
  40f650:	b.le	40f428 <ferror@plt+0xca88>
  40f654:	cbnz	w22, 40f648 <ferror@plt+0xcca8>
  40f658:	mov	w22, #0x200                 	// #512
  40f65c:	b	40f428 <ferror@plt+0xca88>
  40f660:	ldr	x0, [x20, #8]
  40f664:	mov	x1, x23
  40f668:	bl	414a28 <ferror@plt+0x12088>
  40f66c:	bl	402920 <__errno_location@plt>
  40f670:	mov	x1, x0
  40f674:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f678:	mov	w0, #0x1                   	// #1
  40f67c:	add	x2, x2, #0x940
  40f680:	ldr	w1, [x1]
  40f684:	bl	4033d0 <ferror@plt+0xa30>
  40f688:	b	40f520 <ferror@plt+0xcb80>
  40f68c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f690:	ldr	w23, [x0, #1676]
  40f694:	bl	402920 <__errno_location@plt>
  40f698:	mov	x1, x0
  40f69c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f6a0:	mov	w0, w23
  40f6a4:	add	x2, x2, #0x9a8
  40f6a8:	ldr	w1, [x1]
  40f6ac:	bl	4033d0 <ferror@plt+0xa30>
  40f6b0:	b	40f520 <ferror@plt+0xcb80>
  40f6b4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40f6b8:	mov	w2, #0x1                   	// #1
  40f6bc:	add	x0, x0, #0x998
  40f6c0:	bl	414738 <ferror@plt+0x11d98>
  40f6c4:	str	x0, [x20, #8]
  40f6c8:	cbz	x0, 40f740 <ferror@plt+0xcda0>
  40f6cc:	adrp	x0, 40f000 <ferror@plt+0xc660>
  40f6d0:	add	x0, x0, #0xf0
  40f6d4:	bl	41df08 <_obstack_memory_used@@Base+0x548>
  40f6d8:	b	40f4e0 <ferror@plt+0xcb40>
  40f6dc:	cbnz	w1, 40f72c <ferror@plt+0xcd8c>
  40f6e0:	str	w19, [x20, #140]
  40f6e4:	str	x24, [x20, #144]
  40f6e8:	b	40f584 <ferror@plt+0xcbe4>
  40f6ec:	mov	w22, w1
  40f6f0:	b	40f428 <ferror@plt+0xca88>
  40f6f4:	ldr	x0, [x20, #128]
  40f6f8:	bl	4152b0 <ferror@plt+0x12910>
  40f6fc:	str	w19, [x20, #120]
  40f700:	str	x24, [x20, #128]
  40f704:	cbz	w0, 40f724 <ferror@plt+0xcd84>
  40f708:	bl	402920 <__errno_location@plt>
  40f70c:	mov	x1, x0
  40f710:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f714:	mov	w0, #0x0                   	// #0
  40f718:	add	x2, x2, #0xa08
  40f71c:	ldr	w1, [x1]
  40f720:	bl	4033d0 <ferror@plt+0xa30>
  40f724:	ldr	x23, [x20, #152]
  40f728:	b	40f584 <ferror@plt+0xcbe4>
  40f72c:	ldr	x0, [x20, #144]
  40f730:	bl	4152b0 <ferror@plt+0x12910>
  40f734:	str	w19, [x20, #140]
  40f738:	str	x24, [x20, #144]
  40f73c:	b	40f704 <ferror@plt+0xcd64>
  40f740:	bl	402920 <__errno_location@plt>
  40f744:	mov	x1, x0
  40f748:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f74c:	mov	w0, #0x1                   	// #1
  40f750:	add	x2, x2, #0x940
  40f754:	ldr	w1, [x1]
  40f758:	bl	4033d0 <ferror@plt+0xa30>
  40f75c:	b	40f6cc <ferror@plt+0xcd2c>
  40f760:	stp	x29, x30, [sp, #-16]!
  40f764:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f768:	adrp	x1, 40e000 <ferror@plt+0xb660>
  40f76c:	mov	x29, sp
  40f770:	ldr	x3, [x2, #3072]
  40f774:	add	x0, x2, #0xc00
  40f778:	add	x1, x1, #0xf58
  40f77c:	mov	x2, #0x0                   	// #0
  40f780:	blr	x3
  40f784:	cbz	x0, 40f7d4 <ferror@plt+0xce34>
  40f788:	mov	x6, x0
  40f78c:	adrp	x5, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f790:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f794:	add	x5, x5, #0xa50
  40f798:	add	x8, x5, #0xb8
  40f79c:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40f7a0:	ldr	x7, [x0, #1088]
  40f7a4:	str	x6, [x5, #112]
  40f7a8:	str	x8, [x5, #152]
  40f7ac:	add	x0, x5, #0x18
  40f7b0:	str	x7, [x5, #168]
  40f7b4:	add	x4, x4, #0x7c0
  40f7b8:	str	x7, [x5, #184]
  40f7bc:	adrp	x3, 41c000 <ferror@plt+0x19660>
  40f7c0:	mov	x2, #0x0                   	// #0
  40f7c4:	add	x3, x3, #0xa30
  40f7c8:	ldp	x29, x30, [sp], #16
  40f7cc:	mov	x1, #0x0                   	// #0
  40f7d0:	b	41d5b0 <_obstack_begin@@Base>
  40f7d4:	bl	41cbf8 <ferror@plt+0x1a258>
  40f7d8:	stp	x29, x30, [sp, #-48]!
  40f7dc:	mov	x29, sp
  40f7e0:	stp	x19, x20, [sp, #16]
  40f7e4:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f7e8:	add	x19, x19, #0xa50
  40f7ec:	stp	x21, x22, [sp, #32]
  40f7f0:	ldr	w21, [x19, #120]
  40f7f4:	ldr	x20, [x19, #112]
  40f7f8:	cbnz	w21, 40f844 <ferror@plt+0xcea4>
  40f7fc:	ldr	w21, [x19, #140]
  40f800:	cbnz	w21, 40f830 <ferror@plt+0xce90>
  40f804:	ldr	x1, [x20]
  40f808:	mov	x0, x20
  40f80c:	str	xzr, [x19, #112]
  40f810:	ldr	x1, [x1, #48]
  40f814:	blr	x1
  40f818:	add	x0, x19, #0x18
  40f81c:	mov	x1, #0x0                   	// #0
  40f820:	ldp	x19, x20, [sp, #16]
  40f824:	ldp	x21, x22, [sp, #32]
  40f828:	ldp	x29, x30, [sp], #48
  40f82c:	b	41d910 <_obstack_free@@Base>
  40f830:	ldr	x0, [x19, #144]
  40f834:	bl	4152b0 <ferror@plt+0x12910>
  40f838:	cbnz	w0, 40f804 <ferror@plt+0xce64>
  40f83c:	str	wzr, [x19, #140]
  40f840:	b	40f890 <ferror@plt+0xcef0>
  40f844:	ldr	x0, [x19, #128]
  40f848:	bl	4152b0 <ferror@plt+0x12910>
  40f84c:	cbnz	w0, 40f86c <ferror@plt+0xcecc>
  40f850:	ldr	x22, [x19, #8]
  40f854:	mov	w0, w21
  40f858:	str	wzr, [x19, #120]
  40f85c:	bl	40ef80 <ferror@plt+0xc5e0>
  40f860:	mov	x1, x0
  40f864:	mov	x0, x22
  40f868:	bl	414be0 <ferror@plt+0x12240>
  40f86c:	ldr	w21, [x19, #140]
  40f870:	cbz	w21, 40f804 <ferror@plt+0xce64>
  40f874:	ldr	w0, [x19, #120]
  40f878:	cmp	w21, w0
  40f87c:	b.ne	40f830 <ferror@plt+0xce90>  // b.any
  40f880:	ldr	x0, [x19, #128]
  40f884:	bl	4152b0 <ferror@plt+0x12910>
  40f888:	cbnz	w0, 40f804 <ferror@plt+0xce64>
  40f88c:	str	wzr, [x19, #120]
  40f890:	ldr	x22, [x19, #8]
  40f894:	mov	w0, w21
  40f898:	bl	40ef80 <ferror@plt+0xc5e0>
  40f89c:	mov	x1, x0
  40f8a0:	mov	x0, x22
  40f8a4:	bl	414be0 <ferror@plt+0x12240>
  40f8a8:	b	40f804 <ferror@plt+0xce64>
  40f8ac:	nop
  40f8b0:	stp	x29, x30, [sp, #-64]!
  40f8b4:	mov	x29, sp
  40f8b8:	stp	x19, x20, [sp, #16]
  40f8bc:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f8c0:	add	x19, x19, #0xa50
  40f8c4:	stp	x21, x22, [sp, #32]
  40f8c8:	mov	x21, x0
  40f8cc:	ldr	x0, [x19, #152]
  40f8d0:	cmp	x0, #0x0
  40f8d4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40f8d8:	b.eq	40f900 <ferror@plt+0xcf60>  // b.none
  40f8dc:	ldr	x3, [x19, #168]
  40f8e0:	mov	w20, w1
  40f8e4:	cbz	x3, 40f938 <ferror@plt+0xcf98>
  40f8e8:	sxtw	x1, w20
  40f8ec:	mov	x0, x21
  40f8f0:	mov	x2, #0x1                   	// #1
  40f8f4:	bl	402830 <fwrite@plt>
  40f8f8:	cmp	w0, #0x1
  40f8fc:	b.ne	40f910 <ferror@plt+0xcf70>  // b.any
  40f900:	ldp	x19, x20, [sp, #16]
  40f904:	ldp	x21, x22, [sp, #32]
  40f908:	ldp	x29, x30, [sp], #64
  40f90c:	ret
  40f910:	bl	402920 <__errno_location@plt>
  40f914:	mov	x1, x0
  40f918:	ldp	x19, x20, [sp, #16]
  40f91c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40f920:	ldp	x21, x22, [sp, #32]
  40f924:	add	x2, x2, #0xa38
  40f928:	ldp	x29, x30, [sp], #64
  40f92c:	mov	w0, #0x1                   	// #1
  40f930:	ldr	w1, [x1]
  40f934:	b	4033d0 <ferror@plt+0xa30>
  40f938:	ldr	w22, [x19, #160]
  40f93c:	cmp	w22, w1
  40f940:	b.lt	40f984 <ferror@plt+0xcfe4>  // b.tstop
  40f944:	str	x23, [sp, #48]
  40f948:	ldr	x3, [x19, #176]
  40f94c:	sxtw	x23, w20
  40f950:	mov	x1, x21
  40f954:	mov	x2, x23
  40f958:	sub	w20, w22, w20
  40f95c:	mov	x0, x3
  40f960:	bl	402350 <memcpy@plt>
  40f964:	add	x3, x0, x23
  40f968:	str	w20, [x19, #160]
  40f96c:	str	x3, [x19, #176]
  40f970:	ldp	x19, x20, [sp, #16]
  40f974:	ldp	x21, x22, [sp, #32]
  40f978:	ldr	x23, [sp, #48]
  40f97c:	ldp	x29, x30, [sp], #64
  40f980:	ret
  40f984:	mov	w0, w1
  40f988:	bl	40f3c0 <ferror@plt+0xca20>
  40f98c:	ldr	x3, [x19, #168]
  40f990:	cbnz	x3, 40f8e8 <ferror@plt+0xcf48>
  40f994:	ldr	w22, [x19, #160]
  40f998:	str	x23, [sp, #48]
  40f99c:	b	40f948 <ferror@plt+0xcfa8>
  40f9a0:	stp	x29, x30, [sp, #-96]!
  40f9a4:	mov	x29, sp
  40f9a8:	stp	x19, x20, [sp, #16]
  40f9ac:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f9b0:	add	x19, x19, #0xa50
  40f9b4:	stp	x21, x22, [sp, #32]
  40f9b8:	mov	x22, x0
  40f9bc:	ldr	w2, [x0, #12]
  40f9c0:	ldr	x20, [x19, #152]
  40f9c4:	cbz	x20, 40fb3c <ferror@plt+0xd19c>
  40f9c8:	ldr	x0, [x20]
  40f9cc:	cbnz	w2, 40facc <ferror@plt+0xd12c>
  40f9d0:	cbz	x0, 40fcc0 <ferror@plt+0xd320>
  40f9d4:	stp	x23, x24, [sp, #48]
  40f9d8:	ldr	x23, [x22]
  40f9dc:	cbz	x23, 40fdc8 <ferror@plt+0xd428>
  40f9e0:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  40f9e4:	add	x24, x24, #0xb30
  40f9e8:	stp	x25, x26, [sp, #64]
  40f9ec:	adrp	x25, 420000 <_obstack_memory_used@@Base+0x2640>
  40f9f0:	adrp	x26, 420000 <_obstack_memory_used@@Base+0x2640>
  40f9f4:	add	x25, x25, #0xaa0
  40f9f8:	add	x26, x26, #0xa38
  40f9fc:	str	x27, [sp, #80]
  40fa00:	mov	x3, x23
  40fa04:	mov	x2, #0x4000                	// #16384
  40fa08:	mov	x1, #0x1                   	// #1
  40fa0c:	mov	x0, x24
  40fa10:	bl	4027b0 <fread@plt>
  40fa14:	mov	x20, x0
  40fa18:	mov	x0, x23
  40fa1c:	bl	4029a0 <ferror@plt>
  40fa20:	cbnz	w0, 40fa78 <ferror@plt+0xd0d8>
  40fa24:	cbz	x20, 40fa94 <ferror@plt+0xd0f4>
  40fa28:	ldr	x0, [x19, #152]
  40fa2c:	mov	w21, w20
  40fa30:	cmp	x0, #0x0
  40fa34:	ccmp	w20, #0x0, #0x4, ne  // ne = any
  40fa38:	b.eq	40fa00 <ferror@plt+0xd060>  // b.none
  40fa3c:	ldr	x3, [x19, #168]
  40fa40:	cbz	x3, 40fbf0 <ferror@plt+0xd250>
  40fa44:	sxtw	x1, w21
  40fa48:	mov	x0, x24
  40fa4c:	mov	x2, #0x1                   	// #1
  40fa50:	bl	402830 <fwrite@plt>
  40fa54:	cmp	w0, #0x1
  40fa58:	b.eq	40fa00 <ferror@plt+0xd060>  // b.none
  40fa5c:	bl	402920 <__errno_location@plt>
  40fa60:	mov	x1, x0
  40fa64:	mov	x2, x26
  40fa68:	mov	w0, #0x1                   	// #1
  40fa6c:	ldr	w1, [x1]
  40fa70:	bl	4033d0 <ferror@plt+0xa30>
  40fa74:	b	40fa00 <ferror@plt+0xd060>
  40fa78:	bl	402920 <__errno_location@plt>
  40fa7c:	mov	x1, x0
  40fa80:	mov	x2, x25
  40fa84:	mov	w0, #0x1                   	// #1
  40fa88:	ldr	w1, [x1]
  40fa8c:	bl	4033d0 <ferror@plt+0xa30>
  40fa90:	cbnz	x20, 40fa28 <ferror@plt+0xd088>
  40fa94:	ldp	x23, x24, [sp, #48]
  40fa98:	ldp	x25, x26, [sp, #64]
  40fa9c:	ldr	w2, [x22, #12]
  40faa0:	ldr	x27, [sp, #80]
  40faa4:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40faa8:	mov	w1, #0xffffffff            	// #-1
  40faac:	str	w1, [x0, #3608]
  40fab0:	cbz	w2, 40fafc <ferror@plt+0xd15c>
  40fab4:	ldr	x0, [x19, #152]
  40fab8:	cbz	x0, 40fb40 <ferror@plt+0xd1a0>
  40fabc:	ldr	x0, [x22]
  40fac0:	bl	4027c0 <free@plt>
  40fac4:	str	wzr, [x22, #12]
  40fac8:	b	40fbbc <ferror@plt+0xd21c>
  40facc:	cbz	x0, 40fc28 <ferror@plt+0xd288>
  40fad0:	ldr	w3, [x19, #164]
  40fad4:	ldr	w1, [x22, #16]
  40fad8:	ldr	x0, [x22]
  40fadc:	sub	w2, w3, w2
  40fae0:	str	w2, [x19, #164]
  40fae4:	bl	40f8b0 <ferror@plt+0xcf10>
  40fae8:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40faec:	ldr	w2, [x22, #12]
  40faf0:	mov	w1, #0xffffffff            	// #-1
  40faf4:	str	w1, [x0, #3608]
  40faf8:	cbnz	w2, 40fab4 <ferror@plt+0xd114>
  40fafc:	ldr	x21, [x22]
  40fb00:	ldr	w0, [x19, #120]
  40fb04:	ldr	w20, [x22, #8]
  40fb08:	cbz	x21, 40fb8c <ferror@plt+0xd1ec>
  40fb0c:	str	xzr, [x22]
  40fb10:	cmp	w0, w20
  40fb14:	b.eq	40fc70 <ferror@plt+0xd2d0>  // b.none
  40fb18:	ldr	w1, [x19, #140]
  40fb1c:	cmp	w1, w20
  40fb20:	b.eq	40fd98 <ferror@plt+0xd3f8>  // b.none
  40fb24:	ldrb	w2, [x19, #136]
  40fb28:	cbz	w2, 40fb50 <ferror@plt+0xd1b0>
  40fb2c:	cbnz	w0, 40fdb4 <ferror@plt+0xd414>
  40fb30:	str	w20, [x19, #120]
  40fb34:	str	x21, [x19, #128]
  40fb38:	b	40fc74 <ferror@plt+0xd2d4>
  40fb3c:	cbz	w2, 40fafc <ferror@plt+0xd15c>
  40fb40:	ldr	w0, [x19, #164]
  40fb44:	sub	w2, w0, w2
  40fb48:	str	w2, [x19, #164]
  40fb4c:	b	40fabc <ferror@plt+0xd11c>
  40fb50:	cbz	w1, 40fd90 <ferror@plt+0xd3f0>
  40fb54:	ldr	x0, [x19, #144]
  40fb58:	bl	4152b0 <ferror@plt+0x12910>
  40fb5c:	str	w20, [x19, #140]
  40fb60:	str	x21, [x19, #144]
  40fb64:	cbz	w0, 40fb84 <ferror@plt+0xd1e4>
  40fb68:	bl	402920 <__errno_location@plt>
  40fb6c:	mov	x1, x0
  40fb70:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40fb74:	mov	w0, #0x0                   	// #0
  40fb78:	add	x2, x2, #0x8e8
  40fb7c:	ldr	w1, [x1]
  40fb80:	bl	4033d0 <ferror@plt+0xa30>
  40fb84:	ldr	w0, [x19, #120]
  40fb88:	ldr	w20, [x22, #8]
  40fb8c:	cmp	w0, w20
  40fb90:	b.eq	40fc70 <ferror@plt+0xd2d0>  // b.none
  40fb94:	ldr	w0, [x19, #140]
  40fb98:	cmp	w20, w0
  40fb9c:	b.eq	40fd98 <ferror@plt+0xd3f8>  // b.none
  40fba0:	ldr	x21, [x19, #8]
  40fba4:	mov	w0, w20
  40fba8:	bl	40ef80 <ferror@plt+0xc5e0>
  40fbac:	mov	x1, x0
  40fbb0:	mov	x0, x21
  40fbb4:	bl	414be0 <ferror@plt+0x12240>
  40fbb8:	cbnz	w0, 40fca0 <ferror@plt+0xd300>
  40fbbc:	ldr	x0, [x19, #112]
  40fbc0:	mov	x1, x22
  40fbc4:	ldr	x2, [x0]
  40fbc8:	ldr	x2, [x2, #40]
  40fbcc:	str	wzr, [x22, #16]
  40fbd0:	blr	x2
  40fbd4:	ldr	x0, [x19, #208]
  40fbd8:	str	x22, [x19, #208]
  40fbdc:	ldp	x19, x20, [sp, #16]
  40fbe0:	str	x0, [x22]
  40fbe4:	ldp	x21, x22, [sp, #32]
  40fbe8:	ldp	x29, x30, [sp], #96
  40fbec:	ret
  40fbf0:	ldr	w27, [x19, #160]
  40fbf4:	cmp	w20, w27
  40fbf8:	b.gt	40fc88 <ferror@plt+0xd2e8>
  40fbfc:	ldr	x3, [x19, #176]
  40fc00:	sxtw	x20, w21
  40fc04:	mov	x2, x20
  40fc08:	mov	x1, x24
  40fc0c:	mov	x0, x3
  40fc10:	sub	w21, w27, w21
  40fc14:	bl	402350 <memcpy@plt>
  40fc18:	add	x3, x0, x20
  40fc1c:	str	w21, [x19, #160]
  40fc20:	str	x3, [x19, #176]
  40fc24:	b	40fa00 <ferror@plt+0xd060>
  40fc28:	ldr	w1, [x20, #16]
  40fc2c:	add	x0, x19, #0xb8
  40fc30:	cmp	w1, #0x0
  40fc34:	ccmp	x20, x0, #0x4, eq  // eq = none
  40fc38:	b.eq	40fe18 <ferror@plt+0xd478>  // b.none
  40fc3c:	ldr	x0, [x19, #168]
  40fc40:	cbnz	x0, 40fe18 <ferror@plt+0xd478>
  40fc44:	ldr	x0, [x22]
  40fc48:	str	x0, [x20]
  40fc4c:	str	w2, [x20, #12]
  40fc50:	ldr	x1, [x22]
  40fc54:	str	xzr, [x22]
  40fc58:	ldp	w2, w0, [x22, #12]
  40fc5c:	add	x1, x1, w0, sxtw
  40fc60:	sub	w0, w2, w0
  40fc64:	str	w0, [x19, #160]
  40fc68:	str	x1, [x19, #176]
  40fc6c:	b	40faa4 <ferror@plt+0xd104>
  40fc70:	ldr	x21, [x19, #128]
  40fc74:	mov	x0, x21
  40fc78:	bl	4152b0 <ferror@plt+0x12910>
  40fc7c:	cbnz	w0, 40fca0 <ferror@plt+0xd300>
  40fc80:	str	wzr, [x19, #120]
  40fc84:	b	40fba0 <ferror@plt+0xd200>
  40fc88:	mov	w0, w20
  40fc8c:	bl	40f3c0 <ferror@plt+0xca20>
  40fc90:	ldr	x3, [x19, #168]
  40fc94:	cbnz	x3, 40fa44 <ferror@plt+0xd0a4>
  40fc98:	ldr	w27, [x19, #160]
  40fc9c:	b	40fbfc <ferror@plt+0xd25c>
  40fca0:	bl	402920 <__errno_location@plt>
  40fca4:	mov	x1, x0
  40fca8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40fcac:	mov	w0, #0x0                   	// #0
  40fcb0:	add	x2, x2, #0x8e8
  40fcb4:	ldr	w1, [x1]
  40fcb8:	bl	4033d0 <ferror@plt+0xa30>
  40fcbc:	b	40fbbc <ferror@plt+0xd21c>
  40fcc0:	ldr	w1, [x20, #16]
  40fcc4:	add	x0, x19, #0xb8
  40fcc8:	cmp	w1, #0x0
  40fccc:	ccmp	x20, x0, #0x4, eq  // eq = none
  40fcd0:	b.eq	40fe48 <ferror@plt+0xd4a8>  // b.none
  40fcd4:	ldr	x0, [x19, #168]
  40fcd8:	cbnz	x0, 40fe48 <ferror@plt+0xd4a8>
  40fcdc:	stp	x23, x24, [sp, #48]
  40fce0:	ldr	w24, [x22, #8]
  40fce4:	stp	x25, x26, [sp, #64]
  40fce8:	ldr	w25, [x20, #8]
  40fcec:	mov	w0, w24
  40fcf0:	bl	40ef80 <ferror@plt+0xc5e0>
  40fcf4:	bl	41cbb8 <ferror@plt+0x1a218>
  40fcf8:	mov	x21, x0
  40fcfc:	mov	w0, w25
  40fd00:	bl	40ef80 <ferror@plt+0xc5e0>
  40fd04:	mov	x1, x0
  40fd08:	mov	x23, x0
  40fd0c:	ldr	x0, [x19, #8]
  40fd10:	bl	4149a0 <ferror@plt+0x12000>
  40fd14:	ldr	w0, [x19, #120]
  40fd18:	cmp	w24, w0
  40fd1c:	b.eq	40fdf0 <ferror@plt+0xd450>  // b.none
  40fd20:	ldr	w0, [x19, #140]
  40fd24:	cmp	w24, w0
  40fd28:	b.eq	40fdac <ferror@plt+0xd40c>  // b.none
  40fd2c:	mov	x1, x23
  40fd30:	mov	x0, x21
  40fd34:	bl	402820 <rename@plt>
  40fd38:	cbnz	w0, 40fdf8 <ferror@plt+0xd458>
  40fd3c:	ldr	x0, [x19, #8]
  40fd40:	mov	x1, x21
  40fd44:	bl	414a28 <ferror@plt+0x12088>
  40fd48:	mov	x0, x21
  40fd4c:	bl	4027c0 <free@plt>
  40fd50:	mov	w0, w25
  40fd54:	mov	w1, #0x0                   	// #0
  40fd58:	bl	40f1f0 <ferror@plt+0xc850>
  40fd5c:	ldr	x1, [x19, #152]
  40fd60:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40fd64:	ldp	x23, x24, [sp, #48]
  40fd68:	mov	w3, #0xffffffff            	// #-1
  40fd6c:	ldp	x25, x26, [sp, #64]
  40fd70:	str	x0, [x20]
  40fd74:	mov	w0, #0x1                   	// #1
  40fd78:	str	w0, [x1, #16]
  40fd7c:	ldr	x0, [x1]
  40fd80:	str	xzr, [x22]
  40fd84:	str	w3, [x2, #3608]
  40fd88:	str	x0, [x19, #168]
  40fd8c:	b	40fabc <ferror@plt+0xd11c>
  40fd90:	str	w20, [x19, #140]
  40fd94:	str	x21, [x19, #144]
  40fd98:	ldr	x0, [x19, #144]
  40fd9c:	bl	4152b0 <ferror@plt+0x12910>
  40fda0:	cbnz	w0, 40fca0 <ferror@plt+0xd300>
  40fda4:	str	wzr, [x19, #140]
  40fda8:	b	40fba0 <ferror@plt+0xd200>
  40fdac:	str	w25, [x19, #140]
  40fdb0:	b	40fd2c <ferror@plt+0xd38c>
  40fdb4:	ldr	x0, [x19, #128]
  40fdb8:	bl	4152b0 <ferror@plt+0x12910>
  40fdbc:	str	w20, [x19, #120]
  40fdc0:	str	x21, [x19, #128]
  40fdc4:	b	40fb64 <ferror@plt+0xd1c4>
  40fdc8:	ldr	w0, [x22, #8]
  40fdcc:	mov	w1, #0x1                   	// #1
  40fdd0:	bl	40f1f0 <ferror@plt+0xc850>
  40fdd4:	str	x0, [x22]
  40fdd8:	ldr	x1, [x19, #152]
  40fddc:	mov	x23, x0
  40fde0:	cbnz	x1, 40f9e0 <ferror@plt+0xd040>
  40fde4:	ldr	w2, [x22, #12]
  40fde8:	ldp	x23, x24, [sp, #48]
  40fdec:	b	40faa4 <ferror@plt+0xd104>
  40fdf0:	str	w25, [x19, #120]
  40fdf4:	b	40fd2c <ferror@plt+0xd38c>
  40fdf8:	bl	402920 <__errno_location@plt>
  40fdfc:	mov	x1, x0
  40fe00:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  40fe04:	mov	w0, #0x1                   	// #1
  40fe08:	add	x2, x2, #0x940
  40fe0c:	ldr	w1, [x1]
  40fe10:	bl	4033d0 <ferror@plt+0xa30>
  40fe14:	b	40fd3c <ferror@plt+0xd39c>
  40fe18:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  40fe1c:	add	x3, x3, #0xb30
  40fe20:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40fe24:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40fe28:	add	x3, x3, #0x10
  40fe2c:	add	x1, x1, #0x8c0
  40fe30:	add	x0, x0, #0xa58
  40fe34:	mov	w2, #0x358                 	// #856
  40fe38:	stp	x23, x24, [sp, #48]
  40fe3c:	stp	x25, x26, [sp, #64]
  40fe40:	str	x27, [sp, #80]
  40fe44:	bl	402910 <__assert_fail@plt>
  40fe48:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  40fe4c:	add	x3, x3, #0xb30
  40fe50:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  40fe54:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  40fe58:	add	x3, x3, #0x10
  40fe5c:	add	x1, x1, #0x8c0
  40fe60:	add	x0, x0, #0xa58
  40fe64:	mov	w2, #0x36d                 	// #877
  40fe68:	stp	x23, x24, [sp, #48]
  40fe6c:	stp	x25, x26, [sp, #64]
  40fe70:	str	x27, [sp, #80]
  40fe74:	bl	402910 <__assert_fail@plt>
  40fe78:	stp	x29, x30, [sp, #-80]!
  40fe7c:	mov	x29, sp
  40fe80:	stp	x19, x20, [sp, #16]
  40fe84:	mov	x19, x1
  40fe88:	stp	x21, x22, [sp, #32]
  40fe8c:	mov	w21, w2
  40fe90:	cbz	x0, 40fed8 <ferror@plt+0xd538>
  40fe94:	sxtw	x22, w2
  40fe98:	mov	x20, x0
  40fe9c:	ldp	x2, x1, [x0, #24]
  40fea0:	sub	x1, x1, x2
  40fea4:	cmp	x1, w21, sxtw
  40fea8:	b.cc	4100dc <ferror@plt+0xd73c>  // b.lo, b.ul, b.last
  40feac:	mov	x0, x2
  40feb0:	mov	x1, x19
  40feb4:	mov	x2, x22
  40feb8:	bl	402350 <memcpy@plt>
  40febc:	ldr	x0, [x20, #24]
  40fec0:	add	x0, x0, x22
  40fec4:	str	x0, [x20, #24]
  40fec8:	ldp	x19, x20, [sp, #16]
  40fecc:	ldp	x21, x22, [sp, #32]
  40fed0:	ldp	x29, x30, [sp], #80
  40fed4:	ret
  40fed8:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  40fedc:	add	x20, x20, #0xa50
  40fee0:	ldr	x0, [x20, #152]
  40fee4:	cbz	x0, 40fec8 <ferror@plt+0xd528>
  40fee8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40feec:	ldr	w0, [x0, #1700]
  40fef0:	cbnz	w0, 40ff60 <ferror@plt+0xd5c0>
  40fef4:	cmp	w2, #0x4
  40fef8:	b.eq	41059c <ferror@plt+0xdbfc>  // b.none
  40fefc:	b.gt	410148 <ferror@plt+0xd7a8>
  40ff00:	cmp	w2, #0x2
  40ff04:	b.eq	4105a4 <ferror@plt+0xdc04>  // b.none
  40ff08:	cmp	w2, #0x3
  40ff0c:	b.ne	410134 <ferror@plt+0xd794>  // b.any
  40ff10:	ldr	x1, [x20, #168]
  40ff14:	ldrb	w21, [x19]
  40ff18:	cbz	x1, 4102bc <ferror@plt+0xd91c>
  40ff1c:	mov	w0, w21
  40ff20:	bl	402430 <putc@plt>
  40ff24:	ldr	x1, [x20, #168]
  40ff28:	add	x19, x19, #0x1
  40ff2c:	ldrb	w21, [x19]
  40ff30:	cbz	x1, 410870 <ferror@plt+0xded0>
  40ff34:	mov	w0, w21
  40ff38:	bl	402430 <putc@plt>
  40ff3c:	ldr	x1, [x20, #168]
  40ff40:	add	x19, x19, #0x1
  40ff44:	ldrb	w19, [x19]
  40ff48:	cbz	x1, 410308 <ferror@plt+0xd968>
  40ff4c:	mov	w0, w19
  40ff50:	ldp	x19, x20, [sp, #16]
  40ff54:	ldp	x21, x22, [sp, #32]
  40ff58:	ldp	x29, x30, [sp], #80
  40ff5c:	b	402430 <putc@plt>
  40ff60:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  40ff64:	stp	x23, x24, [sp, #48]
  40ff68:	ldrb	w1, [x0, #864]
  40ff6c:	str	x25, [sp, #64]
  40ff70:	cbz	w1, 410044 <ferror@plt+0xd6a4>
  40ff74:	adrp	x25, 443000 <__progname@@GLIBC_2.17+0xaba8>
  40ff78:	strb	wzr, [x0, #864]
  40ff7c:	mov	w22, w3
  40ff80:	ldr	w0, [x25, #3608]
  40ff84:	add	w0, w0, #0x1
  40ff88:	str	w0, [x25, #3608]
  40ff8c:	cmp	w0, w3
  40ff90:	b.eq	410044 <ferror@plt+0xd6a4>  // b.none
  40ff94:	ldr	x1, [x20, #168]
  40ff98:	cbz	x1, 41032c <ferror@plt+0xd98c>
  40ff9c:	mov	w0, #0x23                  	// #35
  40ffa0:	bl	402430 <putc@plt>
  40ffa4:	ldr	x1, [x20, #168]
  40ffa8:	cbz	x1, 410928 <ferror@plt+0xdf88>
  40ffac:	mov	w0, #0x6c                  	// #108
  40ffb0:	bl	402430 <putc@plt>
  40ffb4:	ldr	x1, [x20, #168]
  40ffb8:	cbz	x1, 410920 <ferror@plt+0xdf80>
  40ffbc:	mov	w0, #0x69                  	// #105
  40ffc0:	bl	402430 <putc@plt>
  40ffc4:	ldr	x1, [x20, #168]
  40ffc8:	cbz	x1, 410938 <ferror@plt+0xdf98>
  40ffcc:	mov	w0, #0x6e                  	// #110
  40ffd0:	bl	402430 <putc@plt>
  40ffd4:	ldr	x1, [x20, #168]
  40ffd8:	cbz	x1, 410930 <ferror@plt+0xdf90>
  40ffdc:	mov	w0, #0x65                  	// #101
  40ffe0:	bl	402430 <putc@plt>
  40ffe4:	ldr	x1, [x20, #168]
  40ffe8:	cbz	x1, 410940 <ferror@plt+0xdfa0>
  40ffec:	mov	w0, #0x20                  	// #32
  40fff0:	bl	402430 <putc@plt>
  40fff4:	mov	w1, #0xa                   	// #10
  40fff8:	mov	w0, w22
  40fffc:	bl	408b10 <ferror@plt+0x6170>
  410000:	ldrb	w23, [x0]
  410004:	mov	x24, x0
  410008:	ldr	x1, [x20, #168]
  41000c:	cbz	w23, 410028 <ferror@plt+0xd688>
  410010:	cbz	x1, 4104c4 <ferror@plt+0xdb24>
  410014:	mov	w0, w23
  410018:	bl	402430 <putc@plt>
  41001c:	ldr	x1, [x20, #168]
  410020:	ldrb	w23, [x24, #1]!
  410024:	cbnz	w23, 410010 <ferror@plt+0xd670>
  410028:	ldr	w0, [x25, #3608]
  41002c:	cmp	w0, #0x0
  410030:	b.le	4103f4 <ferror@plt+0xda54>
  410034:	cbz	x1, 41054c <ferror@plt+0xdbac>
  410038:	mov	w0, #0xa                   	// #10
  41003c:	bl	402430 <putc@plt>
  410040:	str	w22, [x25, #3608]
  410044:	cmp	w21, #0x0
  410048:	b.le	41011c <ferror@plt+0xd77c>
  41004c:	sub	w21, w21, #0x1
  410050:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  410054:	add	x21, x21, #0x1
  410058:	adrp	x25, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41005c:	add	x22, x22, #0x360
  410060:	add	x21, x19, x21
  410064:	add	x25, x25, #0xe18
  410068:	mov	w23, #0x1                   	// #1
  41006c:	b	410094 <ferror@plt+0xd6f4>
  410070:	mov	w0, w24
  410074:	bl	402430 <putc@plt>
  410078:	ldrb	w0, [x19]
  41007c:	cmp	w0, #0xa
  410080:	b.ne	410088 <ferror@plt+0xd6e8>  // b.any
  410084:	strb	w23, [x22]
  410088:	add	x19, x19, #0x1
  41008c:	cmp	x19, x21
  410090:	b.eq	41011c <ferror@plt+0xd77c>  // b.none
  410094:	ldrb	w0, [x22]
  410098:	cbz	w0, 4100ac <ferror@plt+0xd70c>
  41009c:	ldr	w0, [x25]
  4100a0:	strb	wzr, [x22]
  4100a4:	add	w0, w0, #0x1
  4100a8:	str	w0, [x25]
  4100ac:	ldr	x1, [x20, #168]
  4100b0:	ldrb	w24, [x19]
  4100b4:	cbnz	x1, 410070 <ferror@plt+0xd6d0>
  4100b8:	ldr	w0, [x20, #160]
  4100bc:	cbz	w0, 4100ec <ferror@plt+0xd74c>
  4100c0:	ldr	x1, [x20, #176]
  4100c4:	sub	w0, w0, #0x1
  4100c8:	str	w0, [x20, #160]
  4100cc:	add	x0, x1, #0x1
  4100d0:	str	x0, [x20, #176]
  4100d4:	strb	w24, [x1]
  4100d8:	b	410078 <ferror@plt+0xd6d8>
  4100dc:	mov	x1, x22
  4100e0:	bl	41d788 <_obstack_newchunk@@Base>
  4100e4:	ldr	x2, [x20, #24]
  4100e8:	b	40feac <ferror@plt+0xd50c>
  4100ec:	mov	w0, #0x1                   	// #1
  4100f0:	bl	40f3c0 <ferror@plt+0xca20>
  4100f4:	ldr	x1, [x20, #168]
  4100f8:	cbnz	x1, 410070 <ferror@plt+0xd6d0>
  4100fc:	ldr	x1, [x20, #176]
  410100:	ldr	w0, [x20, #160]
  410104:	add	x2, x1, #0x1
  410108:	str	x2, [x20, #176]
  41010c:	sub	w0, w0, #0x1
  410110:	strb	w24, [x1]
  410114:	str	w0, [x20, #160]
  410118:	b	410078 <ferror@plt+0xd6d8>
  41011c:	ldp	x19, x20, [sp, #16]
  410120:	ldp	x21, x22, [sp, #32]
  410124:	ldp	x23, x24, [sp, #48]
  410128:	ldr	x25, [sp, #64]
  41012c:	ldp	x29, x30, [sp], #80
  410130:	ret
  410134:	cbz	w2, 40fec8 <ferror@plt+0xd528>
  410138:	cmp	w2, #0x1
  41013c:	b.ne	4105b4 <ferror@plt+0xdc14>  // b.any
  410140:	ldr	x1, [x20, #168]
  410144:	b	40ff44 <ferror@plt+0xd5a4>
  410148:	cmp	w2, #0x7
  41014c:	b.eq	4105ac <ferror@plt+0xdc0c>  // b.none
  410150:	b.le	4101dc <ferror@plt+0xd83c>
  410154:	cmp	w2, #0x8
  410158:	b.ne	4105b4 <ferror@plt+0xdc14>  // b.any
  41015c:	ldrb	w21, [x1]
  410160:	ldr	x1, [x20, #168]
  410164:	cbz	x1, 4101f4 <ferror@plt+0xd854>
  410168:	mov	w0, w21
  41016c:	bl	402430 <putc@plt>
  410170:	ldr	x1, [x20, #168]
  410174:	add	x19, x19, #0x1
  410178:	ldrb	w21, [x19]
  41017c:	cbz	x1, 41021c <ferror@plt+0xd87c>
  410180:	mov	w0, w21
  410184:	bl	402430 <putc@plt>
  410188:	ldr	x1, [x20, #168]
  41018c:	add	x19, x19, #0x1
  410190:	ldrb	w21, [x19]
  410194:	cbz	x1, 410244 <ferror@plt+0xd8a4>
  410198:	mov	w0, w21
  41019c:	bl	402430 <putc@plt>
  4101a0:	ldr	x1, [x20, #168]
  4101a4:	add	x19, x19, #0x1
  4101a8:	ldrb	w21, [x19]
  4101ac:	cbz	x1, 41026c <ferror@plt+0xd8cc>
  4101b0:	mov	w0, w21
  4101b4:	bl	402430 <putc@plt>
  4101b8:	ldr	x1, [x20, #168]
  4101bc:	add	x19, x19, #0x1
  4101c0:	ldrb	w21, [x19]
  4101c4:	cbz	x1, 410820 <ferror@plt+0xde80>
  4101c8:	mov	w0, w21
  4101cc:	bl	402430 <putc@plt>
  4101d0:	add	x19, x19, #0x1
  4101d4:	ldr	x1, [x20, #168]
  4101d8:	b	40ff14 <ferror@plt+0xd574>
  4101dc:	cmp	w2, #0x5
  4101e0:	b.eq	4105cc <ferror@plt+0xdc2c>  // b.none
  4101e4:	cmp	w2, #0x6
  4101e8:	b.ne	4105b4 <ferror@plt+0xdc14>  // b.any
  4101ec:	ldr	x1, [x20, #168]
  4101f0:	b	410190 <ferror@plt+0xd7f0>
  4101f4:	ldr	w0, [x20, #160]
  4101f8:	cbz	w0, 410948 <ferror@plt+0xdfa8>
  4101fc:	ldr	x1, [x20, #176]
  410200:	sub	w0, w0, #0x1
  410204:	add	x19, x19, #0x1
  410208:	str	w0, [x20, #160]
  41020c:	add	x0, x1, #0x1
  410210:	str	x0, [x20, #176]
  410214:	strb	w21, [x1]
  410218:	ldrb	w21, [x19]
  41021c:	ldr	w0, [x20, #160]
  410220:	cbz	w0, 4108e8 <ferror@plt+0xdf48>
  410224:	ldr	x1, [x20, #176]
  410228:	sub	w0, w0, #0x1
  41022c:	add	x19, x19, #0x1
  410230:	str	w0, [x20, #160]
  410234:	add	x0, x1, #0x1
  410238:	str	x0, [x20, #176]
  41023c:	strb	w21, [x1]
  410240:	ldrb	w21, [x19]
  410244:	ldr	w0, [x20, #160]
  410248:	cbz	w0, 4107e8 <ferror@plt+0xde48>
  41024c:	ldr	x1, [x20, #176]
  410250:	sub	w0, w0, #0x1
  410254:	add	x19, x19, #0x1
  410258:	str	w0, [x20, #160]
  41025c:	add	x0, x1, #0x1
  410260:	str	x0, [x20, #176]
  410264:	strb	w21, [x1]
  410268:	ldrb	w21, [x19]
  41026c:	ldr	w0, [x20, #160]
  410270:	cbz	w0, 41061c <ferror@plt+0xdc7c>
  410274:	ldr	x1, [x20, #176]
  410278:	sub	w0, w0, #0x1
  41027c:	add	x22, x19, #0x1
  410280:	str	w0, [x20, #160]
  410284:	add	x0, x1, #0x1
  410288:	str	x0, [x20, #176]
  41028c:	strb	w21, [x1]
  410290:	ldrb	w21, [x19, #1]
  410294:	ldr	w0, [x20, #160]
  410298:	cbz	w0, 4105f4 <ferror@plt+0xdc54>
  41029c:	ldr	x1, [x20, #176]
  4102a0:	sub	w0, w0, #0x1
  4102a4:	add	x19, x22, #0x1
  4102a8:	str	w0, [x20, #160]
  4102ac:	add	x0, x1, #0x1
  4102b0:	str	x0, [x20, #176]
  4102b4:	strb	w21, [x1]
  4102b8:	ldrb	w21, [x22, #1]
  4102bc:	ldr	w0, [x20, #160]
  4102c0:	cbz	w0, 41048c <ferror@plt+0xdaec>
  4102c4:	ldr	x1, [x20, #176]
  4102c8:	sub	w0, w0, #0x1
  4102cc:	add	x22, x19, #0x1
  4102d0:	str	w0, [x20, #160]
  4102d4:	add	x0, x1, #0x1
  4102d8:	str	x0, [x20, #176]
  4102dc:	strb	w21, [x1]
  4102e0:	ldrb	w21, [x19, #1]
  4102e4:	ldr	w0, [x20, #160]
  4102e8:	cbz	w0, 410578 <ferror@plt+0xdbd8>
  4102ec:	ldr	x1, [x20, #176]
  4102f0:	sub	w0, w0, #0x1
  4102f4:	str	w0, [x20, #160]
  4102f8:	add	x0, x1, #0x1
  4102fc:	str	x0, [x20, #176]
  410300:	strb	w21, [x1]
  410304:	ldrb	w19, [x22, #1]
  410308:	ldr	w0, [x20, #160]
  41030c:	cbz	w0, 41045c <ferror@plt+0xdabc>
  410310:	ldr	x1, [x20, #176]
  410314:	sub	w0, w0, #0x1
  410318:	str	w0, [x20, #160]
  41031c:	add	x0, x1, #0x1
  410320:	str	x0, [x20, #176]
  410324:	strb	w19, [x1]
  410328:	b	40fec8 <ferror@plt+0xd528>
  41032c:	ldr	w0, [x20, #160]
  410330:	cbz	w0, 4106c0 <ferror@plt+0xdd20>
  410334:	ldr	x1, [x20, #176]
  410338:	sub	w0, w0, #0x1
  41033c:	mov	w2, #0x23                  	// #35
  410340:	str	w0, [x20, #160]
  410344:	add	x3, x1, #0x1
  410348:	str	x3, [x20, #176]
  41034c:	strb	w2, [x1]
  410350:	cbz	w0, 410790 <ferror@plt+0xddf0>
  410354:	ldr	x1, [x20, #176]
  410358:	sub	w0, w0, #0x1
  41035c:	mov	w2, #0x6c                  	// #108
  410360:	str	w0, [x20, #160]
  410364:	add	x3, x1, #0x1
  410368:	str	x3, [x20, #176]
  41036c:	strb	w2, [x1]
  410370:	cbz	w0, 41075c <ferror@plt+0xddbc>
  410374:	ldr	x1, [x20, #176]
  410378:	sub	w0, w0, #0x1
  41037c:	mov	w2, #0x69                  	// #105
  410380:	str	w0, [x20, #160]
  410384:	add	x3, x1, #0x1
  410388:	str	x3, [x20, #176]
  41038c:	strb	w2, [x1]
  410390:	cbz	w0, 410728 <ferror@plt+0xdd88>
  410394:	ldr	x1, [x20, #176]
  410398:	sub	w0, w0, #0x1
  41039c:	mov	w2, #0x6e                  	// #110
  4103a0:	str	w0, [x20, #160]
  4103a4:	add	x3, x1, #0x1
  4103a8:	str	x3, [x20, #176]
  4103ac:	strb	w2, [x1]
  4103b0:	cbz	w0, 4106f4 <ferror@plt+0xdd54>
  4103b4:	ldr	x1, [x20, #176]
  4103b8:	sub	w0, w0, #0x1
  4103bc:	mov	w2, #0x65                  	// #101
  4103c0:	str	w0, [x20, #160]
  4103c4:	add	x3, x1, #0x1
  4103c8:	str	x3, [x20, #176]
  4103cc:	strb	w2, [x1]
  4103d0:	cbz	w0, 410654 <ferror@plt+0xdcb4>
  4103d4:	ldr	x1, [x20, #176]
  4103d8:	sub	w0, w0, #0x1
  4103dc:	mov	w2, #0x20                  	// #32
  4103e0:	str	w0, [x20, #160]
  4103e4:	add	x0, x1, #0x1
  4103e8:	str	x0, [x20, #176]
  4103ec:	strb	w2, [x1]
  4103f0:	b	40fff4 <ferror@plt+0xd654>
  4103f4:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4103f8:	ldr	x0, [x23, #3552]
  4103fc:	ldrb	w0, [x0]
  410400:	cbz	w0, 410034 <ferror@plt+0xd694>
  410404:	cbz	x1, 410878 <ferror@plt+0xded8>
  410408:	mov	w0, #0x20                  	// #32
  41040c:	bl	402430 <putc@plt>
  410410:	ldr	x1, [x20, #168]
  410414:	cbz	x1, 410a1c <ferror@plt+0xe07c>
  410418:	mov	w0, #0x22                  	// #34
  41041c:	bl	402430 <putc@plt>
  410420:	ldr	x24, [x23, #3552]
  410424:	ldr	x1, [x20, #168]
  410428:	ldrb	w23, [x24]
  41042c:	cbz	w23, 410448 <ferror@plt+0xdaa8>
  410430:	cbz	x1, 410508 <ferror@plt+0xdb68>
  410434:	mov	w0, w23
  410438:	bl	402430 <putc@plt>
  41043c:	ldr	x1, [x20, #168]
  410440:	ldrb	w23, [x24, #1]!
  410444:	cbnz	w23, 410430 <ferror@plt+0xda90>
  410448:	cbz	x1, 4108c0 <ferror@plt+0xdf20>
  41044c:	mov	w0, #0x22                  	// #34
  410450:	bl	402430 <putc@plt>
  410454:	ldr	x1, [x20, #168]
  410458:	b	410034 <ferror@plt+0xd694>
  41045c:	mov	w0, #0x1                   	// #1
  410460:	bl	40f3c0 <ferror@plt+0xca20>
  410464:	ldr	x1, [x20, #168]
  410468:	cbnz	x1, 40ff4c <ferror@plt+0xd5ac>
  41046c:	ldr	x1, [x20, #176]
  410470:	ldr	w0, [x20, #160]
  410474:	add	x2, x1, #0x1
  410478:	str	x2, [x20, #176]
  41047c:	sub	w0, w0, #0x1
  410480:	strb	w19, [x1]
  410484:	str	w0, [x20, #160]
  410488:	b	40fec8 <ferror@plt+0xd528>
  41048c:	mov	w0, #0x1                   	// #1
  410490:	bl	40f3c0 <ferror@plt+0xca20>
  410494:	ldr	x1, [x20, #168]
  410498:	cbnz	x1, 40ff1c <ferror@plt+0xd57c>
  41049c:	ldr	x1, [x20, #176]
  4104a0:	add	x22, x19, #0x1
  4104a4:	ldr	w0, [x20, #160]
  4104a8:	add	x2, x1, #0x1
  4104ac:	str	x2, [x20, #176]
  4104b0:	strb	w21, [x1]
  4104b4:	sub	w0, w0, #0x1
  4104b8:	str	w0, [x20, #160]
  4104bc:	ldrb	w21, [x19, #1]
  4104c0:	b	4102e4 <ferror@plt+0xd944>
  4104c4:	ldr	w0, [x20, #160]
  4104c8:	sub	w2, w0, #0x1
  4104cc:	cbz	w0, 4104e8 <ferror@plt+0xdb48>
  4104d0:	ldr	x0, [x20, #176]
  4104d4:	str	w2, [x20, #160]
  4104d8:	add	x2, x0, #0x1
  4104dc:	str	x2, [x20, #176]
  4104e0:	strb	w23, [x0]
  4104e4:	b	410020 <ferror@plt+0xd680>
  4104e8:	mov	w0, #0x1                   	// #1
  4104ec:	bl	40f3c0 <ferror@plt+0xca20>
  4104f0:	ldr	x1, [x20, #168]
  4104f4:	mov	w0, w23
  4104f8:	cbz	x1, 41052c <ferror@plt+0xdb8c>
  4104fc:	bl	402430 <putc@plt>
  410500:	ldr	x1, [x20, #168]
  410504:	b	410020 <ferror@plt+0xd680>
  410508:	ldr	w0, [x20, #160]
  41050c:	sub	w2, w0, #0x1
  410510:	cbz	w0, 4105d4 <ferror@plt+0xdc34>
  410514:	ldr	x0, [x20, #176]
  410518:	str	w2, [x20, #160]
  41051c:	add	x2, x0, #0x1
  410520:	str	x2, [x20, #176]
  410524:	strb	w23, [x0]
  410528:	b	410440 <ferror@plt+0xdaa0>
  41052c:	ldr	x2, [x20, #176]
  410530:	ldr	w0, [x20, #160]
  410534:	add	x3, x2, #0x1
  410538:	str	x3, [x20, #176]
  41053c:	sub	w0, w0, #0x1
  410540:	strb	w23, [x2]
  410544:	str	w0, [x20, #160]
  410548:	b	410020 <ferror@plt+0xd680>
  41054c:	ldr	w0, [x20, #160]
  410550:	cbz	w0, 410688 <ferror@plt+0xdce8>
  410554:	ldr	x1, [x20, #176]
  410558:	sub	w0, w0, #0x1
  41055c:	mov	w2, #0xa                   	// #10
  410560:	str	w0, [x20, #160]
  410564:	add	x0, x1, #0x1
  410568:	str	x0, [x20, #176]
  41056c:	strb	w2, [x1]
  410570:	str	w22, [x25, #3608]
  410574:	b	410044 <ferror@plt+0xd6a4>
  410578:	mov	w0, #0x1                   	// #1
  41057c:	bl	40f3c0 <ferror@plt+0xca20>
  410580:	ldr	x1, [x20, #168]
  410584:	cbz	x1, 4107c4 <ferror@plt+0xde24>
  410588:	mov	w0, w21
  41058c:	bl	402430 <putc@plt>
  410590:	mov	x19, x22
  410594:	ldr	x1, [x20, #168]
  410598:	b	40ff40 <ferror@plt+0xd5a0>
  41059c:	ldr	x1, [x20, #168]
  4105a0:	b	4101c0 <ferror@plt+0xd820>
  4105a4:	ldr	x1, [x20, #168]
  4105a8:	b	40ff2c <ferror@plt+0xd58c>
  4105ac:	ldr	x1, [x20, #168]
  4105b0:	b	410178 <ferror@plt+0xd7d8>
  4105b4:	mov	w1, w21
  4105b8:	mov	x0, x19
  4105bc:	ldp	x19, x20, [sp, #16]
  4105c0:	ldp	x21, x22, [sp, #32]
  4105c4:	ldp	x29, x30, [sp], #80
  4105c8:	b	40f8b0 <ferror@plt+0xcf10>
  4105cc:	ldr	x1, [x20, #168]
  4105d0:	b	4101a8 <ferror@plt+0xd808>
  4105d4:	mov	w0, #0x1                   	// #1
  4105d8:	bl	40f3c0 <ferror@plt+0xca20>
  4105dc:	ldr	x1, [x20, #168]
  4105e0:	mov	w0, w23
  4105e4:	cbz	x1, 410828 <ferror@plt+0xde88>
  4105e8:	bl	402430 <putc@plt>
  4105ec:	ldr	x1, [x20, #168]
  4105f0:	b	410440 <ferror@plt+0xdaa0>
  4105f4:	mov	w0, #0x1                   	// #1
  4105f8:	bl	40f3c0 <ferror@plt+0xca20>
  4105fc:	ldr	x1, [x20, #168]
  410600:	cbz	x1, 410848 <ferror@plt+0xdea8>
  410604:	mov	w0, w21
  410608:	mov	x19, x22
  41060c:	bl	402430 <putc@plt>
  410610:	add	x19, x19, #0x1
  410614:	ldr	x1, [x20, #168]
  410618:	b	40ff14 <ferror@plt+0xd574>
  41061c:	mov	w0, #0x1                   	// #1
  410620:	bl	40f3c0 <ferror@plt+0xca20>
  410624:	ldr	x1, [x20, #168]
  410628:	cbnz	x1, 4101b0 <ferror@plt+0xd810>
  41062c:	ldr	x1, [x20, #176]
  410630:	add	x22, x19, #0x1
  410634:	ldr	w0, [x20, #160]
  410638:	add	x2, x1, #0x1
  41063c:	str	x2, [x20, #176]
  410640:	strb	w21, [x1]
  410644:	sub	w0, w0, #0x1
  410648:	str	w0, [x20, #160]
  41064c:	ldrb	w21, [x19, #1]
  410650:	b	410294 <ferror@plt+0xd8f4>
  410654:	mov	w0, #0x1                   	// #1
  410658:	bl	40f3c0 <ferror@plt+0xca20>
  41065c:	ldr	x1, [x20, #168]
  410660:	cbnz	x1, 40ffec <ferror@plt+0xd64c>
  410664:	ldr	x1, [x20, #176]
  410668:	mov	w2, #0x20                  	// #32
  41066c:	ldr	w0, [x20, #160]
  410670:	add	x3, x1, #0x1
  410674:	str	x3, [x20, #176]
  410678:	sub	w0, w0, #0x1
  41067c:	strb	w2, [x1]
  410680:	str	w0, [x20, #160]
  410684:	b	40fff4 <ferror@plt+0xd654>
  410688:	mov	w0, #0x1                   	// #1
  41068c:	bl	40f3c0 <ferror@plt+0xca20>
  410690:	ldr	x1, [x20, #168]
  410694:	cbnz	x1, 410038 <ferror@plt+0xd698>
  410698:	ldr	x1, [x20, #176]
  41069c:	mov	w2, #0xa                   	// #10
  4106a0:	ldr	w0, [x20, #160]
  4106a4:	add	x3, x1, #0x1
  4106a8:	str	x3, [x20, #176]
  4106ac:	strb	w2, [x1]
  4106b0:	sub	w0, w0, #0x1
  4106b4:	str	w22, [x25, #3608]
  4106b8:	str	w0, [x20, #160]
  4106bc:	b	410044 <ferror@plt+0xd6a4>
  4106c0:	mov	w0, #0x1                   	// #1
  4106c4:	bl	40f3c0 <ferror@plt+0xca20>
  4106c8:	ldr	x1, [x20, #168]
  4106cc:	cbnz	x1, 40ff9c <ferror@plt+0xd5fc>
  4106d0:	ldr	x1, [x20, #176]
  4106d4:	mov	w2, #0x23                  	// #35
  4106d8:	ldr	w0, [x20, #160]
  4106dc:	add	x3, x1, #0x1
  4106e0:	str	x3, [x20, #176]
  4106e4:	sub	w0, w0, #0x1
  4106e8:	strb	w2, [x1]
  4106ec:	str	w0, [x20, #160]
  4106f0:	b	410350 <ferror@plt+0xd9b0>
  4106f4:	mov	w0, #0x1                   	// #1
  4106f8:	bl	40f3c0 <ferror@plt+0xca20>
  4106fc:	ldr	x1, [x20, #168]
  410700:	cbnz	x1, 40ffdc <ferror@plt+0xd63c>
  410704:	ldr	x1, [x20, #176]
  410708:	mov	w2, #0x65                  	// #101
  41070c:	ldr	w0, [x20, #160]
  410710:	add	x3, x1, #0x1
  410714:	str	x3, [x20, #176]
  410718:	sub	w0, w0, #0x1
  41071c:	strb	w2, [x1]
  410720:	str	w0, [x20, #160]
  410724:	b	4103d0 <ferror@plt+0xda30>
  410728:	mov	w0, #0x1                   	// #1
  41072c:	bl	40f3c0 <ferror@plt+0xca20>
  410730:	ldr	x1, [x20, #168]
  410734:	cbnz	x1, 40ffcc <ferror@plt+0xd62c>
  410738:	ldr	x1, [x20, #176]
  41073c:	mov	w2, #0x6e                  	// #110
  410740:	ldr	w0, [x20, #160]
  410744:	add	x3, x1, #0x1
  410748:	str	x3, [x20, #176]
  41074c:	sub	w0, w0, #0x1
  410750:	strb	w2, [x1]
  410754:	str	w0, [x20, #160]
  410758:	b	4103b0 <ferror@plt+0xda10>
  41075c:	mov	w0, #0x1                   	// #1
  410760:	bl	40f3c0 <ferror@plt+0xca20>
  410764:	ldr	x1, [x20, #168]
  410768:	cbnz	x1, 40ffbc <ferror@plt+0xd61c>
  41076c:	ldr	x1, [x20, #176]
  410770:	mov	w2, #0x69                  	// #105
  410774:	ldr	w0, [x20, #160]
  410778:	add	x3, x1, #0x1
  41077c:	str	x3, [x20, #176]
  410780:	sub	w0, w0, #0x1
  410784:	strb	w2, [x1]
  410788:	str	w0, [x20, #160]
  41078c:	b	410390 <ferror@plt+0xd9f0>
  410790:	mov	w0, #0x1                   	// #1
  410794:	bl	40f3c0 <ferror@plt+0xca20>
  410798:	ldr	x1, [x20, #168]
  41079c:	cbnz	x1, 40ffac <ferror@plt+0xd60c>
  4107a0:	ldr	x1, [x20, #176]
  4107a4:	mov	w2, #0x6c                  	// #108
  4107a8:	ldr	w0, [x20, #160]
  4107ac:	add	x3, x1, #0x1
  4107b0:	str	x3, [x20, #176]
  4107b4:	sub	w0, w0, #0x1
  4107b8:	strb	w2, [x1]
  4107bc:	str	w0, [x20, #160]
  4107c0:	b	410370 <ferror@plt+0xd9d0>
  4107c4:	ldr	x1, [x20, #176]
  4107c8:	ldr	w0, [x20, #160]
  4107cc:	add	x2, x1, #0x1
  4107d0:	str	x2, [x20, #176]
  4107d4:	strb	w21, [x1]
  4107d8:	sub	w0, w0, #0x1
  4107dc:	str	w0, [x20, #160]
  4107e0:	ldrb	w19, [x22, #1]
  4107e4:	b	410308 <ferror@plt+0xd968>
  4107e8:	mov	w0, #0x1                   	// #1
  4107ec:	bl	40f3c0 <ferror@plt+0xca20>
  4107f0:	ldr	x1, [x20, #168]
  4107f4:	cbnz	x1, 410198 <ferror@plt+0xd7f8>
  4107f8:	ldr	x1, [x20, #176]
  4107fc:	add	x19, x19, #0x1
  410800:	ldr	w0, [x20, #160]
  410804:	add	x2, x1, #0x1
  410808:	str	x2, [x20, #176]
  41080c:	strb	w21, [x1]
  410810:	sub	w0, w0, #0x1
  410814:	str	w0, [x20, #160]
  410818:	ldrb	w21, [x19]
  41081c:	b	41026c <ferror@plt+0xd8cc>
  410820:	mov	x22, x19
  410824:	b	410294 <ferror@plt+0xd8f4>
  410828:	ldr	x2, [x20, #176]
  41082c:	ldr	w0, [x20, #160]
  410830:	add	x3, x2, #0x1
  410834:	str	x3, [x20, #176]
  410838:	sub	w0, w0, #0x1
  41083c:	strb	w23, [x2]
  410840:	str	w0, [x20, #160]
  410844:	b	410440 <ferror@plt+0xdaa0>
  410848:	ldr	x1, [x20, #176]
  41084c:	add	x19, x22, #0x1
  410850:	ldr	w0, [x20, #160]
  410854:	add	x2, x1, #0x1
  410858:	str	x2, [x20, #176]
  41085c:	strb	w21, [x1]
  410860:	sub	w0, w0, #0x1
  410864:	str	w0, [x20, #160]
  410868:	ldrb	w21, [x22, #1]
  41086c:	b	4102bc <ferror@plt+0xd91c>
  410870:	mov	x22, x19
  410874:	b	4102e4 <ferror@plt+0xd944>
  410878:	ldr	w0, [x20, #160]
  41087c:	cbz	w0, 4109e8 <ferror@plt+0xe048>
  410880:	ldr	x1, [x20, #176]
  410884:	sub	w0, w0, #0x1
  410888:	mov	w2, #0x20                  	// #32
  41088c:	str	w0, [x20, #160]
  410890:	add	x3, x1, #0x1
  410894:	str	x3, [x20, #176]
  410898:	strb	w2, [x1]
  41089c:	cbz	w0, 4109b4 <ferror@plt+0xe014>
  4108a0:	ldr	x1, [x20, #176]
  4108a4:	sub	w0, w0, #0x1
  4108a8:	mov	w2, #0x22                  	// #34
  4108ac:	str	w0, [x20, #160]
  4108b0:	add	x0, x1, #0x1
  4108b4:	str	x0, [x20, #176]
  4108b8:	strb	w2, [x1]
  4108bc:	b	410420 <ferror@plt+0xda80>
  4108c0:	ldr	w0, [x20, #160]
  4108c4:	cbz	w0, 410980 <ferror@plt+0xdfe0>
  4108c8:	ldr	x1, [x20, #176]
  4108cc:	sub	w0, w0, #0x1
  4108d0:	mov	w2, #0x22                  	// #34
  4108d4:	str	w0, [x20, #160]
  4108d8:	add	x3, x1, #0x1
  4108dc:	str	x3, [x20, #176]
  4108e0:	strb	w2, [x1]
  4108e4:	b	410550 <ferror@plt+0xdbb0>
  4108e8:	mov	w0, #0x1                   	// #1
  4108ec:	bl	40f3c0 <ferror@plt+0xca20>
  4108f0:	ldr	x1, [x20, #168]
  4108f4:	cbnz	x1, 410180 <ferror@plt+0xd7e0>
  4108f8:	ldr	x1, [x20, #176]
  4108fc:	add	x19, x19, #0x1
  410900:	ldr	w0, [x20, #160]
  410904:	add	x2, x1, #0x1
  410908:	str	x2, [x20, #176]
  41090c:	strb	w21, [x1]
  410910:	sub	w0, w0, #0x1
  410914:	str	w0, [x20, #160]
  410918:	ldrb	w21, [x19]
  41091c:	b	410244 <ferror@plt+0xd8a4>
  410920:	ldr	w0, [x20, #160]
  410924:	b	410370 <ferror@plt+0xd9d0>
  410928:	ldr	w0, [x20, #160]
  41092c:	b	410350 <ferror@plt+0xd9b0>
  410930:	ldr	w0, [x20, #160]
  410934:	b	4103b0 <ferror@plt+0xda10>
  410938:	ldr	w0, [x20, #160]
  41093c:	b	410390 <ferror@plt+0xd9f0>
  410940:	ldr	w0, [x20, #160]
  410944:	b	4103d0 <ferror@plt+0xda30>
  410948:	mov	w0, #0x1                   	// #1
  41094c:	bl	40f3c0 <ferror@plt+0xca20>
  410950:	ldr	x1, [x20, #168]
  410954:	cbnz	x1, 410168 <ferror@plt+0xd7c8>
  410958:	ldr	x1, [x20, #176]
  41095c:	add	x19, x19, #0x1
  410960:	ldr	w0, [x20, #160]
  410964:	add	x2, x1, #0x1
  410968:	str	x2, [x20, #176]
  41096c:	strb	w21, [x1]
  410970:	sub	w0, w0, #0x1
  410974:	str	w0, [x20, #160]
  410978:	ldrb	w21, [x19]
  41097c:	b	41021c <ferror@plt+0xd87c>
  410980:	mov	w0, #0x1                   	// #1
  410984:	bl	40f3c0 <ferror@plt+0xca20>
  410988:	ldr	x1, [x20, #168]
  41098c:	cbnz	x1, 41044c <ferror@plt+0xdaac>
  410990:	ldr	x1, [x20, #176]
  410994:	mov	w2, #0x22                  	// #34
  410998:	ldr	w0, [x20, #160]
  41099c:	add	x3, x1, #0x1
  4109a0:	str	x3, [x20, #176]
  4109a4:	sub	w0, w0, #0x1
  4109a8:	strb	w2, [x1]
  4109ac:	str	w0, [x20, #160]
  4109b0:	b	410550 <ferror@plt+0xdbb0>
  4109b4:	mov	w0, #0x1                   	// #1
  4109b8:	bl	40f3c0 <ferror@plt+0xca20>
  4109bc:	ldr	x1, [x20, #168]
  4109c0:	cbnz	x1, 410418 <ferror@plt+0xda78>
  4109c4:	ldr	x1, [x20, #176]
  4109c8:	mov	w2, #0x22                  	// #34
  4109cc:	ldr	w0, [x20, #160]
  4109d0:	add	x3, x1, #0x1
  4109d4:	str	x3, [x20, #176]
  4109d8:	sub	w0, w0, #0x1
  4109dc:	strb	w2, [x1]
  4109e0:	str	w0, [x20, #160]
  4109e4:	b	410420 <ferror@plt+0xda80>
  4109e8:	mov	w0, #0x1                   	// #1
  4109ec:	bl	40f3c0 <ferror@plt+0xca20>
  4109f0:	ldr	x1, [x20, #168]
  4109f4:	cbnz	x1, 410408 <ferror@plt+0xda68>
  4109f8:	ldr	x1, [x20, #176]
  4109fc:	mov	w2, #0x20                  	// #32
  410a00:	ldr	w0, [x20, #160]
  410a04:	add	x3, x1, #0x1
  410a08:	str	x3, [x20, #176]
  410a0c:	sub	w0, w0, #0x1
  410a10:	strb	w2, [x1]
  410a14:	str	w0, [x20, #160]
  410a18:	b	41089c <ferror@plt+0xdefc>
  410a1c:	ldr	w0, [x20, #160]
  410a20:	b	41089c <ferror@plt+0xdefc>
  410a24:	nop
  410a28:	stp	x29, x30, [sp, #-80]!
  410a2c:	mov	x29, sp
  410a30:	stp	x19, x20, [sp, #16]
  410a34:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  410a38:	ldr	w1, [x20, #3612]
  410a3c:	str	w0, [sp, #60]
  410a40:	cmp	w1, w0
  410a44:	b.eq	410abc <ferror@plt+0xe11c>  // b.none
  410a48:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  410a4c:	add	x19, x19, #0xa50
  410a50:	ldr	x1, [x19, #152]
  410a54:	cbz	x1, 410a78 <ferror@plt+0xe0d8>
  410a58:	ldr	w2, [x1, #12]
  410a5c:	cbz	w2, 410b2c <ferror@plt+0xe18c>
  410a60:	ldr	w3, [x19, #160]
  410a64:	sub	w2, w2, w3
  410a68:	str	w2, [x1, #16]
  410a6c:	str	xzr, [x19, #152]
  410a70:	str	wzr, [x19, #160]
  410a74:	stp	xzr, xzr, [x19, #168]
  410a78:	cmp	w0, #0x0
  410a7c:	str	w0, [x20, #3612]
  410a80:	b.lt	410abc <ferror@plt+0xe11c>  // b.tstop
  410a84:	b.ne	410ac8 <ferror@plt+0xe128>  // b.any
  410a88:	add	x20, x19, #0xb8
  410a8c:	ldr	w0, [x20, #12]
  410a90:	str	x20, [x19, #152]
  410a94:	ldr	x1, [x20]
  410a98:	cbz	w0, 410b48 <ferror@plt+0xe1a8>
  410a9c:	ldr	w2, [x20, #16]
  410aa0:	sub	w0, w0, w2
  410aa4:	str	w0, [x19, #160]
  410aa8:	add	x1, x1, w2, sxtw
  410aac:	str	x1, [x19, #176]
  410ab0:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  410ab4:	mov	w1, #0xffffffff            	// #-1
  410ab8:	str	w1, [x0, #3608]
  410abc:	ldp	x19, x20, [sp, #16]
  410ac0:	ldp	x29, x30, [sp], #80
  410ac4:	ret
  410ac8:	ldr	x0, [x19, #112]
  410acc:	add	x3, sp, #0x48
  410ad0:	add	x2, sp, #0x3c
  410ad4:	adrp	x1, 40e000 <ferror@plt+0xb660>
  410ad8:	add	x1, x1, #0xf68
  410adc:	ldr	x4, [x0]
  410ae0:	ldr	x4, [x4, #24]
  410ae4:	blr	x4
  410ae8:	tst	w0, #0xff
  410aec:	b.ne	410b54 <ferror@plt+0xe1b4>  // b.any
  410af0:	ldr	x20, [x19, #208]
  410af4:	cbz	x20, 410c04 <ferror@plt+0xe264>
  410af8:	ldr	x0, [x20]
  410afc:	str	x0, [x19, #208]
  410b00:	ldr	x0, [x19, #112]
  410b04:	mov	x1, x20
  410b08:	ldr	w2, [sp, #60]
  410b0c:	str	w2, [x20, #8]
  410b10:	ldr	x2, [x0]
  410b14:	str	xzr, [x20]
  410b18:	ldr	x2, [x2, #32]
  410b1c:	blr	x2
  410b20:	tbz	w0, #31, 410a8c <ferror@plt+0xe0ec>
  410b24:	stp	x21, x22, [sp, #32]
  410b28:	bl	41cbf8 <ferror@plt+0x1a258>
  410b2c:	stp	x21, x22, [sp, #32]
  410b30:	ldr	w2, [x1, #16]
  410b34:	ldr	x21, [x1]
  410b38:	cbz	x21, 410b90 <ferror@plt+0xe1f0>
  410b3c:	cbnz	w2, 410bc8 <ferror@plt+0xe228>
  410b40:	ldp	x21, x22, [sp, #32]
  410b44:	b	410a6c <ferror@plt+0xe0cc>
  410b48:	cbz	x1, 410b6c <ferror@plt+0xe1cc>
  410b4c:	str	x1, [x19, #168]
  410b50:	b	410ab0 <ferror@plt+0xe110>
  410b54:	ldr	x20, [sp, #72]
  410b58:	ldr	w0, [sp, #60]
  410b5c:	ldr	w1, [x20, #8]
  410b60:	cmp	w1, w0
  410b64:	b.ne	410af0 <ferror@plt+0xe150>  // b.any
  410b68:	b	410a8c <ferror@plt+0xe0ec>
  410b6c:	ldr	w0, [x20, #16]
  410b70:	cbz	w0, 410b4c <ferror@plt+0xe1ac>
  410b74:	ldr	w0, [x20, #8]
  410b78:	bl	40f1f0 <ferror@plt+0xc850>
  410b7c:	str	x0, [x20]
  410b80:	ldr	x1, [x19, #152]
  410b84:	ldr	x1, [x1]
  410b88:	str	x1, [x19, #168]
  410b8c:	b	410ab0 <ferror@plt+0xe110>
  410b90:	cbnz	w2, 410d0c <ferror@plt+0xe36c>
  410b94:	ldr	x0, [x19, #112]
  410b98:	ldr	x2, [x0]
  410b9c:	ldr	x2, [x2, #40]
  410ba0:	blr	x2
  410ba4:	tst	w0, #0xff
  410ba8:	b.eq	410ce8 <ferror@plt+0xe348>  // b.none
  410bac:	ldr	x0, [x19, #152]
  410bb0:	ldr	x1, [x19, #208]
  410bb4:	str	x0, [x19, #208]
  410bb8:	ldp	x21, x22, [sp, #32]
  410bbc:	str	x1, [x0]
  410bc0:	ldr	w0, [sp, #60]
  410bc4:	b	410a6c <ferror@plt+0xe0cc>
  410bc8:	ldr	w22, [x1, #8]
  410bcc:	str	xzr, [x1]
  410bd0:	ldr	w1, [x19, #120]
  410bd4:	cmp	w22, w1
  410bd8:	b.eq	410b40 <ferror@plt+0xe1a0>  // b.none
  410bdc:	ldr	w2, [x19, #140]
  410be0:	cmp	w22, w2
  410be4:	b.eq	410b40 <ferror@plt+0xe1a0>  // b.none
  410be8:	ldrb	w3, [x19, #136]
  410bec:	cbz	w3, 410c84 <ferror@plt+0xe2e4>
  410bf0:	cbnz	w1, 410c98 <ferror@plt+0xe2f8>
  410bf4:	str	w22, [x19, #120]
  410bf8:	str	x21, [x19, #128]
  410bfc:	ldp	x21, x22, [sp, #32]
  410c00:	b	410a6c <ferror@plt+0xe0cc>
  410c04:	ldp	x1, x4, [x19, #48]
  410c08:	add	x20, x19, #0x18
  410c0c:	sub	x0, x4, x1
  410c10:	cmp	x0, #0x17
  410c14:	b.ls	410c60 <ferror@plt+0xe2c0>  // b.plast
  410c18:	ldr	x20, [x19, #40]
  410c1c:	add	x1, x1, #0x18
  410c20:	cmp	x1, x20
  410c24:	b.eq	410c74 <ferror@plt+0xe2d4>  // b.none
  410c28:	ldr	x0, [x19, #72]
  410c2c:	ldr	x2, [x19, #32]
  410c30:	add	x1, x1, x0
  410c34:	bic	x1, x1, x0
  410c38:	str	x1, [x19, #48]
  410c3c:	sub	x0, x1, x2
  410c40:	sub	x2, x4, x2
  410c44:	cmp	x0, x2
  410c48:	b.ls	410c54 <ferror@plt+0xe2b4>  // b.plast
  410c4c:	mov	x1, x4
  410c50:	str	x4, [x19, #48]
  410c54:	str	x1, [x19, #40]
  410c58:	stur	xzr, [x20, #12]
  410c5c:	b	410b00 <ferror@plt+0xe160>
  410c60:	mov	x1, #0x18                  	// #24
  410c64:	mov	x0, x20
  410c68:	bl	41d788 <_obstack_newchunk@@Base>
  410c6c:	ldp	x1, x4, [x19, #48]
  410c70:	b	410c18 <ferror@plt+0xe278>
  410c74:	ldrb	w2, [x19, #104]
  410c78:	orr	w2, w2, #0x2
  410c7c:	strb	w2, [x19, #104]
  410c80:	b	410c28 <ferror@plt+0xe288>
  410c84:	cbnz	w2, 410cd4 <ferror@plt+0xe334>
  410c88:	str	w22, [x19, #140]
  410c8c:	str	x21, [x19, #144]
  410c90:	ldp	x21, x22, [sp, #32]
  410c94:	b	410a6c <ferror@plt+0xe0cc>
  410c98:	ldr	x0, [x19, #128]
  410c9c:	bl	4152b0 <ferror@plt+0x12910>
  410ca0:	str	w22, [x19, #120]
  410ca4:	str	x21, [x19, #128]
  410ca8:	cbz	w0, 410cc8 <ferror@plt+0xe328>
  410cac:	bl	402920 <__errno_location@plt>
  410cb0:	mov	x1, x0
  410cb4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  410cb8:	mov	w0, #0x0                   	// #0
  410cbc:	add	x2, x2, #0xa08
  410cc0:	ldr	w1, [x1]
  410cc4:	bl	4033d0 <ferror@plt+0xa30>
  410cc8:	ldr	w0, [sp, #60]
  410ccc:	ldp	x21, x22, [sp, #32]
  410cd0:	b	410a6c <ferror@plt+0xe0cc>
  410cd4:	ldr	x0, [x19, #144]
  410cd8:	bl	4152b0 <ferror@plt+0x12910>
  410cdc:	str	w22, [x19, #140]
  410ce0:	str	x21, [x19, #144]
  410ce4:	b	410ca8 <ferror@plt+0xe308>
  410ce8:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  410cec:	add	x3, x3, #0xb30
  410cf0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  410cf4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  410cf8:	add	x3, x3, #0x28
  410cfc:	add	x1, x1, #0x8c0
  410d00:	add	x0, x0, #0xad8
  410d04:	mov	w2, #0x2df                 	// #735
  410d08:	bl	402910 <__assert_fail@plt>
  410d0c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  410d10:	add	x3, x3, #0xb30
  410d14:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  410d18:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  410d1c:	add	x3, x3, #0x28
  410d20:	add	x1, x1, #0x8c0
  410d24:	add	x0, x0, #0xac0
  410d28:	mov	w2, #0x2dd                 	// #733
  410d2c:	bl	402910 <__assert_fail@plt>
  410d30:	stp	x29, x30, [sp, #-80]!
  410d34:	mov	x29, sp
  410d38:	stp	x19, x20, [sp, #16]
  410d3c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  410d40:	add	x20, x20, #0xa50
  410d44:	stp	x21, x22, [sp, #32]
  410d48:	mov	x21, x0
  410d4c:	ldr	x0, [x20, #152]
  410d50:	cbz	x0, 410e14 <ferror@plt+0xe474>
  410d54:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  410d58:	add	x22, x22, #0xb30
  410d5c:	stp	x23, x24, [sp, #48]
  410d60:	adrp	x24, 420000 <_obstack_memory_used@@Base+0x2640>
  410d64:	add	x24, x24, #0xaa0
  410d68:	stp	x25, x26, [sp, #64]
  410d6c:	adrp	x25, 420000 <_obstack_memory_used@@Base+0x2640>
  410d70:	add	x25, x25, #0xa38
  410d74:	nop
  410d78:	mov	x3, x21
  410d7c:	mov	x2, #0x4000                	// #16384
  410d80:	mov	x1, #0x1                   	// #1
  410d84:	mov	x0, x22
  410d88:	bl	4027b0 <fread@plt>
  410d8c:	mov	x19, x0
  410d90:	mov	x0, x21
  410d94:	bl	4029a0 <ferror@plt>
  410d98:	cbnz	w0, 410df0 <ferror@plt+0xe450>
  410d9c:	cbz	x19, 410e0c <ferror@plt+0xe46c>
  410da0:	ldr	x0, [x20, #152]
  410da4:	mov	w23, w19
  410da8:	cmp	x0, #0x0
  410dac:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  410db0:	b.eq	410d78 <ferror@plt+0xe3d8>  // b.none
  410db4:	ldr	x3, [x20, #168]
  410db8:	cbz	x3, 410e24 <ferror@plt+0xe484>
  410dbc:	sxtw	x1, w23
  410dc0:	mov	x0, x22
  410dc4:	mov	x2, #0x1                   	// #1
  410dc8:	bl	402830 <fwrite@plt>
  410dcc:	cmp	w0, #0x1
  410dd0:	b.eq	410d78 <ferror@plt+0xe3d8>  // b.none
  410dd4:	bl	402920 <__errno_location@plt>
  410dd8:	mov	x1, x0
  410ddc:	mov	x2, x25
  410de0:	mov	w0, #0x1                   	// #1
  410de4:	ldr	w1, [x1]
  410de8:	bl	4033d0 <ferror@plt+0xa30>
  410dec:	b	410d78 <ferror@plt+0xe3d8>
  410df0:	bl	402920 <__errno_location@plt>
  410df4:	mov	x1, x0
  410df8:	mov	x2, x24
  410dfc:	mov	w0, #0x1                   	// #1
  410e00:	ldr	w1, [x1]
  410e04:	bl	4033d0 <ferror@plt+0xa30>
  410e08:	cbnz	x19, 410da0 <ferror@plt+0xe400>
  410e0c:	ldp	x23, x24, [sp, #48]
  410e10:	ldp	x25, x26, [sp, #64]
  410e14:	ldp	x19, x20, [sp, #16]
  410e18:	ldp	x21, x22, [sp, #32]
  410e1c:	ldp	x29, x30, [sp], #80
  410e20:	ret
  410e24:	ldr	w26, [x20, #160]
  410e28:	cmp	w19, w26
  410e2c:	b.gt	410e5c <ferror@plt+0xe4bc>
  410e30:	ldr	x3, [x20, #176]
  410e34:	sxtw	x19, w23
  410e38:	mov	x2, x19
  410e3c:	mov	x1, x22
  410e40:	mov	x0, x3
  410e44:	sub	w23, w26, w23
  410e48:	bl	402350 <memcpy@plt>
  410e4c:	add	x3, x0, x19
  410e50:	str	w23, [x20, #160]
  410e54:	str	x3, [x20, #176]
  410e58:	b	410d78 <ferror@plt+0xe3d8>
  410e5c:	mov	w0, w19
  410e60:	bl	40f3c0 <ferror@plt+0xca20>
  410e64:	ldr	x3, [x20, #168]
  410e68:	cbnz	x3, 410dbc <ferror@plt+0xe41c>
  410e6c:	ldr	w26, [x20, #160]
  410e70:	b	410e30 <ferror@plt+0xe490>
  410e74:	nop
  410e78:	stp	x29, x30, [sp, #-48]!
  410e7c:	cmp	w0, #0x0
  410e80:	mov	x29, sp
  410e84:	str	w0, [sp, #28]
  410e88:	b.le	410edc <ferror@plt+0xe53c>
  410e8c:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  410e90:	ldr	w1, [x1, #3612]
  410e94:	cmp	w0, w1
  410e98:	b.eq	410edc <ferror@plt+0xe53c>  // b.none
  410e9c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  410ea0:	add	x3, sp, #0x28
  410ea4:	add	x2, sp, #0x1c
  410ea8:	adrp	x1, 40e000 <ferror@plt+0xb660>
  410eac:	ldr	x0, [x0, #2752]
  410eb0:	add	x1, x1, #0xf68
  410eb4:	ldr	x4, [x0]
  410eb8:	ldr	x4, [x4, #24]
  410ebc:	blr	x4
  410ec0:	tst	w0, #0xff
  410ec4:	b.eq	410edc <ferror@plt+0xe53c>  // b.none
  410ec8:	ldr	x0, [sp, #40]
  410ecc:	ldr	w1, [sp, #28]
  410ed0:	ldr	w2, [x0, #8]
  410ed4:	cmp	w2, w1
  410ed8:	b.eq	410ee4 <ferror@plt+0xe544>  // b.none
  410edc:	ldp	x29, x30, [sp], #48
  410ee0:	ret
  410ee4:	bl	40f9a0 <ferror@plt+0xd000>
  410ee8:	b	410edc <ferror@plt+0xe53c>
  410eec:	nop
  410ef0:	stp	x29, x30, [sp, #-96]!
  410ef4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  410ef8:	mov	x29, sp
  410efc:	ldr	x0, [x0, #2752]
  410f00:	add	x8, sp, #0x28
  410f04:	ldr	x1, [x0]
  410f08:	ldr	x1, [x1, #56]
  410f0c:	str	x19, [sp, #16]
  410f10:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  410f14:	add	x19, x19, #0xe1c
  410f18:	blr	x1
  410f1c:	b	410f34 <ferror@plt+0xe594>
  410f20:	ldr	x0, [sp, #32]
  410f24:	ldr	w1, [x19]
  410f28:	ldr	w2, [x0, #8]
  410f2c:	cmp	w2, w1
  410f30:	b.ne	410f6c <ferror@plt+0xe5cc>  // b.any
  410f34:	ldr	x2, [sp, #40]
  410f38:	add	x1, sp, #0x20
  410f3c:	add	x0, sp, #0x28
  410f40:	ldr	x2, [x2, #64]
  410f44:	blr	x2
  410f48:	tst	w0, #0xff
  410f4c:	b.ne	410f20 <ferror@plt+0xe580>  // b.any
  410f50:	ldr	x1, [sp, #40]
  410f54:	add	x0, sp, #0x28
  410f58:	ldr	x1, [x1, #72]
  410f5c:	blr	x1
  410f60:	ldr	x19, [sp, #16]
  410f64:	ldp	x29, x30, [sp], #96
  410f68:	ret
  410f6c:	bl	40f9a0 <ferror@plt+0xd000>
  410f70:	b	410f34 <ferror@plt+0xe594>
  410f74:	nop
  410f78:	stp	x29, x30, [sp, #-256]!
  410f7c:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  410f80:	mov	x29, sp
  410f84:	stp	x19, x20, [sp, #16]
  410f88:	mov	x20, x0
  410f8c:	mov	w0, #0x0                   	// #0
  410f90:	stp	x21, x22, [sp, #32]
  410f94:	adrp	x22, 420000 <_obstack_memory_used@@Base+0x2640>
  410f98:	add	x22, x22, #0xb18
  410f9c:	stp	x23, x24, [sp, #48]
  410fa0:	adrp	x23, 420000 <_obstack_memory_used@@Base+0x2640>
  410fa4:	ldr	w24, [x1, #3612]
  410fa8:	bl	410a28 <ferror@plt+0xe088>
  410fac:	add	x23, x23, #0xae0
  410fb0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  410fb4:	add	x1, x1, #0xa50
  410fb8:	add	x8, sp, #0x80
  410fbc:	mov	w21, #0x0                   	// #0
  410fc0:	ldr	x0, [x1, #112]
  410fc4:	str	x20, [x1, #168]
  410fc8:	ldr	x1, [x0]
  410fcc:	ldr	x1, [x1, #56]
  410fd0:	blr	x1
  410fd4:	ldp	x6, x7, [sp, #128]
  410fd8:	stp	x6, x7, [sp, #72]
  410fdc:	ldp	x4, x5, [sp, #144]
  410fe0:	stp	x4, x5, [sp, #88]
  410fe4:	ldp	x2, x3, [sp, #160]
  410fe8:	stp	x2, x3, [sp, #104]
  410fec:	ldr	x0, [sp, #176]
  410ff0:	str	x0, [sp, #120]
  410ff4:	ldr	x2, [sp, #72]
  410ff8:	add	x1, sp, #0x40
  410ffc:	add	x0, sp, #0x48
  411000:	ldr	x2, [x2, #64]
  411004:	blr	x2
  411008:	tst	w0, #0xff
  41100c:	b.eq	411060 <ferror@plt+0xe6c0>  // b.none
  411010:	ldr	x19, [sp, #64]
  411014:	ldp	w0, w3, [x19, #12]
  411018:	cbz	w0, 4110a0 <ferror@plt+0xe700>
  41101c:	ldr	w2, [x19, #8]
  411020:	mov	x1, x23
  411024:	mov	x0, x20
  411028:	bl	41cdb0 <ferror@plt+0x1a410>
  41102c:	mov	x0, x19
  411030:	bl	40f9a0 <ferror@plt+0xd000>
  411034:	mov	x1, x20
  411038:	mov	w0, #0xa                   	// #10
  41103c:	bl	402430 <putc@plt>
  411040:	ldr	w21, [x19, #8]
  411044:	ldr	x2, [sp, #72]
  411048:	add	x1, sp, #0x40
  41104c:	add	x0, sp, #0x48
  411050:	ldr	x2, [x2, #64]
  411054:	blr	x2
  411058:	tst	w0, #0xff
  41105c:	b.ne	411010 <ferror@plt+0xe670>  // b.any
  411060:	ldr	x1, [sp, #72]
  411064:	add	x0, sp, #0x48
  411068:	ldr	x1, [x1, #72]
  41106c:	blr	x1
  411070:	cmp	w21, w24
  411074:	b.eq	41108c <ferror@plt+0xe6ec>  // b.none
  411078:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  41107c:	mov	w2, w24
  411080:	mov	x0, x20
  411084:	add	x1, x1, #0xb28
  411088:	bl	41cdb0 <ferror@plt+0x1a410>
  41108c:	ldp	x19, x20, [sp, #16]
  411090:	ldp	x21, x22, [sp, #32]
  411094:	ldp	x23, x24, [sp, #48]
  411098:	ldp	x29, x30, [sp], #256
  41109c:	ret
  4110a0:	cbz	w3, 410ff4 <ferror@plt+0xe654>
  4110a4:	ldr	w0, [x19, #8]
  4110a8:	mov	w1, #0x1                   	// #1
  4110ac:	bl	40f1f0 <ferror@plt+0xc850>
  4110b0:	str	x0, [x19]
  4110b4:	bl	4024c0 <fileno@plt>
  4110b8:	mov	w1, w0
  4110bc:	add	x2, sp, #0x80
  4110c0:	mov	w0, #0x0                   	// #0
  4110c4:	bl	4028a0 <__fxstat@plt>
  4110c8:	tbnz	w0, #31, 4110e8 <ferror@plt+0xe748>
  4110cc:	ldr	x3, [sp, #176]
  4110d0:	tbnz	x3, #63, 41110c <ferror@plt+0xe76c>
  4110d4:	ldr	w2, [x19, #8]
  4110d8:	mov	x1, x22
  4110dc:	mov	x0, x20
  4110e0:	bl	41cdb0 <ferror@plt+0x1a410>
  4110e4:	b	41102c <ferror@plt+0xe68c>
  4110e8:	bl	402920 <__errno_location@plt>
  4110ec:	mov	x1, x0
  4110f0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4110f4:	mov	w0, #0x1                   	// #1
  4110f8:	add	x2, x2, #0xae8
  4110fc:	ldr	w1, [x1]
  411100:	bl	4033d0 <ferror@plt+0xa30>
  411104:	ldr	x3, [sp, #176]
  411108:	tbz	x3, #63, 4110d4 <ferror@plt+0xe734>
  41110c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  411110:	mov	w1, #0x0                   	// #0
  411114:	add	x2, x2, #0xb00
  411118:	mov	w0, #0x1                   	// #1
  41111c:	bl	4033d0 <ferror@plt+0xa30>
  411120:	ldr	x3, [sp, #176]
  411124:	b	4110d4 <ferror@plt+0xe734>
  411128:	stp	x29, x30, [sp, #-160]!
  41112c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  411130:	add	x1, x1, #0x688
  411134:	mov	x29, sp
  411138:	stp	x19, x20, [sp, #16]
  41113c:	bl	415ef0 <ferror@plt+0x13550>
  411140:	mov	x19, x0
  411144:	cbz	x0, 411184 <ferror@plt+0xe7e4>
  411148:	bl	4024c0 <fileno@plt>
  41114c:	mov	w20, w0
  411150:	mov	w1, w0
  411154:	add	x2, sp, #0x20
  411158:	mov	w0, #0x0                   	// #0
  41115c:	bl	4028a0 <__fxstat@plt>
  411160:	cbnz	w0, 411174 <ferror@plt+0xe7d4>
  411164:	ldr	w0, [sp, #48]
  411168:	and	w0, w0, #0xf000
  41116c:	cmp	w0, #0x4, lsl #12
  411170:	b.eq	4111c8 <ferror@plt+0xe828>  // b.none
  411174:	mov	w0, w20
  411178:	mov	w1, #0x1                   	// #1
  41117c:	bl	415358 <ferror@plt+0x129b8>
  411180:	cbnz	w0, 411194 <ferror@plt+0xe7f4>
  411184:	mov	x0, x19
  411188:	ldp	x19, x20, [sp, #16]
  41118c:	ldp	x29, x30, [sp], #160
  411190:	ret
  411194:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  411198:	ldr	w20, [x0, #1676]
  41119c:	bl	402920 <__errno_location@plt>
  4111a0:	mov	x1, x0
  4111a4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4111a8:	mov	w0, w20
  4111ac:	add	x2, x2, #0xb68
  4111b0:	ldr	w1, [x1]
  4111b4:	bl	4033d0 <ferror@plt+0xa30>
  4111b8:	mov	x0, x19
  4111bc:	ldp	x19, x20, [sp, #16]
  4111c0:	ldp	x29, x30, [sp], #160
  4111c4:	ret
  4111c8:	mov	x0, x19
  4111cc:	bl	41d200 <ferror@plt+0x1a860>
  4111d0:	bl	402920 <__errno_location@plt>
  4111d4:	mov	x19, #0x0                   	// #0
  4111d8:	mov	w1, #0x15                  	// #21
  4111dc:	str	w1, [x0]
  4111e0:	b	411184 <ferror@plt+0xe7e4>
  4111e4:	nop
  4111e8:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0x3ba8>
  4111ec:	add	x0, x1, #0xb30
  4111f0:	str	xzr, [x1, #2864]
  4111f4:	str	xzr, [x0, #8]
  4111f8:	str	wzr, [x0, #16]
  4111fc:	ret
  411200:	stp	x29, x30, [sp, #-80]!
  411204:	mov	x29, sp
  411208:	stp	x23, x24, [sp, #48]
  41120c:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  411210:	ldr	w0, [x24, #1680]
  411214:	cbz	w0, 411224 <ferror@plt+0xe884>
  411218:	ldp	x23, x24, [sp, #48]
  41121c:	ldp	x29, x30, [sp], #80
  411220:	ret
  411224:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  411228:	add	x0, x0, #0xba0
  41122c:	bl	402930 <getenv@plt>
  411230:	cbz	x0, 411218 <ferror@plt+0xe878>
  411234:	stp	x19, x20, [sp, #16]
  411238:	adrp	x23, 43c000 <__progname@@GLIBC_2.17+0x3ba8>
  41123c:	add	x23, x23, #0xb30
  411240:	stp	x21, x22, [sp, #32]
  411244:	stp	x25, x26, [sp, #64]
  411248:	bl	41cbb8 <ferror@plt+0x1a218>
  41124c:	ldr	w19, [x24, #1680]
  411250:	adrp	x25, 420000 <_obstack_memory_used@@Base+0x2640>
  411254:	mov	x26, x0
  411258:	mov	x21, x0
  41125c:	add	x25, x25, #0xb98
  411260:	mov	x0, x21
  411264:	mov	w1, #0x3a                  	// #58
  411268:	bl	402810 <strchr@plt>
  41126c:	mov	x20, x0
  411270:	cbz	x0, 4112fc <ferror@plt+0xe95c>
  411274:	mov	x22, x0
  411278:	strb	wzr, [x22], #1
  41127c:	cbnz	w19, 411308 <ferror@plt+0xe968>
  411280:	ldrb	w1, [x21]
  411284:	mov	x0, #0x18                  	// #24
  411288:	cmp	w1, #0x0
  41128c:	csel	x21, x25, x21, eq  // eq = none
  411290:	bl	41ca30 <ferror@plt+0x1a090>
  411294:	mov	x19, x0
  411298:	mov	x0, x21
  41129c:	str	xzr, [x19]
  4112a0:	bl	402390 <strlen@plt>
  4112a4:	mov	x1, x0
  4112a8:	str	w1, [x19, #16]
  4112ac:	mov	x0, x21
  4112b0:	bl	41cbb8 <ferror@plt+0x1a218>
  4112b4:	str	x0, [x19, #8]
  4112b8:	ldr	w1, [x23, #16]
  4112bc:	ldr	w0, [x19, #16]
  4112c0:	cmp	w0, w1
  4112c4:	b.le	4112cc <ferror@plt+0xe92c>
  4112c8:	str	w0, [x23, #16]
  4112cc:	ldr	x0, [x23, #8]
  4112d0:	cbz	x0, 411310 <ferror@plt+0xe970>
  4112d4:	str	x19, [x0]
  4112d8:	str	x19, [x23, #8]
  4112dc:	cbz	x20, 411318 <ferror@plt+0xe978>
  4112e0:	mov	x21, x22
  4112e4:	mov	w1, #0x3a                  	// #58
  4112e8:	mov	x0, x21
  4112ec:	ldr	w19, [x24, #1680]
  4112f0:	bl	402810 <strchr@plt>
  4112f4:	mov	x20, x0
  4112f8:	cbnz	x0, 411274 <ferror@plt+0xe8d4>
  4112fc:	cbnz	w19, 411318 <ferror@plt+0xe978>
  411300:	mov	x22, #0x1                   	// #1
  411304:	b	411280 <ferror@plt+0xe8e0>
  411308:	mov	x21, x22
  41130c:	b	411260 <ferror@plt+0xe8c0>
  411310:	str	x19, [x23]
  411314:	b	4112d8 <ferror@plt+0xe938>
  411318:	mov	x0, x26
  41131c:	ldp	x19, x20, [sp, #16]
  411320:	ldp	x21, x22, [sp, #32]
  411324:	ldp	x23, x24, [sp, #48]
  411328:	ldp	x25, x26, [sp, #64]
  41132c:	ldp	x29, x30, [sp], #80
  411330:	b	4027c0 <free@plt>
  411334:	nop
  411338:	stp	x29, x30, [sp, #-32]!
  41133c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  411340:	mov	x29, sp
  411344:	stp	x19, x20, [sp, #16]
  411348:	mov	x19, x0
  41134c:	ldr	w0, [x1, #1680]
  411350:	cbnz	w0, 4113c0 <ferror@plt+0xea20>
  411354:	ldrb	w2, [x19]
  411358:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  41135c:	add	x1, x1, #0xb98
  411360:	mov	x0, #0x18                  	// #24
  411364:	cmp	w2, #0x0
  411368:	csel	x19, x1, x19, eq  // eq = none
  41136c:	bl	41ca30 <ferror@plt+0x1a090>
  411370:	mov	x20, x0
  411374:	mov	x0, x19
  411378:	str	xzr, [x20]
  41137c:	bl	402390 <strlen@plt>
  411380:	mov	x1, x0
  411384:	mov	x0, x19
  411388:	str	w1, [x20, #16]
  41138c:	bl	41cbb8 <ferror@plt+0x1a218>
  411390:	str	x0, [x20, #8]
  411394:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0x3ba8>
  411398:	add	x1, x2, #0xb30
  41139c:	ldr	w0, [x20, #16]
  4113a0:	ldr	w3, [x1, #16]
  4113a4:	cmp	w0, w3
  4113a8:	b.le	4113b0 <ferror@plt+0xea10>
  4113ac:	str	w0, [x1, #16]
  4113b0:	ldr	x0, [x1, #8]
  4113b4:	cbz	x0, 4113cc <ferror@plt+0xea2c>
  4113b8:	str	x20, [x0]
  4113bc:	str	x20, [x1, #8]
  4113c0:	ldp	x19, x20, [sp, #16]
  4113c4:	ldp	x29, x30, [sp], #32
  4113c8:	ret
  4113cc:	str	x20, [x2, #2864]
  4113d0:	str	x20, [x1, #8]
  4113d4:	b	4113c0 <ferror@plt+0xea20>
  4113d8:	stp	x29, x30, [sp, #-80]!
  4113dc:	mov	x29, sp
  4113e0:	stp	x21, x22, [sp, #32]
  4113e4:	mov	x22, x0
  4113e8:	stp	x23, x24, [sp, #48]
  4113ec:	mov	x23, x1
  4113f0:	cbz	x1, 4113f8 <ferror@plt+0xea58>
  4113f4:	str	xzr, [x1]
  4113f8:	ldrb	w0, [x22]
  4113fc:	cbz	w0, 4114f8 <ferror@plt+0xeb58>
  411400:	mov	x0, x22
  411404:	bl	411128 <ferror@plt+0xe788>
  411408:	mov	x24, x0
  41140c:	cbz	x0, 411434 <ferror@plt+0xea94>
  411410:	cbz	x23, 411420 <ferror@plt+0xea80>
  411414:	mov	x0, x22
  411418:	bl	41cbb8 <ferror@plt+0x1a218>
  41141c:	str	x0, [x23]
  411420:	mov	x0, x24
  411424:	ldp	x21, x22, [sp, #32]
  411428:	ldp	x23, x24, [sp, #48]
  41142c:	ldp	x29, x30, [sp], #80
  411430:	ret
  411434:	ldrb	w0, [x22]
  411438:	cmp	w0, #0x2f
  41143c:	b.eq	411420 <ferror@plt+0xea80>  // b.none
  411440:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  411444:	ldr	w0, [x0, #1680]
  411448:	cbnz	w0, 411420 <ferror@plt+0xea80>
  41144c:	stp	x19, x20, [sp, #16]
  411450:	stp	x25, x26, [sp, #64]
  411454:	bl	402920 <__errno_location@plt>
  411458:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0x3ba8>
  41145c:	ldr	w26, [x0]
  411460:	mov	x25, x0
  411464:	ldr	x20, [x1, #2864]
  411468:	cbnz	x20, 41147c <ferror@plt+0xeadc>
  41146c:	b	41151c <ferror@plt+0xeb7c>
  411470:	bl	4027c0 <free@plt>
  411474:	ldr	x20, [x20]
  411478:	cbz	x20, 41151c <ferror@plt+0xeb7c>
  41147c:	ldr	x0, [x20, #8]
  411480:	mov	x1, x22
  411484:	mov	x2, #0x0                   	// #0
  411488:	bl	415dd8 <ferror@plt+0x13438>
  41148c:	mov	x19, x0
  411490:	bl	411128 <ferror@plt+0xe788>
  411494:	mov	x21, x0
  411498:	mov	x0, x19
  41149c:	cbz	x21, 411470 <ferror@plt+0xead0>
  4114a0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4114a4:	ldr	w0, [x0, #1692]
  4114a8:	tbz	w0, #6, 4114e0 <ferror@plt+0xeb40>
  4114ac:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  4114b0:	ldr	x0, [x20, #2080]
  4114b4:	cbz	x0, 4114e0 <ferror@plt+0xeb40>
  4114b8:	bl	409918 <ferror@plt+0x6f78>
  4114bc:	ldr	x0, [x20, #2080]
  4114c0:	mov	x2, x22
  4114c4:	mov	x3, x19
  4114c8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  4114cc:	add	x1, x1, #0xba8
  4114d0:	bl	41cdb0 <ferror@plt+0x1a410>
  4114d4:	ldr	x1, [x20, #2080]
  4114d8:	mov	w0, #0xa                   	// #10
  4114dc:	bl	402430 <putc@plt>
  4114e0:	cbz	x23, 41153c <ferror@plt+0xeb9c>
  4114e4:	mov	x24, x21
  4114e8:	ldp	x25, x26, [sp, #64]
  4114ec:	str	x19, [x23]
  4114f0:	ldp	x19, x20, [sp, #16]
  4114f4:	b	411420 <ferror@plt+0xea80>
  4114f8:	bl	402920 <__errno_location@plt>
  4114fc:	mov	x24, #0x0                   	// #0
  411500:	mov	w1, #0x2                   	// #2
  411504:	str	w1, [x0]
  411508:	mov	x0, x24
  41150c:	ldp	x21, x22, [sp, #32]
  411510:	ldp	x23, x24, [sp, #48]
  411514:	ldp	x29, x30, [sp], #80
  411518:	ret
  41151c:	ldp	x19, x20, [sp, #16]
  411520:	str	w26, [x25]
  411524:	mov	x0, x24
  411528:	ldp	x21, x22, [sp, #32]
  41152c:	ldp	x23, x24, [sp, #48]
  411530:	ldp	x25, x26, [sp, #64]
  411534:	ldp	x29, x30, [sp], #80
  411538:	ret
  41153c:	mov	x0, x19
  411540:	mov	x24, x21
  411544:	bl	4027c0 <free@plt>
  411548:	ldp	x19, x20, [sp, #16]
  41154c:	ldp	x25, x26, [sp, #64]
  411550:	b	411420 <ferror@plt+0xea80>
  411554:	nop
  411558:	stp	x29, x30, [sp, #-32]!
  41155c:	mov	x29, sp
  411560:	str	x19, [sp, #16]
  411564:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x1a640>
  411568:	ldr	x1, [x19, #856]
  41156c:	cmp	xzr, x1, lsr #61
  411570:	cset	x2, ne  // ne = any
  411574:	tbnz	x1, #60, 4115b4 <ferror@plt+0xec14>
  411578:	cbnz	x2, 4115b4 <ferror@plt+0xec14>
  41157c:	lsl	x0, x1, #3
  411580:	bl	41ca30 <ferror@plt+0x1a090>
  411584:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  411588:	ldr	x2, [x19, #856]
  41158c:	str	x0, [x1, #3616]
  411590:	cbz	x2, 4115a8 <ferror@plt+0xec08>
  411594:	ldr	x19, [sp, #16]
  411598:	lsl	x2, x2, #3
  41159c:	ldp	x29, x30, [sp], #32
  4115a0:	mov	w1, #0x0                   	// #0
  4115a4:	b	4025c0 <memset@plt>
  4115a8:	ldr	x19, [sp, #16]
  4115ac:	ldp	x29, x30, [sp], #32
  4115b0:	ret
  4115b4:	bl	41cbf8 <ferror@plt+0x1a258>
  4115b8:	stp	x29, x30, [sp, #-32]!
  4115bc:	mov	x29, sp
  4115c0:	str	x19, [sp, #16]
  4115c4:	mov	x19, x0
  4115c8:	ldr	w0, [x0, #12]
  4115cc:	cmp	w0, #0x0
  4115d0:	b.le	4115ec <ferror@plt+0xec4c>
  4115d4:	ldrb	w0, [x19, #8]
  4115d8:	orr	w0, w0, #0x10
  4115dc:	strb	w0, [x19, #8]
  4115e0:	ldr	x19, [sp, #16]
  4115e4:	ldp	x29, x30, [sp], #32
  4115e8:	ret
  4115ec:	ldr	x0, [x19, #16]
  4115f0:	bl	4027c0 <free@plt>
  4115f4:	ldr	w0, [x19, #24]
  4115f8:	cmp	w0, #0x1
  4115fc:	b.eq	411610 <ferror@plt+0xec70>  // b.none
  411600:	mov	x0, x19
  411604:	ldr	x19, [sp, #16]
  411608:	ldp	x29, x30, [sp], #32
  41160c:	b	4027c0 <free@plt>
  411610:	ldr	x0, [x19, #32]
  411614:	bl	4027c0 <free@plt>
  411618:	b	411600 <ferror@plt+0xec60>
  41161c:	nop
  411620:	stp	x29, x30, [sp, #-80]!
  411624:	mov	x4, x0
  411628:	mov	x2, #0x0                   	// #0
  41162c:	mov	x29, sp
  411630:	stp	x19, x20, [sp, #16]
  411634:	stp	x21, x22, [sp, #32]
  411638:	mov	x22, x0
  41163c:	stp	x23, x24, [sp, #48]
  411640:	mov	w23, w1
  411644:	str	x25, [sp, #64]
  411648:	ldrb	w3, [x4], #1
  41164c:	cbz	w3, 411660 <ferror@plt+0xecc0>
  411650:	ror	x2, x2, #57
  411654:	add	x2, x2, w3, uxtb
  411658:	ldrb	w3, [x4], #1
  41165c:	cbnz	w3, 411650 <ferror@plt+0xecb0>
  411660:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  411664:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  411668:	ldr	x0, [x0, #856]
  41166c:	ldr	x21, [x1, #3616]
  411670:	udiv	x20, x2, x0
  411674:	msub	x20, x20, x0, x2
  411678:	add	x25, x21, x20, lsl #3
  41167c:	ldr	x19, [x21, x20, lsl #3]
  411680:	cbz	x19, 411984 <ferror@plt+0xefe4>
  411684:	mov	x24, #0x0                   	// #0
  411688:	b	41169c <ferror@plt+0xecfc>
  41168c:	ldr	x20, [x19]
  411690:	mov	x24, x19
  411694:	cbz	x20, 4117f8 <ferror@plt+0xee58>
  411698:	mov	x19, x20
  41169c:	ldr	x0, [x19, #16]
  4116a0:	mov	x1, x22
  4116a4:	bl	402760 <strcmp@plt>
  4116a8:	mov	w21, w0
  4116ac:	tbnz	w0, #31, 41168c <ferror@plt+0xecec>
  4116b0:	cbz	w23, 411958 <ferror@plt+0xefb8>
  4116b4:	mov	x20, x19
  4116b8:	cbz	x24, 4116c4 <ferror@plt+0xed24>
  4116bc:	mov	x19, x24
  4116c0:	mov	x25, x19
  4116c4:	cmp	w23, #0x3
  4116c8:	b.eq	411888 <ferror@plt+0xeee8>  // b.none
  4116cc:	b.hi	411744 <ferror@plt+0xeda4>  // b.pmore
  4116d0:	cmp	w23, #0x1
  4116d4:	b.ne	4117ec <ferror@plt+0xee4c>  // b.any
  4116d8:	cmp	w21, #0x0
  4116dc:	ccmp	x20, #0x0, #0x4, eq  // eq = none
  4116e0:	b.ne	41181c <ferror@plt+0xee7c>  // b.any
  4116e4:	mov	x0, #0x28                  	// #40
  4116e8:	bl	41ca30 <ferror@plt+0x1a090>
  4116ec:	mov	x19, x0
  4116f0:	mov	x0, x22
  4116f4:	ldrb	w1, [x19, #8]
  4116f8:	str	wzr, [x19, #24]
  4116fc:	and	w1, w1, #0xfffffffe
  411700:	strb	w1, [x19, #8]
  411704:	bl	41cbb8 <ferror@plt+0x1a218>
  411708:	str	x0, [x19, #16]
  41170c:	ldrb	w1, [x19, #8]
  411710:	str	wzr, [x19, #12]
  411714:	and	w1, w1, #0xffffffe1
  411718:	strb	w1, [x19, #8]
  41171c:	ldp	x21, x22, [sp, #32]
  411720:	ldr	x0, [x25]
  411724:	str	x0, [x19]
  411728:	str	x19, [x25]
  41172c:	mov	x0, x19
  411730:	ldp	x19, x20, [sp, #16]
  411734:	ldp	x23, x24, [sp, #48]
  411738:	ldr	x25, [sp, #64]
  41173c:	ldp	x29, x30, [sp], #80
  411740:	ret
  411744:	cmp	w23, #0x4
  411748:	b.ne	4119ec <ferror@plt+0xf04c>  // b.any
  41174c:	cmp	w21, #0x0
  411750:	cset	w0, ne  // ne = any
  411754:	cmp	x20, #0x0
  411758:	csinc	w0, w0, wzr, ne  // ne = any
  41175c:	cbnz	w0, 4117fc <ferror@plt+0xee5c>
  411760:	ldr	x0, [x20]
  411764:	ldrb	w19, [x20, #8]
  411768:	and	w19, w19, #0x1
  41176c:	cbz	x0, 4117bc <ferror@plt+0xee1c>
  411770:	ldrb	w1, [x0, #8]
  411774:	tst	x1, #0x2
  411778:	ccmp	w23, #0x4, #0x0, ne  // ne = any
  41177c:	b.ne	4117bc <ferror@plt+0xee1c>  // b.any
  411780:	and	w1, w1, #0xfffffffd
  411784:	bfxil	w1, w19, #0, #1
  411788:	mov	w19, #0x0                   	// #0
  41178c:	strb	w1, [x0, #8]
  411790:	b	4117bc <ferror@plt+0xee1c>
  411794:	ldrb	w0, [x20, #8]
  411798:	orr	w0, w0, #0x10
  41179c:	strb	w0, [x20, #8]
  4117a0:	ldr	x20, [x25]
  4117a4:	cbz	x20, 411908 <ferror@plt+0xef68>
  4117a8:	ldrb	w0, [x20, #8]
  4117ac:	tst	x0, #0x2
  4117b0:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  4117b4:	b.ne	411908 <ferror@plt+0xef68>  // b.any
  4117b8:	ldr	x0, [x20]
  4117bc:	str	x0, [x25]
  4117c0:	ldr	w0, [x20, #12]
  4117c4:	cmp	w0, #0x0
  4117c8:	b.gt	411794 <ferror@plt+0xedf4>
  4117cc:	ldr	x0, [x20, #16]
  4117d0:	bl	4027c0 <free@plt>
  4117d4:	ldr	w0, [x20, #24]
  4117d8:	cmp	w0, #0x1
  4117dc:	b.eq	411978 <ferror@plt+0xefd8>  // b.none
  4117e0:	mov	x0, x20
  4117e4:	bl	4027c0 <free@plt>
  4117e8:	b	4117a0 <ferror@plt+0xee00>
  4117ec:	cmp	w23, #0x2
  4117f0:	b.eq	41174c <ferror@plt+0xedac>  // b.none
  4117f4:	b	4119ec <ferror@plt+0xf04c>
  4117f8:	cbnz	w23, 4116c0 <ferror@plt+0xed20>
  4117fc:	mov	x19, #0x0                   	// #0
  411800:	mov	x0, x19
  411804:	ldp	x19, x20, [sp, #16]
  411808:	ldp	x21, x22, [sp, #32]
  41180c:	ldp	x23, x24, [sp, #48]
  411810:	ldr	x25, [sp, #64]
  411814:	ldp	x29, x30, [sp], #80
  411818:	ret
  41181c:	ldr	w0, [x20, #12]
  411820:	mov	x19, x20
  411824:	cmp	w0, #0x0
  411828:	b.le	411800 <ferror@plt+0xee60>
  41182c:	ldrb	w1, [x20, #8]
  411830:	mov	x0, #0x28                  	// #40
  411834:	orr	w1, w1, #0x10
  411838:	strb	w1, [x20, #8]
  41183c:	bl	41ca30 <ferror@plt+0x1a090>
  411840:	mov	x19, x0
  411844:	mov	x0, x22
  411848:	str	wzr, [x19, #24]
  41184c:	ldrb	w1, [x19, #8]
  411850:	ldrb	w2, [x20, #8]
  411854:	bfxil	w1, w2, #0, #1
  411858:	strb	w1, [x19, #8]
  41185c:	bl	41cbb8 <ferror@plt+0x1a218>
  411860:	str	x0, [x19, #16]
  411864:	ldrb	w1, [x19, #8]
  411868:	str	wzr, [x19, #12]
  41186c:	and	w1, w1, #0xffffffe1
  411870:	strb	w1, [x19, #8]
  411874:	ldr	x0, [x20]
  411878:	str	x0, [x19]
  41187c:	str	xzr, [x20]
  411880:	str	x19, [x25]
  411884:	b	411800 <ferror@plt+0xee60>
  411888:	mov	x0, #0x28                  	// #40
  41188c:	bl	41ca30 <ferror@plt+0x1a090>
  411890:	mov	x19, x0
  411894:	mov	x0, x22
  411898:	ldrb	w1, [x19, #8]
  41189c:	str	wzr, [x19, #24]
  4118a0:	and	w1, w1, #0xfffffffe
  4118a4:	strb	w1, [x19, #8]
  4118a8:	bl	41cbb8 <ferror@plt+0x1a218>
  4118ac:	str	x0, [x19, #16]
  4118b0:	ldrb	w1, [x19, #8]
  4118b4:	str	wzr, [x19, #12]
  4118b8:	and	w1, w1, #0xffffffe1
  4118bc:	strb	w1, [x19, #8]
  4118c0:	ldr	x0, [x25]
  4118c4:	str	x0, [x19]
  4118c8:	str	x19, [x25]
  4118cc:	cbnz	w21, 411800 <ferror@plt+0xee60>
  4118d0:	ldr	x1, [x19]
  4118d4:	ldp	x21, x22, [sp, #32]
  4118d8:	ldrb	w0, [x1, #8]
  4118dc:	ldp	x23, x24, [sp, #48]
  4118e0:	orr	w0, w0, #0x2
  4118e4:	strb	w0, [x1, #8]
  4118e8:	ldr	x25, [sp, #64]
  4118ec:	ldrb	w1, [x19, #8]
  4118f0:	bfxil	w1, w0, #0, #1
  4118f4:	strb	w1, [x19, #8]
  4118f8:	mov	x0, x19
  4118fc:	ldp	x19, x20, [sp, #16]
  411900:	ldp	x29, x30, [sp], #80
  411904:	ret
  411908:	cbz	w19, 4117fc <ferror@plt+0xee5c>
  41190c:	mov	x0, #0x28                  	// #40
  411910:	bl	41ca30 <ferror@plt+0x1a090>
  411914:	mov	x20, x0
  411918:	mov	x0, x22
  41191c:	mov	x19, #0x0                   	// #0
  411920:	ldrb	w1, [x20, #8]
  411924:	str	wzr, [x20, #24]
  411928:	orr	w1, w1, #0x1
  41192c:	strb	w1, [x20, #8]
  411930:	bl	41cbb8 <ferror@plt+0x1a218>
  411934:	str	x0, [x20, #16]
  411938:	ldrb	w1, [x20, #8]
  41193c:	str	wzr, [x20, #12]
  411940:	and	w1, w1, #0xffffffe1
  411944:	strb	w1, [x20, #8]
  411948:	ldr	x0, [x25]
  41194c:	str	x0, [x20]
  411950:	str	x20, [x25]
  411954:	b	411800 <ferror@plt+0xee60>
  411958:	cbnz	w0, 4117fc <ferror@plt+0xee5c>
  41195c:	mov	x0, x19
  411960:	ldp	x19, x20, [sp, #16]
  411964:	ldp	x21, x22, [sp, #32]
  411968:	ldp	x23, x24, [sp, #48]
  41196c:	ldr	x25, [sp, #64]
  411970:	ldp	x29, x30, [sp], #80
  411974:	ret
  411978:	ldr	x0, [x20, #32]
  41197c:	bl	4027c0 <free@plt>
  411980:	b	4117e0 <ferror@plt+0xee40>
  411984:	cbz	w23, 4117fc <ferror@plt+0xee5c>
  411988:	cmp	w23, #0x2
  41198c:	b.eq	4117fc <ferror@plt+0xee5c>  // b.none
  411990:	b.ls	411a08 <ferror@plt+0xf068>  // b.plast
  411994:	cmp	w23, #0x3
  411998:	b.ne	4119e4 <ferror@plt+0xf044>  // b.any
  41199c:	mov	x0, #0x28                  	// #40
  4119a0:	bl	41ca30 <ferror@plt+0x1a090>
  4119a4:	mov	x19, x0
  4119a8:	mov	x0, x22
  4119ac:	ldrb	w1, [x19, #8]
  4119b0:	str	wzr, [x19, #24]
  4119b4:	and	w1, w1, #0xfffffffe
  4119b8:	strb	w1, [x19, #8]
  4119bc:	bl	41cbb8 <ferror@plt+0x1a218>
  4119c0:	str	x0, [x19, #16]
  4119c4:	ldrb	w1, [x19, #8]
  4119c8:	str	wzr, [x19, #12]
  4119cc:	and	w1, w1, #0xffffffe1
  4119d0:	strb	w1, [x19, #8]
  4119d4:	ldr	x0, [x21, x20, lsl #3]
  4119d8:	str	x0, [x19]
  4119dc:	str	x19, [x21, x20, lsl #3]
  4119e0:	b	411800 <ferror@plt+0xee60>
  4119e4:	cmp	w23, #0x4
  4119e8:	b.eq	4117fc <ferror@plt+0xee5c>  // b.none
  4119ec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4119f0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4119f4:	add	x2, x2, #0xbc8
  4119f8:	mov	w1, #0x0                   	// #0
  4119fc:	ldr	w0, [x0, #1676]
  411a00:	bl	4033d0 <ferror@plt+0xa30>
  411a04:	bl	4026d0 <abort@plt>
  411a08:	cmp	w23, #0x1
  411a0c:	b.eq	4116e4 <ferror@plt+0xed44>  // b.none
  411a10:	b	4119ec <ferror@plt+0xf04c>
  411a14:	nop
  411a18:	stp	x29, x30, [sp, #-64]!
  411a1c:	mov	x29, sp
  411a20:	stp	x23, x24, [sp, #48]
  411a24:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  411a28:	stp	x21, x22, [sp, #32]
  411a2c:	mov	x21, x0
  411a30:	ldr	x0, [x24, #856]
  411a34:	cbz	x0, 411a88 <ferror@plt+0xf0e8>
  411a38:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0xaba8>
  411a3c:	add	x23, x23, #0xe20
  411a40:	stp	x19, x20, [sp, #16]
  411a44:	mov	x20, x1
  411a48:	mov	x22, #0x0                   	// #0
  411a4c:	nop
  411a50:	ldr	x1, [x23]
  411a54:	ldr	x19, [x1, x22, lsl #3]
  411a58:	cbz	x19, 411a78 <ferror@plt+0xf0d8>
  411a5c:	nop
  411a60:	mov	x0, x19
  411a64:	mov	x1, x20
  411a68:	ldr	x19, [x19]
  411a6c:	blr	x21
  411a70:	cbnz	x19, 411a60 <ferror@plt+0xf0c0>
  411a74:	ldr	x0, [x24, #856]
  411a78:	add	x22, x22, #0x1
  411a7c:	cmp	x22, x0
  411a80:	b.cc	411a50 <ferror@plt+0xf0b0>  // b.lo, b.ul, b.last
  411a84:	ldp	x19, x20, [sp, #16]
  411a88:	ldp	x21, x22, [sp, #32]
  411a8c:	ldp	x23, x24, [sp, #48]
  411a90:	ldp	x29, x30, [sp], #64
  411a94:	ret
  411a98:	ldr	x0, [x0, #32]
  411a9c:	ret
  411aa0:	stp	x29, x30, [sp, #-48]!
  411aa4:	mov	x29, sp
  411aa8:	stp	x19, x20, [sp, #16]
  411aac:	ldr	x19, [x0, #24]
  411ab0:	str	x21, [sp, #32]
  411ab4:	ldr	x21, [x0, #8]
  411ab8:	cbz	x19, 411ae8 <ferror@plt+0xf148>
  411abc:	mov	x20, x1
  411ac0:	cbz	x21, 411b04 <ferror@plt+0xf164>
  411ac4:	nop
  411ac8:	ldr	x0, [x19, #32]
  411acc:	mov	x1, x20
  411ad0:	blr	x21
  411ad4:	cmp	w0, #0x0
  411ad8:	b.lt	411b28 <ferror@plt+0xf188>  // b.tstop
  411adc:	b.eq	411b14 <ferror@plt+0xf174>  // b.none
  411ae0:	ldr	x19, [x19]
  411ae4:	cbnz	x19, 411ac8 <ferror@plt+0xf128>
  411ae8:	mov	w0, #0x0                   	// #0
  411aec:	ldp	x19, x20, [sp, #16]
  411af0:	ldr	x21, [sp, #32]
  411af4:	ldp	x29, x30, [sp], #48
  411af8:	ret
  411afc:	ldr	x19, [x19, #8]
  411b00:	cbz	x19, 411ae8 <ferror@plt+0xf148>
  411b04:	ldr	x0, [x19, #32]
  411b08:	cmp	x0, x20
  411b0c:	b.hi	411b34 <ferror@plt+0xf194>  // b.pmore
  411b10:	b.cc	411afc <ferror@plt+0xf15c>  // b.lo, b.ul, b.last
  411b14:	mov	w0, #0x1                   	// #1
  411b18:	ldp	x19, x20, [sp, #16]
  411b1c:	ldr	x21, [sp, #32]
  411b20:	ldp	x29, x30, [sp], #48
  411b24:	ret
  411b28:	ldr	x19, [x19, #8]
  411b2c:	cbnz	x19, 411ac8 <ferror@plt+0xf128>
  411b30:	b	411ae8 <ferror@plt+0xf148>
  411b34:	ldr	x19, [x19]
  411b38:	cbnz	x19, 411b04 <ferror@plt+0xf164>
  411b3c:	b	411ae8 <ferror@plt+0xf148>
  411b40:	stp	x29, x30, [sp, #-64]!
  411b44:	mov	x29, sp
  411b48:	stp	x19, x20, [sp, #16]
  411b4c:	ldr	x19, [x0, #24]
  411b50:	cbz	x19, 411c00 <ferror@plt+0xf260>
  411b54:	stp	x21, x22, [sp, #32]
  411b58:	mov	x22, x1
  411b5c:	stp	x23, x24, [sp, #48]
  411b60:	mov	x23, x2
  411b64:	mov	x24, x3
  411b68:	b	411b74 <ferror@plt+0xf1d4>
  411b6c:	ldr	x19, [x19, #8]
  411b70:	cbz	x19, 411bf8 <ferror@plt+0xf258>
  411b74:	ldr	x0, [x19, #32]
  411b78:	mov	x1, x23
  411b7c:	blr	x22
  411b80:	ands	w20, w0, #0xff
  411b84:	b.eq	411b6c <ferror@plt+0xf1cc>  // b.none
  411b88:	ldr	x21, [x19]
  411b8c:	cbz	x21, 411bd4 <ferror@plt+0xf234>
  411b90:	ldr	x0, [x21, #32]
  411b94:	mov	x1, x23
  411b98:	blr	x22
  411b9c:	tst	w0, #0xff
  411ba0:	ldp	x1, x0, [x21]
  411ba4:	b.eq	411bcc <ferror@plt+0xf22c>  // b.none
  411ba8:	cbz	x1, 411bd8 <ferror@plt+0xf238>
  411bac:	mov	x19, x21
  411bb0:	mov	x21, x1
  411bb4:	mov	x1, x23
  411bb8:	ldr	x0, [x21, #32]
  411bbc:	blr	x22
  411bc0:	tst	w0, #0xff
  411bc4:	ldp	x1, x0, [x21]
  411bc8:	b.ne	411ba8 <ferror@plt+0xf208>  // b.any
  411bcc:	mov	x21, x0
  411bd0:	cbnz	x0, 411b90 <ferror@plt+0xf1f0>
  411bd4:	mov	x21, x19
  411bd8:	ldr	x0, [x21, #32]
  411bdc:	ldp	x21, x22, [sp, #32]
  411be0:	str	x0, [x24]
  411be4:	mov	w0, w20
  411be8:	ldp	x19, x20, [sp, #16]
  411bec:	ldp	x23, x24, [sp, #48]
  411bf0:	ldp	x29, x30, [sp], #64
  411bf4:	ret
  411bf8:	ldp	x21, x22, [sp, #32]
  411bfc:	ldp	x23, x24, [sp, #48]
  411c00:	mov	w20, #0x0                   	// #0
  411c04:	mov	w0, w20
  411c08:	ldp	x19, x20, [sp, #16]
  411c0c:	ldp	x29, x30, [sp], #64
  411c10:	ret
  411c14:	nop
  411c18:	ldr	x1, [x0, #24]
  411c1c:	mov	x2, #0x0                   	// #0
  411c20:	ldr	x3, [x0]
  411c24:	cbz	x1, 411c34 <ferror@plt+0xf294>
  411c28:	mov	x2, x1
  411c2c:	ldr	x1, [x1]
  411c30:	cbnz	x1, 411c28 <ferror@plt+0xf288>
  411c34:	stp	x3, x0, [x8]
  411c38:	stp	x2, xzr, [x8, #24]
  411c3c:	ret
  411c40:	mov	x3, x0
  411c44:	ldp	x2, x0, [x0, #24]
  411c48:	cmp	x2, x0
  411c4c:	b.eq	411c9c <ferror@plt+0xf2fc>  // b.none
  411c50:	ldr	x0, [x2, #32]
  411c54:	str	x0, [x1]
  411c58:	ldr	x1, [x2, #8]
  411c5c:	cbz	x1, 411c84 <ferror@plt+0xf2e4>
  411c60:	mov	x2, x1
  411c64:	ldr	x1, [x1]
  411c68:	cbnz	x1, 411c60 <ferror@plt+0xf2c0>
  411c6c:	mov	w0, #0x1                   	// #1
  411c70:	str	x2, [x3, #24]
  411c74:	ret
  411c78:	ldr	x1, [x2, #8]
  411c7c:	cmp	x1, x0
  411c80:	b.ne	411c6c <ferror@plt+0xf2cc>  // b.any
  411c84:	mov	x0, x2
  411c88:	ldr	x2, [x2, #16]
  411c8c:	cbnz	x2, 411c78 <ferror@plt+0xf2d8>
  411c90:	mov	w0, #0x1                   	// #1
  411c94:	str	x2, [x3, #24]
  411c98:	b	411c74 <ferror@plt+0xf2d4>
  411c9c:	mov	w0, #0x0                   	// #0
  411ca0:	ret
  411ca4:	nop
  411ca8:	ret
  411cac:	nop
  411cb0:	stp	x29, x30, [sp, #-64]!
  411cb4:	mov	x29, sp
  411cb8:	stp	x19, x20, [sp, #16]
  411cbc:	mov	x19, x0
  411cc0:	ldr	x0, [x0]
  411cc4:	stp	x21, x22, [sp, #32]
  411cc8:	mov	x22, x1
  411ccc:	str	x23, [sp, #48]
  411cd0:	mov	x21, x2
  411cd4:	cbz	x0, 411d54 <ferror@plt+0xf3b4>
  411cd8:	mov	x1, x19
  411cdc:	bl	411cb0 <ferror@plt+0xf310>
  411ce0:	mov	w20, w0
  411ce4:	mov	w23, w0
  411ce8:	ldr	x0, [x19, #8]
  411cec:	cbz	x0, 411d64 <ferror@plt+0xf3c4>
  411cf0:	mov	x2, x21
  411cf4:	mov	x1, x19
  411cf8:	bl	411cb0 <ferror@plt+0xf310>
  411cfc:	mov	w2, w0
  411d00:	ldr	x1, [x19, #16]
  411d04:	sub	w2, w2, w23
  411d08:	cmp	x1, x22
  411d0c:	b.ne	411d70 <ferror@plt+0xf3d0>  // b.any
  411d10:	add	w1, w2, #0x1
  411d14:	cmp	w1, #0x2
  411d18:	b.hi	411d70 <ferror@plt+0xf3d0>  // b.pmore
  411d1c:	ldr	w1, [x19, #24]
  411d20:	cmp	w1, w2
  411d24:	b.ne	411d70 <ferror@plt+0xf3d0>  // b.any
  411d28:	ldr	x1, [x21]
  411d2c:	cmp	w20, w0
  411d30:	csel	w0, w20, w0, cs  // cs = hs, nlast
  411d34:	add	x1, x1, #0x1
  411d38:	add	w0, w0, #0x1
  411d3c:	ldp	x19, x20, [sp, #16]
  411d40:	ldr	x23, [sp, #48]
  411d44:	str	x1, [x21]
  411d48:	ldp	x21, x22, [sp, #32]
  411d4c:	ldp	x29, x30, [sp], #64
  411d50:	ret
  411d54:	ldr	x0, [x19, #8]
  411d58:	mov	w23, #0x0                   	// #0
  411d5c:	mov	w20, #0x0                   	// #0
  411d60:	cbnz	x0, 411cf0 <ferror@plt+0xf350>
  411d64:	mov	w2, #0x0                   	// #0
  411d68:	mov	w0, #0x0                   	// #0
  411d6c:	b	411d00 <ferror@plt+0xf360>
  411d70:	bl	4026d0 <abort@plt>
  411d74:	nop
  411d78:	add	x0, x0, #0x18
  411d7c:	mov	w9, #0x1                   	// #1
  411d80:	ldp	x6, x5, [x3]
  411d84:	ldr	w4, [x3, #24]
  411d88:	cbz	x6, 411e44 <ferror@plt+0xf4a4>
  411d8c:	cmp	x1, x5
  411d90:	neg	w7, w2
  411d94:	sub	w1, w4, w2
  411d98:	b.eq	411e54 <ferror@plt+0xf4b4>  // b.none
  411d9c:	str	w1, [x3, #24]
  411da0:	cmp	w7, w4
  411da4:	b.eq	411dc8 <ferror@plt+0xf428>  // b.none
  411da8:	tbnz	w2, #31, 411e60 <ferror@plt+0xf4c0>
  411dac:	cmp	w1, #0x0
  411db0:	mov	x1, x3
  411db4:	cset	w2, ne  // ne = any
  411db8:	cbz	w2, 411f94 <ferror@plt+0xf5f4>
  411dbc:	ldr	x3, [x1, #16]
  411dc0:	cbnz	x3, 411d80 <ferror@plt+0xf3e0>
  411dc4:	ret
  411dc8:	ldr	x7, [x3, #16]
  411dcc:	mov	x8, x0
  411dd0:	cbz	x7, 411df4 <ferror@plt+0xf454>
  411dd4:	ldr	x1, [x7]
  411dd8:	mov	x8, x7
  411ddc:	cmp	x1, x3
  411de0:	b.eq	411df4 <ferror@plt+0xf454>  // b.none
  411de4:	ldr	x1, [x7, #8]
  411de8:	cmp	x1, x3
  411dec:	b.ne	411f98 <ferror@plt+0xf5f8>  // b.any
  411df0:	add	x8, x7, #0x8
  411df4:	tbnz	w4, #31, 411e70 <ferror@plt+0xf4d0>
  411df8:	ldr	w4, [x5, #24]
  411dfc:	ldr	x1, [x5]
  411e00:	tbnz	w4, #31, 411ee0 <ferror@plt+0xf540>
  411e04:	str	x1, [x3, #8]
  411e08:	str	x3, [x5]
  411e0c:	str	x7, [x5, #16]
  411e10:	str	x5, [x3, #16]
  411e14:	cbz	x1, 411e1c <ferror@plt+0xf47c>
  411e18:	str	x3, [x1, #16]
  411e1c:	sub	w1, w4, #0x1
  411e20:	str	w1, [x5, #24]
  411e24:	sub	w4, w9, w4
  411e28:	str	w4, [x3, #24]
  411e2c:	str	x5, [x8]
  411e30:	tbnz	w2, #31, 411f84 <ferror@plt+0xf5e4>
  411e34:	ldr	w2, [x5, #24]
  411e38:	mov	x1, x5
  411e3c:	neg	w2, w2
  411e40:	b	411db8 <ferror@plt+0xf418>
  411e44:	cbnz	x5, 411d8c <ferror@plt+0xf3ec>
  411e48:	neg	w7, w4
  411e4c:	mov	w1, #0x0                   	// #0
  411e50:	b	411d9c <ferror@plt+0xf3fc>
  411e54:	add	w1, w2, w4
  411e58:	mov	w7, w2
  411e5c:	b	411d9c <ferror@plt+0xf3fc>
  411e60:	cbz	w4, 411dc4 <ferror@plt+0xf424>
  411e64:	mov	x1, x3
  411e68:	mov	w2, #0xffffffff            	// #-1
  411e6c:	b	411dbc <ferror@plt+0xf41c>
  411e70:	ldr	w4, [x6, #24]
  411e74:	ldr	x1, [x6, #8]
  411e78:	cmp	w4, #0x0
  411e7c:	b.le	411f3c <ferror@plt+0xf59c>
  411e80:	ldr	x5, [x1]
  411e84:	str	x5, [x6, #8]
  411e88:	ldr	x4, [x1, #8]
  411e8c:	str	x4, [x3]
  411e90:	stp	x6, x3, [x1]
  411e94:	str	x7, [x1, #16]
  411e98:	cbz	x5, 411ea0 <ferror@plt+0xf500>
  411e9c:	str	x6, [x5, #16]
  411ea0:	cbz	x4, 411ea8 <ferror@plt+0xf508>
  411ea4:	str	x3, [x4, #16]
  411ea8:	ldr	w4, [x1, #24]
  411eac:	str	x1, [x6, #16]
  411eb0:	cmp	w4, #0x0
  411eb4:	str	x1, [x3, #16]
  411eb8:	csetm	w4, gt
  411ebc:	str	w4, [x6, #24]
  411ec0:	ldr	w4, [x1, #24]
  411ec4:	lsr	w4, w4, #31
  411ec8:	str	w4, [x3, #24]
  411ecc:	str	wzr, [x1, #24]
  411ed0:	str	x1, [x8]
  411ed4:	tbz	w2, #31, 411dc4 <ferror@plt+0xf424>
  411ed8:	mov	w2, #0xffffffff            	// #-1
  411edc:	b	411dbc <ferror@plt+0xf41c>
  411ee0:	ldr	x6, [x1]
  411ee4:	str	x6, [x3, #8]
  411ee8:	ldr	x4, [x1, #8]
  411eec:	str	x4, [x5]
  411ef0:	stp	x3, x5, [x1]
  411ef4:	str	x7, [x1, #16]
  411ef8:	cbz	x6, 411f00 <ferror@plt+0xf560>
  411efc:	str	x3, [x6, #16]
  411f00:	cbz	x4, 411f08 <ferror@plt+0xf568>
  411f04:	str	x5, [x4, #16]
  411f08:	ldr	w4, [x1, #24]
  411f0c:	str	x1, [x3, #16]
  411f10:	cmp	w4, #0x0
  411f14:	str	x1, [x5, #16]
  411f18:	csetm	w4, gt
  411f1c:	str	w4, [x3, #24]
  411f20:	ldr	w3, [x1, #24]
  411f24:	lsr	w3, w3, #31
  411f28:	str	w3, [x5, #24]
  411f2c:	str	wzr, [x1, #24]
  411f30:	str	x1, [x8]
  411f34:	tbnz	w2, #31, 411ed8 <ferror@plt+0xf538>
  411f38:	ret
  411f3c:	str	x1, [x3]
  411f40:	stp	x3, x7, [x6, #8]
  411f44:	str	x6, [x3, #16]
  411f48:	cbz	x1, 411f50 <ferror@plt+0xf5b0>
  411f4c:	str	x3, [x1, #16]
  411f50:	add	w1, w4, #0x1
  411f54:	str	w1, [x6, #24]
  411f58:	mvn	w4, w4
  411f5c:	str	w4, [x3, #24]
  411f60:	str	x6, [x8]
  411f64:	tbnz	w2, #31, 411f74 <ferror@plt+0xf5d4>
  411f68:	ldr	w2, [x6, #24]
  411f6c:	mov	x1, x6
  411f70:	b	411db8 <ferror@plt+0xf418>
  411f74:	ldr	w2, [x6, #24]
  411f78:	mov	x1, x6
  411f7c:	sub	w2, w2, #0x1
  411f80:	b	411db8 <ferror@plt+0xf418>
  411f84:	ldr	w2, [x5, #24]
  411f88:	mov	x1, x5
  411f8c:	mvn	w2, w2
  411f90:	b	411db8 <ferror@plt+0xf418>
  411f94:	ret
  411f98:	stp	x29, x30, [sp, #-16]!
  411f9c:	mov	x29, sp
  411fa0:	bl	4026d0 <abort@plt>
  411fa4:	nop
  411fa8:	sub	sp, sp, #0x570
  411fac:	stp	x29, x30, [sp]
  411fb0:	mov	x29, sp
  411fb4:	ldr	x2, [x0, #24]
  411fb8:	stp	x21, x22, [sp, #32]
  411fbc:	add	x22, sp, #0x40
  411fc0:	mov	x21, x0
  411fc4:	mov	x1, x22
  411fc8:	stp	x19, x20, [sp, #16]
  411fcc:	str	x23, [sp, #48]
  411fd0:	mov	w23, #0x1                   	// #1
  411fd4:	cbz	x2, 411fec <ferror@plt+0xf64c>
  411fd8:	str	x2, [x1]
  411fdc:	add	x1, x1, #0x10
  411fe0:	ldr	x2, [x2]
  411fe4:	sturb	wzr, [x1, #-8]
  411fe8:	cbnz	x2, 411fd8 <ferror@plt+0xf638>
  411fec:	cmp	x1, x22
  411ff0:	b.eq	412058 <ferror@plt+0xf6b8>  // b.none
  411ff4:	ldurb	w2, [x1, #-8]
  411ff8:	sub	x19, x1, #0x10
  411ffc:	ldur	x20, [x1, #-16]
  412000:	cbz	w2, 41203c <ferror@plt+0xf69c>
  412004:	nop
  412008:	ldr	x1, [x21, #16]
  41200c:	cbz	x1, 412048 <ferror@plt+0xf6a8>
  412010:	ldr	x0, [x20, #32]
  412014:	blr	x1
  412018:	mov	x0, x20
  41201c:	bl	4027c0 <free@plt>
  412020:	cmp	x19, x22
  412024:	b.eq	412058 <ferror@plt+0xf6b8>  // b.none
  412028:	mov	x1, x19
  41202c:	sub	x19, x1, #0x10
  412030:	ldurb	w2, [x1, #-8]
  412034:	ldur	x20, [x1, #-16]
  412038:	cbnz	w2, 412008 <ferror@plt+0xf668>
  41203c:	strb	w23, [x19, #8]
  412040:	ldr	x2, [x20, #8]
  412044:	b	411fd4 <ferror@plt+0xf634>
  412048:	mov	x0, x20
  41204c:	bl	4027c0 <free@plt>
  412050:	cmp	x19, x22
  412054:	b.ne	412028 <ferror@plt+0xf688>  // b.any
  412058:	mov	x0, x21
  41205c:	ldp	x29, x30, [sp]
  412060:	ldp	x19, x20, [sp, #16]
  412064:	ldp	x21, x22, [sp, #32]
  412068:	ldr	x23, [sp, #48]
  41206c:	add	sp, sp, #0x570
  412070:	b	4027c0 <free@plt>
  412074:	nop
  412078:	stp	x29, x30, [sp, #-48]!
  41207c:	mov	x29, sp
  412080:	stp	x19, x20, [sp, #16]
  412084:	mov	x20, x1
  412088:	ldr	x19, [x0, #24]
  41208c:	stp	x21, x22, [sp, #32]
  412090:	mov	x22, x0
  412094:	cbz	x19, 41220c <ferror@plt+0xf86c>
  412098:	ldr	x21, [x0, #8]
  41209c:	cbz	x21, 412164 <ferror@plt+0xf7c4>
  4120a0:	ldr	x0, [x19, #32]
  4120a4:	mov	x1, x20
  4120a8:	blr	x21
  4120ac:	cmp	w0, #0x0
  4120b0:	b.lt	4120dc <ferror@plt+0xf73c>  // b.tstop
  4120b4:	nop
  4120b8:	b.eq	412174 <ferror@plt+0xf7d4>  // b.none
  4120bc:	ldr	x2, [x19]
  4120c0:	cbz	x2, 412190 <ferror@plt+0xf7f0>
  4120c4:	mov	x19, x2
  4120c8:	mov	x1, x20
  4120cc:	ldr	x0, [x19, #32]
  4120d0:	blr	x21
  4120d4:	cmp	w0, #0x0
  4120d8:	b.ge	4120b8 <ferror@plt+0xf718>  // b.tcont
  4120dc:	ldr	x2, [x19, #8]
  4120e0:	cbnz	x2, 4120c4 <ferror@plt+0xf724>
  4120e4:	mov	x0, #0x28                  	// #40
  4120e8:	bl	402530 <malloc@plt>
  4120ec:	cbz	x0, 41224c <ferror@plt+0xf8ac>
  4120f0:	stp	xzr, xzr, [x0]
  4120f4:	ldr	x1, [x19, #8]
  4120f8:	str	wzr, [x0, #24]
  4120fc:	str	x20, [x0, #32]
  412100:	cbz	x1, 4121bc <ferror@plt+0xf81c>
  412104:	nop
  412108:	mov	x19, x1
  41210c:	ldr	x1, [x1]
  412110:	cbnz	x1, 412108 <ferror@plt+0xf768>
  412114:	ldr	w1, [x19, #24]
  412118:	ldr	x2, [x19, #8]
  41211c:	sub	w1, w1, #0x1
  412120:	str	x0, [x19]
  412124:	str	w1, [x19, #24]
  412128:	cmp	x2, #0x0
  41212c:	str	x19, [x0, #16]
  412130:	cset	w2, eq  // eq = none
  412134:	cbnz	w2, 4121e0 <ferror@plt+0xf840>
  412138:	ldr	x1, [x22, #32]
  41213c:	mov	w0, #0x1                   	// #1
  412140:	add	x1, x1, #0x1
  412144:	str	x1, [x22, #32]
  412148:	ldp	x19, x20, [sp, #16]
  41214c:	ldp	x21, x22, [sp, #32]
  412150:	ldp	x29, x30, [sp], #48
  412154:	ret
  412158:	ldr	x1, [x19, #8]
  41215c:	cbz	x1, 4120e4 <ferror@plt+0xf744>
  412160:	mov	x19, x1
  412164:	ldr	x1, [x19, #32]
  412168:	cmp	x20, x1
  41216c:	b.cc	412188 <ferror@plt+0xf7e8>  // b.lo, b.ul, b.last
  412170:	b.hi	412158 <ferror@plt+0xf7b8>  // b.pmore
  412174:	mov	w0, #0x0                   	// #0
  412178:	ldp	x19, x20, [sp, #16]
  41217c:	ldp	x21, x22, [sp, #32]
  412180:	ldp	x29, x30, [sp], #48
  412184:	ret
  412188:	ldr	x1, [x19]
  41218c:	cbnz	x1, 412160 <ferror@plt+0xf7c0>
  412190:	mov	x0, #0x28                  	// #40
  412194:	bl	402530 <malloc@plt>
  412198:	cbz	x0, 41224c <ferror@plt+0xf8ac>
  41219c:	stp	xzr, xzr, [x0]
  4121a0:	ldr	x1, [x19]
  4121a4:	str	wzr, [x0, #24]
  4121a8:	str	x20, [x0, #32]
  4121ac:	cbz	x1, 412114 <ferror@plt+0xf774>
  4121b0:	mov	x19, x1
  4121b4:	ldr	x1, [x1, #8]
  4121b8:	cbnz	x1, 4121b0 <ferror@plt+0xf810>
  4121bc:	ldr	w1, [x19, #24]
  4121c0:	ldr	x2, [x19]
  4121c4:	add	w1, w1, #0x1
  4121c8:	str	x0, [x19, #8]
  4121cc:	str	w1, [x19, #24]
  4121d0:	cmp	x2, #0x0
  4121d4:	str	x19, [x0, #16]
  4121d8:	cset	w2, eq  // eq = none
  4121dc:	cbz	w2, 412138 <ferror@plt+0xf798>
  4121e0:	ldr	x3, [x19, #16]
  4121e4:	cbz	x3, 412138 <ferror@plt+0xf798>
  4121e8:	mov	x1, x19
  4121ec:	mov	x0, x22
  4121f0:	mov	w2, #0x1                   	// #1
  4121f4:	bl	411d78 <ferror@plt+0xf3d8>
  4121f8:	ldr	x1, [x22, #32]
  4121fc:	mov	w0, #0x1                   	// #1
  412200:	add	x1, x1, #0x1
  412204:	str	x1, [x22, #32]
  412208:	b	412148 <ferror@plt+0xf7a8>
  41220c:	mov	x0, #0x28                  	// #40
  412210:	bl	402530 <malloc@plt>
  412214:	mov	x1, x0
  412218:	cbz	x0, 41224c <ferror@plt+0xf8ac>
  41221c:	ldr	x2, [x22, #32]
  412220:	stp	xzr, xzr, [x1]
  412224:	mov	w0, #0x1                   	// #1
  412228:	add	x2, x2, #0x1
  41222c:	str	xzr, [x1, #16]
  412230:	stp	x1, x2, [x22, #24]
  412234:	str	wzr, [x1, #24]
  412238:	str	x20, [x1, #32]
  41223c:	ldp	x19, x20, [sp, #16]
  412240:	ldp	x21, x22, [sp, #32]
  412244:	ldp	x29, x30, [sp], #48
  412248:	ret
  41224c:	mov	w0, #0xffffffff            	// #-1
  412250:	b	412178 <ferror@plt+0xf7d8>
  412254:	nop
  412258:	stp	x29, x30, [sp, #-48]!
  41225c:	mov	x29, sp
  412260:	stp	x19, x20, [sp, #16]
  412264:	mov	x20, x1
  412268:	mov	x19, x2
  41226c:	str	x21, [sp, #32]
  412270:	mov	x21, x0
  412274:	mov	x0, #0x28                  	// #40
  412278:	bl	402530 <malloc@plt>
  41227c:	cbz	x0, 41228c <ferror@plt+0xf8ec>
  412280:	stp	x21, x20, [x0]
  412284:	stp	x19, xzr, [x0, #16]
  412288:	str	xzr, [x0, #32]
  41228c:	ldp	x19, x20, [sp, #16]
  412290:	ldr	x21, [sp, #32]
  412294:	ldp	x29, x30, [sp], #48
  412298:	ret
  41229c:	nop
  4122a0:	stp	x29, x30, [sp, #-48]!
  4122a4:	mov	x29, sp
  4122a8:	stp	x19, x20, [sp, #16]
  4122ac:	ldr	x19, [x0, #24]
  4122b0:	stp	x21, x22, [sp, #32]
  4122b4:	ldr	x22, [x0, #8]
  4122b8:	cbz	x19, 4122e8 <ferror@plt+0xf948>
  4122bc:	mov	x20, x0
  4122c0:	mov	x21, x1
  4122c4:	cbz	x22, 412304 <ferror@plt+0xf964>
  4122c8:	ldr	x0, [x19, #32]
  4122cc:	mov	x1, x21
  4122d0:	blr	x22
  4122d4:	cmp	w0, #0x0
  4122d8:	b.lt	4123e4 <ferror@plt+0xfa44>  // b.tstop
  4122dc:	b.eq	412314 <ferror@plt+0xf974>  // b.none
  4122e0:	ldr	x19, [x19]
  4122e4:	cbnz	x19, 4122c8 <ferror@plt+0xf928>
  4122e8:	mov	w0, #0x0                   	// #0
  4122ec:	ldp	x19, x20, [sp, #16]
  4122f0:	ldp	x21, x22, [sp, #32]
  4122f4:	ldp	x29, x30, [sp], #48
  4122f8:	ret
  4122fc:	ldr	x19, [x19, #8]
  412300:	cbz	x19, 4122e8 <ferror@plt+0xf948>
  412304:	ldr	x0, [x19, #32]
  412308:	cmp	x21, x0
  41230c:	b.cc	4123d8 <ferror@plt+0xfa38>  // b.lo, b.ul, b.last
  412310:	b.hi	4122fc <ferror@plt+0xf95c>  // b.pmore
  412314:	ldr	x4, [x19]
  412318:	ldr	x3, [x19, #16]
  41231c:	cbz	x4, 4123f0 <ferror@plt+0xfa50>
  412320:	ldr	x5, [x19, #8]
  412324:	mov	x0, x4
  412328:	cbz	x5, 41241c <ferror@plt+0xfa7c>
  41232c:	nop
  412330:	mov	x2, x0
  412334:	ldr	x0, [x0, #8]
  412338:	cbnz	x0, 412330 <ferror@plt+0xf990>
  41233c:	ldr	x0, [x2, #16]
  412340:	ldr	x1, [x2]
  412344:	cmp	x0, x19
  412348:	b.eq	412364 <ferror@plt+0xf9c4>  // b.none
  41234c:	cbz	x1, 412354 <ferror@plt+0xf9b4>
  412350:	str	x0, [x1, #16]
  412354:	str	x1, [x0, #8]
  412358:	ldr	x5, [x19, #8]
  41235c:	str	x4, [x2]
  412360:	str	x2, [x4, #16]
  412364:	ldr	w4, [x19, #24]
  412368:	str	x5, [x2, #8]
  41236c:	str	x2, [x5, #16]
  412370:	str	x3, [x2, #16]
  412374:	str	w4, [x2, #24]
  412378:	cbz	x3, 412414 <ferror@plt+0xfa74>
  41237c:	ldr	x4, [x3]
  412380:	cmp	x4, x19
  412384:	b.eq	412448 <ferror@plt+0xfaa8>  // b.none
  412388:	str	x2, [x3, #8]
  41238c:	cmp	x0, x19
  412390:	csel	x3, x0, x2, ne  // ne = any
  412394:	mov	x0, x20
  412398:	mov	w2, #0xffffffff            	// #-1
  41239c:	bl	411d78 <ferror@plt+0xf3d8>
  4123a0:	ldr	x0, [x20, #32]
  4123a4:	ldr	x1, [x20, #16]
  4123a8:	sub	x0, x0, #0x1
  4123ac:	str	x0, [x20, #32]
  4123b0:	cbz	x1, 4123bc <ferror@plt+0xfa1c>
  4123b4:	ldr	x0, [x19, #32]
  4123b8:	blr	x1
  4123bc:	mov	x0, x19
  4123c0:	bl	4027c0 <free@plt>
  4123c4:	mov	w0, #0x1                   	// #1
  4123c8:	ldp	x19, x20, [sp, #16]
  4123cc:	ldp	x21, x22, [sp, #32]
  4123d0:	ldp	x29, x30, [sp], #48
  4123d4:	ret
  4123d8:	ldr	x19, [x19]
  4123dc:	cbnz	x19, 412304 <ferror@plt+0xf964>
  4123e0:	b	4122e8 <ferror@plt+0xf948>
  4123e4:	ldr	x19, [x19, #8]
  4123e8:	cbnz	x19, 4122c8 <ferror@plt+0xf928>
  4123ec:	b	4122e8 <ferror@plt+0xf948>
  4123f0:	ldr	x1, [x19, #8]
  4123f4:	cbz	x1, 4123fc <ferror@plt+0xfa5c>
  4123f8:	str	x3, [x1, #16]
  4123fc:	cbz	x3, 412450 <ferror@plt+0xfab0>
  412400:	ldr	x0, [x3]
  412404:	cmp	x0, x19
  412408:	b.eq	412460 <ferror@plt+0xfac0>  // b.none
  41240c:	str	x1, [x3, #8]
  412410:	b	412394 <ferror@plt+0xf9f4>
  412414:	str	x2, [x20, #24]
  412418:	b	41238c <ferror@plt+0xf9ec>
  41241c:	str	x3, [x4, #16]
  412420:	cbz	x3, 412458 <ferror@plt+0xfab8>
  412424:	ldr	x0, [x3]
  412428:	cmp	x0, x19
  41242c:	b.eq	412468 <ferror@plt+0xfac8>  // b.none
  412430:	str	x4, [x3, #8]
  412434:	mov	x1, x4
  412438:	mov	x0, x20
  41243c:	mov	w2, #0xffffffff            	// #-1
  412440:	bl	411d78 <ferror@plt+0xf3d8>
  412444:	b	4123a0 <ferror@plt+0xfa00>
  412448:	str	x2, [x3]
  41244c:	b	41238c <ferror@plt+0xf9ec>
  412450:	str	x1, [x20, #24]
  412454:	b	4123a0 <ferror@plt+0xfa00>
  412458:	str	x4, [x20, #24]
  41245c:	b	4123a0 <ferror@plt+0xfa00>
  412460:	str	x1, [x3]
  412464:	b	412394 <ferror@plt+0xf9f4>
  412468:	str	x4, [x3]
  41246c:	b	412434 <ferror@plt+0xfa94>
  412470:	stp	x29, x30, [sp, #-144]!
  412474:	mov	x29, sp
  412478:	stp	x19, x20, [sp, #16]
  41247c:	mov	x19, x0
  412480:	ldr	x20, [x0, #24]
  412484:	str	xzr, [sp, #136]
  412488:	cbz	x20, 412a84 <ferror@plt+0x100e4>
  41248c:	stp	x21, x22, [sp, #32]
  412490:	ldr	x22, [x20]
  412494:	stp	x23, x24, [sp, #48]
  412498:	stp	x25, x26, [sp, #64]
  41249c:	stp	x27, x28, [sp, #80]
  4124a0:	cbz	x22, 412780 <ferror@plt+0xfde0>
  4124a4:	ldr	x23, [x22]
  4124a8:	cbz	x23, 412ae4 <ferror@plt+0x10144>
  4124ac:	ldr	x21, [x23]
  4124b0:	cbz	x21, 413180 <ferror@plt+0x107e0>
  4124b4:	ldr	x25, [x21]
  4124b8:	cbz	x25, 413f20 <ferror@plt+0x11580>
  4124bc:	ldr	x24, [x25]
  4124c0:	cbz	x24, 414030 <ferror@plt+0x11690>
  4124c4:	ldr	x0, [x24]
  4124c8:	cbz	x0, 414318 <ferror@plt+0x11978>
  4124cc:	add	x2, sp, #0x88
  4124d0:	mov	x1, x24
  4124d4:	bl	411cb0 <ferror@plt+0xf310>
  4124d8:	mov	w26, w0
  4124dc:	mov	w27, w0
  4124e0:	ldr	x0, [x24, #8]
  4124e4:	cbz	x0, 41436c <ferror@plt+0x119cc>
  4124e8:	mov	x1, x24
  4124ec:	add	x2, sp, #0x88
  4124f0:	bl	411cb0 <ferror@plt+0xf310>
  4124f4:	mov	w1, w0
  4124f8:	ldr	x2, [x24, #16]
  4124fc:	sub	w1, w1, w27
  412500:	cmp	x25, x2
  412504:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412508:	add	w2, w1, #0x1
  41250c:	cmp	w2, #0x2
  412510:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412514:	ldr	w2, [x24, #24]
  412518:	cmp	w1, w2
  41251c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412520:	cmp	w0, w26
  412524:	ldr	x2, [sp, #136]
  412528:	csel	w0, w0, w26, cs  // cs = hs, nlast
  41252c:	add	w24, w0, #0x1
  412530:	add	x2, x2, #0x1
  412534:	str	x2, [sp, #136]
  412538:	ldr	x26, [x25, #8]
  41253c:	cbz	x26, 414024 <ferror@plt+0x11684>
  412540:	ldr	x0, [x26]
  412544:	cbz	x0, 4143cc <ferror@plt+0x11a2c>
  412548:	add	x2, sp, #0x88
  41254c:	mov	x1, x26
  412550:	bl	411cb0 <ferror@plt+0xf310>
  412554:	mov	w27, w0
  412558:	mov	w28, w0
  41255c:	ldr	x0, [x26, #8]
  412560:	cbz	x0, 4143c0 <ferror@plt+0x11a20>
  412564:	mov	x1, x26
  412568:	add	x2, sp, #0x88
  41256c:	bl	411cb0 <ferror@plt+0xf310>
  412570:	mov	w1, w0
  412574:	ldr	x2, [x26, #16]
  412578:	sub	w1, w1, w28
  41257c:	cmp	x25, x2
  412580:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412584:	add	w2, w1, #0x1
  412588:	cmp	w2, #0x2
  41258c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412590:	ldr	w2, [x26, #24]
  412594:	cmp	w1, w2
  412598:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41259c:	cmp	w0, w27
  4125a0:	csel	w0, w0, w27, cs  // cs = hs, nlast
  4125a4:	ldr	x2, [sp, #136]
  4125a8:	add	w0, w0, #0x1
  4125ac:	mov	w1, w0
  4125b0:	add	x2, x2, #0x1
  4125b4:	str	x2, [sp, #136]
  4125b8:	ldr	x3, [x25, #16]
  4125bc:	sub	w1, w1, w24
  4125c0:	cmp	x21, x3
  4125c4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4125c8:	add	w3, w1, #0x1
  4125cc:	cmp	w3, #0x2
  4125d0:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4125d4:	ldr	w3, [x25, #24]
  4125d8:	cmp	w1, w3
  4125dc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4125e0:	cmp	w0, w24
  4125e4:	add	x2, x2, #0x1
  4125e8:	csel	w0, w0, w24, cs  // cs = hs, nlast
  4125ec:	str	x2, [sp, #136]
  4125f0:	add	w24, w0, #0x1
  4125f4:	ldr	x25, [x21, #8]
  4125f8:	cbz	x25, 413f88 <ferror@plt+0x115e8>
  4125fc:	ldr	x26, [x25]
  412600:	cbz	x26, 414010 <ferror@plt+0x11670>
  412604:	ldr	x0, [x26]
  412608:	cbz	x0, 414354 <ferror@plt+0x119b4>
  41260c:	add	x2, sp, #0x88
  412610:	mov	x1, x26
  412614:	bl	411cb0 <ferror@plt+0xf310>
  412618:	mov	w27, w0
  41261c:	mov	w28, w0
  412620:	ldr	x0, [x26, #8]
  412624:	cbz	x0, 414348 <ferror@plt+0x119a8>
  412628:	mov	x1, x26
  41262c:	add	x2, sp, #0x88
  412630:	bl	411cb0 <ferror@plt+0xf310>
  412634:	mov	w1, w0
  412638:	ldr	x2, [x26, #16]
  41263c:	sub	w1, w1, w28
  412640:	cmp	x25, x2
  412644:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412648:	add	w2, w1, #0x1
  41264c:	cmp	w2, #0x2
  412650:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412654:	ldr	w2, [x26, #24]
  412658:	cmp	w1, w2
  41265c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412660:	cmp	w0, w27
  412664:	ldr	x2, [sp, #136]
  412668:	csel	w0, w0, w27, cs  // cs = hs, nlast
  41266c:	add	w27, w0, #0x1
  412670:	add	x2, x2, #0x1
  412674:	str	x2, [sp, #136]
  412678:	ldr	x26, [x25, #8]
  41267c:	cbz	x26, 414018 <ferror@plt+0x11678>
  412680:	ldr	x0, [x26]
  412684:	cbz	x0, 414360 <ferror@plt+0x119c0>
  412688:	add	x2, sp, #0x88
  41268c:	mov	x1, x26
  412690:	bl	411cb0 <ferror@plt+0xf310>
  412694:	mov	w28, w0
  412698:	mov	w3, w0
  41269c:	ldr	x0, [x26, #8]
  4126a0:	cbz	x0, 4141f8 <ferror@plt+0x11858>
  4126a4:	mov	x1, x26
  4126a8:	add	x2, sp, #0x88
  4126ac:	str	w3, [sp, #104]
  4126b0:	bl	411cb0 <ferror@plt+0xf310>
  4126b4:	ldr	w3, [sp, #104]
  4126b8:	mov	w1, w0
  4126bc:	ldr	x2, [x26, #16]
  4126c0:	sub	w1, w1, w3
  4126c4:	cmp	x25, x2
  4126c8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4126cc:	add	w2, w1, #0x1
  4126d0:	cmp	w2, #0x2
  4126d4:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4126d8:	ldr	w2, [x26, #24]
  4126dc:	cmp	w1, w2
  4126e0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4126e4:	cmp	w0, w28
  4126e8:	csel	w0, w0, w28, cs  // cs = hs, nlast
  4126ec:	ldr	x2, [sp, #136]
  4126f0:	add	w0, w0, #0x1
  4126f4:	mov	w1, w0
  4126f8:	add	x2, x2, #0x1
  4126fc:	str	x2, [sp, #136]
  412700:	ldr	x3, [x25, #16]
  412704:	sub	w1, w1, w27
  412708:	cmp	x21, x3
  41270c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412710:	add	w3, w1, #0x1
  412714:	cmp	w3, #0x2
  412718:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  41271c:	ldr	w3, [x25, #24]
  412720:	cmp	w1, w3
  412724:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412728:	cmp	w0, w27
  41272c:	add	x2, x2, #0x1
  412730:	csel	w0, w0, w27, cs  // cs = hs, nlast
  412734:	str	x2, [sp, #136]
  412738:	add	w0, w0, #0x1
  41273c:	mov	w1, w0
  412740:	ldr	x3, [x21, #16]
  412744:	sub	w1, w1, w24
  412748:	cmp	x23, x3
  41274c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412750:	add	w3, w1, #0x1
  412754:	cmp	w3, #0x2
  412758:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  41275c:	ldr	w3, [x21, #24]
  412760:	cmp	w1, w3
  412764:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412768:	cmp	w0, w24
  41276c:	add	x2, x2, #0x1
  412770:	csel	w0, w0, w24, cs  // cs = hs, nlast
  412774:	str	x2, [sp, #136]
  412778:	add	w21, w0, #0x1
  41277c:	b	413188 <ferror@plt+0x107e8>
  412780:	mov	x2, #0x0                   	// #0
  412784:	mov	w21, #0x0                   	// #0
  412788:	ldr	x23, [x20, #8]
  41278c:	cbz	x23, 412aa0 <ferror@plt+0x10100>
  412790:	ldr	x24, [x23]
  412794:	cbz	x24, 412de0 <ferror@plt+0x10440>
  412798:	ldr	x22, [x24]
  41279c:	cbz	x22, 41378c <ferror@plt+0x10dec>
  4127a0:	ldr	x26, [x22]
  4127a4:	cbz	x26, 413f2c <ferror@plt+0x1158c>
  4127a8:	ldr	x25, [x26]
  4127ac:	cbz	x25, 414098 <ferror@plt+0x116f8>
  4127b0:	ldr	x0, [x25]
  4127b4:	cbz	x0, 4141b0 <ferror@plt+0x11810>
  4127b8:	add	x2, sp, #0x88
  4127bc:	mov	x1, x25
  4127c0:	bl	411cb0 <ferror@plt+0xf310>
  4127c4:	mov	w27, w0
  4127c8:	mov	w28, w0
  4127cc:	ldr	x0, [x25, #8]
  4127d0:	cbz	x0, 414174 <ferror@plt+0x117d4>
  4127d4:	mov	x1, x25
  4127d8:	add	x2, sp, #0x88
  4127dc:	bl	411cb0 <ferror@plt+0xf310>
  4127e0:	mov	w1, w0
  4127e4:	ldr	x2, [x25, #16]
  4127e8:	sub	w1, w1, w28
  4127ec:	cmp	x26, x2
  4127f0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4127f4:	add	w2, w1, #0x1
  4127f8:	cmp	w2, #0x2
  4127fc:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412800:	ldr	w2, [x25, #24]
  412804:	cmp	w1, w2
  412808:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41280c:	cmp	w0, w27
  412810:	ldr	x2, [sp, #136]
  412814:	csel	w0, w0, w27, cs  // cs = hs, nlast
  412818:	add	w25, w0, #0x1
  41281c:	add	x2, x2, #0x1
  412820:	str	x2, [sp, #136]
  412824:	ldr	x27, [x26, #8]
  412828:	cbz	x27, 41408c <ferror@plt+0x116ec>
  41282c:	ldr	x0, [x27]
  412830:	cbz	x0, 414144 <ferror@plt+0x117a4>
  412834:	add	x2, sp, #0x88
  412838:	mov	x1, x27
  41283c:	bl	411cb0 <ferror@plt+0xf310>
  412840:	mov	w28, w0
  412844:	mov	w3, w0
  412848:	ldr	x0, [x27, #8]
  41284c:	cbz	x0, 414138 <ferror@plt+0x11798>
  412850:	mov	x1, x27
  412854:	add	x2, sp, #0x88
  412858:	str	w3, [sp, #104]
  41285c:	bl	411cb0 <ferror@plt+0xf310>
  412860:	ldr	w3, [sp, #104]
  412864:	mov	w1, w0
  412868:	ldr	x2, [x27, #16]
  41286c:	sub	w1, w1, w3
  412870:	cmp	x26, x2
  412874:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412878:	add	w2, w1, #0x1
  41287c:	cmp	w2, #0x2
  412880:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412884:	ldr	w2, [x27, #24]
  412888:	cmp	w1, w2
  41288c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412890:	cmp	w0, w28
  412894:	csel	w0, w0, w28, cs  // cs = hs, nlast
  412898:	ldr	x2, [sp, #136]
  41289c:	add	w0, w0, #0x1
  4128a0:	mov	w1, w0
  4128a4:	add	x2, x2, #0x1
  4128a8:	str	x2, [sp, #136]
  4128ac:	ldr	x3, [x26, #16]
  4128b0:	sub	w1, w1, w25
  4128b4:	cmp	x22, x3
  4128b8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4128bc:	add	w3, w1, #0x1
  4128c0:	cmp	w3, #0x2
  4128c4:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4128c8:	ldr	w3, [x26, #24]
  4128cc:	cmp	w1, w3
  4128d0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4128d4:	cmp	w0, w25
  4128d8:	add	x2, x2, #0x1
  4128dc:	csel	w0, w0, w25, cs  // cs = hs, nlast
  4128e0:	str	x2, [sp, #136]
  4128e4:	add	w25, w0, #0x1
  4128e8:	ldr	x26, [x22, #8]
  4128ec:	cbz	x26, 413f70 <ferror@plt+0x115d0>
  4128f0:	ldr	x27, [x26]
  4128f4:	cbz	x27, 414084 <ferror@plt+0x116e4>
  4128f8:	ldr	x0, [x27]
  4128fc:	cbz	x0, 4141d4 <ferror@plt+0x11834>
  412900:	add	x2, sp, #0x88
  412904:	mov	x1, x27
  412908:	bl	411cb0 <ferror@plt+0xf310>
  41290c:	mov	w28, w0
  412910:	mov	w3, w0
  412914:	ldr	x0, [x27, #8]
  412918:	cbz	x0, 4141c8 <ferror@plt+0x11828>
  41291c:	mov	x1, x27
  412920:	add	x2, sp, #0x88
  412924:	str	w3, [sp, #104]
  412928:	bl	411cb0 <ferror@plt+0xf310>
  41292c:	ldr	w3, [sp, #104]
  412930:	mov	w1, w0
  412934:	ldr	x2, [x27, #16]
  412938:	sub	w1, w1, w3
  41293c:	cmp	x26, x2
  412940:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412944:	add	w2, w1, #0x1
  412948:	cmp	w2, #0x2
  41294c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412950:	ldr	w2, [x27, #24]
  412954:	cmp	w1, w2
  412958:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41295c:	cmp	w0, w28
  412960:	ldr	x2, [sp, #136]
  412964:	csel	w0, w0, w28, cs  // cs = hs, nlast
  412968:	add	w27, w0, #0x1
  41296c:	add	x2, x2, #0x1
  412970:	str	x2, [sp, #136]
  412974:	ldr	x28, [x26, #8]
  412978:	cbz	x28, 4140a0 <ferror@plt+0x11700>
  41297c:	ldr	x0, [x28]
  412980:	cbz	x0, 4141bc <ferror@plt+0x1181c>
  412984:	add	x2, sp, #0x88
  412988:	mov	x1, x28
  41298c:	bl	411cb0 <ferror@plt+0xf310>
  412990:	mov	w3, w0
  412994:	mov	w4, w0
  412998:	ldr	x0, [x28, #8]
  41299c:	cbz	x0, 4141ec <ferror@plt+0x1184c>
  4129a0:	mov	x1, x28
  4129a4:	add	x2, sp, #0x88
  4129a8:	str	w3, [sp, #104]
  4129ac:	str	w4, [sp, #116]
  4129b0:	bl	411cb0 <ferror@plt+0xf310>
  4129b4:	ldr	w3, [sp, #104]
  4129b8:	mov	w1, w0
  4129bc:	ldr	w4, [sp, #116]
  4129c0:	ldr	x2, [x28, #16]
  4129c4:	sub	w1, w1, w4
  4129c8:	cmp	x26, x2
  4129cc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4129d0:	add	w2, w1, #0x1
  4129d4:	cmp	w2, #0x2
  4129d8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4129dc:	ldr	w2, [x28, #24]
  4129e0:	cmp	w1, w2
  4129e4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4129e8:	cmp	w0, w3
  4129ec:	csel	w0, w0, w3, cs  // cs = hs, nlast
  4129f0:	ldr	x2, [sp, #136]
  4129f4:	add	w0, w0, #0x1
  4129f8:	mov	w1, w0
  4129fc:	add	x2, x2, #0x1
  412a00:	str	x2, [sp, #136]
  412a04:	ldr	x3, [x26, #16]
  412a08:	sub	w1, w1, w27
  412a0c:	cmp	x22, x3
  412a10:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412a14:	add	w3, w1, #0x1
  412a18:	cmp	w3, #0x2
  412a1c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412a20:	ldr	w3, [x26, #24]
  412a24:	cmp	w1, w3
  412a28:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412a2c:	cmp	w0, w27
  412a30:	add	x2, x2, #0x1
  412a34:	csel	w0, w0, w27, cs  // cs = hs, nlast
  412a38:	str	x2, [sp, #136]
  412a3c:	add	w0, w0, #0x1
  412a40:	mov	w1, w0
  412a44:	ldr	x3, [x22, #16]
  412a48:	sub	w1, w1, w25
  412a4c:	cmp	x24, x3
  412a50:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412a54:	add	w3, w1, #0x1
  412a58:	cmp	w3, #0x2
  412a5c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412a60:	ldr	w3, [x22, #24]
  412a64:	cmp	w1, w3
  412a68:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412a6c:	cmp	w0, w25
  412a70:	add	x2, x2, #0x1
  412a74:	csel	w0, w0, w25, cs  // cs = hs, nlast
  412a78:	str	x2, [sp, #136]
  412a7c:	add	w22, w0, #0x1
  412a80:	b	413790 <ferror@plt+0x10df0>
  412a84:	mov	x2, #0x0                   	// #0
  412a88:	ldr	x0, [x19, #32]
  412a8c:	cmp	x0, x2
  412a90:	b.ne	4143d8 <ferror@plt+0x11a38>  // b.any
  412a94:	ldp	x19, x20, [sp, #16]
  412a98:	ldp	x29, x30, [sp], #144
  412a9c:	ret
  412aa0:	mov	w1, #0x0                   	// #0
  412aa4:	ldr	x0, [x20, #16]
  412aa8:	sub	w1, w1, w21
  412aac:	cbnz	x0, 4143e8 <ferror@plt+0x11a48>
  412ab0:	add	w0, w1, #0x1
  412ab4:	cmp	w0, #0x2
  412ab8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412abc:	ldr	w0, [x20, #24]
  412ac0:	cmp	w1, w0
  412ac4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412ac8:	add	x2, x2, #0x1
  412acc:	str	x2, [sp, #136]
  412ad0:	ldp	x21, x22, [sp, #32]
  412ad4:	ldp	x23, x24, [sp, #48]
  412ad8:	ldp	x25, x26, [sp, #64]
  412adc:	ldp	x27, x28, [sp, #80]
  412ae0:	b	412a88 <ferror@plt+0x100e8>
  412ae4:	mov	x2, #0x0                   	// #0
  412ae8:	mov	w21, #0x0                   	// #0
  412aec:	ldr	x24, [x22, #8]
  412af0:	cbz	x24, 4130f0 <ferror@plt+0x10750>
  412af4:	ldr	x23, [x24]
  412af8:	cbz	x23, 413478 <ferror@plt+0x10ad8>
  412afc:	ldr	x26, [x23]
  412b00:	cbz	x26, 413f00 <ferror@plt+0x11560>
  412b04:	ldr	x25, [x26]
  412b08:	cbz	x25, 414068 <ferror@plt+0x116c8>
  412b0c:	ldr	x0, [x25]
  412b10:	cbz	x0, 41421c <ferror@plt+0x1187c>
  412b14:	add	x2, sp, #0x88
  412b18:	mov	x1, x25
  412b1c:	bl	411cb0 <ferror@plt+0xf310>
  412b20:	mov	w27, w0
  412b24:	mov	w28, w0
  412b28:	ldr	x0, [x25, #8]
  412b2c:	cbz	x0, 414210 <ferror@plt+0x11870>
  412b30:	mov	x1, x25
  412b34:	add	x2, sp, #0x88
  412b38:	bl	411cb0 <ferror@plt+0xf310>
  412b3c:	mov	w1, w0
  412b40:	ldr	x2, [x25, #16]
  412b44:	sub	w1, w1, w28
  412b48:	cmp	x26, x2
  412b4c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412b50:	add	w2, w1, #0x1
  412b54:	cmp	w2, #0x2
  412b58:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412b5c:	ldr	w2, [x25, #24]
  412b60:	cmp	w1, w2
  412b64:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412b68:	cmp	w0, w27
  412b6c:	ldr	x2, [sp, #136]
  412b70:	csel	w0, w0, w27, cs  // cs = hs, nlast
  412b74:	add	w25, w0, #0x1
  412b78:	add	x2, x2, #0x1
  412b7c:	str	x2, [sp, #136]
  412b80:	ldr	x27, [x26, #8]
  412b84:	cbz	x27, 41405c <ferror@plt+0x116bc>
  412b88:	ldr	x0, [x27]
  412b8c:	cbz	x0, 4142f4 <ferror@plt+0x11954>
  412b90:	add	x2, sp, #0x88
  412b94:	mov	x1, x27
  412b98:	bl	411cb0 <ferror@plt+0xf310>
  412b9c:	mov	w28, w0
  412ba0:	mov	w3, w0
  412ba4:	ldr	x0, [x27, #8]
  412ba8:	cbz	x0, 4142e8 <ferror@plt+0x11948>
  412bac:	mov	x1, x27
  412bb0:	add	x2, sp, #0x88
  412bb4:	str	w3, [sp, #104]
  412bb8:	bl	411cb0 <ferror@plt+0xf310>
  412bbc:	ldr	w3, [sp, #104]
  412bc0:	mov	w1, w0
  412bc4:	ldr	x2, [x27, #16]
  412bc8:	sub	w1, w1, w3
  412bcc:	cmp	x26, x2
  412bd0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412bd4:	add	w2, w1, #0x1
  412bd8:	cmp	w2, #0x2
  412bdc:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412be0:	ldr	w2, [x27, #24]
  412be4:	cmp	w1, w2
  412be8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412bec:	cmp	w0, w28
  412bf0:	csel	w0, w0, w28, cs  // cs = hs, nlast
  412bf4:	ldr	x2, [sp, #136]
  412bf8:	add	w0, w0, #0x1
  412bfc:	mov	w1, w0
  412c00:	add	x2, x2, #0x1
  412c04:	str	x2, [sp, #136]
  412c08:	ldr	x3, [x26, #16]
  412c0c:	sub	w1, w1, w25
  412c10:	cmp	x23, x3
  412c14:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412c18:	add	w3, w1, #0x1
  412c1c:	cmp	w3, #0x2
  412c20:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412c24:	ldr	w3, [x26, #24]
  412c28:	cmp	w1, w3
  412c2c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412c30:	cmp	w0, w25
  412c34:	add	x2, x2, #0x1
  412c38:	csel	w0, w0, w25, cs  // cs = hs, nlast
  412c3c:	str	x2, [sp, #136]
  412c40:	add	w25, w0, #0x1
  412c44:	ldr	x26, [x23, #8]
  412c48:	cbz	x26, 413f7c <ferror@plt+0x115dc>
  412c4c:	ldr	x27, [x26]
  412c50:	cbz	x27, 414008 <ferror@plt+0x11668>
  412c54:	ldr	x0, [x27]
  412c58:	cbz	x0, 41412c <ferror@plt+0x1178c>
  412c5c:	add	x2, sp, #0x88
  412c60:	mov	x1, x27
  412c64:	bl	411cb0 <ferror@plt+0xf310>
  412c68:	mov	w28, w0
  412c6c:	mov	w3, w0
  412c70:	ldr	x0, [x27, #8]
  412c74:	cbz	x0, 414120 <ferror@plt+0x11780>
  412c78:	mov	x1, x27
  412c7c:	add	x2, sp, #0x88
  412c80:	str	w3, [sp, #104]
  412c84:	bl	411cb0 <ferror@plt+0xf310>
  412c88:	ldr	w3, [sp, #104]
  412c8c:	mov	w1, w0
  412c90:	ldr	x2, [x27, #16]
  412c94:	sub	w1, w1, w3
  412c98:	cmp	x26, x2
  412c9c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412ca0:	add	w2, w1, #0x1
  412ca4:	cmp	w2, #0x2
  412ca8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412cac:	ldr	w2, [x27, #24]
  412cb0:	cmp	w1, w2
  412cb4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412cb8:	cmp	w0, w28
  412cbc:	ldr	x2, [sp, #136]
  412cc0:	csel	w0, w0, w28, cs  // cs = hs, nlast
  412cc4:	add	w27, w0, #0x1
  412cc8:	add	x2, x2, #0x1
  412ccc:	str	x2, [sp, #136]
  412cd0:	ldr	x28, [x26, #8]
  412cd4:	cbz	x28, 414070 <ferror@plt+0x116d0>
  412cd8:	ldr	x0, [x28]
  412cdc:	cbz	x0, 414168 <ferror@plt+0x117c8>
  412ce0:	add	x2, sp, #0x88
  412ce4:	mov	x1, x28
  412ce8:	bl	411cb0 <ferror@plt+0xf310>
  412cec:	mov	w3, w0
  412cf0:	mov	w4, w0
  412cf4:	ldr	x0, [x28, #8]
  412cf8:	cbz	x0, 41424c <ferror@plt+0x118ac>
  412cfc:	mov	x1, x28
  412d00:	add	x2, sp, #0x88
  412d04:	str	w3, [sp, #104]
  412d08:	str	w4, [sp, #116]
  412d0c:	bl	411cb0 <ferror@plt+0xf310>
  412d10:	ldr	w3, [sp, #104]
  412d14:	mov	w1, w0
  412d18:	ldr	w4, [sp, #116]
  412d1c:	ldr	x2, [x28, #16]
  412d20:	sub	w1, w1, w4
  412d24:	cmp	x26, x2
  412d28:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412d2c:	add	w2, w1, #0x1
  412d30:	cmp	w2, #0x2
  412d34:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412d38:	ldr	w2, [x28, #24]
  412d3c:	cmp	w1, w2
  412d40:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412d44:	cmp	w0, w3
  412d48:	csel	w0, w0, w3, cs  // cs = hs, nlast
  412d4c:	ldr	x2, [sp, #136]
  412d50:	add	w0, w0, #0x1
  412d54:	mov	w1, w0
  412d58:	add	x2, x2, #0x1
  412d5c:	str	x2, [sp, #136]
  412d60:	ldr	x3, [x26, #16]
  412d64:	sub	w1, w1, w27
  412d68:	cmp	x23, x3
  412d6c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412d70:	add	w3, w1, #0x1
  412d74:	cmp	w3, #0x2
  412d78:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412d7c:	ldr	w3, [x26, #24]
  412d80:	cmp	w1, w3
  412d84:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412d88:	cmp	w0, w27
  412d8c:	add	x2, x2, #0x1
  412d90:	csel	w0, w0, w27, cs  // cs = hs, nlast
  412d94:	str	x2, [sp, #136]
  412d98:	add	w0, w0, #0x1
  412d9c:	mov	w1, w0
  412da0:	ldr	x3, [x23, #16]
  412da4:	sub	w1, w1, w25
  412da8:	cmp	x24, x3
  412dac:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412db0:	add	w3, w1, #0x1
  412db4:	cmp	w3, #0x2
  412db8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412dbc:	ldr	w3, [x23, #24]
  412dc0:	cmp	w1, w3
  412dc4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412dc8:	cmp	w0, w25
  412dcc:	add	x2, x2, #0x1
  412dd0:	csel	w0, w0, w25, cs  // cs = hs, nlast
  412dd4:	str	x2, [sp, #136]
  412dd8:	add	w23, w0, #0x1
  412ddc:	b	41347c <ferror@plt+0x10adc>
  412de0:	mov	w22, #0x0                   	// #0
  412de4:	ldr	x25, [x23, #8]
  412de8:	cbz	x25, 413138 <ferror@plt+0x10798>
  412dec:	ldr	x24, [x25]
  412df0:	cbz	x24, 413aa0 <ferror@plt+0x11100>
  412df4:	ldr	x27, [x24]
  412df8:	cbz	x27, 413ef8 <ferror@plt+0x11558>
  412dfc:	ldr	x26, [x27]
  412e00:	cbz	x26, 413fb0 <ferror@plt+0x11610>
  412e04:	ldr	x0, [x26]
  412e08:	cbz	x0, 41427c <ferror@plt+0x118dc>
  412e0c:	add	x2, sp, #0x88
  412e10:	mov	x1, x26
  412e14:	bl	411cb0 <ferror@plt+0xf310>
  412e18:	mov	w28, w0
  412e1c:	mov	w3, w0
  412e20:	ldr	x0, [x26, #8]
  412e24:	cbz	x0, 414270 <ferror@plt+0x118d0>
  412e28:	mov	x1, x26
  412e2c:	add	x2, sp, #0x88
  412e30:	str	w3, [sp, #104]
  412e34:	bl	411cb0 <ferror@plt+0xf310>
  412e38:	ldr	w3, [sp, #104]
  412e3c:	mov	w1, w0
  412e40:	ldr	x2, [x26, #16]
  412e44:	sub	w1, w1, w3
  412e48:	cmp	x27, x2
  412e4c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412e50:	add	w2, w1, #0x1
  412e54:	cmp	w2, #0x2
  412e58:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412e5c:	ldr	w2, [x26, #24]
  412e60:	cmp	w1, w2
  412e64:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412e68:	cmp	w0, w28
  412e6c:	ldr	x2, [sp, #136]
  412e70:	csel	w0, w0, w28, cs  // cs = hs, nlast
  412e74:	add	w26, w0, #0x1
  412e78:	add	x2, x2, #0x1
  412e7c:	str	x2, [sp, #136]
  412e80:	ldr	x28, [x27, #8]
  412e84:	cbz	x28, 413fa4 <ferror@plt+0x11604>
  412e88:	ldr	x0, [x28]
  412e8c:	cbz	x0, 41430c <ferror@plt+0x1196c>
  412e90:	add	x2, sp, #0x88
  412e94:	mov	x1, x28
  412e98:	bl	411cb0 <ferror@plt+0xf310>
  412e9c:	mov	w3, w0
  412ea0:	mov	w4, w0
  412ea4:	ldr	x0, [x28, #8]
  412ea8:	cbz	x0, 414300 <ferror@plt+0x11960>
  412eac:	mov	x1, x28
  412eb0:	add	x2, sp, #0x88
  412eb4:	str	w3, [sp, #104]
  412eb8:	str	w4, [sp, #116]
  412ebc:	bl	411cb0 <ferror@plt+0xf310>
  412ec0:	ldr	w3, [sp, #104]
  412ec4:	mov	w1, w0
  412ec8:	ldr	w4, [sp, #116]
  412ecc:	ldr	x2, [x28, #16]
  412ed0:	sub	w1, w1, w4
  412ed4:	cmp	x27, x2
  412ed8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412edc:	add	w2, w1, #0x1
  412ee0:	cmp	w2, #0x2
  412ee4:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412ee8:	ldr	w2, [x28, #24]
  412eec:	cmp	w1, w2
  412ef0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412ef4:	cmp	w0, w3
  412ef8:	csel	w0, w0, w3, cs  // cs = hs, nlast
  412efc:	ldr	x2, [sp, #136]
  412f00:	add	w0, w0, #0x1
  412f04:	mov	w1, w0
  412f08:	add	x2, x2, #0x1
  412f0c:	str	x2, [sp, #136]
  412f10:	ldr	x3, [x27, #16]
  412f14:	sub	w1, w1, w26
  412f18:	cmp	x24, x3
  412f1c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412f20:	add	w3, w1, #0x1
  412f24:	cmp	w3, #0x2
  412f28:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412f2c:	ldr	w3, [x27, #24]
  412f30:	cmp	w1, w3
  412f34:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412f38:	cmp	w0, w26
  412f3c:	add	x2, x2, #0x1
  412f40:	csel	w0, w0, w26, cs  // cs = hs, nlast
  412f44:	str	x2, [sp, #136]
  412f48:	add	w26, w0, #0x1
  412f4c:	ldr	x27, [x24, #8]
  412f50:	cbz	x27, 413f58 <ferror@plt+0x115b8>
  412f54:	ldr	x28, [x27]
  412f58:	cbz	x28, 413f9c <ferror@plt+0x115fc>
  412f5c:	ldr	x0, [x28]
  412f60:	cbz	x0, 41433c <ferror@plt+0x1199c>
  412f64:	add	x2, sp, #0x88
  412f68:	mov	x1, x28
  412f6c:	bl	411cb0 <ferror@plt+0xf310>
  412f70:	mov	w3, w0
  412f74:	mov	w4, w0
  412f78:	ldr	x0, [x28, #8]
  412f7c:	cbz	x0, 414330 <ferror@plt+0x11990>
  412f80:	mov	x1, x28
  412f84:	add	x2, sp, #0x88
  412f88:	str	w3, [sp, #104]
  412f8c:	str	w4, [sp, #116]
  412f90:	bl	411cb0 <ferror@plt+0xf310>
  412f94:	ldr	w3, [sp, #104]
  412f98:	mov	w1, w0
  412f9c:	ldr	w4, [sp, #116]
  412fa0:	ldr	x2, [x28, #16]
  412fa4:	sub	w1, w1, w4
  412fa8:	cmp	x27, x2
  412fac:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412fb0:	add	w2, w1, #0x1
  412fb4:	cmp	w2, #0x2
  412fb8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  412fbc:	ldr	w2, [x28, #24]
  412fc0:	cmp	w1, w2
  412fc4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  412fc8:	cmp	w0, w3
  412fcc:	ldr	x2, [sp, #136]
  412fd0:	csel	w0, w0, w3, cs  // cs = hs, nlast
  412fd4:	add	w28, w0, #0x1
  412fd8:	add	x2, x2, #0x1
  412fdc:	str	x2, [sp, #136]
  412fe0:	ldr	x1, [x27, #8]
  412fe4:	cbz	x1, 41403c <ferror@plt+0x1169c>
  412fe8:	ldr	x0, [x1]
  412fec:	cbz	x0, 414324 <ferror@plt+0x11984>
  412ff0:	add	x2, sp, #0x88
  412ff4:	str	x1, [sp, #104]
  412ff8:	bl	411cb0 <ferror@plt+0xf310>
  412ffc:	mov	w3, w0
  413000:	ldr	x1, [sp, #104]
  413004:	mov	w5, w0
  413008:	ldr	x0, [x1, #8]
  41300c:	cbz	x0, 414288 <ferror@plt+0x118e8>
  413010:	add	x2, sp, #0x88
  413014:	str	x1, [sp, #104]
  413018:	stp	w3, w5, [sp, #116]
  41301c:	bl	411cb0 <ferror@plt+0xf310>
  413020:	ldp	w3, w5, [sp, #116]
  413024:	mov	w2, w0
  413028:	ldr	x1, [sp, #104]
  41302c:	sub	w2, w2, w5
  413030:	ldr	x4, [x1, #16]
  413034:	cmp	x27, x4
  413038:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41303c:	add	w4, w2, #0x1
  413040:	cmp	w4, #0x2
  413044:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413048:	ldr	w1, [x1, #24]
  41304c:	cmp	w2, w1
  413050:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413054:	cmp	w0, w3
  413058:	csel	w0, w0, w3, cs  // cs = hs, nlast
  41305c:	ldr	x2, [sp, #136]
  413060:	add	w0, w0, #0x1
  413064:	mov	w1, w0
  413068:	add	x2, x2, #0x1
  41306c:	str	x2, [sp, #136]
  413070:	ldr	x3, [x27, #16]
  413074:	sub	w1, w1, w28
  413078:	cmp	x24, x3
  41307c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413080:	add	w3, w1, #0x1
  413084:	cmp	w3, #0x2
  413088:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  41308c:	ldr	w3, [x27, #24]
  413090:	cmp	w1, w3
  413094:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413098:	cmp	w0, w28
  41309c:	add	x2, x2, #0x1
  4130a0:	csel	w0, w0, w28, cs  // cs = hs, nlast
  4130a4:	str	x2, [sp, #136]
  4130a8:	add	w0, w0, #0x1
  4130ac:	mov	w1, w0
  4130b0:	ldr	x3, [x24, #16]
  4130b4:	sub	w1, w1, w26
  4130b8:	cmp	x25, x3
  4130bc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4130c0:	add	w3, w1, #0x1
  4130c4:	cmp	w3, #0x2
  4130c8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4130cc:	ldr	w3, [x24, #24]
  4130d0:	cmp	w1, w3
  4130d4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4130d8:	cmp	w0, w26
  4130dc:	add	x2, x2, #0x1
  4130e0:	csel	w0, w0, w26, cs  // cs = hs, nlast
  4130e4:	str	x2, [sp, #136]
  4130e8:	add	w24, w0, #0x1
  4130ec:	b	413aa4 <ferror@plt+0x11104>
  4130f0:	mov	w0, #0x0                   	// #0
  4130f4:	mov	w1, #0x0                   	// #0
  4130f8:	ldr	x3, [x22, #16]
  4130fc:	sub	w0, w0, w21
  413100:	cmp	x20, x3
  413104:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413108:	add	w3, w0, #0x1
  41310c:	cmp	w3, #0x2
  413110:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413114:	ldr	w3, [x22, #24]
  413118:	cmp	w0, w3
  41311c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413120:	cmp	w1, w21
  413124:	add	x2, x2, #0x1
  413128:	csel	w1, w1, w21, cs  // cs = hs, nlast
  41312c:	str	x2, [sp, #136]
  413130:	add	w21, w1, #0x1
  413134:	b	412788 <ferror@plt+0xfde8>
  413138:	mov	w0, #0x0                   	// #0
  41313c:	mov	w1, #0x0                   	// #0
  413140:	ldr	x3, [x23, #16]
  413144:	sub	w0, w0, w22
  413148:	cmp	x20, x3
  41314c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413150:	add	w3, w0, #0x1
  413154:	cmp	w3, #0x2
  413158:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  41315c:	ldr	w3, [x23, #24]
  413160:	cmp	w0, w3
  413164:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413168:	cmp	w1, w22
  41316c:	add	x2, x2, #0x1
  413170:	csel	w1, w1, w22, cs  // cs = hs, nlast
  413174:	str	x2, [sp, #136]
  413178:	add	w1, w1, #0x1
  41317c:	b	412aa4 <ferror@plt+0x10104>
  413180:	mov	x2, #0x0                   	// #0
  413184:	mov	w21, #0x0                   	// #0
  413188:	ldr	x24, [x23, #8]
  41318c:	cbz	x24, 413e14 <ferror@plt+0x11474>
  413190:	ldr	x26, [x24]
  413194:	cbz	x26, 413f18 <ferror@plt+0x11578>
  413198:	ldr	x25, [x26]
  41319c:	cbz	x25, 413fc4 <ferror@plt+0x11624>
  4131a0:	ldr	x0, [x25]
  4131a4:	cbz	x0, 414264 <ferror@plt+0x118c4>
  4131a8:	add	x2, sp, #0x88
  4131ac:	mov	x1, x25
  4131b0:	bl	411cb0 <ferror@plt+0xf310>
  4131b4:	mov	w27, w0
  4131b8:	mov	w28, w0
  4131bc:	ldr	x0, [x25, #8]
  4131c0:	cbz	x0, 414258 <ferror@plt+0x118b8>
  4131c4:	mov	x1, x25
  4131c8:	add	x2, sp, #0x88
  4131cc:	bl	411cb0 <ferror@plt+0xf310>
  4131d0:	mov	w1, w0
  4131d4:	ldr	x2, [x25, #16]
  4131d8:	sub	w1, w1, w28
  4131dc:	cmp	x26, x2
  4131e0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4131e4:	add	w2, w1, #0x1
  4131e8:	cmp	w2, #0x2
  4131ec:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4131f0:	ldr	w2, [x25, #24]
  4131f4:	cmp	w1, w2
  4131f8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4131fc:	cmp	w0, w27
  413200:	ldr	x2, [sp, #136]
  413204:	csel	w0, w0, w27, cs  // cs = hs, nlast
  413208:	add	w25, w0, #0x1
  41320c:	add	x2, x2, #0x1
  413210:	str	x2, [sp, #136]
  413214:	ldr	x27, [x26, #8]
  413218:	cbz	x27, 413fb8 <ferror@plt+0x11618>
  41321c:	ldr	x0, [x27]
  413220:	cbz	x0, 4142ac <ferror@plt+0x1190c>
  413224:	add	x2, sp, #0x88
  413228:	mov	x1, x27
  41322c:	bl	411cb0 <ferror@plt+0xf310>
  413230:	mov	w28, w0
  413234:	mov	w3, w0
  413238:	ldr	x0, [x27, #8]
  41323c:	cbz	x0, 4142a0 <ferror@plt+0x11900>
  413240:	mov	x1, x27
  413244:	add	x2, sp, #0x88
  413248:	str	w3, [sp, #104]
  41324c:	bl	411cb0 <ferror@plt+0xf310>
  413250:	ldr	w3, [sp, #104]
  413254:	mov	w1, w0
  413258:	ldr	x2, [x27, #16]
  41325c:	sub	w1, w1, w3
  413260:	cmp	x26, x2
  413264:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413268:	add	w2, w1, #0x1
  41326c:	cmp	w2, #0x2
  413270:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413274:	ldr	w2, [x27, #24]
  413278:	cmp	w1, w2
  41327c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413280:	cmp	w0, w28
  413284:	csel	w0, w0, w28, cs  // cs = hs, nlast
  413288:	ldr	x2, [sp, #136]
  41328c:	add	w1, w0, #0x1
  413290:	mov	w0, w1
  413294:	add	x2, x2, #0x1
  413298:	str	x2, [sp, #136]
  41329c:	ldr	x3, [x26, #16]
  4132a0:	sub	w0, w0, w25
  4132a4:	cmp	x24, x3
  4132a8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4132ac:	add	w3, w0, #0x1
  4132b0:	cmp	w3, #0x2
  4132b4:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4132b8:	ldr	w3, [x26, #24]
  4132bc:	cmp	w0, w3
  4132c0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4132c4:	cmp	w1, w25
  4132c8:	add	x2, x2, #0x1
  4132cc:	csel	w1, w1, w25, cs  // cs = hs, nlast
  4132d0:	str	x2, [sp, #136]
  4132d4:	add	w25, w1, #0x1
  4132d8:	ldr	x26, [x24, #8]
  4132dc:	cbz	x26, 413f34 <ferror@plt+0x11594>
  4132e0:	ldr	x27, [x26]
  4132e4:	cbz	x27, 413fcc <ferror@plt+0x1162c>
  4132e8:	ldr	x0, [x27]
  4132ec:	cbz	x0, 4140e4 <ferror@plt+0x11744>
  4132f0:	add	x2, sp, #0x88
  4132f4:	mov	x1, x27
  4132f8:	bl	411cb0 <ferror@plt+0xf310>
  4132fc:	mov	w28, w0
  413300:	mov	w3, w0
  413304:	ldr	x0, [x27, #8]
  413308:	cbz	x0, 4140d8 <ferror@plt+0x11738>
  41330c:	mov	x1, x27
  413310:	add	x2, sp, #0x88
  413314:	str	w3, [sp, #104]
  413318:	bl	411cb0 <ferror@plt+0xf310>
  41331c:	ldr	w3, [sp, #104]
  413320:	mov	w1, w0
  413324:	ldr	x2, [x27, #16]
  413328:	sub	w1, w1, w3
  41332c:	cmp	x26, x2
  413330:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413334:	add	w2, w1, #0x1
  413338:	cmp	w2, #0x2
  41333c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413340:	ldr	w2, [x27, #24]
  413344:	cmp	w1, w2
  413348:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41334c:	cmp	w0, w28
  413350:	ldr	x2, [sp, #136]
  413354:	csel	w0, w0, w28, cs  // cs = hs, nlast
  413358:	add	w27, w0, #0x1
  41335c:	add	x2, x2, #0x1
  413360:	str	x2, [sp, #136]
  413364:	ldr	x28, [x26, #8]
  413368:	cbz	x28, 4140c0 <ferror@plt+0x11720>
  41336c:	ldr	x0, [x28]
  413370:	cbz	x0, 4140f0 <ferror@plt+0x11750>
  413374:	add	x2, sp, #0x88
  413378:	mov	x1, x28
  41337c:	bl	411cb0 <ferror@plt+0xf310>
  413380:	mov	w3, w0
  413384:	mov	w4, w0
  413388:	ldr	x0, [x28, #8]
  41338c:	cbz	x0, 414240 <ferror@plt+0x118a0>
  413390:	mov	x1, x28
  413394:	add	x2, sp, #0x88
  413398:	str	w3, [sp, #104]
  41339c:	str	w4, [sp, #116]
  4133a0:	bl	411cb0 <ferror@plt+0xf310>
  4133a4:	ldr	w3, [sp, #104]
  4133a8:	mov	w1, w0
  4133ac:	ldr	w4, [sp, #116]
  4133b0:	ldr	x2, [x28, #16]
  4133b4:	sub	w1, w1, w4
  4133b8:	cmp	x26, x2
  4133bc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4133c0:	add	w2, w1, #0x1
  4133c4:	cmp	w2, #0x2
  4133c8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4133cc:	ldr	w2, [x28, #24]
  4133d0:	cmp	w1, w2
  4133d4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4133d8:	cmp	w0, w3
  4133dc:	csel	w0, w0, w3, cs  // cs = hs, nlast
  4133e0:	ldr	x2, [sp, #136]
  4133e4:	add	w1, w0, #0x1
  4133e8:	mov	w0, w1
  4133ec:	add	x2, x2, #0x1
  4133f0:	str	x2, [sp, #136]
  4133f4:	ldr	x3, [x26, #16]
  4133f8:	sub	w0, w0, w27
  4133fc:	cmp	x24, x3
  413400:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413404:	add	w3, w0, #0x1
  413408:	cmp	w3, #0x2
  41340c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413410:	ldr	w3, [x26, #24]
  413414:	cmp	w0, w3
  413418:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41341c:	cmp	w1, w27
  413420:	add	x2, x2, #0x1
  413424:	csel	w1, w1, w27, cs  // cs = hs, nlast
  413428:	str	x2, [sp, #136]
  41342c:	add	w1, w1, #0x1
  413430:	mov	w0, w1
  413434:	ldr	x3, [x24, #16]
  413438:	sub	w0, w0, w25
  41343c:	cmp	x23, x3
  413440:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413444:	add	w3, w0, #0x1
  413448:	cmp	w3, #0x2
  41344c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413450:	ldr	w3, [x24, #24]
  413454:	cmp	w0, w3
  413458:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41345c:	cmp	w1, w25
  413460:	add	x2, x2, #0x1
  413464:	csel	w1, w1, w25, cs  // cs = hs, nlast
  413468:	str	x2, [sp, #136]
  41346c:	add	w1, w1, #0x1
  413470:	mov	w0, w1
  413474:	b	413e1c <ferror@plt+0x1147c>
  413478:	mov	w23, #0x0                   	// #0
  41347c:	ldr	x25, [x24, #8]
  413480:	cbz	x25, 413dc8 <ferror@plt+0x11428>
  413484:	ldr	x27, [x25]
  413488:	cbz	x27, 413f10 <ferror@plt+0x11570>
  41348c:	ldr	x26, [x27]
  413490:	cbz	x26, 4140b8 <ferror@plt+0x11718>
  413494:	ldr	x0, [x26]
  413498:	cbz	x0, 41415c <ferror@plt+0x117bc>
  41349c:	add	x2, sp, #0x88
  4134a0:	mov	x1, x26
  4134a4:	bl	411cb0 <ferror@plt+0xf310>
  4134a8:	mov	w28, w0
  4134ac:	mov	w3, w0
  4134b0:	ldr	x0, [x26, #8]
  4134b4:	cbz	x0, 414150 <ferror@plt+0x117b0>
  4134b8:	mov	x1, x26
  4134bc:	add	x2, sp, #0x88
  4134c0:	str	w3, [sp, #104]
  4134c4:	bl	411cb0 <ferror@plt+0xf310>
  4134c8:	ldr	w3, [sp, #104]
  4134cc:	mov	w1, w0
  4134d0:	ldr	x2, [x26, #16]
  4134d4:	sub	w1, w1, w3
  4134d8:	cmp	x27, x2
  4134dc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4134e0:	add	w2, w1, #0x1
  4134e4:	cmp	w2, #0x2
  4134e8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4134ec:	ldr	w2, [x26, #24]
  4134f0:	cmp	w1, w2
  4134f4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4134f8:	cmp	w0, w28
  4134fc:	ldr	x2, [sp, #136]
  413500:	csel	w0, w0, w28, cs  // cs = hs, nlast
  413504:	add	w26, w0, #0x1
  413508:	add	x2, x2, #0x1
  41350c:	str	x2, [sp, #136]
  413510:	ldr	x28, [x27, #8]
  413514:	cbz	x28, 4140ac <ferror@plt+0x1170c>
  413518:	ldr	x0, [x28]
  41351c:	cbz	x0, 4141a4 <ferror@plt+0x11804>
  413520:	add	x2, sp, #0x88
  413524:	mov	x1, x28
  413528:	bl	411cb0 <ferror@plt+0xf310>
  41352c:	mov	w3, w0
  413530:	mov	w4, w0
  413534:	ldr	x0, [x28, #8]
  413538:	cbz	x0, 414198 <ferror@plt+0x117f8>
  41353c:	mov	x1, x28
  413540:	add	x2, sp, #0x88
  413544:	str	w3, [sp, #104]
  413548:	str	w4, [sp, #116]
  41354c:	bl	411cb0 <ferror@plt+0xf310>
  413550:	ldr	w3, [sp, #104]
  413554:	mov	w1, w0
  413558:	ldr	w4, [sp, #116]
  41355c:	ldr	x2, [x28, #16]
  413560:	sub	w1, w1, w4
  413564:	cmp	x27, x2
  413568:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41356c:	add	w2, w1, #0x1
  413570:	cmp	w2, #0x2
  413574:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413578:	ldr	w2, [x28, #24]
  41357c:	cmp	w1, w2
  413580:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413584:	cmp	w0, w3
  413588:	csel	w0, w0, w3, cs  // cs = hs, nlast
  41358c:	ldr	x2, [sp, #136]
  413590:	add	w1, w0, #0x1
  413594:	mov	w0, w1
  413598:	add	x2, x2, #0x1
  41359c:	str	x2, [sp, #136]
  4135a0:	ldr	x3, [x27, #16]
  4135a4:	sub	w0, w0, w26
  4135a8:	cmp	x25, x3
  4135ac:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4135b0:	add	w3, w0, #0x1
  4135b4:	cmp	w3, #0x2
  4135b8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4135bc:	ldr	w3, [x27, #24]
  4135c0:	cmp	w0, w3
  4135c4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4135c8:	cmp	w1, w26
  4135cc:	add	x2, x2, #0x1
  4135d0:	csel	w1, w1, w26, cs  // cs = hs, nlast
  4135d4:	str	x2, [sp, #136]
  4135d8:	add	w26, w1, #0x1
  4135dc:	ldr	x27, [x25, #8]
  4135e0:	cbz	x27, 413f64 <ferror@plt+0x115c4>
  4135e4:	ldr	x28, [x27]
  4135e8:	cbz	x28, 41407c <ferror@plt+0x116dc>
  4135ec:	ldr	x0, [x28]
  4135f0:	cbz	x0, 414114 <ferror@plt+0x11774>
  4135f4:	add	x2, sp, #0x88
  4135f8:	mov	x1, x28
  4135fc:	bl	411cb0 <ferror@plt+0xf310>
  413600:	mov	w3, w0
  413604:	mov	w4, w0
  413608:	ldr	x0, [x28, #8]
  41360c:	cbz	x0, 414108 <ferror@plt+0x11768>
  413610:	mov	x1, x28
  413614:	add	x2, sp, #0x88
  413618:	str	w3, [sp, #104]
  41361c:	str	w4, [sp, #116]
  413620:	bl	411cb0 <ferror@plt+0xf310>
  413624:	ldr	w3, [sp, #104]
  413628:	mov	w1, w0
  41362c:	ldr	w4, [sp, #116]
  413630:	ldr	x2, [x28, #16]
  413634:	sub	w1, w1, w4
  413638:	cmp	x27, x2
  41363c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413640:	add	w2, w1, #0x1
  413644:	cmp	w2, #0x2
  413648:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  41364c:	ldr	w2, [x28, #24]
  413650:	cmp	w1, w2
  413654:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413658:	cmp	w0, w3
  41365c:	ldr	x2, [sp, #136]
  413660:	csel	w0, w0, w3, cs  // cs = hs, nlast
  413664:	add	w3, w0, #0x1
  413668:	add	x2, x2, #0x1
  41366c:	str	x2, [sp, #136]
  413670:	ldr	x28, [x27, #8]
  413674:	cbz	x28, 4140cc <ferror@plt+0x1172c>
  413678:	ldr	x0, [x28]
  41367c:	cbz	x0, 4140fc <ferror@plt+0x1175c>
  413680:	add	x2, sp, #0x88
  413684:	mov	x1, x28
  413688:	str	w3, [sp, #104]
  41368c:	bl	411cb0 <ferror@plt+0xf310>
  413690:	ldr	w3, [sp, #104]
  413694:	mov	w4, w0
  413698:	mov	w5, w0
  41369c:	ldr	x0, [x28, #8]
  4136a0:	cbz	x0, 414294 <ferror@plt+0x118f4>
  4136a4:	mov	x1, x28
  4136a8:	add	x2, sp, #0x88
  4136ac:	str	w3, [sp, #104]
  4136b0:	stp	w4, w5, [sp, #116]
  4136b4:	bl	411cb0 <ferror@plt+0xf310>
  4136b8:	ldr	w3, [sp, #104]
  4136bc:	mov	w1, w0
  4136c0:	ldp	w4, w5, [sp, #116]
  4136c4:	sub	w1, w1, w5
  4136c8:	ldr	x2, [x28, #16]
  4136cc:	cmp	x27, x2
  4136d0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4136d4:	add	w2, w1, #0x1
  4136d8:	cmp	w2, #0x2
  4136dc:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4136e0:	ldr	w2, [x28, #24]
  4136e4:	cmp	w1, w2
  4136e8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4136ec:	cmp	w0, w4
  4136f0:	csel	w0, w0, w4, cs  // cs = hs, nlast
  4136f4:	ldr	x2, [sp, #136]
  4136f8:	add	w1, w0, #0x1
  4136fc:	mov	w0, w1
  413700:	add	x2, x2, #0x1
  413704:	str	x2, [sp, #136]
  413708:	ldr	x4, [x27, #16]
  41370c:	sub	w0, w0, w3
  413710:	cmp	x25, x4
  413714:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413718:	add	w4, w0, #0x1
  41371c:	cmp	w4, #0x2
  413720:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413724:	ldr	w4, [x27, #24]
  413728:	cmp	w0, w4
  41372c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413730:	cmp	w1, w3
  413734:	add	x2, x2, #0x1
  413738:	csel	w1, w1, w3, cs  // cs = hs, nlast
  41373c:	str	x2, [sp, #136]
  413740:	add	w1, w1, #0x1
  413744:	mov	w0, w1
  413748:	ldr	x3, [x25, #16]
  41374c:	sub	w0, w0, w26
  413750:	cmp	x24, x3
  413754:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413758:	add	w3, w0, #0x1
  41375c:	cmp	w3, #0x2
  413760:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413764:	ldr	w3, [x25, #24]
  413768:	cmp	w0, w3
  41376c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413770:	cmp	w1, w26
  413774:	add	x2, x2, #0x1
  413778:	csel	w1, w1, w26, cs  // cs = hs, nlast
  41377c:	str	x2, [sp, #136]
  413780:	add	w1, w1, #0x1
  413784:	mov	w0, w1
  413788:	b	413dd0 <ferror@plt+0x11430>
  41378c:	mov	w22, #0x0                   	// #0
  413790:	ldr	x25, [x24, #8]
  413794:	cbz	x25, 413e5c <ferror@plt+0x114bc>
  413798:	ldr	x27, [x25]
  41379c:	cbz	x27, 413ef0 <ferror@plt+0x11550>
  4137a0:	ldr	x26, [x27]
  4137a4:	cbz	x26, 414054 <ferror@plt+0x116b4>
  4137a8:	ldr	x0, [x26]
  4137ac:	cbz	x0, 414234 <ferror@plt+0x11894>
  4137b0:	add	x2, sp, #0x88
  4137b4:	mov	x1, x26
  4137b8:	bl	411cb0 <ferror@plt+0xf310>
  4137bc:	mov	w28, w0
  4137c0:	mov	w3, w0
  4137c4:	ldr	x0, [x26, #8]
  4137c8:	cbz	x0, 414228 <ferror@plt+0x11888>
  4137cc:	mov	x1, x26
  4137d0:	add	x2, sp, #0x88
  4137d4:	str	w3, [sp, #104]
  4137d8:	bl	411cb0 <ferror@plt+0xf310>
  4137dc:	ldr	w3, [sp, #104]
  4137e0:	mov	w1, w0
  4137e4:	ldr	x2, [x26, #16]
  4137e8:	sub	w1, w1, w3
  4137ec:	cmp	x27, x2
  4137f0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4137f4:	add	w2, w1, #0x1
  4137f8:	cmp	w2, #0x2
  4137fc:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413800:	ldr	w2, [x26, #24]
  413804:	cmp	w1, w2
  413808:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41380c:	cmp	w0, w28
  413810:	ldr	x2, [sp, #136]
  413814:	csel	w0, w0, w28, cs  // cs = hs, nlast
  413818:	add	w26, w0, #0x1
  41381c:	add	x2, x2, #0x1
  413820:	str	x2, [sp, #136]
  413824:	ldr	x28, [x27, #8]
  413828:	cbz	x28, 414048 <ferror@plt+0x116a8>
  41382c:	ldr	x0, [x28]
  413830:	cbz	x0, 41418c <ferror@plt+0x117ec>
  413834:	add	x2, sp, #0x88
  413838:	mov	x1, x28
  41383c:	bl	411cb0 <ferror@plt+0xf310>
  413840:	mov	w3, w0
  413844:	mov	w4, w0
  413848:	ldr	x0, [x28, #8]
  41384c:	cbz	x0, 414180 <ferror@plt+0x117e0>
  413850:	mov	x1, x28
  413854:	add	x2, sp, #0x88
  413858:	str	w3, [sp, #104]
  41385c:	str	w4, [sp, #116]
  413860:	bl	411cb0 <ferror@plt+0xf310>
  413864:	ldr	w3, [sp, #104]
  413868:	mov	w1, w0
  41386c:	ldr	w4, [sp, #116]
  413870:	ldr	x2, [x28, #16]
  413874:	sub	w1, w1, w4
  413878:	cmp	x27, x2
  41387c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413880:	add	w2, w1, #0x1
  413884:	cmp	w2, #0x2
  413888:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  41388c:	ldr	w2, [x28, #24]
  413890:	cmp	w1, w2
  413894:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413898:	cmp	w0, w3
  41389c:	csel	w0, w0, w3, cs  // cs = hs, nlast
  4138a0:	ldr	x2, [sp, #136]
  4138a4:	add	w1, w0, #0x1
  4138a8:	mov	w0, w1
  4138ac:	add	x2, x2, #0x1
  4138b0:	str	x2, [sp, #136]
  4138b4:	ldr	x3, [x27, #16]
  4138b8:	sub	w0, w0, w26
  4138bc:	cmp	x25, x3
  4138c0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4138c4:	add	w3, w0, #0x1
  4138c8:	cmp	w3, #0x2
  4138cc:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4138d0:	ldr	w3, [x27, #24]
  4138d4:	cmp	w0, w3
  4138d8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4138dc:	cmp	w1, w26
  4138e0:	add	x2, x2, #0x1
  4138e4:	csel	w1, w1, w26, cs  // cs = hs, nlast
  4138e8:	str	x2, [sp, #136]
  4138ec:	add	w26, w1, #0x1
  4138f0:	ldr	x27, [x25, #8]
  4138f4:	cbz	x27, 413f4c <ferror@plt+0x115ac>
  4138f8:	ldr	x28, [x27]
  4138fc:	cbz	x28, 413f94 <ferror@plt+0x115f4>
  413900:	ldr	x0, [x28]
  413904:	cbz	x0, 4143b4 <ferror@plt+0x11a14>
  413908:	add	x2, sp, #0x88
  41390c:	mov	x1, x28
  413910:	bl	411cb0 <ferror@plt+0xf310>
  413914:	mov	w3, w0
  413918:	mov	w4, w0
  41391c:	ldr	x0, [x28, #8]
  413920:	cbz	x0, 4143a8 <ferror@plt+0x11a08>
  413924:	mov	x1, x28
  413928:	add	x2, sp, #0x88
  41392c:	str	w3, [sp, #104]
  413930:	str	w4, [sp, #116]
  413934:	bl	411cb0 <ferror@plt+0xf310>
  413938:	ldr	w3, [sp, #104]
  41393c:	mov	w1, w0
  413940:	ldr	w4, [sp, #116]
  413944:	ldr	x2, [x28, #16]
  413948:	sub	w1, w1, w4
  41394c:	cmp	x27, x2
  413950:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413954:	add	w2, w1, #0x1
  413958:	cmp	w2, #0x2
  41395c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413960:	ldr	w2, [x28, #24]
  413964:	cmp	w1, w2
  413968:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  41396c:	cmp	w0, w3
  413970:	ldr	x2, [sp, #136]
  413974:	csel	w0, w0, w3, cs  // cs = hs, nlast
  413978:	add	w3, w0, #0x1
  41397c:	add	x2, x2, #0x1
  413980:	str	x2, [sp, #136]
  413984:	ldr	x28, [x27, #8]
  413988:	cbz	x28, 413ff0 <ferror@plt+0x11650>
  41398c:	ldr	x0, [x28]
  413990:	cbz	x0, 414378 <ferror@plt+0x119d8>
  413994:	add	x2, sp, #0x88
  413998:	mov	x1, x28
  41399c:	str	w3, [sp, #104]
  4139a0:	bl	411cb0 <ferror@plt+0xf310>
  4139a4:	ldr	w3, [sp, #104]
  4139a8:	mov	w4, w0
  4139ac:	mov	w5, w0
  4139b0:	ldr	x0, [x28, #8]
  4139b4:	cbz	x0, 414204 <ferror@plt+0x11864>
  4139b8:	mov	x1, x28
  4139bc:	add	x2, sp, #0x88
  4139c0:	str	w3, [sp, #104]
  4139c4:	stp	w4, w5, [sp, #116]
  4139c8:	bl	411cb0 <ferror@plt+0xf310>
  4139cc:	ldr	w3, [sp, #104]
  4139d0:	mov	w1, w0
  4139d4:	ldp	w4, w5, [sp, #116]
  4139d8:	sub	w1, w1, w5
  4139dc:	ldr	x2, [x28, #16]
  4139e0:	cmp	x27, x2
  4139e4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  4139e8:	add	w2, w1, #0x1
  4139ec:	cmp	w2, #0x2
  4139f0:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  4139f4:	ldr	w2, [x28, #24]
  4139f8:	cmp	w1, w2
  4139fc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413a00:	cmp	w0, w4
  413a04:	csel	w0, w0, w4, cs  // cs = hs, nlast
  413a08:	ldr	x2, [sp, #136]
  413a0c:	add	w1, w0, #0x1
  413a10:	mov	w0, w1
  413a14:	add	x2, x2, #0x1
  413a18:	str	x2, [sp, #136]
  413a1c:	ldr	x4, [x27, #16]
  413a20:	sub	w0, w0, w3
  413a24:	cmp	x25, x4
  413a28:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413a2c:	add	w4, w0, #0x1
  413a30:	cmp	w4, #0x2
  413a34:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413a38:	ldr	w4, [x27, #24]
  413a3c:	cmp	w0, w4
  413a40:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413a44:	cmp	w1, w3
  413a48:	add	x2, x2, #0x1
  413a4c:	csel	w1, w1, w3, cs  // cs = hs, nlast
  413a50:	str	x2, [sp, #136]
  413a54:	add	w1, w1, #0x1
  413a58:	mov	w0, w1
  413a5c:	ldr	x3, [x25, #16]
  413a60:	sub	w0, w0, w26
  413a64:	cmp	x24, x3
  413a68:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413a6c:	add	w3, w0, #0x1
  413a70:	cmp	w3, #0x2
  413a74:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413a78:	ldr	w3, [x25, #24]
  413a7c:	cmp	w0, w3
  413a80:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413a84:	cmp	w1, w26
  413a88:	add	x2, x2, #0x1
  413a8c:	csel	w1, w1, w26, cs  // cs = hs, nlast
  413a90:	str	x2, [sp, #136]
  413a94:	add	w1, w1, #0x1
  413a98:	mov	w0, w1
  413a9c:	b	413e64 <ferror@plt+0x114c4>
  413aa0:	mov	w24, #0x0                   	// #0
  413aa4:	ldr	x26, [x25, #8]
  413aa8:	cbz	x26, 413ea4 <ferror@plt+0x11504>
  413aac:	ldr	x28, [x26]
  413ab0:	cbz	x28, 413f08 <ferror@plt+0x11568>
  413ab4:	ldr	x27, [x28]
  413ab8:	cbz	x27, 413fe8 <ferror@plt+0x11648>
  413abc:	ldr	x0, [x27]
  413ac0:	cbz	x0, 4142c4 <ferror@plt+0x11924>
  413ac4:	add	x2, sp, #0x88
  413ac8:	mov	x1, x27
  413acc:	bl	411cb0 <ferror@plt+0xf310>
  413ad0:	mov	w3, w0
  413ad4:	mov	w4, w0
  413ad8:	ldr	x0, [x27, #8]
  413adc:	cbz	x0, 4142b8 <ferror@plt+0x11918>
  413ae0:	mov	x1, x27
  413ae4:	add	x2, sp, #0x88
  413ae8:	str	w3, [sp, #104]
  413aec:	str	w4, [sp, #116]
  413af0:	bl	411cb0 <ferror@plt+0xf310>
  413af4:	ldr	w3, [sp, #104]
  413af8:	mov	w1, w0
  413afc:	ldr	w4, [sp, #116]
  413b00:	ldr	x2, [x27, #16]
  413b04:	sub	w1, w1, w4
  413b08:	cmp	x28, x2
  413b0c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413b10:	add	w2, w1, #0x1
  413b14:	cmp	w2, #0x2
  413b18:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413b1c:	ldr	w2, [x27, #24]
  413b20:	cmp	w1, w2
  413b24:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413b28:	cmp	w0, w3
  413b2c:	ldr	x2, [sp, #136]
  413b30:	csel	w0, w0, w3, cs  // cs = hs, nlast
  413b34:	add	w27, w0, #0x1
  413b38:	add	x2, x2, #0x1
  413b3c:	str	x2, [sp, #136]
  413b40:	ldr	x1, [x28, #8]
  413b44:	cbz	x1, 413fdc <ferror@plt+0x1163c>
  413b48:	ldr	x0, [x1]
  413b4c:	cbz	x0, 4142dc <ferror@plt+0x1193c>
  413b50:	add	x2, sp, #0x88
  413b54:	str	x1, [sp, #104]
  413b58:	bl	411cb0 <ferror@plt+0xf310>
  413b5c:	mov	w3, w0
  413b60:	ldr	x1, [sp, #104]
  413b64:	mov	w5, w0
  413b68:	ldr	x0, [x1, #8]
  413b6c:	cbz	x0, 4142d0 <ferror@plt+0x11930>
  413b70:	add	x2, sp, #0x88
  413b74:	str	x1, [sp, #104]
  413b78:	stp	w3, w5, [sp, #116]
  413b7c:	bl	411cb0 <ferror@plt+0xf310>
  413b80:	ldp	w3, w5, [sp, #116]
  413b84:	mov	w2, w0
  413b88:	ldr	x1, [sp, #104]
  413b8c:	sub	w2, w2, w5
  413b90:	ldr	x4, [x1, #16]
  413b94:	cmp	x28, x4
  413b98:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413b9c:	add	w4, w2, #0x1
  413ba0:	cmp	w4, #0x2
  413ba4:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413ba8:	ldr	w1, [x1, #24]
  413bac:	cmp	w2, w1
  413bb0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413bb4:	cmp	w0, w3
  413bb8:	csel	w0, w0, w3, cs  // cs = hs, nlast
  413bbc:	ldr	x2, [sp, #136]
  413bc0:	add	w1, w0, #0x1
  413bc4:	mov	w0, w1
  413bc8:	add	x2, x2, #0x1
  413bcc:	str	x2, [sp, #136]
  413bd0:	ldr	x3, [x28, #16]
  413bd4:	sub	w0, w0, w27
  413bd8:	cmp	x26, x3
  413bdc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413be0:	add	w3, w0, #0x1
  413be4:	cmp	w3, #0x2
  413be8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413bec:	ldr	w3, [x28, #24]
  413bf0:	cmp	w0, w3
  413bf4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413bf8:	cmp	w1, w27
  413bfc:	add	x2, x2, #0x1
  413c00:	csel	w1, w1, w27, cs  // cs = hs, nlast
  413c04:	str	x2, [sp, #136]
  413c08:	add	w27, w1, #0x1
  413c0c:	ldr	x28, [x26, #8]
  413c10:	cbz	x28, 413f40 <ferror@plt+0x115a0>
  413c14:	ldr	x1, [x28]
  413c18:	cbz	x1, 413fd4 <ferror@plt+0x11634>
  413c1c:	ldr	x0, [x1]
  413c20:	cbz	x0, 41439c <ferror@plt+0x119fc>
  413c24:	add	x2, sp, #0x88
  413c28:	str	x1, [sp, #104]
  413c2c:	bl	411cb0 <ferror@plt+0xf310>
  413c30:	mov	w4, w0
  413c34:	ldr	x1, [sp, #104]
  413c38:	mov	w5, w0
  413c3c:	ldr	x0, [x1, #8]
  413c40:	cbz	x0, 414390 <ferror@plt+0x119f0>
  413c44:	add	x2, sp, #0x88
  413c48:	str	x1, [sp, #104]
  413c4c:	stp	w4, w5, [sp, #116]
  413c50:	bl	411cb0 <ferror@plt+0xf310>
  413c54:	ldp	w4, w5, [sp, #116]
  413c58:	mov	w2, w0
  413c5c:	ldr	x1, [sp, #104]
  413c60:	sub	w2, w2, w5
  413c64:	ldr	x3, [x1, #16]
  413c68:	cmp	x28, x3
  413c6c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413c70:	add	w3, w2, #0x1
  413c74:	cmp	w3, #0x2
  413c78:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413c7c:	ldr	w1, [x1, #24]
  413c80:	cmp	w2, w1
  413c84:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413c88:	cmp	w0, w4
  413c8c:	ldr	x2, [sp, #136]
  413c90:	csel	w0, w0, w4, cs  // cs = hs, nlast
  413c94:	add	w4, w0, #0x1
  413c98:	add	x2, x2, #0x1
  413c9c:	str	x2, [sp, #136]
  413ca0:	ldr	x1, [x28, #8]
  413ca4:	cbz	x1, 413ffc <ferror@plt+0x1165c>
  413ca8:	ldr	x0, [x1]
  413cac:	cbz	x0, 414384 <ferror@plt+0x119e4>
  413cb0:	add	x2, sp, #0x88
  413cb4:	str	x1, [sp, #104]
  413cb8:	str	w4, [sp, #116]
  413cbc:	bl	411cb0 <ferror@plt+0xf310>
  413cc0:	ldr	w4, [sp, #116]
  413cc4:	mov	w5, w0
  413cc8:	ldr	x1, [sp, #104]
  413ccc:	mov	w6, w0
  413cd0:	ldr	x0, [x1, #8]
  413cd4:	cbz	x0, 4141e0 <ferror@plt+0x11840>
  413cd8:	add	x2, sp, #0x88
  413cdc:	str	x1, [sp, #104]
  413ce0:	stp	w4, w5, [sp, #116]
  413ce4:	str	w6, [sp, #124]
  413ce8:	bl	411cb0 <ferror@plt+0xf310>
  413cec:	ldp	w4, w5, [sp, #116]
  413cf0:	mov	w3, w0
  413cf4:	ldr	w6, [sp, #124]
  413cf8:	mov	w2, w0
  413cfc:	ldr	x1, [sp, #104]
  413d00:	sub	w2, w2, w6
  413d04:	ldr	x0, [x1, #16]
  413d08:	cmp	x28, x0
  413d0c:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413d10:	add	w0, w2, #0x1
  413d14:	cmp	w0, #0x2
  413d18:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413d1c:	ldr	w0, [x1, #24]
  413d20:	cmp	w2, w0
  413d24:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413d28:	cmp	w3, w5
  413d2c:	csel	w1, w3, w5, cs  // cs = hs, nlast
  413d30:	ldr	x2, [sp, #136]
  413d34:	add	w1, w1, #0x1
  413d38:	mov	w0, w1
  413d3c:	add	x2, x2, #0x1
  413d40:	str	x2, [sp, #136]
  413d44:	ldr	x3, [x28, #16]
  413d48:	sub	w0, w0, w4
  413d4c:	cmp	x26, x3
  413d50:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413d54:	add	w3, w0, #0x1
  413d58:	cmp	w3, #0x2
  413d5c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413d60:	ldr	w3, [x28, #24]
  413d64:	cmp	w0, w3
  413d68:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413d6c:	cmp	w1, w4
  413d70:	add	x2, x2, #0x1
  413d74:	csel	w1, w1, w4, cs  // cs = hs, nlast
  413d78:	str	x2, [sp, #136]
  413d7c:	add	w1, w1, #0x1
  413d80:	mov	w0, w1
  413d84:	ldr	x3, [x26, #16]
  413d88:	sub	w0, w0, w27
  413d8c:	cmp	x25, x3
  413d90:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413d94:	add	w3, w0, #0x1
  413d98:	cmp	w3, #0x2
  413d9c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413da0:	ldr	w3, [x26, #24]
  413da4:	cmp	w0, w3
  413da8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413dac:	cmp	w1, w27
  413db0:	add	x2, x2, #0x1
  413db4:	csel	w1, w1, w27, cs  // cs = hs, nlast
  413db8:	str	x2, [sp, #136]
  413dbc:	add	w1, w1, #0x1
  413dc0:	mov	w0, w1
  413dc4:	b	413eac <ferror@plt+0x1150c>
  413dc8:	mov	w0, #0x0                   	// #0
  413dcc:	mov	w1, #0x0                   	// #0
  413dd0:	ldr	x3, [x24, #16]
  413dd4:	sub	w0, w0, w23
  413dd8:	cmp	x22, x3
  413ddc:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413de0:	add	w3, w0, #0x1
  413de4:	cmp	w3, #0x2
  413de8:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413dec:	ldr	w3, [x24, #24]
  413df0:	cmp	w0, w3
  413df4:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413df8:	cmp	w1, w23
  413dfc:	add	x2, x2, #0x1
  413e00:	csel	w1, w1, w23, cs  // cs = hs, nlast
  413e04:	str	x2, [sp, #136]
  413e08:	add	w1, w1, #0x1
  413e0c:	mov	w0, w1
  413e10:	b	4130f8 <ferror@plt+0x10758>
  413e14:	mov	w0, #0x0                   	// #0
  413e18:	mov	w1, #0x0                   	// #0
  413e1c:	ldr	x3, [x23, #16]
  413e20:	sub	w0, w0, w21
  413e24:	cmp	x22, x3
  413e28:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413e2c:	add	w3, w0, #0x1
  413e30:	cmp	w3, #0x2
  413e34:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413e38:	ldr	w3, [x23, #24]
  413e3c:	cmp	w0, w3
  413e40:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413e44:	cmp	w1, w21
  413e48:	add	x2, x2, #0x1
  413e4c:	csel	w1, w1, w21, cs  // cs = hs, nlast
  413e50:	str	x2, [sp, #136]
  413e54:	add	w21, w1, #0x1
  413e58:	b	412aec <ferror@plt+0x1014c>
  413e5c:	mov	w0, #0x0                   	// #0
  413e60:	mov	w1, #0x0                   	// #0
  413e64:	ldr	x3, [x24, #16]
  413e68:	sub	w0, w0, w22
  413e6c:	cmp	x23, x3
  413e70:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413e74:	add	w3, w0, #0x1
  413e78:	cmp	w3, #0x2
  413e7c:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413e80:	ldr	w3, [x24, #24]
  413e84:	cmp	w0, w3
  413e88:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413e8c:	cmp	w1, w22
  413e90:	add	x2, x2, #0x1
  413e94:	csel	w1, w1, w22, cs  // cs = hs, nlast
  413e98:	str	x2, [sp, #136]
  413e9c:	add	w22, w1, #0x1
  413ea0:	b	412de4 <ferror@plt+0x10444>
  413ea4:	mov	w0, #0x0                   	// #0
  413ea8:	mov	w1, #0x0                   	// #0
  413eac:	ldr	x3, [x25, #16]
  413eb0:	sub	w0, w0, w24
  413eb4:	cmp	x23, x3
  413eb8:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413ebc:	add	w3, w0, #0x1
  413ec0:	cmp	w3, #0x2
  413ec4:	b.hi	4143e8 <ferror@plt+0x11a48>  // b.pmore
  413ec8:	ldr	w3, [x25, #24]
  413ecc:	cmp	w0, w3
  413ed0:	b.ne	4143e8 <ferror@plt+0x11a48>  // b.any
  413ed4:	cmp	w1, w24
  413ed8:	add	x2, x2, #0x1
  413edc:	csel	w1, w1, w24, cs  // cs = hs, nlast
  413ee0:	str	x2, [sp, #136]
  413ee4:	add	w1, w1, #0x1
  413ee8:	mov	w0, w1
  413eec:	b	413140 <ferror@plt+0x107a0>
  413ef0:	mov	w26, #0x0                   	// #0
  413ef4:	b	4138f0 <ferror@plt+0x10f50>
  413ef8:	mov	w26, #0x0                   	// #0
  413efc:	b	412f4c <ferror@plt+0x105ac>
  413f00:	mov	w25, #0x0                   	// #0
  413f04:	b	412c44 <ferror@plt+0x102a4>
  413f08:	mov	w27, #0x0                   	// #0
  413f0c:	b	413c0c <ferror@plt+0x1126c>
  413f10:	mov	w26, #0x0                   	// #0
  413f14:	b	4135dc <ferror@plt+0x10c3c>
  413f18:	mov	w25, #0x0                   	// #0
  413f1c:	b	4132d8 <ferror@plt+0x10938>
  413f20:	mov	x2, #0x0                   	// #0
  413f24:	mov	w24, #0x0                   	// #0
  413f28:	b	4125f4 <ferror@plt+0xfc54>
  413f2c:	mov	w25, #0x0                   	// #0
  413f30:	b	4128e8 <ferror@plt+0xff48>
  413f34:	mov	w0, #0x0                   	// #0
  413f38:	mov	w1, #0x0                   	// #0
  413f3c:	b	413434 <ferror@plt+0x10a94>
  413f40:	mov	w0, #0x0                   	// #0
  413f44:	mov	w1, #0x0                   	// #0
  413f48:	b	413d84 <ferror@plt+0x113e4>
  413f4c:	mov	w0, #0x0                   	// #0
  413f50:	mov	w1, #0x0                   	// #0
  413f54:	b	413a5c <ferror@plt+0x110bc>
  413f58:	mov	w1, #0x0                   	// #0
  413f5c:	mov	w0, #0x0                   	// #0
  413f60:	b	4130b0 <ferror@plt+0x10710>
  413f64:	mov	w0, #0x0                   	// #0
  413f68:	mov	w1, #0x0                   	// #0
  413f6c:	b	413748 <ferror@plt+0x10da8>
  413f70:	mov	w1, #0x0                   	// #0
  413f74:	mov	w0, #0x0                   	// #0
  413f78:	b	412a44 <ferror@plt+0x100a4>
  413f7c:	mov	w1, #0x0                   	// #0
  413f80:	mov	w0, #0x0                   	// #0
  413f84:	b	412da0 <ferror@plt+0x10400>
  413f88:	mov	w1, #0x0                   	// #0
  413f8c:	mov	w0, #0x0                   	// #0
  413f90:	b	412740 <ferror@plt+0xfda0>
  413f94:	mov	w3, #0x0                   	// #0
  413f98:	b	413984 <ferror@plt+0x10fe4>
  413f9c:	mov	w28, #0x0                   	// #0
  413fa0:	b	412fe0 <ferror@plt+0x10640>
  413fa4:	mov	w1, #0x0                   	// #0
  413fa8:	mov	w0, #0x0                   	// #0
  413fac:	b	412f10 <ferror@plt+0x10570>
  413fb0:	mov	w26, #0x0                   	// #0
  413fb4:	b	412e80 <ferror@plt+0x104e0>
  413fb8:	mov	w0, #0x0                   	// #0
  413fbc:	mov	w1, #0x0                   	// #0
  413fc0:	b	41329c <ferror@plt+0x108fc>
  413fc4:	mov	w25, #0x0                   	// #0
  413fc8:	b	413214 <ferror@plt+0x10874>
  413fcc:	mov	w27, #0x0                   	// #0
  413fd0:	b	413364 <ferror@plt+0x109c4>
  413fd4:	mov	w4, #0x0                   	// #0
  413fd8:	b	413ca0 <ferror@plt+0x11300>
  413fdc:	mov	w0, #0x0                   	// #0
  413fe0:	mov	w1, #0x0                   	// #0
  413fe4:	b	413bd0 <ferror@plt+0x11230>
  413fe8:	mov	w27, #0x0                   	// #0
  413fec:	b	413b40 <ferror@plt+0x111a0>
  413ff0:	mov	w0, #0x0                   	// #0
  413ff4:	mov	w1, #0x0                   	// #0
  413ff8:	b	413a1c <ferror@plt+0x1107c>
  413ffc:	mov	w0, #0x0                   	// #0
  414000:	mov	w1, #0x0                   	// #0
  414004:	b	413d44 <ferror@plt+0x113a4>
  414008:	mov	w27, #0x0                   	// #0
  41400c:	b	412cd0 <ferror@plt+0x10330>
  414010:	mov	w27, #0x0                   	// #0
  414014:	b	412678 <ferror@plt+0xfcd8>
  414018:	mov	w1, #0x0                   	// #0
  41401c:	mov	w0, #0x0                   	// #0
  414020:	b	412700 <ferror@plt+0xfd60>
  414024:	mov	w1, #0x0                   	// #0
  414028:	mov	w0, #0x0                   	// #0
  41402c:	b	4125b8 <ferror@plt+0xfc18>
  414030:	mov	x2, #0x0                   	// #0
  414034:	mov	w24, #0x0                   	// #0
  414038:	b	412538 <ferror@plt+0xfb98>
  41403c:	mov	w1, #0x0                   	// #0
  414040:	mov	w0, #0x0                   	// #0
  414044:	b	413070 <ferror@plt+0x106d0>
  414048:	mov	w0, #0x0                   	// #0
  41404c:	mov	w1, #0x0                   	// #0
  414050:	b	4138b4 <ferror@plt+0x10f14>
  414054:	mov	w26, #0x0                   	// #0
  414058:	b	413824 <ferror@plt+0x10e84>
  41405c:	mov	w1, #0x0                   	// #0
  414060:	mov	w0, #0x0                   	// #0
  414064:	b	412c08 <ferror@plt+0x10268>
  414068:	mov	w25, #0x0                   	// #0
  41406c:	b	412b80 <ferror@plt+0x101e0>
  414070:	mov	w1, #0x0                   	// #0
  414074:	mov	w0, #0x0                   	// #0
  414078:	b	412d60 <ferror@plt+0x103c0>
  41407c:	mov	w3, #0x0                   	// #0
  414080:	b	413670 <ferror@plt+0x10cd0>
  414084:	mov	w27, #0x0                   	// #0
  414088:	b	412974 <ferror@plt+0xffd4>
  41408c:	mov	w1, #0x0                   	// #0
  414090:	mov	w0, #0x0                   	// #0
  414094:	b	4128ac <ferror@plt+0xff0c>
  414098:	mov	w25, #0x0                   	// #0
  41409c:	b	412824 <ferror@plt+0xfe84>
  4140a0:	mov	w1, #0x0                   	// #0
  4140a4:	mov	w0, #0x0                   	// #0
  4140a8:	b	412a04 <ferror@plt+0x10064>
  4140ac:	mov	w0, #0x0                   	// #0
  4140b0:	mov	w1, #0x0                   	// #0
  4140b4:	b	4135a0 <ferror@plt+0x10c00>
  4140b8:	mov	w26, #0x0                   	// #0
  4140bc:	b	413510 <ferror@plt+0x10b70>
  4140c0:	mov	w0, #0x0                   	// #0
  4140c4:	mov	w1, #0x0                   	// #0
  4140c8:	b	4133f4 <ferror@plt+0x10a54>
  4140cc:	mov	w0, #0x0                   	// #0
  4140d0:	mov	w1, #0x0                   	// #0
  4140d4:	b	413708 <ferror@plt+0x10d68>
  4140d8:	mov	w1, #0x0                   	// #0
  4140dc:	mov	w0, #0x0                   	// #0
  4140e0:	b	413324 <ferror@plt+0x10984>
  4140e4:	mov	w3, #0x0                   	// #0
  4140e8:	mov	w28, #0x0                   	// #0
  4140ec:	b	413304 <ferror@plt+0x10964>
  4140f0:	mov	w4, #0x0                   	// #0
  4140f4:	mov	w3, #0x0                   	// #0
  4140f8:	b	413388 <ferror@plt+0x109e8>
  4140fc:	mov	w5, #0x0                   	// #0
  414100:	mov	w4, #0x0                   	// #0
  414104:	b	41369c <ferror@plt+0x10cfc>
  414108:	mov	w1, #0x0                   	// #0
  41410c:	mov	w0, #0x0                   	// #0
  414110:	b	413630 <ferror@plt+0x10c90>
  414114:	mov	w4, #0x0                   	// #0
  414118:	mov	w3, #0x0                   	// #0
  41411c:	b	413608 <ferror@plt+0x10c68>
  414120:	mov	w1, #0x0                   	// #0
  414124:	mov	w0, #0x0                   	// #0
  414128:	b	412c90 <ferror@plt+0x102f0>
  41412c:	mov	w3, #0x0                   	// #0
  414130:	mov	w28, #0x0                   	// #0
  414134:	b	412c70 <ferror@plt+0x102d0>
  414138:	mov	w1, #0x0                   	// #0
  41413c:	mov	w0, #0x0                   	// #0
  414140:	b	412868 <ferror@plt+0xfec8>
  414144:	mov	w3, #0x0                   	// #0
  414148:	mov	w28, #0x0                   	// #0
  41414c:	b	412848 <ferror@plt+0xfea8>
  414150:	mov	w1, #0x0                   	// #0
  414154:	mov	w0, #0x0                   	// #0
  414158:	b	4134d0 <ferror@plt+0x10b30>
  41415c:	mov	w3, #0x0                   	// #0
  414160:	mov	w28, #0x0                   	// #0
  414164:	b	4134b0 <ferror@plt+0x10b10>
  414168:	mov	w4, #0x0                   	// #0
  41416c:	mov	w3, #0x0                   	// #0
  414170:	b	412cf4 <ferror@plt+0x10354>
  414174:	mov	w1, #0x0                   	// #0
  414178:	mov	w0, #0x0                   	// #0
  41417c:	b	4127e4 <ferror@plt+0xfe44>
  414180:	mov	w1, #0x0                   	// #0
  414184:	mov	w0, #0x0                   	// #0
  414188:	b	413870 <ferror@plt+0x10ed0>
  41418c:	mov	w4, #0x0                   	// #0
  414190:	mov	w3, #0x0                   	// #0
  414194:	b	413848 <ferror@plt+0x10ea8>
  414198:	mov	w1, #0x0                   	// #0
  41419c:	mov	w0, #0x0                   	// #0
  4141a0:	b	41355c <ferror@plt+0x10bbc>
  4141a4:	mov	w4, #0x0                   	// #0
  4141a8:	mov	w3, #0x0                   	// #0
  4141ac:	b	413534 <ferror@plt+0x10b94>
  4141b0:	mov	w28, #0x0                   	// #0
  4141b4:	mov	w27, #0x0                   	// #0
  4141b8:	b	4127cc <ferror@plt+0xfe2c>
  4141bc:	mov	w4, #0x0                   	// #0
  4141c0:	mov	w3, #0x0                   	// #0
  4141c4:	b	412998 <ferror@plt+0xfff8>
  4141c8:	mov	w1, #0x0                   	// #0
  4141cc:	mov	w0, #0x0                   	// #0
  4141d0:	b	412934 <ferror@plt+0xff94>
  4141d4:	mov	w3, #0x0                   	// #0
  4141d8:	mov	w28, #0x0                   	// #0
  4141dc:	b	412914 <ferror@plt+0xff74>
  4141e0:	mov	w2, #0x0                   	// #0
  4141e4:	mov	w3, #0x0                   	// #0
  4141e8:	b	413d00 <ferror@plt+0x11360>
  4141ec:	mov	w1, #0x0                   	// #0
  4141f0:	mov	w0, #0x0                   	// #0
  4141f4:	b	4129c0 <ferror@plt+0x10020>
  4141f8:	mov	w1, #0x0                   	// #0
  4141fc:	mov	w0, #0x0                   	// #0
  414200:	b	4126bc <ferror@plt+0xfd1c>
  414204:	mov	w1, #0x0                   	// #0
  414208:	mov	w0, #0x0                   	// #0
  41420c:	b	4139d8 <ferror@plt+0x11038>
  414210:	mov	w1, #0x0                   	// #0
  414214:	mov	w0, #0x0                   	// #0
  414218:	b	412b40 <ferror@plt+0x101a0>
  41421c:	mov	w28, #0x0                   	// #0
  414220:	mov	w27, #0x0                   	// #0
  414224:	b	412b28 <ferror@plt+0x10188>
  414228:	mov	w1, #0x0                   	// #0
  41422c:	mov	w0, #0x0                   	// #0
  414230:	b	4137e4 <ferror@plt+0x10e44>
  414234:	mov	w3, #0x0                   	// #0
  414238:	mov	w28, #0x0                   	// #0
  41423c:	b	4137c4 <ferror@plt+0x10e24>
  414240:	mov	w1, #0x0                   	// #0
  414244:	mov	w0, #0x0                   	// #0
  414248:	b	4133b0 <ferror@plt+0x10a10>
  41424c:	mov	w1, #0x0                   	// #0
  414250:	mov	w0, #0x0                   	// #0
  414254:	b	412d1c <ferror@plt+0x1037c>
  414258:	mov	w1, #0x0                   	// #0
  41425c:	mov	w0, #0x0                   	// #0
  414260:	b	4131d4 <ferror@plt+0x10834>
  414264:	mov	w28, #0x0                   	// #0
  414268:	mov	w27, #0x0                   	// #0
  41426c:	b	4131bc <ferror@plt+0x1081c>
  414270:	mov	w1, #0x0                   	// #0
  414274:	mov	w0, #0x0                   	// #0
  414278:	b	412e40 <ferror@plt+0x104a0>
  41427c:	mov	w3, #0x0                   	// #0
  414280:	mov	w28, #0x0                   	// #0
  414284:	b	412e20 <ferror@plt+0x10480>
  414288:	mov	w2, #0x0                   	// #0
  41428c:	mov	w0, #0x0                   	// #0
  414290:	b	41302c <ferror@plt+0x1068c>
  414294:	mov	w1, #0x0                   	// #0
  414298:	mov	w0, #0x0                   	// #0
  41429c:	b	4136c4 <ferror@plt+0x10d24>
  4142a0:	mov	w1, #0x0                   	// #0
  4142a4:	mov	w0, #0x0                   	// #0
  4142a8:	b	413258 <ferror@plt+0x108b8>
  4142ac:	mov	w3, #0x0                   	// #0
  4142b0:	mov	w28, #0x0                   	// #0
  4142b4:	b	413238 <ferror@plt+0x10898>
  4142b8:	mov	w1, #0x0                   	// #0
  4142bc:	mov	w0, #0x0                   	// #0
  4142c0:	b	413b00 <ferror@plt+0x11160>
  4142c4:	mov	w4, #0x0                   	// #0
  4142c8:	mov	w3, #0x0                   	// #0
  4142cc:	b	413ad8 <ferror@plt+0x11138>
  4142d0:	mov	w2, #0x0                   	// #0
  4142d4:	mov	w0, #0x0                   	// #0
  4142d8:	b	413b8c <ferror@plt+0x111ec>
  4142dc:	mov	w5, #0x0                   	// #0
  4142e0:	mov	w3, #0x0                   	// #0
  4142e4:	b	413b68 <ferror@plt+0x111c8>
  4142e8:	mov	w1, #0x0                   	// #0
  4142ec:	mov	w0, #0x0                   	// #0
  4142f0:	b	412bc4 <ferror@plt+0x10224>
  4142f4:	mov	w3, #0x0                   	// #0
  4142f8:	mov	w28, #0x0                   	// #0
  4142fc:	b	412ba4 <ferror@plt+0x10204>
  414300:	mov	w1, #0x0                   	// #0
  414304:	mov	w0, #0x0                   	// #0
  414308:	b	412ecc <ferror@plt+0x1052c>
  41430c:	mov	w4, #0x0                   	// #0
  414310:	mov	w3, #0x0                   	// #0
  414314:	b	412ea4 <ferror@plt+0x10504>
  414318:	mov	w27, #0x0                   	// #0
  41431c:	mov	w26, #0x0                   	// #0
  414320:	b	4124e0 <ferror@plt+0xfb40>
  414324:	mov	w5, #0x0                   	// #0
  414328:	mov	w3, #0x0                   	// #0
  41432c:	b	413008 <ferror@plt+0x10668>
  414330:	mov	w1, #0x0                   	// #0
  414334:	mov	w0, #0x0                   	// #0
  414338:	b	412fa0 <ferror@plt+0x10600>
  41433c:	mov	w4, #0x0                   	// #0
  414340:	mov	w3, #0x0                   	// #0
  414344:	b	412f78 <ferror@plt+0x105d8>
  414348:	mov	w1, #0x0                   	// #0
  41434c:	mov	w0, #0x0                   	// #0
  414350:	b	412638 <ferror@plt+0xfc98>
  414354:	mov	w28, #0x0                   	// #0
  414358:	mov	w27, #0x0                   	// #0
  41435c:	b	412620 <ferror@plt+0xfc80>
  414360:	mov	w3, #0x0                   	// #0
  414364:	mov	w28, #0x0                   	// #0
  414368:	b	41269c <ferror@plt+0xfcfc>
  41436c:	mov	w1, #0x0                   	// #0
  414370:	mov	w0, #0x0                   	// #0
  414374:	b	4124f8 <ferror@plt+0xfb58>
  414378:	mov	w5, #0x0                   	// #0
  41437c:	mov	w4, #0x0                   	// #0
  414380:	b	4139b0 <ferror@plt+0x11010>
  414384:	mov	w6, #0x0                   	// #0
  414388:	mov	w5, #0x0                   	// #0
  41438c:	b	413cd0 <ferror@plt+0x11330>
  414390:	mov	w2, #0x0                   	// #0
  414394:	mov	w0, #0x0                   	// #0
  414398:	b	413c60 <ferror@plt+0x112c0>
  41439c:	mov	w5, #0x0                   	// #0
  4143a0:	mov	w4, #0x0                   	// #0
  4143a4:	b	413c3c <ferror@plt+0x1129c>
  4143a8:	mov	w1, #0x0                   	// #0
  4143ac:	mov	w0, #0x0                   	// #0
  4143b0:	b	413944 <ferror@plt+0x10fa4>
  4143b4:	mov	w4, #0x0                   	// #0
  4143b8:	mov	w3, #0x0                   	// #0
  4143bc:	b	41391c <ferror@plt+0x10f7c>
  4143c0:	mov	w1, #0x0                   	// #0
  4143c4:	mov	w0, #0x0                   	// #0
  4143c8:	b	412574 <ferror@plt+0xfbd4>
  4143cc:	mov	w28, #0x0                   	// #0
  4143d0:	mov	w27, #0x0                   	// #0
  4143d4:	b	41255c <ferror@plt+0xfbbc>
  4143d8:	stp	x21, x22, [sp, #32]
  4143dc:	stp	x23, x24, [sp, #48]
  4143e0:	stp	x25, x26, [sp, #64]
  4143e4:	stp	x27, x28, [sp, #80]
  4143e8:	bl	4026d0 <abort@plt>
  4143ec:	nop
  4143f0:	ret
  4143f4:	nop
  4143f8:	stp	x29, x30, [sp, #-32]!
  4143fc:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0x3ba8>
  414400:	mov	w0, #0x0                   	// #0
  414404:	mov	x29, sp
  414408:	stp	x19, x20, [sp, #16]
  41440c:	add	x20, x1, #0xb50
  414410:	ldr	x1, [x1, #2896]
  414414:	blr	x1
  414418:	bl	415fb8 <ferror@plt+0x13618>
  41441c:	mov	x19, x0
  414420:	bl	402390 <strlen@plt>
  414424:	mov	x2, x0
  414428:	mov	x1, x19
  41442c:	mov	w0, #0x2                   	// #2
  414430:	ldr	x19, [x20, #8]
  414434:	bl	4026a0 <write@plt>
  414438:	adrp	x1, 41d000 <ferror@plt+0x1a660>
  41443c:	add	x1, x1, #0xf48
  414440:	mov	x2, #0x2                   	// #2
  414444:	mov	w0, w2
  414448:	bl	4026a0 <write@plt>
  41444c:	mov	x0, x19
  414450:	bl	402390 <strlen@plt>
  414454:	mov	x1, x19
  414458:	mov	x2, x0
  41445c:	mov	w0, #0x2                   	// #2
  414460:	bl	4026a0 <write@plt>
  414464:	mov	x2, #0x1                   	// #1
  414468:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x640>
  41446c:	mov	w0, #0x2                   	// #2
  414470:	add	x1, x1, #0x238
  414474:	bl	4026a0 <write@plt>
  414478:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41447c:	ldr	w0, [x0, #868]
  414480:	bl	402370 <_exit@plt>
  414484:	nop
  414488:	stp	x29, x30, [sp, #-208]!
  41448c:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0x3ba8>
  414490:	add	x2, x2, #0xb70
  414494:	mov	x3, #0x4000                	// #16384
  414498:	mov	x29, sp
  41449c:	mov	x1, #0x0                   	// #0
  4144a0:	str	x19, [sp, #16]
  4144a4:	mov	x19, x0
  4144a8:	add	x0, sp, #0x20
  4144ac:	str	x2, [sp, #32]
  4144b0:	str	wzr, [sp, #40]
  4144b4:	str	x3, [sp, #48]
  4144b8:	bl	402360 <sigaltstack@plt>
  4144bc:	cbnz	w0, 414524 <ferror@plt+0x11b84>
  4144c0:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0x3ba8>
  4144c4:	cmp	x19, #0x0
  4144c8:	add	x2, x3, #0xb50
  4144cc:	adrp	x1, 414000 <ferror@plt+0x11660>
  4144d0:	add	x1, x1, #0x3f0
  4144d4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  4144d8:	csel	x19, x1, x19, eq  // eq = none
  4144dc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  4144e0:	add	x1, x1, #0xc60
  4144e4:	str	x19, [x3, #2896]
  4144e8:	add	x0, x0, #0xc50
  4144ec:	str	x0, [x2, #16]
  4144f0:	add	x0, sp, #0x40
  4144f4:	str	x1, [x2, #8]
  4144f8:	bl	402570 <sigemptyset@plt>
  4144fc:	adrp	x3, 414000 <ferror@plt+0x11660>
  414500:	mov	w4, #0x4                   	// #4
  414504:	add	x3, x3, #0x3f8
  414508:	movk	w4, #0xc800, lsl #16
  41450c:	add	x1, sp, #0x38
  414510:	mov	x2, #0x0                   	// #0
  414514:	mov	w0, #0xb                   	// #11
  414518:	str	x3, [sp, #56]
  41451c:	str	w4, [sp, #192]
  414520:	bl	402670 <sigaction@plt>
  414524:	ldr	x19, [sp, #16]
  414528:	ldp	x29, x30, [sp], #208
  41452c:	ret
  414530:	ldrb	w1, [x0]
  414534:	mov	x2, x0
  414538:	mov	x0, #0x0                   	// #0
  41453c:	cbz	w1, 414550 <ferror@plt+0x11bb0>
  414540:	ror	x0, x0, #55
  414544:	add	x0, x0, w1, uxtb
  414548:	ldrb	w1, [x2, #1]!
  41454c:	cbnz	w1, 414540 <ferror@plt+0x11ba0>
  414550:	ret
  414554:	nop
  414558:	stp	x29, x30, [sp, #-16]!
  41455c:	mov	x29, sp
  414560:	bl	402760 <strcmp@plt>
  414564:	cmp	w0, #0x0
  414568:	cset	w0, eq  // eq = none
  41456c:	ldp	x29, x30, [sp], #16
  414570:	ret
  414574:	nop
  414578:	stp	x29, x30, [sp, #-176]!
  41457c:	mov	x29, sp
  414580:	stp	x19, x20, [sp, #16]
  414584:	adrp	x20, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  414588:	ldr	x0, [x20, #2928]
  41458c:	cbz	x0, 4145fc <ferror@plt+0x11c5c>
  414590:	ldr	x1, [x0]
  414594:	add	x8, sp, #0x78
  414598:	ldr	x1, [x1, #160]
  41459c:	blr	x1
  4145a0:	ldp	x0, x1, [sp, #120]
  4145a4:	stp	x0, x1, [sp, #64]
  4145a8:	ldp	x0, x1, [sp, #136]
  4145ac:	stp	x0, x1, [sp, #80]
  4145b0:	ldp	x0, x1, [sp, #152]
  4145b4:	stp	x0, x1, [sp, #96]
  4145b8:	ldr	x0, [sp, #168]
  4145bc:	str	x0, [sp, #112]
  4145c0:	b	4145cc <ferror@plt+0x11c2c>
  4145c4:	ldr	w0, [sp, #120]
  4145c8:	bl	402660 <close@plt>
  4145cc:	ldr	x3, [sp, #64]
  4145d0:	add	x1, sp, #0x78
  4145d4:	add	x0, sp, #0x40
  4145d8:	mov	x2, #0x0                   	// #0
  4145dc:	ldr	x3, [x3, #176]
  4145e0:	blr	x3
  4145e4:	tst	w0, #0xff
  4145e8:	b.ne	4145c4 <ferror@plt+0x11c24>  // b.any
  4145ec:	ldr	x1, [sp, #64]
  4145f0:	add	x0, sp, #0x40
  4145f4:	ldr	x1, [x1, #184]
  4145f8:	blr	x1
  4145fc:	add	x20, x20, #0xb70
  414600:	ldr	x0, [x20, #16]
  414604:	cbz	x0, 41472c <ferror@plt+0x11d8c>
  414608:	mov	x19, #0x0                   	// #0
  41460c:	str	x21, [sp, #32]
  414610:	b	414624 <ferror@plt+0x11c84>
  414614:	ldr	x0, [x20, #16]
  414618:	add	x19, x19, #0x1
  41461c:	cmp	x0, x19
  414620:	b.ls	414728 <ferror@plt+0x11d88>  // b.plast
  414624:	ldr	x0, [x20, #8]
  414628:	ldr	x21, [x0, x19, lsl #3]
  41462c:	cbz	x21, 414614 <ferror@plt+0x11c74>
  414630:	ldr	x0, [x21, #24]
  414634:	add	x8, sp, #0x78
  414638:	ldr	x1, [x0]
  41463c:	ldr	x1, [x1, #160]
  414640:	blr	x1
  414644:	ldp	x0, x1, [sp, #120]
  414648:	stp	x0, x1, [sp, #64]
  41464c:	ldp	x0, x1, [sp, #136]
  414650:	stp	x0, x1, [sp, #80]
  414654:	ldp	x0, x1, [sp, #152]
  414658:	stp	x0, x1, [sp, #96]
  41465c:	ldr	x0, [sp, #168]
  414660:	str	x0, [sp, #112]
  414664:	b	414670 <ferror@plt+0x11cd0>
  414668:	ldr	x0, [sp, #56]
  41466c:	bl	402960 <unlink@plt>
  414670:	ldr	x3, [sp, #64]
  414674:	add	x1, sp, #0x38
  414678:	add	x0, sp, #0x40
  41467c:	mov	x2, #0x0                   	// #0
  414680:	ldr	x3, [x3, #176]
  414684:	blr	x3
  414688:	tst	w0, #0xff
  41468c:	b.ne	414668 <ferror@plt+0x11cc8>  // b.any
  414690:	ldr	x1, [sp, #64]
  414694:	add	x0, sp, #0x40
  414698:	ldr	x1, [x1, #184]
  41469c:	blr	x1
  4146a0:	ldr	x0, [x21, #16]
  4146a4:	add	x8, sp, #0x78
  4146a8:	ldr	x1, [x0]
  4146ac:	ldr	x1, [x1, #160]
  4146b0:	blr	x1
  4146b4:	ldp	x0, x1, [sp, #120]
  4146b8:	stp	x0, x1, [sp, #64]
  4146bc:	ldp	x0, x1, [sp, #136]
  4146c0:	stp	x0, x1, [sp, #80]
  4146c4:	ldp	x0, x1, [sp, #152]
  4146c8:	stp	x0, x1, [sp, #96]
  4146cc:	ldr	x0, [sp, #168]
  4146d0:	str	x0, [sp, #112]
  4146d4:	b	4146e0 <ferror@plt+0x11d40>
  4146d8:	ldr	x0, [sp, #56]
  4146dc:	bl	402780 <rmdir@plt>
  4146e0:	ldr	x3, [sp, #64]
  4146e4:	add	x1, sp, #0x38
  4146e8:	add	x0, sp, #0x40
  4146ec:	mov	x2, #0x0                   	// #0
  4146f0:	ldr	x3, [x3, #176]
  4146f4:	blr	x3
  4146f8:	tst	w0, #0xff
  4146fc:	b.ne	4146d8 <ferror@plt+0x11d38>  // b.any
  414700:	ldr	x1, [sp, #64]
  414704:	add	x0, sp, #0x40
  414708:	add	x19, x19, #0x1
  41470c:	ldr	x1, [x1, #184]
  414710:	blr	x1
  414714:	ldr	x0, [x21]
  414718:	bl	402780 <rmdir@plt>
  41471c:	ldr	x0, [x20, #16]
  414720:	cmp	x0, x19
  414724:	b.hi	414624 <ferror@plt+0x11c84>  // b.pmore
  414728:	ldr	x21, [sp, #32]
  41472c:	ldp	x19, x20, [sp, #16]
  414730:	ldp	x29, x30, [sp], #176
  414734:	ret
  414738:	stp	x29, x30, [sp, #-80]!
  41473c:	mov	x29, sp
  414740:	stp	x19, x20, [sp, #16]
  414744:	adrp	x19, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  414748:	add	x19, x19, #0xb70
  41474c:	stp	x21, x22, [sp, #32]
  414750:	mov	x21, x0
  414754:	mov	x20, x1
  414758:	ldr	x0, [x19, #16]
  41475c:	stp	x23, x24, [sp, #48]
  414760:	and	w22, w2, #0xff
  414764:	stp	x25, x26, [sp, #64]
  414768:	cbz	x0, 41488c <ferror@plt+0x11eec>
  41476c:	mov	x2, #0x0                   	// #0
  414770:	b	414784 <ferror@plt+0x11de4>
  414774:	ldr	x3, [x3, #8]
  414778:	add	x2, x2, #0x1
  41477c:	cmp	x3, x2
  414780:	b.ls	41488c <ferror@plt+0x11eec>  // b.plast
  414784:	ldr	x4, [x19, #8]
  414788:	add	x3, x19, #0x8
  41478c:	lsl	x0, x2, #3
  414790:	ldr	x4, [x4, x2, lsl #3]
  414794:	cbnz	x4, 414774 <ferror@plt+0x11dd4>
  414798:	ldr	x24, [x3]
  41479c:	adds	x24, x24, x0
  4147a0:	b.eq	41488c <ferror@plt+0x11eec>  // b.none
  4147a4:	mov	x0, #0x20                  	// #32
  4147a8:	bl	41ca30 <ferror@plt+0x1a090>
  4147ac:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  4147b0:	mov	x19, x0
  4147b4:	strb	w22, [x0, #8]
  4147b8:	add	x26, x1, #0x4c0
  4147bc:	ldr	x25, [x1, #1216]
  4147c0:	str	xzr, [x19]
  4147c4:	adrp	x23, 414000 <ferror@plt+0x11660>
  4147c8:	adrp	x22, 414000 <ferror@plt+0x11660>
  4147cc:	add	x23, x23, #0x530
  4147d0:	add	x22, x22, #0x558
  4147d4:	mov	x0, x26
  4147d8:	mov	x2, x23
  4147dc:	mov	x1, x22
  4147e0:	mov	w4, #0x0                   	// #0
  4147e4:	mov	x3, #0x0                   	// #0
  4147e8:	blr	x25
  4147ec:	cbz	x0, 414998 <ferror@plt+0x11ff8>
  4147f0:	str	x0, [x19, #16]
  4147f4:	mov	x2, x23
  4147f8:	mov	x1, x22
  4147fc:	mov	x0, x26
  414800:	mov	w4, #0x0                   	// #0
  414804:	mov	x3, #0x0                   	// #0
  414808:	blr	x25
  41480c:	cbz	x0, 414998 <ferror@plt+0x11ff8>
  414810:	str	x0, [x19, #24]
  414814:	mov	x0, #0x1000                	// #4096
  414818:	bl	41cc28 <ferror@plt+0x1a288>
  41481c:	cmp	x20, #0x0
  414820:	mov	x2, x20
  414824:	mov	x3, x21
  414828:	cset	w4, eq  // eq = none
  41482c:	mov	x20, x0
  414830:	mov	x1, #0x1000                	// #4096
  414834:	bl	41b630 <ferror@plt+0x18c90>
  414838:	cbnz	w0, 4148bc <ferror@plt+0x11f1c>
  41483c:	bl	415b78 <ferror@plt+0x131d8>
  414840:	mov	x0, x20
  414844:	bl	4026b0 <mkdtemp@plt>
  414848:	mov	x21, x0
  41484c:	cbz	x0, 414960 <ferror@plt+0x11fc0>
  414850:	str	x0, [x19]
  414854:	str	x19, [x24]
  414858:	bl	415ca8 <ferror@plt+0x13308>
  41485c:	mov	x0, x21
  414860:	bl	41cbb8 <ferror@plt+0x1a218>
  414864:	str	x0, [x19]
  414868:	mov	x0, x20
  41486c:	bl	417a38 <ferror@plt+0x15098>
  414870:	mov	x0, x19
  414874:	ldp	x19, x20, [sp, #16]
  414878:	ldp	x21, x22, [sp, #32]
  41487c:	ldp	x23, x24, [sp, #48]
  414880:	ldp	x25, x26, [sp, #64]
  414884:	ldp	x29, x30, [sp], #80
  414888:	ret
  41488c:	ldr	x23, [x19, #16]
  414890:	ldr	x0, [x19, #24]
  414894:	cmp	x23, x0
  414898:	b.eq	414900 <ferror@plt+0x11f60>  // b.none
  41489c:	ldr	x0, [x19, #8]
  4148a0:	ldr	x24, [x19, #16]
  4148a4:	str	xzr, [x0, x24, lsl #3]
  4148a8:	add	x24, x0, x24, lsl #3
  4148ac:	ldr	x0, [x19, #16]
  4148b0:	add	x0, x0, #0x1
  4148b4:	str	x0, [x19, #16]
  4148b8:	b	4147a4 <ferror@plt+0x11e04>
  4148bc:	bl	402920 <__errno_location@plt>
  4148c0:	mov	x1, x0
  4148c4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4148c8:	mov	w0, #0x0                   	// #0
  4148cc:	add	x2, x2, #0xc70
  4148d0:	ldr	w1, [x1]
  4148d4:	bl	4023e0 <error@plt>
  4148d8:	mov	x0, x20
  4148dc:	mov	x19, #0x0                   	// #0
  4148e0:	bl	417a38 <ferror@plt+0x15098>
  4148e4:	mov	x0, x19
  4148e8:	ldp	x19, x20, [sp, #16]
  4148ec:	ldp	x21, x22, [sp, #32]
  4148f0:	ldp	x23, x24, [sp, #48]
  4148f4:	ldp	x25, x26, [sp, #64]
  4148f8:	ldp	x29, x30, [sp], #80
  4148fc:	ret
  414900:	lsl	x24, x23, #1
  414904:	add	x24, x24, #0x1
  414908:	ldr	x26, [x19, #8]
  41490c:	cmp	xzr, x24, lsr #61
  414910:	cset	x1, ne  // ne = any
  414914:	lsl	x0, x24, #3
  414918:	tbnz	x24, #60, 414998 <ferror@plt+0x11ff8>
  41491c:	cbnz	x1, 414998 <ferror@plt+0x11ff8>
  414920:	bl	41ca30 <ferror@plt+0x1a090>
  414924:	mov	x25, x0
  414928:	cbz	x23, 414988 <ferror@plt+0x11fe8>
  41492c:	add	x23, x26, x23, lsl #3
  414930:	mov	x1, x26
  414934:	mov	x2, x0
  414938:	ldr	x3, [x1], #8
  41493c:	str	x3, [x2], #8
  414940:	cmp	x1, x23
  414944:	b.ne	414938 <ferror@plt+0x11f98>  // b.any
  414948:	str	x25, [x19, #8]
  41494c:	str	x24, [x19, #24]
  414950:	cbz	x26, 41489c <ferror@plt+0x11efc>
  414954:	mov	x0, x26
  414958:	bl	4027c0 <free@plt>
  41495c:	b	41489c <ferror@plt+0x11efc>
  414960:	bl	415ca8 <ferror@plt+0x13308>
  414964:	bl	402920 <__errno_location@plt>
  414968:	mov	x1, x0
  41496c:	mov	x3, x20
  414970:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  414974:	mov	w0, #0x0                   	// #0
  414978:	add	x2, x2, #0xca8
  41497c:	ldr	w1, [x1]
  414980:	bl	4023e0 <error@plt>
  414984:	b	4148d8 <ferror@plt+0x11f38>
  414988:	adrp	x0, 414000 <ferror@plt+0x11660>
  41498c:	add	x0, x0, #0x578
  414990:	bl	4159a8 <ferror@plt+0x13008>
  414994:	b	414948 <ferror@plt+0x11fa8>
  414998:	bl	41cbf8 <ferror@plt+0x1a258>
  41499c:	nop
  4149a0:	stp	x29, x30, [sp, #-48]!
  4149a4:	mov	x29, sp
  4149a8:	stp	x19, x20, [sp, #16]
  4149ac:	mov	x20, x1
  4149b0:	ldr	x19, [x0, #24]
  4149b4:	ldr	x1, [x19]
  4149b8:	ldr	x1, [x1, #16]
  4149bc:	str	x21, [sp, #32]
  4149c0:	mov	x21, x0
  4149c4:	mov	x0, x19
  4149c8:	blr	x1
  4149cc:	mov	x2, x0
  4149d0:	ldr	x4, [x19]
  4149d4:	mov	x0, x19
  4149d8:	mov	x3, x20
  4149dc:	mov	x1, #0x0                   	// #0
  4149e0:	ldr	x4, [x4, #72]
  4149e4:	blr	x4
  4149e8:	cbz	x0, 4149fc <ferror@plt+0x1205c>
  4149ec:	ldp	x19, x20, [sp, #16]
  4149f0:	ldr	x21, [sp, #32]
  4149f4:	ldp	x29, x30, [sp], #48
  4149f8:	ret
  4149fc:	ldr	x19, [x21, #24]
  414a00:	mov	x0, x20
  414a04:	bl	41cbb8 <ferror@plt+0x1a218>
  414a08:	mov	x1, x0
  414a0c:	mov	x0, x19
  414a10:	ldr	x2, [x19]
  414a14:	ldr	x2, [x2, #88]
  414a18:	blr	x2
  414a1c:	cbnz	x0, 4149ec <ferror@plt+0x1204c>
  414a20:	bl	41cbf8 <ferror@plt+0x1a258>
  414a24:	nop
  414a28:	stp	x29, x30, [sp, #-48]!
  414a2c:	mov	x29, sp
  414a30:	stp	x19, x20, [sp, #16]
  414a34:	mov	x20, x1
  414a38:	ldr	x19, [x0, #24]
  414a3c:	mov	x0, x19
  414a40:	ldr	x1, [x19]
  414a44:	ldr	x1, [x1, #16]
  414a48:	blr	x1
  414a4c:	mov	x2, x0
  414a50:	ldr	x4, [x19]
  414a54:	mov	x3, x20
  414a58:	mov	x0, x19
  414a5c:	mov	x1, #0x0                   	// #0
  414a60:	ldr	x4, [x4, #72]
  414a64:	blr	x4
  414a68:	cbz	x0, 414ab4 <ferror@plt+0x12114>
  414a6c:	ldr	x2, [x19]
  414a70:	mov	x20, x0
  414a74:	mov	x1, x0
  414a78:	mov	x0, x19
  414a7c:	ldr	x2, [x2, #24]
  414a80:	str	x21, [sp, #32]
  414a84:	blr	x2
  414a88:	mov	x21, x0
  414a8c:	ldr	x2, [x19]
  414a90:	mov	x1, x20
  414a94:	mov	x0, x19
  414a98:	ldr	x2, [x2, #128]
  414a9c:	blr	x2
  414aa0:	mov	x0, x21
  414aa4:	ldp	x19, x20, [sp, #16]
  414aa8:	ldr	x21, [sp, #32]
  414aac:	ldp	x29, x30, [sp], #48
  414ab0:	b	4027c0 <free@plt>
  414ab4:	ldp	x19, x20, [sp, #16]
  414ab8:	ldp	x29, x30, [sp], #48
  414abc:	ret
  414ac0:	stp	x29, x30, [sp, #-48]!
  414ac4:	mov	x29, sp
  414ac8:	stp	x19, x20, [sp, #16]
  414acc:	mov	x20, x1
  414ad0:	ldr	x19, [x0, #16]
  414ad4:	ldr	x1, [x19]
  414ad8:	ldr	x1, [x1, #16]
  414adc:	str	x21, [sp, #32]
  414ae0:	mov	x21, x0
  414ae4:	mov	x0, x19
  414ae8:	blr	x1
  414aec:	mov	x2, x0
  414af0:	ldr	x4, [x19]
  414af4:	mov	x0, x19
  414af8:	mov	x3, x20
  414afc:	mov	x1, #0x0                   	// #0
  414b00:	ldr	x4, [x4, #72]
  414b04:	blr	x4
  414b08:	cbz	x0, 414b1c <ferror@plt+0x1217c>
  414b0c:	ldp	x19, x20, [sp, #16]
  414b10:	ldr	x21, [sp, #32]
  414b14:	ldp	x29, x30, [sp], #48
  414b18:	ret
  414b1c:	ldr	x19, [x21, #16]
  414b20:	mov	x0, x20
  414b24:	bl	41cbb8 <ferror@plt+0x1a218>
  414b28:	mov	x1, x0
  414b2c:	mov	x0, x19
  414b30:	ldr	x2, [x19]
  414b34:	ldr	x2, [x2, #88]
  414b38:	blr	x2
  414b3c:	cbnz	x0, 414b0c <ferror@plt+0x1216c>
  414b40:	bl	41cbf8 <ferror@plt+0x1a258>
  414b44:	nop
  414b48:	stp	x29, x30, [sp, #-48]!
  414b4c:	mov	x29, sp
  414b50:	stp	x19, x20, [sp, #16]
  414b54:	mov	x20, x1
  414b58:	ldr	x19, [x0, #16]
  414b5c:	mov	x0, x19
  414b60:	ldr	x1, [x19]
  414b64:	ldr	x1, [x1, #16]
  414b68:	blr	x1
  414b6c:	mov	x2, x0
  414b70:	ldr	x4, [x19]
  414b74:	mov	x3, x20
  414b78:	mov	x0, x19
  414b7c:	mov	x1, #0x0                   	// #0
  414b80:	ldr	x4, [x4, #72]
  414b84:	blr	x4
  414b88:	cbz	x0, 414bd4 <ferror@plt+0x12234>
  414b8c:	ldr	x2, [x19]
  414b90:	mov	x20, x0
  414b94:	mov	x1, x0
  414b98:	mov	x0, x19
  414b9c:	ldr	x2, [x2, #24]
  414ba0:	str	x21, [sp, #32]
  414ba4:	blr	x2
  414ba8:	mov	x21, x0
  414bac:	ldr	x2, [x19]
  414bb0:	mov	x1, x20
  414bb4:	mov	x0, x19
  414bb8:	ldr	x2, [x2, #128]
  414bbc:	blr	x2
  414bc0:	mov	x0, x21
  414bc4:	ldp	x19, x20, [sp, #16]
  414bc8:	ldr	x21, [sp, #32]
  414bcc:	ldp	x29, x30, [sp], #48
  414bd0:	b	4027c0 <free@plt>
  414bd4:	ldp	x19, x20, [sp, #16]
  414bd8:	ldp	x29, x30, [sp], #48
  414bdc:	ret
  414be0:	stp	x29, x30, [sp, #-48]!
  414be4:	mov	x29, sp
  414be8:	stp	x19, x20, [sp, #16]
  414bec:	mov	x19, x1
  414bf0:	mov	x20, x0
  414bf4:	mov	x0, x1
  414bf8:	str	x21, [sp, #32]
  414bfc:	mov	w21, #0x0                   	// #0
  414c00:	bl	402960 <unlink@plt>
  414c04:	tbnz	w0, #31, 414c28 <ferror@plt+0x12288>
  414c08:	mov	x1, x19
  414c0c:	mov	x0, x20
  414c10:	bl	414a28 <ferror@plt+0x12088>
  414c14:	mov	w0, w21
  414c18:	ldp	x19, x20, [sp, #16]
  414c1c:	ldr	x21, [sp, #32]
  414c20:	ldp	x29, x30, [sp], #48
  414c24:	ret
  414c28:	ldrb	w0, [x20, #8]
  414c2c:	mov	w21, #0x0                   	// #0
  414c30:	cbz	w0, 414c08 <ferror@plt+0x12268>
  414c34:	bl	402920 <__errno_location@plt>
  414c38:	ldr	w1, [x0]
  414c3c:	cmp	w1, #0x2
  414c40:	b.eq	414c08 <ferror@plt+0x12268>  // b.none
  414c44:	mov	x3, x19
  414c48:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  414c4c:	mov	w0, #0x0                   	// #0
  414c50:	add	x2, x2, #0xce0
  414c54:	mov	w21, #0xffffffff            	// #-1
  414c58:	bl	4023e0 <error@plt>
  414c5c:	b	414c08 <ferror@plt+0x12268>
  414c60:	stp	x29, x30, [sp, #-48]!
  414c64:	mov	x29, sp
  414c68:	stp	x19, x20, [sp, #16]
  414c6c:	mov	x19, x1
  414c70:	mov	x20, x0
  414c74:	mov	x0, x1
  414c78:	str	x21, [sp, #32]
  414c7c:	mov	w21, #0x0                   	// #0
  414c80:	bl	402780 <rmdir@plt>
  414c84:	tbnz	w0, #31, 414ca8 <ferror@plt+0x12308>
  414c88:	mov	x1, x19
  414c8c:	mov	x0, x20
  414c90:	bl	414b48 <ferror@plt+0x121a8>
  414c94:	mov	w0, w21
  414c98:	ldp	x19, x20, [sp, #16]
  414c9c:	ldr	x21, [sp, #32]
  414ca0:	ldp	x29, x30, [sp], #48
  414ca4:	ret
  414ca8:	ldrb	w0, [x20, #8]
  414cac:	mov	w21, #0x0                   	// #0
  414cb0:	cbz	w0, 414c88 <ferror@plt+0x122e8>
  414cb4:	bl	402920 <__errno_location@plt>
  414cb8:	ldr	w1, [x0]
  414cbc:	cmp	w1, #0x2
  414cc0:	b.eq	414c88 <ferror@plt+0x122e8>  // b.none
  414cc4:	mov	x3, x19
  414cc8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  414ccc:	mov	w0, #0x0                   	// #0
  414cd0:	add	x2, x2, #0xd00
  414cd4:	mov	w21, #0xffffffff            	// #-1
  414cd8:	bl	4023e0 <error@plt>
  414cdc:	b	414c88 <ferror@plt+0x122e8>
  414ce0:	stp	x29, x30, [sp, #-192]!
  414ce4:	mov	x29, sp
  414ce8:	stp	x19, x20, [sp, #16]
  414cec:	add	x8, sp, #0x88
  414cf0:	ldr	x20, [x0, #24]
  414cf4:	stp	x21, x22, [sp, #32]
  414cf8:	mov	x21, x0
  414cfc:	mov	x0, x20
  414d00:	mov	w22, #0x0                   	// #0
  414d04:	ldr	x1, [x20]
  414d08:	ldr	x1, [x1, #160]
  414d0c:	str	x23, [sp, #48]
  414d10:	adrp	x23, 420000 <_obstack_memory_used@@Base+0x2640>
  414d14:	add	x23, x23, #0xce0
  414d18:	blr	x1
  414d1c:	ldp	x0, x1, [sp, #152]
  414d20:	stp	x0, x1, [sp, #96]
  414d24:	ldp	x2, x3, [sp, #136]
  414d28:	stp	x2, x3, [sp, #80]
  414d2c:	ldp	x2, x3, [sp, #168]
  414d30:	stp	x2, x3, [sp, #112]
  414d34:	ldr	x0, [sp, #184]
  414d38:	str	x0, [sp, #128]
  414d3c:	b	414d5c <ferror@plt+0x123bc>
  414d40:	ldr	x2, [x20]
  414d44:	mov	x0, x20
  414d48:	ldr	x1, [sp, #72]
  414d4c:	ldr	x2, [x2, #128]
  414d50:	blr	x2
  414d54:	mov	x0, x19
  414d58:	bl	4027c0 <free@plt>
  414d5c:	ldr	x3, [sp, #80]
  414d60:	add	x2, sp, #0x48
  414d64:	add	x1, sp, #0x40
  414d68:	add	x0, sp, #0x50
  414d6c:	ldr	x3, [x3, #176]
  414d70:	blr	x3
  414d74:	tst	w0, #0xff
  414d78:	b.eq	414dbc <ferror@plt+0x1241c>  // b.none
  414d7c:	ldr	x19, [sp, #64]
  414d80:	mov	x0, x19
  414d84:	bl	402960 <unlink@plt>
  414d88:	tbz	w0, #31, 414d40 <ferror@plt+0x123a0>
  414d8c:	ldrb	w0, [x21, #8]
  414d90:	cbz	w0, 414d40 <ferror@plt+0x123a0>
  414d94:	bl	402920 <__errno_location@plt>
  414d98:	ldr	w1, [x0]
  414d9c:	cmp	w1, #0x2
  414da0:	b.eq	414d40 <ferror@plt+0x123a0>  // b.none
  414da4:	mov	x3, x19
  414da8:	mov	x2, x23
  414dac:	mov	w22, #0xffffffff            	// #-1
  414db0:	mov	w0, #0x0                   	// #0
  414db4:	bl	4023e0 <error@plt>
  414db8:	b	414d40 <ferror@plt+0x123a0>
  414dbc:	ldr	x1, [sp, #80]
  414dc0:	add	x0, sp, #0x50
  414dc4:	adrp	x23, 420000 <_obstack_memory_used@@Base+0x2640>
  414dc8:	add	x23, x23, #0xd00
  414dcc:	ldr	x1, [x1, #184]
  414dd0:	blr	x1
  414dd4:	ldr	x20, [x21, #16]
  414dd8:	add	x8, sp, #0x88
  414ddc:	mov	x0, x20
  414de0:	ldr	x1, [x20]
  414de4:	ldr	x1, [x1, #160]
  414de8:	blr	x1
  414dec:	ldp	x0, x1, [sp, #152]
  414df0:	stp	x0, x1, [sp, #96]
  414df4:	ldp	x2, x3, [sp, #136]
  414df8:	stp	x2, x3, [sp, #80]
  414dfc:	ldp	x2, x3, [sp, #168]
  414e00:	stp	x2, x3, [sp, #112]
  414e04:	ldr	x0, [sp, #184]
  414e08:	str	x0, [sp, #128]
  414e0c:	b	414e2c <ferror@plt+0x1248c>
  414e10:	ldr	x2, [x20]
  414e14:	mov	x0, x20
  414e18:	ldr	x1, [sp, #72]
  414e1c:	ldr	x2, [x2, #128]
  414e20:	blr	x2
  414e24:	mov	x0, x19
  414e28:	bl	4027c0 <free@plt>
  414e2c:	ldr	x3, [sp, #80]
  414e30:	add	x2, sp, #0x48
  414e34:	add	x1, sp, #0x40
  414e38:	add	x0, sp, #0x50
  414e3c:	ldr	x3, [x3, #176]
  414e40:	blr	x3
  414e44:	tst	w0, #0xff
  414e48:	b.eq	414e8c <ferror@plt+0x124ec>  // b.none
  414e4c:	ldr	x19, [sp, #64]
  414e50:	mov	x0, x19
  414e54:	bl	402780 <rmdir@plt>
  414e58:	tbz	w0, #31, 414e10 <ferror@plt+0x12470>
  414e5c:	ldrb	w0, [x21, #8]
  414e60:	cbz	w0, 414e10 <ferror@plt+0x12470>
  414e64:	bl	402920 <__errno_location@plt>
  414e68:	ldr	w1, [x0]
  414e6c:	cmp	w1, #0x2
  414e70:	b.eq	414e10 <ferror@plt+0x12470>  // b.none
  414e74:	mov	x3, x19
  414e78:	mov	x2, x23
  414e7c:	mov	w22, #0xffffffff            	// #-1
  414e80:	mov	w0, #0x0                   	// #0
  414e84:	bl	4023e0 <error@plt>
  414e88:	b	414e10 <ferror@plt+0x12470>
  414e8c:	ldr	x1, [sp, #80]
  414e90:	add	x0, sp, #0x50
  414e94:	ldr	x1, [x1, #184]
  414e98:	blr	x1
  414e9c:	mov	w0, w22
  414ea0:	ldp	x19, x20, [sp, #16]
  414ea4:	ldp	x21, x22, [sp, #32]
  414ea8:	ldr	x23, [sp, #48]
  414eac:	ldp	x29, x30, [sp], #192
  414eb0:	ret
  414eb4:	nop
  414eb8:	stp	x29, x30, [sp, #-48]!
  414ebc:	mov	x29, sp
  414ec0:	stp	x19, x20, [sp, #16]
  414ec4:	mov	x20, x0
  414ec8:	str	x21, [sp, #32]
  414ecc:	bl	414ce0 <ferror@plt+0x12340>
  414ed0:	ldr	x21, [x20]
  414ed4:	mov	w19, w0
  414ed8:	mov	x0, x21
  414edc:	bl	402780 <rmdir@plt>
  414ee0:	tbnz	w0, #31, 414f7c <ferror@plt+0x125dc>
  414ee4:	adrp	x3, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  414ee8:	add	x3, x3, #0xb70
  414eec:	ldr	x0, [x3, #16]
  414ef0:	cbz	x0, 414fdc <ferror@plt+0x1263c>
  414ef4:	mov	x1, #0x0                   	// #0
  414ef8:	b	414f04 <ferror@plt+0x12564>
  414efc:	cmp	x0, x1
  414f00:	b.ls	414fdc <ferror@plt+0x1263c>  // b.plast
  414f04:	ldr	x6, [x3, #8]
  414f08:	add	x5, x3, #0x8
  414f0c:	mov	x2, x1
  414f10:	lsl	x4, x1, #3
  414f14:	ldr	x6, [x6, x1, lsl #3]
  414f18:	add	x1, x1, #0x1
  414f1c:	ldr	x0, [x5, #8]
  414f20:	cmp	x6, x20
  414f24:	b.ne	414efc <ferror@plt+0x1255c>  // b.any
  414f28:	cmp	x0, x1
  414f2c:	b.eq	414fb0 <ferror@plt+0x12610>  // b.none
  414f30:	ldr	x0, [x5]
  414f34:	str	xzr, [x0, x4]
  414f38:	ldr	x0, [x20, #24]
  414f3c:	ldr	x1, [x0]
  414f40:	ldr	x1, [x1, #152]
  414f44:	blr	x1
  414f48:	ldr	x0, [x20, #16]
  414f4c:	ldr	x1, [x0]
  414f50:	ldr	x1, [x1, #152]
  414f54:	blr	x1
  414f58:	ldr	x0, [x20]
  414f5c:	bl	4027c0 <free@plt>
  414f60:	mov	x0, x20
  414f64:	bl	4027c0 <free@plt>
  414f68:	mov	w0, w19
  414f6c:	ldp	x19, x20, [sp, #16]
  414f70:	ldr	x21, [sp, #32]
  414f74:	ldp	x29, x30, [sp], #48
  414f78:	ret
  414f7c:	ldrb	w0, [x20, #8]
  414f80:	cbz	w0, 414ee4 <ferror@plt+0x12544>
  414f84:	bl	402920 <__errno_location@plt>
  414f88:	ldr	w1, [x0]
  414f8c:	cmp	w1, #0x2
  414f90:	b.eq	414ee4 <ferror@plt+0x12544>  // b.none
  414f94:	mov	x3, x21
  414f98:	mov	w19, #0xffffffff            	// #-1
  414f9c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  414fa0:	mov	w0, #0x0                   	// #0
  414fa4:	add	x2, x2, #0xd00
  414fa8:	bl	4023e0 <error@plt>
  414fac:	b	414ee4 <ferror@plt+0x12544>
  414fb0:	cbz	x2, 414fd4 <ferror@plt+0x12634>
  414fb4:	sub	x4, x4, #0x8
  414fb8:	b	414fc8 <ferror@plt+0x12628>
  414fbc:	sub	x4, x4, #0x8
  414fc0:	subs	x2, x2, #0x1
  414fc4:	b.eq	414fd4 <ferror@plt+0x12634>  // b.none
  414fc8:	ldr	x0, [x3, #8]
  414fcc:	ldr	x0, [x0, x4]
  414fd0:	cbz	x0, 414fbc <ferror@plt+0x1261c>
  414fd4:	str	x2, [x3, #16]
  414fd8:	b	414f38 <ferror@plt+0x12598>
  414fdc:	bl	4026d0 <abort@plt>
  414fe0:	stp	x29, x30, [sp, #-48]!
  414fe4:	mov	x29, sp
  414fe8:	stp	x19, x20, [sp, #16]
  414fec:	mov	x19, x0
  414ff0:	mov	w20, w1
  414ff4:	stp	x21, x22, [sp, #32]
  414ff8:	mov	w21, w2
  414ffc:	bl	415b78 <ferror@plt+0x131d8>
  415000:	mov	w2, w21
  415004:	mov	w1, w20
  415008:	mov	x0, x19
  41500c:	bl	402540 <open@plt>
  415010:	mov	w19, w0
  415014:	bl	402920 <__errno_location@plt>
  415018:	ldr	w21, [x0]
  41501c:	mov	x20, x0
  415020:	tbz	w19, #31, 415040 <ferror@plt+0x126a0>
  415024:	bl	415ca8 <ferror@plt+0x13308>
  415028:	str	w21, [x20]
  41502c:	mov	w0, w19
  415030:	ldp	x19, x20, [sp, #16]
  415034:	ldp	x21, x22, [sp, #32]
  415038:	ldp	x29, x30, [sp], #48
  41503c:	ret
  415040:	adrp	x22, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415044:	ldr	x0, [x22, #2928]
  415048:	cbz	x0, 415068 <ferror@plt+0x126c8>
  41504c:	ldr	x0, [x22, #2928]
  415050:	sxtw	x1, w19
  415054:	ldr	x2, [x0]
  415058:	ldr	x2, [x2, #88]
  41505c:	blr	x2
  415060:	cbnz	x0, 415024 <ferror@plt+0x12684>
  415064:	bl	41cbf8 <ferror@plt+0x1a258>
  415068:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  41506c:	mov	w4, #0x0                   	// #0
  415070:	add	x0, x1, #0x4c0
  415074:	mov	x3, #0x0                   	// #0
  415078:	ldr	x5, [x1, #1216]
  41507c:	mov	x2, #0x0                   	// #0
  415080:	mov	x1, #0x0                   	// #0
  415084:	blr	x5
  415088:	cbz	x0, 415064 <ferror@plt+0x126c4>
  41508c:	str	x0, [x22, #2928]
  415090:	b	41504c <ferror@plt+0x126ac>
  415094:	nop
  415098:	stp	x29, x30, [sp, #-64]!
  41509c:	mov	x29, sp
  4150a0:	stp	x19, x20, [sp, #16]
  4150a4:	mov	x19, x0
  4150a8:	mov	x20, x1
  4150ac:	str	x23, [sp, #48]
  4150b0:	bl	415b78 <ferror@plt+0x131d8>
  4150b4:	mov	x1, x20
  4150b8:	mov	x0, x19
  4150bc:	bl	415ef0 <ferror@plt+0x13550>
  4150c0:	mov	x19, x0
  4150c4:	bl	402920 <__errno_location@plt>
  4150c8:	ldr	w23, [x0]
  4150cc:	mov	x20, x0
  4150d0:	cbz	x19, 415110 <ferror@plt+0x12770>
  4150d4:	mov	x0, x19
  4150d8:	stp	x21, x22, [sp, #32]
  4150dc:	bl	4024c0 <fileno@plt>
  4150e0:	mov	w21, w0
  4150e4:	tbnz	w0, #31, 41515c <ferror@plt+0x127bc>
  4150e8:	adrp	x22, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  4150ec:	ldr	x0, [x22, #2928]
  4150f0:	cbz	x0, 41512c <ferror@plt+0x1278c>
  4150f4:	ldr	x0, [x22, #2928]
  4150f8:	sxtw	x1, w21
  4150fc:	ldr	x2, [x0]
  415100:	ldr	x2, [x2, #88]
  415104:	blr	x2
  415108:	cbz	x0, 415158 <ferror@plt+0x127b8>
  41510c:	ldp	x21, x22, [sp, #32]
  415110:	bl	415ca8 <ferror@plt+0x13308>
  415114:	str	w23, [x20]
  415118:	mov	x0, x19
  41511c:	ldp	x19, x20, [sp, #16]
  415120:	ldr	x23, [sp, #48]
  415124:	ldp	x29, x30, [sp], #64
  415128:	ret
  41512c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  415130:	mov	w4, #0x0                   	// #0
  415134:	add	x0, x1, #0x4c0
  415138:	mov	x3, #0x0                   	// #0
  41513c:	ldr	x5, [x1, #1216]
  415140:	mov	x2, #0x0                   	// #0
  415144:	mov	x1, #0x0                   	// #0
  415148:	blr	x5
  41514c:	cbz	x0, 415158 <ferror@plt+0x127b8>
  415150:	str	x0, [x22, #2928]
  415154:	b	4150f4 <ferror@plt+0x12754>
  415158:	bl	41cbf8 <ferror@plt+0x1a258>
  41515c:	bl	4026d0 <abort@plt>
  415160:	tbnz	w0, #31, 4151fc <ferror@plt+0x1285c>
  415164:	stp	x29, x30, [sp, #-64]!
  415168:	mov	x29, sp
  41516c:	stp	x19, x20, [sp, #16]
  415170:	mov	w20, w0
  415174:	stp	x21, x22, [sp, #32]
  415178:	str	x23, [sp, #48]
  41517c:	bl	402660 <close@plt>
  415180:	mov	w22, w0
  415184:	bl	402920 <__errno_location@plt>
  415188:	adrp	x1, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  41518c:	ldr	w23, [x0]
  415190:	mov	x21, x0
  415194:	ldr	x19, [x1, #2928]
  415198:	cbz	x19, 415200 <ferror@plt+0x12860>
  41519c:	ldr	x1, [x19]
  4151a0:	mov	x0, x19
  4151a4:	ldr	x1, [x1, #16]
  4151a8:	blr	x1
  4151ac:	mov	x2, x0
  4151b0:	ldr	x4, [x19]
  4151b4:	mov	x1, #0x0                   	// #0
  4151b8:	sxtw	x3, w20
  4151bc:	mov	x0, x19
  4151c0:	ldr	x4, [x4, #72]
  4151c4:	blr	x4
  4151c8:	mov	x1, x0
  4151cc:	cbz	x0, 415200 <ferror@plt+0x12860>
  4151d0:	ldr	x2, [x19]
  4151d4:	mov	x0, x19
  4151d8:	ldr	x2, [x2, #128]
  4151dc:	blr	x2
  4151e0:	ldp	x19, x20, [sp, #16]
  4151e4:	str	w23, [x21]
  4151e8:	mov	w0, w22
  4151ec:	ldp	x21, x22, [sp, #32]
  4151f0:	ldr	x23, [sp, #48]
  4151f4:	ldp	x29, x30, [sp], #64
  4151f8:	ret
  4151fc:	b	402660 <close@plt>
  415200:	bl	4026d0 <abort@plt>
  415204:	nop
  415208:	stp	x29, x30, [sp, #-64]!
  41520c:	mov	x29, sp
  415210:	stp	x19, x20, [sp, #16]
  415214:	mov	x19, x0
  415218:	stp	x21, x22, [sp, #32]
  41521c:	str	x23, [sp, #48]
  415220:	bl	4024c0 <fileno@plt>
  415224:	mov	w22, w0
  415228:	mov	x0, x19
  41522c:	bl	41d200 <ferror@plt+0x1a860>
  415230:	mov	w21, w0
  415234:	bl	402920 <__errno_location@plt>
  415238:	ldr	w23, [x0]
  41523c:	adrp	x1, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415240:	ldr	x19, [x1, #2928]
  415244:	cbz	x19, 4152ac <ferror@plt+0x1290c>
  415248:	ldr	x1, [x19]
  41524c:	mov	x20, x0
  415250:	mov	x0, x19
  415254:	ldr	x1, [x1, #16]
  415258:	blr	x1
  41525c:	mov	x2, x0
  415260:	ldr	x4, [x19]
  415264:	mov	x1, #0x0                   	// #0
  415268:	sxtw	x3, w22
  41526c:	mov	x0, x19
  415270:	ldr	x4, [x4, #72]
  415274:	blr	x4
  415278:	mov	x1, x0
  41527c:	cbz	x0, 4152ac <ferror@plt+0x1290c>
  415280:	ldr	x2, [x19]
  415284:	mov	x0, x19
  415288:	ldr	x2, [x2, #128]
  41528c:	blr	x2
  415290:	mov	w0, w21
  415294:	ldp	x21, x22, [sp, #32]
  415298:	str	w23, [x20]
  41529c:	ldp	x19, x20, [sp, #16]
  4152a0:	ldr	x23, [sp, #48]
  4152a4:	ldp	x29, x30, [sp], #64
  4152a8:	ret
  4152ac:	bl	4026d0 <abort@plt>
  4152b0:	stp	x29, x30, [sp, #-64]!
  4152b4:	mov	x29, sp
  4152b8:	stp	x19, x20, [sp, #16]
  4152bc:	mov	x19, x0
  4152c0:	stp	x21, x22, [sp, #32]
  4152c4:	str	x23, [sp, #48]
  4152c8:	bl	4024c0 <fileno@plt>
  4152cc:	mov	w22, w0
  4152d0:	mov	x0, x19
  4152d4:	bl	4153d8 <ferror@plt+0x12a38>
  4152d8:	mov	w21, w0
  4152dc:	bl	402920 <__errno_location@plt>
  4152e0:	ldr	w23, [x0]
  4152e4:	adrp	x1, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  4152e8:	ldr	x19, [x1, #2928]
  4152ec:	cbz	x19, 415354 <ferror@plt+0x129b4>
  4152f0:	ldr	x1, [x19]
  4152f4:	mov	x20, x0
  4152f8:	mov	x0, x19
  4152fc:	ldr	x1, [x1, #16]
  415300:	blr	x1
  415304:	mov	x2, x0
  415308:	ldr	x4, [x19]
  41530c:	mov	x1, #0x0                   	// #0
  415310:	sxtw	x3, w22
  415314:	mov	x0, x19
  415318:	ldr	x4, [x4, #72]
  41531c:	blr	x4
  415320:	mov	x1, x0
  415324:	cbz	x0, 415354 <ferror@plt+0x129b4>
  415328:	ldr	x2, [x19]
  41532c:	mov	x0, x19
  415330:	ldr	x2, [x2, #128]
  415334:	blr	x2
  415338:	mov	w0, w21
  41533c:	ldp	x21, x22, [sp, #32]
  415340:	str	w23, [x20]
  415344:	ldp	x19, x20, [sp, #16]
  415348:	ldr	x23, [sp, #48]
  41534c:	ldp	x29, x30, [sp], #64
  415350:	ret
  415354:	bl	4026d0 <abort@plt>
  415358:	stp	x29, x30, [sp, #-32]!
  41535c:	mov	w2, #0x0                   	// #0
  415360:	mov	x29, sp
  415364:	stp	x19, x20, [sp, #16]
  415368:	and	w20, w1, #0xff
  41536c:	mov	w19, w0
  415370:	mov	w1, #0x1                   	// #1
  415374:	bl	41d290 <ferror@plt+0x1a8f0>
  415378:	tbnz	w0, #31, 4153bc <ferror@plt+0x12a1c>
  41537c:	cmp	w20, #0x0
  415380:	orr	w3, w0, #0x1
  415384:	and	w2, w0, #0xfffffffe
  415388:	mov	w1, w0
  41538c:	csel	w2, w2, w3, eq  // eq = none
  415390:	mov	w0, #0x0                   	// #0
  415394:	cmp	w2, w1
  415398:	b.eq	4153b0 <ferror@plt+0x12a10>  // b.none
  41539c:	mov	w0, w19
  4153a0:	mov	w1, #0x2                   	// #2
  4153a4:	bl	41d290 <ferror@plt+0x1a8f0>
  4153a8:	cmn	w0, #0x1
  4153ac:	csetm	w0, eq  // eq = none
  4153b0:	ldp	x19, x20, [sp, #16]
  4153b4:	ldp	x29, x30, [sp], #32
  4153b8:	ret
  4153bc:	mov	w0, #0xffffffff            	// #-1
  4153c0:	b	4153b0 <ferror@plt+0x12a10>
  4153c4:	nop
  4153c8:	mov	w2, #0x0                   	// #0
  4153cc:	mov	w1, #0x406                 	// #1030
  4153d0:	b	41d290 <ferror@plt+0x1a8f0>
  4153d4:	nop
  4153d8:	stp	x29, x30, [sp, #-32]!
  4153dc:	mov	x29, sp
  4153e0:	stp	x19, x20, [sp, #16]
  4153e4:	mov	x19, x0
  4153e8:	bl	4024b0 <__fpending@plt>
  4153ec:	mov	x20, x0
  4153f0:	mov	x0, x19
  4153f4:	ldr	w19, [x19]
  4153f8:	and	w19, w19, #0x20
  4153fc:	bl	41d200 <ferror@plt+0x1a860>
  415400:	cbnz	w19, 415428 <ferror@plt+0x12a88>
  415404:	cbz	w0, 41541c <ferror@plt+0x12a7c>
  415408:	cbnz	x20, 415440 <ferror@plt+0x12aa0>
  41540c:	bl	402920 <__errno_location@plt>
  415410:	ldr	w0, [x0]
  415414:	cmp	w0, #0x9
  415418:	csetm	w0, ne  // ne = any
  41541c:	ldp	x19, x20, [sp, #16]
  415420:	ldp	x29, x30, [sp], #32
  415424:	ret
  415428:	cbnz	w0, 415440 <ferror@plt+0x12aa0>
  41542c:	bl	402920 <__errno_location@plt>
  415430:	mov	x1, x0
  415434:	mov	w0, #0xffffffff            	// #-1
  415438:	str	wzr, [x1]
  41543c:	b	41541c <ferror@plt+0x12a7c>
  415440:	mov	w0, #0xffffffff            	// #-1
  415444:	b	41541c <ferror@plt+0x12a7c>
  415448:	adrp	x1, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  41544c:	str	x0, [x1, #2960]
  415450:	ret
  415454:	nop
  415458:	stp	x29, x30, [sp, #-32]!
  41545c:	mov	x29, sp
  415460:	stp	x19, x20, [sp, #16]
  415464:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  415468:	ldr	x19, [x20, #1096]
  41546c:	mov	x0, x19
  415470:	bl	41d430 <ferror@plt+0x1aa90>
  415474:	cbnz	x0, 4154d0 <ferror@plt+0x12b30>
  415478:	mov	x0, x19
  41547c:	bl	4153d8 <ferror@plt+0x12a38>
  415480:	cbz	w0, 4154f0 <ferror@plt+0x12b50>
  415484:	adrp	x0, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415488:	ldr	x19, [x0, #2960]
  41548c:	bl	402920 <__errno_location@plt>
  415490:	ldr	w20, [x0]
  415494:	cbz	x19, 4154fc <ferror@plt+0x12b5c>
  415498:	mov	x0, x19
  41549c:	bl	41a270 <ferror@plt+0x178d0>
  4154a0:	adrp	x4, 420000 <_obstack_memory_used@@Base+0x2640>
  4154a4:	mov	x3, x0
  4154a8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4154ac:	mov	w1, w20
  4154b0:	add	x4, x4, #0xd28
  4154b4:	add	x2, x2, #0xd40
  4154b8:	mov	w0, #0x0                   	// #0
  4154bc:	bl	4023e0 <error@plt>
  4154c0:	bl	415558 <ferror@plt+0x12bb8>
  4154c4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4154c8:	ldr	w0, [x0, #868]
  4154cc:	bl	402370 <_exit@plt>
  4154d0:	mov	x0, x19
  4154d4:	mov	w2, #0x1                   	// #1
  4154d8:	mov	x1, #0x0                   	// #0
  4154dc:	bl	41d470 <ferror@plt+0x1aad0>
  4154e0:	cbz	w0, 41551c <ferror@plt+0x12b7c>
  4154e4:	ldr	x0, [x20, #1096]
  4154e8:	bl	4153d8 <ferror@plt+0x12a38>
  4154ec:	cbnz	w0, 415484 <ferror@plt+0x12ae4>
  4154f0:	ldp	x19, x20, [sp, #16]
  4154f4:	ldp	x29, x30, [sp], #32
  4154f8:	b	415558 <ferror@plt+0x12bb8>
  4154fc:	mov	w1, w20
  415500:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  415504:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  415508:	add	x3, x3, #0xd28
  41550c:	add	x2, x2, #0x150
  415510:	mov	w0, #0x0                   	// #0
  415514:	bl	4023e0 <error@plt>
  415518:	b	4154c0 <ferror@plt+0x12b20>
  41551c:	ldr	x0, [x20, #1096]
  415520:	bl	41d3d8 <ferror@plt+0x1aa38>
  415524:	cbz	w0, 4154e4 <ferror@plt+0x12b44>
  415528:	ldr	x0, [x20, #1096]
  41552c:	bl	4153d8 <ferror@plt+0x12a38>
  415530:	b	415484 <ferror@plt+0x12ae4>
  415534:	nop
  415538:	adrp	x1, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  41553c:	str	x0, [x1, #2968]
  415540:	ret
  415544:	nop
  415548:	adrp	x1, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  41554c:	strb	w0, [x1, #2976]
  415550:	ret
  415554:	nop
  415558:	stp	x29, x30, [sp, #-48]!
  41555c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  415560:	mov	x29, sp
  415564:	ldr	x0, [x0, #1088]
  415568:	bl	4153d8 <ferror@plt+0x12a38>
  41556c:	cbz	w0, 4155a0 <ferror@plt+0x12c00>
  415570:	stp	x19, x20, [sp, #16]
  415574:	adrp	x19, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415578:	add	x0, x19, #0xb98
  41557c:	ldrb	w20, [x0, #8]
  415580:	str	x21, [sp, #32]
  415584:	bl	402920 <__errno_location@plt>
  415588:	ldr	w21, [x0]
  41558c:	cbz	w20, 4155b8 <ferror@plt+0x12c18>
  415590:	cmp	w21, #0x20
  415594:	b.ne	4155b8 <ferror@plt+0x12c18>  // b.any
  415598:	ldp	x19, x20, [sp, #16]
  41559c:	ldr	x21, [sp, #32]
  4155a0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4155a4:	ldr	x0, [x0, #1064]
  4155a8:	bl	4153d8 <ferror@plt+0x12a38>
  4155ac:	cbnz	w0, 4155f0 <ferror@plt+0x12c50>
  4155b0:	ldp	x29, x30, [sp], #48
  4155b4:	ret
  4155b8:	ldr	x0, [x19, #2968]
  4155bc:	cbz	x0, 4155fc <ferror@plt+0x12c5c>
  4155c0:	bl	41a270 <ferror@plt+0x178d0>
  4155c4:	mov	x3, x0
  4155c8:	adrp	x4, 420000 <_obstack_memory_used@@Base+0x2640>
  4155cc:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4155d0:	mov	w1, w21
  4155d4:	add	x4, x4, #0xd48
  4155d8:	add	x2, x2, #0xd40
  4155dc:	mov	w0, #0x0                   	// #0
  4155e0:	bl	4023e0 <error@plt>
  4155e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  4155e8:	ldr	w0, [x0, #868]
  4155ec:	bl	402370 <_exit@plt>
  4155f0:	stp	x19, x20, [sp, #16]
  4155f4:	str	x21, [sp, #32]
  4155f8:	b	4155e4 <ferror@plt+0x12c44>
  4155fc:	mov	w1, w21
  415600:	adrp	x3, 420000 <_obstack_memory_used@@Base+0x2640>
  415604:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  415608:	add	x3, x3, #0xd48
  41560c:	add	x2, x2, #0x150
  415610:	mov	w0, #0x0                   	// #0
  415614:	bl	4023e0 <error@plt>
  415618:	b	4155e4 <ferror@plt+0x12c44>
  41561c:	nop
  415620:	sub	sp, sp, #0x2a0
  415624:	stp	x29, x30, [sp]
  415628:	mov	x29, sp
  41562c:	stp	x19, x20, [sp, #16]
  415630:	mov	x20, x0
  415634:	and	w19, w6, #0xff
  415638:	stp	x21, x22, [sp, #32]
  41563c:	mov	x22, x2
  415640:	stp	x23, x24, [sp, #48]
  415644:	ldrb	w24, [sp, #672]
  415648:	stp	x25, x26, [sp, #64]
  41564c:	and	w26, w4, #0xff
  415650:	ands	w25, w7, #0xff
  415654:	stp	x27, x28, [sp, #80]
  415658:	and	w28, w3, #0xff
  41565c:	and	w27, w5, #0xff
  415660:	str	x1, [sp, #104]
  415664:	b.ne	41573c <ferror@plt+0x12d9c>  // b.any
  415668:	add	x21, sp, #0x80
  41566c:	mov	x0, x21
  415670:	bl	402720 <posix_spawn_file_actions_init@plt>
  415674:	mov	w23, w0
  415678:	cbnz	w0, 4156a8 <ferror@plt+0x12d08>
  41567c:	cbnz	w26, 4156e8 <ferror@plt+0x12d48>
  415680:	cbnz	w27, 415710 <ferror@plt+0x12d70>
  415684:	cbnz	w19, 4157c4 <ferror@plt+0x12e24>
  415688:	cbz	w25, 41576c <ferror@plt+0x12dcc>
  41568c:	add	x0, sp, #0x150
  415690:	bl	402870 <posix_spawnattr_init@plt>
  415694:	mov	w23, w0
  415698:	cbz	w0, 4157fc <ferror@plt+0x12e5c>
  41569c:	mov	x0, x21
  4156a0:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  4156a4:	bl	415ca8 <ferror@plt+0x13308>
  4156a8:	ldr	x0, [sp, #680]
  4156ac:	cbz	x0, 4156b4 <ferror@plt+0x12d14>
  4156b0:	str	wzr, [x0]
  4156b4:	eor	w19, w19, #0x1
  4156b8:	mov	w21, #0x7f                  	// #127
  4156bc:	orr	w19, w24, w19
  4156c0:	cbnz	w19, 415828 <ferror@plt+0x12e88>
  4156c4:	mov	w0, w21
  4156c8:	ldp	x29, x30, [sp]
  4156cc:	ldp	x19, x20, [sp, #16]
  4156d0:	ldp	x21, x22, [sp, #32]
  4156d4:	ldp	x23, x24, [sp, #48]
  4156d8:	ldp	x25, x26, [sp, #64]
  4156dc:	ldp	x27, x28, [sp, #80]
  4156e0:	add	sp, sp, #0x2a0
  4156e4:	ret
  4156e8:	mov	x0, x21
  4156ec:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4156f0:	mov	w4, #0x0                   	// #0
  4156f4:	add	x2, x2, #0xd58
  4156f8:	mov	w3, #0x0                   	// #0
  4156fc:	mov	w1, #0x0                   	// #0
  415700:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  415704:	mov	w23, w0
  415708:	cbnz	w0, 4157e8 <ferror@plt+0x12e48>
  41570c:	cbz	w27, 415684 <ferror@plt+0x12ce4>
  415710:	mov	x0, x21
  415714:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  415718:	mov	w4, #0x0                   	// #0
  41571c:	add	x2, x2, #0xd58
  415720:	mov	w3, #0x2                   	// #2
  415724:	mov	w1, #0x1                   	// #1
  415728:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  41572c:	mov	w23, w0
  415730:	cbnz	w0, 4157e8 <ferror@plt+0x12e48>
  415734:	cbz	w19, 415688 <ferror@plt+0x12ce8>
  415738:	b	4157c4 <ferror@plt+0x12e24>
  41573c:	add	x2, sp, #0xd0
  415740:	mov	x1, #0x0                   	// #0
  415744:	mov	w0, #0x2                   	// #2
  415748:	bl	4023f0 <sigprocmask@plt>
  41574c:	add	x21, sp, #0x80
  415750:	bl	415b78 <ferror@plt+0x131d8>
  415754:	mov	x0, x21
  415758:	bl	402720 <posix_spawn_file_actions_init@plt>
  41575c:	mov	w23, w0
  415760:	cbnz	w0, 4156a4 <ferror@plt+0x12d04>
  415764:	cbz	w26, 415680 <ferror@plt+0x12ce0>
  415768:	b	4156e8 <ferror@plt+0x12d48>
  41576c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  415770:	mov	x4, x22
  415774:	ldr	x1, [sp, #104]
  415778:	mov	x2, x21
  41577c:	ldr	x5, [x0, #1104]
  415780:	mov	x3, #0x0                   	// #0
  415784:	add	x0, sp, #0x7c
  415788:	bl	402800 <posix_spawnp@plt>
  41578c:	mov	w23, w0
  415790:	cbnz	w0, 4158c4 <ferror@plt+0x12f24>
  415794:	mov	x0, x21
  415798:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  41579c:	ldr	w0, [sp, #124]
  4157a0:	mov	w5, w24
  4157a4:	ldr	x6, [sp, #680]
  4157a8:	mov	w4, w25
  4157ac:	mov	w3, w19
  4157b0:	mov	w2, w28
  4157b4:	mov	x1, x20
  4157b8:	bl	41c6f0 <ferror@plt+0x19d50>
  4157bc:	mov	w21, w0
  4157c0:	b	4156c4 <ferror@plt+0x12d24>
  4157c4:	mov	w3, #0x2                   	// #2
  4157c8:	mov	x0, x21
  4157cc:	mov	w1, w3
  4157d0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  4157d4:	mov	w4, #0x0                   	// #0
  4157d8:	add	x2, x2, #0xd58
  4157dc:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  4157e0:	mov	w23, w0
  4157e4:	cbz	w0, 415688 <ferror@plt+0x12ce8>
  4157e8:	mov	x0, x21
  4157ec:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  4157f0:	cbz	w25, 4156a8 <ferror@plt+0x12d08>
  4157f4:	bl	415ca8 <ferror@plt+0x13308>
  4157f8:	b	4156a8 <ferror@plt+0x12d08>
  4157fc:	add	x1, sp, #0xd0
  415800:	add	x0, sp, #0x150
  415804:	bl	402700 <posix_spawnattr_setsigmask@plt>
  415808:	mov	w23, w0
  41580c:	cbz	w0, 415844 <ferror@plt+0x12ea4>
  415810:	mov	x0, x21
  415814:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415818:	add	x0, sp, #0x150
  41581c:	bl	402580 <posix_spawnattr_destroy@plt>
  415820:	bl	415ca8 <ferror@plt+0x13308>
  415824:	b	4156a8 <ferror@plt+0x12d08>
  415828:	mov	x3, x20
  41582c:	mov	w1, w23
  415830:	mov	w0, w24
  415834:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  415838:	add	x2, x2, #0xd68
  41583c:	bl	4023e0 <error@plt>
  415840:	b	4156c4 <ferror@plt+0x12d24>
  415844:	add	x0, sp, #0x150
  415848:	mov	w1, #0x8                   	// #8
  41584c:	bl	4026c0 <posix_spawnattr_setflags@plt>
  415850:	mov	w23, w0
  415854:	cbnz	w0, 415810 <ferror@plt+0x12e70>
  415858:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41585c:	mov	x4, x22
  415860:	ldr	x1, [sp, #104]
  415864:	add	x3, sp, #0x150
  415868:	ldr	x5, [x0, #1104]
  41586c:	mov	x2, x21
  415870:	add	x0, sp, #0x7c
  415874:	bl	402800 <posix_spawnp@plt>
  415878:	mov	w23, w0
  41587c:	cbnz	w0, 415810 <ferror@plt+0x12e70>
  415880:	mov	x0, x21
  415884:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415888:	add	x0, sp, #0x150
  41588c:	bl	402580 <posix_spawnattr_destroy@plt>
  415890:	ldr	w0, [sp, #124]
  415894:	bl	41c588 <ferror@plt+0x19be8>
  415898:	bl	415ca8 <ferror@plt+0x13308>
  41589c:	ldr	w0, [sp, #124]
  4158a0:	mov	w5, w24
  4158a4:	ldr	x6, [sp, #680]
  4158a8:	mov	w4, w25
  4158ac:	mov	w3, w19
  4158b0:	mov	w2, w28
  4158b4:	mov	x1, x20
  4158b8:	bl	41c6f0 <ferror@plt+0x19d50>
  4158bc:	mov	w21, w0
  4158c0:	b	4156c4 <ferror@plt+0x12d24>
  4158c4:	mov	x0, x21
  4158c8:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  4158cc:	b	4156a8 <ferror@plt+0x12d08>
  4158d0:	stp	x29, x30, [sp, #-64]!
  4158d4:	mov	x29, sp
  4158d8:	stp	x19, x20, [sp, #16]
  4158dc:	adrp	x19, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  4158e0:	mov	w20, w0
  4158e4:	ldr	w0, [x19, #2992]
  4158e8:	stp	x21, x22, [sp, #32]
  4158ec:	str	x23, [sp, #48]
  4158f0:	cbz	w0, 41599c <ferror@plt+0x12ffc>
  4158f4:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  4158f8:	sxtw	x1, w0
  4158fc:	add	x19, x19, #0xbb0
  415900:	add	x21, x21, #0x370
  415904:	nop
  415908:	sub	x1, x1, #0x1
  41590c:	str	w1, [x19]
  415910:	ldr	x0, [x21]
  415914:	ldr	x0, [x0, x1, lsl #3]
  415918:	blr	x0
  41591c:	ldr	w2, [x19]
  415920:	sxtw	x1, w2
  415924:	cbnz	w2, 415908 <ferror@plt+0x12f68>
  415928:	add	x22, x21, #0x10
  41592c:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415930:	add	x21, x21, #0xd50
  415934:	mov	x19, #0x0                   	// #0
  415938:	mov	w23, #0x98                  	// #152
  41593c:	nop
  415940:	ldr	w0, [x22, x19, lsl #2]
  415944:	mov	x2, #0x0                   	// #0
  415948:	add	x19, x19, #0x1
  41594c:	sxtw	x4, w0
  415950:	smaddl	x1, w0, w23, x21
  415954:	add	x3, x4, w0, sxtw #2
  415958:	tbnz	w0, #31, 415974 <ferror@plt+0x12fd4>
  41595c:	lsl	x3, x3, #2
  415960:	sub	x3, x3, x4
  415964:	ldr	x4, [x21, x3, lsl #3]
  415968:	cmp	x4, #0x1
  41596c:	b.eq	415994 <ferror@plt+0x12ff4>  // b.none
  415970:	bl	402670 <sigaction@plt>
  415974:	cmp	x19, #0x6
  415978:	b.ne	415940 <ferror@plt+0x12fa0>  // b.any
  41597c:	mov	w0, w20
  415980:	ldp	x19, x20, [sp, #16]
  415984:	ldp	x21, x22, [sp, #32]
  415988:	ldr	x23, [sp, #48]
  41598c:	ldp	x29, x30, [sp], #64
  415990:	b	4023d0 <raise@plt>
  415994:	str	xzr, [x21, x3, lsl #3]
  415998:	b	415970 <ferror@plt+0x12fd0>
  41599c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  4159a0:	add	x21, x21, #0x370
  4159a4:	b	415928 <ferror@plt+0x12f88>
  4159a8:	stp	x29, x30, [sp, #-256]!
  4159ac:	mov	x29, sp
  4159b0:	stp	x19, x20, [sp, #16]
  4159b4:	adrp	x20, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  4159b8:	stp	x21, x22, [sp, #32]
  4159bc:	add	x21, x20, #0xbb0
  4159c0:	stp	x23, x24, [sp, #48]
  4159c4:	mov	x23, x0
  4159c8:	ldrb	w0, [x21, #4]
  4159cc:	stp	x25, x26, [sp, #64]
  4159d0:	cbz	w0, 415a20 <ferror@plt+0x13080>
  4159d4:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  4159d8:	add	x26, x24, #0x370
  4159dc:	ldr	w0, [x20, #2992]
  4159e0:	ldr	x19, [x26, #48]
  4159e4:	cmp	x19, w0, sxtw
  4159e8:	b.eq	415aac <ferror@plt+0x1310c>  // b.none
  4159ec:	ldr	x1, [x24, #880]
  4159f0:	ldr	w0, [x20, #2992]
  4159f4:	ldp	x21, x22, [sp, #32]
  4159f8:	sxtw	x0, w0
  4159fc:	ldp	x25, x26, [sp, #64]
  415a00:	str	x23, [x1, x0, lsl #3]
  415a04:	ldp	x23, x24, [sp, #48]
  415a08:	ldr	w0, [x20, #2992]
  415a0c:	add	w0, w0, #0x1
  415a10:	str	w0, [x20, #2992]
  415a14:	ldp	x19, x20, [sp, #16]
  415a18:	ldp	x29, x30, [sp], #256
  415a1c:	ret
  415a20:	ldrb	w0, [x21, #5]
  415a24:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  415a28:	stp	x27, x28, [sp, #80]
  415a2c:	cbz	w0, 415b0c <ferror@plt+0x1316c>
  415a30:	add	x22, sp, #0x68
  415a34:	add	x26, x24, #0x370
  415a38:	adrp	x1, 415000 <ferror@plt+0x12660>
  415a3c:	add	x1, x1, #0x8d0
  415a40:	mov	w2, #0x40000000            	// #1073741824
  415a44:	adrp	x27, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415a48:	add	x0, x22, #0x8
  415a4c:	add	x25, x26, #0x10
  415a50:	add	x27, x27, #0xd50
  415a54:	mov	x19, #0x0                   	// #0
  415a58:	mov	w28, #0x98                  	// #152
  415a5c:	str	x1, [sp, #104]
  415a60:	str	w2, [sp, #240]
  415a64:	bl	402570 <sigemptyset@plt>
  415a68:	ldr	w0, [x25, x19, lsl #2]
  415a6c:	tbnz	w0, #31, 415a84 <ferror@plt+0x130e4>
  415a70:	cmp	w0, #0x3f
  415a74:	b.gt	415b74 <ferror@plt+0x131d4>
  415a78:	smaddl	x2, w0, w28, x27
  415a7c:	mov	x1, x22
  415a80:	bl	402670 <sigaction@plt>
  415a84:	add	x19, x19, #0x1
  415a88:	cmp	x19, #0x6
  415a8c:	b.ne	415a68 <ferror@plt+0x130c8>  // b.any
  415a90:	mov	w0, #0x1                   	// #1
  415a94:	strb	w0, [x21, #4]
  415a98:	ldr	w0, [x20, #2992]
  415a9c:	ldr	x19, [x26, #48]
  415aa0:	ldp	x27, x28, [sp, #80]
  415aa4:	cmp	x19, w0, sxtw
  415aa8:	b.ne	4159ec <ferror@plt+0x1304c>  // b.any
  415aac:	ldr	x22, [x24, #880]
  415ab0:	tst	x19, #0x7000000000000000
  415ab4:	cset	x1, ne  // ne = any
  415ab8:	lsl	x25, x19, #1
  415abc:	lsl	x0, x19, #4
  415ac0:	tbnz	x19, #59, 415b6c <ferror@plt+0x131cc>
  415ac4:	cbnz	x1, 415b6c <ferror@plt+0x131cc>
  415ac8:	bl	41ca30 <ferror@plt+0x1a090>
  415acc:	cbz	x19, 415aec <ferror@plt+0x1314c>
  415ad0:	mov	x1, #0x0                   	// #0
  415ad4:	nop
  415ad8:	ldr	x2, [x22, x1, lsl #3]
  415adc:	str	x2, [x0, x1, lsl #3]
  415ae0:	add	x1, x1, #0x1
  415ae4:	cmp	x19, x1
  415ae8:	b.ne	415ad8 <ferror@plt+0x13138>  // b.any
  415aec:	str	x0, [x24, #880]
  415af0:	add	x21, x21, #0x10
  415af4:	str	x25, [x26, #48]
  415af8:	cmp	x22, x21
  415afc:	b.eq	4159ec <ferror@plt+0x1304c>  // b.none
  415b00:	mov	x0, x22
  415b04:	bl	4027c0 <free@plt>
  415b08:	b	4159ec <ferror@plt+0x1304c>
  415b0c:	add	x26, x24, #0x370
  415b10:	add	x22, sp, #0x68
  415b14:	add	x19, x26, #0x10
  415b18:	add	x25, x26, #0x28
  415b1c:	mov	w27, #0xffffffff            	// #-1
  415b20:	b	415b30 <ferror@plt+0x13190>
  415b24:	add	x19, x19, #0x4
  415b28:	cmp	x25, x19
  415b2c:	b.eq	415b60 <ferror@plt+0x131c0>  // b.none
  415b30:	ldr	w0, [x19]
  415b34:	mov	x2, x22
  415b38:	mov	x1, #0x0                   	// #0
  415b3c:	bl	402670 <sigaction@plt>
  415b40:	tbnz	w0, #31, 415b24 <ferror@plt+0x13184>
  415b44:	ldr	x0, [sp, #104]
  415b48:	cmp	x0, #0x1
  415b4c:	b.ne	415b24 <ferror@plt+0x13184>  // b.any
  415b50:	str	w27, [x19]
  415b54:	add	x19, x19, #0x4
  415b58:	cmp	x25, x19
  415b5c:	b.ne	415b30 <ferror@plt+0x13190>  // b.any
  415b60:	mov	w0, #0x1                   	// #1
  415b64:	strb	w0, [x21, #5]
  415b68:	b	415a38 <ferror@plt+0x13098>
  415b6c:	stp	x27, x28, [sp, #80]
  415b70:	bl	41cbf8 <ferror@plt+0x1a258>
  415b74:	bl	4026d0 <abort@plt>
  415b78:	stp	x29, x30, [sp, #-224]!
  415b7c:	mov	x29, sp
  415b80:	stp	x19, x20, [sp, #16]
  415b84:	adrp	x19, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415b88:	add	x19, x19, #0xbb0
  415b8c:	ldrb	w0, [x19, #272]
  415b90:	cbnz	w0, 415c20 <ferror@plt+0x13280>
  415b94:	ldrb	w0, [x19, #5]
  415b98:	stp	x21, x22, [sp, #32]
  415b9c:	cbz	w0, 415c3c <ferror@plt+0x1329c>
  415ba0:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  415ba4:	add	x20, x20, #0x370
  415ba8:	add	x21, x19, #0x120
  415bac:	mov	x0, x21
  415bb0:	bl	402570 <sigemptyset@plt>
  415bb4:	ldr	w1, [x20, #16]
  415bb8:	tbnz	w1, #31, 415bc4 <ferror@plt+0x13224>
  415bbc:	mov	x0, x21
  415bc0:	bl	4028f0 <sigaddset@plt>
  415bc4:	ldr	w1, [x20, #20]
  415bc8:	tbnz	w1, #31, 415bd4 <ferror@plt+0x13234>
  415bcc:	add	x0, x19, #0x120
  415bd0:	bl	4028f0 <sigaddset@plt>
  415bd4:	ldr	w1, [x20, #24]
  415bd8:	tbnz	w1, #31, 415be4 <ferror@plt+0x13244>
  415bdc:	add	x0, x19, #0x120
  415be0:	bl	4028f0 <sigaddset@plt>
  415be4:	ldr	w1, [x20, #28]
  415be8:	tbnz	w1, #31, 415bf4 <ferror@plt+0x13254>
  415bec:	add	x0, x19, #0x120
  415bf0:	bl	4028f0 <sigaddset@plt>
  415bf4:	ldr	w1, [x20, #32]
  415bf8:	tbnz	w1, #31, 415c04 <ferror@plt+0x13264>
  415bfc:	add	x0, x19, #0x120
  415c00:	bl	4028f0 <sigaddset@plt>
  415c04:	ldr	w1, [x20, #36]
  415c08:	tbnz	w1, #31, 415c14 <ferror@plt+0x13274>
  415c0c:	add	x0, x19, #0x120
  415c10:	bl	4028f0 <sigaddset@plt>
  415c14:	ldp	x21, x22, [sp, #32]
  415c18:	mov	w0, #0x1                   	// #1
  415c1c:	strb	w0, [x19, #272]
  415c20:	add	x1, x19, #0x120
  415c24:	mov	x2, #0x0                   	// #0
  415c28:	mov	w0, #0x0                   	// #0
  415c2c:	bl	4023f0 <sigprocmask@plt>
  415c30:	ldp	x19, x20, [sp, #16]
  415c34:	ldp	x29, x30, [sp], #224
  415c38:	ret
  415c3c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  415c40:	add	x20, x20, #0x370
  415c44:	add	x21, x20, #0x10
  415c48:	add	x22, x20, #0x28
  415c4c:	str	x23, [sp, #48]
  415c50:	mov	w23, #0xffffffff            	// #-1
  415c54:	b	415c64 <ferror@plt+0x132c4>
  415c58:	add	x21, x21, #0x4
  415c5c:	cmp	x21, x22
  415c60:	b.eq	415c98 <ferror@plt+0x132f8>  // b.none
  415c64:	ldr	w0, [x21]
  415c68:	add	x2, sp, #0x48
  415c6c:	mov	x1, #0x0                   	// #0
  415c70:	bl	402670 <sigaction@plt>
  415c74:	tbnz	w0, #31, 415c58 <ferror@plt+0x132b8>
  415c78:	ldr	x0, [sp, #72]
  415c7c:	cmp	x0, #0x1
  415c80:	b.ne	415c58 <ferror@plt+0x132b8>  // b.any
  415c84:	str	w23, [x21]
  415c88:	add	x21, x21, #0x4
  415c8c:	cmp	x21, x22
  415c90:	b.ne	415c64 <ferror@plt+0x132c4>  // b.any
  415c94:	nop
  415c98:	mov	w0, #0x1                   	// #1
  415c9c:	strb	w0, [x19, #5]
  415ca0:	ldr	x23, [sp, #48]
  415ca4:	b	415ba8 <ferror@plt+0x13208>
  415ca8:	stp	x29, x30, [sp, #-224]!
  415cac:	mov	x29, sp
  415cb0:	stp	x19, x20, [sp, #16]
  415cb4:	adrp	x19, 440000 <__progname@@GLIBC_2.17+0x7ba8>
  415cb8:	add	x19, x19, #0xbb0
  415cbc:	ldrb	w0, [x19, #272]
  415cc0:	cbnz	w0, 415d50 <ferror@plt+0x133b0>
  415cc4:	ldrb	w0, [x19, #5]
  415cc8:	stp	x21, x22, [sp, #32]
  415ccc:	cbz	w0, 415d6c <ferror@plt+0x133cc>
  415cd0:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  415cd4:	add	x20, x20, #0x370
  415cd8:	add	x21, x19, #0x120
  415cdc:	mov	x0, x21
  415ce0:	bl	402570 <sigemptyset@plt>
  415ce4:	ldr	w1, [x20, #16]
  415ce8:	tbnz	w1, #31, 415cf4 <ferror@plt+0x13354>
  415cec:	mov	x0, x21
  415cf0:	bl	4028f0 <sigaddset@plt>
  415cf4:	ldr	w1, [x20, #20]
  415cf8:	tbnz	w1, #31, 415d04 <ferror@plt+0x13364>
  415cfc:	add	x0, x19, #0x120
  415d00:	bl	4028f0 <sigaddset@plt>
  415d04:	ldr	w1, [x20, #24]
  415d08:	tbnz	w1, #31, 415d14 <ferror@plt+0x13374>
  415d0c:	add	x0, x19, #0x120
  415d10:	bl	4028f0 <sigaddset@plt>
  415d14:	ldr	w1, [x20, #28]
  415d18:	tbnz	w1, #31, 415d24 <ferror@plt+0x13384>
  415d1c:	add	x0, x19, #0x120
  415d20:	bl	4028f0 <sigaddset@plt>
  415d24:	ldr	w1, [x20, #32]
  415d28:	tbnz	w1, #31, 415d34 <ferror@plt+0x13394>
  415d2c:	add	x0, x19, #0x120
  415d30:	bl	4028f0 <sigaddset@plt>
  415d34:	ldr	w1, [x20, #36]
  415d38:	tbnz	w1, #31, 415d44 <ferror@plt+0x133a4>
  415d3c:	add	x0, x19, #0x120
  415d40:	bl	4028f0 <sigaddset@plt>
  415d44:	ldp	x21, x22, [sp, #32]
  415d48:	mov	w0, #0x1                   	// #1
  415d4c:	strb	w0, [x19, #272]
  415d50:	add	x1, x19, #0x120
  415d54:	mov	x2, #0x0                   	// #0
  415d58:	mov	w0, #0x1                   	// #1
  415d5c:	bl	4023f0 <sigprocmask@plt>
  415d60:	ldp	x19, x20, [sp, #16]
  415d64:	ldp	x29, x30, [sp], #224
  415d68:	ret
  415d6c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  415d70:	add	x20, x20, #0x370
  415d74:	add	x21, x20, #0x10
  415d78:	add	x22, x20, #0x28
  415d7c:	str	x23, [sp, #48]
  415d80:	mov	w23, #0xffffffff            	// #-1
  415d84:	b	415d94 <ferror@plt+0x133f4>
  415d88:	add	x21, x21, #0x4
  415d8c:	cmp	x21, x22
  415d90:	b.eq	415dc8 <ferror@plt+0x13428>  // b.none
  415d94:	ldr	w0, [x21]
  415d98:	add	x2, sp, #0x48
  415d9c:	mov	x1, #0x0                   	// #0
  415da0:	bl	402670 <sigaction@plt>
  415da4:	tbnz	w0, #31, 415d88 <ferror@plt+0x133e8>
  415da8:	ldr	x0, [sp, #72]
  415dac:	cmp	x0, #0x1
  415db0:	b.ne	415d88 <ferror@plt+0x133e8>  // b.any
  415db4:	str	w23, [x21]
  415db8:	add	x21, x21, #0x4
  415dbc:	cmp	x21, x22
  415dc0:	b.ne	415d94 <ferror@plt+0x133f4>  // b.any
  415dc4:	nop
  415dc8:	mov	w0, #0x1                   	// #1
  415dcc:	strb	w0, [x19, #5]
  415dd0:	ldr	x23, [sp, #48]
  415dd4:	b	415cd8 <ferror@plt+0x13338>
  415dd8:	stp	x29, x30, [sp, #-16]!
  415ddc:	mov	x29, sp
  415de0:	bl	415df8 <ferror@plt+0x13458>
  415de4:	cbz	x0, 415df0 <ferror@plt+0x13450>
  415de8:	ldp	x29, x30, [sp], #16
  415dec:	ret
  415df0:	bl	41cbf8 <ferror@plt+0x1a258>
  415df4:	nop
  415df8:	stp	x29, x30, [sp, #-96]!
  415dfc:	mov	x29, sp
  415e00:	stp	x19, x20, [sp, #16]
  415e04:	mov	x20, x1
  415e08:	stp	x21, x22, [sp, #32]
  415e0c:	stp	x23, x24, [sp, #48]
  415e10:	mov	x23, x2
  415e14:	mov	x24, x0
  415e18:	stp	x25, x26, [sp, #64]
  415e1c:	str	x27, [sp, #80]
  415e20:	bl	41d9e8 <_obstack_memory_used@@Base+0x28>
  415e24:	mov	x21, x0
  415e28:	bl	41da40 <_obstack_memory_used@@Base+0x80>
  415e2c:	sub	x26, x21, x24
  415e30:	mov	x19, x0
  415e34:	add	x26, x26, x0
  415e38:	add	x27, x26, #0x1
  415e3c:	cbz	x0, 415e50 <ferror@plt+0x134b0>
  415e40:	add	x19, x21, x0
  415e44:	ldurb	w0, [x19, #-1]
  415e48:	cmp	w0, #0x2f
  415e4c:	cset	x19, ne  // ne = any
  415e50:	ldrb	w25, [x20]
  415e54:	cmp	w25, #0x2f
  415e58:	b.eq	415edc <ferror@plt+0x1353c>  // b.none
  415e5c:	mov	x0, x20
  415e60:	bl	402390 <strlen@plt>
  415e64:	mov	x22, x0
  415e68:	add	x0, x0, x19
  415e6c:	add	x0, x0, x27
  415e70:	bl	402530 <malloc@plt>
  415e74:	mov	x21, x0
  415e78:	cbz	x0, 415ebc <ferror@plt+0x1351c>
  415e7c:	mov	x1, x24
  415e80:	mov	x2, x26
  415e84:	bl	4027f0 <mempcpy@plt>
  415e88:	mov	x1, x0
  415e8c:	mov	w2, #0x2f                  	// #47
  415e90:	add	x0, x0, x19
  415e94:	strb	w2, [x1]
  415e98:	cbz	x23, 415eac <ferror@plt+0x1350c>
  415e9c:	cmp	w25, #0x2f
  415ea0:	cset	x1, eq  // eq = none
  415ea4:	sub	x1, x0, x1
  415ea8:	str	x1, [x23]
  415eac:	mov	x2, x22
  415eb0:	mov	x1, x20
  415eb4:	bl	4027f0 <mempcpy@plt>
  415eb8:	strb	wzr, [x0]
  415ebc:	mov	x0, x21
  415ec0:	ldp	x19, x20, [sp, #16]
  415ec4:	ldp	x21, x22, [sp, #32]
  415ec8:	ldp	x23, x24, [sp, #48]
  415ecc:	ldp	x25, x26, [sp, #64]
  415ed0:	ldr	x27, [sp, #80]
  415ed4:	ldp	x29, x30, [sp], #96
  415ed8:	ret
  415edc:	ldrb	w0, [x20, #1]!
  415ee0:	cmp	w0, #0x2f
  415ee4:	b.ne	415e5c <ferror@plt+0x134bc>  // b.any
  415ee8:	b	415edc <ferror@plt+0x1353c>
  415eec:	nop
  415ef0:	stp	x29, x30, [sp, #-48]!
  415ef4:	mov	x29, sp
  415ef8:	stp	x19, x20, [sp, #16]
  415efc:	mov	x20, x1
  415f00:	bl	402520 <fopen@plt>
  415f04:	mov	x19, x0
  415f08:	cbz	x0, 415f18 <ferror@plt+0x13578>
  415f0c:	bl	4024c0 <fileno@plt>
  415f10:	cmp	w0, #0x2
  415f14:	b.ls	415f28 <ferror@plt+0x13588>  // b.plast
  415f18:	mov	x0, x19
  415f1c:	ldp	x19, x20, [sp, #16]
  415f20:	ldp	x29, x30, [sp], #48
  415f24:	ret
  415f28:	str	x21, [sp, #32]
  415f2c:	bl	41b838 <ferror@plt+0x18e98>
  415f30:	mov	w21, w0
  415f34:	tbnz	w0, #31, 415f90 <ferror@plt+0x135f0>
  415f38:	mov	x0, x19
  415f3c:	bl	41d200 <ferror@plt+0x1a860>
  415f40:	cbnz	w0, 415f6c <ferror@plt+0x135cc>
  415f44:	mov	x1, x20
  415f48:	mov	w0, w21
  415f4c:	bl	4025d0 <fdopen@plt>
  415f50:	mov	x19, x0
  415f54:	cbz	x0, 415f6c <ferror@plt+0x135cc>
  415f58:	mov	x0, x19
  415f5c:	ldp	x19, x20, [sp, #16]
  415f60:	ldr	x21, [sp, #32]
  415f64:	ldp	x29, x30, [sp], #48
  415f68:	ret
  415f6c:	bl	402920 <__errno_location@plt>
  415f70:	mov	x20, x0
  415f74:	mov	w0, w21
  415f78:	mov	x19, #0x0                   	// #0
  415f7c:	ldr	w21, [x20]
  415f80:	bl	402660 <close@plt>
  415f84:	str	w21, [x20]
  415f88:	ldr	x21, [sp, #32]
  415f8c:	b	415f18 <ferror@plt+0x13578>
  415f90:	bl	402920 <__errno_location@plt>
  415f94:	mov	x20, x0
  415f98:	mov	x0, x19
  415f9c:	mov	x19, #0x0                   	// #0
  415fa0:	ldr	w21, [x20]
  415fa4:	bl	41d200 <ferror@plt+0x1a860>
  415fa8:	str	w21, [x20]
  415fac:	ldr	x21, [sp, #32]
  415fb0:	b	415f18 <ferror@plt+0x13578>
  415fb4:	nop
  415fb8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  415fbc:	ldr	x0, [x0, #1112]
  415fc0:	ret
  415fc4:	nop
  415fc8:	ldr	x0, [x0, #96]
  415fcc:	ret
  415fd0:	ldr	x0, [x1, #32]
  415fd4:	ret
  415fd8:	add	x2, x0, #0x38
  415fdc:	ldr	x0, [x1, #16]
  415fe0:	cmp	x0, x2
  415fe4:	csel	x0, x0, xzr, ne  // ne = any
  415fe8:	ret
  415fec:	nop
  415ff0:	add	x2, x0, #0x38
  415ff4:	ldr	x0, [x1, #24]
  415ff8:	cmp	x0, x2
  415ffc:	csel	x0, x0, xzr, ne  // ne = any
  416000:	ret
  416004:	nop
  416008:	ldr	x2, [x0]
  41600c:	stp	x2, x0, [x8]
  416010:	add	x1, x0, #0x38
  416014:	ldr	x2, [x0, #72]
  416018:	str	x2, [x8, #24]
  41601c:	str	x1, [x8, #32]
  416020:	ret
  416024:	nop
  416028:	mov	x3, x0
  41602c:	ldp	x0, x4, [x0, #24]
  416030:	cmp	x0, x4
  416034:	b.eq	416058 <ferror@plt+0x136b8>  // b.none
  416038:	ldr	x4, [x0, #32]
  41603c:	str	x4, [x1]
  416040:	cbz	x2, 416048 <ferror@plt+0x136a8>
  416044:	str	x0, [x2]
  416048:	ldr	x1, [x0, #16]
  41604c:	mov	w0, #0x1                   	// #1
  416050:	str	x1, [x3, #24]
  416054:	ret
  416058:	mov	w0, #0x0                   	// #0
  41605c:	ret
  416060:	ret
  416064:	nop
  416068:	stp	x29, x30, [sp, #-48]!
  41606c:	mov	x29, sp
  416070:	stp	x19, x20, [sp, #16]
  416074:	ldr	x19, [x0, #72]
  416078:	stp	x21, x22, [sp, #32]
  41607c:	add	x22, x0, #0x38
  416080:	cmp	x19, x22
  416084:	b.eq	4160b8 <ferror@plt+0x13718>  // b.none
  416088:	mov	x21, x1
  41608c:	mov	x20, x2
  416090:	b	4160a4 <ferror@plt+0x13704>
  416094:	b.eq	4160bc <ferror@plt+0x1371c>  // b.none
  416098:	ldr	x19, [x19, #16]
  41609c:	cmp	x19, x22
  4160a0:	b.eq	4160b8 <ferror@plt+0x13718>  // b.none
  4160a4:	ldr	x0, [x19, #32]
  4160a8:	mov	x1, x20
  4160ac:	blr	x21
  4160b0:	cmp	w0, #0x0
  4160b4:	b.le	416094 <ferror@plt+0x136f4>
  4160b8:	mov	x19, #0x0                   	// #0
  4160bc:	mov	x0, x19
  4160c0:	ldp	x19, x20, [sp, #16]
  4160c4:	ldp	x21, x22, [sp, #32]
  4160c8:	ldp	x29, x30, [sp], #48
  4160cc:	ret
  4160d0:	stp	x29, x30, [sp, #-64]!
  4160d4:	mov	x29, sp
  4160d8:	stp	x19, x20, [sp, #16]
  4160dc:	ldr	x19, [x0, #72]
  4160e0:	str	x23, [sp, #48]
  4160e4:	add	x23, x0, #0x38
  4160e8:	cmp	x19, x23
  4160ec:	b.eq	416130 <ferror@plt+0x13790>  // b.none
  4160f0:	mov	x20, #0x0                   	// #0
  4160f4:	stp	x21, x22, [sp, #32]
  4160f8:	mov	x21, x1
  4160fc:	mov	x22, x2
  416100:	b	416118 <ferror@plt+0x13778>
  416104:	b.eq	416148 <ferror@plt+0x137a8>  // b.none
  416108:	ldr	x19, [x19, #16]
  41610c:	add	x20, x20, #0x1
  416110:	cmp	x19, x23
  416114:	b.eq	41612c <ferror@plt+0x1378c>  // b.none
  416118:	ldr	x0, [x19, #32]
  41611c:	mov	x1, x22
  416120:	blr	x21
  416124:	cmp	w0, #0x0
  416128:	b.le	416104 <ferror@plt+0x13764>
  41612c:	ldp	x21, x22, [sp, #32]
  416130:	mov	x20, #0xffffffffffffffff    	// #-1
  416134:	mov	x0, x20
  416138:	ldp	x19, x20, [sp, #16]
  41613c:	ldr	x23, [sp, #48]
  416140:	ldp	x29, x30, [sp], #64
  416144:	ret
  416148:	mov	x0, x20
  41614c:	ldp	x19, x20, [sp, #16]
  416150:	ldp	x21, x22, [sp, #32]
  416154:	ldr	x23, [sp, #48]
  416158:	ldp	x29, x30, [sp], #64
  41615c:	ret
  416160:	stp	x29, x30, [sp, #-64]!
  416164:	cmp	x2, x3
  416168:	mov	x29, sp
  41616c:	ldr	x5, [x0, #96]
  416170:	stp	x19, x20, [sp, #16]
  416174:	ccmp	x5, x3, #0x0, ls  // ls = plast
  416178:	b.cc	416240 <ferror@plt+0x138a0>  // b.lo, b.ul, b.last
  41617c:	mov	x20, x2
  416180:	subs	x3, x3, x2
  416184:	b.eq	4161f4 <ferror@plt+0x13854>  // b.none
  416188:	stp	x21, x22, [sp, #32]
  41618c:	mov	x22, x1
  416190:	sub	x1, x5, #0x1
  416194:	str	x23, [sp, #48]
  416198:	mov	x23, x4
  41619c:	cmp	x2, x1, lsr #1
  4161a0:	b.hi	416204 <ferror@plt+0x13864>  // b.pmore
  4161a4:	ldr	x19, [x0, #72]
  4161a8:	cbz	x2, 4161bc <ferror@plt+0x1381c>
  4161ac:	mov	x0, x2
  4161b0:	subs	x0, x0, #0x1
  4161b4:	ldr	x19, [x19, #16]
  4161b8:	b.ne	4161b0 <ferror@plt+0x13810>  // b.any
  4161bc:	add	x21, x3, x20
  4161c0:	b	4161d8 <ferror@plt+0x13838>
  4161c4:	b.eq	416228 <ferror@plt+0x13888>  // b.none
  4161c8:	add	x20, x20, #0x1
  4161cc:	cmp	x21, x20
  4161d0:	ldr	x19, [x19, #16]
  4161d4:	b.eq	4161ec <ferror@plt+0x1384c>  // b.none
  4161d8:	ldr	x0, [x19, #32]
  4161dc:	mov	x1, x23
  4161e0:	blr	x22
  4161e4:	cmp	w0, #0x0
  4161e8:	b.le	4161c4 <ferror@plt+0x13824>
  4161ec:	ldp	x21, x22, [sp, #32]
  4161f0:	ldr	x23, [sp, #48]
  4161f4:	mov	x0, #0xffffffffffffffff    	// #-1
  4161f8:	ldp	x19, x20, [sp, #16]
  4161fc:	ldp	x29, x30, [sp], #64
  416200:	ret
  416204:	mvn	x2, x2
  416208:	adds	x2, x2, x5
  41620c:	ldr	x19, [x0, #80]
  416210:	b.eq	4161bc <ferror@plt+0x1381c>  // b.none
  416214:	nop
  416218:	subs	x2, x2, #0x1
  41621c:	ldr	x19, [x19, #24]
  416220:	b.ne	416218 <ferror@plt+0x13878>  // b.any
  416224:	b	4161bc <ferror@plt+0x1381c>
  416228:	mov	x0, x20
  41622c:	ldp	x19, x20, [sp, #16]
  416230:	ldp	x21, x22, [sp, #32]
  416234:	ldr	x23, [sp, #48]
  416238:	ldp	x29, x30, [sp], #64
  41623c:	ret
  416240:	stp	x21, x22, [sp, #32]
  416244:	str	x23, [sp, #48]
  416248:	bl	4026d0 <abort@plt>
  41624c:	nop
  416250:	stp	x29, x30, [sp, #-48]!
  416254:	mov	x29, sp
  416258:	ldr	x5, [x0, #96]
  41625c:	stp	x19, x20, [sp, #16]
  416260:	cmp	x5, x3
  416264:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
  416268:	b.hi	41632c <ferror@plt+0x1398c>  // b.pmore
  41626c:	subs	x20, x3, x2
  416270:	b.eq	4162e0 <ferror@plt+0x13940>  // b.none
  416274:	stp	x21, x22, [sp, #32]
  416278:	mov	x21, x1
  41627c:	sub	x1, x5, #0x1
  416280:	mov	x22, x4
  416284:	cmp	x2, x1, lsr #1
  416288:	b.hi	4162f4 <ferror@plt+0x13954>  // b.pmore
  41628c:	ldr	x19, [x0, #72]
  416290:	cbz	x2, 4162c8 <ferror@plt+0x13928>
  416294:	nop
  416298:	subs	x2, x2, #0x1
  41629c:	ldr	x19, [x19, #16]
  4162a0:	b.ne	416298 <ferror@plt+0x138f8>  // b.any
  4162a4:	ldr	x0, [x19, #32]
  4162a8:	mov	x1, x22
  4162ac:	blr	x21
  4162b0:	cmp	w0, #0x0
  4162b4:	b.gt	4162dc <ferror@plt+0x1393c>
  4162b8:	b.eq	416318 <ferror@plt+0x13978>  // b.none
  4162bc:	subs	x20, x20, #0x1
  4162c0:	ldr	x19, [x19, #16]
  4162c4:	b.eq	4162dc <ferror@plt+0x1393c>  // b.none
  4162c8:	ldr	x0, [x19, #32]
  4162cc:	mov	x1, x22
  4162d0:	blr	x21
  4162d4:	cmp	w0, #0x0
  4162d8:	b.le	4162b8 <ferror@plt+0x13918>
  4162dc:	ldp	x21, x22, [sp, #32]
  4162e0:	mov	x19, #0x0                   	// #0
  4162e4:	mov	x0, x19
  4162e8:	ldp	x19, x20, [sp, #16]
  4162ec:	ldp	x29, x30, [sp], #48
  4162f0:	ret
  4162f4:	mvn	x2, x2
  4162f8:	adds	x2, x2, x5
  4162fc:	ldr	x19, [x0, #80]
  416300:	b.eq	4162c8 <ferror@plt+0x13928>  // b.none
  416304:	nop
  416308:	subs	x2, x2, #0x1
  41630c:	ldr	x19, [x19, #24]
  416310:	b.ne	416308 <ferror@plt+0x13968>  // b.any
  416314:	b	4162c8 <ferror@plt+0x13928>
  416318:	mov	x0, x19
  41631c:	ldp	x19, x20, [sp, #16]
  416320:	ldp	x21, x22, [sp, #32]
  416324:	ldp	x29, x30, [sp], #48
  416328:	ret
  41632c:	stp	x21, x22, [sp, #32]
  416330:	bl	4026d0 <abort@plt>
  416334:	nop
  416338:	cmp	x1, x2
  41633c:	b.hi	416418 <ferror@plt+0x13a78>  // b.pmore
  416340:	ldr	x3, [x0, #96]
  416344:	cmp	x3, x2
  416348:	b.cc	416418 <ferror@plt+0x13a78>  // b.lo, b.ul, b.last
  41634c:	sub	x3, x3, x2
  416350:	sub	x2, x2, x1
  416354:	cmp	x2, x3
  416358:	csel	x4, x2, x3, cs  // cs = hs, nlast
  41635c:	cmp	x1, x4
  416360:	ldr	x5, [x0]
  416364:	b.ls	4163a0 <ferror@plt+0x13a00>  // b.plast
  416368:	add	x1, x0, #0x38
  41636c:	cbz	x3, 41637c <ferror@plt+0x139dc>
  416370:	subs	x3, x3, #0x1
  416374:	ldr	x1, [x1, #24]
  416378:	b.ne	416370 <ferror@plt+0x139d0>  // b.any
  41637c:	mov	x4, x1
  416380:	cbz	x2, 416394 <ferror@plt+0x139f4>
  416384:	nop
  416388:	subs	x2, x2, #0x1
  41638c:	ldr	x4, [x4, #24]
  416390:	b.ne	416388 <ferror@plt+0x139e8>  // b.any
  416394:	stp	x5, x0, [x8]
  416398:	stp	x4, x1, [x8, #24]
  41639c:	ret
  4163a0:	cmp	x2, x3
  4163a4:	ldr	x4, [x0, #72]
  4163a8:	b.ls	4163e0 <ferror@plt+0x13a40>  // b.plast
  4163ac:	cbz	x1, 4163bc <ferror@plt+0x13a1c>
  4163b0:	subs	x1, x1, #0x1
  4163b4:	ldr	x4, [x4, #16]
  4163b8:	b.ne	4163b0 <ferror@plt+0x13a10>  // b.any
  4163bc:	add	x1, x0, #0x38
  4163c0:	cbz	x3, 416394 <ferror@plt+0x139f4>
  4163c4:	nop
  4163c8:	subs	x3, x3, #0x1
  4163cc:	ldr	x1, [x1, #24]
  4163d0:	b.ne	4163c8 <ferror@plt+0x13a28>  // b.any
  4163d4:	stp	x5, x0, [x8]
  4163d8:	stp	x4, x1, [x8, #24]
  4163dc:	ret
  4163e0:	cbz	x1, 4163f4 <ferror@plt+0x13a54>
  4163e4:	nop
  4163e8:	subs	x1, x1, #0x1
  4163ec:	ldr	x4, [x4, #16]
  4163f0:	b.ne	4163e8 <ferror@plt+0x13a48>  // b.any
  4163f4:	mov	x1, x4
  4163f8:	cbz	x2, 416394 <ferror@plt+0x139f4>
  4163fc:	nop
  416400:	subs	x2, x2, #0x1
  416404:	ldr	x1, [x1, #16]
  416408:	b.ne	416400 <ferror@plt+0x13a60>  // b.any
  41640c:	stp	x5, x0, [x8]
  416410:	stp	x4, x1, [x8, #24]
  416414:	ret
  416418:	stp	x29, x30, [sp, #-16]!
  41641c:	mov	x29, sp
  416420:	bl	4026d0 <abort@plt>
  416424:	nop
  416428:	stp	x29, x30, [sp, #-48]!
  41642c:	mov	x29, sp
  416430:	str	x21, [sp, #32]
  416434:	mov	x21, x0
  416438:	ldr	x0, [x1, #32]
  41643c:	cmp	x0, x2
  416440:	b.eq	4164a8 <ferror@plt+0x13b08>  // b.none
  416444:	stp	x19, x20, [sp, #16]
  416448:	mov	x19, x1
  41644c:	mov	x20, x2
  416450:	ldr	x1, [x21, #16]
  416454:	mov	x0, x2
  416458:	cbz	x1, 416460 <ferror@plt+0x13ac0>
  41645c:	blr	x1
  416460:	ldr	x1, [x19, #8]
  416464:	cmp	x1, x0
  416468:	b.eq	4164a0 <ferror@plt+0x13b00>  // b.none
  41646c:	ldp	x3, x4, [x21, #40]
  416470:	udiv	x2, x1, x4
  416474:	msub	x1, x2, x4, x1
  416478:	add	x2, x3, x1, lsl #3
  41647c:	ldr	x3, [x3, x1, lsl #3]
  416480:	cmp	x3, x19
  416484:	b.eq	4164bc <ferror@plt+0x13b1c>  // b.none
  416488:	cbz	x3, 4164f8 <ferror@plt+0x13b58>
  41648c:	ldr	x1, [x3]
  416490:	cmp	x1, x19
  416494:	b.eq	4164b8 <ferror@plt+0x13b18>  // b.none
  416498:	mov	x3, x1
  41649c:	b	416488 <ferror@plt+0x13ae8>
  4164a0:	str	x20, [x19, #32]
  4164a4:	ldp	x19, x20, [sp, #16]
  4164a8:	mov	w0, #0x0                   	// #0
  4164ac:	ldr	x21, [sp, #32]
  4164b0:	ldp	x29, x30, [sp], #48
  4164b4:	ret
  4164b8:	mov	x2, x3
  4164bc:	ldr	x1, [x19]
  4164c0:	str	x1, [x2]
  4164c4:	str	x0, [x19, #8]
  4164c8:	str	x20, [x19, #32]
  4164cc:	ldp	x2, x3, [x21, #40]
  4164d0:	ldr	x21, [sp, #32]
  4164d4:	udiv	x1, x0, x3
  4164d8:	msub	x0, x1, x3, x0
  4164dc:	ldr	x1, [x2, x0, lsl #3]
  4164e0:	str	x1, [x19]
  4164e4:	str	x19, [x2, x0, lsl #3]
  4164e8:	mov	w0, #0x0                   	// #0
  4164ec:	ldp	x19, x20, [sp, #16]
  4164f0:	ldp	x29, x30, [sp], #48
  4164f4:	ret
  4164f8:	bl	4026d0 <abort@plt>
  4164fc:	nop
  416500:	stp	x29, x30, [sp, #-80]!
  416504:	mov	x29, sp
  416508:	stp	x21, x22, [sp, #32]
  41650c:	mov	x21, x0
  416510:	ldr	x0, [x0, #96]
  416514:	stp	x19, x20, [sp, #16]
  416518:	stp	x23, x24, [sp, #48]
  41651c:	cmp	x0, x2
  416520:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
  416524:	stp	x25, x26, [sp, #64]
  416528:	b.hi	416730 <ferror@plt+0x13d90>  // b.pmore
  41652c:	mov	x24, x1
  416530:	mov	x23, x2
  416534:	ldr	x1, [x21, #16]
  416538:	mov	x22, x3
  41653c:	mov	x20, x3
  416540:	cbz	x1, 416550 <ferror@plt+0x13bb0>
  416544:	mov	x0, x3
  416548:	blr	x1
  41654c:	mov	x20, x0
  416550:	ldp	x3, x1, [x21, #40]
  416554:	ldrb	w2, [x21, #32]
  416558:	ldr	x25, [x21, #8]
  41655c:	udiv	x0, x20, x1
  416560:	msub	x0, x0, x1, x20
  416564:	ldr	x19, [x3, x0, lsl #3]
  416568:	cbnz	w2, 4165f8 <ferror@plt+0x13c58>
  41656c:	cbz	x19, 4165dc <ferror@plt+0x13c3c>
  416570:	cbnz	x25, 416580 <ferror@plt+0x13be0>
  416574:	b	416650 <ferror@plt+0x13cb0>
  416578:	ldr	x19, [x19]
  41657c:	cbz	x19, 4165dc <ferror@plt+0x13c3c>
  416580:	ldr	x0, [x19, #8]
  416584:	cmp	x0, x20
  416588:	b.ne	416578 <ferror@plt+0x13bd8>  // b.any
  41658c:	ldr	x1, [x19, #32]
  416590:	mov	x0, x22
  416594:	blr	x25
  416598:	tst	w0, #0xff
  41659c:	b.eq	416578 <ferror@plt+0x13bd8>  // b.none
  4165a0:	mov	x26, x19
  4165a4:	b	4165ac <ferror@plt+0x13c0c>
  4165a8:	cbz	x26, 4165dc <ferror@plt+0x13c3c>
  4165ac:	ldr	x3, [x26, #24]
  4165b0:	add	x21, x21, #0x38
  4165b4:	mov	x0, #0x0                   	// #0
  4165b8:	cmp	x21, x3
  4165bc:	b.eq	4165d0 <ferror@plt+0x13c30>  // b.none
  4165c0:	ldr	x3, [x3, #24]
  4165c4:	add	x0, x0, #0x1
  4165c8:	cmp	x3, x21
  4165cc:	b.ne	4165c0 <ferror@plt+0x13c20>  // b.any
  4165d0:	cmp	x24, x0
  4165d4:	ccmp	x23, x0, #0x0, ls  // ls = plast
  4165d8:	b.hi	4165e0 <ferror@plt+0x13c40>  // b.pmore
  4165dc:	mov	x0, #0xffffffffffffffff    	// #-1
  4165e0:	ldp	x19, x20, [sp, #16]
  4165e4:	ldp	x21, x22, [sp, #32]
  4165e8:	ldp	x23, x24, [sp, #48]
  4165ec:	ldp	x25, x26, [sp, #64]
  4165f0:	ldp	x29, x30, [sp], #80
  4165f4:	ret
  4165f8:	cbz	x19, 4165dc <ferror@plt+0x13c3c>
  4165fc:	mov	x26, #0x0                   	// #0
  416600:	cbnz	x25, 416610 <ferror@plt+0x13c70>
  416604:	b	4166fc <ferror@plt+0x13d5c>
  416608:	ldr	x19, [x19]
  41660c:	cbz	x19, 4165a8 <ferror@plt+0x13c08>
  416610:	ldr	x0, [x19, #8]
  416614:	cmp	x0, x20
  416618:	b.ne	416608 <ferror@plt+0x13c68>  // b.any
  41661c:	ldr	x1, [x19, #32]
  416620:	mov	x0, x22
  416624:	blr	x25
  416628:	tst	w0, #0xff
  41662c:	b.eq	416608 <ferror@plt+0x13c68>  // b.none
  416630:	cbnz	x26, 416660 <ferror@plt+0x13cc0>
  416634:	mov	x26, x19
  416638:	b	416608 <ferror@plt+0x13c68>
  41663c:	ldr	x0, [x19, #32]
  416640:	cmp	x22, x0
  416644:	b.eq	4165a0 <ferror@plt+0x13c00>  // b.none
  416648:	ldr	x19, [x19]
  41664c:	cbz	x19, 4165dc <ferror@plt+0x13c3c>
  416650:	ldr	x0, [x19, #8]
  416654:	cmp	x20, x0
  416658:	b.ne	416648 <ferror@plt+0x13ca8>  // b.any
  41665c:	b	41663c <ferror@plt+0x13c9c>
  416660:	mov	x0, x24
  416664:	ldr	x19, [x21, #72]
  416668:	cbz	x24, 41667c <ferror@plt+0x13cdc>
  41666c:	nop
  416670:	subs	x0, x0, #0x1
  416674:	ldr	x19, [x19, #16]
  416678:	b.ne	416670 <ferror@plt+0x13cd0>  // b.any
  41667c:	cmp	x24, x23
  416680:	b.cs	4165dc <ferror@plt+0x13c3c>  // b.hs, b.nlast
  416684:	cbz	x25, 4166ec <ferror@plt+0x13d4c>
  416688:	ldr	x0, [x19, #8]
  41668c:	cmp	x0, x20
  416690:	b.eq	4166b4 <ferror@plt+0x13d14>  // b.none
  416694:	nop
  416698:	add	x24, x24, #0x1
  41669c:	cmp	x23, x24
  4166a0:	ldr	x19, [x19, #16]
  4166a4:	b.eq	4165dc <ferror@plt+0x13c3c>  // b.none
  4166a8:	ldr	x0, [x19, #8]
  4166ac:	cmp	x0, x20
  4166b0:	b.ne	416698 <ferror@plt+0x13cf8>  // b.any
  4166b4:	ldr	x1, [x19, #32]
  4166b8:	mov	x0, x22
  4166bc:	blr	x25
  4166c0:	tst	w0, #0xff
  4166c4:	b.eq	416698 <ferror@plt+0x13cf8>  // b.none
  4166c8:	mov	x0, x24
  4166cc:	b	4165e0 <ferror@plt+0x13c40>
  4166d0:	ldr	x0, [x19, #32]
  4166d4:	cmp	x0, x22
  4166d8:	b.eq	4166c8 <ferror@plt+0x13d28>  // b.none
  4166dc:	add	x24, x24, #0x1
  4166e0:	cmp	x24, x23
  4166e4:	ldr	x19, [x19, #16]
  4166e8:	b.eq	4165dc <ferror@plt+0x13c3c>  // b.none
  4166ec:	ldr	x0, [x19, #8]
  4166f0:	cmp	x20, x0
  4166f4:	b.ne	4166dc <ferror@plt+0x13d3c>  // b.any
  4166f8:	b	4166d0 <ferror@plt+0x13d30>
  4166fc:	mov	x26, x25
  416700:	b	41670c <ferror@plt+0x13d6c>
  416704:	ldr	x19, [x19]
  416708:	cbz	x19, 4165a8 <ferror@plt+0x13c08>
  41670c:	ldr	x0, [x19, #8]
  416710:	cmp	x20, x0
  416714:	b.ne	416704 <ferror@plt+0x13d64>  // b.any
  416718:	ldr	x0, [x19, #32]
  41671c:	cmp	x0, x22
  416720:	b.ne	416704 <ferror@plt+0x13d64>  // b.any
  416724:	cbnz	x26, 416660 <ferror@plt+0x13cc0>
  416728:	mov	x26, x19
  41672c:	b	416704 <ferror@plt+0x13d64>
  416730:	bl	4026d0 <abort@plt>
  416734:	nop
  416738:	stp	x29, x30, [sp, #-96]!
  41673c:	cmp	x1, x2
  416740:	mov	x29, sp
  416744:	str	x27, [sp, #80]
  416748:	ldr	x27, [x0, #96]
  41674c:	stp	x19, x20, [sp, #16]
  416750:	stp	x21, x22, [sp, #32]
  416754:	ccmp	x27, x2, #0x0, ls  // ls = plast
  416758:	stp	x23, x24, [sp, #48]
  41675c:	stp	x25, x26, [sp, #64]
  416760:	b.cc	416a14 <ferror@plt+0x14074>  // b.lo, b.ul, b.last
  416764:	mov	x25, x1
  416768:	mov	x23, x0
  41676c:	ldr	x1, [x0, #16]
  416770:	mov	x24, x2
  416774:	mov	x22, x3
  416778:	mov	x21, x3
  41677c:	cbz	x1, 41678c <ferror@plt+0x13dec>
  416780:	mov	x0, x3
  416784:	blr	x1
  416788:	mov	x21, x0
  41678c:	ldp	x3, x1, [x23, #40]
  416790:	ldrb	w2, [x23, #32]
  416794:	ldr	x26, [x23, #8]
  416798:	udiv	x0, x21, x1
  41679c:	msub	x0, x0, x1, x21
  4167a0:	ldr	x19, [x3, x0, lsl #3]
  4167a4:	cbnz	w2, 416864 <ferror@plt+0x13ec4>
  4167a8:	cbz	x19, 416910 <ferror@plt+0x13f70>
  4167ac:	cbnz	x26, 4167bc <ferror@plt+0x13e1c>
  4167b0:	b	4168fc <ferror@plt+0x13f5c>
  4167b4:	ldr	x19, [x19]
  4167b8:	cbz	x19, 416910 <ferror@plt+0x13f70>
  4167bc:	ldr	x0, [x19, #8]
  4167c0:	cmp	x0, x21
  4167c4:	b.ne	4167b4 <ferror@plt+0x13e14>  // b.any
  4167c8:	ldr	x1, [x19, #32]
  4167cc:	mov	x0, x22
  4167d0:	blr	x26
  4167d4:	tst	w0, #0xff
  4167d8:	b.eq	4167b4 <ferror@plt+0x13e14>  // b.none
  4167dc:	mov	x20, x19
  4167e0:	cbz	x25, 416808 <ferror@plt+0x13e68>
  4167e4:	ldr	x0, [x23, #72]
  4167e8:	cmp	x20, x0
  4167ec:	b.ne	416800 <ferror@plt+0x13e60>  // b.any
  4167f0:	b	416840 <ferror@plt+0x13ea0>
  4167f4:	ldr	x0, [x0, #16]
  4167f8:	cmp	x20, x0
  4167fc:	b.eq	416840 <ferror@plt+0x13ea0>  // b.none
  416800:	subs	x25, x25, #0x1
  416804:	b.ne	4167f4 <ferror@plt+0x13e54>  // b.any
  416808:	cmp	x27, x24
  41680c:	b.ls	416844 <ferror@plt+0x13ea4>  // b.plast
  416810:	ldr	x0, [x23, #80]
  416814:	mvn	x19, x24
  416818:	cmp	x20, x0
  41681c:	b.eq	416840 <ferror@plt+0x13ea0>  // b.none
  416820:	adds	x27, x19, x27
  416824:	b.ne	416834 <ferror@plt+0x13e94>  // b.any
  416828:	b	416844 <ferror@plt+0x13ea4>
  41682c:	subs	x27, x27, #0x1
  416830:	b.eq	416844 <ferror@plt+0x13ea4>  // b.none
  416834:	ldr	x0, [x0, #24]
  416838:	cmp	x20, x0
  41683c:	b.ne	41682c <ferror@plt+0x13e8c>  // b.any
  416840:	mov	x20, #0x0                   	// #0
  416844:	mov	x0, x20
  416848:	ldp	x19, x20, [sp, #16]
  41684c:	ldp	x21, x22, [sp, #32]
  416850:	ldp	x23, x24, [sp, #48]
  416854:	ldp	x25, x26, [sp, #64]
  416858:	ldr	x27, [sp, #80]
  41685c:	ldp	x29, x30, [sp], #96
  416860:	ret
  416864:	mov	x20, #0x0                   	// #0
  416868:	cbz	x19, 4168b0 <ferror@plt+0x13f10>
  41686c:	cbnz	x26, 41687c <ferror@plt+0x13edc>
  416870:	b	4169e0 <ferror@plt+0x14040>
  416874:	ldr	x19, [x19]
  416878:	cbz	x19, 4168b0 <ferror@plt+0x13f10>
  41687c:	ldr	x3, [x19, #8]
  416880:	cmp	x3, x21
  416884:	b.ne	416874 <ferror@plt+0x13ed4>  // b.any
  416888:	ldr	x1, [x19, #32]
  41688c:	mov	x0, x22
  416890:	blr	x26
  416894:	tst	w0, #0xff
  416898:	b.eq	416874 <ferror@plt+0x13ed4>  // b.none
  41689c:	cbnz	x20, 416958 <ferror@plt+0x13fb8>
  4168a0:	mov	x20, x19
  4168a4:	ldr	x19, [x19]
  4168a8:	cbnz	x19, 41687c <ferror@plt+0x13edc>
  4168ac:	nop
  4168b0:	cbz	x25, 416918 <ferror@plt+0x13f78>
  4168b4:	ldr	x0, [x23, #72]
  4168b8:	add	x1, x23, #0x38
  4168bc:	cmp	x0, x1
  4168c0:	b.ne	4168dc <ferror@plt+0x13f3c>  // b.any
  4168c4:	b	416918 <ferror@plt+0x13f78>
  4168c8:	subs	x25, x25, #0x1
  4168cc:	b.eq	416918 <ferror@plt+0x13f78>  // b.none
  4168d0:	ldr	x0, [x0, #16]
  4168d4:	cmp	x0, x1
  4168d8:	b.eq	416918 <ferror@plt+0x13f78>  // b.none
  4168dc:	cmp	x0, x20
  4168e0:	b.ne	4168c8 <ferror@plt+0x13f28>  // b.any
  4168e4:	b	416840 <ferror@plt+0x13ea0>
  4168e8:	ldr	x0, [x19, #32]
  4168ec:	cmp	x22, x0
  4168f0:	b.eq	4167dc <ferror@plt+0x13e3c>  // b.none
  4168f4:	ldr	x19, [x19]
  4168f8:	cbz	x19, 416910 <ferror@plt+0x13f70>
  4168fc:	ldr	x0, [x19, #8]
  416900:	cmp	x21, x0
  416904:	b.eq	4168e8 <ferror@plt+0x13f48>  // b.none
  416908:	ldr	x19, [x19]
  41690c:	cbnz	x19, 4168fc <ferror@plt+0x13f5c>
  416910:	mov	x20, #0x0                   	// #0
  416914:	b	4167e0 <ferror@plt+0x13e40>
  416918:	ldr	x2, [x23, #96]
  41691c:	cmp	x2, x24
  416920:	b.ls	416844 <ferror@plt+0x13ea4>  // b.plast
  416924:	ldr	x1, [x23, #80]
  416928:	mvn	x0, x24
  41692c:	cmp	x1, x20
  416930:	b.eq	416840 <ferror@plt+0x13ea0>  // b.none
  416934:	adds	x0, x0, x2
  416938:	b.ne	416948 <ferror@plt+0x13fa8>  // b.any
  41693c:	b	416844 <ferror@plt+0x13ea4>
  416940:	subs	x0, x0, #0x1
  416944:	b.eq	416844 <ferror@plt+0x13ea4>  // b.none
  416948:	ldr	x1, [x1, #24]
  41694c:	cmp	x1, x20
  416950:	b.ne	416940 <ferror@plt+0x13fa0>  // b.any
  416954:	b	416840 <ferror@plt+0x13ea0>
  416958:	sub	x24, x24, x25
  41695c:	ldr	x20, [x23, #72]
  416960:	cbz	x25, 416974 <ferror@plt+0x13fd4>
  416964:	nop
  416968:	subs	x25, x25, #0x1
  41696c:	ldr	x20, [x20, #16]
  416970:	b.ne	416968 <ferror@plt+0x13fc8>  // b.any
  416974:	cbz	x24, 416840 <ferror@plt+0x13ea0>
  416978:	cbz	x26, 4169d0 <ferror@plt+0x14030>
  41697c:	ldr	x0, [x20, #8]
  416980:	cmp	x0, x21
  416984:	b.eq	4169a0 <ferror@plt+0x14000>  // b.none
  416988:	subs	x24, x24, #0x1
  41698c:	ldr	x20, [x20, #16]
  416990:	b.eq	416840 <ferror@plt+0x13ea0>  // b.none
  416994:	ldr	x0, [x20, #8]
  416998:	cmp	x0, x21
  41699c:	b.ne	416988 <ferror@plt+0x13fe8>  // b.any
  4169a0:	ldr	x1, [x20, #32]
  4169a4:	mov	x0, x22
  4169a8:	blr	x26
  4169ac:	tst	w0, #0xff
  4169b0:	b.eq	416988 <ferror@plt+0x13fe8>  // b.none
  4169b4:	b	416844 <ferror@plt+0x13ea4>
  4169b8:	ldr	x0, [x20, #32]
  4169bc:	cmp	x22, x0
  4169c0:	b.eq	416844 <ferror@plt+0x13ea4>  // b.none
  4169c4:	subs	x24, x24, #0x1
  4169c8:	ldr	x20, [x20, #16]
  4169cc:	b.eq	416840 <ferror@plt+0x13ea0>  // b.none
  4169d0:	ldr	x0, [x20, #8]
  4169d4:	cmp	x21, x0
  4169d8:	b.ne	4169c4 <ferror@plt+0x14024>  // b.any
  4169dc:	b	4169b8 <ferror@plt+0x14018>
  4169e0:	mov	x20, x26
  4169e4:	b	4169f0 <ferror@plt+0x14050>
  4169e8:	ldr	x19, [x19]
  4169ec:	cbz	x19, 4168b0 <ferror@plt+0x13f10>
  4169f0:	ldr	x0, [x19, #8]
  4169f4:	cmp	x0, x21
  4169f8:	b.ne	4169e8 <ferror@plt+0x14048>  // b.any
  4169fc:	ldr	x0, [x19, #32]
  416a00:	cmp	x0, x22
  416a04:	b.ne	4169e8 <ferror@plt+0x14048>  // b.any
  416a08:	cbnz	x20, 416958 <ferror@plt+0x13fb8>
  416a0c:	mov	x20, x19
  416a10:	b	4169e8 <ferror@plt+0x14048>
  416a14:	bl	4026d0 <abort@plt>
  416a18:	stp	x29, x30, [sp, #-48]!
  416a1c:	mov	x29, sp
  416a20:	ldr	x3, [x0, #96]
  416a24:	stp	x19, x20, [sp, #16]
  416a28:	str	x21, [sp, #32]
  416a2c:	cmp	x3, x1
  416a30:	b.ls	416b3c <ferror@plt+0x1419c>  // b.plast
  416a34:	mov	x20, x0
  416a38:	sub	x0, x3, #0x1
  416a3c:	mov	x21, x2
  416a40:	cmp	x1, x0, lsr #1
  416a44:	b.hi	416ad0 <ferror@plt+0x14130>  // b.pmore
  416a48:	ldr	x19, [x20, #72]
  416a4c:	cbz	x1, 416a5c <ferror@plt+0x140bc>
  416a50:	subs	x1, x1, #0x1
  416a54:	ldr	x19, [x19, #16]
  416a58:	b.ne	416a50 <ferror@plt+0x140b0>  // b.any
  416a5c:	ldr	x0, [x19, #32]
  416a60:	cmp	x0, x21
  416a64:	b.eq	416abc <ferror@plt+0x1411c>  // b.none
  416a68:	ldr	x1, [x20, #16]
  416a6c:	mov	x0, x21
  416a70:	cbz	x1, 416a78 <ferror@plt+0x140d8>
  416a74:	blr	x1
  416a78:	ldr	x1, [x19, #8]
  416a7c:	cmp	x1, x0
  416a80:	b.eq	416ab8 <ferror@plt+0x14118>  // b.none
  416a84:	ldp	x3, x4, [x20, #40]
  416a88:	udiv	x2, x1, x4
  416a8c:	msub	x1, x2, x4, x1
  416a90:	add	x2, x3, x1, lsl #3
  416a94:	ldr	x1, [x3, x1, lsl #3]
  416a98:	cmp	x1, x19
  416a9c:	b.eq	416b00 <ferror@plt+0x14160>  // b.none
  416aa0:	cbz	x1, 416b3c <ferror@plt+0x1419c>
  416aa4:	ldr	x3, [x1]
  416aa8:	cmp	x3, x19
  416aac:	b.eq	416afc <ferror@plt+0x1415c>  // b.none
  416ab0:	mov	x1, x3
  416ab4:	b	416aa0 <ferror@plt+0x14100>
  416ab8:	str	x21, [x19, #32]
  416abc:	mov	x0, x19
  416ac0:	ldp	x19, x20, [sp, #16]
  416ac4:	ldr	x21, [sp, #32]
  416ac8:	ldp	x29, x30, [sp], #48
  416acc:	ret
  416ad0:	mvn	x1, x1
  416ad4:	adds	x1, x3, x1
  416ad8:	ldr	x19, [x20, #80]
  416adc:	b.eq	416a5c <ferror@plt+0x140bc>  // b.none
  416ae0:	subs	x1, x1, #0x1
  416ae4:	ldr	x19, [x19, #24]
  416ae8:	b.eq	416a5c <ferror@plt+0x140bc>  // b.none
  416aec:	subs	x1, x1, #0x1
  416af0:	ldr	x19, [x19, #24]
  416af4:	b.ne	416ae0 <ferror@plt+0x14140>  // b.any
  416af8:	b	416a5c <ferror@plt+0x140bc>
  416afc:	mov	x2, x1
  416b00:	ldr	x1, [x19]
  416b04:	str	x1, [x2]
  416b08:	str	x0, [x19, #8]
  416b0c:	str	x21, [x19, #32]
  416b10:	ldr	x21, [sp, #32]
  416b14:	ldp	x2, x3, [x20, #40]
  416b18:	udiv	x1, x0, x3
  416b1c:	msub	x0, x1, x3, x0
  416b20:	ldr	x1, [x2, x0, lsl #3]
  416b24:	str	x1, [x19]
  416b28:	str	x19, [x2, x0, lsl #3]
  416b2c:	mov	x0, x19
  416b30:	ldp	x19, x20, [sp, #16]
  416b34:	ldp	x29, x30, [sp], #48
  416b38:	ret
  416b3c:	bl	4026d0 <abort@plt>
  416b40:	ldr	x2, [x0, #96]
  416b44:	cmp	x2, x1
  416b48:	b.ls	416ba4 <ferror@plt+0x14204>  // b.plast
  416b4c:	sub	x3, x2, #0x1
  416b50:	cmp	x1, x3, lsr #1
  416b54:	b.hi	416b74 <ferror@plt+0x141d4>  // b.pmore
  416b58:	ldr	x0, [x0, #72]
  416b5c:	cbz	x1, 416b6c <ferror@plt+0x141cc>
  416b60:	subs	x1, x1, #0x1
  416b64:	ldr	x0, [x0, #16]
  416b68:	b.ne	416b60 <ferror@plt+0x141c0>  // b.any
  416b6c:	ldr	x0, [x0, #32]
  416b70:	ret
  416b74:	mvn	x1, x1
  416b78:	adds	x1, x1, x2
  416b7c:	ldr	x0, [x0, #80]
  416b80:	b.eq	416b6c <ferror@plt+0x141cc>  // b.none
  416b84:	nop
  416b88:	subs	x1, x1, #0x1
  416b8c:	ldr	x0, [x0, #24]
  416b90:	b.eq	416b6c <ferror@plt+0x141cc>  // b.none
  416b94:	subs	x1, x1, #0x1
  416b98:	ldr	x0, [x0, #24]
  416b9c:	b.ne	416b88 <ferror@plt+0x141e8>  // b.any
  416ba0:	b	416b6c <ferror@plt+0x141cc>
  416ba4:	stp	x29, x30, [sp, #-16]!
  416ba8:	mov	x29, sp
  416bac:	bl	4026d0 <abort@plt>
  416bb0:	stp	x29, x30, [sp, #-64]!
  416bb4:	mov	x29, sp
  416bb8:	stp	x19, x20, [sp, #16]
  416bbc:	ldr	x19, [x0, #72]
  416bc0:	stp	x21, x22, [sp, #32]
  416bc4:	add	x21, x0, #0x38
  416bc8:	str	x23, [sp, #48]
  416bcc:	mov	x22, x0
  416bd0:	cmp	x19, x21
  416bd4:	ldr	x23, [x0, #24]
  416bd8:	b.eq	416c00 <ferror@plt+0x14260>  // b.none
  416bdc:	cbz	x23, 416c20 <ferror@plt+0x14280>
  416be0:	mov	x20, x19
  416be4:	ldr	x19, [x19, #16]
  416be8:	ldr	x0, [x20, #32]
  416bec:	blr	x23
  416bf0:	mov	x0, x20
  416bf4:	bl	4027c0 <free@plt>
  416bf8:	cmp	x19, x21
  416bfc:	b.ne	416be0 <ferror@plt+0x14240>  // b.any
  416c00:	ldr	x0, [x22, #40]
  416c04:	bl	4027c0 <free@plt>
  416c08:	mov	x0, x22
  416c0c:	ldp	x19, x20, [sp, #16]
  416c10:	ldp	x21, x22, [sp, #32]
  416c14:	ldr	x23, [sp, #48]
  416c18:	ldp	x29, x30, [sp], #64
  416c1c:	b	4027c0 <free@plt>
  416c20:	mov	x0, x19
  416c24:	ldr	x19, [x19, #16]
  416c28:	bl	4027c0 <free@plt>
  416c2c:	cmp	x19, x21
  416c30:	b.eq	416c00 <ferror@plt+0x14260>  // b.none
  416c34:	mov	x0, x19
  416c38:	ldr	x19, [x19, #16]
  416c3c:	bl	4027c0 <free@plt>
  416c40:	cmp	x19, x21
  416c44:	b.ne	416c20 <ferror@plt+0x14280>  // b.any
  416c48:	b	416c00 <ferror@plt+0x14260>
  416c4c:	nop
  416c50:	stp	x29, x30, [sp, #-32]!
  416c54:	mov	x29, sp
  416c58:	ldr	x3, [x0, #96]
  416c5c:	str	x19, [sp, #16]
  416c60:	cmp	x3, x1
  416c64:	b.ls	416d40 <ferror@plt+0x143a0>  // b.plast
  416c68:	sub	x4, x3, #0x1
  416c6c:	add	x2, x0, #0x38
  416c70:	cmp	x1, x4, lsr #1
  416c74:	b.hi	416d10 <ferror@plt+0x14370>  // b.pmore
  416c78:	cbz	x1, 416c8c <ferror@plt+0x142ec>
  416c7c:	nop
  416c80:	subs	x1, x1, #0x1
  416c84:	ldr	x2, [x2, #16]
  416c88:	b.ne	416c80 <ferror@plt+0x142e0>  // b.any
  416c8c:	ldr	x19, [x2, #16]
  416c90:	ldr	x1, [x19, #16]
  416c94:	str	x1, [x2, #16]
  416c98:	str	x2, [x1, #24]
  416c9c:	ldp	x2, x3, [x0, #40]
  416ca0:	ldr	x5, [x19, #8]
  416ca4:	udiv	x1, x5, x3
  416ca8:	msub	x1, x1, x3, x5
  416cac:	add	x3, x2, x1, lsl #3
  416cb0:	ldr	x1, [x2, x1, lsl #3]
  416cb4:	cmp	x1, x19
  416cb8:	b.eq	416cdc <ferror@plt+0x1433c>  // b.none
  416cbc:	nop
  416cc0:	cbz	x1, 416d40 <ferror@plt+0x143a0>
  416cc4:	ldr	x2, [x1]
  416cc8:	cmp	x2, x19
  416ccc:	b.eq	416cd8 <ferror@plt+0x14338>  // b.none
  416cd0:	mov	x1, x2
  416cd4:	b	416cc0 <ferror@plt+0x14320>
  416cd8:	mov	x3, x1
  416cdc:	ldr	x1, [x19]
  416ce0:	str	x1, [x3]
  416ce4:	ldr	x1, [x0, #24]
  416ce8:	str	x4, [x0, #96]
  416cec:	cbz	x1, 416cf8 <ferror@plt+0x14358>
  416cf0:	ldr	x0, [x19, #32]
  416cf4:	blr	x1
  416cf8:	mov	x0, x19
  416cfc:	bl	4027c0 <free@plt>
  416d00:	mov	w0, #0x1                   	// #1
  416d04:	ldr	x19, [sp, #16]
  416d08:	ldp	x29, x30, [sp], #32
  416d0c:	ret
  416d10:	mvn	x1, x1
  416d14:	adds	x1, x3, x1
  416d18:	b.eq	416d2c <ferror@plt+0x1438c>  // b.none
  416d1c:	nop
  416d20:	subs	x1, x1, #0x1
  416d24:	ldr	x2, [x2, #24]
  416d28:	b.ne	416d20 <ferror@plt+0x14380>  // b.any
  416d2c:	ldr	x19, [x2, #24]
  416d30:	ldr	x1, [x19, #24]
  416d34:	str	x1, [x2, #24]
  416d38:	str	x2, [x1, #16]
  416d3c:	b	416c9c <ferror@plt+0x142fc>
  416d40:	bl	4026d0 <abort@plt>
  416d44:	nop
  416d48:	stp	x29, x30, [sp, #-32]!
  416d4c:	mov	x29, sp
  416d50:	ldp	x2, x3, [x0, #40]
  416d54:	ldr	x4, [x1, #8]
  416d58:	str	x19, [sp, #16]
  416d5c:	mov	x19, x1
  416d60:	udiv	x1, x4, x3
  416d64:	msub	x1, x1, x3, x4
  416d68:	add	x4, x2, x1, lsl #3
  416d6c:	ldr	x2, [x2, x1, lsl #3]
  416d70:	cmp	x2, x19
  416d74:	b.eq	416d94 <ferror@plt+0x143f4>  // b.none
  416d78:	cbz	x2, 416ddc <ferror@plt+0x1443c>
  416d7c:	ldr	x3, [x2]
  416d80:	cmp	x3, x19
  416d84:	b.eq	416d90 <ferror@plt+0x143f0>  // b.none
  416d88:	mov	x2, x3
  416d8c:	b	416d78 <ferror@plt+0x143d8>
  416d90:	mov	x4, x2
  416d94:	ldp	x2, x3, [x19, #16]
  416d98:	ldr	x1, [x19]
  416d9c:	str	x1, [x4]
  416da0:	ldr	x1, [x0, #96]
  416da4:	ldr	x4, [x0, #24]
  416da8:	str	x2, [x3, #16]
  416dac:	str	x3, [x2, #24]
  416db0:	sub	x1, x1, #0x1
  416db4:	str	x1, [x0, #96]
  416db8:	cbz	x4, 416dc4 <ferror@plt+0x14424>
  416dbc:	ldr	x0, [x19, #32]
  416dc0:	blr	x4
  416dc4:	mov	x0, x19
  416dc8:	bl	4027c0 <free@plt>
  416dcc:	mov	w0, #0x1                   	// #1
  416dd0:	ldr	x19, [sp, #16]
  416dd4:	ldp	x29, x30, [sp], #32
  416dd8:	ret
  416ddc:	bl	4026d0 <abort@plt>
  416de0:	stp	x29, x30, [sp, #-80]!
  416de4:	mov	x29, sp
  416de8:	stp	x19, x20, [sp, #16]
  416dec:	mov	x19, x3
  416df0:	stp	x21, x22, [sp, #32]
  416df4:	mov	x21, x5
  416df8:	mov	x22, x6
  416dfc:	stp	x23, x24, [sp, #48]
  416e00:	mov	x24, x1
  416e04:	mov	x23, x2
  416e08:	stp	x25, x26, [sp, #64]
  416e0c:	mov	x25, x0
  416e10:	and	w26, w4, #0xff
  416e14:	mov	x0, #0x68                  	// #104
  416e18:	bl	402530 <malloc@plt>
  416e1c:	mov	x20, x0
  416e20:	cbz	x0, 416f38 <ferror@plt+0x14598>
  416e24:	stp	x25, x24, [x20]
  416e28:	lsr	x0, x21, #1
  416e2c:	adds	x0, x0, x21
  416e30:	stp	x23, x19, [x20, #16]
  416e34:	strb	w26, [x20, #32]
  416e38:	b.cs	416fa0 <ferror@plt+0x14600>  // b.hs, b.nlast
  416e3c:	cmp	x0, #0xa
  416e40:	mov	x2, #0xa                   	// #10
  416e44:	csel	x2, x0, x2, cs  // cs = hs, nlast
  416e48:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x2640>
  416e4c:	add	x1, x1, #0xd80
  416e50:	add	x3, x1, #0x740
  416e54:	b	416e60 <ferror@plt+0x144c0>
  416e58:	cmp	x3, x1
  416e5c:	b.eq	416f70 <ferror@plt+0x145d0>  // b.none
  416e60:	ldr	x0, [x1]
  416e64:	add	x1, x1, #0x8
  416e68:	cmp	x2, x0
  416e6c:	b.hi	416e58 <ferror@plt+0x144b8>  // b.pmore
  416e70:	str	x0, [x20, #48]
  416e74:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
  416e78:	cmp	x0, x1
  416e7c:	b.hi	416f70 <ferror@plt+0x145d0>  // b.pmore
  416e80:	mov	x1, #0x8                   	// #8
  416e84:	bl	402600 <calloc@plt>
  416e88:	str	x0, [x20, #40]
  416e8c:	mov	x25, x0
  416e90:	cbz	x0, 416f70 <ferror@plt+0x145d0>
  416e94:	str	x21, [x20, #96]
  416e98:	add	x24, x20, #0x38
  416e9c:	cbz	x21, 416f98 <ferror@plt+0x145f8>
  416ea0:	mov	x23, x24
  416ea4:	b	416ee0 <ferror@plt+0x14540>
  416ea8:	blr	x1
  416eac:	str	x0, [x19, #8]
  416eb0:	ldp	x25, x2, [x20, #40]
  416eb4:	add	x22, x22, #0x8
  416eb8:	subs	x21, x21, #0x1
  416ebc:	udiv	x1, x0, x2
  416ec0:	msub	x0, x1, x2, x0
  416ec4:	ldr	x1, [x25, x0, lsl #3]
  416ec8:	str	x1, [x19]
  416ecc:	str	x19, [x25, x0, lsl #3]
  416ed0:	str	x23, [x19, #24]
  416ed4:	str	x19, [x23, #16]
  416ed8:	b.eq	416f30 <ferror@plt+0x14590>  // b.none
  416edc:	mov	x23, x19
  416ee0:	mov	x0, #0x28                  	// #40
  416ee4:	bl	402530 <malloc@plt>
  416ee8:	mov	x19, x0
  416eec:	cbz	x0, 416f60 <ferror@plt+0x145c0>
  416ef0:	ldr	x1, [x20, #16]
  416ef4:	ldr	x0, [x22]
  416ef8:	str	x0, [x19, #32]
  416efc:	cbnz	x1, 416ea8 <ferror@plt+0x14508>
  416f00:	ldr	x2, [x20, #48]
  416f04:	str	x0, [x19, #8]
  416f08:	add	x22, x22, #0x8
  416f0c:	subs	x21, x21, #0x1
  416f10:	udiv	x1, x0, x2
  416f14:	msub	x0, x1, x2, x0
  416f18:	ldr	x1, [x25, x0, lsl #3]
  416f1c:	str	x1, [x19]
  416f20:	str	x19, [x25, x0, lsl #3]
  416f24:	str	x23, [x19, #24]
  416f28:	str	x19, [x23, #16]
  416f2c:	b.ne	416edc <ferror@plt+0x1453c>  // b.any
  416f30:	str	x24, [x19, #16]
  416f34:	str	x19, [x20, #80]
  416f38:	mov	x0, x20
  416f3c:	ldp	x19, x20, [sp, #16]
  416f40:	ldp	x21, x22, [sp, #32]
  416f44:	ldp	x23, x24, [sp, #48]
  416f48:	ldp	x25, x26, [sp, #64]
  416f4c:	ldp	x29, x30, [sp], #80
  416f50:	ret
  416f54:	mov	x0, x23
  416f58:	ldr	x23, [x23, #24]
  416f5c:	bl	4027c0 <free@plt>
  416f60:	cmp	x24, x23
  416f64:	b.ne	416f54 <ferror@plt+0x145b4>  // b.any
  416f68:	ldr	x0, [x20, #40]
  416f6c:	bl	4027c0 <free@plt>
  416f70:	mov	x0, x20
  416f74:	mov	x20, #0x0                   	// #0
  416f78:	bl	4027c0 <free@plt>
  416f7c:	mov	x0, x20
  416f80:	ldp	x19, x20, [sp, #16]
  416f84:	ldp	x21, x22, [sp, #32]
  416f88:	ldp	x23, x24, [sp, #48]
  416f8c:	ldp	x25, x26, [sp, #64]
  416f90:	ldp	x29, x30, [sp], #80
  416f94:	ret
  416f98:	mov	x19, x24
  416f9c:	b	416f30 <ferror@plt+0x14590>
  416fa0:	mov	x2, #0xffffffffffffffff    	// #-1
  416fa4:	b	416e48 <ferror@plt+0x144a8>
  416fa8:	stp	x29, x30, [sp, #-64]!
  416fac:	mov	x29, sp
  416fb0:	stp	x19, x20, [sp, #16]
  416fb4:	mov	x20, x3
  416fb8:	stp	x21, x22, [sp, #32]
  416fbc:	mov	x22, x1
  416fc0:	mov	x21, x2
  416fc4:	stp	x23, x24, [sp, #48]
  416fc8:	mov	x23, x0
  416fcc:	and	w24, w4, #0xff
  416fd0:	mov	x0, #0x68                  	// #104
  416fd4:	bl	402530 <malloc@plt>
  416fd8:	mov	x19, x0
  416fdc:	cbz	x0, 417014 <ferror@plt+0x14674>
  416fe0:	mov	x0, #0xb                   	// #11
  416fe4:	stp	x23, x22, [x19]
  416fe8:	mov	x1, #0x8                   	// #8
  416fec:	stp	x21, x20, [x19, #16]
  416ff0:	strb	w24, [x19, #32]
  416ff4:	str	x0, [x19, #48]
  416ff8:	bl	402600 <calloc@plt>
  416ffc:	str	x0, [x19, #40]
  417000:	cbz	x0, 41702c <ferror@plt+0x1468c>
  417004:	add	x0, x19, #0x38
  417008:	str	xzr, [x19, #96]
  41700c:	dup	v0.2d, x0
  417010:	stur	q0, [x19, #72]
  417014:	mov	x0, x19
  417018:	ldp	x19, x20, [sp, #16]
  41701c:	ldp	x21, x22, [sp, #32]
  417020:	ldp	x23, x24, [sp, #48]
  417024:	ldp	x29, x30, [sp], #64
  417028:	ret
  41702c:	mov	x0, x19
  417030:	mov	x19, #0x0                   	// #0
  417034:	bl	4027c0 <free@plt>
  417038:	b	417014 <ferror@plt+0x14674>
  41703c:	nop
  417040:	stp	x29, x30, [sp, #-48]!
  417044:	mov	x29, sp
  417048:	stp	x19, x20, [sp, #16]
  41704c:	mov	x19, x0
  417050:	ldr	x0, [x0, #96]
  417054:	ldr	x20, [x19, #48]
  417058:	lsr	x1, x0, #1
  41705c:	adds	x1, x1, x0
  417060:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
  417064:	cmp	x20, x1
  417068:	b.cc	417078 <ferror@plt+0x146d8>  // b.lo, b.ul, b.last
  41706c:	ldp	x19, x20, [sp, #16]
  417070:	ldp	x29, x30, [sp], #48
  417074:	ret
  417078:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  41707c:	add	x2, x2, #0xd80
  417080:	add	x0, x2, #0x740
  417084:	stp	x21, x22, [sp, #32]
  417088:	b	417094 <ferror@plt+0x146f4>
  41708c:	cmp	x0, x2
  417090:	b.eq	417108 <ferror@plt+0x14768>  // b.none
  417094:	ldr	x21, [x2]
  417098:	add	x2, x2, #0x8
  41709c:	cmp	x1, x21
  4170a0:	b.hi	41708c <ferror@plt+0x146ec>  // b.pmore
  4170a4:	cmp	x20, x21
  4170a8:	b.cs	417108 <ferror@plt+0x14768>  // b.hs, b.nlast
  4170ac:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4170b0:	cmp	x21, x0
  4170b4:	b.hi	417108 <ferror@plt+0x14768>  // b.pmore
  4170b8:	mov	x0, x21
  4170bc:	mov	x1, #0x8                   	// #8
  4170c0:	ldr	x22, [x19, #40]
  4170c4:	bl	402600 <calloc@plt>
  4170c8:	cbz	x0, 417108 <ferror@plt+0x14768>
  4170cc:	nop
  4170d0:	cbz	x20, 417118 <ferror@plt+0x14778>
  4170d4:	sub	x20, x20, #0x1
  4170d8:	ldr	x1, [x22, x20, lsl #3]
  4170dc:	cbz	x1, 4170d0 <ferror@plt+0x14730>
  4170e0:	mov	x3, x1
  4170e4:	ldr	x1, [x1]
  4170e8:	ldr	x4, [x3, #8]
  4170ec:	udiv	x2, x4, x21
  4170f0:	msub	x2, x2, x21, x4
  4170f4:	ldr	x4, [x0, x2, lsl #3]
  4170f8:	str	x4, [x3]
  4170fc:	str	x3, [x0, x2, lsl #3]
  417100:	cbnz	x1, 4170e0 <ferror@plt+0x14740>
  417104:	b	4170d0 <ferror@plt+0x14730>
  417108:	ldp	x19, x20, [sp, #16]
  41710c:	ldp	x21, x22, [sp, #32]
  417110:	ldp	x29, x30, [sp], #48
  417114:	ret
  417118:	stp	x0, x21, [x19, #40]
  41711c:	mov	x0, x22
  417120:	ldp	x19, x20, [sp, #16]
  417124:	ldp	x21, x22, [sp, #32]
  417128:	ldp	x29, x30, [sp], #48
  41712c:	b	4027c0 <free@plt>
  417130:	stp	x29, x30, [sp, #-64]!
  417134:	mov	x29, sp
  417138:	stp	x19, x20, [sp, #16]
  41713c:	ldr	x20, [x0, #96]
  417140:	stp	x21, x22, [sp, #32]
  417144:	str	x23, [sp, #48]
  417148:	cmp	x20, x1
  41714c:	b.cc	417234 <ferror@plt+0x14894>  // b.lo, b.ul, b.last
  417150:	mov	x22, x0
  417154:	mov	x19, x1
  417158:	mov	x23, x2
  41715c:	mov	x0, #0x28                  	// #40
  417160:	bl	402530 <malloc@plt>
  417164:	mov	x21, x0
  417168:	cbz	x0, 4171ec <ferror@plt+0x1484c>
  41716c:	ldr	x1, [x22, #16]
  417170:	str	x23, [x21, #32]
  417174:	mov	x0, x23
  417178:	mov	x2, x20
  41717c:	cbz	x1, 417188 <ferror@plt+0x147e8>
  417180:	blr	x1
  417184:	ldr	x2, [x22, #96]
  417188:	str	x0, [x21, #8]
  41718c:	ldp	x4, x5, [x22, #40]
  417190:	cmp	x19, x20, lsr #1
  417194:	add	x3, x22, #0x38
  417198:	udiv	x1, x0, x5
  41719c:	msub	x0, x1, x5, x0
  4171a0:	ldr	x1, [x4, x0, lsl #3]
  4171a4:	str	x1, [x21]
  4171a8:	str	x21, [x4, x0, lsl #3]
  4171ac:	b.hi	417204 <ferror@plt+0x14864>  // b.pmore
  4171b0:	cbz	x19, 4171c4 <ferror@plt+0x14824>
  4171b4:	nop
  4171b8:	subs	x19, x19, #0x1
  4171bc:	ldr	x3, [x3, #16]
  4171c0:	b.ne	4171b8 <ferror@plt+0x14818>  // b.any
  4171c4:	ldr	x0, [x3, #16]
  4171c8:	str	x0, [x21, #16]
  4171cc:	str	x3, [x21, #24]
  4171d0:	ldr	x0, [x21, #16]
  4171d4:	str	x21, [x0, #24]
  4171d8:	str	x21, [x3, #16]
  4171dc:	add	x0, x2, #0x1
  4171e0:	str	x0, [x22, #96]
  4171e4:	mov	x0, x22
  4171e8:	bl	417040 <ferror@plt+0x146a0>
  4171ec:	mov	x0, x21
  4171f0:	ldp	x19, x20, [sp, #16]
  4171f4:	ldp	x21, x22, [sp, #32]
  4171f8:	ldr	x23, [sp, #48]
  4171fc:	ldp	x29, x30, [sp], #64
  417200:	ret
  417204:	subs	x19, x20, x19
  417208:	b.eq	41721c <ferror@plt+0x1487c>  // b.none
  41720c:	nop
  417210:	subs	x19, x19, #0x1
  417214:	ldr	x3, [x3, #24]
  417218:	b.ne	417210 <ferror@plt+0x14870>  // b.any
  41721c:	str	x3, [x21, #16]
  417220:	ldr	x0, [x3, #24]
  417224:	str	x0, [x21, #24]
  417228:	str	x21, [x0, #16]
  41722c:	str	x21, [x3, #24]
  417230:	b	4171dc <ferror@plt+0x1483c>
  417234:	bl	4026d0 <abort@plt>
  417238:	stp	x29, x30, [sp, #-48]!
  41723c:	mov	x29, sp
  417240:	stp	x19, x20, [sp, #16]
  417244:	mov	x20, x2
  417248:	stp	x21, x22, [sp, #32]
  41724c:	mov	x21, x0
  417250:	mov	x22, x1
  417254:	mov	x0, #0x28                  	// #40
  417258:	bl	402530 <malloc@plt>
  41725c:	mov	x19, x0
  417260:	cbz	x0, 4172c0 <ferror@plt+0x14920>
  417264:	ldr	x1, [x21, #16]
  417268:	str	x20, [x0, #32]
  41726c:	cbz	x1, 41727c <ferror@plt+0x148dc>
  417270:	mov	x0, x20
  417274:	blr	x1
  417278:	mov	x20, x0
  41727c:	ldp	x4, x5, [x21, #40]
  417280:	mov	x0, x21
  417284:	ldr	x3, [x21, #96]
  417288:	ldr	x6, [x22, #16]
  41728c:	udiv	x1, x20, x5
  417290:	msub	x2, x1, x5, x20
  417294:	add	x1, x3, #0x1
  417298:	ldr	x3, [x4, x2, lsl #3]
  41729c:	stp	x3, x20, [x19]
  4172a0:	str	x19, [x4, x2, lsl #3]
  4172a4:	str	x6, [x19, #16]
  4172a8:	str	x22, [x19, #24]
  4172ac:	ldr	x2, [x19, #16]
  4172b0:	str	x19, [x2, #24]
  4172b4:	str	x19, [x22, #16]
  4172b8:	str	x1, [x21, #96]
  4172bc:	bl	417040 <ferror@plt+0x146a0>
  4172c0:	mov	x0, x19
  4172c4:	ldp	x19, x20, [sp, #16]
  4172c8:	ldp	x21, x22, [sp, #32]
  4172cc:	ldp	x29, x30, [sp], #48
  4172d0:	ret
  4172d4:	nop
  4172d8:	stp	x29, x30, [sp, #-48]!
  4172dc:	mov	x29, sp
  4172e0:	stp	x19, x20, [sp, #16]
  4172e4:	mov	x20, x2
  4172e8:	stp	x21, x22, [sp, #32]
  4172ec:	mov	x21, x0
  4172f0:	mov	x22, x1
  4172f4:	mov	x0, #0x28                  	// #40
  4172f8:	bl	402530 <malloc@plt>
  4172fc:	mov	x19, x0
  417300:	cbz	x0, 41735c <ferror@plt+0x149bc>
  417304:	ldr	x1, [x21, #16]
  417308:	str	x20, [x0, #32]
  41730c:	cbz	x1, 41731c <ferror@plt+0x1497c>
  417310:	mov	x0, x20
  417314:	blr	x1
  417318:	mov	x20, x0
  41731c:	ldp	x5, x6, [x21, #40]
  417320:	mov	x0, x21
  417324:	ldr	x3, [x21, #96]
  417328:	ldr	x4, [x22, #24]
  41732c:	udiv	x1, x20, x6
  417330:	msub	x2, x1, x6, x20
  417334:	add	x1, x3, #0x1
  417338:	ldr	x3, [x5, x2, lsl #3]
  41733c:	stp	x3, x20, [x19]
  417340:	str	x19, [x5, x2, lsl #3]
  417344:	str	x22, [x19, #16]
  417348:	str	x4, [x19, #24]
  41734c:	str	x19, [x4, #16]
  417350:	str	x19, [x22, #24]
  417354:	str	x1, [x21, #96]
  417358:	bl	417040 <ferror@plt+0x146a0>
  41735c:	mov	x0, x19
  417360:	ldp	x19, x20, [sp, #16]
  417364:	ldp	x21, x22, [sp, #32]
  417368:	ldp	x29, x30, [sp], #48
  41736c:	ret
  417370:	stp	x29, x30, [sp, #-48]!
  417374:	mov	x29, sp
  417378:	stp	x19, x20, [sp, #16]
  41737c:	mov	x20, x0
  417380:	mov	x0, #0x28                  	// #40
  417384:	str	x21, [sp, #32]
  417388:	mov	x21, x1
  41738c:	bl	402530 <malloc@plt>
  417390:	mov	x19, x0
  417394:	cbz	x0, 4173f4 <ferror@plt+0x14a54>
  417398:	ldr	x2, [x20, #16]
  41739c:	str	x21, [x0, #32]
  4173a0:	cbz	x2, 4173b0 <ferror@plt+0x14a10>
  4173a4:	mov	x0, x21
  4173a8:	blr	x2
  4173ac:	mov	x21, x0
  4173b0:	ldp	x5, x6, [x20, #40]
  4173b4:	add	x7, x20, #0x38
  4173b8:	ldr	x3, [x20, #96]
  4173bc:	mov	x0, x20
  4173c0:	ldr	x4, [x20, #80]
  4173c4:	udiv	x2, x21, x6
  4173c8:	msub	x1, x2, x6, x21
  4173cc:	add	x2, x3, #0x1
  4173d0:	ldr	x3, [x5, x1, lsl #3]
  4173d4:	stp	x3, x21, [x19]
  4173d8:	str	x19, [x5, x1, lsl #3]
  4173dc:	str	x7, [x19, #16]
  4173e0:	str	x4, [x19, #24]
  4173e4:	str	x19, [x4, #16]
  4173e8:	str	x19, [x20, #80]
  4173ec:	str	x2, [x20, #96]
  4173f0:	bl	417040 <ferror@plt+0x146a0>
  4173f4:	mov	x0, x19
  4173f8:	ldp	x19, x20, [sp, #16]
  4173fc:	ldr	x21, [sp, #32]
  417400:	ldp	x29, x30, [sp], #48
  417404:	ret
  417408:	stp	x29, x30, [sp, #-48]!
  41740c:	mov	x29, sp
  417410:	stp	x19, x20, [sp, #16]
  417414:	mov	x20, x0
  417418:	mov	x0, #0x28                  	// #40
  41741c:	str	x21, [sp, #32]
  417420:	mov	x21, x1
  417424:	bl	402530 <malloc@plt>
  417428:	mov	x19, x0
  41742c:	cbz	x0, 417490 <ferror@plt+0x14af0>
  417430:	ldr	x2, [x20, #16]
  417434:	str	x21, [x0, #32]
  417438:	cbz	x2, 417448 <ferror@plt+0x14aa8>
  41743c:	mov	x0, x21
  417440:	blr	x2
  417444:	mov	x21, x0
  417448:	ldp	x4, x5, [x20, #40]
  41744c:	add	x6, x20, #0x38
  417450:	ldr	x3, [x20, #96]
  417454:	mov	x0, x20
  417458:	ldr	x7, [x20, #72]
  41745c:	udiv	x2, x21, x5
  417460:	msub	x1, x2, x5, x21
  417464:	add	x2, x3, #0x1
  417468:	ldr	x3, [x4, x1, lsl #3]
  41746c:	stp	x3, x21, [x19]
  417470:	str	x19, [x4, x1, lsl #3]
  417474:	str	x7, [x19, #16]
  417478:	str	x6, [x19, #24]
  41747c:	ldr	x1, [x19, #16]
  417480:	str	x19, [x1, #24]
  417484:	str	x19, [x20, #72]
  417488:	str	x2, [x20, #96]
  41748c:	bl	417040 <ferror@plt+0x146a0>
  417490:	mov	x0, x19
  417494:	ldp	x19, x20, [sp, #16]
  417498:	ldr	x21, [sp, #32]
  41749c:	ldp	x29, x30, [sp], #48
  4174a0:	ret
  4174a4:	nop
  4174a8:	stp	x29, x30, [sp, #-64]!
  4174ac:	mov	x29, sp
  4174b0:	stp	x19, x20, [sp, #16]
  4174b4:	mov	x20, x2
  4174b8:	ldr	x19, [x0, #72]
  4174bc:	stp	x21, x22, [sp, #32]
  4174c0:	mov	x22, x0
  4174c4:	str	x23, [sp, #48]
  4174c8:	add	x23, x0, #0x38
  4174cc:	cmp	x19, x23
  4174d0:	b.eq	41757c <ferror@plt+0x14bdc>  // b.none
  4174d4:	mov	x21, x1
  4174d8:	b	4174e8 <ferror@plt+0x14b48>
  4174dc:	ldr	x19, [x19, #16]
  4174e0:	cmp	x19, x23
  4174e4:	b.eq	41757c <ferror@plt+0x14bdc>  // b.none
  4174e8:	ldr	x0, [x19, #32]
  4174ec:	mov	x1, x20
  4174f0:	blr	x21
  4174f4:	tbnz	w0, #31, 4174dc <ferror@plt+0x14b3c>
  4174f8:	mov	x0, #0x28                  	// #40
  4174fc:	bl	402530 <malloc@plt>
  417500:	mov	x21, x0
  417504:	cbz	x0, 417600 <ferror@plt+0x14c60>
  417508:	ldr	x1, [x22, #16]
  41750c:	str	x20, [x0, #32]
  417510:	cbz	x1, 417520 <ferror@plt+0x14b80>
  417514:	mov	x0, x20
  417518:	blr	x1
  41751c:	mov	x20, x0
  417520:	ldp	x3, x4, [x22, #40]
  417524:	str	x20, [x21, #8]
  417528:	ldr	x2, [x22, #96]
  41752c:	mov	x0, x22
  417530:	udiv	x1, x20, x4
  417534:	msub	x20, x1, x4, x20
  417538:	add	x1, x2, #0x1
  41753c:	ldr	x2, [x3, x20, lsl #3]
  417540:	str	x2, [x21]
  417544:	str	x21, [x3, x20, lsl #3]
  417548:	str	x19, [x21, #16]
  41754c:	ldr	x2, [x19, #24]
  417550:	str	x2, [x21, #24]
  417554:	str	x21, [x2, #16]
  417558:	str	x21, [x19, #24]
  41755c:	str	x1, [x22, #96]
  417560:	bl	417040 <ferror@plt+0x146a0>
  417564:	mov	x0, x21
  417568:	ldp	x19, x20, [sp, #16]
  41756c:	ldp	x21, x22, [sp, #32]
  417570:	ldr	x23, [sp, #48]
  417574:	ldp	x29, x30, [sp], #64
  417578:	ret
  41757c:	mov	x0, #0x28                  	// #40
  417580:	bl	402530 <malloc@plt>
  417584:	mov	x21, x0
  417588:	cbz	x0, 417600 <ferror@plt+0x14c60>
  41758c:	ldr	x1, [x22, #16]
  417590:	str	x20, [x0, #32]
  417594:	cbz	x1, 4175a4 <ferror@plt+0x14c04>
  417598:	mov	x0, x20
  41759c:	blr	x1
  4175a0:	mov	x20, x0
  4175a4:	ldp	x4, x5, [x22, #40]
  4175a8:	str	x20, [x21, #8]
  4175ac:	ldr	x2, [x22, #96]
  4175b0:	mov	x0, x22
  4175b4:	ldr	x3, [x22, #80]
  4175b8:	udiv	x1, x20, x5
  4175bc:	msub	x20, x1, x5, x20
  4175c0:	add	x1, x2, #0x1
  4175c4:	ldr	x2, [x4, x20, lsl #3]
  4175c8:	str	x2, [x21]
  4175cc:	str	x21, [x4, x20, lsl #3]
  4175d0:	str	x23, [x21, #16]
  4175d4:	str	x3, [x21, #24]
  4175d8:	str	x21, [x3, #16]
  4175dc:	str	x21, [x22, #80]
  4175e0:	str	x1, [x22, #96]
  4175e4:	bl	417040 <ferror@plt+0x146a0>
  4175e8:	mov	x0, x21
  4175ec:	ldp	x19, x20, [sp, #16]
  4175f0:	ldp	x21, x22, [sp, #32]
  4175f4:	ldr	x23, [sp, #48]
  4175f8:	ldp	x29, x30, [sp], #64
  4175fc:	ret
  417600:	mov	x21, #0x0                   	// #0
  417604:	b	4175e8 <ferror@plt+0x14c48>
  417608:	stp	x29, x30, [sp, #-80]!
  41760c:	mov	x29, sp
  417610:	stp	x21, x22, [sp, #32]
  417614:	mov	x22, x1
  417618:	mov	x21, x0
  41761c:	stp	x23, x24, [sp, #48]
  417620:	mov	x24, x1
  417624:	ldr	x1, [x0, #16]
  417628:	stp	x19, x20, [sp, #16]
  41762c:	ldr	x23, [x0, #96]
  417630:	str	x25, [sp, #64]
  417634:	cbz	x1, 417644 <ferror@plt+0x14ca4>
  417638:	mov	x0, x24
  41763c:	blr	x1
  417640:	mov	x22, x0
  417644:	ldp	x3, x1, [x21, #40]
  417648:	ldrb	w2, [x21, #32]
  41764c:	ldr	x25, [x21, #8]
  417650:	udiv	x0, x22, x1
  417654:	msub	x0, x0, x1, x22
  417658:	ldr	x19, [x3, x0, lsl #3]
  41765c:	cbnz	w2, 4176d0 <ferror@plt+0x14d30>
  417660:	cbz	x19, 417718 <ferror@plt+0x14d78>
  417664:	cbnz	x25, 417674 <ferror@plt+0x14cd4>
  417668:	b	41783c <ferror@plt+0x14e9c>
  41766c:	ldr	x19, [x19]
  417670:	cbz	x19, 417718 <ferror@plt+0x14d78>
  417674:	ldr	x0, [x19, #8]
  417678:	cmp	x22, x0
  41767c:	b.ne	41766c <ferror@plt+0x14ccc>  // b.any
  417680:	ldr	x1, [x19, #32]
  417684:	mov	x0, x24
  417688:	blr	x25
  41768c:	tst	w0, #0xff
  417690:	b.eq	41766c <ferror@plt+0x14ccc>  // b.none
  417694:	mov	x20, x19
  417698:	ldp	x1, x2, [x21, #40]
  41769c:	ldr	x3, [x20, #8]
  4176a0:	udiv	x0, x3, x2
  4176a4:	msub	x0, x0, x2, x3
  4176a8:	add	x3, x1, x0, lsl #3
  4176ac:	ldr	x0, [x1, x0, lsl #3]
  4176b0:	cmp	x0, x20
  4176b4:	b.eq	4177a8 <ferror@plt+0x14e08>  // b.none
  4176b8:	cbz	x0, 4178c4 <ferror@plt+0x14f24>
  4176bc:	ldr	x1, [x0]
  4176c0:	cmp	x1, x20
  4176c4:	b.eq	41784c <ferror@plt+0x14eac>  // b.none
  4176c8:	mov	x0, x1
  4176cc:	b	4176b8 <ferror@plt+0x14d18>
  4176d0:	cbnz	x19, 417734 <ferror@plt+0x14d94>
  4176d4:	ldr	x1, [x21, #96]
  4176d8:	mov	x20, #0x0                   	// #0
  4176dc:	cmp	x23, x1
  4176e0:	b.cs	417718 <ferror@plt+0x14d78>  // b.hs, b.nlast
  4176e4:	nop
  4176e8:	ldr	x0, [x21, #80]
  4176ec:	mvn	x23, x23
  4176f0:	cmp	x0, x20
  4176f4:	b.eq	417718 <ferror@plt+0x14d78>  // b.none
  4176f8:	adds	x23, x23, x1
  4176fc:	b.ne	41770c <ferror@plt+0x14d6c>  // b.any
  417700:	b	417784 <ferror@plt+0x14de4>
  417704:	subs	x23, x23, #0x1
  417708:	b.eq	417784 <ferror@plt+0x14de4>  // b.none
  41770c:	ldr	x0, [x0, #24]
  417710:	cmp	x20, x0
  417714:	b.ne	417704 <ferror@plt+0x14d64>  // b.any
  417718:	mov	w0, #0x0                   	// #0
  41771c:	ldp	x19, x20, [sp, #16]
  417720:	ldp	x21, x22, [sp, #32]
  417724:	ldp	x23, x24, [sp, #48]
  417728:	ldr	x25, [sp, #64]
  41772c:	ldp	x29, x30, [sp], #80
  417730:	ret
  417734:	mov	x20, #0x0                   	// #0
  417738:	cbnz	x25, 417748 <ferror@plt+0x14da8>
  41773c:	b	417818 <ferror@plt+0x14e78>
  417740:	ldr	x19, [x19]
  417744:	cbz	x19, 417778 <ferror@plt+0x14dd8>
  417748:	ldr	x0, [x19, #8]
  41774c:	cmp	x22, x0
  417750:	b.ne	417740 <ferror@plt+0x14da0>  // b.any
  417754:	ldr	x1, [x19, #32]
  417758:	mov	x0, x24
  41775c:	blr	x25
  417760:	tst	w0, #0xff
  417764:	b.eq	417740 <ferror@plt+0x14da0>  // b.none
  417768:	cbnz	x20, 417854 <ferror@plt+0x14eb4>
  41776c:	mov	x20, x19
  417770:	ldr	x19, [x19]
  417774:	cbnz	x19, 417748 <ferror@plt+0x14da8>
  417778:	ldr	x1, [x21, #96]
  41777c:	cmp	x23, x1
  417780:	b.cc	4176e8 <ferror@plt+0x14d48>  // b.lo, b.ul, b.last
  417784:	cbz	x20, 417718 <ferror@plt+0x14d78>
  417788:	ldp	x1, x2, [x21, #40]
  41778c:	ldr	x3, [x20, #8]
  417790:	udiv	x0, x3, x2
  417794:	msub	x0, x0, x2, x3
  417798:	add	x3, x1, x0, lsl #3
  41779c:	ldr	x0, [x1, x0, lsl #3]
  4177a0:	cmp	x0, x20
  4177a4:	b.ne	4176b8 <ferror@plt+0x14d18>  // b.any
  4177a8:	ldp	x1, x2, [x20, #16]
  4177ac:	ldr	x0, [x20]
  4177b0:	str	x0, [x3]
  4177b4:	ldr	x0, [x21, #96]
  4177b8:	ldr	x3, [x21, #24]
  4177bc:	str	x1, [x2, #16]
  4177c0:	str	x2, [x1, #24]
  4177c4:	sub	x0, x0, #0x1
  4177c8:	str	x0, [x21, #96]
  4177cc:	cbz	x3, 4177d8 <ferror@plt+0x14e38>
  4177d0:	ldr	x0, [x20, #32]
  4177d4:	blr	x3
  4177d8:	mov	x0, x20
  4177dc:	bl	4027c0 <free@plt>
  4177e0:	mov	w0, #0x1                   	// #1
  4177e4:	ldp	x19, x20, [sp, #16]
  4177e8:	ldp	x21, x22, [sp, #32]
  4177ec:	ldp	x23, x24, [sp, #48]
  4177f0:	ldr	x25, [sp, #64]
  4177f4:	ldp	x29, x30, [sp], #80
  4177f8:	ret
  4177fc:	ldr	x0, [x19, #32]
  417800:	cmp	x24, x0
  417804:	b.ne	417810 <ferror@plt+0x14e70>  // b.any
  417808:	cbnz	x20, 417890 <ferror@plt+0x14ef0>
  41780c:	mov	x20, x19
  417810:	ldr	x19, [x19]
  417814:	cbz	x19, 417778 <ferror@plt+0x14dd8>
  417818:	ldr	x0, [x19, #8]
  41781c:	cmp	x22, x0
  417820:	b.ne	417810 <ferror@plt+0x14e70>  // b.any
  417824:	b	4177fc <ferror@plt+0x14e5c>
  417828:	ldr	x0, [x19, #32]
  41782c:	cmp	x24, x0
  417830:	b.eq	417694 <ferror@plt+0x14cf4>  // b.none
  417834:	ldr	x19, [x19]
  417838:	cbz	x19, 417718 <ferror@plt+0x14d78>
  41783c:	ldr	x0, [x19, #8]
  417840:	cmp	x22, x0
  417844:	b.ne	417834 <ferror@plt+0x14e94>  // b.any
  417848:	b	417828 <ferror@plt+0x14e88>
  41784c:	mov	x3, x0
  417850:	b	4177a8 <ferror@plt+0x14e08>
  417854:	ldr	x20, [x21, #72]
  417858:	cbnz	x23, 41786c <ferror@plt+0x14ecc>
  41785c:	b	417718 <ferror@plt+0x14d78>
  417860:	subs	x23, x23, #0x1
  417864:	ldr	x20, [x20, #16]
  417868:	b.eq	417718 <ferror@plt+0x14d78>  // b.none
  41786c:	ldr	x0, [x20, #8]
  417870:	cmp	x22, x0
  417874:	b.ne	417860 <ferror@plt+0x14ec0>  // b.any
  417878:	ldr	x1, [x20, #32]
  41787c:	mov	x0, x24
  417880:	blr	x25
  417884:	tst	w0, #0xff
  417888:	b.eq	417860 <ferror@plt+0x14ec0>  // b.none
  41788c:	b	417788 <ferror@plt+0x14de8>
  417890:	ldr	x20, [x21, #72]
  417894:	cbnz	x23, 4178a8 <ferror@plt+0x14f08>
  417898:	b	417718 <ferror@plt+0x14d78>
  41789c:	subs	x23, x23, #0x1
  4178a0:	ldr	x20, [x20, #16]
  4178a4:	b.eq	417718 <ferror@plt+0x14d78>  // b.none
  4178a8:	ldr	x0, [x20, #8]
  4178ac:	cmp	x22, x0
  4178b0:	b.ne	41789c <ferror@plt+0x14efc>  // b.any
  4178b4:	ldr	x0, [x20, #32]
  4178b8:	cmp	x24, x0
  4178bc:	b.ne	41789c <ferror@plt+0x14efc>  // b.any
  4178c0:	b	417788 <ferror@plt+0x14de8>
  4178c4:	bl	4026d0 <abort@plt>
  4178c8:	stp	x29, x30, [sp, #-64]!
  4178cc:	mov	x29, sp
  4178d0:	stp	x19, x20, [sp, #16]
  4178d4:	ldr	x19, [x0, #72]
  4178d8:	stp	x21, x22, [sp, #32]
  4178dc:	add	x22, x0, #0x38
  4178e0:	cmp	x19, x22
  4178e4:	b.eq	417924 <ferror@plt+0x14f84>  // b.none
  4178e8:	mov	x21, x1
  4178ec:	mov	x20, x2
  4178f0:	str	x23, [sp, #48]
  4178f4:	mov	x23, x0
  4178f8:	b	41790c <ferror@plt+0x14f6c>
  4178fc:	b.eq	417938 <ferror@plt+0x14f98>  // b.none
  417900:	ldr	x19, [x19, #16]
  417904:	cmp	x19, x22
  417908:	b.eq	417920 <ferror@plt+0x14f80>  // b.none
  41790c:	ldr	x0, [x19, #32]
  417910:	mov	x1, x20
  417914:	blr	x21
  417918:	cmp	w0, #0x0
  41791c:	b.le	4178fc <ferror@plt+0x14f5c>
  417920:	ldr	x23, [sp, #48]
  417924:	mov	w0, #0x0                   	// #0
  417928:	ldp	x19, x20, [sp, #16]
  41792c:	ldp	x21, x22, [sp, #32]
  417930:	ldp	x29, x30, [sp], #64
  417934:	ret
  417938:	ldp	x1, x2, [x23, #40]
  41793c:	ldr	x3, [x19, #8]
  417940:	udiv	x0, x3, x2
  417944:	msub	x0, x0, x2, x3
  417948:	add	x3, x1, x0, lsl #3
  41794c:	ldr	x1, [x1, x0, lsl #3]
  417950:	cmp	x1, x19
  417954:	b.eq	417974 <ferror@plt+0x14fd4>  // b.none
  417958:	cbz	x1, 4179c4 <ferror@plt+0x15024>
  41795c:	ldr	x2, [x1]
  417960:	cmp	x2, x19
  417964:	b.eq	417970 <ferror@plt+0x14fd0>  // b.none
  417968:	mov	x1, x2
  41796c:	b	417958 <ferror@plt+0x14fb8>
  417970:	mov	x3, x1
  417974:	ldp	x1, x2, [x19, #16]
  417978:	ldr	x0, [x19]
  41797c:	str	x0, [x3]
  417980:	ldr	x0, [x23, #96]
  417984:	ldr	x3, [x23, #24]
  417988:	str	x1, [x2, #16]
  41798c:	str	x2, [x1, #24]
  417990:	sub	x0, x0, #0x1
  417994:	str	x0, [x23, #96]
  417998:	cbz	x3, 4179a4 <ferror@plt+0x15004>
  41799c:	ldr	x0, [x19, #32]
  4179a0:	blr	x3
  4179a4:	mov	x0, x19
  4179a8:	bl	4027c0 <free@plt>
  4179ac:	mov	w0, #0x1                   	// #1
  4179b0:	ldp	x19, x20, [sp, #16]
  4179b4:	ldp	x21, x22, [sp, #32]
  4179b8:	ldr	x23, [sp, #48]
  4179bc:	ldp	x29, x30, [sp], #64
  4179c0:	ret
  4179c4:	bl	4026d0 <abort@plt>
  4179c8:	adds	x0, x0, #0x10
  4179cc:	b.cs	417a2c <ferror@plt+0x1508c>  // b.hs, b.nlast
  4179d0:	stp	x29, x30, [sp, #-16]!
  4179d4:	mov	x29, sp
  4179d8:	bl	402530 <malloc@plt>
  4179dc:	mov	x1, x0
  4179e0:	mov	x0, #0x0                   	// #0
  4179e4:	cbz	x1, 417a24 <ferror@plt+0x15084>
  4179e8:	add	x0, x1, #0x10
  4179ec:	mov	x2, #0xff00ff00ff00ff00    	// #-71777214294589696
  4179f0:	movk	x2, #0xff01
  4179f4:	mov	w4, #0xfb4a                	// #64330
  4179f8:	movk	w4, #0x1415, lsl #16
  4179fc:	str	w4, [x1, #12]
  417a00:	umulh	x2, x0, x2
  417a04:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  417a08:	add	x3, x3, #0x350
  417a0c:	and	x4, x2, #0xffffffffffffff00
  417a10:	add	x2, x4, x2, lsr #8
  417a14:	sub	x2, x0, x2
  417a18:	ldr	x4, [x3, x2, lsl #3]
  417a1c:	str	x4, [x1]
  417a20:	str	x0, [x3, x2, lsl #3]
  417a24:	ldp	x29, x30, [sp], #16
  417a28:	ret
  417a2c:	mov	x0, #0x0                   	// #0
  417a30:	ret
  417a34:	nop
  417a38:	cbz	x0, 417a50 <ferror@plt+0x150b0>
  417a3c:	ldur	w2, [x0, #-4]
  417a40:	mov	w1, #0xfb4a                	// #64330
  417a44:	movk	w1, #0x1415, lsl #16
  417a48:	cmp	w2, w1
  417a4c:	b.eq	417a54 <ferror@plt+0x150b4>  // b.none
  417a50:	ret
  417a54:	mov	x1, #0xff00ff00ff00ff00    	// #-71777214294589696
  417a58:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  417a5c:	movk	x1, #0xff01
  417a60:	add	x3, x2, #0x350
  417a64:	umulh	x1, x0, x1
  417a68:	and	x2, x1, #0xffffffffffffff00
  417a6c:	add	x1, x2, x1, lsr #8
  417a70:	sub	x2, x0, x1
  417a74:	ldr	x1, [x3, x2, lsl #3]
  417a78:	cbz	x1, 417a50 <ferror@plt+0x150b0>
  417a7c:	cmp	x0, x1
  417a80:	b.ne	417a8c <ferror@plt+0x150ec>  // b.any
  417a84:	b	417ab4 <ferror@plt+0x15114>
  417a88:	b.eq	417aa0 <ferror@plt+0x15100>  // b.none
  417a8c:	mov	x2, x1
  417a90:	ldur	x1, [x1, #-16]
  417a94:	cmp	x0, x1
  417a98:	cbnz	x1, 417a88 <ferror@plt+0x150e8>
  417a9c:	b	417a50 <ferror@plt+0x150b0>
  417aa0:	sub	x2, x2, #0x10
  417aa4:	ldur	x1, [x0, #-16]
  417aa8:	str	x1, [x2]
  417aac:	sub	x0, x0, #0x10
  417ab0:	b	4027c0 <free@plt>
  417ab4:	add	x2, x3, x2, lsl #3
  417ab8:	b	417aa4 <ferror@plt+0x15104>
  417abc:	nop
  417ac0:	and	w5, w2, #0xff
  417ac4:	and	w6, w1, #0xff
  417ac8:	cmp	w5, w1, uxtb
  417acc:	b.eq	417bc0 <ferror@plt+0x15220>  // b.none
  417ad0:	cbz	x3, 417bd8 <ferror@plt+0x15238>
  417ad4:	tst	x0, #0x7
  417ad8:	add	x4, x0, x3
  417adc:	b.ne	417afc <ferror@plt+0x1515c>  // b.any
  417ae0:	b	417b14 <ferror@plt+0x15174>
  417ae4:	add	x0, x0, #0x1
  417ae8:	cmp	x0, x4
  417aec:	sub	x3, x4, x0
  417af0:	b.eq	417b10 <ferror@plt+0x15170>  // b.none
  417af4:	tst	x0, #0x7
  417af8:	b.eq	417b14 <ferror@plt+0x15174>  // b.none
  417afc:	ldrb	w3, [x0]
  417b00:	cmp	w3, w5
  417b04:	ccmp	w3, w6, #0x4, ne  // ne = any
  417b08:	b.ne	417ae4 <ferror@plt+0x15144>  // b.any
  417b0c:	ret
  417b10:	mov	x3, #0x0                   	// #0
  417b14:	ubfiz	w4, w1, #8, #8
  417b18:	ubfiz	w7, w2, #8, #8
  417b1c:	and	w1, w1, #0xff
  417b20:	and	w2, w2, #0xff
  417b24:	orr	w1, w4, w1
  417b28:	orr	w2, w7, w2
  417b2c:	cmp	x3, #0x7
  417b30:	sxtw	x8, w1
  417b34:	sbfiz	x4, x1, #16, #32
  417b38:	sbfiz	x7, x2, #16, #32
  417b3c:	sxtw	x1, w2
  417b40:	orr	x4, x4, x8
  417b44:	orr	x7, x7, x1
  417b48:	orr	x4, x4, x4, lsl #32
  417b4c:	orr	x7, x7, x7, lsl #32
  417b50:	b.ls	417bcc <ferror@plt+0x1522c>  // b.plast
  417b54:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  417b58:	movk	x8, #0xfeff
  417b5c:	b	417b70 <ferror@plt+0x151d0>
  417b60:	sub	x3, x3, #0x8
  417b64:	add	x0, x0, #0x8
  417b68:	cmp	x3, #0x7
  417b6c:	b.ls	417bcc <ferror@plt+0x1522c>  // b.plast
  417b70:	ldr	x1, [x0]
  417b74:	eor	x2, x1, x4
  417b78:	eor	x1, x1, x7
  417b7c:	add	x10, x2, x8
  417b80:	add	x9, x1, x8
  417b84:	bic	x2, x10, x2
  417b88:	bic	x1, x9, x1
  417b8c:	orr	x1, x2, x1
  417b90:	tst	x1, #0x8080808080808080
  417b94:	b.eq	417b60 <ferror@plt+0x151c0>  // b.none
  417b98:	add	x3, x0, x3
  417b9c:	b	417bac <ferror@plt+0x1520c>
  417ba0:	add	x0, x0, #0x1
  417ba4:	cmp	x0, x3
  417ba8:	b.eq	417bd0 <ferror@plt+0x15230>  // b.none
  417bac:	ldrb	w1, [x0]
  417bb0:	cmp	w1, w6
  417bb4:	ccmp	w1, w5, #0x4, ne  // ne = any
  417bb8:	b.ne	417ba0 <ferror@plt+0x15200>  // b.any
  417bbc:	b	417b0c <ferror@plt+0x1516c>
  417bc0:	mov	x2, x3
  417bc4:	and	w1, w1, #0xff
  417bc8:	b	402880 <memchr@plt>
  417bcc:	cbnz	x3, 417b98 <ferror@plt+0x151f8>
  417bd0:	mov	x0, #0x0                   	// #0
  417bd4:	ret
  417bd8:	mov	x3, #0x0                   	// #0
  417bdc:	b	417b14 <ferror@plt+0x15174>
  417be0:	stp	x29, x30, [sp, #-48]!
  417be4:	mov	x29, sp
  417be8:	stp	x19, x20, [sp, #16]
  417bec:	cbz	x0, 417cc4 <ferror@plt+0x15324>
  417bf0:	mov	x19, x0
  417bf4:	mov	w1, #0x2f                  	// #47
  417bf8:	bl	402680 <strrchr@plt>
  417bfc:	mov	x20, x0
  417c00:	cbz	x0, 417c64 <ferror@plt+0x152c4>
  417c04:	str	x21, [sp, #32]
  417c08:	add	x21, x0, #0x1
  417c0c:	sub	x0, x21, x19
  417c10:	cmp	x0, #0x6
  417c14:	b.le	417c80 <ferror@plt+0x152e0>
  417c18:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  417c1c:	sub	x0, x20, #0x6
  417c20:	add	x1, x1, #0x5e8
  417c24:	mov	x2, #0x7                   	// #7
  417c28:	bl	402590 <strncmp@plt>
  417c2c:	cbnz	w0, 417c80 <ferror@plt+0x152e0>
  417c30:	ldrb	w0, [x20, #1]
  417c34:	cmp	w0, #0x6c
  417c38:	b.ne	417ca0 <ferror@plt+0x15300>  // b.any
  417c3c:	ldrb	w0, [x21, #1]
  417c40:	cmp	w0, #0x74
  417c44:	b.ne	417ca0 <ferror@plt+0x15300>  // b.any
  417c48:	ldrb	w0, [x21, #2]
  417c4c:	cmp	w0, #0x2d
  417c50:	b.ne	417ca0 <ferror@plt+0x15300>  // b.any
  417c54:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  417c58:	add	x19, x20, #0x4
  417c5c:	ldr	x21, [sp, #32]
  417c60:	str	x19, [x0, #1112]
  417c64:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  417c68:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  417c6c:	str	x19, [x1, #2904]
  417c70:	str	x19, [x0, #1056]
  417c74:	ldp	x19, x20, [sp, #16]
  417c78:	ldp	x29, x30, [sp], #48
  417c7c:	ret
  417c80:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  417c84:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  417c88:	ldr	x21, [sp, #32]
  417c8c:	str	x19, [x1, #2904]
  417c90:	str	x19, [x0, #1056]
  417c94:	ldp	x19, x20, [sp, #16]
  417c98:	ldp	x29, x30, [sp], #48
  417c9c:	ret
  417ca0:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  417ca4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  417ca8:	mov	x19, x21
  417cac:	str	x19, [x1, #2904]
  417cb0:	str	x19, [x0, #1056]
  417cb4:	ldp	x19, x20, [sp, #16]
  417cb8:	ldr	x21, [sp, #32]
  417cbc:	ldp	x29, x30, [sp], #48
  417cc0:	ret
  417cc4:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x1a640>
  417cc8:	mov	x2, #0x37                  	// #55
  417ccc:	mov	x1, #0x1                   	// #1
  417cd0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  417cd4:	ldr	x3, [x3, #1064]
  417cd8:	add	x0, x0, #0x5b0
  417cdc:	str	x21, [sp, #32]
  417ce0:	bl	402830 <fwrite@plt>
  417ce4:	bl	4026d0 <abort@plt>
  417ce8:	stp	x29, x30, [sp, #-32]!
  417cec:	mov	x29, sp
  417cf0:	stp	x19, x20, [sp, #16]
  417cf4:	mov	x19, x0
  417cf8:	mov	w20, w1
  417cfc:	bl	41dae0 <_obstack_memory_used@@Base+0x120>
  417d00:	ldrb	w2, [x0]
  417d04:	and	w2, w2, #0xffffffdf
  417d08:	cmp	w2, #0x55
  417d0c:	b.ne	417d78 <ferror@plt+0x153d8>  // b.any
  417d10:	ldrb	w2, [x0, #1]
  417d14:	and	w2, w2, #0xffffffdf
  417d18:	cmp	w2, #0x54
  417d1c:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417d20:	ldrb	w1, [x0, #2]
  417d24:	and	w1, w1, #0xffffffdf
  417d28:	cmp	w1, #0x46
  417d2c:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417d30:	ldrb	w1, [x0, #3]
  417d34:	cmp	w1, #0x2d
  417d38:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417d3c:	ldrb	w1, [x0, #4]
  417d40:	cmp	w1, #0x38
  417d44:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417d48:	ldrb	w0, [x0, #5]
  417d4c:	cbnz	w0, 417dcc <ferror@plt+0x1542c>
  417d50:	ldrb	w2, [x19]
  417d54:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  417d58:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  417d5c:	add	x1, x1, #0x600
  417d60:	cmp	w2, #0x60
  417d64:	add	x0, x0, #0x610
  417d68:	csel	x0, x0, x1, eq  // eq = none
  417d6c:	ldp	x19, x20, [sp, #16]
  417d70:	ldp	x29, x30, [sp], #32
  417d74:	ret
  417d78:	cmp	w2, #0x47
  417d7c:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417d80:	ldrb	w2, [x0, #1]
  417d84:	and	w2, w2, #0xffffffdf
  417d88:	cmp	w2, #0x42
  417d8c:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417d90:	ldrb	w1, [x0, #2]
  417d94:	cmp	w1, #0x31
  417d98:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417d9c:	ldrb	w1, [x0, #3]
  417da0:	cmp	w1, #0x38
  417da4:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417da8:	ldrb	w1, [x0, #4]
  417dac:	cmp	w1, #0x30
  417db0:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417db4:	ldrb	w1, [x0, #5]
  417db8:	cmp	w1, #0x33
  417dbc:	b.ne	417dcc <ferror@plt+0x1542c>  // b.any
  417dc0:	ldrb	w1, [x0, #6]
  417dc4:	cmp	w1, #0x30
  417dc8:	b.eq	417df0 <ferror@plt+0x15450>  // b.none
  417dcc:	cmp	w20, #0x9
  417dd0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  417dd4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  417dd8:	add	x1, x1, #0x450
  417ddc:	add	x0, x0, #0x5f8
  417de0:	csel	x0, x0, x1, eq  // eq = none
  417de4:	ldp	x19, x20, [sp, #16]
  417de8:	ldp	x29, x30, [sp], #32
  417dec:	ret
  417df0:	ldrb	w0, [x0, #7]
  417df4:	cbnz	w0, 417dcc <ferror@plt+0x1542c>
  417df8:	ldrb	w2, [x19]
  417dfc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  417e00:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  417e04:	add	x1, x1, #0x5f0
  417e08:	cmp	w2, #0x60
  417e0c:	add	x0, x0, #0x608
  417e10:	csel	x0, x0, x1, eq  // eq = none
  417e14:	ldp	x19, x20, [sp, #16]
  417e18:	ldp	x29, x30, [sp], #32
  417e1c:	ret
  417e20:	sub	sp, sp, #0x100
  417e24:	stp	x29, x30, [sp, #16]
  417e28:	add	x29, sp, #0x10
  417e2c:	stp	x19, x20, [sp, #32]
  417e30:	mov	w19, w5
  417e34:	and	w20, w5, #0x2
  417e38:	stp	x21, x22, [sp, #48]
  417e3c:	mov	w21, w4
  417e40:	stp	x23, x24, [sp, #64]
  417e44:	mov	x23, x1
  417e48:	mov	x24, x3
  417e4c:	stp	x25, x26, [sp, #80]
  417e50:	mov	x26, x6
  417e54:	stp	x27, x28, [sp, #96]
  417e58:	mov	x28, x0
  417e5c:	mov	x27, x2
  417e60:	str	w4, [sp, #116]
  417e64:	str	w5, [sp, #184]
  417e68:	str	x7, [sp, #200]
  417e6c:	bl	4027e0 <__ctype_get_mb_cur_max@plt>
  417e70:	mov	x1, x19
  417e74:	str	x0, [sp, #176]
  417e78:	cmp	w21, #0x4
  417e7c:	ubfx	x10, x1, #1, #1
  417e80:	b.eq	418b10 <ferror@plt+0x16170>  // b.none
  417e84:	ldr	w0, [sp, #116]
  417e88:	b.ls	418218 <ferror@plt+0x15878>  // b.plast
  417e8c:	cmp	w0, #0x7
  417e90:	b.eq	418b7c <ferror@plt+0x161dc>  // b.none
  417e94:	b.ls	418824 <ferror@plt+0x15e84>  // b.plast
  417e98:	ldr	w0, [sp, #116]
  417e9c:	sub	w0, w0, #0x8
  417ea0:	cmp	w0, #0x2
  417ea4:	b.hi	418fbc <ferror@plt+0x1661c>  // b.pmore
  417ea8:	ldr	w19, [sp, #116]
  417eac:	cmp	w19, #0xa
  417eb0:	b.ne	418a08 <ferror@plt+0x16068>  // b.any
  417eb4:	mov	x19, #0x0                   	// #0
  417eb8:	cbz	w20, 418dfc <ferror@plt+0x1645c>
  417ebc:	ldr	x0, [sp, #256]
  417ec0:	str	w10, [sp, #124]
  417ec4:	mov	w25, #0x0                   	// #0
  417ec8:	bl	402390 <strlen@plt>
  417ecc:	cmp	x0, #0x0
  417ed0:	ldr	w10, [sp, #124]
  417ed4:	mov	x12, x0
  417ed8:	mov	w11, #0x1                   	// #1
  417edc:	mov	w5, w11
  417ee0:	csel	w0, w10, wzr, ne  // ne = any
  417ee4:	str	w0, [sp, #208]
  417ee8:	ldr	w0, [sp, #184]
  417eec:	mov	w7, #0x0                   	// #0
  417ef0:	stp	w11, wzr, [sp, #120]
  417ef4:	and	w1, w0, w11
  417ef8:	and	w0, w0, #0x4
  417efc:	stp	w1, w0, [sp, #212]
  417f00:	ldr	x0, [sp, #256]
  417f04:	str	wzr, [sp, #144]
  417f08:	str	x0, [sp, #168]
  417f0c:	str	wzr, [sp, #188]
  417f10:	str	xzr, [sp, #192]
  417f14:	nop
  417f18:	mov	x4, x26
  417f1c:	mov	w26, w5
  417f20:	mov	x20, #0x0                   	// #0
  417f24:	nop
  417f28:	cmp	x24, x20
  417f2c:	cset	w21, ne  // ne = any
  417f30:	cmn	x24, #0x1
  417f34:	b.eq	418288 <ferror@plt+0x158e8>  // b.none
  417f38:	cbz	w21, 418298 <ferror@plt+0x158f8>
  417f3c:	add	x3, x27, x20
  417f40:	cbz	w11, 41854c <ferror@plt+0x15bac>
  417f44:	cbz	x12, 4186f8 <ferror@plt+0x15d58>
  417f48:	cmp	x12, #0x1
  417f4c:	add	x22, x20, x12
  417f50:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  417f54:	b.ne	417f84 <ferror@plt+0x155e4>  // b.any
  417f58:	mov	x0, x27
  417f5c:	stp	x3, x12, [sp, #128]
  417f60:	stp	w10, w7, [sp, #148]
  417f64:	str	w11, [sp, #156]
  417f68:	str	x4, [sp, #160]
  417f6c:	bl	402390 <strlen@plt>
  417f70:	ldp	x3, x12, [sp, #128]
  417f74:	mov	x24, x0
  417f78:	ldp	w10, w7, [sp, #148]
  417f7c:	ldr	w11, [sp, #156]
  417f80:	ldr	x4, [sp, #160]
  417f84:	cmp	x22, x24
  417f88:	b.hi	4186f8 <ferror@plt+0x15d58>  // b.pmore
  417f8c:	ldr	x1, [sp, #168]
  417f90:	mov	x2, x12
  417f94:	mov	x0, x3
  417f98:	stp	x3, x12, [sp, #128]
  417f9c:	stp	w10, w7, [sp, #148]
  417fa0:	str	w11, [sp, #156]
  417fa4:	str	x4, [sp, #160]
  417fa8:	bl	402730 <memcmp@plt>
  417fac:	ldp	w10, w7, [sp, #148]
  417fb0:	ldr	w11, [sp, #156]
  417fb4:	ldp	x3, x12, [sp, #128]
  417fb8:	ldr	x4, [sp, #160]
  417fbc:	cbnz	w0, 4186f8 <ferror@plt+0x15d58>
  417fc0:	cbnz	w10, 4184dc <ferror@plt+0x15b3c>
  417fc4:	ldrb	w22, [x3]
  417fc8:	cmp	w22, #0x7e
  417fcc:	b.ls	418334 <ferror@plt+0x15994>  // b.plast
  417fd0:	ldr	x0, [sp, #176]
  417fd4:	mov	w5, w11
  417fd8:	cmp	x0, #0x1
  417fdc:	b.eq	418568 <ferror@plt+0x15bc8>  // b.none
  417fe0:	str	xzr, [sp, #248]
  417fe4:	cmn	x24, #0x1
  417fe8:	b.ne	418020 <ferror@plt+0x15680>  // b.any
  417fec:	mov	x0, x27
  417ff0:	str	w5, [sp, #128]
  417ff4:	str	x12, [sp, #136]
  417ff8:	stp	w10, w7, [sp, #148]
  417ffc:	str	w11, [sp, #156]
  418000:	str	x4, [sp, #160]
  418004:	bl	402390 <strlen@plt>
  418008:	ldr	w5, [sp, #128]
  41800c:	mov	x24, x0
  418010:	ldp	w10, w7, [sp, #148]
  418014:	ldr	w11, [sp, #156]
  418018:	ldr	x12, [sp, #136]
  41801c:	ldr	x4, [sp, #160]
  418020:	str	w22, [sp, #220]
  418024:	ldr	w22, [sp, #144]
  418028:	mov	x8, #0x0                   	// #0
  41802c:	stp	x19, x4, [sp, #224]
  418030:	mov	w19, w21
  418034:	mov	x21, x8
  418038:	str	x12, [sp, #128]
  41803c:	str	w10, [sp, #136]
  418040:	stp	w25, w5, [sp, #148]
  418044:	stp	w7, w11, [sp, #156]
  418048:	add	x25, x20, x21
  41804c:	add	x3, sp, #0xf8
  418050:	sub	x2, x24, x25
  418054:	add	x1, x27, x25
  418058:	add	x0, sp, #0xf4
  41805c:	bl	41d4f8 <ferror@plt+0x1ab58>
  418060:	mov	x13, #0x2b                  	// #43
  418064:	mov	x3, x0
  418068:	movk	x13, #0x2, lsl #32
  41806c:	cbz	x0, 4180a8 <ferror@plt+0x15708>
  418070:	cmn	x0, #0x1
  418074:	b.eq	418e40 <ferror@plt+0x164a0>  // b.none
  418078:	cmn	x0, #0x2
  41807c:	mov	x6, #0x1                   	// #1
  418080:	b.eq	418e78 <ferror@plt+0x164d8>  // b.none
  418084:	cbnz	w22, 418974 <ferror@plt+0x15fd4>
  418088:	ldr	w0, [sp, #244]
  41808c:	add	x21, x21, x3
  418090:	bl	402900 <iswprint@plt>
  418094:	cmp	w0, #0x0
  418098:	csel	w19, w19, wzr, ne  // ne = any
  41809c:	add	x0, sp, #0xf8
  4180a0:	bl	4026f0 <mbsinit@plt>
  4180a4:	cbz	w0, 418048 <ferror@plt+0x156a8>
  4180a8:	eor	w1, w19, #0x1
  4180ac:	ldr	w0, [sp, #120]
  4180b0:	mov	x8, x21
  4180b4:	mov	w21, w19
  4180b8:	ldp	x19, x4, [sp, #224]
  4180bc:	and	w1, w0, w1
  4180c0:	ldr	w10, [sp, #136]
  4180c4:	and	w1, w1, #0xff
  4180c8:	ldp	w25, w5, [sp, #148]
  4180cc:	ldp	w7, w11, [sp, #156]
  4180d0:	ldr	w22, [sp, #220]
  4180d4:	ldr	x12, [sp, #128]
  4180d8:	cmp	x8, #0x1
  4180dc:	b.hi	4180f0 <ferror@plt+0x15750>  // b.pmore
  4180e0:	cbz	w1, 4185dc <ferror@plt+0x15c3c>
  4180e4:	nop
  4180e8:	ldr	w1, [sp, #120]
  4180ec:	mov	w21, #0x0                   	// #0
  4180f0:	add	x8, x8, x20
  4180f4:	mov	w9, #0x0                   	// #0
  4180f8:	mov	w2, #0x27                  	// #39
  4180fc:	mov	w3, #0x5c                  	// #92
  418100:	mov	w6, #0x24                  	// #36
  418104:	cbz	w1, 4181bc <ferror@plt+0x1581c>
  418108:	cbnz	w10, 4189f4 <ferror@plt+0x16054>
  41810c:	eor	w0, w25, #0x1
  418110:	ands	w0, w7, w0
  418114:	b.eq	41814c <ferror@plt+0x157ac>  // b.none
  418118:	cmp	x23, x19
  41811c:	b.ls	418124 <ferror@plt+0x15784>  // b.plast
  418120:	strb	w2, [x28, x19]
  418124:	add	x9, x19, #0x1
  418128:	cmp	x23, x9
  41812c:	b.ls	418134 <ferror@plt+0x15794>  // b.plast
  418130:	strb	w6, [x28, x9]
  418134:	add	x9, x19, #0x2
  418138:	cmp	x23, x9
  41813c:	b.ls	418144 <ferror@plt+0x157a4>  // b.plast
  418140:	strb	w2, [x28, x9]
  418144:	add	x19, x19, #0x3
  418148:	mov	w25, w0
  41814c:	cmp	x23, x19
  418150:	b.ls	418158 <ferror@plt+0x157b8>  // b.plast
  418154:	strb	w3, [x28, x19]
  418158:	add	x0, x19, #0x1
  41815c:	cmp	x23, x0
  418160:	b.ls	418170 <ferror@plt+0x157d0>  // b.plast
  418164:	lsr	w9, w22, #6
  418168:	add	w9, w9, #0x30
  41816c:	strb	w9, [x28, x0]
  418170:	add	x0, x19, #0x2
  418174:	cmp	x23, x0
  418178:	b.ls	418188 <ferror@plt+0x157e8>  // b.plast
  41817c:	ubfx	x9, x22, #3, #3
  418180:	add	w9, w9, #0x30
  418184:	strb	w9, [x28, x0]
  418188:	and	w22, w22, #0x7
  41818c:	add	x20, x20, #0x1
  418190:	add	w22, w22, #0x30
  418194:	cmp	x8, x20
  418198:	add	x19, x19, #0x3
  41819c:	b.ls	4183dc <ferror@plt+0x15a3c>  // b.plast
  4181a0:	mov	w9, w1
  4181a4:	cmp	x23, x19
  4181a8:	b.ls	4181b0 <ferror@plt+0x15810>  // b.plast
  4181ac:	strb	w22, [x28, x19]
  4181b0:	ldrb	w22, [x27, x20]
  4181b4:	add	x19, x19, #0x1
  4181b8:	cbnz	w1, 418108 <ferror@plt+0x15768>
  4181bc:	eor	w0, w9, #0x1
  4181c0:	and	w0, w25, w0
  4181c4:	and	w0, w0, #0xff
  4181c8:	cbz	w5, 4181dc <ferror@plt+0x1583c>
  4181cc:	cmp	x23, x19
  4181d0:	b.ls	4181d8 <ferror@plt+0x15838>  // b.plast
  4181d4:	strb	w3, [x28, x19]
  4181d8:	add	x19, x19, #0x1
  4181dc:	add	x20, x20, #0x1
  4181e0:	cmp	x20, x8
  4181e4:	b.cs	418478 <ferror@plt+0x15ad8>  // b.hs, b.nlast
  4181e8:	cbz	w0, 418bc4 <ferror@plt+0x16224>
  4181ec:	cmp	x23, x19
  4181f0:	b.ls	4181f8 <ferror@plt+0x15858>  // b.plast
  4181f4:	strb	w2, [x28, x19]
  4181f8:	add	x0, x19, #0x1
  4181fc:	cmp	x23, x0
  418200:	b.ls	418208 <ferror@plt+0x15868>  // b.plast
  418204:	strb	w2, [x28, x0]
  418208:	add	x19, x19, #0x2
  41820c:	mov	w5, #0x0                   	// #0
  418210:	mov	w25, #0x0                   	// #0
  418214:	b	4181a4 <ferror@plt+0x15804>
  418218:	cmp	w21, #0x1
  41821c:	b.eq	418c18 <ferror@plt+0x16278>  // b.none
  418220:	b.ls	4187d8 <ferror@plt+0x15e38>  // b.plast
  418224:	cmp	w0, #0x2
  418228:	b.eq	418c90 <ferror@plt+0x162f0>  // b.none
  41822c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  418230:	add	x0, x0, #0x450
  418234:	str	x0, [sp, #168]
  418238:	mov	w1, #0x1                   	// #1
  41823c:	ldr	w0, [sp, #184]
  418240:	mov	w7, w1
  418244:	mov	w5, w1
  418248:	mov	w10, w1
  41824c:	stp	w1, w1, [sp, #120]
  418250:	mov	w11, #0x0                   	// #0
  418254:	str	w1, [sp, #144]
  418258:	mov	w25, #0x0                   	// #0
  41825c:	str	w1, [sp, #208]
  418260:	and	w1, w0, w1
  418264:	and	w0, w0, #0x4
  418268:	mov	x12, #0x1                   	// #1
  41826c:	mov	x19, #0x0                   	// #0
  418270:	str	wzr, [sp, #188]
  418274:	str	xzr, [sp, #192]
  418278:	stp	w1, w0, [sp, #212]
  41827c:	mov	w0, #0x2                   	// #2
  418280:	str	w0, [sp, #116]
  418284:	b	417f18 <ferror@plt+0x15578>
  418288:	ldrb	w0, [x27, x20]
  41828c:	cmp	w0, #0x0
  418290:	cset	w21, ne  // ne = any
  418294:	cbnz	w21, 417f3c <ferror@plt+0x1559c>
  418298:	ldr	w0, [sp, #144]
  41829c:	cmp	x19, #0x0
  4182a0:	mov	w5, w26
  4182a4:	mov	x26, x4
  4182a8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4182ac:	b.ne	41860c <ferror@plt+0x15c6c>  // b.any
  4182b0:	eor	w10, w10, #0x1
  4182b4:	ands	w7, w10, w7
  4182b8:	b.eq	418ec8 <ferror@plt+0x16528>  // b.none
  4182bc:	ldr	w0, [sp, #188]
  4182c0:	cbz	w0, 418ecc <ferror@plt+0x1652c>
  4182c4:	cbnz	w5, 418f28 <ferror@plt+0x16588>
  4182c8:	ldr	x2, [sp, #192]
  4182cc:	cmp	x23, #0x0
  4182d0:	cset	w0, eq  // eq = none
  4182d4:	cmp	x2, #0x0
  4182d8:	mov	x1, x2
  4182dc:	csel	w0, w0, wzr, ne  // ne = any
  4182e0:	cbz	w0, 418f20 <ferror@plt+0x16580>
  4182e4:	str	w0, [sp, #188]
  4182e8:	mov	w0, #0x27                  	// #39
  4182ec:	ldr	x23, [sp, #192]
  4182f0:	str	x1, [sp, #192]
  4182f4:	mov	w1, #0x1                   	// #1
  4182f8:	mov	x12, #0x1                   	// #1
  4182fc:	mov	w7, w1
  418300:	mov	x19, x12
  418304:	mov	w11, #0x0                   	// #0
  418308:	mov	w10, #0x0                   	// #0
  41830c:	strb	w0, [x28]
  418310:	mov	w0, #0x2                   	// #2
  418314:	str	w0, [sp, #116]
  418318:	str	w1, [sp, #124]
  41831c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  418320:	add	x1, x1, #0x450
  418324:	str	wzr, [sp, #144]
  418328:	str	x1, [sp, #168]
  41832c:	str	wzr, [sp, #208]
  418330:	b	417f18 <ferror@plt+0x15578>
  418334:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  418338:	add	x0, x0, #0x680
  41833c:	ldrh	w0, [x0, w22, uxtw #1]
  418340:	adr	x1, 41834c <ferror@plt+0x159ac>
  418344:	add	x0, x1, w0, sxth #2
  418348:	br	x0
  41834c:	ldr	w0, [sp, #124]
  418350:	cbnz	w0, 418e68 <ferror@plt+0x164c8>
  418354:	mov	w0, w25
  418358:	mov	w21, w11
  41835c:	mov	w5, w11
  418360:	cbz	x4, 418470 <ferror@plt+0x15ad0>
  418364:	ubfx	x1, x22, #5, #8
  418368:	ldr	w1, [x4, x1, lsl #2]
  41836c:	lsr	w1, w1, w22
  418370:	tbz	w1, #0, 418470 <ferror@plt+0x15ad0>
  418374:	cbnz	w10, 4184bc <ferror@plt+0x15b1c>
  418378:	eor	w1, w25, #0x1
  41837c:	ands	w1, w7, w1
  418380:	b.eq	4183c4 <ferror@plt+0x15a24>  // b.none
  418384:	cmp	x23, x19
  418388:	b.ls	418394 <ferror@plt+0x159f4>  // b.plast
  41838c:	mov	w0, #0x27                  	// #39
  418390:	strb	w0, [x28, x19]
  418394:	add	x0, x19, #0x1
  418398:	cmp	x23, x0
  41839c:	b.ls	4183a8 <ferror@plt+0x15a08>  // b.plast
  4183a0:	mov	w2, #0x24                  	// #36
  4183a4:	strb	w2, [x28, x0]
  4183a8:	add	x0, x19, #0x2
  4183ac:	cmp	x23, x0
  4183b0:	b.ls	4183bc <ferror@plt+0x15a1c>  // b.plast
  4183b4:	mov	w2, #0x27                  	// #39
  4183b8:	strb	w2, [x28, x0]
  4183bc:	add	x19, x19, #0x3
  4183c0:	mov	w25, w1
  4183c4:	cmp	x23, x19
  4183c8:	b.ls	4183d4 <ferror@plt+0x15a34>  // b.plast
  4183cc:	mov	w0, #0x5c                  	// #92
  4183d0:	strb	w0, [x28, x19]
  4183d4:	add	x19, x19, #0x1
  4183d8:	add	x20, x20, #0x1
  4183dc:	cmp	x19, x23
  4183e0:	b.cs	4183e8 <ferror@plt+0x15a48>  // b.hs, b.nlast
  4183e4:	strb	w22, [x28, x19]
  4183e8:	cmp	w21, #0x0
  4183ec:	add	x19, x19, #0x1
  4183f0:	csel	w26, w26, wzr, ne  // ne = any
  4183f4:	b	417f28 <ferror@plt+0x15588>
  4183f8:	cbnz	w10, 418614 <ferror@plt+0x15c74>
  4183fc:	mov	w5, #0x0                   	// #0
  418400:	ldr	x1, [sp, #192]
  418404:	cmp	x23, #0x0
  418408:	mov	x0, #0x0                   	// #0
  41840c:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  418410:	b.eq	418454 <ferror@plt+0x15ab4>  // b.none
  418414:	cmp	x23, x19
  418418:	b.ls	418424 <ferror@plt+0x15a84>  // b.plast
  41841c:	mov	w0, #0x27                  	// #39
  418420:	strb	w0, [x28, x19]
  418424:	add	x0, x19, #0x1
  418428:	cmp	x23, x0
  41842c:	b.ls	418438 <ferror@plt+0x15a98>  // b.plast
  418430:	mov	w1, #0x5c                  	// #92
  418434:	strb	w1, [x28, x0]
  418438:	add	x1, x19, #0x2
  41843c:	mov	x0, x23
  418440:	cmp	x23, x1
  418444:	b.ls	418f58 <ferror@plt+0x165b8>  // b.plast
  418448:	ldr	x23, [sp, #192]
  41844c:	mov	w2, #0x27                  	// #39
  418450:	strb	w2, [x28, x1]
  418454:	add	x19, x19, #0x3
  418458:	mov	w22, #0x27                  	// #39
  41845c:	mov	w25, #0x0                   	// #0
  418460:	str	w21, [sp, #188]
  418464:	str	x23, [sp, #192]
  418468:	mov	x23, x0
  41846c:	mov	w0, #0x0                   	// #0
  418470:	cbnz	w5, 418374 <ferror@plt+0x159d4>
  418474:	add	x20, x20, #0x1
  418478:	cbz	w0, 4183dc <ferror@plt+0x15a3c>
  41847c:	cmp	x23, x19
  418480:	b.ls	41848c <ferror@plt+0x15aec>  // b.plast
  418484:	mov	w0, #0x27                  	// #39
  418488:	strb	w0, [x28, x19]
  41848c:	add	x0, x19, #0x1
  418490:	cmp	x23, x0
  418494:	b.ls	4184a0 <ferror@plt+0x15b00>  // b.plast
  418498:	mov	w1, #0x27                  	// #39
  41849c:	strb	w1, [x28, x0]
  4184a0:	add	x19, x19, #0x2
  4184a4:	mov	w25, #0x0                   	// #0
  4184a8:	b	4183dc <ferror@plt+0x15a3c>
  4184ac:	mov	w22, #0x66                  	// #102
  4184b0:	mov	w21, #0x0                   	// #0
  4184b4:	nop
  4184b8:	cbz	w10, 418378 <ferror@plt+0x159d8>
  4184bc:	ldr	w0, [sp, #120]
  4184c0:	and	w0, w0, w7
  4184c4:	str	w0, [sp, #120]
  4184c8:	ldp	w1, w0, [sp, #116]
  4184cc:	cmp	w0, #0x0
  4184d0:	mov	w0, #0x4                   	// #4
  4184d4:	csel	w0, w1, w0, eq  // eq = none
  4184d8:	str	w0, [sp, #116]
  4184dc:	ldr	w4, [sp, #116]
  4184e0:	mov	x3, x24
  4184e4:	ldr	x7, [sp, #200]
  4184e8:	mov	x2, x27
  4184ec:	ldr	x0, [sp, #256]
  4184f0:	str	x0, [sp]
  4184f4:	ldr	w0, [sp, #184]
  4184f8:	mov	x1, x23
  4184fc:	mov	x6, #0x0                   	// #0
  418500:	and	w5, w0, #0xfffffffd
  418504:	mov	x0, x28
  418508:	bl	417e20 <ferror@plt+0x15480>
  41850c:	mov	x19, x0
  418510:	mov	x0, x19
  418514:	ldp	x29, x30, [sp, #16]
  418518:	ldp	x19, x20, [sp, #32]
  41851c:	ldp	x21, x22, [sp, #48]
  418520:	ldp	x23, x24, [sp, #64]
  418524:	ldp	x25, x26, [sp, #80]
  418528:	ldp	x27, x28, [sp, #96]
  41852c:	add	sp, sp, #0x100
  418530:	ret
  418534:	mov	w22, #0x62                  	// #98
  418538:	mov	w21, #0x0                   	// #0
  41853c:	b	4184b8 <ferror@plt+0x15b18>
  418540:	mov	w22, #0x61                  	// #97
  418544:	mov	w21, #0x0                   	// #0
  418548:	b	4184b8 <ferror@plt+0x15b18>
  41854c:	ldrb	w22, [x27, x20]
  418550:	cmp	w22, #0x7e
  418554:	b.ls	4185bc <ferror@plt+0x15c1c>  // b.plast
  418558:	ldr	x0, [sp, #176]
  41855c:	mov	w5, #0x0                   	// #0
  418560:	cmp	x0, #0x1
  418564:	b.ne	417fe0 <ferror@plt+0x15640>  // b.any
  418568:	str	w5, [sp, #128]
  41856c:	str	x12, [sp, #136]
  418570:	stp	w10, w7, [sp, #148]
  418574:	str	w11, [sp, #156]
  418578:	str	x4, [sp, #160]
  41857c:	bl	402770 <__ctype_b_loc@plt>
  418580:	ldr	x0, [x0]
  418584:	ldr	w5, [sp, #128]
  418588:	ldp	w10, w7, [sp, #148]
  41858c:	ldrh	w21, [x0, w22, uxtw #1]
  418590:	ldr	w11, [sp, #156]
  418594:	ands	w0, w21, #0x4000
  418598:	ldr	w0, [sp, #120]
  41859c:	cset	w1, eq  // eq = none
  4185a0:	ubfx	x21, x21, #14, #1
  4185a4:	and	w1, w0, w1
  4185a8:	ldr	x12, [sp, #136]
  4185ac:	ldr	x4, [sp, #160]
  4185b0:	ldr	x8, [sp, #176]
  4185b4:	cbz	w1, 4185dc <ferror@plt+0x15c3c>
  4185b8:	b	4180e8 <ferror@plt+0x15748>
  4185bc:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  4185c0:	add	x0, x0, #0x780
  4185c4:	ldrh	w0, [x0, w22, uxtw #1]
  4185c8:	adr	x1, 4185d4 <ferror@plt+0x15c34>
  4185cc:	add	x0, x1, w0, sxth #2
  4185d0:	br	x0
  4185d4:	mov	w21, w11
  4185d8:	mov	w5, #0x0                   	// #0
  4185dc:	ldr	w1, [sp, #124]
  4185e0:	mov	w0, w25
  4185e4:	cbz	w1, 418360 <ferror@plt+0x159c0>
  4185e8:	mov	w0, w25
  4185ec:	cbnz	w10, 418360 <ferror@plt+0x159c0>
  4185f0:	mov	w0, w25
  4185f4:	cbnz	w5, 418374 <ferror@plt+0x159d4>
  4185f8:	b	418474 <ferror@plt+0x15ad4>
  4185fc:	mov	w5, #0x0                   	// #0
  418600:	mov	w21, #0x0                   	// #0
  418604:	ldr	w0, [sp, #144]
  418608:	cbz	w0, 4185dc <ferror@plt+0x15c3c>
  41860c:	mov	w0, #0x2                   	// #2
  418610:	str	w0, [sp, #116]
  418614:	ldp	w1, w0, [sp, #116]
  418618:	cmp	w0, #0x0
  41861c:	mov	w0, #0x4                   	// #4
  418620:	csel	w0, w1, w0, eq  // eq = none
  418624:	str	w0, [sp, #116]
  418628:	b	4184dc <ferror@plt+0x15b3c>
  41862c:	ldr	w0, [sp, #116]
  418630:	cmp	w0, #0x2
  418634:	b.eq	418958 <ferror@plt+0x15fb8>  // b.none
  418638:	mov	w5, #0x0                   	// #0
  41863c:	ldr	w0, [sp, #116]
  418640:	cmp	w0, #0x5
  418644:	b.ne	418668 <ferror@plt+0x15cc8>  // b.any
  418648:	ldr	w0, [sp, #216]
  41864c:	cbz	w0, 418668 <ferror@plt+0x15cc8>
  418650:	add	x6, x20, #0x2
  418654:	cmp	x6, x24
  418658:	b.cs	418668 <ferror@plt+0x15cc8>  // b.hs, b.nlast
  41865c:	ldrb	w22, [x3, #1]
  418660:	cmp	w22, #0x3f
  418664:	b.eq	418cac <ferror@plt+0x1630c>  // b.none
  418668:	mov	w21, #0x0                   	// #0
  41866c:	mov	w22, #0x3f                  	// #63
  418670:	b	4185dc <ferror@plt+0x15c3c>
  418674:	ldr	w0, [sp, #116]
  418678:	cmp	w0, #0x2
  41867c:	b.eq	4183f8 <ferror@plt+0x15a58>  // b.none
  418680:	mov	w5, #0x0                   	// #0
  418684:	mov	w22, #0x27                  	// #39
  418688:	str	w21, [sp, #188]
  41868c:	b	4185dc <ferror@plt+0x15c3c>
  418690:	mov	w5, #0x0                   	// #0
  418694:	mov	w0, #0x74                  	// #116
  418698:	ldr	w1, [sp, #144]
  41869c:	cbnz	w1, 41860c <ferror@plt+0x15c6c>
  4186a0:	ldr	w1, [sp, #120]
  4186a4:	cbnz	w1, 4186b8 <ferror@plt+0x15d18>
  4186a8:	mov	w0, w25
  4186ac:	mov	w21, #0x0                   	// #0
  4186b0:	cbnz	w10, 418360 <ferror@plt+0x159c0>
  4186b4:	b	4185f0 <ferror@plt+0x15c50>
  4186b8:	mov	w22, w0
  4186bc:	mov	w21, #0x0                   	// #0
  4186c0:	b	4184b8 <ferror@plt+0x15b18>
  4186c4:	mov	w5, #0x0                   	// #0
  4186c8:	mov	w0, #0x66                  	// #102
  4186cc:	b	4186a0 <ferror@plt+0x15d00>
  4186d0:	mov	w5, #0x0                   	// #0
  4186d4:	mov	w0, #0x62                  	// #98
  4186d8:	b	4186a0 <ferror@plt+0x15d00>
  4186dc:	ldr	w0, [sp, #120]
  4186e0:	cbnz	w0, 418728 <ferror@plt+0x15d88>
  4186e4:	ldr	w0, [sp, #212]
  4186e8:	mov	w5, #0x0                   	// #0
  4186ec:	cbz	w0, 4186a8 <ferror@plt+0x15d08>
  4186f0:	add	x20, x20, #0x1
  4186f4:	b	417f28 <ferror@plt+0x15588>
  4186f8:	ldrb	w22, [x3]
  4186fc:	cmp	w22, #0x7e
  418700:	b.hi	418558 <ferror@plt+0x15bb8>  // b.pmore
  418704:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  418708:	add	x0, x0, #0x880
  41870c:	ldrh	w0, [x0, w22, uxtw #1]
  418710:	adr	x1, 41871c <ferror@plt+0x15d7c>
  418714:	add	x0, x1, w0, sxth #2
  418718:	br	x0
  41871c:	mov	w5, #0x0                   	// #0
  418720:	mov	w21, #0x0                   	// #0
  418724:	b	4185dc <ferror@plt+0x15c3c>
  418728:	cbnz	w10, 4189f4 <ferror@plt+0x16054>
  41872c:	mov	w5, #0x0                   	// #0
  418730:	eor	w0, w25, #0x1
  418734:	ands	w0, w7, w0
  418738:	b.eq	4188f4 <ferror@plt+0x15f54>  // b.none
  41873c:	cmp	x23, x19
  418740:	b.ls	41874c <ferror@plt+0x15dac>  // b.plast
  418744:	mov	w1, #0x27                  	// #39
  418748:	strb	w1, [x28, x19]
  41874c:	add	x1, x19, #0x1
  418750:	cmp	x23, x1
  418754:	b.ls	418760 <ferror@plt+0x15dc0>  // b.plast
  418758:	mov	w2, #0x24                  	// #36
  41875c:	strb	w2, [x28, x1]
  418760:	add	x1, x19, #0x2
  418764:	cmp	x23, x1
  418768:	b.ls	418774 <ferror@plt+0x15dd4>  // b.plast
  41876c:	mov	w2, #0x27                  	// #39
  418770:	strb	w2, [x28, x1]
  418774:	add	x1, x19, #0x3
  418778:	cmp	x23, x1
  41877c:	b.ls	4189c0 <ferror@plt+0x16020>  // b.plast
  418780:	mov	w25, w0
  418784:	mov	w0, #0x5c                  	// #92
  418788:	strb	w0, [x28, x1]
  41878c:	ldr	w0, [sp, #116]
  418790:	add	x19, x1, #0x1
  418794:	cmp	w0, #0x2
  418798:	b.eq	4189c8 <ferror@plt+0x16028>  // b.none
  41879c:	add	x0, x20, #0x1
  4187a0:	cmp	x0, x24
  4187a4:	b.cs	4189dc <ferror@plt+0x1603c>  // b.hs, b.nlast
  4187a8:	ldrb	w2, [x27, x0]
  4187ac:	mov	w22, #0x30                  	// #48
  4187b0:	mov	w0, #0x0                   	// #0
  4187b4:	sub	w2, w2, #0x30
  4187b8:	and	w2, w2, #0xff
  4187bc:	cmp	w2, #0x9
  4187c0:	b.ls	418a3c <ferror@plt+0x1609c>  // b.plast
  4187c4:	ldr	w1, [sp, #124]
  4187c8:	mov	w21, #0x0                   	// #0
  4187cc:	cbz	w1, 418360 <ferror@plt+0x159c0>
  4187d0:	cbnz	w5, 418374 <ferror@plt+0x159d4>
  4187d4:	b	418474 <ferror@plt+0x15ad4>
  4187d8:	cbnz	w0, 418fbc <ferror@plt+0x1661c>
  4187dc:	ldr	w0, [sp, #184]
  4187e0:	mov	w5, #0x1                   	// #1
  4187e4:	mov	w7, #0x0                   	// #0
  4187e8:	mov	w11, #0x0                   	// #0
  4187ec:	and	w1, w0, w5
  4187f0:	mov	w25, #0x0                   	// #0
  4187f4:	and	w0, w0, #0x4
  4187f8:	mov	w10, #0x0                   	// #0
  4187fc:	mov	x12, #0x0                   	// #0
  418800:	mov	x19, #0x0                   	// #0
  418804:	stp	wzr, w5, [sp, #120]
  418808:	str	wzr, [sp, #144]
  41880c:	str	xzr, [sp, #168]
  418810:	str	wzr, [sp, #188]
  418814:	str	xzr, [sp, #192]
  418818:	stp	wzr, w1, [sp, #208]
  41881c:	str	w0, [sp, #216]
  418820:	b	417f18 <ferror@plt+0x15578>
  418824:	cmp	w0, #0x5
  418828:	b.ne	41888c <ferror@plt+0x15eec>  // b.any
  41882c:	ldr	w0, [sp, #184]
  418830:	and	w1, w0, #0x1
  418834:	and	w0, w0, #0x4
  418838:	stp	w1, w0, [sp, #212]
  41883c:	cbnz	w20, 418d34 <ferror@plt+0x16394>
  418840:	cbz	x23, 418c50 <ferror@plt+0x162b0>
  418844:	mov	w11, #0x1                   	// #1
  418848:	mov	w0, #0x22                  	// #34
  41884c:	mov	x12, #0x1                   	// #1
  418850:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  418854:	mov	w5, w11
  418858:	add	x1, x1, #0x5f8
  41885c:	mov	x19, x12
  418860:	mov	w7, #0x0                   	// #0
  418864:	mov	w25, #0x0                   	// #0
  418868:	mov	w10, #0x0                   	// #0
  41886c:	strb	w0, [x28]
  418870:	stp	w11, wzr, [sp, #120]
  418874:	str	wzr, [sp, #144]
  418878:	str	x1, [sp, #168]
  41887c:	str	wzr, [sp, #188]
  418880:	str	xzr, [sp, #192]
  418884:	str	wzr, [sp, #208]
  418888:	b	417f18 <ferror@plt+0x15578>
  41888c:	cmp	w0, #0x6
  418890:	b.ne	418fbc <ferror@plt+0x1661c>  // b.any
  418894:	mov	w0, #0x1                   	// #1
  418898:	mov	w1, w0
  41889c:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  4188a0:	add	x0, x0, #0x5f8
  4188a4:	str	x0, [sp, #168]
  4188a8:	mov	w11, w1
  4188ac:	ldr	w0, [sp, #184]
  4188b0:	mov	w5, w1
  4188b4:	mov	w10, w1
  4188b8:	stp	w1, wzr, [sp, #120]
  4188bc:	str	w1, [sp, #208]
  4188c0:	and	w1, w0, w1
  4188c4:	and	w0, w0, #0x4
  4188c8:	mov	w7, #0x0                   	// #0
  4188cc:	mov	w25, #0x0                   	// #0
  4188d0:	mov	x12, #0x1                   	// #1
  4188d4:	mov	x19, #0x0                   	// #0
  4188d8:	str	wzr, [sp, #144]
  4188dc:	str	wzr, [sp, #188]
  4188e0:	str	xzr, [sp, #192]
  4188e4:	stp	w1, w0, [sp, #212]
  4188e8:	mov	w0, #0x5                   	// #5
  4188ec:	str	w0, [sp, #116]
  4188f0:	b	417f18 <ferror@plt+0x15578>
  4188f4:	mov	x1, x19
  4188f8:	cmp	x23, x19
  4188fc:	b.ls	41878c <ferror@plt+0x15dec>  // b.plast
  418900:	mov	w0, w25
  418904:	mov	w25, w0
  418908:	mov	w0, #0x5c                  	// #92
  41890c:	strb	w0, [x28, x1]
  418910:	b	41878c <ferror@plt+0x15dec>
  418914:	mov	w5, #0x0                   	// #0
  418918:	cmp	x24, #0x1
  41891c:	cset	w0, ne  // ne = any
  418920:	cmn	x24, #0x1
  418924:	b.eq	418938 <ferror@plt+0x15f98>  // b.none
  418928:	cbnz	w0, 418720 <ferror@plt+0x15d80>
  41892c:	cbz	x20, 418604 <ferror@plt+0x15c64>
  418930:	mov	w21, #0x0                   	// #0
  418934:	b	4185dc <ferror@plt+0x15c3c>
  418938:	ldrb	w0, [x27, #1]
  41893c:	cmp	w0, #0x0
  418940:	cset	w0, ne  // ne = any
  418944:	cbnz	w0, 418720 <ferror@plt+0x15d80>
  418948:	b	41892c <ferror@plt+0x15f8c>
  41894c:	mov	w5, #0x0                   	// #0
  418950:	cbnz	x20, 418930 <ferror@plt+0x15f90>
  418954:	b	418604 <ferror@plt+0x15c64>
  418958:	cbnz	w10, 418614 <ferror@plt+0x15c74>
  41895c:	mov	w5, #0x0                   	// #0
  418960:	mov	w0, w25
  418964:	mov	w21, #0x0                   	// #0
  418968:	mov	w22, #0x3f                  	// #63
  41896c:	cbnz	w5, 418374 <ferror@plt+0x159d4>
  418970:	b	418474 <ferror@plt+0x15ad4>
  418974:	cmp	x0, #0x1
  418978:	b.eq	418088 <ferror@plt+0x156e8>  // b.none
  41897c:	add	x2, x25, #0x1
  418980:	add	x0, x27, x0
  418984:	add	x2, x27, x2
  418988:	add	x9, x0, x25
  41898c:	b	41899c <ferror@plt+0x15ffc>
  418990:	add	x2, x2, #0x1
  418994:	cmp	x9, x2
  418998:	b.eq	418088 <ferror@plt+0x156e8>  // b.none
  41899c:	ldrb	w0, [x2]
  4189a0:	sub	w0, w0, #0x5b
  4189a4:	and	w0, w0, #0xff
  4189a8:	cmp	w0, #0x21
  4189ac:	b.hi	418990 <ferror@plt+0x15ff0>  // b.pmore
  4189b0:	lsl	x0, x6, x0
  4189b4:	tst	x0, x13
  4189b8:	b.eq	418990 <ferror@plt+0x15ff0>  // b.none
  4189bc:	b	41860c <ferror@plt+0x15c6c>
  4189c0:	add	x19, x19, #0x4
  4189c4:	mov	w25, w0
  4189c8:	mov	w0, #0x0                   	// #0
  4189cc:	mov	w21, #0x0                   	// #0
  4189d0:	mov	w22, #0x30                  	// #48
  4189d4:	cbnz	w5, 418374 <ferror@plt+0x159d4>
  4189d8:	b	418474 <ferror@plt+0x15ad4>
  4189dc:	ldr	w1, [sp, #124]
  4189e0:	mov	w0, #0x0                   	// #0
  4189e4:	mov	w22, #0x30                  	// #48
  4189e8:	mov	w21, #0x0                   	// #0
  4189ec:	cbz	w1, 418360 <ferror@plt+0x159c0>
  4189f0:	b	4187d0 <ferror@plt+0x15e30>
  4189f4:	str	w7, [sp, #120]
  4189f8:	b	418614 <ferror@plt+0x15c74>
  4189fc:	mov	w5, w11
  418a00:	mov	w21, #0x0                   	// #0
  418a04:	b	4185dc <ferror@plt+0x15c3c>
  418a08:	mov	w1, w19
  418a0c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  418a10:	add	x0, x0, #0x6e8
  418a14:	str	w10, [sp, #120]
  418a18:	bl	417ce8 <ferror@plt+0x15348>
  418a1c:	str	x0, [sp, #200]
  418a20:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  418a24:	add	x0, x1, #0x450
  418a28:	mov	w1, w19
  418a2c:	bl	417ce8 <ferror@plt+0x15348>
  418a30:	ldr	w10, [sp, #120]
  418a34:	str	x0, [sp, #256]
  418a38:	b	417eb4 <ferror@plt+0x15514>
  418a3c:	cmp	x23, x19
  418a40:	b.ls	418a48 <ferror@plt+0x160a8>  // b.plast
  418a44:	strb	w22, [x28, x19]
  418a48:	add	x0, x1, #0x2
  418a4c:	cmp	x23, x0
  418a50:	b.ls	418a5c <ferror@plt+0x160bc>  // b.plast
  418a54:	mov	w2, #0x30                  	// #48
  418a58:	strb	w2, [x28, x0]
  418a5c:	add	x19, x1, #0x3
  418a60:	mov	w0, #0x0                   	// #0
  418a64:	mov	w22, #0x30                  	// #48
  418a68:	b	4187c4 <ferror@plt+0x15e24>
  418a6c:	mov	w5, #0x0                   	// #0
  418a70:	ldr	w0, [sp, #116]
  418a74:	cmp	w0, #0x2
  418a78:	b.eq	418af8 <ferror@plt+0x16158>  // b.none
  418a7c:	ldr	w1, [sp, #208]
  418a80:	mov	w22, #0x5c                  	// #92
  418a84:	mov	w0, w22
  418a88:	cbz	w1, 4186a0 <ferror@plt+0x15d00>
  418a8c:	add	x20, x20, #0x1
  418a90:	mov	w0, w25
  418a94:	mov	w21, #0x0                   	// #0
  418a98:	b	418478 <ferror@plt+0x15ad8>
  418a9c:	mov	w5, #0x0                   	// #0
  418aa0:	mov	w0, #0x76                  	// #118
  418aa4:	b	4186a0 <ferror@plt+0x15d00>
  418aa8:	mov	w21, w11
  418aac:	mov	w5, #0x0                   	// #0
  418ab0:	b	418604 <ferror@plt+0x15c64>
  418ab4:	mov	w5, #0x0                   	// #0
  418ab8:	mov	w0, #0x72                  	// #114
  418abc:	b	418698 <ferror@plt+0x15cf8>
  418ac0:	mov	w5, #0x0                   	// #0
  418ac4:	mov	w0, #0x6e                  	// #110
  418ac8:	b	418698 <ferror@plt+0x15cf8>
  418acc:	mov	w5, #0x0                   	// #0
  418ad0:	mov	w0, #0x61                  	// #97
  418ad4:	b	4186a0 <ferror@plt+0x15d00>
  418ad8:	mov	w5, #0x0                   	// #0
  418adc:	mov	w22, #0xa                   	// #10
  418ae0:	mov	w0, #0x6e                  	// #110
  418ae4:	b	4186a0 <ferror@plt+0x15d00>
  418ae8:	mov	w5, #0x0                   	// #0
  418aec:	mov	w22, #0xd                   	// #13
  418af0:	mov	w0, #0x72                  	// #114
  418af4:	b	4186a0 <ferror@plt+0x15d00>
  418af8:	cbnz	w10, 418614 <ferror@plt+0x15c74>
  418afc:	add	x20, x20, #0x1
  418b00:	mov	w0, w25
  418b04:	mov	w21, #0x0                   	// #0
  418b08:	mov	w22, #0x5c                  	// #92
  418b0c:	b	418478 <ferror@plt+0x15ad8>
  418b10:	ldr	w0, [sp, #184]
  418b14:	and	w1, w0, #0x1
  418b18:	and	w0, w0, #0x4
  418b1c:	stp	w1, w0, [sp, #212]
  418b20:	cbnz	w20, 418bcc <ferror@plt+0x1622c>
  418b24:	mov	w0, #0x1                   	// #1
  418b28:	str	w0, [sp, #120]
  418b2c:	cbnz	x23, 418fa4 <ferror@plt+0x16604>
  418b30:	mov	w0, #0x1                   	// #1
  418b34:	mov	w5, w0
  418b38:	mov	w7, w0
  418b3c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  418b40:	add	x0, x0, #0x450
  418b44:	mov	x12, #0x1                   	// #1
  418b48:	mov	w11, #0x0                   	// #0
  418b4c:	mov	x19, x12
  418b50:	mov	w25, #0x0                   	// #0
  418b54:	mov	w10, #0x0                   	// #0
  418b58:	str	w5, [sp, #124]
  418b5c:	str	wzr, [sp, #144]
  418b60:	str	x0, [sp, #168]
  418b64:	mov	w0, #0x2                   	// #2
  418b68:	str	w0, [sp, #116]
  418b6c:	str	wzr, [sp, #188]
  418b70:	str	xzr, [sp, #192]
  418b74:	str	wzr, [sp, #208]
  418b78:	b	417f18 <ferror@plt+0x15578>
  418b7c:	ldr	w0, [sp, #184]
  418b80:	mov	w11, #0x1                   	// #1
  418b84:	mov	w7, #0x0                   	// #0
  418b88:	mov	w5, w11
  418b8c:	and	w1, w0, w11
  418b90:	mov	w25, #0x0                   	// #0
  418b94:	and	w0, w0, #0x4
  418b98:	mov	w10, #0x0                   	// #0
  418b9c:	mov	x12, #0x0                   	// #0
  418ba0:	mov	x19, #0x0                   	// #0
  418ba4:	stp	w11, wzr, [sp, #120]
  418ba8:	str	wzr, [sp, #144]
  418bac:	str	xzr, [sp, #168]
  418bb0:	str	wzr, [sp, #188]
  418bb4:	str	xzr, [sp, #192]
  418bb8:	stp	wzr, w1, [sp, #208]
  418bbc:	str	w0, [sp, #216]
  418bc0:	b	417f18 <ferror@plt+0x15578>
  418bc4:	mov	w5, #0x0                   	// #0
  418bc8:	b	4181a4 <ferror@plt+0x15804>
  418bcc:	mov	w1, #0x1                   	// #1
  418bd0:	mov	w10, w1
  418bd4:	mov	w7, w1
  418bd8:	mov	w5, w1
  418bdc:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  418be0:	add	x0, x0, #0x450
  418be4:	str	w1, [sp, #124]
  418be8:	str	w1, [sp, #144]
  418bec:	str	x0, [sp, #168]
  418bf0:	mov	w0, #0x2                   	// #2
  418bf4:	mov	w11, #0x0                   	// #0
  418bf8:	mov	w25, #0x0                   	// #0
  418bfc:	mov	x12, #0x1                   	// #1
  418c00:	mov	x19, #0x0                   	// #0
  418c04:	stp	w0, wzr, [sp, #116]
  418c08:	str	wzr, [sp, #188]
  418c0c:	str	xzr, [sp, #192]
  418c10:	str	wzr, [sp, #208]
  418c14:	b	417f18 <ferror@plt+0x15578>
  418c18:	ldr	w1, [sp, #184]
  418c1c:	mov	w10, w0
  418c20:	mov	w7, w0
  418c24:	mov	w5, w0
  418c28:	str	w0, [sp, #124]
  418c2c:	and	w2, w1, #0x1
  418c30:	str	w0, [sp, #144]
  418c34:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  418c38:	add	x0, x0, #0x450
  418c3c:	str	x0, [sp, #168]
  418c40:	and	w0, w1, #0x4
  418c44:	str	w2, [sp, #212]
  418c48:	str	w0, [sp, #216]
  418c4c:	b	418bf0 <ferror@plt+0x16250>
  418c50:	mov	w11, #0x1                   	// #1
  418c54:	mov	x12, #0x1                   	// #1
  418c58:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  418c5c:	mov	w5, w11
  418c60:	add	x0, x0, #0x5f8
  418c64:	mov	x19, x12
  418c68:	mov	w7, #0x0                   	// #0
  418c6c:	mov	w25, #0x0                   	// #0
  418c70:	mov	w10, #0x0                   	// #0
  418c74:	stp	w11, wzr, [sp, #120]
  418c78:	str	wzr, [sp, #144]
  418c7c:	str	x0, [sp, #168]
  418c80:	str	wzr, [sp, #188]
  418c84:	str	xzr, [sp, #192]
  418c88:	str	wzr, [sp, #208]
  418c8c:	b	417f18 <ferror@plt+0x15578>
  418c90:	ldr	w0, [sp, #184]
  418c94:	and	w1, w0, #0x1
  418c98:	and	w0, w0, #0x4
  418c9c:	stp	w1, w0, [sp, #212]
  418ca0:	cbnz	w20, 418f60 <ferror@plt+0x165c0>
  418ca4:	str	wzr, [sp, #120]
  418ca8:	b	418b2c <ferror@plt+0x1618c>
  418cac:	ldrb	w2, [x27, x6]
  418cb0:	cmp	w2, #0x3e
  418cb4:	b.hi	418720 <ferror@plt+0x15d80>  // b.pmore
  418cb8:	mov	x1, #0x1                   	// #1
  418cbc:	mov	x0, #0xa38200000000        	// #179778741075968
  418cc0:	movk	x0, #0x7000, lsl #48
  418cc4:	lsl	x1, x1, x2
  418cc8:	mov	w21, #0x0                   	// #0
  418ccc:	tst	x1, x0
  418cd0:	b.eq	4185dc <ferror@plt+0x15c3c>  // b.none
  418cd4:	cbnz	w10, 4184dc <ferror@plt+0x15b3c>
  418cd8:	cmp	x23, x19
  418cdc:	b.ls	418ce4 <ferror@plt+0x16344>  // b.plast
  418ce0:	strb	w22, [x28, x19]
  418ce4:	add	x0, x19, #0x1
  418ce8:	cmp	x23, x0
  418cec:	b.ls	418cf8 <ferror@plt+0x16358>  // b.plast
  418cf0:	mov	w1, #0x22                  	// #34
  418cf4:	strb	w1, [x28, x0]
  418cf8:	add	x0, x19, #0x2
  418cfc:	cmp	x23, x0
  418d00:	b.ls	418d0c <ferror@plt+0x1636c>  // b.plast
  418d04:	mov	w1, #0x22                  	// #34
  418d08:	strb	w1, [x28, x0]
  418d0c:	add	x0, x19, #0x3
  418d10:	cmp	x23, x0
  418d14:	b.ls	418d20 <ferror@plt+0x16380>  // b.plast
  418d18:	mov	w1, #0x3f                  	// #63
  418d1c:	strb	w1, [x28, x0]
  418d20:	add	x19, x19, #0x4
  418d24:	mov	w22, w2
  418d28:	mov	x20, x6
  418d2c:	mov	w0, w25
  418d30:	b	4187c4 <ferror@plt+0x15e24>
  418d34:	mov	w0, #0x1                   	// #1
  418d38:	mov	w1, w0
  418d3c:	mov	w11, w1
  418d40:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  418d44:	mov	w5, w1
  418d48:	add	x0, x0, #0x5f8
  418d4c:	mov	w10, w1
  418d50:	mov	w7, #0x0                   	// #0
  418d54:	mov	w25, #0x0                   	// #0
  418d58:	mov	x12, #0x1                   	// #1
  418d5c:	mov	x19, #0x0                   	// #0
  418d60:	stp	w1, wzr, [sp, #120]
  418d64:	str	wzr, [sp, #144]
  418d68:	str	x0, [sp, #168]
  418d6c:	str	wzr, [sp, #188]
  418d70:	str	xzr, [sp, #192]
  418d74:	str	w1, [sp, #208]
  418d78:	b	417f18 <ferror@plt+0x15578>
  418d7c:	mov	w5, w11
  418d80:	cbnz	x20, 418930 <ferror@plt+0x15f90>
  418d84:	b	418604 <ferror@plt+0x15c64>
  418d88:	mov	w5, w11
  418d8c:	b	418918 <ferror@plt+0x15f78>
  418d90:	mov	w5, w11
  418d94:	b	418aec <ferror@plt+0x1614c>
  418d98:	mov	w5, w11
  418d9c:	mov	w0, #0x76                  	// #118
  418da0:	b	4186a0 <ferror@plt+0x15d00>
  418da4:	mov	w5, w11
  418da8:	b	418a70 <ferror@plt+0x160d0>
  418dac:	ldr	w0, [sp, #116]
  418db0:	mov	w5, w11
  418db4:	cmp	w0, #0x2
  418db8:	b.ne	41863c <ferror@plt+0x15c9c>  // b.any
  418dbc:	b	418960 <ferror@plt+0x15fc0>
  418dc0:	mov	w5, w11
  418dc4:	mov	w21, w11
  418dc8:	b	418604 <ferror@plt+0x15c64>
  418dcc:	mov	w5, w11
  418dd0:	b	418adc <ferror@plt+0x1613c>
  418dd4:	mov	w5, w11
  418dd8:	mov	w0, #0x74                  	// #116
  418ddc:	b	418698 <ferror@plt+0x15cf8>
  418de0:	mov	w5, w11
  418de4:	b	418730 <ferror@plt+0x15d90>
  418de8:	ldr	w0, [sp, #116]
  418dec:	mov	w5, w11
  418df0:	cmp	w0, #0x2
  418df4:	b.ne	418684 <ferror@plt+0x15ce4>  // b.any
  418df8:	b	418400 <ferror@plt+0x15a60>
  418dfc:	ldr	x0, [sp, #200]
  418e00:	ldrb	w0, [x0]
  418e04:	cbz	w0, 417ebc <ferror@plt+0x1551c>
  418e08:	cmp	x23, x19
  418e0c:	b.ls	418e2c <ferror@plt+0x1648c>  // b.plast
  418e10:	strb	w0, [x28, x19]
  418e14:	add	x19, x19, #0x1
  418e18:	ldr	x0, [sp, #200]
  418e1c:	ldrb	w0, [x0, x19]
  418e20:	cbz	w0, 417ebc <ferror@plt+0x1551c>
  418e24:	cmp	x23, x19
  418e28:	b.hi	418e10 <ferror@plt+0x16470>  // b.pmore
  418e2c:	ldr	x0, [sp, #200]
  418e30:	add	x19, x19, #0x1
  418e34:	ldrb	w0, [x0, x19]
  418e38:	cbnz	w0, 418e08 <ferror@plt+0x16468>
  418e3c:	b	417ebc <ferror@plt+0x1551c>
  418e40:	mov	x8, x21
  418e44:	ldr	w1, [sp, #120]
  418e48:	ldr	w10, [sp, #136]
  418e4c:	mov	w21, #0x0                   	// #0
  418e50:	ldp	w25, w5, [sp, #148]
  418e54:	ldp	w7, w11, [sp, #156]
  418e58:	ldr	w22, [sp, #220]
  418e5c:	ldr	x12, [sp, #128]
  418e60:	ldp	x19, x4, [sp, #224]
  418e64:	b	4180d8 <ferror@plt+0x15738>
  418e68:	ldr	w5, [sp, #124]
  418e6c:	mov	w0, w25
  418e70:	mov	w21, w5
  418e74:	b	4185f4 <ferror@plt+0x15c54>
  418e78:	mov	x9, x25
  418e7c:	cmp	x25, x24
  418e80:	ldr	w10, [sp, #136]
  418e84:	mov	x8, x21
  418e88:	ldp	w25, w5, [sp, #148]
  418e8c:	ldp	w7, w11, [sp, #156]
  418e90:	ldr	w22, [sp, #220]
  418e94:	ldr	x12, [sp, #128]
  418e98:	ldp	x19, x4, [sp, #224]
  418e9c:	b.cc	418eb4 <ferror@plt+0x16514>  // b.lo, b.ul, b.last
  418ea0:	b	418ebc <ferror@plt+0x1651c>
  418ea4:	add	x8, x8, #0x1
  418ea8:	add	x9, x20, x8
  418eac:	cmp	x24, x9
  418eb0:	b.ls	418ebc <ferror@plt+0x1651c>  // b.plast
  418eb4:	ldrb	w0, [x27, x9]
  418eb8:	cbnz	w0, 418ea4 <ferror@plt+0x16504>
  418ebc:	ldr	w1, [sp, #120]
  418ec0:	mov	w21, #0x0                   	// #0
  418ec4:	b	4180d8 <ferror@plt+0x15738>
  418ec8:	mov	w7, w10
  418ecc:	ldr	x0, [sp, #168]
  418ed0:	cmp	x0, #0x0
  418ed4:	ccmp	w7, #0x0, #0x4, ne  // ne = any
  418ed8:	b.eq	418f00 <ferror@plt+0x16560>  // b.none
  418edc:	ldrb	w1, [x0]
  418ee0:	cbz	w1, 418f00 <ferror@plt+0x16560>
  418ee4:	sub	x0, x0, x19
  418ee8:	cmp	x23, x19
  418eec:	b.ls	418f10 <ferror@plt+0x16570>  // b.plast
  418ef0:	strb	w1, [x28, x19]
  418ef4:	add	x19, x19, #0x1
  418ef8:	ldrb	w1, [x0, x19]
  418efc:	cbnz	w1, 418ee8 <ferror@plt+0x16548>
  418f00:	cmp	x23, x19
  418f04:	b.ls	418510 <ferror@plt+0x15b70>  // b.plast
  418f08:	strb	wzr, [x28, x19]
  418f0c:	b	418510 <ferror@plt+0x15b70>
  418f10:	add	x19, x19, #0x1
  418f14:	ldrb	w1, [x0, x19]
  418f18:	cbnz	w1, 418ee8 <ferror@plt+0x16548>
  418f1c:	b	418f00 <ferror@plt+0x16560>
  418f20:	ldr	w7, [sp, #188]
  418f24:	b	418ecc <ferror@plt+0x1652c>
  418f28:	ldp	x1, x7, [sp, #192]
  418f2c:	mov	x6, x4
  418f30:	ldr	w5, [sp, #184]
  418f34:	mov	x3, x24
  418f38:	ldr	x0, [sp, #256]
  418f3c:	str	x0, [sp]
  418f40:	mov	x2, x27
  418f44:	mov	x0, x28
  418f48:	mov	w4, #0x5                   	// #5
  418f4c:	bl	417e20 <ferror@plt+0x15480>
  418f50:	mov	x19, x0
  418f54:	b	418510 <ferror@plt+0x15b70>
  418f58:	ldr	x23, [sp, #192]
  418f5c:	b	418454 <ferror@plt+0x15ab4>
  418f60:	mov	w1, #0x1                   	// #1
  418f64:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0x1640>
  418f68:	mov	w10, w1
  418f6c:	add	x0, x0, #0x450
  418f70:	mov	w7, w1
  418f74:	mov	w5, w1
  418f78:	mov	w11, #0x0                   	// #0
  418f7c:	mov	w25, #0x0                   	// #0
  418f80:	mov	x12, #0x1                   	// #1
  418f84:	mov	x19, #0x0                   	// #0
  418f88:	stp	wzr, w1, [sp, #120]
  418f8c:	str	w1, [sp, #144]
  418f90:	str	x0, [sp, #168]
  418f94:	str	wzr, [sp, #188]
  418f98:	str	xzr, [sp, #192]
  418f9c:	str	wzr, [sp, #208]
  418fa0:	b	417f18 <ferror@plt+0x15578>
  418fa4:	mov	w25, #0x0                   	// #0
  418fa8:	mov	w0, #0x0                   	// #0
  418fac:	mov	w5, #0x1                   	// #1
  418fb0:	mov	x1, #0x0                   	// #0
  418fb4:	str	x23, [sp, #192]
  418fb8:	b	4182e4 <ferror@plt+0x15944>
  418fbc:	bl	4026d0 <abort@plt>
  418fc0:	sub	sp, sp, #0x80
  418fc4:	stp	x29, x30, [sp, #16]
  418fc8:	add	x29, sp, #0x10
  418fcc:	stp	x19, x20, [sp, #32]
  418fd0:	mov	w19, w0
  418fd4:	mov	x20, x3
  418fd8:	stp	x21, x22, [sp, #48]
  418fdc:	stp	x23, x24, [sp, #64]
  418fe0:	mov	x23, x1
  418fe4:	mov	x24, x2
  418fe8:	stp	x25, x26, [sp, #80]
  418fec:	stp	x27, x28, [sp, #96]
  418ff0:	bl	402920 <__errno_location@plt>
  418ff4:	mov	x22, x0
  418ff8:	ldr	w0, [x0]
  418ffc:	adrp	x27, 438000 <_obstack_memory_used@@Base+0x1a640>
  419000:	str	w0, [sp, #116]
  419004:	ldr	x21, [x27, #936]
  419008:	tbnz	w19, #31, 419160 <ferror@plt+0x167c0>
  41900c:	add	x26, x27, #0x3a8
  419010:	ldr	w0, [x26, #8]
  419014:	cmp	w0, w19
  419018:	b.gt	419068 <ferror@plt+0x166c8>
  41901c:	mov	w0, #0x7fffffff            	// #2147483647
  419020:	cmp	w19, w0
  419024:	b.eq	41915c <ferror@plt+0x167bc>  // b.none
  419028:	add	w28, w19, #0x1
  41902c:	add	x0, x26, #0x10
  419030:	cmp	x21, x0
  419034:	sbfiz	x1, x28, #4, #32
  419038:	b.eq	419140 <ferror@plt+0x167a0>  // b.none
  41903c:	mov	x0, x21
  419040:	bl	41ca60 <ferror@plt+0x1a0c0>
  419044:	mov	x21, x0
  419048:	str	x0, [x27, #936]
  41904c:	ldr	w0, [x26, #8]
  419050:	mov	w1, #0x0                   	// #0
  419054:	sub	w2, w28, w0
  419058:	add	x0, x21, w0, sxtw #4
  41905c:	sbfiz	x2, x2, #4, #32
  419060:	bl	4025c0 <memset@plt>
  419064:	str	w28, [x26, #8]
  419068:	sbfiz	x19, x19, #4, #32
  41906c:	add	x26, x20, #0x8
  419070:	add	x0, x21, x19
  419074:	str	x0, [sp, #120]
  419078:	ldp	w4, w5, [x20]
  41907c:	mov	x6, x26
  419080:	ldr	x7, [x20, #40]
  419084:	orr	w25, w5, #0x1
  419088:	ldr	x27, [x21, x19]
  41908c:	mov	x3, x24
  419090:	ldr	x28, [x0, #8]
  419094:	mov	x1, x27
  419098:	ldr	x0, [x20, #48]
  41909c:	str	x0, [sp]
  4190a0:	mov	x2, x23
  4190a4:	mov	w5, w25
  4190a8:	mov	x0, x28
  4190ac:	bl	417e20 <ferror@plt+0x15480>
  4190b0:	cmp	x27, x0
  4190b4:	b.hi	419114 <ferror@plt+0x16774>  // b.pmore
  4190b8:	add	x27, x0, #0x1
  4190bc:	str	x27, [x21, x19]
  4190c0:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4190c4:	add	x0, x0, #0xb60
  4190c8:	cmp	x28, x0
  4190cc:	b.eq	4190d8 <ferror@plt+0x16738>  // b.none
  4190d0:	mov	x0, x28
  4190d4:	bl	4027c0 <free@plt>
  4190d8:	mov	x0, x27
  4190dc:	bl	41ca30 <ferror@plt+0x1a090>
  4190e0:	ldr	x1, [sp, #120]
  4190e4:	mov	x28, x0
  4190e8:	ldr	w4, [x20]
  4190ec:	mov	x6, x26
  4190f0:	ldr	x7, [x20, #40]
  4190f4:	str	x0, [x1, #8]
  4190f8:	ldr	x1, [x20, #48]
  4190fc:	str	x1, [sp]
  419100:	mov	w5, w25
  419104:	mov	x3, x24
  419108:	mov	x2, x23
  41910c:	mov	x1, x27
  419110:	bl	417e20 <ferror@plt+0x15480>
  419114:	ldr	w0, [sp, #116]
  419118:	ldp	x29, x30, [sp, #16]
  41911c:	ldp	x19, x20, [sp, #32]
  419120:	ldp	x23, x24, [sp, #64]
  419124:	ldp	x25, x26, [sp, #80]
  419128:	str	w0, [x22]
  41912c:	mov	x0, x28
  419130:	ldp	x21, x22, [sp, #48]
  419134:	ldp	x27, x28, [sp, #96]
  419138:	add	sp, sp, #0x80
  41913c:	ret
  419140:	mov	x0, #0x0                   	// #0
  419144:	bl	41ca60 <ferror@plt+0x1a0c0>
  419148:	mov	x21, x0
  41914c:	str	x0, [x27, #936]
  419150:	ldp	x0, x1, [x26, #16]
  419154:	stp	x0, x1, [x21]
  419158:	b	41904c <ferror@plt+0x166ac>
  41915c:	bl	41cbf8 <ferror@plt+0x1a258>
  419160:	bl	4026d0 <abort@plt>
  419164:	nop
  419168:	stp	x29, x30, [sp, #-48]!
  41916c:	mov	x29, sp
  419170:	stp	x19, x20, [sp, #16]
  419174:	mov	x20, x0
  419178:	str	x21, [sp, #32]
  41917c:	bl	402920 <__errno_location@plt>
  419180:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419184:	mov	x19, x0
  419188:	add	x2, x2, #0xb60
  41918c:	cmp	x20, #0x0
  419190:	add	x2, x2, #0x100
  419194:	mov	x1, #0x38                  	// #56
  419198:	ldr	w21, [x19]
  41919c:	csel	x0, x2, x20, eq  // eq = none
  4191a0:	bl	41cb78 <ferror@plt+0x1a1d8>
  4191a4:	str	w21, [x19]
  4191a8:	ldp	x19, x20, [sp, #16]
  4191ac:	ldr	x21, [sp, #32]
  4191b0:	ldp	x29, x30, [sp], #48
  4191b4:	ret
  4191b8:	adrp	x1, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4191bc:	add	x1, x1, #0xb60
  4191c0:	cmp	x0, #0x0
  4191c4:	add	x1, x1, #0x100
  4191c8:	csel	x0, x1, x0, eq  // eq = none
  4191cc:	ldr	w0, [x0]
  4191d0:	ret
  4191d4:	nop
  4191d8:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4191dc:	add	x2, x2, #0xb60
  4191e0:	cmp	x0, #0x0
  4191e4:	add	x2, x2, #0x100
  4191e8:	csel	x0, x2, x0, eq  // eq = none
  4191ec:	str	w1, [x0]
  4191f0:	ret
  4191f4:	nop
  4191f8:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4191fc:	add	x3, x3, #0xb60
  419200:	cmp	x0, #0x0
  419204:	add	x3, x3, #0x100
  419208:	csel	x0, x3, x0, eq  // eq = none
  41920c:	ubfx	x4, x1, #5, #3
  419210:	add	x3, x0, #0x8
  419214:	and	w1, w1, #0x1f
  419218:	ldr	w5, [x3, x4, lsl #2]
  41921c:	lsr	w0, w5, w1
  419220:	eor	w2, w0, w2
  419224:	and	w2, w2, #0x1
  419228:	and	w0, w0, #0x1
  41922c:	lsl	w2, w2, w1
  419230:	eor	w2, w2, w5
  419234:	str	w2, [x3, x4, lsl #2]
  419238:	ret
  41923c:	nop
  419240:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419244:	add	x3, x3, #0xb60
  419248:	cmp	x0, #0x0
  41924c:	add	x3, x3, #0x100
  419250:	csel	x2, x3, x0, eq  // eq = none
  419254:	ldr	w0, [x2, #4]
  419258:	str	w1, [x2, #4]
  41925c:	ret
  419260:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419264:	add	x3, x3, #0xb60
  419268:	cmp	x0, #0x0
  41926c:	add	x3, x3, #0x100
  419270:	csel	x0, x3, x0, eq  // eq = none
  419274:	mov	w3, #0xa                   	// #10
  419278:	cmp	x1, #0x0
  41927c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  419280:	str	w3, [x0]
  419284:	b.eq	419290 <ferror@plt+0x168f0>  // b.none
  419288:	stp	x1, x2, [x0, #40]
  41928c:	ret
  419290:	stp	x29, x30, [sp, #-16]!
  419294:	mov	x29, sp
  419298:	bl	4026d0 <abort@plt>
  41929c:	nop
  4192a0:	sub	sp, sp, #0x50
  4192a4:	adrp	x5, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4192a8:	stp	x29, x30, [sp, #16]
  4192ac:	add	x29, sp, #0x10
  4192b0:	stp	x19, x20, [sp, #32]
  4192b4:	mov	x19, x4
  4192b8:	add	x4, x5, #0xb60
  4192bc:	cmp	x19, #0x0
  4192c0:	add	x4, x4, #0x100
  4192c4:	csel	x19, x4, x19, eq  // eq = none
  4192c8:	mov	x20, x3
  4192cc:	stp	x21, x22, [sp, #48]
  4192d0:	mov	x21, x0
  4192d4:	mov	x22, x1
  4192d8:	str	x23, [sp, #64]
  4192dc:	mov	x23, x2
  4192e0:	bl	402920 <__errno_location@plt>
  4192e4:	ldp	x7, x8, [x19, #40]
  4192e8:	mov	x3, x20
  4192ec:	mov	x20, x0
  4192f0:	mov	x0, x21
  4192f4:	ldp	w4, w5, [x19]
  4192f8:	mov	x2, x23
  4192fc:	ldr	w21, [x20]
  419300:	mov	x1, x22
  419304:	str	x8, [sp]
  419308:	add	x6, x19, #0x8
  41930c:	bl	417e20 <ferror@plt+0x15480>
  419310:	ldp	x29, x30, [sp, #16]
  419314:	ldr	x23, [sp, #64]
  419318:	str	w21, [x20]
  41931c:	ldp	x19, x20, [sp, #32]
  419320:	ldp	x21, x22, [sp, #48]
  419324:	add	sp, sp, #0x50
  419328:	ret
  41932c:	nop
  419330:	sub	sp, sp, #0x60
  419334:	adrp	x4, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419338:	add	x4, x4, #0xb60
  41933c:	cmp	x2, #0x0
  419340:	add	x4, x4, #0x100
  419344:	stp	x29, x30, [sp, #16]
  419348:	add	x29, sp, #0x10
  41934c:	stp	x19, x20, [sp, #32]
  419350:	csel	x19, x4, x2, eq  // eq = none
  419354:	stp	x21, x22, [sp, #48]
  419358:	mov	x22, x0
  41935c:	stp	x23, x24, [sp, #64]
  419360:	mov	x23, x1
  419364:	stp	x25, x26, [sp, #80]
  419368:	bl	402920 <__errno_location@plt>
  41936c:	ldr	w26, [x0]
  419370:	ldp	w4, w24, [x19]
  419374:	mov	x20, x0
  419378:	ldp	x7, x0, [x19, #40]
  41937c:	add	x25, x19, #0x8
  419380:	orr	w24, w24, #0x1
  419384:	mov	x6, x25
  419388:	mov	x3, x23
  41938c:	mov	x2, x22
  419390:	mov	w5, w24
  419394:	str	x0, [sp]
  419398:	mov	x1, #0x0                   	// #0
  41939c:	mov	x0, #0x0                   	// #0
  4193a0:	bl	417e20 <ferror@plt+0x15480>
  4193a4:	add	x21, x0, #0x1
  4193a8:	mov	x0, x21
  4193ac:	bl	41ca30 <ferror@plt+0x1a090>
  4193b0:	ldp	x7, x1, [x19, #40]
  4193b4:	mov	w5, w24
  4193b8:	ldr	w4, [x19]
  4193bc:	mov	x6, x25
  4193c0:	str	x1, [sp]
  4193c4:	mov	x3, x23
  4193c8:	mov	x2, x22
  4193cc:	mov	x19, x0
  4193d0:	mov	x1, x21
  4193d4:	bl	417e20 <ferror@plt+0x15480>
  4193d8:	mov	x0, x19
  4193dc:	ldp	x29, x30, [sp, #16]
  4193e0:	ldp	x21, x22, [sp, #48]
  4193e4:	ldp	x23, x24, [sp, #64]
  4193e8:	str	w26, [x20]
  4193ec:	ldp	x19, x20, [sp, #32]
  4193f0:	ldp	x25, x26, [sp, #80]
  4193f4:	add	sp, sp, #0x60
  4193f8:	ret
  4193fc:	nop
  419400:	sub	sp, sp, #0x70
  419404:	adrp	x4, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419408:	add	x4, x4, #0xb60
  41940c:	cmp	x3, #0x0
  419410:	add	x4, x4, #0x100
  419414:	stp	x29, x30, [sp, #16]
  419418:	add	x29, sp, #0x10
  41941c:	stp	x19, x20, [sp, #32]
  419420:	csel	x19, x4, x3, eq  // eq = none
  419424:	mov	x20, x2
  419428:	stp	x21, x22, [sp, #48]
  41942c:	mov	x22, x0
  419430:	stp	x23, x24, [sp, #64]
  419434:	mov	x23, x1
  419438:	stp	x25, x26, [sp, #80]
  41943c:	stp	x27, x28, [sp, #96]
  419440:	bl	402920 <__errno_location@plt>
  419444:	ldr	w28, [x0]
  419448:	ldp	w4, w5, [x19]
  41944c:	mov	x21, x0
  419450:	ldp	x7, x0, [x19, #40]
  419454:	cmp	x20, #0x0
  419458:	cset	w24, eq  // eq = none
  41945c:	add	x27, x19, #0x8
  419460:	orr	w24, w24, w5
  419464:	mov	x6, x27
  419468:	mov	x3, x23
  41946c:	mov	x2, x22
  419470:	mov	w5, w24
  419474:	str	x0, [sp]
  419478:	mov	x1, #0x0                   	// #0
  41947c:	mov	x0, #0x0                   	// #0
  419480:	bl	417e20 <ferror@plt+0x15480>
  419484:	add	x26, x0, #0x1
  419488:	mov	x25, x0
  41948c:	mov	x0, x26
  419490:	bl	41ca30 <ferror@plt+0x1a090>
  419494:	ldp	x7, x1, [x19, #40]
  419498:	mov	w5, w24
  41949c:	ldr	w4, [x19]
  4194a0:	mov	x6, x27
  4194a4:	str	x1, [sp]
  4194a8:	mov	x3, x23
  4194ac:	mov	x2, x22
  4194b0:	mov	x19, x0
  4194b4:	mov	x1, x26
  4194b8:	bl	417e20 <ferror@plt+0x15480>
  4194bc:	str	w28, [x21]
  4194c0:	cbz	x20, 4194c8 <ferror@plt+0x16b28>
  4194c4:	str	x25, [x20]
  4194c8:	mov	x0, x19
  4194cc:	ldp	x29, x30, [sp, #16]
  4194d0:	ldp	x19, x20, [sp, #32]
  4194d4:	ldp	x21, x22, [sp, #48]
  4194d8:	ldp	x23, x24, [sp, #64]
  4194dc:	ldp	x25, x26, [sp, #80]
  4194e0:	ldp	x27, x28, [sp, #96]
  4194e4:	add	sp, sp, #0x70
  4194e8:	ret
  4194ec:	nop
  4194f0:	stp	x29, x30, [sp, #-64]!
  4194f4:	mov	x29, sp
  4194f8:	stp	x21, x22, [sp, #32]
  4194fc:	str	x23, [sp, #48]
  419500:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x1a640>
  419504:	add	x22, x23, #0x3a8
  419508:	stp	x19, x20, [sp, #16]
  41950c:	ldr	x21, [x23, #936]
  419510:	ldr	w20, [x22, #8]
  419514:	cmp	w20, #0x1
  419518:	b.le	419540 <ferror@plt+0x16ba0>
  41951c:	sub	w0, w20, #0x2
  419520:	add	x20, x21, #0x28
  419524:	add	x19, x21, #0x18
  419528:	add	x20, x20, w0, uxtw #4
  41952c:	nop
  419530:	ldr	x0, [x19], #16
  419534:	bl	4027c0 <free@plt>
  419538:	cmp	x19, x20
  41953c:	b.ne	419530 <ferror@plt+0x16b90>  // b.any
  419540:	ldr	x0, [x21, #8]
  419544:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419548:	add	x19, x19, #0xb60
  41954c:	cmp	x0, x19
  419550:	b.eq	419560 <ferror@plt+0x16bc0>  // b.none
  419554:	bl	4027c0 <free@plt>
  419558:	mov	x0, #0x100                 	// #256
  41955c:	stp	x0, x19, [x22, #16]
  419560:	add	x19, x22, #0x10
  419564:	cmp	x21, x19
  419568:	b.eq	419578 <ferror@plt+0x16bd8>  // b.none
  41956c:	mov	x0, x21
  419570:	bl	4027c0 <free@plt>
  419574:	str	x19, [x23, #936]
  419578:	mov	w0, #0x1                   	// #1
  41957c:	str	w0, [x22, #8]
  419580:	ldp	x19, x20, [sp, #16]
  419584:	ldp	x21, x22, [sp, #32]
  419588:	ldr	x23, [sp, #48]
  41958c:	ldp	x29, x30, [sp], #64
  419590:	ret
  419594:	nop
  419598:	sub	sp, sp, #0x70
  41959c:	stp	x29, x30, [sp, #16]
  4195a0:	add	x29, sp, #0x10
  4195a4:	stp	x21, x22, [sp, #48]
  4195a8:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  4195ac:	stp	x19, x20, [sp, #32]
  4195b0:	mov	w19, w0
  4195b4:	stp	x23, x24, [sp, #64]
  4195b8:	mov	x24, x1
  4195bc:	stp	x25, x26, [sp, #80]
  4195c0:	stp	x27, x28, [sp, #96]
  4195c4:	bl	402920 <__errno_location@plt>
  4195c8:	ldr	w25, [x0]
  4195cc:	ldr	x20, [x22, #936]
  4195d0:	tbnz	w19, #31, 419718 <ferror@plt+0x16d78>
  4195d4:	add	x21, x22, #0x3a8
  4195d8:	mov	x23, x0
  4195dc:	ldr	w0, [x21, #8]
  4195e0:	cmp	w19, w0
  4195e4:	b.lt	419634 <ferror@plt+0x16c94>  // b.tstop
  4195e8:	mov	w0, #0x7fffffff            	// #2147483647
  4195ec:	cmp	w19, w0
  4195f0:	b.eq	419714 <ferror@plt+0x16d74>  // b.none
  4195f4:	add	w26, w19, #0x1
  4195f8:	add	x0, x21, #0x10
  4195fc:	cmp	x20, x0
  419600:	sbfiz	x1, x26, #4, #32
  419604:	b.eq	4196f8 <ferror@plt+0x16d58>  // b.none
  419608:	mov	x0, x20
  41960c:	bl	41ca60 <ferror@plt+0x1a0c0>
  419610:	mov	x20, x0
  419614:	str	x0, [x22, #936]
  419618:	ldr	w0, [x21, #8]
  41961c:	mov	w1, #0x0                   	// #0
  419620:	sub	w2, w26, w0
  419624:	add	x0, x20, w0, sxtw #4
  419628:	sbfiz	x2, x2, #4, #32
  41962c:	bl	4025c0 <memset@plt>
  419630:	str	w26, [x21, #8]
  419634:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419638:	add	x21, x21, #0xb60
  41963c:	sbfiz	x19, x19, #4, #32
  419640:	add	x6, x21, #0x108
  419644:	add	x26, x20, x19
  419648:	mov	x2, x24
  41964c:	ldp	x7, x0, [x21, #296]
  419650:	mov	x3, #0xffffffffffffffff    	// #-1
  419654:	ldr	w4, [x21, #256]
  419658:	ldr	w28, [x21, #260]
  41965c:	ldr	x22, [x20, x19]
  419660:	orr	w28, w28, #0x1
  419664:	ldr	x27, [x26, #8]
  419668:	str	x0, [sp]
  41966c:	mov	x1, x22
  419670:	mov	w5, w28
  419674:	mov	x0, x27
  419678:	bl	417e20 <ferror@plt+0x15480>
  41967c:	cmp	x22, x0
  419680:	b.hi	4196d0 <ferror@plt+0x16d30>  // b.pmore
  419684:	add	x22, x0, #0x1
  419688:	str	x22, [x20, x19]
  41968c:	cmp	x27, x21
  419690:	b.eq	41969c <ferror@plt+0x16cfc>  // b.none
  419694:	mov	x0, x27
  419698:	bl	4027c0 <free@plt>
  41969c:	mov	x0, x22
  4196a0:	bl	41ca30 <ferror@plt+0x1a090>
  4196a4:	ldp	x7, x1, [x21, #296]
  4196a8:	str	x0, [x26, #8]
  4196ac:	ldr	w4, [x21, #256]
  4196b0:	mov	x27, x0
  4196b4:	str	x1, [sp]
  4196b8:	mov	w5, w28
  4196bc:	mov	x2, x24
  4196c0:	add	x6, x21, #0x108
  4196c4:	mov	x1, x22
  4196c8:	mov	x3, #0xffffffffffffffff    	// #-1
  4196cc:	bl	417e20 <ferror@plt+0x15480>
  4196d0:	mov	x0, x27
  4196d4:	ldp	x29, x30, [sp, #16]
  4196d8:	ldp	x19, x20, [sp, #32]
  4196dc:	ldp	x21, x22, [sp, #48]
  4196e0:	ldp	x27, x28, [sp, #96]
  4196e4:	str	w25, [x23]
  4196e8:	ldp	x23, x24, [sp, #64]
  4196ec:	ldp	x25, x26, [sp, #80]
  4196f0:	add	sp, sp, #0x70
  4196f4:	ret
  4196f8:	mov	x0, #0x0                   	// #0
  4196fc:	bl	41ca60 <ferror@plt+0x1a0c0>
  419700:	mov	x20, x0
  419704:	str	x0, [x22, #936]
  419708:	ldp	x0, x1, [x21, #16]
  41970c:	stp	x0, x1, [x20]
  419710:	b	419618 <ferror@plt+0x16c78>
  419714:	bl	41cbf8 <ferror@plt+0x1a258>
  419718:	bl	4026d0 <abort@plt>
  41971c:	nop
  419720:	sub	sp, sp, #0x80
  419724:	stp	x29, x30, [sp, #16]
  419728:	add	x29, sp, #0x10
  41972c:	stp	x19, x20, [sp, #32]
  419730:	mov	w19, w0
  419734:	stp	x21, x22, [sp, #48]
  419738:	stp	x23, x24, [sp, #64]
  41973c:	mov	x23, x1
  419740:	mov	x24, x2
  419744:	stp	x25, x26, [sp, #80]
  419748:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x1a640>
  41974c:	stp	x27, x28, [sp, #96]
  419750:	bl	402920 <__errno_location@plt>
  419754:	mov	x22, x0
  419758:	ldr	w0, [x0]
  41975c:	str	w0, [sp, #124]
  419760:	ldr	x20, [x26, #936]
  419764:	tbnz	w19, #31, 4198ac <ferror@plt+0x16f0c>
  419768:	add	x21, x26, #0x3a8
  41976c:	ldr	w0, [x21, #8]
  419770:	cmp	w19, w0
  419774:	b.lt	4197c4 <ferror@plt+0x16e24>  // b.tstop
  419778:	mov	w0, #0x7fffffff            	// #2147483647
  41977c:	cmp	w19, w0
  419780:	b.eq	4198a8 <ferror@plt+0x16f08>  // b.none
  419784:	add	w27, w19, #0x1
  419788:	add	x0, x21, #0x10
  41978c:	cmp	x20, x0
  419790:	sbfiz	x1, x27, #4, #32
  419794:	b.eq	41988c <ferror@plt+0x16eec>  // b.none
  419798:	mov	x0, x20
  41979c:	bl	41ca60 <ferror@plt+0x1a0c0>
  4197a0:	mov	x20, x0
  4197a4:	str	x0, [x26, #936]
  4197a8:	ldr	w0, [x21, #8]
  4197ac:	mov	w1, #0x0                   	// #0
  4197b0:	sub	w2, w27, w0
  4197b4:	add	x0, x20, w0, sxtw #4
  4197b8:	sbfiz	x2, x2, #4, #32
  4197bc:	bl	4025c0 <memset@plt>
  4197c0:	str	w27, [x21, #8]
  4197c4:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  4197c8:	add	x21, x21, #0xb60
  4197cc:	sbfiz	x19, x19, #4, #32
  4197d0:	add	x6, x21, #0x108
  4197d4:	add	x26, x20, x19
  4197d8:	mov	x3, x24
  4197dc:	ldp	x7, x0, [x21, #296]
  4197e0:	mov	x2, x23
  4197e4:	ldr	w4, [x21, #256]
  4197e8:	ldr	w5, [x21, #260]
  4197ec:	ldr	x27, [x20, x19]
  4197f0:	orr	w25, w5, #0x1
  4197f4:	ldr	x28, [x26, #8]
  4197f8:	str	x0, [sp]
  4197fc:	mov	x1, x27
  419800:	mov	w5, w25
  419804:	mov	x0, x28
  419808:	bl	417e20 <ferror@plt+0x15480>
  41980c:	cmp	x27, x0
  419810:	b.hi	419860 <ferror@plt+0x16ec0>  // b.pmore
  419814:	add	x27, x0, #0x1
  419818:	str	x27, [x20, x19]
  41981c:	cmp	x28, x21
  419820:	b.eq	41982c <ferror@plt+0x16e8c>  // b.none
  419824:	mov	x0, x28
  419828:	bl	4027c0 <free@plt>
  41982c:	mov	x0, x27
  419830:	bl	41ca30 <ferror@plt+0x1a090>
  419834:	ldp	x7, x1, [x21, #296]
  419838:	str	x0, [x26, #8]
  41983c:	ldr	w4, [x21, #256]
  419840:	mov	x28, x0
  419844:	str	x1, [sp]
  419848:	mov	w5, w25
  41984c:	mov	x3, x24
  419850:	mov	x2, x23
  419854:	add	x6, x21, #0x108
  419858:	mov	x1, x27
  41985c:	bl	417e20 <ferror@plt+0x15480>
  419860:	ldr	w0, [sp, #124]
  419864:	ldp	x29, x30, [sp, #16]
  419868:	ldp	x19, x20, [sp, #32]
  41986c:	ldp	x23, x24, [sp, #64]
  419870:	ldp	x25, x26, [sp, #80]
  419874:	str	w0, [x22]
  419878:	mov	x0, x28
  41987c:	ldp	x21, x22, [sp, #48]
  419880:	ldp	x27, x28, [sp, #96]
  419884:	add	sp, sp, #0x80
  419888:	ret
  41988c:	mov	x0, #0x0                   	// #0
  419890:	bl	41ca60 <ferror@plt+0x1a0c0>
  419894:	mov	x20, x0
  419898:	str	x0, [x26, #936]
  41989c:	ldp	x0, x1, [x21, #16]
  4198a0:	stp	x0, x1, [x20]
  4198a4:	b	4197a8 <ferror@plt+0x16e08>
  4198a8:	bl	41cbf8 <ferror@plt+0x1a258>
  4198ac:	bl	4026d0 <abort@plt>
  4198b0:	sub	sp, sp, #0x60
  4198b4:	stp	x29, x30, [sp, #16]
  4198b8:	add	x29, sp, #0x10
  4198bc:	stp	x19, x20, [sp, #32]
  4198c0:	stp	x21, x22, [sp, #48]
  4198c4:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  4198c8:	add	x20, x21, #0x3a8
  4198cc:	stp	x23, x24, [sp, #64]
  4198d0:	mov	x24, x0
  4198d4:	stp	x25, x26, [sp, #80]
  4198d8:	bl	402920 <__errno_location@plt>
  4198dc:	mov	x23, x0
  4198e0:	ldr	w0, [x20, #8]
  4198e4:	ldr	x19, [x21, #936]
  4198e8:	cmp	w0, #0x0
  4198ec:	ldr	w25, [x23]
  4198f0:	b.gt	419934 <ferror@plt+0x16f94>
  4198f4:	add	x0, x20, #0x10
  4198f8:	cmp	x19, x0
  4198fc:	b.eq	4199e8 <ferror@plt+0x17048>  // b.none
  419900:	mov	x0, x19
  419904:	mov	x1, #0x10                  	// #16
  419908:	bl	41ca60 <ferror@plt+0x1a0c0>
  41990c:	mov	x19, x0
  419910:	str	x0, [x21, #936]
  419914:	ldr	w0, [x20, #8]
  419918:	mov	w21, #0x1                   	// #1
  41991c:	mov	w1, #0x0                   	// #0
  419920:	sub	w2, w21, w0
  419924:	add	x0, x19, w0, sxtw #4
  419928:	sbfiz	x2, x2, #4, #32
  41992c:	bl	4025c0 <memset@plt>
  419930:	str	w21, [x20, #8]
  419934:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419938:	add	x20, x20, #0xb60
  41993c:	ldp	x21, x22, [x19]
  419940:	add	x6, x20, #0x108
  419944:	ldp	x7, x0, [x20, #296]
  419948:	mov	x2, x24
  41994c:	ldr	w4, [x20, #256]
  419950:	mov	x3, #0xffffffffffffffff    	// #-1
  419954:	ldr	w26, [x20, #260]
  419958:	str	x0, [sp]
  41995c:	mov	x1, x21
  419960:	orr	w26, w26, #0x1
  419964:	mov	x0, x22
  419968:	mov	w5, w26
  41996c:	bl	417e20 <ferror@plt+0x15480>
  419970:	cmp	x21, x0
  419974:	b.hi	4199c4 <ferror@plt+0x17024>  // b.pmore
  419978:	add	x21, x0, #0x1
  41997c:	str	x21, [x19]
  419980:	cmp	x22, x20
  419984:	b.eq	419990 <ferror@plt+0x16ff0>  // b.none
  419988:	mov	x0, x22
  41998c:	bl	4027c0 <free@plt>
  419990:	mov	x0, x21
  419994:	bl	41ca30 <ferror@plt+0x1a090>
  419998:	ldp	x7, x1, [x20, #296]
  41999c:	str	x0, [x19, #8]
  4199a0:	ldr	w4, [x20, #256]
  4199a4:	mov	x22, x0
  4199a8:	str	x1, [sp]
  4199ac:	mov	w5, w26
  4199b0:	mov	x2, x24
  4199b4:	add	x6, x20, #0x108
  4199b8:	mov	x1, x21
  4199bc:	mov	x3, #0xffffffffffffffff    	// #-1
  4199c0:	bl	417e20 <ferror@plt+0x15480>
  4199c4:	mov	x0, x22
  4199c8:	ldp	x29, x30, [sp, #16]
  4199cc:	ldp	x19, x20, [sp, #32]
  4199d0:	ldp	x21, x22, [sp, #48]
  4199d4:	str	w25, [x23]
  4199d8:	ldp	x23, x24, [sp, #64]
  4199dc:	ldp	x25, x26, [sp, #80]
  4199e0:	add	sp, sp, #0x60
  4199e4:	ret
  4199e8:	mov	x1, #0x10                  	// #16
  4199ec:	mov	x0, #0x0                   	// #0
  4199f0:	bl	41ca60 <ferror@plt+0x1a0c0>
  4199f4:	mov	x19, x0
  4199f8:	str	x0, [x21, #936]
  4199fc:	ldp	x0, x1, [x20, #16]
  419a00:	stp	x0, x1, [x19]
  419a04:	b	419914 <ferror@plt+0x16f74>
  419a08:	sub	sp, sp, #0x70
  419a0c:	stp	x29, x30, [sp, #16]
  419a10:	add	x29, sp, #0x10
  419a14:	stp	x19, x20, [sp, #32]
  419a18:	stp	x21, x22, [sp, #48]
  419a1c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  419a20:	add	x20, x21, #0x3a8
  419a24:	stp	x23, x24, [sp, #64]
  419a28:	mov	x23, x0
  419a2c:	mov	x24, x1
  419a30:	stp	x25, x26, [sp, #80]
  419a34:	str	x27, [sp, #96]
  419a38:	bl	402920 <__errno_location@plt>
  419a3c:	mov	x22, x0
  419a40:	ldr	w0, [x20, #8]
  419a44:	ldr	x19, [x21, #936]
  419a48:	cmp	w0, #0x0
  419a4c:	ldr	w25, [x22]
  419a50:	b.gt	419a94 <ferror@plt+0x170f4>
  419a54:	add	x0, x20, #0x10
  419a58:	cmp	x19, x0
  419a5c:	b.eq	419b4c <ferror@plt+0x171ac>  // b.none
  419a60:	mov	x0, x19
  419a64:	mov	x1, #0x10                  	// #16
  419a68:	bl	41ca60 <ferror@plt+0x1a0c0>
  419a6c:	mov	x19, x0
  419a70:	str	x0, [x21, #936]
  419a74:	ldr	w0, [x20, #8]
  419a78:	mov	w21, #0x1                   	// #1
  419a7c:	mov	w1, #0x0                   	// #0
  419a80:	sub	w2, w21, w0
  419a84:	add	x0, x19, w0, sxtw #4
  419a88:	sbfiz	x2, x2, #4, #32
  419a8c:	bl	4025c0 <memset@plt>
  419a90:	str	w21, [x20, #8]
  419a94:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419a98:	add	x20, x20, #0xb60
  419a9c:	ldp	x21, x26, [x19]
  419aa0:	add	x6, x20, #0x108
  419aa4:	ldp	x7, x0, [x20, #296]
  419aa8:	mov	x3, x24
  419aac:	ldr	w4, [x20, #256]
  419ab0:	mov	x2, x23
  419ab4:	ldr	w27, [x20, #260]
  419ab8:	str	x0, [sp]
  419abc:	mov	x1, x21
  419ac0:	orr	w27, w27, #0x1
  419ac4:	mov	x0, x26
  419ac8:	mov	w5, w27
  419acc:	bl	417e20 <ferror@plt+0x15480>
  419ad0:	cmp	x21, x0
  419ad4:	b.hi	419b24 <ferror@plt+0x17184>  // b.pmore
  419ad8:	add	x21, x0, #0x1
  419adc:	str	x21, [x19]
  419ae0:	cmp	x26, x20
  419ae4:	b.eq	419af0 <ferror@plt+0x17150>  // b.none
  419ae8:	mov	x0, x26
  419aec:	bl	4027c0 <free@plt>
  419af0:	mov	x0, x21
  419af4:	bl	41ca30 <ferror@plt+0x1a090>
  419af8:	ldp	x7, x1, [x20, #296]
  419afc:	str	x0, [x19, #8]
  419b00:	ldr	w4, [x20, #256]
  419b04:	mov	x26, x0
  419b08:	str	x1, [sp]
  419b0c:	mov	w5, w27
  419b10:	mov	x3, x24
  419b14:	mov	x2, x23
  419b18:	add	x6, x20, #0x108
  419b1c:	mov	x1, x21
  419b20:	bl	417e20 <ferror@plt+0x15480>
  419b24:	mov	x0, x26
  419b28:	ldp	x29, x30, [sp, #16]
  419b2c:	ldp	x19, x20, [sp, #32]
  419b30:	ldp	x23, x24, [sp, #64]
  419b34:	ldr	x27, [sp, #96]
  419b38:	str	w25, [x22]
  419b3c:	ldp	x21, x22, [sp, #48]
  419b40:	ldp	x25, x26, [sp, #80]
  419b44:	add	sp, sp, #0x70
  419b48:	ret
  419b4c:	mov	x1, #0x10                  	// #16
  419b50:	mov	x0, #0x0                   	// #0
  419b54:	bl	41ca60 <ferror@plt+0x1a0c0>
  419b58:	mov	x19, x0
  419b5c:	str	x0, [x21, #936]
  419b60:	ldp	x0, x1, [x20, #16]
  419b64:	stp	x0, x1, [x19]
  419b68:	b	419a74 <ferror@plt+0x170d4>
  419b6c:	nop
  419b70:	stp	x29, x30, [sp, #-128]!
  419b74:	cmp	w1, #0xa
  419b78:	mov	x29, sp
  419b7c:	stp	xzr, xzr, [sp, #72]
  419b80:	b.eq	419bb8 <ferror@plt+0x17218>  // b.none
  419b84:	mov	w3, w1
  419b88:	str	w3, [sp, #72]
  419b8c:	mov	x1, x2
  419b90:	add	x3, sp, #0x10
  419b94:	ldp	x4, x5, [sp, #72]
  419b98:	mov	x2, #0xffffffffffffffff    	// #-1
  419b9c:	stp	x4, x5, [sp, #16]
  419ba0:	stp	xzr, xzr, [sp, #32]
  419ba4:	stp	xzr, xzr, [sp, #48]
  419ba8:	str	xzr, [sp, #64]
  419bac:	bl	418fc0 <ferror@plt+0x16620>
  419bb0:	ldp	x29, x30, [sp], #128
  419bb4:	ret
  419bb8:	bl	4026d0 <abort@plt>
  419bbc:	nop
  419bc0:	stp	x29, x30, [sp, #-128]!
  419bc4:	cmp	w1, #0xa
  419bc8:	mov	x29, sp
  419bcc:	stp	xzr, xzr, [sp, #72]
  419bd0:	b.eq	419c08 <ferror@plt+0x17268>  // b.none
  419bd4:	mov	w4, w1
  419bd8:	str	w4, [sp, #72]
  419bdc:	mov	x1, x2
  419be0:	mov	x2, x3
  419be4:	ldp	x4, x5, [sp, #72]
  419be8:	add	x3, sp, #0x10
  419bec:	stp	x4, x5, [sp, #16]
  419bf0:	stp	xzr, xzr, [sp, #32]
  419bf4:	stp	xzr, xzr, [sp, #48]
  419bf8:	str	xzr, [sp, #64]
  419bfc:	bl	418fc0 <ferror@plt+0x16620>
  419c00:	ldp	x29, x30, [sp], #128
  419c04:	ret
  419c08:	bl	4026d0 <abort@plt>
  419c0c:	nop
  419c10:	sub	sp, sp, #0xd0
  419c14:	cmp	w0, #0xa
  419c18:	stp	x29, x30, [sp, #16]
  419c1c:	add	x29, sp, #0x10
  419c20:	stp	x19, x20, [sp, #32]
  419c24:	stp	x21, x22, [sp, #48]
  419c28:	stp	x23, x24, [sp, #64]
  419c2c:	str	x25, [sp, #80]
  419c30:	stp	xzr, xzr, [sp, #152]
  419c34:	stp	xzr, xzr, [sp, #168]
  419c38:	stp	xzr, xzr, [sp, #184]
  419c3c:	str	xzr, [sp, #200]
  419c40:	b.eq	419d94 <ferror@plt+0x173f4>  // b.none
  419c44:	str	w0, [sp, #152]
  419c48:	mov	x23, x1
  419c4c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  419c50:	add	x20, x21, #0x3a8
  419c54:	ldp	x0, x1, [sp, #152]
  419c58:	stp	x0, x1, [sp, #96]
  419c5c:	stp	xzr, xzr, [sp, #112]
  419c60:	stp	xzr, xzr, [sp, #128]
  419c64:	str	xzr, [sp, #144]
  419c68:	bl	402920 <__errno_location@plt>
  419c6c:	ldr	w1, [x20, #8]
  419c70:	mov	x22, x0
  419c74:	ldr	x19, [x21, #936]
  419c78:	cmp	w1, #0x0
  419c7c:	ldr	w25, [x0]
  419c80:	b.gt	419cc4 <ferror@plt+0x17324>
  419c84:	add	x0, x20, #0x10
  419c88:	cmp	x19, x0
  419c8c:	b.eq	419d74 <ferror@plt+0x173d4>  // b.none
  419c90:	mov	x0, x19
  419c94:	mov	x1, #0x10                  	// #16
  419c98:	bl	41ca60 <ferror@plt+0x1a0c0>
  419c9c:	mov	x19, x0
  419ca0:	str	x0, [x21, #936]
  419ca4:	ldr	w0, [x20, #8]
  419ca8:	mov	w21, #0x1                   	// #1
  419cac:	mov	w1, #0x0                   	// #0
  419cb0:	sub	w2, w21, w0
  419cb4:	add	x0, x19, w0, sxtw #4
  419cb8:	sbfiz	x2, x2, #4, #32
  419cbc:	bl	4025c0 <memset@plt>
  419cc0:	str	w21, [x20, #8]
  419cc4:	ldp	x20, x21, [x19]
  419cc8:	add	x6, sp, #0x68
  419ccc:	ldp	x7, x0, [sp, #136]
  419cd0:	str	x0, [sp]
  419cd4:	ldp	w4, w24, [sp, #96]
  419cd8:	mov	x2, x23
  419cdc:	mov	x1, x20
  419ce0:	mov	x0, x21
  419ce4:	orr	w24, w24, #0x1
  419ce8:	mov	x3, #0xffffffffffffffff    	// #-1
  419cec:	mov	w5, w24
  419cf0:	bl	417e20 <ferror@plt+0x15480>
  419cf4:	cmp	x20, x0
  419cf8:	b.hi	419d50 <ferror@plt+0x173b0>  // b.pmore
  419cfc:	add	x20, x0, #0x1
  419d00:	str	x20, [x19]
  419d04:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419d08:	add	x0, x0, #0xb60
  419d0c:	cmp	x21, x0
  419d10:	b.eq	419d1c <ferror@plt+0x1737c>  // b.none
  419d14:	mov	x0, x21
  419d18:	bl	4027c0 <free@plt>
  419d1c:	mov	x0, x20
  419d20:	bl	41ca30 <ferror@plt+0x1a090>
  419d24:	ldp	x7, x1, [sp, #136]
  419d28:	str	x0, [x19, #8]
  419d2c:	ldr	w4, [sp, #96]
  419d30:	mov	x21, x0
  419d34:	str	x1, [sp]
  419d38:	add	x6, sp, #0x68
  419d3c:	mov	w5, w24
  419d40:	mov	x2, x23
  419d44:	mov	x1, x20
  419d48:	mov	x3, #0xffffffffffffffff    	// #-1
  419d4c:	bl	417e20 <ferror@plt+0x15480>
  419d50:	ldp	x29, x30, [sp, #16]
  419d54:	mov	x0, x21
  419d58:	ldp	x19, x20, [sp, #32]
  419d5c:	ldp	x23, x24, [sp, #64]
  419d60:	str	w25, [x22]
  419d64:	ldp	x21, x22, [sp, #48]
  419d68:	ldr	x25, [sp, #80]
  419d6c:	add	sp, sp, #0xd0
  419d70:	ret
  419d74:	mov	x1, #0x10                  	// #16
  419d78:	mov	x0, #0x0                   	// #0
  419d7c:	bl	41ca60 <ferror@plt+0x1a0c0>
  419d80:	mov	x19, x0
  419d84:	str	x0, [x21, #936]
  419d88:	ldp	x0, x1, [x20, #16]
  419d8c:	stp	x0, x1, [x19]
  419d90:	b	419ca4 <ferror@plt+0x17304>
  419d94:	bl	4026d0 <abort@plt>
  419d98:	sub	sp, sp, #0xd0
  419d9c:	cmp	w0, #0xa
  419da0:	stp	x29, x30, [sp, #16]
  419da4:	add	x29, sp, #0x10
  419da8:	stp	x19, x20, [sp, #32]
  419dac:	stp	x21, x22, [sp, #48]
  419db0:	stp	x23, x24, [sp, #64]
  419db4:	stp	x25, x26, [sp, #80]
  419db8:	stp	xzr, xzr, [sp, #152]
  419dbc:	stp	xzr, xzr, [sp, #168]
  419dc0:	stp	xzr, xzr, [sp, #184]
  419dc4:	str	xzr, [sp, #200]
  419dc8:	b.eq	419f20 <ferror@plt+0x17580>  // b.none
  419dcc:	str	w0, [sp, #152]
  419dd0:	mov	x23, x1
  419dd4:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  419dd8:	add	x20, x21, #0x3a8
  419ddc:	ldp	x0, x1, [sp, #152]
  419de0:	mov	x24, x2
  419de4:	stp	x0, x1, [sp, #96]
  419de8:	stp	xzr, xzr, [sp, #112]
  419dec:	stp	xzr, xzr, [sp, #128]
  419df0:	str	xzr, [sp, #144]
  419df4:	bl	402920 <__errno_location@plt>
  419df8:	ldr	w1, [x20, #8]
  419dfc:	mov	x22, x0
  419e00:	ldr	x19, [x21, #936]
  419e04:	cmp	w1, #0x0
  419e08:	ldr	w25, [x0]
  419e0c:	b.gt	419e50 <ferror@plt+0x174b0>
  419e10:	add	x0, x20, #0x10
  419e14:	cmp	x19, x0
  419e18:	b.eq	419f00 <ferror@plt+0x17560>  // b.none
  419e1c:	mov	x0, x19
  419e20:	mov	x1, #0x10                  	// #16
  419e24:	bl	41ca60 <ferror@plt+0x1a0c0>
  419e28:	mov	x19, x0
  419e2c:	str	x0, [x21, #936]
  419e30:	ldr	w0, [x20, #8]
  419e34:	mov	w21, #0x1                   	// #1
  419e38:	mov	w1, #0x0                   	// #0
  419e3c:	sub	w2, w21, w0
  419e40:	add	x0, x19, w0, sxtw #4
  419e44:	sbfiz	x2, x2, #4, #32
  419e48:	bl	4025c0 <memset@plt>
  419e4c:	str	w21, [x20, #8]
  419e50:	ldp	x20, x21, [x19]
  419e54:	add	x6, sp, #0x68
  419e58:	ldp	x7, x0, [sp, #136]
  419e5c:	str	x0, [sp]
  419e60:	ldp	w4, w26, [sp, #96]
  419e64:	mov	x3, x24
  419e68:	mov	x2, x23
  419e6c:	mov	x1, x20
  419e70:	orr	w26, w26, #0x1
  419e74:	mov	x0, x21
  419e78:	mov	w5, w26
  419e7c:	bl	417e20 <ferror@plt+0x15480>
  419e80:	cmp	x20, x0
  419e84:	b.hi	419edc <ferror@plt+0x1753c>  // b.pmore
  419e88:	add	x20, x0, #0x1
  419e8c:	str	x20, [x19]
  419e90:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419e94:	add	x0, x0, #0xb60
  419e98:	cmp	x21, x0
  419e9c:	b.eq	419ea8 <ferror@plt+0x17508>  // b.none
  419ea0:	mov	x0, x21
  419ea4:	bl	4027c0 <free@plt>
  419ea8:	mov	x0, x20
  419eac:	bl	41ca30 <ferror@plt+0x1a090>
  419eb0:	ldp	x7, x1, [sp, #136]
  419eb4:	str	x0, [x19, #8]
  419eb8:	ldr	w4, [sp, #96]
  419ebc:	mov	x21, x0
  419ec0:	str	x1, [sp]
  419ec4:	add	x6, sp, #0x68
  419ec8:	mov	w5, w26
  419ecc:	mov	x3, x24
  419ed0:	mov	x2, x23
  419ed4:	mov	x1, x20
  419ed8:	bl	417e20 <ferror@plt+0x15480>
  419edc:	ldp	x29, x30, [sp, #16]
  419ee0:	mov	x0, x21
  419ee4:	ldp	x19, x20, [sp, #32]
  419ee8:	ldp	x23, x24, [sp, #64]
  419eec:	str	w25, [x22]
  419ef0:	ldp	x21, x22, [sp, #48]
  419ef4:	ldp	x25, x26, [sp, #80]
  419ef8:	add	sp, sp, #0xd0
  419efc:	ret
  419f00:	mov	x1, #0x10                  	// #16
  419f04:	mov	x0, #0x0                   	// #0
  419f08:	bl	41ca60 <ferror@plt+0x1a0c0>
  419f0c:	mov	x19, x0
  419f10:	str	x0, [x21, #936]
  419f14:	ldp	x0, x1, [x20, #16]
  419f18:	stp	x0, x1, [x19]
  419f1c:	b	419e30 <ferror@plt+0x17490>
  419f20:	bl	4026d0 <abort@plt>
  419f24:	nop
  419f28:	sub	sp, sp, #0xb0
  419f2c:	ubfx	x6, x2, #5, #3
  419f30:	add	x5, sp, #0x80
  419f34:	and	w2, w2, #0x1f
  419f38:	stp	x29, x30, [sp, #16]
  419f3c:	add	x29, sp, #0x10
  419f40:	stp	x19, x20, [sp, #32]
  419f44:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  419f48:	add	x20, x20, #0xb60
  419f4c:	stp	x21, x22, [sp, #48]
  419f50:	mov	x22, x1
  419f54:	mov	x21, x0
  419f58:	ldp	x8, x9, [x20, #256]
  419f5c:	stp	x8, x9, [sp, #120]
  419f60:	ldp	x8, x9, [x20, #272]
  419f64:	stp	x8, x9, [sp, #136]
  419f68:	ldp	x8, x9, [x20, #288]
  419f6c:	stp	x8, x9, [sp, #152]
  419f70:	ldr	x3, [x20, #304]
  419f74:	str	x3, [sp, #168]
  419f78:	stp	x23, x24, [sp, #64]
  419f7c:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  419f80:	ldr	w4, [x5, x6, lsl #2]
  419f84:	stp	x25, x26, [sp, #80]
  419f88:	add	x23, x24, #0x3a8
  419f8c:	lsr	w3, w4, w2
  419f90:	mvn	w3, w3
  419f94:	and	w3, w3, #0x1
  419f98:	str	x27, [sp, #96]
  419f9c:	lsl	w3, w3, w2
  419fa0:	eor	w3, w3, w4
  419fa4:	str	w3, [x5, x6, lsl #2]
  419fa8:	bl	402920 <__errno_location@plt>
  419fac:	ldr	w26, [x0]
  419fb0:	ldr	w1, [x23, #8]
  419fb4:	mov	x25, x0
  419fb8:	ldr	x19, [x24, #936]
  419fbc:	cmp	w1, #0x0
  419fc0:	b.gt	41a004 <ferror@plt+0x17664>
  419fc4:	add	x0, x23, #0x10
  419fc8:	cmp	x19, x0
  419fcc:	b.eq	41a0b0 <ferror@plt+0x17710>  // b.none
  419fd0:	mov	x0, x19
  419fd4:	mov	x1, #0x10                  	// #16
  419fd8:	bl	41ca60 <ferror@plt+0x1a0c0>
  419fdc:	mov	x19, x0
  419fe0:	str	x0, [x24, #936]
  419fe4:	ldr	w0, [x23, #8]
  419fe8:	mov	w24, #0x1                   	// #1
  419fec:	mov	w1, #0x0                   	// #0
  419ff0:	sub	w2, w24, w0
  419ff4:	add	x0, x19, w0, sxtw #4
  419ff8:	sbfiz	x2, x2, #4, #32
  419ffc:	bl	4025c0 <memset@plt>
  41a000:	str	w24, [x23, #8]
  41a004:	ldp	x23, x24, [x19]
  41a008:	add	x6, sp, #0x80
  41a00c:	ldp	x7, x0, [sp, #160]
  41a010:	str	x0, [sp]
  41a014:	ldp	w4, w27, [sp, #120]
  41a018:	mov	x3, x22
  41a01c:	mov	x2, x21
  41a020:	mov	x1, x23
  41a024:	orr	w27, w27, #0x1
  41a028:	mov	x0, x24
  41a02c:	mov	w5, w27
  41a030:	bl	417e20 <ferror@plt+0x15480>
  41a034:	cmp	x23, x0
  41a038:	b.hi	41a088 <ferror@plt+0x176e8>  // b.pmore
  41a03c:	add	x23, x0, #0x1
  41a040:	str	x23, [x19]
  41a044:	cmp	x24, x20
  41a048:	b.eq	41a054 <ferror@plt+0x176b4>  // b.none
  41a04c:	mov	x0, x24
  41a050:	bl	4027c0 <free@plt>
  41a054:	mov	x0, x23
  41a058:	bl	41ca30 <ferror@plt+0x1a090>
  41a05c:	ldp	x7, x1, [sp, #160]
  41a060:	str	x0, [x19, #8]
  41a064:	ldr	w4, [sp, #120]
  41a068:	mov	x24, x0
  41a06c:	str	x1, [sp]
  41a070:	add	x6, sp, #0x80
  41a074:	mov	w5, w27
  41a078:	mov	x3, x22
  41a07c:	mov	x2, x21
  41a080:	mov	x1, x23
  41a084:	bl	417e20 <ferror@plt+0x15480>
  41a088:	mov	x0, x24
  41a08c:	ldp	x29, x30, [sp, #16]
  41a090:	ldp	x19, x20, [sp, #32]
  41a094:	ldp	x21, x22, [sp, #48]
  41a098:	ldp	x23, x24, [sp, #64]
  41a09c:	ldr	x27, [sp, #96]
  41a0a0:	str	w26, [x25]
  41a0a4:	ldp	x25, x26, [sp, #80]
  41a0a8:	add	sp, sp, #0xb0
  41a0ac:	ret
  41a0b0:	mov	x1, #0x10                  	// #16
  41a0b4:	mov	x0, #0x0                   	// #0
  41a0b8:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a0bc:	mov	x19, x0
  41a0c0:	str	x0, [x24, #936]
  41a0c4:	ldp	x0, x1, [x23, #16]
  41a0c8:	stp	x0, x1, [x19]
  41a0cc:	b	419fe4 <ferror@plt+0x17644>
  41a0d0:	sub	sp, sp, #0xa0
  41a0d4:	ubfx	x5, x1, #5, #3
  41a0d8:	add	x4, sp, #0x70
  41a0dc:	and	w1, w1, #0x1f
  41a0e0:	stp	x29, x30, [sp, #16]
  41a0e4:	add	x29, sp, #0x10
  41a0e8:	stp	x19, x20, [sp, #32]
  41a0ec:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41a0f0:	add	x20, x20, #0xb60
  41a0f4:	stp	x21, x22, [sp, #48]
  41a0f8:	mov	x21, x0
  41a0fc:	ldp	x6, x7, [x20, #256]
  41a100:	stp	x6, x7, [sp, #104]
  41a104:	ldp	x6, x7, [x20, #272]
  41a108:	stp	x6, x7, [sp, #120]
  41a10c:	ldp	x6, x7, [x20, #288]
  41a110:	stp	x6, x7, [sp, #136]
  41a114:	ldr	x2, [x20, #304]
  41a118:	str	x2, [sp, #152]
  41a11c:	stp	x23, x24, [sp, #64]
  41a120:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x1a640>
  41a124:	ldr	w0, [x4, x5, lsl #2]
  41a128:	stp	x25, x26, [sp, #80]
  41a12c:	add	x22, x23, #0x3a8
  41a130:	lsr	w2, w0, w1
  41a134:	mvn	w2, w2
  41a138:	and	w2, w2, #0x1
  41a13c:	lsl	w2, w2, w1
  41a140:	eor	w2, w2, w0
  41a144:	str	w2, [x4, x5, lsl #2]
  41a148:	bl	402920 <__errno_location@plt>
  41a14c:	ldr	w25, [x0]
  41a150:	ldr	w1, [x22, #8]
  41a154:	mov	x24, x0
  41a158:	ldr	x19, [x23, #936]
  41a15c:	cmp	w1, #0x0
  41a160:	b.gt	41a1a4 <ferror@plt+0x17804>
  41a164:	add	x0, x22, #0x10
  41a168:	cmp	x19, x0
  41a16c:	b.eq	41a24c <ferror@plt+0x178ac>  // b.none
  41a170:	mov	x0, x19
  41a174:	mov	x1, #0x10                  	// #16
  41a178:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a17c:	mov	x19, x0
  41a180:	str	x0, [x23, #936]
  41a184:	ldr	w0, [x22, #8]
  41a188:	mov	w23, #0x1                   	// #1
  41a18c:	mov	w1, #0x0                   	// #0
  41a190:	sub	w2, w23, w0
  41a194:	add	x0, x19, w0, sxtw #4
  41a198:	sbfiz	x2, x2, #4, #32
  41a19c:	bl	4025c0 <memset@plt>
  41a1a0:	str	w23, [x22, #8]
  41a1a4:	ldp	x22, x23, [x19]
  41a1a8:	add	x6, sp, #0x70
  41a1ac:	ldp	x7, x0, [sp, #144]
  41a1b0:	str	x0, [sp]
  41a1b4:	ldp	w4, w26, [sp, #104]
  41a1b8:	mov	x2, x21
  41a1bc:	mov	x1, x22
  41a1c0:	mov	x0, x23
  41a1c4:	orr	w26, w26, #0x1
  41a1c8:	mov	x3, #0xffffffffffffffff    	// #-1
  41a1cc:	mov	w5, w26
  41a1d0:	bl	417e20 <ferror@plt+0x15480>
  41a1d4:	cmp	x22, x0
  41a1d8:	b.hi	41a228 <ferror@plt+0x17888>  // b.pmore
  41a1dc:	add	x22, x0, #0x1
  41a1e0:	str	x22, [x19]
  41a1e4:	cmp	x23, x20
  41a1e8:	b.eq	41a1f4 <ferror@plt+0x17854>  // b.none
  41a1ec:	mov	x0, x23
  41a1f0:	bl	4027c0 <free@plt>
  41a1f4:	mov	x0, x22
  41a1f8:	bl	41ca30 <ferror@plt+0x1a090>
  41a1fc:	ldp	x7, x1, [sp, #144]
  41a200:	str	x0, [x19, #8]
  41a204:	ldr	w4, [sp, #104]
  41a208:	mov	x23, x0
  41a20c:	str	x1, [sp]
  41a210:	add	x6, sp, #0x70
  41a214:	mov	w5, w26
  41a218:	mov	x2, x21
  41a21c:	mov	x1, x22
  41a220:	mov	x3, #0xffffffffffffffff    	// #-1
  41a224:	bl	417e20 <ferror@plt+0x15480>
  41a228:	ldp	x29, x30, [sp, #16]
  41a22c:	mov	x0, x23
  41a230:	ldp	x19, x20, [sp, #32]
  41a234:	ldp	x21, x22, [sp, #48]
  41a238:	str	w25, [x24]
  41a23c:	ldp	x23, x24, [sp, #64]
  41a240:	ldp	x25, x26, [sp, #80]
  41a244:	add	sp, sp, #0xa0
  41a248:	ret
  41a24c:	mov	x1, #0x10                  	// #16
  41a250:	mov	x0, #0x0                   	// #0
  41a254:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a258:	mov	x19, x0
  41a25c:	str	x0, [x23, #936]
  41a260:	ldp	x0, x1, [x22, #16]
  41a264:	stp	x0, x1, [x19]
  41a268:	b	41a184 <ferror@plt+0x177e4>
  41a26c:	nop
  41a270:	sub	sp, sp, #0xa0
  41a274:	stp	x29, x30, [sp, #16]
  41a278:	add	x29, sp, #0x10
  41a27c:	stp	x23, x24, [sp, #64]
  41a280:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41a284:	add	x23, x23, #0xb60
  41a288:	stp	x21, x22, [sp, #48]
  41a28c:	mov	x22, x0
  41a290:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  41a294:	ldp	x4, x5, [x23, #256]
  41a298:	stp	x4, x5, [sp, #104]
  41a29c:	ldr	w0, [sp, #116]
  41a2a0:	ldp	x4, x5, [x23, #272]
  41a2a4:	stp	x4, x5, [sp, #120]
  41a2a8:	mvn	w1, w0, lsr #26
  41a2ac:	ldp	x4, x5, [x23, #288]
  41a2b0:	ubfiz	w1, w1, #26, #1
  41a2b4:	ldr	x2, [x23, #304]
  41a2b8:	eor	w1, w1, w0
  41a2bc:	stp	x19, x20, [sp, #32]
  41a2c0:	add	x20, x21, #0x3a8
  41a2c4:	stp	x25, x26, [sp, #80]
  41a2c8:	str	w1, [sp, #116]
  41a2cc:	stp	x4, x5, [sp, #136]
  41a2d0:	str	x2, [sp, #152]
  41a2d4:	bl	402920 <__errno_location@plt>
  41a2d8:	ldr	w1, [x20, #8]
  41a2dc:	mov	x24, x0
  41a2e0:	ldr	x19, [x21, #936]
  41a2e4:	cmp	w1, #0x0
  41a2e8:	ldr	w25, [x0]
  41a2ec:	b.gt	41a330 <ferror@plt+0x17990>
  41a2f0:	add	x0, x20, #0x10
  41a2f4:	cmp	x19, x0
  41a2f8:	b.eq	41a3d8 <ferror@plt+0x17a38>  // b.none
  41a2fc:	mov	x0, x19
  41a300:	mov	x1, #0x10                  	// #16
  41a304:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a308:	mov	x19, x0
  41a30c:	str	x0, [x21, #936]
  41a310:	ldr	w0, [x20, #8]
  41a314:	mov	w21, #0x1                   	// #1
  41a318:	mov	w1, #0x0                   	// #0
  41a31c:	sub	w2, w21, w0
  41a320:	add	x0, x19, w0, sxtw #4
  41a324:	sbfiz	x2, x2, #4, #32
  41a328:	bl	4025c0 <memset@plt>
  41a32c:	str	w21, [x20, #8]
  41a330:	ldp	x20, x21, [x19]
  41a334:	add	x6, sp, #0x70
  41a338:	ldp	x7, x0, [sp, #144]
  41a33c:	str	x0, [sp]
  41a340:	ldp	w4, w26, [sp, #104]
  41a344:	mov	x2, x22
  41a348:	mov	x1, x20
  41a34c:	mov	x0, x21
  41a350:	orr	w26, w26, #0x1
  41a354:	mov	x3, #0xffffffffffffffff    	// #-1
  41a358:	mov	w5, w26
  41a35c:	bl	417e20 <ferror@plt+0x15480>
  41a360:	cmp	x20, x0
  41a364:	b.hi	41a3b4 <ferror@plt+0x17a14>  // b.pmore
  41a368:	add	x20, x0, #0x1
  41a36c:	str	x20, [x19]
  41a370:	cmp	x21, x23
  41a374:	b.eq	41a380 <ferror@plt+0x179e0>  // b.none
  41a378:	mov	x0, x21
  41a37c:	bl	4027c0 <free@plt>
  41a380:	mov	x0, x20
  41a384:	bl	41ca30 <ferror@plt+0x1a090>
  41a388:	ldp	x7, x1, [sp, #144]
  41a38c:	str	x0, [x19, #8]
  41a390:	ldr	w4, [sp, #104]
  41a394:	mov	x21, x0
  41a398:	str	x1, [sp]
  41a39c:	add	x6, sp, #0x70
  41a3a0:	mov	w5, w26
  41a3a4:	mov	x2, x22
  41a3a8:	mov	x1, x20
  41a3ac:	mov	x3, #0xffffffffffffffff    	// #-1
  41a3b0:	bl	417e20 <ferror@plt+0x15480>
  41a3b4:	mov	x0, x21
  41a3b8:	ldp	x29, x30, [sp, #16]
  41a3bc:	ldp	x19, x20, [sp, #32]
  41a3c0:	ldp	x21, x22, [sp, #48]
  41a3c4:	str	w25, [x24]
  41a3c8:	ldp	x23, x24, [sp, #64]
  41a3cc:	ldp	x25, x26, [sp, #80]
  41a3d0:	add	sp, sp, #0xa0
  41a3d4:	ret
  41a3d8:	mov	x1, #0x10                  	// #16
  41a3dc:	mov	x0, #0x0                   	// #0
  41a3e0:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a3e4:	mov	x19, x0
  41a3e8:	str	x0, [x21, #936]
  41a3ec:	ldp	x0, x1, [x20, #16]
  41a3f0:	stp	x0, x1, [x19]
  41a3f4:	b	41a310 <ferror@plt+0x17970>
  41a3f8:	sub	sp, sp, #0xb0
  41a3fc:	stp	x29, x30, [sp, #16]
  41a400:	add	x29, sp, #0x10
  41a404:	stp	x21, x22, [sp, #48]
  41a408:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41a40c:	add	x21, x21, #0xb60
  41a410:	mov	x22, x0
  41a414:	stp	x19, x20, [sp, #32]
  41a418:	ldp	x4, x5, [x21, #256]
  41a41c:	stp	x4, x5, [sp, #120]
  41a420:	ldr	w4, [sp, #132]
  41a424:	ldp	x6, x7, [x21, #272]
  41a428:	stp	x6, x7, [sp, #136]
  41a42c:	mvn	w2, w4, lsr #26
  41a430:	ldp	x6, x7, [x21, #288]
  41a434:	ubfiz	w2, w2, #26, #1
  41a438:	ldr	x0, [x21, #304]
  41a43c:	eor	w2, w2, w4
  41a440:	stp	x23, x24, [sp, #64]
  41a444:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x1a640>
  41a448:	add	x20, x24, #0x3a8
  41a44c:	mov	x23, x1
  41a450:	stp	x25, x26, [sp, #80]
  41a454:	str	x27, [sp, #96]
  41a458:	str	w2, [sp, #132]
  41a45c:	stp	x6, x7, [sp, #152]
  41a460:	str	x0, [sp, #168]
  41a464:	bl	402920 <__errno_location@plt>
  41a468:	ldr	w1, [x20, #8]
  41a46c:	mov	x25, x0
  41a470:	ldr	x19, [x24, #936]
  41a474:	cmp	w1, #0x0
  41a478:	ldr	w26, [x0]
  41a47c:	b.gt	41a4c0 <ferror@plt+0x17b20>
  41a480:	add	x0, x20, #0x10
  41a484:	cmp	x19, x0
  41a488:	b.eq	41a56c <ferror@plt+0x17bcc>  // b.none
  41a48c:	mov	x0, x19
  41a490:	mov	x1, #0x10                  	// #16
  41a494:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a498:	mov	x19, x0
  41a49c:	str	x0, [x24, #936]
  41a4a0:	ldr	w0, [x20, #8]
  41a4a4:	mov	w24, #0x1                   	// #1
  41a4a8:	mov	w1, #0x0                   	// #0
  41a4ac:	sub	w2, w24, w0
  41a4b0:	add	x0, x19, w0, sxtw #4
  41a4b4:	sbfiz	x2, x2, #4, #32
  41a4b8:	bl	4025c0 <memset@plt>
  41a4bc:	str	w24, [x20, #8]
  41a4c0:	ldp	x20, x24, [x19]
  41a4c4:	add	x6, sp, #0x80
  41a4c8:	ldp	x7, x0, [sp, #160]
  41a4cc:	str	x0, [sp]
  41a4d0:	ldp	w4, w27, [sp, #120]
  41a4d4:	mov	x3, x23
  41a4d8:	mov	x2, x22
  41a4dc:	mov	x1, x20
  41a4e0:	orr	w27, w27, #0x1
  41a4e4:	mov	x0, x24
  41a4e8:	mov	w5, w27
  41a4ec:	bl	417e20 <ferror@plt+0x15480>
  41a4f0:	cmp	x20, x0
  41a4f4:	b.hi	41a544 <ferror@plt+0x17ba4>  // b.pmore
  41a4f8:	add	x20, x0, #0x1
  41a4fc:	str	x20, [x19]
  41a500:	cmp	x24, x21
  41a504:	b.eq	41a510 <ferror@plt+0x17b70>  // b.none
  41a508:	mov	x0, x24
  41a50c:	bl	4027c0 <free@plt>
  41a510:	mov	x0, x20
  41a514:	bl	41ca30 <ferror@plt+0x1a090>
  41a518:	ldp	x7, x1, [sp, #160]
  41a51c:	str	x0, [x19, #8]
  41a520:	ldr	w4, [sp, #120]
  41a524:	mov	x24, x0
  41a528:	str	x1, [sp]
  41a52c:	add	x6, sp, #0x80
  41a530:	mov	w5, w27
  41a534:	mov	x3, x23
  41a538:	mov	x2, x22
  41a53c:	mov	x1, x20
  41a540:	bl	417e20 <ferror@plt+0x15480>
  41a544:	mov	x0, x24
  41a548:	ldp	x29, x30, [sp, #16]
  41a54c:	ldp	x19, x20, [sp, #32]
  41a550:	ldp	x21, x22, [sp, #48]
  41a554:	ldp	x23, x24, [sp, #64]
  41a558:	ldr	x27, [sp, #96]
  41a55c:	str	w26, [x25]
  41a560:	ldp	x25, x26, [sp, #80]
  41a564:	add	sp, sp, #0xb0
  41a568:	ret
  41a56c:	mov	x1, #0x10                  	// #16
  41a570:	mov	x0, #0x0                   	// #0
  41a574:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a578:	mov	x19, x0
  41a57c:	str	x0, [x24, #936]
  41a580:	ldp	x0, x1, [x20, #16]
  41a584:	stp	x0, x1, [x19]
  41a588:	b	41a4a0 <ferror@plt+0x17b00>
  41a58c:	nop
  41a590:	stp	x29, x30, [sp, #-128]!
  41a594:	cmp	w1, #0xa
  41a598:	mov	x29, sp
  41a59c:	stp	xzr, xzr, [sp, #16]
  41a5a0:	stp	xzr, xzr, [sp, #32]
  41a5a4:	stp	xzr, xzr, [sp, #48]
  41a5a8:	str	xzr, [sp, #64]
  41a5ac:	b.eq	41a5d8 <ferror@plt+0x17c38>  // b.none
  41a5b0:	mov	w4, w1
  41a5b4:	mov	w5, #0x4000000             	// #67108864
  41a5b8:	mov	x1, x2
  41a5bc:	add	x3, sp, #0x10
  41a5c0:	mov	x2, #0xffffffffffffffff    	// #-1
  41a5c4:	str	w4, [sp, #16]
  41a5c8:	str	w5, [sp, #28]
  41a5cc:	bl	418fc0 <ferror@plt+0x16620>
  41a5d0:	ldp	x29, x30, [sp], #128
  41a5d4:	ret
  41a5d8:	bl	4026d0 <abort@plt>
  41a5dc:	nop
  41a5e0:	adrp	x4, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41a5e4:	add	x4, x4, #0xb60
  41a5e8:	stp	x29, x30, [sp, #-80]!
  41a5ec:	mov	x5, x1
  41a5f0:	mov	w1, #0xa                   	// #10
  41a5f4:	mov	x29, sp
  41a5f8:	ldp	x8, x9, [x4, #256]
  41a5fc:	stp	x8, x9, [sp, #24]
  41a600:	cmp	x5, #0x0
  41a604:	str	w1, [sp, #24]
  41a608:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41a60c:	ldp	x10, x11, [x4, #272]
  41a610:	stp	x10, x11, [sp, #40]
  41a614:	ldp	x8, x9, [x4, #288]
  41a618:	stp	x8, x9, [sp, #56]
  41a61c:	ldr	x1, [x4, #304]
  41a620:	str	x1, [sp, #72]
  41a624:	b.eq	41a648 <ferror@plt+0x17ca8>  // b.none
  41a628:	mov	x4, x2
  41a62c:	mov	x1, x3
  41a630:	mov	x2, #0xffffffffffffffff    	// #-1
  41a634:	add	x3, sp, #0x18
  41a638:	stp	x5, x4, [sp, #64]
  41a63c:	bl	418fc0 <ferror@plt+0x16620>
  41a640:	ldp	x29, x30, [sp], #80
  41a644:	ret
  41a648:	bl	4026d0 <abort@plt>
  41a64c:	nop
  41a650:	adrp	x5, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41a654:	add	x5, x5, #0xb60
  41a658:	stp	x29, x30, [sp, #-80]!
  41a65c:	mov	x6, x1
  41a660:	mov	w1, #0xa                   	// #10
  41a664:	mov	x29, sp
  41a668:	ldp	x8, x9, [x5, #256]
  41a66c:	stp	x8, x9, [sp, #24]
  41a670:	cmp	x6, #0x0
  41a674:	str	w1, [sp, #24]
  41a678:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41a67c:	ldp	x10, x11, [x5, #272]
  41a680:	stp	x10, x11, [sp, #40]
  41a684:	ldp	x8, x9, [x5, #288]
  41a688:	stp	x8, x9, [sp, #56]
  41a68c:	ldr	x1, [x5, #304]
  41a690:	str	x1, [sp, #72]
  41a694:	b.eq	41a6b8 <ferror@plt+0x17d18>  // b.none
  41a698:	mov	x5, x2
  41a69c:	mov	x1, x3
  41a6a0:	mov	x2, x4
  41a6a4:	add	x3, sp, #0x18
  41a6a8:	stp	x6, x5, [sp, #64]
  41a6ac:	bl	418fc0 <ferror@plt+0x16620>
  41a6b0:	ldp	x29, x30, [sp], #80
  41a6b4:	ret
  41a6b8:	bl	4026d0 <abort@plt>
  41a6bc:	nop
  41a6c0:	sub	sp, sp, #0xb0
  41a6c4:	cmp	x0, #0x0
  41a6c8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41a6cc:	stp	x29, x30, [sp, #16]
  41a6d0:	add	x29, sp, #0x10
  41a6d4:	stp	x21, x22, [sp, #48]
  41a6d8:	adrp	x22, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41a6dc:	add	x22, x22, #0xb60
  41a6e0:	mov	x21, x0
  41a6e4:	stp	x19, x20, [sp, #32]
  41a6e8:	mov	w19, #0xa                   	// #10
  41a6ec:	ldp	x4, x5, [x22, #256]
  41a6f0:	stp	x4, x5, [sp, #120]
  41a6f4:	ldp	x4, x5, [x22, #272]
  41a6f8:	stp	x23, x24, [sp, #64]
  41a6fc:	ldp	x6, x7, [x22, #288]
  41a700:	stp	x25, x26, [sp, #80]
  41a704:	ldr	x0, [x22, #304]
  41a708:	str	x27, [sp, #96]
  41a70c:	str	w19, [sp, #120]
  41a710:	stp	x4, x5, [sp, #136]
  41a714:	stp	x6, x7, [sp, #152]
  41a718:	str	x0, [sp, #168]
  41a71c:	b.eq	41a86c <ferror@plt+0x17ecc>  // b.none
  41a720:	adrp	x27, 438000 <_obstack_memory_used@@Base+0x1a640>
  41a724:	add	x26, x27, #0x3a8
  41a728:	mov	x20, x1
  41a72c:	mov	x24, x2
  41a730:	stp	x21, x1, [sp, #160]
  41a734:	bl	402920 <__errno_location@plt>
  41a738:	ldr	w1, [x26, #8]
  41a73c:	mov	w4, w19
  41a740:	ldr	w25, [x0]
  41a744:	ldr	x19, [x27, #936]
  41a748:	mov	x23, x0
  41a74c:	cmp	w1, #0x0
  41a750:	b.gt	41a7a0 <ferror@plt+0x17e00>
  41a754:	add	x0, x26, #0x10
  41a758:	cmp	x19, x0
  41a75c:	b.eq	41a84c <ferror@plt+0x17eac>  // b.none
  41a760:	mov	x0, x19
  41a764:	mov	x1, #0x10                  	// #16
  41a768:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a76c:	mov	x19, x0
  41a770:	str	x0, [x27, #936]
  41a774:	ldr	w0, [x26, #8]
  41a778:	mov	w20, #0x1                   	// #1
  41a77c:	mov	w1, #0x0                   	// #0
  41a780:	sub	w2, w20, w0
  41a784:	add	x0, x19, w0, sxtw #4
  41a788:	sbfiz	x2, x2, #4, #32
  41a78c:	bl	4025c0 <memset@plt>
  41a790:	ldr	w4, [sp, #120]
  41a794:	str	w20, [x26, #8]
  41a798:	ldr	x21, [sp, #160]
  41a79c:	ldr	x20, [sp, #168]
  41a7a0:	mov	x7, x21
  41a7a4:	ldp	x27, x21, [x19]
  41a7a8:	str	x20, [sp]
  41a7ac:	ldr	w26, [sp, #124]
  41a7b0:	add	x6, sp, #0x80
  41a7b4:	mov	x2, x24
  41a7b8:	mov	x3, #0xffffffffffffffff    	// #-1
  41a7bc:	orr	w26, w26, #0x1
  41a7c0:	mov	w5, w26
  41a7c4:	mov	x1, x27
  41a7c8:	mov	x0, x21
  41a7cc:	bl	417e20 <ferror@plt+0x15480>
  41a7d0:	cmp	x27, x0
  41a7d4:	b.hi	41a824 <ferror@plt+0x17e84>  // b.pmore
  41a7d8:	add	x20, x0, #0x1
  41a7dc:	str	x20, [x19]
  41a7e0:	cmp	x21, x22
  41a7e4:	b.eq	41a7f0 <ferror@plt+0x17e50>  // b.none
  41a7e8:	mov	x0, x21
  41a7ec:	bl	4027c0 <free@plt>
  41a7f0:	mov	x0, x20
  41a7f4:	bl	41ca30 <ferror@plt+0x1a090>
  41a7f8:	ldp	x7, x1, [sp, #160]
  41a7fc:	str	x0, [x19, #8]
  41a800:	ldr	w4, [sp, #120]
  41a804:	mov	x21, x0
  41a808:	str	x1, [sp]
  41a80c:	add	x6, sp, #0x80
  41a810:	mov	w5, w26
  41a814:	mov	x2, x24
  41a818:	mov	x1, x20
  41a81c:	mov	x3, #0xffffffffffffffff    	// #-1
  41a820:	bl	417e20 <ferror@plt+0x15480>
  41a824:	mov	x0, x21
  41a828:	ldp	x29, x30, [sp, #16]
  41a82c:	ldp	x19, x20, [sp, #32]
  41a830:	ldp	x21, x22, [sp, #48]
  41a834:	ldr	x27, [sp, #96]
  41a838:	str	w25, [x23]
  41a83c:	ldp	x23, x24, [sp, #64]
  41a840:	ldp	x25, x26, [sp, #80]
  41a844:	add	sp, sp, #0xb0
  41a848:	ret
  41a84c:	mov	x1, #0x10                  	// #16
  41a850:	mov	x0, #0x0                   	// #0
  41a854:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a858:	mov	x19, x0
  41a85c:	str	x0, [x27, #936]
  41a860:	ldp	x0, x1, [x26, #16]
  41a864:	stp	x0, x1, [x19]
  41a868:	b	41a774 <ferror@plt+0x17dd4>
  41a86c:	bl	4026d0 <abort@plt>
  41a870:	sub	sp, sp, #0xb0
  41a874:	cmp	x0, #0x0
  41a878:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41a87c:	stp	x29, x30, [sp, #16]
  41a880:	add	x29, sp, #0x10
  41a884:	stp	x21, x22, [sp, #48]
  41a888:	adrp	x22, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41a88c:	add	x22, x22, #0xb60
  41a890:	mov	x21, x0
  41a894:	stp	x19, x20, [sp, #32]
  41a898:	mov	w19, #0xa                   	// #10
  41a89c:	ldp	x6, x7, [x22, #256]
  41a8a0:	stp	x6, x7, [sp, #120]
  41a8a4:	add	x4, x22, #0x100
  41a8a8:	ldp	x6, x7, [x4, #16]
  41a8ac:	stp	x23, x24, [sp, #64]
  41a8b0:	ldp	x8, x9, [x4, #32]
  41a8b4:	stp	x25, x26, [sp, #80]
  41a8b8:	ldr	x0, [x4, #48]
  41a8bc:	stp	x27, x28, [sp, #96]
  41a8c0:	str	w19, [sp, #120]
  41a8c4:	stp	x6, x7, [sp, #136]
  41a8c8:	stp	x8, x9, [sp, #152]
  41a8cc:	str	x0, [sp, #168]
  41a8d0:	b.eq	41aa24 <ferror@plt+0x18084>  // b.none
  41a8d4:	adrp	x28, 438000 <_obstack_memory_used@@Base+0x1a640>
  41a8d8:	add	x27, x28, #0x3a8
  41a8dc:	mov	x20, x1
  41a8e0:	mov	x24, x2
  41a8e4:	mov	x25, x3
  41a8e8:	stp	x21, x1, [sp, #160]
  41a8ec:	bl	402920 <__errno_location@plt>
  41a8f0:	ldr	w1, [x27, #8]
  41a8f4:	mov	w4, w19
  41a8f8:	ldr	w26, [x0]
  41a8fc:	mov	x23, x0
  41a900:	ldr	x19, [x28, #936]
  41a904:	cmp	w1, #0x0
  41a908:	b.gt	41a958 <ferror@plt+0x17fb8>
  41a90c:	add	x0, x27, #0x10
  41a910:	cmp	x19, x0
  41a914:	b.eq	41aa04 <ferror@plt+0x18064>  // b.none
  41a918:	mov	x0, x19
  41a91c:	mov	x1, #0x10                  	// #16
  41a920:	bl	41ca60 <ferror@plt+0x1a0c0>
  41a924:	mov	x19, x0
  41a928:	str	x0, [x28, #936]
  41a92c:	ldr	w0, [x27, #8]
  41a930:	mov	w20, #0x1                   	// #1
  41a934:	mov	w1, #0x0                   	// #0
  41a938:	sub	w2, w20, w0
  41a93c:	add	x0, x19, w0, sxtw #4
  41a940:	sbfiz	x2, x2, #4, #32
  41a944:	bl	4025c0 <memset@plt>
  41a948:	ldr	w4, [sp, #120]
  41a94c:	str	w20, [x27, #8]
  41a950:	ldr	x21, [sp, #160]
  41a954:	ldr	x20, [sp, #168]
  41a958:	mov	x7, x21
  41a95c:	ldp	x28, x21, [x19]
  41a960:	str	x20, [sp]
  41a964:	ldr	w27, [sp, #124]
  41a968:	add	x6, sp, #0x80
  41a96c:	mov	x3, x25
  41a970:	mov	x2, x24
  41a974:	orr	w27, w27, #0x1
  41a978:	mov	w5, w27
  41a97c:	mov	x1, x28
  41a980:	mov	x0, x21
  41a984:	bl	417e20 <ferror@plt+0x15480>
  41a988:	cmp	x28, x0
  41a98c:	b.hi	41a9dc <ferror@plt+0x1803c>  // b.pmore
  41a990:	add	x20, x0, #0x1
  41a994:	str	x20, [x19]
  41a998:	cmp	x21, x22
  41a99c:	b.eq	41a9a8 <ferror@plt+0x18008>  // b.none
  41a9a0:	mov	x0, x21
  41a9a4:	bl	4027c0 <free@plt>
  41a9a8:	mov	x0, x20
  41a9ac:	bl	41ca30 <ferror@plt+0x1a090>
  41a9b0:	ldp	x7, x1, [sp, #160]
  41a9b4:	str	x0, [x19, #8]
  41a9b8:	ldr	w4, [sp, #120]
  41a9bc:	mov	x21, x0
  41a9c0:	str	x1, [sp]
  41a9c4:	add	x6, sp, #0x80
  41a9c8:	mov	w5, w27
  41a9cc:	mov	x3, x25
  41a9d0:	mov	x2, x24
  41a9d4:	mov	x1, x20
  41a9d8:	bl	417e20 <ferror@plt+0x15480>
  41a9dc:	mov	x0, x21
  41a9e0:	ldp	x29, x30, [sp, #16]
  41a9e4:	ldp	x19, x20, [sp, #32]
  41a9e8:	ldp	x21, x22, [sp, #48]
  41a9ec:	ldp	x27, x28, [sp, #96]
  41a9f0:	str	w26, [x23]
  41a9f4:	ldp	x23, x24, [sp, #64]
  41a9f8:	ldp	x25, x26, [sp, #80]
  41a9fc:	add	sp, sp, #0xb0
  41aa00:	ret
  41aa04:	mov	x1, #0x10                  	// #16
  41aa08:	mov	x0, #0x0                   	// #0
  41aa0c:	bl	41ca60 <ferror@plt+0x1a0c0>
  41aa10:	mov	x19, x0
  41aa14:	str	x0, [x28, #936]
  41aa18:	ldp	x0, x1, [x27, #16]
  41aa1c:	stp	x0, x1, [x19]
  41aa20:	b	41a92c <ferror@plt+0x17f8c>
  41aa24:	bl	4026d0 <abort@plt>
  41aa28:	sub	sp, sp, #0x80
  41aa2c:	stp	x29, x30, [sp, #16]
  41aa30:	add	x29, sp, #0x10
  41aa34:	stp	x19, x20, [sp, #32]
  41aa38:	mov	w19, w0
  41aa3c:	stp	x21, x22, [sp, #48]
  41aa40:	stp	x23, x24, [sp, #64]
  41aa44:	mov	x23, x1
  41aa48:	mov	x24, x2
  41aa4c:	stp	x25, x26, [sp, #80]
  41aa50:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x1a640>
  41aa54:	stp	x27, x28, [sp, #96]
  41aa58:	bl	402920 <__errno_location@plt>
  41aa5c:	mov	x22, x0
  41aa60:	ldr	w0, [x0]
  41aa64:	str	w0, [sp, #124]
  41aa68:	ldr	x21, [x26, #936]
  41aa6c:	tbnz	w19, #31, 41abb0 <ferror@plt+0x18210>
  41aa70:	add	x20, x26, #0x3a8
  41aa74:	ldr	w0, [x20, #8]
  41aa78:	cmp	w19, w0
  41aa7c:	b.lt	41aacc <ferror@plt+0x1812c>  // b.tstop
  41aa80:	mov	w0, #0x7fffffff            	// #2147483647
  41aa84:	cmp	w19, w0
  41aa88:	b.eq	41abac <ferror@plt+0x1820c>  // b.none
  41aa8c:	add	w27, w19, #0x1
  41aa90:	add	x0, x20, #0x10
  41aa94:	cmp	x21, x0
  41aa98:	sbfiz	x1, x27, #4, #32
  41aa9c:	b.eq	41ab90 <ferror@plt+0x181f0>  // b.none
  41aaa0:	mov	x0, x21
  41aaa4:	bl	41ca60 <ferror@plt+0x1a0c0>
  41aaa8:	mov	x21, x0
  41aaac:	str	x0, [x26, #936]
  41aab0:	ldr	w0, [x20, #8]
  41aab4:	mov	w1, #0x0                   	// #0
  41aab8:	sub	w2, w27, w0
  41aabc:	add	x0, x21, w0, sxtw #4
  41aac0:	sbfiz	x2, x2, #4, #32
  41aac4:	bl	4025c0 <memset@plt>
  41aac8:	str	w27, [x20, #8]
  41aacc:	sbfiz	x19, x19, #4, #32
  41aad0:	add	x6, x20, #0x28
  41aad4:	add	x26, x21, x19
  41aad8:	mov	x3, x24
  41aadc:	ldp	x7, x0, [x20, #72]
  41aae0:	mov	x2, x23
  41aae4:	ldp	w4, w5, [x20, #32]
  41aae8:	ldr	x27, [x21, x19]
  41aaec:	orr	w25, w5, #0x1
  41aaf0:	ldr	x28, [x26, #8]
  41aaf4:	str	x0, [sp]
  41aaf8:	mov	x1, x27
  41aafc:	mov	w5, w25
  41ab00:	mov	x0, x28
  41ab04:	bl	417e20 <ferror@plt+0x15480>
  41ab08:	cmp	x27, x0
  41ab0c:	b.hi	41ab64 <ferror@plt+0x181c4>  // b.pmore
  41ab10:	add	x27, x0, #0x1
  41ab14:	str	x27, [x21, x19]
  41ab18:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41ab1c:	add	x0, x0, #0xb60
  41ab20:	cmp	x28, x0
  41ab24:	b.eq	41ab30 <ferror@plt+0x18190>  // b.none
  41ab28:	mov	x0, x28
  41ab2c:	bl	4027c0 <free@plt>
  41ab30:	mov	x0, x27
  41ab34:	bl	41ca30 <ferror@plt+0x1a090>
  41ab38:	ldp	x7, x1, [x20, #72]
  41ab3c:	str	x0, [x26, #8]
  41ab40:	ldr	w4, [x20, #32]
  41ab44:	mov	x28, x0
  41ab48:	str	x1, [sp]
  41ab4c:	mov	w5, w25
  41ab50:	mov	x3, x24
  41ab54:	mov	x2, x23
  41ab58:	add	x6, x20, #0x28
  41ab5c:	mov	x1, x27
  41ab60:	bl	417e20 <ferror@plt+0x15480>
  41ab64:	ldr	w0, [sp, #124]
  41ab68:	ldp	x29, x30, [sp, #16]
  41ab6c:	ldp	x19, x20, [sp, #32]
  41ab70:	ldp	x23, x24, [sp, #64]
  41ab74:	ldp	x25, x26, [sp, #80]
  41ab78:	str	w0, [x22]
  41ab7c:	mov	x0, x28
  41ab80:	ldp	x21, x22, [sp, #48]
  41ab84:	ldp	x27, x28, [sp, #96]
  41ab88:	add	sp, sp, #0x80
  41ab8c:	ret
  41ab90:	mov	x0, #0x0                   	// #0
  41ab94:	bl	41ca60 <ferror@plt+0x1a0c0>
  41ab98:	mov	x21, x0
  41ab9c:	str	x0, [x26, #936]
  41aba0:	ldp	x0, x1, [x20, #16]
  41aba4:	stp	x0, x1, [x21]
  41aba8:	b	41aab0 <ferror@plt+0x18110>
  41abac:	bl	41cbf8 <ferror@plt+0x1a258>
  41abb0:	bl	4026d0 <abort@plt>
  41abb4:	nop
  41abb8:	sub	sp, sp, #0x70
  41abbc:	stp	x29, x30, [sp, #16]
  41abc0:	add	x29, sp, #0x10
  41abc4:	stp	x19, x20, [sp, #32]
  41abc8:	stp	x21, x22, [sp, #48]
  41abcc:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  41abd0:	add	x19, x21, #0x3a8
  41abd4:	stp	x23, x24, [sp, #64]
  41abd8:	mov	x24, x0
  41abdc:	stp	x25, x26, [sp, #80]
  41abe0:	mov	x25, x1
  41abe4:	str	x27, [sp, #96]
  41abe8:	bl	402920 <__errno_location@plt>
  41abec:	mov	x23, x0
  41abf0:	ldr	w0, [x19, #8]
  41abf4:	ldr	x20, [x21, #936]
  41abf8:	cmp	w0, #0x0
  41abfc:	ldr	w26, [x23]
  41ac00:	b.gt	41ac44 <ferror@plt+0x182a4>
  41ac04:	add	x0, x19, #0x10
  41ac08:	cmp	x20, x0
  41ac0c:	b.eq	41acf8 <ferror@plt+0x18358>  // b.none
  41ac10:	mov	x0, x20
  41ac14:	mov	x1, #0x10                  	// #16
  41ac18:	bl	41ca60 <ferror@plt+0x1a0c0>
  41ac1c:	mov	x20, x0
  41ac20:	str	x0, [x21, #936]
  41ac24:	ldr	w0, [x19, #8]
  41ac28:	mov	w21, #0x1                   	// #1
  41ac2c:	mov	w1, #0x0                   	// #0
  41ac30:	sub	w2, w21, w0
  41ac34:	add	x0, x20, w0, sxtw #4
  41ac38:	sbfiz	x2, x2, #4, #32
  41ac3c:	bl	4025c0 <memset@plt>
  41ac40:	str	w21, [x19, #8]
  41ac44:	ldp	x21, x22, [x20]
  41ac48:	add	x6, x19, #0x28
  41ac4c:	ldp	x7, x0, [x19, #72]
  41ac50:	str	x0, [sp]
  41ac54:	ldp	w4, w27, [x19, #32]
  41ac58:	mov	x3, x25
  41ac5c:	mov	x2, x24
  41ac60:	mov	x1, x21
  41ac64:	orr	w27, w27, #0x1
  41ac68:	mov	x0, x22
  41ac6c:	mov	w5, w27
  41ac70:	bl	417e20 <ferror@plt+0x15480>
  41ac74:	cmp	x21, x0
  41ac78:	b.hi	41acd0 <ferror@plt+0x18330>  // b.pmore
  41ac7c:	add	x21, x0, #0x1
  41ac80:	str	x21, [x20]
  41ac84:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41ac88:	add	x0, x0, #0xb60
  41ac8c:	cmp	x22, x0
  41ac90:	b.eq	41ac9c <ferror@plt+0x182fc>  // b.none
  41ac94:	mov	x0, x22
  41ac98:	bl	4027c0 <free@plt>
  41ac9c:	mov	x0, x21
  41aca0:	bl	41ca30 <ferror@plt+0x1a090>
  41aca4:	ldp	x7, x1, [x19, #72]
  41aca8:	str	x0, [x20, #8]
  41acac:	ldr	w4, [x19, #32]
  41acb0:	mov	x22, x0
  41acb4:	str	x1, [sp]
  41acb8:	mov	w5, w27
  41acbc:	mov	x3, x25
  41acc0:	mov	x2, x24
  41acc4:	add	x6, x19, #0x28
  41acc8:	mov	x1, x21
  41accc:	bl	417e20 <ferror@plt+0x15480>
  41acd0:	mov	x0, x22
  41acd4:	ldp	x29, x30, [sp, #16]
  41acd8:	ldp	x19, x20, [sp, #32]
  41acdc:	ldp	x21, x22, [sp, #48]
  41ace0:	ldr	x27, [sp, #96]
  41ace4:	str	w26, [x23]
  41ace8:	ldp	x23, x24, [sp, #64]
  41acec:	ldp	x25, x26, [sp, #80]
  41acf0:	add	sp, sp, #0x70
  41acf4:	ret
  41acf8:	mov	x1, #0x10                  	// #16
  41acfc:	mov	x0, #0x0                   	// #0
  41ad00:	bl	41ca60 <ferror@plt+0x1a0c0>
  41ad04:	mov	x20, x0
  41ad08:	str	x0, [x21, #936]
  41ad0c:	ldp	x0, x1, [x19, #16]
  41ad10:	stp	x0, x1, [x20]
  41ad14:	b	41ac24 <ferror@plt+0x18284>
  41ad18:	sub	sp, sp, #0x70
  41ad1c:	stp	x29, x30, [sp, #16]
  41ad20:	add	x29, sp, #0x10
  41ad24:	stp	x21, x22, [sp, #48]
  41ad28:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x1a640>
  41ad2c:	stp	x19, x20, [sp, #32]
  41ad30:	mov	w19, w0
  41ad34:	stp	x23, x24, [sp, #64]
  41ad38:	mov	x24, x1
  41ad3c:	stp	x25, x26, [sp, #80]
  41ad40:	stp	x27, x28, [sp, #96]
  41ad44:	bl	402920 <__errno_location@plt>
  41ad48:	ldr	w25, [x0]
  41ad4c:	ldr	x21, [x22, #936]
  41ad50:	tbnz	w19, #31, 41ae94 <ferror@plt+0x184f4>
  41ad54:	add	x20, x22, #0x3a8
  41ad58:	mov	x23, x0
  41ad5c:	ldr	w0, [x20, #8]
  41ad60:	cmp	w19, w0
  41ad64:	b.lt	41adb4 <ferror@plt+0x18414>  // b.tstop
  41ad68:	mov	w0, #0x7fffffff            	// #2147483647
  41ad6c:	cmp	w19, w0
  41ad70:	b.eq	41ae90 <ferror@plt+0x184f0>  // b.none
  41ad74:	add	w26, w19, #0x1
  41ad78:	add	x0, x20, #0x10
  41ad7c:	cmp	x21, x0
  41ad80:	sbfiz	x1, x26, #4, #32
  41ad84:	b.eq	41ae74 <ferror@plt+0x184d4>  // b.none
  41ad88:	mov	x0, x21
  41ad8c:	bl	41ca60 <ferror@plt+0x1a0c0>
  41ad90:	mov	x21, x0
  41ad94:	str	x0, [x22, #936]
  41ad98:	ldr	w0, [x20, #8]
  41ad9c:	mov	w1, #0x0                   	// #0
  41ada0:	sub	w2, w26, w0
  41ada4:	add	x0, x21, w0, sxtw #4
  41ada8:	sbfiz	x2, x2, #4, #32
  41adac:	bl	4025c0 <memset@plt>
  41adb0:	str	w26, [x20, #8]
  41adb4:	sbfiz	x19, x19, #4, #32
  41adb8:	add	x6, x20, #0x28
  41adbc:	add	x26, x21, x19
  41adc0:	mov	x2, x24
  41adc4:	ldp	x7, x0, [x20, #72]
  41adc8:	mov	x3, #0xffffffffffffffff    	// #-1
  41adcc:	ldp	w4, w28, [x20, #32]
  41add0:	ldr	x22, [x21, x19]
  41add4:	orr	w28, w28, #0x1
  41add8:	ldr	x27, [x26, #8]
  41addc:	str	x0, [sp]
  41ade0:	mov	x1, x22
  41ade4:	mov	w5, w28
  41ade8:	mov	x0, x27
  41adec:	bl	417e20 <ferror@plt+0x15480>
  41adf0:	cmp	x22, x0
  41adf4:	b.hi	41ae4c <ferror@plt+0x184ac>  // b.pmore
  41adf8:	add	x22, x0, #0x1
  41adfc:	str	x22, [x21, x19]
  41ae00:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41ae04:	add	x0, x0, #0xb60
  41ae08:	cmp	x27, x0
  41ae0c:	b.eq	41ae18 <ferror@plt+0x18478>  // b.none
  41ae10:	mov	x0, x27
  41ae14:	bl	4027c0 <free@plt>
  41ae18:	mov	x0, x22
  41ae1c:	bl	41ca30 <ferror@plt+0x1a090>
  41ae20:	ldp	x7, x1, [x20, #72]
  41ae24:	str	x0, [x26, #8]
  41ae28:	ldr	w4, [x20, #32]
  41ae2c:	mov	x27, x0
  41ae30:	str	x1, [sp]
  41ae34:	mov	w5, w28
  41ae38:	mov	x2, x24
  41ae3c:	add	x6, x20, #0x28
  41ae40:	mov	x1, x22
  41ae44:	mov	x3, #0xffffffffffffffff    	// #-1
  41ae48:	bl	417e20 <ferror@plt+0x15480>
  41ae4c:	mov	x0, x27
  41ae50:	ldp	x29, x30, [sp, #16]
  41ae54:	ldp	x19, x20, [sp, #32]
  41ae58:	ldp	x21, x22, [sp, #48]
  41ae5c:	ldp	x27, x28, [sp, #96]
  41ae60:	str	w25, [x23]
  41ae64:	ldp	x23, x24, [sp, #64]
  41ae68:	ldp	x25, x26, [sp, #80]
  41ae6c:	add	sp, sp, #0x70
  41ae70:	ret
  41ae74:	mov	x0, #0x0                   	// #0
  41ae78:	bl	41ca60 <ferror@plt+0x1a0c0>
  41ae7c:	mov	x21, x0
  41ae80:	str	x0, [x22, #936]
  41ae84:	ldp	x0, x1, [x20, #16]
  41ae88:	stp	x0, x1, [x21]
  41ae8c:	b	41ad98 <ferror@plt+0x183f8>
  41ae90:	bl	41cbf8 <ferror@plt+0x1a258>
  41ae94:	bl	4026d0 <abort@plt>
  41ae98:	sub	sp, sp, #0x60
  41ae9c:	stp	x29, x30, [sp, #16]
  41aea0:	add	x29, sp, #0x10
  41aea4:	stp	x19, x20, [sp, #32]
  41aea8:	stp	x21, x22, [sp, #48]
  41aeac:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  41aeb0:	add	x19, x21, #0x3a8
  41aeb4:	stp	x23, x24, [sp, #64]
  41aeb8:	mov	x24, x0
  41aebc:	stp	x25, x26, [sp, #80]
  41aec0:	bl	402920 <__errno_location@plt>
  41aec4:	mov	x23, x0
  41aec8:	ldr	w0, [x19, #8]
  41aecc:	ldr	x20, [x21, #936]
  41aed0:	cmp	w0, #0x0
  41aed4:	ldr	w25, [x23]
  41aed8:	b.gt	41af1c <ferror@plt+0x1857c>
  41aedc:	add	x0, x19, #0x10
  41aee0:	cmp	x20, x0
  41aee4:	b.eq	41afcc <ferror@plt+0x1862c>  // b.none
  41aee8:	mov	x0, x20
  41aeec:	mov	x1, #0x10                  	// #16
  41aef0:	bl	41ca60 <ferror@plt+0x1a0c0>
  41aef4:	mov	x20, x0
  41aef8:	str	x0, [x21, #936]
  41aefc:	ldr	w0, [x19, #8]
  41af00:	mov	w21, #0x1                   	// #1
  41af04:	mov	w1, #0x0                   	// #0
  41af08:	sub	w2, w21, w0
  41af0c:	add	x0, x20, w0, sxtw #4
  41af10:	sbfiz	x2, x2, #4, #32
  41af14:	bl	4025c0 <memset@plt>
  41af18:	str	w21, [x19, #8]
  41af1c:	ldp	x21, x22, [x20]
  41af20:	add	x6, x19, #0x28
  41af24:	ldp	x7, x0, [x19, #72]
  41af28:	str	x0, [sp]
  41af2c:	ldp	w4, w26, [x19, #32]
  41af30:	mov	x2, x24
  41af34:	mov	x1, x21
  41af38:	mov	x0, x22
  41af3c:	orr	w26, w26, #0x1
  41af40:	mov	x3, #0xffffffffffffffff    	// #-1
  41af44:	mov	w5, w26
  41af48:	bl	417e20 <ferror@plt+0x15480>
  41af4c:	cmp	x21, x0
  41af50:	b.hi	41afa8 <ferror@plt+0x18608>  // b.pmore
  41af54:	add	x21, x0, #0x1
  41af58:	str	x21, [x20]
  41af5c:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41af60:	add	x0, x0, #0xb60
  41af64:	cmp	x22, x0
  41af68:	b.eq	41af74 <ferror@plt+0x185d4>  // b.none
  41af6c:	mov	x0, x22
  41af70:	bl	4027c0 <free@plt>
  41af74:	mov	x0, x21
  41af78:	bl	41ca30 <ferror@plt+0x1a090>
  41af7c:	ldp	x7, x1, [x19, #72]
  41af80:	str	x0, [x20, #8]
  41af84:	ldr	w4, [x19, #32]
  41af88:	mov	x22, x0
  41af8c:	str	x1, [sp]
  41af90:	mov	w5, w26
  41af94:	mov	x2, x24
  41af98:	add	x6, x19, #0x28
  41af9c:	mov	x1, x21
  41afa0:	mov	x3, #0xffffffffffffffff    	// #-1
  41afa4:	bl	417e20 <ferror@plt+0x15480>
  41afa8:	mov	x0, x22
  41afac:	ldp	x29, x30, [sp, #16]
  41afb0:	ldp	x19, x20, [sp, #32]
  41afb4:	ldp	x21, x22, [sp, #48]
  41afb8:	str	w25, [x23]
  41afbc:	ldp	x23, x24, [sp, #64]
  41afc0:	ldp	x25, x26, [sp, #80]
  41afc4:	add	sp, sp, #0x60
  41afc8:	ret
  41afcc:	mov	x1, #0x10                  	// #16
  41afd0:	mov	x0, #0x0                   	// #0
  41afd4:	bl	41ca60 <ferror@plt+0x1a0c0>
  41afd8:	mov	x20, x0
  41afdc:	str	x0, [x21, #936]
  41afe0:	ldp	x0, x1, [x19, #16]
  41afe4:	stp	x0, x1, [x20]
  41afe8:	b	41aefc <ferror@plt+0x1855c>
  41afec:	nop
  41aff0:	sub	sp, sp, #0x2b0
  41aff4:	stp	x29, x30, [sp]
  41aff8:	mov	x29, sp
  41affc:	stp	x19, x20, [sp, #16]
  41b000:	mov	x20, x5
  41b004:	and	w19, w3, #0xff
  41b008:	stp	x21, x22, [sp, #32]
  41b00c:	mov	x21, x6
  41b010:	ands	w22, w4, #0xff
  41b014:	stp	x23, x24, [sp, #48]
  41b018:	mov	x23, x1
  41b01c:	mov	x24, x2
  41b020:	stp	x25, x26, [sp, #64]
  41b024:	ldrb	w26, [sp, #688]
  41b028:	stp	x27, x28, [sp, #80]
  41b02c:	and	w27, w7, #0xff
  41b030:	ldrb	w28, [sp, #696]
  41b034:	str	x0, [sp, #96]
  41b038:	b.ne	41b18c <ferror@plt+0x187ec>  // b.any
  41b03c:	cbnz	w19, 41b0ec <ferror@plt+0x1874c>
  41b040:	cbnz	w26, 41b118 <ferror@plt+0x18778>
  41b044:	add	x25, sp, #0x90
  41b048:	mov	x0, x25
  41b04c:	bl	402720 <posix_spawn_file_actions_init@plt>
  41b050:	mov	w1, w0
  41b054:	cbnz	w0, 41b0bc <ferror@plt+0x1871c>
  41b058:	cbnz	w19, 41b144 <ferror@plt+0x187a4>
  41b05c:	cbnz	w22, 41b1bc <ferror@plt+0x1881c>
  41b060:	cbnz	w27, 41b200 <ferror@plt+0x18860>
  41b064:	cmp	x20, #0x0
  41b068:	eor	w0, w19, #0x1
  41b06c:	cset	w1, ne  // ne = any
  41b070:	tst	w1, w0
  41b074:	b.ne	41b228 <ferror@plt+0x18888>  // b.any
  41b078:	cmp	x21, #0x0
  41b07c:	eor	w0, w22, #0x1
  41b080:	cset	w1, ne  // ne = any
  41b084:	tst	w1, w0
  41b088:	b.ne	41b24c <ferror@plt+0x188ac>  // b.any
  41b08c:	cbz	w26, 41b2c0 <ferror@plt+0x18920>
  41b090:	add	x0, sp, #0x160
  41b094:	bl	402870 <posix_spawnattr_init@plt>
  41b098:	mov	w1, w0
  41b09c:	cbz	w0, 41b3dc <ferror@plt+0x18a3c>
  41b0a0:	mov	x0, x25
  41b0a4:	str	w1, [sp, #108]
  41b0a8:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  41b0ac:	ldr	w1, [sp, #108]
  41b0b0:	str	w1, [sp, #108]
  41b0b4:	bl	415ca8 <ferror@plt+0x13308>
  41b0b8:	ldr	w1, [sp, #108]
  41b0bc:	eor	w0, w27, #0x1
  41b0c0:	orr	w0, w28, w0
  41b0c4:	cbnz	w0, 41b4c4 <ferror@plt+0x18b24>
  41b0c8:	str	w1, [sp, #96]
  41b0cc:	bl	402920 <__errno_location@plt>
  41b0d0:	ldr	w1, [sp, #96]
  41b0d4:	mov	x20, x0
  41b0d8:	cbnz	w22, 41b388 <ferror@plt+0x189e8>
  41b0dc:	cbnz	w19, 41b470 <ferror@plt+0x18ad0>
  41b0e0:	mov	w0, #0xffffffff            	// #-1
  41b0e4:	str	w1, [x20]
  41b0e8:	b	41b2fc <ferror@plt+0x1895c>
  41b0ec:	add	x0, sp, #0x88
  41b0f0:	bl	41b8b0 <ferror@plt+0x18f10>
  41b0f4:	tbz	w0, #31, 41b040 <ferror@plt+0x186a0>
  41b0f8:	bl	402920 <__errno_location@plt>
  41b0fc:	mov	x1, x0
  41b100:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41b104:	mov	w0, #0x1                   	// #1
  41b108:	add	x2, x2, #0xa08
  41b10c:	ldr	w1, [x1]
  41b110:	bl	4023e0 <error@plt>
  41b114:	cbz	w26, 41b044 <ferror@plt+0x186a4>
  41b118:	add	x2, sp, #0xe0
  41b11c:	mov	x1, #0x0                   	// #0
  41b120:	mov	w0, #0x2                   	// #2
  41b124:	bl	4023f0 <sigprocmask@plt>
  41b128:	add	x25, sp, #0x90
  41b12c:	bl	415b78 <ferror@plt+0x131d8>
  41b130:	mov	x0, x25
  41b134:	bl	402720 <posix_spawn_file_actions_init@plt>
  41b138:	mov	w1, w0
  41b13c:	cbnz	w0, 41b0b0 <ferror@plt+0x18710>
  41b140:	cbz	w19, 41b05c <ferror@plt+0x186bc>
  41b144:	ldr	w1, [sp, #136]
  41b148:	mov	x0, x25
  41b14c:	mov	w2, #0x0                   	// #0
  41b150:	bl	4024d0 <posix_spawn_file_actions_adddup2@plt>
  41b154:	mov	w1, w0
  41b158:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b15c:	cbnz	w22, 41b4e4 <ferror@plt+0x18b44>
  41b160:	ldr	w1, [sp, #136]
  41b164:	mov	x0, x25
  41b168:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  41b16c:	mov	w1, w0
  41b170:	cbz	w0, 41b270 <ferror@plt+0x188d0>
  41b174:	mov	x0, x25
  41b178:	str	w1, [sp, #108]
  41b17c:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  41b180:	ldr	w1, [sp, #108]
  41b184:	cbz	w26, 41b0bc <ferror@plt+0x1871c>
  41b188:	b	41b0b0 <ferror@plt+0x18710>
  41b18c:	add	x0, sp, #0x80
  41b190:	bl	41b8b0 <ferror@plt+0x18f10>
  41b194:	tbz	w0, #31, 41b03c <ferror@plt+0x1869c>
  41b198:	bl	402920 <__errno_location@plt>
  41b19c:	mov	x1, x0
  41b1a0:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41b1a4:	mov	w0, #0x1                   	// #1
  41b1a8:	add	x2, x2, #0xa08
  41b1ac:	ldr	w1, [x1]
  41b1b0:	bl	4023e0 <error@plt>
  41b1b4:	cbz	w19, 41b040 <ferror@plt+0x186a0>
  41b1b8:	b	41b0ec <ferror@plt+0x1874c>
  41b1bc:	ldr	w1, [sp, #132]
  41b1c0:	mov	x0, x25
  41b1c4:	mov	w2, #0x1                   	// #1
  41b1c8:	bl	4024d0 <posix_spawn_file_actions_adddup2@plt>
  41b1cc:	mov	w1, w0
  41b1d0:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b1d4:	ldr	w1, [sp, #132]
  41b1d8:	mov	x0, x25
  41b1dc:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  41b1e0:	mov	w1, w0
  41b1e4:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b1e8:	ldr	w1, [sp, #128]
  41b1ec:	mov	x0, x25
  41b1f0:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  41b1f4:	mov	w1, w0
  41b1f8:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b1fc:	cbz	w27, 41b064 <ferror@plt+0x186c4>
  41b200:	mov	w3, #0x2                   	// #2
  41b204:	mov	w1, w3
  41b208:	mov	x0, x25
  41b20c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  41b210:	mov	w4, #0x0                   	// #0
  41b214:	add	x2, x2, #0xd58
  41b218:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  41b21c:	mov	w1, w0
  41b220:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b224:	b	41b064 <ferror@plt+0x186c4>
  41b228:	mov	w1, #0x0                   	// #0
  41b22c:	mov	x2, x20
  41b230:	mov	x0, x25
  41b234:	mov	w4, #0x0                   	// #0
  41b238:	mov	w3, #0x0                   	// #0
  41b23c:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  41b240:	mov	w1, w0
  41b244:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b248:	b	41b078 <ferror@plt+0x186d8>
  41b24c:	mov	w3, #0x1                   	// #1
  41b250:	mov	w1, w3
  41b254:	mov	x2, x21
  41b258:	mov	x0, x25
  41b25c:	mov	w4, #0x0                   	// #0
  41b260:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  41b264:	mov	w1, w0
  41b268:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b26c:	b	41b08c <ferror@plt+0x186ec>
  41b270:	cbnz	w22, 41b290 <ferror@plt+0x188f0>
  41b274:	cbz	w19, 41b060 <ferror@plt+0x186c0>
  41b278:	ldr	w1, [sp, #140]
  41b27c:	mov	x0, x25
  41b280:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  41b284:	mov	w1, w0
  41b288:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b28c:	b	41b060 <ferror@plt+0x186c0>
  41b290:	ldr	w1, [sp, #132]
  41b294:	mov	x0, x25
  41b298:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  41b29c:	mov	w1, w0
  41b2a0:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b2a4:	cbz	w19, 41b1e8 <ferror@plt+0x18848>
  41b2a8:	ldr	w1, [sp, #140]
  41b2ac:	mov	x0, x25
  41b2b0:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  41b2b4:	mov	w1, w0
  41b2b8:	cbz	w0, 41b1e8 <ferror@plt+0x18848>
  41b2bc:	b	41b174 <ferror@plt+0x187d4>
  41b2c0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41b2c4:	mov	x1, x23
  41b2c8:	mov	x4, x24
  41b2cc:	mov	x2, x25
  41b2d0:	ldr	x5, [x0, #1104]
  41b2d4:	mov	x3, #0x0                   	// #0
  41b2d8:	add	x0, sp, #0x7c
  41b2dc:	bl	402800 <posix_spawnp@plt>
  41b2e0:	mov	w1, w0
  41b2e4:	cbnz	w0, 41b500 <ferror@plt+0x18b60>
  41b2e8:	mov	x0, x25
  41b2ec:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  41b2f0:	cbnz	w19, 41b31c <ferror@plt+0x1897c>
  41b2f4:	cbnz	w22, 41b344 <ferror@plt+0x189a4>
  41b2f8:	ldr	w0, [sp, #124]
  41b2fc:	ldp	x29, x30, [sp]
  41b300:	ldp	x19, x20, [sp, #16]
  41b304:	ldp	x21, x22, [sp, #32]
  41b308:	ldp	x23, x24, [sp, #48]
  41b30c:	ldp	x25, x26, [sp, #64]
  41b310:	ldp	x27, x28, [sp, #80]
  41b314:	add	sp, sp, #0x2b0
  41b318:	ret
  41b31c:	ldr	w20, [sp, #136]
  41b320:	b	41b334 <ferror@plt+0x18994>
  41b324:	bl	402920 <__errno_location@plt>
  41b328:	ldr	w0, [x0]
  41b32c:	cmp	w0, #0x4
  41b330:	b.ne	41b340 <ferror@plt+0x189a0>  // b.any
  41b334:	mov	w0, w20
  41b338:	bl	402660 <close@plt>
  41b33c:	tbnz	w0, #31, 41b324 <ferror@plt+0x18984>
  41b340:	cbz	w22, 41b378 <ferror@plt+0x189d8>
  41b344:	ldr	w20, [sp, #132]
  41b348:	b	41b35c <ferror@plt+0x189bc>
  41b34c:	bl	402920 <__errno_location@plt>
  41b350:	ldr	w0, [x0]
  41b354:	cmp	w0, #0x4
  41b358:	b.ne	41b368 <ferror@plt+0x189c8>  // b.any
  41b35c:	mov	w0, w20
  41b360:	bl	402660 <close@plt>
  41b364:	tbnz	w0, #31, 41b34c <ferror@plt+0x189ac>
  41b368:	ldr	x1, [sp, #704]
  41b36c:	ldr	w0, [sp, #128]
  41b370:	str	w0, [x1]
  41b374:	cbz	w19, 41b2f8 <ferror@plt+0x18958>
  41b378:	ldr	x1, [sp, #704]
  41b37c:	ldr	w0, [sp, #140]
  41b380:	str	w0, [x1, #4]
  41b384:	b	41b2f8 <ferror@plt+0x18958>
  41b388:	ldr	w21, [sp, #128]
  41b38c:	b	41b39c <ferror@plt+0x189fc>
  41b390:	ldr	w0, [x20]
  41b394:	cmp	w0, #0x4
  41b398:	b.ne	41b3b0 <ferror@plt+0x18a10>  // b.any
  41b39c:	mov	w0, w21
  41b3a0:	str	w1, [sp, #96]
  41b3a4:	bl	402660 <close@plt>
  41b3a8:	ldr	w1, [sp, #96]
  41b3ac:	tbnz	w0, #31, 41b390 <ferror@plt+0x189f0>
  41b3b0:	ldr	w21, [sp, #132]
  41b3b4:	b	41b3c4 <ferror@plt+0x18a24>
  41b3b8:	ldr	w0, [x20]
  41b3bc:	cmp	w0, #0x4
  41b3c0:	b.ne	41b0dc <ferror@plt+0x1873c>  // b.any
  41b3c4:	mov	w0, w21
  41b3c8:	str	w1, [sp, #96]
  41b3cc:	bl	402660 <close@plt>
  41b3d0:	ldr	w1, [sp, #96]
  41b3d4:	tbnz	w0, #31, 41b3b8 <ferror@plt+0x18a18>
  41b3d8:	b	41b0dc <ferror@plt+0x1873c>
  41b3dc:	add	x1, sp, #0xe0
  41b3e0:	add	x0, sp, #0x160
  41b3e4:	bl	402700 <posix_spawnattr_setsigmask@plt>
  41b3e8:	mov	w1, w0
  41b3ec:	cbz	w0, 41b414 <ferror@plt+0x18a74>
  41b3f0:	mov	x0, x25
  41b3f4:	str	w1, [sp, #108]
  41b3f8:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  41b3fc:	ldr	w1, [sp, #108]
  41b400:	add	x0, sp, #0x160
  41b404:	str	w1, [sp, #108]
  41b408:	bl	402580 <posix_spawnattr_destroy@plt>
  41b40c:	ldr	w1, [sp, #108]
  41b410:	b	41b0b0 <ferror@plt+0x18710>
  41b414:	mov	w1, #0x8                   	// #8
  41b418:	add	x0, sp, #0x160
  41b41c:	bl	4026c0 <posix_spawnattr_setflags@plt>
  41b420:	mov	w1, w0
  41b424:	cbnz	w0, 41b3f0 <ferror@plt+0x18a50>
  41b428:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41b42c:	mov	x1, x23
  41b430:	mov	x4, x24
  41b434:	add	x3, sp, #0x160
  41b438:	ldr	x5, [x0, #1104]
  41b43c:	mov	x2, x25
  41b440:	add	x0, sp, #0x7c
  41b444:	bl	402800 <posix_spawnp@plt>
  41b448:	mov	w1, w0
  41b44c:	cbnz	w0, 41b3f0 <ferror@plt+0x18a50>
  41b450:	mov	x0, x25
  41b454:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  41b458:	add	x0, sp, #0x160
  41b45c:	bl	402580 <posix_spawnattr_destroy@plt>
  41b460:	ldr	w0, [sp, #124]
  41b464:	bl	41c588 <ferror@plt+0x19be8>
  41b468:	bl	415ca8 <ferror@plt+0x13308>
  41b46c:	b	41b2f0 <ferror@plt+0x18950>
  41b470:	ldr	w19, [sp, #136]
  41b474:	b	41b484 <ferror@plt+0x18ae4>
  41b478:	ldr	w0, [x20]
  41b47c:	cmp	w0, #0x4
  41b480:	b.ne	41b498 <ferror@plt+0x18af8>  // b.any
  41b484:	mov	w0, w19
  41b488:	str	w1, [sp, #96]
  41b48c:	bl	402660 <close@plt>
  41b490:	ldr	w1, [sp, #96]
  41b494:	tbnz	w0, #31, 41b478 <ferror@plt+0x18ad8>
  41b498:	ldr	w19, [sp, #140]
  41b49c:	b	41b4ac <ferror@plt+0x18b0c>
  41b4a0:	ldr	w0, [x20]
  41b4a4:	cmp	w0, #0x4
  41b4a8:	b.ne	41b0e0 <ferror@plt+0x18740>  // b.any
  41b4ac:	mov	w0, w19
  41b4b0:	str	w1, [sp, #96]
  41b4b4:	bl	402660 <close@plt>
  41b4b8:	ldr	w1, [sp, #96]
  41b4bc:	tbnz	w0, #31, 41b4a0 <ferror@plt+0x18b00>
  41b4c0:	b	41b0e0 <ferror@plt+0x18740>
  41b4c4:	ldr	x3, [sp, #96]
  41b4c8:	mov	w0, w28
  41b4cc:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  41b4d0:	add	x2, x2, #0xd68
  41b4d4:	str	w1, [sp, #96]
  41b4d8:	bl	4023e0 <error@plt>
  41b4dc:	ldr	w1, [sp, #96]
  41b4e0:	b	41b0c8 <ferror@plt+0x18728>
  41b4e4:	ldr	w1, [sp, #132]
  41b4e8:	mov	x0, x25
  41b4ec:	mov	w2, #0x1                   	// #1
  41b4f0:	bl	4024d0 <posix_spawn_file_actions_adddup2@plt>
  41b4f4:	mov	w1, w0
  41b4f8:	cbnz	w0, 41b174 <ferror@plt+0x187d4>
  41b4fc:	b	41b160 <ferror@plt+0x187c0>
  41b500:	mov	x0, x25
  41b504:	str	w1, [sp, #108]
  41b508:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  41b50c:	ldr	w1, [sp, #108]
  41b510:	b	41b0bc <ferror@plt+0x1871c>
  41b514:	nop
  41b518:	sub	sp, sp, #0x30
  41b51c:	mov	w7, w3
  41b520:	stp	x29, x30, [sp, #32]
  41b524:	add	x29, sp, #0x20
  41b528:	strb	w4, [sp]
  41b52c:	mov	w4, #0x1                   	// #1
  41b530:	strb	w5, [sp, #8]
  41b534:	mov	w3, w4
  41b538:	str	x6, [sp, #16]
  41b53c:	mov	x5, #0x0                   	// #0
  41b540:	mov	x6, #0x0                   	// #0
  41b544:	bl	41aff0 <ferror@plt+0x18650>
  41b548:	ldp	x29, x30, [sp, #32]
  41b54c:	add	sp, sp, #0x30
  41b550:	ret
  41b554:	nop
  41b558:	sub	sp, sp, #0x50
  41b55c:	add	x8, sp, #0x48
  41b560:	stp	x29, x30, [sp, #32]
  41b564:	add	x29, sp, #0x20
  41b568:	strb	w5, [sp]
  41b56c:	mov	x5, x3
  41b570:	strb	w6, [sp, #8]
  41b574:	mov	w3, #0x0                   	// #0
  41b578:	str	x8, [sp, #16]
  41b57c:	mov	x6, #0x0                   	// #0
  41b580:	str	x19, [sp, #48]
  41b584:	mov	x19, x7
  41b588:	mov	w7, w4
  41b58c:	mov	w4, #0x1                   	// #1
  41b590:	bl	41aff0 <ferror@plt+0x18650>
  41b594:	cmn	w0, #0x1
  41b598:	b.eq	41b5a4 <ferror@plt+0x18c04>  // b.none
  41b59c:	ldr	w1, [sp, #72]
  41b5a0:	str	w1, [x19]
  41b5a4:	ldp	x29, x30, [sp, #32]
  41b5a8:	ldr	x19, [sp, #48]
  41b5ac:	add	sp, sp, #0x50
  41b5b0:	ret
  41b5b4:	nop
  41b5b8:	sub	sp, sp, #0x50
  41b5bc:	add	x8, sp, #0x48
  41b5c0:	stp	x29, x30, [sp, #32]
  41b5c4:	add	x29, sp, #0x20
  41b5c8:	strb	w5, [sp]
  41b5cc:	mov	x5, #0x0                   	// #0
  41b5d0:	strb	w6, [sp, #8]
  41b5d4:	mov	x6, x3
  41b5d8:	str	x8, [sp, #16]
  41b5dc:	mov	w3, #0x1                   	// #1
  41b5e0:	str	x19, [sp, #48]
  41b5e4:	mov	x19, x7
  41b5e8:	mov	w7, w4
  41b5ec:	mov	w4, #0x0                   	// #0
  41b5f0:	bl	41aff0 <ferror@plt+0x18650>
  41b5f4:	cmn	w0, #0x1
  41b5f8:	b.eq	41b604 <ferror@plt+0x18c64>  // b.none
  41b5fc:	ldr	w1, [sp, #76]
  41b600:	str	w1, [x19]
  41b604:	ldp	x29, x30, [sp, #32]
  41b608:	ldr	x19, [sp, #48]
  41b60c:	add	sp, sp, #0x50
  41b610:	ret
  41b614:	nop
  41b618:	stp	x29, x30, [sp, #-16]!
  41b61c:	mov	x29, sp
  41b620:	bl	402890 <mkstemp@plt>
  41b624:	ldp	x29, x30, [sp], #16
  41b628:	b	41b848 <ferror@plt+0x18ea8>
  41b62c:	nop
  41b630:	stp	x29, x30, [sp, #-208]!
  41b634:	mov	x29, sp
  41b638:	stp	x19, x20, [sp, #16]
  41b63c:	mov	x19, x2
  41b640:	stp	x21, x22, [sp, #32]
  41b644:	and	w21, w4, #0xff
  41b648:	stp	x23, x24, [sp, #48]
  41b64c:	mov	x23, x0
  41b650:	stp	x25, x26, [sp, #64]
  41b654:	mov	x25, x1
  41b658:	cbz	x3, 41b7ac <ferror@plt+0x18e0c>
  41b65c:	ldrb	w0, [x3]
  41b660:	mov	x20, x3
  41b664:	cbnz	w0, 41b6f4 <ferror@plt+0x18d54>
  41b668:	adrp	x20, 420000 <_obstack_memory_used@@Base+0x2640>
  41b66c:	add	x20, x20, #0xa50
  41b670:	mov	x26, #0xb                   	// #11
  41b674:	mov	x24, #0x4                   	// #4
  41b678:	cbnz	w21, 41b710 <ferror@plt+0x18d70>
  41b67c:	cbz	x19, 41b7c0 <ferror@plt+0x18e20>
  41b680:	mov	x0, x19
  41b684:	mov	w21, #0x0                   	// #0
  41b688:	bl	402390 <strlen@plt>
  41b68c:	mov	x22, x0
  41b690:	cbnz	x0, 41b810 <ferror@plt+0x18e70>
  41b694:	cmp	x26, x25
  41b698:	b.hi	41b820 <ferror@plt+0x18e80>  // b.pmore
  41b69c:	mov	x1, x19
  41b6a0:	mov	x2, x22
  41b6a4:	mov	x0, x23
  41b6a8:	eor	w21, w21, #0x1
  41b6ac:	bl	402350 <memcpy@plt>
  41b6b0:	and	x21, x21, #0xff
  41b6b4:	adrp	x3, 421000 <_obstack_memory_used@@Base+0x3640>
  41b6b8:	add	x3, x3, #0xa28
  41b6bc:	mov	x5, x20
  41b6c0:	mov	w4, w24
  41b6c4:	add	x0, x23, x22
  41b6c8:	add	x3, x3, x21
  41b6cc:	mov	x2, #0xffffffffffffffff    	// #-1
  41b6d0:	mov	w1, #0x1                   	// #1
  41b6d4:	bl	4023b0 <__sprintf_chk@plt>
  41b6d8:	mov	w0, #0x0                   	// #0
  41b6dc:	ldp	x19, x20, [sp, #16]
  41b6e0:	ldp	x21, x22, [sp, #32]
  41b6e4:	ldp	x23, x24, [sp, #48]
  41b6e8:	ldp	x25, x26, [sp, #64]
  41b6ec:	ldp	x29, x30, [sp], #208
  41b6f0:	ret
  41b6f4:	mov	x24, #0x5                   	// #5
  41b6f8:	mov	x0, x3
  41b6fc:	bl	402390 <strlen@plt>
  41b700:	cmp	x0, x24
  41b704:	csel	x24, x0, x24, ls  // ls = plast
  41b708:	add	x26, x24, #0x7
  41b70c:	cbz	w21, 41b67c <ferror@plt+0x18cdc>
  41b710:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x2640>
  41b714:	add	x22, sp, #0x50
  41b718:	add	x0, x0, #0xca0
  41b71c:	bl	402410 <secure_getenv@plt>
  41b720:	mov	x21, x0
  41b724:	cbz	x0, 41b750 <ferror@plt+0x18db0>
  41b728:	mov	x1, x0
  41b72c:	mov	x2, x22
  41b730:	mov	w0, #0x0                   	// #0
  41b734:	bl	402940 <__xstat@plt>
  41b738:	cbnz	w0, 41b750 <ferror@plt+0x18db0>
  41b73c:	ldr	w0, [sp, #96]
  41b740:	and	w0, w0, #0xf000
  41b744:	cmp	w0, #0x4, lsl #12
  41b748:	b.eq	41b818 <ferror@plt+0x18e78>  // b.none
  41b74c:	nop
  41b750:	cbz	x19, 41b778 <ferror@plt+0x18dd8>
  41b754:	mov	x2, x22
  41b758:	mov	x1, x19
  41b75c:	mov	w0, #0x0                   	// #0
  41b760:	bl	402940 <__xstat@plt>
  41b764:	cbnz	w0, 41b778 <ferror@plt+0x18dd8>
  41b768:	ldr	w0, [sp, #96]
  41b76c:	and	w0, w0, #0xf000
  41b770:	cmp	w0, #0x4, lsl #12
  41b774:	b.eq	41b680 <ferror@plt+0x18ce0>  // b.none
  41b778:	adrp	x19, 421000 <_obstack_memory_used@@Base+0x3640>
  41b77c:	add	x19, x19, #0xa20
  41b780:	mov	x2, x22
  41b784:	mov	x1, x19
  41b788:	mov	w0, #0x0                   	// #0
  41b78c:	bl	402940 <__xstat@plt>
  41b790:	cbz	w0, 41b7e0 <ferror@plt+0x18e40>
  41b794:	bl	402920 <__errno_location@plt>
  41b798:	mov	x1, x0
  41b79c:	mov	w2, #0x2                   	// #2
  41b7a0:	mov	w0, #0xffffffff            	// #-1
  41b7a4:	str	w2, [x1]
  41b7a8:	b	41b6dc <ferror@plt+0x18d3c>
  41b7ac:	adrp	x20, 420000 <_obstack_memory_used@@Base+0x2640>
  41b7b0:	mov	x26, #0xb                   	// #11
  41b7b4:	add	x20, x20, #0xa50
  41b7b8:	mov	x24, #0x4                   	// #4
  41b7bc:	b	41b678 <ferror@plt+0x18cd8>
  41b7c0:	add	x22, sp, #0x50
  41b7c4:	adrp	x19, 421000 <_obstack_memory_used@@Base+0x3640>
  41b7c8:	add	x19, x19, #0xa20
  41b7cc:	mov	x2, x22
  41b7d0:	mov	x1, x19
  41b7d4:	mov	w0, #0x0                   	// #0
  41b7d8:	bl	402940 <__xstat@plt>
  41b7dc:	cbnz	w0, 41b794 <ferror@plt+0x18df4>
  41b7e0:	ldr	w0, [sp, #96]
  41b7e4:	and	w0, w0, #0xf000
  41b7e8:	cmp	w0, #0x4, lsl #12
  41b7ec:	b.ne	41b794 <ferror@plt+0x18df4>  // b.any
  41b7f0:	mov	x0, #0x3                   	// #3
  41b7f4:	mov	x22, #0x4                   	// #4
  41b7f8:	ldrb	w0, [x19, x0]
  41b7fc:	add	x26, x26, x22
  41b800:	cmp	w0, #0x2f
  41b804:	cinc	x26, x26, ne  // ne = any
  41b808:	cset	w21, ne  // ne = any
  41b80c:	b	41b694 <ferror@plt+0x18cf4>
  41b810:	sub	x0, x0, #0x1
  41b814:	b	41b7f8 <ferror@plt+0x18e58>
  41b818:	mov	x19, x21
  41b81c:	b	41b680 <ferror@plt+0x18ce0>
  41b820:	bl	402920 <__errno_location@plt>
  41b824:	mov	x1, x0
  41b828:	mov	w2, #0x16                  	// #22
  41b82c:	mov	w0, #0xffffffff            	// #-1
  41b830:	str	w2, [x1]
  41b834:	b	41b6dc <ferror@plt+0x18d3c>
  41b838:	mov	w2, #0x3                   	// #3
  41b83c:	mov	w1, #0x0                   	// #0
  41b840:	b	41d290 <ferror@plt+0x1a8f0>
  41b844:	nop
  41b848:	stp	x29, x30, [sp, #-48]!
  41b84c:	cmp	w0, #0x2
  41b850:	mov	x29, sp
  41b854:	stp	x19, x20, [sp, #16]
  41b858:	mov	w19, w0
  41b85c:	b.ls	41b870 <ferror@plt+0x18ed0>  // b.plast
  41b860:	mov	w0, w19
  41b864:	ldp	x19, x20, [sp, #16]
  41b868:	ldp	x29, x30, [sp], #48
  41b86c:	ret
  41b870:	str	x21, [sp, #32]
  41b874:	bl	41b838 <ferror@plt+0x18e98>
  41b878:	mov	w21, w0
  41b87c:	bl	402920 <__errno_location@plt>
  41b880:	mov	x20, x0
  41b884:	mov	w0, w19
  41b888:	mov	w19, w21
  41b88c:	ldr	w21, [x20]
  41b890:	bl	402660 <close@plt>
  41b894:	str	w21, [x20]
  41b898:	mov	w0, w19
  41b89c:	ldp	x19, x20, [sp, #16]
  41b8a0:	ldr	x21, [sp, #32]
  41b8a4:	ldp	x29, x30, [sp], #48
  41b8a8:	ret
  41b8ac:	nop
  41b8b0:	stp	x29, x30, [sp, #-48]!
  41b8b4:	mov	x29, sp
  41b8b8:	stp	x19, x20, [sp, #16]
  41b8bc:	mov	x19, x0
  41b8c0:	bl	402440 <pipe@plt>
  41b8c4:	cbnz	w0, 41b930 <ferror@plt+0x18f90>
  41b8c8:	mov	w20, w0
  41b8cc:	ldr	w0, [x19]
  41b8d0:	bl	41b848 <ferror@plt+0x18ea8>
  41b8d4:	str	w0, [x19]
  41b8d8:	tbnz	w0, #31, 41b8fc <ferror@plt+0x18f5c>
  41b8dc:	ldr	w0, [x19, #4]
  41b8e0:	bl	41b848 <ferror@plt+0x18ea8>
  41b8e4:	str	w0, [x19, #4]
  41b8e8:	tbnz	w0, #31, 41b928 <ferror@plt+0x18f88>
  41b8ec:	mov	w0, w20
  41b8f0:	ldp	x19, x20, [sp, #16]
  41b8f4:	ldp	x29, x30, [sp], #48
  41b8f8:	ret
  41b8fc:	add	x19, x19, #0x4
  41b900:	str	x21, [sp, #32]
  41b904:	bl	402920 <__errno_location@plt>
  41b908:	mov	x21, x0
  41b90c:	ldr	w0, [x19]
  41b910:	mov	w20, #0xffffffff            	// #-1
  41b914:	ldr	w19, [x21]
  41b918:	bl	402660 <close@plt>
  41b91c:	str	w19, [x21]
  41b920:	ldr	x21, [sp, #32]
  41b924:	b	41b8ec <ferror@plt+0x18f4c>
  41b928:	str	x21, [sp, #32]
  41b92c:	b	41b904 <ferror@plt+0x18f64>
  41b930:	mov	w20, #0xffffffff            	// #-1
  41b934:	b	41b8ec <ferror@plt+0x18f4c>
  41b938:	stp	x29, x30, [sp, #-112]!
  41b93c:	mov	x29, sp
  41b940:	stp	x19, x20, [sp, #16]
  41b944:	mov	w20, w0
  41b948:	mov	x0, x2
  41b94c:	ldp	x4, x5, [x3]
  41b950:	stp	x4, x5, [sp, #80]
  41b954:	ldp	x2, x3, [x3, #16]
  41b958:	str	x21, [sp, #32]
  41b95c:	mov	w21, w1
  41b960:	add	x1, sp, #0x30
  41b964:	stp	x4, x5, [sp, #48]
  41b968:	stp	x2, x3, [sp, #64]
  41b96c:	stp	x2, x3, [sp, #96]
  41b970:	bl	41d0d0 <ferror@plt+0x1a730>
  41b974:	cbz	x0, 41b9a8 <ferror@plt+0x19008>
  41b978:	mov	x19, x0
  41b97c:	mov	w1, w21
  41b980:	mov	w0, w20
  41b984:	mov	x3, x19
  41b988:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  41b98c:	add	x2, x2, #0x150
  41b990:	bl	4023e0 <error@plt>
  41b994:	mov	x0, x19
  41b998:	ldp	x19, x20, [sp, #16]
  41b99c:	ldr	x21, [sp, #32]
  41b9a0:	ldp	x29, x30, [sp], #112
  41b9a4:	b	4027c0 <free@plt>
  41b9a8:	bl	402920 <__errno_location@plt>
  41b9ac:	mov	x1, x0
  41b9b0:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41b9b4:	add	x2, x2, #0xa38
  41b9b8:	mov	w0, #0x0                   	// #0
  41b9bc:	ldr	w1, [x1]
  41b9c0:	bl	4023e0 <error@plt>
  41b9c4:	bl	4026d0 <abort@plt>
  41b9c8:	stp	x29, x30, [sp, #-96]!
  41b9cc:	mov	x29, sp
  41b9d0:	ldp	x8, x9, [x5]
  41b9d4:	stp	x19, x20, [sp, #16]
  41b9d8:	mov	x20, x2
  41b9dc:	ldp	x6, x7, [x5, #16]
  41b9e0:	stp	x21, x22, [sp, #32]
  41b9e4:	mov	w21, w0
  41b9e8:	mov	w22, w1
  41b9ec:	mov	x0, x4
  41b9f0:	add	x1, sp, #0x40
  41b9f4:	str	x23, [sp, #48]
  41b9f8:	mov	w23, w3
  41b9fc:	stp	x8, x9, [sp, #64]
  41ba00:	stp	x6, x7, [sp, #80]
  41ba04:	bl	41d0d0 <ferror@plt+0x1a730>
  41ba08:	cbz	x0, 41ba7c <ferror@plt+0x190dc>
  41ba0c:	mov	x19, x0
  41ba10:	cbz	x20, 41ba4c <ferror@plt+0x190ac>
  41ba14:	mov	w3, w23
  41ba18:	mov	x2, x20
  41ba1c:	mov	w1, w22
  41ba20:	mov	w0, w21
  41ba24:	mov	x5, x19
  41ba28:	adrp	x4, 420000 <_obstack_memory_used@@Base+0x2640>
  41ba2c:	add	x4, x4, #0x150
  41ba30:	bl	402970 <error_at_line@plt>
  41ba34:	mov	x0, x19
  41ba38:	ldp	x19, x20, [sp, #16]
  41ba3c:	ldp	x21, x22, [sp, #32]
  41ba40:	ldr	x23, [sp, #48]
  41ba44:	ldp	x29, x30, [sp], #96
  41ba48:	b	4027c0 <free@plt>
  41ba4c:	mov	w1, w22
  41ba50:	mov	w0, w21
  41ba54:	mov	x3, x19
  41ba58:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  41ba5c:	add	x2, x2, #0x150
  41ba60:	bl	4023e0 <error@plt>
  41ba64:	mov	x0, x19
  41ba68:	ldp	x19, x20, [sp, #16]
  41ba6c:	ldp	x21, x22, [sp, #32]
  41ba70:	ldr	x23, [sp, #48]
  41ba74:	ldp	x29, x30, [sp], #96
  41ba78:	b	4027c0 <free@plt>
  41ba7c:	bl	402920 <__errno_location@plt>
  41ba80:	mov	x1, x0
  41ba84:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41ba88:	add	x2, x2, #0xa38
  41ba8c:	mov	w0, #0x0                   	// #0
  41ba90:	ldr	w1, [x1]
  41ba94:	bl	4023e0 <error@plt>
  41ba98:	bl	4026d0 <abort@plt>
  41ba9c:	nop
  41baa0:	sub	sp, sp, #0x50
  41baa4:	stp	x29, x30, [sp, #32]
  41baa8:	add	x29, sp, #0x20
  41baac:	stp	x19, x20, [sp, #48]
  41bab0:	mov	x19, x5
  41bab4:	mov	x20, x4
  41bab8:	str	x21, [sp, #64]
  41babc:	mov	x5, x3
  41bac0:	mov	x21, x0
  41bac4:	cbz	x1, 41bc74 <ferror@plt+0x192d4>
  41bac8:	mov	x4, x2
  41bacc:	mov	x3, x1
  41bad0:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bad4:	mov	w1, #0x1                   	// #1
  41bad8:	add	x2, x2, #0xa58
  41badc:	bl	402750 <__fprintf_chk@plt>
  41bae0:	mov	w4, #0x7e0                 	// #2016
  41bae4:	mov	w1, #0x1                   	// #1
  41bae8:	mov	x0, x21
  41baec:	adrp	x3, 421000 <_obstack_memory_used@@Base+0x3640>
  41baf0:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41baf4:	add	x3, x3, #0xa70
  41baf8:	add	x2, x2, #0xd70
  41bafc:	bl	402750 <__fprintf_chk@plt>
  41bb00:	mov	x3, x21
  41bb04:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  41bb08:	mov	x2, #0xca                  	// #202
  41bb0c:	add	x0, x0, #0xa78
  41bb10:	mov	x1, #0x1                   	// #1
  41bb14:	bl	402380 <fwrite_unlocked@plt>
  41bb18:	cmp	x19, #0x5
  41bb1c:	b.eq	41bd1c <ferror@plt+0x1937c>  // b.none
  41bb20:	b.ls	41bb8c <ferror@plt+0x191ec>  // b.plast
  41bb24:	cmp	x19, #0x8
  41bb28:	b.eq	41bd4c <ferror@plt+0x193ac>  // b.none
  41bb2c:	b.ls	41bbc8 <ferror@plt+0x19228>  // b.plast
  41bb30:	cmp	x19, #0x9
  41bb34:	b.ne	41bc28 <ferror@plt+0x19288>  // b.any
  41bb38:	ldp	x3, x4, [x20]
  41bb3c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bb40:	ldr	x5, [x20, #16]
  41bb44:	mov	x0, x21
  41bb48:	add	x2, x2, #0xc60
  41bb4c:	ldr	x8, [x20, #40]
  41bb50:	mov	w1, #0x1                   	// #1
  41bb54:	ldp	x6, x7, [x20, #24]
  41bb58:	str	x8, [sp]
  41bb5c:	ldr	x8, [x20, #48]
  41bb60:	str	x8, [sp, #8]
  41bb64:	ldr	x8, [x20, #56]
  41bb68:	str	x8, [sp, #16]
  41bb6c:	ldr	x8, [x20, #64]
  41bb70:	str	x8, [sp, #24]
  41bb74:	bl	402750 <__fprintf_chk@plt>
  41bb78:	ldp	x29, x30, [sp, #32]
  41bb7c:	ldp	x19, x20, [sp, #48]
  41bb80:	ldr	x21, [sp, #64]
  41bb84:	add	sp, sp, #0x50
  41bb88:	ret
  41bb8c:	cmp	x19, #0x3
  41bb90:	b.eq	41bc90 <ferror@plt+0x192f0>  // b.none
  41bb94:	cmp	x19, #0x4
  41bb98:	b.ne	41bc18 <ferror@plt+0x19278>  // b.any
  41bb9c:	ldp	x3, x4, [x20]
  41bba0:	mov	x0, x21
  41bba4:	ldp	x5, x6, [x20, #16]
  41bba8:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bbac:	ldp	x29, x30, [sp, #32]
  41bbb0:	add	x2, x2, #0xb90
  41bbb4:	ldp	x19, x20, [sp, #48]
  41bbb8:	mov	w1, #0x1                   	// #1
  41bbbc:	ldr	x21, [sp, #64]
  41bbc0:	add	sp, sp, #0x50
  41bbc4:	b	402750 <__fprintf_chk@plt>
  41bbc8:	cmp	x19, #0x6
  41bbcc:	b.eq	41bcbc <ferror@plt+0x1931c>  // b.none
  41bbd0:	cmp	x19, #0x7
  41bbd4:	b.ne	41bc28 <ferror@plt+0x19288>  // b.any
  41bbd8:	ldp	x7, x8, [x20, #32]
  41bbdc:	mov	x0, x21
  41bbe0:	ldp	x3, x4, [x20]
  41bbe4:	mov	w1, #0x1                   	// #1
  41bbe8:	ldp	x5, x6, [x20, #16]
  41bbec:	str	x8, [sp]
  41bbf0:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bbf4:	add	x2, x2, #0xc00
  41bbf8:	ldr	x8, [x20, #48]
  41bbfc:	str	x8, [sp, #8]
  41bc00:	bl	402750 <__fprintf_chk@plt>
  41bc04:	ldp	x29, x30, [sp, #32]
  41bc08:	ldp	x19, x20, [sp, #48]
  41bc0c:	ldr	x21, [sp, #64]
  41bc10:	add	sp, sp, #0x50
  41bc14:	ret
  41bc18:	cmp	x19, #0x2
  41bc1c:	b.eq	41bcf4 <ferror@plt+0x19354>  // b.none
  41bc20:	cmp	x19, #0x3
  41bc24:	b.ne	41bc40 <ferror@plt+0x192a0>  // b.any
  41bc28:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bc2c:	mov	x0, x21
  41bc30:	add	x2, x2, #0xc98
  41bc34:	ldp	x3, x4, [x20]
  41bc38:	ldr	x5, [x20, #16]
  41bc3c:	b	41bb4c <ferror@plt+0x191ac>
  41bc40:	cbz	x19, 41bd94 <ferror@plt+0x193f4>
  41bc44:	cmp	x19, #0x1
  41bc48:	b.ne	41bc28 <ferror@plt+0x19288>  // b.any
  41bc4c:	mov	w1, w19
  41bc50:	mov	x0, x21
  41bc54:	ldr	x3, [x20]
  41bc58:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bc5c:	ldp	x29, x30, [sp, #32]
  41bc60:	add	x2, x2, #0xb48
  41bc64:	ldp	x19, x20, [sp, #48]
  41bc68:	ldr	x21, [sp, #64]
  41bc6c:	add	sp, sp, #0x50
  41bc70:	b	402750 <__fprintf_chk@plt>
  41bc74:	mov	x4, x3
  41bc78:	mov	w1, #0x1                   	// #1
  41bc7c:	mov	x3, x2
  41bc80:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bc84:	add	x2, x2, #0xa68
  41bc88:	bl	402750 <__fprintf_chk@plt>
  41bc8c:	b	41bae0 <ferror@plt+0x19140>
  41bc90:	ldp	x3, x4, [x20]
  41bc94:	mov	x0, x21
  41bc98:	ldr	x5, [x20, #16]
  41bc9c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bca0:	ldp	x29, x30, [sp, #32]
  41bca4:	add	x2, x2, #0xb70
  41bca8:	ldp	x19, x20, [sp, #48]
  41bcac:	mov	w1, #0x1                   	// #1
  41bcb0:	ldr	x21, [sp, #64]
  41bcb4:	add	sp, sp, #0x50
  41bcb8:	b	402750 <__fprintf_chk@plt>
  41bcbc:	ldp	x3, x4, [x20]
  41bcc0:	mov	x0, x21
  41bcc4:	ldp	x5, x6, [x20, #16]
  41bcc8:	mov	w1, #0x1                   	// #1
  41bccc:	ldp	x7, x8, [x20, #32]
  41bcd0:	str	x8, [sp]
  41bcd4:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bcd8:	add	x2, x2, #0xbd8
  41bcdc:	bl	402750 <__fprintf_chk@plt>
  41bce0:	ldp	x29, x30, [sp, #32]
  41bce4:	ldp	x19, x20, [sp, #48]
  41bce8:	ldr	x21, [sp, #64]
  41bcec:	add	sp, sp, #0x50
  41bcf0:	ret
  41bcf4:	ldp	x3, x4, [x20]
  41bcf8:	mov	x0, x21
  41bcfc:	ldp	x29, x30, [sp, #32]
  41bd00:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bd04:	ldp	x19, x20, [sp, #48]
  41bd08:	add	x2, x2, #0xb58
  41bd0c:	ldr	x21, [sp, #64]
  41bd10:	mov	w1, #0x1                   	// #1
  41bd14:	add	sp, sp, #0x50
  41bd18:	b	402750 <__fprintf_chk@plt>
  41bd1c:	ldp	x3, x4, [x20]
  41bd20:	mov	x0, x21
  41bd24:	ldp	x5, x6, [x20, #16]
  41bd28:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bd2c:	ldp	x29, x30, [sp, #32]
  41bd30:	add	x2, x2, #0xbb0
  41bd34:	ldr	x7, [x20, #32]
  41bd38:	mov	w1, #0x1                   	// #1
  41bd3c:	ldp	x19, x20, [sp, #48]
  41bd40:	ldr	x21, [sp, #64]
  41bd44:	add	sp, sp, #0x50
  41bd48:	b	402750 <__fprintf_chk@plt>
  41bd4c:	ldp	x7, x8, [x20, #32]
  41bd50:	mov	x0, x21
  41bd54:	ldp	x3, x4, [x20]
  41bd58:	mov	w1, #0x1                   	// #1
  41bd5c:	ldp	x5, x6, [x20, #16]
  41bd60:	str	x8, [sp]
  41bd64:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bd68:	add	x2, x2, #0xc30
  41bd6c:	ldr	x8, [x20, #48]
  41bd70:	str	x8, [sp, #8]
  41bd74:	ldr	x8, [x20, #56]
  41bd78:	str	x8, [sp, #16]
  41bd7c:	bl	402750 <__fprintf_chk@plt>
  41bd80:	ldp	x29, x30, [sp, #32]
  41bd84:	ldp	x19, x20, [sp, #48]
  41bd88:	ldr	x21, [sp, #64]
  41bd8c:	add	sp, sp, #0x50
  41bd90:	ret
  41bd94:	bl	4026d0 <abort@plt>
  41bd98:	ldr	x5, [x4]
  41bd9c:	cbz	x5, 41bdb8 <ferror@plt+0x19418>
  41bda0:	mov	x5, #0x0                   	// #0
  41bda4:	nop
  41bda8:	add	x5, x5, #0x1
  41bdac:	ldr	x6, [x4, x5, lsl #3]
  41bdb0:	cbnz	x6, 41bda8 <ferror@plt+0x19408>
  41bdb4:	b	41baa0 <ferror@plt+0x19100>
  41bdb8:	mov	x5, #0x0                   	// #0
  41bdbc:	b	41baa0 <ferror@plt+0x19100>
  41bdc0:	sub	sp, sp, #0xa0
  41bdc4:	mov	x5, x3
  41bdc8:	stp	x29, x30, [sp, #32]
  41bdcc:	add	x29, sp, #0x20
  41bdd0:	stp	x19, x20, [sp, #48]
  41bdd4:	mov	x20, x0
  41bdd8:	ldr	w0, [x4, #24]
  41bddc:	ldp	x7, x4, [x4]
  41bde0:	str	x21, [sp, #64]
  41bde4:	add	x6, x7, #0xf
  41bde8:	and	x6, x6, #0xfffffffffffffff8
  41bdec:	tbnz	w0, #31, 41c094 <ferror@plt+0x196f4>
  41bdf0:	ldr	x21, [x7]
  41bdf4:	cbz	x21, 41c0d4 <ferror@plt+0x19734>
  41bdf8:	ldr	x0, [x6]
  41bdfc:	str	x0, [sp, #88]
  41be00:	add	x3, x6, #0xf
  41be04:	and	x3, x3, #0xfffffffffffffff8
  41be08:	cbz	x0, 41c0cc <ferror@plt+0x1972c>
  41be0c:	add	x6, x3, #0xf
  41be10:	and	x6, x6, #0xfffffffffffffff8
  41be14:	ldr	x0, [x3]
  41be18:	str	x0, [sp, #96]
  41be1c:	cbz	x0, 41bf50 <ferror@plt+0x195b0>
  41be20:	add	x7, x6, #0xf
  41be24:	and	x7, x7, #0xfffffffffffffff8
  41be28:	ldr	x0, [x6]
  41be2c:	str	x0, [sp, #104]
  41be30:	cbz	x0, 41c0dc <ferror@plt+0x1973c>
  41be34:	ldr	x3, [x7]
  41be38:	str	x3, [sp, #112]
  41be3c:	add	x0, x7, #0xf
  41be40:	and	x0, x0, #0xfffffffffffffff8
  41be44:	cbz	x3, 41c0e4 <ferror@plt+0x19744>
  41be48:	add	x7, x0, #0xf
  41be4c:	and	x7, x7, #0xfffffffffffffff8
  41be50:	ldr	x0, [x0]
  41be54:	str	x0, [sp, #120]
  41be58:	cbz	x0, 41c0ec <ferror@plt+0x1974c>
  41be5c:	ldr	x3, [x7]
  41be60:	str	x3, [sp, #128]
  41be64:	add	x0, x7, #0xf
  41be68:	and	x0, x0, #0xfffffffffffffff8
  41be6c:	cbz	x3, 41c0f4 <ferror@plt+0x19754>
  41be70:	add	x3, x0, #0xf
  41be74:	and	x3, x3, #0xfffffffffffffff8
  41be78:	ldr	x0, [x0]
  41be7c:	str	x0, [sp, #136]
  41be80:	cbz	x0, 41c0fc <ferror@plt+0x1975c>
  41be84:	add	x7, x3, #0xf
  41be88:	and	x7, x7, #0xfffffffffffffff8
  41be8c:	ldr	x0, [x3]
  41be90:	str	x0, [sp, #144]
  41be94:	cbz	x0, 41c104 <ferror@plt+0x19764>
  41be98:	ldr	x0, [x7]
  41be9c:	cmp	x0, #0x0
  41bea0:	cset	x19, ne  // ne = any
  41bea4:	add	x19, x19, #0x9
  41bea8:	cbz	x1, 41bf58 <ferror@plt+0x195b8>
  41beac:	mov	x4, x2
  41beb0:	mov	x3, x1
  41beb4:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41beb8:	mov	x0, x20
  41bebc:	add	x2, x2, #0xa58
  41bec0:	mov	w1, #0x1                   	// #1
  41bec4:	bl	402750 <__fprintf_chk@plt>
  41bec8:	mov	w4, #0x7e0                 	// #2016
  41becc:	mov	w1, #0x1                   	// #1
  41bed0:	mov	x0, x20
  41bed4:	adrp	x3, 421000 <_obstack_memory_used@@Base+0x3640>
  41bed8:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bedc:	add	x3, x3, #0xa70
  41bee0:	add	x2, x2, #0xd70
  41bee4:	bl	402750 <__fprintf_chk@plt>
  41bee8:	mov	x3, x20
  41beec:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  41bef0:	mov	x2, #0xca                  	// #202
  41bef4:	add	x0, x0, #0xa78
  41bef8:	mov	x1, #0x1                   	// #1
  41befc:	bl	402380 <fwrite_unlocked@plt>
  41bf00:	cmp	x19, #0x5
  41bf04:	b.eq	41c234 <ferror@plt+0x19894>  // b.none
  41bf08:	b.hi	41c010 <ferror@plt+0x19670>  // b.pmore
  41bf0c:	cmp	x19, #0x3
  41bf10:	b.eq	41c2ec <ferror@plt+0x1994c>  // b.none
  41bf14:	b.ls	41bf78 <ferror@plt+0x195d8>  // b.plast
  41bf18:	cmp	x19, #0x4
  41bf1c:	b.ne	41bf88 <ferror@plt+0x195e8>  // b.any
  41bf20:	mov	x0, x20
  41bf24:	mov	x3, x21
  41bf28:	ldp	x29, x30, [sp, #32]
  41bf2c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bf30:	ldp	x19, x20, [sp, #48]
  41bf34:	add	x2, x2, #0xb90
  41bf38:	ldp	x4, x5, [sp, #88]
  41bf3c:	mov	w1, #0x1                   	// #1
  41bf40:	ldr	x21, [sp, #64]
  41bf44:	ldr	x6, [sp, #104]
  41bf48:	add	sp, sp, #0xa0
  41bf4c:	b	402750 <__fprintf_chk@plt>
  41bf50:	mov	x19, #0x2                   	// #2
  41bf54:	cbnz	x1, 41beac <ferror@plt+0x1950c>
  41bf58:	mov	x3, x2
  41bf5c:	mov	x4, x5
  41bf60:	mov	x0, x20
  41bf64:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bf68:	mov	w1, #0x1                   	// #1
  41bf6c:	add	x2, x2, #0xa68
  41bf70:	bl	402750 <__fprintf_chk@plt>
  41bf74:	b	41bec8 <ferror@plt+0x19528>
  41bf78:	cmp	x19, #0x2
  41bf7c:	b.eq	41c318 <ferror@plt+0x19978>  // b.none
  41bf80:	cmp	x19, #0x3
  41bf84:	b.ne	41bfdc <ferror@plt+0x1963c>  // b.any
  41bf88:	ldp	x4, x5, [sp, #88]
  41bf8c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41bf90:	ldp	x6, x7, [sp, #104]
  41bf94:	mov	x3, x21
  41bf98:	mov	x0, x20
  41bf9c:	add	x2, x2, #0xc98
  41bfa0:	ldr	x1, [sp, #120]
  41bfa4:	str	x1, [sp]
  41bfa8:	ldr	x1, [sp, #128]
  41bfac:	str	x1, [sp, #8]
  41bfb0:	ldr	x1, [sp, #136]
  41bfb4:	str	x1, [sp, #16]
  41bfb8:	ldr	x1, [sp, #144]
  41bfbc:	str	x1, [sp, #24]
  41bfc0:	mov	w1, #0x1                   	// #1
  41bfc4:	bl	402750 <__fprintf_chk@plt>
  41bfc8:	ldp	x29, x30, [sp, #32]
  41bfcc:	ldp	x19, x20, [sp, #48]
  41bfd0:	ldr	x21, [sp, #64]
  41bfd4:	add	sp, sp, #0xa0
  41bfd8:	ret
  41bfdc:	cbz	x19, 41c374 <ferror@plt+0x199d4>
  41bfe0:	cmp	x19, #0x1
  41bfe4:	b.ne	41bf88 <ferror@plt+0x195e8>  // b.any
  41bfe8:	mov	w1, w19
  41bfec:	mov	x0, x20
  41bff0:	ldp	x29, x30, [sp, #32]
  41bff4:	mov	x3, x21
  41bff8:	ldp	x19, x20, [sp, #48]
  41bffc:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c000:	ldr	x21, [sp, #64]
  41c004:	add	x2, x2, #0xb48
  41c008:	add	sp, sp, #0xa0
  41c00c:	b	402750 <__fprintf_chk@plt>
  41c010:	cmp	x19, #0x8
  41c014:	b.eq	41c2a0 <ferror@plt+0x19900>  // b.none
  41c018:	b.ls	41c040 <ferror@plt+0x196a0>  // b.plast
  41c01c:	cmp	x19, #0x9
  41c020:	b.ne	41bf88 <ferror@plt+0x195e8>  // b.any
  41c024:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c028:	mov	x3, x21
  41c02c:	mov	x0, x20
  41c030:	add	x2, x2, #0xc60
  41c034:	ldp	x4, x5, [sp, #88]
  41c038:	ldp	x6, x7, [sp, #104]
  41c03c:	b	41bfa0 <ferror@plt+0x19600>
  41c040:	cmp	x19, #0x6
  41c044:	b.eq	41c264 <ferror@plt+0x198c4>  // b.none
  41c048:	cmp	x19, #0x7
  41c04c:	b.ne	41bf88 <ferror@plt+0x195e8>  // b.any
  41c050:	ldp	x4, x5, [sp, #88]
  41c054:	mov	x3, x21
  41c058:	ldp	x6, x7, [sp, #104]
  41c05c:	mov	x0, x20
  41c060:	ldr	x1, [sp, #120]
  41c064:	str	x1, [sp]
  41c068:	ldr	x1, [sp, #128]
  41c06c:	str	x1, [sp, #8]
  41c070:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c074:	mov	w1, #0x1                   	// #1
  41c078:	add	x2, x2, #0xc00
  41c07c:	bl	402750 <__fprintf_chk@plt>
  41c080:	ldp	x29, x30, [sp, #32]
  41c084:	ldp	x19, x20, [sp, #48]
  41c088:	ldr	x21, [sp, #64]
  41c08c:	add	sp, sp, #0xa0
  41c090:	ret
  41c094:	add	w3, w0, #0x8
  41c098:	cmp	w3, #0x0
  41c09c:	b.gt	41bdf0 <ferror@plt+0x19450>
  41c0a0:	ldr	x21, [x4, w0, sxtw]
  41c0a4:	cbz	x21, 41c0d4 <ferror@plt+0x19734>
  41c0a8:	cbz	w3, 41c344 <ferror@plt+0x199a4>
  41c0ac:	add	w8, w0, #0x10
  41c0b0:	cmp	w8, #0x0
  41c0b4:	b.le	41c10c <ferror@plt+0x1976c>
  41c0b8:	mov	x3, x6
  41c0bc:	mov	x6, x7
  41c0c0:	ldr	x0, [x6]
  41c0c4:	str	x0, [sp, #88]
  41c0c8:	cbnz	x0, 41be0c <ferror@plt+0x1946c>
  41c0cc:	mov	x19, #0x1                   	// #1
  41c0d0:	b	41bea8 <ferror@plt+0x19508>
  41c0d4:	mov	x19, #0x0                   	// #0
  41c0d8:	b	41bea8 <ferror@plt+0x19508>
  41c0dc:	mov	x19, #0x3                   	// #3
  41c0e0:	b	41bea8 <ferror@plt+0x19508>
  41c0e4:	mov	x19, #0x4                   	// #4
  41c0e8:	b	41bea8 <ferror@plt+0x19508>
  41c0ec:	mov	x19, #0x5                   	// #5
  41c0f0:	b	41bea8 <ferror@plt+0x19508>
  41c0f4:	mov	x19, #0x6                   	// #6
  41c0f8:	b	41bea8 <ferror@plt+0x19508>
  41c0fc:	mov	x19, #0x7                   	// #7
  41c100:	b	41bea8 <ferror@plt+0x19508>
  41c104:	mov	x19, #0x8                   	// #8
  41c108:	b	41bea8 <ferror@plt+0x19508>
  41c10c:	ldr	x3, [x4, w3, sxtw]
  41c110:	str	x3, [sp, #88]
  41c114:	cbz	x3, 41c0cc <ferror@plt+0x1972c>
  41c118:	cbz	w8, 41c36c <ferror@plt+0x199cc>
  41c11c:	add	w9, w0, #0x18
  41c120:	mov	x3, x7
  41c124:	cmp	w9, #0x0
  41c128:	b.gt	41be14 <ferror@plt+0x19474>
  41c12c:	ldr	x3, [x4, w8, sxtw]
  41c130:	str	x3, [sp, #96]
  41c134:	cbz	x3, 41bf50 <ferror@plt+0x195b0>
  41c138:	cbz	w9, 41c364 <ferror@plt+0x199c4>
  41c13c:	add	w3, w0, #0x20
  41c140:	cmp	w3, #0x0
  41c144:	b.le	41c158 <ferror@plt+0x197b8>
  41c148:	add	x0, x7, #0xf
  41c14c:	mov	x6, x7
  41c150:	and	x7, x0, #0xfffffffffffffff8
  41c154:	b	41be28 <ferror@plt+0x19488>
  41c158:	ldr	x6, [x4, w9, sxtw]
  41c15c:	str	x6, [sp, #104]
  41c160:	cbz	x6, 41c0dc <ferror@plt+0x1973c>
  41c164:	cbz	w3, 41be34 <ferror@plt+0x19494>
  41c168:	add	w6, w0, #0x28
  41c16c:	cmp	w6, #0x0
  41c170:	b.gt	41be34 <ferror@plt+0x19494>
  41c174:	ldr	x3, [x4, w3, sxtw]
  41c178:	str	x3, [sp, #112]
  41c17c:	cbz	x3, 41c0e4 <ferror@plt+0x19744>
  41c180:	cbz	w6, 41c35c <ferror@plt+0x199bc>
  41c184:	add	w3, w0, #0x30
  41c188:	cmp	w3, #0x0
  41c18c:	b.le	41c1a0 <ferror@plt+0x19800>
  41c190:	add	x3, x7, #0xf
  41c194:	mov	x0, x7
  41c198:	and	x7, x3, #0xfffffffffffffff8
  41c19c:	b	41be50 <ferror@plt+0x194b0>
  41c1a0:	ldr	x6, [x4, w6, sxtw]
  41c1a4:	str	x6, [sp, #120]
  41c1a8:	cbz	x6, 41c0ec <ferror@plt+0x1974c>
  41c1ac:	cbz	w3, 41be5c <ferror@plt+0x194bc>
  41c1b0:	add	w6, w0, #0x38
  41c1b4:	cmp	w6, #0x0
  41c1b8:	b.gt	41be5c <ferror@plt+0x194bc>
  41c1bc:	ldr	x3, [x4, w3, sxtw]
  41c1c0:	str	x3, [sp, #128]
  41c1c4:	cbz	x3, 41c0f4 <ferror@plt+0x19754>
  41c1c8:	cbz	w6, 41c354 <ferror@plt+0x199b4>
  41c1cc:	add	w8, w0, #0x40
  41c1d0:	cmp	w8, #0x0
  41c1d4:	b.le	41c1e8 <ferror@plt+0x19848>
  41c1d8:	add	x3, x7, #0xf
  41c1dc:	mov	x0, x7
  41c1e0:	and	x3, x3, #0xfffffffffffffff8
  41c1e4:	b	41be78 <ferror@plt+0x194d8>
  41c1e8:	ldr	x3, [x4, w6, sxtw]
  41c1ec:	str	x3, [sp, #136]
  41c1f0:	cbz	x3, 41c0fc <ferror@plt+0x1975c>
  41c1f4:	cbz	w8, 41c34c <ferror@plt+0x199ac>
  41c1f8:	add	w3, w0, #0x48
  41c1fc:	cmp	w3, #0x0
  41c200:	b.le	41c214 <ferror@plt+0x19874>
  41c204:	add	x0, x7, #0xf
  41c208:	mov	x3, x7
  41c20c:	and	x7, x0, #0xfffffffffffffff8
  41c210:	b	41be8c <ferror@plt+0x194ec>
  41c214:	ldr	x6, [x4, w8, sxtw]
  41c218:	str	x6, [sp, #144]
  41c21c:	cbz	x6, 41c104 <ferror@plt+0x19764>
  41c220:	cbz	w3, 41be98 <ferror@plt+0x194f8>
  41c224:	add	x4, x4, w3, sxtw
  41c228:	cmn	w0, #0x4f
  41c22c:	csel	x7, x4, x7, lt  // lt = tstop
  41c230:	b	41be98 <ferror@plt+0x194f8>
  41c234:	mov	x0, x20
  41c238:	mov	x3, x21
  41c23c:	ldp	x29, x30, [sp, #32]
  41c240:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c244:	ldp	x19, x20, [sp, #48]
  41c248:	add	x2, x2, #0xbb0
  41c24c:	ldp	x4, x5, [sp, #88]
  41c250:	mov	w1, #0x1                   	// #1
  41c254:	ldp	x6, x7, [sp, #104]
  41c258:	ldr	x21, [sp, #64]
  41c25c:	add	sp, sp, #0xa0
  41c260:	b	402750 <__fprintf_chk@plt>
  41c264:	ldp	x4, x5, [sp, #88]
  41c268:	mov	x3, x21
  41c26c:	ldp	x6, x7, [sp, #104]
  41c270:	mov	x0, x20
  41c274:	ldr	x1, [sp, #120]
  41c278:	str	x1, [sp]
  41c27c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c280:	mov	w1, #0x1                   	// #1
  41c284:	add	x2, x2, #0xbd8
  41c288:	bl	402750 <__fprintf_chk@plt>
  41c28c:	ldp	x29, x30, [sp, #32]
  41c290:	ldp	x19, x20, [sp, #48]
  41c294:	ldr	x21, [sp, #64]
  41c298:	add	sp, sp, #0xa0
  41c29c:	ret
  41c2a0:	ldp	x4, x5, [sp, #88]
  41c2a4:	mov	x3, x21
  41c2a8:	ldp	x6, x7, [sp, #104]
  41c2ac:	mov	x0, x20
  41c2b0:	ldr	x1, [sp, #120]
  41c2b4:	str	x1, [sp]
  41c2b8:	ldr	x1, [sp, #128]
  41c2bc:	str	x1, [sp, #8]
  41c2c0:	ldr	x1, [sp, #136]
  41c2c4:	str	x1, [sp, #16]
  41c2c8:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c2cc:	mov	w1, #0x1                   	// #1
  41c2d0:	add	x2, x2, #0xc30
  41c2d4:	bl	402750 <__fprintf_chk@plt>
  41c2d8:	ldp	x29, x30, [sp, #32]
  41c2dc:	ldp	x19, x20, [sp, #48]
  41c2e0:	ldr	x21, [sp, #64]
  41c2e4:	add	sp, sp, #0xa0
  41c2e8:	ret
  41c2ec:	mov	x0, x20
  41c2f0:	mov	x3, x21
  41c2f4:	ldp	x29, x30, [sp, #32]
  41c2f8:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c2fc:	ldp	x19, x20, [sp, #48]
  41c300:	add	x2, x2, #0xb70
  41c304:	ldp	x4, x5, [sp, #88]
  41c308:	mov	w1, #0x1                   	// #1
  41c30c:	ldr	x21, [sp, #64]
  41c310:	add	sp, sp, #0xa0
  41c314:	b	402750 <__fprintf_chk@plt>
  41c318:	mov	x0, x20
  41c31c:	mov	x3, x21
  41c320:	ldp	x29, x30, [sp, #32]
  41c324:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c328:	ldp	x19, x20, [sp, #48]
  41c32c:	add	x2, x2, #0xb58
  41c330:	ldr	x21, [sp, #64]
  41c334:	mov	w1, #0x1                   	// #1
  41c338:	ldr	x4, [sp, #88]
  41c33c:	add	sp, sp, #0xa0
  41c340:	b	402750 <__fprintf_chk@plt>
  41c344:	mov	x6, x7
  41c348:	b	41bdf8 <ferror@plt+0x19458>
  41c34c:	mov	x3, x7
  41c350:	b	41be84 <ferror@plt+0x194e4>
  41c354:	mov	x0, x7
  41c358:	b	41be70 <ferror@plt+0x194d0>
  41c35c:	mov	x0, x7
  41c360:	b	41be48 <ferror@plt+0x194a8>
  41c364:	mov	x6, x7
  41c368:	b	41be20 <ferror@plt+0x19480>
  41c36c:	mov	x3, x7
  41c370:	b	41be0c <ferror@plt+0x1946c>
  41c374:	bl	4026d0 <abort@plt>
  41c378:	stp	x29, x30, [sp, #-288]!
  41c37c:	mov	w10, #0xffffffe0            	// #-32
  41c380:	mov	w9, #0xffffff80            	// #-128
  41c384:	mov	x29, sp
  41c388:	add	x11, sp, #0x100
  41c38c:	add	x12, sp, #0x120
  41c390:	stp	x12, x12, [sp, #16]
  41c394:	str	x11, [sp, #32]
  41c398:	stp	w10, w9, [sp, #40]
  41c39c:	str	x4, [sp, #48]
  41c3a0:	str	q0, [sp, #128]
  41c3a4:	str	q1, [sp, #144]
  41c3a8:	str	q2, [sp, #160]
  41c3ac:	str	q3, [sp, #176]
  41c3b0:	str	q4, [sp, #192]
  41c3b4:	str	q5, [sp, #208]
  41c3b8:	str	q6, [sp, #224]
  41c3bc:	str	q7, [sp, #240]
  41c3c0:	stp	x4, x5, [sp, #256]
  41c3c4:	stp	x6, x7, [sp, #272]
  41c3c8:	cbz	x4, 41c4b8 <ferror@plt+0x19b18>
  41c3cc:	str	x5, [sp, #56]
  41c3d0:	cbz	x5, 41c4b0 <ferror@plt+0x19b10>
  41c3d4:	str	x6, [sp, #64]
  41c3d8:	mov	x5, #0x2                   	// #2
  41c3dc:	cbz	x6, 41c450 <ferror@plt+0x19ab0>
  41c3e0:	str	x7, [sp, #72]
  41c3e4:	mov	x5, #0x3                   	// #3
  41c3e8:	cbz	x7, 41c450 <ferror@plt+0x19ab0>
  41c3ec:	ldr	x4, [sp, #288]
  41c3f0:	str	x4, [sp, #80]
  41c3f4:	mov	x5, #0x4                   	// #4
  41c3f8:	cbz	x4, 41c450 <ferror@plt+0x19ab0>
  41c3fc:	ldr	x5, [sp, #296]
  41c400:	str	x5, [sp, #88]
  41c404:	add	x4, sp, #0x130
  41c408:	cbz	x5, 41c460 <ferror@plt+0x19ac0>
  41c40c:	ldr	x5, [x4]
  41c410:	str	x5, [sp, #96]
  41c414:	add	x4, x4, #0x8
  41c418:	cbz	x5, 41c474 <ferror@plt+0x19ad4>
  41c41c:	ldr	x5, [x4]
  41c420:	str	x5, [sp, #104]
  41c424:	add	x4, x4, #0x8
  41c428:	cbz	x5, 41c488 <ferror@plt+0x19ae8>
  41c42c:	ldr	x5, [x4]
  41c430:	str	x5, [sp, #112]
  41c434:	add	x4, x4, #0x8
  41c438:	cbz	x5, 41c49c <ferror@plt+0x19afc>
  41c43c:	ldr	x4, [x4]
  41c440:	str	x4, [sp, #120]
  41c444:	cmp	x4, #0x0
  41c448:	cset	x5, ne  // ne = any
  41c44c:	add	x5, x5, #0x9
  41c450:	add	x4, sp, #0x30
  41c454:	bl	41baa0 <ferror@plt+0x19100>
  41c458:	ldp	x29, x30, [sp], #288
  41c45c:	ret
  41c460:	add	x4, sp, #0x30
  41c464:	mov	x5, #0x5                   	// #5
  41c468:	bl	41baa0 <ferror@plt+0x19100>
  41c46c:	ldp	x29, x30, [sp], #288
  41c470:	ret
  41c474:	add	x4, sp, #0x30
  41c478:	mov	x5, #0x6                   	// #6
  41c47c:	bl	41baa0 <ferror@plt+0x19100>
  41c480:	ldp	x29, x30, [sp], #288
  41c484:	ret
  41c488:	add	x4, sp, #0x30
  41c48c:	mov	x5, #0x7                   	// #7
  41c490:	bl	41baa0 <ferror@plt+0x19100>
  41c494:	ldp	x29, x30, [sp], #288
  41c498:	ret
  41c49c:	add	x4, sp, #0x30
  41c4a0:	mov	x5, #0x8                   	// #8
  41c4a4:	bl	41baa0 <ferror@plt+0x19100>
  41c4a8:	ldp	x29, x30, [sp], #288
  41c4ac:	ret
  41c4b0:	mov	x5, #0x1                   	// #1
  41c4b4:	b	41c450 <ferror@plt+0x19ab0>
  41c4b8:	mov	x5, #0x0                   	// #0
  41c4bc:	b	41c450 <ferror@plt+0x19ab0>
  41c4c0:	stp	x29, x30, [sp, #-16]!
  41c4c4:	adrp	x2, 41d000 <ferror@plt+0x1a660>
  41c4c8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  41c4cc:	mov	x29, sp
  41c4d0:	add	x2, x2, #0xf88
  41c4d4:	add	x1, x1, #0xcd8
  41c4d8:	mov	w0, #0x1                   	// #1
  41c4dc:	bl	4025b0 <__printf_chk@plt>
  41c4e0:	mov	w0, #0x1                   	// #1
  41c4e4:	adrp	x3, 421000 <_obstack_memory_used@@Base+0x3640>
  41c4e8:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x640>
  41c4ec:	add	x3, x3, #0xcf0
  41c4f0:	add	x2, x2, #0xb8
  41c4f4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  41c4f8:	add	x1, x1, #0xd10
  41c4fc:	bl	4025b0 <__printf_chk@plt>
  41c500:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  41c504:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  41c508:	ldp	x29, x30, [sp], #16
  41c50c:	add	x0, x0, #0xd28
  41c510:	ldr	x3, [x1, #1088]
  41c514:	mov	x2, #0x3f                  	// #63
  41c518:	mov	x1, #0x1                   	// #1
  41c51c:	b	402380 <fwrite_unlocked@plt>
  41c520:	stp	x29, x30, [sp, #-32]!
  41c524:	mov	x29, sp
  41c528:	stp	x19, x20, [sp, #16]
  41c52c:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41c530:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  41c534:	add	x19, x19, #0xca0
  41c538:	b	41c550 <ferror@plt+0x19bb0>
  41c53c:	str	w0, [x19]
  41c540:	lsl	x0, x0, #3
  41c544:	ldr	x1, [x20, #1024]
  41c548:	ldr	w1, [x1, x0]
  41c54c:	cbnz	w1, 41c56c <ferror@plt+0x19bcc>
  41c550:	ldr	w1, [x19]
  41c554:	sxtw	x0, w1
  41c558:	sub	x0, x0, #0x1
  41c55c:	cbnz	w1, 41c53c <ferror@plt+0x19b9c>
  41c560:	ldp	x19, x20, [sp, #16]
  41c564:	ldp	x29, x30, [sp], #32
  41c568:	ret
  41c56c:	ldr	x2, [x20, #1024]
  41c570:	mov	w1, #0x1                   	// #1
  41c574:	add	x0, x2, x0
  41c578:	ldr	w0, [x0, #4]
  41c57c:	bl	402490 <kill@plt>
  41c580:	b	41c550 <ferror@plt+0x19bb0>
  41c584:	nop
  41c588:	stp	x29, x30, [sp, #-96]!
  41c58c:	mov	x29, sp
  41c590:	stp	x19, x20, [sp, #16]
  41c594:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41c598:	mov	w20, w0
  41c59c:	stp	x21, x22, [sp, #32]
  41c5a0:	add	x22, x19, #0xca0
  41c5a4:	ldrb	w0, [x22, #4]
  41c5a8:	cbz	w0, 41c658 <ferror@plt+0x19cb8>
  41c5ac:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x1a640>
  41c5b0:	ldr	x1, [x21, #1024]
  41c5b4:	ldr	w3, [x19, #3232]
  41c5b8:	add	x3, x1, w3, sxtw #3
  41c5bc:	cmp	x1, x3
  41c5c0:	b.cc	41c5d4 <ferror@plt+0x19c34>  // b.lo, b.ul, b.last
  41c5c4:	b	41c5f8 <ferror@plt+0x19c58>
  41c5c8:	add	x1, x1, #0x8
  41c5cc:	cmp	x3, x1
  41c5d0:	b.ls	41c5f8 <ferror@plt+0x19c58>  // b.plast
  41c5d4:	ldr	w2, [x1]
  41c5d8:	cbnz	w2, 41c5c8 <ferror@plt+0x19c28>
  41c5dc:	str	w20, [x1, #4]
  41c5e0:	mov	w0, #0x1                   	// #1
  41c5e4:	str	w0, [x1]
  41c5e8:	ldp	x19, x20, [sp, #16]
  41c5ec:	ldp	x21, x22, [sp, #32]
  41c5f0:	ldp	x29, x30, [sp], #96
  41c5f4:	ret
  41c5f8:	stp	x23, x24, [sp, #48]
  41c5fc:	add	x23, x21, #0x400
  41c600:	ldr	w0, [x19, #3232]
  41c604:	ldr	x1, [x23, #8]
  41c608:	sxtw	x24, w0
  41c60c:	cmp	x1, w0, sxtw
  41c610:	b.eq	41c67c <ferror@plt+0x19cdc>  // b.none
  41c614:	ldr	x1, [x21, #1024]
  41c618:	mov	w2, #0x1                   	// #1
  41c61c:	ldr	w0, [x19, #3232]
  41c620:	ldp	x23, x24, [sp, #48]
  41c624:	add	x0, x1, w0, sxtw #3
  41c628:	str	w20, [x0, #4]
  41c62c:	ldr	x1, [x21, #1024]
  41c630:	ldr	w0, [x19, #3232]
  41c634:	ldp	x21, x22, [sp, #32]
  41c638:	sbfiz	x0, x0, #3, #32
  41c63c:	str	w2, [x1, x0]
  41c640:	ldr	w0, [x19, #3232]
  41c644:	add	w0, w0, w2
  41c648:	str	w0, [x19, #3232]
  41c64c:	ldp	x19, x20, [sp, #16]
  41c650:	ldp	x29, x30, [sp], #96
  41c654:	ret
  41c658:	adrp	x21, 41c000 <ferror@plt+0x19660>
  41c65c:	add	x21, x21, #0x520
  41c660:	mov	x0, x21
  41c664:	bl	41df08 <_obstack_memory_used@@Base+0x548>
  41c668:	mov	x0, x21
  41c66c:	bl	4159a8 <ferror@plt+0x13008>
  41c670:	mov	w0, #0x1                   	// #1
  41c674:	strb	w0, [x22, #4]
  41c678:	b	41c5ac <ferror@plt+0x19c0c>
  41c67c:	lsl	x0, x24, #4
  41c680:	stp	x25, x26, [sp, #64]
  41c684:	ldr	x26, [x21, #1024]
  41c688:	str	x27, [sp, #80]
  41c68c:	bl	402530 <malloc@plt>
  41c690:	lsl	x27, x24, #1
  41c694:	mov	x25, x0
  41c698:	cbz	x0, 41c6dc <ferror@plt+0x19d3c>
  41c69c:	lsl	x2, x24, #3
  41c6a0:	mov	x1, x26
  41c6a4:	bl	402350 <memcpy@plt>
  41c6a8:	str	x25, [x21, #1024]
  41c6ac:	str	x27, [x23, #8]
  41c6b0:	add	x22, x22, #0x10
  41c6b4:	cmp	x26, x22
  41c6b8:	b.eq	41c6d0 <ferror@plt+0x19d30>  // b.none
  41c6bc:	mov	x0, x26
  41c6c0:	bl	4027c0 <free@plt>
  41c6c4:	ldp	x25, x26, [sp, #64]
  41c6c8:	ldr	x27, [sp, #80]
  41c6cc:	b	41c614 <ferror@plt+0x19c74>
  41c6d0:	ldp	x25, x26, [sp, #64]
  41c6d4:	ldr	x27, [sp, #80]
  41c6d8:	b	41c614 <ferror@plt+0x19c74>
  41c6dc:	mov	w1, #0x1                   	// #1
  41c6e0:	mov	w0, w20
  41c6e4:	bl	402490 <kill@plt>
  41c6e8:	bl	41cbf8 <ferror@plt+0x1a258>
  41c6ec:	nop
  41c6f0:	stp	x29, x30, [sp, #-96]!
  41c6f4:	mov	x29, sp
  41c6f8:	stp	x19, x20, [sp, #16]
  41c6fc:	mov	w19, w0
  41c700:	and	w20, w3, #0xff
  41c704:	stp	x21, x22, [sp, #32]
  41c708:	mov	x21, x1
  41c70c:	and	w22, w5, #0xff
  41c710:	stp	x23, x24, [sp, #48]
  41c714:	mov	x23, x6
  41c718:	and	w24, w4, #0xff
  41c71c:	str	x25, [sp, #64]
  41c720:	and	w25, w2, #0xff
  41c724:	cbz	x6, 41c72c <ferror@plt+0x19d8c>
  41c728:	str	wzr, [x6]
  41c72c:	str	wzr, [sp, #92]
  41c730:	add	x1, sp, #0x5c
  41c734:	mov	w0, w19
  41c738:	mov	w2, #0x0                   	// #0
  41c73c:	bl	402950 <waitpid@plt>
  41c740:	cmp	w19, w0
  41c744:	b.eq	41c784 <ferror@plt+0x19de4>  // b.none
  41c748:	bl	402920 <__errno_location@plt>
  41c74c:	ldr	w1, [x0]
  41c750:	cmp	w1, #0x4
  41c754:	b.eq	41c730 <ferror@plt+0x19d90>  // b.none
  41c758:	eor	w20, w20, #0x1
  41c75c:	orr	w20, w22, w20
  41c760:	cbnz	w20, 41c840 <ferror@plt+0x19ea0>
  41c764:	mov	w19, #0x7f                  	// #127
  41c768:	mov	w0, w19
  41c76c:	ldp	x19, x20, [sp, #16]
  41c770:	ldp	x21, x22, [sp, #32]
  41c774:	ldp	x23, x24, [sp, #48]
  41c778:	ldr	x25, [sp, #64]
  41c77c:	ldp	x29, x30, [sp], #96
  41c780:	ret
  41c784:	ldr	w0, [sp, #92]
  41c788:	and	w1, w0, #0xff
  41c78c:	cmp	w1, #0x7f
  41c790:	b.eq	41c730 <ferror@plt+0x19d90>  // b.none
  41c794:	cbz	w24, 41c7dc <ferror@plt+0x19e3c>
  41c798:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x1a640>
  41c79c:	adrp	x2, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41c7a0:	ldr	x1, [x1, #1024]
  41c7a4:	ldr	w3, [x2, #3232]
  41c7a8:	add	x3, x1, w3, sxtw #3
  41c7ac:	cmp	x1, x3
  41c7b0:	b.cs	41c7dc <ferror@plt+0x19e3c>  // b.hs, b.nlast
  41c7b4:	nop
  41c7b8:	ldr	w2, [x1]
  41c7bc:	cbz	w2, 41c7d0 <ferror@plt+0x19e30>
  41c7c0:	ldr	w2, [x1, #4]
  41c7c4:	cmp	w19, w2
  41c7c8:	b.ne	41c7d0 <ferror@plt+0x19e30>  // b.any
  41c7cc:	str	wzr, [x1]
  41c7d0:	add	x1, x1, #0x8
  41c7d4:	cmp	x3, x1
  41c7d8:	b.hi	41c7b8 <ferror@plt+0x19e18>  // b.pmore
  41c7dc:	and	w4, w0, #0x7f
  41c7e0:	add	w1, w4, #0x1
  41c7e4:	sbfx	x1, x1, #1, #7
  41c7e8:	cmp	w1, #0x0
  41c7ec:	b.le	41c874 <ferror@plt+0x19ed4>
  41c7f0:	cbz	x23, 41c7f8 <ferror@plt+0x19e58>
  41c7f4:	str	w4, [x23]
  41c7f8:	cmp	w25, #0x0
  41c7fc:	mov	w19, #0x0                   	// #0
  41c800:	ccmp	w4, #0xd, #0x0, ne  // ne = any
  41c804:	b.eq	41c768 <ferror@plt+0x19dc8>  // b.none
  41c808:	cbnz	w22, 41c820 <ferror@plt+0x19e80>
  41c80c:	cmp	x23, #0x0
  41c810:	eor	w20, w20, #0x1
  41c814:	cset	w0, eq  // eq = none
  41c818:	tst	w0, w20
  41c81c:	b.eq	41c764 <ferror@plt+0x19dc4>  // b.none
  41c820:	mov	x3, x21
  41c824:	mov	w0, w22
  41c828:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c82c:	mov	w1, #0x0                   	// #0
  41c830:	add	x2, x2, #0xdb0
  41c834:	mov	w19, #0x7f                  	// #127
  41c838:	bl	4023e0 <error@plt>
  41c83c:	b	41c768 <ferror@plt+0x19dc8>
  41c840:	mov	x3, x21
  41c844:	mov	w0, w22
  41c848:	mov	w19, #0x7f                  	// #127
  41c84c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41c850:	add	x2, x2, #0xda0
  41c854:	bl	4023e0 <error@plt>
  41c858:	mov	w0, w19
  41c85c:	ldp	x19, x20, [sp, #16]
  41c860:	ldp	x21, x22, [sp, #32]
  41c864:	ldp	x23, x24, [sp, #48]
  41c868:	ldr	x25, [sp, #64]
  41c86c:	ldp	x29, x30, [sp], #96
  41c870:	ret
  41c874:	cbnz	w4, 41c8ac <ferror@plt+0x19f0c>
  41c878:	ubfx	x19, x0, #8, #8
  41c87c:	cmp	w19, #0x7f
  41c880:	b.ne	41c768 <ferror@plt+0x19dc8>  // b.any
  41c884:	eor	w0, w20, #0x1
  41c888:	orr	w0, w22, w0
  41c88c:	cbz	w0, 41c764 <ferror@plt+0x19dc4>
  41c890:	mov	x3, x21
  41c894:	mov	w0, w22
  41c898:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  41c89c:	mov	w1, #0x0                   	// #0
  41c8a0:	add	x2, x2, #0xd68
  41c8a4:	bl	4023e0 <error@plt>
  41c8a8:	b	41c768 <ferror@plt+0x19dc8>
  41c8ac:	bl	4026d0 <abort@plt>
  41c8b0:	stp	x29, x30, [sp, #-32]!
  41c8b4:	umulh	x2, x0, x1
  41c8b8:	mov	x29, sp
  41c8bc:	str	x19, [sp, #16]
  41c8c0:	mul	x19, x0, x1
  41c8c4:	cmp	x2, #0x0
  41c8c8:	cset	x0, ne  // ne = any
  41c8cc:	tbnz	x19, #63, 41c8f4 <ferror@plt+0x19f54>
  41c8d0:	cbnz	x0, 41c8f4 <ferror@plt+0x19f54>
  41c8d4:	mov	x0, x19
  41c8d8:	bl	402530 <malloc@plt>
  41c8dc:	cmp	x0, #0x0
  41c8e0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41c8e4:	b.ne	41c8f4 <ferror@plt+0x19f54>  // b.any
  41c8e8:	ldr	x19, [sp, #16]
  41c8ec:	ldp	x29, x30, [sp], #32
  41c8f0:	ret
  41c8f4:	bl	41cbf8 <ferror@plt+0x1a258>
  41c8f8:	stp	x29, x30, [sp, #-32]!
  41c8fc:	umulh	x4, x1, x2
  41c900:	mov	x29, sp
  41c904:	str	x19, [sp, #16]
  41c908:	mul	x19, x1, x2
  41c90c:	cmp	x4, #0x0
  41c910:	cset	x1, ne  // ne = any
  41c914:	tbnz	x19, #63, 41c95c <ferror@plt+0x19fbc>
  41c918:	cbnz	x1, 41c95c <ferror@plt+0x19fbc>
  41c91c:	cmp	x19, #0x0
  41c920:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41c924:	b.ne	41c948 <ferror@plt+0x19fa8>  // b.any
  41c928:	mov	x1, x19
  41c92c:	bl	402620 <realloc@plt>
  41c930:	cmp	x0, #0x0
  41c934:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41c938:	b.ne	41c95c <ferror@plt+0x19fbc>  // b.any
  41c93c:	ldr	x19, [sp, #16]
  41c940:	ldp	x29, x30, [sp], #32
  41c944:	ret
  41c948:	bl	4027c0 <free@plt>
  41c94c:	mov	x0, #0x0                   	// #0
  41c950:	ldr	x19, [sp, #16]
  41c954:	ldp	x29, x30, [sp], #32
  41c958:	ret
  41c95c:	bl	41cbf8 <ferror@plt+0x1a258>
  41c960:	stp	x29, x30, [sp, #-32]!
  41c964:	mov	x4, x0
  41c968:	mov	x29, sp
  41c96c:	ldr	x3, [x1]
  41c970:	str	x19, [sp, #16]
  41c974:	cbz	x0, 41c9c4 <ferror@plt+0x1a024>
  41c978:	mov	x5, #0x5555555555555555    	// #6148914691236517205
  41c97c:	movk	x5, #0x5554
  41c980:	udiv	x5, x5, x2
  41c984:	cmp	x5, x3
  41c988:	b.ls	41c9f8 <ferror@plt+0x1a058>  // b.plast
  41c98c:	add	x19, x3, #0x1
  41c990:	add	x19, x19, x3, lsr #1
  41c994:	str	x19, [x1]
  41c998:	mul	x19, x2, x19
  41c99c:	cbz	x19, 41c9e4 <ferror@plt+0x1a044>
  41c9a0:	mov	x0, x4
  41c9a4:	mov	x1, x19
  41c9a8:	bl	402620 <realloc@plt>
  41c9ac:	cmp	x0, #0x0
  41c9b0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41c9b4:	b.ne	41c9f8 <ferror@plt+0x1a058>  // b.any
  41c9b8:	ldr	x19, [sp, #16]
  41c9bc:	ldp	x29, x30, [sp], #32
  41c9c0:	ret
  41c9c4:	cbnz	x3, 41c9d8 <ferror@plt+0x1a038>
  41c9c8:	mov	x3, #0x80                  	// #128
  41c9cc:	cmp	x2, x3
  41c9d0:	udiv	x3, x3, x2
  41c9d4:	cinc	x3, x3, hi  // hi = pmore
  41c9d8:	mul	x19, x2, x3
  41c9dc:	str	x3, [x1]
  41c9e0:	b	41c9a0 <ferror@plt+0x1a000>
  41c9e4:	bl	4027c0 <free@plt>
  41c9e8:	mov	x0, #0x0                   	// #0
  41c9ec:	ldr	x19, [sp, #16]
  41c9f0:	ldp	x29, x30, [sp], #32
  41c9f4:	ret
  41c9f8:	bl	41cbf8 <ferror@plt+0x1a258>
  41c9fc:	nop
  41ca00:	stp	x29, x30, [sp, #-32]!
  41ca04:	mov	x29, sp
  41ca08:	str	x19, [sp, #16]
  41ca0c:	mov	x19, x0
  41ca10:	bl	402530 <malloc@plt>
  41ca14:	cmp	x0, #0x0
  41ca18:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41ca1c:	b.ne	41ca2c <ferror@plt+0x1a08c>  // b.any
  41ca20:	ldr	x19, [sp, #16]
  41ca24:	ldp	x29, x30, [sp], #32
  41ca28:	ret
  41ca2c:	bl	41cbf8 <ferror@plt+0x1a258>
  41ca30:	stp	x29, x30, [sp, #-32]!
  41ca34:	mov	x29, sp
  41ca38:	str	x19, [sp, #16]
  41ca3c:	mov	x19, x0
  41ca40:	bl	402530 <malloc@plt>
  41ca44:	cmp	x0, #0x0
  41ca48:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41ca4c:	b.ne	41ca5c <ferror@plt+0x1a0bc>  // b.any
  41ca50:	ldr	x19, [sp, #16]
  41ca54:	ldp	x29, x30, [sp], #32
  41ca58:	ret
  41ca5c:	bl	41cbf8 <ferror@plt+0x1a258>
  41ca60:	stp	x29, x30, [sp, #-32]!
  41ca64:	cmp	x1, #0x0
  41ca68:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41ca6c:	mov	x29, sp
  41ca70:	b.ne	41ca98 <ferror@plt+0x1a0f8>  // b.any
  41ca74:	str	x19, [sp, #16]
  41ca78:	mov	x19, x1
  41ca7c:	bl	402620 <realloc@plt>
  41ca80:	cmp	x0, #0x0
  41ca84:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41ca88:	b.ne	41caa8 <ferror@plt+0x1a108>  // b.any
  41ca8c:	ldr	x19, [sp, #16]
  41ca90:	ldp	x29, x30, [sp], #32
  41ca94:	ret
  41ca98:	bl	4027c0 <free@plt>
  41ca9c:	mov	x0, #0x0                   	// #0
  41caa0:	ldp	x29, x30, [sp], #32
  41caa4:	ret
  41caa8:	bl	41cbf8 <ferror@plt+0x1a258>
  41caac:	nop
  41cab0:	stp	x29, x30, [sp, #-16]!
  41cab4:	mov	x2, x1
  41cab8:	mov	x29, sp
  41cabc:	ldr	x1, [x1]
  41cac0:	cbz	x0, 41caf0 <ferror@plt+0x1a150>
  41cac4:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  41cac8:	movk	x3, #0x5553
  41cacc:	cmp	x1, x3
  41cad0:	b.hi	41cb00 <ferror@plt+0x1a160>  // b.pmore
  41cad4:	add	x3, x1, #0x1
  41cad8:	add	x1, x3, x1, lsr #1
  41cadc:	str	x1, [x2]
  41cae0:	bl	402620 <realloc@plt>
  41cae4:	cbz	x0, 41cb00 <ferror@plt+0x1a160>
  41cae8:	ldp	x29, x30, [sp], #16
  41caec:	ret
  41caf0:	cmp	x1, #0x0
  41caf4:	mov	x3, #0x80                  	// #128
  41caf8:	csel	x1, x1, x3, ne  // ne = any
  41cafc:	b	41cadc <ferror@plt+0x1a13c>
  41cb00:	bl	41cbf8 <ferror@plt+0x1a258>
  41cb04:	nop
  41cb08:	stp	x29, x30, [sp, #-32]!
  41cb0c:	mov	x1, #0x1                   	// #1
  41cb10:	mov	x29, sp
  41cb14:	str	x19, [sp, #16]
  41cb18:	mov	x19, x0
  41cb1c:	bl	402600 <calloc@plt>
  41cb20:	cmp	x0, #0x0
  41cb24:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41cb28:	b.ne	41cb38 <ferror@plt+0x1a198>  // b.any
  41cb2c:	ldr	x19, [sp, #16]
  41cb30:	ldp	x29, x30, [sp], #32
  41cb34:	ret
  41cb38:	bl	41cbf8 <ferror@plt+0x1a258>
  41cb3c:	nop
  41cb40:	umulh	x4, x0, x1
  41cb44:	stp	x29, x30, [sp, #-16]!
  41cb48:	mul	x2, x0, x1
  41cb4c:	cmp	x4, #0x0
  41cb50:	mov	x29, sp
  41cb54:	cset	x3, ne  // ne = any
  41cb58:	tbnz	x2, #63, 41cb70 <ferror@plt+0x1a1d0>
  41cb5c:	cbnz	x3, 41cb70 <ferror@plt+0x1a1d0>
  41cb60:	bl	402600 <calloc@plt>
  41cb64:	cbz	x0, 41cb70 <ferror@plt+0x1a1d0>
  41cb68:	ldp	x29, x30, [sp], #16
  41cb6c:	ret
  41cb70:	bl	41cbf8 <ferror@plt+0x1a258>
  41cb74:	nop
  41cb78:	stp	x29, x30, [sp, #-32]!
  41cb7c:	mov	x29, sp
  41cb80:	stp	x19, x20, [sp, #16]
  41cb84:	mov	x19, x1
  41cb88:	mov	x20, x0
  41cb8c:	mov	x0, x1
  41cb90:	bl	402530 <malloc@plt>
  41cb94:	cmp	x0, #0x0
  41cb98:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41cb9c:	b.ne	41cbb4 <ferror@plt+0x1a214>  // b.any
  41cba0:	mov	x2, x19
  41cba4:	mov	x1, x20
  41cba8:	ldp	x19, x20, [sp, #16]
  41cbac:	ldp	x29, x30, [sp], #32
  41cbb0:	b	402350 <memcpy@plt>
  41cbb4:	bl	41cbf8 <ferror@plt+0x1a258>
  41cbb8:	stp	x29, x30, [sp, #-32]!
  41cbbc:	mov	x29, sp
  41cbc0:	stp	x19, x20, [sp, #16]
  41cbc4:	mov	x20, x0
  41cbc8:	bl	402390 <strlen@plt>
  41cbcc:	add	x19, x0, #0x1
  41cbd0:	mov	x0, x19
  41cbd4:	bl	402530 <malloc@plt>
  41cbd8:	cbz	x0, 41cbf0 <ferror@plt+0x1a250>
  41cbdc:	mov	x2, x19
  41cbe0:	mov	x1, x20
  41cbe4:	ldp	x19, x20, [sp, #16]
  41cbe8:	ldp	x29, x30, [sp], #32
  41cbec:	b	402350 <memcpy@plt>
  41cbf0:	bl	41cbf8 <ferror@plt+0x1a258>
  41cbf4:	nop
  41cbf8:	stp	x29, x30, [sp, #-16]!
  41cbfc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41cc00:	adrp	x3, 421000 <_obstack_memory_used@@Base+0x3640>
  41cc04:	mov	x29, sp
  41cc08:	ldr	w0, [x0, #868]
  41cc0c:	add	x3, x3, #0xdd8
  41cc10:	adrp	x2, 420000 <_obstack_memory_used@@Base+0x2640>
  41cc14:	add	x2, x2, #0x150
  41cc18:	mov	w1, #0x0                   	// #0
  41cc1c:	bl	4023e0 <error@plt>
  41cc20:	bl	4026d0 <abort@plt>
  41cc24:	nop
  41cc28:	stp	x29, x30, [sp, #-16]!
  41cc2c:	mov	x29, sp
  41cc30:	bl	4179c8 <ferror@plt+0x15028>
  41cc34:	cbz	x0, 41cc40 <ferror@plt+0x1a2a0>
  41cc38:	ldp	x29, x30, [sp], #16
  41cc3c:	ret
  41cc40:	bl	41cbf8 <ferror@plt+0x1a258>
  41cc44:	nop
  41cc48:	stp	x29, x30, [sp, #-352]!
  41cc4c:	mov	w9, #0xffffffc8            	// #-56
  41cc50:	mov	w8, #0xffffff80            	// #-128
  41cc54:	mov	x29, sp
  41cc58:	add	x10, sp, #0x120
  41cc5c:	add	x11, sp, #0x160
  41cc60:	stp	x11, x11, [sp, #64]
  41cc64:	mov	x12, x0
  41cc68:	str	x10, [sp, #80]
  41cc6c:	stp	w9, w8, [sp, #88]
  41cc70:	stp	x19, x20, [sp, #16]
  41cc74:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  41cc78:	ldp	x10, x11, [sp, #64]
  41cc7c:	stp	x10, x11, [sp, #32]
  41cc80:	ldp	x8, x9, [sp, #80]
  41cc84:	stp	x8, x9, [sp, #48]
  41cc88:	ldr	x0, [x20, #1088]
  41cc8c:	stp	x10, x11, [sp, #96]
  41cc90:	stp	x8, x9, [sp, #112]
  41cc94:	stp	x10, x11, [sp, #128]
  41cc98:	str	q0, [sp, #160]
  41cc9c:	str	q1, [sp, #176]
  41cca0:	str	q2, [sp, #192]
  41cca4:	str	q3, [sp, #208]
  41cca8:	str	q4, [sp, #224]
  41ccac:	str	q5, [sp, #240]
  41ccb0:	str	q6, [sp, #256]
  41ccb4:	str	q7, [sp, #272]
  41ccb8:	stp	x1, x2, [sp, #296]
  41ccbc:	mov	x2, x12
  41ccc0:	mov	w1, #0x1                   	// #1
  41ccc4:	stp	x3, x4, [sp, #312]
  41ccc8:	add	x3, sp, #0x20
  41cccc:	stp	x5, x6, [sp, #328]
  41ccd0:	stp	x8, x9, [sp, #144]
  41ccd4:	str	x7, [sp, #344]
  41ccd8:	bl	4025f0 <__vfprintf_chk@plt>
  41ccdc:	mov	w19, w0
  41cce0:	tbnz	w0, #31, 41ccf4 <ferror@plt+0x1a354>
  41cce4:	mov	w0, w19
  41cce8:	ldp	x19, x20, [sp, #16]
  41ccec:	ldp	x29, x30, [sp], #352
  41ccf0:	ret
  41ccf4:	ldr	x0, [x20, #1088]
  41ccf8:	bl	4029a0 <ferror@plt>
  41ccfc:	cbnz	w0, 41cce4 <ferror@plt+0x1a344>
  41cd00:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41cd04:	ldr	w20, [x0, #868]
  41cd08:	bl	402920 <__errno_location@plt>
  41cd0c:	mov	x1, x0
  41cd10:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41cd14:	mov	w0, w20
  41cd18:	add	x2, x2, #0xdf0
  41cd1c:	ldr	w1, [x1]
  41cd20:	bl	4023e0 <error@plt>
  41cd24:	b	41cce4 <ferror@plt+0x1a344>
  41cd28:	stp	x29, x30, [sp, #-96]!
  41cd2c:	mov	x2, x0
  41cd30:	mov	x29, sp
  41cd34:	stp	x19, x20, [sp, #16]
  41cd38:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x1a640>
  41cd3c:	add	x3, sp, #0x20
  41cd40:	ldp	x6, x7, [x1]
  41cd44:	stp	x6, x7, [sp, #64]
  41cd48:	ldp	x4, x5, [x1, #16]
  41cd4c:	mov	w1, #0x1                   	// #1
  41cd50:	ldr	x0, [x20, #1088]
  41cd54:	stp	x6, x7, [sp, #32]
  41cd58:	stp	x4, x5, [sp, #48]
  41cd5c:	stp	x4, x5, [sp, #80]
  41cd60:	bl	4025f0 <__vfprintf_chk@plt>
  41cd64:	mov	w19, w0
  41cd68:	tbnz	w0, #31, 41cd7c <ferror@plt+0x1a3dc>
  41cd6c:	mov	w0, w19
  41cd70:	ldp	x19, x20, [sp, #16]
  41cd74:	ldp	x29, x30, [sp], #96
  41cd78:	ret
  41cd7c:	ldr	x0, [x20, #1088]
  41cd80:	bl	4029a0 <ferror@plt>
  41cd84:	cbnz	w0, 41cd6c <ferror@plt+0x1a3cc>
  41cd88:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41cd8c:	ldr	w20, [x0, #868]
  41cd90:	bl	402920 <__errno_location@plt>
  41cd94:	mov	x1, x0
  41cd98:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41cd9c:	mov	w0, w20
  41cda0:	add	x2, x2, #0xdf0
  41cda4:	ldr	w1, [x1]
  41cda8:	bl	4023e0 <error@plt>
  41cdac:	b	41cd6c <ferror@plt+0x1a3cc>
  41cdb0:	stp	x29, x30, [sp, #-336]!
  41cdb4:	mov	w9, #0xffffffd0            	// #-48
  41cdb8:	mov	w8, #0xffffff80            	// #-128
  41cdbc:	mov	x29, sp
  41cdc0:	add	x10, sp, #0x120
  41cdc4:	add	x11, sp, #0x150
  41cdc8:	stp	x11, x11, [sp, #64]
  41cdcc:	mov	x12, x1
  41cdd0:	mov	w1, #0x1                   	// #1
  41cdd4:	str	x10, [sp, #80]
  41cdd8:	stp	w9, w8, [sp, #88]
  41cddc:	ldp	x10, x11, [sp, #64]
  41cde0:	stp	x19, x20, [sp, #16]
  41cde4:	mov	x20, x0
  41cde8:	ldp	x8, x9, [sp, #80]
  41cdec:	stp	x10, x11, [sp, #32]
  41cdf0:	stp	x8, x9, [sp, #48]
  41cdf4:	stp	x10, x11, [sp, #96]
  41cdf8:	stp	x8, x9, [sp, #112]
  41cdfc:	stp	x10, x11, [sp, #128]
  41ce00:	stp	x8, x9, [sp, #144]
  41ce04:	str	q0, [sp, #160]
  41ce08:	str	q1, [sp, #176]
  41ce0c:	str	q2, [sp, #192]
  41ce10:	str	q3, [sp, #208]
  41ce14:	str	q4, [sp, #224]
  41ce18:	str	q5, [sp, #240]
  41ce1c:	str	q6, [sp, #256]
  41ce20:	str	q7, [sp, #272]
  41ce24:	stp	x2, x3, [sp, #288]
  41ce28:	mov	x2, x12
  41ce2c:	add	x3, sp, #0x20
  41ce30:	stp	x4, x5, [sp, #304]
  41ce34:	stp	x6, x7, [sp, #320]
  41ce38:	bl	4025f0 <__vfprintf_chk@plt>
  41ce3c:	mov	w19, w0
  41ce40:	tbnz	w0, #31, 41ce54 <ferror@plt+0x1a4b4>
  41ce44:	mov	w0, w19
  41ce48:	ldp	x19, x20, [sp, #16]
  41ce4c:	ldp	x29, x30, [sp], #336
  41ce50:	ret
  41ce54:	mov	x0, x20
  41ce58:	bl	4029a0 <ferror@plt>
  41ce5c:	cbnz	w0, 41ce44 <ferror@plt+0x1a4a4>
  41ce60:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41ce64:	ldr	w20, [x0, #868]
  41ce68:	bl	402920 <__errno_location@plt>
  41ce6c:	mov	x1, x0
  41ce70:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41ce74:	mov	w0, w20
  41ce78:	add	x2, x2, #0xdf0
  41ce7c:	ldr	w1, [x1]
  41ce80:	bl	4023e0 <error@plt>
  41ce84:	b	41ce44 <ferror@plt+0x1a4a4>
  41ce88:	mov	x4, x2
  41ce8c:	stp	x29, x30, [sp, #-96]!
  41ce90:	mov	x2, x1
  41ce94:	mov	x29, sp
  41ce98:	ldp	x6, x7, [x4]
  41ce9c:	stp	x6, x7, [sp, #32]
  41cea0:	add	x3, sp, #0x20
  41cea4:	ldp	x4, x5, [x4, #16]
  41cea8:	mov	w1, #0x1                   	// #1
  41ceac:	stp	x19, x20, [sp, #16]
  41ceb0:	mov	x20, x0
  41ceb4:	stp	x4, x5, [sp, #48]
  41ceb8:	stp	x6, x7, [sp, #64]
  41cebc:	stp	x4, x5, [sp, #80]
  41cec0:	bl	4025f0 <__vfprintf_chk@plt>
  41cec4:	mov	w19, w0
  41cec8:	tbnz	w0, #31, 41cedc <ferror@plt+0x1a53c>
  41cecc:	mov	w0, w19
  41ced0:	ldp	x19, x20, [sp, #16]
  41ced4:	ldp	x29, x30, [sp], #96
  41ced8:	ret
  41cedc:	mov	x0, x20
  41cee0:	bl	4029a0 <ferror@plt>
  41cee4:	cbnz	w0, 41cecc <ferror@plt+0x1a52c>
  41cee8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41ceec:	ldr	w20, [x0, #868]
  41cef0:	bl	402920 <__errno_location@plt>
  41cef4:	mov	x1, x0
  41cef8:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41cefc:	mov	w0, w20
  41cf00:	add	x2, x2, #0xdf0
  41cf04:	ldr	w1, [x1]
  41cf08:	bl	4023e0 <error@plt>
  41cf0c:	b	41cecc <ferror@plt+0x1a52c>
  41cf10:	stp	x29, x30, [sp, #-128]!
  41cf14:	mov	x29, sp
  41cf18:	stp	x23, x24, [sp, #48]
  41cf1c:	mov	x24, x1
  41cf20:	stp	x19, x20, [sp, #16]
  41cf24:	mov	x20, x0
  41cf28:	ldp	x0, x1, [x1]
  41cf2c:	stp	x0, x1, [sp, #96]
  41cf30:	ldp	x0, x1, [x24, #16]
  41cf34:	stp	x21, x22, [sp, #32]
  41cf38:	ldr	w22, [x24, #24]
  41cf3c:	stp	x25, x26, [sp, #64]
  41cf40:	stp	x0, x1, [sp, #112]
  41cf44:	ldr	x21, [x24]
  41cf48:	cbz	x20, 41d0bc <ferror@plt+0x1a71c>
  41cf4c:	mov	x19, #0x0                   	// #0
  41cf50:	mov	x23, #0xffffffffffffffff    	// #-1
  41cf54:	stp	x27, x28, [sp, #80]
  41cf58:	mov	x28, x20
  41cf5c:	ldr	w27, [sp, #120]
  41cf60:	ldp	x26, x25, [sp, #96]
  41cf64:	b	41cf8c <ferror@plt+0x1a5ec>
  41cf68:	mov	x3, x26
  41cf6c:	mov	x26, x2
  41cf70:	str	x2, [sp, #96]
  41cf74:	ldr	x0, [x3]
  41cf78:	bl	402390 <strlen@plt>
  41cf7c:	adds	x19, x0, x19
  41cf80:	csel	x19, x19, x23, cc  // cc = lo, ul, last
  41cf84:	subs	x28, x28, #0x1
  41cf88:	b.eq	41cfdc <ferror@plt+0x1a63c>  // b.none
  41cf8c:	add	x2, x26, #0xf
  41cf90:	add	w1, w27, #0x8
  41cf94:	and	x2, x2, #0xfffffffffffffff8
  41cf98:	tbz	w27, #31, 41cf68 <ferror@plt+0x1a5c8>
  41cf9c:	str	w1, [sp, #120]
  41cfa0:	add	x0, x26, #0xf
  41cfa4:	add	x3, x25, w27, sxtw
  41cfa8:	and	x0, x0, #0xfffffffffffffff8
  41cfac:	mov	w27, w1
  41cfb0:	cmp	w1, #0x0
  41cfb4:	b.le	41cf74 <ferror@plt+0x1a5d4>
  41cfb8:	mov	x3, x26
  41cfbc:	str	x0, [sp, #96]
  41cfc0:	mov	x26, x0
  41cfc4:	ldr	x0, [x3]
  41cfc8:	bl	402390 <strlen@plt>
  41cfcc:	adds	x19, x0, x19
  41cfd0:	csel	x19, x19, x23, cc  // cc = lo, ul, last
  41cfd4:	subs	x28, x28, #0x1
  41cfd8:	b.ne	41cf8c <ferror@plt+0x1a5ec>  // b.any
  41cfdc:	mov	x0, #0x7fffffff            	// #2147483647
  41cfe0:	cmp	x19, x0
  41cfe4:	b.hi	41d08c <ferror@plt+0x1a6ec>  // b.pmore
  41cfe8:	add	x0, x19, #0x1
  41cfec:	bl	41ca30 <ferror@plt+0x1a090>
  41cff0:	mov	x25, x0
  41cff4:	mov	x23, x0
  41cff8:	b	41d030 <ferror@plt+0x1a690>
  41cffc:	mov	x1, x21
  41d000:	and	x21, x2, #0xfffffffffffffff8
  41d004:	ldr	x19, [x1]
  41d008:	mov	x0, x19
  41d00c:	bl	402390 <strlen@plt>
  41d010:	mov	x1, x19
  41d014:	mov	x19, x0
  41d018:	mov	x2, x19
  41d01c:	mov	x0, x23
  41d020:	bl	402350 <memcpy@plt>
  41d024:	add	x23, x23, x19
  41d028:	subs	x20, x20, #0x1
  41d02c:	b.eq	41d068 <ferror@plt+0x1a6c8>  // b.none
  41d030:	add	x2, x21, #0xf
  41d034:	add	w0, w22, #0x8
  41d038:	tbz	w22, #31, 41cffc <ferror@plt+0x1a65c>
  41d03c:	add	x2, x21, #0xf
  41d040:	cmp	w0, #0x0
  41d044:	b.le	41d058 <ferror@plt+0x1a6b8>
  41d048:	mov	x1, x21
  41d04c:	mov	w22, w0
  41d050:	and	x21, x2, #0xfffffffffffffff8
  41d054:	b	41d004 <ferror@plt+0x1a664>
  41d058:	ldr	x1, [x24, #8]
  41d05c:	add	x1, x1, w22, sxtw
  41d060:	mov	w22, w0
  41d064:	b	41d004 <ferror@plt+0x1a664>
  41d068:	ldp	x27, x28, [sp, #80]
  41d06c:	strb	wzr, [x23]
  41d070:	mov	x0, x25
  41d074:	ldp	x19, x20, [sp, #16]
  41d078:	ldp	x21, x22, [sp, #32]
  41d07c:	ldp	x23, x24, [sp, #48]
  41d080:	ldp	x25, x26, [sp, #64]
  41d084:	ldp	x29, x30, [sp], #128
  41d088:	ret
  41d08c:	bl	402920 <__errno_location@plt>
  41d090:	mov	x25, #0x0                   	// #0
  41d094:	mov	w1, #0x4b                  	// #75
  41d098:	ldp	x27, x28, [sp, #80]
  41d09c:	str	w1, [x0]
  41d0a0:	mov	x0, x25
  41d0a4:	ldp	x19, x20, [sp, #16]
  41d0a8:	ldp	x21, x22, [sp, #32]
  41d0ac:	ldp	x23, x24, [sp, #48]
  41d0b0:	ldp	x25, x26, [sp, #64]
  41d0b4:	ldp	x29, x30, [sp], #128
  41d0b8:	ret
  41d0bc:	mov	x0, #0x1                   	// #1
  41d0c0:	bl	41ca30 <ferror@plt+0x1a090>
  41d0c4:	mov	x23, x0
  41d0c8:	mov	x25, x0
  41d0cc:	b	41d06c <ferror@plt+0x1a6cc>
  41d0d0:	mov	x2, x0
  41d0d4:	stp	x29, x30, [sp, #-96]!
  41d0d8:	mov	x4, x0
  41d0dc:	mov	x29, sp
  41d0e0:	ldrb	w3, [x2]
  41d0e4:	mov	x0, #0x0                   	// #0
  41d0e8:	cbnz	w3, 41d108 <ferror@plt+0x1a768>
  41d0ec:	b	41d164 <ferror@plt+0x1a7c4>
  41d0f0:	ldrb	w3, [x4, #1]
  41d0f4:	cmp	w3, #0x73
  41d0f8:	b.ne	41d110 <ferror@plt+0x1a770>  // b.any
  41d0fc:	ldrb	w3, [x4, #2]!
  41d100:	add	x0, x0, #0x1
  41d104:	cbz	w3, 41d164 <ferror@plt+0x1a7c4>
  41d108:	cmp	w3, #0x25
  41d10c:	b.eq	41d0f0 <ferror@plt+0x1a750>  // b.none
  41d110:	ldp	x6, x7, [x1]
  41d114:	add	x3, sp, #0x10
  41d118:	ldp	x4, x5, [x1, #16]
  41d11c:	add	x0, sp, #0x38
  41d120:	mov	w1, #0x1                   	// #1
  41d124:	stp	x6, x7, [sp, #16]
  41d128:	stp	x4, x5, [sp, #32]
  41d12c:	stp	x6, x7, [sp, #64]
  41d130:	stp	x4, x5, [sp, #80]
  41d134:	bl	402550 <__vasprintf_chk@plt>
  41d138:	tbnz	w0, #31, 41d148 <ferror@plt+0x1a7a8>
  41d13c:	ldr	x0, [sp, #56]
  41d140:	ldp	x29, x30, [sp], #96
  41d144:	ret
  41d148:	bl	402920 <__errno_location@plt>
  41d14c:	mov	x1, x0
  41d150:	mov	x0, #0x0                   	// #0
  41d154:	ldr	w1, [x1]
  41d158:	cmp	w1, #0xc
  41d15c:	b.ne	41d140 <ferror@plt+0x1a7a0>  // b.any
  41d160:	bl	41cbf8 <ferror@plt+0x1a258>
  41d164:	ldp	x4, x5, [x1]
  41d168:	ldp	x2, x3, [x1, #16]
  41d16c:	add	x1, sp, #0x10
  41d170:	stp	x4, x5, [sp, #16]
  41d174:	stp	x2, x3, [sp, #32]
  41d178:	bl	41cf10 <ferror@plt+0x1a570>
  41d17c:	ldp	x29, x30, [sp], #96
  41d180:	ret
  41d184:	nop
  41d188:	stp	x29, x30, [sp, #-272]!
  41d18c:	mov	w9, #0xffffffc8            	// #-56
  41d190:	mov	w8, #0xffffff80            	// #-128
  41d194:	mov	x29, sp
  41d198:	add	x10, sp, #0xd0
  41d19c:	add	x11, sp, #0x110
  41d1a0:	stp	x11, x11, [sp, #48]
  41d1a4:	str	x10, [sp, #64]
  41d1a8:	stp	w9, w8, [sp, #72]
  41d1ac:	ldp	x10, x11, [sp, #48]
  41d1b0:	stp	x10, x11, [sp, #16]
  41d1b4:	ldp	x8, x9, [sp, #64]
  41d1b8:	stp	x8, x9, [sp, #32]
  41d1bc:	str	q0, [sp, #80]
  41d1c0:	str	q1, [sp, #96]
  41d1c4:	str	q2, [sp, #112]
  41d1c8:	str	q3, [sp, #128]
  41d1cc:	str	q4, [sp, #144]
  41d1d0:	str	q5, [sp, #160]
  41d1d4:	str	q6, [sp, #176]
  41d1d8:	str	q7, [sp, #192]
  41d1dc:	stp	x1, x2, [sp, #216]
  41d1e0:	add	x1, sp, #0x10
  41d1e4:	stp	x3, x4, [sp, #232]
  41d1e8:	stp	x5, x6, [sp, #248]
  41d1ec:	str	x7, [sp, #264]
  41d1f0:	bl	41d0d0 <ferror@plt+0x1a730>
  41d1f4:	ldp	x29, x30, [sp], #272
  41d1f8:	ret
  41d1fc:	nop
  41d200:	stp	x29, x30, [sp, #-32]!
  41d204:	mov	x29, sp
  41d208:	stp	x19, x20, [sp, #16]
  41d20c:	mov	x19, x0
  41d210:	bl	4024c0 <fileno@plt>
  41d214:	tbnz	w0, #31, 41d270 <ferror@plt+0x1a8d0>
  41d218:	mov	x0, x19
  41d21c:	bl	4028c0 <__freading@plt>
  41d220:	cbnz	w0, 41d254 <ferror@plt+0x1a8b4>
  41d224:	mov	x0, x19
  41d228:	bl	41d3d8 <ferror@plt+0x1aa38>
  41d22c:	cbz	w0, 41d270 <ferror@plt+0x1a8d0>
  41d230:	bl	402920 <__errno_location@plt>
  41d234:	mov	x20, x0
  41d238:	mov	x0, x19
  41d23c:	ldr	w19, [x20]
  41d240:	bl	4024f0 <fclose@plt>
  41d244:	cbnz	w19, 41d280 <ferror@plt+0x1a8e0>
  41d248:	ldp	x19, x20, [sp, #16]
  41d24c:	ldp	x29, x30, [sp], #32
  41d250:	ret
  41d254:	mov	x0, x19
  41d258:	bl	4024c0 <fileno@plt>
  41d25c:	mov	w2, #0x1                   	// #1
  41d260:	mov	x1, #0x0                   	// #0
  41d264:	bl	4024a0 <lseek@plt>
  41d268:	cmn	x0, #0x1
  41d26c:	b.ne	41d224 <ferror@plt+0x1a884>  // b.any
  41d270:	mov	x0, x19
  41d274:	ldp	x19, x20, [sp, #16]
  41d278:	ldp	x29, x30, [sp], #32
  41d27c:	b	4024f0 <fclose@plt>
  41d280:	mov	w0, #0xffffffff            	// #-1
  41d284:	str	w19, [x20]
  41d288:	b	41d248 <ferror@plt+0x1a8a8>
  41d28c:	nop
  41d290:	stp	x29, x30, [sp, #-96]!
  41d294:	mov	w4, #0xfffffff0            	// #-16
  41d298:	cmp	w1, #0x406
  41d29c:	mov	x29, sp
  41d2a0:	add	x5, sp, #0x50
  41d2a4:	add	x6, sp, #0x60
  41d2a8:	stp	x19, x20, [sp, #16]
  41d2ac:	stp	x6, x6, [sp, #48]
  41d2b0:	str	x5, [sp, #64]
  41d2b4:	stp	w4, wzr, [sp, #72]
  41d2b8:	stp	x2, x3, [sp, #80]
  41d2bc:	b.ne	41d340 <ferror@plt+0x1a9a0>  // b.any
  41d2c0:	stp	x21, x22, [sp, #32]
  41d2c4:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41d2c8:	mov	w2, #0xfffffff8            	// #-8
  41d2cc:	str	w2, [sp, #72]
  41d2d0:	ldr	w2, [x21, #3504]
  41d2d4:	ldr	w22, [sp, #80]
  41d2d8:	tbnz	w2, #31, 41d30c <ferror@plt+0x1a96c>
  41d2dc:	mov	w20, w0
  41d2e0:	mov	w2, w22
  41d2e4:	bl	402840 <fcntl@plt>
  41d2e8:	mov	w19, w0
  41d2ec:	tbnz	w0, #31, 41d358 <ferror@plt+0x1a9b8>
  41d2f0:	mov	w0, #0x1                   	// #1
  41d2f4:	str	w0, [x21, #3504]
  41d2f8:	ldp	x21, x22, [sp, #32]
  41d2fc:	mov	w0, w19
  41d300:	ldp	x19, x20, [sp, #16]
  41d304:	ldp	x29, x30, [sp], #96
  41d308:	ret
  41d30c:	mov	w2, w22
  41d310:	mov	w1, #0x0                   	// #0
  41d314:	bl	41d290 <ferror@plt+0x1a8f0>
  41d318:	mov	w19, w0
  41d31c:	tbnz	w0, #31, 41d32c <ferror@plt+0x1a98c>
  41d320:	ldr	w0, [x21, #3504]
  41d324:	cmn	w0, #0x1
  41d328:	b.eq	41d388 <ferror@plt+0x1a9e8>  // b.none
  41d32c:	mov	w0, w19
  41d330:	ldp	x19, x20, [sp, #16]
  41d334:	ldp	x21, x22, [sp, #32]
  41d338:	ldp	x29, x30, [sp], #96
  41d33c:	ret
  41d340:	bl	402840 <fcntl@plt>
  41d344:	mov	w19, w0
  41d348:	mov	w0, w19
  41d34c:	ldp	x19, x20, [sp, #16]
  41d350:	ldp	x29, x30, [sp], #96
  41d354:	ret
  41d358:	bl	402920 <__errno_location@plt>
  41d35c:	ldr	w0, [x0]
  41d360:	cmp	w0, #0x16
  41d364:	b.ne	41d2f0 <ferror@plt+0x1a950>  // b.any
  41d368:	mov	w2, w22
  41d36c:	mov	w0, w20
  41d370:	mov	w1, #0x0                   	// #0
  41d374:	bl	41d290 <ferror@plt+0x1a8f0>
  41d378:	mov	w19, w0
  41d37c:	tbnz	w0, #31, 41d32c <ferror@plt+0x1a98c>
  41d380:	mov	w0, #0xffffffff            	// #-1
  41d384:	str	w0, [x21, #3504]
  41d388:	mov	w0, w19
  41d38c:	mov	w1, #0x1                   	// #1
  41d390:	bl	402840 <fcntl@plt>
  41d394:	tbnz	w0, #31, 41d3b0 <ferror@plt+0x1aa10>
  41d398:	orr	w2, w0, #0x1
  41d39c:	mov	w1, #0x2                   	// #2
  41d3a0:	mov	w0, w19
  41d3a4:	bl	402840 <fcntl@plt>
  41d3a8:	cmn	w0, #0x1
  41d3ac:	b.ne	41d32c <ferror@plt+0x1a98c>  // b.any
  41d3b0:	bl	402920 <__errno_location@plt>
  41d3b4:	mov	x20, x0
  41d3b8:	mov	w0, w19
  41d3bc:	mov	w19, #0xffffffff            	// #-1
  41d3c0:	ldr	w21, [x20]
  41d3c4:	bl	402660 <close@plt>
  41d3c8:	str	w21, [x20]
  41d3cc:	ldp	x21, x22, [sp, #32]
  41d3d0:	b	41d2fc <ferror@plt+0x1a95c>
  41d3d4:	nop
  41d3d8:	stp	x29, x30, [sp, #-32]!
  41d3dc:	mov	x29, sp
  41d3e0:	str	x19, [sp, #16]
  41d3e4:	mov	x19, x0
  41d3e8:	cbz	x0, 41d3fc <ferror@plt+0x1aa5c>
  41d3ec:	bl	4028c0 <__freading@plt>
  41d3f0:	cbz	w0, 41d3fc <ferror@plt+0x1aa5c>
  41d3f4:	ldr	w0, [x19]
  41d3f8:	tbnz	w0, #8, 41d40c <ferror@plt+0x1aa6c>
  41d3fc:	mov	x0, x19
  41d400:	ldr	x19, [sp, #16]
  41d404:	ldp	x29, x30, [sp], #32
  41d408:	b	402850 <fflush@plt>
  41d40c:	mov	x0, x19
  41d410:	mov	w2, #0x1                   	// #1
  41d414:	mov	x1, #0x0                   	// #0
  41d418:	bl	41d470 <ferror@plt+0x1aad0>
  41d41c:	mov	x0, x19
  41d420:	ldr	x19, [sp, #16]
  41d424:	ldp	x29, x30, [sp], #32
  41d428:	b	402850 <fflush@plt>
  41d42c:	nop
  41d430:	ldp	x1, x2, [x0, #32]
  41d434:	cmp	x2, x1
  41d438:	b.hi	41d464 <ferror@plt+0x1aac4>  // b.pmore
  41d43c:	ldp	x3, x1, [x0, #8]
  41d440:	ldr	w2, [x0]
  41d444:	sub	x1, x1, x3
  41d448:	tbz	w2, #8, 41d45c <ferror@plt+0x1aabc>
  41d44c:	ldr	x2, [x0, #72]
  41d450:	ldr	x0, [x0, #88]
  41d454:	sub	x0, x0, x2
  41d458:	add	x1, x1, x0
  41d45c:	mov	x0, x1
  41d460:	ret
  41d464:	mov	x0, #0x0                   	// #0
  41d468:	ret
  41d46c:	nop
  41d470:	stp	x29, x30, [sp, #-48]!
  41d474:	mov	x29, sp
  41d478:	ldp	x3, x4, [x0, #8]
  41d47c:	str	x19, [sp, #16]
  41d480:	mov	x19, x0
  41d484:	cmp	x4, x3
  41d488:	b.eq	41d49c <ferror@plt+0x1aafc>  // b.none
  41d48c:	mov	x0, x19
  41d490:	ldr	x19, [sp, #16]
  41d494:	ldp	x29, x30, [sp], #48
  41d498:	b	4027a0 <fseeko@plt>
  41d49c:	ldp	x3, x4, [x0, #32]
  41d4a0:	cmp	x4, x3
  41d4a4:	b.ne	41d48c <ferror@plt+0x1aaec>  // b.any
  41d4a8:	ldr	x3, [x0, #72]
  41d4ac:	cbnz	x3, 41d48c <ferror@plt+0x1aaec>
  41d4b0:	str	x1, [sp, #32]
  41d4b4:	str	w2, [sp, #44]
  41d4b8:	bl	4024c0 <fileno@plt>
  41d4bc:	ldr	w2, [sp, #44]
  41d4c0:	ldr	x1, [sp, #32]
  41d4c4:	bl	4024a0 <lseek@plt>
  41d4c8:	mov	x1, x0
  41d4cc:	cmn	x0, #0x1
  41d4d0:	b.eq	41d4e8 <ferror@plt+0x1ab48>  // b.none
  41d4d4:	ldr	w2, [x19]
  41d4d8:	mov	w0, #0x0                   	// #0
  41d4dc:	str	x1, [x19, #144]
  41d4e0:	and	w1, w2, #0xffffffef
  41d4e4:	str	w1, [x19]
  41d4e8:	ldr	x19, [sp, #16]
  41d4ec:	ldp	x29, x30, [sp], #48
  41d4f0:	ret
  41d4f4:	nop
  41d4f8:	stp	x29, x30, [sp, #-64]!
  41d4fc:	cmp	x0, #0x0
  41d500:	add	x4, sp, #0x3c
  41d504:	mov	x29, sp
  41d508:	stp	x19, x20, [sp, #16]
  41d50c:	csel	x19, x4, x0, eq  // eq = none
  41d510:	mov	x20, x2
  41d514:	mov	x0, x19
  41d518:	str	x21, [sp, #32]
  41d51c:	mov	x21, x1
  41d520:	bl	402340 <mbrtowc@plt>
  41d524:	cmp	x20, #0x0
  41d528:	mov	x20, x0
  41d52c:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  41d530:	b.hi	41d548 <ferror@plt+0x1aba8>  // b.pmore
  41d534:	mov	x0, x20
  41d538:	ldp	x19, x20, [sp, #16]
  41d53c:	ldr	x21, [sp, #32]
  41d540:	ldp	x29, x30, [sp], #64
  41d544:	ret
  41d548:	mov	w0, #0x0                   	// #0
  41d54c:	bl	41da80 <_obstack_memory_used@@Base+0xc0>
  41d550:	tst	w0, #0xff
  41d554:	b.ne	41d534 <ferror@plt+0x1ab94>  // b.any
  41d558:	ldrb	w0, [x21]
  41d55c:	mov	x20, #0x1                   	// #1
  41d560:	str	w0, [x19]
  41d564:	mov	x0, x20
  41d568:	ldp	x19, x20, [sp, #16]
  41d56c:	ldr	x21, [sp, #32]
  41d570:	ldp	x29, x30, [sp], #64
  41d574:	ret
  41d578:	stp	x29, x30, [sp, #-16]!
  41d57c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41d580:	adrp	x3, 421000 <_obstack_memory_used@@Base+0x3640>
  41d584:	mov	x29, sp
  41d588:	ldr	x0, [x0, #1064]
  41d58c:	add	x3, x3, #0xdd8
  41d590:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41d594:	mov	w1, #0x1                   	// #1
  41d598:	add	x2, x2, #0xa60
  41d59c:	bl	402750 <__fprintf_chk@plt>
  41d5a0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41d5a4:	ldr	w0, [x0, #868]
  41d5a8:	bl	4023c0 <exit@plt>
  41d5ac:	nop

000000000041d5b0 <_obstack_begin@@Base>:
  41d5b0:	stp	x29, x30, [sp, #-48]!
  41d5b4:	mov	x29, sp
  41d5b8:	stp	x19, x20, [sp, #16]
  41d5bc:	mov	x19, x0
  41d5c0:	ldrb	w0, [x0, #80]
  41d5c4:	str	x21, [sp, #32]
  41d5c8:	and	w0, w0, #0xfffffffe
  41d5cc:	stp	x3, x4, [x19, #56]
  41d5d0:	strb	w0, [x19, #80]
  41d5d4:	cbz	x2, 41d658 <_obstack_begin@@Base+0xa8>
  41d5d8:	ldrb	w0, [x19, #80]
  41d5dc:	cmp	x1, #0x0
  41d5e0:	sub	x21, x2, #0x1
  41d5e4:	mov	x20, x2
  41d5e8:	mov	x2, #0xfe0                 	// #4064
  41d5ec:	csel	x1, x1, x2, ne  // ne = any
  41d5f0:	str	x1, [x19]
  41d5f4:	str	x21, [x19, #48]
  41d5f8:	tbz	w0, #0, 41d67c <_obstack_begin@@Base+0xcc>
  41d5fc:	ldr	x0, [x19, #72]
  41d600:	blr	x3
  41d604:	mov	x1, x0
  41d608:	str	x1, [x19, #8]
  41d60c:	cbz	x1, 41d68c <_obstack_begin@@Base+0xdc>
  41d610:	add	x2, x1, #0x10
  41d614:	neg	x20, x20
  41d618:	ldr	x0, [x19]
  41d61c:	add	x2, x2, x21
  41d620:	and	x20, x2, x20
  41d624:	ldr	x21, [sp, #32]
  41d628:	stp	x20, x20, [x19, #16]
  41d62c:	add	x2, x1, x0
  41d630:	str	x2, [x1]
  41d634:	mov	w0, #0x1                   	// #1
  41d638:	str	x2, [x19, #32]
  41d63c:	ldrb	w2, [x19, #80]
  41d640:	str	xzr, [x1, #8]
  41d644:	and	w1, w2, #0xfffffff9
  41d648:	strb	w1, [x19, #80]
  41d64c:	ldp	x19, x20, [sp, #16]
  41d650:	ldp	x29, x30, [sp], #48
  41d654:	ret
  41d658:	ldrb	w0, [x19, #80]
  41d65c:	cmp	x1, #0x0
  41d660:	mov	x21, #0xf                   	// #15
  41d664:	mov	x2, #0xfe0                 	// #4064
  41d668:	csel	x1, x1, x2, ne  // ne = any
  41d66c:	str	x1, [x19]
  41d670:	str	x21, [x19, #48]
  41d674:	mov	x20, #0x10                  	// #16
  41d678:	tbnz	w0, #0, 41d5fc <_obstack_begin@@Base+0x4c>
  41d67c:	mov	x0, x1
  41d680:	blr	x3
  41d684:	mov	x1, x0
  41d688:	b	41d608 <_obstack_begin@@Base+0x58>
  41d68c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41d690:	ldr	x0, [x0, #1040]
  41d694:	blr	x0

000000000041d698 <_obstack_begin_1@@Base>:
  41d698:	stp	x29, x30, [sp, #-48]!
  41d69c:	mov	x29, sp
  41d6a0:	stp	x19, x20, [sp, #16]
  41d6a4:	mov	x19, x0
  41d6a8:	mov	x0, x5
  41d6ac:	ldrb	w5, [x19, #80]
  41d6b0:	str	x21, [sp, #32]
  41d6b4:	orr	w5, w5, #0x1
  41d6b8:	stp	x3, x4, [x19, #56]
  41d6bc:	str	x0, [x19, #72]
  41d6c0:	strb	w5, [x19, #80]
  41d6c4:	cbz	x2, 41d744 <_obstack_begin_1@@Base+0xac>
  41d6c8:	sub	x21, x2, #0x1
  41d6cc:	mov	x20, x2
  41d6d0:	ldrb	w2, [x19, #80]
  41d6d4:	cmp	x1, #0x0
  41d6d8:	mov	x4, #0xfe0                 	// #4064
  41d6dc:	csel	x1, x1, x4, ne  // ne = any
  41d6e0:	str	x1, [x19]
  41d6e4:	str	x21, [x19, #48]
  41d6e8:	tbz	w2, #0, 41d768 <_obstack_begin_1@@Base+0xd0>
  41d6ec:	blr	x3
  41d6f0:	mov	x1, x0
  41d6f4:	str	x1, [x19, #8]
  41d6f8:	cbz	x1, 41d778 <_obstack_begin_1@@Base+0xe0>
  41d6fc:	add	x2, x1, #0x10
  41d700:	neg	x20, x20
  41d704:	ldr	x0, [x19]
  41d708:	add	x2, x2, x21
  41d70c:	and	x20, x2, x20
  41d710:	ldr	x21, [sp, #32]
  41d714:	stp	x20, x20, [x19, #16]
  41d718:	add	x2, x1, x0
  41d71c:	str	x2, [x1]
  41d720:	mov	w0, #0x1                   	// #1
  41d724:	str	x2, [x19, #32]
  41d728:	ldrb	w2, [x19, #80]
  41d72c:	str	xzr, [x1, #8]
  41d730:	and	w1, w2, #0xfffffff9
  41d734:	strb	w1, [x19, #80]
  41d738:	ldp	x19, x20, [sp, #16]
  41d73c:	ldp	x29, x30, [sp], #48
  41d740:	ret
  41d744:	ldrb	w2, [x19, #80]
  41d748:	cmp	x1, #0x0
  41d74c:	mov	x21, #0xf                   	// #15
  41d750:	mov	x4, #0xfe0                 	// #4064
  41d754:	csel	x1, x1, x4, ne  // ne = any
  41d758:	str	x1, [x19]
  41d75c:	str	x21, [x19, #48]
  41d760:	mov	x20, #0x10                  	// #16
  41d764:	tbnz	w2, #0, 41d6ec <_obstack_begin_1@@Base+0x54>
  41d768:	mov	x0, x1
  41d76c:	blr	x3
  41d770:	mov	x1, x0
  41d774:	b	41d6f4 <_obstack_begin_1@@Base+0x5c>
  41d778:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41d77c:	ldr	x0, [x0, #1040]
  41d780:	blr	x0
  41d784:	nop

000000000041d788 <_obstack_newchunk@@Base>:
  41d788:	stp	x29, x30, [sp, #-64]!
  41d78c:	mov	x29, sp
  41d790:	stp	x21, x22, [sp, #32]
  41d794:	ldp	x2, x21, [x0, #16]
  41d798:	stp	x19, x20, [sp, #16]
  41d79c:	mov	x19, x0
  41d7a0:	ldr	x3, [x0, #48]
  41d7a4:	ldr	x0, [x0]
  41d7a8:	sub	x21, x21, x2
  41d7ac:	adds	x1, x21, x1
  41d7b0:	str	x23, [sp, #48]
  41d7b4:	cset	x2, cs  // cs = hs, nlast
  41d7b8:	lsr	x20, x21, #3
  41d7bc:	adds	x3, x3, x1
  41d7c0:	add	x20, x20, #0x64
  41d7c4:	cset	x1, cs  // cs = hs, nlast
  41d7c8:	cmp	x0, x3
  41d7cc:	csel	x0, x0, x3, cs  // cs = hs, nlast
  41d7d0:	add	x3, x20, x3
  41d7d4:	cmp	x0, x3
  41d7d8:	csel	x20, x0, x3, cs  // cs = hs, nlast
  41d7dc:	cmp	x2, #0x0
  41d7e0:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  41d7e4:	ldr	x23, [x19, #8]
  41d7e8:	b.ne	41d8c8 <_obstack_newchunk@@Base+0x140>  // b.any
  41d7ec:	ldrb	w0, [x19, #80]
  41d7f0:	ldr	x2, [x19, #56]
  41d7f4:	tbz	w0, #0, 41d88c <_obstack_newchunk@@Base+0x104>
  41d7f8:	ldr	x0, [x19, #72]
  41d7fc:	mov	x1, x20
  41d800:	blr	x2
  41d804:	mov	x22, x0
  41d808:	cbz	x22, 41d8c8 <_obstack_newchunk@@Base+0x140>
  41d80c:	mov	x3, x22
  41d810:	str	x22, [x19, #8]
  41d814:	ldr	x1, [x19, #16]
  41d818:	add	x20, x22, x20
  41d81c:	ldr	x0, [x19, #48]
  41d820:	str	x23, [x22, #8]
  41d824:	str	x20, [x19, #32]
  41d828:	mov	x2, x21
  41d82c:	str	x20, [x3], #16
  41d830:	add	x20, x3, x0
  41d834:	bic	x20, x20, x0
  41d838:	mov	x0, x20
  41d83c:	bl	402350 <memcpy@plt>
  41d840:	ldrb	w2, [x19, #80]
  41d844:	tbnz	w2, #1, 41d864 <_obstack_newchunk@@Base+0xdc>
  41d848:	ldr	x1, [x19, #48]
  41d84c:	add	x0, x23, #0x10
  41d850:	ldr	x3, [x19, #16]
  41d854:	add	x0, x0, x1
  41d858:	bic	x0, x0, x1
  41d85c:	cmp	x3, x0
  41d860:	b.eq	41d89c <_obstack_newchunk@@Base+0x114>  // b.none
  41d864:	ldrb	w0, [x19, #80]
  41d868:	add	x21, x20, x21
  41d86c:	ldr	x23, [sp, #48]
  41d870:	and	w0, w0, #0xfffffffd
  41d874:	stp	x20, x21, [x19, #16]
  41d878:	strb	w0, [x19, #80]
  41d87c:	ldp	x19, x20, [sp, #16]
  41d880:	ldp	x21, x22, [sp, #32]
  41d884:	ldp	x29, x30, [sp], #64
  41d888:	ret
  41d88c:	mov	x0, x20
  41d890:	blr	x2
  41d894:	mov	x22, x0
  41d898:	b	41d808 <_obstack_newchunk@@Base+0x80>
  41d89c:	ldr	x0, [x23, #8]
  41d8a0:	ldr	x3, [x19, #64]
  41d8a4:	str	x0, [x22, #8]
  41d8a8:	tbz	w2, #0, 41d8bc <_obstack_newchunk@@Base+0x134>
  41d8ac:	ldr	x0, [x19, #72]
  41d8b0:	mov	x1, x23
  41d8b4:	blr	x3
  41d8b8:	b	41d864 <_obstack_newchunk@@Base+0xdc>
  41d8bc:	mov	x0, x23
  41d8c0:	blr	x3
  41d8c4:	b	41d864 <_obstack_newchunk@@Base+0xdc>
  41d8c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x1a640>
  41d8cc:	ldr	x0, [x0, #1040]
  41d8d0:	blr	x0
  41d8d4:	nop

000000000041d8d8 <_obstack_allocated_p@@Base>:
  41d8d8:	ldr	x0, [x0, #8]
  41d8dc:	cbz	x0, 41d900 <_obstack_allocated_p@@Base+0x28>
  41d8e0:	cmp	x1, x0
  41d8e4:	b.ls	41d8f4 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  41d8e8:	ldr	x2, [x0]
  41d8ec:	cmp	x2, x1
  41d8f0:	b.cs	41d904 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  41d8f4:	ldr	x0, [x0, #8]
  41d8f8:	cbnz	x0, 41d8e0 <_obstack_allocated_p@@Base+0x8>
  41d8fc:	mov	w0, #0x0                   	// #0
  41d900:	ret
  41d904:	mov	w0, #0x1                   	// #1
  41d908:	ret
  41d90c:	nop

000000000041d910 <_obstack_free@@Base>:
  41d910:	stp	x29, x30, [sp, #-48]!
  41d914:	mov	x29, sp
  41d918:	str	x21, [sp, #32]
  41d91c:	mov	x21, x1
  41d920:	ldr	x1, [x0, #8]
  41d924:	cbz	x1, 41d990 <_obstack_free@@Base+0x80>
  41d928:	stp	x19, x20, [sp, #16]
  41d92c:	mov	x19, x0
  41d930:	cmp	x1, x21
  41d934:	b.cs	41d944 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  41d938:	ldr	x0, [x1]
  41d93c:	cmp	x0, x21
  41d940:	b.cs	41d9a0 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  41d944:	ldrb	w0, [x19, #80]
  41d948:	ldr	x20, [x1, #8]
  41d94c:	ldr	x2, [x19, #64]
  41d950:	tbz	w0, #0, 41d974 <_obstack_free@@Base+0x64>
  41d954:	ldr	x0, [x19, #72]
  41d958:	blr	x2
  41d95c:	ldrb	w0, [x19, #80]
  41d960:	orr	w0, w0, #0x2
  41d964:	strb	w0, [x19, #80]
  41d968:	cbz	x20, 41d98c <_obstack_free@@Base+0x7c>
  41d96c:	mov	x1, x20
  41d970:	b	41d930 <_obstack_free@@Base+0x20>
  41d974:	mov	x0, x1
  41d978:	blr	x2
  41d97c:	ldrb	w0, [x19, #80]
  41d980:	orr	w0, w0, #0x2
  41d984:	strb	w0, [x19, #80]
  41d988:	cbnz	x20, 41d96c <_obstack_free@@Base+0x5c>
  41d98c:	ldp	x19, x20, [sp, #16]
  41d990:	cbnz	x21, 41d9b8 <_obstack_free@@Base+0xa8>
  41d994:	ldr	x21, [sp, #32]
  41d998:	ldp	x29, x30, [sp], #48
  41d99c:	ret
  41d9a0:	stp	x1, x21, [x19, #8]
  41d9a4:	stp	x21, x0, [x19, #24]
  41d9a8:	ldp	x19, x20, [sp, #16]
  41d9ac:	ldr	x21, [sp, #32]
  41d9b0:	ldp	x29, x30, [sp], #48
  41d9b4:	ret
  41d9b8:	stp	x19, x20, [sp, #16]
  41d9bc:	bl	4026d0 <abort@plt>

000000000041d9c0 <_obstack_memory_used@@Base>:
  41d9c0:	ldr	x1, [x0, #8]
  41d9c4:	mov	x0, #0x0                   	// #0
  41d9c8:	cbz	x1, 41d9e4 <_obstack_memory_used@@Base+0x24>
  41d9cc:	nop
  41d9d0:	ldr	x2, [x1]
  41d9d4:	sub	x2, x2, x1
  41d9d8:	ldr	x1, [x1, #8]
  41d9dc:	add	x0, x0, x2
  41d9e0:	cbnz	x1, 41d9d0 <_obstack_memory_used@@Base+0x10>
  41d9e4:	ret
  41d9e8:	ldrb	w1, [x0]
  41d9ec:	cmp	w1, #0x2f
  41d9f0:	b.ne	41da04 <_obstack_memory_used@@Base+0x44>  // b.any
  41d9f4:	nop
  41d9f8:	ldrb	w1, [x0, #1]!
  41d9fc:	cmp	w1, #0x2f
  41da00:	b.eq	41d9f8 <_obstack_memory_used@@Base+0x38>  // b.none
  41da04:	cbz	w1, 41da3c <_obstack_memory_used@@Base+0x7c>
  41da08:	mov	x2, x0
  41da0c:	mov	w3, #0x0                   	// #0
  41da10:	b	41da28 <_obstack_memory_used@@Base+0x68>
  41da14:	cbz	w3, 41da20 <_obstack_memory_used@@Base+0x60>
  41da18:	mov	x0, x2
  41da1c:	mov	w3, #0x0                   	// #0
  41da20:	ldrb	w1, [x2, #1]!
  41da24:	cbz	w1, 41da3c <_obstack_memory_used@@Base+0x7c>
  41da28:	cmp	w1, #0x2f
  41da2c:	b.ne	41da14 <_obstack_memory_used@@Base+0x54>  // b.any
  41da30:	ldrb	w1, [x2, #1]!
  41da34:	mov	w3, #0x1                   	// #1
  41da38:	cbnz	w1, 41da28 <_obstack_memory_used@@Base+0x68>
  41da3c:	ret
  41da40:	stp	x29, x30, [sp, #-32]!
  41da44:	mov	x29, sp
  41da48:	str	x19, [sp, #16]
  41da4c:	mov	x19, x0
  41da50:	bl	402390 <strlen@plt>
  41da54:	subs	x1, x0, #0x1
  41da58:	b.ls	41da68 <_obstack_memory_used@@Base+0xa8>  // b.plast
  41da5c:	ldrb	w2, [x19, x1]
  41da60:	cmp	w2, #0x2f
  41da64:	b.eq	41da74 <_obstack_memory_used@@Base+0xb4>  // b.none
  41da68:	ldr	x19, [sp, #16]
  41da6c:	ldp	x29, x30, [sp], #32
  41da70:	ret
  41da74:	mov	x0, x1
  41da78:	b	41da54 <_obstack_memory_used@@Base+0x94>
  41da7c:	nop
  41da80:	stp	x29, x30, [sp, #-16]!
  41da84:	mov	x1, #0x0                   	// #0
  41da88:	mov	x29, sp
  41da8c:	bl	402990 <setlocale@plt>
  41da90:	mov	w1, #0x1                   	// #1
  41da94:	cbz	x0, 41dab8 <_obstack_memory_used@@Base+0xf8>
  41da98:	ldrb	w1, [x0]
  41da9c:	cmp	w1, #0x43
  41daa0:	b.eq	41dac4 <_obstack_memory_used@@Base+0x104>  // b.none
  41daa4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0x3640>
  41daa8:	add	x1, x1, #0xe10
  41daac:	bl	402760 <strcmp@plt>
  41dab0:	cmp	w0, #0x0
  41dab4:	cset	w1, ne  // ne = any
  41dab8:	mov	w0, w1
  41dabc:	ldp	x29, x30, [sp], #16
  41dac0:	ret
  41dac4:	ldrb	w2, [x0, #1]
  41dac8:	mov	w1, #0x0                   	// #0
  41dacc:	cbnz	w2, 41daa4 <_obstack_memory_used@@Base+0xe4>
  41dad0:	mov	w0, w1
  41dad4:	ldp	x29, x30, [sp], #16
  41dad8:	ret
  41dadc:	nop
  41dae0:	stp	x29, x30, [sp, #-208]!
  41dae4:	mov	w0, #0xe                   	// #14
  41dae8:	mov	x29, sp
  41daec:	stp	x21, x22, [sp, #32]
  41daf0:	adrp	x22, 443000 <__progname@@GLIBC_2.17+0xaba8>
  41daf4:	stp	x19, x20, [sp, #16]
  41daf8:	bl	402510 <nl_langinfo@plt>
  41dafc:	mov	x21, x0
  41db00:	ldr	x20, [x22, #3512]
  41db04:	cmp	x0, #0x0
  41db08:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x640>
  41db0c:	add	x0, x0, #0xe8
  41db10:	csel	x21, x0, x21, eq  // eq = none
  41db14:	cbz	x20, 41dba8 <_obstack_memory_used@@Base+0x1e8>
  41db18:	ldrb	w19, [x20]
  41db1c:	cbnz	w19, 41db48 <_obstack_memory_used@@Base+0x188>
  41db20:	b	41db80 <_obstack_memory_used@@Base+0x1c0>
  41db24:	bl	402390 <strlen@plt>
  41db28:	add	x19, x0, #0x1
  41db2c:	add	x19, x20, x19
  41db30:	mov	x0, x19
  41db34:	bl	402390 <strlen@plt>
  41db38:	add	x0, x0, #0x1
  41db3c:	add	x20, x19, x0
  41db40:	ldrb	w19, [x19, x0]
  41db44:	cbz	w19, 41db80 <_obstack_memory_used@@Base+0x1c0>
  41db48:	mov	x1, x20
  41db4c:	mov	x0, x21
  41db50:	bl	402760 <strcmp@plt>
  41db54:	mov	w1, w0
  41db58:	mov	x0, x20
  41db5c:	cbz	w1, 41db70 <_obstack_memory_used@@Base+0x1b0>
  41db60:	cmp	w19, #0x2a
  41db64:	b.ne	41db24 <_obstack_memory_used@@Base+0x164>  // b.any
  41db68:	ldrb	w1, [x20, #1]
  41db6c:	cbnz	w1, 41db24 <_obstack_memory_used@@Base+0x164>
  41db70:	mov	x0, x20
  41db74:	bl	402390 <strlen@plt>
  41db78:	add	x21, x0, #0x1
  41db7c:	add	x21, x20, x21
  41db80:	ldrb	w1, [x21]
  41db84:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  41db88:	add	x0, x0, #0xe18
  41db8c:	cmp	w1, #0x0
  41db90:	csel	x21, x0, x21, eq  // eq = none
  41db94:	mov	x0, x21
  41db98:	ldp	x19, x20, [sp, #16]
  41db9c:	ldp	x21, x22, [sp, #32]
  41dba0:	ldp	x29, x30, [sp], #208
  41dba4:	ret
  41dba8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x3640>
  41dbac:	add	x0, x0, #0xe30
  41dbb0:	stp	x23, x24, [sp, #48]
  41dbb4:	stp	x25, x26, [sp, #64]
  41dbb8:	bl	402930 <getenv@plt>
  41dbbc:	mov	x19, x0
  41dbc0:	cbz	x0, 41de04 <_obstack_memory_used@@Base+0x444>
  41dbc4:	ldrb	w1, [x0]
  41dbc8:	cbnz	w1, 41dc50 <_obstack_memory_used@@Base+0x290>
  41dbcc:	adrp	x19, 421000 <_obstack_memory_used@@Base+0x3640>
  41dbd0:	add	x19, x19, #0xe20
  41dbd4:	mov	x0, #0x17                  	// #23
  41dbd8:	mov	x24, #0x9                   	// #9
  41dbdc:	mov	x25, #0x8                   	// #8
  41dbe0:	bl	402530 <malloc@plt>
  41dbe4:	mov	x23, x0
  41dbe8:	cbz	x0, 41de48 <_obstack_memory_used@@Base+0x488>
  41dbec:	mov	x1, x19
  41dbf0:	mov	x2, x25
  41dbf4:	bl	402350 <memcpy@plt>
  41dbf8:	mov	w0, #0x2f                  	// #47
  41dbfc:	strb	w0, [x23, x25]
  41dc00:	adrp	x2, 421000 <_obstack_memory_used@@Base+0x3640>
  41dc04:	add	x2, x2, #0xe40
  41dc08:	add	x3, x23, x24
  41dc0c:	mov	x0, x23
  41dc10:	mov	w1, #0x8000                	// #32768
  41dc14:	ldr	x4, [x2]
  41dc18:	str	x4, [x23, x24]
  41dc1c:	ldur	x2, [x2, #6]
  41dc20:	stur	x2, [x3, #6]
  41dc24:	bl	402540 <open@plt>
  41dc28:	mov	w24, w0
  41dc2c:	tbz	w0, #31, 41dc7c <_obstack_memory_used@@Base+0x2bc>
  41dc30:	adrp	x20, 41e000 <_obstack_memory_used@@Base+0x640>
  41dc34:	add	x20, x20, #0xe8
  41dc38:	mov	x0, x23
  41dc3c:	bl	4027c0 <free@plt>
  41dc40:	str	x20, [x22, #3512]
  41dc44:	ldp	x23, x24, [sp, #48]
  41dc48:	ldp	x25, x26, [sp, #64]
  41dc4c:	b	41db18 <_obstack_memory_used@@Base+0x158>
  41dc50:	bl	402390 <strlen@plt>
  41dc54:	mov	x24, x0
  41dc58:	mov	x0, #0xe                   	// #14
  41dc5c:	cbnz	x24, 41de24 <_obstack_memory_used@@Base+0x464>
  41dc60:	bl	402530 <malloc@plt>
  41dc64:	mov	x23, x0
  41dc68:	cbz	x0, 41de48 <_obstack_memory_used@@Base+0x488>
  41dc6c:	mov	x1, x19
  41dc70:	mov	x2, x24
  41dc74:	bl	402350 <memcpy@plt>
  41dc78:	b	41dc00 <_obstack_memory_used@@Base+0x240>
  41dc7c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0x1640>
  41dc80:	add	x1, x1, #0x688
  41dc84:	bl	4025d0 <fdopen@plt>
  41dc88:	mov	x19, x0
  41dc8c:	cbz	x0, 41de54 <_obstack_memory_used@@Base+0x494>
  41dc90:	ldr	x2, [x0, #16]
  41dc94:	adrp	x25, 421000 <_obstack_memory_used@@Base+0x3640>
  41dc98:	add	x25, x25, #0xe50
  41dc9c:	mov	x24, #0x0                   	// #0
  41dca0:	stp	x27, x28, [sp, #80]
  41dca4:	nop
  41dca8:	ldr	x0, [x19, #8]
  41dcac:	cmp	x0, x2
  41dcb0:	b.cs	41ddf0 <_obstack_memory_used@@Base+0x430>  // b.hs, b.nlast
  41dcb4:	add	x1, x0, #0x1
  41dcb8:	str	x1, [x19, #8]
  41dcbc:	ldrb	w0, [x0]
  41dcc0:	cmp	w0, #0x20
  41dcc4:	sub	w1, w0, #0x9
  41dcc8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  41dccc:	b.ls	41dd68 <_obstack_memory_used@@Base+0x3a8>  // b.plast
  41dcd0:	cmp	w0, #0x23
  41dcd4:	b.eq	41dd84 <_obstack_memory_used@@Base+0x3c4>  // b.none
  41dcd8:	mov	x1, x19
  41dcdc:	bl	4027d0 <ungetc@plt>
  41dce0:	add	x3, sp, #0x98
  41dce4:	add	x2, sp, #0x60
  41dce8:	mov	x1, x25
  41dcec:	mov	x0, x19
  41dcf0:	bl	402560 <__isoc99_fscanf@plt>
  41dcf4:	cmp	w0, #0x1
  41dcf8:	b.le	41ddd8 <_obstack_memory_used@@Base+0x418>
  41dcfc:	add	x0, sp, #0x60
  41dd00:	bl	402390 <strlen@plt>
  41dd04:	mov	x26, x0
  41dd08:	add	x0, sp, #0x98
  41dd0c:	bl	402390 <strlen@plt>
  41dd10:	mov	x28, x0
  41dd14:	cbnz	x24, 41ddb0 <_obstack_memory_used@@Base+0x3f0>
  41dd18:	add	x0, x26, x0
  41dd1c:	add	x24, x0, #0x2
  41dd20:	add	x0, x0, #0x3
  41dd24:	bl	402530 <malloc@plt>
  41dd28:	mov	x27, x0
  41dd2c:	cbz	x27, 41de60 <_obstack_memory_used@@Base+0x4a0>
  41dd30:	sub	x20, x24, x28
  41dd34:	mov	x0, #0xfffffffffffffffe    	// #-2
  41dd38:	sub	x0, x0, x26
  41dd3c:	add	x2, x26, #0x1
  41dd40:	add	x0, x0, x20
  41dd44:	add	x1, sp, #0x60
  41dd48:	add	x0, x27, x0
  41dd4c:	bl	402350 <memcpy@plt>
  41dd50:	sub	x0, x20, #0x1
  41dd54:	add	x2, x28, #0x1
  41dd58:	add	x0, x27, x0
  41dd5c:	mov	x20, x27
  41dd60:	add	x1, sp, #0x98
  41dd64:	bl	402350 <memcpy@plt>
  41dd68:	ldr	x2, [x19, #16]
  41dd6c:	b	41dca8 <_obstack_memory_used@@Base+0x2e8>
  41dd70:	mov	x0, x19
  41dd74:	bl	402980 <__uflow@plt>
  41dd78:	cmp	w0, #0xa
  41dd7c:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  41dd80:	b.eq	41ddd0 <_obstack_memory_used@@Base+0x410>  // b.none
  41dd84:	ldr	x2, [x19, #16]
  41dd88:	b	41dd9c <_obstack_memory_used@@Base+0x3dc>
  41dd8c:	str	x0, [x19, #8]
  41dd90:	ldrb	w0, [x1]
  41dd94:	cmp	w0, #0xa
  41dd98:	b.eq	41dca8 <_obstack_memory_used@@Base+0x2e8>  // b.none
  41dd9c:	ldr	x1, [x19, #8]
  41dda0:	add	x0, x1, #0x1
  41dda4:	cmp	x1, x2
  41dda8:	b.cc	41dd8c <_obstack_memory_used@@Base+0x3cc>  // b.lo, b.ul, b.last
  41ddac:	b	41dd70 <_obstack_memory_used@@Base+0x3b0>
  41ddb0:	add	x1, x26, x0
  41ddb4:	mov	x0, x20
  41ddb8:	add	x1, x1, x24
  41ddbc:	add	x24, x1, #0x2
  41ddc0:	add	x1, x1, #0x3
  41ddc4:	bl	402620 <realloc@plt>
  41ddc8:	mov	x27, x0
  41ddcc:	b	41dd2c <_obstack_memory_used@@Base+0x36c>
  41ddd0:	cmn	w0, #0x1
  41ddd4:	b.ne	41dd68 <_obstack_memory_used@@Base+0x3a8>  // b.any
  41ddd8:	mov	x0, x19
  41dddc:	bl	41d200 <ferror@plt+0x1a860>
  41dde0:	cbz	x24, 41de1c <_obstack_memory_used@@Base+0x45c>
  41dde4:	strb	wzr, [x20, x24]
  41dde8:	ldp	x27, x28, [sp, #80]
  41ddec:	b	41dc38 <_obstack_memory_used@@Base+0x278>
  41ddf0:	mov	x0, x19
  41ddf4:	bl	402980 <__uflow@plt>
  41ddf8:	cmn	w0, #0x1
  41ddfc:	b.ne	41dcc0 <_obstack_memory_used@@Base+0x300>  // b.any
  41de00:	b	41ddd8 <_obstack_memory_used@@Base+0x418>
  41de04:	adrp	x19, 421000 <_obstack_memory_used@@Base+0x3640>
  41de08:	mov	x0, #0x17                  	// #23
  41de0c:	add	x19, x19, #0xe20
  41de10:	mov	x24, #0x9                   	// #9
  41de14:	mov	x25, #0x8                   	// #8
  41de18:	b	41dbe0 <_obstack_memory_used@@Base+0x220>
  41de1c:	ldp	x27, x28, [sp, #80]
  41de20:	b	41dc30 <_obstack_memory_used@@Base+0x270>
  41de24:	add	x1, x19, x24
  41de28:	add	x0, x24, x0
  41de2c:	ldurb	w1, [x1, #-1]
  41de30:	cmp	w1, #0x2f
  41de34:	b.eq	41dc60 <_obstack_memory_used@@Base+0x2a0>  // b.none
  41de38:	add	x0, x24, #0xf
  41de3c:	mov	x25, x24
  41de40:	add	x24, x24, #0x1
  41de44:	b	41dbe0 <_obstack_memory_used@@Base+0x220>
  41de48:	adrp	x20, 41e000 <_obstack_memory_used@@Base+0x640>
  41de4c:	add	x20, x20, #0xe8
  41de50:	b	41dc40 <_obstack_memory_used@@Base+0x280>
  41de54:	mov	w0, w24
  41de58:	bl	402660 <close@plt>
  41de5c:	b	41dc30 <_obstack_memory_used@@Base+0x270>
  41de60:	mov	x0, x20
  41de64:	bl	4027c0 <free@plt>
  41de68:	mov	x0, x19
  41de6c:	adrp	x20, 41e000 <_obstack_memory_used@@Base+0x640>
  41de70:	bl	41d200 <ferror@plt+0x1a860>
  41de74:	add	x20, x20, #0xe8
  41de78:	ldp	x27, x28, [sp, #80]
  41de7c:	b	41dc38 <_obstack_memory_used@@Base+0x278>
  41de80:	stp	x29, x30, [sp, #-64]!
  41de84:	mov	x29, sp
  41de88:	stp	x19, x20, [sp, #16]
  41de8c:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x19640>
  41de90:	add	x20, x20, #0xdf0
  41de94:	stp	x21, x22, [sp, #32]
  41de98:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x19640>
  41de9c:	add	x21, x21, #0xde8
  41dea0:	sub	x20, x20, x21
  41dea4:	mov	w22, w0
  41dea8:	stp	x23, x24, [sp, #48]
  41deac:	mov	x23, x1
  41deb0:	mov	x24, x2
  41deb4:	bl	402300 <mbrtowc@plt-0x40>
  41deb8:	cmp	xzr, x20, asr #3
  41debc:	b.eq	41dee8 <_obstack_memory_used@@Base+0x528>  // b.none
  41dec0:	asr	x20, x20, #3
  41dec4:	mov	x19, #0x0                   	// #0
  41dec8:	ldr	x3, [x21, x19, lsl #3]
  41decc:	mov	x2, x24
  41ded0:	add	x19, x19, #0x1
  41ded4:	mov	x1, x23
  41ded8:	mov	w0, w22
  41dedc:	blr	x3
  41dee0:	cmp	x20, x19
  41dee4:	b.ne	41dec8 <_obstack_memory_used@@Base+0x508>  // b.any
  41dee8:	ldp	x19, x20, [sp, #16]
  41deec:	ldp	x21, x22, [sp, #32]
  41def0:	ldp	x23, x24, [sp, #48]
  41def4:	ldp	x29, x30, [sp], #64
  41def8:	ret
  41defc:	nop
  41df00:	ret
  41df04:	nop
  41df08:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x1a640>
  41df0c:	mov	x1, #0x0                   	// #0
  41df10:	ldr	x2, [x2, #840]
  41df14:	b	402450 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000041df18 <.fini>:
  41df18:	stp	x29, x30, [sp, #-16]!
  41df1c:	mov	x29, sp
  41df20:	ldp	x29, x30, [sp], #16
  41df24:	ret
