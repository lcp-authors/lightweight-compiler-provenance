
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//genl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404e08 <.init>:
  404e08:	stp	x29, x30, [sp, #-16]!
  404e0c:	mov	x29, sp
  404e10:	bl	405450 <_start@@Base+0x50>
  404e14:	ldp	x29, x30, [sp], #16
  404e18:	ret

Disassembly of section .plt:

0000000000404e20 <memcpy@plt-0x20>:
  404e20:	stp	x16, x30, [sp, #-16]!
  404e24:	adrp	x16, 423000 <_IO_stdin_used@@Base+0x10cf0>
  404e28:	ldr	x17, [x16, #4088]
  404e2c:	add	x16, x16, #0xff8
  404e30:	br	x17
  404e34:	nop
  404e38:	nop
  404e3c:	nop

0000000000404e40 <memcpy@plt>:
  404e40:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16]
  404e48:	add	x16, x16, #0x0
  404e4c:	br	x17

0000000000404e50 <recvmsg@plt>:
  404e50:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #8]
  404e58:	add	x16, x16, #0x8
  404e5c:	br	x17

0000000000404e60 <strtoul@plt>:
  404e60:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #16]
  404e68:	add	x16, x16, #0x10
  404e6c:	br	x17

0000000000404e70 <strlen@plt>:
  404e70:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #24]
  404e78:	add	x16, x16, #0x18
  404e7c:	br	x17

0000000000404e80 <fputs@plt>:
  404e80:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #32]
  404e88:	add	x16, x16, #0x20
  404e8c:	br	x17

0000000000404e90 <exit@plt>:
  404e90:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #40]
  404e98:	add	x16, x16, #0x28
  404e9c:	br	x17

0000000000404ea0 <perror@plt>:
  404ea0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #48]
  404ea8:	add	x16, x16, #0x30
  404eac:	br	x17

0000000000404eb0 <__cmsg_nxthdr@plt>:
  404eb0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #56]
  404eb8:	add	x16, x16, #0x38
  404ebc:	br	x17

0000000000404ec0 <htonl@plt>:
  404ec0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #64]
  404ec8:	add	x16, x16, #0x40
  404ecc:	br	x17

0000000000404ed0 <strtoll@plt>:
  404ed0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #72]
  404ed8:	add	x16, x16, #0x48
  404edc:	br	x17

0000000000404ee0 <strtod@plt>:
  404ee0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #80]
  404ee8:	add	x16, x16, #0x50
  404eec:	br	x17

0000000000404ef0 <geteuid@plt>:
  404ef0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #88]
  404ef8:	add	x16, x16, #0x58
  404efc:	br	x17

0000000000404f00 <sethostent@plt>:
  404f00:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #96]
  404f08:	add	x16, x16, #0x60
  404f0c:	br	x17

0000000000404f10 <bind@plt>:
  404f10:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #104]
  404f18:	add	x16, x16, #0x68
  404f1c:	br	x17

0000000000404f20 <ntohl@plt>:
  404f20:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #112]
  404f28:	add	x16, x16, #0x70
  404f2c:	br	x17

0000000000404f30 <ftell@plt>:
  404f30:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #120]
  404f38:	add	x16, x16, #0x78
  404f3c:	br	x17

0000000000404f40 <sprintf@plt>:
  404f40:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #128]
  404f48:	add	x16, x16, #0x80
  404f4c:	br	x17

0000000000404f50 <getuid@plt>:
  404f50:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #136]
  404f58:	add	x16, x16, #0x88
  404f5c:	br	x17

0000000000404f60 <putc@plt>:
  404f60:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #144]
  404f68:	add	x16, x16, #0x90
  404f6c:	br	x17

0000000000404f70 <strftime@plt>:
  404f70:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #152]
  404f78:	add	x16, x16, #0x98
  404f7c:	br	x17

0000000000404f80 <dlopen@plt>:
  404f80:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #160]
  404f88:	add	x16, x16, #0xa0
  404f8c:	br	x17

0000000000404f90 <snprintf@plt>:
  404f90:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #168]
  404f98:	add	x16, x16, #0xa8
  404f9c:	br	x17

0000000000404fa0 <fileno@plt>:
  404fa0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #176]
  404fa8:	add	x16, x16, #0xb0
  404fac:	br	x17

0000000000404fb0 <localtime@plt>:
  404fb0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #184]
  404fb8:	add	x16, x16, #0xb8
  404fbc:	br	x17

0000000000404fc0 <fclose@plt>:
  404fc0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #192]
  404fc8:	add	x16, x16, #0xc0
  404fcc:	br	x17

0000000000404fd0 <atoi@plt>:
  404fd0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #200]
  404fd8:	add	x16, x16, #0xc8
  404fdc:	br	x17

0000000000404fe0 <time@plt>:
  404fe0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #208]
  404fe8:	add	x16, x16, #0xd0
  404fec:	br	x17

0000000000404ff0 <ntohs@plt>:
  404ff0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #216]
  404ff8:	add	x16, x16, #0xd8
  404ffc:	br	x17

0000000000405000 <malloc@plt>:
  405000:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #224]
  405008:	add	x16, x16, #0xe0
  40500c:	br	x17

0000000000405010 <setsockopt@plt>:
  405010:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #232]
  405018:	add	x16, x16, #0xe8
  40501c:	br	x17

0000000000405020 <dlsym@plt>:
  405020:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #240]
  405028:	add	x16, x16, #0xf0
  40502c:	br	x17

0000000000405030 <__isoc99_fscanf@plt>:
  405030:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #248]
  405038:	add	x16, x16, #0xf8
  40503c:	br	x17

0000000000405040 <__libc_start_main@plt>:
  405040:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #256]
  405048:	add	x16, x16, #0x100
  40504c:	br	x17

0000000000405050 <strcat@plt>:
  405050:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #264]
  405058:	add	x16, x16, #0x108
  40505c:	br	x17

0000000000405060 <if_indextoname@plt>:
  405060:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #272]
  405068:	add	x16, x16, #0x110
  40506c:	br	x17

0000000000405070 <memset@plt>:
  405070:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #280]
  405078:	add	x16, x16, #0x118
  40507c:	br	x17

0000000000405080 <gettimeofday@plt>:
  405080:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #288]
  405088:	add	x16, x16, #0x120
  40508c:	br	x17

0000000000405090 <sendmsg@plt>:
  405090:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #296]
  405098:	add	x16, x16, #0x128
  40509c:	br	x17

00000000004050a0 <calloc@plt>:
  4050a0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #304]
  4050a8:	add	x16, x16, #0x130
  4050ac:	br	x17

00000000004050b0 <cap_get_flag@plt>:
  4050b0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #312]
  4050b8:	add	x16, x16, #0x138
  4050bc:	br	x17

00000000004050c0 <strcasecmp@plt>:
  4050c0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #320]
  4050c8:	add	x16, x16, #0x140
  4050cc:	br	x17

00000000004050d0 <realloc@plt>:
  4050d0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #328]
  4050d8:	add	x16, x16, #0x148
  4050dc:	br	x17

00000000004050e0 <htons@plt>:
  4050e0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #336]
  4050e8:	add	x16, x16, #0x150
  4050ec:	br	x17

00000000004050f0 <cap_set_proc@plt>:
  4050f0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #344]
  4050f8:	add	x16, x16, #0x158
  4050fc:	br	x17

0000000000405100 <strdup@plt>:
  405100:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #352]
  405108:	add	x16, x16, #0x160
  40510c:	br	x17

0000000000405110 <strerror@plt>:
  405110:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #360]
  405118:	add	x16, x16, #0x168
  40511c:	br	x17

0000000000405120 <close@plt>:
  405120:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #368]
  405128:	add	x16, x16, #0x170
  40512c:	br	x17

0000000000405130 <strrchr@plt>:
  405130:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #376]
  405138:	add	x16, x16, #0x178
  40513c:	br	x17

0000000000405140 <recv@plt>:
  405140:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #384]
  405148:	add	x16, x16, #0x180
  40514c:	br	x17

0000000000405150 <__gmon_start__@plt>:
  405150:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #392]
  405158:	add	x16, x16, #0x188
  40515c:	br	x17

0000000000405160 <abort@plt>:
  405160:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #400]
  405168:	add	x16, x16, #0x190
  40516c:	br	x17

0000000000405170 <feof@plt>:
  405170:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #408]
  405178:	add	x16, x16, #0x198
  40517c:	br	x17

0000000000405180 <memcmp@plt>:
  405180:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #416]
  405188:	add	x16, x16, #0x1a0
  40518c:	br	x17

0000000000405190 <strcmp@plt>:
  405190:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #424]
  405198:	add	x16, x16, #0x1a8
  40519c:	br	x17

00000000004051a0 <__ctype_b_loc@plt>:
  4051a0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #432]
  4051a8:	add	x16, x16, #0x1b0
  4051ac:	br	x17

00000000004051b0 <strtol@plt>:
  4051b0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #440]
  4051b8:	add	x16, x16, #0x1b8
  4051bc:	br	x17

00000000004051c0 <cap_get_proc@plt>:
  4051c0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #448]
  4051c8:	add	x16, x16, #0x1c0
  4051cc:	br	x17

00000000004051d0 <fread@plt>:
  4051d0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #456]
  4051d8:	add	x16, x16, #0x1c8
  4051dc:	br	x17

00000000004051e0 <getline@plt>:
  4051e0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #464]
  4051e8:	add	x16, x16, #0x1d0
  4051ec:	br	x17

00000000004051f0 <gethostbyaddr@plt>:
  4051f0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #472]
  4051f8:	add	x16, x16, #0x1d8
  4051fc:	br	x17

0000000000405200 <free@plt>:
  405200:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #480]
  405208:	add	x16, x16, #0x1e0
  40520c:	br	x17

0000000000405210 <inet_pton@plt>:
  405210:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #488]
  405218:	add	x16, x16, #0x1e8
  40521c:	br	x17

0000000000405220 <send@plt>:
  405220:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #496]
  405228:	add	x16, x16, #0x1f0
  40522c:	br	x17

0000000000405230 <strspn@plt>:
  405230:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #504]
  405238:	add	x16, x16, #0x1f8
  40523c:	br	x17

0000000000405240 <strchr@plt>:
  405240:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405244:	ldr	x17, [x16, #512]
  405248:	add	x16, x16, #0x200
  40524c:	br	x17

0000000000405250 <strtoull@plt>:
  405250:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405254:	ldr	x17, [x16, #520]
  405258:	add	x16, x16, #0x208
  40525c:	br	x17

0000000000405260 <fwrite@plt>:
  405260:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405264:	ldr	x17, [x16, #528]
  405268:	add	x16, x16, #0x210
  40526c:	br	x17

0000000000405270 <socket@plt>:
  405270:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405274:	ldr	x17, [x16, #536]
  405278:	add	x16, x16, #0x218
  40527c:	br	x17

0000000000405280 <fflush@plt>:
  405280:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405284:	ldr	x17, [x16, #544]
  405288:	add	x16, x16, #0x220
  40528c:	br	x17

0000000000405290 <strcpy@plt>:
  405290:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405294:	ldr	x17, [x16, #552]
  405298:	add	x16, x16, #0x228
  40529c:	br	x17

00000000004052a0 <fopen64@plt>:
  4052a0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4052a4:	ldr	x17, [x16, #560]
  4052a8:	add	x16, x16, #0x230
  4052ac:	br	x17

00000000004052b0 <cap_clear@plt>:
  4052b0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4052b4:	ldr	x17, [x16, #568]
  4052b8:	add	x16, x16, #0x238
  4052bc:	br	x17

00000000004052c0 <isatty@plt>:
  4052c0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4052c4:	ldr	x17, [x16, #576]
  4052c8:	add	x16, x16, #0x240
  4052cc:	br	x17

00000000004052d0 <sysconf@plt>:
  4052d0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4052d4:	ldr	x17, [x16, #584]
  4052d8:	add	x16, x16, #0x248
  4052dc:	br	x17

00000000004052e0 <asctime@plt>:
  4052e0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4052e4:	ldr	x17, [x16, #592]
  4052e8:	add	x16, x16, #0x250
  4052ec:	br	x17

00000000004052f0 <cap_free@plt>:
  4052f0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4052f4:	ldr	x17, [x16, #600]
  4052f8:	add	x16, x16, #0x258
  4052fc:	br	x17

0000000000405300 <if_nametoindex@plt>:
  405300:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405304:	ldr	x17, [x16, #608]
  405308:	add	x16, x16, #0x260
  40530c:	br	x17

0000000000405310 <strchrnul@plt>:
  405310:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405314:	ldr	x17, [x16, #616]
  405318:	add	x16, x16, #0x268
  40531c:	br	x17

0000000000405320 <strstr@plt>:
  405320:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405324:	ldr	x17, [x16, #624]
  405328:	add	x16, x16, #0x270
  40532c:	br	x17

0000000000405330 <__isoc99_sscanf@plt>:
  405330:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405334:	ldr	x17, [x16, #632]
  405338:	add	x16, x16, #0x278
  40533c:	br	x17

0000000000405340 <strncpy@plt>:
  405340:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405344:	ldr	x17, [x16, #640]
  405348:	add	x16, x16, #0x280
  40534c:	br	x17

0000000000405350 <strcspn@plt>:
  405350:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405354:	ldr	x17, [x16, #648]
  405358:	add	x16, x16, #0x288
  40535c:	br	x17

0000000000405360 <vfprintf@plt>:
  405360:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405364:	ldr	x17, [x16, #656]
  405368:	add	x16, x16, #0x290
  40536c:	br	x17

0000000000405370 <printf@plt>:
  405370:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405374:	ldr	x17, [x16, #664]
  405378:	add	x16, x16, #0x298
  40537c:	br	x17

0000000000405380 <__assert_fail@plt>:
  405380:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405384:	ldr	x17, [x16, #672]
  405388:	add	x16, x16, #0x2a0
  40538c:	br	x17

0000000000405390 <__errno_location@plt>:
  405390:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  405394:	ldr	x17, [x16, #680]
  405398:	add	x16, x16, #0x2a8
  40539c:	br	x17

00000000004053a0 <getenv@plt>:
  4053a0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4053a4:	ldr	x17, [x16, #688]
  4053a8:	add	x16, x16, #0x2b0
  4053ac:	br	x17

00000000004053b0 <getsockname@plt>:
  4053b0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4053b4:	ldr	x17, [x16, #696]
  4053b8:	add	x16, x16, #0x2b8
  4053bc:	br	x17

00000000004053c0 <fprintf@plt>:
  4053c0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4053c4:	ldr	x17, [x16, #704]
  4053c8:	add	x16, x16, #0x2c0
  4053cc:	br	x17

00000000004053d0 <fgets@plt>:
  4053d0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4053d4:	ldr	x17, [x16, #712]
  4053d8:	add	x16, x16, #0x2c8
  4053dc:	br	x17

00000000004053e0 <inet_ntop@plt>:
  4053e0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4053e4:	ldr	x17, [x16, #720]
  4053e8:	add	x16, x16, #0x2d0
  4053ec:	br	x17

00000000004053f0 <ferror@plt>:
  4053f0:	adrp	x16, 424000 <memcpy@GLIBC_2.17>
  4053f4:	ldr	x17, [x16, #728]
  4053f8:	add	x16, x16, #0x2d8
  4053fc:	br	x17

Disassembly of section .text:

0000000000405400 <_start@@Base>:
  405400:	mov	x29, #0x0                   	// #0
  405404:	mov	x30, #0x0                   	// #0
  405408:	mov	x5, x0
  40540c:	ldr	x1, [sp]
  405410:	add	x2, sp, #0x8
  405414:	mov	x6, sp
  405418:	movz	x0, #0x0, lsl #48
  40541c:	movk	x0, #0x0, lsl #32
  405420:	movk	x0, #0x40, lsl #16
  405424:	movk	x0, #0x550c
  405428:	movz	x3, #0x0, lsl #48
  40542c:	movk	x3, #0x0, lsl #32
  405430:	movk	x3, #0x41, lsl #16
  405434:	movk	x3, #0x2270
  405438:	movz	x4, #0x0, lsl #48
  40543c:	movk	x4, #0x0, lsl #32
  405440:	movk	x4, #0x41, lsl #16
  405444:	movk	x4, #0x22f0
  405448:	bl	405040 <__libc_start_main@plt>
  40544c:	bl	405160 <abort@plt>
  405450:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x10cf0>
  405454:	ldr	x0, [x0, #4040]
  405458:	cbz	x0, 405460 <_start@@Base+0x60>
  40545c:	b	405150 <__gmon_start__@plt>
  405460:	ret
  405464:	nop
  405468:	adrp	x0, 424000 <memcpy@GLIBC_2.17>
  40546c:	add	x0, x0, #0x360
  405470:	adrp	x1, 424000 <memcpy@GLIBC_2.17>
  405474:	add	x1, x1, #0x360
  405478:	cmp	x1, x0
  40547c:	b.eq	405494 <_start@@Base+0x94>  // b.none
  405480:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405484:	ldr	x1, [x1, #792]
  405488:	cbz	x1, 405494 <_start@@Base+0x94>
  40548c:	mov	x16, x1
  405490:	br	x16
  405494:	ret
  405498:	adrp	x0, 424000 <memcpy@GLIBC_2.17>
  40549c:	add	x0, x0, #0x360
  4054a0:	adrp	x1, 424000 <memcpy@GLIBC_2.17>
  4054a4:	add	x1, x1, #0x360
  4054a8:	sub	x1, x1, x0
  4054ac:	lsr	x2, x1, #63
  4054b0:	add	x1, x2, x1, asr #3
  4054b4:	cmp	xzr, x1, asr #1
  4054b8:	asr	x1, x1, #1
  4054bc:	b.eq	4054d4 <_start@@Base+0xd4>  // b.none
  4054c0:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4054c4:	ldr	x2, [x2, #800]
  4054c8:	cbz	x2, 4054d4 <_start@@Base+0xd4>
  4054cc:	mov	x16, x2
  4054d0:	br	x16
  4054d4:	ret
  4054d8:	stp	x29, x30, [sp, #-32]!
  4054dc:	mov	x29, sp
  4054e0:	str	x19, [sp, #16]
  4054e4:	adrp	x19, 424000 <memcpy@GLIBC_2.17>
  4054e8:	ldrb	w0, [x19, #880]
  4054ec:	cbnz	w0, 4054fc <_start@@Base+0xfc>
  4054f0:	bl	405468 <_start@@Base+0x68>
  4054f4:	mov	w0, #0x1                   	// #1
  4054f8:	strb	w0, [x19, #880]
  4054fc:	ldr	x19, [sp, #16]
  405500:	ldp	x29, x30, [sp], #32
  405504:	ret
  405508:	b	405498 <_start@@Base+0x98>

000000000040550c <main@@Base>:
  40550c:	sub	sp, sp, #0x30
  405510:	stp	x29, x30, [sp, #32]
  405514:	add	x29, sp, #0x20
  405518:	stur	wzr, [x29, #-4]
  40551c:	stur	w0, [x29, #-8]
  405520:	str	x1, [sp, #16]
  405524:	ldur	w8, [x29, #-8]
  405528:	cmp	w8, #0x1
  40552c:	b.le	4056a4 <main@@Base+0x198>
  405530:	ldr	x8, [sp, #16]
  405534:	ldr	x8, [x8, #8]
  405538:	ldrb	w9, [x8]
  40553c:	cmp	w9, #0x2d
  405540:	b.eq	405548 <main@@Base+0x3c>  // b.none
  405544:	b	4056a4 <main@@Base+0x198>
  405548:	ldr	x8, [sp, #16]
  40554c:	ldr	x0, [x8, #8]
  405550:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405554:	add	x1, x1, #0x328
  405558:	bl	4087fc <matches@@Base>
  40555c:	and	w9, w0, #0x1
  405560:	cbz	w9, 405580 <main@@Base+0x74>
  405564:	ldr	x8, [sp, #16]
  405568:	ldr	x0, [x8, #8]
  40556c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405570:	add	x1, x1, #0x32f
  405574:	bl	4087fc <matches@@Base>
  405578:	and	w9, w0, #0x1
  40557c:	cbnz	w9, 405598 <main@@Base+0x8c>
  405580:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  405584:	add	x8, x8, #0xdd4
  405588:	ldr	w9, [x8]
  40558c:	add	w9, w9, #0x1
  405590:	str	w9, [x8]
  405594:	b	405688 <main@@Base+0x17c>
  405598:	ldr	x8, [sp, #16]
  40559c:	ldr	x0, [x8, #8]
  4055a0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4055a4:	add	x1, x1, #0x33b
  4055a8:	bl	4087fc <matches@@Base>
  4055ac:	and	w9, w0, #0x1
  4055b0:	cbnz	w9, 4055cc <main@@Base+0xc0>
  4055b4:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  4055b8:	add	x8, x8, #0xdd0
  4055bc:	ldr	w9, [x8]
  4055c0:	add	w9, w9, #0x1
  4055c4:	str	w9, [x8]
  4055c8:	b	405688 <main@@Base+0x17c>
  4055cc:	ldr	x8, [sp, #16]
  4055d0:	ldr	x0, [x8, #8]
  4055d4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4055d8:	add	x1, x1, #0x344
  4055dc:	bl	4087fc <matches@@Base>
  4055e0:	and	w9, w0, #0x1
  4055e4:	cbnz	w9, 405600 <main@@Base+0xf4>
  4055e8:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  4055ec:	add	x8, x8, #0xdd8
  4055f0:	ldr	w9, [x8]
  4055f4:	add	w9, w9, #0x1
  4055f8:	str	w9, [x8]
  4055fc:	b	405688 <main@@Base+0x17c>
  405600:	ldr	x8, [sp, #16]
  405604:	ldr	x0, [x8, #8]
  405608:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40560c:	add	x1, x1, #0x349
  405610:	bl	4087fc <matches@@Base>
  405614:	and	w9, w0, #0x1
  405618:	cbnz	w9, 40563c <main@@Base+0x130>
  40561c:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405620:	add	x0, x0, #0x352
  405624:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405628:	add	x1, x1, #0x4a2
  40562c:	bl	405370 <printf@plt>
  405630:	mov	w8, wzr
  405634:	mov	w0, w8
  405638:	bl	404e90 <exit@plt>
  40563c:	ldr	x8, [sp, #16]
  405640:	ldr	x0, [x8, #8]
  405644:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405648:	add	x1, x1, #0x36f
  40564c:	bl	4087fc <matches@@Base>
  405650:	and	w9, w0, #0x1
  405654:	cbnz	w9, 40565c <main@@Base+0x150>
  405658:	bl	40572c <main@@Base+0x220>
  40565c:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405660:	add	x8, x8, #0x360
  405664:	ldr	x0, [x8]
  405668:	ldr	x8, [sp, #16]
  40566c:	ldr	x2, [x8, #8]
  405670:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405674:	add	x1, x1, #0x375
  405678:	bl	4053c0 <fprintf@plt>
  40567c:	mov	w9, #0xffffffff            	// #-1
  405680:	mov	w0, w9
  405684:	bl	404e90 <exit@plt>
  405688:	ldur	w8, [x29, #-8]
  40568c:	subs	w8, w8, #0x1
  405690:	stur	w8, [x29, #-8]
  405694:	ldr	x9, [sp, #16]
  405698:	add	x9, x9, #0x8
  40569c:	str	x9, [sp, #16]
  4056a0:	b	405524 <main@@Base+0x18>
  4056a4:	ldur	w8, [x29, #-8]
  4056a8:	cmp	w8, #0x1
  4056ac:	b.le	405728 <main@@Base+0x21c>
  4056b0:	ldr	x8, [sp, #16]
  4056b4:	ldr	x0, [x8, #8]
  4056b8:	bl	405768 <main@@Base+0x25c>
  4056bc:	str	x0, [sp, #8]
  4056c0:	ldr	x8, [sp, #8]
  4056c4:	cbnz	x8, 4056f4 <main@@Base+0x1e8>
  4056c8:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  4056cc:	add	x8, x8, #0x360
  4056d0:	ldr	x0, [x8]
  4056d4:	ldr	x8, [sp, #16]
  4056d8:	ldr	x2, [x8, #8]
  4056dc:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4056e0:	add	x1, x1, #0x3a0
  4056e4:	bl	4053c0 <fprintf@plt>
  4056e8:	mov	w9, #0xffffffff            	// #-1
  4056ec:	mov	w0, w9
  4056f0:	bl	404e90 <exit@plt>
  4056f4:	ldr	x8, [sp, #8]
  4056f8:	ldr	x8, [x8, #24]
  4056fc:	ldr	x0, [sp, #8]
  405700:	ldur	w9, [x29, #-8]
  405704:	subs	w1, w9, #0x1
  405708:	ldr	x10, [sp, #16]
  40570c:	add	x2, x10, #0x8
  405710:	blr	x8
  405714:	str	w0, [sp, #4]
  405718:	ldr	w0, [sp, #4]
  40571c:	ldp	x29, x30, [sp, #32]
  405720:	add	sp, sp, #0x30
  405724:	ret
  405728:	bl	40572c <main@@Base+0x220>
  40572c:	sub	sp, sp, #0x20
  405730:	stp	x29, x30, [sp, #16]
  405734:	add	x29, sp, #0x10
  405738:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  40573c:	add	x8, x8, #0x360
  405740:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405744:	add	x1, x1, #0x3ad
  405748:	mov	w0, #0xffffffff            	// #-1
  40574c:	ldr	x8, [x8]
  405750:	stur	w0, [x29, #-4]
  405754:	mov	x0, x8
  405758:	bl	4053c0 <fprintf@plt>
  40575c:	ldur	w9, [x29, #-4]
  405760:	mov	w0, w9
  405764:	bl	404e90 <exit@plt>
  405768:	sub	sp, sp, #0x160
  40576c:	stp	x29, x30, [sp, #320]
  405770:	str	x28, [sp, #336]
  405774:	add	x29, sp, #0x140
  405778:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  40577c:	add	x8, x8, #0x378
  405780:	stur	x0, [x29, #-16]
  405784:	ldr	x9, [x8]
  405788:	str	x9, [sp, #32]
  40578c:	str	x8, [sp, #24]
  405790:	ldr	x8, [sp, #32]
  405794:	cbz	x8, 4057c8 <main@@Base+0x2bc>
  405798:	ldr	x8, [sp, #32]
  40579c:	add	x0, x8, #0x8
  4057a0:	ldur	x1, [x29, #-16]
  4057a4:	bl	405190 <strcmp@plt>
  4057a8:	cbnz	w0, 4057b8 <main@@Base+0x2ac>
  4057ac:	ldr	x8, [sp, #32]
  4057b0:	stur	x8, [x29, #-8]
  4057b4:	b	405904 <main@@Base+0x3f8>
  4057b8:	ldr	x8, [sp, #32]
  4057bc:	ldr	x8, [x8]
  4057c0:	str	x8, [sp, #32]
  4057c4:	b	405790 <main@@Base+0x284>
  4057c8:	ldur	x3, [x29, #-16]
  4057cc:	add	x8, sp, #0x28
  4057d0:	mov	x0, x8
  4057d4:	mov	x1, #0x100                 	// #256
  4057d8:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4057dc:	add	x2, x2, #0x445
  4057e0:	str	x8, [sp, #16]
  4057e4:	bl	404f90 <snprintf@plt>
  4057e8:	ldr	x8, [sp, #16]
  4057ec:	mov	x0, x8
  4057f0:	mov	w1, #0x1                   	// #1
  4057f4:	bl	404f80 <dlopen@plt>
  4057f8:	stur	x0, [x29, #-24]
  4057fc:	ldur	x8, [x29, #-24]
  405800:	cbnz	x8, 405848 <main@@Base+0x33c>
  405804:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405808:	add	x8, x8, #0x380
  40580c:	ldr	x8, [x8]
  405810:	stur	x8, [x29, #-24]
  405814:	ldur	x8, [x29, #-24]
  405818:	cbnz	x8, 405848 <main@@Base+0x33c>
  40581c:	mov	x8, xzr
  405820:	mov	x0, x8
  405824:	mov	w1, #0x1                   	// #1
  405828:	bl	404f80 <dlopen@plt>
  40582c:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405830:	add	x8, x8, #0x380
  405834:	str	x0, [x8]
  405838:	stur	x0, [x29, #-24]
  40583c:	ldur	x8, [x29, #-24]
  405840:	cbnz	x8, 405848 <main@@Base+0x33c>
  405844:	b	4058ac <main@@Base+0x3a0>
  405848:	ldur	x3, [x29, #-16]
  40584c:	add	x8, sp, #0x28
  405850:	mov	x0, x8
  405854:	mov	x1, #0x100                 	// #256
  405858:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40585c:	add	x2, x2, #0x44b
  405860:	str	x8, [sp, #8]
  405864:	bl	404f90 <snprintf@plt>
  405868:	ldur	x8, [x29, #-24]
  40586c:	mov	x0, x8
  405870:	ldr	x1, [sp, #8]
  405874:	bl	405020 <dlsym@plt>
  405878:	str	x0, [sp, #32]
  40587c:	ldr	x8, [sp, #32]
  405880:	cbnz	x8, 405888 <main@@Base+0x37c>
  405884:	b	4058ac <main@@Base+0x3a0>
  405888:	ldr	x8, [sp, #24]
  40588c:	ldr	x9, [x8]
  405890:	ldr	x10, [sp, #32]
  405894:	str	x9, [x10]
  405898:	ldr	x9, [sp, #32]
  40589c:	str	x9, [x8]
  4058a0:	ldr	x9, [sp, #32]
  4058a4:	stur	x9, [x29, #-8]
  4058a8:	b	405904 <main@@Base+0x3f8>
  4058ac:	mov	x0, #0x1                   	// #1
  4058b0:	mov	x1, #0x28                  	// #40
  4058b4:	bl	4050a0 <calloc@plt>
  4058b8:	str	x0, [sp, #32]
  4058bc:	ldr	x8, [sp, #32]
  4058c0:	cbz	x8, 4058fc <main@@Base+0x3f0>
  4058c4:	ldr	x8, [sp, #32]
  4058c8:	add	x0, x8, #0x8
  4058cc:	ldur	x1, [x29, #-16]
  4058d0:	mov	x2, #0xf                   	// #15
  4058d4:	bl	405340 <strncpy@plt>
  4058d8:	ldr	x8, [sp, #32]
  4058dc:	adrp	x9, 405000 <malloc@plt>
  4058e0:	add	x9, x9, #0x918
  4058e4:	str	x9, [x8, #24]
  4058e8:	ldr	x8, [sp, #32]
  4058ec:	adrp	x9, 405000 <malloc@plt>
  4058f0:	add	x9, x9, #0x980
  4058f4:	str	x9, [x8, #32]
  4058f8:	b	405888 <main@@Base+0x37c>
  4058fc:	ldr	x8, [sp, #32]
  405900:	stur	x8, [x29, #-8]
  405904:	ldur	x0, [x29, #-8]
  405908:	ldr	x28, [sp, #336]
  40590c:	ldp	x29, x30, [sp, #320]
  405910:	add	sp, sp, #0x160
  405914:	ret
  405918:	sub	sp, sp, #0x30
  40591c:	stp	x29, x30, [sp, #32]
  405920:	add	x29, sp, #0x20
  405924:	str	x0, [sp, #16]
  405928:	str	w1, [sp, #12]
  40592c:	str	x2, [sp]
  405930:	ldr	w8, [sp, #12]
  405934:	cbz	w8, 40596c <main@@Base+0x460>
  405938:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  40593c:	add	x8, x8, #0x360
  405940:	ldr	x0, [x8]
  405944:	ldr	x8, [sp, #16]
  405948:	add	x2, x8, #0x8
  40594c:	ldr	x8, [sp]
  405950:	ldr	x3, [x8]
  405954:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405958:	add	x1, x1, #0x458
  40595c:	bl	4053c0 <fprintf@plt>
  405960:	mov	w9, #0xffffffff            	// #-1
  405964:	stur	w9, [x29, #-4]
  405968:	b	405970 <main@@Base+0x464>
  40596c:	stur	wzr, [x29, #-4]
  405970:	ldur	w0, [x29, #-4]
  405974:	ldp	x29, x30, [sp, #32]
  405978:	add	sp, sp, #0x30
  40597c:	ret
  405980:	sub	sp, sp, #0x30
  405984:	stp	x29, x30, [sp, #32]
  405988:	add	x29, sp, #0x20
  40598c:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405990:	add	x8, x8, #0x48c
  405994:	mov	w9, wzr
  405998:	stur	x0, [x29, #-8]
  40599c:	str	x1, [sp, #16]
  4059a0:	ldr	x0, [sp, #16]
  4059a4:	mov	x1, x8
  4059a8:	str	w9, [sp, #12]
  4059ac:	bl	4053c0 <fprintf@plt>
  4059b0:	ldr	w9, [sp, #12]
  4059b4:	mov	w0, w9
  4059b8:	ldp	x29, x30, [sp, #32]
  4059bc:	add	sp, sp, #0x30
  4059c0:	ret
  4059c4:	sub	sp, sp, #0x30
  4059c8:	stp	x29, x30, [sp, #32]
  4059cc:	add	x29, sp, #0x20
  4059d0:	str	x0, [sp, #16]
  4059d4:	str	w1, [sp, #12]
  4059d8:	str	x2, [sp]
  4059dc:	ldr	x8, [sp]
  4059e0:	add	x8, x8, #0x8
  4059e4:	str	x8, [sp]
  4059e8:	ldr	w9, [sp, #12]
  4059ec:	subs	w9, w9, #0x1
  4059f0:	str	w9, [sp, #12]
  4059f4:	cmp	w9, #0x0
  4059f8:	cset	w9, gt
  4059fc:	tbnz	w9, #0, 405a24 <main@@Base+0x518>
  405a00:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405a04:	add	x8, x8, #0x360
  405a08:	ldr	x0, [x8]
  405a0c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405a10:	add	x1, x1, #0x4a9
  405a14:	bl	4053c0 <fprintf@plt>
  405a18:	mov	w9, #0xffffffff            	// #-1
  405a1c:	stur	w9, [x29, #-4]
  405a20:	b	405b60 <main@@Base+0x654>
  405a24:	ldr	x8, [sp]
  405a28:	ldr	x0, [x8]
  405a2c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405a30:	add	x1, x1, #0x4c2
  405a34:	bl	4087fc <matches@@Base>
  405a38:	and	w9, w0, #0x1
  405a3c:	cbnz	w9, 405a5c <main@@Base+0x550>
  405a40:	ldr	w8, [sp, #12]
  405a44:	subs	w0, w8, #0x1
  405a48:	ldr	x9, [sp]
  405a4c:	add	x1, x9, #0x8
  405a50:	bl	405ba4 <main@@Base+0x698>
  405a54:	stur	w0, [x29, #-4]
  405a58:	b	405b60 <main@@Base+0x654>
  405a5c:	ldr	x8, [sp]
  405a60:	ldr	x0, [x8]
  405a64:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405a68:	add	x1, x1, #0x4ca
  405a6c:	bl	4087fc <matches@@Base>
  405a70:	and	w9, w0, #0x1
  405a74:	cbnz	w9, 405a98 <main@@Base+0x58c>
  405a78:	ldr	w8, [sp, #12]
  405a7c:	subs	w1, w8, #0x1
  405a80:	ldr	x9, [sp]
  405a84:	add	x2, x9, #0x8
  405a88:	mov	w0, #0x3                   	// #3
  405a8c:	bl	405c60 <main@@Base+0x754>
  405a90:	stur	w0, [x29, #-4]
  405a94:	b	405b60 <main@@Base+0x654>
  405a98:	ldr	x8, [sp]
  405a9c:	ldr	x0, [x8]
  405aa0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405aa4:	add	x1, x1, #0x4ce
  405aa8:	bl	4087fc <matches@@Base>
  405aac:	and	w9, w0, #0x1
  405ab0:	cbz	w9, 405aec <main@@Base+0x5e0>
  405ab4:	ldr	x8, [sp]
  405ab8:	ldr	x0, [x8]
  405abc:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405ac0:	add	x1, x1, #0x4d3
  405ac4:	bl	4087fc <matches@@Base>
  405ac8:	and	w9, w0, #0x1
  405acc:	cbz	w9, 405aec <main@@Base+0x5e0>
  405ad0:	ldr	x8, [sp]
  405ad4:	ldr	x0, [x8]
  405ad8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405adc:	add	x1, x1, #0x4d8
  405ae0:	bl	4087fc <matches@@Base>
  405ae4:	and	w9, w0, #0x1
  405ae8:	cbnz	w9, 405b10 <main@@Base+0x604>
  405aec:	ldr	w8, [sp, #12]
  405af0:	subs	w1, w8, #0x1
  405af4:	ldr	x9, [sp]
  405af8:	add	x2, x9, #0x8
  405afc:	mov	w8, wzr
  405b00:	mov	w0, w8
  405b04:	bl	405c60 <main@@Base+0x754>
  405b08:	stur	w0, [x29, #-4]
  405b0c:	b	405b60 <main@@Base+0x654>
  405b10:	ldr	x8, [sp]
  405b14:	ldr	x0, [x8]
  405b18:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405b1c:	add	x1, x1, #0x370
  405b20:	bl	4087fc <matches@@Base>
  405b24:	and	w9, w0, #0x1
  405b28:	cbnz	w9, 405b38 <main@@Base+0x62c>
  405b2c:	bl	406034 <main@@Base+0xb28>
  405b30:	stur	w0, [x29, #-4]
  405b34:	b	405b60 <main@@Base+0x654>
  405b38:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405b3c:	add	x8, x8, #0x360
  405b40:	ldr	x0, [x8]
  405b44:	ldr	x8, [sp]
  405b48:	ldr	x2, [x8]
  405b4c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405b50:	add	x1, x1, #0x4dc
  405b54:	bl	4053c0 <fprintf@plt>
  405b58:	mov	w9, #0xffffffff            	// #-1
  405b5c:	stur	w9, [x29, #-4]
  405b60:	ldur	w0, [x29, #-4]
  405b64:	ldp	x29, x30, [sp, #32]
  405b68:	add	sp, sp, #0x30
  405b6c:	ret
  405b70:	sub	sp, sp, #0x20
  405b74:	stp	x29, x30, [sp, #16]
  405b78:	add	x29, sp, #0x10
  405b7c:	mov	x8, xzr
  405b80:	str	x0, [sp, #8]
  405b84:	str	x1, [sp]
  405b88:	ldr	x1, [sp, #8]
  405b8c:	ldr	x2, [sp]
  405b90:	mov	x0, x8
  405b94:	bl	4060f8 <main@@Base+0xbec>
  405b98:	ldp	x29, x30, [sp, #16]
  405b9c:	add	sp, sp, #0x20
  405ba0:	ret
  405ba4:	sub	sp, sp, #0x70
  405ba8:	stp	x29, x30, [sp, #96]
  405bac:	add	x29, sp, #0x60
  405bb0:	mov	w8, #0x10                  	// #16
  405bb4:	add	x9, sp, #0x18
  405bb8:	stur	w0, [x29, #-8]
  405bbc:	stur	x1, [x29, #-16]
  405bc0:	mov	w0, w8
  405bc4:	str	w8, [sp, #20]
  405bc8:	str	x9, [sp, #8]
  405bcc:	bl	406078 <main@@Base+0xb6c>
  405bd0:	ldr	x9, [sp, #8]
  405bd4:	str	w0, [sp, #4]
  405bd8:	mov	x0, x9
  405bdc:	ldr	w1, [sp, #4]
  405be0:	ldr	w2, [sp, #20]
  405be4:	bl	40e7f8 <rtnl_open_byproto@@Base>
  405be8:	cmp	w0, #0x0
  405bec:	cset	w8, ge  // ge = tcont
  405bf0:	tbnz	w8, #0, 405c18 <main@@Base+0x70c>
  405bf4:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405bf8:	add	x8, x8, #0x360
  405bfc:	ldr	x0, [x8]
  405c00:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405c04:	add	x1, x1, #0x50c
  405c08:	bl	4053c0 <fprintf@plt>
  405c0c:	mov	w9, #0xffffffff            	// #-1
  405c10:	stur	w9, [x29, #-4]
  405c14:	b	405c50 <main@@Base+0x744>
  405c18:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405c1c:	add	x8, x8, #0x368
  405c20:	ldr	x2, [x8]
  405c24:	add	x0, sp, #0x18
  405c28:	adrp	x1, 406000 <main@@Base+0xaf4>
  405c2c:	add	x1, x1, #0xf8
  405c30:	bl	41061c <rtnl_listen@@Base>
  405c34:	cmp	w0, #0x0
  405c38:	cset	w9, ge  // ge = tcont
  405c3c:	tbnz	w9, #0, 405c4c <main@@Base+0x740>
  405c40:	mov	w8, #0xffffffff            	// #-1
  405c44:	stur	w8, [x29, #-4]
  405c48:	b	405c50 <main@@Base+0x744>
  405c4c:	stur	wzr, [x29, #-4]
  405c50:	ldur	w0, [x29, #-4]
  405c54:	ldp	x29, x30, [sp, #96]
  405c58:	add	sp, sp, #0x70
  405c5c:	ret
  405c60:	stp	x29, x30, [sp, #-32]!
  405c64:	str	x28, [sp, #16]
  405c68:	mov	x29, sp
  405c6c:	sub	sp, sp, #0x1, lsl #12
  405c70:	sub	sp, sp, #0xe0
  405c74:	sub	x8, x29, #0x54
  405c78:	mov	w9, #0xffffffff            	// #-1
  405c7c:	mov	x10, #0x1014                	// #4116
  405c80:	mov	w11, #0x14                  	// #20
  405c84:	mov	w12, #0x10                  	// #16
  405c88:	mov	w13, #0x5                   	// #5
  405c8c:	mov	w14, #0x3                   	// #3
  405c90:	mov	x15, xzr
  405c94:	mov	w16, wzr
  405c98:	mov	w17, #0x10                  	// #16
  405c9c:	adrp	x18, 424000 <memcpy@GLIBC_2.17>
  405ca0:	add	x18, x18, #0x360
  405ca4:	sub	x3, x29, #0x50
  405ca8:	add	x4, sp, #0x68
  405cac:	str	w0, [x8, #76]
  405cb0:	str	w1, [x8, #72]
  405cb4:	stur	x2, [x8, #60]
  405cb8:	str	w9, [x8]
  405cbc:	mov	x0, x4
  405cc0:	mov	w1, w16
  405cc4:	mov	x2, x10
  405cc8:	str	x8, [sp, #72]
  405ccc:	str	w11, [sp, #68]
  405cd0:	str	w12, [sp, #64]
  405cd4:	str	w13, [sp, #60]
  405cd8:	str	w14, [sp, #56]
  405cdc:	str	x15, [sp, #48]
  405ce0:	str	w16, [sp, #44]
  405ce4:	str	w17, [sp, #40]
  405ce8:	str	x18, [sp, #32]
  405cec:	str	x3, [sp, #24]
  405cf0:	str	x4, [sp, #16]
  405cf4:	bl	405070 <memset@plt>
  405cf8:	ldr	w9, [sp, #68]
  405cfc:	str	w9, [sp, #104]
  405d00:	ldr	w11, [sp, #64]
  405d04:	ldr	x8, [sp, #16]
  405d08:	strh	w11, [x8, #4]
  405d0c:	ldr	w12, [sp, #60]
  405d10:	strh	w12, [x8, #6]
  405d14:	ldr	w13, [sp, #56]
  405d18:	strb	w13, [x8, #16]
  405d1c:	str	x8, [sp, #96]
  405d20:	ldr	x10, [sp, #48]
  405d24:	str	x10, [sp, #88]
  405d28:	ldr	x0, [sp, #24]
  405d2c:	ldr	w1, [sp, #44]
  405d30:	ldr	w2, [sp, #40]
  405d34:	bl	40e7f8 <rtnl_open_byproto@@Base>
  405d38:	cmp	w0, #0x0
  405d3c:	cset	w9, ge  // ge = tcont
  405d40:	tbnz	w9, #0, 405d64 <main@@Base+0x858>
  405d44:	ldr	x8, [sp, #32]
  405d48:	ldr	x0, [x8]
  405d4c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405d50:	add	x1, x1, #0x6e7
  405d54:	bl	4053c0 <fprintf@plt>
  405d58:	mov	w9, #0x1                   	// #1
  405d5c:	mov	w0, w9
  405d60:	bl	404e90 <exit@plt>
  405d64:	ldr	x8, [sp, #72]
  405d68:	ldr	w9, [x8, #76]
  405d6c:	cmp	w9, #0x3
  405d70:	b.ne	405f6c <main@@Base+0xa60>  // b.any
  405d74:	ldr	x8, [sp, #72]
  405d78:	ldr	w9, [x8, #72]
  405d7c:	cmp	w9, #0x2
  405d80:	b.eq	405da8 <main@@Base+0x89c>  // b.none
  405d84:	ldr	x8, [sp, #32]
  405d88:	ldr	x0, [x8]
  405d8c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405d90:	add	x1, x1, #0x70b
  405d94:	bl	4053c0 <fprintf@plt>
  405d98:	mov	w9, #0xffffffff            	// #-1
  405d9c:	ldr	x8, [sp, #72]
  405da0:	str	w9, [x8, #80]
  405da4:	b	406018 <main@@Base+0xb0c>
  405da8:	ldr	x8, [sp, #72]
  405dac:	ldur	x9, [x8, #60]
  405db0:	ldr	x0, [x9]
  405db4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405db8:	add	x1, x1, #0xcf3
  405dbc:	bl	4087fc <matches@@Base>
  405dc0:	and	w10, w0, #0x1
  405dc4:	cbnz	w10, 405e48 <main@@Base+0x93c>
  405dc8:	ldr	x8, [sp, #72]
  405dcc:	ldur	x9, [x8, #60]
  405dd0:	add	x9, x9, #0x8
  405dd4:	stur	x9, [x8, #60]
  405dd8:	ldr	w10, [x8, #72]
  405ddc:	subs	w10, w10, #0x1
  405de0:	str	w10, [x8, #72]
  405de4:	cmp	w10, #0x0
  405de8:	cset	w10, gt
  405dec:	tbnz	w10, #0, 405df4 <main@@Base+0x8e8>
  405df0:	bl	408470 <incomplete_command@@Base>
  405df4:	ldr	x8, [sp, #72]
  405df8:	ldur	x9, [x8, #60]
  405dfc:	ldr	x1, [x9]
  405e00:	sub	x9, x29, #0x64
  405e04:	mov	x0, x9
  405e08:	mov	x2, #0x10                  	// #16
  405e0c:	str	x9, [sp, #8]
  405e10:	bl	40a3c4 <strlcpy@@Base>
  405e14:	ldr	x8, [sp, #96]
  405e18:	ldr	x9, [sp, #8]
  405e1c:	mov	x0, x9
  405e20:	str	x8, [sp]
  405e24:	bl	404e70 <strlen@plt>
  405e28:	add	x8, x0, #0x1
  405e2c:	ldr	x0, [sp]
  405e30:	mov	w1, #0x80                  	// #128
  405e34:	mov	w2, #0x2                   	// #2
  405e38:	ldr	x3, [sp, #8]
  405e3c:	mov	w4, w8
  405e40:	bl	410d20 <addattr_l@@Base>
  405e44:	b	405f00 <main@@Base+0x9f4>
  405e48:	ldr	x8, [sp, #72]
  405e4c:	ldur	x9, [x8, #60]
  405e50:	ldr	x0, [x9]
  405e54:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405e58:	add	x1, x1, #0xda6
  405e5c:	bl	4087fc <matches@@Base>
  405e60:	and	w10, w0, #0x1
  405e64:	cbnz	w10, 405ee8 <main@@Base+0x9dc>
  405e68:	ldr	x8, [sp, #72]
  405e6c:	ldur	x9, [x8, #60]
  405e70:	add	x9, x9, #0x8
  405e74:	stur	x9, [x8, #60]
  405e78:	ldr	w10, [x8, #72]
  405e7c:	subs	w10, w10, #0x1
  405e80:	str	w10, [x8, #72]
  405e84:	cmp	w10, #0x0
  405e88:	cset	w10, gt
  405e8c:	tbnz	w10, #0, 405e94 <main@@Base+0x988>
  405e90:	bl	408470 <incomplete_command@@Base>
  405e94:	ldr	x8, [sp, #72]
  405e98:	ldur	x9, [x8, #60]
  405e9c:	ldr	x1, [x9]
  405ea0:	add	x0, sp, #0x56
  405ea4:	mov	w10, wzr
  405ea8:	mov	w2, w10
  405eac:	bl	4072d8 <get_u16@@Base>
  405eb0:	cbz	w0, 405ecc <main@@Base+0x9c0>
  405eb4:	ldr	x8, [sp, #32]
  405eb8:	ldr	x0, [x8]
  405ebc:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405ec0:	add	x1, x1, #0x723
  405ec4:	bl	4053c0 <fprintf@plt>
  405ec8:	b	405ffc <main@@Base+0xaf0>
  405ecc:	ldr	x0, [sp, #96]
  405ed0:	mov	w1, #0x80                  	// #128
  405ed4:	mov	w2, #0x1                   	// #1
  405ed8:	add	x3, sp, #0x56
  405edc:	mov	w4, #0x2                   	// #2
  405ee0:	bl	410d20 <addattr_l@@Base>
  405ee4:	b	405f00 <main@@Base+0x9f4>
  405ee8:	ldr	x8, [sp, #32]
  405eec:	ldr	x0, [x8]
  405ef0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405ef4:	add	x1, x1, #0x731
  405ef8:	bl	4053c0 <fprintf@plt>
  405efc:	b	405ffc <main@@Base+0xaf0>
  405f00:	ldr	x1, [sp, #96]
  405f04:	sub	x0, x29, #0x50
  405f08:	add	x2, sp, #0x58
  405f0c:	bl	40ff04 <rtnl_talk@@Base>
  405f10:	cmp	w0, #0x0
  405f14:	cset	w8, ge  // ge = tcont
  405f18:	tbnz	w8, #0, 405f34 <main@@Base+0xa28>
  405f1c:	ldr	x8, [sp, #32]
  405f20:	ldr	x0, [x8]
  405f24:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405f28:	add	x1, x1, #0x73f
  405f2c:	bl	4053c0 <fprintf@plt>
  405f30:	b	405ffc <main@@Base+0xaf0>
  405f34:	ldr	x0, [sp, #88]
  405f38:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405f3c:	add	x8, x8, #0x368
  405f40:	ldr	x1, [x8]
  405f44:	bl	405b70 <main@@Base+0x664>
  405f48:	cmp	w0, #0x0
  405f4c:	cset	w9, ge  // ge = tcont
  405f50:	tbnz	w9, #0, 405f6c <main@@Base+0xa60>
  405f54:	ldr	x8, [sp, #32]
  405f58:	ldr	x0, [x8]
  405f5c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405f60:	add	x1, x1, #0x75c
  405f64:	bl	4053c0 <fprintf@plt>
  405f68:	b	405ffc <main@@Base+0xaf0>
  405f6c:	ldr	x8, [sp, #72]
  405f70:	ldr	w9, [x8, #76]
  405f74:	cbnz	w9, 405ff4 <main@@Base+0xae8>
  405f78:	ldr	x8, [sp, #96]
  405f7c:	mov	w9, #0x301                 	// #769
  405f80:	strh	w9, [x8, #6]
  405f84:	sub	x0, x29, #0x50
  405f88:	ldr	x8, [sp, #72]
  405f8c:	ldr	w9, [x8, #32]
  405f90:	add	w9, w9, #0x1
  405f94:	str	w9, [x8, #32]
  405f98:	str	w9, [x8, #36]
  405f9c:	ldr	x10, [sp, #96]
  405fa0:	str	w9, [x10, #8]
  405fa4:	ldr	x1, [sp, #96]
  405fa8:	ldr	x10, [sp, #96]
  405fac:	ldr	w2, [x10]
  405fb0:	bl	40f730 <rtnl_send@@Base>
  405fb4:	cmp	w0, #0x0
  405fb8:	cset	w9, ge  // ge = tcont
  405fbc:	tbnz	w9, #0, 405fd0 <main@@Base+0xac4>
  405fc0:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  405fc4:	add	x0, x0, #0x76d
  405fc8:	bl	404ea0 <perror@plt>
  405fcc:	b	405ffc <main@@Base+0xaf0>
  405fd0:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  405fd4:	add	x8, x8, #0x368
  405fd8:	ldr	x2, [x8]
  405fdc:	sub	x0, x29, #0x50
  405fe0:	adrp	x1, 405000 <malloc@plt>
  405fe4:	add	x1, x1, #0xb70
  405fe8:	mov	w9, wzr
  405fec:	mov	w3, w9
  405ff0:	bl	40fb08 <rtnl_dump_filter_nc@@Base>
  405ff4:	ldr	x8, [sp, #72]
  405ff8:	str	wzr, [x8]
  405ffc:	ldr	x0, [sp, #88]
  406000:	bl	405200 <free@plt>
  406004:	sub	x0, x29, #0x50
  406008:	bl	40e7b0 <rtnl_close@@Base>
  40600c:	ldr	x8, [sp, #72]
  406010:	ldr	w9, [x8]
  406014:	str	w9, [x8, #80]
  406018:	ldr	x8, [sp, #72]
  40601c:	ldr	w0, [x8, #80]
  406020:	add	sp, sp, #0x1, lsl #12
  406024:	add	sp, sp, #0xe0
  406028:	ldr	x28, [sp, #16]
  40602c:	ldp	x29, x30, [sp], #32
  406030:	ret
  406034:	sub	sp, sp, #0x20
  406038:	stp	x29, x30, [sp, #16]
  40603c:	add	x29, sp, #0x10
  406040:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  406044:	add	x8, x8, #0x360
  406048:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40604c:	add	x1, x1, #0x78a
  406050:	mov	w0, #0xffffffff            	// #-1
  406054:	ldr	x8, [x8]
  406058:	stur	w0, [x29, #-4]
  40605c:	mov	x0, x8
  406060:	bl	4053c0 <fprintf@plt>
  406064:	ldur	w9, [x29, #-4]
  406068:	mov	w0, w9
  40606c:	ldp	x29, x30, [sp, #16]
  406070:	add	sp, sp, #0x20
  406074:	ret
  406078:	sub	sp, sp, #0x20
  40607c:	stp	x29, x30, [sp, #16]
  406080:	add	x29, sp, #0x10
  406084:	stur	w0, [x29, #-4]
  406088:	ldur	w8, [x29, #-4]
  40608c:	cmp	w8, #0x1f
  406090:	b.ls	4060bc <main@@Base+0xbb0>  // b.plast
  406094:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  406098:	add	x8, x8, #0x360
  40609c:	ldr	x0, [x8]
  4060a0:	ldur	w2, [x29, #-4]
  4060a4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4060a8:	add	x1, x1, #0x52f
  4060ac:	bl	4053c0 <fprintf@plt>
  4060b0:	mov	w9, #0xffffffff            	// #-1
  4060b4:	mov	w0, w9
  4060b8:	bl	404e90 <exit@plt>
  4060bc:	ldur	w8, [x29, #-4]
  4060c0:	cbz	w8, 4060dc <main@@Base+0xbd0>
  4060c4:	ldur	w8, [x29, #-4]
  4060c8:	mov	w9, #0x1                   	// #1
  4060cc:	subs	w8, w8, #0x1
  4060d0:	lsl	w8, w9, w8
  4060d4:	str	w8, [sp, #8]
  4060d8:	b	4060e4 <main@@Base+0xbd8>
  4060dc:	mov	w8, wzr
  4060e0:	str	w8, [sp, #8]
  4060e4:	ldr	w8, [sp, #8]
  4060e8:	mov	w0, w8
  4060ec:	ldp	x29, x30, [sp, #16]
  4060f0:	add	sp, sp, #0x20
  4060f4:	ret
  4060f8:	stp	x29, x30, [sp, #-32]!
  4060fc:	str	x28, [sp, #16]
  406100:	mov	x29, sp
  406104:	sub	sp, sp, #0x1, lsl #12
  406108:	sub	sp, sp, #0xf0
  40610c:	sub	x8, x29, #0xb0
  406110:	mov	w9, #0x1                   	// #1
  406114:	adrp	x10, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406118:	add	x10, x10, #0x628
  40611c:	adrp	x11, 424000 <memcpy@GLIBC_2.17>
  406120:	add	x11, x11, #0x360
  406124:	str	x0, [x8, #160]
  406128:	str	x1, [x8, #152]
  40612c:	str	x2, [x8, #144]
  406130:	ldr	x12, [x8, #152]
  406134:	add	x12, x12, #0x10
  406138:	str	x12, [x8, #72]
  40613c:	ldr	x12, [x8, #152]
  406140:	ldr	w13, [x12]
  406144:	stur	w13, [x29, #-108]
  406148:	ldr	x12, [x8, #144]
  40614c:	str	x12, [x8, #48]
  406150:	stur	w9, [x29, #-132]
  406154:	ldr	x12, [x8, #152]
  406158:	ldrh	w9, [x12, #4]
  40615c:	cmp	w9, #0x10
  406160:	str	x8, [sp, #32]
  406164:	str	x10, [sp, #24]
  406168:	str	x11, [sp, #16]
  40616c:	b.eq	4061a0 <main@@Base+0xc94>  // b.none
  406170:	ldr	x8, [sp, #16]
  406174:	ldr	x0, [x8]
  406178:	ldr	x9, [sp, #32]
  40617c:	ldr	x10, [x9, #152]
  406180:	ldr	w2, [x10]
  406184:	ldr	x10, [x9, #152]
  406188:	ldrh	w3, [x10, #4]
  40618c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406190:	add	x1, x1, #0x551
  406194:	bl	4053c0 <fprintf@plt>
  406198:	stur	wzr, [x29, #-4]
  40619c:	b	406610 <main@@Base+0x1104>
  4061a0:	ldr	x8, [sp, #32]
  4061a4:	ldr	x9, [x8, #72]
  4061a8:	ldrb	w10, [x9]
  4061ac:	cmp	w10, #0x3
  4061b0:	b.eq	40622c <main@@Base+0xd20>  // b.none
  4061b4:	ldr	x8, [sp, #32]
  4061b8:	ldr	x9, [x8, #72]
  4061bc:	ldrb	w10, [x9]
  4061c0:	cmp	w10, #0x2
  4061c4:	b.eq	40622c <main@@Base+0xd20>  // b.none
  4061c8:	ldr	x8, [sp, #32]
  4061cc:	ldr	x9, [x8, #72]
  4061d0:	ldrb	w10, [x9]
  4061d4:	cmp	w10, #0x1
  4061d8:	b.eq	40622c <main@@Base+0xd20>  // b.none
  4061dc:	ldr	x8, [sp, #32]
  4061e0:	ldr	x9, [x8, #72]
  4061e4:	ldrb	w10, [x9]
  4061e8:	cmp	w10, #0x7
  4061ec:	b.eq	40622c <main@@Base+0xd20>  // b.none
  4061f0:	ldr	x8, [sp, #32]
  4061f4:	ldr	x9, [x8, #72]
  4061f8:	ldrb	w10, [x9]
  4061fc:	cmp	w10, #0x8
  406200:	b.eq	40622c <main@@Base+0xd20>  // b.none
  406204:	ldr	x8, [sp, #16]
  406208:	ldr	x0, [x8]
  40620c:	ldr	x9, [sp, #32]
  406210:	ldr	x10, [x9, #72]
  406214:	ldrb	w2, [x10]
  406218:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40621c:	add	x1, x1, #0x589
  406220:	bl	4053c0 <fprintf@plt>
  406224:	stur	wzr, [x29, #-4]
  406228:	b	406610 <main@@Base+0x1104>
  40622c:	ldursw	x8, [x29, #-108]
  406230:	subs	x8, x8, #0x14
  406234:	stur	w8, [x29, #-108]
  406238:	ldur	w8, [x29, #-108]
  40623c:	cmp	w8, #0x0
  406240:	cset	w8, ge  // ge = tcont
  406244:	tbnz	w8, #0, 40626c <main@@Base+0xd60>
  406248:	ldr	x8, [sp, #16]
  40624c:	ldr	x0, [x8]
  406250:	ldur	w2, [x29, #-108]
  406254:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406258:	add	x1, x1, #0x5a8
  40625c:	bl	4053c0 <fprintf@plt>
  406260:	mov	w9, #0xffffffff            	// #-1
  406264:	stur	w9, [x29, #-4]
  406268:	b	406610 <main@@Base+0x1104>
  40626c:	ldr	x8, [sp, #32]
  406270:	ldr	x9, [x8, #72]
  406274:	add	x9, x9, #0x4
  406278:	str	x9, [x8, #56]
  40627c:	ldr	x2, [x8, #56]
  406280:	ldur	w3, [x29, #-108]
  406284:	sub	x9, x29, #0x60
  406288:	mov	x0, x9
  40628c:	mov	w1, #0x7                   	// #7
  406290:	str	x9, [sp, #8]
  406294:	bl	4116ac <parse_rtattr@@Base>
  406298:	ldr	x8, [sp, #8]
  40629c:	ldr	x9, [x8, #16]
  4062a0:	cbz	x9, 4062cc <main@@Base+0xdc0>
  4062a4:	sub	x8, x29, #0x60
  4062a8:	ldr	x8, [x8, #16]
  4062ac:	add	x8, x8, #0x4
  4062b0:	ldr	x9, [sp, #32]
  4062b4:	str	x8, [x9, #32]
  4062b8:	ldr	x0, [x9, #48]
  4062bc:	ldr	x2, [x9, #32]
  4062c0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4062c4:	add	x1, x1, #0x5c9
  4062c8:	bl	4053c0 <fprintf@plt>
  4062cc:	sub	x8, x29, #0x60
  4062d0:	ldr	x8, [x8, #8]
  4062d4:	cbz	x8, 406304 <main@@Base+0xdf8>
  4062d8:	sub	x8, x29, #0x60
  4062dc:	ldr	x8, [x8, #8]
  4062e0:	add	x8, x8, #0x4
  4062e4:	ldr	x9, [sp, #32]
  4062e8:	str	x8, [x9, #24]
  4062ec:	ldr	x0, [x9, #48]
  4062f0:	ldr	x8, [x9, #24]
  4062f4:	ldrh	w2, [x8]
  4062f8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4062fc:	add	x1, x1, #0x5d4
  406300:	bl	4053c0 <fprintf@plt>
  406304:	sub	x8, x29, #0x60
  406308:	ldr	x8, [x8, #24]
  40630c:	cbz	x8, 40634c <main@@Base+0xe40>
  406310:	sub	x8, x29, #0x60
  406314:	ldr	x8, [x8, #24]
  406318:	add	x8, x8, #0x4
  40631c:	ldr	x9, [sp, #32]
  406320:	str	x8, [x9, #16]
  406324:	ldr	x0, [x9, #48]
  406328:	ldr	x8, [x9, #16]
  40632c:	ldr	w2, [x8]
  406330:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406334:	add	x1, x1, #0x5df
  406338:	bl	4053c0 <fprintf@plt>
  40633c:	ldr	x8, [sp, #32]
  406340:	ldr	x9, [x8, #16]
  406344:	ldr	w10, [x9]
  406348:	stur	w10, [x29, #-132]
  40634c:	sub	x8, x29, #0x60
  406350:	ldr	x8, [x8, #32]
  406354:	cbz	x8, 406384 <main@@Base+0xe78>
  406358:	sub	x8, x29, #0x60
  40635c:	ldr	x8, [x8, #32]
  406360:	add	x8, x8, #0x4
  406364:	ldr	x9, [sp, #32]
  406368:	str	x8, [x9, #8]
  40636c:	ldr	x0, [x9, #48]
  406370:	ldr	x8, [x9, #8]
  406374:	ldr	w2, [x8]
  406378:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40637c:	add	x1, x1, #0x5ef
  406380:	bl	4053c0 <fprintf@plt>
  406384:	sub	x8, x29, #0x60
  406388:	ldr	x8, [x8, #40]
  40638c:	cbz	x8, 4063bc <main@@Base+0xeb0>
  406390:	sub	x8, x29, #0x60
  406394:	ldr	x8, [x8, #40]
  406398:	add	x8, x8, #0x4
  40639c:	ldr	x9, [sp, #32]
  4063a0:	str	x8, [x9]
  4063a4:	ldr	x0, [x9, #48]
  4063a8:	ldr	x8, [x9]
  4063ac:	ldr	w2, [x8]
  4063b0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4063b4:	add	x1, x1, #0x601
  4063b8:	bl	4053c0 <fprintf@plt>
  4063bc:	ldr	x8, [sp, #32]
  4063c0:	ldr	x0, [x8, #48]
  4063c4:	ldr	x1, [sp, #24]
  4063c8:	bl	4053c0 <fprintf@plt>
  4063cc:	sub	x8, x29, #0x60
  4063d0:	ldr	x8, [x8, #48]
  4063d4:	cbz	x8, 4064e8 <main@@Base+0xfdc>
  4063d8:	str	wzr, [sp, #2108]
  4063dc:	sub	x8, x29, #0x60
  4063e0:	ldr	x9, [x8, #48]
  4063e4:	add	x2, x9, #0x4
  4063e8:	ldr	x8, [x8, #48]
  4063ec:	ldrh	w10, [x8]
  4063f0:	mov	w0, w10
  4063f4:	sxtw	x8, w0
  4063f8:	subs	x8, x8, #0x4
  4063fc:	add	x0, sp, #0x840
  406400:	mov	w1, #0x100                 	// #256
  406404:	mov	w3, w8
  406408:	bl	4116ac <parse_rtattr@@Base>
  40640c:	ldr	x9, [sp, #32]
  406410:	ldr	x11, [x9, #48]
  406414:	mov	x0, x11
  406418:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40641c:	add	x1, x1, #0x613
  406420:	bl	4053c0 <fprintf@plt>
  406424:	str	wzr, [sp, #2108]
  406428:	ldr	w8, [sp, #2108]
  40642c:	cmp	w8, #0x100
  406430:	b.ge	4064d8 <main@@Base+0xfcc>  // b.tcont
  406434:	ldrsw	x8, [sp, #2108]
  406438:	mov	x9, #0x8                   	// #8
  40643c:	mul	x8, x9, x8
  406440:	add	x9, sp, #0x840
  406444:	add	x8, x9, x8
  406448:	ldr	x8, [x8]
  40644c:	cbz	x8, 4064c8 <main@@Base+0xfbc>
  406450:	ldr	x8, [sp, #32]
  406454:	ldr	x0, [x8, #48]
  406458:	ldr	w2, [sp, #2108]
  40645c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406460:	add	x1, x1, #0x62a
  406464:	bl	4053c0 <fprintf@plt>
  406468:	ldr	x8, [sp, #32]
  40646c:	ldr	x9, [x8, #48]
  406470:	ldrsw	x10, [sp, #2108]
  406474:	mov	x11, #0x8                   	// #8
  406478:	mul	x10, x11, x10
  40647c:	add	x11, sp, #0x840
  406480:	add	x10, x11, x10
  406484:	ldr	x1, [x10]
  406488:	ldur	w2, [x29, #-132]
  40648c:	mov	x0, x9
  406490:	bl	406628 <main@@Base+0x111c>
  406494:	mov	w12, wzr
  406498:	cmp	w12, w0
  40649c:	cset	w12, le
  4064a0:	tbnz	w12, #0, 4064b8 <main@@Base+0xfac>
  4064a4:	ldr	x8, [sp, #32]
  4064a8:	ldr	x0, [x8, #48]
  4064ac:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4064b0:	add	x1, x1, #0x632
  4064b4:	bl	4053c0 <fprintf@plt>
  4064b8:	ldr	x8, [sp, #32]
  4064bc:	ldr	x0, [x8, #48]
  4064c0:	ldr	x1, [sp, #24]
  4064c4:	bl	4053c0 <fprintf@plt>
  4064c8:	ldr	w8, [sp, #2108]
  4064cc:	add	w8, w8, #0x1
  4064d0:	str	w8, [sp, #2108]
  4064d4:	b	406428 <main@@Base+0xf1c>
  4064d8:	ldr	x8, [sp, #32]
  4064dc:	ldr	x0, [x8, #48]
  4064e0:	ldr	x1, [sp, #24]
  4064e4:	bl	4053c0 <fprintf@plt>
  4064e8:	sub	x8, x29, #0x60
  4064ec:	ldr	x8, [x8, #56]
  4064f0:	cbz	x8, 406600 <main@@Base+0x10f4>
  4064f4:	sub	x8, x29, #0x60
  4064f8:	ldr	x9, [x8, #56]
  4064fc:	add	x2, x9, #0x4
  406500:	ldr	x8, [x8, #56]
  406504:	ldrh	w10, [x8]
  406508:	mov	w0, w10
  40650c:	sxtw	x8, w0
  406510:	subs	x8, x8, #0x4
  406514:	add	x0, sp, #0x30
  406518:	mov	w1, #0x100                 	// #256
  40651c:	mov	w3, w8
  406520:	bl	4116ac <parse_rtattr@@Base>
  406524:	ldr	x9, [sp, #32]
  406528:	ldr	x11, [x9, #48]
  40652c:	mov	x0, x11
  406530:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406534:	add	x1, x1, #0x64a
  406538:	bl	4053c0 <fprintf@plt>
  40653c:	str	wzr, [sp, #44]
  406540:	ldr	w8, [sp, #44]
  406544:	cmp	w8, #0x100
  406548:	b.ge	4065f0 <main@@Base+0x10e4>  // b.tcont
  40654c:	ldrsw	x8, [sp, #44]
  406550:	mov	x9, #0x8                   	// #8
  406554:	mul	x8, x9, x8
  406558:	add	x9, sp, #0x30
  40655c:	add	x8, x9, x8
  406560:	ldr	x8, [x8]
  406564:	cbz	x8, 4065e0 <main@@Base+0x10d4>
  406568:	ldr	x8, [sp, #32]
  40656c:	ldr	x0, [x8, #48]
  406570:	ldr	w2, [sp, #44]
  406574:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406578:	add	x1, x1, #0x62a
  40657c:	bl	4053c0 <fprintf@plt>
  406580:	ldr	x8, [sp, #32]
  406584:	ldr	x9, [x8, #48]
  406588:	ldrsw	x10, [sp, #44]
  40658c:	mov	x11, #0x8                   	// #8
  406590:	mul	x10, x11, x10
  406594:	add	x11, sp, #0x30
  406598:	add	x10, x11, x10
  40659c:	ldr	x1, [x10]
  4065a0:	ldur	w2, [x29, #-132]
  4065a4:	mov	x0, x9
  4065a8:	bl	406708 <main@@Base+0x11fc>
  4065ac:	mov	w12, wzr
  4065b0:	cmp	w12, w0
  4065b4:	cset	w12, le
  4065b8:	tbnz	w12, #0, 4065d0 <main@@Base+0x10c4>
  4065bc:	ldr	x8, [sp, #32]
  4065c0:	ldr	x0, [x8, #48]
  4065c4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4065c8:	add	x1, x1, #0x65e
  4065cc:	bl	4053c0 <fprintf@plt>
  4065d0:	ldr	x8, [sp, #32]
  4065d4:	ldr	x0, [x8, #48]
  4065d8:	ldr	x1, [sp, #24]
  4065dc:	bl	4053c0 <fprintf@plt>
  4065e0:	ldr	w8, [sp, #44]
  4065e4:	add	w8, w8, #0x1
  4065e8:	str	w8, [sp, #44]
  4065ec:	b	406540 <main@@Base+0x1034>
  4065f0:	ldr	x8, [sp, #32]
  4065f4:	ldr	x0, [x8, #48]
  4065f8:	ldr	x1, [sp, #24]
  4065fc:	bl	4053c0 <fprintf@plt>
  406600:	ldr	x8, [sp, #32]
  406604:	ldr	x0, [x8, #48]
  406608:	bl	405280 <fflush@plt>
  40660c:	stur	wzr, [x29, #-4]
  406610:	ldur	w0, [x29, #-4]
  406614:	add	sp, sp, #0x1, lsl #12
  406618:	add	sp, sp, #0xf0
  40661c:	ldr	x28, [sp, #16]
  406620:	ldp	x29, x30, [sp], #32
  406624:	ret
  406628:	sub	sp, sp, #0x60
  40662c:	stp	x29, x30, [sp, #80]
  406630:	add	x29, sp, #0x50
  406634:	stur	x0, [x29, #-16]
  406638:	stur	x1, [x29, #-24]
  40663c:	stur	w2, [x29, #-28]
  406640:	ldur	x8, [x29, #-24]
  406644:	cbnz	x8, 406654 <main@@Base+0x1148>
  406648:	mov	w8, #0xffffffff            	// #-1
  40664c:	stur	w8, [x29, #-4]
  406650:	b	4066f8 <main@@Base+0x11ec>
  406654:	ldur	x8, [x29, #-24]
  406658:	add	x2, x8, #0x4
  40665c:	ldur	x8, [x29, #-24]
  406660:	ldrh	w9, [x8]
  406664:	mov	w0, w9
  406668:	sxtw	x8, w0
  40666c:	subs	x8, x8, #0x4
  406670:	add	x10, sp, #0x18
  406674:	mov	x0, x10
  406678:	mov	w1, #0x2                   	// #2
  40667c:	mov	w3, w8
  406680:	str	x10, [sp]
  406684:	bl	4116ac <parse_rtattr@@Base>
  406688:	ldr	x10, [sp]
  40668c:	ldr	x11, [x10, #8]
  406690:	cbz	x11, 4066bc <main@@Base+0x11b0>
  406694:	add	x8, sp, #0x18
  406698:	ldr	x8, [x8, #8]
  40669c:	add	x8, x8, #0x4
  4066a0:	str	x8, [sp, #16]
  4066a4:	ldur	x0, [x29, #-16]
  4066a8:	ldr	x8, [sp, #16]
  4066ac:	ldr	w2, [x8]
  4066b0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4066b4:	add	x1, x1, #0x674
  4066b8:	bl	4053c0 <fprintf@plt>
  4066bc:	add	x8, sp, #0x18
  4066c0:	ldr	x8, [x8, #16]
  4066c4:	cbz	x8, 4066f4 <main@@Base+0x11e8>
  4066c8:	ldur	w8, [x29, #-28]
  4066cc:	cmp	w8, #0x2
  4066d0:	b.cc	4066f4 <main@@Base+0x11e8>  // b.lo, b.ul, b.last
  4066d4:	add	x8, sp, #0x18
  4066d8:	ldr	x8, [x8, #16]
  4066dc:	add	x8, x8, #0x4
  4066e0:	str	x8, [sp, #8]
  4066e4:	ldur	x0, [x29, #-16]
  4066e8:	ldr	x8, [sp, #8]
  4066ec:	ldr	w1, [x8]
  4066f0:	bl	4067e0 <main@@Base+0x12d4>
  4066f4:	stur	wzr, [x29, #-4]
  4066f8:	ldur	w0, [x29, #-4]
  4066fc:	ldp	x29, x30, [sp, #80]
  406700:	add	sp, sp, #0x60
  406704:	ret
  406708:	sub	sp, sp, #0x60
  40670c:	stp	x29, x30, [sp, #80]
  406710:	add	x29, sp, #0x50
  406714:	stur	x0, [x29, #-16]
  406718:	stur	x1, [x29, #-24]
  40671c:	stur	w2, [x29, #-28]
  406720:	ldur	x8, [x29, #-24]
  406724:	cbnz	x8, 406734 <main@@Base+0x1228>
  406728:	mov	w8, #0xffffffff            	// #-1
  40672c:	stur	w8, [x29, #-4]
  406730:	b	4067d0 <main@@Base+0x12c4>
  406734:	ldur	x8, [x29, #-24]
  406738:	add	x2, x8, #0x4
  40673c:	ldur	x8, [x29, #-24]
  406740:	ldrh	w9, [x8]
  406744:	mov	w0, w9
  406748:	sxtw	x8, w0
  40674c:	subs	x8, x8, #0x4
  406750:	add	x10, sp, #0x18
  406754:	mov	x0, x10
  406758:	mov	w1, #0x2                   	// #2
  40675c:	mov	w3, w8
  406760:	str	x10, [sp]
  406764:	bl	4116ac <parse_rtattr@@Base>
  406768:	ldr	x10, [sp]
  40676c:	ldr	x11, [x10, #16]
  406770:	cbz	x11, 40679c <main@@Base+0x1290>
  406774:	add	x8, sp, #0x18
  406778:	ldr	x8, [x8, #16]
  40677c:	add	x8, x8, #0x4
  406780:	str	x8, [sp, #16]
  406784:	ldur	x0, [x29, #-16]
  406788:	ldr	x8, [sp, #16]
  40678c:	ldr	w2, [x8]
  406790:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406794:	add	x1, x1, #0x674
  406798:	bl	4053c0 <fprintf@plt>
  40679c:	add	x8, sp, #0x18
  4067a0:	ldr	x8, [x8, #8]
  4067a4:	cbz	x8, 4067cc <main@@Base+0x12c0>
  4067a8:	add	x8, sp, #0x18
  4067ac:	ldr	x8, [x8, #8]
  4067b0:	add	x8, x8, #0x4
  4067b4:	str	x8, [sp, #8]
  4067b8:	ldur	x0, [x29, #-16]
  4067bc:	ldr	x2, [sp, #8]
  4067c0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4067c4:	add	x1, x1, #0x6dc
  4067c8:	bl	4053c0 <fprintf@plt>
  4067cc:	stur	wzr, [x29, #-4]
  4067d0:	ldur	w0, [x29, #-4]
  4067d4:	ldp	x29, x30, [sp, #80]
  4067d8:	add	sp, sp, #0x60
  4067dc:	ret
  4067e0:	sub	sp, sp, #0x20
  4067e4:	stp	x29, x30, [sp, #16]
  4067e8:	add	x29, sp, #0x10
  4067ec:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4067f0:	add	x8, x8, #0x67e
  4067f4:	str	x0, [sp, #8]
  4067f8:	str	w1, [sp, #4]
  4067fc:	ldr	x0, [sp, #8]
  406800:	ldr	w2, [sp, #4]
  406804:	mov	x1, x8
  406808:	bl	4053c0 <fprintf@plt>
  40680c:	ldr	w9, [sp, #4]
  406810:	cbnz	w9, 406828 <main@@Base+0x131c>
  406814:	ldr	x0, [sp, #8]
  406818:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40681c:	add	x1, x1, #0x628
  406820:	bl	4053c0 <fprintf@plt>
  406824:	b	4068b8 <main@@Base+0x13ac>
  406828:	ldr	x0, [sp, #8]
  40682c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406830:	add	x1, x1, #0x698
  406834:	bl	4053c0 <fprintf@plt>
  406838:	ldr	w8, [sp, #4]
  40683c:	and	w8, w8, #0x1
  406840:	cbz	w8, 406854 <main@@Base+0x1348>
  406844:	ldr	x0, [sp, #8]
  406848:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40684c:	add	x1, x1, #0x69c
  406850:	bl	4053c0 <fprintf@plt>
  406854:	ldr	w8, [sp, #4]
  406858:	and	w8, w8, #0x2
  40685c:	cbz	w8, 406870 <main@@Base+0x1364>
  406860:	ldr	x0, [sp, #8]
  406864:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406868:	add	x1, x1, #0x6b8
  40686c:	bl	4053c0 <fprintf@plt>
  406870:	ldr	w8, [sp, #4]
  406874:	and	w8, w8, #0x4
  406878:	cbz	w8, 40688c <main@@Base+0x1380>
  40687c:	ldr	x0, [sp, #8]
  406880:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406884:	add	x1, x1, #0x6c3
  406888:	bl	4053c0 <fprintf@plt>
  40688c:	ldr	w8, [sp, #4]
  406890:	and	w8, w8, #0x8
  406894:	cbz	w8, 4068a8 <main@@Base+0x139c>
  406898:	ldr	x0, [sp, #8]
  40689c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4068a0:	add	x1, x1, #0x6d0
  4068a4:	bl	4053c0 <fprintf@plt>
  4068a8:	ldr	x0, [sp, #8]
  4068ac:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4068b0:	add	x1, x1, #0x628
  4068b4:	bl	4053c0 <fprintf@plt>
  4068b8:	ldp	x29, x30, [sp, #16]
  4068bc:	add	sp, sp, #0x20
  4068c0:	ret

00000000004068c4 <read_prop@@Base>:
  4068c4:	sub	sp, sp, #0x170
  4068c8:	stp	x29, x30, [sp, #336]
  4068cc:	str	x28, [sp, #352]
  4068d0:	add	x29, sp, #0x150
  4068d4:	sub	x8, x29, #0x20
  4068d8:	mov	x9, #0x80                  	// #128
  4068dc:	adrp	x10, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4068e0:	add	x10, x10, #0x959
  4068e4:	adrp	x11, 423000 <_IO_stdin_used@@Base+0x10cf0>
  4068e8:	ldr	x11, [x11, #3992]
  4068ec:	sub	x12, x29, #0xa0
  4068f0:	str	x0, [x8, #16]
  4068f4:	str	x1, [x8, #8]
  4068f8:	str	x2, [x8]
  4068fc:	ldr	x3, [x8, #16]
  406900:	ldr	x4, [x8, #8]
  406904:	mov	x0, x12
  406908:	mov	x1, x9
  40690c:	mov	x2, x10
  406910:	str	x8, [sp, #48]
  406914:	str	x11, [sp, #40]
  406918:	bl	404f90 <snprintf@plt>
  40691c:	str	w0, [sp, #60]
  406920:	ldr	w13, [sp, #60]
  406924:	cmp	w13, #0x0
  406928:	cset	w13, le
  40692c:	tbnz	w13, #0, 40693c <read_prop@@Base+0x78>
  406930:	ldrsw	x8, [sp, #60]
  406934:	cmp	x8, #0x80
  406938:	b.cc	40695c <read_prop@@Base+0x98>  // b.lo, b.ul, b.last
  40693c:	ldr	x8, [sp, #40]
  406940:	ldr	x0, [x8]
  406944:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406948:	add	x1, x1, #0x96e
  40694c:	bl	4053c0 <fprintf@plt>
  406950:	mov	w9, #0xffffffff            	// #-1
  406954:	stur	w9, [x29, #-4]
  406958:	b	406b28 <read_prop@@Base+0x264>
  40695c:	sub	x0, x29, #0xa0
  406960:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406964:	add	x1, x1, #0xf58
  406968:	bl	4052a0 <fopen64@plt>
  40696c:	str	x0, [sp, #72]
  406970:	ldr	x8, [sp, #72]
  406974:	cbnz	x8, 4069bc <read_prop@@Base+0xf8>
  406978:	ldr	x8, [sp, #40]
  40697c:	ldr	x0, [x8]
  406980:	str	x0, [sp, #32]
  406984:	bl	405390 <__errno_location@plt>
  406988:	ldr	w0, [x0]
  40698c:	bl	405110 <strerror@plt>
  406990:	ldr	x8, [sp, #32]
  406994:	str	x0, [sp, #24]
  406998:	mov	x0, x8
  40699c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4069a0:	add	x1, x1, #0x995
  4069a4:	sub	x2, x29, #0xa0
  4069a8:	ldr	x3, [sp, #24]
  4069ac:	bl	4053c0 <fprintf@plt>
  4069b0:	mov	w9, #0xffffffff            	// #-1
  4069b4:	stur	w9, [x29, #-4]
  4069b8:	b	406b28 <read_prop@@Base+0x264>
  4069bc:	ldr	x2, [sp, #72]
  4069c0:	add	x0, sp, #0x60
  4069c4:	mov	w1, #0x50                  	// #80
  4069c8:	bl	4053d0 <fgets@plt>
  4069cc:	cbnz	x0, 406a00 <read_prop@@Base+0x13c>
  4069d0:	ldr	x8, [sp, #40]
  4069d4:	ldr	x0, [x8]
  4069d8:	ldr	x9, [sp, #48]
  4069dc:	ldr	x2, [x9, #8]
  4069e0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4069e4:	add	x1, x1, #0x9a3
  4069e8:	sub	x3, x29, #0xa0
  4069ec:	bl	4053c0 <fprintf@plt>
  4069f0:	ldr	x8, [sp, #72]
  4069f4:	mov	x0, x8
  4069f8:	bl	404fc0 <fclose@plt>
  4069fc:	b	406b08 <read_prop@@Base+0x244>
  406a00:	add	x0, sp, #0x60
  406a04:	mov	w1, #0xa                   	// #10
  406a08:	bl	405240 <strchr@plt>
  406a0c:	str	x0, [sp, #80]
  406a10:	ldr	x8, [sp, #80]
  406a14:	cbz	x8, 406a24 <read_prop@@Base+0x160>
  406a18:	ldr	x8, [sp, #80]
  406a1c:	mov	w9, #0x0                   	// #0
  406a20:	strb	w9, [x8]
  406a24:	ldr	x0, [sp, #72]
  406a28:	bl	404fc0 <fclose@plt>
  406a2c:	add	x8, sp, #0x60
  406a30:	mov	x0, x8
  406a34:	add	x1, sp, #0x58
  406a38:	mov	w9, wzr
  406a3c:	mov	w2, w9
  406a40:	bl	4051b0 <strtol@plt>
  406a44:	str	x0, [sp, #64]
  406a48:	ldr	x8, [sp, #88]
  406a4c:	ldrb	w9, [x8]
  406a50:	cbnz	w9, 406a64 <read_prop@@Base+0x1a0>
  406a54:	ldr	x8, [sp, #88]
  406a58:	add	x9, sp, #0x60
  406a5c:	cmp	x9, x8
  406a60:	b.ne	406a84 <read_prop@@Base+0x1c0>  // b.any
  406a64:	ldr	x8, [sp, #40]
  406a68:	ldr	x0, [x8]
  406a6c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406a70:	add	x1, x1, #0x9d2
  406a74:	add	x2, sp, #0x60
  406a78:	sub	x3, x29, #0xa0
  406a7c:	bl	4053c0 <fprintf@plt>
  406a80:	b	406b08 <read_prop@@Base+0x244>
  406a84:	ldr	x8, [sp, #64]
  406a88:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  406a8c:	cmp	x8, x9
  406a90:	b.eq	406aa4 <read_prop@@Base+0x1e0>  // b.none
  406a94:	ldr	x8, [sp, #64]
  406a98:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  406a9c:	cmp	x8, x9
  406aa0:	b.ne	406af0 <read_prop@@Base+0x22c>  // b.any
  406aa4:	bl	405390 <__errno_location@plt>
  406aa8:	ldr	w8, [x0]
  406aac:	cmp	w8, #0x22
  406ab0:	b.ne	406af0 <read_prop@@Base+0x22c>  // b.any
  406ab4:	ldr	x8, [sp, #40]
  406ab8:	ldr	x0, [x8]
  406abc:	str	x0, [sp, #16]
  406ac0:	bl	405390 <__errno_location@plt>
  406ac4:	ldr	w0, [x0]
  406ac8:	bl	405110 <strerror@plt>
  406acc:	ldr	x8, [sp, #16]
  406ad0:	str	x0, [sp, #8]
  406ad4:	mov	x0, x8
  406ad8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406adc:	add	x1, x1, #0x9f9
  406ae0:	sub	x2, x29, #0xa0
  406ae4:	ldr	x3, [sp, #8]
  406ae8:	bl	4053c0 <fprintf@plt>
  406aec:	b	406b08 <read_prop@@Base+0x244>
  406af0:	ldr	x8, [sp, #64]
  406af4:	ldr	x9, [sp, #48]
  406af8:	ldr	x10, [x9]
  406afc:	str	x8, [x10]
  406b00:	stur	wzr, [x29, #-4]
  406b04:	b	406b28 <read_prop@@Base+0x264>
  406b08:	ldr	x8, [sp, #40]
  406b0c:	ldr	x0, [x8]
  406b10:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406b14:	add	x1, x1, #0xa07
  406b18:	sub	x2, x29, #0xa0
  406b1c:	bl	4053c0 <fprintf@plt>
  406b20:	mov	w9, #0xffffffff            	// #-1
  406b24:	stur	w9, [x29, #-4]
  406b28:	ldur	w0, [x29, #-4]
  406b2c:	ldr	x28, [sp, #352]
  406b30:	ldp	x29, x30, [sp, #336]
  406b34:	add	sp, sp, #0x170
  406b38:	ret

0000000000406b3c <get_hex@@Base>:
  406b3c:	sub	sp, sp, #0x10
  406b40:	strb	w0, [sp, #11]
  406b44:	ldrb	w8, [sp, #11]
  406b48:	cmp	w8, #0x41
  406b4c:	b.lt	406b70 <get_hex@@Base+0x34>  // b.tstop
  406b50:	ldrb	w8, [sp, #11]
  406b54:	cmp	w8, #0x46
  406b58:	b.gt	406b70 <get_hex@@Base+0x34>
  406b5c:	ldrb	w8, [sp, #11]
  406b60:	subs	w8, w8, #0x41
  406b64:	add	w8, w8, #0xa
  406b68:	str	w8, [sp, #12]
  406b6c:	b	406bcc <get_hex@@Base+0x90>
  406b70:	ldrb	w8, [sp, #11]
  406b74:	cmp	w8, #0x61
  406b78:	b.lt	406b9c <get_hex@@Base+0x60>  // b.tstop
  406b7c:	ldrb	w8, [sp, #11]
  406b80:	cmp	w8, #0x66
  406b84:	b.gt	406b9c <get_hex@@Base+0x60>
  406b88:	ldrb	w8, [sp, #11]
  406b8c:	subs	w8, w8, #0x61
  406b90:	add	w8, w8, #0xa
  406b94:	str	w8, [sp, #12]
  406b98:	b	406bcc <get_hex@@Base+0x90>
  406b9c:	ldrb	w8, [sp, #11]
  406ba0:	cmp	w8, #0x30
  406ba4:	b.lt	406bc4 <get_hex@@Base+0x88>  // b.tstop
  406ba8:	ldrb	w8, [sp, #11]
  406bac:	cmp	w8, #0x39
  406bb0:	b.gt	406bc4 <get_hex@@Base+0x88>
  406bb4:	ldrb	w8, [sp, #11]
  406bb8:	subs	w8, w8, #0x30
  406bbc:	str	w8, [sp, #12]
  406bc0:	b	406bcc <get_hex@@Base+0x90>
  406bc4:	mov	w8, #0xffffffff            	// #-1
  406bc8:	str	w8, [sp, #12]
  406bcc:	ldr	w0, [sp, #12]
  406bd0:	add	sp, sp, #0x10
  406bd4:	ret

0000000000406bd8 <get_integer@@Base>:
  406bd8:	sub	sp, sp, #0x40
  406bdc:	stp	x29, x30, [sp, #48]
  406be0:	add	x29, sp, #0x30
  406be4:	stur	x0, [x29, #-16]
  406be8:	str	x1, [sp, #24]
  406bec:	str	w2, [sp, #20]
  406bf0:	ldr	x8, [sp, #24]
  406bf4:	cbz	x8, 406c04 <get_integer@@Base+0x2c>
  406bf8:	ldr	x8, [sp, #24]
  406bfc:	ldrb	w9, [x8]
  406c00:	cbnz	w9, 406c10 <get_integer@@Base+0x38>
  406c04:	mov	w8, #0xffffffff            	// #-1
  406c08:	stur	w8, [x29, #-4]
  406c0c:	b	406ccc <get_integer@@Base+0xf4>
  406c10:	ldr	x0, [sp, #24]
  406c14:	ldr	w2, [sp, #20]
  406c18:	mov	x1, sp
  406c1c:	bl	4051b0 <strtol@plt>
  406c20:	str	x0, [sp, #8]
  406c24:	ldr	x8, [sp]
  406c28:	cbz	x8, 406c48 <get_integer@@Base+0x70>
  406c2c:	ldr	x8, [sp]
  406c30:	ldr	x9, [sp, #24]
  406c34:	cmp	x8, x9
  406c38:	b.eq	406c48 <get_integer@@Base+0x70>  // b.none
  406c3c:	ldr	x8, [sp]
  406c40:	ldrb	w9, [x8]
  406c44:	cbz	w9, 406c54 <get_integer@@Base+0x7c>
  406c48:	mov	w8, #0xffffffff            	// #-1
  406c4c:	stur	w8, [x29, #-4]
  406c50:	b	406ccc <get_integer@@Base+0xf4>
  406c54:	ldr	x8, [sp, #8]
  406c58:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  406c5c:	cmp	x8, x9
  406c60:	b.eq	406c74 <get_integer@@Base+0x9c>  // b.none
  406c64:	ldr	x8, [sp, #8]
  406c68:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  406c6c:	cmp	x8, x9
  406c70:	b.ne	406c90 <get_integer@@Base+0xb8>  // b.any
  406c74:	bl	405390 <__errno_location@plt>
  406c78:	ldr	w8, [x0]
  406c7c:	cmp	w8, #0x22
  406c80:	b.ne	406c90 <get_integer@@Base+0xb8>  // b.any
  406c84:	mov	w8, #0xffffffff            	// #-1
  406c88:	stur	w8, [x29, #-4]
  406c8c:	b	406ccc <get_integer@@Base+0xf4>
  406c90:	ldr	x8, [sp, #8]
  406c94:	mov	x9, #0xffffffff80000000    	// #-2147483648
  406c98:	cmp	x8, x9
  406c9c:	b.lt	406cb0 <get_integer@@Base+0xd8>  // b.tstop
  406ca0:	ldr	x8, [sp, #8]
  406ca4:	mov	x9, #0x7fffffff            	// #2147483647
  406ca8:	cmp	x8, x9
  406cac:	b.le	406cbc <get_integer@@Base+0xe4>
  406cb0:	mov	w8, #0xffffffff            	// #-1
  406cb4:	stur	w8, [x29, #-4]
  406cb8:	b	406ccc <get_integer@@Base+0xf4>
  406cbc:	ldr	x8, [sp, #8]
  406cc0:	ldur	x9, [x29, #-16]
  406cc4:	str	w8, [x9]
  406cc8:	stur	wzr, [x29, #-4]
  406ccc:	ldur	w0, [x29, #-4]
  406cd0:	ldp	x29, x30, [sp, #48]
  406cd4:	add	sp, sp, #0x40
  406cd8:	ret

0000000000406cdc <mask2bits@@Base>:
  406cdc:	sub	sp, sp, #0x30
  406ce0:	stp	x29, x30, [sp, #32]
  406ce4:	add	x29, sp, #0x20
  406ce8:	stur	w0, [x29, #-8]
  406cec:	stur	wzr, [x29, #-12]
  406cf0:	ldur	w0, [x29, #-8]
  406cf4:	bl	404f20 <ntohl@plt>
  406cf8:	str	w0, [sp, #16]
  406cfc:	ldr	w8, [sp, #16]
  406d00:	mvn	w8, w8
  406d04:	str	w8, [sp, #12]
  406d08:	ldr	w8, [sp, #12]
  406d0c:	ldr	w9, [sp, #12]
  406d10:	add	w9, w9, #0x1
  406d14:	and	w8, w8, w9
  406d18:	cbz	w8, 406d28 <mask2bits@@Base+0x4c>
  406d1c:	mov	w8, #0xffffffff            	// #-1
  406d20:	stur	w8, [x29, #-4]
  406d24:	b	406d54 <mask2bits@@Base+0x78>
  406d28:	ldr	w8, [sp, #16]
  406d2c:	cbz	w8, 406d4c <mask2bits@@Base+0x70>
  406d30:	ldur	w8, [x29, #-12]
  406d34:	add	w8, w8, #0x1
  406d38:	stur	w8, [x29, #-12]
  406d3c:	ldr	w8, [sp, #16]
  406d40:	lsl	w8, w8, #1
  406d44:	str	w8, [sp, #16]
  406d48:	b	406d28 <mask2bits@@Base+0x4c>
  406d4c:	ldur	w8, [x29, #-12]
  406d50:	stur	w8, [x29, #-4]
  406d54:	ldur	w0, [x29, #-4]
  406d58:	ldp	x29, x30, [sp, #32]
  406d5c:	add	sp, sp, #0x30
  406d60:	ret

0000000000406d64 <get_unsigned@@Base>:
  406d64:	sub	sp, sp, #0x40
  406d68:	stp	x29, x30, [sp, #48]
  406d6c:	add	x29, sp, #0x30
  406d70:	stur	x0, [x29, #-16]
  406d74:	str	x1, [sp, #24]
  406d78:	str	w2, [sp, #20]
  406d7c:	ldr	x8, [sp, #24]
  406d80:	cbz	x8, 406d90 <get_unsigned@@Base+0x2c>
  406d84:	ldr	x8, [sp, #24]
  406d88:	ldrb	w9, [x8]
  406d8c:	cbnz	w9, 406d9c <get_unsigned@@Base+0x38>
  406d90:	mov	w8, #0xffffffff            	// #-1
  406d94:	stur	w8, [x29, #-4]
  406d98:	b	406e38 <get_unsigned@@Base+0xd4>
  406d9c:	ldr	x0, [sp, #24]
  406da0:	ldr	w2, [sp, #20]
  406da4:	mov	x1, sp
  406da8:	bl	404e60 <strtoul@plt>
  406dac:	str	x0, [sp, #8]
  406db0:	ldr	x8, [sp]
  406db4:	cbz	x8, 406dd4 <get_unsigned@@Base+0x70>
  406db8:	ldr	x8, [sp]
  406dbc:	ldr	x9, [sp, #24]
  406dc0:	cmp	x8, x9
  406dc4:	b.eq	406dd4 <get_unsigned@@Base+0x70>  // b.none
  406dc8:	ldr	x8, [sp]
  406dcc:	ldrb	w9, [x8]
  406dd0:	cbz	w9, 406de0 <get_unsigned@@Base+0x7c>
  406dd4:	mov	w8, #0xffffffff            	// #-1
  406dd8:	stur	w8, [x29, #-4]
  406ddc:	b	406e38 <get_unsigned@@Base+0xd4>
  406de0:	ldr	x8, [sp, #8]
  406de4:	mov	x9, #0xffffffffffffffff    	// #-1
  406de8:	cmp	x8, x9
  406dec:	b.ne	406e0c <get_unsigned@@Base+0xa8>  // b.any
  406df0:	bl	405390 <__errno_location@plt>
  406df4:	ldr	w8, [x0]
  406df8:	cmp	w8, #0x22
  406dfc:	b.ne	406e0c <get_unsigned@@Base+0xa8>  // b.any
  406e00:	mov	w8, #0xffffffff            	// #-1
  406e04:	stur	w8, [x29, #-4]
  406e08:	b	406e38 <get_unsigned@@Base+0xd4>
  406e0c:	ldr	x8, [sp, #8]
  406e10:	mov	x9, #0xffffffff            	// #4294967295
  406e14:	cmp	x8, x9
  406e18:	b.ls	406e28 <get_unsigned@@Base+0xc4>  // b.plast
  406e1c:	mov	w8, #0xffffffff            	// #-1
  406e20:	stur	w8, [x29, #-4]
  406e24:	b	406e38 <get_unsigned@@Base+0xd4>
  406e28:	ldr	x8, [sp, #8]
  406e2c:	ldur	x9, [x29, #-16]
  406e30:	str	w8, [x9]
  406e34:	stur	wzr, [x29, #-4]
  406e38:	ldur	w0, [x29, #-4]
  406e3c:	ldp	x29, x30, [sp, #48]
  406e40:	add	sp, sp, #0x40
  406e44:	ret

0000000000406e48 <get_time_rtt@@Base>:
  406e48:	sub	sp, sp, #0x50
  406e4c:	stp	x29, x30, [sp, #64]
  406e50:	add	x29, sp, #0x40
  406e54:	stur	x0, [x29, #-16]
  406e58:	stur	x1, [x29, #-24]
  406e5c:	str	x2, [sp, #32]
  406e60:	ldur	x0, [x29, #-24]
  406e64:	mov	w1, #0x2e                  	// #46
  406e68:	bl	405240 <strchr@plt>
  406e6c:	cbz	x0, 406f24 <get_time_rtt@@Base+0xdc>
  406e70:	b	406e74 <get_time_rtt@@Base+0x2c>
  406e74:	ldur	x0, [x29, #-24]
  406e78:	add	x1, sp, #0x8
  406e7c:	bl	404ee0 <strtod@plt>
  406e80:	str	d0, [sp, #24]
  406e84:	ldr	d0, [sp, #24]
  406e88:	fcmp	d0, #0.0
  406e8c:	b.pl	406ea0 <get_time_rtt@@Base+0x58>  // b.nfrst
  406e90:	b	406e94 <get_time_rtt@@Base+0x4c>
  406e94:	mov	w8, #0xffffffff            	// #-1
  406e98:	stur	w8, [x29, #-4]
  406e9c:	b	407100 <get_time_rtt@@Base+0x2b8>
  406ea0:	ldr	x8, [sp, #8]
  406ea4:	cbz	x8, 406ec0 <get_time_rtt@@Base+0x78>
  406ea8:	b	406eac <get_time_rtt@@Base+0x64>
  406eac:	ldr	x8, [sp, #8]
  406eb0:	ldur	x9, [x29, #-24]
  406eb4:	subs	x8, x8, x9
  406eb8:	b.ne	406ecc <get_time_rtt@@Base+0x84>  // b.any
  406ebc:	b	406ec0 <get_time_rtt@@Base+0x78>
  406ec0:	mov	w8, #0xffffffff            	// #-1
  406ec4:	stur	w8, [x29, #-4]
  406ec8:	b	407100 <get_time_rtt@@Base+0x2b8>
  406ecc:	ldr	d0, [sp, #24]
  406ed0:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  406ed4:	fmov	d1, x8
  406ed8:	fcmp	d0, d1
  406edc:	b.eq	406f00 <get_time_rtt@@Base+0xb8>  // b.none
  406ee0:	b	406ee4 <get_time_rtt@@Base+0x9c>
  406ee4:	ldr	d0, [sp, #24]
  406ee8:	bl	4120b0 <__parse_rtattr_nested_compat@@Base+0x718>
  406eec:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406ef0:	ldr	q1, [x8, #2096]
  406ef4:	bl	411fa8 <__parse_rtattr_nested_compat@@Base+0x610>
  406ef8:	cbnz	w0, 406f20 <get_time_rtt@@Base+0xd8>
  406efc:	b	406f00 <get_time_rtt@@Base+0xb8>
  406f00:	bl	405390 <__errno_location@plt>
  406f04:	ldr	w8, [x0]
  406f08:	subs	w8, w8, #0x22
  406f0c:	b.ne	406f20 <get_time_rtt@@Base+0xd8>  // b.any
  406f10:	b	406f14 <get_time_rtt@@Base+0xcc>
  406f14:	mov	w8, #0xffffffff            	// #-1
  406f18:	stur	w8, [x29, #-4]
  406f1c:	b	407100 <get_time_rtt@@Base+0x2b8>
  406f20:	b	406fa4 <get_time_rtt@@Base+0x15c>
  406f24:	ldur	x0, [x29, #-24]
  406f28:	add	x1, sp, #0x8
  406f2c:	mov	w2, wzr
  406f30:	bl	404e60 <strtoul@plt>
  406f34:	str	x0, [sp, #16]
  406f38:	ldr	x8, [sp, #8]
  406f3c:	cbz	x8, 406f58 <get_time_rtt@@Base+0x110>
  406f40:	b	406f44 <get_time_rtt@@Base+0xfc>
  406f44:	ldr	x8, [sp, #8]
  406f48:	ldur	x9, [x29, #-24]
  406f4c:	subs	x8, x8, x9
  406f50:	b.ne	406f64 <get_time_rtt@@Base+0x11c>  // b.any
  406f54:	b	406f58 <get_time_rtt@@Base+0x110>
  406f58:	mov	w8, #0xffffffff            	// #-1
  406f5c:	stur	w8, [x29, #-4]
  406f60:	b	407100 <get_time_rtt@@Base+0x2b8>
  406f64:	ldr	x8, [sp, #16]
  406f68:	adds	x8, x8, #0x1
  406f6c:	b.ne	406f94 <get_time_rtt@@Base+0x14c>  // b.any
  406f70:	b	406f74 <get_time_rtt@@Base+0x12c>
  406f74:	bl	405390 <__errno_location@plt>
  406f78:	ldr	w8, [x0]
  406f7c:	subs	w8, w8, #0x22
  406f80:	b.ne	406f94 <get_time_rtt@@Base+0x14c>  // b.any
  406f84:	b	406f88 <get_time_rtt@@Base+0x140>
  406f88:	mov	w8, #0xffffffff            	// #-1
  406f8c:	stur	w8, [x29, #-4]
  406f90:	b	407100 <get_time_rtt@@Base+0x2b8>
  406f94:	ldr	d0, [sp, #16]
  406f98:	ucvtf	d0, d0
  406f9c:	str	d0, [sp, #24]
  406fa0:	b	406fa4 <get_time_rtt@@Base+0x15c>
  406fa4:	ldr	x8, [sp, #8]
  406fa8:	ldur	x9, [x29, #-24]
  406fac:	subs	x8, x8, x9
  406fb0:	b.ne	406fc4 <get_time_rtt@@Base+0x17c>  // b.any
  406fb4:	b	406fb8 <get_time_rtt@@Base+0x170>
  406fb8:	mov	w8, #0xffffffff            	// #-1
  406fbc:	stur	w8, [x29, #-4]
  406fc0:	b	407100 <get_time_rtt@@Base+0x2b8>
  406fc4:	ldr	x8, [sp, #32]
  406fc8:	mov	w9, #0x1                   	// #1
  406fcc:	str	w9, [x8]
  406fd0:	ldr	x8, [sp, #8]
  406fd4:	ldrb	w9, [x8]
  406fd8:	cbz	w9, 4070b0 <get_time_rtt@@Base+0x268>
  406fdc:	b	406fe0 <get_time_rtt@@Base+0x198>
  406fe0:	ldr	x8, [sp, #32]
  406fe4:	mov	w9, wzr
  406fe8:	str	w9, [x8]
  406fec:	ldr	x0, [sp, #8]
  406ff0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  406ff4:	add	x1, x1, #0xa05
  406ff8:	bl	4050c0 <strcasecmp@plt>
  406ffc:	cbz	w0, 407034 <get_time_rtt@@Base+0x1ec>
  407000:	b	407004 <get_time_rtt@@Base+0x1bc>
  407004:	ldr	x0, [sp, #8]
  407008:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40700c:	add	x1, x1, #0xa1c
  407010:	bl	4050c0 <strcasecmp@plt>
  407014:	cbz	w0, 407034 <get_time_rtt@@Base+0x1ec>
  407018:	b	40701c <get_time_rtt@@Base+0x1d4>
  40701c:	ldr	x0, [sp, #8]
  407020:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  407024:	add	x1, x1, #0xa21
  407028:	bl	4050c0 <strcasecmp@plt>
  40702c:	cbnz	w0, 407050 <get_time_rtt@@Base+0x208>
  407030:	b	407034 <get_time_rtt@@Base+0x1ec>
  407034:	ldr	d0, [sp, #24]
  407038:	mov	x8, #0x400000000000        	// #70368744177664
  40703c:	movk	x8, #0x408f, lsl #48
  407040:	fmov	d1, x8
  407044:	fmul	d0, d0, d1
  407048:	str	d0, [sp, #24]
  40704c:	b	4070ac <get_time_rtt@@Base+0x264>
  407050:	ldr	x0, [sp, #8]
  407054:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  407058:	add	x1, x1, #0xdb3
  40705c:	bl	4050c0 <strcasecmp@plt>
  407060:	cbz	w0, 407098 <get_time_rtt@@Base+0x250>
  407064:	b	407068 <get_time_rtt@@Base+0x220>
  407068:	ldr	x0, [sp, #8]
  40706c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  407070:	add	x1, x1, #0xa1b
  407074:	bl	4050c0 <strcasecmp@plt>
  407078:	cbz	w0, 407098 <get_time_rtt@@Base+0x250>
  40707c:	b	407080 <get_time_rtt@@Base+0x238>
  407080:	ldr	x0, [sp, #8]
  407084:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  407088:	add	x1, x1, #0xa20
  40708c:	bl	4050c0 <strcasecmp@plt>
  407090:	cbnz	w0, 40709c <get_time_rtt@@Base+0x254>
  407094:	b	407098 <get_time_rtt@@Base+0x250>
  407098:	b	4070a8 <get_time_rtt@@Base+0x260>
  40709c:	mov	w8, #0xffffffff            	// #-1
  4070a0:	stur	w8, [x29, #-4]
  4070a4:	b	407100 <get_time_rtt@@Base+0x2b8>
  4070a8:	b	4070ac <get_time_rtt@@Base+0x264>
  4070ac:	b	4070b0 <get_time_rtt@@Base+0x268>
  4070b0:	ldr	d0, [sp, #24]
  4070b4:	fcvtzu	w8, d0
  4070b8:	ldur	x9, [x29, #-16]
  4070bc:	str	w8, [x9]
  4070c0:	ldur	x9, [x29, #-16]
  4070c4:	ldr	s1, [x9]
  4070c8:	mov	v0.16b, v1.16b
  4070cc:	ucvtf	d0, d0
  4070d0:	ldr	d2, [sp, #24]
  4070d4:	fcmp	d0, d2
  4070d8:	b.pl	4070f4 <get_time_rtt@@Base+0x2ac>  // b.nfrst
  4070dc:	b	4070e0 <get_time_rtt@@Base+0x298>
  4070e0:	ldur	x8, [x29, #-16]
  4070e4:	ldr	w9, [x8]
  4070e8:	add	w9, w9, #0x1
  4070ec:	str	w9, [x8]
  4070f0:	b	4070f4 <get_time_rtt@@Base+0x2ac>
  4070f4:	mov	w8, wzr
  4070f8:	stur	w8, [x29, #-4]
  4070fc:	b	407100 <get_time_rtt@@Base+0x2b8>
  407100:	ldur	w0, [x29, #-4]
  407104:	ldp	x29, x30, [sp, #64]
  407108:	add	sp, sp, #0x50
  40710c:	ret

0000000000407110 <get_u64@@Base>:
  407110:	sub	sp, sp, #0x40
  407114:	stp	x29, x30, [sp, #48]
  407118:	add	x29, sp, #0x30
  40711c:	stur	x0, [x29, #-16]
  407120:	str	x1, [sp, #24]
  407124:	str	w2, [sp, #20]
  407128:	ldr	x8, [sp, #24]
  40712c:	cbz	x8, 40713c <get_u64@@Base+0x2c>
  407130:	ldr	x8, [sp, #24]
  407134:	ldrb	w9, [x8]
  407138:	cbnz	w9, 407148 <get_u64@@Base+0x38>
  40713c:	mov	w8, #0xffffffff            	// #-1
  407140:	stur	w8, [x29, #-4]
  407144:	b	4071e4 <get_u64@@Base+0xd4>
  407148:	ldr	x0, [sp, #24]
  40714c:	ldr	w2, [sp, #20]
  407150:	mov	x1, sp
  407154:	bl	405250 <strtoull@plt>
  407158:	str	x0, [sp, #8]
  40715c:	ldr	x8, [sp]
  407160:	cbz	x8, 407180 <get_u64@@Base+0x70>
  407164:	ldr	x8, [sp]
  407168:	ldr	x9, [sp, #24]
  40716c:	cmp	x8, x9
  407170:	b.eq	407180 <get_u64@@Base+0x70>  // b.none
  407174:	ldr	x8, [sp]
  407178:	ldrb	w9, [x8]
  40717c:	cbz	w9, 40718c <get_u64@@Base+0x7c>
  407180:	mov	w8, #0xffffffff            	// #-1
  407184:	stur	w8, [x29, #-4]
  407188:	b	4071e4 <get_u64@@Base+0xd4>
  40718c:	ldr	x8, [sp, #8]
  407190:	mov	x9, #0xffffffffffffffff    	// #-1
  407194:	cmp	x8, x9
  407198:	b.ne	4071b8 <get_u64@@Base+0xa8>  // b.any
  40719c:	bl	405390 <__errno_location@plt>
  4071a0:	ldr	w8, [x0]
  4071a4:	cmp	w8, #0x22
  4071a8:	b.ne	4071b8 <get_u64@@Base+0xa8>  // b.any
  4071ac:	mov	w8, #0xffffffff            	// #-1
  4071b0:	stur	w8, [x29, #-4]
  4071b4:	b	4071e4 <get_u64@@Base+0xd4>
  4071b8:	ldr	x8, [sp, #8]
  4071bc:	mov	x9, #0xffffffffffffffff    	// #-1
  4071c0:	cmp	x8, x9
  4071c4:	b.ls	4071d4 <get_u64@@Base+0xc4>  // b.plast
  4071c8:	mov	w8, #0xffffffff            	// #-1
  4071cc:	stur	w8, [x29, #-4]
  4071d0:	b	4071e4 <get_u64@@Base+0xd4>
  4071d4:	ldr	x8, [sp, #8]
  4071d8:	ldur	x9, [x29, #-16]
  4071dc:	str	x8, [x9]
  4071e0:	stur	wzr, [x29, #-4]
  4071e4:	ldur	w0, [x29, #-4]
  4071e8:	ldp	x29, x30, [sp, #48]
  4071ec:	add	sp, sp, #0x40
  4071f0:	ret

00000000004071f4 <get_u32@@Base>:
  4071f4:	sub	sp, sp, #0x40
  4071f8:	stp	x29, x30, [sp, #48]
  4071fc:	add	x29, sp, #0x30
  407200:	stur	x0, [x29, #-16]
  407204:	str	x1, [sp, #24]
  407208:	str	w2, [sp, #20]
  40720c:	ldr	x8, [sp, #24]
  407210:	cbz	x8, 407220 <get_u32@@Base+0x2c>
  407214:	ldr	x8, [sp, #24]
  407218:	ldrb	w9, [x8]
  40721c:	cbnz	w9, 40722c <get_u32@@Base+0x38>
  407220:	mov	w8, #0xffffffff            	// #-1
  407224:	stur	w8, [x29, #-4]
  407228:	b	4072c8 <get_u32@@Base+0xd4>
  40722c:	ldr	x0, [sp, #24]
  407230:	ldr	w2, [sp, #20]
  407234:	mov	x1, sp
  407238:	bl	404e60 <strtoul@plt>
  40723c:	str	x0, [sp, #8]
  407240:	ldr	x8, [sp]
  407244:	cbz	x8, 407264 <get_u32@@Base+0x70>
  407248:	ldr	x8, [sp]
  40724c:	ldr	x9, [sp, #24]
  407250:	cmp	x8, x9
  407254:	b.eq	407264 <get_u32@@Base+0x70>  // b.none
  407258:	ldr	x8, [sp]
  40725c:	ldrb	w9, [x8]
  407260:	cbz	w9, 407270 <get_u32@@Base+0x7c>
  407264:	mov	w8, #0xffffffff            	// #-1
  407268:	stur	w8, [x29, #-4]
  40726c:	b	4072c8 <get_u32@@Base+0xd4>
  407270:	ldr	x8, [sp, #8]
  407274:	mov	x9, #0xffffffffffffffff    	// #-1
  407278:	cmp	x8, x9
  40727c:	b.ne	40729c <get_u32@@Base+0xa8>  // b.any
  407280:	bl	405390 <__errno_location@plt>
  407284:	ldr	w8, [x0]
  407288:	cmp	w8, #0x22
  40728c:	b.ne	40729c <get_u32@@Base+0xa8>  // b.any
  407290:	mov	w8, #0xffffffff            	// #-1
  407294:	stur	w8, [x29, #-4]
  407298:	b	4072c8 <get_u32@@Base+0xd4>
  40729c:	ldr	x8, [sp, #8]
  4072a0:	mov	x9, #0xffffffff            	// #4294967295
  4072a4:	cmp	x8, x9
  4072a8:	b.ls	4072b8 <get_u32@@Base+0xc4>  // b.plast
  4072ac:	mov	w8, #0xffffffff            	// #-1
  4072b0:	stur	w8, [x29, #-4]
  4072b4:	b	4072c8 <get_u32@@Base+0xd4>
  4072b8:	ldr	x8, [sp, #8]
  4072bc:	ldur	x9, [x29, #-16]
  4072c0:	str	w8, [x9]
  4072c4:	stur	wzr, [x29, #-4]
  4072c8:	ldur	w0, [x29, #-4]
  4072cc:	ldp	x29, x30, [sp, #48]
  4072d0:	add	sp, sp, #0x40
  4072d4:	ret

00000000004072d8 <get_u16@@Base>:
  4072d8:	sub	sp, sp, #0x40
  4072dc:	stp	x29, x30, [sp, #48]
  4072e0:	add	x29, sp, #0x30
  4072e4:	stur	x0, [x29, #-16]
  4072e8:	str	x1, [sp, #24]
  4072ec:	str	w2, [sp, #20]
  4072f0:	ldr	x8, [sp, #24]
  4072f4:	cbz	x8, 407304 <get_u16@@Base+0x2c>
  4072f8:	ldr	x8, [sp, #24]
  4072fc:	ldrb	w9, [x8]
  407300:	cbnz	w9, 407310 <get_u16@@Base+0x38>
  407304:	mov	w8, #0xffffffff            	// #-1
  407308:	stur	w8, [x29, #-4]
  40730c:	b	4073ac <get_u16@@Base+0xd4>
  407310:	ldr	x0, [sp, #24]
  407314:	ldr	w2, [sp, #20]
  407318:	mov	x1, sp
  40731c:	bl	404e60 <strtoul@plt>
  407320:	str	x0, [sp, #8]
  407324:	ldr	x8, [sp]
  407328:	cbz	x8, 407348 <get_u16@@Base+0x70>
  40732c:	ldr	x8, [sp]
  407330:	ldr	x9, [sp, #24]
  407334:	cmp	x8, x9
  407338:	b.eq	407348 <get_u16@@Base+0x70>  // b.none
  40733c:	ldr	x8, [sp]
  407340:	ldrb	w9, [x8]
  407344:	cbz	w9, 407354 <get_u16@@Base+0x7c>
  407348:	mov	w8, #0xffffffff            	// #-1
  40734c:	stur	w8, [x29, #-4]
  407350:	b	4073ac <get_u16@@Base+0xd4>
  407354:	ldr	x8, [sp, #8]
  407358:	mov	x9, #0xffffffffffffffff    	// #-1
  40735c:	cmp	x8, x9
  407360:	b.ne	407380 <get_u16@@Base+0xa8>  // b.any
  407364:	bl	405390 <__errno_location@plt>
  407368:	ldr	w8, [x0]
  40736c:	cmp	w8, #0x22
  407370:	b.ne	407380 <get_u16@@Base+0xa8>  // b.any
  407374:	mov	w8, #0xffffffff            	// #-1
  407378:	stur	w8, [x29, #-4]
  40737c:	b	4073ac <get_u16@@Base+0xd4>
  407380:	ldr	x8, [sp, #8]
  407384:	mov	x9, #0xffff                	// #65535
  407388:	cmp	x8, x9
  40738c:	b.ls	40739c <get_u16@@Base+0xc4>  // b.plast
  407390:	mov	w8, #0xffffffff            	// #-1
  407394:	stur	w8, [x29, #-4]
  407398:	b	4073ac <get_u16@@Base+0xd4>
  40739c:	ldr	x8, [sp, #8]
  4073a0:	ldur	x9, [x29, #-16]
  4073a4:	strh	w8, [x9]
  4073a8:	stur	wzr, [x29, #-4]
  4073ac:	ldur	w0, [x29, #-4]
  4073b0:	ldp	x29, x30, [sp, #48]
  4073b4:	add	sp, sp, #0x40
  4073b8:	ret

00000000004073bc <get_u8@@Base>:
  4073bc:	sub	sp, sp, #0x40
  4073c0:	stp	x29, x30, [sp, #48]
  4073c4:	add	x29, sp, #0x30
  4073c8:	stur	x0, [x29, #-16]
  4073cc:	str	x1, [sp, #24]
  4073d0:	str	w2, [sp, #20]
  4073d4:	ldr	x8, [sp, #24]
  4073d8:	cbz	x8, 4073e8 <get_u8@@Base+0x2c>
  4073dc:	ldr	x8, [sp, #24]
  4073e0:	ldrb	w9, [x8]
  4073e4:	cbnz	w9, 4073f4 <get_u8@@Base+0x38>
  4073e8:	mov	w8, #0xffffffff            	// #-1
  4073ec:	stur	w8, [x29, #-4]
  4073f0:	b	40748c <get_u8@@Base+0xd0>
  4073f4:	ldr	x0, [sp, #24]
  4073f8:	ldr	w2, [sp, #20]
  4073fc:	mov	x1, sp
  407400:	bl	404e60 <strtoul@plt>
  407404:	str	x0, [sp, #8]
  407408:	ldr	x8, [sp]
  40740c:	cbz	x8, 40742c <get_u8@@Base+0x70>
  407410:	ldr	x8, [sp]
  407414:	ldr	x9, [sp, #24]
  407418:	cmp	x8, x9
  40741c:	b.eq	40742c <get_u8@@Base+0x70>  // b.none
  407420:	ldr	x8, [sp]
  407424:	ldrb	w9, [x8]
  407428:	cbz	w9, 407438 <get_u8@@Base+0x7c>
  40742c:	mov	w8, #0xffffffff            	// #-1
  407430:	stur	w8, [x29, #-4]
  407434:	b	40748c <get_u8@@Base+0xd0>
  407438:	ldr	x8, [sp, #8]
  40743c:	mov	x9, #0xffffffffffffffff    	// #-1
  407440:	cmp	x8, x9
  407444:	b.ne	407464 <get_u8@@Base+0xa8>  // b.any
  407448:	bl	405390 <__errno_location@plt>
  40744c:	ldr	w8, [x0]
  407450:	cmp	w8, #0x22
  407454:	b.ne	407464 <get_u8@@Base+0xa8>  // b.any
  407458:	mov	w8, #0xffffffff            	// #-1
  40745c:	stur	w8, [x29, #-4]
  407460:	b	40748c <get_u8@@Base+0xd0>
  407464:	ldr	x8, [sp, #8]
  407468:	cmp	x8, #0xff
  40746c:	b.ls	40747c <get_u8@@Base+0xc0>  // b.plast
  407470:	mov	w8, #0xffffffff            	// #-1
  407474:	stur	w8, [x29, #-4]
  407478:	b	40748c <get_u8@@Base+0xd0>
  40747c:	ldr	x8, [sp, #8]
  407480:	ldur	x9, [x29, #-16]
  407484:	strb	w8, [x9]
  407488:	stur	wzr, [x29, #-4]
  40748c:	ldur	w0, [x29, #-4]
  407490:	ldp	x29, x30, [sp, #48]
  407494:	add	sp, sp, #0x40
  407498:	ret

000000000040749c <get_s64@@Base>:
  40749c:	sub	sp, sp, #0x40
  4074a0:	stp	x29, x30, [sp, #48]
  4074a4:	add	x29, sp, #0x30
  4074a8:	stur	x0, [x29, #-16]
  4074ac:	str	x1, [sp, #24]
  4074b0:	str	w2, [sp, #20]
  4074b4:	bl	405390 <__errno_location@plt>
  4074b8:	str	wzr, [x0]
  4074bc:	ldr	x8, [sp, #24]
  4074c0:	cbz	x8, 4074d0 <get_s64@@Base+0x34>
  4074c4:	ldr	x8, [sp, #24]
  4074c8:	ldrb	w9, [x8]
  4074cc:	cbnz	w9, 4074dc <get_s64@@Base+0x40>
  4074d0:	mov	w8, #0xffffffff            	// #-1
  4074d4:	stur	w8, [x29, #-4]
  4074d8:	b	407598 <get_s64@@Base+0xfc>
  4074dc:	ldr	x0, [sp, #24]
  4074e0:	ldr	w2, [sp, #20]
  4074e4:	mov	x1, sp
  4074e8:	bl	404ed0 <strtoll@plt>
  4074ec:	str	x0, [sp, #8]
  4074f0:	ldr	x8, [sp]
  4074f4:	cbz	x8, 407514 <get_s64@@Base+0x78>
  4074f8:	ldr	x8, [sp]
  4074fc:	ldr	x9, [sp, #24]
  407500:	cmp	x8, x9
  407504:	b.eq	407514 <get_s64@@Base+0x78>  // b.none
  407508:	ldr	x8, [sp]
  40750c:	ldrb	w9, [x8]
  407510:	cbz	w9, 407520 <get_s64@@Base+0x84>
  407514:	mov	w8, #0xffffffff            	// #-1
  407518:	stur	w8, [x29, #-4]
  40751c:	b	407598 <get_s64@@Base+0xfc>
  407520:	ldr	x8, [sp, #8]
  407524:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  407528:	cmp	x8, x9
  40752c:	b.eq	407540 <get_s64@@Base+0xa4>  // b.none
  407530:	ldr	x8, [sp, #8]
  407534:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  407538:	cmp	x8, x9
  40753c:	b.ne	40755c <get_s64@@Base+0xc0>  // b.any
  407540:	bl	405390 <__errno_location@plt>
  407544:	ldr	w8, [x0]
  407548:	cmp	w8, #0x22
  40754c:	b.ne	40755c <get_s64@@Base+0xc0>  // b.any
  407550:	mov	w8, #0xffffffff            	// #-1
  407554:	stur	w8, [x29, #-4]
  407558:	b	407598 <get_s64@@Base+0xfc>
  40755c:	ldr	x8, [sp, #8]
  407560:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  407564:	cmp	x8, x9
  407568:	b.gt	40757c <get_s64@@Base+0xe0>
  40756c:	ldr	x8, [sp, #8]
  407570:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  407574:	cmp	x8, x9
  407578:	b.ge	407588 <get_s64@@Base+0xec>  // b.tcont
  40757c:	mov	w8, #0xffffffff            	// #-1
  407580:	stur	w8, [x29, #-4]
  407584:	b	407598 <get_s64@@Base+0xfc>
  407588:	ldr	x8, [sp, #8]
  40758c:	ldur	x9, [x29, #-16]
  407590:	str	x8, [x9]
  407594:	stur	wzr, [x29, #-4]
  407598:	ldur	w0, [x29, #-4]
  40759c:	ldp	x29, x30, [sp, #48]
  4075a0:	add	sp, sp, #0x40
  4075a4:	ret

00000000004075a8 <get_s32@@Base>:
  4075a8:	sub	sp, sp, #0x40
  4075ac:	stp	x29, x30, [sp, #48]
  4075b0:	add	x29, sp, #0x30
  4075b4:	stur	x0, [x29, #-16]
  4075b8:	str	x1, [sp, #24]
  4075bc:	str	w2, [sp, #20]
  4075c0:	bl	405390 <__errno_location@plt>
  4075c4:	str	wzr, [x0]
  4075c8:	ldr	x8, [sp, #24]
  4075cc:	cbz	x8, 4075dc <get_s32@@Base+0x34>
  4075d0:	ldr	x8, [sp, #24]
  4075d4:	ldrb	w9, [x8]
  4075d8:	cbnz	w9, 4075e8 <get_s32@@Base+0x40>
  4075dc:	mov	w8, #0xffffffff            	// #-1
  4075e0:	stur	w8, [x29, #-4]
  4075e4:	b	4076a4 <get_s32@@Base+0xfc>
  4075e8:	ldr	x0, [sp, #24]
  4075ec:	ldr	w2, [sp, #20]
  4075f0:	mov	x1, sp
  4075f4:	bl	4051b0 <strtol@plt>
  4075f8:	str	x0, [sp, #8]
  4075fc:	ldr	x8, [sp]
  407600:	cbz	x8, 407620 <get_s32@@Base+0x78>
  407604:	ldr	x8, [sp]
  407608:	ldr	x9, [sp, #24]
  40760c:	cmp	x8, x9
  407610:	b.eq	407620 <get_s32@@Base+0x78>  // b.none
  407614:	ldr	x8, [sp]
  407618:	ldrb	w9, [x8]
  40761c:	cbz	w9, 40762c <get_s32@@Base+0x84>
  407620:	mov	w8, #0xffffffff            	// #-1
  407624:	stur	w8, [x29, #-4]
  407628:	b	4076a4 <get_s32@@Base+0xfc>
  40762c:	ldr	x8, [sp, #8]
  407630:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  407634:	cmp	x8, x9
  407638:	b.eq	40764c <get_s32@@Base+0xa4>  // b.none
  40763c:	ldr	x8, [sp, #8]
  407640:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  407644:	cmp	x8, x9
  407648:	b.ne	407668 <get_s32@@Base+0xc0>  // b.any
  40764c:	bl	405390 <__errno_location@plt>
  407650:	ldr	w8, [x0]
  407654:	cmp	w8, #0x22
  407658:	b.ne	407668 <get_s32@@Base+0xc0>  // b.any
  40765c:	mov	w8, #0xffffffff            	// #-1
  407660:	stur	w8, [x29, #-4]
  407664:	b	4076a4 <get_s32@@Base+0xfc>
  407668:	ldr	x8, [sp, #8]
  40766c:	mov	x9, #0x7fffffff            	// #2147483647
  407670:	cmp	x8, x9
  407674:	b.gt	407688 <get_s32@@Base+0xe0>
  407678:	ldr	x8, [sp, #8]
  40767c:	mov	x9, #0xffffffff80000000    	// #-2147483648
  407680:	cmp	x8, x9
  407684:	b.ge	407694 <get_s32@@Base+0xec>  // b.tcont
  407688:	mov	w8, #0xffffffff            	// #-1
  40768c:	stur	w8, [x29, #-4]
  407690:	b	4076a4 <get_s32@@Base+0xfc>
  407694:	ldr	x8, [sp, #8]
  407698:	ldur	x9, [x29, #-16]
  40769c:	str	w8, [x9]
  4076a0:	stur	wzr, [x29, #-4]
  4076a4:	ldur	w0, [x29, #-4]
  4076a8:	ldp	x29, x30, [sp, #48]
  4076ac:	add	sp, sp, #0x40
  4076b0:	ret

00000000004076b4 <get_be64@@Base>:
  4076b4:	sub	sp, sp, #0x50
  4076b8:	stp	x29, x30, [sp, #64]
  4076bc:	add	x29, sp, #0x40
  4076c0:	add	x8, sp, #0x20
  4076c4:	stur	x0, [x29, #-8]
  4076c8:	stur	x1, [x29, #-16]
  4076cc:	stur	w2, [x29, #-20]
  4076d0:	ldur	x1, [x29, #-16]
  4076d4:	ldur	w2, [x29, #-20]
  4076d8:	mov	x0, x8
  4076dc:	bl	407110 <get_u64@@Base>
  4076e0:	str	w0, [sp, #28]
  4076e4:	ldr	w9, [sp, #28]
  4076e8:	cbnz	w9, 407760 <get_be64@@Base+0xac>
  4076ec:	mov	w8, #0x1                   	// #1
  4076f0:	mov	w0, w8
  4076f4:	str	w8, [sp, #24]
  4076f8:	bl	404ec0 <htonl@plt>
  4076fc:	ldr	w8, [sp, #24]
  407700:	cmp	w8, w0
  407704:	b.ne	407714 <get_be64@@Base+0x60>  // b.any
  407708:	ldr	x8, [sp, #32]
  40770c:	str	x8, [sp, #16]
  407710:	b	407754 <get_be64@@Base+0xa0>
  407714:	ldr	x8, [sp, #32]
  407718:	and	x8, x8, #0xffffffff
  40771c:	mov	w0, w8
  407720:	bl	404ec0 <htonl@plt>
  407724:	mov	w9, w0
  407728:	ubfx	x9, x9, #0, #32
  40772c:	ldr	x10, [sp, #32]
  407730:	lsr	x10, x10, #32
  407734:	mov	w0, w10
  407738:	str	x9, [sp, #8]
  40773c:	bl	404ec0 <htonl@plt>
  407740:	mov	w9, w0
  407744:	ubfx	x9, x9, #0, #32
  407748:	ldr	x11, [sp, #8]
  40774c:	orr	x9, x9, x11, lsl #32
  407750:	str	x9, [sp, #16]
  407754:	ldr	x8, [sp, #16]
  407758:	ldur	x9, [x29, #-8]
  40775c:	str	x8, [x9]
  407760:	ldr	w0, [sp, #28]
  407764:	ldp	x29, x30, [sp, #64]
  407768:	add	sp, sp, #0x50
  40776c:	ret

0000000000407770 <get_be32@@Base>:
  407770:	sub	sp, sp, #0x30
  407774:	stp	x29, x30, [sp, #32]
  407778:	add	x29, sp, #0x20
  40777c:	add	x8, sp, #0x8
  407780:	stur	x0, [x29, #-8]
  407784:	str	x1, [sp, #16]
  407788:	str	w2, [sp, #12]
  40778c:	ldr	x1, [sp, #16]
  407790:	ldr	w2, [sp, #12]
  407794:	mov	x0, x8
  407798:	bl	4071f4 <get_u32@@Base>
  40779c:	str	w0, [sp, #4]
  4077a0:	ldr	w9, [sp, #4]
  4077a4:	cbnz	w9, 4077b8 <get_be32@@Base+0x48>
  4077a8:	ldr	w0, [sp, #8]
  4077ac:	bl	404ec0 <htonl@plt>
  4077b0:	ldur	x8, [x29, #-8]
  4077b4:	str	w0, [x8]
  4077b8:	ldr	w0, [sp, #4]
  4077bc:	ldp	x29, x30, [sp, #32]
  4077c0:	add	sp, sp, #0x30
  4077c4:	ret

00000000004077c8 <get_be16@@Base>:
  4077c8:	sub	sp, sp, #0x30
  4077cc:	stp	x29, x30, [sp, #32]
  4077d0:	add	x29, sp, #0x20
  4077d4:	add	x8, sp, #0xa
  4077d8:	stur	x0, [x29, #-8]
  4077dc:	str	x1, [sp, #16]
  4077e0:	str	w2, [sp, #12]
  4077e4:	ldr	x1, [sp, #16]
  4077e8:	ldr	w2, [sp, #12]
  4077ec:	mov	x0, x8
  4077f0:	bl	4072d8 <get_u16@@Base>
  4077f4:	str	w0, [sp, #4]
  4077f8:	ldr	w9, [sp, #4]
  4077fc:	cbnz	w9, 407810 <get_be16@@Base+0x48>
  407800:	ldrh	w0, [sp, #10]
  407804:	bl	4050e0 <htons@plt>
  407808:	ldur	x8, [x29, #-8]
  40780c:	strh	w0, [x8]
  407810:	ldr	w0, [sp, #4]
  407814:	ldp	x29, x30, [sp, #32]
  407818:	add	sp, sp, #0x30
  40781c:	ret

0000000000407820 <get_addr64@@Base>:
  407820:	sub	sp, sp, #0x50
  407824:	stp	x29, x30, [sp, #64]
  407828:	add	x29, sp, #0x40
  40782c:	stur	x0, [x29, #-16]
  407830:	stur	x1, [x29, #-24]
  407834:	stur	wzr, [x29, #-28]
  407838:	ldur	w8, [x29, #-28]
  40783c:	cmp	w8, #0x4
  407840:	b.ge	407908 <get_addr64@@Base+0xe8>  // b.tcont
  407844:	ldur	x0, [x29, #-24]
  407848:	add	x1, sp, #0x8
  40784c:	mov	w2, #0x10                  	// #16
  407850:	bl	404e60 <strtoul@plt>
  407854:	str	x0, [sp, #16]
  407858:	ldr	x8, [sp, #16]
  40785c:	mov	x9, #0xffff                	// #65535
  407860:	cmp	x8, x9
  407864:	b.ls	407874 <get_addr64@@Base+0x54>  // b.plast
  407868:	mov	w8, #0xffffffff            	// #-1
  40786c:	stur	w8, [x29, #-4]
  407870:	b	40791c <get_addr64@@Base+0xfc>
  407874:	ldr	x8, [sp, #8]
  407878:	ldur	x9, [x29, #-24]
  40787c:	cmp	x8, x9
  407880:	b.ne	407890 <get_addr64@@Base+0x70>  // b.any
  407884:	mov	w8, #0xffffffff            	// #-1
  407888:	stur	w8, [x29, #-4]
  40788c:	b	40791c <get_addr64@@Base+0xfc>
  407890:	ldr	x8, [sp, #16]
  407894:	mov	w0, w8
  407898:	bl	4050e0 <htons@plt>
  40789c:	ldursw	x9, [x29, #-28]
  4078a0:	mov	x10, #0x2                   	// #2
  4078a4:	mul	x9, x10, x9
  4078a8:	add	x10, sp, #0x18
  4078ac:	add	x9, x10, x9
  4078b0:	strh	w0, [x9]
  4078b4:	ldr	x9, [sp, #8]
  4078b8:	ldrb	w8, [x9]
  4078bc:	cbnz	w8, 4078c4 <get_addr64@@Base+0xa4>
  4078c0:	b	407908 <get_addr64@@Base+0xe8>
  4078c4:	ldur	w8, [x29, #-28]
  4078c8:	cmp	w8, #0x3
  4078cc:	b.eq	4078e0 <get_addr64@@Base+0xc0>  // b.none
  4078d0:	ldr	x8, [sp, #8]
  4078d4:	ldrb	w9, [x8]
  4078d8:	cmp	w9, #0x3a
  4078dc:	b.eq	4078ec <get_addr64@@Base+0xcc>  // b.none
  4078e0:	mov	w8, #0xffffffff            	// #-1
  4078e4:	stur	w8, [x29, #-4]
  4078e8:	b	40791c <get_addr64@@Base+0xfc>
  4078ec:	ldr	x8, [sp, #8]
  4078f0:	add	x8, x8, #0x1
  4078f4:	stur	x8, [x29, #-24]
  4078f8:	ldur	w8, [x29, #-28]
  4078fc:	add	w8, w8, #0x1
  407900:	stur	w8, [x29, #-28]
  407904:	b	407838 <get_addr64@@Base+0x18>
  407908:	ldr	x8, [sp, #24]
  40790c:	ldur	x9, [x29, #-16]
  407910:	str	x8, [x9]
  407914:	mov	w10, #0x1                   	// #1
  407918:	stur	w10, [x29, #-4]
  40791c:	ldur	w0, [x29, #-4]
  407920:	ldp	x29, x30, [sp, #64]
  407924:	add	sp, sp, #0x50
  407928:	ret

000000000040792c <get_addr_1@@Base>:
  40792c:	sub	sp, sp, #0x30
  407930:	stp	x29, x30, [sp, #32]
  407934:	add	x29, sp, #0x20
  407938:	str	x0, [sp, #16]
  40793c:	str	x1, [sp, #8]
  407940:	str	w2, [sp, #4]
  407944:	ldr	x0, [sp, #16]
  407948:	ldr	x1, [sp, #8]
  40794c:	ldr	w2, [sp, #4]
  407950:	bl	407988 <get_addr_1@@Base+0x5c>
  407954:	str	w0, [sp]
  407958:	ldr	w8, [sp]
  40795c:	cbz	w8, 40796c <get_addr_1@@Base+0x40>
  407960:	ldr	w8, [sp]
  407964:	stur	w8, [x29, #-4]
  407968:	b	407978 <get_addr_1@@Base+0x4c>
  40796c:	ldr	x0, [sp, #16]
  407970:	bl	407cfc <get_addr_1@@Base+0x3d0>
  407974:	stur	wzr, [x29, #-4]
  407978:	ldur	w0, [x29, #-4]
  40797c:	ldp	x29, x30, [sp, #32]
  407980:	add	sp, sp, #0x30
  407984:	ret
  407988:	sub	sp, sp, #0x40
  40798c:	stp	x29, x30, [sp, #48]
  407990:	add	x29, sp, #0x30
  407994:	mov	x8, #0x108                 	// #264
  407998:	adrp	x9, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40799c:	add	x9, x9, #0xd8f
  4079a0:	mov	w10, wzr
  4079a4:	stur	x0, [x29, #-16]
  4079a8:	str	x1, [sp, #24]
  4079ac:	str	w2, [sp, #20]
  4079b0:	ldur	x0, [x29, #-16]
  4079b4:	mov	w1, w10
  4079b8:	mov	x2, x8
  4079bc:	str	x9, [sp]
  4079c0:	bl	405070 <memset@plt>
  4079c4:	ldr	x0, [sp, #24]
  4079c8:	ldr	x1, [sp]
  4079cc:	bl	405190 <strcmp@plt>
  4079d0:	cbnz	w0, 407a3c <get_addr_1@@Base+0x110>
  4079d4:	ldr	w8, [sp, #20]
  4079d8:	cmp	w8, #0xc
  4079dc:	b.eq	4079ec <get_addr_1@@Base+0xc0>  // b.none
  4079e0:	ldr	w8, [sp, #20]
  4079e4:	cmp	w8, #0x1c
  4079e8:	b.ne	4079f8 <get_addr_1@@Base+0xcc>  // b.any
  4079ec:	mov	w8, #0xffffffff            	// #-1
  4079f0:	stur	w8, [x29, #-4]
  4079f4:	b	407cec <get_addr_1@@Base+0x3c0>
  4079f8:	ldr	w8, [sp, #20]
  4079fc:	ldur	x9, [x29, #-16]
  407a00:	strh	w8, [x9, #6]
  407a04:	ldur	x9, [x29, #-16]
  407a08:	ldrh	w0, [x9, #6]
  407a0c:	bl	408fb4 <format_host_r@@Base+0xc0>
  407a10:	ldur	x9, [x29, #-16]
  407a14:	strh	w0, [x9, #2]
  407a18:	ldur	x9, [x29, #-16]
  407a1c:	mov	w8, #0xfffe                	// #65534
  407a20:	strh	w8, [x9, #4]
  407a24:	ldur	x9, [x29, #-16]
  407a28:	ldrh	w8, [x9]
  407a2c:	orr	w8, w8, #0x1
  407a30:	strh	w8, [x9]
  407a34:	stur	wzr, [x29, #-4]
  407a38:	b	407cec <get_addr_1@@Base+0x3c0>
  407a3c:	ldr	x0, [sp, #24]
  407a40:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  407a44:	add	x1, x1, #0xd97
  407a48:	bl	405190 <strcmp@plt>
  407a4c:	cbz	w0, 407a64 <get_addr_1@@Base+0x138>
  407a50:	ldr	x0, [sp, #24]
  407a54:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  407a58:	add	x1, x1, #0xd9b
  407a5c:	bl	405190 <strcmp@plt>
  407a60:	cbnz	w0, 407ab4 <get_addr_1@@Base+0x188>
  407a64:	ldr	w8, [sp, #20]
  407a68:	cmp	w8, #0xc
  407a6c:	b.eq	407a7c <get_addr_1@@Base+0x150>  // b.none
  407a70:	ldr	w8, [sp, #20]
  407a74:	cmp	w8, #0x1c
  407a78:	b.ne	407a88 <get_addr_1@@Base+0x15c>  // b.any
  407a7c:	mov	w8, #0xffffffff            	// #-1
  407a80:	stur	w8, [x29, #-4]
  407a84:	b	407cec <get_addr_1@@Base+0x3c0>
  407a88:	ldr	w8, [sp, #20]
  407a8c:	ldur	x9, [x29, #-16]
  407a90:	strh	w8, [x9, #6]
  407a94:	ldur	x9, [x29, #-16]
  407a98:	mov	w8, #0x0                   	// #0
  407a9c:	strh	w8, [x9, #2]
  407aa0:	ldur	x9, [x29, #-16]
  407aa4:	mov	w8, #0xfffe                	// #65534
  407aa8:	strh	w8, [x9, #4]
  407aac:	stur	wzr, [x29, #-4]
  407ab0:	b	407cec <get_addr_1@@Base+0x3c0>
  407ab4:	ldr	w8, [sp, #20]
  407ab8:	cmp	w8, #0x11
  407abc:	b.ne	407b28 <get_addr_1@@Base+0x1fc>  // b.any
  407ac0:	ldur	x8, [x29, #-16]
  407ac4:	add	x0, x8, #0x8
  407ac8:	ldr	x2, [sp, #24]
  407acc:	mov	w1, #0x100                 	// #256
  407ad0:	bl	40bee4 <ll_addr_a2n@@Base>
  407ad4:	str	w0, [sp, #16]
  407ad8:	ldr	w9, [sp, #16]
  407adc:	cmp	w9, #0x0
  407ae0:	cset	w9, ge  // ge = tcont
  407ae4:	tbnz	w9, #0, 407af4 <get_addr_1@@Base+0x1c8>
  407ae8:	mov	w8, #0xffffffff            	// #-1
  407aec:	stur	w8, [x29, #-4]
  407af0:	b	407cec <get_addr_1@@Base+0x3c0>
  407af4:	ldur	x8, [x29, #-16]
  407af8:	mov	w9, #0x11                  	// #17
  407afc:	strh	w9, [x8, #6]
  407b00:	ldr	w9, [sp, #16]
  407b04:	ldur	x8, [x29, #-16]
  407b08:	strh	w9, [x8, #2]
  407b0c:	ldr	w9, [sp, #16]
  407b10:	mov	w10, #0x8                   	// #8
  407b14:	mul	w9, w9, w10
  407b18:	ldur	x8, [x29, #-16]
  407b1c:	strh	w9, [x8, #4]
  407b20:	stur	wzr, [x29, #-4]
  407b24:	b	407cec <get_addr_1@@Base+0x3c0>
  407b28:	ldr	x0, [sp, #24]
  407b2c:	mov	w1, #0x3a                  	// #58
  407b30:	bl	405240 <strchr@plt>
  407b34:	cbz	x0, 407bb0 <get_addr_1@@Base+0x284>
  407b38:	ldur	x8, [x29, #-16]
  407b3c:	mov	w9, #0xa                   	// #10
  407b40:	strh	w9, [x8, #6]
  407b44:	ldr	w9, [sp, #20]
  407b48:	cbz	w9, 407b64 <get_addr_1@@Base+0x238>
  407b4c:	ldr	w8, [sp, #20]
  407b50:	cmp	w8, #0xa
  407b54:	b.eq	407b64 <get_addr_1@@Base+0x238>  // b.none
  407b58:	mov	w8, #0xffffffff            	// #-1
  407b5c:	stur	w8, [x29, #-4]
  407b60:	b	407cec <get_addr_1@@Base+0x3c0>
  407b64:	ldr	x1, [sp, #24]
  407b68:	ldur	x8, [x29, #-16]
  407b6c:	add	x2, x8, #0x8
  407b70:	mov	w0, #0xa                   	// #10
  407b74:	bl	405210 <inet_pton@plt>
  407b78:	cmp	w0, #0x0
  407b7c:	cset	w9, gt
  407b80:	tbnz	w9, #0, 407b90 <get_addr_1@@Base+0x264>
  407b84:	mov	w8, #0xffffffff            	// #-1
  407b88:	stur	w8, [x29, #-4]
  407b8c:	b	407cec <get_addr_1@@Base+0x3c0>
  407b90:	ldur	x8, [x29, #-16]
  407b94:	mov	w9, #0x10                  	// #16
  407b98:	strh	w9, [x8, #2]
  407b9c:	ldur	x8, [x29, #-16]
  407ba0:	mov	w9, #0xffff                	// #65535
  407ba4:	strh	w9, [x8, #4]
  407ba8:	stur	wzr, [x29, #-4]
  407bac:	b	407cec <get_addr_1@@Base+0x3c0>
  407bb0:	ldr	w8, [sp, #20]
  407bb4:	cmp	w8, #0x1c
  407bb8:	b.ne	407c7c <get_addr_1@@Base+0x350>  // b.any
  407bbc:	ldur	x8, [x29, #-16]
  407bc0:	mov	w9, #0x1c                  	// #28
  407bc4:	strh	w9, [x8, #6]
  407bc8:	ldr	x1, [sp, #24]
  407bcc:	ldur	x8, [x29, #-16]
  407bd0:	add	x2, x8, #0x8
  407bd4:	mov	w0, #0x1c                  	// #28
  407bd8:	mov	x3, #0x100                 	// #256
  407bdc:	bl	40d848 <mpls_pton@@Base>
  407be0:	cmp	w0, #0x0
  407be4:	cset	w9, gt
  407be8:	tbnz	w9, #0, 407bf8 <get_addr_1@@Base+0x2cc>
  407bec:	mov	w8, #0xffffffff            	// #-1
  407bf0:	stur	w8, [x29, #-4]
  407bf4:	b	407cec <get_addr_1@@Base+0x3c0>
  407bf8:	ldur	x8, [x29, #-16]
  407bfc:	mov	w9, #0x4                   	// #4
  407c00:	strh	w9, [x8, #2]
  407c04:	ldur	x8, [x29, #-16]
  407c08:	mov	w9, #0x14                  	// #20
  407c0c:	strh	w9, [x8, #4]
  407c10:	mov	w9, #0x40                  	// #64
  407c14:	str	w9, [sp, #12]
  407c18:	str	wzr, [sp, #8]
  407c1c:	ldr	w8, [sp, #8]
  407c20:	ldr	w9, [sp, #12]
  407c24:	cmp	w8, w9
  407c28:	b.cs	407c74 <get_addr_1@@Base+0x348>  // b.hs, b.nlast
  407c2c:	ldur	x8, [x29, #-16]
  407c30:	add	x8, x8, #0x8
  407c34:	ldrsw	x9, [sp, #8]
  407c38:	ldr	w0, [x8, x9, lsl #2]
  407c3c:	bl	404f20 <ntohl@plt>
  407c40:	and	w10, w0, #0x100
  407c44:	cbz	w10, 407c64 <get_addr_1@@Base+0x338>
  407c48:	ldr	w8, [sp, #8]
  407c4c:	add	w8, w8, #0x1
  407c50:	mov	w9, #0x4                   	// #4
  407c54:	mul	w8, w8, w9
  407c58:	ldur	x10, [x29, #-16]
  407c5c:	strh	w8, [x10, #2]
  407c60:	b	407c74 <get_addr_1@@Base+0x348>
  407c64:	ldr	w8, [sp, #8]
  407c68:	add	w8, w8, #0x1
  407c6c:	str	w8, [sp, #8]
  407c70:	b	407c1c <get_addr_1@@Base+0x2f0>
  407c74:	stur	wzr, [x29, #-4]
  407c78:	b	407cec <get_addr_1@@Base+0x3c0>
  407c7c:	ldur	x8, [x29, #-16]
  407c80:	mov	w9, #0x2                   	// #2
  407c84:	strh	w9, [x8, #6]
  407c88:	ldr	w9, [sp, #20]
  407c8c:	cbz	w9, 407ca8 <get_addr_1@@Base+0x37c>
  407c90:	ldr	w8, [sp, #20]
  407c94:	cmp	w8, #0x2
  407c98:	b.eq	407ca8 <get_addr_1@@Base+0x37c>  // b.none
  407c9c:	mov	w8, #0xffffffff            	// #-1
  407ca0:	stur	w8, [x29, #-4]
  407ca4:	b	407cec <get_addr_1@@Base+0x3c0>
  407ca8:	ldur	x8, [x29, #-16]
  407cac:	add	x0, x8, #0x8
  407cb0:	ldr	x1, [sp, #24]
  407cb4:	bl	40ab58 <sprint_time64@@Base+0x138>
  407cb8:	cmp	w0, #0x0
  407cbc:	cset	w9, gt
  407cc0:	tbnz	w9, #0, 407cd0 <get_addr_1@@Base+0x3a4>
  407cc4:	mov	w8, #0xffffffff            	// #-1
  407cc8:	stur	w8, [x29, #-4]
  407ccc:	b	407cec <get_addr_1@@Base+0x3c0>
  407cd0:	ldur	x8, [x29, #-16]
  407cd4:	mov	w9, #0x4                   	// #4
  407cd8:	strh	w9, [x8, #2]
  407cdc:	ldur	x8, [x29, #-16]
  407ce0:	mov	w9, #0xffff                	// #65535
  407ce4:	strh	w9, [x8, #4]
  407ce8:	stur	wzr, [x29, #-4]
  407cec:	ldur	w0, [x29, #-4]
  407cf0:	ldp	x29, x30, [sp, #48]
  407cf4:	add	sp, sp, #0x40
  407cf8:	ret
  407cfc:	sub	sp, sp, #0x30
  407d00:	stp	x29, x30, [sp, #32]
  407d04:	add	x29, sp, #0x20
  407d08:	stur	x0, [x29, #-8]
  407d0c:	ldur	x8, [x29, #-8]
  407d10:	ldrh	w9, [x8, #6]
  407d14:	cmp	w9, #0x2
  407d18:	str	w9, [sp, #8]
  407d1c:	b.eq	407d34 <get_addr_1@@Base+0x408>  // b.none
  407d20:	b	407d24 <get_addr_1@@Base+0x3f8>
  407d24:	ldr	w8, [sp, #8]
  407d28:	cmp	w8, #0xa
  407d2c:	b.eq	407d9c <get_addr_1@@Base+0x470>  // b.none
  407d30:	b	407e58 <get_addr_1@@Base+0x52c>
  407d34:	ldur	x8, [x29, #-8]
  407d38:	ldr	w9, [x8, #8]
  407d3c:	cbnz	w9, 407d54 <get_addr_1@@Base+0x428>
  407d40:	ldur	x8, [x29, #-8]
  407d44:	ldrh	w9, [x8]
  407d48:	orr	w9, w9, #0x6
  407d4c:	strh	w9, [x8]
  407d50:	b	407d98 <get_addr_1@@Base+0x46c>
  407d54:	ldur	x8, [x29, #-8]
  407d58:	ldr	w0, [x8, #8]
  407d5c:	bl	404f20 <ntohl@plt>
  407d60:	and	w9, w0, #0xf0000000
  407d64:	mov	w10, #0xe0000000            	// #-536870912
  407d68:	cmp	w9, w10
  407d6c:	b.ne	407d88 <get_addr_1@@Base+0x45c>  // b.any
  407d70:	ldur	x8, [x29, #-8]
  407d74:	ldrh	w9, [x8]
  407d78:	mov	w10, #0xa                   	// #10
  407d7c:	orr	w9, w9, w10
  407d80:	strh	w9, [x8]
  407d84:	b	407d98 <get_addr_1@@Base+0x46c>
  407d88:	ldur	x8, [x29, #-8]
  407d8c:	ldrh	w9, [x8]
  407d90:	orr	w9, w9, #0x2
  407d94:	strh	w9, [x8]
  407d98:	b	407e58 <get_addr_1@@Base+0x52c>
  407d9c:	ldur	x8, [x29, #-8]
  407da0:	add	x8, x8, #0x8
  407da4:	str	x8, [sp, #16]
  407da8:	ldr	x8, [sp, #16]
  407dac:	ldr	w9, [x8]
  407db0:	mov	w10, #0x0                   	// #0
  407db4:	str	w10, [sp, #4]
  407db8:	cbnz	w9, 407df8 <get_addr_1@@Base+0x4cc>
  407dbc:	ldr	x8, [sp, #16]
  407dc0:	ldr	w9, [x8, #4]
  407dc4:	mov	w10, #0x0                   	// #0
  407dc8:	str	w10, [sp, #4]
  407dcc:	cbnz	w9, 407df8 <get_addr_1@@Base+0x4cc>
  407dd0:	ldr	x8, [sp, #16]
  407dd4:	ldr	w9, [x8, #8]
  407dd8:	mov	w10, #0x0                   	// #0
  407ddc:	str	w10, [sp, #4]
  407de0:	cbnz	w9, 407df8 <get_addr_1@@Base+0x4cc>
  407de4:	ldr	x8, [sp, #16]
  407de8:	ldr	w9, [x8, #12]
  407dec:	cmp	w9, #0x0
  407df0:	cset	w9, eq  // eq = none
  407df4:	str	w9, [sp, #4]
  407df8:	ldr	w8, [sp, #4]
  407dfc:	and	w8, w8, #0x1
  407e00:	str	w8, [sp, #12]
  407e04:	ldr	w8, [sp, #12]
  407e08:	cbz	w8, 407e20 <get_addr_1@@Base+0x4f4>
  407e0c:	ldur	x8, [x29, #-8]
  407e10:	ldrh	w9, [x8]
  407e14:	orr	w9, w9, #0x6
  407e18:	strh	w9, [x8]
  407e1c:	b	407e58 <get_addr_1@@Base+0x52c>
  407e20:	ldur	x8, [x29, #-8]
  407e24:	ldrb	w9, [x8, #8]
  407e28:	cmp	w9, #0xff
  407e2c:	b.ne	407e48 <get_addr_1@@Base+0x51c>  // b.any
  407e30:	ldur	x8, [x29, #-8]
  407e34:	ldrh	w9, [x8]
  407e38:	mov	w10, #0xa                   	// #10
  407e3c:	orr	w9, w9, w10
  407e40:	strh	w9, [x8]
  407e44:	b	407e58 <get_addr_1@@Base+0x52c>
  407e48:	ldur	x8, [x29, #-8]
  407e4c:	ldrh	w9, [x8]
  407e50:	orr	w9, w9, #0x2
  407e54:	strh	w9, [x8]
  407e58:	ldp	x29, x30, [sp, #32]
  407e5c:	add	sp, sp, #0x30
  407e60:	ret

0000000000407e64 <af_bit_len@@Base>:
  407e64:	sub	sp, sp, #0x10
  407e68:	str	w0, [sp, #8]
  407e6c:	ldr	w8, [sp, #8]
  407e70:	subs	w8, w8, #0x2
  407e74:	mov	w9, w8
  407e78:	ubfx	x9, x9, #0, #32
  407e7c:	cmp	x9, #0x1a
  407e80:	str	x9, [sp]
  407e84:	b.hi	407edc <af_bit_len@@Base+0x78>  // b.pmore
  407e88:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  407e8c:	add	x8, x8, #0x840
  407e90:	ldr	x11, [sp]
  407e94:	ldrsw	x10, [x8, x11, lsl #2]
  407e98:	add	x9, x8, x10
  407e9c:	br	x9
  407ea0:	mov	w8, #0x80                  	// #128
  407ea4:	str	w8, [sp, #12]
  407ea8:	b	407ee0 <af_bit_len@@Base+0x7c>
  407eac:	mov	w8, #0x20                  	// #32
  407eb0:	str	w8, [sp, #12]
  407eb4:	b	407ee0 <af_bit_len@@Base+0x7c>
  407eb8:	mov	w8, #0x10                  	// #16
  407ebc:	str	w8, [sp, #12]
  407ec0:	b	407ee0 <af_bit_len@@Base+0x7c>
  407ec4:	mov	w8, #0x50                  	// #80
  407ec8:	str	w8, [sp, #12]
  407ecc:	b	407ee0 <af_bit_len@@Base+0x7c>
  407ed0:	mov	w8, #0x14                  	// #20
  407ed4:	str	w8, [sp, #12]
  407ed8:	b	407ee0 <af_bit_len@@Base+0x7c>
  407edc:	str	wzr, [sp, #12]
  407ee0:	ldr	w0, [sp, #12]
  407ee4:	add	sp, sp, #0x10
  407ee8:	ret

0000000000407eec <get_prefix_1@@Base>:
  407eec:	sub	sp, sp, #0x50
  407ef0:	stp	x29, x30, [sp, #64]
  407ef4:	add	x29, sp, #0x40
  407ef8:	mov	w8, #0x2f                  	// #47
  407efc:	stur	x0, [x29, #-16]
  407f00:	stur	x1, [x29, #-24]
  407f04:	stur	w2, [x29, #-28]
  407f08:	ldur	x0, [x29, #-24]
  407f0c:	mov	w1, w8
  407f10:	bl	405240 <strchr@plt>
  407f14:	str	x0, [sp, #24]
  407f18:	ldr	x9, [sp, #24]
  407f1c:	cbz	x9, 407f2c <get_prefix_1@@Base+0x40>
  407f20:	ldr	x8, [sp, #24]
  407f24:	mov	w9, #0x0                   	// #0
  407f28:	strb	w9, [x8]
  407f2c:	ldur	x0, [x29, #-16]
  407f30:	ldur	x1, [x29, #-24]
  407f34:	ldur	w2, [x29, #-28]
  407f38:	bl	40792c <get_addr_1@@Base>
  407f3c:	str	w0, [sp, #20]
  407f40:	ldr	x8, [sp, #24]
  407f44:	cbz	x8, 407f54 <get_prefix_1@@Base+0x68>
  407f48:	ldr	x8, [sp, #24]
  407f4c:	mov	w9, #0x2f                  	// #47
  407f50:	strb	w9, [x8]
  407f54:	ldr	w8, [sp, #20]
  407f58:	cbz	w8, 407f68 <get_prefix_1@@Base+0x7c>
  407f5c:	ldr	w8, [sp, #20]
  407f60:	stur	w8, [x29, #-4]
  407f64:	b	40803c <get_prefix_1@@Base+0x150>
  407f68:	ldur	x8, [x29, #-16]
  407f6c:	ldrh	w0, [x8, #6]
  407f70:	bl	407e64 <af_bit_len@@Base>
  407f74:	str	w0, [sp, #16]
  407f78:	str	wzr, [sp, #12]
  407f7c:	ldr	x8, [sp, #24]
  407f80:	cbz	x8, 408000 <get_prefix_1@@Base+0x114>
  407f84:	ldur	x8, [x29, #-16]
  407f88:	ldrsh	w9, [x8, #4]
  407f8c:	mov	w10, #0xfffffffe            	// #-2
  407f90:	cmp	w9, w10
  407f94:	b.ne	407fa4 <get_prefix_1@@Base+0xb8>  // b.any
  407f98:	mov	w8, #0xffffffff            	// #-1
  407f9c:	stur	w8, [x29, #-4]
  407fa0:	b	40803c <get_prefix_1@@Base+0x150>
  407fa4:	ldr	x8, [sp, #24]
  407fa8:	add	x1, x8, #0x1
  407fac:	add	x0, sp, #0x8
  407fb0:	mov	w9, wzr
  407fb4:	mov	w2, w9
  407fb8:	bl	40804c <get_prefix_1@@Base+0x160>
  407fbc:	cbz	w0, 407fcc <get_prefix_1@@Base+0xe0>
  407fc0:	mov	w8, #0xffffffff            	// #-1
  407fc4:	stur	w8, [x29, #-4]
  407fc8:	b	40803c <get_prefix_1@@Base+0x150>
  407fcc:	ldr	w8, [sp, #8]
  407fd0:	ldr	w9, [sp, #16]
  407fd4:	cmp	w8, w9
  407fd8:	b.ls	407fe8 <get_prefix_1@@Base+0xfc>  // b.plast
  407fdc:	mov	w8, #0xffffffff            	// #-1
  407fe0:	stur	w8, [x29, #-4]
  407fe4:	b	40803c <get_prefix_1@@Base+0x150>
  407fe8:	ldr	w8, [sp, #12]
  407fec:	orr	w8, w8, #0x1
  407ff0:	str	w8, [sp, #12]
  407ff4:	ldr	w8, [sp, #8]
  407ff8:	str	w8, [sp, #16]
  407ffc:	b	408018 <get_prefix_1@@Base+0x12c>
  408000:	ldur	x8, [x29, #-16]
  408004:	ldrsh	w9, [x8, #4]
  408008:	mov	w10, #0xfffffffe            	// #-2
  40800c:	cmp	w9, w10
  408010:	b.ne	408018 <get_prefix_1@@Base+0x12c>  // b.any
  408014:	str	wzr, [sp, #16]
  408018:	ldr	w8, [sp, #12]
  40801c:	ldur	x9, [x29, #-16]
  408020:	ldrh	w10, [x9]
  408024:	orr	w8, w10, w8
  408028:	strh	w8, [x9]
  40802c:	ldr	w8, [sp, #16]
  408030:	ldur	x9, [x29, #-16]
  408034:	strh	w8, [x9, #4]
  408038:	stur	wzr, [x29, #-4]
  40803c:	ldur	w0, [x29, #-4]
  408040:	ldp	x29, x30, [sp, #64]
  408044:	add	sp, sp, #0x50
  408048:	ret
  40804c:	sub	sp, sp, #0x150
  408050:	stp	x29, x30, [sp, #304]
  408054:	str	x28, [sp, #320]
  408058:	add	x29, sp, #0x130
  40805c:	stur	x0, [x29, #-16]
  408060:	stur	x1, [x29, #-24]
  408064:	stur	w2, [x29, #-28]
  408068:	ldur	x0, [x29, #-16]
  40806c:	ldur	x1, [x29, #-24]
  408070:	ldur	w2, [x29, #-28]
  408074:	bl	406d64 <get_unsigned@@Base>
  408078:	cbnz	w0, 408084 <get_prefix_1@@Base+0x198>
  40807c:	stur	wzr, [x29, #-4]
  408080:	b	4080dc <get_prefix_1@@Base+0x1f0>
  408084:	ldur	x1, [x29, #-24]
  408088:	add	x0, sp, #0xc
  40808c:	mov	w2, #0x2                   	// #2
  408090:	bl	40792c <get_addr_1@@Base>
  408094:	cbnz	w0, 4080d4 <get_prefix_1@@Base+0x1e8>
  408098:	ldrh	w8, [sp, #18]
  40809c:	cmp	w8, #0x2
  4080a0:	b.ne	4080d4 <get_prefix_1@@Base+0x1e8>  // b.any
  4080a4:	ldr	w0, [sp, #20]
  4080a8:	bl	406cdc <mask2bits@@Base>
  4080ac:	str	w0, [sp, #8]
  4080b0:	ldr	w8, [sp, #8]
  4080b4:	cmp	w8, #0x0
  4080b8:	cset	w8, lt  // lt = tstop
  4080bc:	tbnz	w8, #0, 4080d4 <get_prefix_1@@Base+0x1e8>
  4080c0:	ldr	w8, [sp, #8]
  4080c4:	ldur	x9, [x29, #-16]
  4080c8:	str	w8, [x9]
  4080cc:	stur	wzr, [x29, #-4]
  4080d0:	b	4080dc <get_prefix_1@@Base+0x1f0>
  4080d4:	mov	w8, #0xffffffff            	// #-1
  4080d8:	stur	w8, [x29, #-4]
  4080dc:	ldur	w0, [x29, #-4]
  4080e0:	ldr	x28, [sp, #320]
  4080e4:	ldp	x29, x30, [sp, #304]
  4080e8:	add	sp, sp, #0x150
  4080ec:	ret

00000000004080f0 <get_addr@@Base>:
  4080f0:	sub	sp, sp, #0x40
  4080f4:	stp	x29, x30, [sp, #48]
  4080f8:	add	x29, sp, #0x30
  4080fc:	stur	x0, [x29, #-8]
  408100:	stur	x1, [x29, #-16]
  408104:	stur	w2, [x29, #-20]
  408108:	ldur	x0, [x29, #-8]
  40810c:	ldur	x1, [x29, #-16]
  408110:	ldur	w2, [x29, #-20]
  408114:	bl	40792c <get_addr_1@@Base>
  408118:	cbz	w0, 408164 <get_addr@@Base+0x74>
  40811c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  408120:	ldr	x8, [x8, #3992]
  408124:	ldr	x0, [x8]
  408128:	ldur	w9, [x29, #-20]
  40812c:	str	x0, [sp, #16]
  408130:	mov	w0, w9
  408134:	bl	408178 <get_addr@@Base+0x88>
  408138:	ldur	x3, [x29, #-16]
  40813c:	ldr	x8, [sp, #16]
  408140:	str	x0, [sp, #8]
  408144:	mov	x0, x8
  408148:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40814c:	add	x1, x1, #0xa26
  408150:	ldr	x2, [sp, #8]
  408154:	bl	4053c0 <fprintf@plt>
  408158:	mov	w9, #0x1                   	// #1
  40815c:	mov	w0, w9
  408160:	bl	404e90 <exit@plt>
  408164:	mov	w8, wzr
  408168:	mov	w0, w8
  40816c:	ldp	x29, x30, [sp, #48]
  408170:	add	sp, sp, #0x40
  408174:	ret
  408178:	sub	sp, sp, #0x20
  40817c:	stp	x29, x30, [sp, #16]
  408180:	add	x29, sp, #0x10
  408184:	str	w0, [sp, #4]
  408188:	ldr	w8, [sp, #4]
  40818c:	cbnz	w8, 4081a0 <get_addr@@Base+0xb0>
  408190:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408194:	add	x8, x8, #0xd9f
  408198:	str	x8, [sp, #8]
  40819c:	b	4081ac <get_addr@@Base+0xbc>
  4081a0:	ldr	w0, [sp, #4]
  4081a4:	bl	408e2c <family_name@@Base>
  4081a8:	str	x0, [sp, #8]
  4081ac:	ldr	x0, [sp, #8]
  4081b0:	ldp	x29, x30, [sp, #16]
  4081b4:	add	sp, sp, #0x20
  4081b8:	ret

00000000004081bc <get_addr_rta@@Base>:
  4081bc:	sub	sp, sp, #0x40
  4081c0:	stp	x29, x30, [sp, #48]
  4081c4:	add	x29, sp, #0x30
  4081c8:	stur	x0, [x29, #-16]
  4081cc:	str	x1, [sp, #24]
  4081d0:	str	w2, [sp, #20]
  4081d4:	ldr	x8, [sp, #24]
  4081d8:	ldrh	w9, [x8]
  4081dc:	mov	w0, w9
  4081e0:	sxtw	x8, w0
  4081e4:	subs	x8, x8, #0x4
  4081e8:	str	w8, [sp, #16]
  4081ec:	ldr	x10, [sp, #24]
  4081f0:	add	x10, x10, #0x4
  4081f4:	str	x10, [sp, #8]
  4081f8:	ldr	w8, [sp, #16]
  4081fc:	subs	w8, w8, #0x2
  408200:	mov	w10, w8
  408204:	ubfx	x10, x10, #0, #32
  408208:	cmp	x10, #0xe
  40820c:	str	x10, [sp]
  408210:	b.hi	4082e4 <get_addr_rta@@Base+0x128>  // b.pmore
  408214:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408218:	add	x8, x8, #0x8ac
  40821c:	ldr	x11, [sp]
  408220:	ldrsw	x10, [x8, x11, lsl #2]
  408224:	add	x9, x8, x10
  408228:	br	x9
  40822c:	ldur	x8, [x29, #-16]
  408230:	mov	w9, #0x2                   	// #2
  408234:	strh	w9, [x8, #6]
  408238:	ldur	x8, [x29, #-16]
  40823c:	mov	w9, #0x4                   	// #4
  408240:	strh	w9, [x8, #2]
  408244:	ldur	x8, [x29, #-16]
  408248:	ldr	x10, [sp, #8]
  40824c:	ldr	w9, [x10]
  408250:	str	w9, [x8, #8]
  408254:	b	4082f0 <get_addr_rta@@Base+0x134>
  408258:	ldur	x8, [x29, #-16]
  40825c:	mov	w9, #0xa                   	// #10
  408260:	strh	w9, [x8, #6]
  408264:	ldur	x8, [x29, #-16]
  408268:	mov	w9, #0x10                  	// #16
  40826c:	strh	w9, [x8, #2]
  408270:	ldur	x8, [x29, #-16]
  408274:	ldr	x10, [sp, #8]
  408278:	ldr	q0, [x10]
  40827c:	stur	q0, [x8, #8]
  408280:	b	4082f0 <get_addr_rta@@Base+0x134>
  408284:	ldur	x8, [x29, #-16]
  408288:	mov	w9, #0xc                   	// #12
  40828c:	strh	w9, [x8, #6]
  408290:	ldur	x8, [x29, #-16]
  408294:	mov	w9, #0x2                   	// #2
  408298:	strh	w9, [x8, #2]
  40829c:	ldur	x8, [x29, #-16]
  4082a0:	ldr	x10, [sp, #8]
  4082a4:	ldrh	w9, [x10]
  4082a8:	strh	w9, [x8, #8]
  4082ac:	b	4082f0 <get_addr_rta@@Base+0x134>
  4082b0:	ldur	x8, [x29, #-16]
  4082b4:	mov	w9, #0x4                   	// #4
  4082b8:	strh	w9, [x8, #6]
  4082bc:	ldur	x8, [x29, #-16]
  4082c0:	mov	w9, #0xa                   	// #10
  4082c4:	strh	w9, [x8, #2]
  4082c8:	ldur	x8, [x29, #-16]
  4082cc:	ldr	x10, [sp, #8]
  4082d0:	ldr	x11, [x10]
  4082d4:	str	x11, [x8, #8]
  4082d8:	ldrh	w9, [x10, #8]
  4082dc:	strh	w9, [x8, #16]
  4082e0:	b	4082f0 <get_addr_rta@@Base+0x134>
  4082e4:	mov	w8, #0xffffffff            	// #-1
  4082e8:	stur	w8, [x29, #-4]
  4082ec:	b	40833c <get_addr_rta@@Base+0x180>
  4082f0:	ldr	w8, [sp, #20]
  4082f4:	cbz	w8, 408318 <get_addr_rta@@Base+0x15c>
  4082f8:	ldr	w8, [sp, #20]
  4082fc:	ldur	x9, [x29, #-16]
  408300:	ldrh	w10, [x9, #6]
  408304:	cmp	w8, w10
  408308:	b.eq	408318 <get_addr_rta@@Base+0x15c>  // b.none
  40830c:	mov	w8, #0xfffffffe            	// #-2
  408310:	stur	w8, [x29, #-4]
  408314:	b	40833c <get_addr_rta@@Base+0x180>
  408318:	ldur	x8, [x29, #-16]
  40831c:	mov	w9, #0xffff                	// #65535
  408320:	strh	w9, [x8, #4]
  408324:	ldur	x8, [x29, #-16]
  408328:	mov	w9, #0x0                   	// #0
  40832c:	strh	w9, [x8]
  408330:	ldur	x0, [x29, #-16]
  408334:	bl	407cfc <get_addr_1@@Base+0x3d0>
  408338:	stur	wzr, [x29, #-4]
  40833c:	ldur	w0, [x29, #-4]
  408340:	ldp	x29, x30, [sp, #48]
  408344:	add	sp, sp, #0x40
  408348:	ret

000000000040834c <get_prefix@@Base>:
  40834c:	sub	sp, sp, #0x40
  408350:	stp	x29, x30, [sp, #48]
  408354:	add	x29, sp, #0x30
  408358:	stur	x0, [x29, #-8]
  40835c:	stur	x1, [x29, #-16]
  408360:	stur	w2, [x29, #-20]
  408364:	ldur	w8, [x29, #-20]
  408368:	cmp	w8, #0x11
  40836c:	b.ne	408398 <get_prefix@@Base+0x4c>  // b.any
  408370:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  408374:	ldr	x8, [x8, #3992]
  408378:	ldr	x0, [x8]
  40837c:	ldur	x2, [x29, #-16]
  408380:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408384:	add	x1, x1, #0xa57
  408388:	bl	4053c0 <fprintf@plt>
  40838c:	mov	w9, #0x1                   	// #1
  408390:	mov	w0, w9
  408394:	bl	404e90 <exit@plt>
  408398:	ldur	x0, [x29, #-8]
  40839c:	ldur	x1, [x29, #-16]
  4083a0:	ldur	w2, [x29, #-20]
  4083a4:	bl	407eec <get_prefix_1@@Base>
  4083a8:	cbz	w0, 4083f4 <get_prefix@@Base+0xa8>
  4083ac:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  4083b0:	ldr	x8, [x8, #3992]
  4083b4:	ldr	x0, [x8]
  4083b8:	ldur	w9, [x29, #-20]
  4083bc:	str	x0, [sp, #16]
  4083c0:	mov	w0, w9
  4083c4:	bl	408178 <get_addr@@Base+0x88>
  4083c8:	ldur	x3, [x29, #-16]
  4083cc:	ldr	x8, [sp, #16]
  4083d0:	str	x0, [sp, #8]
  4083d4:	mov	x0, x8
  4083d8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4083dc:	add	x1, x1, #0xa9f
  4083e0:	ldr	x2, [sp, #8]
  4083e4:	bl	4053c0 <fprintf@plt>
  4083e8:	mov	w9, #0x1                   	// #1
  4083ec:	mov	w0, w9
  4083f0:	bl	404e90 <exit@plt>
  4083f4:	mov	w8, wzr
  4083f8:	mov	w0, w8
  4083fc:	ldp	x29, x30, [sp, #48]
  408400:	add	sp, sp, #0x40
  408404:	ret

0000000000408408 <get_addr32@@Base>:
  408408:	sub	sp, sp, #0x130
  40840c:	stp	x29, x30, [sp, #272]
  408410:	str	x28, [sp, #288]
  408414:	add	x29, sp, #0x110
  408418:	mov	w2, #0x2                   	// #2
  40841c:	mov	x8, sp
  408420:	stur	x0, [x29, #-8]
  408424:	ldur	x1, [x29, #-8]
  408428:	mov	x0, x8
  40842c:	bl	40792c <get_addr_1@@Base>
  408430:	cbz	w0, 40845c <get_addr32@@Base+0x54>
  408434:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  408438:	ldr	x8, [x8, #3992]
  40843c:	ldr	x0, [x8]
  408440:	ldur	x2, [x29, #-8]
  408444:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408448:	add	x1, x1, #0xacf
  40844c:	bl	4053c0 <fprintf@plt>
  408450:	mov	w9, #0x1                   	// #1
  408454:	mov	w0, w9
  408458:	bl	404e90 <exit@plt>
  40845c:	ldr	w0, [sp, #8]
  408460:	ldr	x28, [sp, #288]
  408464:	ldp	x29, x30, [sp, #272]
  408468:	add	sp, sp, #0x130
  40846c:	ret

0000000000408470 <incomplete_command@@Base>:
  408470:	sub	sp, sp, #0x20
  408474:	stp	x29, x30, [sp, #16]
  408478:	add	x29, sp, #0x10
  40847c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  408480:	ldr	x8, [x8, #3992]
  408484:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408488:	add	x1, x1, #0xb02
  40848c:	mov	w0, #0xffffffff            	// #-1
  408490:	ldr	x8, [x8]
  408494:	stur	w0, [x29, #-4]
  408498:	mov	x0, x8
  40849c:	bl	4053c0 <fprintf@plt>
  4084a0:	ldur	w9, [x29, #-4]
  4084a4:	mov	w0, w9
  4084a8:	bl	404e90 <exit@plt>

00000000004084ac <missarg@@Base>:
  4084ac:	sub	sp, sp, #0x20
  4084b0:	stp	x29, x30, [sp, #16]
  4084b4:	add	x29, sp, #0x10
  4084b8:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  4084bc:	ldr	x8, [x8, #3992]
  4084c0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4084c4:	add	x1, x1, #0xb33
  4084c8:	mov	w9, #0xffffffff            	// #-1
  4084cc:	str	x0, [sp, #8]
  4084d0:	ldr	x0, [x8]
  4084d4:	ldr	x2, [sp, #8]
  4084d8:	str	w9, [sp, #4]
  4084dc:	bl	4053c0 <fprintf@plt>
  4084e0:	ldr	w9, [sp, #4]
  4084e4:	mov	w0, w9
  4084e8:	bl	404e90 <exit@plt>

00000000004084ec <invarg@@Base>:
  4084ec:	sub	sp, sp, #0x30
  4084f0:	stp	x29, x30, [sp, #32]
  4084f4:	add	x29, sp, #0x20
  4084f8:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  4084fc:	ldr	x8, [x8, #3992]
  408500:	adrp	x9, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408504:	add	x9, x9, #0xb55
  408508:	mov	w10, #0xffffffff            	// #-1
  40850c:	stur	x0, [x29, #-8]
  408510:	str	x1, [sp, #16]
  408514:	ldr	x0, [x8]
  408518:	ldr	x2, [sp, #16]
  40851c:	ldur	x3, [x29, #-8]
  408520:	mov	x1, x9
  408524:	str	w10, [sp, #12]
  408528:	bl	4053c0 <fprintf@plt>
  40852c:	ldr	w10, [sp, #12]
  408530:	mov	w0, w10
  408534:	bl	404e90 <exit@plt>

0000000000408538 <duparg@@Base>:
  408538:	sub	sp, sp, #0x30
  40853c:	stp	x29, x30, [sp, #32]
  408540:	add	x29, sp, #0x20
  408544:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  408548:	ldr	x8, [x8, #3992]
  40854c:	adrp	x9, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408550:	add	x9, x9, #0xb78
  408554:	mov	w10, #0xffffffff            	// #-1
  408558:	stur	x0, [x29, #-8]
  40855c:	str	x1, [sp, #16]
  408560:	ldr	x0, [x8]
  408564:	ldur	x2, [x29, #-8]
  408568:	ldr	x3, [sp, #16]
  40856c:	mov	x1, x9
  408570:	str	w10, [sp, #12]
  408574:	bl	4053c0 <fprintf@plt>
  408578:	ldr	w10, [sp, #12]
  40857c:	mov	w0, w10
  408580:	bl	404e90 <exit@plt>

0000000000408584 <duparg2@@Base>:
  408584:	sub	sp, sp, #0x30
  408588:	stp	x29, x30, [sp, #32]
  40858c:	add	x29, sp, #0x20
  408590:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  408594:	ldr	x8, [x8, #3992]
  408598:	adrp	x9, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40859c:	add	x9, x9, #0xbaa
  4085a0:	mov	w10, #0xffffffff            	// #-1
  4085a4:	stur	x0, [x29, #-8]
  4085a8:	str	x1, [sp, #16]
  4085ac:	ldr	x0, [x8]
  4085b0:	ldur	x2, [x29, #-8]
  4085b4:	ldr	x3, [sp, #16]
  4085b8:	mov	x1, x9
  4085bc:	str	w10, [sp, #12]
  4085c0:	bl	4053c0 <fprintf@plt>
  4085c4:	ldr	w10, [sp, #12]
  4085c8:	mov	w0, w10
  4085cc:	bl	404e90 <exit@plt>

00000000004085d0 <nodev@@Base>:
  4085d0:	sub	sp, sp, #0x20
  4085d4:	stp	x29, x30, [sp, #16]
  4085d8:	add	x29, sp, #0x10
  4085dc:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  4085e0:	ldr	x8, [x8, #3992]
  4085e4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4085e8:	add	x1, x1, #0xbe2
  4085ec:	mov	w9, #0xffffffff            	// #-1
  4085f0:	str	x0, [sp, #8]
  4085f4:	ldr	x0, [x8]
  4085f8:	ldr	x2, [sp, #8]
  4085fc:	str	w9, [sp, #4]
  408600:	bl	4053c0 <fprintf@plt>
  408604:	ldr	w9, [sp, #4]
  408608:	mov	w0, w9
  40860c:	ldp	x29, x30, [sp, #16]
  408610:	add	sp, sp, #0x20
  408614:	ret

0000000000408618 <check_ifname@@Base>:
  408618:	sub	sp, sp, #0x20
  40861c:	stp	x29, x30, [sp, #16]
  408620:	add	x29, sp, #0x10
  408624:	str	x0, [sp]
  408628:	ldr	x0, [sp]
  40862c:	bl	404e70 <strlen@plt>
  408630:	cmp	x0, #0x10
  408634:	b.cc	408644 <check_ifname@@Base+0x2c>  // b.lo, b.ul, b.last
  408638:	mov	w8, #0xffffffff            	// #-1
  40863c:	stur	w8, [x29, #-4]
  408640:	b	408650 <check_ifname@@Base+0x38>
  408644:	ldr	x0, [sp]
  408648:	bl	408660 <check_ifname@@Base+0x48>
  40864c:	stur	w0, [x29, #-4]
  408650:	ldur	w0, [x29, #-4]
  408654:	ldp	x29, x30, [sp, #16]
  408658:	add	sp, sp, #0x20
  40865c:	ret
  408660:	sub	sp, sp, #0x20
  408664:	stp	x29, x30, [sp, #16]
  408668:	add	x29, sp, #0x10
  40866c:	str	x0, [sp]
  408670:	ldr	x8, [sp]
  408674:	ldrb	w9, [x8]
  408678:	cbnz	w9, 408688 <check_ifname@@Base+0x70>
  40867c:	mov	w8, #0xffffffff            	// #-1
  408680:	stur	w8, [x29, #-4]
  408684:	b	4086e0 <check_ifname@@Base+0xc8>
  408688:	ldr	x8, [sp]
  40868c:	ldrb	w9, [x8]
  408690:	cbz	w9, 4086dc <check_ifname@@Base+0xc4>
  408694:	ldr	x8, [sp]
  408698:	ldrb	w9, [x8]
  40869c:	cmp	w9, #0x2f
  4086a0:	b.eq	4086c0 <check_ifname@@Base+0xa8>  // b.none
  4086a4:	bl	4051a0 <__ctype_b_loc@plt>
  4086a8:	ldr	x8, [x0]
  4086ac:	ldr	x9, [sp]
  4086b0:	ldrb	w10, [x9]
  4086b4:	ldrh	w10, [x8, w10, sxtw #1]
  4086b8:	and	w10, w10, #0x2000
  4086bc:	cbz	w10, 4086cc <check_ifname@@Base+0xb4>
  4086c0:	mov	w8, #0xffffffff            	// #-1
  4086c4:	stur	w8, [x29, #-4]
  4086c8:	b	4086e0 <check_ifname@@Base+0xc8>
  4086cc:	ldr	x8, [sp]
  4086d0:	add	x8, x8, #0x1
  4086d4:	str	x8, [sp]
  4086d8:	b	408688 <check_ifname@@Base+0x70>
  4086dc:	stur	wzr, [x29, #-4]
  4086e0:	ldur	w0, [x29, #-4]
  4086e4:	ldp	x29, x30, [sp, #16]
  4086e8:	add	sp, sp, #0x20
  4086ec:	ret

00000000004086f0 <check_altifname@@Base>:
  4086f0:	sub	sp, sp, #0x20
  4086f4:	stp	x29, x30, [sp, #16]
  4086f8:	add	x29, sp, #0x10
  4086fc:	str	x0, [sp, #8]
  408700:	ldr	x0, [sp, #8]
  408704:	bl	408660 <check_ifname@@Base+0x48>
  408708:	ldp	x29, x30, [sp, #16]
  40870c:	add	sp, sp, #0x20
  408710:	ret

0000000000408714 <get_ifname@@Base>:
  408714:	sub	sp, sp, #0x30
  408718:	stp	x29, x30, [sp, #32]
  40871c:	add	x29, sp, #0x20
  408720:	stur	x0, [x29, #-8]
  408724:	str	x1, [sp, #16]
  408728:	ldr	x0, [sp, #16]
  40872c:	bl	408618 <check_ifname@@Base>
  408730:	str	w0, [sp, #12]
  408734:	ldr	w8, [sp, #12]
  408738:	cbnz	w8, 40874c <get_ifname@@Base+0x38>
  40873c:	ldur	x0, [x29, #-8]
  408740:	ldr	x1, [sp, #16]
  408744:	mov	x2, #0x10                  	// #16
  408748:	bl	405340 <strncpy@plt>
  40874c:	ldr	w0, [sp, #12]
  408750:	ldp	x29, x30, [sp, #32]
  408754:	add	sp, sp, #0x30
  408758:	ret

000000000040875c <get_ifname_rta@@Base>:
  40875c:	sub	sp, sp, #0x30
  408760:	stp	x29, x30, [sp, #32]
  408764:	add	x29, sp, #0x20
  408768:	stur	w0, [x29, #-12]
  40876c:	str	x1, [sp, #8]
  408770:	ldr	x8, [sp, #8]
  408774:	cbz	x8, 408788 <get_ifname_rta@@Base+0x2c>
  408778:	ldr	x0, [sp, #8]
  40877c:	bl	4087e4 <get_ifname_rta@@Base+0x88>
  408780:	str	x0, [sp]
  408784:	b	4087b4 <get_ifname_rta@@Base+0x58>
  408788:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40878c:	ldr	x8, [x8, #3992]
  408790:	ldr	x0, [x8]
  408794:	ldur	w2, [x29, #-12]
  408798:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40879c:	add	x1, x1, #0xbfb
  4087a0:	bl	4053c0 <fprintf@plt>
  4087a4:	ldur	w9, [x29, #-12]
  4087a8:	mov	w0, w9
  4087ac:	bl	40af74 <ll_idx_n2a@@Base>
  4087b0:	str	x0, [sp]
  4087b4:	ldr	x0, [sp]
  4087b8:	bl	408618 <check_ifname@@Base>
  4087bc:	cbz	w0, 4087cc <get_ifname_rta@@Base+0x70>
  4087c0:	mov	x8, xzr
  4087c4:	stur	x8, [x29, #-8]
  4087c8:	b	4087d4 <get_ifname_rta@@Base+0x78>
  4087cc:	ldr	x8, [sp]
  4087d0:	stur	x8, [x29, #-8]
  4087d4:	ldur	x0, [x29, #-8]
  4087d8:	ldp	x29, x30, [sp, #32]
  4087dc:	add	sp, sp, #0x30
  4087e0:	ret
  4087e4:	sub	sp, sp, #0x10
  4087e8:	str	x0, [sp, #8]
  4087ec:	ldr	x8, [sp, #8]
  4087f0:	add	x0, x8, #0x4
  4087f4:	add	sp, sp, #0x10
  4087f8:	ret

00000000004087fc <matches@@Base>:
  4087fc:	sub	sp, sp, #0x20
  408800:	str	x0, [sp, #16]
  408804:	str	x1, [sp, #8]
  408808:	ldr	x8, [sp, #16]
  40880c:	ldrb	w9, [x8]
  408810:	cbnz	w9, 408824 <matches@@Base+0x28>
  408814:	mov	w8, #0x1                   	// #1
  408818:	and	w8, w8, #0x1
  40881c:	strb	w8, [sp, #31]
  408820:	b	4088a0 <matches@@Base+0xa4>
  408824:	ldr	x8, [sp, #8]
  408828:	ldrb	w9, [x8]
  40882c:	mov	w10, #0x0                   	// #0
  408830:	str	w10, [sp, #4]
  408834:	cbz	w9, 408854 <matches@@Base+0x58>
  408838:	ldr	x8, [sp, #16]
  40883c:	ldrb	w9, [x8]
  408840:	ldr	x8, [sp, #8]
  408844:	ldrb	w10, [x8]
  408848:	cmp	w9, w10
  40884c:	cset	w9, eq  // eq = none
  408850:	str	w9, [sp, #4]
  408854:	ldr	w8, [sp, #4]
  408858:	tbnz	w8, #0, 408860 <matches@@Base+0x64>
  40885c:	b	40887c <matches@@Base+0x80>
  408860:	ldr	x8, [sp, #16]
  408864:	add	x8, x8, #0x1
  408868:	str	x8, [sp, #16]
  40886c:	ldr	x8, [sp, #8]
  408870:	add	x8, x8, #0x1
  408874:	str	x8, [sp, #8]
  408878:	b	408824 <matches@@Base+0x28>
  40887c:	ldr	x8, [sp, #16]
  408880:	ldrb	w9, [x8]
  408884:	cmp	w9, #0x0
  408888:	cset	w9, ne  // ne = any
  40888c:	mov	w10, #0x1                   	// #1
  408890:	eor	w9, w9, #0x1
  408894:	eor	w9, w9, w10
  408898:	and	w9, w9, w10
  40889c:	strb	w9, [sp, #31]
  4088a0:	ldrb	w8, [sp, #31]
  4088a4:	and	w0, w8, #0x1
  4088a8:	add	sp, sp, #0x20
  4088ac:	ret

00000000004088b0 <inet_addr_match@@Base>:
  4088b0:	sub	sp, sp, #0x50
  4088b4:	stp	x29, x30, [sp, #64]
  4088b8:	add	x29, sp, #0x40
  4088bc:	stur	x0, [x29, #-16]
  4088c0:	stur	x1, [x29, #-24]
  4088c4:	stur	w2, [x29, #-28]
  4088c8:	ldur	x8, [x29, #-16]
  4088cc:	add	x8, x8, #0x8
  4088d0:	str	x8, [sp, #24]
  4088d4:	ldur	x8, [x29, #-24]
  4088d8:	add	x8, x8, #0x8
  4088dc:	str	x8, [sp, #16]
  4088e0:	ldur	w9, [x29, #-28]
  4088e4:	asr	w9, w9, #5
  4088e8:	str	w9, [sp, #12]
  4088ec:	ldur	w9, [x29, #-28]
  4088f0:	and	w9, w9, #0x1f
  4088f4:	stur	w9, [x29, #-28]
  4088f8:	ldr	w9, [sp, #12]
  4088fc:	cbz	w9, 40892c <inet_addr_match@@Base+0x7c>
  408900:	ldr	x0, [sp, #24]
  408904:	ldr	x1, [sp, #16]
  408908:	ldr	w8, [sp, #12]
  40890c:	lsl	w8, w8, #2
  408910:	mov	w2, w8
  408914:	sxtw	x2, w2
  408918:	bl	405180 <memcmp@plt>
  40891c:	cbz	w0, 40892c <inet_addr_match@@Base+0x7c>
  408920:	mov	w8, #0xffffffff            	// #-1
  408924:	stur	w8, [x29, #-4]
  408928:	b	408998 <inet_addr_match@@Base+0xe8>
  40892c:	ldur	w8, [x29, #-28]
  408930:	cbz	w8, 408994 <inet_addr_match@@Base+0xe4>
  408934:	ldr	x8, [sp, #24]
  408938:	ldrsw	x9, [sp, #12]
  40893c:	ldr	w10, [x8, x9, lsl #2]
  408940:	str	w10, [sp, #8]
  408944:	ldr	x8, [sp, #16]
  408948:	ldrsw	x9, [sp, #12]
  40894c:	ldr	w10, [x8, x9, lsl #2]
  408950:	str	w10, [sp, #4]
  408954:	ldur	w10, [x29, #-28]
  408958:	mov	w11, #0x20                  	// #32
  40895c:	subs	w10, w11, w10
  408960:	mov	w11, #0xffffffff            	// #-1
  408964:	lsl	w0, w11, w10
  408968:	bl	404ec0 <htonl@plt>
  40896c:	str	w0, [sp]
  408970:	ldr	w10, [sp, #8]
  408974:	ldr	w11, [sp, #4]
  408978:	eor	w10, w10, w11
  40897c:	ldr	w11, [sp]
  408980:	and	w10, w10, w11
  408984:	cbz	w10, 408994 <inet_addr_match@@Base+0xe4>
  408988:	mov	w8, #0x1                   	// #1
  40898c:	stur	w8, [x29, #-4]
  408990:	b	408998 <inet_addr_match@@Base+0xe8>
  408994:	stur	wzr, [x29, #-4]
  408998:	ldur	w0, [x29, #-4]
  40899c:	ldp	x29, x30, [sp, #64]
  4089a0:	add	sp, sp, #0x50
  4089a4:	ret

00000000004089a8 <inet_addr_match_rta@@Base>:
  4089a8:	sub	sp, sp, #0x140
  4089ac:	stp	x29, x30, [sp, #288]
  4089b0:	str	x28, [sp, #304]
  4089b4:	add	x29, sp, #0x120
  4089b8:	stur	x0, [x29, #-16]
  4089bc:	stur	x1, [x29, #-24]
  4089c0:	ldur	x8, [x29, #-24]
  4089c4:	cbz	x8, 4089e8 <inet_addr_match_rta@@Base+0x40>
  4089c8:	ldur	x8, [x29, #-16]
  4089cc:	ldrh	w9, [x8, #6]
  4089d0:	cbz	w9, 4089e8 <inet_addr_match_rta@@Base+0x40>
  4089d4:	ldur	x8, [x29, #-16]
  4089d8:	ldrsh	w9, [x8, #4]
  4089dc:	cmp	w9, #0x0
  4089e0:	cset	w9, gt
  4089e4:	tbnz	w9, #0, 4089f0 <inet_addr_match_rta@@Base+0x48>
  4089e8:	stur	wzr, [x29, #-4]
  4089ec:	b	408a2c <inet_addr_match_rta@@Base+0x84>
  4089f0:	ldur	x1, [x29, #-24]
  4089f4:	ldur	x8, [x29, #-16]
  4089f8:	ldrh	w2, [x8, #6]
  4089fc:	mov	x0, sp
  408a00:	bl	4081bc <get_addr_rta@@Base>
  408a04:	cbz	w0, 408a14 <inet_addr_match_rta@@Base+0x6c>
  408a08:	mov	w8, #0xffffffff            	// #-1
  408a0c:	stur	w8, [x29, #-4]
  408a10:	b	408a2c <inet_addr_match_rta@@Base+0x84>
  408a14:	ldur	x1, [x29, #-16]
  408a18:	ldur	x8, [x29, #-16]
  408a1c:	ldrsh	w2, [x8, #4]
  408a20:	mov	x0, sp
  408a24:	bl	4088b0 <inet_addr_match@@Base>
  408a28:	stur	w0, [x29, #-4]
  408a2c:	ldur	w0, [x29, #-4]
  408a30:	ldr	x28, [sp, #304]
  408a34:	ldp	x29, x30, [sp, #288]
  408a38:	add	sp, sp, #0x140
  408a3c:	ret

0000000000408a40 <__get_hz@@Base>:
  408a40:	stp	x29, x30, [sp, #-32]!
  408a44:	str	x28, [sp, #16]
  408a48:	mov	x29, sp
  408a4c:	sub	sp, sp, #0x430
  408a50:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408a54:	add	x0, x0, #0xc27
  408a58:	str	wzr, [sp, #40]
  408a5c:	bl	4053a0 <getenv@plt>
  408a60:	cbz	x0, 408a9c <__get_hz@@Base+0x5c>
  408a64:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408a68:	add	x0, x0, #0xc27
  408a6c:	bl	4053a0 <getenv@plt>
  408a70:	bl	404fd0 <atoi@plt>
  408a74:	str	w0, [sp, #20]
  408a78:	cbz	w0, 408a88 <__get_hz@@Base+0x48>
  408a7c:	ldr	w8, [sp, #20]
  408a80:	str	w8, [sp, #16]
  408a84:	b	408a90 <__get_hz@@Base+0x50>
  408a88:	mov	w8, #0x64                  	// #100
  408a8c:	str	w8, [sp, #16]
  408a90:	ldr	w8, [sp, #16]
  408a94:	stur	w8, [x29, #-4]
  408a98:	b	408ba8 <__get_hz@@Base+0x168>
  408a9c:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408aa0:	add	x0, x0, #0xc2a
  408aa4:	bl	4053a0 <getenv@plt>
  408aa8:	cbz	x0, 408adc <__get_hz@@Base+0x9c>
  408aac:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408ab0:	add	x0, x0, #0xc2a
  408ab4:	bl	4053a0 <getenv@plt>
  408ab8:	add	x8, sp, #0x2c
  408abc:	str	x0, [sp, #8]
  408ac0:	mov	x0, x8
  408ac4:	mov	x1, #0x3ff                 	// #1023
  408ac8:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408acc:	add	x2, x2, #0xa04
  408ad0:	ldr	x3, [sp, #8]
  408ad4:	bl	404f90 <snprintf@plt>
  408ad8:	b	408b2c <__get_hz@@Base+0xec>
  408adc:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408ae0:	add	x0, x0, #0xc3a
  408ae4:	bl	4053a0 <getenv@plt>
  408ae8:	cbz	x0, 408b1c <__get_hz@@Base+0xdc>
  408aec:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408af0:	add	x0, x0, #0xc3a
  408af4:	bl	4053a0 <getenv@plt>
  408af8:	add	x8, sp, #0x2c
  408afc:	str	x0, [sp]
  408b00:	mov	x0, x8
  408b04:	mov	x1, #0x3ff                 	// #1023
  408b08:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408b0c:	add	x2, x2, #0xc44
  408b10:	ldr	x3, [sp]
  408b14:	bl	404f90 <snprintf@plt>
  408b18:	b	408b2c <__get_hz@@Base+0xec>
  408b1c:	add	x0, sp, #0x2c
  408b20:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408b24:	add	x1, x1, #0xc52
  408b28:	bl	405290 <strcpy@plt>
  408b2c:	add	x0, sp, #0x2c
  408b30:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408b34:	add	x1, x1, #0xf58
  408b38:	bl	4052a0 <fopen64@plt>
  408b3c:	str	x0, [sp, #32]
  408b40:	ldr	x8, [sp, #32]
  408b44:	cbz	x8, 408b8c <__get_hz@@Base+0x14c>
  408b48:	ldr	x0, [sp, #32]
  408b4c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408b50:	add	x1, x1, #0xc63
  408b54:	add	x2, sp, #0x1c
  408b58:	add	x3, sp, #0x18
  408b5c:	bl	405030 <__isoc99_fscanf@plt>
  408b60:	cmp	w0, #0x2
  408b64:	b.ne	408b84 <__get_hz@@Base+0x144>  // b.any
  408b68:	ldr	w8, [sp, #28]
  408b6c:	mov	w9, #0x4240                	// #16960
  408b70:	movk	w9, #0xf, lsl #16
  408b74:	cmp	w8, w9
  408b78:	b.ne	408b84 <__get_hz@@Base+0x144>  // b.any
  408b7c:	ldr	w8, [sp, #24]
  408b80:	str	w8, [sp, #40]
  408b84:	ldr	x0, [sp, #32]
  408b88:	bl	404fc0 <fclose@plt>
  408b8c:	ldr	w8, [sp, #40]
  408b90:	cbz	w8, 408ba0 <__get_hz@@Base+0x160>
  408b94:	ldr	w8, [sp, #40]
  408b98:	stur	w8, [x29, #-4]
  408b9c:	b	408ba8 <__get_hz@@Base+0x168>
  408ba0:	mov	w8, #0x64                  	// #100
  408ba4:	stur	w8, [x29, #-4]
  408ba8:	ldur	w0, [x29, #-4]
  408bac:	add	sp, sp, #0x430
  408bb0:	ldr	x28, [sp, #16]
  408bb4:	ldp	x29, x30, [sp], #32
  408bb8:	ret

0000000000408bbc <__get_user_hz@@Base>:
  408bbc:	stp	x29, x30, [sp, #-16]!
  408bc0:	mov	x29, sp
  408bc4:	mov	w0, #0x2                   	// #2
  408bc8:	bl	4052d0 <sysconf@plt>
  408bcc:	ldp	x29, x30, [sp], #16
  408bd0:	ret

0000000000408bd4 <rt_addr_n2a_r@@Base>:
  408bd4:	sub	sp, sp, #0x50
  408bd8:	stp	x29, x30, [sp, #64]
  408bdc:	add	x29, sp, #0x40
  408be0:	stur	w0, [x29, #-12]
  408be4:	stur	w1, [x29, #-16]
  408be8:	stur	x2, [x29, #-24]
  408bec:	str	x3, [sp, #32]
  408bf0:	str	w4, [sp, #28]
  408bf4:	ldur	w8, [x29, #-12]
  408bf8:	subs	w8, w8, #0x2
  408bfc:	mov	w9, w8
  408c00:	ubfx	x9, x9, #0, #32
  408c04:	cmp	x9, #0x1a
  408c08:	str	x9, [sp, #8]
  408c0c:	b.hi	408cf0 <rt_addr_n2a_r@@Base+0x11c>  // b.pmore
  408c10:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408c14:	add	x8, x8, #0x8e8
  408c18:	ldr	x11, [sp, #8]
  408c1c:	ldrsw	x10, [x8, x11, lsl #2]
  408c20:	add	x9, x8, x10
  408c24:	br	x9
  408c28:	ldur	w0, [x29, #-12]
  408c2c:	ldur	x1, [x29, #-24]
  408c30:	ldr	x2, [sp, #32]
  408c34:	ldr	w3, [sp, #28]
  408c38:	bl	4053e0 <inet_ntop@plt>
  408c3c:	stur	x0, [x29, #-8]
  408c40:	b	408cfc <rt_addr_n2a_r@@Base+0x128>
  408c44:	ldur	w0, [x29, #-12]
  408c48:	ldur	x1, [x29, #-24]
  408c4c:	ldr	x2, [sp, #32]
  408c50:	ldrsw	x3, [sp, #28]
  408c54:	bl	40d6b8 <mpls_ntop@@Base>
  408c58:	stur	x0, [x29, #-8]
  408c5c:	b	408cfc <rt_addr_n2a_r@@Base+0x128>
  408c60:	ldur	x0, [x29, #-24]
  408c64:	ldur	w1, [x29, #-16]
  408c68:	ldr	x3, [sp, #32]
  408c6c:	ldr	w4, [sp, #28]
  408c70:	mov	w2, #0xffff                	// #65535
  408c74:	bl	40bd68 <ll_addr_n2a@@Base>
  408c78:	stur	x0, [x29, #-8]
  408c7c:	b	408cfc <rt_addr_n2a_r@@Base+0x128>
  408c80:	ldur	x8, [x29, #-24]
  408c84:	str	x8, [sp, #16]
  408c88:	ldr	x8, [sp, #16]
  408c8c:	ldrh	w9, [x8]
  408c90:	cmp	w9, #0x2
  408c94:	str	w9, [sp, #4]
  408c98:	b.eq	408cb0 <rt_addr_n2a_r@@Base+0xdc>  // b.none
  408c9c:	b	408ca0 <rt_addr_n2a_r@@Base+0xcc>
  408ca0:	ldr	w8, [sp, #4]
  408ca4:	cmp	w8, #0xa
  408ca8:	b.eq	408cd0 <rt_addr_n2a_r@@Base+0xfc>  // b.none
  408cac:	b	408cf0 <rt_addr_n2a_r@@Base+0x11c>
  408cb0:	ldr	x8, [sp, #16]
  408cb4:	add	x1, x8, #0x4
  408cb8:	ldr	x2, [sp, #32]
  408cbc:	ldr	w3, [sp, #28]
  408cc0:	mov	w0, #0x2                   	// #2
  408cc4:	bl	4053e0 <inet_ntop@plt>
  408cc8:	stur	x0, [x29, #-8]
  408ccc:	b	408cfc <rt_addr_n2a_r@@Base+0x128>
  408cd0:	ldr	x8, [sp, #16]
  408cd4:	add	x1, x8, #0x8
  408cd8:	ldr	x2, [sp, #32]
  408cdc:	ldr	w3, [sp, #28]
  408ce0:	mov	w0, #0xa                   	// #10
  408ce4:	bl	4053e0 <inet_ntop@plt>
  408ce8:	stur	x0, [x29, #-8]
  408cec:	b	408cfc <rt_addr_n2a_r@@Base+0x128>
  408cf0:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408cf4:	add	x8, x8, #0xc76
  408cf8:	stur	x8, [x29, #-8]
  408cfc:	ldur	x0, [x29, #-8]
  408d00:	ldp	x29, x30, [sp, #64]
  408d04:	add	sp, sp, #0x50
  408d08:	ret

0000000000408d0c <rt_addr_n2a@@Base>:
  408d0c:	sub	sp, sp, #0x20
  408d10:	stp	x29, x30, [sp, #16]
  408d14:	add	x29, sp, #0x10
  408d18:	adrp	x3, 424000 <memcpy@GLIBC_2.17>
  408d1c:	add	x3, x3, #0x388
  408d20:	mov	w4, #0x100                 	// #256
  408d24:	stur	w0, [x29, #-4]
  408d28:	str	w1, [sp, #8]
  408d2c:	str	x2, [sp]
  408d30:	ldur	w0, [x29, #-4]
  408d34:	ldr	w1, [sp, #8]
  408d38:	ldr	x2, [sp]
  408d3c:	bl	408bd4 <rt_addr_n2a_r@@Base>
  408d40:	ldp	x29, x30, [sp, #16]
  408d44:	add	sp, sp, #0x20
  408d48:	ret

0000000000408d4c <read_family@@Base>:
  408d4c:	sub	sp, sp, #0x20
  408d50:	stp	x29, x30, [sp, #16]
  408d54:	add	x29, sp, #0x10
  408d58:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408d5c:	add	x1, x1, #0xc7a
  408d60:	str	x0, [sp, #8]
  408d64:	str	wzr, [sp, #4]
  408d68:	ldr	x0, [sp, #8]
  408d6c:	bl	405190 <strcmp@plt>
  408d70:	cbnz	w0, 408d80 <read_family@@Base+0x34>
  408d74:	mov	w8, #0x2                   	// #2
  408d78:	str	w8, [sp, #4]
  408d7c:	b	408e1c <read_family@@Base+0xd0>
  408d80:	ldr	x0, [sp, #8]
  408d84:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408d88:	add	x1, x1, #0xc7f
  408d8c:	bl	405190 <strcmp@plt>
  408d90:	cbnz	w0, 408da0 <read_family@@Base+0x54>
  408d94:	mov	w8, #0xa                   	// #10
  408d98:	str	w8, [sp, #4]
  408d9c:	b	408e1c <read_family@@Base+0xd0>
  408da0:	ldr	x0, [sp, #8]
  408da4:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  408da8:	add	x1, x1, #0x2e6
  408dac:	bl	405190 <strcmp@plt>
  408db0:	cbnz	w0, 408dc0 <read_family@@Base+0x74>
  408db4:	mov	w8, #0x11                  	// #17
  408db8:	str	w8, [sp, #4]
  408dbc:	b	408e1c <read_family@@Base+0xd0>
  408dc0:	ldr	x0, [sp, #8]
  408dc4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408dc8:	add	x1, x1, #0xc85
  408dcc:	bl	405190 <strcmp@plt>
  408dd0:	cbnz	w0, 408de0 <read_family@@Base+0x94>
  408dd4:	mov	w8, #0x4                   	// #4
  408dd8:	str	w8, [sp, #4]
  408ddc:	b	408e1c <read_family@@Base+0xd0>
  408de0:	ldr	x0, [sp, #8]
  408de4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408de8:	add	x1, x1, #0xc89
  408dec:	bl	405190 <strcmp@plt>
  408df0:	cbnz	w0, 408e00 <read_family@@Base+0xb4>
  408df4:	mov	w8, #0x1c                  	// #28
  408df8:	str	w8, [sp, #4]
  408dfc:	b	408e1c <read_family@@Base+0xd0>
  408e00:	ldr	x0, [sp, #8]
  408e04:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408e08:	add	x1, x1, #0xc8e
  408e0c:	bl	405190 <strcmp@plt>
  408e10:	cbnz	w0, 408e1c <read_family@@Base+0xd0>
  408e14:	mov	w8, #0x7                   	// #7
  408e18:	str	w8, [sp, #4]
  408e1c:	ldr	w0, [sp, #4]
  408e20:	ldp	x29, x30, [sp, #16]
  408e24:	add	sp, sp, #0x20
  408e28:	ret

0000000000408e2c <family_name@@Base>:
  408e2c:	sub	sp, sp, #0x10
  408e30:	str	w0, [sp, #4]
  408e34:	ldr	w8, [sp, #4]
  408e38:	cmp	w8, #0x2
  408e3c:	b.ne	408e50 <family_name@@Base+0x24>  // b.any
  408e40:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408e44:	add	x8, x8, #0xc7a
  408e48:	str	x8, [sp, #8]
  408e4c:	b	408ee8 <family_name@@Base+0xbc>
  408e50:	ldr	w8, [sp, #4]
  408e54:	cmp	w8, #0xa
  408e58:	b.ne	408e6c <family_name@@Base+0x40>  // b.any
  408e5c:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408e60:	add	x8, x8, #0xc7f
  408e64:	str	x8, [sp, #8]
  408e68:	b	408ee8 <family_name@@Base+0xbc>
  408e6c:	ldr	w8, [sp, #4]
  408e70:	cmp	w8, #0x11
  408e74:	b.ne	408e88 <family_name@@Base+0x5c>  // b.any
  408e78:	adrp	x8, 413000 <_IO_stdin_used@@Base+0xcf0>
  408e7c:	add	x8, x8, #0x2e6
  408e80:	str	x8, [sp, #8]
  408e84:	b	408ee8 <family_name@@Base+0xbc>
  408e88:	ldr	w8, [sp, #4]
  408e8c:	cmp	w8, #0x4
  408e90:	b.ne	408ea4 <family_name@@Base+0x78>  // b.any
  408e94:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408e98:	add	x8, x8, #0xc85
  408e9c:	str	x8, [sp, #8]
  408ea0:	b	408ee8 <family_name@@Base+0xbc>
  408ea4:	ldr	w8, [sp, #4]
  408ea8:	cmp	w8, #0x1c
  408eac:	b.ne	408ec0 <family_name@@Base+0x94>  // b.any
  408eb0:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408eb4:	add	x8, x8, #0xc89
  408eb8:	str	x8, [sp, #8]
  408ebc:	b	408ee8 <family_name@@Base+0xbc>
  408ec0:	ldr	w8, [sp, #4]
  408ec4:	cmp	w8, #0x7
  408ec8:	b.ne	408edc <family_name@@Base+0xb0>  // b.any
  408ecc:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408ed0:	add	x8, x8, #0xc8e
  408ed4:	str	x8, [sp, #8]
  408ed8:	b	408ee8 <family_name@@Base+0xbc>
  408edc:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  408ee0:	add	x8, x8, #0xc76
  408ee4:	str	x8, [sp, #8]
  408ee8:	ldr	x0, [sp, #8]
  408eec:	add	sp, sp, #0x10
  408ef0:	ret

0000000000408ef4 <format_host_r@@Base>:
  408ef4:	sub	sp, sp, #0x50
  408ef8:	stp	x29, x30, [sp, #64]
  408efc:	add	x29, sp, #0x40
  408f00:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  408f04:	ldr	x8, [x8, #4064]
  408f08:	stur	w0, [x29, #-12]
  408f0c:	stur	w1, [x29, #-16]
  408f10:	stur	x2, [x29, #-24]
  408f14:	str	x3, [sp, #32]
  408f18:	str	w4, [sp, #28]
  408f1c:	ldr	w9, [x8]
  408f20:	cbz	w9, 408f88 <format_host_r@@Base+0x94>
  408f24:	ldur	w8, [x29, #-16]
  408f28:	cmp	w8, #0x0
  408f2c:	cset	w8, gt
  408f30:	tbnz	w8, #0, 408f44 <format_host_r@@Base+0x50>
  408f34:	ldur	w0, [x29, #-12]
  408f38:	bl	408fb4 <format_host_r@@Base+0xc0>
  408f3c:	str	w0, [sp, #12]
  408f40:	b	408f4c <format_host_r@@Base+0x58>
  408f44:	ldur	w8, [x29, #-16]
  408f48:	str	w8, [sp, #12]
  408f4c:	ldr	w8, [sp, #12]
  408f50:	stur	w8, [x29, #-16]
  408f54:	ldur	w8, [x29, #-16]
  408f58:	cmp	w8, #0x0
  408f5c:	cset	w8, le
  408f60:	tbnz	w8, #0, 408f88 <format_host_r@@Base+0x94>
  408f64:	ldur	x0, [x29, #-24]
  408f68:	ldur	w1, [x29, #-16]
  408f6c:	ldur	w2, [x29, #-12]
  408f70:	bl	408fe8 <format_host_r@@Base+0xf4>
  408f74:	str	x0, [sp, #16]
  408f78:	cbz	x0, 408f88 <format_host_r@@Base+0x94>
  408f7c:	ldr	x8, [sp, #16]
  408f80:	stur	x8, [x29, #-8]
  408f84:	b	408fa4 <format_host_r@@Base+0xb0>
  408f88:	ldur	w0, [x29, #-12]
  408f8c:	ldur	w1, [x29, #-16]
  408f90:	ldur	x2, [x29, #-24]
  408f94:	ldr	x3, [sp, #32]
  408f98:	ldr	w4, [sp, #28]
  408f9c:	bl	408bd4 <rt_addr_n2a_r@@Base>
  408fa0:	stur	x0, [x29, #-8]
  408fa4:	ldur	x0, [x29, #-8]
  408fa8:	ldp	x29, x30, [sp, #64]
  408fac:	add	sp, sp, #0x50
  408fb0:	ret
  408fb4:	sub	sp, sp, #0x20
  408fb8:	stp	x29, x30, [sp, #16]
  408fbc:	add	x29, sp, #0x10
  408fc0:	mov	w8, #0x8                   	// #8
  408fc4:	stur	w0, [x29, #-4]
  408fc8:	ldur	w0, [x29, #-4]
  408fcc:	str	w8, [sp, #8]
  408fd0:	bl	407e64 <af_bit_len@@Base>
  408fd4:	ldr	w8, [sp, #8]
  408fd8:	sdiv	w0, w0, w8
  408fdc:	ldp	x29, x30, [sp, #16]
  408fe0:	add	sp, sp, #0x20
  408fe4:	ret
  408fe8:	sub	sp, sp, #0x60
  408fec:	stp	x29, x30, [sp, #80]
  408ff0:	add	x29, sp, #0x50
  408ff4:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  408ff8:	add	x8, x8, #0x590
  408ffc:	stur	x0, [x29, #-16]
  409000:	stur	w1, [x29, #-20]
  409004:	stur	w2, [x29, #-24]
  409008:	ldur	w9, [x29, #-24]
  40900c:	cmp	w9, #0xa
  409010:	str	x8, [sp, #24]
  409014:	b.ne	40906c <format_host_r@@Base+0x178>  // b.any
  409018:	ldur	x8, [x29, #-16]
  40901c:	ldr	w9, [x8]
  409020:	cbnz	w9, 40906c <format_host_r@@Base+0x178>
  409024:	ldur	x8, [x29, #-16]
  409028:	ldr	w9, [x8, #4]
  40902c:	cbnz	w9, 40906c <format_host_r@@Base+0x178>
  409030:	ldur	x8, [x29, #-16]
  409034:	ldr	w9, [x8, #8]
  409038:	mov	w0, #0xffff                	// #65535
  40903c:	str	w9, [sp, #20]
  409040:	bl	404ec0 <htonl@plt>
  409044:	ldr	w9, [sp, #20]
  409048:	cmp	w9, w0
  40904c:	b.ne	40906c <format_host_r@@Base+0x178>  // b.any
  409050:	mov	w8, #0x2                   	// #2
  409054:	stur	w8, [x29, #-24]
  409058:	ldur	x9, [x29, #-16]
  40905c:	add	x9, x9, #0xc
  409060:	stur	x9, [x29, #-16]
  409064:	mov	w8, #0x4                   	// #4
  409068:	stur	w8, [x29, #-20]
  40906c:	ldur	x8, [x29, #-16]
  409070:	ldursw	x9, [x29, #-20]
  409074:	add	x8, x8, x9
  409078:	ldur	w10, [x8, #-4]
  40907c:	mov	w11, #0x101                 	// #257
  409080:	udiv	w12, w10, w11
  409084:	mul	w11, w12, w11
  409088:	subs	w10, w10, w11
  40908c:	str	w10, [sp, #36]
  409090:	ldr	w10, [sp, #36]
  409094:	mov	w8, w10
  409098:	mov	x9, #0x8                   	// #8
  40909c:	mul	x8, x9, x8
  4090a0:	ldr	x9, [sp, #24]
  4090a4:	add	x8, x9, x8
  4090a8:	ldr	x8, [x8]
  4090ac:	stur	x8, [x29, #-32]
  4090b0:	ldur	x8, [x29, #-32]
  4090b4:	cbz	x8, 409118 <format_host_r@@Base+0x224>
  4090b8:	ldur	x8, [x29, #-32]
  4090bc:	ldrh	w9, [x8, #22]
  4090c0:	ldur	w10, [x29, #-24]
  4090c4:	cmp	w9, w10
  4090c8:	b.ne	409108 <format_host_r@@Base+0x214>  // b.any
  4090cc:	ldur	x8, [x29, #-32]
  4090d0:	ldrh	w9, [x8, #18]
  4090d4:	ldur	w10, [x29, #-20]
  4090d8:	cmp	w9, w10
  4090dc:	b.ne	409108 <format_host_r@@Base+0x214>  // b.any
  4090e0:	ldur	x8, [x29, #-32]
  4090e4:	add	x0, x8, #0x18
  4090e8:	ldur	x1, [x29, #-16]
  4090ec:	ldursw	x2, [x29, #-20]
  4090f0:	bl	405180 <memcmp@plt>
  4090f4:	cbnz	w0, 409108 <format_host_r@@Base+0x214>
  4090f8:	ldur	x8, [x29, #-32]
  4090fc:	ldr	x8, [x8, #8]
  409100:	stur	x8, [x29, #-8]
  409104:	b	409228 <format_host_r@@Base+0x334>
  409108:	ldur	x8, [x29, #-32]
  40910c:	ldr	x8, [x8]
  409110:	stur	x8, [x29, #-32]
  409114:	b	4090b0 <format_host_r@@Base+0x1bc>
  409118:	mov	x0, #0x118                 	// #280
  40911c:	bl	405000 <malloc@plt>
  409120:	stur	x0, [x29, #-32]
  409124:	ldur	x8, [x29, #-32]
  409128:	cbnz	x8, 409138 <format_host_r@@Base+0x244>
  40912c:	mov	x8, xzr
  409130:	stur	x8, [x29, #-8]
  409134:	b	409228 <format_host_r@@Base+0x334>
  409138:	ldur	w8, [x29, #-24]
  40913c:	ldur	x9, [x29, #-32]
  409140:	strh	w8, [x9, #22]
  409144:	ldur	w8, [x29, #-20]
  409148:	ldur	x9, [x29, #-32]
  40914c:	strh	w8, [x9, #18]
  409150:	ldur	x9, [x29, #-32]
  409154:	mov	x10, #0x8                   	// #8
  409158:	mov	x11, xzr
  40915c:	str	x11, [x9, #8]
  409160:	ldur	x9, [x29, #-32]
  409164:	add	x0, x9, #0x18
  409168:	ldur	x1, [x29, #-16]
  40916c:	ldursw	x2, [x29, #-20]
  409170:	str	x10, [sp, #8]
  409174:	bl	404e40 <memcpy@plt>
  409178:	ldr	w8, [sp, #36]
  40917c:	mov	w9, w8
  409180:	ldr	x10, [sp, #8]
  409184:	mul	x9, x10, x9
  409188:	ldr	x11, [sp, #24]
  40918c:	add	x9, x11, x9
  409190:	ldr	x9, [x9]
  409194:	ldur	x12, [x29, #-32]
  409198:	str	x9, [x12]
  40919c:	ldur	x9, [x29, #-32]
  4091a0:	ldr	w8, [sp, #36]
  4091a4:	mov	w12, w8
  4091a8:	mul	x12, x10, x12
  4091ac:	add	x12, x11, x12
  4091b0:	str	x9, [x12]
  4091b4:	adrp	x9, 424000 <memcpy@GLIBC_2.17>
  4091b8:	add	x9, x9, #0x588
  4091bc:	ldr	w8, [x9]
  4091c0:	add	w8, w8, #0x1
  4091c4:	str	w8, [x9]
  4091c8:	cmp	w8, #0x1
  4091cc:	b.ne	4091d8 <format_host_r@@Base+0x2e4>  // b.any
  4091d0:	mov	w0, #0x1                   	// #1
  4091d4:	bl	404f00 <sethostent@plt>
  4091d8:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  4091dc:	ldr	x8, [x8, #4016]
  4091e0:	ldr	x0, [x8]
  4091e4:	bl	405280 <fflush@plt>
  4091e8:	ldur	x8, [x29, #-16]
  4091ec:	ldur	w1, [x29, #-20]
  4091f0:	ldur	w2, [x29, #-24]
  4091f4:	mov	x0, x8
  4091f8:	bl	4051f0 <gethostbyaddr@plt>
  4091fc:	str	x0, [sp, #40]
  409200:	ldr	x8, [sp, #40]
  409204:	cbz	x8, 40921c <format_host_r@@Base+0x328>
  409208:	ldr	x8, [sp, #40]
  40920c:	ldr	x0, [x8]
  409210:	bl	405100 <strdup@plt>
  409214:	ldur	x8, [x29, #-32]
  409218:	str	x0, [x8, #8]
  40921c:	ldur	x8, [x29, #-32]
  409220:	ldr	x8, [x8, #8]
  409224:	stur	x8, [x29, #-8]
  409228:	ldur	x0, [x29, #-8]
  40922c:	ldp	x29, x30, [sp, #80]
  409230:	add	sp, sp, #0x60
  409234:	ret

0000000000409238 <format_host@@Base>:
  409238:	sub	sp, sp, #0x20
  40923c:	stp	x29, x30, [sp, #16]
  409240:	add	x29, sp, #0x10
  409244:	adrp	x3, 424000 <memcpy@GLIBC_2.17>
  409248:	add	x3, x3, #0x488
  40924c:	mov	w4, #0x100                 	// #256
  409250:	stur	w0, [x29, #-4]
  409254:	str	w1, [sp, #8]
  409258:	str	x2, [sp]
  40925c:	ldur	w0, [x29, #-4]
  409260:	ldr	w1, [sp, #8]
  409264:	ldr	x2, [sp]
  409268:	bl	408ef4 <format_host_r@@Base>
  40926c:	ldp	x29, x30, [sp, #16]
  409270:	add	sp, sp, #0x20
  409274:	ret

0000000000409278 <hexstring_n2a@@Base>:
  409278:	sub	sp, sp, #0x40
  40927c:	stp	x29, x30, [sp, #48]
  409280:	add	x29, sp, #0x30
  409284:	stur	x0, [x29, #-8]
  409288:	stur	w1, [x29, #-12]
  40928c:	str	x2, [sp, #24]
  409290:	str	w3, [sp, #20]
  409294:	ldr	x8, [sp, #24]
  409298:	str	x8, [sp, #8]
  40929c:	str	wzr, [sp, #4]
  4092a0:	ldr	w8, [sp, #4]
  4092a4:	ldur	w9, [x29, #-12]
  4092a8:	cmp	w8, w9
  4092ac:	b.ge	409304 <hexstring_n2a@@Base+0x8c>  // b.tcont
  4092b0:	ldr	w8, [sp, #20]
  4092b4:	cmp	w8, #0x3
  4092b8:	b.ge	4092c0 <hexstring_n2a@@Base+0x48>  // b.tcont
  4092bc:	b	409304 <hexstring_n2a@@Base+0x8c>
  4092c0:	ldr	x0, [sp, #8]
  4092c4:	ldur	x8, [x29, #-8]
  4092c8:	ldrsw	x9, [sp, #4]
  4092cc:	ldrb	w2, [x8, x9]
  4092d0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4092d4:	add	x1, x1, #0xdf7
  4092d8:	bl	404f40 <sprintf@plt>
  4092dc:	ldr	x8, [sp, #8]
  4092e0:	add	x8, x8, #0x2
  4092e4:	str	x8, [sp, #8]
  4092e8:	ldr	w10, [sp, #20]
  4092ec:	subs	w10, w10, #0x2
  4092f0:	str	w10, [sp, #20]
  4092f4:	ldr	w8, [sp, #4]
  4092f8:	add	w8, w8, #0x1
  4092fc:	str	w8, [sp, #4]
  409300:	b	4092a0 <hexstring_n2a@@Base+0x28>
  409304:	ldr	x0, [sp, #24]
  409308:	ldp	x29, x30, [sp, #48]
  40930c:	add	sp, sp, #0x40
  409310:	ret

0000000000409314 <hexstring_a2n@@Base>:
  409314:	sub	sp, sp, #0x70
  409318:	stp	x29, x30, [sp, #96]
  40931c:	add	x29, sp, #0x60
  409320:	mov	x8, #0x2                   	// #2
  409324:	stur	x0, [x29, #-16]
  409328:	stur	x1, [x29, #-24]
  40932c:	stur	w2, [x29, #-28]
  409330:	stur	x3, [x29, #-40]
  409334:	stur	wzr, [x29, #-44]
  409338:	ldur	x0, [x29, #-16]
  40933c:	str	x8, [sp, #24]
  409340:	bl	404e70 <strlen@plt>
  409344:	ldr	x8, [sp, #24]
  409348:	udiv	x9, x0, x8
  40934c:	mul	x9, x9, x8
  409350:	subs	x9, x0, x9
  409354:	cbz	x9, 409364 <hexstring_a2n@@Base+0x50>
  409358:	mov	x8, xzr
  40935c:	stur	x8, [x29, #-8]
  409360:	b	40945c <hexstring_a2n@@Base+0x148>
  409364:	ldur	w8, [x29, #-44]
  409368:	ldur	w9, [x29, #-28]
  40936c:	mov	w10, #0x0                   	// #0
  409370:	cmp	w8, w9
  409374:	str	w10, [sp, #20]
  409378:	b.cs	409390 <hexstring_a2n@@Base+0x7c>  // b.hs, b.nlast
  40937c:	ldur	x0, [x29, #-16]
  409380:	bl	404e70 <strlen@plt>
  409384:	cmp	x0, #0x1
  409388:	cset	w8, hi  // hi = pmore
  40938c:	str	w8, [sp, #20]
  409390:	ldr	w8, [sp, #20]
  409394:	tbnz	w8, #0, 40939c <hexstring_a2n@@Base+0x88>
  409398:	b	409440 <hexstring_a2n@@Base+0x12c>
  40939c:	ldur	x1, [x29, #-16]
  4093a0:	add	x8, sp, #0x21
  4093a4:	mov	x0, x8
  4093a8:	mov	x2, #0x2                   	// #2
  4093ac:	str	x8, [sp, #8]
  4093b0:	bl	405340 <strncpy@plt>
  4093b4:	mov	w9, #0x0                   	// #0
  4093b8:	ldr	x8, [sp, #8]
  4093bc:	strb	w9, [x8, #2]
  4093c0:	bl	405390 <__errno_location@plt>
  4093c4:	str	wzr, [x0]
  4093c8:	ldr	x0, [sp, #8]
  4093cc:	add	x1, sp, #0x28
  4093d0:	mov	w2, #0x10                  	// #16
  4093d4:	bl	404e60 <strtoul@plt>
  4093d8:	str	w0, [sp, #36]
  4093dc:	bl	405390 <__errno_location@plt>
  4093e0:	ldr	w9, [x0]
  4093e4:	cbnz	w9, 409400 <hexstring_a2n@@Base+0xec>
  4093e8:	ldr	w8, [sp, #36]
  4093ec:	cmp	w8, #0xff
  4093f0:	b.hi	409400 <hexstring_a2n@@Base+0xec>  // b.pmore
  4093f4:	ldr	x8, [sp, #40]
  4093f8:	ldrb	w9, [x8]
  4093fc:	cbz	w9, 40940c <hexstring_a2n@@Base+0xf8>
  409400:	mov	x8, xzr
  409404:	stur	x8, [x29, #-8]
  409408:	b	40945c <hexstring_a2n@@Base+0x148>
  40940c:	ldr	w8, [sp, #36]
  409410:	ldur	x9, [x29, #-24]
  409414:	ldur	w10, [x29, #-44]
  409418:	mov	w11, w10
  40941c:	mov	w10, w11
  409420:	add	w10, w10, #0x1
  409424:	stur	w10, [x29, #-44]
  409428:	add	x9, x9, x11
  40942c:	strb	w8, [x9]
  409430:	ldur	x9, [x29, #-16]
  409434:	add	x9, x9, #0x2
  409438:	stur	x9, [x29, #-16]
  40943c:	b	409364 <hexstring_a2n@@Base+0x50>
  409440:	ldur	x8, [x29, #-40]
  409444:	cbz	x8, 409454 <hexstring_a2n@@Base+0x140>
  409448:	ldur	w8, [x29, #-44]
  40944c:	ldur	x9, [x29, #-40]
  409450:	str	w8, [x9]
  409454:	ldur	x8, [x29, #-24]
  409458:	stur	x8, [x29, #-8]
  40945c:	ldur	x0, [x29, #-8]
  409460:	ldp	x29, x30, [sp, #96]
  409464:	add	sp, sp, #0x70
  409468:	ret

000000000040946c <hex2mem@@Base>:
  40946c:	sub	sp, sp, #0x40
  409470:	stp	x29, x30, [sp, #48]
  409474:	add	x29, sp, #0x30
  409478:	stur	x0, [x29, #-16]
  40947c:	str	x1, [sp, #24]
  409480:	str	w2, [sp, #20]
  409484:	str	wzr, [sp, #16]
  409488:	str	wzr, [sp, #12]
  40948c:	ldr	w8, [sp, #16]
  409490:	ldr	w9, [sp, #20]
  409494:	cmp	w8, w9
  409498:	b.ge	409550 <hex2mem@@Base+0xe4>  // b.tcont
  40949c:	ldur	x8, [x29, #-16]
  4094a0:	ldrsw	x9, [sp, #12]
  4094a4:	ldrb	w0, [x8, x9]
  4094a8:	bl	406b3c <get_hex@@Base>
  4094ac:	str	w0, [sp, #8]
  4094b0:	ldr	w10, [sp, #8]
  4094b4:	cmp	w10, #0x0
  4094b8:	cset	w10, ge  // ge = tcont
  4094bc:	tbnz	w10, #0, 4094cc <hex2mem@@Base+0x60>
  4094c0:	mov	w8, #0xffffffff            	// #-1
  4094c4:	stur	w8, [x29, #-4]
  4094c8:	b	409554 <hex2mem@@Base+0xe8>
  4094cc:	ldr	w8, [sp, #8]
  4094d0:	lsl	w8, w8, #4
  4094d4:	ldr	x9, [sp, #24]
  4094d8:	ldrsw	x10, [sp, #16]
  4094dc:	add	x9, x9, x10
  4094e0:	strb	w8, [x9]
  4094e4:	ldur	x9, [x29, #-16]
  4094e8:	ldr	w8, [sp, #12]
  4094ec:	add	w8, w8, #0x1
  4094f0:	ldrb	w0, [x9, w8, sxtw]
  4094f4:	bl	406b3c <get_hex@@Base>
  4094f8:	str	w0, [sp, #8]
  4094fc:	ldr	w8, [sp, #8]
  409500:	cmp	w8, #0x0
  409504:	cset	w8, ge  // ge = tcont
  409508:	tbnz	w8, #0, 409518 <hex2mem@@Base+0xac>
  40950c:	mov	w8, #0xffffffff            	// #-1
  409510:	stur	w8, [x29, #-4]
  409514:	b	409554 <hex2mem@@Base+0xe8>
  409518:	ldr	w8, [sp, #8]
  40951c:	ldr	x9, [sp, #24]
  409520:	ldrsw	x10, [sp, #16]
  409524:	add	x9, x9, x10
  409528:	ldrb	w11, [x9]
  40952c:	orr	w8, w11, w8
  409530:	strb	w8, [x9]
  409534:	ldr	w8, [sp, #16]
  409538:	add	w8, w8, #0x1
  40953c:	str	w8, [sp, #16]
  409540:	ldr	w8, [sp, #12]
  409544:	add	w8, w8, #0x2
  409548:	str	w8, [sp, #12]
  40954c:	b	40948c <hex2mem@@Base+0x20>
  409550:	stur	wzr, [x29, #-4]
  409554:	ldur	w0, [x29, #-4]
  409558:	ldp	x29, x30, [sp, #48]
  40955c:	add	sp, sp, #0x40
  409560:	ret

0000000000409564 <addr64_n2a@@Base>:
  409564:	sub	sp, sp, #0x60
  409568:	stp	x29, x30, [sp, #80]
  40956c:	add	x29, sp, #0x50
  409570:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409574:	add	x8, x8, #0xc95
  409578:	sub	x9, x29, #0x10
  40957c:	stur	x0, [x29, #-16]
  409580:	stur	x1, [x29, #-24]
  409584:	stur	x2, [x29, #-32]
  409588:	str	x9, [sp, #40]
  40958c:	str	xzr, [sp, #16]
  409590:	str	x8, [sp, #8]
  409594:	str	wzr, [sp, #32]
  409598:	ldr	w8, [sp, #32]
  40959c:	cmp	w8, #0x4
  4095a0:	b.ge	40963c <addr64_n2a@@Base+0xd8>  // b.tcont
  4095a4:	ldr	x8, [sp, #40]
  4095a8:	ldrsw	x9, [sp, #32]
  4095ac:	ldrh	w0, [x8, x9, lsl #1]
  4095b0:	bl	404ff0 <ntohs@plt>
  4095b4:	strh	w0, [sp, #38]
  4095b8:	ldr	w10, [sp, #32]
  4095bc:	cmp	w10, #0x3
  4095c0:	b.ne	4095d0 <addr64_n2a@@Base+0x6c>  // b.any
  4095c4:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4095c8:	add	x8, x8, #0x629
  4095cc:	str	x8, [sp, #8]
  4095d0:	ldur	x8, [x29, #-24]
  4095d4:	ldr	x9, [sp, #16]
  4095d8:	add	x0, x8, x9
  4095dc:	ldur	x8, [x29, #-32]
  4095e0:	ldr	x9, [sp, #16]
  4095e4:	subs	x1, x8, x9
  4095e8:	ldrh	w3, [sp, #38]
  4095ec:	ldr	x4, [sp, #8]
  4095f0:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4095f4:	add	x2, x2, #0xc97
  4095f8:	bl	404f90 <snprintf@plt>
  4095fc:	str	w0, [sp, #28]
  409600:	ldr	w10, [sp, #28]
  409604:	cmp	w10, #0x0
  409608:	cset	w10, ge  // ge = tcont
  40960c:	tbnz	w10, #0, 40961c <addr64_n2a@@Base+0xb8>
  409610:	ldr	w8, [sp, #28]
  409614:	stur	w8, [x29, #-4]
  409618:	b	409644 <addr64_n2a@@Base+0xe0>
  40961c:	ldrsw	x8, [sp, #28]
  409620:	ldr	x9, [sp, #16]
  409624:	add	x8, x9, x8
  409628:	str	x8, [sp, #16]
  40962c:	ldr	w8, [sp, #32]
  409630:	add	w8, w8, #0x1
  409634:	str	w8, [sp, #32]
  409638:	b	409598 <addr64_n2a@@Base+0x34>
  40963c:	ldr	x8, [sp, #16]
  409640:	stur	w8, [x29, #-4]
  409644:	ldur	w0, [x29, #-4]
  409648:	ldp	x29, x30, [sp, #80]
  40964c:	add	sp, sp, #0x60
  409650:	ret

0000000000409654 <print_escape_buf@@Base>:
  409654:	sub	sp, sp, #0x30
  409658:	stp	x29, x30, [sp, #32]
  40965c:	add	x29, sp, #0x20
  409660:	stur	x0, [x29, #-8]
  409664:	str	x1, [sp, #16]
  409668:	str	x2, [sp, #8]
  40966c:	str	xzr, [sp]
  409670:	ldr	x8, [sp]
  409674:	ldr	x9, [sp, #16]
  409678:	cmp	x8, x9
  40967c:	b.cs	409710 <print_escape_buf@@Base+0xbc>  // b.hs, b.nlast
  409680:	bl	4051a0 <__ctype_b_loc@plt>
  409684:	ldr	x8, [x0]
  409688:	ldur	x9, [x29, #-8]
  40968c:	ldr	x10, [sp]
  409690:	ldrb	w11, [x9, x10]
  409694:	ldrh	w11, [x8, w11, sxtw #1]
  409698:	and	w11, w11, #0x4000
  40969c:	cbz	w11, 4096e8 <print_escape_buf@@Base+0x94>
  4096a0:	ldur	x8, [x29, #-8]
  4096a4:	ldr	x9, [sp]
  4096a8:	ldrb	w10, [x8, x9]
  4096ac:	cmp	w10, #0x5c
  4096b0:	b.eq	4096e8 <print_escape_buf@@Base+0x94>  // b.none
  4096b4:	ldr	x0, [sp, #8]
  4096b8:	ldur	x8, [x29, #-8]
  4096bc:	ldr	x9, [sp]
  4096c0:	ldrb	w1, [x8, x9]
  4096c4:	bl	405240 <strchr@plt>
  4096c8:	cbnz	x0, 4096e8 <print_escape_buf@@Base+0x94>
  4096cc:	ldur	x8, [x29, #-8]
  4096d0:	ldr	x9, [sp]
  4096d4:	ldrb	w1, [x8, x9]
  4096d8:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4096dc:	add	x0, x0, #0xc9c
  4096e0:	bl	405370 <printf@plt>
  4096e4:	b	409700 <print_escape_buf@@Base+0xac>
  4096e8:	ldur	x8, [x29, #-8]
  4096ec:	ldr	x9, [sp]
  4096f0:	ldrb	w1, [x8, x9]
  4096f4:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4096f8:	add	x0, x0, #0xc9f
  4096fc:	bl	405370 <printf@plt>
  409700:	ldr	x8, [sp]
  409704:	add	x8, x8, #0x1
  409708:	str	x8, [sp]
  40970c:	b	409670 <print_escape_buf@@Base+0x1c>
  409710:	ldp	x29, x30, [sp, #32]
  409714:	add	sp, sp, #0x30
  409718:	ret

000000000040971c <print_timestamp@@Base>:
  40971c:	sub	sp, sp, #0x80
  409720:	stp	x29, x30, [sp, #112]
  409724:	add	x29, sp, #0x70
  409728:	mov	x8, xzr
  40972c:	adrp	x9, 423000 <_IO_stdin_used@@Base+0x10cf0>
  409730:	ldr	x9, [x9, #4032]
  409734:	sub	x10, x29, #0x18
  409738:	stur	x0, [x29, #-8]
  40973c:	mov	x0, x10
  409740:	mov	x1, x8
  409744:	str	x9, [sp, #24]
  409748:	str	x10, [sp, #16]
  40974c:	bl	405080 <gettimeofday@plt>
  409750:	ldr	x8, [sp, #16]
  409754:	mov	x0, x8
  409758:	bl	404fb0 <localtime@plt>
  40975c:	stur	x0, [x29, #-32]
  409760:	ldr	x8, [sp, #24]
  409764:	ldr	w11, [x8]
  409768:	cbz	w11, 4097ac <print_timestamp@@Base+0x90>
  40976c:	ldur	x3, [x29, #-32]
  409770:	add	x8, sp, #0x28
  409774:	mov	x0, x8
  409778:	mov	x1, #0x28                  	// #40
  40977c:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409780:	add	x2, x2, #0xca5
  409784:	str	x8, [sp, #8]
  409788:	bl	404f70 <strftime@plt>
  40978c:	ldur	x8, [x29, #-8]
  409790:	ldur	x3, [x29, #-16]
  409794:	mov	x0, x8
  409798:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40979c:	add	x1, x1, #0xcb7
  4097a0:	ldr	x2, [sp, #8]
  4097a4:	bl	4053c0 <fprintf@plt>
  4097a8:	b	4097f4 <print_timestamp@@Base+0xd8>
  4097ac:	ldur	x0, [x29, #-32]
  4097b0:	bl	4052e0 <asctime@plt>
  4097b4:	str	x0, [sp, #32]
  4097b8:	ldr	x8, [sp, #32]
  4097bc:	ldr	x0, [sp, #32]
  4097c0:	str	x8, [sp]
  4097c4:	bl	404e70 <strlen@plt>
  4097c8:	subs	x8, x0, #0x1
  4097cc:	ldr	x9, [sp]
  4097d0:	add	x8, x9, x8
  4097d4:	mov	w10, #0x0                   	// #0
  4097d8:	strb	w10, [x8]
  4097dc:	ldur	x0, [x29, #-8]
  4097e0:	ldr	x2, [sp, #32]
  4097e4:	ldur	x3, [x29, #-16]
  4097e8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  4097ec:	add	x1, x1, #0xcc3
  4097f0:	bl	4053c0 <fprintf@plt>
  4097f4:	mov	w8, wzr
  4097f8:	mov	w0, w8
  4097fc:	ldp	x29, x30, [sp, #112]
  409800:	add	sp, sp, #0x80
  409804:	ret

0000000000409808 <print_name_and_link@@Base>:
  409808:	sub	sp, sp, #0x90
  40980c:	stp	x29, x30, [sp, #128]
  409810:	add	x29, sp, #0x80
  409814:	mov	x8, xzr
  409818:	stur	x0, [x29, #-8]
  40981c:	stur	x1, [x29, #-16]
  409820:	stur	x2, [x29, #-24]
  409824:	stur	x8, [x29, #-32]
  409828:	stur	wzr, [x29, #-36]
  40982c:	ldur	x8, [x29, #-24]
  409830:	ldr	x8, [x8, #40]
  409834:	cbz	x8, 40996c <print_name_and_link@@Base+0x164>
  409838:	ldur	x8, [x29, #-24]
  40983c:	ldr	x0, [x8, #40]
  409840:	bl	40999c <print_name_and_link@@Base+0x194>
  409844:	str	w0, [sp, #24]
  409848:	ldr	w9, [sp, #24]
  40984c:	cbz	w9, 409900 <print_name_and_link@@Base+0xf8>
  409850:	ldur	x8, [x29, #-24]
  409854:	ldr	x8, [x8, #296]
  409858:	cbz	x8, 409898 <print_name_and_link@@Base+0x90>
  40985c:	bl	40c234 <is_json_context@@Base>
  409860:	tbnz	w0, #0, 409868 <print_name_and_link@@Base+0x60>
  409864:	b	409888 <print_name_and_link@@Base+0x80>
  409868:	ldr	w3, [sp, #24]
  40986c:	mov	w0, #0x2                   	// #2
  409870:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409874:	add	x1, x1, #0xcdb
  409878:	mov	x8, xzr
  40987c:	mov	x2, x8
  409880:	bl	4099b4 <print_name_and_link@@Base+0x1ac>
  409884:	b	409894 <print_name_and_link@@Base+0x8c>
  409888:	ldr	w0, [sp, #24]
  40988c:	bl	40af74 <ll_idx_n2a@@Base>
  409890:	stur	x0, [x29, #-32]
  409894:	b	4098fc <print_name_and_link@@Base+0xf4>
  409898:	ldr	w0, [sp, #24]
  40989c:	bl	40afbc <ll_index_to_name@@Base>
  4098a0:	stur	x0, [x29, #-32]
  4098a4:	bl	40c234 <is_json_context@@Base>
  4098a8:	tbnz	w0, #0, 4098b0 <print_name_and_link@@Base+0xa8>
  4098ac:	b	4098d8 <print_name_and_link@@Base+0xd0>
  4098b0:	ldur	x3, [x29, #-32]
  4098b4:	mov	w0, #0x2                   	// #2
  4098b8:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  4098bc:	add	x1, x1, #0x2e6
  4098c0:	mov	x8, xzr
  4098c4:	mov	x2, x8
  4098c8:	str	x8, [sp, #16]
  4098cc:	bl	4099f8 <print_name_and_link@@Base+0x1f0>
  4098d0:	ldr	x8, [sp, #16]
  4098d4:	stur	x8, [x29, #-32]
  4098d8:	ldr	w0, [sp, #24]
  4098dc:	bl	40b2b8 <ll_index_to_flags@@Base>
  4098e0:	stur	w0, [x29, #-36]
  4098e4:	ldur	w8, [x29, #-36]
  4098e8:	tst	w8, #0x1
  4098ec:	cset	w8, ne  // ne = any
  4098f0:	eor	w8, w8, #0x1
  4098f4:	and	w8, w8, #0x1
  4098f8:	stur	w8, [x29, #-36]
  4098fc:	b	409938 <print_name_and_link@@Base+0x130>
  409900:	bl	40c234 <is_json_context@@Base>
  409904:	tbnz	w0, #0, 40990c <print_name_and_link@@Base+0x104>
  409908:	b	40992c <print_name_and_link@@Base+0x124>
  40990c:	mov	w0, #0x2                   	// #2
  409910:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  409914:	add	x1, x1, #0x2e6
  409918:	mov	x8, xzr
  40991c:	mov	x2, x8
  409920:	mov	x3, x8
  409924:	bl	409a3c <print_name_and_link@@Base+0x234>
  409928:	b	409938 <print_name_and_link@@Base+0x130>
  40992c:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409930:	add	x8, x8, #0xce6
  409934:	stur	x8, [x29, #-32]
  409938:	ldur	x8, [x29, #-32]
  40993c:	cbz	x8, 40996c <print_name_and_link@@Base+0x164>
  409940:	ldur	x3, [x29, #-16]
  409944:	ldur	x4, [x29, #-32]
  409948:	add	x8, sp, #0x1c
  40994c:	mov	x0, x8
  409950:	mov	x1, #0x40                  	// #64
  409954:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409958:	add	x2, x2, #0xceb
  40995c:	str	x8, [sp, #8]
  409960:	bl	404f90 <snprintf@plt>
  409964:	ldr	x8, [sp, #8]
  409968:	stur	x8, [x29, #-16]
  40996c:	ldur	x3, [x29, #-8]
  409970:	ldur	x4, [x29, #-16]
  409974:	mov	w0, #0x4                   	// #4
  409978:	mov	w8, wzr
  40997c:	mov	w1, w8
  409980:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409984:	add	x2, x2, #0xcf1
  409988:	bl	40ccc4 <print_color_string@@Base>
  40998c:	ldur	w0, [x29, #-36]
  409990:	ldp	x29, x30, [sp, #128]
  409994:	add	sp, sp, #0x90
  409998:	ret
  40999c:	sub	sp, sp, #0x10
  4099a0:	str	x0, [sp, #8]
  4099a4:	ldr	x8, [sp, #8]
  4099a8:	ldr	w0, [x8, #4]
  4099ac:	add	sp, sp, #0x10
  4099b0:	ret
  4099b4:	sub	sp, sp, #0x30
  4099b8:	stp	x29, x30, [sp, #32]
  4099bc:	add	x29, sp, #0x20
  4099c0:	mov	w8, #0x6                   	// #6
  4099c4:	stur	w0, [x29, #-4]
  4099c8:	str	x1, [sp, #16]
  4099cc:	str	x2, [sp, #8]
  4099d0:	str	w3, [sp, #4]
  4099d4:	ldur	w0, [x29, #-4]
  4099d8:	ldr	x2, [sp, #16]
  4099dc:	ldr	x3, [sp, #8]
  4099e0:	ldr	w4, [sp, #4]
  4099e4:	mov	w1, w8
  4099e8:	bl	40c424 <print_color_int@@Base>
  4099ec:	ldp	x29, x30, [sp, #32]
  4099f0:	add	sp, sp, #0x30
  4099f4:	ret
  4099f8:	sub	sp, sp, #0x30
  4099fc:	stp	x29, x30, [sp, #32]
  409a00:	add	x29, sp, #0x20
  409a04:	mov	w8, #0x6                   	// #6
  409a08:	stur	w0, [x29, #-4]
  409a0c:	str	x1, [sp, #16]
  409a10:	str	x2, [sp, #8]
  409a14:	str	x3, [sp]
  409a18:	ldur	w0, [x29, #-4]
  409a1c:	ldr	x2, [sp, #16]
  409a20:	ldr	x3, [sp, #8]
  409a24:	ldr	x4, [sp]
  409a28:	mov	w1, w8
  409a2c:	bl	40ccc4 <print_color_string@@Base>
  409a30:	ldp	x29, x30, [sp, #32]
  409a34:	add	sp, sp, #0x30
  409a38:	ret
  409a3c:	sub	sp, sp, #0x30
  409a40:	stp	x29, x30, [sp, #32]
  409a44:	add	x29, sp, #0x20
  409a48:	mov	w8, #0x6                   	// #6
  409a4c:	stur	w0, [x29, #-4]
  409a50:	str	x1, [sp, #16]
  409a54:	str	x2, [sp, #8]
  409a58:	str	x3, [sp]
  409a5c:	ldur	w0, [x29, #-4]
  409a60:	ldr	x2, [sp, #16]
  409a64:	ldr	x3, [sp, #8]
  409a68:	ldr	x4, [sp]
  409a6c:	mov	w1, w8
  409a70:	bl	40d078 <print_color_null@@Base>
  409a74:	ldp	x29, x30, [sp, #32]
  409a78:	add	sp, sp, #0x30
  409a7c:	ret

0000000000409a80 <getcmdline@@Base>:
  409a80:	sub	sp, sp, #0x70
  409a84:	stp	x29, x30, [sp, #96]
  409a88:	add	x29, sp, #0x60
  409a8c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  409a90:	ldr	x8, [x8, #4000]
  409a94:	stur	x0, [x29, #-16]
  409a98:	stur	x1, [x29, #-24]
  409a9c:	stur	x2, [x29, #-32]
  409aa0:	ldur	x0, [x29, #-16]
  409aa4:	ldur	x1, [x29, #-24]
  409aa8:	ldur	x2, [x29, #-32]
  409aac:	str	x8, [sp, #16]
  409ab0:	bl	4051e0 <getline@plt>
  409ab4:	stur	x0, [x29, #-40]
  409ab8:	ldur	x8, [x29, #-40]
  409abc:	cmp	x8, #0x0
  409ac0:	cset	w9, ge  // ge = tcont
  409ac4:	tbnz	w9, #0, 409ad4 <getcmdline@@Base+0x54>
  409ac8:	ldur	x8, [x29, #-40]
  409acc:	stur	x8, [x29, #-8]
  409ad0:	b	409c7c <getcmdline@@Base+0x1fc>
  409ad4:	ldr	x8, [sp, #16]
  409ad8:	ldr	w9, [x8]
  409adc:	add	w9, w9, #0x1
  409ae0:	str	w9, [x8]
  409ae4:	ldur	x10, [x29, #-16]
  409ae8:	ldr	x0, [x10]
  409aec:	mov	w1, #0x23                  	// #35
  409af0:	bl	405240 <strchr@plt>
  409af4:	str	x0, [sp, #48]
  409af8:	ldr	x8, [sp, #48]
  409afc:	cbz	x8, 409b0c <getcmdline@@Base+0x8c>
  409b00:	ldr	x8, [sp, #48]
  409b04:	mov	w9, #0x0                   	// #0
  409b08:	strb	w9, [x8]
  409b0c:	ldur	x8, [x29, #-16]
  409b10:	ldr	x0, [x8]
  409b14:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409b18:	add	x1, x1, #0xcf8
  409b1c:	bl	405320 <strstr@plt>
  409b20:	str	x0, [sp, #48]
  409b24:	cbz	x0, 409c74 <getcmdline@@Base+0x1f4>
  409b28:	add	x0, sp, #0x28
  409b2c:	mov	x8, xzr
  409b30:	str	x8, [sp, #40]
  409b34:	add	x1, sp, #0x20
  409b38:	str	xzr, [sp, #32]
  409b3c:	ldur	x2, [x29, #-32]
  409b40:	bl	4051e0 <getline@plt>
  409b44:	str	x0, [sp, #24]
  409b48:	ldr	x8, [sp, #24]
  409b4c:	cmp	x8, #0x0
  409b50:	cset	w9, ge  // ge = tcont
  409b54:	tbnz	w9, #0, 409b7c <getcmdline@@Base+0xfc>
  409b58:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  409b5c:	ldr	x8, [x8, #3992]
  409b60:	ldr	x0, [x8]
  409b64:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409b68:	add	x1, x1, #0xcfb
  409b6c:	bl	4053c0 <fprintf@plt>
  409b70:	ldr	x8, [sp, #24]
  409b74:	stur	x8, [x29, #-8]
  409b78:	b	409c7c <getcmdline@@Base+0x1fc>
  409b7c:	ldr	x8, [sp, #16]
  409b80:	ldr	w9, [x8]
  409b84:	add	w9, w9, #0x1
  409b88:	str	w9, [x8]
  409b8c:	ldr	x10, [sp, #48]
  409b90:	mov	w9, #0x0                   	// #0
  409b94:	strb	w9, [x10]
  409b98:	ldr	x0, [sp, #40]
  409b9c:	mov	w1, #0x23                  	// #35
  409ba0:	bl	405240 <strchr@plt>
  409ba4:	str	x0, [sp, #48]
  409ba8:	ldr	x8, [sp, #48]
  409bac:	cbz	x8, 409bbc <getcmdline@@Base+0x13c>
  409bb0:	ldr	x8, [sp, #48]
  409bb4:	mov	w9, #0x0                   	// #0
  409bb8:	strb	w9, [x8]
  409bbc:	ldur	x8, [x29, #-16]
  409bc0:	ldr	x0, [x8]
  409bc4:	bl	404e70 <strlen@plt>
  409bc8:	ldr	x8, [sp, #40]
  409bcc:	str	x0, [sp, #8]
  409bd0:	mov	x0, x8
  409bd4:	bl	404e70 <strlen@plt>
  409bd8:	ldr	x8, [sp, #8]
  409bdc:	add	x9, x8, x0
  409be0:	add	x9, x9, #0x1
  409be4:	ldur	x10, [x29, #-24]
  409be8:	str	x9, [x10]
  409bec:	ldur	x9, [x29, #-16]
  409bf0:	ldr	x0, [x9]
  409bf4:	ldur	x9, [x29, #-24]
  409bf8:	ldr	x1, [x9]
  409bfc:	bl	4050d0 <realloc@plt>
  409c00:	ldur	x8, [x29, #-16]
  409c04:	str	x0, [x8]
  409c08:	ldur	x8, [x29, #-16]
  409c0c:	ldr	x8, [x8]
  409c10:	cbnz	x8, 409c40 <getcmdline@@Base+0x1c0>
  409c14:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  409c18:	ldr	x8, [x8, #3992]
  409c1c:	ldr	x0, [x8]
  409c20:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409c24:	add	x1, x1, #0xd16
  409c28:	bl	4053c0 <fprintf@plt>
  409c2c:	ldur	x8, [x29, #-24]
  409c30:	str	xzr, [x8]
  409c34:	mov	x8, #0xffffffffffffffff    	// #-1
  409c38:	stur	x8, [x29, #-8]
  409c3c:	b	409c7c <getcmdline@@Base+0x1fc>
  409c40:	ldr	x8, [sp, #24]
  409c44:	subs	x8, x8, #0x2
  409c48:	ldur	x9, [x29, #-40]
  409c4c:	add	x8, x9, x8
  409c50:	stur	x8, [x29, #-40]
  409c54:	ldur	x8, [x29, #-16]
  409c58:	ldr	x0, [x8]
  409c5c:	ldr	x1, [sp, #40]
  409c60:	bl	405050 <strcat@plt>
  409c64:	ldr	x8, [sp, #40]
  409c68:	mov	x0, x8
  409c6c:	bl	405200 <free@plt>
  409c70:	b	409b0c <getcmdline@@Base+0x8c>
  409c74:	ldur	x8, [x29, #-40]
  409c78:	stur	x8, [x29, #-8]
  409c7c:	ldur	x0, [x29, #-8]
  409c80:	ldp	x29, x30, [sp, #96]
  409c84:	add	sp, sp, #0x70
  409c88:	ret

0000000000409c8c <makeargs@@Base>:
  409c8c:	sub	sp, sp, #0x40
  409c90:	stp	x29, x30, [sp, #48]
  409c94:	add	x29, sp, #0x30
  409c98:	stur	x0, [x29, #-8]
  409c9c:	stur	x1, [x29, #-16]
  409ca0:	stur	w2, [x29, #-20]
  409ca4:	ldur	x8, [x29, #-8]
  409ca8:	str	x8, [sp, #16]
  409cac:	str	wzr, [sp, #12]
  409cb0:	ldr	x8, [sp, #16]
  409cb4:	ldrb	w9, [x8]
  409cb8:	cbz	w9, 409e28 <makeargs@@Base+0x19c>
  409cbc:	ldr	x0, [sp, #16]
  409cc0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409cc4:	add	x1, x1, #0x954
  409cc8:	bl	405230 <strspn@plt>
  409ccc:	ldr	x8, [sp, #16]
  409cd0:	add	x8, x8, x0
  409cd4:	str	x8, [sp, #16]
  409cd8:	ldr	x8, [sp, #16]
  409cdc:	ldrb	w9, [x8]
  409ce0:	cbnz	w9, 409ce8 <makeargs@@Base+0x5c>
  409ce4:	b	409e28 <makeargs@@Base+0x19c>
  409ce8:	ldr	w8, [sp, #12]
  409cec:	ldur	w9, [x29, #-20]
  409cf0:	subs	w9, w9, #0x1
  409cf4:	cmp	w8, w9
  409cf8:	b.lt	409d20 <makeargs@@Base+0x94>  // b.tstop
  409cfc:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  409d00:	ldr	x8, [x8, #3992]
  409d04:	ldr	x0, [x8]
  409d08:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409d0c:	add	x1, x1, #0xd25
  409d10:	bl	4053c0 <fprintf@plt>
  409d14:	mov	w9, #0x1                   	// #1
  409d18:	mov	w0, w9
  409d1c:	bl	404e90 <exit@plt>
  409d20:	ldr	x8, [sp, #16]
  409d24:	ldrb	w9, [x8]
  409d28:	cmp	w9, #0x27
  409d2c:	b.eq	409d40 <makeargs@@Base+0xb4>  // b.none
  409d30:	ldr	x8, [sp, #16]
  409d34:	ldrb	w9, [x8]
  409d38:	cmp	w9, #0x22
  409d3c:	b.ne	409dbc <makeargs@@Base+0x130>  // b.any
  409d40:	ldr	x8, [sp, #16]
  409d44:	add	x9, x8, #0x1
  409d48:	str	x9, [sp, #16]
  409d4c:	ldrb	w10, [x8]
  409d50:	strb	w10, [sp, #11]
  409d54:	ldr	x8, [sp, #16]
  409d58:	ldur	x9, [x29, #-16]
  409d5c:	ldrsw	x11, [sp, #12]
  409d60:	mov	w10, w11
  409d64:	add	w10, w10, #0x1
  409d68:	str	w10, [sp, #12]
  409d6c:	mov	x12, #0x8                   	// #8
  409d70:	mul	x11, x12, x11
  409d74:	add	x9, x9, x11
  409d78:	str	x8, [x9]
  409d7c:	ldr	x0, [sp, #16]
  409d80:	ldrb	w1, [sp, #11]
  409d84:	bl	405240 <strchr@plt>
  409d88:	str	x0, [sp, #16]
  409d8c:	ldr	x8, [sp, #16]
  409d90:	cbnz	x8, 409db8 <makeargs@@Base+0x12c>
  409d94:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  409d98:	ldr	x8, [x8, #3992]
  409d9c:	ldr	x0, [x8]
  409da0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409da4:	add	x1, x1, #0xd44
  409da8:	bl	4053c0 <fprintf@plt>
  409dac:	mov	w9, #0x1                   	// #1
  409db0:	mov	w0, w9
  409db4:	bl	404e90 <exit@plt>
  409db8:	b	409e10 <makeargs@@Base+0x184>
  409dbc:	ldr	x8, [sp, #16]
  409dc0:	ldur	x9, [x29, #-16]
  409dc4:	ldrsw	x10, [sp, #12]
  409dc8:	mov	w11, w10
  409dcc:	add	w11, w11, #0x1
  409dd0:	str	w11, [sp, #12]
  409dd4:	mov	x12, #0x8                   	// #8
  409dd8:	mul	x10, x12, x10
  409ddc:	add	x9, x9, x10
  409de0:	str	x8, [x9]
  409de4:	ldr	x0, [sp, #16]
  409de8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409dec:	add	x1, x1, #0x954
  409df0:	bl	405350 <strcspn@plt>
  409df4:	ldr	x8, [sp, #16]
  409df8:	add	x8, x8, x0
  409dfc:	str	x8, [sp, #16]
  409e00:	ldr	x8, [sp, #16]
  409e04:	ldrb	w11, [x8]
  409e08:	cbnz	w11, 409e10 <makeargs@@Base+0x184>
  409e0c:	b	409e28 <makeargs@@Base+0x19c>
  409e10:	ldr	x8, [sp, #16]
  409e14:	add	x9, x8, #0x1
  409e18:	str	x9, [sp, #16]
  409e1c:	mov	w10, #0x0                   	// #0
  409e20:	strb	w10, [x8]
  409e24:	b	409cb0 <makeargs@@Base+0x24>
  409e28:	ldur	x8, [x29, #-16]
  409e2c:	ldrsw	x9, [sp, #12]
  409e30:	mov	x10, #0x8                   	// #8
  409e34:	mul	x9, x10, x9
  409e38:	add	x8, x8, x9
  409e3c:	mov	x9, xzr
  409e40:	str	x9, [x8]
  409e44:	ldr	w0, [sp, #12]
  409e48:	ldp	x29, x30, [sp, #48]
  409e4c:	add	sp, sp, #0x40
  409e50:	ret

0000000000409e54 <print_nlmsg_timestamp@@Base>:
  409e54:	sub	sp, sp, #0x50
  409e58:	stp	x29, x30, [sp, #64]
  409e5c:	add	x29, sp, #0x40
  409e60:	mov	w8, #0x0                   	// #0
  409e64:	adrp	x9, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409e68:	add	x9, x9, #0xd60
  409e6c:	add	x10, sp, #0x20
  409e70:	stur	x0, [x29, #-8]
  409e74:	stur	x1, [x29, #-16]
  409e78:	ldur	x11, [x29, #-16]
  409e7c:	ldr	w12, [x11, #16]
  409e80:	mov	w11, w12
  409e84:	str	x11, [sp, #32]
  409e88:	ldur	x11, [x29, #-16]
  409e8c:	ldr	w12, [x11, #20]
  409e90:	mov	w11, w12
  409e94:	str	x11, [sp, #24]
  409e98:	mov	x0, x10
  409e9c:	str	w8, [sp, #20]
  409ea0:	str	x9, [sp, #8]
  409ea4:	bl	404fb0 <localtime@plt>
  409ea8:	bl	4052e0 <asctime@plt>
  409eac:	stur	x0, [x29, #-24]
  409eb0:	ldur	x9, [x29, #-24]
  409eb4:	ldur	x0, [x29, #-24]
  409eb8:	str	x9, [sp]
  409ebc:	bl	404e70 <strlen@plt>
  409ec0:	subs	x9, x0, #0x1
  409ec4:	ldr	x10, [sp]
  409ec8:	add	x9, x10, x9
  409ecc:	ldr	w8, [sp, #20]
  409ed0:	strb	w8, [x9]
  409ed4:	ldur	x0, [x29, #-8]
  409ed8:	ldur	x2, [x29, #-24]
  409edc:	ldr	x3, [sp, #24]
  409ee0:	ldr	x1, [sp, #8]
  409ee4:	bl	4053c0 <fprintf@plt>
  409ee8:	ldp	x29, x30, [sp, #64]
  409eec:	add	sp, sp, #0x50
  409ef0:	ret

0000000000409ef4 <int_to_str@@Base>:
  409ef4:	sub	sp, sp, #0x20
  409ef8:	stp	x29, x30, [sp, #16]
  409efc:	add	x29, sp, #0x10
  409f00:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  409f04:	add	x8, x8, #0xd76
  409f08:	stur	w0, [x29, #-4]
  409f0c:	str	x1, [sp]
  409f10:	ldr	x0, [sp]
  409f14:	ldur	w2, [x29, #-4]
  409f18:	mov	x1, x8
  409f1c:	bl	404f40 <sprintf@plt>
  409f20:	ldr	x8, [sp]
  409f24:	mov	x0, x8
  409f28:	ldp	x29, x30, [sp, #16]
  409f2c:	add	sp, sp, #0x20
  409f30:	ret

0000000000409f34 <get_guid@@Base>:
  409f34:	sub	sp, sp, #0x40
  409f38:	stp	x29, x30, [sp, #48]
  409f3c:	add	x29, sp, #0x30
  409f40:	stur	x0, [x29, #-16]
  409f44:	str	x1, [sp, #24]
  409f48:	ldr	x0, [sp, #24]
  409f4c:	bl	404e70 <strlen@plt>
  409f50:	cmp	x0, #0x17
  409f54:	b.eq	409f64 <get_guid@@Base+0x30>  // b.none
  409f58:	mov	w8, #0xffffffff            	// #-1
  409f5c:	stur	w8, [x29, #-4]
  409f60:	b	40a08c <get_guid@@Base+0x158>
  409f64:	str	wzr, [sp, #4]
  409f68:	ldr	w8, [sp, #4]
  409f6c:	cmp	w8, #0x7
  409f70:	b.ge	409fb0 <get_guid@@Base+0x7c>  // b.tcont
  409f74:	ldr	x8, [sp, #24]
  409f78:	ldr	w9, [sp, #4]
  409f7c:	mov	w10, #0x3                   	// #3
  409f80:	mul	w9, w9, w10
  409f84:	add	w9, w9, #0x2
  409f88:	ldrb	w9, [x8, w9, sxtw]
  409f8c:	cmp	w9, #0x3a
  409f90:	b.eq	409fa0 <get_guid@@Base+0x6c>  // b.none
  409f94:	mov	w8, #0xffffffff            	// #-1
  409f98:	stur	w8, [x29, #-4]
  409f9c:	b	40a08c <get_guid@@Base+0x158>
  409fa0:	ldr	w8, [sp, #4]
  409fa4:	add	w8, w8, #0x1
  409fa8:	str	w8, [sp, #4]
  409fac:	b	409f68 <get_guid@@Base+0x34>
  409fb0:	ldur	x8, [x29, #-16]
  409fb4:	str	xzr, [x8]
  409fb8:	str	wzr, [sp, #4]
  409fbc:	ldr	w8, [sp, #4]
  409fc0:	cmp	w8, #0x8
  409fc4:	b.ge	40a088 <get_guid@@Base+0x154>  // b.tcont
  409fc8:	ldr	x8, [sp, #24]
  409fcc:	ldr	w9, [sp, #4]
  409fd0:	mov	w10, #0x3                   	// #3
  409fd4:	mul	w9, w9, w10
  409fd8:	mov	w0, w9
  409fdc:	sxtw	x11, w0
  409fe0:	add	x0, x8, x11
  409fe4:	add	x1, sp, #0x8
  409fe8:	mov	w2, #0x10                  	// #16
  409fec:	str	w10, [sp]
  409ff0:	bl	404e60 <strtoul@plt>
  409ff4:	str	x0, [sp, #16]
  409ff8:	ldr	x8, [sp, #8]
  409ffc:	ldr	x11, [sp, #24]
  40a000:	ldr	w9, [sp, #4]
  40a004:	ldr	w10, [sp]
  40a008:	mul	w9, w9, w10
  40a00c:	mov	w0, w9
  40a010:	sxtw	x12, w0
  40a014:	add	x11, x11, x12
  40a018:	add	x11, x11, #0x2
  40a01c:	cmp	x8, x11
  40a020:	b.eq	40a030 <get_guid@@Base+0xfc>  // b.none
  40a024:	mov	w8, #0xffffffff            	// #-1
  40a028:	stur	w8, [x29, #-4]
  40a02c:	b	40a08c <get_guid@@Base+0x158>
  40a030:	ldr	x8, [sp, #16]
  40a034:	cmp	x8, #0xff
  40a038:	b.ls	40a048 <get_guid@@Base+0x114>  // b.plast
  40a03c:	mov	w8, #0xffffffff            	// #-1
  40a040:	stur	w8, [x29, #-4]
  40a044:	b	40a08c <get_guid@@Base+0x158>
  40a048:	ldr	x8, [sp, #16]
  40a04c:	ldr	w9, [sp, #4]
  40a050:	mov	w10, #0x8                   	// #8
  40a054:	mul	w9, w10, w9
  40a058:	mov	w10, #0x38                  	// #56
  40a05c:	subs	w9, w10, w9
  40a060:	mov	w11, w9
  40a064:	lsl	x8, x8, x11
  40a068:	ldur	x11, [x29, #-16]
  40a06c:	ldr	x12, [x11]
  40a070:	orr	x8, x12, x8
  40a074:	str	x8, [x11]
  40a078:	ldr	w8, [sp, #4]
  40a07c:	add	w8, w8, #0x1
  40a080:	str	w8, [sp, #4]
  40a084:	b	409fbc <get_guid@@Base+0x88>
  40a088:	stur	wzr, [x29, #-4]
  40a08c:	ldur	w0, [x29, #-4]
  40a090:	ldp	x29, x30, [sp, #48]
  40a094:	add	sp, sp, #0x40
  40a098:	ret

000000000040a09c <get_real_family@@Base>:
  40a09c:	sub	sp, sp, #0x10
  40a0a0:	str	w0, [sp, #8]
  40a0a4:	str	w1, [sp, #4]
  40a0a8:	ldr	w8, [sp, #8]
  40a0ac:	cmp	w8, #0x5
  40a0b0:	b.eq	40a0c0 <get_real_family@@Base+0x24>  // b.none
  40a0b4:	ldr	w8, [sp, #4]
  40a0b8:	str	w8, [sp, #12]
  40a0bc:	b	40a0f8 <get_real_family@@Base+0x5c>
  40a0c0:	ldr	w8, [sp, #4]
  40a0c4:	cmp	w8, #0x80
  40a0c8:	b.ne	40a0d8 <get_real_family@@Base+0x3c>  // b.any
  40a0cc:	mov	w8, #0x2                   	// #2
  40a0d0:	str	w8, [sp, #12]
  40a0d4:	b	40a0f8 <get_real_family@@Base+0x5c>
  40a0d8:	ldr	w8, [sp, #4]
  40a0dc:	cmp	w8, #0x81
  40a0e0:	b.ne	40a0f0 <get_real_family@@Base+0x54>  // b.any
  40a0e4:	mov	w8, #0xa                   	// #10
  40a0e8:	str	w8, [sp, #12]
  40a0ec:	b	40a0f8 <get_real_family@@Base+0x5c>
  40a0f0:	ldr	w8, [sp, #4]
  40a0f4:	str	w8, [sp, #12]
  40a0f8:	ldr	w0, [sp, #12]
  40a0fc:	add	sp, sp, #0x10
  40a100:	ret

000000000040a104 <get_rtnl_link_stats_rta@@Base>:
  40a104:	stp	x29, x30, [sp, #-32]!
  40a108:	str	x28, [sp, #16]
  40a10c:	mov	x29, sp
  40a110:	sub	sp, sp, #0x9e0
  40a114:	stur	x0, [x29, #-16]
  40a118:	stur	x1, [x29, #-24]
  40a11c:	ldur	x8, [x29, #-24]
  40a120:	ldr	x8, [x8, #184]
  40a124:	cbz	x8, 40a148 <get_rtnl_link_stats_rta@@Base+0x44>
  40a128:	ldur	x8, [x29, #-24]
  40a12c:	ldr	x8, [x8, #184]
  40a130:	stur	x8, [x29, #-136]
  40a134:	mov	w9, #0xc0                  	// #192
  40a138:	stur	w9, [x29, #-140]
  40a13c:	ldur	x8, [x29, #-16]
  40a140:	stur	x8, [x29, #-128]
  40a144:	b	40a1f0 <get_rtnl_link_stats_rta@@Base+0xec>
  40a148:	ldur	x8, [x29, #-24]
  40a14c:	ldr	x8, [x8, #56]
  40a150:	cbz	x8, 40a174 <get_rtnl_link_stats_rta@@Base+0x70>
  40a154:	ldur	x8, [x29, #-24]
  40a158:	ldr	x8, [x8, #56]
  40a15c:	stur	x8, [x29, #-136]
  40a160:	mov	w9, #0x60                  	// #96
  40a164:	stur	w9, [x29, #-140]
  40a168:	sub	x8, x29, #0x78
  40a16c:	stur	x8, [x29, #-128]
  40a170:	b	40a1f0 <get_rtnl_link_stats_rta@@Base+0xec>
  40a174:	ldur	x8, [x29, #-24]
  40a178:	ldr	x8, [x8, #96]
  40a17c:	cbz	x8, 40a1e4 <get_rtnl_link_stats_rta@@Base+0xe0>
  40a180:	ldur	x8, [x29, #-24]
  40a184:	ldr	x8, [x8, #96]
  40a188:	add	x2, x8, #0x4
  40a18c:	ldur	x8, [x29, #-24]
  40a190:	ldr	x8, [x8, #96]
  40a194:	ldrh	w9, [x8]
  40a198:	mov	w0, w9
  40a19c:	sxtw	x8, w0
  40a1a0:	subs	x8, x8, #0x4
  40a1a4:	add	x10, sp, #0x8
  40a1a8:	mov	x0, x10
  40a1ac:	mov	w1, #0x128                 	// #296
  40a1b0:	mov	w3, w8
  40a1b4:	str	x10, [sp]
  40a1b8:	bl	4116ac <parse_rtattr@@Base>
  40a1bc:	ldr	x10, [sp]
  40a1c0:	ldr	x11, [x10, #24]
  40a1c4:	cbz	x11, 40a1d8 <get_rtnl_link_stats_rta@@Base+0xd4>
  40a1c8:	ldur	x0, [x29, #-16]
  40a1cc:	add	x8, sp, #0x8
  40a1d0:	ldr	x1, [x8, #24]
  40a1d4:	bl	40a29c <get_rtnl_link_stats_rta@@Base+0x198>
  40a1d8:	mov	w8, #0xc0                  	// #192
  40a1dc:	stur	w8, [x29, #-4]
  40a1e0:	b	40a288 <get_rtnl_link_stats_rta@@Base+0x184>
  40a1e4:	mov	w8, #0xffffffff            	// #-1
  40a1e8:	stur	w8, [x29, #-4]
  40a1ec:	b	40a288 <get_rtnl_link_stats_rta@@Base+0x184>
  40a1f0:	ldur	x8, [x29, #-136]
  40a1f4:	ldrh	w9, [x8]
  40a1f8:	mov	w0, w9
  40a1fc:	sxtw	x8, w0
  40a200:	subs	x8, x8, #0x4
  40a204:	stur	w8, [x29, #-144]
  40a208:	ldur	w8, [x29, #-144]
  40a20c:	ldur	w9, [x29, #-140]
  40a210:	cmp	w8, w9
  40a214:	b.ge	40a248 <get_rtnl_link_stats_rta@@Base+0x144>  // b.tcont
  40a218:	ldur	x8, [x29, #-128]
  40a21c:	ldursw	x9, [x29, #-144]
  40a220:	add	x0, x8, x9
  40a224:	ldur	w10, [x29, #-140]
  40a228:	ldur	w11, [x29, #-144]
  40a22c:	subs	w10, w10, w11
  40a230:	mov	w1, w10
  40a234:	sxtw	x2, w1
  40a238:	mov	w10, wzr
  40a23c:	mov	w1, w10
  40a240:	bl	405070 <memset@plt>
  40a244:	b	40a250 <get_rtnl_link_stats_rta@@Base+0x14c>
  40a248:	ldur	w8, [x29, #-140]
  40a24c:	stur	w8, [x29, #-144]
  40a250:	ldur	x0, [x29, #-128]
  40a254:	ldur	x8, [x29, #-136]
  40a258:	add	x1, x8, #0x4
  40a25c:	ldursw	x2, [x29, #-144]
  40a260:	bl	404e40 <memcpy@plt>
  40a264:	ldur	x8, [x29, #-128]
  40a268:	ldur	x9, [x29, #-16]
  40a26c:	cmp	x8, x9
  40a270:	b.eq	40a280 <get_rtnl_link_stats_rta@@Base+0x17c>  // b.none
  40a274:	ldur	x0, [x29, #-16]
  40a278:	ldur	x1, [x29, #-128]
  40a27c:	bl	40a35c <get_rtnl_link_stats_rta@@Base+0x258>
  40a280:	ldur	w8, [x29, #-140]
  40a284:	stur	w8, [x29, #-4]
  40a288:	ldur	w0, [x29, #-4]
  40a28c:	add	sp, sp, #0x9e0
  40a290:	ldr	x28, [sp, #16]
  40a294:	ldp	x29, x30, [sp], #32
  40a298:	ret
  40a29c:	sub	sp, sp, #0x30
  40a2a0:	stp	x29, x30, [sp, #32]
  40a2a4:	add	x29, sp, #0x20
  40a2a8:	mov	x2, #0xc0                  	// #192
  40a2ac:	stur	x0, [x29, #-8]
  40a2b0:	str	x1, [sp, #16]
  40a2b4:	ldr	x8, [sp, #16]
  40a2b8:	add	x8, x8, #0x4
  40a2bc:	str	x8, [sp, #8]
  40a2c0:	ldur	x0, [x29, #-8]
  40a2c4:	mov	w9, wzr
  40a2c8:	mov	w1, w9
  40a2cc:	bl	405070 <memset@plt>
  40a2d0:	ldr	x8, [sp, #8]
  40a2d4:	ldr	x8, [x8, #8]
  40a2d8:	ldur	x10, [x29, #-8]
  40a2dc:	str	x8, [x10]
  40a2e0:	ldr	x8, [sp, #8]
  40a2e4:	ldr	x8, [x8, #16]
  40a2e8:	ldur	x10, [x29, #-8]
  40a2ec:	str	x8, [x10, #16]
  40a2f0:	ldr	x8, [sp, #8]
  40a2f4:	ldr	x8, [x8, #40]
  40a2f8:	ldur	x10, [x29, #-8]
  40a2fc:	str	x8, [x10, #8]
  40a300:	ldr	x8, [sp, #8]
  40a304:	ldr	x8, [x8, #48]
  40a308:	ldur	x10, [x29, #-8]
  40a30c:	str	x8, [x10, #24]
  40a310:	ldr	x8, [sp, #8]
  40a314:	ldr	x8, [x8, #104]
  40a318:	ldur	x10, [x29, #-8]
  40a31c:	str	x8, [x10, #32]
  40a320:	ldr	x8, [sp, #8]
  40a324:	ldr	x8, [x8, #112]
  40a328:	ldur	x10, [x29, #-8]
  40a32c:	str	x8, [x10, #40]
  40a330:	ldr	x8, [sp, #8]
  40a334:	ldr	x8, [x8, #184]
  40a338:	ldur	x10, [x29, #-8]
  40a33c:	str	x8, [x10, #64]
  40a340:	ldr	x8, [sp, #8]
  40a344:	ldr	x8, [x8, #248]
  40a348:	ldur	x10, [x29, #-8]
  40a34c:	str	x8, [x10, #104]
  40a350:	ldp	x29, x30, [sp, #32]
  40a354:	add	sp, sp, #0x30
  40a358:	ret
  40a35c:	sub	sp, sp, #0x30
  40a360:	str	x0, [sp, #40]
  40a364:	str	x1, [sp, #32]
  40a368:	ldr	x8, [sp, #40]
  40a36c:	str	x8, [sp, #24]
  40a370:	ldr	x8, [sp, #32]
  40a374:	str	x8, [sp, #16]
  40a378:	ldr	x8, [sp, #16]
  40a37c:	add	x8, x8, #0x60
  40a380:	str	x8, [sp, #8]
  40a384:	ldr	x8, [sp, #16]
  40a388:	ldr	x9, [sp, #8]
  40a38c:	cmp	x8, x9
  40a390:	b.cs	40a3bc <get_rtnl_link_stats_rta@@Base+0x2b8>  // b.hs, b.nlast
  40a394:	ldr	x8, [sp, #16]
  40a398:	add	x9, x8, #0x4
  40a39c:	str	x9, [sp, #16]
  40a3a0:	ldr	w10, [x8]
  40a3a4:	mov	w8, w10
  40a3a8:	ldr	x9, [sp, #24]
  40a3ac:	add	x11, x9, #0x8
  40a3b0:	str	x11, [sp, #24]
  40a3b4:	str	x8, [x9]
  40a3b8:	b	40a384 <get_rtnl_link_stats_rta@@Base+0x280>
  40a3bc:	add	sp, sp, #0x30
  40a3c0:	ret

000000000040a3c4 <strlcpy@@Base>:
  40a3c4:	sub	sp, sp, #0x60
  40a3c8:	stp	x29, x30, [sp, #80]
  40a3cc:	add	x29, sp, #0x50
  40a3d0:	stur	x0, [x29, #-8]
  40a3d4:	stur	x1, [x29, #-16]
  40a3d8:	stur	x2, [x29, #-24]
  40a3dc:	ldur	x0, [x29, #-16]
  40a3e0:	bl	404e70 <strlen@plt>
  40a3e4:	stur	x0, [x29, #-32]
  40a3e8:	ldur	x8, [x29, #-24]
  40a3ec:	cbz	x8, 40a45c <strlcpy@@Base+0x98>
  40a3f0:	ldur	x8, [x29, #-32]
  40a3f4:	str	x8, [sp, #32]
  40a3f8:	ldur	x8, [x29, #-24]
  40a3fc:	subs	x8, x8, #0x1
  40a400:	str	x8, [sp, #24]
  40a404:	ldr	x8, [sp, #32]
  40a408:	ldr	x9, [sp, #24]
  40a40c:	cmp	x8, x9
  40a410:	b.cs	40a420 <strlcpy@@Base+0x5c>  // b.hs, b.nlast
  40a414:	ldr	x8, [sp, #32]
  40a418:	str	x8, [sp, #8]
  40a41c:	b	40a428 <strlcpy@@Base+0x64>
  40a420:	ldr	x8, [sp, #24]
  40a424:	str	x8, [sp, #8]
  40a428:	ldr	x8, [sp, #8]
  40a42c:	str	x8, [sp, #16]
  40a430:	ldr	x8, [sp, #16]
  40a434:	str	x8, [sp, #40]
  40a438:	ldur	x0, [x29, #-8]
  40a43c:	ldur	x1, [x29, #-16]
  40a440:	ldr	x2, [sp, #40]
  40a444:	bl	404e40 <memcpy@plt>
  40a448:	ldur	x8, [x29, #-8]
  40a44c:	ldr	x9, [sp, #40]
  40a450:	add	x8, x8, x9
  40a454:	mov	w10, #0x0                   	// #0
  40a458:	strb	w10, [x8]
  40a45c:	ldur	x0, [x29, #-32]
  40a460:	ldp	x29, x30, [sp, #80]
  40a464:	add	sp, sp, #0x60
  40a468:	ret

000000000040a46c <strlcat@@Base>:
  40a46c:	sub	sp, sp, #0x50
  40a470:	stp	x29, x30, [sp, #64]
  40a474:	add	x29, sp, #0x40
  40a478:	stur	x0, [x29, #-16]
  40a47c:	stur	x1, [x29, #-24]
  40a480:	str	x2, [sp, #32]
  40a484:	ldur	x0, [x29, #-16]
  40a488:	bl	404e70 <strlen@plt>
  40a48c:	str	x0, [sp, #24]
  40a490:	ldr	x8, [sp, #24]
  40a494:	ldr	x9, [sp, #32]
  40a498:	cmp	x8, x9
  40a49c:	b.cc	40a4c0 <strlcat@@Base+0x54>  // b.lo, b.ul, b.last
  40a4a0:	ldr	x8, [sp, #24]
  40a4a4:	ldur	x0, [x29, #-24]
  40a4a8:	str	x8, [sp, #16]
  40a4ac:	bl	404e70 <strlen@plt>
  40a4b0:	ldr	x8, [sp, #16]
  40a4b4:	add	x9, x8, x0
  40a4b8:	stur	x9, [x29, #-8]
  40a4bc:	b	40a4f4 <strlcat@@Base+0x88>
  40a4c0:	ldr	x8, [sp, #24]
  40a4c4:	ldur	x9, [x29, #-16]
  40a4c8:	ldr	x10, [sp, #24]
  40a4cc:	add	x0, x9, x10
  40a4d0:	ldur	x1, [x29, #-24]
  40a4d4:	ldr	x9, [sp, #32]
  40a4d8:	ldr	x10, [sp, #24]
  40a4dc:	subs	x2, x9, x10
  40a4e0:	str	x8, [sp, #8]
  40a4e4:	bl	40a3c4 <strlcpy@@Base>
  40a4e8:	ldr	x8, [sp, #8]
  40a4ec:	add	x9, x8, x0
  40a4f0:	stur	x9, [x29, #-8]
  40a4f4:	ldur	x0, [x29, #-8]
  40a4f8:	ldp	x29, x30, [sp, #64]
  40a4fc:	add	sp, sp, #0x50
  40a500:	ret

000000000040a504 <drop_cap@@Base>:
  40a504:	sub	sp, sp, #0x30
  40a508:	stp	x29, x30, [sp, #32]
  40a50c:	add	x29, sp, #0x20
  40a510:	bl	404f50 <getuid@plt>
  40a514:	cbz	w0, 40a5a0 <drop_cap@@Base+0x9c>
  40a518:	bl	404ef0 <geteuid@plt>
  40a51c:	cbz	w0, 40a5a0 <drop_cap@@Base+0x9c>
  40a520:	mov	w8, #0xc                   	// #12
  40a524:	stur	w8, [x29, #-12]
  40a528:	mov	w8, #0x2                   	// #2
  40a52c:	str	w8, [sp, #16]
  40a530:	bl	4051c0 <cap_get_proc@plt>
  40a534:	stur	x0, [x29, #-8]
  40a538:	ldur	x9, [x29, #-8]
  40a53c:	cbnz	x9, 40a548 <drop_cap@@Base+0x44>
  40a540:	mov	w0, #0x1                   	// #1
  40a544:	bl	404e90 <exit@plt>
  40a548:	ldur	x0, [x29, #-8]
  40a54c:	ldur	w1, [x29, #-12]
  40a550:	ldr	w2, [sp, #16]
  40a554:	add	x3, sp, #0xc
  40a558:	bl	4050b0 <cap_get_flag@plt>
  40a55c:	cbz	w0, 40a568 <drop_cap@@Base+0x64>
  40a560:	mov	w0, #0x1                   	// #1
  40a564:	bl	404e90 <exit@plt>
  40a568:	ldr	w8, [sp, #12]
  40a56c:	cbnz	w8, 40a598 <drop_cap@@Base+0x94>
  40a570:	ldur	x0, [x29, #-8]
  40a574:	bl	4052b0 <cap_clear@plt>
  40a578:	cbz	w0, 40a584 <drop_cap@@Base+0x80>
  40a57c:	mov	w0, #0x1                   	// #1
  40a580:	bl	404e90 <exit@plt>
  40a584:	ldur	x0, [x29, #-8]
  40a588:	bl	4050f0 <cap_set_proc@plt>
  40a58c:	cbz	w0, 40a598 <drop_cap@@Base+0x94>
  40a590:	mov	w0, #0x1                   	// #1
  40a594:	bl	404e90 <exit@plt>
  40a598:	ldur	x0, [x29, #-8]
  40a59c:	bl	4052f0 <cap_free@plt>
  40a5a0:	ldp	x29, x30, [sp, #32]
  40a5a4:	add	sp, sp, #0x30
  40a5a8:	ret

000000000040a5ac <get_time@@Base>:
  40a5ac:	sub	sp, sp, #0x40
  40a5b0:	stp	x29, x30, [sp, #48]
  40a5b4:	add	x29, sp, #0x30
  40a5b8:	add	x8, sp, #0x8
  40a5bc:	stur	x0, [x29, #-16]
  40a5c0:	str	x1, [sp, #24]
  40a5c4:	ldr	x0, [sp, #24]
  40a5c8:	mov	x1, x8
  40a5cc:	bl	404ee0 <strtod@plt>
  40a5d0:	str	d0, [sp, #16]
  40a5d4:	ldr	x8, [sp, #8]
  40a5d8:	ldr	x9, [sp, #24]
  40a5dc:	cmp	x8, x9
  40a5e0:	b.ne	40a5f0 <get_time@@Base+0x44>  // b.any
  40a5e4:	mov	w8, #0xffffffff            	// #-1
  40a5e8:	stur	w8, [x29, #-4]
  40a5ec:	b	40a71c <get_time@@Base+0x170>
  40a5f0:	ldr	x8, [sp, #8]
  40a5f4:	ldrb	w9, [x8]
  40a5f8:	cbz	w9, 40a708 <get_time@@Base+0x15c>
  40a5fc:	ldr	x0, [sp, #8]
  40a600:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a604:	add	x1, x1, #0xa05
  40a608:	bl	4050c0 <strcasecmp@plt>
  40a60c:	cbz	w0, 40a638 <get_time@@Base+0x8c>
  40a610:	ldr	x0, [sp, #8]
  40a614:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a618:	add	x1, x1, #0xa1c
  40a61c:	bl	4050c0 <strcasecmp@plt>
  40a620:	cbz	w0, 40a638 <get_time@@Base+0x8c>
  40a624:	ldr	x0, [sp, #8]
  40a628:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a62c:	add	x1, x1, #0xa21
  40a630:	bl	4050c0 <strcasecmp@plt>
  40a634:	cbnz	w0, 40a654 <get_time@@Base+0xa8>
  40a638:	ldr	d0, [sp, #16]
  40a63c:	mov	x8, #0x848000000000        	// #145685290680320
  40a640:	movk	x8, #0x412e, lsl #48
  40a644:	fmov	d1, x8
  40a648:	fmul	d0, d0, d1
  40a64c:	str	d0, [sp, #16]
  40a650:	b	40a708 <get_time@@Base+0x15c>
  40a654:	ldr	x0, [sp, #8]
  40a658:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a65c:	add	x1, x1, #0xdb3
  40a660:	bl	4050c0 <strcasecmp@plt>
  40a664:	cbz	w0, 40a690 <get_time@@Base+0xe4>
  40a668:	ldr	x0, [sp, #8]
  40a66c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a670:	add	x1, x1, #0xa1b
  40a674:	bl	4050c0 <strcasecmp@plt>
  40a678:	cbz	w0, 40a690 <get_time@@Base+0xe4>
  40a67c:	ldr	x0, [sp, #8]
  40a680:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a684:	add	x1, x1, #0xa20
  40a688:	bl	4050c0 <strcasecmp@plt>
  40a68c:	cbnz	w0, 40a6ac <get_time@@Base+0x100>
  40a690:	ldr	d0, [sp, #16]
  40a694:	mov	x8, #0x400000000000        	// #70368744177664
  40a698:	movk	x8, #0x408f, lsl #48
  40a69c:	fmov	d1, x8
  40a6a0:	fmul	d0, d0, d1
  40a6a4:	str	d0, [sp, #16]
  40a6a8:	b	40a708 <get_time@@Base+0x15c>
  40a6ac:	ldr	x0, [sp, #8]
  40a6b0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a6b4:	add	x1, x1, #0xdcc
  40a6b8:	bl	4050c0 <strcasecmp@plt>
  40a6bc:	cbz	w0, 40a6e8 <get_time@@Base+0x13c>
  40a6c0:	ldr	x0, [sp, #8]
  40a6c4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a6c8:	add	x1, x1, #0xd79
  40a6cc:	bl	4050c0 <strcasecmp@plt>
  40a6d0:	cbz	w0, 40a6e8 <get_time@@Base+0x13c>
  40a6d4:	ldr	x0, [sp, #8]
  40a6d8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a6dc:	add	x1, x1, #0xd7e
  40a6e0:	bl	4050c0 <strcasecmp@plt>
  40a6e4:	cbnz	w0, 40a6fc <get_time@@Base+0x150>
  40a6e8:	ldr	d0, [sp, #16]
  40a6ec:	fmov	d1, #1.000000000000000000e+00
  40a6f0:	fmul	d0, d0, d1
  40a6f4:	str	d0, [sp, #16]
  40a6f8:	b	40a708 <get_time@@Base+0x15c>
  40a6fc:	mov	w8, #0xffffffff            	// #-1
  40a700:	stur	w8, [x29, #-4]
  40a704:	b	40a71c <get_time@@Base+0x170>
  40a708:	ldr	d0, [sp, #16]
  40a70c:	fcvtzu	w8, d0
  40a710:	ldur	x9, [x29, #-16]
  40a714:	str	w8, [x9]
  40a718:	stur	wzr, [x29, #-4]
  40a71c:	ldur	w0, [x29, #-4]
  40a720:	ldp	x29, x30, [sp, #48]
  40a724:	add	sp, sp, #0x40
  40a728:	ret

000000000040a72c <sprint_time@@Base>:
  40a72c:	sub	sp, sp, #0x20
  40a730:	stp	x29, x30, [sp, #16]
  40a734:	add	x29, sp, #0x10
  40a738:	mov	w8, #0x3f                  	// #63
  40a73c:	stur	w0, [x29, #-4]
  40a740:	str	x1, [sp]
  40a744:	ldr	x0, [sp]
  40a748:	ldur	w2, [x29, #-4]
  40a74c:	mov	w1, w8
  40a750:	bl	40a764 <sprint_time@@Base+0x38>
  40a754:	ldr	x0, [sp]
  40a758:	ldp	x29, x30, [sp, #16]
  40a75c:	add	sp, sp, #0x20
  40a760:	ret
  40a764:	sub	sp, sp, #0x30
  40a768:	stp	x29, x30, [sp, #32]
  40a76c:	add	x29, sp, #0x20
  40a770:	mov	x8, #0x848000000000        	// #145685290680320
  40a774:	movk	x8, #0x412e, lsl #48
  40a778:	fmov	d0, x8
  40a77c:	stur	x0, [x29, #-8]
  40a780:	stur	w1, [x29, #-12]
  40a784:	str	w2, [sp, #16]
  40a788:	ldr	s1, [sp, #16]
  40a78c:	mov	v2.16b, v1.16b
  40a790:	ucvtf	d2, d2
  40a794:	str	d2, [sp, #8]
  40a798:	ldr	d2, [sp, #8]
  40a79c:	fcmp	d2, d0
  40a7a0:	cset	w9, ge  // ge = tcont
  40a7a4:	tbnz	w9, #0, 40a7ac <sprint_time@@Base+0x80>
  40a7a8:	b	40a7d8 <sprint_time@@Base+0xac>
  40a7ac:	ldur	x0, [x29, #-8]
  40a7b0:	ldursw	x1, [x29, #-12]
  40a7b4:	ldr	d0, [sp, #8]
  40a7b8:	mov	x8, #0x848000000000        	// #145685290680320
  40a7bc:	movk	x8, #0x412e, lsl #48
  40a7c0:	fmov	d1, x8
  40a7c4:	fdiv	d0, d0, d1
  40a7c8:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a7cc:	add	x2, x2, #0xda9
  40a7d0:	bl	404f90 <snprintf@plt>
  40a7d4:	b	40a83c <sprint_time@@Base+0x110>
  40a7d8:	ldr	d0, [sp, #8]
  40a7dc:	mov	x8, #0x400000000000        	// #70368744177664
  40a7e0:	movk	x8, #0x408f, lsl #48
  40a7e4:	fmov	d1, x8
  40a7e8:	fcmp	d0, d1
  40a7ec:	cset	w9, ge  // ge = tcont
  40a7f0:	tbnz	w9, #0, 40a7f8 <sprint_time@@Base+0xcc>
  40a7f4:	b	40a824 <sprint_time@@Base+0xf8>
  40a7f8:	ldur	x0, [x29, #-8]
  40a7fc:	ldursw	x1, [x29, #-12]
  40a800:	ldr	d0, [sp, #8]
  40a804:	mov	x8, #0x400000000000        	// #70368744177664
  40a808:	movk	x8, #0x408f, lsl #48
  40a80c:	fmov	d1, x8
  40a810:	fdiv	d0, d0, d1
  40a814:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a818:	add	x2, x2, #0xdaf
  40a81c:	bl	404f90 <snprintf@plt>
  40a820:	b	40a83c <sprint_time@@Base+0x110>
  40a824:	ldur	x0, [x29, #-8]
  40a828:	ldursw	x1, [x29, #-12]
  40a82c:	ldr	w3, [sp, #16]
  40a830:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a834:	add	x2, x2, #0xdb6
  40a838:	bl	404f90 <snprintf@plt>
  40a83c:	ldp	x29, x30, [sp, #32]
  40a840:	add	sp, sp, #0x30
  40a844:	ret

000000000040a848 <get_time64@@Base>:
  40a848:	sub	sp, sp, #0x40
  40a84c:	stp	x29, x30, [sp, #48]
  40a850:	add	x29, sp, #0x30
  40a854:	add	x8, sp, #0x8
  40a858:	stur	x0, [x29, #-16]
  40a85c:	str	x1, [sp, #24]
  40a860:	ldr	x0, [sp, #24]
  40a864:	mov	x1, x8
  40a868:	bl	404ee0 <strtod@plt>
  40a86c:	str	d0, [sp, #16]
  40a870:	ldr	x8, [sp, #8]
  40a874:	ldr	x9, [sp, #24]
  40a878:	cmp	x8, x9
  40a87c:	b.ne	40a88c <get_time64@@Base+0x44>  // b.any
  40a880:	mov	w8, #0xffffffff            	// #-1
  40a884:	stur	w8, [x29, #-4]
  40a888:	b	40aa10 <get_time64@@Base+0x1c8>
  40a88c:	ldr	x8, [sp, #8]
  40a890:	ldrb	w9, [x8]
  40a894:	cbz	w9, 40a9fc <get_time64@@Base+0x1b4>
  40a898:	ldr	x0, [sp, #8]
  40a89c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a8a0:	add	x1, x1, #0xa05
  40a8a4:	bl	4050c0 <strcasecmp@plt>
  40a8a8:	cbz	w0, 40a8d4 <get_time64@@Base+0x8c>
  40a8ac:	ldr	x0, [sp, #8]
  40a8b0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a8b4:	add	x1, x1, #0xa1c
  40a8b8:	bl	4050c0 <strcasecmp@plt>
  40a8bc:	cbz	w0, 40a8d4 <get_time64@@Base+0x8c>
  40a8c0:	ldr	x0, [sp, #8]
  40a8c4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a8c8:	add	x1, x1, #0xa21
  40a8cc:	bl	4050c0 <strcasecmp@plt>
  40a8d0:	cbnz	w0, 40a8f0 <get_time64@@Base+0xa8>
  40a8d4:	ldr	d0, [sp, #16]
  40a8d8:	mov	x8, #0xcd6500000000        	// #225833675390976
  40a8dc:	movk	x8, #0x41cd, lsl #48
  40a8e0:	fmov	d1, x8
  40a8e4:	fmul	d0, d0, d1
  40a8e8:	str	d0, [sp, #16]
  40a8ec:	b	40a9fc <get_time64@@Base+0x1b4>
  40a8f0:	ldr	x0, [sp, #8]
  40a8f4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a8f8:	add	x1, x1, #0xdb3
  40a8fc:	bl	4050c0 <strcasecmp@plt>
  40a900:	cbz	w0, 40a92c <get_time64@@Base+0xe4>
  40a904:	ldr	x0, [sp, #8]
  40a908:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a90c:	add	x1, x1, #0xa1b
  40a910:	bl	4050c0 <strcasecmp@plt>
  40a914:	cbz	w0, 40a92c <get_time64@@Base+0xe4>
  40a918:	ldr	x0, [sp, #8]
  40a91c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a920:	add	x1, x1, #0xa20
  40a924:	bl	4050c0 <strcasecmp@plt>
  40a928:	cbnz	w0, 40a948 <get_time64@@Base+0x100>
  40a92c:	ldr	d0, [sp, #16]
  40a930:	mov	x8, #0x848000000000        	// #145685290680320
  40a934:	movk	x8, #0x412e, lsl #48
  40a938:	fmov	d1, x8
  40a93c:	fmul	d0, d0, d1
  40a940:	str	d0, [sp, #16]
  40a944:	b	40a9fc <get_time64@@Base+0x1b4>
  40a948:	ldr	x0, [sp, #8]
  40a94c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a950:	add	x1, x1, #0xdcc
  40a954:	bl	4050c0 <strcasecmp@plt>
  40a958:	cbz	w0, 40a984 <get_time64@@Base+0x13c>
  40a95c:	ldr	x0, [sp, #8]
  40a960:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a964:	add	x1, x1, #0xd79
  40a968:	bl	4050c0 <strcasecmp@plt>
  40a96c:	cbz	w0, 40a984 <get_time64@@Base+0x13c>
  40a970:	ldr	x0, [sp, #8]
  40a974:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a978:	add	x1, x1, #0xd7e
  40a97c:	bl	4050c0 <strcasecmp@plt>
  40a980:	cbnz	w0, 40a9a0 <get_time64@@Base+0x158>
  40a984:	ldr	d0, [sp, #16]
  40a988:	mov	x8, #0x400000000000        	// #70368744177664
  40a98c:	movk	x8, #0x408f, lsl #48
  40a990:	fmov	d1, x8
  40a994:	fmul	d0, d0, d1
  40a998:	str	d0, [sp, #16]
  40a99c:	b	40a9fc <get_time64@@Base+0x1b4>
  40a9a0:	ldr	x0, [sp, #8]
  40a9a4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a9a8:	add	x1, x1, #0xdd3
  40a9ac:	bl	4050c0 <strcasecmp@plt>
  40a9b0:	cbz	w0, 40a9dc <get_time64@@Base+0x194>
  40a9b4:	ldr	x0, [sp, #8]
  40a9b8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a9bc:	add	x1, x1, #0xd84
  40a9c0:	bl	4050c0 <strcasecmp@plt>
  40a9c4:	cbz	w0, 40a9dc <get_time64@@Base+0x194>
  40a9c8:	ldr	x0, [sp, #8]
  40a9cc:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40a9d0:	add	x1, x1, #0xd89
  40a9d4:	bl	4050c0 <strcasecmp@plt>
  40a9d8:	cbnz	w0, 40a9f0 <get_time64@@Base+0x1a8>
  40a9dc:	ldr	d0, [sp, #16]
  40a9e0:	fmov	d1, #1.000000000000000000e+00
  40a9e4:	fmul	d0, d0, d1
  40a9e8:	str	d0, [sp, #16]
  40a9ec:	b	40a9fc <get_time64@@Base+0x1b4>
  40a9f0:	mov	w8, #0xffffffff            	// #-1
  40a9f4:	stur	w8, [x29, #-4]
  40a9f8:	b	40aa10 <get_time64@@Base+0x1c8>
  40a9fc:	ldr	d0, [sp, #16]
  40aa00:	fcvtzs	x8, d0
  40aa04:	ldur	x9, [x29, #-16]
  40aa08:	str	x8, [x9]
  40aa0c:	stur	wzr, [x29, #-4]
  40aa10:	ldur	w0, [x29, #-4]
  40aa14:	ldp	x29, x30, [sp, #48]
  40aa18:	add	sp, sp, #0x40
  40aa1c:	ret

000000000040aa20 <sprint_time64@@Base>:
  40aa20:	sub	sp, sp, #0x20
  40aa24:	stp	x29, x30, [sp, #16]
  40aa28:	add	x29, sp, #0x10
  40aa2c:	mov	w8, #0x3f                  	// #63
  40aa30:	str	x0, [sp, #8]
  40aa34:	str	x1, [sp]
  40aa38:	ldr	x0, [sp]
  40aa3c:	ldr	x2, [sp, #8]
  40aa40:	mov	w1, w8
  40aa44:	bl	40aa58 <sprint_time64@@Base+0x38>
  40aa48:	ldr	x0, [sp]
  40aa4c:	ldp	x29, x30, [sp, #16]
  40aa50:	add	sp, sp, #0x20
  40aa54:	ret
  40aa58:	sub	sp, sp, #0x30
  40aa5c:	stp	x29, x30, [sp, #32]
  40aa60:	add	x29, sp, #0x20
  40aa64:	mov	x8, #0xca00                	// #51712
  40aa68:	movk	x8, #0x3b9a, lsl #16
  40aa6c:	stur	x0, [x29, #-8]
  40aa70:	stur	w1, [x29, #-12]
  40aa74:	str	x2, [sp, #8]
  40aa78:	ldr	x9, [sp, #8]
  40aa7c:	scvtf	d0, x9
  40aa80:	str	d0, [sp]
  40aa84:	ldr	x9, [sp, #8]
  40aa88:	cmp	x9, x8
  40aa8c:	b.lt	40aabc <sprint_time64@@Base+0x9c>  // b.tstop
  40aa90:	ldur	x0, [x29, #-8]
  40aa94:	ldursw	x1, [x29, #-12]
  40aa98:	ldr	d0, [sp]
  40aa9c:	mov	x8, #0xcd6500000000        	// #225833675390976
  40aaa0:	movk	x8, #0x41cd, lsl #48
  40aaa4:	fmov	d1, x8
  40aaa8:	fdiv	d0, d0, d1
  40aaac:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40aab0:	add	x2, x2, #0xdbb
  40aab4:	bl	404f90 <snprintf@plt>
  40aab8:	b	40ab4c <sprint_time64@@Base+0x12c>
  40aabc:	ldr	x8, [sp, #8]
  40aac0:	mov	x9, #0x4240                	// #16960
  40aac4:	movk	x9, #0xf, lsl #16
  40aac8:	cmp	x8, x9
  40aacc:	b.lt	40aafc <sprint_time64@@Base+0xdc>  // b.tstop
  40aad0:	ldur	x0, [x29, #-8]
  40aad4:	ldursw	x1, [x29, #-12]
  40aad8:	ldr	d0, [sp]
  40aadc:	mov	x8, #0x848000000000        	// #145685290680320
  40aae0:	movk	x8, #0x412e, lsl #48
  40aae4:	fmov	d1, x8
  40aae8:	fdiv	d0, d0, d1
  40aaec:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40aaf0:	add	x2, x2, #0xdc1
  40aaf4:	bl	404f90 <snprintf@plt>
  40aaf8:	b	40ab4c <sprint_time64@@Base+0x12c>
  40aafc:	ldr	x8, [sp, #8]
  40ab00:	cmp	x8, #0x3e8
  40ab04:	b.lt	40ab34 <sprint_time64@@Base+0x114>  // b.tstop
  40ab08:	ldur	x0, [x29, #-8]
  40ab0c:	ldursw	x1, [x29, #-12]
  40ab10:	ldr	d0, [sp]
  40ab14:	mov	x8, #0x400000000000        	// #70368744177664
  40ab18:	movk	x8, #0x408f, lsl #48
  40ab1c:	fmov	d1, x8
  40ab20:	fdiv	d0, d0, d1
  40ab24:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40ab28:	add	x2, x2, #0xdc8
  40ab2c:	bl	404f90 <snprintf@plt>
  40ab30:	b	40ab4c <sprint_time64@@Base+0x12c>
  40ab34:	ldur	x0, [x29, #-8]
  40ab38:	ldursw	x1, [x29, #-12]
  40ab3c:	ldr	x3, [sp, #8]
  40ab40:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40ab44:	add	x2, x2, #0xdcf
  40ab48:	bl	404f90 <snprintf@plt>
  40ab4c:	ldp	x29, x30, [sp, #32]
  40ab50:	add	sp, sp, #0x30
  40ab54:	ret
  40ab58:	sub	sp, sp, #0x40
  40ab5c:	stp	x29, x30, [sp, #48]
  40ab60:	add	x29, sp, #0x30
  40ab64:	stur	x0, [x29, #-16]
  40ab68:	str	x1, [sp, #24]
  40ab6c:	str	wzr, [sp, #20]
  40ab70:	ldr	w8, [sp, #20]
  40ab74:	cmp	w8, #0x4
  40ab78:	b.ge	40ac30 <sprint_time64@@Base+0x210>  // b.tcont
  40ab7c:	ldr	x0, [sp, #24]
  40ab80:	mov	x1, sp
  40ab84:	mov	w8, wzr
  40ab88:	mov	w2, w8
  40ab8c:	bl	404e60 <strtoul@plt>
  40ab90:	str	x0, [sp, #8]
  40ab94:	ldr	x9, [sp, #8]
  40ab98:	cmp	x9, #0xff
  40ab9c:	b.ls	40abac <sprint_time64@@Base+0x18c>  // b.plast
  40aba0:	mov	w8, #0xffffffff            	// #-1
  40aba4:	stur	w8, [x29, #-4]
  40aba8:	b	40ac38 <sprint_time64@@Base+0x218>
  40abac:	ldr	x8, [sp]
  40abb0:	ldr	x9, [sp, #24]
  40abb4:	cmp	x8, x9
  40abb8:	b.ne	40abc8 <sprint_time64@@Base+0x1a8>  // b.any
  40abbc:	mov	w8, #0xffffffff            	// #-1
  40abc0:	stur	w8, [x29, #-4]
  40abc4:	b	40ac38 <sprint_time64@@Base+0x218>
  40abc8:	ldr	x8, [sp, #8]
  40abcc:	ldur	x9, [x29, #-16]
  40abd0:	ldrsw	x10, [sp, #20]
  40abd4:	add	x9, x9, x10
  40abd8:	strb	w8, [x9]
  40abdc:	ldr	x9, [sp]
  40abe0:	ldrb	w8, [x9]
  40abe4:	cbnz	w8, 40abec <sprint_time64@@Base+0x1cc>
  40abe8:	b	40ac30 <sprint_time64@@Base+0x210>
  40abec:	ldr	w8, [sp, #20]
  40abf0:	cmp	w8, #0x3
  40abf4:	b.eq	40ac08 <sprint_time64@@Base+0x1e8>  // b.none
  40abf8:	ldr	x8, [sp]
  40abfc:	ldrb	w9, [x8]
  40ac00:	cmp	w9, #0x2e
  40ac04:	b.eq	40ac14 <sprint_time64@@Base+0x1f4>  // b.none
  40ac08:	mov	w8, #0xffffffff            	// #-1
  40ac0c:	stur	w8, [x29, #-4]
  40ac10:	b	40ac38 <sprint_time64@@Base+0x218>
  40ac14:	ldr	x8, [sp]
  40ac18:	add	x8, x8, #0x1
  40ac1c:	str	x8, [sp, #24]
  40ac20:	ldr	w8, [sp, #20]
  40ac24:	add	w8, w8, #0x1
  40ac28:	str	w8, [sp, #20]
  40ac2c:	b	40ab70 <sprint_time64@@Base+0x150>
  40ac30:	mov	w8, #0x1                   	// #1
  40ac34:	stur	w8, [x29, #-4]
  40ac38:	ldur	w0, [x29, #-4]
  40ac3c:	ldp	x29, x30, [sp, #48]
  40ac40:	add	sp, sp, #0x40
  40ac44:	ret

000000000040ac48 <namehash@@Base>:
  40ac48:	sub	sp, sp, #0x10
  40ac4c:	mov	w8, #0x1505                	// #5381
  40ac50:	str	x0, [sp, #8]
  40ac54:	str	w8, [sp, #4]
  40ac58:	ldr	x8, [sp, #8]
  40ac5c:	ldrb	w9, [x8]
  40ac60:	cbz	w9, 40ac8c <namehash@@Base+0x44>
  40ac64:	ldr	w8, [sp, #4]
  40ac68:	ldr	w9, [sp, #4]
  40ac6c:	add	w8, w9, w8, lsl #5
  40ac70:	ldr	x10, [sp, #8]
  40ac74:	add	x11, x10, #0x1
  40ac78:	str	x11, [sp, #8]
  40ac7c:	ldrb	w9, [x10]
  40ac80:	add	w8, w8, w9
  40ac84:	str	w8, [sp, #4]
  40ac88:	b	40ac58 <namehash@@Base+0x10>
  40ac8c:	ldr	w0, [sp, #4]
  40ac90:	add	sp, sp, #0x10
  40ac94:	ret

000000000040ac98 <ll_remember_index@@Base>:
  40ac98:	stp	x29, x30, [sp, #-32]!
  40ac9c:	str	x28, [sp, #16]
  40aca0:	mov	x29, sp
  40aca4:	sub	sp, sp, #0x1e0
  40aca8:	stur	x0, [x29, #-16]
  40acac:	stur	x1, [x29, #-24]
  40acb0:	ldur	x8, [x29, #-16]
  40acb4:	add	x8, x8, #0x10
  40acb8:	stur	x8, [x29, #-32]
  40acbc:	ldur	x8, [x29, #-16]
  40acc0:	ldrh	w9, [x8, #4]
  40acc4:	cmp	w9, #0x10
  40acc8:	b.eq	40ace4 <ll_remember_index@@Base+0x4c>  // b.none
  40accc:	ldur	x8, [x29, #-16]
  40acd0:	ldrh	w9, [x8, #4]
  40acd4:	cmp	w9, #0x11
  40acd8:	b.eq	40ace4 <ll_remember_index@@Base+0x4c>  // b.none
  40acdc:	stur	wzr, [x29, #-4]
  40ace0:	b	40ad94 <ll_remember_index@@Base+0xfc>
  40ace4:	ldur	x8, [x29, #-16]
  40ace8:	ldr	w9, [x8]
  40acec:	mov	w8, w9
  40acf0:	cmp	x8, #0x20
  40acf4:	b.cs	40ad04 <ll_remember_index@@Base+0x6c>  // b.hs, b.nlast
  40acf8:	mov	w8, #0xffffffff            	// #-1
  40acfc:	stur	w8, [x29, #-4]
  40ad00:	b	40ad94 <ll_remember_index@@Base+0xfc>
  40ad04:	ldur	x8, [x29, #-32]
  40ad08:	ldr	w0, [x8, #4]
  40ad0c:	bl	40ada8 <ll_remember_index@@Base+0x110>
  40ad10:	stur	x0, [x29, #-40]
  40ad14:	ldur	x8, [x29, #-16]
  40ad18:	ldrh	w9, [x8, #4]
  40ad1c:	cmp	w9, #0x11
  40ad20:	b.ne	40ad3c <ll_remember_index@@Base+0xa4>  // b.any
  40ad24:	ldur	x8, [x29, #-40]
  40ad28:	cbz	x8, 40ad34 <ll_remember_index@@Base+0x9c>
  40ad2c:	ldur	x0, [x29, #-40]
  40ad30:	bl	40ae44 <ll_remember_index@@Base+0x1ac>
  40ad34:	stur	wzr, [x29, #-4]
  40ad38:	b	40ad94 <ll_remember_index@@Base+0xfc>
  40ad3c:	ldur	x8, [x29, #-32]
  40ad40:	add	x2, x8, #0x10
  40ad44:	ldur	x8, [x29, #-16]
  40ad48:	ldr	w9, [x8]
  40ad4c:	mov	w8, w9
  40ad50:	subs	x8, x8, #0x20
  40ad54:	add	x0, sp, #0x8
  40ad58:	mov	w1, #0x35                  	// #53
  40ad5c:	mov	w3, w8
  40ad60:	mov	w4, #0xffff8000            	// #-32768
  40ad64:	bl	4116f0 <parse_rtattr_flags@@Base>
  40ad68:	ldur	x10, [x29, #-40]
  40ad6c:	cbz	x10, 40ad84 <ll_remember_index@@Base+0xec>
  40ad70:	ldur	x0, [x29, #-40]
  40ad74:	ldur	x1, [x29, #-32]
  40ad78:	add	x2, sp, #0x8
  40ad7c:	bl	40ae78 <ll_remember_index@@Base+0x1e0>
  40ad80:	b	40ad90 <ll_remember_index@@Base+0xf8>
  40ad84:	ldur	x0, [x29, #-32]
  40ad88:	add	x1, sp, #0x8
  40ad8c:	bl	40aef0 <ll_remember_index@@Base+0x258>
  40ad90:	stur	wzr, [x29, #-4]
  40ad94:	ldur	w0, [x29, #-4]
  40ad98:	add	sp, sp, #0x1e0
  40ad9c:	ldr	x28, [sp, #16]
  40ada0:	ldp	x29, x30, [sp], #32
  40ada4:	ret
  40ada8:	sub	sp, sp, #0x40
  40adac:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  40adb0:	add	x8, x8, #0xdc0
  40adb4:	str	w0, [sp, #52]
  40adb8:	ldr	w9, [sp, #52]
  40adbc:	and	w9, w9, #0x3ff
  40adc0:	str	w9, [sp, #36]
  40adc4:	ldr	w9, [sp, #36]
  40adc8:	mov	w10, w9
  40adcc:	mov	x11, #0x8                   	// #8
  40add0:	mul	x10, x11, x10
  40add4:	add	x8, x8, x10
  40add8:	ldr	x8, [x8]
  40addc:	str	x8, [sp, #40]
  40ade0:	ldr	x8, [sp, #40]
  40ade4:	cbz	x8, 40ae30 <ll_remember_index@@Base+0x198>
  40ade8:	ldr	x8, [sp, #40]
  40adec:	str	x8, [sp, #16]
  40adf0:	ldr	x8, [sp, #16]
  40adf4:	str	x8, [sp, #8]
  40adf8:	ldr	x8, [sp, #8]
  40adfc:	str	x8, [sp, #24]
  40ae00:	ldr	x8, [sp, #24]
  40ae04:	ldr	w9, [x8, #36]
  40ae08:	ldr	w10, [sp, #52]
  40ae0c:	cmp	w9, w10
  40ae10:	b.ne	40ae20 <ll_remember_index@@Base+0x188>  // b.any
  40ae14:	ldr	x8, [sp, #24]
  40ae18:	str	x8, [sp, #56]
  40ae1c:	b	40ae38 <ll_remember_index@@Base+0x1a0>
  40ae20:	ldr	x8, [sp, #40]
  40ae24:	ldr	x8, [x8]
  40ae28:	str	x8, [sp, #40]
  40ae2c:	b	40ade0 <ll_remember_index@@Base+0x148>
  40ae30:	mov	x8, xzr
  40ae34:	str	x8, [sp, #56]
  40ae38:	ldr	x0, [sp, #56]
  40ae3c:	add	sp, sp, #0x40
  40ae40:	ret
  40ae44:	sub	sp, sp, #0x20
  40ae48:	stp	x29, x30, [sp, #16]
  40ae4c:	add	x29, sp, #0x10
  40ae50:	str	x0, [sp, #8]
  40ae54:	ldr	x0, [sp, #8]
  40ae58:	bl	40b614 <ll_init_map@@Base+0xc0>
  40ae5c:	ldr	x0, [sp, #8]
  40ae60:	mov	w8, #0x1                   	// #1
  40ae64:	and	w1, w8, #0x1
  40ae68:	bl	40b6cc <ll_init_map@@Base+0x178>
  40ae6c:	ldp	x29, x30, [sp, #16]
  40ae70:	add	sp, sp, #0x20
  40ae74:	ret
  40ae78:	sub	sp, sp, #0x40
  40ae7c:	stp	x29, x30, [sp, #48]
  40ae80:	add	x29, sp, #0x30
  40ae84:	stur	x0, [x29, #-8]
  40ae88:	stur	x1, [x29, #-16]
  40ae8c:	str	x2, [sp, #24]
  40ae90:	ldr	x8, [sp, #24]
  40ae94:	ldr	x8, [x8, #24]
  40ae98:	cbz	x8, 40aed4 <ll_remember_index@@Base+0x23c>
  40ae9c:	ldur	x0, [x29, #-8]
  40aea0:	ldur	x1, [x29, #-16]
  40aea4:	ldr	x8, [sp, #24]
  40aea8:	ldr	x8, [x8, #24]
  40aeac:	str	x0, [sp, #16]
  40aeb0:	mov	x0, x8
  40aeb4:	str	x1, [sp, #8]
  40aeb8:	bl	40b814 <ll_init_map@@Base+0x2c0>
  40aebc:	ldr	x8, [sp, #16]
  40aec0:	str	x0, [sp]
  40aec4:	mov	x0, x8
  40aec8:	ldr	x1, [sp, #8]
  40aecc:	ldr	x2, [sp]
  40aed0:	bl	40b784 <ll_init_map@@Base+0x230>
  40aed4:	ldur	x0, [x29, #-8]
  40aed8:	ldur	x1, [x29, #-16]
  40aedc:	ldr	x2, [sp, #24]
  40aee0:	bl	40b82c <ll_init_map@@Base+0x2d8>
  40aee4:	ldp	x29, x30, [sp, #48]
  40aee8:	add	sp, sp, #0x40
  40aeec:	ret
  40aef0:	sub	sp, sp, #0x40
  40aef4:	stp	x29, x30, [sp, #48]
  40aef8:	add	x29, sp, #0x30
  40aefc:	stur	x0, [x29, #-8]
  40af00:	stur	x1, [x29, #-16]
  40af04:	ldur	x8, [x29, #-16]
  40af08:	ldr	x8, [x8, #24]
  40af0c:	cbnz	x8, 40af14 <ll_remember_index@@Base+0x27c>
  40af10:	b	40af68 <ll_remember_index@@Base+0x2d0>
  40af14:	ldur	x0, [x29, #-8]
  40af18:	ldur	x8, [x29, #-16]
  40af1c:	ldr	x8, [x8, #24]
  40af20:	str	x0, [sp, #16]
  40af24:	mov	x0, x8
  40af28:	bl	40b814 <ll_init_map@@Base+0x2c0>
  40af2c:	ldr	x8, [sp, #16]
  40af30:	str	x0, [sp, #8]
  40af34:	mov	x0, x8
  40af38:	ldr	x1, [sp, #8]
  40af3c:	mov	x9, xzr
  40af40:	mov	x2, x9
  40af44:	bl	40bb90 <ll_init_map@@Base+0x63c>
  40af48:	str	x0, [sp, #24]
  40af4c:	ldr	x8, [sp, #24]
  40af50:	cbnz	x8, 40af58 <ll_remember_index@@Base+0x2c0>
  40af54:	b	40af68 <ll_remember_index@@Base+0x2d0>
  40af58:	ldr	x0, [sp, #24]
  40af5c:	ldur	x1, [x29, #-8]
  40af60:	ldur	x2, [x29, #-16]
  40af64:	bl	40ba50 <ll_init_map@@Base+0x4fc>
  40af68:	ldp	x29, x30, [sp, #48]
  40af6c:	add	sp, sp, #0x40
  40af70:	ret

000000000040af74 <ll_idx_n2a@@Base>:
  40af74:	sub	sp, sp, #0x20
  40af78:	stp	x29, x30, [sp, #16]
  40af7c:	add	x29, sp, #0x10
  40af80:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  40af84:	add	x8, x8, #0xd98
  40af88:	mov	x1, #0x10                  	// #16
  40af8c:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40af90:	add	x2, x2, #0xdd6
  40af94:	stur	w0, [x29, #-4]
  40af98:	ldur	w3, [x29, #-4]
  40af9c:	mov	x0, x8
  40afa0:	str	x8, [sp]
  40afa4:	bl	404f90 <snprintf@plt>
  40afa8:	ldr	x8, [sp]
  40afac:	mov	x0, x8
  40afb0:	ldp	x29, x30, [sp, #16]
  40afb4:	add	sp, sp, #0x20
  40afb8:	ret

000000000040afbc <ll_index_to_name@@Base>:
  40afbc:	sub	sp, sp, #0x30
  40afc0:	stp	x29, x30, [sp, #32]
  40afc4:	add	x29, sp, #0x20
  40afc8:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  40afcc:	add	x8, x8, #0xda8
  40afd0:	stur	w0, [x29, #-12]
  40afd4:	ldur	w9, [x29, #-12]
  40afd8:	str	x8, [sp]
  40afdc:	cbnz	w9, 40aff0 <ll_index_to_name@@Base+0x34>
  40afe0:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40afe4:	add	x8, x8, #0xddb
  40afe8:	stur	x8, [x29, #-8]
  40afec:	b	40b084 <ll_index_to_name@@Base+0xc8>
  40aff0:	ldur	w0, [x29, #-12]
  40aff4:	bl	40ada8 <ll_remember_index@@Base+0x110>
  40aff8:	str	x0, [sp, #8]
  40affc:	ldr	x8, [sp, #8]
  40b000:	cbz	x8, 40b014 <ll_index_to_name@@Base+0x58>
  40b004:	ldr	x8, [sp, #8]
  40b008:	add	x8, x8, #0x40
  40b00c:	stur	x8, [x29, #-8]
  40b010:	b	40b084 <ll_index_to_name@@Base+0xc8>
  40b014:	ldur	w1, [x29, #-12]
  40b018:	mov	x8, xzr
  40b01c:	mov	x0, x8
  40b020:	bl	40b094 <ll_index_to_name@@Base+0xd8>
  40b024:	ldur	w9, [x29, #-12]
  40b028:	cmp	w0, w9
  40b02c:	b.ne	40b054 <ll_index_to_name@@Base+0x98>  // b.any
  40b030:	ldur	w0, [x29, #-12]
  40b034:	bl	40ada8 <ll_remember_index@@Base+0x110>
  40b038:	str	x0, [sp, #8]
  40b03c:	ldr	x8, [sp, #8]
  40b040:	cbz	x8, 40b054 <ll_index_to_name@@Base+0x98>
  40b044:	ldr	x8, [sp, #8]
  40b048:	add	x8, x8, #0x40
  40b04c:	stur	x8, [x29, #-8]
  40b050:	b	40b084 <ll_index_to_name@@Base+0xc8>
  40b054:	ldur	w0, [x29, #-12]
  40b058:	ldr	x1, [sp]
  40b05c:	bl	405060 <if_indextoname@plt>
  40b060:	cbnz	x0, 40b07c <ll_index_to_name@@Base+0xc0>
  40b064:	ldur	w3, [x29, #-12]
  40b068:	ldr	x0, [sp]
  40b06c:	mov	x1, #0x10                  	// #16
  40b070:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40b074:	add	x2, x2, #0xdd6
  40b078:	bl	404f90 <snprintf@plt>
  40b07c:	ldr	x8, [sp]
  40b080:	stur	x8, [x29, #-8]
  40b084:	ldur	x0, [x29, #-8]
  40b088:	ldp	x29, x30, [sp, #32]
  40b08c:	add	sp, sp, #0x30
  40b090:	ret
  40b094:	stp	x29, x30, [sp, #-32]!
  40b098:	str	x28, [sp, #16]
  40b09c:	mov	x29, sp
  40b0a0:	sub	sp, sp, #0x4d0
  40b0a4:	mov	x2, #0x420                 	// #1056
  40b0a8:	mov	w8, #0x20                  	// #32
  40b0ac:	mov	w9, #0x12                  	// #18
  40b0b0:	mov	w10, #0x1                   	// #1
  40b0b4:	mov	w11, #0x9                   	// #9
  40b0b8:	mov	x12, #0x38                  	// #56
  40b0bc:	mov	w13, wzr
  40b0c0:	add	x14, sp, #0x9c
  40b0c4:	add	x15, sp, #0x60
  40b0c8:	stur	x0, [x29, #-16]
  40b0cc:	stur	w1, [x29, #-20]
  40b0d0:	mov	x0, x14
  40b0d4:	mov	w1, w13
  40b0d8:	str	w8, [sp, #68]
  40b0dc:	str	w9, [sp, #64]
  40b0e0:	str	w10, [sp, #60]
  40b0e4:	str	w11, [sp, #56]
  40b0e8:	str	x12, [sp, #48]
  40b0ec:	str	w13, [sp, #44]
  40b0f0:	str	x14, [sp, #32]
  40b0f4:	str	x15, [sp, #24]
  40b0f8:	bl	405070 <memset@plt>
  40b0fc:	ldr	w8, [sp, #68]
  40b100:	str	w8, [sp, #156]
  40b104:	ldr	w9, [sp, #64]
  40b108:	ldr	x12, [sp, #32]
  40b10c:	strh	w9, [x12, #4]
  40b110:	ldr	w10, [sp, #60]
  40b114:	strh	w10, [x12, #6]
  40b118:	ldur	w11, [x29, #-20]
  40b11c:	str	w11, [sp, #176]
  40b120:	ldr	w11, [sp, #56]
  40b124:	str	w11, [sp, #152]
  40b128:	ldr	x0, [sp, #24]
  40b12c:	ldr	w13, [sp, #44]
  40b130:	mov	w1, w13
  40b134:	ldr	x2, [sp, #48]
  40b138:	bl	405070 <memset@plt>
  40b13c:	str	wzr, [sp, #84]
  40b140:	ldr	x0, [sp, #24]
  40b144:	ldr	w1, [sp, #44]
  40b148:	bl	40ea90 <rtnl_open@@Base>
  40b14c:	cmp	w0, #0x0
  40b150:	cset	w8, ge  // ge = tcont
  40b154:	tbnz	w8, #0, 40b160 <ll_index_to_name@@Base+0x1a4>
  40b158:	stur	wzr, [x29, #-4]
  40b15c:	b	40b23c <ll_index_to_name@@Base+0x280>
  40b160:	ldr	w3, [sp, #152]
  40b164:	add	x0, sp, #0x9c
  40b168:	mov	w1, #0x420                 	// #1056
  40b16c:	mov	w2, #0x1d                  	// #29
  40b170:	bl	410ed0 <addattr32@@Base>
  40b174:	ldur	x8, [x29, #-16]
  40b178:	cbz	x8, 40b1d0 <ll_index_to_name@@Base+0x214>
  40b17c:	ldur	x0, [x29, #-16]
  40b180:	bl	408618 <check_ifname@@Base>
  40b184:	cmp	w0, #0x0
  40b188:	cset	w8, ne  // ne = any
  40b18c:	eor	w8, w8, #0x1
  40b190:	mov	w9, #0x35                  	// #53
  40b194:	mov	w10, #0x3                   	// #3
  40b198:	tst	w8, #0x1
  40b19c:	csel	w2, w10, w9, ne  // ne = any
  40b1a0:	ldur	x3, [x29, #-16]
  40b1a4:	ldur	x0, [x29, #-16]
  40b1a8:	str	w2, [sp, #20]
  40b1ac:	str	x3, [sp, #8]
  40b1b0:	bl	404e70 <strlen@plt>
  40b1b4:	add	x11, x0, #0x1
  40b1b8:	add	x0, sp, #0x9c
  40b1bc:	mov	w1, #0x420                 	// #1056
  40b1c0:	ldr	w2, [sp, #20]
  40b1c4:	ldr	x3, [sp, #8]
  40b1c8:	mov	w4, w11
  40b1cc:	bl	410d20 <addattr_l@@Base>
  40b1d0:	add	x0, sp, #0x60
  40b1d4:	add	x1, sp, #0x9c
  40b1d8:	add	x2, sp, #0x58
  40b1dc:	bl	41055c <rtnl_talk_suppress_rtnl_errmsg@@Base>
  40b1e0:	cmp	w0, #0x0
  40b1e4:	cset	w8, ge  // ge = tcont
  40b1e8:	tbnz	w8, #0, 40b1f0 <ll_index_to_name@@Base+0x234>
  40b1ec:	b	40b22c <ll_index_to_name@@Base+0x270>
  40b1f0:	ldr	x0, [sp, #88]
  40b1f4:	mov	x8, xzr
  40b1f8:	mov	x1, x8
  40b1fc:	bl	40ac98 <ll_remember_index@@Base>
  40b200:	str	w0, [sp, #84]
  40b204:	ldr	w9, [sp, #84]
  40b208:	cbnz	w9, 40b224 <ll_index_to_name@@Base+0x268>
  40b20c:	ldr	x8, [sp, #88]
  40b210:	add	x8, x8, #0x10
  40b214:	str	x8, [sp, #72]
  40b218:	ldr	x8, [sp, #72]
  40b21c:	ldr	w9, [x8, #4]
  40b220:	str	w9, [sp, #84]
  40b224:	ldr	x0, [sp, #88]
  40b228:	bl	405200 <free@plt>
  40b22c:	add	x0, sp, #0x60
  40b230:	bl	40e7b0 <rtnl_close@@Base>
  40b234:	ldr	w8, [sp, #84]
  40b238:	stur	w8, [x29, #-4]
  40b23c:	ldur	w0, [x29, #-4]
  40b240:	add	sp, sp, #0x4d0
  40b244:	ldr	x28, [sp, #16]
  40b248:	ldp	x29, x30, [sp], #32
  40b24c:	ret

000000000040b250 <ll_index_to_type@@Base>:
  40b250:	sub	sp, sp, #0x30
  40b254:	stp	x29, x30, [sp, #32]
  40b258:	add	x29, sp, #0x20
  40b25c:	stur	w0, [x29, #-8]
  40b260:	ldur	w8, [x29, #-8]
  40b264:	cbnz	w8, 40b274 <ll_index_to_type@@Base+0x24>
  40b268:	mov	w8, #0xffffffff            	// #-1
  40b26c:	stur	w8, [x29, #-4]
  40b270:	b	40b2a8 <ll_index_to_type@@Base+0x58>
  40b274:	ldur	w0, [x29, #-8]
  40b278:	bl	40ada8 <ll_remember_index@@Base+0x110>
  40b27c:	str	x0, [sp, #16]
  40b280:	ldr	x8, [sp, #16]
  40b284:	cbz	x8, 40b298 <ll_index_to_type@@Base+0x48>
  40b288:	ldr	x8, [sp, #16]
  40b28c:	ldrh	w9, [x8, #40]
  40b290:	str	w9, [sp, #12]
  40b294:	b	40b2a0 <ll_index_to_type@@Base+0x50>
  40b298:	mov	w8, #0xffffffff            	// #-1
  40b29c:	str	w8, [sp, #12]
  40b2a0:	ldr	w8, [sp, #12]
  40b2a4:	stur	w8, [x29, #-4]
  40b2a8:	ldur	w0, [x29, #-4]
  40b2ac:	ldp	x29, x30, [sp, #32]
  40b2b0:	add	sp, sp, #0x30
  40b2b4:	ret

000000000040b2b8 <ll_index_to_flags@@Base>:
  40b2b8:	sub	sp, sp, #0x30
  40b2bc:	stp	x29, x30, [sp, #32]
  40b2c0:	add	x29, sp, #0x20
  40b2c4:	stur	w0, [x29, #-8]
  40b2c8:	ldur	w8, [x29, #-8]
  40b2cc:	cbnz	w8, 40b2d8 <ll_index_to_flags@@Base+0x20>
  40b2d0:	stur	wzr, [x29, #-4]
  40b2d4:	b	40b30c <ll_index_to_flags@@Base+0x54>
  40b2d8:	ldur	w0, [x29, #-8]
  40b2dc:	bl	40ada8 <ll_remember_index@@Base+0x110>
  40b2e0:	str	x0, [sp, #16]
  40b2e4:	ldr	x8, [sp, #16]
  40b2e8:	cbz	x8, 40b2fc <ll_index_to_flags@@Base+0x44>
  40b2ec:	ldr	x8, [sp, #16]
  40b2f0:	ldr	w9, [x8, #32]
  40b2f4:	str	w9, [sp, #12]
  40b2f8:	b	40b304 <ll_index_to_flags@@Base+0x4c>
  40b2fc:	mov	w8, #0xffffffff            	// #-1
  40b300:	str	w8, [sp, #12]
  40b304:	ldr	w8, [sp, #12]
  40b308:	stur	w8, [x29, #-4]
  40b30c:	ldur	w0, [x29, #-4]
  40b310:	ldp	x29, x30, [sp, #32]
  40b314:	add	sp, sp, #0x30
  40b318:	ret

000000000040b31c <ll_name_to_index@@Base>:
  40b31c:	sub	sp, sp, #0x30
  40b320:	stp	x29, x30, [sp, #32]
  40b324:	add	x29, sp, #0x20
  40b328:	str	x0, [sp, #16]
  40b32c:	ldr	x8, [sp, #16]
  40b330:	cbnz	x8, 40b33c <ll_name_to_index@@Base+0x20>
  40b334:	stur	wzr, [x29, #-4]
  40b338:	b	40b3a4 <ll_name_to_index@@Base+0x88>
  40b33c:	ldr	x0, [sp, #16]
  40b340:	bl	40b3b4 <ll_name_to_index@@Base+0x98>
  40b344:	str	x0, [sp, #8]
  40b348:	ldr	x8, [sp, #8]
  40b34c:	cbz	x8, 40b360 <ll_name_to_index@@Base+0x44>
  40b350:	ldr	x8, [sp, #8]
  40b354:	ldr	w9, [x8, #36]
  40b358:	stur	w9, [x29, #-4]
  40b35c:	b	40b3a4 <ll_name_to_index@@Base+0x88>
  40b360:	ldr	x0, [sp, #16]
  40b364:	mov	w8, wzr
  40b368:	mov	w1, w8
  40b36c:	bl	40b094 <ll_index_to_name@@Base+0xd8>
  40b370:	str	w0, [sp, #4]
  40b374:	ldr	w8, [sp, #4]
  40b378:	cbnz	w8, 40b388 <ll_name_to_index@@Base+0x6c>
  40b37c:	ldr	x0, [sp, #16]
  40b380:	bl	405300 <if_nametoindex@plt>
  40b384:	str	w0, [sp, #4]
  40b388:	ldr	w8, [sp, #4]
  40b38c:	cbnz	w8, 40b39c <ll_name_to_index@@Base+0x80>
  40b390:	ldr	x0, [sp, #16]
  40b394:	bl	40b470 <ll_name_to_index@@Base+0x154>
  40b398:	str	w0, [sp, #4]
  40b39c:	ldr	w8, [sp, #4]
  40b3a0:	stur	w8, [x29, #-4]
  40b3a4:	ldur	w0, [x29, #-4]
  40b3a8:	ldp	x29, x30, [sp, #32]
  40b3ac:	add	sp, sp, #0x30
  40b3b0:	ret
  40b3b4:	sub	sp, sp, #0x50
  40b3b8:	stp	x29, x30, [sp, #64]
  40b3bc:	add	x29, sp, #0x40
  40b3c0:	adrp	x8, 426000 <stdout@@GLIBC_2.17+0x1c98>
  40b3c4:	add	x8, x8, #0xdc0
  40b3c8:	stur	x0, [x29, #-16]
  40b3cc:	ldur	x0, [x29, #-16]
  40b3d0:	str	x8, [sp]
  40b3d4:	bl	40ac48 <namehash@@Base>
  40b3d8:	and	w9, w0, #0x3ff
  40b3dc:	stur	w9, [x29, #-28]
  40b3e0:	ldur	w9, [x29, #-28]
  40b3e4:	mov	w8, w9
  40b3e8:	mov	x10, #0x8                   	// #8
  40b3ec:	mul	x8, x10, x8
  40b3f0:	ldr	x10, [sp]
  40b3f4:	add	x8, x10, x8
  40b3f8:	ldr	x8, [x8]
  40b3fc:	stur	x8, [x29, #-24]
  40b400:	ldur	x8, [x29, #-24]
  40b404:	cbz	x8, 40b458 <ll_name_to_index@@Base+0x13c>
  40b408:	ldur	x8, [x29, #-24]
  40b40c:	str	x8, [sp, #16]
  40b410:	ldr	x8, [sp, #16]
  40b414:	mov	x9, #0xfffffffffffffff0    	// #-16
  40b418:	add	x8, x8, x9
  40b41c:	str	x8, [sp, #8]
  40b420:	ldr	x8, [sp, #8]
  40b424:	str	x8, [sp, #24]
  40b428:	ldr	x8, [sp, #24]
  40b42c:	add	x0, x8, #0x40
  40b430:	ldur	x1, [x29, #-16]
  40b434:	bl	405190 <strcmp@plt>
  40b438:	cbnz	w0, 40b448 <ll_name_to_index@@Base+0x12c>
  40b43c:	ldr	x8, [sp, #24]
  40b440:	stur	x8, [x29, #-8]
  40b444:	b	40b460 <ll_name_to_index@@Base+0x144>
  40b448:	ldur	x8, [x29, #-24]
  40b44c:	ldr	x8, [x8]
  40b450:	stur	x8, [x29, #-24]
  40b454:	b	40b400 <ll_name_to_index@@Base+0xe4>
  40b458:	mov	x8, xzr
  40b45c:	stur	x8, [x29, #-8]
  40b460:	ldur	x0, [x29, #-8]
  40b464:	ldp	x29, x30, [sp, #64]
  40b468:	add	sp, sp, #0x50
  40b46c:	ret
  40b470:	sub	sp, sp, #0x30
  40b474:	stp	x29, x30, [sp, #32]
  40b478:	add	x29, sp, #0x20
  40b47c:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40b480:	add	x1, x1, #0xdd6
  40b484:	add	x2, sp, #0xc
  40b488:	str	x0, [sp, #16]
  40b48c:	ldr	x0, [sp, #16]
  40b490:	bl	405330 <__isoc99_sscanf@plt>
  40b494:	cmp	w0, #0x1
  40b498:	b.eq	40b4a4 <ll_name_to_index@@Base+0x188>  // b.none
  40b49c:	stur	wzr, [x29, #-4]
  40b4a0:	b	40b4ac <ll_name_to_index@@Base+0x190>
  40b4a4:	ldr	w8, [sp, #12]
  40b4a8:	stur	w8, [x29, #-4]
  40b4ac:	ldur	w0, [x29, #-4]
  40b4b0:	ldp	x29, x30, [sp, #32]
  40b4b4:	add	sp, sp, #0x30
  40b4b8:	ret

000000000040b4bc <ll_drop_by_index@@Base>:
  40b4bc:	sub	sp, sp, #0x20
  40b4c0:	stp	x29, x30, [sp, #16]
  40b4c4:	add	x29, sp, #0x10
  40b4c8:	stur	w0, [x29, #-4]
  40b4cc:	ldur	w0, [x29, #-4]
  40b4d0:	bl	40ada8 <ll_remember_index@@Base+0x110>
  40b4d4:	str	x0, [sp]
  40b4d8:	ldr	x8, [sp]
  40b4dc:	cbnz	x8, 40b4e4 <ll_drop_by_index@@Base+0x28>
  40b4e0:	b	40b500 <ll_drop_by_index@@Base+0x44>
  40b4e4:	ldr	x0, [sp]
  40b4e8:	bl	40b50c <ll_drop_by_index@@Base+0x50>
  40b4ec:	ldr	x8, [sp]
  40b4f0:	add	x0, x8, #0x10
  40b4f4:	bl	40b50c <ll_drop_by_index@@Base+0x50>
  40b4f8:	ldr	x0, [sp]
  40b4fc:	bl	405200 <free@plt>
  40b500:	ldp	x29, x30, [sp, #16]
  40b504:	add	sp, sp, #0x20
  40b508:	ret
  40b50c:	sub	sp, sp, #0x20
  40b510:	str	x0, [sp, #24]
  40b514:	ldr	x8, [sp, #24]
  40b518:	ldr	x8, [x8]
  40b51c:	str	x8, [sp, #16]
  40b520:	ldr	x8, [sp, #24]
  40b524:	ldr	x8, [x8, #8]
  40b528:	str	x8, [sp, #8]
  40b52c:	ldr	x8, [sp, #16]
  40b530:	ldr	x9, [sp, #8]
  40b534:	str	x8, [x9]
  40b538:	ldr	x8, [sp, #16]
  40b53c:	cbz	x8, 40b54c <ll_drop_by_index@@Base+0x90>
  40b540:	ldr	x8, [sp, #8]
  40b544:	ldr	x9, [sp, #16]
  40b548:	str	x8, [x9, #8]
  40b54c:	add	sp, sp, #0x20
  40b550:	ret

000000000040b554 <ll_init_map@@Base>:
  40b554:	sub	sp, sp, #0x20
  40b558:	stp	x29, x30, [sp, #16]
  40b55c:	add	x29, sp, #0x10
  40b560:	adrp	x8, 424000 <memcpy@GLIBC_2.17>
  40b564:	add	x8, x8, #0xdb8
  40b568:	str	x0, [sp, #8]
  40b56c:	ldr	w9, [x8]
  40b570:	cbz	w9, 40b578 <ll_init_map@@Base+0x24>
  40b574:	b	40b608 <ll_init_map@@Base+0xb4>
  40b578:	ldr	x0, [sp, #8]
  40b57c:	mov	w8, wzr
  40b580:	mov	w1, w8
  40b584:	bl	40f28c <rtnl_linkdump_req@@Base>
  40b588:	cmp	w0, #0x0
  40b58c:	cset	w8, ge  // ge = tcont
  40b590:	tbnz	w8, #0, 40b5a8 <ll_init_map@@Base+0x54>
  40b594:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40b598:	add	x0, x0, #0xddd
  40b59c:	bl	404ea0 <perror@plt>
  40b5a0:	mov	w0, #0x1                   	// #1
  40b5a4:	bl	404e90 <exit@plt>
  40b5a8:	ldr	x0, [sp, #8]
  40b5ac:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40b5b0:	ldr	x1, [x1, #4008]
  40b5b4:	mov	x8, xzr
  40b5b8:	mov	x2, x8
  40b5bc:	mov	w9, wzr
  40b5c0:	mov	w3, w9
  40b5c4:	bl	40fb08 <rtnl_dump_filter_nc@@Base>
  40b5c8:	cmp	w0, #0x0
  40b5cc:	cset	w9, ge  // ge = tcont
  40b5d0:	tbnz	w9, #0, 40b5f8 <ll_init_map@@Base+0xa4>
  40b5d4:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40b5d8:	ldr	x8, [x8, #3992]
  40b5dc:	ldr	x0, [x8]
  40b5e0:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40b5e4:	add	x1, x1, #0x75c
  40b5e8:	bl	4053c0 <fprintf@plt>
  40b5ec:	mov	w9, #0x1                   	// #1
  40b5f0:	mov	w0, w9
  40b5f4:	bl	404e90 <exit@plt>
  40b5f8:	mov	w8, #0x1                   	// #1
  40b5fc:	adrp	x9, 424000 <memcpy@GLIBC_2.17>
  40b600:	add	x9, x9, #0xdb8
  40b604:	str	w8, [x9]
  40b608:	ldp	x29, x30, [sp, #16]
  40b60c:	add	sp, sp, #0x20
  40b610:	ret
  40b614:	sub	sp, sp, #0x60
  40b618:	stp	x29, x30, [sp, #80]
  40b61c:	add	x29, sp, #0x50
  40b620:	stur	x0, [x29, #-8]
  40b624:	ldur	x8, [x29, #-8]
  40b628:	ldr	x8, [x8, #48]
  40b62c:	stur	x8, [x29, #-32]
  40b630:	ldur	x8, [x29, #-32]
  40b634:	mov	x9, #0xffffffffffffffd0    	// #-48
  40b638:	add	x8, x8, x9
  40b63c:	str	x8, [sp, #40]
  40b640:	ldr	x8, [sp, #40]
  40b644:	stur	x8, [x29, #-16]
  40b648:	ldur	x8, [x29, #-16]
  40b64c:	ldr	x8, [x8, #48]
  40b650:	str	x8, [sp, #32]
  40b654:	ldr	x8, [sp, #32]
  40b658:	add	x8, x8, x9
  40b65c:	str	x8, [sp, #24]
  40b660:	ldr	x8, [sp, #24]
  40b664:	stur	x8, [x29, #-24]
  40b668:	ldur	x8, [x29, #-16]
  40b66c:	add	x8, x8, #0x30
  40b670:	ldur	x9, [x29, #-8]
  40b674:	add	x9, x9, #0x30
  40b678:	cmp	x8, x9
  40b67c:	b.eq	40b6c0 <ll_init_map@@Base+0x16c>  // b.none
  40b680:	ldur	x0, [x29, #-16]
  40b684:	mov	w8, wzr
  40b688:	and	w1, w8, #0x1
  40b68c:	bl	40b6cc <ll_init_map@@Base+0x178>
  40b690:	ldur	x8, [x29, #-24]
  40b694:	stur	x8, [x29, #-16]
  40b698:	ldur	x8, [x29, #-24]
  40b69c:	ldr	x8, [x8, #48]
  40b6a0:	str	x8, [sp, #16]
  40b6a4:	ldr	x8, [sp, #16]
  40b6a8:	mov	x9, #0xffffffffffffffd0    	// #-48
  40b6ac:	add	x8, x8, x9
  40b6b0:	str	x8, [sp, #8]
  40b6b4:	ldr	x8, [sp, #8]
  40b6b8:	stur	x8, [x29, #-24]
  40b6bc:	b	40b668 <ll_init_map@@Base+0x114>
  40b6c0:	ldp	x29, x30, [sp, #80]
  40b6c4:	add	sp, sp, #0x60
  40b6c8:	ret
  40b6cc:	sub	sp, sp, #0x20
  40b6d0:	stp	x29, x30, [sp, #16]
  40b6d4:	add	x29, sp, #0x10
  40b6d8:	str	x0, [sp, #8]
  40b6dc:	and	w8, w1, #0x1
  40b6e0:	strb	w8, [sp, #7]
  40b6e4:	ldr	x9, [sp, #8]
  40b6e8:	add	x0, x9, #0x10
  40b6ec:	bl	40b50c <ll_drop_by_index@@Base+0x50>
  40b6f0:	ldrb	w8, [sp, #7]
  40b6f4:	tbnz	w8, #0, 40b6fc <ll_init_map@@Base+0x1a8>
  40b6f8:	b	40b708 <ll_init_map@@Base+0x1b4>
  40b6fc:	ldr	x0, [sp, #8]
  40b700:	bl	40b50c <ll_drop_by_index@@Base+0x50>
  40b704:	b	40b714 <ll_init_map@@Base+0x1c0>
  40b708:	ldr	x8, [sp, #8]
  40b70c:	add	x0, x8, #0x30
  40b710:	bl	40b728 <ll_init_map@@Base+0x1d4>
  40b714:	ldr	x0, [sp, #8]
  40b718:	bl	405200 <free@plt>
  40b71c:	ldp	x29, x30, [sp, #16]
  40b720:	add	sp, sp, #0x20
  40b724:	ret
  40b728:	sub	sp, sp, #0x20
  40b72c:	stp	x29, x30, [sp, #16]
  40b730:	add	x29, sp, #0x10
  40b734:	str	x0, [sp, #8]
  40b738:	ldr	x8, [sp, #8]
  40b73c:	ldr	x0, [x8, #8]
  40b740:	ldr	x8, [sp, #8]
  40b744:	ldr	x1, [x8]
  40b748:	bl	40b758 <ll_init_map@@Base+0x204>
  40b74c:	ldp	x29, x30, [sp, #16]
  40b750:	add	sp, sp, #0x20
  40b754:	ret
  40b758:	sub	sp, sp, #0x10
  40b75c:	str	x0, [sp, #8]
  40b760:	str	x1, [sp]
  40b764:	ldr	x8, [sp, #8]
  40b768:	ldr	x9, [sp]
  40b76c:	str	x8, [x9, #8]
  40b770:	ldr	x8, [sp]
  40b774:	ldr	x9, [sp, #8]
  40b778:	str	x8, [x9]
  40b77c:	add	sp, sp, #0x10
  40b780:	ret
  40b784:	sub	sp, sp, #0x30
  40b788:	stp	x29, x30, [sp, #32]
  40b78c:	add	x29, sp, #0x20
  40b790:	stur	x0, [x29, #-8]
  40b794:	str	x1, [sp, #16]
  40b798:	str	x2, [sp, #8]
  40b79c:	ldr	x8, [sp, #16]
  40b7a0:	ldr	w9, [x8, #8]
  40b7a4:	ldur	x8, [x29, #-8]
  40b7a8:	str	w9, [x8, #32]
  40b7ac:	ldur	x8, [x29, #-8]
  40b7b0:	add	x0, x8, #0x40
  40b7b4:	ldr	x1, [sp, #8]
  40b7b8:	bl	405190 <strcmp@plt>
  40b7bc:	cbnz	w0, 40b7c4 <ll_init_map@@Base+0x270>
  40b7c0:	b	40b808 <ll_init_map@@Base+0x2b4>
  40b7c4:	ldur	x8, [x29, #-8]
  40b7c8:	add	x0, x8, #0x10
  40b7cc:	bl	40b50c <ll_drop_by_index@@Base+0x50>
  40b7d0:	ldr	x0, [sp, #8]
  40b7d4:	bl	40ac48 <namehash@@Base>
  40b7d8:	and	w9, w0, #0x3ff
  40b7dc:	str	w9, [sp, #4]
  40b7e0:	ldur	x8, [x29, #-8]
  40b7e4:	add	x0, x8, #0x10
  40b7e8:	ldr	w9, [sp, #4]
  40b7ec:	mov	w8, w9
  40b7f0:	mov	x10, #0x8                   	// #8
  40b7f4:	mul	x8, x10, x8
  40b7f8:	adrp	x10, 426000 <stdout@@GLIBC_2.17+0x1c98>
  40b7fc:	add	x10, x10, #0xdc0
  40b800:	add	x1, x10, x8
  40b804:	bl	40b9f8 <ll_init_map@@Base+0x4a4>
  40b808:	ldp	x29, x30, [sp, #32]
  40b80c:	add	sp, sp, #0x30
  40b810:	ret
  40b814:	sub	sp, sp, #0x10
  40b818:	str	x0, [sp, #8]
  40b81c:	ldr	x8, [sp, #8]
  40b820:	add	x0, x8, #0x4
  40b824:	add	sp, sp, #0x10
  40b828:	ret
  40b82c:	sub	sp, sp, #0x80
  40b830:	stp	x29, x30, [sp, #112]
  40b834:	add	x29, sp, #0x70
  40b838:	stur	x0, [x29, #-8]
  40b83c:	stur	x1, [x29, #-16]
  40b840:	stur	x2, [x29, #-24]
  40b844:	ldur	x8, [x29, #-24]
  40b848:	ldr	x8, [x8, #416]
  40b84c:	stur	x8, [x29, #-40]
  40b850:	ldur	x8, [x29, #-40]
  40b854:	cbnz	x8, 40b864 <ll_init_map@@Base+0x310>
  40b858:	ldur	x0, [x29, #-8]
  40b85c:	bl	40b614 <ll_init_map@@Base+0xc0>
  40b860:	b	40b9ec <ll_init_map@@Base+0x498>
  40b864:	ldur	x8, [x29, #-8]
  40b868:	ldr	x8, [x8, #48]
  40b86c:	str	x8, [sp, #48]
  40b870:	ldr	x8, [sp, #48]
  40b874:	mov	x9, #0xffffffffffffffd0    	// #-48
  40b878:	add	x8, x8, x9
  40b87c:	str	x8, [sp, #40]
  40b880:	ldr	x8, [sp, #40]
  40b884:	stur	x8, [x29, #-48]
  40b888:	ldur	x8, [x29, #-40]
  40b88c:	ldrh	w10, [x8]
  40b890:	mov	w0, w10
  40b894:	sxtw	x8, w0
  40b898:	subs	x8, x8, #0x4
  40b89c:	stur	w8, [x29, #-52]
  40b8a0:	ldur	x9, [x29, #-40]
  40b8a4:	add	x9, x9, #0x4
  40b8a8:	stur	x9, [x29, #-32]
  40b8ac:	ldur	w8, [x29, #-52]
  40b8b0:	mov	w9, #0x0                   	// #0
  40b8b4:	cmp	w8, #0x4
  40b8b8:	str	w9, [sp, #4]
  40b8bc:	b.lt	40b8f4 <ll_init_map@@Base+0x3a0>  // b.tstop
  40b8c0:	ldur	x8, [x29, #-32]
  40b8c4:	ldrh	w9, [x8]
  40b8c8:	mov	w8, w9
  40b8cc:	mov	w9, #0x0                   	// #0
  40b8d0:	cmp	x8, #0x4
  40b8d4:	str	w9, [sp, #4]
  40b8d8:	b.cc	40b8f4 <ll_init_map@@Base+0x3a0>  // b.lo, b.ul, b.last
  40b8dc:	ldur	x8, [x29, #-32]
  40b8e0:	ldrh	w9, [x8]
  40b8e4:	ldur	w10, [x29, #-52]
  40b8e8:	cmp	w9, w10
  40b8ec:	cset	w9, le
  40b8f0:	str	w9, [sp, #4]
  40b8f4:	ldr	w8, [sp, #4]
  40b8f8:	tbnz	w8, #0, 40b900 <ll_init_map@@Base+0x3ac>
  40b8fc:	b	40b9a8 <ll_init_map@@Base+0x454>
  40b900:	ldur	x8, [x29, #-32]
  40b904:	ldrh	w9, [x8, #2]
  40b908:	cmp	w9, #0x35
  40b90c:	b.eq	40b914 <ll_init_map@@Base+0x3c0>  // b.none
  40b910:	b	40b95c <ll_init_map@@Base+0x408>
  40b914:	ldur	x8, [x29, #-48]
  40b918:	cbz	x8, 40b934 <ll_init_map@@Base+0x3e0>
  40b91c:	ldur	x0, [x29, #-32]
  40b920:	bl	40b814 <ll_init_map@@Base+0x2c0>
  40b924:	ldur	x8, [x29, #-48]
  40b928:	add	x1, x8, #0x40
  40b92c:	bl	405190 <strcmp@plt>
  40b930:	cbz	w0, 40b938 <ll_init_map@@Base+0x3e4>
  40b934:	b	40b9d4 <ll_init_map@@Base+0x480>
  40b938:	ldur	x8, [x29, #-48]
  40b93c:	ldr	x8, [x8, #48]
  40b940:	str	x8, [sp, #32]
  40b944:	ldr	x8, [sp, #32]
  40b948:	mov	x9, #0xffffffffffffffd0    	// #-48
  40b94c:	add	x8, x8, x9
  40b950:	str	x8, [sp, #24]
  40b954:	ldr	x8, [sp, #24]
  40b958:	stur	x8, [x29, #-48]
  40b95c:	ldur	x8, [x29, #-32]
  40b960:	ldrh	w9, [x8]
  40b964:	add	w9, w9, #0x4
  40b968:	subs	w9, w9, #0x1
  40b96c:	and	w9, w9, #0xfffffffc
  40b970:	ldur	w10, [x29, #-52]
  40b974:	subs	w9, w10, w9
  40b978:	stur	w9, [x29, #-52]
  40b97c:	ldur	x8, [x29, #-32]
  40b980:	ldur	x11, [x29, #-32]
  40b984:	ldrh	w9, [x11]
  40b988:	add	w9, w9, #0x4
  40b98c:	subs	w9, w9, #0x1
  40b990:	and	w9, w9, #0xfffffffc
  40b994:	mov	w11, w9
  40b998:	ubfx	x11, x11, #0, #32
  40b99c:	add	x8, x8, x11
  40b9a0:	stur	x8, [x29, #-32]
  40b9a4:	b	40b8ac <ll_init_map@@Base+0x358>
  40b9a8:	ldur	x8, [x29, #-48]
  40b9ac:	ldr	x8, [x8, #48]
  40b9b0:	str	x8, [sp, #16]
  40b9b4:	ldr	x8, [sp, #16]
  40b9b8:	mov	x9, #0xffffffffffffffd0    	// #-48
  40b9bc:	add	x8, x8, x9
  40b9c0:	str	x8, [sp, #8]
  40b9c4:	ldr	x8, [sp, #8]
  40b9c8:	cbz	x8, 40b9d0 <ll_init_map@@Base+0x47c>
  40b9cc:	b	40b9d4 <ll_init_map@@Base+0x480>
  40b9d0:	b	40b9ec <ll_init_map@@Base+0x498>
  40b9d4:	ldur	x0, [x29, #-8]
  40b9d8:	bl	40b614 <ll_init_map@@Base+0xc0>
  40b9dc:	ldur	x0, [x29, #-8]
  40b9e0:	ldur	x1, [x29, #-16]
  40b9e4:	ldur	x2, [x29, #-24]
  40b9e8:	bl	40ba50 <ll_init_map@@Base+0x4fc>
  40b9ec:	ldp	x29, x30, [sp, #112]
  40b9f0:	add	sp, sp, #0x80
  40b9f4:	ret
  40b9f8:	sub	sp, sp, #0x20
  40b9fc:	str	x0, [sp, #24]
  40ba00:	str	x1, [sp, #16]
  40ba04:	ldr	x8, [sp, #16]
  40ba08:	ldr	x8, [x8]
  40ba0c:	str	x8, [sp, #8]
  40ba10:	ldr	x8, [sp, #8]
  40ba14:	ldr	x9, [sp, #24]
  40ba18:	str	x8, [x9]
  40ba1c:	ldr	x8, [sp, #8]
  40ba20:	cbz	x8, 40ba30 <ll_init_map@@Base+0x4dc>
  40ba24:	ldr	x8, [sp, #24]
  40ba28:	ldr	x9, [sp, #8]
  40ba2c:	str	x8, [x9, #8]
  40ba30:	ldr	x8, [sp, #24]
  40ba34:	ldr	x9, [sp, #16]
  40ba38:	str	x8, [x9]
  40ba3c:	ldr	x8, [sp, #16]
  40ba40:	ldr	x9, [sp, #24]
  40ba44:	str	x8, [x9, #8]
  40ba48:	add	sp, sp, #0x20
  40ba4c:	ret
  40ba50:	sub	sp, sp, #0x50
  40ba54:	stp	x29, x30, [sp, #64]
  40ba58:	add	x29, sp, #0x40
  40ba5c:	stur	x0, [x29, #-8]
  40ba60:	stur	x1, [x29, #-16]
  40ba64:	stur	x2, [x29, #-24]
  40ba68:	ldur	x8, [x29, #-24]
  40ba6c:	ldr	x8, [x8, #416]
  40ba70:	str	x8, [sp, #24]
  40ba74:	ldr	x8, [sp, #24]
  40ba78:	cbnz	x8, 40ba80 <ll_init_map@@Base+0x52c>
  40ba7c:	b	40bb84 <ll_init_map@@Base+0x630>
  40ba80:	ldr	x8, [sp, #24]
  40ba84:	ldrh	w9, [x8]
  40ba88:	mov	w0, w9
  40ba8c:	sxtw	x8, w0
  40ba90:	subs	x8, x8, #0x4
  40ba94:	str	w8, [sp, #20]
  40ba98:	ldr	x10, [sp, #24]
  40ba9c:	add	x10, x10, #0x4
  40baa0:	str	x10, [sp, #32]
  40baa4:	ldr	w8, [sp, #20]
  40baa8:	mov	w9, #0x0                   	// #0
  40baac:	cmp	w8, #0x4
  40bab0:	str	w9, [sp, #16]
  40bab4:	b.lt	40baec <ll_init_map@@Base+0x598>  // b.tstop
  40bab8:	ldr	x8, [sp, #32]
  40babc:	ldrh	w9, [x8]
  40bac0:	mov	w8, w9
  40bac4:	mov	w9, #0x0                   	// #0
  40bac8:	cmp	x8, #0x4
  40bacc:	str	w9, [sp, #16]
  40bad0:	b.cc	40baec <ll_init_map@@Base+0x598>  // b.lo, b.ul, b.last
  40bad4:	ldr	x8, [sp, #32]
  40bad8:	ldrh	w9, [x8]
  40badc:	ldr	w10, [sp, #20]
  40bae0:	cmp	w9, w10
  40bae4:	cset	w9, le
  40bae8:	str	w9, [sp, #16]
  40baec:	ldr	w8, [sp, #16]
  40baf0:	tbnz	w8, #0, 40baf8 <ll_init_map@@Base+0x5a4>
  40baf4:	b	40bb84 <ll_init_map@@Base+0x630>
  40baf8:	ldr	x8, [sp, #32]
  40bafc:	ldrh	w9, [x8, #2]
  40bb00:	cmp	w9, #0x35
  40bb04:	b.eq	40bb0c <ll_init_map@@Base+0x5b8>  // b.none
  40bb08:	b	40bb38 <ll_init_map@@Base+0x5e4>
  40bb0c:	ldur	x0, [x29, #-16]
  40bb10:	ldr	x8, [sp, #32]
  40bb14:	str	x0, [sp, #8]
  40bb18:	mov	x0, x8
  40bb1c:	bl	40b814 <ll_init_map@@Base+0x2c0>
  40bb20:	ldur	x2, [x29, #-8]
  40bb24:	ldr	x8, [sp, #8]
  40bb28:	str	x0, [sp]
  40bb2c:	mov	x0, x8
  40bb30:	ldr	x1, [sp]
  40bb34:	bl	40bb90 <ll_init_map@@Base+0x63c>
  40bb38:	ldr	x8, [sp, #32]
  40bb3c:	ldrh	w9, [x8]
  40bb40:	add	w9, w9, #0x4
  40bb44:	subs	w9, w9, #0x1
  40bb48:	and	w9, w9, #0xfffffffc
  40bb4c:	ldr	w10, [sp, #20]
  40bb50:	subs	w9, w10, w9
  40bb54:	str	w9, [sp, #20]
  40bb58:	ldr	x8, [sp, #32]
  40bb5c:	ldr	x11, [sp, #32]
  40bb60:	ldrh	w9, [x11]
  40bb64:	add	w9, w9, #0x4
  40bb68:	subs	w9, w9, #0x1
  40bb6c:	and	w9, w9, #0xfffffffc
  40bb70:	mov	w11, w9
  40bb74:	ubfx	x11, x11, #0, #32
  40bb78:	add	x8, x8, x11
  40bb7c:	str	x8, [sp, #32]
  40bb80:	b	40baa4 <ll_init_map@@Base+0x550>
  40bb84:	ldp	x29, x30, [sp, #64]
  40bb88:	add	sp, sp, #0x50
  40bb8c:	ret
  40bb90:	sub	sp, sp, #0x40
  40bb94:	stp	x29, x30, [sp, #48]
  40bb98:	add	x29, sp, #0x30
  40bb9c:	stur	x0, [x29, #-16]
  40bba0:	str	x1, [sp, #24]
  40bba4:	str	x2, [sp, #16]
  40bba8:	ldr	x0, [sp, #24]
  40bbac:	bl	404e70 <strlen@plt>
  40bbb0:	add	x8, x0, #0x40
  40bbb4:	add	x0, x8, #0x1
  40bbb8:	bl	405000 <malloc@plt>
  40bbbc:	str	x0, [sp, #8]
  40bbc0:	ldr	x8, [sp, #8]
  40bbc4:	cbnz	x8, 40bbd4 <ll_init_map@@Base+0x680>
  40bbc8:	mov	x8, xzr
  40bbcc:	stur	x8, [x29, #-8]
  40bbd0:	b	40bcb4 <ll_init_map@@Base+0x760>
  40bbd4:	ldur	x8, [x29, #-16]
  40bbd8:	ldr	w9, [x8, #4]
  40bbdc:	ldr	x8, [sp, #8]
  40bbe0:	str	w9, [x8, #36]
  40bbe4:	ldr	x8, [sp, #8]
  40bbe8:	add	x0, x8, #0x40
  40bbec:	ldr	x1, [sp, #24]
  40bbf0:	bl	405290 <strcpy@plt>
  40bbf4:	ldur	x8, [x29, #-16]
  40bbf8:	ldrh	w9, [x8, #2]
  40bbfc:	ldr	x8, [sp, #8]
  40bc00:	strh	w9, [x8, #40]
  40bc04:	ldur	x8, [x29, #-16]
  40bc08:	ldr	w9, [x8, #8]
  40bc0c:	ldr	x8, [sp, #8]
  40bc10:	str	w9, [x8, #32]
  40bc14:	ldr	x8, [sp, #16]
  40bc18:	cbz	x8, 40bc34 <ll_init_map@@Base+0x6e0>
  40bc1c:	ldr	x8, [sp, #8]
  40bc20:	add	x0, x8, #0x30
  40bc24:	ldr	x8, [sp, #16]
  40bc28:	add	x1, x8, #0x30
  40bc2c:	bl	40bcc4 <ll_init_map@@Base+0x770>
  40bc30:	b	40bc74 <ll_init_map@@Base+0x720>
  40bc34:	ldur	x8, [x29, #-16]
  40bc38:	ldr	w9, [x8, #4]
  40bc3c:	and	w9, w9, #0x3ff
  40bc40:	str	w9, [sp, #4]
  40bc44:	ldr	x0, [sp, #8]
  40bc48:	ldr	w9, [sp, #4]
  40bc4c:	mov	w8, w9
  40bc50:	mov	x10, #0x8                   	// #8
  40bc54:	mul	x8, x10, x8
  40bc58:	adrp	x10, 424000 <memcpy@GLIBC_2.17>
  40bc5c:	add	x10, x10, #0xdc0
  40bc60:	add	x1, x10, x8
  40bc64:	bl	40b9f8 <ll_init_map@@Base+0x4a4>
  40bc68:	ldr	x8, [sp, #8]
  40bc6c:	add	x0, x8, #0x30
  40bc70:	bl	40bcf8 <ll_init_map@@Base+0x7a4>
  40bc74:	ldr	x0, [sp, #24]
  40bc78:	bl	40ac48 <namehash@@Base>
  40bc7c:	and	w8, w0, #0x3ff
  40bc80:	str	w8, [sp, #4]
  40bc84:	ldr	x9, [sp, #8]
  40bc88:	add	x0, x9, #0x10
  40bc8c:	ldr	w8, [sp, #4]
  40bc90:	mov	w9, w8
  40bc94:	mov	x10, #0x8                   	// #8
  40bc98:	mul	x9, x10, x9
  40bc9c:	adrp	x10, 426000 <stdout@@GLIBC_2.17+0x1c98>
  40bca0:	add	x10, x10, #0xdc0
  40bca4:	add	x1, x10, x9
  40bca8:	bl	40b9f8 <ll_init_map@@Base+0x4a4>
  40bcac:	ldr	x9, [sp, #8]
  40bcb0:	stur	x9, [x29, #-8]
  40bcb4:	ldur	x0, [x29, #-8]
  40bcb8:	ldp	x29, x30, [sp, #48]
  40bcbc:	add	sp, sp, #0x40
  40bcc0:	ret
  40bcc4:	sub	sp, sp, #0x20
  40bcc8:	stp	x29, x30, [sp, #16]
  40bccc:	add	x29, sp, #0x10
  40bcd0:	str	x0, [sp, #8]
  40bcd4:	str	x1, [sp]
  40bcd8:	ldr	x0, [sp, #8]
  40bcdc:	ldr	x8, [sp]
  40bce0:	ldr	x1, [x8, #8]
  40bce4:	ldr	x2, [sp]
  40bce8:	bl	40bd20 <ll_init_map@@Base+0x7cc>
  40bcec:	ldp	x29, x30, [sp, #16]
  40bcf0:	add	sp, sp, #0x20
  40bcf4:	ret
  40bcf8:	sub	sp, sp, #0x10
  40bcfc:	str	x0, [sp, #8]
  40bd00:	ldr	x8, [sp, #8]
  40bd04:	ldr	x9, [sp, #8]
  40bd08:	str	x8, [x9]
  40bd0c:	ldr	x8, [sp, #8]
  40bd10:	ldr	x9, [sp, #8]
  40bd14:	str	x8, [x9, #8]
  40bd18:	add	sp, sp, #0x10
  40bd1c:	ret
  40bd20:	sub	sp, sp, #0x20
  40bd24:	str	x0, [sp, #24]
  40bd28:	str	x1, [sp, #16]
  40bd2c:	str	x2, [sp, #8]
  40bd30:	ldr	x8, [sp, #24]
  40bd34:	ldr	x9, [sp, #8]
  40bd38:	str	x8, [x9, #8]
  40bd3c:	ldr	x8, [sp, #8]
  40bd40:	ldr	x9, [sp, #24]
  40bd44:	str	x8, [x9]
  40bd48:	ldr	x8, [sp, #16]
  40bd4c:	ldr	x9, [sp, #24]
  40bd50:	str	x8, [x9, #8]
  40bd54:	ldr	x8, [sp, #24]
  40bd58:	ldr	x9, [sp, #16]
  40bd5c:	str	x8, [x9]
  40bd60:	add	sp, sp, #0x20
  40bd64:	ret

000000000040bd68 <ll_addr_n2a@@Base>:
  40bd68:	sub	sp, sp, #0x40
  40bd6c:	stp	x29, x30, [sp, #48]
  40bd70:	add	x29, sp, #0x30
  40bd74:	stur	x0, [x29, #-16]
  40bd78:	stur	w1, [x29, #-20]
  40bd7c:	str	w2, [sp, #24]
  40bd80:	str	x3, [sp, #16]
  40bd84:	str	w4, [sp, #12]
  40bd88:	ldur	w8, [x29, #-20]
  40bd8c:	cmp	w8, #0x4
  40bd90:	b.ne	40bdd4 <ll_addr_n2a@@Base+0x6c>  // b.any
  40bd94:	ldr	w8, [sp, #24]
  40bd98:	cmp	w8, #0x300
  40bd9c:	b.eq	40bdb8 <ll_addr_n2a@@Base+0x50>  // b.none
  40bda0:	ldr	w8, [sp, #24]
  40bda4:	cmp	w8, #0x308
  40bda8:	b.eq	40bdb8 <ll_addr_n2a@@Base+0x50>  // b.none
  40bdac:	ldr	w8, [sp, #24]
  40bdb0:	cmp	w8, #0x30a
  40bdb4:	b.ne	40bdd4 <ll_addr_n2a@@Base+0x6c>  // b.any
  40bdb8:	ldur	x1, [x29, #-16]
  40bdbc:	ldr	x2, [sp, #16]
  40bdc0:	ldr	w3, [sp, #12]
  40bdc4:	mov	w0, #0x2                   	// #2
  40bdc8:	bl	4053e0 <inet_ntop@plt>
  40bdcc:	stur	x0, [x29, #-8]
  40bdd0:	b	40bed4 <ll_addr_n2a@@Base+0x16c>
  40bdd4:	ldur	w8, [x29, #-20]
  40bdd8:	cmp	w8, #0x10
  40bddc:	b.ne	40be14 <ll_addr_n2a@@Base+0xac>  // b.any
  40bde0:	ldr	w8, [sp, #24]
  40bde4:	cmp	w8, #0x301
  40bde8:	b.eq	40bdf8 <ll_addr_n2a@@Base+0x90>  // b.none
  40bdec:	ldr	w8, [sp, #24]
  40bdf0:	cmp	w8, #0x337
  40bdf4:	b.ne	40be14 <ll_addr_n2a@@Base+0xac>  // b.any
  40bdf8:	ldur	x1, [x29, #-16]
  40bdfc:	ldr	x2, [sp, #16]
  40be00:	ldr	w3, [sp, #12]
  40be04:	mov	w0, #0xa                   	// #10
  40be08:	bl	4053e0 <inet_ntop@plt>
  40be0c:	stur	x0, [x29, #-8]
  40be10:	b	40bed4 <ll_addr_n2a@@Base+0x16c>
  40be14:	ldr	x0, [sp, #16]
  40be18:	ldrsw	x1, [sp, #12]
  40be1c:	ldur	x8, [x29, #-16]
  40be20:	ldrb	w3, [x8]
  40be24:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40be28:	add	x2, x2, #0xdf7
  40be2c:	bl	404f90 <snprintf@plt>
  40be30:	mov	w9, #0x1                   	// #1
  40be34:	str	w9, [sp, #8]
  40be38:	mov	w9, #0x2                   	// #2
  40be3c:	str	w9, [sp, #4]
  40be40:	ldr	w8, [sp, #8]
  40be44:	ldur	w9, [x29, #-20]
  40be48:	mov	w10, #0x0                   	// #0
  40be4c:	cmp	w8, w9
  40be50:	str	w10, [sp]
  40be54:	b.ge	40be6c <ll_addr_n2a@@Base+0x104>  // b.tcont
  40be58:	ldr	w8, [sp, #4]
  40be5c:	ldr	w9, [sp, #12]
  40be60:	cmp	w8, w9
  40be64:	cset	w8, lt  // lt = tstop
  40be68:	str	w8, [sp]
  40be6c:	ldr	w8, [sp]
  40be70:	tbnz	w8, #0, 40be78 <ll_addr_n2a@@Base+0x110>
  40be74:	b	40becc <ll_addr_n2a@@Base+0x164>
  40be78:	ldr	x8, [sp, #16]
  40be7c:	ldrsw	x9, [sp, #4]
  40be80:	add	x0, x8, x9
  40be84:	ldr	w10, [sp, #12]
  40be88:	ldr	w11, [sp, #4]
  40be8c:	subs	w10, w10, w11
  40be90:	mov	w1, w10
  40be94:	sxtw	x1, w1
  40be98:	ldur	x8, [x29, #-16]
  40be9c:	ldrsw	x9, [sp, #8]
  40bea0:	ldrb	w3, [x8, x9]
  40bea4:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40bea8:	add	x2, x2, #0xdf6
  40beac:	bl	404f90 <snprintf@plt>
  40beb0:	ldr	w8, [sp, #8]
  40beb4:	add	w8, w8, #0x1
  40beb8:	str	w8, [sp, #8]
  40bebc:	ldr	w8, [sp, #4]
  40bec0:	add	w8, w8, #0x3
  40bec4:	str	w8, [sp, #4]
  40bec8:	b	40be40 <ll_addr_n2a@@Base+0xd8>
  40becc:	ldr	x8, [sp, #16]
  40bed0:	stur	x8, [x29, #-8]
  40bed4:	ldur	x0, [x29, #-8]
  40bed8:	ldp	x29, x30, [sp, #48]
  40bedc:	add	sp, sp, #0x40
  40bee0:	ret

000000000040bee4 <ll_addr_a2n@@Base>:
  40bee4:	sub	sp, sp, #0x170
  40bee8:	stp	x29, x30, [sp, #336]
  40beec:	str	x28, [sp, #352]
  40bef0:	add	x29, sp, #0x150
  40bef4:	mov	w8, #0x2e                  	// #46
  40bef8:	adrp	x9, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40befc:	ldr	x9, [x9, #3992]
  40bf00:	adrp	x10, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40bf04:	add	x10, x10, #0xdfc
  40bf08:	stur	x0, [x29, #-16]
  40bf0c:	stur	w1, [x29, #-20]
  40bf10:	stur	x2, [x29, #-32]
  40bf14:	ldur	x0, [x29, #-32]
  40bf18:	mov	w1, w8
  40bf1c:	str	x9, [sp, #16]
  40bf20:	str	x10, [sp, #8]
  40bf24:	bl	405240 <strchr@plt>
  40bf28:	cbz	x0, 40bf90 <ll_addr_a2n@@Base+0xac>
  40bf2c:	ldur	x1, [x29, #-32]
  40bf30:	add	x0, sp, #0x28
  40bf34:	mov	w2, #0x2                   	// #2
  40bf38:	bl	40792c <get_addr_1@@Base>
  40bf3c:	cbz	w0, 40bf60 <ll_addr_a2n@@Base+0x7c>
  40bf40:	ldr	x8, [sp, #16]
  40bf44:	ldr	x0, [x8]
  40bf48:	ldur	x2, [x29, #-32]
  40bf4c:	ldr	x1, [sp, #8]
  40bf50:	bl	4053c0 <fprintf@plt>
  40bf54:	mov	w9, #0xffffffff            	// #-1
  40bf58:	stur	w9, [x29, #-4]
  40bf5c:	b	40c090 <ll_addr_a2n@@Base+0x1ac>
  40bf60:	ldur	w8, [x29, #-20]
  40bf64:	cmp	w8, #0x4
  40bf68:	b.ge	40bf78 <ll_addr_a2n@@Base+0x94>  // b.tcont
  40bf6c:	mov	w8, #0xffffffff            	// #-1
  40bf70:	stur	w8, [x29, #-4]
  40bf74:	b	40c090 <ll_addr_a2n@@Base+0x1ac>
  40bf78:	ldur	x8, [x29, #-16]
  40bf7c:	ldr	w9, [sp, #48]
  40bf80:	str	w9, [x8]
  40bf84:	mov	w9, #0x4                   	// #4
  40bf88:	stur	w9, [x29, #-4]
  40bf8c:	b	40c090 <ll_addr_a2n@@Base+0x1ac>
  40bf90:	str	wzr, [sp, #36]
  40bf94:	ldr	w8, [sp, #36]
  40bf98:	ldur	w9, [x29, #-20]
  40bf9c:	cmp	w8, w9
  40bfa0:	b.ge	40c084 <ll_addr_a2n@@Base+0x1a0>  // b.tcont
  40bfa4:	ldur	x0, [x29, #-32]
  40bfa8:	mov	w1, #0x3a                  	// #58
  40bfac:	bl	405240 <strchr@plt>
  40bfb0:	str	x0, [sp, #24]
  40bfb4:	ldr	x8, [sp, #24]
  40bfb8:	cbz	x8, 40bfd4 <ll_addr_a2n@@Base+0xf0>
  40bfbc:	ldr	x8, [sp, #24]
  40bfc0:	mov	w9, #0x0                   	// #0
  40bfc4:	strb	w9, [x8]
  40bfc8:	ldr	x8, [sp, #24]
  40bfcc:	add	x8, x8, #0x1
  40bfd0:	str	x8, [sp, #24]
  40bfd4:	ldur	x0, [x29, #-32]
  40bfd8:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40bfdc:	add	x1, x1, #0xe15
  40bfe0:	add	x2, sp, #0x20
  40bfe4:	bl	405330 <__isoc99_sscanf@plt>
  40bfe8:	cmp	w0, #0x1
  40bfec:	b.eq	40c010 <ll_addr_a2n@@Base+0x12c>  // b.none
  40bff0:	ldr	x8, [sp, #16]
  40bff4:	ldr	x0, [x8]
  40bff8:	ldur	x2, [x29, #-32]
  40bffc:	ldr	x1, [sp, #8]
  40c000:	bl	4053c0 <fprintf@plt>
  40c004:	mov	w9, #0xffffffff            	// #-1
  40c008:	stur	w9, [x29, #-4]
  40c00c:	b	40c090 <ll_addr_a2n@@Base+0x1ac>
  40c010:	ldr	w8, [sp, #32]
  40c014:	cmp	w8, #0x0
  40c018:	cset	w8, lt  // lt = tstop
  40c01c:	tbnz	w8, #0, 40c02c <ll_addr_a2n@@Base+0x148>
  40c020:	ldr	w8, [sp, #32]
  40c024:	cmp	w8, #0xff
  40c028:	b.le	40c04c <ll_addr_a2n@@Base+0x168>
  40c02c:	ldr	x8, [sp, #16]
  40c030:	ldr	x0, [x8]
  40c034:	ldur	x2, [x29, #-32]
  40c038:	ldr	x1, [sp, #8]
  40c03c:	bl	4053c0 <fprintf@plt>
  40c040:	mov	w9, #0xffffffff            	// #-1
  40c044:	stur	w9, [x29, #-4]
  40c048:	b	40c090 <ll_addr_a2n@@Base+0x1ac>
  40c04c:	ldr	w8, [sp, #32]
  40c050:	ldur	x9, [x29, #-16]
  40c054:	ldrsw	x10, [sp, #36]
  40c058:	add	x9, x9, x10
  40c05c:	strb	w8, [x9]
  40c060:	ldr	x9, [sp, #24]
  40c064:	cbnz	x9, 40c06c <ll_addr_a2n@@Base+0x188>
  40c068:	b	40c084 <ll_addr_a2n@@Base+0x1a0>
  40c06c:	ldr	x8, [sp, #24]
  40c070:	stur	x8, [x29, #-32]
  40c074:	ldr	w8, [sp, #36]
  40c078:	add	w8, w8, #0x1
  40c07c:	str	w8, [sp, #36]
  40c080:	b	40bf94 <ll_addr_a2n@@Base+0xb0>
  40c084:	ldr	w8, [sp, #36]
  40c088:	add	w8, w8, #0x1
  40c08c:	stur	w8, [x29, #-4]
  40c090:	ldur	w0, [x29, #-4]
  40c094:	ldr	x28, [sp, #352]
  40c098:	ldp	x29, x30, [sp, #336]
  40c09c:	add	sp, sp, #0x170
  40c0a0:	ret

000000000040c0a4 <new_json_obj@@Base>:
  40c0a4:	sub	sp, sp, #0x20
  40c0a8:	stp	x29, x30, [sp, #16]
  40c0ac:	add	x29, sp, #0x10
  40c0b0:	stur	w0, [x29, #-4]
  40c0b4:	ldur	w0, [x29, #-4]
  40c0b8:	mov	w8, #0x1                   	// #1
  40c0bc:	and	w1, w8, #0x1
  40c0c0:	bl	40c0d0 <new_json_obj@@Base+0x2c>
  40c0c4:	ldp	x29, x30, [sp, #16]
  40c0c8:	add	sp, sp, #0x20
  40c0cc:	ret
  40c0d0:	sub	sp, sp, #0x20
  40c0d4:	stp	x29, x30, [sp, #16]
  40c0d8:	add	x29, sp, #0x10
  40c0dc:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c0e0:	add	x8, x8, #0xdc0
  40c0e4:	mov	w9, #0x1                   	// #1
  40c0e8:	stur	w0, [x29, #-4]
  40c0ec:	and	w9, w1, w9
  40c0f0:	sturb	w9, [x29, #-5]
  40c0f4:	ldur	w9, [x29, #-4]
  40c0f8:	str	x8, [sp]
  40c0fc:	cbz	w9, 40c170 <new_json_obj@@Base+0xcc>
  40c100:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c104:	ldr	x8, [x8, #4016]
  40c108:	ldr	x0, [x8]
  40c10c:	bl	40d9f4 <jsonw_new@@Base>
  40c110:	ldr	x8, [sp]
  40c114:	str	x0, [x8]
  40c118:	ldr	x9, [x8]
  40c11c:	cbnz	x9, 40c134 <new_json_obj@@Base+0x90>
  40c120:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40c124:	add	x0, x0, #0xe37
  40c128:	bl	404ea0 <perror@plt>
  40c12c:	mov	w0, #0x1                   	// #1
  40c130:	bl	404e90 <exit@plt>
  40c134:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c138:	ldr	x8, [x8, #4056]
  40c13c:	ldr	w9, [x8]
  40c140:	cbz	w9, 40c158 <new_json_obj@@Base+0xb4>
  40c144:	ldr	x8, [sp]
  40c148:	ldr	x0, [x8]
  40c14c:	mov	w9, #0x1                   	// #1
  40c150:	and	w1, w9, #0x1
  40c154:	bl	40dae8 <jsonw_pretty@@Base>
  40c158:	ldurb	w8, [x29, #-5]
  40c15c:	tbnz	w8, #0, 40c164 <new_json_obj@@Base+0xc0>
  40c160:	b	40c170 <new_json_obj@@Base+0xcc>
  40c164:	ldr	x8, [sp]
  40c168:	ldr	x0, [x8]
  40c16c:	bl	40dfe8 <jsonw_start_array@@Base>
  40c170:	ldp	x29, x30, [sp, #16]
  40c174:	add	sp, sp, #0x20
  40c178:	ret

000000000040c17c <delete_json_obj@@Base>:
  40c17c:	stp	x29, x30, [sp, #-16]!
  40c180:	mov	x29, sp
  40c184:	mov	w8, #0x1                   	// #1
  40c188:	and	w0, w8, #0x1
  40c18c:	bl	40c198 <delete_json_obj@@Base+0x1c>
  40c190:	ldp	x29, x30, [sp], #16
  40c194:	ret
  40c198:	sub	sp, sp, #0x20
  40c19c:	stp	x29, x30, [sp, #16]
  40c1a0:	add	x29, sp, #0x10
  40c1a4:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c1a8:	add	x8, x8, #0xdc0
  40c1ac:	and	w9, w0, #0x1
  40c1b0:	sturb	w9, [x29, #-1]
  40c1b4:	ldr	x10, [x8]
  40c1b8:	str	x8, [sp]
  40c1bc:	cbz	x10, 40c1e0 <delete_json_obj@@Base+0x64>
  40c1c0:	ldurb	w8, [x29, #-1]
  40c1c4:	tbnz	w8, #0, 40c1cc <delete_json_obj@@Base+0x50>
  40c1c8:	b	40c1d8 <delete_json_obj@@Base+0x5c>
  40c1cc:	ldr	x8, [sp]
  40c1d0:	ldr	x0, [x8]
  40c1d4:	bl	40e030 <jsonw_end_array@@Base>
  40c1d8:	ldr	x0, [sp]
  40c1dc:	bl	40da54 <jsonw_destroy@@Base>
  40c1e0:	ldp	x29, x30, [sp, #16]
  40c1e4:	add	sp, sp, #0x20
  40c1e8:	ret

000000000040c1ec <new_json_obj_plain@@Base>:
  40c1ec:	sub	sp, sp, #0x20
  40c1f0:	stp	x29, x30, [sp, #16]
  40c1f4:	add	x29, sp, #0x10
  40c1f8:	stur	w0, [x29, #-4]
  40c1fc:	ldur	w0, [x29, #-4]
  40c200:	mov	w8, wzr
  40c204:	and	w1, w8, #0x1
  40c208:	bl	40c0d0 <new_json_obj@@Base+0x2c>
  40c20c:	ldp	x29, x30, [sp, #16]
  40c210:	add	sp, sp, #0x20
  40c214:	ret

000000000040c218 <delete_json_obj_plain@@Base>:
  40c218:	stp	x29, x30, [sp, #-16]!
  40c21c:	mov	x29, sp
  40c220:	mov	w8, wzr
  40c224:	and	w0, w8, #0x1
  40c228:	bl	40c198 <delete_json_obj@@Base+0x1c>
  40c22c:	ldp	x29, x30, [sp], #16
  40c230:	ret

000000000040c234 <is_json_context@@Base>:
  40c234:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c238:	add	x8, x8, #0xdc0
  40c23c:	ldr	x8, [x8]
  40c240:	cmp	x8, #0x0
  40c244:	cset	w9, ne  // ne = any
  40c248:	and	w0, w9, #0x1
  40c24c:	ret

000000000040c250 <get_json_writer@@Base>:
  40c250:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c254:	add	x8, x8, #0xdc0
  40c258:	ldr	x0, [x8]
  40c25c:	ret

000000000040c260 <open_json_object@@Base>:
  40c260:	sub	sp, sp, #0x20
  40c264:	stp	x29, x30, [sp, #16]
  40c268:	add	x29, sp, #0x10
  40c26c:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c270:	add	x8, x8, #0xdc0
  40c274:	str	x0, [sp, #8]
  40c278:	ldr	x9, [x8]
  40c27c:	str	x8, [sp]
  40c280:	cbz	x9, 40c2a8 <open_json_object@@Base+0x48>
  40c284:	ldr	x8, [sp, #8]
  40c288:	cbz	x8, 40c29c <open_json_object@@Base+0x3c>
  40c28c:	ldr	x8, [sp]
  40c290:	ldr	x0, [x8]
  40c294:	ldr	x1, [sp, #8]
  40c298:	bl	40db14 <jsonw_name@@Base>
  40c29c:	ldr	x8, [sp]
  40c2a0:	ldr	x0, [x8]
  40c2a4:	bl	40dea4 <jsonw_start_object@@Base>
  40c2a8:	ldp	x29, x30, [sp, #16]
  40c2ac:	add	sp, sp, #0x20
  40c2b0:	ret

000000000040c2b4 <close_json_object@@Base>:
  40c2b4:	stp	x29, x30, [sp, #-16]!
  40c2b8:	mov	x29, sp
  40c2bc:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c2c0:	add	x8, x8, #0xdc0
  40c2c4:	ldr	x8, [x8]
  40c2c8:	cbz	x8, 40c2dc <close_json_object@@Base+0x28>
  40c2cc:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c2d0:	add	x8, x8, #0xdc0
  40c2d4:	ldr	x0, [x8]
  40c2d8:	bl	40df28 <jsonw_end_object@@Base>
  40c2dc:	ldp	x29, x30, [sp], #16
  40c2e0:	ret

000000000040c2e4 <open_json_array@@Base>:
  40c2e4:	sub	sp, sp, #0x30
  40c2e8:	stp	x29, x30, [sp, #32]
  40c2ec:	add	x29, sp, #0x20
  40c2f0:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c2f4:	add	x8, x8, #0xdc0
  40c2f8:	stur	w0, [x29, #-4]
  40c2fc:	str	x1, [sp, #16]
  40c300:	ldur	w9, [x29, #-4]
  40c304:	and	w9, w9, #0x2
  40c308:	str	x8, [sp, #8]
  40c30c:	cbnz	w9, 40c31c <open_json_array@@Base+0x38>
  40c310:	ldur	w8, [x29, #-4]
  40c314:	and	w8, w8, #0x4
  40c318:	cbz	w8, 40c350 <open_json_array@@Base+0x6c>
  40c31c:	ldr	x8, [sp, #8]
  40c320:	ldr	x9, [x8]
  40c324:	cbz	x9, 40c350 <open_json_array@@Base+0x6c>
  40c328:	ldr	x8, [sp, #16]
  40c32c:	cbz	x8, 40c340 <open_json_array@@Base+0x5c>
  40c330:	ldr	x8, [sp, #8]
  40c334:	ldr	x0, [x8]
  40c338:	ldr	x1, [sp, #16]
  40c33c:	bl	40db14 <jsonw_name@@Base>
  40c340:	ldr	x8, [sp, #8]
  40c344:	ldr	x0, [x8]
  40c348:	bl	40dfe8 <jsonw_start_array@@Base>
  40c34c:	b	40c384 <open_json_array@@Base+0xa0>
  40c350:	ldr	x8, [sp, #8]
  40c354:	ldr	x9, [x8]
  40c358:	cbnz	x9, 40c384 <open_json_array@@Base+0xa0>
  40c35c:	ldur	w8, [x29, #-4]
  40c360:	and	w8, w8, #0x1
  40c364:	cbnz	w8, 40c374 <open_json_array@@Base+0x90>
  40c368:	ldur	w8, [x29, #-4]
  40c36c:	and	w8, w8, #0x4
  40c370:	cbz	w8, 40c384 <open_json_array@@Base+0xa0>
  40c374:	ldr	x1, [sp, #16]
  40c378:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40c37c:	add	x0, x0, #0xa04
  40c380:	bl	405370 <printf@plt>
  40c384:	ldp	x29, x30, [sp, #32]
  40c388:	add	sp, sp, #0x30
  40c38c:	ret

000000000040c390 <close_json_array@@Base>:
  40c390:	sub	sp, sp, #0x30
  40c394:	stp	x29, x30, [sp, #32]
  40c398:	add	x29, sp, #0x20
  40c39c:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c3a0:	add	x8, x8, #0xdc0
  40c3a4:	stur	w0, [x29, #-4]
  40c3a8:	str	x1, [sp, #16]
  40c3ac:	ldur	w9, [x29, #-4]
  40c3b0:	and	w9, w9, #0x2
  40c3b4:	str	x8, [sp, #8]
  40c3b8:	cbnz	w9, 40c3c8 <close_json_array@@Base+0x38>
  40c3bc:	ldur	w8, [x29, #-4]
  40c3c0:	and	w8, w8, #0x4
  40c3c4:	cbz	w8, 40c3e4 <close_json_array@@Base+0x54>
  40c3c8:	ldr	x8, [sp, #8]
  40c3cc:	ldr	x9, [x8]
  40c3d0:	cbz	x9, 40c3e4 <close_json_array@@Base+0x54>
  40c3d4:	ldr	x8, [sp, #8]
  40c3d8:	ldr	x0, [x8]
  40c3dc:	bl	40e030 <jsonw_end_array@@Base>
  40c3e0:	b	40c418 <close_json_array@@Base+0x88>
  40c3e4:	ldr	x8, [sp, #8]
  40c3e8:	ldr	x9, [x8]
  40c3ec:	cbnz	x9, 40c418 <close_json_array@@Base+0x88>
  40c3f0:	ldur	w8, [x29, #-4]
  40c3f4:	and	w8, w8, #0x1
  40c3f8:	cbnz	w8, 40c408 <close_json_array@@Base+0x78>
  40c3fc:	ldur	w8, [x29, #-4]
  40c400:	and	w8, w8, #0x4
  40c404:	cbz	w8, 40c418 <close_json_array@@Base+0x88>
  40c408:	ldr	x1, [sp, #16]
  40c40c:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40c410:	add	x0, x0, #0xa04
  40c414:	bl	405370 <printf@plt>
  40c418:	ldp	x29, x30, [sp, #32]
  40c41c:	add	sp, sp, #0x30
  40c420:	ret

000000000040c424 <print_color_int@@Base>:
  40c424:	sub	sp, sp, #0x40
  40c428:	stp	x29, x30, [sp, #48]
  40c42c:	add	x29, sp, #0x30
  40c430:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c434:	add	x8, x8, #0xdc0
  40c438:	stur	w0, [x29, #-4]
  40c43c:	stur	w1, [x29, #-8]
  40c440:	stur	x2, [x29, #-16]
  40c444:	str	x3, [sp, #24]
  40c448:	str	w4, [sp, #20]
  40c44c:	ldur	w9, [x29, #-4]
  40c450:	and	w9, w9, #0x2
  40c454:	str	x8, [sp, #8]
  40c458:	cbnz	w9, 40c468 <print_color_int@@Base+0x44>
  40c45c:	ldur	w8, [x29, #-4]
  40c460:	and	w8, w8, #0x4
  40c464:	cbz	w8, 40c4a8 <print_color_int@@Base+0x84>
  40c468:	ldr	x8, [sp, #8]
  40c46c:	ldr	x9, [x8]
  40c470:	cbz	x9, 40c4a8 <print_color_int@@Base+0x84>
  40c474:	ldur	x8, [x29, #-16]
  40c478:	cbnz	x8, 40c490 <print_color_int@@Base+0x6c>
  40c47c:	ldr	x8, [sp, #8]
  40c480:	ldr	x0, [x8]
  40c484:	ldr	w1, [sp, #20]
  40c488:	bl	40e300 <jsonw_int@@Base>
  40c48c:	b	40c4a4 <print_color_int@@Base+0x80>
  40c490:	ldr	x8, [sp, #8]
  40c494:	ldr	x0, [x8]
  40c498:	ldur	x1, [x29, #-16]
  40c49c:	ldr	w2, [sp, #20]
  40c4a0:	bl	40e5d4 <jsonw_int_field@@Base>
  40c4a4:	b	40c4e8 <print_color_int@@Base+0xc4>
  40c4a8:	ldr	x8, [sp, #8]
  40c4ac:	ldr	x9, [x8]
  40c4b0:	cbnz	x9, 40c4e8 <print_color_int@@Base+0xc4>
  40c4b4:	ldur	w8, [x29, #-4]
  40c4b8:	and	w8, w8, #0x1
  40c4bc:	cbnz	w8, 40c4cc <print_color_int@@Base+0xa8>
  40c4c0:	ldur	w8, [x29, #-4]
  40c4c4:	and	w8, w8, #0x4
  40c4c8:	cbz	w8, 40c4e8 <print_color_int@@Base+0xc4>
  40c4cc:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c4d0:	ldr	x8, [x8, #4016]
  40c4d4:	ldr	x0, [x8]
  40c4d8:	ldur	w1, [x29, #-8]
  40c4dc:	ldr	x2, [sp, #24]
  40c4e0:	ldr	w3, [sp, #20]
  40c4e4:	bl	40d3b4 <color_fprintf@@Base>
  40c4e8:	ldp	x29, x30, [sp, #48]
  40c4ec:	add	sp, sp, #0x40
  40c4f0:	ret

000000000040c4f4 <print_color_s64@@Base>:
  40c4f4:	sub	sp, sp, #0x40
  40c4f8:	stp	x29, x30, [sp, #48]
  40c4fc:	add	x29, sp, #0x30
  40c500:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c504:	add	x8, x8, #0xdc0
  40c508:	stur	w0, [x29, #-4]
  40c50c:	stur	w1, [x29, #-8]
  40c510:	stur	x2, [x29, #-16]
  40c514:	str	x3, [sp, #24]
  40c518:	str	x4, [sp, #16]
  40c51c:	ldur	w9, [x29, #-4]
  40c520:	and	w9, w9, #0x2
  40c524:	str	x8, [sp, #8]
  40c528:	cbnz	w9, 40c538 <print_color_s64@@Base+0x44>
  40c52c:	ldur	w8, [x29, #-4]
  40c530:	and	w8, w8, #0x4
  40c534:	cbz	w8, 40c578 <print_color_s64@@Base+0x84>
  40c538:	ldr	x8, [sp, #8]
  40c53c:	ldr	x9, [x8]
  40c540:	cbz	x9, 40c578 <print_color_s64@@Base+0x84>
  40c544:	ldur	x8, [x29, #-16]
  40c548:	cbnz	x8, 40c560 <print_color_s64@@Base+0x6c>
  40c54c:	ldr	x8, [sp, #8]
  40c550:	ldr	x0, [x8]
  40c554:	ldr	x1, [sp, #16]
  40c558:	bl	40e338 <jsonw_s64@@Base>
  40c55c:	b	40c574 <print_color_s64@@Base+0x80>
  40c560:	ldr	x8, [sp, #8]
  40c564:	ldr	x0, [x8]
  40c568:	ldur	x1, [x29, #-16]
  40c56c:	ldr	x2, [sp, #16]
  40c570:	bl	40e610 <jsonw_s64_field@@Base>
  40c574:	b	40c5b8 <print_color_s64@@Base+0xc4>
  40c578:	ldr	x8, [sp, #8]
  40c57c:	ldr	x9, [x8]
  40c580:	cbnz	x9, 40c5b8 <print_color_s64@@Base+0xc4>
  40c584:	ldur	w8, [x29, #-4]
  40c588:	and	w8, w8, #0x1
  40c58c:	cbnz	w8, 40c59c <print_color_s64@@Base+0xa8>
  40c590:	ldur	w8, [x29, #-4]
  40c594:	and	w8, w8, #0x4
  40c598:	cbz	w8, 40c5b8 <print_color_s64@@Base+0xc4>
  40c59c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c5a0:	ldr	x8, [x8, #4016]
  40c5a4:	ldr	x0, [x8]
  40c5a8:	ldur	w1, [x29, #-8]
  40c5ac:	ldr	x2, [sp, #24]
  40c5b0:	ldr	x3, [sp, #16]
  40c5b4:	bl	40d3b4 <color_fprintf@@Base>
  40c5b8:	ldp	x29, x30, [sp, #48]
  40c5bc:	add	sp, sp, #0x40
  40c5c0:	ret

000000000040c5c4 <print_color_hhu@@Base>:
  40c5c4:	sub	sp, sp, #0x40
  40c5c8:	stp	x29, x30, [sp, #48]
  40c5cc:	add	x29, sp, #0x30
  40c5d0:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c5d4:	add	x8, x8, #0xdc0
  40c5d8:	stur	w0, [x29, #-4]
  40c5dc:	stur	w1, [x29, #-8]
  40c5e0:	stur	x2, [x29, #-16]
  40c5e4:	str	x3, [sp, #24]
  40c5e8:	strb	w4, [sp, #23]
  40c5ec:	ldur	w9, [x29, #-4]
  40c5f0:	and	w9, w9, #0x2
  40c5f4:	str	x8, [sp, #8]
  40c5f8:	cbnz	w9, 40c608 <print_color_hhu@@Base+0x44>
  40c5fc:	ldur	w8, [x29, #-4]
  40c600:	and	w8, w8, #0x4
  40c604:	cbz	w8, 40c648 <print_color_hhu@@Base+0x84>
  40c608:	ldr	x8, [sp, #8]
  40c60c:	ldr	x9, [x8]
  40c610:	cbz	x9, 40c648 <print_color_hhu@@Base+0x84>
  40c614:	ldur	x8, [x29, #-16]
  40c618:	cbnz	x8, 40c630 <print_color_hhu@@Base+0x6c>
  40c61c:	ldr	x8, [sp, #8]
  40c620:	ldr	x0, [x8]
  40c624:	ldrb	w1, [sp, #23]
  40c628:	bl	40e178 <jsonw_hhu@@Base>
  40c62c:	b	40c644 <print_color_hhu@@Base+0x80>
  40c630:	ldr	x8, [sp, #8]
  40c634:	ldr	x0, [x8]
  40c638:	ldur	x1, [x29, #-16]
  40c63c:	ldrb	w2, [sp, #23]
  40c640:	bl	40e4e4 <jsonw_hhu_field@@Base>
  40c644:	b	40c688 <print_color_hhu@@Base+0xc4>
  40c648:	ldr	x8, [sp, #8]
  40c64c:	ldr	x9, [x8]
  40c650:	cbnz	x9, 40c688 <print_color_hhu@@Base+0xc4>
  40c654:	ldur	w8, [x29, #-4]
  40c658:	and	w8, w8, #0x1
  40c65c:	cbnz	w8, 40c66c <print_color_hhu@@Base+0xa8>
  40c660:	ldur	w8, [x29, #-4]
  40c664:	and	w8, w8, #0x4
  40c668:	cbz	w8, 40c688 <print_color_hhu@@Base+0xc4>
  40c66c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c670:	ldr	x8, [x8, #4016]
  40c674:	ldr	x0, [x8]
  40c678:	ldur	w1, [x29, #-8]
  40c67c:	ldr	x2, [sp, #24]
  40c680:	ldrb	w3, [sp, #23]
  40c684:	bl	40d3b4 <color_fprintf@@Base>
  40c688:	ldp	x29, x30, [sp, #48]
  40c68c:	add	sp, sp, #0x40
  40c690:	ret

000000000040c694 <print_color_hu@@Base>:
  40c694:	sub	sp, sp, #0x40
  40c698:	stp	x29, x30, [sp, #48]
  40c69c:	add	x29, sp, #0x30
  40c6a0:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c6a4:	add	x8, x8, #0xdc0
  40c6a8:	stur	w0, [x29, #-4]
  40c6ac:	stur	w1, [x29, #-8]
  40c6b0:	stur	x2, [x29, #-16]
  40c6b4:	str	x3, [sp, #24]
  40c6b8:	strh	w4, [sp, #22]
  40c6bc:	ldur	w9, [x29, #-4]
  40c6c0:	and	w9, w9, #0x2
  40c6c4:	str	x8, [sp, #8]
  40c6c8:	cbnz	w9, 40c6d8 <print_color_hu@@Base+0x44>
  40c6cc:	ldur	w8, [x29, #-4]
  40c6d0:	and	w8, w8, #0x4
  40c6d4:	cbz	w8, 40c718 <print_color_hu@@Base+0x84>
  40c6d8:	ldr	x8, [sp, #8]
  40c6dc:	ldr	x9, [x8]
  40c6e0:	cbz	x9, 40c718 <print_color_hu@@Base+0x84>
  40c6e4:	ldur	x8, [x29, #-16]
  40c6e8:	cbnz	x8, 40c700 <print_color_hu@@Base+0x6c>
  40c6ec:	ldr	x8, [sp, #8]
  40c6f0:	ldr	x0, [x8]
  40c6f4:	ldrh	w1, [sp, #22]
  40c6f8:	bl	40e1b0 <jsonw_hu@@Base>
  40c6fc:	b	40c714 <print_color_hu@@Base+0x80>
  40c700:	ldr	x8, [sp, #8]
  40c704:	ldr	x0, [x8]
  40c708:	ldur	x1, [x29, #-16]
  40c70c:	ldrh	w2, [sp, #22]
  40c710:	bl	40e520 <jsonw_hu_field@@Base>
  40c714:	b	40c758 <print_color_hu@@Base+0xc4>
  40c718:	ldr	x8, [sp, #8]
  40c71c:	ldr	x9, [x8]
  40c720:	cbnz	x9, 40c758 <print_color_hu@@Base+0xc4>
  40c724:	ldur	w8, [x29, #-4]
  40c728:	and	w8, w8, #0x1
  40c72c:	cbnz	w8, 40c73c <print_color_hu@@Base+0xa8>
  40c730:	ldur	w8, [x29, #-4]
  40c734:	and	w8, w8, #0x4
  40c738:	cbz	w8, 40c758 <print_color_hu@@Base+0xc4>
  40c73c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c740:	ldr	x8, [x8, #4016]
  40c744:	ldr	x0, [x8]
  40c748:	ldur	w1, [x29, #-8]
  40c74c:	ldr	x2, [sp, #24]
  40c750:	ldrh	w3, [sp, #22]
  40c754:	bl	40d3b4 <color_fprintf@@Base>
  40c758:	ldp	x29, x30, [sp, #48]
  40c75c:	add	sp, sp, #0x40
  40c760:	ret

000000000040c764 <print_color_uint@@Base>:
  40c764:	sub	sp, sp, #0x40
  40c768:	stp	x29, x30, [sp, #48]
  40c76c:	add	x29, sp, #0x30
  40c770:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c774:	add	x8, x8, #0xdc0
  40c778:	stur	w0, [x29, #-4]
  40c77c:	stur	w1, [x29, #-8]
  40c780:	stur	x2, [x29, #-16]
  40c784:	str	x3, [sp, #24]
  40c788:	str	w4, [sp, #20]
  40c78c:	ldur	w9, [x29, #-4]
  40c790:	and	w9, w9, #0x2
  40c794:	str	x8, [sp, #8]
  40c798:	cbnz	w9, 40c7a8 <print_color_uint@@Base+0x44>
  40c79c:	ldur	w8, [x29, #-4]
  40c7a0:	and	w8, w8, #0x4
  40c7a4:	cbz	w8, 40c7e8 <print_color_uint@@Base+0x84>
  40c7a8:	ldr	x8, [sp, #8]
  40c7ac:	ldr	x9, [x8]
  40c7b0:	cbz	x9, 40c7e8 <print_color_uint@@Base+0x84>
  40c7b4:	ldur	x8, [x29, #-16]
  40c7b8:	cbnz	x8, 40c7d0 <print_color_uint@@Base+0x6c>
  40c7bc:	ldr	x8, [sp, #8]
  40c7c0:	ldr	x0, [x8]
  40c7c4:	ldr	w1, [sp, #20]
  40c7c8:	bl	40e1e8 <jsonw_uint@@Base>
  40c7cc:	b	40c7e4 <print_color_uint@@Base+0x80>
  40c7d0:	ldr	x8, [sp, #8]
  40c7d4:	ldr	x0, [x8]
  40c7d8:	ldur	x1, [x29, #-16]
  40c7dc:	ldr	w2, [sp, #20]
  40c7e0:	bl	40e430 <jsonw_uint_field@@Base>
  40c7e4:	b	40c828 <print_color_uint@@Base+0xc4>
  40c7e8:	ldr	x8, [sp, #8]
  40c7ec:	ldr	x9, [x8]
  40c7f0:	cbnz	x9, 40c828 <print_color_uint@@Base+0xc4>
  40c7f4:	ldur	w8, [x29, #-4]
  40c7f8:	and	w8, w8, #0x1
  40c7fc:	cbnz	w8, 40c80c <print_color_uint@@Base+0xa8>
  40c800:	ldur	w8, [x29, #-4]
  40c804:	and	w8, w8, #0x4
  40c808:	cbz	w8, 40c828 <print_color_uint@@Base+0xc4>
  40c80c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c810:	ldr	x8, [x8, #4016]
  40c814:	ldr	x0, [x8]
  40c818:	ldur	w1, [x29, #-8]
  40c81c:	ldr	x2, [sp, #24]
  40c820:	ldr	w3, [sp, #20]
  40c824:	bl	40d3b4 <color_fprintf@@Base>
  40c828:	ldp	x29, x30, [sp, #48]
  40c82c:	add	sp, sp, #0x40
  40c830:	ret

000000000040c834 <print_color_u64@@Base>:
  40c834:	sub	sp, sp, #0x40
  40c838:	stp	x29, x30, [sp, #48]
  40c83c:	add	x29, sp, #0x30
  40c840:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c844:	add	x8, x8, #0xdc0
  40c848:	stur	w0, [x29, #-4]
  40c84c:	stur	w1, [x29, #-8]
  40c850:	stur	x2, [x29, #-16]
  40c854:	str	x3, [sp, #24]
  40c858:	str	x4, [sp, #16]
  40c85c:	ldur	w9, [x29, #-4]
  40c860:	and	w9, w9, #0x2
  40c864:	str	x8, [sp, #8]
  40c868:	cbnz	w9, 40c878 <print_color_u64@@Base+0x44>
  40c86c:	ldur	w8, [x29, #-4]
  40c870:	and	w8, w8, #0x4
  40c874:	cbz	w8, 40c8b8 <print_color_u64@@Base+0x84>
  40c878:	ldr	x8, [sp, #8]
  40c87c:	ldr	x9, [x8]
  40c880:	cbz	x9, 40c8b8 <print_color_u64@@Base+0x84>
  40c884:	ldur	x8, [x29, #-16]
  40c888:	cbnz	x8, 40c8a0 <print_color_u64@@Base+0x6c>
  40c88c:	ldr	x8, [sp, #8]
  40c890:	ldr	x0, [x8]
  40c894:	ldr	x1, [sp, #16]
  40c898:	bl	40e220 <jsonw_u64@@Base>
  40c89c:	b	40c8b4 <print_color_u64@@Base+0x80>
  40c8a0:	ldr	x8, [sp, #8]
  40c8a4:	ldr	x0, [x8]
  40c8a8:	ldur	x1, [x29, #-16]
  40c8ac:	ldr	x2, [sp, #16]
  40c8b0:	bl	40e46c <jsonw_u64_field@@Base>
  40c8b4:	b	40c8f8 <print_color_u64@@Base+0xc4>
  40c8b8:	ldr	x8, [sp, #8]
  40c8bc:	ldr	x9, [x8]
  40c8c0:	cbnz	x9, 40c8f8 <print_color_u64@@Base+0xc4>
  40c8c4:	ldur	w8, [x29, #-4]
  40c8c8:	and	w8, w8, #0x1
  40c8cc:	cbnz	w8, 40c8dc <print_color_u64@@Base+0xa8>
  40c8d0:	ldur	w8, [x29, #-4]
  40c8d4:	and	w8, w8, #0x4
  40c8d8:	cbz	w8, 40c8f8 <print_color_u64@@Base+0xc4>
  40c8dc:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c8e0:	ldr	x8, [x8, #4016]
  40c8e4:	ldr	x0, [x8]
  40c8e8:	ldur	w1, [x29, #-8]
  40c8ec:	ldr	x2, [sp, #24]
  40c8f0:	ldr	x3, [sp, #16]
  40c8f4:	bl	40d3b4 <color_fprintf@@Base>
  40c8f8:	ldp	x29, x30, [sp, #48]
  40c8fc:	add	sp, sp, #0x40
  40c900:	ret

000000000040c904 <print_color_luint@@Base>:
  40c904:	sub	sp, sp, #0x40
  40c908:	stp	x29, x30, [sp, #48]
  40c90c:	add	x29, sp, #0x30
  40c910:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c914:	add	x8, x8, #0xdc0
  40c918:	stur	w0, [x29, #-4]
  40c91c:	stur	w1, [x29, #-8]
  40c920:	stur	x2, [x29, #-16]
  40c924:	str	x3, [sp, #24]
  40c928:	str	x4, [sp, #16]
  40c92c:	ldur	w9, [x29, #-4]
  40c930:	and	w9, w9, #0x2
  40c934:	str	x8, [sp, #8]
  40c938:	cbnz	w9, 40c948 <print_color_luint@@Base+0x44>
  40c93c:	ldur	w8, [x29, #-4]
  40c940:	and	w8, w8, #0x4
  40c944:	cbz	w8, 40c988 <print_color_luint@@Base+0x84>
  40c948:	ldr	x8, [sp, #8]
  40c94c:	ldr	x9, [x8]
  40c950:	cbz	x9, 40c988 <print_color_luint@@Base+0x84>
  40c954:	ldur	x8, [x29, #-16]
  40c958:	cbnz	x8, 40c970 <print_color_luint@@Base+0x6c>
  40c95c:	ldr	x8, [sp, #8]
  40c960:	ldr	x0, [x8]
  40c964:	ldr	x1, [sp, #16]
  40c968:	bl	40e290 <jsonw_luint@@Base>
  40c96c:	b	40c984 <print_color_luint@@Base+0x80>
  40c970:	ldr	x8, [sp, #8]
  40c974:	ldr	x0, [x8]
  40c978:	ldur	x1, [x29, #-16]
  40c97c:	ldr	x2, [sp, #16]
  40c980:	bl	40e55c <jsonw_luint_field@@Base>
  40c984:	b	40c9c8 <print_color_luint@@Base+0xc4>
  40c988:	ldr	x8, [sp, #8]
  40c98c:	ldr	x9, [x8]
  40c990:	cbnz	x9, 40c9c8 <print_color_luint@@Base+0xc4>
  40c994:	ldur	w8, [x29, #-4]
  40c998:	and	w8, w8, #0x1
  40c99c:	cbnz	w8, 40c9ac <print_color_luint@@Base+0xa8>
  40c9a0:	ldur	w8, [x29, #-4]
  40c9a4:	and	w8, w8, #0x4
  40c9a8:	cbz	w8, 40c9c8 <print_color_luint@@Base+0xc4>
  40c9ac:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40c9b0:	ldr	x8, [x8, #4016]
  40c9b4:	ldr	x0, [x8]
  40c9b8:	ldur	w1, [x29, #-8]
  40c9bc:	ldr	x2, [sp, #24]
  40c9c0:	ldr	x3, [sp, #16]
  40c9c4:	bl	40d3b4 <color_fprintf@@Base>
  40c9c8:	ldp	x29, x30, [sp, #48]
  40c9cc:	add	sp, sp, #0x40
  40c9d0:	ret

000000000040c9d4 <print_color_lluint@@Base>:
  40c9d4:	sub	sp, sp, #0x40
  40c9d8:	stp	x29, x30, [sp, #48]
  40c9dc:	add	x29, sp, #0x30
  40c9e0:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40c9e4:	add	x8, x8, #0xdc0
  40c9e8:	stur	w0, [x29, #-4]
  40c9ec:	stur	w1, [x29, #-8]
  40c9f0:	stur	x2, [x29, #-16]
  40c9f4:	str	x3, [sp, #24]
  40c9f8:	str	x4, [sp, #16]
  40c9fc:	ldur	w9, [x29, #-4]
  40ca00:	and	w9, w9, #0x2
  40ca04:	str	x8, [sp, #8]
  40ca08:	cbnz	w9, 40ca18 <print_color_lluint@@Base+0x44>
  40ca0c:	ldur	w8, [x29, #-4]
  40ca10:	and	w8, w8, #0x4
  40ca14:	cbz	w8, 40ca58 <print_color_lluint@@Base+0x84>
  40ca18:	ldr	x8, [sp, #8]
  40ca1c:	ldr	x9, [x8]
  40ca20:	cbz	x9, 40ca58 <print_color_lluint@@Base+0x84>
  40ca24:	ldur	x8, [x29, #-16]
  40ca28:	cbnz	x8, 40ca40 <print_color_lluint@@Base+0x6c>
  40ca2c:	ldr	x8, [sp, #8]
  40ca30:	ldr	x0, [x8]
  40ca34:	ldr	x1, [sp, #16]
  40ca38:	bl	40e2c8 <jsonw_lluint@@Base>
  40ca3c:	b	40ca54 <print_color_lluint@@Base+0x80>
  40ca40:	ldr	x8, [sp, #8]
  40ca44:	ldr	x0, [x8]
  40ca48:	ldur	x1, [x29, #-16]
  40ca4c:	ldr	x2, [sp, #16]
  40ca50:	bl	40e598 <jsonw_lluint_field@@Base>
  40ca54:	b	40ca98 <print_color_lluint@@Base+0xc4>
  40ca58:	ldr	x8, [sp, #8]
  40ca5c:	ldr	x9, [x8]
  40ca60:	cbnz	x9, 40ca98 <print_color_lluint@@Base+0xc4>
  40ca64:	ldur	w8, [x29, #-4]
  40ca68:	and	w8, w8, #0x1
  40ca6c:	cbnz	w8, 40ca7c <print_color_lluint@@Base+0xa8>
  40ca70:	ldur	w8, [x29, #-4]
  40ca74:	and	w8, w8, #0x4
  40ca78:	cbz	w8, 40ca98 <print_color_lluint@@Base+0xc4>
  40ca7c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40ca80:	ldr	x8, [x8, #4016]
  40ca84:	ldr	x0, [x8]
  40ca88:	ldur	w1, [x29, #-8]
  40ca8c:	ldr	x2, [sp, #24]
  40ca90:	ldr	x3, [sp, #16]
  40ca94:	bl	40d3b4 <color_fprintf@@Base>
  40ca98:	ldp	x29, x30, [sp, #48]
  40ca9c:	add	sp, sp, #0x40
  40caa0:	ret

000000000040caa4 <print_color_float@@Base>:
  40caa4:	sub	sp, sp, #0x40
  40caa8:	stp	x29, x30, [sp, #48]
  40caac:	add	x29, sp, #0x30
  40cab0:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40cab4:	add	x8, x8, #0xdc0
  40cab8:	stur	w0, [x29, #-4]
  40cabc:	stur	w1, [x29, #-8]
  40cac0:	stur	x2, [x29, #-16]
  40cac4:	str	x3, [sp, #24]
  40cac8:	str	d0, [sp, #16]
  40cacc:	ldur	w9, [x29, #-4]
  40cad0:	and	w9, w9, #0x2
  40cad4:	str	x8, [sp, #8]
  40cad8:	cbnz	w9, 40cae8 <print_color_float@@Base+0x44>
  40cadc:	ldur	w8, [x29, #-4]
  40cae0:	and	w8, w8, #0x4
  40cae4:	cbz	w8, 40cb28 <print_color_float@@Base+0x84>
  40cae8:	ldr	x8, [sp, #8]
  40caec:	ldr	x9, [x8]
  40caf0:	cbz	x9, 40cb28 <print_color_float@@Base+0x84>
  40caf4:	ldur	x8, [x29, #-16]
  40caf8:	cbnz	x8, 40cb10 <print_color_float@@Base+0x6c>
  40cafc:	ldr	x8, [sp, #8]
  40cb00:	ldr	x0, [x8]
  40cb04:	ldr	d0, [sp, #16]
  40cb08:	bl	40e144 <jsonw_float@@Base>
  40cb0c:	b	40cb24 <print_color_float@@Base+0x80>
  40cb10:	ldr	x8, [sp, #8]
  40cb14:	ldr	x0, [x8]
  40cb18:	ldur	x1, [x29, #-16]
  40cb1c:	ldr	d0, [sp, #16]
  40cb20:	bl	40e3f4 <jsonw_float_field@@Base>
  40cb24:	b	40cb68 <print_color_float@@Base+0xc4>
  40cb28:	ldr	x8, [sp, #8]
  40cb2c:	ldr	x9, [x8]
  40cb30:	cbnz	x9, 40cb68 <print_color_float@@Base+0xc4>
  40cb34:	ldur	w8, [x29, #-4]
  40cb38:	and	w8, w8, #0x1
  40cb3c:	cbnz	w8, 40cb4c <print_color_float@@Base+0xa8>
  40cb40:	ldur	w8, [x29, #-4]
  40cb44:	and	w8, w8, #0x4
  40cb48:	cbz	w8, 40cb68 <print_color_float@@Base+0xc4>
  40cb4c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40cb50:	ldr	x8, [x8, #4016]
  40cb54:	ldr	x0, [x8]
  40cb58:	ldur	w1, [x29, #-8]
  40cb5c:	ldr	x2, [sp, #24]
  40cb60:	ldr	d0, [sp, #16]
  40cb64:	bl	40d3b4 <color_fprintf@@Base>
  40cb68:	ldp	x29, x30, [sp, #48]
  40cb6c:	add	sp, sp, #0x40
  40cb70:	ret

000000000040cb74 <print_uint_name_value@@Base>:
  40cb74:	sub	sp, sp, #0x70
  40cb78:	stp	x29, x30, [sp, #96]
  40cb7c:	add	x29, sp, #0x60
  40cb80:	mov	x8, #0x40                  	// #64
  40cb84:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40cb88:	add	x2, x2, #0xe18
  40cb8c:	mov	w9, #0x4                   	// #4
  40cb90:	add	x10, sp, #0x14
  40cb94:	stur	x0, [x29, #-8]
  40cb98:	stur	w1, [x29, #-12]
  40cb9c:	ldur	x3, [x29, #-8]
  40cba0:	mov	x0, x10
  40cba4:	mov	x1, x8
  40cba8:	str	w9, [sp, #16]
  40cbac:	str	x10, [sp, #8]
  40cbb0:	bl	404f90 <snprintf@plt>
  40cbb4:	ldur	x1, [x29, #-8]
  40cbb8:	ldur	w3, [x29, #-12]
  40cbbc:	ldr	w9, [sp, #16]
  40cbc0:	mov	w0, w9
  40cbc4:	ldr	x2, [sp, #8]
  40cbc8:	bl	40cbd8 <print_uint_name_value@@Base+0x64>
  40cbcc:	ldp	x29, x30, [sp, #96]
  40cbd0:	add	sp, sp, #0x70
  40cbd4:	ret
  40cbd8:	sub	sp, sp, #0x30
  40cbdc:	stp	x29, x30, [sp, #32]
  40cbe0:	add	x29, sp, #0x20
  40cbe4:	mov	w8, #0x6                   	// #6
  40cbe8:	stur	w0, [x29, #-4]
  40cbec:	str	x1, [sp, #16]
  40cbf0:	str	x2, [sp, #8]
  40cbf4:	str	w3, [sp, #4]
  40cbf8:	ldur	w0, [x29, #-4]
  40cbfc:	ldr	x2, [sp, #16]
  40cc00:	ldr	x3, [sp, #8]
  40cc04:	ldr	w4, [sp, #4]
  40cc08:	mov	w1, w8
  40cc0c:	bl	40c764 <print_color_uint@@Base>
  40cc10:	ldp	x29, x30, [sp, #32]
  40cc14:	add	sp, sp, #0x30
  40cc18:	ret

000000000040cc1c <print_string_name_value@@Base>:
  40cc1c:	sub	sp, sp, #0x70
  40cc20:	stp	x29, x30, [sp, #96]
  40cc24:	add	x29, sp, #0x60
  40cc28:	mov	x8, #0x40                  	// #64
  40cc2c:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40cc30:	add	x2, x2, #0xe1f
  40cc34:	mov	w9, #0x4                   	// #4
  40cc38:	add	x10, sp, #0x10
  40cc3c:	stur	x0, [x29, #-8]
  40cc40:	stur	x1, [x29, #-16]
  40cc44:	ldur	x3, [x29, #-8]
  40cc48:	mov	x0, x10
  40cc4c:	mov	x1, x8
  40cc50:	str	w9, [sp, #12]
  40cc54:	str	x10, [sp]
  40cc58:	bl	404f90 <snprintf@plt>
  40cc5c:	ldur	x1, [x29, #-8]
  40cc60:	ldur	x3, [x29, #-16]
  40cc64:	ldr	w9, [sp, #12]
  40cc68:	mov	w0, w9
  40cc6c:	ldr	x2, [sp]
  40cc70:	bl	40cc80 <print_string_name_value@@Base+0x64>
  40cc74:	ldp	x29, x30, [sp, #96]
  40cc78:	add	sp, sp, #0x70
  40cc7c:	ret
  40cc80:	sub	sp, sp, #0x30
  40cc84:	stp	x29, x30, [sp, #32]
  40cc88:	add	x29, sp, #0x20
  40cc8c:	mov	w8, #0x6                   	// #6
  40cc90:	stur	w0, [x29, #-4]
  40cc94:	str	x1, [sp, #16]
  40cc98:	str	x2, [sp, #8]
  40cc9c:	str	x3, [sp]
  40cca0:	ldur	w0, [x29, #-4]
  40cca4:	ldr	x2, [sp, #16]
  40cca8:	ldr	x3, [sp, #8]
  40ccac:	ldr	x4, [sp]
  40ccb0:	mov	w1, w8
  40ccb4:	bl	40ccc4 <print_color_string@@Base>
  40ccb8:	ldp	x29, x30, [sp, #32]
  40ccbc:	add	sp, sp, #0x30
  40ccc0:	ret

000000000040ccc4 <print_color_string@@Base>:
  40ccc4:	sub	sp, sp, #0x40
  40ccc8:	stp	x29, x30, [sp, #48]
  40cccc:	add	x29, sp, #0x30
  40ccd0:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40ccd4:	add	x8, x8, #0xdc0
  40ccd8:	stur	w0, [x29, #-4]
  40ccdc:	stur	w1, [x29, #-8]
  40cce0:	stur	x2, [x29, #-16]
  40cce4:	str	x3, [sp, #24]
  40cce8:	str	x4, [sp, #16]
  40ccec:	ldur	w9, [x29, #-4]
  40ccf0:	and	w9, w9, #0x2
  40ccf4:	str	x8, [sp, #8]
  40ccf8:	cbnz	w9, 40cd08 <print_color_string@@Base+0x44>
  40ccfc:	ldur	w8, [x29, #-4]
  40cd00:	and	w8, w8, #0x4
  40cd04:	cbz	w8, 40cd74 <print_color_string@@Base+0xb0>
  40cd08:	ldr	x8, [sp, #8]
  40cd0c:	ldr	x9, [x8]
  40cd10:	cbz	x9, 40cd74 <print_color_string@@Base+0xb0>
  40cd14:	ldur	x8, [x29, #-16]
  40cd18:	cbz	x8, 40cd38 <print_color_string@@Base+0x74>
  40cd1c:	ldr	x8, [sp, #16]
  40cd20:	cbnz	x8, 40cd38 <print_color_string@@Base+0x74>
  40cd24:	ldr	x8, [sp, #8]
  40cd28:	ldr	x0, [x8]
  40cd2c:	ldur	x1, [x29, #-16]
  40cd30:	bl	40db14 <jsonw_name@@Base>
  40cd34:	b	40cd70 <print_color_string@@Base+0xac>
  40cd38:	ldur	x8, [x29, #-16]
  40cd3c:	cbnz	x8, 40cd5c <print_color_string@@Base+0x98>
  40cd40:	ldr	x8, [sp, #16]
  40cd44:	cbz	x8, 40cd5c <print_color_string@@Base+0x98>
  40cd48:	ldr	x8, [sp, #8]
  40cd4c:	ldr	x0, [x8]
  40cd50:	ldr	x1, [sp, #16]
  40cd54:	bl	40e090 <jsonw_string@@Base>
  40cd58:	b	40cd70 <print_color_string@@Base+0xac>
  40cd5c:	ldr	x8, [sp, #8]
  40cd60:	ldr	x0, [x8]
  40cd64:	ldur	x1, [x29, #-16]
  40cd68:	ldr	x2, [sp, #16]
  40cd6c:	bl	40e370 <jsonw_string_field@@Base>
  40cd70:	b	40cdb4 <print_color_string@@Base+0xf0>
  40cd74:	ldr	x8, [sp, #8]
  40cd78:	ldr	x9, [x8]
  40cd7c:	cbnz	x9, 40cdb4 <print_color_string@@Base+0xf0>
  40cd80:	ldur	w8, [x29, #-4]
  40cd84:	and	w8, w8, #0x1
  40cd88:	cbnz	w8, 40cd98 <print_color_string@@Base+0xd4>
  40cd8c:	ldur	w8, [x29, #-4]
  40cd90:	and	w8, w8, #0x4
  40cd94:	cbz	w8, 40cdb4 <print_color_string@@Base+0xf0>
  40cd98:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40cd9c:	ldr	x8, [x8, #4016]
  40cda0:	ldr	x0, [x8]
  40cda4:	ldur	w1, [x29, #-8]
  40cda8:	ldr	x2, [sp, #24]
  40cdac:	ldr	x3, [sp, #16]
  40cdb0:	bl	40d3b4 <color_fprintf@@Base>
  40cdb4:	ldp	x29, x30, [sp, #48]
  40cdb8:	add	sp, sp, #0x40
  40cdbc:	ret

000000000040cdc0 <print_color_bool@@Base>:
  40cdc0:	sub	sp, sp, #0x40
  40cdc4:	stp	x29, x30, [sp, #48]
  40cdc8:	add	x29, sp, #0x30
  40cdcc:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40cdd0:	add	x8, x8, #0xdc0
  40cdd4:	mov	w9, #0x1                   	// #1
  40cdd8:	stur	w0, [x29, #-4]
  40cddc:	stur	w1, [x29, #-8]
  40cde0:	stur	x2, [x29, #-16]
  40cde4:	str	x3, [sp, #24]
  40cde8:	and	w9, w4, w9
  40cdec:	strb	w9, [sp, #23]
  40cdf0:	ldur	w9, [x29, #-4]
  40cdf4:	and	w9, w9, #0x2
  40cdf8:	str	x8, [sp, #8]
  40cdfc:	cbnz	w9, 40ce0c <print_color_bool@@Base+0x4c>
  40ce00:	ldur	w8, [x29, #-4]
  40ce04:	and	w8, w8, #0x4
  40ce08:	cbz	w8, 40ce54 <print_color_bool@@Base+0x94>
  40ce0c:	ldr	x8, [sp, #8]
  40ce10:	ldr	x9, [x8]
  40ce14:	cbz	x9, 40ce54 <print_color_bool@@Base+0x94>
  40ce18:	ldur	x8, [x29, #-16]
  40ce1c:	cbz	x8, 40ce3c <print_color_bool@@Base+0x7c>
  40ce20:	ldr	x8, [sp, #8]
  40ce24:	ldr	x0, [x8]
  40ce28:	ldur	x1, [x29, #-16]
  40ce2c:	ldrb	w9, [sp, #23]
  40ce30:	and	w2, w9, #0x1
  40ce34:	bl	40e3ac <jsonw_bool_field@@Base>
  40ce38:	b	40ce50 <print_color_bool@@Base+0x90>
  40ce3c:	ldr	x8, [sp, #8]
  40ce40:	ldr	x0, [x8]
  40ce44:	ldrb	w9, [sp, #23]
  40ce48:	and	w1, w9, #0x1
  40ce4c:	bl	40e0c4 <jsonw_bool@@Base>
  40ce50:	b	40ceac <print_color_bool@@Base+0xec>
  40ce54:	ldr	x8, [sp, #8]
  40ce58:	ldr	x9, [x8]
  40ce5c:	cbnz	x9, 40ceac <print_color_bool@@Base+0xec>
  40ce60:	ldur	w8, [x29, #-4]
  40ce64:	and	w8, w8, #0x1
  40ce68:	cbnz	w8, 40ce78 <print_color_bool@@Base+0xb8>
  40ce6c:	ldur	w8, [x29, #-4]
  40ce70:	and	w8, w8, #0x4
  40ce74:	cbz	w8, 40ceac <print_color_bool@@Base+0xec>
  40ce78:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40ce7c:	ldr	x8, [x8, #4016]
  40ce80:	ldr	x0, [x8]
  40ce84:	ldur	w1, [x29, #-8]
  40ce88:	ldr	x2, [sp, #24]
  40ce8c:	ldrb	w9, [sp, #23]
  40ce90:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40ce94:	add	x8, x8, #0xe2b
  40ce98:	adrp	x10, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40ce9c:	add	x10, x10, #0xe26
  40cea0:	tst	w9, #0x1
  40cea4:	csel	x3, x10, x8, ne  // ne = any
  40cea8:	bl	40d3b4 <color_fprintf@@Base>
  40ceac:	ldp	x29, x30, [sp, #48]
  40ceb0:	add	sp, sp, #0x40
  40ceb4:	ret

000000000040ceb8 <print_color_0xhex@@Base>:
  40ceb8:	sub	sp, sp, #0x80
  40cebc:	stp	x29, x30, [sp, #112]
  40cec0:	add	x29, sp, #0x70
  40cec4:	stur	w0, [x29, #-4]
  40cec8:	stur	w1, [x29, #-8]
  40cecc:	stur	x2, [x29, #-16]
  40ced0:	stur	x3, [x29, #-24]
  40ced4:	stur	x4, [x29, #-32]
  40ced8:	ldur	w8, [x29, #-4]
  40cedc:	and	w8, w8, #0x2
  40cee0:	cbnz	w8, 40cef0 <print_color_0xhex@@Base+0x38>
  40cee4:	ldur	w8, [x29, #-4]
  40cee8:	and	w8, w8, #0x4
  40ceec:	cbz	w8, 40cf40 <print_color_0xhex@@Base+0x88>
  40cef0:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40cef4:	add	x8, x8, #0xdc0
  40cef8:	ldr	x8, [x8]
  40cefc:	cbz	x8, 40cf40 <print_color_0xhex@@Base+0x88>
  40cf00:	ldur	x3, [x29, #-32]
  40cf04:	add	x8, sp, #0x10
  40cf08:	mov	x0, x8
  40cf0c:	mov	x1, #0x40                  	// #64
  40cf10:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40cf14:	add	x2, x2, #0xe31
  40cf18:	str	x8, [sp, #8]
  40cf1c:	bl	404f90 <snprintf@plt>
  40cf20:	ldur	x1, [x29, #-16]
  40cf24:	mov	w9, #0x2                   	// #2
  40cf28:	mov	w0, w9
  40cf2c:	mov	x8, xzr
  40cf30:	mov	x2, x8
  40cf34:	ldr	x3, [sp, #8]
  40cf38:	bl	40cc80 <print_string_name_value@@Base+0x64>
  40cf3c:	b	40cf84 <print_color_0xhex@@Base+0xcc>
  40cf40:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40cf44:	add	x8, x8, #0xdc0
  40cf48:	ldr	x8, [x8]
  40cf4c:	cbnz	x8, 40cf84 <print_color_0xhex@@Base+0xcc>
  40cf50:	ldur	w8, [x29, #-4]
  40cf54:	and	w8, w8, #0x1
  40cf58:	cbnz	w8, 40cf68 <print_color_0xhex@@Base+0xb0>
  40cf5c:	ldur	w8, [x29, #-4]
  40cf60:	and	w8, w8, #0x4
  40cf64:	cbz	w8, 40cf84 <print_color_0xhex@@Base+0xcc>
  40cf68:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40cf6c:	ldr	x8, [x8, #4016]
  40cf70:	ldr	x0, [x8]
  40cf74:	ldur	w1, [x29, #-8]
  40cf78:	ldur	x2, [x29, #-24]
  40cf7c:	ldur	x3, [x29, #-32]
  40cf80:	bl	40d3b4 <color_fprintf@@Base>
  40cf84:	ldp	x29, x30, [sp, #112]
  40cf88:	add	sp, sp, #0x80
  40cf8c:	ret

000000000040cf90 <print_color_hex@@Base>:
  40cf90:	sub	sp, sp, #0x80
  40cf94:	stp	x29, x30, [sp, #112]
  40cf98:	add	x29, sp, #0x70
  40cf9c:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40cfa0:	add	x8, x8, #0xdc0
  40cfa4:	stur	w0, [x29, #-4]
  40cfa8:	stur	w1, [x29, #-8]
  40cfac:	stur	x2, [x29, #-16]
  40cfb0:	stur	x3, [x29, #-24]
  40cfb4:	stur	w4, [x29, #-28]
  40cfb8:	ldur	w9, [x29, #-4]
  40cfbc:	and	w9, w9, #0x2
  40cfc0:	str	x8, [sp, #8]
  40cfc4:	cbnz	w9, 40cfd4 <print_color_hex@@Base+0x44>
  40cfc8:	ldur	w8, [x29, #-4]
  40cfcc:	and	w8, w8, #0x4
  40cfd0:	cbz	w8, 40d02c <print_color_hex@@Base+0x9c>
  40cfd4:	ldr	x8, [sp, #8]
  40cfd8:	ldr	x9, [x8]
  40cfdc:	cbz	x9, 40d02c <print_color_hex@@Base+0x9c>
  40cfe0:	ldur	w3, [x29, #-28]
  40cfe4:	add	x0, sp, #0x14
  40cfe8:	mov	x1, #0x40                  	// #64
  40cfec:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40cff0:	add	x2, x2, #0xe15
  40cff4:	bl	404f90 <snprintf@plt>
  40cff8:	ldur	x8, [x29, #-16]
  40cffc:	cbz	x8, 40d018 <print_color_hex@@Base+0x88>
  40d000:	ldr	x8, [sp, #8]
  40d004:	ldr	x0, [x8]
  40d008:	ldur	x1, [x29, #-16]
  40d00c:	add	x2, sp, #0x14
  40d010:	bl	40e370 <jsonw_string_field@@Base>
  40d014:	b	40d028 <print_color_hex@@Base+0x98>
  40d018:	ldr	x8, [sp, #8]
  40d01c:	ldr	x0, [x8]
  40d020:	add	x1, sp, #0x14
  40d024:	bl	40e090 <jsonw_string@@Base>
  40d028:	b	40d06c <print_color_hex@@Base+0xdc>
  40d02c:	ldr	x8, [sp, #8]
  40d030:	ldr	x9, [x8]
  40d034:	cbnz	x9, 40d06c <print_color_hex@@Base+0xdc>
  40d038:	ldur	w8, [x29, #-4]
  40d03c:	and	w8, w8, #0x1
  40d040:	cbnz	w8, 40d050 <print_color_hex@@Base+0xc0>
  40d044:	ldur	w8, [x29, #-4]
  40d048:	and	w8, w8, #0x4
  40d04c:	cbz	w8, 40d06c <print_color_hex@@Base+0xdc>
  40d050:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40d054:	ldr	x8, [x8, #4016]
  40d058:	ldr	x0, [x8]
  40d05c:	ldur	w1, [x29, #-8]
  40d060:	ldur	x2, [x29, #-24]
  40d064:	ldur	w3, [x29, #-28]
  40d068:	bl	40d3b4 <color_fprintf@@Base>
  40d06c:	ldp	x29, x30, [sp, #112]
  40d070:	add	sp, sp, #0x80
  40d074:	ret

000000000040d078 <print_color_null@@Base>:
  40d078:	sub	sp, sp, #0x40
  40d07c:	stp	x29, x30, [sp, #48]
  40d080:	add	x29, sp, #0x30
  40d084:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40d088:	add	x8, x8, #0xdc0
  40d08c:	stur	w0, [x29, #-4]
  40d090:	stur	w1, [x29, #-8]
  40d094:	stur	x2, [x29, #-16]
  40d098:	str	x3, [sp, #24]
  40d09c:	str	x4, [sp, #16]
  40d0a0:	ldur	w9, [x29, #-4]
  40d0a4:	and	w9, w9, #0x2
  40d0a8:	str	x8, [sp, #8]
  40d0ac:	cbnz	w9, 40d0bc <print_color_null@@Base+0x44>
  40d0b0:	ldur	w8, [x29, #-4]
  40d0b4:	and	w8, w8, #0x4
  40d0b8:	cbz	w8, 40d0f4 <print_color_null@@Base+0x7c>
  40d0bc:	ldr	x8, [sp, #8]
  40d0c0:	ldr	x9, [x8]
  40d0c4:	cbz	x9, 40d0f4 <print_color_null@@Base+0x7c>
  40d0c8:	ldur	x8, [x29, #-16]
  40d0cc:	cbz	x8, 40d0e4 <print_color_null@@Base+0x6c>
  40d0d0:	ldr	x8, [sp, #8]
  40d0d4:	ldr	x0, [x8]
  40d0d8:	ldur	x1, [x29, #-16]
  40d0dc:	bl	40e64c <jsonw_null_field@@Base>
  40d0e0:	b	40d0f0 <print_color_null@@Base+0x78>
  40d0e4:	ldr	x8, [sp, #8]
  40d0e8:	ldr	x0, [x8]
  40d0ec:	bl	40e118 <jsonw_null@@Base>
  40d0f0:	b	40d134 <print_color_null@@Base+0xbc>
  40d0f4:	ldr	x8, [sp, #8]
  40d0f8:	ldr	x9, [x8]
  40d0fc:	cbnz	x9, 40d134 <print_color_null@@Base+0xbc>
  40d100:	ldur	w8, [x29, #-4]
  40d104:	and	w8, w8, #0x1
  40d108:	cbnz	w8, 40d118 <print_color_null@@Base+0xa0>
  40d10c:	ldur	w8, [x29, #-4]
  40d110:	and	w8, w8, #0x4
  40d114:	cbz	w8, 40d134 <print_color_null@@Base+0xbc>
  40d118:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40d11c:	ldr	x8, [x8, #4016]
  40d120:	ldr	x0, [x8]
  40d124:	ldur	w1, [x29, #-8]
  40d128:	ldr	x2, [sp, #24]
  40d12c:	ldr	x3, [sp, #16]
  40d130:	bl	40d3b4 <color_fprintf@@Base>
  40d134:	ldp	x29, x30, [sp, #48]
  40d138:	add	sp, sp, #0x40
  40d13c:	ret

000000000040d140 <print_nl@@Base>:
  40d140:	stp	x29, x30, [sp, #-16]!
  40d144:	mov	x29, sp
  40d148:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40d14c:	add	x8, x8, #0xdc0
  40d150:	ldr	x8, [x8]
  40d154:	cbnz	x8, 40d170 <print_nl@@Base+0x30>
  40d158:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40d15c:	ldr	x8, [x8, #4048]
  40d160:	ldr	x1, [x8]
  40d164:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d168:	add	x0, x0, #0xa04
  40d16c:	bl	405370 <printf@plt>
  40d170:	ldp	x29, x30, [sp], #16
  40d174:	ret

000000000040d178 <check_enable_color@@Base>:
  40d178:	sub	sp, sp, #0x20
  40d17c:	stp	x29, x30, [sp, #16]
  40d180:	add	x29, sp, #0x10
  40d184:	str	w0, [sp, #8]
  40d188:	str	w1, [sp, #4]
  40d18c:	ldr	w8, [sp, #4]
  40d190:	cbnz	w8, 40d19c <check_enable_color@@Base+0x24>
  40d194:	ldr	w8, [sp, #8]
  40d198:	cbnz	w8, 40d1ac <check_enable_color@@Base+0x34>
  40d19c:	mov	w8, wzr
  40d1a0:	and	w8, w8, #0x1
  40d1a4:	sturb	w8, [x29, #-1]
  40d1a8:	b	40d1f0 <check_enable_color@@Base+0x78>
  40d1ac:	ldr	w8, [sp, #8]
  40d1b0:	cmp	w8, #0x2
  40d1b4:	b.eq	40d1d0 <check_enable_color@@Base+0x58>  // b.none
  40d1b8:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40d1bc:	ldr	x8, [x8, #4016]
  40d1c0:	ldr	x0, [x8]
  40d1c4:	bl	404fa0 <fileno@plt>
  40d1c8:	bl	4052c0 <isatty@plt>
  40d1cc:	cbz	w0, 40d1e4 <check_enable_color@@Base+0x6c>
  40d1d0:	bl	40d204 <check_enable_color@@Base+0x8c>
  40d1d4:	mov	w8, #0x1                   	// #1
  40d1d8:	and	w8, w8, #0x1
  40d1dc:	sturb	w8, [x29, #-1]
  40d1e0:	b	40d1f0 <check_enable_color@@Base+0x78>
  40d1e4:	mov	w8, wzr
  40d1e8:	and	w8, w8, #0x1
  40d1ec:	sturb	w8, [x29, #-1]
  40d1f0:	ldurb	w8, [x29, #-1]
  40d1f4:	and	w0, w8, #0x1
  40d1f8:	ldp	x29, x30, [sp, #16]
  40d1fc:	add	sp, sp, #0x20
  40d200:	ret
  40d204:	stp	x29, x30, [sp, #-16]!
  40d208:	mov	x29, sp
  40d20c:	mov	w8, #0x1                   	// #1
  40d210:	adrp	x9, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40d214:	add	x9, x9, #0xdc8
  40d218:	str	w8, [x9]
  40d21c:	bl	40d628 <oper_state_color@@Base+0x60>
  40d220:	ldp	x29, x30, [sp], #16
  40d224:	ret

000000000040d228 <matches_color@@Base>:
  40d228:	stp	x29, x30, [sp, #-16]!
  40d22c:	mov	x29, sp
  40d230:	sub	sp, sp, #0x50
  40d234:	stur	x0, [x29, #-16]
  40d238:	stur	x1, [x29, #-24]
  40d23c:	ldur	x8, [x29, #-24]
  40d240:	cbnz	x8, 40d254 <matches_color@@Base+0x2c>
  40d244:	mov	w8, wzr
  40d248:	and	w8, w8, #0x1
  40d24c:	sturb	w8, [x29, #-1]
  40d250:	b	40d3a0 <matches_color@@Base+0x178>
  40d254:	ldur	x8, [x29, #-16]
  40d258:	stur	x8, [x29, #-48]
  40d25c:	ldur	x0, [x29, #-48]
  40d260:	bl	404e70 <strlen@plt>
  40d264:	mov	x8, #0x1                   	// #1
  40d268:	add	x9, x0, #0x1
  40d26c:	stur	x9, [x29, #-56]
  40d270:	ldur	x9, [x29, #-56]
  40d274:	mul	x8, x9, x8
  40d278:	add	x8, x8, #0xf
  40d27c:	and	x8, x8, #0xfffffffffffffff0
  40d280:	mov	x9, sp
  40d284:	subs	x8, x9, x8
  40d288:	mov	sp, x8
  40d28c:	stur	x8, [x29, #-64]
  40d290:	ldur	x8, [x29, #-64]
  40d294:	ldur	x1, [x29, #-48]
  40d298:	ldur	x2, [x29, #-56]
  40d29c:	mov	x0, x8
  40d2a0:	stur	x8, [x29, #-80]
  40d2a4:	bl	404e40 <memcpy@plt>
  40d2a8:	ldur	x8, [x29, #-80]
  40d2ac:	stur	x8, [x29, #-72]
  40d2b0:	ldur	x9, [x29, #-72]
  40d2b4:	stur	x9, [x29, #-32]
  40d2b8:	ldur	x0, [x29, #-32]
  40d2bc:	mov	w1, #0x3d                  	// #61
  40d2c0:	bl	405310 <strchrnul@plt>
  40d2c4:	stur	x0, [x29, #-40]
  40d2c8:	ldur	x8, [x29, #-40]
  40d2cc:	ldrb	w10, [x8]
  40d2d0:	cbz	w10, 40d2e8 <matches_color@@Base+0xc0>
  40d2d4:	ldur	x8, [x29, #-40]
  40d2d8:	add	x9, x8, #0x1
  40d2dc:	stur	x9, [x29, #-40]
  40d2e0:	mov	w10, #0x0                   	// #0
  40d2e4:	strb	w10, [x8]
  40d2e8:	ldur	x0, [x29, #-32]
  40d2ec:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d2f0:	add	x1, x1, #0xe43
  40d2f4:	bl	4087fc <matches@@Base>
  40d2f8:	tbnz	w0, #0, 40d300 <matches_color@@Base+0xd8>
  40d2fc:	b	40d310 <matches_color@@Base+0xe8>
  40d300:	mov	w8, wzr
  40d304:	and	w8, w8, #0x1
  40d308:	sturb	w8, [x29, #-1]
  40d30c:	b	40d3a0 <matches_color@@Base+0x178>
  40d310:	ldur	x8, [x29, #-40]
  40d314:	ldrb	w9, [x8]
  40d318:	cbz	w9, 40d330 <matches_color@@Base+0x108>
  40d31c:	ldur	x0, [x29, #-40]
  40d320:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d324:	add	x1, x1, #0xe4a
  40d328:	bl	405190 <strcmp@plt>
  40d32c:	cbnz	w0, 40d340 <matches_color@@Base+0x118>
  40d330:	ldur	x8, [x29, #-24]
  40d334:	mov	w9, #0x2                   	// #2
  40d338:	str	w9, [x8]
  40d33c:	b	40d394 <matches_color@@Base+0x16c>
  40d340:	ldur	x0, [x29, #-40]
  40d344:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d348:	add	x1, x1, #0xe51
  40d34c:	bl	405190 <strcmp@plt>
  40d350:	cbnz	w0, 40d364 <matches_color@@Base+0x13c>
  40d354:	ldur	x8, [x29, #-24]
  40d358:	mov	w9, #0x1                   	// #1
  40d35c:	str	w9, [x8]
  40d360:	b	40d394 <matches_color@@Base+0x16c>
  40d364:	ldur	x0, [x29, #-40]
  40d368:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d36c:	add	x1, x1, #0xe56
  40d370:	bl	405190 <strcmp@plt>
  40d374:	cbnz	w0, 40d384 <matches_color@@Base+0x15c>
  40d378:	ldur	x8, [x29, #-24]
  40d37c:	str	wzr, [x8]
  40d380:	b	40d394 <matches_color@@Base+0x16c>
  40d384:	mov	w8, wzr
  40d388:	and	w8, w8, #0x1
  40d38c:	sturb	w8, [x29, #-1]
  40d390:	b	40d3a0 <matches_color@@Base+0x178>
  40d394:	mov	w8, #0x1                   	// #1
  40d398:	and	w8, w8, #0x1
  40d39c:	sturb	w8, [x29, #-1]
  40d3a0:	ldurb	w8, [x29, #-1]
  40d3a4:	and	w0, w8, #0x1
  40d3a8:	mov	sp, x29
  40d3ac:	ldp	x29, x30, [sp], #16
  40d3b0:	ret

000000000040d3b4 <color_fprintf@@Base>:
  40d3b4:	sub	sp, sp, #0x170
  40d3b8:	stp	x29, x30, [sp, #336]
  40d3bc:	str	x28, [sp, #352]
  40d3c0:	add	x29, sp, #0x150
  40d3c4:	str	q7, [sp, #144]
  40d3c8:	str	q6, [sp, #128]
  40d3cc:	str	q5, [sp, #112]
  40d3d0:	str	q4, [sp, #96]
  40d3d4:	str	q3, [sp, #80]
  40d3d8:	str	q2, [sp, #64]
  40d3dc:	str	q1, [sp, #48]
  40d3e0:	str	q0, [sp, #32]
  40d3e4:	str	x7, [sp, #200]
  40d3e8:	str	x6, [sp, #192]
  40d3ec:	str	x5, [sp, #184]
  40d3f0:	str	x4, [sp, #176]
  40d3f4:	str	x3, [sp, #168]
  40d3f8:	stur	x0, [x29, #-8]
  40d3fc:	stur	w1, [x29, #-12]
  40d400:	stur	x2, [x29, #-24]
  40d404:	mov	w8, wzr
  40d408:	stur	w8, [x29, #-28]
  40d40c:	mov	w8, #0xffffff80            	// #-128
  40d410:	stur	w8, [x29, #-36]
  40d414:	mov	w8, #0xffffffd8            	// #-40
  40d418:	stur	w8, [x29, #-40]
  40d41c:	add	x9, sp, #0x20
  40d420:	add	x9, x9, #0x80
  40d424:	stur	x9, [x29, #-48]
  40d428:	add	x9, sp, #0xa8
  40d42c:	add	x9, x9, #0x28
  40d430:	stur	x9, [x29, #-56]
  40d434:	add	x9, x29, #0x20
  40d438:	stur	x9, [x29, #-64]
  40d43c:	adrp	x9, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40d440:	ldr	w8, [x9, #3528]
  40d444:	cbz	w8, 40d45c <color_fprintf@@Base+0xa8>
  40d448:	b	40d44c <color_fprintf@@Base+0x98>
  40d44c:	ldur	w8, [x29, #-12]
  40d450:	subs	w8, w8, #0x6
  40d454:	b.ne	40d484 <color_fprintf@@Base+0xd0>  // b.any
  40d458:	b	40d45c <color_fprintf@@Base+0xa8>
  40d45c:	ldur	x0, [x29, #-8]
  40d460:	ldur	x1, [x29, #-24]
  40d464:	ldur	q0, [x29, #-64]
  40d468:	ldur	q1, [x29, #-48]
  40d46c:	stur	q1, [x29, #-80]
  40d470:	stur	q0, [x29, #-96]
  40d474:	sub	x2, x29, #0x60
  40d478:	bl	405360 <vfprintf@plt>
  40d47c:	stur	w0, [x29, #-28]
  40d480:	b	40d55c <color_fprintf@@Base+0x1a8>
  40d484:	ldur	x8, [x29, #-8]
  40d488:	adrp	x9, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40d48c:	ldr	w10, [x9, #3532]
  40d490:	str	x8, [sp, #24]
  40d494:	cbz	w10, 40d4b8 <color_fprintf@@Base+0x104>
  40d498:	b	40d49c <color_fprintf@@Base+0xe8>
  40d49c:	ldur	w8, [x29, #-12]
  40d4a0:	mov	w9, w8
  40d4a4:	adrp	x10, 424000 <memcpy@GLIBC_2.17>
  40d4a8:	add	x10, x10, #0x320
  40d4ac:	ldr	w8, [x10, x9, lsl #2]
  40d4b0:	str	w8, [sp, #20]
  40d4b4:	b	40d4d4 <color_fprintf@@Base+0x120>
  40d4b8:	ldur	w8, [x29, #-12]
  40d4bc:	mov	w9, w8
  40d4c0:	adrp	x10, 424000 <memcpy@GLIBC_2.17>
  40d4c4:	add	x10, x10, #0x33c
  40d4c8:	ldr	w8, [x10, x9, lsl #2]
  40d4cc:	str	w8, [sp, #20]
  40d4d0:	b	40d4d4 <color_fprintf@@Base+0x120>
  40d4d4:	ldr	w8, [sp, #20]
  40d4d8:	adrp	x9, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40d4dc:	add	x9, x9, #0xd00
  40d4e0:	ldr	x2, [x9, w8, uxtw #3]
  40d4e4:	adrp	x10, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d4e8:	add	x10, x10, #0xa04
  40d4ec:	ldr	x0, [sp, #24]
  40d4f0:	mov	x1, x10
  40d4f4:	str	x9, [sp, #8]
  40d4f8:	str	x10, [sp]
  40d4fc:	bl	4053c0 <fprintf@plt>
  40d500:	ldur	w8, [x29, #-28]
  40d504:	add	w8, w8, w0
  40d508:	stur	w8, [x29, #-28]
  40d50c:	ldur	x0, [x29, #-8]
  40d510:	ldur	x1, [x29, #-24]
  40d514:	ldur	q0, [x29, #-64]
  40d518:	ldur	q1, [x29, #-48]
  40d51c:	stur	q1, [x29, #-112]
  40d520:	stur	q0, [x29, #-128]
  40d524:	sub	x2, x29, #0x80
  40d528:	bl	405360 <vfprintf@plt>
  40d52c:	ldur	w8, [x29, #-28]
  40d530:	add	w8, w8, w0
  40d534:	stur	w8, [x29, #-28]
  40d538:	ldur	x0, [x29, #-8]
  40d53c:	ldr	x9, [sp, #8]
  40d540:	ldr	x2, [x9, #112]
  40d544:	ldr	x1, [sp]
  40d548:	bl	4053c0 <fprintf@plt>
  40d54c:	ldur	w8, [x29, #-28]
  40d550:	add	w8, w8, w0
  40d554:	stur	w8, [x29, #-28]
  40d558:	b	40d55c <color_fprintf@@Base+0x1a8>
  40d55c:	ldur	w0, [x29, #-28]
  40d560:	ldr	x28, [sp, #352]
  40d564:	ldp	x29, x30, [sp, #336]
  40d568:	add	sp, sp, #0x170
  40d56c:	ret

000000000040d570 <ifa_family_color@@Base>:
  40d570:	sub	sp, sp, #0x10
  40d574:	strb	w0, [sp, #11]
  40d578:	ldrb	w8, [sp, #11]
  40d57c:	cmp	w8, #0x2
  40d580:	str	w8, [sp, #4]
  40d584:	b.eq	40d59c <ifa_family_color@@Base+0x2c>  // b.none
  40d588:	b	40d58c <ifa_family_color@@Base+0x1c>
  40d58c:	ldr	w8, [sp, #4]
  40d590:	cmp	w8, #0xa
  40d594:	b.eq	40d5a8 <ifa_family_color@@Base+0x38>  // b.none
  40d598:	b	40d5b4 <ifa_family_color@@Base+0x44>
  40d59c:	mov	w8, #0x2                   	// #2
  40d5a0:	str	w8, [sp, #12]
  40d5a4:	b	40d5bc <ifa_family_color@@Base+0x4c>
  40d5a8:	mov	w8, #0x3                   	// #3
  40d5ac:	str	w8, [sp, #12]
  40d5b0:	b	40d5bc <ifa_family_color@@Base+0x4c>
  40d5b4:	mov	w8, #0x6                   	// #6
  40d5b8:	str	w8, [sp, #12]
  40d5bc:	ldr	w0, [sp, #12]
  40d5c0:	add	sp, sp, #0x10
  40d5c4:	ret

000000000040d5c8 <oper_state_color@@Base>:
  40d5c8:	sub	sp, sp, #0x10
  40d5cc:	strb	w0, [sp, #11]
  40d5d0:	ldrb	w8, [sp, #11]
  40d5d4:	cmp	w8, #0x2
  40d5d8:	str	w8, [sp, #4]
  40d5dc:	b.eq	40d608 <oper_state_color@@Base+0x40>  // b.none
  40d5e0:	b	40d5e4 <oper_state_color@@Base+0x1c>
  40d5e4:	ldr	w8, [sp, #4]
  40d5e8:	cmp	w8, #0x6
  40d5ec:	cset	w9, eq  // eq = none
  40d5f0:	eor	w9, w9, #0x1
  40d5f4:	tbnz	w9, #0, 40d614 <oper_state_color@@Base+0x4c>
  40d5f8:	b	40d5fc <oper_state_color@@Base+0x34>
  40d5fc:	mov	w8, #0x4                   	// #4
  40d600:	str	w8, [sp, #12]
  40d604:	b	40d61c <oper_state_color@@Base+0x54>
  40d608:	mov	w8, #0x5                   	// #5
  40d60c:	str	w8, [sp, #12]
  40d610:	b	40d61c <oper_state_color@@Base+0x54>
  40d614:	mov	w8, #0x6                   	// #6
  40d618:	str	w8, [sp, #12]
  40d61c:	ldr	w0, [sp, #12]
  40d620:	add	sp, sp, #0x10
  40d624:	ret
  40d628:	sub	sp, sp, #0x20
  40d62c:	stp	x29, x30, [sp, #16]
  40d630:	add	x29, sp, #0x10
  40d634:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d638:	add	x0, x0, #0xe5c
  40d63c:	bl	4053a0 <getenv@plt>
  40d640:	str	x0, [sp, #8]
  40d644:	ldr	x8, [sp, #8]
  40d648:	cbz	x8, 40d6ac <oper_state_color@@Base+0xe4>
  40d64c:	ldr	x0, [sp, #8]
  40d650:	mov	w1, #0x3b                  	// #59
  40d654:	bl	405130 <strrchr@plt>
  40d658:	str	x0, [sp, #8]
  40d65c:	cbz	x0, 40d6ac <oper_state_color@@Base+0xe4>
  40d660:	ldr	x8, [sp, #8]
  40d664:	ldrb	w9, [x8, #1]
  40d668:	cmp	w9, #0x30
  40d66c:	b.lt	40d680 <oper_state_color@@Base+0xb8>  // b.tstop
  40d670:	ldr	x8, [sp, #8]
  40d674:	ldrb	w9, [x8, #1]
  40d678:	cmp	w9, #0x36
  40d67c:	b.le	40d690 <oper_state_color@@Base+0xc8>
  40d680:	ldr	x8, [sp, #8]
  40d684:	ldrb	w9, [x8, #1]
  40d688:	cmp	w9, #0x38
  40d68c:	b.ne	40d6ac <oper_state_color@@Base+0xe4>  // b.any
  40d690:	ldr	x8, [sp, #8]
  40d694:	ldrb	w9, [x8, #2]
  40d698:	cbnz	w9, 40d6ac <oper_state_color@@Base+0xe4>
  40d69c:	adrp	x8, 428000 <stdout@@GLIBC_2.17+0x3c98>
  40d6a0:	add	x8, x8, #0xdcc
  40d6a4:	mov	w9, #0x1                   	// #1
  40d6a8:	str	w9, [x8]
  40d6ac:	ldp	x29, x30, [sp, #16]
  40d6b0:	add	sp, sp, #0x20
  40d6b4:	ret

000000000040d6b8 <mpls_ntop@@Base>:
  40d6b8:	sub	sp, sp, #0x40
  40d6bc:	stp	x29, x30, [sp, #48]
  40d6c0:	add	x29, sp, #0x30
  40d6c4:	stur	w0, [x29, #-12]
  40d6c8:	str	x1, [sp, #24]
  40d6cc:	str	x2, [sp, #16]
  40d6d0:	str	x3, [sp, #8]
  40d6d4:	ldur	w8, [x29, #-12]
  40d6d8:	cmp	w8, #0x1c
  40d6dc:	cset	w8, eq  // eq = none
  40d6e0:	eor	w8, w8, #0x1
  40d6e4:	tbnz	w8, #0, 40d70c <mpls_ntop@@Base+0x54>
  40d6e8:	b	40d6ec <mpls_ntop@@Base+0x34>
  40d6ec:	bl	405390 <__errno_location@plt>
  40d6f0:	str	wzr, [x0]
  40d6f4:	ldr	x0, [sp, #24]
  40d6f8:	ldr	x1, [sp, #16]
  40d6fc:	ldr	x2, [sp, #8]
  40d700:	bl	40d730 <mpls_ntop@@Base+0x78>
  40d704:	stur	x0, [x29, #-8]
  40d708:	b	40d720 <mpls_ntop@@Base+0x68>
  40d70c:	bl	405390 <__errno_location@plt>
  40d710:	mov	w8, #0x61                  	// #97
  40d714:	str	w8, [x0]
  40d718:	mov	x8, xzr
  40d71c:	stur	x8, [x29, #-8]
  40d720:	ldur	x0, [x29, #-8]
  40d724:	ldp	x29, x30, [sp, #48]
  40d728:	add	sp, sp, #0x40
  40d72c:	ret
  40d730:	sub	sp, sp, #0x50
  40d734:	stp	x29, x30, [sp, #64]
  40d738:	add	x29, sp, #0x40
  40d73c:	stur	x0, [x29, #-16]
  40d740:	stur	x1, [x29, #-24]
  40d744:	str	x2, [sp, #32]
  40d748:	ldr	x8, [sp, #32]
  40d74c:	str	x8, [sp, #24]
  40d750:	ldur	x8, [x29, #-24]
  40d754:	str	x8, [sp, #16]
  40d758:	str	wzr, [sp, #12]
  40d75c:	ldur	x8, [x29, #-16]
  40d760:	ldrsw	x9, [sp, #12]
  40d764:	mov	w10, w9
  40d768:	add	w10, w10, #0x1
  40d76c:	str	w10, [sp, #12]
  40d770:	ldr	w0, [x8, x9, lsl #2]
  40d774:	bl	404f20 <ntohl@plt>
  40d778:	str	w0, [sp, #8]
  40d77c:	ldr	w10, [sp, #8]
  40d780:	and	w10, w10, #0xfffff000
  40d784:	lsr	w10, w10, #12
  40d788:	str	w10, [sp, #4]
  40d78c:	ldr	x0, [sp, #16]
  40d790:	ldr	x1, [sp, #24]
  40d794:	ldr	w3, [sp, #4]
  40d798:	adrp	x2, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d79c:	add	x2, x2, #0xe1c
  40d7a0:	bl	404f90 <snprintf@plt>
  40d7a4:	str	w0, [sp]
  40d7a8:	ldrsw	x8, [sp]
  40d7ac:	ldr	x9, [sp, #24]
  40d7b0:	cmp	x8, x9
  40d7b4:	b.cc	40d7bc <mpls_ntop@@Base+0x104>  // b.lo, b.ul, b.last
  40d7b8:	b	40d824 <mpls_ntop@@Base+0x16c>
  40d7bc:	ldr	w8, [sp, #8]
  40d7c0:	and	w8, w8, #0x100
  40d7c4:	cbz	w8, 40d7d4 <mpls_ntop@@Base+0x11c>
  40d7c8:	ldur	x8, [x29, #-24]
  40d7cc:	stur	x8, [x29, #-8]
  40d7d0:	b	40d838 <mpls_ntop@@Base+0x180>
  40d7d4:	ldrsw	x8, [sp]
  40d7d8:	ldr	x9, [sp, #16]
  40d7dc:	add	x8, x9, x8
  40d7e0:	str	x8, [sp, #16]
  40d7e4:	ldrsw	x8, [sp]
  40d7e8:	ldr	x9, [sp, #24]
  40d7ec:	subs	x8, x9, x8
  40d7f0:	str	x8, [sp, #24]
  40d7f4:	ldr	x8, [sp, #24]
  40d7f8:	cbz	x8, 40d820 <mpls_ntop@@Base+0x168>
  40d7fc:	ldr	x8, [sp, #16]
  40d800:	mov	w9, #0x2f                  	// #47
  40d804:	strb	w9, [x8]
  40d808:	ldr	x8, [sp, #16]
  40d80c:	add	x8, x8, #0x1
  40d810:	str	x8, [sp, #16]
  40d814:	ldr	x8, [sp, #24]
  40d818:	subs	x8, x8, #0x1
  40d81c:	str	x8, [sp, #24]
  40d820:	b	40d75c <mpls_ntop@@Base+0xa4>
  40d824:	bl	405390 <__errno_location@plt>
  40d828:	mov	w8, #0xfffffff9            	// #-7
  40d82c:	str	w8, [x0]
  40d830:	mov	x9, xzr
  40d834:	stur	x9, [x29, #-8]
  40d838:	ldur	x0, [x29, #-8]
  40d83c:	ldp	x29, x30, [sp, #64]
  40d840:	add	sp, sp, #0x50
  40d844:	ret

000000000040d848 <mpls_pton@@Base>:
  40d848:	sub	sp, sp, #0x40
  40d84c:	stp	x29, x30, [sp, #48]
  40d850:	add	x29, sp, #0x30
  40d854:	mov	x8, #0x4                   	// #4
  40d858:	stur	w0, [x29, #-4]
  40d85c:	stur	x1, [x29, #-16]
  40d860:	str	x2, [sp, #24]
  40d864:	str	x3, [sp, #16]
  40d868:	ldr	x9, [sp, #16]
  40d86c:	udiv	x8, x9, x8
  40d870:	str	w8, [sp, #12]
  40d874:	ldur	w8, [x29, #-4]
  40d878:	cmp	w8, #0x1c
  40d87c:	cset	w8, eq  // eq = none
  40d880:	eor	w8, w8, #0x1
  40d884:	tbnz	w8, #0, 40d8ac <mpls_pton@@Base+0x64>
  40d888:	b	40d88c <mpls_pton@@Base+0x44>
  40d88c:	bl	405390 <__errno_location@plt>
  40d890:	str	wzr, [x0]
  40d894:	ldur	x0, [x29, #-16]
  40d898:	ldr	x1, [sp, #24]
  40d89c:	ldr	w2, [sp, #12]
  40d8a0:	bl	40d8d0 <mpls_pton@@Base+0x88>
  40d8a4:	str	w0, [sp, #8]
  40d8a8:	b	40d8c0 <mpls_pton@@Base+0x78>
  40d8ac:	bl	405390 <__errno_location@plt>
  40d8b0:	mov	w8, #0x61                  	// #97
  40d8b4:	str	w8, [x0]
  40d8b8:	mov	w8, #0xffffffff            	// #-1
  40d8bc:	str	w8, [sp, #8]
  40d8c0:	ldr	w0, [sp, #8]
  40d8c4:	ldp	x29, x30, [sp, #48]
  40d8c8:	add	sp, sp, #0x40
  40d8cc:	ret
  40d8d0:	sub	sp, sp, #0x50
  40d8d4:	stp	x29, x30, [sp, #64]
  40d8d8:	add	x29, sp, #0x40
  40d8dc:	stur	x0, [x29, #-16]
  40d8e0:	stur	x1, [x29, #-24]
  40d8e4:	stur	w2, [x29, #-28]
  40d8e8:	str	wzr, [sp, #20]
  40d8ec:	ldr	w8, [sp, #20]
  40d8f0:	ldur	w9, [x29, #-28]
  40d8f4:	cmp	w8, w9
  40d8f8:	b.cs	40d9c8 <mpls_pton@@Base+0x180>  // b.hs, b.nlast
  40d8fc:	ldur	x0, [x29, #-16]
  40d900:	add	x1, sp, #0x18
  40d904:	mov	w8, wzr
  40d908:	mov	w2, w8
  40d90c:	bl	404e60 <strtoul@plt>
  40d910:	str	x0, [sp, #8]
  40d914:	ldr	x9, [sp, #8]
  40d918:	cmp	x9, #0x100, lsl #12
  40d91c:	b.cc	40d928 <mpls_pton@@Base+0xe0>  // b.lo, b.ul, b.last
  40d920:	stur	wzr, [x29, #-4]
  40d924:	b	40d9e4 <mpls_pton@@Base+0x19c>
  40d928:	ldr	x8, [sp, #24]
  40d92c:	ldur	x9, [x29, #-16]
  40d930:	cmp	x8, x9
  40d934:	b.ne	40d940 <mpls_pton@@Base+0xf8>  // b.any
  40d938:	stur	wzr, [x29, #-4]
  40d93c:	b	40d9e4 <mpls_pton@@Base+0x19c>
  40d940:	ldr	x8, [sp, #8]
  40d944:	lsl	x8, x8, #12
  40d948:	mov	w0, w8
  40d94c:	bl	404ec0 <htonl@plt>
  40d950:	ldur	x9, [x29, #-24]
  40d954:	str	w0, [x9]
  40d958:	ldr	x9, [sp, #24]
  40d95c:	ldrb	w8, [x9]
  40d960:	cbnz	w8, 40d988 <mpls_pton@@Base+0x140>
  40d964:	mov	w0, #0x100                 	// #256
  40d968:	bl	404ec0 <htonl@plt>
  40d96c:	ldur	x8, [x29, #-24]
  40d970:	ldr	w9, [x8]
  40d974:	orr	w9, w9, w0
  40d978:	str	w9, [x8]
  40d97c:	mov	w9, #0x1                   	// #1
  40d980:	stur	w9, [x29, #-4]
  40d984:	b	40d9e4 <mpls_pton@@Base+0x19c>
  40d988:	ldr	x8, [sp, #24]
  40d98c:	ldrb	w9, [x8]
  40d990:	cmp	w9, #0x2f
  40d994:	b.eq	40d9a0 <mpls_pton@@Base+0x158>  // b.none
  40d998:	stur	wzr, [x29, #-4]
  40d99c:	b	40d9e4 <mpls_pton@@Base+0x19c>
  40d9a0:	ldr	x8, [sp, #24]
  40d9a4:	add	x8, x8, #0x1
  40d9a8:	stur	x8, [x29, #-16]
  40d9ac:	ldur	x8, [x29, #-24]
  40d9b0:	add	x8, x8, #0x4
  40d9b4:	stur	x8, [x29, #-24]
  40d9b8:	ldr	w8, [sp, #20]
  40d9bc:	add	w8, w8, #0x1
  40d9c0:	str	w8, [sp, #20]
  40d9c4:	b	40d8ec <mpls_pton@@Base+0xa4>
  40d9c8:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40d9cc:	ldr	x8, [x8, #3992]
  40d9d0:	ldr	x0, [x8]
  40d9d4:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40d9d8:	add	x1, x1, #0xecd
  40d9dc:	bl	4053c0 <fprintf@plt>
  40d9e0:	stur	wzr, [x29, #-4]
  40d9e4:	ldur	w0, [x29, #-4]
  40d9e8:	ldp	x29, x30, [sp, #64]
  40d9ec:	add	sp, sp, #0x50
  40d9f0:	ret

000000000040d9f4 <jsonw_new@@Base>:
  40d9f4:	sub	sp, sp, #0x20
  40d9f8:	stp	x29, x30, [sp, #16]
  40d9fc:	add	x29, sp, #0x10
  40da00:	mov	x8, #0x10                  	// #16
  40da04:	str	x0, [sp, #8]
  40da08:	mov	x0, x8
  40da0c:	bl	405000 <malloc@plt>
  40da10:	str	x0, [sp]
  40da14:	ldr	x8, [sp]
  40da18:	cbz	x8, 40da44 <jsonw_new@@Base+0x50>
  40da1c:	ldr	x8, [sp, #8]
  40da20:	ldr	x9, [sp]
  40da24:	str	x8, [x9]
  40da28:	ldr	x8, [sp]
  40da2c:	str	wzr, [x8, #8]
  40da30:	ldr	x8, [sp]
  40da34:	mov	w10, #0x0                   	// #0
  40da38:	strb	w10, [x8, #12]
  40da3c:	ldr	x8, [sp]
  40da40:	strb	w10, [x8, #13]
  40da44:	ldr	x0, [sp]
  40da48:	ldp	x29, x30, [sp, #16]
  40da4c:	add	sp, sp, #0x20
  40da50:	ret

000000000040da54 <jsonw_destroy@@Base>:
  40da54:	sub	sp, sp, #0x20
  40da58:	stp	x29, x30, [sp, #16]
  40da5c:	add	x29, sp, #0x10
  40da60:	str	x0, [sp, #8]
  40da64:	ldr	x8, [sp, #8]
  40da68:	ldr	x8, [x8]
  40da6c:	str	x8, [sp]
  40da70:	ldr	x8, [sp]
  40da74:	ldr	w9, [x8, #8]
  40da78:	cbnz	w9, 40da80 <jsonw_destroy@@Base+0x2c>
  40da7c:	b	40daa0 <jsonw_destroy@@Base+0x4c>
  40da80:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40da84:	add	x0, x0, #0xee6
  40da88:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40da8c:	add	x1, x1, #0xef7
  40da90:	mov	w2, #0x6e                  	// #110
  40da94:	adrp	x3, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40da98:	add	x3, x3, #0xf05
  40da9c:	bl	405380 <__assert_fail@plt>
  40daa0:	ldr	x8, [sp]
  40daa4:	ldr	x1, [x8]
  40daa8:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40daac:	add	x0, x0, #0x628
  40dab0:	bl	404e80 <fputs@plt>
  40dab4:	ldr	x8, [sp]
  40dab8:	ldr	x8, [x8]
  40dabc:	mov	x0, x8
  40dac0:	bl	405280 <fflush@plt>
  40dac4:	ldr	x8, [sp]
  40dac8:	mov	x0, x8
  40dacc:	bl	405200 <free@plt>
  40dad0:	ldr	x8, [sp, #8]
  40dad4:	mov	x9, xzr
  40dad8:	str	x9, [x8]
  40dadc:	ldp	x29, x30, [sp, #16]
  40dae0:	add	sp, sp, #0x20
  40dae4:	ret

000000000040dae8 <jsonw_pretty@@Base>:
  40dae8:	sub	sp, sp, #0x10
  40daec:	str	x0, [sp, #8]
  40daf0:	mov	w8, #0x1                   	// #1
  40daf4:	and	w8, w1, w8
  40daf8:	strb	w8, [sp, #7]
  40dafc:	ldrb	w8, [sp, #7]
  40db00:	ldr	x9, [sp, #8]
  40db04:	and	w8, w8, #0x1
  40db08:	strb	w8, [x9, #12]
  40db0c:	add	sp, sp, #0x10
  40db10:	ret

000000000040db14 <jsonw_name@@Base>:
  40db14:	sub	sp, sp, #0x30
  40db18:	stp	x29, x30, [sp, #32]
  40db1c:	add	x29, sp, #0x20
  40db20:	mov	w8, #0x0                   	// #0
  40db24:	mov	w9, #0x3a                  	// #58
  40db28:	stur	x0, [x29, #-8]
  40db2c:	str	x1, [sp, #16]
  40db30:	ldur	x0, [x29, #-8]
  40db34:	str	w8, [sp, #12]
  40db38:	str	w9, [sp, #8]
  40db3c:	bl	40db9c <jsonw_name@@Base+0x88>
  40db40:	ldur	x0, [x29, #-8]
  40db44:	bl	40dbe4 <jsonw_name@@Base+0xd0>
  40db48:	ldur	x10, [x29, #-8]
  40db4c:	ldr	w8, [sp, #12]
  40db50:	strb	w8, [x10, #13]
  40db54:	ldur	x0, [x29, #-8]
  40db58:	ldr	x1, [sp, #16]
  40db5c:	bl	40dc2c <jsonw_name@@Base+0x118>
  40db60:	ldur	x10, [x29, #-8]
  40db64:	ldr	x1, [x10]
  40db68:	ldr	w0, [sp, #8]
  40db6c:	bl	404f60 <putc@plt>
  40db70:	ldur	x10, [x29, #-8]
  40db74:	ldrb	w8, [x10, #12]
  40db78:	tbnz	w8, #0, 40db80 <jsonw_name@@Base+0x6c>
  40db7c:	b	40db90 <jsonw_name@@Base+0x7c>
  40db80:	ldur	x8, [x29, #-8]
  40db84:	ldr	x1, [x8]
  40db88:	mov	w0, #0x20                  	// #32
  40db8c:	bl	404f60 <putc@plt>
  40db90:	ldp	x29, x30, [sp, #32]
  40db94:	add	sp, sp, #0x30
  40db98:	ret
  40db9c:	sub	sp, sp, #0x20
  40dba0:	stp	x29, x30, [sp, #16]
  40dba4:	add	x29, sp, #0x10
  40dba8:	str	x0, [sp, #8]
  40dbac:	ldr	x8, [sp, #8]
  40dbb0:	ldrb	w9, [x8, #13]
  40dbb4:	cbz	w9, 40dbcc <jsonw_name@@Base+0xb8>
  40dbb8:	ldr	x8, [sp, #8]
  40dbbc:	ldrb	w0, [x8, #13]
  40dbc0:	ldr	x8, [sp, #8]
  40dbc4:	ldr	x1, [x8]
  40dbc8:	bl	404f60 <putc@plt>
  40dbcc:	ldr	x8, [sp, #8]
  40dbd0:	mov	w9, #0x2c                  	// #44
  40dbd4:	strb	w9, [x8, #13]
  40dbd8:	ldp	x29, x30, [sp, #16]
  40dbdc:	add	sp, sp, #0x20
  40dbe0:	ret
  40dbe4:	sub	sp, sp, #0x20
  40dbe8:	stp	x29, x30, [sp, #16]
  40dbec:	add	x29, sp, #0x10
  40dbf0:	str	x0, [sp, #8]
  40dbf4:	ldr	x8, [sp, #8]
  40dbf8:	ldrb	w9, [x8, #12]
  40dbfc:	tbnz	w9, #0, 40dc04 <jsonw_name@@Base+0xf0>
  40dc00:	b	40dc20 <jsonw_name@@Base+0x10c>
  40dc04:	ldr	x8, [sp, #8]
  40dc08:	ldr	x1, [x8]
  40dc0c:	mov	w0, #0xa                   	// #10
  40dc10:	bl	404f60 <putc@plt>
  40dc14:	ldr	x8, [sp, #8]
  40dc18:	mov	x0, x8
  40dc1c:	bl	40e680 <jsonw_null_field@@Base+0x34>
  40dc20:	ldp	x29, x30, [sp, #16]
  40dc24:	add	sp, sp, #0x20
  40dc28:	ret
  40dc2c:	sub	sp, sp, #0x30
  40dc30:	stp	x29, x30, [sp, #32]
  40dc34:	add	x29, sp, #0x20
  40dc38:	mov	w8, #0x22                  	// #34
  40dc3c:	stur	x0, [x29, #-8]
  40dc40:	str	x1, [sp, #16]
  40dc44:	ldur	x9, [x29, #-8]
  40dc48:	ldr	x1, [x9]
  40dc4c:	mov	w0, w8
  40dc50:	bl	404f60 <putc@plt>
  40dc54:	ldr	x8, [sp, #16]
  40dc58:	ldrb	w9, [x8]
  40dc5c:	cbz	w9, 40ddcc <jsonw_name@@Base+0x2b8>
  40dc60:	ldr	x8, [sp, #16]
  40dc64:	ldrb	w9, [x8]
  40dc68:	cmp	w9, #0x8
  40dc6c:	str	w9, [sp, #12]
  40dc70:	b.eq	40dd48 <jsonw_name@@Base+0x234>  // b.none
  40dc74:	b	40dc78 <jsonw_name@@Base+0x164>
  40dc78:	ldr	w8, [sp, #12]
  40dc7c:	cmp	w8, #0x9
  40dc80:	b.eq	40dce8 <jsonw_name@@Base+0x1d4>  // b.none
  40dc84:	b	40dc88 <jsonw_name@@Base+0x174>
  40dc88:	ldr	w8, [sp, #12]
  40dc8c:	cmp	w8, #0xa
  40dc90:	b.eq	40dd00 <jsonw_name@@Base+0x1ec>  // b.none
  40dc94:	b	40dc98 <jsonw_name@@Base+0x184>
  40dc98:	ldr	w8, [sp, #12]
  40dc9c:	cmp	w8, #0xc
  40dca0:	b.eq	40dd30 <jsonw_name@@Base+0x21c>  // b.none
  40dca4:	b	40dca8 <jsonw_name@@Base+0x194>
  40dca8:	ldr	w8, [sp, #12]
  40dcac:	cmp	w8, #0xd
  40dcb0:	b.eq	40dd18 <jsonw_name@@Base+0x204>  // b.none
  40dcb4:	b	40dcb8 <jsonw_name@@Base+0x1a4>
  40dcb8:	ldr	w8, [sp, #12]
  40dcbc:	cmp	w8, #0x22
  40dcc0:	b.eq	40dd78 <jsonw_name@@Base+0x264>  // b.none
  40dcc4:	b	40dcc8 <jsonw_name@@Base+0x1b4>
  40dcc8:	ldr	w8, [sp, #12]
  40dccc:	cmp	w8, #0x27
  40dcd0:	b.eq	40dd90 <jsonw_name@@Base+0x27c>  // b.none
  40dcd4:	b	40dcd8 <jsonw_name@@Base+0x1c4>
  40dcd8:	ldr	w8, [sp, #12]
  40dcdc:	cmp	w8, #0x5c
  40dce0:	b.eq	40dd60 <jsonw_name@@Base+0x24c>  // b.none
  40dce4:	b	40dda8 <jsonw_name@@Base+0x294>
  40dce8:	ldur	x8, [x29, #-8]
  40dcec:	ldr	x1, [x8]
  40dcf0:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dcf4:	add	x0, x0, #0xf51
  40dcf8:	bl	404e80 <fputs@plt>
  40dcfc:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dd00:	ldur	x8, [x29, #-8]
  40dd04:	ldr	x1, [x8]
  40dd08:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dd0c:	add	x0, x0, #0xf54
  40dd10:	bl	404e80 <fputs@plt>
  40dd14:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dd18:	ldur	x8, [x29, #-8]
  40dd1c:	ldr	x1, [x8]
  40dd20:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dd24:	add	x0, x0, #0xf57
  40dd28:	bl	404e80 <fputs@plt>
  40dd2c:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dd30:	ldur	x8, [x29, #-8]
  40dd34:	ldr	x1, [x8]
  40dd38:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dd3c:	add	x0, x0, #0xf5a
  40dd40:	bl	404e80 <fputs@plt>
  40dd44:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dd48:	ldur	x8, [x29, #-8]
  40dd4c:	ldr	x1, [x8]
  40dd50:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dd54:	add	x0, x0, #0xf5d
  40dd58:	bl	404e80 <fputs@plt>
  40dd5c:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dd60:	ldur	x8, [x29, #-8]
  40dd64:	ldr	x1, [x8]
  40dd68:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dd6c:	add	x0, x0, #0xf60
  40dd70:	bl	404e80 <fputs@plt>
  40dd74:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dd78:	ldur	x8, [x29, #-8]
  40dd7c:	ldr	x1, [x8]
  40dd80:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dd84:	add	x0, x0, #0xf63
  40dd88:	bl	404e80 <fputs@plt>
  40dd8c:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dd90:	ldur	x8, [x29, #-8]
  40dd94:	ldr	x1, [x8]
  40dd98:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40dd9c:	add	x0, x0, #0xf66
  40dda0:	bl	404e80 <fputs@plt>
  40dda4:	b	40ddbc <jsonw_name@@Base+0x2a8>
  40dda8:	ldr	x8, [sp, #16]
  40ddac:	ldrb	w0, [x8]
  40ddb0:	ldur	x8, [x29, #-8]
  40ddb4:	ldr	x1, [x8]
  40ddb8:	bl	404f60 <putc@plt>
  40ddbc:	ldr	x8, [sp, #16]
  40ddc0:	add	x8, x8, #0x1
  40ddc4:	str	x8, [sp, #16]
  40ddc8:	b	40dc54 <jsonw_name@@Base+0x140>
  40ddcc:	ldur	x8, [x29, #-8]
  40ddd0:	ldr	x1, [x8]
  40ddd4:	mov	w0, #0x22                  	// #34
  40ddd8:	bl	404f60 <putc@plt>
  40dddc:	ldp	x29, x30, [sp, #32]
  40dde0:	add	sp, sp, #0x30
  40dde4:	ret

000000000040dde8 <jsonw_printf@@Base>:
  40dde8:	sub	sp, sp, #0x120
  40ddec:	stp	x29, x30, [sp, #256]
  40ddf0:	str	x28, [sp, #272]
  40ddf4:	add	x29, sp, #0x100
  40ddf8:	str	q7, [sp, #112]
  40ddfc:	str	q6, [sp, #96]
  40de00:	str	q5, [sp, #80]
  40de04:	str	q4, [sp, #64]
  40de08:	str	q3, [sp, #48]
  40de0c:	str	q2, [sp, #32]
  40de10:	str	q1, [sp, #16]
  40de14:	str	q0, [sp]
  40de18:	str	x7, [sp, #168]
  40de1c:	str	x6, [sp, #160]
  40de20:	str	x5, [sp, #152]
  40de24:	str	x4, [sp, #144]
  40de28:	str	x3, [sp, #136]
  40de2c:	str	x2, [sp, #128]
  40de30:	stur	x0, [x29, #-8]
  40de34:	stur	x1, [x29, #-16]
  40de38:	mov	w8, #0xffffff80            	// #-128
  40de3c:	stur	w8, [x29, #-20]
  40de40:	mov	w8, #0xffffffd0            	// #-48
  40de44:	stur	w8, [x29, #-24]
  40de48:	mov	x9, sp
  40de4c:	add	x9, x9, #0x80
  40de50:	stur	x9, [x29, #-32]
  40de54:	add	x9, sp, #0x80
  40de58:	add	x9, x9, #0x30
  40de5c:	stur	x9, [x29, #-40]
  40de60:	add	x9, x29, #0x20
  40de64:	stur	x9, [x29, #-48]
  40de68:	ldur	x0, [x29, #-8]
  40de6c:	bl	40db9c <jsonw_name@@Base+0x88>
  40de70:	ldur	x9, [x29, #-8]
  40de74:	ldr	x0, [x9]
  40de78:	ldur	x1, [x29, #-16]
  40de7c:	ldur	q0, [x29, #-48]
  40de80:	ldur	q1, [x29, #-32]
  40de84:	stur	q1, [x29, #-64]
  40de88:	stur	q0, [x29, #-80]
  40de8c:	sub	x2, x29, #0x50
  40de90:	bl	405360 <vfprintf@plt>
  40de94:	ldr	x28, [sp, #272]
  40de98:	ldp	x29, x30, [sp, #256]
  40de9c:	add	sp, sp, #0x120
  40dea0:	ret

000000000040dea4 <jsonw_start_object@@Base>:
  40dea4:	sub	sp, sp, #0x20
  40dea8:	stp	x29, x30, [sp, #16]
  40deac:	add	x29, sp, #0x10
  40deb0:	mov	w1, #0x7b                  	// #123
  40deb4:	str	x0, [sp, #8]
  40deb8:	ldr	x0, [sp, #8]
  40debc:	bl	40decc <jsonw_start_object@@Base+0x28>
  40dec0:	ldp	x29, x30, [sp, #16]
  40dec4:	add	sp, sp, #0x20
  40dec8:	ret
  40decc:	sub	sp, sp, #0x20
  40ded0:	stp	x29, x30, [sp, #16]
  40ded4:	add	x29, sp, #0x10
  40ded8:	mov	w8, #0x0                   	// #0
  40dedc:	str	x0, [sp, #8]
  40dee0:	str	w1, [sp, #4]
  40dee4:	ldr	x0, [sp, #8]
  40dee8:	str	w8, [sp]
  40deec:	bl	40db9c <jsonw_name@@Base+0x88>
  40def0:	ldr	w0, [sp, #4]
  40def4:	ldr	x9, [sp, #8]
  40def8:	ldr	x1, [x9]
  40defc:	bl	404f60 <putc@plt>
  40df00:	ldr	x9, [sp, #8]
  40df04:	ldr	w8, [x9, #8]
  40df08:	add	w8, w8, #0x1
  40df0c:	str	w8, [x9, #8]
  40df10:	ldr	x9, [sp, #8]
  40df14:	ldr	w8, [sp]
  40df18:	strb	w8, [x9, #13]
  40df1c:	ldp	x29, x30, [sp, #16]
  40df20:	add	sp, sp, #0x20
  40df24:	ret

000000000040df28 <jsonw_end_object@@Base>:
  40df28:	sub	sp, sp, #0x20
  40df2c:	stp	x29, x30, [sp, #16]
  40df30:	add	x29, sp, #0x10
  40df34:	mov	w1, #0x7d                  	// #125
  40df38:	str	x0, [sp, #8]
  40df3c:	ldr	x0, [sp, #8]
  40df40:	bl	40df50 <jsonw_end_object@@Base+0x28>
  40df44:	ldp	x29, x30, [sp, #16]
  40df48:	add	sp, sp, #0x20
  40df4c:	ret
  40df50:	sub	sp, sp, #0x20
  40df54:	stp	x29, x30, [sp, #16]
  40df58:	add	x29, sp, #0x10
  40df5c:	str	x0, [sp, #8]
  40df60:	str	w1, [sp, #4]
  40df64:	ldr	x8, [sp, #8]
  40df68:	ldr	w9, [x8, #8]
  40df6c:	cmp	w9, #0x0
  40df70:	cset	w9, ls  // ls = plast
  40df74:	tbnz	w9, #0, 40df7c <jsonw_end_object@@Base+0x54>
  40df78:	b	40df9c <jsonw_end_object@@Base+0x74>
  40df7c:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40df80:	add	x0, x0, #0xf69
  40df84:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40df88:	add	x1, x1, #0xef7
  40df8c:	mov	w2, #0x85                  	// #133
  40df90:	adrp	x3, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40df94:	add	x3, x3, #0xf79
  40df98:	bl	405380 <__assert_fail@plt>
  40df9c:	ldr	x8, [sp, #8]
  40dfa0:	ldr	w9, [x8, #8]
  40dfa4:	subs	w9, w9, #0x1
  40dfa8:	str	w9, [x8, #8]
  40dfac:	ldr	x8, [sp, #8]
  40dfb0:	ldrb	w9, [x8, #13]
  40dfb4:	cbz	w9, 40dfc0 <jsonw_end_object@@Base+0x98>
  40dfb8:	ldr	x0, [sp, #8]
  40dfbc:	bl	40dbe4 <jsonw_name@@Base+0xd0>
  40dfc0:	ldr	w0, [sp, #4]
  40dfc4:	ldr	x8, [sp, #8]
  40dfc8:	ldr	x1, [x8]
  40dfcc:	bl	404f60 <putc@plt>
  40dfd0:	ldr	x8, [sp, #8]
  40dfd4:	mov	w9, #0x2c                  	// #44
  40dfd8:	strb	w9, [x8, #13]
  40dfdc:	ldp	x29, x30, [sp, #16]
  40dfe0:	add	sp, sp, #0x20
  40dfe4:	ret

000000000040dfe8 <jsonw_start_array@@Base>:
  40dfe8:	sub	sp, sp, #0x20
  40dfec:	stp	x29, x30, [sp, #16]
  40dff0:	add	x29, sp, #0x10
  40dff4:	mov	w1, #0x5b                  	// #91
  40dff8:	str	x0, [sp, #8]
  40dffc:	ldr	x0, [sp, #8]
  40e000:	bl	40decc <jsonw_start_object@@Base+0x28>
  40e004:	ldr	x8, [sp, #8]
  40e008:	ldrb	w9, [x8, #12]
  40e00c:	tbnz	w9, #0, 40e014 <jsonw_start_array@@Base+0x2c>
  40e010:	b	40e024 <jsonw_start_array@@Base+0x3c>
  40e014:	ldr	x8, [sp, #8]
  40e018:	ldr	x1, [x8]
  40e01c:	mov	w0, #0x20                  	// #32
  40e020:	bl	404f60 <putc@plt>
  40e024:	ldp	x29, x30, [sp, #16]
  40e028:	add	sp, sp, #0x20
  40e02c:	ret

000000000040e030 <jsonw_end_array@@Base>:
  40e030:	sub	sp, sp, #0x20
  40e034:	stp	x29, x30, [sp, #16]
  40e038:	add	x29, sp, #0x10
  40e03c:	str	x0, [sp, #8]
  40e040:	ldr	x8, [sp, #8]
  40e044:	ldrb	w9, [x8, #12]
  40e048:	tbnz	w9, #0, 40e050 <jsonw_end_array@@Base+0x20>
  40e04c:	b	40e06c <jsonw_end_array@@Base+0x3c>
  40e050:	ldr	x8, [sp, #8]
  40e054:	ldrb	w9, [x8, #13]
  40e058:	cbz	w9, 40e06c <jsonw_end_array@@Base+0x3c>
  40e05c:	ldr	x8, [sp, #8]
  40e060:	ldr	x1, [x8]
  40e064:	mov	w0, #0x20                  	// #32
  40e068:	bl	404f60 <putc@plt>
  40e06c:	ldr	x8, [sp, #8]
  40e070:	mov	w9, #0x0                   	// #0
  40e074:	strb	w9, [x8, #13]
  40e078:	ldr	x0, [sp, #8]
  40e07c:	mov	w1, #0x5d                  	// #93
  40e080:	bl	40df50 <jsonw_end_object@@Base+0x28>
  40e084:	ldp	x29, x30, [sp, #16]
  40e088:	add	sp, sp, #0x20
  40e08c:	ret

000000000040e090 <jsonw_string@@Base>:
  40e090:	sub	sp, sp, #0x20
  40e094:	stp	x29, x30, [sp, #16]
  40e098:	add	x29, sp, #0x10
  40e09c:	str	x0, [sp, #8]
  40e0a0:	str	x1, [sp]
  40e0a4:	ldr	x0, [sp, #8]
  40e0a8:	bl	40db9c <jsonw_name@@Base+0x88>
  40e0ac:	ldr	x0, [sp, #8]
  40e0b0:	ldr	x1, [sp]
  40e0b4:	bl	40dc2c <jsonw_name@@Base+0x118>
  40e0b8:	ldp	x29, x30, [sp, #16]
  40e0bc:	add	sp, sp, #0x20
  40e0c0:	ret

000000000040e0c4 <jsonw_bool@@Base>:
  40e0c4:	sub	sp, sp, #0x20
  40e0c8:	stp	x29, x30, [sp, #16]
  40e0cc:	add	x29, sp, #0x10
  40e0d0:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e0d4:	add	x8, x8, #0xe26
  40e0d8:	adrp	x9, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e0dc:	add	x9, x9, #0xe2b
  40e0e0:	adrp	x10, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e0e4:	add	x10, x10, #0xa04
  40e0e8:	str	x0, [sp, #8]
  40e0ec:	and	w11, w1, #0x1
  40e0f0:	strb	w11, [sp, #7]
  40e0f4:	ldr	x0, [sp, #8]
  40e0f8:	ldrb	w11, [sp, #7]
  40e0fc:	tst	w11, #0x1
  40e100:	csel	x2, x8, x9, ne  // ne = any
  40e104:	mov	x1, x10
  40e108:	bl	40dde8 <jsonw_printf@@Base>
  40e10c:	ldp	x29, x30, [sp, #16]
  40e110:	add	sp, sp, #0x20
  40e114:	ret

000000000040e118 <jsonw_null@@Base>:
  40e118:	sub	sp, sp, #0x20
  40e11c:	stp	x29, x30, [sp, #16]
  40e120:	add	x29, sp, #0x10
  40e124:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e128:	add	x1, x1, #0xf2a
  40e12c:	str	x0, [sp, #8]
  40e130:	ldr	x0, [sp, #8]
  40e134:	bl	40dde8 <jsonw_printf@@Base>
  40e138:	ldp	x29, x30, [sp, #16]
  40e13c:	add	sp, sp, #0x20
  40e140:	ret

000000000040e144 <jsonw_float@@Base>:
  40e144:	sub	sp, sp, #0x20
  40e148:	stp	x29, x30, [sp, #16]
  40e14c:	add	x29, sp, #0x10
  40e150:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e154:	add	x1, x1, #0xf2f
  40e158:	str	x0, [sp, #8]
  40e15c:	str	d0, [sp]
  40e160:	ldr	x0, [sp, #8]
  40e164:	ldr	d0, [sp]
  40e168:	bl	40dde8 <jsonw_printf@@Base>
  40e16c:	ldp	x29, x30, [sp, #16]
  40e170:	add	sp, sp, #0x20
  40e174:	ret

000000000040e178 <jsonw_hhu@@Base>:
  40e178:	sub	sp, sp, #0x20
  40e17c:	stp	x29, x30, [sp, #16]
  40e180:	add	x29, sp, #0x10
  40e184:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e188:	add	x8, x8, #0xf32
  40e18c:	str	x0, [sp, #8]
  40e190:	strb	w1, [sp, #7]
  40e194:	ldr	x0, [sp, #8]
  40e198:	ldrb	w2, [sp, #7]
  40e19c:	mov	x1, x8
  40e1a0:	bl	40dde8 <jsonw_printf@@Base>
  40e1a4:	ldp	x29, x30, [sp, #16]
  40e1a8:	add	sp, sp, #0x20
  40e1ac:	ret

000000000040e1b0 <jsonw_hu@@Base>:
  40e1b0:	sub	sp, sp, #0x20
  40e1b4:	stp	x29, x30, [sp, #16]
  40e1b8:	add	x29, sp, #0x10
  40e1bc:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e1c0:	add	x8, x8, #0xf37
  40e1c4:	str	x0, [sp, #8]
  40e1c8:	strh	w1, [sp, #6]
  40e1cc:	ldr	x0, [sp, #8]
  40e1d0:	ldrh	w2, [sp, #6]
  40e1d4:	mov	x1, x8
  40e1d8:	bl	40dde8 <jsonw_printf@@Base>
  40e1dc:	ldp	x29, x30, [sp, #16]
  40e1e0:	add	sp, sp, #0x20
  40e1e4:	ret

000000000040e1e8 <jsonw_uint@@Base>:
  40e1e8:	sub	sp, sp, #0x20
  40e1ec:	stp	x29, x30, [sp, #16]
  40e1f0:	add	x29, sp, #0x10
  40e1f4:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e1f8:	add	x8, x8, #0xe1c
  40e1fc:	str	x0, [sp, #8]
  40e200:	str	w1, [sp, #4]
  40e204:	ldr	x0, [sp, #8]
  40e208:	ldr	w2, [sp, #4]
  40e20c:	mov	x1, x8
  40e210:	bl	40dde8 <jsonw_printf@@Base>
  40e214:	ldp	x29, x30, [sp, #16]
  40e218:	add	sp, sp, #0x20
  40e21c:	ret

000000000040e220 <jsonw_u64@@Base>:
  40e220:	sub	sp, sp, #0x20
  40e224:	stp	x29, x30, [sp, #16]
  40e228:	add	x29, sp, #0x10
  40e22c:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e230:	add	x8, x8, #0xf3b
  40e234:	str	x0, [sp, #8]
  40e238:	str	x1, [sp]
  40e23c:	ldr	x0, [sp, #8]
  40e240:	ldr	x2, [sp]
  40e244:	mov	x1, x8
  40e248:	bl	40dde8 <jsonw_printf@@Base>
  40e24c:	ldp	x29, x30, [sp, #16]
  40e250:	add	sp, sp, #0x20
  40e254:	ret

000000000040e258 <jsonw_xint@@Base>:
  40e258:	sub	sp, sp, #0x20
  40e25c:	stp	x29, x30, [sp, #16]
  40e260:	add	x29, sp, #0x10
  40e264:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e268:	add	x8, x8, #0xf3f
  40e26c:	str	x0, [sp, #8]
  40e270:	str	x1, [sp]
  40e274:	ldr	x0, [sp, #8]
  40e278:	ldr	x2, [sp]
  40e27c:	mov	x1, x8
  40e280:	bl	40dde8 <jsonw_printf@@Base>
  40e284:	ldp	x29, x30, [sp, #16]
  40e288:	add	sp, sp, #0x20
  40e28c:	ret

000000000040e290 <jsonw_luint@@Base>:
  40e290:	sub	sp, sp, #0x20
  40e294:	stp	x29, x30, [sp, #16]
  40e298:	add	x29, sp, #0x10
  40e29c:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e2a0:	add	x8, x8, #0xf3b
  40e2a4:	str	x0, [sp, #8]
  40e2a8:	str	x1, [sp]
  40e2ac:	ldr	x0, [sp, #8]
  40e2b0:	ldr	x2, [sp]
  40e2b4:	mov	x1, x8
  40e2b8:	bl	40dde8 <jsonw_printf@@Base>
  40e2bc:	ldp	x29, x30, [sp, #16]
  40e2c0:	add	sp, sp, #0x20
  40e2c4:	ret

000000000040e2c8 <jsonw_lluint@@Base>:
  40e2c8:	sub	sp, sp, #0x20
  40e2cc:	stp	x29, x30, [sp, #16]
  40e2d0:	add	x29, sp, #0x10
  40e2d4:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e2d8:	add	x8, x8, #0xf43
  40e2dc:	str	x0, [sp, #8]
  40e2e0:	str	x1, [sp]
  40e2e4:	ldr	x0, [sp, #8]
  40e2e8:	ldr	x2, [sp]
  40e2ec:	mov	x1, x8
  40e2f0:	bl	40dde8 <jsonw_printf@@Base>
  40e2f4:	ldp	x29, x30, [sp, #16]
  40e2f8:	add	sp, sp, #0x20
  40e2fc:	ret

000000000040e300 <jsonw_int@@Base>:
  40e300:	sub	sp, sp, #0x20
  40e304:	stp	x29, x30, [sp, #16]
  40e308:	add	x29, sp, #0x10
  40e30c:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e310:	add	x8, x8, #0xd76
  40e314:	str	x0, [sp, #8]
  40e318:	str	w1, [sp, #4]
  40e31c:	ldr	x0, [sp, #8]
  40e320:	ldr	w2, [sp, #4]
  40e324:	mov	x1, x8
  40e328:	bl	40dde8 <jsonw_printf@@Base>
  40e32c:	ldp	x29, x30, [sp, #16]
  40e330:	add	sp, sp, #0x20
  40e334:	ret

000000000040e338 <jsonw_s64@@Base>:
  40e338:	sub	sp, sp, #0x20
  40e33c:	stp	x29, x30, [sp, #16]
  40e340:	add	x29, sp, #0x10
  40e344:	adrp	x8, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e348:	add	x8, x8, #0xf48
  40e34c:	str	x0, [sp, #8]
  40e350:	str	x1, [sp]
  40e354:	ldr	x0, [sp, #8]
  40e358:	ldr	x2, [sp]
  40e35c:	mov	x1, x8
  40e360:	bl	40dde8 <jsonw_printf@@Base>
  40e364:	ldp	x29, x30, [sp, #16]
  40e368:	add	sp, sp, #0x20
  40e36c:	ret

000000000040e370 <jsonw_string_field@@Base>:
  40e370:	sub	sp, sp, #0x30
  40e374:	stp	x29, x30, [sp, #32]
  40e378:	add	x29, sp, #0x20
  40e37c:	stur	x0, [x29, #-8]
  40e380:	str	x1, [sp, #16]
  40e384:	str	x2, [sp, #8]
  40e388:	ldur	x0, [x29, #-8]
  40e38c:	ldr	x1, [sp, #16]
  40e390:	bl	40db14 <jsonw_name@@Base>
  40e394:	ldur	x0, [x29, #-8]
  40e398:	ldr	x1, [sp, #8]
  40e39c:	bl	40e090 <jsonw_string@@Base>
  40e3a0:	ldp	x29, x30, [sp, #32]
  40e3a4:	add	sp, sp, #0x30
  40e3a8:	ret

000000000040e3ac <jsonw_bool_field@@Base>:
  40e3ac:	sub	sp, sp, #0x30
  40e3b0:	stp	x29, x30, [sp, #32]
  40e3b4:	add	x29, sp, #0x20
  40e3b8:	stur	x0, [x29, #-8]
  40e3bc:	str	x1, [sp, #16]
  40e3c0:	mov	w8, #0x1                   	// #1
  40e3c4:	and	w8, w2, w8
  40e3c8:	strb	w8, [sp, #15]
  40e3cc:	ldur	x0, [x29, #-8]
  40e3d0:	ldr	x1, [sp, #16]
  40e3d4:	bl	40db14 <jsonw_name@@Base>
  40e3d8:	ldur	x0, [x29, #-8]
  40e3dc:	ldrb	w8, [sp, #15]
  40e3e0:	and	w1, w8, #0x1
  40e3e4:	bl	40e0c4 <jsonw_bool@@Base>
  40e3e8:	ldp	x29, x30, [sp, #32]
  40e3ec:	add	sp, sp, #0x30
  40e3f0:	ret

000000000040e3f4 <jsonw_float_field@@Base>:
  40e3f4:	sub	sp, sp, #0x30
  40e3f8:	stp	x29, x30, [sp, #32]
  40e3fc:	add	x29, sp, #0x20
  40e400:	stur	x0, [x29, #-8]
  40e404:	str	x1, [sp, #16]
  40e408:	str	d0, [sp, #8]
  40e40c:	ldur	x0, [x29, #-8]
  40e410:	ldr	x1, [sp, #16]
  40e414:	bl	40db14 <jsonw_name@@Base>
  40e418:	ldur	x0, [x29, #-8]
  40e41c:	ldr	d0, [sp, #8]
  40e420:	bl	40e144 <jsonw_float@@Base>
  40e424:	ldp	x29, x30, [sp, #32]
  40e428:	add	sp, sp, #0x30
  40e42c:	ret

000000000040e430 <jsonw_uint_field@@Base>:
  40e430:	sub	sp, sp, #0x30
  40e434:	stp	x29, x30, [sp, #32]
  40e438:	add	x29, sp, #0x20
  40e43c:	stur	x0, [x29, #-8]
  40e440:	str	x1, [sp, #16]
  40e444:	str	w2, [sp, #12]
  40e448:	ldur	x0, [x29, #-8]
  40e44c:	ldr	x1, [sp, #16]
  40e450:	bl	40db14 <jsonw_name@@Base>
  40e454:	ldur	x0, [x29, #-8]
  40e458:	ldr	w1, [sp, #12]
  40e45c:	bl	40e1e8 <jsonw_uint@@Base>
  40e460:	ldp	x29, x30, [sp, #32]
  40e464:	add	sp, sp, #0x30
  40e468:	ret

000000000040e46c <jsonw_u64_field@@Base>:
  40e46c:	sub	sp, sp, #0x30
  40e470:	stp	x29, x30, [sp, #32]
  40e474:	add	x29, sp, #0x20
  40e478:	stur	x0, [x29, #-8]
  40e47c:	str	x1, [sp, #16]
  40e480:	str	x2, [sp, #8]
  40e484:	ldur	x0, [x29, #-8]
  40e488:	ldr	x1, [sp, #16]
  40e48c:	bl	40db14 <jsonw_name@@Base>
  40e490:	ldur	x0, [x29, #-8]
  40e494:	ldr	x1, [sp, #8]
  40e498:	bl	40e220 <jsonw_u64@@Base>
  40e49c:	ldp	x29, x30, [sp, #32]
  40e4a0:	add	sp, sp, #0x30
  40e4a4:	ret

000000000040e4a8 <jsonw_xint_field@@Base>:
  40e4a8:	sub	sp, sp, #0x30
  40e4ac:	stp	x29, x30, [sp, #32]
  40e4b0:	add	x29, sp, #0x20
  40e4b4:	stur	x0, [x29, #-8]
  40e4b8:	str	x1, [sp, #16]
  40e4bc:	str	x2, [sp, #8]
  40e4c0:	ldur	x0, [x29, #-8]
  40e4c4:	ldr	x1, [sp, #16]
  40e4c8:	bl	40db14 <jsonw_name@@Base>
  40e4cc:	ldur	x0, [x29, #-8]
  40e4d0:	ldr	x1, [sp, #8]
  40e4d4:	bl	40e258 <jsonw_xint@@Base>
  40e4d8:	ldp	x29, x30, [sp, #32]
  40e4dc:	add	sp, sp, #0x30
  40e4e0:	ret

000000000040e4e4 <jsonw_hhu_field@@Base>:
  40e4e4:	sub	sp, sp, #0x30
  40e4e8:	stp	x29, x30, [sp, #32]
  40e4ec:	add	x29, sp, #0x20
  40e4f0:	stur	x0, [x29, #-8]
  40e4f4:	str	x1, [sp, #16]
  40e4f8:	strb	w2, [sp, #15]
  40e4fc:	ldur	x0, [x29, #-8]
  40e500:	ldr	x1, [sp, #16]
  40e504:	bl	40db14 <jsonw_name@@Base>
  40e508:	ldur	x0, [x29, #-8]
  40e50c:	ldrb	w1, [sp, #15]
  40e510:	bl	40e178 <jsonw_hhu@@Base>
  40e514:	ldp	x29, x30, [sp, #32]
  40e518:	add	sp, sp, #0x30
  40e51c:	ret

000000000040e520 <jsonw_hu_field@@Base>:
  40e520:	sub	sp, sp, #0x30
  40e524:	stp	x29, x30, [sp, #32]
  40e528:	add	x29, sp, #0x20
  40e52c:	stur	x0, [x29, #-8]
  40e530:	str	x1, [sp, #16]
  40e534:	strh	w2, [sp, #14]
  40e538:	ldur	x0, [x29, #-8]
  40e53c:	ldr	x1, [sp, #16]
  40e540:	bl	40db14 <jsonw_name@@Base>
  40e544:	ldur	x0, [x29, #-8]
  40e548:	ldrh	w1, [sp, #14]
  40e54c:	bl	40e1b0 <jsonw_hu@@Base>
  40e550:	ldp	x29, x30, [sp, #32]
  40e554:	add	sp, sp, #0x30
  40e558:	ret

000000000040e55c <jsonw_luint_field@@Base>:
  40e55c:	sub	sp, sp, #0x30
  40e560:	stp	x29, x30, [sp, #32]
  40e564:	add	x29, sp, #0x20
  40e568:	stur	x0, [x29, #-8]
  40e56c:	str	x1, [sp, #16]
  40e570:	str	x2, [sp, #8]
  40e574:	ldur	x0, [x29, #-8]
  40e578:	ldr	x1, [sp, #16]
  40e57c:	bl	40db14 <jsonw_name@@Base>
  40e580:	ldur	x0, [x29, #-8]
  40e584:	ldr	x1, [sp, #8]
  40e588:	bl	40e290 <jsonw_luint@@Base>
  40e58c:	ldp	x29, x30, [sp, #32]
  40e590:	add	sp, sp, #0x30
  40e594:	ret

000000000040e598 <jsonw_lluint_field@@Base>:
  40e598:	sub	sp, sp, #0x30
  40e59c:	stp	x29, x30, [sp, #32]
  40e5a0:	add	x29, sp, #0x20
  40e5a4:	stur	x0, [x29, #-8]
  40e5a8:	str	x1, [sp, #16]
  40e5ac:	str	x2, [sp, #8]
  40e5b0:	ldur	x0, [x29, #-8]
  40e5b4:	ldr	x1, [sp, #16]
  40e5b8:	bl	40db14 <jsonw_name@@Base>
  40e5bc:	ldur	x0, [x29, #-8]
  40e5c0:	ldr	x1, [sp, #8]
  40e5c4:	bl	40e2c8 <jsonw_lluint@@Base>
  40e5c8:	ldp	x29, x30, [sp, #32]
  40e5cc:	add	sp, sp, #0x30
  40e5d0:	ret

000000000040e5d4 <jsonw_int_field@@Base>:
  40e5d4:	sub	sp, sp, #0x30
  40e5d8:	stp	x29, x30, [sp, #32]
  40e5dc:	add	x29, sp, #0x20
  40e5e0:	stur	x0, [x29, #-8]
  40e5e4:	str	x1, [sp, #16]
  40e5e8:	str	w2, [sp, #12]
  40e5ec:	ldur	x0, [x29, #-8]
  40e5f0:	ldr	x1, [sp, #16]
  40e5f4:	bl	40db14 <jsonw_name@@Base>
  40e5f8:	ldur	x0, [x29, #-8]
  40e5fc:	ldr	w1, [sp, #12]
  40e600:	bl	40e300 <jsonw_int@@Base>
  40e604:	ldp	x29, x30, [sp, #32]
  40e608:	add	sp, sp, #0x30
  40e60c:	ret

000000000040e610 <jsonw_s64_field@@Base>:
  40e610:	sub	sp, sp, #0x30
  40e614:	stp	x29, x30, [sp, #32]
  40e618:	add	x29, sp, #0x20
  40e61c:	stur	x0, [x29, #-8]
  40e620:	str	x1, [sp, #16]
  40e624:	str	x2, [sp, #8]
  40e628:	ldur	x0, [x29, #-8]
  40e62c:	ldr	x1, [sp, #16]
  40e630:	bl	40db14 <jsonw_name@@Base>
  40e634:	ldur	x0, [x29, #-8]
  40e638:	ldr	x1, [sp, #8]
  40e63c:	bl	40e338 <jsonw_s64@@Base>
  40e640:	ldp	x29, x30, [sp, #32]
  40e644:	add	sp, sp, #0x30
  40e648:	ret

000000000040e64c <jsonw_null_field@@Base>:
  40e64c:	sub	sp, sp, #0x20
  40e650:	stp	x29, x30, [sp, #16]
  40e654:	add	x29, sp, #0x10
  40e658:	str	x0, [sp, #8]
  40e65c:	str	x1, [sp]
  40e660:	ldr	x0, [sp, #8]
  40e664:	ldr	x1, [sp]
  40e668:	bl	40db14 <jsonw_name@@Base>
  40e66c:	ldr	x0, [sp, #8]
  40e670:	bl	40e118 <jsonw_null@@Base>
  40e674:	ldp	x29, x30, [sp, #16]
  40e678:	add	sp, sp, #0x20
  40e67c:	ret
  40e680:	sub	sp, sp, #0x20
  40e684:	stp	x29, x30, [sp, #16]
  40e688:	add	x29, sp, #0x10
  40e68c:	str	x0, [sp, #8]
  40e690:	str	wzr, [sp, #4]
  40e694:	ldr	w8, [sp, #4]
  40e698:	ldr	x9, [sp, #8]
  40e69c:	ldr	w10, [x9, #8]
  40e6a0:	cmp	w8, w10
  40e6a4:	b.cs	40e6cc <jsonw_null_field@@Base+0x80>  // b.hs, b.nlast
  40e6a8:	ldr	x8, [sp, #8]
  40e6ac:	ldr	x1, [x8]
  40e6b0:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e6b4:	add	x0, x0, #0xf4c
  40e6b8:	bl	404e80 <fputs@plt>
  40e6bc:	ldr	w8, [sp, #4]
  40e6c0:	add	w8, w8, #0x1
  40e6c4:	str	w8, [sp, #4]
  40e6c8:	b	40e694 <jsonw_null_field@@Base+0x48>
  40e6cc:	ldp	x29, x30, [sp, #16]
  40e6d0:	add	sp, sp, #0x20
  40e6d4:	ret

000000000040e6d8 <nl_dump_ext_ack@@Base>:
  40e6d8:	sub	sp, sp, #0x10
  40e6dc:	mov	w8, wzr
  40e6e0:	str	x0, [sp, #8]
  40e6e4:	str	x1, [sp]
  40e6e8:	mov	w0, w8
  40e6ec:	add	sp, sp, #0x10
  40e6f0:	ret

000000000040e6f4 <nl_dump_ext_ack_done@@Base>:
  40e6f4:	sub	sp, sp, #0x10
  40e6f8:	mov	w8, wzr
  40e6fc:	str	x0, [sp, #8]
  40e700:	str	w1, [sp, #4]
  40e704:	mov	w0, w8
  40e708:	add	sp, sp, #0x10
  40e70c:	ret

000000000040e710 <rtnl_set_strict_dump@@Base>:
  40e710:	sub	sp, sp, #0x20
  40e714:	stp	x29, x30, [sp, #16]
  40e718:	add	x29, sp, #0x10
  40e71c:	mov	w8, #0x1                   	// #1
  40e720:	mov	w1, #0x10e                 	// #270
  40e724:	mov	w2, #0xc                   	// #12
  40e728:	mov	w4, #0x4                   	// #4
  40e72c:	add	x3, sp, #0x4
  40e730:	str	x0, [sp, #8]
  40e734:	str	w8, [sp, #4]
  40e738:	ldr	x9, [sp, #8]
  40e73c:	ldr	w0, [x9]
  40e740:	bl	405010 <setsockopt@plt>
  40e744:	cmp	w0, #0x0
  40e748:	cset	w8, ge  // ge = tcont
  40e74c:	tbnz	w8, #0, 40e754 <rtnl_set_strict_dump@@Base+0x44>
  40e750:	b	40e764 <rtnl_set_strict_dump@@Base+0x54>
  40e754:	ldr	x8, [sp, #8]
  40e758:	ldr	w9, [x8, #48]
  40e75c:	orr	w9, w9, #0x4
  40e760:	str	w9, [x8, #48]
  40e764:	ldp	x29, x30, [sp, #16]
  40e768:	add	sp, sp, #0x20
  40e76c:	ret

000000000040e770 <rtnl_add_nl_group@@Base>:
  40e770:	sub	sp, sp, #0x20
  40e774:	stp	x29, x30, [sp, #16]
  40e778:	add	x29, sp, #0x10
  40e77c:	mov	w8, #0x10e                 	// #270
  40e780:	mov	w2, #0x1                   	// #1
  40e784:	mov	w4, #0x4                   	// #4
  40e788:	add	x3, sp, #0x4
  40e78c:	str	x0, [sp, #8]
  40e790:	str	w1, [sp, #4]
  40e794:	ldr	x9, [sp, #8]
  40e798:	ldr	w0, [x9]
  40e79c:	mov	w1, w8
  40e7a0:	bl	405010 <setsockopt@plt>
  40e7a4:	ldp	x29, x30, [sp, #16]
  40e7a8:	add	sp, sp, #0x20
  40e7ac:	ret

000000000040e7b0 <rtnl_close@@Base>:
  40e7b0:	sub	sp, sp, #0x20
  40e7b4:	stp	x29, x30, [sp, #16]
  40e7b8:	add	x29, sp, #0x10
  40e7bc:	str	x0, [sp, #8]
  40e7c0:	ldr	x8, [sp, #8]
  40e7c4:	ldr	w9, [x8]
  40e7c8:	cmp	w9, #0x0
  40e7cc:	cset	w9, lt  // lt = tstop
  40e7d0:	tbnz	w9, #0, 40e7ec <rtnl_close@@Base+0x3c>
  40e7d4:	ldr	x8, [sp, #8]
  40e7d8:	ldr	w0, [x8]
  40e7dc:	bl	405120 <close@plt>
  40e7e0:	ldr	x8, [sp, #8]
  40e7e4:	mov	w9, #0xffffffff            	// #-1
  40e7e8:	str	w9, [x8]
  40e7ec:	ldp	x29, x30, [sp, #16]
  40e7f0:	add	sp, sp, #0x20
  40e7f4:	ret

000000000040e7f8 <rtnl_open_byproto@@Base>:
  40e7f8:	sub	sp, sp, #0x50
  40e7fc:	stp	x29, x30, [sp, #64]
  40e800:	add	x29, sp, #0x40
  40e804:	mov	w8, #0x8000                	// #32768
  40e808:	mov	w9, #0x1                   	// #1
  40e80c:	mov	x10, #0x38                  	// #56
  40e810:	mov	w11, #0x10                  	// #16
  40e814:	mov	w12, #0x3                   	// #3
  40e818:	movk	w12, #0x8, lsl #16
  40e81c:	mov	w13, wzr
  40e820:	stur	x0, [x29, #-16]
  40e824:	stur	w1, [x29, #-20]
  40e828:	stur	w2, [x29, #-24]
  40e82c:	str	w8, [sp, #32]
  40e830:	str	w9, [sp, #28]
  40e834:	ldur	x0, [x29, #-16]
  40e838:	mov	w1, w13
  40e83c:	mov	x2, x10
  40e840:	str	w11, [sp, #4]
  40e844:	str	w12, [sp]
  40e848:	bl	405070 <memset@plt>
  40e84c:	ldur	w8, [x29, #-24]
  40e850:	ldur	x10, [x29, #-16]
  40e854:	str	w8, [x10, #36]
  40e858:	ldur	w2, [x29, #-24]
  40e85c:	ldr	w0, [sp, #4]
  40e860:	ldr	w1, [sp]
  40e864:	bl	405270 <socket@plt>
  40e868:	ldur	x10, [x29, #-16]
  40e86c:	str	w0, [x10]
  40e870:	ldur	x10, [x29, #-16]
  40e874:	ldr	w8, [x10]
  40e878:	cmp	w8, #0x0
  40e87c:	cset	w8, ge  // ge = tcont
  40e880:	tbnz	w8, #0, 40e89c <rtnl_open_byproto@@Base+0xa4>
  40e884:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e888:	add	x0, x0, #0xf9e
  40e88c:	bl	404ea0 <perror@plt>
  40e890:	mov	w8, #0xffffffff            	// #-1
  40e894:	stur	w8, [x29, #-4]
  40e898:	b	40ea80 <rtnl_open_byproto@@Base+0x288>
  40e89c:	ldur	x8, [x29, #-16]
  40e8a0:	ldr	w0, [x8]
  40e8a4:	mov	w1, #0x1                   	// #1
  40e8a8:	mov	w2, #0x7                   	// #7
  40e8ac:	add	x3, sp, #0x20
  40e8b0:	mov	w4, #0x4                   	// #4
  40e8b4:	bl	405010 <setsockopt@plt>
  40e8b8:	cmp	w0, #0x0
  40e8bc:	cset	w9, ge  // ge = tcont
  40e8c0:	tbnz	w9, #0, 40e8dc <rtnl_open_byproto@@Base+0xe4>
  40e8c4:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e8c8:	add	x0, x0, #0xfb9
  40e8cc:	bl	404ea0 <perror@plt>
  40e8d0:	mov	w8, #0xffffffff            	// #-1
  40e8d4:	stur	w8, [x29, #-4]
  40e8d8:	b	40ea80 <rtnl_open_byproto@@Base+0x288>
  40e8dc:	ldur	x8, [x29, #-16]
  40e8e0:	ldr	w0, [x8]
  40e8e4:	mov	w1, #0x1                   	// #1
  40e8e8:	mov	w2, #0x8                   	// #8
  40e8ec:	adrp	x3, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40e8f0:	ldr	x3, [x3, #4024]
  40e8f4:	mov	w4, #0x4                   	// #4
  40e8f8:	bl	405010 <setsockopt@plt>
  40e8fc:	cmp	w0, #0x0
  40e900:	cset	w9, ge  // ge = tcont
  40e904:	tbnz	w9, #0, 40e920 <rtnl_open_byproto@@Base+0x128>
  40e908:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e90c:	add	x0, x0, #0xfc3
  40e910:	bl	404ea0 <perror@plt>
  40e914:	mov	w8, #0xffffffff            	// #-1
  40e918:	stur	w8, [x29, #-4]
  40e91c:	b	40ea80 <rtnl_open_byproto@@Base+0x288>
  40e920:	ldur	x8, [x29, #-16]
  40e924:	ldr	w0, [x8]
  40e928:	mov	w1, #0x10e                 	// #270
  40e92c:	mov	w2, #0xb                   	// #11
  40e930:	add	x3, sp, #0x1c
  40e934:	mov	w4, #0x4                   	// #4
  40e938:	bl	405010 <setsockopt@plt>
  40e93c:	ldur	x8, [x29, #-16]
  40e940:	stur	xzr, [x8, #4]
  40e944:	str	wzr, [x8, #12]
  40e948:	ldur	x8, [x29, #-16]
  40e94c:	mov	w9, #0x10                  	// #16
  40e950:	strh	w9, [x8, #4]
  40e954:	ldur	w9, [x29, #-20]
  40e958:	ldur	x8, [x29, #-16]
  40e95c:	str	w9, [x8, #12]
  40e960:	ldur	x8, [x29, #-16]
  40e964:	ldr	w9, [x8]
  40e968:	ldur	x8, [x29, #-16]
  40e96c:	add	x8, x8, #0x4
  40e970:	str	x8, [sp, #16]
  40e974:	ldr	x1, [sp, #16]
  40e978:	mov	w0, w9
  40e97c:	mov	w2, #0xc                   	// #12
  40e980:	bl	404f10 <bind@plt>
  40e984:	cmp	w0, #0x0
  40e988:	cset	w9, ge  // ge = tcont
  40e98c:	tbnz	w9, #0, 40e9a8 <rtnl_open_byproto@@Base+0x1b0>
  40e990:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e994:	add	x0, x0, #0xfcd
  40e998:	bl	404ea0 <perror@plt>
  40e99c:	mov	w8, #0xffffffff            	// #-1
  40e9a0:	stur	w8, [x29, #-4]
  40e9a4:	b	40ea80 <rtnl_open_byproto@@Base+0x288>
  40e9a8:	sub	x2, x29, #0x1c
  40e9ac:	mov	w8, #0xc                   	// #12
  40e9b0:	stur	w8, [x29, #-28]
  40e9b4:	ldur	x9, [x29, #-16]
  40e9b8:	ldr	w0, [x9]
  40e9bc:	ldur	x9, [x29, #-16]
  40e9c0:	add	x9, x9, #0x4
  40e9c4:	str	x9, [sp, #8]
  40e9c8:	ldr	x1, [sp, #8]
  40e9cc:	bl	4053b0 <getsockname@plt>
  40e9d0:	cmp	w0, #0x0
  40e9d4:	cset	w8, ge  // ge = tcont
  40e9d8:	tbnz	w8, #0, 40e9f4 <rtnl_open_byproto@@Base+0x1fc>
  40e9dc:	adrp	x0, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40e9e0:	add	x0, x0, #0xfe8
  40e9e4:	bl	404ea0 <perror@plt>
  40e9e8:	mov	w8, #0xffffffff            	// #-1
  40e9ec:	stur	w8, [x29, #-4]
  40e9f0:	b	40ea80 <rtnl_open_byproto@@Base+0x288>
  40e9f4:	ldur	w8, [x29, #-28]
  40e9f8:	mov	w9, w8
  40e9fc:	cmp	x9, #0xc
  40ea00:	b.eq	40ea2c <rtnl_open_byproto@@Base+0x234>  // b.none
  40ea04:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40ea08:	ldr	x8, [x8, #3992]
  40ea0c:	ldr	x0, [x8]
  40ea10:	ldur	w2, [x29, #-28]
  40ea14:	adrp	x1, 412000 <__parse_rtattr_nested_compat@@Base+0x668>
  40ea18:	add	x1, x1, #0xffb
  40ea1c:	bl	4053c0 <fprintf@plt>
  40ea20:	mov	w9, #0xffffffff            	// #-1
  40ea24:	stur	w9, [x29, #-4]
  40ea28:	b	40ea80 <rtnl_open_byproto@@Base+0x288>
  40ea2c:	ldur	x8, [x29, #-16]
  40ea30:	ldrh	w9, [x8, #4]
  40ea34:	cmp	w9, #0x10
  40ea38:	b.eq	40ea68 <rtnl_open_byproto@@Base+0x270>  // b.none
  40ea3c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40ea40:	ldr	x8, [x8, #3992]
  40ea44:	ldr	x0, [x8]
  40ea48:	ldur	x8, [x29, #-16]
  40ea4c:	ldrh	w2, [x8, #4]
  40ea50:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  40ea54:	add	x1, x1, #0x14
  40ea58:	bl	4053c0 <fprintf@plt>
  40ea5c:	mov	w9, #0xffffffff            	// #-1
  40ea60:	stur	w9, [x29, #-4]
  40ea64:	b	40ea80 <rtnl_open_byproto@@Base+0x288>
  40ea68:	mov	x8, xzr
  40ea6c:	mov	x0, x8
  40ea70:	bl	404fe0 <time@plt>
  40ea74:	ldur	x8, [x29, #-16]
  40ea78:	str	w0, [x8, #28]
  40ea7c:	stur	wzr, [x29, #-4]
  40ea80:	ldur	w0, [x29, #-4]
  40ea84:	ldp	x29, x30, [sp, #64]
  40ea88:	add	sp, sp, #0x50
  40ea8c:	ret

000000000040ea90 <rtnl_open@@Base>:
  40ea90:	sub	sp, sp, #0x20
  40ea94:	stp	x29, x30, [sp, #16]
  40ea98:	add	x29, sp, #0x10
  40ea9c:	mov	w8, wzr
  40eaa0:	str	x0, [sp, #8]
  40eaa4:	str	w1, [sp, #4]
  40eaa8:	ldr	x0, [sp, #8]
  40eaac:	ldr	w1, [sp, #4]
  40eab0:	mov	w2, w8
  40eab4:	bl	40e7f8 <rtnl_open_byproto@@Base>
  40eab8:	ldp	x29, x30, [sp, #16]
  40eabc:	add	sp, sp, #0x20
  40eac0:	ret

000000000040eac4 <rtnl_nexthopdump_req@@Base>:
  40eac4:	sub	sp, sp, #0xf0
  40eac8:	stp	x29, x30, [sp, #224]
  40eacc:	add	x29, sp, #0xe0
  40ead0:	sub	x8, x29, #0x20
  40ead4:	mov	x9, #0x98                  	// #152
  40ead8:	mov	w10, #0x18                  	// #24
  40eadc:	mov	w11, #0x6a                  	// #106
  40eae0:	mov	w12, #0x301                 	// #769
  40eae4:	mov	w13, wzr
  40eae8:	add	x14, sp, #0x28
  40eaec:	str	x0, [x8, #16]
  40eaf0:	stur	w1, [x29, #-20]
  40eaf4:	str	x2, [x8]
  40eaf8:	mov	x0, x14
  40eafc:	mov	w1, w13
  40eb00:	mov	x2, x9
  40eb04:	str	x8, [sp, #24]
  40eb08:	str	w10, [sp, #20]
  40eb0c:	str	w11, [sp, #16]
  40eb10:	str	w12, [sp, #12]
  40eb14:	str	x14, [sp]
  40eb18:	bl	405070 <memset@plt>
  40eb1c:	ldr	w10, [sp, #20]
  40eb20:	str	w10, [sp, #40]
  40eb24:	ldr	w11, [sp, #16]
  40eb28:	ldr	x8, [sp]
  40eb2c:	strh	w11, [x8, #4]
  40eb30:	ldr	w12, [sp, #12]
  40eb34:	strh	w12, [x8, #6]
  40eb38:	ldr	x9, [sp, #24]
  40eb3c:	ldr	x14, [x9, #16]
  40eb40:	ldr	w13, [x14, #28]
  40eb44:	add	w13, w13, #0x1
  40eb48:	str	w13, [x14, #28]
  40eb4c:	ldr	x14, [x9, #16]
  40eb50:	str	w13, [x14, #32]
  40eb54:	str	w13, [sp, #48]
  40eb58:	ldur	w13, [x29, #-20]
  40eb5c:	strb	w13, [x8, #16]
  40eb60:	ldr	x14, [x9]
  40eb64:	cbz	x14, 40eb94 <rtnl_nexthopdump_req@@Base+0xd0>
  40eb68:	ldr	x8, [sp, #24]
  40eb6c:	ldr	x9, [x8]
  40eb70:	add	x0, sp, #0x28
  40eb74:	mov	w1, #0x98                  	// #152
  40eb78:	blr	x9
  40eb7c:	str	w0, [sp, #36]
  40eb80:	ldr	w10, [sp, #36]
  40eb84:	cbz	w10, 40eb94 <rtnl_nexthopdump_req@@Base+0xd0>
  40eb88:	ldr	w8, [sp, #36]
  40eb8c:	stur	w8, [x29, #-4]
  40eb90:	b	40ebb8 <rtnl_nexthopdump_req@@Base+0xf4>
  40eb94:	ldr	x8, [sp, #24]
  40eb98:	ldr	x9, [x8, #16]
  40eb9c:	ldr	w0, [x9]
  40eba0:	add	x1, sp, #0x28
  40eba4:	mov	x2, #0x98                  	// #152
  40eba8:	mov	w10, wzr
  40ebac:	mov	w3, w10
  40ebb0:	bl	405220 <send@plt>
  40ebb4:	stur	w0, [x29, #-4]
  40ebb8:	ldur	w0, [x29, #-4]
  40ebbc:	ldp	x29, x30, [sp, #224]
  40ebc0:	add	sp, sp, #0xf0
  40ebc4:	ret

000000000040ebc8 <rtnl_addrdump_req@@Base>:
  40ebc8:	sub	sp, sp, #0xf0
  40ebcc:	stp	x29, x30, [sp, #224]
  40ebd0:	add	x29, sp, #0xe0
  40ebd4:	sub	x8, x29, #0x20
  40ebd8:	mov	x9, #0x98                  	// #152
  40ebdc:	mov	w10, #0x18                  	// #24
  40ebe0:	mov	w11, #0x16                  	// #22
  40ebe4:	mov	w12, #0x301                 	// #769
  40ebe8:	mov	w13, wzr
  40ebec:	add	x14, sp, #0x28
  40ebf0:	str	x0, [x8, #16]
  40ebf4:	stur	w1, [x29, #-20]
  40ebf8:	str	x2, [x8]
  40ebfc:	mov	x0, x14
  40ec00:	mov	w1, w13
  40ec04:	mov	x2, x9
  40ec08:	str	x8, [sp, #24]
  40ec0c:	str	w10, [sp, #20]
  40ec10:	str	w11, [sp, #16]
  40ec14:	str	w12, [sp, #12]
  40ec18:	str	x14, [sp]
  40ec1c:	bl	405070 <memset@plt>
  40ec20:	ldr	w10, [sp, #20]
  40ec24:	str	w10, [sp, #40]
  40ec28:	ldr	w11, [sp, #16]
  40ec2c:	ldr	x8, [sp]
  40ec30:	strh	w11, [x8, #4]
  40ec34:	ldr	w12, [sp, #12]
  40ec38:	strh	w12, [x8, #6]
  40ec3c:	ldr	x9, [sp, #24]
  40ec40:	ldr	x14, [x9, #16]
  40ec44:	ldr	w13, [x14, #28]
  40ec48:	add	w13, w13, #0x1
  40ec4c:	str	w13, [x14, #28]
  40ec50:	ldr	x14, [x9, #16]
  40ec54:	str	w13, [x14, #32]
  40ec58:	str	w13, [sp, #48]
  40ec5c:	ldur	w13, [x29, #-20]
  40ec60:	strb	w13, [x8, #16]
  40ec64:	ldr	x14, [x9]
  40ec68:	cbz	x14, 40ec98 <rtnl_addrdump_req@@Base+0xd0>
  40ec6c:	ldr	x8, [sp, #24]
  40ec70:	ldr	x9, [x8]
  40ec74:	add	x0, sp, #0x28
  40ec78:	mov	w1, #0x98                  	// #152
  40ec7c:	blr	x9
  40ec80:	str	w0, [sp, #36]
  40ec84:	ldr	w10, [sp, #36]
  40ec88:	cbz	w10, 40ec98 <rtnl_addrdump_req@@Base+0xd0>
  40ec8c:	ldr	w8, [sp, #36]
  40ec90:	stur	w8, [x29, #-4]
  40ec94:	b	40ecbc <rtnl_addrdump_req@@Base+0xf4>
  40ec98:	ldr	x8, [sp, #24]
  40ec9c:	ldr	x9, [x8, #16]
  40eca0:	ldr	w0, [x9]
  40eca4:	add	x1, sp, #0x28
  40eca8:	mov	x2, #0x98                  	// #152
  40ecac:	mov	w10, wzr
  40ecb0:	mov	w3, w10
  40ecb4:	bl	405220 <send@plt>
  40ecb8:	stur	w0, [x29, #-4]
  40ecbc:	ldur	w0, [x29, #-4]
  40ecc0:	ldp	x29, x30, [sp, #224]
  40ecc4:	add	sp, sp, #0xf0
  40ecc8:	ret

000000000040eccc <rtnl_addrlbldump_req@@Base>:
  40eccc:	sub	sp, sp, #0x40
  40ecd0:	stp	x29, x30, [sp, #48]
  40ecd4:	add	x29, sp, #0x30
  40ecd8:	mov	w8, #0x1c                  	// #28
  40ecdc:	mov	w9, #0x4a                  	// #74
  40ece0:	mov	w10, #0x301                 	// #769
  40ece4:	mov	w11, wzr
  40ece8:	mov	w12, #0x0                   	// #0
  40ecec:	mov	x2, #0x1c                  	// #28
  40ecf0:	add	x13, sp, #0x8
  40ecf4:	stur	x0, [x29, #-8]
  40ecf8:	stur	w1, [x29, #-12]
  40ecfc:	str	w8, [sp, #8]
  40ed00:	strh	w9, [x13, #4]
  40ed04:	strh	w10, [x13, #6]
  40ed08:	ldur	x14, [x29, #-8]
  40ed0c:	ldr	w8, [x14, #28]
  40ed10:	add	w8, w8, #0x1
  40ed14:	str	w8, [x14, #28]
  40ed18:	ldur	x14, [x29, #-8]
  40ed1c:	str	w8, [x14, #32]
  40ed20:	str	w8, [sp, #16]
  40ed24:	str	wzr, [sp, #20]
  40ed28:	ldur	w8, [x29, #-12]
  40ed2c:	strb	w8, [x13, #16]
  40ed30:	strb	w12, [x13, #17]
  40ed34:	strb	w12, [x13, #18]
  40ed38:	strb	w12, [x13, #19]
  40ed3c:	str	wzr, [sp, #28]
  40ed40:	str	wzr, [sp, #32]
  40ed44:	ldur	x14, [x29, #-8]
  40ed48:	ldr	w0, [x14]
  40ed4c:	mov	x1, x13
  40ed50:	mov	w3, w11
  40ed54:	bl	405220 <send@plt>
  40ed58:	ldp	x29, x30, [sp, #48]
  40ed5c:	add	sp, sp, #0x40
  40ed60:	ret

000000000040ed64 <rtnl_routedump_req@@Base>:
  40ed64:	sub	sp, sp, #0xf0
  40ed68:	stp	x29, x30, [sp, #224]
  40ed6c:	add	x29, sp, #0xe0
  40ed70:	mov	x8, #0x9c                  	// #156
  40ed74:	mov	w9, #0x1c                  	// #28
  40ed78:	mov	w10, #0x1a                  	// #26
  40ed7c:	mov	w11, #0x301                 	// #769
  40ed80:	mov	w12, wzr
  40ed84:	add	x13, sp, #0x24
  40ed88:	stur	x0, [x29, #-16]
  40ed8c:	stur	w1, [x29, #-20]
  40ed90:	stur	x2, [x29, #-32]
  40ed94:	mov	x0, x13
  40ed98:	mov	w1, w12
  40ed9c:	mov	x2, x8
  40eda0:	str	w9, [sp, #28]
  40eda4:	str	w10, [sp, #24]
  40eda8:	str	w11, [sp, #20]
  40edac:	str	x13, [sp, #8]
  40edb0:	bl	405070 <memset@plt>
  40edb4:	ldr	w9, [sp, #28]
  40edb8:	str	w9, [sp, #36]
  40edbc:	ldr	w10, [sp, #24]
  40edc0:	ldr	x8, [sp, #8]
  40edc4:	strh	w10, [x8, #4]
  40edc8:	ldr	w11, [sp, #20]
  40edcc:	strh	w11, [x8, #6]
  40edd0:	ldur	x13, [x29, #-16]
  40edd4:	ldr	w12, [x13, #28]
  40edd8:	add	w12, w12, #0x1
  40eddc:	str	w12, [x13, #28]
  40ede0:	ldur	x13, [x29, #-16]
  40ede4:	str	w12, [x13, #32]
  40ede8:	str	w12, [sp, #44]
  40edec:	ldur	w12, [x29, #-20]
  40edf0:	strb	w12, [x8, #16]
  40edf4:	ldur	x13, [x29, #-32]
  40edf8:	cbz	x13, 40ee24 <rtnl_routedump_req@@Base+0xc0>
  40edfc:	ldur	x8, [x29, #-32]
  40ee00:	add	x0, sp, #0x24
  40ee04:	mov	w1, #0x9c                  	// #156
  40ee08:	blr	x8
  40ee0c:	str	w0, [sp, #32]
  40ee10:	ldr	w9, [sp, #32]
  40ee14:	cbz	w9, 40ee24 <rtnl_routedump_req@@Base+0xc0>
  40ee18:	ldr	w8, [sp, #32]
  40ee1c:	stur	w8, [x29, #-4]
  40ee20:	b	40ee44 <rtnl_routedump_req@@Base+0xe0>
  40ee24:	ldur	x8, [x29, #-16]
  40ee28:	ldr	w0, [x8]
  40ee2c:	add	x1, sp, #0x24
  40ee30:	mov	x2, #0x9c                  	// #156
  40ee34:	mov	w9, wzr
  40ee38:	mov	w3, w9
  40ee3c:	bl	405220 <send@plt>
  40ee40:	stur	w0, [x29, #-4]
  40ee44:	ldur	w0, [x29, #-4]
  40ee48:	ldp	x29, x30, [sp, #224]
  40ee4c:	add	sp, sp, #0xf0
  40ee50:	ret

000000000040ee54 <rtnl_ruledump_req@@Base>:
  40ee54:	sub	sp, sp, #0x40
  40ee58:	stp	x29, x30, [sp, #48]
  40ee5c:	add	x29, sp, #0x30
  40ee60:	mov	w8, #0x1c                  	// #28
  40ee64:	mov	w9, #0x22                  	// #34
  40ee68:	mov	w10, #0x301                 	// #769
  40ee6c:	mov	w11, wzr
  40ee70:	mov	w12, #0x0                   	// #0
  40ee74:	mov	x2, #0x1c                  	// #28
  40ee78:	add	x13, sp, #0x8
  40ee7c:	stur	x0, [x29, #-8]
  40ee80:	stur	w1, [x29, #-12]
  40ee84:	str	w8, [sp, #8]
  40ee88:	strh	w9, [x13, #4]
  40ee8c:	strh	w10, [x13, #6]
  40ee90:	ldur	x14, [x29, #-8]
  40ee94:	ldr	w8, [x14, #28]
  40ee98:	add	w8, w8, #0x1
  40ee9c:	str	w8, [x14, #28]
  40eea0:	ldur	x14, [x29, #-8]
  40eea4:	str	w8, [x14, #32]
  40eea8:	str	w8, [sp, #16]
  40eeac:	str	wzr, [sp, #20]
  40eeb0:	ldur	w8, [x29, #-12]
  40eeb4:	strb	w8, [x13, #16]
  40eeb8:	strb	w12, [x13, #17]
  40eebc:	strb	w12, [x13, #18]
  40eec0:	strb	w12, [x13, #19]
  40eec4:	strb	w12, [x13, #20]
  40eec8:	strb	w12, [x13, #21]
  40eecc:	strb	w12, [x13, #22]
  40eed0:	strb	w12, [x13, #23]
  40eed4:	str	wzr, [sp, #32]
  40eed8:	ldur	x14, [x29, #-8]
  40eedc:	ldr	w0, [x14]
  40eee0:	mov	x1, x13
  40eee4:	mov	w3, w11
  40eee8:	bl	405220 <send@plt>
  40eeec:	ldp	x29, x30, [sp, #48]
  40eef0:	add	sp, sp, #0x40
  40eef4:	ret

000000000040eef8 <rtnl_neighdump_req@@Base>:
  40eef8:	sub	sp, sp, #0x180
  40eefc:	stp	x29, x30, [sp, #352]
  40ef00:	str	x28, [sp, #368]
  40ef04:	add	x29, sp, #0x160
  40ef08:	mov	x8, #0x11c                 	// #284
  40ef0c:	mov	w9, #0x1c                  	// #28
  40ef10:	mov	w10, #0x1e                  	// #30
  40ef14:	mov	w11, #0x301                 	// #769
  40ef18:	mov	w12, wzr
  40ef1c:	add	x13, sp, #0x24
  40ef20:	stur	x0, [x29, #-16]
  40ef24:	stur	w1, [x29, #-20]
  40ef28:	stur	x2, [x29, #-32]
  40ef2c:	mov	x0, x13
  40ef30:	mov	w1, w12
  40ef34:	mov	x2, x8
  40ef38:	str	w9, [sp, #28]
  40ef3c:	str	w10, [sp, #24]
  40ef40:	str	w11, [sp, #20]
  40ef44:	str	x13, [sp, #8]
  40ef48:	bl	405070 <memset@plt>
  40ef4c:	ldr	w9, [sp, #28]
  40ef50:	str	w9, [sp, #36]
  40ef54:	ldr	w10, [sp, #24]
  40ef58:	ldr	x8, [sp, #8]
  40ef5c:	strh	w10, [x8, #4]
  40ef60:	ldr	w11, [sp, #20]
  40ef64:	strh	w11, [x8, #6]
  40ef68:	ldur	x13, [x29, #-16]
  40ef6c:	ldr	w12, [x13, #28]
  40ef70:	add	w12, w12, #0x1
  40ef74:	str	w12, [x13, #28]
  40ef78:	ldur	x13, [x29, #-16]
  40ef7c:	str	w12, [x13, #32]
  40ef80:	str	w12, [sp, #44]
  40ef84:	ldur	w12, [x29, #-20]
  40ef88:	strb	w12, [x8, #16]
  40ef8c:	ldur	x13, [x29, #-32]
  40ef90:	cbz	x13, 40efbc <rtnl_neighdump_req@@Base+0xc4>
  40ef94:	ldur	x8, [x29, #-32]
  40ef98:	add	x0, sp, #0x24
  40ef9c:	mov	w1, #0x11c                 	// #284
  40efa0:	blr	x8
  40efa4:	str	w0, [sp, #32]
  40efa8:	ldr	w9, [sp, #32]
  40efac:	cbz	w9, 40efbc <rtnl_neighdump_req@@Base+0xc4>
  40efb0:	ldr	w8, [sp, #32]
  40efb4:	stur	w8, [x29, #-4]
  40efb8:	b	40efdc <rtnl_neighdump_req@@Base+0xe4>
  40efbc:	ldur	x8, [x29, #-16]
  40efc0:	ldr	w0, [x8]
  40efc4:	add	x1, sp, #0x24
  40efc8:	mov	x2, #0x11c                 	// #284
  40efcc:	mov	w9, wzr
  40efd0:	mov	w3, w9
  40efd4:	bl	405220 <send@plt>
  40efd8:	stur	w0, [x29, #-4]
  40efdc:	ldur	w0, [x29, #-4]
  40efe0:	ldr	x28, [sp, #368]
  40efe4:	ldp	x29, x30, [sp, #352]
  40efe8:	add	sp, sp, #0x180
  40efec:	ret

000000000040eff0 <rtnl_neightbldump_req@@Base>:
  40eff0:	sub	sp, sp, #0x30
  40eff4:	stp	x29, x30, [sp, #32]
  40eff8:	add	x29, sp, #0x20
  40effc:	mov	w8, #0x14                  	// #20
  40f000:	mov	w9, #0x42                  	// #66
  40f004:	mov	w10, #0x301                 	// #769
  40f008:	mov	w11, wzr
  40f00c:	mov	w12, #0x0                   	// #0
  40f010:	mov	w13, #0x0                   	// #0
  40f014:	mov	x2, #0x14                  	// #20
  40f018:	mov	x14, sp
  40f01c:	stur	x0, [x29, #-8]
  40f020:	stur	w1, [x29, #-12]
  40f024:	str	w8, [sp]
  40f028:	strh	w9, [x14, #4]
  40f02c:	strh	w10, [x14, #6]
  40f030:	ldur	x15, [x29, #-8]
  40f034:	ldr	w8, [x15, #28]
  40f038:	add	w8, w8, #0x1
  40f03c:	str	w8, [x15, #28]
  40f040:	ldur	x15, [x29, #-8]
  40f044:	str	w8, [x15, #32]
  40f048:	str	w8, [sp, #8]
  40f04c:	str	wzr, [sp, #12]
  40f050:	ldur	w8, [x29, #-12]
  40f054:	strb	w8, [x14, #16]
  40f058:	strb	w12, [x14, #17]
  40f05c:	strh	w13, [x14, #18]
  40f060:	ldur	x15, [x29, #-8]
  40f064:	ldr	w0, [x15]
  40f068:	mov	x1, x14
  40f06c:	mov	w3, w11
  40f070:	bl	405220 <send@plt>
  40f074:	ldp	x29, x30, [sp, #32]
  40f078:	add	sp, sp, #0x30
  40f07c:	ret

000000000040f080 <rtnl_mdbdump_req@@Base>:
  40f080:	sub	sp, sp, #0x40
  40f084:	stp	x29, x30, [sp, #48]
  40f088:	add	x29, sp, #0x30
  40f08c:	mov	w8, #0x18                  	// #24
  40f090:	mov	w9, #0x56                  	// #86
  40f094:	mov	w10, #0x301                 	// #769
  40f098:	mov	w11, wzr
  40f09c:	mov	x2, #0x18                  	// #24
  40f0a0:	add	x12, sp, #0xc
  40f0a4:	stur	x0, [x29, #-8]
  40f0a8:	stur	w1, [x29, #-12]
  40f0ac:	str	w8, [sp, #12]
  40f0b0:	strh	w9, [x12, #4]
  40f0b4:	strh	w10, [x12, #6]
  40f0b8:	ldur	x13, [x29, #-8]
  40f0bc:	ldr	w8, [x13, #28]
  40f0c0:	add	w8, w8, #0x1
  40f0c4:	str	w8, [x13, #28]
  40f0c8:	ldur	x13, [x29, #-8]
  40f0cc:	str	w8, [x13, #32]
  40f0d0:	str	w8, [sp, #20]
  40f0d4:	str	wzr, [sp, #24]
  40f0d8:	ldur	w8, [x29, #-12]
  40f0dc:	strb	w8, [x12, #16]
  40f0e0:	str	wzr, [sp, #32]
  40f0e4:	ldur	x13, [x29, #-8]
  40f0e8:	ldr	w0, [x13]
  40f0ec:	mov	x1, x12
  40f0f0:	mov	w3, w11
  40f0f4:	bl	405220 <send@plt>
  40f0f8:	ldp	x29, x30, [sp, #48]
  40f0fc:	add	sp, sp, #0x40
  40f100:	ret

000000000040f104 <rtnl_netconfdump_req@@Base>:
  40f104:	sub	sp, sp, #0x30
  40f108:	stp	x29, x30, [sp, #32]
  40f10c:	add	x29, sp, #0x20
  40f110:	mov	w8, #0x14                  	// #20
  40f114:	mov	w9, #0x52                  	// #82
  40f118:	mov	w10, #0x301                 	// #769
  40f11c:	mov	w11, wzr
  40f120:	mov	x2, #0x14                  	// #20
  40f124:	mov	x12, sp
  40f128:	stur	x0, [x29, #-8]
  40f12c:	stur	w1, [x29, #-12]
  40f130:	str	w8, [sp]
  40f134:	strh	w9, [x12, #4]
  40f138:	strh	w10, [x12, #6]
  40f13c:	ldur	x13, [x29, #-8]
  40f140:	ldr	w8, [x13, #28]
  40f144:	add	w8, w8, #0x1
  40f148:	str	w8, [x13, #28]
  40f14c:	ldur	x13, [x29, #-8]
  40f150:	str	w8, [x13, #32]
  40f154:	str	w8, [sp, #8]
  40f158:	str	wzr, [sp, #12]
  40f15c:	ldur	w8, [x29, #-12]
  40f160:	strb	w8, [x12, #16]
  40f164:	ldur	x13, [x29, #-8]
  40f168:	ldr	w0, [x13]
  40f16c:	mov	x1, x12
  40f170:	mov	w3, w11
  40f174:	bl	405220 <send@plt>
  40f178:	ldp	x29, x30, [sp, #32]
  40f17c:	add	sp, sp, #0x30
  40f180:	ret

000000000040f184 <rtnl_nsiddump_req_filter_fn@@Base>:
  40f184:	stp	x29, x30, [sp, #-32]!
  40f188:	str	x28, [sp, #16]
  40f18c:	mov	x29, sp
  40f190:	sub	sp, sp, #0x450
  40f194:	mov	x8, #0x414                 	// #1044
  40f198:	mov	w9, #0x14                  	// #20
  40f19c:	mov	w10, #0x5a                  	// #90
  40f1a0:	mov	w11, #0x301                 	// #769
  40f1a4:	mov	w12, wzr
  40f1a8:	add	x13, sp, #0x1c
  40f1ac:	stur	x0, [x29, #-16]
  40f1b0:	stur	w1, [x29, #-20]
  40f1b4:	stur	x2, [x29, #-32]
  40f1b8:	mov	x0, x13
  40f1bc:	mov	w1, w12
  40f1c0:	mov	x2, x8
  40f1c4:	str	w9, [sp, #20]
  40f1c8:	str	w10, [sp, #16]
  40f1cc:	str	w11, [sp, #12]
  40f1d0:	str	x13, [sp]
  40f1d4:	bl	405070 <memset@plt>
  40f1d8:	ldr	w9, [sp, #20]
  40f1dc:	str	w9, [sp, #28]
  40f1e0:	ldr	w10, [sp, #16]
  40f1e4:	ldr	x8, [sp]
  40f1e8:	strh	w10, [x8, #4]
  40f1ec:	ldr	w11, [sp, #12]
  40f1f0:	strh	w11, [x8, #6]
  40f1f4:	ldur	x13, [x29, #-16]
  40f1f8:	ldr	w12, [x13, #28]
  40f1fc:	add	w12, w12, #0x1
  40f200:	str	w12, [x13, #28]
  40f204:	ldur	x13, [x29, #-16]
  40f208:	str	w12, [x13, #32]
  40f20c:	str	w12, [sp, #36]
  40f210:	ldur	w12, [x29, #-20]
  40f214:	strb	w12, [x8, #16]
  40f218:	ldur	x13, [x29, #-32]
  40f21c:	cbnz	x13, 40f22c <rtnl_nsiddump_req_filter_fn@@Base+0xa8>
  40f220:	mov	w8, #0xffffffea            	// #-22
  40f224:	stur	w8, [x29, #-4]
  40f228:	b	40f278 <rtnl_nsiddump_req_filter_fn@@Base+0xf4>
  40f22c:	ldur	x8, [x29, #-32]
  40f230:	add	x0, sp, #0x1c
  40f234:	mov	w1, #0x414                 	// #1044
  40f238:	blr	x8
  40f23c:	str	w0, [sp, #24]
  40f240:	ldr	w9, [sp, #24]
  40f244:	cbz	w9, 40f254 <rtnl_nsiddump_req_filter_fn@@Base+0xd0>
  40f248:	ldr	w8, [sp, #24]
  40f24c:	stur	w8, [x29, #-4]
  40f250:	b	40f278 <rtnl_nsiddump_req_filter_fn@@Base+0xf4>
  40f254:	ldur	x8, [x29, #-16]
  40f258:	ldr	w0, [x8]
  40f25c:	add	x1, sp, #0x1c
  40f260:	ldr	w9, [sp, #28]
  40f264:	mov	w2, w9
  40f268:	mov	w9, wzr
  40f26c:	mov	w3, w9
  40f270:	bl	405220 <send@plt>
  40f274:	stur	w0, [x29, #-4]
  40f278:	ldur	w0, [x29, #-4]
  40f27c:	add	sp, sp, #0x450
  40f280:	ldr	x28, [sp, #16]
  40f284:	ldp	x29, x30, [sp], #32
  40f288:	ret

000000000040f28c <rtnl_linkdump_req@@Base>:
  40f28c:	sub	sp, sp, #0x30
  40f290:	stp	x29, x30, [sp, #32]
  40f294:	add	x29, sp, #0x20
  40f298:	str	x0, [sp, #16]
  40f29c:	str	w1, [sp, #12]
  40f2a0:	ldr	w8, [sp, #12]
  40f2a4:	cbnz	w8, 40f2c0 <rtnl_linkdump_req@@Base+0x34>
  40f2a8:	ldr	x0, [sp, #16]
  40f2ac:	ldr	w1, [sp, #12]
  40f2b0:	mov	w2, #0x1                   	// #1
  40f2b4:	bl	40f2e0 <rtnl_linkdump_req_filter@@Base>
  40f2b8:	stur	w0, [x29, #-4]
  40f2bc:	b	40f2d0 <rtnl_linkdump_req@@Base+0x44>
  40f2c0:	ldr	x0, [sp, #16]
  40f2c4:	ldr	w1, [sp, #12]
  40f2c8:	bl	40f3c8 <rtnl_linkdump_req_filter@@Base+0xe8>
  40f2cc:	stur	w0, [x29, #-4]
  40f2d0:	ldur	w0, [x29, #-4]
  40f2d4:	ldp	x29, x30, [sp, #32]
  40f2d8:	add	sp, sp, #0x30
  40f2dc:	ret

000000000040f2e0 <rtnl_linkdump_req_filter@@Base>:
  40f2e0:	sub	sp, sp, #0x50
  40f2e4:	stp	x29, x30, [sp, #64]
  40f2e8:	add	x29, sp, #0x40
  40f2ec:	stur	x0, [x29, #-16]
  40f2f0:	stur	w1, [x29, #-20]
  40f2f4:	stur	w2, [x29, #-24]
  40f2f8:	ldur	w8, [x29, #-20]
  40f2fc:	cbz	w8, 40f30c <rtnl_linkdump_req_filter@@Base+0x2c>
  40f300:	ldur	w8, [x29, #-20]
  40f304:	cmp	w8, #0x7
  40f308:	b.ne	40f3a8 <rtnl_linkdump_req_filter@@Base+0xc8>  // b.any
  40f30c:	mov	x8, sp
  40f310:	mov	w9, #0x28                  	// #40
  40f314:	str	w9, [sp]
  40f318:	mov	w9, #0x12                  	// #18
  40f31c:	strh	w9, [x8, #4]
  40f320:	mov	w9, #0x301                 	// #769
  40f324:	strh	w9, [x8, #6]
  40f328:	ldur	x10, [x29, #-16]
  40f32c:	ldr	w9, [x10, #28]
  40f330:	add	w9, w9, #0x1
  40f334:	str	w9, [x10, #28]
  40f338:	ldur	x10, [x29, #-16]
  40f33c:	str	w9, [x10, #32]
  40f340:	str	w9, [sp, #8]
  40f344:	mov	w9, wzr
  40f348:	str	wzr, [sp, #12]
  40f34c:	ldur	w11, [x29, #-20]
  40f350:	strb	w11, [x8, #16]
  40f354:	mov	w11, #0x0                   	// #0
  40f358:	strb	w11, [x8, #17]
  40f35c:	mov	w11, #0x0                   	// #0
  40f360:	strh	w11, [x8, #18]
  40f364:	str	wzr, [sp, #20]
  40f368:	str	wzr, [sp, #24]
  40f36c:	str	wzr, [sp, #28]
  40f370:	mov	w11, #0x8                   	// #8
  40f374:	strh	w11, [x8, #32]
  40f378:	mov	w11, #0x1d                  	// #29
  40f37c:	strh	w11, [x8, #34]
  40f380:	ldur	w11, [x29, #-24]
  40f384:	str	w11, [sp, #36]
  40f388:	ldur	x10, [x29, #-16]
  40f38c:	ldr	w0, [x10]
  40f390:	mov	x1, x8
  40f394:	mov	x2, #0x28                  	// #40
  40f398:	mov	w3, w9
  40f39c:	bl	405220 <send@plt>
  40f3a0:	stur	w0, [x29, #-4]
  40f3a4:	b	40f3b8 <rtnl_linkdump_req_filter@@Base+0xd8>
  40f3a8:	ldur	x0, [x29, #-16]
  40f3ac:	ldur	w1, [x29, #-20]
  40f3b0:	bl	40f3c8 <rtnl_linkdump_req_filter@@Base+0xe8>
  40f3b4:	stur	w0, [x29, #-4]
  40f3b8:	ldur	w0, [x29, #-4]
  40f3bc:	ldp	x29, x30, [sp, #64]
  40f3c0:	add	sp, sp, #0x50
  40f3c4:	ret
  40f3c8:	sub	sp, sp, #0x40
  40f3cc:	stp	x29, x30, [sp, #48]
  40f3d0:	add	x29, sp, #0x30
  40f3d4:	mov	w8, #0x20                  	// #32
  40f3d8:	mov	w9, #0x12                  	// #18
  40f3dc:	mov	w10, #0x301                 	// #769
  40f3e0:	mov	w11, wzr
  40f3e4:	mov	w12, #0x0                   	// #0
  40f3e8:	mov	w13, #0x0                   	// #0
  40f3ec:	mov	x2, #0x20                  	// #32
  40f3f0:	add	x14, sp, #0x4
  40f3f4:	stur	x0, [x29, #-8]
  40f3f8:	stur	w1, [x29, #-12]
  40f3fc:	str	w8, [sp, #4]
  40f400:	strh	w9, [x14, #4]
  40f404:	strh	w10, [x14, #6]
  40f408:	ldur	x15, [x29, #-8]
  40f40c:	ldr	w8, [x15, #28]
  40f410:	add	w8, w8, #0x1
  40f414:	str	w8, [x15, #28]
  40f418:	ldur	x15, [x29, #-8]
  40f41c:	str	w8, [x15, #32]
  40f420:	str	w8, [sp, #12]
  40f424:	str	wzr, [sp, #16]
  40f428:	ldur	w8, [x29, #-12]
  40f42c:	strb	w8, [x14, #16]
  40f430:	strb	w12, [x14, #17]
  40f434:	strh	w13, [x14, #18]
  40f438:	str	wzr, [sp, #24]
  40f43c:	str	wzr, [sp, #28]
  40f440:	str	wzr, [sp, #32]
  40f444:	ldur	x15, [x29, #-8]
  40f448:	ldr	w0, [x15]
  40f44c:	mov	x1, x14
  40f450:	mov	w3, w11
  40f454:	bl	405220 <send@plt>
  40f458:	ldp	x29, x30, [sp, #48]
  40f45c:	add	sp, sp, #0x40
  40f460:	ret

000000000040f464 <rtnl_linkdump_req_filter_fn@@Base>:
  40f464:	stp	x29, x30, [sp, #-32]!
  40f468:	str	x28, [sp, #16]
  40f46c:	mov	x29, sp
  40f470:	sub	sp, sp, #0x460
  40f474:	sub	x8, x29, #0x20
  40f478:	str	x0, [x8, #16]
  40f47c:	stur	w1, [x29, #-20]
  40f480:	str	x2, [x8]
  40f484:	ldur	w9, [x29, #-20]
  40f488:	str	x8, [sp, #16]
  40f48c:	cbz	w9, 40f49c <rtnl_linkdump_req_filter_fn@@Base+0x38>
  40f490:	ldur	w8, [x29, #-20]
  40f494:	cmp	w8, #0x11
  40f498:	b.ne	40f568 <rtnl_linkdump_req_filter_fn@@Base+0x104>  // b.any
  40f49c:	add	x8, sp, #0x20
  40f4a0:	mov	x0, x8
  40f4a4:	mov	w9, wzr
  40f4a8:	mov	w1, w9
  40f4ac:	mov	x2, #0x420                 	// #1056
  40f4b0:	str	x8, [sp, #8]
  40f4b4:	bl	405070 <memset@plt>
  40f4b8:	mov	w9, #0x20                  	// #32
  40f4bc:	str	w9, [sp, #32]
  40f4c0:	mov	w9, #0x12                  	// #18
  40f4c4:	ldr	x8, [sp, #8]
  40f4c8:	strh	w9, [x8, #4]
  40f4cc:	mov	w9, #0x301                 	// #769
  40f4d0:	strh	w9, [x8, #6]
  40f4d4:	ldr	x10, [sp, #16]
  40f4d8:	ldr	x11, [x10, #16]
  40f4dc:	ldr	w9, [x11, #28]
  40f4e0:	add	w9, w9, #0x1
  40f4e4:	str	w9, [x11, #28]
  40f4e8:	ldr	x11, [x10, #16]
  40f4ec:	str	w9, [x11, #32]
  40f4f0:	str	w9, [sp, #40]
  40f4f4:	ldur	w9, [x29, #-20]
  40f4f8:	strb	w9, [x8, #16]
  40f4fc:	ldr	x11, [x10]
  40f500:	cbnz	x11, 40f510 <rtnl_linkdump_req_filter_fn@@Base+0xac>
  40f504:	mov	w8, #0xffffffea            	// #-22
  40f508:	stur	w8, [x29, #-4]
  40f50c:	b	40f57c <rtnl_linkdump_req_filter_fn@@Base+0x118>
  40f510:	ldr	x8, [sp, #16]
  40f514:	ldr	x9, [x8]
  40f518:	add	x0, sp, #0x20
  40f51c:	mov	w1, #0x420                 	// #1056
  40f520:	blr	x9
  40f524:	str	w0, [sp, #28]
  40f528:	ldr	w10, [sp, #28]
  40f52c:	cbz	w10, 40f53c <rtnl_linkdump_req_filter_fn@@Base+0xd8>
  40f530:	ldr	w8, [sp, #28]
  40f534:	stur	w8, [x29, #-4]
  40f538:	b	40f57c <rtnl_linkdump_req_filter_fn@@Base+0x118>
  40f53c:	ldr	x8, [sp, #16]
  40f540:	ldr	x9, [x8, #16]
  40f544:	ldr	w0, [x9]
  40f548:	add	x1, sp, #0x20
  40f54c:	ldr	w10, [sp, #32]
  40f550:	mov	w2, w10
  40f554:	mov	w10, wzr
  40f558:	mov	w3, w10
  40f55c:	bl	405220 <send@plt>
  40f560:	stur	w0, [x29, #-4]
  40f564:	b	40f57c <rtnl_linkdump_req_filter_fn@@Base+0x118>
  40f568:	ldr	x8, [sp, #16]
  40f56c:	ldr	x0, [x8, #16]
  40f570:	ldur	w1, [x29, #-20]
  40f574:	bl	40f3c8 <rtnl_linkdump_req_filter@@Base+0xe8>
  40f578:	stur	w0, [x29, #-4]
  40f57c:	ldur	w0, [x29, #-4]
  40f580:	add	sp, sp, #0x460
  40f584:	ldr	x28, [sp, #16]
  40f588:	ldp	x29, x30, [sp], #32
  40f58c:	ret

000000000040f590 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40f590:	sub	sp, sp, #0x100
  40f594:	stp	x29, x30, [sp, #240]
  40f598:	add	x29, sp, #0xf0
  40f59c:	sub	x8, x29, #0x18
  40f5a0:	mov	x2, #0xa0                  	// #160
  40f5a4:	mov	w9, #0x20                  	// #32
  40f5a8:	mov	w10, #0x1e                  	// #30
  40f5ac:	mov	w11, #0x301                 	// #769
  40f5b0:	mov	w12, #0x7                   	// #7
  40f5b4:	mov	w13, #0xa0                  	// #160
  40f5b8:	mov	w14, wzr
  40f5bc:	add	x15, sp, #0x38
  40f5c0:	str	x0, [x8, #8]
  40f5c4:	str	x1, [x8]
  40f5c8:	mov	x0, x15
  40f5cc:	mov	w1, w14
  40f5d0:	str	x8, [sp, #40]
  40f5d4:	str	w9, [sp, #36]
  40f5d8:	str	w10, [sp, #32]
  40f5dc:	str	w11, [sp, #28]
  40f5e0:	str	w12, [sp, #24]
  40f5e4:	str	w13, [sp, #20]
  40f5e8:	str	x15, [sp, #8]
  40f5ec:	bl	405070 <memset@plt>
  40f5f0:	ldr	w9, [sp, #36]
  40f5f4:	str	w9, [sp, #56]
  40f5f8:	ldr	w10, [sp, #32]
  40f5fc:	ldr	x8, [sp, #8]
  40f600:	strh	w10, [x8, #4]
  40f604:	ldr	w11, [sp, #28]
  40f608:	strh	w11, [x8, #6]
  40f60c:	ldr	x15, [sp, #40]
  40f610:	ldr	x16, [x15, #8]
  40f614:	ldr	w12, [x16, #28]
  40f618:	add	w12, w12, #0x1
  40f61c:	str	w12, [x16, #28]
  40f620:	ldr	x16, [x15, #8]
  40f624:	str	w12, [x16, #32]
  40f628:	str	w12, [sp, #64]
  40f62c:	ldr	w12, [sp, #24]
  40f630:	strb	w12, [x8, #16]
  40f634:	ldr	x16, [x15]
  40f638:	mov	x0, x8
  40f63c:	ldr	w1, [sp, #20]
  40f640:	blr	x16
  40f644:	str	w0, [sp, #52]
  40f648:	ldr	w9, [sp, #52]
  40f64c:	cbz	w9, 40f65c <rtnl_fdb_linkdump_req_filter_fn@@Base+0xcc>
  40f650:	ldr	w8, [sp, #52]
  40f654:	stur	w8, [x29, #-4]
  40f658:	b	40f680 <rtnl_fdb_linkdump_req_filter_fn@@Base+0xf0>
  40f65c:	ldr	x8, [sp, #40]
  40f660:	ldr	x9, [x8, #8]
  40f664:	ldr	w0, [x9]
  40f668:	add	x1, sp, #0x38
  40f66c:	mov	x2, #0xa0                  	// #160
  40f670:	mov	w10, wzr
  40f674:	mov	w3, w10
  40f678:	bl	405220 <send@plt>
  40f67c:	stur	w0, [x29, #-4]
  40f680:	ldur	w0, [x29, #-4]
  40f684:	ldp	x29, x30, [sp, #240]
  40f688:	add	sp, sp, #0x100
  40f68c:	ret

000000000040f690 <rtnl_statsdump_req_filter@@Base>:
  40f690:	sub	sp, sp, #0x40
  40f694:	stp	x29, x30, [sp, #48]
  40f698:	add	x29, sp, #0x30
  40f69c:	mov	x8, #0x1c                  	// #28
  40f6a0:	mov	w9, #0x1c                  	// #28
  40f6a4:	mov	w10, #0x5e                  	// #94
  40f6a8:	mov	w11, #0x301                 	// #769
  40f6ac:	mov	w12, wzr
  40f6b0:	mov	x13, sp
  40f6b4:	stur	x0, [x29, #-8]
  40f6b8:	stur	w1, [x29, #-12]
  40f6bc:	stur	w2, [x29, #-16]
  40f6c0:	str	xzr, [sp]
  40f6c4:	str	xzr, [sp, #8]
  40f6c8:	str	xzr, [sp, #16]
  40f6cc:	str	wzr, [sp, #24]
  40f6d0:	str	w9, [sp]
  40f6d4:	strh	w10, [x13, #4]
  40f6d8:	strh	w11, [x13, #6]
  40f6dc:	str	wzr, [sp, #12]
  40f6e0:	ldur	x14, [x29, #-8]
  40f6e4:	ldr	w9, [x14, #28]
  40f6e8:	add	w9, w9, #0x1
  40f6ec:	str	w9, [x14, #28]
  40f6f0:	ldur	x14, [x29, #-8]
  40f6f4:	str	w9, [x14, #32]
  40f6f8:	str	w9, [sp, #8]
  40f6fc:	ldur	w9, [x29, #-12]
  40f700:	strb	w9, [x13, #16]
  40f704:	ldur	w9, [x29, #-16]
  40f708:	str	w9, [sp, #24]
  40f70c:	ldur	x14, [x29, #-8]
  40f710:	ldr	w0, [x14]
  40f714:	mov	x1, x13
  40f718:	mov	x2, x8
  40f71c:	mov	w3, w12
  40f720:	bl	405220 <send@plt>
  40f724:	ldp	x29, x30, [sp, #48]
  40f728:	add	sp, sp, #0x40
  40f72c:	ret

000000000040f730 <rtnl_send@@Base>:
  40f730:	sub	sp, sp, #0x30
  40f734:	stp	x29, x30, [sp, #32]
  40f738:	add	x29, sp, #0x20
  40f73c:	mov	w8, wzr
  40f740:	stur	x0, [x29, #-8]
  40f744:	str	x1, [sp, #16]
  40f748:	str	w2, [sp, #12]
  40f74c:	ldur	x9, [x29, #-8]
  40f750:	ldr	w0, [x9]
  40f754:	ldr	x1, [sp, #16]
  40f758:	ldrsw	x2, [sp, #12]
  40f75c:	mov	w3, w8
  40f760:	bl	405220 <send@plt>
  40f764:	ldp	x29, x30, [sp, #32]
  40f768:	add	sp, sp, #0x30
  40f76c:	ret

000000000040f770 <rtnl_send_check@@Base>:
  40f770:	stp	x29, x30, [sp, #-32]!
  40f774:	str	x28, [sp, #16]
  40f778:	mov	x29, sp
  40f77c:	sub	sp, sp, #0x440
  40f780:	mov	w8, wzr
  40f784:	stur	x0, [x29, #-16]
  40f788:	stur	x1, [x29, #-24]
  40f78c:	stur	w2, [x29, #-28]
  40f790:	ldur	x9, [x29, #-16]
  40f794:	ldr	w0, [x9]
  40f798:	ldur	x1, [x29, #-24]
  40f79c:	ldursw	x2, [x29, #-28]
  40f7a0:	mov	w3, w8
  40f7a4:	bl	405220 <send@plt>
  40f7a8:	stur	w0, [x29, #-44]
  40f7ac:	ldur	w8, [x29, #-44]
  40f7b0:	cmp	w8, #0x0
  40f7b4:	cset	w8, ge  // ge = tcont
  40f7b8:	tbnz	w8, #0, 40f7c8 <rtnl_send_check@@Base+0x58>
  40f7bc:	ldur	w8, [x29, #-44]
  40f7c0:	stur	w8, [x29, #-4]
  40f7c4:	b	40f93c <rtnl_send_check@@Base+0x1cc>
  40f7c8:	ldur	x8, [x29, #-16]
  40f7cc:	ldr	w0, [x8]
  40f7d0:	add	x1, sp, #0x14
  40f7d4:	mov	x2, #0x400                 	// #1024
  40f7d8:	mov	w3, #0x42                  	// #66
  40f7dc:	bl	405140 <recv@plt>
  40f7e0:	stur	w0, [x29, #-44]
  40f7e4:	ldur	w9, [x29, #-44]
  40f7e8:	cmp	w9, #0x0
  40f7ec:	cset	w9, ge  // ge = tcont
  40f7f0:	tbnz	w9, #0, 40f818 <rtnl_send_check@@Base+0xa8>
  40f7f4:	bl	405390 <__errno_location@plt>
  40f7f8:	ldr	w8, [x0]
  40f7fc:	cmp	w8, #0xb
  40f800:	b.ne	40f80c <rtnl_send_check@@Base+0x9c>  // b.any
  40f804:	stur	wzr, [x29, #-4]
  40f808:	b	40f93c <rtnl_send_check@@Base+0x1cc>
  40f80c:	mov	w8, #0xffffffff            	// #-1
  40f810:	stur	w8, [x29, #-4]
  40f814:	b	40f93c <rtnl_send_check@@Base+0x1cc>
  40f818:	add	x8, sp, #0x14
  40f81c:	stur	x8, [x29, #-40]
  40f820:	ldur	w8, [x29, #-44]
  40f824:	mov	w9, #0x0                   	// #0
  40f828:	cmp	w8, #0x10
  40f82c:	str	w9, [sp, #4]
  40f830:	b.lt	40f868 <rtnl_send_check@@Base+0xf8>  // b.tstop
  40f834:	ldur	x8, [x29, #-40]
  40f838:	ldr	w9, [x8]
  40f83c:	mov	w8, w9
  40f840:	mov	w9, #0x0                   	// #0
  40f844:	cmp	x8, #0x10
  40f848:	str	w9, [sp, #4]
  40f84c:	b.cc	40f868 <rtnl_send_check@@Base+0xf8>  // b.lo, b.ul, b.last
  40f850:	ldur	x8, [x29, #-40]
  40f854:	ldr	w9, [x8]
  40f858:	ldur	w10, [x29, #-44]
  40f85c:	cmp	w9, w10
  40f860:	cset	w9, ls  // ls = plast
  40f864:	str	w9, [sp, #4]
  40f868:	ldr	w8, [sp, #4]
  40f86c:	tbnz	w8, #0, 40f874 <rtnl_send_check@@Base+0x104>
  40f870:	b	40f938 <rtnl_send_check@@Base+0x1c8>
  40f874:	ldur	x8, [x29, #-40]
  40f878:	ldrh	w9, [x8, #4]
  40f87c:	cmp	w9, #0x2
  40f880:	b.ne	40f8ec <rtnl_send_check@@Base+0x17c>  // b.any
  40f884:	ldur	x8, [x29, #-40]
  40f888:	add	x8, x8, #0x10
  40f88c:	str	x8, [sp, #8]
  40f890:	ldur	x8, [x29, #-40]
  40f894:	ldr	w9, [x8]
  40f898:	mov	w8, w9
  40f89c:	cmp	x8, #0x24
  40f8a0:	b.cs	40f8c0 <rtnl_send_check@@Base+0x150>  // b.hs, b.nlast
  40f8a4:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40f8a8:	ldr	x8, [x8, #3992]
  40f8ac:	ldr	x0, [x8]
  40f8b0:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  40f8b4:	add	x1, x1, #0x2d
  40f8b8:	bl	4053c0 <fprintf@plt>
  40f8bc:	b	40f8e0 <rtnl_send_check@@Base+0x170>
  40f8c0:	ldr	x8, [sp, #8]
  40f8c4:	ldr	w9, [x8]
  40f8c8:	mov	w10, wzr
  40f8cc:	subs	w9, w10, w9
  40f8d0:	str	w9, [sp]
  40f8d4:	bl	405390 <__errno_location@plt>
  40f8d8:	ldr	w9, [sp]
  40f8dc:	str	w9, [x0]
  40f8e0:	mov	w8, #0xffffffff            	// #-1
  40f8e4:	stur	w8, [x29, #-4]
  40f8e8:	b	40f93c <rtnl_send_check@@Base+0x1cc>
  40f8ec:	ldur	x8, [x29, #-40]
  40f8f0:	ldr	w9, [x8]
  40f8f4:	add	w9, w9, #0x4
  40f8f8:	subs	w9, w9, #0x1
  40f8fc:	and	w9, w9, #0xfffffffc
  40f900:	ldur	w10, [x29, #-44]
  40f904:	subs	w9, w10, w9
  40f908:	stur	w9, [x29, #-44]
  40f90c:	ldur	x8, [x29, #-40]
  40f910:	ldur	x11, [x29, #-40]
  40f914:	ldr	w9, [x11]
  40f918:	add	w9, w9, #0x4
  40f91c:	subs	w9, w9, #0x1
  40f920:	and	w9, w9, #0xfffffffc
  40f924:	mov	w11, w9
  40f928:	ubfx	x11, x11, #0, #32
  40f92c:	add	x8, x8, x11
  40f930:	stur	x8, [x29, #-40]
  40f934:	b	40f820 <rtnl_send_check@@Base+0xb0>
  40f938:	stur	wzr, [x29, #-4]
  40f93c:	ldur	w0, [x29, #-4]
  40f940:	add	sp, sp, #0x440
  40f944:	ldr	x28, [sp, #16]
  40f948:	ldp	x29, x30, [sp], #32
  40f94c:	ret

000000000040f950 <rtnl_dump_request@@Base>:
  40f950:	sub	sp, sp, #0xa0
  40f954:	stp	x29, x30, [sp, #144]
  40f958:	add	x29, sp, #0x90
  40f95c:	mov	w8, #0x301                 	// #769
  40f960:	mov	w9, wzr
  40f964:	adrp	x10, 413000 <_IO_stdin_used@@Base+0xcf0>
  40f968:	add	x10, x10, #0x334
  40f96c:	mov	x11, #0x10                  	// #16
  40f970:	mov	w12, #0xc                   	// #12
  40f974:	mov	x13, #0x2                   	// #2
  40f978:	mov	x14, xzr
  40f97c:	sub	x15, x29, #0x2c
  40f980:	sub	x16, x29, #0x38
  40f984:	add	x17, sp, #0x38
  40f988:	mov	x18, sp
  40f98c:	stur	x0, [x29, #-8]
  40f990:	stur	w1, [x29, #-12]
  40f994:	stur	x2, [x29, #-24]
  40f998:	stur	w3, [x29, #-28]
  40f99c:	ldur	w1, [x29, #-28]
  40f9a0:	add	w1, w1, #0x10
  40f9a4:	stur	w1, [x29, #-44]
  40f9a8:	ldur	w1, [x29, #-12]
  40f9ac:	strh	w1, [x15, #4]
  40f9b0:	strh	w8, [x15, #6]
  40f9b4:	ldur	x0, [x29, #-8]
  40f9b8:	ldr	w8, [x0, #28]
  40f9bc:	add	w8, w8, #0x1
  40f9c0:	str	w8, [x0, #28]
  40f9c4:	ldur	x0, [x29, #-8]
  40f9c8:	str	w8, [x0, #32]
  40f9cc:	stur	w8, [x29, #-36]
  40f9d0:	stur	wzr, [x29, #-32]
  40f9d4:	ldr	x0, [x10]
  40f9d8:	stur	x0, [x29, #-56]
  40f9dc:	ldr	w8, [x10, #8]
  40f9e0:	stur	w8, [x29, #-48]
  40f9e4:	str	x15, [sp, #56]
  40f9e8:	str	x11, [sp, #64]
  40f9ec:	ldur	x10, [x29, #-24]
  40f9f0:	str	x10, [x17, #16]
  40f9f4:	ldursw	x10, [x29, #-28]
  40f9f8:	str	x10, [sp, #80]
  40f9fc:	str	x16, [sp]
  40fa00:	str	w12, [sp, #8]
  40fa04:	str	x17, [x18, #16]
  40fa08:	str	x13, [sp, #24]
  40fa0c:	str	x14, [x18, #32]
  40fa10:	str	xzr, [sp, #40]
  40fa14:	str	wzr, [sp, #48]
  40fa18:	ldur	x10, [x29, #-8]
  40fa1c:	ldr	w0, [x10]
  40fa20:	mov	x1, x18
  40fa24:	mov	w2, w9
  40fa28:	bl	405090 <sendmsg@plt>
  40fa2c:	ldp	x29, x30, [sp, #144]
  40fa30:	add	sp, sp, #0xa0
  40fa34:	ret

000000000040fa38 <rtnl_dump_request_n@@Base>:
  40fa38:	sub	sp, sp, #0x80
  40fa3c:	stp	x29, x30, [sp, #112]
  40fa40:	add	x29, sp, #0x70
  40fa44:	adrp	x8, 413000 <_IO_stdin_used@@Base+0xcf0>
  40fa48:	add	x8, x8, #0x340
  40fa4c:	mov	w9, #0xc                   	// #12
  40fa50:	mov	x10, #0x1                   	// #1
  40fa54:	mov	x11, xzr
  40fa58:	mov	w12, wzr
  40fa5c:	mov	w13, #0x301                 	// #769
  40fa60:	sub	x14, x29, #0x20
  40fa64:	sub	x15, x29, #0x30
  40fa68:	add	x16, sp, #0x8
  40fa6c:	stur	x0, [x29, #-8]
  40fa70:	stur	x1, [x29, #-16]
  40fa74:	ldr	x17, [x8]
  40fa78:	stur	x17, [x29, #-32]
  40fa7c:	ldr	w18, [x8, #8]
  40fa80:	stur	w18, [x29, #-24]
  40fa84:	ldur	x8, [x29, #-16]
  40fa88:	stur	x8, [x29, #-48]
  40fa8c:	ldur	x8, [x29, #-16]
  40fa90:	ldr	w18, [x8]
  40fa94:	mov	w8, w18
  40fa98:	stur	x8, [x29, #-40]
  40fa9c:	str	x14, [sp, #8]
  40faa0:	str	w9, [sp, #16]
  40faa4:	str	x15, [x16, #16]
  40faa8:	str	x10, [sp, #32]
  40faac:	str	x11, [x16, #32]
  40fab0:	str	xzr, [sp, #48]
  40fab4:	str	wzr, [sp, #56]
  40fab8:	ldur	x8, [x29, #-16]
  40fabc:	strh	w13, [x8, #6]
  40fac0:	ldur	x8, [x29, #-16]
  40fac4:	str	wzr, [x8, #12]
  40fac8:	ldur	x8, [x29, #-8]
  40facc:	ldr	w9, [x8, #28]
  40fad0:	add	w9, w9, #0x1
  40fad4:	str	w9, [x8, #28]
  40fad8:	ldur	x8, [x29, #-8]
  40fadc:	str	w9, [x8, #32]
  40fae0:	ldur	x8, [x29, #-16]
  40fae4:	str	w9, [x8, #8]
  40fae8:	ldur	x8, [x29, #-8]
  40faec:	ldr	w0, [x8]
  40faf0:	mov	x1, x16
  40faf4:	mov	w2, w12
  40faf8:	bl	405090 <sendmsg@plt>
  40fafc:	ldp	x29, x30, [sp, #112]
  40fb00:	add	sp, sp, #0x80
  40fb04:	ret

000000000040fb08 <rtnl_dump_filter_nc@@Base>:
  40fb08:	sub	sp, sp, #0x60
  40fb0c:	stp	x29, x30, [sp, #80]
  40fb10:	add	x29, sp, #0x50
  40fb14:	mov	w8, #0x0                   	// #0
  40fb18:	mov	x9, sp
  40fb1c:	stur	x0, [x29, #-8]
  40fb20:	stur	x1, [x29, #-16]
  40fb24:	stur	x2, [x29, #-24]
  40fb28:	sturh	w3, [x29, #-26]
  40fb2c:	ldur	x10, [x29, #-16]
  40fb30:	str	x10, [sp]
  40fb34:	ldur	x10, [x29, #-24]
  40fb38:	str	x10, [x9, #8]
  40fb3c:	ldurh	w11, [x29, #-26]
  40fb40:	strh	w11, [x9, #16]
  40fb44:	str	xzr, [sp, #24]
  40fb48:	str	xzr, [sp, #32]
  40fb4c:	str	xzr, [sp, #40]
  40fb50:	strh	w8, [x9, #40]
  40fb54:	ldur	x0, [x29, #-8]
  40fb58:	mov	x1, x9
  40fb5c:	bl	40fb6c <rtnl_dump_filter_nc@@Base+0x64>
  40fb60:	ldp	x29, x30, [sp, #80]
  40fb64:	add	sp, sp, #0x60
  40fb68:	ret
  40fb6c:	sub	sp, sp, #0xd0
  40fb70:	stp	x29, x30, [sp, #192]
  40fb74:	add	x29, sp, #0xc0
  40fb78:	sub	x8, x29, #0x18
  40fb7c:	mov	w9, #0xc                   	// #12
  40fb80:	mov	x10, #0x1                   	// #1
  40fb84:	mov	x11, xzr
  40fb88:	adrp	x12, 423000 <_IO_stdin_used@@Base+0x10cf0>
  40fb8c:	ldr	x12, [x12, #3992]
  40fb90:	sub	x13, x29, #0x24
  40fb94:	sub	x14, x29, #0x38
  40fb98:	add	x15, sp, #0x50
  40fb9c:	str	x0, [x8, #8]
  40fba0:	str	x1, [x8]
  40fba4:	str	x13, [sp, #80]
  40fba8:	str	w9, [sp, #88]
  40fbac:	str	x14, [x15, #16]
  40fbb0:	str	x10, [sp, #104]
  40fbb4:	str	x11, [x15, #32]
  40fbb8:	str	xzr, [sp, #120]
  40fbbc:	str	wzr, [sp, #128]
  40fbc0:	str	wzr, [sp, #68]
  40fbc4:	str	x8, [sp, #24]
  40fbc8:	str	x12, [sp, #16]
  40fbcc:	str	wzr, [sp, #52]
  40fbd0:	str	wzr, [sp, #48]
  40fbd4:	ldr	x8, [sp, #24]
  40fbd8:	ldr	x9, [x8, #8]
  40fbdc:	ldr	w0, [x9]
  40fbe0:	add	x1, sp, #0x50
  40fbe4:	add	x2, sp, #0x48
  40fbe8:	bl	411ab0 <__parse_rtattr_nested_compat@@Base+0x118>
  40fbec:	str	w0, [sp, #64]
  40fbf0:	ldr	w10, [sp, #64]
  40fbf4:	cmp	w10, #0x0
  40fbf8:	cset	w10, ge  // ge = tcont
  40fbfc:	tbnz	w10, #0, 40fc0c <rtnl_dump_filter_nc@@Base+0x104>
  40fc00:	ldr	w8, [sp, #64]
  40fc04:	stur	w8, [x29, #-4]
  40fc08:	b	40fef4 <rtnl_dump_filter_nc@@Base+0x3ec>
  40fc0c:	ldr	x8, [sp, #24]
  40fc10:	ldr	x9, [x8, #8]
  40fc14:	ldr	x9, [x9, #40]
  40fc18:	cbz	x9, 40fc4c <rtnl_dump_filter_nc@@Base+0x144>
  40fc1c:	ldr	x0, [sp, #72]
  40fc20:	ldr	w8, [sp, #64]
  40fc24:	add	w8, w8, #0x4
  40fc28:	subs	w8, w8, #0x1
  40fc2c:	and	w8, w8, #0xfffffffc
  40fc30:	mov	w9, w8
  40fc34:	ubfx	x2, x9, #0, #32
  40fc38:	ldr	x9, [sp, #24]
  40fc3c:	ldr	x10, [x9, #8]
  40fc40:	ldr	x3, [x10, #40]
  40fc44:	mov	x1, #0x1                   	// #1
  40fc48:	bl	405260 <fwrite@plt>
  40fc4c:	ldr	x8, [sp, #24]
  40fc50:	ldr	x9, [x8]
  40fc54:	str	x9, [sp, #56]
  40fc58:	ldr	x8, [sp, #56]
  40fc5c:	ldr	x8, [x8]
  40fc60:	cbz	x8, 40fe6c <rtnl_dump_filter_nc@@Base+0x364>
  40fc64:	ldr	x8, [sp, #72]
  40fc68:	str	x8, [sp, #40]
  40fc6c:	ldr	w9, [sp, #64]
  40fc70:	str	w9, [sp, #48]
  40fc74:	ldr	w8, [sp, #48]
  40fc78:	mov	w9, #0x0                   	// #0
  40fc7c:	cmp	w8, #0x10
  40fc80:	str	w9, [sp, #12]
  40fc84:	b.lt	40fcbc <rtnl_dump_filter_nc@@Base+0x1b4>  // b.tstop
  40fc88:	ldr	x8, [sp, #40]
  40fc8c:	ldr	w9, [x8]
  40fc90:	mov	w8, w9
  40fc94:	mov	w9, #0x0                   	// #0
  40fc98:	cmp	x8, #0x10
  40fc9c:	str	w9, [sp, #12]
  40fca0:	b.cc	40fcbc <rtnl_dump_filter_nc@@Base+0x1b4>  // b.lo, b.ul, b.last
  40fca4:	ldr	x8, [sp, #40]
  40fca8:	ldr	w9, [x8]
  40fcac:	ldr	w10, [sp, #48]
  40fcb0:	cmp	w9, w10
  40fcb4:	cset	w9, ls  // ls = plast
  40fcb8:	str	w9, [sp, #12]
  40fcbc:	ldr	w8, [sp, #12]
  40fcc0:	tbnz	w8, #0, 40fcc8 <rtnl_dump_filter_nc@@Base+0x1c0>
  40fcc4:	b	40fe5c <rtnl_dump_filter_nc@@Base+0x354>
  40fcc8:	str	wzr, [sp, #36]
  40fccc:	ldr	x8, [sp, #56]
  40fcd0:	ldrh	w9, [x8, #16]
  40fcd4:	ldr	x8, [sp, #40]
  40fcd8:	ldrh	w10, [x8, #6]
  40fcdc:	bic	w9, w10, w9
  40fce0:	strh	w9, [x8, #6]
  40fce4:	ldur	w9, [x29, #-32]
  40fce8:	cbnz	w9, 40fd24 <rtnl_dump_filter_nc@@Base+0x21c>
  40fcec:	ldr	x8, [sp, #40]
  40fcf0:	ldr	w9, [x8, #12]
  40fcf4:	ldr	x8, [sp, #24]
  40fcf8:	ldr	x10, [x8, #8]
  40fcfc:	ldr	w11, [x10, #8]
  40fd00:	cmp	w9, w11
  40fd04:	b.ne	40fd24 <rtnl_dump_filter_nc@@Base+0x21c>  // b.any
  40fd08:	ldr	x8, [sp, #40]
  40fd0c:	ldr	w9, [x8, #8]
  40fd10:	ldr	x8, [sp, #24]
  40fd14:	ldr	x10, [x8, #8]
  40fd18:	ldr	w11, [x10, #32]
  40fd1c:	cmp	w9, w11
  40fd20:	b.eq	40fd28 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40fd24:	b	40fe10 <rtnl_dump_filter_nc@@Base+0x308>
  40fd28:	ldr	x8, [sp, #40]
  40fd2c:	ldrh	w9, [x8, #6]
  40fd30:	and	w9, w9, #0x10
  40fd34:	cbz	w9, 40fd40 <rtnl_dump_filter_nc@@Base+0x238>
  40fd38:	mov	w8, #0x1                   	// #1
  40fd3c:	str	w8, [sp, #68]
  40fd40:	ldr	x8, [sp, #40]
  40fd44:	ldrh	w9, [x8, #4]
  40fd48:	cmp	w9, #0x3
  40fd4c:	b.ne	40fd8c <rtnl_dump_filter_nc@@Base+0x284>  // b.any
  40fd50:	ldr	x0, [sp, #40]
  40fd54:	bl	411bf4 <__parse_rtattr_nested_compat@@Base+0x25c>
  40fd58:	str	w0, [sp, #36]
  40fd5c:	ldr	w8, [sp, #36]
  40fd60:	cmp	w8, #0x0
  40fd64:	cset	w8, ge  // ge = tcont
  40fd68:	tbnz	w8, #0, 40fd80 <rtnl_dump_filter_nc@@Base+0x278>
  40fd6c:	ldr	x0, [sp, #72]
  40fd70:	bl	405200 <free@plt>
  40fd74:	mov	w8, #0xffffffff            	// #-1
  40fd78:	stur	w8, [x29, #-4]
  40fd7c:	b	40fef4 <rtnl_dump_filter_nc@@Base+0x3ec>
  40fd80:	mov	w8, #0x1                   	// #1
  40fd84:	str	w8, [sp, #52]
  40fd88:	b	40fe5c <rtnl_dump_filter_nc@@Base+0x354>
  40fd8c:	ldr	x8, [sp, #40]
  40fd90:	ldrh	w9, [x8, #4]
  40fd94:	cmp	w9, #0x2
  40fd98:	b.ne	40fdc0 <rtnl_dump_filter_nc@@Base+0x2b8>  // b.any
  40fd9c:	ldr	x8, [sp, #24]
  40fda0:	ldr	x0, [x8, #8]
  40fda4:	ldr	x1, [sp, #40]
  40fda8:	bl	411d34 <__parse_rtattr_nested_compat@@Base+0x39c>
  40fdac:	ldr	x0, [sp, #72]
  40fdb0:	bl	405200 <free@plt>
  40fdb4:	mov	w9, #0xffffffff            	// #-1
  40fdb8:	stur	w9, [x29, #-4]
  40fdbc:	b	40fef4 <rtnl_dump_filter_nc@@Base+0x3ec>
  40fdc0:	ldr	x8, [sp, #24]
  40fdc4:	ldr	x9, [x8, #8]
  40fdc8:	ldr	x9, [x9, #40]
  40fdcc:	cbnz	x9, 40fe10 <rtnl_dump_filter_nc@@Base+0x308>
  40fdd0:	ldr	x8, [sp, #56]
  40fdd4:	ldr	x8, [x8]
  40fdd8:	ldr	x0, [sp, #40]
  40fddc:	ldr	x9, [sp, #56]
  40fde0:	ldr	x1, [x9, #8]
  40fde4:	blr	x8
  40fde8:	str	w0, [sp, #36]
  40fdec:	ldr	w10, [sp, #36]
  40fdf0:	cmp	w10, #0x0
  40fdf4:	cset	w10, ge  // ge = tcont
  40fdf8:	tbnz	w10, #0, 40fe10 <rtnl_dump_filter_nc@@Base+0x308>
  40fdfc:	ldr	x0, [sp, #72]
  40fe00:	bl	405200 <free@plt>
  40fe04:	ldr	w8, [sp, #36]
  40fe08:	stur	w8, [x29, #-4]
  40fe0c:	b	40fef4 <rtnl_dump_filter_nc@@Base+0x3ec>
  40fe10:	ldr	x8, [sp, #40]
  40fe14:	ldr	w9, [x8]
  40fe18:	add	w9, w9, #0x4
  40fe1c:	subs	w9, w9, #0x1
  40fe20:	and	w9, w9, #0xfffffffc
  40fe24:	ldr	w10, [sp, #48]
  40fe28:	subs	w9, w10, w9
  40fe2c:	str	w9, [sp, #48]
  40fe30:	ldr	x8, [sp, #40]
  40fe34:	ldr	x11, [sp, #40]
  40fe38:	ldr	w9, [x11]
  40fe3c:	add	w9, w9, #0x4
  40fe40:	subs	w9, w9, #0x1
  40fe44:	and	w9, w9, #0xfffffffc
  40fe48:	mov	w11, w9
  40fe4c:	ubfx	x11, x11, #0, #32
  40fe50:	add	x8, x8, x11
  40fe54:	str	x8, [sp, #40]
  40fe58:	b	40fc74 <rtnl_dump_filter_nc@@Base+0x16c>
  40fe5c:	ldr	x8, [sp, #56]
  40fe60:	add	x8, x8, #0x18
  40fe64:	str	x8, [sp, #56]
  40fe68:	b	40fc58 <rtnl_dump_filter_nc@@Base+0x150>
  40fe6c:	ldr	x0, [sp, #72]
  40fe70:	bl	405200 <free@plt>
  40fe74:	ldr	w8, [sp, #52]
  40fe78:	cbz	w8, 40fea0 <rtnl_dump_filter_nc@@Base+0x398>
  40fe7c:	ldr	w8, [sp, #68]
  40fe80:	cbz	w8, 40fe98 <rtnl_dump_filter_nc@@Base+0x390>
  40fe84:	ldr	x8, [sp, #16]
  40fe88:	ldr	x0, [x8]
  40fe8c:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  40fe90:	add	x1, x1, #0x23b
  40fe94:	bl	4053c0 <fprintf@plt>
  40fe98:	stur	wzr, [x29, #-4]
  40fe9c:	b	40fef4 <rtnl_dump_filter_nc@@Base+0x3ec>
  40fea0:	ldr	w8, [sp, #128]
  40fea4:	and	w8, w8, #0x20
  40fea8:	cbz	w8, 40fec4 <rtnl_dump_filter_nc@@Base+0x3bc>
  40feac:	ldr	x8, [sp, #16]
  40feb0:	ldr	x0, [x8]
  40feb4:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  40feb8:	add	x1, x1, #0xd3
  40febc:	bl	4053c0 <fprintf@plt>
  40fec0:	b	40fbcc <rtnl_dump_filter_nc@@Base+0xc4>
  40fec4:	ldr	w8, [sp, #48]
  40fec8:	cbz	w8, 40fef0 <rtnl_dump_filter_nc@@Base+0x3e8>
  40fecc:	ldr	x8, [sp, #16]
  40fed0:	ldr	x0, [x8]
  40fed4:	ldr	w2, [sp, #48]
  40fed8:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  40fedc:	add	x1, x1, #0xe6
  40fee0:	bl	4053c0 <fprintf@plt>
  40fee4:	mov	w9, #0x1                   	// #1
  40fee8:	mov	w0, w9
  40feec:	bl	404e90 <exit@plt>
  40fef0:	b	40fbcc <rtnl_dump_filter_nc@@Base+0xc4>
  40fef4:	ldur	w0, [x29, #-4]
  40fef8:	ldp	x29, x30, [sp, #192]
  40fefc:	add	sp, sp, #0xd0
  40ff00:	ret

000000000040ff04 <rtnl_talk@@Base>:
  40ff04:	sub	sp, sp, #0x30
  40ff08:	stp	x29, x30, [sp, #32]
  40ff0c:	add	x29, sp, #0x20
  40ff10:	mov	x8, xzr
  40ff14:	stur	x0, [x29, #-8]
  40ff18:	str	x1, [sp, #16]
  40ff1c:	str	x2, [sp, #8]
  40ff20:	ldur	x0, [x29, #-8]
  40ff24:	ldr	x1, [sp, #16]
  40ff28:	ldr	x2, [sp, #8]
  40ff2c:	mov	w9, #0x1                   	// #1
  40ff30:	and	w3, w9, #0x1
  40ff34:	mov	x4, x8
  40ff38:	bl	40ff48 <rtnl_talk@@Base+0x44>
  40ff3c:	ldp	x29, x30, [sp, #32]
  40ff40:	add	sp, sp, #0x30
  40ff44:	ret
  40ff48:	sub	sp, sp, #0x50
  40ff4c:	stp	x29, x30, [sp, #64]
  40ff50:	add	x29, sp, #0x40
  40ff54:	mov	x8, #0x1                   	// #1
  40ff58:	add	x9, sp, #0x8
  40ff5c:	stur	x0, [x29, #-8]
  40ff60:	stur	x1, [x29, #-16]
  40ff64:	stur	x2, [x29, #-24]
  40ff68:	mov	w10, #0x1                   	// #1
  40ff6c:	and	w10, w3, w10
  40ff70:	sturb	w10, [x29, #-25]
  40ff74:	str	x4, [sp, #24]
  40ff78:	ldur	x11, [x29, #-16]
  40ff7c:	str	x11, [sp, #8]
  40ff80:	ldur	x11, [x29, #-16]
  40ff84:	ldr	w10, [x11]
  40ff88:	mov	w11, w10
  40ff8c:	str	x11, [sp, #16]
  40ff90:	ldur	x0, [x29, #-8]
  40ff94:	ldur	x3, [x29, #-24]
  40ff98:	ldurb	w10, [x29, #-25]
  40ff9c:	ldr	x5, [sp, #24]
  40ffa0:	mov	x1, x9
  40ffa4:	mov	x2, x8
  40ffa8:	and	w4, w10, #0x1
  40ffac:	bl	410008 <rtnl_talk_iov@@Base+0x4c>
  40ffb0:	ldp	x29, x30, [sp, #64]
  40ffb4:	add	sp, sp, #0x50
  40ffb8:	ret

000000000040ffbc <rtnl_talk_iov@@Base>:
  40ffbc:	sub	sp, sp, #0x30
  40ffc0:	stp	x29, x30, [sp, #32]
  40ffc4:	add	x29, sp, #0x20
  40ffc8:	mov	x8, xzr
  40ffcc:	stur	x0, [x29, #-8]
  40ffd0:	str	x1, [sp, #16]
  40ffd4:	str	x2, [sp, #8]
  40ffd8:	str	x3, [sp]
  40ffdc:	ldur	x0, [x29, #-8]
  40ffe0:	ldr	x1, [sp, #16]
  40ffe4:	ldr	x2, [sp, #8]
  40ffe8:	ldr	x3, [sp]
  40ffec:	mov	w9, #0x1                   	// #1
  40fff0:	and	w4, w9, #0x1
  40fff4:	mov	x5, x8
  40fff8:	bl	410008 <rtnl_talk_iov@@Base+0x4c>
  40fffc:	ldp	x29, x30, [sp, #32]
  410000:	add	sp, sp, #0x30
  410004:	ret
  410008:	sub	sp, sp, #0xf0
  41000c:	stp	x29, x30, [sp, #224]
  410010:	add	x29, sp, #0xe0
  410014:	sub	x8, x29, #0x38
  410018:	adrp	x9, 413000 <_IO_stdin_used@@Base+0xcf0>
  41001c:	add	x9, x9, #0x358
  410020:	mov	w10, #0xc                   	// #12
  410024:	mov	x11, xzr
  410028:	mov	w12, #0x1                   	// #1
  41002c:	adrp	x13, 423000 <_IO_stdin_used@@Base+0x10cf0>
  410030:	ldr	x13, [x13, #3992]
  410034:	sub	x14, x29, #0x48
  410038:	add	x15, sp, #0x50
  41003c:	str	x0, [x8, #40]
  410040:	str	x1, [x8, #32]
  410044:	str	x2, [x8, #24]
  410048:	str	x3, [x8, #16]
  41004c:	and	w12, w4, w12
  410050:	sturb	w12, [x29, #-41]
  410054:	str	x5, [x8]
  410058:	ldr	x16, [x9]
  41005c:	stur	x16, [x29, #-72]
  410060:	ldr	w12, [x9, #8]
  410064:	stur	w12, [x29, #-64]
  410068:	str	x14, [sp, #80]
  41006c:	str	w10, [sp, #88]
  410070:	ldr	x9, [x8, #32]
  410074:	str	x9, [x15, #16]
  410078:	ldr	x9, [x8, #24]
  41007c:	str	x9, [sp, #104]
  410080:	str	x11, [x15, #32]
  410084:	str	xzr, [sp, #120]
  410088:	str	wzr, [sp, #128]
  41008c:	str	wzr, [sp, #76]
  410090:	str	wzr, [sp, #60]
  410094:	str	x8, [sp, #16]
  410098:	str	x13, [sp, #8]
  41009c:	ldrsw	x8, [sp, #60]
  4100a0:	ldr	x9, [sp, #16]
  4100a4:	ldr	x10, [x9, #24]
  4100a8:	cmp	x8, x10
  4100ac:	b.cs	410114 <rtnl_talk_iov@@Base+0x158>  // b.hs, b.nlast
  4100b0:	ldr	x8, [sp, #16]
  4100b4:	ldr	x9, [x8, #32]
  4100b8:	ldrsw	x10, [sp, #60]
  4100bc:	mov	x11, #0x10                  	// #16
  4100c0:	mul	x10, x11, x10
  4100c4:	add	x9, x9, x10
  4100c8:	ldr	x9, [x9]
  4100cc:	str	x9, [sp, #64]
  4100d0:	ldr	x9, [x8, #40]
  4100d4:	ldr	w12, [x9, #28]
  4100d8:	add	w12, w12, #0x1
  4100dc:	str	w12, [x9, #28]
  4100e0:	str	w12, [sp, #76]
  4100e4:	ldr	x9, [sp, #64]
  4100e8:	str	w12, [x9, #8]
  4100ec:	ldr	x9, [x8, #16]
  4100f0:	cbnz	x9, 410104 <rtnl_talk_iov@@Base+0x148>
  4100f4:	ldr	x8, [sp, #64]
  4100f8:	ldrh	w9, [x8, #6]
  4100fc:	orr	w9, w9, #0x4
  410100:	strh	w9, [x8, #6]
  410104:	ldr	w8, [sp, #60]
  410108:	add	w8, w8, #0x1
  41010c:	str	w8, [sp, #60]
  410110:	b	41009c <rtnl_talk_iov@@Base+0xe0>
  410114:	ldr	x8, [sp, #16]
  410118:	ldr	x9, [x8, #40]
  41011c:	ldr	w0, [x9]
  410120:	add	x1, sp, #0x50
  410124:	mov	w10, wzr
  410128:	mov	w2, w10
  41012c:	bl	405090 <sendmsg@plt>
  410130:	str	w0, [sp, #56]
  410134:	ldr	w10, [sp, #56]
  410138:	cmp	w10, #0x0
  41013c:	cset	w10, ge  // ge = tcont
  410140:	tbnz	w10, #0, 41015c <rtnl_talk_iov@@Base+0x1a0>
  410144:	adrp	x0, 413000 <_IO_stdin_used@@Base+0xcf0>
  410148:	add	x0, x0, #0x2d2
  41014c:	bl	404ea0 <perror@plt>
  410150:	mov	w8, #0xffffffff            	// #-1
  410154:	stur	w8, [x29, #-4]
  410158:	b	41054c <rtnl_talk_iov@@Base+0x590>
  41015c:	add	x8, sp, #0x50
  410160:	sub	x9, x29, #0x58
  410164:	str	x9, [x8, #16]
  410168:	mov	x8, #0x1                   	// #1
  41016c:	str	x8, [sp, #104]
  410170:	str	wzr, [sp, #60]
  410174:	ldr	x8, [sp, #16]
  410178:	ldr	x9, [x8, #40]
  41017c:	ldr	w0, [x9]
  410180:	add	x1, sp, #0x50
  410184:	add	x2, sp, #0x30
  410188:	bl	411ab0 <__parse_rtattr_nested_compat@@Base+0x118>
  41018c:	str	w0, [sp, #56]
  410190:	ldr	w10, [sp, #60]
  410194:	add	w10, w10, #0x1
  410198:	str	w10, [sp, #60]
  41019c:	ldr	w10, [sp, #56]
  4101a0:	cmp	w10, #0x0
  4101a4:	cset	w10, ge  // ge = tcont
  4101a8:	tbnz	w10, #0, 4101b8 <rtnl_talk_iov@@Base+0x1fc>
  4101ac:	ldr	w8, [sp, #56]
  4101b0:	stur	w8, [x29, #-4]
  4101b4:	b	41054c <rtnl_talk_iov@@Base+0x590>
  4101b8:	ldr	w8, [sp, #88]
  4101bc:	mov	w9, w8
  4101c0:	cmp	x9, #0xc
  4101c4:	b.eq	4101ec <rtnl_talk_iov@@Base+0x230>  // b.none
  4101c8:	ldr	x8, [sp, #8]
  4101cc:	ldr	x0, [x8]
  4101d0:	ldr	w2, [sp, #88]
  4101d4:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  4101d8:	add	x1, x1, #0x2eb
  4101dc:	bl	4053c0 <fprintf@plt>
  4101e0:	mov	w9, #0x1                   	// #1
  4101e4:	mov	w0, w9
  4101e8:	bl	404e90 <exit@plt>
  4101ec:	ldr	x8, [sp, #48]
  4101f0:	str	x8, [sp, #64]
  4101f4:	ldrsw	x8, [sp, #56]
  4101f8:	cmp	x8, #0x10
  4101fc:	b.cc	4104f0 <rtnl_talk_iov@@Base+0x534>  // b.lo, b.ul, b.last
  410200:	ldr	x8, [sp, #64]
  410204:	ldr	w9, [x8]
  410208:	str	w9, [sp, #44]
  41020c:	ldrsw	x8, [sp, #44]
  410210:	subs	x8, x8, #0x10
  410214:	str	w8, [sp, #40]
  410218:	ldr	w8, [sp, #40]
  41021c:	cmp	w8, #0x0
  410220:	cset	w8, lt  // lt = tstop
  410224:	tbnz	w8, #0, 410238 <rtnl_talk_iov@@Base+0x27c>
  410228:	ldr	w8, [sp, #44]
  41022c:	ldr	w9, [sp, #56]
  410230:	cmp	w8, w9
  410234:	b.le	410294 <rtnl_talk_iov@@Base+0x2d8>
  410238:	ldr	w8, [sp, #128]
  41023c:	and	w8, w8, #0x20
  410240:	cbz	w8, 410270 <rtnl_talk_iov@@Base+0x2b4>
  410244:	ldr	x8, [sp, #8]
  410248:	ldr	x0, [x8]
  41024c:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410250:	add	x1, x1, #0xa2
  410254:	bl	4053c0 <fprintf@plt>
  410258:	ldr	x8, [sp, #48]
  41025c:	mov	x0, x8
  410260:	bl	405200 <free@plt>
  410264:	mov	w9, #0xffffffff            	// #-1
  410268:	stur	w9, [x29, #-4]
  41026c:	b	41054c <rtnl_talk_iov@@Base+0x590>
  410270:	ldr	x8, [sp, #8]
  410274:	ldr	x0, [x8]
  410278:	ldr	w2, [sp, #44]
  41027c:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410280:	add	x1, x1, #0xb5
  410284:	bl	4053c0 <fprintf@plt>
  410288:	mov	w9, #0x1                   	// #1
  41028c:	mov	w0, w9
  410290:	bl	404e90 <exit@plt>
  410294:	ldur	w8, [x29, #-68]
  410298:	cbnz	w8, 4102f4 <rtnl_talk_iov@@Base+0x338>
  41029c:	ldr	x8, [sp, #64]
  4102a0:	ldr	w9, [x8, #12]
  4102a4:	ldr	x8, [sp, #16]
  4102a8:	ldr	x10, [x8, #40]
  4102ac:	ldr	w11, [x10, #8]
  4102b0:	cmp	w9, w11
  4102b4:	b.ne	4102f4 <rtnl_talk_iov@@Base+0x338>  // b.any
  4102b8:	ldr	x8, [sp, #64]
  4102bc:	ldr	w9, [x8, #8]
  4102c0:	ldr	w10, [sp, #76]
  4102c4:	cmp	w9, w10
  4102c8:	b.hi	4102f4 <rtnl_talk_iov@@Base+0x338>  // b.pmore
  4102cc:	ldr	x8, [sp, #64]
  4102d0:	ldr	w9, [x8, #8]
  4102d4:	mov	w8, w9
  4102d8:	ldr	w9, [sp, #76]
  4102dc:	mov	w10, w9
  4102e0:	ldr	x11, [sp, #16]
  4102e4:	ldr	x12, [x11, #24]
  4102e8:	subs	x10, x10, x12
  4102ec:	cmp	x8, x10
  4102f0:	b.cs	410338 <rtnl_talk_iov@@Base+0x37c>  // b.hs, b.nlast
  4102f4:	ldr	w8, [sp, #44]
  4102f8:	add	w8, w8, #0x4
  4102fc:	subs	w8, w8, #0x1
  410300:	and	w8, w8, #0xfffffffc
  410304:	ldr	w9, [sp, #56]
  410308:	subs	w8, w9, w8
  41030c:	str	w8, [sp, #56]
  410310:	ldr	x10, [sp, #64]
  410314:	ldr	w8, [sp, #44]
  410318:	add	w8, w8, #0x4
  41031c:	subs	w8, w8, #0x1
  410320:	and	w8, w8, #0xfffffffc
  410324:	mov	w11, w8
  410328:	ubfx	x11, x11, #0, #32
  41032c:	add	x10, x10, x11
  410330:	str	x10, [sp, #64]
  410334:	b	4101f4 <rtnl_talk_iov@@Base+0x238>
  410338:	ldr	x8, [sp, #64]
  41033c:	ldrh	w9, [x8, #4]
  410340:	cmp	w9, #0x2
  410344:	b.ne	410474 <rtnl_talk_iov@@Base+0x4b8>  // b.any
  410348:	ldr	x8, [sp, #64]
  41034c:	add	x8, x8, #0x10
  410350:	str	x8, [sp, #32]
  410354:	ldr	x8, [sp, #32]
  410358:	ldr	w9, [x8]
  41035c:	str	w9, [sp, #28]
  410360:	ldrsw	x8, [sp, #40]
  410364:	cmp	x8, #0x14
  410368:	b.cs	410398 <rtnl_talk_iov@@Base+0x3dc>  // b.hs, b.nlast
  41036c:	ldr	x8, [sp, #8]
  410370:	ldr	x0, [x8]
  410374:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410378:	add	x1, x1, #0x2d
  41037c:	bl	4053c0 <fprintf@plt>
  410380:	ldr	x8, [sp, #48]
  410384:	mov	x0, x8
  410388:	bl	405200 <free@plt>
  41038c:	mov	w9, #0xffffffff            	// #-1
  410390:	stur	w9, [x29, #-4]
  410394:	b	41054c <rtnl_talk_iov@@Base+0x590>
  410398:	ldr	w8, [sp, #28]
  41039c:	cbnz	w8, 4103b4 <rtnl_talk_iov@@Base+0x3f8>
  4103a0:	ldr	x0, [sp, #64]
  4103a4:	ldr	x8, [sp, #16]
  4103a8:	ldr	x1, [x8]
  4103ac:	bl	40e6d8 <nl_dump_ext_ack@@Base>
  4103b0:	b	410404 <rtnl_talk_iov@@Base+0x448>
  4103b4:	ldr	w8, [sp, #28]
  4103b8:	mov	w9, wzr
  4103bc:	subs	w8, w9, w8
  4103c0:	str	w8, [sp, #4]
  4103c4:	bl	405390 <__errno_location@plt>
  4103c8:	ldr	w8, [sp, #4]
  4103cc:	str	w8, [x0]
  4103d0:	ldr	x10, [sp, #16]
  4103d4:	ldr	x11, [x10, #40]
  4103d8:	ldr	w9, [x11, #36]
  4103dc:	cmp	w9, #0x4
  4103e0:	b.eq	410404 <rtnl_talk_iov@@Base+0x448>  // b.none
  4103e4:	ldurb	w8, [x29, #-41]
  4103e8:	tbnz	w8, #0, 4103f0 <rtnl_talk_iov@@Base+0x434>
  4103ec:	b	410404 <rtnl_talk_iov@@Base+0x448>
  4103f0:	ldr	x0, [sp, #64]
  4103f4:	ldr	x1, [sp, #32]
  4103f8:	ldr	x8, [sp, #16]
  4103fc:	ldr	x2, [x8]
  410400:	bl	411f28 <__parse_rtattr_nested_compat@@Base+0x590>
  410404:	ldr	x8, [sp, #16]
  410408:	ldr	x9, [x8, #16]
  41040c:	cbz	x9, 410424 <rtnl_talk_iov@@Base+0x468>
  410410:	ldr	x8, [sp, #48]
  410414:	ldr	x9, [sp, #16]
  410418:	ldr	x10, [x9, #16]
  41041c:	str	x8, [x10]
  410420:	b	41042c <rtnl_talk_iov@@Base+0x470>
  410424:	ldr	x0, [sp, #48]
  410428:	bl	405200 <free@plt>
  41042c:	ldrsw	x8, [sp, #60]
  410430:	ldr	x9, [sp, #16]
  410434:	ldr	x10, [x9, #24]
  410438:	cmp	x8, x10
  41043c:	b.cs	410444 <rtnl_talk_iov@@Base+0x488>  // b.hs, b.nlast
  410440:	b	410174 <rtnl_talk_iov@@Base+0x1b8>
  410444:	ldr	w8, [sp, #28]
  410448:	cbz	w8, 410460 <rtnl_talk_iov@@Base+0x4a4>
  41044c:	ldr	w8, [sp, #60]
  410450:	mov	w9, wzr
  410454:	subs	w8, w9, w8
  410458:	str	w8, [sp]
  41045c:	b	410468 <rtnl_talk_iov@@Base+0x4ac>
  410460:	mov	w8, wzr
  410464:	str	w8, [sp]
  410468:	ldr	w8, [sp]
  41046c:	stur	w8, [x29, #-4]
  410470:	b	41054c <rtnl_talk_iov@@Base+0x590>
  410474:	ldr	x8, [sp, #16]
  410478:	ldr	x9, [x8, #16]
  41047c:	cbz	x9, 410498 <rtnl_talk_iov@@Base+0x4dc>
  410480:	ldr	x8, [sp, #48]
  410484:	ldr	x9, [sp, #16]
  410488:	ldr	x10, [x9, #16]
  41048c:	str	x8, [x10]
  410490:	stur	wzr, [x29, #-4]
  410494:	b	41054c <rtnl_talk_iov@@Base+0x590>
  410498:	ldr	x8, [sp, #8]
  41049c:	ldr	x0, [x8]
  4104a0:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  4104a4:	add	x1, x1, #0x308
  4104a8:	bl	4053c0 <fprintf@plt>
  4104ac:	ldr	w9, [sp, #44]
  4104b0:	add	w9, w9, #0x4
  4104b4:	subs	w9, w9, #0x1
  4104b8:	and	w9, w9, #0xfffffffc
  4104bc:	ldr	w10, [sp, #56]
  4104c0:	subs	w9, w10, w9
  4104c4:	str	w9, [sp, #56]
  4104c8:	ldr	x8, [sp, #64]
  4104cc:	ldr	w9, [sp, #44]
  4104d0:	add	w9, w9, #0x4
  4104d4:	subs	w9, w9, #0x1
  4104d8:	and	w9, w9, #0xfffffffc
  4104dc:	mov	w11, w9
  4104e0:	ubfx	x11, x11, #0, #32
  4104e4:	add	x8, x8, x11
  4104e8:	str	x8, [sp, #64]
  4104ec:	b	4101f4 <rtnl_talk_iov@@Base+0x238>
  4104f0:	ldr	x0, [sp, #48]
  4104f4:	bl	405200 <free@plt>
  4104f8:	ldr	w8, [sp, #128]
  4104fc:	and	w8, w8, #0x20
  410500:	cbz	w8, 41051c <rtnl_talk_iov@@Base+0x560>
  410504:	ldr	x8, [sp, #8]
  410508:	ldr	x0, [x8]
  41050c:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410510:	add	x1, x1, #0xd3
  410514:	bl	4053c0 <fprintf@plt>
  410518:	b	410174 <rtnl_talk_iov@@Base+0x1b8>
  41051c:	ldr	w8, [sp, #56]
  410520:	cbz	w8, 410548 <rtnl_talk_iov@@Base+0x58c>
  410524:	ldr	x8, [sp, #8]
  410528:	ldr	x0, [x8]
  41052c:	ldr	w2, [sp, #56]
  410530:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410534:	add	x1, x1, #0xe6
  410538:	bl	4053c0 <fprintf@plt>
  41053c:	mov	w9, #0x1                   	// #1
  410540:	mov	w0, w9
  410544:	bl	404e90 <exit@plt>
  410548:	b	410174 <rtnl_talk_iov@@Base+0x1b8>
  41054c:	ldur	w0, [x29, #-4]
  410550:	ldp	x29, x30, [sp, #224]
  410554:	add	sp, sp, #0xf0
  410558:	ret

000000000041055c <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  41055c:	sub	sp, sp, #0x30
  410560:	stp	x29, x30, [sp, #32]
  410564:	add	x29, sp, #0x20
  410568:	mov	x8, xzr
  41056c:	stur	x0, [x29, #-8]
  410570:	str	x1, [sp, #16]
  410574:	str	x2, [sp, #8]
  410578:	ldur	x0, [x29, #-8]
  41057c:	ldr	x1, [sp, #16]
  410580:	ldr	x2, [sp, #8]
  410584:	mov	w9, wzr
  410588:	and	w3, w9, #0x1
  41058c:	mov	x4, x8
  410590:	bl	40ff48 <rtnl_talk@@Base+0x44>
  410594:	ldp	x29, x30, [sp, #32]
  410598:	add	sp, sp, #0x30
  41059c:	ret

00000000004105a0 <rtnl_listen_all_nsid@@Base>:
  4105a0:	sub	sp, sp, #0x30
  4105a4:	stp	x29, x30, [sp, #32]
  4105a8:	add	x29, sp, #0x20
  4105ac:	mov	w8, #0x1                   	// #1
  4105b0:	mov	w1, #0x10e                 	// #270
  4105b4:	mov	w2, #0x8                   	// #8
  4105b8:	mov	w4, #0x4                   	// #4
  4105bc:	add	x3, sp, #0xc
  4105c0:	str	x0, [sp, #16]
  4105c4:	str	w8, [sp, #12]
  4105c8:	ldr	x9, [sp, #16]
  4105cc:	ldr	w0, [x9]
  4105d0:	bl	405010 <setsockopt@plt>
  4105d4:	cmp	w0, #0x0
  4105d8:	cset	w8, ge  // ge = tcont
  4105dc:	tbnz	w8, #0, 4105f8 <rtnl_listen_all_nsid@@Base+0x58>
  4105e0:	adrp	x0, 413000 <_IO_stdin_used@@Base+0xcf0>
  4105e4:	add	x0, x0, #0x3e
  4105e8:	bl	404ea0 <perror@plt>
  4105ec:	mov	w8, #0xffffffff            	// #-1
  4105f0:	stur	w8, [x29, #-4]
  4105f4:	b	41060c <rtnl_listen_all_nsid@@Base+0x6c>
  4105f8:	ldr	x8, [sp, #16]
  4105fc:	ldr	w9, [x8, #48]
  410600:	orr	w9, w9, #0x1
  410604:	str	w9, [x8, #48]
  410608:	stur	wzr, [x29, #-4]
  41060c:	ldur	w0, [x29, #-4]
  410610:	ldp	x29, x30, [sp, #32]
  410614:	add	sp, sp, #0x30
  410618:	ret

000000000041061c <rtnl_listen@@Base>:
  41061c:	stp	x29, x30, [sp, #-32]!
  410620:	str	x28, [sp, #16]
  410624:	mov	x29, sp
  410628:	sub	sp, sp, #0x6, lsl #12
  41062c:	sub	sp, sp, #0xe0
  410630:	sub	x8, x29, #0x88
  410634:	adrp	x9, 413000 <_IO_stdin_used@@Base+0xcf0>
  410638:	add	x9, x9, #0x34c
  41063c:	mov	w10, #0xc                   	// #12
  410640:	mov	x11, #0x1                   	// #1
  410644:	mov	x12, xzr
  410648:	adrp	x13, 423000 <_IO_stdin_used@@Base+0x10cf0>
  41064c:	ldr	x13, [x13, #3992]
  410650:	sub	x14, x29, #0x40
  410654:	sub	x15, x29, #0x50
  410658:	sub	x16, x29, #0x88
  41065c:	str	x0, [x8, #120]
  410660:	str	x1, [x8, #112]
  410664:	str	x2, [x8, #104]
  410668:	ldr	x17, [x9]
  41066c:	str	x17, [x8, #72]
  410670:	ldr	w18, [x9, #8]
  410674:	str	w18, [x8, #80]
  410678:	str	x14, [x8]
  41067c:	str	w10, [x8, #8]
  410680:	str	x15, [x16, #16]
  410684:	str	x11, [x8, #24]
  410688:	str	x12, [x16, #32]
  41068c:	str	xzr, [x8, #40]
  410690:	str	wzr, [x8, #48]
  410694:	ldr	x9, [x8, #120]
  410698:	ldr	w10, [x9, #48]
  41069c:	and	w10, w10, #0x1
  4106a0:	str	x8, [sp, #40]
  4106a4:	str	x13, [sp, #32]
  4106a8:	cbz	w10, 4106c4 <rtnl_listen@@Base+0xa8>
  4106ac:	sub	x8, x29, #0x88
  4106b0:	add	x9, sp, #0x58
  4106b4:	str	x9, [x8, #32]
  4106b8:	mov	x8, #0x2000                	// #8192
  4106bc:	ldr	x9, [sp, #40]
  4106c0:	str	x8, [x9, #40]
  4106c4:	add	x8, sp, #0x2, lsl #12
  4106c8:	add	x8, x8, #0x58
  4106cc:	ldr	x9, [sp, #40]
  4106d0:	str	x8, [x9, #56]
  4106d4:	mov	x8, #0x4000                	// #16384
  4106d8:	ldr	x9, [sp, #40]
  4106dc:	str	x8, [x9, #64]
  4106e0:	ldr	x8, [x9, #120]
  4106e4:	ldr	w0, [x8]
  4106e8:	sub	x1, x29, #0x88
  4106ec:	mov	w10, wzr
  4106f0:	mov	w2, w10
  4106f4:	bl	404e50 <recvmsg@plt>
  4106f8:	ldr	x8, [sp, #40]
  4106fc:	str	w0, [x8, #100]
  410700:	ldr	w10, [x8, #100]
  410704:	cmp	w10, #0x0
  410708:	cset	w10, ge  // ge = tcont
  41070c:	tbnz	w10, #0, 410790 <rtnl_listen@@Base+0x174>
  410710:	bl	405390 <__errno_location@plt>
  410714:	ldr	w8, [x0]
  410718:	cmp	w8, #0x4
  41071c:	b.eq	410730 <rtnl_listen@@Base+0x114>  // b.none
  410720:	bl	405390 <__errno_location@plt>
  410724:	ldr	w8, [x0]
  410728:	cmp	w8, #0xb
  41072c:	b.ne	410734 <rtnl_listen@@Base+0x118>  // b.any
  410730:	b	4106d4 <rtnl_listen@@Base+0xb8>
  410734:	ldr	x8, [sp, #32]
  410738:	ldr	x0, [x8]
  41073c:	str	x0, [sp, #24]
  410740:	bl	405390 <__errno_location@plt>
  410744:	ldr	w0, [x0]
  410748:	bl	405110 <strerror@plt>
  41074c:	str	x0, [sp, #16]
  410750:	bl	405390 <__errno_location@plt>
  410754:	ldr	w3, [x0]
  410758:	ldr	x0, [sp, #24]
  41075c:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410760:	add	x1, x1, #0x56
  410764:	ldr	x2, [sp, #16]
  410768:	bl	4053c0 <fprintf@plt>
  41076c:	bl	405390 <__errno_location@plt>
  410770:	ldr	w9, [x0]
  410774:	cmp	w9, #0x69
  410778:	b.ne	410780 <rtnl_listen@@Base+0x164>  // b.any
  41077c:	b	4106d4 <rtnl_listen@@Base+0xb8>
  410780:	mov	w8, #0xffffffff            	// #-1
  410784:	ldr	x9, [sp, #40]
  410788:	str	w8, [x9, #132]
  41078c:	b	410a4c <rtnl_listen@@Base+0x430>
  410790:	ldr	x8, [sp, #40]
  410794:	ldr	w9, [x8, #100]
  410798:	cbnz	w9, 4107c0 <rtnl_listen@@Base+0x1a4>
  41079c:	ldr	x8, [sp, #32]
  4107a0:	ldr	x0, [x8]
  4107a4:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  4107a8:	add	x1, x1, #0x75
  4107ac:	bl	4053c0 <fprintf@plt>
  4107b0:	mov	w9, #0xffffffff            	// #-1
  4107b4:	ldr	x8, [sp, #40]
  4107b8:	str	w9, [x8, #132]
  4107bc:	b	410a4c <rtnl_listen@@Base+0x430>
  4107c0:	ldr	x8, [sp, #40]
  4107c4:	ldr	w9, [x8, #8]
  4107c8:	mov	w10, w9
  4107cc:	cmp	x10, #0xc
  4107d0:	b.eq	4107fc <rtnl_listen@@Base+0x1e0>  // b.none
  4107d4:	ldr	x8, [sp, #32]
  4107d8:	ldr	x0, [x8]
  4107dc:	ldr	x9, [sp, #40]
  4107e0:	ldr	w2, [x9, #8]
  4107e4:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  4107e8:	add	x1, x1, #0x85
  4107ec:	bl	4053c0 <fprintf@plt>
  4107f0:	mov	w10, #0x1                   	// #1
  4107f4:	mov	w0, w10
  4107f8:	bl	404e90 <exit@plt>
  4107fc:	ldr	x8, [sp, #40]
  410800:	ldr	x9, [x8, #120]
  410804:	ldr	w10, [x9, #48]
  410808:	and	w10, w10, #0x1
  41080c:	cbz	w10, 4108b0 <rtnl_listen@@Base+0x294>
  410810:	str	wzr, [sp, #84]
  410814:	mov	w8, #0xffffffff            	// #-1
  410818:	str	w8, [sp, #84]
  41081c:	ldr	x9, [sp, #40]
  410820:	ldr	x10, [x9, #40]
  410824:	cmp	x10, #0x10
  410828:	b.cc	41083c <rtnl_listen@@Base+0x220>  // b.lo, b.ul, b.last
  41082c:	sub	x8, x29, #0x88
  410830:	ldr	x8, [x8, #32]
  410834:	str	x8, [sp, #8]
  410838:	b	410844 <rtnl_listen@@Base+0x228>
  41083c:	mov	x8, xzr
  410840:	str	x8, [sp, #8]
  410844:	ldr	x8, [sp, #8]
  410848:	str	x8, [sp, #72]
  41084c:	ldr	x8, [sp, #72]
  410850:	cbz	x8, 4108b0 <rtnl_listen@@Base+0x294>
  410854:	ldr	x8, [sp, #72]
  410858:	ldr	w9, [x8, #8]
  41085c:	cmp	w9, #0x10e
  410860:	b.ne	41089c <rtnl_listen@@Base+0x280>  // b.any
  410864:	ldr	x8, [sp, #72]
  410868:	ldr	w9, [x8, #12]
  41086c:	cmp	w9, #0x8
  410870:	b.ne	41089c <rtnl_listen@@Base+0x280>  // b.any
  410874:	ldr	x8, [sp, #72]
  410878:	ldr	x8, [x8]
  41087c:	cmp	x8, #0x14
  410880:	b.ne	41089c <rtnl_listen@@Base+0x280>  // b.any
  410884:	ldr	x8, [sp, #72]
  410888:	add	x8, x8, #0x10
  41088c:	str	x8, [sp, #64]
  410890:	ldr	x8, [sp, #64]
  410894:	ldr	w9, [x8]
  410898:	str	w9, [sp, #84]
  41089c:	ldr	x1, [sp, #72]
  4108a0:	sub	x0, x29, #0x88
  4108a4:	bl	404eb0 <__cmsg_nxthdr@plt>
  4108a8:	str	x0, [sp, #72]
  4108ac:	b	41084c <rtnl_listen@@Base+0x230>
  4108b0:	add	x8, sp, #0x2, lsl #12
  4108b4:	add	x8, x8, #0x58
  4108b8:	ldr	x9, [sp, #40]
  4108bc:	str	x8, [x9, #88]
  4108c0:	ldr	x8, [sp, #40]
  4108c4:	ldrsw	x9, [x8, #100]
  4108c8:	cmp	x9, #0x10
  4108cc:	b.cc	4109ec <rtnl_listen@@Base+0x3d0>  // b.lo, b.ul, b.last
  4108d0:	ldr	x8, [sp, #40]
  4108d4:	ldr	x9, [x8, #88]
  4108d8:	ldr	w10, [x9]
  4108dc:	str	w10, [sp, #56]
  4108e0:	ldrsw	x9, [sp, #56]
  4108e4:	subs	x9, x9, #0x10
  4108e8:	str	w9, [sp, #52]
  4108ec:	ldr	w9, [sp, #52]
  4108f0:	cmp	w9, #0x0
  4108f4:	cset	w9, lt  // lt = tstop
  4108f8:	tbnz	w9, #0, 410910 <rtnl_listen@@Base+0x2f4>
  4108fc:	ldr	w8, [sp, #56]
  410900:	ldr	x9, [sp, #40]
  410904:	ldr	w10, [x9, #100]
  410908:	cmp	w8, w10
  41090c:	b.le	410968 <rtnl_listen@@Base+0x34c>
  410910:	ldr	x8, [sp, #40]
  410914:	ldr	w9, [x8, #48]
  410918:	and	w9, w9, #0x20
  41091c:	cbz	w9, 410944 <rtnl_listen@@Base+0x328>
  410920:	ldr	x8, [sp, #32]
  410924:	ldr	x0, [x8]
  410928:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  41092c:	add	x1, x1, #0xa2
  410930:	bl	4053c0 <fprintf@plt>
  410934:	mov	w9, #0xffffffff            	// #-1
  410938:	ldr	x8, [sp, #40]
  41093c:	str	w9, [x8, #132]
  410940:	b	410a4c <rtnl_listen@@Base+0x430>
  410944:	ldr	x8, [sp, #32]
  410948:	ldr	x0, [x8]
  41094c:	ldr	w2, [sp, #56]
  410950:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410954:	add	x1, x1, #0xb5
  410958:	bl	4053c0 <fprintf@plt>
  41095c:	mov	w9, #0x1                   	// #1
  410960:	mov	w0, w9
  410964:	bl	404e90 <exit@plt>
  410968:	ldr	x8, [sp, #40]
  41096c:	ldr	x9, [x8, #112]
  410970:	ldr	x1, [x8, #88]
  410974:	ldr	x2, [x8, #104]
  410978:	add	x0, sp, #0x54
  41097c:	blr	x9
  410980:	str	w0, [sp, #60]
  410984:	ldr	w10, [sp, #60]
  410988:	cmp	w10, #0x0
  41098c:	cset	w10, ge  // ge = tcont
  410990:	tbnz	w10, #0, 4109a4 <rtnl_listen@@Base+0x388>
  410994:	ldr	w8, [sp, #60]
  410998:	ldr	x9, [sp, #40]
  41099c:	str	w8, [x9, #132]
  4109a0:	b	410a4c <rtnl_listen@@Base+0x430>
  4109a4:	ldr	w8, [sp, #56]
  4109a8:	add	w8, w8, #0x4
  4109ac:	subs	w8, w8, #0x1
  4109b0:	and	w8, w8, #0xfffffffc
  4109b4:	ldr	x9, [sp, #40]
  4109b8:	ldr	w10, [x9, #100]
  4109bc:	subs	w8, w10, w8
  4109c0:	str	w8, [x9, #100]
  4109c4:	ldr	x11, [x9, #88]
  4109c8:	ldr	w8, [sp, #56]
  4109cc:	add	w8, w8, #0x4
  4109d0:	subs	w8, w8, #0x1
  4109d4:	and	w8, w8, #0xfffffffc
  4109d8:	mov	w12, w8
  4109dc:	ubfx	x12, x12, #0, #32
  4109e0:	add	x11, x11, x12
  4109e4:	str	x11, [x9, #88]
  4109e8:	b	4108c0 <rtnl_listen@@Base+0x2a4>
  4109ec:	ldr	x8, [sp, #40]
  4109f0:	ldr	w9, [x8, #48]
  4109f4:	and	w9, w9, #0x20
  4109f8:	cbz	w9, 410a14 <rtnl_listen@@Base+0x3f8>
  4109fc:	ldr	x8, [sp, #32]
  410a00:	ldr	x0, [x8]
  410a04:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410a08:	add	x1, x1, #0xd3
  410a0c:	bl	4053c0 <fprintf@plt>
  410a10:	b	4106d4 <rtnl_listen@@Base+0xb8>
  410a14:	ldr	x8, [sp, #40]
  410a18:	ldr	w9, [x8, #100]
  410a1c:	cbz	w9, 410a48 <rtnl_listen@@Base+0x42c>
  410a20:	ldr	x8, [sp, #32]
  410a24:	ldr	x0, [x8]
  410a28:	ldr	x9, [sp, #40]
  410a2c:	ldr	w2, [x9, #100]
  410a30:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410a34:	add	x1, x1, #0xe6
  410a38:	bl	4053c0 <fprintf@plt>
  410a3c:	mov	w10, #0x1                   	// #1
  410a40:	mov	w0, w10
  410a44:	bl	404e90 <exit@plt>
  410a48:	b	4106d4 <rtnl_listen@@Base+0xb8>
  410a4c:	ldr	x8, [sp, #40]
  410a50:	ldr	w0, [x8, #132]
  410a54:	add	sp, sp, #0x6, lsl #12
  410a58:	add	sp, sp, #0xe0
  410a5c:	ldr	x28, [sp, #16]
  410a60:	ldp	x29, x30, [sp], #32
  410a64:	ret

0000000000410a68 <rtnl_from_file@@Base>:
  410a68:	stp	x29, x30, [sp, #-32]!
  410a6c:	str	x28, [sp, #16]
  410a70:	mov	x29, sp
  410a74:	sub	sp, sp, #0x4, lsl #12
  410a78:	sub	sp, sp, #0x70
  410a7c:	sub	x8, x29, #0x28
  410a80:	adrp	x9, 423000 <_IO_stdin_used@@Base+0x10cf0>
  410a84:	ldr	x9, [x9, #3992]
  410a88:	add	x10, sp, #0x48
  410a8c:	str	x0, [x8, #24]
  410a90:	str	x1, [x8, #16]
  410a94:	str	x2, [x8, #8]
  410a98:	str	x10, [sp, #64]
  410a9c:	str	x8, [sp, #40]
  410aa0:	str	x9, [sp, #32]
  410aa4:	ldr	x8, [sp, #40]
  410aa8:	ldr	x3, [x8, #24]
  410aac:	add	x0, sp, #0x48
  410ab0:	mov	x1, #0x1                   	// #1
  410ab4:	mov	x2, #0x10                  	// #16
  410ab8:	bl	4051d0 <fread@plt>
  410abc:	ldr	x8, [sp, #40]
  410ac0:	str	x0, [x8]
  410ac4:	ldr	x9, [x8]
  410ac8:	cbnz	x9, 410ae8 <rtnl_from_file@@Base+0x80>
  410acc:	ldr	x8, [sp, #40]
  410ad0:	ldr	x0, [x8, #24]
  410ad4:	bl	405170 <feof@plt>
  410ad8:	cbz	w0, 410ae8 <rtnl_from_file@@Base+0x80>
  410adc:	ldr	x8, [sp, #40]
  410ae0:	str	wzr, [x8, #36]
  410ae4:	b	410cc0 <rtnl_from_file@@Base+0x258>
  410ae8:	ldr	x8, [sp, #40]
  410aec:	ldr	x9, [x8]
  410af0:	cmp	x9, #0x10
  410af4:	b.eq	410b48 <rtnl_from_file@@Base+0xe0>  // b.none
  410af8:	ldr	x8, [sp, #40]
  410afc:	ldr	x0, [x8, #24]
  410b00:	bl	4053f0 <ferror@plt>
  410b04:	cbz	w0, 410b14 <rtnl_from_file@@Base+0xac>
  410b08:	adrp	x0, 413000 <_IO_stdin_used@@Base+0xcf0>
  410b0c:	add	x0, x0, #0xfd
  410b10:	bl	404ea0 <perror@plt>
  410b14:	ldr	x8, [sp, #40]
  410b18:	ldr	x0, [x8, #24]
  410b1c:	bl	405170 <feof@plt>
  410b20:	cbz	w0, 410b38 <rtnl_from_file@@Base+0xd0>
  410b24:	ldr	x8, [sp, #32]
  410b28:	ldr	x0, [x8]
  410b2c:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410b30:	add	x1, x1, #0x113
  410b34:	bl	4053c0 <fprintf@plt>
  410b38:	mov	w8, #0xffffffff            	// #-1
  410b3c:	ldr	x9, [sp, #40]
  410b40:	str	w8, [x9, #36]
  410b44:	b	410cc0 <rtnl_from_file@@Base+0x258>
  410b48:	ldr	x8, [sp, #64]
  410b4c:	ldr	w9, [x8]
  410b50:	str	w9, [sp, #56]
  410b54:	ldrsw	x8, [sp, #56]
  410b58:	subs	x8, x8, #0x10
  410b5c:	str	w8, [sp, #52]
  410b60:	ldr	w8, [sp, #52]
  410b64:	cmp	w8, #0x0
  410b68:	cset	w8, lt  // lt = tstop
  410b6c:	tbnz	w8, #0, 410b7c <rtnl_from_file@@Base+0x114>
  410b70:	ldrsw	x8, [sp, #56]
  410b74:	cmp	x8, #0x4, lsl #12
  410b78:	b.ls	410bd0 <rtnl_from_file@@Base+0x168>  // b.plast
  410b7c:	ldr	x8, [sp, #32]
  410b80:	ldr	x0, [x8]
  410b84:	ldr	w2, [sp, #56]
  410b88:	ldr	x9, [sp, #40]
  410b8c:	ldr	x10, [x9, #24]
  410b90:	str	x0, [sp, #24]
  410b94:	mov	x0, x10
  410b98:	str	w2, [sp, #20]
  410b9c:	bl	404f30 <ftell@plt>
  410ba0:	ldr	x8, [sp, #24]
  410ba4:	str	x0, [sp, #8]
  410ba8:	mov	x0, x8
  410bac:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410bb0:	add	x1, x1, #0x136
  410bb4:	ldr	w2, [sp, #20]
  410bb8:	ldr	x3, [sp, #8]
  410bbc:	bl	4053c0 <fprintf@plt>
  410bc0:	mov	w11, #0xffffffff            	// #-1
  410bc4:	ldr	x8, [sp, #40]
  410bc8:	str	w11, [x8, #36]
  410bcc:	b	410cc0 <rtnl_from_file@@Base+0x258>
  410bd0:	ldr	x8, [sp, #64]
  410bd4:	add	x0, x8, #0x10
  410bd8:	ldr	w9, [sp, #52]
  410bdc:	add	w9, w9, #0x4
  410be0:	subs	w9, w9, #0x1
  410be4:	and	w9, w9, #0xfffffffc
  410be8:	mov	w8, w9
  410bec:	ubfx	x2, x8, #0, #32
  410bf0:	ldr	x8, [sp, #40]
  410bf4:	ldr	x3, [x8, #24]
  410bf8:	mov	x1, #0x1                   	// #1
  410bfc:	bl	4051d0 <fread@plt>
  410c00:	ldr	x8, [sp, #40]
  410c04:	str	x0, [x8]
  410c08:	ldr	x10, [x8]
  410c0c:	ldr	w9, [sp, #52]
  410c10:	add	w9, w9, #0x4
  410c14:	subs	w9, w9, #0x1
  410c18:	and	w9, w9, #0xfffffffc
  410c1c:	mov	w11, w9
  410c20:	ubfx	x11, x11, #0, #32
  410c24:	cmp	x10, x11
  410c28:	b.eq	410c7c <rtnl_from_file@@Base+0x214>  // b.none
  410c2c:	ldr	x8, [sp, #40]
  410c30:	ldr	x0, [x8, #24]
  410c34:	bl	4053f0 <ferror@plt>
  410c38:	cbz	w0, 410c48 <rtnl_from_file@@Base+0x1e0>
  410c3c:	adrp	x0, 413000 <_IO_stdin_used@@Base+0xcf0>
  410c40:	add	x0, x0, #0xfd
  410c44:	bl	404ea0 <perror@plt>
  410c48:	ldr	x8, [sp, #40]
  410c4c:	ldr	x0, [x8, #24]
  410c50:	bl	405170 <feof@plt>
  410c54:	cbz	w0, 410c6c <rtnl_from_file@@Base+0x204>
  410c58:	ldr	x8, [sp, #32]
  410c5c:	ldr	x0, [x8]
  410c60:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410c64:	add	x1, x1, #0x113
  410c68:	bl	4053c0 <fprintf@plt>
  410c6c:	mov	w8, #0xffffffff            	// #-1
  410c70:	ldr	x9, [sp, #40]
  410c74:	str	w8, [x9, #36]
  410c78:	b	410cc0 <rtnl_from_file@@Base+0x258>
  410c7c:	ldr	x8, [sp, #40]
  410c80:	ldr	x9, [x8, #16]
  410c84:	ldr	x1, [sp, #64]
  410c88:	ldr	x2, [x8, #8]
  410c8c:	mov	x10, xzr
  410c90:	mov	x0, x10
  410c94:	blr	x9
  410c98:	str	w0, [sp, #60]
  410c9c:	ldr	w11, [sp, #60]
  410ca0:	cmp	w11, #0x0
  410ca4:	cset	w11, ge  // ge = tcont
  410ca8:	tbnz	w11, #0, 410cbc <rtnl_from_file@@Base+0x254>
  410cac:	ldr	w8, [sp, #60]
  410cb0:	ldr	x9, [sp, #40]
  410cb4:	str	w8, [x9, #36]
  410cb8:	b	410cc0 <rtnl_from_file@@Base+0x258>
  410cbc:	b	410aa4 <rtnl_from_file@@Base+0x3c>
  410cc0:	ldr	x8, [sp, #40]
  410cc4:	ldr	w0, [x8, #36]
  410cc8:	add	sp, sp, #0x4, lsl #12
  410ccc:	add	sp, sp, #0x70
  410cd0:	ldr	x28, [sp, #16]
  410cd4:	ldp	x29, x30, [sp], #32
  410cd8:	ret

0000000000410cdc <addattr@@Base>:
  410cdc:	sub	sp, sp, #0x20
  410ce0:	stp	x29, x30, [sp, #16]
  410ce4:	add	x29, sp, #0x10
  410ce8:	mov	x8, xzr
  410cec:	mov	w9, wzr
  410cf0:	str	x0, [sp, #8]
  410cf4:	str	w1, [sp, #4]
  410cf8:	str	w2, [sp]
  410cfc:	ldr	x0, [sp, #8]
  410d00:	ldr	w1, [sp, #4]
  410d04:	ldr	w2, [sp]
  410d08:	mov	x3, x8
  410d0c:	mov	w4, w9
  410d10:	bl	410d20 <addattr_l@@Base>
  410d14:	ldp	x29, x30, [sp, #16]
  410d18:	add	sp, sp, #0x20
  410d1c:	ret

0000000000410d20 <addattr_l@@Base>:
  410d20:	sub	sp, sp, #0x40
  410d24:	stp	x29, x30, [sp, #48]
  410d28:	add	x29, sp, #0x30
  410d2c:	stur	x0, [x29, #-16]
  410d30:	stur	w1, [x29, #-20]
  410d34:	str	w2, [sp, #24]
  410d38:	str	x3, [sp, #16]
  410d3c:	str	w4, [sp, #12]
  410d40:	ldrsw	x8, [sp, #12]
  410d44:	add	x8, x8, #0x4
  410d48:	str	w8, [sp, #8]
  410d4c:	ldur	x9, [x29, #-16]
  410d50:	ldr	w8, [x9]
  410d54:	add	w8, w8, #0x4
  410d58:	subs	w8, w8, #0x1
  410d5c:	and	w8, w8, #0xfffffffc
  410d60:	ldr	w10, [sp, #8]
  410d64:	add	w10, w10, #0x4
  410d68:	subs	w10, w10, #0x1
  410d6c:	and	w10, w10, #0xfffffffc
  410d70:	add	w8, w8, w10
  410d74:	ldur	w10, [x29, #-20]
  410d78:	cmp	w8, w10
  410d7c:	b.ls	410da8 <addattr_l@@Base+0x88>  // b.plast
  410d80:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  410d84:	ldr	x8, [x8, #3992]
  410d88:	ldr	x0, [x8]
  410d8c:	ldur	w2, [x29, #-20]
  410d90:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  410d94:	add	x1, x1, #0x159
  410d98:	bl	4053c0 <fprintf@plt>
  410d9c:	mov	w9, #0xffffffff            	// #-1
  410da0:	stur	w9, [x29, #-4]
  410da4:	b	410e38 <addattr_l@@Base+0x118>
  410da8:	ldur	x8, [x29, #-16]
  410dac:	ldur	x9, [x29, #-16]
  410db0:	ldr	w10, [x9]
  410db4:	add	w10, w10, #0x4
  410db8:	subs	w10, w10, #0x1
  410dbc:	and	w10, w10, #0xfffffffc
  410dc0:	mov	w9, w10
  410dc4:	ubfx	x9, x9, #0, #32
  410dc8:	add	x8, x8, x9
  410dcc:	str	x8, [sp]
  410dd0:	ldr	w10, [sp, #24]
  410dd4:	ldr	x8, [sp]
  410dd8:	strh	w10, [x8, #2]
  410ddc:	ldr	w10, [sp, #8]
  410de0:	ldr	x8, [sp]
  410de4:	strh	w10, [x8]
  410de8:	ldr	w10, [sp, #12]
  410dec:	cbz	w10, 410e04 <addattr_l@@Base+0xe4>
  410df0:	ldr	x8, [sp]
  410df4:	add	x0, x8, #0x4
  410df8:	ldr	x1, [sp, #16]
  410dfc:	ldrsw	x2, [sp, #12]
  410e00:	bl	404e40 <memcpy@plt>
  410e04:	ldur	x8, [x29, #-16]
  410e08:	ldr	w9, [x8]
  410e0c:	add	w9, w9, #0x4
  410e10:	subs	w9, w9, #0x1
  410e14:	and	w9, w9, #0xfffffffc
  410e18:	ldr	w10, [sp, #8]
  410e1c:	add	w10, w10, #0x4
  410e20:	subs	w10, w10, #0x1
  410e24:	and	w10, w10, #0xfffffffc
  410e28:	add	w9, w9, w10
  410e2c:	ldur	x8, [x29, #-16]
  410e30:	str	w9, [x8]
  410e34:	stur	wzr, [x29, #-4]
  410e38:	ldur	w0, [x29, #-4]
  410e3c:	ldp	x29, x30, [sp, #48]
  410e40:	add	sp, sp, #0x40
  410e44:	ret

0000000000410e48 <addattr8@@Base>:
  410e48:	sub	sp, sp, #0x30
  410e4c:	stp	x29, x30, [sp, #32]
  410e50:	add	x29, sp, #0x20
  410e54:	mov	w4, #0x1                   	// #1
  410e58:	add	x8, sp, #0xf
  410e5c:	stur	x0, [x29, #-8]
  410e60:	stur	w1, [x29, #-12]
  410e64:	str	w2, [sp, #16]
  410e68:	strb	w3, [sp, #15]
  410e6c:	ldur	x0, [x29, #-8]
  410e70:	ldur	w1, [x29, #-12]
  410e74:	ldr	w2, [sp, #16]
  410e78:	mov	x3, x8
  410e7c:	bl	410d20 <addattr_l@@Base>
  410e80:	ldp	x29, x30, [sp, #32]
  410e84:	add	sp, sp, #0x30
  410e88:	ret

0000000000410e8c <addattr16@@Base>:
  410e8c:	sub	sp, sp, #0x30
  410e90:	stp	x29, x30, [sp, #32]
  410e94:	add	x29, sp, #0x20
  410e98:	mov	w4, #0x2                   	// #2
  410e9c:	add	x8, sp, #0xe
  410ea0:	stur	x0, [x29, #-8]
  410ea4:	stur	w1, [x29, #-12]
  410ea8:	str	w2, [sp, #16]
  410eac:	strh	w3, [sp, #14]
  410eb0:	ldur	x0, [x29, #-8]
  410eb4:	ldur	w1, [x29, #-12]
  410eb8:	ldr	w2, [sp, #16]
  410ebc:	mov	x3, x8
  410ec0:	bl	410d20 <addattr_l@@Base>
  410ec4:	ldp	x29, x30, [sp, #32]
  410ec8:	add	sp, sp, #0x30
  410ecc:	ret

0000000000410ed0 <addattr32@@Base>:
  410ed0:	sub	sp, sp, #0x30
  410ed4:	stp	x29, x30, [sp, #32]
  410ed8:	add	x29, sp, #0x20
  410edc:	mov	w4, #0x4                   	// #4
  410ee0:	add	x8, sp, #0xc
  410ee4:	stur	x0, [x29, #-8]
  410ee8:	stur	w1, [x29, #-12]
  410eec:	str	w2, [sp, #16]
  410ef0:	str	w3, [sp, #12]
  410ef4:	ldur	x0, [x29, #-8]
  410ef8:	ldur	w1, [x29, #-12]
  410efc:	ldr	w2, [sp, #16]
  410f00:	mov	x3, x8
  410f04:	bl	410d20 <addattr_l@@Base>
  410f08:	ldp	x29, x30, [sp, #32]
  410f0c:	add	sp, sp, #0x30
  410f10:	ret

0000000000410f14 <addattr64@@Base>:
  410f14:	sub	sp, sp, #0x30
  410f18:	stp	x29, x30, [sp, #32]
  410f1c:	add	x29, sp, #0x20
  410f20:	mov	w4, #0x8                   	// #8
  410f24:	add	x8, sp, #0x8
  410f28:	stur	x0, [x29, #-8]
  410f2c:	stur	w1, [x29, #-12]
  410f30:	str	w2, [sp, #16]
  410f34:	str	x3, [sp, #8]
  410f38:	ldur	x0, [x29, #-8]
  410f3c:	ldur	w1, [x29, #-12]
  410f40:	ldr	w2, [sp, #16]
  410f44:	mov	x3, x8
  410f48:	bl	410d20 <addattr_l@@Base>
  410f4c:	ldp	x29, x30, [sp, #32]
  410f50:	add	sp, sp, #0x30
  410f54:	ret

0000000000410f58 <addattrstrz@@Base>:
  410f58:	sub	sp, sp, #0x40
  410f5c:	stp	x29, x30, [sp, #48]
  410f60:	add	x29, sp, #0x30
  410f64:	stur	x0, [x29, #-8]
  410f68:	stur	w1, [x29, #-12]
  410f6c:	stur	w2, [x29, #-16]
  410f70:	str	x3, [sp, #24]
  410f74:	ldur	x0, [x29, #-8]
  410f78:	ldur	w1, [x29, #-12]
  410f7c:	ldur	w2, [x29, #-16]
  410f80:	ldr	x3, [sp, #24]
  410f84:	ldr	x8, [sp, #24]
  410f88:	str	x0, [sp, #16]
  410f8c:	mov	x0, x8
  410f90:	str	w1, [sp, #12]
  410f94:	str	w2, [sp, #8]
  410f98:	str	x3, [sp]
  410f9c:	bl	404e70 <strlen@plt>
  410fa0:	add	x8, x0, #0x1
  410fa4:	ldr	x0, [sp, #16]
  410fa8:	ldr	w1, [sp, #12]
  410fac:	ldr	w2, [sp, #8]
  410fb0:	ldr	x3, [sp]
  410fb4:	mov	w4, w8
  410fb8:	bl	410d20 <addattr_l@@Base>
  410fbc:	ldp	x29, x30, [sp, #48]
  410fc0:	add	sp, sp, #0x40
  410fc4:	ret

0000000000410fc8 <addraw_l@@Base>:
  410fc8:	sub	sp, sp, #0x40
  410fcc:	stp	x29, x30, [sp, #48]
  410fd0:	add	x29, sp, #0x30
  410fd4:	stur	x0, [x29, #-16]
  410fd8:	stur	w1, [x29, #-20]
  410fdc:	str	x2, [sp, #16]
  410fe0:	str	w3, [sp, #12]
  410fe4:	ldur	x8, [x29, #-16]
  410fe8:	ldr	w9, [x8]
  410fec:	add	w9, w9, #0x4
  410ff0:	subs	w9, w9, #0x1
  410ff4:	and	w9, w9, #0xfffffffc
  410ff8:	ldr	w10, [sp, #12]
  410ffc:	add	w10, w10, #0x4
  411000:	subs	w10, w10, #0x1
  411004:	and	w10, w10, #0xfffffffc
  411008:	add	w9, w9, w10
  41100c:	ldur	w10, [x29, #-20]
  411010:	cmp	w9, w10
  411014:	b.ls	411040 <addraw_l@@Base+0x78>  // b.plast
  411018:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  41101c:	ldr	x8, [x8, #3992]
  411020:	ldr	x0, [x8]
  411024:	ldur	w2, [x29, #-20]
  411028:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  41102c:	add	x1, x1, #0x188
  411030:	bl	4053c0 <fprintf@plt>
  411034:	mov	w9, #0xffffffff            	// #-1
  411038:	stur	w9, [x29, #-4]
  41103c:	b	4110fc <addraw_l@@Base+0x134>
  411040:	ldur	x8, [x29, #-16]
  411044:	ldur	x9, [x29, #-16]
  411048:	ldr	w10, [x9]
  41104c:	add	w10, w10, #0x4
  411050:	subs	w10, w10, #0x1
  411054:	and	w10, w10, #0xfffffffc
  411058:	mov	w9, w10
  41105c:	ubfx	x9, x9, #0, #32
  411060:	add	x0, x8, x9
  411064:	ldr	x1, [sp, #16]
  411068:	ldrsw	x2, [sp, #12]
  41106c:	bl	404e40 <memcpy@plt>
  411070:	ldur	x8, [x29, #-16]
  411074:	ldur	x9, [x29, #-16]
  411078:	ldr	w10, [x9]
  41107c:	add	w10, w10, #0x4
  411080:	subs	w10, w10, #0x1
  411084:	and	w10, w10, #0xfffffffc
  411088:	mov	w9, w10
  41108c:	ubfx	x9, x9, #0, #32
  411090:	add	x8, x8, x9
  411094:	ldrsw	x9, [sp, #12]
  411098:	add	x0, x8, x9
  41109c:	ldr	w10, [sp, #12]
  4110a0:	add	w10, w10, #0x4
  4110a4:	subs	w10, w10, #0x1
  4110a8:	and	w10, w10, #0xfffffffc
  4110ac:	ldr	w11, [sp, #12]
  4110b0:	subs	w10, w10, w11
  4110b4:	mov	w8, w10
  4110b8:	ubfx	x2, x8, #0, #32
  4110bc:	mov	w10, wzr
  4110c0:	mov	w1, w10
  4110c4:	bl	405070 <memset@plt>
  4110c8:	ldur	x8, [x29, #-16]
  4110cc:	ldr	w10, [x8]
  4110d0:	add	w10, w10, #0x4
  4110d4:	subs	w10, w10, #0x1
  4110d8:	and	w10, w10, #0xfffffffc
  4110dc:	ldr	w11, [sp, #12]
  4110e0:	add	w11, w11, #0x4
  4110e4:	subs	w11, w11, #0x1
  4110e8:	and	w11, w11, #0xfffffffc
  4110ec:	add	w10, w10, w11
  4110f0:	ldur	x8, [x29, #-16]
  4110f4:	str	w10, [x8]
  4110f8:	stur	wzr, [x29, #-4]
  4110fc:	ldur	w0, [x29, #-4]
  411100:	ldp	x29, x30, [sp, #48]
  411104:	add	sp, sp, #0x40
  411108:	ret

000000000041110c <addattr_nest@@Base>:
  41110c:	sub	sp, sp, #0x30
  411110:	stp	x29, x30, [sp, #32]
  411114:	add	x29, sp, #0x20
  411118:	mov	x8, xzr
  41111c:	mov	w9, wzr
  411120:	stur	x0, [x29, #-8]
  411124:	stur	w1, [x29, #-12]
  411128:	str	w2, [sp, #16]
  41112c:	ldur	x10, [x29, #-8]
  411130:	ldur	x11, [x29, #-8]
  411134:	ldr	w12, [x11]
  411138:	add	w12, w12, #0x4
  41113c:	subs	w12, w12, #0x1
  411140:	and	w12, w12, #0xfffffffc
  411144:	mov	w11, w12
  411148:	ubfx	x11, x11, #0, #32
  41114c:	add	x10, x10, x11
  411150:	str	x10, [sp, #8]
  411154:	ldur	x0, [x29, #-8]
  411158:	ldur	w1, [x29, #-12]
  41115c:	ldr	w2, [sp, #16]
  411160:	mov	x3, x8
  411164:	mov	w4, w9
  411168:	bl	410d20 <addattr_l@@Base>
  41116c:	ldr	x8, [sp, #8]
  411170:	mov	x0, x8
  411174:	ldp	x29, x30, [sp, #32]
  411178:	add	sp, sp, #0x30
  41117c:	ret

0000000000411180 <addattr_nest_end@@Base>:
  411180:	sub	sp, sp, #0x10
  411184:	str	x0, [sp, #8]
  411188:	str	x1, [sp]
  41118c:	ldr	x8, [sp, #8]
  411190:	ldr	x9, [sp, #8]
  411194:	ldr	w10, [x9]
  411198:	add	w10, w10, #0x4
  41119c:	subs	w10, w10, #0x1
  4111a0:	and	w10, w10, #0xfffffffc
  4111a4:	mov	w9, w10
  4111a8:	ubfx	x9, x9, #0, #32
  4111ac:	add	x8, x8, x9
  4111b0:	ldr	x9, [sp]
  4111b4:	subs	x8, x8, x9
  4111b8:	ldr	x9, [sp]
  4111bc:	strh	w8, [x9]
  4111c0:	ldr	x9, [sp, #8]
  4111c4:	ldr	w0, [x9]
  4111c8:	add	sp, sp, #0x10
  4111cc:	ret

00000000004111d0 <addattr_nest_compat@@Base>:
  4111d0:	sub	sp, sp, #0x40
  4111d4:	stp	x29, x30, [sp, #48]
  4111d8:	add	x29, sp, #0x30
  4111dc:	stur	x0, [x29, #-8]
  4111e0:	stur	w1, [x29, #-12]
  4111e4:	stur	w2, [x29, #-16]
  4111e8:	str	x3, [sp, #24]
  4111ec:	str	w4, [sp, #20]
  4111f0:	ldur	x8, [x29, #-8]
  4111f4:	ldur	x9, [x29, #-8]
  4111f8:	ldr	w10, [x9]
  4111fc:	add	w10, w10, #0x4
  411200:	subs	w10, w10, #0x1
  411204:	and	w10, w10, #0xfffffffc
  411208:	mov	w9, w10
  41120c:	ubfx	x9, x9, #0, #32
  411210:	add	x8, x8, x9
  411214:	str	x8, [sp, #8]
  411218:	ldur	x0, [x29, #-8]
  41121c:	ldur	w1, [x29, #-12]
  411220:	ldur	w2, [x29, #-16]
  411224:	ldr	x3, [sp, #24]
  411228:	ldr	w4, [sp, #20]
  41122c:	bl	410d20 <addattr_l@@Base>
  411230:	ldur	x8, [x29, #-8]
  411234:	ldur	w1, [x29, #-12]
  411238:	ldur	w2, [x29, #-16]
  41123c:	mov	x0, x8
  411240:	bl	41110c <addattr_nest@@Base>
  411244:	ldr	x8, [sp, #8]
  411248:	mov	x0, x8
  41124c:	ldp	x29, x30, [sp, #48]
  411250:	add	sp, sp, #0x40
  411254:	ret

0000000000411258 <addattr_nest_compat_end@@Base>:
  411258:	sub	sp, sp, #0x30
  41125c:	stp	x29, x30, [sp, #32]
  411260:	add	x29, sp, #0x20
  411264:	stur	x0, [x29, #-8]
  411268:	str	x1, [sp, #16]
  41126c:	ldr	x8, [sp, #16]
  411270:	ldr	x9, [sp, #16]
  411274:	ldrh	w10, [x9]
  411278:	add	w10, w10, #0x4
  41127c:	subs	w10, w10, #0x1
  411280:	and	w10, w10, #0xfffffffc
  411284:	mov	w9, w10
  411288:	ubfx	x9, x9, #0, #32
  41128c:	add	x8, x8, x9
  411290:	str	x8, [sp, #8]
  411294:	ldur	x8, [x29, #-8]
  411298:	ldur	x9, [x29, #-8]
  41129c:	ldr	w10, [x9]
  4112a0:	add	w10, w10, #0x4
  4112a4:	subs	w10, w10, #0x1
  4112a8:	and	w10, w10, #0xfffffffc
  4112ac:	mov	w9, w10
  4112b0:	ubfx	x9, x9, #0, #32
  4112b4:	add	x8, x8, x9
  4112b8:	ldr	x9, [sp, #16]
  4112bc:	subs	x8, x8, x9
  4112c0:	ldr	x9, [sp, #16]
  4112c4:	strh	w8, [x9]
  4112c8:	ldur	x0, [x29, #-8]
  4112cc:	ldr	x1, [sp, #8]
  4112d0:	bl	411180 <addattr_nest_end@@Base>
  4112d4:	ldur	x9, [x29, #-8]
  4112d8:	ldr	w8, [x9]
  4112dc:	mov	w0, w8
  4112e0:	ldp	x29, x30, [sp, #32]
  4112e4:	add	sp, sp, #0x30
  4112e8:	ret

00000000004112ec <rta_addattr32@@Base>:
  4112ec:	sub	sp, sp, #0x40
  4112f0:	stp	x29, x30, [sp, #48]
  4112f4:	add	x29, sp, #0x30
  4112f8:	mov	w8, #0x8                   	// #8
  4112fc:	stur	x0, [x29, #-16]
  411300:	stur	w1, [x29, #-20]
  411304:	str	w2, [sp, #24]
  411308:	str	w3, [sp, #20]
  41130c:	str	w8, [sp, #16]
  411310:	ldur	x9, [x29, #-16]
  411314:	ldrh	w8, [x9]
  411318:	add	w8, w8, #0x4
  41131c:	subs	w8, w8, #0x1
  411320:	and	w8, w8, #0xfffffffc
  411324:	ldr	w10, [sp, #16]
  411328:	add	w8, w8, w10
  41132c:	ldur	w10, [x29, #-20]
  411330:	cmp	w8, w10
  411334:	b.ls	411360 <rta_addattr32@@Base+0x74>  // b.plast
  411338:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  41133c:	ldr	x8, [x8, #3992]
  411340:	ldr	x0, [x8]
  411344:	ldur	w2, [x29, #-20]
  411348:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  41134c:	add	x1, x1, #0x1b6
  411350:	bl	4053c0 <fprintf@plt>
  411354:	mov	w9, #0xffffffff            	// #-1
  411358:	stur	w9, [x29, #-4]
  41135c:	b	4113d4 <rta_addattr32@@Base+0xe8>
  411360:	ldur	x8, [x29, #-16]
  411364:	ldur	x9, [x29, #-16]
  411368:	ldrh	w10, [x9]
  41136c:	add	w10, w10, #0x4
  411370:	subs	w10, w10, #0x1
  411374:	and	w10, w10, #0xfffffffc
  411378:	mov	w9, w10
  41137c:	ubfx	x9, x9, #0, #32
  411380:	add	x8, x8, x9
  411384:	str	x8, [sp, #8]
  411388:	ldr	w10, [sp, #24]
  41138c:	ldr	x8, [sp, #8]
  411390:	strh	w10, [x8, #2]
  411394:	ldr	w10, [sp, #16]
  411398:	ldr	x8, [sp, #8]
  41139c:	strh	w10, [x8]
  4113a0:	ldr	x8, [sp, #8]
  4113a4:	ldr	w10, [sp, #20]
  4113a8:	str	w10, [x8, #4]
  4113ac:	ldur	x8, [x29, #-16]
  4113b0:	ldrh	w10, [x8]
  4113b4:	add	w10, w10, #0x4
  4113b8:	subs	w10, w10, #0x1
  4113bc:	and	w10, w10, #0xfffffffc
  4113c0:	ldr	w11, [sp, #16]
  4113c4:	add	w10, w10, w11
  4113c8:	ldur	x8, [x29, #-16]
  4113cc:	strh	w10, [x8]
  4113d0:	stur	wzr, [x29, #-4]
  4113d4:	ldur	w0, [x29, #-4]
  4113d8:	ldp	x29, x30, [sp, #48]
  4113dc:	add	sp, sp, #0x40
  4113e0:	ret

00000000004113e4 <rta_addattr_l@@Base>:
  4113e4:	sub	sp, sp, #0x50
  4113e8:	stp	x29, x30, [sp, #64]
  4113ec:	add	x29, sp, #0x40
  4113f0:	stur	x0, [x29, #-16]
  4113f4:	stur	w1, [x29, #-20]
  4113f8:	stur	w2, [x29, #-24]
  4113fc:	str	x3, [sp, #32]
  411400:	str	w4, [sp, #28]
  411404:	ldrsw	x8, [sp, #28]
  411408:	add	x8, x8, #0x4
  41140c:	str	w8, [sp, #12]
  411410:	ldur	x9, [x29, #-16]
  411414:	ldrh	w8, [x9]
  411418:	add	w8, w8, #0x4
  41141c:	subs	w8, w8, #0x1
  411420:	and	w8, w8, #0xfffffffc
  411424:	ldr	w10, [sp, #12]
  411428:	add	w10, w10, #0x4
  41142c:	subs	w10, w10, #0x1
  411430:	and	w10, w10, #0xfffffffc
  411434:	add	w8, w8, w10
  411438:	ldur	w10, [x29, #-20]
  41143c:	cmp	w8, w10
  411440:	b.ls	41146c <rta_addattr_l@@Base+0x88>  // b.plast
  411444:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411448:	ldr	x8, [x8, #3992]
  41144c:	ldr	x0, [x8]
  411450:	ldur	w2, [x29, #-20]
  411454:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411458:	add	x1, x1, #0x1eb
  41145c:	bl	4053c0 <fprintf@plt>
  411460:	mov	w9, #0xffffffff            	// #-1
  411464:	stur	w9, [x29, #-4]
  411468:	b	4114fc <rta_addattr_l@@Base+0x118>
  41146c:	ldur	x8, [x29, #-16]
  411470:	ldur	x9, [x29, #-16]
  411474:	ldrh	w10, [x9]
  411478:	add	w10, w10, #0x4
  41147c:	subs	w10, w10, #0x1
  411480:	and	w10, w10, #0xfffffffc
  411484:	mov	w9, w10
  411488:	ubfx	x9, x9, #0, #32
  41148c:	add	x8, x8, x9
  411490:	str	x8, [sp, #16]
  411494:	ldur	w10, [x29, #-24]
  411498:	ldr	x8, [sp, #16]
  41149c:	strh	w10, [x8, #2]
  4114a0:	ldr	w10, [sp, #12]
  4114a4:	ldr	x8, [sp, #16]
  4114a8:	strh	w10, [x8]
  4114ac:	ldr	w10, [sp, #28]
  4114b0:	cbz	w10, 4114c8 <rta_addattr_l@@Base+0xe4>
  4114b4:	ldr	x8, [sp, #16]
  4114b8:	add	x0, x8, #0x4
  4114bc:	ldr	x1, [sp, #32]
  4114c0:	ldrsw	x2, [sp, #28]
  4114c4:	bl	404e40 <memcpy@plt>
  4114c8:	ldur	x8, [x29, #-16]
  4114cc:	ldrh	w9, [x8]
  4114d0:	add	w9, w9, #0x4
  4114d4:	subs	w9, w9, #0x1
  4114d8:	and	w9, w9, #0xfffffffc
  4114dc:	ldr	w10, [sp, #12]
  4114e0:	add	w10, w10, #0x4
  4114e4:	subs	w10, w10, #0x1
  4114e8:	and	w10, w10, #0xfffffffc
  4114ec:	add	w9, w9, w10
  4114f0:	ldur	x8, [x29, #-16]
  4114f4:	strh	w9, [x8]
  4114f8:	stur	wzr, [x29, #-4]
  4114fc:	ldur	w0, [x29, #-4]
  411500:	ldp	x29, x30, [sp, #64]
  411504:	add	sp, sp, #0x50
  411508:	ret

000000000041150c <rta_addattr8@@Base>:
  41150c:	sub	sp, sp, #0x30
  411510:	stp	x29, x30, [sp, #32]
  411514:	add	x29, sp, #0x20
  411518:	mov	w4, #0x1                   	// #1
  41151c:	add	x8, sp, #0xf
  411520:	stur	x0, [x29, #-8]
  411524:	stur	w1, [x29, #-12]
  411528:	str	w2, [sp, #16]
  41152c:	strb	w3, [sp, #15]
  411530:	ldur	x0, [x29, #-8]
  411534:	ldur	w1, [x29, #-12]
  411538:	ldr	w2, [sp, #16]
  41153c:	mov	x3, x8
  411540:	bl	4113e4 <rta_addattr_l@@Base>
  411544:	ldp	x29, x30, [sp, #32]
  411548:	add	sp, sp, #0x30
  41154c:	ret

0000000000411550 <rta_addattr16@@Base>:
  411550:	sub	sp, sp, #0x30
  411554:	stp	x29, x30, [sp, #32]
  411558:	add	x29, sp, #0x20
  41155c:	mov	w4, #0x2                   	// #2
  411560:	add	x8, sp, #0xe
  411564:	stur	x0, [x29, #-8]
  411568:	stur	w1, [x29, #-12]
  41156c:	str	w2, [sp, #16]
  411570:	strh	w3, [sp, #14]
  411574:	ldur	x0, [x29, #-8]
  411578:	ldur	w1, [x29, #-12]
  41157c:	ldr	w2, [sp, #16]
  411580:	mov	x3, x8
  411584:	bl	4113e4 <rta_addattr_l@@Base>
  411588:	ldp	x29, x30, [sp, #32]
  41158c:	add	sp, sp, #0x30
  411590:	ret

0000000000411594 <rta_addattr64@@Base>:
  411594:	sub	sp, sp, #0x30
  411598:	stp	x29, x30, [sp, #32]
  41159c:	add	x29, sp, #0x20
  4115a0:	mov	w4, #0x8                   	// #8
  4115a4:	add	x8, sp, #0x8
  4115a8:	stur	x0, [x29, #-8]
  4115ac:	stur	w1, [x29, #-12]
  4115b0:	str	w2, [sp, #16]
  4115b4:	str	x3, [sp, #8]
  4115b8:	ldur	x0, [x29, #-8]
  4115bc:	ldur	w1, [x29, #-12]
  4115c0:	ldr	w2, [sp, #16]
  4115c4:	mov	x3, x8
  4115c8:	bl	4113e4 <rta_addattr_l@@Base>
  4115cc:	ldp	x29, x30, [sp, #32]
  4115d0:	add	sp, sp, #0x30
  4115d4:	ret

00000000004115d8 <rta_nest@@Base>:
  4115d8:	sub	sp, sp, #0x30
  4115dc:	stp	x29, x30, [sp, #32]
  4115e0:	add	x29, sp, #0x20
  4115e4:	mov	x8, xzr
  4115e8:	mov	w9, wzr
  4115ec:	stur	x0, [x29, #-8]
  4115f0:	stur	w1, [x29, #-12]
  4115f4:	str	w2, [sp, #16]
  4115f8:	ldur	x10, [x29, #-8]
  4115fc:	ldur	x11, [x29, #-8]
  411600:	ldrh	w12, [x11]
  411604:	add	w12, w12, #0x4
  411608:	subs	w12, w12, #0x1
  41160c:	and	w12, w12, #0xfffffffc
  411610:	mov	w11, w12
  411614:	ubfx	x11, x11, #0, #32
  411618:	add	x10, x10, x11
  41161c:	str	x10, [sp, #8]
  411620:	ldur	x0, [x29, #-8]
  411624:	ldur	w1, [x29, #-12]
  411628:	ldr	w2, [sp, #16]
  41162c:	mov	x3, x8
  411630:	mov	w4, w9
  411634:	bl	4113e4 <rta_addattr_l@@Base>
  411638:	ldr	x8, [sp, #8]
  41163c:	ldrh	w9, [x8, #2]
  411640:	orr	w9, w9, #0x8000
  411644:	strh	w9, [x8, #2]
  411648:	ldr	x8, [sp, #8]
  41164c:	mov	x0, x8
  411650:	ldp	x29, x30, [sp, #32]
  411654:	add	sp, sp, #0x30
  411658:	ret

000000000041165c <rta_nest_end@@Base>:
  41165c:	sub	sp, sp, #0x10
  411660:	str	x0, [sp, #8]
  411664:	str	x1, [sp]
  411668:	ldr	x8, [sp, #8]
  41166c:	ldr	x9, [sp, #8]
  411670:	ldrh	w10, [x9]
  411674:	add	w10, w10, #0x4
  411678:	subs	w10, w10, #0x1
  41167c:	and	w10, w10, #0xfffffffc
  411680:	mov	w9, w10
  411684:	ubfx	x9, x9, #0, #32
  411688:	add	x8, x8, x9
  41168c:	ldr	x9, [sp]
  411690:	subs	x8, x8, x9
  411694:	ldr	x9, [sp]
  411698:	strh	w8, [x9]
  41169c:	ldr	x9, [sp, #8]
  4116a0:	ldrh	w0, [x9]
  4116a4:	add	sp, sp, #0x10
  4116a8:	ret

00000000004116ac <parse_rtattr@@Base>:
  4116ac:	sub	sp, sp, #0x30
  4116b0:	stp	x29, x30, [sp, #32]
  4116b4:	add	x29, sp, #0x20
  4116b8:	stur	x0, [x29, #-8]
  4116bc:	stur	w1, [x29, #-12]
  4116c0:	str	x2, [sp, #8]
  4116c4:	str	w3, [sp, #4]
  4116c8:	ldur	x0, [x29, #-8]
  4116cc:	ldur	w1, [x29, #-12]
  4116d0:	ldr	x2, [sp, #8]
  4116d4:	ldr	w3, [sp, #4]
  4116d8:	mov	w8, wzr
  4116dc:	mov	w4, w8
  4116e0:	bl	4116f0 <parse_rtattr_flags@@Base>
  4116e4:	ldp	x29, x30, [sp, #32]
  4116e8:	add	sp, sp, #0x30
  4116ec:	ret

00000000004116f0 <parse_rtattr_flags@@Base>:
  4116f0:	sub	sp, sp, #0x40
  4116f4:	stp	x29, x30, [sp, #48]
  4116f8:	add	x29, sp, #0x30
  4116fc:	mov	x8, #0x8                   	// #8
  411700:	mov	w9, wzr
  411704:	stur	x0, [x29, #-8]
  411708:	stur	w1, [x29, #-12]
  41170c:	str	x2, [sp, #24]
  411710:	str	w3, [sp, #20]
  411714:	strh	w4, [sp, #18]
  411718:	ldur	x0, [x29, #-8]
  41171c:	ldur	w10, [x29, #-12]
  411720:	add	w10, w10, #0x1
  411724:	mov	w2, w10
  411728:	sxtw	x11, w2
  41172c:	mul	x2, x8, x11
  411730:	mov	w1, w9
  411734:	bl	405070 <memset@plt>
  411738:	ldr	w8, [sp, #20]
  41173c:	mov	w9, #0x0                   	// #0
  411740:	cmp	w8, #0x4
  411744:	str	w9, [sp, #12]
  411748:	b.lt	411780 <parse_rtattr_flags@@Base+0x90>  // b.tstop
  41174c:	ldr	x8, [sp, #24]
  411750:	ldrh	w9, [x8]
  411754:	mov	w8, w9
  411758:	mov	w9, #0x0                   	// #0
  41175c:	cmp	x8, #0x4
  411760:	str	w9, [sp, #12]
  411764:	b.cc	411780 <parse_rtattr_flags@@Base+0x90>  // b.lo, b.ul, b.last
  411768:	ldr	x8, [sp, #24]
  41176c:	ldrh	w9, [x8]
  411770:	ldr	w10, [sp, #20]
  411774:	cmp	w9, w10
  411778:	cset	w9, le
  41177c:	str	w9, [sp, #12]
  411780:	ldr	w8, [sp, #12]
  411784:	tbnz	w8, #0, 41178c <parse_rtattr_flags@@Base+0x9c>
  411788:	b	41183c <parse_rtattr_flags@@Base+0x14c>
  41178c:	ldr	x8, [sp, #24]
  411790:	ldrh	w9, [x8, #2]
  411794:	ldrh	w10, [sp, #18]
  411798:	bic	w9, w9, w10
  41179c:	strh	w9, [sp, #16]
  4117a0:	ldrh	w9, [sp, #16]
  4117a4:	ldur	w10, [x29, #-12]
  4117a8:	cmp	w9, w10
  4117ac:	b.gt	4117f0 <parse_rtattr_flags@@Base+0x100>
  4117b0:	ldur	x8, [x29, #-8]
  4117b4:	ldrh	w9, [sp, #16]
  4117b8:	mov	w10, w9
  4117bc:	mov	x11, #0x8                   	// #8
  4117c0:	mul	x10, x11, x10
  4117c4:	add	x8, x8, x10
  4117c8:	ldr	x8, [x8]
  4117cc:	cbnz	x8, 4117f0 <parse_rtattr_flags@@Base+0x100>
  4117d0:	ldr	x8, [sp, #24]
  4117d4:	ldur	x9, [x29, #-8]
  4117d8:	ldrh	w10, [sp, #16]
  4117dc:	mov	w11, w10
  4117e0:	mov	x12, #0x8                   	// #8
  4117e4:	mul	x11, x12, x11
  4117e8:	add	x9, x9, x11
  4117ec:	str	x8, [x9]
  4117f0:	ldr	x8, [sp, #24]
  4117f4:	ldrh	w9, [x8]
  4117f8:	add	w9, w9, #0x4
  4117fc:	subs	w9, w9, #0x1
  411800:	and	w9, w9, #0xfffffffc
  411804:	ldr	w10, [sp, #20]
  411808:	subs	w9, w10, w9
  41180c:	str	w9, [sp, #20]
  411810:	ldr	x8, [sp, #24]
  411814:	ldr	x11, [sp, #24]
  411818:	ldrh	w9, [x11]
  41181c:	add	w9, w9, #0x4
  411820:	subs	w9, w9, #0x1
  411824:	and	w9, w9, #0xfffffffc
  411828:	mov	w11, w9
  41182c:	ubfx	x11, x11, #0, #32
  411830:	add	x8, x8, x11
  411834:	str	x8, [sp, #24]
  411838:	b	411738 <parse_rtattr_flags@@Base+0x48>
  41183c:	ldr	w8, [sp, #20]
  411840:	cbz	w8, 411868 <parse_rtattr_flags@@Base+0x178>
  411844:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411848:	ldr	x8, [x8, #3992]
  41184c:	ldr	x0, [x8]
  411850:	ldr	w2, [sp, #20]
  411854:	ldr	x8, [sp, #24]
  411858:	ldrh	w3, [x8]
  41185c:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411860:	add	x1, x1, #0x220
  411864:	bl	4053c0 <fprintf@plt>
  411868:	mov	w8, wzr
  41186c:	mov	w0, w8
  411870:	ldp	x29, x30, [sp, #48]
  411874:	add	sp, sp, #0x40
  411878:	ret

000000000041187c <parse_rtattr_one@@Base>:
  41187c:	sub	sp, sp, #0x30
  411880:	stp	x29, x30, [sp, #32]
  411884:	add	x29, sp, #0x20
  411888:	stur	w0, [x29, #-12]
  41188c:	str	x1, [sp, #8]
  411890:	str	w2, [sp, #4]
  411894:	ldr	w8, [sp, #4]
  411898:	mov	w9, #0x0                   	// #0
  41189c:	cmp	w8, #0x4
  4118a0:	str	w9, [sp]
  4118a4:	b.lt	4118dc <parse_rtattr_one@@Base+0x60>  // b.tstop
  4118a8:	ldr	x8, [sp, #8]
  4118ac:	ldrh	w9, [x8]
  4118b0:	mov	w8, w9
  4118b4:	mov	w9, #0x0                   	// #0
  4118b8:	cmp	x8, #0x4
  4118bc:	str	w9, [sp]
  4118c0:	b.cc	4118dc <parse_rtattr_one@@Base+0x60>  // b.lo, b.ul, b.last
  4118c4:	ldr	x8, [sp, #8]
  4118c8:	ldrh	w9, [x8]
  4118cc:	ldr	w10, [sp, #4]
  4118d0:	cmp	w9, w10
  4118d4:	cset	w9, le
  4118d8:	str	w9, [sp]
  4118dc:	ldr	w8, [sp]
  4118e0:	tbnz	w8, #0, 4118e8 <parse_rtattr_one@@Base+0x6c>
  4118e4:	b	411954 <parse_rtattr_one@@Base+0xd8>
  4118e8:	ldr	x8, [sp, #8]
  4118ec:	ldrh	w9, [x8, #2]
  4118f0:	ldur	w10, [x29, #-12]
  4118f4:	cmp	w9, w10
  4118f8:	b.ne	411908 <parse_rtattr_one@@Base+0x8c>  // b.any
  4118fc:	ldr	x8, [sp, #8]
  411900:	stur	x8, [x29, #-8]
  411904:	b	411988 <parse_rtattr_one@@Base+0x10c>
  411908:	ldr	x8, [sp, #8]
  41190c:	ldrh	w9, [x8]
  411910:	add	w9, w9, #0x4
  411914:	subs	w9, w9, #0x1
  411918:	and	w9, w9, #0xfffffffc
  41191c:	ldr	w10, [sp, #4]
  411920:	subs	w9, w10, w9
  411924:	str	w9, [sp, #4]
  411928:	ldr	x8, [sp, #8]
  41192c:	ldr	x11, [sp, #8]
  411930:	ldrh	w9, [x11]
  411934:	add	w9, w9, #0x4
  411938:	subs	w9, w9, #0x1
  41193c:	and	w9, w9, #0xfffffffc
  411940:	mov	w11, w9
  411944:	ubfx	x11, x11, #0, #32
  411948:	add	x8, x8, x11
  41194c:	str	x8, [sp, #8]
  411950:	b	411894 <parse_rtattr_one@@Base+0x18>
  411954:	ldr	w8, [sp, #4]
  411958:	cbz	w8, 411980 <parse_rtattr_one@@Base+0x104>
  41195c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411960:	ldr	x8, [x8, #3992]
  411964:	ldr	x0, [x8]
  411968:	ldr	w2, [sp, #4]
  41196c:	ldr	x8, [sp, #8]
  411970:	ldrh	w3, [x8]
  411974:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411978:	add	x1, x1, #0x220
  41197c:	bl	4053c0 <fprintf@plt>
  411980:	mov	x8, xzr
  411984:	stur	x8, [x29, #-8]
  411988:	ldur	x0, [x29, #-8]
  41198c:	ldp	x29, x30, [sp, #32]
  411990:	add	sp, sp, #0x30
  411994:	ret

0000000000411998 <__parse_rtattr_nested_compat@@Base>:
  411998:	sub	sp, sp, #0x40
  41199c:	stp	x29, x30, [sp, #48]
  4119a0:	add	x29, sp, #0x30
  4119a4:	stur	x0, [x29, #-16]
  4119a8:	stur	w1, [x29, #-20]
  4119ac:	str	x2, [sp, #16]
  4119b0:	str	w3, [sp, #12]
  4119b4:	ldr	x8, [sp, #16]
  4119b8:	ldrh	w9, [x8]
  4119bc:	mov	w0, w9
  4119c0:	sxtw	x8, w0
  4119c4:	subs	x8, x8, #0x4
  4119c8:	ldrsw	x10, [sp, #12]
  4119cc:	cmp	x8, x10
  4119d0:	b.cs	4119e0 <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  4119d4:	mov	w8, #0xffffffff            	// #-1
  4119d8:	stur	w8, [x29, #-4]
  4119dc:	b	411aa0 <__parse_rtattr_nested_compat@@Base+0x108>
  4119e0:	ldr	x8, [sp, #16]
  4119e4:	ldrh	w9, [x8]
  4119e8:	mov	w0, w9
  4119ec:	sxtw	x8, w0
  4119f0:	subs	x8, x8, #0x4
  4119f4:	ldr	w9, [sp, #12]
  4119f8:	add	w9, w9, #0x4
  4119fc:	subs	w9, w9, #0x1
  411a00:	and	w9, w9, #0xfffffffc
  411a04:	mov	w10, w9
  411a08:	ubfx	x10, x10, #0, #32
  411a0c:	add	x10, x10, #0x4
  411a10:	cmp	x8, x10
  411a14:	b.cc	411a74 <__parse_rtattr_nested_compat@@Base+0xdc>  // b.lo, b.ul, b.last
  411a18:	ldr	x8, [sp, #16]
  411a1c:	add	x8, x8, #0x4
  411a20:	ldr	w9, [sp, #12]
  411a24:	add	w9, w9, #0x4
  411a28:	subs	w9, w9, #0x1
  411a2c:	and	w9, w9, #0xfffffffc
  411a30:	mov	w10, w9
  411a34:	ubfx	x10, x10, #0, #32
  411a38:	add	x8, x8, x10
  411a3c:	str	x8, [sp, #16]
  411a40:	ldur	x0, [x29, #-16]
  411a44:	ldur	w1, [x29, #-20]
  411a48:	ldr	x8, [sp, #16]
  411a4c:	add	x2, x8, #0x4
  411a50:	ldr	x8, [sp, #16]
  411a54:	ldrh	w9, [x8]
  411a58:	mov	w3, w9
  411a5c:	sxtw	x8, w3
  411a60:	subs	x8, x8, #0x4
  411a64:	mov	w3, w8
  411a68:	bl	4116ac <parse_rtattr@@Base>
  411a6c:	stur	w0, [x29, #-4]
  411a70:	b	411aa0 <__parse_rtattr_nested_compat@@Base+0x108>
  411a74:	ldur	x0, [x29, #-16]
  411a78:	ldur	w8, [x29, #-20]
  411a7c:	add	w8, w8, #0x1
  411a80:	mov	w1, w8
  411a84:	sxtw	x9, w1
  411a88:	mov	x10, #0x8                   	// #8
  411a8c:	mul	x2, x10, x9
  411a90:	mov	w8, wzr
  411a94:	mov	w1, w8
  411a98:	bl	405070 <memset@plt>
  411a9c:	stur	wzr, [x29, #-4]
  411aa0:	ldur	w0, [x29, #-4]
  411aa4:	ldp	x29, x30, [sp, #48]
  411aa8:	add	sp, sp, #0x40
  411aac:	ret
  411ab0:	sub	sp, sp, #0x40
  411ab4:	stp	x29, x30, [sp, #48]
  411ab8:	add	x29, sp, #0x30
  411abc:	mov	x8, xzr
  411ac0:	mov	w9, #0x22                  	// #34
  411ac4:	stur	w0, [x29, #-8]
  411ac8:	stur	x1, [x29, #-16]
  411acc:	str	x2, [sp, #24]
  411ad0:	ldur	x10, [x29, #-16]
  411ad4:	ldr	x10, [x10, #16]
  411ad8:	str	x10, [sp, #16]
  411adc:	ldr	x10, [sp, #16]
  411ae0:	str	x8, [x10]
  411ae4:	ldr	x8, [sp, #16]
  411ae8:	str	xzr, [x8, #8]
  411aec:	ldur	w0, [x29, #-8]
  411af0:	ldur	x1, [x29, #-16]
  411af4:	mov	w2, w9
  411af8:	bl	411e00 <__parse_rtattr_nested_compat@@Base+0x468>
  411afc:	str	w0, [sp, #4]
  411b00:	ldr	w9, [sp, #4]
  411b04:	cmp	w9, #0x0
  411b08:	cset	w9, ge  // ge = tcont
  411b0c:	tbnz	w9, #0, 411b1c <__parse_rtattr_nested_compat@@Base+0x184>
  411b10:	ldr	w8, [sp, #4]
  411b14:	stur	w8, [x29, #-4]
  411b18:	b	411be4 <__parse_rtattr_nested_compat@@Base+0x24c>
  411b1c:	ldr	w8, [sp, #4]
  411b20:	cmp	w8, #0x8, lsl #12
  411b24:	b.ge	411b30 <__parse_rtattr_nested_compat@@Base+0x198>  // b.tcont
  411b28:	mov	w8, #0x8000                	// #32768
  411b2c:	str	w8, [sp, #4]
  411b30:	ldrsw	x0, [sp, #4]
  411b34:	bl	405000 <malloc@plt>
  411b38:	str	x0, [sp, #8]
  411b3c:	ldr	x8, [sp, #8]
  411b40:	cbnz	x8, 411b68 <__parse_rtattr_nested_compat@@Base+0x1d0>
  411b44:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411b48:	ldr	x8, [x8, #3992]
  411b4c:	ldr	x0, [x8]
  411b50:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411b54:	add	x1, x1, #0x26a
  411b58:	bl	4053c0 <fprintf@plt>
  411b5c:	mov	w9, #0xfffffff4            	// #-12
  411b60:	stur	w9, [x29, #-4]
  411b64:	b	411be4 <__parse_rtattr_nested_compat@@Base+0x24c>
  411b68:	ldr	x8, [sp, #8]
  411b6c:	ldr	x9, [sp, #16]
  411b70:	str	x8, [x9]
  411b74:	ldrsw	x8, [sp, #4]
  411b78:	ldr	x9, [sp, #16]
  411b7c:	str	x8, [x9, #8]
  411b80:	ldur	w0, [x29, #-8]
  411b84:	ldur	x1, [x29, #-16]
  411b88:	mov	w10, wzr
  411b8c:	mov	w2, w10
  411b90:	bl	411e00 <__parse_rtattr_nested_compat@@Base+0x468>
  411b94:	str	w0, [sp, #4]
  411b98:	ldr	w10, [sp, #4]
  411b9c:	cmp	w10, #0x0
  411ba0:	cset	w10, ge  // ge = tcont
  411ba4:	tbnz	w10, #0, 411bbc <__parse_rtattr_nested_compat@@Base+0x224>
  411ba8:	ldr	x0, [sp, #8]
  411bac:	bl	405200 <free@plt>
  411bb0:	ldr	w8, [sp, #4]
  411bb4:	stur	w8, [x29, #-4]
  411bb8:	b	411be4 <__parse_rtattr_nested_compat@@Base+0x24c>
  411bbc:	ldr	x8, [sp, #24]
  411bc0:	cbz	x8, 411bd4 <__parse_rtattr_nested_compat@@Base+0x23c>
  411bc4:	ldr	x8, [sp, #8]
  411bc8:	ldr	x9, [sp, #24]
  411bcc:	str	x8, [x9]
  411bd0:	b	411bdc <__parse_rtattr_nested_compat@@Base+0x244>
  411bd4:	ldr	x0, [sp, #8]
  411bd8:	bl	405200 <free@plt>
  411bdc:	ldr	w8, [sp, #4]
  411be0:	stur	w8, [x29, #-4]
  411be4:	ldur	w0, [x29, #-4]
  411be8:	ldp	x29, x30, [sp, #48]
  411bec:	add	sp, sp, #0x40
  411bf0:	ret
  411bf4:	sub	sp, sp, #0x30
  411bf8:	stp	x29, x30, [sp, #32]
  411bfc:	add	x29, sp, #0x20
  411c00:	str	x0, [sp, #16]
  411c04:	ldr	x8, [sp, #16]
  411c08:	ldr	w9, [x8, #16]
  411c0c:	str	w9, [sp, #12]
  411c10:	ldr	x8, [sp, #16]
  411c14:	ldr	w9, [x8]
  411c18:	mov	w8, w9
  411c1c:	cmp	x8, #0x14
  411c20:	b.cs	411c48 <__parse_rtattr_nested_compat@@Base+0x2b0>  // b.hs, b.nlast
  411c24:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411c28:	ldr	x8, [x8, #3992]
  411c2c:	ldr	x0, [x8]
  411c30:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411c34:	add	x1, x1, #0x28b
  411c38:	bl	4053c0 <fprintf@plt>
  411c3c:	mov	w9, #0xffffffff            	// #-1
  411c40:	stur	w9, [x29, #-4]
  411c44:	b	411d24 <__parse_rtattr_nested_compat@@Base+0x38c>
  411c48:	ldr	w8, [sp, #12]
  411c4c:	cmp	w8, #0x0
  411c50:	cset	w8, ge  // ge = tcont
  411c54:	tbnz	w8, #0, 411d10 <__parse_rtattr_nested_compat@@Base+0x378>
  411c58:	ldr	x0, [sp, #16]
  411c5c:	ldr	w1, [sp, #12]
  411c60:	bl	40e6f4 <nl_dump_ext_ack_done@@Base>
  411c64:	cbz	w0, 411c74 <__parse_rtattr_nested_compat@@Base+0x2dc>
  411c68:	ldr	w8, [sp, #12]
  411c6c:	stur	w8, [x29, #-4]
  411c70:	b	411d24 <__parse_rtattr_nested_compat@@Base+0x38c>
  411c74:	ldr	w8, [sp, #12]
  411c78:	mov	w9, wzr
  411c7c:	subs	w8, w9, w8
  411c80:	str	w8, [sp, #8]
  411c84:	bl	405390 <__errno_location@plt>
  411c88:	ldr	w8, [sp, #8]
  411c8c:	str	w8, [x0]
  411c90:	bl	405390 <__errno_location@plt>
  411c94:	ldr	w8, [x0]
  411c98:	cmp	w8, #0x2
  411c9c:	str	w8, [sp, #4]
  411ca0:	b.eq	411cd0 <__parse_rtattr_nested_compat@@Base+0x338>  // b.none
  411ca4:	b	411ca8 <__parse_rtattr_nested_compat@@Base+0x310>
  411ca8:	ldr	w8, [sp, #4]
  411cac:	cmp	w8, #0x5a
  411cb0:	b.eq	411cdc <__parse_rtattr_nested_compat@@Base+0x344>  // b.none
  411cb4:	b	411cb8 <__parse_rtattr_nested_compat@@Base+0x320>
  411cb8:	ldr	w8, [sp, #4]
  411cbc:	cmp	w8, #0x5f
  411cc0:	cset	w9, eq  // eq = none
  411cc4:	eor	w9, w9, #0x1
  411cc8:	tbnz	w9, #0, 411cf8 <__parse_rtattr_nested_compat@@Base+0x360>
  411ccc:	b	411cd0 <__parse_rtattr_nested_compat@@Base+0x338>
  411cd0:	mov	w8, #0xffffffff            	// #-1
  411cd4:	stur	w8, [x29, #-4]
  411cd8:	b	411d24 <__parse_rtattr_nested_compat@@Base+0x38c>
  411cdc:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411ce0:	ldr	x8, [x8, #3992]
  411ce4:	ldr	x0, [x8]
  411ce8:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411cec:	add	x1, x1, #0x29b
  411cf0:	bl	4053c0 <fprintf@plt>
  411cf4:	b	411d04 <__parse_rtattr_nested_compat@@Base+0x36c>
  411cf8:	adrp	x0, 413000 <_IO_stdin_used@@Base+0xcf0>
  411cfc:	add	x0, x0, #0x2c0
  411d00:	bl	404ea0 <perror@plt>
  411d04:	ldr	w8, [sp, #12]
  411d08:	stur	w8, [x29, #-4]
  411d0c:	b	411d24 <__parse_rtattr_nested_compat@@Base+0x38c>
  411d10:	ldr	x0, [sp, #16]
  411d14:	mov	x8, xzr
  411d18:	mov	x1, x8
  411d1c:	bl	40e6d8 <nl_dump_ext_ack@@Base>
  411d20:	stur	wzr, [x29, #-4]
  411d24:	ldur	w0, [x29, #-4]
  411d28:	ldp	x29, x30, [sp, #32]
  411d2c:	add	sp, sp, #0x30
  411d30:	ret
  411d34:	sub	sp, sp, #0x30
  411d38:	stp	x29, x30, [sp, #32]
  411d3c:	add	x29, sp, #0x20
  411d40:	stur	x0, [x29, #-8]
  411d44:	str	x1, [sp, #16]
  411d48:	ldr	x8, [sp, #16]
  411d4c:	ldr	w9, [x8]
  411d50:	mov	w8, w9
  411d54:	cmp	x8, #0x24
  411d58:	b.cs	411d78 <__parse_rtattr_nested_compat@@Base+0x3e0>  // b.hs, b.nlast
  411d5c:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411d60:	ldr	x8, [x8, #3992]
  411d64:	ldr	x0, [x8]
  411d68:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411d6c:	add	x1, x1, #0x2d
  411d70:	bl	4053c0 <fprintf@plt>
  411d74:	b	411df4 <__parse_rtattr_nested_compat@@Base+0x45c>
  411d78:	ldr	x8, [sp, #16]
  411d7c:	add	x8, x8, #0x10
  411d80:	str	x8, [sp, #8]
  411d84:	ldr	x8, [sp, #8]
  411d88:	ldr	w9, [x8]
  411d8c:	mov	w10, wzr
  411d90:	subs	w9, w10, w9
  411d94:	str	w9, [sp, #4]
  411d98:	bl	405390 <__errno_location@plt>
  411d9c:	ldr	w9, [sp, #4]
  411da0:	str	w9, [x0]
  411da4:	ldur	x8, [x29, #-8]
  411da8:	ldr	w10, [x8, #36]
  411dac:	cmp	w10, #0x4
  411db0:	b.ne	411dd8 <__parse_rtattr_nested_compat@@Base+0x440>  // b.any
  411db4:	bl	405390 <__errno_location@plt>
  411db8:	ldr	w8, [x0]
  411dbc:	cmp	w8, #0x2
  411dc0:	b.eq	411dd4 <__parse_rtattr_nested_compat@@Base+0x43c>  // b.none
  411dc4:	bl	405390 <__errno_location@plt>
  411dc8:	ldr	w8, [x0]
  411dcc:	cmp	w8, #0x5f
  411dd0:	b.ne	411dd8 <__parse_rtattr_nested_compat@@Base+0x440>  // b.any
  411dd4:	b	411df4 <__parse_rtattr_nested_compat@@Base+0x45c>
  411dd8:	ldur	x8, [x29, #-8]
  411ddc:	ldr	w9, [x8, #48]
  411de0:	and	w9, w9, #0x2
  411de4:	cbnz	w9, 411df4 <__parse_rtattr_nested_compat@@Base+0x45c>
  411de8:	adrp	x0, 413000 <_IO_stdin_used@@Base+0xcf0>
  411dec:	add	x0, x0, #0x2c0
  411df0:	bl	404ea0 <perror@plt>
  411df4:	ldp	x29, x30, [sp, #32]
  411df8:	add	sp, sp, #0x30
  411dfc:	ret
  411e00:	sub	sp, sp, #0x40
  411e04:	stp	x29, x30, [sp, #48]
  411e08:	add	x29, sp, #0x30
  411e0c:	stur	w0, [x29, #-8]
  411e10:	stur	x1, [x29, #-16]
  411e14:	stur	w2, [x29, #-20]
  411e18:	ldur	w0, [x29, #-8]
  411e1c:	ldur	x1, [x29, #-16]
  411e20:	ldur	w2, [x29, #-20]
  411e24:	bl	404e50 <recvmsg@plt>
  411e28:	str	w0, [sp, #24]
  411e2c:	ldr	w8, [sp, #24]
  411e30:	cmp	w8, #0x0
  411e34:	cset	w8, ge  // ge = tcont
  411e38:	mov	w9, #0x0                   	// #0
  411e3c:	str	w9, [sp, #20]
  411e40:	tbnz	w8, #0, 411e78 <__parse_rtattr_nested_compat@@Base+0x4e0>
  411e44:	bl	405390 <__errno_location@plt>
  411e48:	ldr	w8, [x0]
  411e4c:	mov	w9, #0x1                   	// #1
  411e50:	cmp	w8, #0x4
  411e54:	str	w9, [sp, #16]
  411e58:	b.eq	411e70 <__parse_rtattr_nested_compat@@Base+0x4d8>  // b.none
  411e5c:	bl	405390 <__errno_location@plt>
  411e60:	ldr	w8, [x0]
  411e64:	cmp	w8, #0xb
  411e68:	cset	w8, eq  // eq = none
  411e6c:	str	w8, [sp, #16]
  411e70:	ldr	w8, [sp, #16]
  411e74:	str	w8, [sp, #20]
  411e78:	ldr	w8, [sp, #20]
  411e7c:	tbnz	w8, #0, 411e18 <__parse_rtattr_nested_compat@@Base+0x480>
  411e80:	ldr	w8, [sp, #24]
  411e84:	cmp	w8, #0x0
  411e88:	cset	w8, ge  // ge = tcont
  411e8c:	tbnz	w8, #0, 411ee4 <__parse_rtattr_nested_compat@@Base+0x54c>
  411e90:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411e94:	ldr	x8, [x8, #3992]
  411e98:	ldr	x0, [x8]
  411e9c:	str	x0, [sp, #8]
  411ea0:	bl	405390 <__errno_location@plt>
  411ea4:	ldr	w0, [x0]
  411ea8:	bl	405110 <strerror@plt>
  411eac:	str	x0, [sp]
  411eb0:	bl	405390 <__errno_location@plt>
  411eb4:	ldr	w3, [x0]
  411eb8:	ldr	x0, [sp, #8]
  411ebc:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411ec0:	add	x1, x1, #0x56
  411ec4:	ldr	x2, [sp]
  411ec8:	bl	4053c0 <fprintf@plt>
  411ecc:	bl	405390 <__errno_location@plt>
  411ed0:	ldr	w9, [x0]
  411ed4:	mov	w10, wzr
  411ed8:	subs	w9, w10, w9
  411edc:	stur	w9, [x29, #-4]
  411ee0:	b	411f18 <__parse_rtattr_nested_compat@@Base+0x580>
  411ee4:	ldr	w8, [sp, #24]
  411ee8:	cbnz	w8, 411f10 <__parse_rtattr_nested_compat@@Base+0x578>
  411eec:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411ef0:	ldr	x8, [x8, #3992]
  411ef4:	ldr	x0, [x8]
  411ef8:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411efc:	add	x1, x1, #0x75
  411f00:	bl	4053c0 <fprintf@plt>
  411f04:	mov	w9, #0xffffffc3            	// #-61
  411f08:	stur	w9, [x29, #-4]
  411f0c:	b	411f18 <__parse_rtattr_nested_compat@@Base+0x580>
  411f10:	ldr	w8, [sp, #24]
  411f14:	stur	w8, [x29, #-4]
  411f18:	ldur	w0, [x29, #-4]
  411f1c:	ldp	x29, x30, [sp, #48]
  411f20:	add	sp, sp, #0x40
  411f24:	ret
  411f28:	sub	sp, sp, #0x40
  411f2c:	stp	x29, x30, [sp, #48]
  411f30:	add	x29, sp, #0x30
  411f34:	stur	x0, [x29, #-8]
  411f38:	stur	x1, [x29, #-16]
  411f3c:	str	x2, [sp, #24]
  411f40:	ldur	x0, [x29, #-8]
  411f44:	ldr	x1, [sp, #24]
  411f48:	bl	40e6d8 <nl_dump_ext_ack@@Base>
  411f4c:	cbz	w0, 411f54 <__parse_rtattr_nested_compat@@Base+0x5bc>
  411f50:	b	411f98 <__parse_rtattr_nested_compat@@Base+0x600>
  411f54:	adrp	x8, 423000 <_IO_stdin_used@@Base+0x10cf0>
  411f58:	ldr	x8, [x8, #3992]
  411f5c:	ldr	x0, [x8]
  411f60:	ldur	x8, [x29, #-16]
  411f64:	ldr	w9, [x8]
  411f68:	mov	w10, wzr
  411f6c:	subs	w9, w10, w9
  411f70:	str	x0, [sp, #16]
  411f74:	mov	w0, w9
  411f78:	bl	405110 <strerror@plt>
  411f7c:	ldr	x8, [sp, #16]
  411f80:	str	x0, [sp, #8]
  411f84:	mov	x0, x8
  411f88:	adrp	x1, 413000 <_IO_stdin_used@@Base+0xcf0>
  411f8c:	add	x1, x1, #0x31d
  411f90:	ldr	x2, [sp, #8]
  411f94:	bl	4053c0 <fprintf@plt>
  411f98:	ldp	x29, x30, [sp, #48]
  411f9c:	add	sp, sp, #0x40
  411fa0:	ret
  411fa4:	nop
  411fa8:	stp	x29, x30, [sp, #-48]!
  411fac:	mov	x29, sp
  411fb0:	str	q0, [sp, #16]
  411fb4:	str	q1, [sp, #32]
  411fb8:	ldp	x6, x1, [sp, #16]
  411fbc:	ldp	x7, x0, [sp, #32]
  411fc0:	mrs	x2, fpcr
  411fc4:	ubfx	x4, x1, #48, #15
  411fc8:	lsr	x2, x1, #63
  411fcc:	lsr	x3, x0, #63
  411fd0:	ubfx	x9, x0, #0, #48
  411fd4:	mov	x5, #0x7fff                	// #32767
  411fd8:	mov	x10, x6
  411fdc:	cmp	x4, x5
  411fe0:	and	w2, w2, #0xff
  411fe4:	ubfx	x1, x1, #0, #48
  411fe8:	and	w3, w3, #0xff
  411fec:	ubfx	x0, x0, #48, #15
  411ff0:	b.eq	412024 <__parse_rtattr_nested_compat@@Base+0x68c>  // b.none
  411ff4:	cmp	x0, x5
  411ff8:	b.eq	412010 <__parse_rtattr_nested_compat@@Base+0x678>  // b.none
  411ffc:	cmp	x4, x0
  412000:	mov	w0, #0x1                   	// #1
  412004:	b.eq	41203c <__parse_rtattr_nested_compat@@Base+0x6a4>  // b.none
  412008:	ldp	x29, x30, [sp], #48
  41200c:	ret
  412010:	orr	x8, x9, x7
  412014:	cbnz	x8, 4120a0 <__parse_rtattr_nested_compat@@Base+0x708>
  412018:	mov	w0, #0x1                   	// #1
  41201c:	ldp	x29, x30, [sp], #48
  412020:	ret
  412024:	orr	x5, x1, x6
  412028:	cbnz	x5, 412070 <__parse_rtattr_nested_compat@@Base+0x6d8>
  41202c:	cmp	x0, x4
  412030:	b.ne	412018 <__parse_rtattr_nested_compat@@Base+0x680>  // b.any
  412034:	orr	x8, x9, x7
  412038:	cbnz	x8, 4120a0 <__parse_rtattr_nested_compat@@Base+0x708>
  41203c:	cmp	x1, x9
  412040:	mov	w0, #0x1                   	// #1
  412044:	ccmp	x6, x7, #0x0, eq  // eq = none
  412048:	b.ne	412008 <__parse_rtattr_nested_compat@@Base+0x670>  // b.any
  41204c:	cmp	w2, w3
  412050:	mov	w0, #0x0                   	// #0
  412054:	b.eq	412008 <__parse_rtattr_nested_compat@@Base+0x670>  // b.none
  412058:	mov	w0, #0x1                   	// #1
  41205c:	cbnz	x4, 412008 <__parse_rtattr_nested_compat@@Base+0x670>
  412060:	orr	x1, x1, x10
  412064:	cmp	x1, #0x0
  412068:	cset	w0, ne  // ne = any
  41206c:	b	412008 <__parse_rtattr_nested_compat@@Base+0x670>
  412070:	tst	x1, #0x800000000000
  412074:	b.ne	41208c <__parse_rtattr_nested_compat@@Base+0x6f4>  // b.any
  412078:	mov	w0, #0x1                   	// #1
  41207c:	bl	412200 <__parse_rtattr_nested_compat@@Base+0x868>
  412080:	mov	w0, #0x1                   	// #1
  412084:	ldp	x29, x30, [sp], #48
  412088:	ret
  41208c:	cmp	x0, x4
  412090:	mov	w0, #0x1                   	// #1
  412094:	b.ne	412008 <__parse_rtattr_nested_compat@@Base+0x670>  // b.any
  412098:	orr	x8, x9, x7
  41209c:	cbz	x8, 412008 <__parse_rtattr_nested_compat@@Base+0x670>
  4120a0:	tst	x9, #0x800000000000
  4120a4:	b.eq	412078 <__parse_rtattr_nested_compat@@Base+0x6e0>  // b.none
  4120a8:	b	412018 <__parse_rtattr_nested_compat@@Base+0x680>
  4120ac:	nop
  4120b0:	mrs	x0, fpcr
  4120b4:	fmov	x0, d0
  4120b8:	ubfx	x1, x0, #52, #11
  4120bc:	lsr	x4, x0, #63
  4120c0:	add	x2, x1, #0x1
  4120c4:	and	w4, w4, #0xff
  4120c8:	tst	x2, #0x7fe
  4120cc:	ubfx	x0, x0, #0, #52
  4120d0:	b.eq	412104 <__parse_rtattr_nested_compat@@Base+0x76c>  // b.none
  4120d4:	lsr	x5, x0, #4
  4120d8:	mov	x3, #0x0                   	// #0
  4120dc:	and	x5, x5, #0xffffffffffff
  4120e0:	mov	w2, #0x3c00                	// #15360
  4120e4:	add	w1, w1, w2
  4120e8:	lsl	x0, x0, #60
  4120ec:	bfxil	x3, x5, #0, #48
  4120f0:	fmov	d0, x0
  4120f4:	bfi	x3, x1, #48, #15
  4120f8:	bfi	x3, x4, #63, #1
  4120fc:	fmov	v0.d[1], x3
  412100:	ret
  412104:	cbnz	x1, 412158 <__parse_rtattr_nested_compat@@Base+0x7c0>
  412108:	cbz	x0, 4121a4 <__parse_rtattr_nested_compat@@Base+0x80c>
  41210c:	clz	x2, x0
  412110:	cmp	w2, #0xe
  412114:	b.gt	4121f0 <__parse_rtattr_nested_compat@@Base+0x858>
  412118:	add	w1, w2, #0x31
  41211c:	mov	w5, #0xf                   	// #15
  412120:	sub	w5, w5, w2
  412124:	lsr	x5, x0, x5
  412128:	lsl	x0, x0, x1
  41212c:	and	x5, x5, #0xffffffffffff
  412130:	mov	w1, #0x3c0c                	// #15372
  412134:	mov	x3, #0x0                   	// #0
  412138:	sub	w1, w1, w2
  41213c:	and	w1, w1, #0x7fff
  412140:	bfxil	x3, x5, #0, #48
  412144:	fmov	d0, x0
  412148:	bfi	x3, x1, #48, #15
  41214c:	bfi	x3, x4, #63, #1
  412150:	fmov	v0.d[1], x3
  412154:	ret
  412158:	cbz	x0, 4121c8 <__parse_rtattr_nested_compat@@Base+0x830>
  41215c:	lsr	x1, x0, #4
  412160:	mov	x3, #0x0                   	// #0
  412164:	orr	x1, x1, #0x800000000000
  412168:	lsl	x2, x0, #60
  41216c:	fmov	d0, x2
  412170:	bfxil	x3, x1, #0, #48
  412174:	orr	x3, x3, #0x7fff000000000000
  412178:	bfi	x3, x4, #63, #1
  41217c:	fmov	v0.d[1], x3
  412180:	tbnz	x0, #51, 4121ec <__parse_rtattr_nested_compat@@Base+0x854>
  412184:	stp	x29, x30, [sp, #-32]!
  412188:	mov	w0, #0x1                   	// #1
  41218c:	mov	x29, sp
  412190:	str	q0, [sp, #16]
  412194:	bl	412200 <__parse_rtattr_nested_compat@@Base+0x868>
  412198:	ldr	q0, [sp, #16]
  41219c:	ldp	x29, x30, [sp], #32
  4121a0:	ret
  4121a4:	mov	x5, #0x0                   	// #0
  4121a8:	mov	x3, #0x0                   	// #0
  4121ac:	bfxil	x3, x5, #0, #48
  4121b0:	mov	w1, #0x0                   	// #0
  4121b4:	fmov	d0, x0
  4121b8:	bfi	x3, x1, #48, #15
  4121bc:	bfi	x3, x4, #63, #1
  4121c0:	fmov	v0.d[1], x3
  4121c4:	ret
  4121c8:	mov	x5, #0x0                   	// #0
  4121cc:	mov	x3, #0x0                   	// #0
  4121d0:	bfxil	x3, x5, #0, #48
  4121d4:	mov	w1, #0x7fff                	// #32767
  4121d8:	fmov	d0, x0
  4121dc:	bfi	x3, x1, #48, #15
  4121e0:	bfi	x3, x4, #63, #1
  4121e4:	fmov	v0.d[1], x3
  4121e8:	ret
  4121ec:	ret
  4121f0:	sub	w5, w2, #0xf
  4121f4:	lsl	x5, x0, x5
  4121f8:	mov	x0, #0x0                   	// #0
  4121fc:	b	41212c <__parse_rtattr_nested_compat@@Base+0x794>
  412200:	tbz	w0, #0, 412210 <__parse_rtattr_nested_compat@@Base+0x878>
  412204:	movi	v1.2s, #0x0
  412208:	fdiv	s0, s1, s1
  41220c:	mrs	x1, fpsr
  412210:	tbz	w0, #1, 412224 <__parse_rtattr_nested_compat@@Base+0x88c>
  412214:	fmov	s1, #1.000000000000000000e+00
  412218:	movi	v2.2s, #0x0
  41221c:	fdiv	s0, s1, s2
  412220:	mrs	x1, fpsr
  412224:	tbz	w0, #2, 412244 <__parse_rtattr_nested_compat@@Base+0x8ac>
  412228:	mov	w2, #0xc5ae                	// #50606
  41222c:	mov	w1, #0x7f7fffff            	// #2139095039
  412230:	movk	w2, #0x749d, lsl #16
  412234:	fmov	s1, w1
  412238:	fmov	s2, w2
  41223c:	fadd	s0, s1, s2
  412240:	mrs	x1, fpsr
  412244:	tbz	w0, #3, 412254 <__parse_rtattr_nested_compat@@Base+0x8bc>
  412248:	movi	v1.2s, #0x80, lsl #16
  41224c:	fmul	s0, s1, s1
  412250:	mrs	x1, fpsr
  412254:	tbz	w0, #4, 41226c <__parse_rtattr_nested_compat@@Base+0x8d4>
  412258:	mov	w0, #0x7f7fffff            	// #2139095039
  41225c:	fmov	s2, #1.000000000000000000e+00
  412260:	fmov	s1, w0
  412264:	fsub	s0, s1, s2
  412268:	mrs	x0, fpsr
  41226c:	ret

0000000000412270 <__libc_csu_init@@Base>:
  412270:	stp	x29, x30, [sp, #-64]!
  412274:	mov	x29, sp
  412278:	stp	x19, x20, [sp, #16]
  41227c:	adrp	x20, 423000 <_IO_stdin_used@@Base+0x10cf0>
  412280:	add	x20, x20, #0xcf8
  412284:	stp	x21, x22, [sp, #32]
  412288:	adrp	x21, 423000 <_IO_stdin_used@@Base+0x10cf0>
  41228c:	add	x21, x21, #0xcf0
  412290:	sub	x20, x20, x21
  412294:	mov	w22, w0
  412298:	stp	x23, x24, [sp, #48]
  41229c:	mov	x23, x1
  4122a0:	mov	x24, x2
  4122a4:	bl	404e08 <memcpy@plt-0x38>
  4122a8:	cmp	xzr, x20, asr #3
  4122ac:	b.eq	4122d8 <__libc_csu_init@@Base+0x68>  // b.none
  4122b0:	asr	x20, x20, #3
  4122b4:	mov	x19, #0x0                   	// #0
  4122b8:	ldr	x3, [x21, x19, lsl #3]
  4122bc:	mov	x2, x24
  4122c0:	add	x19, x19, #0x1
  4122c4:	mov	x1, x23
  4122c8:	mov	w0, w22
  4122cc:	blr	x3
  4122d0:	cmp	x20, x19
  4122d4:	b.ne	4122b8 <__libc_csu_init@@Base+0x48>  // b.any
  4122d8:	ldp	x19, x20, [sp, #16]
  4122dc:	ldp	x21, x22, [sp, #32]
  4122e0:	ldp	x23, x24, [sp, #48]
  4122e4:	ldp	x29, x30, [sp], #64
  4122e8:	ret
  4122ec:	nop

00000000004122f0 <__libc_csu_fini@@Base>:
  4122f0:	ret

Disassembly of section .fini:

00000000004122f4 <.fini>:
  4122f4:	stp	x29, x30, [sp, #-16]!
  4122f8:	mov	x29, sp
  4122fc:	ldp	x29, x30, [sp], #16
  412300:	ret
