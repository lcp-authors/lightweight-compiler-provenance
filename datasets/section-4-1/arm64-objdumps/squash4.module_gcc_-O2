
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//squash4.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <read_chunk>:
       0:	stp	x29, x30, [sp, #-128]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	cbz	x2, 154 <read_chunk+0x154>
      10:	and	x19, x3, #0x1ff
      14:	stp	x21, x22, [sp, #32]
      18:	mov	x21, x0
      1c:	stp	x23, x24, [sp, #48]
      20:	mov	x24, x1
      24:	mov	x23, x2
      28:	stp	x25, x26, [sp, #64]
      2c:	mov	x26, x3
      30:	stp	x27, x28, [sp, #80]
      34:	mov	x27, x4
      38:	lsr	x28, x3, #9
      3c:	and	x22, x27, #0x1fff
      40:	b	68 <read_chunk+0x68>
      44:	ldrh	w5, [sp, #126]
      48:	cmp	x27, x22
      4c:	b.eq	a8 <read_chunk+0xa8>  // b.none
      50:	and	w5, w5, #0xffff7fff
      54:	sub	x27, x27, #0x2, lsl #12
      58:	add	w5, w5, #0x2
      5c:	add	x26, x26, w5, sxtw
      60:	and	x19, x26, #0x1ff
      64:	lsr	x28, x26, #9
      68:	ldr	x0, [x21]
      6c:	add	x4, sp, #0x7e
      70:	mov	x2, x19
      74:	mov	x1, x28
      78:	mov	x3, #0x2                   	// #2
      7c:	bl	0 <grub_disk_read>
      80:	mov	w20, w0
      84:	cbz	w0, 44 <read_chunk+0x44>
      88:	ldp	x21, x22, [sp, #32]
      8c:	ldp	x23, x24, [sp, #48]
      90:	ldp	x25, x26, [sp, #64]
      94:	ldp	x27, x28, [sp, #80]
      98:	mov	w0, w20
      9c:	ldp	x19, x20, [sp, #16]
      a0:	ldp	x29, x30, [sp], #128
      a4:	ret
      a8:	mov	x0, #0x2000                	// #8192
      ac:	sub	x7, x0, x22
      b0:	cmp	x7, x23
      b4:	csel	x25, x7, x23, ls  // ls = plast
      b8:	tbnz	w5, #15, 15c <read_chunk+0x15c>
      bc:	and	x3, x5, #0xffff
      c0:	str	x3, [sp, #96]
      c4:	mov	x0, x3
      c8:	add	x20, x26, #0x2
      cc:	bl	0 <grub_malloc>
      d0:	mov	x6, x0
      d4:	ldr	x3, [sp, #96]
      d8:	cbz	x0, 1ac <read_chunk+0x1ac>
      dc:	mov	x4, x0
      e0:	and	x2, x20, #0x1ff
      e4:	ldr	x0, [x21]
      e8:	lsr	x1, x20, #9
      ec:	stp	x3, x6, [sp, #96]
      f0:	bl	0 <grub_disk_read>
      f4:	mov	w20, w0
      f8:	ldp	x3, x6, [sp, #96]
      fc:	cbnz	w0, 188 <read_chunk+0x188>
     100:	ldr	x9, [x21, #216]
     104:	mov	x1, x3
     108:	mov	x0, x6
     10c:	mov	x2, x27
     110:	mov	x5, x21
     114:	mov	x4, x25
     118:	mov	x3, x24
     11c:	str	x6, [sp, #96]
     120:	blr	x9
     124:	ldr	x6, [sp, #96]
     128:	tbnz	x0, #63, 1a4 <read_chunk+0x1a4>
     12c:	mov	x0, x6
     130:	bl	0 <grub_free>
     134:	add	x27, x22, x25
     138:	add	x24, x24, x25
     13c:	subs	x23, x23, x25
     140:	b.ne	3c <read_chunk+0x3c>  // b.any
     144:	ldp	x21, x22, [sp, #32]
     148:	ldp	x23, x24, [sp, #48]
     14c:	ldp	x25, x26, [sp, #64]
     150:	ldp	x27, x28, [sp, #80]
     154:	mov	w20, #0x0                   	// #0
     158:	b	98 <read_chunk+0x98>
     15c:	ldr	x0, [x21]
     160:	add	x1, x26, x22
     164:	add	x1, x1, #0x2
     168:	mov	x4, x24
     16c:	and	x2, x1, #0x1ff
     170:	mov	x3, x25
     174:	lsr	x1, x1, #9
     178:	bl	0 <grub_disk_read>
     17c:	mov	w20, w0
     180:	cbz	w0, 134 <read_chunk+0x134>
     184:	b	88 <read_chunk+0x88>
     188:	mov	x0, x6
     18c:	bl	0 <grub_free>
     190:	ldp	x21, x22, [sp, #32]
     194:	ldp	x23, x24, [sp, #48]
     198:	ldp	x25, x26, [sp, #64]
     19c:	ldp	x27, x28, [sp, #80]
     1a0:	b	98 <read_chunk+0x98>
     1a4:	mov	x0, x6
     1a8:	bl	0 <grub_free>
     1ac:	adrp	x0, 0 <read_chunk>
     1b0:	ldp	x21, x22, [sp, #32]
     1b4:	ldr	x0, [x0]
     1b8:	ldp	x23, x24, [sp, #48]
     1bc:	ldr	w20, [x0]
     1c0:	ldp	x25, x26, [sp, #64]
     1c4:	ldp	x27, x28, [sp, #80]
     1c8:	b	98 <read_chunk+0x98>
     1cc:	nop
	...

00000000000001d8 <grub_squash_read_symlink>:
     1d8:	stp	x29, x30, [sp, #-32]!
     1dc:	mov	x29, sp
     1e0:	stp	x19, x20, [sp, #16]
     1e4:	mov	x19, x0
     1e8:	ldr	w0, [x0, #28]
     1ec:	add	w0, w0, #0x1
     1f0:	bl	0 <grub_malloc>
     1f4:	ldr	x4, [x19, #64]
     1f8:	mov	x20, x0
     1fc:	mov	x1, x0
     200:	ldr	w2, [x19, #28]
     204:	ldr	x0, [x19]
     208:	add	x4, x19, x4, lsl #4
     20c:	ldr	x5, [x0, #72]
     210:	ldr	x3, [x4, #56]
     214:	ldrh	w4, [x4, #64]
     218:	add	x3, x5, x3
     21c:	add	x4, x4, #0x18
     220:	bl	0 <read_chunk>
     224:	cbnz	w0, 240 <grub_squash_read_symlink+0x68>
     228:	ldr	w0, [x19, #28]
     22c:	strb	wzr, [x20, x0]
     230:	mov	x0, x20
     234:	ldp	x19, x20, [sp, #16]
     238:	ldp	x29, x30, [sp], #32
     23c:	ret
     240:	mov	x0, x20
     244:	mov	x20, #0x0                   	// #0
     248:	bl	0 <grub_free>
     24c:	b	230 <grub_squash_read_symlink+0x58>

0000000000000250 <squash_mount>:
     250:	stp	x29, x30, [sp, #-160]!
     254:	mov	x1, #0x0                   	// #0
     258:	mov	x3, #0x60                  	// #96
     25c:	mov	x29, sp
     260:	add	x4, sp, #0x40
     264:	mov	x2, #0x0                   	// #0
     268:	stp	x19, x20, [sp, #16]
     26c:	str	x21, [sp, #32]
     270:	mov	x21, x0
     274:	bl	0 <grub_disk_read>
     278:	mov	w19, w0
     27c:	adrp	x1, 0 <read_chunk>
     280:	ldr	x20, [x1]
     284:	ldr	w1, [x20]
     288:	cmp	w1, #0xb
     28c:	b.eq	374 <squash_mount+0x124>  // b.none
     290:	cbnz	w19, 388 <squash_mount+0x138>
     294:	ldr	w1, [sp, #64]
     298:	mov	w0, #0x7368                	// #29544
     29c:	movk	w0, #0x7371, lsl #16
     2a0:	cmp	w1, w0
     2a4:	b.ne	3a0 <squash_mount+0x150>  // b.any
     2a8:	ldr	w1, [sp, #76]
     2ac:	cbz	w1, 3a0 <squash_mount+0x150>
     2b0:	sub	w0, w1, #0x1
     2b4:	tst	w0, w1
     2b8:	b.ne	3a0 <squash_mount+0x150>  // b.any
     2bc:	ldr	x1, [sp, #144]
     2c0:	add	x4, sp, #0x38
     2c4:	mov	x0, x21
     2c8:	mov	x3, #0x8                   	// #8
     2cc:	and	x2, x1, #0x1ff
     2d0:	lsr	x1, x1, #9
     2d4:	bl	0 <grub_disk_read>
     2d8:	ldr	w1, [x20]
     2dc:	mov	w19, w0
     2e0:	cmp	w1, #0xb
     2e4:	b.eq	44c <squash_mount+0x1fc>  // b.none
     2e8:	cbnz	w19, 388 <squash_mount+0x138>
     2ec:	mov	x0, #0xf0                  	// #240
     2f0:	bl	0 <grub_zalloc>
     2f4:	mov	x19, x0
     2f8:	cbz	x0, 388 <squash_mount+0x138>
     2fc:	ldp	x4, x5, [sp, #64]
     300:	ldrh	w2, [sp, #84]
     304:	stp	x4, x5, [x0, #8]
     308:	cmp	w2, #0x3
     30c:	ldp	x4, x5, [sp, #80]
     310:	stp	x4, x5, [x0, #24]
     314:	ldp	x4, x5, [sp, #96]
     318:	stp	x4, x5, [x0, #40]
     31c:	ldp	x4, x5, [sp, #112]
     320:	stp	x4, x5, [x0, #56]
     324:	ldp	x4, x5, [sp, #128]
     328:	stp	x4, x5, [x0, #72]
     32c:	ldr	x1, [sp, #56]
     330:	str	x1, [x0, #192]
     334:	ldp	x4, x5, [sp, #144]
     338:	str	x21, [x0]
     33c:	stp	x4, x5, [x0, #88]
     340:	b.eq	460 <squash_mount+0x210>  // b.none
     344:	cmp	w2, #0x4
     348:	b.eq	3c8 <squash_mount+0x178>  // b.none
     34c:	cmp	w2, #0x1
     350:	b.eq	43c <squash_mount+0x1ec>  // b.none
     354:	bl	0 <grub_free>
     358:	mov	x19, #0x0                   	// #0
     35c:	adrp	x1, 0 <read_chunk>
     360:	ldrh	w2, [sp, #84]
     364:	mov	w0, #0x9                   	// #9
     368:	ldr	x1, [x1]
     36c:	bl	0 <grub_error>
     370:	b	3b4 <squash_mount+0x164>
     374:	adrp	x1, 0 <read_chunk>
     378:	mov	w0, #0x9                   	// #9
     37c:	ldr	x1, [x1]
     380:	bl	0 <grub_error>
     384:	cbz	w19, 294 <squash_mount+0x44>
     388:	mov	x19, #0x0                   	// #0
     38c:	mov	x0, x19
     390:	ldp	x19, x20, [sp, #16]
     394:	ldr	x21, [sp, #32]
     398:	ldp	x29, x30, [sp], #160
     39c:	ret
     3a0:	adrp	x1, 0 <read_chunk>
     3a4:	mov	w0, #0x9                   	// #9
     3a8:	mov	x19, #0x0                   	// #0
     3ac:	ldr	x1, [x1]
     3b0:	bl	0 <grub_error>
     3b4:	mov	x0, x19
     3b8:	ldp	x19, x20, [sp, #16]
     3bc:	ldr	x21, [sp, #32]
     3c0:	ldp	x29, x30, [sp], #160
     3c4:	ret
     3c8:	adrp	x1, 0 <read_chunk>
     3cc:	mov	x0, #0x2000                	// #8192
     3d0:	ldr	x1, [x1]
     3d4:	str	x1, [x19, #216]
     3d8:	bl	0 <grub_malloc>
     3dc:	str	x0, [x19, #232]
     3e0:	cbz	x0, 478 <squash_mount+0x228>
     3e4:	mov	w0, #0x10000               	// #65536
     3e8:	bl	0 <xz_dec_init>
     3ec:	str	x0, [x19, #224]
     3f0:	cbz	x0, 470 <squash_mount+0x220>
     3f4:	ldr	w3, [x19, #20]
     3f8:	str	wzr, [x19, #200]
     3fc:	str	x3, [x19, #208]
     400:	cmp	x3, #0x1
     404:	b.ls	3b4 <squash_mount+0x164>  // b.plast
     408:	mov	w0, #0x1                   	// #1
     40c:	mov	w4, w0
     410:	mov	w1, w0
     414:	add	w0, w0, #0x1
     418:	lsl	w2, w4, w1
     41c:	cmp	x3, x2
     420:	b.hi	410 <squash_mount+0x1c0>  // b.pmore
     424:	str	w1, [x19, #200]
     428:	mov	x0, x19
     42c:	ldp	x19, x20, [sp, #16]
     430:	ldr	x21, [sp, #32]
     434:	ldp	x29, x30, [sp], #160
     438:	ret
     43c:	adrp	x0, 0 <read_chunk>
     440:	ldr	x0, [x0]
     444:	str	x0, [x19, #216]
     448:	b	3f4 <squash_mount+0x1a4>
     44c:	adrp	x1, 0 <read_chunk>
     450:	mov	w0, #0x9                   	// #9
     454:	ldr	x1, [x1]
     458:	bl	0 <grub_error>
     45c:	b	2e8 <squash_mount+0x98>
     460:	adrp	x0, 0 <read_chunk>
     464:	ldr	x0, [x0]
     468:	str	x0, [x19, #216]
     46c:	b	3f4 <squash_mount+0x1a4>
     470:	ldr	x0, [x19, #232]
     474:	bl	0 <grub_free>
     478:	mov	x0, x19
     47c:	mov	x19, #0x0                   	// #0
     480:	bl	0 <grub_free>
     484:	b	3b4 <squash_mount+0x164>
	...

00000000000004c0 <xz_decompress>:
     4c0:	stp	x29, x30, [sp, #-128]!
     4c4:	mov	x29, sp
     4c8:	stp	x19, x20, [sp, #16]
     4cc:	mov	x20, x0
     4d0:	mov	x19, x1
     4d4:	ldr	x0, [x5, #224]
     4d8:	stp	x23, x24, [sp, #48]
     4dc:	mov	x24, x5
     4e0:	mov	x23, x2
     4e4:	stp	x21, x22, [sp, #32]
     4e8:	mov	x22, x4
     4ec:	stp	x25, x26, [sp, #64]
     4f0:	mov	x26, x3
     4f4:	bl	0 <xz_dec_reset>
     4f8:	ldr	x1, [x24, #232]
     4fc:	mov	x0, #0x2000                	// #8192
     500:	mov	x21, #0x0                   	// #0
     504:	mov	x25, #0x0                   	// #0
     508:	stp	x20, xzr, [sp, #80]
     50c:	stp	x19, x1, [sp, #96]
     510:	str	x0, [sp, #120]
     514:	b	558 <xz_decompress+0x98>
     518:	subs	x3, x21, x23
     51c:	mov	x0, x26
     520:	add	x20, x6, x3
     524:	ldr	x1, [sp, #104]
     528:	b.mi	5b0 <xz_decompress+0xf0>  // b.first
     52c:	cmp	x6, x22
     530:	add	x0, x26, x3
     534:	csel	x20, x6, x22, ls  // ls = plast
     538:	mov	x2, x20
     53c:	bl	0 <grub_memmove>
     540:	ldr	x0, [sp, #112]
     544:	add	x25, x25, x20
     548:	sub	x22, x22, x20
     54c:	cmp	w19, #0x1
     550:	add	x21, x21, x0
     554:	b.eq	594 <xz_decompress+0xd4>  // b.none
     558:	add	x1, sp, #0x50
     55c:	cbz	x22, 594 <xz_decompress+0xd4>
     560:	ldr	x0, [x24, #224]
     564:	str	xzr, [sp, #112]
     568:	bl	0 <xz_dec_run>
     56c:	mov	w19, w0
     570:	cmp	w0, #0x1
     574:	b.hi	5c8 <xz_decompress+0x108>  // b.pmore
     578:	ldr	x6, [sp, #112]
     57c:	add	x0, x6, x21
     580:	cmp	x0, x23
     584:	b.cs	518 <xz_decompress+0x58>  // b.hs, b.nlast
     588:	mov	x21, x0
     58c:	cmp	w19, #0x1
     590:	b.ne	558 <xz_decompress+0x98>  // b.any
     594:	mov	x0, x25
     598:	ldp	x19, x20, [sp, #16]
     59c:	ldp	x21, x22, [sp, #32]
     5a0:	ldp	x23, x24, [sp, #48]
     5a4:	ldp	x25, x26, [sp, #64]
     5a8:	ldp	x29, x30, [sp], #128
     5ac:	ret
     5b0:	cmp	x20, x22
     5b4:	sub	x1, x1, x3
     5b8:	csel	x20, x20, x22, ls  // ls = plast
     5bc:	mov	x2, x20
     5c0:	bl	0 <grub_memmove>
     5c4:	b	540 <xz_decompress+0x80>
     5c8:	adrp	x1, 0 <read_chunk>
     5cc:	mov	w0, #0x1a                  	// #26
     5d0:	ldr	x1, [x1]
     5d4:	bl	0 <grub_error>
     5d8:	mov	x0, #0xffffffffffffffff    	// #-1
     5dc:	ldp	x19, x20, [sp, #16]
     5e0:	ldp	x21, x22, [sp, #32]
     5e4:	ldp	x23, x24, [sp, #48]
     5e8:	ldp	x25, x26, [sp, #64]
     5ec:	ldp	x29, x30, [sp], #128
     5f0:	ret
     5f4:	nop
	...

0000000000000600 <grub_squash_iterate_dir>:
     600:	stp	x29, x30, [sp, #-192]!
     604:	mov	x29, sp
     608:	stp	x19, x20, [sp, #16]
     60c:	mov	x19, x0
     610:	stp	x21, x22, [sp, #32]
     614:	mov	x22, x1
     618:	stp	x23, x24, [sp, #48]
     61c:	mov	x23, x2
     620:	ldrh	w2, [x0, #8]
     624:	stp	x25, x26, [sp, #64]
     628:	cmp	w2, #0x1
     62c:	b.eq	668 <grub_squash_iterate_dir+0x68>  // b.none
     630:	cmp	w2, #0x8
     634:	b.eq	894 <grub_squash_iterate_dir+0x294>  // b.none
     638:	adrp	x1, 0 <read_chunk>
     63c:	mov	w0, #0x9                   	// #9
     640:	mov	w26, #0x0                   	// #0
     644:	ldr	x1, [x1]
     648:	bl	0 <grub_error>
     64c:	mov	w0, w26
     650:	ldp	x19, x20, [sp, #16]
     654:	ldp	x21, x22, [sp, #32]
     658:	ldp	x23, x24, [sp, #48]
     65c:	ldp	x25, x26, [sp, #64]
     660:	ldp	x29, x30, [sp], #192
     664:	ret
     668:	ldrh	w20, [x0, #34]
     66c:	stp	x27, x28, [sp, #80]
     670:	ldrh	w27, [x0, #32]
     674:	ldr	w25, [x19, #24]
     678:	add	w27, w27, w20
     67c:	sub	w0, w27, #0x3
     680:	str	w0, [sp, #108]
     684:	ldr	x0, [x19, #64]
     688:	lsl	x0, x0, #4
     68c:	add	x0, x0, #0x58
     690:	bl	0 <grub_malloc>
     694:	mov	x21, x0
     698:	cbz	x0, 8c8 <grub_squash_iterate_dir+0x2c8>
     69c:	ldr	x2, [x19, #64]
     6a0:	mov	x1, x19
     6a4:	lsl	x2, x2, #4
     6a8:	add	x2, x2, #0x58
     6ac:	bl	0 <grub_memmove>
     6b0:	adrp	x0, 0 <read_chunk>
     6b4:	mov	x2, x21
     6b8:	mov	x3, x23
     6bc:	mov	w1, #0x2                   	// #2
     6c0:	ldr	x0, [x0]
     6c4:	blr	x22
     6c8:	mov	w26, w0
     6cc:	cbnz	w0, 964 <grub_squash_iterate_dir+0x364>
     6d0:	ldr	x0, [x19, #64]
     6d4:	cmp	x0, #0x1
     6d8:	b.ne	8ec <grub_squash_iterate_dir+0x2ec>  // b.any
     6dc:	ldr	w0, [sp, #108]
     6e0:	cmp	w20, w0
     6e4:	b.cs	8c8 <grub_squash_iterate_dir+0x2c8>  // b.hs, b.nlast
     6e8:	ldr	x0, [x19]
     6ec:	mov	w4, w20
     6f0:	add	x1, sp, #0x78
     6f4:	mov	x2, #0xc                   	// #12
     6f8:	ldr	x3, [x0, #80]
     6fc:	add	x3, x25, x3
     700:	bl	0 <read_chunk>
     704:	mov	w21, w0
     708:	cbnz	w0, 874 <grub_squash_iterate_dir+0x274>
     70c:	ldr	w0, [sp, #120]
     710:	add	w20, w20, #0xc
     714:	cmn	w0, #0x1
     718:	b.ne	848 <grub_squash_iterate_dir+0x248>  // b.any
     71c:	b	988 <grub_squash_iterate_dir+0x388>
     720:	ldr	x0, [x19]
     724:	add	x1, sp, #0x88
     728:	ldr	w5, [sp, #124]
     72c:	mov	x2, #0x38                  	// #56
     730:	ldrh	w4, [sp, #112]
     734:	ldr	x3, [x0, #72]
     738:	add	x3, x5, x3
     73c:	bl	0 <read_chunk>
     740:	cbnz	w0, 874 <grub_squash_iterate_dir+0x274>
     744:	ldrh	w0, [sp, #118]
     748:	add	x0, x0, #0x2
     74c:	bl	0 <grub_malloc>
     750:	mov	w4, w20
     754:	mov	x27, x0
     758:	cbz	x0, 874 <grub_squash_iterate_dir+0x274>
     75c:	mov	x1, x0
     760:	ldrh	w2, [sp, #118]
     764:	ldr	x0, [x19]
     768:	add	x2, x2, #0x1
     76c:	ldr	x3, [x0, #80]
     770:	add	x3, x25, x3
     774:	bl	0 <read_chunk>
     778:	mov	w2, #0x3                   	// #3
     77c:	cbnz	w0, 874 <grub_squash_iterate_dir+0x274>
     780:	ldrh	w0, [sp, #118]
     784:	add	w1, w0, #0x1
     788:	add	x0, x27, w0, uxth
     78c:	add	w20, w1, w20
     790:	strb	wzr, [x0, #1]
     794:	ldrh	w0, [sp, #116]
     798:	cmp	w0, #0x1
     79c:	b.eq	7a8 <grub_squash_iterate_dir+0x1a8>  // b.none
     7a0:	cmp	w0, w2
     7a4:	csinc	w24, w2, wzr, eq  // eq = none
     7a8:	ldr	x0, [x19, #64]
     7ac:	lsl	x0, x0, #4
     7b0:	add	x0, x0, #0x68
     7b4:	bl	0 <grub_malloc>
     7b8:	mov	x1, x19
     7bc:	mov	x28, x0
     7c0:	cbz	x0, 874 <grub_squash_iterate_dir+0x274>
     7c4:	ldr	x2, [x19, #64]
     7c8:	lsl	x2, x2, #4
     7cc:	add	x2, x2, #0x58
     7d0:	bl	0 <grub_memmove>
     7d4:	ldr	x6, [x28, #64]
     7d8:	mov	w1, w24
     7dc:	ldp	x2, x3, [sp, #136]
     7e0:	stp	x2, x3, [x28, #8]
     7e4:	add	x7, x6, #0x1
     7e8:	ldp	x2, x3, [sp, #152]
     7ec:	stp	x2, x3, [x28, #24]
     7f0:	add	x6, x28, x6, lsl #4
     7f4:	ldp	x2, x3, [sp, #168]
     7f8:	stp	x2, x3, [x28, #40]
     7fc:	ldrh	w8, [sp, #112]
     800:	ldr	x3, [sp, #184]
     804:	str	x3, [x28, #56]
     808:	ldr	w9, [sp, #124]
     80c:	mov	x2, x28
     810:	str	x9, [x6, #72]
     814:	mov	x3, x23
     818:	strh	w8, [x6, #80]
     81c:	mov	x0, x27
     820:	str	x7, [x28, #64]
     824:	blr	x22
     828:	mov	w24, w0
     82c:	mov	x0, x27
     830:	bl	0 <grub_free>
     834:	cbnz	w24, 998 <grub_squash_iterate_dir+0x398>
     838:	ldr	w0, [sp, #120]
     83c:	add	w0, w0, #0x1
     840:	cmp	w0, w21
     844:	b.ls	988 <grub_squash_iterate_dir+0x388>  // b.plast
     848:	ldr	x0, [x19]
     84c:	mov	w4, w20
     850:	add	w21, w21, #0x1
     854:	add	x1, sp, #0x70
     858:	add	w20, w20, #0x8
     85c:	mov	x2, #0x8                   	// #8
     860:	ldr	x3, [x0, #80]
     864:	mov	w24, #0x2                   	// #2
     868:	add	x3, x25, x3
     86c:	bl	0 <read_chunk>
     870:	cbz	w0, 720 <grub_squash_iterate_dir+0x120>
     874:	mov	w0, w26
     878:	ldp	x19, x20, [sp, #16]
     87c:	ldp	x21, x22, [sp, #32]
     880:	ldp	x23, x24, [sp, #48]
     884:	ldp	x25, x26, [sp, #64]
     888:	ldp	x27, x28, [sp, #80]
     88c:	ldp	x29, x30, [sp], #192
     890:	ret
     894:	ldrh	w20, [x0, #42]
     898:	stp	x27, x28, [sp, #80]
     89c:	ldrh	w27, [x0, #28]
     8a0:	ldr	w25, [x19, #32]
     8a4:	add	w27, w27, w20
     8a8:	sub	w0, w27, #0x3
     8ac:	str	w0, [sp, #108]
     8b0:	ldr	x0, [x19, #64]
     8b4:	lsl	x0, x0, #4
     8b8:	add	x0, x0, #0x58
     8bc:	bl	0 <grub_malloc>
     8c0:	mov	x21, x0
     8c4:	cbnz	x0, 69c <grub_squash_iterate_dir+0x9c>
     8c8:	mov	w26, #0x0                   	// #0
     8cc:	mov	w0, w26
     8d0:	ldp	x19, x20, [sp, #16]
     8d4:	ldp	x21, x22, [sp, #32]
     8d8:	ldp	x23, x24, [sp, #48]
     8dc:	ldp	x25, x26, [sp, #64]
     8e0:	ldp	x27, x28, [sp, #80]
     8e4:	ldp	x29, x30, [sp], #192
     8e8:	ret
     8ec:	lsl	x0, x0, #4
     8f0:	add	x0, x0, #0x58
     8f4:	bl	0 <grub_malloc>
     8f8:	mov	x21, x0
     8fc:	cbz	x0, 8c8 <grub_squash_iterate_dir+0x2c8>
     900:	ldr	x2, [x19, #64]
     904:	mov	x1, x19
     908:	lsl	x2, x2, #4
     90c:	add	x2, x2, #0x58
     910:	bl	0 <grub_memmove>
     914:	ldr	x5, [x21, #64]
     918:	mov	x2, #0x38                  	// #56
     91c:	ldr	x0, [x19]
     920:	sub	x1, x5, #0x1
     924:	add	x5, x21, x5, lsl #4
     928:	ldr	x6, [x0, #72]
     92c:	str	x1, [x21, #64]
     930:	add	x1, x21, #0x8
     934:	ldrh	w4, [x5, #48]
     938:	ldr	x3, [x5, #40]
     93c:	add	x3, x6, x3
     940:	bl	0 <read_chunk>
     944:	cbnz	w0, 8c8 <grub_squash_iterate_dir+0x2c8>
     948:	adrp	x0, 0 <read_chunk>
     94c:	mov	x2, x21
     950:	mov	x3, x23
     954:	mov	w1, #0x2                   	// #2
     958:	ldr	x0, [x0]
     95c:	blr	x22
     960:	cbz	w0, 6dc <grub_squash_iterate_dir+0xdc>
     964:	mov	w26, #0x1                   	// #1
     968:	mov	w0, w26
     96c:	ldp	x19, x20, [sp, #16]
     970:	ldp	x21, x22, [sp, #32]
     974:	ldp	x23, x24, [sp, #48]
     978:	ldp	x25, x26, [sp, #64]
     97c:	ldp	x27, x28, [sp, #80]
     980:	ldp	x29, x30, [sp], #192
     984:	ret
     988:	ldr	w0, [sp, #108]
     98c:	cmp	w0, w20
     990:	b.hi	6e8 <grub_squash_iterate_dir+0xe8>  // b.pmore
     994:	b	8c8 <grub_squash_iterate_dir+0x2c8>
     998:	mov	w26, w24
     99c:	ldp	x27, x28, [sp, #80]
     9a0:	b	64c <grub_squash_iterate_dir+0x4c>
     9a4:	nop
	...

00000000000009c0 <lzo_decompress>:
     9c0:	stp	x29, x30, [sp, #-80]!
     9c4:	mov	x29, sp
     9c8:	ldr	x5, [x5, #208]
     9cc:	stp	x19, x20, [sp, #16]
     9d0:	mov	x20, x4
     9d4:	stp	x21, x22, [sp, #32]
     9d8:	mov	x21, x0
     9dc:	mov	x22, x1
     9e0:	stp	x23, x24, [sp, #48]
     9e4:	mov	x0, #0x1fff                	// #8191
     9e8:	mov	x23, x2
     9ec:	mov	x24, x3
     9f0:	cmp	x5, x0
     9f4:	b.ls	a58 <lzo_decompress+0x98>  // b.plast
     9f8:	str	x5, [sp, #72]
     9fc:	mov	x0, x5
     a00:	bl	0 <grub_malloc>
     a04:	mov	x19, x0
     a08:	cbz	x0, a88 <lzo_decompress+0xc8>
     a0c:	mov	x1, x22
     a10:	mov	x0, x21
     a14:	add	x3, sp, #0x48
     a18:	mov	x2, x19
     a1c:	mov	x4, #0x0                   	// #0
     a20:	bl	0 <lzo1x_decompress_safe>
     a24:	cbnz	w0, a68 <lzo_decompress+0xa8>
     a28:	add	x1, x19, x23
     a2c:	mov	x2, x20
     a30:	mov	x0, x24
     a34:	bl	0 <grub_memmove>
     a38:	mov	x0, x19
     a3c:	bl	0 <grub_free>
     a40:	mov	x0, x20
     a44:	ldp	x19, x20, [sp, #16]
     a48:	ldp	x21, x22, [sp, #32]
     a4c:	ldp	x23, x24, [sp, #48]
     a50:	ldp	x29, x30, [sp], #80
     a54:	ret
     a58:	mov	x0, #0x2000                	// #8192
     a5c:	mov	x5, x0
     a60:	str	x0, [sp, #72]
     a64:	b	9fc <lzo_decompress+0x3c>
     a68:	adrp	x1, 0 <read_chunk>
     a6c:	mov	w0, #0x9                   	// #9
     a70:	ldr	x1, [x1]
     a74:	bl	0 <grub_error>
     a78:	mov	x0, x19
     a7c:	bl	0 <grub_free>
     a80:	mov	x0, #0xffffffffffffffff    	// #-1
     a84:	b	a44 <lzo_decompress+0x84>
     a88:	mov	x0, #0xffffffffffffffff    	// #-1
     a8c:	b	a44 <lzo_decompress+0x84>
	...

0000000000000a98 <zlib_decompress>:
     a98:	b	0 <grub_zlib_decompress>
     a9c:	nop

0000000000000aa0 <squash_unmount>:
     aa0:	stp	x29, x30, [sp, #-32]!
     aa4:	mov	x29, sp
     aa8:	str	x19, [sp, #16]
     aac:	mov	x19, x0
     ab0:	ldr	x0, [x0, #224]
     ab4:	cbz	x0, abc <squash_unmount+0x1c>
     ab8:	bl	0 <xz_dec_end>
     abc:	ldr	x0, [x19, #232]
     ac0:	bl	0 <grub_free>
     ac4:	ldr	x0, [x19, #184]
     ac8:	bl	0 <grub_free>
     acc:	ldr	x0, [x19, #176]
     ad0:	bl	0 <grub_free>
     ad4:	mov	x0, x19
     ad8:	ldr	x19, [sp, #16]
     adc:	ldp	x29, x30, [sp], #32
     ae0:	b	0 <grub_free>
     ae4:	nop

0000000000000ae8 <grub_squash_mtime>:
     ae8:	stp	x29, x30, [sp, #-32]!
     aec:	mov	x29, sp
     af0:	ldr	x0, [x0]
     af4:	str	x19, [sp, #16]
     af8:	mov	x19, x1
     afc:	bl	250 <squash_mount>
     b00:	cbz	x0, b20 <grub_squash_mtime+0x38>
     b04:	ldr	w1, [x0, #16]
     b08:	str	w1, [x19]
     b0c:	bl	aa0 <squash_unmount>
     b10:	mov	w0, #0x0                   	// #0
     b14:	ldr	x19, [sp, #16]
     b18:	ldp	x29, x30, [sp], #32
     b1c:	ret
     b20:	adrp	x0, 0 <read_chunk>
     b24:	ldr	x19, [sp, #16]
     b28:	ldr	x0, [x0]
     b2c:	ldp	x29, x30, [sp], #32
     b30:	ldr	w0, [x0]
     b34:	ret
	...

0000000000000b40 <grub_squash_close>:
     b40:	stp	x29, x30, [sp, #-16]!
     b44:	mov	x29, sp
     b48:	ldr	x0, [x0, #80]
     b4c:	bl	aa0 <squash_unmount>
     b50:	mov	w0, #0x0                   	// #0
     b54:	ldp	x29, x30, [sp], #16
     b58:	ret
     b5c:	nop

0000000000000b60 <grub_squash_read>:
     b60:	stp	x29, x30, [sp, #-160]!
     b64:	mov	x29, sp
     b68:	stp	x27, x28, [sp, #80]
     b6c:	ldr	x27, [x0, #80]
     b70:	stp	x19, x20, [sp, #16]
     b74:	stp	x21, x22, [sp, #32]
     b78:	add	x22, x27, #0x68
     b7c:	stp	x23, x24, [sp, #48]
     b80:	str	x2, [sp, #96]
     b84:	ldrh	w2, [x27, #104]
     b88:	str	x1, [sp, #120]
     b8c:	ldr	w1, [x27, #20]
     b90:	cmp	w2, #0x2
     b94:	ldr	x20, [x0, #24]
     b98:	sub	w1, w1, #0x1
     b9c:	ldr	x0, [x0, #64]
     ba0:	b.eq	cc0 <grub_squash_read+0x160>  // b.none
     ba4:	cmp	w2, #0x9
     ba8:	b.ne	c90 <grub_squash_read+0x130>  // b.any
     bac:	ldr	w3, [x22, #44]
     bb0:	str	w3, [sp, #104]
     bb4:	ldr	w3, [sp, #104]
     bb8:	cmn	w3, #0x1
     bbc:	b.eq	bc4 <grub_squash_read+0x64>  // b.none
     bc0:	bic	x0, x0, x1
     bc4:	cmp	x0, x20
     bc8:	sub	x19, x20, x0
     bcc:	ldr	x21, [sp, #96]
     bd0:	b.hi	cd8 <grub_squash_read+0x178>  // b.pmore
     bd4:	ldr	x0, [sp, #104]
     bd8:	add	x1, sp, #0x90
     bdc:	ldr	x3, [x27, #192]
     be0:	mov	x2, #0x10                  	// #16
     be4:	ubfiz	x4, x0, #4, #32
     be8:	mov	x0, x27
     bec:	bl	0 <read_chunk>
     bf0:	cbnz	w0, cb8 <grub_squash_read+0x158>
     bf4:	ldrh	w1, [x27, #104]
     bf8:	ldr	w0, [sp, #152]
     bfc:	cmp	w1, #0x9
     c00:	and	w2, w0, #0x1000000
     c04:	ldr	x24, [sp, #144]
     c08:	b.eq	e74 <grub_squash_read+0x314>  // b.none
     c0c:	ldr	w1, [x22, #24]
     c10:	add	x19, x1, x19
     c14:	cbnz	w2, c98 <grub_squash_read+0x138>
     c18:	mov	w0, w0
     c1c:	bl	0 <grub_malloc>
     c20:	mov	x20, x0
     c24:	cbz	x0, cb8 <grub_squash_read+0x158>
     c28:	mov	x4, x0
     c2c:	ldr	w3, [sp, #152]
     c30:	ldr	x0, [x27]
     c34:	and	x2, x24, #0x1ff
     c38:	lsr	x1, x24, #9
     c3c:	bl	0 <grub_disk_read>
     c40:	cbnz	w0, 1010 <grub_squash_read+0x4b0>
     c44:	ldr	w1, [sp, #152]
     c48:	mov	x2, x19
     c4c:	ldr	x3, [sp, #120]
     c50:	mov	x5, x27
     c54:	ldr	x7, [x27, #216]
     c58:	mov	x4, x21
     c5c:	mov	x0, x20
     c60:	blr	x7
     c64:	cmp	x0, x21
     c68:	mov	x0, x20
     c6c:	b.ne	fe4 <grub_squash_read+0x484>  // b.any
     c70:	bl	0 <grub_free>
     c74:	ldr	x0, [sp, #96]
     c78:	ldp	x19, x20, [sp, #16]
     c7c:	ldp	x21, x22, [sp, #32]
     c80:	ldp	x23, x24, [sp, #48]
     c84:	ldp	x27, x28, [sp, #80]
     c88:	ldp	x29, x30, [sp], #160
     c8c:	ret
     c90:	str	wzr, [sp, #104]
     c94:	b	bc0 <grub_squash_read+0x60>
     c98:	ldr	x0, [x27]
     c9c:	add	x19, x19, x24
     ca0:	ldr	x4, [sp, #120]
     ca4:	mov	x3, x21
     ca8:	and	x2, x19, #0x1ff
     cac:	lsr	x1, x19, #9
     cb0:	bl	0 <grub_disk_read>
     cb4:	cbz	w0, c74 <grub_squash_read+0x114>
     cb8:	mov	x0, #0xffffffffffffffff    	// #-1
     cbc:	b	c78 <grub_squash_read+0x118>
     cc0:	ldr	w3, [x22, #20]
     cc4:	str	w3, [sp, #104]
     cc8:	ldr	w3, [sp, #104]
     ccc:	cmn	w3, #0x1
     cd0:	b.ne	bc0 <grub_squash_read+0x60>  // b.any
     cd4:	b	bc4 <grub_squash_read+0x64>
     cd8:	sub	x0, x0, x20
     cdc:	cmp	x21, x0
     ce0:	csel	x0, x21, x0, ls  // ls = plast
     ce4:	str	x0, [sp, #128]
     ce8:	cmp	w2, #0x2
     cec:	ldr	x0, [x22, #72]
     cf0:	b.eq	ec0 <grub_squash_read+0x360>  // b.none
     cf4:	cmp	w2, #0x9
     cf8:	b.eq	e84 <grub_squash_read+0x324>  // b.none
     cfc:	cbz	x0, fd4 <grub_squash_read+0x474>
     d00:	stp	x25, x26, [sp, #64]
     d04:	mov	x0, #0x60                  	// #96
     d08:	str	x0, [sp, #112]
     d0c:	ldr	w21, [x27, #200]
     d10:	ldr	x0, [x27, #208]
     d14:	lsr	x21, x20, x21
     d18:	ldr	x25, [sp, #128]
     d1c:	mul	x24, x21, x0
     d20:	add	x1, x25, x20
     d24:	cmp	x24, x1
     d28:	b.cs	eb4 <grub_squash_read+0x354>  // b.hs, b.nlast
     d2c:	lsl	x21, x21, #2
     d30:	ldr	x26, [sp, #120]
     d34:	b	dd0 <grub_squash_read+0x270>
     d38:	bl	0 <grub_malloc>
     d3c:	mov	x28, x0
     d40:	lsl	x1, x21, #1
     d44:	cbz	x0, e3c <grub_squash_read+0x2dc>
     d48:	ldr	x2, [x22, #80]
     d4c:	mov	x4, x0
     d50:	ldr	x5, [sp, #112]
     d54:	mov	x3, x23
     d58:	ldr	x1, [x2, x1]
     d5c:	ldr	x0, [x27]
     d60:	add	x1, x5, x1
     d64:	and	x2, x1, #0x1ff
     d68:	lsr	x1, x1, #9
     d6c:	bl	0 <grub_disk_read>
     d70:	mov	w9, w0
     d74:	mov	x5, x27
     d78:	mov	x4, x19
     d7c:	mov	x3, x26
     d80:	sub	x2, x20, x24
     d84:	mov	x1, x23
     d88:	mov	x0, x28
     d8c:	cbnz	w9, f9c <grub_squash_read+0x43c>
     d90:	ldr	x8, [x27, #216]
     d94:	blr	x8
     d98:	cmp	x0, x19
     d9c:	mov	x0, x28
     da0:	b.ne	fa8 <grub_squash_read+0x448>  // b.any
     da4:	bl	0 <grub_free>
     da8:	ldr	w1, [x27, #20]
     dac:	add	x0, x20, x25
     db0:	add	x26, x26, x19
     db4:	add	x21, x21, #0x4
     db8:	add	x24, x24, x1
     dbc:	add	x20, x19, x20
     dc0:	sub	x25, x25, x19
     dc4:	cmp	x24, x0
     dc8:	b.cs	eb4 <grub_squash_read+0x354>  // b.hs, b.nlast
     dcc:	ldr	x0, [x27, #208]
     dd0:	sub	x19, x24, x20
     dd4:	ldr	x1, [x22, #72]
     dd8:	add	x19, x19, x0
     ddc:	sub	x0, x20, x24
     de0:	str	x0, [sp, #136]
     de4:	cmp	x19, x25
     de8:	ldr	w2, [x1, x21]
     dec:	csel	x19, x19, x25, ls  // ls = plast
     df0:	cbz	w2, ea0 <grub_squash_read+0x340>
     df4:	ldr	x1, [sp, #112]
     df8:	and	x23, x2, #0xffffffff
     dfc:	sub	x0, x20, x24
     e00:	and	x23, x23, #0xfffffffffeffffff
     e04:	add	x1, x0, x1
     e08:	lsl	x5, x21, #1
     e0c:	mov	x0, x23
     e10:	tbz	w2, #24, d38 <grub_squash_read+0x1d8>
     e14:	ldr	x2, [x22, #80]
     e18:	mov	x4, x26
     e1c:	ldr	x0, [x27]
     e20:	mov	x3, x19
     e24:	ldr	x2, [x2, x5]
     e28:	add	x1, x1, x2
     e2c:	and	x2, x1, #0x1ff
     e30:	lsr	x1, x1, #9
     e34:	bl	0 <grub_disk_read>
     e38:	cbz	w0, da8 <grub_squash_read+0x248>
     e3c:	ldp	x25, x26, [sp, #64]
     e40:	ldr	x0, [sp, #128]
     e44:	cmn	x0, #0x1
     e48:	mov	x0, #0xffffffffffffffff    	// #-1
     e4c:	b.ne	cb8 <grub_squash_read+0x158>  // b.any
     e50:	ldr	x2, [sp, #96]
     e54:	ldr	x1, [sp, #128]
     e58:	subs	x21, x2, x1
     e5c:	b.eq	c78 <grub_squash_read+0x118>  // b.none
     e60:	ldr	x0, [sp, #120]
     e64:	mov	x19, #0x0                   	// #0
     e68:	add	x0, x0, x1
     e6c:	str	x0, [sp, #120]
     e70:	b	bd4 <grub_squash_read+0x74>
     e74:	ldr	w1, [x22, #48]
     e78:	add	x19, x1, x19
     e7c:	cbnz	w2, c98 <grub_squash_read+0x138>
     e80:	b	c18 <grub_squash_read+0xb8>
     e84:	ldr	x1, [x22, #16]
     e88:	str	x1, [sp, #112]
     e8c:	cbz	x0, f90 <grub_squash_read+0x430>
     e90:	stp	x25, x26, [sp, #64]
     e94:	ldr	x0, [sp, #112]
     e98:	cbnz	x0, d0c <grub_squash_read+0x1ac>
     e9c:	b	d04 <grub_squash_read+0x1a4>
     ea0:	mov	x2, x19
     ea4:	mov	x0, x26
     ea8:	mov	w1, #0x0                   	// #0
     eac:	bl	0 <grub_memset>
     eb0:	b	da8 <grub_squash_read+0x248>
     eb4:	ldp	x25, x26, [sp, #64]
     eb8:	ldr	x0, [sp, #128]
     ebc:	b	e50 <grub_squash_read+0x2f0>
     ec0:	ldr	w1, [x22, #16]
     ec4:	str	x1, [sp, #112]
     ec8:	cbnz	x0, e90 <grub_squash_read+0x330>
     ecc:	ldr	w0, [x22, #28]
     ed0:	mov	x21, #0x20                  	// #32
     ed4:	ldr	x3, [x27, #208]
     ed8:	ldr	w19, [x27, #200]
     edc:	sub	x3, x3, #0x1
     ee0:	add	x3, x3, x0
     ee4:	lsr	x19, x3, x19
     ee8:	lsl	x24, x19, #2
     eec:	mov	x0, x24
     ef0:	bl	0 <grub_malloc>
     ef4:	str	x0, [x22, #72]
     ef8:	lsl	x0, x19, #3
     efc:	bl	0 <grub_malloc>
     f00:	str	x0, [x22, #80]
     f04:	ldr	x1, [x22, #72]
     f08:	cmp	x0, #0x0
     f0c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
     f10:	mov	x0, x1
     f14:	b.eq	1024 <grub_squash_read+0x4c4>  // b.none
     f18:	ldr	x5, [x27, #72]
     f1c:	mov	x2, x24
     f20:	ldr	x3, [x22, #56]
     f24:	mov	x0, x27
     f28:	ldrh	w4, [x22, #64]
     f2c:	add	x3, x5, x3
     f30:	add	x4, x4, x21
     f34:	bl	0 <read_chunk>
     f38:	cbnz	w0, 1020 <grub_squash_read+0x4c0>
     f3c:	ldr	x4, [x22, #80]
     f40:	stp	x25, x26, [sp, #64]
     f44:	cmp	x19, #0x1
     f48:	str	xzr, [x4]
     f4c:	b.ls	e94 <grub_squash_read+0x334>  // b.plast
     f50:	sub	x3, x19, #0x1
     f54:	add	x5, x4, #0x8
     f58:	mov	x1, #0x0                   	// #0
     f5c:	mov	x2, #0x0                   	// #0
     f60:	ldr	x7, [x22, #72]
     f64:	b	f6c <grub_squash_read+0x40c>
     f68:	ldr	x2, [x4, x1, lsl #3]
     f6c:	ldr	w0, [x7, x1, lsl #2]
     f70:	and	x0, x0, #0xffffffff
     f74:	and	x0, x0, #0xfffffffffeffffff
     f78:	add	x0, x0, x2
     f7c:	str	x0, [x5, x1, lsl #3]
     f80:	add	x1, x1, #0x1
     f84:	cmp	x3, x1
     f88:	b.ne	f68 <grub_squash_read+0x408>  // b.any
     f8c:	b	e94 <grub_squash_read+0x334>
     f90:	mov	x21, #0x38                  	// #56
     f94:	ldr	x0, [x22, #24]
     f98:	b	ed4 <grub_squash_read+0x374>
     f9c:	bl	0 <grub_free>
     fa0:	ldp	x25, x26, [sp, #64]
     fa4:	b	e40 <grub_squash_read+0x2e0>
     fa8:	bl	0 <grub_free>
     fac:	adrp	x0, 0 <read_chunk>
     fb0:	ldr	x0, [x0]
     fb4:	ldr	w0, [x0]
     fb8:	cbnz	w0, e3c <grub_squash_read+0x2dc>
     fbc:	adrp	x1, 0 <read_chunk>
     fc0:	mov	w0, #0x9                   	// #9
     fc4:	ldr	x1, [x1]
     fc8:	bl	0 <grub_error>
     fcc:	ldp	x25, x26, [sp, #64]
     fd0:	b	e40 <grub_squash_read+0x2e0>
     fd4:	mov	x21, #0x0                   	// #0
     fd8:	mov	x0, #0x0                   	// #0
     fdc:	str	xzr, [sp, #112]
     fe0:	b	ed4 <grub_squash_read+0x374>
     fe4:	bl	0 <grub_free>
     fe8:	adrp	x0, 0 <read_chunk>
     fec:	ldr	x0, [x0]
     ff0:	ldr	w0, [x0]
     ff4:	cbnz	w0, cb8 <grub_squash_read+0x158>
     ff8:	adrp	x1, 0 <read_chunk>
     ffc:	mov	w0, #0x9                   	// #9
    1000:	ldr	x1, [x1]
    1004:	bl	0 <grub_error>
    1008:	mov	x0, #0xffffffffffffffff    	// #-1
    100c:	b	c78 <grub_squash_read+0x118>
    1010:	mov	x0, x20
    1014:	bl	0 <grub_free>
    1018:	mov	x0, #0xffffffffffffffff    	// #-1
    101c:	b	c78 <grub_squash_read+0x118>
    1020:	ldr	x0, [x22, #72]
    1024:	bl	0 <grub_free>
    1028:	ldr	x0, [x22, #80]
    102c:	bl	0 <grub_free>
    1030:	stp	xzr, xzr, [x22, #72]
    1034:	b	e40 <grub_squash_read+0x2e0>
	...

0000000000001048 <make_root_node>:
    1048:	stp	x29, x30, [sp, #-32]!
    104c:	mov	x2, #0x58                  	// #88
    1050:	mov	x29, sp
    1054:	stp	x19, x20, [sp, #16]
    1058:	mov	x20, x0
    105c:	mov	x19, x1
    1060:	mov	x0, x1
    1064:	mov	w1, #0x0                   	// #0
    1068:	bl	0 <grub_memset>
    106c:	ldrh	w0, [x20, #40]
    1070:	mov	x4, #0x1                   	// #1
    1074:	ldur	w2, [x20, #42]
    1078:	add	x1, x19, #0x8
    107c:	ldr	x3, [x20, #72]
    1080:	str	x20, [x19]
    1084:	stp	x4, x2, [x19, #64]
    1088:	and	x4, x0, #0xffff
    108c:	add	x3, x2, x3
    1090:	strh	w0, [x19, #80]
    1094:	mov	x0, x20
    1098:	ldp	x19, x20, [sp, #16]
    109c:	mov	x2, #0x38                  	// #56
    10a0:	ldp	x29, x30, [sp], #32
    10a4:	b	0 <read_chunk>

00000000000010a8 <grub_squash_dir_iter>:
    10a8:	stp	x29, x30, [sp, #-64]!
    10ac:	mov	x29, sp
    10b0:	stp	x19, x20, [sp, #16]
    10b4:	mov	w19, w1
    10b8:	mov	x20, x3
    10bc:	and	w19, w19, #0xff
    10c0:	mov	w1, #0x0                   	// #0
    10c4:	stp	x21, x22, [sp, #32]
    10c8:	mov	x21, x2
    10cc:	mov	x22, x0
    10d0:	mov	x2, #0x10                  	// #16
    10d4:	add	x0, sp, #0x30
    10d8:	bl	0 <grub_memset>
    10dc:	cmp	w19, #0x2
    10e0:	ldrb	w0, [sp, #48]
    10e4:	cset	w1, eq  // eq = none
    10e8:	ldr	w2, [x21, #16]
    10ec:	and	w0, w0, #0xfffffffc
    10f0:	orr	w1, w1, #0x2
    10f4:	orr	w1, w1, w0
    10f8:	mov	x0, x21
    10fc:	strb	w1, [sp, #48]
    1100:	str	w2, [sp, #52]
    1104:	bl	0 <grub_free>
    1108:	ldp	x3, x2, [x20]
    110c:	add	x1, sp, #0x30
    1110:	mov	x0, x22
    1114:	blr	x3
    1118:	ldp	x19, x20, [sp, #16]
    111c:	ldp	x21, x22, [sp, #32]
    1120:	ldp	x29, x30, [sp], #64
    1124:	ret

0000000000001128 <grub_squash_open>:
    1128:	stp	x29, x30, [sp, #-144]!
    112c:	mov	x29, sp
    1130:	stp	x21, x22, [sp, #32]
    1134:	mov	x22, x0
    1138:	mov	x21, x1
    113c:	ldr	x0, [x0, #8]
    1140:	stp	x19, x20, [sp, #16]
    1144:	ldr	x0, [x0]
    1148:	str	xzr, [sp, #48]
    114c:	bl	250 <squash_mount>
    1150:	cbz	x0, 122c <grub_squash_open+0x104>
    1154:	mov	x19, x0
    1158:	add	x1, sp, #0x38
    115c:	bl	1048 <make_root_node>
    1160:	mov	w20, w0
    1164:	cbz	w0, 117c <grub_squash_open+0x54>
    1168:	mov	w0, w20
    116c:	ldp	x19, x20, [sp, #16]
    1170:	ldp	x21, x22, [sp, #32]
    1174:	ldp	x29, x30, [sp], #144
    1178:	ret
    117c:	adrp	x3, 0 <read_chunk>
    1180:	adrp	x2, 0 <read_chunk>
    1184:	mov	x0, x21
    1188:	add	x1, sp, #0x38
    118c:	ldr	x4, [x3]
    1190:	mov	w5, #0x1                   	// #1
    1194:	ldr	x3, [x2]
    1198:	add	x2, sp, #0x30
    119c:	bl	0 <grub_fshelp_find_file>
    11a0:	adrp	x0, 0 <read_chunk>
    11a4:	ldr	x21, [x0]
    11a8:	ldr	w20, [x21]
    11ac:	cbnz	w20, 127c <grub_squash_open+0x154>
    11b0:	ldr	x0, [sp, #48]
    11b4:	ldr	x1, [x0, #64]
    11b8:	ldrh	w21, [x0, #8]
    11bc:	ldp	x4, x5, [x0, #8]
    11c0:	add	x1, x0, x1, lsl #4
    11c4:	cmp	w21, #0x2
    11c8:	ldrh	w2, [x1, #64]
    11cc:	ldr	x1, [x1, #56]
    11d0:	str	x19, [x22, #80]
    11d4:	stp	x4, x5, [x19, #104]
    11d8:	ldp	x4, x5, [x0, #24]
    11dc:	stp	x4, x5, [x19, #120]
    11e0:	ldp	x4, x5, [x0, #40]
    11e4:	stp	x4, x5, [x19, #136]
    11e8:	ldr	x4, [x0, #56]
    11ec:	stp	x4, x1, [x19, #152]
    11f0:	strh	w2, [x19, #168]
    11f4:	stp	xzr, xzr, [x19, #176]
    11f8:	b.eq	126c <grub_squash_open+0x144>  // b.none
    11fc:	cmp	w21, #0x9
    1200:	b.eq	124c <grub_squash_open+0x124>  // b.none
    1204:	bl	0 <grub_free>
    1208:	mov	x0, x19
    120c:	bl	aa0 <squash_unmount>
    1210:	adrp	x1, 0 <read_chunk>
    1214:	mov	w2, w21
    1218:	mov	w0, #0x9                   	// #9
    121c:	ldr	x1, [x1]
    1220:	bl	0 <grub_error>
    1224:	mov	w20, w0
    1228:	b	1168 <grub_squash_open+0x40>
    122c:	adrp	x0, 0 <read_chunk>
    1230:	ldp	x21, x22, [sp, #32]
    1234:	ldr	x0, [x0]
    1238:	ldr	w20, [x0]
    123c:	mov	w0, w20
    1240:	ldp	x19, x20, [sp, #16]
    1244:	ldp	x29, x30, [sp], #144
    1248:	ret
    124c:	ldr	x1, [x0, #32]
    1250:	str	x1, [x22, #64]
    1254:	bl	0 <grub_free>
    1258:	mov	w0, w20
    125c:	ldp	x19, x20, [sp, #16]
    1260:	ldp	x21, x22, [sp, #32]
    1264:	ldp	x29, x30, [sp], #144
    1268:	ret
    126c:	ldr	w1, [x0, #36]
    1270:	str	x1, [x22, #64]
    1274:	bl	0 <grub_free>
    1278:	b	1258 <grub_squash_open+0x130>
    127c:	mov	x0, x19
    1280:	bl	aa0 <squash_unmount>
    1284:	ldr	w20, [x21]
    1288:	b	1168 <grub_squash_open+0x40>
    128c:	nop
	...

00000000000012b0 <grub_squash_dir>:
    12b0:	stp	x29, x30, [sp, #-144]!
    12b4:	mov	x29, sp
    12b8:	ldr	x0, [x0]
    12bc:	stp	x19, x20, [sp, #16]
    12c0:	mov	x20, x1
    12c4:	stp	xzr, x2, [sp, #32]
    12c8:	str	x3, [sp, #48]
    12cc:	bl	250 <squash_mount>
    12d0:	cbz	x0, 133c <grub_squash_dir+0x8c>
    12d4:	mov	x19, x0
    12d8:	add	x1, sp, #0x38
    12dc:	bl	1048 <make_root_node>
    12e0:	cbz	w0, 12f0 <grub_squash_dir+0x40>
    12e4:	ldp	x19, x20, [sp, #16]
    12e8:	ldp	x29, x30, [sp], #144
    12ec:	ret
    12f0:	adrp	x3, 0 <read_chunk>
    12f4:	adrp	x2, 0 <read_chunk>
    12f8:	mov	x0, x20
    12fc:	add	x1, sp, #0x38
    1300:	ldr	x4, [x3]
    1304:	mov	w5, #0x2                   	// #2
    1308:	ldr	x3, [x2]
    130c:	add	x2, sp, #0x20
    1310:	bl	0 <grub_fshelp_find_file>
    1314:	adrp	x0, 0 <read_chunk>
    1318:	ldr	x20, [x0]
    131c:	ldr	w0, [x20]
    1320:	cbz	w0, 1354 <grub_squash_dir+0xa4>
    1324:	mov	x0, x19
    1328:	bl	aa0 <squash_unmount>
    132c:	ldr	w0, [x20]
    1330:	ldp	x19, x20, [sp, #16]
    1334:	ldp	x29, x30, [sp], #144
    1338:	ret
    133c:	adrp	x0, 0 <read_chunk>
    1340:	ldp	x19, x20, [sp, #16]
    1344:	ldr	x0, [x0]
    1348:	ldr	w0, [x0]
    134c:	ldp	x29, x30, [sp], #144
    1350:	ret
    1354:	adrp	x1, 0 <read_chunk>
    1358:	add	x2, sp, #0x28
    135c:	ldr	x0, [sp, #32]
    1360:	ldr	x1, [x1]
    1364:	bl	600 <grub_squash_iterate_dir>
    1368:	b	1324 <grub_squash_dir+0x74>
    136c:	nop
	...

0000000000001390 <grub_mod_init>:
    1390:	adrp	x1, 0 <read_chunk>
    1394:	adrp	x0, 0 <read_chunk>
    1398:	ldr	x1, [x1]
    139c:	ldr	x0, [x0]
    13a0:	b	0 <grub_list_push>
    13a4:	nop
	...

00000000000013b8 <grub_mod_fini>:
    13b8:	adrp	x0, 0 <read_chunk>
    13bc:	ldr	x0, [x0]
    13c0:	b	0 <grub_list_remove>
    13c4:	nop
	...
