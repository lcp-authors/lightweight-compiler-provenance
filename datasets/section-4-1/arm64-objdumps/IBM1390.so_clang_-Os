
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM1390.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000658 <.init>:
 658:	stp	x29, x30, [sp, #-16]!
 65c:	mov	x29, sp
 660:	bl	6f0 <__assert_fail@plt+0x10>
 664:	ldp	x29, x30, [sp], #16
 668:	ret

Disassembly of section .plt:

0000000000000670 <__cxa_finalize@plt-0x20>:
 670:	stp	x16, x30, [sp, #-16]!
 674:	adrp	x16, 47000 <gconv@@Base+0x467a8>
 678:	ldr	x17, [x16, #4088]
 67c:	add	x16, x16, #0xff8
 680:	br	x17
 684:	nop
 688:	nop
 68c:	nop

0000000000000690 <__cxa_finalize@plt>:
 690:	adrp	x16, 48000 <__cxa_finalize@GLIBC_2.17>
 694:	ldr	x17, [x16]
 698:	add	x16, x16, #0x0
 69c:	br	x17

00000000000006a0 <__stack_chk_fail@plt>:
 6a0:	adrp	x16, 48000 <__cxa_finalize@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #8]
 6a8:	add	x16, x16, #0x8
 6ac:	br	x17

00000000000006b0 <__gmon_start__@plt>:
 6b0:	adrp	x16, 48000 <__cxa_finalize@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #16]
 6b8:	add	x16, x16, #0x10
 6bc:	br	x17

00000000000006c0 <strcmp@plt>:
 6c0:	adrp	x16, 48000 <__cxa_finalize@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #24]
 6c8:	add	x16, x16, #0x18
 6cc:	br	x17

00000000000006d0 <_dl_mcount_wrapper_check@plt>:
 6d0:	adrp	x16, 48000 <__cxa_finalize@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #32]
 6d8:	add	x16, x16, #0x20
 6dc:	br	x17

00000000000006e0 <__assert_fail@plt>:
 6e0:	adrp	x16, 48000 <__cxa_finalize@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #40]
 6e8:	add	x16, x16, #0x28
 6ec:	br	x17

Disassembly of section .text:

00000000000006f0 <gconv_init@@Base-0xd8>:
     6f0:	adrp	x0, 47000 <gconv@@Base+0x467a8>
     6f4:	ldr	x0, [x0, #4048]
     6f8:	cbz	x0, 700 <__assert_fail@plt+0x20>
     6fc:	b	6b0 <__gmon_start__@plt>
     700:	ret
     704:	nop
     708:	adrp	x0, 48000 <gconv@@Base+0x477a8>
     70c:	add	x0, x0, #0x38
     710:	adrp	x1, 48000 <gconv@@Base+0x477a8>
     714:	add	x1, x1, #0x38
     718:	cmp	x1, x0
     71c:	b.eq	734 <__assert_fail@plt+0x54>  // b.none
     720:	adrp	x1, 47000 <gconv@@Base+0x467a8>
     724:	ldr	x1, [x1, #4024]
     728:	cbz	x1, 734 <__assert_fail@plt+0x54>
     72c:	mov	x16, x1
     730:	br	x16
     734:	ret
     738:	adrp	x0, 48000 <gconv@@Base+0x477a8>
     73c:	add	x0, x0, #0x38
     740:	adrp	x1, 48000 <gconv@@Base+0x477a8>
     744:	add	x1, x1, #0x38
     748:	sub	x1, x1, x0
     74c:	lsr	x2, x1, #63
     750:	add	x1, x2, x1, asr #3
     754:	cmp	xzr, x1, asr #1
     758:	asr	x1, x1, #1
     75c:	b.eq	774 <__assert_fail@plt+0x94>  // b.none
     760:	adrp	x2, 47000 <gconv@@Base+0x467a8>
     764:	ldr	x2, [x2, #4064]
     768:	cbz	x2, 774 <__assert_fail@plt+0x94>
     76c:	mov	x16, x2
     770:	br	x16
     774:	ret
     778:	stp	x29, x30, [sp, #-32]!
     77c:	mov	x29, sp
     780:	str	x19, [sp, #16]
     784:	adrp	x19, 48000 <gconv@@Base+0x477a8>
     788:	ldrb	w0, [x19, #56]
     78c:	cbnz	w0, 7b4 <__assert_fail@plt+0xd4>
     790:	adrp	x0, 47000 <gconv@@Base+0x467a8>
     794:	ldr	x0, [x0, #4032]
     798:	cbz	x0, 7a8 <__assert_fail@plt+0xc8>
     79c:	adrp	x0, 48000 <gconv@@Base+0x477a8>
     7a0:	ldr	x0, [x0, #48]
     7a4:	bl	690 <__cxa_finalize@plt>
     7a8:	bl	708 <__assert_fail@plt+0x28>
     7ac:	mov	w0, #0x1                   	// #1
     7b0:	strb	w0, [x19, #56]
     7b4:	ldr	x19, [sp, #16]
     7b8:	ldp	x29, x30, [sp], #32
     7bc:	ret
     7c0:	b	738 <__assert_fail@plt+0x58>
     7c4:	nop

00000000000007c8 <gconv_init@@Base>:
     7c8:	stp	x29, x30, [sp, #-32]!
     7cc:	mov	x29, sp
     7d0:	stp	x19, x20, [sp, #16]
     7d4:	mov	x19, x0
     7d8:	adrp	x20, 1000 <gconv@@Base+0x7a8>
     7dc:	ldr	x0, [x0, #24]
     7e0:	add	x20, x20, #0xe00
     7e4:	mov	x1, x20
     7e8:	bl	6c0 <strcmp@plt>
     7ec:	cbnz	w0, 820 <gconv_init@@Base+0x58>
     7f0:	mov	x1, #0x1                   	// #1
     7f4:	mov	x0, #0x4                   	// #4
     7f8:	movk	x1, #0x2, lsl #32
     7fc:	movk	x0, #0x8, lsl #32
     800:	stp	x1, x0, [x19, #72]
     804:	str	xzr, [x19, #96]
     808:	mov	w1, #0x1                   	// #1
     80c:	mov	w0, #0x0                   	// #0
     810:	str	w1, [x19, #88]
     814:	ldp	x19, x20, [sp, #16]
     818:	ldp	x29, x30, [sp], #32
     81c:	ret
     820:	ldr	x0, [x19, #32]
     824:	mov	x1, x20
     828:	bl	6c0 <strcmp@plt>
     82c:	cbnz	w0, 850 <gconv_init@@Base+0x88>
     830:	mov	x2, #0x4                   	// #4
     834:	mov	x1, #0x1                   	// #1
     838:	mov	x0, #0xffffffffffffffff    	// #-1
     83c:	movk	x2, #0x8, lsl #32
     840:	movk	x1, #0x2, lsl #32
     844:	stp	x2, x1, [x19, #72]
     848:	str	x0, [x19, #96]
     84c:	b	808 <gconv_init@@Base+0x40>
     850:	mov	w0, #0x1                   	// #1
     854:	b	814 <gconv_init@@Base+0x4c>

0000000000000858 <gconv@@Base>:
     858:	stp	x29, x30, [sp, #-224]!
     85c:	mov	x14, x0
     860:	mov	x29, sp
     864:	stp	x21, x22, [sp, #32]
     868:	mov	x21, x1
     86c:	adrp	x1, 47000 <gconv@@Base+0x467a8>
     870:	stp	x19, x20, [sp, #16]
     874:	mov	x20, x3
     878:	add	x3, x0, #0x68
     87c:	ldr	x1, [x1, #4056]
     880:	stp	x23, x24, [sp, #48]
     884:	ldr	w0, [x21, #16]
     888:	ldr	x8, [x1]
     88c:	str	x8, [sp, #216]
     890:	mov	x8, #0x0                   	// #0
     894:	add	x1, x21, #0x30
     898:	stp	x25, x26, [sp, #64]
     89c:	mov	x8, x2
     8a0:	mov	x26, x4
     8a4:	stp	x3, x1, [sp, #144]
     8a8:	mov	x24, x5
     8ac:	mov	w25, w7
     8b0:	and	w2, w0, #0x1
     8b4:	mov	x23, #0x0                   	// #0
     8b8:	tbnz	w0, #0, 8d8 <gconv@@Base+0x80>
     8bc:	ldr	x1, [x14, #104]
     8c0:	ldr	x23, [x14, #144]
     8c4:	cbz	x1, 8d8 <gconv@@Base+0x80>
     8c8:	adrp	x1, 47000 <gconv@@Base+0x467a8>
     8cc:	ldr	x1, [x1, #4040]
     8d0:	ldr	x1, [x1]
     8d4:	eor	x23, x23, x1
     8d8:	cbnz	w6, 13b4 <gconv@@Base+0xb5c>
     8dc:	cmp	x26, #0x0
     8e0:	add	x1, sp, #0xc0
     8e4:	csel	x2, x21, x26, eq  // eq = none
     8e8:	cmp	x24, #0x0
     8ec:	ldr	x10, [x21, #32]
     8f0:	csel	x1, x1, xzr, ne  // ne = any
     8f4:	stp	x27, x28, [sp, #80]
     8f8:	ldr	x27, [x2]
     8fc:	stp	x1, xzr, [sp, #184]
     900:	ldr	w11, [x10]
     904:	ldr	x22, [x8]
     908:	ldr	x28, [x21, #8]
     90c:	cbnz	w25, db8 <gconv@@Base+0x560>
     910:	adrp	x13, 1000 <gconv@@Base+0x7a8>
     914:	add	x9, x13, #0xff8
     918:	add	x1, x9, #0x178
     91c:	str	x1, [sp, #176]
     920:	add	x1, sp, #0xc8
     924:	str	x1, [sp, #168]
     928:	ldr	x1, [x14, #96]
     92c:	str	x26, [sp, #128]
     930:	str	x24, [sp, #160]
     934:	mov	w26, w11
     938:	mov	x19, x10
     93c:	and	w18, w26, #0xfffffff8
     940:	cmp	x20, x22
     944:	cbz	x1, af4 <gconv@@Base+0x29c>
     948:	b.eq	1440 <gconv@@Base+0xbe8>  // b.none
     94c:	add	x5, x22, #0x4
     950:	cmp	x20, x5
     954:	b.cc	10cc <gconv@@Base+0x874>  // b.lo, b.ul, b.last
     958:	cmp	x28, x27
     95c:	b.ls	10e0 <gconv@@Base+0x888>  // b.plast
     960:	ldr	x3, [sp, #176]
     964:	adrp	x15, 2000 <gconv@@Base+0x17a8>
     968:	and	w7, w0, #0x2
     96c:	mov	w6, w18
     970:	add	x15, x15, #0xd88
     974:	mov	x24, x27
     978:	mov	x4, x22
     97c:	mov	w16, #0xe                   	// #14
     980:	mov	w30, #0xf                   	// #15
     984:	ldr	w1, [x4]
     988:	cmn	w1, #0x1
     98c:	b.eq	d04 <gconv@@Base+0x4ac>  // b.none
     990:	cmp	w1, #0xe6
     994:	add	x0, x9, #0xa8
     998:	mov	w2, #0x254                 	// #596
     99c:	b.hi	9a8 <gconv@@Base+0x150>  // b.pmore
     9a0:	b	b98 <gconv@@Base+0x340>
     9a4:	ldr	w2, [x0, #8]
     9a8:	add	x0, x0, #0x8
     9ac:	cmp	w1, w2
     9b0:	b.hi	9a4 <gconv@@Base+0x14c>  // b.pmore
     9b4:	cmp	x20, x5
     9b8:	ccmp	w1, w2, #0x0, hi  // hi = pmore
     9bc:	b.eq	ba8 <gconv@@Base+0x350>  // b.none
     9c0:	mov	x2, x3
     9c4:	mov	w10, #0xa3                  	// #163
     9c8:	b	9d4 <gconv@@Base+0x17c>
     9cc:	ldr	w10, [x0, #16]
     9d0:	mov	x2, x0
     9d4:	add	x0, x2, #0xc
     9d8:	cmp	w1, w10
     9dc:	b.hi	9cc <gconv@@Base+0x174>  // b.pmore
     9e0:	ldr	w2, [x0]
     9e4:	cmp	w1, w2
     9e8:	b.cc	d18 <gconv@@Base+0x4c0>  // b.lo, b.ul, b.last
     9ec:	ldr	w2, [x0, #8]
     9f0:	add	w2, w1, w2
     9f4:	add	x0, x13, #0xff8
     9f8:	cmp	w1, #0x0
     9fc:	add	x10, x0, #0xca0
     a00:	ldrb	w2, [x10, w2, uxtw]
     a04:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     a08:	b.eq	12cc <gconv@@Base+0xa74>  // b.none
     a0c:	cmp	w6, #0x40
     a10:	add	x0, x24, #0x1
     a14:	b.eq	d98 <gconv@@Base+0x540>  // b.none
     a18:	mov	x4, x5
     a1c:	strb	w2, [x24]
     a20:	mov	x24, x0
     a24:	cmp	x20, x4
     a28:	b.eq	c00 <gconv@@Base+0x3a8>  // b.none
     a2c:	add	x5, x4, #0x4
     a30:	cmp	x20, x5
     a34:	b.cc	cfc <gconv@@Base+0x4a4>  // b.lo, b.ul, b.last
     a38:	cmp	x28, x24
     a3c:	b.hi	984 <gconv@@Base+0x12c>  // b.pmore
     a40:	mov	w15, #0x5                   	// #5
     a44:	ldr	x0, [sp, #128]
     a48:	str	x4, [x8]
     a4c:	str	w6, [x19]
     a50:	cbnz	x0, b8c <gconv@@Base+0x334>
     a54:	ldp	w1, w0, [x21, #16]
     a58:	add	w0, w0, #0x1
     a5c:	str	w0, [x21, #20]
     a60:	tbnz	w1, #0, 10ac <gconv@@Base+0x854>
     a64:	stp	x14, x9, [sp, #104]
     a68:	cmp	x27, x24
     a6c:	str	w18, [sp, #140]
     a70:	b.cs	c2c <gconv@@Base+0x3d4>  // b.hs, b.nlast
     a74:	ldr	x1, [x21]
     a78:	mov	x0, x23
     a7c:	str	x8, [sp, #120]
     a80:	str	w15, [sp, #136]
     a84:	str	x1, [sp, #200]
     a88:	bl	6d0 <_dl_mcount_wrapper_check@plt>
     a8c:	ldp	x0, x1, [sp, #144]
     a90:	mov	w7, w25
     a94:	ldp	x5, x2, [sp, #160]
     a98:	mov	x3, x24
     a9c:	mov	w6, #0x0                   	// #0
     aa0:	mov	x4, #0x0                   	// #0
     aa4:	blr	x23
     aa8:	cmp	w0, #0x4
     aac:	ldr	w15, [sp, #136]
     ab0:	adrp	x13, 1000 <gconv@@Base+0x7a8>
     ab4:	ldp	x14, x9, [sp, #104]
     ab8:	ldr	x8, [sp, #120]
     abc:	b.eq	c24 <gconv@@Base+0x3cc>  // b.none
     ac0:	ldr	x6, [sp, #200]
     ac4:	ldr	w18, [sp, #140]
     ac8:	cmp	x6, x24
     acc:	b.ne	f48 <gconv@@Base+0x6f0>  // b.any
     ad0:	cbnz	w0, 1bd4 <gconv@@Base+0x137c>
     ad4:	ldr	x1, [x14, #96]
     ad8:	ldr	x22, [x8]
     adc:	ldr	w26, [x19]
     ae0:	ldr	w0, [x21, #16]
     ae4:	cmp	x20, x22
     ae8:	and	w18, w26, #0xfffffff8
     aec:	ldr	x27, [x21]
     af0:	cbnz	x1, 948 <gconv@@Base+0xf0>
     af4:	b.eq	1338 <gconv@@Base+0xae0>  // b.none
     af8:	add	x6, x27, #0x4
     afc:	cmp	x28, x6
     b00:	b.cc	1304 <gconv@@Base+0xaac>  // b.lo, b.ul, b.last
     b04:	adrp	x30, 18000 <gconv@@Base+0x177a8>
     b08:	and	w10, w0, #0x2
     b0c:	mov	w7, w18
     b10:	add	x30, x30, #0xcb8
     b14:	mov	x2, x22
     b18:	mov	x24, x27
     b1c:	add	x15, x9, #0x838
     b20:	mov	w16, #0x4040                	// #16448
     b24:	mov	w3, #0xffff134b            	// #-60597
     b28:	mov	w17, #0xffff                	// #65535
     b2c:	ldrb	w0, [x2]
     b30:	cmp	w0, #0xe
     b34:	b.eq	108c <gconv@@Base+0x834>  // b.none
     b38:	cmp	w0, #0xf
     b3c:	b.eq	10a0 <gconv@@Base+0x848>  // b.none
     b40:	cbnz	w7, c70 <gconv@@Base+0x418>
     b44:	mov	w1, w0
     b48:	cmp	w0, #0x0
     b4c:	ldr	w0, [x15, x1, lsl #2]
     b50:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     b54:	b.eq	12e8 <gconv@@Base+0xa90>  // b.none
     b58:	str	w0, [x24]
     b5c:	mov	x24, x6
     b60:	add	x2, x2, #0x1
     b64:	cmp	x20, x2
     b68:	b.eq	1344 <gconv@@Base+0xaec>  // b.none
     b6c:	add	x6, x24, #0x4
     b70:	cmp	x28, x6
     b74:	b.cs	b2c <gconv@@Base+0x2d4>  // b.hs, b.nlast
     b78:	mov	w15, #0x5                   	// #5
     b7c:	ldr	x0, [sp, #128]
     b80:	str	x2, [x8]
     b84:	str	w7, [x19]
     b88:	cbz	x0, a54 <gconv@@Base+0x1fc>
     b8c:	ldp	x27, x28, [sp, #80]
     b90:	str	x24, [x0]
     b94:	b	c3c <gconv@@Base+0x3e4>
     b98:	ccmp	x20, x5, #0x0, eq  // eq = none
     b9c:	b.ls	c08 <gconv@@Base+0x3b0>  // b.plast
     ba0:	add	x0, x9, #0xa8
     ba4:	nop
     ba8:	ldr	w10, [x4, #4]
     bac:	b	bbc <gconv@@Base+0x364>
     bb0:	ldr	w2, [x0, #8]!
     bb4:	cmp	w1, w2
     bb8:	b.ne	c08 <gconv@@Base+0x3b0>  // b.any
     bbc:	ldrh	w2, [x0, #4]
     bc0:	cmp	w10, w2
     bc4:	b.ne	bb0 <gconv@@Base+0x358>  // b.any
     bc8:	cbnz	w6, bd4 <gconv@@Base+0x37c>
     bcc:	mov	w6, #0x40                  	// #64
     bd0:	strb	w16, [x24], #1
     bd4:	add	x1, x24, #0x2
     bd8:	cmp	x28, x1
     bdc:	b.cc	a40 <gconv@@Base+0x1e8>  // b.lo, b.ul, b.last
     be0:	ldrb	w2, [x0, #6]
     be4:	add	x4, x4, #0x8
     be8:	strb	w2, [x24]
     bec:	cmp	x20, x4
     bf0:	ldrb	w0, [x0, #7]
     bf4:	strb	w0, [x24, #1]
     bf8:	mov	x24, x1
     bfc:	b.ne	a2c <gconv@@Base+0x1d4>  // b.any
     c00:	mov	w15, #0x4                   	// #4
     c04:	b	a44 <gconv@@Base+0x1ec>
     c08:	mov	w2, w1
     c0c:	cmp	w1, #0x9f
     c10:	b.ls	9f4 <gconv@@Base+0x19c>  // b.plast
     c14:	add	x2, x13, #0xff8
     c18:	mov	w10, #0xa3                  	// #163
     c1c:	add	x2, x2, #0x178
     c20:	b	9d4 <gconv@@Base+0x17c>
     c24:	cmp	w15, #0x5
     c28:	b.eq	ad4 <gconv@@Base+0x27c>  // b.none
     c2c:	cmp	w25, #0x0
     c30:	ccmp	w15, #0x7, #0x0, ne  // ne = any
     c34:	b.eq	14dc <gconv@@Base+0xc84>  // b.none
     c38:	ldp	x27, x28, [sp, #80]
     c3c:	adrp	x0, 47000 <gconv@@Base+0x467a8>
     c40:	ldr	x0, [x0, #4056]
     c44:	ldr	x1, [sp, #216]
     c48:	ldr	x0, [x0]
     c4c:	eor	x0, x1, x0
     c50:	cbnz	x0, 1d0c <gconv@@Base+0x14b4>
     c54:	mov	w0, w15
     c58:	ldp	x19, x20, [sp, #16]
     c5c:	ldp	x21, x22, [sp, #32]
     c60:	ldp	x23, x24, [sp, #48]
     c64:	ldp	x25, x26, [sp, #64]
     c68:	ldp	x29, x30, [sp], #224
     c6c:	ret
     c70:	cmp	w7, #0x40
     c74:	b.ne	1bfc <gconv@@Base+0x13a4>  // b.any
     c78:	add	x1, x2, #0x1
     c7c:	cmp	x20, x1
     c80:	b.ls	13ac <gconv@@Base+0xb54>  // b.plast
     c84:	ldrb	w1, [x2, #1]
     c88:	add	w1, w1, w0, lsl #8
     c8c:	cmp	w1, w16
     c90:	b.ls	134c <gconv@@Base+0xaf4>  // b.plast
     c94:	mov	x5, x9
     c98:	mov	w4, #0x6885                	// #26757
     c9c:	b	ca8 <gconv@@Base+0x450>
     ca0:	ldr	w4, [x0, #16]
     ca4:	mov	x5, x0
     ca8:	add	x0, x5, #0xc
     cac:	cmp	w1, w4
     cb0:	b.hi	ca0 <gconv@@Base+0x448>  // b.pmore
     cb4:	ldr	w4, [x0]
     cb8:	cmp	w4, w17
     cbc:	cset	w5, eq  // eq = none
     cc0:	cmp	w5, #0x0
     cc4:	ccmp	w1, w4, #0x0, eq  // eq = none
     cc8:	b.cc	10f8 <gconv@@Base+0x8a0>  // b.lo, b.ul, b.last
     ccc:	ldr	w0, [x0, #8]
     cd0:	add	w0, w1, w0
     cd4:	ldr	w4, [x30, x0, lsl #2]
     cd8:	cbz	w4, 10f4 <gconv@@Base+0x89c>
     cdc:	add	w0, w1, w3
     ce0:	cmp	w0, #0x18
     ce4:	ccmn	w4, #0x1, #0x0, ls  // ls = plast
     ce8:	b.eq	1118 <gconv@@Base+0x8c0>  // b.none
     cec:	add	x2, x2, #0x2
     cf0:	str	w4, [x24]
     cf4:	mov	x24, x6
     cf8:	b	b64 <gconv@@Base+0x30c>
     cfc:	mov	w15, #0x7                   	// #7
     d00:	b	a44 <gconv@@Base+0x1ec>
     d04:	ldr	x0, [sp, #184]
     d08:	cbz	x0, d10 <gconv@@Base+0x4b8>
     d0c:	cbnz	w7, f30 <gconv@@Base+0x6d8>
     d10:	mov	w15, #0x6                   	// #6
     d14:	b	a44 <gconv@@Base+0x1ec>
     d18:	add	x0, x13, #0xff8
     d1c:	cmp	w1, #0x4f9
     d20:	add	x0, x0, #0x1f0
     d24:	mov	w10, #0x1f73                	// #8051
     d28:	b.hi	d38 <gconv@@Base+0x4e0>  // b.pmore
     d2c:	b	1438 <gconv@@Base+0xbe0>
     d30:	ldr	w10, [x2, #16]
     d34:	mov	x0, x2
     d38:	add	x2, x0, #0xc
     d3c:	cmp	w1, w10
     d40:	b.hi	d30 <gconv@@Base+0x4d8>  // b.pmore
     d44:	ldr	w0, [x2]
     d48:	cmp	w1, w0
     d4c:	b.cc	1318 <gconv@@Base+0xac0>  // b.lo, b.ul, b.last
     d50:	ldr	w0, [x2, #8]
     d54:	add	w0, w1, w0
     d58:	lsl	x0, x0, #1
     d5c:	add	x2, x0, x15
     d60:	ldrb	w0, [x0, x15]
     d64:	cmp	w0, #0x0
     d68:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     d6c:	b.ne	1318 <gconv@@Base+0xac0>  // b.any
     d70:	cbz	w6, f24 <gconv@@Base+0x6cc>
     d74:	add	x1, x24, #0x2
     d78:	cmp	x28, x1
     d7c:	b.cc	a40 <gconv@@Base+0x1e8>  // b.lo, b.ul, b.last
     d80:	strb	w0, [x24]
     d84:	mov	x4, x5
     d88:	ldrb	w0, [x2, #1]
     d8c:	strb	w0, [x24, #1]
     d90:	mov	x24, x1
     d94:	b	a24 <gconv@@Base+0x1cc>
     d98:	strb	w30, [x24]
     d9c:	cmp	x28, x0
     da0:	b.ls	1454 <gconv@@Base+0xbfc>  // b.plast
     da4:	add	x1, x24, #0x2
     da8:	mov	w6, #0x0                   	// #0
     dac:	mov	x24, x0
     db0:	mov	x0, x1
     db4:	b	a18 <gconv@@Base+0x1c0>
     db8:	ands	w2, w11, #0x7
     dbc:	b.eq	910 <gconv@@Base+0xb8>  // b.none
     dc0:	cbnz	x26, 1bb4 <gconv@@Base+0x135c>
     dc4:	ldr	x1, [x14, #96]
     dc8:	and	w6, w11, #0xfffffff8
     dcc:	mov	w5, w2
     dd0:	cbz	x1, 1160 <gconv@@Base+0x908>
     dd4:	cmp	w5, #0x4
     dd8:	b.hi	1c1c <gconv@@Base+0x13c4>  // b.pmore
     ddc:	mov	w1, w5
     de0:	cbz	w5, 1720 <gconv@@Base+0xec8>
     de4:	add	x3, sp, #0xd0
     de8:	add	x12, x10, #0x3
     dec:	mov	x2, #0x1                   	// #1
     df0:	add	x7, x3, x2
     df4:	ldrb	w9, [x12, x2]
     df8:	cmp	x1, x2
     dfc:	add	x2, x2, #0x1
     e00:	sturb	w9, [x7, #-1]
     e04:	b.ne	df0 <gconv@@Base+0x598>  // b.any
     e08:	mov	x2, #0x4                   	// #4
     e0c:	sub	x2, x2, x1
     e10:	add	x2, x22, x2
     e14:	cmp	x20, x2
     e18:	b.cc	18c8 <gconv@@Base+0x1070>  // b.lo, b.ul, b.last
     e1c:	cmp	x27, x28
     e20:	b.cs	15ec <gconv@@Base+0xd94>  // b.hs, b.nlast
     e24:	add	x3, sp, #0xd0
     e28:	add	x1, x1, #0x1
     e2c:	ldrb	w2, [x22], #1
     e30:	add	x7, x3, x1
     e34:	cmp	x1, #0x7
     e38:	ccmp	x20, x22, #0x0, ls  // ls = plast
     e3c:	sturb	w2, [x7, #-1]
     e40:	b.hi	e28 <gconv@@Base+0x5d0>  // b.pmore
     e44:	ldr	w2, [sp, #208]
     e48:	cmn	w2, #0x1
     e4c:	b.eq	1884 <gconv@@Base+0x102c>  // b.none
     e50:	cmp	w2, #0xe6
     e54:	b.ls	1800 <gconv@@Base+0xfa8>  // b.plast
     e58:	adrp	x4, 1000 <gconv@@Base+0x7a8>
     e5c:	add	x1, x4, #0xff8
     e60:	add	x1, x1, #0xa8
     e64:	mov	w9, #0x254                 	// #596
     e68:	b	e70 <gconv@@Base+0x618>
     e6c:	ldr	w9, [x1, #8]
     e70:	add	x1, x1, #0x8
     e74:	cmp	w2, w9
     e78:	b.hi	e6c <gconv@@Base+0x614>  // b.pmore
     e7c:	add	x3, x3, #0x4
     e80:	ccmp	x3, x7, #0x2, eq  // eq = none
     e84:	b.cc	1818 <gconv@@Base+0xfc0>  // b.lo, b.ul, b.last
     e88:	add	x3, x4, #0xff8
     e8c:	mov	w7, #0xa3                  	// #163
     e90:	add	x3, x3, #0x178
     e94:	b	ea0 <gconv@@Base+0x648>
     e98:	ldr	w7, [x1, #16]
     e9c:	mov	x3, x1
     ea0:	add	x1, x3, #0xc
     ea4:	cmp	w2, w7
     ea8:	b.hi	e98 <gconv@@Base+0x640>  // b.pmore
     eac:	ldr	w3, [x1]
     eb0:	cmp	w2, w3
     eb4:	b.cc	192c <gconv@@Base+0x10d4>  // b.lo, b.ul, b.last
     eb8:	ldr	w3, [x1, #8]
     ebc:	add	w3, w2, w3
     ec0:	add	x1, x4, #0xff8
     ec4:	cmp	w2, #0x0
     ec8:	add	x4, x1, #0xca0
     ecc:	ldrb	w3, [x4, w3, uxtw]
     ed0:	ccmp	w3, #0x0, #0x0, ne  // ne = any
     ed4:	b.eq	1b74 <gconv@@Base+0x131c>  // b.none
     ed8:	cmp	w6, #0x40
     edc:	add	x0, x27, #0x1
     ee0:	b.eq	1b54 <gconv@@Base+0x12fc>  // b.none
     ee4:	strb	w3, [x27]
     ee8:	mov	x27, x0
     eec:	ldr	w11, [x10]
     ef0:	and	w5, w11, #0x7
     ef4:	cmp	w5, #0x3
     ef8:	mov	w1, w5
     efc:	mov	x0, #0x4                   	// #4
     f00:	b.hi	1c90 <gconv@@Base+0x1438>  // b.pmore
     f04:	ldr	x22, [x8]
     f08:	sub	x1, x0, x1
     f0c:	ldr	w0, [x21, #16]
     f10:	and	w11, w11, #0xfffffff8
     f14:	add	x22, x22, x1
     f18:	str	x22, [x8]
     f1c:	str	w11, [x10]
     f20:	b	910 <gconv@@Base+0xb8>
     f24:	mov	w6, #0x40                  	// #64
     f28:	strb	w16, [x24], #1
     f2c:	b	d74 <gconv@@Base+0x51c>
     f30:	mov	x1, x0
     f34:	mov	x4, x5
     f38:	ldr	x0, [x0]
     f3c:	add	x0, x0, #0x1
     f40:	str	x0, [x1]
     f44:	b	a24 <gconv@@Base+0x1cc>
     f48:	str	x22, [x8]
     f4c:	cmp	x20, x22
     f50:	ldr	x1, [x14, #96]
     f54:	str	w26, [x19]
     f58:	cbz	x1, 1218 <gconv@@Base+0x9c0>
     f5c:	b.eq	1a64 <gconv@@Base+0x120c>  // b.none
     f60:	add	x11, x22, #0x4
     f64:	cmp	x20, x11
     f68:	b.cc	1904 <gconv@@Base+0x10ac>  // b.lo, b.ul, b.last
     f6c:	cmp	x6, x27
     f70:	b.ls	189c <gconv@@Base+0x1044>  // b.plast
     f74:	ldp	x24, x12, [sp, #176]
     f78:	adrp	x16, 2000 <gconv@@Base+0x17a8>
     f7c:	ldr	w17, [x21, #16]
     f80:	mov	x7, x27
     f84:	add	x16, x16, #0xd88
     f88:	add	x15, x9, #0xa8
     f8c:	and	w17, w17, #0x2
     f90:	mov	w30, #0xe                   	// #14
     f94:	mov	w10, #0xf                   	// #15
     f98:	ldr	w2, [x22]
     f9c:	cmn	w2, #0x1
     fa0:	b.eq	16c8 <gconv@@Base+0xe70>  // b.none
     fa4:	cmp	x20, x11
     fa8:	mov	x4, x15
     fac:	cset	w5, hi  // hi = pmore
     fb0:	mov	w3, #0x254                 	// #596
     fb4:	cmp	w2, #0xe6
     fb8:	b.hi	fc8 <gconv@@Base+0x770>  // b.pmore
     fbc:	b	1680 <gconv@@Base+0xe28>
     fc0:	ldr	w3, [x1, #8]
     fc4:	mov	x4, x1
     fc8:	cmp	w2, w3
     fcc:	add	x1, x4, #0x8
     fd0:	b.hi	fc0 <gconv@@Base+0x768>  // b.pmore
     fd4:	cmp	w5, #0x0
     fd8:	mov	w5, #0xa3                  	// #163
     fdc:	ccmp	w2, w3, #0x0, ne  // ne = any
     fe0:	mov	x3, x24
     fe4:	b.ne	ff4 <gconv@@Base+0x79c>  // b.any
     fe8:	b	135c <gconv@@Base+0xb04>
     fec:	ldr	w5, [x1, #16]
     ff0:	mov	x3, x1
     ff4:	add	x1, x3, #0xc
     ff8:	cmp	w2, w5
     ffc:	b.hi	fec <gconv@@Base+0x794>  // b.pmore
    1000:	ldr	w3, [x1]
    1004:	cmp	w2, w3
    1008:	b.cc	15f8 <gconv@@Base+0xda0>  // b.lo, b.ul, b.last
    100c:	ldr	w3, [x1, #8]
    1010:	add	w3, w2, w3
    1014:	add	x1, x13, #0xff8
    1018:	cmp	w2, #0x0
    101c:	add	x1, x1, #0xca0
    1020:	ldrb	w1, [x1, w3, uxtw]
    1024:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    1028:	b.eq	15f8 <gconv@@Base+0xda0>  // b.none
    102c:	cmp	w18, #0x40
    1030:	add	x2, x7, #0x1
    1034:	b.eq	1700 <gconv@@Base+0xea8>  // b.none
    1038:	mov	x22, x11
    103c:	strb	w1, [x7]
    1040:	mov	x7, x2
    1044:	cmp	x20, x22
    1048:	b.eq	1a84 <gconv@@Base+0x122c>  // b.none
    104c:	add	x11, x22, #0x4
    1050:	cmp	x20, x11
    1054:	b.cc	16e8 <gconv@@Base+0xe90>  // b.lo, b.ul, b.last
    1058:	cmp	x6, x7
    105c:	b.hi	f98 <gconv@@Base+0x740>  // b.pmore
    1060:	str	x22, [x8]
    1064:	ldr	x1, [sp, #200]
    1068:	str	w18, [x19]
    106c:	cmp	x7, x1
    1070:	b.ne	12ac <gconv@@Base+0xa54>  // b.any
    1074:	cmp	x7, x27
    1078:	b.ne	ad0 <gconv@@Base+0x278>  // b.any
    107c:	ldr	w1, [x21, #20]
    1080:	sub	w1, w1, #0x1
    1084:	str	w1, [x21, #20]
    1088:	b	ad0 <gconv@@Base+0x278>
    108c:	cmp	w7, #0x40
    1090:	b.eq	10a4 <gconv@@Base+0x84c>  // b.none
    1094:	add	x2, x2, #0x1
    1098:	mov	w7, #0x40                  	// #64
    109c:	b	b64 <gconv@@Base+0x30c>
    10a0:	cbnz	w7, 1154 <gconv@@Base+0x8fc>
    10a4:	mov	w15, #0x6                   	// #6
    10a8:	b	b7c <gconv@@Base+0x324>
    10ac:	mov	x19, x24
    10b0:	ldr	x24, [sp, #160]
    10b4:	ldr	x1, [sp, #192]
    10b8:	ldr	x0, [x24]
    10bc:	str	x19, [x21]
    10c0:	add	x0, x0, x1
    10c4:	str	x0, [x24]
    10c8:	b	c2c <gconv@@Base+0x3d4>
    10cc:	mov	x4, x22
    10d0:	mov	w6, w18
    10d4:	mov	x24, x27
    10d8:	mov	w15, #0x7                   	// #7
    10dc:	b	a44 <gconv@@Base+0x1ec>
    10e0:	mov	x4, x22
    10e4:	mov	w6, w18
    10e8:	mov	x24, x27
    10ec:	mov	w15, #0x5                   	// #5
    10f0:	b	a44 <gconv@@Base+0x1ec>
    10f4:	cbz	w1, cec <gconv@@Base+0x494>
    10f8:	ldr	x1, [sp, #184]
    10fc:	cbz	x1, 10a4 <gconv@@Base+0x84c>
    1100:	cbz	w10, 10a4 <gconv@@Base+0x84c>
    1104:	ldr	x0, [x1]
    1108:	add	x2, x2, #0x2
    110c:	add	x0, x0, #0x1
    1110:	str	x0, [x1]
    1114:	b	b64 <gconv@@Base+0x30c>
    1118:	add	x4, x24, #0x8
    111c:	cmp	x28, x4
    1120:	b.cc	b78 <gconv@@Base+0x320>  // b.lo, b.ul, b.last
    1124:	add	x1, x13, #0xff8
    1128:	ubfiz	x0, x0, #2, #32
    112c:	add	x1, x1, #0xc38
    1130:	add	x5, x1, x0
    1134:	ldrh	w1, [x1, x0]
    1138:	cbz	w1, 1bdc <gconv@@Base+0x1384>
    113c:	ldrh	w0, [x5, #2]
    1140:	cbz	w0, 1bdc <gconv@@Base+0x1384>
    1144:	add	x2, x2, #0x2
    1148:	stp	w1, w0, [x24]
    114c:	mov	x24, x4
    1150:	b	b64 <gconv@@Base+0x30c>
    1154:	add	x2, x2, #0x1
    1158:	mov	w7, #0x0                   	// #0
    115c:	b	b64 <gconv@@Base+0x30c>
    1160:	cmp	w2, #0x4
    1164:	b.hi	1c80 <gconv@@Base+0x1428>  // b.pmore
    1168:	add	x7, x27, #0x4
    116c:	cbz	w2, 14a8 <gconv@@Base+0xc50>
    1170:	ldrb	w1, [x10, #4]
    1174:	tst	w11, #0x6
    1178:	strb	w1, [sp, #208]
    117c:	mov	x1, #0x1                   	// #1
    1180:	b.eq	1190 <gconv@@Base+0x938>  // b.none
    1184:	ldrb	w3, [x10, #5]
    1188:	mov	x1, #0x2                   	// #2
    118c:	strb	w3, [sp, #209]
    1190:	cmp	x28, x7
    1194:	b.cc	15ec <gconv@@Base+0xd94>  // b.lo, b.ul, b.last
    1198:	add	x3, sp, #0xd0
    119c:	ldrb	w9, [x22]
    11a0:	add	x4, x1, #0x1
    11a4:	strb	w9, [x3, x1]
    11a8:	ldrb	w1, [sp, #208]
    11ac:	cmp	w1, #0xe
    11b0:	b.eq	1af4 <gconv@@Base+0x129c>  // b.none
    11b4:	cmp	w1, #0xf
    11b8:	b.eq	1ae4 <gconv@@Base+0x128c>  // b.none
    11bc:	cbnz	w6, 1750 <gconv@@Base+0xef8>
    11c0:	adrp	x4, 1000 <gconv@@Base+0x7a8>
    11c4:	add	x2, x4, #0xff8
    11c8:	add	x2, x2, #0x838
    11cc:	mov	w3, w1
    11d0:	ldr	w2, [x2, x3, lsl #2]
    11d4:	cmp	w2, #0x0
    11d8:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    11dc:	b.ne	1cc0 <gconv@@Base+0x1468>  // b.any
    11e0:	str	w2, [x27]
    11e4:	mov	x27, x7
    11e8:	mov	x0, #0x1                   	// #1
    11ec:	ldr	w11, [x10]
    11f0:	and	w5, w11, #0x7
    11f4:	cmp	x5, x0
    11f8:	b.ge	1cb0 <gconv@@Base+0x1458>  // b.tcont
    11fc:	sub	x0, x0, x5
    1200:	and	w11, w11, #0xfffffff8
    1204:	add	x22, x22, x0
    1208:	ldr	w0, [x21, #16]
    120c:	str	x22, [x8]
    1210:	str	w11, [x10]
    1214:	b	910 <gconv@@Base+0xb8>
    1218:	ldr	w11, [x21, #16]
    121c:	b.eq	1a64 <gconv@@Base+0x120c>  // b.none
    1220:	add	x5, x27, #0x4
    1224:	mov	x7, x27
    1228:	cmp	x6, x5
    122c:	b.cc	1918 <gconv@@Base+0x10c0>  // b.lo, b.ul, b.last
    1230:	ldr	x12, [sp, #184]
    1234:	adrp	x15, 18000 <gconv@@Base+0x177a8>
    1238:	and	w11, w11, #0x2
    123c:	add	x15, x15, #0xcb8
    1240:	add	x10, x9, #0x838
    1244:	mov	w16, #0x4040                	// #16448
    1248:	mov	w17, #0xffff134b            	// #-60597
    124c:	mov	w30, #0xffff                	// #65535
    1250:	ldrb	w1, [x22]
    1254:	cmp	w1, #0xe
    1258:	b.eq	172c <gconv@@Base+0xed4>  // b.none
    125c:	cmp	w1, #0xf
    1260:	b.eq	1740 <gconv@@Base+0xee8>  // b.none
    1264:	cbnz	w18, 1560 <gconv@@Base+0xd08>
    1268:	mov	w2, w1
    126c:	cmp	w1, #0x0
    1270:	ldr	w1, [x10, x2, lsl #2]
    1274:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    1278:	b.eq	1abc <gconv@@Base+0x1264>  // b.none
    127c:	str	w1, [x7]
    1280:	mov	x7, x5
    1284:	add	x22, x22, #0x1
    1288:	cmp	x20, x22
    128c:	b.eq	1694 <gconv@@Base+0xe3c>  // b.none
    1290:	add	x5, x7, #0x4
    1294:	cmp	x6, x5
    1298:	b.cs	1250 <gconv@@Base+0x9f8>  // b.hs, b.nlast
    129c:	str	x22, [x8]
    12a0:	cmp	x6, x7
    12a4:	str	w18, [x19]
    12a8:	b.eq	1074 <gconv@@Base+0x81c>  // b.none
    12ac:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    12b0:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    12b4:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    12b8:	add	x3, x3, #0xff0
    12bc:	add	x1, x1, #0xe10
    12c0:	add	x0, x0, #0xf60
    12c4:	mov	w2, #0x2ea                 	// #746
    12c8:	bl	6e0 <__assert_fail@plt>
    12cc:	add	x0, x0, #0x1f0
    12d0:	cmp	w1, #0x4f9
    12d4:	mov	w10, #0x1f73                	// #8051
    12d8:	b.hi	d38 <gconv@@Base+0x4e0>  // b.pmore
    12dc:	mov	x2, x0
    12e0:	mov	w0, #0xa0                  	// #160
    12e4:	b	d48 <gconv@@Base+0x4f0>
    12e8:	ldr	x1, [sp, #184]
    12ec:	cbz	x1, 10a4 <gconv@@Base+0x84c>
    12f0:	cbz	w10, 10a4 <gconv@@Base+0x84c>
    12f4:	ldr	x0, [x1]
    12f8:	add	x0, x0, #0x1
    12fc:	str	x0, [x1]
    1300:	b	b60 <gconv@@Base+0x308>
    1304:	mov	x2, x22
    1308:	mov	x24, x27
    130c:	mov	w7, w18
    1310:	mov	w15, #0x5                   	// #5
    1314:	b	b7c <gconv@@Base+0x324>
    1318:	ldr	x1, [sp, #184]
    131c:	cbz	x1, d10 <gconv@@Base+0x4b8>
    1320:	cbz	w7, d10 <gconv@@Base+0x4b8>
    1324:	ldr	x0, [x1]
    1328:	mov	x4, x5
    132c:	add	x0, x0, #0x1
    1330:	str	x0, [x1]
    1334:	b	a24 <gconv@@Base+0x1cc>
    1338:	mov	x2, x20
    133c:	mov	x24, x27
    1340:	mov	w7, w18
    1344:	mov	w15, #0x4                   	// #4
    1348:	b	b7c <gconv@@Base+0x324>
    134c:	mov	x0, x9
    1350:	mov	w5, #0x0                   	// #0
    1354:	mov	w4, #0x4040                	// #16448
    1358:	b	cc0 <gconv@@Base+0x468>
    135c:	ldrh	w3, [x4, #12]
    1360:	ldr	w4, [x22, #4]
    1364:	b	1378 <gconv@@Base+0xb20>
    1368:	ldr	w3, [x1, #8]!
    136c:	cmp	w2, w3
    1370:	b.ne	141c <gconv@@Base+0xbc4>  // b.any
    1374:	ldrh	w3, [x1, #4]
    1378:	cmp	w4, w3
    137c:	b.ne	1368 <gconv@@Base+0xb10>  // b.any
    1380:	cbz	w18, 149c <gconv@@Base+0xc44>
    1384:	add	x2, x7, #0x2
    1388:	cmp	x6, x2
    138c:	b.cc	1060 <gconv@@Base+0x808>  // b.lo, b.ul, b.last
    1390:	ldrb	w3, [x1, #6]
    1394:	add	x22, x22, #0x8
    1398:	strb	w3, [x7]
    139c:	ldrb	w1, [x1, #7]
    13a0:	strb	w1, [x7, #1]
    13a4:	mov	x7, x2
    13a8:	b	1044 <gconv@@Base+0x7ec>
    13ac:	mov	w15, #0x7                   	// #7
    13b0:	b	b7c <gconv@@Base+0x324>
    13b4:	cbnz	x26, 1ce8 <gconv@@Base+0x1490>
    13b8:	cmp	w6, #0x1
    13bc:	ldr	x22, [x21, #32]
    13c0:	b.ne	1530 <gconv@@Base+0xcd8>  // b.any
    13c4:	ldr	w19, [x22]
    13c8:	ldr	x1, [x21]
    13cc:	tst	w19, #0xfffffff8
    13d0:	b.eq	1468 <gconv@@Base+0xc10>  // b.none
    13d4:	ldr	x0, [x14, #96]
    13d8:	cbz	x0, 1460 <gconv@@Base+0xc08>
    13dc:	ldr	x0, [x21, #8]
    13e0:	cmp	x1, x0
    13e4:	b.cs	1d14 <gconv@@Base+0x14bc>  // b.hs, b.nlast
    13e8:	mov	x20, x1
    13ec:	mov	w0, #0xf                   	// #15
    13f0:	strb	w0, [x20], #1
    13f4:	ldr	x2, [x21, #32]
    13f8:	ldr	w3, [x21, #16]
    13fc:	ldr	w0, [x2]
    1400:	and	w0, w0, #0x7
    1404:	str	w0, [x2]
    1408:	tbz	w3, #0, 1b08 <gconv@@Base+0x12b0>
    140c:	mov	x1, x20
    1410:	mov	w15, #0x0                   	// #0
    1414:	str	x1, [x21]
    1418:	b	c3c <gconv@@Base+0x3e4>
    141c:	mov	w3, w2
    1420:	cmp	w2, #0x9f
    1424:	b.ls	1014 <gconv@@Base+0x7bc>  // b.plast
    1428:	add	x3, x13, #0xff8
    142c:	mov	w5, #0xa3                  	// #163
    1430:	add	x3, x3, #0x178
    1434:	b	ff4 <gconv@@Base+0x79c>
    1438:	mov	x2, x0
    143c:	b	d50 <gconv@@Base+0x4f8>
    1440:	mov	x4, x20
    1444:	mov	w6, w18
    1448:	mov	x24, x27
    144c:	mov	w15, #0x4                   	// #4
    1450:	b	a44 <gconv@@Base+0x1ec>
    1454:	mov	x24, x0
    1458:	mov	w6, #0x0                   	// #0
    145c:	b	a40 <gconv@@Base+0x1e8>
    1460:	and	w19, w19, #0x7
    1464:	str	w19, [x22]
    1468:	cbnz	w2, 1410 <gconv@@Base+0xbb8>
    146c:	mov	x0, x23
    1470:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    1474:	ldp	x0, x1, [sp, #144]
    1478:	mov	w7, w25
    147c:	mov	x5, x24
    1480:	mov	w6, #0x1                   	// #1
    1484:	mov	x4, #0x0                   	// #0
    1488:	mov	x3, #0x0                   	// #0
    148c:	mov	x2, #0x0                   	// #0
    1490:	blr	x23
    1494:	mov	w15, w0
    1498:	b	c3c <gconv@@Base+0x3e4>
    149c:	mov	w18, #0x40                  	// #64
    14a0:	strb	w30, [x7], #1
    14a4:	b	1384 <gconv@@Base+0xb2c>
    14a8:	cmp	x28, x7
    14ac:	b.cc	15ec <gconv@@Base+0xd94>  // b.lo, b.ul, b.last
    14b0:	mov	x9, x22
    14b4:	add	x3, sp, #0xd0
    14b8:	mov	x1, #0x0                   	// #0
    14bc:	ldrb	w12, [x9], #1
    14c0:	add	x4, x1, #0x1
    14c4:	strb	w12, [x3, x1]
    14c8:	cmp	x4, #0x1
    14cc:	ccmp	x20, x9, #0x0, ls  // ls = plast
    14d0:	mov	x1, #0x1                   	// #1
    14d4:	b.hi	14bc <gconv@@Base+0xc64>  // b.pmore
    14d8:	b	11a8 <gconv@@Base+0x950>
    14dc:	ldr	x0, [x8]
    14e0:	sub	x1, x20, x0
    14e4:	cmp	x1, #0x3
    14e8:	b.gt	1c60 <gconv@@Base+0x1408>
    14ec:	ldr	x2, [x21, #32]
    14f0:	cmp	x0, x20
    14f4:	add	x0, x0, #0x1
    14f8:	add	x3, x2, #0x4
    14fc:	b.cs	1ce0 <gconv@@Base+0x1488>  // b.hs, b.nlast
    1500:	str	x0, [x8]
    1504:	cmp	x0, x20
    1508:	add	x0, x0, #0x1
    150c:	ldurb	w4, [x0, #-2]
    1510:	strb	w4, [x3], #1
    1514:	b.ne	1500 <gconv@@Base+0xca8>  // b.any
    1518:	ldr	w0, [x2]
    151c:	ldp	x27, x28, [sp, #80]
    1520:	and	w0, w0, #0xfffffff8
    1524:	orr	w0, w0, w1
    1528:	str	w0, [x2]
    152c:	b	c3c <gconv@@Base+0x3e4>
    1530:	str	xzr, [x22]
    1534:	mov	w15, #0x0                   	// #0
    1538:	ldr	w0, [x21, #16]
    153c:	tbnz	w0, #0, c3c <gconv@@Base+0x3e4>
    1540:	mov	x0, x23
    1544:	str	w6, [sp, #104]
    1548:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    154c:	ldr	w6, [sp, #104]
    1550:	mov	w7, w25
    1554:	mov	x5, x24
    1558:	ldp	x0, x1, [sp, #144]
    155c:	b	1484 <gconv@@Base+0xc2c>
    1560:	cmp	w18, #0x40
    1564:	b.ne	1bfc <gconv@@Base+0x13a4>  // b.any
    1568:	add	x2, x22, #0x1
    156c:	cmp	x20, x2
    1570:	b.ls	1694 <gconv@@Base+0xe3c>  // b.plast
    1574:	ldrb	w2, [x22, #1]
    1578:	add	w1, w2, w1, lsl #8
    157c:	cmp	w1, w16
    1580:	b.ls	1ad4 <gconv@@Base+0x127c>  // b.plast
    1584:	mov	x4, x9
    1588:	mov	w3, #0x6885                	// #26757
    158c:	b	1598 <gconv@@Base+0xd40>
    1590:	ldr	w3, [x2, #16]
    1594:	mov	x4, x2
    1598:	add	x2, x4, #0xc
    159c:	cmp	w1, w3
    15a0:	b.hi	1590 <gconv@@Base+0xd38>  // b.pmore
    15a4:	ldr	w3, [x2]
    15a8:	cmp	w3, w30
    15ac:	cset	w4, eq  // eq = none
    15b0:	cmp	w4, #0x0
    15b4:	ccmp	w1, w3, #0x0, eq  // eq = none
    15b8:	b.cc	1aa0 <gconv@@Base+0x1248>  // b.lo, b.ul, b.last
    15bc:	ldr	w2, [x2, #8]
    15c0:	add	w2, w1, w2
    15c4:	ldr	w2, [x15, x2, lsl #2]
    15c8:	cbz	w2, 1a9c <gconv@@Base+0x1244>
    15cc:	add	w1, w1, w17
    15d0:	cmp	w1, #0x18
    15d4:	ccmn	w2, #0x1, #0x0, ls  // ls = plast
    15d8:	b.eq	1a28 <gconv@@Base+0x11d0>  // b.none
    15dc:	add	x22, x22, #0x2
    15e0:	str	w2, [x7]
    15e4:	mov	x7, x5
    15e8:	b	1288 <gconv@@Base+0xa30>
    15ec:	mov	w15, #0x5                   	// #5
    15f0:	ldp	x27, x28, [sp, #80]
    15f4:	b	c3c <gconv@@Base+0x3e4>
    15f8:	add	x3, x13, #0xff8
    15fc:	cmp	w2, #0x4f9
    1600:	add	x3, x3, #0x1f0
    1604:	mov	w4, #0x1f73                	// #8051
    1608:	b.hi	1618 <gconv@@Base+0xdc0>  // b.pmore
    160c:	b	1a78 <gconv@@Base+0x1220>
    1610:	ldr	w4, [x1, #16]
    1614:	mov	x3, x1
    1618:	add	x1, x3, #0xc
    161c:	cmp	w2, w4
    1620:	b.hi	1610 <gconv@@Base+0xdb8>  // b.pmore
    1624:	ldr	w3, [x1]
    1628:	cmp	w2, w3
    162c:	b.cc	18ac <gconv@@Base+0x1054>  // b.lo, b.ul, b.last
    1630:	ldr	w1, [x1, #8]
    1634:	cmp	w2, #0x0
    1638:	add	w1, w2, w1
    163c:	lsl	x1, x1, #1
    1640:	add	x3, x1, x16
    1644:	ldrb	w2, [x1, x16]
    1648:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    164c:	b.eq	18ac <gconv@@Base+0x1054>  // b.none
    1650:	mov	x1, x7
    1654:	cbnz	w18, 1660 <gconv@@Base+0xe08>
    1658:	mov	w18, #0x40                  	// #64
    165c:	strb	w30, [x1], #1
    1660:	add	x7, x1, #0x2
    1664:	cmp	x6, x7
    1668:	b.cc	1b98 <gconv@@Base+0x1340>  // b.lo, b.ul, b.last
    166c:	strb	w2, [x1]
    1670:	mov	x22, x11
    1674:	ldrb	w2, [x3, #1]
    1678:	strb	w2, [x1, #1]
    167c:	b	1044 <gconv@@Base+0x7ec>
    1680:	ccmp	w5, #0x0, #0x4, eq  // eq = none
    1684:	b.eq	141c <gconv@@Base+0xbc4>  // b.none
    1688:	add	x1, x9, #0xa8
    168c:	mov	w3, #0x300                 	// #768
    1690:	b	1360 <gconv@@Base+0xb08>
    1694:	mov	x10, x19
    1698:	str	x22, [x8]
    169c:	cmp	x6, x7
    16a0:	str	w18, [x10]
    16a4:	b.ne	12ac <gconv@@Base+0xa54>  // b.any
    16a8:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    16ac:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    16b0:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    16b4:	add	x3, x3, #0xff0
    16b8:	add	x1, x1, #0xe10
    16bc:	add	x0, x0, #0xf78
    16c0:	mov	w2, #0x2eb                 	// #747
    16c4:	bl	6e0 <__assert_fail@plt>
    16c8:	cbz	x12, 16d0 <gconv@@Base+0xe78>
    16cc:	cbnz	w17, 18b4 <gconv@@Base+0x105c>
    16d0:	str	x22, [x8]
    16d4:	ldr	x0, [sp, #200]
    16d8:	str	w18, [x19]
    16dc:	cmp	x0, x7
    16e0:	b.eq	16a8 <gconv@@Base+0xe50>  // b.none
    16e4:	b	12ac <gconv@@Base+0xa54>
    16e8:	str	x22, [x8]
    16ec:	ldr	x0, [sp, #200]
    16f0:	str	w18, [x19]
    16f4:	cmp	x7, x0
    16f8:	b.eq	16a8 <gconv@@Base+0xe50>  // b.none
    16fc:	b	12ac <gconv@@Base+0xa54>
    1700:	strb	w10, [x7]
    1704:	cmp	x6, x2
    1708:	b.ls	1c3c <gconv@@Base+0x13e4>  // b.plast
    170c:	add	x3, x7, #0x2
    1710:	mov	w18, #0x0                   	// #0
    1714:	mov	x7, x2
    1718:	mov	x2, x3
    171c:	b	1038 <gconv@@Base+0x7e0>
    1720:	mov	x2, #0x4                   	// #4
    1724:	mov	x1, #0x0                   	// #0
    1728:	b	e10 <gconv@@Base+0x5b8>
    172c:	cmp	w18, #0x40
    1730:	b.eq	1694 <gconv@@Base+0xe3c>  // b.none
    1734:	add	x22, x22, #0x1
    1738:	mov	w18, #0x40                  	// #64
    173c:	b	1288 <gconv@@Base+0xa30>
    1740:	cbz	w18, 1694 <gconv@@Base+0xe3c>
    1744:	add	x22, x22, #0x1
    1748:	mov	w18, #0x0                   	// #0
    174c:	b	1288 <gconv@@Base+0xa30>
    1750:	cmp	w6, #0x40
    1754:	b.ne	1d80 <gconv@@Base+0x1528>  // b.any
    1758:	add	x6, x3, x4
    175c:	add	x9, x3, #0x1
    1760:	cmp	x6, x9
    1764:	b.ls	1d3c <gconv@@Base+0x14e4>  // b.plast
    1768:	ldrb	w2, [sp, #209]
    176c:	mov	w3, #0x4040                	// #16448
    1770:	adrp	x4, 1000 <gconv@@Base+0x7a8>
    1774:	add	w1, w2, w1, lsl #8
    1778:	cmp	w1, w3
    177c:	b.ls	1dd0 <gconv@@Base+0x1578>  // b.plast
    1780:	add	x6, x4, #0xff8
    1784:	mov	w3, #0x6885                	// #26757
    1788:	b	1794 <gconv@@Base+0xf3c>
    178c:	ldr	w3, [x2, #16]
    1790:	mov	x6, x2
    1794:	add	x2, x6, #0xc
    1798:	cmp	w1, w3
    179c:	b.hi	178c <gconv@@Base+0xf34>  // b.pmore
    17a0:	ldr	w3, [x2]
    17a4:	mov	w6, #0xffff                	// #65535
    17a8:	cmp	w3, w6
    17ac:	cset	w6, eq  // eq = none
    17b0:	cmp	w6, #0x0
    17b4:	ccmp	w1, w3, #0x0, eq  // eq = none
    17b8:	b.cc	1a08 <gconv@@Base+0x11b0>  // b.lo, b.ul, b.last
    17bc:	ldr	w3, [x2, #8]
    17c0:	adrp	x2, 18000 <gconv@@Base+0x177a8>
    17c4:	add	x2, x2, #0xcb8
    17c8:	add	w3, w1, w3
    17cc:	ldr	w2, [x2, x3, lsl #2]
    17d0:	cbz	w2, 1a04 <gconv@@Base+0x11ac>
    17d4:	mov	w0, #0xffff134b            	// #-60597
    17d8:	add	w0, w1, w0
    17dc:	cmp	w0, #0x18
    17e0:	ccmn	w2, #0x1, #0x0, ls  // ls = plast
    17e4:	b.eq	19c0 <gconv@@Base+0x1168>  // b.none
    17e8:	str	w2, [x27]
    17ec:	mov	x0, #0x2                   	// #2
    17f0:	mov	x27, x7
    17f4:	ldr	w11, [x10]
    17f8:	and	w5, w11, #0x7
    17fc:	b	11f4 <gconv@@Base+0x99c>
    1800:	add	x3, x3, #0x4
    1804:	adrp	x4, 1000 <gconv@@Base+0x7a8>
    1808:	ccmp	x3, x7, #0x2, eq  // eq = none
    180c:	b.cs	1874 <gconv@@Base+0x101c>  // b.hs, b.nlast
    1810:	add	x1, x4, #0xff8
    1814:	add	x1, x1, #0xa8
    1818:	ldr	w7, [sp, #212]
    181c:	b	182c <gconv@@Base+0xfd4>
    1820:	ldr	w3, [x1, #8]!
    1824:	cmp	w2, w3
    1828:	b.ne	1874 <gconv@@Base+0x101c>  // b.any
    182c:	ldrh	w3, [x1, #4]
    1830:	cmp	w7, w3
    1834:	b.ne	1820 <gconv@@Base+0xfc8>  // b.any
    1838:	cbnz	w6, 1844 <gconv@@Base+0xfec>
    183c:	mov	w0, #0xe                   	// #14
    1840:	strb	w0, [x27], #1
    1844:	add	x2, x27, #0x2
    1848:	cmp	x28, x2
    184c:	b.cc	15ec <gconv@@Base+0xd94>  // b.lo, b.ul, b.last
    1850:	ldrb	w3, [x1, #6]
    1854:	mov	x0, #0x8                   	// #8
    1858:	strb	w3, [x27]
    185c:	ldrb	w1, [x1, #7]
    1860:	strb	w1, [x27, #1]
    1864:	mov	x27, x2
    1868:	ldr	w11, [x10]
    186c:	and	x1, x11, #0x7
    1870:	b	f04 <gconv@@Base+0x6ac>
    1874:	mov	w3, w2
    1878:	cmp	w2, #0x9f
    187c:	b.ls	ec0 <gconv@@Base+0x668>  // b.plast
    1880:	b	e88 <gconv@@Base+0x630>
    1884:	ldr	x1, [sp, #184]
    1888:	cbz	x1, 1890 <gconv@@Base+0x1038>
    188c:	tbnz	w0, #1, 1ddc <gconv@@Base+0x1584>
    1890:	mov	w15, #0x6                   	// #6
    1894:	ldp	x27, x28, [sp, #80]
    1898:	b	c3c <gconv@@Base+0x3e4>
    189c:	str	x22, [x8]
    18a0:	str	w18, [x19]
    18a4:	b.eq	107c <gconv@@Base+0x824>  // b.none
    18a8:	b	12ac <gconv@@Base+0xa54>
    18ac:	cbz	x12, 16d0 <gconv@@Base+0xe78>
    18b0:	cbz	w17, 16d0 <gconv@@Base+0xe78>
    18b4:	ldr	x1, [x12]
    18b8:	mov	x22, x11
    18bc:	add	x1, x1, #0x1
    18c0:	str	x1, [x12]
    18c4:	b	1044 <gconv@@Base+0x7ec>
    18c8:	str	x20, [x8]
    18cc:	cmp	x22, x20
    18d0:	b.cs	18f8 <gconv@@Base+0x10a0>  // b.hs, b.nlast
    18d4:	add	x1, x1, #0x4
    18d8:	sub	x20, x20, x22
    18dc:	add	x10, x10, x1
    18e0:	mov	x0, #0x0                   	// #0
    18e4:	ldrb	w1, [x22, x0]
    18e8:	strb	w1, [x10, x0]
    18ec:	add	x0, x0, #0x1
    18f0:	cmp	x20, x0
    18f4:	b.ne	18e4 <gconv@@Base+0x108c>  // b.any
    18f8:	mov	w15, #0x7                   	// #7
    18fc:	ldp	x27, x28, [sp, #80]
    1900:	b	c3c <gconv@@Base+0x3e4>
    1904:	str	x22, [x8]
    1908:	cmp	x6, x27
    190c:	str	w18, [x19]
    1910:	b.eq	16a8 <gconv@@Base+0xe50>  // b.none
    1914:	b	12ac <gconv@@Base+0xa54>
    1918:	str	x22, [x8]
    191c:	cmp	x6, x27
    1920:	str	w18, [x19]
    1924:	b.eq	107c <gconv@@Base+0x824>  // b.none
    1928:	b	12ac <gconv@@Base+0xa54>
    192c:	add	x1, x4, #0xff8
    1930:	cmp	w2, #0x4f9
    1934:	add	x1, x1, #0x1f0
    1938:	mov	w4, #0x1f73                	// #8051
    193c:	b.hi	194c <gconv@@Base+0x10f4>  // b.pmore
    1940:	b	1b90 <gconv@@Base+0x1338>
    1944:	ldr	w4, [x3, #16]
    1948:	mov	x1, x3
    194c:	add	x3, x1, #0xc
    1950:	cmp	w2, w4
    1954:	b.hi	1944 <gconv@@Base+0x10ec>  // b.pmore
    1958:	ldr	w1, [x3]
    195c:	cmp	w2, w1
    1960:	b.cc	1884 <gconv@@Base+0x102c>  // b.lo, b.ul, b.last
    1964:	ldr	w1, [x3, #8]
    1968:	adrp	x3, 2000 <gconv@@Base+0x17a8>
    196c:	add	x3, x3, #0xd88
    1970:	add	w1, w2, w1
    1974:	lsl	x1, x1, #1
    1978:	add	x4, x1, x3
    197c:	ldrb	w1, [x1, x3]
    1980:	cmp	w1, #0x0
    1984:	ccmp	w2, #0x0, #0x4, eq  // eq = none
    1988:	b.ne	1884 <gconv@@Base+0x102c>  // b.any
    198c:	cbnz	w6, 1998 <gconv@@Base+0x1140>
    1990:	mov	w0, #0xe                   	// #14
    1994:	strb	w0, [x27], #1
    1998:	add	x0, x27, #0x2
    199c:	cmp	x28, x0
    19a0:	b.cc	15ec <gconv@@Base+0xd94>  // b.lo, b.ul, b.last
    19a4:	strb	w1, [x27]
    19a8:	ldrb	w1, [x4, #1]
    19ac:	strb	w1, [x27, #1]
    19b0:	mov	x27, x0
    19b4:	ldr	w11, [x10]
    19b8:	and	w5, w11, #0x7
    19bc:	b	ef4 <gconv@@Base+0x69c>
    19c0:	add	x2, x27, #0x8
    19c4:	cmp	x28, x2
    19c8:	b.cc	15ec <gconv@@Base+0xd94>  // b.lo, b.ul, b.last
    19cc:	add	x1, x4, #0xff8
    19d0:	ubfiz	x0, x0, #2, #32
    19d4:	add	x1, x1, #0xc38
    19d8:	add	x3, x1, x0
    19dc:	ldrh	w0, [x1, x0]
    19e0:	cbz	w0, 1d1c <gconv@@Base+0x14c4>
    19e4:	ldrh	w1, [x3, #2]
    19e8:	cbz	w1, 1d1c <gconv@@Base+0x14c4>
    19ec:	stp	w0, w1, [x27]
    19f0:	mov	x27, x2
    19f4:	mov	x0, #0x2                   	// #2
    19f8:	ldr	w11, [x10]
    19fc:	and	w5, w11, #0x7
    1a00:	b	11f4 <gconv@@Base+0x99c>
    1a04:	cbz	w1, 17e8 <gconv@@Base+0xf90>
    1a08:	ldr	x2, [sp, #184]
    1a0c:	cbz	x2, 1890 <gconv@@Base+0x1038>
    1a10:	tbz	w0, #1, 1890 <gconv@@Base+0x1038>
    1a14:	ldr	x1, [x2]
    1a18:	mov	x0, #0x2                   	// #2
    1a1c:	add	x1, x1, #0x1
    1a20:	str	x1, [x2]
    1a24:	b	11f4 <gconv@@Base+0x99c>
    1a28:	add	x3, x7, #0x8
    1a2c:	cmp	x6, x3
    1a30:	b.cc	129c <gconv@@Base+0xa44>  // b.lo, b.ul, b.last
    1a34:	add	x2, x13, #0xff8
    1a38:	ubfiz	x1, x1, #2, #32
    1a3c:	add	x2, x2, #0xc38
    1a40:	add	x4, x2, x1
    1a44:	ldrh	w2, [x2, x1]
    1a48:	cbz	w2, 1bdc <gconv@@Base+0x1384>
    1a4c:	ldrh	w1, [x4, #2]
    1a50:	cbz	w1, 1bdc <gconv@@Base+0x1384>
    1a54:	add	x22, x22, #0x2
    1a58:	stp	w2, w1, [x7]
    1a5c:	mov	x7, x3
    1a60:	b	1288 <gconv@@Base+0xa30>
    1a64:	str	x20, [x8]
    1a68:	cmp	x6, x27
    1a6c:	str	w18, [x19]
    1a70:	b.eq	16a8 <gconv@@Base+0xe50>  // b.none
    1a74:	b	12ac <gconv@@Base+0xa54>
    1a78:	mov	x1, x3
    1a7c:	mov	w3, #0xa0                  	// #160
    1a80:	b	1628 <gconv@@Base+0xdd0>
    1a84:	str	x20, [x8]
    1a88:	ldr	x0, [sp, #200]
    1a8c:	str	w18, [x19]
    1a90:	cmp	x7, x0
    1a94:	b.eq	16a8 <gconv@@Base+0xe50>  // b.none
    1a98:	b	12ac <gconv@@Base+0xa54>
    1a9c:	cbz	w1, 15dc <gconv@@Base+0xd84>
    1aa0:	cbz	x12, 1694 <gconv@@Base+0xe3c>
    1aa4:	cbz	w11, 1694 <gconv@@Base+0xe3c>
    1aa8:	ldr	x1, [x12]
    1aac:	add	x22, x22, #0x2
    1ab0:	add	x1, x1, #0x1
    1ab4:	str	x1, [x12]
    1ab8:	b	1288 <gconv@@Base+0xa30>
    1abc:	cbz	x12, 1694 <gconv@@Base+0xe3c>
    1ac0:	cbz	w11, 1694 <gconv@@Base+0xe3c>
    1ac4:	ldr	x1, [x12]
    1ac8:	add	x1, x1, #0x1
    1acc:	str	x1, [x12]
    1ad0:	b	1284 <gconv@@Base+0xa2c>
    1ad4:	mov	x2, x9
    1ad8:	mov	w4, #0x0                   	// #0
    1adc:	mov	w3, #0x4040                	// #16448
    1ae0:	b	15b0 <gconv@@Base+0xd58>
    1ae4:	mov	w15, #0x6                   	// #6
    1ae8:	cbz	w6, c38 <gconv@@Base+0x3e0>
    1aec:	mov	x0, #0x1                   	// #1
    1af0:	b	11f4 <gconv@@Base+0x99c>
    1af4:	cmp	w6, #0x40
    1af8:	mov	w15, #0x6                   	// #6
    1afc:	b.eq	c38 <gconv@@Base+0x3e0>  // b.none
    1b00:	mov	x0, #0x1                   	// #1
    1b04:	b	11f4 <gconv@@Base+0x99c>
    1b08:	mov	x0, x23
    1b0c:	str	x1, [sp, #200]
    1b10:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    1b14:	ldp	x0, x1, [sp, #144]
    1b18:	mov	w7, w25
    1b1c:	mov	x5, x24
    1b20:	mov	x3, x20
    1b24:	add	x2, sp, #0xc8
    1b28:	mov	w6, #0x0                   	// #0
    1b2c:	mov	x4, #0x0                   	// #0
    1b30:	blr	x23
    1b34:	mov	w15, w0
    1b38:	cmp	w0, #0x4
    1b3c:	b.eq	146c <gconv@@Base+0xc14>  // b.none
    1b40:	ldr	x0, [sp, #200]
    1b44:	cmp	x0, x20
    1b48:	b.ne	1c54 <gconv@@Base+0x13fc>  // b.any
    1b4c:	cbnz	w15, c3c <gconv@@Base+0x3e4>
    1b50:	b	146c <gconv@@Base+0xc14>
    1b54:	mov	w1, #0xf                   	// #15
    1b58:	strb	w1, [x27]
    1b5c:	cmp	x28, x0
    1b60:	b.ls	15ec <gconv@@Base+0xd94>  // b.plast
    1b64:	add	x1, x27, #0x2
    1b68:	mov	x27, x0
    1b6c:	mov	x0, x1
    1b70:	b	ee4 <gconv@@Base+0x68c>
    1b74:	add	x1, x1, #0x1f0
    1b78:	cmp	w2, #0x4f9
    1b7c:	mov	w4, #0x1f73                	// #8051
    1b80:	b.hi	194c <gconv@@Base+0x10f4>  // b.pmore
    1b84:	mov	x3, x1
    1b88:	mov	w1, #0xa0                  	// #160
    1b8c:	b	195c <gconv@@Base+0x1104>
    1b90:	mov	x3, x1
    1b94:	b	1964 <gconv@@Base+0x110c>
    1b98:	str	x22, [x8]
    1b9c:	ldr	x2, [sp, #200]
    1ba0:	str	w18, [x19]
    1ba4:	cmp	x1, x2
    1ba8:	b.ne	12ac <gconv@@Base+0xa54>  // b.any
    1bac:	mov	x7, x1
    1bb0:	b	1074 <gconv@@Base+0x81c>
    1bb4:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1bb8:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1bbc:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1bc0:	add	x3, x3, #0xff0
    1bc4:	add	x1, x1, #0xe10
    1bc8:	add	x0, x0, #0xe28
    1bcc:	mov	w2, #0x234                 	// #564
    1bd0:	bl	6e0 <__assert_fail@plt>
    1bd4:	mov	w15, w0
    1bd8:	b	c2c <gconv@@Base+0x3d4>
    1bdc:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1be0:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1be4:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1be8:	add	x3, x3, #0xfb0
    1bec:	add	x1, x1, #0xe40
    1bf0:	add	x0, x0, #0xe90
    1bf4:	mov	w2, #0x150                 	// #336
    1bf8:	bl	6e0 <__assert_fail@plt>
    1bfc:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1c00:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1c04:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1c08:	add	x3, x3, #0xfb0
    1c0c:	add	x1, x1, #0xe40
    1c10:	add	x0, x0, #0xe80
    1c14:	mov	w2, #0x150                 	// #336
    1c18:	bl	6e0 <__assert_fail@plt>
    1c1c:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1c20:	add	x3, x3, #0xfc0
    1c24:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1c28:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1c2c:	add	x1, x1, #0xe40
    1c30:	add	x0, x0, #0xe50
    1c34:	mov	w2, #0x18b                 	// #395
    1c38:	bl	6e0 <__assert_fail@plt>
    1c3c:	str	x22, [x8]
    1c40:	ldr	x7, [sp, #200]
    1c44:	str	wzr, [x19]
    1c48:	cmp	x7, x2
    1c4c:	b.eq	1074 <gconv@@Base+0x81c>  // b.none
    1c50:	b	12ac <gconv@@Base+0xa54>
    1c54:	str	w19, [x22]
    1c58:	cbnz	w15, c3c <gconv@@Base+0x3e4>
    1c5c:	b	146c <gconv@@Base+0xc14>
    1c60:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1c64:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1c68:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1c6c:	add	x3, x3, #0xff0
    1c70:	add	x1, x1, #0xe10
    1c74:	add	x0, x0, #0xf98
    1c78:	mov	w2, #0x31e                 	// #798
    1c7c:	bl	6e0 <__assert_fail@plt>
    1c80:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1c84:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1c88:	add	x3, x3, #0xfd8
    1c8c:	b	1c28 <gconv@@Base+0x13d0>
    1c90:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1c94:	add	x3, x3, #0xfc0
    1c98:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1c9c:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1ca0:	add	x1, x1, #0xe40
    1ca4:	add	x0, x0, #0xeb8
    1ca8:	mov	w2, #0x1c9                 	// #457
    1cac:	bl	6e0 <__assert_fail@plt>
    1cb0:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1cb4:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1cb8:	add	x3, x3, #0xfd8
    1cbc:	b	1c9c <gconv@@Base+0x1444>
    1cc0:	ldr	x2, [sp, #184]
    1cc4:	cbz	x2, 1890 <gconv@@Base+0x1038>
    1cc8:	tbz	w0, #1, 1890 <gconv@@Base+0x1038>
    1ccc:	ldr	x1, [x2]
    1cd0:	mov	x0, #0x1                   	// #1
    1cd4:	add	x1, x1, x0
    1cd8:	str	x1, [x2]
    1cdc:	b	11f4 <gconv@@Base+0x99c>
    1ce0:	mov	w1, #0x0                   	// #0
    1ce4:	b	1518 <gconv@@Base+0xcc0>
    1ce8:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1cec:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1cf0:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1cf4:	add	x3, x3, #0xff0
    1cf8:	add	x1, x1, #0xe10
    1cfc:	add	x0, x0, #0xe28
    1d00:	mov	w2, #0x1a4                 	// #420
    1d04:	stp	x27, x28, [sp, #80]
    1d08:	bl	6e0 <__assert_fail@plt>
    1d0c:	stp	x27, x28, [sp, #80]
    1d10:	bl	6a0 <__stack_chk_fail@plt>
    1d14:	mov	w15, #0x5                   	// #5
    1d18:	b	c3c <gconv@@Base+0x3e4>
    1d1c:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1d20:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1d24:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1d28:	add	x3, x3, #0xfd8
    1d2c:	add	x1, x1, #0xe40
    1d30:	add	x0, x0, #0xe90
    1d34:	mov	w2, #0x1be                 	// #446
    1d38:	bl	6e0 <__assert_fail@plt>
    1d3c:	add	x3, x3, #0x2
    1d40:	cmp	x6, x3
    1d44:	b.eq	1db0 <gconv@@Base+0x1558>  // b.none
    1d48:	mov	w2, w2
    1d4c:	cmp	x4, #0x40
    1d50:	sub	x4, x4, x2
    1d54:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1d58:	add	x22, x22, x4
    1d5c:	str	x22, [x8]
    1d60:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1d64:	add	x3, x3, #0xfd8
    1d68:	add	x1, x1, #0xe40
    1d6c:	b.le	1da0 <gconv@@Base+0x1548>
    1d70:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1d74:	mov	w2, #0x1e6                 	// #486
    1d78:	add	x0, x0, #0xf30
    1d7c:	bl	6e0 <__assert_fail@plt>
    1d80:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1d84:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1d88:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1d8c:	add	x3, x3, #0xfd8
    1d90:	add	x1, x1, #0xe40
    1d94:	add	x0, x0, #0xe80
    1d98:	mov	w2, #0x1be                 	// #446
    1d9c:	bl	6e0 <__assert_fail@plt>
    1da0:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1da4:	mov	w2, #0x1e5                 	// #485
    1da8:	add	x0, x0, #0xf08
    1dac:	bl	6e0 <__assert_fail@plt>
    1db0:	adrp	x3, 1000 <gconv@@Base+0x7a8>
    1db4:	adrp	x1, 1000 <gconv@@Base+0x7a8>
    1db8:	adrp	x0, 1000 <gconv@@Base+0x7a8>
    1dbc:	add	x3, x3, #0xfd8
    1dc0:	add	x1, x1, #0xe40
    1dc4:	add	x0, x0, #0xee0
    1dc8:	mov	w2, #0x1db                 	// #475
    1dcc:	bl	6e0 <__assert_fail@plt>
    1dd0:	add	x2, x4, #0xff8
    1dd4:	mov	w6, #0x0                   	// #0
    1dd8:	b	17b0 <gconv@@Base+0xf58>
    1ddc:	ldr	x0, [x1]
    1de0:	add	x0, x0, #0x1
    1de4:	str	x0, [x1]
    1de8:	b	ef4 <gconv@@Base+0x69c>

Disassembly of section .fini:

0000000000001dec <.fini>:
    1dec:	stp	x29, x30, [sp, #-16]!
    1df0:	mov	x29, sp
    1df4:	ldp	x29, x30, [sp], #16
    1df8:	ret
