
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//div_test.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xab0>:
   0:	sub	sp, sp, #0x60
   4:	add	x2, sp, #0x58
   8:	stp	x29, x30, [sp, #16]
   c:	add	x29, sp, #0x10
  10:	stp	x19, x20, [sp, #32]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	stp	x21, x22, [sp, #48]
  20:	stp	x23, x24, [sp, #64]
  24:	bl	0 <grub_divmod64s>
  28:	cmp	x20, #0x0
  2c:	mov	x21, x0
  30:	ldr	x1, [sp, #88]
  34:	b.le	1d0 <grub_mod_init-0x8e0>
  38:	mvn	x0, x1
  3c:	lsr	x0, x0, #63
  40:	adrp	x5, 0 <grub_mod_init-0xab0>
  44:	adrp	x4, 0 <grub_mod_init-0xab0>
  48:	adrp	x3, 0 <grub_mod_init-0xab0>
  4c:	adrp	x2, 0 <grub_mod_init-0xab0>
  50:	ldr	x5, [x5]
  54:	str	x1, [sp]
  58:	ldr	x4, [x4]
  5c:	mov	x7, x19
  60:	ldr	x23, [x3]
  64:	mov	x6, x20
  68:	ldr	x22, [x2]
  6c:	mov	w3, #0x87                  	// #135
  70:	mov	x2, x23
  74:	mov	x1, x22
  78:	bl	0 <grub_test_assert_helper>
  7c:	cmp	x20, #0x0
  80:	cset	w1, le
  84:	cmp	x19, #0x0
  88:	cset	w0, gt
  8c:	cmp	w1, w0
  90:	b.eq	1dc <grub_mod_init-0x8d4>  // b.none
  94:	mvn	x0, x21
  98:	lsr	x0, x0, #63
  9c:	adrp	x2, 0 <grub_mod_init-0xab0>
  a0:	adrp	x1, 0 <grub_mod_init-0xab0>
  a4:	str	x21, [sp]
  a8:	mov	x7, x19
  ac:	ldr	x5, [x2]
  b0:	mov	x6, x20
  b4:	ldr	x4, [x1]
  b8:	mov	x2, x23
  bc:	mov	x1, x22
  c0:	mov	w3, #0x89                  	// #137
  c4:	bl	0 <grub_test_assert_helper>
  c8:	ldr	x0, [sp, #88]
  cc:	adrp	x1, 0 <grub_mod_init-0xab0>
  d0:	adrp	x3, 0 <grub_mod_init-0xab0>
  d4:	str	x0, [sp]
  d8:	cmp	x0, #0x0
  dc:	mov	x7, x19
  e0:	cneg	x2, x0, lt  // lt = tstop
  e4:	cmp	x19, #0x0
  e8:	ldr	x5, [x1]
  ec:	cneg	x1, x19, lt  // lt = tstop
  f0:	ldr	x4, [x3]
  f4:	cmp	x2, x1
  f8:	mov	x6, x20
  fc:	mov	x2, x23
 100:	mov	x1, x22
 104:	cset	w0, lt  // lt = tstop
 108:	mov	w3, #0x8b                  	// #139
 10c:	bl	0 <grub_test_assert_helper>
 110:	ldr	x0, [sp, #88]
 114:	adrp	x2, 0 <grub_mod_init-0xab0>
 118:	adrp	x1, 0 <grub_mod_init-0xab0>
 11c:	stp	x0, x20, [sp]
 120:	mov	x7, x19
 124:	madd	x0, x19, x21, x0
 128:	mov	x6, x21
 12c:	ldr	x5, [x2]
 130:	cmp	x0, x20
 134:	ldr	x4, [x1]
 138:	mov	x2, x23
 13c:	mov	x1, x22
 140:	cset	w0, eq  // eq = none
 144:	mov	w3, #0x8d                  	// #141
 148:	bl	0 <grub_test_assert_helper>
 14c:	sdiv	x24, x20, x19
 150:	adrp	x1, 0 <grub_mod_init-0xab0>
 154:	adrp	x0, 0 <grub_mod_init-0xab0>
 158:	mov	x7, x19
 15c:	ldr	x5, [x1]
 160:	mov	x6, x20
 164:	ldr	x4, [x0]
 168:	cmp	x24, x21
 16c:	cset	w0, eq  // eq = none
 170:	mov	x2, x23
 174:	mov	x1, x22
 178:	mov	w3, #0x90                  	// #144
 17c:	bl	0 <grub_test_assert_helper>
 180:	msub	x24, x24, x19, x20
 184:	adrp	x2, 0 <grub_mod_init-0xab0>
 188:	adrp	x0, 0 <grub_mod_init-0xab0>
 18c:	ldr	x1, [sp, #88]
 190:	mov	x7, x19
 194:	ldr	x5, [x2]
 198:	cmp	x24, x1
 19c:	ldr	x4, [x0]
 1a0:	mov	x6, x20
 1a4:	mov	x2, x23
 1a8:	mov	x1, x22
 1ac:	cset	w0, eq  // eq = none
 1b0:	mov	w3, #0x92                  	// #146
 1b4:	bl	0 <grub_test_assert_helper>
 1b8:	ldp	x29, x30, [sp, #16]
 1bc:	ldp	x19, x20, [sp, #32]
 1c0:	ldp	x21, x22, [sp, #48]
 1c4:	ldp	x23, x24, [sp, #64]
 1c8:	add	sp, sp, #0x60
 1cc:	ret
 1d0:	cmp	x1, #0x0
 1d4:	cset	w0, le
 1d8:	b	40 <grub_mod_init-0xa70>
 1dc:	cmp	x21, #0x0
 1e0:	cset	w0, le
 1e4:	b	9c <grub_mod_init-0xa14>
	...
 258:	sub	sp, sp, #0x70
 25c:	add	x2, sp, #0x68
 260:	stp	x29, x30, [sp, #16]
 264:	add	x29, sp, #0x10
 268:	stp	x21, x22, [sp, #48]
 26c:	sxtw	x21, w1
 270:	mov	x1, x21
 274:	stp	x23, x24, [sp, #64]
 278:	sxtw	x23, w0
 27c:	mov	x0, x23
 280:	stp	x19, x20, [sp, #32]
 284:	mov	x24, x23
 288:	mov	x19, x21
 28c:	str	x25, [sp, #80]
 290:	bl	0 <grub_divmod64s>
 294:	cmp	w23, #0x0
 298:	mov	x20, x0
 29c:	ldr	x1, [sp, #104]
 2a0:	b.le	3d8 <grub_mod_init-0x6d8>
 2a4:	mvn	x0, x1
 2a8:	lsr	x0, x0, #63
 2ac:	adrp	x5, 0 <grub_mod_init-0xab0>
 2b0:	adrp	x4, 0 <grub_mod_init-0xab0>
 2b4:	adrp	x3, 0 <grub_mod_init-0xab0>
 2b8:	adrp	x2, 0 <grub_mod_init-0xab0>
 2bc:	ldr	x5, [x5]
 2c0:	str	x1, [sp]
 2c4:	ldr	x4, [x4]
 2c8:	mov	x7, x21
 2cc:	ldr	x22, [x3]
 2d0:	mov	x6, x23
 2d4:	ldr	x25, [x2]
 2d8:	mov	w3, #0x72                  	// #114
 2dc:	add	x2, x22, #0x8
 2e0:	mov	x1, x25
 2e4:	bl	0 <grub_test_assert_helper>
 2e8:	cmp	w24, #0x0
 2ec:	cset	w1, le
 2f0:	cmp	w19, #0x0
 2f4:	cset	w0, gt
 2f8:	cmp	w1, w0
 2fc:	b.eq	3e4 <grub_mod_init-0x6cc>  // b.none
 300:	mvn	x0, x20
 304:	lsr	x0, x0, #63
 308:	adrp	x2, 0 <grub_mod_init-0xab0>
 30c:	adrp	x1, 0 <grub_mod_init-0xab0>
 310:	str	x20, [sp]
 314:	add	x22, x22, #0x8
 318:	ldr	x5, [x2]
 31c:	mov	x7, x21
 320:	ldr	x4, [x1]
 324:	mov	x2, x22
 328:	mov	x6, x23
 32c:	mov	x1, x25
 330:	mov	w3, #0x74                  	// #116
 334:	bl	0 <grub_test_assert_helper>
 338:	ldr	x0, [sp, #104]
 33c:	adrp	x1, 0 <grub_mod_init-0xab0>
 340:	adrp	x2, 0 <grub_mod_init-0xab0>
 344:	str	x0, [sp]
 348:	cmp	x0, #0x0
 34c:	mov	x7, x21
 350:	ldr	x5, [x1]
 354:	cneg	x1, x0, lt  // lt = tstop
 358:	cmp	w19, #0x0
 35c:	mov	x6, x23
 360:	ldr	x4, [x2]
 364:	cneg	w19, w19, lt  // lt = tstop
 368:	cmp	x1, x19
 36c:	mov	x2, x22
 370:	mov	x1, x25
 374:	cset	w0, lt  // lt = tstop
 378:	mov	w3, #0x76                  	// #118
 37c:	bl	0 <grub_test_assert_helper>
 380:	ldr	x0, [sp, #104]
 384:	adrp	x2, 0 <grub_mod_init-0xab0>
 388:	adrp	x1, 0 <grub_mod_init-0xab0>
 38c:	stp	x0, x23, [sp]
 390:	mov	x7, x21
 394:	madd	x0, x21, x20, x0
 398:	mov	x6, x20
 39c:	ldr	x5, [x2]
 3a0:	cmp	x0, x23
 3a4:	ldr	x4, [x1]
 3a8:	mov	x2, x22
 3ac:	mov	x1, x25
 3b0:	cset	w0, eq  // eq = none
 3b4:	mov	w3, #0x78                  	// #120
 3b8:	bl	0 <grub_test_assert_helper>
 3bc:	ldp	x29, x30, [sp, #16]
 3c0:	ldp	x19, x20, [sp, #32]
 3c4:	ldp	x21, x22, [sp, #48]
 3c8:	ldp	x23, x24, [sp, #64]
 3cc:	ldr	x25, [sp, #80]
 3d0:	add	sp, sp, #0x70
 3d4:	ret
 3d8:	cmp	x1, #0x0
 3dc:	cset	w0, le
 3e0:	b	2ac <grub_mod_init-0x804>
 3e4:	cmp	x20, #0x0
 3e8:	cset	w0, le
 3ec:	b	308 <grub_mod_init-0x7a8>
	...
 440:	sub	sp, sp, #0xd0
 444:	add	x2, sp, #0xc8
 448:	stp	x29, x30, [sp, #16]
 44c:	add	x29, sp, #0x10
 450:	stp	x19, x20, [sp, #32]
 454:	mov	x19, x0
 458:	stp	x21, x22, [sp, #48]
 45c:	stp	x23, x24, [sp, #64]
 460:	stp	x25, x26, [sp, #80]
 464:	stp	x27, x28, [sp, #96]
 468:	mov	x28, x1
 46c:	bl	0 <grub_divmod64>
 470:	adrp	x5, 0 <grub_mod_init-0xab0>
 474:	adrp	x2, 0 <grub_mod_init-0xab0>
 478:	adrp	x4, 0 <grub_mod_init-0xab0>
 47c:	adrp	x3, 0 <grub_mod_init-0xab0>
 480:	ldr	x1, [sp, #200]
 484:	str	x1, [sp]
 488:	ldr	x6, [x5]
 48c:	cmp	x28, x1
 490:	ldr	x5, [x2]
 494:	add	x25, x6, #0x10
 498:	ldr	x4, [x4]
 49c:	mov	x26, x0
 4a0:	ldr	x20, [x3]
 4a4:	lsr	x23, x0, #32
 4a8:	mov	x2, x25
 4ac:	cset	w0, hi  // hi = pmore
 4b0:	mov	x7, x28
 4b4:	mov	x1, x20
 4b8:	mov	w3, #0x41                  	// #65
 4bc:	stp	x5, x4, [sp, #128]
 4c0:	lsr	x24, x28, #32
 4c4:	str	x6, [sp, #144]
 4c8:	mov	x6, x19
 4cc:	bl	0 <grub_test_assert_helper>
 4d0:	and	x22, x28, #0xffffffff
 4d4:	ldr	x0, [sp, #200]
 4d8:	adrp	x1, 0 <grub_mod_init-0xab0>
 4dc:	adrp	x3, 0 <grub_mod_init-0xab0>
 4e0:	stp	x0, x19, [sp]
 4e4:	mov	x2, x25
 4e8:	ldr	x5, [x1]
 4ec:	madd	x1, x28, x26, x0
 4f0:	ldr	x4, [x3]
 4f4:	cmp	x1, x19
 4f8:	cset	w0, eq  // eq = none
 4fc:	mov	x7, x28
 500:	mov	x6, x26
 504:	mov	x1, x20
 508:	mov	w3, #0x43                  	// #67
 50c:	stp	x5, x4, [sp, #152]
 510:	bl	0 <grub_test_assert_helper>
 514:	adrp	x3, 0 <grub_mod_init-0xab0>
 518:	mul	x1, x23, x24
 51c:	adrp	x0, 0 <grub_mod_init-0xab0>
 520:	mov	x2, x25
 524:	ldr	x4, [x3]
 528:	cmp	x1, #0x0
 52c:	ldr	x21, [x0]
 530:	mov	x7, x28
 534:	cset	w0, eq  // eq = none
 538:	mov	x6, x19
 53c:	mov	x1, x20
 540:	mov	x5, x21
 544:	mov	w3, #0x46                  	// #70
 548:	bl	0 <grub_test_assert_helper>
 54c:	adrp	x0, 0 <grub_mod_init-0xab0>
 550:	mul	x11, x23, x22
 554:	mov	x27, #0xffffffff            	// #4294967295
 558:	and	x23, x26, x27
 55c:	ldr	x4, [x0]
 560:	cmp	x11, x27
 564:	cset	w0, ls  // ls = plast
 568:	mov	x2, x25
 56c:	mov	x7, x28
 570:	mov	x6, x19
 574:	mov	x5, x21
 578:	mov	x1, x20
 57c:	mov	w3, #0x49                  	// #73
 580:	str	x11, [sp, #120]
 584:	bl	0 <grub_test_assert_helper>
 588:	mul	x24, x24, x23
 58c:	adrp	x0, 0 <grub_mod_init-0xab0>
 590:	mov	x2, x25
 594:	cmp	x24, x27
 598:	mov	x7, x28
 59c:	ldr	x4, [x0]
 5a0:	mov	x6, x19
 5a4:	cset	w0, ls  // ls = plast
 5a8:	mov	x5, x21
 5ac:	mov	x1, x20
 5b0:	mov	w3, #0x4d                  	// #77
 5b4:	bl	0 <grub_test_assert_helper>
 5b8:	lsl	x27, x24, #32
 5bc:	ldr	x11, [sp, #120]
 5c0:	adrp	x0, 0 <grub_mod_init-0xab0>
 5c4:	mvn	x1, x27
 5c8:	mul	x24, x22, x23
 5cc:	ldr	x4, [x0]
 5d0:	lsl	x11, x11, #32
 5d4:	cmp	x11, x1
 5d8:	add	x23, x11, x27
 5dc:	cset	w0, ls  // ls = plast
 5e0:	mov	x2, x25
 5e4:	mov	x7, x28
 5e8:	mov	x6, x19
 5ec:	mov	x5, x21
 5f0:	mov	x1, x20
 5f4:	mov	w3, #0x50                  	// #80
 5f8:	bl	0 <grub_test_assert_helper>
 5fc:	adrp	x1, 0 <grub_mod_init-0xab0>
 600:	add	x1, x1, #0x0
 604:	mvn	x0, x24
 608:	mov	x2, x25
 60c:	cmp	x23, x0
 610:	mov	x7, x28
 614:	ldr	x4, [x1]
 618:	cset	w0, ls  // ls = plast
 61c:	mov	x6, x19
 620:	mov	x5, x21
 624:	mov	x1, x20
 628:	mov	w3, #0x54                  	// #84
 62c:	bl	0 <grub_test_assert_helper>
 630:	add	x23, x23, x24
 634:	ldr	x0, [sp, #200]
 638:	adrp	x1, 0 <grub_mod_init-0xab0>
 63c:	mov	x2, x25
 640:	mov	x7, x28
 644:	ldr	x4, [x1]
 648:	mvn	x0, x0
 64c:	cmp	x23, x0
 650:	mov	x6, x19
 654:	cset	w0, ls  // ls = plast
 658:	mov	x5, x21
 65c:	mov	x1, x20
 660:	mov	w3, #0x57                  	// #87
 664:	bl	0 <grub_test_assert_helper>
 668:	ldr	x24, [sp, #200]
 66c:	adrp	x1, 0 <grub_mod_init-0xab0>
 670:	adrp	x0, 0 <grub_mod_init-0xab0>
 674:	mov	x2, x25
 678:	ldr	x5, [x1]
 67c:	add	x23, x23, x24
 680:	ldr	x4, [x0]
 684:	cmp	x23, x19
 688:	cset	w0, eq  // eq = none
 68c:	mov	x7, x28
 690:	mov	x6, x19
 694:	mov	x1, x20
 698:	mov	w3, #0x5a                  	// #90
 69c:	bl	0 <grub_test_assert_helper>
 6a0:	udiv	x23, x19, x28
 6a4:	adrp	x1, 0 <grub_mod_init-0xab0>
 6a8:	adrp	x0, 0 <grub_mod_init-0xab0>
 6ac:	mov	x2, x25
 6b0:	ldr	x5, [x1]
 6b4:	mov	x7, x28
 6b8:	ldr	x0, [x0]
 6bc:	cmp	x23, x26
 6c0:	mov	x6, x19
 6c4:	mov	x1, x20
 6c8:	mov	x4, x0
 6cc:	mov	w3, #0x5d                  	// #93
 6d0:	str	x5, [sp, #120]
 6d4:	msub	x23, x23, x28, x19
 6d8:	str	x0, [sp, #168]
 6dc:	cset	w0, eq  // eq = none
 6e0:	bl	0 <grub_test_assert_helper>
 6e4:	adrp	x0, 0 <grub_mod_init-0xab0>
 6e8:	adrp	x1, 0 <grub_mod_init-0xab0>
 6ec:	ldr	x3, [sp, #200]
 6f0:	mov	x2, x25
 6f4:	ldr	x5, [x0]
 6f8:	cmp	x23, x3
 6fc:	ldr	x1, [x1]
 700:	mov	x7, x28
 704:	mov	x6, x19
 708:	cset	w0, eq  // eq = none
 70c:	mov	x4, x1
 710:	mov	w3, #0x5f                  	// #95
 714:	stp	x5, x1, [sp, #176]
 718:	mov	x1, x20
 71c:	bl	0 <grub_test_assert_helper>
 720:	cbnz	w28, 77c <grub_mod_init-0x334>
 724:	neg	x21, x28
 728:	mov	x1, x28
 72c:	mov	x0, x19
 730:	bl	0 <grub_mod_init-0xab0>
 734:	mov	x1, x21
 738:	neg	x20, x19
 73c:	mov	x0, x19
 740:	bl	0 <grub_mod_init-0xab0>
 744:	mov	x1, x28
 748:	mov	x0, x20
 74c:	bl	0 <grub_mod_init-0xab0>
 750:	mov	x1, x21
 754:	mov	x0, x20
 758:	bl	0 <grub_mod_init-0xab0>
 75c:	ldp	x29, x30, [sp, #16]
 760:	ldp	x19, x20, [sp, #32]
 764:	ldp	x21, x22, [sp, #48]
 768:	ldp	x23, x24, [sp, #64]
 76c:	ldp	x25, x26, [sp, #80]
 770:	ldp	x27, x28, [sp, #96]
 774:	add	sp, sp, #0xd0
 778:	ret
 77c:	and	x25, x19, #0xffffffff
 780:	add	x2, sp, #0xc8
 784:	mov	x1, x22
 788:	mov	x0, x25
 78c:	bl	0 <grub_divmod64>
 790:	mov	x23, x0
 794:	ldp	x5, x4, [sp, #128]
 798:	mov	x6, x25
 79c:	ldr	x1, [sp, #200]
 7a0:	str	x1, [sp]
 7a4:	ldr	x2, [sp, #144]
 7a8:	cmp	x1, x22
 7ac:	mov	x7, x22
 7b0:	cset	w0, cc  // cc = lo, ul, last
 7b4:	add	x24, x2, #0x18
 7b8:	mov	x1, x20
 7bc:	mov	x2, x24
 7c0:	mov	w3, #0x28                  	// #40
 7c4:	bl	0 <grub_test_assert_helper>
 7c8:	neg	x27, x28
 7cc:	ldr	x0, [sp, #200]
 7d0:	stp	x0, x25, [sp]
 7d4:	neg	w8, w28
 7d8:	ldp	x5, x4, [sp, #152]
 7dc:	madd	x0, x23, x22, x0
 7e0:	mov	x6, x23
 7e4:	mov	x2, x24
 7e8:	cmp	x0, x25
 7ec:	mov	x7, x22
 7f0:	mov	x1, x20
 7f4:	cset	w0, eq  // eq = none
 7f8:	mov	w3, #0x2a                  	// #42
 7fc:	str	w8, [sp, #128]
 800:	bl	0 <grub_test_assert_helper>
 804:	neg	x26, x19
 808:	adrp	x0, 0 <grub_mod_init-0xab0>
 80c:	cmp	xzr, x23, lsr #32
 810:	mov	x6, x25
 814:	mov	x2, x24
 818:	ldr	x4, [x0]
 81c:	mov	x7, x22
 820:	cset	w0, eq  // eq = none
 824:	mov	x5, x21
 828:	mov	x1, x20
 82c:	mov	w3, #0x2d                  	// #45
 830:	bl	0 <grub_test_assert_helper>
 834:	adrp	x1, 0 <grub_mod_init-0xab0>
 838:	ldr	w0, [sp, #204]
 83c:	mov	x5, x21
 840:	mov	x6, x25
 844:	ldr	x4, [x1]
 848:	cmp	x0, #0x0
 84c:	mov	x2, x24
 850:	mov	x7, x22
 854:	mov	x1, x20
 858:	cset	w0, eq  // eq = none
 85c:	mov	w3, #0x2f                  	// #47
 860:	bl	0 <grub_test_assert_helper>
 864:	udiv	w21, w19, w28
 868:	mov	x6, x25
 86c:	ldr	x5, [sp, #120]
 870:	mov	x2, x24
 874:	ldr	x4, [sp, #168]
 878:	cmp	x23, w21, uxtw
 87c:	mov	x7, x22
 880:	mov	x1, x20
 884:	cset	w0, eq  // eq = none
 888:	mov	w3, #0x35                  	// #53
 88c:	bl	0 <grub_test_assert_helper>
 890:	msub	w21, w21, w28, w19
 894:	ldp	x5, x4, [sp, #176]
 898:	mov	x6, x25
 89c:	ldr	x0, [sp, #200]
 8a0:	mov	x2, x24
 8a4:	mov	x7, x22
 8a8:	mov	w3, #0x37                  	// #55
 8ac:	cmp	x21, x0
 8b0:	mov	x1, x20
 8b4:	cset	w0, eq  // eq = none
 8b8:	neg	w23, w19
 8bc:	bl	0 <grub_test_assert_helper>
 8c0:	mov	x1, x28
 8c4:	mov	x0, x19
 8c8:	bl	0 <grub_mod_init-0xab0>
 8cc:	mov	w1, w28
 8d0:	mov	w0, w19
 8d4:	bl	258 <grub_mod_init-0x858>
 8d8:	mov	x1, x27
 8dc:	mov	x0, x19
 8e0:	bl	0 <grub_mod_init-0xab0>
 8e4:	ldr	w8, [sp, #128]
 8e8:	mov	w0, w19
 8ec:	str	w8, [sp, #120]
 8f0:	mov	w1, w8
 8f4:	bl	258 <grub_mod_init-0x858>
 8f8:	mov	x1, x28
 8fc:	mov	x0, x26
 900:	bl	0 <grub_mod_init-0xab0>
 904:	mov	w1, w28
 908:	mov	w0, w23
 90c:	bl	258 <grub_mod_init-0x858>
 910:	mov	x1, x27
 914:	mov	x0, x26
 918:	bl	0 <grub_mod_init-0xab0>
 91c:	ldr	w8, [sp, #120]
 920:	mov	w0, w23
 924:	mov	w1, w8
 928:	bl	258 <grub_mod_init-0x858>
 92c:	ldp	x29, x30, [sp, #16]
 930:	ldp	x19, x20, [sp, #32]
 934:	ldp	x21, x22, [sp, #48]
 938:	ldp	x23, x24, [sp, #64]
 93c:	ldp	x25, x26, [sp, #80]
 940:	ldp	x27, x28, [sp, #96]
 944:	add	sp, sp, #0xd0
 948:	ret
 94c:	nop
	...
 9f0:	stp	x29, x30, [sp, #-48]!
 9f4:	mov	x1, #0x1                   	// #1
 9f8:	mov	x0, #0xffffffffffffffff    	// #-1
 9fc:	mov	x29, sp
 a00:	stp	x19, x20, [sp, #16]
 a04:	mov	x20, #0x9c40                	// #40000
 a08:	mov	x19, #0x7                   	// #7
 a0c:	stp	x21, x22, [sp, #32]
 a10:	bl	440 <grub_mod_init-0x670>
 a14:	mov	x1, #0xffffffffffffffff    	// #-1
 a18:	mov	x0, #0x1                   	// #1
 a1c:	bl	440 <grub_mod_init-0x670>
 a20:	mov	x1, #0xffffffffffffffff    	// #-1
 a24:	mov	x0, x1
 a28:	bl	440 <grub_mod_init-0x670>
 a2c:	mov	x21, #0x1                   	// #1
 a30:	mov	x1, x21
 a34:	mov	x0, x21
 a38:	bl	440 <grub_mod_init-0x670>
 a3c:	mov	x22, #0x194                 	// #404
 a40:	mov	x1, x21
 a44:	mov	x0, #0x2                   	// #2
 a48:	bl	440 <grub_mod_init-0x670>
 a4c:	nop
 a50:	add	x0, x19, x19, lsl #1
 a54:	add	x22, x22, x22, lsl #4
 a58:	lsl	x1, x19, #3
 a5c:	add	x0, x19, x0, lsl #2
 a60:	sub	x1, x1, x19
 a64:	add	x0, x0, x22
 a68:	add	x19, x19, x1, lsl #2
 a6c:	add	x1, x0, x0, lsl #1
 a70:	lsl	x1, x1, #3
 a74:	sub	x1, x1, x0
 a78:	adds	x19, x1, x19
 a7c:	csel	x19, x19, x21, ne  // ne = any
 a80:	cmp	x0, #0x0
 a84:	csel	x22, x0, x21, ne  // ne = any
 a88:	mov	x1, x19
 a8c:	mov	x0, x22
 a90:	bl	440 <grub_mod_init-0x670>
 a94:	subs	x20, x20, #0x1
 a98:	b.ne	a50 <grub_mod_init-0x60>  // b.any
 a9c:	ldp	x19, x20, [sp, #16]
 aa0:	ldp	x21, x22, [sp, #32]
 aa4:	ldp	x29, x30, [sp], #48
 aa8:	ret
 aac:	nop

0000000000000ab0 <grub_mod_init>:
 ab0:	adrp	x1, 0 <grub_mod_init-0xab0>
 ab4:	adrp	x0, 0 <grub_mod_init-0xab0>
 ab8:	ldr	x1, [x1]
 abc:	ldr	x0, [x0]
 ac0:	b	0 <grub_test_register>
 ac4:	nop
	...

0000000000000ad8 <grub_mod_fini>:
 ad8:	adrp	x0, 0 <grub_mod_init-0xab0>
 adc:	ldr	x0, [x0]
 ae0:	b	0 <grub_test_unregister>
 ae4:	nop
	...
