In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMInterpreter.a_gcc_-O2:

Execution.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x7d                  	// #125
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZN4llvm3isaINS_11InstructionEPKNS_5ValueEEEbRKT0_.isra.0.part.0>:
      28:	stp	x29, x30, [sp, #-16]!
      2c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      30:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      34:	mov	x29, sp
      38:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      3c:	add	x3, x3, #0x0
      40:	add	x1, x1, #0x0
      44:	add	x0, x0, #0x0
      48:	mov	w2, #0x69                  	// #105
      4c:	bl	0 <__assert_fail>

0000000000000050 <_ZN4llvm3isaINS_8ConstantEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      5c:	mov	x29, sp
      60:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      64:	add	x3, x3, #0x0
      68:	add	x1, x1, #0x0
      6c:	add	x0, x0, #0x0
      70:	mov	w2, #0x69                  	// #105
      74:	bl	0 <__assert_fail>

0000000000000078 <_ZN4llvm3isaINS_8FunctionEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      78:	stp	x29, x30, [sp, #-16]!
      7c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      80:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      84:	mov	x29, sp
      88:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      8c:	add	x3, x3, #0x0
      90:	add	x1, x1, #0x0
      94:	add	x0, x0, #0x0
      98:	mov	w2, #0x69                  	// #105
      9c:	bl	0 <__assert_fail>

00000000000000a0 <_ZN4llvm3isaINS_10BasicBlockEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      a0:	stp	x29, x30, [sp, #-16]!
      a4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      ac:	mov	x29, sp
      b0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      b4:	add	x3, x3, #0x0
      b8:	add	x1, x1, #0x0
      bc:	add	x0, x0, #0x0
      c0:	mov	w2, #0x69                  	// #105
      c4:	bl	0 <__assert_fail>

00000000000000c8 <_ZN4llvm13isa_impl_wrapINS_12ConstantExprEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>:
      c8:	stp	x29, x30, [sp, #-16]!
      cc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      d0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      d4:	mov	x29, sp
      d8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      dc:	add	x3, x3, #0x0
      e0:	add	x1, x1, #0x0
      e4:	add	x0, x0, #0x0
      e8:	mov	w2, #0x69                  	// #105
      ec:	bl	0 <__assert_fail>

00000000000000f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>:
      f0:	stp	x29, x30, [sp, #-16]!
      f4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      fc:	mov	x29, sp
     100:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     104:	add	x3, x3, #0x0
     108:	add	x1, x1, #0x0
     10c:	add	x0, x0, #0x0
     110:	mov	w2, #0x69                  	// #105
     114:	bl	0 <__assert_fail>

0000000000000118 <_ZN4llvm3isaINS_10InvokeInstEPNS_11InstructionEEEbRKT0_.isra.0.part.0>:
     118:	stp	x29, x30, [sp, #-16]!
     11c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     120:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     124:	mov	x29, sp
     128:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     12c:	add	x3, x3, #0x0
     130:	add	x1, x1, #0x0
     134:	add	x0, x0, #0x0
     138:	mov	w2, #0x69                  	// #105
     13c:	bl	0 <__assert_fail>

0000000000000140 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     140:	stp	x29, x30, [sp, #-32]!
     144:	mov	x29, sp
     148:	stp	x19, x20, [sp, #16]
     14c:	mov	x20, x0
     150:	bl	0 <_ZN4llvm4dbgsEv>
     154:	ldp	x1, x2, [x0, #16]
     158:	sub	x1, x1, x2
     15c:	cmp	x1, #0x24
     160:	b.ls	1dc <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     164:	mov	x19, x0
     168:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     16c:	add	x0, x0, #0x0
     170:	ldp	x4, x5, [x0, #16]
     174:	stp	x4, x5, [x2, #16]
     178:	ldp	x4, x5, [x0]
     17c:	stp	x4, x5, [x2]
     180:	ldur	x0, [x0, #29]
     184:	stur	x0, [x2, #29]
     188:	ldr	x0, [x19, #24]
     18c:	add	x0, x0, #0x25
     190:	str	x0, [x19, #24]
     194:	mov	x0, x20
     198:	mov	x1, x19
     19c:	mov	w3, #0x0                   	// #0
     1a0:	mov	w2, #0x0                   	// #0
     1a4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     1a8:	ldp	x1, x0, [x19, #16]
     1ac:	cmp	x1, x0
     1b0:	b.eq	1f4 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     1b4:	mov	w1, #0xa                   	// #10
     1b8:	strb	w1, [x0]
     1bc:	ldr	x0, [x19, #24]
     1c0:	add	x0, x0, #0x1
     1c4:	str	x0, [x19, #24]
     1c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     1cc:	mov	w2, #0x7e                  	// #126
     1d0:	add	x1, x1, #0x0
     1d4:	mov	x0, #0x0                   	// #0
     1d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     1dc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     1e0:	mov	x2, #0x25                  	// #37
     1e4:	add	x1, x1, #0x0
     1e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1ec:	mov	x19, x0
     1f0:	b	194 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     1f4:	mov	x0, x19
     1f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     1fc:	mov	x2, #0x1                   	// #1
     200:	add	x1, x1, #0x0
     204:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     208:	b	1c8 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     20c:	nop

0000000000000210 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>:
     210:	stp	x29, x30, [sp, #-48]!
     214:	mov	x29, sp
     218:	str	x19, [sp, #16]
     21c:	mov	x19, x0
     220:	ldrb	w0, [x3, #8]
     224:	cmp	w0, #0x2
     228:	b.eq	250 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x40>  // b.none
     22c:	cmp	w0, #0x3
     230:	b.ne	278 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x68>  // b.any
     234:	ldr	d0, [x1]
     238:	ldr	d1, [x2]
     23c:	bl	0 <fmod>
     240:	str	d0, [x19]
     244:	ldr	x19, [sp, #16]
     248:	ldp	x29, x30, [sp], #48
     24c:	ret
     250:	ldr	s0, [x1]
     254:	ldr	s1, [x2]
     258:	fcvt	d0, s0
     25c:	fcvt	d1, s1
     260:	bl	0 <fmod>
     264:	fcvt	s0, d0
     268:	str	s0, [x19]
     26c:	ldr	x19, [sp, #16]
     270:	ldp	x29, x30, [sp], #48
     274:	ret
     278:	str	x3, [sp, #40]
     27c:	bl	0 <_ZN4llvm4dbgsEv>
     280:	ldp	x2, x1, [x0, #16]
     284:	mov	x19, x0
     288:	ldr	x3, [sp, #40]
     28c:	sub	x2, x2, x1
     290:	cmp	x2, #0x23
     294:	b.ls	30c <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0xfc>  // b.plast
     298:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     29c:	add	x0, x0, #0x0
     2a0:	ldp	x4, x5, [x0]
     2a4:	stp	x4, x5, [x1]
     2a8:	ldr	w2, [x0, #32]
     2ac:	ldp	x4, x5, [x0, #16]
     2b0:	stp	x4, x5, [x1, #16]
     2b4:	str	w2, [x1, #32]
     2b8:	ldr	x0, [x19, #24]
     2bc:	add	x0, x0, #0x24
     2c0:	str	x0, [x19, #24]
     2c4:	mov	x0, x3
     2c8:	mov	x1, x19
     2cc:	mov	w3, #0x0                   	// #0
     2d0:	mov	w2, #0x0                   	// #0
     2d4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     2d8:	ldp	x1, x0, [x19, #16]
     2dc:	cmp	x1, x0
     2e0:	b.eq	328 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x118>  // b.none
     2e4:	mov	w1, #0xa                   	// #10
     2e8:	strb	w1, [x0]
     2ec:	ldr	x0, [x19, #24]
     2f0:	add	x0, x0, #0x1
     2f4:	str	x0, [x19, #24]
     2f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     2fc:	mov	w2, #0xa3                  	// #163
     300:	add	x1, x1, #0x0
     304:	mov	x0, #0x0                   	// #0
     308:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     30c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     310:	mov	x2, #0x24                  	// #36
     314:	add	x1, x1, #0x0
     318:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     31c:	mov	x19, x0
     320:	ldr	x3, [sp, #40]
     324:	b	2c4 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0xb4>
     328:	mov	x0, x19
     32c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     330:	mov	x2, #0x1                   	// #1
     334:	add	x1, x1, #0x0
     338:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     33c:	b	2f8 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0xe8>

0000000000000340 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     340:	stp	x29, x30, [sp, #-32]!
     344:	mov	x29, sp
     348:	stp	x19, x20, [sp, #16]
     34c:	mov	x20, x0
     350:	bl	0 <_ZN4llvm4dbgsEv>
     354:	ldp	x1, x2, [x0, #16]
     358:	sub	x1, x1, x2
     35c:	cmp	x1, #0x24
     360:	b.ls	3dc <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     364:	mov	x19, x0
     368:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     36c:	add	x0, x0, #0x0
     370:	ldp	x4, x5, [x0, #16]
     374:	stp	x4, x5, [x2, #16]
     378:	ldp	x4, x5, [x0]
     37c:	stp	x4, x5, [x2]
     380:	ldur	x0, [x0, #29]
     384:	stur	x0, [x2, #29]
     388:	ldr	x0, [x19, #24]
     38c:	add	x0, x0, #0x25
     390:	str	x0, [x19, #24]
     394:	mov	x0, x20
     398:	mov	x1, x19
     39c:	mov	w3, #0x0                   	// #0
     3a0:	mov	w2, #0x0                   	// #0
     3a4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     3a8:	ldp	x1, x0, [x19, #16]
     3ac:	cmp	x1, x0
     3b0:	b.eq	3f4 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     3b4:	mov	w1, #0xa                   	// #10
     3b8:	strb	w1, [x0]
     3bc:	ldr	x0, [x19, #24]
     3c0:	add	x0, x0, #0x1
     3c4:	str	x0, [x19, #24]
     3c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     3cc:	mov	w2, #0x89                  	// #137
     3d0:	add	x1, x1, #0x0
     3d4:	mov	x0, #0x0                   	// #0
     3d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     3dc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     3e0:	mov	x2, #0x25                  	// #37
     3e4:	add	x1, x1, #0x0
     3e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3ec:	mov	x19, x0
     3f0:	b	394 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     3f4:	mov	x0, x19
     3f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     3fc:	mov	x2, #0x1                   	// #1
     400:	add	x1, x1, #0x0
     404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     408:	b	3c8 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     40c:	nop

0000000000000410 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     410:	stp	x29, x30, [sp, #-32]!
     414:	mov	x29, sp
     418:	stp	x19, x20, [sp, #16]
     41c:	mov	x20, x0
     420:	bl	0 <_ZN4llvm4dbgsEv>
     424:	ldp	x1, x2, [x0, #16]
     428:	sub	x1, x1, x2
     42c:	cmp	x1, #0x24
     430:	b.ls	4ac <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     434:	mov	x19, x0
     438:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     43c:	add	x0, x0, #0x0
     440:	ldp	x4, x5, [x0, #16]
     444:	stp	x4, x5, [x2, #16]
     448:	ldp	x4, x5, [x0]
     44c:	stp	x4, x5, [x2]
     450:	ldur	x0, [x0, #29]
     454:	stur	x0, [x2, #29]
     458:	ldr	x0, [x19, #24]
     45c:	add	x0, x0, #0x25
     460:	str	x0, [x19, #24]
     464:	mov	x0, x20
     468:	mov	x1, x19
     46c:	mov	w3, #0x0                   	// #0
     470:	mov	w2, #0x0                   	// #0
     474:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     478:	ldp	x1, x0, [x19, #16]
     47c:	cmp	x1, x0
     480:	b.eq	4c4 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     484:	mov	w1, #0xa                   	// #10
     488:	strb	w1, [x0]
     48c:	ldr	x0, [x19, #24]
     490:	add	x0, x0, #0x1
     494:	str	x0, [x19, #24]
     498:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     49c:	mov	w2, #0x73                  	// #115
     4a0:	add	x1, x1, #0x0
     4a4:	mov	x0, #0x0                   	// #0
     4a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     4ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     4b0:	mov	x2, #0x25                  	// #37
     4b4:	add	x1, x1, #0x0
     4b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4bc:	mov	x19, x0
     4c0:	b	464 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     4c4:	mov	x0, x19
     4c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     4cc:	mov	x2, #0x1                   	// #1
     4d0:	add	x1, x1, #0x0
     4d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4d8:	b	498 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     4dc:	nop

00000000000004e0 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     4e0:	stp	x29, x30, [sp, #-32]!
     4e4:	mov	x29, sp
     4e8:	stp	x19, x20, [sp, #16]
     4ec:	mov	x20, x0
     4f0:	bl	0 <_ZN4llvm4dbgsEv>
     4f4:	ldp	x1, x2, [x0, #16]
     4f8:	sub	x1, x1, x2
     4fc:	cmp	x1, #0x24
     500:	b.ls	57c <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     504:	mov	x19, x0
     508:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     50c:	add	x0, x0, #0x0
     510:	ldp	x4, x5, [x0, #16]
     514:	stp	x4, x5, [x2, #16]
     518:	ldp	x4, x5, [x0]
     51c:	stp	x4, x5, [x2]
     520:	ldur	x0, [x0, #29]
     524:	stur	x0, [x2, #29]
     528:	ldr	x0, [x19, #24]
     52c:	add	x0, x0, #0x25
     530:	str	x0, [x19, #24]
     534:	mov	x0, x20
     538:	mov	x1, x19
     53c:	mov	w3, #0x0                   	// #0
     540:	mov	w2, #0x0                   	// #0
     544:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     548:	ldp	x1, x0, [x19, #16]
     54c:	cmp	x1, x0
     550:	b.eq	594 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     554:	mov	w1, #0xa                   	// #10
     558:	strb	w1, [x0]
     55c:	ldr	x0, [x19, #24]
     560:	add	x0, x0, #0x1
     564:	str	x0, [x19, #24]
     568:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     56c:	mov	w2, #0x94                  	// #148
     570:	add	x1, x1, #0x0
     574:	mov	x0, #0x0                   	// #0
     578:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     57c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     580:	mov	x2, #0x25                  	// #37
     584:	add	x1, x1, #0x0
     588:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     58c:	mov	x19, x0
     590:	b	534 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     594:	mov	x0, x19
     598:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     59c:	mov	x2, #0x1                   	// #1
     5a0:	add	x1, x1, #0x0
     5a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5a8:	b	568 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     5ac:	nop

00000000000005b0 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE.isra.0>:
     5b0:	stp	x29, x30, [sp, #-32]!
     5b4:	mov	x29, sp
     5b8:	stp	x19, x20, [sp, #16]
     5bc:	mov	x20, x0
     5c0:	bl	0 <_ZN4llvm4errsEv>
     5c4:	mov	w2, #0x0                   	// #0
     5c8:	mov	x19, x0
     5cc:	mov	x1, x19
     5d0:	mov	x0, x20
     5d4:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
     5d8:	mov	x0, x19
     5dc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     5e0:	add	x1, x1, #0x0
     5e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     5e8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     5ec:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     5f0:	add	x1, x1, #0x0
     5f4:	add	x0, x0, #0x0
     5f8:	mov	w2, #0xac                  	// #172
     5fc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>:
     600:	stp	x29, x30, [sp, #-64]!
     604:	mov	x29, sp
     608:	stp	x21, x22, [sp, #32]
     60c:	ldp	x3, x2, [x1]
     610:	ldr	x22, [x0]
     614:	str	x23, [sp, #48]
     618:	ldr	x4, [x1, #16]
     61c:	str	x4, [x0, #16]
     620:	ldr	x23, [x0, #8]
     624:	stp	x3, x2, [x0]
     628:	stp	xzr, xzr, [x1]
     62c:	cmp	x22, x23
     630:	str	xzr, [x1, #16]
     634:	b.eq	69c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x9c>  // b.none
     638:	stp	x19, x20, [sp, #16]
     63c:	mov	x19, x22
     640:	ldp	x21, x20, [x19, #24]
     644:	cmp	x21, x20
     648:	b.eq	668 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x68>  // b.none
     64c:	nop
     650:	mov	x0, x21
     654:	add	x21, x21, #0x30
     658:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     65c:	cmp	x20, x21
     660:	b.ne	650 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x50>  // b.any
     664:	ldr	x20, [x19, #24]
     668:	cbz	x20, 674 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x74>
     66c:	mov	x0, x20
     670:	bl	0 <_ZdlPv>
     674:	ldr	w0, [x19, #16]
     678:	cmp	w0, #0x40
     67c:	b.ls	68c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x8c>  // b.plast
     680:	ldr	x0, [x19, #8]
     684:	cbz	x0, 68c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x8c>
     688:	bl	0 <_ZdaPv>
     68c:	add	x19, x19, #0x30
     690:	cmp	x23, x19
     694:	b.ne	640 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x40>  // b.any
     698:	ldp	x19, x20, [sp, #16]
     69c:	cbz	x22, 6b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0xb4>
     6a0:	mov	x0, x22
     6a4:	ldp	x21, x22, [sp, #32]
     6a8:	ldr	x23, [sp, #48]
     6ac:	ldp	x29, x30, [sp], #64
     6b0:	b	0 <_ZdlPv>
     6b4:	ldp	x21, x22, [sp, #32]
     6b8:	ldr	x23, [sp, #48]
     6bc:	ldp	x29, x30, [sp], #64
     6c0:	ret
     6c4:	nop

00000000000006c8 <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>:
     6c8:	stp	x29, x30, [sp, #-16]!
     6cc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     6d0:	mov	w1, #0x1                   	// #1
     6d4:	mov	x29, sp
     6d8:	add	x0, x0, #0x0
     6dc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

00000000000006e0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>:
     6e0:	stp	x29, x30, [sp, #-96]!
     6e4:	mov	x29, sp
     6e8:	stp	x21, x22, [sp, #32]
     6ec:	ldr	x22, [x0, #704]
     6f0:	str	x25, [sp, #64]
     6f4:	ldr	x25, [x0, #696]
     6f8:	stp	x19, x20, [sp, #16]
     6fc:	stp	x23, x24, [sp, #48]
     700:	cmp	x25, x22
     704:	mov	x23, x0
     708:	mov	x24, x1
     70c:	b.eq	7b0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xd0>  // b.none
     710:	mov	x19, x25
     714:	nop
     718:	ldp	x20, x21, [x19, #104]
     71c:	cmp	x20, x21
     720:	b.eq	73c <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x5c>  // b.none
     724:	nop
     728:	ldr	x0, [x20], #8
     72c:	bl	0 <free>
     730:	cmp	x21, x20
     734:	b.ne	728 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x48>  // b.any
     738:	ldr	x21, [x19, #104]
     73c:	cbz	x21, 748 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x68>
     740:	mov	x0, x21
     744:	bl	0 <_ZdlPv>
     748:	ldp	x20, x21, [x19, #80]
     74c:	cmp	x20, x21
     750:	b.eq	788 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xa8>  // b.none
     754:	nop
     758:	add	x0, x20, #0x18
     75c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     760:	ldr	w0, [x20, #16]
     764:	cmp	w0, #0x40
     768:	b.ls	778 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x98>  // b.plast
     76c:	ldr	x0, [x20, #8]
     770:	cbz	x0, 778 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x98>
     774:	bl	0 <_ZdaPv>
     778:	add	x20, x20, #0x30
     77c:	cmp	x21, x20
     780:	b.ne	758 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x78>  // b.any
     784:	ldr	x21, [x19, #80]
     788:	cbz	x21, 794 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xb4>
     78c:	mov	x0, x21
     790:	bl	0 <_ZdlPv>
     794:	ldr	x1, [x19, #48]
     798:	add	x0, x19, #0x20
     79c:	add	x19, x19, #0x80
     7a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     7a4:	cmp	x22, x19
     7a8:	b.ne	718 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x38>  // b.any
     7ac:	str	x25, [x23, #704]
     7b0:	mov	x0, x23
     7b4:	add	x20, sp, #0x50
     7b8:	bl	0 <_ZN4llvm11Interpreter17runAtExitHandlersEv>
     7bc:	add	x0, x24, #0x8
     7c0:	mov	x8, x20
     7c4:	mov	w1, #0x20                  	// #32
     7c8:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
     7cc:	ldr	w19, [sp, #88]
     7d0:	cmp	w19, #0x40
     7d4:	b.ls	7f8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x118>  // b.plast
     7d8:	mov	x0, x20
     7dc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     7e0:	sub	w19, w19, w0
     7e4:	cmp	w19, #0x40
     7e8:	b.hi	800 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x120>  // b.pmore
     7ec:	ldr	x0, [sp, #80]
     7f0:	ldr	x0, [x0]
     7f4:	bl	0 <exit>
     7f8:	ldr	x0, [sp, #80]
     7fc:	bl	0 <exit>
     800:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     804:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     808:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     80c:	add	x3, x3, #0x0
     810:	add	x1, x1, #0x0
     814:	add	x0, x0, #0x0
     818:	mov	w2, #0x657                 	// #1623
     81c:	bl	0 <__assert_fail>

0000000000000820 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>:
     820:	stp	x29, x30, [sp, #-96]!
     824:	add	x3, x8, #0x18
     828:	mov	x29, sp
     82c:	stp	x19, x20, [sp, #16]
     830:	mov	x19, x2
     834:	mov	x2, x8
     838:	stp	x23, x24, [sp, #48]
     83c:	mov	w20, #0x1                   	// #1
     840:	mov	x23, x8
     844:	stp	x25, x26, [sp, #64]
     848:	mov	x25, x0
     84c:	mov	x26, x1
     850:	str	xzr, [x8, #24]
     854:	stp	xzr, xzr, [x3, #8]
     858:	str	xzr, [x2], #8
     85c:	ldrb	w0, [x19, #8]
     860:	str	xzr, [x8, #8]
     864:	str	w20, [x2, #8]
     868:	cmp	w0, #0xf
     86c:	b.eq	8d4 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
     870:	cmp	w0, #0x10
     874:	b.eq	948 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x128>  // b.none
     878:	cmp	w0, #0xb
     87c:	b.eq	900 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
     880:	stp	x21, x22, [sp, #32]
     884:	str	x27, [sp, #80]
     888:	bl	0 <_ZN4llvm4dbgsEv>
     88c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     890:	add	x1, x1, #0x0
     894:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     898:	mov	x20, x0
     89c:	mov	w2, #0x0                   	// #0
     8a0:	mov	w3, #0x0                   	// #0
     8a4:	mov	x0, x19
     8a8:	mov	x1, x20
     8ac:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     8b0:	mov	x0, x20
     8b4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     8b8:	add	x1, x1, #0x0
     8bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     8c0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     8c4:	mov	w2, #0xc8                  	// #200
     8c8:	add	x1, x1, #0x0
     8cc:	mov	x0, #0x0                   	// #0
     8d0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     8d4:	ldr	x0, [x26]
     8d8:	ldr	x1, [x25]
     8dc:	cmp	x1, x0
     8e0:	cset	x0, eq  // eq = none
     8e4:	str	x0, [x8, #8]
     8e8:	mov	x0, x23
     8ec:	ldp	x19, x20, [sp, #16]
     8f0:	ldp	x23, x24, [sp, #48]
     8f4:	ldp	x25, x26, [sp, #64]
     8f8:	ldp	x29, x30, [sp], #96
     8fc:	ret
     900:	ldr	w2, [x25, #16]
     904:	add	x0, x25, #0x8
     908:	ldr	w3, [x1, #16]
     90c:	add	x1, x1, #0x8
     910:	cmp	w2, w3
     914:	b.ne	a74 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
     918:	cmp	w2, #0x40
     91c:	b.ls	a58 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x238>  // b.plast
     920:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     924:	and	w0, w0, #0xff
     928:	and	x0, x0, #0xff
     92c:	str	x0, [x23, #8]
     930:	mov	x0, x23
     934:	ldp	x19, x20, [sp, #16]
     938:	ldp	x23, x24, [sp, #48]
     93c:	ldp	x25, x26, [sp, #64]
     940:	ldp	x29, x30, [sp], #96
     944:	ret
     948:	ldp	x1, x0, [x25, #24]
     94c:	stp	x21, x22, [sp, #32]
     950:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     954:	ldp	x4, x2, [x26, #24]
     958:	movk	x21, #0xaaab
     95c:	sub	x0, x0, x1
     960:	asr	x1, x0, #4
     964:	sub	x2, x2, x4
     968:	cmp	x2, x0
     96c:	mul	x1, x1, x21
     970:	b.ne	a9c <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x27c>  // b.any
     974:	mov	x0, x3
     978:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     97c:	ldp	x4, x0, [x25, #24]
     980:	cmp	x0, x4
     984:	b.eq	a6c <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x24c>  // b.none
     988:	mov	w24, #0x0                   	// #0
     98c:	mov	x2, #0x0                   	// #0
     990:	str	x27, [sp, #80]
     994:	b	9e8 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>
     998:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     99c:	and	w22, w0, #0xff
     9a0:	ldr	w0, [x19, #16]
     9a4:	and	x22, x22, #0xff
     9a8:	add	x27, x19, #0x8
     9ac:	cmp	w0, #0x40
     9b0:	b.ls	9c0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>  // b.plast
     9b4:	ldr	x0, [x19, #8]
     9b8:	cbz	x0, 9c0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
     9bc:	bl	0 <_ZdaPv>
     9c0:	str	x22, [x19, #8]
     9c4:	add	w2, w24, #0x1
     9c8:	mov	x24, x2
     9cc:	ldp	x4, x3, [x25, #24]
     9d0:	str	w20, [x27, #8]
     9d4:	sub	x3, x3, x4
     9d8:	asr	x3, x3, #4
     9dc:	mul	x3, x3, x21
     9e0:	cmp	x3, w2, uxtw
     9e4:	b.ls	a38 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x218>  // b.plast
     9e8:	add	x2, x2, x2, lsl #1
     9ec:	ldr	x3, [x26, #24]
     9f0:	lsl	x2, x2, #4
     9f4:	add	x4, x4, x2
     9f8:	add	x3, x3, x2
     9fc:	add	x0, x4, #0x8
     a00:	ldr	x19, [x23, #24]
     a04:	add	x1, x3, #0x8
     a08:	ldr	w5, [x0, #8]
     a0c:	ldr	w6, [x1, #8]
     a10:	add	x19, x19, x2
     a14:	cmp	w5, w6
     a18:	b.ne	a7c <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x25c>  // b.any
     a1c:	cmp	w5, #0x40
     a20:	b.hi	998 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.pmore
     a24:	ldr	x0, [x3, #8]
     a28:	ldr	x1, [x4, #8]
     a2c:	cmp	x1, x0
     a30:	cset	w22, eq  // eq = none
     a34:	b	9a0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x180>
     a38:	mov	x0, x23
     a3c:	ldp	x19, x20, [sp, #16]
     a40:	ldp	x21, x22, [sp, #32]
     a44:	ldp	x23, x24, [sp, #48]
     a48:	ldp	x25, x26, [sp, #64]
     a4c:	ldr	x27, [sp, #80]
     a50:	ldp	x29, x30, [sp], #96
     a54:	ret
     a58:	ldr	x0, [x26, #8]
     a5c:	ldr	x1, [x25, #8]
     a60:	cmp	x1, x0
     a64:	cset	w0, eq  // eq = none
     a68:	b	928 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x108>
     a6c:	ldp	x21, x22, [sp, #32]
     a70:	b	8e8 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
     a74:	stp	x21, x22, [sp, #32]
     a78:	str	x27, [sp, #80]
     a7c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     a80:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     a84:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     a88:	add	x3, x3, #0x0
     a8c:	add	x1, x1, #0x0
     a90:	add	x0, x0, #0x0
     a94:	mov	w2, #0x47f                 	// #1151
     a98:	bl	0 <__assert_fail>
     a9c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     aa0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     aa4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     aa8:	add	x3, x3, #0x0
     aac:	add	x1, x1, #0x0
     ab0:	add	x0, x0, #0x0
     ab4:	mov	w2, #0xc4                  	// #196
     ab8:	str	x27, [sp, #80]
     abc:	bl	0 <__assert_fail>

0000000000000ac0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>:
     ac0:	stp	x29, x30, [sp, #-96]!
     ac4:	add	x3, x8, #0x18
     ac8:	mov	x29, sp
     acc:	stp	x19, x20, [sp, #16]
     ad0:	mov	x19, x2
     ad4:	mov	x2, x8
     ad8:	stp	x23, x24, [sp, #48]
     adc:	mov	w20, #0x1                   	// #1
     ae0:	mov	x23, x8
     ae4:	stp	x25, x26, [sp, #64]
     ae8:	mov	x25, x0
     aec:	mov	x26, x1
     af0:	str	xzr, [x8, #24]
     af4:	stp	xzr, xzr, [x3, #8]
     af8:	str	xzr, [x2], #8
     afc:	ldrb	w0, [x19, #8]
     b00:	str	xzr, [x8, #8]
     b04:	str	w20, [x2, #8]
     b08:	cmp	w0, #0xf
     b0c:	b.eq	b74 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
     b10:	cmp	w0, #0x10
     b14:	b.eq	bec <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x12c>  // b.none
     b18:	cmp	w0, #0xb
     b1c:	b.eq	ba0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
     b20:	stp	x21, x22, [sp, #32]
     b24:	str	x27, [sp, #80]
     b28:	bl	0 <_ZN4llvm4dbgsEv>
     b2c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b30:	add	x1, x1, #0x0
     b34:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b38:	mov	x20, x0
     b3c:	mov	w2, #0x0                   	// #0
     b40:	mov	w3, #0x0                   	// #0
     b44:	mov	x0, x19
     b48:	mov	x1, x20
     b4c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     b50:	mov	x0, x20
     b54:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b58:	add	x1, x1, #0x0
     b5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b60:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b64:	mov	w2, #0xd6                  	// #214
     b68:	add	x1, x1, #0x0
     b6c:	mov	x0, #0x0                   	// #0
     b70:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     b74:	ldr	x0, [x26]
     b78:	ldr	x1, [x25]
     b7c:	cmp	x1, x0
     b80:	cset	x0, ne  // ne = any
     b84:	str	x0, [x8, #8]
     b88:	mov	x0, x23
     b8c:	ldp	x19, x20, [sp, #16]
     b90:	ldp	x23, x24, [sp, #48]
     b94:	ldp	x25, x26, [sp, #64]
     b98:	ldp	x29, x30, [sp], #96
     b9c:	ret
     ba0:	ldr	w2, [x25, #16]
     ba4:	add	x0, x25, #0x8
     ba8:	ldr	w3, [x1, #16]
     bac:	add	x1, x1, #0x8
     bb0:	cmp	w2, w3
     bb4:	b.ne	d1c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x25c>  // b.any
     bb8:	cmp	w2, #0x40
     bbc:	b.ls	d00 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x240>  // b.plast
     bc0:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     bc4:	and	w0, w0, #0xff
     bc8:	eor	w0, w0, #0x1
     bcc:	and	x0, x0, #0xff
     bd0:	str	x0, [x23, #8]
     bd4:	mov	x0, x23
     bd8:	ldp	x19, x20, [sp, #16]
     bdc:	ldp	x23, x24, [sp, #48]
     be0:	ldp	x25, x26, [sp, #64]
     be4:	ldp	x29, x30, [sp], #96
     be8:	ret
     bec:	ldp	x1, x0, [x25, #24]
     bf0:	stp	x21, x22, [sp, #32]
     bf4:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     bf8:	ldp	x4, x2, [x26, #24]
     bfc:	movk	x21, #0xaaab
     c00:	sub	x0, x0, x1
     c04:	asr	x1, x0, #4
     c08:	sub	x2, x2, x4
     c0c:	cmp	x2, x0
     c10:	mul	x1, x1, x21
     c14:	b.ne	d44 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x284>  // b.any
     c18:	mov	x0, x3
     c1c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     c20:	ldp	x4, x0, [x25, #24]
     c24:	cmp	x0, x4
     c28:	b.eq	d14 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.none
     c2c:	mov	w24, #0x0                   	// #0
     c30:	mov	x2, #0x0                   	// #0
     c34:	str	x27, [sp, #80]
     c38:	b	c90 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>
     c3c:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     c40:	and	w19, w0, #0xff
     c44:	ldr	w0, [x22, #16]
     c48:	eor	w19, w19, #0x1
     c4c:	and	x19, x19, #0xff
     c50:	add	x27, x22, #0x8
     c54:	cmp	w0, #0x40
     c58:	b.ls	c68 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>  // b.plast
     c5c:	ldr	x0, [x22, #8]
     c60:	cbz	x0, c68 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>
     c64:	bl	0 <_ZdaPv>
     c68:	str	x19, [x22, #8]
     c6c:	add	w2, w24, #0x1
     c70:	mov	x24, x2
     c74:	ldp	x4, x3, [x25, #24]
     c78:	str	w20, [x27, #8]
     c7c:	sub	x3, x3, x4
     c80:	asr	x3, x3, #4
     c84:	mul	x3, x3, x21
     c88:	cmp	x3, w2, uxtw
     c8c:	b.ls	ce0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.plast
     c90:	add	x2, x2, x2, lsl #1
     c94:	ldr	x3, [x26, #24]
     c98:	lsl	x2, x2, #4
     c9c:	add	x4, x4, x2
     ca0:	add	x3, x3, x2
     ca4:	add	x0, x4, #0x8
     ca8:	ldr	x22, [x23, #24]
     cac:	add	x1, x3, #0x8
     cb0:	ldr	w5, [x0, #8]
     cb4:	ldr	w6, [x1, #8]
     cb8:	add	x22, x22, x2
     cbc:	cmp	w5, w6
     cc0:	b.ne	d24 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.any
     cc4:	cmp	w5, #0x40
     cc8:	b.hi	c3c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.pmore
     ccc:	ldr	x0, [x3, #8]
     cd0:	ldr	x1, [x4, #8]
     cd4:	cmp	x1, x0
     cd8:	cset	w19, eq  // eq = none
     cdc:	b	c44 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x184>
     ce0:	mov	x0, x23
     ce4:	ldp	x19, x20, [sp, #16]
     ce8:	ldp	x21, x22, [sp, #32]
     cec:	ldp	x23, x24, [sp, #48]
     cf0:	ldp	x25, x26, [sp, #64]
     cf4:	ldr	x27, [sp, #80]
     cf8:	ldp	x29, x30, [sp], #96
     cfc:	ret
     d00:	ldr	x0, [x26, #8]
     d04:	ldr	x1, [x25, #8]
     d08:	cmp	x1, x0
     d0c:	cset	w0, eq  // eq = none
     d10:	b	bc8 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x108>
     d14:	ldp	x21, x22, [sp, #32]
     d18:	b	b88 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
     d1c:	stp	x21, x22, [sp, #32]
     d20:	str	x27, [sp, #80]
     d24:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     d28:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     d2c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     d30:	add	x3, x3, #0x0
     d34:	add	x1, x1, #0x0
     d38:	add	x0, x0, #0x0
     d3c:	mov	w2, #0x47f                 	// #1151
     d40:	bl	0 <__assert_fail>
     d44:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     d48:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     d4c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     d50:	add	x3, x3, #0x0
     d54:	add	x1, x1, #0x0
     d58:	add	x0, x0, #0x0
     d5c:	mov	w2, #0xd2                  	// #210
     d60:	str	x27, [sp, #80]
     d64:	bl	0 <__assert_fail>

0000000000000d68 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
     d68:	stp	x29, x30, [sp, #-112]!
     d6c:	add	x3, x8, #0x18
     d70:	mov	x29, sp
     d74:	stp	x19, x20, [sp, #16]
     d78:	mov	x19, x0
     d7c:	mov	w20, #0x1                   	// #1
     d80:	stp	x21, x22, [sp, #32]
     d84:	mov	x21, x2
     d88:	mov	x2, x8
     d8c:	stp	x25, x26, [sp, #64]
     d90:	mov	x25, x8
     d94:	stp	x27, x28, [sp, #80]
     d98:	mov	x28, x1
     d9c:	str	xzr, [x8, #24]
     da0:	stp	xzr, xzr, [x3, #8]
     da4:	str	xzr, [x2], #8
     da8:	ldrb	w0, [x21, #8]
     dac:	str	xzr, [x8, #8]
     db0:	str	w20, [x2, #8]
     db4:	cmp	w0, #0xf
     db8:	b.eq	e1c <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
     dbc:	cmp	w0, #0x10
     dc0:	b.eq	e7c <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x114>  // b.none
     dc4:	cmp	w0, #0xb
     dc8:	b.eq	e4c <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
     dcc:	stp	x23, x24, [sp, #48]
     dd0:	bl	0 <_ZN4llvm4dbgsEv>
     dd4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     dd8:	add	x1, x1, #0x0
     ddc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     de0:	mov	w2, #0x0                   	// #0
     de4:	mov	x19, x0
     de8:	mov	w3, #0x0                   	// #0
     dec:	mov	x0, x21
     df0:	mov	x1, x19
     df4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     df8:	mov	x0, x19
     dfc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e00:	add	x1, x1, #0x0
     e04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e08:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e0c:	mov	w2, #0xe4                  	// #228
     e10:	add	x1, x1, #0x0
     e14:	mov	x0, #0x0                   	// #0
     e18:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     e1c:	ldr	x0, [x28]
     e20:	ldr	x1, [x19]
     e24:	cmp	x1, x0
     e28:	cset	x0, cc  // cc = lo, ul, last
     e2c:	str	x0, [x8, #8]
     e30:	mov	x0, x25
     e34:	ldp	x19, x20, [sp, #16]
     e38:	ldp	x21, x22, [sp, #32]
     e3c:	ldp	x25, x26, [sp, #64]
     e40:	ldp	x27, x28, [sp, #80]
     e44:	ldp	x29, x30, [sp], #112
     e48:	ret
     e4c:	add	x1, x1, #0x8
     e50:	add	x0, x19, #0x8
     e54:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     e58:	lsr	w0, w0, #31
     e5c:	str	x0, [x25, #8]
     e60:	mov	x0, x25
     e64:	ldp	x19, x20, [sp, #16]
     e68:	ldp	x21, x22, [sp, #32]
     e6c:	ldp	x25, x26, [sp, #64]
     e70:	ldp	x27, x28, [sp, #80]
     e74:	ldp	x29, x30, [sp], #112
     e78:	ret
     e7c:	ldp	x1, x0, [x19, #24]
     e80:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     e84:	ldp	x4, x2, [x28, #24]
     e88:	movk	x22, #0xaaab
     e8c:	sub	x0, x0, x1
     e90:	asr	x1, x0, #4
     e94:	sub	x2, x2, x4
     e98:	cmp	x2, x0
     e9c:	mul	x1, x1, x22
     ea0:	b.ne	f60 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>  // b.any
     ea4:	mov	x0, x3
     ea8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     eac:	ldp	x21, x0, [x19, #24]
     eb0:	str	x0, [sp, #104]
     eb4:	cmp	x0, x21
     eb8:	b.eq	e30 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
     ebc:	mov	w26, #0x0                   	// #0
     ec0:	mov	x2, #0x0                   	// #0
     ec4:	stp	x23, x24, [sp, #48]
     ec8:	add	x2, x2, x2, lsl #1
     ecc:	ldr	x3, [x28, #24]
     ed0:	lsl	x2, x2, #4
     ed4:	ldr	x23, [x25, #24]
     ed8:	add	x0, x21, x2
     edc:	add	x0, x0, #0x8
     ee0:	add	x23, x23, x2
     ee4:	add	x2, x3, x2
     ee8:	add	x1, x2, #0x8
     eec:	add	x24, x23, #0x8
     ef0:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     ef4:	lsr	w27, w0, #31
     ef8:	ldr	w1, [x23, #16]
     efc:	cmp	w1, #0x40
     f00:	b.ls	f18 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>  // b.plast
     f04:	ldr	x0, [x23, #8]
     f08:	cbz	x0, f18 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>
     f0c:	bl	0 <_ZdaPv>
     f10:	ldp	x21, x0, [x19, #24]
     f14:	str	x0, [sp, #104]
     f18:	ldr	x0, [sp, #104]
     f1c:	str	x27, [x23, #8]
     f20:	add	w2, w26, #0x1
     f24:	str	w20, [x24, #8]
     f28:	sub	x3, x0, x21
     f2c:	mov	x26, x2
     f30:	asr	x3, x3, #4
     f34:	mul	x3, x3, x22
     f38:	cmp	x3, w2, uxtw
     f3c:	b.hi	ec8 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
     f40:	mov	x0, x25
     f44:	ldp	x19, x20, [sp, #16]
     f48:	ldp	x21, x22, [sp, #32]
     f4c:	ldp	x23, x24, [sp, #48]
     f50:	ldp	x25, x26, [sp, #64]
     f54:	ldp	x27, x28, [sp, #80]
     f58:	ldp	x29, x30, [sp], #112
     f5c:	ret
     f60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     f64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     f68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     f6c:	add	x3, x3, #0x0
     f70:	add	x1, x1, #0x0
     f74:	add	x0, x0, #0x0
     f78:	mov	w2, #0xe0                  	// #224
     f7c:	stp	x23, x24, [sp, #48]
     f80:	bl	0 <__assert_fail>
     f84:	nop

0000000000000f88 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>:
     f88:	stp	x29, x30, [sp, #-112]!
     f8c:	add	x3, x8, #0x18
     f90:	mov	x29, sp
     f94:	stp	x19, x20, [sp, #16]
     f98:	mov	x19, x0
     f9c:	mov	w20, #0x1                   	// #1
     fa0:	stp	x21, x22, [sp, #32]
     fa4:	mov	x21, x2
     fa8:	mov	x2, x8
     fac:	stp	x25, x26, [sp, #64]
     fb0:	mov	x25, x8
     fb4:	stp	x27, x28, [sp, #80]
     fb8:	mov	x28, x1
     fbc:	str	xzr, [x8, #24]
     fc0:	stp	xzr, xzr, [x3, #8]
     fc4:	str	xzr, [x2], #8
     fc8:	ldrb	w0, [x21, #8]
     fcc:	str	xzr, [x8, #8]
     fd0:	str	w20, [x2, #8]
     fd4:	cmp	w0, #0xf
     fd8:	b.eq	103c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
     fdc:	cmp	w0, #0x10
     fe0:	b.eq	109c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x114>  // b.none
     fe4:	cmp	w0, #0xb
     fe8:	b.eq	106c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
     fec:	stp	x23, x24, [sp, #48]
     ff0:	bl	0 <_ZN4llvm4dbgsEv>
     ff4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     ff8:	add	x1, x1, #0x0
     ffc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1000:	mov	w2, #0x0                   	// #0
    1004:	mov	x19, x0
    1008:	mov	w3, #0x0                   	// #0
    100c:	mov	x0, x21
    1010:	mov	x1, x19
    1014:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1018:	mov	x0, x19
    101c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1020:	add	x1, x1, #0x0
    1024:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1028:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    102c:	mov	w2, #0xf2                  	// #242
    1030:	add	x1, x1, #0x0
    1034:	mov	x0, #0x0                   	// #0
    1038:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    103c:	ldr	x0, [x28]
    1040:	ldr	x1, [x19]
    1044:	cmp	x1, x0
    1048:	cset	x0, cc  // cc = lo, ul, last
    104c:	str	x0, [x8, #8]
    1050:	mov	x0, x25
    1054:	ldp	x19, x20, [sp, #16]
    1058:	ldp	x21, x22, [sp, #32]
    105c:	ldp	x25, x26, [sp, #64]
    1060:	ldp	x27, x28, [sp, #80]
    1064:	ldp	x29, x30, [sp], #112
    1068:	ret
    106c:	add	x1, x1, #0x8
    1070:	add	x0, x19, #0x8
    1074:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1078:	lsr	w0, w0, #31
    107c:	str	x0, [x25, #8]
    1080:	mov	x0, x25
    1084:	ldp	x19, x20, [sp, #16]
    1088:	ldp	x21, x22, [sp, #32]
    108c:	ldp	x25, x26, [sp, #64]
    1090:	ldp	x27, x28, [sp, #80]
    1094:	ldp	x29, x30, [sp], #112
    1098:	ret
    109c:	ldp	x1, x0, [x19, #24]
    10a0:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    10a4:	ldp	x4, x2, [x28, #24]
    10a8:	movk	x22, #0xaaab
    10ac:	sub	x0, x0, x1
    10b0:	asr	x1, x0, #4
    10b4:	sub	x2, x2, x4
    10b8:	cmp	x2, x0
    10bc:	mul	x1, x1, x22
    10c0:	b.ne	1180 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>  // b.any
    10c4:	mov	x0, x3
    10c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    10cc:	ldp	x21, x0, [x19, #24]
    10d0:	str	x0, [sp, #104]
    10d4:	cmp	x0, x21
    10d8:	b.eq	1050 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    10dc:	mov	w26, #0x0                   	// #0
    10e0:	mov	x2, #0x0                   	// #0
    10e4:	stp	x23, x24, [sp, #48]
    10e8:	add	x2, x2, x2, lsl #1
    10ec:	ldr	x3, [x28, #24]
    10f0:	lsl	x2, x2, #4
    10f4:	ldr	x23, [x25, #24]
    10f8:	add	x0, x21, x2
    10fc:	add	x0, x0, #0x8
    1100:	add	x23, x23, x2
    1104:	add	x2, x3, x2
    1108:	add	x1, x2, #0x8
    110c:	add	x24, x23, #0x8
    1110:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1114:	lsr	w27, w0, #31
    1118:	ldr	w1, [x23, #16]
    111c:	cmp	w1, #0x40
    1120:	b.ls	1138 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>  // b.plast
    1124:	ldr	x0, [x23, #8]
    1128:	cbz	x0, 1138 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>
    112c:	bl	0 <_ZdaPv>
    1130:	ldp	x21, x0, [x19, #24]
    1134:	str	x0, [sp, #104]
    1138:	ldr	x0, [sp, #104]
    113c:	str	x27, [x23, #8]
    1140:	add	w2, w26, #0x1
    1144:	str	w20, [x24, #8]
    1148:	sub	x3, x0, x21
    114c:	mov	x26, x2
    1150:	asr	x3, x3, #4
    1154:	mul	x3, x3, x22
    1158:	cmp	x3, w2, uxtw
    115c:	b.hi	10e8 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1160:	mov	x0, x25
    1164:	ldp	x19, x20, [sp, #16]
    1168:	ldp	x21, x22, [sp, #32]
    116c:	ldp	x23, x24, [sp, #48]
    1170:	ldp	x25, x26, [sp, #64]
    1174:	ldp	x27, x28, [sp, #80]
    1178:	ldp	x29, x30, [sp], #112
    117c:	ret
    1180:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1184:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1188:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    118c:	add	x3, x3, #0x0
    1190:	add	x1, x1, #0x0
    1194:	add	x0, x0, #0x0
    1198:	mov	w2, #0xee                  	// #238
    119c:	stp	x23, x24, [sp, #48]
    11a0:	bl	0 <__assert_fail>
    11a4:	nop

00000000000011a8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
    11a8:	stp	x29, x30, [sp, #-112]!
    11ac:	add	x3, x8, #0x18
    11b0:	mov	x29, sp
    11b4:	stp	x19, x20, [sp, #16]
    11b8:	mov	x19, x0
    11bc:	mov	w20, #0x1                   	// #1
    11c0:	stp	x21, x22, [sp, #32]
    11c4:	mov	x21, x2
    11c8:	mov	x2, x8
    11cc:	stp	x25, x26, [sp, #64]
    11d0:	mov	x25, x8
    11d4:	stp	x27, x28, [sp, #80]
    11d8:	mov	x27, x1
    11dc:	str	xzr, [x8, #24]
    11e0:	stp	xzr, xzr, [x3, #8]
    11e4:	str	xzr, [x2], #8
    11e8:	ldrb	w0, [x21, #8]
    11ec:	str	xzr, [x8, #8]
    11f0:	str	w20, [x2, #8]
    11f4:	cmp	w0, #0xf
    11f8:	b.eq	125c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    11fc:	cmp	w0, #0x10
    1200:	b.eq	12c0 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1204:	cmp	w0, #0xb
    1208:	b.eq	128c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    120c:	stp	x23, x24, [sp, #48]
    1210:	bl	0 <_ZN4llvm4dbgsEv>
    1214:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1218:	add	x1, x1, #0x0
    121c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1220:	mov	w2, #0x0                   	// #0
    1224:	mov	x19, x0
    1228:	mov	w3, #0x0                   	// #0
    122c:	mov	x0, x21
    1230:	mov	x1, x19
    1234:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1238:	mov	x0, x19
    123c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1240:	add	x1, x1, #0x0
    1244:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1248:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    124c:	mov	w2, #0x100                 	// #256
    1250:	add	x1, x1, #0x0
    1254:	mov	x0, #0x0                   	// #0
    1258:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    125c:	ldr	x0, [x27]
    1260:	ldr	x1, [x19]
    1264:	cmp	x1, x0
    1268:	cset	x0, hi  // hi = pmore
    126c:	str	x0, [x8, #8]
    1270:	mov	x0, x25
    1274:	ldp	x19, x20, [sp, #16]
    1278:	ldp	x21, x22, [sp, #32]
    127c:	ldp	x25, x26, [sp, #64]
    1280:	ldp	x27, x28, [sp, #80]
    1284:	ldp	x29, x30, [sp], #112
    1288:	ret
    128c:	add	x1, x1, #0x8
    1290:	add	x0, x19, #0x8
    1294:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1298:	cmp	w0, #0x0
    129c:	cset	x0, gt
    12a0:	str	x0, [x25, #8]
    12a4:	mov	x0, x25
    12a8:	ldp	x19, x20, [sp, #16]
    12ac:	ldp	x21, x22, [sp, #32]
    12b0:	ldp	x25, x26, [sp, #64]
    12b4:	ldp	x27, x28, [sp, #80]
    12b8:	ldp	x29, x30, [sp], #112
    12bc:	ret
    12c0:	ldp	x1, x0, [x19, #24]
    12c4:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    12c8:	ldp	x4, x2, [x27, #24]
    12cc:	movk	x22, #0xaaab
    12d0:	sub	x0, x0, x1
    12d4:	asr	x1, x0, #4
    12d8:	sub	x2, x2, x4
    12dc:	cmp	x2, x0
    12e0:	mul	x1, x1, x22
    12e4:	b.ne	13a4 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    12e8:	mov	x0, x3
    12ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    12f0:	ldp	x28, x21, [x19, #24]
    12f4:	cmp	x21, x28
    12f8:	b.eq	1270 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    12fc:	mov	w26, #0x0                   	// #0
    1300:	mov	x2, #0x0                   	// #0
    1304:	stp	x23, x24, [sp, #48]
    1308:	add	x2, x2, x2, lsl #1
    130c:	ldr	x3, [x27, #24]
    1310:	lsl	x2, x2, #4
    1314:	ldr	x23, [x25, #24]
    1318:	add	x0, x28, x2
    131c:	add	x0, x0, #0x8
    1320:	add	x23, x23, x2
    1324:	add	x2, x3, x2
    1328:	add	x1, x2, #0x8
    132c:	add	x24, x23, #0x8
    1330:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1334:	cmp	w0, #0x0
    1338:	ldr	w1, [x23, #16]
    133c:	cset	x2, gt
    1340:	cmp	w1, #0x40
    1344:	b.ls	1360 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    1348:	ldr	x0, [x23, #8]
    134c:	cbz	x0, 1360 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    1350:	str	x2, [sp, #104]
    1354:	bl	0 <_ZdaPv>
    1358:	ldp	x28, x21, [x19, #24]
    135c:	ldr	x2, [sp, #104]
    1360:	sub	x3, x21, x28
    1364:	str	x2, [x23, #8]
    1368:	add	w2, w26, #0x1
    136c:	asr	x3, x3, #4
    1370:	str	w20, [x24, #8]
    1374:	mov	x26, x2
    1378:	mul	x3, x3, x22
    137c:	cmp	x3, w2, uxtw
    1380:	b.hi	1308 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1384:	mov	x0, x25
    1388:	ldp	x19, x20, [sp, #16]
    138c:	ldp	x21, x22, [sp, #32]
    1390:	ldp	x23, x24, [sp, #48]
    1394:	ldp	x25, x26, [sp, #64]
    1398:	ldp	x27, x28, [sp, #80]
    139c:	ldp	x29, x30, [sp], #112
    13a0:	ret
    13a4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    13a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    13ac:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    13b0:	add	x3, x3, #0x0
    13b4:	add	x1, x1, #0x0
    13b8:	add	x0, x0, #0x0
    13bc:	mov	w2, #0xfc                  	// #252
    13c0:	stp	x23, x24, [sp, #48]
    13c4:	bl	0 <__assert_fail>

00000000000013c8 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>:
    13c8:	stp	x29, x30, [sp, #-112]!
    13cc:	add	x3, x8, #0x18
    13d0:	mov	x29, sp
    13d4:	stp	x19, x20, [sp, #16]
    13d8:	mov	x19, x0
    13dc:	mov	w20, #0x1                   	// #1
    13e0:	stp	x21, x22, [sp, #32]
    13e4:	mov	x21, x2
    13e8:	mov	x2, x8
    13ec:	stp	x25, x26, [sp, #64]
    13f0:	mov	x25, x8
    13f4:	stp	x27, x28, [sp, #80]
    13f8:	mov	x27, x1
    13fc:	str	xzr, [x8, #24]
    1400:	stp	xzr, xzr, [x3, #8]
    1404:	str	xzr, [x2], #8
    1408:	ldrb	w0, [x21, #8]
    140c:	str	xzr, [x8, #8]
    1410:	str	w20, [x2, #8]
    1414:	cmp	w0, #0xf
    1418:	b.eq	147c <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    141c:	cmp	w0, #0x10
    1420:	b.eq	14e0 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1424:	cmp	w0, #0xb
    1428:	b.eq	14ac <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    142c:	stp	x23, x24, [sp, #48]
    1430:	bl	0 <_ZN4llvm4dbgsEv>
    1434:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1438:	add	x1, x1, #0x0
    143c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1440:	mov	w2, #0x0                   	// #0
    1444:	mov	x19, x0
    1448:	mov	w3, #0x0                   	// #0
    144c:	mov	x0, x21
    1450:	mov	x1, x19
    1454:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1458:	mov	x0, x19
    145c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1460:	add	x1, x1, #0x0
    1464:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1468:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    146c:	mov	w2, #0x10e                 	// #270
    1470:	add	x1, x1, #0x0
    1474:	mov	x0, #0x0                   	// #0
    1478:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    147c:	ldr	x0, [x27]
    1480:	ldr	x1, [x19]
    1484:	cmp	x1, x0
    1488:	cset	x0, hi  // hi = pmore
    148c:	str	x0, [x8, #8]
    1490:	mov	x0, x25
    1494:	ldp	x19, x20, [sp, #16]
    1498:	ldp	x21, x22, [sp, #32]
    149c:	ldp	x25, x26, [sp, #64]
    14a0:	ldp	x27, x28, [sp, #80]
    14a4:	ldp	x29, x30, [sp], #112
    14a8:	ret
    14ac:	add	x1, x1, #0x8
    14b0:	add	x0, x19, #0x8
    14b4:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    14b8:	cmp	w0, #0x0
    14bc:	cset	x0, gt
    14c0:	str	x0, [x25, #8]
    14c4:	mov	x0, x25
    14c8:	ldp	x19, x20, [sp, #16]
    14cc:	ldp	x21, x22, [sp, #32]
    14d0:	ldp	x25, x26, [sp, #64]
    14d4:	ldp	x27, x28, [sp, #80]
    14d8:	ldp	x29, x30, [sp], #112
    14dc:	ret
    14e0:	ldp	x1, x0, [x19, #24]
    14e4:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    14e8:	ldp	x4, x2, [x27, #24]
    14ec:	movk	x22, #0xaaab
    14f0:	sub	x0, x0, x1
    14f4:	asr	x1, x0, #4
    14f8:	sub	x2, x2, x4
    14fc:	cmp	x2, x0
    1500:	mul	x1, x1, x22
    1504:	b.ne	15c4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1508:	mov	x0, x3
    150c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1510:	ldp	x28, x21, [x19, #24]
    1514:	cmp	x21, x28
    1518:	b.eq	1490 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    151c:	mov	w26, #0x0                   	// #0
    1520:	mov	x2, #0x0                   	// #0
    1524:	stp	x23, x24, [sp, #48]
    1528:	add	x2, x2, x2, lsl #1
    152c:	ldr	x3, [x27, #24]
    1530:	lsl	x2, x2, #4
    1534:	ldr	x23, [x25, #24]
    1538:	add	x0, x28, x2
    153c:	add	x0, x0, #0x8
    1540:	add	x23, x23, x2
    1544:	add	x2, x3, x2
    1548:	add	x1, x2, #0x8
    154c:	add	x24, x23, #0x8
    1550:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1554:	cmp	w0, #0x0
    1558:	ldr	w1, [x23, #16]
    155c:	cset	x2, gt
    1560:	cmp	w1, #0x40
    1564:	b.ls	1580 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    1568:	ldr	x0, [x23, #8]
    156c:	cbz	x0, 1580 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    1570:	str	x2, [sp, #104]
    1574:	bl	0 <_ZdaPv>
    1578:	ldp	x28, x21, [x19, #24]
    157c:	ldr	x2, [sp, #104]
    1580:	sub	x3, x21, x28
    1584:	str	x2, [x23, #8]
    1588:	add	w2, w26, #0x1
    158c:	asr	x3, x3, #4
    1590:	str	w20, [x24, #8]
    1594:	mov	x26, x2
    1598:	mul	x3, x3, x22
    159c:	cmp	x3, w2, uxtw
    15a0:	b.hi	1528 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    15a4:	mov	x0, x25
    15a8:	ldp	x19, x20, [sp, #16]
    15ac:	ldp	x21, x22, [sp, #32]
    15b0:	ldp	x23, x24, [sp, #48]
    15b4:	ldp	x25, x26, [sp, #64]
    15b8:	ldp	x27, x28, [sp, #80]
    15bc:	ldp	x29, x30, [sp], #112
    15c0:	ret
    15c4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    15c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    15cc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    15d0:	add	x3, x3, #0x0
    15d4:	add	x1, x1, #0x0
    15d8:	add	x0, x0, #0x0
    15dc:	mov	w2, #0x10a                 	// #266
    15e0:	stp	x23, x24, [sp, #48]
    15e4:	bl	0 <__assert_fail>

00000000000015e8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
    15e8:	stp	x29, x30, [sp, #-112]!
    15ec:	add	x3, x8, #0x18
    15f0:	mov	x29, sp
    15f4:	stp	x19, x20, [sp, #16]
    15f8:	mov	x19, x0
    15fc:	mov	w20, #0x1                   	// #1
    1600:	stp	x21, x22, [sp, #32]
    1604:	mov	x21, x2
    1608:	mov	x2, x8
    160c:	stp	x25, x26, [sp, #64]
    1610:	mov	x25, x8
    1614:	stp	x27, x28, [sp, #80]
    1618:	mov	x27, x1
    161c:	str	xzr, [x8, #24]
    1620:	stp	xzr, xzr, [x3, #8]
    1624:	str	xzr, [x2], #8
    1628:	ldrb	w0, [x21, #8]
    162c:	str	xzr, [x8, #8]
    1630:	str	w20, [x2, #8]
    1634:	cmp	w0, #0xf
    1638:	b.eq	169c <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    163c:	cmp	w0, #0x10
    1640:	b.eq	1700 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1644:	cmp	w0, #0xb
    1648:	b.eq	16cc <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    164c:	stp	x23, x24, [sp, #48]
    1650:	bl	0 <_ZN4llvm4dbgsEv>
    1654:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1658:	add	x1, x1, #0x0
    165c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1660:	mov	w2, #0x0                   	// #0
    1664:	mov	x19, x0
    1668:	mov	w3, #0x0                   	// #0
    166c:	mov	x0, x21
    1670:	mov	x1, x19
    1674:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1678:	mov	x0, x19
    167c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1680:	add	x1, x1, #0x0
    1684:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1688:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    168c:	mov	w2, #0x11c                 	// #284
    1690:	add	x1, x1, #0x0
    1694:	mov	x0, #0x0                   	// #0
    1698:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    169c:	ldr	x0, [x27]
    16a0:	ldr	x1, [x19]
    16a4:	cmp	x1, x0
    16a8:	cset	x0, ls  // ls = plast
    16ac:	str	x0, [x8, #8]
    16b0:	mov	x0, x25
    16b4:	ldp	x19, x20, [sp, #16]
    16b8:	ldp	x21, x22, [sp, #32]
    16bc:	ldp	x25, x26, [sp, #64]
    16c0:	ldp	x27, x28, [sp, #80]
    16c4:	ldp	x29, x30, [sp], #112
    16c8:	ret
    16cc:	add	x1, x1, #0x8
    16d0:	add	x0, x19, #0x8
    16d4:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    16d8:	cmp	w0, #0x0
    16dc:	cset	x0, le
    16e0:	str	x0, [x25, #8]
    16e4:	mov	x0, x25
    16e8:	ldp	x19, x20, [sp, #16]
    16ec:	ldp	x21, x22, [sp, #32]
    16f0:	ldp	x25, x26, [sp, #64]
    16f4:	ldp	x27, x28, [sp, #80]
    16f8:	ldp	x29, x30, [sp], #112
    16fc:	ret
    1700:	ldp	x1, x0, [x19, #24]
    1704:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1708:	ldp	x4, x2, [x27, #24]
    170c:	movk	x22, #0xaaab
    1710:	sub	x0, x0, x1
    1714:	asr	x1, x0, #4
    1718:	sub	x2, x2, x4
    171c:	cmp	x2, x0
    1720:	mul	x1, x1, x22
    1724:	b.ne	17e4 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1728:	mov	x0, x3
    172c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1730:	ldp	x28, x21, [x19, #24]
    1734:	cmp	x21, x28
    1738:	b.eq	16b0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    173c:	mov	w26, #0x0                   	// #0
    1740:	mov	x2, #0x0                   	// #0
    1744:	stp	x23, x24, [sp, #48]
    1748:	add	x2, x2, x2, lsl #1
    174c:	ldr	x3, [x27, #24]
    1750:	lsl	x2, x2, #4
    1754:	ldr	x23, [x25, #24]
    1758:	add	x0, x28, x2
    175c:	add	x0, x0, #0x8
    1760:	add	x23, x23, x2
    1764:	add	x2, x3, x2
    1768:	add	x1, x2, #0x8
    176c:	add	x24, x23, #0x8
    1770:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1774:	cmp	w0, #0x0
    1778:	ldr	w1, [x23, #16]
    177c:	cset	x2, le
    1780:	cmp	w1, #0x40
    1784:	b.ls	17a0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    1788:	ldr	x0, [x23, #8]
    178c:	cbz	x0, 17a0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    1790:	str	x2, [sp, #104]
    1794:	bl	0 <_ZdaPv>
    1798:	ldp	x28, x21, [x19, #24]
    179c:	ldr	x2, [sp, #104]
    17a0:	sub	x3, x21, x28
    17a4:	str	x2, [x23, #8]
    17a8:	add	w2, w26, #0x1
    17ac:	asr	x3, x3, #4
    17b0:	str	w20, [x24, #8]
    17b4:	mov	x26, x2
    17b8:	mul	x3, x3, x22
    17bc:	cmp	x3, w2, uxtw
    17c0:	b.hi	1748 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    17c4:	mov	x0, x25
    17c8:	ldp	x19, x20, [sp, #16]
    17cc:	ldp	x21, x22, [sp, #32]
    17d0:	ldp	x23, x24, [sp, #48]
    17d4:	ldp	x25, x26, [sp, #64]
    17d8:	ldp	x27, x28, [sp, #80]
    17dc:	ldp	x29, x30, [sp], #112
    17e0:	ret
    17e4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    17e8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    17ec:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    17f0:	add	x3, x3, #0x0
    17f4:	add	x1, x1, #0x0
    17f8:	add	x0, x0, #0x0
    17fc:	mov	w2, #0x118                 	// #280
    1800:	stp	x23, x24, [sp, #48]
    1804:	bl	0 <__assert_fail>

0000000000001808 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>:
    1808:	stp	x29, x30, [sp, #-112]!
    180c:	add	x3, x8, #0x18
    1810:	mov	x29, sp
    1814:	stp	x19, x20, [sp, #16]
    1818:	mov	x19, x0
    181c:	mov	w20, #0x1                   	// #1
    1820:	stp	x21, x22, [sp, #32]
    1824:	mov	x21, x2
    1828:	mov	x2, x8
    182c:	stp	x25, x26, [sp, #64]
    1830:	mov	x25, x8
    1834:	stp	x27, x28, [sp, #80]
    1838:	mov	x27, x1
    183c:	str	xzr, [x8, #24]
    1840:	stp	xzr, xzr, [x3, #8]
    1844:	str	xzr, [x2], #8
    1848:	ldrb	w0, [x21, #8]
    184c:	str	xzr, [x8, #8]
    1850:	str	w20, [x2, #8]
    1854:	cmp	w0, #0xf
    1858:	b.eq	18bc <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    185c:	cmp	w0, #0x10
    1860:	b.eq	1920 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1864:	cmp	w0, #0xb
    1868:	b.eq	18ec <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    186c:	stp	x23, x24, [sp, #48]
    1870:	bl	0 <_ZN4llvm4dbgsEv>
    1874:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1878:	add	x1, x1, #0x0
    187c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1880:	mov	w2, #0x0                   	// #0
    1884:	mov	x19, x0
    1888:	mov	w3, #0x0                   	// #0
    188c:	mov	x0, x21
    1890:	mov	x1, x19
    1894:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1898:	mov	x0, x19
    189c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    18a0:	add	x1, x1, #0x0
    18a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    18a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    18ac:	mov	w2, #0x12a                 	// #298
    18b0:	add	x1, x1, #0x0
    18b4:	mov	x0, #0x0                   	// #0
    18b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    18bc:	ldr	x0, [x27]
    18c0:	ldr	x1, [x19]
    18c4:	cmp	x1, x0
    18c8:	cset	x0, ls  // ls = plast
    18cc:	str	x0, [x8, #8]
    18d0:	mov	x0, x25
    18d4:	ldp	x19, x20, [sp, #16]
    18d8:	ldp	x21, x22, [sp, #32]
    18dc:	ldp	x25, x26, [sp, #64]
    18e0:	ldp	x27, x28, [sp, #80]
    18e4:	ldp	x29, x30, [sp], #112
    18e8:	ret
    18ec:	add	x1, x1, #0x8
    18f0:	add	x0, x19, #0x8
    18f4:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    18f8:	cmp	w0, #0x0
    18fc:	cset	x0, le
    1900:	str	x0, [x25, #8]
    1904:	mov	x0, x25
    1908:	ldp	x19, x20, [sp, #16]
    190c:	ldp	x21, x22, [sp, #32]
    1910:	ldp	x25, x26, [sp, #64]
    1914:	ldp	x27, x28, [sp, #80]
    1918:	ldp	x29, x30, [sp], #112
    191c:	ret
    1920:	ldp	x1, x0, [x19, #24]
    1924:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1928:	ldp	x4, x2, [x27, #24]
    192c:	movk	x22, #0xaaab
    1930:	sub	x0, x0, x1
    1934:	asr	x1, x0, #4
    1938:	sub	x2, x2, x4
    193c:	cmp	x2, x0
    1940:	mul	x1, x1, x22
    1944:	b.ne	1a04 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1948:	mov	x0, x3
    194c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1950:	ldp	x28, x21, [x19, #24]
    1954:	cmp	x21, x28
    1958:	b.eq	18d0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    195c:	mov	w26, #0x0                   	// #0
    1960:	mov	x2, #0x0                   	// #0
    1964:	stp	x23, x24, [sp, #48]
    1968:	add	x2, x2, x2, lsl #1
    196c:	ldr	x3, [x27, #24]
    1970:	lsl	x2, x2, #4
    1974:	ldr	x23, [x25, #24]
    1978:	add	x0, x28, x2
    197c:	add	x0, x0, #0x8
    1980:	add	x23, x23, x2
    1984:	add	x2, x3, x2
    1988:	add	x1, x2, #0x8
    198c:	add	x24, x23, #0x8
    1990:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1994:	cmp	w0, #0x0
    1998:	ldr	w1, [x23, #16]
    199c:	cset	x2, le
    19a0:	cmp	w1, #0x40
    19a4:	b.ls	19c0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    19a8:	ldr	x0, [x23, #8]
    19ac:	cbz	x0, 19c0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    19b0:	str	x2, [sp, #104]
    19b4:	bl	0 <_ZdaPv>
    19b8:	ldp	x28, x21, [x19, #24]
    19bc:	ldr	x2, [sp, #104]
    19c0:	sub	x3, x21, x28
    19c4:	str	x2, [x23, #8]
    19c8:	add	w2, w26, #0x1
    19cc:	asr	x3, x3, #4
    19d0:	str	w20, [x24, #8]
    19d4:	mov	x26, x2
    19d8:	mul	x3, x3, x22
    19dc:	cmp	x3, w2, uxtw
    19e0:	b.hi	1968 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    19e4:	mov	x0, x25
    19e8:	ldp	x19, x20, [sp, #16]
    19ec:	ldp	x21, x22, [sp, #32]
    19f0:	ldp	x23, x24, [sp, #48]
    19f4:	ldp	x25, x26, [sp, #64]
    19f8:	ldp	x27, x28, [sp, #80]
    19fc:	ldp	x29, x30, [sp], #112
    1a00:	ret
    1a04:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1a08:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1a0c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1a10:	add	x3, x3, #0x0
    1a14:	add	x1, x1, #0x0
    1a18:	add	x0, x0, #0x0
    1a1c:	mov	w2, #0x126                 	// #294
    1a20:	stp	x23, x24, [sp, #48]
    1a24:	bl	0 <__assert_fail>

0000000000001a28 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1a28:	stp	x29, x30, [sp, #-112]!
    1a2c:	add	x3, x8, #0x18
    1a30:	mov	x29, sp
    1a34:	stp	x19, x20, [sp, #16]
    1a38:	mov	x19, x0
    1a3c:	mov	w20, #0x1                   	// #1
    1a40:	stp	x21, x22, [sp, #32]
    1a44:	mov	x21, x2
    1a48:	mov	x2, x8
    1a4c:	stp	x25, x26, [sp, #64]
    1a50:	mov	x26, x8
    1a54:	stp	x27, x28, [sp, #80]
    1a58:	mov	x28, x1
    1a5c:	str	xzr, [x8, #24]
    1a60:	stp	xzr, xzr, [x3, #8]
    1a64:	str	xzr, [x2], #8
    1a68:	ldrb	w0, [x21, #8]
    1a6c:	str	xzr, [x8, #8]
    1a70:	str	w20, [x2, #8]
    1a74:	cmp	w0, #0xf
    1a78:	b.eq	1adc <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    1a7c:	cmp	w0, #0x10
    1a80:	b.eq	1b40 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1a84:	cmp	w0, #0xb
    1a88:	b.eq	1b0c <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    1a8c:	stp	x23, x24, [sp, #48]
    1a90:	bl	0 <_ZN4llvm4dbgsEv>
    1a94:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1a98:	add	x1, x1, #0x0
    1a9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1aa0:	mov	w2, #0x0                   	// #0
    1aa4:	mov	x19, x0
    1aa8:	mov	w3, #0x0                   	// #0
    1aac:	mov	x0, x21
    1ab0:	mov	x1, x19
    1ab4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1ab8:	mov	x0, x19
    1abc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1ac0:	add	x1, x1, #0x0
    1ac4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1ac8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1acc:	mov	w2, #0x138                 	// #312
    1ad0:	add	x1, x1, #0x0
    1ad4:	mov	x0, #0x0                   	// #0
    1ad8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1adc:	ldr	x0, [x28]
    1ae0:	ldr	x1, [x19]
    1ae4:	cmp	x1, x0
    1ae8:	cset	x0, cs  // cs = hs, nlast
    1aec:	str	x0, [x8, #8]
    1af0:	mov	x0, x26
    1af4:	ldp	x19, x20, [sp, #16]
    1af8:	ldp	x21, x22, [sp, #32]
    1afc:	ldp	x25, x26, [sp, #64]
    1b00:	ldp	x27, x28, [sp, #80]
    1b04:	ldp	x29, x30, [sp], #112
    1b08:	ret
    1b0c:	add	x1, x1, #0x8
    1b10:	add	x0, x19, #0x8
    1b14:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1b18:	eor	x0, x0, #0x80000000
    1b1c:	lsr	w0, w0, #31
    1b20:	str	x0, [x26, #8]
    1b24:	mov	x0, x26
    1b28:	ldp	x19, x20, [sp, #16]
    1b2c:	ldp	x21, x22, [sp, #32]
    1b30:	ldp	x25, x26, [sp, #64]
    1b34:	ldp	x27, x28, [sp, #80]
    1b38:	ldp	x29, x30, [sp], #112
    1b3c:	ret
    1b40:	ldp	x1, x0, [x19, #24]
    1b44:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1b48:	ldp	x4, x2, [x28, #24]
    1b4c:	movk	x22, #0xaaab
    1b50:	sub	x0, x0, x1
    1b54:	asr	x1, x0, #4
    1b58:	sub	x2, x2, x4
    1b5c:	cmp	x2, x0
    1b60:	mul	x1, x1, x22
    1b64:	b.ne	1c2c <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x204>  // b.any
    1b68:	mov	x0, x3
    1b6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1b70:	ldp	x21, x0, [x19, #24]
    1b74:	str	x0, [sp, #104]
    1b78:	cmp	x0, x21
    1b7c:	b.eq	1af0 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1b80:	mov	w27, #0x0                   	// #0
    1b84:	mov	x2, #0x0                   	// #0
    1b88:	stp	x23, x24, [sp, #48]
    1b8c:	nop
    1b90:	add	x2, x2, x2, lsl #1
    1b94:	ldr	x3, [x28, #24]
    1b98:	lsl	x2, x2, #4
    1b9c:	ldr	x23, [x26, #24]
    1ba0:	add	x0, x21, x2
    1ba4:	add	x0, x0, #0x8
    1ba8:	add	x23, x23, x2
    1bac:	add	x2, x3, x2
    1bb0:	add	x1, x2, #0x8
    1bb4:	add	x24, x23, #0x8
    1bb8:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1bbc:	eor	x0, x0, #0x80000000
    1bc0:	ldr	w1, [x23, #16]
    1bc4:	lsr	w25, w0, #31
    1bc8:	cmp	w1, #0x40
    1bcc:	b.ls	1be4 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1bc>  // b.plast
    1bd0:	ldr	x0, [x23, #8]
    1bd4:	cbz	x0, 1be4 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1bc>
    1bd8:	bl	0 <_ZdaPv>
    1bdc:	ldp	x21, x0, [x19, #24]
    1be0:	str	x0, [sp, #104]
    1be4:	ldr	x0, [sp, #104]
    1be8:	str	x25, [x23, #8]
    1bec:	add	w2, w27, #0x1
    1bf0:	str	w20, [x24, #8]
    1bf4:	sub	x3, x0, x21
    1bf8:	mov	x27, x2
    1bfc:	asr	x3, x3, #4
    1c00:	mul	x3, x3, x22
    1c04:	cmp	x3, w2, uxtw
    1c08:	b.hi	1b90 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    1c0c:	mov	x0, x26
    1c10:	ldp	x19, x20, [sp, #16]
    1c14:	ldp	x21, x22, [sp, #32]
    1c18:	ldp	x23, x24, [sp, #48]
    1c1c:	ldp	x25, x26, [sp, #64]
    1c20:	ldp	x27, x28, [sp, #80]
    1c24:	ldp	x29, x30, [sp], #112
    1c28:	ret
    1c2c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1c30:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1c34:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1c38:	add	x3, x3, #0x0
    1c3c:	add	x1, x1, #0x0
    1c40:	add	x0, x0, #0x0
    1c44:	mov	w2, #0x134                 	// #308
    1c48:	stp	x23, x24, [sp, #48]
    1c4c:	bl	0 <__assert_fail>

0000000000001c50 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1c50:	stp	x29, x30, [sp, #-112]!
    1c54:	add	x3, x8, #0x18
    1c58:	mov	x29, sp
    1c5c:	stp	x19, x20, [sp, #16]
    1c60:	mov	x19, x0
    1c64:	mov	w20, #0x1                   	// #1
    1c68:	stp	x21, x22, [sp, #32]
    1c6c:	mov	x21, x2
    1c70:	mov	x2, x8
    1c74:	stp	x25, x26, [sp, #64]
    1c78:	mov	x26, x8
    1c7c:	stp	x27, x28, [sp, #80]
    1c80:	mov	x28, x1
    1c84:	str	xzr, [x8, #24]
    1c88:	stp	xzr, xzr, [x3, #8]
    1c8c:	str	xzr, [x2], #8
    1c90:	ldrb	w0, [x21, #8]
    1c94:	str	xzr, [x8, #8]
    1c98:	str	w20, [x2, #8]
    1c9c:	cmp	w0, #0xf
    1ca0:	b.eq	1d04 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    1ca4:	cmp	w0, #0x10
    1ca8:	b.eq	1d68 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1cac:	cmp	w0, #0xb
    1cb0:	b.eq	1d34 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    1cb4:	stp	x23, x24, [sp, #48]
    1cb8:	bl	0 <_ZN4llvm4dbgsEv>
    1cbc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1cc0:	add	x1, x1, #0x0
    1cc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1cc8:	mov	w2, #0x0                   	// #0
    1ccc:	mov	x19, x0
    1cd0:	mov	w3, #0x0                   	// #0
    1cd4:	mov	x0, x21
    1cd8:	mov	x1, x19
    1cdc:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1ce0:	mov	x0, x19
    1ce4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1ce8:	add	x1, x1, #0x0
    1cec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1cf0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1cf4:	mov	w2, #0x146                 	// #326
    1cf8:	add	x1, x1, #0x0
    1cfc:	mov	x0, #0x0                   	// #0
    1d00:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1d04:	ldr	x0, [x28]
    1d08:	ldr	x1, [x19]
    1d0c:	cmp	x1, x0
    1d10:	cset	x0, cs  // cs = hs, nlast
    1d14:	str	x0, [x8, #8]
    1d18:	mov	x0, x26
    1d1c:	ldp	x19, x20, [sp, #16]
    1d20:	ldp	x21, x22, [sp, #32]
    1d24:	ldp	x25, x26, [sp, #64]
    1d28:	ldp	x27, x28, [sp, #80]
    1d2c:	ldp	x29, x30, [sp], #112
    1d30:	ret
    1d34:	add	x1, x1, #0x8
    1d38:	add	x0, x19, #0x8
    1d3c:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1d40:	eor	x0, x0, #0x80000000
    1d44:	lsr	w0, w0, #31
    1d48:	str	x0, [x26, #8]
    1d4c:	mov	x0, x26
    1d50:	ldp	x19, x20, [sp, #16]
    1d54:	ldp	x21, x22, [sp, #32]
    1d58:	ldp	x25, x26, [sp, #64]
    1d5c:	ldp	x27, x28, [sp, #80]
    1d60:	ldp	x29, x30, [sp], #112
    1d64:	ret
    1d68:	ldp	x1, x0, [x19, #24]
    1d6c:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1d70:	ldp	x4, x2, [x28, #24]
    1d74:	movk	x22, #0xaaab
    1d78:	sub	x0, x0, x1
    1d7c:	asr	x1, x0, #4
    1d80:	sub	x2, x2, x4
    1d84:	cmp	x2, x0
    1d88:	mul	x1, x1, x22
    1d8c:	b.ne	1e54 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x204>  // b.any
    1d90:	mov	x0, x3
    1d94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1d98:	ldp	x21, x0, [x19, #24]
    1d9c:	str	x0, [sp, #104]
    1da0:	cmp	x0, x21
    1da4:	b.eq	1d18 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1da8:	mov	w27, #0x0                   	// #0
    1dac:	mov	x2, #0x0                   	// #0
    1db0:	stp	x23, x24, [sp, #48]
    1db4:	nop
    1db8:	add	x2, x2, x2, lsl #1
    1dbc:	ldr	x3, [x28, #24]
    1dc0:	lsl	x2, x2, #4
    1dc4:	ldr	x23, [x26, #24]
    1dc8:	add	x0, x21, x2
    1dcc:	add	x0, x0, #0x8
    1dd0:	add	x23, x23, x2
    1dd4:	add	x2, x3, x2
    1dd8:	add	x1, x2, #0x8
    1ddc:	add	x24, x23, #0x8
    1de0:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1de4:	eor	x0, x0, #0x80000000
    1de8:	ldr	w1, [x23, #16]
    1dec:	lsr	w25, w0, #31
    1df0:	cmp	w1, #0x40
    1df4:	b.ls	1e0c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1bc>  // b.plast
    1df8:	ldr	x0, [x23, #8]
    1dfc:	cbz	x0, 1e0c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1bc>
    1e00:	bl	0 <_ZdaPv>
    1e04:	ldp	x21, x0, [x19, #24]
    1e08:	str	x0, [sp, #104]
    1e0c:	ldr	x0, [sp, #104]
    1e10:	str	x25, [x23, #8]
    1e14:	add	w2, w27, #0x1
    1e18:	str	w20, [x24, #8]
    1e1c:	sub	x3, x0, x21
    1e20:	mov	x27, x2
    1e24:	asr	x3, x3, #4
    1e28:	mul	x3, x3, x22
    1e2c:	cmp	x3, w2, uxtw
    1e30:	b.hi	1db8 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    1e34:	mov	x0, x26
    1e38:	ldp	x19, x20, [sp, #16]
    1e3c:	ldp	x21, x22, [sp, #32]
    1e40:	ldp	x23, x24, [sp, #48]
    1e44:	ldp	x25, x26, [sp, #64]
    1e48:	ldp	x27, x28, [sp, #80]
    1e4c:	ldp	x29, x30, [sp], #112
    1e50:	ret
    1e54:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1e58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1e5c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1e60:	add	x3, x3, #0x0
    1e64:	add	x1, x1, #0x0
    1e68:	add	x0, x0, #0x0
    1e6c:	mov	w2, #0x142                 	// #322
    1e70:	stp	x23, x24, [sp, #48]
    1e74:	bl	0 <__assert_fail>

0000000000001e78 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>:
    1e78:	stp	x29, x30, [sp, #-96]!
    1e7c:	add	x3, x8, #0x18
    1e80:	mov	x29, sp
    1e84:	stp	x19, x20, [sp, #16]
    1e88:	mov	x20, x8
    1e8c:	stp	x21, x22, [sp, #32]
    1e90:	mov	x21, x2
    1e94:	mov	x2, x8
    1e98:	stp	x23, x24, [sp, #48]
    1e9c:	mov	x22, x0
    1ea0:	mov	w24, #0x1                   	// #1
    1ea4:	str	xzr, [x8, #24]
    1ea8:	mov	x23, x1
    1eac:	stp	xzr, xzr, [x3, #8]
    1eb0:	str	xzr, [x2], #8
    1eb4:	ldrb	w0, [x21, #8]
    1eb8:	str	xzr, [x8, #8]
    1ebc:	str	w24, [x2, #8]
    1ec0:	cmp	w0, #0x10
    1ec4:	b.eq	1f28 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    1ec8:	cmp	w0, #0x2
    1ecc:	b.eq	1f08 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x90>  // b.none
    1ed0:	ldr	d0, [x22]
    1ed4:	mov	x0, #0x0                   	// #0
    1ed8:	fcmp	d0, d0
    1edc:	b.ne	1eec <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.any
    1ee0:	ldr	d0, [x1]
    1ee4:	fcmp	d0, d0
    1ee8:	cset	x0, eq  // eq = none
    1eec:	str	x0, [x20, #8]
    1ef0:	mov	x0, x20
    1ef4:	ldp	x19, x20, [sp, #16]
    1ef8:	ldp	x21, x22, [sp, #32]
    1efc:	ldp	x23, x24, [sp, #48]
    1f00:	ldp	x29, x30, [sp], #96
    1f04:	ret
    1f08:	ldr	s0, [x22]
    1f0c:	mov	x0, #0x0                   	// #0
    1f10:	fcmp	s0, s0
    1f14:	b.ne	1eec <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.any
    1f18:	ldr	s0, [x1]
    1f1c:	fcmp	s0, s0
    1f20:	cset	x0, eq  // eq = none
    1f24:	b	1eec <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>
    1f28:	ldp	x1, x0, [x22, #24]
    1f2c:	stp	x25, x26, [sp, #64]
    1f30:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1f34:	ldp	x4, x2, [x23, #24]
    1f38:	movk	x26, #0xaaab
    1f3c:	sub	x0, x0, x1
    1f40:	asr	x1, x0, #4
    1f44:	sub	x2, x2, x4
    1f48:	cmp	x2, x0
    1f4c:	mul	x1, x1, x26
    1f50:	b.ne	20bc <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x244>  // b.any
    1f54:	mov	x0, x3
    1f58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1f5c:	ldrb	w0, [x21, #8]
    1f60:	cmp	w0, #0x10
    1f64:	b.ne	20e0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x268>  // b.any
    1f68:	ldr	x0, [x21, #24]
    1f6c:	ldp	x3, x1, [x22, #24]
    1f70:	ldrb	w0, [x0, #8]
    1f74:	cmp	w0, #0x2
    1f78:	b.eq	2020 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>  // b.none
    1f7c:	cmp	x1, x3
    1f80:	b.eq	20b4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x23c>  // b.none
    1f84:	mov	x21, #0x0                   	// #0
    1f88:	str	x27, [sp, #80]
    1f8c:	nop
    1f90:	add	x2, x21, x21, lsl #1
    1f94:	mov	x25, #0x0                   	// #0
    1f98:	ldr	x19, [x20, #24]
    1f9c:	lsl	x2, x2, #4
    1fa0:	add	x19, x19, x2
    1fa4:	ldr	d0, [x3, x2]
    1fa8:	fcmp	d0, d0
    1fac:	b.ne	1fc0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.any
    1fb0:	ldr	x0, [x23, #24]
    1fb4:	ldr	d0, [x0, x2]
    1fb8:	fcmp	d0, d0
    1fbc:	cset	x25, eq  // eq = none
    1fc0:	ldr	w0, [x19, #16]
    1fc4:	add	x27, x19, #0x8
    1fc8:	cmp	w0, #0x40
    1fcc:	b.ls	1fe0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.plast
    1fd0:	ldr	x0, [x19, #8]
    1fd4:	cbz	x0, 1fe0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x168>
    1fd8:	bl	0 <_ZdaPv>
    1fdc:	ldp	x3, x1, [x22, #24]
    1fe0:	sub	x2, x1, x3
    1fe4:	str	x25, [x19, #8]
    1fe8:	add	x21, x21, #0x1
    1fec:	asr	x2, x2, #4
    1ff0:	str	w24, [x27, #8]
    1ff4:	mul	x2, x2, x26
    1ff8:	cmp	x21, x2
    1ffc:	b.cc	1f90 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.lo, b.ul, b.last
    2000:	ldp	x25, x26, [sp, #64]
    2004:	ldr	x27, [sp, #80]
    2008:	mov	x0, x20
    200c:	ldp	x19, x20, [sp, #16]
    2010:	ldp	x21, x22, [sp, #32]
    2014:	ldp	x23, x24, [sp, #48]
    2018:	ldp	x29, x30, [sp], #96
    201c:	ret
    2020:	mov	w21, w24
    2024:	cmp	x1, x3
    2028:	mov	x24, #0x0                   	// #0
    202c:	b.eq	20b4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x23c>  // b.none
    2030:	str	x27, [sp, #80]
    2034:	nop
    2038:	add	x2, x24, x24, lsl #1
    203c:	mov	x25, #0x0                   	// #0
    2040:	ldr	x19, [x20, #24]
    2044:	lsl	x2, x2, #4
    2048:	add	x19, x19, x2
    204c:	ldr	s0, [x3, x2]
    2050:	fcmp	s0, s0
    2054:	b.ne	2068 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.any
    2058:	ldr	x0, [x23, #24]
    205c:	ldr	s0, [x0, x2]
    2060:	fcmp	s0, s0
    2064:	cset	x25, eq  // eq = none
    2068:	ldr	w0, [x19, #16]
    206c:	add	x27, x19, #0x8
    2070:	cmp	w0, #0x40
    2074:	b.ls	2088 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x210>  // b.plast
    2078:	ldr	x0, [x19, #8]
    207c:	cbz	x0, 2088 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x210>
    2080:	bl	0 <_ZdaPv>
    2084:	ldp	x3, x1, [x22, #24]
    2088:	sub	x2, x1, x3
    208c:	str	x25, [x19, #8]
    2090:	add	x24, x24, #0x1
    2094:	asr	x2, x2, #4
    2098:	str	w21, [x27, #8]
    209c:	mul	x2, x2, x26
    20a0:	cmp	x24, x2
    20a4:	b.cc	2038 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1c0>  // b.lo, b.ul, b.last
    20a8:	ldp	x25, x26, [sp, #64]
    20ac:	ldr	x27, [sp, #80]
    20b0:	b	2008 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x190>
    20b4:	ldp	x25, x26, [sp, #64]
    20b8:	b	1ef0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x78>
    20bc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    20c0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    20c4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    20c8:	add	x3, x3, #0x0
    20cc:	add	x1, x1, #0x0
    20d0:	add	x0, x0, #0x0
    20d4:	mov	w2, #0x24e                 	// #590
    20d8:	str	x27, [sp, #80]
    20dc:	bl	0 <__assert_fail>
    20e0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    20e4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    20e8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    20ec:	add	x3, x3, #0x0
    20f0:	add	x1, x1, #0x0
    20f4:	add	x0, x0, #0x0
    20f8:	mov	w2, #0x108                 	// #264
    20fc:	str	x27, [sp, #80]
    2100:	bl	0 <__assert_fail>
    2104:	nop

0000000000002108 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>:
    2108:	stp	x29, x30, [sp, #-96]!
    210c:	add	x3, x8, #0x18
    2110:	mov	x29, sp
    2114:	stp	x19, x20, [sp, #16]
    2118:	mov	x20, x8
    211c:	stp	x21, x22, [sp, #32]
    2120:	mov	x21, x2
    2124:	mov	x2, x8
    2128:	stp	x23, x24, [sp, #48]
    212c:	mov	x22, x0
    2130:	mov	w24, #0x1                   	// #1
    2134:	str	xzr, [x8, #24]
    2138:	mov	x23, x1
    213c:	stp	xzr, xzr, [x3, #8]
    2140:	str	xzr, [x2], #8
    2144:	ldrb	w0, [x21, #8]
    2148:	str	xzr, [x8, #8]
    214c:	str	w24, [x2, #8]
    2150:	cmp	w0, #0x10
    2154:	b.eq	21b8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    2158:	cmp	w0, #0x2
    215c:	b.eq	2198 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x90>  // b.none
    2160:	ldr	d0, [x22]
    2164:	mov	x0, #0x1                   	// #1
    2168:	fcmp	d0, d0
    216c:	b.ne	217c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.any
    2170:	ldr	d0, [x1]
    2174:	fcmp	d0, d0
    2178:	cset	x0, ne  // ne = any
    217c:	str	x0, [x20, #8]
    2180:	mov	x0, x20
    2184:	ldp	x19, x20, [sp, #16]
    2188:	ldp	x21, x22, [sp, #32]
    218c:	ldp	x23, x24, [sp, #48]
    2190:	ldp	x29, x30, [sp], #96
    2194:	ret
    2198:	ldr	s0, [x22]
    219c:	mov	x0, #0x1                   	// #1
    21a0:	fcmp	s0, s0
    21a4:	b.ne	217c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.any
    21a8:	ldr	s0, [x1]
    21ac:	fcmp	s0, s0
    21b0:	cset	x0, ne  // ne = any
    21b4:	b	217c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>
    21b8:	ldp	x1, x0, [x22, #24]
    21bc:	stp	x25, x26, [sp, #64]
    21c0:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    21c4:	ldp	x4, x2, [x23, #24]
    21c8:	movk	x26, #0xaaab
    21cc:	sub	x0, x0, x1
    21d0:	asr	x1, x0, #4
    21d4:	sub	x2, x2, x4
    21d8:	cmp	x2, x0
    21dc:	mul	x1, x1, x26
    21e0:	b.ne	234c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x244>  // b.any
    21e4:	mov	x0, x3
    21e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    21ec:	ldrb	w0, [x21, #8]
    21f0:	cmp	w0, #0x10
    21f4:	b.ne	2370 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x268>  // b.any
    21f8:	ldr	x0, [x21, #24]
    21fc:	ldp	x3, x1, [x22, #24]
    2200:	ldrb	w0, [x0, #8]
    2204:	cmp	w0, #0x2
    2208:	b.eq	22b0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1a8>  // b.none
    220c:	cmp	x3, x1
    2210:	b.eq	2344 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x23c>  // b.none
    2214:	mov	x21, #0x0                   	// #0
    2218:	str	x27, [sp, #80]
    221c:	nop
    2220:	add	x2, x21, x21, lsl #1
    2224:	mov	x25, #0x1                   	// #1
    2228:	ldr	x19, [x20, #24]
    222c:	lsl	x2, x2, #4
    2230:	add	x19, x19, x2
    2234:	ldr	d0, [x3, x2]
    2238:	fcmp	d0, d0
    223c:	b.ne	2250 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.any
    2240:	ldr	x0, [x23, #24]
    2244:	ldr	d0, [x0, x2]
    2248:	fcmp	d0, d0
    224c:	cset	x25, ne  // ne = any
    2250:	ldr	w0, [x19, #16]
    2254:	add	x27, x19, #0x8
    2258:	cmp	w0, #0x40
    225c:	b.ls	2270 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.plast
    2260:	ldr	x0, [x19, #8]
    2264:	cbz	x0, 2270 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x168>
    2268:	bl	0 <_ZdaPv>
    226c:	ldp	x3, x1, [x22, #24]
    2270:	sub	x2, x1, x3
    2274:	str	x25, [x19, #8]
    2278:	add	x21, x21, #0x1
    227c:	asr	x2, x2, #4
    2280:	str	w24, [x27, #8]
    2284:	mul	x2, x2, x26
    2288:	cmp	x21, x2
    228c:	b.cc	2220 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.lo, b.ul, b.last
    2290:	ldp	x25, x26, [sp, #64]
    2294:	ldr	x27, [sp, #80]
    2298:	mov	x0, x20
    229c:	ldp	x19, x20, [sp, #16]
    22a0:	ldp	x21, x22, [sp, #32]
    22a4:	ldp	x23, x24, [sp, #48]
    22a8:	ldp	x29, x30, [sp], #96
    22ac:	ret
    22b0:	mov	w21, w24
    22b4:	cmp	x3, x1
    22b8:	mov	x24, #0x0                   	// #0
    22bc:	b.eq	2344 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x23c>  // b.none
    22c0:	str	x27, [sp, #80]
    22c4:	nop
    22c8:	add	x2, x24, x24, lsl #1
    22cc:	mov	x25, #0x1                   	// #1
    22d0:	ldr	x19, [x20, #24]
    22d4:	lsl	x2, x2, #4
    22d8:	add	x19, x19, x2
    22dc:	ldr	s0, [x3, x2]
    22e0:	fcmp	s0, s0
    22e4:	b.ne	22f8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.any
    22e8:	ldr	x0, [x23, #24]
    22ec:	ldr	s0, [x0, x2]
    22f0:	fcmp	s0, s0
    22f4:	cset	x25, ne  // ne = any
    22f8:	ldr	w0, [x19, #16]
    22fc:	add	x27, x19, #0x8
    2300:	cmp	w0, #0x40
    2304:	b.ls	2318 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x210>  // b.plast
    2308:	ldr	x0, [x19, #8]
    230c:	cbz	x0, 2318 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x210>
    2310:	bl	0 <_ZdaPv>
    2314:	ldp	x3, x1, [x22, #24]
    2318:	sub	x2, x1, x3
    231c:	str	x25, [x19, #8]
    2320:	add	x24, x24, #0x1
    2324:	asr	x2, x2, #4
    2328:	str	w21, [x27, #8]
    232c:	mul	x2, x2, x26
    2330:	cmp	x24, x2
    2334:	b.cc	22c8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1c0>  // b.lo, b.ul, b.last
    2338:	ldp	x25, x26, [sp, #64]
    233c:	ldr	x27, [sp, #80]
    2340:	b	2298 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x190>
    2344:	ldp	x25, x26, [sp, #64]
    2348:	b	2180 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x78>
    234c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2350:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2354:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2358:	add	x3, x3, #0x0
    235c:	add	x1, x1, #0x0
    2360:	add	x0, x0, #0x0
    2364:	mov	w2, #0x26d                 	// #621
    2368:	str	x27, [sp, #80]
    236c:	bl	0 <__assert_fail>
    2370:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2374:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2378:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    237c:	add	x3, x3, #0x0
    2380:	add	x1, x1, #0x0
    2384:	add	x0, x0, #0x0
    2388:	mov	w2, #0x108                 	// #264
    238c:	str	x27, [sp, #80]
    2390:	bl	0 <__assert_fail>
    2394:	nop

0000000000002398 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>:
    2398:	stp	x29, x30, [sp, #-96]!
    239c:	add	x3, x8, #0x18
    23a0:	mov	x29, sp
    23a4:	stp	x19, x20, [sp, #16]
    23a8:	mov	x20, x8
    23ac:	stp	x21, x22, [sp, #32]
    23b0:	mov	x21, x2
    23b4:	mov	x2, x8
    23b8:	stp	x23, x24, [sp, #48]
    23bc:	mov	x23, x0
    23c0:	mov	w24, #0x1                   	// #1
    23c4:	str	xzr, [x8, #24]
    23c8:	mov	x22, x1
    23cc:	stp	xzr, xzr, [x3, #8]
    23d0:	str	xzr, [x2], #8
    23d4:	ldrb	w0, [x21, #8]
    23d8:	str	xzr, [x8, #8]
    23dc:	str	w24, [x2, #8]
    23e0:	cmp	w0, #0x3
    23e4:	b.eq	244c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    23e8:	cmp	w0, #0x10
    23ec:	b.eq	24a4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    23f0:	cmp	w0, #0x2
    23f4:	b.eq	2478 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    23f8:	stp	x25, x26, [sp, #64]
    23fc:	str	x27, [sp, #80]
    2400:	bl	0 <_ZN4llvm4dbgsEv>
    2404:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2408:	add	x1, x1, #0x0
    240c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2410:	mov	x19, x0
    2414:	mov	w2, #0x0                   	// #0
    2418:	mov	w3, #0x0                   	// #0
    241c:	mov	x0, x21
    2420:	mov	x1, x19
    2424:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    2428:	mov	x0, x19
    242c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2430:	add	x1, x1, #0x0
    2434:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2438:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    243c:	mov	w2, #0x183                 	// #387
    2440:	add	x1, x1, #0x0
    2444:	mov	x0, #0x0                   	// #0
    2448:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    244c:	ldr	d0, [x1]
    2450:	ldr	d1, [x23]
    2454:	fcmp	d1, d0
    2458:	cset	x0, eq  // eq = none
    245c:	str	x0, [x8, #8]
    2460:	mov	x0, x20
    2464:	ldp	x19, x20, [sp, #16]
    2468:	ldp	x21, x22, [sp, #32]
    246c:	ldp	x23, x24, [sp, #48]
    2470:	ldp	x29, x30, [sp], #96
    2474:	ret
    2478:	ldr	s1, [x23]
    247c:	ldr	s0, [x1]
    2480:	fcmp	s1, s0
    2484:	cset	x0, eq  // eq = none
    2488:	str	x0, [x8, #8]
    248c:	mov	x0, x20
    2490:	ldp	x19, x20, [sp, #16]
    2494:	ldp	x21, x22, [sp, #32]
    2498:	ldp	x23, x24, [sp, #48]
    249c:	ldp	x29, x30, [sp], #96
    24a0:	ret
    24a4:	ldp	x5, x2, [x1, #24]
    24a8:	stp	x25, x26, [sp, #64]
    24ac:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    24b0:	ldp	x1, x0, [x23, #24]
    24b4:	movk	x25, #0xaaab
    24b8:	ldr	x4, [x21, #24]
    24bc:	sub	x2, x2, x5
    24c0:	sub	x0, x0, x1
    24c4:	ldrb	w4, [x4, #8]
    24c8:	asr	x1, x0, #4
    24cc:	cmp	w4, #0x2
    24d0:	mul	x1, x1, x25
    24d4:	b.eq	2588 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    24d8:	cmp	x2, x0
    24dc:	b.ne	2634 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    24e0:	mov	x0, x3
    24e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    24e8:	ldp	x1, x4, [x23, #24]
    24ec:	cmp	x1, x4
    24f0:	b.eq	262c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    24f4:	mov	w21, #0x0                   	// #0
    24f8:	mov	x2, #0x0                   	// #0
    24fc:	str	x27, [sp, #80]
    2500:	add	x2, x2, x2, lsl #1
    2504:	ldr	x0, [x22, #24]
    2508:	lsl	x2, x2, #4
    250c:	ldr	x19, [x20, #24]
    2510:	ldr	d1, [x0, x2]
    2514:	ldr	d0, [x1, x2]
    2518:	add	x19, x19, x2
    251c:	add	x26, x19, #0x8
    2520:	fcmp	d1, d0
    2524:	ldr	w0, [x19, #16]
    2528:	cset	x27, eq  // eq = none
    252c:	cmp	w0, #0x40
    2530:	b.ls	2544 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    2534:	ldr	x0, [x19, #8]
    2538:	cbz	x0, 2544 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    253c:	bl	0 <_ZdaPv>
    2540:	ldp	x1, x4, [x23, #24]
    2544:	sub	x3, x4, x1
    2548:	str	x27, [x19, #8]
    254c:	add	w2, w21, #0x1
    2550:	asr	x3, x3, #4
    2554:	str	w24, [x26, #8]
    2558:	mov	x21, x2
    255c:	mul	x3, x3, x25
    2560:	cmp	x3, w2, uxtw
    2564:	b.hi	2500 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    2568:	ldp	x25, x26, [sp, #64]
    256c:	ldr	x27, [sp, #80]
    2570:	mov	x0, x20
    2574:	ldp	x19, x20, [sp, #16]
    2578:	ldp	x21, x22, [sp, #32]
    257c:	ldp	x23, x24, [sp, #48]
    2580:	ldp	x29, x30, [sp], #96
    2584:	ret
    2588:	cmp	x2, x0
    258c:	b.ne	2634 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    2590:	mov	x0, x3
    2594:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2598:	ldp	x1, x4, [x23, #24]
    259c:	cmp	x4, x1
    25a0:	b.eq	262c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    25a4:	mov	w21, w24
    25a8:	mov	x2, #0x0                   	// #0
    25ac:	mov	w24, #0x0                   	// #0
    25b0:	str	x27, [sp, #80]
    25b4:	nop
    25b8:	add	x2, x2, x2, lsl #1
    25bc:	ldr	x0, [x22, #24]
    25c0:	lsl	x2, x2, #4
    25c4:	ldr	x19, [x20, #24]
    25c8:	ldr	s1, [x0, x2]
    25cc:	ldr	s0, [x1, x2]
    25d0:	add	x19, x19, x2
    25d4:	add	x26, x19, #0x8
    25d8:	fcmp	s1, s0
    25dc:	ldr	w0, [x19, #16]
    25e0:	cset	x27, eq  // eq = none
    25e4:	cmp	w0, #0x40
    25e8:	b.ls	25fc <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    25ec:	ldr	x0, [x19, #8]
    25f0:	cbz	x0, 25fc <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    25f4:	bl	0 <_ZdaPv>
    25f8:	ldp	x1, x4, [x23, #24]
    25fc:	sub	x3, x4, x1
    2600:	str	x27, [x19, #8]
    2604:	add	w2, w24, #0x1
    2608:	asr	x3, x3, #4
    260c:	str	w21, [x26, #8]
    2610:	mov	x24, x2
    2614:	mul	x3, x3, x25
    2618:	cmp	x3, w2, uxtw
    261c:	b.hi	25b8 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    2620:	ldp	x25, x26, [sp, #64]
    2624:	ldr	x27, [sp, #80]
    2628:	b	2570 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    262c:	ldp	x25, x26, [sp, #64]
    2630:	b	2460 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    2634:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2638:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    263c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2640:	add	x3, x3, #0x0
    2644:	add	x1, x1, #0x0
    2648:	add	x0, x0, #0x0
    264c:	mov	w2, #0x180                 	// #384
    2650:	str	x27, [sp, #80]
    2654:	bl	0 <__assert_fail>

0000000000002658 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>:
    2658:	stp	x29, x30, [sp, #-352]!
    265c:	mov	x29, sp
    2660:	stp	x19, x20, [sp, #16]
    2664:	mov	x20, x8
    2668:	mov	x19, x0
    266c:	stp	x21, x22, [sp, #32]
    2670:	mov	x21, x2
    2674:	ldrb	w2, [x2, #8]
    2678:	stp	x23, x24, [sp, #48]
    267c:	mov	x22, x1
    2680:	cmp	w2, #0x2
    2684:	stp	x25, x26, [sp, #64]
    2688:	mov	w25, #0x1                   	// #1
    268c:	stp	xzr, xzr, [sp, #112]
    2690:	str	w25, [sp, #128]
    2694:	stp	xzr, xzr, [sp, #136]
    2698:	str	xzr, [sp, #152]
    269c:	b.eq	275c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x104>  // b.none
    26a0:	ldr	d0, [x0]
    26a4:	fcmp	d0, d0
    26a8:	b.ne	270c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    26ac:	ldr	d0, [x1]
    26b0:	fcmp	d0, d0
    26b4:	b.ne	270c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    26b8:	cmp	w2, #0x10
    26bc:	b.eq	27f0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    26c0:	add	x24, sp, #0x130
    26c4:	add	x23, sp, #0x70
    26c8:	add	x0, sp, #0x100
    26cc:	mov	x1, x19
    26d0:	mov	x19, x0
    26d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    26d8:	mov	x1, x22
    26dc:	mov	x0, x24
    26e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    26e4:	mov	x8, x20
    26e8:	mov	x2, x21
    26ec:	mov	x1, x24
    26f0:	mov	x0, x19
    26f4:	bl	2398 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    26f8:	mov	x0, x24
    26fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2700:	mov	x0, x19
    2704:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2708:	b	2738 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    270c:	mov	x2, x20
    2710:	mov	x1, #0x1                   	// #1
    2714:	ldr	x3, [sp, #112]
    2718:	add	x23, sp, #0x70
    271c:	str	x3, [x2], #8
    2720:	str	x1, [sp, #120]
    2724:	str	w1, [x2, #8]
    2728:	str	x1, [x20, #8]
    272c:	stp	xzr, xzr, [x20, #24]
    2730:	str	xzr, [x20, #40]
    2734:	str	wzr, [sp, #128]
    2738:	mov	x0, x23
    273c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2740:	mov	x0, x20
    2744:	ldp	x19, x20, [sp, #16]
    2748:	ldp	x21, x22, [sp, #32]
    274c:	ldp	x23, x24, [sp, #48]
    2750:	ldp	x25, x26, [sp, #64]
    2754:	ldp	x29, x30, [sp], #352
    2758:	ret
    275c:	ldr	s0, [x0]
    2760:	fcmp	s0, s0
    2764:	b.ne	2774 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x11c>  // b.any
    2768:	ldr	s0, [x1]
    276c:	fcmp	s0, s0
    2770:	b.eq	26c0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    2774:	mov	w2, #0x1                   	// #1
    2778:	mov	x3, #0x1                   	// #1
    277c:	add	x23, sp, #0x70
    2780:	add	x1, sp, #0x130
    2784:	add	x0, x23, #0x8
    2788:	str	x3, [sp, #304]
    278c:	str	w2, [sp, #312]
    2790:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2794:	ldr	w0, [sp, #312]
    2798:	cmp	w0, #0x40
    279c:	b.ls	27ac <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x154>  // b.plast
    27a0:	ldr	x0, [sp, #304]
    27a4:	cbz	x0, 27ac <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x154>
    27a8:	bl	0 <_ZdaPv>
    27ac:	mov	x0, x20
    27b0:	ldr	x2, [sp, #112]
    27b4:	str	x2, [x0], #8
    27b8:	ldr	w2, [sp, #128]
    27bc:	str	w2, [x0, #8]
    27c0:	ldr	x0, [sp, #120]
    27c4:	str	x0, [x20, #8]
    27c8:	ldr	x0, [sp, #136]
    27cc:	str	x0, [x20, #24]
    27d0:	ldr	x2, [sp, #144]
    27d4:	str	x2, [x20, #32]
    27d8:	ldr	x0, [sp, #152]
    27dc:	str	x0, [x20, #40]
    27e0:	str	wzr, [sp, #128]
    27e4:	stp	xzr, xzr, [sp, #136]
    27e8:	str	xzr, [sp, #152]
    27ec:	b	2738 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    27f0:	mov	x0, x21
    27f4:	stp	x27, x28, [sp, #80]
    27f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    27fc:	ldp	x2, x1, [x19, #24]
    2800:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2804:	ldr	x3, [x0, #24]
    2808:	movk	x26, #0xaaab
    280c:	sub	x0, x1, x2
    2810:	ldrb	w3, [x3, #8]
    2814:	ldp	x4, x2, [x22, #24]
    2818:	asr	x1, x0, #4
    281c:	cmp	w3, #0x2
    2820:	mul	x1, x1, x26
    2824:	sub	x2, x2, x4
    2828:	b.eq	28e4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    282c:	cmp	x2, x0
    2830:	b.ne	2b40 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    2834:	add	x23, sp, #0x70
    2838:	add	x24, sp, #0x130
    283c:	add	x0, x23, #0x18
    2840:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2844:	ldp	x2, x0, [x19, #24]
    2848:	mov	w28, #0x0                   	// #0
    284c:	mov	x1, #0x0                   	// #0
    2850:	mov	x27, #0x1                   	// #1
    2854:	cmp	x0, x2
    2858:	b.ne	28a8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x250>  // b.any
    285c:	b	299c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    2860:	mov	x1, x24
    2864:	str	x27, [sp, #304]
    2868:	str	w25, [sp, #312]
    286c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2870:	ldr	w0, [sp, #312]
    2874:	cmp	w0, #0x40
    2878:	b.ls	2888 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x230>  // b.plast
    287c:	ldr	x0, [sp, #304]
    2880:	cbz	x0, 2888 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x230>
    2884:	bl	0 <_ZdaPv>
    2888:	ldp	x2, x0, [x19, #24]
    288c:	add	w1, w28, #0x1
    2890:	mov	x28, x1
    2894:	sub	x0, x0, x2
    2898:	asr	x0, x0, #4
    289c:	mul	x0, x0, x26
    28a0:	cmp	x0, w1, uxtw
    28a4:	b.ls	299c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    28a8:	add	x1, x1, x1, lsl #1
    28ac:	ldr	x0, [sp, #136]
    28b0:	lsl	x1, x1, #4
    28b4:	add	x0, x0, x1
    28b8:	ldr	d0, [x2, x1]
    28bc:	add	x0, x0, #0x8
    28c0:	fcmp	d0, d0
    28c4:	b.ne	2860 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    28c8:	ldr	x2, [x22, #24]
    28cc:	ldr	d0, [x2, x1]
    28d0:	fcmp	d0, d0
    28d4:	b.ne	2860 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    28d8:	mov	x1, x24
    28dc:	str	xzr, [sp, #304]
    28e0:	b	2868 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x210>
    28e4:	cmp	x2, x0
    28e8:	b.ne	2b40 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    28ec:	add	x23, sp, #0x70
    28f0:	add	x24, sp, #0x130
    28f4:	add	x0, x23, #0x18
    28f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    28fc:	ldp	x2, x0, [x19, #24]
    2900:	mov	w28, #0x0                   	// #0
    2904:	mov	x1, #0x0                   	// #0
    2908:	mov	x27, #0x1                   	// #1
    290c:	cmp	x2, x0
    2910:	b.ne	2960 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x308>  // b.any
    2914:	b	299c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    2918:	mov	x1, x24
    291c:	str	x27, [sp, #304]
    2920:	str	w25, [sp, #312]
    2924:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2928:	ldr	w0, [sp, #312]
    292c:	cmp	w0, #0x40
    2930:	b.ls	2940 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>  // b.plast
    2934:	ldr	x0, [sp, #304]
    2938:	cbz	x0, 2940 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>
    293c:	bl	0 <_ZdaPv>
    2940:	ldp	x2, x0, [x19, #24]
    2944:	add	w1, w28, #0x1
    2948:	mov	x28, x1
    294c:	sub	x0, x0, x2
    2950:	asr	x0, x0, #4
    2954:	mul	x0, x0, x26
    2958:	cmp	x0, w1, uxtw
    295c:	b.ls	299c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    2960:	add	x1, x1, x1, lsl #1
    2964:	ldr	x0, [sp, #136]
    2968:	lsl	x1, x1, #4
    296c:	add	x0, x0, x1
    2970:	ldr	s0, [x2, x1]
    2974:	add	x0, x0, #0x8
    2978:	fcmp	s0, s0
    297c:	b.ne	2918 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    2980:	ldr	x2, [x22, #24]
    2984:	ldr	s0, [x2, x1]
    2988:	fcmp	s0, s0
    298c:	b.ne	2918 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    2990:	mov	x1, x24
    2994:	str	xzr, [sp, #304]
    2998:	b	2920 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2c8>
    299c:	ldrb	w0, [x21, #8]
    29a0:	cmp	w0, #0x10
    29a4:	b.ne	2b38 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4e0>  // b.any
    29a8:	add	x25, sp, #0xd0
    29ac:	add	x0, sp, #0xa0
    29b0:	mov	x1, x23
    29b4:	str	x0, [sp, #104]
    29b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    29bc:	add	x26, sp, #0x100
    29c0:	mov	x0, x25
    29c4:	mov	x1, x19
    29c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    29cc:	mov	x1, x22
    29d0:	mov	x0, x26
    29d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    29d8:	mov	x8, x24
    29dc:	mov	x0, x25
    29e0:	mov	x2, x21
    29e4:	mov	x1, x26
    29e8:	bl	2398 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    29ec:	ldr	x2, [sp, #304]
    29f0:	add	x1, x24, #0x8
    29f4:	add	x0, x23, #0x8
    29f8:	str	x2, [sp, #112]
    29fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2a00:	add	x1, x24, #0x18
    2a04:	add	x0, x23, #0x18
    2a08:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    2a0c:	mov	x0, x24
    2a10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2a14:	mov	x0, x26
    2a18:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2a1c:	mov	x0, x25
    2a20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2a24:	ldp	x27, x25, [x19, #24]
    2a28:	ldr	x0, [sp, #136]
    2a2c:	str	x0, [sp, #96]
    2a30:	cmp	x25, x27
    2a34:	b.eq	2aa8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x450>  // b.none
    2a38:	mov	x21, #0x0                   	// #0
    2a3c:	mov	x22, #0x0                   	// #0
    2a40:	ldr	x0, [sp, #184]
    2a44:	add	x0, x0, x21
    2a48:	add	x26, x0, #0x8
    2a4c:	ldr	w28, [x0, #16]
    2a50:	cmp	w28, #0x40
    2a54:	b.ls	2a6c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x414>  // b.plast
    2a58:	mov	x0, x26
    2a5c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2a60:	sub	w28, w28, w0
    2a64:	cmp	w28, #0x40
    2a68:	b.hi	2a84 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    2a6c:	mov	x0, x26
    2a70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2a74:	mov	x2, x0
    2a78:	cmp	x0, #0x1
    2a7c:	b.eq	2af8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4a0>  // b.none
    2a80:	ldp	x27, x25, [x19, #24]
    2a84:	sub	x0, x25, x27
    2a88:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2a8c:	add	x22, x22, #0x1
    2a90:	asr	x0, x0, #4
    2a94:	movk	x1, #0xaaab
    2a98:	add	x21, x21, #0x30
    2a9c:	mul	x0, x0, x1
    2aa0:	cmp	x22, x0
    2aa4:	b.cc	2a40 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3e8>  // b.lo, b.ul, b.last
    2aa8:	mov	x2, x20
    2aac:	ldr	w3, [sp, #128]
    2ab0:	ldr	x0, [sp, #112]
    2ab4:	str	wzr, [sp, #128]
    2ab8:	str	x0, [x2], #8
    2abc:	ldr	x0, [sp, #104]
    2ac0:	str	w3, [x2, #8]
    2ac4:	ldr	x2, [sp, #120]
    2ac8:	str	x2, [x20, #8]
    2acc:	ldr	x2, [sp, #96]
    2ad0:	str	x2, [x20, #24]
    2ad4:	ldr	x2, [sp, #144]
    2ad8:	str	x2, [x20, #32]
    2adc:	ldr	x2, [sp, #152]
    2ae0:	str	x2, [x20, #40]
    2ae4:	stp	xzr, xzr, [sp, #136]
    2ae8:	str	xzr, [sp, #152]
    2aec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2af0:	ldp	x27, x28, [sp, #80]
    2af4:	b	2738 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    2af8:	ldr	x0, [sp, #96]
    2afc:	mov	x1, x24
    2b00:	str	x2, [sp, #304]
    2b04:	add	x0, x0, x21
    2b08:	str	w2, [sp, #312]
    2b0c:	add	x0, x0, #0x8
    2b10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b14:	ldr	w0, [sp, #312]
    2b18:	cmp	w0, #0x40
    2b1c:	b.ls	2b2c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>  // b.plast
    2b20:	ldr	x0, [sp, #304]
    2b24:	cbz	x0, 2b2c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>
    2b28:	bl	0 <_ZdaPv>
    2b2c:	ldr	x0, [sp, #136]
    2b30:	str	x0, [sp, #96]
    2b34:	b	2a80 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x428>
    2b38:	ldp	x27, x28, [sp, #80]
    2b3c:	b	26c8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x70>
    2b40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b4c:	add	x3, x3, #0x0
    2b50:	add	x1, x1, #0x0
    2b54:	add	x0, x0, #0x0
    2b58:	mov	w2, #0x217                 	// #535
    2b5c:	bl	0 <__assert_fail>

0000000000002b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>:
    2b60:	stp	x29, x30, [sp, #-176]!
    2b64:	mov	x29, sp
    2b68:	stp	x23, x24, [sp, #48]
    2b6c:	add	x24, x8, #0x18
    2b70:	stp	x19, x20, [sp, #16]
    2b74:	mov	x20, x0
    2b78:	mov	x19, x8
    2b7c:	stp	x21, x22, [sp, #32]
    2b80:	mov	x22, x2
    2b84:	mov	x21, x1
    2b88:	stp	x25, x26, [sp, #64]
    2b8c:	mov	w25, #0x1                   	// #1
    2b90:	stp	x27, x28, [sp, #80]
    2b94:	add	x28, x8, #0x8
    2b98:	str	xzr, [x8, #24]
    2b9c:	stp	xzr, xzr, [x24, #8]
    2ba0:	stp	xzr, xzr, [x8]
    2ba4:	ldrb	w0, [x2, #8]
    2ba8:	str	w25, [x28, #8]
    2bac:	cmp	w0, #0x2
    2bb0:	b.eq	2cc0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.none
    2bb4:	ldr	d0, [x20]
    2bb8:	fcmp	d0, d0
    2bbc:	b.ne	2cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.any
    2bc0:	ldr	d0, [x1]
    2bc4:	fcmp	d0, d0
    2bc8:	b.ne	2cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.any
    2bcc:	cmp	w0, #0x10
    2bd0:	b.ne	2d28 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>  // b.any
    2bd4:	mov	x0, x2
    2bd8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2bdc:	ldp	x2, x1, [x20, #24]
    2be0:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2be4:	ldr	x3, [x0, #24]
    2be8:	movk	x26, #0xaaab
    2bec:	sub	x0, x1, x2
    2bf0:	ldrb	w3, [x3, #8]
    2bf4:	ldp	x4, x2, [x21, #24]
    2bf8:	asr	x1, x0, #4
    2bfc:	cmp	w3, #0x2
    2c00:	mul	x1, x1, x26
    2c04:	sub	x2, x2, x4
    2c08:	b.eq	2fd0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x470>  // b.none
    2c0c:	cmp	x2, x0
    2c10:	b.ne	312c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5cc>  // b.any
    2c14:	mov	x0, x24
    2c18:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2c1c:	ldp	x3, x0, [x20, #24]
    2c20:	add	x23, sp, #0x80
    2c24:	mov	w27, #0x0                   	// #0
    2c28:	mov	x1, #0x0                   	// #0
    2c2c:	cmp	x3, x0
    2c30:	b.ne	2c80 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    2c34:	b	2d28 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>
    2c38:	mov	x1, x23
    2c3c:	str	xzr, [sp, #128]
    2c40:	str	w25, [sp, #136]
    2c44:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2c48:	ldr	w0, [sp, #136]
    2c4c:	cmp	w0, #0x40
    2c50:	b.ls	2c60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x100>  // b.plast
    2c54:	ldr	x0, [sp, #128]
    2c58:	cbz	x0, 2c60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x100>
    2c5c:	bl	0 <_ZdaPv>
    2c60:	ldp	x3, x0, [x20, #24]
    2c64:	add	w1, w27, #0x1
    2c68:	mov	x27, x1
    2c6c:	sub	x0, x0, x3
    2c70:	asr	x0, x0, #4
    2c74:	mul	x0, x0, x26
    2c78:	cmp	x0, w1, uxtw
    2c7c:	b.ls	2d2c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1cc>  // b.plast
    2c80:	add	x1, x1, x1, lsl #1
    2c84:	ldr	x0, [x19, #24]
    2c88:	lsl	x1, x1, #4
    2c8c:	add	x0, x0, x1
    2c90:	ldr	d0, [x3, x1]
    2c94:	add	x0, x0, #0x8
    2c98:	fcmp	d0, d0
    2c9c:	b.ne	2c38 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.any
    2ca0:	ldr	x3, [x21, #24]
    2ca4:	ldr	d0, [x3, x1]
    2ca8:	fcmp	d0, d0
    2cac:	b.ne	2c38 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.any
    2cb0:	mov	x2, #0x1                   	// #1
    2cb4:	mov	x1, x23
    2cb8:	str	x2, [sp, #128]
    2cbc:	b	2c40 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    2cc0:	ldr	s0, [x20]
    2cc4:	fcmp	s0, s0
    2cc8:	b.ne	2cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.any
    2ccc:	ldr	s0, [x1]
    2cd0:	fcmp	s0, s0
    2cd4:	b.eq	2d28 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>  // b.none
    2cd8:	mov	w2, #0x1                   	// #1
    2cdc:	mov	x0, x28
    2ce0:	add	x1, sp, #0x80
    2ce4:	str	xzr, [sp, #128]
    2ce8:	str	w2, [sp, #136]
    2cec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2cf0:	ldr	w0, [sp, #136]
    2cf4:	cmp	w0, #0x40
    2cf8:	b.ls	2d08 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>  // b.plast
    2cfc:	ldr	x0, [sp, #128]
    2d00:	cbz	x0, 2d08 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>
    2d04:	bl	0 <_ZdaPv>
    2d08:	mov	x0, x19
    2d0c:	ldp	x19, x20, [sp, #16]
    2d10:	ldp	x21, x22, [sp, #32]
    2d14:	ldp	x23, x24, [sp, #48]
    2d18:	ldp	x25, x26, [sp, #64]
    2d1c:	ldp	x27, x28, [sp, #80]
    2d20:	ldp	x29, x30, [sp], #176
    2d24:	ret
    2d28:	add	x23, sp, #0x80
    2d2c:	mov	x0, x23
    2d30:	mov	x1, x19
    2d34:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d38:	ldrb	w0, [x22, #8]
    2d3c:	cmp	w0, #0x3
    2d40:	b.eq	2ef0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x390>  // b.none
    2d44:	cmp	w0, #0x10
    2d48:	b.eq	2e14 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x2b4>  // b.none
    2d4c:	cmp	w0, #0x2
    2d50:	b.eq	2da0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x240>  // b.none
    2d54:	bl	0 <_ZN4llvm4dbgsEv>
    2d58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d5c:	add	x1, x1, #0x0
    2d60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d64:	mov	x19, x0
    2d68:	mov	w2, #0x0                   	// #0
    2d6c:	mov	w3, #0x0                   	// #0
    2d70:	mov	x0, x22
    2d74:	mov	x1, x19
    2d78:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    2d7c:	mov	x0, x19
    2d80:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d84:	add	x1, x1, #0x0
    2d88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d8c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d90:	mov	w2, #0x1bb                 	// #443
    2d94:	add	x1, x1, #0x0
    2d98:	mov	x0, #0x0                   	// #0
    2d9c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2da0:	ldr	s1, [x20]
    2da4:	mov	x0, x28
    2da8:	ldr	s0, [x21]
    2dac:	add	x1, sp, #0x70
    2db0:	mov	w2, #0x1                   	// #1
    2db4:	str	w2, [sp, #120]
    2db8:	fcmp	s1, s0
    2dbc:	cset	x2, ne  // ne = any
    2dc0:	str	x2, [sp, #112]
    2dc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2dc8:	ldr	w0, [sp, #120]
    2dcc:	cmp	w0, #0x40
    2dd0:	b.ls	2de0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>  // b.plast
    2dd4:	ldr	x0, [sp, #112]
    2dd8:	cbz	x0, 2de0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>
    2ddc:	bl	0 <_ZdaPv>
    2de0:	ldrb	w0, [x22, #8]
    2de4:	cmp	w0, #0x10
    2de8:	b.eq	2f10 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3b0>  // b.none
    2dec:	mov	x0, x23
    2df0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2df4:	mov	x0, x19
    2df8:	ldp	x19, x20, [sp, #16]
    2dfc:	ldp	x21, x22, [sp, #32]
    2e00:	ldp	x23, x24, [sp, #48]
    2e04:	ldp	x25, x26, [sp, #64]
    2e08:	ldp	x27, x28, [sp, #80]
    2e0c:	ldp	x29, x30, [sp], #176
    2e10:	ret
    2e14:	mov	x0, x22
    2e18:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2e1c:	ldp	x2, x1, [x20, #24]
    2e20:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2e24:	ldr	x3, [x0, #24]
    2e28:	movk	x26, #0xaaab
    2e2c:	sub	x0, x1, x2
    2e30:	ldrb	w3, [x3, #8]
    2e34:	ldp	x4, x2, [x21, #24]
    2e38:	asr	x1, x0, #4
    2e3c:	cmp	w3, #0x2
    2e40:	mul	x1, x1, x26
    2e44:	sub	x2, x2, x4
    2e48:	b.eq	3084 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x524>  // b.none
    2e4c:	cmp	x2, x0
    2e50:	b.ne	314c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5ec>  // b.any
    2e54:	mov	x0, x24
    2e58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2e5c:	ldp	x27, x28, [x20, #24]
    2e60:	cmp	x27, x28
    2e64:	b.eq	2dec <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    2e68:	mov	w25, #0x0                   	// #0
    2e6c:	mov	x0, #0x0                   	// #0
    2e70:	mov	w4, #0x1                   	// #1
    2e74:	nop
    2e78:	add	x0, x0, x0, lsl #1
    2e7c:	ldr	x1, [x21, #24]
    2e80:	lsl	x0, x0, #4
    2e84:	ldr	x24, [x19, #24]
    2e88:	ldr	d0, [x27, x0]
    2e8c:	ldr	d1, [x1, x0]
    2e90:	add	x24, x24, x0
    2e94:	add	x2, x24, #0x8
    2e98:	fcmp	d1, d0
    2e9c:	ldr	w0, [x24, #16]
    2ea0:	cset	x3, ne  // ne = any
    2ea4:	cmp	w0, #0x40
    2ea8:	b.ls	2ec8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x368>  // b.plast
    2eac:	ldr	x0, [x24, #8]
    2eb0:	cbz	x0, 2ec8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x368>
    2eb4:	stp	x3, x2, [sp, #96]
    2eb8:	bl	0 <_ZdaPv>
    2ebc:	mov	w4, #0x1                   	// #1
    2ec0:	ldp	x27, x28, [x20, #24]
    2ec4:	ldp	x3, x2, [sp, #96]
    2ec8:	sub	x1, x28, x27
    2ecc:	str	x3, [x24, #8]
    2ed0:	add	w0, w25, #0x1
    2ed4:	asr	x1, x1, #4
    2ed8:	str	w4, [x2, #8]
    2edc:	mov	x25, x0
    2ee0:	mul	x1, x1, x26
    2ee4:	cmp	x1, w0, uxtw
    2ee8:	b.hi	2e78 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x318>  // b.pmore
    2eec:	b	2de0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>
    2ef0:	ldr	d1, [x20]
    2ef4:	mov	w2, #0x1                   	// #1
    2ef8:	ldr	d0, [x21]
    2efc:	mov	x0, x28
    2f00:	add	x1, sp, #0x70
    2f04:	str	w2, [sp, #120]
    2f08:	fcmp	d1, d0
    2f0c:	b	2dbc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x25c>
    2f10:	ldp	x27, x28, [x20, #24]
    2f14:	cmp	x27, x28
    2f18:	b.eq	2dec <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    2f1c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2f20:	add	x0, sp, #0x70
    2f24:	mov	x21, #0x0                   	// #0
    2f28:	mov	x22, #0x0                   	// #0
    2f2c:	movk	x24, #0xaaab
    2f30:	str	x0, [sp, #96]
    2f34:	nop
    2f38:	ldr	x0, [sp, #152]
    2f3c:	add	x0, x0, x21
    2f40:	add	x25, x0, #0x8
    2f44:	ldr	w26, [x0, #16]
    2f48:	cmp	w26, #0x40
    2f4c:	b.ls	2f64 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x404>  // b.plast
    2f50:	mov	x0, x25
    2f54:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2f58:	sub	w1, w26, w0
    2f5c:	cmp	w1, #0x40
    2f60:	b.hi	2f74 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x414>  // b.pmore
    2f64:	mov	x0, x25
    2f68:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2f6c:	cbz	x0, 2f94 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x434>
    2f70:	ldp	x27, x28, [x20, #24]
    2f74:	sub	x0, x28, x27
    2f78:	add	x22, x22, #0x1
    2f7c:	add	x21, x21, #0x30
    2f80:	asr	x0, x0, #4
    2f84:	mul	x0, x0, x24
    2f88:	cmp	x22, x0
    2f8c:	b.cc	2f38 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d8>  // b.lo, b.ul, b.last
    2f90:	b	2dec <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>
    2f94:	ldr	x0, [x19, #24]
    2f98:	mov	w2, #0x1                   	// #1
    2f9c:	ldr	x1, [sp, #96]
    2fa0:	add	x0, x0, x21
    2fa4:	add	x0, x0, #0x8
    2fa8:	str	xzr, [sp, #112]
    2fac:	str	w2, [sp, #120]
    2fb0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2fb4:	ldr	w0, [sp, #120]
    2fb8:	cmp	w0, #0x40
    2fbc:	b.ls	2f70 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x410>  // b.plast
    2fc0:	ldr	x0, [sp, #112]
    2fc4:	cbz	x0, 2f70 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x410>
    2fc8:	bl	0 <_ZdaPv>
    2fcc:	b	2f70 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x410>
    2fd0:	cmp	x2, x0
    2fd4:	b.ne	312c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5cc>  // b.any
    2fd8:	mov	x0, x24
    2fdc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2fe0:	ldp	x3, x0, [x20, #24]
    2fe4:	add	x23, sp, #0x80
    2fe8:	mov	w27, #0x0                   	// #0
    2fec:	mov	x1, #0x0                   	// #0
    2ff0:	cmp	x3, x0
    2ff4:	b.ne	3044 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4e4>  // b.any
    2ff8:	b	2d28 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>
    2ffc:	mov	x1, x23
    3000:	str	xzr, [sp, #128]
    3004:	str	w25, [sp, #136]
    3008:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    300c:	ldr	w0, [sp, #136]
    3010:	cmp	w0, #0x40
    3014:	b.ls	3024 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4c4>  // b.plast
    3018:	ldr	x0, [sp, #128]
    301c:	cbz	x0, 3024 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4c4>
    3020:	bl	0 <_ZdaPv>
    3024:	ldp	x3, x0, [x20, #24]
    3028:	add	w1, w27, #0x1
    302c:	mov	x27, x1
    3030:	sub	x0, x0, x3
    3034:	asr	x0, x0, #4
    3038:	mul	x0, x0, x26
    303c:	cmp	x0, w1, uxtw
    3040:	b.ls	2d2c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1cc>  // b.plast
    3044:	add	x1, x1, x1, lsl #1
    3048:	ldr	x0, [x19, #24]
    304c:	lsl	x1, x1, #4
    3050:	add	x0, x0, x1
    3054:	ldr	s0, [x3, x1]
    3058:	add	x0, x0, #0x8
    305c:	fcmp	s0, s0
    3060:	b.ne	2ffc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x49c>  // b.any
    3064:	ldr	x3, [x21, #24]
    3068:	ldr	s0, [x3, x1]
    306c:	fcmp	s0, s0
    3070:	b.ne	2ffc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x49c>  // b.any
    3074:	mov	x2, #0x1                   	// #1
    3078:	mov	x1, x23
    307c:	str	x2, [sp, #128]
    3080:	b	3004 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4a4>
    3084:	cmp	x2, x0
    3088:	b.ne	314c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5ec>  // b.any
    308c:	mov	x0, x24
    3090:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3094:	ldp	x3, x0, [x20, #24]
    3098:	cmp	x3, x0
    309c:	b.eq	2dec <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    30a0:	mov	x24, x26
    30a4:	add	x26, sp, #0x70
    30a8:	mov	w27, #0x0                   	// #0
    30ac:	mov	x0, #0x0                   	// #0
    30b0:	mov	w25, #0x1                   	// #1
    30b4:	nop
    30b8:	add	x0, x0, x0, lsl #1
    30bc:	mov	x1, x26
    30c0:	ldr	x4, [x21, #24]
    30c4:	lsl	x0, x0, #4
    30c8:	ldr	x2, [x19, #24]
    30cc:	str	w25, [sp, #120]
    30d0:	ldr	s0, [x3, x0]
    30d4:	ldr	s1, [x4, x0]
    30d8:	add	x0, x2, x0
    30dc:	add	x0, x0, #0x8
    30e0:	fcmp	s1, s0
    30e4:	cset	x2, ne  // ne = any
    30e8:	str	x2, [sp, #112]
    30ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    30f0:	ldr	w0, [sp, #120]
    30f4:	cmp	w0, #0x40
    30f8:	b.ls	3108 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5a8>  // b.plast
    30fc:	ldr	x0, [sp, #112]
    3100:	cbz	x0, 3108 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5a8>
    3104:	bl	0 <_ZdaPv>
    3108:	ldp	x3, x1, [x20, #24]
    310c:	add	w0, w27, #0x1
    3110:	mov	x27, x0
    3114:	sub	x1, x1, x3
    3118:	asr	x1, x1, #4
    311c:	mul	x1, x1, x24
    3120:	cmp	x1, w0, uxtw
    3124:	b.hi	30b8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x558>  // b.pmore
    3128:	b	2de0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>
    312c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3130:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3134:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3138:	add	x3, x3, #0x0
    313c:	add	x1, x1, #0x0
    3140:	add	x0, x0, #0x0
    3144:	mov	w2, #0x1b3                 	// #435
    3148:	bl	0 <__assert_fail>
    314c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3150:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3154:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3158:	add	x3, x3, #0x0
    315c:	add	x1, x1, #0x0
    3160:	add	x0, x0, #0x0
    3164:	mov	w2, #0x1b8                 	// #440
    3168:	bl	0 <__assert_fail>
    316c:	nop

0000000000003170 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>:
    3170:	stp	x29, x30, [sp, #-352]!
    3174:	mov	x29, sp
    3178:	stp	x19, x20, [sp, #16]
    317c:	mov	x20, x8
    3180:	mov	x19, x0
    3184:	stp	x21, x22, [sp, #32]
    3188:	mov	x21, x2
    318c:	ldrb	w2, [x2, #8]
    3190:	stp	x23, x24, [sp, #48]
    3194:	mov	x22, x1
    3198:	cmp	w2, #0x2
    319c:	stp	x25, x26, [sp, #64]
    31a0:	mov	w25, #0x1                   	// #1
    31a4:	stp	xzr, xzr, [sp, #112]
    31a8:	str	w25, [sp, #128]
    31ac:	stp	xzr, xzr, [sp, #136]
    31b0:	str	xzr, [sp, #152]
    31b4:	b.eq	3274 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x104>  // b.none
    31b8:	ldr	d0, [x0]
    31bc:	fcmp	d0, d0
    31c0:	b.ne	3224 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    31c4:	ldr	d0, [x1]
    31c8:	fcmp	d0, d0
    31cc:	b.ne	3224 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    31d0:	cmp	w2, #0x10
    31d4:	b.eq	3308 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    31d8:	add	x24, sp, #0x130
    31dc:	add	x23, sp, #0x70
    31e0:	add	x0, sp, #0x100
    31e4:	mov	x1, x19
    31e8:	mov	x19, x0
    31ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    31f0:	mov	x1, x22
    31f4:	mov	x0, x24
    31f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    31fc:	mov	x8, x20
    3200:	mov	x2, x21
    3204:	mov	x1, x24
    3208:	mov	x0, x19
    320c:	bl	2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    3210:	mov	x0, x24
    3214:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3218:	mov	x0, x19
    321c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3220:	b	3250 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    3224:	mov	x2, x20
    3228:	mov	x1, #0x1                   	// #1
    322c:	ldr	x3, [sp, #112]
    3230:	add	x23, sp, #0x70
    3234:	str	x3, [x2], #8
    3238:	str	x1, [sp, #120]
    323c:	str	w1, [x2, #8]
    3240:	str	x1, [x20, #8]
    3244:	stp	xzr, xzr, [x20, #24]
    3248:	str	xzr, [x20, #40]
    324c:	str	wzr, [sp, #128]
    3250:	mov	x0, x23
    3254:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3258:	mov	x0, x20
    325c:	ldp	x19, x20, [sp, #16]
    3260:	ldp	x21, x22, [sp, #32]
    3264:	ldp	x23, x24, [sp, #48]
    3268:	ldp	x25, x26, [sp, #64]
    326c:	ldp	x29, x30, [sp], #352
    3270:	ret
    3274:	ldr	s0, [x0]
    3278:	fcmp	s0, s0
    327c:	b.ne	328c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x11c>  // b.any
    3280:	ldr	s0, [x1]
    3284:	fcmp	s0, s0
    3288:	b.eq	31d8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    328c:	mov	w2, #0x1                   	// #1
    3290:	mov	x3, #0x1                   	// #1
    3294:	add	x23, sp, #0x70
    3298:	add	x1, sp, #0x130
    329c:	add	x0, x23, #0x8
    32a0:	str	x3, [sp, #304]
    32a4:	str	w2, [sp, #312]
    32a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    32ac:	ldr	w0, [sp, #312]
    32b0:	cmp	w0, #0x40
    32b4:	b.ls	32c4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x154>  // b.plast
    32b8:	ldr	x0, [sp, #304]
    32bc:	cbz	x0, 32c4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x154>
    32c0:	bl	0 <_ZdaPv>
    32c4:	mov	x0, x20
    32c8:	ldr	x2, [sp, #112]
    32cc:	str	x2, [x0], #8
    32d0:	ldr	w2, [sp, #128]
    32d4:	str	w2, [x0, #8]
    32d8:	ldr	x0, [sp, #120]
    32dc:	str	x0, [x20, #8]
    32e0:	ldr	x0, [sp, #136]
    32e4:	str	x0, [x20, #24]
    32e8:	ldr	x2, [sp, #144]
    32ec:	str	x2, [x20, #32]
    32f0:	ldr	x0, [sp, #152]
    32f4:	str	x0, [x20, #40]
    32f8:	str	wzr, [sp, #128]
    32fc:	stp	xzr, xzr, [sp, #136]
    3300:	str	xzr, [sp, #152]
    3304:	b	3250 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    3308:	mov	x0, x21
    330c:	stp	x27, x28, [sp, #80]
    3310:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3314:	ldp	x2, x1, [x19, #24]
    3318:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    331c:	ldr	x3, [x0, #24]
    3320:	movk	x26, #0xaaab
    3324:	sub	x0, x1, x2
    3328:	ldrb	w3, [x3, #8]
    332c:	ldp	x4, x2, [x22, #24]
    3330:	asr	x1, x0, #4
    3334:	cmp	w3, #0x2
    3338:	mul	x1, x1, x26
    333c:	sub	x2, x2, x4
    3340:	b.eq	33fc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    3344:	cmp	x2, x0
    3348:	b.ne	3658 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    334c:	add	x23, sp, #0x70
    3350:	add	x24, sp, #0x130
    3354:	add	x0, x23, #0x18
    3358:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    335c:	ldp	x2, x0, [x19, #24]
    3360:	mov	w28, #0x0                   	// #0
    3364:	mov	x1, #0x0                   	// #0
    3368:	mov	x27, #0x1                   	// #1
    336c:	cmp	x0, x2
    3370:	b.ne	33c0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x250>  // b.any
    3374:	b	34b4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    3378:	mov	x1, x24
    337c:	str	x27, [sp, #304]
    3380:	str	w25, [sp, #312]
    3384:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3388:	ldr	w0, [sp, #312]
    338c:	cmp	w0, #0x40
    3390:	b.ls	33a0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x230>  // b.plast
    3394:	ldr	x0, [sp, #304]
    3398:	cbz	x0, 33a0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x230>
    339c:	bl	0 <_ZdaPv>
    33a0:	ldp	x2, x0, [x19, #24]
    33a4:	add	w1, w28, #0x1
    33a8:	mov	x28, x1
    33ac:	sub	x0, x0, x2
    33b0:	asr	x0, x0, #4
    33b4:	mul	x0, x0, x26
    33b8:	cmp	x0, w1, uxtw
    33bc:	b.ls	34b4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    33c0:	add	x1, x1, x1, lsl #1
    33c4:	ldr	x0, [sp, #136]
    33c8:	lsl	x1, x1, #4
    33cc:	add	x0, x0, x1
    33d0:	ldr	d0, [x2, x1]
    33d4:	add	x0, x0, #0x8
    33d8:	fcmp	d0, d0
    33dc:	b.ne	3378 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    33e0:	ldr	x2, [x22, #24]
    33e4:	ldr	d0, [x2, x1]
    33e8:	fcmp	d0, d0
    33ec:	b.ne	3378 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    33f0:	mov	x1, x24
    33f4:	str	xzr, [sp, #304]
    33f8:	b	3380 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x210>
    33fc:	cmp	x2, x0
    3400:	b.ne	3658 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    3404:	add	x23, sp, #0x70
    3408:	add	x24, sp, #0x130
    340c:	add	x0, x23, #0x18
    3410:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3414:	ldp	x2, x0, [x19, #24]
    3418:	mov	w28, #0x0                   	// #0
    341c:	mov	x1, #0x0                   	// #0
    3420:	mov	x27, #0x1                   	// #1
    3424:	cmp	x2, x0
    3428:	b.ne	3478 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x308>  // b.any
    342c:	b	34b4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    3430:	mov	x1, x24
    3434:	str	x27, [sp, #304]
    3438:	str	w25, [sp, #312]
    343c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3440:	ldr	w0, [sp, #312]
    3444:	cmp	w0, #0x40
    3448:	b.ls	3458 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>  // b.plast
    344c:	ldr	x0, [sp, #304]
    3450:	cbz	x0, 3458 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>
    3454:	bl	0 <_ZdaPv>
    3458:	ldp	x2, x0, [x19, #24]
    345c:	add	w1, w28, #0x1
    3460:	mov	x28, x1
    3464:	sub	x0, x0, x2
    3468:	asr	x0, x0, #4
    346c:	mul	x0, x0, x26
    3470:	cmp	x0, w1, uxtw
    3474:	b.ls	34b4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    3478:	add	x1, x1, x1, lsl #1
    347c:	ldr	x0, [sp, #136]
    3480:	lsl	x1, x1, #4
    3484:	add	x0, x0, x1
    3488:	ldr	s0, [x2, x1]
    348c:	add	x0, x0, #0x8
    3490:	fcmp	s0, s0
    3494:	b.ne	3430 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    3498:	ldr	x2, [x22, #24]
    349c:	ldr	s0, [x2, x1]
    34a0:	fcmp	s0, s0
    34a4:	b.ne	3430 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    34a8:	mov	x1, x24
    34ac:	str	xzr, [sp, #304]
    34b0:	b	3438 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2c8>
    34b4:	ldrb	w0, [x21, #8]
    34b8:	cmp	w0, #0x10
    34bc:	b.ne	3650 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4e0>  // b.any
    34c0:	add	x25, sp, #0xd0
    34c4:	add	x0, sp, #0xa0
    34c8:	mov	x1, x23
    34cc:	str	x0, [sp, #104]
    34d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    34d4:	add	x26, sp, #0x100
    34d8:	mov	x0, x25
    34dc:	mov	x1, x19
    34e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    34e4:	mov	x1, x22
    34e8:	mov	x0, x26
    34ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    34f0:	mov	x8, x24
    34f4:	mov	x0, x25
    34f8:	mov	x2, x21
    34fc:	mov	x1, x26
    3500:	bl	2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    3504:	ldr	x2, [sp, #304]
    3508:	add	x1, x24, #0x8
    350c:	add	x0, x23, #0x8
    3510:	str	x2, [sp, #112]
    3514:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3518:	add	x1, x24, #0x18
    351c:	add	x0, x23, #0x18
    3520:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    3524:	mov	x0, x24
    3528:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    352c:	mov	x0, x26
    3530:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3534:	mov	x0, x25
    3538:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    353c:	ldp	x27, x25, [x19, #24]
    3540:	ldr	x0, [sp, #136]
    3544:	str	x0, [sp, #96]
    3548:	cmp	x25, x27
    354c:	b.eq	35c0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x450>  // b.none
    3550:	mov	x21, #0x0                   	// #0
    3554:	mov	x22, #0x0                   	// #0
    3558:	ldr	x0, [sp, #184]
    355c:	add	x0, x0, x21
    3560:	add	x26, x0, #0x8
    3564:	ldr	w28, [x0, #16]
    3568:	cmp	w28, #0x40
    356c:	b.ls	3584 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x414>  // b.plast
    3570:	mov	x0, x26
    3574:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3578:	sub	w28, w28, w0
    357c:	cmp	w28, #0x40
    3580:	b.hi	359c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    3584:	mov	x0, x26
    3588:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    358c:	mov	x2, x0
    3590:	cmp	x0, #0x1
    3594:	b.eq	3610 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4a0>  // b.none
    3598:	ldp	x27, x25, [x19, #24]
    359c:	sub	x0, x25, x27
    35a0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    35a4:	add	x22, x22, #0x1
    35a8:	asr	x0, x0, #4
    35ac:	movk	x1, #0xaaab
    35b0:	add	x21, x21, #0x30
    35b4:	mul	x0, x0, x1
    35b8:	cmp	x22, x0
    35bc:	b.cc	3558 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3e8>  // b.lo, b.ul, b.last
    35c0:	mov	x2, x20
    35c4:	ldr	w3, [sp, #128]
    35c8:	ldr	x0, [sp, #112]
    35cc:	str	wzr, [sp, #128]
    35d0:	str	x0, [x2], #8
    35d4:	ldr	x0, [sp, #104]
    35d8:	str	w3, [x2, #8]
    35dc:	ldr	x2, [sp, #120]
    35e0:	str	x2, [x20, #8]
    35e4:	ldr	x2, [sp, #96]
    35e8:	str	x2, [x20, #24]
    35ec:	ldr	x2, [sp, #144]
    35f0:	str	x2, [x20, #32]
    35f4:	ldr	x2, [sp, #152]
    35f8:	str	x2, [x20, #40]
    35fc:	stp	xzr, xzr, [sp, #136]
    3600:	str	xzr, [sp, #152]
    3604:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3608:	ldp	x27, x28, [sp, #80]
    360c:	b	3250 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    3610:	ldr	x0, [sp, #96]
    3614:	mov	x1, x24
    3618:	str	x2, [sp, #304]
    361c:	add	x0, x0, x21
    3620:	str	w2, [sp, #312]
    3624:	add	x0, x0, #0x8
    3628:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    362c:	ldr	w0, [sp, #312]
    3630:	cmp	w0, #0x40
    3634:	b.ls	3644 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>  // b.plast
    3638:	ldr	x0, [sp, #304]
    363c:	cbz	x0, 3644 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>
    3640:	bl	0 <_ZdaPv>
    3644:	ldr	x0, [sp, #136]
    3648:	str	x0, [sp, #96]
    364c:	b	3598 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x428>
    3650:	ldp	x27, x28, [sp, #80]
    3654:	b	31e0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x70>
    3658:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    365c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3660:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3664:	add	x3, x3, #0x0
    3668:	add	x1, x1, #0x0
    366c:	add	x0, x0, #0x0
    3670:	mov	w2, #0x221                 	// #545
    3674:	bl	0 <__assert_fail>

0000000000003678 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>:
    3678:	stp	x29, x30, [sp, #-96]!
    367c:	add	x3, x8, #0x18
    3680:	mov	x29, sp
    3684:	stp	x19, x20, [sp, #16]
    3688:	mov	x20, x8
    368c:	stp	x21, x22, [sp, #32]
    3690:	mov	x21, x2
    3694:	mov	x2, x8
    3698:	stp	x23, x24, [sp, #48]
    369c:	mov	x23, x0
    36a0:	mov	w24, #0x1                   	// #1
    36a4:	str	xzr, [x8, #24]
    36a8:	mov	x22, x1
    36ac:	stp	xzr, xzr, [x3, #8]
    36b0:	str	xzr, [x2], #8
    36b4:	ldrb	w0, [x21, #8]
    36b8:	str	xzr, [x8, #8]
    36bc:	str	w24, [x2, #8]
    36c0:	cmp	w0, #0x3
    36c4:	b.eq	372c <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    36c8:	cmp	w0, #0x10
    36cc:	b.eq	3784 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    36d0:	cmp	w0, #0x2
    36d4:	b.eq	3758 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    36d8:	stp	x25, x26, [sp, #64]
    36dc:	str	x27, [sp, #80]
    36e0:	bl	0 <_ZN4llvm4dbgsEv>
    36e4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    36e8:	add	x1, x1, #0x0
    36ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    36f0:	mov	x19, x0
    36f4:	mov	w2, #0x0                   	// #0
    36f8:	mov	w3, #0x0                   	// #0
    36fc:	mov	x0, x21
    3700:	mov	x1, x19
    3704:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    3708:	mov	x0, x19
    370c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3710:	add	x1, x1, #0x0
    3714:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3718:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    371c:	mov	w2, #0x1eb                 	// #491
    3720:	add	x1, x1, #0x0
    3724:	mov	x0, #0x0                   	// #0
    3728:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    372c:	ldr	d0, [x1]
    3730:	ldr	d1, [x23]
    3734:	fcmpe	d1, d0
    3738:	cset	x0, mi  // mi = first
    373c:	str	x0, [x8, #8]
    3740:	mov	x0, x20
    3744:	ldp	x19, x20, [sp, #16]
    3748:	ldp	x21, x22, [sp, #32]
    374c:	ldp	x23, x24, [sp, #48]
    3750:	ldp	x29, x30, [sp], #96
    3754:	ret
    3758:	ldr	s1, [x23]
    375c:	ldr	s0, [x1]
    3760:	fcmpe	s1, s0
    3764:	cset	x0, mi  // mi = first
    3768:	str	x0, [x8, #8]
    376c:	mov	x0, x20
    3770:	ldp	x19, x20, [sp, #16]
    3774:	ldp	x21, x22, [sp, #32]
    3778:	ldp	x23, x24, [sp, #48]
    377c:	ldp	x29, x30, [sp], #96
    3780:	ret
    3784:	ldp	x5, x2, [x1, #24]
    3788:	stp	x25, x26, [sp, #64]
    378c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3790:	ldp	x1, x0, [x23, #24]
    3794:	movk	x25, #0xaaab
    3798:	ldr	x4, [x21, #24]
    379c:	sub	x2, x2, x5
    37a0:	sub	x0, x0, x1
    37a4:	ldrb	w4, [x4, #8]
    37a8:	asr	x1, x0, #4
    37ac:	cmp	w4, #0x2
    37b0:	mul	x1, x1, x25
    37b4:	b.eq	3868 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    37b8:	cmp	x2, x0
    37bc:	b.ne	3914 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    37c0:	mov	x0, x3
    37c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    37c8:	ldp	x1, x4, [x23, #24]
    37cc:	cmp	x1, x4
    37d0:	b.eq	390c <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    37d4:	mov	w21, #0x0                   	// #0
    37d8:	mov	x2, #0x0                   	// #0
    37dc:	str	x27, [sp, #80]
    37e0:	add	x2, x2, x2, lsl #1
    37e4:	ldr	x0, [x22, #24]
    37e8:	lsl	x2, x2, #4
    37ec:	ldr	x19, [x20, #24]
    37f0:	ldr	d0, [x0, x2]
    37f4:	ldr	d1, [x1, x2]
    37f8:	add	x19, x19, x2
    37fc:	add	x26, x19, #0x8
    3800:	fcmpe	d1, d0
    3804:	ldr	w0, [x19, #16]
    3808:	cset	x27, mi  // mi = first
    380c:	cmp	w0, #0x40
    3810:	b.ls	3824 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    3814:	ldr	x0, [x19, #8]
    3818:	cbz	x0, 3824 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    381c:	bl	0 <_ZdaPv>
    3820:	ldp	x1, x4, [x23, #24]
    3824:	sub	x3, x4, x1
    3828:	str	x27, [x19, #8]
    382c:	add	w2, w21, #0x1
    3830:	asr	x3, x3, #4
    3834:	str	w24, [x26, #8]
    3838:	mov	x21, x2
    383c:	mul	x3, x3, x25
    3840:	cmp	x3, w2, uxtw
    3844:	b.hi	37e0 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    3848:	ldp	x25, x26, [sp, #64]
    384c:	ldr	x27, [sp, #80]
    3850:	mov	x0, x20
    3854:	ldp	x19, x20, [sp, #16]
    3858:	ldp	x21, x22, [sp, #32]
    385c:	ldp	x23, x24, [sp, #48]
    3860:	ldp	x29, x30, [sp], #96
    3864:	ret
    3868:	cmp	x2, x0
    386c:	b.ne	3914 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    3870:	mov	x0, x3
    3874:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3878:	ldp	x1, x4, [x23, #24]
    387c:	cmp	x4, x1
    3880:	b.eq	390c <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    3884:	mov	w21, w24
    3888:	mov	x2, #0x0                   	// #0
    388c:	mov	w24, #0x0                   	// #0
    3890:	str	x27, [sp, #80]
    3894:	nop
    3898:	add	x2, x2, x2, lsl #1
    389c:	ldr	x0, [x22, #24]
    38a0:	lsl	x2, x2, #4
    38a4:	ldr	x19, [x20, #24]
    38a8:	ldr	s0, [x0, x2]
    38ac:	ldr	s1, [x1, x2]
    38b0:	add	x19, x19, x2
    38b4:	add	x26, x19, #0x8
    38b8:	fcmpe	s1, s0
    38bc:	ldr	w0, [x19, #16]
    38c0:	cset	x27, mi  // mi = first
    38c4:	cmp	w0, #0x40
    38c8:	b.ls	38dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    38cc:	ldr	x0, [x19, #8]
    38d0:	cbz	x0, 38dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    38d4:	bl	0 <_ZdaPv>
    38d8:	ldp	x1, x4, [x23, #24]
    38dc:	sub	x3, x4, x1
    38e0:	str	x27, [x19, #8]
    38e4:	add	w2, w24, #0x1
    38e8:	asr	x3, x3, #4
    38ec:	str	w21, [x26, #8]
    38f0:	mov	x24, x2
    38f4:	mul	x3, x3, x25
    38f8:	cmp	x3, w2, uxtw
    38fc:	b.hi	3898 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    3900:	ldp	x25, x26, [sp, #64]
    3904:	ldr	x27, [sp, #80]
    3908:	b	3850 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    390c:	ldp	x25, x26, [sp, #64]
    3910:	b	3740 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    3914:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3918:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    391c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3920:	add	x3, x3, #0x0
    3924:	add	x1, x1, #0x0
    3928:	add	x0, x0, #0x0
    392c:	mov	w2, #0x1e8                 	// #488
    3930:	str	x27, [sp, #80]
    3934:	bl	0 <__assert_fail>

0000000000003938 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
    3938:	stp	x29, x30, [sp, #-352]!
    393c:	mov	x29, sp
    3940:	stp	x19, x20, [sp, #16]
    3944:	mov	x20, x8
    3948:	mov	x19, x0
    394c:	stp	x21, x22, [sp, #32]
    3950:	mov	x21, x2
    3954:	ldrb	w2, [x2, #8]
    3958:	stp	x23, x24, [sp, #48]
    395c:	mov	x22, x1
    3960:	cmp	w2, #0x2
    3964:	stp	x25, x26, [sp, #64]
    3968:	mov	w25, #0x1                   	// #1
    396c:	stp	xzr, xzr, [sp, #112]
    3970:	str	w25, [sp, #128]
    3974:	stp	xzr, xzr, [sp, #136]
    3978:	str	xzr, [sp, #152]
    397c:	b.eq	3a3c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x104>  // b.none
    3980:	ldr	d0, [x0]
    3984:	fcmp	d0, d0
    3988:	b.ne	39ec <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    398c:	ldr	d0, [x1]
    3990:	fcmp	d0, d0
    3994:	b.ne	39ec <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    3998:	cmp	w2, #0x10
    399c:	b.eq	3ad0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    39a0:	add	x24, sp, #0x130
    39a4:	add	x23, sp, #0x70
    39a8:	add	x0, sp, #0x100
    39ac:	mov	x1, x19
    39b0:	mov	x19, x0
    39b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    39b8:	mov	x1, x22
    39bc:	mov	x0, x24
    39c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    39c4:	mov	x8, x20
    39c8:	mov	x2, x21
    39cc:	mov	x1, x24
    39d0:	mov	x0, x19
    39d4:	bl	3678 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    39d8:	mov	x0, x24
    39dc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    39e0:	mov	x0, x19
    39e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    39e8:	b	3a18 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    39ec:	mov	x2, x20
    39f0:	mov	x1, #0x1                   	// #1
    39f4:	ldr	x3, [sp, #112]
    39f8:	add	x23, sp, #0x70
    39fc:	str	x3, [x2], #8
    3a00:	str	x1, [sp, #120]
    3a04:	str	w1, [x2, #8]
    3a08:	str	x1, [x20, #8]
    3a0c:	stp	xzr, xzr, [x20, #24]
    3a10:	str	xzr, [x20, #40]
    3a14:	str	wzr, [sp, #128]
    3a18:	mov	x0, x23
    3a1c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3a20:	mov	x0, x20
    3a24:	ldp	x19, x20, [sp, #16]
    3a28:	ldp	x21, x22, [sp, #32]
    3a2c:	ldp	x23, x24, [sp, #48]
    3a30:	ldp	x25, x26, [sp, #64]
    3a34:	ldp	x29, x30, [sp], #352
    3a38:	ret
    3a3c:	ldr	s0, [x0]
    3a40:	fcmp	s0, s0
    3a44:	b.ne	3a54 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x11c>  // b.any
    3a48:	ldr	s0, [x1]
    3a4c:	fcmp	s0, s0
    3a50:	b.eq	39a0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    3a54:	mov	w2, #0x1                   	// #1
    3a58:	mov	x3, #0x1                   	// #1
    3a5c:	add	x23, sp, #0x70
    3a60:	add	x1, sp, #0x130
    3a64:	add	x0, x23, #0x8
    3a68:	str	x3, [sp, #304]
    3a6c:	str	w2, [sp, #312]
    3a70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3a74:	ldr	w0, [sp, #312]
    3a78:	cmp	w0, #0x40
    3a7c:	b.ls	3a8c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x154>  // b.plast
    3a80:	ldr	x0, [sp, #304]
    3a84:	cbz	x0, 3a8c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x154>
    3a88:	bl	0 <_ZdaPv>
    3a8c:	mov	x0, x20
    3a90:	ldr	x2, [sp, #112]
    3a94:	str	x2, [x0], #8
    3a98:	ldr	w2, [sp, #128]
    3a9c:	str	w2, [x0, #8]
    3aa0:	ldr	x0, [sp, #120]
    3aa4:	str	x0, [x20, #8]
    3aa8:	ldr	x0, [sp, #136]
    3aac:	str	x0, [x20, #24]
    3ab0:	ldr	x2, [sp, #144]
    3ab4:	str	x2, [x20, #32]
    3ab8:	ldr	x0, [sp, #152]
    3abc:	str	x0, [x20, #40]
    3ac0:	str	wzr, [sp, #128]
    3ac4:	stp	xzr, xzr, [sp, #136]
    3ac8:	str	xzr, [sp, #152]
    3acc:	b	3a18 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    3ad0:	mov	x0, x21
    3ad4:	stp	x27, x28, [sp, #80]
    3ad8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3adc:	ldp	x2, x1, [x19, #24]
    3ae0:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3ae4:	ldr	x3, [x0, #24]
    3ae8:	movk	x26, #0xaaab
    3aec:	sub	x0, x1, x2
    3af0:	ldrb	w3, [x3, #8]
    3af4:	ldp	x4, x2, [x22, #24]
    3af8:	asr	x1, x0, #4
    3afc:	cmp	w3, #0x2
    3b00:	mul	x1, x1, x26
    3b04:	sub	x2, x2, x4
    3b08:	b.eq	3bc4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    3b0c:	cmp	x2, x0
    3b10:	b.ne	3e20 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    3b14:	add	x23, sp, #0x70
    3b18:	add	x24, sp, #0x130
    3b1c:	add	x0, x23, #0x18
    3b20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3b24:	ldp	x2, x0, [x19, #24]
    3b28:	mov	w28, #0x0                   	// #0
    3b2c:	mov	x1, #0x0                   	// #0
    3b30:	mov	x27, #0x1                   	// #1
    3b34:	cmp	x0, x2
    3b38:	b.ne	3b88 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x250>  // b.any
    3b3c:	b	3c7c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    3b40:	mov	x1, x24
    3b44:	str	x27, [sp, #304]
    3b48:	str	w25, [sp, #312]
    3b4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3b50:	ldr	w0, [sp, #312]
    3b54:	cmp	w0, #0x40
    3b58:	b.ls	3b68 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x230>  // b.plast
    3b5c:	ldr	x0, [sp, #304]
    3b60:	cbz	x0, 3b68 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x230>
    3b64:	bl	0 <_ZdaPv>
    3b68:	ldp	x2, x0, [x19, #24]
    3b6c:	add	w1, w28, #0x1
    3b70:	mov	x28, x1
    3b74:	sub	x0, x0, x2
    3b78:	asr	x0, x0, #4
    3b7c:	mul	x0, x0, x26
    3b80:	cmp	x0, w1, uxtw
    3b84:	b.ls	3c7c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    3b88:	add	x1, x1, x1, lsl #1
    3b8c:	ldr	x0, [sp, #136]
    3b90:	lsl	x1, x1, #4
    3b94:	add	x0, x0, x1
    3b98:	ldr	d0, [x2, x1]
    3b9c:	add	x0, x0, #0x8
    3ba0:	fcmp	d0, d0
    3ba4:	b.ne	3b40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    3ba8:	ldr	x2, [x22, #24]
    3bac:	ldr	d0, [x2, x1]
    3bb0:	fcmp	d0, d0
    3bb4:	b.ne	3b40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    3bb8:	mov	x1, x24
    3bbc:	str	xzr, [sp, #304]
    3bc0:	b	3b48 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x210>
    3bc4:	cmp	x2, x0
    3bc8:	b.ne	3e20 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    3bcc:	add	x23, sp, #0x70
    3bd0:	add	x24, sp, #0x130
    3bd4:	add	x0, x23, #0x18
    3bd8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3bdc:	ldp	x2, x0, [x19, #24]
    3be0:	mov	w28, #0x0                   	// #0
    3be4:	mov	x1, #0x0                   	// #0
    3be8:	mov	x27, #0x1                   	// #1
    3bec:	cmp	x2, x0
    3bf0:	b.ne	3c40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x308>  // b.any
    3bf4:	b	3c7c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    3bf8:	mov	x1, x24
    3bfc:	str	x27, [sp, #304]
    3c00:	str	w25, [sp, #312]
    3c04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3c08:	ldr	w0, [sp, #312]
    3c0c:	cmp	w0, #0x40
    3c10:	b.ls	3c20 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>  // b.plast
    3c14:	ldr	x0, [sp, #304]
    3c18:	cbz	x0, 3c20 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>
    3c1c:	bl	0 <_ZdaPv>
    3c20:	ldp	x2, x0, [x19, #24]
    3c24:	add	w1, w28, #0x1
    3c28:	mov	x28, x1
    3c2c:	sub	x0, x0, x2
    3c30:	asr	x0, x0, #4
    3c34:	mul	x0, x0, x26
    3c38:	cmp	x0, w1, uxtw
    3c3c:	b.ls	3c7c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    3c40:	add	x1, x1, x1, lsl #1
    3c44:	ldr	x0, [sp, #136]
    3c48:	lsl	x1, x1, #4
    3c4c:	add	x0, x0, x1
    3c50:	ldr	s0, [x2, x1]
    3c54:	add	x0, x0, #0x8
    3c58:	fcmp	s0, s0
    3c5c:	b.ne	3bf8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    3c60:	ldr	x2, [x22, #24]
    3c64:	ldr	s0, [x2, x1]
    3c68:	fcmp	s0, s0
    3c6c:	b.ne	3bf8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    3c70:	mov	x1, x24
    3c74:	str	xzr, [sp, #304]
    3c78:	b	3c00 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2c8>
    3c7c:	ldrb	w0, [x21, #8]
    3c80:	cmp	w0, #0x10
    3c84:	b.ne	3e18 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4e0>  // b.any
    3c88:	add	x25, sp, #0xd0
    3c8c:	add	x0, sp, #0xa0
    3c90:	mov	x1, x23
    3c94:	str	x0, [sp, #104]
    3c98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3c9c:	add	x26, sp, #0x100
    3ca0:	mov	x0, x25
    3ca4:	mov	x1, x19
    3ca8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3cac:	mov	x1, x22
    3cb0:	mov	x0, x26
    3cb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3cb8:	mov	x8, x24
    3cbc:	mov	x0, x25
    3cc0:	mov	x2, x21
    3cc4:	mov	x1, x26
    3cc8:	bl	3678 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    3ccc:	ldr	x2, [sp, #304]
    3cd0:	add	x1, x24, #0x8
    3cd4:	add	x0, x23, #0x8
    3cd8:	str	x2, [sp, #112]
    3cdc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3ce0:	add	x1, x24, #0x18
    3ce4:	add	x0, x23, #0x18
    3ce8:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    3cec:	mov	x0, x24
    3cf0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3cf4:	mov	x0, x26
    3cf8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3cfc:	mov	x0, x25
    3d00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3d04:	ldp	x27, x25, [x19, #24]
    3d08:	ldr	x0, [sp, #136]
    3d0c:	str	x0, [sp, #96]
    3d10:	cmp	x25, x27
    3d14:	b.eq	3d88 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x450>  // b.none
    3d18:	mov	x21, #0x0                   	// #0
    3d1c:	mov	x22, #0x0                   	// #0
    3d20:	ldr	x0, [sp, #184]
    3d24:	add	x0, x0, x21
    3d28:	add	x26, x0, #0x8
    3d2c:	ldr	w28, [x0, #16]
    3d30:	cmp	w28, #0x40
    3d34:	b.ls	3d4c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x414>  // b.plast
    3d38:	mov	x0, x26
    3d3c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3d40:	sub	w28, w28, w0
    3d44:	cmp	w28, #0x40
    3d48:	b.hi	3d64 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    3d4c:	mov	x0, x26
    3d50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3d54:	mov	x2, x0
    3d58:	cmp	x0, #0x1
    3d5c:	b.eq	3dd8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4a0>  // b.none
    3d60:	ldp	x27, x25, [x19, #24]
    3d64:	sub	x0, x25, x27
    3d68:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3d6c:	add	x22, x22, #0x1
    3d70:	asr	x0, x0, #4
    3d74:	movk	x1, #0xaaab
    3d78:	add	x21, x21, #0x30
    3d7c:	mul	x0, x0, x1
    3d80:	cmp	x22, x0
    3d84:	b.cc	3d20 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3e8>  // b.lo, b.ul, b.last
    3d88:	mov	x2, x20
    3d8c:	ldr	w3, [sp, #128]
    3d90:	ldr	x0, [sp, #112]
    3d94:	str	wzr, [sp, #128]
    3d98:	str	x0, [x2], #8
    3d9c:	ldr	x0, [sp, #104]
    3da0:	str	w3, [x2, #8]
    3da4:	ldr	x2, [sp, #120]
    3da8:	str	x2, [x20, #8]
    3dac:	ldr	x2, [sp, #96]
    3db0:	str	x2, [x20, #24]
    3db4:	ldr	x2, [sp, #144]
    3db8:	str	x2, [x20, #32]
    3dbc:	ldr	x2, [sp, #152]
    3dc0:	str	x2, [x20, #40]
    3dc4:	stp	xzr, xzr, [sp, #136]
    3dc8:	str	xzr, [sp, #152]
    3dcc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3dd0:	ldp	x27, x28, [sp, #80]
    3dd4:	b	3a18 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    3dd8:	ldr	x0, [sp, #96]
    3ddc:	mov	x1, x24
    3de0:	str	x2, [sp, #304]
    3de4:	add	x0, x0, x21
    3de8:	str	w2, [sp, #312]
    3dec:	add	x0, x0, #0x8
    3df0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3df4:	ldr	w0, [sp, #312]
    3df8:	cmp	w0, #0x40
    3dfc:	b.ls	3e0c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>  // b.plast
    3e00:	ldr	x0, [sp, #304]
    3e04:	cbz	x0, 3e0c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>
    3e08:	bl	0 <_ZdaPv>
    3e0c:	ldr	x0, [sp, #136]
    3e10:	str	x0, [sp, #96]
    3e14:	b	3d60 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x428>
    3e18:	ldp	x27, x28, [sp, #80]
    3e1c:	b	39a8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x70>
    3e20:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3e24:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3e28:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3e2c:	add	x3, x3, #0x0
    3e30:	add	x1, x1, #0x0
    3e34:	add	x0, x0, #0x0
    3e38:	mov	w2, #0x23c                 	// #572
    3e3c:	bl	0 <__assert_fail>

0000000000003e40 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>:
    3e40:	stp	x29, x30, [sp, #-96]!
    3e44:	add	x3, x8, #0x18
    3e48:	mov	x29, sp
    3e4c:	stp	x19, x20, [sp, #16]
    3e50:	mov	x20, x8
    3e54:	stp	x21, x22, [sp, #32]
    3e58:	mov	x21, x2
    3e5c:	mov	x2, x8
    3e60:	stp	x23, x24, [sp, #48]
    3e64:	mov	x23, x0
    3e68:	mov	w24, #0x1                   	// #1
    3e6c:	str	xzr, [x8, #24]
    3e70:	mov	x22, x1
    3e74:	stp	xzr, xzr, [x3, #8]
    3e78:	str	xzr, [x2], #8
    3e7c:	ldrb	w0, [x21, #8]
    3e80:	str	xzr, [x8, #8]
    3e84:	str	w24, [x2, #8]
    3e88:	cmp	w0, #0x3
    3e8c:	b.eq	3ef4 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    3e90:	cmp	w0, #0x10
    3e94:	b.eq	3f4c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    3e98:	cmp	w0, #0x2
    3e9c:	b.eq	3f20 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    3ea0:	stp	x25, x26, [sp, #64]
    3ea4:	str	x27, [sp, #80]
    3ea8:	bl	0 <_ZN4llvm4dbgsEv>
    3eac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3eb0:	add	x1, x1, #0x0
    3eb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3eb8:	mov	x19, x0
    3ebc:	mov	w2, #0x0                   	// #0
    3ec0:	mov	w3, #0x0                   	// #0
    3ec4:	mov	x0, x21
    3ec8:	mov	x1, x19
    3ecc:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    3ed0:	mov	x0, x19
    3ed4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3ed8:	add	x1, x1, #0x0
    3edc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3ee0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3ee4:	mov	w2, #0x1f9                 	// #505
    3ee8:	add	x1, x1, #0x0
    3eec:	mov	x0, #0x0                   	// #0
    3ef0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    3ef4:	ldr	d0, [x1]
    3ef8:	ldr	d1, [x23]
    3efc:	fcmpe	d1, d0
    3f00:	cset	x0, gt
    3f04:	str	x0, [x8, #8]
    3f08:	mov	x0, x20
    3f0c:	ldp	x19, x20, [sp, #16]
    3f10:	ldp	x21, x22, [sp, #32]
    3f14:	ldp	x23, x24, [sp, #48]
    3f18:	ldp	x29, x30, [sp], #96
    3f1c:	ret
    3f20:	ldr	s1, [x23]
    3f24:	ldr	s0, [x1]
    3f28:	fcmpe	s1, s0
    3f2c:	cset	x0, gt
    3f30:	str	x0, [x8, #8]
    3f34:	mov	x0, x20
    3f38:	ldp	x19, x20, [sp, #16]
    3f3c:	ldp	x21, x22, [sp, #32]
    3f40:	ldp	x23, x24, [sp, #48]
    3f44:	ldp	x29, x30, [sp], #96
    3f48:	ret
    3f4c:	ldp	x5, x2, [x1, #24]
    3f50:	stp	x25, x26, [sp, #64]
    3f54:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3f58:	ldp	x1, x0, [x23, #24]
    3f5c:	movk	x25, #0xaaab
    3f60:	ldr	x4, [x21, #24]
    3f64:	sub	x2, x2, x5
    3f68:	sub	x0, x0, x1
    3f6c:	ldrb	w4, [x4, #8]
    3f70:	asr	x1, x0, #4
    3f74:	cmp	w4, #0x2
    3f78:	mul	x1, x1, x25
    3f7c:	b.eq	4030 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    3f80:	cmp	x2, x0
    3f84:	b.ne	40dc <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    3f88:	mov	x0, x3
    3f8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3f90:	ldp	x1, x4, [x23, #24]
    3f94:	cmp	x1, x4
    3f98:	b.eq	40d4 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    3f9c:	mov	w21, #0x0                   	// #0
    3fa0:	mov	x2, #0x0                   	// #0
    3fa4:	str	x27, [sp, #80]
    3fa8:	add	x2, x2, x2, lsl #1
    3fac:	ldr	x0, [x22, #24]
    3fb0:	lsl	x2, x2, #4
    3fb4:	ldr	x19, [x20, #24]
    3fb8:	ldr	d0, [x0, x2]
    3fbc:	ldr	d1, [x1, x2]
    3fc0:	add	x19, x19, x2
    3fc4:	add	x26, x19, #0x8
    3fc8:	fcmpe	d1, d0
    3fcc:	ldr	w0, [x19, #16]
    3fd0:	cset	x27, gt
    3fd4:	cmp	w0, #0x40
    3fd8:	b.ls	3fec <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    3fdc:	ldr	x0, [x19, #8]
    3fe0:	cbz	x0, 3fec <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    3fe4:	bl	0 <_ZdaPv>
    3fe8:	ldp	x1, x4, [x23, #24]
    3fec:	sub	x3, x4, x1
    3ff0:	str	x27, [x19, #8]
    3ff4:	add	w2, w21, #0x1
    3ff8:	asr	x3, x3, #4
    3ffc:	str	w24, [x26, #8]
    4000:	mov	x21, x2
    4004:	mul	x3, x3, x25
    4008:	cmp	x3, w2, uxtw
    400c:	b.hi	3fa8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    4010:	ldp	x25, x26, [sp, #64]
    4014:	ldr	x27, [sp, #80]
    4018:	mov	x0, x20
    401c:	ldp	x19, x20, [sp, #16]
    4020:	ldp	x21, x22, [sp, #32]
    4024:	ldp	x23, x24, [sp, #48]
    4028:	ldp	x29, x30, [sp], #96
    402c:	ret
    4030:	cmp	x2, x0
    4034:	b.ne	40dc <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    4038:	mov	x0, x3
    403c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4040:	ldp	x1, x4, [x23, #24]
    4044:	cmp	x4, x1
    4048:	b.eq	40d4 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    404c:	mov	w21, w24
    4050:	mov	x2, #0x0                   	// #0
    4054:	mov	w24, #0x0                   	// #0
    4058:	str	x27, [sp, #80]
    405c:	nop
    4060:	add	x2, x2, x2, lsl #1
    4064:	ldr	x0, [x22, #24]
    4068:	lsl	x2, x2, #4
    406c:	ldr	x19, [x20, #24]
    4070:	ldr	s0, [x0, x2]
    4074:	ldr	s1, [x1, x2]
    4078:	add	x19, x19, x2
    407c:	add	x26, x19, #0x8
    4080:	fcmpe	s1, s0
    4084:	ldr	w0, [x19, #16]
    4088:	cset	x27, gt
    408c:	cmp	w0, #0x40
    4090:	b.ls	40a4 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    4094:	ldr	x0, [x19, #8]
    4098:	cbz	x0, 40a4 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    409c:	bl	0 <_ZdaPv>
    40a0:	ldp	x1, x4, [x23, #24]
    40a4:	sub	x3, x4, x1
    40a8:	str	x27, [x19, #8]
    40ac:	add	w2, w24, #0x1
    40b0:	asr	x3, x3, #4
    40b4:	str	w21, [x26, #8]
    40b8:	mov	x24, x2
    40bc:	mul	x3, x3, x25
    40c0:	cmp	x3, w2, uxtw
    40c4:	b.hi	4060 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    40c8:	ldp	x25, x26, [sp, #64]
    40cc:	ldr	x27, [sp, #80]
    40d0:	b	4018 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    40d4:	ldp	x25, x26, [sp, #64]
    40d8:	b	3f08 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    40dc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    40e0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    40e4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    40e8:	add	x3, x3, #0x0
    40ec:	add	x1, x1, #0x0
    40f0:	add	x0, x0, #0x0
    40f4:	mov	w2, #0x1f6                 	// #502
    40f8:	str	x27, [sp, #80]
    40fc:	bl	0 <__assert_fail>

0000000000004100 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
    4100:	stp	x29, x30, [sp, #-352]!
    4104:	mov	x29, sp
    4108:	stp	x19, x20, [sp, #16]
    410c:	mov	x20, x8
    4110:	mov	x19, x0
    4114:	stp	x21, x22, [sp, #32]
    4118:	mov	x21, x2
    411c:	ldrb	w2, [x2, #8]
    4120:	stp	x23, x24, [sp, #48]
    4124:	mov	x22, x1
    4128:	cmp	w2, #0x2
    412c:	stp	x25, x26, [sp, #64]
    4130:	mov	w25, #0x1                   	// #1
    4134:	stp	xzr, xzr, [sp, #112]
    4138:	str	w25, [sp, #128]
    413c:	stp	xzr, xzr, [sp, #136]
    4140:	str	xzr, [sp, #152]
    4144:	b.eq	4204 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x104>  // b.none
    4148:	ldr	d0, [x0]
    414c:	fcmp	d0, d0
    4150:	b.ne	41b4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    4154:	ldr	d0, [x1]
    4158:	fcmp	d0, d0
    415c:	b.ne	41b4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    4160:	cmp	w2, #0x10
    4164:	b.eq	4298 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    4168:	add	x24, sp, #0x130
    416c:	add	x23, sp, #0x70
    4170:	add	x0, sp, #0x100
    4174:	mov	x1, x19
    4178:	mov	x19, x0
    417c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4180:	mov	x1, x22
    4184:	mov	x0, x24
    4188:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    418c:	mov	x8, x20
    4190:	mov	x2, x21
    4194:	mov	x1, x24
    4198:	mov	x0, x19
    419c:	bl	3e40 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    41a0:	mov	x0, x24
    41a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    41a8:	mov	x0, x19
    41ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    41b0:	b	41e0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    41b4:	mov	x2, x20
    41b8:	mov	x1, #0x1                   	// #1
    41bc:	ldr	x3, [sp, #112]
    41c0:	add	x23, sp, #0x70
    41c4:	str	x3, [x2], #8
    41c8:	str	x1, [sp, #120]
    41cc:	str	w1, [x2, #8]
    41d0:	str	x1, [x20, #8]
    41d4:	stp	xzr, xzr, [x20, #24]
    41d8:	str	xzr, [x20, #40]
    41dc:	str	wzr, [sp, #128]
    41e0:	mov	x0, x23
    41e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    41e8:	mov	x0, x20
    41ec:	ldp	x19, x20, [sp, #16]
    41f0:	ldp	x21, x22, [sp, #32]
    41f4:	ldp	x23, x24, [sp, #48]
    41f8:	ldp	x25, x26, [sp, #64]
    41fc:	ldp	x29, x30, [sp], #352
    4200:	ret
    4204:	ldr	s0, [x0]
    4208:	fcmp	s0, s0
    420c:	b.ne	421c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x11c>  // b.any
    4210:	ldr	s0, [x1]
    4214:	fcmp	s0, s0
    4218:	b.eq	4168 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    421c:	mov	w2, #0x1                   	// #1
    4220:	mov	x3, #0x1                   	// #1
    4224:	add	x23, sp, #0x70
    4228:	add	x1, sp, #0x130
    422c:	add	x0, x23, #0x8
    4230:	str	x3, [sp, #304]
    4234:	str	w2, [sp, #312]
    4238:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    423c:	ldr	w0, [sp, #312]
    4240:	cmp	w0, #0x40
    4244:	b.ls	4254 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x154>  // b.plast
    4248:	ldr	x0, [sp, #304]
    424c:	cbz	x0, 4254 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x154>
    4250:	bl	0 <_ZdaPv>
    4254:	mov	x0, x20
    4258:	ldr	x2, [sp, #112]
    425c:	str	x2, [x0], #8
    4260:	ldr	w2, [sp, #128]
    4264:	str	w2, [x0, #8]
    4268:	ldr	x0, [sp, #120]
    426c:	str	x0, [x20, #8]
    4270:	ldr	x0, [sp, #136]
    4274:	str	x0, [x20, #24]
    4278:	ldr	x2, [sp, #144]
    427c:	str	x2, [x20, #32]
    4280:	ldr	x0, [sp, #152]
    4284:	str	x0, [x20, #40]
    4288:	str	wzr, [sp, #128]
    428c:	stp	xzr, xzr, [sp, #136]
    4290:	str	xzr, [sp, #152]
    4294:	b	41e0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    4298:	mov	x0, x21
    429c:	stp	x27, x28, [sp, #80]
    42a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    42a4:	ldp	x2, x1, [x19, #24]
    42a8:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    42ac:	ldr	x3, [x0, #24]
    42b0:	movk	x26, #0xaaab
    42b4:	sub	x0, x1, x2
    42b8:	ldrb	w3, [x3, #8]
    42bc:	ldp	x4, x2, [x22, #24]
    42c0:	asr	x1, x0, #4
    42c4:	cmp	w3, #0x2
    42c8:	mul	x1, x1, x26
    42cc:	sub	x2, x2, x4
    42d0:	b.eq	438c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    42d4:	cmp	x2, x0
    42d8:	b.ne	45e8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    42dc:	add	x23, sp, #0x70
    42e0:	add	x24, sp, #0x130
    42e4:	add	x0, x23, #0x18
    42e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    42ec:	ldp	x2, x0, [x19, #24]
    42f0:	mov	w28, #0x0                   	// #0
    42f4:	mov	x1, #0x0                   	// #0
    42f8:	mov	x27, #0x1                   	// #1
    42fc:	cmp	x0, x2
    4300:	b.ne	4350 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x250>  // b.any
    4304:	b	4444 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    4308:	mov	x1, x24
    430c:	str	x27, [sp, #304]
    4310:	str	w25, [sp, #312]
    4314:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4318:	ldr	w0, [sp, #312]
    431c:	cmp	w0, #0x40
    4320:	b.ls	4330 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x230>  // b.plast
    4324:	ldr	x0, [sp, #304]
    4328:	cbz	x0, 4330 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x230>
    432c:	bl	0 <_ZdaPv>
    4330:	ldp	x2, x0, [x19, #24]
    4334:	add	w1, w28, #0x1
    4338:	mov	x28, x1
    433c:	sub	x0, x0, x2
    4340:	asr	x0, x0, #4
    4344:	mul	x0, x0, x26
    4348:	cmp	x0, w1, uxtw
    434c:	b.ls	4444 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    4350:	add	x1, x1, x1, lsl #1
    4354:	ldr	x0, [sp, #136]
    4358:	lsl	x1, x1, #4
    435c:	add	x0, x0, x1
    4360:	ldr	d0, [x2, x1]
    4364:	add	x0, x0, #0x8
    4368:	fcmp	d0, d0
    436c:	b.ne	4308 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    4370:	ldr	x2, [x22, #24]
    4374:	ldr	d0, [x2, x1]
    4378:	fcmp	d0, d0
    437c:	b.ne	4308 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    4380:	mov	x1, x24
    4384:	str	xzr, [sp, #304]
    4388:	b	4310 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x210>
    438c:	cmp	x2, x0
    4390:	b.ne	45e8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    4394:	add	x23, sp, #0x70
    4398:	add	x24, sp, #0x130
    439c:	add	x0, x23, #0x18
    43a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    43a4:	ldp	x2, x0, [x19, #24]
    43a8:	mov	w28, #0x0                   	// #0
    43ac:	mov	x1, #0x0                   	// #0
    43b0:	mov	x27, #0x1                   	// #1
    43b4:	cmp	x2, x0
    43b8:	b.ne	4408 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x308>  // b.any
    43bc:	b	4444 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    43c0:	mov	x1, x24
    43c4:	str	x27, [sp, #304]
    43c8:	str	w25, [sp, #312]
    43cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    43d0:	ldr	w0, [sp, #312]
    43d4:	cmp	w0, #0x40
    43d8:	b.ls	43e8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>  // b.plast
    43dc:	ldr	x0, [sp, #304]
    43e0:	cbz	x0, 43e8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>
    43e4:	bl	0 <_ZdaPv>
    43e8:	ldp	x2, x0, [x19, #24]
    43ec:	add	w1, w28, #0x1
    43f0:	mov	x28, x1
    43f4:	sub	x0, x0, x2
    43f8:	asr	x0, x0, #4
    43fc:	mul	x0, x0, x26
    4400:	cmp	x0, w1, uxtw
    4404:	b.ls	4444 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    4408:	add	x1, x1, x1, lsl #1
    440c:	ldr	x0, [sp, #136]
    4410:	lsl	x1, x1, #4
    4414:	add	x0, x0, x1
    4418:	ldr	s0, [x2, x1]
    441c:	add	x0, x0, #0x8
    4420:	fcmp	s0, s0
    4424:	b.ne	43c0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    4428:	ldr	x2, [x22, #24]
    442c:	ldr	s0, [x2, x1]
    4430:	fcmp	s0, s0
    4434:	b.ne	43c0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    4438:	mov	x1, x24
    443c:	str	xzr, [sp, #304]
    4440:	b	43c8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2c8>
    4444:	ldrb	w0, [x21, #8]
    4448:	cmp	w0, #0x10
    444c:	b.ne	45e0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4e0>  // b.any
    4450:	add	x25, sp, #0xd0
    4454:	add	x0, sp, #0xa0
    4458:	mov	x1, x23
    445c:	str	x0, [sp, #104]
    4460:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4464:	add	x26, sp, #0x100
    4468:	mov	x0, x25
    446c:	mov	x1, x19
    4470:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4474:	mov	x1, x22
    4478:	mov	x0, x26
    447c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4480:	mov	x8, x24
    4484:	mov	x0, x25
    4488:	mov	x2, x21
    448c:	mov	x1, x26
    4490:	bl	3e40 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    4494:	ldr	x2, [sp, #304]
    4498:	add	x1, x24, #0x8
    449c:	add	x0, x23, #0x8
    44a0:	str	x2, [sp, #112]
    44a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    44a8:	add	x1, x24, #0x18
    44ac:	add	x0, x23, #0x18
    44b0:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    44b4:	mov	x0, x24
    44b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    44bc:	mov	x0, x26
    44c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    44c4:	mov	x0, x25
    44c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    44cc:	ldp	x27, x25, [x19, #24]
    44d0:	ldr	x0, [sp, #136]
    44d4:	str	x0, [sp, #96]
    44d8:	cmp	x25, x27
    44dc:	b.eq	4550 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x450>  // b.none
    44e0:	mov	x21, #0x0                   	// #0
    44e4:	mov	x22, #0x0                   	// #0
    44e8:	ldr	x0, [sp, #184]
    44ec:	add	x0, x0, x21
    44f0:	add	x26, x0, #0x8
    44f4:	ldr	w28, [x0, #16]
    44f8:	cmp	w28, #0x40
    44fc:	b.ls	4514 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x414>  // b.plast
    4500:	mov	x0, x26
    4504:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    4508:	sub	w28, w28, w0
    450c:	cmp	w28, #0x40
    4510:	b.hi	452c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    4514:	mov	x0, x26
    4518:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    451c:	mov	x2, x0
    4520:	cmp	x0, #0x1
    4524:	b.eq	45a0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4a0>  // b.none
    4528:	ldp	x27, x25, [x19, #24]
    452c:	sub	x0, x25, x27
    4530:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4534:	add	x22, x22, #0x1
    4538:	asr	x0, x0, #4
    453c:	movk	x1, #0xaaab
    4540:	add	x21, x21, #0x30
    4544:	mul	x0, x0, x1
    4548:	cmp	x22, x0
    454c:	b.cc	44e8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3e8>  // b.lo, b.ul, b.last
    4550:	mov	x2, x20
    4554:	ldr	w3, [sp, #128]
    4558:	ldr	x0, [sp, #112]
    455c:	str	wzr, [sp, #128]
    4560:	str	x0, [x2], #8
    4564:	ldr	x0, [sp, #104]
    4568:	str	w3, [x2, #8]
    456c:	ldr	x2, [sp, #120]
    4570:	str	x2, [x20, #8]
    4574:	ldr	x2, [sp, #96]
    4578:	str	x2, [x20, #24]
    457c:	ldr	x2, [sp, #144]
    4580:	str	x2, [x20, #32]
    4584:	ldr	x2, [sp, #152]
    4588:	str	x2, [x20, #40]
    458c:	stp	xzr, xzr, [sp, #136]
    4590:	str	xzr, [sp, #152]
    4594:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4598:	ldp	x27, x28, [sp, #80]
    459c:	b	41e0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    45a0:	ldr	x0, [sp, #96]
    45a4:	mov	x1, x24
    45a8:	str	x2, [sp, #304]
    45ac:	add	x0, x0, x21
    45b0:	str	w2, [sp, #312]
    45b4:	add	x0, x0, #0x8
    45b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    45bc:	ldr	w0, [sp, #312]
    45c0:	cmp	w0, #0x40
    45c4:	b.ls	45d4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>  // b.plast
    45c8:	ldr	x0, [sp, #304]
    45cc:	cbz	x0, 45d4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>
    45d0:	bl	0 <_ZdaPv>
    45d4:	ldr	x0, [sp, #136]
    45d8:	str	x0, [sp, #96]
    45dc:	b	4528 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x428>
    45e0:	ldp	x27, x28, [sp, #80]
    45e4:	b	4170 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x70>
    45e8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    45ec:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    45f0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    45f4:	add	x3, x3, #0x0
    45f8:	add	x1, x1, #0x0
    45fc:	add	x0, x0, #0x0
    4600:	mov	w2, #0x245                 	// #581
    4604:	bl	0 <__assert_fail>

0000000000004608 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>:
    4608:	stp	x29, x30, [sp, #-96]!
    460c:	add	x3, x8, #0x18
    4610:	mov	x29, sp
    4614:	stp	x19, x20, [sp, #16]
    4618:	mov	x20, x8
    461c:	stp	x21, x22, [sp, #32]
    4620:	mov	x21, x2
    4624:	mov	x2, x8
    4628:	stp	x23, x24, [sp, #48]
    462c:	mov	x23, x0
    4630:	mov	w24, #0x1                   	// #1
    4634:	str	xzr, [x8, #24]
    4638:	mov	x22, x1
    463c:	stp	xzr, xzr, [x3, #8]
    4640:	str	xzr, [x2], #8
    4644:	ldrb	w0, [x21, #8]
    4648:	str	xzr, [x8, #8]
    464c:	str	w24, [x2, #8]
    4650:	cmp	w0, #0x3
    4654:	b.eq	46bc <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    4658:	cmp	w0, #0x10
    465c:	b.eq	4714 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    4660:	cmp	w0, #0x2
    4664:	b.eq	46e8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    4668:	stp	x25, x26, [sp, #64]
    466c:	str	x27, [sp, #80]
    4670:	bl	0 <_ZN4llvm4dbgsEv>
    4674:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4678:	add	x1, x1, #0x0
    467c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4680:	mov	x19, x0
    4684:	mov	w2, #0x0                   	// #0
    4688:	mov	w3, #0x0                   	// #0
    468c:	mov	x0, x21
    4690:	mov	x1, x19
    4694:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    4698:	mov	x0, x19
    469c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    46a0:	add	x1, x1, #0x0
    46a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    46a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    46ac:	mov	w2, #0x1cf                 	// #463
    46b0:	add	x1, x1, #0x0
    46b4:	mov	x0, #0x0                   	// #0
    46b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    46bc:	ldr	d0, [x1]
    46c0:	ldr	d1, [x23]
    46c4:	fcmpe	d1, d0
    46c8:	cset	x0, ls  // ls = plast
    46cc:	str	x0, [x8, #8]
    46d0:	mov	x0, x20
    46d4:	ldp	x19, x20, [sp, #16]
    46d8:	ldp	x21, x22, [sp, #32]
    46dc:	ldp	x23, x24, [sp, #48]
    46e0:	ldp	x29, x30, [sp], #96
    46e4:	ret
    46e8:	ldr	s1, [x23]
    46ec:	ldr	s0, [x1]
    46f0:	fcmpe	s1, s0
    46f4:	cset	x0, ls  // ls = plast
    46f8:	str	x0, [x8, #8]
    46fc:	mov	x0, x20
    4700:	ldp	x19, x20, [sp, #16]
    4704:	ldp	x21, x22, [sp, #32]
    4708:	ldp	x23, x24, [sp, #48]
    470c:	ldp	x29, x30, [sp], #96
    4710:	ret
    4714:	ldp	x5, x2, [x1, #24]
    4718:	stp	x25, x26, [sp, #64]
    471c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4720:	ldp	x1, x0, [x23, #24]
    4724:	movk	x25, #0xaaab
    4728:	ldr	x4, [x21, #24]
    472c:	sub	x2, x2, x5
    4730:	sub	x0, x0, x1
    4734:	ldrb	w4, [x4, #8]
    4738:	asr	x1, x0, #4
    473c:	cmp	w4, #0x2
    4740:	mul	x1, x1, x25
    4744:	b.eq	47f8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    4748:	cmp	x2, x0
    474c:	b.ne	48a4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    4750:	mov	x0, x3
    4754:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4758:	ldp	x1, x4, [x23, #24]
    475c:	cmp	x1, x4
    4760:	b.eq	489c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    4764:	mov	w21, #0x0                   	// #0
    4768:	mov	x2, #0x0                   	// #0
    476c:	str	x27, [sp, #80]
    4770:	add	x2, x2, x2, lsl #1
    4774:	ldr	x0, [x22, #24]
    4778:	lsl	x2, x2, #4
    477c:	ldr	x19, [x20, #24]
    4780:	ldr	d0, [x0, x2]
    4784:	ldr	d1, [x1, x2]
    4788:	add	x19, x19, x2
    478c:	add	x26, x19, #0x8
    4790:	fcmpe	d1, d0
    4794:	ldr	w0, [x19, #16]
    4798:	cset	x27, ls  // ls = plast
    479c:	cmp	w0, #0x40
    47a0:	b.ls	47b4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    47a4:	ldr	x0, [x19, #8]
    47a8:	cbz	x0, 47b4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    47ac:	bl	0 <_ZdaPv>
    47b0:	ldp	x1, x4, [x23, #24]
    47b4:	sub	x3, x4, x1
    47b8:	str	x27, [x19, #8]
    47bc:	add	w2, w21, #0x1
    47c0:	asr	x3, x3, #4
    47c4:	str	w24, [x26, #8]
    47c8:	mov	x21, x2
    47cc:	mul	x3, x3, x25
    47d0:	cmp	x3, w2, uxtw
    47d4:	b.hi	4770 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    47d8:	ldp	x25, x26, [sp, #64]
    47dc:	ldr	x27, [sp, #80]
    47e0:	mov	x0, x20
    47e4:	ldp	x19, x20, [sp, #16]
    47e8:	ldp	x21, x22, [sp, #32]
    47ec:	ldp	x23, x24, [sp, #48]
    47f0:	ldp	x29, x30, [sp], #96
    47f4:	ret
    47f8:	cmp	x2, x0
    47fc:	b.ne	48a4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    4800:	mov	x0, x3
    4804:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4808:	ldp	x1, x4, [x23, #24]
    480c:	cmp	x4, x1
    4810:	b.eq	489c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    4814:	mov	w21, w24
    4818:	mov	x2, #0x0                   	// #0
    481c:	mov	w24, #0x0                   	// #0
    4820:	str	x27, [sp, #80]
    4824:	nop
    4828:	add	x2, x2, x2, lsl #1
    482c:	ldr	x0, [x22, #24]
    4830:	lsl	x2, x2, #4
    4834:	ldr	x19, [x20, #24]
    4838:	ldr	s0, [x0, x2]
    483c:	ldr	s1, [x1, x2]
    4840:	add	x19, x19, x2
    4844:	add	x26, x19, #0x8
    4848:	fcmpe	s1, s0
    484c:	ldr	w0, [x19, #16]
    4850:	cset	x27, ls  // ls = plast
    4854:	cmp	w0, #0x40
    4858:	b.ls	486c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    485c:	ldr	x0, [x19, #8]
    4860:	cbz	x0, 486c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    4864:	bl	0 <_ZdaPv>
    4868:	ldp	x1, x4, [x23, #24]
    486c:	sub	x3, x4, x1
    4870:	str	x27, [x19, #8]
    4874:	add	w2, w24, #0x1
    4878:	asr	x3, x3, #4
    487c:	str	w21, [x26, #8]
    4880:	mov	x24, x2
    4884:	mul	x3, x3, x25
    4888:	cmp	x3, w2, uxtw
    488c:	b.hi	4828 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    4890:	ldp	x25, x26, [sp, #64]
    4894:	ldr	x27, [sp, #80]
    4898:	b	47e0 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    489c:	ldp	x25, x26, [sp, #64]
    48a0:	b	46d0 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    48a4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    48a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    48ac:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    48b0:	add	x3, x3, #0x0
    48b4:	add	x1, x1, #0x0
    48b8:	add	x0, x0, #0x0
    48bc:	mov	w2, #0x1cc                 	// #460
    48c0:	str	x27, [sp, #80]
    48c4:	bl	0 <__assert_fail>

00000000000048c8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
    48c8:	stp	x29, x30, [sp, #-352]!
    48cc:	mov	x29, sp
    48d0:	stp	x19, x20, [sp, #16]
    48d4:	mov	x20, x8
    48d8:	mov	x19, x0
    48dc:	stp	x21, x22, [sp, #32]
    48e0:	mov	x21, x2
    48e4:	ldrb	w2, [x2, #8]
    48e8:	stp	x23, x24, [sp, #48]
    48ec:	mov	x22, x1
    48f0:	cmp	w2, #0x2
    48f4:	stp	x25, x26, [sp, #64]
    48f8:	mov	w25, #0x1                   	// #1
    48fc:	stp	xzr, xzr, [sp, #112]
    4900:	str	w25, [sp, #128]
    4904:	stp	xzr, xzr, [sp, #136]
    4908:	str	xzr, [sp, #152]
    490c:	b.eq	49cc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x104>  // b.none
    4910:	ldr	d0, [x0]
    4914:	fcmp	d0, d0
    4918:	b.ne	497c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    491c:	ldr	d0, [x1]
    4920:	fcmp	d0, d0
    4924:	b.ne	497c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    4928:	cmp	w2, #0x10
    492c:	b.eq	4a60 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    4930:	add	x24, sp, #0x130
    4934:	add	x23, sp, #0x70
    4938:	add	x0, sp, #0x100
    493c:	mov	x1, x19
    4940:	mov	x19, x0
    4944:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4948:	mov	x1, x22
    494c:	mov	x0, x24
    4950:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4954:	mov	x8, x20
    4958:	mov	x2, x21
    495c:	mov	x1, x24
    4960:	mov	x0, x19
    4964:	bl	4608 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    4968:	mov	x0, x24
    496c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4970:	mov	x0, x19
    4974:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4978:	b	49a8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    497c:	mov	x2, x20
    4980:	mov	x1, #0x1                   	// #1
    4984:	ldr	x3, [sp, #112]
    4988:	add	x23, sp, #0x70
    498c:	str	x3, [x2], #8
    4990:	str	x1, [sp, #120]
    4994:	str	w1, [x2, #8]
    4998:	str	x1, [x20, #8]
    499c:	stp	xzr, xzr, [x20, #24]
    49a0:	str	xzr, [x20, #40]
    49a4:	str	wzr, [sp, #128]
    49a8:	mov	x0, x23
    49ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    49b0:	mov	x0, x20
    49b4:	ldp	x19, x20, [sp, #16]
    49b8:	ldp	x21, x22, [sp, #32]
    49bc:	ldp	x23, x24, [sp, #48]
    49c0:	ldp	x25, x26, [sp, #64]
    49c4:	ldp	x29, x30, [sp], #352
    49c8:	ret
    49cc:	ldr	s0, [x0]
    49d0:	fcmp	s0, s0
    49d4:	b.ne	49e4 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x11c>  // b.any
    49d8:	ldr	s0, [x1]
    49dc:	fcmp	s0, s0
    49e0:	b.eq	4930 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    49e4:	mov	w2, #0x1                   	// #1
    49e8:	mov	x3, #0x1                   	// #1
    49ec:	add	x23, sp, #0x70
    49f0:	add	x1, sp, #0x130
    49f4:	add	x0, x23, #0x8
    49f8:	str	x3, [sp, #304]
    49fc:	str	w2, [sp, #312]
    4a00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4a04:	ldr	w0, [sp, #312]
    4a08:	cmp	w0, #0x40
    4a0c:	b.ls	4a1c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x154>  // b.plast
    4a10:	ldr	x0, [sp, #304]
    4a14:	cbz	x0, 4a1c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x154>
    4a18:	bl	0 <_ZdaPv>
    4a1c:	mov	x0, x20
    4a20:	ldr	x2, [sp, #112]
    4a24:	str	x2, [x0], #8
    4a28:	ldr	w2, [sp, #128]
    4a2c:	str	w2, [x0, #8]
    4a30:	ldr	x0, [sp, #120]
    4a34:	str	x0, [x20, #8]
    4a38:	ldr	x0, [sp, #136]
    4a3c:	str	x0, [x20, #24]
    4a40:	ldr	x2, [sp, #144]
    4a44:	str	x2, [x20, #32]
    4a48:	ldr	x0, [sp, #152]
    4a4c:	str	x0, [x20, #40]
    4a50:	str	wzr, [sp, #128]
    4a54:	stp	xzr, xzr, [sp, #136]
    4a58:	str	xzr, [sp, #152]
    4a5c:	b	49a8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    4a60:	mov	x0, x21
    4a64:	stp	x27, x28, [sp, #80]
    4a68:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4a6c:	ldp	x2, x1, [x19, #24]
    4a70:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4a74:	ldr	x3, [x0, #24]
    4a78:	movk	x26, #0xaaab
    4a7c:	sub	x0, x1, x2
    4a80:	ldrb	w3, [x3, #8]
    4a84:	ldp	x4, x2, [x22, #24]
    4a88:	asr	x1, x0, #4
    4a8c:	cmp	w3, #0x2
    4a90:	mul	x1, x1, x26
    4a94:	sub	x2, x2, x4
    4a98:	b.eq	4b54 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    4a9c:	cmp	x2, x0
    4aa0:	b.ne	4db0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    4aa4:	add	x23, sp, #0x70
    4aa8:	add	x24, sp, #0x130
    4aac:	add	x0, x23, #0x18
    4ab0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4ab4:	ldp	x2, x0, [x19, #24]
    4ab8:	mov	w28, #0x0                   	// #0
    4abc:	mov	x1, #0x0                   	// #0
    4ac0:	mov	x27, #0x1                   	// #1
    4ac4:	cmp	x0, x2
    4ac8:	b.ne	4b18 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x250>  // b.any
    4acc:	b	4c0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    4ad0:	mov	x1, x24
    4ad4:	str	x27, [sp, #304]
    4ad8:	str	w25, [sp, #312]
    4adc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4ae0:	ldr	w0, [sp, #312]
    4ae4:	cmp	w0, #0x40
    4ae8:	b.ls	4af8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x230>  // b.plast
    4aec:	ldr	x0, [sp, #304]
    4af0:	cbz	x0, 4af8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x230>
    4af4:	bl	0 <_ZdaPv>
    4af8:	ldp	x2, x0, [x19, #24]
    4afc:	add	w1, w28, #0x1
    4b00:	mov	x28, x1
    4b04:	sub	x0, x0, x2
    4b08:	asr	x0, x0, #4
    4b0c:	mul	x0, x0, x26
    4b10:	cmp	x0, w1, uxtw
    4b14:	b.ls	4c0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    4b18:	add	x1, x1, x1, lsl #1
    4b1c:	ldr	x0, [sp, #136]
    4b20:	lsl	x1, x1, #4
    4b24:	add	x0, x0, x1
    4b28:	ldr	d0, [x2, x1]
    4b2c:	add	x0, x0, #0x8
    4b30:	fcmp	d0, d0
    4b34:	b.ne	4ad0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    4b38:	ldr	x2, [x22, #24]
    4b3c:	ldr	d0, [x2, x1]
    4b40:	fcmp	d0, d0
    4b44:	b.ne	4ad0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    4b48:	mov	x1, x24
    4b4c:	str	xzr, [sp, #304]
    4b50:	b	4ad8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x210>
    4b54:	cmp	x2, x0
    4b58:	b.ne	4db0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    4b5c:	add	x23, sp, #0x70
    4b60:	add	x24, sp, #0x130
    4b64:	add	x0, x23, #0x18
    4b68:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4b6c:	ldp	x2, x0, [x19, #24]
    4b70:	mov	w28, #0x0                   	// #0
    4b74:	mov	x1, #0x0                   	// #0
    4b78:	mov	x27, #0x1                   	// #1
    4b7c:	cmp	x2, x0
    4b80:	b.ne	4bd0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x308>  // b.any
    4b84:	b	4c0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    4b88:	mov	x1, x24
    4b8c:	str	x27, [sp, #304]
    4b90:	str	w25, [sp, #312]
    4b94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4b98:	ldr	w0, [sp, #312]
    4b9c:	cmp	w0, #0x40
    4ba0:	b.ls	4bb0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>  // b.plast
    4ba4:	ldr	x0, [sp, #304]
    4ba8:	cbz	x0, 4bb0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>
    4bac:	bl	0 <_ZdaPv>
    4bb0:	ldp	x2, x0, [x19, #24]
    4bb4:	add	w1, w28, #0x1
    4bb8:	mov	x28, x1
    4bbc:	sub	x0, x0, x2
    4bc0:	asr	x0, x0, #4
    4bc4:	mul	x0, x0, x26
    4bc8:	cmp	x0, w1, uxtw
    4bcc:	b.ls	4c0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    4bd0:	add	x1, x1, x1, lsl #1
    4bd4:	ldr	x0, [sp, #136]
    4bd8:	lsl	x1, x1, #4
    4bdc:	add	x0, x0, x1
    4be0:	ldr	s0, [x2, x1]
    4be4:	add	x0, x0, #0x8
    4be8:	fcmp	s0, s0
    4bec:	b.ne	4b88 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    4bf0:	ldr	x2, [x22, #24]
    4bf4:	ldr	s0, [x2, x1]
    4bf8:	fcmp	s0, s0
    4bfc:	b.ne	4b88 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    4c00:	mov	x1, x24
    4c04:	str	xzr, [sp, #304]
    4c08:	b	4b90 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2c8>
    4c0c:	ldrb	w0, [x21, #8]
    4c10:	cmp	w0, #0x10
    4c14:	b.ne	4da8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4e0>  // b.any
    4c18:	add	x25, sp, #0xd0
    4c1c:	add	x0, sp, #0xa0
    4c20:	mov	x1, x23
    4c24:	str	x0, [sp, #104]
    4c28:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c2c:	add	x26, sp, #0x100
    4c30:	mov	x0, x25
    4c34:	mov	x1, x19
    4c38:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c3c:	mov	x1, x22
    4c40:	mov	x0, x26
    4c44:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c48:	mov	x8, x24
    4c4c:	mov	x0, x25
    4c50:	mov	x2, x21
    4c54:	mov	x1, x26
    4c58:	bl	4608 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    4c5c:	ldr	x2, [sp, #304]
    4c60:	add	x1, x24, #0x8
    4c64:	add	x0, x23, #0x8
    4c68:	str	x2, [sp, #112]
    4c6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c70:	add	x1, x24, #0x18
    4c74:	add	x0, x23, #0x18
    4c78:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    4c7c:	mov	x0, x24
    4c80:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c84:	mov	x0, x26
    4c88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c8c:	mov	x0, x25
    4c90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c94:	ldp	x27, x25, [x19, #24]
    4c98:	ldr	x0, [sp, #136]
    4c9c:	str	x0, [sp, #96]
    4ca0:	cmp	x25, x27
    4ca4:	b.eq	4d18 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x450>  // b.none
    4ca8:	mov	x21, #0x0                   	// #0
    4cac:	mov	x22, #0x0                   	// #0
    4cb0:	ldr	x0, [sp, #184]
    4cb4:	add	x0, x0, x21
    4cb8:	add	x26, x0, #0x8
    4cbc:	ldr	w28, [x0, #16]
    4cc0:	cmp	w28, #0x40
    4cc4:	b.ls	4cdc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x414>  // b.plast
    4cc8:	mov	x0, x26
    4ccc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    4cd0:	sub	w28, w28, w0
    4cd4:	cmp	w28, #0x40
    4cd8:	b.hi	4cf4 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    4cdc:	mov	x0, x26
    4ce0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4ce4:	mov	x2, x0
    4ce8:	cmp	x0, #0x1
    4cec:	b.eq	4d68 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4a0>  // b.none
    4cf0:	ldp	x27, x25, [x19, #24]
    4cf4:	sub	x0, x25, x27
    4cf8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4cfc:	add	x22, x22, #0x1
    4d00:	asr	x0, x0, #4
    4d04:	movk	x1, #0xaaab
    4d08:	add	x21, x21, #0x30
    4d0c:	mul	x0, x0, x1
    4d10:	cmp	x22, x0
    4d14:	b.cc	4cb0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3e8>  // b.lo, b.ul, b.last
    4d18:	mov	x2, x20
    4d1c:	ldr	w3, [sp, #128]
    4d20:	ldr	x0, [sp, #112]
    4d24:	str	wzr, [sp, #128]
    4d28:	str	x0, [x2], #8
    4d2c:	ldr	x0, [sp, #104]
    4d30:	str	w3, [x2, #8]
    4d34:	ldr	x2, [sp, #120]
    4d38:	str	x2, [x20, #8]
    4d3c:	ldr	x2, [sp, #96]
    4d40:	str	x2, [x20, #24]
    4d44:	ldr	x2, [sp, #144]
    4d48:	str	x2, [x20, #32]
    4d4c:	ldr	x2, [sp, #152]
    4d50:	str	x2, [x20, #40]
    4d54:	stp	xzr, xzr, [sp, #136]
    4d58:	str	xzr, [sp, #152]
    4d5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4d60:	ldp	x27, x28, [sp, #80]
    4d64:	b	49a8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    4d68:	ldr	x0, [sp, #96]
    4d6c:	mov	x1, x24
    4d70:	str	x2, [sp, #304]
    4d74:	add	x0, x0, x21
    4d78:	str	w2, [sp, #312]
    4d7c:	add	x0, x0, #0x8
    4d80:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4d84:	ldr	w0, [sp, #312]
    4d88:	cmp	w0, #0x40
    4d8c:	b.ls	4d9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>  // b.plast
    4d90:	ldr	x0, [sp, #304]
    4d94:	cbz	x0, 4d9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>
    4d98:	bl	0 <_ZdaPv>
    4d9c:	ldr	x0, [sp, #136]
    4da0:	str	x0, [sp, #96]
    4da4:	b	4cf0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x428>
    4da8:	ldp	x27, x28, [sp, #80]
    4dac:	b	4938 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x70>
    4db0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4db4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4db8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4dbc:	add	x3, x3, #0x0
    4dc0:	add	x1, x1, #0x0
    4dc4:	add	x0, x0, #0x0
    4dc8:	mov	w2, #0x22a                 	// #554
    4dcc:	bl	0 <__assert_fail>

0000000000004dd0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>:
    4dd0:	stp	x29, x30, [sp, #-96]!
    4dd4:	add	x3, x8, #0x18
    4dd8:	mov	x29, sp
    4ddc:	stp	x19, x20, [sp, #16]
    4de0:	mov	x20, x8
    4de4:	stp	x21, x22, [sp, #32]
    4de8:	mov	x21, x2
    4dec:	mov	x2, x8
    4df0:	stp	x23, x24, [sp, #48]
    4df4:	mov	x23, x0
    4df8:	mov	w24, #0x1                   	// #1
    4dfc:	str	xzr, [x8, #24]
    4e00:	mov	x22, x1
    4e04:	stp	xzr, xzr, [x3, #8]
    4e08:	str	xzr, [x2], #8
    4e0c:	ldrb	w0, [x21, #8]
    4e10:	str	xzr, [x8, #8]
    4e14:	str	w24, [x2, #8]
    4e18:	cmp	w0, #0x3
    4e1c:	b.eq	4e84 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    4e20:	cmp	w0, #0x10
    4e24:	b.eq	4edc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    4e28:	cmp	w0, #0x2
    4e2c:	b.eq	4eb0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    4e30:	stp	x25, x26, [sp, #64]
    4e34:	str	x27, [sp, #80]
    4e38:	bl	0 <_ZN4llvm4dbgsEv>
    4e3c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e40:	add	x1, x1, #0x0
    4e44:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e48:	mov	x19, x0
    4e4c:	mov	w2, #0x0                   	// #0
    4e50:	mov	w3, #0x0                   	// #0
    4e54:	mov	x0, x21
    4e58:	mov	x1, x19
    4e5c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    4e60:	mov	x0, x19
    4e64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e68:	add	x1, x1, #0x0
    4e6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e70:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e74:	mov	w2, #0x1dd                 	// #477
    4e78:	add	x1, x1, #0x0
    4e7c:	mov	x0, #0x0                   	// #0
    4e80:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4e84:	ldr	d0, [x1]
    4e88:	ldr	d1, [x23]
    4e8c:	fcmpe	d1, d0
    4e90:	cset	x0, ge  // ge = tcont
    4e94:	str	x0, [x8, #8]
    4e98:	mov	x0, x20
    4e9c:	ldp	x19, x20, [sp, #16]
    4ea0:	ldp	x21, x22, [sp, #32]
    4ea4:	ldp	x23, x24, [sp, #48]
    4ea8:	ldp	x29, x30, [sp], #96
    4eac:	ret
    4eb0:	ldr	s1, [x23]
    4eb4:	ldr	s0, [x1]
    4eb8:	fcmpe	s1, s0
    4ebc:	cset	x0, ge  // ge = tcont
    4ec0:	str	x0, [x8, #8]
    4ec4:	mov	x0, x20
    4ec8:	ldp	x19, x20, [sp, #16]
    4ecc:	ldp	x21, x22, [sp, #32]
    4ed0:	ldp	x23, x24, [sp, #48]
    4ed4:	ldp	x29, x30, [sp], #96
    4ed8:	ret
    4edc:	ldp	x5, x2, [x1, #24]
    4ee0:	stp	x25, x26, [sp, #64]
    4ee4:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4ee8:	ldp	x1, x0, [x23, #24]
    4eec:	movk	x25, #0xaaab
    4ef0:	ldr	x4, [x21, #24]
    4ef4:	sub	x2, x2, x5
    4ef8:	sub	x0, x0, x1
    4efc:	ldrb	w4, [x4, #8]
    4f00:	asr	x1, x0, #4
    4f04:	cmp	w4, #0x2
    4f08:	mul	x1, x1, x25
    4f0c:	b.eq	4fc0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    4f10:	cmp	x2, x0
    4f14:	b.ne	506c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    4f18:	mov	x0, x3
    4f1c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4f20:	ldp	x1, x4, [x23, #24]
    4f24:	cmp	x1, x4
    4f28:	b.eq	5064 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    4f2c:	mov	w21, #0x0                   	// #0
    4f30:	mov	x2, #0x0                   	// #0
    4f34:	str	x27, [sp, #80]
    4f38:	add	x2, x2, x2, lsl #1
    4f3c:	ldr	x0, [x22, #24]
    4f40:	lsl	x2, x2, #4
    4f44:	ldr	x19, [x20, #24]
    4f48:	ldr	d0, [x0, x2]
    4f4c:	ldr	d1, [x1, x2]
    4f50:	add	x19, x19, x2
    4f54:	add	x26, x19, #0x8
    4f58:	fcmpe	d1, d0
    4f5c:	ldr	w0, [x19, #16]
    4f60:	cset	x27, ge  // ge = tcont
    4f64:	cmp	w0, #0x40
    4f68:	b.ls	4f7c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    4f6c:	ldr	x0, [x19, #8]
    4f70:	cbz	x0, 4f7c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    4f74:	bl	0 <_ZdaPv>
    4f78:	ldp	x1, x4, [x23, #24]
    4f7c:	sub	x3, x4, x1
    4f80:	str	x27, [x19, #8]
    4f84:	add	w2, w21, #0x1
    4f88:	asr	x3, x3, #4
    4f8c:	str	w24, [x26, #8]
    4f90:	mov	x21, x2
    4f94:	mul	x3, x3, x25
    4f98:	cmp	x3, w2, uxtw
    4f9c:	b.hi	4f38 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    4fa0:	ldp	x25, x26, [sp, #64]
    4fa4:	ldr	x27, [sp, #80]
    4fa8:	mov	x0, x20
    4fac:	ldp	x19, x20, [sp, #16]
    4fb0:	ldp	x21, x22, [sp, #32]
    4fb4:	ldp	x23, x24, [sp, #48]
    4fb8:	ldp	x29, x30, [sp], #96
    4fbc:	ret
    4fc0:	cmp	x2, x0
    4fc4:	b.ne	506c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    4fc8:	mov	x0, x3
    4fcc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4fd0:	ldp	x1, x4, [x23, #24]
    4fd4:	cmp	x4, x1
    4fd8:	b.eq	5064 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    4fdc:	mov	w21, w24
    4fe0:	mov	x2, #0x0                   	// #0
    4fe4:	mov	w24, #0x0                   	// #0
    4fe8:	str	x27, [sp, #80]
    4fec:	nop
    4ff0:	add	x2, x2, x2, lsl #1
    4ff4:	ldr	x0, [x22, #24]
    4ff8:	lsl	x2, x2, #4
    4ffc:	ldr	x19, [x20, #24]
    5000:	ldr	s0, [x0, x2]
    5004:	ldr	s1, [x1, x2]
    5008:	add	x19, x19, x2
    500c:	add	x26, x19, #0x8
    5010:	fcmpe	s1, s0
    5014:	ldr	w0, [x19, #16]
    5018:	cset	x27, ge  // ge = tcont
    501c:	cmp	w0, #0x40
    5020:	b.ls	5034 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    5024:	ldr	x0, [x19, #8]
    5028:	cbz	x0, 5034 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    502c:	bl	0 <_ZdaPv>
    5030:	ldp	x1, x4, [x23, #24]
    5034:	sub	x3, x4, x1
    5038:	str	x27, [x19, #8]
    503c:	add	w2, w24, #0x1
    5040:	asr	x3, x3, #4
    5044:	str	w21, [x26, #8]
    5048:	mov	x24, x2
    504c:	mul	x3, x3, x25
    5050:	cmp	x3, w2, uxtw
    5054:	b.hi	4ff0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    5058:	ldp	x25, x26, [sp, #64]
    505c:	ldr	x27, [sp, #80]
    5060:	b	4fa8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    5064:	ldp	x25, x26, [sp, #64]
    5068:	b	4e98 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    506c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5070:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5074:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5078:	add	x3, x3, #0x0
    507c:	add	x1, x1, #0x0
    5080:	add	x0, x0, #0x0
    5084:	mov	w2, #0x1da                 	// #474
    5088:	str	x27, [sp, #80]
    508c:	bl	0 <__assert_fail>

0000000000005090 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    5090:	stp	x29, x30, [sp, #-352]!
    5094:	mov	x29, sp
    5098:	stp	x19, x20, [sp, #16]
    509c:	mov	x20, x8
    50a0:	mov	x19, x0
    50a4:	stp	x21, x22, [sp, #32]
    50a8:	mov	x21, x2
    50ac:	ldrb	w2, [x2, #8]
    50b0:	stp	x23, x24, [sp, #48]
    50b4:	mov	x22, x1
    50b8:	cmp	w2, #0x2
    50bc:	stp	x25, x26, [sp, #64]
    50c0:	mov	w25, #0x1                   	// #1
    50c4:	stp	xzr, xzr, [sp, #112]
    50c8:	str	w25, [sp, #128]
    50cc:	stp	xzr, xzr, [sp, #136]
    50d0:	str	xzr, [sp, #152]
    50d4:	b.eq	5194 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x104>  // b.none
    50d8:	ldr	d0, [x0]
    50dc:	fcmp	d0, d0
    50e0:	b.ne	5144 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    50e4:	ldr	d0, [x1]
    50e8:	fcmp	d0, d0
    50ec:	b.ne	5144 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    50f0:	cmp	w2, #0x10
    50f4:	b.eq	5228 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    50f8:	add	x24, sp, #0x130
    50fc:	add	x23, sp, #0x70
    5100:	add	x0, sp, #0x100
    5104:	mov	x1, x19
    5108:	mov	x19, x0
    510c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5110:	mov	x1, x22
    5114:	mov	x0, x24
    5118:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    511c:	mov	x8, x20
    5120:	mov	x2, x21
    5124:	mov	x1, x24
    5128:	mov	x0, x19
    512c:	bl	4dd0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    5130:	mov	x0, x24
    5134:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5138:	mov	x0, x19
    513c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5140:	b	5170 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    5144:	mov	x2, x20
    5148:	mov	x1, #0x1                   	// #1
    514c:	ldr	x3, [sp, #112]
    5150:	add	x23, sp, #0x70
    5154:	str	x3, [x2], #8
    5158:	str	x1, [sp, #120]
    515c:	str	w1, [x2, #8]
    5160:	str	x1, [x20, #8]
    5164:	stp	xzr, xzr, [x20, #24]
    5168:	str	xzr, [x20, #40]
    516c:	str	wzr, [sp, #128]
    5170:	mov	x0, x23
    5174:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5178:	mov	x0, x20
    517c:	ldp	x19, x20, [sp, #16]
    5180:	ldp	x21, x22, [sp, #32]
    5184:	ldp	x23, x24, [sp, #48]
    5188:	ldp	x25, x26, [sp, #64]
    518c:	ldp	x29, x30, [sp], #352
    5190:	ret
    5194:	ldr	s0, [x0]
    5198:	fcmp	s0, s0
    519c:	b.ne	51ac <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x11c>  // b.any
    51a0:	ldr	s0, [x1]
    51a4:	fcmp	s0, s0
    51a8:	b.eq	50f8 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    51ac:	mov	w2, #0x1                   	// #1
    51b0:	mov	x3, #0x1                   	// #1
    51b4:	add	x23, sp, #0x70
    51b8:	add	x1, sp, #0x130
    51bc:	add	x0, x23, #0x8
    51c0:	str	x3, [sp, #304]
    51c4:	str	w2, [sp, #312]
    51c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    51cc:	ldr	w0, [sp, #312]
    51d0:	cmp	w0, #0x40
    51d4:	b.ls	51e4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x154>  // b.plast
    51d8:	ldr	x0, [sp, #304]
    51dc:	cbz	x0, 51e4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x154>
    51e0:	bl	0 <_ZdaPv>
    51e4:	mov	x0, x20
    51e8:	ldr	x2, [sp, #112]
    51ec:	str	x2, [x0], #8
    51f0:	ldr	w2, [sp, #128]
    51f4:	str	w2, [x0, #8]
    51f8:	ldr	x0, [sp, #120]
    51fc:	str	x0, [x20, #8]
    5200:	ldr	x0, [sp, #136]
    5204:	str	x0, [x20, #24]
    5208:	ldr	x2, [sp, #144]
    520c:	str	x2, [x20, #32]
    5210:	ldr	x0, [sp, #152]
    5214:	str	x0, [x20, #40]
    5218:	str	wzr, [sp, #128]
    521c:	stp	xzr, xzr, [sp, #136]
    5220:	str	xzr, [sp, #152]
    5224:	b	5170 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    5228:	mov	x0, x21
    522c:	stp	x27, x28, [sp, #80]
    5230:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5234:	ldp	x2, x1, [x19, #24]
    5238:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    523c:	ldr	x3, [x0, #24]
    5240:	movk	x26, #0xaaab
    5244:	sub	x0, x1, x2
    5248:	ldrb	w3, [x3, #8]
    524c:	ldp	x4, x2, [x22, #24]
    5250:	asr	x1, x0, #4
    5254:	cmp	w3, #0x2
    5258:	mul	x1, x1, x26
    525c:	sub	x2, x2, x4
    5260:	b.eq	531c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    5264:	cmp	x2, x0
    5268:	b.ne	5578 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    526c:	add	x23, sp, #0x70
    5270:	add	x24, sp, #0x130
    5274:	add	x0, x23, #0x18
    5278:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    527c:	ldp	x2, x0, [x19, #24]
    5280:	mov	w28, #0x0                   	// #0
    5284:	mov	x1, #0x0                   	// #0
    5288:	mov	x27, #0x1                   	// #1
    528c:	cmp	x0, x2
    5290:	b.ne	52e0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x250>  // b.any
    5294:	b	53d4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    5298:	mov	x1, x24
    529c:	str	x27, [sp, #304]
    52a0:	str	w25, [sp, #312]
    52a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    52a8:	ldr	w0, [sp, #312]
    52ac:	cmp	w0, #0x40
    52b0:	b.ls	52c0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x230>  // b.plast
    52b4:	ldr	x0, [sp, #304]
    52b8:	cbz	x0, 52c0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x230>
    52bc:	bl	0 <_ZdaPv>
    52c0:	ldp	x2, x0, [x19, #24]
    52c4:	add	w1, w28, #0x1
    52c8:	mov	x28, x1
    52cc:	sub	x0, x0, x2
    52d0:	asr	x0, x0, #4
    52d4:	mul	x0, x0, x26
    52d8:	cmp	x0, w1, uxtw
    52dc:	b.ls	53d4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    52e0:	add	x1, x1, x1, lsl #1
    52e4:	ldr	x0, [sp, #136]
    52e8:	lsl	x1, x1, #4
    52ec:	add	x0, x0, x1
    52f0:	ldr	d0, [x2, x1]
    52f4:	add	x0, x0, #0x8
    52f8:	fcmp	d0, d0
    52fc:	b.ne	5298 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    5300:	ldr	x2, [x22, #24]
    5304:	ldr	d0, [x2, x1]
    5308:	fcmp	d0, d0
    530c:	b.ne	5298 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x208>  // b.any
    5310:	mov	x1, x24
    5314:	str	xzr, [sp, #304]
    5318:	b	52a0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x210>
    531c:	cmp	x2, x0
    5320:	b.ne	5578 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    5324:	add	x23, sp, #0x70
    5328:	add	x24, sp, #0x130
    532c:	add	x0, x23, #0x18
    5330:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5334:	ldp	x2, x0, [x19, #24]
    5338:	mov	w28, #0x0                   	// #0
    533c:	mov	x1, #0x0                   	// #0
    5340:	mov	x27, #0x1                   	// #1
    5344:	cmp	x2, x0
    5348:	b.ne	5398 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x308>  // b.any
    534c:	b	53d4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x344>
    5350:	mov	x1, x24
    5354:	str	x27, [sp, #304]
    5358:	str	w25, [sp, #312]
    535c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5360:	ldr	w0, [sp, #312]
    5364:	cmp	w0, #0x40
    5368:	b.ls	5378 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>  // b.plast
    536c:	ldr	x0, [sp, #304]
    5370:	cbz	x0, 5378 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>
    5374:	bl	0 <_ZdaPv>
    5378:	ldp	x2, x0, [x19, #24]
    537c:	add	w1, w28, #0x1
    5380:	mov	x28, x1
    5384:	sub	x0, x0, x2
    5388:	asr	x0, x0, #4
    538c:	mul	x0, x0, x26
    5390:	cmp	x0, w1, uxtw
    5394:	b.ls	53d4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x344>  // b.plast
    5398:	add	x1, x1, x1, lsl #1
    539c:	ldr	x0, [sp, #136]
    53a0:	lsl	x1, x1, #4
    53a4:	add	x0, x0, x1
    53a8:	ldr	s0, [x2, x1]
    53ac:	add	x0, x0, #0x8
    53b0:	fcmp	s0, s0
    53b4:	b.ne	5350 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    53b8:	ldr	x2, [x22, #24]
    53bc:	ldr	s0, [x2, x1]
    53c0:	fcmp	s0, s0
    53c4:	b.ne	5350 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2c0>  // b.any
    53c8:	mov	x1, x24
    53cc:	str	xzr, [sp, #304]
    53d0:	b	5358 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2c8>
    53d4:	ldrb	w0, [x21, #8]
    53d8:	cmp	w0, #0x10
    53dc:	b.ne	5570 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4e0>  // b.any
    53e0:	add	x25, sp, #0xd0
    53e4:	add	x0, sp, #0xa0
    53e8:	mov	x1, x23
    53ec:	str	x0, [sp, #104]
    53f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    53f4:	add	x26, sp, #0x100
    53f8:	mov	x0, x25
    53fc:	mov	x1, x19
    5400:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5404:	mov	x1, x22
    5408:	mov	x0, x26
    540c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5410:	mov	x8, x24
    5414:	mov	x0, x25
    5418:	mov	x2, x21
    541c:	mov	x1, x26
    5420:	bl	4dd0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    5424:	ldr	x2, [sp, #304]
    5428:	add	x1, x24, #0x8
    542c:	add	x0, x23, #0x8
    5430:	str	x2, [sp, #112]
    5434:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5438:	add	x1, x24, #0x18
    543c:	add	x0, x23, #0x18
    5440:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    5444:	mov	x0, x24
    5448:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    544c:	mov	x0, x26
    5450:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5454:	mov	x0, x25
    5458:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    545c:	ldp	x27, x25, [x19, #24]
    5460:	ldr	x0, [sp, #136]
    5464:	str	x0, [sp, #96]
    5468:	cmp	x25, x27
    546c:	b.eq	54e0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x450>  // b.none
    5470:	mov	x21, #0x0                   	// #0
    5474:	mov	x22, #0x0                   	// #0
    5478:	ldr	x0, [sp, #184]
    547c:	add	x0, x0, x21
    5480:	add	x26, x0, #0x8
    5484:	ldr	w28, [x0, #16]
    5488:	cmp	w28, #0x40
    548c:	b.ls	54a4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x414>  // b.plast
    5490:	mov	x0, x26
    5494:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5498:	sub	w28, w28, w0
    549c:	cmp	w28, #0x40
    54a0:	b.hi	54bc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    54a4:	mov	x0, x26
    54a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    54ac:	mov	x2, x0
    54b0:	cmp	x0, #0x1
    54b4:	b.eq	5530 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4a0>  // b.none
    54b8:	ldp	x27, x25, [x19, #24]
    54bc:	sub	x0, x25, x27
    54c0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    54c4:	add	x22, x22, #0x1
    54c8:	asr	x0, x0, #4
    54cc:	movk	x1, #0xaaab
    54d0:	add	x21, x21, #0x30
    54d4:	mul	x0, x0, x1
    54d8:	cmp	x22, x0
    54dc:	b.cc	5478 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3e8>  // b.lo, b.ul, b.last
    54e0:	mov	x2, x20
    54e4:	ldr	w3, [sp, #128]
    54e8:	ldr	x0, [sp, #112]
    54ec:	str	wzr, [sp, #128]
    54f0:	str	x0, [x2], #8
    54f4:	ldr	x0, [sp, #104]
    54f8:	str	w3, [x2, #8]
    54fc:	ldr	x2, [sp, #120]
    5500:	str	x2, [x20, #8]
    5504:	ldr	x2, [sp, #96]
    5508:	str	x2, [x20, #24]
    550c:	ldr	x2, [sp, #144]
    5510:	str	x2, [x20, #32]
    5514:	ldr	x2, [sp, #152]
    5518:	str	x2, [x20, #40]
    551c:	stp	xzr, xzr, [sp, #136]
    5520:	str	xzr, [sp, #152]
    5524:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5528:	ldp	x27, x28, [sp, #80]
    552c:	b	5170 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    5530:	ldr	x0, [sp, #96]
    5534:	mov	x1, x24
    5538:	str	x2, [sp, #304]
    553c:	add	x0, x0, x21
    5540:	str	w2, [sp, #312]
    5544:	add	x0, x0, #0x8
    5548:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    554c:	ldr	w0, [sp, #312]
    5550:	cmp	w0, #0x40
    5554:	b.ls	5564 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>  // b.plast
    5558:	ldr	x0, [sp, #304]
    555c:	cbz	x0, 5564 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>
    5560:	bl	0 <_ZdaPv>
    5564:	ldr	x0, [sp, #136]
    5568:	str	x0, [sp, #96]
    556c:	b	54b8 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x428>
    5570:	ldp	x27, x28, [sp, #80]
    5574:	b	5100 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x70>
    5578:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    557c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5580:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5584:	add	x3, x3, #0x0
    5588:	add	x1, x1, #0x0
    558c:	add	x0, x0, #0x0
    5590:	mov	w2, #0x233                 	// #563
    5594:	bl	0 <__assert_fail>

0000000000005598 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>:
    5598:	stp	x29, x30, [sp, #-96]!
    559c:	add	x5, x8, #0x18
    55a0:	mov	x4, x8
    55a4:	mov	x29, sp
    55a8:	stp	x21, x22, [sp, #32]
    55ac:	mov	x22, x8
    55b0:	stp	x23, x24, [sp, #48]
    55b4:	and	w24, w3, #0xff
    55b8:	stp	x25, x26, [sp, #64]
    55bc:	mov	x25, x0
    55c0:	mov	w26, #0x1                   	// #1
    55c4:	str	xzr, [x8, #24]
    55c8:	stp	xzr, xzr, [x5, #8]
    55cc:	str	xzr, [x4], #8
    55d0:	ldrb	w0, [x2, #8]
    55d4:	str	xzr, [x8, #8]
    55d8:	str	w26, [x4, #8]
    55dc:	cmp	w0, #0x10
    55e0:	b.ne	56c4 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x12c>  // b.any
    55e4:	ldp	x2, x0, [x25, #24]
    55e8:	ldr	x3, [x1, #24]
    55ec:	sub	x0, x0, x2
    55f0:	ldr	x2, [x1, #32]
    55f4:	asr	x1, x0, #4
    55f8:	str	x27, [sp, #80]
    55fc:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5600:	movk	x27, #0xaaab
    5604:	sub	x2, x2, x3
    5608:	cmp	x2, x0
    560c:	mul	x1, x1, x27
    5610:	b.ne	56e4 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x14c>  // b.any
    5614:	cbnz	x1, 5634 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x9c>
    5618:	mov	x0, x22
    561c:	ldp	x21, x22, [sp, #32]
    5620:	ldp	x23, x24, [sp, #48]
    5624:	ldp	x25, x26, [sp, #64]
    5628:	ldr	x27, [sp, #80]
    562c:	ldp	x29, x30, [sp], #96
    5630:	ret
    5634:	mov	x0, x5
    5638:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    563c:	ldp	x2, x3, [x25, #24]
    5640:	cmp	x3, x2
    5644:	b.eq	5618 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x80>  // b.none
    5648:	and	x24, x24, #0xff
    564c:	mov	x21, #0x0                   	// #0
    5650:	stp	x19, x20, [sp, #16]
    5654:	mov	x20, #0x0                   	// #0
    5658:	ldr	x19, [x22, #24]
    565c:	add	x19, x19, x20
    5660:	add	x23, x19, #0x8
    5664:	ldr	w1, [x19, #16]
    5668:	cmp	w1, #0x40
    566c:	b.ls	5680 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xe8>  // b.plast
    5670:	ldr	x0, [x19, #8]
    5674:	cbz	x0, 5680 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xe8>
    5678:	bl	0 <_ZdaPv>
    567c:	ldp	x2, x3, [x25, #24]
    5680:	sub	x1, x3, x2
    5684:	str	x24, [x19, #8]
    5688:	add	x21, x21, #0x1
    568c:	asr	x1, x1, #4
    5690:	str	w26, [x23, #8]
    5694:	add	x20, x20, #0x30
    5698:	mul	x1, x1, x27
    569c:	cmp	x21, x1
    56a0:	b.cc	5658 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xc0>  // b.lo, b.ul, b.last
    56a4:	mov	x0, x22
    56a8:	ldp	x19, x20, [sp, #16]
    56ac:	ldp	x21, x22, [sp, #32]
    56b0:	ldp	x23, x24, [sp, #48]
    56b4:	ldp	x25, x26, [sp, #64]
    56b8:	ldr	x27, [sp, #80]
    56bc:	ldp	x29, x30, [sp], #96
    56c0:	ret
    56c4:	and	x24, x24, #0xff
    56c8:	str	x24, [x8, #8]
    56cc:	mov	x0, x22
    56d0:	ldp	x21, x22, [sp, #32]
    56d4:	ldp	x23, x24, [sp, #48]
    56d8:	ldp	x25, x26, [sp, #64]
    56dc:	ldp	x29, x30, [sp], #96
    56e0:	ret
    56e4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    56e8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    56ec:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    56f0:	add	x3, x3, #0x0
    56f4:	add	x1, x1, #0x0
    56f8:	add	x0, x0, #0x0
    56fc:	mov	w2, #0x28c                 	// #652
    5700:	stp	x19, x20, [sp, #16]
    5704:	bl	0 <__assert_fail>

0000000000005708 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>:
    5708:	stp	x29, x30, [sp, #-96]!
    570c:	mov	w4, #0x1                   	// #1
    5710:	mov	x29, sp
    5714:	stp	x25, x26, [sp, #64]
    5718:	add	x25, x8, #0x18
    571c:	stp	x19, x20, [sp, #16]
    5720:	mov	x20, x8
    5724:	mov	x19, x0
    5728:	stp	x21, x22, [sp, #32]
    572c:	mov	x21, x8
    5730:	mov	x22, x1
    5734:	stp	x23, x24, [sp, #48]
    5738:	mov	x23, x2
    573c:	str	xzr, [x8, #24]
    5740:	stp	xzr, xzr, [x25, #8]
    5744:	str	xzr, [x20], #8
    5748:	ldrb	w0, [x3, #8]
    574c:	str	xzr, [x8, #8]
    5750:	str	w4, [x20, #8]
    5754:	cmp	w0, #0x10
    5758:	b.ne	58c4 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1bc>  // b.any
    575c:	ldp	x1, x0, [x19, #24]
    5760:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5764:	ldp	x3, x2, [x22, #24]
    5768:	movk	x24, #0xaaab
    576c:	sub	x0, x0, x1
    5770:	asr	x1, x0, #4
    5774:	sub	x2, x2, x3
    5778:	cmp	x0, x2
    577c:	mul	x1, x1, x24
    5780:	b.ne	5974 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x26c>  // b.any
    5784:	ldp	x3, x2, [x23, #24]
    5788:	sub	x2, x2, x3
    578c:	cmp	x0, x2
    5790:	b.ne	5998 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x290>  // b.any
    5794:	cbnz	x1, 57b4 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xac>
    5798:	mov	x0, x21
    579c:	ldp	x19, x20, [sp, #16]
    57a0:	ldp	x21, x22, [sp, #32]
    57a4:	ldp	x23, x24, [sp, #48]
    57a8:	ldp	x25, x26, [sp, #64]
    57ac:	ldp	x29, x30, [sp], #96
    57b0:	ret
    57b4:	mov	x0, x25
    57b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    57bc:	ldp	x26, x0, [x19, #24]
    57c0:	cmp	x0, x26
    57c4:	b.eq	5798 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x90>  // b.none
    57c8:	mov	x25, #0x0                   	// #0
    57cc:	mov	x20, #0x0                   	// #0
    57d0:	stp	x27, x28, [sp, #80]
    57d4:	nop
    57d8:	add	x26, x26, x25
    57dc:	ldr	x27, [x21, #24]
    57e0:	ldr	w28, [x26, #16]
    57e4:	add	x27, x27, x25
    57e8:	cmp	w28, #0x40
    57ec:	b.ls	58bc <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1b4>  // b.plast
    57f0:	add	x0, x26, #0x8
    57f4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    57f8:	sub	w28, w28, w0
    57fc:	cmp	w28, #0x40
    5800:	b.hi	5810 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x108>  // b.pmore
    5804:	ldr	x0, [x26, #8]
    5808:	ldr	x0, [x0]
    580c:	cbz	x0, 58b0 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1a8>
    5810:	ldr	x26, [x22, #24]
    5814:	add	x26, x26, x25
    5818:	mov	x1, x26
    581c:	mov	x0, x27
    5820:	ldr	x2, [x1], #8
    5824:	str	x2, [x0], #8
    5828:	ldr	w2, [x27, #16]
    582c:	cmp	w2, #0x40
    5830:	b.hi	5840 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x138>  // b.pmore
    5834:	ldr	w2, [x26, #16]
    5838:	cmp	w2, #0x40
    583c:	b.ls	5890 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x188>  // b.plast
    5840:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5844:	add	x1, x26, #0x18
    5848:	add	x0, x27, #0x18
    584c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5850:	add	x20, x20, #0x1
    5854:	ldp	x26, x3, [x19, #24]
    5858:	add	x25, x25, #0x30
    585c:	sub	x3, x3, x26
    5860:	asr	x3, x3, #4
    5864:	mul	x3, x3, x24
    5868:	cmp	x20, x3
    586c:	b.cc	57d8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xd0>  // b.lo, b.ul, b.last
    5870:	mov	x0, x21
    5874:	ldp	x19, x20, [sp, #16]
    5878:	ldp	x21, x22, [sp, #32]
    587c:	ldp	x23, x24, [sp, #48]
    5880:	ldp	x25, x26, [sp, #64]
    5884:	ldp	x27, x28, [sp, #80]
    5888:	ldp	x29, x30, [sp], #96
    588c:	ret
    5890:	ldr	x3, [x1]
    5894:	neg	w1, w2
    5898:	str	w2, [x0, #8]
    589c:	mov	x0, #0xffffffffffffffff    	// #-1
    58a0:	lsr	x1, x0, x1
    58a4:	and	x1, x1, x3
    58a8:	str	x1, [x27, #8]
    58ac:	b	5844 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x13c>
    58b0:	ldr	x26, [x23, #24]
    58b4:	add	x26, x26, x25
    58b8:	b	5818 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x110>
    58bc:	ldr	x0, [x26, #8]
    58c0:	b	580c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x104>
    58c4:	ldr	w24, [x19, #16]
    58c8:	cmp	w24, #0x40
    58cc:	b.ls	596c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x264>  // b.plast
    58d0:	add	x0, x19, #0x8
    58d4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    58d8:	sub	w24, w24, w0
    58dc:	cmp	w24, #0x40
    58e0:	b.ls	592c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x224>  // b.plast
    58e4:	mov	x1, x22
    58e8:	ldr	x0, [x1], #8
    58ec:	str	x0, [x21]
    58f0:	ldr	w0, [x22, #16]
    58f4:	cmp	w0, #0x40
    58f8:	b.ls	5954 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x24c>  // b.plast
    58fc:	mov	x0, x20
    5900:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5904:	add	x1, x22, #0x18
    5908:	mov	x0, x25
    590c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5910:	mov	x0, x21
    5914:	ldp	x19, x20, [sp, #16]
    5918:	ldp	x21, x22, [sp, #32]
    591c:	ldp	x23, x24, [sp, #48]
    5920:	ldp	x25, x26, [sp, #64]
    5924:	ldp	x29, x30, [sp], #96
    5928:	ret
    592c:	ldr	x0, [x19, #8]
    5930:	ldr	x0, [x0]
    5934:	cmp	x0, #0x0
    5938:	csel	x22, x22, x23, ne  // ne = any
    593c:	mov	x1, x22
    5940:	ldr	x0, [x1], #8
    5944:	str	x0, [x21]
    5948:	ldr	w0, [x22, #16]
    594c:	cmp	w0, #0x40
    5950:	b.hi	58fc <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1f4>  // b.pmore
    5954:	ldr	x1, [x22, #8]
    5958:	str	x1, [x21, #8]
    595c:	str	w0, [x20, #8]
    5960:	mov	x0, x20
    5964:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5968:	b	5904 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1fc>
    596c:	ldr	x0, [x19, #8]
    5970:	b	5934 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x22c>
    5974:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5978:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    597c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5980:	add	x3, x3, #0x0
    5984:	add	x1, x1, #0x0
    5988:	add	x0, x0, #0x0
    598c:	mov	w2, #0x34f                 	// #847
    5990:	stp	x27, x28, [sp, #80]
    5994:	bl	0 <__assert_fail>
    5998:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    599c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    59a0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    59a4:	add	x3, x3, #0x0
    59a8:	add	x1, x1, #0x0
    59ac:	add	x0, x0, #0x0
    59b0:	mov	w2, #0x350                 	// #848
    59b4:	stp	x27, x28, [sp, #80]
    59b8:	bl	0 <__assert_fail>
    59bc:	nop

00000000000059c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>:
    59c0:	stp	x29, x30, [sp, #-64]!
    59c4:	mov	x29, sp
    59c8:	str	x19, [sp, #16]
    59cc:	str	x1, [sp, #40]
    59d0:	cbz	x1, 5a98 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xd8>
    59d4:	ldrb	w5, [x1, #16]
    59d8:	mov	x19, x8
    59dc:	mov	x3, x1
    59e0:	cmp	w5, #0x5
    59e4:	b.eq	5a68 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xa8>  // b.none
    59e8:	cmp	w5, #0x10
    59ec:	b.ls	5a7c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xbc>  // b.plast
    59f0:	add	x0, x2, #0x28
    59f4:	mov	x4, x2
    59f8:	ldr	x2, [x2, #48]
    59fc:	mov	x1, x0
    5a00:	cbz	x2, 5a34 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x74>
    5a04:	nop
    5a08:	ldr	x5, [x2, #32]
    5a0c:	cmp	x5, x3
    5a10:	b.cc	5a90 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xd0>  // b.lo, b.ul, b.last
    5a14:	mov	x1, x2
    5a18:	ldr	x2, [x2, #16]
    5a1c:	cbnz	x2, 5a08 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x48>
    5a20:	cmp	x0, x1
    5a24:	b.eq	5a34 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x74>  // b.none
    5a28:	ldr	x0, [x1, #32]
    5a2c:	cmp	x0, x3
    5a30:	b.ls	5a58 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x98>  // b.plast
    5a34:	add	x5, sp, #0x28
    5a38:	add	x0, x4, #0x20
    5a3c:	add	x3, sp, #0x38
    5a40:	add	x4, sp, #0x30
    5a44:	adrp	x2, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5a48:	add	x2, x2, #0x0
    5a4c:	str	x5, [sp, #56]
    5a50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5a54:	mov	x1, x0
    5a58:	add	x1, x1, #0x28
    5a5c:	mov	x0, x19
    5a60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5a64:	b	5a6c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xac>
    5a68:	bl	87f0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>
    5a6c:	mov	x0, x19
    5a70:	ldr	x19, [sp, #16]
    5a74:	ldp	x29, x30, [sp], #64
    5a78:	ret
    5a7c:	bl	0 <_ZN4llvm15ExecutionEngine16getConstantValueEPKNS_8ConstantE>
    5a80:	mov	x0, x19
    5a84:	ldr	x19, [sp, #16]
    5a88:	ldp	x29, x30, [sp], #64
    5a8c:	ret
    5a90:	ldr	x2, [x2, #24]
    5a94:	b	5a1c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x5c>
    5a98:	bl	c8 <_ZN4llvm13isa_impl_wrapINS_12ConstantExprEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    5a9c:	nop

0000000000005aa0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>:
    5aa0:	stp	x29, x30, [sp, #-192]!
    5aa4:	mov	x29, sp
    5aa8:	stp	x8, x1, [sp, #128]
    5aac:	ldr	x1, [x1]
    5ab0:	stp	x25, x26, [sp, #64]
    5ab4:	mov	x26, x0
    5ab8:	ldr	x0, [x3]
    5abc:	stp	x19, x20, [sp, #16]
    5ac0:	stp	x27, x28, [sp, #80]
    5ac4:	stp	x0, x4, [sp, #96]
    5ac8:	ldrb	w0, [x1, #8]
    5acc:	ldp	x20, x28, [x2]
    5ad0:	stp	x21, x22, [sp, #32]
    5ad4:	cmp	w0, #0xf
    5ad8:	b.ne	5fa0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x500>  // b.any
    5adc:	ldr	x0, [sp, #96]
    5ae0:	cmp	x0, x20
    5ae4:	b.eq	5e68 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3c8>  // b.none
    5ae8:	add	x0, sp, #0x90
    5aec:	mov	x22, #0x0                   	// #0
    5af0:	stp	x23, x24, [sp, #48]
    5af4:	add	x24, x26, #0x58
    5af8:	str	x0, [sp, #112]
    5afc:	add	x0, sp, #0x98
    5b00:	str	x0, [sp, #120]
    5b04:	b	5b24 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x84>
    5b08:	cmp	w1, #0xd
    5b0c:	mov	x28, #0x0                   	// #0
    5b10:	b.eq	5e10 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x370>  // b.none
    5b14:	ldr	x0, [sp, #96]
    5b18:	add	x20, x20, #0x18
    5b1c:	cmp	x0, x20
    5b20:	b.eq	5bdc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x13c>  // b.none
    5b24:	asr	x19, x28, #2
    5b28:	ubfx	x23, x28, #2, #1
    5b2c:	tbnz	w28, #2, 5c54 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1b4>
    5b30:	ands	x0, x28, #0xfffffffffffffff8
    5b34:	b.eq	5c54 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1b4>  // b.none
    5b38:	mov	x1, x0
    5b3c:	mov	x23, x0
    5b40:	mov	x0, x24
    5b44:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
    5b48:	ldr	x21, [x20]
    5b4c:	mov	x25, x0
    5b50:	cbz	x21, 5f90 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4f0>
    5b54:	ldrb	w0, [x21, #16]
    5b58:	cmp	w0, #0xd
    5b5c:	b.ne	5f80 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4e0>  // b.any
    5b60:	ldr	w27, [x21, #32]
    5b64:	cmp	w27, #0x40
    5b68:	b.ls	5dd8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x338>  // b.plast
    5b6c:	add	x0, x21, #0x18
    5b70:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5b74:	sub	w1, w27, w0
    5b78:	cmp	w1, #0x40
    5b7c:	b.hi	5ed0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x430>  // b.pmore
    5b80:	ldr	x0, [x21, #24]
    5b84:	ldr	x1, [x0]
    5b88:	ldr	w0, [x25, #12]
    5b8c:	ubfx	x0, x0, #0, #31
    5b90:	cmp	w0, w1
    5b94:	b.ls	5f60 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4c0>  // b.plast
    5b98:	add	x1, x25, w1, uxtw #3
    5b9c:	ldr	x0, [x1, #16]
    5ba0:	add	x22, x22, x0
    5ba4:	tbz	w19, #0, 5d78 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2d8>
    5ba8:	ldrb	w1, [x23, #8]
    5bac:	mov	w0, #0xfd                  	// #253
    5bb0:	sub	w2, w1, #0xe
    5bb4:	tst	w2, w0
    5bb8:	b.ne	5b08 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x68>  // b.any
    5bbc:	ldr	x3, [x23, #24]
    5bc0:	tst	x3, #0x7
    5bc4:	b.ne	5e90 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3f0>  // b.any
    5bc8:	ldr	x0, [sp, #96]
    5bcc:	add	x20, x20, #0x18
    5bd0:	orr	x28, x3, #0x4
    5bd4:	cmp	x0, x20
    5bd8:	b.ne	5b24 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x84>  // b.any
    5bdc:	ldp	x23, x24, [sp, #48]
    5be0:	mov	w4, #0x1                   	// #1
    5be4:	ldp	x20, x1, [sp, #128]
    5be8:	stp	xzr, xzr, [x20, #24]
    5bec:	add	x19, sp, #0x90
    5bf0:	str	xzr, [x20, #40]
    5bf4:	mov	x0, x26
    5bf8:	ldr	x2, [sp, #104]
    5bfc:	mov	x8, x19
    5c00:	mov	x3, x20
    5c04:	str	xzr, [x3], #8
    5c08:	str	xzr, [x20, #8]
    5c0c:	str	w4, [x3, #8]
    5c10:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    5c14:	ldr	x1, [sp, #144]
    5c18:	mov	x0, x19
    5c1c:	add	x1, x1, x22
    5c20:	str	x1, [x20]
    5c24:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5c28:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    5c2c:	ldr	x0, [x0]
    5c30:	ldrb	w0, [x0]
    5c34:	cbnz	w0, 5e2c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x38c>
    5c38:	ldp	x19, x20, [sp, #16]
    5c3c:	ldp	x21, x22, [sp, #32]
    5c40:	ldp	x25, x26, [sp, #64]
    5c44:	ldp	x27, x28, [sp, #80]
    5c48:	ldr	x0, [sp, #128]
    5c4c:	ldp	x29, x30, [sp], #192
    5c50:	ret
    5c54:	ldp	x2, x8, [sp, #104]
    5c58:	mov	x0, x26
    5c5c:	ldr	x1, [x20]
    5c60:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    5c64:	ldr	x27, [x20]
    5c68:	ldr	x0, [x27]
    5c6c:	cbz	x0, 5f50 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4b0>
    5c70:	ldrb	w2, [x0, #8]
    5c74:	cmp	w2, #0xb
    5c78:	b.ne	5f30 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x490>  // b.any
    5c7c:	ldr	w0, [x0, #8]
    5c80:	lsr	w0, w0, #8
    5c84:	cmp	w0, #0x20
    5c88:	b.eq	5de0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x340>  // b.none
    5c8c:	cmp	w0, #0x40
    5c90:	b.ne	5f10 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x470>  // b.any
    5c94:	ldr	w21, [sp, #160]
    5c98:	cmp	w21, #0x40
    5c9c:	b.ls	5dd0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x330>  // b.plast
    5ca0:	ldr	x0, [sp, #120]
    5ca4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5ca8:	sub	w21, w21, w0
    5cac:	cmp	w21, #0x40
    5cb0:	b.hi	5ed0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x430>  // b.pmore
    5cb4:	ldr	x0, [sp, #152]
    5cb8:	ldr	x21, [x0]
    5cbc:	and	w25, w19, #0x1
    5cc0:	tbz	w19, #0, 5db4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x314>
    5cc4:	ands	x19, x28, #0xfffffffffffffff8
    5cc8:	b.eq	5db4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x314>  // b.none
    5ccc:	mov	x27, x19
    5cd0:	mov	x1, x27
    5cd4:	mov	x0, x24
    5cd8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5cdc:	add	x2, x0, #0x7
    5ce0:	and	w28, w1, #0xff
    5ce4:	mov	x1, x27
    5ce8:	mov	x0, x24
    5cec:	lsr	x27, x2, #3
    5cf0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    5cf4:	mov	w1, w0
    5cf8:	cbz	w0, 5ef0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x450>
    5cfc:	sub	x2, x27, #0x1
    5d00:	mul	x21, x21, x1
    5d04:	add	x2, x2, x1
    5d08:	udiv	x2, x2, x1
    5d0c:	mul	x21, x2, x21
    5d10:	cbnz	w28, 5eb0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x410>
    5d14:	add	x22, x22, x21
    5d18:	ldp	x28, x21, [sp, #168]
    5d1c:	cmp	x28, x21
    5d20:	b.eq	5d40 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2a0>  // b.none
    5d24:	nop
    5d28:	mov	x0, x28
    5d2c:	add	x28, x28, #0x30
    5d30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5d34:	cmp	x21, x28
    5d38:	b.ne	5d28 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x288>  // b.any
    5d3c:	ldr	x21, [sp, #168]
    5d40:	cbz	x21, 5d4c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2ac>
    5d44:	mov	x0, x21
    5d48:	bl	0 <_ZdlPv>
    5d4c:	ldr	w0, [sp, #160]
    5d50:	cmp	w0, #0x40
    5d54:	b.ls	5d64 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2c4>  // b.plast
    5d58:	ldr	x0, [sp, #152]
    5d5c:	cbz	x0, 5d64 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2c4>
    5d60:	bl	0 <_ZdaPv>
    5d64:	cbz	w25, 5d6c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2cc>
    5d68:	cbnz	x19, 5dac <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x30c>
    5d6c:	cbnz	x23, 5e70 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3d0>
    5d70:	ldr	x21, [x20]
    5d74:	mov	x23, x19
    5d78:	mov	x0, x23
    5d7c:	mov	x1, x21
    5d80:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEPKNS_5ValueE>
    5d84:	mov	x23, x0
    5d88:	cbnz	x0, 5ba8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x108>
    5d8c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5d90:	add	x3, x3, #0x0
    5d94:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5d98:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5d9c:	add	x1, x1, #0x0
    5da0:	add	x0, x0, #0x0
    5da4:	mov	w2, #0x69                  	// #105
    5da8:	bl	0 <__assert_fail>
    5dac:	mov	x23, x19
    5db0:	b	5ba8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x108>
    5db4:	cbnz	x23, 5e70 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3d0>
    5db8:	and	x19, x28, #0xfffffffffffffff8
    5dbc:	mov	x1, x27
    5dc0:	mov	x0, x19
    5dc4:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEPKNS_5ValueE>
    5dc8:	mov	x27, x0
    5dcc:	b	5cd0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x230>
    5dd0:	ldr	x21, [sp, #152]
    5dd4:	b	5cbc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x21c>
    5dd8:	ldr	x1, [x21, #24]
    5ddc:	b	5b88 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xe8>
    5de0:	ldr	w21, [sp, #160]
    5de4:	cmp	w21, #0x40
    5de8:	b.ls	5e20 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x380>  // b.plast
    5dec:	ldr	x0, [sp, #120]
    5df0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5df4:	sub	w21, w21, w0
    5df8:	cmp	w21, #0x40
    5dfc:	b.hi	5ed0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x430>  // b.pmore
    5e00:	ldr	x0, [sp, #152]
    5e04:	ldr	x21, [x0]
    5e08:	sxtw	x21, w21
    5e0c:	b	5cbc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x21c>
    5e10:	tst	x23, #0x7
    5e14:	b.ne	5e90 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3f0>  // b.any
    5e18:	and	x28, x23, #0xfffffffffffffffb
    5e1c:	b	5b14 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x74>
    5e20:	ldr	x21, [sp, #152]
    5e24:	sxtw	x21, w21
    5e28:	b	5cbc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x21c>
    5e2c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e30:	add	x0, x0, #0x0
    5e34:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    5e38:	tst	w0, #0xff
    5e3c:	b.eq	5c38 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x198>  // b.none
    5e40:	bl	0 <_ZN4llvm4dbgsEv>
    5e44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e48:	add	x1, x1, #0x0
    5e4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e50:	mov	x1, x22
    5e54:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    5e58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e5c:	add	x1, x1, #0x0
    5e60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e64:	b	5c38 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x198>
    5e68:	mov	x22, #0x0                   	// #0
    5e6c:	b	5be0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x140>
    5e70:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e74:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e78:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e7c:	add	x3, x3, #0x0
    5e80:	add	x1, x1, #0x0
    5e84:	add	x0, x0, #0x0
    5e88:	mov	w2, #0xc3                  	// #195
    5e8c:	bl	0 <__assert_fail>
    5e90:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e94:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e98:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5e9c:	add	x3, x3, #0x0
    5ea0:	add	x1, x1, #0x0
    5ea4:	add	x0, x0, #0x0
    5ea8:	mov	w2, #0xb2                  	// #178
    5eac:	bl	0 <__assert_fail>
    5eb0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5eb4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5eb8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5ebc:	add	x3, x3, #0x0
    5ec0:	add	x1, x1, #0x0
    5ec4:	add	x0, x0, #0x0
    5ec8:	mov	w2, #0x7d                  	// #125
    5ecc:	bl	0 <__assert_fail>
    5ed0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5ed4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5ed8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5edc:	add	x3, x3, #0x0
    5ee0:	add	x1, x1, #0x0
    5ee4:	add	x0, x0, #0x0
    5ee8:	mov	w2, #0x657                 	// #1623
    5eec:	bl	0 <__assert_fail>
    5ef0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5ef4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5ef8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5efc:	add	x3, x3, #0x0
    5f00:	add	x1, x1, #0x0
    5f04:	add	x0, x0, #0x0
    5f08:	mov	w2, #0xc7                  	// #199
    5f0c:	bl	0 <__assert_fail>
    5f10:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f14:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f18:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f1c:	add	x3, x3, #0x0
    5f20:	add	x1, x1, #0x0
    5f24:	add	x0, x0, #0x0
    5f28:	mov	w2, #0x430                 	// #1072
    5f2c:	bl	0 <__assert_fail>
    5f30:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f34:	add	x3, x3, #0x0
    5f38:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f3c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f40:	add	x1, x1, #0x0
    5f44:	add	x0, x0, #0x0
    5f48:	mov	w2, #0x108                 	// #264
    5f4c:	bl	0 <__assert_fail>
    5f50:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f54:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f58:	add	x3, x3, #0x0
    5f5c:	b	5d98 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2f8>
    5f60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f6c:	add	x3, x3, #0x0
    5f70:	add	x1, x1, #0x0
    5f74:	add	x0, x0, #0x0
    5f78:	mov	w2, #0x260                 	// #608
    5f7c:	bl	0 <__assert_fail>
    5f80:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f84:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f88:	add	x3, x3, #0x0
    5f8c:	b	5f3c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x49c>
    5f90:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f94:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5f98:	add	x3, x3, #0x0
    5f9c:	b	5d98 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2f8>
    5fa0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5fa4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5fa8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5fac:	add	x3, x3, #0x0
    5fb0:	add	x1, x1, #0x0
    5fb4:	add	x0, x0, #0x0
    5fb8:	mov	w2, #0x419                 	// #1049
    5fbc:	stp	x23, x24, [sp, #48]
    5fc0:	bl	0 <__assert_fail>
    5fc4:	nop

0000000000005fc8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>:
    5fc8:	stp	x29, x30, [sp, #-144]!
    5fcc:	mov	x29, sp
    5fd0:	stp	x19, x20, [sp, #16]
    5fd4:	mov	x19, x1
    5fd8:	mov	x20, x0
    5fdc:	stp	x21, x22, [sp, #32]
    5fe0:	add	x22, sp, #0x30
    5fe4:	mov	x8, x22
    5fe8:	ldur	x1, [x1, #-48]
    5fec:	ldr	x21, [x0, #704]
    5ff0:	sub	x21, x21, #0x80
    5ff4:	mov	x2, x21
    5ff8:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    5ffc:	ldur	x1, [x19, #-24]
    6000:	mov	x2, x21
    6004:	mov	x0, x20
    6008:	add	x8, sp, #0x60
    600c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6010:	ldur	x3, [x19, #-48]
    6014:	mov	x0, x20
    6018:	ldr	x2, [sp, #96]
    601c:	mov	x1, x22
    6020:	ldr	x3, [x3]
    6024:	bl	0 <_ZN4llvm15ExecutionEngine18StoreValueToMemoryERKNS_12GenericValueEPS1_PNS_4TypeE>
    6028:	ldrb	w0, [x19, #18]
    602c:	tbz	w0, #0, 603c <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x74>
    6030:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6034:	ldrb	w0, [x0]
    6038:	cbnz	w0, 60dc <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x114>
    603c:	ldp	x19, x20, [sp, #120]
    6040:	cmp	x19, x20
    6044:	b.eq	6060 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x98>  // b.none
    6048:	mov	x0, x19
    604c:	add	x19, x19, #0x30
    6050:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6054:	cmp	x20, x19
    6058:	b.ne	6048 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x80>  // b.any
    605c:	ldr	x20, [sp, #120]
    6060:	cbz	x20, 606c <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xa4>
    6064:	mov	x0, x20
    6068:	bl	0 <_ZdlPv>
    606c:	ldr	w0, [sp, #112]
    6070:	cmp	w0, #0x40
    6074:	b.ls	6084 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xbc>  // b.plast
    6078:	ldr	x0, [sp, #104]
    607c:	cbz	x0, 6084 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xbc>
    6080:	bl	0 <_ZdaPv>
    6084:	ldp	x19, x20, [sp, #72]
    6088:	cmp	x19, x20
    608c:	b.eq	60a8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xe0>  // b.none
    6090:	mov	x0, x19
    6094:	add	x19, x19, #0x30
    6098:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    609c:	cmp	x20, x19
    60a0:	b.ne	6090 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xc8>  // b.any
    60a4:	ldr	x20, [sp, #72]
    60a8:	cbz	x20, 60b4 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xec>
    60ac:	mov	x0, x20
    60b0:	bl	0 <_ZdlPv>
    60b4:	ldr	w0, [sp, #64]
    60b8:	cmp	w0, #0x40
    60bc:	b.ls	60cc <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x104>  // b.plast
    60c0:	ldr	x0, [sp, #56]
    60c4:	cbz	x0, 60cc <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x104>
    60c8:	bl	0 <_ZdaPv>
    60cc:	ldp	x19, x20, [sp, #16]
    60d0:	ldp	x21, x22, [sp, #32]
    60d4:	ldp	x29, x30, [sp], #144
    60d8:	ret
    60dc:	bl	0 <_ZN4llvm4dbgsEv>
    60e0:	mov	x1, x0
    60e4:	ldp	x2, x3, [x0, #16]
    60e8:	sub	x2, x2, x3
    60ec:	cmp	x2, #0xf
    60f0:	b.ls	6120 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x158>  // b.plast
    60f4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    60f8:	add	x0, x0, #0x0
    60fc:	ldp	x4, x5, [x0]
    6100:	stp	x4, x5, [x3]
    6104:	ldr	x0, [x1, #24]
    6108:	add	x0, x0, #0x10
    610c:	str	x0, [x1, #24]
    6110:	mov	x0, x19
    6114:	mov	w2, #0x0                   	// #0
    6118:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    611c:	b	603c <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x74>
    6120:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6124:	add	x1, x1, #0x0
    6128:	mov	x2, #0x10                  	// #16
    612c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6130:	mov	x1, x0
    6134:	b	6110 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x148>

0000000000006138 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    6138:	stp	x29, x30, [sp, #-144]!
    613c:	mov	w4, #0x1                   	// #1
    6140:	mov	x29, sp
    6144:	stp	x23, x24, [sp, #48]
    6148:	add	x23, x8, #0x18
    614c:	add	x24, sp, #0x60
    6150:	stp	x19, x20, [sp, #16]
    6154:	mov	x19, x1
    6158:	mov	x20, x2
    615c:	stp	x21, x22, [sp, #32]
    6160:	mov	x22, x8
    6164:	mov	x21, x8
    6168:	str	xzr, [x8, #24]
    616c:	mov	x2, x3
    6170:	stp	xzr, xzr, [x23, #8]
    6174:	str	xzr, [x22], #8
    6178:	str	xzr, [x8, #8]
    617c:	mov	x8, x24
    6180:	str	w4, [x22, #8]
    6184:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6188:	ldr	x0, [x19]
    618c:	ldrb	w0, [x0, #8]
    6190:	cmp	w0, #0x10
    6194:	b.ne	62d4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x19c>  // b.any
    6198:	ldrb	w0, [x20, #8]
    619c:	stp	x25, x26, [sp, #64]
    61a0:	cmp	w0, #0x10
    61a4:	b.eq	6328 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f0>  // b.none
    61a8:	cmp	w0, #0xb
    61ac:	b.ne	63f4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2bc>  // b.any
    61b0:	ldp	x19, x22, [sp, #120]
    61b4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    61b8:	ldp	x26, x25, [x21, #24]
    61bc:	movk	x2, #0xaaab
    61c0:	ldr	w24, [x20, #8]
    61c4:	sub	x22, x22, x19
    61c8:	lsr	w24, w24, #8
    61cc:	sub	x0, x25, x26
    61d0:	asr	x22, x22, #4
    61d4:	asr	x0, x0, #4
    61d8:	mul	x22, x22, x2
    61dc:	mul	x0, x0, x2
    61e0:	and	x1, x22, #0xffffffff
    61e4:	cmp	x1, x0
    61e8:	b.hi	63b4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x27c>  // b.pmore
    61ec:	b.cc	633c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x204>  // b.lo, b.ul, b.last
    61f0:	cbz	w22, 6270 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x138>
    61f4:	sub	w22, w22, #0x1
    61f8:	add	x25, sp, #0x50
    61fc:	add	x22, x22, #0x1
    6200:	mov	x20, #0x0                   	// #0
    6204:	add	x22, x22, x22, lsl #1
    6208:	lsl	x22, x22, #4
    620c:	nop
    6210:	ldr	x1, [x21, #24]
    6214:	add	x0, x19, x20
    6218:	add	x0, x0, #0x8
    621c:	mov	x8, x25
    6220:	add	x19, x1, x20
    6224:	mov	w1, w24
    6228:	add	x23, x19, #0x8
    622c:	bl	0 <_ZNK4llvm5APInt5truncEj>
    6230:	cmp	x25, x23
    6234:	b.eq	63c8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x290>  // b.none
    6238:	ldr	w0, [x19, #16]
    623c:	cmp	w0, #0x40
    6240:	b.ls	6250 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x118>  // b.plast
    6244:	ldr	x0, [x19, #8]
    6248:	cbz	x0, 6250 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x118>
    624c:	bl	0 <_ZdaPv>
    6250:	ldr	x0, [sp, #80]
    6254:	str	x0, [x19, #8]
    6258:	add	x20, x20, #0x30
    625c:	ldr	w0, [sp, #88]
    6260:	cmp	x22, x20
    6264:	ldr	x19, [sp, #120]
    6268:	str	w0, [x23, #8]
    626c:	b.ne	6210 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.any
    6270:	ldp	x25, x26, [sp, #64]
    6274:	ldr	x20, [sp, #128]
    6278:	cmp	x19, x20
    627c:	b.eq	6298 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>  // b.none
    6280:	mov	x0, x19
    6284:	add	x19, x19, #0x30
    6288:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    628c:	cmp	x20, x19
    6290:	b.ne	6280 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.any
    6294:	ldr	x20, [sp, #120]
    6298:	cbz	x20, 62a4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>
    629c:	mov	x0, x20
    62a0:	bl	0 <_ZdlPv>
    62a4:	ldr	w0, [sp, #112]
    62a8:	cmp	w0, #0x40
    62ac:	b.ls	62bc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x184>  // b.plast
    62b0:	ldr	x0, [sp, #104]
    62b4:	cbz	x0, 62bc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x184>
    62b8:	bl	0 <_ZdaPv>
    62bc:	mov	x0, x21
    62c0:	ldp	x19, x20, [sp, #16]
    62c4:	ldp	x21, x22, [sp, #32]
    62c8:	ldp	x23, x24, [sp, #48]
    62cc:	ldp	x29, x30, [sp], #144
    62d0:	ret
    62d4:	cbz	x20, 63e8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b0>
    62d8:	ldrb	w0, [x20, #8]
    62dc:	cmp	w0, #0xb
    62e0:	b.ne	63f0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b8>  // b.any
    62e4:	ldr	w1, [x20, #8]
    62e8:	add	x0, x24, #0x8
    62ec:	add	x8, sp, #0x50
    62f0:	lsr	w1, w1, #8
    62f4:	bl	0 <_ZNK4llvm5APInt5truncEj>
    62f8:	ldr	w0, [x21, #16]
    62fc:	cmp	w0, #0x40
    6300:	b.ls	6310 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d8>  // b.plast
    6304:	ldr	x0, [x21, #8]
    6308:	cbz	x0, 6310 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d8>
    630c:	bl	0 <_ZdaPv>
    6310:	ldr	x0, [sp, #80]
    6314:	str	x0, [x21, #8]
    6318:	ldr	w0, [sp, #88]
    631c:	str	w0, [x22, #8]
    6320:	ldr	x19, [sp, #120]
    6324:	b	6274 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x13c>
    6328:	ldr	x0, [x20, #16]
    632c:	ldr	x20, [x0]
    6330:	cbz	x20, 63ec <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b4>
    6334:	ldrb	w0, [x20, #8]
    6338:	b	61a8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x70>
    633c:	add	x1, x1, x1, lsl #1
    6340:	add	x26, x26, x1, lsl #4
    6344:	cmp	x25, x26
    6348:	b.eq	61f0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb8>  // b.none
    634c:	mov	x23, x26
    6350:	ldp	x19, x20, [x23, #24]
    6354:	cmp	x19, x20
    6358:	b.eq	6378 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x240>  // b.none
    635c:	nop
    6360:	mov	x0, x19
    6364:	add	x19, x19, #0x30
    6368:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    636c:	cmp	x20, x19
    6370:	b.ne	6360 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x228>  // b.any
    6374:	ldr	x20, [x23, #24]
    6378:	cbz	x20, 6384 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>
    637c:	mov	x0, x20
    6380:	bl	0 <_ZdlPv>
    6384:	ldr	w0, [x23, #16]
    6388:	cmp	w0, #0x40
    638c:	b.ls	639c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x264>  // b.plast
    6390:	ldr	x0, [x23, #8]
    6394:	cbz	x0, 639c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x264>
    6398:	bl	0 <_ZdaPv>
    639c:	add	x23, x23, #0x30
    63a0:	cmp	x25, x23
    63a4:	b.ne	6350 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x218>  // b.any
    63a8:	str	x26, [x21, #32]
    63ac:	ldr	x19, [sp, #120]
    63b0:	b	61f0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb8>
    63b4:	sub	x1, x1, x0
    63b8:	mov	x0, x23
    63bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    63c0:	ldr	x19, [sp, #120]
    63c4:	b	61f0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb8>
    63c8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    63cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    63d0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    63d4:	add	x3, x3, #0x0
    63d8:	add	x1, x1, #0x0
    63dc:	add	x0, x0, #0x0
    63e0:	mov	w2, #0x302                 	// #770
    63e4:	bl	0 <__assert_fail>
    63e8:	stp	x25, x26, [sp, #64]
    63ec:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    63f0:	stp	x25, x26, [sp, #64]
    63f4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    63f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    63fc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6400:	add	x3, x3, #0x0
    6404:	add	x1, x1, #0x0
    6408:	add	x0, x0, #0x0
    640c:	mov	w2, #0x108                 	// #264
    6410:	bl	0 <__assert_fail>
    6414:	nop

0000000000006418 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    6418:	stp	x29, x30, [sp, #-144]!
    641c:	mov	w4, #0x1                   	// #1
    6420:	mov	x29, sp
    6424:	stp	x23, x24, [sp, #48]
    6428:	add	x23, x8, #0x18
    642c:	stp	x19, x20, [sp, #16]
    6430:	add	x19, sp, #0x60
    6434:	mov	x20, x2
    6438:	stp	x21, x22, [sp, #32]
    643c:	mov	x22, x8
    6440:	mov	x21, x8
    6444:	ldr	x24, [x1]
    6448:	str	xzr, [x8, #24]
    644c:	stp	xzr, xzr, [x23, #8]
    6450:	mov	x2, x3
    6454:	str	xzr, [x22], #8
    6458:	str	xzr, [x8, #8]
    645c:	mov	x8, x19
    6460:	str	w4, [x22, #8]
    6464:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6468:	ldrb	w0, [x24, #8]
    646c:	cmp	w0, #0x10
    6470:	b.ne	65ac <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.any
    6474:	ldrb	w0, [x20, #8]
    6478:	stp	x25, x26, [sp, #64]
    647c:	cmp	w0, #0x10
    6480:	b.eq	6600 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    6484:	cmp	w0, #0xb
    6488:	b.ne	66cc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b4>  // b.any
    648c:	ldp	x19, x22, [sp, #120]
    6490:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6494:	ldp	x26, x25, [x21, #24]
    6498:	movk	x2, #0xaaab
    649c:	ldr	w24, [x20, #8]
    64a0:	sub	x22, x22, x19
    64a4:	lsr	w24, w24, #8
    64a8:	sub	x0, x25, x26
    64ac:	asr	x22, x22, #4
    64b0:	asr	x0, x0, #4
    64b4:	mul	x22, x22, x2
    64b8:	mul	x0, x0, x2
    64bc:	and	x1, x22, #0xffffffff
    64c0:	cmp	x1, x0
    64c4:	b.hi	668c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x274>  // b.pmore
    64c8:	b.cc	6614 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1fc>  // b.lo, b.ul, b.last
    64cc:	cbz	w22, 6548 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    64d0:	sub	w22, w22, #0x1
    64d4:	add	x25, sp, #0x50
    64d8:	add	x22, x22, #0x1
    64dc:	mov	x20, #0x0                   	// #0
    64e0:	add	x22, x22, x22, lsl #1
    64e4:	lsl	x22, x22, #4
    64e8:	ldr	x1, [x21, #24]
    64ec:	add	x0, x19, x20
    64f0:	add	x0, x0, #0x8
    64f4:	mov	x8, x25
    64f8:	add	x19, x1, x20
    64fc:	mov	w1, w24
    6500:	add	x23, x19, #0x8
    6504:	bl	0 <_ZNK4llvm5APInt4sextEj>
    6508:	cmp	x25, x23
    650c:	b.eq	66a0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>  // b.none
    6510:	ldr	w0, [x19, #16]
    6514:	cmp	w0, #0x40
    6518:	b.ls	6528 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    651c:	ldr	x0, [x19, #8]
    6520:	cbz	x0, 6528 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    6524:	bl	0 <_ZdaPv>
    6528:	ldr	x0, [sp, #80]
    652c:	str	x0, [x19, #8]
    6530:	add	x20, x20, #0x30
    6534:	ldr	w0, [sp, #88]
    6538:	cmp	x22, x20
    653c:	ldr	x19, [sp, #120]
    6540:	str	w0, [x23, #8]
    6544:	b.ne	64e8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    6548:	ldp	x25, x26, [sp, #64]
    654c:	ldr	x20, [sp, #128]
    6550:	cmp	x20, x19
    6554:	b.eq	6570 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x158>  // b.none
    6558:	mov	x0, x19
    655c:	add	x19, x19, #0x30
    6560:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6564:	cmp	x20, x19
    6568:	b.ne	6558 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    656c:	ldr	x19, [sp, #120]
    6570:	cbz	x19, 657c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>
    6574:	mov	x0, x19
    6578:	bl	0 <_ZdlPv>
    657c:	ldr	w0, [sp, #112]
    6580:	cmp	w0, #0x40
    6584:	b.ls	6594 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>  // b.plast
    6588:	ldr	x0, [sp, #104]
    658c:	cbz	x0, 6594 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>
    6590:	bl	0 <_ZdaPv>
    6594:	mov	x0, x21
    6598:	ldp	x19, x20, [sp, #16]
    659c:	ldp	x21, x22, [sp, #32]
    65a0:	ldp	x23, x24, [sp, #48]
    65a4:	ldp	x29, x30, [sp], #144
    65a8:	ret
    65ac:	cbz	x20, 66c0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>
    65b0:	ldrb	w0, [x20, #8]
    65b4:	cmp	w0, #0xb
    65b8:	b.ne	66c8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b0>  // b.any
    65bc:	ldr	w1, [x20, #8]
    65c0:	add	x0, x19, #0x8
    65c4:	add	x8, sp, #0x50
    65c8:	lsr	w1, w1, #8
    65cc:	bl	0 <_ZNK4llvm5APInt4sextEj>
    65d0:	ldr	w0, [x21, #16]
    65d4:	cmp	w0, #0x40
    65d8:	b.ls	65e8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>  // b.plast
    65dc:	ldr	x0, [x21, #8]
    65e0:	cbz	x0, 65e8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>
    65e4:	bl	0 <_ZdaPv>
    65e8:	ldr	x0, [sp, #80]
    65ec:	str	x0, [x21, #8]
    65f0:	ldr	w0, [sp, #88]
    65f4:	str	w0, [x22, #8]
    65f8:	ldr	x19, [sp, #120]
    65fc:	b	654c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>
    6600:	ldr	x0, [x20, #16]
    6604:	ldr	x20, [x0]
    6608:	cbz	x20, 66c4 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>
    660c:	ldrb	w0, [x20, #8]
    6610:	b	6484 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>
    6614:	add	x1, x1, x1, lsl #1
    6618:	add	x26, x26, x1, lsl #4
    661c:	cmp	x25, x26
    6620:	b.eq	64cc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>  // b.none
    6624:	mov	x23, x26
    6628:	ldp	x19, x20, [x23, #24]
    662c:	cmp	x19, x20
    6630:	b.eq	6650 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x238>  // b.none
    6634:	nop
    6638:	mov	x0, x19
    663c:	add	x19, x19, #0x30
    6640:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6644:	cmp	x20, x19
    6648:	b.ne	6638 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x220>  // b.any
    664c:	ldr	x20, [x23, #24]
    6650:	cbz	x20, 665c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x244>
    6654:	mov	x0, x20
    6658:	bl	0 <_ZdlPv>
    665c:	ldr	w0, [x23, #16]
    6660:	cmp	w0, #0x40
    6664:	b.ls	6674 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>  // b.plast
    6668:	ldr	x0, [x23, #8]
    666c:	cbz	x0, 6674 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>
    6670:	bl	0 <_ZdaPv>
    6674:	add	x23, x23, #0x30
    6678:	cmp	x25, x23
    667c:	b.ne	6628 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x210>  // b.any
    6680:	str	x26, [x21, #32]
    6684:	ldr	x19, [sp, #120]
    6688:	b	64cc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    668c:	sub	x1, x1, x0
    6690:	mov	x0, x23
    6694:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6698:	ldr	x19, [sp, #120]
    669c:	b	64cc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    66a0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66a4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66a8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66ac:	add	x3, x3, #0x0
    66b0:	add	x1, x1, #0x0
    66b4:	add	x0, x0, #0x0
    66b8:	mov	w2, #0x302                 	// #770
    66bc:	bl	0 <__assert_fail>
    66c0:	stp	x25, x26, [sp, #64]
    66c4:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    66c8:	stp	x25, x26, [sp, #64]
    66cc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66d0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66d4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66d8:	add	x3, x3, #0x0
    66dc:	add	x1, x1, #0x0
    66e0:	add	x0, x0, #0x0
    66e4:	mov	w2, #0x108                 	// #264
    66e8:	bl	0 <__assert_fail>
    66ec:	nop

00000000000066f0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    66f0:	stp	x29, x30, [sp, #-144]!
    66f4:	mov	w4, #0x1                   	// #1
    66f8:	mov	x29, sp
    66fc:	stp	x23, x24, [sp, #48]
    6700:	add	x23, x8, #0x18
    6704:	stp	x19, x20, [sp, #16]
    6708:	add	x19, sp, #0x60
    670c:	mov	x20, x2
    6710:	stp	x21, x22, [sp, #32]
    6714:	mov	x22, x8
    6718:	mov	x21, x8
    671c:	ldr	x24, [x1]
    6720:	str	xzr, [x8, #24]
    6724:	stp	xzr, xzr, [x23, #8]
    6728:	mov	x2, x3
    672c:	str	xzr, [x22], #8
    6730:	str	xzr, [x8, #8]
    6734:	mov	x8, x19
    6738:	str	w4, [x22, #8]
    673c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6740:	ldrb	w0, [x24, #8]
    6744:	cmp	w0, #0x10
    6748:	b.ne	6884 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.any
    674c:	ldrb	w0, [x20, #8]
    6750:	stp	x25, x26, [sp, #64]
    6754:	cmp	w0, #0x10
    6758:	b.eq	68d8 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    675c:	cmp	w0, #0xb
    6760:	b.ne	69a4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b4>  // b.any
    6764:	ldp	x19, x22, [sp, #120]
    6768:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    676c:	ldp	x26, x25, [x21, #24]
    6770:	movk	x2, #0xaaab
    6774:	ldr	w24, [x20, #8]
    6778:	sub	x22, x22, x19
    677c:	lsr	w24, w24, #8
    6780:	sub	x0, x25, x26
    6784:	asr	x22, x22, #4
    6788:	asr	x0, x0, #4
    678c:	mul	x22, x22, x2
    6790:	mul	x0, x0, x2
    6794:	and	x1, x22, #0xffffffff
    6798:	cmp	x1, x0
    679c:	b.hi	6964 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x274>  // b.pmore
    67a0:	b.cc	68ec <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1fc>  // b.lo, b.ul, b.last
    67a4:	cbz	w22, 6820 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    67a8:	sub	w22, w22, #0x1
    67ac:	add	x25, sp, #0x50
    67b0:	add	x22, x22, #0x1
    67b4:	mov	x20, #0x0                   	// #0
    67b8:	add	x22, x22, x22, lsl #1
    67bc:	lsl	x22, x22, #4
    67c0:	ldr	x1, [x21, #24]
    67c4:	add	x0, x19, x20
    67c8:	add	x0, x0, #0x8
    67cc:	mov	x8, x25
    67d0:	add	x19, x1, x20
    67d4:	mov	w1, w24
    67d8:	add	x23, x19, #0x8
    67dc:	bl	0 <_ZNK4llvm5APInt4zextEj>
    67e0:	cmp	x25, x23
    67e4:	b.eq	6978 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>  // b.none
    67e8:	ldr	w0, [x19, #16]
    67ec:	cmp	w0, #0x40
    67f0:	b.ls	6800 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    67f4:	ldr	x0, [x19, #8]
    67f8:	cbz	x0, 6800 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    67fc:	bl	0 <_ZdaPv>
    6800:	ldr	x0, [sp, #80]
    6804:	str	x0, [x19, #8]
    6808:	add	x20, x20, #0x30
    680c:	ldr	w0, [sp, #88]
    6810:	cmp	x22, x20
    6814:	ldr	x19, [sp, #120]
    6818:	str	w0, [x23, #8]
    681c:	b.ne	67c0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    6820:	ldp	x25, x26, [sp, #64]
    6824:	ldr	x20, [sp, #128]
    6828:	cmp	x20, x19
    682c:	b.eq	6848 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x158>  // b.none
    6830:	mov	x0, x19
    6834:	add	x19, x19, #0x30
    6838:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    683c:	cmp	x20, x19
    6840:	b.ne	6830 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    6844:	ldr	x19, [sp, #120]
    6848:	cbz	x19, 6854 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>
    684c:	mov	x0, x19
    6850:	bl	0 <_ZdlPv>
    6854:	ldr	w0, [sp, #112]
    6858:	cmp	w0, #0x40
    685c:	b.ls	686c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>  // b.plast
    6860:	ldr	x0, [sp, #104]
    6864:	cbz	x0, 686c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>
    6868:	bl	0 <_ZdaPv>
    686c:	mov	x0, x21
    6870:	ldp	x19, x20, [sp, #16]
    6874:	ldp	x21, x22, [sp, #32]
    6878:	ldp	x23, x24, [sp, #48]
    687c:	ldp	x29, x30, [sp], #144
    6880:	ret
    6884:	cbz	x20, 6998 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>
    6888:	ldrb	w0, [x20, #8]
    688c:	cmp	w0, #0xb
    6890:	b.ne	69a0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b0>  // b.any
    6894:	ldr	w1, [x20, #8]
    6898:	add	x0, x19, #0x8
    689c:	add	x8, sp, #0x50
    68a0:	lsr	w1, w1, #8
    68a4:	bl	0 <_ZNK4llvm5APInt4zextEj>
    68a8:	ldr	w0, [x21, #16]
    68ac:	cmp	w0, #0x40
    68b0:	b.ls	68c0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>  // b.plast
    68b4:	ldr	x0, [x21, #8]
    68b8:	cbz	x0, 68c0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>
    68bc:	bl	0 <_ZdaPv>
    68c0:	ldr	x0, [sp, #80]
    68c4:	str	x0, [x21, #8]
    68c8:	ldr	w0, [sp, #88]
    68cc:	str	w0, [x22, #8]
    68d0:	ldr	x19, [sp, #120]
    68d4:	b	6824 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>
    68d8:	ldr	x0, [x20, #16]
    68dc:	ldr	x20, [x0]
    68e0:	cbz	x20, 699c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>
    68e4:	ldrb	w0, [x20, #8]
    68e8:	b	675c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>
    68ec:	add	x1, x1, x1, lsl #1
    68f0:	add	x26, x26, x1, lsl #4
    68f4:	cmp	x25, x26
    68f8:	b.eq	67a4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>  // b.none
    68fc:	mov	x23, x26
    6900:	ldp	x19, x20, [x23, #24]
    6904:	cmp	x19, x20
    6908:	b.eq	6928 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x238>  // b.none
    690c:	nop
    6910:	mov	x0, x19
    6914:	add	x19, x19, #0x30
    6918:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    691c:	cmp	x20, x19
    6920:	b.ne	6910 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x220>  // b.any
    6924:	ldr	x20, [x23, #24]
    6928:	cbz	x20, 6934 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x244>
    692c:	mov	x0, x20
    6930:	bl	0 <_ZdlPv>
    6934:	ldr	w0, [x23, #16]
    6938:	cmp	w0, #0x40
    693c:	b.ls	694c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>  // b.plast
    6940:	ldr	x0, [x23, #8]
    6944:	cbz	x0, 694c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>
    6948:	bl	0 <_ZdaPv>
    694c:	add	x23, x23, #0x30
    6950:	cmp	x25, x23
    6954:	b.ne	6900 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x210>  // b.any
    6958:	str	x26, [x21, #32]
    695c:	ldr	x19, [sp, #120]
    6960:	b	67a4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    6964:	sub	x1, x1, x0
    6968:	mov	x0, x23
    696c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6970:	ldr	x19, [sp, #120]
    6974:	b	67a4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    6978:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    697c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6980:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6984:	add	x3, x3, #0x0
    6988:	add	x1, x1, #0x0
    698c:	add	x0, x0, #0x0
    6990:	mov	w2, #0x302                 	// #770
    6994:	bl	0 <__assert_fail>
    6998:	stp	x25, x26, [sp, #64]
    699c:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    69a0:	stp	x25, x26, [sp, #64]
    69a4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    69a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    69ac:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    69b0:	add	x3, x3, #0x0
    69b4:	add	x1, x1, #0x0
    69b8:	add	x0, x0, #0x0
    69bc:	mov	w2, #0x108                 	// #264
    69c0:	bl	0 <__assert_fail>
    69c4:	nop

00000000000069c8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    69c8:	stp	x29, x30, [sp, #-96]!
    69cc:	mov	x4, x8
    69d0:	mov	w5, #0x1                   	// #1
    69d4:	mov	x29, sp
    69d8:	stp	x21, x22, [sp, #32]
    69dc:	add	x22, x8, #0x18
    69e0:	mov	x21, x1
    69e4:	stp	x19, x20, [sp, #16]
    69e8:	mov	x20, x8
    69ec:	mov	x19, x2
    69f0:	str	xzr, [x8, #24]
    69f4:	mov	x2, x3
    69f8:	stp	xzr, xzr, [x22, #8]
    69fc:	add	x8, sp, #0x30
    6a00:	str	xzr, [x4], #8
    6a04:	str	xzr, [x20, #8]
    6a08:	str	w5, [x4, #8]
    6a0c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6a10:	ldr	x1, [x21]
    6a14:	ldrb	w0, [x1, #8]
    6a18:	cmp	w0, #0x10
    6a1c:	b.eq	6aa0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.none
    6a20:	cmp	w0, #0x3
    6a24:	b.ne	6b34 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    6a28:	ldrb	w0, [x19, #8]
    6a2c:	cmp	w0, #0x2
    6a30:	b.ne	6b34 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    6a34:	ldr	d0, [sp, #48]
    6a38:	fcvt	s0, d0
    6a3c:	str	s0, [x20]
    6a40:	ldp	x19, x21, [sp, #72]
    6a44:	cmp	x19, x21
    6a48:	b.eq	6a68 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa0>  // b.none
    6a4c:	nop
    6a50:	mov	x0, x19
    6a54:	add	x19, x19, #0x30
    6a58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6a5c:	cmp	x21, x19
    6a60:	b.ne	6a50 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x88>  // b.any
    6a64:	ldr	x21, [sp, #72]
    6a68:	cbz	x21, 6a74 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xac>
    6a6c:	mov	x0, x21
    6a70:	bl	0 <_ZdlPv>
    6a74:	ldr	w0, [sp, #64]
    6a78:	cmp	w0, #0x40
    6a7c:	b.ls	6a8c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>  // b.plast
    6a80:	ldr	x0, [sp, #56]
    6a84:	cbz	x0, 6a8c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>
    6a88:	bl	0 <_ZdaPv>
    6a8c:	mov	x0, x20
    6a90:	ldp	x19, x20, [sp, #16]
    6a94:	ldp	x21, x22, [sp, #32]
    6a98:	ldp	x29, x30, [sp], #96
    6a9c:	ret
    6aa0:	ldr	x0, [x1, #16]
    6aa4:	ldr	x0, [x0]
    6aa8:	ldrb	w0, [x0, #8]
    6aac:	cmp	w0, #0x3
    6ab0:	b.ne	6b54 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    6ab4:	ldrb	w0, [x19, #8]
    6ab8:	cmp	w0, #0x10
    6abc:	b.ne	6acc <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.any
    6ac0:	ldr	x0, [x19, #16]
    6ac4:	ldr	x0, [x0]
    6ac8:	ldrb	w0, [x0, #8]
    6acc:	cmp	w0, #0x2
    6ad0:	b.ne	6b54 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    6ad4:	ldp	x2, x19, [sp, #72]
    6ad8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6adc:	movk	x1, #0xaaab
    6ae0:	mov	x0, x22
    6ae4:	sub	x19, x19, x2
    6ae8:	asr	x19, x19, #4
    6aec:	mul	x19, x19, x1
    6af0:	mov	w1, w19
    6af4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6af8:	cbz	w19, 6a40 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    6afc:	sub	w1, w19, #0x1
    6b00:	mov	x0, #0x0                   	// #0
    6b04:	add	x1, x1, #0x1
    6b08:	add	x1, x1, x1, lsl #1
    6b0c:	lsl	x1, x1, #4
    6b10:	ldr	x3, [sp, #72]
    6b14:	ldr	x2, [x20, #24]
    6b18:	ldr	d0, [x3, x0]
    6b1c:	fcvt	s0, d0
    6b20:	str	s0, [x2, x0]
    6b24:	add	x0, x0, #0x30
    6b28:	cmp	x1, x0
    6b2c:	b.ne	6b10 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.any
    6b30:	b	6a40 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    6b34:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b38:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b3c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b40:	add	x3, x3, #0x0
    6b44:	add	x1, x1, #0x0
    6b48:	add	x0, x0, #0x0
    6b4c:	mov	w2, #0x542                 	// #1346
    6b50:	bl	0 <__assert_fail>
    6b54:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b5c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b60:	add	x3, x3, #0x0
    6b64:	add	x1, x1, #0x0
    6b68:	add	x0, x0, #0x0
    6b6c:	mov	w2, #0x538                 	// #1336
    6b70:	bl	0 <__assert_fail>
    6b74:	nop

0000000000006b78 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    6b78:	stp	x29, x30, [sp, #-96]!
    6b7c:	mov	x4, x8
    6b80:	mov	w5, #0x1                   	// #1
    6b84:	mov	x29, sp
    6b88:	stp	x21, x22, [sp, #32]
    6b8c:	add	x22, x8, #0x18
    6b90:	mov	x21, x1
    6b94:	stp	x19, x20, [sp, #16]
    6b98:	mov	x20, x8
    6b9c:	mov	x19, x2
    6ba0:	str	xzr, [x8, #24]
    6ba4:	mov	x2, x3
    6ba8:	stp	xzr, xzr, [x22, #8]
    6bac:	add	x8, sp, #0x30
    6bb0:	str	xzr, [x4], #8
    6bb4:	str	xzr, [x20, #8]
    6bb8:	str	w5, [x4, #8]
    6bbc:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6bc0:	ldr	x1, [x21]
    6bc4:	ldrb	w0, [x1, #8]
    6bc8:	cmp	w0, #0x10
    6bcc:	b.eq	6c50 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.none
    6bd0:	cmp	w0, #0x2
    6bd4:	b.ne	6ce4 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    6bd8:	ldrb	w0, [x19, #8]
    6bdc:	cmp	w0, #0x3
    6be0:	b.ne	6ce4 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    6be4:	ldr	s0, [sp, #48]
    6be8:	fcvt	d0, s0
    6bec:	str	d0, [x20]
    6bf0:	ldp	x19, x21, [sp, #72]
    6bf4:	cmp	x19, x21
    6bf8:	b.eq	6c18 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa0>  // b.none
    6bfc:	nop
    6c00:	mov	x0, x19
    6c04:	add	x19, x19, #0x30
    6c08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6c0c:	cmp	x21, x19
    6c10:	b.ne	6c00 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x88>  // b.any
    6c14:	ldr	x21, [sp, #72]
    6c18:	cbz	x21, 6c24 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xac>
    6c1c:	mov	x0, x21
    6c20:	bl	0 <_ZdlPv>
    6c24:	ldr	w0, [sp, #64]
    6c28:	cmp	w0, #0x40
    6c2c:	b.ls	6c3c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>  // b.plast
    6c30:	ldr	x0, [sp, #56]
    6c34:	cbz	x0, 6c3c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>
    6c38:	bl	0 <_ZdaPv>
    6c3c:	mov	x0, x20
    6c40:	ldp	x19, x20, [sp, #16]
    6c44:	ldp	x21, x22, [sp, #32]
    6c48:	ldp	x29, x30, [sp], #96
    6c4c:	ret
    6c50:	ldr	x0, [x1, #16]
    6c54:	ldr	x0, [x0]
    6c58:	ldrb	w0, [x0, #8]
    6c5c:	cmp	w0, #0x2
    6c60:	b.ne	6d04 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    6c64:	ldrb	w0, [x19, #8]
    6c68:	cmp	w0, #0x10
    6c6c:	b.ne	6c7c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.any
    6c70:	ldr	x0, [x19, #16]
    6c74:	ldr	x0, [x0]
    6c78:	ldrb	w0, [x0, #8]
    6c7c:	cmp	w0, #0x3
    6c80:	b.ne	6d04 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    6c84:	ldp	x2, x19, [sp, #72]
    6c88:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6c8c:	movk	x1, #0xaaab
    6c90:	mov	x0, x22
    6c94:	sub	x19, x19, x2
    6c98:	asr	x19, x19, #4
    6c9c:	mul	x19, x19, x1
    6ca0:	mov	w1, w19
    6ca4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ca8:	cbz	w19, 6bf0 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    6cac:	sub	w1, w19, #0x1
    6cb0:	mov	x0, #0x0                   	// #0
    6cb4:	add	x1, x1, #0x1
    6cb8:	add	x1, x1, x1, lsl #1
    6cbc:	lsl	x1, x1, #4
    6cc0:	ldr	x3, [sp, #72]
    6cc4:	ldr	x2, [x20, #24]
    6cc8:	ldr	s0, [x3, x0]
    6ccc:	fcvt	d0, s0
    6cd0:	str	d0, [x2, x0]
    6cd4:	add	x0, x0, #0x30
    6cd8:	cmp	x1, x0
    6cdc:	b.ne	6cc0 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.any
    6ce0:	b	6bf0 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    6ce4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ce8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6cec:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6cf0:	add	x3, x3, #0x0
    6cf4:	add	x1, x1, #0x0
    6cf8:	add	x0, x0, #0x0
    6cfc:	mov	w2, #0x558                 	// #1368
    6d00:	bl	0 <__assert_fail>
    6d04:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d08:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d0c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d10:	add	x3, x3, #0x0
    6d14:	add	x1, x1, #0x0
    6d18:	add	x0, x0, #0x0
    6d1c:	mov	w2, #0x54f                 	// #1359
    6d20:	bl	0 <__assert_fail>
    6d24:	nop

0000000000006d28 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    6d28:	stp	x29, x30, [sp, #-160]!
    6d2c:	mov	w4, #0x1                   	// #1
    6d30:	mov	x29, sp
    6d34:	stp	x21, x22, [sp, #32]
    6d38:	add	x22, x8, #0x18
    6d3c:	mov	x21, x8
    6d40:	stp	x19, x20, [sp, #16]
    6d44:	mov	x19, x8
    6d48:	mov	x20, x2
    6d4c:	stp	x23, x24, [sp, #48]
    6d50:	add	x24, sp, #0x70
    6d54:	mov	x2, x3
    6d58:	ldr	x23, [x1]
    6d5c:	str	xzr, [x8, #24]
    6d60:	stp	xzr, xzr, [x22, #8]
    6d64:	str	xzr, [x19], #8
    6d68:	str	xzr, [x8, #8]
    6d6c:	mov	x8, x24
    6d70:	str	w4, [x19, #8]
    6d74:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6d78:	ldrb	w1, [x23, #8]
    6d7c:	cmp	w1, #0x10
    6d80:	b.ne	6e78 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>  // b.any
    6d84:	ldr	x1, [x23, #16]
    6d88:	stp	x25, x26, [sp, #64]
    6d8c:	ldrb	w0, [x20, #8]
    6d90:	cmp	w0, #0x10
    6d94:	ldr	x25, [x1]
    6d98:	b.eq	6efc <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d4>  // b.none
    6d9c:	cmp	w0, #0xb
    6da0:	b.ne	7020 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.any
    6da4:	ldp	x2, x19, [sp, #136]
    6da8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6dac:	movk	x1, #0xaaab
    6db0:	ldr	w23, [x20, #8]
    6db4:	mov	x0, x22
    6db8:	lsr	w23, w23, #8
    6dbc:	sub	x19, x19, x2
    6dc0:	asr	x19, x19, #4
    6dc4:	mul	x19, x19, x1
    6dc8:	mov	w1, w19
    6dcc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6dd0:	ldrb	w0, [x25, #8]
    6dd4:	cmp	w0, #0x2
    6dd8:	b.eq	6f10 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    6ddc:	cbz	w19, 6e54 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    6de0:	sub	w19, w19, #0x1
    6de4:	add	x26, sp, #0x60
    6de8:	add	x22, x19, #0x1
    6dec:	mov	x20, #0x0                   	// #0
    6df0:	add	x22, x22, x22, lsl #1
    6df4:	lsl	x22, x22, #4
    6df8:	ldr	x1, [sp, #136]
    6dfc:	mov	x8, x26
    6e00:	ldr	x19, [x21, #24]
    6e04:	mov	w0, w23
    6e08:	ldr	d0, [x1, x20]
    6e0c:	add	x19, x19, x20
    6e10:	add	x25, x19, #0x8
    6e14:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    6e18:	cmp	x26, x25
    6e1c:	b.eq	6ff4 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    6e20:	ldr	w0, [x19, #16]
    6e24:	cmp	w0, #0x40
    6e28:	b.ls	6e38 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    6e2c:	ldr	x0, [x19, #8]
    6e30:	cbz	x0, 6e38 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    6e34:	bl	0 <_ZdaPv>
    6e38:	ldr	x0, [sp, #96]
    6e3c:	str	x0, [x19, #8]
    6e40:	add	x20, x20, #0x30
    6e44:	ldr	w0, [sp, #104]
    6e48:	cmp	x22, x20
    6e4c:	str	w0, [x25, #8]
    6e50:	b.ne	6df8 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    6e54:	ldp	x25, x26, [sp, #64]
    6e58:	mov	x0, x24
    6e5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e60:	mov	x0, x21
    6e64:	ldp	x19, x20, [sp, #16]
    6e68:	ldp	x21, x22, [sp, #32]
    6e6c:	ldp	x23, x24, [sp, #48]
    6e70:	ldp	x29, x30, [sp], #160
    6e74:	ret
    6e78:	cbz	x20, 7014 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ec>
    6e7c:	ldrb	w0, [x20, #8]
    6e80:	cmp	w0, #0xb
    6e84:	b.ne	701c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f4>  // b.any
    6e88:	ldr	w0, [x20, #8]
    6e8c:	sub	w2, w1, #0x1
    6e90:	and	w2, w2, #0xff
    6e94:	cmp	w2, #0x5
    6e98:	lsr	w0, w0, #8
    6e9c:	b.hi	6fd0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>  // b.pmore
    6ea0:	cmp	w1, #0x2
    6ea4:	b.eq	6f94 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x26c>  // b.none
    6ea8:	ldr	d0, [sp, #112]
    6eac:	add	x8, sp, #0x60
    6eb0:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    6eb4:	ldr	w0, [x21, #16]
    6eb8:	cmp	w0, #0x40
    6ebc:	b.ls	6ecc <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>  // b.plast
    6ec0:	ldr	x0, [x21, #8]
    6ec4:	cbz	x0, 6ecc <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>
    6ec8:	bl	0 <_ZdaPv>
    6ecc:	ldr	x0, [sp, #96]
    6ed0:	str	x0, [x21, #8]
    6ed4:	ldr	w0, [sp, #104]
    6ed8:	str	w0, [x19, #8]
    6edc:	mov	x0, x24
    6ee0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ee4:	mov	x0, x21
    6ee8:	ldp	x19, x20, [sp, #16]
    6eec:	ldp	x21, x22, [sp, #32]
    6ef0:	ldp	x23, x24, [sp, #48]
    6ef4:	ldp	x29, x30, [sp], #160
    6ef8:	ret
    6efc:	ldr	x0, [x20, #16]
    6f00:	ldr	x20, [x0]
    6f04:	cbz	x20, 7018 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f0>
    6f08:	ldrb	w0, [x20, #8]
    6f0c:	b	6d9c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x74>
    6f10:	cbz	w19, 6e54 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    6f14:	sub	w19, w19, #0x1
    6f18:	add	x26, sp, #0x50
    6f1c:	add	x20, x19, #0x1
    6f20:	mov	x22, #0x0                   	// #0
    6f24:	add	x20, x20, x20, lsl #1
    6f28:	lsl	x20, x20, #4
    6f2c:	nop
    6f30:	ldr	x1, [sp, #136]
    6f34:	mov	x8, x26
    6f38:	ldr	x19, [x21, #24]
    6f3c:	mov	w0, w23
    6f40:	ldr	s0, [x1, x22]
    6f44:	add	x19, x19, x22
    6f48:	add	x25, x19, #0x8
    6f4c:	fcvt	d0, s0
    6f50:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    6f54:	cmp	x26, x25
    6f58:	b.eq	6ff4 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    6f5c:	ldr	w0, [x19, #16]
    6f60:	cmp	w0, #0x40
    6f64:	b.ls	6f74 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>  // b.plast
    6f68:	ldr	x0, [x19, #8]
    6f6c:	cbz	x0, 6f74 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>
    6f70:	bl	0 <_ZdaPv>
    6f74:	ldr	x0, [sp, #80]
    6f78:	str	x0, [x19, #8]
    6f7c:	add	x22, x22, #0x30
    6f80:	ldr	w0, [sp, #88]
    6f84:	cmp	x20, x22
    6f88:	str	w0, [x25, #8]
    6f8c:	b.ne	6f30 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.any
    6f90:	b	6e54 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    6f94:	ldr	s0, [sp, #112]
    6f98:	add	x20, sp, #0x60
    6f9c:	mov	x8, x20
    6fa0:	fcvt	d0, s0
    6fa4:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    6fa8:	mov	x1, x20
    6fac:	mov	x0, x19
    6fb0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6fb4:	ldr	w0, [sp, #104]
    6fb8:	cmp	w0, #0x40
    6fbc:	b.ls	6e58 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.plast
    6fc0:	ldr	x0, [sp, #96]
    6fc4:	cbz	x0, 6e58 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    6fc8:	bl	0 <_ZdaPv>
    6fcc:	b	6e58 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    6fd0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6fd4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6fd8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6fdc:	add	x3, x3, #0x0
    6fe0:	add	x1, x1, #0x0
    6fe4:	add	x0, x0, #0x0
    6fe8:	mov	w2, #0x57a                 	// #1402
    6fec:	stp	x25, x26, [sp, #64]
    6ff0:	bl	0 <__assert_fail>
    6ff4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ff8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ffc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7000:	add	x3, x3, #0x0
    7004:	add	x1, x1, #0x0
    7008:	add	x0, x0, #0x0
    700c:	mov	w2, #0x302                 	// #770
    7010:	bl	0 <__assert_fail>
    7014:	stp	x25, x26, [sp, #64]
    7018:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    701c:	stp	x25, x26, [sp, #64]
    7020:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7024:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7028:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    702c:	add	x3, x3, #0x0
    7030:	add	x1, x1, #0x0
    7034:	add	x0, x0, #0x0
    7038:	mov	w2, #0x108                 	// #264
    703c:	bl	0 <__assert_fail>

0000000000007040 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7040:	stp	x29, x30, [sp, #-160]!
    7044:	mov	w4, #0x1                   	// #1
    7048:	mov	x29, sp
    704c:	stp	x21, x22, [sp, #32]
    7050:	add	x22, x8, #0x18
    7054:	mov	x21, x8
    7058:	stp	x19, x20, [sp, #16]
    705c:	mov	x19, x8
    7060:	mov	x20, x2
    7064:	stp	x23, x24, [sp, #48]
    7068:	add	x24, sp, #0x70
    706c:	mov	x2, x3
    7070:	ldr	x23, [x1]
    7074:	str	xzr, [x8, #24]
    7078:	stp	xzr, xzr, [x22, #8]
    707c:	str	xzr, [x19], #8
    7080:	str	xzr, [x8, #8]
    7084:	mov	x8, x24
    7088:	str	w4, [x19, #8]
    708c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7090:	ldrb	w1, [x23, #8]
    7094:	cmp	w1, #0x10
    7098:	b.ne	7190 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>  // b.any
    709c:	ldr	x1, [x23, #16]
    70a0:	stp	x25, x26, [sp, #64]
    70a4:	ldrb	w0, [x20, #8]
    70a8:	cmp	w0, #0x10
    70ac:	ldr	x25, [x1]
    70b0:	b.eq	7214 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d4>  // b.none
    70b4:	cmp	w0, #0xb
    70b8:	b.ne	7338 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.any
    70bc:	ldp	x2, x19, [sp, #136]
    70c0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    70c4:	movk	x1, #0xaaab
    70c8:	ldr	w23, [x20, #8]
    70cc:	mov	x0, x22
    70d0:	lsr	w23, w23, #8
    70d4:	sub	x19, x19, x2
    70d8:	asr	x19, x19, #4
    70dc:	mul	x19, x19, x1
    70e0:	mov	w1, w19
    70e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    70e8:	ldrb	w0, [x25, #8]
    70ec:	cmp	w0, #0x2
    70f0:	b.eq	7228 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    70f4:	cbz	w19, 716c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    70f8:	sub	w19, w19, #0x1
    70fc:	add	x26, sp, #0x60
    7100:	add	x22, x19, #0x1
    7104:	mov	x20, #0x0                   	// #0
    7108:	add	x22, x22, x22, lsl #1
    710c:	lsl	x22, x22, #4
    7110:	ldr	x1, [sp, #136]
    7114:	mov	x8, x26
    7118:	ldr	x19, [x21, #24]
    711c:	mov	w0, w23
    7120:	ldr	d0, [x1, x20]
    7124:	add	x19, x19, x20
    7128:	add	x25, x19, #0x8
    712c:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    7130:	cmp	x26, x25
    7134:	b.eq	730c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    7138:	ldr	w0, [x19, #16]
    713c:	cmp	w0, #0x40
    7140:	b.ls	7150 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    7144:	ldr	x0, [x19, #8]
    7148:	cbz	x0, 7150 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    714c:	bl	0 <_ZdaPv>
    7150:	ldr	x0, [sp, #96]
    7154:	str	x0, [x19, #8]
    7158:	add	x20, x20, #0x30
    715c:	ldr	w0, [sp, #104]
    7160:	cmp	x22, x20
    7164:	str	w0, [x25, #8]
    7168:	b.ne	7110 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    716c:	ldp	x25, x26, [sp, #64]
    7170:	mov	x0, x24
    7174:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7178:	mov	x0, x21
    717c:	ldp	x19, x20, [sp, #16]
    7180:	ldp	x21, x22, [sp, #32]
    7184:	ldp	x23, x24, [sp, #48]
    7188:	ldp	x29, x30, [sp], #160
    718c:	ret
    7190:	cbz	x20, 732c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ec>
    7194:	ldrb	w0, [x20, #8]
    7198:	cmp	w0, #0xb
    719c:	b.ne	7334 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f4>  // b.any
    71a0:	ldr	w0, [x20, #8]
    71a4:	sub	w2, w1, #0x1
    71a8:	and	w2, w2, #0xff
    71ac:	cmp	w2, #0x5
    71b0:	lsr	w0, w0, #8
    71b4:	b.hi	72e8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>  // b.pmore
    71b8:	cmp	w1, #0x2
    71bc:	b.eq	72ac <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x26c>  // b.none
    71c0:	ldr	d0, [sp, #112]
    71c4:	add	x8, sp, #0x60
    71c8:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    71cc:	ldr	w0, [x21, #16]
    71d0:	cmp	w0, #0x40
    71d4:	b.ls	71e4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>  // b.plast
    71d8:	ldr	x0, [x21, #8]
    71dc:	cbz	x0, 71e4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>
    71e0:	bl	0 <_ZdaPv>
    71e4:	ldr	x0, [sp, #96]
    71e8:	str	x0, [x21, #8]
    71ec:	ldr	w0, [sp, #104]
    71f0:	str	w0, [x19, #8]
    71f4:	mov	x0, x24
    71f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    71fc:	mov	x0, x21
    7200:	ldp	x19, x20, [sp, #16]
    7204:	ldp	x21, x22, [sp, #32]
    7208:	ldp	x23, x24, [sp, #48]
    720c:	ldp	x29, x30, [sp], #160
    7210:	ret
    7214:	ldr	x0, [x20, #16]
    7218:	ldr	x20, [x0]
    721c:	cbz	x20, 7330 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f0>
    7220:	ldrb	w0, [x20, #8]
    7224:	b	70b4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x74>
    7228:	cbz	w19, 716c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    722c:	sub	w19, w19, #0x1
    7230:	add	x26, sp, #0x50
    7234:	add	x20, x19, #0x1
    7238:	mov	x22, #0x0                   	// #0
    723c:	add	x20, x20, x20, lsl #1
    7240:	lsl	x20, x20, #4
    7244:	nop
    7248:	ldr	x1, [sp, #136]
    724c:	mov	x8, x26
    7250:	ldr	x19, [x21, #24]
    7254:	mov	w0, w23
    7258:	ldr	s0, [x1, x22]
    725c:	add	x19, x19, x22
    7260:	add	x25, x19, #0x8
    7264:	fcvt	d0, s0
    7268:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    726c:	cmp	x26, x25
    7270:	b.eq	730c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    7274:	ldr	w0, [x19, #16]
    7278:	cmp	w0, #0x40
    727c:	b.ls	728c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>  // b.plast
    7280:	ldr	x0, [x19, #8]
    7284:	cbz	x0, 728c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>
    7288:	bl	0 <_ZdaPv>
    728c:	ldr	x0, [sp, #80]
    7290:	str	x0, [x19, #8]
    7294:	add	x22, x22, #0x30
    7298:	ldr	w0, [sp, #88]
    729c:	cmp	x20, x22
    72a0:	str	w0, [x25, #8]
    72a4:	b.ne	7248 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.any
    72a8:	b	716c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    72ac:	ldr	s0, [sp, #112]
    72b0:	add	x20, sp, #0x60
    72b4:	mov	x8, x20
    72b8:	fcvt	d0, s0
    72bc:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    72c0:	mov	x1, x20
    72c4:	mov	x0, x19
    72c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    72cc:	ldr	w0, [sp, #104]
    72d0:	cmp	w0, #0x40
    72d4:	b.ls	7170 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.plast
    72d8:	ldr	x0, [sp, #96]
    72dc:	cbz	x0, 7170 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    72e0:	bl	0 <_ZdaPv>
    72e4:	b	7170 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    72e8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    72ec:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    72f0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    72f4:	add	x3, x3, #0x0
    72f8:	add	x1, x1, #0x0
    72fc:	add	x0, x0, #0x0
    7300:	mov	w2, #0x5a0                 	// #1440
    7304:	stp	x25, x26, [sp, #64]
    7308:	bl	0 <__assert_fail>
    730c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7310:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7314:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7318:	add	x3, x3, #0x0
    731c:	add	x1, x1, #0x0
    7320:	add	x0, x0, #0x0
    7324:	mov	w2, #0x302                 	// #770
    7328:	bl	0 <__assert_fail>
    732c:	stp	x25, x26, [sp, #64]
    7330:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    7334:	stp	x25, x26, [sp, #64]
    7338:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    733c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7340:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7344:	add	x3, x3, #0x0
    7348:	add	x1, x1, #0x0
    734c:	add	x0, x0, #0x0
    7350:	mov	w2, #0x108                 	// #264
    7354:	bl	0 <__assert_fail>

0000000000007358 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7358:	stp	x29, x30, [sp, #-112]!
    735c:	mov	x4, x8
    7360:	mov	w5, #0x1                   	// #1
    7364:	mov	x29, sp
    7368:	stp	x21, x22, [sp, #32]
    736c:	add	x22, x8, #0x18
    7370:	mov	x21, x2
    7374:	stp	x19, x20, [sp, #16]
    7378:	mov	x20, x1
    737c:	mov	x19, x8
    7380:	str	x23, [sp, #48]
    7384:	add	x23, sp, #0x40
    7388:	str	xzr, [x8, #24]
    738c:	mov	x2, x3
    7390:	stp	xzr, xzr, [x22, #8]
    7394:	str	xzr, [x4], #8
    7398:	str	xzr, [x8, #8]
    739c:	mov	x8, x23
    73a0:	str	w5, [x4, #8]
    73a4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    73a8:	ldr	x0, [x20]
    73ac:	ldrb	w0, [x0, #8]
    73b0:	cmp	w0, #0x10
    73b4:	ldrb	w0, [x21, #8]
    73b8:	b.eq	7468 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.none
    73bc:	cmp	w0, #0x1
    73c0:	b.eq	7454 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.none
    73c4:	sub	w1, w0, #0x2
    73c8:	and	w1, w1, #0xff
    73cc:	cmp	w1, #0x4
    73d0:	b.hi	7538 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>  // b.pmore
    73d4:	cmp	w0, #0x2
    73d8:	b.ne	7454 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.any
    73dc:	add	x0, x23, #0x8
    73e0:	mov	w1, #0x0                   	// #0
    73e4:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    73e8:	fcvt	s0, d0
    73ec:	str	s0, [x19]
    73f0:	ldp	x20, x21, [sp, #88]
    73f4:	cmp	x20, x21
    73f8:	b.eq	7418 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.none
    73fc:	nop
    7400:	mov	x0, x20
    7404:	add	x20, x20, #0x30
    7408:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    740c:	cmp	x21, x20
    7410:	b.ne	7400 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.any
    7414:	ldr	x21, [sp, #88]
    7418:	cbz	x21, 7424 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    741c:	mov	x0, x21
    7420:	bl	0 <_ZdlPv>
    7424:	ldr	w0, [sp, #80]
    7428:	cmp	w0, #0x40
    742c:	b.ls	743c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>  // b.plast
    7430:	ldr	x0, [sp, #72]
    7434:	cbz	x0, 743c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>
    7438:	bl	0 <_ZdaPv>
    743c:	mov	x0, x19
    7440:	ldp	x19, x20, [sp, #16]
    7444:	ldp	x21, x22, [sp, #32]
    7448:	ldr	x23, [sp, #48]
    744c:	ldp	x29, x30, [sp], #112
    7450:	ret
    7454:	add	x0, x23, #0x8
    7458:	mov	w1, #0x0                   	// #0
    745c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7460:	str	d0, [x19]
    7464:	b	73f0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    7468:	cmp	w0, #0x10
    746c:	b.ne	7478 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.any
    7470:	ldr	x0, [x21, #16]
    7474:	ldr	x21, [x0]
    7478:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    747c:	ldp	x2, x20, [sp, #88]
    7480:	movk	x1, #0xaaab
    7484:	mov	x0, x22
    7488:	sub	x20, x20, x2
    748c:	asr	x20, x20, #4
    7490:	mul	x20, x20, x1
    7494:	mov	w1, w20
    7498:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    749c:	ldrb	w0, [x21, #8]
    74a0:	cmp	w0, #0x2
    74a4:	b.eq	74ec <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.none
    74a8:	cbz	w20, 73f0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    74ac:	sub	w21, w20, #0x1
    74b0:	mov	x20, #0x0                   	// #0
    74b4:	add	x21, x21, #0x1
    74b8:	add	x21, x21, x21, lsl #1
    74bc:	lsl	x21, x21, #4
    74c0:	ldr	x22, [x19, #24]
    74c4:	mov	w1, #0x0                   	// #0
    74c8:	ldr	x0, [sp, #88]
    74cc:	add	x0, x0, x20
    74d0:	add	x0, x0, #0x8
    74d4:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    74d8:	str	d0, [x22, x20]
    74dc:	add	x20, x20, #0x30
    74e0:	cmp	x21, x20
    74e4:	b.ne	74c0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x168>  // b.any
    74e8:	b	73f0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    74ec:	cbz	w20, 73f0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    74f0:	sub	w20, w20, #0x1
    74f4:	mov	x21, #0x0                   	// #0
    74f8:	add	x20, x20, #0x1
    74fc:	add	x20, x20, x20, lsl #1
    7500:	lsl	x20, x20, #4
    7504:	nop
    7508:	ldr	x0, [sp, #88]
    750c:	mov	w1, #0x0                   	// #0
    7510:	ldr	x22, [x19, #24]
    7514:	add	x0, x0, x21
    7518:	add	x0, x0, #0x8
    751c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7520:	fcvt	s0, d0
    7524:	str	s0, [x22, x21]
    7528:	add	x21, x21, #0x30
    752c:	cmp	x20, x21
    7530:	b.ne	7508 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b0>  // b.any
    7534:	b	73f0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    7538:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    753c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7540:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7544:	add	x3, x3, #0x0
    7548:	add	x1, x1, #0x0
    754c:	add	x0, x0, #0x0
    7550:	mov	w2, #0x5c1                 	// #1473
    7554:	bl	0 <__assert_fail>

0000000000007558 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7558:	stp	x29, x30, [sp, #-112]!
    755c:	mov	x4, x8
    7560:	mov	x29, sp
    7564:	stp	x21, x22, [sp, #32]
    7568:	add	x22, x8, #0x18
    756c:	mov	x21, x2
    7570:	stp	x19, x20, [sp, #16]
    7574:	mov	x20, x1
    7578:	mov	x19, x8
    757c:	stp	x23, x24, [sp, #48]
    7580:	mov	w24, #0x1                   	// #1
    7584:	add	x23, sp, #0x40
    7588:	str	xzr, [x8, #24]
    758c:	mov	x2, x3
    7590:	stp	xzr, xzr, [x22, #8]
    7594:	str	xzr, [x4], #8
    7598:	str	xzr, [x8, #8]
    759c:	mov	x8, x23
    75a0:	str	w24, [x4, #8]
    75a4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    75a8:	ldr	x0, [x20]
    75ac:	ldrb	w0, [x0, #8]
    75b0:	cmp	w0, #0x10
    75b4:	ldrb	w0, [x21, #8]
    75b8:	b.eq	7668 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.none
    75bc:	cmp	w0, #0x1
    75c0:	b.eq	7654 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.none
    75c4:	sub	w1, w0, #0x2
    75c8:	and	w1, w1, #0xff
    75cc:	cmp	w1, #0x4
    75d0:	b.hi	7738 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>  // b.pmore
    75d4:	cmp	w0, #0x2
    75d8:	b.ne	7654 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.any
    75dc:	mov	w1, w24
    75e0:	add	x0, x23, #0x8
    75e4:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    75e8:	fcvt	s0, d0
    75ec:	str	s0, [x19]
    75f0:	ldp	x20, x21, [sp, #88]
    75f4:	cmp	x20, x21
    75f8:	b.eq	7618 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.none
    75fc:	nop
    7600:	mov	x0, x20
    7604:	add	x20, x20, #0x30
    7608:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    760c:	cmp	x21, x20
    7610:	b.ne	7600 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.any
    7614:	ldr	x21, [sp, #88]
    7618:	cbz	x21, 7624 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    761c:	mov	x0, x21
    7620:	bl	0 <_ZdlPv>
    7624:	ldr	w0, [sp, #80]
    7628:	cmp	w0, #0x40
    762c:	b.ls	763c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>  // b.plast
    7630:	ldr	x0, [sp, #72]
    7634:	cbz	x0, 763c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>
    7638:	bl	0 <_ZdaPv>
    763c:	mov	x0, x19
    7640:	ldp	x19, x20, [sp, #16]
    7644:	ldp	x21, x22, [sp, #32]
    7648:	ldp	x23, x24, [sp, #48]
    764c:	ldp	x29, x30, [sp], #112
    7650:	ret
    7654:	add	x0, x23, #0x8
    7658:	mov	w1, #0x1                   	// #1
    765c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7660:	str	d0, [x19]
    7664:	b	75f0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    7668:	cmp	w0, #0x10
    766c:	b.ne	7678 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.any
    7670:	ldr	x0, [x21, #16]
    7674:	ldr	x21, [x0]
    7678:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    767c:	ldp	x2, x20, [sp, #88]
    7680:	movk	x1, #0xaaab
    7684:	mov	x0, x22
    7688:	sub	x20, x20, x2
    768c:	asr	x20, x20, #4
    7690:	mul	x20, x20, x1
    7694:	mov	w1, w20
    7698:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    769c:	ldrb	w0, [x21, #8]
    76a0:	cmp	w0, #0x2
    76a4:	b.eq	76ec <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.none
    76a8:	cbz	w20, 75f0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    76ac:	sub	w21, w20, #0x1
    76b0:	mov	x20, #0x0                   	// #0
    76b4:	add	x21, x21, #0x1
    76b8:	add	x21, x21, x21, lsl #1
    76bc:	lsl	x21, x21, #4
    76c0:	ldr	x22, [x19, #24]
    76c4:	mov	w1, #0x1                   	// #1
    76c8:	ldr	x0, [sp, #88]
    76cc:	add	x0, x0, x20
    76d0:	add	x0, x0, #0x8
    76d4:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    76d8:	str	d0, [x22, x20]
    76dc:	add	x20, x20, #0x30
    76e0:	cmp	x21, x20
    76e4:	b.ne	76c0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x168>  // b.any
    76e8:	b	75f0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    76ec:	cbz	w20, 75f0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    76f0:	sub	w20, w20, #0x1
    76f4:	mov	x21, #0x0                   	// #0
    76f8:	add	x20, x20, #0x1
    76fc:	add	x20, x20, x20, lsl #1
    7700:	lsl	x20, x20, #4
    7704:	nop
    7708:	ldr	x0, [sp, #88]
    770c:	mov	w1, #0x1                   	// #1
    7710:	ldr	x22, [x19, #24]
    7714:	add	x0, x0, x21
    7718:	add	x0, x0, #0x8
    771c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7720:	fcvt	s0, d0
    7724:	str	s0, [x22, x21]
    7728:	add	x21, x21, #0x30
    772c:	cmp	x20, x21
    7730:	b.ne	7708 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b0>  // b.any
    7734:	b	75f0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    7738:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    773c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7740:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7744:	add	x3, x3, #0x0
    7748:	add	x1, x1, #0x0
    774c:	add	x0, x0, #0x0
    7750:	mov	w2, #0x5e1                 	// #1505
    7754:	bl	0 <__assert_fail>

0000000000007758 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7758:	stp	x29, x30, [sp, #-112]!
    775c:	mov	x4, x2
    7760:	mov	x29, sp
    7764:	stp	x19, x20, [sp, #16]
    7768:	stp	x21, x22, [sp, #32]
    776c:	cbz	x2, 78e8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>
    7770:	mov	x2, x3
    7774:	ldrb	w3, [x4, #8]
    7778:	cmp	w3, #0xb
    777c:	b.ne	78c8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.any
    7780:	mov	x19, x8
    7784:	mov	x21, x8
    7788:	ldr	w20, [x4, #8]
    778c:	mov	x22, x1
    7790:	mov	w4, #0x1                   	// #1
    7794:	add	x8, sp, #0x40
    7798:	stp	xzr, xzr, [x19, #24]
    779c:	lsr	w20, w20, #8
    77a0:	str	xzr, [x19, #40]
    77a4:	str	xzr, [x21], #8
    77a8:	str	xzr, [x19, #8]
    77ac:	str	w4, [x21, #8]
    77b0:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    77b4:	ldr	x0, [x22]
    77b8:	ldrb	w0, [x0, #8]
    77bc:	cmp	w0, #0xf
    77c0:	b.ne	78a8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>  // b.any
    77c4:	str	w20, [sp, #56]
    77c8:	ldr	x1, [sp, #64]
    77cc:	cbz	w20, 7888 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    77d0:	cmp	w20, #0x40
    77d4:	b.ls	7870 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x118>  // b.plast
    77d8:	add	x0, sp, #0x30
    77dc:	mov	w2, #0x0                   	// #0
    77e0:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    77e4:	ldr	w0, [x19, #16]
    77e8:	cmp	w0, #0x40
    77ec:	b.ls	77fc <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>  // b.plast
    77f0:	ldr	x0, [x19, #8]
    77f4:	cbz	x0, 77fc <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>
    77f8:	bl	0 <_ZdaPv>
    77fc:	ldr	x0, [sp, #48]
    7800:	str	x0, [x19, #8]
    7804:	ldr	w0, [sp, #56]
    7808:	str	w0, [x21, #8]
    780c:	ldr	x20, [sp, #88]
    7810:	ldr	x21, [sp, #96]
    7814:	cmp	x20, x21
    7818:	b.eq	7838 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe0>  // b.none
    781c:	nop
    7820:	mov	x0, x20
    7824:	add	x20, x20, #0x30
    7828:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    782c:	cmp	x21, x20
    7830:	b.ne	7820 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc8>  // b.any
    7834:	ldr	x21, [sp, #88]
    7838:	cbz	x21, 7844 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xec>
    783c:	mov	x0, x21
    7840:	bl	0 <_ZdlPv>
    7844:	ldr	w0, [sp, #80]
    7848:	cmp	w0, #0x40
    784c:	b.ls	785c <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.plast
    7850:	ldr	x0, [sp, #72]
    7854:	cbz	x0, 785c <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>
    7858:	bl	0 <_ZdaPv>
    785c:	mov	x0, x19
    7860:	ldp	x19, x20, [sp, #16]
    7864:	ldp	x21, x22, [sp, #32]
    7868:	ldp	x29, x30, [sp], #112
    786c:	ret
    7870:	neg	w20, w20
    7874:	mov	x0, #0xffffffffffffffff    	// #-1
    7878:	lsr	x20, x0, x20
    787c:	and	x20, x20, x1
    7880:	str	x20, [sp, #48]
    7884:	b	77e4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8c>
    7888:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    788c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7890:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7894:	add	x3, x3, #0x0
    7898:	add	x1, x1, #0x0
    789c:	add	x0, x0, #0x0
    78a0:	mov	w2, #0x117                 	// #279
    78a4:	bl	0 <__assert_fail>
    78a8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78b0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78b4:	add	x3, x3, #0x0
    78b8:	add	x1, x1, #0x0
    78bc:	add	x0, x0, #0x0
    78c0:	mov	w2, #0x5f1                 	// #1521
    78c4:	bl	0 <__assert_fail>
    78c8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78d0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78d4:	add	x3, x3, #0x0
    78d8:	add	x1, x1, #0x0
    78dc:	add	x0, x0, #0x0
    78e0:	mov	w2, #0x108                 	// #264
    78e4:	bl	0 <__assert_fail>
    78e8:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    78ec:	nop

00000000000078f0 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    78f0:	stp	x29, x30, [sp, #-112]!
    78f4:	mov	x4, x8
    78f8:	mov	w6, #0x1                   	// #1
    78fc:	mov	x29, sp
    7900:	stp	x19, x20, [sp, #16]
    7904:	mov	x20, x2
    7908:	mov	x19, x8
    790c:	stp	x21, x22, [sp, #32]
    7910:	add	x22, sp, #0x40
    7914:	mov	x21, x0
    7918:	stp	xzr, xzr, [x8, #24]
    791c:	mov	x2, x3
    7920:	str	xzr, [x8, #40]
    7924:	str	xzr, [x4], #8
    7928:	str	xzr, [x8, #8]
    792c:	mov	x8, x22
    7930:	str	w6, [x4, #8]
    7934:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7938:	ldrb	w0, [x20, #8]
    793c:	cmp	w0, #0xf
    7940:	b.ne	7a30 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    7944:	mov	w1, #0x0                   	// #0
    7948:	add	x0, x21, #0x58
    794c:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
    7950:	lsl	w20, w0, #3
    7954:	ldr	w1, [sp, #80]
    7958:	cmp	w1, w0, lsl #3
    795c:	b.ne	79e8 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf8>  // b.any
    7960:	cmp	w20, #0x40
    7964:	b.ls	7a28 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x138>  // b.plast
    7968:	add	x0, x22, #0x8
    796c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    7970:	sub	w20, w20, w0
    7974:	cmp	w20, #0x40
    7978:	b.hi	7a50 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>  // b.pmore
    797c:	ldr	x0, [sp, #72]
    7980:	ldr	x0, [x0]
    7984:	str	x0, [x19]
    7988:	ldp	x20, x21, [sp, #88]
    798c:	cmp	x20, x21
    7990:	b.eq	79b0 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.none
    7994:	nop
    7998:	mov	x0, x20
    799c:	add	x20, x20, #0x30
    79a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    79a4:	cmp	x21, x20
    79a8:	b.ne	7998 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.any
    79ac:	ldr	x21, [sp, #88]
    79b0:	cbz	x21, 79bc <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    79b4:	mov	x0, x21
    79b8:	bl	0 <_ZdlPv>
    79bc:	ldr	w0, [sp, #80]
    79c0:	cmp	w0, #0x40
    79c4:	b.ls	79d4 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>  // b.plast
    79c8:	ldr	x0, [sp, #72]
    79cc:	cbz	x0, 79d4 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>
    79d0:	bl	0 <_ZdaPv>
    79d4:	mov	x0, x19
    79d8:	ldp	x19, x20, [sp, #16]
    79dc:	ldp	x21, x22, [sp, #32]
    79e0:	ldp	x29, x30, [sp], #112
    79e4:	ret
    79e8:	add	x0, x22, #0x8
    79ec:	mov	w1, w20
    79f0:	add	x8, sp, #0x30
    79f4:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
    79f8:	ldr	w0, [sp, #80]
    79fc:	cmp	w0, #0x40
    7a00:	b.ls	7a10 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.plast
    7a04:	ldr	x0, [sp, #72]
    7a08:	cbz	x0, 7a10 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>
    7a0c:	bl	0 <_ZdaPv>
    7a10:	ldr	w20, [sp, #56]
    7a14:	ldr	x0, [sp, #48]
    7a18:	str	x0, [sp, #72]
    7a1c:	str	w20, [sp, #80]
    7a20:	cmp	w20, #0x40
    7a24:	b.hi	7968 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>  // b.pmore
    7a28:	ldr	x0, [sp, #72]
    7a2c:	b	7984 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x94>
    7a30:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a34:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a38:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a3c:	add	x3, x3, #0x0
    7a40:	add	x1, x1, #0x0
    7a44:	add	x0, x0, #0x0
    7a48:	mov	w2, #0x5fa                 	// #1530
    7a4c:	bl	0 <__assert_fail>
    7a50:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a54:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a58:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a5c:	add	x3, x3, #0x0
    7a60:	add	x1, x1, #0x0
    7a64:	add	x0, x0, #0x0
    7a68:	mov	w2, #0x657                 	// #1623
    7a6c:	bl	0 <__assert_fail>

0000000000007a70 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7a70:	stp	x29, x30, [sp, #-496]!
    7a74:	add	x6, x8, #0x18
    7a78:	add	x7, x8, #0x8
    7a7c:	mov	x29, sp
    7a80:	stp	x19, x20, [sp, #16]
    7a84:	mov	w4, #0x1                   	// #1
    7a88:	mov	x19, x0
    7a8c:	stp	x21, x22, [sp, #32]
    7a90:	mov	x21, x2
    7a94:	ldr	x20, [x1]
    7a98:	stp	xzr, xzr, [x8]
    7a9c:	str	w4, [x8, #16]
    7aa0:	stp	xzr, xzr, [x8, #24]
    7aa4:	str	xzr, [x8, #40]
    7aa8:	str	x8, [sp, #152]
    7aac:	add	x8, sp, #0x100
    7ab0:	str	x8, [sp, #160]
    7ab4:	str	x2, [sp, #168]
    7ab8:	mov	x2, x3
    7abc:	stp	x7, x6, [sp, #184]
    7ac0:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7ac4:	ldrb	w0, [x20, #8]
    7ac8:	cmp	w0, #0x10
    7acc:	b.eq	7b14 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>  // b.none
    7ad0:	ldrb	w1, [x21, #8]
    7ad4:	cmp	w1, #0x10
    7ad8:	b.eq	7b14 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>  // b.none
    7adc:	cmp	w1, #0xf
    7ae0:	b.eq	819c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x72c>  // b.none
    7ae4:	cmp	w1, #0xb
    7ae8:	b.eq	846c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9fc>  // b.none
    7aec:	cmp	w1, #0x2
    7af0:	b.eq	81f4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x784>  // b.none
    7af4:	cmp	w1, #0x3
    7af8:	b.ne	879c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd2c>  // b.any
    7afc:	cmp	w0, #0xb
    7b00:	b.eq	8570 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb00>  // b.none
    7b04:	ldr	x0, [sp, #152]
    7b08:	ldr	d0, [sp, #256]
    7b0c:	str	d0, [x0]
    7b10:	b	816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>
    7b14:	mov	w21, #0x1                   	// #1
    7b18:	stp	x23, x24, [sp, #48]
    7b1c:	ldrb	w19, [x19, #88]
    7b20:	stp	x25, x26, [sp, #64]
    7b24:	cmp	w0, #0x10
    7b28:	stp	x27, x28, [sp, #80]
    7b2c:	stp	xzr, xzr, [sp, #304]
    7b30:	str	w21, [sp, #320]
    7b34:	stp	xzr, xzr, [sp, #328]
    7b38:	stp	xzr, xzr, [sp, #344]
    7b3c:	str	xzr, [sp, #360]
    7b40:	str	w21, [sp, #368]
    7b44:	stp	xzr, xzr, [sp, #376]
    7b48:	stp	xzr, xzr, [sp, #392]
    7b4c:	str	xzr, [sp, #408]
    7b50:	str	w21, [sp, #416]
    7b54:	stp	xzr, xzr, [sp, #424]
    7b58:	str	xzr, [sp, #440]
    7b5c:	b.eq	84fc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8c>  // b.none
    7b60:	mov	x0, x20
    7b64:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    7b68:	tst	w1, #0xff
    7b6c:	b.ne	8744 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcd4>  // b.any
    7b70:	ldr	x2, [sp, #160]
    7b74:	add	x1, sp, #0x190
    7b78:	mov	w22, w0
    7b7c:	add	x0, sp, #0x1a8
    7b80:	str	w21, [sp, #128]
    7b84:	str	x1, [sp, #216]
    7b88:	mov	x1, #0x0                   	// #0
    7b8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b90:	ldr	x0, [sp, #168]
    7b94:	ldrb	w0, [x0, #8]
    7b98:	cmp	w0, #0x10
    7b9c:	b.eq	83d8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x968>  // b.none
    7ba0:	ldr	x21, [sp, #168]
    7ba4:	mov	x0, x21
    7ba8:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    7bac:	tst	w1, #0xff
    7bb0:	b.ne	8744 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcd4>  // b.any
    7bb4:	ldr	w1, [sp, #128]
    7bb8:	mov	w27, w0
    7bbc:	mov	w2, #0x1                   	// #1
    7bc0:	str	w2, [sp, #140]
    7bc4:	str	x21, [sp, #200]
    7bc8:	mul	w1, w22, w1
    7bcc:	cmp	w0, w1
    7bd0:	b.ne	8748 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcd8>  // b.any
    7bd4:	ldr	w1, [sp, #128]
    7bd8:	add	x0, sp, #0x160
    7bdc:	str	x0, [sp, #208]
    7be0:	add	x0, sp, #0x178
    7be4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7be8:	ldrb	w0, [x20, #8]
    7bec:	cmp	w0, #0x2
    7bf0:	b.eq	8408 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x998>  // b.none
    7bf4:	cmp	w0, #0x3
    7bf8:	b.eq	8498 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa28>  // b.none
    7bfc:	cmp	w0, #0xb
    7c00:	b.ne	8760 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcf0>  // b.any
    7c04:	ldr	w0, [sp, #128]
    7c08:	cbz	w0, 80f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x688>
    7c0c:	sub	w0, w0, #0x1
    7c10:	mov	x21, #0x0                   	// #0
    7c14:	add	x0, x0, #0x1
    7c18:	add	x0, x0, x0, lsl #1
    7c1c:	lsl	x20, x0, #4
    7c20:	ldr	x2, [sp, #376]
    7c24:	ldr	x3, [sp, #424]
    7c28:	add	x2, x2, x21
    7c2c:	add	x0, x2, #0x8
    7c30:	add	x3, x3, x21
    7c34:	ldr	w4, [x2, #16]
    7c38:	add	x1, x3, #0x8
    7c3c:	cmp	w4, #0x40
    7c40:	b.hi	7c50 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>  // b.pmore
    7c44:	ldr	w4, [x3, #16]
    7c48:	cmp	w4, #0x40
    7c4c:	b.ls	8188 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x718>  // b.plast
    7c50:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    7c54:	add	x21, x21, #0x30
    7c58:	cmp	x20, x21
    7c5c:	b.ne	7c20 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b0>  // b.any
    7c60:	ldr	w0, [sp, #128]
    7c64:	ldr	w1, [sp, #140]
    7c68:	cmp	w0, w1
    7c6c:	b.ls	7e48 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3d8>  // b.plast
    7c70:	ldr	w1, [sp, #128]
    7c74:	ldr	w0, [sp, #140]
    7c78:	udiv	w1, w1, w0
    7c7c:	str	w1, [sp, #112]
    7c80:	cbz	w0, 80f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x688>
    7c84:	ldr	w0, [sp, #112]
    7c88:	cmp	w19, #0x0
    7c8c:	add	x1, sp, #0x1c0
    7c90:	add	x25, sp, #0xf0
    7c94:	sub	w0, w0, #0x1
    7c98:	add	x28, sp, #0x1c8
    7c9c:	add	x21, sp, #0xe0
    7ca0:	mov	w24, #0x0                   	// #0
    7ca4:	mov	w26, #0x1                   	// #1
    7ca8:	str	wzr, [sp, #116]
    7cac:	mul	w0, w0, w22
    7cb0:	str	x1, [sp, #120]
    7cb4:	add	x1, sp, #0x148
    7cb8:	str	x1, [sp, #128]
    7cbc:	csel	w0, w0, wzr, ne  // ne = any
    7cc0:	str	w0, [sp, #136]
    7cc4:	cneg	w0, w22, ne  // ne = any
    7cc8:	str	w0, [sp, #104]
    7ccc:	nop
    7cd0:	mov	x0, x28
    7cd4:	mov	x8, x25
    7cd8:	mov	w1, w27
    7cdc:	stp	xzr, xzr, [sp, #448]
    7ce0:	str	w26, [sp, #464]
    7ce4:	stp	xzr, xzr, [sp, #472]
    7ce8:	str	xzr, [sp, #488]
    7cec:	bl	0 <_ZNK4llvm5APInt4zextEj>
    7cf0:	ldr	w0, [sp, #464]
    7cf4:	cmp	w0, #0x40
    7cf8:	b.ls	7d08 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x298>  // b.plast
    7cfc:	ldr	x0, [sp, #456]
    7d00:	cbz	x0, 7d08 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x298>
    7d04:	bl	0 <_ZdaPv>
    7d08:	ldr	w20, [sp, #136]
    7d0c:	mov	w19, w24
    7d10:	ldr	w0, [sp, #248]
    7d14:	mov	w23, #0x0                   	// #0
    7d18:	ldr	x1, [sp, #240]
    7d1c:	str	x1, [sp, #456]
    7d20:	str	w0, [sp, #464]
    7d24:	nop
    7d28:	mov	x0, x21
    7d2c:	mov	x8, x25
    7d30:	mov	w1, w22
    7d34:	str	xzr, [sp, #224]
    7d38:	str	w26, [sp, #232]
    7d3c:	bl	0 <_ZNK4llvm5APInt4zextEj>
    7d40:	ldr	w0, [sp, #232]
    7d44:	cmp	w0, #0x40
    7d48:	b.ls	7d58 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e8>  // b.plast
    7d4c:	ldr	x0, [sp, #224]
    7d50:	cbz	x0, 7d58 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e8>
    7d54:	bl	0 <_ZdaPv>
    7d58:	ldr	x1, [sp, #240]
    7d5c:	str	x1, [sp, #224]
    7d60:	ldr	x0, [sp, #376]
    7d64:	mov	w1, #0x30                  	// #48
    7d68:	ldr	w2, [sp, #248]
    7d6c:	add	w24, w24, #0x1
    7d70:	str	w2, [sp, #232]
    7d74:	umaddl	x19, w19, w1, x0
    7d78:	cmp	w2, #0x40
    7d7c:	add	x1, x19, #0x8
    7d80:	b.hi	7d90 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x320>  // b.pmore
    7d84:	ldr	w0, [x19, #16]
    7d88:	cmp	w0, #0x40
    7d8c:	b.ls	82ec <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x87c>  // b.plast
    7d90:	mov	x0, x21
    7d94:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    7d98:	mov	x0, x21
    7d9c:	mov	x8, x25
    7da0:	mov	w1, w27
    7da4:	bl	0 <_ZNK4llvm5APInt4zextEj>
    7da8:	ldr	w0, [sp, #232]
    7dac:	cmp	w0, #0x40
    7db0:	b.ls	7dc0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x350>  // b.plast
    7db4:	ldr	x0, [sp, #224]
    7db8:	cbz	x0, 7dc0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x350>
    7dbc:	bl	0 <_ZdaPv>
    7dc0:	ldr	w0, [sp, #248]
    7dc4:	ldr	x2, [sp, #240]
    7dc8:	str	x2, [sp, #224]
    7dcc:	str	w0, [sp, #232]
    7dd0:	cmp	w0, w20
    7dd4:	b.cc	8720 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcb0>  // b.lo, b.ul, b.last
    7dd8:	cmp	w0, #0x40
    7ddc:	b.hi	82d8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x868>  // b.pmore
    7de0:	cmp	w0, w20
    7de4:	mov	x1, #0x0                   	// #0
    7de8:	b.eq	7e00 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x390>  // b.none
    7dec:	neg	w1, w0
    7df0:	mov	x3, #0xffffffffffffffff    	// #-1
    7df4:	lsl	x2, x2, x20
    7df8:	lsr	x1, x3, x1
    7dfc:	and	x1, x1, x2
    7e00:	str	x1, [sp, #224]
    7e04:	ldr	w2, [sp, #104]
    7e08:	ldr	w1, [sp, #464]
    7e0c:	add	w20, w20, w2
    7e10:	cmp	w0, w1
    7e14:	b.ne	8700 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc90>  // b.any
    7e18:	cmp	w0, #0x40
    7e1c:	b.hi	820c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x79c>  // b.pmore
    7e20:	ldr	x1, [sp, #224]
    7e24:	ldr	x0, [sp, #456]
    7e28:	orr	x0, x0, x1
    7e2c:	str	x0, [sp, #456]
    7e30:	ldr	w0, [sp, #112]
    7e34:	add	w23, w23, #0x1
    7e38:	cmp	w0, w23
    7e3c:	b.ls	8240 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7d0>  // b.plast
    7e40:	mov	w19, w24
    7e44:	b	7d28 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b8>
    7e48:	ldr	w1, [sp, #128]
    7e4c:	cmp	w19, #0x0
    7e50:	ldr	w0, [sp, #140]
    7e54:	str	xzr, [sp, #104]
    7e58:	str	w27, [sp, #112]
    7e5c:	str	wzr, [sp, #176]
    7e60:	udiv	w0, w0, w1
    7e64:	add	x1, sp, #0x148
    7e68:	str	x1, [sp, #144]
    7e6c:	str	w0, [sp, #136]
    7e70:	sub	w0, w0, #0x1
    7e74:	mul	w0, w0, w27
    7e78:	csel	w0, w0, wzr, ne  // ne = any
    7e7c:	str	w0, [sp, #180]
    7e80:	cneg	w0, w27, ne  // ne = any
    7e84:	str	w0, [sp, #120]
    7e88:	ldr	w0, [sp, #128]
    7e8c:	ldr	w1, [sp, #140]
    7e90:	cmp	w0, w1
    7e94:	b.hi	80d4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x664>  // b.pmore
    7e98:	ldr	w19, [sp, #180]
    7e9c:	add	x21, sp, #0x1c0
    7ea0:	add	x23, sp, #0xf0
    7ea4:	mov	w20, #0x0                   	// #0
    7ea8:	mov	w2, #0x1                   	// #1
    7eac:	add	x0, x21, #0x8
    7eb0:	mov	x8, x23
    7eb4:	mov	w1, w22
    7eb8:	stp	xzr, xzr, [sp, #448]
    7ebc:	str	w2, [sp, #464]
    7ec0:	stp	xzr, xzr, [sp, #472]
    7ec4:	str	xzr, [sp, #488]
    7ec8:	bl	0 <_ZNK4llvm5APInt4zextEj>
    7ecc:	ldr	w0, [sp, #464]
    7ed0:	cmp	w0, #0x40
    7ed4:	b.ls	7ee4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x474>  // b.plast
    7ed8:	ldr	x0, [sp, #456]
    7edc:	cbz	x0, 7ee4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x474>
    7ee0:	bl	0 <_ZdaPv>
    7ee4:	ldr	x1, [sp, #240]
    7ee8:	str	x1, [sp, #456]
    7eec:	ldr	x1, [sp, #104]
    7ef0:	ldr	x0, [sp, #376]
    7ef4:	ldr	w2, [sp, #248]
    7ef8:	str	w2, [sp, #464]
    7efc:	add	x0, x0, x1
    7f00:	cmp	w2, #0x40
    7f04:	add	x1, x0, #0x8
    7f08:	b.hi	7f18 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4a8>  // b.pmore
    7f0c:	ldr	w2, [x0, #16]
    7f10:	cmp	w2, #0x40
    7f14:	b.ls	831c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8ac>  // b.plast
    7f18:	add	x24, x21, #0x8
    7f1c:	mov	x0, x24
    7f20:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    7f24:	ldr	w2, [sp, #464]
    7f28:	cmp	w19, w2
    7f2c:	b.hi	8598 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb28>  // b.pmore
    7f30:	cmp	w2, #0x40
    7f34:	b.ls	8340 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8d0>  // b.plast
    7f38:	mov	x0, x24
    7f3c:	mov	w1, w19
    7f40:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    7f44:	ldr	w0, [sp, #112]
    7f48:	cmp	w22, w0
    7f4c:	b.hi	8360 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8f0>  // b.pmore
    7f50:	ldr	w0, [sp, #120]
    7f54:	add	w19, w19, w0
    7f58:	ldp	x25, x0, [sp, #336]
    7f5c:	cmp	x25, x0
    7f60:	b.eq	83ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x93c>  // b.none
    7f64:	mov	x0, x25
    7f68:	ldr	x1, [sp, #448]
    7f6c:	str	x1, [x0], #8
    7f70:	ldr	w1, [sp, #464]
    7f74:	str	w1, [x0, #8]
    7f78:	cmp	w1, #0x40
    7f7c:	b.hi	83c4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x954>  // b.pmore
    7f80:	ldr	x0, [sp, #456]
    7f84:	str	x0, [x25, #8]
    7f88:	ldp	x0, x1, [sp, #472]
    7f8c:	add	x28, x25, #0x18
    7f90:	str	xzr, [x25, #24]
    7f94:	mov	x26, #0x0                   	// #0
    7f98:	stp	xzr, xzr, [x28, #8]
    7f9c:	sub	x24, x1, x0
    7fa0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    7fa4:	movk	x1, #0xaaab
    7fa8:	asr	x0, x24, #4
    7fac:	mul	x0, x0, x1
    7fb0:	cbz	x0, 7fd0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x560>
    7fb4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    7fb8:	movk	x1, #0x2aa, lsl #48
    7fbc:	cmp	x0, x1
    7fc0:	b.hi	8740 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcd0>  // b.pmore
    7fc4:	mov	x0, x24
    7fc8:	bl	0 <_Znwm>
    7fcc:	mov	x26, x0
    7fd0:	str	x26, [x25, #24]
    7fd4:	add	x1, x26, x24
    7fd8:	stp	x26, x1, [x28, #8]
    7fdc:	ldp	x27, x25, [sp, #472]
    7fe0:	cmp	x27, x25
    7fe4:	b.eq	806c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x5fc>  // b.none
    7fe8:	mov	x0, x21
    7fec:	mov	x24, x27
    7ff0:	mov	w21, w20
    7ff4:	mov	x20, x25
    7ff8:	mov	x25, x0
    7ffc:	str	w19, [sp, #116]
    8000:	mov	x19, x26
    8004:	nop
    8008:	mov	x1, x24
    800c:	mov	x0, x19
    8010:	add	x24, x24, #0x30
    8014:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8018:	cmp	x20, x24
    801c:	add	x19, x19, #0x30
    8020:	b.ne	8008 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x598>  // b.any
    8024:	mov	x0, x25
    8028:	mov	x25, x20
    802c:	sub	x2, x25, #0x30
    8030:	mov	w20, w21
    8034:	sub	x1, x2, x27
    8038:	mov	x21, x0
    803c:	mov	x0, #0xaaab                	// #43691
    8040:	ldr	w19, [sp, #116]
    8044:	movk	x0, #0xaaaa, lsl #16
    8048:	lsr	x1, x1, #4
    804c:	movk	x0, #0xaaaa, lsl #32
    8050:	movk	x0, #0xaaa, lsl #48
    8054:	ldr	x25, [sp, #472]
    8058:	mul	x1, x1, x0
    805c:	and	x1, x1, #0xfffffffffffffff
    8060:	add	x1, x1, #0x1
    8064:	add	x1, x1, x1, lsl #1
    8068:	add	x26, x26, x1, lsl #4
    806c:	str	x26, [x28, #8]
    8070:	ldr	x0, [sp, #336]
    8074:	add	x0, x0, #0x30
    8078:	str	x0, [sp, #336]
    807c:	ldr	x28, [sp, #480]
    8080:	cmp	x25, x28
    8084:	b.eq	80a0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x630>  // b.none
    8088:	mov	x0, x25
    808c:	add	x25, x25, #0x30
    8090:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8094:	cmp	x28, x25
    8098:	b.ne	8088 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x618>  // b.any
    809c:	ldr	x28, [sp, #472]
    80a0:	cbz	x28, 80ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x63c>
    80a4:	mov	x0, x28
    80a8:	bl	0 <_ZdlPv>
    80ac:	ldr	w0, [sp, #464]
    80b0:	cmp	w0, #0x40
    80b4:	b.ls	80c4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x654>  // b.plast
    80b8:	ldr	x0, [sp, #456]
    80bc:	cbz	x0, 80c4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x654>
    80c0:	bl	0 <_ZdaPv>
    80c4:	ldr	w0, [sp, #136]
    80c8:	add	w20, w20, #0x1
    80cc:	cmp	w0, w20
    80d0:	b.ne	7ea8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x438>  // b.any
    80d4:	ldr	x1, [sp, #104]
    80d8:	ldr	w0, [sp, #176]
    80dc:	add	x1, x1, #0x30
    80e0:	str	x1, [sp, #104]
    80e4:	add	w0, w0, #0x1
    80e8:	ldr	w1, [sp, #128]
    80ec:	str	w0, [sp, #176]
    80f0:	cmp	w1, w0
    80f4:	b.hi	7e88 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x418>  // b.pmore
    80f8:	ldr	x0, [sp, #168]
    80fc:	ldrb	w1, [x0, #8]
    8100:	ldr	x0, [sp, #200]
    8104:	cmp	w1, #0x10
    8108:	ldrb	w0, [x0, #8]
    810c:	b.eq	829c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x82c>  // b.none
    8110:	cmp	w0, #0x3
    8114:	ldr	x1, [sp, #328]
    8118:	b.eq	81cc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x75c>  // b.none
    811c:	cmp	w0, #0x2
    8120:	b.ne	855c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xaec>  // b.any
    8124:	ldr	w2, [x1, #16]
    8128:	ldr	x0, [x1, #8]
    812c:	cmp	w2, #0x40
    8130:	b.ls	8138 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c8>  // b.plast
    8134:	ldr	x0, [x0]
    8138:	fmov	s0, w0
    813c:	ldr	x0, [sp, #152]
    8140:	add	x19, sp, #0x130
    8144:	str	s0, [x0]
    8148:	ldr	x0, [sp, #216]
    814c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8150:	ldr	x0, [sp, #208]
    8154:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8158:	mov	x0, x19
    815c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8160:	ldp	x23, x24, [sp, #48]
    8164:	ldp	x25, x26, [sp, #64]
    8168:	ldp	x27, x28, [sp, #80]
    816c:	ldr	x0, [sp, #160]
    8170:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8174:	ldp	x19, x20, [sp, #16]
    8178:	ldp	x21, x22, [sp, #32]
    817c:	ldr	x0, [sp, #152]
    8180:	ldp	x29, x30, [sp], #496
    8184:	ret
    8188:	ldr	x1, [x3, #8]
    818c:	str	x1, [x2, #8]
    8190:	str	w4, [x0, #8]
    8194:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8198:	b	7c54 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e4>
    819c:	cmp	w0, #0xf
    81a0:	b.ne	87c0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd50>  // b.any
    81a4:	ldr	x1, [sp, #152]
    81a8:	ldr	x0, [sp, #256]
    81ac:	str	x0, [x1]
    81b0:	ldr	x0, [sp, #160]
    81b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    81b8:	ldp	x19, x20, [sp, #16]
    81bc:	ldp	x21, x22, [sp, #32]
    81c0:	ldr	x0, [sp, #152]
    81c4:	ldp	x29, x30, [sp], #496
    81c8:	ret
    81cc:	ldr	w2, [x1, #16]
    81d0:	ldr	x0, [x1, #8]
    81d4:	cmp	w2, #0x40
    81d8:	b.ls	81e0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x770>  // b.plast
    81dc:	ldr	x0, [x0]
    81e0:	fmov	d0, x0
    81e4:	ldr	x0, [sp, #152]
    81e8:	add	x19, sp, #0x130
    81ec:	str	d0, [x0]
    81f0:	b	8148 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6d8>
    81f4:	cmp	w0, #0xb
    81f8:	b.eq	8694 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc24>  // b.none
    81fc:	ldr	x0, [sp, #152]
    8200:	ldr	s0, [sp, #256]
    8204:	str	s0, [x0]
    8208:	b	816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>
    820c:	mov	x0, x28
    8210:	mov	x1, x21
    8214:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    8218:	ldr	w0, [sp, #232]
    821c:	cmp	w0, #0x40
    8220:	b.ls	7e30 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3c0>  // b.plast
    8224:	ldr	x0, [sp, #224]
    8228:	cbz	x0, 7e30 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3c0>
    822c:	bl	0 <_ZdaPv>
    8230:	add	w23, w23, #0x1
    8234:	ldr	w0, [sp, #112]
    8238:	cmp	w0, w23
    823c:	b.hi	7e40 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3d0>  // b.pmore
    8240:	ldp	x0, x1, [sp, #336]
    8244:	cmp	x0, x1
    8248:	b.eq	830c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x89c>  // b.none
    824c:	ldr	x1, [sp, #120]
    8250:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8254:	ldr	x0, [sp, #336]
    8258:	add	x0, x0, #0x30
    825c:	str	x0, [sp, #336]
    8260:	ldr	w0, [sp, #116]
    8264:	add	w0, w0, #0x1
    8268:	mov	w19, w0
    826c:	str	w19, [sp, #116]
    8270:	ldr	x0, [sp, #120]
    8274:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8278:	ldr	w1, [sp, #140]
    827c:	cmp	w1, w19
    8280:	b.ne	7cd0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x260>  // b.any
    8284:	ldr	x0, [sp, #168]
    8288:	ldrb	w1, [x0, #8]
    828c:	ldr	x0, [sp, #200]
    8290:	cmp	w1, #0x10
    8294:	ldrb	w0, [x0, #8]
    8298:	b.ne	8110 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a0>  // b.any
    829c:	cmp	w0, #0x3
    82a0:	b.eq	8624 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbb4>  // b.none
    82a4:	cmp	w0, #0x2
    82a8:	b.eq	85b8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb48>  // b.none
    82ac:	ldr	x1, [sp, #152]
    82b0:	add	x19, sp, #0x130
    82b4:	ldr	x0, [sp, #304]
    82b8:	str	x0, [x1]
    82bc:	add	x1, x19, #0x8
    82c0:	ldr	x0, [sp, #184]
    82c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    82c8:	ldr	x0, [sp, #192]
    82cc:	add	x1, x19, #0x18
    82d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    82d4:	b	8148 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6d8>
    82d8:	mov	x0, x21
    82dc:	mov	w1, w20
    82e0:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    82e4:	ldr	w0, [sp, #232]
    82e8:	b	7e04 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x394>
    82ec:	ldr	x2, [x19, #8]
    82f0:	neg	w1, w0
    82f4:	str	w0, [sp, #232]
    82f8:	mov	x0, #0xffffffffffffffff    	// #-1
    82fc:	lsr	x0, x0, x1
    8300:	and	x0, x0, x2
    8304:	str	x0, [sp, #224]
    8308:	b	7d98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x328>
    830c:	mov	x1, x0
    8310:	ldp	x2, x0, [sp, #120]
    8314:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8318:	b	8260 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7f0>
    831c:	ldr	x3, [x0, #8]
    8320:	neg	w0, w2
    8324:	mov	x1, #0xffffffffffffffff    	// #-1
    8328:	str	w2, [sp, #464]
    832c:	lsr	x0, x1, x0
    8330:	and	x0, x0, x3
    8334:	str	x0, [sp, #456]
    8338:	cmp	w19, w2
    833c:	b.hi	8598 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb28>  // b.pmore
    8340:	cmp	w2, w19
    8344:	b.eq	83d0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x960>  // b.none
    8348:	ldr	x0, [sp, #456]
    834c:	lsr	x0, x0, x19
    8350:	str	x0, [sp, #456]
    8354:	ldr	w0, [sp, #112]
    8358:	cmp	w22, w0
    835c:	b.ls	7f50 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4e0>  // b.plast
    8360:	mov	x1, x0
    8364:	mov	x8, x23
    8368:	add	x0, x21, #0x8
    836c:	bl	0 <_ZNK4llvm5APInt5truncEj>
    8370:	ldr	w0, [sp, #464]
    8374:	cmp	w0, #0x40
    8378:	b.ls	8388 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x918>  // b.plast
    837c:	ldr	x0, [sp, #456]
    8380:	cbz	x0, 8388 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x918>
    8384:	bl	0 <_ZdaPv>
    8388:	ldr	x0, [sp, #240]
    838c:	str	x0, [sp, #456]
    8390:	ldr	w0, [sp, #248]
    8394:	str	w0, [sp, #464]
    8398:	ldr	w0, [sp, #120]
    839c:	add	w19, w19, w0
    83a0:	ldp	x25, x0, [sp, #336]
    83a4:	cmp	x25, x0
    83a8:	b.ne	7f64 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4f4>  // b.any
    83ac:	ldr	x0, [sp, #144]
    83b0:	mov	x1, x25
    83b4:	mov	x2, x21
    83b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83bc:	ldr	x25, [sp, #472]
    83c0:	b	807c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x60c>
    83c4:	add	x1, x21, #0x8
    83c8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    83cc:	b	7f88 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x518>
    83d0:	str	xzr, [sp, #456]
    83d4:	b	7f44 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4d4>
    83d8:	ldr	x0, [sp, #168]
    83dc:	ldr	x1, [x0, #16]
    83e0:	ldr	x1, [x1]
    83e4:	str	x1, [sp, #200]
    83e8:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    83ec:	mov	w27, w0
    83f0:	ldr	w1, [sp, #128]
    83f4:	mul	w1, w22, w1
    83f8:	udiv	w0, w1, w0
    83fc:	str	w0, [sp, #140]
    8400:	mul	w0, w27, w0
    8404:	b	7bcc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x15c>
    8408:	ldr	w0, [sp, #128]
    840c:	cbz	w0, 80f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x688>
    8410:	sub	w0, w0, #0x1
    8414:	mov	x21, #0x0                   	// #0
    8418:	add	x0, x0, #0x1
    841c:	mov	w26, #0x20                  	// #32
    8420:	add	x0, x0, x0, lsl #1
    8424:	lsl	x23, x0, #4
    8428:	ldr	x20, [sp, #376]
    842c:	ldr	x1, [sp, #424]
    8430:	add	x20, x20, x21
    8434:	add	x24, x20, #0x8
    8438:	ldr	w0, [x20, #16]
    843c:	ldr	w25, [x1, x21]
    8440:	cmp	w0, #0x40
    8444:	b.ls	8454 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9e4>  // b.plast
    8448:	ldr	x0, [x20, #8]
    844c:	cbz	x0, 8454 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9e4>
    8450:	bl	0 <_ZdaPv>
    8454:	str	x25, [x20, #8]
    8458:	add	x21, x21, #0x30
    845c:	str	w26, [x24, #8]
    8460:	cmp	x23, x21
    8464:	b.ne	8428 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9b8>  // b.any
    8468:	b	7c60 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f0>
    846c:	cmp	w0, #0x2
    8470:	b.eq	86b8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc48>  // b.none
    8474:	cmp	w0, #0x3
    8478:	b.eq	86f0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc80>  // b.none
    847c:	cmp	w0, #0xb
    8480:	b.ne	8778 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd08>  // b.any
    8484:	ldr	x0, [sp, #184]
    8488:	ldr	x1, [sp, #160]
    848c:	add	x1, x1, #0x8
    8490:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8494:	b	816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>
    8498:	ldr	w0, [sp, #128]
    849c:	cbz	w0, 80f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x688>
    84a0:	sub	w0, w0, #0x1
    84a4:	mov	x21, #0x0                   	// #0
    84a8:	add	x0, x0, #0x1
    84ac:	mov	w26, #0x40                  	// #64
    84b0:	add	x0, x0, x0, lsl #1
    84b4:	lsl	x23, x0, #4
    84b8:	ldr	x20, [sp, #376]
    84bc:	ldr	x1, [sp, #424]
    84c0:	add	x20, x20, x21
    84c4:	add	x24, x20, #0x8
    84c8:	ldr	w0, [x20, #16]
    84cc:	ldr	x25, [x1, x21]
    84d0:	cmp	w0, #0x40
    84d4:	b.ls	84e4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa74>  // b.plast
    84d8:	ldr	x0, [x20, #8]
    84dc:	cbz	x0, 84e4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa74>
    84e0:	bl	0 <_ZdaPv>
    84e4:	str	x25, [x20, #8]
    84e8:	add	x21, x21, #0x30
    84ec:	str	w26, [x24, #8]
    84f0:	cmp	x23, x21
    84f4:	b.ne	84b8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa48>  // b.any
    84f8:	b	7c60 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f0>
    84fc:	ldr	x1, [x20, #16]
    8500:	add	x21, sp, #0x190
    8504:	mov	x0, x20
    8508:	str	x21, [sp, #216]
    850c:	ldr	x20, [x1]
    8510:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    8514:	ldp	x1, x2, [sp, #280]
    8518:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    851c:	movk	x3, #0xaaab
    8520:	mov	w22, w0
    8524:	ldr	x4, [sp, #256]
    8528:	add	x0, x21, #0x8
    852c:	ldr	x23, [sp, #160]
    8530:	sub	x2, x2, x1
    8534:	str	x4, [sp, #400]
    8538:	asr	x2, x2, #4
    853c:	add	x1, x23, #0x8
    8540:	mul	w2, w2, w3
    8544:	str	w2, [sp, #128]
    8548:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    854c:	add	x0, x21, #0x18
    8550:	add	x1, x23, #0x18
    8554:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8558:	b	7b90 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>
    855c:	ldr	x0, [sp, #184]
    8560:	add	x19, sp, #0x130
    8564:	add	x1, x1, #0x8
    8568:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    856c:	b	8148 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6d8>
    8570:	ldr	w1, [sp, #272]
    8574:	ldr	x0, [sp, #264]
    8578:	cmp	w1, #0x40
    857c:	b.hi	8590 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb20>  // b.pmore
    8580:	fmov	d0, x0
    8584:	ldr	x0, [sp, #152]
    8588:	str	d0, [x0]
    858c:	b	816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>
    8590:	ldr	x0, [x0]
    8594:	b	8580 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb10>
    8598:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    859c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    85a0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    85a4:	add	x3, x3, #0x0
    85a8:	add	x1, x1, #0x0
    85ac:	add	x0, x0, #0x0
    85b0:	mov	w2, #0x3e3                 	// #995
    85b4:	bl	0 <__assert_fail>
    85b8:	ldr	w19, [sp, #140]
    85bc:	ldr	x0, [sp, #192]
    85c0:	mov	w1, w19
    85c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    85c8:	cbz	w19, 861c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbac>
    85cc:	ldr	w0, [sp, #140]
    85d0:	mov	x1, #0x0                   	// #0
    85d4:	ldr	x5, [sp, #152]
    85d8:	sub	w0, w0, #0x1
    85dc:	add	x0, x0, #0x1
    85e0:	add	x0, x0, x0, lsl #1
    85e4:	lsl	x4, x0, #4
    85e8:	ldr	x0, [sp, #328]
    85ec:	ldr	x2, [x5, #24]
    85f0:	add	x0, x0, x1
    85f4:	add	x2, x2, x1
    85f8:	ldr	w3, [x0, #16]
    85fc:	ldr	x0, [x0, #8]
    8600:	cmp	w3, #0x40
    8604:	b.ls	860c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb9c>  // b.plast
    8608:	ldr	x0, [x0]
    860c:	str	w0, [x2]
    8610:	add	x1, x1, #0x30
    8614:	cmp	x4, x1
    8618:	b.ne	85e8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb78>  // b.any
    861c:	add	x19, sp, #0x130
    8620:	b	8148 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6d8>
    8624:	ldr	w19, [sp, #140]
    8628:	ldr	x0, [sp, #192]
    862c:	mov	w1, w19
    8630:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8634:	cbz	w19, 861c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbac>
    8638:	ldr	w0, [sp, #140]
    863c:	mov	x1, #0x0                   	// #0
    8640:	ldr	x5, [sp, #152]
    8644:	sub	w0, w0, #0x1
    8648:	add	x0, x0, #0x1
    864c:	add	x0, x0, x0, lsl #1
    8650:	lsl	x4, x0, #4
    8654:	nop
    8658:	ldr	x0, [sp, #328]
    865c:	ldr	x2, [x5, #24]
    8660:	add	x0, x0, x1
    8664:	add	x2, x2, x1
    8668:	ldr	w3, [x0, #16]
    866c:	ldr	x0, [x0, #8]
    8670:	cmp	w3, #0x40
    8674:	b.ls	867c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0c>  // b.plast
    8678:	ldr	x0, [x0]
    867c:	str	x0, [x2]
    8680:	add	x1, x1, #0x30
    8684:	cmp	x4, x1
    8688:	b.ne	8658 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbe8>  // b.any
    868c:	add	x19, sp, #0x130
    8690:	b	8148 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6d8>
    8694:	ldr	w1, [sp, #272]
    8698:	ldr	x0, [sp, #264]
    869c:	cmp	w1, #0x40
    86a0:	b.ls	86a8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc38>  // b.plast
    86a4:	ldr	x0, [x0]
    86a8:	fmov	s0, w0
    86ac:	ldr	x0, [sp, #152]
    86b0:	str	s0, [x0]
    86b4:	b	816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>
    86b8:	ldr	w3, [sp, #256]
    86bc:	mov	w2, #0x20                  	// #32
    86c0:	ldr	x0, [sp, #184]
    86c4:	add	x1, sp, #0x1c0
    86c8:	str	x3, [sp, #448]
    86cc:	str	w2, [sp, #456]
    86d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    86d4:	ldr	w0, [sp, #456]
    86d8:	cmp	w0, #0x40
    86dc:	b.ls	816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>  // b.plast
    86e0:	ldr	x0, [sp, #448]
    86e4:	cbz	x0, 816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>
    86e8:	bl	0 <_ZdaPv>
    86ec:	b	816c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6fc>
    86f0:	mov	w2, #0x40                  	// #64
    86f4:	ldr	x0, [sp, #184]
    86f8:	ldr	x3, [sp, #256]
    86fc:	b	86c4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc54>
    8700:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8704:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8708:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    870c:	add	x3, x3, #0x0
    8710:	add	x1, x1, #0x0
    8714:	add	x0, x0, #0x0
    8718:	mov	w2, #0x347                 	// #839
    871c:	bl	0 <__assert_fail>
    8720:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8724:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8728:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    872c:	add	x3, x3, #0x0
    8730:	add	x1, x1, #0x0
    8734:	add	x0, x0, #0x0
    8738:	mov	w2, #0x39a                 	// #922
    873c:	bl	0 <__assert_fail>
    8740:	bl	0 <_ZSt17__throw_bad_allocv>
    8744:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8748:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    874c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8750:	add	x1, x1, #0x0
    8754:	add	x0, x0, #0x0
    8758:	mov	w2, #0x631                 	// #1585
    875c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8760:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8764:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8768:	add	x1, x1, #0x0
    876c:	add	x0, x0, #0x0
    8770:	mov	w2, #0x643                 	// #1603
    8774:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8778:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    877c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8780:	add	x1, x1, #0x0
    8784:	add	x0, x0, #0x0
    8788:	mov	w2, #0x695                 	// #1685
    878c:	stp	x23, x24, [sp, #48]
    8790:	stp	x25, x26, [sp, #64]
    8794:	stp	x27, x28, [sp, #80]
    8798:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    879c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87a0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87a4:	add	x1, x1, #0x0
    87a8:	add	x0, x0, #0x0
    87ac:	mov	w2, #0x6a4                 	// #1700
    87b0:	stp	x23, x24, [sp, #48]
    87b4:	stp	x25, x26, [sp, #64]
    87b8:	stp	x27, x28, [sp, #80]
    87bc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    87c0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87c4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87c8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87cc:	add	x3, x3, #0x0
    87d0:	add	x1, x1, #0x0
    87d4:	add	x0, x0, #0x0
    87d8:	mov	w2, #0x68b                 	// #1675
    87dc:	stp	x23, x24, [sp, #48]
    87e0:	stp	x25, x26, [sp, #64]
    87e4:	stp	x27, x28, [sp, #80]
    87e8:	bl	0 <__assert_fail>
    87ec:	nop

00000000000087f0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>:
    87f0:	stp	x29, x30, [sp, #-384]!
    87f4:	mov	x29, sp
    87f8:	ldrh	w5, [x1, #18]
    87fc:	stp	x19, x20, [sp, #16]
    8800:	mov	x19, x1
    8804:	mov	x20, x2
    8808:	stp	x21, x22, [sp, #32]
    880c:	cmp	w5, #0x2c
    8810:	mov	x21, x8
    8814:	mov	x22, x0
    8818:	b.eq	8b7c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x38c>  // b.none
    881c:	b.hi	8874 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x84>  // b.pmore
    8820:	cmp	w5, #0x28
    8824:	b.eq	8ba4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3b4>  // b.none
    8828:	b.ls	88f0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x100>  // b.plast
    882c:	cmp	w5, #0x2a
    8830:	b.eq	8ca0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x4b0>  // b.none
    8834:	cmp	w5, #0x2b
    8838:	b.ne	88c0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xd0>  // b.any
    883c:	mov	w1, #0x0                   	// #0
    8840:	mov	x0, x19
    8844:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8848:	mov	x1, x0
    884c:	ldr	x2, [x19]
    8850:	mov	x8, x21
    8854:	mov	x3, x20
    8858:	mov	x0, x22
    885c:	bl	7358 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8860:	mov	x0, x21
    8864:	ldp	x19, x20, [sp, #16]
    8868:	ldp	x21, x22, [sp, #32]
    886c:	ldp	x29, x30, [sp], #384
    8870:	ret
    8874:	cmp	w5, #0x30
    8878:	b.eq	8cf0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x500>  // b.none
    887c:	b.ls	89f0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x200>  // b.plast
    8880:	cmp	w5, #0x36
    8884:	b.hi	8928 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x138>  // b.pmore
    8888:	cmp	w5, #0x34
    888c:	b.hi	8bcc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>  // b.pmore
    8890:	cmp	w5, #0x31
    8894:	b.ne	8aac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2bc>  // b.any
    8898:	mov	x0, x19
    889c:	mov	w1, #0x0                   	// #0
    88a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    88a4:	mov	x1, x0
    88a8:	ldr	x2, [x19]
    88ac:	mov	x8, x21
    88b0:	mov	x3, x20
    88b4:	mov	x0, x22
    88b8:	bl	7a70 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    88bc:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    88c0:	cmp	w5, #0x29
    88c4:	b.ne	8aac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2bc>  // b.any
    88c8:	mov	x0, x19
    88cc:	mov	w1, #0x0                   	// #0
    88d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    88d4:	mov	x1, x0
    88d8:	ldr	x2, [x19]
    88dc:	mov	x8, x21
    88e0:	mov	x3, x20
    88e4:	mov	x0, x22
    88e8:	bl	6d28 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    88ec:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    88f0:	cmp	w5, #0x26
    88f4:	b.eq	8cc8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x4d8>  // b.none
    88f8:	cmp	w5, #0x27
    88fc:	b.ne	8a28 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x238>  // b.any
    8900:	mov	x0, x19
    8904:	mov	w1, #0x0                   	// #0
    8908:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    890c:	mov	x1, x0
    8910:	ldr	x2, [x19]
    8914:	mov	x8, x21
    8918:	mov	x3, x20
    891c:	mov	x0, x22
    8920:	bl	66f0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8924:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8928:	stp	x23, x24, [sp, #48]
    892c:	cmp	w5, #0x39
    8930:	b.ne	8ab0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2c0>  // b.any
    8934:	add	x23, sp, #0xf0
    8938:	mov	w1, #0x0                   	// #0
    893c:	mov	x0, x19
    8940:	str	x25, [sp, #64]
    8944:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8948:	mov	x1, x0
    894c:	mov	x8, x23
    8950:	mov	x2, x20
    8954:	mov	x0, x22
    8958:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    895c:	add	x24, sp, #0x120
    8960:	mov	w1, #0x1                   	// #1
    8964:	mov	x0, x19
    8968:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    896c:	mov	x8, x24
    8970:	mov	x2, x20
    8974:	mov	x1, x0
    8978:	mov	x0, x22
    897c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8980:	add	x25, sp, #0x150
    8984:	mov	w1, #0x2                   	// #2
    8988:	mov	x0, x19
    898c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8990:	mov	x1, x0
    8994:	mov	x8, x25
    8998:	mov	x2, x20
    899c:	mov	x0, x22
    89a0:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    89a4:	mov	w1, #0x0                   	// #0
    89a8:	mov	x0, x19
    89ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89b0:	mov	x3, x0
    89b4:	mov	x2, x25
    89b8:	mov	x1, x24
    89bc:	mov	x8, x21
    89c0:	mov	x0, x23
    89c4:	ldr	x3, [x3]
    89c8:	bl	5708 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    89cc:	mov	x0, x25
    89d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89d4:	mov	x0, x24
    89d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89dc:	mov	x0, x23
    89e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89e4:	ldp	x23, x24, [sp, #48]
    89e8:	ldr	x25, [sp, #64]
    89ec:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    89f0:	cmp	w5, #0x2e
    89f4:	b.eq	8c78 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x488>  // b.none
    89f8:	cmp	w5, #0x2f
    89fc:	b.ne	8a7c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x28c>  // b.any
    8a00:	mov	x0, x19
    8a04:	mov	w1, #0x0                   	// #0
    8a08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a0c:	mov	x1, x0
    8a10:	ldr	x2, [x19]
    8a14:	mov	x8, x21
    8a18:	mov	x3, x20
    8a1c:	mov	x0, x22
    8a20:	bl	7758 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8a24:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8a28:	stp	x23, x24, [sp, #48]
    8a2c:	cmp	w5, #0x22
    8a30:	b.ne	8ab0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2c0>  // b.any
    8a34:	mov	w1, #0x0                   	// #0
    8a38:	mov	x0, x19
    8a3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a40:	mov	x23, x0
    8a44:	ldrb	w1, [x19, #16]
    8a48:	cmp	w1, #0x17
    8a4c:	b.hi	8d48 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x558>  // b.pmore
    8a50:	cmp	w1, #0x5
    8a54:	b.eq	8d50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x560>  // b.none
    8a58:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a5c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a60:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a64:	add	x3, x3, #0x0
    8a68:	add	x1, x1, #0x0
    8a6c:	add	x0, x0, #0x0
    8a70:	mov	w2, #0x108                 	// #264
    8a74:	str	x25, [sp, #64]
    8a78:	bl	0 <__assert_fail>
    8a7c:	cmp	w5, #0x2d
    8a80:	b.ne	8aac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2bc>  // b.any
    8a84:	mov	x0, x19
    8a88:	mov	w1, #0x0                   	// #0
    8a8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a90:	mov	x1, x0
    8a94:	ldr	x2, [x19]
    8a98:	mov	x8, x21
    8a9c:	mov	x3, x20
    8aa0:	mov	x0, x22
    8aa4:	bl	69c8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8aa8:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8aac:	stp	x23, x24, [sp, #48]
    8ab0:	mov	w1, #0x0                   	// #0
    8ab4:	mov	x0, x19
    8ab8:	add	x24, sp, #0x90
    8abc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ac0:	mov	x1, x0
    8ac4:	mov	x2, x20
    8ac8:	mov	x8, x24
    8acc:	mov	x0, x22
    8ad0:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8ad4:	mov	w1, #0x1                   	// #1
    8ad8:	mov	x0, x19
    8adc:	add	x23, sp, #0xc0
    8ae0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ae4:	mov	x2, x20
    8ae8:	mov	x1, x0
    8aec:	mov	x8, x23
    8af0:	mov	x0, x22
    8af4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8af8:	stp	xzr, xzr, [sp, #240]
    8afc:	mov	w2, #0x1                   	// #1
    8b00:	mov	w1, #0x0                   	// #0
    8b04:	mov	x0, x19
    8b08:	str	w2, [sp, #256]
    8b0c:	stp	xzr, xzr, [sp, #264]
    8b10:	str	xzr, [sp, #280]
    8b14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b18:	ldrh	w1, [x19, #18]
    8b1c:	ldr	x20, [x0]
    8b20:	sub	w1, w1, #0xd
    8b24:	cmp	w1, #0x11
    8b28:	b.ls	8d30 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x540>  // b.plast
    8b2c:	str	x25, [sp, #64]
    8b30:	bl	0 <_ZN4llvm4dbgsEv>
    8b34:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b38:	add	x1, x1, #0x0
    8b3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b40:	mov	x20, x0
    8b44:	mov	w2, #0x0                   	// #0
    8b48:	mov	x0, x19
    8b4c:	mov	x1, x20
    8b50:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    8b54:	mov	x0, x20
    8b58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b5c:	add	x1, x1, #0x0
    8b60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b6c:	add	x1, x1, #0x0
    8b70:	add	x0, x0, #0x0
    8b74:	mov	w2, #0x833                 	// #2099
    8b78:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8b7c:	mov	x0, x19
    8b80:	mov	w1, #0x0                   	// #0
    8b84:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b88:	mov	x1, x0
    8b8c:	ldr	x2, [x19]
    8b90:	mov	x8, x21
    8b94:	mov	x3, x20
    8b98:	mov	x0, x22
    8b9c:	bl	7558 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8ba0:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8ba4:	mov	x0, x19
    8ba8:	mov	w1, #0x0                   	// #0
    8bac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8bb0:	mov	x1, x0
    8bb4:	ldr	x2, [x19]
    8bb8:	mov	x8, x21
    8bbc:	mov	x3, x20
    8bc0:	mov	x0, x22
    8bc4:	bl	6418 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8bc8:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8bcc:	mov	x0, x1
    8bd0:	stp	x23, x24, [sp, #48]
    8bd4:	add	x24, sp, #0x90
    8bd8:	str	x25, [sp, #64]
    8bdc:	bl	0 <_ZNK4llvm12ConstantExpr12getPredicateEv>
    8be0:	mov	w1, #0x0                   	// #0
    8be4:	mov	w25, w0
    8be8:	mov	x0, x19
    8bec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8bf0:	mov	x8, x24
    8bf4:	mov	x2, x20
    8bf8:	mov	x1, x0
    8bfc:	mov	x0, x22
    8c00:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8c04:	add	x23, sp, #0xc0
    8c08:	mov	x0, x19
    8c0c:	mov	w1, #0x1                   	// #1
    8c10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c14:	mov	x1, x0
    8c18:	mov	x2, x20
    8c1c:	mov	x8, x23
    8c20:	mov	x0, x22
    8c24:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8c28:	mov	x0, x19
    8c2c:	mov	w1, #0x0                   	// #0
    8c30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c34:	mov	w1, #0x1                   	// #1
    8c38:	cmp	w25, #0x29
    8c3c:	ldr	x19, [x0]
    8c40:	stp	xzr, xzr, [sp, #240]
    8c44:	str	w1, [sp, #256]
    8c48:	stp	xzr, xzr, [sp, #264]
    8c4c:	str	xzr, [sp, #280]
    8c50:	b.ls	8d18 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x528>  // b.plast
    8c54:	bl	0 <_ZN4llvm4dbgsEv>
    8c58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c5c:	add	x1, x1, #0x0
    8c60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c68:	mov	w2, #0x2da                 	// #730
    8c6c:	add	x1, x1, #0x0
    8c70:	mov	x0, #0x0                   	// #0
    8c74:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8c78:	mov	x0, x19
    8c7c:	mov	w1, #0x0                   	// #0
    8c80:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c84:	mov	x1, x0
    8c88:	ldr	x2, [x19]
    8c8c:	mov	x8, x21
    8c90:	mov	x3, x20
    8c94:	mov	x0, x22
    8c98:	bl	6b78 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8c9c:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8ca0:	mov	x0, x19
    8ca4:	mov	w1, #0x0                   	// #0
    8ca8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8cac:	mov	x1, x0
    8cb0:	ldr	x2, [x19]
    8cb4:	mov	x8, x21
    8cb8:	mov	x3, x20
    8cbc:	mov	x0, x22
    8cc0:	bl	7040 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8cc4:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8cc8:	mov	x0, x19
    8ccc:	mov	w1, #0x0                   	// #0
    8cd0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8cd4:	mov	x1, x0
    8cd8:	ldr	x2, [x19]
    8cdc:	mov	x8, x21
    8ce0:	mov	x3, x20
    8ce4:	mov	x0, x22
    8ce8:	bl	6138 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8cec:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8cf0:	mov	x0, x19
    8cf4:	mov	w1, #0x0                   	// #0
    8cf8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8cfc:	mov	x1, x0
    8d00:	ldr	x2, [x19]
    8d04:	mov	x8, x21
    8d08:	mov	x3, x20
    8d0c:	mov	x0, x22
    8d10:	bl	78f0 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    8d14:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8d18:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d1c:	add	x0, x0, #0x0
    8d20:	ldrh	w0, [x0, w25, uxtw #1]
    8d24:	adr	x1, 8d30 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x540>
    8d28:	add	x0, x1, w0, sxth #2
    8d2c:	br	x0
    8d30:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d34:	add	x0, x0, #0x0
    8d38:	ldrh	w0, [x0, w1, uxtw #1]
    8d3c:	adr	x1, 8d48 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x558>
    8d40:	add	x0, x1, w0, sxth #2
    8d44:	br	x0
    8d48:	cmp	w1, #0x3a
    8d4c:	b.ne	8a58 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x268>  // b.any
    8d50:	mov	x0, x19
    8d54:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    8d58:	ldrb	w1, [x19, #23]
    8d5c:	tbz	w1, #6, 9aa0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12b0>
    8d60:	ldur	x8, [x19, #-8]
    8d64:	mov	x5, #0xffffffffffffffff    	// #-1
    8d68:	str	x5, [sp, #304]
    8d6c:	tst	x0, #0x7
    8d70:	add	x1, x8, #0x18
    8d74:	b.ne	9dcc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15dc>  // b.any
    8d78:	ldr	w3, [x19, #20]
    8d7c:	orr	x2, x0, #0x4
    8d80:	stp	x1, x2, [sp, #288]
    8d84:	mov	w9, #0x18                  	// #24
    8d88:	mov	x1, x23
    8d8c:	ubfx	x2, x3, #0, #28
    8d90:	stp	xzr, x5, [sp, #344]
    8d94:	mov	x4, x20
    8d98:	ldp	x6, x7, [sp, #288]
    8d9c:	umaddl	x2, w2, w9, x8
    8da0:	str	x2, [sp, #336]
    8da4:	mov	x0, x22
    8da8:	mov	x8, x21
    8dac:	add	x3, sp, #0x50
    8db0:	ldp	x10, x11, [sp, #336]
    8db4:	add	x2, sp, #0x70
    8db8:	stp	x10, x11, [sp, #80]
    8dbc:	str	x5, [sp, #96]
    8dc0:	stp	x6, x7, [sp, #112]
    8dc4:	str	x5, [sp, #128]
    8dc8:	bl	5aa0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    8dcc:	ldp	x23, x24, [sp, #48]
    8dd0:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8dd4:	add	x0, x23, #0x8
    8dd8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ddc:	ldr	w1, [sp, #160]
    8de0:	mov	x19, x0
    8de4:	str	w1, [sp, #344]
    8de8:	cmp	w1, #0x40
    8dec:	b.hi	9cbc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x14cc>  // b.pmore
    8df0:	cmp	w0, w1
    8df4:	ldr	x0, [sp, #152]
    8df8:	str	x0, [sp, #336]
    8dfc:	b.ls	9b2c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x133c>  // b.plast
    8e00:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e04:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e08:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e0c:	add	x3, x3, #0x0
    8e10:	add	x1, x1, #0x0
    8e14:	add	x0, x0, #0x0
    8e18:	mov	w2, #0x3cb                 	// #971
    8e1c:	str	x25, [sp, #64]
    8e20:	bl	0 <__assert_fail>
    8e24:	add	x0, x23, #0x8
    8e28:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e2c:	ldr	w1, [sp, #160]
    8e30:	mov	x19, x0
    8e34:	str	w1, [sp, #344]
    8e38:	cmp	w1, #0x40
    8e3c:	b.hi	9c88 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1498>  // b.pmore
    8e40:	cmp	w0, w1
    8e44:	add	x22, sp, #0x150
    8e48:	ldr	x0, [sp, #152]
    8e4c:	str	x0, [sp, #336]
    8e50:	b.hi	9cf0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1500>  // b.pmore
    8e54:	cmp	w19, w1
    8e58:	b.eq	9d14 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1524>  // b.none
    8e5c:	ldr	x0, [sp, #336]
    8e60:	lsr	x19, x0, x19
    8e64:	str	x19, [sp, #336]
    8e68:	add	x19, sp, #0xf0
    8e6c:	mov	x1, x22
    8e70:	add	x0, x19, #0x8
    8e74:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e78:	ldr	w0, [sp, #344]
    8e7c:	cmp	w0, #0x40
    8e80:	b.ls	8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>  // b.plast
    8e84:	ldr	x0, [sp, #336]
    8e88:	cbz	x0, 8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    8e8c:	bl	0 <_ZdaPv>
    8e90:	mov	x2, x21
    8e94:	mov	x0, x19
    8e98:	ldr	x3, [sp, #240]
    8e9c:	str	x3, [x2], #8
    8ea0:	ldr	w3, [sp, #256]
    8ea4:	str	w3, [x2, #8]
    8ea8:	ldr	x2, [sp, #248]
    8eac:	str	x2, [x21, #8]
    8eb0:	ldr	x2, [sp, #264]
    8eb4:	str	x2, [x21, #24]
    8eb8:	ldr	x2, [sp, #272]
    8ebc:	str	x2, [x21, #32]
    8ec0:	ldr	x2, [sp, #280]
    8ec4:	str	x2, [x21, #40]
    8ec8:	str	wzr, [sp, #256]
    8ecc:	stp	xzr, xzr, [sp, #264]
    8ed0:	str	xzr, [sp, #280]
    8ed4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ed8:	mov	x0, x23
    8edc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ee0:	mov	x0, x24
    8ee4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ee8:	ldp	x23, x24, [sp, #48]
    8eec:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    8ef0:	add	x0, x23, #0x8
    8ef4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ef8:	ldr	w1, [sp, #160]
    8efc:	mov	x19, x0
    8f00:	str	w1, [sp, #344]
    8f04:	cmp	w1, #0x40
    8f08:	b.hi	9c54 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1464>  // b.pmore
    8f0c:	cmp	w0, w1
    8f10:	ldr	x0, [sp, #152]
    8f14:	str	x0, [sp, #336]
    8f18:	b.hi	9d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1550>  // b.pmore
    8f1c:	add	x22, sp, #0x150
    8f20:	cmp	w19, w1
    8f24:	mov	x2, #0x0                   	// #0
    8f28:	b.eq	8f34 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x744>  // b.none
    8f2c:	ldr	x0, [sp, #336]
    8f30:	lsl	x2, x0, x19
    8f34:	neg	w1, w1
    8f38:	mov	x0, #0xffffffffffffffff    	// #-1
    8f3c:	lsr	x1, x0, x1
    8f40:	and	x0, x1, x2
    8f44:	str	x0, [sp, #336]
    8f48:	b	8e68 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    8f4c:	add	x22, sp, #0x120
    8f50:	mov	x1, x24
    8f54:	mov	x0, x22
    8f58:	str	x25, [sp, #64]
    8f5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8f60:	add	x25, sp, #0x150
    8f64:	mov	x0, x25
    8f68:	mov	x1, x23
    8f6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8f70:	add	x19, sp, #0xf0
    8f74:	mov	x2, x25
    8f78:	mov	x3, x20
    8f7c:	mov	x1, x22
    8f80:	mov	x0, x19
    8f84:	bl	210 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    8f88:	mov	x0, x25
    8f8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8f90:	mov	x0, x22
    8f94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8f98:	ldr	x25, [sp, #64]
    8f9c:	b	8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    8fa0:	add	x20, sp, #0x150
    8fa4:	add	x1, x23, #0x8
    8fa8:	mov	x8, x20
    8fac:	add	x0, x24, #0x8
    8fb0:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    8fb4:	add	x19, sp, #0xf0
    8fb8:	mov	x1, x20
    8fbc:	b	8e70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    8fc0:	add	x20, sp, #0x150
    8fc4:	add	x1, x23, #0x8
    8fc8:	mov	x8, x20
    8fcc:	add	x0, x24, #0x8
    8fd0:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    8fd4:	add	x19, sp, #0xf0
    8fd8:	mov	x1, x20
    8fdc:	b	8e70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    8fe0:	str	x25, [sp, #64]
    8fe4:	add	x25, sp, #0x120
    8fe8:	mov	x1, x24
    8fec:	mov	x0, x25
    8ff0:	add	x22, sp, #0x150
    8ff4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8ff8:	mov	x0, x22
    8ffc:	mov	x1, x23
    9000:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9004:	ldrb	w0, [x20, #8]
    9008:	cmp	w0, #0x2
    900c:	b.ne	9ad8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12e8>  // b.any
    9010:	ldr	s0, [sp, #288]
    9014:	ldr	s1, [sp, #336]
    9018:	fdiv	s0, s0, s1
    901c:	str	s0, [sp, #240]
    9020:	mov	x0, x22
    9024:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9028:	mov	x0, x25
    902c:	add	x19, sp, #0xf0
    9030:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9034:	ldr	x25, [sp, #64]
    9038:	b	8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    903c:	add	x20, sp, #0x150
    9040:	add	x1, x23, #0x8
    9044:	mov	x8, x20
    9048:	add	x0, x24, #0x8
    904c:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    9050:	add	x19, sp, #0xf0
    9054:	mov	x1, x20
    9058:	b	8e70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    905c:	add	x20, sp, #0x150
    9060:	add	x1, x23, #0x8
    9064:	mov	x8, x20
    9068:	add	x0, x24, #0x8
    906c:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    9070:	add	x19, sp, #0xf0
    9074:	mov	x1, x20
    9078:	b	8e70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    907c:	str	x25, [sp, #64]
    9080:	add	x25, sp, #0x120
    9084:	mov	x1, x24
    9088:	mov	x0, x25
    908c:	add	x22, sp, #0x150
    9090:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9094:	mov	x0, x22
    9098:	mov	x1, x23
    909c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    90a0:	ldrb	w0, [x20, #8]
    90a4:	cmp	w0, #0x2
    90a8:	b.ne	9abc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12cc>  // b.any
    90ac:	ldr	s0, [sp, #288]
    90b0:	ldr	s1, [sp, #336]
    90b4:	fmul	s0, s0, s1
    90b8:	str	s0, [sp, #240]
    90bc:	b	9020 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x830>
    90c0:	add	x20, sp, #0x150
    90c4:	add	x1, x23, #0x8
    90c8:	mov	x8, x20
    90cc:	add	x0, x24, #0x8
    90d0:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    90d4:	add	x19, sp, #0xf0
    90d8:	mov	x1, x20
    90dc:	b	8e70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    90e0:	str	x25, [sp, #64]
    90e4:	add	x25, sp, #0x120
    90e8:	mov	x1, x24
    90ec:	mov	x0, x25
    90f0:	add	x22, sp, #0x150
    90f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    90f8:	mov	x0, x22
    90fc:	mov	x1, x23
    9100:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9104:	ldrb	w0, [x20, #8]
    9108:	cmp	w0, #0x2
    910c:	b.ne	9af4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1304>  // b.any
    9110:	ldr	s0, [sp, #288]
    9114:	ldr	s1, [sp, #336]
    9118:	fsub	s0, s0, s1
    911c:	str	s0, [sp, #240]
    9120:	b	9020 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x830>
    9124:	ldr	w2, [sp, #160]
    9128:	str	w2, [sp, #296]
    912c:	cmp	w2, #0x40
    9130:	b.hi	9b6c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x137c>  // b.pmore
    9134:	ldr	x0, [sp, #152]
    9138:	str	x0, [sp, #288]
    913c:	ldr	w0, [sp, #208]
    9140:	cmp	w0, w2
    9144:	b.ne	9df0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1600>  // b.any
    9148:	ldr	x0, [sp, #200]
    914c:	ldr	x3, [sp, #288]
    9150:	orr	x3, x3, x0
    9154:	str	x3, [sp, #288]
    9158:	add	x19, sp, #0xf0
    915c:	add	x1, sp, #0x150
    9160:	add	x0, x19, #0x8
    9164:	str	wzr, [sp, #296]
    9168:	str	x3, [sp, #336]
    916c:	str	w2, [sp, #344]
    9170:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9174:	ldr	w0, [sp, #344]
    9178:	cmp	w0, #0x40
    917c:	b.ls	918c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x99c>  // b.plast
    9180:	ldr	x0, [sp, #336]
    9184:	cbz	x0, 918c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x99c>
    9188:	bl	0 <_ZdaPv>
    918c:	ldr	w0, [sp, #296]
    9190:	cmp	w0, #0x40
    9194:	b.ls	8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>  // b.plast
    9198:	ldr	x0, [sp, #288]
    919c:	cbnz	x0, 8e8c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x69c>
    91a0:	b	8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    91a4:	ldr	w0, [sp, #160]
    91a8:	str	x25, [sp, #64]
    91ac:	str	w0, [sp, #296]
    91b0:	cmp	w0, #0x40
    91b4:	b.hi	9bec <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x13fc>  // b.pmore
    91b8:	add	x25, sp, #0x120
    91bc:	ldr	x0, [sp, #152]
    91c0:	str	x0, [sp, #288]
    91c4:	mov	x0, x25
    91c8:	add	x1, x23, #0x8
    91cc:	add	x19, sp, #0xf0
    91d0:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    91d4:	ldr	w2, [sp, #296]
    91d8:	add	x0, x19, #0x8
    91dc:	ldr	x3, [sp, #288]
    91e0:	add	x1, sp, #0x150
    91e4:	str	wzr, [sp, #296]
    91e8:	str	x3, [sp, #336]
    91ec:	str	w2, [sp, #344]
    91f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    91f4:	ldr	w0, [sp, #344]
    91f8:	cmp	w0, #0x40
    91fc:	b.ls	920c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa1c>  // b.plast
    9200:	ldr	x0, [sp, #336]
    9204:	cbz	x0, 920c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa1c>
    9208:	bl	0 <_ZdaPv>
    920c:	ldr	w0, [sp, #296]
    9210:	cmp	w0, #0x40
    9214:	b.ls	9ab4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12c4>  // b.plast
    9218:	ldr	x0, [sp, #288]
    921c:	cbz	x0, 9ab4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12c4>
    9220:	bl	0 <_ZdaPv>
    9224:	ldr	x25, [sp, #64]
    9228:	b	8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    922c:	str	x25, [sp, #64]
    9230:	add	x25, sp, #0x120
    9234:	mov	x1, x24
    9238:	mov	x0, x25
    923c:	add	x22, sp, #0x150
    9240:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9244:	mov	x0, x22
    9248:	mov	x1, x23
    924c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9250:	ldrb	w0, [x20, #8]
    9254:	cmp	w0, #0x2
    9258:	b.ne	9b10 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1320>  // b.any
    925c:	ldr	s0, [sp, #288]
    9260:	ldr	s1, [sp, #336]
    9264:	fadd	s0, s0, s1
    9268:	str	s0, [sp, #240]
    926c:	b	9020 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x830>
    9270:	ldr	w2, [sp, #160]
    9274:	str	w2, [sp, #296]
    9278:	cmp	w2, #0x40
    927c:	b.hi	9bac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x13bc>  // b.pmore
    9280:	ldr	x0, [sp, #152]
    9284:	str	x0, [sp, #288]
    9288:	ldr	w0, [sp, #208]
    928c:	cmp	w0, w2
    9290:	b.ne	9da8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15b8>  // b.any
    9294:	ldr	x0, [sp, #200]
    9298:	ldr	x3, [sp, #288]
    929c:	and	x3, x3, x0
    92a0:	str	x3, [sp, #288]
    92a4:	b	9158 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x968>
    92a8:	ldr	w0, [sp, #160]
    92ac:	str	x25, [sp, #64]
    92b0:	str	w0, [sp, #296]
    92b4:	cmp	w0, #0x40
    92b8:	b.hi	9c00 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1410>  // b.pmore
    92bc:	add	x25, sp, #0x120
    92c0:	ldr	x0, [sp, #152]
    92c4:	str	x0, [sp, #288]
    92c8:	mov	x0, x25
    92cc:	add	x1, x23, #0x8
    92d0:	add	x19, sp, #0xf0
    92d4:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    92d8:	b	91d4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x9e4>
    92dc:	ldr	w0, [sp, #160]
    92e0:	str	w0, [sp, #296]
    92e4:	cmp	w0, #0x40
    92e8:	b.hi	9c14 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1424>  // b.pmore
    92ec:	ldr	x1, [sp, #152]
    92f0:	str	x1, [sp, #288]
    92f4:	ldr	w3, [sp, #208]
    92f8:	cmp	w0, w3
    92fc:	b.ne	9d1c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x152c>  // b.any
    9300:	ldr	x0, [sp, #200]
    9304:	ldr	x2, [sp, #288]
    9308:	eor	x2, x2, x0
    930c:	str	x2, [sp, #288]
    9310:	add	x19, sp, #0xf0
    9314:	add	x1, sp, #0x150
    9318:	add	x0, x19, #0x8
    931c:	str	wzr, [sp, #296]
    9320:	str	x2, [sp, #336]
    9324:	str	w3, [sp, #344]
    9328:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    932c:	ldr	w0, [sp, #344]
    9330:	cmp	w0, #0x40
    9334:	b.ls	918c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x99c>  // b.plast
    9338:	b	9180 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x990>
    933c:	add	x20, sp, #0x150
    9340:	mov	x1, x24
    9344:	mov	x0, x20
    9348:	add	x22, sp, #0x120
    934c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9350:	mov	x1, x23
    9354:	mov	x0, x22
    9358:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    935c:	mov	x8, x21
    9360:	mov	x2, x19
    9364:	mov	x1, x22
    9368:	mov	w3, #0x1                   	// #1
    936c:	mov	x0, x20
    9370:	bl	5598 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    9374:	mov	x0, x22
    9378:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    937c:	mov	x0, x20
    9380:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9384:	nop
    9388:	add	x0, sp, #0xf0
    938c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9390:	mov	x0, x23
    9394:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9398:	mov	x0, x24
    939c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    93a0:	ldp	x23, x24, [sp, #48]
    93a4:	ldr	x25, [sp, #64]
    93a8:	b	8860 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    93ac:	add	x20, sp, #0x150
    93b0:	add	x22, sp, #0x120
    93b4:	mov	x1, x24
    93b8:	mov	x0, x20
    93bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    93c0:	mov	x0, x22
    93c4:	mov	x1, x23
    93c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    93cc:	mov	x8, x21
    93d0:	mov	x2, x19
    93d4:	mov	x1, x22
    93d8:	mov	x0, x20
    93dc:	bl	3170 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    93e0:	mov	x0, x22
    93e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    93e8:	mov	x0, x20
    93ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    93f0:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    93f4:	add	x20, sp, #0x150
    93f8:	add	x22, sp, #0x120
    93fc:	mov	x1, x24
    9400:	mov	x0, x20
    9404:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9408:	mov	x0, x22
    940c:	mov	x1, x23
    9410:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9414:	mov	x8, x21
    9418:	mov	x2, x19
    941c:	mov	x1, x22
    9420:	mov	x0, x20
    9424:	bl	1c50 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    9428:	mov	x0, x22
    942c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9430:	mov	x0, x20
    9434:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9438:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    943c:	add	x20, sp, #0x150
    9440:	add	x22, sp, #0x120
    9444:	mov	x1, x24
    9448:	mov	x0, x20
    944c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9450:	mov	x0, x22
    9454:	mov	x1, x23
    9458:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    945c:	mov	x8, x21
    9460:	mov	x2, x19
    9464:	mov	x1, x22
    9468:	mov	x0, x20
    946c:	bl	13c8 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    9470:	mov	x0, x22
    9474:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9478:	mov	x0, x20
    947c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9480:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9484:	add	x20, sp, #0x150
    9488:	add	x22, sp, #0x120
    948c:	mov	x1, x24
    9490:	mov	x0, x20
    9494:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9498:	mov	x0, x22
    949c:	mov	x1, x23
    94a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    94a4:	mov	x8, x21
    94a8:	mov	x2, x19
    94ac:	mov	x1, x22
    94b0:	mov	x0, x20
    94b4:	bl	15e8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    94b8:	mov	x0, x22
    94bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    94c0:	mov	x0, x20
    94c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    94c8:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    94cc:	add	x20, sp, #0x150
    94d0:	add	x22, sp, #0x120
    94d4:	mov	x1, x24
    94d8:	mov	x0, x20
    94dc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    94e0:	mov	x0, x22
    94e4:	mov	x1, x23
    94e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    94ec:	mov	x8, x21
    94f0:	mov	x2, x19
    94f4:	mov	x1, x22
    94f8:	mov	x0, x20
    94fc:	bl	d68 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    9500:	mov	x0, x22
    9504:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9508:	mov	x0, x20
    950c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9510:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9514:	add	x20, sp, #0x150
    9518:	add	x22, sp, #0x120
    951c:	mov	x1, x24
    9520:	mov	x0, x20
    9524:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9528:	mov	x0, x22
    952c:	mov	x1, x23
    9530:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9534:	mov	x8, x21
    9538:	mov	x2, x19
    953c:	mov	x1, x22
    9540:	mov	x0, x20
    9544:	bl	1a28 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    9548:	mov	x0, x22
    954c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9550:	mov	x0, x20
    9554:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9558:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    955c:	add	x20, sp, #0x150
    9560:	add	x22, sp, #0x120
    9564:	mov	x1, x24
    9568:	mov	x0, x20
    956c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9570:	mov	x0, x22
    9574:	mov	x1, x23
    9578:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    957c:	mov	x8, x21
    9580:	mov	x2, x19
    9584:	mov	x1, x22
    9588:	mov	x0, x20
    958c:	bl	11a8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    9590:	mov	x0, x22
    9594:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9598:	mov	x0, x20
    959c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    95a0:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    95a4:	add	x20, sp, #0x150
    95a8:	add	x22, sp, #0x120
    95ac:	mov	x1, x24
    95b0:	mov	x0, x20
    95b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    95b8:	mov	x0, x22
    95bc:	mov	x1, x23
    95c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    95c4:	mov	x8, x21
    95c8:	mov	x2, x19
    95cc:	mov	x1, x22
    95d0:	mov	x0, x20
    95d4:	bl	ac0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    95d8:	mov	x0, x22
    95dc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    95e0:	mov	x0, x20
    95e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    95e8:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    95ec:	add	x20, sp, #0x150
    95f0:	add	x22, sp, #0x120
    95f4:	mov	x1, x24
    95f8:	mov	x0, x20
    95fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9600:	mov	x0, x22
    9604:	mov	x1, x23
    9608:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    960c:	mov	x8, x21
    9610:	mov	x2, x19
    9614:	mov	x1, x22
    9618:	mov	x0, x20
    961c:	bl	820 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    9620:	mov	x0, x22
    9624:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9628:	mov	x0, x20
    962c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9630:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9634:	add	x20, sp, #0x150
    9638:	add	x22, sp, #0x120
    963c:	mov	x1, x24
    9640:	mov	x0, x20
    9644:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9648:	mov	x0, x22
    964c:	mov	x1, x23
    9650:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9654:	mov	x8, x21
    9658:	mov	x2, x19
    965c:	mov	x1, x22
    9660:	mov	x0, x20
    9664:	bl	1808 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    9668:	mov	x0, x22
    966c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9670:	mov	x0, x20
    9674:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9678:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    967c:	add	x20, sp, #0x150
    9680:	add	x22, sp, #0x120
    9684:	mov	x1, x24
    9688:	mov	x0, x20
    968c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9690:	mov	x0, x22
    9694:	mov	x1, x23
    9698:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    969c:	mov	x8, x21
    96a0:	mov	x2, x19
    96a4:	mov	x1, x22
    96a8:	mov	x0, x20
    96ac:	bl	f88 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    96b0:	mov	x0, x22
    96b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    96b8:	mov	x0, x20
    96bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    96c0:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    96c4:	add	x20, sp, #0x150
    96c8:	add	x22, sp, #0x120
    96cc:	mov	x1, x24
    96d0:	mov	x0, x20
    96d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    96d8:	mov	x0, x22
    96dc:	mov	x1, x23
    96e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    96e4:	mov	x8, x21
    96e8:	mov	x2, x19
    96ec:	mov	x1, x22
    96f0:	mov	x0, x20
    96f4:	bl	1e78 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    96f8:	mov	x0, x22
    96fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9700:	mov	x0, x20
    9704:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9708:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    970c:	add	x20, sp, #0x150
    9710:	add	x22, sp, #0x120
    9714:	mov	x1, x24
    9718:	mov	x0, x20
    971c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9720:	mov	x0, x22
    9724:	mov	x1, x23
    9728:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    972c:	mov	x8, x21
    9730:	mov	x2, x19
    9734:	mov	x1, x22
    9738:	mov	x0, x20
    973c:	bl	2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    9740:	mov	x0, x22
    9744:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9748:	mov	x0, x20
    974c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9750:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9754:	add	x20, sp, #0x150
    9758:	add	x22, sp, #0x120
    975c:	mov	x1, x24
    9760:	mov	x0, x20
    9764:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9768:	mov	x0, x22
    976c:	mov	x1, x23
    9770:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9774:	mov	x8, x21
    9778:	mov	x2, x19
    977c:	mov	x1, x22
    9780:	mov	x0, x20
    9784:	bl	4608 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    9788:	mov	x0, x22
    978c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9790:	mov	x0, x20
    9794:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9798:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    979c:	add	x20, sp, #0x150
    97a0:	add	x22, sp, #0x120
    97a4:	mov	x1, x24
    97a8:	mov	x0, x20
    97ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    97b0:	mov	x0, x22
    97b4:	mov	x1, x23
    97b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    97bc:	mov	x8, x21
    97c0:	mov	x2, x19
    97c4:	mov	x1, x22
    97c8:	mov	x0, x20
    97cc:	bl	3678 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    97d0:	mov	x0, x22
    97d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    97d8:	mov	x0, x20
    97dc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    97e0:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    97e4:	add	x20, sp, #0x150
    97e8:	add	x22, sp, #0x120
    97ec:	mov	x1, x24
    97f0:	mov	x0, x20
    97f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    97f8:	mov	x0, x22
    97fc:	mov	x1, x23
    9800:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9804:	mov	x8, x21
    9808:	mov	x2, x19
    980c:	mov	x1, x22
    9810:	mov	x0, x20
    9814:	bl	4dd0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    9818:	mov	x0, x22
    981c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9820:	mov	x0, x20
    9824:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9828:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    982c:	add	x20, sp, #0x150
    9830:	add	x22, sp, #0x120
    9834:	mov	x1, x24
    9838:	mov	x0, x20
    983c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9840:	mov	x0, x22
    9844:	mov	x1, x23
    9848:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    984c:	mov	x8, x21
    9850:	mov	x2, x19
    9854:	mov	x1, x22
    9858:	mov	x0, x20
    985c:	bl	3e40 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    9860:	mov	x0, x22
    9864:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9868:	mov	x0, x20
    986c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9870:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9874:	add	x20, sp, #0x150
    9878:	add	x22, sp, #0x120
    987c:	mov	x1, x24
    9880:	mov	x0, x20
    9884:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9888:	mov	x0, x22
    988c:	mov	x1, x23
    9890:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9894:	mov	x8, x21
    9898:	mov	x2, x19
    989c:	mov	x1, x22
    98a0:	mov	x0, x20
    98a4:	bl	2398 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    98a8:	mov	x0, x22
    98ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    98b0:	mov	x0, x20
    98b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    98b8:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    98bc:	add	x20, sp, #0x150
    98c0:	mov	x1, x24
    98c4:	mov	x0, x20
    98c8:	add	x22, sp, #0x120
    98cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    98d0:	mov	x1, x23
    98d4:	mov	x0, x22
    98d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    98dc:	mov	x8, x21
    98e0:	mov	x2, x19
    98e4:	mov	x1, x22
    98e8:	mov	w3, #0x0                   	// #0
    98ec:	b	936c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb7c>
    98f0:	add	x20, sp, #0x150
    98f4:	add	x22, sp, #0x120
    98f8:	mov	x1, x24
    98fc:	mov	x0, x20
    9900:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9904:	mov	x0, x22
    9908:	mov	x1, x23
    990c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9910:	mov	x8, x21
    9914:	mov	x2, x19
    9918:	mov	x1, x22
    991c:	mov	x0, x20
    9920:	bl	5090 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    9924:	mov	x0, x22
    9928:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    992c:	mov	x0, x20
    9930:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9934:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9938:	add	x20, sp, #0x150
    993c:	add	x22, sp, #0x120
    9940:	mov	x1, x24
    9944:	mov	x0, x20
    9948:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    994c:	mov	x0, x22
    9950:	mov	x1, x23
    9954:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9958:	mov	x8, x21
    995c:	mov	x2, x19
    9960:	mov	x1, x22
    9964:	mov	x0, x20
    9968:	bl	4100 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    996c:	mov	x0, x22
    9970:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9974:	mov	x0, x20
    9978:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    997c:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9980:	add	x20, sp, #0x150
    9984:	add	x22, sp, #0x120
    9988:	mov	x1, x24
    998c:	mov	x0, x20
    9990:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9994:	mov	x0, x22
    9998:	mov	x1, x23
    999c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99a0:	mov	x8, x21
    99a4:	mov	x2, x19
    99a8:	mov	x1, x22
    99ac:	mov	x0, x20
    99b0:	bl	2658 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    99b4:	mov	x0, x22
    99b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99bc:	mov	x0, x20
    99c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99c4:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    99c8:	add	x20, sp, #0x150
    99cc:	add	x22, sp, #0x120
    99d0:	mov	x1, x24
    99d4:	mov	x0, x20
    99d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99dc:	mov	x0, x22
    99e0:	mov	x1, x23
    99e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99e8:	mov	x8, x21
    99ec:	mov	x2, x19
    99f0:	mov	x1, x22
    99f4:	mov	x0, x20
    99f8:	bl	2108 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    99fc:	mov	x0, x22
    9a00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a04:	mov	x0, x20
    9a08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a0c:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9a10:	add	x20, sp, #0x150
    9a14:	add	x22, sp, #0x120
    9a18:	mov	x1, x24
    9a1c:	mov	x0, x20
    9a20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a24:	mov	x0, x22
    9a28:	mov	x1, x23
    9a2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a30:	mov	x8, x21
    9a34:	mov	x2, x19
    9a38:	mov	x1, x22
    9a3c:	mov	x0, x20
    9a40:	bl	48c8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    9a44:	mov	x0, x22
    9a48:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a4c:	mov	x0, x20
    9a50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a54:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9a58:	add	x20, sp, #0x150
    9a5c:	add	x22, sp, #0x120
    9a60:	mov	x1, x24
    9a64:	mov	x0, x20
    9a68:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a6c:	mov	x0, x22
    9a70:	mov	x1, x23
    9a74:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a78:	mov	x8, x21
    9a7c:	mov	x2, x19
    9a80:	mov	x1, x22
    9a84:	mov	x0, x20
    9a88:	bl	3938 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    9a8c:	mov	x0, x22
    9a90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a94:	mov	x0, x20
    9a98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a9c:	b	9388 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb98>
    9aa0:	ldr	w2, [x19, #20]
    9aa4:	mov	w8, #0x18                  	// #24
    9aa8:	ubfx	x2, x2, #0, #28
    9aac:	umsubl	x8, w2, w8, x19
    9ab0:	b	8d64 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x574>
    9ab4:	ldr	x25, [sp, #64]
    9ab8:	b	8e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    9abc:	cmp	w0, #0x3
    9ac0:	b.ne	9d6c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x157c>  // b.any
    9ac4:	ldr	d0, [sp, #288]
    9ac8:	ldr	d1, [sp, #336]
    9acc:	fmul	d0, d0, d1
    9ad0:	str	d0, [sp, #240]
    9ad4:	b	9020 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x830>
    9ad8:	cmp	w0, #0x3
    9adc:	b.ne	9d74 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1584>  // b.any
    9ae0:	ldr	d0, [sp, #288]
    9ae4:	ldr	d1, [sp, #336]
    9ae8:	fdiv	d0, d0, d1
    9aec:	str	d0, [sp, #240]
    9af0:	b	9020 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x830>
    9af4:	cmp	w0, #0x3
    9af8:	b.ne	9d7c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x158c>  // b.any
    9afc:	ldr	d0, [sp, #288]
    9b00:	ldr	d1, [sp, #336]
    9b04:	fsub	d0, d0, d1
    9b08:	str	d0, [sp, #240]
    9b0c:	b	9020 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x830>
    9b10:	cmp	w0, #0x3
    9b14:	b.ne	9d64 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1574>  // b.any
    9b18:	ldr	d0, [sp, #288]
    9b1c:	ldr	d1, [sp, #336]
    9b20:	fadd	d0, d0, d1
    9b24:	str	d0, [sp, #240]
    9b28:	b	9020 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x830>
    9b2c:	ldr	x0, [sp, #336]
    9b30:	cbz	w1, 9d84 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1594>
    9b34:	mov	w2, #0x40                  	// #64
    9b38:	sub	w2, w2, w1
    9b3c:	cmp	w1, w19
    9b40:	mov	x1, #0xffffffffffffffff    	// #-1
    9b44:	lsl	x0, x0, x2
    9b48:	add	x22, sp, #0x150
    9b4c:	asr	x0, x0, x2
    9b50:	asr	x3, x0, #63
    9b54:	asr	x0, x0, x19
    9b58:	csel	x0, x0, x3, ne  // ne = any
    9b5c:	lsr	x1, x1, x2
    9b60:	and	x0, x1, x0
    9b64:	str	x0, [sp, #336]
    9b68:	b	8e68 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    9b6c:	add	x19, sp, #0x120
    9b70:	add	x1, x24, #0x8
    9b74:	mov	x0, x19
    9b78:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9b7c:	ldr	w0, [sp, #208]
    9b80:	ldr	w2, [sp, #296]
    9b84:	cmp	w2, w0
    9b88:	b.ne	9df0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1600>  // b.any
    9b8c:	cmp	w2, #0x40
    9b90:	b.ls	9148 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x958>  // b.plast
    9b94:	mov	x0, x19
    9b98:	add	x1, x23, #0x8
    9b9c:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    9ba0:	ldr	w2, [sp, #296]
    9ba4:	ldr	x3, [sp, #288]
    9ba8:	b	9158 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x968>
    9bac:	add	x19, sp, #0x120
    9bb0:	add	x1, x24, #0x8
    9bb4:	mov	x0, x19
    9bb8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9bbc:	ldr	w0, [sp, #208]
    9bc0:	ldr	w2, [sp, #296]
    9bc4:	cmp	w2, w0
    9bc8:	b.ne	9da8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15b8>  // b.any
    9bcc:	cmp	w2, #0x40
    9bd0:	b.ls	9294 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xaa4>  // b.plast
    9bd4:	mov	x0, x19
    9bd8:	add	x1, x23, #0x8
    9bdc:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    9be0:	ldr	w2, [sp, #296]
    9be4:	ldr	x3, [sp, #288]
    9be8:	b	9158 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x968>
    9bec:	add	x25, sp, #0x120
    9bf0:	add	x1, x24, #0x8
    9bf4:	mov	x0, x25
    9bf8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9bfc:	b	91c4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x9d4>
    9c00:	add	x25, sp, #0x120
    9c04:	add	x1, x24, #0x8
    9c08:	mov	x0, x25
    9c0c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9c10:	b	92c8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xad8>
    9c14:	add	x19, sp, #0x120
    9c18:	add	x1, x24, #0x8
    9c1c:	mov	x0, x19
    9c20:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9c24:	ldr	w0, [sp, #208]
    9c28:	ldr	w3, [sp, #296]
    9c2c:	cmp	w3, w0
    9c30:	b.ne	9d1c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x152c>  // b.any
    9c34:	cmp	w3, #0x40
    9c38:	b.ls	9300 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb10>  // b.plast
    9c3c:	mov	x0, x19
    9c40:	add	x1, x23, #0x8
    9c44:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    9c48:	ldr	w3, [sp, #296]
    9c4c:	ldr	x2, [sp, #288]
    9c50:	b	9310 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb20>
    9c54:	add	x22, sp, #0x150
    9c58:	add	x1, x24, #0x8
    9c5c:	mov	x0, x22
    9c60:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9c64:	ldr	w1, [sp, #344]
    9c68:	cmp	w19, w1
    9c6c:	b.hi	9d40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1550>  // b.pmore
    9c70:	cmp	w1, #0x40
    9c74:	b.ls	8f20 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x730>  // b.plast
    9c78:	mov	w1, w19
    9c7c:	mov	x0, x22
    9c80:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    9c84:	b	8e68 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    9c88:	add	x22, sp, #0x150
    9c8c:	add	x1, x24, #0x8
    9c90:	mov	x0, x22
    9c94:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9c98:	ldr	w1, [sp, #344]
    9c9c:	cmp	w19, w1
    9ca0:	b.hi	9cf0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1500>  // b.pmore
    9ca4:	cmp	w1, #0x40
    9ca8:	b.ls	8e54 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x664>  // b.plast
    9cac:	mov	w1, w19
    9cb0:	mov	x0, x22
    9cb4:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    9cb8:	b	8e68 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    9cbc:	add	x22, sp, #0x150
    9cc0:	add	x1, x24, #0x8
    9cc4:	mov	x0, x22
    9cc8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9ccc:	ldr	w1, [sp, #344]
    9cd0:	cmp	w19, w1
    9cd4:	b.hi	8e00 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x610>  // b.pmore
    9cd8:	cmp	w1, #0x40
    9cdc:	b.ls	9b2c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x133c>  // b.plast
    9ce0:	mov	w1, w19
    9ce4:	mov	x0, x22
    9ce8:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    9cec:	b	8e68 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    9cf0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9cf4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9cf8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9cfc:	add	x3, x3, #0x0
    9d00:	add	x1, x1, #0x0
    9d04:	add	x0, x0, #0x0
    9d08:	mov	w2, #0x3e3                 	// #995
    9d0c:	str	x25, [sp, #64]
    9d10:	bl	0 <__assert_fail>
    9d14:	str	xzr, [sp, #336]
    9d18:	b	8e68 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    9d1c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d20:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d24:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d28:	add	x3, x3, #0x0
    9d2c:	add	x1, x1, #0x0
    9d30:	add	x0, x0, #0x0
    9d34:	mov	w2, #0x365                 	// #869
    9d38:	str	x25, [sp, #64]
    9d3c:	bl	0 <__assert_fail>
    9d40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d4c:	add	x3, x3, #0x0
    9d50:	add	x1, x1, #0x0
    9d54:	add	x0, x0, #0x0
    9d58:	mov	w2, #0x39a                 	// #922
    9d5c:	str	x25, [sp, #64]
    9d60:	bl	0 <__assert_fail>
    9d64:	mov	x0, x20
    9d68:	bl	410 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    9d6c:	mov	x0, x20
    9d70:	bl	340 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    9d74:	mov	x0, x20
    9d78:	bl	4e0 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    9d7c:	mov	x0, x20
    9d80:	bl	140 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    9d84:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d88:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d8c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9d90:	add	x3, x3, #0x0
    9d94:	add	x1, x1, #0x0
    9d98:	add	x0, x0, #0x0
    9d9c:	mov	w2, #0x307                 	// #775
    9da0:	str	x25, [sp, #64]
    9da4:	bl	0 <__assert_fail>
    9da8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9dac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9db0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9db4:	add	x3, x3, #0x0
    9db8:	add	x1, x1, #0x0
    9dbc:	add	x0, x0, #0x0
    9dc0:	mov	w2, #0x329                 	// #809
    9dc4:	str	x25, [sp, #64]
    9dc8:	bl	0 <__assert_fail>
    9dcc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9dd0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9dd4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9dd8:	add	x3, x3, #0x0
    9ddc:	add	x1, x1, #0x0
    9de0:	add	x0, x0, #0x0
    9de4:	mov	w2, #0xb2                  	// #178
    9de8:	str	x25, [sp, #64]
    9dec:	bl	0 <__assert_fail>
    9df0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9df4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9df8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9dfc:	add	x3, x3, #0x0
    9e00:	add	x1, x1, #0x0
    9e04:	add	x0, x0, #0x0
    9e08:	mov	w2, #0x347                 	// #839
    9e0c:	str	x25, [sp, #64]
    9e10:	bl	0 <__assert_fail>
    9e14:	nop

0000000000009e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>:
    9e18:	stp	x29, x30, [sp, #-64]!
    9e1c:	mov	x29, sp
    9e20:	ldr	x3, [x2, #48]
    9e24:	stp	x19, x20, [sp, #16]
    9e28:	mov	x20, x1
    9e2c:	str	x0, [sp, #40]
    9e30:	add	x1, x2, #0x28
    9e34:	mov	x19, x1
    9e38:	cbz	x3, 9eb0 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x98>
    9e3c:	nop
    9e40:	ldr	x4, [x3, #32]
    9e44:	cmp	x4, x0
    9e48:	b.cc	9edc <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xc4>  // b.lo, b.ul, b.last
    9e4c:	mov	x19, x3
    9e50:	ldr	x3, [x3, #16]
    9e54:	cbnz	x3, 9e40 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x28>
    9e58:	cmp	x1, x19
    9e5c:	b.eq	9eb0 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x98>  // b.none
    9e60:	ldr	x1, [x19, #32]
    9e64:	cmp	x1, x0
    9e68:	b.hi	9eb0 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x98>  // b.pmore
    9e6c:	mov	x1, x20
    9e70:	ldr	w2, [x19, #56]
    9e74:	add	x0, x19, #0x30
    9e78:	cmp	w2, #0x40
    9e7c:	ldr	x2, [x1], #8
    9e80:	str	x2, [x19, #40]
    9e84:	b.hi	9e94 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x7c>  // b.pmore
    9e88:	ldr	w2, [x20, #16]
    9e8c:	cmp	w2, #0x40
    9e90:	b.ls	9ee8 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xd0>  // b.plast
    9e94:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    9e98:	add	x1, x20, #0x18
    9e9c:	add	x0, x19, #0x40
    9ea0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9ea4:	ldp	x19, x20, [sp, #16]
    9ea8:	ldp	x29, x30, [sp], #64
    9eac:	ret
    9eb0:	add	x5, sp, #0x28
    9eb4:	mov	x1, x19
    9eb8:	add	x0, x2, #0x20
    9ebc:	add	x4, sp, #0x30
    9ec0:	add	x3, sp, #0x38
    9ec4:	adrp	x2, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9ec8:	add	x2, x2, #0x0
    9ecc:	str	x5, [sp, #56]
    9ed0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9ed4:	mov	x19, x0
    9ed8:	b	9e6c <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x54>
    9edc:	ldr	x3, [x3, #24]
    9ee0:	cbnz	x3, 9e40 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x28>
    9ee4:	b	9e58 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x40>
    9ee8:	ldr	x3, [x20, #8]
    9eec:	neg	w4, w2
    9ef0:	mov	x1, #0xffffffffffffffff    	// #-1
    9ef4:	str	w2, [x0, #8]
    9ef8:	lsr	x1, x1, x4
    9efc:	and	x1, x1, x3
    9f00:	str	x1, [x0]
    9f04:	add	x1, x20, #0x18
    9f08:	add	x0, x19, #0x40
    9f0c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9f10:	ldp	x19, x20, [sp, #16]
    9f14:	ldp	x29, x30, [sp], #64
    9f18:	ret
    9f1c:	nop

0000000000009f20 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>:
    9f20:	stp	x29, x30, [sp, #-208]!
    9f24:	mov	x29, sp
    9f28:	stp	x19, x20, [sp, #16]
    9f2c:	mov	x19, x1
    9f30:	ldur	x1, [x1, #-24]
    9f34:	stp	x21, x22, [sp, #32]
    9f38:	ldr	x20, [x0, #704]
    9f3c:	ldr	x22, [x1]
    9f40:	sub	x20, x20, #0x80
    9f44:	str	x23, [sp, #48]
    9f48:	add	x23, sp, #0x40
    9f4c:	mov	x2, x20
    9f50:	mov	x8, x23
    9f54:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    9f58:	ldrb	w0, [x22, #8]
    9f5c:	mov	w1, #0x1                   	// #1
    9f60:	stp	xzr, xzr, [sp, #112]
    9f64:	cmp	w0, #0x10
    9f68:	str	w1, [sp, #128]
    9f6c:	stp	xzr, xzr, [sp, #136]
    9f70:	str	xzr, [sp, #152]
    9f74:	b.eq	a0d8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1b8>  // b.none
    9f78:	ldrb	w0, [x19, #16]
    9f7c:	cmp	w0, #0x24
    9f80:	b.ne	a1e0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2c0>  // b.any
    9f84:	add	x21, sp, #0xa0
    9f88:	mov	x1, x23
    9f8c:	mov	x0, x21
    9f90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9f94:	ldrb	w0, [x22, #8]
    9f98:	cmp	w0, #0x2
    9f9c:	b.eq	a0c8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1a8>  // b.none
    9fa0:	cmp	w0, #0x3
    9fa4:	b.ne	a1f8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2d8>  // b.any
    9fa8:	ldr	d0, [sp, #160]
    9fac:	fneg	d0, d0
    9fb0:	str	d0, [sp, #112]
    9fb4:	add	x23, sp, #0x70
    9fb8:	mov	x0, x21
    9fbc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9fc0:	mov	x1, x23
    9fc4:	mov	x0, x21
    9fc8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9fcc:	mov	x2, x20
    9fd0:	mov	x0, x19
    9fd4:	mov	x1, x21
    9fd8:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    9fdc:	ldp	x19, x20, [sp, #184]
    9fe0:	cmp	x19, x20
    9fe4:	b.eq	a000 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xe0>  // b.none
    9fe8:	mov	x0, x19
    9fec:	add	x19, x19, #0x30
    9ff0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9ff4:	cmp	x20, x19
    9ff8:	b.ne	9fe8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xc8>  // b.any
    9ffc:	ldr	x20, [sp, #184]
    a000:	cbz	x20, a00c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xec>
    a004:	mov	x0, x20
    a008:	bl	0 <_ZdlPv>
    a00c:	ldr	w0, [sp, #176]
    a010:	cmp	w0, #0x40
    a014:	b.ls	a024 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x104>  // b.plast
    a018:	ldr	x0, [sp, #168]
    a01c:	cbz	x0, a024 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x104>
    a020:	bl	0 <_ZdaPv>
    a024:	ldp	x19, x20, [sp, #136]
    a028:	cmp	x19, x20
    a02c:	b.eq	a048 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x128>  // b.none
    a030:	mov	x0, x19
    a034:	add	x19, x19, #0x30
    a038:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a03c:	cmp	x20, x19
    a040:	b.ne	a030 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x110>  // b.any
    a044:	ldr	x20, [sp, #136]
    a048:	cbz	x20, a054 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x134>
    a04c:	mov	x0, x20
    a050:	bl	0 <_ZdlPv>
    a054:	ldr	w0, [sp, #128]
    a058:	cmp	w0, #0x40
    a05c:	b.ls	a06c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x14c>  // b.plast
    a060:	ldr	x0, [sp, #120]
    a064:	cbz	x0, a06c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x14c>
    a068:	bl	0 <_ZdaPv>
    a06c:	ldp	x19, x20, [sp, #88]
    a070:	cmp	x19, x20
    a074:	b.eq	a090 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x170>  // b.none
    a078:	mov	x0, x19
    a07c:	add	x19, x19, #0x30
    a080:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a084:	cmp	x20, x19
    a088:	b.ne	a078 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x158>  // b.any
    a08c:	ldr	x20, [sp, #88]
    a090:	cbz	x20, a09c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x17c>
    a094:	mov	x0, x20
    a098:	bl	0 <_ZdlPv>
    a09c:	ldr	w0, [sp, #80]
    a0a0:	cmp	w0, #0x40
    a0a4:	b.ls	a0b4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x194>  // b.plast
    a0a8:	ldr	x0, [sp, #72]
    a0ac:	cbz	x0, a0b4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x194>
    a0b0:	bl	0 <_ZdaPv>
    a0b4:	ldp	x19, x20, [sp, #16]
    a0b8:	ldp	x21, x22, [sp, #32]
    a0bc:	ldr	x23, [sp, #48]
    a0c0:	ldp	x29, x30, [sp], #208
    a0c4:	ret
    a0c8:	ldr	s0, [sp, #160]
    a0cc:	fneg	s0, s0
    a0d0:	str	s0, [sp, #112]
    a0d4:	b	9fb4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x94>
    a0d8:	ldp	x2, x1, [sp, #88]
    a0dc:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    a0e0:	movk	x21, #0xaaab
    a0e4:	add	x23, sp, #0x70
    a0e8:	add	x0, x23, #0x18
    a0ec:	sub	x1, x1, x2
    a0f0:	asr	x1, x1, #4
    a0f4:	mul	x1, x1, x21
    a0f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a0fc:	ldrb	w0, [x19, #16]
    a100:	cmp	w0, #0x24
    a104:	b.ne	a230 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x310>  // b.any
    a108:	ldrb	w0, [x22, #8]
    a10c:	cmp	w0, #0x10
    a110:	b.ne	a210 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2f0>  // b.any
    a114:	ldr	x0, [x22, #24]
    a118:	ldrb	w0, [x0, #8]
    a11c:	cmp	w0, #0x2
    a120:	b.eq	a188 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x268>  // b.none
    a124:	cmp	w0, #0x3
    a128:	b.ne	a248 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x328>  // b.any
    a12c:	ldp	x3, x0, [sp, #136]
    a130:	mov	x4, x21
    a134:	mov	w2, #0x0                   	// #0
    a138:	mov	x1, #0x0                   	// #0
    a13c:	cmp	x0, x3
    a140:	b.eq	a180 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x260>  // b.none
    a144:	nop
    a148:	add	x1, x1, x1, lsl #1
    a14c:	add	w2, w2, #0x1
    a150:	ldr	x5, [sp, #88]
    a154:	lsl	x0, x1, #4
    a158:	mov	w1, w2
    a15c:	ldr	d0, [x5, x0]
    a160:	fneg	d0, d0
    a164:	str	d0, [x3, x0]
    a168:	ldp	x3, x0, [sp, #136]
    a16c:	sub	x0, x0, x3
    a170:	asr	x0, x0, #4
    a174:	mul	x0, x0, x4
    a178:	cmp	x0, w2, uxtw
    a17c:	b.hi	a148 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x228>  // b.pmore
    a180:	add	x21, sp, #0xa0
    a184:	b	9fc0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xa0>
    a188:	ldp	x3, x0, [sp, #136]
    a18c:	mov	x4, x21
    a190:	mov	w2, #0x0                   	// #0
    a194:	mov	x1, #0x0                   	// #0
    a198:	cmp	x0, x3
    a19c:	b.eq	a180 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x260>  // b.none
    a1a0:	add	x1, x1, x1, lsl #1
    a1a4:	add	w2, w2, #0x1
    a1a8:	ldr	x5, [sp, #88]
    a1ac:	lsl	x0, x1, #4
    a1b0:	mov	w1, w2
    a1b4:	ldr	s0, [x5, x0]
    a1b8:	fneg	s0, s0
    a1bc:	str	s0, [x3, x0]
    a1c0:	ldp	x3, x0, [sp, #136]
    a1c4:	sub	x0, x0, x3
    a1c8:	asr	x0, x0, #4
    a1cc:	mul	x0, x0, x4
    a1d0:	cmp	x0, w2, uxtw
    a1d4:	b.hi	a1a0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x280>  // b.pmore
    a1d8:	add	x21, sp, #0xa0
    a1dc:	b	9fc0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xa0>
    a1e0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a1e4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a1e8:	add	x1, x1, #0x0
    a1ec:	add	x0, x0, #0x0
    a1f0:	mov	w2, #0x5b                  	// #91
    a1f4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a1f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a1fc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a200:	add	x1, x1, #0x0
    a204:	add	x0, x0, #0x0
    a208:	mov	w2, #0x3a                  	// #58
    a20c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a210:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a214:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a218:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a21c:	add	x3, x3, #0x0
    a220:	add	x1, x1, #0x0
    a224:	add	x0, x0, #0x0
    a228:	mov	w2, #0x108                 	// #264
    a22c:	bl	0 <__assert_fail>
    a230:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a234:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a238:	add	x1, x1, #0x0
    a23c:	add	x0, x0, #0x0
    a240:	mov	w2, #0x4a                  	// #74
    a244:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a248:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a24c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a250:	add	x1, x1, #0x0
    a254:	add	x0, x0, #0x0
    a258:	mov	w2, #0x54                  	// #84
    a25c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000a260 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>:
    a260:	stp	x29, x30, [sp, #-384]!
    a264:	mov	x29, sp
    a268:	stp	x19, x20, [sp, #16]
    a26c:	mov	x20, x1
    a270:	mov	x19, x0
    a274:	stp	x21, x22, [sp, #32]
    a278:	ldur	x1, [x1, #-48]
    a27c:	stp	x23, x24, [sp, #48]
    a280:	add	x23, sp, #0x60
    a284:	ldr	x21, [x0, #704]
    a288:	mov	x8, x23
    a28c:	stp	x25, x26, [sp, #64]
    a290:	add	x24, sp, #0x90
    a294:	sub	x21, x21, #0x80
    a298:	mov	x2, x21
    a29c:	ldr	x25, [x1]
    a2a0:	str	x27, [sp, #80]
    a2a4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a2a8:	ldur	x1, [x20, #-24]
    a2ac:	mov	x0, x19
    a2b0:	mov	x2, x21
    a2b4:	mov	x8, x24
    a2b8:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a2bc:	stp	xzr, xzr, [sp, #192]
    a2c0:	ldrh	w0, [x20, #18]
    a2c4:	mov	w1, #0x1                   	// #1
    a2c8:	str	w1, [sp, #208]
    a2cc:	stp	xzr, xzr, [sp, #216]
    a2d0:	and	w0, w0, #0xffff7fff
    a2d4:	cmp	w0, #0x25
    a2d8:	str	xzr, [sp, #232]
    a2dc:	b.eq	a4c0 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x260>  // b.none
    a2e0:	b.hi	a3cc <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x16c>  // b.pmore
    a2e4:	cmp	w0, #0x22
    a2e8:	b.eq	a500 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x2a0>  // b.none
    a2ec:	b.ls	a420 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x1c0>  // b.plast
    a2f0:	cmp	w0, #0x23
    a2f4:	b.eq	a540 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x2e0>  // b.none
    a2f8:	cmp	w0, #0x24
    a2fc:	b.ne	a640 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    a300:	add	x26, sp, #0xf0
    a304:	mov	x1, x23
    a308:	mov	x0, x26
    a30c:	add	x27, sp, #0x120
    a310:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a314:	add	x19, sp, #0x150
    a318:	mov	x0, x27
    a31c:	mov	x1, x24
    a320:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a324:	add	x22, sp, #0xc0
    a328:	mov	x2, x25
    a32c:	mov	x8, x19
    a330:	mov	x1, x27
    a334:	mov	x0, x26
    a338:	bl	d68 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    a33c:	ldr	x2, [sp, #336]
    a340:	add	x1, x19, #0x8
    a344:	add	x0, x22, #0x8
    a348:	str	x2, [sp, #192]
    a34c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a350:	add	x1, x19, #0x18
    a354:	add	x0, x22, #0x18
    a358:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    a35c:	mov	x0, x19
    a360:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a364:	mov	x0, x27
    a368:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a36c:	mov	x0, x26
    a370:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a374:	mov	x1, x22
    a378:	mov	x0, x19
    a37c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a380:	mov	x2, x21
    a384:	mov	x1, x19
    a388:	mov	x0, x20
    a38c:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    a390:	mov	x0, x19
    a394:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a398:	mov	x0, x22
    a39c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3a0:	mov	x0, x24
    a3a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3a8:	mov	x0, x23
    a3ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3b0:	ldp	x19, x20, [sp, #16]
    a3b4:	ldp	x21, x22, [sp, #32]
    a3b8:	ldp	x23, x24, [sp, #48]
    a3bc:	ldp	x25, x26, [sp, #64]
    a3c0:	ldr	x27, [sp, #80]
    a3c4:	ldp	x29, x30, [sp], #384
    a3c8:	ret
    a3cc:	cmp	w0, #0x28
    a3d0:	b.eq	a580 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x320>  // b.none
    a3d4:	b.ls	a470 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x210>  // b.plast
    a3d8:	cmp	w0, #0x29
    a3dc:	b.ne	a640 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    a3e0:	add	x26, sp, #0xf0
    a3e4:	mov	x1, x23
    a3e8:	mov	x0, x26
    a3ec:	add	x27, sp, #0x120
    a3f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3f4:	add	x19, sp, #0x150
    a3f8:	mov	x0, x27
    a3fc:	mov	x1, x24
    a400:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a404:	add	x22, sp, #0xc0
    a408:	mov	x2, x25
    a40c:	mov	x8, x19
    a410:	mov	x1, x27
    a414:	mov	x0, x26
    a418:	bl	1808 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    a41c:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a420:	cmp	w0, #0x20
    a424:	b.eq	a5c0 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x360>  // b.none
    a428:	cmp	w0, #0x21
    a42c:	b.ne	a640 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    a430:	add	x26, sp, #0xf0
    a434:	mov	x1, x23
    a438:	mov	x0, x26
    a43c:	add	x27, sp, #0x120
    a440:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a444:	add	x19, sp, #0x150
    a448:	mov	x0, x27
    a44c:	mov	x1, x24
    a450:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a454:	add	x22, sp, #0xc0
    a458:	mov	x2, x25
    a45c:	mov	x8, x19
    a460:	mov	x1, x27
    a464:	mov	x0, x26
    a468:	bl	ac0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    a46c:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a470:	cmp	w0, #0x26
    a474:	b.eq	a600 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3a0>  // b.none
    a478:	cmp	w0, #0x27
    a47c:	b.ne	a640 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    a480:	add	x26, sp, #0xf0
    a484:	mov	x1, x23
    a488:	mov	x0, x26
    a48c:	add	x27, sp, #0x120
    a490:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a494:	add	x19, sp, #0x150
    a498:	mov	x0, x27
    a49c:	mov	x1, x24
    a4a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4a4:	add	x22, sp, #0xc0
    a4a8:	mov	x2, x25
    a4ac:	mov	x8, x19
    a4b0:	mov	x1, x27
    a4b4:	mov	x0, x26
    a4b8:	bl	1c50 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    a4bc:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a4c0:	add	x26, sp, #0xf0
    a4c4:	mov	x1, x23
    a4c8:	mov	x0, x26
    a4cc:	add	x27, sp, #0x120
    a4d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4d4:	add	x19, sp, #0x150
    a4d8:	mov	x0, x27
    a4dc:	mov	x1, x24
    a4e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4e4:	add	x22, sp, #0xc0
    a4e8:	mov	x2, x25
    a4ec:	mov	x8, x19
    a4f0:	mov	x1, x27
    a4f4:	mov	x0, x26
    a4f8:	bl	15e8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    a4fc:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a500:	add	x26, sp, #0xf0
    a504:	mov	x1, x23
    a508:	mov	x0, x26
    a50c:	add	x27, sp, #0x120
    a510:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a514:	add	x19, sp, #0x150
    a518:	mov	x0, x27
    a51c:	mov	x1, x24
    a520:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a524:	add	x22, sp, #0xc0
    a528:	mov	x2, x25
    a52c:	mov	x8, x19
    a530:	mov	x1, x27
    a534:	mov	x0, x26
    a538:	bl	11a8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    a53c:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a540:	add	x26, sp, #0xf0
    a544:	mov	x1, x23
    a548:	mov	x0, x26
    a54c:	add	x27, sp, #0x120
    a550:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a554:	add	x19, sp, #0x150
    a558:	mov	x0, x27
    a55c:	mov	x1, x24
    a560:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a564:	add	x22, sp, #0xc0
    a568:	mov	x2, x25
    a56c:	mov	x8, x19
    a570:	mov	x1, x27
    a574:	mov	x0, x26
    a578:	bl	1a28 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    a57c:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a580:	add	x26, sp, #0xf0
    a584:	mov	x1, x23
    a588:	mov	x0, x26
    a58c:	add	x27, sp, #0x120
    a590:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a594:	add	x19, sp, #0x150
    a598:	mov	x0, x27
    a59c:	mov	x1, x24
    a5a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5a4:	add	x22, sp, #0xc0
    a5a8:	mov	x2, x25
    a5ac:	mov	x8, x19
    a5b0:	mov	x1, x27
    a5b4:	mov	x0, x26
    a5b8:	bl	f88 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    a5bc:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a5c0:	add	x26, sp, #0xf0
    a5c4:	mov	x1, x23
    a5c8:	mov	x0, x26
    a5cc:	add	x27, sp, #0x120
    a5d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5d4:	add	x19, sp, #0x150
    a5d8:	mov	x0, x27
    a5dc:	mov	x1, x24
    a5e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5e4:	add	x22, sp, #0xc0
    a5e8:	mov	x2, x25
    a5ec:	mov	x8, x19
    a5f0:	mov	x1, x27
    a5f4:	mov	x0, x26
    a5f8:	bl	820 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    a5fc:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a600:	add	x26, sp, #0xf0
    a604:	mov	x1, x23
    a608:	mov	x0, x26
    a60c:	add	x27, sp, #0x120
    a610:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a614:	add	x19, sp, #0x150
    a618:	mov	x0, x27
    a61c:	mov	x1, x24
    a620:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a624:	add	x22, sp, #0xc0
    a628:	mov	x2, x25
    a62c:	mov	x8, x19
    a630:	mov	x1, x27
    a634:	mov	x0, x26
    a638:	bl	13c8 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    a63c:	b	a33c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    a640:	bl	0 <_ZN4llvm4dbgsEv>
    a644:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a648:	add	x1, x1, #0x0
    a64c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a650:	mov	x1, x0
    a654:	mov	w2, #0x0                   	// #0
    a658:	mov	x0, x20
    a65c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    a660:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a664:	mov	w2, #0x15f                 	// #351
    a668:	add	x1, x1, #0x0
    a66c:	mov	x0, #0x0                   	// #0
    a670:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a674:	nop

000000000000a678 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>:
    a678:	stp	x29, x30, [sp, #-400]!
    a67c:	mov	x29, sp
    a680:	stp	x19, x20, [sp, #16]
    a684:	mov	x20, x1
    a688:	mov	x19, x0
    a68c:	stp	x21, x22, [sp, #32]
    a690:	ldur	x1, [x1, #-48]
    a694:	stp	x25, x26, [sp, #64]
    a698:	add	x26, sp, #0x70
    a69c:	ldr	x21, [x0, #704]
    a6a0:	mov	x8, x26
    a6a4:	stp	x23, x24, [sp, #48]
    a6a8:	add	x23, sp, #0xa0
    a6ac:	sub	x21, x21, #0x80
    a6b0:	mov	x2, x21
    a6b4:	mov	w24, #0x1                   	// #1
    a6b8:	ldr	x25, [x1]
    a6bc:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a6c0:	ldur	x1, [x20, #-24]
    a6c4:	mov	x0, x19
    a6c8:	mov	x2, x21
    a6cc:	mov	x8, x23
    a6d0:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a6d4:	stp	xzr, xzr, [sp, #208]
    a6d8:	ldrh	w0, [x20, #18]
    a6dc:	str	w24, [sp, #224]
    a6e0:	stp	xzr, xzr, [sp, #232]
    a6e4:	and	w0, w0, #0xffff7fff
    a6e8:	cmp	w0, #0x8
    a6ec:	str	xzr, [sp, #248]
    a6f0:	b.eq	aa50 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x3d8>  // b.none
    a6f4:	b.hi	a7e8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x170>  // b.pmore
    a6f8:	cmp	w0, #0x4
    a6fc:	b.eq	aa94 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x41c>  // b.none
    a700:	b.hi	a8d4 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x25c>  // b.pmore
    a704:	cmp	w0, #0x2
    a708:	b.eq	aad8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x460>  // b.none
    a70c:	stp	x27, x28, [sp, #80]
    a710:	b.ls	a888 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x210>  // b.plast
    a714:	cmp	w0, #0x3
    a718:	b.ne	ac90 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    a71c:	add	x24, sp, #0x100
    a720:	mov	x1, x26
    a724:	mov	x0, x24
    a728:	add	x27, sp, #0x130
    a72c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a730:	add	x19, sp, #0x160
    a734:	mov	x0, x27
    a738:	mov	x1, x23
    a73c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a740:	add	x22, sp, #0xd0
    a744:	mov	x2, x25
    a748:	mov	x8, x19
    a74c:	mov	x1, x27
    a750:	mov	x0, x24
    a754:	bl	4dd0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    a758:	ldr	x2, [sp, #352]
    a75c:	add	x1, x19, #0x8
    a760:	add	x0, x22, #0x8
    a764:	str	x2, [sp, #208]
    a768:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a76c:	add	x1, x19, #0x18
    a770:	add	x0, x22, #0x18
    a774:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    a778:	mov	x0, x19
    a77c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a780:	mov	x0, x27
    a784:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a788:	mov	x0, x24
    a78c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a790:	ldp	x27, x28, [sp, #80]
    a794:	mov	x1, x22
    a798:	mov	x0, x19
    a79c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a7a0:	mov	x2, x21
    a7a4:	mov	x1, x19
    a7a8:	mov	x0, x20
    a7ac:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    a7b0:	mov	x0, x19
    a7b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a7b8:	mov	x0, x22
    a7bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a7c0:	mov	x0, x23
    a7c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a7c8:	mov	x0, x26
    a7cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a7d0:	ldp	x19, x20, [sp, #16]
    a7d4:	ldp	x21, x22, [sp, #32]
    a7d8:	ldp	x23, x24, [sp, #48]
    a7dc:	ldp	x25, x26, [sp, #64]
    a7e0:	ldp	x29, x30, [sp], #400
    a7e4:	ret
    a7e8:	stp	x27, x28, [sp, #80]
    a7ec:	cmp	w0, #0xc
    a7f0:	b.eq	ab4c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4d4>  // b.none
    a7f4:	b.ls	a970 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x2f8>  // b.plast
    a7f8:	cmp	w0, #0xe
    a7fc:	b.eq	ab8c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x514>  // b.none
    a800:	cmp	w0, #0xf
    a804:	b.ne	a928 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x2b0>  // b.any
    a808:	add	x27, sp, #0x100
    a80c:	add	x28, sp, #0x130
    a810:	mov	x0, x27
    a814:	mov	x1, x26
    a818:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a81c:	add	x19, sp, #0x160
    a820:	mov	x0, x28
    a824:	mov	x1, x23
    a828:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a82c:	add	x22, sp, #0xd0
    a830:	mov	w3, w24
    a834:	mov	x8, x19
    a838:	mov	x1, x28
    a83c:	mov	x0, x27
    a840:	mov	x2, x25
    a844:	bl	5598 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    a848:	ldr	x2, [sp, #352]
    a84c:	add	x1, x19, #0x8
    a850:	add	x0, x22, #0x8
    a854:	str	x2, [sp, #208]
    a858:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a85c:	add	x1, x19, #0x18
    a860:	add	x0, x22, #0x18
    a864:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    a868:	mov	x0, x19
    a86c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a870:	mov	x0, x28
    a874:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a878:	mov	x0, x27
    a87c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a880:	ldp	x27, x28, [sp, #80]
    a884:	b	a794 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x11c>
    a888:	cbz	w0, abcc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x554>
    a88c:	cmp	w0, w24
    a890:	b.ne	ac90 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    a894:	add	x24, sp, #0x100
    a898:	mov	x1, x26
    a89c:	mov	x0, x24
    a8a0:	add	x27, sp, #0x130
    a8a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a8a8:	add	x19, sp, #0x160
    a8ac:	mov	x0, x27
    a8b0:	mov	x1, x23
    a8b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a8b8:	add	x22, sp, #0xd0
    a8bc:	mov	x2, x25
    a8c0:	mov	x8, x19
    a8c4:	mov	x1, x27
    a8c8:	mov	x0, x24
    a8cc:	bl	2398 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    a8d0:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    a8d4:	stp	x27, x28, [sp, #80]
    a8d8:	cmp	w0, #0x6
    a8dc:	b.eq	ac10 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x598>  // b.none
    a8e0:	cmp	w0, #0x7
    a8e4:	b.ne	a9c0 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x348>  // b.any
    a8e8:	add	x24, sp, #0x100
    a8ec:	mov	x1, x26
    a8f0:	mov	x0, x24
    a8f4:	add	x27, sp, #0x130
    a8f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a8fc:	add	x19, sp, #0x160
    a900:	mov	x0, x27
    a904:	mov	x1, x23
    a908:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a90c:	add	x22, sp, #0xd0
    a910:	mov	x2, x25
    a914:	mov	x8, x19
    a918:	mov	x1, x27
    a91c:	mov	x0, x24
    a920:	bl	1e78 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    a924:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    a928:	cmp	w0, #0xd
    a92c:	b.ne	ac90 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    a930:	add	x24, sp, #0x100
    a934:	mov	x1, x26
    a938:	mov	x0, x24
    a93c:	add	x27, sp, #0x130
    a940:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a944:	add	x19, sp, #0x160
    a948:	mov	x0, x27
    a94c:	mov	x1, x23
    a950:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a954:	add	x22, sp, #0xd0
    a958:	mov	x2, x25
    a95c:	mov	x8, x19
    a960:	mov	x1, x27
    a964:	mov	x0, x24
    a968:	bl	48c8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    a96c:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    a970:	cmp	w0, #0xa
    a974:	b.eq	ac50 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x5d8>  // b.none
    a978:	cmp	w0, #0xb
    a97c:	b.ne	aa08 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x390>  // b.any
    a980:	add	x24, sp, #0x100
    a984:	mov	x1, x26
    a988:	mov	x0, x24
    a98c:	add	x27, sp, #0x130
    a990:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a994:	add	x19, sp, #0x160
    a998:	mov	x0, x27
    a99c:	mov	x1, x23
    a9a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a9a4:	add	x22, sp, #0xd0
    a9a8:	mov	x2, x25
    a9ac:	mov	x8, x19
    a9b0:	mov	x1, x27
    a9b4:	mov	x0, x24
    a9b8:	bl	5090 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    a9bc:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    a9c0:	cmp	w0, #0x5
    a9c4:	b.ne	ac90 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    a9c8:	add	x24, sp, #0x100
    a9cc:	mov	x1, x26
    a9d0:	mov	x0, x24
    a9d4:	add	x27, sp, #0x130
    a9d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a9dc:	add	x19, sp, #0x160
    a9e0:	mov	x0, x27
    a9e4:	mov	x1, x23
    a9e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a9ec:	add	x22, sp, #0xd0
    a9f0:	mov	x2, x25
    a9f4:	mov	x8, x19
    a9f8:	mov	x1, x27
    a9fc:	mov	x0, x24
    aa00:	bl	4608 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    aa04:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    aa08:	cmp	w0, #0x9
    aa0c:	b.ne	ac90 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    aa10:	add	x24, sp, #0x100
    aa14:	mov	x1, x26
    aa18:	mov	x0, x24
    aa1c:	add	x27, sp, #0x130
    aa20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aa24:	add	x19, sp, #0x160
    aa28:	mov	x0, x27
    aa2c:	mov	x1, x23
    aa30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aa34:	add	x22, sp, #0xd0
    aa38:	mov	x2, x25
    aa3c:	mov	x8, x19
    aa40:	mov	x1, x27
    aa44:	mov	x0, x24
    aa48:	bl	2658 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    aa4c:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    aa50:	add	x24, sp, #0x100
    aa54:	mov	x1, x26
    aa58:	mov	x0, x24
    aa5c:	stp	x27, x28, [sp, #80]
    aa60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aa64:	add	x27, sp, #0x130
    aa68:	mov	x1, x23
    aa6c:	mov	x0, x27
    aa70:	add	x19, sp, #0x160
    aa74:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aa78:	add	x22, sp, #0xd0
    aa7c:	mov	x2, x25
    aa80:	mov	x8, x19
    aa84:	mov	x1, x27
    aa88:	mov	x0, x24
    aa8c:	bl	2108 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    aa90:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    aa94:	add	x24, sp, #0x100
    aa98:	mov	x1, x26
    aa9c:	mov	x0, x24
    aaa0:	stp	x27, x28, [sp, #80]
    aaa4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aaa8:	add	x27, sp, #0x130
    aaac:	mov	x1, x23
    aab0:	mov	x0, x27
    aab4:	add	x19, sp, #0x160
    aab8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aabc:	add	x22, sp, #0xd0
    aac0:	mov	x2, x25
    aac4:	mov	x8, x19
    aac8:	mov	x1, x27
    aacc:	mov	x0, x24
    aad0:	bl	3678 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    aad4:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    aad8:	add	x0, sp, #0x100
    aadc:	mov	x1, x26
    aae0:	str	x0, [sp, #96]
    aae4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aae8:	add	x0, sp, #0x130
    aaec:	mov	x1, x23
    aaf0:	str	x0, [sp, #104]
    aaf4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aaf8:	ldp	x0, x1, [sp, #96]
    aafc:	add	x19, sp, #0x160
    ab00:	mov	x8, x19
    ab04:	mov	x2, x25
    ab08:	add	x22, sp, #0xd0
    ab0c:	bl	3e40 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    ab10:	ldr	x2, [sp, #352]
    ab14:	add	x1, x19, #0x8
    ab18:	add	x0, x22, #0x8
    ab1c:	str	x2, [sp, #208]
    ab20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab24:	add	x1, x19, #0x18
    ab28:	add	x0, x22, #0x18
    ab2c:	bl	600 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    ab30:	mov	x0, x19
    ab34:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab38:	ldr	x0, [sp, #104]
    ab3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab40:	ldr	x0, [sp, #96]
    ab44:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab48:	b	a794 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x11c>
    ab4c:	add	x24, sp, #0x100
    ab50:	mov	x1, x26
    ab54:	mov	x0, x24
    ab58:	add	x27, sp, #0x130
    ab5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab60:	add	x19, sp, #0x160
    ab64:	mov	x0, x27
    ab68:	mov	x1, x23
    ab6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab70:	add	x22, sp, #0xd0
    ab74:	mov	x2, x25
    ab78:	mov	x8, x19
    ab7c:	mov	x1, x27
    ab80:	mov	x0, x24
    ab84:	bl	3938 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    ab88:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    ab8c:	add	x24, sp, #0x100
    ab90:	mov	x1, x26
    ab94:	mov	x0, x24
    ab98:	add	x27, sp, #0x130
    ab9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aba0:	add	x19, sp, #0x160
    aba4:	mov	x0, x27
    aba8:	mov	x1, x23
    abac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    abb0:	add	x22, sp, #0xd0
    abb4:	mov	x2, x25
    abb8:	mov	x8, x19
    abbc:	mov	x1, x27
    abc0:	mov	x0, x24
    abc4:	bl	3170 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    abc8:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    abcc:	add	x24, sp, #0x100
    abd0:	mov	x1, x26
    abd4:	mov	x0, x24
    abd8:	add	x27, sp, #0x130
    abdc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    abe0:	add	x19, sp, #0x160
    abe4:	mov	x0, x27
    abe8:	mov	x1, x23
    abec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    abf0:	add	x22, sp, #0xd0
    abf4:	mov	x2, x25
    abf8:	mov	x8, x19
    abfc:	mov	x1, x27
    ac00:	mov	x0, x24
    ac04:	mov	w3, #0x0                   	// #0
    ac08:	bl	5598 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    ac0c:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    ac10:	add	x24, sp, #0x100
    ac14:	mov	x1, x26
    ac18:	mov	x0, x24
    ac1c:	add	x27, sp, #0x130
    ac20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ac24:	add	x19, sp, #0x160
    ac28:	mov	x0, x27
    ac2c:	mov	x1, x23
    ac30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ac34:	add	x22, sp, #0xd0
    ac38:	mov	x2, x25
    ac3c:	mov	x8, x19
    ac40:	mov	x1, x27
    ac44:	mov	x0, x24
    ac48:	bl	2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    ac4c:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    ac50:	add	x24, sp, #0x100
    ac54:	mov	x1, x26
    ac58:	mov	x0, x24
    ac5c:	add	x27, sp, #0x130
    ac60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ac64:	add	x19, sp, #0x160
    ac68:	mov	x0, x27
    ac6c:	mov	x1, x23
    ac70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ac74:	add	x22, sp, #0xd0
    ac78:	mov	x2, x25
    ac7c:	mov	x8, x19
    ac80:	mov	x1, x27
    ac84:	mov	x0, x24
    ac88:	bl	4100 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    ac8c:	b	a758 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    ac90:	bl	0 <_ZN4llvm4dbgsEv>
    ac94:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ac98:	add	x1, x1, #0x0
    ac9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aca0:	mov	x1, x0
    aca4:	mov	w2, #0x0                   	// #0
    aca8:	mov	x0, x20
    acac:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    acb0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    acb4:	mov	w2, #0x2a1                 	// #673
    acb8:	add	x1, x1, #0x0
    acbc:	mov	x0, #0x0                   	// #0
    acc0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    acc4:	nop

000000000000acc8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>:
    acc8:	stp	x29, x30, [sp, #-368]!
    accc:	mov	x29, sp
    acd0:	stp	x19, x20, [sp, #16]
    acd4:	mov	x20, x1
    acd8:	mov	x19, x0
    acdc:	stp	x21, x22, [sp, #32]
    ace0:	add	x22, sp, #0xb0
    ace4:	ldur	x1, [x1, #-48]
    ace8:	stp	x23, x24, [sp, #48]
    acec:	add	x23, sp, #0x80
    acf0:	ldr	x21, [x0, #704]
    acf4:	mov	x8, x23
    acf8:	stp	x25, x26, [sp, #64]
    acfc:	sub	x21, x21, #0x80
    ad00:	mov	x2, x21
    ad04:	ldr	x24, [x1]
    ad08:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ad0c:	ldur	x1, [x20, #-24]
    ad10:	mov	x0, x19
    ad14:	mov	x2, x21
    ad18:	mov	x8, x22
    ad1c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ad20:	ldrb	w1, [x24, #8]
    ad24:	mov	w0, #0x1                   	// #1
    ad28:	stp	xzr, xzr, [sp, #224]
    ad2c:	cmp	w1, #0x10
    ad30:	str	w0, [sp, #240]
    ad34:	stp	xzr, xzr, [sp, #248]
    ad38:	str	xzr, [sp, #264]
    ad3c:	b.eq	b00c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x344>  // b.none
    ad40:	ldrb	w0, [x20, #16]
    ad44:	sub	w0, w0, #0x18
    ad48:	cmp	w0, #0x14
    ad4c:	b.eq	ba5c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd94>  // b.none
    ad50:	b.hi	ae00 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x138>  // b.pmore
    ad54:	cmp	w0, #0x10
    ad58:	b.eq	bac4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xdfc>  // b.none
    ad5c:	b.ls	ae54 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x18c>  // b.plast
    ad60:	cmp	w0, #0x12
    ad64:	b.eq	b7d4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb0c>  // b.none
    ad68:	cmp	w0, #0x13
    ad6c:	b.ne	af94 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2cc>  // b.any
    ad70:	add	x19, sp, #0x140
    ad74:	add	x1, x22, #0x8
    ad78:	mov	x8, x19
    ad7c:	add	x0, x23, #0x8
    ad80:	add	x25, sp, #0xe0
    ad84:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    ad88:	mov	x1, x19
    ad8c:	add	x0, x25, #0x8
    ad90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ad94:	ldr	w0, [sp, #328]
    ad98:	cmp	w0, #0x40
    ad9c:	b.ls	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>  // b.plast
    ada0:	ldr	x0, [sp, #320]
    ada4:	cbz	x0, adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    ada8:	bl	0 <_ZdaPv>
    adac:	mov	x1, x25
    adb0:	mov	x0, x19
    adb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    adb8:	mov	x2, x21
    adbc:	mov	x1, x19
    adc0:	mov	x0, x20
    adc4:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    adc8:	mov	x0, x19
    adcc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    add0:	mov	x0, x25
    add4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    add8:	mov	x0, x22
    addc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ade0:	mov	x0, x23
    ade4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ade8:	ldp	x19, x20, [sp, #16]
    adec:	ldp	x21, x22, [sp, #32]
    adf0:	ldp	x23, x24, [sp, #48]
    adf4:	ldp	x25, x26, [sp, #64]
    adf8:	ldp	x29, x30, [sp], #368
    adfc:	ret
    ae00:	cmp	w0, #0x18
    ae04:	b.eq	ba78 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xdb0>  // b.none
    ae08:	b.ls	aef0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x228>  // b.plast
    ae0c:	cmp	w0, #0x1d
    ae10:	b.eq	b818 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb50>  // b.none
    ae14:	cmp	w0, #0x1e
    ae18:	b.ne	af1c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x254>  // b.any
    ae1c:	ldr	w2, [sp, #144]
    ae20:	str	w2, [sp, #280]
    ae24:	cmp	w2, #0x40
    ae28:	b.hi	b924 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc5c>  // b.pmore
    ae2c:	ldr	x0, [sp, #136]
    ae30:	str	x0, [sp, #272]
    ae34:	ldr	w0, [sp, #192]
    ae38:	cmp	w0, w2
    ae3c:	b.ne	c1d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1510>  // b.any
    ae40:	ldr	x0, [sp, #184]
    ae44:	ldr	x3, [sp, #272]
    ae48:	eor	x3, x3, x0
    ae4c:	str	x3, [sp, #272]
    ae50:	b	b84c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    ae54:	stp	x27, x28, [sp, #80]
    ae58:	cmp	w0, #0xe
    ae5c:	b.eq	b77c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xab4>  // b.none
    ae60:	cmp	w0, #0xf
    ae64:	b.ne	af5c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x294>  // b.any
    ae68:	ldr	w0, [sp, #144]
    ae6c:	str	w0, [sp, #280]
    ae70:	cmp	w0, #0x40
    ae74:	b.hi	b8b4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbec>  // b.pmore
    ae78:	add	x27, sp, #0x110
    ae7c:	ldr	x0, [sp, #136]
    ae80:	str	x0, [sp, #272]
    ae84:	mov	x0, x27
    ae88:	add	x1, x22, #0x8
    ae8c:	add	x19, sp, #0x140
    ae90:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    ae94:	ldr	w2, [sp, #280]
    ae98:	add	x25, sp, #0xe0
    ae9c:	ldr	x3, [sp, #272]
    aea0:	mov	x1, x19
    aea4:	add	x0, x25, #0x8
    aea8:	str	wzr, [sp, #280]
    aeac:	str	x3, [sp, #320]
    aeb0:	str	w2, [sp, #328]
    aeb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aeb8:	ldr	w0, [sp, #328]
    aebc:	cmp	w0, #0x40
    aec0:	b.ls	aed0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x208>  // b.plast
    aec4:	ldr	x0, [sp, #320]
    aec8:	cbz	x0, aed0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x208>
    aecc:	bl	0 <_ZdaPv>
    aed0:	ldr	w0, [sp, #280]
    aed4:	cmp	w0, #0x40
    aed8:	b.ls	b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    aedc:	ldr	x0, [sp, #272]
    aee0:	cbz	x0, b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>
    aee4:	bl	0 <_ZdaPv>
    aee8:	ldp	x27, x28, [sp, #80]
    aeec:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    aef0:	cmp	w0, #0x16
    aef4:	b.eq	b760 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa98>  // b.none
    aef8:	cmp	w0, #0x17
    aefc:	b.ne	afb8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2f0>  // b.any
    af00:	add	x19, sp, #0x140
    af04:	add	x1, x22, #0x8
    af08:	mov	x8, x19
    af0c:	add	x0, x23, #0x8
    af10:	add	x25, sp, #0xe0
    af14:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    af18:	b	ad88 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    af1c:	cmp	w0, #0x1c
    af20:	b.ne	c120 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1458>  // b.any
    af24:	ldr	w2, [sp, #144]
    af28:	str	w2, [sp, #280]
    af2c:	cmp	w2, #0x40
    af30:	b.hi	b8dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc14>  // b.pmore
    af34:	ldr	x0, [sp, #136]
    af38:	str	x0, [sp, #272]
    af3c:	ldr	w0, [sp, #192]
    af40:	cmp	w0, w2
    af44:	b.ne	c1b4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14ec>  // b.any
    af48:	ldr	x0, [sp, #184]
    af4c:	ldr	x3, [sp, #272]
    af50:	and	x3, x3, x0
    af54:	str	x3, [sp, #272]
    af58:	b	b84c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    af5c:	cmp	w0, #0xd
    af60:	b.ne	c124 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x145c>  // b.any
    af64:	ldr	w0, [sp, #144]
    af68:	str	w0, [sp, #280]
    af6c:	cmp	w0, #0x40
    af70:	b.hi	b8c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc00>  // b.pmore
    af74:	add	x27, sp, #0x110
    af78:	ldr	x0, [sp, #136]
    af7c:	str	x0, [sp, #272]
    af80:	mov	x0, x27
    af84:	add	x1, x22, #0x8
    af88:	add	x19, sp, #0x140
    af8c:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    af90:	b	ae94 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1cc>
    af94:	cmp	w0, #0x11
    af98:	b.ne	c120 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1458>  // b.any
    af9c:	add	x19, sp, #0x140
    afa0:	add	x1, x22, #0x8
    afa4:	mov	x8, x19
    afa8:	add	x0, x23, #0x8
    afac:	add	x25, sp, #0xe0
    afb0:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    afb4:	b	ad88 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    afb8:	stp	x27, x28, [sp, #80]
    afbc:	cmp	w0, #0x15
    afc0:	b.ne	c124 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x145c>  // b.any
    afc4:	add	x27, sp, #0x110
    afc8:	mov	x1, x23
    afcc:	mov	x0, x27
    afd0:	add	x19, sp, #0x140
    afd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afd8:	mov	x0, x19
    afdc:	mov	x1, x22
    afe0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afe4:	ldrb	w0, [x24, #8]
    afe8:	cmp	w0, #0x2
    afec:	b.eq	b8a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbd8>  // b.none
    aff0:	cmp	w0, #0x3
    aff4:	b.ne	c32c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1664>  // b.any
    aff8:	ldr	d0, [sp, #272]
    affc:	ldr	d1, [sp, #320]
    b000:	fdiv	d0, d0, d1
    b004:	str	d0, [sp, #224]
    b008:	b	b7b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    b00c:	ldp	x1, x0, [sp, #152]
    b010:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b014:	ldp	x3, x2, [sp, #200]
    b018:	movk	x19, #0xaaab
    b01c:	sub	x0, x0, x1
    b020:	asr	x1, x0, #4
    b024:	sub	x2, x2, x3
    b028:	cmp	x2, x0
    b02c:	mul	x1, x1, x19
    b030:	b.ne	c190 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14c8>  // b.any
    b034:	add	x25, sp, #0xe0
    b038:	add	x0, x25, #0x18
    b03c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b040:	ldrb	w0, [x20, #16]
    b044:	sub	w0, w0, #0x18
    b048:	cmp	w0, #0x14
    b04c:	b.eq	bdb0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x10e8>  // b.none
    b050:	b.hi	b108 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x440>  // b.pmore
    b054:	cmp	w0, #0x10
    b058:	b.eq	be48 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1180>  // b.none
    b05c:	b.ls	b4d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x810>  // b.plast
    b060:	cmp	w0, #0x12
    b064:	b.eq	bec8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1200>  // b.none
    b068:	stp	x27, x28, [sp, #80]
    b06c:	cmp	w0, #0x13
    b070:	b.ne	b438 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x770>  // b.any
    b074:	ldp	x27, x0, [sp, #248]
    b078:	cmp	x0, x27
    b07c:	b.eq	ba50 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    b080:	mov	x24, x19
    b084:	add	x19, sp, #0x140
    b088:	mov	w28, #0x0                   	// #0
    b08c:	mov	x26, #0x0                   	// #0
    b090:	add	x26, x26, x26, lsl #1
    b094:	mov	x8, x19
    b098:	ldr	x0, [sp, #152]
    b09c:	lsl	x26, x26, #4
    b0a0:	ldr	x1, [sp, #200]
    b0a4:	add	x0, x0, x26
    b0a8:	add	x0, x0, #0x8
    b0ac:	add	x1, x1, x26
    b0b0:	add	x1, x1, #0x8
    b0b4:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    b0b8:	add	x0, x27, x26
    b0bc:	mov	x1, x19
    b0c0:	add	x0, x0, #0x8
    b0c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b0c8:	ldr	w0, [sp, #328]
    b0cc:	cmp	w0, #0x40
    b0d0:	b.ls	b0e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x418>  // b.plast
    b0d4:	ldr	x0, [sp, #320]
    b0d8:	cbz	x0, b0e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x418>
    b0dc:	bl	0 <_ZdaPv>
    b0e0:	ldp	x27, x0, [sp, #248]
    b0e4:	add	w26, w28, #0x1
    b0e8:	mov	x28, x26
    b0ec:	sub	x0, x0, x27
    b0f0:	asr	x0, x0, #4
    b0f4:	mul	x0, x0, x24
    b0f8:	cmp	x0, w26, uxtw
    b0fc:	b.hi	b090 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3c8>  // b.pmore
    b100:	ldp	x27, x28, [sp, #80]
    b104:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b108:	cmp	w0, #0x18
    b10c:	b.eq	b9d0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd08>  // b.none
    b110:	b.ls	b38c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6c4>  // b.plast
    b114:	cmp	w0, #0x1d
    b118:	b.eq	bc80 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xfb8>  // b.none
    b11c:	cmp	w0, #0x1e
    b120:	b.ne	b254 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x58c>  // b.any
    b124:	ldp	x0, x1, [sp, #248]
    b128:	cmp	x0, x1
    b12c:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    b130:	mov	w26, #0x0                   	// #0
    b134:	mov	x1, #0x0                   	// #0
    b138:	stp	x27, x28, [sp, #80]
    b13c:	add	x28, sp, #0x70
    b140:	add	x27, sp, #0x140
    b144:	str	x19, [sp, #104]
    b148:	b	b1e8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x520>
    b14c:	ldr	x1, [sp, #200]
    b150:	ldr	x4, [x4, #8]
    b154:	add	x1, x1, x19
    b158:	add	x1, x1, #0x8
    b15c:	ldr	w0, [x1, #8]
    b160:	str	x4, [sp, #112]
    b164:	cmp	w0, w3
    b168:	b.ne	c1dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1514>  // b.any
    b16c:	ldr	x0, [x1]
    b170:	eor	x4, x4, x0
    b174:	str	x4, [sp, #112]
    b178:	mov	x0, x24
    b17c:	mov	x1, x27
    b180:	str	wzr, [sp, #120]
    b184:	mov	x19, x27
    b188:	str	x4, [sp, #320]
    b18c:	str	w3, [sp, #328]
    b190:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b194:	ldr	w0, [sp, #328]
    b198:	cmp	w0, #0x40
    b19c:	b.ls	b1ac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4e4>  // b.plast
    b1a0:	ldr	x0, [sp, #320]
    b1a4:	cbz	x0, b1ac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4e4>
    b1a8:	bl	0 <_ZdaPv>
    b1ac:	ldr	w0, [sp, #120]
    b1b0:	cmp	w0, #0x40
    b1b4:	b.ls	b1c4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4fc>  // b.plast
    b1b8:	ldr	x0, [sp, #112]
    b1bc:	cbz	x0, b1c4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4fc>
    b1c0:	bl	0 <_ZdaPv>
    b1c4:	ldp	x0, x2, [sp, #248]
    b1c8:	add	w1, w26, #0x1
    b1cc:	ldr	x3, [sp, #104]
    b1d0:	mov	x26, x1
    b1d4:	sub	x2, x2, x0
    b1d8:	asr	x2, x2, #4
    b1dc:	mul	x2, x2, x3
    b1e0:	cmp	x2, w1, uxtw
    b1e4:	b.ls	b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    b1e8:	add	x1, x1, x1, lsl #1
    b1ec:	ldr	x4, [sp, #152]
    b1f0:	lsl	x19, x1, #4
    b1f4:	add	x0, x0, x19
    b1f8:	add	x4, x4, x19
    b1fc:	add	x24, x0, #0x8
    b200:	add	x1, x4, #0x8
    b204:	ldr	w3, [x1, #8]
    b208:	str	w3, [sp, #120]
    b20c:	cmp	w3, #0x40
    b210:	b.ls	b14c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x484>  // b.plast
    b214:	mov	x0, x28
    b218:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b21c:	ldr	x1, [sp, #200]
    b220:	ldr	w3, [sp, #120]
    b224:	add	x1, x1, x19
    b228:	add	x1, x1, #0x8
    b22c:	ldr	w0, [x1, #8]
    b230:	cmp	w3, w0
    b234:	b.ne	c1dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1514>  // b.any
    b238:	cmp	w3, #0x40
    b23c:	b.ls	c284 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15bc>  // b.plast
    b240:	mov	x0, x28
    b244:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    b248:	ldr	w3, [sp, #120]
    b24c:	ldr	x4, [sp, #112]
    b250:	b	b178 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4b0>
    b254:	cmp	w0, #0x1c
    b258:	b.ne	c158 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1490>  // b.any
    b25c:	ldp	x0, x1, [sp, #248]
    b260:	cmp	x0, x1
    b264:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    b268:	add	x26, sp, #0x140
    b26c:	mov	w24, #0x0                   	// #0
    b270:	mov	x1, #0x0                   	// #0
    b274:	stp	x27, x28, [sp, #80]
    b278:	add	x28, sp, #0x70
    b27c:	b	b320 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x658>
    b280:	ldr	x1, [sp, #200]
    b284:	ldr	x4, [x4, #8]
    b288:	add	x1, x1, x19
    b28c:	add	x1, x1, #0x8
    b290:	ldr	w0, [x1, #8]
    b294:	str	x4, [sp, #112]
    b298:	cmp	w0, w3
    b29c:	b.ne	c1b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14f0>  // b.any
    b2a0:	ldr	x0, [x1]
    b2a4:	and	x4, x4, x0
    b2a8:	str	x4, [sp, #112]
    b2ac:	mov	x0, x27
    b2b0:	mov	x1, x26
    b2b4:	str	wzr, [sp, #120]
    b2b8:	mov	x19, x26
    b2bc:	str	x4, [sp, #320]
    b2c0:	str	w3, [sp, #328]
    b2c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b2c8:	ldr	w0, [sp, #328]
    b2cc:	cmp	w0, #0x40
    b2d0:	b.ls	b2e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x618>  // b.plast
    b2d4:	ldr	x0, [sp, #320]
    b2d8:	cbz	x0, b2e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x618>
    b2dc:	bl	0 <_ZdaPv>
    b2e0:	ldr	w0, [sp, #120]
    b2e4:	cmp	w0, #0x40
    b2e8:	b.ls	b2f8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x630>  // b.plast
    b2ec:	ldr	x0, [sp, #112]
    b2f0:	cbz	x0, b2f8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x630>
    b2f4:	bl	0 <_ZdaPv>
    b2f8:	ldp	x0, x2, [sp, #248]
    b2fc:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b300:	movk	x3, #0xaaab
    b304:	add	w1, w24, #0x1
    b308:	mov	x24, x1
    b30c:	sub	x2, x2, x0
    b310:	asr	x2, x2, #4
    b314:	mul	x2, x2, x3
    b318:	cmp	x2, w1, uxtw
    b31c:	b.ls	b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    b320:	add	x1, x1, x1, lsl #1
    b324:	ldr	x4, [sp, #152]
    b328:	lsl	x19, x1, #4
    b32c:	add	x0, x0, x19
    b330:	add	x4, x4, x19
    b334:	add	x27, x0, #0x8
    b338:	add	x1, x4, #0x8
    b33c:	ldr	w3, [x1, #8]
    b340:	str	w3, [sp, #120]
    b344:	cmp	w3, #0x40
    b348:	b.ls	b280 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5b8>  // b.plast
    b34c:	mov	x0, x28
    b350:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b354:	ldr	x1, [sp, #200]
    b358:	ldr	w3, [sp, #120]
    b35c:	add	x1, x1, x19
    b360:	add	x1, x1, #0x8
    b364:	ldr	w0, [x1, #8]
    b368:	cmp	w3, w0
    b36c:	b.ne	c1b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14f0>  // b.any
    b370:	cmp	w3, #0x40
    b374:	b.ls	c27c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15b4>  // b.plast
    b378:	mov	x0, x28
    b37c:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    b380:	ldr	w3, [sp, #120]
    b384:	ldr	x4, [sp, #112]
    b388:	b	b2ac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5e4>
    b38c:	cmp	w0, #0x16
    b390:	b.eq	bb5c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe94>  // b.none
    b394:	cmp	w0, #0x17
    b398:	b.ne	b5d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x910>  // b.any
    b39c:	stp	x27, x28, [sp, #80]
    b3a0:	ldp	x27, x0, [sp, #248]
    b3a4:	cmp	x27, x0
    b3a8:	b.eq	ba50 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    b3ac:	mov	x24, x19
    b3b0:	add	x19, sp, #0x140
    b3b4:	mov	w28, #0x0                   	// #0
    b3b8:	mov	x26, #0x0                   	// #0
    b3bc:	nop
    b3c0:	add	x26, x26, x26, lsl #1
    b3c4:	mov	x8, x19
    b3c8:	ldr	x0, [sp, #152]
    b3cc:	lsl	x26, x26, #4
    b3d0:	ldr	x1, [sp, #200]
    b3d4:	add	x0, x0, x26
    b3d8:	add	x0, x0, #0x8
    b3dc:	add	x1, x1, x26
    b3e0:	add	x1, x1, #0x8
    b3e4:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    b3e8:	add	x0, x27, x26
    b3ec:	mov	x1, x19
    b3f0:	add	x0, x0, #0x8
    b3f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b3f8:	ldr	w0, [sp, #328]
    b3fc:	cmp	w0, #0x40
    b400:	b.ls	b410 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x748>  // b.plast
    b404:	ldr	x0, [sp, #320]
    b408:	cbz	x0, b410 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x748>
    b40c:	bl	0 <_ZdaPv>
    b410:	ldp	x27, x0, [sp, #248]
    b414:	add	w26, w28, #0x1
    b418:	mov	x28, x26
    b41c:	sub	x0, x0, x27
    b420:	asr	x0, x0, #4
    b424:	mul	x0, x0, x24
    b428:	cmp	x0, w26, uxtw
    b42c:	b.hi	b3c0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6f8>  // b.pmore
    b430:	ldp	x27, x28, [sp, #80]
    b434:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b438:	cmp	w0, #0x11
    b43c:	b.ne	c15c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1494>  // b.any
    b440:	ldp	x27, x0, [sp, #248]
    b444:	add	x19, sp, #0x140
    b448:	cmp	x0, x27
    b44c:	b.eq	b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.none
    b450:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b454:	mov	w28, #0x0                   	// #0
    b458:	mov	x24, #0x0                   	// #0
    b45c:	movk	x26, #0xaaab
    b460:	add	x24, x24, x24, lsl #1
    b464:	mov	x8, x19
    b468:	ldr	x0, [sp, #152]
    b46c:	lsl	x24, x24, #4
    b470:	ldr	x1, [sp, #200]
    b474:	add	x0, x0, x24
    b478:	add	x0, x0, #0x8
    b47c:	add	x1, x1, x24
    b480:	add	x1, x1, #0x8
    b484:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    b488:	add	x0, x27, x24
    b48c:	mov	x1, x19
    b490:	add	x0, x0, #0x8
    b494:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b498:	ldr	w0, [sp, #328]
    b49c:	cmp	w0, #0x40
    b4a0:	b.ls	b4b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x7e8>  // b.plast
    b4a4:	ldr	x0, [sp, #320]
    b4a8:	cbz	x0, b4b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x7e8>
    b4ac:	bl	0 <_ZdaPv>
    b4b0:	ldp	x27, x0, [sp, #248]
    b4b4:	add	w24, w28, #0x1
    b4b8:	mov	x28, x24
    b4bc:	sub	x0, x0, x27
    b4c0:	asr	x0, x0, #4
    b4c4:	mul	x0, x0, x26
    b4c8:	cmp	x0, w24, uxtw
    b4cc:	b.hi	b460 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x798>  // b.pmore
    b4d0:	ldp	x27, x28, [sp, #80]
    b4d4:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b4d8:	cmp	w0, #0xe
    b4dc:	b.eq	bbf8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf30>  // b.none
    b4e0:	cmp	w0, #0xf
    b4e4:	b.ne	b668 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9a0>  // b.any
    b4e8:	ldp	x0, x1, [sp, #248]
    b4ec:	cmp	x1, x0
    b4f0:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    b4f4:	mov	w24, #0x0                   	// #0
    b4f8:	mov	x26, #0x0                   	// #0
    b4fc:	stp	x27, x28, [sp, #80]
    b500:	add	x27, sp, #0x110
    b504:	str	x19, [sp, #104]
    b508:	add	x19, sp, #0x140
    b50c:	b	b5a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8d8>
    b510:	ldr	x0, [x2, #8]
    b514:	str	x0, [sp, #272]
    b518:	ldr	x1, [sp, #200]
    b51c:	mov	x0, x27
    b520:	add	x1, x1, x26
    b524:	add	x1, x1, #0x8
    b528:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    b52c:	ldr	w2, [sp, #280]
    b530:	mov	x0, x28
    b534:	ldr	x4, [sp, #272]
    b538:	mov	x1, x19
    b53c:	str	wzr, [sp, #280]
    b540:	str	x4, [sp, #320]
    b544:	str	w2, [sp, #328]
    b548:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b54c:	ldr	w0, [sp, #328]
    b550:	cmp	w0, #0x40
    b554:	b.ls	b564 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x89c>  // b.plast
    b558:	ldr	x0, [sp, #320]
    b55c:	cbz	x0, b564 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x89c>
    b560:	bl	0 <_ZdaPv>
    b564:	ldr	w0, [sp, #280]
    b568:	cmp	w0, #0x40
    b56c:	b.ls	b57c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8b4>  // b.plast
    b570:	ldr	x0, [sp, #272]
    b574:	cbz	x0, b57c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8b4>
    b578:	bl	0 <_ZdaPv>
    b57c:	ldp	x0, x1, [sp, #248]
    b580:	add	w26, w24, #0x1
    b584:	ldr	x2, [sp, #104]
    b588:	mov	x24, x26
    b58c:	sub	x1, x1, x0
    b590:	asr	x1, x1, #4
    b594:	mul	x1, x1, x2
    b598:	cmp	x1, w26, uxtw
    b59c:	b.ls	b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    b5a0:	add	x26, x26, x26, lsl #1
    b5a4:	ldr	x2, [sp, #152]
    b5a8:	lsl	x26, x26, #4
    b5ac:	add	x0, x0, x26
    b5b0:	add	x2, x2, x26
    b5b4:	add	x28, x0, #0x8
    b5b8:	add	x1, x2, #0x8
    b5bc:	ldr	w0, [x1, #8]
    b5c0:	str	w0, [sp, #280]
    b5c4:	cmp	w0, #0x40
    b5c8:	b.ls	b510 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x848>  // b.plast
    b5cc:	mov	x0, x27
    b5d0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b5d4:	b	b518 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x850>
    b5d8:	cmp	w0, #0x15
    b5dc:	b.ne	c158 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1490>  // b.any
    b5e0:	mov	x0, x24
    b5e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b5e8:	ldr	x0, [x0, #24]
    b5ec:	ldrb	w0, [x0, #8]
    b5f0:	cmp	w0, #0x2
    b5f4:	b.eq	b96c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xca4>  // b.none
    b5f8:	cmp	w0, #0x3
    b5fc:	b.ne	c334 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x166c>  // b.any
    b600:	ldp	x3, x0, [sp, #248]
    b604:	cmp	x3, x0
    b608:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    b60c:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b610:	mov	w2, #0x0                   	// #0
    b614:	mov	x1, #0x0                   	// #0
    b618:	movk	x6, #0xaaab
    b61c:	nop
    b620:	add	x1, x1, x1, lsl #1
    b624:	add	w2, w2, #0x1
    b628:	ldr	x5, [sp, #152]
    b62c:	lsl	x0, x1, #4
    b630:	ldr	x4, [sp, #200]
    b634:	mov	w1, w2
    b638:	ldr	d0, [x5, x0]
    b63c:	ldr	d1, [x4, x0]
    b640:	fdiv	d0, d0, d1
    b644:	str	d0, [x3, x0]
    b648:	ldp	x3, x0, [sp, #248]
    b64c:	sub	x0, x0, x3
    b650:	asr	x0, x0, #4
    b654:	mul	x0, x0, x6
    b658:	cmp	x0, w2, uxtw
    b65c:	b.hi	b620 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x958>  // b.pmore
    b660:	add	x19, sp, #0x140
    b664:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b668:	cmp	w0, #0xd
    b66c:	b.ne	c158 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1490>  // b.any
    b670:	ldp	x0, x1, [sp, #248]
    b674:	cmp	x0, x1
    b678:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    b67c:	add	x19, sp, #0x140
    b680:	mov	w26, #0x0                   	// #0
    b684:	mov	x24, #0x0                   	// #0
    b688:	stp	x27, x28, [sp, #80]
    b68c:	add	x27, sp, #0x110
    b690:	b	b728 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa60>
    b694:	ldr	x0, [x2, #8]
    b698:	str	x0, [sp, #272]
    b69c:	ldr	x1, [sp, #200]
    b6a0:	mov	x0, x27
    b6a4:	add	x1, x1, x24
    b6a8:	add	x1, x1, #0x8
    b6ac:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    b6b0:	ldr	w2, [sp, #280]
    b6b4:	mov	x0, x28
    b6b8:	ldr	x4, [sp, #272]
    b6bc:	mov	x1, x19
    b6c0:	str	wzr, [sp, #280]
    b6c4:	str	x4, [sp, #320]
    b6c8:	str	w2, [sp, #328]
    b6cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b6d0:	ldr	w0, [sp, #328]
    b6d4:	cmp	w0, #0x40
    b6d8:	b.ls	b6e8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa20>  // b.plast
    b6dc:	ldr	x0, [sp, #320]
    b6e0:	cbz	x0, b6e8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa20>
    b6e4:	bl	0 <_ZdaPv>
    b6e8:	ldr	w0, [sp, #280]
    b6ec:	cmp	w0, #0x40
    b6f0:	b.ls	b700 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa38>  // b.plast
    b6f4:	ldr	x0, [sp, #272]
    b6f8:	cbz	x0, b700 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa38>
    b6fc:	bl	0 <_ZdaPv>
    b700:	ldp	x0, x1, [sp, #248]
    b704:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b708:	movk	x2, #0xaaab
    b70c:	add	w24, w26, #0x1
    b710:	mov	x26, x24
    b714:	sub	x1, x1, x0
    b718:	asr	x1, x1, #4
    b71c:	mul	x1, x1, x2
    b720:	cmp	x1, w24, uxtw
    b724:	b.ls	b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    b728:	add	x24, x24, x24, lsl #1
    b72c:	ldr	x2, [sp, #152]
    b730:	lsl	x24, x24, #4
    b734:	add	x0, x0, x24
    b738:	add	x2, x2, x24
    b73c:	add	x28, x0, #0x8
    b740:	add	x1, x2, #0x8
    b744:	ldr	w0, [x1, #8]
    b748:	str	w0, [sp, #280]
    b74c:	cmp	w0, #0x40
    b750:	b.ls	b694 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9cc>  // b.plast
    b754:	mov	x0, x27
    b758:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b75c:	b	b69c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9d4>
    b760:	add	x19, sp, #0x140
    b764:	add	x1, x22, #0x8
    b768:	mov	x8, x19
    b76c:	add	x0, x23, #0x8
    b770:	add	x25, sp, #0xe0
    b774:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    b778:	b	ad88 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    b77c:	add	x27, sp, #0x110
    b780:	mov	x1, x23
    b784:	mov	x0, x27
    b788:	add	x19, sp, #0x140
    b78c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b790:	mov	x0, x19
    b794:	mov	x1, x22
    b798:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b79c:	ldrb	w0, [x24, #8]
    b7a0:	cmp	w0, #0x2
    b7a4:	b.ne	bb08 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe40>  // b.any
    b7a8:	ldr	s0, [sp, #272]
    b7ac:	ldr	s1, [sp, #320]
    b7b0:	fadd	s0, s0, s1
    b7b4:	str	s0, [sp, #224]
    b7b8:	mov	x0, x19
    b7bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b7c0:	mov	x0, x27
    b7c4:	add	x25, sp, #0xe0
    b7c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b7cc:	ldp	x27, x28, [sp, #80]
    b7d0:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b7d4:	stp	x27, x28, [sp, #80]
    b7d8:	add	x27, sp, #0x110
    b7dc:	mov	x1, x23
    b7e0:	mov	x0, x27
    b7e4:	add	x19, sp, #0x140
    b7e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b7ec:	mov	x0, x19
    b7f0:	mov	x1, x22
    b7f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b7f8:	ldrb	w0, [x24, #8]
    b7fc:	cmp	w0, #0x2
    b800:	b.ne	bb24 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe5c>  // b.any
    b804:	ldr	s0, [sp, #272]
    b808:	ldr	s1, [sp, #320]
    b80c:	fmul	s0, s0, s1
    b810:	str	s0, [sp, #224]
    b814:	b	b7b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    b818:	ldr	w2, [sp, #144]
    b81c:	str	w2, [sp, #280]
    b820:	cmp	w2, #0x40
    b824:	b.hi	bf50 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1288>  // b.pmore
    b828:	ldr	x0, [sp, #136]
    b82c:	str	x0, [sp, #272]
    b830:	ldr	w0, [sp, #192]
    b834:	cmp	w0, w2
    b838:	b.ne	c1fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1534>  // b.any
    b83c:	ldr	x0, [sp, #184]
    b840:	ldr	x3, [sp, #272]
    b844:	orr	x3, x3, x0
    b848:	str	x3, [sp, #272]
    b84c:	add	x19, sp, #0x140
    b850:	add	x25, sp, #0xe0
    b854:	mov	x1, x19
    b858:	add	x0, x25, #0x8
    b85c:	str	wzr, [sp, #280]
    b860:	str	x3, [sp, #320]
    b864:	str	w2, [sp, #328]
    b868:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b86c:	ldr	w0, [sp, #328]
    b870:	cmp	w0, #0x40
    b874:	b.ls	b884 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbbc>  // b.plast
    b878:	ldr	x0, [sp, #320]
    b87c:	cbz	x0, b884 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbbc>
    b880:	bl	0 <_ZdaPv>
    b884:	ldr	w0, [sp, #280]
    b888:	cmp	w0, #0x40
    b88c:	b.ls	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>  // b.plast
    b890:	ldr	x0, [sp, #272]
    b894:	cbz	x0, adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b898:	bl	0 <_ZdaPv>
    b89c:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b8a0:	ldr	s0, [sp, #272]
    b8a4:	ldr	s1, [sp, #320]
    b8a8:	fdiv	s0, s0, s1
    b8ac:	str	s0, [sp, #224]
    b8b0:	b	b7b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    b8b4:	add	x27, sp, #0x110
    b8b8:	add	x1, x23, #0x8
    b8bc:	mov	x0, x27
    b8c0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b8c4:	b	ae84 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1bc>
    b8c8:	add	x27, sp, #0x110
    b8cc:	add	x1, x23, #0x8
    b8d0:	mov	x0, x27
    b8d4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b8d8:	b	af80 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2b8>
    b8dc:	stp	x27, x28, [sp, #80]
    b8e0:	add	x27, sp, #0x110
    b8e4:	mov	x0, x27
    b8e8:	add	x1, x23, #0x8
    b8ec:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b8f0:	ldr	w0, [sp, #192]
    b8f4:	ldr	w2, [sp, #280]
    b8f8:	cmp	w2, w0
    b8fc:	b.ne	c1b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14f0>  // b.any
    b900:	cmp	w2, #0x40
    b904:	b.ls	c384 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x16bc>  // b.plast
    b908:	mov	x0, x27
    b90c:	add	x1, x22, #0x8
    b910:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    b914:	ldr	w2, [sp, #280]
    b918:	ldp	x27, x28, [sp, #80]
    b91c:	ldr	x3, [sp, #272]
    b920:	b	b84c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    b924:	stp	x27, x28, [sp, #80]
    b928:	add	x27, sp, #0x110
    b92c:	mov	x0, x27
    b930:	add	x1, x23, #0x8
    b934:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b938:	ldr	w0, [sp, #192]
    b93c:	ldr	w2, [sp, #280]
    b940:	cmp	w2, w0
    b944:	b.ne	c1dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1514>  // b.any
    b948:	cmp	w2, #0x40
    b94c:	b.ls	c38c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x16c4>  // b.plast
    b950:	mov	x0, x27
    b954:	add	x1, x22, #0x8
    b958:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    b95c:	ldr	w2, [sp, #280]
    b960:	ldp	x27, x28, [sp, #80]
    b964:	ldr	x3, [sp, #272]
    b968:	b	b84c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    b96c:	ldp	x3, x0, [sp, #248]
    b970:	cmp	x3, x0
    b974:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    b978:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b97c:	mov	w2, #0x0                   	// #0
    b980:	mov	x1, #0x0                   	// #0
    b984:	movk	x6, #0xaaab
    b988:	add	x1, x1, x1, lsl #1
    b98c:	add	w2, w2, #0x1
    b990:	ldr	x5, [sp, #152]
    b994:	lsl	x0, x1, #4
    b998:	ldr	x4, [sp, #200]
    b99c:	mov	w1, w2
    b9a0:	ldr	s0, [x5, x0]
    b9a4:	ldr	s1, [x4, x0]
    b9a8:	fdiv	s0, s0, s1
    b9ac:	str	s0, [x3, x0]
    b9b0:	ldp	x3, x0, [sp, #248]
    b9b4:	sub	x0, x0, x3
    b9b8:	asr	x0, x0, #4
    b9bc:	mul	x0, x0, x6
    b9c0:	cmp	x0, w2, uxtw
    b9c4:	b.hi	b988 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcc0>  // b.pmore
    b9c8:	add	x19, sp, #0x140
    b9cc:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    b9d0:	mov	x0, x24
    b9d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b9d8:	ldr	x0, [x0, #24]
    b9dc:	ldrb	w0, [x0, #8]
    b9e0:	cmp	w0, #0x2
    b9e4:	b.eq	c0b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x13e8>  // b.none
    b9e8:	stp	x27, x28, [sp, #80]
    b9ec:	cmp	w0, #0x3
    b9f0:	b.ne	c220 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1558>  // b.any
    b9f4:	ldp	x27, x0, [sp, #248]
    b9f8:	mov	x24, x19
    b9fc:	mov	x1, #0x0                   	// #0
    ba00:	mov	w19, #0x0                   	// #0
    ba04:	cmp	x27, x0
    ba08:	b.eq	ba50 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    ba0c:	nop
    ba10:	add	x1, x1, x1, lsl #1
    ba14:	add	w19, w19, #0x1
    ba18:	ldr	x2, [sp, #152]
    ba1c:	lsl	x26, x1, #4
    ba20:	ldr	x0, [sp, #200]
    ba24:	ldr	d0, [x2, x26]
    ba28:	ldr	d1, [x0, x26]
    ba2c:	bl	0 <fmod>
    ba30:	str	d0, [x27, x26]
    ba34:	ldp	x27, x0, [sp, #248]
    ba38:	mov	w1, w19
    ba3c:	sub	x0, x0, x27
    ba40:	asr	x0, x0, #4
    ba44:	mul	x0, x0, x24
    ba48:	cmp	x0, w19, uxtw
    ba4c:	b.hi	ba10 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd48>  // b.pmore
    ba50:	add	x19, sp, #0x140
    ba54:	ldp	x27, x28, [sp, #80]
    ba58:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    ba5c:	add	x19, sp, #0x140
    ba60:	add	x1, x22, #0x8
    ba64:	mov	x8, x19
    ba68:	add	x0, x23, #0x8
    ba6c:	add	x25, sp, #0xe0
    ba70:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    ba74:	b	ad88 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    ba78:	add	x26, sp, #0x110
    ba7c:	add	x19, sp, #0x140
    ba80:	mov	x1, x23
    ba84:	mov	x0, x26
    ba88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba8c:	add	x25, sp, #0xe0
    ba90:	mov	x0, x19
    ba94:	mov	x1, x22
    ba98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba9c:	mov	x3, x24
    baa0:	mov	x2, x19
    baa4:	mov	x1, x26
    baa8:	mov	x0, x25
    baac:	bl	210 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    bab0:	mov	x0, x19
    bab4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bab8:	mov	x0, x26
    babc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bac0:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    bac4:	stp	x27, x28, [sp, #80]
    bac8:	add	x27, sp, #0x110
    bacc:	mov	x1, x23
    bad0:	mov	x0, x27
    bad4:	add	x19, sp, #0x140
    bad8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    badc:	mov	x0, x19
    bae0:	mov	x1, x22
    bae4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bae8:	ldrb	w0, [x24, #8]
    baec:	cmp	w0, #0x2
    baf0:	b.ne	bb40 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe78>  // b.any
    baf4:	ldr	s0, [sp, #272]
    baf8:	ldr	s1, [sp, #320]
    bafc:	fsub	s0, s0, s1
    bb00:	str	s0, [sp, #224]
    bb04:	b	b7b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    bb08:	cmp	w0, #0x3
    bb0c:	b.ne	c3e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x171c>  // b.any
    bb10:	ldr	d0, [sp, #272]
    bb14:	ldr	d1, [sp, #320]
    bb18:	fadd	d0, d0, d1
    bb1c:	str	d0, [sp, #224]
    bb20:	b	b7b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    bb24:	cmp	w0, #0x3
    bb28:	b.ne	c3ec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1724>  // b.any
    bb2c:	ldr	d0, [sp, #272]
    bb30:	ldr	d1, [sp, #320]
    bb34:	fmul	d0, d0, d1
    bb38:	str	d0, [sp, #224]
    bb3c:	b	b7b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    bb40:	cmp	w0, #0x3
    bb44:	b.ne	c26c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15a4>  // b.any
    bb48:	ldr	d0, [sp, #272]
    bb4c:	ldr	d1, [sp, #320]
    bb50:	fsub	d0, d0, d1
    bb54:	str	d0, [sp, #224]
    bb58:	b	b7b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    bb5c:	stp	x27, x28, [sp, #80]
    bb60:	ldp	x27, x0, [sp, #248]
    bb64:	cmp	x27, x0
    bb68:	b.eq	ba50 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    bb6c:	mov	x24, x19
    bb70:	add	x19, sp, #0x140
    bb74:	mov	w28, #0x0                   	// #0
    bb78:	mov	x26, #0x0                   	// #0
    bb7c:	nop
    bb80:	add	x26, x26, x26, lsl #1
    bb84:	mov	x8, x19
    bb88:	ldr	x0, [sp, #152]
    bb8c:	lsl	x26, x26, #4
    bb90:	ldr	x1, [sp, #200]
    bb94:	add	x0, x0, x26
    bb98:	add	x0, x0, #0x8
    bb9c:	add	x1, x1, x26
    bba0:	add	x1, x1, #0x8
    bba4:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    bba8:	add	x0, x27, x26
    bbac:	mov	x1, x19
    bbb0:	add	x0, x0, #0x8
    bbb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bbb8:	ldr	w0, [sp, #328]
    bbbc:	cmp	w0, #0x40
    bbc0:	b.ls	bbd0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf08>  // b.plast
    bbc4:	ldr	x0, [sp, #320]
    bbc8:	cbz	x0, bbd0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf08>
    bbcc:	bl	0 <_ZdaPv>
    bbd0:	ldp	x27, x0, [sp, #248]
    bbd4:	add	w26, w28, #0x1
    bbd8:	mov	x28, x26
    bbdc:	sub	x0, x0, x27
    bbe0:	asr	x0, x0, #4
    bbe4:	mul	x0, x0, x24
    bbe8:	cmp	x0, w26, uxtw
    bbec:	b.hi	bb80 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xeb8>  // b.pmore
    bbf0:	ldp	x27, x28, [sp, #80]
    bbf4:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    bbf8:	mov	x0, x24
    bbfc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bc00:	ldr	x0, [x0, #24]
    bc04:	ldrb	w0, [x0, #8]
    bc08:	cmp	w0, #0x2
    bc0c:	b.eq	bf90 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x12c8>  // b.none
    bc10:	cmp	w0, #0x3
    bc14:	b.ne	c394 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x16cc>  // b.any
    bc18:	ldp	x3, x0, [sp, #248]
    bc1c:	cmp	x3, x0
    bc20:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    bc24:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bc28:	mov	w2, #0x0                   	// #0
    bc2c:	mov	x1, #0x0                   	// #0
    bc30:	movk	x6, #0xaaab
    bc34:	nop
    bc38:	add	x1, x1, x1, lsl #1
    bc3c:	add	w2, w2, #0x1
    bc40:	ldr	x5, [sp, #152]
    bc44:	lsl	x0, x1, #4
    bc48:	ldr	x4, [sp, #200]
    bc4c:	mov	w1, w2
    bc50:	ldr	d0, [x5, x0]
    bc54:	ldr	d1, [x4, x0]
    bc58:	fadd	d0, d0, d1
    bc5c:	str	d0, [x3, x0]
    bc60:	ldp	x3, x0, [sp, #248]
    bc64:	sub	x0, x0, x3
    bc68:	asr	x0, x0, #4
    bc6c:	mul	x0, x0, x6
    bc70:	cmp	x0, w2, uxtw
    bc74:	b.hi	bc38 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf70>  // b.pmore
    bc78:	add	x19, sp, #0x140
    bc7c:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    bc80:	ldp	x0, x1, [sp, #248]
    bc84:	cmp	x0, x1
    bc88:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    bc8c:	mov	w26, #0x0                   	// #0
    bc90:	mov	x1, #0x0                   	// #0
    bc94:	stp	x27, x28, [sp, #80]
    bc98:	add	x28, sp, #0x70
    bc9c:	add	x27, sp, #0x140
    bca0:	str	x19, [sp, #104]
    bca4:	b	bd44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x107c>
    bca8:	ldr	x1, [sp, #200]
    bcac:	ldr	x4, [x4, #8]
    bcb0:	add	x1, x1, x19
    bcb4:	add	x1, x1, #0x8
    bcb8:	ldr	w0, [x1, #8]
    bcbc:	str	x4, [sp, #112]
    bcc0:	cmp	w0, w3
    bcc4:	b.ne	c200 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1538>  // b.any
    bcc8:	ldr	x0, [x1]
    bccc:	orr	x4, x4, x0
    bcd0:	str	x4, [sp, #112]
    bcd4:	mov	x0, x24
    bcd8:	mov	x1, x27
    bcdc:	str	wzr, [sp, #120]
    bce0:	mov	x19, x27
    bce4:	str	x4, [sp, #320]
    bce8:	str	w3, [sp, #328]
    bcec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bcf0:	ldr	w0, [sp, #328]
    bcf4:	cmp	w0, #0x40
    bcf8:	b.ls	bd08 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1040>  // b.plast
    bcfc:	ldr	x0, [sp, #320]
    bd00:	cbz	x0, bd08 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1040>
    bd04:	bl	0 <_ZdaPv>
    bd08:	ldr	w0, [sp, #120]
    bd0c:	cmp	w0, #0x40
    bd10:	b.ls	bd20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1058>  // b.plast
    bd14:	ldr	x0, [sp, #112]
    bd18:	cbz	x0, bd20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1058>
    bd1c:	bl	0 <_ZdaPv>
    bd20:	ldp	x0, x2, [sp, #248]
    bd24:	add	w1, w26, #0x1
    bd28:	ldr	x3, [sp, #104]
    bd2c:	mov	x26, x1
    bd30:	sub	x2, x2, x0
    bd34:	asr	x2, x2, #4
    bd38:	mul	x2, x2, x3
    bd3c:	cmp	x2, w1, uxtw
    bd40:	b.ls	b100 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    bd44:	add	x1, x1, x1, lsl #1
    bd48:	ldr	x4, [sp, #152]
    bd4c:	lsl	x19, x1, #4
    bd50:	add	x0, x0, x19
    bd54:	add	x4, x4, x19
    bd58:	add	x24, x0, #0x8
    bd5c:	add	x1, x4, #0x8
    bd60:	ldr	w3, [x1, #8]
    bd64:	str	w3, [sp, #120]
    bd68:	cmp	w3, #0x40
    bd6c:	b.ls	bca8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xfe0>  // b.plast
    bd70:	mov	x0, x28
    bd74:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    bd78:	ldr	x1, [sp, #200]
    bd7c:	ldr	w3, [sp, #120]
    bd80:	add	x1, x1, x19
    bd84:	add	x1, x1, #0x8
    bd88:	ldr	w0, [x1, #8]
    bd8c:	cmp	w3, w0
    bd90:	b.ne	c200 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1538>  // b.any
    bd94:	cmp	w3, #0x40
    bd98:	b.ls	c274 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15ac>  // b.plast
    bd9c:	mov	x0, x28
    bda0:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    bda4:	ldr	w3, [sp, #120]
    bda8:	ldr	x4, [sp, #112]
    bdac:	b	bcd4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x100c>
    bdb0:	stp	x27, x28, [sp, #80]
    bdb4:	ldp	x27, x0, [sp, #248]
    bdb8:	cmp	x27, x0
    bdbc:	b.eq	ba50 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    bdc0:	mov	x24, x19
    bdc4:	add	x19, sp, #0x140
    bdc8:	mov	w28, #0x0                   	// #0
    bdcc:	mov	x26, #0x0                   	// #0
    bdd0:	add	x26, x26, x26, lsl #1
    bdd4:	mov	x8, x19
    bdd8:	ldr	x0, [sp, #152]
    bddc:	lsl	x26, x26, #4
    bde0:	ldr	x1, [sp, #200]
    bde4:	add	x0, x0, x26
    bde8:	add	x0, x0, #0x8
    bdec:	add	x1, x1, x26
    bdf0:	add	x1, x1, #0x8
    bdf4:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    bdf8:	add	x0, x27, x26
    bdfc:	mov	x1, x19
    be00:	add	x0, x0, #0x8
    be04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be08:	ldr	w0, [sp, #328]
    be0c:	cmp	w0, #0x40
    be10:	b.ls	be20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1158>  // b.plast
    be14:	ldr	x0, [sp, #320]
    be18:	cbz	x0, be20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1158>
    be1c:	bl	0 <_ZdaPv>
    be20:	ldp	x27, x0, [sp, #248]
    be24:	add	w26, w28, #0x1
    be28:	mov	x28, x26
    be2c:	sub	x0, x0, x27
    be30:	asr	x0, x0, #4
    be34:	mul	x0, x0, x24
    be38:	cmp	x0, w26, uxtw
    be3c:	b.hi	bdd0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1108>  // b.pmore
    be40:	ldp	x27, x28, [sp, #80]
    be44:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    be48:	mov	x0, x24
    be4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be50:	ldr	x0, [x0, #24]
    be54:	ldrb	w0, [x0, #8]
    be58:	cmp	w0, #0x2
    be5c:	b.eq	bff0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1328>  // b.none
    be60:	cmp	w0, #0x3
    be64:	b.ne	c28c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15c4>  // b.any
    be68:	ldp	x3, x0, [sp, #248]
    be6c:	mov	x24, x19
    be70:	mov	w2, #0x0                   	// #0
    be74:	mov	x1, #0x0                   	// #0
    be78:	cmp	x3, x0
    be7c:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    be80:	add	x1, x1, x1, lsl #1
    be84:	add	w2, w2, #0x1
    be88:	ldr	x5, [sp, #152]
    be8c:	lsl	x0, x1, #4
    be90:	ldr	x4, [sp, #200]
    be94:	mov	w1, w2
    be98:	ldr	d0, [x5, x0]
    be9c:	ldr	d1, [x4, x0]
    bea0:	fsub	d0, d0, d1
    bea4:	str	d0, [x3, x0]
    bea8:	ldp	x3, x0, [sp, #248]
    beac:	sub	x0, x0, x3
    beb0:	asr	x0, x0, #4
    beb4:	mul	x0, x0, x24
    beb8:	cmp	x0, w2, uxtw
    bebc:	b.hi	be80 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x11b8>  // b.pmore
    bec0:	add	x19, sp, #0x140
    bec4:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    bec8:	mov	x0, x24
    becc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bed0:	ldr	x0, [x0, #24]
    bed4:	ldrb	w0, [x0, #8]
    bed8:	cmp	w0, #0x2
    bedc:	b.eq	c050 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1388>  // b.none
    bee0:	cmp	w0, #0x3
    bee4:	b.ne	c2dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1614>  // b.any
    bee8:	ldp	x3, x0, [sp, #248]
    beec:	cmp	x0, x3
    bef0:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    bef4:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bef8:	mov	w2, #0x0                   	// #0
    befc:	mov	x1, #0x0                   	// #0
    bf00:	movk	x6, #0xaaab
    bf04:	nop
    bf08:	add	x1, x1, x1, lsl #1
    bf0c:	add	w2, w2, #0x1
    bf10:	ldr	x5, [sp, #152]
    bf14:	lsl	x0, x1, #4
    bf18:	ldr	x4, [sp, #200]
    bf1c:	mov	w1, w2
    bf20:	ldr	d0, [x5, x0]
    bf24:	ldr	d1, [x4, x0]
    bf28:	fmul	d0, d0, d1
    bf2c:	str	d0, [x3, x0]
    bf30:	ldp	x3, x0, [sp, #248]
    bf34:	sub	x0, x0, x3
    bf38:	asr	x0, x0, #4
    bf3c:	mul	x0, x0, x6
    bf40:	cmp	x0, w2, uxtw
    bf44:	b.hi	bf08 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1240>  // b.pmore
    bf48:	add	x19, sp, #0x140
    bf4c:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    bf50:	add	x19, sp, #0x110
    bf54:	add	x1, x23, #0x8
    bf58:	mov	x0, x19
    bf5c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    bf60:	ldr	w0, [sp, #192]
    bf64:	ldr	w2, [sp, #280]
    bf68:	cmp	w2, w0
    bf6c:	b.ne	c1fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1534>  // b.any
    bf70:	cmp	w2, #0x40
    bf74:	b.ls	b83c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb74>  // b.plast
    bf78:	mov	x0, x19
    bf7c:	add	x1, x22, #0x8
    bf80:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    bf84:	ldr	w2, [sp, #280]
    bf88:	ldr	x3, [sp, #272]
    bf8c:	b	b84c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    bf90:	ldp	x3, x0, [sp, #248]
    bf94:	mov	x24, x19
    bf98:	mov	w2, #0x0                   	// #0
    bf9c:	mov	x1, #0x0                   	// #0
    bfa0:	cmp	x0, x3
    bfa4:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    bfa8:	add	x1, x1, x1, lsl #1
    bfac:	add	w2, w2, #0x1
    bfb0:	ldr	x5, [sp, #152]
    bfb4:	lsl	x0, x1, #4
    bfb8:	ldr	x4, [sp, #200]
    bfbc:	mov	w1, w2
    bfc0:	ldr	s0, [x5, x0]
    bfc4:	ldr	s1, [x4, x0]
    bfc8:	fadd	s0, s0, s1
    bfcc:	str	s0, [x3, x0]
    bfd0:	ldp	x3, x0, [sp, #248]
    bfd4:	sub	x0, x0, x3
    bfd8:	asr	x0, x0, #4
    bfdc:	mul	x0, x0, x24
    bfe0:	cmp	x0, w2, uxtw
    bfe4:	b.hi	bfa8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x12e0>  // b.pmore
    bfe8:	add	x19, sp, #0x140
    bfec:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    bff0:	ldp	x3, x0, [sp, #248]
    bff4:	mov	x24, x19
    bff8:	mov	w2, #0x0                   	// #0
    bffc:	mov	x1, #0x0                   	// #0
    c000:	cmp	x0, x3
    c004:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    c008:	add	x1, x1, x1, lsl #1
    c00c:	add	w2, w2, #0x1
    c010:	ldr	x5, [sp, #152]
    c014:	lsl	x0, x1, #4
    c018:	ldr	x4, [sp, #200]
    c01c:	mov	w1, w2
    c020:	ldr	s0, [x5, x0]
    c024:	ldr	s1, [x4, x0]
    c028:	fsub	s0, s0, s1
    c02c:	str	s0, [x3, x0]
    c030:	ldp	x3, x0, [sp, #248]
    c034:	sub	x0, x0, x3
    c038:	asr	x0, x0, #4
    c03c:	mul	x0, x0, x24
    c040:	cmp	x0, w2, uxtw
    c044:	b.hi	c008 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1340>  // b.pmore
    c048:	add	x19, sp, #0x140
    c04c:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    c050:	ldp	x3, x0, [sp, #248]
    c054:	mov	x24, x19
    c058:	mov	w2, #0x0                   	// #0
    c05c:	mov	x1, #0x0                   	// #0
    c060:	cmp	x3, x0
    c064:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    c068:	add	x1, x1, x1, lsl #1
    c06c:	add	w2, w2, #0x1
    c070:	ldr	x5, [sp, #152]
    c074:	lsl	x0, x1, #4
    c078:	ldr	x4, [sp, #200]
    c07c:	mov	w1, w2
    c080:	ldr	s0, [x5, x0]
    c084:	ldr	s1, [x4, x0]
    c088:	fmul	s0, s0, s1
    c08c:	str	s0, [x3, x0]
    c090:	ldp	x3, x0, [sp, #248]
    c094:	sub	x0, x0, x3
    c098:	asr	x0, x0, #4
    c09c:	mul	x0, x0, x24
    c0a0:	cmp	x0, w2, uxtw
    c0a4:	b.hi	c068 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x13a0>  // b.pmore
    c0a8:	add	x19, sp, #0x140
    c0ac:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    c0b0:	ldp	x1, x0, [sp, #248]
    c0b4:	cmp	x1, x0
    c0b8:	b.eq	b660 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    c0bc:	mov	x24, x19
    c0c0:	mov	x1, #0x0                   	// #0
    c0c4:	mov	w19, #0x0                   	// #0
    c0c8:	add	x1, x1, x1, lsl #1
    c0cc:	add	w19, w19, #0x1
    c0d0:	ldr	x2, [sp, #152]
    c0d4:	lsl	x26, x1, #4
    c0d8:	ldr	x0, [sp, #200]
    c0dc:	ldr	s0, [x2, x26]
    c0e0:	ldr	s1, [x0, x26]
    c0e4:	fcvt	d0, s0
    c0e8:	fcvt	d1, s1
    c0ec:	bl	0 <fmod>
    c0f0:	fcvt	s0, d0
    c0f4:	ldr	x0, [sp, #248]
    c0f8:	mov	w1, w19
    c0fc:	str	s0, [x0, x26]
    c100:	ldp	x2, x0, [sp, #248]
    c104:	sub	x0, x0, x2
    c108:	asr	x0, x0, #4
    c10c:	mul	x0, x0, x24
    c110:	cmp	x0, w19, uxtw
    c114:	b.hi	c0c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1400>  // b.pmore
    c118:	add	x19, sp, #0x140
    c11c:	b	adac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    c120:	stp	x27, x28, [sp, #80]
    c124:	bl	0 <_ZN4llvm4dbgsEv>
    c128:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c12c:	add	x1, x1, #0x0
    c130:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c134:	mov	x1, x0
    c138:	mov	w2, #0x0                   	// #0
    c13c:	mov	x0, x20
    c140:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    c144:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c148:	mov	w2, #0x335                 	// #821
    c14c:	add	x1, x1, #0x0
    c150:	mov	x0, #0x0                   	// #0
    c154:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c158:	stp	x27, x28, [sp, #80]
    c15c:	bl	0 <_ZN4llvm4dbgsEv>
    c160:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c164:	add	x1, x1, #0x0
    c168:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c16c:	mov	x1, x0
    c170:	mov	w2, #0x0                   	// #0
    c174:	mov	x0, x20
    c178:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    c17c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c180:	mov	w2, #0x310                 	// #784
    c184:	add	x1, x1, #0x0
    c188:	mov	x0, #0x0                   	// #0
    c18c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c190:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c194:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c198:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c19c:	add	x3, x3, #0x0
    c1a0:	add	x1, x1, #0x0
    c1a4:	add	x0, x0, #0x0
    c1a8:	mov	w2, #0x2e7                 	// #743
    c1ac:	stp	x27, x28, [sp, #80]
    c1b0:	bl	0 <__assert_fail>
    c1b4:	stp	x27, x28, [sp, #80]
    c1b8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1bc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1c0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1c4:	add	x3, x3, #0x0
    c1c8:	add	x1, x1, #0x0
    c1cc:	add	x0, x0, #0x0
    c1d0:	mov	w2, #0x329                 	// #809
    c1d4:	bl	0 <__assert_fail>
    c1d8:	stp	x27, x28, [sp, #80]
    c1dc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1e0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1e4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1e8:	add	x3, x3, #0x0
    c1ec:	add	x1, x1, #0x0
    c1f0:	add	x0, x0, #0x0
    c1f4:	mov	w2, #0x365                 	// #869
    c1f8:	bl	0 <__assert_fail>
    c1fc:	stp	x27, x28, [sp, #80]
    c200:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c204:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c208:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c20c:	add	x3, x3, #0x0
    c210:	add	x1, x1, #0x0
    c214:	add	x0, x0, #0x0
    c218:	mov	w2, #0x347                 	// #839
    c21c:	bl	0 <__assert_fail>
    c220:	bl	0 <_ZN4llvm4dbgsEv>
    c224:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c228:	add	x1, x1, #0x0
    c22c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c230:	mov	x19, x0
    c234:	mov	w2, #0x0                   	// #0
    c238:	mov	w3, #0x0                   	// #0
    c23c:	mov	x0, x24
    c240:	mov	x1, x19
    c244:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    c248:	mov	x0, x19
    c24c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c250:	add	x1, x1, #0x0
    c254:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c258:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c25c:	mov	w2, #0x32c                 	// #812
    c260:	add	x1, x1, #0x0
    c264:	mov	x0, #0x0                   	// #0
    c268:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c26c:	mov	x0, x24
    c270:	bl	140 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    c274:	ldr	x4, [sp, #112]
    c278:	b	bcc8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1000>
    c27c:	ldr	x4, [sp, #112]
    c280:	b	b2a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5d8>
    c284:	ldr	x4, [sp, #112]
    c288:	b	b16c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4a4>
    c28c:	stp	x27, x28, [sp, #80]
    c290:	bl	0 <_ZN4llvm4dbgsEv>
    c294:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c298:	add	x1, x1, #0x0
    c29c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2a0:	mov	w2, #0x0                   	// #0
    c2a4:	mov	x19, x0
    c2a8:	mov	w3, #0x0                   	// #0
    c2ac:	mov	x0, x24
    c2b0:	mov	x1, x19
    c2b4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    c2b8:	mov	x0, x19
    c2bc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2c0:	add	x1, x1, #0x0
    c2c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2cc:	mov	w2, #0x31d                 	// #797
    c2d0:	add	x1, x1, #0x0
    c2d4:	mov	x0, #0x0                   	// #0
    c2d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c2dc:	stp	x27, x28, [sp, #80]
    c2e0:	bl	0 <_ZN4llvm4dbgsEv>
    c2e4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2e8:	add	x1, x1, #0x0
    c2ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2f0:	mov	w2, #0x0                   	// #0
    c2f4:	mov	x19, x0
    c2f8:	mov	w3, #0x0                   	// #0
    c2fc:	mov	x0, x24
    c300:	mov	x1, x19
    c304:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    c308:	mov	x0, x19
    c30c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c310:	add	x1, x1, #0x0
    c314:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c318:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c31c:	mov	w2, #0x31e                 	// #798
    c320:	add	x1, x1, #0x0
    c324:	mov	x0, #0x0                   	// #0
    c328:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c32c:	mov	x0, x24
    c330:	bl	4e0 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    c334:	stp	x27, x28, [sp, #80]
    c338:	bl	0 <_ZN4llvm4dbgsEv>
    c33c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c340:	add	x1, x1, #0x0
    c344:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c348:	mov	w2, #0x0                   	// #0
    c34c:	mov	x19, x0
    c350:	mov	w3, #0x0                   	// #0
    c354:	mov	x0, x24
    c358:	mov	x1, x19
    c35c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    c360:	mov	x0, x19
    c364:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c368:	add	x1, x1, #0x0
    c36c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c370:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c374:	mov	w2, #0x31f                 	// #799
    c378:	add	x1, x1, #0x0
    c37c:	mov	x0, #0x0                   	// #0
    c380:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c384:	ldp	x27, x28, [sp, #80]
    c388:	b	af48 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x280>
    c38c:	ldp	x27, x28, [sp, #80]
    c390:	b	ae40 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x178>
    c394:	stp	x27, x28, [sp, #80]
    c398:	bl	0 <_ZN4llvm4dbgsEv>
    c39c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3a0:	add	x1, x1, #0x0
    c3a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3a8:	mov	w2, #0x0                   	// #0
    c3ac:	mov	x19, x0
    c3b0:	mov	w3, #0x0                   	// #0
    c3b4:	mov	x0, x24
    c3b8:	mov	x1, x19
    c3bc:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    c3c0:	mov	x0, x19
    c3c4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3c8:	add	x1, x1, #0x0
    c3cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3d0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3d4:	mov	w2, #0x31c                 	// #796
    c3d8:	add	x1, x1, #0x0
    c3dc:	mov	x0, #0x0                   	// #0
    c3e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c3e4:	mov	x0, x24
    c3e8:	bl	410 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    c3ec:	mov	x0, x24
    c3f0:	bl	340 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    c3f4:	nop

000000000000c3f8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>:
    c3f8:	stp	x29, x30, [sp, #-448]!
    c3fc:	mov	x29, sp
    c400:	stp	x19, x20, [sp, #16]
    c404:	mov	x19, x1
    c408:	ldur	x1, [x1, #-72]
    c40c:	stp	x27, x28, [sp, #80]
    c410:	add	x28, sp, #0x70
    c414:	ldr	x20, [x0, #704]
    c418:	mov	x8, x28
    c41c:	ldr	x3, [x1]
    c420:	sub	x20, x20, #0x80
    c424:	mov	x2, x20
    c428:	stp	x21, x22, [sp, #32]
    c42c:	mov	x21, x0
    c430:	stp	x23, x24, [sp, #48]
    c434:	add	x27, sp, #0xa0
    c438:	add	x22, sp, #0x130
    c43c:	stp	x25, x26, [sp, #64]
    c440:	add	x26, sp, #0xd0
    c444:	add	x25, sp, #0x160
    c448:	str	x3, [sp, #104]
    c44c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c450:	ldur	x1, [x19, #-48]
    c454:	mov	x0, x21
    c458:	mov	x2, x20
    c45c:	mov	x8, x27
    c460:	add	x23, sp, #0x190
    c464:	add	x24, sp, #0x100
    c468:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c46c:	ldur	x1, [x19, #-24]
    c470:	mov	x2, x20
    c474:	mov	x8, x26
    c478:	mov	x0, x21
    c47c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c480:	mov	x0, x22
    c484:	mov	x1, x28
    c488:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c48c:	mov	x1, x27
    c490:	mov	x0, x25
    c494:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c498:	mov	x1, x26
    c49c:	mov	x0, x23
    c4a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c4a4:	ldr	x3, [sp, #104]
    c4a8:	mov	x0, x22
    c4ac:	mov	x1, x25
    c4b0:	mov	x2, x23
    c4b4:	mov	x8, x24
    c4b8:	bl	5708 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    c4bc:	ldp	x21, x22, [sp, #424]
    c4c0:	cmp	x21, x22
    c4c4:	b.eq	c4e0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xe8>  // b.none
    c4c8:	mov	x0, x21
    c4cc:	add	x21, x21, #0x30
    c4d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c4d4:	cmp	x22, x21
    c4d8:	b.ne	c4c8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xd0>  // b.any
    c4dc:	ldr	x22, [sp, #424]
    c4e0:	cbz	x22, c4ec <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xf4>
    c4e4:	mov	x0, x22
    c4e8:	bl	0 <_ZdlPv>
    c4ec:	ldr	w0, [sp, #416]
    c4f0:	cmp	w0, #0x40
    c4f4:	b.ls	c504 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x10c>  // b.plast
    c4f8:	ldr	x0, [sp, #408]
    c4fc:	cbz	x0, c504 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x10c>
    c500:	bl	0 <_ZdaPv>
    c504:	ldp	x21, x22, [sp, #376]
    c508:	cmp	x21, x22
    c50c:	b.eq	c528 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x130>  // b.none
    c510:	mov	x0, x21
    c514:	add	x21, x21, #0x30
    c518:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c51c:	cmp	x22, x21
    c520:	b.ne	c510 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x118>  // b.any
    c524:	ldr	x22, [sp, #376]
    c528:	cbz	x22, c534 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x13c>
    c52c:	mov	x0, x22
    c530:	bl	0 <_ZdlPv>
    c534:	ldr	w0, [sp, #368]
    c538:	cmp	w0, #0x40
    c53c:	b.ls	c54c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x154>  // b.plast
    c540:	ldr	x0, [sp, #360]
    c544:	cbz	x0, c54c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x154>
    c548:	bl	0 <_ZdaPv>
    c54c:	ldp	x21, x22, [sp, #328]
    c550:	cmp	x21, x22
    c554:	b.eq	c570 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x178>  // b.none
    c558:	mov	x0, x21
    c55c:	add	x21, x21, #0x30
    c560:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c564:	cmp	x22, x21
    c568:	b.ne	c558 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x160>  // b.any
    c56c:	ldr	x22, [sp, #328]
    c570:	cbz	x22, c57c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x184>
    c574:	mov	x0, x22
    c578:	bl	0 <_ZdlPv>
    c57c:	ldr	w0, [sp, #320]
    c580:	cmp	w0, #0x40
    c584:	b.ls	c594 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x19c>  // b.plast
    c588:	ldr	x0, [sp, #312]
    c58c:	cbz	x0, c594 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x19c>
    c590:	bl	0 <_ZdaPv>
    c594:	mov	x1, x24
    c598:	mov	x0, x23
    c59c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c5a0:	mov	x2, x20
    c5a4:	mov	x0, x19
    c5a8:	mov	x1, x23
    c5ac:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    c5b0:	ldp	x19, x20, [sp, #424]
    c5b4:	cmp	x19, x20
    c5b8:	b.eq	c5d8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1e0>  // b.none
    c5bc:	nop
    c5c0:	mov	x0, x19
    c5c4:	add	x19, x19, #0x30
    c5c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c5cc:	cmp	x20, x19
    c5d0:	b.ne	c5c0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1c8>  // b.any
    c5d4:	ldr	x20, [sp, #424]
    c5d8:	cbz	x20, c5e4 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1ec>
    c5dc:	mov	x0, x20
    c5e0:	bl	0 <_ZdlPv>
    c5e4:	ldr	w0, [sp, #416]
    c5e8:	cmp	w0, #0x40
    c5ec:	b.ls	c5fc <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x204>  // b.plast
    c5f0:	ldr	x0, [sp, #408]
    c5f4:	cbz	x0, c5fc <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x204>
    c5f8:	bl	0 <_ZdaPv>
    c5fc:	ldp	x19, x20, [sp, #280]
    c600:	cmp	x19, x20
    c604:	b.eq	c620 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x228>  // b.none
    c608:	mov	x0, x19
    c60c:	add	x19, x19, #0x30
    c610:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c614:	cmp	x20, x19
    c618:	b.ne	c608 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x210>  // b.any
    c61c:	ldr	x20, [sp, #280]
    c620:	cbz	x20, c62c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x234>
    c624:	mov	x0, x20
    c628:	bl	0 <_ZdlPv>
    c62c:	ldr	w0, [sp, #272]
    c630:	cmp	w0, #0x40
    c634:	b.ls	c644 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x24c>  // b.plast
    c638:	ldr	x0, [sp, #264]
    c63c:	cbz	x0, c644 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x24c>
    c640:	bl	0 <_ZdaPv>
    c644:	ldp	x19, x20, [sp, #232]
    c648:	cmp	x19, x20
    c64c:	b.eq	c668 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x270>  // b.none
    c650:	mov	x0, x19
    c654:	add	x19, x19, #0x30
    c658:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c65c:	cmp	x20, x19
    c660:	b.ne	c650 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x258>  // b.any
    c664:	ldr	x20, [sp, #232]
    c668:	cbz	x20, c674 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x27c>
    c66c:	mov	x0, x20
    c670:	bl	0 <_ZdlPv>
    c674:	ldr	w0, [sp, #224]
    c678:	cmp	w0, #0x40
    c67c:	b.ls	c68c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x294>  // b.plast
    c680:	ldr	x0, [sp, #216]
    c684:	cbz	x0, c68c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x294>
    c688:	bl	0 <_ZdaPv>
    c68c:	ldp	x19, x20, [sp, #184]
    c690:	cmp	x19, x20
    c694:	b.eq	c6b0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2b8>  // b.none
    c698:	mov	x0, x19
    c69c:	add	x19, x19, #0x30
    c6a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c6a4:	cmp	x20, x19
    c6a8:	b.ne	c698 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2a0>  // b.any
    c6ac:	ldr	x20, [sp, #184]
    c6b0:	cbz	x20, c6bc <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2c4>
    c6b4:	mov	x0, x20
    c6b8:	bl	0 <_ZdlPv>
    c6bc:	ldr	w0, [sp, #176]
    c6c0:	cmp	w0, #0x40
    c6c4:	b.ls	c6d4 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2dc>  // b.plast
    c6c8:	ldr	x0, [sp, #168]
    c6cc:	cbz	x0, c6d4 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2dc>
    c6d0:	bl	0 <_ZdaPv>
    c6d4:	ldp	x19, x20, [sp, #136]
    c6d8:	cmp	x19, x20
    c6dc:	b.eq	c6f8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x300>  // b.none
    c6e0:	mov	x0, x19
    c6e4:	add	x19, x19, #0x30
    c6e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c6ec:	cmp	x20, x19
    c6f0:	b.ne	c6e0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2e8>  // b.any
    c6f4:	ldr	x20, [sp, #136]
    c6f8:	cbz	x20, c704 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x30c>
    c6fc:	mov	x0, x20
    c700:	bl	0 <_ZdlPv>
    c704:	ldr	w0, [sp, #128]
    c708:	cmp	w0, #0x40
    c70c:	b.ls	c71c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x324>  // b.plast
    c710:	ldr	x0, [sp, #120]
    c714:	cbz	x0, c71c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x324>
    c718:	bl	0 <_ZdaPv>
    c71c:	ldp	x19, x20, [sp, #16]
    c720:	ldp	x21, x22, [sp, #32]
    c724:	ldp	x23, x24, [sp, #48]
    c728:	ldp	x25, x26, [sp, #64]
    c72c:	ldp	x27, x28, [sp, #80]
    c730:	ldp	x29, x30, [sp], #448
    c734:	ret

000000000000c738 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>:
    c738:	stp	x29, x30, [sp, #-192]!
    c73c:	mov	x29, sp
    c740:	stp	x21, x22, [sp, #32]
    c744:	mov	x21, x2
    c748:	mov	x22, x0
    c74c:	ldr	x2, [x1, #48]
    c750:	stp	x23, x24, [sp, #48]
    c754:	ldr	x23, [x21, #8]
    c758:	stp	x1, x2, [x21, #8]
    c75c:	ldr	x0, [x2]
    c760:	tst	w0, #0x4
    c764:	b.ne	cb4c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x414>  // b.any
    c768:	ldurb	w0, [x2, #-8]
    c76c:	cmp	w0, #0x4f
    c770:	b.ne	c9e4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2ac>  // b.any
    c774:	add	x24, sp, #0x78
    c778:	stp	x19, x20, [sp, #16]
    c77c:	add	x19, sp, #0x90
    c780:	mov	w20, #0x18                  	// #24
    c784:	stp	x25, x26, [sp, #64]
    c788:	mov	x25, #0x8                   	// #8
    c78c:	stp	x27, x28, [sp, #80]
    c790:	stp	xzr, xzr, [sp, #120]
    c794:	str	xzr, [sp, #136]
    c798:	ldurb	w0, [x2, #-8]
    c79c:	cmp	w0, #0x4f
    c7a0:	b.eq	c9f4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2bc>  // b.none
    c7a4:	ldr	x0, [x21, #8]
    c7a8:	ldr	x20, [x0, #48]
    c7ac:	str	x20, [x21, #16]
    c7b0:	ldr	x0, [x20]
    c7b4:	tst	w0, #0x4
    c7b8:	b.ne	c940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x208>  // b.any
    c7bc:	add	x23, sp, #0x90
    c7c0:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c7c4:	add	x0, x23, #0x8
    c7c8:	mov	w22, #0x0                   	// #0
    c7cc:	movk	x24, #0xaaab
    c7d0:	str	x0, [sp, #104]
    c7d4:	nop
    c7d8:	ldurb	w0, [x20, #-8]
    c7dc:	ldr	x19, [sp, #120]
    c7e0:	cmp	w0, #0x4f
    c7e4:	b.ne	c960 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x228>  // b.any
    c7e8:	mov	w0, #0x30                  	// #48
    c7ec:	sub	x20, x20, #0x18
    c7f0:	umull	x0, w22, w0
    c7f4:	add	x25, x19, x0
    c7f8:	add	x1, x25, #0x8
    c7fc:	ldr	x0, [x19, x0]
    c800:	str	x0, [sp, #144]
    c804:	ldr	w0, [x1, #8]
    c808:	str	w0, [sp, #160]
    c80c:	cmp	w0, #0x40
    c810:	b.hi	cae0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3a8>  // b.pmore
    c814:	ldr	x0, [x25, #8]
    c818:	str	x0, [sp, #152]
    c81c:	ldp	x0, x19, [x25, #24]
    c820:	stp	xzr, xzr, [sp, #168]
    c824:	mov	x28, #0x0                   	// #0
    c828:	str	xzr, [sp, #184]
    c82c:	sub	x19, x19, x0
    c830:	asr	x0, x19, #4
    c834:	mul	x0, x0, x24
    c838:	cbz	x0, c858 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x120>
    c83c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c840:	movk	x1, #0x2aa, lsl #48
    c844:	cmp	x0, x1
    c848:	b.hi	cb48 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x410>  // b.pmore
    c84c:	mov	x0, x19
    c850:	bl	0 <_Znwm>
    c854:	mov	x28, x0
    c858:	add	x19, x28, x19
    c85c:	stp	x28, x28, [sp, #168]
    c860:	str	x19, [sp, #184]
    c864:	ldp	x27, x19, [x25, #24]
    c868:	cmp	x27, x19
    c86c:	b.eq	c8c4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x18c>  // b.none
    c870:	mov	x25, x27
    c874:	mov	x26, x28
    c878:	mov	x1, x25
    c87c:	mov	x0, x26
    c880:	add	x25, x25, #0x30
    c884:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c888:	cmp	x19, x25
    c88c:	add	x26, x26, #0x30
    c890:	b.ne	c878 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x140>  // b.any
    c894:	sub	x1, x19, #0x30
    c898:	mov	x0, #0xaaab                	// #43691
    c89c:	sub	x1, x1, x27
    c8a0:	movk	x0, #0xaaaa, lsl #16
    c8a4:	movk	x0, #0xaaaa, lsl #32
    c8a8:	lsr	x1, x1, #4
    c8ac:	movk	x0, #0xaaa, lsl #48
    c8b0:	mul	x1, x1, x0
    c8b4:	and	x1, x1, #0xfffffffffffffff
    c8b8:	add	x1, x1, #0x1
    c8bc:	add	x1, x1, x1, lsl #1
    c8c0:	add	x28, x28, x1, lsl #4
    c8c4:	mov	x0, x20
    c8c8:	mov	x2, x21
    c8cc:	mov	x1, x23
    c8d0:	str	x28, [sp, #176]
    c8d4:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    c8d8:	ldp	x19, x20, [sp, #168]
    c8dc:	cmp	x19, x20
    c8e0:	b.eq	c900 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1c8>  // b.none
    c8e4:	nop
    c8e8:	mov	x0, x19
    c8ec:	add	x19, x19, #0x30
    c8f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c8f4:	cmp	x20, x19
    c8f8:	b.ne	c8e8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1b0>  // b.any
    c8fc:	ldr	x20, [sp, #168]
    c900:	cbz	x20, c90c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1d4>
    c904:	mov	x0, x20
    c908:	bl	0 <_ZdlPv>
    c90c:	ldr	w0, [sp, #160]
    c910:	cmp	w0, #0x40
    c914:	b.ls	c924 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1ec>  // b.plast
    c918:	ldr	x0, [sp, #152]
    c91c:	cbz	x0, c924 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1ec>
    c920:	bl	0 <_ZdaPv>
    c924:	ldr	x0, [x21, #16]
    c928:	add	w22, w22, #0x1
    c92c:	ldr	x20, [x0, #8]
    c930:	ldr	x0, [x20]
    c934:	str	x20, [x21, #16]
    c938:	tst	w0, #0x4
    c93c:	b.eq	c7d8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xa0>  // b.none
    c940:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c944:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c948:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c94c:	add	x3, x3, #0x0
    c950:	add	x1, x1, #0x0
    c954:	add	x0, x0, #0x0
    c958:	mov	w2, #0x8b                  	// #139
    c95c:	bl	0 <__assert_fail>
    c960:	ldr	x22, [sp, #128]
    c964:	cmp	x22, x19
    c968:	b.eq	c9cc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x294>  // b.none
    c96c:	nop
    c970:	ldp	x20, x21, [x19, #24]
    c974:	cmp	x20, x21
    c978:	b.eq	c998 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x260>  // b.none
    c97c:	nop
    c980:	mov	x0, x20
    c984:	add	x20, x20, #0x30
    c988:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c98c:	cmp	x21, x20
    c990:	b.ne	c980 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x248>  // b.any
    c994:	ldr	x21, [x19, #24]
    c998:	cbz	x21, c9a4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x26c>
    c99c:	mov	x0, x21
    c9a0:	bl	0 <_ZdlPv>
    c9a4:	ldr	w0, [x19, #16]
    c9a8:	cmp	w0, #0x40
    c9ac:	b.ls	c9bc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x284>  // b.plast
    c9b0:	ldr	x0, [x19, #8]
    c9b4:	cbz	x0, c9bc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x284>
    c9b8:	bl	0 <_ZdaPv>
    c9bc:	add	x19, x19, #0x30
    c9c0:	cmp	x22, x19
    c9c4:	b.ne	c970 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x238>  // b.any
    c9c8:	ldr	x19, [sp, #120]
    c9cc:	cbz	x19, caec <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3b4>
    c9d0:	mov	x0, x19
    c9d4:	bl	0 <_ZdlPv>
    c9d8:	ldp	x19, x20, [sp, #16]
    c9dc:	ldp	x25, x26, [sp, #64]
    c9e0:	ldp	x27, x28, [sp, #80]
    c9e4:	ldp	x21, x22, [sp, #32]
    c9e8:	ldp	x23, x24, [sp, #48]
    c9ec:	ldp	x29, x30, [sp], #192
    c9f0:	ret
    c9f4:	ldur	w0, [x2, #-4]
    c9f8:	sub	x1, x2, #0x18
    c9fc:	ubfx	x0, x0, #0, #28
    ca00:	cbz	w0, cb08 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3d0>
    ca04:	ldr	w3, [x2, #32]
    ca08:	umsubl	x4, w0, w20, x1
    ca0c:	ldurb	w6, [x2, #-1]
    ca10:	mov	x1, #0x0                   	// #0
    ca14:	and	w6, w6, #0x40
    ca18:	umaddl	x3, w3, w20, x25
    ca1c:	b	ca30 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2f8>
    ca20:	add	x1, x1, #0x1
    ca24:	add	x3, x3, #0x8
    ca28:	cmp	w0, w1
    ca2c:	b.eq	cb08 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3d0>  // b.none
    ca30:	mov	w8, w1
    ca34:	mov	x5, x4
    ca38:	cbz	w6, ca40 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x308>
    ca3c:	ldur	x5, [x2, #-32]
    ca40:	ldr	x7, [x5, x3]
    ca44:	cmp	x23, x7
    ca48:	b.ne	ca20 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2e8>  // b.any
    ca4c:	cmp	w8, w0
    ca50:	b.cs	cb28 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3f0>  // b.hs, b.nlast
    ca54:	add	x1, x1, x1, lsl #1
    ca58:	mov	x8, x19
    ca5c:	mov	x2, x21
    ca60:	mov	x0, x22
    ca64:	ldr	x1, [x5, x1, lsl #3]
    ca68:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ca6c:	mov	x1, x19
    ca70:	mov	x0, x24
    ca74:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ca78:	ldp	x26, x27, [sp, #168]
    ca7c:	cmp	x26, x27
    ca80:	b.eq	caa0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x368>  // b.none
    ca84:	nop
    ca88:	mov	x0, x26
    ca8c:	add	x26, x26, #0x30
    ca90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ca94:	cmp	x27, x26
    ca98:	b.ne	ca88 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x350>  // b.any
    ca9c:	ldr	x27, [sp, #168]
    caa0:	cbz	x27, caac <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x374>
    caa4:	mov	x0, x27
    caa8:	bl	0 <_ZdlPv>
    caac:	ldr	w0, [sp, #160]
    cab0:	cmp	w0, #0x40
    cab4:	b.ls	cac4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x38c>  // b.plast
    cab8:	ldr	x0, [sp, #152]
    cabc:	cbz	x0, cac4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x38c>
    cac0:	bl	0 <_ZdaPv>
    cac4:	ldr	x0, [x21, #16]
    cac8:	ldr	x2, [x0, #8]
    cacc:	ldr	x0, [x2]
    cad0:	str	x2, [x21, #16]
    cad4:	tst	w0, #0x4
    cad8:	b.eq	c798 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x60>  // b.none
    cadc:	b	c940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x208>
    cae0:	ldr	x0, [sp, #104]
    cae4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    cae8:	b	c81c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xe4>
    caec:	ldp	x19, x20, [sp, #16]
    caf0:	ldp	x21, x22, [sp, #32]
    caf4:	ldp	x23, x24, [sp, #48]
    caf8:	ldp	x25, x26, [sp, #64]
    cafc:	ldp	x27, x28, [sp, #80]
    cb00:	ldp	x29, x30, [sp], #192
    cb04:	ret
    cb08:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb0c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb10:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb14:	add	x3, x3, #0x0
    cb18:	add	x1, x1, #0x0
    cb1c:	add	x0, x0, #0x0
    cb20:	mov	w2, #0x3e4                 	// #996
    cb24:	bl	0 <__assert_fail>
    cb28:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb2c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb30:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb34:	add	x3, x3, #0x0
    cb38:	add	x1, x1, #0x0
    cb3c:	add	x0, x0, #0x0
    cb40:	mov	w2, #0xadf                 	// #2783
    cb44:	bl	0 <__assert_fail>
    cb48:	bl	0 <_ZSt17__throw_bad_allocv>
    cb4c:	stp	x19, x20, [sp, #16]
    cb50:	stp	x25, x26, [sp, #64]
    cb54:	stp	x27, x28, [sp, #80]
    cb58:	b	c940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x208>
    cb5c:	nop

000000000000cb60 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>:
    cb60:	stp	x29, x30, [sp, #-128]!
    cb64:	mov	x29, sp
    cb68:	stp	x19, x20, [sp, #16]
    cb6c:	mov	x20, x0
    cb70:	ldr	w0, [x1, #20]
    cb74:	stp	x23, x24, [sp, #48]
    cb78:	mov	x19, x1
    cb7c:	ldur	x23, [x1, #-24]
    cb80:	stp	x21, x22, [sp, #32]
    cb84:	ubfx	x0, x0, #0, #28
    cb88:	ldr	x22, [x20, #704]
    cb8c:	sub	x22, x22, #0x80
    cb90:	cbz	x23, cba0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x40>
    cb94:	ldrb	w1, [x23, #16]
    cb98:	cmp	w1, #0x12
    cb9c:	b.ne	ccc8 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x168>  // b.any
    cba0:	cmp	w0, #0x1
    cba4:	b.eq	cc44 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe4>  // b.none
    cba8:	str	x25, [sp, #64]
    cbac:	cmp	w0, #0x3
    cbb0:	b.ne	ccd0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x170>  // b.any
    cbb4:	ldur	x1, [x19, #-72]
    cbb8:	add	x24, sp, #0x50
    cbbc:	mov	x8, x24
    cbc0:	mov	x2, x22
    cbc4:	mov	x0, x20
    cbc8:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    cbcc:	ldr	w21, [sp, #96]
    cbd0:	cmp	w21, #0x40
    cbd4:	b.ls	ccc0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x160>  // b.plast
    cbd8:	add	x0, x24, #0x8
    cbdc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    cbe0:	sub	w21, w21, w0
    cbe4:	mov	w25, #0x0                   	// #0
    cbe8:	cmp	w21, #0x40
    cbec:	b.ls	cc68 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x108>  // b.plast
    cbf0:	ldp	x21, x24, [sp, #104]
    cbf4:	cmp	x21, x24
    cbf8:	b.eq	cc18 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xb8>  // b.none
    cbfc:	nop
    cc00:	mov	x0, x21
    cc04:	add	x21, x21, #0x30
    cc08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cc0c:	cmp	x24, x21
    cc10:	b.ne	cc00 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xa0>  // b.any
    cc14:	ldr	x24, [sp, #104]
    cc18:	cbz	x24, cc24 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xc4>
    cc1c:	mov	x0, x24
    cc20:	bl	0 <_ZdlPv>
    cc24:	ldr	w0, [sp, #96]
    cc28:	cmp	w0, #0x40
    cc2c:	b.ls	cc3c <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xdc>  // b.plast
    cc30:	ldr	x0, [sp, #88]
    cc34:	cbz	x0, cc3c <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xdc>
    cc38:	bl	0 <_ZdaPv>
    cc3c:	cbnz	w25, cc7c <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x11c>
    cc40:	ldr	x25, [sp, #64]
    cc44:	mov	x2, x22
    cc48:	mov	x1, x23
    cc4c:	mov	x0, x20
    cc50:	bl	c738 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    cc54:	ldp	x19, x20, [sp, #16]
    cc58:	ldp	x21, x22, [sp, #32]
    cc5c:	ldp	x23, x24, [sp, #48]
    cc60:	ldp	x29, x30, [sp], #128
    cc64:	ret
    cc68:	ldr	x0, [sp, #88]
    cc6c:	ldr	x0, [x0]
    cc70:	cmp	x0, #0x0
    cc74:	cset	w25, eq  // eq = none
    cc78:	b	cbf0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x90>
    cc7c:	ldr	w0, [x19, #20]
    cc80:	ubfx	x0, x0, #0, #28
    cc84:	cmp	w0, #0x3
    cc88:	b.ne	ccf0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x190>  // b.any
    cc8c:	ldur	x23, [x19, #-48]
    cc90:	cbz	x23, cc40 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe0>
    cc94:	ldrb	w0, [x23, #16]
    cc98:	cmp	w0, #0x12
    cc9c:	b.eq	cc40 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe0>  // b.none
    cca0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cca4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cca8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccac:	add	x3, x3, #0x0
    ccb0:	add	x1, x1, #0x0
    ccb4:	add	x0, x0, #0x0
    ccb8:	mov	w2, #0x134                 	// #308
    ccbc:	bl	0 <__assert_fail>
    ccc0:	ldr	x0, [sp, #88]
    ccc4:	b	cc70 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x110>
    ccc8:	str	x25, [sp, #64]
    cccc:	b	cca0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x140>
    ccd0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccd4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccd8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccdc:	add	x3, x3, #0x0
    cce0:	add	x1, x1, #0x0
    cce4:	add	x0, x0, #0x0
    cce8:	mov	w2, #0xbf7                 	// #3063
    ccec:	bl	0 <__assert_fail>
    ccf0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccf4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccf8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccfc:	add	x3, x3, #0x0
    cd00:	add	x1, x1, #0x0
    cd04:	add	x0, x0, #0x0
    cd08:	mov	w2, #0xc03                 	// #3075
    cd0c:	bl	0 <__assert_fail>

000000000000cd10 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>:
    cd10:	stp	x29, x30, [sp, #-416]!
    cd14:	mov	x29, sp
    cd18:	stp	x23, x24, [sp, #48]
    cd1c:	mov	x24, x0
    cd20:	ldr	w0, [x1, #20]
    cd24:	stp	x19, x20, [sp, #16]
    cd28:	stp	x25, x26, [sp, #64]
    cd2c:	ubfx	x0, x0, #0, #28
    cd30:	ldr	x25, [x24, #704]
    cd34:	cbz	w0, d31c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x60c>
    cd38:	mov	x20, x1
    cd3c:	ldrb	w1, [x1, #23]
    cd40:	sub	x25, x25, #0x80
    cd44:	tbnz	w1, #6, d190 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x480>
    cd48:	mov	w1, #0x18                  	// #24
    cd4c:	umsubl	x0, w0, w1, x20
    cd50:	ldr	x1, [x0]
    cd54:	add	x0, sp, #0xb0
    cd58:	mov	x2, x25
    cd5c:	mov	x8, x0
    cd60:	str	x0, [sp, #152]
    cd64:	mov	x0, x24
    cd68:	ldr	x3, [x1]
    cd6c:	str	x3, [sp, #120]
    cd70:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    cd74:	ldr	w0, [x20, #20]
    cd78:	ubfx	x1, x0, #1, #27
    cd7c:	ubfx	x0, x0, #0, #28
    cd80:	sub	w2, w1, #0x1
    cd84:	str	x2, [sp, #144]
    cd88:	cbz	x2, d140 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x430>
    cd8c:	add	x2, sp, #0xe0
    cd90:	str	x2, [sp, #112]
    cd94:	add	x2, sp, #0xe8
    cd98:	add	x3, sp, #0x110
    cd9c:	mov	x19, #0x0                   	// #0
    cda0:	stp	x21, x22, [sp, #32]
    cda4:	stp	x27, x28, [sp, #80]
    cda8:	str	x3, [sp, #128]
    cdac:	str	x2, [sp, #168]
    cdb0:	add	x2, sp, #0x118
    cdb4:	str	x2, [sp, #160]
    cdb8:	str	w19, [sp, #140]
    cdbc:	sub	w1, w1, #0x1
    cdc0:	cmp	w19, w1
    cdc4:	b.cs	d344 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x634>  // b.hs, b.nlast
    cdc8:	add	x19, x19, #0x1
    cdcc:	mov	w22, w19
    cdd0:	lsl	w3, w19, #1
    cdd4:	cmp	w3, w0
    cdd8:	b.cs	d324 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x614>  // b.hs, b.nlast
    cddc:	ldrb	w1, [x20, #23]
    cde0:	tbz	w1, #6, d198 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x488>
    cde4:	ldur	x1, [x20, #-8]
    cde8:	mov	w4, #0x18                  	// #24
    cdec:	ldr	x8, [sp, #112]
    cdf0:	umull	x3, w3, w4
    cdf4:	mov	x0, x24
    cdf8:	mov	x2, x25
    cdfc:	ldr	x1, [x1, x3]
    ce00:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ce04:	ldr	w0, [sp, #192]
    ce08:	ldr	x1, [sp, #176]
    ce0c:	str	x1, [sp, #272]
    ce10:	str	w0, [sp, #288]
    ce14:	cmp	w0, #0x40
    ce18:	b.hi	d1b8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4a8>  // b.pmore
    ce1c:	ldr	x0, [sp, #184]
    ce20:	str	x0, [sp, #280]
    ce24:	ldp	x27, x21, [sp, #200]
    ce28:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    ce2c:	movk	x2, #0xaaab
    ce30:	stp	xzr, xzr, [sp, #296]
    ce34:	mov	x23, #0x0                   	// #0
    ce38:	str	xzr, [sp, #312]
    ce3c:	sub	x26, x21, x27
    ce40:	asr	x0, x26, #4
    ce44:	mul	x0, x0, x2
    ce48:	cbz	x0, ce6c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x15c>
    ce4c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    ce50:	movk	x2, #0x2aa, lsl #48
    ce54:	cmp	x0, x2
    ce58:	b.hi	d318 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x608>  // b.pmore
    ce5c:	mov	x0, x26
    ce60:	bl	0 <_Znwm>
    ce64:	ldp	x27, x21, [sp, #200]
    ce68:	mov	x23, x0
    ce6c:	add	x1, x23, x26
    ce70:	stp	x23, x23, [sp, #296]
    ce74:	cmp	x21, x27
    ce78:	str	x1, [sp, #312]
    ce7c:	b.eq	ced4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x1c4>  // b.none
    ce80:	mov	x26, x27
    ce84:	mov	x28, x23
    ce88:	mov	x1, x26
    ce8c:	mov	x0, x28
    ce90:	add	x26, x26, #0x30
    ce94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ce98:	cmp	x21, x26
    ce9c:	add	x28, x28, #0x30
    cea0:	b.ne	ce88 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x178>  // b.any
    cea4:	sub	x1, x21, #0x30
    cea8:	mov	x0, #0xaaab                	// #43691
    ceac:	sub	x1, x1, x27
    ceb0:	movk	x0, #0xaaaa, lsl #16
    ceb4:	movk	x0, #0xaaaa, lsl #32
    ceb8:	lsr	x1, x1, #4
    cebc:	movk	x0, #0xaaa, lsl #48
    cec0:	mul	x1, x1, x0
    cec4:	and	x1, x1, #0xfffffffffffffff
    cec8:	add	x1, x1, #0x1
    cecc:	add	x1, x1, x1, lsl #1
    ced0:	add	x23, x23, x1, lsl #4
    ced4:	ldr	w0, [sp, #240]
    ced8:	ldr	x1, [sp, #224]
    cedc:	str	x23, [sp, #304]
    cee0:	str	x1, [sp, #320]
    cee4:	cmp	w0, #0x40
    cee8:	str	w0, [sp, #336]
    ceec:	b.hi	d1cc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4bc>  // b.pmore
    cef0:	ldr	x0, [sp, #232]
    cef4:	str	x0, [sp, #328]
    cef8:	ldp	x23, x21, [sp, #248]
    cefc:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    cf00:	movk	x3, #0xaaab
    cf04:	stp	xzr, xzr, [sp, #344]
    cf08:	mov	x28, #0x0                   	// #0
    cf0c:	str	xzr, [sp, #360]
    cf10:	sub	x27, x21, x23
    cf14:	asr	x0, x27, #4
    cf18:	mul	x0, x0, x3
    cf1c:	cbz	x0, cf40 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x230>
    cf20:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    cf24:	movk	x2, #0x2aa, lsl #48
    cf28:	cmp	x0, x2
    cf2c:	b.hi	d318 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x608>  // b.pmore
    cf30:	mov	x0, x27
    cf34:	bl	0 <_Znwm>
    cf38:	ldp	x23, x21, [sp, #248]
    cf3c:	mov	x28, x0
    cf40:	add	x1, x28, x27
    cf44:	stp	x28, x28, [sp, #344]
    cf48:	cmp	x23, x21
    cf4c:	str	x1, [sp, #360]
    cf50:	b.eq	cfb0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2a0>  // b.none
    cf54:	mov	x27, x23
    cf58:	mov	x0, x28
    cf5c:	nop
    cf60:	mov	x1, x27
    cf64:	str	x0, [sp, #104]
    cf68:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cf6c:	add	x27, x27, #0x30
    cf70:	ldr	x0, [sp, #104]
    cf74:	cmp	x21, x27
    cf78:	add	x0, x0, #0x30
    cf7c:	b.ne	cf60 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x250>  // b.any
    cf80:	sub	x1, x21, #0x30
    cf84:	mov	x0, #0xaaab                	// #43691
    cf88:	sub	x1, x1, x23
    cf8c:	movk	x0, #0xaaaa, lsl #16
    cf90:	movk	x0, #0xaaaa, lsl #32
    cf94:	lsr	x1, x1, #4
    cf98:	movk	x0, #0xaaa, lsl #48
    cf9c:	mul	x1, x1, x0
    cfa0:	and	x1, x1, #0xfffffffffffffff
    cfa4:	add	x1, x1, #0x1
    cfa8:	add	x1, x1, x1, lsl #1
    cfac:	add	x28, x28, x1, lsl #4
    cfb0:	ldp	x2, x0, [sp, #120]
    cfb4:	add	x23, sp, #0x170
    cfb8:	mov	x8, x23
    cfbc:	add	x1, sp, #0x140
    cfc0:	str	x28, [sp, #352]
    cfc4:	bl	820 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    cfc8:	ldr	w21, [sp, #384]
    cfcc:	cmp	w21, #0x40
    cfd0:	b.ls	d1dc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4cc>  // b.plast
    cfd4:	add	x0, x23, #0x8
    cfd8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    cfdc:	sub	w21, w21, w0
    cfe0:	cmp	w21, #0x40
    cfe4:	b.ls	d1a4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x494>  // b.plast
    cfe8:	mov	w21, #0x0                   	// #0
    cfec:	ldp	x28, x23, [sp, #392]
    cff0:	cmp	x28, x23
    cff4:	b.eq	d010 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x300>  // b.none
    cff8:	mov	x0, x28
    cffc:	add	x28, x28, #0x30
    d000:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d004:	cmp	x23, x28
    d008:	b.ne	cff8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2e8>  // b.any
    d00c:	ldr	x23, [sp, #392]
    d010:	cbz	x23, d01c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x30c>
    d014:	mov	x0, x23
    d018:	bl	0 <_ZdlPv>
    d01c:	ldr	w0, [sp, #384]
    d020:	cmp	w0, #0x40
    d024:	b.ls	d034 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x324>  // b.plast
    d028:	ldr	x0, [sp, #376]
    d02c:	cbz	x0, d034 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x324>
    d030:	bl	0 <_ZdaPv>
    d034:	ldp	x28, x23, [sp, #344]
    d038:	cmp	x28, x23
    d03c:	b.eq	d058 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x348>  // b.none
    d040:	mov	x0, x28
    d044:	add	x28, x28, #0x30
    d048:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d04c:	cmp	x23, x28
    d050:	b.ne	d040 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x330>  // b.any
    d054:	ldr	x23, [sp, #344]
    d058:	cbz	x23, d064 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x354>
    d05c:	mov	x0, x23
    d060:	bl	0 <_ZdlPv>
    d064:	ldr	w0, [sp, #336]
    d068:	cmp	w0, #0x40
    d06c:	b.ls	d07c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x36c>  // b.plast
    d070:	ldr	x0, [sp, #328]
    d074:	cbz	x0, d07c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x36c>
    d078:	bl	0 <_ZdaPv>
    d07c:	ldp	x23, x28, [sp, #296]
    d080:	cmp	x23, x28
    d084:	b.eq	d0a0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x390>  // b.none
    d088:	mov	x0, x23
    d08c:	add	x23, x23, #0x30
    d090:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d094:	cmp	x28, x23
    d098:	b.ne	d088 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x378>  // b.any
    d09c:	ldr	x28, [sp, #296]
    d0a0:	cbz	x28, d0ac <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x39c>
    d0a4:	mov	x0, x28
    d0a8:	bl	0 <_ZdlPv>
    d0ac:	ldr	w0, [sp, #288]
    d0b0:	cmp	w0, #0x40
    d0b4:	b.ls	d0c4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3b4>  // b.plast
    d0b8:	ldr	x0, [sp, #280]
    d0bc:	cbz	x0, d0c4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3b4>
    d0c0:	bl	0 <_ZdaPv>
    d0c4:	cbz	w21, d1e4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4d4>
    d0c8:	ldp	x21, x28, [sp, #248]
    d0cc:	cmp	x21, x28
    d0d0:	b.eq	d0f0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3e0>  // b.none
    d0d4:	nop
    d0d8:	mov	x0, x21
    d0dc:	add	x21, x21, #0x30
    d0e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d0e4:	cmp	x28, x21
    d0e8:	b.ne	d0d8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3c8>  // b.any
    d0ec:	ldr	x28, [sp, #248]
    d0f0:	cbz	x28, d0fc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3ec>
    d0f4:	mov	x0, x28
    d0f8:	bl	0 <_ZdlPv>
    d0fc:	ldr	w0, [sp, #240]
    d100:	cmp	w0, #0x40
    d104:	b.ls	d114 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x404>  // b.plast
    d108:	ldr	x0, [sp, #232]
    d10c:	cbz	x0, d114 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x404>
    d110:	bl	0 <_ZdaPv>
    d114:	ldr	w0, [x20, #20]
    d118:	ubfx	x1, x0, #1, #27
    d11c:	ubfx	x0, x0, #0, #28
    d120:	sub	w2, w1, #0x1
    d124:	cmp	w22, w2
    d128:	b.hi	d2f8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5e8>  // b.pmore
    d12c:	ldr	x2, [sp, #144]
    d130:	cmp	x2, x19
    d134:	b.ne	cdb8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xa8>  // b.any
    d138:	ldp	x21, x22, [sp, #32]
    d13c:	ldp	x27, x28, [sp, #80]
    d140:	cmp	w0, #0x1
    d144:	b.ls	d31c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x60c>  // b.plast
    d148:	ldrb	w1, [x20, #23]
    d14c:	tbz	w1, #6, d2ec <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5dc>
    d150:	ldur	x0, [x20, #-8]
    d154:	ldr	x19, [x0, #24]
    d158:	cbz	x19, d3ac <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x69c>
    d15c:	ldrb	w0, [x19, #16]
    d160:	cmp	w0, #0x12
    d164:	b.eq	d25c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x54c>  // b.none
    d168:	stp	x21, x22, [sp, #32]
    d16c:	stp	x27, x28, [sp, #80]
    d170:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d174:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d178:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d17c:	add	x3, x3, #0x0
    d180:	add	x1, x1, #0x0
    d184:	add	x0, x0, #0x0
    d188:	mov	w2, #0x108                 	// #264
    d18c:	bl	0 <__assert_fail>
    d190:	ldur	x0, [x20, #-8]
    d194:	b	cd50 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x40>
    d198:	mov	w1, #0x18                  	// #24
    d19c:	umsubl	x1, w0, w1, x20
    d1a0:	b	cde8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xd8>
    d1a4:	ldr	x0, [sp, #376]
    d1a8:	ldr	x0, [x0]
    d1ac:	cmp	x0, #0x0
    d1b0:	cset	w21, eq  // eq = none
    d1b4:	b	cfec <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2dc>
    d1b8:	ldr	x0, [sp, #152]
    d1bc:	add	x1, x0, #0x8
    d1c0:	ldr	x0, [sp, #160]
    d1c4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d1c8:	b	ce24 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x114>
    d1cc:	ldr	x1, [sp, #168]
    d1d0:	add	x0, sp, #0x148
    d1d4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d1d8:	b	cef8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x1e8>
    d1dc:	ldr	x0, [sp, #376]
    d1e0:	b	d1ac <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x49c>
    d1e4:	ldr	w0, [x20, #20]
    d1e8:	ldr	w3, [sp, #140]
    d1ec:	ubfx	x2, x0, #1, #27
    d1f0:	ubfx	x1, x0, #0, #28
    d1f4:	sub	w0, w2, #0x1
    d1f8:	cmp	w3, w0
    d1fc:	b.cc	d2d4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5c4>  // b.lo, b.ul, b.last
    d200:	cmn	w3, #0x2
    d204:	mov	w0, #0x0                   	// #0
    d208:	b.ne	d36c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x65c>  // b.any
    d20c:	cmp	w2, w0
    d210:	b.ls	d38c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x67c>  // b.plast
    d214:	lsl	w0, w0, #1
    d218:	add	w0, w0, #0x1
    d21c:	cmp	w1, w0
    d220:	b.ls	d324 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x614>  // b.plast
    d224:	ldrb	w2, [x20, #23]
    d228:	tbz	w2, #6, d2c8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5b8>
    d22c:	ldur	x1, [x20, #-8]
    d230:	mov	w2, #0x18                  	// #24
    d234:	umull	x0, w0, w2
    d238:	ldr	x19, [x1, x0]
    d23c:	cbz	x19, d3b4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6a4>
    d240:	ldrb	w0, [x19, #16]
    d244:	cmp	w0, #0x12
    d248:	b.ne	d170 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x460>  // b.any
    d24c:	ldr	x0, [sp, #112]
    d250:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d254:	ldp	x21, x22, [sp, #32]
    d258:	ldp	x27, x28, [sp, #80]
    d25c:	mov	x1, x19
    d260:	mov	x2, x25
    d264:	mov	x0, x24
    d268:	bl	c738 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    d26c:	ldp	x19, x20, [sp, #200]
    d270:	cmp	x19, x20
    d274:	b.eq	d290 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x580>  // b.none
    d278:	mov	x0, x19
    d27c:	add	x19, x19, #0x30
    d280:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d284:	cmp	x20, x19
    d288:	b.ne	d278 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x568>  // b.any
    d28c:	ldr	x20, [sp, #200]
    d290:	cbz	x20, d29c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x58c>
    d294:	mov	x0, x20
    d298:	bl	0 <_ZdlPv>
    d29c:	ldr	w0, [sp, #192]
    d2a0:	cmp	w0, #0x40
    d2a4:	b.ls	d2b4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5a4>  // b.plast
    d2a8:	ldr	x0, [sp, #184]
    d2ac:	cbz	x0, d2b4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5a4>
    d2b0:	bl	0 <_ZdaPv>
    d2b4:	ldp	x19, x20, [sp, #16]
    d2b8:	ldp	x23, x24, [sp, #48]
    d2bc:	ldp	x25, x26, [sp, #64]
    d2c0:	ldp	x29, x30, [sp], #416
    d2c4:	ret
    d2c8:	mov	w2, #0x18                  	// #24
    d2cc:	umsubl	x1, w1, w2, x20
    d2d0:	b	d230 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x520>
    d2d4:	ldr	w0, [sp, #140]
    d2d8:	cmn	w0, #0x2
    d2dc:	b.eq	d364 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x654>  // b.none
    d2e0:	ldr	w0, [sp, #140]
    d2e4:	add	w0, w0, #0x1
    d2e8:	b	d20c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4fc>
    d2ec:	mov	w1, #0x18                  	// #24
    d2f0:	umsubl	x0, w0, w1, x20
    d2f4:	b	d154 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x444>
    d2f8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d2fc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d300:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d304:	add	x3, x3, #0x0
    d308:	add	x1, x1, #0x0
    d30c:	add	x0, x0, #0x0
    d310:	mov	w2, #0xcd2                 	// #3282
    d314:	bl	0 <__assert_fail>
    d318:	bl	0 <_ZSt17__throw_bad_allocv>
    d31c:	stp	x21, x22, [sp, #32]
    d320:	stp	x27, x28, [sp, #80]
    d324:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d328:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d32c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d330:	add	x3, x3, #0x0
    d334:	add	x1, x1, #0x0
    d338:	add	x0, x0, #0x0
    d33c:	mov	w2, #0xdbe                 	// #3518
    d340:	bl	0 <__assert_fail>
    d344:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d348:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d34c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d350:	add	x3, x3, #0x0
    d354:	add	x1, x1, #0x0
    d358:	add	x0, x0, #0x0
    d35c:	mov	w2, #0xc78                 	// #3192
    d360:	bl	0 <__assert_fail>
    d364:	mov	w0, #0x0                   	// #0
    d368:	b	d20c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4fc>
    d36c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d370:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d374:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d378:	add	x3, x3, #0x0
    d37c:	add	x1, x1, #0x0
    d380:	add	x0, x0, #0x0
    d384:	mov	w2, #0xc7f                 	// #3199
    d388:	bl	0 <__assert_fail>
    d38c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d390:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d394:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d398:	add	x3, x3, #0x0
    d39c:	add	x1, x1, #0x0
    d3a0:	add	x0, x0, #0x0
    d3a4:	mov	w2, #0xd7c                 	// #3452
    d3a8:	bl	0 <__assert_fail>
    d3ac:	stp	x21, x22, [sp, #32]
    d3b0:	stp	x27, x28, [sp, #80]
    d3b4:	bl	a0 <_ZN4llvm3isaINS_10BasicBlockEPNS_5ValueEEEbRKT0_.isra.0.part.0>

000000000000d3b8 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>:
    d3b8:	stp	x29, x30, [sp, #-112]!
    d3bc:	mov	x29, sp
    d3c0:	ldr	w3, [x1, #20]
    d3c4:	stp	x19, x20, [sp, #16]
    d3c8:	stp	x21, x22, [sp, #32]
    d3cc:	ubfx	x3, x3, #0, #28
    d3d0:	ldr	x22, [x0, #704]
    d3d4:	str	x23, [sp, #48]
    d3d8:	cbz	w3, d480 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0xc8>
    d3dc:	mov	x19, x0
    d3e0:	ldrb	w0, [x1, #23]
    d3e4:	sub	x22, x22, #0x80
    d3e8:	tbnz	w0, #6, d478 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0xc0>
    d3ec:	mov	w0, #0x18                  	// #24
    d3f0:	umsubl	x3, w3, w0, x1
    d3f4:	ldr	x1, [x3]
    d3f8:	add	x8, sp, #0x40
    d3fc:	mov	x2, x22
    d400:	mov	x0, x19
    d404:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d408:	ldp	x20, x21, [sp, #88]
    d40c:	ldr	x23, [sp, #64]
    d410:	cmp	x20, x21
    d414:	b.eq	d430 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x78>  // b.none
    d418:	mov	x0, x20
    d41c:	add	x20, x20, #0x30
    d420:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d424:	cmp	x21, x20
    d428:	b.ne	d418 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x60>  // b.any
    d42c:	ldr	x21, [sp, #88]
    d430:	cbz	x21, d43c <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x84>
    d434:	mov	x0, x21
    d438:	bl	0 <_ZdlPv>
    d43c:	ldr	w0, [sp, #80]
    d440:	cmp	w0, #0x40
    d444:	b.ls	d454 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x9c>  // b.plast
    d448:	ldr	x0, [sp, #72]
    d44c:	cbz	x0, d454 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x9c>
    d450:	bl	0 <_ZdaPv>
    d454:	mov	x2, x22
    d458:	mov	x1, x23
    d45c:	mov	x0, x19
    d460:	bl	c738 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    d464:	ldp	x19, x20, [sp, #16]
    d468:	ldp	x21, x22, [sp, #32]
    d46c:	ldr	x23, [sp, #48]
    d470:	ldp	x29, x30, [sp], #112
    d474:	ret
    d478:	ldur	x3, [x1, #-8]
    d47c:	b	d3f4 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x3c>
    d480:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d484:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d488:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d48c:	add	x3, x3, #0x0
    d490:	add	x1, x1, #0x0
    d494:	add	x0, x0, #0x0
    d498:	mov	w2, #0xe45                 	// #3653
    d49c:	bl	0 <__assert_fail>

000000000000d4a0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>:
    d4a0:	stp	x29, x30, [sp, #-128]!
    d4a4:	mov	x29, sp
    d4a8:	stp	x19, x20, [sp, #16]
    d4ac:	stp	x21, x22, [sp, #32]
    d4b0:	mov	x21, x0
    d4b4:	ldr	x20, [x0, #704]
    d4b8:	stp	x23, x24, [sp, #48]
    d4bc:	stp	x25, x26, [sp, #64]
    d4c0:	sub	x0, x20, #0x80
    d4c4:	mov	x25, x1
    d4c8:	str	x0, [x21, #704]
    d4cc:	mov	x26, x2
    d4d0:	ldp	x19, x22, [x20, #-24]
    d4d4:	cmp	x19, x22
    d4d8:	b.eq	d4f4 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x54>  // b.none
    d4dc:	nop
    d4e0:	ldr	x0, [x19], #8
    d4e4:	bl	0 <free>
    d4e8:	cmp	x22, x19
    d4ec:	b.ne	d4e0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x40>  // b.any
    d4f0:	ldur	x22, [x20, #-24]
    d4f4:	cbz	x22, d500 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x60>
    d4f8:	mov	x0, x22
    d4fc:	bl	0 <_ZdlPv>
    d500:	ldp	x19, x24, [x20, #-48]
    d504:	cmp	x19, x24
    d508:	b.eq	d56c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xcc>  // b.none
    d50c:	nop
    d510:	ldp	x23, x22, [x19, #24]
    d514:	cmp	x23, x22
    d518:	b.eq	d538 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x98>  // b.none
    d51c:	nop
    d520:	mov	x0, x23
    d524:	add	x23, x23, #0x30
    d528:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d52c:	cmp	x22, x23
    d530:	b.ne	d520 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x80>  // b.any
    d534:	ldr	x22, [x19, #24]
    d538:	cbz	x22, d544 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xa4>
    d53c:	mov	x0, x22
    d540:	bl	0 <_ZdlPv>
    d544:	ldr	w0, [x19, #16]
    d548:	cmp	w0, #0x40
    d54c:	b.ls	d55c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xbc>  // b.plast
    d550:	ldr	x0, [x19, #8]
    d554:	cbz	x0, d55c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xbc>
    d558:	bl	0 <_ZdaPv>
    d55c:	add	x19, x19, #0x30
    d560:	cmp	x24, x19
    d564:	b.ne	d510 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x70>  // b.any
    d568:	ldur	x24, [x20, #-48]
    d56c:	cbz	x24, d578 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xd8>
    d570:	mov	x0, x24
    d574:	bl	0 <_ZdlPv>
    d578:	ldur	x1, [x20, #-80]
    d57c:	sub	x0, x20, #0x60
    d580:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d584:	ldr	x0, [x21, #696]
    d588:	ldr	x20, [x21, #704]
    d58c:	cmp	x20, x0
    d590:	b.eq	d5d8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x138>  // b.none
    d594:	ldur	x0, [x20, #-104]
    d598:	ands	x19, x0, #0xfffffffffffffff8
    d59c:	b.eq	d5c0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x120>  // b.none
    d5a0:	ldr	x0, [x19]
    d5a4:	sub	x23, x20, #0x80
    d5a8:	ldrb	w0, [x0, #8]
    d5ac:	cbnz	w0, d64c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1ac>
    d5b0:	ldrb	w0, [x19, #16]
    d5b4:	cmp	w0, #0x1d
    d5b8:	b.eq	d600 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x160>  // b.none
    d5bc:	stur	xzr, [x20, #-104]
    d5c0:	ldp	x19, x20, [sp, #16]
    d5c4:	ldp	x21, x22, [sp, #32]
    d5c8:	ldp	x23, x24, [sp, #48]
    d5cc:	ldp	x25, x26, [sp, #64]
    d5d0:	ldp	x29, x30, [sp], #128
    d5d4:	ret
    d5d8:	cbz	x25, d5e4 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x144>
    d5dc:	ldrb	w0, [x25, #8]
    d5e0:	cbnz	w0, d628 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x188>
    d5e4:	str	xzr, [x21, #640]
    d5e8:	ldp	x19, x20, [sp, #16]
    d5ec:	ldp	x21, x22, [sp, #32]
    d5f0:	ldp	x23, x24, [sp, #48]
    d5f4:	ldp	x25, x26, [sp, #64]
    d5f8:	ldp	x29, x30, [sp], #128
    d5fc:	ret
    d600:	ldur	x1, [x19, #-72]
    d604:	cbz	x1, d678 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1d8>
    d608:	ldrb	w0, [x1, #16]
    d60c:	cmp	w0, #0x12
    d610:	b.ne	d698 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1f8>  // b.any
    d614:	mov	x2, x23
    d618:	mov	x0, x21
    d61c:	bl	c738 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    d620:	stur	xzr, [x20, #-104]
    d624:	b	d5c0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x120>
    d628:	mov	x1, x26
    d62c:	add	x0, x21, #0x288
    d630:	ldr	x2, [x1], #8
    d634:	str	x2, [x21, #640]
    d638:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d63c:	add	x1, x26, #0x18
    d640:	add	x0, x21, #0x298
    d644:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d648:	b	d5c0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x120>
    d64c:	add	x22, sp, #0x50
    d650:	mov	x1, x26
    d654:	mov	x0, x22
    d658:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d65c:	mov	x2, x23
    d660:	mov	x1, x22
    d664:	mov	x0, x19
    d668:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    d66c:	mov	x0, x22
    d670:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d674:	b	d5b0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x110>
    d678:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d67c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d680:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d684:	add	x3, x3, #0x0
    d688:	add	x1, x1, #0x0
    d68c:	add	x0, x0, #0x0
    d690:	mov	w2, #0x5b                  	// #91
    d694:	bl	0 <__assert_fail>
    d698:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d69c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d6a0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d6a4:	add	x3, x3, #0x0
    d6a8:	add	x1, x1, #0x0
    d6ac:	add	x0, x0, #0x0
    d6b0:	mov	w2, #0xfa                  	// #250
    d6b4:	bl	0 <__assert_fail>

000000000000d6b8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>:
    d6b8:	stp	x29, x30, [sp, #-176]!
    d6bc:	mov	x29, sp
    d6c0:	stp	x21, x22, [sp, #32]
    d6c4:	mov	x22, x0
    d6c8:	mov	x0, x1
    d6cc:	stp	x19, x20, [sp, #16]
    d6d0:	mov	x19, x1
    d6d4:	stp	x23, x24, [sp, #48]
    d6d8:	add	x24, sp, #0x80
    d6dc:	ldr	x20, [x22, #704]
    d6e0:	bl	0 <_ZNK4llvm5Value10getContextEv>
    d6e4:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
    d6e8:	stp	xzr, xzr, [sp, #80]
    d6ec:	ldr	w2, [x19, #20]
    d6f0:	mov	w1, #0x1                   	// #1
    d6f4:	str	w1, [sp, #96]
    d6f8:	stp	xzr, xzr, [sp, #104]
    d6fc:	mov	x23, x0
    d700:	ubfx	x1, x2, #0, #28
    d704:	str	xzr, [sp, #120]
    d708:	cbnz	w1, d7d0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x118>
    d70c:	add	x1, sp, #0x50
    d710:	mov	x0, x24
    d714:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d718:	mov	x2, x24
    d71c:	mov	x1, x23
    d720:	mov	x0, x22
    d724:	bl	d4a0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
    d728:	ldp	x19, x20, [sp, #152]
    d72c:	cmp	x19, x20
    d730:	b.eq	d750 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x98>  // b.none
    d734:	nop
    d738:	mov	x0, x19
    d73c:	add	x19, x19, #0x30
    d740:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d744:	cmp	x20, x19
    d748:	b.ne	d738 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x80>  // b.any
    d74c:	ldr	x20, [sp, #152]
    d750:	cbz	x20, d75c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xa4>
    d754:	mov	x0, x20
    d758:	bl	0 <_ZdlPv>
    d75c:	ldr	w0, [sp, #144]
    d760:	cmp	w0, #0x40
    d764:	b.ls	d774 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xbc>  // b.plast
    d768:	ldr	x0, [sp, #136]
    d76c:	cbz	x0, d774 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xbc>
    d770:	bl	0 <_ZdaPv>
    d774:	ldp	x19, x20, [sp, #104]
    d778:	cmp	x19, x20
    d77c:	b.eq	d798 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xe0>  // b.none
    d780:	mov	x0, x19
    d784:	add	x19, x19, #0x30
    d788:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d78c:	cmp	x20, x19
    d790:	b.ne	d780 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xc8>  // b.any
    d794:	ldr	x20, [sp, #104]
    d798:	cbz	x20, d7a4 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xec>
    d79c:	mov	x0, x20
    d7a0:	bl	0 <_ZdlPv>
    d7a4:	ldr	w0, [sp, #96]
    d7a8:	cmp	w0, #0x40
    d7ac:	b.ls	d7bc <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x104>  // b.plast
    d7b0:	ldr	x0, [sp, #88]
    d7b4:	cbz	x0, d7bc <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x104>
    d7b8:	bl	0 <_ZdaPv>
    d7bc:	ldp	x19, x20, [sp, #16]
    d7c0:	ldp	x21, x22, [sp, #32]
    d7c4:	ldp	x23, x24, [sp, #48]
    d7c8:	ldp	x29, x30, [sp], #176
    d7cc:	ret
    d7d0:	mov	w0, w1
    d7d4:	ubfiz	x1, x1, #2, #28
    d7d8:	sub	x1, x0, x1
    d7dc:	sub	x2, x20, #0x80
    d7e0:	mov	x0, x22
    d7e4:	mov	x8, x24
    d7e8:	stp	x25, x26, [sp, #64]
    d7ec:	ldr	x1, [x19, x1, lsl #3]
    d7f0:	ldr	x23, [x1]
    d7f4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d7f8:	ldr	x0, [sp, #128]
    d7fc:	str	x0, [sp, #80]
    d800:	ldr	w0, [sp, #96]
    d804:	cmp	w0, #0x40
    d808:	b.hi	d8bc <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x204>  // b.pmore
    d80c:	ldr	w1, [sp, #144]
    d810:	ldp	x26, x25, [sp, #104]
    d814:	str	w1, [sp, #96]
    d818:	ldr	x0, [sp, #136]
    d81c:	str	x0, [sp, #88]
    d820:	ldp	x0, x1, [sp, #152]
    d824:	stp	x0, x1, [sp, #104]
    d828:	mov	x19, x26
    d82c:	ldr	x0, [sp, #168]
    d830:	str	x0, [sp, #120]
    d834:	str	wzr, [sp, #144]
    d838:	cmp	x26, x25
    d83c:	stp	xzr, xzr, [sp, #152]
    d840:	str	xzr, [sp, #168]
    d844:	b.eq	d8a0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1e8>  // b.none
    d848:	ldp	x21, x20, [x19, #24]
    d84c:	cmp	x21, x20
    d850:	b.eq	d870 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1b8>  // b.none
    d854:	nop
    d858:	mov	x0, x21
    d85c:	add	x21, x21, #0x30
    d860:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d864:	cmp	x20, x21
    d868:	b.ne	d858 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1a0>  // b.any
    d86c:	ldr	x20, [x19, #24]
    d870:	cbz	x20, d87c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1c4>
    d874:	mov	x0, x20
    d878:	bl	0 <_ZdlPv>
    d87c:	ldr	w0, [x19, #16]
    d880:	cmp	w0, #0x40
    d884:	b.ls	d894 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1dc>  // b.plast
    d888:	ldr	x0, [x19, #8]
    d88c:	cbz	x0, d894 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1dc>
    d890:	bl	0 <_ZdaPv>
    d894:	add	x19, x19, #0x30
    d898:	cmp	x25, x19
    d89c:	b.ne	d848 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x190>  // b.any
    d8a0:	cbz	x26, d8ac <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1f4>
    d8a4:	mov	x0, x26
    d8a8:	bl	0 <_ZdlPv>
    d8ac:	mov	x0, x24
    d8b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d8b4:	ldp	x25, x26, [sp, #64]
    d8b8:	b	d70c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x54>
    d8bc:	ldr	x0, [sp, #88]
    d8c0:	cbz	x0, d80c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x154>
    d8c4:	bl	0 <_ZdaPv>
    d8c8:	b	d80c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x154>
    d8cc:	nop

000000000000d8d0 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>:
    d8d0:	stp	x29, x30, [sp, #-192]!
    d8d4:	mov	x29, sp
    d8d8:	ldr	x3, [x1]
    d8dc:	stp	x19, x20, [sp, #16]
    d8e0:	stp	x21, x22, [sp, #32]
    d8e4:	stp	x23, x24, [sp, #48]
    d8e8:	stp	x25, x26, [sp, #64]
    d8ec:	stp	x27, x28, [sp, #80]
    d8f0:	ldr	x24, [x0, #704]
    d8f4:	cbz	x3, db6c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x29c>
    d8f8:	mov	x21, x1
    d8fc:	ldrb	w1, [x3, #8]
    d900:	cmp	w1, #0xf
    d904:	b.ne	dbb0 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x2e0>  // b.any
    d908:	ldur	x1, [x21, #-24]
    d90c:	sub	x24, x24, #0x80
    d910:	add	x22, sp, #0x90
    d914:	mov	x23, x0
    d918:	mov	x8, x22
    d91c:	mov	x2, x24
    d920:	ldr	x25, [x3, #24]
    d924:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d928:	ldr	w19, [sp, #160]
    d92c:	cmp	w19, #0x40
    d930:	b.ls	da34 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x164>  // b.plast
    d934:	add	x0, x22, #0x8
    d938:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    d93c:	sub	w19, w19, w0
    d940:	cmp	w19, #0x40
    d944:	b.hi	dc04 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x334>  // b.pmore
    d948:	ldr	x0, [sp, #152]
    d94c:	ldr	x26, [x0]
    d950:	mov	x0, x22
    d954:	add	x19, x23, #0x58
    d958:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d95c:	mov	x0, x19
    d960:	mov	x1, x25
    d964:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d968:	add	x20, x0, #0x7
    d96c:	and	w27, w1, #0xff
    d970:	mov	x1, x25
    d974:	mov	x0, x19
    d978:	lsr	x20, x20, #3
    d97c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    d980:	mov	w1, w0
    d984:	cbz	w0, db90 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x2c0>
    d988:	sub	x19, x20, #0x1
    d98c:	add	x19, x19, x1
    d990:	udiv	x19, x19, x1
    d994:	mul	x19, x19, x1
    d998:	cbnz	w27, db8c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x2bc>
    d99c:	mul	w0, w26, w19
    d9a0:	mov	w28, #0x1                   	// #1
    d9a4:	cmp	w0, #0x0
    d9a8:	csel	w20, w0, w28, ne  // ne = any
    d9ac:	mov	x0, x20
    d9b0:	bl	0 <malloc>
    d9b4:	mov	x27, x0
    d9b8:	cbz	x0, dbd0 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x300>
    d9bc:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    d9c0:	ldr	x0, [x0]
    d9c4:	ldrb	w0, [x0]
    d9c8:	cbnz	w0, da3c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x16c>
    d9cc:	stp	x27, xzr, [sp, #96]
    d9d0:	str	w28, [sp, #112]
    d9d4:	stp	xzr, xzr, [sp, #120]
    d9d8:	str	xzr, [sp, #136]
    d9dc:	add	x19, sp, #0x60
    d9e0:	mov	x0, x22
    d9e4:	mov	x1, x19
    d9e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d9ec:	mov	x2, x24
    d9f0:	mov	x1, x22
    d9f4:	mov	x0, x21
    d9f8:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    d9fc:	mov	x0, x22
    da00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da04:	ldrb	w0, [x21, #16]
    da08:	cmp	w0, #0x37
    da0c:	b.eq	da88 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1b8>  // b.none
    da10:	mov	x0, x19
    da14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da18:	ldp	x19, x20, [sp, #16]
    da1c:	ldp	x21, x22, [sp, #32]
    da20:	ldp	x23, x24, [sp, #48]
    da24:	ldp	x25, x26, [sp, #64]
    da28:	ldp	x27, x28, [sp, #80]
    da2c:	ldp	x29, x30, [sp], #192
    da30:	ret
    da34:	ldr	x26, [sp, #152]
    da38:	b	d950 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x80>
    da3c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da40:	add	x0, x0, #0x0
    da44:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    da48:	tst	w0, #0xff
    da4c:	b.ne	dab4 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1e4>  // b.any
    da50:	mov	w0, #0x1                   	// #1
    da54:	stp	x27, xzr, [sp, #96]
    da58:	str	w0, [sp, #112]
    da5c:	stp	xzr, xzr, [sp, #120]
    da60:	str	xzr, [sp, #136]
    da64:	cbnz	x27, d9dc <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x10c>
    da68:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da6c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da70:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da74:	add	x3, x3, #0x0
    da78:	add	x1, x1, #0x0
    da7c:	add	x0, x0, #0x0
    da80:	mov	w2, #0x40d                 	// #1037
    da84:	bl	0 <__assert_fail>
    da88:	ldr	x2, [x23, #704]
    da8c:	str	x27, [sp, #144]
    da90:	sub	x0, x2, #0x18
    da94:	ldp	x1, x3, [x2, #-16]
    da98:	cmp	x1, x3
    da9c:	b.eq	db54 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x284>  // b.none
    daa0:	str	x27, [x1]
    daa4:	ldur	x0, [x2, #-16]
    daa8:	add	x0, x0, #0x8
    daac:	stur	x0, [x2, #-16]
    dab0:	b	da10 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x140>
    dab4:	bl	0 <_ZN4llvm4dbgsEv>
    dab8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dabc:	add	x1, x1, #0x0
    dac0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dac4:	mov	x28, x0
    dac8:	mov	w3, #0x0                   	// #0
    dacc:	mov	w2, #0x0                   	// #0
    dad0:	mov	x0, x25
    dad4:	mov	x1, x28
    dad8:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    dadc:	mov	x0, x28
    dae0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dae4:	add	x1, x1, #0x0
    dae8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    daec:	mov	w1, w19
    daf0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    daf4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    daf8:	add	x1, x1, #0x0
    dafc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db00:	mov	w1, w26
    db04:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    db08:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db0c:	add	x1, x1, #0x0
    db10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db14:	mov	x1, x20
    db18:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    db1c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db20:	add	x1, x1, #0x0
    db24:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db28:	mov	x1, x27
    db2c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    db30:	ldp	x3, x2, [x0, #16]
    db34:	mov	x1, x0
    db38:	cmp	x2, x3
    db3c:	b.cs	db60 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x290>  // b.hs, b.nlast
    db40:	add	x0, x2, #0x1
    db44:	str	x0, [x1, #24]
    db48:	mov	w0, #0xa                   	// #10
    db4c:	strb	w0, [x2]
    db50:	b	da50 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x180>
    db54:	mov	x2, x22
    db58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db5c:	b	da10 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x140>
    db60:	mov	w1, #0xa                   	// #10
    db64:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    db68:	b	da50 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x180>
    db6c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db70:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db74:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db78:	add	x3, x3, #0x0
    db7c:	add	x1, x1, #0x0
    db80:	add	x0, x0, #0x0
    db84:	mov	w2, #0x69                  	// #105
    db88:	bl	0 <__assert_fail>
    db8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db90:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db94:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db98:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db9c:	add	x3, x3, #0x0
    dba0:	add	x1, x1, #0x0
    dba4:	add	x0, x0, #0x0
    dba8:	mov	w2, #0xc7                  	// #199
    dbac:	bl	0 <__assert_fail>
    dbb0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dbb4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dbb8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dbbc:	add	x3, x3, #0x0
    dbc0:	add	x1, x1, #0x0
    dbc4:	add	x0, x0, #0x0
    dbc8:	mov	w2, #0x108                 	// #264
    dbcc:	bl	0 <__assert_fail>
    dbd0:	mov	w1, w28
    dbd4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dbd8:	add	x0, x0, #0x0
    dbdc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    dbe0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    dbe4:	ldr	x0, [x0]
    dbe8:	ldrb	w0, [x0]
    dbec:	cbnz	w0, da3c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x16c>
    dbf0:	stp	xzr, xzr, [sp, #96]
    dbf4:	str	w28, [sp, #112]
    dbf8:	stp	xzr, xzr, [sp, #120]
    dbfc:	str	xzr, [sp, #136]
    dc00:	b	da68 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x198>
    dc04:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dc08:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dc0c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dc10:	add	x3, x3, #0x0
    dc14:	add	x1, x1, #0x0
    dc18:	add	x0, x0, #0x0
    dc1c:	mov	w2, #0x657                 	// #1623
    dc20:	bl	0 <__assert_fail>
    dc24:	nop

000000000000dc28 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>:
    dc28:	stp	x29, x30, [sp, #-224]!
    dc2c:	mov	x29, sp
    dc30:	stp	x19, x20, [sp, #16]
    dc34:	mov	x19, x1
    dc38:	ldr	w1, [x1, #20]
    dc3c:	stp	x21, x22, [sp, #32]
    dc40:	ldr	x21, [x0, #704]
    dc44:	str	x23, [sp, #48]
    dc48:	ubfx	x1, x1, #0, #28
    dc4c:	cbz	w1, ddac <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x184>
    dc50:	mov	x20, x0
    dc54:	mov	w0, w1
    dc58:	ubfiz	x1, x1, #2, #28
    dc5c:	sub	x21, x21, #0x80
    dc60:	sub	x1, x0, x1
    dc64:	ldrb	w0, [x19, #16]
    dc68:	cmp	w0, #0x17
    dc6c:	ldr	x23, [x19, x1, lsl #3]
    dc70:	b.hi	dd70 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x148>  // b.pmore
    dc74:	cmp	w0, #0x5
    dc78:	b.ne	dd78 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x150>  // b.any
    dc7c:	ldrh	w0, [x19, #18]
    dc80:	cmp	w0, #0x22
    dc84:	b.ne	dd78 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x150>  // b.any
    dc88:	mov	x0, x19
    dc8c:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    dc90:	ldrb	w1, [x19, #23]
    dc94:	tbz	w1, #6, dd98 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x170>
    dc98:	ldur	x6, [x19, #-8]
    dc9c:	tst	x0, #0x7
    dca0:	add	x1, x6, #0x18
    dca4:	mov	x9, #0xffffffffffffffff    	// #-1
    dca8:	b.ne	ddcc <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x1a4>  // b.any
    dcac:	ldr	w3, [x19, #20]
    dcb0:	mov	w7, #0x18                  	// #24
    dcb4:	orr	x2, x0, #0x4
    dcb8:	stp	x1, x2, [sp, #128]
    dcbc:	add	x22, sp, #0xb0
    dcc0:	ubfx	x5, x3, #0, #28
    dcc4:	mov	x8, x22
    dcc8:	mov	x4, x21
    dccc:	add	x3, sp, #0x40
    dcd0:	mov	x0, x20
    dcd4:	mov	x1, x23
    dcd8:	umaddl	x5, w5, w7, x6
    dcdc:	add	x2, sp, #0x60
    dce0:	stp	x5, xzr, [sp, #152]
    dce4:	ldp	x6, x7, [sp, #128]
    dce8:	str	x9, [sp, #80]
    dcec:	ldp	x10, x11, [sp, #152]
    dcf0:	stp	x10, x11, [sp, #64]
    dcf4:	stp	x6, x7, [sp, #96]
    dcf8:	str	x9, [sp, #112]
    dcfc:	bl	5aa0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    dd00:	mov	x0, x19
    dd04:	mov	x2, x21
    dd08:	mov	x1, x22
    dd0c:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    dd10:	ldp	x19, x20, [sp, #200]
    dd14:	cmp	x19, x20
    dd18:	b.eq	dd38 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x110>  // b.none
    dd1c:	nop
    dd20:	mov	x0, x19
    dd24:	add	x19, x19, #0x30
    dd28:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dd2c:	cmp	x20, x19
    dd30:	b.ne	dd20 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0xf8>  // b.any
    dd34:	ldr	x20, [sp, #200]
    dd38:	cbz	x20, dd44 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x11c>
    dd3c:	mov	x0, x20
    dd40:	bl	0 <_ZdlPv>
    dd44:	ldr	w0, [sp, #192]
    dd48:	cmp	w0, #0x40
    dd4c:	b.ls	dd5c <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x134>  // b.plast
    dd50:	ldr	x0, [sp, #184]
    dd54:	cbz	x0, dd5c <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x134>
    dd58:	bl	0 <_ZdaPv>
    dd5c:	ldp	x19, x20, [sp, #16]
    dd60:	ldp	x21, x22, [sp, #32]
    dd64:	ldr	x23, [sp, #48]
    dd68:	ldp	x29, x30, [sp], #224
    dd6c:	ret
    dd70:	cmp	w0, #0x3a
    dd74:	b.eq	dc88 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x60>  // b.none
    dd78:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dd7c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dd80:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dd84:	add	x3, x3, #0x0
    dd88:	add	x1, x1, #0x0
    dd8c:	add	x0, x0, #0x0
    dd90:	mov	w2, #0x101                 	// #257
    dd94:	bl	0 <__assert_fail>
    dd98:	ldr	w5, [x19, #20]
    dd9c:	mov	w6, #0x18                  	// #24
    dda0:	ubfx	x5, x5, #0, #28
    dda4:	umsubl	x6, w5, w6, x19
    dda8:	b	dc9c <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x74>
    ddac:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ddb0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ddb4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ddb8:	add	x3, x3, #0x0
    ddbc:	add	x1, x1, #0x0
    ddc0:	add	x0, x0, #0x0
    ddc4:	mov	w2, #0x47c                 	// #1148
    ddc8:	bl	0 <__assert_fail>
    ddcc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ddd0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ddd4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ddd8:	add	x3, x3, #0x0
    dddc:	add	x1, x1, #0x0
    dde0:	add	x0, x0, #0x0
    dde4:	mov	w2, #0xb2                  	// #178
    dde8:	bl	0 <__assert_fail>
    ddec:	nop

000000000000ddf0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>:
    ddf0:	stp	x29, x30, [sp, #-208]!
    ddf4:	mov	x29, sp
    ddf8:	stp	x19, x20, [sp, #16]
    ddfc:	mov	x19, x1
    de00:	add	x8, sp, #0x40
    de04:	stp	x21, x22, [sp, #32]
    de08:	add	x22, sp, #0x70
    de0c:	add	x20, sp, #0xa0
    de10:	ldur	x1, [x1, #-24]
    de14:	ldr	x21, [x0, #704]
    de18:	str	x23, [sp, #48]
    de1c:	mov	x23, x0
    de20:	sub	x21, x21, #0x80
    de24:	mov	x2, x21
    de28:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    de2c:	ldr	x3, [x19]
    de30:	mov	w4, #0x1                   	// #1
    de34:	ldr	x2, [sp, #64]
    de38:	mov	x0, x23
    de3c:	mov	x1, x22
    de40:	stp	xzr, xzr, [sp, #112]
    de44:	str	w4, [sp, #128]
    de48:	stp	xzr, xzr, [sp, #136]
    de4c:	str	xzr, [sp, #152]
    de50:	bl	0 <_ZN4llvm15ExecutionEngine19LoadValueFromMemoryERNS_12GenericValueEPS1_PNS_4TypeE>
    de54:	mov	x0, x20
    de58:	mov	x1, x22
    de5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    de60:	mov	x2, x21
    de64:	mov	x1, x20
    de68:	mov	x0, x19
    de6c:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    de70:	ldp	x20, x21, [sp, #184]
    de74:	cmp	x20, x21
    de78:	b.eq	de98 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xa8>  // b.none
    de7c:	nop
    de80:	mov	x0, x20
    de84:	add	x20, x20, #0x30
    de88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    de8c:	cmp	x21, x20
    de90:	b.ne	de80 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x90>  // b.any
    de94:	ldr	x21, [sp, #184]
    de98:	cbz	x21, dea4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xb4>
    de9c:	mov	x0, x21
    dea0:	bl	0 <_ZdlPv>
    dea4:	ldr	w0, [sp, #176]
    dea8:	cmp	w0, #0x40
    deac:	b.ls	debc <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xcc>  // b.plast
    deb0:	ldr	x0, [sp, #168]
    deb4:	cbz	x0, debc <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xcc>
    deb8:	bl	0 <_ZdaPv>
    debc:	ldrb	w0, [x19, #18]
    dec0:	tbz	w0, #0, ded0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xe0>
    dec4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dec8:	ldrb	w0, [x0]
    decc:	cbnz	w0, df78 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x188>
    ded0:	ldp	x19, x20, [sp, #136]
    ded4:	cmp	x19, x20
    ded8:	b.eq	def8 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x108>  // b.none
    dedc:	nop
    dee0:	mov	x0, x19
    dee4:	add	x19, x19, #0x30
    dee8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    deec:	cmp	x20, x19
    def0:	b.ne	dee0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xf0>  // b.any
    def4:	ldr	x20, [sp, #136]
    def8:	cbz	x20, df04 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x114>
    defc:	mov	x0, x20
    df00:	bl	0 <_ZdlPv>
    df04:	ldr	w0, [sp, #128]
    df08:	cmp	w0, #0x40
    df0c:	b.ls	df1c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x12c>  // b.plast
    df10:	ldr	x0, [sp, #120]
    df14:	cbz	x0, df1c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x12c>
    df18:	bl	0 <_ZdaPv>
    df1c:	ldp	x19, x20, [sp, #88]
    df20:	cmp	x19, x20
    df24:	b.eq	df40 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x150>  // b.none
    df28:	mov	x0, x19
    df2c:	add	x19, x19, #0x30
    df30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    df34:	cmp	x20, x19
    df38:	b.ne	df28 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x138>  // b.any
    df3c:	ldr	x20, [sp, #88]
    df40:	cbz	x20, df4c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x15c>
    df44:	mov	x0, x20
    df48:	bl	0 <_ZdlPv>
    df4c:	ldr	w0, [sp, #80]
    df50:	cmp	w0, #0x40
    df54:	b.ls	df64 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x174>  // b.plast
    df58:	ldr	x0, [sp, #72]
    df5c:	cbz	x0, df64 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x174>
    df60:	bl	0 <_ZdaPv>
    df64:	ldp	x19, x20, [sp, #16]
    df68:	ldp	x21, x22, [sp, #32]
    df6c:	ldr	x23, [sp, #48]
    df70:	ldp	x29, x30, [sp], #208
    df74:	ret
    df78:	bl	0 <_ZN4llvm4dbgsEv>
    df7c:	mov	x1, x0
    df80:	ldp	x2, x3, [x0, #16]
    df84:	sub	x2, x2, x3
    df88:	cmp	x2, #0xd
    df8c:	b.ls	dfc4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x1d4>  // b.plast
    df90:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    df94:	add	x0, x0, #0x0
    df98:	ldr	x2, [x0]
    df9c:	str	x2, [x3]
    dfa0:	ldur	x0, [x0, #6]
    dfa4:	stur	x0, [x3, #6]
    dfa8:	ldr	x0, [x1, #24]
    dfac:	add	x0, x0, #0xe
    dfb0:	str	x0, [x1, #24]
    dfb4:	mov	x0, x19
    dfb8:	mov	w2, #0x0                   	// #0
    dfbc:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    dfc0:	b	ded0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xe0>
    dfc4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dfc8:	add	x1, x1, #0x0
    dfcc:	mov	x2, #0xe                   	// #14
    dfd0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    dfd4:	mov	x1, x0
    dfd8:	b	dfb4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x1c4>
    dfdc:	nop

000000000000dfe0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>:
    dfe0:	stp	x29, x30, [sp, #-416]!
    dfe4:	mov	x29, sp
    dfe8:	stp	x21, x22, [sp, #32]
    dfec:	mov	x22, x1
    dff0:	stp	x23, x24, [sp, #48]
    dff4:	ldur	x1, [x1, #-48]
    dff8:	stp	x27, x28, [sp, #80]
    dffc:	add	x27, sp, #0xe0
    e000:	ldr	x23, [x0, #704]
    e004:	mov	x8, x27
    e008:	stp	x19, x20, [sp, #16]
    e00c:	mov	x19, x0
    e010:	sub	x23, x23, #0x80
    e014:	mov	x2, x23
    e018:	stp	x25, x26, [sp, #64]
    e01c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e020:	ldur	x1, [x22, #-24]
    e024:	add	x25, sp, #0x110
    e028:	mov	x0, x19
    e02c:	mov	x2, x23
    e030:	mov	x8, x25
    e034:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e038:	ldr	x0, [x22]
    e03c:	mov	w1, #0x1                   	// #1
    e040:	ldrb	w0, [x0, #8]
    e044:	stp	xzr, xzr, [sp, #320]
    e048:	cmp	w0, #0x10
    e04c:	str	w1, [sp, #336]
    e050:	stp	xzr, xzr, [sp, #344]
    e054:	str	xzr, [sp, #360]
    e058:	b.ne	e394 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3b4>  // b.any
    e05c:	ldp	x1, x0, [sp, #248]
    e060:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e064:	ldr	x21, [sp, #296]
    e068:	movk	x2, #0xaaab
    e06c:	sub	x0, x0, x1
    e070:	ldr	x1, [sp, #304]
    e074:	asr	x0, x0, #4
    e078:	sub	x1, x1, x21
    e07c:	mul	x0, x0, x2
    e080:	asr	x1, x1, #4
    e084:	mul	x1, x1, x2
    e088:	cmp	x1, w0, uxtw
    e08c:	b.ne	e580 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x5a0>  // b.any
    e090:	cbz	w0, e284 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2a4>
    e094:	sub	w0, w0, #0x1
    e098:	add	x24, sp, #0x80
    e09c:	add	x20, x0, #0x1
    e0a0:	add	x0, sp, #0x90
    e0a4:	add	x26, sp, #0xa0
    e0a8:	str	x0, [sp, #112]
    e0ac:	add	x20, x20, x20, lsl #1
    e0b0:	add	x0, sp, #0x158
    e0b4:	mov	x19, #0x0                   	// #0
    e0b8:	str	x0, [sp, #120]
    e0bc:	lsl	x0, x20, #4
    e0c0:	str	x0, [sp, #104]
    e0c4:	nop
    e0c8:	add	x21, x21, x19
    e0cc:	mov	w0, #0x1                   	// #1
    e0d0:	stp	xzr, xzr, [sp, #368]
    e0d4:	str	w0, [sp, #384]
    e0d8:	stp	xzr, xzr, [sp, #392]
    e0dc:	ldr	w20, [x21, #16]
    e0e0:	str	xzr, [sp, #408]
    e0e4:	cmp	w20, #0x40
    e0e8:	b.ls	e2e4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x304>  // b.plast
    e0ec:	add	x0, x21, #0x8
    e0f0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e0f4:	sub	w1, w20, w0
    e0f8:	cmp	w1, #0x40
    e0fc:	b.hi	e560 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x580>  // b.pmore
    e100:	ldr	x2, [sp, #248]
    e104:	ldr	x0, [x21, #8]
    e108:	add	x2, x2, x19
    e10c:	add	x1, x2, #0x8
    e110:	ldr	x20, [x0]
    e114:	ldr	w0, [x1, #8]
    e118:	str	w0, [sp, #136]
    e11c:	cmp	w0, #0x40
    e120:	b.hi	e304 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x324>  // b.pmore
    e124:	ldr	x1, [x2, #8]
    e128:	str	x1, [sp, #128]
    e12c:	str	w0, [sp, #152]
    e130:	ldr	x1, [sp, #128]
    e134:	str	x1, [sp, #144]
    e138:	cmp	x20, w0, uxtw
    e13c:	mov	w21, w20
    e140:	mov	w1, w0
    e144:	b.cc	e38c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3ac>  // b.lo, b.ul, b.last
    e148:	sub	w0, w0, #0x1
    e14c:	str	w1, [sp, #168]
    e150:	cmp	w1, #0x40
    e154:	orr	x0, x0, x0, lsr #1
    e158:	orr	x0, x0, x0, lsr #2
    e15c:	orr	x0, x0, x0, lsr #4
    e160:	orr	x0, x0, x0, lsr #8
    e164:	orr	x0, x0, x0, lsr #16
    e168:	and	w21, w21, w0
    e16c:	b.hi	e348 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x368>  // b.pmore
    e170:	ldr	x0, [sp, #128]
    e174:	str	x0, [sp, #160]
    e178:	cmp	w21, w1
    e17c:	b.hi	e540 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x560>  // b.pmore
    e180:	cmp	w21, w1
    e184:	mov	x0, #0x0                   	// #0
    e188:	b.eq	e1a4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1c4>  // b.none
    e18c:	ldr	x2, [sp, #160]
    e190:	neg	w1, w1
    e194:	mov	x0, #0xffffffffffffffff    	// #-1
    e198:	lsr	x1, x0, x1
    e19c:	lsl	x21, x2, x21
    e1a0:	and	x0, x1, x21
    e1a4:	str	x0, [sp, #160]
    e1a8:	ldr	w0, [sp, #384]
    e1ac:	cmp	w0, #0x40
    e1b0:	b.ls	e1c0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1e0>  // b.plast
    e1b4:	ldr	x0, [sp, #376]
    e1b8:	cbz	x0, e1c0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1e0>
    e1bc:	bl	0 <_ZdaPv>
    e1c0:	ldr	x0, [sp, #160]
    e1c4:	str	x0, [sp, #376]
    e1c8:	ldr	w0, [sp, #168]
    e1cc:	str	w0, [sp, #384]
    e1d0:	ldr	w0, [sp, #152]
    e1d4:	cmp	w0, #0x40
    e1d8:	b.ls	e1e8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x208>  // b.plast
    e1dc:	ldr	x0, [sp, #144]
    e1e0:	cbz	x0, e1e8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x208>
    e1e4:	bl	0 <_ZdaPv>
    e1e8:	ldp	x0, x1, [sp, #352]
    e1ec:	add	x21, sp, #0x170
    e1f0:	cmp	x0, x1
    e1f4:	b.eq	e378 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x398>  // b.none
    e1f8:	mov	x1, x21
    e1fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e200:	ldr	x0, [sp, #352]
    e204:	add	x0, x0, #0x30
    e208:	str	x0, [sp, #352]
    e20c:	ldr	w0, [sp, #136]
    e210:	cmp	w0, #0x40
    e214:	b.ls	e224 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x244>  // b.plast
    e218:	ldr	x0, [sp, #128]
    e21c:	cbz	x0, e224 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x244>
    e220:	bl	0 <_ZdaPv>
    e224:	ldp	x20, x28, [sp, #392]
    e228:	cmp	x20, x28
    e22c:	b.eq	e248 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x268>  // b.none
    e230:	mov	x0, x20
    e234:	add	x20, x20, #0x30
    e238:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e23c:	cmp	x28, x20
    e240:	b.ne	e230 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x250>  // b.any
    e244:	ldr	x28, [sp, #392]
    e248:	cbz	x28, e254 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x274>
    e24c:	mov	x0, x28
    e250:	bl	0 <_ZdlPv>
    e254:	ldr	w0, [sp, #384]
    e258:	cmp	w0, #0x40
    e25c:	b.ls	e26c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x28c>  // b.plast
    e260:	ldr	x0, [sp, #376]
    e264:	cbz	x0, e26c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x28c>
    e268:	bl	0 <_ZdaPv>
    e26c:	ldr	x0, [sp, #104]
    e270:	add	x19, x19, #0x30
    e274:	cmp	x19, x0
    e278:	b.eq	e288 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2a8>  // b.none
    e27c:	ldr	x21, [sp, #296]
    e280:	b	e0c8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0xe8>
    e284:	add	x21, sp, #0x170
    e288:	add	x19, sp, #0x140
    e28c:	mov	x0, x21
    e290:	mov	x1, x19
    e294:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e298:	mov	x2, x23
    e29c:	mov	x1, x21
    e2a0:	mov	x0, x22
    e2a4:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    e2a8:	mov	x0, x21
    e2ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e2b0:	mov	x0, x19
    e2b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e2b8:	mov	x0, x25
    e2bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e2c0:	mov	x0, x27
    e2c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e2c8:	ldp	x19, x20, [sp, #16]
    e2cc:	ldp	x21, x22, [sp, #32]
    e2d0:	ldp	x23, x24, [sp, #48]
    e2d4:	ldp	x25, x26, [sp, #64]
    e2d8:	ldp	x27, x28, [sp, #80]
    e2dc:	ldp	x29, x30, [sp], #416
    e2e0:	ret
    e2e4:	ldr	x2, [sp, #248]
    e2e8:	ldr	x20, [x21, #8]
    e2ec:	add	x2, x2, x19
    e2f0:	add	x1, x2, #0x8
    e2f4:	ldr	w0, [x1, #8]
    e2f8:	str	w0, [sp, #136]
    e2fc:	cmp	w0, #0x40
    e300:	b.ls	e124 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x144>  // b.plast
    e304:	mov	x0, x24
    e308:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e30c:	ldr	w0, [sp, #136]
    e310:	str	w0, [sp, #152]
    e314:	cmp	w0, #0x40
    e318:	b.ls	e130 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x150>  // b.plast
    e31c:	ldr	x0, [sp, #112]
    e320:	mov	x1, x24
    e324:	mov	w21, w20
    e328:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e32c:	ldr	w0, [sp, #152]
    e330:	ldr	w1, [sp, #136]
    e334:	cmp	x20, w0, uxtw
    e338:	b.cs	e148 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x168>  // b.hs, b.nlast
    e33c:	str	w1, [sp, #168]
    e340:	cmp	w1, #0x40
    e344:	b.ls	e170 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x190>  // b.plast
    e348:	mov	x1, x24
    e34c:	mov	x0, x26
    e350:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e354:	ldr	w1, [sp, #168]
    e358:	cmp	w21, w1
    e35c:	b.hi	e540 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x560>  // b.pmore
    e360:	cmp	w1, #0x40
    e364:	b.ls	e180 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1a0>  // b.plast
    e368:	mov	w1, w21
    e36c:	mov	x0, x26
    e370:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    e374:	b	e1a8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1c8>
    e378:	mov	x1, x0
    e37c:	mov	x2, x21
    e380:	ldr	x0, [sp, #120]
    e384:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e388:	b	e20c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x22c>
    e38c:	str	w0, [sp, #168]
    e390:	b	e170 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x190>
    e394:	ldr	w19, [sp, #288]
    e398:	cmp	w19, #0x40
    e39c:	b.ls	e4ac <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4cc>  // b.plast
    e3a0:	add	x0, x25, #0x8
    e3a4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e3a8:	sub	w19, w19, w0
    e3ac:	cmp	w19, #0x40
    e3b0:	b.hi	e560 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x580>  // b.pmore
    e3b4:	ldr	x0, [sp, #280]
    e3b8:	ldr	w1, [sp, #240]
    e3bc:	ldr	x20, [x0]
    e3c0:	str	w1, [sp, #184]
    e3c4:	cmp	w1, #0x40
    e3c8:	b.hi	e4c0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4e0>  // b.pmore
    e3cc:	ldr	x0, [sp, #232]
    e3d0:	str	x0, [sp, #176]
    e3d4:	str	w1, [sp, #200]
    e3d8:	ldr	x0, [sp, #176]
    e3dc:	str	x0, [sp, #192]
    e3e0:	cmp	x20, w1, uxtw
    e3e4:	mov	w19, w20
    e3e8:	b.cc	e538 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x558>  // b.lo, b.ul, b.last
    e3ec:	mov	w0, w1
    e3f0:	sub	w0, w0, #0x1
    e3f4:	orr	x0, x0, x0, lsr #1
    e3f8:	orr	x0, x0, x0, lsr #2
    e3fc:	orr	x0, x0, x0, lsr #4
    e400:	orr	x0, x0, x0, lsr #8
    e404:	orr	x0, x0, x0, lsr #16
    e408:	and	w19, w19, w0
    e40c:	str	w1, [sp, #216]
    e410:	cmp	w1, #0x40
    e414:	b.hi	e504 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x524>  // b.pmore
    e418:	ldr	x0, [sp, #176]
    e41c:	str	x0, [sp, #208]
    e420:	cmp	w1, w19
    e424:	b.cc	e540 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x560>  // b.lo, b.ul, b.last
    e428:	add	x20, sp, #0xd0
    e42c:	cmp	w19, w1
    e430:	mov	x1, #0x0                   	// #0
    e434:	b.eq	e440 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x460>  // b.none
    e438:	ldr	x1, [sp, #208]
    e43c:	lsl	x1, x1, x19
    e440:	mov	x0, x20
    e444:	str	x1, [sp, #208]
    e448:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e44c:	ldr	w0, [sp, #336]
    e450:	cmp	w0, #0x40
    e454:	b.ls	e464 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x484>  // b.plast
    e458:	ldr	x0, [sp, #328]
    e45c:	cbz	x0, e464 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x484>
    e460:	bl	0 <_ZdaPv>
    e464:	ldr	x0, [sp, #208]
    e468:	str	x0, [sp, #328]
    e46c:	ldr	w0, [sp, #216]
    e470:	str	w0, [sp, #336]
    e474:	ldr	w0, [sp, #200]
    e478:	cmp	w0, #0x40
    e47c:	b.ls	e48c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4ac>  // b.plast
    e480:	ldr	x0, [sp, #192]
    e484:	cbz	x0, e48c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4ac>
    e488:	bl	0 <_ZdaPv>
    e48c:	ldr	w0, [sp, #184]
    e490:	cmp	w0, #0x40
    e494:	b.ls	e284 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2a4>  // b.plast
    e498:	ldr	x0, [sp, #176]
    e49c:	add	x21, sp, #0x170
    e4a0:	cbz	x0, e288 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2a8>
    e4a4:	bl	0 <_ZdaPv>
    e4a8:	b	e288 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2a8>
    e4ac:	ldr	w1, [sp, #240]
    e4b0:	str	w1, [sp, #184]
    e4b4:	cmp	w1, #0x40
    e4b8:	ldr	x20, [sp, #280]
    e4bc:	b.ls	e3cc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3ec>  // b.plast
    e4c0:	add	x19, sp, #0xb0
    e4c4:	add	x1, x27, #0x8
    e4c8:	mov	x0, x19
    e4cc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e4d0:	ldr	w1, [sp, #184]
    e4d4:	str	w1, [sp, #200]
    e4d8:	cmp	w1, #0x40
    e4dc:	b.ls	e3d8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3f8>  // b.plast
    e4e0:	mov	x1, x19
    e4e4:	add	x0, sp, #0xc0
    e4e8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e4ec:	mov	w19, w20
    e4f0:	ldr	w0, [sp, #200]
    e4f4:	ldr	w1, [sp, #184]
    e4f8:	cmp	x20, w0, uxtw
    e4fc:	b.cs	e3f0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x410>  // b.hs, b.nlast
    e500:	b	e40c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x42c>
    e504:	add	x20, sp, #0xd0
    e508:	add	x1, sp, #0xb0
    e50c:	mov	x0, x20
    e510:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e514:	ldr	w1, [sp, #216]
    e518:	cmp	w19, w1
    e51c:	b.hi	e540 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x560>  // b.pmore
    e520:	cmp	w1, #0x40
    e524:	b.ls	e42c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x44c>  // b.plast
    e528:	mov	w1, w19
    e52c:	mov	x0, x20
    e530:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    e534:	b	e44c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x46c>
    e538:	str	w1, [sp, #216]
    e53c:	b	e418 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x438>
    e540:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e544:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e548:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e54c:	add	x3, x3, #0x0
    e550:	add	x1, x1, #0x0
    e554:	add	x0, x0, #0x0
    e558:	mov	w2, #0x39a                 	// #922
    e55c:	bl	0 <__assert_fail>
    e560:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e564:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e568:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e56c:	add	x3, x3, #0x0
    e570:	add	x1, x1, #0x0
    e574:	add	x0, x0, #0x0
    e578:	mov	w2, #0x657                 	// #1623
    e57c:	bl	0 <__assert_fail>
    e580:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e584:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e588:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e58c:	add	x3, x3, #0x0
    e590:	add	x1, x1, #0x0
    e594:	add	x0, x0, #0x0
    e598:	mov	w2, #0x4ae                 	// #1198
    e59c:	bl	0 <__assert_fail>

000000000000e5a0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>:
    e5a0:	stp	x29, x30, [sp, #-416]!
    e5a4:	mov	x29, sp
    e5a8:	stp	x21, x22, [sp, #32]
    e5ac:	mov	x22, x1
    e5b0:	stp	x23, x24, [sp, #48]
    e5b4:	ldur	x1, [x1, #-48]
    e5b8:	stp	x27, x28, [sp, #80]
    e5bc:	add	x27, sp, #0xe0
    e5c0:	ldr	x23, [x0, #704]
    e5c4:	mov	x8, x27
    e5c8:	stp	x19, x20, [sp, #16]
    e5cc:	mov	x19, x0
    e5d0:	sub	x23, x23, #0x80
    e5d4:	mov	x2, x23
    e5d8:	stp	x25, x26, [sp, #64]
    e5dc:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e5e0:	ldur	x1, [x22, #-24]
    e5e4:	add	x26, sp, #0x110
    e5e8:	mov	x0, x19
    e5ec:	mov	x2, x23
    e5f0:	mov	x8, x26
    e5f4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e5f8:	ldr	x0, [x22]
    e5fc:	mov	w1, #0x1                   	// #1
    e600:	ldrb	w0, [x0, #8]
    e604:	stp	xzr, xzr, [sp, #320]
    e608:	cmp	w0, #0x10
    e60c:	str	w1, [sp, #336]
    e610:	stp	xzr, xzr, [sp, #344]
    e614:	str	xzr, [sp, #360]
    e618:	b.ne	e978 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3d8>  // b.any
    e61c:	ldp	x1, x0, [sp, #248]
    e620:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e624:	ldr	x21, [sp, #296]
    e628:	movk	x2, #0xaaab
    e62c:	sub	x0, x0, x1
    e630:	ldr	x1, [sp, #304]
    e634:	asr	x0, x0, #4
    e638:	sub	x1, x1, x21
    e63c:	mul	x0, x0, x2
    e640:	asr	x1, x1, #4
    e644:	mul	x1, x1, x2
    e648:	cmp	x1, w0, uxtw
    e64c:	b.ne	eb3c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x59c>  // b.any
    e650:	cbz	w0, e834 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x294>
    e654:	sub	w0, w0, #0x1
    e658:	add	x24, sp, #0x80
    e65c:	add	x20, x0, #0x1
    e660:	add	x0, sp, #0x90
    e664:	add	x25, sp, #0xa0
    e668:	str	x0, [sp, #112]
    e66c:	add	x20, x20, x20, lsl #1
    e670:	add	x0, sp, #0x158
    e674:	mov	x19, #0x0                   	// #0
    e678:	str	x0, [sp, #120]
    e67c:	lsl	x0, x20, #4
    e680:	str	x0, [sp, #104]
    e684:	nop
    e688:	add	x21, x21, x19
    e68c:	mov	w0, #0x1                   	// #1
    e690:	stp	xzr, xzr, [sp, #368]
    e694:	str	w0, [sp, #384]
    e698:	stp	xzr, xzr, [sp, #392]
    e69c:	ldr	w20, [x21, #16]
    e6a0:	str	xzr, [sp, #408]
    e6a4:	cmp	w20, #0x40
    e6a8:	b.ls	e894 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x2f4>  // b.plast
    e6ac:	add	x0, x21, #0x8
    e6b0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e6b4:	sub	w1, w20, w0
    e6b8:	cmp	w1, #0x40
    e6bc:	b.hi	eb1c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x57c>  // b.pmore
    e6c0:	ldr	x2, [sp, #248]
    e6c4:	ldr	x0, [x21, #8]
    e6c8:	add	x2, x2, x19
    e6cc:	add	x1, x2, #0x8
    e6d0:	ldr	x20, [x0]
    e6d4:	ldr	w0, [x1, #8]
    e6d8:	str	w0, [sp, #136]
    e6dc:	cmp	w0, #0x40
    e6e0:	b.hi	e8b4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x314>  // b.pmore
    e6e4:	ldr	x1, [x2, #8]
    e6e8:	str	x1, [sp, #128]
    e6ec:	str	w0, [sp, #152]
    e6f0:	ldr	x1, [sp, #128]
    e6f4:	str	x1, [sp, #144]
    e6f8:	cmp	x20, w0, uxtw
    e6fc:	mov	w21, w20
    e700:	mov	w1, w0
    e704:	b.cc	e93c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x39c>  // b.lo, b.ul, b.last
    e708:	sub	w0, w0, #0x1
    e70c:	str	w1, [sp, #168]
    e710:	cmp	w1, #0x40
    e714:	orr	x0, x0, x0, lsr #1
    e718:	orr	x0, x0, x0, lsr #2
    e71c:	orr	x0, x0, x0, lsr #4
    e720:	orr	x0, x0, x0, lsr #8
    e724:	orr	x0, x0, x0, lsr #16
    e728:	and	w21, w21, w0
    e72c:	b.hi	e8f8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x358>  // b.pmore
    e730:	ldr	x0, [sp, #128]
    e734:	str	x0, [sp, #160]
    e738:	cmp	w1, w21
    e73c:	b.cc	e950 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.lo, b.ul, b.last
    e740:	cmp	w21, w1
    e744:	b.eq	e970 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3d0>  // b.none
    e748:	ldr	x0, [sp, #160]
    e74c:	lsr	x21, x0, x21
    e750:	str	x21, [sp, #160]
    e754:	ldr	w0, [sp, #384]
    e758:	cmp	w0, #0x40
    e75c:	b.ls	e76c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1cc>  // b.plast
    e760:	ldr	x0, [sp, #376]
    e764:	cbz	x0, e76c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1cc>
    e768:	bl	0 <_ZdaPv>
    e76c:	ldr	x0, [sp, #160]
    e770:	str	x0, [sp, #376]
    e774:	ldr	w0, [sp, #168]
    e778:	str	w0, [sp, #384]
    e77c:	ldr	w0, [sp, #152]
    e780:	cmp	w0, #0x40
    e784:	b.ls	e794 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1f4>  // b.plast
    e788:	ldr	x0, [sp, #144]
    e78c:	cbz	x0, e794 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1f4>
    e790:	bl	0 <_ZdaPv>
    e794:	ldp	x0, x1, [sp, #352]
    e798:	add	x21, sp, #0x170
    e79c:	cmp	x0, x1
    e7a0:	b.eq	e928 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x388>  // b.none
    e7a4:	mov	x1, x21
    e7a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e7ac:	ldr	x0, [sp, #352]
    e7b0:	add	x0, x0, #0x30
    e7b4:	str	x0, [sp, #352]
    e7b8:	ldr	w0, [sp, #136]
    e7bc:	cmp	w0, #0x40
    e7c0:	b.ls	e7d0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x230>  // b.plast
    e7c4:	ldr	x0, [sp, #128]
    e7c8:	cbz	x0, e7d0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x230>
    e7cc:	bl	0 <_ZdaPv>
    e7d0:	ldp	x20, x28, [sp, #392]
    e7d4:	cmp	x20, x28
    e7d8:	b.eq	e7f8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x258>  // b.none
    e7dc:	nop
    e7e0:	mov	x0, x20
    e7e4:	add	x20, x20, #0x30
    e7e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e7ec:	cmp	x28, x20
    e7f0:	b.ne	e7e0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x240>  // b.any
    e7f4:	ldr	x28, [sp, #392]
    e7f8:	cbz	x28, e804 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x264>
    e7fc:	mov	x0, x28
    e800:	bl	0 <_ZdlPv>
    e804:	ldr	w0, [sp, #384]
    e808:	cmp	w0, #0x40
    e80c:	b.ls	e81c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x27c>  // b.plast
    e810:	ldr	x0, [sp, #376]
    e814:	cbz	x0, e81c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x27c>
    e818:	bl	0 <_ZdaPv>
    e81c:	ldr	x0, [sp, #104]
    e820:	add	x19, x19, #0x30
    e824:	cmp	x0, x19
    e828:	b.eq	e838 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x298>  // b.none
    e82c:	ldr	x21, [sp, #296]
    e830:	b	e688 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0xe8>
    e834:	add	x21, sp, #0x170
    e838:	add	x19, sp, #0x140
    e83c:	mov	x0, x21
    e840:	mov	x1, x19
    e844:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e848:	mov	x2, x23
    e84c:	mov	x1, x21
    e850:	mov	x0, x22
    e854:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    e858:	mov	x0, x21
    e85c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e860:	mov	x0, x19
    e864:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e868:	mov	x0, x26
    e86c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e870:	mov	x0, x27
    e874:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e878:	ldp	x19, x20, [sp, #16]
    e87c:	ldp	x21, x22, [sp, #32]
    e880:	ldp	x23, x24, [sp, #48]
    e884:	ldp	x25, x26, [sp, #64]
    e888:	ldp	x27, x28, [sp, #80]
    e88c:	ldp	x29, x30, [sp], #416
    e890:	ret
    e894:	ldr	x2, [sp, #248]
    e898:	ldr	x20, [x21, #8]
    e89c:	add	x2, x2, x19
    e8a0:	add	x1, x2, #0x8
    e8a4:	ldr	w0, [x1, #8]
    e8a8:	str	w0, [sp, #136]
    e8ac:	cmp	w0, #0x40
    e8b0:	b.ls	e6e4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x144>  // b.plast
    e8b4:	mov	x0, x24
    e8b8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e8bc:	ldr	w0, [sp, #136]
    e8c0:	str	w0, [sp, #152]
    e8c4:	cmp	w0, #0x40
    e8c8:	b.ls	e6f0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x150>  // b.plast
    e8cc:	ldr	x0, [sp, #112]
    e8d0:	mov	x1, x24
    e8d4:	mov	w21, w20
    e8d8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e8dc:	ldr	w0, [sp, #152]
    e8e0:	ldr	w1, [sp, #136]
    e8e4:	cmp	x20, w0, uxtw
    e8e8:	b.cs	e708 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x168>  // b.hs, b.nlast
    e8ec:	str	w1, [sp, #168]
    e8f0:	cmp	w1, #0x40
    e8f4:	b.ls	e730 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x190>  // b.plast
    e8f8:	mov	x1, x24
    e8fc:	mov	x0, x25
    e900:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e904:	ldr	w1, [sp, #168]
    e908:	cmp	w21, w1
    e90c:	b.hi	e950 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.pmore
    e910:	cmp	w1, #0x40
    e914:	b.ls	e740 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1a0>  // b.plast
    e918:	mov	w1, w21
    e91c:	mov	x0, x25
    e920:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    e924:	b	e754 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1b4>
    e928:	mov	x1, x0
    e92c:	mov	x2, x21
    e930:	ldr	x0, [sp, #120]
    e934:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e938:	b	e7b8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x218>
    e93c:	str	w0, [sp, #168]
    e940:	cmp	w1, w21
    e944:	ldr	x0, [sp, #128]
    e948:	str	x0, [sp, #160]
    e94c:	b.cs	e740 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1a0>  // b.hs, b.nlast
    e950:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e954:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e958:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e95c:	add	x3, x3, #0x0
    e960:	add	x1, x1, #0x0
    e964:	add	x0, x0, #0x0
    e968:	mov	w2, #0x3e3                 	// #995
    e96c:	bl	0 <__assert_fail>
    e970:	str	xzr, [sp, #160]
    e974:	b	e754 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1b4>
    e978:	ldr	w19, [sp, #288]
    e97c:	cmp	w19, #0x40
    e980:	b.ls	ea88 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4e8>  // b.plast
    e984:	add	x0, x26, #0x8
    e988:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e98c:	sub	w19, w19, w0
    e990:	cmp	w19, #0x40
    e994:	b.hi	eb1c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x57c>  // b.pmore
    e998:	ldr	x0, [sp, #280]
    e99c:	ldr	w1, [sp, #240]
    e9a0:	ldr	x20, [x0]
    e9a4:	str	w1, [sp, #184]
    e9a8:	cmp	w1, #0x40
    e9ac:	b.hi	ea9c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4fc>  // b.pmore
    e9b0:	ldr	x0, [sp, #232]
    e9b4:	str	x0, [sp, #176]
    e9b8:	str	w1, [sp, #200]
    e9bc:	ldr	x0, [sp, #176]
    e9c0:	str	x0, [sp, #192]
    e9c4:	cmp	x20, w1, uxtw
    e9c8:	mov	w19, w20
    e9cc:	b.cc	eb14 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x574>  // b.lo, b.ul, b.last
    e9d0:	mov	w0, w1
    e9d4:	sub	w0, w0, #0x1
    e9d8:	orr	x0, x0, x0, lsr #1
    e9dc:	orr	x0, x0, x0, lsr #2
    e9e0:	orr	x0, x0, x0, lsr #4
    e9e4:	orr	x0, x0, x0, lsr #8
    e9e8:	orr	x0, x0, x0, lsr #16
    e9ec:	and	w19, w19, w0
    e9f0:	str	w1, [sp, #216]
    e9f4:	cmp	w1, #0x40
    e9f8:	b.hi	eae0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x540>  // b.pmore
    e9fc:	ldr	x0, [sp, #176]
    ea00:	str	x0, [sp, #208]
    ea04:	cmp	w1, w19
    ea08:	b.cc	e950 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.lo, b.ul, b.last
    ea0c:	cmp	w19, w1
    ea10:	b.eq	ea80 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4e0>  // b.none
    ea14:	ldr	x0, [sp, #208]
    ea18:	lsr	x19, x0, x19
    ea1c:	str	x19, [sp, #208]
    ea20:	ldr	w0, [sp, #336]
    ea24:	cmp	w0, #0x40
    ea28:	b.ls	ea38 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x498>  // b.plast
    ea2c:	ldr	x0, [sp, #328]
    ea30:	cbz	x0, ea38 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x498>
    ea34:	bl	0 <_ZdaPv>
    ea38:	ldr	x0, [sp, #208]
    ea3c:	str	x0, [sp, #328]
    ea40:	ldr	w0, [sp, #216]
    ea44:	str	w0, [sp, #336]
    ea48:	ldr	w0, [sp, #200]
    ea4c:	cmp	w0, #0x40
    ea50:	b.ls	ea60 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4c0>  // b.plast
    ea54:	ldr	x0, [sp, #192]
    ea58:	cbz	x0, ea60 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4c0>
    ea5c:	bl	0 <_ZdaPv>
    ea60:	ldr	w0, [sp, #184]
    ea64:	cmp	w0, #0x40
    ea68:	b.ls	e834 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x294>  // b.plast
    ea6c:	ldr	x0, [sp, #176]
    ea70:	add	x21, sp, #0x170
    ea74:	cbz	x0, e838 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x298>
    ea78:	bl	0 <_ZdaPv>
    ea7c:	b	e838 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x298>
    ea80:	str	xzr, [sp, #208]
    ea84:	b	ea20 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x480>
    ea88:	ldr	w1, [sp, #240]
    ea8c:	str	w1, [sp, #184]
    ea90:	cmp	w1, #0x40
    ea94:	ldr	x20, [sp, #280]
    ea98:	b.ls	e9b0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x410>  // b.plast
    ea9c:	add	x19, sp, #0xb0
    eaa0:	add	x1, x27, #0x8
    eaa4:	mov	x0, x19
    eaa8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    eaac:	ldr	w1, [sp, #184]
    eab0:	str	w1, [sp, #200]
    eab4:	cmp	w1, #0x40
    eab8:	b.ls	e9bc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x41c>  // b.plast
    eabc:	mov	x1, x19
    eac0:	add	x0, sp, #0xc0
    eac4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    eac8:	mov	w19, w20
    eacc:	ldr	w0, [sp, #200]
    ead0:	ldr	w1, [sp, #184]
    ead4:	cmp	x20, w0, uxtw
    ead8:	b.cs	e9d4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x434>  // b.hs, b.nlast
    eadc:	b	e9f0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x450>
    eae0:	add	x20, sp, #0xd0
    eae4:	add	x1, sp, #0xb0
    eae8:	mov	x0, x20
    eaec:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    eaf0:	ldr	w1, [sp, #216]
    eaf4:	cmp	w19, w1
    eaf8:	b.hi	e950 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.pmore
    eafc:	cmp	w1, #0x40
    eb00:	b.ls	ea0c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x46c>  // b.plast
    eb04:	mov	w1, w19
    eb08:	mov	x0, x20
    eb0c:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    eb10:	b	ea20 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x480>
    eb14:	str	w1, [sp, #216]
    eb18:	b	e9fc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x45c>
    eb1c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eb20:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eb24:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eb28:	add	x3, x3, #0x0
    eb2c:	add	x1, x1, #0x0
    eb30:	add	x0, x0, #0x0
    eb34:	mov	w2, #0x657                 	// #1623
    eb38:	bl	0 <__assert_fail>
    eb3c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eb40:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eb44:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eb48:	add	x3, x3, #0x0
    eb4c:	add	x1, x1, #0x0
    eb50:	add	x0, x0, #0x0
    eb54:	mov	w2, #0x4c9                 	// #1225
    eb58:	bl	0 <__assert_fail>
    eb5c:	nop

000000000000eb60 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>:
    eb60:	stp	x29, x30, [sp, #-416]!
    eb64:	mov	x29, sp
    eb68:	stp	x21, x22, [sp, #32]
    eb6c:	mov	x21, x1
    eb70:	add	x1, sp, #0xe0
    eb74:	mov	x8, x1
    eb78:	stp	x23, x24, [sp, #48]
    eb7c:	str	x1, [sp, #104]
    eb80:	ldur	x1, [x21, #-48]
    eb84:	stp	x19, x20, [sp, #16]
    eb88:	mov	x19, x0
    eb8c:	ldr	x23, [x0, #704]
    eb90:	stp	x25, x26, [sp, #64]
    eb94:	add	x26, sp, #0x110
    eb98:	sub	x23, x23, #0x80
    eb9c:	stp	x27, x28, [sp, #80]
    eba0:	mov	x2, x23
    eba4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    eba8:	ldur	x1, [x21, #-24]
    ebac:	mov	x0, x19
    ebb0:	mov	x2, x23
    ebb4:	mov	x8, x26
    ebb8:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ebbc:	ldr	x0, [x21]
    ebc0:	mov	w1, #0x1                   	// #1
    ebc4:	ldrb	w0, [x0, #8]
    ebc8:	stp	xzr, xzr, [sp, #320]
    ebcc:	cmp	w0, #0x10
    ebd0:	str	w1, [sp, #336]
    ebd4:	stp	xzr, xzr, [sp, #344]
    ebd8:	str	xzr, [sp, #360]
    ebdc:	b.ne	ef40 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3e0>  // b.any
    ebe0:	ldp	x2, x0, [sp, #248]
    ebe4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    ebe8:	ldr	x1, [sp, #296]
    ebec:	movk	x3, #0xaaab
    ebf0:	sub	x0, x0, x2
    ebf4:	ldr	x2, [sp, #304]
    ebf8:	asr	x22, x0, #4
    ebfc:	sub	x2, x2, x1
    ec00:	mul	x22, x22, x3
    ec04:	cmp	x2, x0
    ec08:	b.ne	f140 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5e0>  // b.any
    ec0c:	mov	w19, #0x0                   	// #0
    ec10:	mov	x0, #0x0                   	// #0
    ec14:	cbz	x22, ed10 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b0>
    ec18:	add	x2, sp, #0x90
    ec1c:	add	x25, sp, #0x80
    ec20:	add	x24, sp, #0xa0
    ec24:	str	x2, [sp, #112]
    ec28:	add	x2, sp, #0x158
    ec2c:	str	x2, [sp, #120]
    ec30:	add	x0, x0, x0, lsl #1
    ec34:	mov	w2, #0x1                   	// #1
    ec38:	stp	xzr, xzr, [sp, #368]
    ec3c:	lsl	x20, x0, #4
    ec40:	add	x27, x1, x20
    ec44:	str	w2, [sp, #384]
    ec48:	stp	xzr, xzr, [sp, #392]
    ec4c:	ldr	w28, [x27, #16]
    ec50:	str	xzr, [sp, #408]
    ec54:	cmp	w28, #0x40
    ec58:	b.ls	ed70 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x210>  // b.plast
    ec5c:	add	x0, x27, #0x8
    ec60:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ec64:	sub	w2, w28, w0
    ec68:	cmp	w2, #0x40
    ec6c:	b.hi	f100 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5a0>  // b.pmore
    ec70:	ldr	x0, [x27, #8]
    ec74:	ldr	x27, [x0]
    ec78:	ldr	x0, [sp, #248]
    ec7c:	add	x20, x0, x20
    ec80:	add	x1, x20, #0x8
    ec84:	ldr	w2, [x1, #8]
    ec88:	str	w2, [sp, #136]
    ec8c:	cmp	w2, #0x40
    ec90:	b.hi	ed90 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x230>  // b.pmore
    ec94:	ldr	x0, [x20, #8]
    ec98:	str	x0, [sp, #128]
    ec9c:	str	w2, [sp, #152]
    eca0:	ldr	x0, [sp, #128]
    eca4:	str	x0, [sp, #144]
    eca8:	cmp	x27, w2, uxtw
    ecac:	mov	w20, w27
    ecb0:	b.cc	ef38 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3d8>  // b.lo, b.ul, b.last
    ecb4:	mov	w0, w2
    ecb8:	sub	w0, w0, #0x1
    ecbc:	str	w2, [sp, #168]
    ecc0:	cmp	w2, #0x40
    ecc4:	orr	x0, x0, x0, lsr #1
    ecc8:	orr	x0, x0, x0, lsr #2
    eccc:	orr	x0, x0, x0, lsr #4
    ecd0:	orr	x0, x0, x0, lsr #8
    ecd4:	orr	x0, x0, x0, lsr #16
    ecd8:	and	w20, w20, w0
    ecdc:	b.hi	edd8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x278>  // b.pmore
    ece0:	ldr	x0, [sp, #128]
    ece4:	str	x0, [sp, #160]
    ece8:	cmp	w20, w2
    ecec:	b.ls	ee10 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2b0>  // b.plast
    ecf0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ecf4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ecf8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ecfc:	add	x3, x3, #0x0
    ed00:	add	x1, x1, #0x0
    ed04:	add	x0, x0, #0x0
    ed08:	mov	w2, #0x3cb                 	// #971
    ed0c:	bl	0 <__assert_fail>
    ed10:	add	x20, sp, #0x170
    ed14:	add	x19, sp, #0x140
    ed18:	mov	x0, x20
    ed1c:	mov	x1, x19
    ed20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ed24:	mov	x2, x23
    ed28:	mov	x1, x20
    ed2c:	mov	x0, x21
    ed30:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    ed34:	mov	x0, x20
    ed38:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ed3c:	mov	x0, x19
    ed40:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ed44:	mov	x0, x26
    ed48:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ed4c:	ldr	x0, [sp, #104]
    ed50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ed54:	ldp	x19, x20, [sp, #16]
    ed58:	ldp	x21, x22, [sp, #32]
    ed5c:	ldp	x23, x24, [sp, #48]
    ed60:	ldp	x25, x26, [sp, #64]
    ed64:	ldp	x27, x28, [sp, #80]
    ed68:	ldp	x29, x30, [sp], #416
    ed6c:	ret
    ed70:	ldr	x0, [sp, #248]
    ed74:	ldr	x27, [x27, #8]
    ed78:	add	x20, x0, x20
    ed7c:	add	x1, x20, #0x8
    ed80:	ldr	w2, [x1, #8]
    ed84:	str	w2, [sp, #136]
    ed88:	cmp	w2, #0x40
    ed8c:	b.ls	ec94 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x134>  // b.plast
    ed90:	mov	x0, x25
    ed94:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ed98:	ldr	w2, [sp, #136]
    ed9c:	str	w2, [sp, #152]
    eda0:	cmp	w2, #0x40
    eda4:	b.ls	eca0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x140>  // b.plast
    eda8:	ldr	x0, [sp, #112]
    edac:	mov	x1, x25
    edb0:	mov	w20, w27
    edb4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    edb8:	ldr	w0, [sp, #152]
    edbc:	ldr	w2, [sp, #136]
    edc0:	cmp	x27, w0, uxtw
    edc4:	b.cs	ecb8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x158>  // b.hs, b.nlast
    edc8:	str	w2, [sp, #168]
    edcc:	cmp	w2, #0x40
    edd0:	b.ls	ece0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x180>  // b.plast
    edd4:	nop
    edd8:	mov	x1, x25
    eddc:	mov	x0, x24
    ede0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ede4:	ldr	w2, [sp, #168]
    ede8:	cmp	w20, w2
    edec:	b.hi	ecf0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x190>  // b.pmore
    edf0:	cmp	w2, #0x40
    edf4:	b.ls	ee08 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2a8>  // b.plast
    edf8:	mov	w1, w20
    edfc:	mov	x0, x24
    ee00:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    ee04:	b	ee44 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2e4>
    ee08:	ldr	x0, [sp, #160]
    ee0c:	nop
    ee10:	cbz	w2, f120 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5c0>
    ee14:	mov	w1, #0x40                  	// #64
    ee18:	sub	w3, w1, w2
    ee1c:	cmp	w20, w2
    ee20:	mov	x1, #0xffffffffffffffff    	// #-1
    ee24:	lsl	x0, x0, x3
    ee28:	asr	x0, x0, x3
    ee2c:	asr	x2, x0, #63
    ee30:	asr	x0, x0, x20
    ee34:	csel	x0, x0, x2, ne  // ne = any
    ee38:	lsr	x1, x1, x3
    ee3c:	and	x0, x1, x0
    ee40:	str	x0, [sp, #160]
    ee44:	ldr	w0, [sp, #384]
    ee48:	cmp	w0, #0x40
    ee4c:	b.ls	ee5c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2fc>  // b.plast
    ee50:	ldr	x0, [sp, #376]
    ee54:	cbz	x0, ee5c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2fc>
    ee58:	bl	0 <_ZdaPv>
    ee5c:	ldr	x0, [sp, #160]
    ee60:	str	x0, [sp, #376]
    ee64:	ldr	w0, [sp, #168]
    ee68:	str	w0, [sp, #384]
    ee6c:	ldr	w0, [sp, #152]
    ee70:	cmp	w0, #0x40
    ee74:	b.ls	ee84 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x324>  // b.plast
    ee78:	ldr	x0, [sp, #144]
    ee7c:	cbz	x0, ee84 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x324>
    ee80:	bl	0 <_ZdaPv>
    ee84:	ldp	x0, x1, [sp, #352]
    ee88:	add	x20, sp, #0x170
    ee8c:	cmp	x0, x1
    ee90:	b.eq	ef24 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3c4>  // b.none
    ee94:	mov	x1, x20
    ee98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ee9c:	ldr	x0, [sp, #352]
    eea0:	add	x0, x0, #0x30
    eea4:	str	x0, [sp, #352]
    eea8:	ldr	w0, [sp, #136]
    eeac:	cmp	w0, #0x40
    eeb0:	b.ls	eec0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x360>  // b.plast
    eeb4:	ldr	x0, [sp, #128]
    eeb8:	cbz	x0, eec0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x360>
    eebc:	bl	0 <_ZdaPv>
    eec0:	ldp	x27, x28, [sp, #392]
    eec4:	cmp	x27, x28
    eec8:	b.eq	eee8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x388>  // b.none
    eecc:	nop
    eed0:	mov	x0, x27
    eed4:	add	x27, x27, #0x30
    eed8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eedc:	cmp	x28, x27
    eee0:	b.ne	eed0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x370>  // b.any
    eee4:	ldr	x28, [sp, #392]
    eee8:	cbz	x28, eef4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x394>
    eeec:	mov	x0, x28
    eef0:	bl	0 <_ZdlPv>
    eef4:	ldr	w0, [sp, #384]
    eef8:	cmp	w0, #0x40
    eefc:	b.ls	ef0c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3ac>  // b.plast
    ef00:	ldr	x0, [sp, #376]
    ef04:	cbz	x0, ef0c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3ac>
    ef08:	bl	0 <_ZdaPv>
    ef0c:	add	w0, w19, #0x1
    ef10:	mov	x19, x0
    ef14:	cmp	x22, w0, uxtw
    ef18:	b.ls	ed14 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b4>  // b.plast
    ef1c:	ldr	x1, [sp, #296]
    ef20:	b	ec30 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0xd0>
    ef24:	mov	x1, x0
    ef28:	mov	x2, x20
    ef2c:	ldr	x0, [sp, #120]
    ef30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ef34:	b	eea8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x348>
    ef38:	str	w2, [sp, #168]
    ef3c:	b	ece0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x180>
    ef40:	ldr	w19, [sp, #288]
    ef44:	cmp	w19, #0x40
    ef48:	b.ls	f068 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x508>  // b.plast
    ef4c:	add	x0, x26, #0x8
    ef50:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ef54:	sub	w19, w19, w0
    ef58:	cmp	w19, #0x40
    ef5c:	b.hi	f100 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5a0>  // b.pmore
    ef60:	ldr	x0, [sp, #280]
    ef64:	ldr	w1, [sp, #240]
    ef68:	ldr	x20, [x0]
    ef6c:	str	w1, [sp, #184]
    ef70:	cmp	w1, #0x40
    ef74:	b.hi	f07c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x51c>  // b.pmore
    ef78:	ldr	x0, [sp, #232]
    ef7c:	str	x0, [sp, #176]
    ef80:	str	w1, [sp, #200]
    ef84:	ldr	x0, [sp, #176]
    ef88:	str	x0, [sp, #192]
    ef8c:	mov	w2, w1
    ef90:	cmp	x20, w1, uxtw
    ef94:	mov	w19, w20
    ef98:	b.cc	f0f8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x598>  // b.lo, b.ul, b.last
    ef9c:	sub	w0, w1, #0x1
    efa0:	orr	x0, x0, x0, lsr #1
    efa4:	orr	x0, x0, x0, lsr #2
    efa8:	orr	x0, x0, x0, lsr #4
    efac:	orr	x0, x0, x0, lsr #8
    efb0:	orr	x0, x0, x0, lsr #16
    efb4:	and	w19, w19, w0
    efb8:	str	w2, [sp, #216]
    efbc:	cmp	w2, #0x40
    efc0:	b.hi	f0c4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x564>  // b.pmore
    efc4:	ldr	x0, [sp, #176]
    efc8:	str	x0, [sp, #208]
    efcc:	cmp	w2, w19
    efd0:	b.cc	ecf0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x190>  // b.lo, b.ul, b.last
    efd4:	ldr	x1, [sp, #208]
    efd8:	cbz	w2, f120 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5c0>
    efdc:	mov	w3, #0x40                  	// #64
    efe0:	sub	w3, w3, w2
    efe4:	cmp	w19, w2
    efe8:	add	x0, sp, #0xd0
    efec:	lsl	x1, x1, x3
    eff0:	asr	x1, x1, x3
    eff4:	asr	x2, x1, #63
    eff8:	asr	x1, x1, x19
    effc:	csel	x1, x1, x2, ne  // ne = any
    f000:	str	x1, [sp, #208]
    f004:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f008:	ldr	w0, [sp, #336]
    f00c:	cmp	w0, #0x40
    f010:	b.ls	f020 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4c0>  // b.plast
    f014:	ldr	x0, [sp, #328]
    f018:	cbz	x0, f020 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4c0>
    f01c:	bl	0 <_ZdaPv>
    f020:	ldr	x0, [sp, #208]
    f024:	str	x0, [sp, #328]
    f028:	ldr	w0, [sp, #216]
    f02c:	str	w0, [sp, #336]
    f030:	ldr	w0, [sp, #200]
    f034:	cmp	w0, #0x40
    f038:	b.ls	f048 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4e8>  // b.plast
    f03c:	ldr	x0, [sp, #192]
    f040:	cbz	x0, f048 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4e8>
    f044:	bl	0 <_ZdaPv>
    f048:	ldr	w0, [sp, #184]
    f04c:	cmp	w0, #0x40
    f050:	b.ls	ed10 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b0>  // b.plast
    f054:	ldr	x0, [sp, #176]
    f058:	add	x20, sp, #0x170
    f05c:	cbz	x0, ed14 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b4>
    f060:	bl	0 <_ZdaPv>
    f064:	b	ed14 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b4>
    f068:	ldr	w1, [sp, #240]
    f06c:	str	w1, [sp, #184]
    f070:	cmp	w1, #0x40
    f074:	ldr	x20, [sp, #280]
    f078:	b.ls	ef78 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x418>  // b.plast
    f07c:	ldr	x0, [sp, #104]
    f080:	add	x19, sp, #0xb0
    f084:	add	x1, x0, #0x8
    f088:	mov	x0, x19
    f08c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f090:	ldr	w1, [sp, #184]
    f094:	str	w1, [sp, #200]
    f098:	cmp	w1, #0x40
    f09c:	b.ls	ef84 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x424>  // b.plast
    f0a0:	mov	x1, x19
    f0a4:	add	x0, sp, #0xc0
    f0a8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f0ac:	mov	w19, w20
    f0b0:	ldr	w1, [sp, #200]
    f0b4:	ldr	w2, [sp, #184]
    f0b8:	cmp	x20, w1, uxtw
    f0bc:	b.cs	ef9c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x43c>  // b.hs, b.nlast
    f0c0:	b	efb8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x458>
    f0c4:	add	x20, sp, #0xd0
    f0c8:	add	x1, sp, #0xb0
    f0cc:	mov	x0, x20
    f0d0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f0d4:	ldr	w2, [sp, #216]
    f0d8:	cmp	w19, w2
    f0dc:	b.hi	ecf0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x190>  // b.pmore
    f0e0:	cmp	w2, #0x40
    f0e4:	b.ls	efd4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x474>  // b.plast
    f0e8:	mov	w1, w19
    f0ec:	mov	x0, x20
    f0f0:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    f0f4:	b	f008 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4a8>
    f0f8:	str	w1, [sp, #216]
    f0fc:	b	efc4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x464>
    f100:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f104:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f108:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f10c:	add	x3, x3, #0x0
    f110:	add	x1, x1, #0x0
    f114:	add	x0, x0, #0x0
    f118:	mov	w2, #0x657                 	// #1623
    f11c:	bl	0 <__assert_fail>
    f120:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f124:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f128:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f12c:	add	x3, x3, #0x0
    f130:	add	x1, x1, #0x0
    f134:	add	x0, x0, #0x0
    f138:	mov	w2, #0x307                 	// #775
    f13c:	bl	0 <__assert_fail>
    f140:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f144:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f148:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f14c:	add	x3, x3, #0x0
    f150:	add	x1, x1, #0x0
    f154:	add	x0, x0, #0x0
    f158:	mov	w2, #0x4e4                 	// #1252
    f15c:	bl	0 <__assert_fail>

000000000000f160 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>:
    f160:	stp	x29, x30, [sp, #-96]!
    f164:	mov	x29, sp
    f168:	stp	x19, x20, [sp, #16]
    f16c:	mov	x19, x1
    f170:	ldr	x20, [x0, #704]
    f174:	ldur	x1, [x1, #-24]
    f178:	sub	x20, x20, #0x80
    f17c:	ldr	x2, [x19]
    f180:	str	x21, [sp, #32]
    f184:	add	x21, sp, #0x30
    f188:	mov	x3, x20
    f18c:	mov	x8, x21
    f190:	bl	6138 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f194:	mov	x2, x20
    f198:	mov	x0, x19
    f19c:	mov	x1, x21
    f1a0:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f1a4:	ldp	x19, x20, [sp, #72]
    f1a8:	cmp	x19, x20
    f1ac:	b.eq	f1c8 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x68>  // b.none
    f1b0:	mov	x0, x19
    f1b4:	add	x19, x19, #0x30
    f1b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f1bc:	cmp	x20, x19
    f1c0:	b.ne	f1b0 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x50>  // b.any
    f1c4:	ldr	x20, [sp, #72]
    f1c8:	cbz	x20, f1d4 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x74>
    f1cc:	mov	x0, x20
    f1d0:	bl	0 <_ZdlPv>
    f1d4:	ldr	w0, [sp, #64]
    f1d8:	cmp	w0, #0x40
    f1dc:	b.ls	f1ec <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x8c>  // b.plast
    f1e0:	ldr	x0, [sp, #56]
    f1e4:	cbz	x0, f1ec <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x8c>
    f1e8:	bl	0 <_ZdaPv>
    f1ec:	ldp	x19, x20, [sp, #16]
    f1f0:	ldr	x21, [sp, #32]
    f1f4:	ldp	x29, x30, [sp], #96
    f1f8:	ret
    f1fc:	nop

000000000000f200 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>:
    f200:	stp	x29, x30, [sp, #-96]!
    f204:	mov	x29, sp
    f208:	stp	x19, x20, [sp, #16]
    f20c:	mov	x19, x1
    f210:	ldr	x20, [x0, #704]
    f214:	ldur	x1, [x1, #-24]
    f218:	sub	x20, x20, #0x80
    f21c:	ldr	x2, [x19]
    f220:	str	x21, [sp, #32]
    f224:	add	x21, sp, #0x30
    f228:	mov	x3, x20
    f22c:	mov	x8, x21
    f230:	bl	6418 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f234:	mov	x2, x20
    f238:	mov	x0, x19
    f23c:	mov	x1, x21
    f240:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f244:	ldp	x19, x20, [sp, #72]
    f248:	cmp	x19, x20
    f24c:	b.eq	f268 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x68>  // b.none
    f250:	mov	x0, x19
    f254:	add	x19, x19, #0x30
    f258:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f25c:	cmp	x20, x19
    f260:	b.ne	f250 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x50>  // b.any
    f264:	ldr	x20, [sp, #72]
    f268:	cbz	x20, f274 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x74>
    f26c:	mov	x0, x20
    f270:	bl	0 <_ZdlPv>
    f274:	ldr	w0, [sp, #64]
    f278:	cmp	w0, #0x40
    f27c:	b.ls	f28c <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x8c>  // b.plast
    f280:	ldr	x0, [sp, #56]
    f284:	cbz	x0, f28c <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x8c>
    f288:	bl	0 <_ZdaPv>
    f28c:	ldp	x19, x20, [sp, #16]
    f290:	ldr	x21, [sp, #32]
    f294:	ldp	x29, x30, [sp], #96
    f298:	ret
    f29c:	nop

000000000000f2a0 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>:
    f2a0:	stp	x29, x30, [sp, #-96]!
    f2a4:	mov	x29, sp
    f2a8:	stp	x19, x20, [sp, #16]
    f2ac:	mov	x19, x1
    f2b0:	ldr	x20, [x0, #704]
    f2b4:	ldur	x1, [x1, #-24]
    f2b8:	sub	x20, x20, #0x80
    f2bc:	ldr	x2, [x19]
    f2c0:	str	x21, [sp, #32]
    f2c4:	add	x21, sp, #0x30
    f2c8:	mov	x3, x20
    f2cc:	mov	x8, x21
    f2d0:	bl	66f0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f2d4:	mov	x2, x20
    f2d8:	mov	x0, x19
    f2dc:	mov	x1, x21
    f2e0:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f2e4:	ldp	x19, x20, [sp, #72]
    f2e8:	cmp	x19, x20
    f2ec:	b.eq	f308 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x68>  // b.none
    f2f0:	mov	x0, x19
    f2f4:	add	x19, x19, #0x30
    f2f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f2fc:	cmp	x20, x19
    f300:	b.ne	f2f0 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x50>  // b.any
    f304:	ldr	x20, [sp, #72]
    f308:	cbz	x20, f314 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x74>
    f30c:	mov	x0, x20
    f310:	bl	0 <_ZdlPv>
    f314:	ldr	w0, [sp, #64]
    f318:	cmp	w0, #0x40
    f31c:	b.ls	f32c <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x8c>  // b.plast
    f320:	ldr	x0, [sp, #56]
    f324:	cbz	x0, f32c <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x8c>
    f328:	bl	0 <_ZdaPv>
    f32c:	ldp	x19, x20, [sp, #16]
    f330:	ldr	x21, [sp, #32]
    f334:	ldp	x29, x30, [sp], #96
    f338:	ret
    f33c:	nop

000000000000f340 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>:
    f340:	stp	x29, x30, [sp, #-96]!
    f344:	mov	x29, sp
    f348:	stp	x19, x20, [sp, #16]
    f34c:	mov	x19, x1
    f350:	ldr	x20, [x0, #704]
    f354:	ldur	x1, [x1, #-24]
    f358:	sub	x20, x20, #0x80
    f35c:	ldr	x2, [x19]
    f360:	str	x21, [sp, #32]
    f364:	add	x21, sp, #0x30
    f368:	mov	x3, x20
    f36c:	mov	x8, x21
    f370:	bl	69c8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f374:	mov	x2, x20
    f378:	mov	x0, x19
    f37c:	mov	x1, x21
    f380:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f384:	ldp	x19, x20, [sp, #72]
    f388:	cmp	x19, x20
    f38c:	b.eq	f3a8 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x68>  // b.none
    f390:	mov	x0, x19
    f394:	add	x19, x19, #0x30
    f398:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f39c:	cmp	x20, x19
    f3a0:	b.ne	f390 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x50>  // b.any
    f3a4:	ldr	x20, [sp, #72]
    f3a8:	cbz	x20, f3b4 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x74>
    f3ac:	mov	x0, x20
    f3b0:	bl	0 <_ZdlPv>
    f3b4:	ldr	w0, [sp, #64]
    f3b8:	cmp	w0, #0x40
    f3bc:	b.ls	f3cc <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x8c>  // b.plast
    f3c0:	ldr	x0, [sp, #56]
    f3c4:	cbz	x0, f3cc <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x8c>
    f3c8:	bl	0 <_ZdaPv>
    f3cc:	ldp	x19, x20, [sp, #16]
    f3d0:	ldr	x21, [sp, #32]
    f3d4:	ldp	x29, x30, [sp], #96
    f3d8:	ret
    f3dc:	nop

000000000000f3e0 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>:
    f3e0:	stp	x29, x30, [sp, #-96]!
    f3e4:	mov	x29, sp
    f3e8:	stp	x19, x20, [sp, #16]
    f3ec:	mov	x19, x1
    f3f0:	ldr	x20, [x0, #704]
    f3f4:	ldur	x1, [x1, #-24]
    f3f8:	sub	x20, x20, #0x80
    f3fc:	ldr	x2, [x19]
    f400:	str	x21, [sp, #32]
    f404:	add	x21, sp, #0x30
    f408:	mov	x3, x20
    f40c:	mov	x8, x21
    f410:	bl	6b78 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f414:	mov	x2, x20
    f418:	mov	x0, x19
    f41c:	mov	x1, x21
    f420:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f424:	ldp	x19, x20, [sp, #72]
    f428:	cmp	x19, x20
    f42c:	b.eq	f448 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x68>  // b.none
    f430:	mov	x0, x19
    f434:	add	x19, x19, #0x30
    f438:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f43c:	cmp	x20, x19
    f440:	b.ne	f430 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x50>  // b.any
    f444:	ldr	x20, [sp, #72]
    f448:	cbz	x20, f454 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x74>
    f44c:	mov	x0, x20
    f450:	bl	0 <_ZdlPv>
    f454:	ldr	w0, [sp, #64]
    f458:	cmp	w0, #0x40
    f45c:	b.ls	f46c <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x8c>  // b.plast
    f460:	ldr	x0, [sp, #56]
    f464:	cbz	x0, f46c <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x8c>
    f468:	bl	0 <_ZdaPv>
    f46c:	ldp	x19, x20, [sp, #16]
    f470:	ldr	x21, [sp, #32]
    f474:	ldp	x29, x30, [sp], #96
    f478:	ret
    f47c:	nop

000000000000f480 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>:
    f480:	stp	x29, x30, [sp, #-96]!
    f484:	mov	x29, sp
    f488:	stp	x19, x20, [sp, #16]
    f48c:	mov	x19, x1
    f490:	ldr	x20, [x0, #704]
    f494:	ldur	x1, [x1, #-24]
    f498:	sub	x20, x20, #0x80
    f49c:	ldr	x2, [x19]
    f4a0:	str	x21, [sp, #32]
    f4a4:	add	x21, sp, #0x30
    f4a8:	mov	x3, x20
    f4ac:	mov	x8, x21
    f4b0:	bl	6d28 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f4b4:	mov	x2, x20
    f4b8:	mov	x0, x19
    f4bc:	mov	x1, x21
    f4c0:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f4c4:	ldp	x19, x20, [sp, #72]
    f4c8:	cmp	x19, x20
    f4cc:	b.eq	f4e8 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x68>  // b.none
    f4d0:	mov	x0, x19
    f4d4:	add	x19, x19, #0x30
    f4d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f4dc:	cmp	x20, x19
    f4e0:	b.ne	f4d0 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x50>  // b.any
    f4e4:	ldr	x20, [sp, #72]
    f4e8:	cbz	x20, f4f4 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x74>
    f4ec:	mov	x0, x20
    f4f0:	bl	0 <_ZdlPv>
    f4f4:	ldr	w0, [sp, #64]
    f4f8:	cmp	w0, #0x40
    f4fc:	b.ls	f50c <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x8c>  // b.plast
    f500:	ldr	x0, [sp, #56]
    f504:	cbz	x0, f50c <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x8c>
    f508:	bl	0 <_ZdaPv>
    f50c:	ldp	x19, x20, [sp, #16]
    f510:	ldr	x21, [sp, #32]
    f514:	ldp	x29, x30, [sp], #96
    f518:	ret
    f51c:	nop

000000000000f520 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>:
    f520:	stp	x29, x30, [sp, #-96]!
    f524:	mov	x29, sp
    f528:	stp	x19, x20, [sp, #16]
    f52c:	mov	x19, x1
    f530:	ldr	x20, [x0, #704]
    f534:	ldur	x1, [x1, #-24]
    f538:	sub	x20, x20, #0x80
    f53c:	ldr	x2, [x19]
    f540:	str	x21, [sp, #32]
    f544:	add	x21, sp, #0x30
    f548:	mov	x3, x20
    f54c:	mov	x8, x21
    f550:	bl	7040 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f554:	mov	x2, x20
    f558:	mov	x0, x19
    f55c:	mov	x1, x21
    f560:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f564:	ldp	x19, x20, [sp, #72]
    f568:	cmp	x19, x20
    f56c:	b.eq	f588 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x68>  // b.none
    f570:	mov	x0, x19
    f574:	add	x19, x19, #0x30
    f578:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f57c:	cmp	x20, x19
    f580:	b.ne	f570 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x50>  // b.any
    f584:	ldr	x20, [sp, #72]
    f588:	cbz	x20, f594 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x74>
    f58c:	mov	x0, x20
    f590:	bl	0 <_ZdlPv>
    f594:	ldr	w0, [sp, #64]
    f598:	cmp	w0, #0x40
    f59c:	b.ls	f5ac <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x8c>  // b.plast
    f5a0:	ldr	x0, [sp, #56]
    f5a4:	cbz	x0, f5ac <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x8c>
    f5a8:	bl	0 <_ZdaPv>
    f5ac:	ldp	x19, x20, [sp, #16]
    f5b0:	ldr	x21, [sp, #32]
    f5b4:	ldp	x29, x30, [sp], #96
    f5b8:	ret
    f5bc:	nop

000000000000f5c0 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>:
    f5c0:	stp	x29, x30, [sp, #-96]!
    f5c4:	mov	x29, sp
    f5c8:	stp	x19, x20, [sp, #16]
    f5cc:	mov	x19, x1
    f5d0:	ldr	x20, [x0, #704]
    f5d4:	ldur	x1, [x1, #-24]
    f5d8:	sub	x20, x20, #0x80
    f5dc:	ldr	x2, [x19]
    f5e0:	str	x21, [sp, #32]
    f5e4:	add	x21, sp, #0x30
    f5e8:	mov	x3, x20
    f5ec:	mov	x8, x21
    f5f0:	bl	7358 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f5f4:	mov	x2, x20
    f5f8:	mov	x0, x19
    f5fc:	mov	x1, x21
    f600:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f604:	ldp	x19, x20, [sp, #72]
    f608:	cmp	x19, x20
    f60c:	b.eq	f628 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x68>  // b.none
    f610:	mov	x0, x19
    f614:	add	x19, x19, #0x30
    f618:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f61c:	cmp	x20, x19
    f620:	b.ne	f610 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x50>  // b.any
    f624:	ldr	x20, [sp, #72]
    f628:	cbz	x20, f634 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x74>
    f62c:	mov	x0, x20
    f630:	bl	0 <_ZdlPv>
    f634:	ldr	w0, [sp, #64]
    f638:	cmp	w0, #0x40
    f63c:	b.ls	f64c <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x8c>  // b.plast
    f640:	ldr	x0, [sp, #56]
    f644:	cbz	x0, f64c <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x8c>
    f648:	bl	0 <_ZdaPv>
    f64c:	ldp	x19, x20, [sp, #16]
    f650:	ldr	x21, [sp, #32]
    f654:	ldp	x29, x30, [sp], #96
    f658:	ret
    f65c:	nop

000000000000f660 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>:
    f660:	stp	x29, x30, [sp, #-96]!
    f664:	mov	x29, sp
    f668:	stp	x19, x20, [sp, #16]
    f66c:	mov	x19, x1
    f670:	ldr	x20, [x0, #704]
    f674:	ldur	x1, [x1, #-24]
    f678:	sub	x20, x20, #0x80
    f67c:	ldr	x2, [x19]
    f680:	str	x21, [sp, #32]
    f684:	add	x21, sp, #0x30
    f688:	mov	x3, x20
    f68c:	mov	x8, x21
    f690:	bl	7558 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f694:	mov	x2, x20
    f698:	mov	x0, x19
    f69c:	mov	x1, x21
    f6a0:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f6a4:	ldp	x19, x20, [sp, #72]
    f6a8:	cmp	x19, x20
    f6ac:	b.eq	f6c8 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x68>  // b.none
    f6b0:	mov	x0, x19
    f6b4:	add	x19, x19, #0x30
    f6b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f6bc:	cmp	x20, x19
    f6c0:	b.ne	f6b0 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x50>  // b.any
    f6c4:	ldr	x20, [sp, #72]
    f6c8:	cbz	x20, f6d4 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x74>
    f6cc:	mov	x0, x20
    f6d0:	bl	0 <_ZdlPv>
    f6d4:	ldr	w0, [sp, #64]
    f6d8:	cmp	w0, #0x40
    f6dc:	b.ls	f6ec <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x8c>  // b.plast
    f6e0:	ldr	x0, [sp, #56]
    f6e4:	cbz	x0, f6ec <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x8c>
    f6e8:	bl	0 <_ZdaPv>
    f6ec:	ldp	x19, x20, [sp, #16]
    f6f0:	ldr	x21, [sp, #32]
    f6f4:	ldp	x29, x30, [sp], #96
    f6f8:	ret
    f6fc:	nop

000000000000f700 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>:
    f700:	stp	x29, x30, [sp, #-96]!
    f704:	mov	x29, sp
    f708:	stp	x19, x20, [sp, #16]
    f70c:	mov	x19, x1
    f710:	ldr	x20, [x0, #704]
    f714:	ldur	x1, [x1, #-24]
    f718:	sub	x20, x20, #0x80
    f71c:	ldr	x2, [x19]
    f720:	str	x21, [sp, #32]
    f724:	add	x21, sp, #0x30
    f728:	mov	x3, x20
    f72c:	mov	x8, x21
    f730:	bl	7758 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f734:	mov	x2, x20
    f738:	mov	x0, x19
    f73c:	mov	x1, x21
    f740:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f744:	ldp	x19, x20, [sp, #72]
    f748:	cmp	x19, x20
    f74c:	b.eq	f768 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x68>  // b.none
    f750:	mov	x0, x19
    f754:	add	x19, x19, #0x30
    f758:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f75c:	cmp	x20, x19
    f760:	b.ne	f750 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x50>  // b.any
    f764:	ldr	x20, [sp, #72]
    f768:	cbz	x20, f774 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x74>
    f76c:	mov	x0, x20
    f770:	bl	0 <_ZdlPv>
    f774:	ldr	w0, [sp, #64]
    f778:	cmp	w0, #0x40
    f77c:	b.ls	f78c <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x8c>  // b.plast
    f780:	ldr	x0, [sp, #56]
    f784:	cbz	x0, f78c <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x8c>
    f788:	bl	0 <_ZdaPv>
    f78c:	ldp	x19, x20, [sp, #16]
    f790:	ldr	x21, [sp, #32]
    f794:	ldp	x29, x30, [sp], #96
    f798:	ret
    f79c:	nop

000000000000f7a0 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>:
    f7a0:	stp	x29, x30, [sp, #-96]!
    f7a4:	mov	x29, sp
    f7a8:	stp	x19, x20, [sp, #16]
    f7ac:	mov	x19, x1
    f7b0:	ldr	x20, [x0, #704]
    f7b4:	ldur	x1, [x1, #-24]
    f7b8:	sub	x20, x20, #0x80
    f7bc:	ldr	x2, [x19]
    f7c0:	str	x21, [sp, #32]
    f7c4:	add	x21, sp, #0x30
    f7c8:	mov	x3, x20
    f7cc:	mov	x8, x21
    f7d0:	bl	78f0 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f7d4:	mov	x2, x20
    f7d8:	mov	x0, x19
    f7dc:	mov	x1, x21
    f7e0:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f7e4:	ldp	x19, x20, [sp, #72]
    f7e8:	cmp	x19, x20
    f7ec:	b.eq	f808 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x68>  // b.none
    f7f0:	mov	x0, x19
    f7f4:	add	x19, x19, #0x30
    f7f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f7fc:	cmp	x20, x19
    f800:	b.ne	f7f0 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x50>  // b.any
    f804:	ldr	x20, [sp, #72]
    f808:	cbz	x20, f814 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x74>
    f80c:	mov	x0, x20
    f810:	bl	0 <_ZdlPv>
    f814:	ldr	w0, [sp, #64]
    f818:	cmp	w0, #0x40
    f81c:	b.ls	f82c <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x8c>  // b.plast
    f820:	ldr	x0, [sp, #56]
    f824:	cbz	x0, f82c <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x8c>
    f828:	bl	0 <_ZdaPv>
    f82c:	ldp	x19, x20, [sp, #16]
    f830:	ldr	x21, [sp, #32]
    f834:	ldp	x29, x30, [sp], #96
    f838:	ret
    f83c:	nop

000000000000f840 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>:
    f840:	stp	x29, x30, [sp, #-96]!
    f844:	mov	x29, sp
    f848:	stp	x19, x20, [sp, #16]
    f84c:	mov	x19, x1
    f850:	ldr	x20, [x0, #704]
    f854:	ldur	x1, [x1, #-24]
    f858:	sub	x20, x20, #0x80
    f85c:	ldr	x2, [x19]
    f860:	str	x21, [sp, #32]
    f864:	add	x21, sp, #0x30
    f868:	mov	x3, x20
    f86c:	mov	x8, x21
    f870:	bl	7a70 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f874:	mov	x2, x20
    f878:	mov	x0, x19
    f87c:	mov	x1, x21
    f880:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f884:	ldp	x19, x20, [sp, #72]
    f888:	cmp	x19, x20
    f88c:	b.eq	f8a8 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x68>  // b.none
    f890:	mov	x0, x19
    f894:	add	x19, x19, #0x30
    f898:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f89c:	cmp	x20, x19
    f8a0:	b.ne	f890 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x50>  // b.any
    f8a4:	ldr	x20, [sp, #72]
    f8a8:	cbz	x20, f8b4 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x74>
    f8ac:	mov	x0, x20
    f8b0:	bl	0 <_ZdlPv>
    f8b4:	ldr	w0, [sp, #64]
    f8b8:	cmp	w0, #0x40
    f8bc:	b.ls	f8cc <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x8c>  // b.plast
    f8c0:	ldr	x0, [sp, #56]
    f8c4:	cbz	x0, f8cc <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x8c>
    f8c8:	bl	0 <_ZdaPv>
    f8cc:	ldp	x19, x20, [sp, #16]
    f8d0:	ldr	x21, [sp, #32]
    f8d4:	ldp	x29, x30, [sp], #96
    f8d8:	ret
    f8dc:	nop

000000000000f8e0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>:
    f8e0:	stp	x29, x30, [sp, #-256]!
    f8e4:	mov	x29, sp
    f8e8:	stp	x19, x20, [sp, #16]
    f8ec:	mov	x19, x1
    f8f0:	mov	x20, x0
    f8f4:	stp	x21, x22, [sp, #32]
    f8f8:	add	x8, sp, #0x40
    f8fc:	ldur	x1, [x1, #-24]
    f900:	ldr	x21, [x0, #704]
    f904:	str	x23, [sp, #48]
    f908:	add	x23, sp, #0xa0
    f90c:	sub	x21, x21, #0x80
    f910:	mov	x2, x21
    f914:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f918:	ldp	w2, w3, [sp, #64]
    f91c:	mov	w1, #0x30                  	// #48
    f920:	ldr	x5, [x20, #696]
    f924:	mov	w4, #0x1                   	// #1
    f928:	mov	x0, x23
    f92c:	stp	xzr, xzr, [sp, #112]
    f930:	add	x2, x5, x2, lsl #7
    f934:	str	w4, [sp, #128]
    f938:	stp	xzr, xzr, [sp, #136]
    f93c:	ldr	x2, [x2, #80]
    f940:	str	xzr, [sp, #152]
    f944:	umaddl	x1, w3, w1, x2
    f948:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f94c:	ldr	x20, [x19]
    f950:	ldrb	w0, [x20, #8]
    f954:	cmp	w0, #0xb
    f958:	b.eq	fb08 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x228>  // b.none
    f95c:	b.hi	fae0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x200>  // b.pmore
    f960:	cmp	w0, #0x2
    f964:	b.eq	faf8 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x218>  // b.none
    f968:	cmp	w0, #0x3
    f96c:	b.ne	fb4c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x26c>  // b.any
    f970:	add	x22, sp, #0x70
    f974:	ldr	d0, [sp, #160]
    f978:	str	d0, [sp, #112]
    f97c:	add	x20, sp, #0xd0
    f980:	mov	x1, x22
    f984:	mov	x0, x20
    f988:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f98c:	mov	x1, x20
    f990:	mov	x0, x19
    f994:	mov	x2, x21
    f998:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f99c:	ldp	x19, x20, [sp, #232]
    f9a0:	cmp	x19, x20
    f9a4:	b.eq	f9c0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xe0>  // b.none
    f9a8:	mov	x0, x19
    f9ac:	add	x19, x19, #0x30
    f9b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f9b4:	cmp	x20, x19
    f9b8:	b.ne	f9a8 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xc8>  // b.any
    f9bc:	ldr	x20, [sp, #232]
    f9c0:	cbz	x20, f9cc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xec>
    f9c4:	mov	x0, x20
    f9c8:	bl	0 <_ZdlPv>
    f9cc:	ldr	w0, [sp, #224]
    f9d0:	cmp	w0, #0x40
    f9d4:	b.ls	f9e4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x104>  // b.plast
    f9d8:	ldr	x0, [sp, #216]
    f9dc:	cbz	x0, f9e4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x104>
    f9e0:	bl	0 <_ZdaPv>
    f9e4:	ldp	x19, x20, [sp, #184]
    f9e8:	ldr	w0, [sp, #68]
    f9ec:	add	w0, w0, #0x1
    f9f0:	str	w0, [sp, #68]
    f9f4:	cmp	x19, x20
    f9f8:	b.eq	fa18 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x138>  // b.none
    f9fc:	nop
    fa00:	mov	x0, x19
    fa04:	add	x19, x19, #0x30
    fa08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fa0c:	cmp	x20, x19
    fa10:	b.ne	fa00 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x120>  // b.any
    fa14:	ldr	x20, [sp, #184]
    fa18:	cbz	x20, fa24 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x144>
    fa1c:	mov	x0, x20
    fa20:	bl	0 <_ZdlPv>
    fa24:	ldr	w0, [sp, #176]
    fa28:	cmp	w0, #0x40
    fa2c:	b.ls	fa3c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x15c>  // b.plast
    fa30:	ldr	x0, [sp, #168]
    fa34:	cbz	x0, fa3c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x15c>
    fa38:	bl	0 <_ZdaPv>
    fa3c:	ldp	x19, x20, [sp, #136]
    fa40:	cmp	x19, x20
    fa44:	b.eq	fa60 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x180>  // b.none
    fa48:	mov	x0, x19
    fa4c:	add	x19, x19, #0x30
    fa50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fa54:	cmp	x20, x19
    fa58:	b.ne	fa48 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x168>  // b.any
    fa5c:	ldr	x20, [sp, #136]
    fa60:	cbz	x20, fa6c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x18c>
    fa64:	mov	x0, x20
    fa68:	bl	0 <_ZdlPv>
    fa6c:	ldr	w0, [sp, #128]
    fa70:	cmp	w0, #0x40
    fa74:	b.ls	fa84 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1a4>  // b.plast
    fa78:	ldr	x0, [sp, #120]
    fa7c:	cbz	x0, fa84 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1a4>
    fa80:	bl	0 <_ZdaPv>
    fa84:	ldp	x19, x20, [sp, #88]
    fa88:	cmp	x19, x20
    fa8c:	b.eq	faa8 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1c8>  // b.none
    fa90:	mov	x0, x19
    fa94:	add	x19, x19, #0x30
    fa98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fa9c:	cmp	x20, x19
    faa0:	b.ne	fa90 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1b0>  // b.any
    faa4:	ldr	x20, [sp, #88]
    faa8:	cbz	x20, fab4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1d4>
    faac:	mov	x0, x20
    fab0:	bl	0 <_ZdlPv>
    fab4:	ldr	w0, [sp, #80]
    fab8:	cmp	w0, #0x40
    fabc:	b.ls	facc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1ec>  // b.plast
    fac0:	ldr	x0, [sp, #72]
    fac4:	cbz	x0, facc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1ec>
    fac8:	bl	0 <_ZdaPv>
    facc:	ldp	x19, x20, [sp, #16]
    fad0:	ldp	x21, x22, [sp, #32]
    fad4:	ldr	x23, [sp, #48]
    fad8:	ldp	x29, x30, [sp], #256
    fadc:	ret
    fae0:	cmp	w0, #0xf
    fae4:	b.ne	fb4c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x26c>  // b.any
    fae8:	ldr	x0, [sp, #160]
    faec:	add	x22, sp, #0x70
    faf0:	str	x0, [sp, #112]
    faf4:	b	f97c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    faf8:	ldr	s0, [sp, #160]
    fafc:	add	x22, sp, #0x70
    fb00:	str	s0, [sp, #112]
    fb04:	b	f97c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    fb08:	ldr	w0, [sp, #128]
    fb0c:	add	x22, sp, #0x70
    fb10:	cmp	w0, #0x40
    fb14:	b.hi	fb24 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x244>  // b.pmore
    fb18:	ldr	w0, [sp, #176]
    fb1c:	cmp	w0, #0x40
    fb20:	b.ls	fb34 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x254>  // b.plast
    fb24:	add	x1, x23, #0x8
    fb28:	add	x0, x22, #0x8
    fb2c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    fb30:	b	f97c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    fb34:	ldr	x1, [sp, #168]
    fb38:	str	x1, [sp, #120]
    fb3c:	str	w0, [sp, #128]
    fb40:	add	x0, x22, #0x8
    fb44:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb48:	b	f97c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    fb4c:	bl	0 <_ZN4llvm4dbgsEv>
    fb50:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb54:	add	x1, x1, #0x0
    fb58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb5c:	mov	x19, x0
    fb60:	mov	w2, #0x0                   	// #0
    fb64:	mov	w3, #0x0                   	// #0
    fb68:	mov	x0, x20
    fb6c:	mov	x1, x19
    fb70:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    fb74:	mov	x0, x19
    fb78:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb7c:	add	x1, x1, #0x0
    fb80:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb84:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb88:	mov	w2, #0x6fd                 	// #1789
    fb8c:	add	x1, x1, #0x0
    fb90:	mov	x0, #0x0                   	// #0
    fb94:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000fb98 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>:
    fb98:	stp	x29, x30, [sp, #-240]!
    fb9c:	mov	x29, sp
    fba0:	stp	x19, x20, [sp, #16]
    fba4:	mov	x19, x1
    fba8:	add	x8, sp, #0x30
    fbac:	ldur	x1, [x1, #-48]
    fbb0:	stp	x21, x22, [sp, #32]
    fbb4:	mov	x21, x0
    fbb8:	ldr	x20, [x0, #704]
    fbbc:	add	x22, sp, #0x60
    fbc0:	sub	x20, x20, #0x80
    fbc4:	mov	x2, x20
    fbc8:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    fbcc:	ldur	x1, [x19, #-24]
    fbd0:	mov	x0, x21
    fbd4:	mov	x2, x20
    fbd8:	mov	x8, x22
    fbdc:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    fbe0:	ldr	w21, [sp, #112]
    fbe4:	mov	w0, #0x1                   	// #1
    fbe8:	stp	xzr, xzr, [sp, #144]
    fbec:	cmp	w21, #0x40
    fbf0:	str	w0, [sp, #160]
    fbf4:	stp	xzr, xzr, [sp, #168]
    fbf8:	str	xzr, [sp, #184]
    fbfc:	b.ls	fe54 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2bc>  // b.plast
    fc00:	add	x0, x22, #0x8
    fc04:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    fc08:	sub	w21, w21, w0
    fc0c:	cmp	w21, #0x40
    fc10:	b.hi	feec <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x354>  // b.pmore
    fc14:	ldr	x0, [sp, #104]
    fc18:	ldr	x2, [x0]
    fc1c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    fc20:	ldp	x3, x0, [sp, #72]
    fc24:	movk	x4, #0xaaab
    fc28:	and	x1, x2, #0xffffffff
    fc2c:	sub	x0, x0, x3
    fc30:	asr	x0, x0, #4
    fc34:	mul	x0, x0, x4
    fc38:	cmp	x0, w2, uxtw
    fc3c:	b.ls	fe5c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2c4>  // b.plast
    fc40:	ldr	x21, [x19]
    fc44:	ldrb	w2, [x21, #8]
    fc48:	cmp	w2, #0x3
    fc4c:	b.eq	fe3c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2a4>  // b.none
    fc50:	cmp	w2, #0xb
    fc54:	b.eq	fe14 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x27c>  // b.none
    fc58:	cmp	w2, #0x2
    fc5c:	b.eq	fcac <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x114>  // b.none
    fc60:	bl	0 <_ZN4llvm4dbgsEv>
    fc64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fc68:	add	x1, x1, #0x0
    fc6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fc70:	mov	x19, x0
    fc74:	mov	w2, #0x0                   	// #0
    fc78:	mov	w3, #0x0                   	// #0
    fc7c:	mov	x0, x21
    fc80:	mov	x1, x19
    fc84:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    fc88:	mov	x0, x19
    fc8c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fc90:	add	x1, x1, #0x0
    fc94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fc98:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fc9c:	mov	w2, #0x715                 	// #1813
    fca0:	add	x1, x1, #0x0
    fca4:	mov	x0, #0x0                   	// #0
    fca8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    fcac:	add	x1, x1, x1, lsl #1
    fcb0:	add	x22, sp, #0x90
    fcb4:	lsl	x1, x1, #4
    fcb8:	ldr	s0, [x3, x1]
    fcbc:	str	s0, [sp, #144]
    fcc0:	add	x21, sp, #0xc0
    fcc4:	mov	x1, x22
    fcc8:	mov	x0, x21
    fccc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fcd0:	mov	x2, x20
    fcd4:	mov	x0, x19
    fcd8:	mov	x1, x21
    fcdc:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    fce0:	ldp	x19, x20, [sp, #216]
    fce4:	cmp	x19, x20
    fce8:	b.eq	fd08 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x170>  // b.none
    fcec:	nop
    fcf0:	mov	x0, x19
    fcf4:	add	x19, x19, #0x30
    fcf8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fcfc:	cmp	x20, x19
    fd00:	b.ne	fcf0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x158>  // b.any
    fd04:	ldr	x20, [sp, #216]
    fd08:	cbz	x20, fd14 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x17c>
    fd0c:	mov	x0, x20
    fd10:	bl	0 <_ZdlPv>
    fd14:	ldr	w0, [sp, #208]
    fd18:	cmp	w0, #0x40
    fd1c:	b.ls	fd2c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>  // b.plast
    fd20:	ldr	x0, [sp, #200]
    fd24:	cbz	x0, fd2c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>
    fd28:	bl	0 <_ZdaPv>
    fd2c:	ldp	x19, x20, [sp, #168]
    fd30:	cmp	x19, x20
    fd34:	b.eq	fd50 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1b8>  // b.none
    fd38:	mov	x0, x19
    fd3c:	add	x19, x19, #0x30
    fd40:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fd44:	cmp	x20, x19
    fd48:	b.ne	fd38 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1a0>  // b.any
    fd4c:	ldr	x20, [sp, #168]
    fd50:	cbz	x20, fd5c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1c4>
    fd54:	mov	x0, x20
    fd58:	bl	0 <_ZdlPv>
    fd5c:	ldr	w0, [sp, #160]
    fd60:	cmp	w0, #0x40
    fd64:	b.ls	fd74 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1dc>  // b.plast
    fd68:	ldr	x0, [sp, #152]
    fd6c:	cbz	x0, fd74 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1dc>
    fd70:	bl	0 <_ZdaPv>
    fd74:	ldp	x19, x20, [sp, #120]
    fd78:	cmp	x19, x20
    fd7c:	b.eq	fd98 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x200>  // b.none
    fd80:	mov	x0, x19
    fd84:	add	x19, x19, #0x30
    fd88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fd8c:	cmp	x20, x19
    fd90:	b.ne	fd80 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1e8>  // b.any
    fd94:	ldr	x20, [sp, #120]
    fd98:	cbz	x20, fda4 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x20c>
    fd9c:	mov	x0, x20
    fda0:	bl	0 <_ZdlPv>
    fda4:	ldr	w0, [sp, #112]
    fda8:	cmp	w0, #0x40
    fdac:	b.ls	fdbc <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x224>  // b.plast
    fdb0:	ldr	x0, [sp, #104]
    fdb4:	cbz	x0, fdbc <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x224>
    fdb8:	bl	0 <_ZdaPv>
    fdbc:	ldp	x19, x20, [sp, #72]
    fdc0:	cmp	x19, x20
    fdc4:	b.eq	fde0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x248>  // b.none
    fdc8:	mov	x0, x19
    fdcc:	add	x19, x19, #0x30
    fdd0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fdd4:	cmp	x20, x19
    fdd8:	b.ne	fdc8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x230>  // b.any
    fddc:	ldr	x20, [sp, #72]
    fde0:	cbz	x20, fdec <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x254>
    fde4:	mov	x0, x20
    fde8:	bl	0 <_ZdlPv>
    fdec:	ldr	w0, [sp, #64]
    fdf0:	cmp	w0, #0x40
    fdf4:	b.ls	fe04 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x26c>  // b.plast
    fdf8:	ldr	x0, [sp, #56]
    fdfc:	cbz	x0, fe04 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x26c>
    fe00:	bl	0 <_ZdaPv>
    fe04:	ldp	x19, x20, [sp, #16]
    fe08:	ldp	x21, x22, [sp, #32]
    fe0c:	ldp	x29, x30, [sp], #240
    fe10:	ret
    fe14:	add	x1, x1, x1, lsl #1
    fe18:	add	x0, x3, x1, lsl #4
    fe1c:	add	x1, x0, #0x8
    fe20:	ldr	w2, [x0, #16]
    fe24:	cmp	w2, #0x40
    fe28:	b.ls	fec8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x330>  // b.plast
    fe2c:	add	x22, sp, #0x90
    fe30:	add	x0, x22, #0x8
    fe34:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    fe38:	b	fcc0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
    fe3c:	add	x1, x1, x1, lsl #1
    fe40:	add	x22, sp, #0x90
    fe44:	lsl	x1, x1, #4
    fe48:	ldr	d0, [x3, x1]
    fe4c:	str	d0, [sp, #144]
    fe50:	b	fcc0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
    fe54:	ldr	x2, [sp, #104]
    fe58:	b	fc1c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x84>
    fe5c:	bl	0 <_ZN4llvm4dbgsEv>
    fe60:	mov	x1, x0
    fe64:	ldp	x2, x3, [x0, #16]
    fe68:	sub	x2, x2, x3
    fe6c:	cmp	x2, #0x2b
    fe70:	b.ls	feb0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x318>  // b.plast
    fe74:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fe78:	add	x0, x0, #0x0
    fe7c:	add	x22, sp, #0x90
    fe80:	ldp	x4, x5, [x0]
    fe84:	stp	x4, x5, [x3]
    fe88:	ldr	w2, [x0, #40]
    fe8c:	ldp	x4, x5, [x0, #16]
    fe90:	stp	x4, x5, [x3, #16]
    fe94:	ldr	x0, [x0, #32]
    fe98:	str	x0, [x3, #32]
    fe9c:	str	w2, [x3, #40]
    fea0:	ldr	x0, [x1, #24]
    fea4:	add	x0, x0, #0x2c
    fea8:	str	x0, [x1, #24]
    feac:	b	fcc0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
    feb0:	add	x22, sp, #0x90
    feb4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    feb8:	mov	x2, #0x2c                  	// #44
    febc:	add	x1, x1, #0x0
    fec0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    fec4:	b	fcc0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
    fec8:	ldr	x1, [x0, #8]
    fecc:	neg	w3, w2
    fed0:	mov	x0, #0xffffffffffffffff    	// #-1
    fed4:	add	x22, sp, #0x90
    fed8:	lsr	x0, x0, x3
    fedc:	and	x0, x0, x1
    fee0:	str	x0, [sp, #152]
    fee4:	str	w2, [sp, #160]
    fee8:	b	fcc0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
    feec:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fef0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fef4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fef8:	add	x3, x3, #0x0
    fefc:	add	x1, x1, #0x0
    ff00:	add	x0, x0, #0x0
    ff04:	mov	w2, #0x657                 	// #1623
    ff08:	bl	0 <__assert_fail>
    ff0c:	nop

000000000000ff10 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>:
    ff10:	stp	x29, x30, [sp, #-320]!
    ff14:	mov	x29, sp
    ff18:	stp	x23, x24, [sp, #48]
    ff1c:	ldr	x23, [x1]
    ff20:	stp	x19, x20, [sp, #16]
    ff24:	stp	x21, x22, [sp, #32]
    ff28:	ldr	x20, [x0, #704]
    ff2c:	str	x25, [sp, #64]
    ff30:	cbz	x23, 1028c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x37c>
    ff34:	mov	x19, x1
    ff38:	ldrb	w1, [x23, #8]
    ff3c:	cmp	w1, #0x10
    ff40:	b.ne	1026c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x35c>  // b.any
    ff44:	ldur	x1, [x19, #-72]
    ff48:	sub	x20, x20, #0x80
    ff4c:	add	x24, sp, #0x50
    ff50:	mov	x22, x0
    ff54:	mov	x8, x24
    ff58:	mov	x2, x20
    ff5c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ff60:	add	x21, sp, #0x80
    ff64:	ldur	x1, [x19, #-48]
    ff68:	mov	x0, x22
    ff6c:	mov	x8, x21
    ff70:	mov	x2, x20
    ff74:	add	x25, sp, #0xb0
    ff78:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ff7c:	ldur	x1, [x19, #-24]
    ff80:	mov	x0, x22
    ff84:	mov	x8, x25
    ff88:	mov	x2, x20
    ff8c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ff90:	ldr	w22, [sp, #192]
    ff94:	mov	w0, #0x1                   	// #1
    ff98:	stp	xzr, xzr, [sp, #224]
    ff9c:	cmp	w22, #0x40
    ffa0:	str	w0, [sp, #240]
    ffa4:	ldr	x23, [x23, #24]
    ffa8:	stp	xzr, xzr, [sp, #248]
    ffac:	str	xzr, [sp, #264]
    ffb0:	b.ls	10220 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x310>  // b.plast
    ffb4:	add	x0, x25, #0x8
    ffb8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ffbc:	sub	w22, w22, w0
    ffc0:	cmp	w22, #0x40
    ffc4:	b.hi	102ac <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x39c>  // b.pmore
    ffc8:	ldr	x0, [sp, #184]
    ffcc:	ldr	x25, [x0]
    ffd0:	add	x22, sp, #0xe0
    ffd4:	add	x1, x24, #0x18
    ffd8:	add	x0, x22, #0x18
    ffdc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ffe0:	ldp	x3, x0, [sp, #104]
    ffe4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    ffe8:	movk	x2, #0xaaab
    ffec:	and	x1, x25, #0xffffffff
    fff0:	sub	x0, x0, x3
    fff4:	asr	x0, x0, #4
    fff8:	mul	x0, x0, x2
    fffc:	cmp	x0, w25, uxtw
   10000:	b.ls	10254 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x344>  // b.plast
   10004:	ldrb	w0, [x23, #8]
   10008:	cmp	w0, #0x3
   1000c:	b.eq	10228 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x318>  // b.none
   10010:	cmp	w0, #0xb
   10014:	b.eq	101ec <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2dc>  // b.none
   10018:	cmp	w0, #0x2
   1001c:	b.eq	10038 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x128>  // b.none
   10020:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10024:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10028:	add	x1, x1, #0x0
   1002c:	add	x0, x0, #0x0
   10030:	mov	w2, #0x73a                 	// #1850
   10034:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10038:	add	x1, x1, x1, lsl #1
   1003c:	ldr	s0, [sp, #128]
   10040:	ldr	x0, [sp, #248]
   10044:	lsl	x1, x1, #4
   10048:	str	s0, [x0, x1]
   1004c:	add	x21, sp, #0x110
   10050:	mov	x1, x22
   10054:	mov	x0, x21
   10058:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1005c:	mov	x2, x20
   10060:	mov	x0, x19
   10064:	mov	x1, x21
   10068:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   1006c:	ldp	x19, x20, [sp, #296]
   10070:	cmp	x19, x20
   10074:	b.eq	10090 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x180>  // b.none
   10078:	mov	x0, x19
   1007c:	add	x19, x19, #0x30
   10080:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10084:	cmp	x20, x19
   10088:	b.ne	10078 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x168>  // b.any
   1008c:	ldr	x20, [sp, #296]
   10090:	cbz	x20, 1009c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x18c>
   10094:	mov	x0, x20
   10098:	bl	0 <_ZdlPv>
   1009c:	ldr	w0, [sp, #288]
   100a0:	cmp	w0, #0x40
   100a4:	b.ls	100b4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1a4>  // b.plast
   100a8:	ldr	x0, [sp, #280]
   100ac:	cbz	x0, 100b4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1a4>
   100b0:	bl	0 <_ZdaPv>
   100b4:	ldp	x19, x20, [sp, #248]
   100b8:	cmp	x19, x20
   100bc:	b.eq	100d8 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1c8>  // b.none
   100c0:	mov	x0, x19
   100c4:	add	x19, x19, #0x30
   100c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   100cc:	cmp	x20, x19
   100d0:	b.ne	100c0 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1b0>  // b.any
   100d4:	ldr	x20, [sp, #248]
   100d8:	cbz	x20, 100e4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1d4>
   100dc:	mov	x0, x20
   100e0:	bl	0 <_ZdlPv>
   100e4:	ldr	w0, [sp, #240]
   100e8:	cmp	w0, #0x40
   100ec:	b.ls	100fc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1ec>  // b.plast
   100f0:	ldr	x0, [sp, #232]
   100f4:	cbz	x0, 100fc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1ec>
   100f8:	bl	0 <_ZdaPv>
   100fc:	ldp	x19, x20, [sp, #200]
   10100:	cmp	x19, x20
   10104:	b.eq	10120 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x210>  // b.none
   10108:	mov	x0, x19
   1010c:	add	x19, x19, #0x30
   10110:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10114:	cmp	x20, x19
   10118:	b.ne	10108 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1f8>  // b.any
   1011c:	ldr	x20, [sp, #200]
   10120:	cbz	x20, 1012c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x21c>
   10124:	mov	x0, x20
   10128:	bl	0 <_ZdlPv>
   1012c:	ldr	w0, [sp, #192]
   10130:	cmp	w0, #0x40
   10134:	b.ls	10144 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x234>  // b.plast
   10138:	ldr	x0, [sp, #184]
   1013c:	cbz	x0, 10144 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x234>
   10140:	bl	0 <_ZdaPv>
   10144:	ldp	x19, x20, [sp, #152]
   10148:	cmp	x19, x20
   1014c:	b.eq	10168 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x258>  // b.none
   10150:	mov	x0, x19
   10154:	add	x19, x19, #0x30
   10158:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1015c:	cmp	x20, x19
   10160:	b.ne	10150 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x240>  // b.any
   10164:	ldr	x20, [sp, #152]
   10168:	cbz	x20, 10174 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x264>
   1016c:	mov	x0, x20
   10170:	bl	0 <_ZdlPv>
   10174:	ldr	w0, [sp, #144]
   10178:	cmp	w0, #0x40
   1017c:	b.ls	1018c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x27c>  // b.plast
   10180:	ldr	x0, [sp, #136]
   10184:	cbz	x0, 1018c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x27c>
   10188:	bl	0 <_ZdaPv>
   1018c:	ldp	x19, x20, [sp, #104]
   10190:	cmp	x19, x20
   10194:	b.eq	101b0 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2a0>  // b.none
   10198:	mov	x0, x19
   1019c:	add	x19, x19, #0x30
   101a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   101a4:	cmp	x20, x19
   101a8:	b.ne	10198 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x288>  // b.any
   101ac:	ldr	x20, [sp, #104]
   101b0:	cbz	x20, 101bc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2ac>
   101b4:	mov	x0, x20
   101b8:	bl	0 <_ZdlPv>
   101bc:	ldr	w0, [sp, #96]
   101c0:	cmp	w0, #0x40
   101c4:	b.ls	101d4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2c4>  // b.plast
   101c8:	ldr	x0, [sp, #88]
   101cc:	cbz	x0, 101d4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2c4>
   101d0:	bl	0 <_ZdaPv>
   101d4:	ldp	x19, x20, [sp, #16]
   101d8:	ldp	x21, x22, [sp, #32]
   101dc:	ldp	x23, x24, [sp, #48]
   101e0:	ldr	x25, [sp, #64]
   101e4:	ldp	x29, x30, [sp], #320
   101e8:	ret
   101ec:	ldr	x0, [sp, #248]
   101f0:	add	x1, x1, x1, lsl #1
   101f4:	add	x1, x0, x1, lsl #4
   101f8:	add	x0, x1, #0x8
   101fc:	ldr	w2, [x1, #16]
   10200:	cmp	w2, #0x40
   10204:	b.hi	10214 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x304>  // b.pmore
   10208:	ldr	w2, [sp, #144]
   1020c:	cmp	w2, #0x40
   10210:	b.ls	10240 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x330>  // b.plast
   10214:	add	x1, x21, #0x8
   10218:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   1021c:	b	1004c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x13c>
   10220:	ldr	x25, [sp, #184]
   10224:	b	ffd0 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0xc0>
   10228:	add	x1, x1, x1, lsl #1
   1022c:	ldr	d0, [sp, #128]
   10230:	ldr	x0, [sp, #248]
   10234:	lsl	x1, x1, #4
   10238:	str	d0, [x0, x1]
   1023c:	b	1004c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x13c>
   10240:	ldr	x3, [sp, #136]
   10244:	str	x3, [x1, #8]
   10248:	str	w2, [x0, #8]
   1024c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10250:	b	1004c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x13c>
   10254:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10258:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1025c:	add	x1, x1, #0x0
   10260:	add	x0, x0, #0x0
   10264:	mov	w2, #0x737                 	// #1847
   10268:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1026c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10270:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10274:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10278:	add	x3, x3, #0x0
   1027c:	add	x1, x1, #0x0
   10280:	add	x0, x0, #0x0
   10284:	mov	w2, #0x108                 	// #264
   10288:	bl	0 <__assert_fail>
   1028c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10290:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10294:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10298:	add	x3, x3, #0x0
   1029c:	add	x1, x1, #0x0
   102a0:	add	x0, x0, #0x0
   102a4:	mov	w2, #0x69                  	// #105
   102a8:	bl	0 <__assert_fail>
   102ac:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   102b0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   102b4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   102b8:	add	x3, x3, #0x0
   102bc:	add	x1, x1, #0x0
   102c0:	add	x0, x0, #0x0
   102c4:	mov	w2, #0x657                 	// #1623
   102c8:	bl	0 <__assert_fail>
   102cc:	nop

00000000000102d0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>:
   102d0:	stp	x29, x30, [sp, #-352]!
   102d4:	mov	x29, sp
   102d8:	stp	x23, x24, [sp, #48]
   102dc:	ldr	x24, [x1]
   102e0:	stp	x19, x20, [sp, #16]
   102e4:	stp	x21, x22, [sp, #32]
   102e8:	stp	x25, x26, [sp, #64]
   102ec:	stp	x27, x28, [sp, #80]
   102f0:	ldr	x23, [x0, #704]
   102f4:	cbz	x24, 1077c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x4ac>
   102f8:	mov	x22, x1
   102fc:	ldrb	w1, [x24, #8]
   10300:	cmp	w1, #0x10
   10304:	b.ne	1075c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x48c>  // b.any
   10308:	ldur	x1, [x22, #-72]
   1030c:	sub	x23, x23, #0x80
   10310:	add	x25, sp, #0x70
   10314:	mov	x19, x0
   10318:	mov	x8, x25
   1031c:	mov	x2, x23
   10320:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10324:	add	x26, sp, #0xa0
   10328:	ldur	x1, [x22, #-48]
   1032c:	mov	x0, x19
   10330:	mov	x8, x26
   10334:	mov	x2, x23
   10338:	add	x27, sp, #0xd0
   1033c:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10340:	ldur	x1, [x22, #-24]
   10344:	mov	x0, x19
   10348:	mov	x2, x23
   1034c:	mov	x8, x27
   10350:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10354:	stp	xzr, xzr, [sp, #256]
   10358:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1035c:	ldp	x2, x19, [sp, #232]
   10360:	movk	x0, #0xaaab
   10364:	ldp	x3, x20, [sp, #136]
   10368:	mov	w1, #0x1                   	// #1
   1036c:	ldr	x21, [sp, #192]
   10370:	str	w1, [sp, #272]
   10374:	sub	x19, x19, x2
   10378:	ldr	x2, [sp, #184]
   1037c:	asr	x19, x19, #4
   10380:	sub	x20, x20, x3
   10384:	sub	x21, x21, x2
   10388:	mul	x19, x19, x0
   1038c:	asr	x20, x20, #4
   10390:	asr	x21, x21, #4
   10394:	ldr	x24, [x24, #24]
   10398:	stp	xzr, xzr, [sp, #280]
   1039c:	mul	w20, w20, w0
   103a0:	str	xzr, [sp, #296]
   103a4:	mul	w21, w21, w0
   103a8:	and	x1, x19, #0xffffffff
   103ac:	cbnz	w19, 106e8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x418>
   103b0:	ldrb	w0, [x24, #8]
   103b4:	cmp	w0, #0x3
   103b8:	b.eq	10630 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x360>  // b.none
   103bc:	cmp	w0, #0xb
   103c0:	b.eq	10504 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x234>  // b.none
   103c4:	cmp	w0, #0x2
   103c8:	b.eq	103e4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x114>  // b.none
   103cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103d0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103d4:	add	x1, x1, #0x0
   103d8:	add	x0, x0, #0x0
   103dc:	mov	w2, #0x75f                 	// #1887
   103e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   103e4:	cbz	w19, 1049c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>
   103e8:	sub	w19, w19, #0x1
   103ec:	add	w0, w20, w21
   103f0:	add	x19, x19, #0x1
   103f4:	mov	x24, #0x0                   	// #0
   103f8:	str	w0, [sp, #108]
   103fc:	add	x19, x19, x19, lsl #1
   10400:	lsl	x19, x19, #4
   10404:	b	10430 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x160>
   10408:	ubfiz	x2, x0, #1, #32
   1040c:	add	x0, x2, w0, uxtw
   10410:	ldr	x3, [sp, #136]
   10414:	lsl	x0, x0, #4
   10418:	ldr	x2, [sp, #280]
   1041c:	ldr	s0, [x3, x0]
   10420:	str	s0, [x2, x24]
   10424:	add	x24, x24, #0x30
   10428:	cmp	x24, x19
   1042c:	b.eq	1049c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>  // b.none
   10430:	ldr	x28, [sp, #232]
   10434:	add	x28, x28, x24
   10438:	ldr	w21, [x28, #16]
   1043c:	cmp	w21, #0x40
   10440:	b.ls	10628 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x358>  // b.plast
   10444:	add	x0, x28, #0x8
   10448:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   1044c:	sub	w2, w21, w0
   10450:	cmp	w2, #0x40
   10454:	b.hi	106f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x424>  // b.pmore
   10458:	ldr	x0, [x28, #8]
   1045c:	ldr	x0, [x0]
   10460:	cmp	w20, w0
   10464:	b.hi	10408 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x138>  // b.pmore
   10468:	ldr	w1, [sp, #108]
   1046c:	cmp	w1, w0
   10470:	b.ls	10744 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x474>  // b.plast
   10474:	sub	w2, w0, w20
   10478:	mov	w0, #0x30                  	// #48
   1047c:	ldr	x3, [sp, #184]
   10480:	umull	x2, w2, w0
   10484:	ldr	x0, [sp, #280]
   10488:	ldr	s0, [x3, x2]
   1048c:	str	s0, [x0, x24]
   10490:	add	x24, x24, #0x30
   10494:	cmp	x24, x19
   10498:	b.ne	10430 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x160>  // b.any
   1049c:	add	x19, sp, #0x130
   104a0:	add	x20, sp, #0x100
   104a4:	mov	x1, x20
   104a8:	mov	x0, x19
   104ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   104b0:	mov	x2, x23
   104b4:	mov	x1, x19
   104b8:	mov	x0, x22
   104bc:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   104c0:	mov	x0, x19
   104c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   104c8:	mov	x0, x20
   104cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   104d0:	mov	x0, x27
   104d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   104d8:	mov	x0, x26
   104dc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   104e0:	mov	x0, x25
   104e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   104e8:	ldp	x19, x20, [sp, #16]
   104ec:	ldp	x21, x22, [sp, #32]
   104f0:	ldp	x23, x24, [sp, #48]
   104f4:	ldp	x25, x26, [sp, #64]
   104f8:	ldp	x27, x28, [sp, #80]
   104fc:	ldp	x29, x30, [sp], #352
   10500:	ret
   10504:	cbz	w19, 1049c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>
   10508:	ldr	x1, [sp, #232]
   1050c:	sub	w19, w19, #0x1
   10510:	mov	x28, #0x0                   	// #0
   10514:	add	x19, x19, #0x1
   10518:	add	x24, x1, x28
   1051c:	add	w0, w20, w21
   10520:	add	x19, x19, x19, lsl #1
   10524:	str	w0, [sp, #108]
   10528:	ldr	w21, [x24, #16]
   1052c:	lsl	x19, x19, #4
   10530:	cmp	w21, #0x40
   10534:	b.ls	105c4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2f4>  // b.plast
   10538:	add	x0, x24, #0x8
   1053c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   10540:	sub	w2, w21, w0
   10544:	cmp	w2, #0x40
   10548:	b.hi	106f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x424>  // b.pmore
   1054c:	ldr	x0, [x24, #8]
   10550:	ldr	x0, [x0]
   10554:	cmp	w20, w0
   10558:	b.hi	105d0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x300>  // b.pmore
   1055c:	ldr	w1, [sp, #108]
   10560:	cmp	w1, w0
   10564:	b.ls	10714 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x444>  // b.plast
   10568:	ldr	x4, [sp, #280]
   1056c:	sub	w2, w0, w20
   10570:	ldr	x1, [sp, #184]
   10574:	add	x4, x4, x28
   10578:	mov	w3, #0x30                  	// #48
   1057c:	add	x0, x4, #0x8
   10580:	umaddl	x2, w2, w3, x1
   10584:	ldr	w5, [x4, #16]
   10588:	add	x1, x2, #0x8
   1058c:	cmp	w5, #0x40
   10590:	b.hi	105a0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d0>  // b.pmore
   10594:	ldr	w5, [x2, #16]
   10598:	cmp	w5, #0x40
   1059c:	b.ls	10608 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x338>  // b.plast
   105a0:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   105a4:	add	x28, x28, #0x30
   105a8:	cmp	x19, x28
   105ac:	b.eq	1049c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>  // b.none
   105b0:	ldr	x1, [sp, #232]
   105b4:	add	x24, x1, x28
   105b8:	ldr	w21, [x24, #16]
   105bc:	cmp	w21, #0x40
   105c0:	b.hi	10538 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x268>  // b.pmore
   105c4:	ldr	x0, [x24, #8]
   105c8:	cmp	w20, w0
   105cc:	b.ls	1055c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x28c>  // b.plast
   105d0:	ldr	x4, [sp, #280]
   105d4:	ubfiz	x2, x0, #1, #32
   105d8:	ldr	x1, [sp, #136]
   105dc:	add	x4, x4, x28
   105e0:	add	x2, x2, w0, uxtw
   105e4:	add	x0, x4, #0x8
   105e8:	ldr	w5, [x4, #16]
   105ec:	add	x2, x1, x2, lsl #4
   105f0:	add	x1, x2, #0x8
   105f4:	cmp	w5, #0x40
   105f8:	b.hi	105a0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d0>  // b.pmore
   105fc:	ldr	w5, [x2, #16]
   10600:	cmp	w5, #0x40
   10604:	b.hi	105a0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d0>  // b.pmore
   10608:	ldr	x2, [x2, #8]
   1060c:	neg	w1, w5
   10610:	str	w5, [x0, #8]
   10614:	mov	x0, #0xffffffffffffffff    	// #-1
   10618:	lsr	x1, x0, x1
   1061c:	and	x1, x1, x2
   10620:	str	x1, [x4, #8]
   10624:	b	105a4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d4>
   10628:	ldr	x0, [x28, #8]
   1062c:	b	10460 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x190>
   10630:	cbz	w19, 1049c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>
   10634:	sub	w19, w19, #0x1
   10638:	add	w0, w20, w21
   1063c:	add	x19, x19, #0x1
   10640:	mov	x24, #0x0                   	// #0
   10644:	str	w0, [sp, #108]
   10648:	add	x19, x19, x19, lsl #1
   1064c:	lsl	x19, x19, #4
   10650:	b	1067c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3ac>
   10654:	ubfiz	x2, x0, #1, #32
   10658:	add	x0, x2, w0, uxtw
   1065c:	ldr	x3, [sp, #136]
   10660:	lsl	x0, x0, #4
   10664:	ldr	x2, [sp, #280]
   10668:	ldr	d0, [x3, x0]
   1066c:	str	d0, [x2, x24]
   10670:	add	x24, x24, #0x30
   10674:	cmp	x19, x24
   10678:	b.eq	1049c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>  // b.none
   1067c:	ldr	x28, [sp, #232]
   10680:	add	x28, x28, x24
   10684:	ldr	w21, [x28, #16]
   10688:	cmp	w21, #0x40
   1068c:	b.ls	106e0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x410>  // b.plast
   10690:	add	x0, x28, #0x8
   10694:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   10698:	sub	w2, w21, w0
   1069c:	cmp	w2, #0x40
   106a0:	b.hi	106f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x424>  // b.pmore
   106a4:	ldr	x0, [x28, #8]
   106a8:	ldr	x0, [x0]
   106ac:	cmp	w20, w0
   106b0:	b.hi	10654 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x384>  // b.pmore
   106b4:	ldr	w1, [sp, #108]
   106b8:	cmp	w1, w0
   106bc:	b.ls	1072c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x45c>  // b.plast
   106c0:	sub	w2, w0, w20
   106c4:	mov	w0, #0x30                  	// #48
   106c8:	ldr	x3, [sp, #184]
   106cc:	umull	x2, w2, w0
   106d0:	ldr	x0, [sp, #280]
   106d4:	ldr	d0, [x3, x2]
   106d8:	str	d0, [x0, x24]
   106dc:	b	10670 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3a0>
   106e0:	ldr	x0, [x28, #8]
   106e4:	b	106ac <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3dc>
   106e8:	add	x0, sp, #0x118
   106ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   106f0:	b	103b0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0xe0>
   106f4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   106f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   106fc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10700:	add	x3, x3, #0x0
   10704:	add	x1, x1, #0x0
   10708:	add	x0, x0, #0x0
   1070c:	mov	w2, #0x657                 	// #1623
   10710:	bl	0 <__assert_fail>
   10714:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10718:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1071c:	add	x1, x1, #0x0
   10720:	add	x0, x0, #0x0
   10724:	mov	w2, #0x76e                 	// #1902
   10728:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1072c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10730:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10734:	add	x1, x1, #0x0
   10738:	add	x0, x0, #0x0
   1073c:	mov	w2, #0x785                 	// #1925
   10740:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10744:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10748:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1074c:	add	x1, x1, #0x0
   10750:	add	x0, x0, #0x0
   10754:	mov	w2, #0x779                 	// #1913
   10758:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1075c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10760:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10764:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10768:	add	x3, x3, #0x0
   1076c:	add	x1, x1, #0x0
   10770:	add	x0, x0, #0x0
   10774:	mov	w2, #0x108                 	// #264
   10778:	bl	0 <__assert_fail>
   1077c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10780:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10784:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10788:	add	x3, x3, #0x0
   1078c:	add	x1, x1, #0x0
   10790:	add	x0, x0, #0x0
   10794:	mov	w2, #0x69                  	// #105
   10798:	bl	0 <__assert_fail>
   1079c:	nop

00000000000107a0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>:
   107a0:	stp	x29, x30, [sp, #-192]!
   107a4:	mov	w3, #0x1                   	// #1
   107a8:	mov	x29, sp
   107ac:	stp	x21, x22, [sp, #32]
   107b0:	ldr	x21, [x0, #704]
   107b4:	stp	x19, x20, [sp, #16]
   107b8:	mov	x20, x1
   107bc:	ldur	x22, [x1, #-24]
   107c0:	add	x19, sp, #0x60
   107c4:	sub	x21, x21, #0x80
   107c8:	mov	x8, x19
   107cc:	mov	x2, x21
   107d0:	mov	x1, x22
   107d4:	stp	xzr, xzr, [sp, #48]
   107d8:	str	w3, [sp, #64]
   107dc:	stp	xzr, xzr, [sp, #72]
   107e0:	str	xzr, [sp, #88]
   107e4:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   107e8:	ldr	w2, [x20, #64]
   107ec:	ldr	x1, [x20, #56]
   107f0:	cbz	w2, 1081c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x7c>
   107f4:	sub	w4, w2, #0x1
   107f8:	mov	x0, x1
   107fc:	add	x4, x4, #0x1
   10800:	mov	w5, #0x30                  	// #48
   10804:	add	x4, x1, x4, lsl #2
   10808:	ldr	w3, [x0], #4
   1080c:	ldr	x19, [x19, #24]
   10810:	cmp	x0, x4
   10814:	umaddl	x19, w3, w5, x19
   10818:	b.ne	10808 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x68>  // b.any
   1081c:	ldr	x0, [x22]
   10820:	mov	w2, w2
   10824:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
   10828:	ldrb	w0, [x0, #8]
   1082c:	cmp	w0, #0xb
   10830:	b.eq	109bc <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x21c>  // b.none
   10834:	b.hi	1095c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1bc>  // b.pmore
   10838:	cmp	w0, #0x2
   1083c:	b.eq	109e8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x248>  // b.none
   10840:	cmp	w0, #0x3
   10844:	b.ne	10994 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1f4>  // b.any
   10848:	add	x22, sp, #0x30
   1084c:	ldr	d0, [x19]
   10850:	str	d0, [sp, #48]
   10854:	add	x19, sp, #0x90
   10858:	mov	x1, x22
   1085c:	mov	x0, x19
   10860:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10864:	mov	x1, x19
   10868:	mov	x0, x20
   1086c:	mov	x2, x21
   10870:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10874:	ldp	x19, x20, [sp, #168]
   10878:	cmp	x19, x20
   1087c:	b.eq	10898 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xf8>  // b.none
   10880:	mov	x0, x19
   10884:	add	x19, x19, #0x30
   10888:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1088c:	cmp	x20, x19
   10890:	b.ne	10880 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>  // b.any
   10894:	ldr	x20, [sp, #168]
   10898:	cbz	x20, 108a4 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x104>
   1089c:	mov	x0, x20
   108a0:	bl	0 <_ZdlPv>
   108a4:	ldr	w0, [sp, #160]
   108a8:	cmp	w0, #0x40
   108ac:	b.ls	108bc <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x11c>  // b.plast
   108b0:	ldr	x0, [sp, #152]
   108b4:	cbz	x0, 108bc <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x11c>
   108b8:	bl	0 <_ZdaPv>
   108bc:	ldp	x19, x20, [sp, #120]
   108c0:	cmp	x19, x20
   108c4:	b.eq	108e0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x140>  // b.none
   108c8:	mov	x0, x19
   108cc:	add	x19, x19, #0x30
   108d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108d4:	cmp	x20, x19
   108d8:	b.ne	108c8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x128>  // b.any
   108dc:	ldr	x20, [sp, #120]
   108e0:	cbz	x20, 108ec <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x14c>
   108e4:	mov	x0, x20
   108e8:	bl	0 <_ZdlPv>
   108ec:	ldr	w0, [sp, #112]
   108f0:	cmp	w0, #0x40
   108f4:	b.ls	10904 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x164>  // b.plast
   108f8:	ldr	x0, [sp, #104]
   108fc:	cbz	x0, 10904 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x164>
   10900:	bl	0 <_ZdaPv>
   10904:	ldp	x19, x20, [sp, #72]
   10908:	cmp	x19, x20
   1090c:	b.eq	10928 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x188>  // b.none
   10910:	mov	x0, x19
   10914:	add	x19, x19, #0x30
   10918:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1091c:	cmp	x20, x19
   10920:	b.ne	10910 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x170>  // b.any
   10924:	ldr	x20, [sp, #72]
   10928:	cbz	x20, 10934 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x194>
   1092c:	mov	x0, x20
   10930:	bl	0 <_ZdlPv>
   10934:	ldr	w0, [sp, #64]
   10938:	cmp	w0, #0x40
   1093c:	b.ls	1094c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1ac>  // b.plast
   10940:	ldr	x0, [sp, #56]
   10944:	cbz	x0, 1094c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1ac>
   10948:	bl	0 <_ZdaPv>
   1094c:	ldp	x19, x20, [sp, #16]
   10950:	ldp	x21, x22, [sp, #32]
   10954:	ldp	x29, x30, [sp], #192
   10958:	ret
   1095c:	cmp	w0, #0xf
   10960:	b.eq	109ac <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x20c>  // b.none
   10964:	b.ls	10984 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1e4>  // b.plast
   10968:	cmp	w0, #0x10
   1096c:	b.ne	10994 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1f4>  // b.any
   10970:	add	x22, sp, #0x30
   10974:	add	x1, x19, #0x18
   10978:	add	x0, x22, #0x18
   1097c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10980:	b	10854 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   10984:	sub	w0, w0, #0xd
   10988:	and	w0, w0, #0xff
   1098c:	cmp	w0, #0x1
   10990:	b.ls	10970 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1d0>  // b.plast
   10994:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10998:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1099c:	add	x1, x1, #0x0
   109a0:	add	x0, x0, #0x0
   109a4:	mov	w2, #0x79e                 	// #1950
   109a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   109ac:	ldr	x0, [x19]
   109b0:	add	x22, sp, #0x30
   109b4:	str	x0, [sp, #48]
   109b8:	b	10854 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   109bc:	ldr	w0, [sp, #64]
   109c0:	add	x1, x19, #0x8
   109c4:	cmp	w0, #0x40
   109c8:	b.hi	109d8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x238>  // b.pmore
   109cc:	ldr	w0, [x19, #16]
   109d0:	cmp	w0, #0x40
   109d4:	b.ls	109f8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x258>  // b.plast
   109d8:	add	x22, sp, #0x30
   109dc:	add	x0, x22, #0x8
   109e0:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   109e4:	b	10854 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   109e8:	ldr	s0, [x19]
   109ec:	add	x22, sp, #0x30
   109f0:	str	s0, [sp, #48]
   109f4:	b	10854 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   109f8:	ldr	x2, [x1]
   109fc:	neg	w3, w0
   10a00:	mov	x1, #0xffffffffffffffff    	// #-1
   10a04:	add	x22, sp, #0x30
   10a08:	lsr	x1, x1, x3
   10a0c:	and	x1, x1, x2
   10a10:	str	x1, [sp, #56]
   10a14:	str	w0, [sp, #64]
   10a18:	b	10854 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   10a1c:	nop

0000000000010a20 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>:
   10a20:	stp	x29, x30, [sp, #-288]!
   10a24:	mov	x29, sp
   10a28:	stp	x21, x22, [sp, #32]
   10a2c:	add	x22, sp, #0xc0
   10a30:	ldr	x21, [x0, #704]
   10a34:	str	x25, [sp, #64]
   10a38:	ldur	x25, [x1, #-48]
   10a3c:	stp	x19, x20, [sp, #16]
   10a40:	mov	x20, x1
   10a44:	add	x19, sp, #0x60
   10a48:	sub	x21, x21, #0x80
   10a4c:	mov	x8, x19
   10a50:	mov	x2, x21
   10a54:	mov	x1, x25
   10a58:	stp	x23, x24, [sp, #48]
   10a5c:	mov	x24, x0
   10a60:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10a64:	add	x23, sp, #0x90
   10a68:	ldur	x1, [x20, #-24]
   10a6c:	mov	x2, x21
   10a70:	mov	x8, x23
   10a74:	mov	x0, x24
   10a78:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10a7c:	mov	x1, x19
   10a80:	mov	x0, x22
   10a84:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10a88:	ldr	w2, [x20, #64]
   10a8c:	ldr	x1, [x20, #56]
   10a90:	cbz	w2, 10ce0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2c0>
   10a94:	sub	w4, w2, #0x1
   10a98:	mov	x0, x1
   10a9c:	add	x4, x4, #0x1
   10aa0:	mov	x19, x22
   10aa4:	mov	w5, #0x30                  	// #48
   10aa8:	add	x4, x1, x4, lsl #2
   10aac:	nop
   10ab0:	ldr	w3, [x0], #4
   10ab4:	ldr	x19, [x19, #24]
   10ab8:	cmp	x0, x4
   10abc:	umaddl	x19, w3, w5, x19
   10ac0:	b.ne	10ab0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x90>  // b.any
   10ac4:	ldr	x0, [x25]
   10ac8:	mov	w2, w2
   10acc:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
   10ad0:	ldrb	w0, [x0, #8]
   10ad4:	cmp	w0, #0xb
   10ad8:	b.eq	10cac <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x28c>  // b.none
   10adc:	b.hi	10c54 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x234>  // b.pmore
   10ae0:	cmp	w0, #0x2
   10ae4:	b.eq	10cd4 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2b4>  // b.none
   10ae8:	cmp	w0, #0x3
   10aec:	b.ne	10c88 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x268>  // b.any
   10af0:	ldr	d0, [sp, #144]
   10af4:	str	d0, [x19]
   10af8:	add	x0, sp, #0xf0
   10afc:	mov	x1, x22
   10b00:	str	x0, [sp, #88]
   10b04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10b08:	ldr	x1, [sp, #88]
   10b0c:	mov	x0, x20
   10b10:	mov	x2, x21
   10b14:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10b18:	ldp	x19, x20, [sp, #264]
   10b1c:	cmp	x19, x20
   10b20:	b.eq	10b40 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x120>  // b.none
   10b24:	nop
   10b28:	mov	x0, x19
   10b2c:	add	x19, x19, #0x30
   10b30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10b34:	cmp	x20, x19
   10b38:	b.ne	10b28 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x108>  // b.any
   10b3c:	ldr	x20, [sp, #264]
   10b40:	cbz	x20, 10b4c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x12c>
   10b44:	mov	x0, x20
   10b48:	bl	0 <_ZdlPv>
   10b4c:	ldr	w0, [sp, #256]
   10b50:	cmp	w0, #0x40
   10b54:	b.ls	10b64 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x144>  // b.plast
   10b58:	ldr	x0, [sp, #248]
   10b5c:	cbz	x0, 10b64 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x144>
   10b60:	bl	0 <_ZdaPv>
   10b64:	ldp	x19, x20, [sp, #216]
   10b68:	cmp	x19, x20
   10b6c:	b.eq	10b88 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x168>  // b.none
   10b70:	mov	x0, x19
   10b74:	add	x19, x19, #0x30
   10b78:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10b7c:	cmp	x20, x19
   10b80:	b.ne	10b70 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x150>  // b.any
   10b84:	ldr	x20, [sp, #216]
   10b88:	cbz	x20, 10b94 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x174>
   10b8c:	mov	x0, x20
   10b90:	bl	0 <_ZdlPv>
   10b94:	ldr	w0, [sp, #208]
   10b98:	cmp	w0, #0x40
   10b9c:	b.ls	10bac <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x18c>  // b.plast
   10ba0:	ldr	x0, [sp, #200]
   10ba4:	cbz	x0, 10bac <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x18c>
   10ba8:	bl	0 <_ZdaPv>
   10bac:	ldp	x19, x20, [sp, #168]
   10bb0:	cmp	x19, x20
   10bb4:	b.eq	10bd0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1b0>  // b.none
   10bb8:	mov	x0, x19
   10bbc:	add	x19, x19, #0x30
   10bc0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10bc4:	cmp	x20, x19
   10bc8:	b.ne	10bb8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x198>  // b.any
   10bcc:	ldr	x20, [sp, #168]
   10bd0:	cbz	x20, 10bdc <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1bc>
   10bd4:	mov	x0, x20
   10bd8:	bl	0 <_ZdlPv>
   10bdc:	ldr	w0, [sp, #160]
   10be0:	cmp	w0, #0x40
   10be4:	b.ls	10bf4 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1d4>  // b.plast
   10be8:	ldr	x0, [sp, #152]
   10bec:	cbz	x0, 10bf4 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1d4>
   10bf0:	bl	0 <_ZdaPv>
   10bf4:	ldp	x19, x20, [sp, #120]
   10bf8:	cmp	x19, x20
   10bfc:	b.eq	10c18 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1f8>  // b.none
   10c00:	mov	x0, x19
   10c04:	add	x19, x19, #0x30
   10c08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10c0c:	cmp	x20, x19
   10c10:	b.ne	10c00 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1e0>  // b.any
   10c14:	ldr	x20, [sp, #120]
   10c18:	cbz	x20, 10c24 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x204>
   10c1c:	mov	x0, x20
   10c20:	bl	0 <_ZdlPv>
   10c24:	ldr	w0, [sp, #112]
   10c28:	cmp	w0, #0x40
   10c2c:	b.ls	10c3c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x21c>  // b.plast
   10c30:	ldr	x0, [sp, #104]
   10c34:	cbz	x0, 10c3c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x21c>
   10c38:	bl	0 <_ZdaPv>
   10c3c:	ldp	x19, x20, [sp, #16]
   10c40:	ldp	x21, x22, [sp, #32]
   10c44:	ldp	x23, x24, [sp, #48]
   10c48:	ldr	x25, [sp, #64]
   10c4c:	ldp	x29, x30, [sp], #288
   10c50:	ret
   10c54:	cmp	w0, #0xf
   10c58:	b.eq	10ca0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x280>  // b.none
   10c5c:	b.ls	10c78 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x258>  // b.plast
   10c60:	cmp	w0, #0x10
   10c64:	b.ne	10c88 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x268>  // b.any
   10c68:	add	x1, x23, #0x18
   10c6c:	add	x0, x19, #0x18
   10c70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10c74:	b	10af8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10c78:	sub	w0, w0, #0xd
   10c7c:	and	w0, w0, #0xff
   10c80:	cmp	w0, #0x1
   10c84:	b.ls	10c68 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x248>  // b.plast
   10c88:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10c8c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10c90:	add	x1, x1, #0x0
   10c94:	add	x0, x0, #0x0
   10c98:	mov	w2, #0x7cd                 	// #1997
   10c9c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10ca0:	ldr	x0, [sp, #144]
   10ca4:	str	x0, [x19]
   10ca8:	b	10af8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10cac:	ldr	w1, [x19, #16]
   10cb0:	add	x0, x19, #0x8
   10cb4:	cmp	w1, #0x40
   10cb8:	b.hi	10cc8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2a8>  // b.pmore
   10cbc:	ldr	w1, [sp, #160]
   10cc0:	cmp	w1, #0x40
   10cc4:	b.ls	10ce8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2c8>  // b.plast
   10cc8:	add	x1, x23, #0x8
   10ccc:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   10cd0:	b	10af8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10cd4:	ldr	s0, [sp, #144]
   10cd8:	str	s0, [x19]
   10cdc:	b	10af8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10ce0:	mov	x19, x22
   10ce4:	b	10ac4 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xa4>
   10ce8:	ldr	x3, [sp, #152]
   10cec:	neg	w4, w1
   10cf0:	mov	x2, #0xffffffffffffffff    	// #-1
   10cf4:	str	w1, [x0, #8]
   10cf8:	lsr	x1, x2, x4
   10cfc:	and	x1, x1, x3
   10d00:	str	x1, [x0]
   10d04:	b	10af8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>

0000000000010d08 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
   10d08:	stp	x29, x30, [sp, #-224]!
   10d0c:	mov	x29, sp
   10d10:	stp	x19, x20, [sp, #16]
   10d14:	mov	x19, x0
   10d18:	mov	x20, x1
   10d1c:	stp	x21, x22, [sp, #32]
   10d20:	mov	x21, x2
   10d24:	ldr	x0, [x0, #696]
   10d28:	str	x3, [sp, #104]
   10d2c:	ldr	x22, [x19, #704]
   10d30:	cmp	x22, x0
   10d34:	b.eq	11174 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x46c>  // b.none
   10d38:	ldur	x1, [x22, #-104]
   10d3c:	add	x0, x19, #0x2b8
   10d40:	tst	x1, #0xfffffffffffffff8
   10d44:	b.ne	110b8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3b0>  // b.any
   10d48:	stp	x23, x24, [sp, #48]
   10d4c:	ldr	x1, [x0, #16]
   10d50:	cmp	x1, x22
   10d54:	b.eq	11134 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x42c>  // b.none
   10d58:	add	x1, x22, #0x28
   10d5c:	add	x3, x22, #0x50
   10d60:	stp	xzr, xzr, [x22]
   10d64:	add	x2, x22, #0x68
   10d68:	add	x24, x22, #0x80
   10d6c:	stp	xzr, xzr, [x22, #16]
   10d70:	str	wzr, [x22, #40]
   10d74:	str	xzr, [x22, #48]
   10d78:	stp	x1, x1, [x1, #16]
   10d7c:	str	xzr, [x1, #32]
   10d80:	str	xzr, [x22, #80]
   10d84:	stp	xzr, xzr, [x3, #8]
   10d88:	str	xzr, [x22, #104]
   10d8c:	stp	xzr, xzr, [x2, #8]
   10d90:	str	x24, [x0, #8]
   10d94:	stur	x20, [x24, #-128]
   10d98:	mov	x0, x20
   10d9c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   10da0:	tst	w0, #0xff
   10da4:	b.ne	1103c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x334>  // b.any
   10da8:	ldr	x0, [x20, #80]
   10dac:	ldr	x1, [x0]
   10db0:	tst	w1, #0x4
   10db4:	b.ne	112c8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5c0>  // b.any
   10db8:	sub	x1, x0, #0x18
   10dbc:	ldr	x0, [x0, #24]
   10dc0:	str	x1, [x22, #8]
   10dc4:	stur	x0, [x24, #-112]
   10dc8:	ldr	x1, [sp, #104]
   10dcc:	ldr	x0, [x20, #96]
   10dd0:	cmp	x1, x0
   10dd4:	b.eq	10dfc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf4>  // b.none
   10dd8:	b.ls	11288 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x580>  // b.plast
   10ddc:	ldr	x1, [x20, #24]
   10de0:	cbz	x1, 112b0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5a8>
   10de4:	ldrb	w2, [x1, #8]
   10de8:	cmp	w2, #0xc
   10dec:	b.ne	1121c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x514>  // b.any
   10df0:	ldr	w1, [x1, #8]
   10df4:	cmp	wzr, w1, lsr #8
   10df8:	b.eq	11288 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x580>  // b.none
   10dfc:	ldrb	w1, [x20, #18]
   10e00:	tbnz	w1, #0, 10fd0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2c8>
   10e04:	ldr	x19, [x20, #88]
   10e08:	mov	x24, x19
   10e0c:	add	x0, x0, x0, lsl #2
   10e10:	add	x0, x24, x0, lsl #3
   10e14:	str	x0, [sp, #112]
   10e18:	cmp	x0, x19
   10e1c:	b.eq	111ac <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4a4>  // b.none
   10e20:	ldr	x0, [sp, #104]
   10e24:	stp	x25, x26, [sp, #64]
   10e28:	stp	x27, x28, [sp, #80]
   10e2c:	cbz	x0, 10fb0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2a8>
   10e30:	add	x25, sp, #0xb0
   10e34:	mov	w20, #0x0                   	// #0
   10e38:	add	x0, x25, #0x8
   10e3c:	str	x0, [sp, #120]
   10e40:	mov	x0, #0x0                   	// #0
   10e44:	nop
   10e48:	add	x0, x0, x0, lsl #1
   10e4c:	lsl	x0, x0, #4
   10e50:	add	x24, x21, x0
   10e54:	add	x1, x24, #0x8
   10e58:	ldr	x0, [x21, x0]
   10e5c:	str	x0, [sp, #176]
   10e60:	ldr	w0, [x1, #8]
   10e64:	str	w0, [sp, #192]
   10e68:	cmp	w0, #0x40
   10e6c:	b.hi	10ff4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2ec>  // b.pmore
   10e70:	ldr	x0, [x24, #8]
   10e74:	str	x0, [sp, #184]
   10e78:	ldp	x28, x26, [x24, #24]
   10e7c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10e80:	movk	x1, #0xaaab
   10e84:	stp	xzr, xzr, [sp, #200]
   10e88:	mov	x27, #0x0                   	// #0
   10e8c:	str	xzr, [sp, #216]
   10e90:	sub	x23, x26, x28
   10e94:	asr	x0, x23, #4
   10e98:	mul	x0, x0, x1
   10e9c:	cbz	x0, 10ec0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1b8>
   10ea0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10ea4:	movk	x1, #0x2aa, lsl #48
   10ea8:	cmp	x0, x1
   10eac:	b.hi	111b4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4ac>  // b.pmore
   10eb0:	mov	x0, x23
   10eb4:	bl	0 <_Znwm>
   10eb8:	ldp	x28, x26, [x24, #24]
   10ebc:	mov	x27, x0
   10ec0:	add	x1, x27, x23
   10ec4:	stp	x27, x27, [sp, #200]
   10ec8:	cmp	x28, x26
   10ecc:	str	x1, [sp, #216]
   10ed0:	b.eq	10f2c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x224>  // b.none
   10ed4:	mov	x23, x28
   10ed8:	mov	x24, x27
   10edc:	nop
   10ee0:	mov	x1, x23
   10ee4:	mov	x0, x24
   10ee8:	add	x23, x23, #0x30
   10eec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10ef0:	cmp	x26, x23
   10ef4:	add	x24, x24, #0x30
   10ef8:	b.ne	10ee0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1d8>  // b.any
   10efc:	sub	x1, x26, #0x30
   10f00:	mov	x0, #0xaaab                	// #43691
   10f04:	sub	x1, x1, x28
   10f08:	movk	x0, #0xaaaa, lsl #16
   10f0c:	movk	x0, #0xaaaa, lsl #32
   10f10:	lsr	x1, x1, #4
   10f14:	movk	x0, #0xaaa, lsl #48
   10f18:	mul	x1, x1, x0
   10f1c:	and	x1, x1, #0xfffffffffffffff
   10f20:	add	x1, x1, #0x1
   10f24:	add	x1, x1, x1, lsl #1
   10f28:	add	x27, x27, x1, lsl #4
   10f2c:	mov	x2, x22
   10f30:	mov	x1, x25
   10f34:	mov	x0, x19
   10f38:	str	x27, [sp, #208]
   10f3c:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10f40:	ldp	x27, x28, [sp, #200]
   10f44:	cmp	x27, x28
   10f48:	b.eq	10f68 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x260>  // b.none
   10f4c:	nop
   10f50:	mov	x0, x27
   10f54:	add	x27, x27, #0x30
   10f58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10f5c:	cmp	x28, x27
   10f60:	b.ne	10f50 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x248>  // b.any
   10f64:	ldr	x28, [sp, #200]
   10f68:	cbz	x28, 10f74 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x26c>
   10f6c:	mov	x0, x28
   10f70:	bl	0 <_ZdlPv>
   10f74:	ldr	w0, [sp, #192]
   10f78:	cmp	w0, #0x40
   10f7c:	b.ls	10f8c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x284>  // b.plast
   10f80:	ldr	x0, [sp, #184]
   10f84:	cbz	x0, 10f8c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x284>
   10f88:	bl	0 <_ZdaPv>
   10f8c:	ldr	x0, [sp, #112]
   10f90:	add	x19, x19, #0x28
   10f94:	add	w20, w20, #0x1
   10f98:	cmp	x19, x0
   10f9c:	mov	w0, w20
   10fa0:	b.eq	11000 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2f8>  // b.none
   10fa4:	ldr	x1, [sp, #104]
   10fa8:	cmp	x1, x0
   10fac:	b.hi	10e48 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x140>  // b.pmore
   10fb0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10fb4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10fb8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10fbc:	add	x3, x3, #0x0
   10fc0:	add	x1, x1, #0x0
   10fc4:	add	x0, x0, #0x0
   10fc8:	mov	w2, #0xfa                  	// #250
   10fcc:	bl	0 <__assert_fail>
   10fd0:	mov	x0, x20
   10fd4:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
   10fd8:	ldrb	w0, [x20, #18]
   10fdc:	ldr	x19, [x20, #88]
   10fe0:	tbz	w0, #0, 1127c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x574>
   10fe4:	mov	x0, x20
   10fe8:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
   10fec:	ldp	x24, x0, [x20, #88]
   10ff0:	b	10e0c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x104>
   10ff4:	ldr	x0, [sp, #120]
   10ff8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   10ffc:	b	10e78 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x170>
   11000:	mov	w1, #0x30                  	// #48
   11004:	ldp	x25, x26, [sp, #64]
   11008:	umaddl	x1, w20, w1, x21
   1100c:	ldp	x27, x28, [sp, #80]
   11010:	mov	w3, #0x0                   	// #0
   11014:	ldr	x0, [sp, #104]
   11018:	add	x23, x0, x0, lsl #1
   1101c:	add	x0, x22, #0x50
   11020:	add	x2, x21, x23, lsl #4
   11024:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11028:	ldp	x19, x20, [sp, #16]
   1102c:	ldp	x21, x22, [sp, #32]
   11030:	ldp	x23, x24, [sp, #48]
   11034:	ldp	x29, x30, [sp], #224
   11038:	ret
   1103c:	ldr	x3, [sp, #104]
   11040:	add	x22, sp, #0x80
   11044:	mov	x0, x19
   11048:	mov	x2, x21
   1104c:	mov	x8, x22
   11050:	mov	x1, x20
   11054:	bl	0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
   11058:	ldr	x0, [x20, #24]
   1105c:	cbz	x0, 112b0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5a8>
   11060:	ldrb	w1, [x0, #8]
   11064:	cmp	w1, #0xc
   11068:	b.ne	1121c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x514>  // b.any
   1106c:	ldr	x2, [x0, #16]
   11070:	add	x20, sp, #0xb0
   11074:	mov	x1, x22
   11078:	mov	x0, x20
   1107c:	ldr	x21, [x2]
   11080:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11084:	mov	x2, x20
   11088:	mov	x0, x19
   1108c:	mov	x1, x21
   11090:	bl	d4a0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
   11094:	mov	x0, x20
   11098:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1109c:	mov	x0, x22
   110a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   110a4:	ldp	x19, x20, [sp, #16]
   110a8:	ldp	x21, x22, [sp, #32]
   110ac:	ldp	x23, x24, [sp, #48]
   110b0:	ldp	x29, x30, [sp], #224
   110b4:	ret
   110b8:	sub	x0, x22, #0x68
   110bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   110c0:	ldur	x2, [x22, #-104]
   110c4:	and	x1, x2, #0xfffffffffffffff8
   110c8:	ubfx	x2, x2, #1, #2
   110cc:	cmp	x2, #0x1
   110d0:	b.eq	11180 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x478>  // b.none
   110d4:	cmp	x2, #0x2
   110d8:	b.eq	11148 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x440>  // b.none
   110dc:	cbz	x1, 1120c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x504>
   110e0:	ldrb	w2, [x1, #16]
   110e4:	cmp	w2, #0x1d
   110e8:	b.ne	111e0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4d8>  // b.any
   110ec:	ldr	w2, [x1, #20]
   110f0:	mov	w3, #0x18                  	// #24
   110f4:	stp	x23, x24, [sp, #48]
   110f8:	ubfx	x2, x2, #0, #28
   110fc:	umsubl	x1, w2, w3, x1
   11100:	sub	x0, x0, x1
   11104:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11108:	movk	x1, #0xaaab
   1110c:	asr	x0, x0, #3
   11110:	mul	w0, w0, w1
   11114:	ldr	x1, [sp, #104]
   11118:	cmp	x0, x1
   1111c:	b.ne	111b8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b0>  // b.any
   11120:	ldr	x22, [x19, #704]
   11124:	add	x0, x19, #0x2b8
   11128:	ldr	x1, [x0, #16]
   1112c:	cmp	x1, x22
   11130:	b.ne	10d58 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x50>  // b.any
   11134:	mov	x1, x22
   11138:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1113c:	ldr	x24, [x19, #704]
   11140:	sub	x22, x24, #0x80
   11144:	b	10d94 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8c>
   11148:	cbz	x1, 11234 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x52c>
   1114c:	ldrb	w2, [x1, #16]
   11150:	cmp	w2, #0x23
   11154:	b.eq	110ec <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3e4>  // b.none
   11158:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1115c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11160:	add	x3, x3, #0x0
   11164:	stp	x23, x24, [sp, #48]
   11168:	stp	x25, x26, [sp, #64]
   1116c:	stp	x27, x28, [sp, #80]
   11170:	b	111f8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4f0>
   11174:	add	x0, x19, #0x2b8
   11178:	stp	x23, x24, [sp, #48]
   1117c:	b	10d4c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x44>
   11180:	cbz	x1, 11260 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x558>
   11184:	ldrb	w2, [x1, #16]
   11188:	cmp	w2, #0x50
   1118c:	b.eq	110ec <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3e4>  // b.none
   11190:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11194:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11198:	add	x3, x3, #0x0
   1119c:	stp	x23, x24, [sp, #48]
   111a0:	stp	x25, x26, [sp, #64]
   111a4:	stp	x27, x28, [sp, #80]
   111a8:	b	111f8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4f0>
   111ac:	mov	x1, x21
   111b0:	b	11010 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x308>
   111b4:	bl	0 <_ZSt17__throw_bad_allocv>
   111b8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111bc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111c0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111c4:	add	x3, x3, #0x0
   111c8:	add	x1, x1, #0x0
   111cc:	add	x0, x0, #0x0
   111d0:	mov	w2, #0x84c                 	// #2124
   111d4:	stp	x25, x26, [sp, #64]
   111d8:	stp	x27, x28, [sp, #80]
   111dc:	bl	0 <__assert_fail>
   111e0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111e4:	add	x3, x3, #0x0
   111e8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111ec:	stp	x23, x24, [sp, #48]
   111f0:	stp	x25, x26, [sp, #64]
   111f4:	stp	x27, x28, [sp, #80]
   111f8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111fc:	add	x1, x1, #0x0
   11200:	add	x0, x0, #0x0
   11204:	mov	w2, #0x108                 	// #264
   11208:	bl	0 <__assert_fail>
   1120c:	stp	x23, x24, [sp, #48]
   11210:	stp	x25, x26, [sp, #64]
   11214:	stp	x27, x28, [sp, #80]
   11218:	bl	118 <_ZN4llvm3isaINS_10InvokeInstEPNS_11InstructionEEEbRKT0_.isra.0.part.0>
   1121c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11220:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11224:	add	x3, x3, #0x0
   11228:	stp	x25, x26, [sp, #64]
   1122c:	stp	x27, x28, [sp, #80]
   11230:	b	111f8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4f0>
   11234:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11238:	add	x3, x3, #0x0
   1123c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11240:	stp	x23, x24, [sp, #48]
   11244:	stp	x25, x26, [sp, #64]
   11248:	stp	x27, x28, [sp, #80]
   1124c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11250:	add	x1, x1, #0x0
   11254:	add	x0, x0, #0x0
   11258:	mov	w2, #0x69                  	// #105
   1125c:	bl	0 <__assert_fail>
   11260:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11264:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11268:	add	x3, x3, #0x0
   1126c:	stp	x23, x24, [sp, #48]
   11270:	stp	x25, x26, [sp, #64]
   11274:	stp	x27, x28, [sp, #80]
   11278:	b	1124c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x544>
   1127c:	mov	x24, x19
   11280:	ldr	x0, [x20, #96]
   11284:	b	10e0c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x104>
   11288:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1128c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11290:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11294:	add	x3, x3, #0x0
   11298:	add	x1, x1, #0x0
   1129c:	add	x0, x0, #0x0
   112a0:	mov	w2, #0x861                 	// #2145
   112a4:	stp	x25, x26, [sp, #64]
   112a8:	stp	x27, x28, [sp, #80]
   112ac:	bl	0 <__assert_fail>
   112b0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112b4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112b8:	add	x3, x3, #0x0
   112bc:	stp	x25, x26, [sp, #64]
   112c0:	stp	x27, x28, [sp, #80]
   112c4:	b	1124c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x544>
   112c8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112d0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112d4:	add	x3, x3, #0x0
   112d8:	add	x1, x1, #0x0
   112dc:	add	x0, x0, #0x0
   112e0:	mov	w2, #0x8b                  	// #139
   112e4:	stp	x25, x26, [sp, #64]
   112e8:	stp	x27, x28, [sp, #80]
   112ec:	bl	0 <__assert_fail>

00000000000112f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>:
   112f0:	stp	x29, x30, [sp, #-208]!
   112f4:	mov	x29, sp
   112f8:	stp	x19, x20, [sp, #16]
   112fc:	stp	x21, x22, [sp, #32]
   11300:	ands	x21, x1, #0xfffffffffffffff8
   11304:	stp	x23, x24, [sp, #48]
   11308:	stp	x25, x26, [sp, #64]
   1130c:	stp	x27, x28, [sp, #80]
   11310:	ldr	x24, [x0, #704]
   11314:	b.eq	1192c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x63c>  // b.none
   11318:	mov	x22, x0
   1131c:	ldrb	w0, [x21, #16]
   11320:	mov	x19, x1
   11324:	mov	w1, #0x23                  	// #35
   11328:	cmp	w0, #0x50
   1132c:	ccmp	w0, #0x1d, #0x4, ne  // ne = any
   11330:	ccmp	w0, w1, #0x4, ne  // ne = any
   11334:	b.ne	1160c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x31c>  // b.any
   11338:	ldur	x20, [x21, #-24]
   1133c:	cbz	x20, 11928 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x638>
   11340:	ldrb	w0, [x20, #16]
   11344:	sub	x23, x24, #0x80
   11348:	cbnz	w0, 113dc <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xec>
   1134c:	mov	x0, x20
   11350:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   11354:	tst	w0, #0xff
   11358:	b.eq	113dc <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xec>  // b.none
   1135c:	ldr	w0, [x20, #36]
   11360:	cmp	w0, #0x106
   11364:	b.eq	115f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>  // b.none
   11368:	b.hi	1162c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x33c>  // b.pmore
   1136c:	cbz	w0, 113dc <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xec>
   11370:	cmp	w0, #0x105
   11374:	b.ne	11860 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x570>  // b.any
   11378:	ubfx	x19, x19, #1, #2
   1137c:	ldrb	w0, [x21, #16]
   11380:	cmp	x19, #0x1
   11384:	b.eq	118ec <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5fc>  // b.none
   11388:	cmp	x19, #0x2
   1138c:	b.eq	118d4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5e4>  // b.none
   11390:	cmp	w0, #0x1d
   11394:	b.ne	1194c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x65c>  // b.any
   11398:	ldr	w0, [x21, #20]
   1139c:	mov	w1, #0x18                  	// #24
   113a0:	add	x19, sp, #0xa0
   113a4:	mov	x2, x23
   113a8:	mov	x8, x19
   113ac:	ubfx	x0, x0, #0, #28
   113b0:	umsubl	x0, w0, w1, x21
   113b4:	ldr	x1, [x0]
   113b8:	mov	x0, x22
   113bc:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   113c0:	mov	x2, x23
   113c4:	mov	x1, x19
   113c8:	mov	x0, x21
   113cc:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   113d0:	mov	x0, x19
   113d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113d8:	b	115f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   113dc:	stur	x19, [x24, #-104]
   113e0:	add	x25, x23, #0x18
   113e4:	mov	x0, x25
   113e8:	stp	xzr, xzr, [sp, #112]
   113ec:	str	xzr, [sp, #128]
   113f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113f4:	ldur	x1, [x24, #-104]
   113f8:	and	x21, x1, #0xfffffffffffffff8
   113fc:	ubfx	x1, x1, #1, #2
   11400:	cmp	x1, #0x1
   11404:	b.eq	11800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x510>  // b.none
   11408:	cmp	x1, #0x2
   1140c:	b.eq	11790 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x4a0>  // b.none
   11410:	cbz	x21, 1178c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x49c>
   11414:	ldrb	w1, [x21, #16]
   11418:	cmp	w1, #0x1d
   1141c:	b.ne	1194c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x65c>  // b.any
   11420:	ldr	w2, [x21, #20]
   11424:	mov	w4, #0x18                  	// #24
   11428:	ldr	x19, [sp, #112]
   1142c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11430:	ubfx	x2, x2, #0, #28
   11434:	movk	x3, #0xaaab
   11438:	ldr	x1, [sp, #128]
   1143c:	umsubl	x2, w2, w4, x21
   11440:	sub	x1, x1, x19
   11444:	sub	x0, x0, x2
   11448:	asr	x1, x1, #4
   1144c:	asr	x0, x0, #3
   11450:	mul	x1, x1, x3
   11454:	mul	w0, w0, w3
   11458:	cmp	x0, x1
   1145c:	b.hi	11698 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3a8>  // b.pmore
   11460:	ldrb	w0, [x21, #16]
   11464:	cmp	w0, #0x1d
   11468:	b.ne	1194c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x65c>  // b.any
   1146c:	ldr	w0, [x21, #20]
   11470:	mov	w1, #0x18                  	// #24
   11474:	ubfx	x0, x0, #0, #28
   11478:	umsubl	x21, w0, w1, x21
   1147c:	mov	x0, x25
   11480:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11484:	mov	x26, x0
   11488:	cmp	x0, x21
   1148c:	b.eq	11510 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x220>  // b.none
   11490:	add	x27, sp, #0x70
   11494:	add	x25, sp, #0xa0
   11498:	ldr	x1, [x21]
   1149c:	mov	x8, x25
   114a0:	mov	x2, x23
   114a4:	mov	x0, x22
   114a8:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   114ac:	mov	x1, x25
   114b0:	mov	x0, x27
   114b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   114b8:	ldp	x19, x20, [sp, #184]
   114bc:	cmp	x19, x20
   114c0:	b.eq	114e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1f0>  // b.none
   114c4:	nop
   114c8:	mov	x0, x19
   114cc:	add	x19, x19, #0x30
   114d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   114d4:	cmp	x20, x19
   114d8:	b.ne	114c8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1d8>  // b.any
   114dc:	ldr	x20, [sp, #184]
   114e0:	cbz	x20, 114ec <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1fc>
   114e4:	mov	x0, x20
   114e8:	bl	0 <_ZdlPv>
   114ec:	ldr	w1, [sp, #176]
   114f0:	cmp	w1, #0x40
   114f4:	b.ls	11504 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x214>  // b.plast
   114f8:	ldr	x0, [sp, #168]
   114fc:	cbz	x0, 11504 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x214>
   11500:	bl	0 <_ZdaPv>
   11504:	add	x21, x21, #0x18
   11508:	cmp	x26, x21
   1150c:	b.ne	11498 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1a8>  // b.any
   11510:	ldur	x0, [x24, #-104]
   11514:	ands	x0, x0, #0xfffffffffffffff8
   11518:	b.eq	1192c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x63c>  // b.none
   1151c:	ldrb	w1, [x0, #16]
   11520:	mov	w2, #0x23                  	// #35
   11524:	cmp	w1, #0x50
   11528:	ccmp	w1, #0x1d, #0x4, ne  // ne = any
   1152c:	ccmp	w1, w2, #0x4, ne  // ne = any
   11530:	b.ne	1160c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x31c>  // b.any
   11534:	ldur	x1, [x0, #-24]
   11538:	add	x19, sp, #0xa0
   1153c:	mov	x8, x19
   11540:	mov	x0, x22
   11544:	mov	x2, x23
   11548:	bl	59c0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   1154c:	ldp	x2, x4, [sp, #112]
   11550:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11554:	movk	x3, #0xaaab
   11558:	mov	x0, x22
   1155c:	ldr	x1, [sp, #160]
   11560:	sub	x4, x4, x2
   11564:	asr	x4, x4, #4
   11568:	mul	x3, x4, x3
   1156c:	bl	10d08 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
   11570:	mov	x0, x19
   11574:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11578:	ldp	x19, x22, [sp, #112]
   1157c:	cmp	x19, x22
   11580:	b.eq	115e4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2f4>  // b.none
   11584:	nop
   11588:	ldp	x20, x21, [x19, #24]
   1158c:	cmp	x20, x21
   11590:	b.eq	115b0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2c0>  // b.none
   11594:	nop
   11598:	mov	x0, x20
   1159c:	add	x20, x20, #0x30
   115a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   115a4:	cmp	x21, x20
   115a8:	b.ne	11598 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2a8>  // b.any
   115ac:	ldr	x21, [x19, #24]
   115b0:	cbz	x21, 115bc <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2cc>
   115b4:	mov	x0, x21
   115b8:	bl	0 <_ZdlPv>
   115bc:	ldr	w0, [x19, #16]
   115c0:	cmp	w0, #0x40
   115c4:	b.ls	115d4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2e4>  // b.plast
   115c8:	ldr	x0, [x19, #8]
   115cc:	cbz	x0, 115d4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2e4>
   115d0:	bl	0 <_ZdaPv>
   115d4:	add	x19, x19, #0x30
   115d8:	cmp	x22, x19
   115dc:	b.ne	11588 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x298>  // b.any
   115e0:	ldr	x22, [sp, #112]
   115e4:	cbz	x22, 115f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   115e8:	mov	x0, x22
   115ec:	bl	0 <_ZdlPv>
   115f0:	ldp	x19, x20, [sp, #16]
   115f4:	ldp	x21, x22, [sp, #32]
   115f8:	ldp	x23, x24, [sp, #48]
   115fc:	ldp	x25, x26, [sp, #64]
   11600:	ldp	x27, x28, [sp, #80]
   11604:	ldp	x29, x30, [sp], #208
   11608:	ret
   1160c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11610:	add	x3, x3, #0x0
   11614:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11618:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1161c:	add	x1, x1, #0x0
   11620:	add	x0, x0, #0x0
   11624:	mov	w2, #0x108                 	// #264
   11628:	bl	0 <__assert_fail>
   1162c:	cmp	w0, #0x107
   11630:	b.ne	11860 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x570>  // b.any
   11634:	ldr	x3, [x22, #696]
   11638:	add	x19, sp, #0xa0
   1163c:	ldr	x2, [x22, #704]
   11640:	add	x20, sp, #0x70
   11644:	mov	x1, x20
   11648:	mov	x0, x19
   1164c:	sub	x2, x2, x3
   11650:	mov	w3, #0x1                   	// #1
   11654:	str	xzr, [sp, #120]
   11658:	asr	x2, x2, #7
   1165c:	str	w3, [sp, #128]
   11660:	sub	w2, w2, #0x1
   11664:	stp	w2, wzr, [sp, #112]
   11668:	stp	xzr, xzr, [sp, #136]
   1166c:	str	xzr, [sp, #152]
   11670:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11674:	mov	x2, x23
   11678:	mov	x1, x19
   1167c:	mov	x0, x21
   11680:	bl	9e18 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   11684:	mov	x0, x19
   11688:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1168c:	mov	x0, x20
   11690:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11694:	b	115f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   11698:	ldr	x21, [sp, #120]
   1169c:	add	x26, x0, x0, lsl #1
   116a0:	sub	x1, x21, x19
   116a4:	str	x1, [sp, #104]
   116a8:	lsl	x26, x26, #4
   116ac:	cbz	x0, 117f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x500>
   116b0:	mov	x0, x26
   116b4:	bl	0 <_Znwm>
   116b8:	cmp	x21, x19
   116bc:	mov	x27, x0
   116c0:	b.eq	116e4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3f4>  // b.none
   116c4:	mov	x20, x27
   116c8:	mov	x1, x19
   116cc:	mov	x0, x20
   116d0:	add	x19, x19, #0x30
   116d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   116d8:	cmp	x21, x19
   116dc:	add	x20, x20, #0x30
   116e0:	b.ne	116c8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3d8>  // b.any
   116e4:	ldp	x28, x21, [sp, #112]
   116e8:	cmp	x28, x21
   116ec:	b.eq	1174c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x45c>  // b.none
   116f0:	ldp	x19, x20, [x28, #24]
   116f4:	cmp	x19, x20
   116f8:	b.eq	11718 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x428>  // b.none
   116fc:	nop
   11700:	mov	x0, x19
   11704:	add	x19, x19, #0x30
   11708:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1170c:	cmp	x20, x19
   11710:	b.ne	11700 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x410>  // b.any
   11714:	ldr	x20, [x28, #24]
   11718:	cbz	x20, 11724 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x434>
   1171c:	mov	x0, x20
   11720:	bl	0 <_ZdlPv>
   11724:	ldr	w0, [x28, #16]
   11728:	cmp	w0, #0x40
   1172c:	b.ls	1173c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x44c>  // b.plast
   11730:	ldr	x0, [x28, #8]
   11734:	cbz	x0, 1173c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x44c>
   11738:	bl	0 <_ZdaPv>
   1173c:	add	x28, x28, #0x30
   11740:	cmp	x21, x28
   11744:	b.ne	116f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x400>  // b.any
   11748:	ldr	x21, [sp, #112]
   1174c:	cbz	x21, 11758 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x468>
   11750:	mov	x0, x21
   11754:	bl	0 <_ZdlPv>
   11758:	ldur	x0, [x24, #-104]
   1175c:	add	x26, x27, x26
   11760:	ldr	x1, [sp, #104]
   11764:	str	x26, [sp, #128]
   11768:	and	x21, x0, #0xfffffffffffffff8
   1176c:	ubfx	x0, x0, #1, #2
   11770:	add	x28, x27, x1
   11774:	stp	x27, x28, [sp, #112]
   11778:	cmp	x0, #0x1
   1177c:	b.eq	11904 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x614>  // b.none
   11780:	cmp	x0, #0x2
   11784:	b.eq	118a4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5b4>  // b.none
   11788:	cbnz	x21, 11460 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x170>
   1178c:	bl	118 <_ZN4llvm3isaINS_10InvokeInstEPNS_11InstructionEEEbRKT0_.isra.0.part.0>
   11790:	cbz	x21, 118a8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5b8>
   11794:	ldrb	w1, [x21, #16]
   11798:	cmp	w1, #0x23
   1179c:	b.ne	118dc <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5ec>  // b.any
   117a0:	ldr	w1, [x21, #20]
   117a4:	mov	w4, #0x18                  	// #24
   117a8:	ldr	x19, [sp, #112]
   117ac:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   117b0:	ubfx	x1, x1, #0, #28
   117b4:	movk	x3, #0xaaab
   117b8:	ldr	x2, [sp, #128]
   117bc:	umsubl	x1, w1, w4, x21
   117c0:	sub	x2, x2, x19
   117c4:	sub	x0, x0, x1
   117c8:	asr	x1, x2, #4
   117cc:	asr	x0, x0, #3
   117d0:	mul	x1, x1, x3
   117d4:	mul	w0, w0, w3
   117d8:	cmp	x1, x0
   117dc:	b.cc	11698 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3a8>  // b.lo, b.ul, b.last
   117e0:	ldrb	w0, [x21, #16]
   117e4:	cmp	w0, #0x23
   117e8:	b.eq	1146c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x17c>  // b.none
   117ec:	b	118dc <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5ec>
   117f0:	cmp	x21, x19
   117f4:	mov	x27, #0x0                   	// #0
   117f8:	b.ne	116c4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3d4>  // b.any
   117fc:	b	1174c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x45c>
   11800:	cbz	x21, 11908 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x618>
   11804:	ldrb	w1, [x21, #16]
   11808:	cmp	w1, #0x50
   1180c:	b.ne	118f4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>  // b.any
   11810:	ldr	w1, [x21, #20]
   11814:	mov	w4, #0x18                  	// #24
   11818:	ldr	x19, [sp, #112]
   1181c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11820:	ubfx	x1, x1, #0, #28
   11824:	movk	x3, #0xaaab
   11828:	ldr	x2, [sp, #128]
   1182c:	umsubl	x1, w1, w4, x21
   11830:	sub	x2, x2, x19
   11834:	sub	x0, x0, x1
   11838:	asr	x1, x2, #4
   1183c:	asr	x0, x0, #3
   11840:	mul	x1, x1, x3
   11844:	mul	w0, w0, w3
   11848:	cmp	x0, x1
   1184c:	b.hi	11698 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3a8>  // b.pmore
   11850:	ldrb	w0, [x21, #16]
   11854:	cmp	w0, #0x50
   11858:	b.eq	1146c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x17c>  // b.none
   1185c:	b	118f4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>
   11860:	ldr	x19, [x21, #40]
   11864:	add	x1, x21, #0x18
   11868:	ldrb	w2, [x21, #16]
   1186c:	ldr	x0, [x22, #688]
   11870:	ldr	x3, [x19, #48]
   11874:	cmp	x3, x1
   11878:	b.eq	118b8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5c8>  // b.none
   1187c:	ldr	x19, [x21, #24]
   11880:	cmp	w2, #0x50
   11884:	and	x19, x19, #0xfffffffffffffff8
   11888:	b.ne	118f4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>  // b.any
   1188c:	mov	x1, x21
   11890:	bl	0 <_ZN4llvm17IntrinsicLowering18LowerIntrinsicCallEPNS_8CallInstE>
   11894:	stur	x19, [x24, #-112]
   11898:	ldr	x0, [x19, #8]
   1189c:	stur	x0, [x24, #-112]
   118a0:	b	115f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   118a4:	cbnz	x21, 117e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x4f0>
   118a8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   118ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   118b0:	add	x3, x3, #0x0
   118b4:	b	11914 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x624>
   118b8:	cmp	w2, #0x50
   118bc:	b.ne	118f4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>  // b.any
   118c0:	mov	x1, x21
   118c4:	bl	0 <_ZN4llvm17IntrinsicLowering18LowerIntrinsicCallEPNS_8CallInstE>
   118c8:	ldr	x0, [x19, #48]
   118cc:	stur	x0, [x24, #-112]
   118d0:	b	115f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   118d4:	cmp	w0, #0x23
   118d8:	b.eq	11398 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xa8>  // b.none
   118dc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   118e0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   118e4:	add	x3, x3, #0x0
   118e8:	b	11618 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x328>
   118ec:	cmp	w0, #0x50
   118f0:	b.eq	11398 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xa8>  // b.none
   118f4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   118f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   118fc:	add	x3, x3, #0x0
   11900:	b	11618 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x328>
   11904:	cbnz	x21, 11850 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x560>
   11908:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1190c:	add	x3, x3, #0x0
   11910:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11914:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11918:	add	x1, x1, #0x0
   1191c:	add	x0, x0, #0x0
   11920:	mov	w2, #0x69                  	// #105
   11924:	bl	0 <__assert_fail>
   11928:	bl	78 <_ZN4llvm3isaINS_8FunctionEPNS_5ValueEEEbRKT0_.isra.0.part.0>
   1192c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11930:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11934:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11938:	add	x3, x3, #0x0
   1193c:	add	x1, x1, #0x0
   11940:	add	x0, x0, #0x0
   11944:	mov	w2, #0x69                  	// #105
   11948:	bl	0 <__assert_fail>
   1194c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11950:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11954:	add	x3, x3, #0x0
   11958:	b	11618 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x328>
   1195c:	nop

0000000000011960 <_ZN4llvm11Interpreter3runEv>:
   11960:	stp	x29, x30, [sp, #-64]!
   11964:	mov	x29, sp
   11968:	stp	x19, x20, [sp, #16]
   1196c:	mov	x20, x0
   11970:	ldr	x0, [x0, #696]
   11974:	ldr	x2, [x20, #704]
   11978:	cmp	x0, x2
   1197c:	b.eq	11ab8 <_ZN4llvm11Interpreter3runEv+0x158>  // b.none
   11980:	stp	x21, x22, [sp, #32]
   11984:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
   11988:	adrp	x21, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1198c:	add	x21, x21, #0x0
   11990:	stp	x23, x24, [sp, #48]
   11994:	add	x23, x21, #0xc8
   11998:	ldr	x22, [x22]
   1199c:	b	119c4 <_ZN4llvm11Interpreter3runEv+0x64>
   119a0:	ldrb	w0, [x22]
   119a4:	cbnz	w0, 11a10 <_ZN4llvm11Interpreter3runEv+0xb0>
   119a8:	mov	x0, x20
   119ac:	mov	x1, x19
   119b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   119b4:	ldr	x0, [x20, #696]
   119b8:	ldr	x2, [x20, #704]
   119bc:	cmp	x2, x0
   119c0:	b.eq	11ab0 <_ZN4llvm11Interpreter3runEv+0x150>  // b.none
   119c4:	ldur	x1, [x2, #-112]
   119c8:	ldp	x0, x3, [x1]
   119cc:	stur	x3, [x2, #-112]
   119d0:	tst	w0, #0x4
   119d4:	b.ne	11b0c <_ZN4llvm11Interpreter3runEv+0x1ac>  // b.any
   119d8:	sub	x19, x1, #0x18
   119dc:	add	x0, x21, #0xe0
   119e0:	ldxr	w1, [x0]
   119e4:	add	w1, w1, #0x1
   119e8:	stxr	w2, w1, [x0]
   119ec:	cbnz	w2, 119e0 <_ZN4llvm11Interpreter3runEv+0x80>
   119f0:	add	x0, x21, #0xe4
   119f4:	ldarb	w0, [x0]
   119f8:	tst	w0, #0xff
   119fc:	b.ne	119a0 <_ZN4llvm11Interpreter3runEv+0x40>  // b.any
   11a00:	mov	x0, x23
   11a04:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
   11a08:	ldrb	w0, [x22]
   11a0c:	cbz	w0, 119a8 <_ZN4llvm11Interpreter3runEv+0x48>
   11a10:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a14:	add	x0, x0, #0x0
   11a18:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   11a1c:	tst	w0, #0xff
   11a20:	b.eq	119a8 <_ZN4llvm11Interpreter3runEv+0x48>  // b.none
   11a24:	bl	0 <_ZN4llvm4dbgsEv>
   11a28:	mov	x24, x0
   11a2c:	ldp	x1, x2, [x0, #16]
   11a30:	sub	x1, x1, x2
   11a34:	cmp	x1, #0x13
   11a38:	b.ls	11ac4 <_ZN4llvm11Interpreter3runEv+0x164>  // b.plast
   11a3c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a40:	add	x3, x3, #0x0
   11a44:	ldp	x0, x1, [x3]
   11a48:	stp	x0, x1, [x2]
   11a4c:	ldr	w0, [x3, #16]
   11a50:	str	w0, [x2, #16]
   11a54:	mov	x1, x24
   11a58:	mov	w2, #0x0                   	// #0
   11a5c:	ldr	x0, [x24, #24]
   11a60:	add	x0, x0, #0x14
   11a64:	str	x0, [x24, #24]
   11a68:	mov	x0, x19
   11a6c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
   11a70:	ldp	x1, x0, [x24, #16]
   11a74:	cmp	x1, x0
   11a78:	b.eq	11af4 <_ZN4llvm11Interpreter3runEv+0x194>  // b.none
   11a7c:	mov	w1, #0xa                   	// #10
   11a80:	strb	w1, [x0]
   11a84:	mov	x1, x19
   11a88:	ldr	x0, [x24, #24]
   11a8c:	add	x0, x0, #0x1
   11a90:	str	x0, [x24, #24]
   11a94:	mov	x0, x20
   11a98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a9c:	ldr	x0, [x20, #696]
   11aa0:	ldr	x2, [x20, #704]
   11aa4:	cmp	x2, x0
   11aa8:	b.ne	119c4 <_ZN4llvm11Interpreter3runEv+0x64>  // b.any
   11aac:	nop
   11ab0:	ldp	x21, x22, [sp, #32]
   11ab4:	ldp	x23, x24, [sp, #48]
   11ab8:	ldp	x19, x20, [sp, #16]
   11abc:	ldp	x29, x30, [sp], #64
   11ac0:	ret
   11ac4:	mov	x2, #0x14                  	// #20
   11ac8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11acc:	add	x1, x1, #0x0
   11ad0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11ad4:	mov	x24, x0
   11ad8:	mov	w2, #0x0                   	// #0
   11adc:	mov	x1, x24
   11ae0:	mov	x0, x19
   11ae4:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
   11ae8:	ldp	x1, x0, [x24, #16]
   11aec:	cmp	x1, x0
   11af0:	b.ne	11a7c <_ZN4llvm11Interpreter3runEv+0x11c>  // b.any
   11af4:	mov	x0, x24
   11af8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11afc:	mov	x2, #0x1                   	// #1
   11b00:	add	x1, x1, #0x0
   11b04:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11b08:	b	119a8 <_ZN4llvm11Interpreter3runEv+0x48>
   11b0c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11b10:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11b14:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11b18:	add	x3, x3, #0x0
   11b1c:	add	x1, x1, #0x0
   11b20:	add	x0, x0, #0x0
   11b24:	mov	w2, #0x8b                  	// #139
   11b28:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x2, x0
   4:	ldrb	w0, [x1, #9]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x2, #9]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldrb	w0, [x1, #8]
  18:	ldrb	w2, [x2, #8]
  1c:	cmp	w2, w0
  20:	cset	w0, ne  // ne = any
  24:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x19, x19, #0x50
  50:	cmp	x0, x19
  54:	b.eq	64 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x64>  // b.none
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <free>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w1, [x0, #8]
   4:	mov	x2, #0xffffffffffffffff    	// #-1
   8:	ldr	x3, [x0]
   c:	neg	w4, w1
  10:	cmp	w1, #0x40
  14:	lsr	x2, x2, x4
  18:	b.hi	28 <_ZN4llvm5APInt15clearUnusedBitsEv+0x28>  // b.pmore
  1c:	and	x2, x3, x2
  20:	str	x2, [x0]
  24:	ret
  28:	mov	w1, w1
  2c:	add	x1, x1, #0x3f
  30:	lsr	x1, x1, #6
  34:	sub	w1, w1, #0x1
  38:	ldr	x4, [x3, x1, lsl #3]
  3c:	and	x2, x4, x2
  40:	str	x2, [x3, x1, lsl #3]
  44:	ret

Disassembly of section .text._ZN4llvm5APIntaSERKS0_:

0000000000000000 <_ZN4llvm5APIntaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #8]
  14:	cmp	w0, #0x40
  18:	b.hi	28 <_ZN4llvm5APIntaSERKS0_+0x28>  // b.pmore
  1c:	ldr	w0, [x1, #8]
  20:	cmp	w0, #0x40
  24:	b.ls	40 <_ZN4llvm5APIntaSERKS0_+0x40>  // b.plast
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldr	x2, [x1]
  44:	neg	w3, w0
  48:	mov	x1, #0xffffffffffffffff    	// #-1
  4c:	str	w0, [x19, #8]
  50:	lsr	x0, x1, x3
  54:	and	x0, x0, x2
  58:	str	x0, [x19]
  5c:	mov	x0, x19
  60:	ldr	x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZN4llvm5APIntaSEOS0_:

0000000000000000 <_ZN4llvm5APIntaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	b.eq	58 <_ZN4llvm5APIntaSEOS0_+0x58>  // b.none
  14:	mov	x19, x0
  18:	ldr	w0, [x0, #8]
  1c:	mov	x20, x1
  20:	cmp	w0, #0x40
  24:	b.ls	34 <_ZN4llvm5APIntaSEOS0_+0x34>  // b.plast
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 34 <_ZN4llvm5APIntaSEOS0_+0x34>
  30:	bl	0 <_ZdaPv>
  34:	ldr	x0, [x20]
  38:	str	x0, [x19]
  3c:	mov	x0, x19
  40:	ldr	w1, [x20, #8]
  44:	str	w1, [x19, #8]
  48:	str	wzr, [x20, #8]
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x3, 0 <_ZN4llvm5APIntaSEOS0_>
  5c:	adrp	x1, 0 <_ZN4llvm5APIntaSEOS0_>
  60:	adrp	x0, 0 <_ZN4llvm5APIntaSEOS0_>
  64:	add	x3, x3, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x0, x0, #0x0
  70:	mov	w2, #0x302                 	// #770
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	cmp	w20, #0x40
  18:	b.ls	40 <_ZNK4llvm5APInt12getZExtValueEv+0x40>  // b.plast
  1c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  20:	sub	w20, w20, w0
  24:	cmp	w20, #0x40
  28:	b.hi	50 <_ZNK4llvm5APInt12getZExtValueEv+0x50>  // b.pmore
  2c:	ldr	x0, [x19]
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ldr	x0, [x0]
  3c:	ret
  40:	ldr	x0, [x0]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  54:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  58:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  5c:	add	x3, x3, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x0, x0, #0x0
  68:	mov	w2, #0x657                 	// #1623
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	sub	w1, w2, #0x1
  18:	and	w1, w1, #0xff
  1c:	stp	x21, x22, [sp, #32]
  20:	cmp	w1, #0x5
  24:	mov	x21, x0
  28:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
  2c:	and	w0, w2, #0xfffffffd
  30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  34:	b.ne	1e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1e4>  // b.any
  38:	cmp	w2, #0x9
  3c:	b.eq	94 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x94>  // b.none
  40:	b.hi	a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xa0>  // b.pmore
  44:	cmp	w2, #0x4
  48:	b.eq	14c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x14c>  // b.none
  4c:	b.ls	84 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x84>  // b.plast
  50:	cmp	w2, #0x6
  54:	b.ls	134 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x134>  // b.plast
  58:	cmp	w2, #0x7
  5c:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  60:	mov	w1, #0x0                   	// #0
  64:	mov	x0, x21
  68:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  6c:	lsl	w0, w0, #3
  70:	mov	x1, #0x0                   	// #0
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	cmp	w2, #0x2
  88:	b.eq	140 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x140>  // b.none
  8c:	cmp	w2, #0x3
  90:	b.ne	f4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf4>  // b.any
  94:	mov	x0, #0x40                  	// #64
  98:	mov	x1, #0x0                   	// #0
  9c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  a0:	cmp	w2, #0xe
  a4:	b.eq	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.none
  a8:	b.ls	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>  // b.plast
  ac:	cmp	w2, #0xf
  b0:	b.eq	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>  // b.none
  b4:	cmp	w2, #0x10
  b8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  bc:	ldr	x20, [x19, #32]
  c0:	mov	x0, #0xffffffff            	// #4294967295
  c4:	cmp	x20, x0
  c8:	b.hi	250 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x250>  // b.pmore
  cc:	ldr	x1, [x19, #24]
  d0:	mov	x0, x21
  d4:	ldrb	w19, [x19, #40]
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	294 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x294>  // b.any
  e4:	mov	x1, #0x0                   	// #0
  e8:	mul	x0, x20, x0
  ec:	bfxil	x1, x19, #0, #8
  f0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  f4:	cmp	w2, #0x1
  f8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  fc:	mov	x0, #0x10                  	// #16
 100:	mov	x1, #0x0                   	// #0
 104:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 108:	cmp	w2, #0xb
 10c:	b.eq	158 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x158>  // b.none
 110:	cmp	w2, #0xd
 114:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
 118:	mov	x1, x19
 11c:	mov	x0, x21
 120:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 124:	ldr	x0, [x0]
 128:	mov	x1, #0x0                   	// #0
 12c:	lsl	x0, x0, #3
 130:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 134:	mov	x0, #0x80                  	// #128
 138:	mov	x1, #0x0                   	// #0
 13c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 140:	mov	x0, #0x20                  	// #32
 144:	mov	x1, #0x0                   	// #0
 148:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 14c:	mov	x0, #0x50                  	// #80
 150:	mov	x1, #0x0                   	// #0
 154:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 158:	ldr	w0, [x19, #8]
 15c:	mov	x1, #0x0                   	// #0
 160:	lsr	w0, w0, #8
 164:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 168:	ldr	x22, [x19, #24]
 16c:	mov	x0, x21
 170:	str	x23, [sp, #48]
 174:	mov	x1, x22
 178:	ldr	x23, [x19, #32]
 17c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 180:	add	x19, x0, #0x7
 184:	and	w20, w1, #0xff
 188:	mov	x0, x21
 18c:	mov	x1, x22
 190:	lsr	x19, x19, #3
 194:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 198:	mov	w2, w0
 19c:	cbz	w0, 274 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x274>
 1a0:	sub	x0, x19, #0x1
 1a4:	mov	x1, #0x0                   	// #0
 1a8:	add	x0, x0, x2
 1ac:	bfxil	x1, x20, #0, #8
 1b0:	udiv	x0, x0, x2
 1b4:	mul	x0, x0, x2
 1b8:	mul	x0, x0, x23
 1bc:	ldr	x23, [sp, #48]
 1c0:	lsl	x0, x0, #3
 1c4:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1c8:	ldr	w1, [x19, #8]
 1cc:	mov	x0, x21
 1d0:	lsr	w1, w1, #8
 1d4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 1d8:	mov	x1, #0x0                   	// #0
 1dc:	lsl	w0, w0, #3
 1e0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1e4:	sub	w0, w2, #0xd
 1e8:	cmp	w0, #0x1
 1ec:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 1f0:	b.ne	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.any
 1f4:	mov	x0, x19
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 200:	tst	w0, #0xff
 204:	b.eq	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.none
 208:	ldrb	w2, [x19, #8]
 20c:	b	38 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x38>
 210:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x3, x3, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	w2, #0x271                 	// #625
 22c:	str	x23, [sp, #48]
 230:	bl	0 <__assert_fail>
 234:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 238:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 23c:	add	x1, x1, #0x0
 240:	add	x0, x0, #0x0
 244:	mov	w2, #0x298                 	// #664
 248:	str	x23, [sp, #48]
 24c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 250:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 254:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 258:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 25c:	add	x3, x3, #0x0
 260:	add	x1, x1, #0x0
 264:	add	x0, x0, #0x0
 268:	mov	w2, #0x220                 	// #544
 26c:	str	x23, [sp, #48]
 270:	bl	0 <__assert_fail>
 274:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 278:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 27c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 280:	add	x3, x3, #0x0
 284:	add	x1, x1, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	w2, #0xc7                  	// #199
 290:	bl	0 <__assert_fail>
 294:	str	x23, [sp, #48]
 298:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>

Disassembly of section .text._ZN4llvm12GenericValueD2Ev:

0000000000000000 <_ZN4llvm12GenericValueD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x20, [x0, #24]
  14:	str	x21, [sp, #32]
  18:	ldr	x21, [x0, #32]
  1c:	cmp	x20, x21
  20:	b.eq	40 <_ZN4llvm12GenericValueD1Ev+0x40>  // b.none
  24:	nop
  28:	mov	x0, x20
  2c:	add	x20, x20, #0x30
  30:	bl	0 <_ZN4llvm12GenericValueD1Ev>
  34:	cmp	x21, x20
  38:	b.ne	28 <_ZN4llvm12GenericValueD1Ev+0x28>  // b.any
  3c:	ldr	x21, [x19, #24]
  40:	cbz	x21, 4c <_ZN4llvm12GenericValueD1Ev+0x4c>
  44:	mov	x0, x21
  48:	bl	0 <_ZdlPv>
  4c:	ldr	w0, [x19, #16]
  50:	cmp	w0, #0x40
  54:	b.ls	70 <_ZN4llvm12GenericValueD1Ev+0x70>  // b.plast
  58:	ldr	x0, [x19, #8]
  5c:	cbz	x0, 70 <_ZN4llvm12GenericValueD1Ev+0x70>
  60:	ldp	x19, x20, [sp, #16]
  64:	ldr	x21, [sp, #32]
  68:	ldp	x29, x30, [sp], #48
  6c:	b	0 <_ZdaPv>
  70:	ldp	x19, x20, [sp, #16]
  74:	ldr	x21, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	ubfx	x2, x2, #0, #28
  10:	cmp	w1, w2
  14:	b.cs	44 <_ZNK4llvm12ConstantExpr10getOperandEj+0x44>  // b.hs, b.nlast
  18:	mov	w1, w1
  1c:	mov	w2, w2
  20:	sub	x1, x1, x2
  24:	add	x1, x1, x1, lsl #1
  28:	ldr	x0, [x0, x1, lsl #3]
  2c:	cbz	x0, 3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>
  30:	ldrb	w1, [x0, #16]
  34:	cmp	w1, #0x10
  38:	b.hi	64 <_ZNK4llvm12ConstantExpr10getOperandEj+0x64>  // b.pmore
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  48:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  4c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  50:	add	x3, x3, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x0, x0, #0x0
  5c:	mov	w2, #0x4fa                 	// #1274
  60:	bl	0 <__assert_fail>
  64:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  68:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  6c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  70:	add	x3, x3, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x0, x0, #0x0
  7c:	mov	w2, #0x134                 	// #308
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w2, [x1, #8]
  28:	str	w2, [x0, #8]
  2c:	cmp	w2, #0x40
  30:	b.hi	10c <_ZN4llvm12GenericValueC1ERKS0_+0x10c>  // b.pmore
  34:	ldr	x0, [x19, #8]
  38:	str	x0, [x22, #8]
  3c:	ldp	x0, x21, [x19, #24]
  40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x1, #0xaaab
  48:	add	x23, x22, #0x18
  4c:	str	xzr, [x22, #24]
  50:	mov	x20, #0x0                   	// #0
  54:	stp	xzr, xzr, [x23, #8]
  58:	sub	x21, x21, x0
  5c:	asr	x0, x21, #4
  60:	mul	x0, x0, x1
  64:	cbz	x0, 84 <_ZN4llvm12GenericValueC1ERKS0_+0x84>
  68:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	movk	x1, #0x2aa, lsl #48
  70:	cmp	x0, x1
  74:	b.hi	114 <_ZN4llvm12GenericValueC1ERKS0_+0x114>  // b.pmore
  78:	mov	x0, x21
  7c:	bl	0 <_Znwm>
  80:	mov	x20, x0
  84:	str	x20, [x22, #24]
  88:	add	x21, x20, x21
  8c:	stp	x20, x21, [x23, #8]
  90:	ldp	x24, x19, [x19, #24]
  94:	cmp	x24, x19
  98:	b.eq	f4 <_ZN4llvm12GenericValueC1ERKS0_+0xf4>  // b.none
  9c:	mov	x21, x24
  a0:	mov	x22, x20
  a4:	nop
  a8:	mov	x1, x21
  ac:	mov	x0, x22
  b0:	add	x21, x21, #0x30
  b4:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  b8:	cmp	x19, x21
  bc:	add	x22, x22, #0x30
  c0:	b.ne	a8 <_ZN4llvm12GenericValueC1ERKS0_+0xa8>  // b.any
  c4:	sub	x1, x19, #0x30
  c8:	mov	x19, #0xaaab                	// #43691
  cc:	sub	x1, x1, x24
  d0:	movk	x19, #0xaaaa, lsl #16
  d4:	movk	x19, #0xaaaa, lsl #32
  d8:	lsr	x1, x1, #4
  dc:	movk	x19, #0xaaa, lsl #48
  e0:	mul	x1, x1, x19
  e4:	and	x1, x1, #0xfffffffffffffff
  e8:	add	x1, x1, #0x1
  ec:	add	x1, x1, x1, lsl #1
  f0:	add	x20, x20, x1, lsl #4
  f4:	ldp	x21, x22, [sp, #32]
  f8:	str	x20, [x23, #8]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret
 10c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 110:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
 114:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #8]
  10:	cmp	w1, #0x10
  14:	b.ne	40 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x69                  	// #105
  3c:	bl	0 <__assert_fail>
  40:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  48:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	add	x3, x3, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x0, x0, #0x0
  58:	mov	w2, #0x108                 	// #264
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x19, x22, [x0]
  14:	cmp	x19, x22
  18:	b.eq	88 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x88>  // b.none
  1c:	str	x23, [sp, #48]
  20:	mov	x23, x0
  24:	nop
  28:	ldp	x20, x21, [x19, #24]
  2c:	cmp	x20, x21
  30:	b.eq	50 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x50>  // b.none
  34:	nop
  38:	mov	x0, x20
  3c:	add	x20, x20, #0x30
  40:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  44:	cmp	x21, x20
  48:	b.ne	38 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x38>  // b.any
  4c:	ldr	x21, [x19, #24]
  50:	cbz	x21, 5c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x5c>
  54:	mov	x0, x21
  58:	bl	0 <_ZdlPv>
  5c:	ldr	w1, [x19, #16]
  60:	cmp	w1, #0x40
  64:	b.ls	74 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x74>  // b.plast
  68:	ldr	x0, [x19, #8]
  6c:	cbz	x0, 74 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x74>
  70:	bl	0 <_ZdaPv>
  74:	add	x19, x19, #0x30
  78:	cmp	x22, x19
  7c:	b.ne	28 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x28>  // b.any
  80:	ldr	x22, [x23]
  84:	ldr	x23, [sp, #48]
  88:	cbz	x22, a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0xa0>
  8c:	mov	x0, x22
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x29, x30, [sp], #64
  9c:	b	0 <_ZdlPv>
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC2EPS7_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	tst	x1, #0x7
   8:	mov	x29, sp
   c:	str	xzr, [x0]
  10:	b.ne	2c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_+0x2c>  // b.any
  14:	and	x2, x1, #0xfffffffffffffff9
  18:	orr	x2, x2, #0x2
  1c:	str	x2, [x0]
  20:	cbz	x1, 4c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_+0x4c>
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  30:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  34:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  38:	add	x3, x3, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, x0, #0x0
  44:	mov	w2, #0xb2                  	// #178
  48:	bl	0 <__assert_fail>
  4c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  50:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  54:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  58:	add	x3, x3, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	w2, #0x3f                  	// #63
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x5, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	adrp	x4, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	adrp	x0, 0 <_ZTVN4llvm2cl6parserIbEE>
  1c:	stp	x21, x22, [sp, #32]
  20:	adrp	x9, 0 <_ZN4llvm2cl15GeneralCategoryE>
  24:	adrp	x7, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
  28:	ldr	x6, [x19, #8]
  2c:	adrp	x8, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
  30:	ldr	x4, [x4]
  34:	and	x6, x6, #0x80000000
  38:	ldr	x0, [x0]
  3c:	stp	x6, xzr, [x19, #8]
  40:	add	x12, x19, #0x80
  44:	ldr	x6, [x5]
  48:	add	x14, x19, #0x50
  4c:	ldr	x9, [x9]
  50:	add	x5, x4, #0x10
  54:	ldr	x7, [x7]
  58:	add	x4, x0, #0x10
  5c:	ldr	x8, [x8]
  60:	add	x6, x6, #0x10
  64:	mov	x13, #0x1                   	// #1
  68:	mov	x10, #0x100000001           	// #4294967297
  6c:	str	x6, [x19]
  70:	mov	x22, x2
  74:	stp	xzr, xzr, [x19, #24]
  78:	mov	w2, #0x100                 	// #256
  7c:	mov	x20, x3
  80:	stp	xzr, xzr, [x19, #40]
  84:	mov	x21, x1
  88:	mov	x0, x1
  8c:	stp	xzr, x14, [x19, #56]
  90:	stp	x10, x9, [x19, #72]
  94:	stp	xzr, x12, [x19, #88]
  98:	stp	x12, x13, [x19, #104]
  9c:	str	wzr, [x19, #120]
  a0:	strb	wzr, [x19, #136]
  a4:	str	x5, [x19, #144]
  a8:	strh	w2, [x19, #152]
  ac:	str	x4, [x19, #160]
  b0:	stp	x8, x7, [x19, #184]
  b4:	bl	0 <strlen>
  b8:	mov	x2, x0
  bc:	mov	x1, x21
  c0:	mov	x0, x19
  c4:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  c8:	ldrb	w1, [x19, #10]
  cc:	mov	x0, x19
  d0:	ldr	w3, [x22]
  d4:	ldr	x2, [x20]
  d8:	bfi	w1, w3, #5, #2
  dc:	strb	w1, [x19, #10]
  e0:	ldp	x21, x22, [sp, #32]
  e4:	str	x2, [x19, #32]
  e8:	ldr	x2, [x20, #8]
  ec:	str	x2, [x19, #40]
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x29, x30, [sp], #48
  f8:	b	0 <_ZN4llvm2cl6Option11addArgumentEv>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	19c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x19c>  // b.none
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x1
  20:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	stp	x19, x20, [sp, #16]
  28:	movk	x1, #0xaaab
  2c:	stp	x23, x24, [sp, #48]
  30:	ldp	x19, x23, [x25]
  34:	ldr	x20, [x0]
  38:	ldr	x0, [x0, #16]
  3c:	sub	x22, x23, x19
  40:	sub	x0, x0, x20
  44:	asr	x26, x22, #4
  48:	asr	x0, x0, #4
  4c:	mul	x26, x26, x1
  50:	mul	x0, x0, x1
  54:	cmp	x0, x26
  58:	b.cc	1ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1ac>  // b.lo, b.ul, b.last
  5c:	stp	x27, x28, [sp, #80]
  60:	ldr	x28, [x21, #8]
  64:	sub	x0, x28, x20
  68:	asr	x24, x0, #4
  6c:	mul	x24, x24, x1
  70:	cmp	x26, x24
  74:	b.hi	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>  // b.pmore
  78:	cmp	x22, #0x0
  7c:	b.le	120 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x120>
  80:	add	x19, x19, #0x8
  84:	add	x23, x20, #0x8
  88:	mov	x24, #0xffffffffffffffff    	// #-1
  8c:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>
  90:	mov	x1, x19
  94:	mov	x0, x23
  98:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  9c:	add	x1, x19, #0x10
  a0:	add	x0, x23, #0x10
  a4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  a8:	add	x19, x19, #0x30
  ac:	add	x23, x23, #0x30
  b0:	subs	x26, x26, #0x1
  b4:	b.eq	10c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x10c>  // b.none
  b8:	ldur	x0, [x19, #-8]
  bc:	stur	x0, [x23, #-8]
  c0:	ldr	w0, [x23, #8]
  c4:	cmp	w0, #0x40
  c8:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  cc:	ldr	w0, [x19, #8]
  d0:	cmp	w0, #0x40
  d4:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  d8:	ldr	x2, [x19]
  dc:	neg	w1, w0
  e0:	str	w0, [x23, #8]
  e4:	lsr	x0, x24, x1
  e8:	and	x0, x0, x2
  ec:	str	x0, [x23]
  f0:	add	x1, x19, #0x10
  f4:	add	x0, x23, #0x10
  f8:	add	x19, x19, #0x30
  fc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 100:	add	x23, x23, #0x30
 104:	subs	x26, x26, #0x1
 108:	b.ne	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>  // b.any
 10c:	cmp	x22, #0x0
 110:	mov	x0, #0x30                  	// #48
 114:	csel	x0, x22, x0, gt
 118:	ldr	x28, [x21, #8]
 11c:	add	x20, x20, x0
 120:	cmp	x20, x28
 124:	b.eq	180 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x180>  // b.none
 128:	ldp	x19, x23, [x20, #24]
 12c:	cmp	x19, x23
 130:	b.eq	150 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x150>  // b.none
 134:	nop
 138:	mov	x0, x19
 13c:	add	x19, x19, #0x30
 140:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 144:	cmp	x23, x19
 148:	b.ne	138 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x138>  // b.any
 14c:	ldr	x23, [x20, #24]
 150:	cbz	x23, 15c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x15c>
 154:	mov	x0, x23
 158:	bl	0 <_ZdlPv>
 15c:	ldr	w0, [x20, #16]
 160:	cmp	w0, #0x40
 164:	b.ls	174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x174>  // b.plast
 168:	ldr	x0, [x20, #8]
 16c:	cbz	x0, 174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x174>
 170:	bl	0 <_ZdaPv>
 174:	add	x20, x20, #0x30
 178:	cmp	x20, x28
 17c:	b.ne	128 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x128>  // b.any
 180:	ldr	x20, [x21]
 184:	add	x22, x20, x22
 188:	ldp	x27, x28, [sp, #80]
 18c:	ldp	x19, x20, [sp, #16]
 190:	ldp	x23, x24, [sp, #48]
 194:	ldp	x25, x26, [sp, #64]
 198:	str	x22, [x21, #8]
 19c:	mov	x0, x21
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x29, x30, [sp], #112
 1a8:	ret
 1ac:	cbz	x26, 510 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x510>
 1b0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1b4:	movk	x0, #0x2aa, lsl #48
 1b8:	cmp	x26, x0
 1bc:	b.hi	528 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x528>  // b.pmore
 1c0:	mov	x0, x22
 1c4:	bl	0 <_Znwm>
 1c8:	str	x0, [sp, #104]
 1cc:	cmp	x19, x23
 1d0:	ldr	x26, [sp, #104]
 1d4:	b.eq	2cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2cc>  // b.none
 1d8:	stp	x27, x28, [sp, #80]
 1dc:	nop
 1e0:	ldr	x0, [x19]
 1e4:	str	x0, [x26]
 1e8:	ldr	w0, [x19, #16]
 1ec:	str	w0, [x26, #16]
 1f0:	cmp	w0, #0x40
 1f4:	b.hi	518 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x518>  // b.pmore
 1f8:	ldr	x0, [x19, #8]
 1fc:	str	x0, [x26, #8]
 200:	ldp	x0, x20, [x19, #24]
 204:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 208:	movk	x1, #0xaaab
 20c:	stp	xzr, xzr, [x26, #24]
 210:	mov	x28, #0x0                   	// #0
 214:	str	xzr, [x26, #40]
 218:	sub	x20, x20, x0
 21c:	asr	x0, x20, #4
 220:	mul	x0, x0, x1
 224:	cbz	x0, 244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x244>
 228:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 22c:	movk	x1, #0x2aa, lsl #48
 230:	cmp	x0, x1
 234:	b.hi	52c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x52c>  // b.pmore
 238:	mov	x0, x20
 23c:	bl	0 <_Znwm>
 240:	mov	x28, x0
 244:	add	x20, x28, x20
 248:	stp	x28, x28, [x26, #24]
 24c:	str	x20, [x26, #40]
 250:	ldp	x27, x20, [x19, #24]
 254:	cmp	x27, x20
 258:	b.eq	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2b4>  // b.none
 25c:	mov	x24, x27
 260:	mov	x25, x28
 264:	nop
 268:	mov	x1, x24
 26c:	mov	x0, x25
 270:	add	x24, x24, #0x30
 274:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 278:	cmp	x20, x24
 27c:	add	x25, x25, #0x30
 280:	b.ne	268 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x268>  // b.any
 284:	sub	x1, x20, #0x30
 288:	mov	x0, #0xaaab                	// #43691
 28c:	sub	x1, x1, x27
 290:	movk	x0, #0xaaaa, lsl #16
 294:	movk	x0, #0xaaaa, lsl #32
 298:	lsr	x1, x1, #4
 29c:	movk	x0, #0xaaa, lsl #48
 2a0:	mul	x1, x1, x0
 2a4:	and	x1, x1, #0xfffffffffffffff
 2a8:	add	x1, x1, #0x1
 2ac:	add	x1, x1, x1, lsl #1
 2b0:	add	x28, x28, x1, lsl #4
 2b4:	str	x28, [x26, #32]
 2b8:	add	x19, x19, #0x30
 2bc:	cmp	x23, x19
 2c0:	add	x26, x26, #0x30
 2c4:	b.ne	1e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e0>  // b.any
 2c8:	ldp	x27, x28, [sp, #80]
 2cc:	ldp	x19, x24, [x21]
 2d0:	cmp	x19, x24
 2d4:	b.eq	334 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x334>  // b.none
 2d8:	ldp	x20, x23, [x19, #24]
 2dc:	cmp	x20, x23
 2e0:	b.eq	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x300>  // b.none
 2e4:	nop
 2e8:	mov	x0, x20
 2ec:	add	x20, x20, #0x30
 2f0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 2f4:	cmp	x23, x20
 2f8:	b.ne	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2e8>  // b.any
 2fc:	ldr	x23, [x19, #24]
 300:	cbz	x23, 30c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x30c>
 304:	mov	x0, x23
 308:	bl	0 <_ZdlPv>
 30c:	ldr	w0, [x19, #16]
 310:	cmp	w0, #0x40
 314:	b.ls	324 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x324>  // b.plast
 318:	ldr	x0, [x19, #8]
 31c:	cbz	x0, 324 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x324>
 320:	bl	0 <_ZdaPv>
 324:	add	x19, x19, #0x30
 328:	cmp	x24, x19
 32c:	b.ne	2d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2d8>  // b.any
 330:	ldr	x24, [x21]
 334:	cbz	x24, 340 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x340>
 338:	mov	x0, x24
 33c:	bl	0 <_ZdlPv>
 340:	ldr	x0, [sp, #104]
 344:	str	x0, [x21]
 348:	add	x22, x0, x22
 34c:	str	x22, [x21, #16]
 350:	b	18c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x18c>
 354:	cmp	x0, #0x0
 358:	b.le	3f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3f4>
 35c:	add	x20, x20, #0x8
 360:	add	x19, x19, #0x8
 364:	mov	x23, #0xffffffffffffffff    	// #-1
 368:	b	394 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x394>
 36c:	mov	x1, x19
 370:	mov	x0, x20
 374:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 378:	add	x1, x19, #0x10
 37c:	add	x0, x20, #0x10
 380:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 384:	add	x19, x19, #0x30
 388:	add	x20, x20, #0x30
 38c:	subs	x24, x24, #0x1
 390:	b.eq	3e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3e8>  // b.none
 394:	ldur	x0, [x19, #-8]
 398:	stur	x0, [x20, #-8]
 39c:	ldr	w0, [x20, #8]
 3a0:	cmp	w0, #0x40
 3a4:	b.hi	36c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x36c>  // b.pmore
 3a8:	ldr	w0, [x19, #8]
 3ac:	cmp	w0, #0x40
 3b0:	b.hi	36c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x36c>  // b.pmore
 3b4:	ldr	x2, [x19]
 3b8:	neg	w1, w0
 3bc:	str	w0, [x20, #8]
 3c0:	lsr	x0, x23, x1
 3c4:	and	x0, x0, x2
 3c8:	str	x0, [x20]
 3cc:	add	x1, x19, #0x10
 3d0:	add	x0, x20, #0x10
 3d4:	add	x19, x19, #0x30
 3d8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 3dc:	add	x20, x20, #0x30
 3e0:	subs	x24, x24, #0x1
 3e4:	b.ne	394 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x394>  // b.any
 3e8:	ldp	x20, x28, [x21]
 3ec:	ldp	x19, x23, [x25]
 3f0:	sub	x0, x28, x20
 3f4:	add	x19, x19, x0
 3f8:	cmp	x19, x23
 3fc:	b.eq	184 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x184>  // b.none
 400:	ldr	x0, [x19]
 404:	str	x0, [x28]
 408:	ldr	w0, [x19, #16]
 40c:	str	w0, [x28, #16]
 410:	cmp	w0, #0x40
 414:	b.hi	500 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x500>  // b.pmore
 418:	ldr	x0, [x19, #8]
 41c:	str	x0, [x28, #8]
 420:	ldp	x0, x20, [x19, #24]
 424:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 428:	movk	x1, #0xaaab
 42c:	stp	xzr, xzr, [x28, #24]
 430:	mov	x27, #0x0                   	// #0
 434:	str	xzr, [x28, #40]
 438:	sub	x20, x20, x0
 43c:	asr	x0, x20, #4
 440:	mul	x0, x0, x1
 444:	cbz	x0, 464 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x464>
 448:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 44c:	movk	x1, #0x2aa, lsl #48
 450:	cmp	x0, x1
 454:	b.hi	52c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x52c>  // b.pmore
 458:	mov	x0, x20
 45c:	bl	0 <_Znwm>
 460:	mov	x27, x0
 464:	add	x20, x27, x20
 468:	stp	x27, x27, [x28, #24]
 46c:	str	x20, [x28, #40]
 470:	ldp	x26, x20, [x19, #24]
 474:	cmp	x26, x20
 478:	b.eq	4d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x4d4>  // b.none
 47c:	mov	x24, x26
 480:	mov	x25, x27
 484:	nop
 488:	mov	x1, x24
 48c:	mov	x0, x25
 490:	add	x24, x24, #0x30
 494:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 498:	cmp	x20, x24
 49c:	add	x25, x25, #0x30
 4a0:	b.ne	488 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x488>  // b.any
 4a4:	sub	x1, x20, #0x30
 4a8:	mov	x0, #0xaaab                	// #43691
 4ac:	sub	x1, x1, x26
 4b0:	movk	x0, #0xaaaa, lsl #16
 4b4:	movk	x0, #0xaaaa, lsl #32
 4b8:	lsr	x1, x1, #4
 4bc:	movk	x0, #0xaaa, lsl #48
 4c0:	mul	x1, x1, x0
 4c4:	and	x1, x1, #0xfffffffffffffff
 4c8:	add	x1, x1, #0x1
 4cc:	add	x1, x1, x1, lsl #1
 4d0:	add	x27, x27, x1, lsl #4
 4d4:	str	x27, [x28, #32]
 4d8:	add	x19, x19, #0x30
 4dc:	cmp	x19, x23
 4e0:	add	x28, x28, #0x30
 4e4:	b.eq	180 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x180>  // b.none
 4e8:	ldr	x0, [x19]
 4ec:	str	x0, [x28]
 4f0:	ldr	w0, [x19, #16]
 4f4:	str	w0, [x28, #16]
 4f8:	cmp	w0, #0x40
 4fc:	b.ls	418 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x418>  // b.plast
 500:	add	x1, x19, #0x8
 504:	add	x0, x28, #0x8
 508:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 50c:	b	420 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x420>
 510:	str	xzr, [sp, #104]
 514:	b	1cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1cc>
 518:	add	x1, x19, #0x8
 51c:	add	x0, x26, #0x8
 520:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 524:	b	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x200>
 528:	stp	x27, x28, [sp, #80]
 52c:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	stp	x19, x20, [sp, #16]
  10:	and	x19, x0, #0xfffffffffffffff8
  14:	ubfx	x0, x0, #1, #2
  18:	cmp	x0, #0x1
  1c:	b.eq	1c0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x1c0>  // b.none
  20:	cmp	x0, #0x2
  24:	b.eq	c4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xc4>  // b.none
  28:	cbz	x19, 414 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x414>
  2c:	ldrb	w0, [x19, #16]
  30:	cmp	w0, #0x1d
  34:	b.ne	41c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x41c>  // b.any
  38:	ldrsb	w0, [x19, #23]
  3c:	tbz	w0, #31, b0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb0>
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  48:	ldrsb	w1, [x19, #23]
  4c:	mov	x20, x0
  50:	tbz	w1, #31, a4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xa4>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  5c:	add	x0, x0, x1
  60:	sub	x0, x0, x20
  64:	asr	x0, x0, #4
  68:	cbz	w0, b0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb0>
  6c:	ldrsb	w0, [x19, #23]
  70:	stp	x21, x22, [sp, #32]
  74:	tbz	w0, #31, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldrsb	w1, [x19, #23]
  84:	mov	x20, x0
  88:	tbnz	w1, #31, 2e8 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x2e8>
  8c:	neg	x0, x20
  90:	asr	x0, x0, #4
  94:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
  98:	mov	x0, #0x0                   	// #0
  9c:	ldr	w0, [x0, #8]
  a0:	brk	#0x3e8
  a4:	neg	x0, x0
  a8:	asr	x0, x0, #4
  ac:	cbnz	w0, 380 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x380>
  b0:	mov	x0, #0xffffffffffffffb8    	// #-72
  b4:	add	x0, x19, x0
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	cbz	x19, 4ac <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4ac>
  c8:	ldrb	w0, [x19, #16]
  cc:	cmp	w0, #0x23
  d0:	b.ne	474 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x474>  // b.any
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  dc:	ldrsb	w1, [x19, #23]
  e0:	mov	w2, #0x18                  	// #24
  e4:	mov	x20, #0xffffffffffffffe8    	// #-24
  e8:	umsubl	x20, w0, w2, x20
  ec:	tbz	w1, #31, 1b0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x1b0>
  f0:	mov	x0, x19
  f4:	stp	x21, x22, [sp, #32]
  f8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  fc:	ldrsb	w1, [x19, #23]
 100:	mov	x21, x0
 104:	tbz	w1, #31, 388 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x388>
 108:	mov	x0, x19
 10c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 110:	add	x0, x0, x1
 114:	sub	x0, x0, x21
 118:	asr	x0, x0, #4
 11c:	cbz	w0, 394 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x394>
 120:	ldrsb	w0, [x19, #23]
 124:	tbz	w0, #31, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 128:	mov	x0, x19
 12c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 130:	ldrsb	w1, [x19, #23]
 134:	mov	x21, x0
 138:	tbnz	w1, #31, 3a0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3a0>
 13c:	neg	x0, x0
 140:	asr	x0, x0, #4
 144:	cbnz	w0, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 148:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 14c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 150:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 154:	add	x3, x3, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x0, x0, #0x0
 160:	mov	w2, #0x6ed                 	// #1773
 164:	bl	0 <__assert_fail>
 168:	mov	x0, x19
 16c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 170:	add	x0, x0, x1
 174:	sub	x0, x0, x21
 178:	asr	x0, x0, #4
 17c:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 180:	ldrsb	w0, [x19, #23]
 184:	tbz	w0, #31, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 188:	mov	x0, x19
 18c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 190:	add	x0, x0, x1
 194:	ldur	w0, [x0, #-4]
 198:	cmp	w0, w22
 19c:	b.cc	440 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x440>  // b.lo, b.ul, b.last
 1a0:	sub	w0, w0, w22
 1a4:	mov	w1, #0x18                  	// #24
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	umsubl	x20, w0, w1, x20
 1b0:	add	x0, x19, x20
 1b4:	ldp	x19, x20, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #48
 1bc:	ret
 1c0:	cbz	x19, 488 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x488>
 1c4:	ldrb	w0, [x19, #16]
 1c8:	cmp	w0, #0x50
 1cc:	b.ne	460 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x460>  // b.any
 1d0:	ldrsb	w0, [x19, #23]
 1d4:	tbz	w0, #31, 290 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x290>
 1d8:	mov	x0, x19
 1dc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1e0:	ldrsb	w1, [x19, #23]
 1e4:	mov	x20, x0
 1e8:	tbz	w1, #31, 284 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x284>
 1ec:	mov	x0, x19
 1f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1f4:	add	x0, x0, x1
 1f8:	sub	x0, x0, x20
 1fc:	asr	x0, x0, #4
 200:	cbz	w0, 290 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x290>
 204:	ldrsb	w0, [x19, #23]
 208:	stp	x21, x22, [sp, #32]
 20c:	tbz	w0, #31, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 210:	mov	x0, x19
 214:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 218:	ldrsb	w1, [x19, #23]
 21c:	mov	x20, x0
 220:	tbz	w1, #31, 8c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x8c>
 224:	mov	x0, x19
 228:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 22c:	add	x0, x0, x1
 230:	sub	x0, x0, x20
 234:	asr	x0, x0, #4
 238:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 23c:	ldrsb	w0, [x19, #23]
 240:	tbz	w0, #31, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 244:	mov	x0, x19
 248:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 24c:	ldrsb	w1, [x19, #23]
 250:	ldr	w21, [x0, #8]
 254:	tbz	w1, #31, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 258:	mov	x0, x19
 25c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 260:	ldrsb	w1, [x19, #23]
 264:	mov	x20, x0
 268:	tbnz	w1, #31, 298 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x298>
 26c:	neg	x0, x20
 270:	asr	x0, x0, #4
 274:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 278:	mov	x0, #0x0                   	// #0
 27c:	ldur	w0, [x0, #-4]
 280:	brk	#0x3e8
 284:	neg	x0, x0
 288:	asr	x0, x0, #4
 28c:	cbnz	w0, 380 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x380>
 290:	mov	x0, #0xffffffffffffffe8    	// #-24
 294:	b	b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb4>
 298:	mov	x0, x19
 29c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 2a0:	add	x0, x0, x1
 2a4:	sub	x0, x0, x20
 2a8:	asr	x0, x0, #4
 2ac:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 2b0:	ldrsb	w0, [x19, #23]
 2b4:	tbz	w0, #31, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 2b8:	mov	x0, x19
 2bc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 2c0:	add	x0, x0, x1
 2c4:	ldur	w0, [x0, #-4]
 2c8:	cmp	w0, w21
 2cc:	b.cc	440 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x440>  // b.lo, b.ul, b.last
 2d0:	sub	w0, w0, w21
 2d4:	mov	w1, #0x18                  	// #24
 2d8:	mov	x2, #0xffffffffffffffe8    	// #-24
 2dc:	ldp	x21, x22, [sp, #32]
 2e0:	umsubl	x0, w0, w1, x2
 2e4:	b	b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb4>
 2e8:	mov	x0, x19
 2ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 2f0:	add	x0, x0, x1
 2f4:	sub	x0, x0, x20
 2f8:	asr	x0, x0, #4
 2fc:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 300:	ldrsb	w0, [x19, #23]
 304:	tbz	w0, #31, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 308:	mov	x0, x19
 30c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 310:	ldrsb	w1, [x19, #23]
 314:	ldr	w21, [x0, #8]
 318:	tbz	w1, #31, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 31c:	mov	x0, x19
 320:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 324:	ldrsb	w1, [x19, #23]
 328:	mov	x20, x0
 32c:	tbz	w1, #31, 26c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x26c>
 330:	mov	x0, x19
 334:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 338:	add	x0, x0, x1
 33c:	sub	x0, x0, x20
 340:	asr	x0, x0, #4
 344:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 348:	ldrsb	w0, [x19, #23]
 34c:	tbz	w0, #31, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 350:	mov	x0, x19
 354:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 358:	add	x0, x0, x1
 35c:	ldur	w0, [x0, #-4]
 360:	cmp	w0, w21
 364:	b.cc	440 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x440>  // b.lo, b.ul, b.last
 368:	sub	w0, w0, w21
 36c:	mov	w1, #0x18                  	// #24
 370:	mov	x2, #0xffffffffffffffb8    	// #-72
 374:	ldp	x21, x22, [sp, #32]
 378:	umsubl	x0, w0, w1, x2
 37c:	b	b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb4>
 380:	stp	x21, x22, [sp, #32]
 384:	b	148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 388:	neg	x0, x0
 38c:	asr	x0, x0, #4
 390:	cbnz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 394:	add	x0, x19, x20
 398:	ldp	x21, x22, [sp, #32]
 39c:	b	1b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x1b4>
 3a0:	mov	x0, x19
 3a4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 3a8:	add	x0, x0, x1
 3ac:	sub	x0, x0, x21
 3b0:	asr	x0, x0, #4
 3b4:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 3b8:	ldrsb	w0, [x19, #23]
 3bc:	tbz	w0, #31, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 3c0:	mov	x0, x19
 3c4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 3c8:	ldrsb	w1, [x19, #23]
 3cc:	ldr	w22, [x0, #8]
 3d0:	tbz	w1, #31, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 3d4:	mov	x0, x19
 3d8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 3dc:	ldrsb	w1, [x19, #23]
 3e0:	mov	x21, x0
 3e4:	tbnz	w1, #31, 168 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x168>
 3e8:	neg	x0, x0
 3ec:	asr	x0, x0, #4
 3f0:	cbnz	w0, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 3f4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 3f8:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 3fc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 400:	add	x3, x3, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x0, x0, #0x0
 40c:	mov	w2, #0x6f3                 	// #1779
 410:	bl	0 <__assert_fail>
 414:	stp	x21, x22, [sp, #32]
 418:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 41c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 420:	add	x3, x3, #0x0
 424:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 428:	stp	x21, x22, [sp, #32]
 42c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 430:	add	x1, x1, #0x0
 434:	add	x0, x0, #0x0
 438:	mov	w2, #0x108                 	// #264
 43c:	bl	0 <__assert_fail>
 440:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 444:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 448:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 44c:	add	x3, x3, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x0, x0, #0x0
 458:	mov	w2, #0x710                 	// #1808
 45c:	bl	0 <__assert_fail>
 460:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 464:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 468:	add	x3, x3, #0x0
 46c:	stp	x21, x22, [sp, #32]
 470:	b	42c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x42c>
 474:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 478:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 47c:	add	x3, x3, #0x0
 480:	stp	x21, x22, [sp, #32]
 484:	b	42c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x42c>
 488:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 48c:	add	x3, x3, #0x0
 490:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 494:	stp	x21, x22, [sp, #32]
 498:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 49c:	add	x1, x1, #0x0
 4a0:	add	x0, x0, #0x0
 4a4:	mov	w2, #0x69                  	// #105
 4a8:	bl	0 <__assert_fail>
 4ac:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4b0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4b4:	add	x3, x3, #0x0
 4b8:	stp	x21, x22, [sp, #32]
 4bc:	b	498 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x498>

Disassembly of section .text._ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x58>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	cbz	x1, 9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x9c>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	str	x23, [sp, #48]
  18:	mov	x23, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x0, x23
  24:	ldr	x1, [x21, #24]
  28:	mov	x20, x21
  2c:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  30:	ldp	x19, x22, [x21, #64]
  34:	ldr	x21, [x21, #16]
  38:	cmp	x19, x22
  3c:	b.eq	58 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x58>  // b.none
  40:	mov	x0, x19
  44:	add	x19, x19, #0x30
  48:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  4c:	cmp	x22, x19
  50:	b.ne	40 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x40>  // b.any
  54:	ldr	x22, [x20, #64]
  58:	cbz	x22, 64 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x64>
  5c:	mov	x0, x22
  60:	bl	0 <_ZdlPv>
  64:	ldr	w1, [x20, #56]
  68:	cmp	w1, #0x40
  6c:	b.ls	7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x7c>  // b.plast
  70:	ldr	x0, [x20, #48]
  74:	cbz	x0, 7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x7c>
  78:	bl	0 <_ZdaPv>
  7c:	mov	x0, x20
  80:	bl	0 <_ZdlPv>
  84:	cbnz	x21, 20 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x20>
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x21, x22, [sp, #32]
  90:	ldr	x23, [sp, #48]
  94:	ldp	x29, x30, [sp], #64
  98:	ret
  9c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>:
   0:	cbz	x1, 2e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2e0>
   4:	stp	x29, x30, [sp, #-128]!
   8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   c:	movk	x4, #0xaaab
  10:	mov	x29, sp
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  20:	ldp	x0, x3, [x0]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x20, x1
  2c:	ldr	x1, [x21, #16]
  30:	stp	x23, x24, [sp, #48]
  34:	movk	x2, #0x2aa, lsl #48
  38:	sub	x19, x3, x0
  3c:	sub	x0, x1, x3
  40:	asr	x24, x19, #4
  44:	asr	x0, x0, #4
  48:	mul	x1, x24, x4
  4c:	mul	x0, x0, x4
  50:	str	x1, [sp, #104]
  54:	sub	x1, x2, x1
  58:	cmp	x0, x20
  5c:	b.cs	280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x280>  // b.hs, b.nlast
  60:	cmp	x1, x20
  64:	b.cc	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2e8>  // b.lo, b.ul, b.last
  68:	ldr	x0, [sp, #104]
  6c:	stp	x27, x28, [sp, #80]
  70:	cmp	x20, x0
  74:	csel	x23, x20, x0, cs  // cs = hs, nlast
  78:	add	x23, x0, x23
  7c:	cmp	x23, x2
  80:	csel	x23, x23, x2, ls  // ls = plast
  84:	add	x23, x23, x23, lsl #1
  88:	lsl	x0, x23, #4
  8c:	str	x0, [sp, #120]
  90:	bl	0 <_Znwm>
  94:	str	x0, [sp, #112]
  98:	mov	x1, x20
  9c:	add	x0, x0, x19
  a0:	mov	w2, #0x1                   	// #1
  a4:	nop
  a8:	stp	wzr, wzr, [x0]
  ac:	subs	x1, x1, #0x1
  b0:	str	xzr, [x0, #8]
  b4:	str	w2, [x0, #16]
  b8:	stp	xzr, xzr, [x0, #24]
  bc:	add	x0, x0, #0x30
  c0:	stur	xzr, [x0, #-8]
  c4:	b.ne	a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xa8>  // b.any
  c8:	ldp	x27, x22, [x21]
  cc:	cmp	x27, x22
  d0:	b.eq	238 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x238>  // b.none
  d4:	ldr	x23, [sp, #112]
  d8:	stp	x25, x26, [sp, #64]
  dc:	nop
  e0:	ldr	x0, [x27]
  e4:	str	x0, [x23]
  e8:	ldr	w0, [x27, #16]
  ec:	str	w0, [x23, #16]
  f0:	cmp	w0, #0x40
  f4:	b.hi	2d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2d0>  // b.pmore
  f8:	ldr	x0, [x27, #8]
  fc:	str	x0, [x23, #8]
 100:	ldp	x0, x19, [x27, #24]
 104:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 108:	movk	x1, #0xaaab
 10c:	stp	xzr, xzr, [x23, #24]
 110:	mov	x28, #0x0                   	// #0
 114:	str	xzr, [x23, #40]
 118:	sub	x19, x19, x0
 11c:	asr	x0, x19, #4
 120:	mul	x0, x0, x1
 124:	cbz	x0, 144 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x144>
 128:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 12c:	movk	x1, #0x2aa, lsl #48
 130:	cmp	x0, x1
 134:	b.hi	2e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2e4>  // b.pmore
 138:	mov	x0, x19
 13c:	bl	0 <_Znwm>
 140:	mov	x28, x0
 144:	add	x19, x28, x19
 148:	stp	x28, x28, [x23, #24]
 14c:	str	x19, [x23, #40]
 150:	ldp	x24, x19, [x27, #24]
 154:	cmp	x24, x19
 158:	b.eq	1b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1b4>  // b.none
 15c:	mov	x25, x24
 160:	mov	x26, x28
 164:	nop
 168:	mov	x1, x25
 16c:	mov	x0, x26
 170:	add	x25, x25, #0x30
 174:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 178:	cmp	x19, x25
 17c:	add	x26, x26, #0x30
 180:	b.ne	168 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x168>  // b.any
 184:	sub	x1, x19, #0x30
 188:	mov	x0, #0xaaab                	// #43691
 18c:	sub	x1, x1, x24
 190:	movk	x0, #0xaaaa, lsl #16
 194:	movk	x0, #0xaaaa, lsl #32
 198:	lsr	x1, x1, #4
 19c:	movk	x0, #0xaaa, lsl #48
 1a0:	mul	x1, x1, x0
 1a4:	and	x1, x1, #0xfffffffffffffff
 1a8:	add	x1, x1, #0x1
 1ac:	add	x1, x1, x1, lsl #1
 1b0:	add	x28, x28, x1, lsl #4
 1b4:	str	x28, [x23, #32]
 1b8:	add	x27, x27, #0x30
 1bc:	cmp	x22, x27
 1c0:	add	x23, x23, #0x30
 1c4:	b.ne	e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xe0>  // b.any
 1c8:	ldp	x19, x22, [x21]
 1cc:	cmp	x19, x22
 1d0:	b.eq	2fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2fc>  // b.none
 1d4:	nop
 1d8:	ldp	x25, x26, [x19, #24]
 1dc:	cmp	x25, x26
 1e0:	b.eq	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x200>  // b.none
 1e4:	nop
 1e8:	mov	x0, x25
 1ec:	add	x25, x25, #0x30
 1f0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 1f4:	cmp	x26, x25
 1f8:	b.ne	1e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1e8>  // b.any
 1fc:	ldr	x26, [x19, #24]
 200:	cbz	x26, 20c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x20c>
 204:	mov	x0, x26
 208:	bl	0 <_ZdlPv>
 20c:	ldr	w0, [x19, #16]
 210:	cmp	w0, #0x40
 214:	b.ls	224 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x224>  // b.plast
 218:	ldr	x0, [x19, #8]
 21c:	cbz	x0, 224 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x224>
 220:	bl	0 <_ZdaPv>
 224:	add	x19, x19, #0x30
 228:	cmp	x22, x19
 22c:	b.ne	1d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1d8>  // b.any
 230:	ldp	x25, x26, [sp, #64]
 234:	ldr	x22, [x21]
 238:	cbz	x22, 244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x244>
 23c:	mov	x0, x22
 240:	bl	0 <_ZdlPv>
 244:	ldr	x0, [sp, #104]
 248:	ldr	x1, [sp, #120]
 24c:	add	x20, x20, x0
 250:	ldr	x0, [sp, #112]
 254:	add	x20, x20, x20, lsl #1
 258:	add	x23, x0, x1
 25c:	str	x23, [x21, #16]
 260:	add	x27, x0, x20, lsl #4
 264:	stp	x0, x27, [x21]
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldp	x21, x22, [sp, #32]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x27, x28, [sp, #80]
 278:	ldp	x29, x30, [sp], #128
 27c:	ret
 280:	mov	x0, x3
 284:	mov	x1, x20
 288:	mov	w2, #0x1                   	// #1
 28c:	nop
 290:	stp	wzr, wzr, [x0]
 294:	subs	x1, x1, #0x1
 298:	str	xzr, [x0, #8]
 29c:	str	w2, [x0, #16]
 2a0:	stp	xzr, xzr, [x0, #24]
 2a4:	add	x0, x0, #0x30
 2a8:	stur	xzr, [x0, #-8]
 2ac:	b.ne	290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x290>  // b.any
 2b0:	add	x20, x20, x20, lsl #1
 2b4:	ldp	x23, x24, [sp, #48]
 2b8:	add	x3, x3, x20, lsl #4
 2bc:	str	x3, [x21, #8]
 2c0:	ldp	x19, x20, [sp, #16]
 2c4:	ldp	x21, x22, [sp, #32]
 2c8:	ldp	x29, x30, [sp], #128
 2cc:	ret
 2d0:	add	x1, x27, #0x8
 2d4:	add	x0, x23, #0x8
 2d8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 2dc:	b	100 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x100>
 2e0:	ret
 2e4:	bl	0 <_ZSt17__throw_bad_allocv>
 2e8:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 2ec:	add	x0, x0, #0x0
 2f0:	stp	x25, x26, [sp, #64]
 2f4:	stp	x27, x28, [sp, #80]
 2f8:	bl	0 <_ZSt20__throw_length_errorPKc>
 2fc:	ldp	x25, x26, [sp, #64]
 300:	cbnz	x22, 23c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x23c>
 304:	b	244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x244>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x22, x24, [x0]
  1c:	sub	x2, x24, x22
  20:	asr	x2, x2, #4
  24:	mul	x2, x2, x3
  28:	cmp	x1, x2
  2c:	b.hi	c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xc0>  // b.pmore
  30:	b.cs	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xb0>  // b.hs, b.nlast
  34:	add	x1, x1, x1, lsl #1
  38:	add	x22, x22, x1, lsl #4
  3c:	cmp	x22, x24
  40:	b.eq	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xb0>  // b.none
  44:	mov	x23, x0
  48:	stp	x19, x20, [sp, #16]
  4c:	mov	x19, x22
  50:	ldp	x20, x21, [x19, #24]
  54:	cmp	x20, x21
  58:	b.eq	78 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x78>  // b.none
  5c:	nop
  60:	mov	x0, x20
  64:	add	x20, x20, #0x30
  68:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>
  6c:	cmp	x21, x20
  70:	b.ne	60 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x60>  // b.any
  74:	ldr	x21, [x19, #24]
  78:	cbz	x21, 84 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x84>
  7c:	mov	x0, x21
  80:	bl	0 <_ZdlPv>
  84:	ldr	w0, [x19, #16]
  88:	cmp	w0, #0x40
  8c:	b.ls	9c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x9c>  // b.plast
  90:	ldr	x0, [x19, #8]
  94:	cbz	x0, 9c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x9c>
  98:	bl	0 <_ZdaPv>
  9c:	add	x19, x19, #0x30
  a0:	cmp	x24, x19
  a4:	b.ne	50 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x50>  // b.any
  a8:	ldp	x19, x20, [sp, #16]
  ac:	str	x22, [x23, #8]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldp	x23, x24, [sp, #48]
  b8:	ldp	x29, x30, [sp], #64
  bc:	ret
  c0:	ldp	x21, x22, [sp, #32]
  c4:	sub	x1, x1, x2
  c8:	ldp	x23, x24, [sp, #48]
  cc:	ldp	x29, x30, [sp], #64
  d0:	b	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	ldp	x20, x0, [x0, #8]
  1c:	cmp	x20, x0
  20:	b.eq	84 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x84>  // b.none
  24:	mov	x2, x20
  28:	ldr	x4, [x1], #8
  2c:	str	x4, [x2], #8
  30:	ldr	w5, [x1, #8]
  34:	str	w5, [x2, #8]
  38:	ldr	x4, [x19, #8]
  3c:	str	x4, [x20, #8]
  40:	str	wzr, [x1, #8]
  44:	ldr	x1, [x19, #24]
  48:	str	x1, [x20, #24]
  4c:	ldr	x1, [x19, #32]
  50:	str	x1, [x20, #32]
  54:	str	xzr, [x19, #32]
  58:	ldr	x1, [x19, #40]
  5c:	ldr	x0, [x21, #8]
  60:	str	xzr, [x19, #24]
  64:	str	xzr, [x19, #40]
  68:	str	x1, [x20, #40]
  6c:	add	x0, x0, #0x30
  70:	str	x0, [x21, #8]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #112
  80:	ret
  84:	stp	x27, x28, [sp, #80]
  88:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  8c:	movk	x1, #0xaaab
  90:	ldr	x27, [x21]
  94:	stp	x23, x24, [sp, #48]
  98:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  9c:	sub	x24, x20, x27
  a0:	movk	x0, #0x2aa, lsl #48
  a4:	asr	x22, x24, #4
  a8:	mul	x22, x22, x1
  ac:	cmp	x22, x0
  b0:	b.eq	32c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x32c>  // b.none
  b4:	cbz	x22, 30c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x30c>
  b8:	lsl	x1, x22, #1
  bc:	str	x1, [sp, #104]
  c0:	cmp	x22, x22, lsl #1
  c4:	b.ls	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2e8>  // b.plast
  c8:	str	x0, [sp, #104]
  cc:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
  d0:	bl	0 <_Znwm>
  d4:	str	x0, [sp, #96]
  d8:	mov	x2, x19
  dc:	cmp	x20, x27
  e0:	ldr	x28, [sp, #96]
  e4:	ldr	x4, [x2], #8
  e8:	add	x1, x28, x24
  ec:	add	x3, x1, #0x18
  f0:	str	x4, [x28, x24]
  f4:	ldr	x5, [x19, #8]
  f8:	str	x5, [x1, #8]
  fc:	ldr	w5, [x2, #8]
 100:	ldr	x4, [x19, #24]
 104:	str	w5, [x1, #16]
 108:	str	x4, [x1, #24]
 10c:	ldr	x1, [x19, #40]
 110:	str	wzr, [x2, #8]
 114:	ldr	x2, [x19, #32]
 118:	stp	x2, x1, [x3, #8]
 11c:	stp	xzr, xzr, [x19, #24]
 120:	str	xzr, [x19, #40]
 124:	b.eq	31c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x31c>  // b.none
 128:	mov	x22, x27
 12c:	stp	x25, x26, [sp, #64]
 130:	ldr	x0, [x22]
 134:	str	x0, [x28]
 138:	ldr	w0, [x22, #16]
 13c:	str	w0, [x28, #16]
 140:	cmp	w0, #0x40
 144:	b.hi	234 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x234>  // b.pmore
 148:	ldr	x0, [x22, #8]
 14c:	str	x0, [x28, #8]
 150:	ldp	x0, x19, [x22, #24]
 154:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 158:	movk	x1, #0xaaab
 15c:	stp	xzr, xzr, [x28, #24]
 160:	mov	x23, #0x0                   	// #0
 164:	str	xzr, [x28, #40]
 168:	sub	x19, x19, x0
 16c:	asr	x0, x19, #4
 170:	mul	x0, x0, x1
 174:	cbz	x0, 194 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x194>
 178:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 17c:	movk	x1, #0x2aa, lsl #48
 180:	cmp	x0, x1
 184:	b.hi	328 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x328>  // b.pmore
 188:	mov	x0, x19
 18c:	bl	0 <_Znwm>
 190:	mov	x23, x0
 194:	add	x19, x23, x19
 198:	stp	x23, x23, [x28, #24]
 19c:	str	x19, [x28, #40]
 1a0:	ldp	x26, x19, [x22, #24]
 1a4:	cmp	x26, x19
 1a8:	b.eq	204 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x204>  // b.none
 1ac:	mov	x25, x26
 1b0:	mov	x24, x23
 1b4:	nop
 1b8:	mov	x1, x25
 1bc:	mov	x0, x24
 1c0:	add	x25, x25, #0x30
 1c4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 1c8:	cmp	x19, x25
 1cc:	add	x24, x24, #0x30
 1d0:	b.ne	1b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x1b8>  // b.any
 1d4:	sub	x1, x19, #0x30
 1d8:	mov	x0, #0xaaab                	// #43691
 1dc:	sub	x1, x1, x26
 1e0:	movk	x0, #0xaaaa, lsl #16
 1e4:	movk	x0, #0xaaaa, lsl #32
 1e8:	lsr	x1, x1, #4
 1ec:	movk	x0, #0xaaa, lsl #48
 1f0:	mul	x1, x1, x0
 1f4:	and	x1, x1, #0xfffffffffffffff
 1f8:	add	x1, x1, #0x1
 1fc:	add	x1, x1, x1, lsl #1
 200:	add	x23, x23, x1, lsl #4
 204:	str	x23, [x28, #32]
 208:	add	x22, x22, #0x30
 20c:	cmp	x20, x22
 210:	add	x0, x28, #0x30
 214:	b.eq	244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x244>  // b.none
 218:	mov	x28, x0
 21c:	ldr	x0, [x22]
 220:	str	x0, [x28]
 224:	ldr	w0, [x22, #16]
 228:	str	w0, [x28, #16]
 22c:	cmp	w0, #0x40
 230:	b.ls	148 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x148>  // b.plast
 234:	add	x1, x22, #0x8
 238:	add	x0, x28, #0x8
 23c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 240:	b	150 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x150>
 244:	add	x28, x28, #0x60
 248:	mov	x19, x27
 24c:	nop
 250:	ldp	x24, x25, [x19, #24]
 254:	cmp	x24, x25
 258:	b.eq	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x278>  // b.none
 25c:	nop
 260:	mov	x0, x24
 264:	add	x24, x24, #0x30
 268:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 26c:	cmp	x25, x24
 270:	b.ne	260 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x260>  // b.any
 274:	ldr	x25, [x19, #24]
 278:	cbz	x25, 284 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x284>
 27c:	mov	x0, x25
 280:	bl	0 <_ZdlPv>
 284:	ldr	w0, [x19, #16]
 288:	cmp	w0, #0x40
 28c:	b.ls	29c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x29c>  // b.plast
 290:	ldr	x0, [x19, #8]
 294:	cbz	x0, 29c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x29c>
 298:	bl	0 <_ZdaPv>
 29c:	add	x19, x19, #0x30
 2a0:	cmp	x20, x19
 2a4:	b.ne	250 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x250>  // b.any
 2a8:	ldp	x25, x26, [sp, #64]
 2ac:	cbz	x27, 2b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2b8>
 2b0:	mov	x0, x27
 2b4:	bl	0 <_ZdlPv>
 2b8:	ldr	x0, [sp, #104]
 2bc:	ldp	x19, x20, [sp, #16]
 2c0:	add	x22, x0, x0, lsl #1
 2c4:	ldr	x0, [sp, #96]
 2c8:	stp	x0, x28, [x21]
 2cc:	ldp	x27, x28, [sp, #80]
 2d0:	add	x23, x0, x22, lsl #4
 2d4:	str	x23, [x21, #16]
 2d8:	ldp	x21, x22, [sp, #32]
 2dc:	ldp	x23, x24, [sp, #48]
 2e0:	ldp	x29, x30, [sp], #112
 2e4:	ret
 2e8:	str	xzr, [sp, #96]
 2ec:	cbz	x1, d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd8>
 2f0:	mov	x2, x1
 2f4:	cmp	x1, x0
 2f8:	csel	x0, x2, x0, ls  // ls = plast
 2fc:	mov	x1, #0x30                  	// #48
 300:	str	x0, [sp, #104]
 304:	mul	x0, x0, x1
 308:	b	d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd0>
 30c:	mov	x1, #0x1                   	// #1
 310:	mov	x0, #0x30                  	// #48
 314:	str	x1, [sp, #104]
 318:	b	d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd0>
 31c:	ldr	x0, [sp, #96]
 320:	add	x28, x0, #0x30
 324:	b	2ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2ac>
 328:	bl	0 <_ZSt17__throw_bad_allocv>
 32c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 330:	add	x0, x0, #0x0
 334:	stp	x25, x26, [sp, #64]
 338:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x4, #0xaaab
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	ldr	x3, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x1
  20:	ldr	x20, [x0, #8]
  24:	stp	x23, x24, [sp, #48]
  28:	sub	x21, x20, x3
  2c:	stp	x25, x26, [sp, #64]
  30:	asr	x21, x21, #4
  34:	stp	x27, x28, [sp, #80]
  38:	str	x3, [sp, #104]
  3c:	mul	x21, x21, x4
  40:	str	x0, [sp, #128]
  44:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  48:	movk	x0, #0x2aa, lsl #48
  4c:	cmp	x21, x0
  50:	b.eq	488 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x488>  // b.none
  54:	ldr	x1, [sp, #104]
  58:	mov	x25, x22
  5c:	sub	x19, x22, x1
  60:	cbz	x21, 448 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x448>
  64:	lsl	x1, x21, #1
  68:	str	x1, [sp, #120]
  6c:	cmp	x21, x21, lsl #1
  70:	b.ls	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x41c>  // b.plast
  74:	str	x0, [sp, #120]
  78:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
  7c:	str	x2, [sp, #136]
  80:	bl	0 <_Znwm>
  84:	ldr	x2, [sp, #136]
  88:	str	x0, [sp, #112]
  8c:	mov	x1, x2
  90:	ldr	x3, [sp, #112]
  94:	ldr	x5, [x1], #8
  98:	add	x26, x3, x19
  9c:	add	x0, x26, #0x8
  a0:	str	x5, [x3, x19]
  a4:	ldr	w5, [x1, #8]
  a8:	str	w5, [x0, #8]
  ac:	cmp	w5, #0x40
  b0:	b.hi	458 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x458>  // b.pmore
  b4:	ldr	x0, [x2, #8]
  b8:	str	x0, [x26, #8]
  bc:	ldp	x28, x19, [x2, #24]
  c0:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x5, #0xaaab
  c8:	add	x27, x26, #0x18
  cc:	str	xzr, [x26, #24]
  d0:	mov	x24, #0x0                   	// #0
  d4:	stp	xzr, xzr, [x27, #8]
  d8:	sub	x21, x19, x28
  dc:	asr	x0, x21, #4
  e0:	mul	x0, x0, x5
  e4:	cbz	x0, 110 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x110>
  e8:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  ec:	movk	x5, #0x2aa, lsl #48
  f0:	cmp	x0, x5
  f4:	b.hi	468 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x468>  // b.pmore
  f8:	mov	x0, x21
  fc:	str	x2, [sp, #136]
 100:	bl	0 <_Znwm>
 104:	mov	x24, x0
 108:	ldr	x2, [sp, #136]
 10c:	ldp	x28, x19, [x2, #24]
 110:	str	x24, [x26, #24]
 114:	add	x1, x24, x21
 118:	stp	x24, x1, [x27, #8]
 11c:	cmp	x28, x19
 120:	b.eq	17c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x17c>  // b.none
 124:	mov	x26, x28
 128:	mov	x21, x24
 12c:	nop
 130:	mov	x1, x26
 134:	mov	x0, x21
 138:	add	x26, x26, #0x30
 13c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 140:	cmp	x19, x26
 144:	add	x21, x21, #0x30
 148:	b.ne	130 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>  // b.any
 14c:	sub	x0, x19, #0x30
 150:	mov	x1, #0xaaab                	// #43691
 154:	sub	x0, x0, x28
 158:	movk	x1, #0xaaaa, lsl #16
 15c:	movk	x1, #0xaaaa, lsl #32
 160:	lsr	x0, x0, #4
 164:	movk	x1, #0xaaa, lsl #48
 168:	mul	x0, x0, x1
 16c:	and	x0, x0, #0xfffffffffffffff
 170:	add	x0, x0, #0x1
 174:	add	x0, x0, x0, lsl #1
 178:	add	x24, x24, x0, lsl #4
 17c:	ldp	x26, x21, [sp, #104]
 180:	str	x24, [x27, #8]
 184:	cmp	x22, x26
 188:	b.eq	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x278>  // b.none
 18c:	nop
 190:	ldr	x0, [x26]
 194:	str	x0, [x21]
 198:	ldr	w0, [x26, #16]
 19c:	str	w0, [x21, #16]
 1a0:	cmp	w0, #0x40
 1a4:	b.hi	428 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x428>  // b.pmore
 1a8:	ldr	x0, [x26, #8]
 1ac:	str	x0, [x21, #8]
 1b0:	ldp	x0, x19, [x26, #24]
 1b4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1b8:	movk	x1, #0xaaab
 1bc:	stp	xzr, xzr, [x21, #24]
 1c0:	mov	x28, #0x0                   	// #0
 1c4:	str	xzr, [x21, #40]
 1c8:	sub	x19, x19, x0
 1cc:	asr	x0, x19, #4
 1d0:	mul	x0, x0, x1
 1d4:	cbz	x0, 1f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1f4>
 1d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1dc:	movk	x1, #0x2aa, lsl #48
 1e0:	cmp	x0, x1
 1e4:	b.hi	468 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x468>  // b.pmore
 1e8:	mov	x0, x19
 1ec:	bl	0 <_Znwm>
 1f0:	mov	x28, x0
 1f4:	add	x19, x28, x19
 1f8:	stp	x28, x28, [x21, #24]
 1fc:	str	x19, [x21, #40]
 200:	ldp	x27, x19, [x26, #24]
 204:	cmp	x27, x19
 208:	b.eq	264 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x264>  // b.none
 20c:	mov	x24, x27
 210:	mov	x23, x28
 214:	nop
 218:	mov	x1, x24
 21c:	mov	x0, x23
 220:	add	x24, x24, #0x30
 224:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 228:	cmp	x19, x24
 22c:	add	x23, x23, #0x30
 230:	b.ne	218 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x218>  // b.any
 234:	sub	x1, x19, #0x30
 238:	mov	x0, #0xaaab                	// #43691
 23c:	sub	x1, x1, x27
 240:	movk	x0, #0xaaaa, lsl #16
 244:	movk	x0, #0xaaaa, lsl #32
 248:	lsr	x1, x1, #4
 24c:	movk	x0, #0xaaa, lsl #48
 250:	mul	x1, x1, x0
 254:	and	x1, x1, #0xfffffffffffffff
 258:	add	x1, x1, #0x1
 25c:	add	x1, x1, x1, lsl #1
 260:	add	x28, x28, x1, lsl #4
 264:	str	x28, [x21, #32]
 268:	add	x26, x26, #0x30
 26c:	cmp	x22, x26
 270:	add	x21, x21, #0x30
 274:	b.ne	190 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x190>  // b.any
 278:	add	x28, x21, #0x30
 27c:	cmp	x22, x20
 280:	b.eq	370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x370>  // b.none
 284:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 288:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 28c:	movk	x22, #0xaaab
 290:	movk	x23, #0x2aa, lsl #48
 294:	nop
 298:	ldr	x0, [x25]
 29c:	str	x0, [x28]
 2a0:	ldr	w0, [x25, #16]
 2a4:	str	w0, [x28, #16]
 2a8:	cmp	w0, #0x40
 2ac:	b.hi	438 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x438>  // b.pmore
 2b0:	ldr	x0, [x25, #8]
 2b4:	str	x0, [x28, #8]
 2b8:	ldp	x26, x19, [x25, #24]
 2bc:	stp	xzr, xzr, [x28, #24]
 2c0:	mov	x21, #0x0                   	// #0
 2c4:	str	xzr, [x28, #40]
 2c8:	sub	x24, x19, x26
 2cc:	asr	x0, x24, #4
 2d0:	mul	x0, x0, x22
 2d4:	cbz	x0, 2f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2f0>
 2d8:	cmp	x0, x23
 2dc:	b.hi	468 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x468>  // b.pmore
 2e0:	mov	x0, x24
 2e4:	bl	0 <_Znwm>
 2e8:	ldp	x26, x19, [x25, #24]
 2ec:	mov	x21, x0
 2f0:	add	x1, x21, x24
 2f4:	stp	x21, x21, [x28, #24]
 2f8:	cmp	x19, x26
 2fc:	str	x1, [x28, #40]
 300:	b.eq	35c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x35c>  // b.none
 304:	mov	x24, x26
 308:	mov	x27, x21
 30c:	nop
 310:	mov	x1, x24
 314:	mov	x0, x27
 318:	add	x24, x24, #0x30
 31c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 320:	cmp	x19, x24
 324:	add	x27, x27, #0x30
 328:	b.ne	310 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x310>  // b.any
 32c:	sub	x1, x19, #0x30
 330:	mov	x0, #0xaaab                	// #43691
 334:	sub	x1, x1, x26
 338:	movk	x0, #0xaaaa, lsl #16
 33c:	movk	x0, #0xaaaa, lsl #32
 340:	lsr	x1, x1, #4
 344:	movk	x0, #0xaaa, lsl #48
 348:	mul	x1, x1, x0
 34c:	and	x1, x1, #0xfffffffffffffff
 350:	add	x1, x1, #0x1
 354:	add	x1, x1, x1, lsl #1
 358:	add	x21, x21, x1, lsl #4
 35c:	str	x21, [x28, #32]
 360:	add	x25, x25, #0x30
 364:	cmp	x25, x20
 368:	add	x28, x28, #0x30
 36c:	b.ne	298 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x298>  // b.any
 370:	ldr	x0, [sp, #104]
 374:	cmp	x0, x20
 378:	mov	x19, x0
 37c:	b.eq	3d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3d8>  // b.none
 380:	ldp	x22, x24, [x19, #24]
 384:	cmp	x22, x24
 388:	b.eq	3a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3a8>  // b.none
 38c:	nop
 390:	mov	x0, x22
 394:	add	x22, x22, #0x30
 398:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 39c:	cmp	x24, x22
 3a0:	b.ne	390 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x390>  // b.any
 3a4:	ldr	x24, [x19, #24]
 3a8:	cbz	x24, 3b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3b4>
 3ac:	mov	x0, x24
 3b0:	bl	0 <_ZdlPv>
 3b4:	ldr	w0, [x19, #16]
 3b8:	cmp	w0, #0x40
 3bc:	b.ls	3cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3cc>  // b.plast
 3c0:	ldr	x0, [x19, #8]
 3c4:	cbz	x0, 3cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3cc>
 3c8:	bl	0 <_ZdaPv>
 3cc:	add	x19, x19, #0x30
 3d0:	cmp	x19, x20
 3d4:	b.ne	380 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x380>  // b.any
 3d8:	ldr	x0, [sp, #104]
 3dc:	cbz	x0, 3e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3e8>
 3e0:	ldr	x0, [sp, #104]
 3e4:	bl	0 <_ZdlPv>
 3e8:	ldp	x1, x0, [sp, #112]
 3ec:	ldp	x19, x20, [sp, #16]
 3f0:	ldp	x23, x24, [sp, #48]
 3f4:	add	x21, x0, x0, lsl #1
 3f8:	ldr	x0, [sp, #128]
 3fc:	add	x26, x1, x21, lsl #4
 400:	ldp	x21, x22, [sp, #32]
 404:	stp	x1, x28, [x0]
 408:	str	x26, [x0, #16]
 40c:	ldp	x25, x26, [sp, #64]
 410:	ldp	x27, x28, [sp, #80]
 414:	ldp	x29, x30, [sp], #144
 418:	ret
 41c:	cbnz	x1, 46c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x46c>
 420:	str	xzr, [sp, #112]
 424:	b	8c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x8c>
 428:	add	x1, x26, #0x8
 42c:	add	x0, x21, #0x8
 430:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 434:	b	1b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1b0>
 438:	add	x1, x25, #0x8
 43c:	add	x0, x28, #0x8
 440:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 444:	b	2b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2b8>
 448:	mov	x1, #0x1                   	// #1
 44c:	mov	x0, #0x30                  	// #48
 450:	str	x1, [sp, #120]
 454:	b	7c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x7c>
 458:	str	x2, [sp, #136]
 45c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 460:	ldr	x2, [sp, #136]
 464:	b	bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xbc>
 468:	bl	0 <_ZSt17__throw_bad_allocv>
 46c:	ldr	x3, [sp, #120]
 470:	mov	x1, #0x30                  	// #48
 474:	cmp	x3, x0
 478:	csel	x0, x3, x0, ls  // ls = plast
 47c:	str	x0, [sp, #120]
 480:	mul	x0, x0, x1
 484:	b	7c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x7c>
 488:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 48c:	add	x0, x0, #0x0
 490:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x2, #0xffffffffffffff      	// #72057594037927935
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x24, x26, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x1
  24:	str	x27, [sp, #80]
  28:	sub	x1, x26, x24
  2c:	cmp	x2, x1, asr #7
  30:	b.eq	2a0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2a0>  // b.none
  34:	mov	x23, x0
  38:	sub	x19, x21, x24
  3c:	asr	x0, x1, #7
  40:	cbz	x0, 288 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x288>
  44:	cmp	x0, x0, lsl #1
  48:	mov	x25, #0x7fffffffffffff80    	// #9223372036854775680
  4c:	lsl	x0, x0, #1
  50:	b.ls	274 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x274>  // b.plast
  54:	mov	x0, x25
  58:	bl	0 <_Znwm>
  5c:	mov	x22, x0
  60:	add	x25, x0, x25
  64:	add	x27, x0, #0x80
  68:	add	x0, x22, x19
  6c:	str	xzr, [x22, x19]
  70:	add	x1, x0, #0x28
  74:	cmp	x21, x24
  78:	stp	xzr, xzr, [x0, #8]
  7c:	str	xzr, [x0, #24]
  80:	str	wzr, [x0, #40]
  84:	str	xzr, [x0, #48]
  88:	stp	x1, x1, [x1, #16]
  8c:	str	xzr, [x1, #32]
  90:	stp	xzr, xzr, [x0, #80]
  94:	stp	xzr, xzr, [x0, #96]
  98:	stp	xzr, xzr, [x0, #112]
  9c:	b.eq	170 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x170>  // b.none
  a0:	mov	x20, x22
  a4:	mov	x19, x24
  a8:	b	128 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x128>
  ac:	ldr	w3, [x19, #40]
  b0:	add	x0, x19, #0x28
  b4:	str	x1, [x20, #48]
  b8:	str	w3, [x20, #40]
  bc:	ldr	x3, [x19, #56]
  c0:	str	x3, [x20, #56]
  c4:	ldp	x4, x3, [x19, #64]
  c8:	str	x4, [x20, #64]
  cc:	str	x2, [x1, #8]
  d0:	str	x3, [x20, #72]
  d4:	stp	xzr, x0, [x19, #48]
  d8:	stp	x0, xzr, [x19, #64]
  dc:	add	x20, x20, #0x80
  e0:	ldr	x0, [x19, #80]
  e4:	stur	x0, [x20, #-48]
  e8:	add	x0, x19, #0x20
  ec:	add	x19, x19, #0x80
  f0:	ldur	x1, [x19, #-40]
  f4:	stur	x1, [x20, #-40]
  f8:	ldur	x1, [x19, #-32]
  fc:	stur	x1, [x20, #-32]
 100:	ldur	x1, [x19, #-24]
 104:	stur	x1, [x20, #-24]
 108:	ldur	x1, [x19, #-16]
 10c:	stur	x1, [x20, #-16]
 110:	ldur	x1, [x19, #-8]
 114:	stur	x1, [x20, #-8]
 118:	ldur	x1, [x19, #-80]
 11c:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 120:	cmp	x21, x19
 124:	b.eq	164 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x164>  // b.none
 128:	ldr	x0, [x19]
 12c:	add	x2, x20, #0x28
 130:	ldr	x1, [x19, #48]
 134:	str	x0, [x20]
 138:	ldr	x0, [x19, #8]
 13c:	str	x0, [x20, #8]
 140:	ldr	x0, [x19, #16]
 144:	str	x0, [x20, #16]
 148:	ldr	x0, [x19, #24]
 14c:	str	x0, [x20, #24]
 150:	cbnz	x1, ac <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xac>
 154:	str	wzr, [x20, #40]
 158:	stp	xzr, x2, [x20, #48]
 15c:	stp	x2, xzr, [x20, #64]
 160:	b	dc <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xdc>
 164:	sub	x27, x21, x24
 168:	add	x27, x27, #0x80
 16c:	add	x27, x22, x27
 170:	cmp	x21, x26
 174:	b.eq	244 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x244>  // b.none
 178:	mov	x19, x21
 17c:	mov	x20, x27
 180:	b	200 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x200>
 184:	ldr	w3, [x19, #40]
 188:	add	x0, x19, #0x28
 18c:	str	w3, [x20, #40]
 190:	ldr	x4, [x19, #56]
 194:	stp	x1, x4, [x20, #48]
 198:	ldr	x3, [x19, #64]
 19c:	str	x3, [x20, #64]
 1a0:	str	x2, [x1, #8]
 1a4:	ldr	x1, [x19, #72]
 1a8:	stp	xzr, x0, [x19, #48]
 1ac:	stp	x0, xzr, [x19, #64]
 1b0:	str	x1, [x20, #72]
 1b4:	ldr	x0, [x19, #80]
 1b8:	str	x0, [x20, #80]
 1bc:	ldr	x0, [x19, #88]
 1c0:	str	x0, [x20, #88]
 1c4:	ldr	x0, [x19, #96]
 1c8:	str	x0, [x20, #96]
 1cc:	ldr	x0, [x19, #104]
 1d0:	str	x0, [x20, #104]
 1d4:	ldr	x0, [x19, #112]
 1d8:	str	x0, [x20, #112]
 1dc:	ldr	x0, [x19, #120]
 1e0:	str	x0, [x20, #120]
 1e4:	mov	x1, #0x0                   	// #0
 1e8:	add	x0, x19, #0x20
 1ec:	add	x19, x19, #0x80
 1f0:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 1f4:	add	x20, x20, #0x80
 1f8:	cmp	x19, x26
 1fc:	b.eq	23c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x23c>  // b.none
 200:	ldr	x0, [x19]
 204:	str	x0, [x20]
 208:	ldr	x0, [x19, #8]
 20c:	str	x0, [x20, #8]
 210:	ldr	x0, [x19, #16]
 214:	str	x0, [x20, #16]
 218:	ldr	x1, [x19, #48]
 21c:	add	x2, x20, #0x28
 220:	ldr	x0, [x19, #24]
 224:	str	x0, [x20, #24]
 228:	cbnz	x1, 184 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x184>
 22c:	str	wzr, [x20, #40]
 230:	stp	xzr, x2, [x20, #48]
 234:	stp	x2, xzr, [x20, #64]
 238:	b	1b4 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1b4>
 23c:	sub	x19, x19, x21
 240:	add	x27, x27, x19
 244:	cbz	x24, 250 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x250>
 248:	mov	x0, x24
 24c:	bl	0 <_ZdlPv>
 250:	ldp	x19, x20, [sp, #16]
 254:	stp	x22, x27, [x23]
 258:	str	x25, [x23, #16]
 25c:	ldp	x21, x22, [sp, #32]
 260:	ldp	x23, x24, [sp, #48]
 264:	ldp	x25, x26, [sp, #64]
 268:	ldr	x27, [sp, #80]
 26c:	ldp	x29, x30, [sp], #96
 270:	ret
 274:	cbnz	x0, 290 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x290>
 278:	mov	x27, #0x80                  	// #128
 27c:	mov	x25, #0x0                   	// #0
 280:	mov	x22, #0x0                   	// #0
 284:	b	68 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x68>
 288:	mov	x25, #0x80                  	// #128
 28c:	b	54 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x54>
 290:	cmp	x0, x2
 294:	csel	x0, x0, x2, ls  // ls = plast
 298:	lsl	x25, x0, #7
 29c:	b	54 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x54>
 2a0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 2a4:	add	x0, x0, #0x0
 2a8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	sub	x0, x2, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x2
  1c:	stp	x23, x24, [sp, #48]
  20:	asr	x24, x0, #4
  24:	str	x0, [sp, #96]
  28:	ldr	x19, [x21]
  2c:	stp	x27, x28, [sp, #80]
  30:	mov	x27, x1
  34:	ldr	x0, [x21, #16]
  38:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  3c:	movk	x1, #0xaaab
  40:	sub	x0, x0, x19
  44:	mul	x24, x24, x1
  48:	asr	x0, x0, #4
  4c:	mul	x0, x0, x1
  50:	cmp	x24, x0
  54:	b.ls	218 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x218>  // b.plast
  58:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x0, #0x2aa, lsl #48
  60:	cmp	x24, x0
  64:	b.hi	544 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x544>  // b.pmore
  68:	str	xzr, [sp, #104]
  6c:	cbz	x24, 7c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x7c>
  70:	ldr	x0, [sp, #96]
  74:	bl	0 <_Znwm>
  78:	str	x0, [sp, #104]
  7c:	cmp	x27, x20
  80:	ldr	x28, [sp, #104]
  84:	b.eq	17c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x17c>  // b.none
  88:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  8c:	stp	x25, x26, [sp, #64]
  90:	movk	x23, #0xaaab
  94:	nop
  98:	ldr	x0, [x27]
  9c:	str	x0, [x28]
  a0:	ldr	w0, [x27, #16]
  a4:	str	w0, [x28, #16]
  a8:	cmp	w0, #0x40
  ac:	b.hi	3e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3e0>  // b.pmore
  b0:	ldr	x0, [x27, #8]
  b4:	str	x0, [x28, #8]
  b8:	ldp	x25, x19, [x27, #24]
  bc:	stp	xzr, xzr, [x28, #24]
  c0:	mov	x26, #0x0                   	// #0
  c4:	str	xzr, [x28, #40]
  c8:	sub	x22, x19, x25
  cc:	asr	x0, x22, #4
  d0:	mul	x0, x0, x23
  d4:	cbz	x0, f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xf8>
  d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  dc:	movk	x1, #0x2aa, lsl #48
  e0:	cmp	x0, x1
  e4:	b.hi	540 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x540>  // b.pmore
  e8:	mov	x0, x22
  ec:	bl	0 <_Znwm>
  f0:	ldp	x25, x19, [x27, #24]
  f4:	mov	x26, x0
  f8:	add	x1, x26, x22
  fc:	stp	x26, x26, [x28, #24]
 100:	cmp	x25, x19
 104:	str	x1, [x28, #40]
 108:	b.eq	164 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x164>  // b.none
 10c:	mov	x24, x25
 110:	mov	x22, x26
 114:	nop
 118:	mov	x1, x24
 11c:	mov	x0, x22
 120:	add	x24, x24, #0x30
 124:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 128:	cmp	x19, x24
 12c:	add	x22, x22, #0x30
 130:	b.ne	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x118>  // b.any
 134:	sub	x3, x19, #0x30
 138:	mov	x0, #0xaaab                	// #43691
 13c:	sub	x3, x3, x25
 140:	movk	x0, #0xaaaa, lsl #16
 144:	movk	x0, #0xaaaa, lsl #32
 148:	lsr	x3, x3, #4
 14c:	movk	x0, #0xaaa, lsl #48
 150:	mul	x3, x3, x0
 154:	and	x3, x3, #0xfffffffffffffff
 158:	add	x3, x3, #0x1
 15c:	add	x3, x3, x3, lsl #1
 160:	add	x26, x26, x3, lsl #4
 164:	str	x26, [x28, #32]
 168:	add	x27, x27, #0x30
 16c:	cmp	x20, x27
 170:	add	x28, x28, #0x30
 174:	b.ne	98 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x98>  // b.any
 178:	ldp	x25, x26, [sp, #64]
 17c:	ldp	x19, x24, [x21]
 180:	cmp	x19, x24
 184:	b.eq	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1e4>  // b.none
 188:	ldp	x20, x23, [x19, #24]
 18c:	cmp	x20, x23
 190:	b.eq	1b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1b0>  // b.none
 194:	nop
 198:	mov	x0, x20
 19c:	add	x20, x20, #0x30
 1a0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 1a4:	cmp	x23, x20
 1a8:	b.ne	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x198>  // b.any
 1ac:	ldr	x23, [x19, #24]
 1b0:	cbz	x23, 1bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1bc>
 1b4:	mov	x0, x23
 1b8:	bl	0 <_ZdlPv>
 1bc:	ldr	w0, [x19, #16]
 1c0:	cmp	w0, #0x40
 1c4:	b.ls	1d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1d4>  // b.plast
 1c8:	ldr	x0, [x19, #8]
 1cc:	cbz	x0, 1d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1d4>
 1d0:	bl	0 <_ZdaPv>
 1d4:	add	x19, x19, #0x30
 1d8:	cmp	x24, x19
 1dc:	b.ne	188 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x188>  // b.any
 1e0:	ldr	x24, [x21]
 1e4:	cbz	x24, 1f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1f0>
 1e8:	mov	x0, x24
 1ec:	bl	0 <_ZdlPv>
 1f0:	ldp	x1, x0, [sp, #96]
 1f4:	add	x22, x0, x1
 1f8:	stp	x0, x22, [x21]
 1fc:	str	x22, [x21, #16]
 200:	ldp	x19, x20, [sp, #16]
 204:	ldp	x21, x22, [sp, #32]
 208:	ldp	x23, x24, [sp, #48]
 20c:	ldp	x27, x28, [sp, #80]
 210:	ldp	x29, x30, [sp], #112
 214:	ret
 218:	stp	x25, x26, [sp, #64]
 21c:	ldr	x25, [x21, #8]
 220:	sub	x26, x25, x19
 224:	asr	x23, x26, #4
 228:	mul	x23, x23, x1
 22c:	cmp	x24, x23
 230:	b.ls	400 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x400>  // b.plast
 234:	cmp	x26, #0x0
 238:	add	x26, x27, x26
 23c:	b.le	2d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2d0>
 240:	add	x19, x19, #0x8
 244:	add	x27, x27, #0x8
 248:	mov	x22, #0xffffffffffffffff    	// #-1
 24c:	b	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x278>
 250:	mov	x1, x27
 254:	mov	x0, x19
 258:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 25c:	add	x1, x27, #0x10
 260:	add	x0, x19, #0x10
 264:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 268:	add	x27, x27, #0x30
 26c:	add	x19, x19, #0x30
 270:	subs	x23, x23, #0x1
 274:	b.eq	2cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2cc>  // b.none
 278:	ldur	x0, [x27, #-8]
 27c:	stur	x0, [x19, #-8]
 280:	ldr	w0, [x19, #8]
 284:	cmp	w0, #0x40
 288:	b.hi	250 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x250>  // b.pmore
 28c:	ldr	w0, [x27, #8]
 290:	cmp	w0, #0x40
 294:	b.hi	250 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x250>  // b.pmore
 298:	ldr	x2, [x27]
 29c:	neg	w1, w0
 2a0:	str	w0, [x19, #8]
 2a4:	lsr	x0, x22, x1
 2a8:	and	x0, x0, x2
 2ac:	str	x0, [x19]
 2b0:	add	x1, x27, #0x10
 2b4:	add	x0, x19, #0x10
 2b8:	add	x27, x27, #0x30
 2bc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 2c0:	add	x19, x19, #0x30
 2c4:	subs	x23, x23, #0x1
 2c8:	b.ne	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x278>  // b.any
 2cc:	ldr	x25, [x21, #8]
 2d0:	cmp	x20, x26
 2d4:	b.eq	3c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3c0>  // b.none
 2d8:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 2dc:	movk	x22, #0xaaab
 2e0:	ldr	x0, [x26]
 2e4:	str	x0, [x25]
 2e8:	ldr	w0, [x26, #16]
 2ec:	str	w0, [x25, #16]
 2f0:	cmp	w0, #0x40
 2f4:	b.hi	3f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3f0>  // b.pmore
 2f8:	ldr	x0, [x26, #8]
 2fc:	str	x0, [x25, #8]
 300:	ldp	x0, x19, [x26, #24]
 304:	stp	xzr, xzr, [x25, #24]
 308:	mov	x27, #0x0                   	// #0
 30c:	str	xzr, [x25, #40]
 310:	sub	x19, x19, x0
 314:	asr	x0, x19, #4
 318:	mul	x0, x0, x22
 31c:	cbz	x0, 33c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x33c>
 320:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 324:	movk	x1, #0x2aa, lsl #48
 328:	cmp	x0, x1
 32c:	b.hi	540 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x540>  // b.pmore
 330:	mov	x0, x19
 334:	bl	0 <_Znwm>
 338:	mov	x27, x0
 33c:	add	x19, x27, x19
 340:	stp	x27, x27, [x25, #24]
 344:	str	x19, [x25, #40]
 348:	ldp	x24, x19, [x26, #24]
 34c:	cmp	x24, x19
 350:	b.eq	3ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3ac>  // b.none
 354:	mov	x28, x24
 358:	mov	x23, x27
 35c:	nop
 360:	mov	x1, x28
 364:	mov	x0, x23
 368:	add	x28, x28, #0x30
 36c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 370:	cmp	x19, x28
 374:	add	x23, x23, #0x30
 378:	b.ne	360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x360>  // b.any
 37c:	sub	x1, x19, #0x30
 380:	mov	x0, #0xaaab                	// #43691
 384:	sub	x1, x1, x24
 388:	movk	x0, #0xaaaa, lsl #16
 38c:	movk	x0, #0xaaaa, lsl #32
 390:	lsr	x1, x1, #4
 394:	movk	x0, #0xaaa, lsl #48
 398:	mul	x1, x1, x0
 39c:	and	x1, x1, #0xfffffffffffffff
 3a0:	add	x1, x1, #0x1
 3a4:	add	x1, x1, x1, lsl #1
 3a8:	add	x27, x27, x1, lsl #4
 3ac:	str	x27, [x25, #32]
 3b0:	add	x26, x26, #0x30
 3b4:	cmp	x20, x26
 3b8:	add	x25, x25, #0x30
 3bc:	b.ne	2e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2e0>  // b.any
 3c0:	str	x25, [x21, #8]
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldp	x21, x22, [sp, #32]
 3cc:	ldp	x23, x24, [sp, #48]
 3d0:	ldp	x25, x26, [sp, #64]
 3d4:	ldp	x27, x28, [sp, #80]
 3d8:	ldp	x29, x30, [sp], #112
 3dc:	ret
 3e0:	add	x1, x27, #0x8
 3e4:	add	x0, x28, #0x8
 3e8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 3ec:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xb8>
 3f0:	add	x1, x26, #0x8
 3f4:	add	x0, x25, #0x8
 3f8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 3fc:	b	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x300>
 400:	ldr	x0, [sp, #96]
 404:	cmp	x0, #0x0
 408:	b.le	4b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4b0>
 40c:	add	x27, x27, #0x8
 410:	add	x20, x19, #0x8
 414:	mov	x23, #0xffffffffffffffff    	// #-1
 418:	b	444 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x444>
 41c:	mov	x1, x27
 420:	mov	x0, x20
 424:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 428:	add	x1, x27, #0x10
 42c:	add	x0, x20, #0x10
 430:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 434:	add	x27, x27, #0x30
 438:	add	x20, x20, #0x30
 43c:	subs	x24, x24, #0x1
 440:	b.eq	498 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x498>  // b.none
 444:	ldur	x0, [x27, #-8]
 448:	stur	x0, [x20, #-8]
 44c:	ldr	w0, [x20, #8]
 450:	cmp	w0, #0x40
 454:	b.hi	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x41c>  // b.pmore
 458:	ldr	w0, [x27, #8]
 45c:	cmp	w0, #0x40
 460:	b.hi	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x41c>  // b.pmore
 464:	ldr	x2, [x27]
 468:	neg	w1, w0
 46c:	str	w0, [x20, #8]
 470:	lsr	x0, x23, x1
 474:	and	x0, x0, x2
 478:	str	x0, [x20]
 47c:	add	x1, x27, #0x10
 480:	add	x0, x20, #0x10
 484:	add	x27, x27, #0x30
 488:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 48c:	add	x20, x20, #0x30
 490:	subs	x24, x24, #0x1
 494:	b.ne	444 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x444>  // b.any
 498:	ldr	x1, [sp, #96]
 49c:	mov	x0, #0x30                  	// #48
 4a0:	ldr	x25, [x21, #8]
 4a4:	cmp	x1, #0x0
 4a8:	csel	x22, x1, x0, gt
 4ac:	add	x19, x19, x22
 4b0:	cmp	x19, x25
 4b4:	b.eq	538 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x538>  // b.none
 4b8:	mov	x23, x19
 4bc:	nop
 4c0:	ldp	x20, x22, [x23, #24]
 4c4:	cmp	x20, x22
 4c8:	b.eq	4e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4e8>  // b.none
 4cc:	nop
 4d0:	mov	x0, x20
 4d4:	add	x20, x20, #0x30
 4d8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 4dc:	cmp	x22, x20
 4e0:	b.ne	4d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4d0>  // b.any
 4e4:	ldr	x22, [x23, #24]
 4e8:	cbz	x22, 4f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4f4>
 4ec:	mov	x0, x22
 4f0:	bl	0 <_ZdlPv>
 4f4:	ldr	w0, [x23, #16]
 4f8:	cmp	w0, #0x40
 4fc:	b.ls	50c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x50c>  // b.plast
 500:	ldr	x0, [x23, #8]
 504:	cbz	x0, 50c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x50c>
 508:	bl	0 <_ZdaPv>
 50c:	add	x23, x23, #0x30
 510:	cmp	x23, x25
 514:	b.ne	4c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4c0>  // b.any
 518:	ldp	x25, x26, [sp, #64]
 51c:	str	x19, [x21, #8]
 520:	ldp	x19, x20, [sp, #16]
 524:	ldp	x21, x22, [sp, #32]
 528:	ldp	x23, x24, [sp, #48]
 52c:	ldp	x27, x28, [sp, #80]
 530:	ldp	x29, x30, [sp], #112
 534:	ret
 538:	ldp	x25, x26, [sp, #64]
 53c:	b	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x200>
 540:	bl	0 <_ZSt17__throw_bad_allocv>
 544:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 548:	add	x0, x0, #0x0
 54c:	stp	x25, x26, [sp, #64]
 550:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	x19, [x0, #16]
  14:	cbz	x19, 78 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x78>
  18:	ldr	x5, [x1]
  1c:	mov	w4, #0x1                   	// #1
  20:	ldr	x3, [x19, #32]
  24:	cmp	x3, x5
  28:	b.ls	4c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x4c>  // b.plast
  2c:	nop
  30:	ldr	x2, [x19, #16]
  34:	cbz	x2, 58 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x58>
  38:	mov	x19, x2
  3c:	mov	w4, #0x1                   	// #1
  40:	ldr	x3, [x19, #32]
  44:	cmp	x3, x5
  48:	b.hi	30 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x30>  // b.pmore
  4c:	ldr	x2, [x19, #24]
  50:	mov	w4, #0x0                   	// #0
  54:	cbnz	x2, 38 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x38>
  58:	mov	x1, x19
  5c:	cbnz	w4, 7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x7c>
  60:	cmp	x5, x3
  64:	csel	x0, x19, xzr, ls  // ls = plast
  68:	csel	x1, x1, xzr, hi  // hi = pmore
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret
  78:	add	x19, x0, #0x8
  7c:	ldr	x0, [x0, #24]
  80:	cmp	x0, x19
  84:	b.eq	a4 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0xa4>  // b.none
  88:	mov	x0, x19
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x1, x19
  94:	mov	x19, x0
  98:	ldr	x5, [x20]
  9c:	ldr	x3, [x0, #32]
  a0:	b	60 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x60>
  a4:	mov	x1, x19
  a8:	mov	x0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	add	x0, x0, #0x8
  14:	stp	x21, x22, [sp, #32]
  18:	cmp	x1, x0
  1c:	mov	x21, x2
  20:	b.eq	bc <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xbc>  // b.none
  24:	ldr	x22, [x2]
  28:	mov	x19, x1
  2c:	ldr	x0, [x1, #32]
  30:	cmp	x0, x22
  34:	b.ls	80 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x80>  // b.plast
  38:	ldr	x0, [x20, #24]
  3c:	mov	x1, x0
  40:	cmp	x0, x19
  44:	b.eq	70 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x70>  // b.none
  48:	mov	x0, x19
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	mov	x3, x0
  54:	ldr	x0, [x0, #32]
  58:	cmp	x0, x22
  5c:	b.cs	d8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xd8>  // b.hs, b.nlast
  60:	ldr	x1, [x3, #24]
  64:	cmp	x1, #0x0
  68:	csel	x0, x19, xzr, ne  // ne = any
  6c:	csel	x1, x3, x19, eq  // eq = none
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	b.cs	f0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xf0>  // b.hs, b.nlast
  84:	ldr	x0, [x20, #32]
  88:	cmp	x0, x1
  8c:	b.eq	120 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x120>  // b.none
  90:	mov	x0, x1
  94:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  98:	mov	x3, x0
  9c:	ldr	x0, [x0, #32]
  a0:	cmp	x0, x22
  a4:	b.ls	d8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xd8>  // b.plast
  a8:	ldr	x1, [x19, #24]
  ac:	cmp	x1, #0x0
  b0:	csel	x0, x3, xzr, ne  // ne = any
  b4:	csel	x1, x3, x19, ne  // ne = any
  b8:	b	70 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x70>
  bc:	ldr	x0, [x20, #40]
  c0:	cbz	x0, d8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xd8>
  c4:	ldr	x19, [x20, #32]
  c8:	ldr	x1, [x2]
  cc:	ldr	x0, [x19, #32]
  d0:	cmp	x1, x0
  d4:	b.hi	108 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x108>  // b.pmore
  d8:	mov	x1, x21
  dc:	mov	x0, x20
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #48
  ec:	b	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>
  f0:	mov	x0, x1
  f4:	mov	x1, #0x0                   	// #0
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	mov	x1, x19
 10c:	mov	x0, #0x0                   	// #0
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	ret
 120:	mov	x1, x0
 124:	mov	x0, #0x0                   	// #0
 128:	b	70 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x70>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x3
  10:	mov	x20, x0
  14:	mov	x0, #0x58                  	// #88
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	bl	0 <_Znwm>
  24:	add	x2, x0, #0x20
  28:	ldr	x4, [x19]
  2c:	mov	x19, x0
  30:	mov	x1, x21
  34:	mov	w21, #0x1                   	// #1
  38:	mov	x0, x20
  3c:	ldr	x4, [x4]
  40:	stp	x4, xzr, [x19, #32]
  44:	str	xzr, [x19, #48]
  48:	str	w21, [x19, #56]
  4c:	stp	xzr, xzr, [x19, #64]
  50:	str	xzr, [x19, #80]
  54:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
  58:	mov	x22, x0
  5c:	cbz	x1, b4 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0xb4>
  60:	mov	x2, x1
  64:	add	x3, x20, #0x8
  68:	cbz	x0, 98 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x98>
  6c:	mov	w0, w21
  70:	mov	x1, x19
  74:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  78:	ldr	x1, [x20, #40]
  7c:	mov	x0, x19
  80:	ldp	x21, x22, [sp, #32]
  84:	add	x1, x1, #0x1
  88:	str	x1, [x20, #40]
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	cmp	x1, x3
  9c:	b.eq	6c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x6c>  // b.none
  a0:	ldr	x0, [x1, #32]
  a4:	ldr	x1, [x19, #32]
  a8:	cmp	x1, x0
  ac:	cset	w21, cc  // cc = lo, ul, last
  b0:	b	6c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x6c>
  b4:	add	x0, x19, #0x28
  b8:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
  bc:	mov	x0, x19
  c0:	bl	0 <_ZdlPv>
  c4:	mov	x0, x22
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x2, x1
   8:	mov	x29, sp
   c:	ldur	x3, [x1, #-24]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	cbz	x3, 74 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x74>
  1c:	ldrb	w4, [x3, #16]
  20:	cbnz	w4, 74 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x74>
  24:	ldr	w3, [x3, #36]
  28:	cmp	w3, #0xb0
  2c:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  30:	b.hi	98 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x98>  // b.pmore
  34:	cmp	w3, #0x2b
  38:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  3c:	b.ls	70 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x70>  // b.plast
  40:	cmp	w3, #0x2c
  44:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  48:	cmp	w3, #0xae
  4c:	b.ne	ac <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xac>  // b.any
  50:	add	x0, sp, #0x28
  54:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  58:	ldr	x1, [sp, #40]
  5c:	mov	x0, x19
  60:	bl	112f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret
  70:	cbnz	w3, dc <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xdc>
  74:	tst	x2, #0x7
  78:	b.ne	ec <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xec>  // b.any
  7c:	and	x1, x2, #0xfffffffffffffff9
  80:	mov	x0, x19
  84:	orr	x1, x1, #0x2
  88:	bl	112f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	cmp	w3, #0x106
  9c:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  a0:	b.ls	b4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xb4>  // b.plast
  a4:	cmp	w3, #0x107
  a8:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  ac:	mov	x1, x2
  b0:	b	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>
  b4:	cmp	w3, #0xb2
  b8:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  bc:	cmp	w3, #0x105
  c0:	b.ne	ac <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xac>  // b.any
  c4:	tst	x1, #0x7
  c8:	b.ne	ec <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xec>  // b.any
  cc:	and	x1, x1, #0xfffffffffffffff9
  d0:	orr	x1, x1, #0x2
  d4:	bl	112f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  d8:	b	8c <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x8c>
  dc:	cmp	w3, #0x2a
  e0:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  e4:	mov	x1, x2
  e8:	b	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>
  ec:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  f0:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  f4:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  f8:	add	x3, x3, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	w2, #0xb2                  	// #178
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #16]
   c:	sub	w2, w2, #0x19
  10:	cmp	w2, #0x42
  14:	b.ls	30 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x30>  // b.plast
  18:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  1c:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x7a                  	// #122
  2c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  30:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  34:	add	x3, x3, #0x0
  38:	ldrb	w2, [x3, w2, uxtw]
  3c:	adr	x3, 48 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x48>
  40:	add	x2, x3, w2, sxtb #2
  44:	br	x2
  48:	ldp	x29, x30, [sp], #16
  4c:	b	acc8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
  50:	mov	x0, x1
  54:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  58:	tst	x1, #0x7
  5c:	b.ne	1b4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x1b4>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	and	x1, x1, #0xfffffffffffffff9
  68:	orr	x1, x1, #0x4
  6c:	b	112f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  70:	ldp	x29, x30, [sp], #16
  74:	b	6c8 <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>
  78:	tst	x1, #0x7
  7c:	b.ne	1b4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x1b4>  // b.any
  80:	ldp	x29, x30, [sp], #16
  84:	and	x1, x1, #0xfffffffffffffff9
  88:	b	112f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  8c:	ldp	x29, x30, [sp], #16
  90:	b	d3b8 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>
  94:	ldp	x29, x30, [sp], #16
  98:	b	107a0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>
  9c:	ldp	x29, x30, [sp], #16
  a0:	b	cd10 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>
  a4:	ldp	x29, x30, [sp], #16
  a8:	b	9f20 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>
  ac:	ldp	x29, x30, [sp], #16
  b0:	b	f8e0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>
  b4:	ldp	x29, x30, [sp], #16
  b8:	b	ff10 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>
  bc:	ldp	x29, x30, [sp], #16
  c0:	b	fb98 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>
  c4:	ldp	x29, x30, [sp], #16
  c8:	b	cb60 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>
  cc:	ldp	x29, x30, [sp], #16
  d0:	b	d6b8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>
  d4:	ldp	x29, x30, [sp], #16
  d8:	b	10a20 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>
  dc:	ldp	x29, x30, [sp], #16
  e0:	b	102d0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>
  e4:	ldp	x29, x30, [sp], #16
  e8:	b	c3f8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>
  ec:	ldp	x29, x30, [sp], #16
  f0:	b	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  f4:	ldp	x29, x30, [sp], #16
  f8:	b	a678 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>
  fc:	ldp	x29, x30, [sp], #16
 100:	b	a260 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>
 104:	ldp	x29, x30, [sp], #16
 108:	b	f840 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>
 10c:	ldp	x29, x30, [sp], #16
 110:	b	f7a0 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>
 114:	ldp	x29, x30, [sp], #16
 118:	b	f700 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>
 11c:	ldp	x29, x30, [sp], #16
 120:	b	f3e0 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>
 124:	ldp	x29, x30, [sp], #16
 128:	b	f340 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>
 12c:	ldp	x29, x30, [sp], #16
 130:	b	f660 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>
 134:	ldp	x29, x30, [sp], #16
 138:	b	f5c0 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>
 13c:	ldp	x29, x30, [sp], #16
 140:	b	f520 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>
 144:	ldp	x29, x30, [sp], #16
 148:	b	f480 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>
 14c:	ldp	x29, x30, [sp], #16
 150:	b	f200 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>
 154:	ldp	x29, x30, [sp], #16
 158:	b	f2a0 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>
 15c:	ldp	x29, x30, [sp], #16
 160:	b	f160 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>
 164:	ldp	x29, x30, [sp], #16
 168:	b	dc28 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>
 16c:	ldp	x29, x30, [sp], #16
 170:	b	5fc8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>
 174:	ldp	x29, x30, [sp], #16
 178:	b	ddf0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>
 17c:	ldp	x29, x30, [sp], #16
 180:	b	d8d0 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>
 184:	ldp	x29, x30, [sp], #16
 188:	b	eb60 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>
 18c:	ldp	x29, x30, [sp], #16
 190:	b	e5a0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>
 194:	ldp	x29, x30, [sp], #16
 198:	b	dfe0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>
 19c:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1a0:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1a4:	add	x1, x1, #0x0
 1a8:	add	x0, x0, #0x0
 1ac:	mov	w2, #0x88                  	// #136
 1b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 1b4:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1b8:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1bc:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1c0:	add	x3, x3, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x0, x0, #0x0
 1cc:	mov	w2, #0xb2                  	// #178
 1d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x1, x19, #0x50
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	mov	x0, x19
  60:	mov	x1, #0xc8                  	// #200
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZdlPvm>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Execution.cpp>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x5, 0 <_GLOBAL__sub_I_Execution.cpp>
   8:	adrp	x7, 0 <_GLOBAL__sub_I_Execution.cpp>
   c:	mov	x29, sp
  10:	add	x5, x5, #0x0
  14:	add	x7, x7, #0x0
  18:	adrp	x6, 0 <_GLOBAL__sub_I_Execution.cpp>
  1c:	adrp	x8, 0 <_GLOBAL__sub_I_Execution.cpp>
  20:	add	x6, x6, #0x0
  24:	add	x8, x8, #0x0
  28:	str	x19, [sp, #16]
  2c:	adrp	x19, 0 <_GLOBAL__sub_I_Execution.cpp>
  30:	add	x19, x19, #0x0
  34:	add	x3, sp, #0x30
  38:	mov	w10, #0x1                   	// #1
  3c:	mov	x9, #0x38                  	// #56
  40:	add	x2, sp, #0x2c
  44:	mov	x0, x19
  48:	adrp	x1, 0 <_GLOBAL__sub_I_Execution.cpp>
  4c:	add	x1, x1, #0x0
  50:	str	w10, [sp, #44]
  54:	stp	x8, x9, [sp, #48]
  58:	stp	x5, x7, [x19, #200]
  5c:	str	x6, [x19, #216]
  60:	str	wzr, [x19, #224]
  64:	strb	wzr, [x19, #228]
  68:	bl	0 <_GLOBAL__sub_I_Execution.cpp>
  6c:	mov	x1, x19
  70:	adrp	x2, 0 <__dso_handle>
  74:	adrp	x0, 0 <_GLOBAL__sub_I_Execution.cpp>
  78:	add	x2, x2, #0x0
  7c:	add	x0, x0, #0x0
  80:	bl	0 <__cxa_atexit>
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #64
  8c:	ret

ExternalFunctions.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0xfa                  	// #250
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZL9getTypeIDPN4llvm4TypeE>:
      28:	ldrb	w1, [x0, #8]
      2c:	mov	x2, x0
      30:	cmp	w1, #0xc
      34:	b.eq	d0 <_ZL9getTypeIDPN4llvm4TypeE+0xa8>  // b.none
      38:	b.hi	8c <_ZL9getTypeIDPN4llvm4TypeE+0x64>  // b.pmore
      3c:	cmp	w1, #0x3
      40:	mov	w0, #0x44                  	// #68
      44:	b.eq	88 <_ZL9getTypeIDPN4llvm4TypeE+0x60>  // b.none
      48:	b.ls	b4 <_ZL9getTypeIDPN4llvm4TypeE+0x8c>  // b.plast
      4c:	cmp	w1, #0xb
      50:	mov	w0, #0x55                  	// #85
      54:	b.ne	88 <_ZL9getTypeIDPN4llvm4TypeE+0x60>  // b.any
      58:	ldr	w1, [x2, #8]
      5c:	lsr	w1, w1, #8
      60:	cmp	w1, #0x10
      64:	b.eq	f8 <_ZL9getTypeIDPN4llvm4TypeE+0xd0>  // b.none
      68:	b.hi	d8 <_ZL9getTypeIDPN4llvm4TypeE+0xb0>  // b.pmore
      6c:	cmp	w1, #0x1
      70:	mov	w0, #0x6f                  	// #111
      74:	b.eq	88 <_ZL9getTypeIDPN4llvm4TypeE+0x60>  // b.none
      78:	cmp	w1, #0x8
      7c:	mov	w0, #0x4e                  	// #78
      80:	mov	w1, #0x42                  	// #66
      84:	csel	w0, w0, w1, ne  // ne = any
      88:	ret
      8c:	cmp	w1, #0xe
      90:	mov	w0, #0x41                  	// #65
      94:	b.eq	88 <_ZL9getTypeIDPN4llvm4TypeE+0x60>  // b.none
      98:	cmp	w1, #0xf
      9c:	mov	w0, #0x50                  	// #80
      a0:	b.eq	88 <_ZL9getTypeIDPN4llvm4TypeE+0x60>  // b.none
      a4:	cmp	w1, #0xd
      a8:	cset	w0, ne  // ne = any
      ac:	add	w0, w0, #0x54
      b0:	ret
      b4:	mov	w0, #0x56                  	// #86
      b8:	cbz	w1, 88 <_ZL9getTypeIDPN4llvm4TypeE+0x60>
      bc:	cmp	w1, #0x2
      c0:	mov	w0, #0x55                  	// #85
      c4:	mov	w1, #0x46                  	// #70
      c8:	csel	w0, w0, w1, ne  // ne = any
      cc:	ret
      d0:	mov	w0, #0x4d                  	// #77
      d4:	ret
      d8:	cmp	w1, #0x20
      dc:	mov	w0, #0x49                  	// #73
      e0:	b.eq	88 <_ZL9getTypeIDPN4llvm4TypeE+0x60>  // b.none
      e4:	cmp	w1, #0x40
      e8:	mov	w0, #0x4e                  	// #78
      ec:	mov	w1, #0x4c                  	// #76
      f0:	csel	w0, w0, w1, ne  // ne = any
      f4:	ret
      f8:	mov	w0, #0x53                  	// #83
      fc:	ret

0000000000000100 <_ZL11lle_X_abortPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     100:	stp	x29, x30, [sp, #-32]!
     104:	mov	w0, #0x6                   	// #6
     108:	mov	x29, sp
     10c:	str	x19, [sp, #16]
     110:	mov	x19, x8
     114:	bl	0 <raise>
     118:	mov	x1, x19
     11c:	mov	x0, x19
     120:	stp	xzr, xzr, [x19, #24]
     124:	mov	w3, #0x1                   	// #1
     128:	str	xzr, [x19, #40]
     12c:	str	xzr, [x1], #8
     130:	str	xzr, [x19, #8]
     134:	ldr	x19, [sp, #16]
     138:	str	w3, [x1, #8]
     13c:	ldp	x29, x30, [sp], #32
     140:	ret
     144:	nop

0000000000000148 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     148:	sub	sp, sp, #0x90
     14c:	cmp	x2, #0x9
     150:	stp	x29, x30, [sp, #16]
     154:	add	x29, sp, #0x10
     158:	stp	x19, x20, [sp, #32]
     15c:	str	x21, [sp, #48]
     160:	b.hi	208 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>  // b.pmore
     164:	mov	x19, x8
     168:	cbz	x2, 188 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x40>
     16c:	add	x2, x2, x2, lsl #1
     170:	add	x3, sp, #0x40
     174:	add	x0, x1, x2, lsl #4
     178:	ldr	x2, [x1], #48
     17c:	str	x2, [x3], #8
     180:	cmp	x1, x0
     184:	b.ne	178 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x30>  // b.any
     188:	mov	x20, x19
     18c:	stp	xzr, xzr, [x19, #24]
     190:	mov	w2, #0x1                   	// #1
     194:	str	xzr, [x19, #40]
     198:	str	xzr, [x20], #8
     19c:	str	xzr, [x19, #8]
     1a0:	ldp	x0, x1, [sp, #64]
     1a4:	str	w2, [x20, #8]
     1a8:	ldp	x3, x4, [sp, #88]
     1ac:	ldp	x5, x6, [sp, #104]
     1b0:	ldp	x7, x8, [sp, #120]
     1b4:	str	x8, [sp]
     1b8:	ldr	x2, [sp, #80]
     1bc:	ldr	x8, [sp, #136]
     1c0:	str	x8, [sp, #8]
     1c4:	bl	0 <__isoc99_sscanf>
     1c8:	mov	w21, w0
     1cc:	ldr	w1, [x19, #16]
     1d0:	cmp	w1, #0x40
     1d4:	b.ls	1e4 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>  // b.plast
     1d8:	ldr	x0, [x19, #8]
     1dc:	cbz	x0, 1e4 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     1e0:	bl	0 <_ZdaPv>
     1e4:	str	x21, [x19, #8]
     1e8:	mov	w1, #0x20                  	// #32
     1ec:	mov	x0, x19
     1f0:	ldp	x29, x30, [sp, #16]
     1f4:	ldr	x21, [sp, #48]
     1f8:	str	w1, [x20, #8]
     1fc:	ldp	x19, x20, [sp, #32]
     200:	add	sp, sp, #0x90
     204:	ret
     208:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     20c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     210:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     214:	add	x3, x3, #0x0
     218:	add	x1, x1, #0x0
     21c:	add	x0, x0, #0x0
     220:	mov	w2, #0x1af                 	// #431
     224:	bl	0 <__assert_fail>

0000000000000228 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     228:	sub	sp, sp, #0x90
     22c:	cmp	x2, #0x9
     230:	stp	x29, x30, [sp, #16]
     234:	add	x29, sp, #0x10
     238:	stp	x19, x20, [sp, #32]
     23c:	str	x21, [sp, #48]
     240:	b.hi	2e8 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>  // b.pmore
     244:	mov	x19, x8
     248:	cbz	x2, 268 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x40>
     24c:	add	x2, x2, x2, lsl #1
     250:	add	x3, sp, #0x40
     254:	add	x0, x1, x2, lsl #4
     258:	ldr	x2, [x1], #48
     25c:	str	x2, [x3], #8
     260:	cmp	x1, x0
     264:	b.ne	258 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x30>  // b.any
     268:	mov	x20, x19
     26c:	stp	xzr, xzr, [x19, #24]
     270:	mov	w2, #0x1                   	// #1
     274:	str	xzr, [x19, #40]
     278:	str	xzr, [x20], #8
     27c:	str	xzr, [x19, #8]
     280:	ldp	x0, x1, [sp, #64]
     284:	str	w2, [x20, #8]
     288:	ldp	x3, x4, [sp, #88]
     28c:	ldp	x5, x6, [sp, #104]
     290:	ldp	x7, x8, [sp, #120]
     294:	str	x8, [sp]
     298:	ldr	x2, [sp, #80]
     29c:	ldr	x8, [sp, #136]
     2a0:	str	x8, [sp, #8]
     2a4:	bl	0 <__isoc99_scanf>
     2a8:	mov	w21, w0
     2ac:	ldr	w1, [x19, #16]
     2b0:	cmp	w1, #0x40
     2b4:	b.ls	2c4 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>  // b.plast
     2b8:	ldr	x0, [x19, #8]
     2bc:	cbz	x0, 2c4 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     2c0:	bl	0 <_ZdaPv>
     2c4:	str	x21, [x19, #8]
     2c8:	mov	w1, #0x20                  	// #32
     2cc:	mov	x0, x19
     2d0:	ldp	x29, x30, [sp, #16]
     2d4:	ldr	x21, [sp, #48]
     2d8:	str	w1, [x20, #8]
     2dc:	ldp	x19, x20, [sp, #32]
     2e0:	add	sp, sp, #0x90
     2e4:	ret
     2e8:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     2ec:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     2f0:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     2f4:	add	x3, x3, #0x0
     2f8:	add	x1, x1, #0x0
     2fc:	add	x0, x0, #0x0
     300:	mov	w2, #0x1bd                 	// #445
     304:	bl	0 <__assert_fail>

0000000000000308 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     308:	stp	x29, x30, [sp, #-64]!
     30c:	cmp	x2, #0x1
     310:	mov	x29, sp
     314:	stp	x19, x20, [sp, #16]
     318:	stp	x21, x22, [sp, #32]
     31c:	str	x23, [sp, #48]
     320:	b.ls	414 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x10c>  // b.plast
     324:	mov	x19, x1
     328:	add	x0, x1, #0x38
     32c:	ldr	w1, [x1, #64]
     330:	mov	x23, x2
     334:	mov	x21, x8
     338:	cmp	w1, #0x40
     33c:	ldr	x20, [x19, #56]
     340:	b.ls	3e8 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe0>  // b.plast
     344:	sub	w3, w1, #0x1
     348:	mov	x2, #0x1                   	// #1
     34c:	add	w22, w1, #0x1
     350:	lsr	w4, w3, #6
     354:	lsl	x1, x2, x3
     358:	ldr	x2, [x20, x4, lsl #3]
     35c:	tst	x1, x2
     360:	b.eq	408 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x100>  // b.none
     364:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
     368:	sub	w1, w22, w0
     36c:	cmp	w1, #0x40
     370:	b.hi	438 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x130>  // b.pmore
     374:	ldr	x20, [x20]
     378:	cmp	x23, #0x2
     37c:	b.eq	414 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x10c>  // b.none
     380:	ldr	w22, [x19, #112]
     384:	cmp	w22, #0x40
     388:	b.ls	400 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xf8>  // b.plast
     38c:	add	x0, x19, #0x68
     390:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     394:	sub	w22, w22, w0
     398:	cmp	w22, #0x40
     39c:	b.hi	418 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x110>  // b.pmore
     3a0:	ldr	x0, [x19, #104]
     3a4:	ldr	x2, [x0]
     3a8:	mov	w1, w20
     3ac:	ldr	x0, [x19]
     3b0:	bl	0 <memset>
     3b4:	str	xzr, [x21, #24]
     3b8:	mov	x1, x21
     3bc:	stp	xzr, xzr, [x21, #32]
     3c0:	mov	x0, x21
     3c4:	mov	w3, #0x1                   	// #1
     3c8:	str	xzr, [x1], #8
     3cc:	ldp	x19, x20, [sp, #16]
     3d0:	ldr	x23, [sp, #48]
     3d4:	str	xzr, [x21, #8]
     3d8:	ldp	x21, x22, [sp, #32]
     3dc:	str	w3, [x1, #8]
     3e0:	ldp	x29, x30, [sp], #64
     3e4:	ret
     3e8:	cbz	w1, 458 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>
     3ec:	mov	w0, #0x40                  	// #64
     3f0:	sub	w1, w0, w1
     3f4:	lsl	x20, x20, x1
     3f8:	asr	x20, x20, x1
     3fc:	b	378 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x70>
     400:	ldr	x2, [x19, #104]
     404:	b	3a8 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     408:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     40c:	sub	w1, w22, w0
     410:	b	36c <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x64>
     414:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     418:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     41c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     420:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     424:	add	x3, x3, #0x0
     428:	add	x1, x1, #0x0
     42c:	add	x0, x0, #0x0
     430:	mov	w2, #0x657                 	// #1623
     434:	bl	0 <__assert_fail>
     438:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     43c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     440:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     444:	add	x3, x3, #0x0
     448:	add	x1, x1, #0x0
     44c:	add	x0, x0, #0x0
     450:	mov	w2, #0x663                 	// #1635
     454:	bl	0 <__assert_fail>
     458:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     45c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     460:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     464:	add	x3, x3, #0x0
     468:	add	x1, x1, #0x0
     46c:	add	x0, x0, #0x0
     470:	mov	w2, #0x307                 	// #775
     474:	bl	0 <__assert_fail>

0000000000000478 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     478:	stp	x29, x30, [sp, #-64]!
     47c:	mov	x29, sp
     480:	stp	x19, x20, [sp, #16]
     484:	stp	x21, x22, [sp, #32]
     488:	str	x23, [sp, #48]
     48c:	cbz	x2, 528 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb0>
     490:	mov	x19, x1
     494:	cmp	x2, #0x1
     498:	ldr	x22, [x1]
     49c:	b.ls	528 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb0>  // b.plast
     4a0:	cmp	x2, #0x2
     4a4:	ldr	x23, [x1, #48]
     4a8:	b.eq	528 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb0>  // b.none
     4ac:	ldr	w21, [x1, #112]
     4b0:	mov	x20, x8
     4b4:	cmp	w21, #0x40
     4b8:	b.ls	520 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa8>  // b.plast
     4bc:	add	x0, x1, #0x68
     4c0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     4c4:	sub	w21, w21, w0
     4c8:	mov	x2, #0xffffffffffffffff    	// #-1
     4cc:	cmp	w21, #0x40
     4d0:	b.ls	514 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>  // b.plast
     4d4:	mov	x1, x23
     4d8:	mov	x0, x22
     4dc:	bl	0 <memcpy>
     4e0:	str	xzr, [x20, #24]
     4e4:	mov	x1, x20
     4e8:	stp	xzr, xzr, [x20, #32]
     4ec:	mov	x0, x20
     4f0:	mov	w3, #0x1                   	// #1
     4f4:	str	xzr, [x1], #8
     4f8:	ldp	x21, x22, [sp, #32]
     4fc:	ldr	x23, [sp, #48]
     500:	str	xzr, [x20, #8]
     504:	ldp	x19, x20, [sp, #16]
     508:	str	w3, [x1, #8]
     50c:	ldp	x29, x30, [sp], #64
     510:	ret
     514:	ldr	x0, [x19, #104]
     518:	ldr	x2, [x0]
     51c:	b	4d4 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c>
     520:	ldr	x2, [x1, #104]
     524:	b	4d4 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c>
     528:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     52c:	nop

0000000000000530 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     530:	sub	sp, sp, #0x4d0
     534:	stp	x29, x30, [sp]
     538:	mov	x29, sp
     53c:	stp	x19, x20, [sp, #16]
     540:	stp	x21, x22, [sp, #32]
     544:	stp	x23, x24, [sp, #48]
     548:	stp	x25, x26, [sp, #64]
     54c:	stp	x27, x28, [sp, #80]
     550:	cbz	x2, b30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>
     554:	mov	x23, x1
     558:	mov	x22, x2
     55c:	cmp	x2, #0x1
     560:	ldr	x19, [x1]
     564:	b.ls	b30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     568:	mov	x1, x8
     56c:	mov	w2, #0x1                   	// #1
     570:	ldr	x28, [x23, #48]
     574:	stp	xzr, xzr, [x8, #24]
     578:	mov	x20, x8
     57c:	str	xzr, [x8, #40]
     580:	mov	x0, x28
     584:	str	xzr, [x1], #8
     588:	adrp	x26, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     58c:	str	xzr, [x8, #8]
     590:	mov	x21, #0x5                   	// #5
     594:	str	w2, [x1, #8]
     598:	add	x27, sp, #0xf8
     59c:	str	x1, [sp, #96]
     5a0:	add	x25, sp, #0xe8
     5a4:	bl	0 <strlen>
     5a8:	mov	w0, w0
     5ac:	add	x1, x26, #0x0
     5b0:	str	x1, [sp, #104]
     5b4:	ldr	x1, [sp, #96]
     5b8:	str	x0, [x20, #8]
     5bc:	mov	w24, #0x2                   	// #2
     5c0:	mov	w0, #0x20                  	// #32
     5c4:	movk	x21, #0x7, lsl #32
     5c8:	str	w0, [x1, #8]
     5cc:	ldrb	w26, [x28]
     5d0:	cmp	w26, #0x25
     5d4:	b.eq	610 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe0>  // b.none
     5d8:	cmp	w26, #0x5c
     5dc:	b.eq	8fc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3cc>  // b.none
     5e0:	cbz	w26, 8d8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3a8>
     5e4:	add	x3, x19, #0x1
     5e8:	add	x28, x28, #0x1
     5ec:	mov	w2, w26
     5f0:	mov	x0, x19
     5f4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     5f8:	mov	x19, x3
     5fc:	add	x1, x1, #0x0
     600:	bl	0 <sprintf>
     604:	ldrb	w26, [x28]
     608:	cmp	w26, #0x25
     60c:	b.ne	5d8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa8>  // b.any
     610:	mov	w1, #0x0                   	// #0
     614:	mov	x0, x27
     618:	mov	x2, #0x3d8                 	// #984
     61c:	stp	xzr, xzr, [sp, #128]
     620:	stp	xzr, xzr, [sp, #144]
     624:	stp	xzr, xzr, [sp, #160]
     628:	stp	xzr, xzr, [sp, #176]
     62c:	stp	xzr, xzr, [sp, #192]
     630:	stp	xzr, xzr, [sp, #208]
     634:	str	wzr, [sp, #224]
     638:	stp	xzr, xzr, [sp, #232]
     63c:	bl	0 <memset>
     640:	ldrb	w3, [x28, #1]
     644:	ldrb	w1, [x28], #2
     648:	sub	w0, w3, #0x63
     64c:	strb	w1, [sp, #128]
     650:	strb	w3, [sp, #129]
     654:	cmp	w3, #0x69
     658:	and	w0, w0, #0xff
     65c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
     660:	b.ls	ae4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5b4>  // b.plast
     664:	cmp	w3, #0x75
     668:	mov	w8, #0x6f                  	// #111
     66c:	ccmp	w3, w8, #0x4, ne  // ne = any
     670:	b.eq	ae4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5b4>  // b.none
     674:	and	w4, w3, #0xffffffdf
     678:	add	x6, sp, #0x80
     67c:	cmp	w4, #0x58
     680:	b.eq	af4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c4>  // b.none
     684:	mov	w5, w26
     688:	add	x7, x6, #0x2
     68c:	mov	w2, #0x0                   	// #0
     690:	b	6e8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b8>
     694:	cmp	w3, #0x70
     698:	b.eq	a30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x500>  // b.none
     69c:	cmp	w3, #0x73
     6a0:	ccmp	w3, w5, #0x4, ne  // ne = any
     6a4:	b.eq	700 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d0>  // b.none
     6a8:	ldrb	w3, [x28], #1
     6ac:	and	w4, w4, #0xff
     6b0:	cmp	w4, #0x4c
     6b4:	strb	w3, [x7], #1
     6b8:	sub	w0, w3, #0x63
     6bc:	cinc	w2, w2, eq  // eq = none
     6c0:	and	w0, w0, #0xff
     6c4:	cmp	w3, #0x69
     6c8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
     6cc:	b.ls	700 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d0>  // b.plast
     6d0:	cmp	w3, #0x75
     6d4:	ccmp	w3, w8, #0x4, ne  // ne = any
     6d8:	b.eq	700 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d0>  // b.none
     6dc:	and	w4, w3, #0xffffffdf
     6e0:	cmp	w4, #0x58
     6e4:	b.eq	744 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x214>  // b.none
     6e8:	and	w0, w3, #0xfffffffd
     6ec:	sub	w1, w3, #0x65
     6f0:	cmp	w0, #0x45
     6f4:	and	w1, w1, #0xff
     6f8:	ccmp	w1, #0x2, #0x0, ne  // ne = any
     6fc:	b.hi	694 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x164>  // b.pmore
     700:	strb	wzr, [x7]
     704:	cmp	w3, #0x67
     708:	b.hi	750 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x220>  // b.pmore
     70c:	cmp	w3, #0x44
     710:	b.hi	82c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2fc>  // b.pmore
     714:	cmp	w3, #0x25
     718:	b.ne	77c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x24c>  // b.any
     71c:	strh	w3, [x25]
     720:	mov	x0, x25
     724:	bl	0 <strlen>
     728:	mov	x3, x0
     72c:	mov	x1, x25
     730:	mov	x0, x19
     734:	add	x2, x3, #0x1
     738:	add	x19, x19, x3
     73c:	bl	0 <memcpy>
     740:	b	5cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     744:	strb	wzr, [x7]
     748:	cmp	w3, #0x67
     74c:	b.ls	82c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2fc>  // b.plast
     750:	sub	w3, w3, #0x69
     754:	and	w1, w3, #0xff
     758:	cmp	w1, #0xf
     75c:	b.hi	77c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x24c>  // b.pmore
     760:	mov	x3, #0x1                   	// #1
     764:	mov	x0, #0x9041                	// #36929
     768:	lsl	x3, x3, x1
     76c:	tst	x3, x0
     770:	b.ne	9b8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x488>  // b.any
     774:	tbnz	w3, #10, 920 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3f0>
     778:	tbnz	w3, #7, 920 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3f0>
     77c:	bl	0 <_ZN4llvm4errsEv>
     780:	mov	x2, x0
     784:	ldp	x1, x3, [x0, #16]
     788:	sub	x1, x1, x3
     78c:	cmp	x1, #0x15
     790:	b.ls	a98 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x568>  // b.plast
     794:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     798:	add	x0, x0, #0x0
     79c:	ldp	x4, x5, [x0]
     7a0:	stp	x4, x5, [x3]
     7a4:	ldur	x0, [x0, #14]
     7a8:	stur	x0, [x3, #14]
     7ac:	ldr	x0, [x2, #24]
     7b0:	add	x0, x0, #0x16
     7b4:	str	x0, [x2, #24]
     7b8:	ldr	x3, [x2, #16]
     7bc:	ldrb	w1, [x28]
     7c0:	cmp	x3, x0
     7c4:	b.ls	ad4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5a4>  // b.plast
     7c8:	add	x3, x0, #0x1
     7cc:	str	x3, [x2, #24]
     7d0:	strb	w1, [x0]
     7d4:	ldp	x0, x1, [x2, #16]
     7d8:	sub	x0, x0, x1
     7dc:	cmp	x0, #0x2
     7e0:	b.ls	abc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x58c>  // b.plast
     7e4:	ldr	x0, [sp, #104]
     7e8:	add	w24, w24, #0x1
     7ec:	ldrh	w3, [x0]
     7f0:	ldrb	w0, [x0, #2]
     7f4:	strh	w3, [x1]
     7f8:	strb	w0, [x1, #2]
     7fc:	ldr	x0, [x2, #24]
     800:	add	x0, x0, #0x3
     804:	str	x0, [x2, #24]
     808:	mov	x0, x25
     80c:	bl	0 <strlen>
     810:	mov	x3, x0
     814:	mov	x1, x25
     818:	mov	x0, x19
     81c:	add	x2, x3, #0x1
     820:	add	x19, x19, x3
     824:	bl	0 <memcpy>
     828:	b	5cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     82c:	sub	w3, w3, #0x45
     830:	mov	x1, #0x1                   	// #1
     834:	lsl	x3, x1, x3
     838:	tst	x3, x21
     83c:	b.ne	96c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x43c>  // b.any
     840:	mov	x0, #0x80080000            	// #2148007936
     844:	tst	x3, x0
     848:	b.ne	9b8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x488>  // b.any
     84c:	tbz	w3, #30, 77c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x24c>
     850:	cmp	x22, w24, uxtw
     854:	add	w3, w24, #0x1
     858:	b.ls	b30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     85c:	mov	w0, #0x30                  	// #48
     860:	umaddl	x24, w24, w0, x23
     864:	ldr	w1, [x24, #16]
     868:	cmp	w1, #0x40
     86c:	b.ls	a58 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x528>  // b.plast
     870:	add	x0, x24, #0x8
     874:	str	w3, [sp, #96]
     878:	str	w1, [sp, #116]
     87c:	str	x6, [sp, #120]
     880:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     884:	ldr	w1, [sp, #116]
     888:	ldr	w3, [sp, #96]
     88c:	sub	w1, w1, w0
     890:	cmp	w1, #0x40
     894:	ldr	x6, [sp, #120]
     898:	b.hi	b34 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x604>  // b.pmore
     89c:	ldr	x0, [x24, #8]
     8a0:	ldr	x2, [x0]
     8a4:	mov	x1, x6
     8a8:	mov	w24, w3
     8ac:	mov	x0, x25
     8b0:	bl	0 <sprintf>
     8b4:	mov	x0, x25
     8b8:	bl	0 <strlen>
     8bc:	mov	x3, x0
     8c0:	mov	x1, x25
     8c4:	mov	x0, x19
     8c8:	add	x2, x3, #0x1
     8cc:	add	x19, x19, x3
     8d0:	bl	0 <memcpy>
     8d4:	b	5cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     8d8:	mov	x0, x20
     8dc:	ldp	x29, x30, [sp]
     8e0:	ldp	x19, x20, [sp, #16]
     8e4:	ldp	x21, x22, [sp, #32]
     8e8:	ldp	x23, x24, [sp, #48]
     8ec:	ldp	x25, x26, [sp, #64]
     8f0:	ldp	x27, x28, [sp, #80]
     8f4:	add	sp, sp, #0x4d0
     8f8:	ret
     8fc:	ldrb	w3, [x28, #1]
     900:	mov	w2, w26
     904:	add	x28, x28, #0x2
     908:	mov	x0, x19
     90c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     910:	add	x19, x19, #0x2
     914:	add	x1, x1, #0x0
     918:	bl	0 <sprintf>
     91c:	b	5cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     920:	cmp	x22, w24, uxtw
     924:	add	w3, w24, #0x1
     928:	b.ls	b30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     92c:	mov	w2, #0x30                  	// #48
     930:	mov	x1, x6
     934:	mov	x0, x25
     938:	umull	x2, w24, w2
     93c:	mov	w24, w3
     940:	ldr	x2, [x23, x2]
     944:	bl	0 <sprintf>
     948:	mov	x0, x25
     94c:	bl	0 <strlen>
     950:	mov	x3, x0
     954:	mov	x1, x25
     958:	mov	x0, x19
     95c:	add	x2, x3, #0x1
     960:	add	x19, x19, x3
     964:	bl	0 <memcpy>
     968:	b	5cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     96c:	cmp	x22, w24, uxtw
     970:	add	w3, w24, #0x1
     974:	b.ls	b30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     978:	mov	w2, #0x30                  	// #48
     97c:	mov	x1, x6
     980:	mov	x0, x25
     984:	umull	x2, w24, w2
     988:	mov	w24, w3
     98c:	ldr	d0, [x23, x2]
     990:	bl	0 <sprintf>
     994:	mov	x0, x25
     998:	bl	0 <strlen>
     99c:	mov	x3, x0
     9a0:	mov	x1, x25
     9a4:	mov	x0, x19
     9a8:	add	x2, x3, #0x1
     9ac:	add	x19, x19, x3
     9b0:	bl	0 <memcpy>
     9b4:	b	5cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x9c>
     9b8:	mov	w4, w24
     9bc:	add	w3, w24, #0x1
     9c0:	cbz	w2, a3c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x50c>
     9c4:	cmp	w2, #0x1
     9c8:	b.eq	b00 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5d0>  // b.none
     9cc:	cmp	x22, x4
     9d0:	b.ls	b30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     9d4:	mov	w0, #0x30                  	// #48
     9d8:	umaddl	x24, w24, w0, x23
     9dc:	ldr	w1, [x24, #16]
     9e0:	cmp	w1, #0x40
     9e4:	b.ls	ab4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x584>  // b.plast
     9e8:	add	x0, x24, #0x8
     9ec:	str	w1, [sp, #96]
     9f0:	str	w3, [sp, #116]
     9f4:	str	x6, [sp, #120]
     9f8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     9fc:	ldr	w1, [sp, #96]
     a00:	sub	w1, w1, w0
     a04:	cmp	w1, #0x40
     a08:	b.hi	b34 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x604>  // b.pmore
     a0c:	ldr	x0, [x24, #8]
     a10:	ldr	w3, [sp, #116]
     a14:	ldr	x6, [sp, #120]
     a18:	ldr	x2, [x0]
     a1c:	mov	x1, x6
     a20:	mov	w24, w3
     a24:	mov	x0, x25
     a28:	bl	0 <sprintf>
     a2c:	b	720 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1f0>
     a30:	mov	w1, #0x7                   	// #7
     a34:	strb	wzr, [x7]
     a38:	b	760 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x230>
     a3c:	cmp	x22, x4
     a40:	b.ls	b30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     a44:	mov	w0, #0x30                  	// #48
     a48:	umaddl	x24, w24, w0, x23
     a4c:	ldr	w1, [x24, #16]
     a50:	cmp	w1, #0x40
     a54:	b.hi	a60 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x530>  // b.pmore
     a58:	ldr	x2, [x24, #8]
     a5c:	b	8a4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x374>
     a60:	add	x0, x24, #0x8
     a64:	str	w1, [sp, #96]
     a68:	str	w3, [sp, #116]
     a6c:	str	x6, [sp, #120]
     a70:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     a74:	ldr	w1, [sp, #96]
     a78:	sub	w1, w1, w0
     a7c:	cmp	w1, #0x40
     a80:	b.hi	b34 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x604>  // b.pmore
     a84:	ldr	x0, [x24, #8]
     a88:	ldr	w3, [sp, #116]
     a8c:	ldr	x6, [sp, #120]
     a90:	ldr	x2, [x0]
     a94:	b	8a4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x374>
     a98:	mov	x2, #0x16                  	// #22
     a9c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     aa0:	add	x1, x1, #0x0
     aa4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     aa8:	mov	x2, x0
     aac:	ldr	x0, [x0, #24]
     ab0:	b	7b8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x288>
     ab4:	ldr	x2, [x24, #8]
     ab8:	b	a1c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4ec>
     abc:	ldr	x1, [sp, #104]
     ac0:	mov	x0, x2
     ac4:	add	w24, w24, #0x1
     ac8:	mov	x2, #0x3                   	// #3
     acc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ad0:	b	808 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2d8>
     ad4:	mov	x0, x2
     ad8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     adc:	mov	x2, x0
     ae0:	b	7d4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2a4>
     ae4:	add	x6, sp, #0x80
     ae8:	mov	w2, #0x0                   	// #0
     aec:	add	x7, x6, #0x2
     af0:	b	700 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d0>
     af4:	add	x7, x6, #0x2
     af8:	mov	w2, #0x0                   	// #0
     afc:	b	700 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d0>
     b00:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b04:	mov	w1, #0x0                   	// #0
     b08:	str	x4, [sp, #96]
     b0c:	ldr	x0, [x0]
     b10:	str	w3, [sp, #116]
     b14:	str	x6, [sp, #120]
     b18:	add	x0, x0, #0x58
     b1c:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
     b20:	ldr	w3, [sp, #116]
     b24:	ldr	x4, [sp, #96]
     b28:	ldr	x6, [sp, #120]
     b2c:	b	9cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x49c>
     b30:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b34:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b38:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b3c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b40:	add	x3, x3, #0x0
     b44:	add	x1, x1, #0x0
     b48:	add	x0, x0, #0x0
     b4c:	mov	w2, #0x657                 	// #1623
     b50:	bl	0 <__assert_fail>
     b54:	nop

0000000000000b58 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     b58:	stp	x29, x30, [sp, #-128]!
     b5c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b60:	mov	x29, sp
     b64:	stp	x19, x20, [sp, #16]
     b68:	stp	x21, x22, [sp, #32]
     b6c:	stp	x23, x24, [sp, #48]
     b70:	str	x25, [sp, #64]
     b74:	ldr	x21, [x0]
     b78:	cbz	x2, d08 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b0>
     b7c:	mov	x23, x1
     b80:	mov	x20, x8
     b84:	ldr	x0, [x1], #8
     b88:	str	x0, [sp, #80]
     b8c:	ldr	w0, [x1, #8]
     b90:	str	w0, [sp, #96]
     b94:	cmp	w0, #0x40
     b98:	b.hi	cfc <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1a4>  // b.pmore
     b9c:	ldr	x0, [x23, #8]
     ba0:	str	x0, [sp, #88]
     ba4:	ldp	x25, x19, [x23, #24]
     ba8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     bac:	movk	x1, #0xaaab
     bb0:	stp	xzr, xzr, [sp, #104]
     bb4:	mov	x22, #0x0                   	// #0
     bb8:	str	xzr, [sp, #120]
     bbc:	sub	x24, x19, x25
     bc0:	asr	x0, x24, #4
     bc4:	mul	x0, x0, x1
     bc8:	cbz	x0, bec <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x94>
     bcc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     bd0:	movk	x1, #0x2aa, lsl #48
     bd4:	cmp	x0, x1
     bd8:	b.hi	d0c <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b4>  // b.pmore
     bdc:	mov	x0, x24
     be0:	bl	0 <_Znwm>
     be4:	ldp	x25, x19, [x23, #24]
     be8:	mov	x22, x0
     bec:	add	x24, x22, x24
     bf0:	stp	x22, x22, [sp, #104]
     bf4:	cmp	x19, x25
     bf8:	str	x24, [sp, #120]
     bfc:	b.eq	c54 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xfc>  // b.none
     c00:	mov	x23, x25
     c04:	mov	x24, x22
     c08:	mov	x1, x23
     c0c:	mov	x0, x24
     c10:	add	x23, x23, #0x30
     c14:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     c18:	cmp	x19, x23
     c1c:	add	x24, x24, #0x30
     c20:	b.ne	c08 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb0>  // b.any
     c24:	sub	x1, x19, #0x30
     c28:	mov	x19, #0xaaab                	// #43691
     c2c:	sub	x1, x1, x25
     c30:	movk	x19, #0xaaaa, lsl #16
     c34:	movk	x19, #0xaaaa, lsl #32
     c38:	lsr	x1, x1, #4
     c3c:	movk	x19, #0xaaa, lsl #48
     c40:	mul	x1, x1, x19
     c44:	and	x1, x1, #0xfffffffffffffff
     c48:	add	x1, x1, #0x1
     c4c:	add	x1, x1, x1, lsl #1
     c50:	add	x22, x22, x1, lsl #4
     c54:	mov	x0, x21
     c58:	add	x1, sp, #0x50
     c5c:	str	x22, [sp, #112]
     c60:	bl	0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>
     c64:	ldp	x19, x21, [sp, #104]
     c68:	cmp	x19, x21
     c6c:	b.eq	ca0 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x148>  // b.none
     c70:	add	x0, x19, #0x18
     c74:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     c78:	ldr	w0, [x19, #16]
     c7c:	cmp	w0, #0x40
     c80:	b.ls	c90 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>  // b.plast
     c84:	ldr	x0, [x19, #8]
     c88:	cbz	x0, c90 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>
     c8c:	bl	0 <_ZdaPv>
     c90:	add	x19, x19, #0x30
     c94:	cmp	x21, x19
     c98:	b.ne	c70 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x118>  // b.any
     c9c:	ldr	x21, [sp, #104]
     ca0:	cbz	x21, cac <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x154>
     ca4:	mov	x0, x21
     ca8:	bl	0 <_ZdlPv>
     cac:	ldr	w0, [sp, #96]
     cb0:	cmp	w0, #0x40
     cb4:	b.ls	cc4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x16c>  // b.plast
     cb8:	ldr	x0, [sp, #88]
     cbc:	cbz	x0, cc4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x16c>
     cc0:	bl	0 <_ZdaPv>
     cc4:	mov	x1, x20
     cc8:	str	xzr, [x20, #24]
     ccc:	stp	xzr, xzr, [x20, #32]
     cd0:	mov	x0, x20
     cd4:	mov	w3, #0x1                   	// #1
     cd8:	str	xzr, [x1], #8
     cdc:	ldp	x21, x22, [sp, #32]
     ce0:	ldp	x23, x24, [sp, #48]
     ce4:	ldr	x25, [sp, #64]
     ce8:	str	xzr, [x20, #8]
     cec:	ldp	x19, x20, [sp, #16]
     cf0:	str	w3, [x1, #8]
     cf4:	ldp	x29, x30, [sp], #128
     cf8:	ret
     cfc:	add	x0, sp, #0x58
     d00:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     d04:	b	ba4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4c>
     d08:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d0c:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000000d10 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     d10:	stp	x29, x30, [sp, #-48]!
     d14:	cmp	x2, #0x1
     d18:	mov	x29, sp
     d1c:	str	x19, [sp, #16]
     d20:	b.ne	d8c <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x7c>  // b.any
     d24:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d28:	mov	x19, x8
     d2c:	ldr	x2, [x1]
     d30:	str	x2, [sp, #40]
     d34:	ldr	x0, [x0]
     d38:	add	x0, x0, #0x2d0
     d3c:	ldr	x1, [x0, #8]
     d40:	ldr	x3, [x0, #16]
     d44:	cmp	x1, x3
     d48:	b.eq	d80 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x70>  // b.none
     d4c:	str	x2, [x1], #8
     d50:	str	x1, [x0, #8]
     d54:	mov	x1, x19
     d58:	str	xzr, [x19, #24]
     d5c:	stp	xzr, xzr, [x19, #32]
     d60:	mov	x0, x19
     d64:	mov	w3, #0x1                   	// #1
     d68:	str	xzr, [x1], #8
     d6c:	str	xzr, [x19, #8]
     d70:	ldr	x19, [sp, #16]
     d74:	str	w3, [x1, #8]
     d78:	ldp	x29, x30, [sp], #48
     d7c:	ret
     d80:	add	x2, sp, #0x28
     d84:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d88:	b	d54 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x44>
     d8c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d90:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d94:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d98:	add	x3, x3, #0x0
     d9c:	add	x1, x1, #0x0
     da0:	add	x0, x0, #0x0
     da4:	mov	w2, #0x138                 	// #312
     da8:	bl	0 <__assert_fail>
     dac:	nop

0000000000000db0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
     db0:	stp	x29, x30, [sp, #-288]!
     db4:	mov	x29, sp
     db8:	stp	x19, x20, [sp, #16]
     dbc:	adrp	x20, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     dc0:	add	x4, x20, #0x0
     dc4:	mov	x19, x1
     dc8:	add	x4, x4, #0x8
     dcc:	str	x0, [x20]
     dd0:	stp	x21, x22, [sp, #32]
     dd4:	mov	x21, x8
     dd8:	stp	x23, x24, [sp, #48]
     ddc:	mov	x23, x2
     de0:	mov	x24, x3
     de4:	stp	x25, x26, [sp, #64]
     de8:	ldar	x0, [x4]
     dec:	cbz	x0, 1308 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x558>
     df0:	add	x0, x20, #0x0
     df4:	add	x0, x0, #0x8
     df8:	ldr	x25, [x0]
     dfc:	cbz	x25, 18c0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb10>
     e00:	adrp	x22, 0 <__pthread_key_create>
     e04:	ldr	x0, [x22]
     e08:	cbz	x0, e18 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x68>
     e0c:	mov	x0, x25
     e10:	bl	0 <pthread_mutex_lock>
     e14:	cbnz	w0, 18cc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb1c>
     e18:	add	x0, x20, #0x0
     e1c:	add	x0, x0, #0x20
     e20:	ldar	x1, [x0]
     e24:	cbz	x1, 12f0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x540>
     e28:	add	x0, x20, #0x0
     e2c:	add	x0, x0, #0x20
     e30:	ldr	x26, [x0]
     e34:	ldr	x0, [x26, #16]
     e38:	add	x26, x26, #0x8
     e3c:	cbz	x0, e74 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc4>
     e40:	mov	x2, x26
     e44:	nop
     e48:	ldr	x1, [x0, #32]
     e4c:	cmp	x1, x19
     e50:	b.cc	ef0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x140>  // b.lo, b.ul, b.last
     e54:	mov	x2, x0
     e58:	ldr	x0, [x0, #16]
     e5c:	cbnz	x0, e48 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x98>
     e60:	cmp	x26, x2
     e64:	b.eq	e74 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc4>  // b.none
     e68:	ldr	x0, [x2, #32]
     e6c:	cmp	x0, x19
     e70:	csel	x26, x26, x2, hi  // hi = pmore
     e74:	add	x0, x20, #0x0
     e78:	add	x0, x0, #0x20
     e7c:	ldar	x1, [x0]
     e80:	cbz	x1, f4c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x19c>
     e84:	add	x0, x20, #0x0
     e88:	add	x0, x0, #0x20
     e8c:	ldr	x0, [x0]
     e90:	add	x0, x0, #0x8
     e94:	cmp	x26, x0
     e98:	b.eq	f78 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1c8>  // b.none
     e9c:	ldr	x26, [x26, #40]
     ea0:	cbnz	x26, efc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x14c>
     ea4:	mov	x0, x19
     ea8:	bl	0 <_ZNK4llvm5Value7getNameEv>
     eac:	cmp	x1, #0x6
     eb0:	b.eq	1324 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x574>  // b.none
     eb4:	mov	x0, x19
     eb8:	stp	x27, x28, [sp, #80]
     ebc:	bl	0 <_ZNK4llvm5Value7getNameEv>
     ec0:	add	x2, sp, #0xe0
     ec4:	mov	x6, x0
     ec8:	mov	x7, x1
     ecc:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     ed0:	add	x3, x3, #0x0
     ed4:	mov	w4, #0x503                 	// #1283
     ed8:	add	x0, sp, #0x100
     edc:	mov	w1, #0x1                   	// #1
     ee0:	stp	x6, x7, [sp, #224]
     ee4:	stp	x3, x2, [sp, #256]
     ee8:	strh	w4, [sp, #272]
     eec:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
     ef0:	ldr	x0, [x0, #24]
     ef4:	cbnz	x0, e48 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x98>
     ef8:	b	e60 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb0>
     efc:	ldr	x22, [x22]
     f00:	cbz	x22, f0c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x15c>
     f04:	mov	x0, x25
     f08:	bl	0 <pthread_mutex_unlock>
     f0c:	ldr	x0, [x19, #24]
     f10:	cbz	x0, 18ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xafc>
     f14:	ldrb	w1, [x0, #8]
     f18:	cmp	w1, #0xc
     f1c:	b.ne	1898 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xae8>  // b.any
     f20:	mov	x1, x23
     f24:	mov	x2, x24
     f28:	mov	x8, x21
     f2c:	blr	x26
     f30:	mov	x0, x21
     f34:	ldp	x19, x20, [sp, #16]
     f38:	ldp	x21, x22, [sp, #32]
     f3c:	ldp	x23, x24, [sp, #48]
     f40:	ldp	x25, x26, [sp, #64]
     f44:	ldp	x29, x30, [sp], #288
     f48:	ret
     f4c:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     f50:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     f54:	add	x2, x2, #0x0
     f58:	add	x1, x1, #0x0
     f5c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
     f60:	add	x0, x20, #0x0
     f64:	add	x0, x0, #0x20
     f68:	ldr	x0, [x0]
     f6c:	add	x0, x0, #0x8
     f70:	cmp	x26, x0
     f74:	b.ne	e9c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xec>  // b.any
     f78:	add	x0, sp, #0xe0
     f7c:	str	x0, [sp, #120]
     f80:	ldr	x5, [x19, #24]
     f84:	mov	w0, #0x6c6c                	// #27756
     f88:	add	x3, sp, #0xf0
     f8c:	mov	x1, #0x4                   	// #4
     f90:	movk	w0, #0x5f65, lsl #16
     f94:	stp	x27, x28, [sp, #80]
     f98:	stp	x3, x1, [sp, #224]
     f9c:	str	w0, [sp, #240]
     fa0:	strb	wzr, [sp, #244]
     fa4:	cbz	x5, 18b0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb00>
     fa8:	ldrb	w0, [x5, #8]
     fac:	cmp	w0, #0xc
     fb0:	b.ne	189c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xaec>  // b.any
     fb4:	ldr	x0, [x5, #16]
     fb8:	mov	x4, #0x5                   	// #5
     fbc:	ldr	x0, [x0]
     fc0:	bl	28 <_ZL9getTypeIDPN4llvm4TypeE>
     fc4:	strb	w0, [sp, #244]
     fc8:	strb	wzr, [sp, #245]
     fcc:	ldr	x7, [x5, #16]
     fd0:	ldr	w26, [x5, #12]
     fd4:	str	x4, [sp, #232]
     fd8:	add	x0, x7, #0x8
     fdc:	add	x26, x7, x26, lsl #3
     fe0:	cmp	x26, x0
     fe4:	b.eq	10a4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2f4>  // b.none
     fe8:	ldr	x0, [x7, #8]
     fec:	mov	x6, #0x6                   	// #6
     ff0:	add	x28, x7, #0x10
     ff4:	str	x6, [sp, #112]
     ff8:	str	x4, [sp, #128]
     ffc:	mov	x27, #0xf                   	// #15
    1000:	bl	28 <_ZL9getTypeIDPN4llvm4TypeE>
    1004:	mov	x2, x3
    1008:	ldr	x6, [sp, #112]
    100c:	and	w5, w0, #0xff
    1010:	ldr	x1, [sp, #128]
    1014:	str	x3, [sp, #104]
    1018:	strb	w5, [x2, x1]
    101c:	cmp	x26, x28
    1020:	str	x6, [sp, #232]
    1024:	ldr	x0, [sp, #224]
    1028:	strb	wzr, [x0, x6]
    102c:	b.eq	10a4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2f4>  // b.none
    1030:	ldr	x0, [x28], #8
    1034:	bl	28 <_ZL9getTypeIDPN4llvm4TypeE>
    1038:	and	w5, w0, #0xff
    103c:	ldp	x2, x1, [sp, #224]
    1040:	ldr	x0, [sp, #104]
    1044:	cmp	x2, x0
    1048:	add	x6, x1, #0x1
    104c:	ldr	x0, [sp, #240]
    1050:	csel	x0, x0, x27, ne  // ne = any
    1054:	cmp	x6, x0
    1058:	b.ls	1018 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x268>  // b.plast
    105c:	ldr	x0, [sp, #120]
    1060:	mov	x2, #0x0                   	// #0
    1064:	mov	x4, #0x1                   	// #1
    1068:	mov	x3, #0x0                   	// #0
    106c:	str	x1, [sp, #112]
    1070:	str	w5, [sp, #128]
    1074:	str	x6, [sp, #136]
    1078:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    107c:	ldr	x1, [sp, #112]
    1080:	cmp	x26, x28
    1084:	ldr	x2, [sp, #224]
    1088:	ldr	w5, [sp, #128]
    108c:	ldr	x6, [sp, #136]
    1090:	strb	w5, [x2, x1]
    1094:	str	x6, [sp, #232]
    1098:	ldr	x0, [sp, #224]
    109c:	strb	wzr, [x0, x6]
    10a0:	b.ne	1030 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x280>  // b.any
    10a4:	add	x27, sp, #0xc8
    10a8:	mov	x0, x19
    10ac:	str	x27, [sp, #168]
    10b0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    10b4:	add	x3, sp, #0xb8
    10b8:	mov	x4, x0
    10bc:	mov	x5, x1
    10c0:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    10c4:	add	x1, x1, #0x0
    10c8:	mov	w2, #0x503                 	// #1283
    10cc:	add	x26, sp, #0x100
    10d0:	mov	x0, x27
    10d4:	mov	x8, x26
    10d8:	str	x26, [sp, #128]
    10dc:	str	x3, [sp, #160]
    10e0:	stp	x4, x5, [sp, #184]
    10e4:	stp	x1, x3, [sp, #200]
    10e8:	strh	w2, [sp, #216]
    10ec:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    10f0:	ldp	x1, x2, [sp, #256]
    10f4:	ldr	x0, [sp, #120]
    10f8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    10fc:	ldr	x0, [sp, #256]
    1100:	add	x1, x26, #0x10
    1104:	cmp	x0, x1
    1108:	b.eq	1110 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x360>  // b.none
    110c:	bl	0 <_ZdlPv>
    1110:	add	x0, x20, #0x0
    1114:	add	x0, x0, #0x8
    1118:	ldar	x1, [x0]
    111c:	cbz	x1, 14c4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x714>
    1120:	add	x0, x20, #0x0
    1124:	add	x0, x0, #0x8
    1128:	ldr	x0, [x0]
    112c:	mov	x1, x0
    1130:	str	x1, [sp, #152]
    1134:	ldr	x0, [x22]
    1138:	cbz	x0, 1148 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x398>
    113c:	mov	x0, x1
    1140:	bl	0 <pthread_mutex_lock>
    1144:	cbnz	w0, 1888 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xad8>
    1148:	add	x0, x20, #0x0
    114c:	add	x0, x0, #0x38
    1150:	ldar	x1, [x0]
    1154:	cbz	x1, 14ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6fc>
    1158:	add	x0, x20, #0x0
    115c:	add	x0, x0, #0x38
    1160:	ldr	x0, [x0]
    1164:	ldr	x3, [x0, #16]
    1168:	str	x0, [sp, #144]
    116c:	add	x0, x0, #0x8
    1170:	str	x0, [sp, #136]
    1174:	cbz	x3, 17a8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9f8>
    1178:	ldp	x27, x28, [sp, #224]
    117c:	mov	x26, x0
    1180:	ldr	x4, [x3, #40]
    1184:	cmp	x4, x28
    1188:	csel	x2, x4, x28, ls  // ls = plast
    118c:	cbz	x2, 11a8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3f8>
    1190:	ldr	x0, [x3, #32]
    1194:	mov	x1, x27
    1198:	stp	x3, x4, [sp, #104]
    119c:	bl	0 <memcmp>
    11a0:	ldp	x3, x4, [sp, #104]
    11a4:	cbnz	w0, 11c4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x414>
    11a8:	sub	x0, x4, x28
    11ac:	mov	x1, #0x7fffffff            	// #2147483647
    11b0:	cmp	x0, x1
    11b4:	b.gt	11c8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x418>
    11b8:	mov	x1, #0xffffffff80000000    	// #-2147483648
    11bc:	cmp	x0, x1
    11c0:	b.lt	147c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6cc>  // b.tstop
    11c4:	tbnz	w0, #31, 147c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6cc>
    11c8:	mov	x26, x3
    11cc:	ldr	x3, [x3, #16]
    11d0:	cbnz	x3, 1180 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3d0>
    11d4:	ldr	x0, [sp, #136]
    11d8:	cmp	x0, x26
    11dc:	b.eq	120c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x45c>  // b.none
    11e0:	ldr	x3, [x26, #40]
    11e4:	cmp	x28, x3
    11e8:	csel	x2, x28, x3, ls  // ls = plast
    11ec:	cbz	x2, 1484 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6d4>
    11f0:	ldr	x1, [x26, #32]
    11f4:	mov	x0, x27
    11f8:	str	x3, [sp, #104]
    11fc:	bl	0 <memcmp>
    1200:	ldr	x3, [sp, #104]
    1204:	cbz	w0, 1484 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6d4>
    1208:	tbz	w0, #31, 1290 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
    120c:	mov	x0, #0x48                  	// #72
    1210:	bl	0 <_Znwm>
    1214:	ldp	x5, x4, [sp, #224]
    1218:	add	x27, x0, #0x30
    121c:	str	x27, [x0, #32]
    1220:	mov	x28, x0
    1224:	add	x6, x0, #0x20
    1228:	cmn	x5, x4
    122c:	ccmp	x5, #0x0, #0x0, ne  // ne = any
    1230:	b.eq	188c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xadc>  // b.none
    1234:	str	x4, [sp, #256]
    1238:	cmp	x4, #0xf
    123c:	b.hi	175c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9ac>  // b.pmore
    1240:	cmp	x4, #0x1
    1244:	b.ne	14dc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x72c>  // b.any
    1248:	ldrb	w1, [x5]
    124c:	mov	x0, x27
    1250:	strb	w1, [x28, #48]
    1254:	str	x4, [x28, #40]
    1258:	mov	x2, x6
    125c:	strb	wzr, [x0, x4]
    1260:	mov	x1, x26
    1264:	ldr	x0, [sp, #144]
    1268:	str	xzr, [x6, #32]
    126c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1270:	mov	x26, x0
    1274:	mov	x2, x1
    1278:	cbz	x1, 178c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9dc>
    127c:	mov	x1, x0
    1280:	mov	x3, x28
    1284:	ldr	x0, [sp, #144]
    1288:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    128c:	mov	x26, x0
    1290:	ldr	x26, [x26, #64]
    1294:	cbz	x26, 151c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x76c>
    1298:	add	x0, x20, #0x0
    129c:	add	x0, x0, #0x20
    12a0:	ldar	x1, [x0]
    12a4:	cbz	x1, 1504 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x754>
    12a8:	add	x0, x20, #0x0
    12ac:	add	x0, x0, #0x20
    12b0:	ldr	x0, [x0]
    12b4:	ldr	x1, [sp, #128]
    12b8:	stp	x19, x26, [sp, #256]
    12bc:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    12c0:	ldr	x0, [x22]
    12c4:	cbz	x0, 12d0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x520>
    12c8:	ldr	x0, [sp, #152]
    12cc:	bl	0 <pthread_mutex_unlock>
    12d0:	ldr	x1, [sp, #120]
    12d4:	ldr	x0, [sp, #224]
    12d8:	add	x27, x1, #0x10
    12dc:	cmp	x0, x27
    12e0:	b.eq	14a4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6f4>  // b.none
    12e4:	bl	0 <_ZdlPv>
    12e8:	ldp	x27, x28, [sp, #80]
    12ec:	b	ea0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf0>
    12f0:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    12f4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    12f8:	add	x2, x2, #0x0
    12fc:	add	x1, x1, #0x0
    1300:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1304:	b	e28 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x78>
    1308:	mov	x0, x4
    130c:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1310:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1314:	add	x2, x2, #0x0
    1318:	add	x1, x1, #0x0
    131c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1320:	b	df0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x40>
    1324:	ldr	w2, [x0]
    1328:	mov	w1, #0x5f5f                	// #24415
    132c:	movk	w1, #0x616d, lsl #16
    1330:	cmp	w2, w1
    1334:	b.ne	eb4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x104>  // b.any
    1338:	ldrh	w1, [x0, #4]
    133c:	mov	w0, #0x6e69                	// #28265
    1340:	cmp	w1, w0
    1344:	b.ne	eb4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x104>  // b.any
    1348:	bl	0 <_ZN4llvm4errsEv>
    134c:	mov	x20, x0
    1350:	ldp	x2, x1, [x0, #16]
    1354:	sub	x2, x2, x1
    1358:	cmp	x2, #0x2e
    135c:	b.ls	17dc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa2c>  // b.plast
    1360:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1364:	add	x0, x0, #0x0
    1368:	ldr	x2, [x0, #32]
    136c:	str	x2, [x1, #32]
    1370:	ldp	x2, x3, [x0]
    1374:	stp	x2, x3, [x1]
    1378:	ldp	x2, x3, [x0, #16]
    137c:	stp	x2, x3, [x1, #16]
    1380:	ldur	x0, [x0, #39]
    1384:	stur	x0, [x1, #39]
    1388:	ldr	x0, [x20, #24]
    138c:	add	x0, x0, #0x2f
    1390:	str	x0, [x20, #24]
    1394:	ldr	x0, [x19]
    1398:	cbz	x0, 1864 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xab4>
    139c:	ldrb	w1, [x0, #8]
    13a0:	cmp	w1, #0xf
    13a4:	b.ne	1840 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa90>  // b.any
    13a8:	mov	x1, x20
    13ac:	mov	w3, #0x0                   	// #0
    13b0:	mov	w2, #0x0                   	// #0
    13b4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    13b8:	ldp	x0, x1, [x20, #16]
    13bc:	sub	x0, x0, x1
    13c0:	cmp	x0, #0x7
    13c4:	b.ls	17c4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa14>  // b.plast
    13c8:	mov	x0, #0x5f20                	// #24352
    13cc:	movk	x0, #0x6d5f, lsl #16
    13d0:	movk	x0, #0x6961, lsl #32
    13d4:	movk	x0, #0xa6e, lsl #48
    13d8:	str	x0, [x1]
    13dc:	ldr	x0, [x20, #24]
    13e0:	add	x0, x0, #0x8
    13e4:	str	x0, [x20, #24]
    13e8:	bl	0 <_ZN4llvm4errsEv>
    13ec:	mov	x1, x0
    13f0:	ldp	x2, x3, [x0, #16]
    13f4:	sub	x2, x2, x3
    13f8:	cmp	x2, #0x31
    13fc:	b.ls	17b0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa00>  // b.plast
    1400:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1404:	add	x0, x0, #0x0
    1408:	ldp	x4, x5, [x0]
    140c:	stp	x4, x5, [x3]
    1410:	ldrh	w2, [x0, #48]
    1414:	ldp	x4, x5, [x0, #16]
    1418:	stp	x4, x5, [x3, #16]
    141c:	ldp	x4, x5, [x0, #32]
    1420:	stp	x4, x5, [x3, #32]
    1424:	strh	w2, [x3, #48]
    1428:	ldr	x0, [x1, #24]
    142c:	add	x0, x0, #0x32
    1430:	str	x0, [x1, #24]
    1434:	mov	x1, x21
    1438:	stp	xzr, xzr, [x21, #24]
    143c:	mov	w2, #0x1                   	// #1
    1440:	str	xzr, [x21, #40]
    1444:	ldr	x22, [x22]
    1448:	str	xzr, [x1], #8
    144c:	str	xzr, [x21, #8]
    1450:	str	w2, [x1, #8]
    1454:	cbz	x22, f30 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x180>
    1458:	mov	x0, x25
    145c:	bl	0 <pthread_mutex_unlock>
    1460:	mov	x0, x21
    1464:	ldp	x19, x20, [sp, #16]
    1468:	ldp	x21, x22, [sp, #32]
    146c:	ldp	x23, x24, [sp, #48]
    1470:	ldp	x25, x26, [sp, #64]
    1474:	ldp	x29, x30, [sp], #288
    1478:	ret
    147c:	ldr	x3, [x3, #24]
    1480:	b	11d0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x420>
    1484:	sub	x0, x28, x3
    1488:	mov	x1, #0x7fffffff            	// #2147483647
    148c:	cmp	x0, x1
    1490:	b.gt	1290 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
    1494:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1498:	cmp	x0, x1
    149c:	b.ge	1208 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x458>  // b.tcont
    14a0:	b	120c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x45c>
    14a4:	ldp	x27, x28, [sp, #80]
    14a8:	b	ea0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf0>
    14ac:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    14b0:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    14b4:	add	x2, x2, #0x0
    14b8:	add	x1, x1, #0x0
    14bc:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    14c0:	b	1158 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3a8>
    14c4:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    14c8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    14cc:	add	x2, x2, #0x0
    14d0:	add	x1, x1, #0x0
    14d4:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    14d8:	b	1120 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x370>
    14dc:	mov	x0, x27
    14e0:	cbz	x4, 1254 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4a4>
    14e4:	mov	x2, x4
    14e8:	mov	x1, x5
    14ec:	str	x6, [sp, #104]
    14f0:	bl	0 <memcpy>
    14f4:	ldr	x0, [x28, #32]
    14f8:	ldr	x6, [sp, #104]
    14fc:	ldr	x4, [sp, #256]
    1500:	b	1254 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4a4>
    1504:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1508:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    150c:	add	x2, x2, #0x0
    1510:	add	x1, x1, #0x0
    1514:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1518:	b	12a8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4f8>
    151c:	add	x0, x20, #0x0
    1520:	add	x0, x0, #0x38
    1524:	ldar	x1, [x0]
    1528:	cbz	x1, 17f4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa44>
    152c:	add	x0, x20, #0x0
    1530:	add	x0, x0, #0x38
    1534:	ldr	x26, [x0]
    1538:	mov	x0, x19
    153c:	str	x26, [sp, #144]
    1540:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1544:	mov	x4, x0
    1548:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    154c:	add	x2, x0, #0x0
    1550:	str	x2, [sp, #200]
    1554:	mov	x5, x1
    1558:	ldr	x8, [sp, #128]
    155c:	mov	w1, #0x503                 	// #1283
    1560:	ldr	x2, [sp, #160]
    1564:	add	x27, x26, #0x8
    1568:	ldr	x0, [sp, #168]
    156c:	str	x27, [sp, #136]
    1570:	stp	x4, x5, [sp, #184]
    1574:	str	x2, [sp, #208]
    1578:	strh	w1, [sp, #216]
    157c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1580:	ldr	x3, [x26, #16]
    1584:	cbz	x3, 1834 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa84>
    1588:	ldp	x28, x26, [sp, #256]
    158c:	str	x27, [sp, #112]
    1590:	ldr	x27, [x3, #40]
    1594:	cmp	x27, x26
    1598:	csel	x2, x27, x26, ls  // ls = plast
    159c:	cbz	x2, 15b8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x808>
    15a0:	ldr	x0, [x3, #32]
    15a4:	mov	x1, x28
    15a8:	str	x3, [sp, #104]
    15ac:	bl	0 <memcmp>
    15b0:	ldr	x3, [sp, #104]
    15b4:	cbnz	w0, 15d4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x824>
    15b8:	sub	x0, x27, x26
    15bc:	mov	x1, #0x7fffffff            	// #2147483647
    15c0:	cmp	x0, x1
    15c4:	b.gt	15d8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x828>
    15c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
    15cc:	cmp	x0, x1
    15d0:	b.lt	1754 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9a4>  // b.tstop
    15d4:	tbnz	w0, #31, 1754 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9a4>
    15d8:	str	x3, [sp, #112]
    15dc:	ldr	x3, [x3, #16]
    15e0:	cbnz	x3, 1590 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7e0>
    15e4:	ldr	x0, [sp, #112]
    15e8:	ldr	x1, [sp, #136]
    15ec:	cmp	x1, x0
    15f0:	b.eq	1634 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x884>  // b.none
    15f4:	ldr	x27, [x0, #40]
    15f8:	cmp	x26, x27
    15fc:	csel	x2, x26, x27, ls  // ls = plast
    1600:	cbz	x2, 1614 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x864>
    1604:	ldr	x1, [x0, #32]
    1608:	mov	x0, x28
    160c:	bl	0 <memcmp>
    1610:	cbnz	w0, 1630 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x880>
    1614:	sub	x0, x26, x27
    1618:	mov	x1, #0x7fffffff            	// #2147483647
    161c:	cmp	x0, x1
    1620:	b.gt	16c4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x914>
    1624:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1628:	cmp	x0, x1
    162c:	b.lt	1634 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x884>  // b.tstop
    1630:	tbz	w0, #31, 16c4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x914>
    1634:	mov	x0, #0x48                  	// #72
    1638:	bl	0 <_Znwm>
    163c:	mov	x28, x0
    1640:	add	x3, x0, #0x30
    1644:	ldr	x1, [sp, #128]
    1648:	ldr	x0, [sp, #256]
    164c:	str	x3, [x28, #32]
    1650:	add	x1, x1, #0x10
    1654:	cmp	x0, x1
    1658:	b.eq	1828 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa78>  // b.none
    165c:	ldr	x1, [sp, #272]
    1660:	str	x0, [x28, #32]
    1664:	str	x1, [x28, #48]
    1668:	add	x2, x28, #0x20
    166c:	str	x3, [sp, #104]
    1670:	ldr	x0, [sp, #264]
    1674:	str	x0, [x28, #40]
    1678:	ldr	x1, [sp, #112]
    167c:	str	xzr, [x2, #32]
    1680:	ldr	x0, [sp, #128]
    1684:	strb	wzr, [sp, #272]
    1688:	ldr	x26, [sp, #144]
    168c:	add	x0, x0, #0x10
    1690:	stp	x0, xzr, [sp, #256]
    1694:	mov	x0, x26
    1698:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    169c:	str	x0, [sp, #112]
    16a0:	mov	x2, x1
    16a4:	ldr	x3, [sp, #104]
    16a8:	cbz	x1, 180c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa5c>
    16ac:	mov	x1, x0
    16b0:	mov	x3, x28
    16b4:	mov	x0, x26
    16b8:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    16bc:	str	x0, [sp, #112]
    16c0:	ldr	x28, [sp, #256]
    16c4:	ldr	x0, [sp, #128]
    16c8:	add	x0, x0, #0x10
    16cc:	cmp	x28, x0
    16d0:	ldr	x0, [sp, #112]
    16d4:	ldr	x26, [x0, #64]
    16d8:	b.eq	16e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x934>  // b.none
    16dc:	mov	x0, x28
    16e0:	bl	0 <_ZdlPv>
    16e4:	cbnz	x26, 1298 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e8>
    16e8:	mov	x0, x19
    16ec:	bl	0 <_ZNK4llvm5Value7getNameEv>
    16f0:	mov	x4, x0
    16f4:	mov	x5, x1
    16f8:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    16fc:	add	x1, x0, #0x0
    1700:	str	x1, [sp, #200]
    1704:	mov	w2, #0x503                 	// #1283
    1708:	ldr	x1, [sp, #160]
    170c:	stp	x4, x5, [sp, #184]
    1710:	ldr	x0, [sp, #168]
    1714:	str	x1, [sp, #208]
    1718:	ldr	x26, [sp, #128]
    171c:	strh	w2, [sp, #216]
    1720:	mov	x8, x26
    1724:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1728:	ldr	x0, [sp, #256]
    172c:	bl	0 <_ZN4llvm3sys14DynamicLibrary24SearchForAddressOfSymbolEPKc>
    1730:	ldr	x2, [sp, #256]
    1734:	add	x1, x26, #0x10
    1738:	mov	x26, x0
    173c:	cmp	x2, x1
    1740:	b.eq	174c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x99c>  // b.none
    1744:	mov	x0, x2
    1748:	bl	0 <_ZdlPv>
    174c:	cbz	x26, 12c0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x510>
    1750:	b	1298 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e8>
    1754:	ldr	x3, [x3, #24]
    1758:	b	15e0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x830>
    175c:	ldr	x1, [sp, #128]
    1760:	mov	x0, x6
    1764:	mov	x2, #0x0                   	// #0
    1768:	stp	x6, x5, [sp, #104]
    176c:	str	x4, [sp, #136]
    1770:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1774:	ldr	x1, [sp, #256]
    1778:	str	x0, [x28, #32]
    177c:	str	x1, [x28, #48]
    1780:	ldp	x6, x5, [sp, #104]
    1784:	ldr	x4, [sp, #136]
    1788:	b	14e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x734>
    178c:	ldr	x0, [x28, #32]
    1790:	cmp	x27, x0
    1794:	b.eq	179c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9ec>  // b.none
    1798:	bl	0 <_ZdlPv>
    179c:	mov	x0, x28
    17a0:	bl	0 <_ZdlPv>
    17a4:	b	1290 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
    17a8:	ldr	x26, [sp, #136]
    17ac:	b	120c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x45c>
    17b0:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17b4:	mov	x2, #0x32                  	// #50
    17b8:	add	x1, x1, #0x0
    17bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    17c0:	b	1434 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x684>
    17c4:	mov	x0, x20
    17c8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17cc:	mov	x2, #0x8                   	// #8
    17d0:	add	x1, x1, #0x0
    17d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    17d8:	b	13e8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x638>
    17dc:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17e0:	mov	x2, #0x2f                  	// #47
    17e4:	add	x1, x1, #0x0
    17e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    17ec:	mov	x20, x0
    17f0:	b	1394 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5e4>
    17f4:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17f8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17fc:	add	x2, x2, #0x0
    1800:	add	x1, x1, #0x0
    1804:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1808:	b	152c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x77c>
    180c:	ldr	x0, [x28, #32]
    1810:	cmp	x3, x0
    1814:	b.eq	181c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa6c>  // b.none
    1818:	bl	0 <_ZdlPv>
    181c:	mov	x0, x28
    1820:	bl	0 <_ZdlPv>
    1824:	b	16c0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x910>
    1828:	ldp	x0, x1, [sp, #272]
    182c:	stp	x0, x1, [x28, #48]
    1830:	b	1668 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8b8>
    1834:	ldr	x0, [sp, #136]
    1838:	str	x0, [sp, #112]
    183c:	b	1634 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x884>
    1840:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1844:	add	x3, x3, #0x0
    1848:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    184c:	stp	x27, x28, [sp, #80]
    1850:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1854:	add	x1, x1, #0x0
    1858:	add	x0, x0, #0x0
    185c:	mov	w2, #0x108                 	// #264
    1860:	bl	0 <__assert_fail>
    1864:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1868:	add	x3, x3, #0x0
    186c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1870:	stp	x27, x28, [sp, #80]
    1874:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1878:	add	x1, x1, #0x0
    187c:	add	x0, x0, #0x0
    1880:	mov	w2, #0x69                  	// #105
    1884:	bl	0 <__assert_fail>
    1888:	bl	0 <_ZSt20__throw_system_errori>
    188c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1890:	add	x0, x0, #0x0
    1894:	bl	0 <_ZSt19__throw_logic_errorPKc>
    1898:	stp	x27, x28, [sp, #80]
    189c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    18a0:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    18a4:	add	x3, x3, #0x0
    18a8:	b	1850 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xaa0>
    18ac:	stp	x27, x28, [sp, #80]
    18b0:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    18b4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    18b8:	add	x3, x3, #0x0
    18bc:	b	1874 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xac4>
    18c0:	mov	w0, #0x1                   	// #1
    18c4:	stp	x27, x28, [sp, #80]
    18c8:	bl	0 <_ZSt20__throw_system_errori>
    18cc:	stp	x27, x28, [sp, #80]
    18d0:	bl	0 <_ZSt20__throw_system_errori>
    18d4:	nop

00000000000018d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>:
    18d8:	stp	x29, x30, [sp, #-128]!
    18dc:	mov	x29, sp
    18e0:	stp	x19, x20, [sp, #16]
    18e4:	adrp	x20, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    18e8:	add	x0, x20, #0x0
    18ec:	add	x0, x0, #0x8
    18f0:	stp	x21, x22, [sp, #32]
    18f4:	stp	x23, x24, [sp, #48]
    18f8:	stp	x25, x26, [sp, #64]
    18fc:	stp	x27, x28, [sp, #80]
    1900:	ldar	x1, [x0]
    1904:	cbz	x1, 2ce4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x140c>
    1908:	add	x0, x20, #0x0
    190c:	add	x0, x0, #0x8
    1910:	ldr	x24, [x0]
    1914:	adrp	x21, 0 <__pthread_key_create>
    1918:	ldr	x0, [x21]
    191c:	cbz	x0, 192c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x54>
    1920:	mov	x0, x24
    1924:	bl	0 <pthread_mutex_lock>
    1928:	cbnz	w0, 3054 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x177c>
    192c:	add	x0, x20, #0x0
    1930:	add	x0, x0, #0x38
    1934:	ldar	x1, [x0]
    1938:	cbz	x1, 2cfc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1424>
    193c:	add	x0, x20, #0x0
    1940:	add	x0, x0, #0x38
    1944:	ldr	x23, [x0]
    1948:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    194c:	add	x0, x0, #0x0
    1950:	add	x19, sp, #0x60
    1954:	strb	wzr, [sp, #124]
    1958:	add	x1, x19, #0x10
    195c:	str	x1, [sp, #96]
    1960:	ldr	x3, [x0]
    1964:	str	x3, [sp, #112]
    1968:	ldr	w0, [x0, #8]
    196c:	mov	x2, #0xc                   	// #12
    1970:	str	w0, [x19, #24]
    1974:	add	x25, x23, #0x8
    1978:	ldr	x28, [x23, #16]
    197c:	str	x2, [sp, #104]
    1980:	cbz	x28, 1a8c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b4>
    1984:	mov	x27, x1
    1988:	mov	x22, x25
    198c:	nop
    1990:	ldp	x0, x26, [x28, #32]
    1994:	cmp	x26, #0xc
    1998:	b.hi	1a54 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x17c>  // b.pmore
    199c:	mov	x2, #0xfffffffffffffff4    	// #-12
    19a0:	cbnz	x26, 1a38 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x160>
    19a4:	mov	w0, w2
    19a8:	tbnz	w0, #31, 1a80 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1a8>
    19ac:	mov	x22, x28
    19b0:	ldr	x28, [x28, #16]
    19b4:	cbnz	x28, 1990 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb8>
    19b8:	cmp	x25, x22
    19bc:	b.eq	1a90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b8>  // b.none
    19c0:	ldp	x1, x25, [x22, #32]
    19c4:	cmp	x25, #0xb
    19c8:	b.ls	2e58 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1580>  // b.plast
    19cc:	add	x0, x19, #0x10
    19d0:	mov	x2, #0xc                   	// #12
    19d4:	bl	0 <memcmp>
    19d8:	cbnz	w0, 1a00 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x128>
    19dc:	mov	x26, #0xc                   	// #12
    19e0:	sub	x26, x26, x25
    19e4:	mov	x0, #0x7fffffff            	// #2147483647
    19e8:	cmp	x26, x0
    19ec:	b.gt	1a04 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12c>
    19f0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    19f4:	cmp	x26, x0
    19f8:	b.lt	1a90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b8>  // b.tstop
    19fc:	mov	w0, w26
    1a00:	tbnz	w0, #31, 1a90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b8>
    1a04:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1a08:	add	x0, x0, #0x0
    1a0c:	str	x0, [x22, #64]
    1a10:	add	x0, x20, #0x0
    1a14:	add	x0, x0, #0x38
    1a18:	ldar	x1, [x0]
    1a1c:	cbnz	x1, 1b38 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x260>
    1a20:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1a24:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1a28:	add	x2, x2, #0x0
    1a2c:	add	x1, x1, #0x0
    1a30:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1a34:	b	1b38 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x260>
    1a38:	mov	x2, x26
    1a3c:	mov	x1, x27
    1a40:	bl	0 <memcmp>
    1a44:	cbnz	w0, 19a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd0>
    1a48:	sub	x2, x26, #0xc
    1a4c:	mov	w0, w2
    1a50:	b	19a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd0>
    1a54:	mov	x1, x27
    1a58:	mov	x2, #0xc                   	// #12
    1a5c:	bl	0 <memcmp>
    1a60:	cbnz	w0, 19a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd0>
    1a64:	sub	x2, x26, #0xc
    1a68:	mov	x0, #0x7fffffff            	// #2147483647
    1a6c:	cmp	x2, x0
    1a70:	b.gt	19ac <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd4>
    1a74:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1a78:	cmp	x2, x0
    1a7c:	b.ge	19a4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcc>  // b.tcont
    1a80:	ldr	x28, [x28, #24]
    1a84:	cbnz	x28, 1990 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb8>
    1a88:	b	19b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe0>
    1a8c:	mov	x22, x25
    1a90:	mov	x0, #0x48                  	// #72
    1a94:	bl	0 <_Znwm>
    1a98:	mov	x25, x0
    1a9c:	add	x26, x0, #0x30
    1aa0:	ldr	x0, [sp, #96]
    1aa4:	add	x1, x19, #0x10
    1aa8:	str	x26, [x25, #32]
    1aac:	cmp	x0, x1
    1ab0:	b.eq	2e7c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x15a4>  // b.none
    1ab4:	ldr	x1, [sp, #112]
    1ab8:	str	x0, [x25, #32]
    1abc:	str	x1, [x25, #48]
    1ac0:	add	x2, x25, #0x20
    1ac4:	add	x3, x19, #0x10
    1ac8:	ldr	x0, [sp, #104]
    1acc:	str	x0, [x25, #40]
    1ad0:	str	xzr, [x2, #32]
    1ad4:	mov	x1, x22
    1ad8:	mov	x0, x23
    1adc:	stp	x3, xzr, [sp, #96]
    1ae0:	strb	wzr, [sp, #112]
    1ae4:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ae8:	mov	x22, x0
    1aec:	mov	x2, x1
    1af0:	cbz	x1, 2f00 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1628>
    1af4:	mov	x1, x0
    1af8:	mov	x3, x25
    1afc:	mov	x0, x23
    1b00:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b04:	mov	x22, x0
    1b08:	ldr	x0, [sp, #96]
    1b0c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b10:	add	x1, x1, #0x0
    1b14:	str	x1, [x22, #64]
    1b18:	add	x1, x19, #0x10
    1b1c:	cmp	x0, x1
    1b20:	b.eq	1b28 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x250>  // b.none
    1b24:	bl	0 <_ZdlPv>
    1b28:	add	x0, x20, #0x0
    1b2c:	add	x0, x0, #0x38
    1b30:	ldar	x1, [x0]
    1b34:	cbz	x1, 1a20 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x148>
    1b38:	add	x0, x20, #0x0
    1b3c:	add	x0, x0, #0x38
    1b40:	ldr	x23, [x0]
    1b44:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b48:	add	x0, x0, #0x0
    1b4c:	add	x1, x19, #0x10
    1b50:	str	x1, [sp, #96]
    1b54:	strb	wzr, [sp, #122]
    1b58:	mov	x2, #0xa                   	// #10
    1b5c:	ldr	x3, [x0]
    1b60:	str	x3, [sp, #112]
    1b64:	ldrh	w0, [x0, #8]
    1b68:	add	x25, x23, #0x8
    1b6c:	strh	w0, [x19, #24]
    1b70:	ldr	x28, [x23, #16]
    1b74:	str	x2, [sp, #104]
    1b78:	cbz	x28, 300c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1734>
    1b7c:	mov	x27, x1
    1b80:	mov	x22, x25
    1b84:	nop
    1b88:	ldp	x0, x26, [x28, #32]
    1b8c:	cmp	x26, #0xa
    1b90:	b.hi	1cd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x400>  // b.pmore
    1b94:	mov	x2, #0xfffffffffffffff6    	// #-10
    1b98:	cbnz	x26, 1cbc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3e4>
    1b9c:	mov	w0, w2
    1ba0:	tbnz	w0, #31, 1d08 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x430>
    1ba4:	mov	x22, x28
    1ba8:	ldr	x28, [x28, #16]
    1bac:	cbnz	x28, 1b88 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2b0>
    1bb0:	cmp	x25, x22
    1bb4:	b.eq	1bfc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x324>  // b.none
    1bb8:	ldp	x1, x25, [x22, #32]
    1bbc:	cmp	x25, #0x9
    1bc0:	b.ls	2d38 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1460>  // b.plast
    1bc4:	add	x0, x19, #0x10
    1bc8:	mov	x2, #0xa                   	// #10
    1bcc:	bl	0 <memcmp>
    1bd0:	cbnz	w0, 1bf8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x320>
    1bd4:	mov	x26, #0xa                   	// #10
    1bd8:	sub	x26, x26, x25
    1bdc:	mov	x0, #0x7fffffff            	// #2147483647
    1be0:	cmp	x26, x0
    1be4:	b.gt	1d14 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x43c>
    1be8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1bec:	cmp	x26, x0
    1bf0:	b.lt	1bfc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x324>  // b.tstop
    1bf4:	mov	w0, w26
    1bf8:	tbz	w0, #31, 1d14 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x43c>
    1bfc:	mov	x0, #0x48                  	// #72
    1c00:	bl	0 <_Znwm>
    1c04:	mov	x25, x0
    1c08:	add	x26, x0, #0x30
    1c0c:	ldr	x0, [sp, #96]
    1c10:	add	x1, x19, #0x10
    1c14:	str	x26, [x25, #32]
    1c18:	cmp	x0, x1
    1c1c:	b.eq	2f38 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1660>  // b.none
    1c20:	ldr	x1, [sp, #112]
    1c24:	str	x0, [x25, #32]
    1c28:	str	x1, [x25, #48]
    1c2c:	add	x2, x25, #0x20
    1c30:	add	x3, x19, #0x10
    1c34:	ldr	x0, [sp, #104]
    1c38:	str	x0, [x25, #40]
    1c3c:	str	xzr, [x2, #32]
    1c40:	mov	x1, x22
    1c44:	mov	x0, x23
    1c48:	stp	x3, xzr, [sp, #96]
    1c4c:	strb	wzr, [sp, #112]
    1c50:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1c54:	mov	x22, x0
    1c58:	mov	x2, x1
    1c5c:	cbz	x1, 2f1c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1644>
    1c60:	mov	x1, x0
    1c64:	mov	x3, x25
    1c68:	mov	x0, x23
    1c6c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1c70:	mov	x22, x0
    1c74:	ldr	x0, [sp, #96]
    1c78:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1c7c:	add	x1, x1, #0x0
    1c80:	str	x1, [x22, #64]
    1c84:	add	x1, x19, #0x10
    1c88:	cmp	x0, x1
    1c8c:	b.eq	1d20 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x448>  // b.none
    1c90:	bl	0 <_ZdlPv>
    1c94:	add	x0, x20, #0x0
    1c98:	add	x0, x0, #0x38
    1c9c:	ldar	x1, [x0]
    1ca0:	cbnz	x1, 1d30 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x458>
    1ca4:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ca8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1cac:	add	x2, x2, #0x0
    1cb0:	add	x1, x1, #0x0
    1cb4:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1cb8:	b	1d30 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x458>
    1cbc:	mov	x2, x26
    1cc0:	mov	x1, x27
    1cc4:	bl	0 <memcmp>
    1cc8:	cbnz	w0, 1ba0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c8>
    1ccc:	sub	x2, x26, #0xa
    1cd0:	mov	w0, w2
    1cd4:	b	1ba0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c8>
    1cd8:	mov	x1, x27
    1cdc:	mov	x2, #0xa                   	// #10
    1ce0:	bl	0 <memcmp>
    1ce4:	cbnz	w0, 1ba0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c8>
    1ce8:	sub	x2, x26, #0xa
    1cec:	mov	x0, #0x7fffffff            	// #2147483647
    1cf0:	cmp	x2, x0
    1cf4:	b.gt	1ba4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2cc>
    1cf8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1cfc:	cmp	x2, x0
    1d00:	b.ge	1b9c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c4>  // b.tcont
    1d04:	nop
    1d08:	ldr	x28, [x28, #24]
    1d0c:	cbnz	x28, 1b88 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2b0>
    1d10:	b	1bb0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2d8>
    1d14:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1d18:	add	x0, x0, #0x0
    1d1c:	str	x0, [x22, #64]
    1d20:	add	x0, x20, #0x0
    1d24:	add	x0, x0, #0x38
    1d28:	ldar	x1, [x0]
    1d2c:	cbz	x1, 1ca4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3cc>
    1d30:	add	x0, x20, #0x0
    1d34:	add	x0, x0, #0x38
    1d38:	ldr	x23, [x0]
    1d3c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1d40:	add	x0, x0, #0x0
    1d44:	add	x1, x19, #0x10
    1d48:	str	x1, [sp, #96]
    1d4c:	strb	wzr, [sp, #123]
    1d50:	mov	x2, #0xb                   	// #11
    1d54:	ldr	x3, [x0]
    1d58:	str	x3, [sp, #112]
    1d5c:	ldur	w0, [x0, #7]
    1d60:	add	x25, x23, #0x8
    1d64:	stur	w0, [x19, #23]
    1d68:	ldr	x28, [x23, #16]
    1d6c:	str	x2, [sp, #104]
    1d70:	cbz	x28, 301c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1744>
    1d74:	mov	x27, x1
    1d78:	mov	x22, x25
    1d7c:	nop
    1d80:	ldp	x0, x26, [x28, #32]
    1d84:	cmp	x26, #0xb
    1d88:	b.hi	1ed0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5f8>  // b.pmore
    1d8c:	mov	x2, #0xfffffffffffffff5    	// #-11
    1d90:	cbnz	x26, 1eb4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5dc>
    1d94:	mov	w0, w2
    1d98:	tbnz	w0, #31, 1f00 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x628>
    1d9c:	mov	x22, x28
    1da0:	ldr	x28, [x28, #16]
    1da4:	cbnz	x28, 1d80 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4a8>
    1da8:	cmp	x25, x22
    1dac:	b.eq	1df4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x51c>  // b.none
    1db0:	ldp	x1, x25, [x22, #32]
    1db4:	cmp	x25, #0xa
    1db8:	b.ls	2da4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x14cc>  // b.plast
    1dbc:	add	x0, x19, #0x10
    1dc0:	mov	x2, #0xb                   	// #11
    1dc4:	bl	0 <memcmp>
    1dc8:	cbnz	w0, 1df0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x518>
    1dcc:	mov	x26, #0xb                   	// #11
    1dd0:	sub	x26, x26, x25
    1dd4:	mov	x0, #0x7fffffff            	// #2147483647
    1dd8:	cmp	x26, x0
    1ddc:	b.gt	1f0c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x634>
    1de0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1de4:	cmp	x26, x0
    1de8:	b.lt	1df4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x51c>  // b.tstop
    1dec:	mov	w0, w26
    1df0:	tbz	w0, #31, 1f0c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x634>
    1df4:	mov	x0, #0x48                  	// #72
    1df8:	bl	0 <_Znwm>
    1dfc:	mov	x25, x0
    1e00:	add	x26, x0, #0x30
    1e04:	ldr	x0, [sp, #96]
    1e08:	add	x1, x19, #0x10
    1e0c:	str	x26, [x25, #32]
    1e10:	cmp	x0, x1
    1e14:	b.eq	2f88 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x16b0>  // b.none
    1e18:	ldr	x1, [sp, #112]
    1e1c:	str	x0, [x25, #32]
    1e20:	str	x1, [x25, #48]
    1e24:	add	x2, x25, #0x20
    1e28:	add	x3, x19, #0x10
    1e2c:	ldr	x0, [sp, #104]
    1e30:	str	x0, [x25, #40]
    1e34:	str	xzr, [x2, #32]
    1e38:	mov	x1, x22
    1e3c:	mov	x0, x23
    1e40:	stp	x3, xzr, [sp, #96]
    1e44:	strb	wzr, [sp, #112]
    1e48:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1e4c:	mov	x22, x0
    1e50:	mov	x2, x1
    1e54:	cbz	x1, 2f6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1694>
    1e58:	mov	x1, x0
    1e5c:	mov	x3, x25
    1e60:	mov	x0, x23
    1e64:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1e68:	mov	x22, x0
    1e6c:	ldr	x0, [sp, #96]
    1e70:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1e74:	add	x1, x1, #0x0
    1e78:	str	x1, [x22, #64]
    1e7c:	add	x1, x19, #0x10
    1e80:	cmp	x0, x1
    1e84:	b.eq	1f18 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x640>  // b.none
    1e88:	bl	0 <_ZdlPv>
    1e8c:	add	x0, x20, #0x0
    1e90:	add	x0, x0, #0x38
    1e94:	ldar	x1, [x0]
    1e98:	cbnz	x1, 1f28 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x650>
    1e9c:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ea0:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ea4:	add	x2, x2, #0x0
    1ea8:	add	x1, x1, #0x0
    1eac:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1eb0:	b	1f28 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x650>
    1eb4:	mov	x2, x26
    1eb8:	mov	x1, x27
    1ebc:	bl	0 <memcmp>
    1ec0:	cbnz	w0, 1d98 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4c0>
    1ec4:	sub	x2, x26, #0xb
    1ec8:	mov	w0, w2
    1ecc:	b	1d98 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4c0>
    1ed0:	mov	x1, x27
    1ed4:	mov	x2, #0xb                   	// #11
    1ed8:	bl	0 <memcmp>
    1edc:	cbnz	w0, 1d98 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4c0>
    1ee0:	sub	x2, x26, #0xb
    1ee4:	mov	x0, #0x7fffffff            	// #2147483647
    1ee8:	cmp	x2, x0
    1eec:	b.gt	1d9c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4c4>
    1ef0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1ef4:	cmp	x2, x0
    1ef8:	b.ge	1d94 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4bc>  // b.tcont
    1efc:	nop
    1f00:	ldr	x28, [x28, #24]
    1f04:	cbnz	x28, 1d80 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4a8>
    1f08:	b	1da8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4d0>
    1f0c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1f10:	add	x0, x0, #0x0
    1f14:	str	x0, [x22, #64]
    1f18:	add	x0, x20, #0x0
    1f1c:	add	x0, x0, #0x38
    1f20:	ldar	x1, [x0]
    1f24:	cbz	x1, 1e9c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5c4>
    1f28:	add	x0, x20, #0x0
    1f2c:	add	x0, x0, #0x38
    1f30:	ldr	x23, [x0]
    1f34:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1f38:	add	x0, x0, #0x0
    1f3c:	add	x1, x19, #0x10
    1f40:	str	x1, [sp, #96]
    1f44:	strb	wzr, [sp, #124]
    1f48:	mov	x2, #0xc                   	// #12
    1f4c:	ldr	x3, [x0]
    1f50:	str	x3, [sp, #112]
    1f54:	ldr	w0, [x0, #8]
    1f58:	add	x25, x23, #0x8
    1f5c:	str	w0, [x19, #24]
    1f60:	ldr	x28, [x23, #16]
    1f64:	str	x2, [sp, #104]
    1f68:	cbz	x28, 3014 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x173c>
    1f6c:	mov	x27, x1
    1f70:	mov	x22, x25
    1f74:	nop
    1f78:	ldp	x0, x26, [x28, #32]
    1f7c:	cmp	x26, #0xc
    1f80:	b.hi	20c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7f0>  // b.pmore
    1f84:	mov	x2, #0xfffffffffffffff4    	// #-12
    1f88:	cbnz	x26, 20ac <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7d4>
    1f8c:	mov	w0, w2
    1f90:	tbnz	w0, #31, 20f8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x820>
    1f94:	mov	x22, x28
    1f98:	ldr	x28, [x28, #16]
    1f9c:	cbnz	x28, 1f78 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6a0>
    1fa0:	cmp	x25, x22
    1fa4:	b.eq	1fec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x714>  // b.none
    1fa8:	ldp	x1, x25, [x22, #32]
    1fac:	cmp	x25, #0xb
    1fb0:	b.ls	2d5c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1484>  // b.plast
    1fb4:	add	x0, x19, #0x10
    1fb8:	mov	x2, #0xc                   	// #12
    1fbc:	bl	0 <memcmp>
    1fc0:	cbnz	w0, 1fe8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x710>
    1fc4:	mov	x26, #0xc                   	// #12
    1fc8:	sub	x26, x26, x25
    1fcc:	mov	x0, #0x7fffffff            	// #2147483647
    1fd0:	cmp	x26, x0
    1fd4:	b.gt	2104 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x82c>
    1fd8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1fdc:	cmp	x26, x0
    1fe0:	b.lt	1fec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x714>  // b.tstop
    1fe4:	mov	w0, w26
    1fe8:	tbz	w0, #31, 2104 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x82c>
    1fec:	mov	x0, #0x48                  	// #72
    1ff0:	bl	0 <_Znwm>
    1ff4:	mov	x25, x0
    1ff8:	add	x26, x0, #0x30
    1ffc:	ldr	x0, [sp, #96]
    2000:	add	x1, x19, #0x10
    2004:	str	x26, [x25, #32]
    2008:	cmp	x0, x1
    200c:	b.eq	2ecc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x15f4>  // b.none
    2010:	ldr	x1, [sp, #112]
    2014:	str	x0, [x25, #32]
    2018:	str	x1, [x25, #48]
    201c:	add	x2, x25, #0x20
    2020:	add	x3, x19, #0x10
    2024:	ldr	x0, [sp, #104]
    2028:	str	x0, [x25, #40]
    202c:	str	xzr, [x2, #32]
    2030:	mov	x1, x22
    2034:	mov	x0, x23
    2038:	stp	x3, xzr, [sp, #96]
    203c:	strb	wzr, [sp, #112]
    2040:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2044:	mov	x22, x0
    2048:	mov	x2, x1
    204c:	cbz	x1, 2eb0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x15d8>
    2050:	mov	x1, x0
    2054:	mov	x3, x25
    2058:	mov	x0, x23
    205c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2060:	mov	x22, x0
    2064:	ldr	x0, [sp, #96]
    2068:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    206c:	add	x1, x1, #0x0
    2070:	str	x1, [x22, #64]
    2074:	add	x1, x19, #0x10
    2078:	cmp	x0, x1
    207c:	b.eq	2110 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x838>  // b.none
    2080:	bl	0 <_ZdlPv>
    2084:	add	x0, x20, #0x0
    2088:	add	x0, x0, #0x38
    208c:	ldar	x1, [x0]
    2090:	cbnz	x1, 2120 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x848>
    2094:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2098:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    209c:	add	x2, x2, #0x0
    20a0:	add	x1, x1, #0x0
    20a4:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    20a8:	b	2120 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x848>
    20ac:	mov	x2, x26
    20b0:	mov	x1, x27
    20b4:	bl	0 <memcmp>
    20b8:	cbnz	w0, 1f90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6b8>
    20bc:	sub	x2, x26, #0xc
    20c0:	mov	w0, w2
    20c4:	b	1f90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6b8>
    20c8:	mov	x1, x27
    20cc:	mov	x2, #0xc                   	// #12
    20d0:	bl	0 <memcmp>
    20d4:	cbnz	w0, 1f90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6b8>
    20d8:	sub	x2, x26, #0xc
    20dc:	mov	x0, #0x7fffffff            	// #2147483647
    20e0:	cmp	x2, x0
    20e4:	b.gt	1f94 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6bc>
    20e8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    20ec:	cmp	x2, x0
    20f0:	b.ge	1f8c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6b4>  // b.tcont
    20f4:	nop
    20f8:	ldr	x28, [x28, #24]
    20fc:	cbnz	x28, 1f78 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6a0>
    2100:	b	1fa0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6c8>
    2104:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2108:	add	x0, x0, #0x0
    210c:	str	x0, [x22, #64]
    2110:	add	x0, x20, #0x0
    2114:	add	x0, x0, #0x38
    2118:	ldar	x1, [x0]
    211c:	cbz	x1, 2094 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7bc>
    2120:	add	x0, x20, #0x0
    2124:	add	x0, x0, #0x38
    2128:	ldr	x23, [x0]
    212c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2130:	add	x0, x0, #0x0
    2134:	add	x1, x19, #0x10
    2138:	str	x1, [sp, #96]
    213c:	strb	wzr, [sp, #125]
    2140:	mov	x2, #0xd                   	// #13
    2144:	ldr	x3, [x0]
    2148:	str	x3, [sp, #112]
    214c:	ldur	x0, [x0, #5]
    2150:	stur	x0, [x19, #21]
    2154:	add	x25, x23, #0x8
    2158:	ldr	x28, [x23, #16]
    215c:	str	x2, [sp, #104]
    2160:	cbz	x28, 302c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1754>
    2164:	mov	x27, x1
    2168:	mov	x22, x25
    216c:	nop
    2170:	ldp	x0, x26, [x28, #32]
    2174:	cmp	x26, #0xd
    2178:	b.hi	22c0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9e8>  // b.pmore
    217c:	mov	x2, #0xfffffffffffffff3    	// #-13
    2180:	cbnz	x26, 22a4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9cc>
    2184:	mov	w0, w2
    2188:	tbnz	w0, #31, 22f0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa18>
    218c:	mov	x22, x28
    2190:	ldr	x28, [x28, #16]
    2194:	cbnz	x28, 2170 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x898>
    2198:	cmp	x25, x22
    219c:	b.eq	21e4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x90c>  // b.none
    21a0:	ldp	x1, x25, [x22, #32]
    21a4:	cmp	x25, #0xc
    21a8:	b.ls	2d80 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x14a8>  // b.plast
    21ac:	add	x0, x19, #0x10
    21b0:	mov	x2, #0xd                   	// #13
    21b4:	bl	0 <memcmp>
    21b8:	cbnz	w0, 21e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x908>
    21bc:	mov	x26, #0xd                   	// #13
    21c0:	sub	x26, x26, x25
    21c4:	mov	x0, #0x7fffffff            	// #2147483647
    21c8:	cmp	x26, x0
    21cc:	b.gt	22fc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa24>
    21d0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    21d4:	cmp	x26, x0
    21d8:	b.lt	21e4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x90c>  // b.tstop
    21dc:	mov	w0, w26
    21e0:	tbz	w0, #31, 22fc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa24>
    21e4:	mov	x0, #0x48                  	// #72
    21e8:	bl	0 <_Znwm>
    21ec:	mov	x25, x0
    21f0:	add	x26, x0, #0x30
    21f4:	ldr	x0, [sp, #96]
    21f8:	add	x1, x19, #0x10
    21fc:	str	x26, [x25, #32]
    2200:	cmp	x0, x1
    2204:	b.eq	3000 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1728>  // b.none
    2208:	ldr	x1, [sp, #112]
    220c:	str	x0, [x25, #32]
    2210:	str	x1, [x25, #48]
    2214:	add	x2, x25, #0x20
    2218:	add	x3, x19, #0x10
    221c:	ldr	x0, [sp, #104]
    2220:	str	x0, [x25, #40]
    2224:	str	xzr, [x2, #32]
    2228:	mov	x1, x22
    222c:	mov	x0, x23
    2230:	stp	x3, xzr, [sp, #96]
    2234:	strb	wzr, [sp, #112]
    2238:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    223c:	mov	x22, x0
    2240:	mov	x2, x1
    2244:	cbz	x1, 2fe4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x170c>
    2248:	mov	x1, x0
    224c:	mov	x3, x25
    2250:	mov	x0, x23
    2254:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2258:	mov	x22, x0
    225c:	ldr	x0, [sp, #96]
    2260:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2264:	add	x1, x1, #0x0
    2268:	str	x1, [x22, #64]
    226c:	add	x1, x19, #0x10
    2270:	cmp	x0, x1
    2274:	b.eq	2308 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa30>  // b.none
    2278:	bl	0 <_ZdlPv>
    227c:	add	x0, x20, #0x0
    2280:	add	x0, x0, #0x38
    2284:	ldar	x1, [x0]
    2288:	cbnz	x1, 2318 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa40>
    228c:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2290:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2294:	add	x2, x2, #0x0
    2298:	add	x1, x1, #0x0
    229c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    22a0:	b	2318 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa40>
    22a4:	mov	x2, x26
    22a8:	mov	x1, x27
    22ac:	bl	0 <memcmp>
    22b0:	cbnz	w0, 2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8b0>
    22b4:	sub	x2, x26, #0xd
    22b8:	mov	w0, w2
    22bc:	b	2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8b0>
    22c0:	mov	x1, x27
    22c4:	mov	x2, #0xd                   	// #13
    22c8:	bl	0 <memcmp>
    22cc:	cbnz	w0, 2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8b0>
    22d0:	sub	x2, x26, #0xd
    22d4:	mov	x0, #0x7fffffff            	// #2147483647
    22d8:	cmp	x2, x0
    22dc:	b.gt	218c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8b4>
    22e0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    22e4:	cmp	x2, x0
    22e8:	b.ge	2184 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8ac>  // b.tcont
    22ec:	nop
    22f0:	ldr	x28, [x28, #24]
    22f4:	cbnz	x28, 2170 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x898>
    22f8:	b	2198 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8c0>
    22fc:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2300:	add	x0, x0, #0x0
    2304:	str	x0, [x22, #64]
    2308:	add	x0, x20, #0x0
    230c:	add	x0, x0, #0x38
    2310:	ldar	x1, [x0]
    2314:	cbz	x1, 228c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9b4>
    2318:	add	x0, x20, #0x0
    231c:	add	x0, x0, #0x38
    2320:	ldr	x23, [x0]
    2324:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2328:	add	x0, x0, #0x0
    232c:	add	x1, x19, #0x10
    2330:	str	x1, [sp, #96]
    2334:	strb	wzr, [sp, #124]
    2338:	mov	x2, #0xc                   	// #12
    233c:	ldr	x3, [x0]
    2340:	str	x3, [sp, #112]
    2344:	ldr	w0, [x0, #8]
    2348:	add	x25, x23, #0x8
    234c:	str	w0, [x19, #24]
    2350:	ldr	x28, [x23, #16]
    2354:	str	x2, [sp, #104]
    2358:	cbz	x28, 3024 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x174c>
    235c:	mov	x27, x1
    2360:	mov	x22, x25
    2364:	nop
    2368:	ldp	x0, x26, [x28, #32]
    236c:	cmp	x26, #0xc
    2370:	b.hi	24b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbe0>  // b.pmore
    2374:	mov	x2, #0xfffffffffffffff4    	// #-12
    2378:	cbnz	x26, 249c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbc4>
    237c:	mov	w0, w2
    2380:	tbnz	w0, #31, 24e8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc10>
    2384:	mov	x22, x28
    2388:	ldr	x28, [x28, #16]
    238c:	cbnz	x28, 2368 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa90>
    2390:	cmp	x25, x22
    2394:	b.eq	23dc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb04>  // b.none
    2398:	ldp	x1, x25, [x22, #32]
    239c:	cmp	x25, #0xb
    23a0:	b.ls	2e34 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x155c>  // b.plast
    23a4:	add	x0, x19, #0x10
    23a8:	mov	x2, #0xc                   	// #12
    23ac:	bl	0 <memcmp>
    23b0:	cbnz	w0, 23d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb00>
    23b4:	mov	x26, #0xc                   	// #12
    23b8:	sub	x26, x26, x25
    23bc:	mov	x0, #0x7fffffff            	// #2147483647
    23c0:	cmp	x26, x0
    23c4:	b.gt	24f4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc1c>
    23c8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    23cc:	cmp	x26, x0
    23d0:	b.lt	23dc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb04>  // b.tstop
    23d4:	mov	w0, w26
    23d8:	tbz	w0, #31, 24f4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc1c>
    23dc:	mov	x0, #0x48                  	// #72
    23e0:	bl	0 <_Znwm>
    23e4:	mov	x25, x0
    23e8:	add	x26, x0, #0x30
    23ec:	ldr	x0, [sp, #96]
    23f0:	add	x1, x19, #0x10
    23f4:	str	x26, [x25, #32]
    23f8:	cmp	x0, x1
    23fc:	b.eq	2fb0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x16d8>  // b.none
    2400:	ldr	x1, [sp, #112]
    2404:	str	x0, [x25, #32]
    2408:	str	x1, [x25, #48]
    240c:	add	x2, x25, #0x20
    2410:	add	x3, x19, #0x10
    2414:	ldr	x0, [sp, #104]
    2418:	str	x0, [x25, #40]
    241c:	str	xzr, [x2, #32]
    2420:	mov	x1, x22
    2424:	mov	x0, x23
    2428:	stp	x3, xzr, [sp, #96]
    242c:	strb	wzr, [sp, #112]
    2430:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2434:	mov	x22, x0
    2438:	mov	x2, x1
    243c:	cbz	x1, 2f94 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x16bc>
    2440:	mov	x1, x0
    2444:	mov	x3, x25
    2448:	mov	x0, x23
    244c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2450:	mov	x22, x0
    2454:	ldr	x0, [sp, #96]
    2458:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    245c:	add	x1, x1, #0x0
    2460:	str	x1, [x22, #64]
    2464:	add	x1, x19, #0x10
    2468:	cmp	x0, x1
    246c:	b.eq	2500 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc28>  // b.none
    2470:	bl	0 <_ZdlPv>
    2474:	add	x0, x20, #0x0
    2478:	add	x0, x0, #0x38
    247c:	ldar	x1, [x0]
    2480:	cbnz	x1, 2510 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc38>
    2484:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2488:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    248c:	add	x2, x2, #0x0
    2490:	add	x1, x1, #0x0
    2494:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2498:	b	2510 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc38>
    249c:	mov	x2, x26
    24a0:	mov	x1, x27
    24a4:	bl	0 <memcmp>
    24a8:	cbnz	w0, 2380 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xaa8>
    24ac:	sub	x2, x26, #0xc
    24b0:	mov	w0, w2
    24b4:	b	2380 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xaa8>
    24b8:	mov	x1, x27
    24bc:	mov	x2, #0xc                   	// #12
    24c0:	bl	0 <memcmp>
    24c4:	cbnz	w0, 2380 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xaa8>
    24c8:	sub	x2, x26, #0xc
    24cc:	mov	x0, #0x7fffffff            	// #2147483647
    24d0:	cmp	x2, x0
    24d4:	b.gt	2384 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xaac>
    24d8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    24dc:	cmp	x2, x0
    24e0:	b.ge	237c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xaa4>  // b.tcont
    24e4:	nop
    24e8:	ldr	x28, [x28, #24]
    24ec:	cbnz	x28, 2368 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa90>
    24f0:	b	2390 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xab8>
    24f4:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    24f8:	add	x0, x0, #0x0
    24fc:	str	x0, [x22, #64]
    2500:	add	x0, x20, #0x0
    2504:	add	x0, x0, #0x38
    2508:	ldar	x1, [x0]
    250c:	cbz	x1, 2484 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbac>
    2510:	add	x0, x20, #0x0
    2514:	add	x0, x0, #0x38
    2518:	ldr	x23, [x0]
    251c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2520:	add	x0, x0, #0x0
    2524:	add	x1, x19, #0x10
    2528:	str	x1, [sp, #96]
    252c:	strb	wzr, [sp, #123]
    2530:	mov	x2, #0xb                   	// #11
    2534:	ldr	x3, [x0]
    2538:	str	x3, [sp, #112]
    253c:	ldur	w0, [x0, #7]
    2540:	add	x25, x23, #0x8
    2544:	stur	w0, [x19, #23]
    2548:	ldr	x28, [x23, #16]
    254c:	str	x2, [sp, #104]
    2550:	cbz	x28, 303c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1764>
    2554:	mov	x27, x1
    2558:	mov	x22, x25
    255c:	nop
    2560:	ldp	x0, x26, [x28, #32]
    2564:	cmp	x26, #0xb
    2568:	b.hi	26b0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xdd8>  // b.pmore
    256c:	mov	x2, #0xfffffffffffffff5    	// #-11
    2570:	cbnz	x26, 2694 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xdbc>
    2574:	mov	w0, w2
    2578:	tbnz	w0, #31, 26e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe08>
    257c:	mov	x22, x28
    2580:	ldr	x28, [x28, #16]
    2584:	cbnz	x28, 2560 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc88>
    2588:	cmp	x25, x22
    258c:	b.eq	25d4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcfc>  // b.none
    2590:	ldp	x1, x25, [x22, #32]
    2594:	cmp	x25, #0xa
    2598:	b.ls	2e10 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1538>  // b.plast
    259c:	add	x0, x19, #0x10
    25a0:	mov	x2, #0xb                   	// #11
    25a4:	bl	0 <memcmp>
    25a8:	cbnz	w0, 25d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcf8>
    25ac:	mov	x26, #0xb                   	// #11
    25b0:	sub	x26, x26, x25
    25b4:	mov	x0, #0x7fffffff            	// #2147483647
    25b8:	cmp	x26, x0
    25bc:	b.gt	26ec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe14>
    25c0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    25c4:	cmp	x26, x0
    25c8:	b.lt	25d4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcfc>  // b.tstop
    25cc:	mov	w0, w26
    25d0:	tbz	w0, #31, 26ec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe14>
    25d4:	mov	x0, #0x48                  	// #72
    25d8:	bl	0 <_Znwm>
    25dc:	mov	x25, x0
    25e0:	add	x26, x0, #0x30
    25e4:	ldr	x0, [sp, #96]
    25e8:	add	x1, x19, #0x10
    25ec:	str	x26, [x25, #32]
    25f0:	cmp	x0, x1
    25f4:	b.eq	2fd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1700>  // b.none
    25f8:	ldr	x1, [sp, #112]
    25fc:	str	x0, [x25, #32]
    2600:	str	x1, [x25, #48]
    2604:	add	x2, x25, #0x20
    2608:	add	x3, x19, #0x10
    260c:	ldr	x0, [sp, #104]
    2610:	str	x0, [x25, #40]
    2614:	str	xzr, [x2, #32]
    2618:	mov	x1, x22
    261c:	mov	x0, x23
    2620:	stp	x3, xzr, [sp, #96]
    2624:	strb	wzr, [sp, #112]
    2628:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    262c:	mov	x22, x0
    2630:	mov	x2, x1
    2634:	cbz	x1, 2fbc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x16e4>
    2638:	mov	x1, x0
    263c:	mov	x3, x25
    2640:	mov	x0, x23
    2644:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2648:	mov	x22, x0
    264c:	ldr	x0, [sp, #96]
    2650:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2654:	add	x1, x1, #0x0
    2658:	str	x1, [x22, #64]
    265c:	add	x1, x19, #0x10
    2660:	cmp	x0, x1
    2664:	b.eq	26f8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe20>  // b.none
    2668:	bl	0 <_ZdlPv>
    266c:	add	x0, x20, #0x0
    2670:	add	x0, x0, #0x38
    2674:	ldar	x1, [x0]
    2678:	cbnz	x1, 2708 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe30>
    267c:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2680:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2684:	add	x2, x2, #0x0
    2688:	add	x1, x1, #0x0
    268c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2690:	b	2708 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe30>
    2694:	mov	x2, x26
    2698:	mov	x1, x27
    269c:	bl	0 <memcmp>
    26a0:	cbnz	w0, 2578 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xca0>
    26a4:	sub	x2, x26, #0xb
    26a8:	mov	w0, w2
    26ac:	b	2578 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xca0>
    26b0:	mov	x1, x27
    26b4:	mov	x2, #0xb                   	// #11
    26b8:	bl	0 <memcmp>
    26bc:	cbnz	w0, 2578 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xca0>
    26c0:	sub	x2, x26, #0xb
    26c4:	mov	x0, #0x7fffffff            	// #2147483647
    26c8:	cmp	x2, x0
    26cc:	b.gt	257c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xca4>
    26d0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    26d4:	cmp	x2, x0
    26d8:	b.ge	2574 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc9c>  // b.tcont
    26dc:	nop
    26e0:	ldr	x28, [x28, #24]
    26e4:	cbnz	x28, 2560 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc88>
    26e8:	b	2588 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcb0>
    26ec:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    26f0:	add	x0, x0, #0x0
    26f4:	str	x0, [x22, #64]
    26f8:	add	x0, x20, #0x0
    26fc:	add	x0, x0, #0x38
    2700:	ldar	x1, [x0]
    2704:	cbz	x1, 267c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xda4>
    2708:	add	x0, x20, #0x0
    270c:	add	x0, x0, #0x38
    2710:	ldr	x23, [x0]
    2714:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2718:	add	x0, x0, #0x0
    271c:	add	x1, x19, #0x10
    2720:	str	x1, [sp, #96]
    2724:	strb	wzr, [sp, #125]
    2728:	mov	x2, #0xd                   	// #13
    272c:	ldr	x3, [x0]
    2730:	str	x3, [sp, #112]
    2734:	ldur	x0, [x0, #5]
    2738:	stur	x0, [x19, #21]
    273c:	add	x25, x23, #0x8
    2740:	ldr	x28, [x23, #16]
    2744:	str	x2, [sp, #104]
    2748:	cbz	x28, 3034 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x175c>
    274c:	mov	x27, x1
    2750:	mov	x22, x25
    2754:	nop
    2758:	ldp	x0, x26, [x28, #32]
    275c:	cmp	x26, #0xd
    2760:	b.hi	28a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfd0>  // b.pmore
    2764:	mov	x2, #0xfffffffffffffff3    	// #-13
    2768:	cbnz	x26, 288c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfb4>
    276c:	mov	w0, w2
    2770:	tbnz	w0, #31, 28d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1000>
    2774:	mov	x22, x28
    2778:	ldr	x28, [x28, #16]
    277c:	cbnz	x28, 2758 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe80>
    2780:	cmp	x22, x25
    2784:	b.eq	27cc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xef4>  // b.none
    2788:	ldp	x1, x25, [x22, #32]
    278c:	cmp	x25, #0xc
    2790:	b.ls	2dec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1514>  // b.plast
    2794:	add	x0, x19, #0x10
    2798:	mov	x2, #0xd                   	// #13
    279c:	bl	0 <memcmp>
    27a0:	cbnz	w0, 27c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xef0>
    27a4:	mov	x26, #0xd                   	// #13
    27a8:	sub	x26, x26, x25
    27ac:	mov	x0, #0x7fffffff            	// #2147483647
    27b0:	cmp	x26, x0
    27b4:	b.gt	28e4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x100c>
    27b8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    27bc:	cmp	x26, x0
    27c0:	b.lt	27cc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xef4>  // b.tstop
    27c4:	mov	w0, w26
    27c8:	tbz	w0, #31, 28e4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x100c>
    27cc:	mov	x0, #0x48                  	// #72
    27d0:	bl	0 <_Znwm>
    27d4:	mov	x25, x0
    27d8:	add	x26, x0, #0x30
    27dc:	ldr	x0, [sp, #96]
    27e0:	add	x1, x19, #0x10
    27e4:	str	x26, [x25, #32]
    27e8:	cmp	x0, x1
    27ec:	b.eq	2ef4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x161c>  // b.none
    27f0:	ldr	x1, [sp, #112]
    27f4:	str	x0, [x25, #32]
    27f8:	str	x1, [x25, #48]
    27fc:	add	x2, x25, #0x20
    2800:	add	x3, x19, #0x10
    2804:	ldr	x0, [sp, #104]
    2808:	str	x0, [x25, #40]
    280c:	str	xzr, [x2, #32]
    2810:	mov	x1, x22
    2814:	mov	x0, x23
    2818:	stp	x3, xzr, [sp, #96]
    281c:	strb	wzr, [sp, #112]
    2820:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2824:	mov	x22, x0
    2828:	mov	x2, x1
    282c:	cbz	x1, 2ed8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1600>
    2830:	mov	x1, x0
    2834:	mov	x3, x25
    2838:	mov	x0, x23
    283c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2840:	mov	x22, x0
    2844:	ldr	x0, [sp, #96]
    2848:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    284c:	add	x1, x1, #0x0
    2850:	str	x1, [x22, #64]
    2854:	add	x1, x19, #0x10
    2858:	cmp	x0, x1
    285c:	b.eq	28f0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1018>  // b.none
    2860:	bl	0 <_ZdlPv>
    2864:	add	x0, x20, #0x0
    2868:	add	x0, x0, #0x38
    286c:	ldar	x1, [x0]
    2870:	cbnz	x1, 2900 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1028>
    2874:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2878:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    287c:	add	x2, x2, #0x0
    2880:	add	x1, x1, #0x0
    2884:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2888:	b	2900 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1028>
    288c:	mov	x2, x26
    2890:	mov	x1, x27
    2894:	bl	0 <memcmp>
    2898:	cbnz	w0, 2770 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe98>
    289c:	sub	x2, x26, #0xd
    28a0:	mov	w0, w2
    28a4:	b	2770 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe98>
    28a8:	mov	x1, x27
    28ac:	mov	x2, #0xd                   	// #13
    28b0:	bl	0 <memcmp>
    28b4:	cbnz	w0, 2770 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe98>
    28b8:	sub	x2, x26, #0xd
    28bc:	mov	x0, #0x7fffffff            	// #2147483647
    28c0:	cmp	x2, x0
    28c4:	b.gt	2774 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe9c>
    28c8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    28cc:	cmp	x2, x0
    28d0:	b.ge	276c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe94>  // b.tcont
    28d4:	nop
    28d8:	ldr	x28, [x28, #24]
    28dc:	cbnz	x28, 2758 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe80>
    28e0:	b	2780 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xea8>
    28e4:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    28e8:	add	x0, x0, #0x0
    28ec:	str	x0, [x22, #64]
    28f0:	add	x0, x20, #0x0
    28f4:	add	x0, x0, #0x38
    28f8:	ldar	x1, [x0]
    28fc:	cbz	x1, 2874 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf9c>
    2900:	add	x0, x20, #0x0
    2904:	add	x0, x0, #0x38
    2908:	ldr	x23, [x0]
    290c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2910:	add	x0, x0, #0x0
    2914:	add	x1, x19, #0x10
    2918:	str	x1, [sp, #96]
    291c:	strb	wzr, [sp, #124]
    2920:	mov	x2, #0xc                   	// #12
    2924:	ldr	x3, [x0]
    2928:	str	x3, [sp, #112]
    292c:	ldr	w0, [x0, #8]
    2930:	add	x25, x23, #0x8
    2934:	str	w0, [x19, #24]
    2938:	ldr	x28, [x23, #16]
    293c:	str	x2, [sp, #104]
    2940:	cbz	x28, 304c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1774>
    2944:	mov	x27, x1
    2948:	mov	x22, x25
    294c:	nop
    2950:	ldp	x0, x26, [x28, #32]
    2954:	cmp	x26, #0xc
    2958:	b.hi	2aa0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x11c8>  // b.pmore
    295c:	mov	x2, #0xfffffffffffffff4    	// #-12
    2960:	cbnz	x26, 2a84 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x11ac>
    2964:	mov	w0, w2
    2968:	tbnz	w0, #31, 2ad0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x11f8>
    296c:	mov	x22, x28
    2970:	ldr	x28, [x28, #16]
    2974:	cbnz	x28, 2950 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1078>
    2978:	cmp	x22, x25
    297c:	b.eq	29c4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10ec>  // b.none
    2980:	ldp	x1, x25, [x22, #32]
    2984:	cmp	x25, #0xb
    2988:	b.ls	2dc8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x14f0>  // b.plast
    298c:	add	x0, x19, #0x10
    2990:	mov	x2, #0xc                   	// #12
    2994:	bl	0 <memcmp>
    2998:	cbnz	w0, 29c0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10e8>
    299c:	mov	x26, #0xc                   	// #12
    29a0:	sub	x26, x26, x25
    29a4:	mov	x0, #0x7fffffff            	// #2147483647
    29a8:	cmp	x26, x0
    29ac:	b.gt	2adc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1204>
    29b0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    29b4:	cmp	x26, x0
    29b8:	b.lt	29c4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10ec>  // b.tstop
    29bc:	mov	w0, w26
    29c0:	tbz	w0, #31, 2adc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1204>
    29c4:	mov	x0, #0x48                  	// #72
    29c8:	bl	0 <_Znwm>
    29cc:	mov	x25, x0
    29d0:	add	x26, x0, #0x30
    29d4:	ldr	x0, [sp, #96]
    29d8:	add	x1, x19, #0x10
    29dc:	str	x26, [x25, #32]
    29e0:	cmp	x0, x1
    29e4:	b.eq	2ea4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x15cc>  // b.none
    29e8:	ldr	x1, [sp, #112]
    29ec:	str	x0, [x25, #32]
    29f0:	str	x1, [x25, #48]
    29f4:	add	x2, x25, #0x20
    29f8:	add	x3, x19, #0x10
    29fc:	ldr	x0, [sp, #104]
    2a00:	str	x0, [x25, #40]
    2a04:	str	xzr, [x2, #32]
    2a08:	mov	x1, x22
    2a0c:	mov	x0, x23
    2a10:	stp	x3, xzr, [sp, #96]
    2a14:	strb	wzr, [sp, #112]
    2a18:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2a1c:	mov	x22, x0
    2a20:	mov	x2, x1
    2a24:	cbz	x1, 2e88 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x15b0>
    2a28:	mov	x1, x0
    2a2c:	mov	x3, x25
    2a30:	mov	x0, x23
    2a34:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2a38:	mov	x22, x0
    2a3c:	ldr	x0, [sp, #96]
    2a40:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2a44:	add	x1, x1, #0x0
    2a48:	str	x1, [x22, #64]
    2a4c:	add	x1, x19, #0x10
    2a50:	cmp	x0, x1
    2a54:	b.eq	2ae8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1210>  // b.none
    2a58:	bl	0 <_ZdlPv>
    2a5c:	add	x0, x20, #0x0
    2a60:	add	x0, x0, #0x38
    2a64:	ldar	x1, [x0]
    2a68:	cbnz	x1, 2af8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1220>
    2a6c:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2a70:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2a74:	add	x2, x2, #0x0
    2a78:	add	x1, x1, #0x0
    2a7c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2a80:	b	2af8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1220>
    2a84:	mov	x2, x26
    2a88:	mov	x1, x27
    2a8c:	bl	0 <memcmp>
    2a90:	cbnz	w0, 2968 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1090>
    2a94:	sub	x2, x26, #0xc
    2a98:	mov	w0, w2
    2a9c:	b	2968 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1090>
    2aa0:	mov	x1, x27
    2aa4:	mov	x2, #0xc                   	// #12
    2aa8:	bl	0 <memcmp>
    2aac:	cbnz	w0, 2968 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1090>
    2ab0:	sub	x2, x26, #0xc
    2ab4:	mov	x0, #0x7fffffff            	// #2147483647
    2ab8:	cmp	x2, x0
    2abc:	b.gt	296c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1094>
    2ac0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2ac4:	cmp	x2, x0
    2ac8:	b.ge	2964 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x108c>  // b.tcont
    2acc:	nop
    2ad0:	ldr	x28, [x28, #24]
    2ad4:	cbnz	x28, 2950 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1078>
    2ad8:	b	2978 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10a0>
    2adc:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2ae0:	add	x0, x0, #0x0
    2ae4:	str	x0, [x22, #64]
    2ae8:	add	x0, x20, #0x0
    2aec:	add	x0, x0, #0x38
    2af0:	ldar	x1, [x0]
    2af4:	cbz	x1, 2a6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1194>
    2af8:	add	x20, x20, #0x0
    2afc:	add	x20, x20, #0x38
    2b00:	ldr	x22, [x20]
    2b04:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2b08:	add	x0, x0, #0x0
    2b0c:	add	x1, x19, #0x10
    2b10:	str	x1, [sp, #96]
    2b14:	strb	wzr, [sp, #124]
    2b18:	mov	x2, #0xc                   	// #12
    2b1c:	ldr	x3, [x0]
    2b20:	str	x3, [sp, #112]
    2b24:	ldr	w0, [x0, #8]
    2b28:	add	x23, x22, #0x8
    2b2c:	str	w0, [x19, #24]
    2b30:	ldr	x27, [x22, #16]
    2b34:	str	x2, [sp, #104]
    2b38:	cbz	x27, 3044 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x176c>
    2b3c:	mov	x28, x1
    2b40:	mov	x20, x23
    2b44:	mov	x25, #0x7fffffff            	// #2147483647
    2b48:	ldp	x0, x26, [x27, #32]
    2b4c:	cmp	x26, #0xc
    2b50:	b.hi	2c74 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x139c>  // b.pmore
    2b54:	mov	x2, #0xfffffffffffffff4    	// #-12
    2b58:	cbnz	x26, 2c58 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1380>
    2b5c:	mov	w0, w2
    2b60:	tbnz	w0, #31, 2ca0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x13c8>
    2b64:	mov	x20, x27
    2b68:	ldr	x27, [x27, #16]
    2b6c:	cbnz	x27, 2b48 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1270>
    2b70:	cmp	x20, x23
    2b74:	b.eq	2bbc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12e4>  // b.none
    2b78:	ldp	x1, x23, [x20, #32]
    2b7c:	cmp	x23, #0xb
    2b80:	b.ls	2d14 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x143c>  // b.plast
    2b84:	add	x0, x19, #0x10
    2b88:	mov	x2, #0xc                   	// #12
    2b8c:	bl	0 <memcmp>
    2b90:	cbnz	w0, 2bb8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12e0>
    2b94:	mov	x25, #0xc                   	// #12
    2b98:	sub	x25, x25, x23
    2b9c:	mov	x0, #0x7fffffff            	// #2147483647
    2ba0:	cmp	x25, x0
    2ba4:	b.gt	2cac <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x13d4>
    2ba8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2bac:	cmp	x25, x0
    2bb0:	b.lt	2bbc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12e4>  // b.tstop
    2bb4:	mov	w0, w25
    2bb8:	tbz	w0, #31, 2cac <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x13d4>
    2bbc:	mov	x0, #0x48                  	// #72
    2bc0:	bl	0 <_Znwm>
    2bc4:	mov	x23, x0
    2bc8:	add	x25, x0, #0x30
    2bcc:	ldr	x0, [sp, #96]
    2bd0:	add	x1, x19, #0x10
    2bd4:	str	x25, [x23, #32]
    2bd8:	cmp	x0, x1
    2bdc:	b.eq	2f60 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1688>  // b.none
    2be0:	ldr	x1, [sp, #112]
    2be4:	str	x0, [x23, #32]
    2be8:	str	x1, [x23, #48]
    2bec:	add	x2, x23, #0x20
    2bf0:	add	x3, x19, #0x10
    2bf4:	ldr	x0, [sp, #104]
    2bf8:	str	x0, [x23, #40]
    2bfc:	str	xzr, [x2, #32]
    2c00:	mov	x1, x20
    2c04:	mov	x0, x22
    2c08:	stp	x3, xzr, [sp, #96]
    2c0c:	strb	wzr, [sp, #112]
    2c10:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2c14:	mov	x20, x0
    2c18:	mov	x2, x1
    2c1c:	cbz	x1, 2f44 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x166c>
    2c20:	mov	x1, x0
    2c24:	mov	x3, x23
    2c28:	mov	x0, x22
    2c2c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2c30:	mov	x20, x0
    2c34:	ldr	x0, [sp, #96]
    2c38:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2c3c:	add	x1, x1, #0x0
    2c40:	str	x1, [x20, #64]
    2c44:	add	x19, x19, #0x10
    2c48:	cmp	x0, x19
    2c4c:	b.eq	2cb8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x13e0>  // b.none
    2c50:	bl	0 <_ZdlPv>
    2c54:	b	2cb8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x13e0>
    2c58:	mov	x2, x26
    2c5c:	mov	x1, x28
    2c60:	bl	0 <memcmp>
    2c64:	cbnz	w0, 2b60 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1288>
    2c68:	sub	x2, x26, #0xc
    2c6c:	mov	w0, w2
    2c70:	b	2b60 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1288>
    2c74:	mov	x1, x28
    2c78:	mov	x2, #0xc                   	// #12
    2c7c:	bl	0 <memcmp>
    2c80:	cbnz	w0, 2b60 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1288>
    2c84:	sub	x2, x26, #0xc
    2c88:	cmp	x2, x25
    2c8c:	b.gt	2b64 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x128c>
    2c90:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2c94:	cmp	x2, x0
    2c98:	b.ge	2b5c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1284>  // b.tcont
    2c9c:	nop
    2ca0:	ldr	x27, [x27, #24]
    2ca4:	cbnz	x27, 2b48 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1270>
    2ca8:	b	2b70 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1298>
    2cac:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2cb0:	add	x0, x0, #0x0
    2cb4:	str	x0, [x20, #64]
    2cb8:	ldr	x21, [x21]
    2cbc:	cbz	x21, 2cc8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x13f0>
    2cc0:	mov	x0, x24
    2cc4:	bl	0 <pthread_mutex_unlock>
    2cc8:	ldp	x19, x20, [sp, #16]
    2ccc:	ldp	x21, x22, [sp, #32]
    2cd0:	ldp	x23, x24, [sp, #48]
    2cd4:	ldp	x25, x26, [sp, #64]
    2cd8:	ldp	x27, x28, [sp, #80]
    2cdc:	ldp	x29, x30, [sp], #128
    2ce0:	ret
    2ce4:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2ce8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2cec:	add	x2, x2, #0x0
    2cf0:	add	x1, x1, #0x0
    2cf4:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2cf8:	b	1908 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x30>
    2cfc:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2d00:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2d04:	add	x2, x2, #0x0
    2d08:	add	x1, x1, #0x0
    2d0c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2d10:	b	193c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x64>
    2d14:	mov	x25, #0xc                   	// #12
    2d18:	cbz	x23, 2bb4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12dc>
    2d1c:	mov	x2, x23
    2d20:	add	x0, x19, #0x10
    2d24:	bl	0 <memcmp>
    2d28:	cbnz	w0, 2bb8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12e0>
    2d2c:	sub	x25, x25, x23
    2d30:	mov	w0, w25
    2d34:	b	2bb8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12e0>
    2d38:	mov	x26, #0xa                   	// #10
    2d3c:	cbz	x25, 1bf4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x31c>
    2d40:	mov	x2, x25
    2d44:	add	x0, x19, #0x10
    2d48:	bl	0 <memcmp>
    2d4c:	cbnz	w0, 1bf8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x320>
    2d50:	sub	x26, x26, x25
    2d54:	mov	w0, w26
    2d58:	b	1bf8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x320>
    2d5c:	mov	x26, #0xc                   	// #12
    2d60:	cbz	x25, 1fe4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x70c>
    2d64:	mov	x2, x25
    2d68:	add	x0, x19, #0x10
    2d6c:	bl	0 <memcmp>
    2d70:	cbnz	w0, 1fe8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x710>
    2d74:	sub	x26, x26, x25
    2d78:	mov	w0, w26
    2d7c:	b	1fe8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x710>
    2d80:	mov	x26, #0xd                   	// #13
    2d84:	cbz	x25, 21dc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x904>
    2d88:	mov	x2, x25
    2d8c:	add	x0, x19, #0x10
    2d90:	bl	0 <memcmp>
    2d94:	cbnz	w0, 21e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x908>
    2d98:	sub	x26, x26, x25
    2d9c:	mov	w0, w26
    2da0:	b	21e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x908>
    2da4:	mov	x26, #0xb                   	// #11
    2da8:	cbz	x25, 1dec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x514>
    2dac:	mov	x2, x25
    2db0:	add	x0, x19, #0x10
    2db4:	sub	x26, x26, x25
    2db8:	bl	0 <memcmp>
    2dbc:	cbnz	w0, 1df0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x518>
    2dc0:	mov	w0, w26
    2dc4:	b	1df0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x518>
    2dc8:	mov	x26, #0xc                   	// #12
    2dcc:	cbz	x25, 29bc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10e4>
    2dd0:	mov	x2, x25
    2dd4:	add	x0, x19, #0x10
    2dd8:	bl	0 <memcmp>
    2ddc:	cbnz	w0, 29c0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10e8>
    2de0:	sub	x26, x26, x25
    2de4:	mov	w0, w26
    2de8:	b	29c0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10e8>
    2dec:	mov	x26, #0xd                   	// #13
    2df0:	cbz	x25, 27c4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xeec>
    2df4:	mov	x2, x25
    2df8:	add	x0, x19, #0x10
    2dfc:	bl	0 <memcmp>
    2e00:	cbnz	w0, 27c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xef0>
    2e04:	sub	x26, x26, x25
    2e08:	mov	w0, w26
    2e0c:	b	27c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xef0>
    2e10:	mov	x26, #0xb                   	// #11
    2e14:	cbz	x25, 25cc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcf4>
    2e18:	mov	x2, x25
    2e1c:	add	x0, x19, #0x10
    2e20:	bl	0 <memcmp>
    2e24:	cbnz	w0, 25d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcf8>
    2e28:	sub	x26, x26, x25
    2e2c:	mov	w0, w26
    2e30:	b	25d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcf8>
    2e34:	mov	x26, #0xc                   	// #12
    2e38:	cbz	x25, 23d4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xafc>
    2e3c:	mov	x2, x25
    2e40:	add	x0, x19, #0x10
    2e44:	bl	0 <memcmp>
    2e48:	cbnz	w0, 23d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb00>
    2e4c:	sub	x26, x26, x25
    2e50:	mov	w0, w26
    2e54:	b	23d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb00>
    2e58:	mov	x26, #0xc                   	// #12
    2e5c:	cbz	x25, 19fc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x124>
    2e60:	mov	x2, x25
    2e64:	add	x0, x19, #0x10
    2e68:	bl	0 <memcmp>
    2e6c:	cbnz	w0, 1a00 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x128>
    2e70:	sub	x26, x26, x25
    2e74:	mov	w0, w26
    2e78:	b	1a00 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x128>
    2e7c:	ldp	x0, x1, [sp, #112]
    2e80:	stp	x0, x1, [x25, #48]
    2e84:	b	1ac0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1e8>
    2e88:	ldr	x0, [x25, #32]
    2e8c:	cmp	x26, x0
    2e90:	b.eq	2e98 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x15c0>  // b.none
    2e94:	bl	0 <_ZdlPv>
    2e98:	mov	x0, x25
    2e9c:	bl	0 <_ZdlPv>
    2ea0:	b	2a3c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1164>
    2ea4:	ldp	x0, x1, [sp, #112]
    2ea8:	stp	x0, x1, [x25, #48]
    2eac:	b	29f4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x111c>
    2eb0:	ldr	x0, [x25, #32]
    2eb4:	cmp	x26, x0
    2eb8:	b.eq	2ec0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x15e8>  // b.none
    2ebc:	bl	0 <_ZdlPv>
    2ec0:	mov	x0, x25
    2ec4:	bl	0 <_ZdlPv>
    2ec8:	b	2064 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x78c>
    2ecc:	ldp	x0, x1, [sp, #112]
    2ed0:	stp	x0, x1, [x25, #48]
    2ed4:	b	201c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x744>
    2ed8:	ldr	x0, [x25, #32]
    2edc:	cmp	x26, x0
    2ee0:	b.eq	2ee8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1610>  // b.none
    2ee4:	bl	0 <_ZdlPv>
    2ee8:	mov	x0, x25
    2eec:	bl	0 <_ZdlPv>
    2ef0:	b	2844 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf6c>
    2ef4:	ldp	x0, x1, [sp, #112]
    2ef8:	stp	x0, x1, [x25, #48]
    2efc:	b	27fc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf24>
    2f00:	ldr	x0, [x25, #32]
    2f04:	cmp	x26, x0
    2f08:	b.eq	2f10 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1638>  // b.none
    2f0c:	bl	0 <_ZdlPv>
    2f10:	mov	x0, x25
    2f14:	bl	0 <_ZdlPv>
    2f18:	b	1b08 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x230>
    2f1c:	ldr	x0, [x25, #32]
    2f20:	cmp	x26, x0
    2f24:	b.eq	2f2c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1654>  // b.none
    2f28:	bl	0 <_ZdlPv>
    2f2c:	mov	x0, x25
    2f30:	bl	0 <_ZdlPv>
    2f34:	b	1c74 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x39c>
    2f38:	ldp	x0, x1, [sp, #112]
    2f3c:	stp	x0, x1, [x25, #48]
    2f40:	b	1c2c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x354>
    2f44:	ldr	x0, [x23, #32]
    2f48:	cmp	x25, x0
    2f4c:	b.eq	2f54 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x167c>  // b.none
    2f50:	bl	0 <_ZdlPv>
    2f54:	mov	x0, x23
    2f58:	bl	0 <_ZdlPv>
    2f5c:	b	2c34 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x135c>
    2f60:	ldp	x0, x1, [sp, #112]
    2f64:	stp	x0, x1, [x23, #48]
    2f68:	b	2bec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1314>
    2f6c:	ldr	x0, [x25, #32]
    2f70:	cmp	x26, x0
    2f74:	b.eq	2f7c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x16a4>  // b.none
    2f78:	bl	0 <_ZdlPv>
    2f7c:	mov	x0, x25
    2f80:	bl	0 <_ZdlPv>
    2f84:	b	1e6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x594>
    2f88:	ldp	x0, x1, [sp, #112]
    2f8c:	stp	x0, x1, [x25, #48]
    2f90:	b	1e24 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x54c>
    2f94:	ldr	x0, [x25, #32]
    2f98:	cmp	x26, x0
    2f9c:	b.eq	2fa4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x16cc>  // b.none
    2fa0:	bl	0 <_ZdlPv>
    2fa4:	mov	x0, x25
    2fa8:	bl	0 <_ZdlPv>
    2fac:	b	2454 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb7c>
    2fb0:	ldp	x0, x1, [sp, #112]
    2fb4:	stp	x0, x1, [x25, #48]
    2fb8:	b	240c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb34>
    2fbc:	ldr	x0, [x25, #32]
    2fc0:	cmp	x26, x0
    2fc4:	b.eq	2fcc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x16f4>  // b.none
    2fc8:	bl	0 <_ZdlPv>
    2fcc:	mov	x0, x25
    2fd0:	bl	0 <_ZdlPv>
    2fd4:	b	264c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd74>
    2fd8:	ldp	x0, x1, [sp, #112]
    2fdc:	stp	x0, x1, [x25, #48]
    2fe0:	b	2604 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd2c>
    2fe4:	ldr	x0, [x25, #32]
    2fe8:	cmp	x26, x0
    2fec:	b.eq	2ff4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x171c>  // b.none
    2ff0:	bl	0 <_ZdlPv>
    2ff4:	mov	x0, x25
    2ff8:	bl	0 <_ZdlPv>
    2ffc:	b	225c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x984>
    3000:	ldp	x0, x1, [sp, #112]
    3004:	stp	x0, x1, [x25, #48]
    3008:	b	2214 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x93c>
    300c:	mov	x22, x25
    3010:	b	1bfc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x324>
    3014:	mov	x22, x25
    3018:	b	1fec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x714>
    301c:	mov	x22, x25
    3020:	b	1df4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x51c>
    3024:	mov	x22, x25
    3028:	b	23dc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb04>
    302c:	mov	x22, x25
    3030:	b	21e4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x90c>
    3034:	mov	x22, x25
    3038:	b	27cc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xef4>
    303c:	mov	x22, x25
    3040:	b	25d4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcfc>
    3044:	mov	x20, x23
    3048:	b	2bbc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12e4>
    304c:	mov	x22, x25
    3050:	b	29c4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10ec>
    3054:	bl	0 <_ZSt20__throw_system_errori>

0000000000003058 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    3058:	mov	x12, #0x27b0                	// #10160
    305c:	sub	sp, sp, x12
    3060:	cmp	x2, #0x1
    3064:	stp	x29, x30, [sp]
    3068:	mov	x29, sp
    306c:	stp	x19, x20, [sp, #16]
    3070:	stp	x21, x22, [sp, #32]
    3074:	stp	x23, x24, [sp, #48]
    3078:	stp	x25, x26, [sp, #64]
    307c:	b.ls	31e0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x188>  // b.plast
    3080:	mov	x20, x2
    3084:	mov	w2, #0x1                   	// #1
    3088:	add	x26, sp, #0x58
    308c:	mov	x22, x8
    3090:	mov	x25, x0
    3094:	mov	x21, x1
    3098:	add	x24, sp, #0xa0
    309c:	mov	x0, x26
    30a0:	add	x1, sp, #0x70
    30a4:	stp	xzr, xzr, [sp, #88]
    30a8:	stp	xzr, x24, [sp, #104]
    30ac:	str	xzr, [sp, #120]
    30b0:	str	w2, [sp, #128]
    30b4:	stp	xzr, xzr, [sp, #136]
    30b8:	str	xzr, [sp, #152]
    30bc:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    30c0:	ldp	x19, x23, [sp, #136]
    30c4:	cmp	x19, x23
    30c8:	b.eq	3100 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa8>  // b.none
    30cc:	nop
    30d0:	add	x0, x19, #0x18
    30d4:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    30d8:	ldr	w0, [x19, #16]
    30dc:	cmp	w0, #0x40
    30e0:	b.ls	30f0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>  // b.plast
    30e4:	ldr	x0, [x19, #8]
    30e8:	cbz	x0, 30f0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>
    30ec:	bl	0 <_ZdaPv>
    30f0:	add	x19, x19, #0x30
    30f4:	cmp	x23, x19
    30f8:	b.ne	30d0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x78>  // b.any
    30fc:	ldr	x23, [sp, #136]
    3100:	cbz	x23, 310c <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>
    3104:	mov	x0, x23
    3108:	bl	0 <_ZdlPv>
    310c:	ldr	w0, [sp, #128]
    3110:	cmp	w0, #0x40
    3114:	b.hi	31d0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x178>  // b.pmore
    3118:	ldr	x1, [sp, #96]
    311c:	add	x20, x20, x20, lsl #1
    3120:	mov	w4, #0x0                   	// #0
    3124:	mov	x0, x26
    3128:	add	x3, x21, x20, lsl #4
    312c:	add	x2, x21, #0x30
    3130:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    3134:	ldp	x1, x3, [sp, #88]
    3138:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    313c:	movk	x2, #0xaaab
    3140:	mov	x0, x25
    3144:	mov	x8, x22
    3148:	sub	x3, x3, x1
    314c:	asr	x3, x3, #4
    3150:	mul	x2, x3, x2
    3154:	bl	530 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    3158:	ldr	x1, [x21]
    315c:	mov	x0, x24
    3160:	bl	0 <fputs>
    3164:	ldp	x19, x20, [sp, #88]
    3168:	cmp	x19, x20
    316c:	b.eq	31a0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x148>  // b.none
    3170:	add	x0, x19, #0x18
    3174:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    3178:	ldr	w0, [x19, #16]
    317c:	cmp	w0, #0x40
    3180:	b.ls	3190 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>  // b.plast
    3184:	ldr	x0, [x19, #8]
    3188:	cbz	x0, 3190 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>
    318c:	bl	0 <_ZdaPv>
    3190:	add	x19, x19, #0x30
    3194:	cmp	x20, x19
    3198:	b.ne	3170 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x118>  // b.any
    319c:	ldr	x20, [sp, #88]
    31a0:	cbz	x20, 31ac <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x154>
    31a4:	mov	x0, x20
    31a8:	bl	0 <_ZdlPv>
    31ac:	mov	x0, x22
    31b0:	mov	x12, #0x27b0                	// #10160
    31b4:	ldp	x29, x30, [sp]
    31b8:	ldp	x19, x20, [sp, #16]
    31bc:	ldp	x21, x22, [sp, #32]
    31c0:	ldp	x23, x24, [sp, #48]
    31c4:	ldp	x25, x26, [sp, #64]
    31c8:	add	sp, sp, x12
    31cc:	ret
    31d0:	ldr	x0, [sp, #120]
    31d4:	cbz	x0, 3118 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>
    31d8:	bl	0 <_ZdaPv>
    31dc:	b	3118 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>
    31e0:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    31e4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    31e8:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    31ec:	add	x3, x3, #0x0
    31f0:	add	x1, x1, #0x0
    31f4:	add	x0, x0, #0x0
    31f8:	mov	w2, #0x1cd                 	// #461
    31fc:	bl	0 <__assert_fail>

0000000000003200 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    3200:	mov	x12, #0x27b0                	// #10160
    3204:	sub	sp, sp, x12
    3208:	stp	x29, x30, [sp]
    320c:	mov	x29, sp
    3210:	stp	x19, x20, [sp, #16]
    3214:	mov	x20, x2
    3218:	mov	w2, #0x1                   	// #1
    321c:	stp	x25, x26, [sp, #64]
    3220:	add	x26, sp, #0x58
    3224:	mov	x25, x0
    3228:	mov	x0, x26
    322c:	stp	x21, x22, [sp, #32]
    3230:	mov	x21, x8
    3234:	add	x22, sp, #0xa0
    3238:	stp	x23, x24, [sp, #48]
    323c:	mov	x24, x1
    3240:	add	x1, sp, #0x70
    3244:	stp	xzr, xzr, [sp, #88]
    3248:	stp	xzr, x22, [sp, #104]
    324c:	str	xzr, [sp, #120]
    3250:	str	w2, [sp, #128]
    3254:	stp	xzr, xzr, [sp, #136]
    3258:	str	xzr, [sp, #152]
    325c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    3260:	ldp	x19, x23, [sp, #136]
    3264:	cmp	x19, x23
    3268:	b.eq	32a0 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>  // b.none
    326c:	nop
    3270:	add	x0, x19, #0x18
    3274:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    3278:	ldr	w0, [x19, #16]
    327c:	cmp	w0, #0x40
    3280:	b.ls	3290 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x90>  // b.plast
    3284:	ldr	x0, [x19, #8]
    3288:	cbz	x0, 3290 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x90>
    328c:	bl	0 <_ZdaPv>
    3290:	add	x19, x19, #0x30
    3294:	cmp	x23, x19
    3298:	b.ne	3270 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x70>  // b.any
    329c:	ldr	x23, [sp, #136]
    32a0:	cbz	x23, 32ac <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>
    32a4:	mov	x0, x23
    32a8:	bl	0 <_ZdlPv>
    32ac:	ldr	w0, [sp, #128]
    32b0:	cmp	w0, #0x40
    32b4:	b.ls	32c4 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc4>  // b.plast
    32b8:	ldr	x0, [sp, #120]
    32bc:	cbz	x0, 32c4 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc4>
    32c0:	bl	0 <_ZdaPv>
    32c4:	ldr	x1, [sp, #96]
    32c8:	add	x20, x20, x20, lsl #1
    32cc:	mov	w4, #0x0                   	// #0
    32d0:	mov	x2, x24
    32d4:	add	x3, x24, x20, lsl #4
    32d8:	mov	x0, x26
    32dc:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    32e0:	ldp	x1, x3, [sp, #88]
    32e4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    32e8:	movk	x2, #0xaaab
    32ec:	mov	x8, x21
    32f0:	mov	x0, x25
    32f4:	sub	x3, x3, x1
    32f8:	asr	x3, x3, #4
    32fc:	mul	x2, x3, x2
    3300:	bl	530 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    3304:	bl	0 <_ZN4llvm4outsEv>
    3308:	mov	x19, x0
    330c:	mov	x0, x22
    3310:	bl	0 <strlen>
    3314:	mov	x20, x0
    3318:	ldp	x1, x0, [x19, #16]
    331c:	sub	x1, x1, x0
    3320:	cmp	x20, x1
    3324:	b.hi	33b4 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b4>  // b.pmore
    3328:	cbnz	x20, 3398 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x198>
    332c:	ldp	x19, x20, [sp, #88]
    3330:	cmp	x19, x20
    3334:	b.eq	3368 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x168>  // b.none
    3338:	add	x0, x19, #0x18
    333c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    3340:	ldr	w0, [x19, #16]
    3344:	cmp	w0, #0x40
    3348:	b.ls	3358 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x158>  // b.plast
    334c:	ldr	x0, [x19, #8]
    3350:	cbz	x0, 3358 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x158>
    3354:	bl	0 <_ZdaPv>
    3358:	add	x19, x19, #0x30
    335c:	cmp	x20, x19
    3360:	b.ne	3338 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>  // b.any
    3364:	ldr	x20, [sp, #88]
    3368:	cbz	x20, 3374 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x174>
    336c:	mov	x0, x20
    3370:	bl	0 <_ZdlPv>
    3374:	mov	x0, x21
    3378:	mov	x12, #0x27b0                	// #10160
    337c:	ldp	x29, x30, [sp]
    3380:	ldp	x19, x20, [sp, #16]
    3384:	ldp	x21, x22, [sp, #32]
    3388:	ldp	x23, x24, [sp, #48]
    338c:	ldp	x25, x26, [sp, #64]
    3390:	add	sp, sp, x12
    3394:	ret
    3398:	mov	x1, x22
    339c:	mov	x2, x20
    33a0:	bl	0 <memcpy>
    33a4:	ldr	x0, [x19, #24]
    33a8:	add	x0, x0, x20
    33ac:	str	x0, [x19, #24]
    33b0:	b	332c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x12c>
    33b4:	mov	x2, x20
    33b8:	mov	x1, x22
    33bc:	mov	x0, x19
    33c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    33c4:	b	332c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x12c>

Disassembly of section .text._ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv>:
   0:	cbz	x0, c <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv+0xc>
   4:	mov	x1, #0x38                  	// #56
   8:	b	0 <_ZdlPvm>
   c:	ret

Disassembly of section .text._ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x38                  	// #56
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	stp	xzr, xzr, [x0, #16]
  14:	mov	w2, #0x1                   	// #1
  18:	stp	xzr, xzr, [x0]
  1c:	str	w2, [x0, #16]
  20:	stp	xzr, xzr, [x0, #32]
  24:	str	xzr, [x0, #48]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x30                  	// #48
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	stp	x1, x1, [x1, #16]
  20:	str	xzr, [x1, #32]
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x30                  	// #48
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	stp	x1, x1, [x1, #16]
  20:	str	xzr, [x1, #32]
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w2, [x1, #8]
  28:	str	w2, [x0, #8]
  2c:	cmp	w2, #0x40
  30:	b.hi	10c <_ZN4llvm12GenericValueC1ERKS0_+0x10c>  // b.pmore
  34:	ldr	x0, [x19, #8]
  38:	str	x0, [x22, #8]
  3c:	ldp	x0, x21, [x19, #24]
  40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x1, #0xaaab
  48:	add	x23, x22, #0x18
  4c:	str	xzr, [x22, #24]
  50:	mov	x20, #0x0                   	// #0
  54:	stp	xzr, xzr, [x23, #8]
  58:	sub	x21, x21, x0
  5c:	asr	x0, x21, #4
  60:	mul	x0, x0, x1
  64:	cbz	x0, 84 <_ZN4llvm12GenericValueC1ERKS0_+0x84>
  68:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	movk	x1, #0x2aa, lsl #48
  70:	cmp	x0, x1
  74:	b.hi	114 <_ZN4llvm12GenericValueC1ERKS0_+0x114>  // b.pmore
  78:	mov	x0, x21
  7c:	bl	0 <_Znwm>
  80:	mov	x20, x0
  84:	str	x20, [x22, #24]
  88:	add	x21, x20, x21
  8c:	stp	x20, x21, [x23, #8]
  90:	ldp	x24, x19, [x19, #24]
  94:	cmp	x24, x19
  98:	b.eq	f4 <_ZN4llvm12GenericValueC1ERKS0_+0xf4>  // b.none
  9c:	mov	x21, x24
  a0:	mov	x22, x20
  a4:	nop
  a8:	mov	x1, x21
  ac:	mov	x0, x22
  b0:	add	x21, x21, #0x30
  b4:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  b8:	cmp	x19, x21
  bc:	add	x22, x22, #0x30
  c0:	b.ne	a8 <_ZN4llvm12GenericValueC1ERKS0_+0xa8>  // b.any
  c4:	sub	x1, x19, #0x30
  c8:	mov	x19, #0xaaab                	// #43691
  cc:	sub	x1, x1, x24
  d0:	movk	x19, #0xaaaa, lsl #16
  d4:	movk	x19, #0xaaaa, lsl #32
  d8:	lsr	x1, x1, #4
  dc:	movk	x19, #0xaaa, lsl #48
  e0:	mul	x1, x1, x19
  e4:	and	x1, x1, #0xfffffffffffffff
  e8:	add	x1, x1, #0x1
  ec:	add	x1, x1, x1, lsl #1
  f0:	add	x20, x20, x1, lsl #4
  f4:	ldp	x21, x22, [sp, #32]
  f8:	str	x20, [x23, #8]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret
 10c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 110:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
 114:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldp	x19, x20, [x0]
  10:	cmp	x19, x20
  14:	b.eq	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x54>  // b.none
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x0
  20:	add	x0, x19, #0x18
  24:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  28:	ldr	w1, [x19, #16]
  2c:	cmp	w1, #0x40
  30:	b.ls	40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>  // b.plast
  34:	ldr	x0, [x19, #8]
  38:	cbz	x0, 40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>
  3c:	bl	0 <_ZdaPv>
  40:	add	x19, x19, #0x30
  44:	cmp	x20, x19
  48:	b.ne	20 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x20>  // b.any
  4c:	ldr	x20, [x21]
  50:	ldr	x21, [sp, #32]
  54:	cbz	x20, 68 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x68>
  58:	mov	x0, x20
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZdlPv>
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	mov	x22, x1
  14:	mov	x0, #0x30                  	// #48
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	bl	0 <_Znwm>
  24:	mov	x20, x0
  28:	ldr	x23, [x22]
  2c:	str	x23, [x0, #32]
  30:	ldr	x19, [x21, #16]
  34:	add	x24, x21, #0x8
  38:	ldr	x0, [x22, #8]
  3c:	str	x0, [x20, #40]
  40:	cbz	x19, 130 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x130>
  44:	ldr	x2, [x19, #32]
  48:	mov	w1, #0x1                   	// #1
  4c:	cmp	x2, x23
  50:	b.ls	74 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x74>  // b.plast
  54:	nop
  58:	ldr	x0, [x19, #16]
  5c:	cbz	x0, 80 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x80>
  60:	mov	x19, x0
  64:	mov	w1, #0x1                   	// #1
  68:	ldr	x2, [x19, #32]
  6c:	cmp	x2, x23
  70:	b.hi	58 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x58>  // b.pmore
  74:	ldr	x0, [x19, #24]
  78:	mov	w1, #0x0                   	// #0
  7c:	cbnz	x0, 60 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x60>
  80:	cbnz	w1, d8 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xd8>
  84:	cmp	x2, x23
  88:	b.cs	fc <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xfc>  // b.hs, b.nlast
  8c:	cmp	x24, x19
  90:	mov	w0, #0x1                   	// #1
  94:	b.ne	120 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x120>  // b.any
  98:	mov	x3, x24
  9c:	mov	x2, x19
  a0:	mov	x1, x20
  a4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  a8:	ldr	x2, [x21, #40]
  ac:	mov	x3, #0x1                   	// #1
  b0:	mov	x1, #0x0                   	// #0
  b4:	mov	x0, x20
  b8:	add	x2, x2, x3
  bc:	str	x2, [x21, #40]
  c0:	bfxil	x1, x3, #0, #8
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	ldr	x0, [x21, #24]
  dc:	cmp	x0, x19
  e0:	b.eq	8c <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x8c>  // b.none
  e4:	mov	x0, x19
  e8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  ec:	ldr	x1, [x0, #32]
  f0:	cmp	x23, x1
  f4:	b.hi	8c <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x8c>  // b.pmore
  f8:	mov	x19, x0
  fc:	mov	x0, x20
 100:	bl	0 <_ZdlPv>
 104:	mov	x0, x19
 108:	mov	x1, #0x0                   	// #0
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x29, x30, [sp], #64
 11c:	ret
 120:	ldr	x0, [x19, #32]
 124:	cmp	x23, x0
 128:	cset	w0, cc  // cc = lo, ul, last
 12c:	b	98 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x98>
 130:	ldr	x0, [x21, #24]
 134:	mov	x19, x24
 138:	cmp	x0, x24
 13c:	b.ne	e4 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xe4>  // b.any
 140:	mov	w0, #0x1                   	// #1
 144:	b	98 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x98>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	ldp	x20, x0, [x0, #8]
  1c:	cmp	x20, x0
  20:	b.eq	84 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x84>  // b.none
  24:	mov	x2, x20
  28:	ldr	x4, [x1], #8
  2c:	str	x4, [x2], #8
  30:	ldr	w5, [x1, #8]
  34:	str	w5, [x2, #8]
  38:	ldr	x4, [x19, #8]
  3c:	str	x4, [x20, #8]
  40:	str	wzr, [x1, #8]
  44:	ldr	x1, [x19, #24]
  48:	str	x1, [x20, #24]
  4c:	ldr	x1, [x19, #32]
  50:	str	x1, [x20, #32]
  54:	str	xzr, [x19, #32]
  58:	ldr	x1, [x19, #40]
  5c:	ldr	x0, [x21, #8]
  60:	str	xzr, [x19, #24]
  64:	str	xzr, [x19, #40]
  68:	str	x1, [x20, #40]
  6c:	add	x0, x0, #0x30
  70:	str	x0, [x21, #8]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #112
  80:	ret
  84:	stp	x27, x28, [sp, #80]
  88:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  8c:	movk	x1, #0xaaab
  90:	ldr	x27, [x21]
  94:	stp	x23, x24, [sp, #48]
  98:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  9c:	sub	x24, x20, x27
  a0:	movk	x0, #0x2aa, lsl #48
  a4:	asr	x22, x24, #4
  a8:	mul	x22, x22, x1
  ac:	cmp	x22, x0
  b0:	b.eq	344 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x344>  // b.none
  b4:	cbz	x22, 324 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x324>
  b8:	lsl	x1, x22, #1
  bc:	str	x1, [sp, #104]
  c0:	cmp	x22, x22, lsl #1
  c4:	b.ls	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x300>  // b.plast
  c8:	str	x0, [sp, #104]
  cc:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
  d0:	bl	0 <_Znwm>
  d4:	str	x0, [sp, #96]
  d8:	mov	x2, x19
  dc:	cmp	x20, x27
  e0:	ldr	x28, [sp, #96]
  e4:	ldr	x4, [x2], #8
  e8:	add	x1, x28, x24
  ec:	add	x3, x1, #0x18
  f0:	str	x4, [x28, x24]
  f4:	ldr	x5, [x19, #8]
  f8:	str	x5, [x1, #8]
  fc:	ldr	w5, [x2, #8]
 100:	ldr	x4, [x19, #24]
 104:	str	w5, [x1, #16]
 108:	str	x4, [x1, #24]
 10c:	ldr	x1, [x19, #40]
 110:	str	wzr, [x2, #8]
 114:	ldr	x2, [x19, #32]
 118:	stp	x2, x1, [x3, #8]
 11c:	stp	xzr, xzr, [x19, #24]
 120:	str	xzr, [x19, #40]
 124:	b.eq	334 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x334>  // b.none
 128:	mov	x22, x27
 12c:	stp	x25, x26, [sp, #64]
 130:	ldr	x0, [x22]
 134:	str	x0, [x28]
 138:	ldr	w0, [x22, #16]
 13c:	str	w0, [x28, #16]
 140:	cmp	w0, #0x40
 144:	b.hi	234 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x234>  // b.pmore
 148:	ldr	x0, [x22, #8]
 14c:	str	x0, [x28, #8]
 150:	ldp	x0, x19, [x22, #24]
 154:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 158:	movk	x1, #0xaaab
 15c:	stp	xzr, xzr, [x28, #24]
 160:	mov	x23, #0x0                   	// #0
 164:	str	xzr, [x28, #40]
 168:	sub	x19, x19, x0
 16c:	asr	x0, x19, #4
 170:	mul	x0, x0, x1
 174:	cbz	x0, 194 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x194>
 178:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 17c:	movk	x1, #0x2aa, lsl #48
 180:	cmp	x0, x1
 184:	b.hi	340 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x340>  // b.pmore
 188:	mov	x0, x19
 18c:	bl	0 <_Znwm>
 190:	mov	x23, x0
 194:	add	x19, x23, x19
 198:	stp	x23, x23, [x28, #24]
 19c:	str	x19, [x28, #40]
 1a0:	ldp	x26, x19, [x22, #24]
 1a4:	cmp	x26, x19
 1a8:	b.eq	204 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x204>  // b.none
 1ac:	mov	x25, x26
 1b0:	mov	x24, x23
 1b4:	nop
 1b8:	mov	x1, x25
 1bc:	mov	x0, x24
 1c0:	add	x25, x25, #0x30
 1c4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 1c8:	cmp	x19, x25
 1cc:	add	x24, x24, #0x30
 1d0:	b.ne	1b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x1b8>  // b.any
 1d4:	sub	x1, x19, #0x30
 1d8:	mov	x0, #0xaaab                	// #43691
 1dc:	sub	x1, x1, x26
 1e0:	movk	x0, #0xaaaa, lsl #16
 1e4:	movk	x0, #0xaaaa, lsl #32
 1e8:	lsr	x1, x1, #4
 1ec:	movk	x0, #0xaaa, lsl #48
 1f0:	mul	x1, x1, x0
 1f4:	and	x1, x1, #0xfffffffffffffff
 1f8:	add	x1, x1, #0x1
 1fc:	add	x1, x1, x1, lsl #1
 200:	add	x23, x23, x1, lsl #4
 204:	str	x23, [x28, #32]
 208:	add	x22, x22, #0x30
 20c:	cmp	x20, x22
 210:	add	x0, x28, #0x30
 214:	b.eq	244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x244>  // b.none
 218:	mov	x28, x0
 21c:	ldr	x0, [x22]
 220:	str	x0, [x28]
 224:	ldr	w0, [x22, #16]
 228:	str	w0, [x28, #16]
 22c:	cmp	w0, #0x40
 230:	b.ls	148 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x148>  // b.plast
 234:	add	x1, x22, #0x8
 238:	add	x0, x28, #0x8
 23c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 240:	b	150 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x150>
 244:	add	x28, x28, #0x60
 248:	mov	x24, x27
 24c:	nop
 250:	ldp	x19, x25, [x24, #24]
 254:	cmp	x19, x25
 258:	b.eq	290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x290>  // b.none
 25c:	nop
 260:	add	x0, x19, #0x18
 264:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 268:	ldr	w0, [x19, #16]
 26c:	cmp	w0, #0x40
 270:	b.ls	280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x280>  // b.plast
 274:	ldr	x0, [x19, #8]
 278:	cbz	x0, 280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x280>
 27c:	bl	0 <_ZdaPv>
 280:	add	x19, x19, #0x30
 284:	cmp	x25, x19
 288:	b.ne	260 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x260>  // b.any
 28c:	ldr	x25, [x24, #24]
 290:	cbz	x25, 29c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x29c>
 294:	mov	x0, x25
 298:	bl	0 <_ZdlPv>
 29c:	ldr	w0, [x24, #16]
 2a0:	cmp	w0, #0x40
 2a4:	b.ls	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2b4>  // b.plast
 2a8:	ldr	x0, [x24, #8]
 2ac:	cbz	x0, 2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2b4>
 2b0:	bl	0 <_ZdaPv>
 2b4:	add	x24, x24, #0x30
 2b8:	cmp	x20, x24
 2bc:	b.ne	250 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x250>  // b.any
 2c0:	ldp	x25, x26, [sp, #64]
 2c4:	cbz	x27, 2d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2d0>
 2c8:	mov	x0, x27
 2cc:	bl	0 <_ZdlPv>
 2d0:	ldr	x0, [sp, #104]
 2d4:	ldp	x19, x20, [sp, #16]
 2d8:	add	x22, x0, x0, lsl #1
 2dc:	ldr	x0, [sp, #96]
 2e0:	stp	x0, x28, [x21]
 2e4:	ldp	x27, x28, [sp, #80]
 2e8:	add	x23, x0, x22, lsl #4
 2ec:	str	x23, [x21, #16]
 2f0:	ldp	x21, x22, [sp, #32]
 2f4:	ldp	x23, x24, [sp, #48]
 2f8:	ldp	x29, x30, [sp], #112
 2fc:	ret
 300:	str	xzr, [sp, #96]
 304:	cbz	x1, d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd8>
 308:	mov	x2, x1
 30c:	cmp	x1, x0
 310:	csel	x0, x2, x0, ls  // ls = plast
 314:	mov	x1, #0x30                  	// #48
 318:	str	x0, [sp, #104]
 31c:	mul	x0, x0, x1
 320:	b	d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd0>
 324:	mov	x1, #0x1                   	// #1
 328:	mov	x0, #0x30                  	// #48
 32c:	str	x1, [sp, #104]
 330:	b	d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd0>
 334:	ldr	x0, [sp, #96]
 338:	add	x28, x0, #0x30
 33c:	b	2c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2c4>
 340:	bl	0 <_ZSt17__throw_bad_allocv>
 344:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 348:	add	x0, x0, #0x0
 34c:	stp	x25, x26, [sp, #64]
 350:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x3
  14:	stp	x21, x22, [sp, #32]
  18:	add	x3, x0, #0x8
  1c:	mov	x21, x2
  20:	mov	w0, #0x1                   	// #1
  24:	cbz	x1, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x54>
  28:	mov	x2, x21
  2c:	mov	x1, x20
  30:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  34:	ldr	x1, [x19, #40]
  38:	mov	x0, x20
  3c:	ldp	x21, x22, [sp, #32]
  40:	add	x1, x1, #0x1
  44:	str	x1, [x19, #40]
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	cmp	x2, x3
  58:	mov	w0, #0x1                   	// #1
  5c:	b.eq	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x28>  // b.none
  60:	ldr	x22, [x2, #40]
  64:	str	x23, [sp, #48]
  68:	ldr	x23, [x20, #40]
  6c:	cmp	x23, x22
  70:	csel	x2, x23, x22, ls  // ls = plast
  74:	cbz	x2, 90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x90>
  78:	ldr	x0, [x20, #32]
  7c:	str	x3, [sp, #72]
  80:	ldr	x1, [x21, #32]
  84:	bl	0 <memcmp>
  88:	ldr	x3, [sp, #72]
  8c:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0xb4>
  90:	sub	x1, x23, x22
  94:	mov	x2, #0x7fffffff            	// #2147483647
  98:	mov	w0, #0x0                   	// #0
  9c:	cmp	x1, x2
  a0:	b.gt	c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0xc0>
  a4:	mov	x0, #0xffffffff80000000    	// #-2147483648
  a8:	cmp	x1, x0
  ac:	b.lt	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0xc8>  // b.tstop
  b0:	mov	w0, w1
  b4:	lsr	w0, w0, #31
  b8:	ldr	x23, [sp, #48]
  bc:	b	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x28>
  c0:	ldr	x23, [sp, #48]
  c4:	b	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x28>
  c8:	mov	w0, #0x1                   	// #1
  cc:	ldr	x23, [sp, #48]
  d0:	b	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x28>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
   0:	cbz	x1, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x60>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x20, x19
  24:	mov	x0, x21
  28:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
  2c:	ldr	x0, [x20, #32]
  30:	add	x1, x19, #0x30
  34:	ldr	x19, [x19, #16]
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x44>  // b.none
  40:	bl	0 <_ZdlPv>
  44:	mov	x0, x20
  48:	bl	0 <_ZdlPv>
  4c:	cbnz	x19, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x1c>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ret

Disassembly of section .text._ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>:
   0:	cbz	x0, 30 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x30>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #16]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	bl	0 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>
  1c:	mov	x0, x19
  20:	mov	x1, #0x30                  	// #48
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZdlPvm>
  30:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x25, x0
  24:	stp	x27, x28, [sp, #80]
  28:	cbz	x19, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xfc>
  2c:	ldp	x28, x21, [x1]
  30:	mov	x22, #0x7fffffff            	// #2147483647
  34:	mov	x24, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x27, x20, [x19, #32]
  3c:	mov	x0, x28
  40:	cmp	x21, x20
  44:	csel	x26, x21, x20, ls  // ls = plast
  48:	cbz	x26, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x5c>
  4c:	mov	x2, x26
  50:	mov	x1, x27
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x74>
  5c:	sub	x1, x21, x20
  60:	mov	w0, w1
  64:	cmp	x1, x22
  68:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x8c>
  6c:	cmp	x1, x24
  70:	b.lt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x78>  // b.tstop
  74:	tbz	w0, #31, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x8c>
  78:	ldr	x3, [x19, #16]
  7c:	mov	w0, #0x1                   	// #1
  80:	cbz	x3, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x98>
  84:	mov	x19, x3
  88:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x38>
  8c:	ldr	x3, [x19, #24]
  90:	mov	w0, #0x0                   	// #0
  94:	cbnz	x3, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x84>
  98:	mov	x22, x19
  9c:	cbnz	w0, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x100>
  a0:	cbz	x26, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb8>
  a4:	mov	x2, x26
  a8:	mov	x1, x28
  ac:	mov	x0, x27
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xd4>
  b8:	sub	x0, x20, x21
  bc:	mov	x1, #0x7fffffff            	// #2147483647
  c0:	cmp	x0, x1
  c4:	b.gt	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xd8>
  c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  cc:	cmp	x0, x1
  d0:	b.lt	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x130>  // b.tstop
  d4:	tbnz	w0, #31, 130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x130>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x0                   	// #0
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #96
  f8:	ret
  fc:	add	x19, x0, #0x8
 100:	ldr	x0, [x25, #24]
 104:	cmp	x19, x0
 108:	b.eq	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x154>  // b.none
 10c:	mov	x0, x19
 110:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 114:	ldp	x28, x21, [x23]
 118:	mov	x22, x19
 11c:	ldp	x27, x20, [x0, #32]
 120:	mov	x19, x0
 124:	cmp	x21, x20
 128:	csel	x26, x21, x20, ls  // ls = plast
 12c:	b	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xa0>
 130:	mov	x1, x22
 134:	mov	x0, #0x0                   	// #0
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldp	x25, x26, [sp, #64]
 148:	ldp	x27, x28, [sp, #80]
 14c:	ldp	x29, x30, [sp], #96
 150:	ret
 154:	mov	x1, x19
 158:	mov	x0, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x27, x28, [sp, #80]
 170:	ldp	x29, x30, [sp], #96
 174:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	add	x3, x0, #0x8
   8:	cmp	x1, x3
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	mov	x24, x2
  1c:	b.eq	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x170>  // b.none
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x19, x1
  28:	stp	x21, x22, [sp, #32]
  2c:	stp	x25, x26, [sp, #64]
  30:	ldp	x25, x20, [x2]
  34:	ldp	x26, x21, [x1, #32]
  38:	cmp	x20, x21
  3c:	csel	x22, x20, x21, ls  // ls = plast
  40:	cbz	x22, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xd8>
  44:	mov	x2, x22
  48:	mov	x1, x26
  4c:	mov	x0, x25
  50:	bl	0 <memcmp>
  54:	cmp	w0, #0x0
  58:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xec>
  5c:	sub	x0, x20, x21
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	cmp	x0, x1
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x80>
  6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x0, x1
  74:	b.lt	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xf0>  // b.tstop
  78:	tbnz	w0, #31, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xf0>
  7c:	cbz	x22, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x98>
  80:	mov	x1, x25
  84:	mov	x2, x22
  88:	mov	x0, x26
  8c:	bl	0 <memcmp>
  90:	mov	w1, w0
  94:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xb4>
  98:	sub	x1, x21, x20
  9c:	mov	x0, #0x7fffffff            	// #2147483647
  a0:	cmp	x1, x0
  a4:	b.gt	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xb8>
  a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  ac:	cmp	x1, x0
  b0:	b.lt	1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1f0>  // b.tstop
  b4:	tbnz	w1, #31, 1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1f0>
  b8:	ldp	x25, x26, [sp, #64]
  bc:	mov	x0, x19
  c0:	mov	x1, #0x0                   	// #0
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	sub	x0, x20, x21
  dc:	mov	x1, #0x7fffffff            	// #2147483647
  e0:	cmp	x0, x1
  e4:	b.le	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x6c>
  e8:	b	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x98>
  ec:	b.ge	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x80>  // b.tcont
  f0:	ldr	x0, [x23, #24]
  f4:	cmp	x0, x19
  f8:	mov	x0, x19
  fc:	b.eq	280 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x280>  // b.none
 100:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 104:	mov	x21, x0
 108:	ldr	x22, [x0, #40]
 10c:	cmp	x20, x22
 110:	csel	x2, x20, x22, ls  // ls = plast
 114:	cbz	x2, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x128>
 118:	ldr	x0, [x0, #32]
 11c:	mov	x1, x25
 120:	bl	0 <memcmp>
 124:	cbnz	w0, 144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x144>
 128:	sub	x0, x22, x20
 12c:	mov	x1, #0x7fffffff            	// #2147483647
 130:	cmp	x0, x1
 134:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 138:	mov	x1, #0xffffffff80000000    	// #-2147483648
 13c:	cmp	x0, x1
 140:	b.lt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x148>  // b.tstop
 144:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 148:	ldr	x1, [x21, #24]
 14c:	ldp	x23, x24, [sp, #48]
 150:	cmp	x1, #0x0
 154:	csel	x1, x21, x19, eq  // eq = none
 158:	csel	x0, x19, xzr, ne  // ne = any
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x25, x26, [sp, #64]
 168:	ldp	x29, x30, [sp], #80
 16c:	ret
 170:	ldr	x0, [x0, #40]
 174:	cbz	x0, 1dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1dc>
 178:	stp	x19, x20, [sp, #16]
 17c:	ldr	x19, [x23, #32]
 180:	stp	x21, x22, [sp, #32]
 184:	ldr	x20, [x2, #8]
 188:	ldr	x21, [x19, #40]
 18c:	cmp	x21, x20
 190:	csel	x2, x21, x20, ls  // ls = plast
 194:	cbz	x2, 1a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1a8>
 198:	ldr	x1, [x24]
 19c:	ldr	x0, [x19, #32]
 1a0:	bl	0 <memcmp>
 1a4:	cbnz	w0, 1c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1c4>
 1a8:	sub	x0, x21, x20
 1ac:	mov	x1, #0x7fffffff            	// #2147483647
 1b0:	cmp	x0, x1
 1b4:	b.gt	1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1d4>
 1b8:	mov	x1, #0xffffffff80000000    	// #-2147483648
 1bc:	cmp	x0, x1
 1c0:	b.lt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1c8>  // b.tstop
 1c4:	tbz	w0, #31, 1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1d4>
 1c8:	mov	x1, x19
 1cc:	mov	x0, #0x0                   	// #0
 1d0:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	mov	x1, x24
 1e0:	mov	x0, x23
 1e4:	ldp	x23, x24, [sp, #48]
 1e8:	ldp	x29, x30, [sp], #80
 1ec:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 1f0:	ldr	x0, [x23, #32]
 1f4:	cmp	x0, x19
 1f8:	b.eq	28c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x28c>  // b.none
 1fc:	mov	x0, x19
 200:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 204:	ldr	x22, [x0, #40]
 208:	mov	x21, x0
 20c:	cmp	x20, x22
 210:	csel	x2, x20, x22, ls  // ls = plast
 214:	cbz	x2, 228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x228>
 218:	ldr	x1, [x21, #32]
 21c:	mov	x0, x25
 220:	bl	0 <memcmp>
 224:	cbnz	w0, 244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x244>
 228:	sub	x0, x20, x22
 22c:	mov	x1, #0x7fffffff            	// #2147483647
 230:	cmp	x0, x1
 234:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 238:	mov	x1, #0xffffffff80000000    	// #-2147483648
 23c:	cmp	x0, x1
 240:	b.lt	248 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x248>  // b.tstop
 244:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 248:	ldr	x1, [x19, #24]
 24c:	ldp	x25, x26, [sp, #64]
 250:	cmp	x1, #0x0
 254:	csel	x0, x21, xzr, ne  // ne = any
 258:	csel	x1, x21, x19, ne  // ne = any
 25c:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>
 260:	mov	x1, x24
 264:	mov	x0, x23
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldp	x21, x22, [sp, #32]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x25, x26, [sp, #64]
 278:	ldp	x29, x30, [sp], #80
 27c:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 280:	mov	x1, x19
 284:	ldp	x25, x26, [sp, #64]
 288:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>
 28c:	mov	x1, x19
 290:	mov	x0, #0x0                   	// #0
 294:	ldp	x25, x26, [sp, #64]
 298:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>:
   0:	cbz	x1, 40 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ret

Disassembly of section .text._ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>:
   0:	cbz	x0, 30 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv+0x30>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #16]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	bl	0 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>
  1c:	mov	x0, x19
  20:	mov	x1, #0x30                  	// #48
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZdlPvm>
  30:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	1b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1b4>  // b.none
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x1
  20:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	stp	x19, x20, [sp, #16]
  28:	movk	x1, #0xaaab
  2c:	stp	x23, x24, [sp, #48]
  30:	ldp	x19, x23, [x25]
  34:	ldr	x20, [x0]
  38:	ldr	x0, [x0, #16]
  3c:	sub	x22, x23, x19
  40:	sub	x0, x0, x20
  44:	asr	x26, x22, #4
  48:	asr	x0, x0, #4
  4c:	mul	x26, x26, x1
  50:	mul	x0, x0, x1
  54:	cmp	x0, x26
  58:	b.cc	1c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1c4>  // b.lo, b.ul, b.last
  5c:	stp	x27, x28, [sp, #80]
  60:	ldr	x28, [x21, #8]
  64:	sub	x0, x28, x20
  68:	asr	x24, x0, #4
  6c:	mul	x24, x24, x1
  70:	cmp	x26, x24
  74:	b.hi	384 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x384>  // b.pmore
  78:	cmp	x22, #0x0
  7c:	b.le	120 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x120>
  80:	add	x19, x19, #0x8
  84:	add	x23, x20, #0x8
  88:	mov	x24, #0xffffffffffffffff    	// #-1
  8c:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>
  90:	mov	x1, x19
  94:	mov	x0, x23
  98:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  9c:	add	x1, x19, #0x10
  a0:	add	x0, x23, #0x10
  a4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  a8:	add	x19, x19, #0x30
  ac:	add	x23, x23, #0x30
  b0:	subs	x26, x26, #0x1
  b4:	b.eq	10c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x10c>  // b.none
  b8:	ldur	x0, [x19, #-8]
  bc:	stur	x0, [x23, #-8]
  c0:	ldr	w0, [x23, #8]
  c4:	cmp	w0, #0x40
  c8:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  cc:	ldr	w0, [x19, #8]
  d0:	cmp	w0, #0x40
  d4:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  d8:	ldr	x2, [x19]
  dc:	neg	w1, w0
  e0:	str	w0, [x23, #8]
  e4:	lsr	x0, x24, x1
  e8:	and	x0, x0, x2
  ec:	str	x0, [x23]
  f0:	add	x1, x19, #0x10
  f4:	add	x0, x23, #0x10
  f8:	add	x19, x19, #0x30
  fc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 100:	add	x23, x23, #0x30
 104:	subs	x26, x26, #0x1
 108:	b.ne	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>  // b.any
 10c:	cmp	x22, #0x0
 110:	mov	x0, #0x30                  	// #48
 114:	csel	x0, x22, x0, gt
 118:	ldr	x28, [x21, #8]
 11c:	add	x20, x20, x0
 120:	cmp	x20, x28
 124:	b.eq	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x198>  // b.none
 128:	ldp	x19, x23, [x20, #24]
 12c:	cmp	x19, x23
 130:	b.eq	168 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x168>  // b.none
 134:	nop
 138:	add	x0, x19, #0x18
 13c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 140:	ldr	w0, [x19, #16]
 144:	cmp	w0, #0x40
 148:	b.ls	158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x158>  // b.plast
 14c:	ldr	x0, [x19, #8]
 150:	cbz	x0, 158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x158>
 154:	bl	0 <_ZdaPv>
 158:	add	x19, x19, #0x30
 15c:	cmp	x23, x19
 160:	b.ne	138 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x138>  // b.any
 164:	ldr	x23, [x20, #24]
 168:	cbz	x23, 174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x174>
 16c:	mov	x0, x23
 170:	bl	0 <_ZdlPv>
 174:	ldr	w0, [x20, #16]
 178:	cmp	w0, #0x40
 17c:	b.ls	18c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x18c>  // b.plast
 180:	ldr	x0, [x20, #8]
 184:	cbz	x0, 18c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x18c>
 188:	bl	0 <_ZdaPv>
 18c:	add	x20, x20, #0x30
 190:	cmp	x20, x28
 194:	b.ne	128 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x128>  // b.any
 198:	ldr	x20, [x21]
 19c:	add	x22, x20, x22
 1a0:	ldp	x27, x28, [sp, #80]
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x23, x24, [sp, #48]
 1ac:	ldp	x25, x26, [sp, #64]
 1b0:	str	x22, [x21, #8]
 1b4:	mov	x0, x21
 1b8:	ldp	x21, x22, [sp, #32]
 1bc:	ldp	x29, x30, [sp], #112
 1c0:	ret
 1c4:	cbz	x26, 540 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x540>
 1c8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1cc:	movk	x0, #0x2aa, lsl #48
 1d0:	cmp	x26, x0
 1d4:	b.hi	558 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x558>  // b.pmore
 1d8:	mov	x0, x22
 1dc:	bl	0 <_Znwm>
 1e0:	str	x0, [sp, #104]
 1e4:	cmp	x19, x23
 1e8:	ldr	x26, [sp, #104]
 1ec:	b.eq	2e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2e4>  // b.none
 1f0:	stp	x27, x28, [sp, #80]
 1f4:	nop
 1f8:	ldr	x0, [x19]
 1fc:	str	x0, [x26]
 200:	ldr	w0, [x19, #16]
 204:	str	w0, [x26, #16]
 208:	cmp	w0, #0x40
 20c:	b.hi	548 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x548>  // b.pmore
 210:	ldr	x0, [x19, #8]
 214:	str	x0, [x26, #8]
 218:	ldp	x0, x20, [x19, #24]
 21c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 220:	movk	x1, #0xaaab
 224:	stp	xzr, xzr, [x26, #24]
 228:	mov	x28, #0x0                   	// #0
 22c:	str	xzr, [x26, #40]
 230:	sub	x20, x20, x0
 234:	asr	x0, x20, #4
 238:	mul	x0, x0, x1
 23c:	cbz	x0, 25c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x25c>
 240:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 244:	movk	x1, #0x2aa, lsl #48
 248:	cmp	x0, x1
 24c:	b.hi	55c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x55c>  // b.pmore
 250:	mov	x0, x20
 254:	bl	0 <_Znwm>
 258:	mov	x28, x0
 25c:	add	x20, x28, x20
 260:	stp	x28, x28, [x26, #24]
 264:	str	x20, [x26, #40]
 268:	ldp	x27, x20, [x19, #24]
 26c:	cmp	x27, x20
 270:	b.eq	2cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2cc>  // b.none
 274:	mov	x24, x27
 278:	mov	x25, x28
 27c:	nop
 280:	mov	x1, x24
 284:	mov	x0, x25
 288:	add	x24, x24, #0x30
 28c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 290:	cmp	x20, x24
 294:	add	x25, x25, #0x30
 298:	b.ne	280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x280>  // b.any
 29c:	sub	x1, x20, #0x30
 2a0:	mov	x0, #0xaaab                	// #43691
 2a4:	sub	x1, x1, x27
 2a8:	movk	x0, #0xaaaa, lsl #16
 2ac:	movk	x0, #0xaaaa, lsl #32
 2b0:	lsr	x1, x1, #4
 2b4:	movk	x0, #0xaaa, lsl #48
 2b8:	mul	x1, x1, x0
 2bc:	and	x1, x1, #0xfffffffffffffff
 2c0:	add	x1, x1, #0x1
 2c4:	add	x1, x1, x1, lsl #1
 2c8:	add	x28, x28, x1, lsl #4
 2cc:	str	x28, [x26, #32]
 2d0:	add	x19, x19, #0x30
 2d4:	cmp	x23, x19
 2d8:	add	x26, x26, #0x30
 2dc:	b.ne	1f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1f8>  // b.any
 2e0:	ldp	x27, x28, [sp, #80]
 2e4:	ldp	x20, x24, [x21]
 2e8:	cmp	x20, x24
 2ec:	b.eq	364 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x364>  // b.none
 2f0:	ldp	x19, x23, [x20, #24]
 2f4:	cmp	x19, x23
 2f8:	b.eq	330 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x330>  // b.none
 2fc:	nop
 300:	add	x0, x19, #0x18
 304:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 308:	ldr	w0, [x19, #16]
 30c:	cmp	w0, #0x40
 310:	b.ls	320 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x320>  // b.plast
 314:	ldr	x0, [x19, #8]
 318:	cbz	x0, 320 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x320>
 31c:	bl	0 <_ZdaPv>
 320:	add	x19, x19, #0x30
 324:	cmp	x23, x19
 328:	b.ne	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x300>  // b.any
 32c:	ldr	x23, [x20, #24]
 330:	cbz	x23, 33c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x33c>
 334:	mov	x0, x23
 338:	bl	0 <_ZdlPv>
 33c:	ldr	w0, [x20, #16]
 340:	cmp	w0, #0x40
 344:	b.ls	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>  // b.plast
 348:	ldr	x0, [x20, #8]
 34c:	cbz	x0, 354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>
 350:	bl	0 <_ZdaPv>
 354:	add	x20, x20, #0x30
 358:	cmp	x24, x20
 35c:	b.ne	2f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2f0>  // b.any
 360:	ldr	x24, [x21]
 364:	cbz	x24, 370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x370>
 368:	mov	x0, x24
 36c:	bl	0 <_ZdlPv>
 370:	ldr	x0, [sp, #104]
 374:	str	x0, [x21]
 378:	add	x22, x0, x22
 37c:	str	x22, [x21, #16]
 380:	b	1a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1a4>
 384:	cmp	x0, #0x0
 388:	b.le	424 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x424>
 38c:	add	x20, x20, #0x8
 390:	add	x19, x19, #0x8
 394:	mov	x23, #0xffffffffffffffff    	// #-1
 398:	b	3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3c4>
 39c:	mov	x1, x19
 3a0:	mov	x0, x20
 3a4:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 3a8:	add	x1, x19, #0x10
 3ac:	add	x0, x20, #0x10
 3b0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 3b4:	add	x19, x19, #0x30
 3b8:	add	x20, x20, #0x30
 3bc:	subs	x24, x24, #0x1
 3c0:	b.eq	418 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x418>  // b.none
 3c4:	ldur	x0, [x19, #-8]
 3c8:	stur	x0, [x20, #-8]
 3cc:	ldr	w0, [x20, #8]
 3d0:	cmp	w0, #0x40
 3d4:	b.hi	39c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x39c>  // b.pmore
 3d8:	ldr	w0, [x19, #8]
 3dc:	cmp	w0, #0x40
 3e0:	b.hi	39c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x39c>  // b.pmore
 3e4:	ldr	x2, [x19]
 3e8:	neg	w1, w0
 3ec:	str	w0, [x20, #8]
 3f0:	lsr	x0, x23, x1
 3f4:	and	x0, x0, x2
 3f8:	str	x0, [x20]
 3fc:	add	x1, x19, #0x10
 400:	add	x0, x20, #0x10
 404:	add	x19, x19, #0x30
 408:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 40c:	add	x20, x20, #0x30
 410:	subs	x24, x24, #0x1
 414:	b.ne	3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3c4>  // b.any
 418:	ldp	x20, x28, [x21]
 41c:	ldp	x19, x23, [x25]
 420:	sub	x0, x28, x20
 424:	add	x19, x19, x0
 428:	cmp	x19, x23
 42c:	b.eq	19c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x19c>  // b.none
 430:	ldr	x0, [x19]
 434:	str	x0, [x28]
 438:	ldr	w0, [x19, #16]
 43c:	str	w0, [x28, #16]
 440:	cmp	w0, #0x40
 444:	b.hi	530 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x530>  // b.pmore
 448:	ldr	x0, [x19, #8]
 44c:	str	x0, [x28, #8]
 450:	ldp	x0, x20, [x19, #24]
 454:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 458:	movk	x1, #0xaaab
 45c:	stp	xzr, xzr, [x28, #24]
 460:	mov	x27, #0x0                   	// #0
 464:	str	xzr, [x28, #40]
 468:	sub	x20, x20, x0
 46c:	asr	x0, x20, #4
 470:	mul	x0, x0, x1
 474:	cbz	x0, 494 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x494>
 478:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 47c:	movk	x1, #0x2aa, lsl #48
 480:	cmp	x0, x1
 484:	b.hi	55c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x55c>  // b.pmore
 488:	mov	x0, x20
 48c:	bl	0 <_Znwm>
 490:	mov	x27, x0
 494:	add	x20, x27, x20
 498:	stp	x27, x27, [x28, #24]
 49c:	str	x20, [x28, #40]
 4a0:	ldp	x26, x20, [x19, #24]
 4a4:	cmp	x26, x20
 4a8:	b.eq	504 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x504>  // b.none
 4ac:	mov	x24, x26
 4b0:	mov	x25, x27
 4b4:	nop
 4b8:	mov	x1, x24
 4bc:	mov	x0, x25
 4c0:	add	x24, x24, #0x30
 4c4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 4c8:	cmp	x20, x24
 4cc:	add	x25, x25, #0x30
 4d0:	b.ne	4b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x4b8>  // b.any
 4d4:	sub	x1, x20, #0x30
 4d8:	mov	x0, #0xaaab                	// #43691
 4dc:	sub	x1, x1, x26
 4e0:	movk	x0, #0xaaaa, lsl #16
 4e4:	movk	x0, #0xaaaa, lsl #32
 4e8:	lsr	x1, x1, #4
 4ec:	movk	x0, #0xaaa, lsl #48
 4f0:	mul	x1, x1, x0
 4f4:	and	x1, x1, #0xfffffffffffffff
 4f8:	add	x1, x1, #0x1
 4fc:	add	x1, x1, x1, lsl #1
 500:	add	x27, x27, x1, lsl #4
 504:	str	x27, [x28, #32]
 508:	add	x19, x19, #0x30
 50c:	cmp	x19, x23
 510:	add	x28, x28, #0x30
 514:	b.eq	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x198>  // b.none
 518:	ldr	x0, [x19]
 51c:	str	x0, [x28]
 520:	ldr	w0, [x19, #16]
 524:	str	w0, [x28, #16]
 528:	cmp	w0, #0x40
 52c:	b.ls	448 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x448>  // b.plast
 530:	add	x1, x19, #0x8
 534:	add	x0, x28, #0x8
 538:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 53c:	b	450 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x450>
 540:	str	xzr, [sp, #104]
 544:	b	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e4>
 548:	add	x1, x19, #0x8
 54c:	add	x0, x26, #0x8
 550:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 554:	b	218 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x218>
 558:	stp	x27, x28, [sp, #80]
 55c:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	cmp	x2, x3
   8:	mov	x29, sp
   c:	str	x1, [sp, #120]
  10:	b.eq	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2b4>  // b.none
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x0
  20:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	ldp	x22, x0, [x0, #8]
  28:	stp	x27, x28, [sp, #80]
  2c:	sub	x27, x3, x2
  30:	stp	x19, x20, [sp, #16]
  34:	movk	x26, #0xaaab
  38:	asr	x20, x27, #4
  3c:	mov	x19, x2
  40:	stp	x23, x24, [sp, #48]
  44:	sub	x0, x0, x22
  48:	mul	x2, x20, x26
  4c:	mov	x24, x3
  50:	asr	x0, x0, #4
  54:	str	x2, [sp, #128]
  58:	mov	x23, x1
  5c:	mul	x0, x0, x26
  60:	cmp	x0, x2
  64:	b.cc	2bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2bc>  // b.lo, b.ul, b.last
  68:	sub	x0, x22, x1
  6c:	str	x0, [sp, #152]
  70:	asr	x23, x0, #4
  74:	mul	x23, x23, x26
  78:	cmp	x2, x23
  7c:	b.cc	6fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6fc>  // b.lo, b.ul, b.last
  80:	ldr	x0, [sp, #152]
  84:	add	x27, x19, x0
  88:	cmp	x3, x27
  8c:	b.eq	908 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x908>  // b.none
  90:	mov	x28, x22
  94:	str	x26, [sp, #144]
  98:	ldr	x0, [x27]
  9c:	str	x0, [x28]
  a0:	ldr	w0, [x27, #16]
  a4:	str	w0, [x28, #16]
  a8:	cmp	w0, #0x40
  ac:	b.hi	6a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6a4>  // b.pmore
  b0:	ldr	x0, [x27, #8]
  b4:	str	x0, [x28, #8]
  b8:	ldp	x0, x1, [x27, #24]
  bc:	stp	xzr, xzr, [x28, #24]
  c0:	mov	x21, #0x0                   	// #0
  c4:	str	xzr, [x28, #40]
  c8:	sub	x20, x1, x0
  cc:	ldr	x1, [sp, #144]
  d0:	asr	x0, x20, #4
  d4:	mul	x0, x0, x1
  d8:	cbz	x0, f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xf8>
  dc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  e0:	movk	x1, #0x2aa, lsl #48
  e4:	cmp	x0, x1
  e8:	b.hi	910 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x910>  // b.pmore
  ec:	mov	x0, x20
  f0:	bl	0 <_Znwm>
  f4:	mov	x21, x0
  f8:	add	x1, x21, x20
  fc:	stp	x21, x21, [x28, #24]
 100:	str	x1, [x28, #40]
 104:	ldp	x26, x20, [x27, #24]
 108:	cmp	x26, x20
 10c:	b.eq	16c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x16c>  // b.none
 110:	mov	x6, x26
 114:	mov	x0, x21
 118:	mov	x1, x6
 11c:	add	x6, x6, #0x30
 120:	stp	x6, x0, [sp, #104]
 124:	str	x6, [sp, #136]
 128:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 12c:	ldp	x6, x0, [sp, #104]
 130:	cmp	x20, x6
 134:	add	x0, x0, #0x30
 138:	b.ne	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x118>  // b.any
 13c:	sub	x1, x20, #0x30
 140:	mov	x0, #0xaaab                	// #43691
 144:	sub	x1, x1, x26
 148:	movk	x0, #0xaaaa, lsl #16
 14c:	movk	x0, #0xaaaa, lsl #32
 150:	lsr	x1, x1, #4
 154:	movk	x0, #0xaaa, lsl #48
 158:	mul	x1, x1, x0
 15c:	and	x1, x1, #0xfffffffffffffff
 160:	add	x1, x1, #0x1
 164:	add	x1, x1, x1, lsl #1
 168:	add	x21, x21, x1, lsl #4
 16c:	str	x21, [x28, #32]
 170:	add	x27, x27, #0x30
 174:	cmp	x24, x27
 178:	add	x28, x28, #0x30
 17c:	b.ne	98 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x98>  // b.any
 180:	ldr	x1, [x25, #8]
 184:	ldr	x0, [sp, #128]
 188:	sub	x20, x0, x23
 18c:	ldr	x0, [sp, #120]
 190:	add	x20, x20, x20, lsl #1
 194:	add	x1, x1, x20, lsl #4
 198:	str	x1, [x25, #8]
 19c:	cmp	x22, x0
 1a0:	b.eq	1f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1f8>  // b.none
 1a4:	nop
 1a8:	ldr	x2, [x0]
 1ac:	str	x2, [x1]
 1b0:	add	x1, x1, #0x30
 1b4:	ldr	w2, [x0, #16]
 1b8:	stur	w2, [x1, #-32]
 1bc:	ldr	x2, [x0, #8]
 1c0:	stur	x2, [x1, #-40]
 1c4:	str	wzr, [x0, #16]
 1c8:	ldr	x2, [x0, #24]
 1cc:	stur	x2, [x1, #-24]
 1d0:	ldr	x2, [x0, #32]
 1d4:	stur	x2, [x1, #-16]
 1d8:	ldr	x2, [x0, #40]
 1dc:	stur	x2, [x1, #-8]
 1e0:	stp	xzr, xzr, [x0, #24]
 1e4:	add	x0, x0, #0x30
 1e8:	stur	xzr, [x0, #-8]
 1ec:	cmp	x22, x0
 1f0:	b.ne	1a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1a8>  // b.any
 1f4:	ldr	x1, [x25, #8]
 1f8:	ldr	x0, [sp, #152]
 1fc:	add	x1, x1, x0
 200:	str	x1, [x25, #8]
 204:	cmp	x0, #0x0
 208:	b.le	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>
 20c:	ldr	x0, [sp, #120]
 210:	add	x19, x19, #0x8
 214:	mov	x20, #0xffffffffffffffff    	// #-1
 218:	add	x21, x0, #0x8
 21c:	b	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x248>
 220:	mov	x1, x19
 224:	mov	x0, x21
 228:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 22c:	add	x1, x19, #0x10
 230:	add	x0, x21, #0x10
 234:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 238:	add	x19, x19, #0x30
 23c:	add	x21, x21, #0x30
 240:	subs	x23, x23, #0x1
 244:	b.eq	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>  // b.none
 248:	ldur	x0, [x19, #-8]
 24c:	stur	x0, [x21, #-8]
 250:	ldr	w0, [x21, #8]
 254:	cmp	w0, #0x40
 258:	b.hi	220 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x220>  // b.pmore
 25c:	ldr	w0, [x19, #8]
 260:	cmp	w0, #0x40
 264:	b.hi	220 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x220>  // b.pmore
 268:	ldr	x2, [x19]
 26c:	neg	w1, w0
 270:	str	w0, [x21, #8]
 274:	lsr	x0, x20, x1
 278:	and	x0, x0, x2
 27c:	str	x0, [x21]
 280:	add	x1, x19, #0x10
 284:	add	x0, x21, #0x10
 288:	add	x19, x19, #0x30
 28c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 290:	add	x21, x21, #0x30
 294:	subs	x23, x23, #0x1
 298:	b.ne	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x248>  // b.any
 29c:	nop
 2a0:	ldp	x19, x20, [sp, #16]
 2a4:	ldp	x21, x22, [sp, #32]
 2a8:	ldp	x23, x24, [sp, #48]
 2ac:	ldp	x25, x26, [sp, #64]
 2b0:	ldp	x27, x28, [sp, #80]
 2b4:	ldp	x29, x30, [sp], #160
 2b8:	ret
 2bc:	ldr	x27, [x25]
 2c0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 2c4:	ldr	x2, [sp, #128]
 2c8:	sub	x22, x22, x27
 2cc:	movk	x0, #0x2aa, lsl #48
 2d0:	asr	x22, x22, #4
 2d4:	mul	x26, x22, x26
 2d8:	sub	x1, x0, x26
 2dc:	cmp	x2, x1
 2e0:	b.hi	914 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x914>  // b.pmore
 2e4:	ldr	x1, [sp, #128]
 2e8:	cmp	x1, x26
 2ec:	csel	x20, x1, x26, cs  // cs = hs, nlast
 2f0:	adds	x20, x20, x26
 2f4:	str	x20, [sp, #136]
 2f8:	b.cs	6b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6b4>  // b.hs, b.nlast
 2fc:	str	xzr, [sp, #128]
 300:	cbnz	x20, 8f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x8f0>
 304:	ldp	x0, x20, [sp, #120]
 308:	cmp	x0, x27
 30c:	b.eq	408 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x408>  // b.none
 310:	ldr	x0, [x27]
 314:	str	x0, [x20]
 318:	ldr	w0, [x27, #16]
 31c:	str	w0, [x20, #16]
 320:	cmp	w0, #0x40
 324:	b.hi	6cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6cc>  // b.pmore
 328:	ldr	x0, [x27, #8]
 32c:	str	x0, [x20, #8]
 330:	ldp	x0, x1, [x27, #24]
 334:	stp	xzr, xzr, [x20, #24]
 338:	mov	x21, #0x0                   	// #0
 33c:	str	xzr, [x20, #40]
 340:	sub	x22, x1, x0
 344:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 348:	movk	x1, #0xaaab
 34c:	asr	x0, x22, #4
 350:	mul	x0, x0, x1
 354:	cbz	x0, 374 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x374>
 358:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 35c:	movk	x1, #0x2aa, lsl #48
 360:	cmp	x0, x1
 364:	b.hi	910 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x910>  // b.pmore
 368:	mov	x0, x22
 36c:	bl	0 <_Znwm>
 370:	mov	x21, x0
 374:	add	x1, x21, x22
 378:	stp	x21, x21, [x20, #24]
 37c:	str	x1, [x20, #40]
 380:	ldp	x28, x26, [x27, #24]
 384:	cmp	x28, x26
 388:	b.eq	3ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x3ec>  // b.none
 38c:	mov	x6, x28
 390:	mov	x22, x21
 394:	nop
 398:	mov	x1, x6
 39c:	add	x6, x6, #0x30
 3a0:	mov	x0, x22
 3a4:	stp	x6, x6, [sp, #104]
 3a8:	add	x22, x22, #0x30
 3ac:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 3b0:	ldr	x6, [sp, #104]
 3b4:	cmp	x26, x6
 3b8:	b.ne	398 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x398>  // b.any
 3bc:	sub	x1, x26, #0x30
 3c0:	mov	x0, #0xaaab                	// #43691
 3c4:	sub	x1, x1, x28
 3c8:	movk	x0, #0xaaaa, lsl #16
 3cc:	movk	x0, #0xaaaa, lsl #32
 3d0:	lsr	x1, x1, #4
 3d4:	movk	x0, #0xaaa, lsl #48
 3d8:	mul	x1, x1, x0
 3dc:	and	x1, x1, #0xfffffffffffffff
 3e0:	add	x1, x1, #0x1
 3e4:	add	x1, x1, x1, lsl #1
 3e8:	add	x21, x21, x1, lsl #4
 3ec:	ldr	x0, [sp, #120]
 3f0:	str	x21, [x20, #32]
 3f4:	add	x27, x27, #0x30
 3f8:	add	x20, x20, #0x30
 3fc:	cmp	x0, x27
 400:	b.ne	310 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x310>  // b.any
 404:	nop
 408:	ldr	x0, [x19]
 40c:	str	x0, [x20]
 410:	ldr	w0, [x19, #16]
 414:	str	w0, [x20, #16]
 418:	cmp	w0, #0x40
 41c:	b.hi	6dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6dc>  // b.pmore
 420:	ldr	x0, [x19, #8]
 424:	str	x0, [x20, #8]
 428:	ldp	x28, x26, [x19, #24]
 42c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 430:	movk	x1, #0xaaab
 434:	stp	xzr, xzr, [x20, #24]
 438:	mov	x27, #0x0                   	// #0
 43c:	str	xzr, [x20, #40]
 440:	sub	x21, x26, x28
 444:	asr	x0, x21, #4
 448:	mul	x0, x0, x1
 44c:	cbz	x0, 470 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x470>
 450:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 454:	movk	x1, #0x2aa, lsl #48
 458:	cmp	x0, x1
 45c:	b.hi	910 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x910>  // b.pmore
 460:	mov	x0, x21
 464:	bl	0 <_Znwm>
 468:	ldp	x28, x26, [x19, #24]
 46c:	mov	x27, x0
 470:	add	x1, x27, x21
 474:	stp	x27, x27, [x20, #24]
 478:	cmp	x28, x26
 47c:	str	x1, [x20, #40]
 480:	b.eq	4dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x4dc>  // b.none
 484:	mov	x21, x28
 488:	mov	x22, x27
 48c:	nop
 490:	mov	x1, x21
 494:	mov	x0, x22
 498:	add	x21, x21, #0x30
 49c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 4a0:	cmp	x26, x21
 4a4:	add	x22, x22, #0x30
 4a8:	b.ne	490 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x490>  // b.any
 4ac:	sub	x1, x26, #0x30
 4b0:	mov	x0, #0xaaab                	// #43691
 4b4:	sub	x1, x1, x28
 4b8:	movk	x0, #0xaaaa, lsl #16
 4bc:	movk	x0, #0xaaaa, lsl #32
 4c0:	lsr	x1, x1, #4
 4c4:	movk	x0, #0xaaa, lsl #48
 4c8:	mul	x1, x1, x0
 4cc:	and	x1, x1, #0xfffffffffffffff
 4d0:	add	x1, x1, #0x1
 4d4:	add	x1, x1, x1, lsl #1
 4d8:	add	x27, x27, x1, lsl #4
 4dc:	str	x27, [x20, #32]
 4e0:	add	x19, x19, #0x30
 4e4:	cmp	x24, x19
 4e8:	add	x20, x20, #0x30
 4ec:	b.ne	408 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x408>  // b.any
 4f0:	ldr	x22, [x25, #8]
 4f4:	ldr	x0, [sp, #120]
 4f8:	cmp	x0, x22
 4fc:	b.eq	5ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5ec>  // b.none
 500:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 504:	movk	x21, #0xaaab
 508:	ldr	x0, [x23]
 50c:	str	x0, [x20]
 510:	ldr	w0, [x23, #16]
 514:	str	w0, [x20, #16]
 518:	cmp	w0, #0x40
 51c:	b.hi	6ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6ec>  // b.pmore
 520:	ldr	x0, [x23, #8]
 524:	str	x0, [x20, #8]
 528:	ldp	x27, x19, [x23, #24]
 52c:	stp	xzr, xzr, [x20, #24]
 530:	mov	x28, #0x0                   	// #0
 534:	str	xzr, [x20, #40]
 538:	sub	x24, x19, x27
 53c:	asr	x0, x24, #4
 540:	mul	x0, x0, x21
 544:	cbz	x0, 568 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x568>
 548:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 54c:	movk	x1, #0x2aa, lsl #48
 550:	cmp	x0, x1
 554:	b.hi	910 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x910>  // b.pmore
 558:	mov	x0, x24
 55c:	bl	0 <_Znwm>
 560:	ldp	x27, x19, [x23, #24]
 564:	mov	x28, x0
 568:	add	x1, x28, x24
 56c:	stp	x28, x28, [x20, #24]
 570:	cmp	x19, x27
 574:	str	x1, [x20, #40]
 578:	b.eq	5d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5d4>  // b.none
 57c:	mov	x24, x27
 580:	mov	x26, x28
 584:	nop
 588:	mov	x1, x24
 58c:	mov	x0, x26
 590:	add	x24, x24, #0x30
 594:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 598:	cmp	x19, x24
 59c:	add	x26, x26, #0x30
 5a0:	b.ne	588 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x588>  // b.any
 5a4:	sub	x1, x19, #0x30
 5a8:	mov	x0, #0xaaab                	// #43691
 5ac:	sub	x1, x1, x27
 5b0:	movk	x0, #0xaaaa, lsl #16
 5b4:	movk	x0, #0xaaaa, lsl #32
 5b8:	lsr	x1, x1, #4
 5bc:	movk	x0, #0xaaa, lsl #48
 5c0:	mul	x1, x1, x0
 5c4:	and	x1, x1, #0xfffffffffffffff
 5c8:	add	x1, x1, #0x1
 5cc:	add	x1, x1, x1, lsl #1
 5d0:	add	x28, x28, x1, lsl #4
 5d4:	str	x28, [x20, #32]
 5d8:	add	x23, x23, #0x30
 5dc:	cmp	x22, x23
 5e0:	add	x20, x20, #0x30
 5e4:	b.ne	508 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x508>  // b.any
 5e8:	ldr	x22, [x25, #8]
 5ec:	ldr	x21, [x25]
 5f0:	cmp	x21, x22
 5f4:	b.eq	66c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x66c>  // b.none
 5f8:	ldp	x19, x23, [x21, #24]
 5fc:	cmp	x19, x23
 600:	b.eq	638 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x638>  // b.none
 604:	nop
 608:	add	x0, x19, #0x18
 60c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 610:	ldr	w0, [x19, #16]
 614:	cmp	w0, #0x40
 618:	b.ls	628 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x628>  // b.plast
 61c:	ldr	x0, [x19, #8]
 620:	cbz	x0, 628 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x628>
 624:	bl	0 <_ZdaPv>
 628:	add	x19, x19, #0x30
 62c:	cmp	x23, x19
 630:	b.ne	608 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x608>  // b.any
 634:	ldr	x23, [x21, #24]
 638:	cbz	x23, 644 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x644>
 63c:	mov	x0, x23
 640:	bl	0 <_ZdlPv>
 644:	ldr	w0, [x21, #16]
 648:	cmp	w0, #0x40
 64c:	b.ls	65c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x65c>  // b.plast
 650:	ldr	x0, [x21, #8]
 654:	cbz	x0, 65c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x65c>
 658:	bl	0 <_ZdaPv>
 65c:	add	x21, x21, #0x30
 660:	cmp	x21, x22
 664:	b.ne	5f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5f8>  // b.any
 668:	ldr	x22, [x25]
 66c:	cbz	x22, 678 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x678>
 670:	mov	x0, x22
 674:	bl	0 <_ZdlPv>
 678:	ldp	x1, x0, [sp, #128]
 67c:	stp	x1, x20, [x25]
 680:	ldp	x19, x20, [sp, #16]
 684:	ldp	x21, x22, [sp, #32]
 688:	add	x0, x0, x0, lsl #1
 68c:	ldp	x23, x24, [sp, #48]
 690:	add	x27, x1, x0, lsl #4
 694:	str	x27, [x25, #16]
 698:	ldp	x25, x26, [sp, #64]
 69c:	ldp	x27, x28, [sp, #80]
 6a0:	b	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2b4>
 6a4:	add	x1, x27, #0x8
 6a8:	add	x0, x28, #0x8
 6ac:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6b0:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xb8>
 6b4:	str	x0, [sp, #136]
 6b8:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
 6bc:	bl	0 <_Znwm>
 6c0:	str	x0, [sp, #128]
 6c4:	ldr	x27, [x25]
 6c8:	b	304 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x304>
 6cc:	add	x1, x27, #0x8
 6d0:	add	x0, x20, #0x8
 6d4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6d8:	b	330 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x330>
 6dc:	add	x1, x19, #0x8
 6e0:	add	x0, x20, #0x8
 6e4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6e8:	b	428 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x428>
 6ec:	add	x1, x23, #0x8
 6f0:	add	x0, x20, #0x8
 6f4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6f8:	b	528 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x528>
 6fc:	sub	x24, x22, x27
 700:	mov	x1, x22
 704:	mov	x0, x24
 708:	ldr	x2, [x0]
 70c:	str	x2, [x1]
 710:	add	x1, x1, #0x30
 714:	ldr	w2, [x0, #16]
 718:	stur	w2, [x1, #-32]
 71c:	ldr	x2, [x0, #8]
 720:	stur	x2, [x1, #-40]
 724:	str	wzr, [x0, #16]
 728:	ldr	x2, [x0, #24]
 72c:	stur	x2, [x1, #-24]
 730:	ldr	x2, [x0, #32]
 734:	stur	x2, [x1, #-16]
 738:	ldr	x2, [x0, #40]
 73c:	stur	x2, [x1, #-8]
 740:	stp	xzr, xzr, [x0, #24]
 744:	add	x0, x0, #0x30
 748:	stur	xzr, [x0, #-8]
 74c:	cmp	x22, x0
 750:	b.ne	708 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x708>  // b.any
 754:	ldr	x0, [sp, #120]
 758:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 75c:	ldr	x1, [x25, #8]
 760:	sub	x0, x24, x0
 764:	cmp	x0, #0x0
 768:	movk	x2, #0xaaab
 76c:	asr	x3, x0, #4
 770:	add	x0, x1, x27
 774:	str	x0, [x25, #8]
 778:	mul	x25, x3, x2
 77c:	b.le	868 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x868>
 780:	ldur	x0, [x24, #-48]
 784:	stur	x0, [x22, #-48]
 788:	sub	x24, x24, #0x30
 78c:	sub	x22, x22, #0x30
 790:	cmp	x22, x24
 794:	b.eq	848 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x848>  // b.none
 798:	ldr	w0, [x22, #16]
 79c:	cmp	w0, #0x40
 7a0:	b.ls	7b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7b0>  // b.plast
 7a4:	ldr	x0, [x22, #8]
 7a8:	cbz	x0, 7b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7b0>
 7ac:	bl	0 <_ZdaPv>
 7b0:	ldr	x0, [x24, #8]
 7b4:	str	x0, [x22, #8]
 7b8:	ldp	x26, x28, [x22, #24]
 7bc:	ldr	w0, [x24, #16]
 7c0:	str	w0, [x22, #16]
 7c4:	str	wzr, [x24, #16]
 7c8:	ldr	x0, [x24, #24]
 7cc:	str	x0, [x22, #24]
 7d0:	mov	x23, x26
 7d4:	cmp	x26, x28
 7d8:	ldr	x0, [x24, #32]
 7dc:	str	x0, [x22, #32]
 7e0:	ldr	x0, [x24, #40]
 7e4:	str	x0, [x22, #40]
 7e8:	stp	xzr, xzr, [x24, #24]
 7ec:	str	xzr, [x24, #40]
 7f0:	b.eq	824 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x824>  // b.none
 7f4:	nop
 7f8:	add	x0, x23, #0x18
 7fc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 800:	ldr	w0, [x23, #16]
 804:	cmp	w0, #0x40
 808:	b.ls	818 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x818>  // b.plast
 80c:	ldr	x0, [x23, #8]
 810:	cbz	x0, 818 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x818>
 814:	bl	0 <_ZdaPv>
 818:	add	x23, x23, #0x30
 81c:	cmp	x28, x23
 820:	b.ne	7f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7f8>  // b.any
 824:	cbz	x26, 830 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x830>
 828:	mov	x0, x26
 82c:	bl	0 <_ZdlPv>
 830:	subs	x25, x25, #0x1
 834:	b.eq	868 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x868>  // b.none
 838:	ldr	x0, [x24, #-48]!
 83c:	str	x0, [x22, #-48]!
 840:	cmp	x22, x24
 844:	b.ne	798 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x798>  // b.any
 848:	adrp	x3, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 84c:	adrp	x1, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 850:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 854:	add	x3, x3, #0x0
 858:	add	x1, x1, #0x0
 85c:	add	x0, x0, #0x0
 860:	mov	w2, #0x302                 	// #770
 864:	bl	0 <__assert_fail>
 868:	cmp	x27, #0x0
 86c:	b.le	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>
 870:	ldr	x0, [sp, #120]
 874:	add	x19, x19, #0x8
 878:	mov	x22, #0xffffffffffffffff    	// #-1
 87c:	add	x21, x0, #0x8
 880:	b	8b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x8b4>
 884:	mov	x1, x19
 888:	mov	x0, x21
 88c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 890:	add	x1, x19, #0x10
 894:	add	x0, x21, #0x10
 898:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 89c:	add	x19, x19, #0x30
 8a0:	ldr	x0, [sp, #128]
 8a4:	add	x21, x21, #0x30
 8a8:	subs	x0, x0, #0x1
 8ac:	str	x0, [sp, #128]
 8b0:	b.eq	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>  // b.none
 8b4:	ldur	x0, [x19, #-8]
 8b8:	stur	x0, [x21, #-8]
 8bc:	ldr	w0, [x21, #8]
 8c0:	cmp	w0, #0x40
 8c4:	b.hi	884 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x884>  // b.pmore
 8c8:	ldr	w0, [x19, #8]
 8cc:	cmp	w0, #0x40
 8d0:	b.hi	884 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x884>  // b.pmore
 8d4:	ldr	x2, [x19]
 8d8:	neg	w1, w0
 8dc:	str	w0, [x21, #8]
 8e0:	lsr	x0, x22, x1
 8e4:	and	x0, x0, x2
 8e8:	str	x0, [x21]
 8ec:	b	890 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x890>
 8f0:	cmp	x20, x0
 8f4:	csel	x0, x20, x0, ls  // ls = plast
 8f8:	str	x0, [sp, #136]
 8fc:	add	x0, x0, x0, lsl #1
 900:	lsl	x0, x0, #4
 904:	b	6bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6bc>
 908:	mov	x1, x22
 90c:	b	184 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x184>
 910:	bl	0 <_ZSt17__throw_bad_allocv>
 914:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 918:	add	x0, x0, #0x0
 91c:	bl	0 <_ZSt20__throw_length_errorPKc>

Interpreter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-208]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x8
  14:	ldr	x0, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  20:	mov	x22, x1
  24:	ldr	x2, [x0]
  28:	ldr	x21, [x21]
  2c:	ldr	x2, [x2, #48]
  30:	mov	x1, x21
  34:	blr	x2
  38:	tst	w0, #0xff
  3c:	b.ne	64 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x64>  // b.any
  40:	ldr	x0, [x19]
  44:	str	xzr, [x19]
  48:	ldp	x21, x22, [sp, #32]
  4c:	orr	x0, x0, #0x1
  50:	str	x0, [x20]
  54:	mov	x0, x20
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #208
  60:	ret
  64:	stp	x23, x24, [sp, #48]
  68:	mov	x1, x21
  6c:	ldr	x23, [x19]
  70:	mov	x0, x23
  74:	ldr	x2, [x23]
  78:	ldr	x2, [x2, #48]
  7c:	str	xzr, [x19]
  80:	blr	x2
  84:	tst	w0, #0xff
  88:	b.eq	2a4 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x2a4>  // b.none
  8c:	ldr	x1, [x23]
  90:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
  94:	add	x0, x0, #0x0
  98:	ldr	x22, [x22]
  9c:	ldr	x2, [x1, #24]
  a0:	cmp	x2, x0
  a4:	b.ne	27c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x27c>  // b.any
  a8:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  ac:	strb	wzr, [sp, #144]
  b0:	add	x24, sp, #0x80
  b4:	mov	w3, #0x1                   	// #1
  b8:	ldr	x0, [x0]
  bc:	add	x4, x24, #0x10
  c0:	ldr	x2, [x1, #16]
  c4:	add	x0, x0, #0x10
  c8:	stp	x25, x26, [sp, #64]
  cc:	add	x26, sp, #0xa0
  d0:	mov	x1, x26
  d4:	stp	x4, xzr, [sp, #128]
  d8:	stp	x0, xzr, [sp, #160]
  dc:	mov	x0, x23
  e0:	stp	xzr, xzr, [sp, #176]
  e4:	str	w3, [sp, #192]
  e8:	str	x24, [sp, #200]
  ec:	blr	x2
  f0:	ldr	x0, [sp, #168]
  f4:	ldr	x1, [sp, #184]
  f8:	cmp	x1, x0
  fc:	b.eq	108 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x108>  // b.none
 100:	mov	x0, x26
 104:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 108:	ldr	x1, [sp, #200]
 10c:	add	x19, sp, #0x60
 110:	add	x0, x19, #0x10
 114:	str	x0, [sp, #96]
 118:	ldr	x25, [x1]
 11c:	ldr	x21, [x1, #8]
 120:	cmn	x25, x21
 124:	ccmp	x25, #0x0, #0x0, ne  // ne = any
 128:	b.eq	2c8 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x2c8>  // b.none
 12c:	str	x21, [sp, #88]
 130:	cmp	x21, #0xf
 134:	b.hi	1fc <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1fc>  // b.pmore
 138:	cmp	x21, #0x1
 13c:	b.ne	25c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x25c>  // b.any
 140:	ldrb	w2, [x25]
 144:	mov	x1, x0
 148:	strb	w2, [sp, #112]
 14c:	str	x21, [sp, #104]
 150:	mov	x0, x26
 154:	strb	wzr, [x1, x21]
 158:	add	x24, x24, #0x10
 15c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 160:	ldr	x0, [sp, #128]
 164:	cmp	x0, x24
 168:	b.eq	22c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x22c>  // b.none
 16c:	bl	0 <_ZdlPv>
 170:	ldp	x25, x26, [sp, #64]
 174:	add	x0, x19, #0x10
 178:	ldp	x1, x2, [sp, #96]
 17c:	cmp	x1, x0
 180:	ldr	x0, [x22]
 184:	b.eq	234 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x234>  // b.none
 188:	stp	x1, x2, [x22]
 18c:	add	x3, x22, #0x10
 190:	cmp	x0, x3
 194:	b.eq	268 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x268>  // b.none
 198:	ldr	x2, [sp, #112]
 19c:	ldr	x1, [x22, #16]
 1a0:	str	x2, [x22, #16]
 1a4:	cbz	x0, 270 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x270>
 1a8:	str	x0, [sp, #96]
 1ac:	str	x1, [sp, #112]
 1b0:	str	xzr, [sp, #104]
 1b4:	add	x19, x19, #0x10
 1b8:	strb	wzr, [x0]
 1bc:	ldr	x0, [sp, #96]
 1c0:	cmp	x0, x19
 1c4:	b.eq	1cc <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1cc>  // b.none
 1c8:	bl	0 <_ZdlPv>
 1cc:	ldr	x1, [x23]
 1d0:	mov	x0, #0x1                   	// #1
 1d4:	ldr	x1, [x1, #8]
 1d8:	str	x0, [x20]
 1dc:	mov	x0, x23
 1e0:	blr	x1
 1e4:	mov	x0, x20
 1e8:	ldp	x19, x20, [sp, #16]
 1ec:	ldp	x21, x22, [sp, #32]
 1f0:	ldp	x23, x24, [sp, #48]
 1f4:	ldp	x29, x30, [sp], #208
 1f8:	ret
 1fc:	add	x1, sp, #0x58
 200:	mov	x0, x19
 204:	mov	x2, #0x0                   	// #0
 208:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 20c:	ldr	x1, [sp, #88]
 210:	str	x0, [sp, #96]
 214:	str	x1, [sp, #112]
 218:	mov	x2, x21
 21c:	mov	x1, x25
 220:	bl	0 <memcpy>
 224:	ldp	x21, x1, [sp, #88]
 228:	b	14c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x14c>
 22c:	ldp	x25, x26, [sp, #64]
 230:	b	174 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x174>
 234:	cbz	x2, 24c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x24c>
 238:	cmp	x2, #0x1
 23c:	b.eq	290 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x290>  // b.none
 240:	bl	0 <memcpy>
 244:	ldr	x0, [x22]
 248:	ldr	x2, [sp, #104]
 24c:	str	x2, [x22, #8]
 250:	strb	wzr, [x0, x2]
 254:	ldr	x0, [sp, #96]
 258:	b	1b0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1b0>
 25c:	mov	x1, x0
 260:	cbz	x21, 14c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x14c>
 264:	b	218 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x218>
 268:	ldr	x0, [sp, #112]
 26c:	str	x0, [x22, #16]
 270:	add	x0, x19, #0x10
 274:	str	x0, [sp, #96]
 278:	b	1b0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1b0>
 27c:	add	x19, sp, #0x60
 280:	mov	x0, x23
 284:	mov	x8, x19
 288:	blr	x2
 28c:	b	174 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x174>
 290:	ldrb	w1, [sp, #112]
 294:	strb	w1, [x0]
 298:	ldr	x0, [x22]
 29c:	ldr	x2, [sp, #104]
 2a0:	b	24c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x24c>
 2a4:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2a8:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2ac:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2b0:	add	x3, x3, #0x0
 2b4:	add	x1, x1, #0x0
 2b8:	add	x0, x0, #0x0
 2bc:	mov	w2, #0x329                 	// #809
 2c0:	stp	x25, x26, [sp, #64]
 2c4:	bl	0 <__assert_fail>
 2c8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2cc:	add	x0, x0, #0x0
 2d0:	bl	0 <_ZSt19__throw_logic_errorPKc>
 2d4:	nop

00000000000002d8 <LLVMLinkInInterpreter>:
 2d8:	ret
 2dc:	nop

00000000000002e0 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
 2e0:	mov	x2, x1
 2e4:	stp	x29, x30, [sp, #-48]!
 2e8:	mov	x29, sp
 2ec:	ldr	x3, [x2]
 2f0:	stp	x19, x20, [sp, #16]
 2f4:	add	x1, sp, #0x28
 2f8:	str	xzr, [x2]
 2fc:	mov	x19, x0
 300:	str	x3, [sp, #40]
 304:	bl	0 <_ZN4llvm15ExecutionEngineC2ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 308:	ldr	x20, [sp, #40]
 30c:	cbz	x20, 324 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x44>
 310:	mov	x0, x20
 314:	bl	0 <_ZN4llvm6ModuleD1Ev>
 318:	mov	x0, x20
 31c:	mov	x1, #0x2c8                 	// #712
 320:	bl	0 <_ZdlPvm>
 324:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 328:	mov	w1, #0x1                   	// #1
 32c:	str	w1, [x19, #656]
 330:	add	x1, x19, #0x2c8
 334:	ldr	x0, [x0]
 338:	str	xzr, [x19, #640]
 33c:	str	xzr, [x19, #648]
 340:	add	x0, x0, #0x10
 344:	str	x0, [x19]
 348:	add	x0, x19, #0x2a0
 34c:	str	xzr, [x19, #664]
 350:	stp	xzr, xzr, [x0]
 354:	stp	xzr, xzr, [x0, #24]
 358:	mov	x0, x19
 35c:	stp	xzr, xzr, [x1]
 360:	stp	xzr, xzr, [x1, #16]
 364:	bl	0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>
 368:	mov	x0, x19
 36c:	bl	0 <_ZN4llvm15ExecutionEngine11emitGlobalsEv>
 370:	mov	x0, #0x10                  	// #16
 374:	bl	0 <_Znwm>
 378:	add	x1, x19, #0x58
 37c:	str	x1, [x0]
 380:	strb	wzr, [x0, #8]
 384:	str	x0, [x19, #688]
 388:	ldp	x19, x20, [sp, #16]
 38c:	ldp	x29, x30, [sp], #48
 390:	ret
 394:	nop

0000000000000398 <_ZN4llvm11Interpreter17runAtExitHandlersEv>:
 398:	stp	x29, x30, [sp, #-32]!
 39c:	mov	x29, sp
 3a0:	ldr	x1, [x0, #720]
 3a4:	str	x19, [sp, #16]
 3a8:	mov	x19, x0
 3ac:	ldr	x0, [x0, #728]
 3b0:	cmp	x1, x0
 3b4:	b.eq	3f0 <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x58>  // b.none
 3b8:	ldur	x1, [x0, #-8]
 3bc:	mov	x2, #0x0                   	// #0
 3c0:	mov	x0, x19
 3c4:	mov	x3, #0x0                   	// #0
 3c8:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
 3cc:	ldr	x1, [x19, #728]
 3d0:	mov	x0, x19
 3d4:	sub	x1, x1, #0x8
 3d8:	str	x1, [x19, #728]
 3dc:	bl	0 <_ZN4llvm11Interpreter3runEv>
 3e0:	ldr	x1, [x19, #720]
 3e4:	ldr	x0, [x19, #728]
 3e8:	cmp	x0, x1
 3ec:	b.ne	3b8 <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x20>  // b.any
 3f0:	ldr	x19, [sp, #16]
 3f4:	ldp	x29, x30, [sp], #32
 3f8:	ret
 3fc:	nop

0000000000000400 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
 400:	stp	x29, x30, [sp, #-80]!
 404:	mov	x29, sp
 408:	stp	x19, x20, [sp, #16]
 40c:	stp	x21, x22, [sp, #32]
 410:	stp	x23, x24, [sp, #48]
 414:	str	x25, [sp, #64]
 418:	cbz	x1, 5ec <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1ec>
 41c:	ldr	x4, [x1, #24]
 420:	cbz	x4, 5cc <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1cc>
 424:	ldrb	w5, [x4, #8]
 428:	cmp	w5, #0xc
 42c:	b.ne	5ac <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1ac>  // b.any
 430:	ldr	w4, [x4, #12]
 434:	mov	x19, x0
 438:	mov	x20, x8
 43c:	sub	w4, w4, #0x1
 440:	cmp	x4, x3
 444:	csel	x3, x4, x3, ls  // ls = plast
 448:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
 44c:	mov	x0, x19
 450:	bl	0 <_ZN4llvm11Interpreter3runEv>
 454:	mov	x0, x20
 458:	add	x1, x19, #0x288
 45c:	ldr	x2, [x19, #640]
 460:	str	x2, [x0], #8
 464:	ldr	w2, [x1, #8]
 468:	str	w2, [x0, #8]
 46c:	cmp	w2, #0x40
 470:	b.hi	5a4 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a4>  // b.pmore
 474:	ldr	x0, [x19, #648]
 478:	str	x0, [x20, #8]
 47c:	ldr	x0, [x19, #664]
 480:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 484:	ldr	x22, [x19, #672]
 488:	movk	x1, #0xaaab
 48c:	add	x24, x20, #0x18
 490:	str	xzr, [x20, #24]
 494:	sub	x22, x22, x0
 498:	mov	x21, #0x0                   	// #0
 49c:	asr	x0, x22, #4
 4a0:	stp	xzr, xzr, [x24, #8]
 4a4:	mul	x0, x0, x1
 4a8:	cbz	x0, 4c8 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc8>
 4ac:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 4b0:	movk	x1, #0x2aa, lsl #48
 4b4:	cmp	x0, x1
 4b8:	b.hi	60c <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x20c>  // b.pmore
 4bc:	mov	x0, x22
 4c0:	bl	0 <_Znwm>
 4c4:	mov	x21, x0
 4c8:	str	x21, [x20, #24]
 4cc:	add	x22, x21, x22
 4d0:	stp	x21, x22, [x24, #8]
 4d4:	ldr	x25, [x19, #664]
 4d8:	ldr	x19, [x19, #672]
 4dc:	cmp	x25, x19
 4e0:	b.eq	584 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x184>  // b.none
 4e4:	mov	x22, x25
 4e8:	mov	x23, x21
 4ec:	b	514 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x114>
 4f0:	ldr	x0, [x22, #8]
 4f4:	str	x0, [x23, #8]
 4f8:	add	x1, x22, #0x18
 4fc:	add	x0, x23, #0x18
 500:	add	x22, x22, #0x30
 504:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 508:	cmp	x19, x22
 50c:	add	x23, x23, #0x30
 510:	b.eq	554 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x154>  // b.none
 514:	ldr	x0, [x22]
 518:	str	x0, [x23]
 51c:	ldr	w0, [x22, #16]
 520:	str	w0, [x23, #16]
 524:	cmp	w0, #0x40
 528:	b.ls	4f0 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf0>  // b.plast
 52c:	add	x1, x22, #0x8
 530:	add	x0, x23, #0x8
 534:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 538:	add	x1, x22, #0x18
 53c:	add	x0, x23, #0x18
 540:	add	x22, x22, #0x30
 544:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 548:	cmp	x19, x22
 54c:	add	x23, x23, #0x30
 550:	b.ne	514 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x114>  // b.any
 554:	sub	x1, x19, #0x30
 558:	mov	x19, #0xaaab                	// #43691
 55c:	sub	x1, x1, x25
 560:	movk	x19, #0xaaaa, lsl #16
 564:	movk	x19, #0xaaaa, lsl #32
 568:	lsr	x1, x1, #4
 56c:	movk	x19, #0xaaa, lsl #48
 570:	mul	x1, x1, x19
 574:	and	x1, x1, #0xfffffffffffffff
 578:	add	x1, x1, #0x1
 57c:	add	x1, x1, x1, lsl #1
 580:	add	x21, x21, x1, lsl #4
 584:	mov	x0, x20
 588:	ldp	x19, x20, [sp, #16]
 58c:	ldr	x25, [sp, #64]
 590:	str	x21, [x24, #8]
 594:	ldp	x21, x22, [sp, #32]
 598:	ldp	x23, x24, [sp, #48]
 59c:	ldp	x29, x30, [sp], #80
 5a0:	ret
 5a4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 5a8:	b	47c <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7c>
 5ac:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5b0:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5b4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5b8:	add	x3, x3, #0x0
 5bc:	add	x1, x1, #0x0
 5c0:	add	x0, x0, #0x0
 5c4:	mov	w2, #0x108                 	// #264
 5c8:	bl	0 <__assert_fail>
 5cc:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5d0:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5d4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5d8:	add	x3, x3, #0x0
 5dc:	add	x1, x1, #0x0
 5e0:	add	x0, x0, #0x0
 5e4:	mov	w2, #0x69                  	// #105
 5e8:	bl	0 <__assert_fail>
 5ec:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5f0:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5f4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5f8:	add	x3, x3, #0x0
 5fc:	add	x1, x1, #0x0
 600:	add	x0, x0, #0x0
 604:	mov	w2, #0x52                  	// #82
 608:	bl	0 <__assert_fail>
 60c:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000000610 <_ZN4llvm11InterpreterD1Ev>:
 610:	stp	x29, x30, [sp, #-64]!
 614:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 618:	mov	x29, sp
 61c:	ldr	x1, [x1]
 620:	stp	x19, x20, [sp, #16]
 624:	mov	x19, x0
 628:	ldr	x0, [x0, #688]
 62c:	stp	x21, x22, [sp, #32]
 630:	add	x1, x1, #0x10
 634:	str	x23, [sp, #48]
 638:	str	x1, [x19]
 63c:	cbz	x0, 648 <_ZN4llvm11InterpreterD1Ev+0x38>
 640:	mov	x1, #0x10                  	// #16
 644:	bl	0 <_ZdlPvm>
 648:	ldr	x0, [x19, #720]
 64c:	cbz	x0, 654 <_ZN4llvm11InterpreterD1Ev+0x44>
 650:	bl	0 <_ZdlPv>
 654:	ldr	x20, [x19, #696]
 658:	ldr	x23, [x19, #704]
 65c:	cmp	x20, x23
 660:	b.eq	700 <_ZN4llvm11InterpreterD1Ev+0xf0>  // b.none
 664:	nop
 668:	ldp	x21, x22, [x20, #104]
 66c:	cmp	x21, x22
 670:	b.eq	68c <_ZN4llvm11InterpreterD1Ev+0x7c>  // b.none
 674:	nop
 678:	ldr	x0, [x21], #8
 67c:	bl	0 <free>
 680:	cmp	x22, x21
 684:	b.ne	678 <_ZN4llvm11InterpreterD1Ev+0x68>  // b.any
 688:	ldr	x22, [x20, #104]
 68c:	cbz	x22, 698 <_ZN4llvm11InterpreterD1Ev+0x88>
 690:	mov	x0, x22
 694:	bl	0 <_ZdlPv>
 698:	ldp	x21, x22, [x20, #80]
 69c:	cmp	x21, x22
 6a0:	b.eq	6d8 <_ZN4llvm11InterpreterD1Ev+0xc8>  // b.none
 6a4:	nop
 6a8:	add	x0, x21, #0x18
 6ac:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 6b0:	ldr	w0, [x21, #16]
 6b4:	cmp	w0, #0x40
 6b8:	b.ls	6c8 <_ZN4llvm11InterpreterD1Ev+0xb8>  // b.plast
 6bc:	ldr	x0, [x21, #8]
 6c0:	cbz	x0, 6c8 <_ZN4llvm11InterpreterD1Ev+0xb8>
 6c4:	bl	0 <_ZdaPv>
 6c8:	add	x21, x21, #0x30
 6cc:	cmp	x22, x21
 6d0:	b.ne	6a8 <_ZN4llvm11InterpreterD1Ev+0x98>  // b.any
 6d4:	ldr	x22, [x20, #80]
 6d8:	cbz	x22, 6e4 <_ZN4llvm11InterpreterD1Ev+0xd4>
 6dc:	mov	x0, x22
 6e0:	bl	0 <_ZdlPv>
 6e4:	ldr	x1, [x20, #48]
 6e8:	add	x0, x20, #0x20
 6ec:	add	x20, x20, #0x80
 6f0:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 6f4:	cmp	x23, x20
 6f8:	b.ne	668 <_ZN4llvm11InterpreterD1Ev+0x58>  // b.any
 6fc:	ldr	x23, [x19, #696]
 700:	cbz	x23, 70c <_ZN4llvm11InterpreterD1Ev+0xfc>
 704:	mov	x0, x23
 708:	bl	0 <_ZdlPv>
 70c:	ldr	x20, [x19, #664]
 710:	ldr	x21, [x19, #672]
 714:	cmp	x20, x21
 718:	b.eq	750 <_ZN4llvm11InterpreterD1Ev+0x140>  // b.none
 71c:	nop
 720:	add	x0, x20, #0x18
 724:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 728:	ldr	w0, [x20, #16]
 72c:	cmp	w0, #0x40
 730:	b.ls	740 <_ZN4llvm11InterpreterD1Ev+0x130>  // b.plast
 734:	ldr	x0, [x20, #8]
 738:	cbz	x0, 740 <_ZN4llvm11InterpreterD1Ev+0x130>
 73c:	bl	0 <_ZdaPv>
 740:	add	x20, x20, #0x30
 744:	cmp	x21, x20
 748:	b.ne	720 <_ZN4llvm11InterpreterD1Ev+0x110>  // b.any
 74c:	ldr	x21, [x19, #664]
 750:	cbz	x21, 75c <_ZN4llvm11InterpreterD1Ev+0x14c>
 754:	mov	x0, x21
 758:	bl	0 <_ZdlPv>
 75c:	ldr	w0, [x19, #656]
 760:	cmp	w0, #0x40
 764:	b.ls	774 <_ZN4llvm11InterpreterD1Ev+0x164>  // b.plast
 768:	ldr	x0, [x19, #648]
 76c:	cbz	x0, 774 <_ZN4llvm11InterpreterD1Ev+0x164>
 770:	bl	0 <_ZdaPv>
 774:	mov	x0, x19
 778:	ldp	x19, x20, [sp, #16]
 77c:	ldp	x21, x22, [sp, #32]
 780:	ldr	x23, [sp, #48]
 784:	ldp	x29, x30, [sp], #64
 788:	b	0 <_ZN4llvm15ExecutionEngineD2Ev>
 78c:	nop

0000000000000790 <_ZN4llvm11InterpreterD0Ev>:
 790:	stp	x29, x30, [sp, #-32]!
 794:	mov	x29, sp
 798:	str	x19, [sp, #16]
 79c:	mov	x19, x0
 7a0:	bl	610 <_ZN4llvm11InterpreterD1Ev>
 7a4:	mov	x0, x19
 7a8:	mov	x1, #0x2e8                 	// #744
 7ac:	ldr	x19, [sp, #16]
 7b0:	ldp	x29, x30, [sp], #32
 7b4:	b	0 <_ZdlPvm>

00000000000007b8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 7b8:	stp	x29, x30, [sp, #-288]!
 7bc:	mov	x29, sp
 7c0:	stp	x19, x20, [sp, #16]
 7c4:	mov	x19, x0
 7c8:	ldr	x0, [x0]
 7cc:	stp	x21, x22, [sp, #32]
 7d0:	add	x22, sp, #0x78
 7d4:	mov	x21, x1
 7d8:	mov	x8, x22
 7dc:	bl	0 <_ZN4llvm6Module14materializeAllEv>
 7e0:	ldr	x0, [sp, #120]
 7e4:	ands	x20, x0, #0xfffffffffffffffe
 7e8:	b.eq	928 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x170>  // b.none
 7ec:	strb	wzr, [sp, #192]
 7f0:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 7f4:	add	x19, sp, #0xb0
 7f8:	ldr	x0, [x20]
 7fc:	add	x3, x19, #0x10
 800:	ldr	x1, [x1]
 804:	stp	xzr, x19, [sp, #120]
 808:	ldr	x2, [x0, #48]
 80c:	stp	xzr, xzr, [sp, #136]
 810:	mov	x0, x20
 814:	stp	x3, xzr, [sp, #176]
 818:	blr	x2
 81c:	tst	w0, #0xff
 820:	b.eq	978 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c0>  // b.none
 824:	ldp	x2, x1, [x20, #8]
 828:	mov	x0, #0x1                   	// #1
 82c:	str	x1, [sp, #104]
 830:	str	x0, [sp, #152]
 834:	cmp	x2, x1
 838:	b.eq	910 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x158>  // b.none
 83c:	stp	x23, x24, [sp, #48]
 840:	add	x23, sp, #0xa8
 844:	add	x24, sp, #0xf0
 848:	stp	x25, x26, [sp, #64]
 84c:	mov	x25, x2
 850:	add	x26, sp, #0xd0
 854:	stp	x27, x28, [sp, #80]
 858:	add	x28, sp, #0x80
 85c:	add	x27, sp, #0xa0
 860:	orr	x0, x0, #0x1
 864:	str	xzr, [sp, #152]
 868:	str	x0, [sp, #208]
 86c:	mov	x8, x23
 870:	mov	x1, x28
 874:	mov	x0, x27
 878:	ldr	x3, [x25]
 87c:	str	xzr, [x25]
 880:	str	x3, [sp, #160]
 884:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 888:	mov	x1, x23
 88c:	mov	x8, x24
 890:	mov	x0, x26
 894:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 898:	ldr	x1, [sp, #152]
 89c:	tbnz	w1, #0, ae0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>
 8a0:	tst	x1, #0xfffffffffffffffe
 8a4:	b.ne	ae0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>  // b.any
 8a8:	ldr	x0, [sp, #240]
 8ac:	ldr	x3, [sp, #168]
 8b0:	orr	x0, x0, x1
 8b4:	orr	x0, x0, #0x1
 8b8:	str	x0, [sp, #152]
 8bc:	tbnz	w3, #0, b10 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x358>
 8c0:	tst	x3, #0xfffffffffffffffe
 8c4:	b.ne	b10 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x358>  // b.any
 8c8:	ldr	x0, [sp, #160]
 8cc:	cbz	x0, 8dc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x124>
 8d0:	ldr	x1, [x0]
 8d4:	ldr	x1, [x1, #8]
 8d8:	blr	x1
 8dc:	ldr	x0, [sp, #208]
 8e0:	tbnz	w0, #0, b18 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x360>
 8e4:	tst	x0, #0xfffffffffffffffe
 8e8:	b.ne	b18 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x360>  // b.any
 8ec:	ldr	x0, [sp, #104]
 8f0:	add	x25, x25, #0x8
 8f4:	cmp	x0, x25
 8f8:	ldr	x0, [sp, #152]
 8fc:	b.ne	860 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa8>  // b.any
 900:	ldp	x23, x24, [sp, #48]
 904:	orr	x0, x0, #0x1
 908:	ldp	x25, x26, [sp, #64]
 90c:	ldp	x27, x28, [sp, #80]
 910:	ldr	x1, [x20]
 914:	ldr	x1, [x1, #8]
 918:	str	x0, [sp, #168]
 91c:	mov	x0, x20
 920:	blr	x1
 924:	b	9a0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e8>
 928:	ldr	x1, [x19]
 92c:	str	xzr, [x19]
 930:	mov	x0, #0x2e8                 	// #744
 934:	str	x1, [sp, #240]
 938:	bl	0 <_Znwm>
 93c:	mov	x19, x0
 940:	add	x1, sp, #0xf0
 944:	bl	2e0 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 948:	ldr	x20, [sp, #240]
 94c:	cbz	x20, 964 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1ac>
 950:	mov	x0, x20
 954:	bl	0 <_ZN4llvm6ModuleD1Ev>
 958:	mov	x0, x20
 95c:	mov	x1, #0x2c8                 	// #712
 960:	bl	0 <_ZdlPvm>
 964:	mov	x0, x19
 968:	ldp	x19, x20, [sp, #16]
 96c:	ldp	x21, x22, [sp, #32]
 970:	ldp	x29, x30, [sp], #288
 974:	ret
 978:	add	x0, sp, #0xf0
 97c:	add	x8, sp, #0xa8
 980:	add	x1, sp, #0x80
 984:	str	x20, [sp, #240]
 988:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 98c:	ldr	x0, [sp, #240]
 990:	cbz	x0, 9a0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e8>
 994:	ldr	x1, [x0]
 998:	ldr	x1, [x1, #8]
 99c:	blr	x1
 9a0:	ldr	x0, [sp, #168]
 9a4:	ands	x0, x0, #0xfffffffffffffffe
 9a8:	b.eq	a74 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2bc>  // b.none
 9ac:	adrp	x4, 0 <_ZTVN4llvm18raw_string_ostreamE>
 9b0:	orr	x3, x0, #0x1
 9b4:	add	x5, sp, #0xd0
 9b8:	add	x7, sp, #0xe0
 9bc:	ldr	x4, [x4]
 9c0:	mov	w6, #0x1                   	// #1
 9c4:	mov	x2, #0x31                  	// #49
 9c8:	stp	x23, x24, [sp, #48]
 9cc:	add	x4, x4, #0x10
 9d0:	add	x24, sp, #0xf0
 9d4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 9d8:	mov	x0, x24
 9dc:	add	x1, x1, #0x0
 9e0:	stp	x25, x26, [sp, #64]
 9e4:	stp	x27, x28, [sp, #80]
 9e8:	str	x3, [sp, #168]
 9ec:	stp	x7, xzr, [sp, #208]
 9f0:	strb	wzr, [sp, #224]
 9f4:	stp	x4, xzr, [sp, #240]
 9f8:	stp	xzr, xzr, [sp, #256]
 9fc:	str	w6, [sp, #272]
 a00:	str	x5, [sp, #280]
 a04:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 a08:	ldp	x3, x2, [x0, #16]
 a0c:	mov	x1, x0
 a10:	cmp	x3, x2
 a14:	b.eq	b20 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x368>  // b.none
 a18:	mov	w0, #0xa                   	// #10
 a1c:	strb	w0, [x2]
 a20:	ldr	x0, [x1, #24]
 a24:	add	x0, x0, #0x1
 a28:	str	x0, [x1, #24]
 a2c:	ldr	x0, [sp, #168]
 a30:	ands	x0, x0, #0xfffffffffffffffe
 a34:	b.eq	b38 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x380>  // b.none
 a38:	ldr	x2, [x0]
 a3c:	ldr	x2, [x2, #16]
 a40:	blr	x2
 a44:	ldr	x0, [sp, #248]
 a48:	ldr	x1, [sp, #264]
 a4c:	cmp	x1, x0
 a50:	b.eq	a5c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2a4>  // b.none
 a54:	mov	x0, x24
 a58:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 a5c:	ldr	x0, [sp, #280]
 a60:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 a64:	mov	w2, #0x2c9                 	// #713
 a68:	add	x1, x1, #0x0
 a6c:	ldr	x0, [x0]
 a70:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 a74:	ldr	x0, [sp, #144]
 a78:	tbnz	w0, #0, ae8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x330>
 a7c:	tst	x0, #0xfffffffffffffffe
 a80:	b.ne	ae8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x330>  // b.any
 a84:	ldr	x0, [sp, #136]
 a88:	tbnz	w0, #0, afc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x344>
 a8c:	tst	x0, #0xfffffffffffffffe
 a90:	b.ne	afc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x344>  // b.any
 a94:	cbz	x21, aa4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ec>
 a98:	mov	x0, x21
 a9c:	mov	x1, x19
 aa0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 aa4:	ldr	x0, [sp, #176]
 aa8:	add	x19, x19, #0x10
 aac:	cmp	x0, x19
 ab0:	b.eq	ab8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x300>  // b.none
 ab4:	bl	0 <_ZdlPv>
 ab8:	ldr	x0, [sp, #120]
 abc:	tbnz	w0, #0, acc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x314>
 ac0:	tst	x0, #0xfffffffffffffffe
 ac4:	mov	x19, #0x0                   	// #0
 ac8:	b.eq	964 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1ac>  // b.none
 acc:	mov	x0, x22
 ad0:	stp	x23, x24, [sp, #48]
 ad4:	stp	x25, x26, [sp, #64]
 ad8:	stp	x27, x28, [sp, #80]
 adc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 ae0:	add	x0, sp, #0x98
 ae4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 ae8:	add	x0, sp, #0x90
 aec:	stp	x23, x24, [sp, #48]
 af0:	stp	x25, x26, [sp, #64]
 af4:	stp	x27, x28, [sp, #80]
 af8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 afc:	add	x0, sp, #0x88
 b00:	stp	x23, x24, [sp, #48]
 b04:	stp	x25, x26, [sp, #64]
 b08:	stp	x27, x28, [sp, #80]
 b0c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 b10:	mov	x0, x23
 b14:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 b18:	mov	x0, x26
 b1c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 b20:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b24:	add	x1, x1, #0x0
 b28:	mov	x2, #0x1                   	// #1
 b2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 b30:	mov	x1, x0
 b34:	b	a2c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x274>
 b38:	ldp	x0, x2, [x1, #16]
 b3c:	sub	x0, x0, x2
 b40:	cmp	x0, #0x6
 b44:	b.ls	b70 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3b8>  // b.plast
 b48:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b4c:	add	x0, x0, #0x0
 b50:	ldr	w3, [x0]
 b54:	ldur	w0, [x0, #3]
 b58:	str	w3, [x2]
 b5c:	stur	w0, [x2, #3]
 b60:	ldr	x0, [x1, #24]
 b64:	add	x0, x0, #0x7
 b68:	str	x0, [x1, #24]
 b6c:	b	a44 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x28c>
 b70:	mov	x0, x1
 b74:	mov	x2, #0x7                   	// #7
 b78:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b7c:	add	x1, x1, #0x0
 b80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 b84:	b	a44 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x28c>

Disassembly of section .text._ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE:

0000000000000000 <_ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine14finalizeObjectEv:

0000000000000000 <_ZN4llvm15ExecutionEngine14finalizeObjectEv>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine16getTargetMachineEv:

0000000000000000 <_ZN4llvm15ExecutionEngine16getTargetMachineEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb:

0000000000000000 <_ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE:

0000000000000000 <_ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE>:
   0:	mov	x0, x1
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21setProcessAllSectionsEb:

0000000000000000 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x1af                 	// #431
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE:

0000000000000000 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x1a0                 	// #416
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm:

0000000000000000 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0xfa                  	// #250
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE:

0000000000000000 <_ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE>:
   0:	b	0 <_ZN4llvm15ExecutionEngine18getPointerToGlobalEPKNS_11GlobalValueE>

Disassembly of section .text._ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE:

0000000000000000 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE>:
   0:	ldr	x4, [x0]
   4:	adrp	x2, 0 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE>
   8:	add	x2, x2, #0x0
   c:	ldr	x4, [x4, #128]
  10:	cmp	x4, x2
  14:	b.ne	20 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE+0x20>  // b.any
  18:	mov	x0, x1
  1c:	ret
  20:	mov	x16, x4
  24:	br	x16

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
   8:	mov	w3, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	x2, [x0]
  14:	strb	wzr, [sp, #96]
  18:	ldr	x1, [x1]
  1c:	stp	x21, x22, [sp, #32]
  20:	add	x21, sp, #0x50
  24:	ldr	x2, [x2, #16]
  28:	add	x4, x21, #0x10
  2c:	add	x1, x1, #0x10
  30:	stp	x19, x20, [sp, #16]
  34:	mov	x19, x8
  38:	str	x23, [sp, #48]
  3c:	add	x23, sp, #0x70
  40:	stp	x4, xzr, [sp, #80]
  44:	stp	x1, xzr, [sp, #112]
  48:	mov	x1, x23
  4c:	stp	xzr, xzr, [sp, #128]
  50:	str	w3, [sp, #144]
  54:	str	x21, [sp, #152]
  58:	blr	x2
  5c:	ldr	x0, [sp, #120]
  60:	ldr	x1, [sp, #136]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x23
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #152]
  78:	add	x0, x19, #0x10
  7c:	ldr	x20, [x1, #8]
  80:	str	x0, [x19]
  84:	ldr	x22, [x1]
  88:	cmn	x22, x20
  8c:	ccmp	x22, #0x0, #0x0, ne  // ne = any
  90:	b.eq	128 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x128>  // b.none
  94:	str	x20, [sp, #72]
  98:	cmp	x20, #0xf
  9c:	b.hi	f4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf4>  // b.pmore
  a0:	cmp	x20, #0x1
  a4:	b.ne	ec <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xec>  // b.any
  a8:	ldrb	w1, [x22]
  ac:	strb	w1, [x19, #16]
  b0:	str	x20, [x19, #8]
  b4:	add	x21, x21, #0x10
  b8:	strb	wzr, [x0, x20]
  bc:	mov	x0, x23
  c0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  c4:	ldr	x0, [sp, #80]
  c8:	cmp	x0, x21
  cc:	b.eq	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>  // b.none
  d0:	bl	0 <_ZdlPv>
  d4:	mov	x0, x19
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #160
  e8:	ret
  ec:	cbz	x20, b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
  f0:	b	110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  f4:	add	x1, sp, #0x48
  f8:	mov	x0, x19
  fc:	mov	x2, #0x0                   	// #0
 100:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 104:	ldr	x1, [sp, #72]
 108:	str	x0, [x19]
 10c:	str	x1, [x19, #16]
 110:	mov	x2, x20
 114:	mov	x1, x22
 118:	bl	0 <memcpy>
 11c:	ldr	x0, [x19]
 120:	ldr	x20, [sp, #72]
 124:	b	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
 128:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #536]
  14:	ldr	w0, [x0, #540]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x1
  20:	cmp	w20, w0
  24:	stp	x25, x26, [sp, #64]
  28:	mov	w21, w0
  2c:	b.cs	6c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x6c>  // b.hs, b.nlast
  30:	ldr	x25, [x19, #528]
  34:	mov	w1, w20
  38:	ldr	x0, [x22]
  3c:	str	xzr, [x22]
  40:	str	x0, [x25, x1, lsl #3]
  44:	add	x1, x1, #0x1
  48:	cmp	x1, x21
  4c:	b.hi	168 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x168>  // b.pmore
  50:	add	w20, w20, #0x1
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x25, x26, [sp, #64]
  5c:	str	w20, [x19, #536]
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #96
  68:	ret
  6c:	add	x1, x21, #0x2
  70:	stp	x23, x24, [sp, #48]
  74:	mov	x0, #0xffffffff            	// #4294967295
  78:	orr	x1, x1, x1, lsr #1
  7c:	orr	x1, x1, x1, lsr #2
  80:	orr	x1, x1, x1, lsr #4
  84:	orr	x1, x1, x1, lsr #8
  88:	orr	x1, x1, x1, lsr #16
  8c:	orr	x1, x1, x1, lsr #32
  90:	add	x1, x1, #0x1
  94:	cmp	x1, x0
  98:	b.hi	14c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x14c>  // b.pmore
  9c:	lsl	x0, x1, #3
  a0:	mov	w24, w1
  a4:	mov	x21, x1
  a8:	str	x1, [sp, #88]
  ac:	bl	0 <malloc>
  b0:	mov	x25, x0
  b4:	cbz	x0, 18c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x18c>
  b8:	ldr	x1, [x19, #528]
  bc:	ubfiz	x20, x20, #3, #32
  c0:	mov	x0, x25
  c4:	add	x23, x1, x20
  c8:	cmp	x1, x23
  cc:	b.eq	160 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x160>  // b.none
  d0:	ldr	x2, [x1]
  d4:	str	xzr, [x1], #8
  d8:	str	x2, [x0], #8
  dc:	cmp	x23, x1
  e0:	b.ne	d0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xd0>  // b.any
  e4:	ldr	x26, [x19, #528]
  e8:	add	x23, x26, x20
  ec:	cmp	x26, x23
  f0:	b.eq	160 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x160>  // b.none
  f4:	nop
  f8:	ldr	x20, [x23, #-8]!
  fc:	cbz	x20, 114 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x114>
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm6ModuleD1Ev>
 108:	mov	x0, x20
 10c:	mov	x1, #0x2c8                 	// #712
 110:	bl	0 <_ZdlPvm>
 114:	cmp	x26, x23
 118:	b.ne	f8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xf8>  // b.any
 11c:	ldr	x23, [x19, #528]
 120:	add	x20, x19, #0x200
 124:	add	x0, x19, #0x220
 128:	cmp	x23, x0
 12c:	b.eq	138 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x138>  // b.none
 130:	mov	x0, x23
 134:	bl	0 <free>
 138:	str	w24, [x20, #28]
 13c:	str	x25, [x20, #16]
 140:	ldr	w20, [x19, #536]
 144:	ldp	x23, x24, [sp, #48]
 148:	b	34 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x34>
 14c:	mov	x21, x0
 150:	mov	x1, x0
 154:	mov	w24, #0xffffffff            	// #-1
 158:	mov	x0, #0x7fffffff8           	// #34359738360
 15c:	b	a8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xa8>
 160:	add	x20, x19, #0x200
 164:	b	124 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x124>
 168:	adrp	x3, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 16c:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 170:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 174:	add	x3, x3, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x0, x0, #0x0
 180:	mov	w2, #0x43                  	// #67
 184:	stp	x23, x24, [sp, #48]
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 190:	mov	w1, #0x1                   	// #1
 194:	add	x0, x0, #0x0
 198:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 19c:	ldr	w20, [x19, #536]
 1a0:	b	b8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xb8>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldp	x19, x20, [x0]
  10:	cmp	x19, x20
  14:	b.eq	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x54>  // b.none
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x0
  20:	add	x0, x19, #0x18
  24:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  28:	ldr	w1, [x19, #16]
  2c:	cmp	w1, #0x40
  30:	b.ls	40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>  // b.plast
  34:	ldr	x0, [x19, #8]
  38:	cbz	x0, 40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>
  3c:	bl	0 <_ZdaPv>
  40:	add	x19, x19, #0x30
  44:	cmp	x20, x19
  48:	b.ne	20 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x20>  // b.any
  4c:	ldr	x20, [x21]
  50:	ldr	x21, [sp, #32]
  54:	cbz	x20, 68 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x68>
  58:	mov	x0, x20
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZdlPv>
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC2ERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x0
  1c:	movk	x1, #0xaaab
  20:	ldp	x0, x19, [x22]
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x21, #0x0                   	// #0
  2c:	stp	xzr, xzr, [x20]
  30:	str	xzr, [x20, #16]
  34:	sub	x19, x19, x0
  38:	asr	x0, x19, #4
  3c:	mul	x0, x0, x1
  40:	cbz	x0, 60 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x60>
  44:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  48:	movk	x1, #0x2aa, lsl #48
  4c:	cmp	x0, x1
  50:	b.hi	130 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x130>  // b.pmore
  54:	mov	x0, x19
  58:	bl	0 <_Znwm>
  5c:	mov	x21, x0
  60:	add	x19, x21, x19
  64:	stp	x21, x21, [x20]
  68:	str	x19, [x20, #16]
  6c:	ldp	x24, x19, [x22]
  70:	cmp	x24, x19
  74:	b.eq	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x118>  // b.none
  78:	mov	x22, x24
  7c:	mov	x23, x21
  80:	b	a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xa8>
  84:	ldr	x0, [x22, #8]
  88:	str	x0, [x23, #8]
  8c:	add	x1, x22, #0x18
  90:	add	x0, x23, #0x18
  94:	add	x22, x22, #0x30
  98:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>
  9c:	cmp	x19, x22
  a0:	add	x23, x23, #0x30
  a4:	b.eq	e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xe8>  // b.none
  a8:	ldr	x0, [x22]
  ac:	str	x0, [x23]
  b0:	ldr	w0, [x22, #16]
  b4:	str	w0, [x23, #16]
  b8:	cmp	w0, #0x40
  bc:	b.ls	84 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x84>  // b.plast
  c0:	add	x1, x22, #0x8
  c4:	add	x0, x23, #0x8
  c8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  cc:	add	x1, x22, #0x18
  d0:	add	x0, x23, #0x18
  d4:	add	x22, x22, #0x30
  d8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>
  dc:	cmp	x19, x22
  e0:	add	x23, x23, #0x30
  e4:	b.ne	a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xa8>  // b.any
  e8:	sub	x1, x19, #0x30
  ec:	mov	x19, #0xaaab                	// #43691
  f0:	sub	x1, x1, x24
  f4:	movk	x19, #0xaaaa, lsl #16
  f8:	movk	x19, #0xaaaa, lsl #32
  fc:	lsr	x1, x1, #4
 100:	movk	x19, #0xaaa, lsl #48
 104:	mul	x1, x1, x19
 108:	and	x1, x1, #0xfffffffffffffff
 10c:	add	x1, x1, #0x1
 110:	add	x1, x1, x1, lsl #1
 114:	add	x21, x21, x1, lsl #4
 118:	ldp	x23, x24, [sp, #48]
 11c:	str	x21, [x20, #8]
 120:	ldp	x19, x20, [sp, #16]
 124:	ldp	x21, x22, [sp, #32]
 128:	ldp	x29, x30, [sp], #64
 12c:	ret
 130:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	cbz	x1, b4 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0xb4>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	str	x23, [sp, #48]
  18:	mov	x23, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x0, x23
  24:	ldr	x1, [x21, #24]
  28:	mov	x20, x21
  2c:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  30:	ldp	x19, x22, [x21, #64]
  34:	ldr	x21, [x21, #16]
  38:	cmp	x19, x22
  3c:	b.eq	70 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x70>  // b.none
  40:	add	x0, x19, #0x18
  44:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  48:	ldr	w1, [x19, #16]
  4c:	cmp	w1, #0x40
  50:	b.ls	60 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x60>  // b.plast
  54:	ldr	x0, [x19, #8]
  58:	cbz	x0, 60 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x60>
  5c:	bl	0 <_ZdaPv>
  60:	add	x19, x19, #0x30
  64:	cmp	x22, x19
  68:	b.ne	40 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x40>  // b.any
  6c:	ldr	x22, [x20, #64]
  70:	cbz	x22, 7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x7c>
  74:	mov	x0, x22
  78:	bl	0 <_ZdlPv>
  7c:	ldr	w1, [x20, #56]
  80:	cmp	w1, #0x40
  84:	b.ls	94 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x94>  // b.plast
  88:	ldr	x0, [x20, #48]
  8c:	cbz	x0, 94 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x94>
  90:	bl	0 <_ZdaPv>
  94:	mov	x0, x20
  98:	bl	0 <_ZdlPv>
  9c:	cbnz	x21, 20 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x20>
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp], #64
  b0:	ret
  b4:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x26, x1
  18:	ldp	x23, x25, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x21, x22, [sp, #32]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x25, x23
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	14c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x14c>  // b.none
  34:	mov	x21, x0
  38:	mov	x20, x2
  3c:	asr	x0, x1, #3
  40:	sub	x27, x26, x23
  44:	cbz	x0, 134 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x134>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x24, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>  // b.plast
  58:	mov	x0, x24
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x24, x0, x24
  68:	add	x19, x0, #0x8
  6c:	ldr	x0, [x20]
  70:	str	x0, [x22, x27]
  74:	str	xzr, [x20]
  78:	cmp	x26, x23
  7c:	b.eq	c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc4>  // b.none
  80:	mov	x20, x22
  84:	mov	x19, x23
  88:	ldr	x0, [x19]
  8c:	str	xzr, [x19]
  90:	str	x0, [x20]
  94:	ldr	x0, [x19]
  98:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  9c:	ldr	x1, [x0]
  a0:	ldr	x1, [x1, #8]
  a4:	blr	x1
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x26, x19
  b4:	b.ne	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>  // b.any
  b8:	sub	x19, x26, x23
  bc:	add	x19, x19, #0x8
  c0:	add	x19, x22, x19
  c4:	cmp	x26, x25
  c8:	b.eq	f0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf0>  // b.none
  cc:	mov	x2, x26
  d0:	mov	x3, x19
  d4:	nop
  d8:	ldr	x0, [x2], #8
  dc:	str	x0, [x3], #8
  e0:	cmp	x2, x25
  e4:	b.ne	d8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd8>  // b.any
  e8:	sub	x2, x2, x26
  ec:	add	x19, x19, x2
  f0:	cbz	x23, fc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xfc>
  f4:	mov	x0, x23
  f8:	bl	0 <_ZdlPv>
  fc:	ldp	x25, x26, [sp, #64]
 100:	ldr	x27, [sp, #80]
 104:	stp	x22, x19, [x21]
 108:	str	x24, [x21, #16]
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x29, x30, [sp], #96
 11c:	ret
 120:	cbnz	x0, 13c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x13c>
 124:	mov	x19, #0x8                   	// #8
 128:	mov	x24, #0x0                   	// #0
 12c:	mov	x22, #0x0                   	// #0
 130:	b	6c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x6c>
 134:	mov	x24, #0x8                   	// #8
 138:	b	58 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 13c:	cmp	x0, x3
 140:	csel	x0, x0, x3, ls  // ls = plast
 144:	lsl	x24, x0, #3
 148:	b	58 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 14c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 150:	add	x0, x0, #0x0
 154:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	ldp	x3, x2, [x0, #8]
   4:	mov	x4, x0
   8:	cmp	x3, x2
   c:	b.eq	24 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x24>  // b.none
  10:	ldr	x0, [x1]
  14:	str	xzr, [x1]
  18:	str	x0, [x3], #8
  1c:	str	x3, [x4, #8]
  20:	ret
  24:	mov	x2, x1
  28:	mov	x1, x3
  2c:	b	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x0, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x8
  20:	ldr	x2, [x1]
  24:	ands	x0, x0, #0xfffffffffffffffe
  28:	and	x2, x2, #0xfffffffffffffffe
  2c:	b.ne	54 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x54>  // b.any
  30:	str	xzr, [x19]
  34:	orr	x2, x2, #0x1
  38:	str	xzr, [x1]
  3c:	str	x2, [x8]
  40:	mov	x0, x21
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x21, x22, [sp, #32]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	orr	x1, x0, #0x1
  58:	str	x1, [x19]
  5c:	cbz	x2, 174 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x174>
  60:	ldr	x1, [x0]
  64:	orr	x2, x2, #0x1
  68:	adrp	x22, 0 <_ZN4llvm9ErrorList2IDE>
  6c:	stp	x23, x24, [sp, #48]
  70:	str	x2, [x20]
  74:	ldr	x2, [x1, #48]
  78:	ldr	x23, [x22]
  7c:	mov	x1, x23
  80:	blr	x2
  84:	tst	w0, #0xff
  88:	b.ne	194 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x194>  // b.any
  8c:	ldr	x0, [x20]
  90:	mov	x2, #0x0                   	// #0
  94:	ands	x0, x0, #0xfffffffffffffffe
  98:	b.ne	220 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x220>  // b.any
  9c:	ldr	x1, [x19]
  a0:	str	xzr, [x20]
  a4:	str	xzr, [x19]
  a8:	mov	x0, #0x20                  	// #32
  ac:	and	x1, x1, #0xfffffffffffffffe
  b0:	stp	x1, x2, [sp, #64]
  b4:	bl	0 <_Znwm>
  b8:	mov	x20, x0
  bc:	adrp	x1, 0 <_ZTVN4llvm9ErrorListE>
  c0:	mov	x19, x0
  c4:	ldr	x0, [sp, #64]
  c8:	ldr	x1, [x1]
  cc:	ldr	x22, [x22]
  d0:	add	x1, x1, #0x10
  d4:	str	x1, [x20], #8
  d8:	mov	x1, x22
  dc:	ldr	x2, [x0]
  e0:	ldr	x2, [x2, #48]
  e4:	str	xzr, [x19, #8]
  e8:	stp	xzr, xzr, [x20, #8]
  ec:	blr	x2
  f0:	tst	w0, #0xff
  f4:	b.ne	380 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x380>  // b.any
  f8:	ldr	x0, [sp, #72]
  fc:	mov	x1, x22
 100:	ldr	x2, [x0]
 104:	ldr	x2, [x2, #48]
 108:	blr	x2
 10c:	tst	w0, #0xff
 110:	b.ne	380 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x380>  // b.any
 114:	add	x1, sp, #0x40
 118:	mov	x0, x20
 11c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 120:	orr	x19, x19, #0x1
 124:	mov	x0, x20
 128:	add	x1, sp, #0x48
 12c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 130:	str	x19, [x21]
 134:	ldr	x0, [sp, #72]
 138:	cbz	x0, 148 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x148>
 13c:	ldr	x1, [x0]
 140:	ldr	x1, [x1, #8]
 144:	blr	x1
 148:	ldr	x0, [sp, #64]
 14c:	cbz	x0, 358 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x358>
 150:	ldr	x1, [x0]
 154:	ldr	x1, [x1, #8]
 158:	blr	x1
 15c:	mov	x0, x21
 160:	ldp	x19, x20, [sp, #16]
 164:	ldp	x21, x22, [sp, #32]
 168:	ldp	x23, x24, [sp, #48]
 16c:	ldp	x29, x30, [sp], #80
 170:	ret
 174:	str	xzr, [x20]
 178:	mov	x0, x21
 17c:	str	xzr, [x19]
 180:	str	x1, [x8]
 184:	ldp	x19, x20, [sp, #16]
 188:	ldp	x21, x22, [sp, #32]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret
 194:	ldr	x22, [x19]
 198:	ldr	x0, [x20]
 19c:	and	x22, x22, #0xfffffffffffffffe
 1a0:	ands	x0, x0, #0xfffffffffffffffe
 1a4:	b.ne	1fc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1fc>  // b.any
 1a8:	mov	x2, #0x0                   	// #0
 1ac:	str	xzr, [x20]
 1b0:	add	x0, x22, #0x8
 1b4:	add	x1, sp, #0x48
 1b8:	str	x2, [sp, #72]
 1bc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1c0:	ldr	x0, [sp, #72]
 1c4:	cbz	x0, 1d4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d4>
 1c8:	ldr	x1, [x0]
 1cc:	ldr	x1, [x1, #8]
 1d0:	blr	x1
 1d4:	ldr	x0, [x19]
 1d8:	ldp	x23, x24, [sp, #48]
 1dc:	str	xzr, [x19]
 1e0:	orr	x0, x0, #0x1
 1e4:	str	x0, [x21]
 1e8:	mov	x0, x21
 1ec:	ldp	x19, x20, [sp, #16]
 1f0:	ldp	x21, x22, [sp, #32]
 1f4:	ldp	x29, x30, [sp], #80
 1f8:	ret
 1fc:	ldr	x2, [x0]
 200:	mov	x1, x23
 204:	ldr	x2, [x2, #48]
 208:	blr	x2
 20c:	tst	w0, #0xff
 210:	b.ne	244 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x244>  // b.any
 214:	ldr	x2, [x20]
 218:	and	x2, x2, #0xfffffffffffffffe
 21c:	b	1ac <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1ac>
 220:	ldr	x2, [x0]
 224:	mov	x1, x23
 228:	ldr	x2, [x2, #48]
 22c:	blr	x2
 230:	tst	w0, #0xff
 234:	b.ne	294 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x294>  // b.any
 238:	ldr	x2, [x20]
 23c:	and	x2, x2, #0xfffffffffffffffe
 240:	b	9c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x9c>
 244:	ldr	x24, [x20]
 248:	add	x22, x22, #0x8
 24c:	and	x24, x24, #0xfffffffffffffffe
 250:	ldr	x23, [x24, #16]
 254:	str	xzr, [x20]
 258:	ldr	x20, [x24, #8]
 25c:	cmp	x23, x20
 260:	b.eq	280 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x280>  // b.none
 264:	nop
 268:	mov	x1, x20
 26c:	mov	x0, x22
 270:	add	x20, x20, #0x8
 274:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 278:	cmp	x23, x20
 27c:	b.ne	268 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x268>  // b.any
 280:	ldr	x1, [x24]
 284:	mov	x0, x24
 288:	ldr	x1, [x1, #8]
 28c:	blr	x1
 290:	b	1d4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d4>
 294:	ldr	x0, [x20]
 298:	ldr	x2, [x19]
 29c:	and	x0, x0, #0xfffffffffffffffe
 2a0:	and	x2, x2, #0xfffffffffffffffe
 2a4:	str	x2, [sp, #72]
 2a8:	ldr	x23, [x0, #8]!
 2ac:	str	xzr, [x19]
 2b0:	ldp	x1, x3, [x0, #8]
 2b4:	cmp	x1, x3
 2b8:	b.eq	360 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x360>  // b.none
 2bc:	cmp	x23, x1
 2c0:	add	x3, x1, #0x8
 2c4:	b.eq	370 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x370>  // b.none
 2c8:	ldur	x2, [x1, #-8]
 2cc:	sub	x19, x1, #0x8
 2d0:	stp	xzr, x2, [x1, #-8]
 2d4:	sub	x22, x19, x23
 2d8:	cmp	x22, #0x0
 2dc:	str	x3, [x0, #8]
 2e0:	asr	x22, x22, #3
 2e4:	b.le	30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2e8:	ldr	x1, [x19, #-8]!
 2ec:	ldr	x0, [x19, #8]
 2f0:	stp	xzr, x1, [x19]
 2f4:	cbz	x0, 304 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x304>
 2f8:	ldr	x1, [x0]
 2fc:	ldr	x1, [x1, #8]
 300:	blr	x1
 304:	subs	x22, x22, #0x1
 308:	b.ne	2e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2e8>  // b.any
 30c:	ldr	x1, [sp, #72]
 310:	str	xzr, [sp, #72]
 314:	ldr	x0, [x23]
 318:	str	x1, [x23]
 31c:	cbz	x0, 32c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x32c>
 320:	ldr	x1, [x0]
 324:	ldr	x1, [x1, #8]
 328:	blr	x1
 32c:	ldr	x0, [sp, #72]
 330:	cbz	x0, 340 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x340>
 334:	ldr	x1, [x0]
 338:	ldr	x1, [x1, #8]
 33c:	blr	x1
 340:	ldr	x0, [x20]
 344:	ldp	x23, x24, [sp, #48]
 348:	str	xzr, [x20]
 34c:	orr	x0, x0, #0x1
 350:	str	x0, [x21]
 354:	b	40 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x40>
 358:	ldp	x23, x24, [sp, #48]
 35c:	b	40 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x40>
 360:	mov	x1, x23
 364:	add	x2, sp, #0x48
 368:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 36c:	b	32c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x32c>
 370:	str	xzr, [sp, #72]
 374:	str	x2, [x23]
 378:	str	x3, [x0, #8]
 37c:	b	32c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x32c>
 380:	adrp	x3, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 384:	adrp	x1, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 388:	adrp	x0, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 38c:	add	x3, x3, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x0, x0, #0x0
 398:	mov	w2, #0x181                 	// #385
 39c:	bl	0 <__assert_fail>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Interpreter.cpp>:
   0:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine10InterpCtorB5cxx11E>
   4:	adrp	x1, 7b8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
   8:	ldr	x0, [x0]
   c:	ldr	x1, [x1]
  10:	str	x1, [x0]
  14:	ret
