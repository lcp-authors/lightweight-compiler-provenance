
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_testcapi.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008218 <.init>:
    8218:	stp	x29, x30, [sp, #-16]!
    821c:	mov	x29, sp
    8220:	bl	90b0 <PyObject_Calloc@plt+0x10>
    8224:	ldp	x29, x30, [sp], #16
    8228:	ret

Disassembly of section .plt:

0000000000008230 <memcpy@plt-0x20>:
    8230:	stp	x16, x30, [sp, #-16]!
    8234:	adrp	x16, 27000 <PyInit__testcapi@@Base+0x1de44>
    8238:	ldr	x17, [x16, #4088]
    823c:	add	x16, x16, #0xff8
    8240:	br	x17
    8244:	nop
    8248:	nop
    824c:	nop

0000000000008250 <memcpy@plt>:
    8250:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8254:	ldr	x17, [x16]
    8258:	add	x16, x16, #0x0
    825c:	br	x17

0000000000008260 <PyUnicode_FromFormat@plt>:
    8260:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8264:	ldr	x17, [x16, #8]
    8268:	add	x16, x16, #0x8
    826c:	br	x17

0000000000008270 <PyNumber_Negative@plt>:
    8270:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8274:	ldr	x17, [x16, #16]
    8278:	add	x16, x16, #0x10
    827c:	br	x17

0000000000008280 <PyMarshal_ReadLastObjectFromFile@plt>:
    8280:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8284:	ldr	x17, [x16, #24]
    8288:	add	x16, x16, #0x18
    828c:	br	x17

0000000000008290 <PyMapping_Items@plt>:
    8290:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8294:	ldr	x17, [x16, #32]
    8298:	add	x16, x16, #0x20
    829c:	br	x17

00000000000082a0 <PyList_New@plt>:
    82a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    82a4:	ldr	x17, [x16, #40]
    82a8:	add	x16, x16, #0x28
    82ac:	br	x17

00000000000082b0 <PyMarshal_ReadLongFromFile@plt>:
    82b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    82b4:	ldr	x17, [x16, #48]
    82b8:	add	x16, x16, #0x30
    82bc:	br	x17

00000000000082c0 <_PyUnicode_Ready@plt>:
    82c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    82c4:	ldr	x17, [x16, #56]
    82c8:	add	x16, x16, #0x38
    82cc:	br	x17

00000000000082d0 <PyUnicode_AsWideChar@plt>:
    82d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    82d4:	ldr	x17, [x16, #64]
    82d8:	add	x16, x16, #0x40
    82dc:	br	x17

00000000000082e0 <PyLong_AsLongLongAndOverflow@plt>:
    82e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    82e4:	ldr	x17, [x16, #72]
    82e8:	add	x16, x16, #0x48
    82ec:	br	x17

00000000000082f0 <PyErr_GetExcInfo@plt>:
    82f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    82f4:	ldr	x17, [x16, #80]
    82f8:	add	x16, x16, #0x50
    82fc:	br	x17

0000000000008300 <strlen@plt>:
    8300:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8304:	ldr	x17, [x16, #88]
    8308:	add	x16, x16, #0x58
    830c:	br	x17

0000000000008310 <PyTraceMalloc_Untrack@plt>:
    8310:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8314:	ldr	x17, [x16, #96]
    8318:	add	x16, x16, #0x60
    831c:	br	x17

0000000000008320 <PyModule_AddIntConstant@plt>:
    8320:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8324:	ldr	x17, [x16, #104]
    8328:	add	x16, x16, #0x68
    832c:	br	x17

0000000000008330 <raise@plt>:
    8330:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8334:	ldr	x17, [x16, #112]
    8338:	add	x16, x16, #0x70
    833c:	br	x17

0000000000008340 <_Py_EncodeLocaleEx@plt>:
    8340:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8344:	ldr	x17, [x16, #120]
    8348:	add	x16, x16, #0x78
    834c:	br	x17

0000000000008350 <PyThread_tss_create@plt>:
    8350:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8354:	ldr	x17, [x16, #128]
    8358:	add	x16, x16, #0x80
    835c:	br	x17

0000000000008360 <PyGILState_Release@plt>:
    8360:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8364:	ldr	x17, [x16, #136]
    8368:	add	x16, x16, #0x88
    836c:	br	x17

0000000000008370 <_PyBytes_Resize@plt>:
    8370:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8374:	ldr	x17, [x16, #144]
    8378:	add	x16, x16, #0x90
    837c:	br	x17

0000000000008380 <PyErr_Restore@plt>:
    8380:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8384:	ldr	x17, [x16, #152]
    8388:	add	x16, x16, #0x98
    838c:	br	x17

0000000000008390 <PyNumber_Lshift@plt>:
    8390:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8394:	ldr	x17, [x16, #160]
    8398:	add	x16, x16, #0xa0
    839c:	br	x17

00000000000083a0 <PyThread_tss_free@plt>:
    83a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    83a4:	ldr	x17, [x16, #168]
    83a8:	add	x16, x16, #0xa8
    83ac:	br	x17

00000000000083b0 <PyEval_RestoreThread@plt>:
    83b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    83b4:	ldr	x17, [x16, #176]
    83b8:	add	x16, x16, #0xb0
    83bc:	br	x17

00000000000083c0 <_Py_GetErrorHandler@plt>:
    83c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    83c4:	ldr	x17, [x16, #184]
    83c8:	add	x16, x16, #0xb8
    83cc:	br	x17

00000000000083d0 <PyMem_Free@plt>:
    83d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    83d4:	ldr	x17, [x16, #192]
    83d8:	add	x16, x16, #0xc0
    83dc:	br	x17

00000000000083e0 <_PyObject_IsFreed@plt>:
    83e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    83e4:	ldr	x17, [x16, #200]
    83e8:	add	x16, x16, #0xc8
    83ec:	br	x17

00000000000083f0 <PyCapsule_SetName@plt>:
    83f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    83f4:	ldr	x17, [x16, #208]
    83f8:	add	x16, x16, #0xd0
    83fc:	br	x17

0000000000008400 <PyUnicode_FromWideChar@plt>:
    8400:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8404:	ldr	x17, [x16, #216]
    8408:	add	x16, x16, #0xd8
    840c:	br	x17

0000000000008410 <PyErr_SetFromErrno@plt>:
    8410:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8414:	ldr	x17, [x16, #224]
    8418:	add	x16, x16, #0xe0
    841c:	br	x17

0000000000008420 <_PyTime_ObjectToTimeval@plt>:
    8420:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8424:	ldr	x17, [x16, #232]
    8428:	add	x16, x16, #0xe8
    842c:	br	x17

0000000000008430 <PyCFunction_NewEx@plt>:
    8430:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8434:	ldr	x17, [x16, #240]
    8438:	add	x16, x16, #0xf0
    843c:	br	x17

0000000000008440 <PyCapsule_GetName@plt>:
    8440:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8444:	ldr	x17, [x16, #248]
    8448:	add	x16, x16, #0xf8
    844c:	br	x17

0000000000008450 <PyLong_FromUnsignedLongLong@plt>:
    8450:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8454:	ldr	x17, [x16, #256]
    8458:	add	x16, x16, #0x100
    845c:	br	x17

0000000000008460 <PyThread_start_new_thread@plt>:
    8460:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8464:	ldr	x17, [x16, #264]
    8468:	add	x16, x16, #0x108
    846c:	br	x17

0000000000008470 <PyBuffer_Release@plt>:
    8470:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8474:	ldr	x17, [x16, #272]
    8478:	add	x16, x16, #0x110
    847c:	br	x17

0000000000008480 <PyLong_AsUnsignedLongLong@plt>:
    8480:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8484:	ldr	x17, [x16, #280]
    8488:	add	x16, x16, #0x118
    848c:	br	x17

0000000000008490 <PyNumber_Add@plt>:
    8490:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8494:	ldr	x17, [x16, #288]
    8498:	add	x16, x16, #0x120
    849c:	br	x17

00000000000084a0 <PyObject_GetAttrString@plt>:
    84a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    84a4:	ldr	x17, [x16, #296]
    84a8:	add	x16, x16, #0x128
    84ac:	br	x17

00000000000084b0 <ftell@plt>:
    84b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    84b4:	ldr	x17, [x16, #304]
    84b8:	add	x16, x16, #0x130
    84bc:	br	x17

00000000000084c0 <__cxa_finalize@plt>:
    84c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    84c4:	ldr	x17, [x16, #312]
    84c8:	add	x16, x16, #0x138
    84cc:	br	x17

00000000000084d0 <PyMem_RawMalloc@plt>:
    84d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    84d4:	ldr	x17, [x16, #320]
    84d8:	add	x16, x16, #0x140
    84dc:	br	x17

00000000000084e0 <sprintf@plt>:
    84e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    84e4:	ldr	x17, [x16, #328]
    84e8:	add	x16, x16, #0x148
    84ec:	br	x17

00000000000084f0 <PyLong_AsUnsignedLongLongMask@plt>:
    84f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    84f4:	ldr	x17, [x16, #336]
    84f8:	add	x16, x16, #0x150
    84fc:	br	x17

0000000000008500 <PyBytes_FromStringAndSize@plt>:
    8500:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8504:	ldr	x17, [x16, #344]
    8508:	add	x16, x16, #0x158
    850c:	br	x17

0000000000008510 <PyObject_SetAttrString@plt>:
    8510:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8514:	ldr	x17, [x16, #352]
    8518:	add	x16, x16, #0x160
    851c:	br	x17

0000000000008520 <PyThread_tss_is_created@plt>:
    8520:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8524:	ldr	x17, [x16, #360]
    8528:	add	x16, x16, #0x168
    852c:	br	x17

0000000000008530 <PyMapping_Keys@plt>:
    8530:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8534:	ldr	x17, [x16, #368]
    8538:	add	x16, x16, #0x170
    853c:	br	x17

0000000000008540 <Py_EndInterpreter@plt>:
    8540:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8544:	ldr	x17, [x16, #376]
    8548:	add	x16, x16, #0x178
    854c:	br	x17

0000000000008550 <PyThread_exit_thread@plt>:
    8550:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8554:	ldr	x17, [x16, #384]
    8558:	add	x16, x16, #0x180
    855c:	br	x17

0000000000008560 <_Py_Dealloc@plt>:
    8560:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8564:	ldr	x17, [x16, #392]
    8568:	add	x16, x16, #0x188
    856c:	br	x17

0000000000008570 <PyErr_NoMemory@plt>:
    8570:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8574:	ldr	x17, [x16, #400]
    8578:	add	x16, x16, #0x190
    857c:	br	x17

0000000000008580 <PyErr_SetObject@plt>:
    8580:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8584:	ldr	x17, [x16, #408]
    8588:	add	x16, x16, #0x198
    858c:	br	x17

0000000000008590 <PyObject_GC_Del@plt>:
    8590:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8594:	ldr	x17, [x16, #416]
    8598:	add	x16, x16, #0x1a0
    859c:	br	x17

00000000000085a0 <PyType_GetSlot@plt>:
    85a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    85a4:	ldr	x17, [x16, #424]
    85a8:	add	x16, x16, #0x1a8
    85ac:	br	x17

00000000000085b0 <_PyLong_Sign@plt>:
    85b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    85b4:	ldr	x17, [x16, #432]
    85b8:	add	x16, x16, #0x1b0
    85bc:	br	x17

00000000000085c0 <PyMarshal_WriteLongToFile@plt>:
    85c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    85c4:	ldr	x17, [x16, #440]
    85c8:	add	x16, x16, #0x1b8
    85cc:	br	x17

00000000000085d0 <PyErr_NewExceptionWithDoc@plt>:
    85d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    85d4:	ldr	x17, [x16, #448]
    85d8:	add	x16, x16, #0x1c0
    85dc:	br	x17

00000000000085e0 <PyThread_acquire_lock@plt>:
    85e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    85e4:	ldr	x17, [x16, #456]
    85e8:	add	x16, x16, #0x1c8
    85ec:	br	x17

00000000000085f0 <_PyLong_NumBits@plt>:
    85f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    85f4:	ldr	x17, [x16, #464]
    85f8:	add	x16, x16, #0x1d0
    85fc:	br	x17

0000000000008600 <PyObject_Str@plt>:
    8600:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16, #472]
    8608:	add	x16, x16, #0x1d8
    860c:	br	x17

0000000000008610 <PyUnicode_FSConverter@plt>:
    8610:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #480]
    8618:	add	x16, x16, #0x1e0
    861c:	br	x17

0000000000008620 <_PyGen_Send@plt>:
    8620:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #488]
    8628:	add	x16, x16, #0x1e8
    862c:	br	x17

0000000000008630 <PyUnicode_CopyCharacters@plt>:
    8630:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #496]
    8638:	add	x16, x16, #0x1f0
    863c:	br	x17

0000000000008640 <fclose@plt>:
    8640:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #504]
    8648:	add	x16, x16, #0x1f8
    864c:	br	x17

0000000000008650 <_PyErr_SetKeyError@plt>:
    8650:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #512]
    8658:	add	x16, x16, #0x200
    865c:	br	x17

0000000000008660 <malloc@plt>:
    8660:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #520]
    8668:	add	x16, x16, #0x208
    866c:	br	x17

0000000000008670 <PyErr_SetString@plt>:
    8670:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #528]
    8678:	add	x16, x16, #0x210
    867c:	br	x17

0000000000008680 <_PyObject_FastCallDict@plt>:
    8680:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #536]
    8688:	add	x16, x16, #0x218
    868c:	br	x17

0000000000008690 <_PyTime_AsSecondsDouble@plt>:
    8690:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #544]
    8698:	add	x16, x16, #0x220
    869c:	br	x17

00000000000086a0 <PyMethod_New@plt>:
    86a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #552]
    86a8:	add	x16, x16, #0x228
    86ac:	br	x17

00000000000086b0 <PyException_GetTraceback@plt>:
    86b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #560]
    86b8:	add	x16, x16, #0x230
    86bc:	br	x17

00000000000086c0 <PyObject_Malloc@plt>:
    86c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #568]
    86c8:	add	x16, x16, #0x238
    86cc:	br	x17

00000000000086d0 <_PyTime_AsNanosecondsObject@plt>:
    86d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #576]
    86d8:	add	x16, x16, #0x240
    86dc:	br	x17

00000000000086e0 <PyGILState_Ensure@plt>:
    86e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #584]
    86e8:	add	x16, x16, #0x248
    86ec:	br	x17

00000000000086f0 <_PyObject_LookupSpecial@plt>:
    86f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #592]
    86f8:	add	x16, x16, #0x250
    86fc:	br	x17

0000000000008700 <PyMem_SetAllocator@plt>:
    8700:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #600]
    8708:	add	x16, x16, #0x258
    870c:	br	x17

0000000000008710 <_PyArg_UnpackStack@plt>:
    8710:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #608]
    8718:	add	x16, x16, #0x260
    871c:	br	x17

0000000000008720 <PyErr_Print@plt>:
    8720:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #616]
    8728:	add	x16, x16, #0x268
    872c:	br	x17

0000000000008730 <PyTraceMalloc_Track@plt>:
    8730:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #624]
    8738:	add	x16, x16, #0x270
    873c:	br	x17

0000000000008740 <PyMem_Realloc@plt>:
    8740:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #632]
    8748:	add	x16, x16, #0x278
    874c:	br	x17

0000000000008750 <PyErr_SetNone@plt>:
    8750:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #640]
    8758:	add	x16, x16, #0x280
    875c:	br	x17

0000000000008760 <PyErr_ExceptionMatches@plt>:
    8760:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #648]
    8768:	add	x16, x16, #0x288
    876c:	br	x17

0000000000008770 <memset@plt>:
    8770:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #656]
    8778:	add	x16, x16, #0x290
    877c:	br	x17

0000000000008780 <gettimeofday@plt>:
    8780:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #664]
    8788:	add	x16, x16, #0x298
    878c:	br	x17

0000000000008790 <Py_NewInterpreter@plt>:
    8790:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #672]
    8798:	add	x16, x16, #0x2a0
    879c:	br	x17

00000000000087a0 <_Py_DecodeLocaleEx@plt>:
    87a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #680]
    87a8:	add	x16, x16, #0x2a8
    87ac:	br	x17

00000000000087b0 <_PyTime_FromSecondsObject@plt>:
    87b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #688]
    87b8:	add	x16, x16, #0x2b0
    87bc:	br	x17

00000000000087c0 <PyObject_Free@plt>:
    87c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #696]
    87c8:	add	x16, x16, #0x2b8
    87cc:	br	x17

00000000000087d0 <_PyTime_AsMilliseconds@plt>:
    87d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #704]
    87d8:	add	x16, x16, #0x2c0
    87dc:	br	x17

00000000000087e0 <PyLong_AsVoidPtr@plt>:
    87e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #712]
    87e8:	add	x16, x16, #0x2c8
    87ec:	br	x17

00000000000087f0 <PyLong_FromSsize_t@plt>:
    87f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #720]
    87f8:	add	x16, x16, #0x2d0
    87fc:	br	x17

0000000000008800 <PyFloat_FromDouble@plt>:
    8800:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #728]
    8808:	add	x16, x16, #0x2d8
    880c:	br	x17

0000000000008810 <_PyArg_Parse_SizeT@plt>:
    8810:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #736]
    8818:	add	x16, x16, #0x2e0
    881c:	br	x17

0000000000008820 <PyCapsule_Import@plt>:
    8820:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #744]
    8828:	add	x16, x16, #0x2e8
    882c:	br	x17

0000000000008830 <PyType_Ready@plt>:
    8830:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #752]
    8838:	add	x16, x16, #0x2f0
    883c:	br	x17

0000000000008840 <PyLong_FromLong@plt>:
    8840:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #760]
    8848:	add	x16, x16, #0x2f8
    884c:	br	x17

0000000000008850 <PyLong_AsSsize_t@plt>:
    8850:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #768]
    8858:	add	x16, x16, #0x300
    885c:	br	x17

0000000000008860 <PyOS_string_to_double@plt>:
    8860:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #776]
    8868:	add	x16, x16, #0x308
    886c:	br	x17

0000000000008870 <PyBuffer_FillInfo@plt>:
    8870:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #784]
    8878:	add	x16, x16, #0x310
    887c:	br	x17

0000000000008880 <PyLong_FromVoidPtr@plt>:
    8880:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #792]
    8888:	add	x16, x16, #0x318
    888c:	br	x17

0000000000008890 <PyUnicode_FromUnicode@plt>:
    8890:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #800]
    8898:	add	x16, x16, #0x320
    889c:	br	x17

00000000000088a0 <PyErr_NewException@plt>:
    88a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #808]
    88a8:	add	x16, x16, #0x328
    88ac:	br	x17

00000000000088b0 <PyCodec_IncrementalDecoder@plt>:
    88b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #816]
    88b8:	add	x16, x16, #0x330
    88bc:	br	x17

00000000000088c0 <PyErr_Clear@plt>:
    88c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #824]
    88c8:	add	x16, x16, #0x338
    88cc:	br	x17

00000000000088d0 <PyBool_FromLong@plt>:
    88d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #832]
    88d8:	add	x16, x16, #0x340
    88dc:	br	x17

00000000000088e0 <Py_AddPendingCall@plt>:
    88e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #840]
    88e8:	add	x16, x16, #0x348
    88ec:	br	x17

00000000000088f0 <PyLong_AsUnsignedLongMask@plt>:
    88f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #848]
    88f8:	add	x16, x16, #0x350
    88fc:	br	x17

0000000000008900 <__gmon_start__@plt>:
    8900:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #856]
    8908:	add	x16, x16, #0x358
    890c:	br	x17

0000000000008910 <PyUnicode_AsUnicode@plt>:
    8910:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #864]
    8918:	add	x16, x16, #0x360
    891c:	br	x17

0000000000008920 <PyTuple_New@plt>:
    8920:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #872]
    8928:	add	x16, x16, #0x368
    892c:	br	x17

0000000000008930 <PyLong_AsSize_t@plt>:
    8930:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #880]
    8938:	add	x16, x16, #0x370
    893c:	br	x17

0000000000008940 <PyThreadState_Get@plt>:
    8940:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #888]
    8948:	add	x16, x16, #0x378
    894c:	br	x17

0000000000008950 <PyLong_AsLongAndOverflow@plt>:
    8950:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #896]
    8958:	add	x16, x16, #0x380
    895c:	br	x17

0000000000008960 <PyArg_UnpackTuple@plt>:
    8960:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #904]
    8968:	add	x16, x16, #0x388
    896c:	br	x17

0000000000008970 <PyBytes_FromString@plt>:
    8970:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #912]
    8978:	add	x16, x16, #0x390
    897c:	br	x17

0000000000008980 <PyErr_Occurred@plt>:
    8980:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #920]
    8988:	add	x16, x16, #0x398
    898c:	br	x17

0000000000008990 <PyModule_Create2@plt>:
    8990:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #928]
    8998:	add	x16, x16, #0x3a0
    899c:	br	x17

00000000000089a0 <PyLong_AsLong@plt>:
    89a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #936]
    89a8:	add	x16, x16, #0x3a8
    89ac:	br	x17

00000000000089b0 <PyImport_ImportModule@plt>:
    89b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #944]
    89b8:	add	x16, x16, #0x3b0
    89bc:	br	x17

00000000000089c0 <_PyErr_WriteUnraisableMsg@plt>:
    89c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #952]
    89c8:	add	x16, x16, #0x3b8
    89cc:	br	x17

00000000000089d0 <_PyDict_GetItem_KnownHash@plt>:
    89d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #960]
    89d8:	add	x16, x16, #0x3c0
    89dc:	br	x17

00000000000089e0 <PyObject_CallObject@plt>:
    89e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #968]
    89e8:	add	x16, x16, #0x3c8
    89ec:	br	x17

00000000000089f0 <PyState_FindModule@plt>:
    89f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #976]
    89f8:	add	x16, x16, #0x3d0
    89fc:	br	x17

0000000000008a00 <PyUnicode_AsUCS4@plt>:
    8a00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #984]
    8a08:	add	x16, x16, #0x3d8
    8a0c:	br	x17

0000000000008a10 <PyMem_RawFree@plt>:
    8a10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #992]
    8a18:	add	x16, x16, #0x3e0
    8a1c:	br	x17

0000000000008a20 <PyList_Reverse@plt>:
    8a20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #1000]
    8a28:	add	x16, x16, #0x3e8
    8a2c:	br	x17

0000000000008a30 <_PyUnicode_EqualToASCIIString@plt>:
    8a30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #1008]
    8a38:	add	x16, x16, #0x3f0
    8a3c:	br	x17

0000000000008a40 <_PyTime_AsTimespec@plt>:
    8a40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #1016]
    8a48:	add	x16, x16, #0x3f8
    8a4c:	br	x17

0000000000008a50 <PyCapsule_SetDestructor@plt>:
    8a50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #1024]
    8a58:	add	x16, x16, #0x400
    8a5c:	br	x17

0000000000008a60 <PyCodec_IncrementalEncoder@plt>:
    8a60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #1032]
    8a68:	add	x16, x16, #0x408
    8a6c:	br	x17

0000000000008a70 <_PyArg_ParseTuple_SizeT@plt>:
    8a70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #1040]
    8a78:	add	x16, x16, #0x410
    8a7c:	br	x17

0000000000008a80 <_Py_CheckFunctionResult@plt>:
    8a80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #1048]
    8a88:	add	x16, x16, #0x418
    8a8c:	br	x17

0000000000008a90 <PyUnicode_CompareWithASCIIString@plt>:
    8a90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #1056]
    8a98:	add	x16, x16, #0x420
    8a9c:	br	x17

0000000000008aa0 <free@plt>:
    8aa0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #1064]
    8aa8:	add	x16, x16, #0x428
    8aac:	br	x17

0000000000008ab0 <Py_FatalError@plt>:
    8ab0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #1072]
    8ab8:	add	x16, x16, #0x430
    8abc:	br	x17

0000000000008ac0 <PyMarshal_WriteObjectToFile@plt>:
    8ac0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #1080]
    8ac8:	add	x16, x16, #0x438
    8acc:	br	x17

0000000000008ad0 <PyThread_allocate_lock@plt>:
    8ad0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #1088]
    8ad8:	add	x16, x16, #0x440
    8adc:	br	x17

0000000000008ae0 <PyObject_Realloc@plt>:
    8ae0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #1096]
    8ae8:	add	x16, x16, #0x448
    8aec:	br	x17

0000000000008af0 <PyUnicode_EncodeDecimal@plt>:
    8af0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #1104]
    8af8:	add	x16, x16, #0x450
    8afc:	br	x17

0000000000008b00 <PyObject_Hash@plt>:
    8b00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #1112]
    8b08:	add	x16, x16, #0x458
    8b0c:	br	x17

0000000000008b10 <_PyTime_ObjectToTimespec@plt>:
    8b10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #1120]
    8b18:	add	x16, x16, #0x460
    8b1c:	br	x17

0000000000008b20 <_PyTraceMalloc_GetTraceback@plt>:
    8b20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b24:	ldr	x17, [x16, #1128]
    8b28:	add	x16, x16, #0x468
    8b2c:	br	x17

0000000000008b30 <PyUnicode_Compare@plt>:
    8b30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b34:	ldr	x17, [x16, #1136]
    8b38:	add	x16, x16, #0x470
    8b3c:	br	x17

0000000000008b40 <Py_IncRef@plt>:
    8b40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b44:	ldr	x17, [x16, #1144]
    8b48:	add	x16, x16, #0x478
    8b4c:	br	x17

0000000000008b50 <PyCapsule_GetContext@plt>:
    8b50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b54:	ldr	x17, [x16, #1152]
    8b58:	add	x16, x16, #0x480
    8b5c:	br	x17

0000000000008b60 <PyNumber_Rshift@plt>:
    8b60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b64:	ldr	x17, [x16, #1160]
    8b68:	add	x16, x16, #0x488
    8b6c:	br	x17

0000000000008b70 <PyMem_GetAllocator@plt>:
    8b70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b74:	ldr	x17, [x16, #1168]
    8b78:	add	x16, x16, #0x490
    8b7c:	br	x17

0000000000008b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    8b80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b84:	ldr	x17, [x16, #1176]
    8b88:	add	x16, x16, #0x498
    8b8c:	br	x17

0000000000008b90 <PyThread_release_lock@plt>:
    8b90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8b94:	ldr	x17, [x16, #1184]
    8b98:	add	x16, x16, #0x4a0
    8b9c:	br	x17

0000000000008ba0 <PyThread_tss_alloc@plt>:
    8ba0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ba4:	ldr	x17, [x16, #1192]
    8ba8:	add	x16, x16, #0x4a8
    8bac:	br	x17

0000000000008bb0 <PyVectorcall_Call@plt>:
    8bb0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8bb4:	ldr	x17, [x16, #1200]
    8bb8:	add	x16, x16, #0x4b0
    8bbc:	br	x17

0000000000008bc0 <_PyTime_ObjectToTime_t@plt>:
    8bc0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8bc4:	ldr	x17, [x16, #1208]
    8bc8:	add	x16, x16, #0x4b8
    8bcc:	br	x17

0000000000008bd0 <PyLong_AsDouble@plt>:
    8bd0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8bd4:	ldr	x17, [x16, #1216]
    8bd8:	add	x16, x16, #0x4c0
    8bdc:	br	x17

0000000000008be0 <Py_DecRef@plt>:
    8be0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8be4:	ldr	x17, [x16, #1224]
    8be8:	add	x16, x16, #0x4c8
    8bec:	br	x17

0000000000008bf0 <PyUnicode_FromKindAndData@plt>:
    8bf0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8bf4:	ldr	x17, [x16, #1232]
    8bf8:	add	x16, x16, #0x4d0
    8bfc:	br	x17

0000000000008c00 <PyThread_tss_set@plt>:
    8c00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c04:	ldr	x17, [x16, #1240]
    8c08:	add	x16, x16, #0x4d8
    8c0c:	br	x17

0000000000008c10 <_PyTraceMalloc_NewReference@plt>:
    8c10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c14:	ldr	x17, [x16, #1248]
    8c18:	add	x16, x16, #0x4e0
    8c1c:	br	x17

0000000000008c20 <PyDict_New@plt>:
    8c20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c24:	ldr	x17, [x16, #1256]
    8c28:	add	x16, x16, #0x4e8
    8c2c:	br	x17

0000000000008c30 <PyCallable_Check@plt>:
    8c30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c34:	ldr	x17, [x16, #1264]
    8c38:	add	x16, x16, #0x4f0
    8c3c:	br	x17

0000000000008c40 <PyObject_GetBuffer@plt>:
    8c40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c44:	ldr	x17, [x16, #1272]
    8c48:	add	x16, x16, #0x4f8
    8c4c:	br	x17

0000000000008c50 <PyLong_AsUnsignedLong@plt>:
    8c50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c54:	ldr	x17, [x16, #1280]
    8c58:	add	x16, x16, #0x500
    8c5c:	br	x17

0000000000008c60 <PyDict_Next@plt>:
    8c60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c64:	ldr	x17, [x16, #1288]
    8c68:	add	x16, x16, #0x508
    8c6c:	br	x17

0000000000008c70 <PyUnicode_AsWideCharString@plt>:
    8c70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c74:	ldr	x17, [x16, #1296]
    8c78:	add	x16, x16, #0x510
    8c7c:	br	x17

0000000000008c80 <PyLong_FromUnsignedLong@plt>:
    8c80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c84:	ldr	x17, [x16, #1304]
    8c88:	add	x16, x16, #0x518
    8c8c:	br	x17

0000000000008c90 <PyUnicode_Fill@plt>:
    8c90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8c94:	ldr	x17, [x16, #1312]
    8c98:	add	x16, x16, #0x520
    8c9c:	br	x17

0000000000008ca0 <PyUnicode_AsUTF8@plt>:
    8ca0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ca4:	ldr	x17, [x16, #1320]
    8ca8:	add	x16, x16, #0x528
    8cac:	br	x17

0000000000008cb0 <strcpy@plt>:
    8cb0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8cb4:	ldr	x17, [x16, #1328]
    8cb8:	add	x16, x16, #0x530
    8cbc:	br	x17

0000000000008cc0 <PyBuffer_FromContiguous@plt>:
    8cc0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8cc4:	ldr	x17, [x16, #1336]
    8cc8:	add	x16, x16, #0x538
    8ccc:	br	x17

0000000000008cd0 <fopen64@plt>:
    8cd0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8cd4:	ldr	x17, [x16, #1344]
    8cd8:	add	x16, x16, #0x540
    8cdc:	br	x17

0000000000008ce0 <PyErr_Fetch@plt>:
    8ce0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ce4:	ldr	x17, [x16, #1352]
    8ce8:	add	x16, x16, #0x548
    8cec:	br	x17

0000000000008cf0 <_PyObject_New@plt>:
    8cf0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8cf4:	ldr	x17, [x16, #1360]
    8cf8:	add	x16, x16, #0x550
    8cfc:	br	x17

0000000000008d00 <PyCapsule_SetPointer@plt>:
    8d00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d04:	ldr	x17, [x16, #1368]
    8d08:	add	x16, x16, #0x558
    8d0c:	br	x17

0000000000008d10 <PyUnicode_FromString@plt>:
    8d10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d14:	ldr	x17, [x16, #1376]
    8d18:	add	x16, x16, #0x560
    8d1c:	br	x17

0000000000008d20 <PyState_AddModule@plt>:
    8d20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d24:	ldr	x17, [x16, #1384]
    8d28:	add	x16, x16, #0x568
    8d2c:	br	x17

0000000000008d30 <PyMem_RawCalloc@plt>:
    8d30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d34:	ldr	x17, [x16, #1392]
    8d38:	add	x16, x16, #0x570
    8d3c:	br	x17

0000000000008d40 <PyMarshal_ReadObjectFromFile@plt>:
    8d40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d44:	ldr	x17, [x16, #1400]
    8d48:	add	x16, x16, #0x578
    8d4c:	br	x17

0000000000008d50 <PyEval_SaveThread@plt>:
    8d50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d54:	ldr	x17, [x16, #1408]
    8d58:	add	x16, x16, #0x580
    8d5c:	br	x17

0000000000008d60 <PyModule_AddObject@plt>:
    8d60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d64:	ldr	x17, [x16, #1416]
    8d68:	add	x16, x16, #0x588
    8d6c:	br	x17

0000000000008d70 <_PyTime_AsMicroseconds@plt>:
    8d70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d74:	ldr	x17, [x16, #1424]
    8d78:	add	x16, x16, #0x590
    8d7c:	br	x17

0000000000008d80 <PyDict_SetItem@plt>:
    8d80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d84:	ldr	x17, [x16, #1432]
    8d88:	add	x16, x16, #0x598
    8d8c:	br	x17

0000000000008d90 <PyThread_tss_delete@plt>:
    8d90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8d94:	ldr	x17, [x16, #1440]
    8d98:	add	x16, x16, #0x5a0
    8d9c:	br	x17

0000000000008da0 <_PyContext_NewHamtForTests@plt>:
    8da0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8da4:	ldr	x17, [x16, #1448]
    8da8:	add	x16, x16, #0x5a8
    8dac:	br	x17

0000000000008db0 <PyObject_Repr@plt>:
    8db0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8db4:	ldr	x17, [x16, #1456]
    8db8:	add	x16, x16, #0x5b0
    8dbc:	br	x17

0000000000008dc0 <PyMapping_Values@plt>:
    8dc0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8dc4:	ldr	x17, [x16, #1464]
    8dc8:	add	x16, x16, #0x5b8
    8dcc:	br	x17

0000000000008dd0 <_PyTime_AsTimeval@plt>:
    8dd0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8dd4:	ldr	x17, [x16, #1472]
    8dd8:	add	x16, x16, #0x5c0
    8ddc:	br	x17

0000000000008de0 <_PyMem_GetCurrentAllocatorName@plt>:
    8de0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8de4:	ldr	x17, [x16, #1480]
    8de8:	add	x16, x16, #0x5c8
    8dec:	br	x17

0000000000008df0 <PyLong_AsLongLong@plt>:
    8df0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8df4:	ldr	x17, [x16, #1488]
    8df8:	add	x16, x16, #0x5d0
    8dfc:	br	x17

0000000000008e00 <_PyTime_FromSeconds@plt>:
    8e00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e04:	ldr	x17, [x16, #1496]
    8e08:	add	x16, x16, #0x5d8
    8e0c:	br	x17

0000000000008e10 <PyCapsule_New@plt>:
    8e10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e14:	ldr	x17, [x16, #1504]
    8e18:	add	x16, x16, #0x5e0
    8e1c:	br	x17

0000000000008e20 <PyType_IsSubtype@plt>:
    8e20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e24:	ldr	x17, [x16, #1512]
    8e28:	add	x16, x16, #0x5e8
    8e2c:	br	x17

0000000000008e30 <PyErr_Display@plt>:
    8e30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e34:	ldr	x17, [x16, #1520]
    8e38:	add	x16, x16, #0x5f0
    8e3c:	br	x17

0000000000008e40 <PyStructSequence_NewType@plt>:
    8e40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e44:	ldr	x17, [x16, #1528]
    8e48:	add	x16, x16, #0x5f8
    8e4c:	br	x17

0000000000008e50 <PyUnicode_Decode@plt>:
    8e50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e54:	ldr	x17, [x16, #1536]
    8e58:	add	x16, x16, #0x600
    8e5c:	br	x17

0000000000008e60 <PyErr_Format@plt>:
    8e60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e64:	ldr	x17, [x16, #1544]
    8e68:	add	x16, x16, #0x608
    8e6c:	br	x17

0000000000008e70 <PyCapsule_GetPointer@plt>:
    8e70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e74:	ldr	x17, [x16, #1552]
    8e78:	add	x16, x16, #0x610
    8e7c:	br	x17

0000000000008e80 <_PyTime_FromNanosecondsObject@plt>:
    8e80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e84:	ldr	x17, [x16, #1560]
    8e88:	add	x16, x16, #0x618
    8e8c:	br	x17

0000000000008e90 <PyComplex_FromCComplex@plt>:
    8e90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8e94:	ldr	x17, [x16, #1568]
    8e98:	add	x16, x16, #0x620
    8e9c:	br	x17

0000000000008ea0 <_Py_BuildValue_SizeT@plt>:
    8ea0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ea4:	ldr	x17, [x16, #1576]
    8ea8:	add	x16, x16, #0x628
    8eac:	br	x17

0000000000008eb0 <PyUnicode_FromStringAndSize@plt>:
    8eb0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8eb4:	ldr	x17, [x16, #1584]
    8eb8:	add	x16, x16, #0x630
    8ebc:	br	x17

0000000000008ec0 <PyCapsule_GetDestructor@plt>:
    8ec0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ec4:	ldr	x17, [x16, #1592]
    8ec8:	add	x16, x16, #0x638
    8ecc:	br	x17

0000000000008ed0 <PyRun_SimpleStringFlags@plt>:
    8ed0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ed4:	ldr	x17, [x16, #1600]
    8ed8:	add	x16, x16, #0x640
    8edc:	br	x17

0000000000008ee0 <PyTraceBack_Print@plt>:
    8ee0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ee4:	ldr	x17, [x16, #1608]
    8ee8:	add	x16, x16, #0x648
    8eec:	br	x17

0000000000008ef0 <PyLong_FromLongLong@plt>:
    8ef0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ef4:	ldr	x17, [x16, #1616]
    8ef8:	add	x16, x16, #0x650
    8efc:	br	x17

0000000000008f00 <_PyObject_MakeTpCall@plt>:
    8f00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f04:	ldr	x17, [x16, #1624]
    8f08:	add	x16, x16, #0x658
    8f0c:	br	x17

0000000000008f10 <PyThread_tss_get@plt>:
    8f10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f14:	ldr	x17, [x16, #1632]
    8f18:	add	x16, x16, #0x660
    8f1c:	br	x17

0000000000008f20 <PyMem_Calloc@plt>:
    8f20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f24:	ldr	x17, [x16, #1640]
    8f28:	add	x16, x16, #0x668
    8f2c:	br	x17

0000000000008f30 <printf@plt>:
    8f30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f34:	ldr	x17, [x16, #1648]
    8f38:	add	x16, x16, #0x670
    8f3c:	br	x17

0000000000008f40 <__errno_location@plt>:
    8f40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f44:	ldr	x17, [x16, #1656]
    8f48:	add	x16, x16, #0x678
    8f4c:	br	x17

0000000000008f50 <PyType_FromSpecWithBases@plt>:
    8f50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f54:	ldr	x17, [x16, #1664]
    8f58:	add	x16, x16, #0x680
    8f5c:	br	x17

0000000000008f60 <PyMarshal_ReadShortFromFile@plt>:
    8f60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f64:	ldr	x17, [x16, #1672]
    8f68:	add	x16, x16, #0x688
    8f6c:	br	x17

0000000000008f70 <PyEval_InitThreads@plt>:
    8f70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f74:	ldr	x17, [x16, #1680]
    8f78:	add	x16, x16, #0x690
    8f7c:	br	x17

0000000000008f80 <PyCapsule_SetContext@plt>:
    8f80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f84:	ldr	x17, [x16, #1688]
    8f88:	add	x16, x16, #0x698
    8f8c:	br	x17

0000000000008f90 <PyLong_FromString@plt>:
    8f90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8f94:	ldr	x17, [x16, #1696]
    8f98:	add	x16, x16, #0x6a0
    8f9c:	br	x17

0000000000008fa0 <PyErr_SetExcInfo@plt>:
    8fa0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8fa4:	ldr	x17, [x16, #1704]
    8fa8:	add	x16, x16, #0x6a8
    8fac:	br	x17

0000000000008fb0 <PyUnicode_FindChar@plt>:
    8fb0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8fb4:	ldr	x17, [x16, #1712]
    8fb8:	add	x16, x16, #0x6b0
    8fbc:	br	x17

0000000000008fc0 <PyMem_Malloc@plt>:
    8fc0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8fc4:	ldr	x17, [x16, #1720]
    8fc8:	add	x16, x16, #0x6b8
    8fcc:	br	x17

0000000000008fd0 <PyThreadState_Swap@plt>:
    8fd0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8fd4:	ldr	x17, [x16, #1728]
    8fd8:	add	x16, x16, #0x6c0
    8fdc:	br	x17

0000000000008fe0 <PyNumber_Subtract@plt>:
    8fe0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8fe4:	ldr	x17, [x16, #1736]
    8fe8:	add	x16, x16, #0x6c8
    8fec:	br	x17

0000000000008ff0 <PyType_FromSpec@plt>:
    8ff0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    8ff4:	ldr	x17, [x16, #1744]
    8ff8:	add	x16, x16, #0x6d0
    8ffc:	br	x17

0000000000009000 <_PyLong_FromTime_t@plt>:
    9000:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9004:	ldr	x17, [x16, #1752]
    9008:	add	x16, x16, #0x6d8
    900c:	br	x17

0000000000009010 <PyUnicode_New@plt>:
    9010:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9014:	ldr	x17, [x16, #1760]
    9018:	add	x16, x16, #0x6e0
    901c:	br	x17

0000000000009020 <PyUnicode_TransformDecimalToASCII@plt>:
    9020:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9024:	ldr	x17, [x16, #1768]
    9028:	add	x16, x16, #0x6e8
    902c:	br	x17

0000000000009030 <PyThread_free_lock@plt>:
    9030:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9034:	ldr	x17, [x16, #1776]
    9038:	add	x16, x16, #0x6f0
    903c:	br	x17

0000000000009040 <PyTuple_Pack@plt>:
    9040:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9044:	ldr	x17, [x16, #1784]
    9048:	add	x16, x16, #0x6f8
    904c:	br	x17

0000000000009050 <PyMemoryView_FromBuffer@plt>:
    9050:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9054:	ldr	x17, [x16, #1792]
    9058:	add	x16, x16, #0x700
    905c:	br	x17

0000000000009060 <PyCode_NewEmpty@plt>:
    9060:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9064:	ldr	x17, [x16, #1800]
    9068:	add	x16, x16, #0x708
    906c:	br	x17

0000000000009070 <PyObject_GC_UnTrack@plt>:
    9070:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9074:	ldr	x17, [x16, #1808]
    9078:	add	x16, x16, #0x710
    907c:	br	x17

0000000000009080 <PyErr_WriteUnraisable@plt>:
    9080:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9084:	ldr	x17, [x16, #1816]
    9088:	add	x16, x16, #0x718
    908c:	br	x17

0000000000009090 <PyMem_RawRealloc@plt>:
    9090:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    9094:	ldr	x17, [x16, #1824]
    9098:	add	x16, x16, #0x720
    909c:	br	x17

00000000000090a0 <PyObject_Calloc@plt>:
    90a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    90a4:	ldr	x17, [x16, #1832]
    90a8:	add	x16, x16, #0x728
    90ac:	br	x17

Disassembly of section .text:

00000000000090b0 <MyList_dealloc@@Base-0xd4>:
    90b0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    90b4:	ldr	x0, [x0, #3992]
    90b8:	cbz	x0, 90c0 <PyObject_Calloc@plt+0x20>
    90bc:	b	8900 <__gmon_start__@plt>
    90c0:	ret
    90c4:	nop
    90c8:	adrp	x0, 2b000 <PyInit__testcapi@@Base+0x21e44>
    90cc:	add	x0, x0, #0xdb8
    90d0:	adrp	x1, 2b000 <PyInit__testcapi@@Base+0x21e44>
    90d4:	add	x1, x1, #0xdb8
    90d8:	cmp	x1, x0
    90dc:	b.eq	90f4 <PyObject_Calloc@plt+0x54>  // b.none
    90e0:	adrp	x1, 27000 <PyInit__testcapi@@Base+0x1de44>
    90e4:	ldr	x1, [x1, #3856]
    90e8:	cbz	x1, 90f4 <PyObject_Calloc@plt+0x54>
    90ec:	mov	x16, x1
    90f0:	br	x16
    90f4:	ret
    90f8:	adrp	x0, 2b000 <PyInit__testcapi@@Base+0x21e44>
    90fc:	add	x0, x0, #0xdb8
    9100:	adrp	x1, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9104:	add	x1, x1, #0xdb8
    9108:	sub	x1, x1, x0
    910c:	lsr	x2, x1, #63
    9110:	add	x1, x2, x1, asr #3
    9114:	cmp	xzr, x1, asr #1
    9118:	asr	x1, x1, #1
    911c:	b.eq	9134 <PyObject_Calloc@plt+0x94>  // b.none
    9120:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
    9124:	ldr	x2, [x2, #4056]
    9128:	cbz	x2, 9134 <PyObject_Calloc@plt+0x94>
    912c:	mov	x16, x2
    9130:	br	x16
    9134:	ret
    9138:	stp	x29, x30, [sp, #-32]!
    913c:	mov	x29, sp
    9140:	str	x19, [sp, #16]
    9144:	adrp	x19, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9148:	ldrb	w0, [x19, #3512]
    914c:	cbnz	w0, 9174 <PyObject_Calloc@plt+0xd4>
    9150:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9154:	ldr	x0, [x0, #3888]
    9158:	cbz	x0, 9168 <PyObject_Calloc@plt+0xc8>
    915c:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9160:	ldr	x0, [x0, #1840]
    9164:	bl	84c0 <__cxa_finalize@plt>
    9168:	bl	90c8 <PyObject_Calloc@plt+0x28>
    916c:	mov	w0, #0x1                   	// #1
    9170:	strb	w0, [x19, #3512]
    9174:	ldr	x19, [sp, #16]
    9178:	ldp	x29, x30, [sp], #32
    917c:	ret
    9180:	b	90f8 <PyObject_Calloc@plt+0x58>

0000000000009184 <MyList_dealloc@@Base>:
    9184:	stp	x29, x30, [sp, #-16]!
    9188:	mov	x29, sp
    918c:	ldr	w8, [x0, #40]
    9190:	cbnz	w8, 91b0 <MyList_dealloc@@Base+0x2c>
    9194:	mov	w8, #0x1                   	// #1
    9198:	str	w8, [x0, #40]
    919c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    91a0:	ldr	x8, [x8, #4064]
    91a4:	ldr	x1, [x8, #48]
    91a8:	ldp	x29, x30, [sp], #16
    91ac:	br	x1
    91b0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    91b4:	add	x0, x0, #0x75e
    91b8:	bl	8ab0 <Py_FatalError@plt>

00000000000091bc <PyInit__testcapi@@Base>:
    91bc:	stp	x29, x30, [sp, #-48]!
    91c0:	str	x21, [sp, #16]
    91c4:	stp	x20, x19, [sp, #32]
    91c8:	mov	x29, sp
    91cc:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    91d0:	add	x0, x0, #0x830
    91d4:	mov	w1, #0x3f5                 	// #1013
    91d8:	bl	8990 <PyModule_Create2@plt>
    91dc:	mov	x19, x0
    91e0:	cbz	x0, 98a4 <PyInit__testcapi@@Base+0x6e8>
    91e4:	adrp	x20, 2a000 <PyInit__testcapi@@Base+0x20e44>
    91e8:	add	x20, x20, #0x8a0
    91ec:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    91f0:	ldr	x8, [x8, #4008]
    91f4:	ldr	x9, [x20, #408]
    91f8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    91fc:	add	x2, x20, #0x198
    9200:	str	x8, [x20]
    9204:	str	x8, [x20, #416]
    9208:	add	x8, x9, #0x1
    920c:	add	x1, x1, #0x780
    9210:	mov	x0, x19
    9214:	str	x8, [x20, #408]
    9218:	bl	8d60 <PyModule_AddObject@plt>
    921c:	add	x0, x20, #0x338
    9220:	bl	8830 <PyType_Ready@plt>
    9224:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9228:	adrp	x20, 2a000 <PyInit__testcapi@@Base+0x20e44>
    922c:	add	x20, x20, #0xbd8
    9230:	ldr	x8, [x20]
    9234:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9238:	add	x1, x1, #0x798
    923c:	mov	x0, x19
    9240:	add	x8, x8, #0x1
    9244:	mov	x2, x20
    9248:	str	x8, [x20]
    924c:	bl	8d60 <PyModule_AddObject@plt>
    9250:	add	x0, x20, #0x1a0
    9254:	bl	8830 <PyType_Ready@plt>
    9258:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    925c:	adrp	x20, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9260:	add	x20, x20, #0xd78
    9264:	ldr	x8, [x20]
    9268:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    926c:	add	x1, x1, #0x7a3
    9270:	mov	x0, x19
    9274:	add	x8, x8, #0x1
    9278:	mov	x2, x20
    927c:	str	x8, [x20]
    9280:	bl	8d60 <PyModule_AddObject@plt>
    9284:	add	x0, x20, #0x1a0
    9288:	bl	8830 <PyType_Ready@plt>
    928c:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9290:	adrp	x20, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9294:	add	x20, x20, #0xf18
    9298:	ldr	x8, [x20]
    929c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    92a0:	add	x1, x1, #0x7ac
    92a4:	mov	x0, x19
    92a8:	add	x8, x8, #0x1
    92ac:	mov	x2, x20
    92b0:	str	x8, [x20]
    92b4:	bl	8d60 <PyModule_AddObject@plt>
    92b8:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    92bc:	ldr	x8, [x8, #4064]
    92c0:	add	x0, x20, #0x1a0
    92c4:	str	x8, [x20, #672]
    92c8:	bl	8830 <PyType_Ready@plt>
    92cc:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    92d0:	adrp	x20, 2b000 <PyInit__testcapi@@Base+0x21e44>
    92d4:	add	x20, x20, #0xb8
    92d8:	ldr	x8, [x20]
    92dc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    92e0:	add	x1, x1, #0x7b6
    92e4:	mov	x0, x19
    92e8:	add	x8, x8, #0x1
    92ec:	mov	x2, x20
    92f0:	str	x8, [x20]
    92f4:	bl	8d60 <PyModule_AddObject@plt>
    92f8:	add	x0, x20, #0x1a0
    92fc:	str	xzr, [x20, #408]
    9300:	bl	8830 <PyType_Ready@plt>
    9304:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9308:	adrp	x20, 2b000 <PyInit__testcapi@@Base+0x21e44>
    930c:	add	x20, x20, #0x258
    9310:	ldr	x8, [x20]
    9314:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9318:	add	x1, x1, #0x7bd
    931c:	mov	x0, x19
    9320:	add	x8, x8, #0x1
    9324:	mov	x2, x20
    9328:	str	x8, [x20]
    932c:	bl	8d60 <PyModule_AddObject@plt>
    9330:	add	x21, x20, #0x1a0
    9334:	mov	x0, x21
    9338:	str	x20, [x20, #672]
    933c:	bl	8830 <PyType_Ready@plt>
    9340:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9344:	ldr	x8, [x20, #416]
    9348:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    934c:	add	x1, x1, #0x7d2
    9350:	mov	x0, x19
    9354:	add	x8, x8, #0x1
    9358:	mov	x2, x21
    935c:	str	x8, [x20, #416]
    9360:	bl	8d60 <PyModule_AddObject@plt>
    9364:	add	x21, x20, #0x340
    9368:	mov	x0, x21
    936c:	str	x20, [x20, #1088]
    9370:	bl	8830 <PyType_Ready@plt>
    9374:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9378:	ldr	x8, [x20, #832]
    937c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9380:	add	x1, x1, #0x7ea
    9384:	mov	x0, x19
    9388:	add	x8, x8, #0x1
    938c:	mov	x2, x21
    9390:	str	x8, [x20, #832]
    9394:	bl	8d60 <PyModule_AddObject@plt>
    9398:	adrp	x21, 2b000 <PyInit__testcapi@@Base+0x21e44>
    939c:	add	x21, x21, #0x738
    93a0:	mov	x0, x21
    93a4:	str	x20, [x21, #256]
    93a8:	bl	8830 <PyType_Ready@plt>
    93ac:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    93b0:	ldr	x8, [x21]
    93b4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    93b8:	add	x1, x1, #0x801
    93bc:	mov	x0, x19
    93c0:	add	x8, x8, #0x1
    93c4:	mov	x2, x21
    93c8:	str	x8, [x21]
    93cc:	bl	8d60 <PyModule_AddObject@plt>
    93d0:	add	x0, x21, #0x1a0
    93d4:	bl	8830 <PyType_Ready@plt>
    93d8:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    93dc:	adrp	x20, 2b000 <PyInit__testcapi@@Base+0x21e44>
    93e0:	add	x20, x20, #0x8d8
    93e4:	ldr	x8, [x20]
    93e8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    93ec:	add	x1, x1, #0x813
    93f0:	mov	x0, x19
    93f4:	add	x8, x8, #0x1
    93f8:	mov	x2, x20
    93fc:	str	x8, [x20]
    9400:	bl	8d60 <PyModule_AddObject@plt>
    9404:	add	x0, x20, #0x1a0
    9408:	bl	8830 <PyType_Ready@plt>
    940c:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9410:	adrp	x20, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9414:	add	x20, x20, #0xa78
    9418:	ldr	x8, [x20]
    941c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9420:	add	x1, x1, #0x820
    9424:	mov	x0, x19
    9428:	add	x8, x8, #0x1
    942c:	mov	x2, x20
    9430:	str	x8, [x20]
    9434:	bl	8d60 <PyModule_AddObject@plt>
    9438:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    943c:	ldr	x8, [x8, #3936]
    9440:	add	x0, x20, #0x1a0
    9444:	ldr	x8, [x8]
    9448:	str	x8, [x20, #672]
    944c:	bl	8830 <PyType_Ready@plt>
    9450:	tbnz	w0, #31, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9454:	adrp	x2, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9458:	add	x2, x2, #0xc18
    945c:	ldr	x8, [x2]
    9460:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9464:	add	x1, x1, #0x828
    9468:	mov	x0, x19
    946c:	add	x8, x8, #0x1
    9470:	str	x8, [x2]
    9474:	bl	8d60 <PyModule_AddObject@plt>
    9478:	mov	w0, #0xff                  	// #255
    947c:	bl	8840 <PyLong_FromLong@plt>
    9480:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9484:	mov	x2, x0
    9488:	add	x1, x1, #0x84b
    948c:	mov	x0, x19
    9490:	bl	8d60 <PyModule_AddObject@plt>
    9494:	mov	x0, xzr
    9498:	bl	8840 <PyLong_FromLong@plt>
    949c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    94a0:	mov	x2, x0
    94a4:	add	x1, x1, #0x841
    94a8:	mov	x0, x19
    94ac:	bl	8d60 <PyModule_AddObject@plt>
    94b0:	mov	w0, #0xff                  	// #255
    94b4:	bl	8840 <PyLong_FromLong@plt>
    94b8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    94bc:	mov	x2, x0
    94c0:	add	x1, x1, #0x84a
    94c4:	mov	x0, x19
    94c8:	bl	8d60 <PyModule_AddObject@plt>
    94cc:	mov	w0, #0x7fff                	// #32767
    94d0:	bl	8840 <PyLong_FromLong@plt>
    94d4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    94d8:	mov	x2, x0
    94dc:	add	x1, x1, #0x85e
    94e0:	mov	x0, x19
    94e4:	bl	8d60 <PyModule_AddObject@plt>
    94e8:	mov	x0, #0xffffffffffff8000    	// #-32768
    94ec:	bl	8840 <PyLong_FromLong@plt>
    94f0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    94f4:	mov	x2, x0
    94f8:	add	x1, x1, #0x854
    94fc:	mov	x0, x19
    9500:	bl	8d60 <PyModule_AddObject@plt>
    9504:	mov	w0, #0xffff                	// #65535
    9508:	bl	8840 <PyLong_FromLong@plt>
    950c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9510:	mov	x2, x0
    9514:	add	x1, x1, #0x85d
    9518:	mov	x0, x19
    951c:	bl	8d60 <PyModule_AddObject@plt>
    9520:	mov	w0, #0x7fffffff            	// #2147483647
    9524:	bl	8840 <PyLong_FromLong@plt>
    9528:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    952c:	mov	x2, x0
    9530:	add	x1, x1, #0x870
    9534:	mov	x0, x19
    9538:	bl	8d60 <PyModule_AddObject@plt>
    953c:	mov	x0, #0xffffffff80000000    	// #-2147483648
    9540:	bl	8840 <PyLong_FromLong@plt>
    9544:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9548:	mov	x2, x0
    954c:	add	x1, x1, #0x867
    9550:	mov	x0, x19
    9554:	bl	8d60 <PyModule_AddObject@plt>
    9558:	mov	w0, #0xffffffff            	// #-1
    955c:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    9560:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9564:	mov	x2, x0
    9568:	add	x1, x1, #0x86f
    956c:	mov	x0, x19
    9570:	bl	8d60 <PyModule_AddObject@plt>
    9574:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9578:	bl	8840 <PyLong_FromLong@plt>
    957c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9580:	mov	x2, x0
    9584:	add	x1, x1, #0xce8
    9588:	mov	x0, x19
    958c:	bl	8d60 <PyModule_AddObject@plt>
    9590:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    9594:	bl	8840 <PyLong_FromLong@plt>
    9598:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    959c:	mov	x2, x0
    95a0:	add	x1, x1, #0xd07
    95a4:	mov	x0, x19
    95a8:	bl	8d60 <PyModule_AddObject@plt>
    95ac:	mov	x0, #0xffffffffffffffff    	// #-1
    95b0:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    95b4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    95b8:	mov	x2, x0
    95bc:	add	x1, x1, #0x878
    95c0:	mov	x0, x19
    95c4:	bl	8d60 <PyModule_AddObject@plt>
    95c8:	mov	x8, #0xffffe0000000        	// #281474439839744
    95cc:	movk	x8, #0x47ef, lsl #48
    95d0:	fmov	d0, x8
    95d4:	bl	8800 <PyFloat_FromDouble@plt>
    95d8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    95dc:	mov	x2, x0
    95e0:	add	x1, x1, #0x882
    95e4:	mov	x0, x19
    95e8:	bl	8d60 <PyModule_AddObject@plt>
    95ec:	mov	x8, #0x3810000000000000    	// #4039728865751334912
    95f0:	fmov	d0, x8
    95f4:	bl	8800 <PyFloat_FromDouble@plt>
    95f8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    95fc:	mov	x2, x0
    9600:	add	x1, x1, #0x88a
    9604:	mov	x0, x19
    9608:	bl	8d60 <PyModule_AddObject@plt>
    960c:	mov	x8, #0x7fefffffffffffff    	// #9218868437227405311
    9610:	fmov	d0, x8
    9614:	bl	8800 <PyFloat_FromDouble@plt>
    9618:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    961c:	mov	x2, x0
    9620:	add	x1, x1, #0x892
    9624:	mov	x0, x19
    9628:	bl	8d60 <PyModule_AddObject@plt>
    962c:	mov	x8, #0x10000000000000      	// #4503599627370496
    9630:	fmov	d0, x8
    9634:	bl	8800 <PyFloat_FromDouble@plt>
    9638:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    963c:	mov	x2, x0
    9640:	add	x1, x1, #0x89a
    9644:	mov	x0, x19
    9648:	bl	8d60 <PyModule_AddObject@plt>
    964c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9650:	bl	8ef0 <PyLong_FromLongLong@plt>
    9654:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9658:	mov	x2, x0
    965c:	add	x1, x1, #0x8a3
    9660:	mov	x0, x19
    9664:	bl	8d60 <PyModule_AddObject@plt>
    9668:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    966c:	bl	8ef0 <PyLong_FromLongLong@plt>
    9670:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    9674:	mov	x2, x0
    9678:	add	x1, x1, #0x896
    967c:	mov	x0, x19
    9680:	bl	8d60 <PyModule_AddObject@plt>
    9684:	mov	x0, #0xffffffffffffffff    	// #-1
    9688:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    968c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9690:	mov	x2, x0
    9694:	add	x1, x1, #0x8a2
    9698:	mov	x0, x19
    969c:	bl	8d60 <PyModule_AddObject@plt>
    96a0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    96a4:	bl	87f0 <PyLong_FromSsize_t@plt>
    96a8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    96ac:	mov	x2, x0
    96b0:	add	x1, x1, #0x8ad
    96b4:	mov	x0, x19
    96b8:	bl	8d60 <PyModule_AddObject@plt>
    96bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    96c0:	bl	87f0 <PyLong_FromSsize_t@plt>
    96c4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    96c8:	mov	x2, x0
    96cc:	add	x1, x1, #0x8bc
    96d0:	mov	x0, x19
    96d4:	bl	8d60 <PyModule_AddObject@plt>
    96d8:	mov	w0, #0x10                  	// #16
    96dc:	bl	87f0 <PyLong_FromSsize_t@plt>
    96e0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    96e4:	mov	x2, x0
    96e8:	add	x1, x1, #0x8cb
    96ec:	mov	x0, x19
    96f0:	bl	8d60 <PyModule_AddObject@plt>
    96f4:	mov	w0, #0x8                   	// #8
    96f8:	bl	87f0 <PyLong_FromSsize_t@plt>
    96fc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9700:	mov	x2, x0
    9704:	add	x1, x1, #0x8dc
    9708:	mov	x0, x19
    970c:	bl	8d60 <PyModule_AddObject@plt>
    9710:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
    9714:	ldr	x2, [x2, #3912]
    9718:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    971c:	add	x1, x1, #0x8ea
    9720:	mov	x0, x19
    9724:	ldr	x8, [x2]
    9728:	add	x8, x8, #0x1
    972c:	str	x8, [x2]
    9730:	bl	8d60 <PyModule_AddObject@plt>
    9734:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9738:	add	x1, x1, #0x8f9
    973c:	mov	w2, #0x3                   	// #3
    9740:	mov	x0, x19
    9744:	bl	8320 <PyModule_AddIntConstant@plt>
    9748:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
    974c:	ldr	x2, [x2, #4032]
    9750:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9754:	add	x1, x1, #0x90a
    9758:	mov	x0, x19
    975c:	ldr	x8, [x2]
    9760:	add	x8, x8, #0x1
    9764:	str	x8, [x2]
    9768:	bl	8d60 <PyModule_AddObject@plt>
    976c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    9770:	add	x0, x0, #0x918
    9774:	mov	x1, xzr
    9778:	mov	x2, xzr
    977c:	bl	88a0 <PyErr_NewException@plt>
    9780:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9784:	str	x0, [x8, #3552]
    9788:	ldr	x8, [x0]
    978c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
    9790:	mov	x2, x0
    9794:	add	x1, x1, #0xbf
    9798:	add	x8, x8, #0x1
    979c:	str	x8, [x0]
    97a0:	mov	x0, x19
    97a4:	bl	8d60 <PyModule_AddObject@plt>
    97a8:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    97ac:	add	x0, x0, #0x7b0
    97b0:	bl	8ff0 <PyType_FromSpec@plt>
    97b4:	cbz	x0, 98a0 <PyInit__testcapi@@Base+0x6e4>
    97b8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
    97bc:	mov	x2, x0
    97c0:	add	x1, x1, #0x5d5
    97c4:	mov	x0, x19
    97c8:	bl	8d60 <PyModule_AddObject@plt>
    97cc:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    97d0:	add	x0, x0, #0x7d0
    97d4:	bl	8ff0 <PyType_FromSpec@plt>
    97d8:	cbz	x0, 98a0 <PyInit__testcapi@@Base+0x6e4>
    97dc:	mov	x1, x0
    97e0:	mov	w0, #0x1                   	// #1
    97e4:	bl	9040 <PyTuple_Pack@plt>
    97e8:	cbz	x0, 98a0 <PyInit__testcapi@@Base+0x6e4>
    97ec:	mov	x21, x0
    97f0:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    97f4:	add	x0, x0, #0x7f0
    97f8:	mov	x1, x21
    97fc:	bl	8f50 <PyType_FromSpecWithBases@plt>
    9800:	cbz	x0, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9804:	ldr	x8, [x21]
    9808:	mov	x20, x0
    980c:	subs	x8, x8, #0x1
    9810:	str	x8, [x21]
    9814:	b.ne	9820 <PyInit__testcapi@@Base+0x664>  // b.any
    9818:	mov	x0, x21
    981c:	bl	8560 <_Py_Dealloc@plt>
    9820:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
    9824:	add	x1, x1, #0x5ff
    9828:	mov	x0, x19
    982c:	mov	x2, x20
    9830:	bl	8d60 <PyModule_AddObject@plt>
    9834:	mov	w0, #0x1                   	// #1
    9838:	mov	x1, x20
    983c:	bl	9040 <PyTuple_Pack@plt>
    9840:	cbz	x0, 98a0 <PyInit__testcapi@@Base+0x6e4>
    9844:	mov	x20, x0
    9848:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    984c:	add	x0, x0, #0x810
    9850:	mov	x1, x20
    9854:	bl	8f50 <PyType_FromSpecWithBases@plt>
    9858:	cbz	x0, 98a0 <PyInit__testcapi@@Base+0x6e4>
    985c:	ldr	x8, [x20]
    9860:	mov	x21, x0
    9864:	subs	x8, x8, #0x1
    9868:	str	x8, [x20]
    986c:	b.ne	9878 <PyInit__testcapi@@Base+0x6bc>  // b.any
    9870:	mov	x0, x20
    9874:	bl	8560 <_Py_Dealloc@plt>
    9878:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
    987c:	add	x1, x1, #0x622
    9880:	mov	x0, x19
    9884:	mov	x2, x21
    9888:	bl	8d60 <PyModule_AddObject@plt>
    988c:	adrp	x1, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9890:	add	x1, x1, #0x830
    9894:	mov	x0, x19
    9898:	bl	8d20 <PyState_AddModule@plt>
    989c:	b	98a4 <PyInit__testcapi@@Base+0x6e8>
    98a0:	mov	x19, xzr
    98a4:	mov	x0, x19
    98a8:	ldp	x20, x19, [sp, #32]
    98ac:	ldr	x21, [sp, #16]
    98b0:	ldp	x29, x30, [sp], #48
    98b4:	ret
    98b8:	sub	sp, sp, #0x30
    98bc:	stp	x29, x30, [sp, #16]
    98c0:	stp	x20, x19, [sp, #32]
    98c4:	add	x29, sp, #0x10
    98c8:	mov	x0, x1
    98cc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    98d0:	add	x1, x1, #0x62d
    98d4:	add	x2, sp, #0x8
    98d8:	add	x3, sp, #0x4
    98dc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    98e0:	cbz	w0, 994c <PyInit__testcapi@@Base+0x790>
    98e4:	ldrsw	x0, [sp, #4]
    98e8:	bl	8920 <PyTuple_New@plt>
    98ec:	cbz	x0, 994c <PyInit__testcapi@@Base+0x790>
    98f0:	ldr	w8, [sp, #4]
    98f4:	mov	x19, x0
    98f8:	cmp	w8, #0x1
    98fc:	b.lt	9928 <PyInit__testcapi@@Base+0x76c>  // b.tstop
    9900:	mov	w20, #0x3                   	// #3
    9904:	sub	x0, x20, #0x3
    9908:	bl	8840 <PyLong_FromLong@plt>
    990c:	cbz	x0, 9934 <PyInit__testcapi@@Base+0x778>
    9910:	str	x0, [x19, x20, lsl #3]
    9914:	ldrsw	x8, [sp, #4]
    9918:	sub	x9, x20, #0x2
    991c:	add	x20, x20, #0x1
    9920:	cmp	x9, x8
    9924:	b.lt	9904 <PyInit__testcapi@@Base+0x748>  // b.tstop
    9928:	ldr	x0, [sp, #8]
    992c:	mov	x1, x19
    9930:	bl	8580 <PyErr_SetObject@plt>
    9934:	ldr	x8, [x19]
    9938:	subs	x8, x8, #0x1
    993c:	str	x8, [x19]
    9940:	b.ne	994c <PyInit__testcapi@@Base+0x790>  // b.any
    9944:	mov	x0, x19
    9948:	bl	8560 <_Py_Dealloc@plt>
    994c:	ldp	x20, x19, [sp, #32]
    9950:	ldp	x29, x30, [sp, #16]
    9954:	mov	x0, xzr
    9958:	add	sp, sp, #0x30
    995c:	ret
    9960:	stp	x29, x30, [sp, #-16]!
    9964:	mov	x29, sp
    9968:	bl	8570 <PyErr_NoMemory@plt>
    996c:	mov	x0, xzr
    9970:	ldp	x29, x30, [sp], #16
    9974:	ret
    9978:	stp	x29, x30, [sp, #-32]!
    997c:	str	x19, [sp, #16]
    9980:	mov	x29, sp
    9984:	mov	x0, x1
    9988:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    998c:	add	x1, x1, #0x640
    9990:	add	x2, x29, #0x1c
    9994:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9998:	cbz	w0, 99c8 <PyInit__testcapi@@Base+0x80c>
    999c:	ldr	w19, [x29, #28]
    99a0:	bl	8f40 <__errno_location@plt>
    99a4:	str	w19, [x0]
    99a8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    99ac:	ldr	x0, [x0, #4016]
    99b0:	ldr	x8, [x0]
    99b4:	add	x8, x8, #0x1
    99b8:	str	x8, [x0]
    99bc:	ldr	x19, [sp, #16]
    99c0:	ldp	x29, x30, [sp], #32
    99c4:	ret
    99c8:	mov	x0, xzr
    99cc:	ldr	x19, [sp, #16]
    99d0:	ldp	x29, x30, [sp], #32
    99d4:	ret
    99d8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    99dc:	ldr	x0, [x0, #4016]
    99e0:	ldr	x8, [x0]
    99e4:	add	x8, x8, #0x1
    99e8:	str	x8, [x0]
    99ec:	ret
    99f0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    99f4:	ldr	x0, [x0, #4016]
    99f8:	ldr	x8, [x0]
    99fc:	add	x8, x8, #0x1
    9a00:	str	x8, [x0]
    9a04:	ret
    9a08:	stp	x29, x30, [sp, #-32]!
    9a0c:	str	x19, [sp, #16]
    9a10:	mov	x29, sp
    9a14:	adrp	x19, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9a18:	add	x19, x19, #0xdd0
    9a1c:	ldr	x9, [x19, #24]
    9a20:	ldr	w8, [x19]
    9a24:	cbz	x9, 9a54 <PyInit__testcapi@@Base+0x898>
    9a28:	cbnz	w8, 9a74 <PyInit__testcapi@@Base+0x8b8>
    9a2c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    9a30:	ldr	x8, [x8, #4024]
    9a34:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9a38:	add	x1, x1, #0x64c
    9a3c:	ldr	x0, [x8]
    9a40:	bl	8670 <PyErr_SetString@plt>
    9a44:	mov	x0, xzr
    9a48:	ldr	x19, [sp, #16]
    9a4c:	ldp	x29, x30, [sp], #32
    9a50:	ret
    9a54:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    9a58:	add	w8, w8, #0x1
    9a5c:	add	x0, x0, #0x670
    9a60:	mov	w1, wzr
    9a64:	str	w8, [x19]
    9a68:	bl	8820 <PyCapsule_Import@plt>
    9a6c:	str	x0, [x19, #24]
    9a70:	cbz	x0, 9a48 <PyInit__testcapi@@Base+0x88c>
    9a74:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9a78:	ldr	x0, [x0, #4016]
    9a7c:	ldr	x8, [x0]
    9a80:	add	x8, x8, #0x1
    9a84:	str	x8, [x0]
    9a88:	ldr	x19, [sp, #16]
    9a8c:	ldp	x29, x30, [sp], #32
    9a90:	ret
    9a94:	sub	sp, sp, #0x20
    9a98:	stp	x29, x30, [sp, #16]
    9a9c:	add	x29, sp, #0x10
    9aa0:	mov	x0, x1
    9aa4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9aa8:	add	x1, x1, #0x687
    9aac:	add	x2, sp, #0x8
    9ab0:	add	x3, sp, #0x4
    9ab4:	str	wzr, [sp, #4]
    9ab8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9abc:	cbz	w0, 9af0 <PyInit__testcapi@@Base+0x934>
    9ac0:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9ac4:	ldr	x8, [sp, #8]
    9ac8:	ldr	x9, [x9, #3560]
    9acc:	ldr	w10, [sp, #4]
    9ad0:	ldr	x0, [x8, #8]
    9ad4:	ldr	x1, [x9]
    9ad8:	cbz	w10, 9b00 <PyInit__testcapi@@Base+0x944>
    9adc:	cmp	x0, x1
    9ae0:	b.eq	9b10 <PyInit__testcapi@@Base+0x954>  // b.none
    9ae4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9ae8:	ldr	x0, [x0, #3984]
    9aec:	b	9b18 <PyInit__testcapi@@Base+0x95c>
    9af0:	mov	x0, xzr
    9af4:	ldp	x29, x30, [sp, #16]
    9af8:	add	sp, sp, #0x20
    9afc:	ret
    9b00:	cmp	x0, x1
    9b04:	b.eq	9b10 <PyInit__testcapi@@Base+0x954>  // b.none
    9b08:	bl	8e20 <PyType_IsSubtype@plt>
    9b0c:	cbz	w0, 9ae4 <PyInit__testcapi@@Base+0x928>
    9b10:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9b14:	ldr	x0, [x0, #4032]
    9b18:	ldr	x8, [x0]
    9b1c:	add	x8, x8, #0x1
    9b20:	str	x8, [x0]
    9b24:	ldp	x29, x30, [sp, #16]
    9b28:	add	sp, sp, #0x20
    9b2c:	ret
    9b30:	sub	sp, sp, #0x20
    9b34:	stp	x29, x30, [sp, #16]
    9b38:	add	x29, sp, #0x10
    9b3c:	mov	x0, x1
    9b40:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9b44:	add	x1, x1, #0x687
    9b48:	add	x2, sp, #0x8
    9b4c:	add	x3, sp, #0x4
    9b50:	str	wzr, [sp, #4]
    9b54:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9b58:	cbz	w0, 9b8c <PyInit__testcapi@@Base+0x9d0>
    9b5c:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9b60:	ldr	x8, [sp, #8]
    9b64:	ldr	x9, [x9, #3560]
    9b68:	ldr	w10, [sp, #4]
    9b6c:	ldr	x0, [x8, #8]
    9b70:	ldr	x1, [x9, #16]
    9b74:	cbz	w10, 9b9c <PyInit__testcapi@@Base+0x9e0>
    9b78:	cmp	x0, x1
    9b7c:	b.eq	9bac <PyInit__testcapi@@Base+0x9f0>  // b.none
    9b80:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9b84:	ldr	x0, [x0, #3984]
    9b88:	b	9bb4 <PyInit__testcapi@@Base+0x9f8>
    9b8c:	mov	x0, xzr
    9b90:	ldp	x29, x30, [sp, #16]
    9b94:	add	sp, sp, #0x20
    9b98:	ret
    9b9c:	cmp	x0, x1
    9ba0:	b.eq	9bac <PyInit__testcapi@@Base+0x9f0>  // b.none
    9ba4:	bl	8e20 <PyType_IsSubtype@plt>
    9ba8:	cbz	w0, 9b80 <PyInit__testcapi@@Base+0x9c4>
    9bac:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9bb0:	ldr	x0, [x0, #4032]
    9bb4:	ldr	x8, [x0]
    9bb8:	add	x8, x8, #0x1
    9bbc:	str	x8, [x0]
    9bc0:	ldp	x29, x30, [sp, #16]
    9bc4:	add	sp, sp, #0x20
    9bc8:	ret
    9bcc:	sub	sp, sp, #0x20
    9bd0:	stp	x29, x30, [sp, #16]
    9bd4:	add	x29, sp, #0x10
    9bd8:	mov	x0, x1
    9bdc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9be0:	add	x1, x1, #0x687
    9be4:	add	x2, sp, #0x8
    9be8:	add	x3, sp, #0x4
    9bec:	str	wzr, [sp, #4]
    9bf0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9bf4:	cbz	w0, 9c28 <PyInit__testcapi@@Base+0xa6c>
    9bf8:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9bfc:	ldr	x8, [sp, #8]
    9c00:	ldr	x9, [x9, #3560]
    9c04:	ldr	w10, [sp, #4]
    9c08:	ldr	x0, [x8, #8]
    9c0c:	ldr	x1, [x9, #8]
    9c10:	cbz	w10, 9c38 <PyInit__testcapi@@Base+0xa7c>
    9c14:	cmp	x0, x1
    9c18:	b.eq	9c48 <PyInit__testcapi@@Base+0xa8c>  // b.none
    9c1c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9c20:	ldr	x0, [x0, #3984]
    9c24:	b	9c50 <PyInit__testcapi@@Base+0xa94>
    9c28:	mov	x0, xzr
    9c2c:	ldp	x29, x30, [sp, #16]
    9c30:	add	sp, sp, #0x20
    9c34:	ret
    9c38:	cmp	x0, x1
    9c3c:	b.eq	9c48 <PyInit__testcapi@@Base+0xa8c>  // b.none
    9c40:	bl	8e20 <PyType_IsSubtype@plt>
    9c44:	cbz	w0, 9c1c <PyInit__testcapi@@Base+0xa60>
    9c48:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9c4c:	ldr	x0, [x0, #4032]
    9c50:	ldr	x8, [x0]
    9c54:	add	x8, x8, #0x1
    9c58:	str	x8, [x0]
    9c5c:	ldp	x29, x30, [sp, #16]
    9c60:	add	sp, sp, #0x20
    9c64:	ret
    9c68:	sub	sp, sp, #0x20
    9c6c:	stp	x29, x30, [sp, #16]
    9c70:	add	x29, sp, #0x10
    9c74:	mov	x0, x1
    9c78:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9c7c:	add	x1, x1, #0x687
    9c80:	add	x2, sp, #0x8
    9c84:	add	x3, sp, #0x4
    9c88:	str	wzr, [sp, #4]
    9c8c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9c90:	cbz	w0, 9cc4 <PyInit__testcapi@@Base+0xb08>
    9c94:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9c98:	ldr	x8, [sp, #8]
    9c9c:	ldr	x9, [x9, #3560]
    9ca0:	ldr	w10, [sp, #4]
    9ca4:	ldr	x0, [x8, #8]
    9ca8:	ldr	x1, [x9, #24]
    9cac:	cbz	w10, 9cd4 <PyInit__testcapi@@Base+0xb18>
    9cb0:	cmp	x0, x1
    9cb4:	b.eq	9ce4 <PyInit__testcapi@@Base+0xb28>  // b.none
    9cb8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9cbc:	ldr	x0, [x0, #3984]
    9cc0:	b	9cec <PyInit__testcapi@@Base+0xb30>
    9cc4:	mov	x0, xzr
    9cc8:	ldp	x29, x30, [sp, #16]
    9ccc:	add	sp, sp, #0x20
    9cd0:	ret
    9cd4:	cmp	x0, x1
    9cd8:	b.eq	9ce4 <PyInit__testcapi@@Base+0xb28>  // b.none
    9cdc:	bl	8e20 <PyType_IsSubtype@plt>
    9ce0:	cbz	w0, 9cb8 <PyInit__testcapi@@Base+0xafc>
    9ce4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9ce8:	ldr	x0, [x0, #4032]
    9cec:	ldr	x8, [x0]
    9cf0:	add	x8, x8, #0x1
    9cf4:	str	x8, [x0]
    9cf8:	ldp	x29, x30, [sp, #16]
    9cfc:	add	sp, sp, #0x20
    9d00:	ret
    9d04:	sub	sp, sp, #0x20
    9d08:	stp	x29, x30, [sp, #16]
    9d0c:	add	x29, sp, #0x10
    9d10:	mov	x0, x1
    9d14:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9d18:	add	x1, x1, #0x687
    9d1c:	add	x2, sp, #0x8
    9d20:	add	x3, sp, #0x4
    9d24:	str	wzr, [sp, #4]
    9d28:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9d2c:	cbz	w0, 9d60 <PyInit__testcapi@@Base+0xba4>
    9d30:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9d34:	ldr	x8, [sp, #8]
    9d38:	ldr	x9, [x9, #3560]
    9d3c:	ldr	w10, [sp, #4]
    9d40:	ldr	x0, [x8, #8]
    9d44:	ldr	x1, [x9, #32]
    9d48:	cbz	w10, 9d70 <PyInit__testcapi@@Base+0xbb4>
    9d4c:	cmp	x0, x1
    9d50:	b.eq	9d80 <PyInit__testcapi@@Base+0xbc4>  // b.none
    9d54:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9d58:	ldr	x0, [x0, #3984]
    9d5c:	b	9d88 <PyInit__testcapi@@Base+0xbcc>
    9d60:	mov	x0, xzr
    9d64:	ldp	x29, x30, [sp, #16]
    9d68:	add	sp, sp, #0x20
    9d6c:	ret
    9d70:	cmp	x0, x1
    9d74:	b.eq	9d80 <PyInit__testcapi@@Base+0xbc4>  // b.none
    9d78:	bl	8e20 <PyType_IsSubtype@plt>
    9d7c:	cbz	w0, 9d54 <PyInit__testcapi@@Base+0xb98>
    9d80:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9d84:	ldr	x0, [x0, #4032]
    9d88:	ldr	x8, [x0]
    9d8c:	add	x8, x8, #0x1
    9d90:	str	x8, [x0]
    9d94:	ldp	x29, x30, [sp, #16]
    9d98:	add	sp, sp, #0x20
    9d9c:	ret
    9da0:	stp	x29, x30, [sp, #-64]!
    9da4:	str	x23, [sp, #16]
    9da8:	stp	x22, x21, [sp, #32]
    9dac:	stp	x20, x19, [sp, #48]
    9db0:	mov	x29, sp
    9db4:	adrp	x22, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9db8:	ldr	x8, [x22, #3560]
    9dbc:	mov	w1, #0xffffb9b0            	// #-18000
    9dc0:	mov	w3, #0x1                   	// #1
    9dc4:	mov	w0, wzr
    9dc8:	ldr	x9, [x8, #72]
    9dcc:	ldr	x4, [x8, #24]
    9dd0:	mov	w2, wzr
    9dd4:	blr	x9
    9dd8:	mov	x19, x0
    9ddc:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    9de0:	add	x0, x0, #0x68b
    9de4:	bl	8d10 <PyUnicode_FromString@plt>
    9de8:	ldr	x8, [x22, #3560]
    9dec:	mov	x20, x0
    9df0:	mov	x0, x19
    9df4:	mov	x1, x20
    9df8:	ldr	x8, [x8, #80]
    9dfc:	blr	x8
    9e00:	ldr	x8, [x22, #3560]
    9e04:	mov	x21, x0
    9e08:	mov	x0, x19
    9e0c:	mov	x1, x20
    9e10:	ldr	x8, [x8, #80]
    9e14:	blr	x8
    9e18:	ldr	x8, [x22, #3560]
    9e1c:	mov	x22, x0
    9e20:	mov	x0, x19
    9e24:	mov	x1, xzr
    9e28:	ldr	x8, [x8, #80]
    9e2c:	blr	x8
    9e30:	mov	x23, x0
    9e34:	mov	x0, x19
    9e38:	bl	8be0 <Py_DecRef@plt>
    9e3c:	mov	x0, x20
    9e40:	bl	8be0 <Py_DecRef@plt>
    9e44:	mov	w0, #0x3                   	// #3
    9e48:	bl	8920 <PyTuple_New@plt>
    9e4c:	stp	x21, x22, [x0, #24]
    9e50:	str	x23, [x0, #40]
    9e54:	ldp	x20, x19, [sp, #48]
    9e58:	ldp	x22, x21, [sp, #32]
    9e5c:	ldr	x23, [sp, #16]
    9e60:	ldp	x29, x30, [sp], #64
    9e64:	ret
    9e68:	stp	x29, x30, [sp, #-64]!
    9e6c:	str	x23, [sp, #16]
    9e70:	stp	x22, x21, [sp, #32]
    9e74:	stp	x20, x19, [sp, #48]
    9e78:	mov	x29, sp
    9e7c:	adrp	x22, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9e80:	ldr	x8, [x22, #3560]
    9e84:	mov	w3, #0x1                   	// #1
    9e88:	mov	w0, wzr
    9e8c:	mov	w1, wzr
    9e90:	ldr	x9, [x8, #72]
    9e94:	ldr	x4, [x8, #24]
    9e98:	mov	w2, wzr
    9e9c:	blr	x9
    9ea0:	mov	x19, x0
    9ea4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    9ea8:	add	x0, x0, #0x3c3
    9eac:	bl	8d10 <PyUnicode_FromString@plt>
    9eb0:	ldr	x8, [x22, #3560]
    9eb4:	mov	x20, x0
    9eb8:	mov	x0, x19
    9ebc:	mov	x1, xzr
    9ec0:	ldr	x8, [x8, #80]
    9ec4:	blr	x8
    9ec8:	ldr	x8, [x22, #3560]
    9ecc:	mov	x21, x0
    9ed0:	mov	x0, x19
    9ed4:	mov	x1, xzr
    9ed8:	ldr	x8, [x8, #80]
    9edc:	blr	x8
    9ee0:	ldr	x8, [x22, #3560]
    9ee4:	mov	x22, x0
    9ee8:	mov	x0, x19
    9eec:	mov	x1, x20
    9ef0:	ldr	x8, [x8, #80]
    9ef4:	blr	x8
    9ef8:	mov	x23, x0
    9efc:	mov	x0, x19
    9f00:	bl	8be0 <Py_DecRef@plt>
    9f04:	mov	x0, x20
    9f08:	bl	8be0 <Py_DecRef@plt>
    9f0c:	mov	w0, #0x3                   	// #3
    9f10:	bl	8920 <PyTuple_New@plt>
    9f14:	stp	x21, x22, [x0, #24]
    9f18:	str	x23, [x0, #40]
    9f1c:	ldp	x20, x19, [sp, #48]
    9f20:	ldp	x22, x21, [sp, #32]
    9f24:	ldr	x23, [sp, #16]
    9f28:	ldp	x29, x30, [sp], #64
    9f2c:	ret
    9f30:	sub	sp, sp, #0x20
    9f34:	stp	x29, x30, [sp, #16]
    9f38:	add	x29, sp, #0x10
    9f3c:	mov	x0, x1
    9f40:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9f44:	add	x1, x1, #0x688
    9f48:	sub	x2, x29, #0x4
    9f4c:	stur	wzr, [x29, #-4]
    9f50:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9f54:	cbz	w0, 9f7c <PyInit__testcapi@@Base+0xdc0>
    9f58:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9f5c:	ldr	x8, [x8, #3560]
    9f60:	ldr	x0, [x8, #40]
    9f64:	ldr	x8, [x0]
    9f68:	add	x8, x8, #0x1
    9f6c:	str	x8, [x0]
    9f70:	ldp	x29, x30, [sp, #16]
    9f74:	add	sp, sp, #0x20
    9f78:	ret
    9f7c:	mov	x0, xzr
    9f80:	ldp	x29, x30, [sp, #16]
    9f84:	add	sp, sp, #0x20
    9f88:	ret
    9f8c:	sub	sp, sp, #0x20
    9f90:	stp	x29, x30, [sp, #16]
    9f94:	add	x29, sp, #0x10
    9f98:	mov	x0, x1
    9f9c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9fa0:	add	x1, x1, #0x68f
    9fa4:	sub	x2, x29, #0x4
    9fa8:	add	x3, sp, #0x8
    9fac:	add	x4, sp, #0x4
    9fb0:	mov	x5, sp
    9fb4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9fb8:	cbz	w0, 9fe4 <PyInit__testcapi@@Base+0xe28>
    9fbc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    9fc0:	ldr	x8, [x8, #3560]
    9fc4:	ldp	w1, w0, [sp, #4]
    9fc8:	ldr	w2, [sp]
    9fcc:	ldr	x9, [x8, #48]
    9fd0:	ldr	x3, [x8]
    9fd4:	blr	x9
    9fd8:	ldp	x29, x30, [sp, #16]
    9fdc:	add	sp, sp, #0x20
    9fe0:	ret
    9fe4:	mov	x0, xzr
    9fe8:	ldp	x29, x30, [sp, #16]
    9fec:	add	sp, sp, #0x20
    9ff0:	ret
    9ff4:	sub	sp, sp, #0x40
    9ff8:	stp	x29, x30, [sp, #48]
    9ffc:	add	x29, sp, #0x30
    a000:	mov	x0, x1
    a004:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a008:	add	x8, sp, #0x10
    a00c:	add	x9, sp, #0x14
    a010:	add	x1, x1, #0x694
    a014:	sub	x2, x29, #0x4
    a018:	sub	x3, x29, #0x8
    a01c:	sub	x4, x29, #0xc
    a020:	sub	x5, x29, #0x10
    a024:	sub	x6, x29, #0x14
    a028:	add	x7, sp, #0x18
    a02c:	stp	x9, x8, [sp]
    a030:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a034:	cbz	w0, a074 <PyInit__testcapi@@Base+0xeb8>
    a038:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a03c:	ldr	x8, [x8, #3560]
    a040:	adrp	x7, 27000 <PyInit__testcapi@@Base+0x1de44>
    a044:	ldp	w1, w0, [x29, #-12]
    a048:	ldp	w3, w2, [x29, #-20]
    a04c:	ldp	w5, w4, [sp, #20]
    a050:	ldr	w6, [sp, #16]
    a054:	ldr	x9, [x8, #56]
    a058:	ldr	x8, [x8, #8]
    a05c:	ldr	x7, [x7, #4016]
    a060:	str	x8, [sp]
    a064:	blr	x9
    a068:	ldp	x29, x30, [sp, #48]
    a06c:	add	sp, sp, #0x40
    a070:	ret
    a074:	mov	x0, xzr
    a078:	ldp	x29, x30, [sp, #48]
    a07c:	add	sp, sp, #0x40
    a080:	ret
    a084:	sub	sp, sp, #0x50
    a088:	stp	x29, x30, [sp, #64]
    a08c:	add	x29, sp, #0x40
    a090:	mov	x0, x1
    a094:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a098:	add	x8, sp, #0x1c
    a09c:	add	x9, sp, #0x20
    a0a0:	sub	x10, x29, #0x1c
    a0a4:	add	x1, x1, #0x69d
    a0a8:	sub	x2, x29, #0x4
    a0ac:	sub	x3, x29, #0x8
    a0b0:	sub	x4, x29, #0xc
    a0b4:	sub	x5, x29, #0x10
    a0b8:	sub	x6, x29, #0x14
    a0bc:	sub	x7, x29, #0x18
    a0c0:	stp	x9, x8, [sp, #8]
    a0c4:	str	x10, [sp]
    a0c8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a0cc:	cbz	w0, a110 <PyInit__testcapi@@Base+0xf54>
    a0d0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a0d4:	ldr	x8, [x8, #3560]
    a0d8:	adrp	x7, 27000 <PyInit__testcapi@@Base+0x1de44>
    a0dc:	ldp	w1, w0, [x29, #-12]
    a0e0:	ldp	w3, w2, [x29, #-20]
    a0e4:	ldr	x10, [x8, #104]
    a0e8:	ldr	x8, [x8, #8]
    a0ec:	ldp	w5, w4, [x29, #-28]
    a0f0:	ldp	w9, w6, [sp, #28]
    a0f4:	str	x8, [sp, #8]
    a0f8:	ldr	x7, [x7, #4016]
    a0fc:	str	w9, [sp]
    a100:	blr	x10
    a104:	ldp	x29, x30, [sp, #64]
    a108:	add	sp, sp, #0x50
    a10c:	ret
    a110:	mov	x0, xzr
    a114:	ldp	x29, x30, [sp, #64]
    a118:	add	sp, sp, #0x50
    a11c:	ret
    a120:	sub	sp, sp, #0x30
    a124:	stp	x29, x30, [sp, #32]
    a128:	add	x29, sp, #0x20
    a12c:	mov	x0, x1
    a130:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a134:	add	x1, x1, #0x6a7
    a138:	sub	x2, x29, #0x4
    a13c:	sub	x3, x29, #0x8
    a140:	sub	x4, x29, #0xc
    a144:	add	x5, sp, #0x10
    a148:	add	x6, sp, #0xc
    a14c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a150:	cbz	w0, a184 <PyInit__testcapi@@Base+0xfc8>
    a154:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a158:	ldr	x8, [x8, #3560]
    a15c:	adrp	x4, 27000 <PyInit__testcapi@@Base+0x1de44>
    a160:	ldp	w1, w0, [x29, #-12]
    a164:	ldp	w3, w2, [sp, #12]
    a168:	ldr	x9, [x8, #64]
    a16c:	ldr	x5, [x8, #16]
    a170:	ldr	x4, [x4, #4016]
    a174:	blr	x9
    a178:	ldp	x29, x30, [sp, #32]
    a17c:	add	sp, sp, #0x30
    a180:	ret
    a184:	mov	x0, xzr
    a188:	ldp	x29, x30, [sp, #32]
    a18c:	add	sp, sp, #0x30
    a190:	ret
    a194:	sub	sp, sp, #0x30
    a198:	stp	x29, x30, [sp, #32]
    a19c:	add	x29, sp, #0x20
    a1a0:	mov	x0, x1
    a1a4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a1a8:	add	x1, x1, #0x6ad
    a1ac:	sub	x2, x29, #0x4
    a1b0:	sub	x3, x29, #0x8
    a1b4:	sub	x4, x29, #0xc
    a1b8:	add	x5, sp, #0x10
    a1bc:	add	x6, sp, #0xc
    a1c0:	add	x7, sp, #0x8
    a1c4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a1c8:	cbz	w0, a200 <PyInit__testcapi@@Base+0x1044>
    a1cc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a1d0:	ldr	x8, [x8, #3560]
    a1d4:	adrp	x4, 27000 <PyInit__testcapi@@Base+0x1de44>
    a1d8:	ldp	w1, w0, [x29, #-12]
    a1dc:	ldp	w3, w2, [sp, #12]
    a1e0:	ldr	w5, [sp, #8]
    a1e4:	ldr	x9, [x8, #112]
    a1e8:	ldr	x6, [x8, #16]
    a1ec:	ldr	x4, [x4, #4016]
    a1f0:	blr	x9
    a1f4:	ldp	x29, x30, [sp, #32]
    a1f8:	add	sp, sp, #0x30
    a1fc:	ret
    a200:	mov	x0, xzr
    a204:	ldp	x29, x30, [sp, #32]
    a208:	add	sp, sp, #0x30
    a20c:	ret
    a210:	sub	sp, sp, #0x20
    a214:	stp	x29, x30, [sp, #16]
    a218:	add	x29, sp, #0x10
    a21c:	mov	x0, x1
    a220:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a224:	add	x1, x1, #0x68f
    a228:	sub	x2, x29, #0x4
    a22c:	add	x3, sp, #0x8
    a230:	add	x4, sp, #0x4
    a234:	mov	x5, sp
    a238:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a23c:	cbz	w0, a26c <PyInit__testcapi@@Base+0x10b0>
    a240:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a244:	ldr	x8, [x8, #3560]
    a248:	ldp	w1, w0, [sp, #4]
    a24c:	ldr	w2, [sp]
    a250:	mov	w3, #0x1                   	// #1
    a254:	ldr	x9, [x8, #72]
    a258:	ldr	x4, [x8, #24]
    a25c:	blr	x9
    a260:	ldp	x29, x30, [sp, #16]
    a264:	add	sp, sp, #0x20
    a268:	ret
    a26c:	mov	x0, xzr
    a270:	ldp	x29, x30, [sp, #16]
    a274:	add	sp, sp, #0x20
    a278:	ret
    a27c:	sub	sp, sp, #0x30
    a280:	stp	x29, x30, [sp, #16]
    a284:	stp	x20, x19, [sp, #32]
    a288:	add	x29, sp, #0x10
    a28c:	mov	x0, x1
    a290:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a294:	add	x1, x1, #0x687
    a298:	add	x2, sp, #0x8
    a29c:	add	x3, sp, #0x4
    a2a0:	str	xzr, [sp, #8]
    a2a4:	str	wzr, [sp, #4]
    a2a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a2ac:	cbz	w0, a2fc <PyInit__testcapi@@Base+0x1140>
    a2b0:	ldr	x1, [sp, #8]
    a2b4:	mov	w0, #0x1                   	// #1
    a2b8:	bl	9040 <PyTuple_Pack@plt>
    a2bc:	cbz	x0, a2fc <PyInit__testcapi@@Base+0x1140>
    a2c0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a2c4:	ldr	x8, [x8, #3560]
    a2c8:	mov	x19, x0
    a2cc:	mov	x1, x19
    a2d0:	ldr	x9, [x8, #96]
    a2d4:	ldr	x0, [x8]
    a2d8:	blr	x9
    a2dc:	ldr	x8, [x19]
    a2e0:	mov	x20, x0
    a2e4:	subs	x8, x8, #0x1
    a2e8:	str	x8, [x19]
    a2ec:	b.ne	a300 <PyInit__testcapi@@Base+0x1144>  // b.any
    a2f0:	mov	x0, x19
    a2f4:	bl	8560 <_Py_Dealloc@plt>
    a2f8:	b	a300 <PyInit__testcapi@@Base+0x1144>
    a2fc:	mov	x20, xzr
    a300:	mov	x0, x20
    a304:	ldp	x20, x19, [sp, #32]
    a308:	ldp	x29, x30, [sp, #16]
    a30c:	add	sp, sp, #0x30
    a310:	ret
    a314:	sub	sp, sp, #0x40
    a318:	stp	x29, x30, [sp, #32]
    a31c:	stp	x20, x19, [sp, #48]
    a320:	add	x29, sp, #0x20
    a324:	stur	xzr, [x29, #-8]
    a328:	str	xzr, [sp, #16]
    a32c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    a330:	ldr	x8, [x8, #4016]
    a334:	mov	x0, x1
    a338:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a33c:	add	x1, x1, #0x6b4
    a340:	add	x2, sp, #0x10
    a344:	add	x3, sp, #0x8
    a348:	sub	x4, x29, #0x8
    a34c:	sub	x5, x29, #0x4
    a350:	str	x8, [sp, #8]
    a354:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a358:	cbz	w0, a3c8 <PyInit__testcapi@@Base+0x120c>
    a35c:	ldur	w8, [x29, #-8]
    a360:	ldr	x1, [sp, #16]
    a364:	cbz	w8, a3b8 <PyInit__testcapi@@Base+0x11fc>
    a368:	ldr	x2, [sp, #8]
    a36c:	mov	w0, #0x2                   	// #2
    a370:	bl	9040 <PyTuple_Pack@plt>
    a374:	mov	x19, x0
    a378:	cbz	x0, a3c8 <PyInit__testcapi@@Base+0x120c>
    a37c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a380:	ldr	x8, [x8, #3560]
    a384:	mov	x1, x19
    a388:	mov	x2, xzr
    a38c:	ldr	x9, [x8, #88]
    a390:	ldr	x0, [x8, #8]
    a394:	blr	x9
    a398:	ldr	x8, [x19]
    a39c:	mov	x20, x0
    a3a0:	subs	x8, x8, #0x1
    a3a4:	str	x8, [x19]
    a3a8:	b.ne	a3cc <PyInit__testcapi@@Base+0x1210>  // b.any
    a3ac:	mov	x0, x19
    a3b0:	bl	8560 <_Py_Dealloc@plt>
    a3b4:	b	a3cc <PyInit__testcapi@@Base+0x1210>
    a3b8:	mov	w0, #0x1                   	// #1
    a3bc:	bl	9040 <PyTuple_Pack@plt>
    a3c0:	mov	x19, x0
    a3c4:	cbnz	x0, a37c <PyInit__testcapi@@Base+0x11c0>
    a3c8:	mov	x20, xzr
    a3cc:	mov	x0, x20
    a3d0:	ldp	x20, x19, [sp, #48]
    a3d4:	ldp	x29, x30, [sp, #32]
    a3d8:	add	sp, sp, #0x40
    a3dc:	ret
    a3e0:	stp	x29, x30, [sp, #-32]!
    a3e4:	stp	x20, x19, [sp, #16]
    a3e8:	mov	x29, sp
    a3ec:	mov	w0, #0x1e                  	// #30
    a3f0:	bl	82a0 <PyList_New@plt>
    a3f4:	cbz	x0, a698 <PyInit__testcapi@@Base+0x14dc>
    a3f8:	mov	x19, x0
    a3fc:	mov	x0, xzr
    a400:	bl	8840 <PyLong_FromLong@plt>
    a404:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a408:	add	x20, x19, #0x18
    a40c:	ldr	x8, [x20]
    a410:	str	x0, [x8]
    a414:	mov	w0, #0x1                   	// #1
    a418:	bl	8840 <PyLong_FromLong@plt>
    a41c:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a420:	ldr	x8, [x20]
    a424:	str	x0, [x8, #8]
    a428:	mov	w0, #0x2                   	// #2
    a42c:	bl	8840 <PyLong_FromLong@plt>
    a430:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a434:	ldr	x8, [x20]
    a438:	str	x0, [x8, #16]
    a43c:	mov	w0, #0x3                   	// #3
    a440:	bl	8840 <PyLong_FromLong@plt>
    a444:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a448:	ldr	x8, [x20]
    a44c:	str	x0, [x8, #24]
    a450:	mov	w0, #0x4                   	// #4
    a454:	bl	8840 <PyLong_FromLong@plt>
    a458:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a45c:	ldr	x8, [x20]
    a460:	str	x0, [x8, #32]
    a464:	mov	w0, #0x5                   	// #5
    a468:	bl	8840 <PyLong_FromLong@plt>
    a46c:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a470:	ldr	x8, [x20]
    a474:	str	x0, [x8, #40]
    a478:	mov	w0, #0x6                   	// #6
    a47c:	bl	8840 <PyLong_FromLong@plt>
    a480:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a484:	ldr	x8, [x20]
    a488:	str	x0, [x8, #48]
    a48c:	mov	w0, #0x7                   	// #7
    a490:	bl	8840 <PyLong_FromLong@plt>
    a494:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a498:	ldr	x8, [x20]
    a49c:	str	x0, [x8, #56]
    a4a0:	mov	w0, #0x8                   	// #8
    a4a4:	bl	8840 <PyLong_FromLong@plt>
    a4a8:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a4ac:	ldr	x8, [x20]
    a4b0:	str	x0, [x8, #64]
    a4b4:	mov	w0, #0x9                   	// #9
    a4b8:	bl	8840 <PyLong_FromLong@plt>
    a4bc:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a4c0:	ldr	x8, [x20]
    a4c4:	str	x0, [x8, #72]
    a4c8:	mov	w0, #0xa                   	// #10
    a4cc:	bl	8840 <PyLong_FromLong@plt>
    a4d0:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a4d4:	ldr	x8, [x20]
    a4d8:	str	x0, [x8, #80]
    a4dc:	mov	w0, #0xb                   	// #11
    a4e0:	bl	8840 <PyLong_FromLong@plt>
    a4e4:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a4e8:	ldr	x8, [x20]
    a4ec:	str	x0, [x8, #88]
    a4f0:	mov	w0, #0xc                   	// #12
    a4f4:	bl	8840 <PyLong_FromLong@plt>
    a4f8:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a4fc:	ldr	x8, [x20]
    a500:	str	x0, [x8, #96]
    a504:	mov	w0, #0xd                   	// #13
    a508:	bl	8840 <PyLong_FromLong@plt>
    a50c:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a510:	ldr	x8, [x20]
    a514:	str	x0, [x8, #104]
    a518:	mov	w0, #0xe                   	// #14
    a51c:	bl	8840 <PyLong_FromLong@plt>
    a520:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a524:	ldr	x8, [x20]
    a528:	str	x0, [x8, #112]
    a52c:	mov	w0, #0xf                   	// #15
    a530:	bl	8840 <PyLong_FromLong@plt>
    a534:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a538:	ldr	x8, [x20]
    a53c:	str	x0, [x8, #120]
    a540:	mov	w0, #0x10                  	// #16
    a544:	bl	8840 <PyLong_FromLong@plt>
    a548:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a54c:	ldr	x8, [x20]
    a550:	str	x0, [x8, #128]
    a554:	mov	w0, #0x11                  	// #17
    a558:	bl	8840 <PyLong_FromLong@plt>
    a55c:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a560:	ldr	x8, [x20]
    a564:	str	x0, [x8, #136]
    a568:	mov	w0, #0x12                  	// #18
    a56c:	bl	8840 <PyLong_FromLong@plt>
    a570:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a574:	ldr	x8, [x20]
    a578:	str	x0, [x8, #144]
    a57c:	mov	w0, #0x13                  	// #19
    a580:	bl	8840 <PyLong_FromLong@plt>
    a584:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a588:	ldr	x8, [x20]
    a58c:	str	x0, [x8, #152]
    a590:	mov	w0, #0x14                  	// #20
    a594:	bl	8840 <PyLong_FromLong@plt>
    a598:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a59c:	ldr	x8, [x20]
    a5a0:	str	x0, [x8, #160]
    a5a4:	mov	w0, #0x15                  	// #21
    a5a8:	bl	8840 <PyLong_FromLong@plt>
    a5ac:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a5b0:	ldr	x8, [x20]
    a5b4:	str	x0, [x8, #168]
    a5b8:	mov	w0, #0x16                  	// #22
    a5bc:	bl	8840 <PyLong_FromLong@plt>
    a5c0:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a5c4:	ldr	x8, [x20]
    a5c8:	str	x0, [x8, #176]
    a5cc:	mov	w0, #0x17                  	// #23
    a5d0:	bl	8840 <PyLong_FromLong@plt>
    a5d4:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a5d8:	ldr	x8, [x20]
    a5dc:	str	x0, [x8, #184]
    a5e0:	mov	w0, #0x18                  	// #24
    a5e4:	bl	8840 <PyLong_FromLong@plt>
    a5e8:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a5ec:	ldr	x8, [x20]
    a5f0:	str	x0, [x8, #192]
    a5f4:	mov	w0, #0x19                  	// #25
    a5f8:	bl	8840 <PyLong_FromLong@plt>
    a5fc:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a600:	ldr	x8, [x20]
    a604:	str	x0, [x8, #200]
    a608:	mov	w0, #0x1a                  	// #26
    a60c:	bl	8840 <PyLong_FromLong@plt>
    a610:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a614:	ldr	x8, [x20]
    a618:	str	x0, [x8, #208]
    a61c:	mov	w0, #0x1b                  	// #27
    a620:	bl	8840 <PyLong_FromLong@plt>
    a624:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a628:	ldr	x8, [x20]
    a62c:	str	x0, [x8, #216]
    a630:	mov	w0, #0x1c                  	// #28
    a634:	bl	8840 <PyLong_FromLong@plt>
    a638:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a63c:	ldr	x8, [x20]
    a640:	str	x0, [x8, #224]
    a644:	mov	w0, #0x1d                  	// #29
    a648:	bl	8840 <PyLong_FromLong@plt>
    a64c:	cbz	x0, a684 <PyInit__testcapi@@Base+0x14c8>
    a650:	ldr	x8, [x19, #24]
    a654:	str	x0, [x8, #232]
    a658:	mov	x0, x19
    a65c:	bl	8a20 <PyList_Reverse@plt>
    a660:	cbz	w0, a6a4 <PyInit__testcapi@@Base+0x14e8>
    a664:	ldr	x8, [x19]
    a668:	subs	x8, x8, #0x1
    a66c:	str	x8, [x19]
    a670:	b.eq	a92c <PyInit__testcapi@@Base+0x1770>  // b.none
    a674:	mov	x0, xzr
    a678:	ldp	x20, x19, [sp, #16]
    a67c:	ldp	x29, x30, [sp], #32
    a680:	ret
    a684:	ldr	x8, [x19]
    a688:	subs	x8, x8, #0x1
    a68c:	str	x8, [x19]
    a690:	b.eq	a92c <PyInit__testcapi@@Base+0x1770>  // b.none
    a694:	mov	x0, xzr
    a698:	ldp	x20, x19, [sp, #16]
    a69c:	ldp	x29, x30, [sp], #32
    a6a0:	ret
    a6a4:	ldr	x8, [x20]
    a6a8:	ldr	x0, [x8]
    a6ac:	bl	89a0 <PyLong_AsLong@plt>
    a6b0:	cmp	x0, #0x1d
    a6b4:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a6b8:	ldr	x8, [x20]
    a6bc:	ldr	x0, [x8, #8]
    a6c0:	bl	89a0 <PyLong_AsLong@plt>
    a6c4:	cmp	x0, #0x1c
    a6c8:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a6cc:	ldr	x8, [x20]
    a6d0:	ldr	x0, [x8, #16]
    a6d4:	bl	89a0 <PyLong_AsLong@plt>
    a6d8:	cmp	x0, #0x1b
    a6dc:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a6e0:	ldr	x8, [x20]
    a6e4:	ldr	x0, [x8, #24]
    a6e8:	bl	89a0 <PyLong_AsLong@plt>
    a6ec:	cmp	x0, #0x1a
    a6f0:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a6f4:	ldr	x8, [x20]
    a6f8:	ldr	x0, [x8, #32]
    a6fc:	bl	89a0 <PyLong_AsLong@plt>
    a700:	cmp	x0, #0x19
    a704:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a708:	ldr	x8, [x20]
    a70c:	ldr	x0, [x8, #40]
    a710:	bl	89a0 <PyLong_AsLong@plt>
    a714:	cmp	x0, #0x18
    a718:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a71c:	ldr	x8, [x20]
    a720:	ldr	x0, [x8, #48]
    a724:	bl	89a0 <PyLong_AsLong@plt>
    a728:	cmp	x0, #0x17
    a72c:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a730:	ldr	x8, [x20]
    a734:	ldr	x0, [x8, #56]
    a738:	bl	89a0 <PyLong_AsLong@plt>
    a73c:	cmp	x0, #0x16
    a740:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a744:	ldr	x8, [x20]
    a748:	ldr	x0, [x8, #64]
    a74c:	bl	89a0 <PyLong_AsLong@plt>
    a750:	cmp	x0, #0x15
    a754:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a758:	ldr	x8, [x20]
    a75c:	ldr	x0, [x8, #72]
    a760:	bl	89a0 <PyLong_AsLong@plt>
    a764:	cmp	x0, #0x14
    a768:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a76c:	ldr	x8, [x20]
    a770:	ldr	x0, [x8, #80]
    a774:	bl	89a0 <PyLong_AsLong@plt>
    a778:	cmp	x0, #0x13
    a77c:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a780:	ldr	x8, [x20]
    a784:	ldr	x0, [x8, #88]
    a788:	bl	89a0 <PyLong_AsLong@plt>
    a78c:	cmp	x0, #0x12
    a790:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a794:	ldr	x8, [x20]
    a798:	ldr	x0, [x8, #96]
    a79c:	bl	89a0 <PyLong_AsLong@plt>
    a7a0:	cmp	x0, #0x11
    a7a4:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a7a8:	ldr	x8, [x20]
    a7ac:	ldr	x0, [x8, #104]
    a7b0:	bl	89a0 <PyLong_AsLong@plt>
    a7b4:	cmp	x0, #0x10
    a7b8:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a7bc:	ldr	x8, [x20]
    a7c0:	ldr	x0, [x8, #112]
    a7c4:	bl	89a0 <PyLong_AsLong@plt>
    a7c8:	cmp	x0, #0xf
    a7cc:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a7d0:	ldr	x8, [x20]
    a7d4:	ldr	x0, [x8, #120]
    a7d8:	bl	89a0 <PyLong_AsLong@plt>
    a7dc:	cmp	x0, #0xe
    a7e0:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a7e4:	ldr	x8, [x20]
    a7e8:	ldr	x0, [x8, #128]
    a7ec:	bl	89a0 <PyLong_AsLong@plt>
    a7f0:	cmp	x0, #0xd
    a7f4:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a7f8:	ldr	x8, [x20]
    a7fc:	ldr	x0, [x8, #136]
    a800:	bl	89a0 <PyLong_AsLong@plt>
    a804:	cmp	x0, #0xc
    a808:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a80c:	ldr	x8, [x20]
    a810:	ldr	x0, [x8, #144]
    a814:	bl	89a0 <PyLong_AsLong@plt>
    a818:	cmp	x0, #0xb
    a81c:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a820:	ldr	x8, [x20]
    a824:	ldr	x0, [x8, #152]
    a828:	bl	89a0 <PyLong_AsLong@plt>
    a82c:	cmp	x0, #0xa
    a830:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a834:	ldr	x8, [x20]
    a838:	ldr	x0, [x8, #160]
    a83c:	bl	89a0 <PyLong_AsLong@plt>
    a840:	cmp	x0, #0x9
    a844:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a848:	ldr	x8, [x20]
    a84c:	ldr	x0, [x8, #168]
    a850:	bl	89a0 <PyLong_AsLong@plt>
    a854:	cmp	x0, #0x8
    a858:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a85c:	ldr	x8, [x20]
    a860:	ldr	x0, [x8, #176]
    a864:	bl	89a0 <PyLong_AsLong@plt>
    a868:	cmp	x0, #0x7
    a86c:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a870:	ldr	x8, [x20]
    a874:	ldr	x0, [x8, #184]
    a878:	bl	89a0 <PyLong_AsLong@plt>
    a87c:	cmp	x0, #0x6
    a880:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a884:	ldr	x8, [x20]
    a888:	ldr	x0, [x8, #192]
    a88c:	bl	89a0 <PyLong_AsLong@plt>
    a890:	cmp	x0, #0x5
    a894:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a898:	ldr	x8, [x20]
    a89c:	ldr	x0, [x8, #200]
    a8a0:	bl	89a0 <PyLong_AsLong@plt>
    a8a4:	cmp	x0, #0x4
    a8a8:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a8ac:	ldr	x8, [x20]
    a8b0:	ldr	x0, [x8, #208]
    a8b4:	bl	89a0 <PyLong_AsLong@plt>
    a8b8:	cmp	x0, #0x3
    a8bc:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a8c0:	ldr	x8, [x20]
    a8c4:	ldr	x0, [x8, #216]
    a8c8:	bl	89a0 <PyLong_AsLong@plt>
    a8cc:	cmp	x0, #0x2
    a8d0:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a8d4:	ldr	x8, [x20]
    a8d8:	ldr	x0, [x8, #224]
    a8dc:	bl	89a0 <PyLong_AsLong@plt>
    a8e0:	cmp	x0, #0x1
    a8e4:	b.ne	a8f8 <PyInit__testcapi@@Base+0x173c>  // b.any
    a8e8:	ldr	x8, [x20]
    a8ec:	ldr	x0, [x8, #232]
    a8f0:	bl	89a0 <PyLong_AsLong@plt>
    a8f4:	cbz	x0, a944 <PyInit__testcapi@@Base+0x1788>
    a8f8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    a8fc:	ldr	x0, [x8, #3552]
    a900:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    a904:	add	x1, x1, #0x6ba
    a908:	bl	8670 <PyErr_SetString@plt>
    a90c:	ldr	x8, [x19]
    a910:	subs	x8, x8, #0x1
    a914:	str	x8, [x19]
    a918:	b.eq	a92c <PyInit__testcapi@@Base+0x1770>  // b.none
    a91c:	mov	x0, xzr
    a920:	ldp	x20, x19, [sp, #16]
    a924:	ldp	x29, x30, [sp], #32
    a928:	ret
    a92c:	mov	x0, x19
    a930:	bl	8560 <_Py_Dealloc@plt>
    a934:	mov	x0, xzr
    a938:	ldp	x20, x19, [sp, #16]
    a93c:	ldp	x29, x30, [sp], #32
    a940:	ret
    a944:	ldr	x8, [x19]
    a948:	subs	x8, x8, #0x1
    a94c:	str	x8, [x19]
    a950:	b.ne	a95c <PyInit__testcapi@@Base+0x17a0>  // b.any
    a954:	mov	x0, x19
    a958:	bl	8560 <_Py_Dealloc@plt>
    a95c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    a960:	ldr	x0, [x0, #4016]
    a964:	ldr	x8, [x0]
    a968:	add	x8, x8, #0x1
    a96c:	str	x8, [x0]
    a970:	ldp	x20, x19, [sp, #16]
    a974:	ldp	x29, x30, [sp], #32
    a978:	ret
    a97c:	sub	sp, sp, #0x50
    a980:	stp	x29, x30, [sp, #16]
    a984:	str	x23, [sp, #32]
    a988:	stp	x22, x21, [sp, #48]
    a98c:	stp	x20, x19, [sp, #64]
    a990:	add	x29, sp, #0x10
    a994:	mov	x23, xzr
    a998:	str	xzr, [x29, #24]
    a99c:	bl	8c20 <PyDict_New@plt>
    a9a0:	cbz	x0, aac0 <PyInit__testcapi@@Base+0x1904>
    a9a4:	mov	x19, x0
    a9a8:	mov	x22, x23
    a9ac:	cbz	x23, aa14 <PyInit__testcapi@@Base+0x1858>
    a9b0:	mov	x20, xzr
    a9b4:	mov	x0, x20
    a9b8:	bl	8840 <PyLong_FromLong@plt>
    a9bc:	mov	x21, x0
    a9c0:	cbz	x0, aab8 <PyInit__testcapi@@Base+0x18fc>
    a9c4:	mov	x0, x19
    a9c8:	mov	x1, x21
    a9cc:	mov	x2, x21
    a9d0:	bl	8d80 <PyDict_SetItem@plt>
    a9d4:	ldr	x8, [x21]
    a9d8:	mov	w22, w0
    a9dc:	subs	x8, x8, #0x1
    a9e0:	str	x8, [x21]
    a9e4:	b.ne	a9f0 <PyInit__testcapi@@Base+0x1834>  // b.any
    a9e8:	mov	x0, x21
    a9ec:	bl	8560 <_Py_Dealloc@plt>
    a9f0:	tbnz	w22, #31, aab8 <PyInit__testcapi@@Base+0x18fc>
    a9f4:	add	x20, x20, #0x1
    a9f8:	cmp	x23, x20
    a9fc:	b.ne	a9b4 <PyInit__testcapi@@Base+0x17f8>  // b.any
    aa00:	mov	x22, x23
    aa04:	str	x21, [sp, #8]
    aa08:	b	aa14 <PyInit__testcapi@@Base+0x1858>
    aa0c:	sub	x22, x22, #0x1
    aa10:	tbnz	w21, #31, aabc <PyInit__testcapi@@Base+0x1900>
    aa14:	add	x1, x29, #0x18
    aa18:	mov	x2, sp
    aa1c:	add	x3, sp, #0x8
    aa20:	mov	x0, x19
    aa24:	bl	8c60 <PyDict_Next@plt>
    aa28:	cbz	w0, aa78 <PyInit__testcapi@@Base+0x18bc>
    aa2c:	ldr	x0, [sp, #8]
    aa30:	bl	89a0 <PyLong_AsLong@plt>
    aa34:	add	w8, w0, #0x1
    aa38:	sxtw	x0, w8
    aa3c:	bl	8840 <PyLong_FromLong@plt>
    aa40:	cbz	x0, aabc <PyInit__testcapi@@Base+0x1900>
    aa44:	ldr	x1, [sp]
    aa48:	mov	x20, x0
    aa4c:	mov	x0, x19
    aa50:	mov	x2, x20
    aa54:	bl	8d80 <PyDict_SetItem@plt>
    aa58:	ldr	x8, [x20]
    aa5c:	mov	w21, w0
    aa60:	subs	x8, x8, #0x1
    aa64:	str	x8, [x20]
    aa68:	b.ne	aa0c <PyInit__testcapi@@Base+0x1850>  // b.any
    aa6c:	mov	x0, x20
    aa70:	bl	8560 <_Py_Dealloc@plt>
    aa74:	b	aa0c <PyInit__testcapi@@Base+0x1850>
    aa78:	ldr	x8, [x19]
    aa7c:	subs	x8, x8, #0x1
    aa80:	str	x8, [x19]
    aa84:	b.ne	aa90 <PyInit__testcapi@@Base+0x18d4>  // b.any
    aa88:	mov	x0, x19
    aa8c:	bl	8560 <_Py_Dealloc@plt>
    aa90:	cbnz	x22, aad8 <PyInit__testcapi@@Base+0x191c>
    aa94:	add	x23, x23, #0x1
    aa98:	cmp	x23, #0xc8
    aa9c:	b.ne	a998 <PyInit__testcapi@@Base+0x17dc>  // b.any
    aaa0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    aaa4:	ldr	x0, [x0, #4016]
    aaa8:	ldr	x8, [x0]
    aaac:	add	x8, x8, #0x1
    aab0:	str	x8, [x0]
    aab4:	b	aac0 <PyInit__testcapi@@Base+0x1904>
    aab8:	str	x21, [sp, #8]
    aabc:	mov	x0, xzr
    aac0:	ldp	x20, x19, [sp, #64]
    aac4:	ldp	x22, x21, [sp, #48]
    aac8:	ldr	x23, [sp, #32]
    aacc:	ldp	x29, x30, [sp, #16]
    aad0:	add	sp, sp, #0x50
    aad4:	ret
    aad8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    aadc:	ldr	x0, [x8, #3552]
    aae0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    aae4:	add	x1, x1, #0x6dc
    aae8:	bl	8670 <PyErr_SetString@plt>
    aaec:	b	aabc <PyInit__testcapi@@Base+0x1900>
    aaf0:	sub	sp, sp, #0x30
    aaf4:	stp	x29, x30, [sp, #32]
    aaf8:	add	x29, sp, #0x20
    aafc:	mov	x0, x1
    ab00:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ab04:	add	x1, x1, #0x70c
    ab08:	sub	x2, x29, #0x8
    ab0c:	add	x3, sp, #0x10
    ab10:	add	x4, sp, #0x8
    ab14:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ab18:	cbz	w0, ab4c <PyInit__testcapi@@Base+0x1990>
    ab1c:	ldur	x0, [x29, #-8]
    ab20:	ldp	x2, x1, [sp, #8]
    ab24:	bl	89d0 <_PyDict_GetItem_KnownHash@plt>
    ab28:	cbz	x0, ab44 <PyInit__testcapi@@Base+0x1988>
    ab2c:	ldr	x8, [x0]
    ab30:	add	x8, x8, #0x1
    ab34:	str	x8, [x0]
    ab38:	ldp	x29, x30, [sp, #32]
    ab3c:	add	sp, sp, #0x30
    ab40:	ret
    ab44:	bl	8980 <PyErr_Occurred@plt>
    ab48:	cbz	x0, ab5c <PyInit__testcapi@@Base+0x19a0>
    ab4c:	mov	x0, xzr
    ab50:	ldp	x29, x30, [sp, #32]
    ab54:	add	sp, sp, #0x30
    ab58:	ret
    ab5c:	ldr	x0, [sp, #16]
    ab60:	bl	8650 <_PyErr_SetKeyError@plt>
    ab64:	mov	x0, xzr
    ab68:	ldp	x29, x30, [sp, #32]
    ab6c:	add	sp, sp, #0x30
    ab70:	ret
    ab74:	stp	x29, x30, [sp, #-16]!
    ab78:	mov	x29, sp
    ab7c:	ldr	x8, [x1, #8]
    ab80:	ldrb	w9, [x8, #171]
    ab84:	tbnz	w9, #5, abb0 <PyInit__testcapi@@Base+0x19f4>
    ab88:	adrp	x9, 27000 <PyInit__testcapi@@Base+0x1de44>
    ab8c:	ldr	x9, [x9, #3952]
    ab90:	ldr	x2, [x8, #24]
    ab94:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ab98:	add	x1, x1, #0x727
    ab9c:	ldr	x0, [x9]
    aba0:	bl	8e60 <PyErr_Format@plt>
    aba4:	mov	x0, xzr
    aba8:	ldp	x29, x30, [sp], #16
    abac:	ret
    abb0:	ldr	x8, [x1, #40]
    abb4:	cmp	x8, #0x0
    abb8:	cset	w0, ne  // ne = any
    abbc:	ldp	x29, x30, [sp], #16
    abc0:	b	88d0 <PyBool_FromLong@plt>
    abc4:	stp	x29, x30, [sp, #-32]!
    abc8:	stp	x20, x19, [sp, #16]
    abcc:	mov	x29, sp
    abd0:	adrp	x20, 2a000 <PyInit__testcapi@@Base+0x20e44>
    abd4:	ldr	x8, [x20, #2464]
    abd8:	cbz	x8, abfc <PyInit__testcapi@@Base+0x1a40>
    abdc:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    abe0:	ldr	x0, [x0, #4016]
    abe4:	ldr	x8, [x0]
    abe8:	add	x8, x8, #0x1
    abec:	str	x8, [x0]
    abf0:	ldp	x20, x19, [sp, #16]
    abf4:	ldp	x29, x30, [sp], #32
    abf8:	ret
    abfc:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ac00:	add	x0, x0, #0x898
    ac04:	bl	8cf0 <_PyObject_New@plt>
    ac08:	cbz	x0, ac4c <PyInit__testcapi@@Base+0x1a90>
    ac0c:	ldr	x8, [x20, #2464]
    ac10:	mov	x19, x0
    ac14:	cbz	x8, ac74 <PyInit__testcapi@@Base+0x1ab8>
    ac18:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    ac1c:	ldr	x0, [x8, #3552]
    ac20:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ac24:	add	x1, x1, #0x790
    ac28:	bl	8670 <PyErr_SetString@plt>
    ac2c:	ldr	x8, [x19]
    ac30:	subs	x8, x8, #0x1
    ac34:	str	x8, [x19]
    ac38:	b.eq	ad50 <PyInit__testcapi@@Base+0x1b94>  // b.none
    ac3c:	mov	x0, xzr
    ac40:	ldp	x20, x19, [sp, #16]
    ac44:	ldp	x29, x30, [sp], #32
    ac48:	ret
    ac4c:	bl	88c0 <PyErr_Clear@plt>
    ac50:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    ac54:	ldr	x0, [x8, #3552]
    ac58:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ac5c:	add	x1, x1, #0x75c
    ac60:	bl	8670 <PyErr_SetString@plt>
    ac64:	mov	x0, xzr
    ac68:	ldp	x20, x19, [sp, #16]
    ac6c:	ldp	x29, x30, [sp], #32
    ac70:	ret
    ac74:	mov	x0, x19
    ac78:	bl	8b00 <PyObject_Hash@plt>
    ac7c:	cmn	x0, #0x1
    ac80:	b.eq	acdc <PyInit__testcapi@@Base+0x1b20>  // b.none
    ac84:	ldr	x8, [x20, #2464]
    ac88:	cbz	x8, ad1c <PyInit__testcapi@@Base+0x1b60>
    ac8c:	adrp	x9, 27000 <PyInit__testcapi@@Base+0x1de44>
    ac90:	ldr	x9, [x9, #4008]
    ac94:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ac98:	ldr	x8, [x8, #2320]
    ac9c:	ldr	x9, [x9, #120]
    aca0:	cmp	x8, x9
    aca4:	b.eq	ad68 <PyInit__testcapi@@Base+0x1bac>  // b.none
    aca8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    acac:	ldr	x0, [x8, #3552]
    acb0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    acb4:	add	x1, x1, #0x833
    acb8:	bl	8670 <PyErr_SetString@plt>
    acbc:	ldr	x8, [x19]
    acc0:	subs	x8, x8, #0x1
    acc4:	str	x8, [x19]
    acc8:	b.eq	ad50 <PyInit__testcapi@@Base+0x1b94>  // b.none
    accc:	mov	x0, xzr
    acd0:	ldp	x20, x19, [sp, #16]
    acd4:	ldp	x29, x30, [sp], #32
    acd8:	ret
    acdc:	bl	8980 <PyErr_Occurred@plt>
    ace0:	cbz	x0, ac84 <PyInit__testcapi@@Base+0x1ac8>
    ace4:	bl	88c0 <PyErr_Clear@plt>
    ace8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    acec:	ldr	x0, [x8, #3552]
    acf0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    acf4:	add	x1, x1, #0x7c6
    acf8:	bl	8670 <PyErr_SetString@plt>
    acfc:	ldr	x8, [x19]
    ad00:	subs	x8, x8, #0x1
    ad04:	str	x8, [x19]
    ad08:	b.eq	ad50 <PyInit__testcapi@@Base+0x1b94>  // b.none
    ad0c:	mov	x0, xzr
    ad10:	ldp	x20, x19, [sp, #16]
    ad14:	ldp	x29, x30, [sp], #32
    ad18:	ret
    ad1c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    ad20:	ldr	x0, [x8, #3552]
    ad24:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ad28:	add	x1, x1, #0x7f8
    ad2c:	bl	8670 <PyErr_SetString@plt>
    ad30:	ldr	x8, [x19]
    ad34:	subs	x8, x8, #0x1
    ad38:	str	x8, [x19]
    ad3c:	b.eq	ad50 <PyInit__testcapi@@Base+0x1b94>  // b.none
    ad40:	mov	x0, xzr
    ad44:	ldp	x20, x19, [sp, #16]
    ad48:	ldp	x29, x30, [sp], #32
    ad4c:	ret
    ad50:	mov	x0, x19
    ad54:	bl	8560 <_Py_Dealloc@plt>
    ad58:	mov	x0, xzr
    ad5c:	ldp	x20, x19, [sp, #16]
    ad60:	ldp	x29, x30, [sp], #32
    ad64:	ret
    ad68:	ldr	x8, [x19]
    ad6c:	subs	x8, x8, #0x1
    ad70:	str	x8, [x19]
    ad74:	b.ne	abdc <PyInit__testcapi@@Base+0x1a20>  // b.any
    ad78:	mov	x0, x19
    ad7c:	bl	8560 <_Py_Dealloc@plt>
    ad80:	b	abdc <PyInit__testcapi@@Base+0x1a20>
    ad84:	stp	x29, x30, [sp, #-80]!
    ad88:	stp	x26, x25, [sp, #16]
    ad8c:	stp	x24, x23, [sp, #32]
    ad90:	stp	x22, x21, [sp, #48]
    ad94:	stp	x20, x19, [sp, #64]
    ad98:	mov	x29, sp
    ad9c:	mov	w24, #0xaaab                	// #43691
    ada0:	mov	w22, wzr
    ada4:	mov	w23, #0x1                   	// #1
    ada8:	movk	w24, #0xaaaa, lsl #16
    adac:	mov	w25, wzr
    adb0:	neg	x26, x23
    adb4:	b	adc4 <PyInit__testcapi@@Base+0x1c08>
    adb8:	add	w25, w25, #0x1
    adbc:	cmp	w25, #0x6
    adc0:	b.eq	ae78 <PyInit__testcapi@@Base+0x1cbc>  // b.none
    adc4:	umull	x8, w25, w24
    adc8:	lsr	x8, x8, #33
    adcc:	add	w8, w8, w8, lsl #1
    add0:	cmp	w25, #0x3
    add4:	mvn	w8, w8
    add8:	csel	x9, x23, x26, cc  // cc = lo, ul, last
    addc:	add	w8, w8, w25
    ade0:	add	x19, x9, w8, sxtw
    ade4:	mov	x0, x19
    ade8:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    adec:	cbz	x0, aed8 <PyInit__testcapi@@Base+0x1d1c>
    adf0:	mov	x20, x0
    adf4:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    adf8:	mov	x21, x0
    adfc:	cmn	x0, #0x1
    ae00:	b.ne	ae0c <PyInit__testcapi@@Base+0x1c50>  // b.any
    ae04:	bl	8980 <PyErr_Occurred@plt>
    ae08:	cbnz	x0, af68 <PyInit__testcapi@@Base+0x1dac>
    ae0c:	cmp	x21, x19
    ae10:	b.ne	aefc <PyInit__testcapi@@Base+0x1d40>  // b.any
    ae14:	ldr	x8, [x20]
    ae18:	subs	x8, x8, #0x1
    ae1c:	str	x8, [x20]
    ae20:	b.ne	ae2c <PyInit__testcapi@@Base+0x1c70>  // b.any
    ae24:	mov	x0, x20
    ae28:	bl	8560 <_Py_Dealloc@plt>
    ae2c:	mov	x0, x19
    ae30:	bl	8840 <PyLong_FromLong@plt>
    ae34:	cbz	x0, af20 <PyInit__testcapi@@Base+0x1d64>
    ae38:	mov	x20, x0
    ae3c:	bl	89a0 <PyLong_AsLong@plt>
    ae40:	mov	x21, x0
    ae44:	cmn	x0, #0x1
    ae48:	b.ne	ae54 <PyInit__testcapi@@Base+0x1c98>  // b.any
    ae4c:	bl	8980 <PyErr_Occurred@plt>
    ae50:	cbnz	x0, af8c <PyInit__testcapi@@Base+0x1dd0>
    ae54:	cmp	x21, x19
    ae58:	b.ne	af44 <PyInit__testcapi@@Base+0x1d88>  // b.any
    ae5c:	ldr	x8, [x20]
    ae60:	subs	x8, x8, #0x1
    ae64:	str	x8, [x20]
    ae68:	b.ne	adb8 <PyInit__testcapi@@Base+0x1bfc>  // b.any
    ae6c:	mov	x0, x20
    ae70:	bl	8560 <_Py_Dealloc@plt>
    ae74:	b	adb8 <PyInit__testcapi@@Base+0x1bfc>
    ae78:	add	w22, w22, #0x1
    ae7c:	cmp	w22, #0x41
    ae80:	lsl	x23, x23, #1
    ae84:	b.ne	adac <PyInit__testcapi@@Base+0x1bf0>  // b.any
    ae88:	mov	w0, #0x1                   	// #1
    ae8c:	bl	8840 <PyLong_FromLong@plt>
    ae90:	mov	x19, x0
    ae94:	cbz	x0, afd0 <PyInit__testcapi@@Base+0x1e14>
    ae98:	mov	x0, x19
    ae9c:	bl	8270 <PyNumber_Negative@plt>
    aea0:	cbz	x0, b270 <PyInit__testcapi@@Base+0x20b4>
    aea4:	mov	x20, x0
    aea8:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    aeac:	cmn	x0, #0x1
    aeb0:	b.eq	aff8 <PyInit__testcapi@@Base+0x1e3c>  // b.none
    aeb4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    aeb8:	ldr	x0, [x8, #3552]
    aebc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    aec0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    aec4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    aec8:	add	x1, x1, #0xba2
    aecc:	add	x2, x2, #0xb38
    aed0:	add	x3, x3, #0x90b
    aed4:	b	afac <PyInit__testcapi@@Base+0x1df0>
    aed8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    aedc:	ldr	x0, [x8, #3552]
    aee0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    aee4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    aee8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    aeec:	add	x1, x1, #0xba2
    aef0:	add	x2, x2, #0xb38
    aef4:	add	x3, x3, #0x868
    aef8:	b	afac <PyInit__testcapi@@Base+0x1df0>
    aefc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    af00:	ldr	x0, [x8, #3552]
    af04:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    af08:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    af0c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    af10:	add	x1, x1, #0xba2
    af14:	add	x2, x2, #0xb38
    af18:	add	x3, x3, #0x8a6
    af1c:	b	afac <PyInit__testcapi@@Base+0x1df0>
    af20:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    af24:	ldr	x0, [x8, #3552]
    af28:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    af2c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    af30:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    af34:	add	x1, x1, #0xba2
    af38:	add	x2, x2, #0xb38
    af3c:	add	x3, x3, #0x86a
    af40:	b	afac <PyInit__testcapi@@Base+0x1df0>
    af44:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    af48:	ldr	x0, [x8, #3552]
    af4c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    af50:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    af54:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    af58:	add	x1, x1, #0xba2
    af5c:	add	x2, x2, #0xb38
    af60:	add	x3, x3, #0x8a8
    af64:	b	afac <PyInit__testcapi@@Base+0x1df0>
    af68:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    af6c:	ldr	x0, [x8, #3552]
    af70:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    af74:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    af78:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    af7c:	add	x1, x1, #0xba2
    af80:	add	x2, x2, #0xb38
    af84:	add	x3, x3, #0x888
    af88:	b	afac <PyInit__testcapi@@Base+0x1df0>
    af8c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    af90:	ldr	x0, [x8, #3552]
    af94:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    af98:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    af9c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    afa0:	add	x1, x1, #0xba2
    afa4:	add	x2, x2, #0xb38
    afa8:	add	x3, x3, #0x88a
    afac:	bl	8e60 <PyErr_Format@plt>
    afb0:	mov	x19, xzr
    afb4:	mov	x0, x19
    afb8:	ldp	x20, x19, [sp, #64]
    afbc:	ldp	x22, x21, [sp, #48]
    afc0:	ldp	x24, x23, [sp, #32]
    afc4:	ldp	x26, x25, [sp, #16]
    afc8:	ldp	x29, x30, [sp], #80
    afcc:	ret
    afd0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    afd4:	ldr	x0, [x8, #3552]
    afd8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    afdc:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    afe0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    afe4:	add	x1, x1, #0xba2
    afe8:	add	x2, x2, #0xb38
    afec:	add	x3, x3, #0x8bf
    aff0:	bl	8e60 <PyErr_Format@plt>
    aff4:	b	afb4 <PyInit__testcapi@@Base+0x1df8>
    aff8:	bl	8980 <PyErr_Occurred@plt>
    affc:	cbz	x0, aeb4 <PyInit__testcapi@@Base+0x1cf8>
    b000:	adrp	x22, 27000 <PyInit__testcapi@@Base+0x1de44>
    b004:	ldr	x22, [x22, #4000]
    b008:	ldr	x0, [x22]
    b00c:	bl	8760 <PyErr_ExceptionMatches@plt>
    b010:	cbz	w0, b0a0 <PyInit__testcapi@@Base+0x1ee4>
    b014:	bl	88c0 <PyErr_Clear@plt>
    b018:	ldr	x8, [x20]
    b01c:	subs	x8, x8, #0x1
    b020:	str	x8, [x20]
    b024:	b.ne	b030 <PyInit__testcapi@@Base+0x1e74>  // b.any
    b028:	mov	x0, x20
    b02c:	bl	8560 <_Py_Dealloc@plt>
    b030:	mov	w0, #0x40                  	// #64
    b034:	bl	8840 <PyLong_FromLong@plt>
    b038:	cbz	x0, b0c4 <PyInit__testcapi@@Base+0x1f08>
    b03c:	mov	x21, x0
    b040:	mov	x0, x19
    b044:	mov	x1, x21
    b048:	bl	8390 <PyNumber_Lshift@plt>
    b04c:	ldr	x8, [x21]
    b050:	mov	x20, x0
    b054:	subs	x8, x8, #0x1
    b058:	str	x8, [x21]
    b05c:	b.ne	b068 <PyInit__testcapi@@Base+0x1eac>  // b.any
    b060:	mov	x0, x21
    b064:	bl	8560 <_Py_Dealloc@plt>
    b068:	cbz	x20, b0e8 <PyInit__testcapi@@Base+0x1f2c>
    b06c:	mov	x0, x20
    b070:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    b074:	cmn	x0, #0x1
    b078:	b.eq	b10c <PyInit__testcapi@@Base+0x1f50>  // b.none
    b07c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b080:	ldr	x0, [x8, #3552]
    b084:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b088:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b08c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b090:	add	x1, x1, #0xba2
    b094:	add	x2, x2, #0xb38
    b098:	add	x3, x3, #0x99c
    b09c:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b0a0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b0a4:	ldr	x0, [x8, #3552]
    b0a8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b0ac:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b0b0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b0b4:	add	x1, x1, #0xba2
    b0b8:	add	x2, x2, #0xb38
    b0bc:	add	x3, x3, #0x934
    b0c0:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b0c4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b0c8:	ldr	x0, [x8, #3552]
    b0cc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b0d0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b0d4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b0d8:	add	x1, x1, #0xba2
    b0dc:	add	x2, x2, #0xb38
    b0e0:	add	x3, x3, #0x8bf
    b0e4:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b0e8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b0ec:	ldr	x0, [x8, #3552]
    b0f0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b0f4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b0f8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b0fc:	add	x1, x1, #0xba2
    b100:	add	x2, x2, #0xb38
    b104:	add	x3, x3, #0x977
    b108:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b10c:	bl	8980 <PyErr_Occurred@plt>
    b110:	cbz	x0, b07c <PyInit__testcapi@@Base+0x1ec0>
    b114:	ldr	x0, [x22]
    b118:	mov	x23, x22
    b11c:	bl	8760 <PyErr_ExceptionMatches@plt>
    b120:	cbz	w0, b188 <PyInit__testcapi@@Base+0x1fcc>
    b124:	bl	88c0 <PyErr_Clear@plt>
    b128:	mov	x0, x20
    b12c:	mov	x1, x19
    b130:	bl	8b60 <PyNumber_Rshift@plt>
    b134:	ldr	x8, [x20]
    b138:	mov	x21, x0
    b13c:	subs	x8, x8, #0x1
    b140:	str	x8, [x20]
    b144:	b.ne	b150 <PyInit__testcapi@@Base+0x1f94>  // b.any
    b148:	mov	x0, x20
    b14c:	bl	8560 <_Py_Dealloc@plt>
    b150:	cbz	x21, b1ac <PyInit__testcapi@@Base+0x1ff0>
    b154:	mov	x0, x21
    b158:	bl	89a0 <PyLong_AsLong@plt>
    b15c:	cmn	x0, #0x1
    b160:	b.eq	b1d0 <PyInit__testcapi@@Base+0x2014>  // b.none
    b164:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b168:	ldr	x0, [x8, #3552]
    b16c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b170:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b174:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b178:	add	x1, x1, #0xba2
    b17c:	add	x2, x2, #0xb38
    b180:	add	x3, x3, #0xa39
    b184:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b188:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b18c:	ldr	x0, [x8, #3552]
    b190:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b194:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b198:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b19c:	add	x1, x1, #0xba2
    b1a0:	add	x2, x2, #0xb38
    b1a4:	add	x3, x3, #0x9cb
    b1a8:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b1ac:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b1b0:	ldr	x0, [x8, #3552]
    b1b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b1b8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b1bc:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b1c0:	add	x1, x1, #0xba2
    b1c4:	add	x2, x2, #0xb38
    b1c8:	add	x3, x3, #0xa14
    b1cc:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b1d0:	bl	8980 <PyErr_Occurred@plt>
    b1d4:	cbz	x0, b164 <PyInit__testcapi@@Base+0x1fa8>
    b1d8:	ldr	x0, [x23]
    b1dc:	bl	8760 <PyErr_ExceptionMatches@plt>
    b1e0:	cbz	w0, b294 <PyInit__testcapi@@Base+0x20d8>
    b1e4:	bl	88c0 <PyErr_Clear@plt>
    b1e8:	mov	x0, x21
    b1ec:	bl	8270 <PyNumber_Negative@plt>
    b1f0:	ldr	x8, [x21]
    b1f4:	mov	x22, x0
    b1f8:	subs	x8, x8, #0x1
    b1fc:	str	x8, [x21]
    b200:	b.ne	b20c <PyInit__testcapi@@Base+0x2050>  // b.any
    b204:	mov	x0, x21
    b208:	bl	8560 <_Py_Dealloc@plt>
    b20c:	cbz	x22, b270 <PyInit__testcapi@@Base+0x20b4>
    b210:	mov	x0, x22
    b214:	mov	x1, x19
    b218:	bl	8fe0 <PyNumber_Subtract@plt>
    b21c:	ldr	x8, [x22]
    b220:	mov	x20, x0
    b224:	subs	x8, x8, #0x1
    b228:	str	x8, [x22]
    b22c:	b.ne	b238 <PyInit__testcapi@@Base+0x207c>  // b.any
    b230:	mov	x0, x22
    b234:	bl	8560 <_Py_Dealloc@plt>
    b238:	cbz	x20, b2b8 <PyInit__testcapi@@Base+0x20fc>
    b23c:	mov	x0, x20
    b240:	bl	89a0 <PyLong_AsLong@plt>
    b244:	cmn	x0, #0x1
    b248:	b.eq	b2dc <PyInit__testcapi@@Base+0x2120>  // b.none
    b24c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b250:	ldr	x0, [x8, #3552]
    b254:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b258:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b25c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b260:	add	x1, x1, #0xba2
    b264:	add	x2, x2, #0xb38
    b268:	add	x3, x3, #0xad0
    b26c:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b270:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b274:	ldr	x0, [x8, #3552]
    b278:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b27c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b280:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b284:	add	x1, x1, #0xba2
    b288:	add	x2, x2, #0xb38
    b28c:	add	x3, x3, #0x8e4
    b290:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b294:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b298:	ldr	x0, [x8, #3552]
    b29c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b2a0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b2a4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b2a8:	add	x1, x1, #0xba2
    b2ac:	add	x2, x2, #0xb38
    b2b0:	add	x3, x3, #0xa64
    b2b4:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b2b8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b2bc:	ldr	x0, [x8, #3552]
    b2c0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b2c4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b2c8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b2cc:	add	x1, x1, #0xba2
    b2d0:	add	x2, x2, #0xb38
    b2d4:	add	x3, x3, #0xaa9
    b2d8:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b2dc:	bl	8980 <PyErr_Occurred@plt>
    b2e0:	cbz	x0, b24c <PyInit__testcapi@@Base+0x2090>
    b2e4:	ldr	x0, [x23]
    b2e8:	bl	8760 <PyErr_ExceptionMatches@plt>
    b2ec:	cbz	w0, b368 <PyInit__testcapi@@Base+0x21ac>
    b2f0:	bl	88c0 <PyErr_Clear@plt>
    b2f4:	ldr	x8, [x20]
    b2f8:	subs	x8, x8, #0x1
    b2fc:	str	x8, [x20]
    b300:	b.ne	b30c <PyInit__testcapi@@Base+0x2150>  // b.any
    b304:	mov	x0, x20
    b308:	bl	8560 <_Py_Dealloc@plt>
    b30c:	ldr	x8, [x19]
    b310:	subs	x8, x8, #0x1
    b314:	str	x8, [x19]
    b318:	b.ne	b324 <PyInit__testcapi@@Base+0x2168>  // b.any
    b31c:	mov	x0, x19
    b320:	bl	8560 <_Py_Dealloc@plt>
    b324:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    b328:	ldr	x0, [x0, #4016]
    b32c:	ldr	x8, [x0]
    b330:	add	x8, x8, #0x1
    b334:	str	x8, [x0]
    b338:	bl	89a0 <PyLong_AsLong@plt>
    b33c:	cmn	x0, #0x1
    b340:	b.eq	b38c <PyInit__testcapi@@Base+0x21d0>  // b.none
    b344:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b348:	ldr	x0, [x8, #3552]
    b34c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b350:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b354:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b358:	add	x1, x1, #0xba2
    b35c:	add	x2, x2, #0xb38
    b360:	add	x3, x3, #0xb46
    b364:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b368:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b36c:	ldr	x0, [x8, #3552]
    b370:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b374:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b378:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b37c:	add	x1, x1, #0xba2
    b380:	add	x2, x2, #0xb38
    b384:	add	x3, x3, #0xafe
    b388:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b38c:	bl	8980 <PyErr_Occurred@plt>
    b390:	cbz	x0, b344 <PyInit__testcapi@@Base+0x2188>
    b394:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    b398:	ldr	x20, [x20, #3952]
    b39c:	ldr	x0, [x20]
    b3a0:	bl	8760 <PyErr_ExceptionMatches@plt>
    b3a4:	cbz	w0, b404 <PyInit__testcapi@@Base+0x2248>
    b3a8:	bl	88c0 <PyErr_Clear@plt>
    b3ac:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
    b3b0:	ldr	x19, [x19, #4016]
    b3b4:	mov	x0, x19
    b3b8:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    b3bc:	cmn	x0, #0x1
    b3c0:	b.ne	b344 <PyInit__testcapi@@Base+0x2188>  // b.any
    b3c4:	bl	8980 <PyErr_Occurred@plt>
    b3c8:	cbz	x0, b344 <PyInit__testcapi@@Base+0x2188>
    b3cc:	ldr	x0, [x20]
    b3d0:	bl	8760 <PyErr_ExceptionMatches@plt>
    b3d4:	cbz	w0, b404 <PyInit__testcapi@@Base+0x2248>
    b3d8:	bl	88c0 <PyErr_Clear@plt>
    b3dc:	ldr	x8, [x19]
    b3e0:	subs	x8, x8, #0x1
    b3e4:	str	x8, [x19]
    b3e8:	b.ne	b3f8 <PyInit__testcapi@@Base+0x223c>  // b.any
    b3ec:	mov	x0, x19
    b3f0:	bl	8560 <_Py_Dealloc@plt>
    b3f4:	ldr	x8, [x19]
    b3f8:	add	x8, x8, #0x1
    b3fc:	str	x8, [x19]
    b400:	b	afb4 <PyInit__testcapi@@Base+0x1df8>
    b404:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b408:	ldr	x0, [x8, #3552]
    b40c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b410:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b414:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b418:	add	x1, x1, #0xba2
    b41c:	add	x2, x2, #0xb38
    b420:	add	x3, x3, #0xb69
    b424:	b	afac <PyInit__testcapi@@Base+0x1df0>
    b428:	stp	x29, x30, [sp, #-32]!
    b42c:	str	x19, [sp, #16]
    b430:	mov	x29, sp
    b434:	mov	x0, xzr
    b438:	bl	8840 <PyLong_FromLong@plt>
    b43c:	ldr	x8, [x0]
    b440:	cmp	x0, #0x0
    b444:	mov	w9, #0x1                   	// #1
    b448:	cinc	x9, x9, ne  // ne = any
    b44c:	add	x8, x8, x9
    b450:	mov	x19, x0
    b454:	subs	x8, x8, #0x1
    b458:	str	x8, [x0]
    b45c:	b.eq	b498 <PyInit__testcapi@@Base+0x22dc>  // b.none
    b460:	subs	x8, x8, #0x1
    b464:	str	x8, [x19]
    b468:	b.eq	b4b0 <PyInit__testcapi@@Base+0x22f4>  // b.none
    b46c:	subs	x8, x8, #0x1
    b470:	str	x8, [x19]
    b474:	b.eq	b4c8 <PyInit__testcapi@@Base+0x230c>  // b.none
    b478:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    b47c:	ldr	x0, [x0, #4016]
    b480:	ldr	x19, [sp, #16]
    b484:	ldr	x8, [x0]
    b488:	add	x8, x8, #0x1
    b48c:	str	x8, [x0]
    b490:	ldp	x29, x30, [sp], #32
    b494:	ret
    b498:	mov	x0, x19
    b49c:	bl	8560 <_Py_Dealloc@plt>
    b4a0:	ldr	x8, [x19]
    b4a4:	subs	x8, x8, #0x1
    b4a8:	str	x8, [x19]
    b4ac:	b.ne	b46c <PyInit__testcapi@@Base+0x22b0>  // b.any
    b4b0:	mov	x0, x19
    b4b4:	bl	8560 <_Py_Dealloc@plt>
    b4b8:	ldr	x8, [x19]
    b4bc:	subs	x8, x8, #0x1
    b4c0:	str	x8, [x19]
    b4c4:	b.ne	b478 <PyInit__testcapi@@Base+0x22bc>  // b.any
    b4c8:	mov	x0, x19
    b4cc:	bl	8560 <_Py_Dealloc@plt>
    b4d0:	b	b478 <PyInit__testcapi@@Base+0x22bc>
    b4d4:	stp	x29, x30, [sp, #-32]!
    b4d8:	str	x19, [sp, #16]
    b4dc:	mov	x29, sp
    b4e0:	mov	x0, xzr
    b4e4:	bl	8840 <PyLong_FromLong@plt>
    b4e8:	ldr	x8, [x0]
    b4ec:	mov	x19, x0
    b4f0:	adds	x8, x8, #0x1
    b4f4:	str	x8, [x0]
    b4f8:	b.cs	b534 <PyInit__testcapi@@Base+0x2378>  // b.hs, b.nlast
    b4fc:	subs	x8, x8, #0x1
    b500:	str	x8, [x19]
    b504:	b.eq	b54c <PyInit__testcapi@@Base+0x2390>  // b.none
    b508:	subs	x8, x8, #0x1
    b50c:	str	x8, [x19]
    b510:	b.eq	b564 <PyInit__testcapi@@Base+0x23a8>  // b.none
    b514:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    b518:	ldr	x0, [x0, #4016]
    b51c:	ldr	x19, [sp, #16]
    b520:	ldr	x8, [x0]
    b524:	add	x8, x8, #0x1
    b528:	str	x8, [x0]
    b52c:	ldp	x29, x30, [sp], #32
    b530:	ret
    b534:	mov	x0, x19
    b538:	bl	8560 <_Py_Dealloc@plt>
    b53c:	ldr	x8, [x19]
    b540:	subs	x8, x8, #0x1
    b544:	str	x8, [x19]
    b548:	b.ne	b508 <PyInit__testcapi@@Base+0x234c>  // b.any
    b54c:	mov	x0, x19
    b550:	bl	8560 <_Py_Dealloc@plt>
    b554:	ldr	x8, [x19]
    b558:	subs	x8, x8, #0x1
    b55c:	str	x8, [x19]
    b560:	b.ne	b514 <PyInit__testcapi@@Base+0x2358>  // b.any
    b564:	mov	x0, x19
    b568:	bl	8560 <_Py_Dealloc@plt>
    b56c:	b	b514 <PyInit__testcapi@@Base+0x2358>
    b570:	stp	x29, x30, [sp, #-16]!
    b574:	mov	x29, sp
    b578:	mov	x0, xzr
    b57c:	bl	8840 <PyLong_FromLong@plt>
    b580:	cbz	x0, b598 <PyInit__testcapi@@Base+0x23dc>
    b584:	ldr	x8, [x0]
    b588:	subs	x8, x8, #0x1
    b58c:	str	x8, [x0]
    b590:	b.ne	b598 <PyInit__testcapi@@Base+0x23dc>  // b.any
    b594:	bl	8560 <_Py_Dealloc@plt>
    b598:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    b59c:	ldr	x0, [x0, #4016]
    b5a0:	ldr	x8, [x0]
    b5a4:	add	x8, x8, #0x1
    b5a8:	str	x8, [x0]
    b5ac:	ldp	x29, x30, [sp], #16
    b5b0:	ret
    b5b4:	stp	x29, x30, [sp, #-16]!
    b5b8:	mov	x29, sp
    b5bc:	mov	x0, xzr
    b5c0:	bl	8840 <PyLong_FromLong@plt>
    b5c4:	ldr	x8, [x0]
    b5c8:	subs	x8, x8, #0x1
    b5cc:	str	x8, [x0]
    b5d0:	b.ne	b5d8 <PyInit__testcapi@@Base+0x241c>  // b.any
    b5d4:	bl	8560 <_Py_Dealloc@plt>
    b5d8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    b5dc:	ldr	x0, [x0, #4016]
    b5e0:	ldr	x8, [x0]
    b5e4:	add	x8, x8, #0x1
    b5e8:	str	x8, [x0]
    b5ec:	ldp	x29, x30, [sp], #16
    b5f0:	ret
    b5f4:	sub	sp, sp, #0x60
    b5f8:	stp	x29, x30, [sp, #80]
    b5fc:	add	x29, sp, #0x50
    b600:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
    b604:	adrp	x9, 15000 <PyInit__testcapi@@Base+0xbe44>
    b608:	add	x8, x8, #0xba9
    b60c:	add	x9, x9, #0xbad
    b610:	stp	x8, x9, [sp]
    b614:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
    b618:	adrp	x9, 15000 <PyInit__testcapi@@Base+0xbe44>
    b61c:	add	x8, x8, #0xbc9
    b620:	add	x9, x9, #0xbde
    b624:	adrp	x10, 15000 <PyInit__testcapi@@Base+0xbe44>
    b628:	stp	x8, x9, [x29, #-32]
    b62c:	mov	x8, sp
    b630:	add	x10, x10, #0xbb7
    b634:	stur	x8, [x29, #-16]
    b638:	mov	w8, #0x1                   	// #1
    b63c:	sub	x0, x29, #0x20
    b640:	stp	xzr, xzr, [sp, #32]
    b644:	stp	xzr, x10, [sp, #16]
    b648:	stur	w8, [x29, #-8]
    b64c:	bl	8e40 <PyStructSequence_NewType@plt>
    b650:	ldr	x8, [x0]
    b654:	subs	x8, x8, #0x1
    b658:	str	x8, [x0]
    b65c:	b.ne	b664 <PyInit__testcapi@@Base+0x24a8>  // b.any
    b660:	bl	8560 <_Py_Dealloc@plt>
    b664:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    b668:	ldr	x0, [x0, #4016]
    b66c:	ldp	x29, x30, [sp, #80]
    b670:	ldr	x8, [x0]
    b674:	add	x8, x8, #0x1
    b678:	str	x8, [x0]
    b67c:	add	sp, sp, #0x60
    b680:	ret
    b684:	stp	x29, x30, [sp, #-32]!
    b688:	str	x19, [sp, #16]
    b68c:	mov	x29, sp
    b690:	mov	x0, xzr
    b694:	bl	8840 <PyLong_FromLong@plt>
    b698:	mov	x19, x0
    b69c:	bl	8b40 <Py_IncRef@plt>
    b6a0:	mov	x0, x19
    b6a4:	bl	8be0 <Py_DecRef@plt>
    b6a8:	mov	x0, x19
    b6ac:	bl	8be0 <Py_DecRef@plt>
    b6b0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    b6b4:	ldr	x0, [x0, #4016]
    b6b8:	ldr	x19, [sp, #16]
    b6bc:	ldr	x8, [x0]
    b6c0:	add	x8, x8, #0x1
    b6c4:	str	x8, [x0]
    b6c8:	ldp	x29, x30, [sp], #32
    b6cc:	ret
    b6d0:	stp	x29, x30, [sp, #-48]!
    b6d4:	str	x21, [sp, #16]
    b6d8:	stp	x20, x19, [sp, #32]
    b6dc:	mov	x29, sp
    b6e0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    b6e4:	add	x0, x0, #0xc49
    b6e8:	mov	w2, #0x10                  	// #16
    b6ec:	mov	x1, xzr
    b6f0:	bl	8f90 <PyLong_FromString@plt>
    b6f4:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    b6f8:	mov	w8, #0x4d2                 	// #1234
    b6fc:	add	x1, x29, #0x1c
    b700:	mov	x19, x0
    b704:	str	w8, [x29, #28]
    b708:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b70c:	ldr	x8, [x19]
    b710:	mov	x20, x0
    b714:	subs	x8, x8, #0x1
    b718:	str	x8, [x19]
    b71c:	b.eq	b72c <PyInit__testcapi@@Base+0x2570>  // b.none
    b720:	cmn	x20, #0x1
    b724:	b.ne	b73c <PyInit__testcapi@@Base+0x2580>  // b.any
    b728:	b	b774 <PyInit__testcapi@@Base+0x25b8>
    b72c:	mov	x0, x19
    b730:	bl	8560 <_Py_Dealloc@plt>
    b734:	cmn	x20, #0x1
    b738:	b.eq	b774 <PyInit__testcapi@@Base+0x25b8>  // b.none
    b73c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b740:	ldr	x0, [x8, #3552]
    b744:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b748:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b74c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b750:	add	x1, x1, #0xba2
    b754:	add	x2, x2, #0xbe2
    b758:	add	x3, x3, #0xc0f
    b75c:	bl	8e60 <PyErr_Format@plt>
    b760:	mov	x0, xzr
    b764:	ldp	x20, x19, [sp, #32]
    b768:	ldr	x21, [sp, #16]
    b76c:	ldp	x29, x30, [sp], #48
    b770:	ret
    b774:	bl	8980 <PyErr_Occurred@plt>
    b778:	cbz	x0, b790 <PyInit__testcapi@@Base+0x25d4>
    b77c:	mov	x0, xzr
    b780:	ldp	x20, x19, [sp, #32]
    b784:	ldr	x21, [sp, #16]
    b788:	ldp	x29, x30, [sp], #48
    b78c:	ret
    b790:	ldr	w8, [x29, #28]
    b794:	cmp	w8, #0x1
    b798:	b.ne	b8e8 <PyInit__testcapi@@Base+0x272c>  // b.any
    b79c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    b7a0:	bl	8840 <PyLong_FromLong@plt>
    b7a4:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    b7a8:	mov	x19, x0
    b7ac:	mov	w0, #0x1                   	// #1
    b7b0:	bl	8840 <PyLong_FromLong@plt>
    b7b4:	cbz	x0, b964 <PyInit__testcapi@@Base+0x27a8>
    b7b8:	mov	x21, x0
    b7bc:	mov	x0, x19
    b7c0:	mov	x1, x21
    b7c4:	bl	8490 <PyNumber_Add@plt>
    b7c8:	ldr	x8, [x21]
    b7cc:	mov	x20, x0
    b7d0:	subs	x8, x8, #0x1
    b7d4:	str	x8, [x21]
    b7d8:	b.eq	b7f4 <PyInit__testcapi@@Base+0x2638>  // b.none
    b7dc:	ldr	x8, [x19]
    b7e0:	subs	x8, x8, #0x1
    b7e4:	str	x8, [x19]
    b7e8:	b.eq	b80c <PyInit__testcapi@@Base+0x2650>  // b.none
    b7ec:	cbnz	x20, b818 <PyInit__testcapi@@Base+0x265c>
    b7f0:	b	b77c <PyInit__testcapi@@Base+0x25c0>
    b7f4:	mov	x0, x21
    b7f8:	bl	8560 <_Py_Dealloc@plt>
    b7fc:	ldr	x8, [x19]
    b800:	subs	x8, x8, #0x1
    b804:	str	x8, [x19]
    b808:	b.ne	b7ec <PyInit__testcapi@@Base+0x2630>  // b.any
    b80c:	mov	x0, x19
    b810:	bl	8560 <_Py_Dealloc@plt>
    b814:	cbz	x20, b77c <PyInit__testcapi@@Base+0x25c0>
    b818:	add	x1, x29, #0x1c
    b81c:	mov	x0, x20
    b820:	str	wzr, [x29, #28]
    b824:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b828:	ldr	x8, [x20]
    b82c:	mov	x19, x0
    b830:	subs	x8, x8, #0x1
    b834:	str	x8, [x20]
    b838:	b.ne	b844 <PyInit__testcapi@@Base+0x2688>  // b.any
    b83c:	mov	x0, x20
    b840:	bl	8560 <_Py_Dealloc@plt>
    b844:	cmn	x19, #0x1
    b848:	b.ne	b73c <PyInit__testcapi@@Base+0x2580>  // b.any
    b84c:	bl	8980 <PyErr_Occurred@plt>
    b850:	cbnz	x0, b77c <PyInit__testcapi@@Base+0x25c0>
    b854:	ldr	w8, [x29, #28]
    b858:	cmp	w8, #0x1
    b85c:	b.ne	b8e8 <PyInit__testcapi@@Base+0x272c>  // b.any
    b860:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    b864:	add	x0, x0, #0xc48
    b868:	mov	w2, #0x10                  	// #16
    b86c:	mov	x1, xzr
    b870:	bl	8f90 <PyLong_FromString@plt>
    b874:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    b878:	mov	w8, #0x4d2                 	// #1234
    b87c:	add	x1, x29, #0x1c
    b880:	mov	x19, x0
    b884:	str	w8, [x29, #28]
    b888:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b88c:	ldr	x8, [x19]
    b890:	mov	x20, x0
    b894:	subs	x8, x8, #0x1
    b898:	str	x8, [x19]
    b89c:	b.ne	b8a8 <PyInit__testcapi@@Base+0x26ec>  // b.any
    b8a0:	mov	x0, x19
    b8a4:	bl	8560 <_Py_Dealloc@plt>
    b8a8:	cmn	x20, #0x1
    b8ac:	b.ne	b73c <PyInit__testcapi@@Base+0x2580>  // b.any
    b8b0:	bl	8980 <PyErr_Occurred@plt>
    b8b4:	cbnz	x0, b77c <PyInit__testcapi@@Base+0x25c0>
    b8b8:	ldr	w8, [x29, #28]
    b8bc:	cmn	w8, #0x1
    b8c0:	b.eq	b90c <PyInit__testcapi@@Base+0x2750>  // b.none
    b8c4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b8c8:	ldr	x0, [x8, #3552]
    b8cc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b8d0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b8d4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b8d8:	add	x1, x1, #0xba2
    b8dc:	add	x2, x2, #0xbe2
    b8e0:	add	x3, x3, #0xc62
    b8e4:	b	b75c <PyInit__testcapi@@Base+0x25a0>
    b8e8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    b8ec:	ldr	x0, [x8, #3552]
    b8f0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    b8f4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b8f8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    b8fc:	add	x1, x1, #0xba2
    b900:	add	x2, x2, #0xbe2
    b904:	add	x3, x3, #0xc2e
    b908:	b	b75c <PyInit__testcapi@@Base+0x25a0>
    b90c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    b910:	bl	8840 <PyLong_FromLong@plt>
    b914:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    b918:	mov	x19, x0
    b91c:	mov	w0, #0x1                   	// #1
    b920:	bl	8840 <PyLong_FromLong@plt>
    b924:	cbz	x0, b964 <PyInit__testcapi@@Base+0x27a8>
    b928:	mov	x21, x0
    b92c:	mov	x0, x19
    b930:	mov	x1, x21
    b934:	bl	8fe0 <PyNumber_Subtract@plt>
    b938:	ldr	x8, [x21]
    b93c:	mov	x20, x0
    b940:	subs	x8, x8, #0x1
    b944:	str	x8, [x21]
    b948:	b.eq	b980 <PyInit__testcapi@@Base+0x27c4>  // b.none
    b94c:	ldr	x8, [x19]
    b950:	subs	x8, x8, #0x1
    b954:	str	x8, [x19]
    b958:	b.eq	b998 <PyInit__testcapi@@Base+0x27dc>  // b.none
    b95c:	cbnz	x20, b9a4 <PyInit__testcapi@@Base+0x27e8>
    b960:	b	b77c <PyInit__testcapi@@Base+0x25c0>
    b964:	ldr	x8, [x19]
    b968:	subs	x8, x8, #0x1
    b96c:	str	x8, [x19]
    b970:	b.ne	b77c <PyInit__testcapi@@Base+0x25c0>  // b.any
    b974:	mov	x0, x19
    b978:	bl	8560 <_Py_Dealloc@plt>
    b97c:	b	b77c <PyInit__testcapi@@Base+0x25c0>
    b980:	mov	x0, x21
    b984:	bl	8560 <_Py_Dealloc@plt>
    b988:	ldr	x8, [x19]
    b98c:	subs	x8, x8, #0x1
    b990:	str	x8, [x19]
    b994:	b.ne	b95c <PyInit__testcapi@@Base+0x27a0>  // b.any
    b998:	mov	x0, x19
    b99c:	bl	8560 <_Py_Dealloc@plt>
    b9a0:	cbz	x20, b77c <PyInit__testcapi@@Base+0x25c0>
    b9a4:	add	x1, x29, #0x1c
    b9a8:	mov	x0, x20
    b9ac:	str	wzr, [x29, #28]
    b9b0:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b9b4:	ldr	x8, [x20]
    b9b8:	mov	x19, x0
    b9bc:	subs	x8, x8, #0x1
    b9c0:	str	x8, [x20]
    b9c4:	b.ne	b9d0 <PyInit__testcapi@@Base+0x2814>  // b.any
    b9c8:	mov	x0, x20
    b9cc:	bl	8560 <_Py_Dealloc@plt>
    b9d0:	cmn	x19, #0x1
    b9d4:	b.ne	b73c <PyInit__testcapi@@Base+0x2580>  // b.any
    b9d8:	bl	8980 <PyErr_Occurred@plt>
    b9dc:	cbnz	x0, b77c <PyInit__testcapi@@Base+0x25c0>
    b9e0:	ldr	w8, [x29, #28]
    b9e4:	cmn	w8, #0x1
    b9e8:	b.ne	b8c4 <PyInit__testcapi@@Base+0x2708>  // b.any
    b9ec:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    b9f0:	add	x0, x0, #0xcb2
    b9f4:	mov	w2, #0x10                  	// #16
    b9f8:	mov	x1, xzr
    b9fc:	bl	8f90 <PyLong_FromString@plt>
    ba00:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    ba04:	mov	w8, #0x4d2                 	// #1234
    ba08:	add	x1, x29, #0x1c
    ba0c:	mov	x19, x0
    ba10:	str	w8, [x29, #28]
    ba14:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    ba18:	ldr	x8, [x19]
    ba1c:	mov	x20, x0
    ba20:	subs	x8, x8, #0x1
    ba24:	str	x8, [x19]
    ba28:	b.ne	ba34 <PyInit__testcapi@@Base+0x2878>  // b.any
    ba2c:	mov	x0, x19
    ba30:	bl	8560 <_Py_Dealloc@plt>
    ba34:	cmp	x20, #0xff
    ba38:	b.eq	ba70 <PyInit__testcapi@@Base+0x28b4>  // b.none
    ba3c:	cmn	x20, #0x1
    ba40:	b.ne	ba4c <PyInit__testcapi@@Base+0x2890>  // b.any
    ba44:	bl	8980 <PyErr_Occurred@plt>
    ba48:	cbnz	x0, b77c <PyInit__testcapi@@Base+0x25c0>
    ba4c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    ba50:	ldr	x0, [x8, #3552]
    ba54:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ba58:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    ba5c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ba60:	add	x1, x1, #0xba2
    ba64:	add	x2, x2, #0xbe2
    ba68:	add	x3, x3, #0xc7d
    ba6c:	b	b75c <PyInit__testcapi@@Base+0x25a0>
    ba70:	ldr	w8, [x29, #28]
    ba74:	cbz	w8, ba9c <PyInit__testcapi@@Base+0x28e0>
    ba78:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    ba7c:	ldr	x0, [x8, #3552]
    ba80:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ba84:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    ba88:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ba8c:	add	x1, x1, #0xba2
    ba90:	add	x2, x2, #0xbe2
    ba94:	add	x3, x3, #0xc98
    ba98:	b	b75c <PyInit__testcapi@@Base+0x25a0>
    ba9c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    baa0:	add	x0, x0, #0xcb1
    baa4:	mov	w2, #0x10                  	// #16
    baa8:	mov	x1, xzr
    baac:	bl	8f90 <PyLong_FromString@plt>
    bab0:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    bab4:	add	x1, x29, #0x1c
    bab8:	mov	x19, x0
    babc:	str	wzr, [x29, #28]
    bac0:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    bac4:	ldr	x8, [x19]
    bac8:	mov	x20, x0
    bacc:	subs	x8, x8, #0x1
    bad0:	str	x8, [x19]
    bad4:	b.ne	bae0 <PyInit__testcapi@@Base+0x2924>  // b.any
    bad8:	mov	x0, x19
    badc:	bl	8560 <_Py_Dealloc@plt>
    bae0:	cmn	x20, #0xff
    bae4:	b.eq	baf4 <PyInit__testcapi@@Base+0x2938>  // b.none
    bae8:	cmn	x20, #0x1
    baec:	b.eq	ba44 <PyInit__testcapi@@Base+0x2888>  // b.none
    baf0:	b	ba4c <PyInit__testcapi@@Base+0x2890>
    baf4:	ldr	w8, [x29, #28]
    baf8:	cbz	w8, bb20 <PyInit__testcapi@@Base+0x2964>
    bafc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bb00:	ldr	x0, [x8, #3552]
    bb04:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb08:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bb0c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb10:	add	x1, x1, #0xba2
    bb14:	add	x2, x2, #0xbe2
    bb18:	add	x3, x3, #0xcb5
    bb1c:	b	b75c <PyInit__testcapi@@Base+0x25a0>
    bb20:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    bb24:	bl	8840 <PyLong_FromLong@plt>
    bb28:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    bb2c:	mov	w8, #0x4d2                 	// #1234
    bb30:	add	x1, x29, #0x1c
    bb34:	mov	x19, x0
    bb38:	str	w8, [x29, #28]
    bb3c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    bb40:	ldr	x8, [x19]
    bb44:	mov	x20, x0
    bb48:	subs	x8, x8, #0x1
    bb4c:	str	x8, [x19]
    bb50:	b.ne	bb5c <PyInit__testcapi@@Base+0x29a0>  // b.any
    bb54:	mov	x0, x19
    bb58:	bl	8560 <_Py_Dealloc@plt>
    bb5c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    bb60:	cmp	x20, x8
    bb64:	b.eq	bb9c <PyInit__testcapi@@Base+0x29e0>  // b.none
    bb68:	cmn	x20, #0x1
    bb6c:	b.ne	bb78 <PyInit__testcapi@@Base+0x29bc>  // b.any
    bb70:	bl	8980 <PyErr_Occurred@plt>
    bb74:	cbnz	x0, b77c <PyInit__testcapi@@Base+0x25c0>
    bb78:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bb7c:	ldr	x0, [x8, #3552]
    bb80:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb84:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bb88:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb8c:	add	x1, x1, #0xba2
    bb90:	add	x2, x2, #0xbe2
    bb94:	add	x3, x3, #0xcd2
    bb98:	b	b75c <PyInit__testcapi@@Base+0x25a0>
    bb9c:	ldr	w8, [x29, #28]
    bba0:	cbnz	w8, ba78 <PyInit__testcapi@@Base+0x28bc>
    bba4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    bba8:	bl	8840 <PyLong_FromLong@plt>
    bbac:	cbz	x0, b764 <PyInit__testcapi@@Base+0x25a8>
    bbb0:	add	x1, x29, #0x1c
    bbb4:	mov	x19, x0
    bbb8:	str	wzr, [x29, #28]
    bbbc:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    bbc0:	ldr	x8, [x19]
    bbc4:	mov	x20, x0
    bbc8:	subs	x8, x8, #0x1
    bbcc:	str	x8, [x19]
    bbd0:	b.ne	bbdc <PyInit__testcapi@@Base+0x2a20>  // b.any
    bbd4:	mov	x0, x19
    bbd8:	bl	8560 <_Py_Dealloc@plt>
    bbdc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    bbe0:	cmp	x20, x8
    bbe4:	b.eq	bc1c <PyInit__testcapi@@Base+0x2a60>  // b.none
    bbe8:	cmn	x20, #0x1
    bbec:	b.ne	bbf8 <PyInit__testcapi@@Base+0x2a3c>  // b.any
    bbf0:	bl	8980 <PyErr_Occurred@plt>
    bbf4:	cbnz	x0, b77c <PyInit__testcapi@@Base+0x25c0>
    bbf8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bbfc:	ldr	x0, [x8, #3552]
    bc00:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bc04:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bc08:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bc0c:	add	x1, x1, #0xba2
    bc10:	add	x2, x2, #0xbe2
    bc14:	add	x3, x3, #0xcf1
    bc18:	b	b75c <PyInit__testcapi@@Base+0x25a0>
    bc1c:	ldr	w8, [x29, #28]
    bc20:	cbnz	w8, ba78 <PyInit__testcapi@@Base+0x28bc>
    bc24:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    bc28:	ldr	x0, [x0, #4016]
    bc2c:	ldr	x8, [x0]
    bc30:	add	x8, x8, #0x1
    bc34:	str	x8, [x0]
    bc38:	ldp	x20, x19, [sp, #32]
    bc3c:	ldr	x21, [sp, #16]
    bc40:	ldp	x29, x30, [sp], #48
    bc44:	ret
    bc48:	stp	x29, x30, [sp, #-16]!
    bc4c:	mov	x29, sp
    bc50:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    bc54:	ldr	x0, [x0, #4016]
    bc58:	ldr	x8, [x0]
    bc5c:	add	x8, x8, #0x1
    bc60:	str	x8, [x0]
    bc64:	bl	8bd0 <PyLong_AsDouble@plt>
    bc68:	fmov	d1, #-1.000000000000000000e+00
    bc6c:	fcmp	d0, d1
    bc70:	b.eq	bca4 <PyInit__testcapi@@Base+0x2ae8>  // b.none
    bc74:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bc78:	ldr	x0, [x8, #3552]
    bc7c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bc80:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bc84:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bc88:	add	x1, x1, #0xba2
    bc8c:	add	x2, x2, #0xbf9
    bc90:	add	x3, x3, #0xd10
    bc94:	bl	8e60 <PyErr_Format@plt>
    bc98:	mov	x0, xzr
    bc9c:	ldp	x29, x30, [sp], #16
    bca0:	ret
    bca4:	bl	8980 <PyErr_Occurred@plt>
    bca8:	cbz	x0, bc74 <PyInit__testcapi@@Base+0x2ab8>
    bcac:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    bcb0:	ldr	x8, [x8, #3952]
    bcb4:	ldr	x0, [x8]
    bcb8:	bl	8760 <PyErr_ExceptionMatches@plt>
    bcbc:	cbz	w0, bcd4 <PyInit__testcapi@@Base+0x2b18>
    bcc0:	bl	88c0 <PyErr_Clear@plt>
    bcc4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    bcc8:	ldr	x0, [x0, #4016]
    bccc:	ldp	x29, x30, [sp], #16
    bcd0:	ret
    bcd4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bcd8:	ldr	x0, [x8, #3552]
    bcdc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bce0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bce4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bce8:	add	x1, x1, #0xba2
    bcec:	add	x2, x2, #0xbf9
    bcf0:	add	x3, x3, #0xd36
    bcf4:	bl	8e60 <PyErr_Format@plt>
    bcf8:	mov	x0, xzr
    bcfc:	ldp	x29, x30, [sp], #16
    bd00:	ret
    bd04:	stp	x29, x30, [sp, #-32]!
    bd08:	str	x19, [sp, #16]
    bd0c:	mov	x29, sp
    bd10:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    bd14:	ldr	x0, [x0, #4016]
    bd18:	ldr	x8, [x0]
    bd1c:	add	x8, x8, #0x1
    bd20:	str	x8, [x0]
    bd24:	bl	8930 <PyLong_AsSize_t@plt>
    bd28:	cmn	x0, #0x1
    bd2c:	b.eq	bd64 <PyInit__testcapi@@Base+0x2ba8>  // b.none
    bd30:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bd34:	ldr	x0, [x8, #3552]
    bd38:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bd3c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bd40:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bd44:	add	x1, x1, #0xba2
    bd48:	add	x2, x2, #0xc0d
    bd4c:	add	x3, x3, #0xd72
    bd50:	bl	8e60 <PyErr_Format@plt>
    bd54:	mov	x0, xzr
    bd58:	ldr	x19, [sp, #16]
    bd5c:	ldp	x29, x30, [sp], #32
    bd60:	ret
    bd64:	bl	8980 <PyErr_Occurred@plt>
    bd68:	cbz	x0, bd30 <PyInit__testcapi@@Base+0x2b74>
    bd6c:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
    bd70:	ldr	x19, [x19, #3952]
    bd74:	ldr	x0, [x19]
    bd78:	bl	8760 <PyErr_ExceptionMatches@plt>
    bd7c:	cbz	w0, bdbc <PyInit__testcapi@@Base+0x2c00>
    bd80:	bl	88c0 <PyErr_Clear@plt>
    bd84:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    bd88:	ldr	x0, [x0, #4016]
    bd8c:	bl	8850 <PyLong_AsSsize_t@plt>
    bd90:	cmn	x0, #0x1
    bd94:	b.eq	bde0 <PyInit__testcapi@@Base+0x2c24>  // b.none
    bd98:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bd9c:	ldr	x0, [x8, #3552]
    bda0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bda4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bda8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bdac:	add	x1, x1, #0xba2
    bdb0:	add	x2, x2, #0xc0d
    bdb4:	add	x3, x3, #0xdd4
    bdb8:	b	bd50 <PyInit__testcapi@@Base+0x2b94>
    bdbc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bdc0:	ldr	x0, [x8, #3552]
    bdc4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bdc8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bdcc:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bdd0:	add	x1, x1, #0xba2
    bdd4:	add	x2, x2, #0xc0d
    bdd8:	add	x3, x3, #0xd98
    bddc:	b	bd50 <PyInit__testcapi@@Base+0x2b94>
    bde0:	bl	8980 <PyErr_Occurred@plt>
    bde4:	cbz	x0, bd98 <PyInit__testcapi@@Base+0x2bdc>
    bde8:	ldr	x0, [x19]
    bdec:	bl	8760 <PyErr_ExceptionMatches@plt>
    bdf0:	cbz	w0, be0c <PyInit__testcapi@@Base+0x2c50>
    bdf4:	bl	88c0 <PyErr_Clear@plt>
    bdf8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    bdfc:	ldr	x0, [x0, #4016]
    be00:	ldr	x19, [sp, #16]
    be04:	ldp	x29, x30, [sp], #32
    be08:	ret
    be0c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    be10:	ldr	x0, [x8, #3552]
    be14:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    be18:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    be1c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    be20:	add	x1, x1, #0xba2
    be24:	add	x2, x2, #0xc0d
    be28:	add	x3, x3, #0xdfb
    be2c:	b	bd50 <PyInit__testcapi@@Base+0x2b94>
    be30:	stp	x29, x30, [sp, #-16]!
    be34:	mov	x29, sp
    be38:	mov	x0, xzr
    be3c:	bl	84f0 <PyLong_AsUnsignedLongLongMask@plt>
    be40:	cmn	x0, #0x1
    be44:	b.eq	be78 <PyInit__testcapi@@Base+0x2cbc>  // b.none
    be48:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    be4c:	ldr	x0, [x8, #3552]
    be50:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    be54:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    be58:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    be5c:	add	x1, x1, #0xba2
    be60:	add	x2, x2, #0xc21
    be64:	add	x3, x3, #0xe38
    be68:	bl	8e60 <PyErr_Format@plt>
    be6c:	mov	x0, xzr
    be70:	ldp	x29, x30, [sp], #16
    be74:	ret
    be78:	bl	8980 <PyErr_Occurred@plt>
    be7c:	cbz	x0, be48 <PyInit__testcapi@@Base+0x2c8c>
    be80:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    be84:	ldr	x8, [x8, #3848]
    be88:	ldr	x0, [x8]
    be8c:	bl	8760 <PyErr_ExceptionMatches@plt>
    be90:	cbz	w0, beb4 <PyInit__testcapi@@Base+0x2cf8>
    be94:	bl	88c0 <PyErr_Clear@plt>
    be98:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    be9c:	ldr	x0, [x0, #4016]
    bea0:	ldr	x8, [x0]
    bea4:	add	x8, x8, #0x1
    bea8:	str	x8, [x0]
    beac:	ldp	x29, x30, [sp], #16
    beb0:	ret
    beb4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    beb8:	ldr	x0, [x8, #3552]
    bebc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bec0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bec4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bec8:	add	x1, x1, #0xba2
    becc:	add	x2, x2, #0xc21
    bed0:	add	x3, x3, #0xe6c
    bed4:	bl	8e60 <PyErr_Format@plt>
    bed8:	mov	x0, xzr
    bedc:	ldp	x29, x30, [sp], #16
    bee0:	ret
    bee4:	stp	x29, x30, [sp, #-64]!
    bee8:	str	x23, [sp, #16]
    beec:	stp	x22, x21, [sp, #32]
    bef0:	stp	x20, x19, [sp, #48]
    bef4:	mov	x29, sp
    bef8:	adrp	x23, 14000 <PyInit__testcapi@@Base+0xae44>
    befc:	mov	x22, xzr
    bf00:	add	x23, x23, #0x3c8
    bf04:	ldr	x0, [x23, x22]
    bf08:	bl	8840 <PyLong_FromLong@plt>
    bf0c:	cbz	x0, bfcc <PyInit__testcapi@@Base+0x2e10>
    bf10:	mov	x19, x0
    bf14:	bl	85f0 <_PyLong_NumBits@plt>
    bf18:	mov	x20, x0
    bf1c:	mov	x0, x19
    bf20:	bl	85b0 <_PyLong_Sign@plt>
    bf24:	ldr	x8, [x19]
    bf28:	mov	w21, w0
    bf2c:	subs	x8, x8, #0x1
    bf30:	str	x8, [x19]
    bf34:	b.ne	bf40 <PyInit__testcapi@@Base+0x2d84>  // b.any
    bf38:	mov	x0, x19
    bf3c:	bl	8560 <_Py_Dealloc@plt>
    bf40:	add	x8, x23, x22
    bf44:	ldr	x9, [x8, #8]
    bf48:	cmp	x20, x9
    bf4c:	b.ne	bf80 <PyInit__testcapi@@Base+0x2dc4>  // b.any
    bf50:	ldr	w8, [x8, #16]
    bf54:	cmp	w21, w8
    bf58:	b.ne	bfa4 <PyInit__testcapi@@Base+0x2de8>  // b.any
    bf5c:	add	x22, x22, #0x18
    bf60:	cmp	x22, #0x168
    bf64:	b.ne	bf04 <PyInit__testcapi@@Base+0x2d48>  // b.any
    bf68:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    bf6c:	ldr	x0, [x0, #4016]
    bf70:	ldr	x8, [x0]
    bf74:	add	x8, x8, #0x1
    bf78:	str	x8, [x0]
    bf7c:	b	bfcc <PyInit__testcapi@@Base+0x2e10>
    bf80:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bf84:	ldr	x0, [x8, #3552]
    bf88:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bf8c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bf90:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bf94:	add	x1, x1, #0xba2
    bf98:	add	x2, x2, #0xc46
    bf9c:	add	x3, x3, #0xeb8
    bfa0:	b	bfc4 <PyInit__testcapi@@Base+0x2e08>
    bfa4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    bfa8:	ldr	x0, [x8, #3552]
    bfac:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bfb0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bfb4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bfb8:	add	x1, x1, #0xba2
    bfbc:	add	x2, x2, #0xc46
    bfc0:	add	x3, x3, #0xed9
    bfc4:	bl	8e60 <PyErr_Format@plt>
    bfc8:	mov	x0, xzr
    bfcc:	ldp	x20, x19, [sp, #48]
    bfd0:	ldp	x22, x21, [sp, #32]
    bfd4:	ldr	x23, [sp, #16]
    bfd8:	ldp	x29, x30, [sp], #64
    bfdc:	ret
    bfe0:	sub	sp, sp, #0x30
    bfe4:	stp	x29, x30, [sp, #16]
    bfe8:	stp	x20, x19, [sp, #32]
    bfec:	add	x29, sp, #0x10
    bff0:	mov	w0, #0x1                   	// #1
    bff4:	bl	8920 <PyTuple_New@plt>
    bff8:	cbz	x0, c054 <PyInit__testcapi@@Base+0x2e98>
    bffc:	mov	x19, x0
    c000:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c004:	add	x0, x0, #0xc49
    c008:	mov	w2, #0x10                  	// #16
    c00c:	mov	x1, xzr
    c010:	bl	8f90 <PyLong_FromString@plt>
    c014:	cbz	x0, c054 <PyInit__testcapi@@Base+0x2e98>
    c018:	mov	x20, x0
    c01c:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    c020:	cmn	x0, #0x1
    c024:	str	x0, [sp, #8]
    c028:	b.eq	c064 <PyInit__testcapi@@Base+0x2ea8>  // b.none
    c02c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    c030:	ldr	x0, [x8, #3552]
    c034:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c038:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c03c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c040:	add	x1, x1, #0xba2
    c044:	add	x2, x2, #0xf3f
    c048:	add	x3, x3, #0xef7
    c04c:	bl	8e60 <PyErr_Format@plt>
    c050:	mov	x0, xzr
    c054:	ldp	x20, x19, [sp, #32]
    c058:	ldp	x29, x30, [sp, #16]
    c05c:	add	sp, sp, #0x30
    c060:	ret
    c064:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c068:	add	x1, x1, #0xf3d
    c06c:	add	x2, sp, #0x8
    c070:	mov	x0, x19
    c074:	str	x20, [x19, #24]
    c078:	str	xzr, [sp, #8]
    c07c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c080:	cbz	w0, c160 <PyInit__testcapi@@Base+0x2fa4>
    c084:	ldr	x8, [sp, #8]
    c088:	cmn	x8, #0x1
    c08c:	b.eq	c0b4 <PyInit__testcapi@@Base+0x2ef8>  // b.none
    c090:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    c094:	ldr	x0, [x8, #3552]
    c098:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c09c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c0a0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c0a4:	add	x1, x1, #0xba2
    c0a8:	add	x2, x2, #0xf3f
    c0ac:	add	x3, x3, #0xf4b
    c0b0:	b	c04c <PyInit__testcapi@@Base+0x2e90>
    c0b4:	ldr	x8, [x20]
    c0b8:	subs	x8, x8, #0x1
    c0bc:	str	x8, [x20]
    c0c0:	b.ne	c0cc <PyInit__testcapi@@Base+0x2f10>  // b.any
    c0c4:	mov	x0, x20
    c0c8:	bl	8560 <_Py_Dealloc@plt>
    c0cc:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c0d0:	add	x0, x0, #0xf7c
    c0d4:	mov	w2, #0x10                  	// #16
    c0d8:	mov	x1, xzr
    c0dc:	bl	8f90 <PyLong_FromString@plt>
    c0e0:	cbz	x0, c054 <PyInit__testcapi@@Base+0x2e98>
    c0e4:	mov	x20, x0
    c0e8:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    c0ec:	cmn	x0, #0x42
    c0f0:	str	x0, [sp, #8]
    c0f4:	b.ne	c174 <PyInit__testcapi@@Base+0x2fb8>  // b.any
    c0f8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c0fc:	add	x1, x1, #0xf3d
    c100:	add	x2, sp, #0x8
    c104:	mov	x0, x19
    c108:	str	x20, [x19, #24]
    c10c:	str	xzr, [sp, #8]
    c110:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c114:	cbz	w0, c160 <PyInit__testcapi@@Base+0x2fa4>
    c118:	ldr	x8, [sp, #8]
    c11c:	cmn	x8, #0x42
    c120:	b.ne	c198 <PyInit__testcapi@@Base+0x2fdc>  // b.any
    c124:	ldr	x8, [x19]
    c128:	subs	x8, x8, #0x1
    c12c:	str	x8, [x19]
    c130:	b.ne	c13c <PyInit__testcapi@@Base+0x2f80>  // b.any
    c134:	mov	x0, x19
    c138:	bl	8560 <_Py_Dealloc@plt>
    c13c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    c140:	ldr	x0, [x0, #4016]
    c144:	ldr	x8, [x0]
    c148:	add	x8, x8, #0x1
    c14c:	str	x8, [x0]
    c150:	ldp	x20, x19, [sp, #32]
    c154:	ldp	x29, x30, [sp, #16]
    c158:	add	sp, sp, #0x30
    c15c:	ret
    c160:	mov	x0, xzr
    c164:	ldp	x20, x19, [sp, #32]
    c168:	ldp	x29, x30, [sp, #16]
    c16c:	add	sp, sp, #0x30
    c170:	ret
    c174:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    c178:	ldr	x0, [x8, #3552]
    c17c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c180:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c184:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c188:	add	x1, x1, #0xba2
    c18c:	add	x2, x2, #0xf3f
    c190:	add	x3, x3, #0xf98
    c194:	b	c04c <PyInit__testcapi@@Base+0x2e90>
    c198:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    c19c:	ldr	x0, [x8, #3552]
    c1a0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c1a4:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c1a8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c1ac:	add	x1, x1, #0xba2
    c1b0:	add	x2, x2, #0xf3f
    c1b4:	add	x3, x3, #0xfe1
    c1b8:	b	c04c <PyInit__testcapi@@Base+0x2e90>
    c1bc:	stp	x29, x30, [sp, #-48]!
    c1c0:	str	x21, [sp, #16]
    c1c4:	stp	x20, x19, [sp, #32]
    c1c8:	mov	x29, sp
    c1cc:	mov	x0, xzr
    c1d0:	bl	8920 <PyTuple_New@plt>
    c1d4:	cbz	x0, c254 <PyInit__testcapi@@Base+0x3098>
    c1d8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    c1dc:	add	x1, x1, #0x15
    c1e0:	mov	x19, x0
    c1e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c1e8:	cbz	w0, c240 <PyInit__testcapi@@Base+0x3084>
    c1ec:	bl	8c20 <PyDict_New@plt>
    c1f0:	cbz	x0, c264 <PyInit__testcapi@@Base+0x30a8>
    c1f4:	mov	x20, x0
    c1f8:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    c1fc:	adrp	x3, 2b000 <PyInit__testcapi@@Base+0x21e44>
    c200:	add	x2, x2, #0x15
    c204:	add	x3, x3, #0xdc0
    c208:	mov	x0, x19
    c20c:	mov	x1, x20
    c210:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    c214:	ldr	x8, [x19]
    c218:	mov	w21, w0
    c21c:	subs	x8, x8, #0x1
    c220:	str	x8, [x19]
    c224:	b.eq	c280 <PyInit__testcapi@@Base+0x30c4>  // b.none
    c228:	ldr	x8, [x20]
    c22c:	subs	x8, x8, #0x1
    c230:	str	x8, [x20]
    c234:	b.eq	c298 <PyInit__testcapi@@Base+0x30dc>  // b.none
    c238:	cbnz	w21, c2a4 <PyInit__testcapi@@Base+0x30e8>
    c23c:	b	c2d0 <PyInit__testcapi@@Base+0x3114>
    c240:	ldr	x8, [x19]
    c244:	subs	x8, x8, #0x1
    c248:	str	x8, [x19]
    c24c:	b.eq	c2c8 <PyInit__testcapi@@Base+0x310c>  // b.none
    c250:	mov	x0, xzr
    c254:	ldp	x20, x19, [sp, #32]
    c258:	ldr	x21, [sp, #16]
    c25c:	ldp	x29, x30, [sp], #48
    c260:	ret
    c264:	ldr	x8, [x19]
    c268:	subs	x8, x8, #0x1
    c26c:	str	x8, [x19]
    c270:	b.ne	c2a4 <PyInit__testcapi@@Base+0x30e8>  // b.any
    c274:	mov	x0, x19
    c278:	bl	8560 <_Py_Dealloc@plt>
    c27c:	b	c2a4 <PyInit__testcapi@@Base+0x30e8>
    c280:	mov	x0, x19
    c284:	bl	8560 <_Py_Dealloc@plt>
    c288:	ldr	x8, [x20]
    c28c:	subs	x8, x8, #0x1
    c290:	str	x8, [x20]
    c294:	b.ne	c238 <PyInit__testcapi@@Base+0x307c>  // b.any
    c298:	mov	x0, x20
    c29c:	bl	8560 <_Py_Dealloc@plt>
    c2a0:	cbz	w21, c2d0 <PyInit__testcapi@@Base+0x3114>
    c2a4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    c2a8:	ldr	x0, [x0, #4016]
    c2ac:	ldr	x8, [x0]
    c2b0:	add	x8, x8, #0x1
    c2b4:	str	x8, [x0]
    c2b8:	ldp	x20, x19, [sp, #32]
    c2bc:	ldr	x21, [sp, #16]
    c2c0:	ldp	x29, x30, [sp], #48
    c2c4:	ret
    c2c8:	mov	x0, x19
    c2cc:	bl	8560 <_Py_Dealloc@plt>
    c2d0:	mov	x0, xzr
    c2d4:	ldp	x20, x19, [sp, #32]
    c2d8:	ldr	x21, [sp, #16]
    c2dc:	ldp	x29, x30, [sp], #48
    c2e0:	ret
    c2e4:	stp	x29, x30, [sp, #-80]!
    c2e8:	str	x28, [sp, #16]
    c2ec:	stp	x24, x23, [sp, #32]
    c2f0:	stp	x22, x21, [sp, #48]
    c2f4:	stp	x20, x19, [sp, #64]
    c2f8:	mov	x29, sp
    c2fc:	sub	sp, sp, #0x1c0
    c300:	mov	x0, x1
    c304:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    c308:	add	x1, x1, #0x2b
    c30c:	add	x2, x29, #0x18
    c310:	sub	x3, x29, #0x8
    c314:	sub	x4, x29, #0x10
    c318:	sub	x5, x29, #0x18
    c31c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c320:	cbz	w0, c364 <PyInit__testcapi@@Base+0x31a8>
    c324:	ldur	x8, [x29, #-24]
    c328:	adrp	x10, 27000 <PyInit__testcapi@@Base+0x1de44>
    c32c:	ldr	x9, [x8, #8]
    c330:	ldr	x10, [x10, #4064]
    c334:	cmp	x9, x10
    c338:	b.eq	c388 <PyInit__testcapi@@Base+0x31cc>  // b.none
    c33c:	adrp	x10, 27000 <PyInit__testcapi@@Base+0x1de44>
    c340:	ldr	x10, [x10, #3872]
    c344:	cmp	x9, x10
    c348:	b.eq	c388 <PyInit__testcapi@@Base+0x31cc>  // b.none
    c34c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    c350:	ldr	x8, [x8, #3944]
    c354:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    c358:	add	x1, x1, #0x49
    c35c:	ldr	x0, [x8]
    c360:	bl	8670 <PyErr_SetString@plt>
    c364:	mov	x19, xzr
    c368:	mov	x0, x19
    c36c:	add	sp, sp, #0x1c0
    c370:	ldp	x20, x19, [sp, #64]
    c374:	ldp	x22, x21, [sp, #48]
    c378:	ldp	x24, x23, [sp, #32]
    c37c:	ldr	x28, [sp, #16]
    c380:	ldp	x29, x30, [sp], #80
    c384:	ret
    c388:	movi	v0.2d, #0x0
    c38c:	stur	xzr, [x29, #-32]
    c390:	stp	q0, q0, [sp, #256]
    c394:	stp	q0, q0, [sp, #224]
    c398:	stp	q0, q0, [sp, #192]
    c39c:	stp	q0, q0, [sp, #160]
    c3a0:	stp	q0, q0, [sp, #128]
    c3a4:	stp	q0, q0, [sp, #96]
    c3a8:	stp	q0, q0, [sp, #64]
    c3ac:	stp	q0, q0, [sp, #32]
    c3b0:	stp	q0, q0, [x29, #-160]
    c3b4:	stp	q0, q0, [x29, #-128]
    c3b8:	stp	q0, q0, [x29, #-64]
    c3bc:	stp	q0, q0, [x29, #-96]
    c3c0:	ldr	x9, [x8, #16]
    c3c4:	cmp	x9, #0x8
    c3c8:	b.le	c3e8 <PyInit__testcapi@@Base+0x322c>
    c3cc:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    c3d0:	ldr	x8, [x8, #3944]
    c3d4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    c3d8:	add	x1, x1, #0x8d
    c3dc:	ldr	x0, [x8]
    c3e0:	bl	8670 <PyErr_SetString@plt>
    c3e4:	b	c4f0 <PyInit__testcapi@@Base+0x3334>
    c3e8:	cmp	x9, #0x1
    c3ec:	b.lt	c47c <PyInit__testcapi@@Base+0x32c0>  // b.tstop
    c3f0:	mov	w10, #0x1                   	// #1
    c3f4:	mov	x20, xzr
    c3f8:	mov	x19, xzr
    c3fc:	mov	x21, xzr
    c400:	sub	x22, x29, #0xa0
    c404:	sub	x23, x10, x9
    c408:	sub	x24, x29, #0x60
    c40c:	ldr	x9, [x8, #8]
    c410:	ldrb	w9, [x9, #171]
    c414:	tbz	w9, #1, c434 <PyInit__testcapi@@Base+0x3278>
    c418:	ldr	x8, [x8, #24]
    c41c:	add	x8, x8, x21, lsl #3
    c420:	ldr	x0, [x8]
    c424:	add	x1, x22, x20
    c428:	bl	8610 <PyUnicode_FSConverter@plt>
    c42c:	cbnz	w0, c448 <PyInit__testcapi@@Base+0x328c>
    c430:	b	c4d4 <PyInit__testcapi@@Base+0x3318>
    c434:	add	x8, x8, x20
    c438:	ldr	x0, [x8, #24]!
    c43c:	add	x1, x22, x20
    c440:	bl	8610 <PyUnicode_FSConverter@plt>
    c444:	cbz	w0, c4d4 <PyInit__testcapi@@Base+0x3318>
    c448:	ldr	x8, [x22, x20]
    c44c:	cmp	x23, x19
    c450:	add	x8, x8, #0x20
    c454:	str	x8, [x24, x20]
    c458:	b.eq	c47c <PyInit__testcapi@@Base+0x32c0>  // b.none
    c45c:	ldur	x8, [x29, #-24]
    c460:	add	x21, x21, #0x1
    c464:	sub	x19, x19, #0x1
    c468:	add	x20, x20, #0x8
    c46c:	ldr	x9, [x8, #8]
    c470:	ldrb	w9, [x9, #171]
    c474:	tbnz	w9, #1, c418 <PyInit__testcapi@@Base+0x325c>
    c478:	b	c434 <PyInit__testcapi@@Base+0x3278>
    c47c:	ldr	x0, [x29, #24]
    c480:	ldp	x2, x1, [x29, #-16]
    c484:	add	x8, sp, #0x20
    c488:	add	x5, x8, #0x20
    c48c:	add	x6, x8, #0x40
    c490:	add	x7, x8, #0x60
    c494:	add	x9, x8, #0x80
    c498:	add	x10, x8, #0xa0
    c49c:	add	x11, x8, #0xc0
    c4a0:	add	x8, x8, #0xe0
    c4a4:	sub	x3, x29, #0x60
    c4a8:	add	x4, sp, #0x20
    c4ac:	stp	x11, x8, [sp, #16]
    c4b0:	stp	x9, x10, [sp]
    c4b4:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    c4b8:	cbz	w0, c4f0 <PyInit__testcapi@@Base+0x3334>
    c4bc:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
    c4c0:	ldr	x19, [x19, #4016]
    c4c4:	ldr	x8, [x19]
    c4c8:	add	x8, x8, #0x1
    c4cc:	str	x8, [x19]
    c4d0:	b	c4f4 <PyInit__testcapi@@Base+0x3338>
    c4d4:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    c4d8:	ldr	x8, [x8, #3944]
    c4dc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    c4e0:	neg	x2, x19
    c4e4:	add	x1, x1, #0xc9
    c4e8:	ldr	x0, [x8]
    c4ec:	bl	8e60 <PyErr_Format@plt>
    c4f0:	mov	x19, xzr
    c4f4:	ldur	x0, [x29, #-160]
    c4f8:	cbz	x0, c510 <PyInit__testcapi@@Base+0x3354>
    c4fc:	ldr	x8, [x0]
    c500:	subs	x8, x8, #0x1
    c504:	str	x8, [x0]
    c508:	b.ne	c510 <PyInit__testcapi@@Base+0x3354>  // b.any
    c50c:	bl	8560 <_Py_Dealloc@plt>
    c510:	ldur	x0, [x29, #-152]
    c514:	cbz	x0, c52c <PyInit__testcapi@@Base+0x3370>
    c518:	ldr	x8, [x0]
    c51c:	subs	x8, x8, #0x1
    c520:	str	x8, [x0]
    c524:	b.ne	c52c <PyInit__testcapi@@Base+0x3370>  // b.any
    c528:	bl	8560 <_Py_Dealloc@plt>
    c52c:	ldur	x0, [x29, #-144]
    c530:	cbz	x0, c548 <PyInit__testcapi@@Base+0x338c>
    c534:	ldr	x8, [x0]
    c538:	subs	x8, x8, #0x1
    c53c:	str	x8, [x0]
    c540:	b.ne	c548 <PyInit__testcapi@@Base+0x338c>  // b.any
    c544:	bl	8560 <_Py_Dealloc@plt>
    c548:	ldur	x0, [x29, #-136]
    c54c:	cbz	x0, c564 <PyInit__testcapi@@Base+0x33a8>
    c550:	ldr	x8, [x0]
    c554:	subs	x8, x8, #0x1
    c558:	str	x8, [x0]
    c55c:	b.ne	c564 <PyInit__testcapi@@Base+0x33a8>  // b.any
    c560:	bl	8560 <_Py_Dealloc@plt>
    c564:	ldur	x0, [x29, #-128]
    c568:	cbz	x0, c580 <PyInit__testcapi@@Base+0x33c4>
    c56c:	ldr	x8, [x0]
    c570:	subs	x8, x8, #0x1
    c574:	str	x8, [x0]
    c578:	b.ne	c580 <PyInit__testcapi@@Base+0x33c4>  // b.any
    c57c:	bl	8560 <_Py_Dealloc@plt>
    c580:	ldur	x0, [x29, #-120]
    c584:	cbz	x0, c59c <PyInit__testcapi@@Base+0x33e0>
    c588:	ldr	x8, [x0]
    c58c:	subs	x8, x8, #0x1
    c590:	str	x8, [x0]
    c594:	b.ne	c59c <PyInit__testcapi@@Base+0x33e0>  // b.any
    c598:	bl	8560 <_Py_Dealloc@plt>
    c59c:	ldur	x0, [x29, #-112]
    c5a0:	cbz	x0, c5b8 <PyInit__testcapi@@Base+0x33fc>
    c5a4:	ldr	x8, [x0]
    c5a8:	subs	x8, x8, #0x1
    c5ac:	str	x8, [x0]
    c5b0:	b.ne	c5b8 <PyInit__testcapi@@Base+0x33fc>  // b.any
    c5b4:	bl	8560 <_Py_Dealloc@plt>
    c5b8:	ldur	x0, [x29, #-104]
    c5bc:	cbz	x0, c368 <PyInit__testcapi@@Base+0x31ac>
    c5c0:	ldr	x8, [x0]
    c5c4:	subs	x8, x8, #0x1
    c5c8:	str	x8, [x0]
    c5cc:	b.ne	c368 <PyInit__testcapi@@Base+0x31ac>  // b.any
    c5d0:	bl	8560 <_Py_Dealloc@plt>
    c5d4:	b	c368 <PyInit__testcapi@@Base+0x31ac>
    c5d8:	stp	x29, x30, [sp, #-48]!
    c5dc:	str	x21, [sp, #16]
    c5e0:	stp	x20, x19, [sp, #32]
    c5e4:	mov	x29, sp
    c5e8:	mov	x0, xzr
    c5ec:	bl	8600 <PyObject_Str@plt>
    c5f0:	mov	x21, x0
    c5f4:	mov	x0, xzr
    c5f8:	bl	8600 <PyObject_Str@plt>
    c5fc:	mov	x19, x0
    c600:	mov	w0, #0x2                   	// #2
    c604:	mov	x1, x21
    c608:	mov	x2, x19
    c60c:	bl	9040 <PyTuple_Pack@plt>
    c610:	mov	x20, x0
    c614:	cbz	x21, c628 <PyInit__testcapi@@Base+0x346c>
    c618:	ldr	x8, [x21]
    c61c:	subs	x8, x8, #0x1
    c620:	str	x8, [x21]
    c624:	b.eq	c648 <PyInit__testcapi@@Base+0x348c>  // b.none
    c628:	cbz	x19, c654 <PyInit__testcapi@@Base+0x3498>
    c62c:	ldr	x8, [x19]
    c630:	subs	x8, x8, #0x1
    c634:	str	x8, [x19]
    c638:	b.ne	c654 <PyInit__testcapi@@Base+0x3498>  // b.any
    c63c:	mov	x0, x19
    c640:	bl	8560 <_Py_Dealloc@plt>
    c644:	b	c654 <PyInit__testcapi@@Base+0x3498>
    c648:	mov	x0, x21
    c64c:	bl	8560 <_Py_Dealloc@plt>
    c650:	cbnz	x19, c62c <PyInit__testcapi@@Base+0x3470>
    c654:	mov	x0, x20
    c658:	ldp	x20, x19, [sp, #32]
    c65c:	ldr	x21, [sp, #16]
    c660:	ldp	x29, x30, [sp], #48
    c664:	ret
    c668:	stp	x29, x30, [sp, #-32]!
    c66c:	stp	x20, x19, [sp, #16]
    c670:	mov	x29, sp
    c674:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c678:	add	x0, x0, #0x114
    c67c:	mov	w1, #0x1                   	// #1
    c680:	bl	8260 <PyUnicode_FromFormat@plt>
    c684:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c688:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c68c:	add	x1, x1, #0xc46
    c690:	mov	x19, x0
    c694:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c698:	cbz	w0, c88c <PyInit__testcapi@@Base+0x36d0>
    c69c:	ldr	x8, [x19]
    c6a0:	subs	x8, x8, #0x1
    c6a4:	str	x8, [x19]
    c6a8:	b.ne	c6b4 <PyInit__testcapi@@Base+0x34f8>  // b.any
    c6ac:	mov	x0, x19
    c6b0:	bl	8560 <_Py_Dealloc@plt>
    c6b4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c6b8:	add	x0, x0, #0x126
    c6bc:	mov	w1, #0x1                   	// #1
    c6c0:	bl	8260 <PyUnicode_FromFormat@plt>
    c6c4:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c6c8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c6cc:	add	x1, x1, #0xc46
    c6d0:	mov	x19, x0
    c6d4:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c6d8:	cbz	w0, c898 <PyInit__testcapi@@Base+0x36dc>
    c6dc:	ldr	x8, [x19]
    c6e0:	subs	x8, x8, #0x1
    c6e4:	str	x8, [x19]
    c6e8:	b.ne	c6f4 <PyInit__testcapi@@Base+0x3538>  // b.any
    c6ec:	mov	x0, x19
    c6f0:	bl	8560 <_Py_Dealloc@plt>
    c6f4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c6f8:	add	x0, x0, #0x13a
    c6fc:	mov	w1, #0x1                   	// #1
    c700:	bl	8260 <PyUnicode_FromFormat@plt>
    c704:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c708:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c70c:	add	x1, x1, #0xc46
    c710:	mov	x19, x0
    c714:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c718:	cbz	w0, c8a4 <PyInit__testcapi@@Base+0x36e8>
    c71c:	ldr	x8, [x19]
    c720:	subs	x8, x8, #0x1
    c724:	str	x8, [x19]
    c728:	b.ne	c734 <PyInit__testcapi@@Base+0x3578>  // b.any
    c72c:	mov	x0, x19
    c730:	bl	8560 <_Py_Dealloc@plt>
    c734:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c738:	add	x0, x0, #0x14e
    c73c:	mov	w1, #0x1                   	// #1
    c740:	bl	8260 <PyUnicode_FromFormat@plt>
    c744:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c748:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c74c:	add	x1, x1, #0xc46
    c750:	mov	x19, x0
    c754:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c758:	cbz	w0, c8b0 <PyInit__testcapi@@Base+0x36f4>
    c75c:	ldr	x8, [x19]
    c760:	subs	x8, x8, #0x1
    c764:	str	x8, [x19]
    c768:	b.ne	c774 <PyInit__testcapi@@Base+0x35b8>  // b.any
    c76c:	mov	x0, x19
    c770:	bl	8560 <_Py_Dealloc@plt>
    c774:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c778:	add	x0, x0, #0x160
    c77c:	mov	w1, #0x1                   	// #1
    c780:	bl	8260 <PyUnicode_FromFormat@plt>
    c784:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c788:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c78c:	add	x1, x1, #0xc46
    c790:	mov	x19, x0
    c794:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c798:	cbz	w0, c8bc <PyInit__testcapi@@Base+0x3700>
    c79c:	ldr	x8, [x19]
    c7a0:	subs	x8, x8, #0x1
    c7a4:	str	x8, [x19]
    c7a8:	b.ne	c7b4 <PyInit__testcapi@@Base+0x35f8>  // b.any
    c7ac:	mov	x0, x19
    c7b0:	bl	8560 <_Py_Dealloc@plt>
    c7b4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c7b8:	add	x0, x0, #0x174
    c7bc:	mov	w1, #0x1                   	// #1
    c7c0:	bl	8260 <PyUnicode_FromFormat@plt>
    c7c4:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c7c8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c7cc:	add	x1, x1, #0xc46
    c7d0:	mov	x19, x0
    c7d4:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c7d8:	cbz	w0, c8c8 <PyInit__testcapi@@Base+0x370c>
    c7dc:	ldr	x8, [x19]
    c7e0:	subs	x8, x8, #0x1
    c7e4:	str	x8, [x19]
    c7e8:	b.ne	c7f4 <PyInit__testcapi@@Base+0x3638>  // b.any
    c7ec:	mov	x0, x19
    c7f0:	bl	8560 <_Py_Dealloc@plt>
    c7f4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c7f8:	add	x0, x0, #0x188
    c7fc:	mov	w1, #0x1                   	// #1
    c800:	bl	8260 <PyUnicode_FromFormat@plt>
    c804:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c808:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c80c:	add	x1, x1, #0xc46
    c810:	mov	x19, x0
    c814:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c818:	cbz	w0, c8d4 <PyInit__testcapi@@Base+0x3718>
    c81c:	ldr	x8, [x19]
    c820:	subs	x8, x8, #0x1
    c824:	str	x8, [x19]
    c828:	b.ne	c834 <PyInit__testcapi@@Base+0x3678>  // b.any
    c82c:	mov	x0, x19
    c830:	bl	8560 <_Py_Dealloc@plt>
    c834:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c838:	add	x0, x0, #0x19e
    c83c:	mov	w1, #0x1                   	// #1
    c840:	bl	8260 <PyUnicode_FromFormat@plt>
    c844:	cbz	x0, c924 <PyInit__testcapi@@Base+0x3768>
    c848:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c84c:	add	x1, x1, #0xc46
    c850:	mov	x19, x0
    c854:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c858:	cbz	w0, c8e0 <PyInit__testcapi@@Base+0x3724>
    c85c:	ldr	x8, [x19]
    c860:	subs	x8, x8, #0x1
    c864:	str	x8, [x19]
    c868:	b.ne	c874 <PyInit__testcapi@@Base+0x36b8>  // b.any
    c86c:	mov	x0, x19
    c870:	bl	8560 <_Py_Dealloc@plt>
    c874:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    c878:	ldr	x0, [x0, #4016]
    c87c:	ldr	x8, [x0]
    c880:	add	x8, x8, #0x1
    c884:	str	x8, [x0]
    c888:	b	c924 <PyInit__testcapi@@Base+0x3768>
    c88c:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c890:	add	x20, x20, #0x117
    c894:	b	c8e8 <PyInit__testcapi@@Base+0x372c>
    c898:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c89c:	add	x20, x20, #0x12a
    c8a0:	b	c8e8 <PyInit__testcapi@@Base+0x372c>
    c8a4:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c8a8:	add	x20, x20, #0x13e
    c8ac:	b	c8e8 <PyInit__testcapi@@Base+0x372c>
    c8b0:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c8b4:	add	x20, x20, #0x151
    c8b8:	b	c8e8 <PyInit__testcapi@@Base+0x372c>
    c8bc:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c8c0:	add	x20, x20, #0x164
    c8c4:	b	c8e8 <PyInit__testcapi@@Base+0x372c>
    c8c8:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c8cc:	add	x20, x20, #0x178
    c8d0:	b	c8e8 <PyInit__testcapi@@Base+0x372c>
    c8d4:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c8d8:	add	x20, x20, #0x18d
    c8dc:	b	c8e8 <PyInit__testcapi@@Base+0x372c>
    c8e0:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    c8e4:	add	x20, x20, #0x1a3
    c8e8:	ldr	x8, [x19]
    c8ec:	subs	x8, x8, #0x1
    c8f0:	str	x8, [x19]
    c8f4:	b.ne	c900 <PyInit__testcapi@@Base+0x3744>  // b.any
    c8f8:	mov	x0, x19
    c8fc:	bl	8560 <_Py_Dealloc@plt>
    c900:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    c904:	ldr	x0, [x8, #3552]
    c908:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c90c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    c910:	add	x1, x1, #0xba2
    c914:	add	x2, x2, #0xc6a
    c918:	mov	x3, x20
    c91c:	bl	8e60 <PyErr_Format@plt>
    c920:	mov	x0, xzr
    c924:	ldp	x20, x19, [sp, #16]
    c928:	ldp	x29, x30, [sp], #32
    c92c:	ret
    c930:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    c934:	ldr	x0, [x0, #4016]
    c938:	ldr	x8, [x0]
    c93c:	add	x8, x8, #0x1
    c940:	str	x8, [x0]
    c944:	ret
    c948:	stp	d9, d8, [sp, #-48]!
    c94c:	stp	x29, x30, [sp, #16]
    c950:	str	x19, [sp, #32]
    c954:	mov	x29, sp
    c958:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c95c:	add	x0, x0, #0x27f
    c960:	mov	x1, xzr
    c964:	mov	x2, xzr
    c968:	bl	8860 <PyOS_string_to_double@plt>
    c96c:	fmov	d9, #-1.000000000000000000e+00
    c970:	mov	v8.16b, v0.16b
    c974:	fcmp	d0, d9
    c978:	b.ne	c984 <PyInit__testcapi@@Base+0x37c8>  // b.any
    c97c:	bl	8980 <PyErr_Occurred@plt>
    c980:	cbnz	x0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    c984:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    c988:	ldr	d0, [x8, #96]
    c98c:	fcmp	d8, d0
    c990:	b.eq	c9cc <PyInit__testcapi@@Base+0x3810>  // b.none
    c994:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    c998:	add	x3, x3, #0x1b4
    c99c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    c9a0:	ldr	x0, [x8, #3552]
    c9a4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c9a8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    c9ac:	add	x1, x1, #0xba2
    c9b0:	add	x2, x2, #0xcb9
    c9b4:	bl	8e60 <PyErr_Format@plt>
    c9b8:	mov	x0, xzr
    c9bc:	ldr	x19, [sp, #32]
    c9c0:	ldp	x29, x30, [sp, #16]
    c9c4:	ldp	d9, d8, [sp], #48
    c9c8:	ret
    c9cc:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    c9d0:	add	x0, x0, #0x1d6
    c9d4:	mov	x1, xzr
    c9d8:	mov	x2, xzr
    c9dc:	bl	8860 <PyOS_string_to_double@plt>
    c9e0:	mov	v8.16b, v0.16b
    c9e4:	fcmp	d0, d9
    c9e8:	b.ne	c9f4 <PyInit__testcapi@@Base+0x3838>  // b.any
    c9ec:	bl	8980 <PyErr_Occurred@plt>
    c9f0:	cbnz	x0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    c9f4:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    c9f8:	ldr	d0, [x8, #104]
    c9fc:	fcmp	d8, d0
    ca00:	b.eq	ca10 <PyInit__testcapi@@Base+0x3854>  // b.none
    ca04:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    ca08:	add	x3, x3, #0x1dc
    ca0c:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    ca10:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    ca14:	add	x0, x0, #0x200
    ca18:	mov	x1, xzr
    ca1c:	mov	x2, xzr
    ca20:	bl	8860 <PyOS_string_to_double@plt>
    ca24:	mov	v8.16b, v0.16b
    ca28:	fcmp	d0, d9
    ca2c:	b.ne	ca38 <PyInit__testcapi@@Base+0x387c>  // b.any
    ca30:	bl	8980 <PyErr_Occurred@plt>
    ca34:	cbnz	x0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    ca38:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    ca3c:	ldr	d0, [x8, #112]
    ca40:	fcmp	d8, d0
    ca44:	b.eq	ca54 <PyInit__testcapi@@Base+0x3898>  // b.none
    ca48:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    ca4c:	add	x3, x3, #0x206
    ca50:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    ca54:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    ca58:	add	x0, x0, #0x22a
    ca5c:	mov	x1, xzr
    ca60:	mov	x2, xzr
    ca64:	bl	8860 <PyOS_string_to_double@plt>
    ca68:	mov	v8.16b, v0.16b
    ca6c:	fcmp	d0, d9
    ca70:	b.ne	ca7c <PyInit__testcapi@@Base+0x38c0>  // b.any
    ca74:	bl	8980 <PyErr_Occurred@plt>
    ca78:	cbnz	x0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    ca7c:	fmov	d0, #1.000000000000000000e+00
    ca80:	fcmp	d8, d0
    ca84:	b.eq	ca94 <PyInit__testcapi@@Base+0x38d8>  // b.none
    ca88:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    ca8c:	add	x3, x3, #0x230
    ca90:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    ca94:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    ca98:	add	x0, x0, #0x254
    ca9c:	mov	x1, xzr
    caa0:	mov	x2, xzr
    caa4:	bl	8860 <PyOS_string_to_double@plt>
    caa8:	mov	v8.16b, v0.16b
    caac:	fcmp	d0, d9
    cab0:	b.ne	cabc <PyInit__testcapi@@Base+0x3900>  // b.any
    cab4:	bl	8980 <PyErr_Occurred@plt>
    cab8:	cbnz	x0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    cabc:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    cac0:	ldr	d0, [x8, #120]
    cac4:	fcmp	d8, d0
    cac8:	b.eq	cad8 <PyInit__testcapi@@Base+0x391c>  // b.none
    cacc:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cad0:	add	x3, x3, #0x25a
    cad4:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    cad8:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    cadc:	add	x0, x0, #0x27e
    cae0:	mov	x1, xzr
    cae4:	mov	x2, xzr
    cae8:	bl	8860 <PyOS_string_to_double@plt>
    caec:	fcmp	d0, d9
    caf0:	b.ne	cc08 <PyInit__testcapi@@Base+0x3a4c>  // b.any
    caf4:	bl	8980 <PyErr_Occurred@plt>
    caf8:	cbz	x0, cc08 <PyInit__testcapi@@Base+0x3a4c>
    cafc:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
    cb00:	ldr	x19, [x19, #3944]
    cb04:	ldr	x0, [x19]
    cb08:	bl	8760 <PyErr_ExceptionMatches@plt>
    cb0c:	cbz	w0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    cb10:	bl	88c0 <PyErr_Clear@plt>
    cb14:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    cb18:	add	x0, x0, #0x2ae
    cb1c:	mov	x1, xzr
    cb20:	mov	x2, xzr
    cb24:	bl	8860 <PyOS_string_to_double@plt>
    cb28:	fcmp	d0, d9
    cb2c:	b.ne	cc14 <PyInit__testcapi@@Base+0x3a58>  // b.any
    cb30:	bl	8980 <PyErr_Occurred@plt>
    cb34:	cbz	x0, cc14 <PyInit__testcapi@@Base+0x3a58>
    cb38:	ldr	x0, [x19]
    cb3c:	bl	8760 <PyErr_ExceptionMatches@plt>
    cb40:	cbz	w0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    cb44:	bl	88c0 <PyErr_Clear@plt>
    cb48:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    cb4c:	add	x0, x0, #0x2de
    cb50:	mov	x1, xzr
    cb54:	mov	x2, xzr
    cb58:	bl	8860 <PyOS_string_to_double@plt>
    cb5c:	fcmp	d0, d9
    cb60:	b.ne	cc20 <PyInit__testcapi@@Base+0x3a64>  // b.any
    cb64:	bl	8980 <PyErr_Occurred@plt>
    cb68:	cbz	x0, cc20 <PyInit__testcapi@@Base+0x3a64>
    cb6c:	ldr	x0, [x19]
    cb70:	bl	8760 <PyErr_ExceptionMatches@plt>
    cb74:	cbz	w0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    cb78:	bl	88c0 <PyErr_Clear@plt>
    cb7c:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    cb80:	add	x0, x0, #0x310
    cb84:	mov	x1, xzr
    cb88:	mov	x2, xzr
    cb8c:	bl	8860 <PyOS_string_to_double@plt>
    cb90:	fcmp	d0, d9
    cb94:	b.ne	cc2c <PyInit__testcapi@@Base+0x3a70>  // b.any
    cb98:	bl	8980 <PyErr_Occurred@plt>
    cb9c:	cbz	x0, cc2c <PyInit__testcapi@@Base+0x3a70>
    cba0:	ldr	x0, [x19]
    cba4:	bl	8760 <PyErr_ExceptionMatches@plt>
    cba8:	cbz	w0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    cbac:	bl	88c0 <PyErr_Clear@plt>
    cbb0:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    cbb4:	add	x0, x0, #0x33c
    cbb8:	mov	x1, xzr
    cbbc:	mov	x2, xzr
    cbc0:	bl	8860 <PyOS_string_to_double@plt>
    cbc4:	fcmp	d0, d9
    cbc8:	b.ne	cc38 <PyInit__testcapi@@Base+0x3a7c>  // b.any
    cbcc:	bl	8980 <PyErr_Occurred@plt>
    cbd0:	cbz	x0, cc38 <PyInit__testcapi@@Base+0x3a7c>
    cbd4:	ldr	x0, [x19]
    cbd8:	bl	8760 <PyErr_ExceptionMatches@plt>
    cbdc:	cbz	w0, c9b8 <PyInit__testcapi@@Base+0x37fc>
    cbe0:	bl	88c0 <PyErr_Clear@plt>
    cbe4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    cbe8:	ldr	x0, [x0, #4016]
    cbec:	ldr	x8, [x0]
    cbf0:	add	x8, x8, #0x1
    cbf4:	str	x8, [x0]
    cbf8:	ldr	x19, [sp, #32]
    cbfc:	ldp	x29, x30, [sp, #16]
    cc00:	ldp	d9, d8, [sp], #48
    cc04:	ret
    cc08:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cc0c:	add	x3, x3, #0x283
    cc10:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    cc14:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cc18:	add	x3, x3, #0x2b3
    cc1c:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    cc20:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cc24:	add	x3, x3, #0x2e4
    cc28:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    cc2c:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cc30:	add	x3, x3, #0x313
    cc34:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    cc38:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cc3c:	add	x3, x3, #0x343
    cc40:	b	c99c <PyInit__testcapi@@Base+0x37e0>
    cc44:	stp	x29, x30, [sp, #-32]!
    cc48:	stp	x20, x19, [sp, #16]
    cc4c:	mov	x29, sp
    cc50:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    cc54:	add	x0, x0, #0x530
    cc58:	mov	w1, #0x4                   	// #4
    cc5c:	bl	8eb0 <PyUnicode_FromStringAndSize@plt>
    cc60:	cbz	x0, cca0 <PyInit__testcapi@@Base+0x3ae4>
    cc64:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    cc68:	add	x1, x1, #0x370
    cc6c:	mov	x19, x0
    cc70:	bl	8a90 <PyUnicode_CompareWithASCIIString@plt>
    cc74:	ldr	x8, [x19]
    cc78:	mov	w20, w0
    cc7c:	subs	x8, x8, #0x1
    cc80:	str	x8, [x19]
    cc84:	b.eq	ccac <PyInit__testcapi@@Base+0x3af0>  // b.none
    cc88:	cbz	w20, ccb8 <PyInit__testcapi@@Base+0x3afc>
    cc8c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    cc90:	ldr	x0, [x0, #4016]
    cc94:	ldr	x8, [x0]
    cc98:	add	x8, x8, #0x1
    cc9c:	str	x8, [x0]
    cca0:	ldp	x20, x19, [sp, #16]
    cca4:	ldp	x29, x30, [sp], #32
    cca8:	ret
    ccac:	mov	x0, x19
    ccb0:	bl	8560 <_Py_Dealloc@plt>
    ccb4:	cbnz	w20, cc8c <PyInit__testcapi@@Base+0x3ad0>
    ccb8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    ccbc:	ldr	x0, [x8, #3552]
    ccc0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ccc4:	add	x1, x1, #0x374
    ccc8:	bl	8670 <PyErr_SetString@plt>
    cccc:	mov	x0, xzr
    ccd0:	ldp	x20, x19, [sp, #16]
    ccd4:	ldp	x29, x30, [sp], #32
    ccd8:	ret
    ccdc:	sub	sp, sp, #0xb0
    cce0:	stp	x29, x30, [sp, #96]
    cce4:	str	x25, [sp, #112]
    cce8:	stp	x24, x23, [sp, #128]
    ccec:	stp	x22, x21, [sp, #144]
    ccf0:	stp	x20, x19, [sp, #160]
    ccf4:	add	x29, sp, #0x60
    ccf8:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    ccfc:	add	x8, x8, #0xcc0
    cd00:	ldp	q0, q1, [x8, #32]
    cd04:	ldp	q2, q3, [x8, #64]
    cd08:	ldp	q4, q5, [x8]
    cd0c:	adrp	x21, 16000 <PyInit__testcapi@@Base+0xce44>
    cd10:	adrp	x22, 16000 <PyInit__testcapi@@Base+0xce44>
    cd14:	adrp	x23, 12000 <PyInit__testcapi@@Base+0x8e44>
    cd18:	add	x21, x21, #0x5bb
    cd1c:	add	x22, x22, #0x5cb
    cd20:	add	x23, x23, #0xf48
    cd24:	mov	x0, x21
    cd28:	mov	x1, x22
    cd2c:	mov	x2, x23
    cd30:	stp	q0, q1, [sp, #32]
    cd34:	stp	q2, q3, [sp, #64]
    cd38:	stp	q4, q5, [sp]
    cd3c:	bl	8e10 <PyCapsule_New@plt>
    cd40:	adrp	x19, 16000 <PyInit__testcapi@@Base+0xce44>
    cd44:	add	x19, x19, #0x675
    cd48:	mov	x1, x19
    cd4c:	mov	x20, x0
    cd50:	bl	8f80 <PyCapsule_SetContext@plt>
    cd54:	adrp	x24, 2b000 <PyInit__testcapi@@Base+0x21e44>
    cd58:	ldr	w8, [x24, #3540]
    cd5c:	mov	x0, x20
    cd60:	add	w8, w8, #0x1
    cd64:	str	w8, [x24, #3540]
    cd68:	bl	8b50 <PyCapsule_GetContext@plt>
    cd6c:	cmp	x0, x19
    cd70:	b.eq	cd84 <PyInit__testcapi@@Base+0x3bc8>  // b.none
    cd74:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cd78:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    cd7c:	add	x3, x3, #0x5d8
    cd80:	b	cde8 <PyInit__testcapi@@Base+0x3c2c>
    cd84:	mov	x0, x20
    cd88:	bl	8ec0 <PyCapsule_GetDestructor@plt>
    cd8c:	cmp	x0, x23
    cd90:	b.eq	cda4 <PyInit__testcapi@@Base+0x3be8>  // b.none
    cd94:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cd98:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    cd9c:	add	x3, x3, #0x5fd
    cda0:	b	cde8 <PyInit__testcapi@@Base+0x3c2c>
    cda4:	mov	x0, x20
    cda8:	bl	8440 <PyCapsule_GetName@plt>
    cdac:	cmp	x0, x22
    cdb0:	b.eq	cdc4 <PyInit__testcapi@@Base+0x3c08>  // b.none
    cdb4:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cdb8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    cdbc:	add	x3, x3, #0x62e
    cdc0:	b	cde8 <PyInit__testcapi@@Base+0x3c2c>
    cdc4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    cdc8:	add	x1, x1, #0x5cb
    cdcc:	mov	x0, x20
    cdd0:	bl	8e70 <PyCapsule_GetPointer@plt>
    cdd4:	cmp	x0, x21
    cdd8:	b.eq	ce28 <PyInit__testcapi@@Base+0x3c6c>  // b.none
    cddc:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cde0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    cde4:	add	x3, x3, #0x650
    cde8:	str	x3, [x8, #3568]
    cdec:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    cdf0:	ldr	x0, [x8, #3552]
    cdf4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    cdf8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    cdfc:	add	x1, x1, #0xba2
    ce00:	add	x2, x2, #0xcef
    ce04:	bl	8e60 <PyErr_Format@plt>
    ce08:	mov	x0, xzr
    ce0c:	ldp	x20, x19, [sp, #160]
    ce10:	ldp	x22, x21, [sp, #144]
    ce14:	ldp	x24, x23, [sp, #128]
    ce18:	ldr	x25, [sp, #112]
    ce1c:	ldp	x29, x30, [sp, #96]
    ce20:	add	sp, sp, #0xb0
    ce24:	ret
    ce28:	adrp	x25, 2b000 <PyInit__testcapi@@Base+0x21e44>
    ce2c:	ldr	x3, [x25, #3568]
    ce30:	cbnz	x3, cdec <PyInit__testcapi@@Base+0x3c30>
    ce34:	ldr	w8, [x24, #3540]
    ce38:	cbz	w8, cfb4 <PyInit__testcapi@@Base+0x3df8>
    ce3c:	str	wzr, [x24, #3540]
    ce40:	ldr	x8, [x20]
    ce44:	subs	x8, x8, #0x1
    ce48:	str	x8, [x20]
    ce4c:	b.eq	cee4 <PyInit__testcapi@@Base+0x3d28>  // b.none
    ce50:	ldr	w8, [x24, #3540]
    ce54:	cbz	w8, cfb4 <PyInit__testcapi@@Base+0x3df8>
    ce58:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ce5c:	add	x1, x1, #0x3fa
    ce60:	mov	x0, sp
    ce64:	mov	x2, xzr
    ce68:	str	wzr, [x24, #3540]
    ce6c:	bl	8e10 <PyCapsule_New@plt>
    ce70:	adrp	x21, 16000 <PyInit__testcapi@@Base+0xce44>
    ce74:	add	x21, x21, #0x5bb
    ce78:	mov	x1, x21
    ce7c:	mov	x20, x0
    ce80:	bl	8d00 <PyCapsule_SetPointer@plt>
    ce84:	adrp	x22, 16000 <PyInit__testcapi@@Base+0xce44>
    ce88:	add	x22, x22, #0x5cb
    ce8c:	mov	x0, x20
    ce90:	mov	x1, x22
    ce94:	bl	83f0 <PyCapsule_SetName@plt>
    ce98:	adrp	x23, 12000 <PyInit__testcapi@@Base+0x8e44>
    ce9c:	add	x23, x23, #0xf48
    cea0:	mov	x0, x20
    cea4:	mov	x1, x23
    cea8:	bl	8a50 <PyCapsule_SetDestructor@plt>
    ceac:	mov	x0, x20
    ceb0:	mov	x1, x19
    ceb4:	bl	8f80 <PyCapsule_SetContext@plt>
    ceb8:	ldr	w8, [x24, #3540]
    cebc:	mov	x0, x20
    cec0:	add	w8, w8, #0x1
    cec4:	str	w8, [x24, #3540]
    cec8:	bl	8b50 <PyCapsule_GetContext@plt>
    cecc:	cmp	x0, x19
    ced0:	b.eq	cef8 <PyInit__testcapi@@Base+0x3d3c>  // b.none
    ced4:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    ced8:	add	x3, x3, #0x5d8
    cedc:	str	x3, [x25, #3568]
    cee0:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    cee4:	mov	x0, x20
    cee8:	bl	8560 <_Py_Dealloc@plt>
    ceec:	ldr	x3, [x25, #3568]
    cef0:	cbnz	x3, cdec <PyInit__testcapi@@Base+0x3c30>
    cef4:	b	ce50 <PyInit__testcapi@@Base+0x3c94>
    cef8:	mov	x0, x20
    cefc:	bl	8ec0 <PyCapsule_GetDestructor@plt>
    cf00:	cmp	x0, x23
    cf04:	b.eq	cf18 <PyInit__testcapi@@Base+0x3d5c>  // b.none
    cf08:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cf0c:	add	x3, x3, #0x5fd
    cf10:	str	x3, [x25, #3568]
    cf14:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    cf18:	mov	x0, x20
    cf1c:	bl	8440 <PyCapsule_GetName@plt>
    cf20:	cmp	x0, x22
    cf24:	b.eq	cf38 <PyInit__testcapi@@Base+0x3d7c>  // b.none
    cf28:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cf2c:	add	x3, x3, #0x62e
    cf30:	str	x3, [x25, #3568]
    cf34:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    cf38:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    cf3c:	add	x1, x1, #0x5cb
    cf40:	mov	x0, x20
    cf44:	bl	8e70 <PyCapsule_GetPointer@plt>
    cf48:	cmp	x0, x21
    cf4c:	b.eq	cf60 <PyInit__testcapi@@Base+0x3da4>  // b.none
    cf50:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cf54:	add	x3, x3, #0x650
    cf58:	str	x3, [x25, #3568]
    cf5c:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    cf60:	ldr	x3, [x25, #3568]
    cf64:	cbnz	x3, cdec <PyInit__testcapi@@Base+0x3c30>
    cf68:	ldr	w8, [x24, #3540]
    cf6c:	cbz	w8, cfb4 <PyInit__testcapi@@Base+0x3df8>
    cf70:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    cf74:	add	x1, x1, #0x402
    cf78:	mov	x0, x20
    cf7c:	str	wzr, [x24, #3540]
    cf80:	bl	8e70 <PyCapsule_GetPointer@plt>
    cf84:	mov	x19, x0
    cf88:	bl	8980 <PyErr_Occurred@plt>
    cf8c:	cbz	x0, cfc0 <PyInit__testcapi@@Base+0x3e04>
    cf90:	bl	88c0 <PyErr_Clear@plt>
    cf94:	cbz	x19, cfcc <PyInit__testcapi@@Base+0x3e10>
    cf98:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
    cf9c:	adrp	x9, 16000 <PyInit__testcapi@@Base+0xce44>
    cfa0:	add	x8, x8, #0x48a
    cfa4:	add	x9, x9, #0x446
    cfa8:	cmp	x19, x21
    cfac:	csel	x3, x9, x8, eq  // eq = none
    cfb0:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    cfb4:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cfb8:	add	x3, x3, #0x3e3
    cfbc:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    cfc0:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cfc4:	add	x3, x3, #0x411
    cfc8:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    cfcc:	mov	x0, x20
    cfd0:	mov	x1, xzr
    cfd4:	bl	8a50 <PyCapsule_SetDestructor@plt>
    cfd8:	ldr	x8, [x20]
    cfdc:	subs	x8, x8, #0x1
    cfe0:	str	x8, [x20]
    cfe4:	b.ne	cff0 <PyInit__testcapi@@Base+0x3e34>  // b.any
    cfe8:	mov	x0, x20
    cfec:	bl	8560 <_Py_Dealloc@plt>
    cff0:	ldr	w8, [x24, #3540]
    cff4:	cbz	w8, d004 <PyInit__testcapi@@Base+0x3e48>
    cff8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    cffc:	add	x3, x3, #0x4ce
    d000:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    d004:	ldr	x0, [sp, #8]
    d008:	cbz	x0, d0c8 <PyInit__testcapi@@Base+0x3f0c>
    d00c:	mov	x8, sp
    d010:	adrp	x20, 16000 <PyInit__testcapi@@Base+0xce44>
    d014:	add	x24, x8, #0x10
    d018:	add	x20, x20, #0x54f
    d01c:	b	d030 <PyInit__testcapi@@Base+0x3e74>
    d020:	bl	88c0 <PyErr_Clear@plt>
    d024:	ldr	x0, [x24, #16]
    d028:	add	x24, x24, #0x18
    d02c:	cbz	x0, d0c8 <PyInit__testcapi@@Base+0x3f0c>
    d030:	bl	89b0 <PyImport_ImportModule@plt>
    d034:	cbz	x0, d020 <PyInit__testcapi@@Base+0x3e64>
    d038:	mov	x19, x0
    d03c:	ldur	x0, [x24, #-16]
    d040:	mov	w1, wzr
    d044:	bl	8820 <PyCapsule_Import@plt>
    d048:	cbz	x0, d0e0 <PyInit__testcapi@@Base+0x3f24>
    d04c:	ldr	x1, [x24]
    d050:	mov	x21, x0
    d054:	mov	x0, x19
    d058:	bl	84a0 <PyObject_GetAttrString@plt>
    d05c:	cbz	x0, d118 <PyInit__testcapi@@Base+0x3f5c>
    d060:	mov	x1, x20
    d064:	mov	x22, x0
    d068:	bl	8e70 <PyCapsule_GetPointer@plt>
    d06c:	mov	x23, x0
    d070:	bl	8980 <PyErr_Occurred@plt>
    d074:	cbz	x0, d134 <PyInit__testcapi@@Base+0x3f78>
    d078:	bl	88c0 <PyErr_Clear@plt>
    d07c:	cbnz	x23, d184 <PyInit__testcapi@@Base+0x3fc8>
    d080:	ldr	x8, [x22]
    d084:	subs	x8, x8, #0x1
    d088:	str	x8, [x22]
    d08c:	b.eq	d0a4 <PyInit__testcapi@@Base+0x3ee8>  // b.none
    d090:	ldr	x8, [x19]
    d094:	subs	x8, x8, #0x1
    d098:	str	x8, [x19]
    d09c:	b.ne	d024 <PyInit__testcapi@@Base+0x3e68>  // b.any
    d0a0:	b	d0bc <PyInit__testcapi@@Base+0x3f00>
    d0a4:	mov	x0, x22
    d0a8:	bl	8560 <_Py_Dealloc@plt>
    d0ac:	ldr	x8, [x19]
    d0b0:	subs	x8, x8, #0x1
    d0b4:	str	x8, [x19]
    d0b8:	b.ne	d024 <PyInit__testcapi@@Base+0x3e68>  // b.any
    d0bc:	mov	x0, x19
    d0c0:	bl	8560 <_Py_Dealloc@plt>
    d0c4:	b	d024 <PyInit__testcapi@@Base+0x3e68>
    d0c8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    d0cc:	ldr	x0, [x0, #4016]
    d0d0:	ldr	x8, [x0]
    d0d4:	add	x8, x8, #0x1
    d0d8:	str	x8, [x0]
    d0dc:	b	ce0c <PyInit__testcapi@@Base+0x3c50>
    d0e0:	ldr	x8, [x19]
    d0e4:	subs	x8, x8, #0x1
    d0e8:	str	x8, [x19]
    d0ec:	b.ne	d0f8 <PyInit__testcapi@@Base+0x3f3c>  // b.any
    d0f0:	mov	x0, x19
    d0f4:	bl	8560 <_Py_Dealloc@plt>
    d0f8:	ldp	x3, x4, [x24, #-8]
    d0fc:	adrp	x19, 2b000 <PyInit__testcapi@@Base+0x21e44>
    d100:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d104:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    d108:	add	x19, x19, #0xe98
    d10c:	add	x1, x1, #0x4fe
    d110:	add	x2, x2, #0x51e
    d114:	b	d1e4 <PyInit__testcapi@@Base+0x4028>
    d118:	ldr	x8, [x19]
    d11c:	subs	x8, x8, #0x1
    d120:	str	x8, [x19]
    d124:	b.ne	ce08 <PyInit__testcapi@@Base+0x3c4c>  // b.any
    d128:	mov	x0, x19
    d12c:	bl	8560 <_Py_Dealloc@plt>
    d130:	b	ce08 <PyInit__testcapi@@Base+0x3c4c>
    d134:	ldr	x8, [x22]
    d138:	subs	x8, x8, #0x1
    d13c:	str	x8, [x22]
    d140:	b.ne	d14c <PyInit__testcapi@@Base+0x3f90>  // b.any
    d144:	mov	x0, x22
    d148:	bl	8560 <_Py_Dealloc@plt>
    d14c:	ldr	x8, [x19]
    d150:	subs	x8, x8, #0x1
    d154:	str	x8, [x19]
    d158:	b.ne	d164 <PyInit__testcapi@@Base+0x3fa8>  // b.any
    d15c:	mov	x0, x19
    d160:	bl	8560 <_Py_Dealloc@plt>
    d164:	ldp	x3, x4, [x24, #-8]
    d168:	adrp	x19, 2b000 <PyInit__testcapi@@Base+0x21e44>
    d16c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d170:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    d174:	add	x19, x19, #0xe98
    d178:	add	x1, x1, #0x4fe
    d17c:	add	x2, x2, #0x411
    d180:	b	d1e4 <PyInit__testcapi@@Base+0x4028>
    d184:	ldr	x8, [x19]
    d188:	subs	x8, x8, #0x1
    d18c:	str	x8, [x19]
    d190:	b.ne	d19c <PyInit__testcapi@@Base+0x3fe0>  // b.any
    d194:	mov	x0, x19
    d198:	bl	8560 <_Py_Dealloc@plt>
    d19c:	ldr	x8, [x22]
    d1a0:	subs	x8, x8, #0x1
    d1a4:	str	x8, [x22]
    d1a8:	b.ne	d1b4 <PyInit__testcapi@@Base+0x3ff8>  // b.any
    d1ac:	mov	x0, x22
    d1b0:	bl	8560 <_Py_Dealloc@plt>
    d1b4:	ldp	x3, x4, [x24, #-8]
    d1b8:	adrp	x19, 2b000 <PyInit__testcapi@@Base+0x21e44>
    d1bc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d1c0:	add	x19, x19, #0xe98
    d1c4:	add	x1, x1, #0x4fe
    d1c8:	cmp	x23, x21
    d1cc:	b.eq	d1dc <PyInit__testcapi@@Base+0x4020>  // b.none
    d1d0:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    d1d4:	add	x2, x2, #0x48a
    d1d8:	b	d1e4 <PyInit__testcapi@@Base+0x4028>
    d1dc:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    d1e0:	add	x2, x2, #0x577
    d1e4:	mov	x0, x19
    d1e8:	bl	84e0 <sprintf@plt>
    d1ec:	mov	x3, x19
    d1f0:	b	cdec <PyInit__testcapi@@Base+0x3c30>
    d1f4:	sub	sp, sp, #0xc0
    d1f8:	stp	x29, x30, [sp, #176]
    d1fc:	add	x29, sp, #0xb0
    d200:	movi	v0.2d, #0xffffffffffffffff
    d204:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae44>
    d208:	add	x9, x9, #0x538
    d20c:	stp	q0, q0, [x29, #-48]
    d210:	movi	v0.2s, #0x1
    d214:	mov	w8, #0xffffffff            	// #-1
    d218:	str	d0, [sp, #32]
    d21c:	ldr	q0, [x9]
    d220:	stur	w8, [x29, #-16]
    d224:	mov	w8, #0x5                   	// #5
    d228:	str	x8, [sp, #88]
    d22c:	mov	w8, #0x8                   	// #8
    d230:	stp	xzr, x8, [sp, #72]
    d234:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    d238:	ldr	w9, [x9, #16]
    d23c:	stur	q0, [x29, #-80]
    d240:	ldr	q0, [x8, #128]
    d244:	add	x8, sp, #0x58
    d248:	stp	xzr, x8, [sp, #40]
    d24c:	sub	x8, x29, #0x30
    d250:	stur	w9, [x29, #-64]
    d254:	add	x9, sp, #0x50
    d258:	mov	x0, sp
    d25c:	sub	x1, x29, #0x50
    d260:	mov	w2, #0x14                  	// #20
    d264:	mov	w3, #0x43                  	// #67
    d268:	stp	x8, xzr, [sp]
    d26c:	str	q0, [sp, #16]
    d270:	stp	x9, xzr, [sp, #56]
    d274:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    d278:	ldr	x8, [sp]
    d27c:	ldr	w9, [x8]
    d280:	cbnz	w9, d334 <PyInit__testcapi@@Base+0x4178>
    d284:	ldr	w9, [x8, #8]
    d288:	cmp	w9, #0x1
    d28c:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d290:	ldr	w9, [x8, #16]
    d294:	cmp	w9, #0x2
    d298:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d29c:	ldr	w9, [x8, #24]
    d2a0:	cmp	w9, #0x3
    d2a4:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d2a8:	ldr	w8, [x8, #32]
    d2ac:	cmp	w8, #0x4
    d2b0:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d2b4:	ldr	x9, [sp, #56]
    d2b8:	sub	x8, x29, #0x30
    d2bc:	add	x8, x8, #0x20
    d2c0:	str	x8, [sp]
    d2c4:	mov	x8, #0xfffffffffffffff8    	// #-8
    d2c8:	str	x8, [x9]
    d2cc:	ldr	x2, [sp, #16]
    d2d0:	mov	x0, sp
    d2d4:	sub	x1, x29, #0x50
    d2d8:	mov	w3, #0x43                  	// #67
    d2dc:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    d2e0:	ldr	x8, [sp]
    d2e4:	ldr	w9, [x8]
    d2e8:	cbnz	w9, d334 <PyInit__testcapi@@Base+0x4178>
    d2ec:	ldur	w9, [x8, #-8]
    d2f0:	cmp	w9, #0x1
    d2f4:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d2f8:	ldur	w9, [x8, #-16]
    d2fc:	cmp	w9, #0x2
    d300:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d304:	ldur	w9, [x8, #-24]
    d308:	cmp	w9, #0x3
    d30c:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d310:	ldur	w8, [x8, #-32]
    d314:	cmp	w8, #0x4
    d318:	b.ne	d334 <PyInit__testcapi@@Base+0x4178>  // b.any
    d31c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    d320:	ldr	x0, [x0, #4016]
    d324:	ldr	x8, [x0]
    d328:	add	x8, x8, #0x1
    d32c:	str	x8, [x0]
    d330:	b	d34c <PyInit__testcapi@@Base+0x4190>
    d334:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    d338:	ldr	x0, [x8, #3552]
    d33c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d340:	add	x1, x1, #0x685
    d344:	bl	8670 <PyErr_SetString@plt>
    d348:	mov	x0, xzr
    d34c:	ldp	x29, x30, [sp, #176]
    d350:	add	sp, sp, #0xc0
    d354:	ret
    d358:	stp	x29, x30, [sp, #-48]!
    d35c:	str	x21, [sp, #16]
    d360:	stp	x20, x19, [sp, #32]
    d364:	mov	x29, sp
    d368:	add	x2, x29, #0x18
    d36c:	mov	w3, #0x1                   	// #1
    d370:	mov	x0, xzr
    d374:	mov	x1, xzr
    d378:	mov	w4, wzr
    d37c:	mov	w5, wzr
    d380:	bl	8870 <PyBuffer_FillInfo@plt>
    d384:	mov	w19, w0
    d388:	bl	8980 <PyErr_Occurred@plt>
    d38c:	cbz	x0, d448 <PyInit__testcapi@@Base+0x428c>
    d390:	adrp	x21, 27000 <PyInit__testcapi@@Base+0x1de44>
    d394:	ldr	x21, [x21, #3896]
    d398:	ldr	x0, [x21]
    d39c:	bl	8760 <PyErr_ExceptionMatches@plt>
    d3a0:	mov	w20, w0
    d3a4:	bl	88c0 <PyErr_Clear@plt>
    d3a8:	cmn	w19, #0x1
    d3ac:	b.ne	d44c <PyInit__testcapi@@Base+0x4290>  // b.any
    d3b0:	cbz	w20, d44c <PyInit__testcapi@@Base+0x4290>
    d3b4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    d3b8:	ldr	x0, [x0, #3864]
    d3bc:	mov	x1, xzr
    d3c0:	ldr	x8, [x0, #304]
    d3c4:	blr	x8
    d3c8:	cbz	x0, d428 <PyInit__testcapi@@Base+0x426c>
    d3cc:	mov	x1, xzr
    d3d0:	mov	w2, wzr
    d3d4:	mov	x20, x0
    d3d8:	bl	8c40 <PyObject_GetBuffer@plt>
    d3dc:	ldr	x8, [x20]
    d3e0:	mov	w19, w0
    d3e4:	subs	x8, x8, #0x1
    d3e8:	str	x8, [x20]
    d3ec:	b.eq	d438 <PyInit__testcapi@@Base+0x427c>  // b.none
    d3f0:	bl	8980 <PyErr_Occurred@plt>
    d3f4:	cbz	x0, d448 <PyInit__testcapi@@Base+0x428c>
    d3f8:	ldr	x0, [x21]
    d3fc:	bl	8760 <PyErr_ExceptionMatches@plt>
    d400:	mov	w20, w0
    d404:	bl	88c0 <PyErr_Clear@plt>
    d408:	cmn	w19, #0x1
    d40c:	b.ne	d44c <PyInit__testcapi@@Base+0x4290>  // b.any
    d410:	cbz	w20, d44c <PyInit__testcapi@@Base+0x4290>
    d414:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    d418:	ldr	x0, [x0, #4016]
    d41c:	ldr	x8, [x0]
    d420:	add	x8, x8, #0x1
    d424:	str	x8, [x0]
    d428:	ldp	x20, x19, [sp, #32]
    d42c:	ldr	x21, [sp, #16]
    d430:	ldp	x29, x30, [sp], #48
    d434:	ret
    d438:	mov	x0, x20
    d43c:	bl	8560 <_Py_Dealloc@plt>
    d440:	bl	8980 <PyErr_Occurred@plt>
    d444:	cbnz	x0, d3f8 <PyInit__testcapi@@Base+0x423c>
    d448:	bl	88c0 <PyErr_Clear@plt>
    d44c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    d450:	ldr	x0, [x8, #3552]
    d454:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d458:	add	x1, x1, #0x6ac
    d45c:	bl	8670 <PyErr_SetString@plt>
    d460:	mov	x0, xzr
    d464:	ldp	x20, x19, [sp, #32]
    d468:	ldr	x21, [sp, #16]
    d46c:	ldp	x29, x30, [sp], #48
    d470:	ret
    d474:	stp	x29, x30, [sp, #-16]!
    d478:	mov	x29, sp
    d47c:	mov	x0, x1
    d480:	mov	x1, xzr
    d484:	mov	w2, wzr
    d488:	bl	8c40 <PyObject_GetBuffer@plt>
    d48c:	tbnz	w0, #31, d4ac <PyInit__testcapi@@Base+0x42f0>
    d490:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    d494:	ldr	x0, [x0, #4016]
    d498:	ldr	x8, [x0]
    d49c:	add	x8, x8, #0x1
    d4a0:	str	x8, [x0]
    d4a4:	ldp	x29, x30, [sp], #16
    d4a8:	ret
    d4ac:	mov	x0, xzr
    d4b0:	ldp	x29, x30, [sp], #16
    d4b4:	ret
    d4b8:	stp	x29, x30, [sp, #-32]!
    d4bc:	str	x19, [sp, #16]
    d4c0:	mov	x29, sp
    d4c4:	mov	x0, xzr
    d4c8:	bl	82a0 <PyList_New@plt>
    d4cc:	cbz	x0, d5d0 <PyInit__testcapi@@Base+0x4414>
    d4d0:	ldr	x8, [x0]
    d4d4:	mov	x19, x0
    d4d8:	mov	x1, x19
    d4dc:	add	x8, x8, #0x1
    d4e0:	str	x8, [x0]
    d4e4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d4e8:	add	x0, x0, #0x72d
    d4ec:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d4f0:	cbz	x0, d5d0 <PyInit__testcapi@@Base+0x4414>
    d4f4:	cmp	x0, x19
    d4f8:	b.eq	d520 <PyInit__testcapi@@Base+0x4364>  // b.none
    d4fc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    d500:	ldr	x0, [x8, #3552]
    d504:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d508:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    d50c:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    d510:	add	x1, x1, #0xba2
    d514:	add	x2, x2, #0xd4c
    d518:	add	x3, x3, #0x6d7
    d51c:	b	d5c8 <PyInit__testcapi@@Base+0x440c>
    d520:	ldr	x8, [x19]
    d524:	cmp	x8, #0x2
    d528:	b.ne	d5a8 <PyInit__testcapi@@Base+0x43ec>  // b.any
    d52c:	mov	x0, x19
    d530:	str	xzr, [x19]
    d534:	bl	8560 <_Py_Dealloc@plt>
    d538:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d53c:	add	x0, x0, #0x72b
    d540:	bl	1300c <PyInit__testcapi@@Base+0x9e50>
    d544:	tbnz	w0, #31, d5dc <PyInit__testcapi@@Base+0x4420>
    d548:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d54c:	add	x0, x0, #0x72f
    d550:	bl	1300c <PyInit__testcapi@@Base+0x9e50>
    d554:	tbnz	w0, #31, d5dc <PyInit__testcapi@@Base+0x4420>
    d558:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d55c:	add	x0, x0, #0x735
    d560:	bl	1300c <PyInit__testcapi@@Base+0x9e50>
    d564:	tbnz	w0, #31, d5dc <PyInit__testcapi@@Base+0x4420>
    d568:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d56c:	add	x0, x0, #0x73b
    d570:	bl	1300c <PyInit__testcapi@@Base+0x9e50>
    d574:	tbnz	w0, #31, d5dc <PyInit__testcapi@@Base+0x4420>
    d578:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d57c:	add	x0, x0, #0x741
    d580:	bl	1300c <PyInit__testcapi@@Base+0x9e50>
    d584:	tbnz	w0, #31, d5dc <PyInit__testcapi@@Base+0x4420>
    d588:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    d58c:	ldr	x0, [x0, #4016]
    d590:	ldr	x8, [x0]
    d594:	add	x8, x8, #0x1
    d598:	str	x8, [x0]
    d59c:	ldr	x19, [sp, #16]
    d5a0:	ldp	x29, x30, [sp], #32
    d5a4:	ret
    d5a8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    d5ac:	ldr	x0, [x8, #3552]
    d5b0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d5b4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    d5b8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    d5bc:	add	x1, x1, #0xba2
    d5c0:	add	x2, x2, #0xd4c
    d5c4:	add	x3, x3, #0x700
    d5c8:	bl	8e60 <PyErr_Format@plt>
    d5cc:	mov	x0, xzr
    d5d0:	ldr	x19, [sp, #16]
    d5d4:	ldp	x29, x30, [sp], #32
    d5d8:	ret
    d5dc:	mov	x0, xzr
    d5e0:	ldr	x19, [sp, #16]
    d5e4:	ldp	x29, x30, [sp], #32
    d5e8:	ret
    d5ec:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    d5f0:	ldr	x8, [x8, #4016]
    d5f4:	cmp	x1, #0x0
    d5f8:	csel	x0, x8, x1, eq  // eq = none
    d5fc:	ldr	x8, [x0]
    d600:	add	x8, x8, #0x1
    d604:	str	x8, [x0]
    d608:	ret
    d60c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    d610:	ldr	x8, [x8, #4016]
    d614:	cmp	x2, #0x0
    d618:	csel	x0, x8, x2, eq  // eq = none
    d61c:	ldr	x8, [x0]
    d620:	add	x8, x8, #0x1
    d624:	str	x8, [x0]
    d628:	ret
    d62c:	sub	sp, sp, #0x20
    d630:	stp	x29, x30, [sp, #16]
    d634:	add	x29, sp, #0x10
    d638:	mov	x0, x1
    d63c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d640:	add	x1, x1, #0x814
    d644:	sub	x2, x29, #0x4
    d648:	add	x3, sp, #0x8
    d64c:	add	x4, sp, #0x4
    d650:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d654:	cbz	w0, d678 <PyInit__testcapi@@Base+0x44bc>
    d658:	ldur	w1, [x29, #-4]
    d65c:	ldp	w3, w2, [sp, #4]
    d660:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d664:	add	x0, x0, #0x83a
    d668:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d66c:	ldp	x29, x30, [sp, #16]
    d670:	add	sp, sp, #0x20
    d674:	ret
    d678:	mov	x0, xzr
    d67c:	ldp	x29, x30, [sp, #16]
    d680:	add	sp, sp, #0x20
    d684:	ret
    d688:	sub	sp, sp, #0x70
    d68c:	stp	x29, x30, [sp, #96]
    d690:	add	x29, sp, #0x60
    d694:	mov	x8, x2
    d698:	mov	x9, #0xffffffffffffffff    	// #-1
    d69c:	add	x10, sp, #0x30
    d6a0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    d6a4:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe44>
    d6a8:	mov	x0, x1
    d6ac:	movi	v0.2d, #0xffffffffffffffff
    d6b0:	str	x9, [sp, #80]
    d6b4:	add	x9, x10, #0x10
    d6b8:	add	x11, x10, #0x20
    d6bc:	orr	x5, x10, #0x4
    d6c0:	orr	x6, x10, #0x8
    d6c4:	orr	x7, x10, #0xc
    d6c8:	add	x12, x10, #0x14
    d6cc:	add	x13, x10, #0x18
    d6d0:	add	x14, x10, #0x1c
    d6d4:	add	x10, x10, #0x24
    d6d8:	add	x2, x2, #0x54c
    d6dc:	add	x3, x3, #0xf38
    d6e0:	add	x4, sp, #0x30
    d6e4:	mov	x1, x8
    d6e8:	stp	q0, q0, [sp, #48]
    d6ec:	stp	x11, x10, [sp, #32]
    d6f0:	stp	x13, x14, [sp, #16]
    d6f4:	stp	x9, x12, [sp]
    d6f8:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    d6fc:	cbz	w0, d738 <PyInit__testcapi@@Base+0x457c>
    d700:	ldp	w1, w2, [sp, #48]
    d704:	ldp	w3, w4, [sp, #56]
    d708:	ldp	w5, w6, [sp, #64]
    d70c:	ldp	w7, w8, [sp, #72]
    d710:	ldp	w9, w10, [sp, #80]
    d714:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d718:	add	x0, x0, #0x833
    d71c:	str	w8, [sp]
    d720:	str	w10, [sp, #16]
    d724:	str	w9, [sp, #8]
    d728:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d72c:	ldp	x29, x30, [sp, #96]
    d730:	add	sp, sp, #0x70
    d734:	ret
    d738:	mov	x0, xzr
    d73c:	ldp	x29, x30, [sp, #96]
    d740:	add	sp, sp, #0x70
    d744:	ret
    d748:	sub	sp, sp, #0x20
    d74c:	stp	x29, x30, [sp, #16]
    d750:	add	x29, sp, #0x10
    d754:	mov	x8, x2
    d758:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    d75c:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe44>
    d760:	mov	x0, x1
    d764:	mov	w9, #0xffffffff            	// #-1
    d768:	add	x2, x2, #0x847
    d76c:	add	x3, x3, #0xf68
    d770:	sub	x4, x29, #0x4
    d774:	add	x5, sp, #0x8
    d778:	add	x6, sp, #0x4
    d77c:	mov	x1, x8
    d780:	stur	w9, [x29, #-4]
    d784:	stp	w9, w9, [sp, #4]
    d788:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    d78c:	cbz	w0, d7b0 <PyInit__testcapi@@Base+0x45f4>
    d790:	ldur	w1, [x29, #-4]
    d794:	ldp	w3, w2, [sp, #4]
    d798:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d79c:	add	x0, x0, #0x83a
    d7a0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d7a4:	ldp	x29, x30, [sp, #16]
    d7a8:	add	sp, sp, #0x20
    d7ac:	ret
    d7b0:	mov	x0, xzr
    d7b4:	ldp	x29, x30, [sp, #16]
    d7b8:	add	sp, sp, #0x20
    d7bc:	ret
    d7c0:	sub	sp, sp, #0x20
    d7c4:	stp	x29, x30, [sp, #16]
    d7c8:	add	x29, sp, #0x10
    d7cc:	mov	x8, x2
    d7d0:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    d7d4:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe44>
    d7d8:	mov	x0, x1
    d7dc:	mov	w9, #0xffffffff            	// #-1
    d7e0:	add	x2, x2, #0x855
    d7e4:	add	x3, x3, #0xf88
    d7e8:	sub	x4, x29, #0x4
    d7ec:	add	x5, sp, #0x8
    d7f0:	add	x6, sp, #0x4
    d7f4:	mov	x1, x8
    d7f8:	stur	w9, [x29, #-4]
    d7fc:	stp	w9, w9, [sp, #4]
    d800:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    d804:	cbz	w0, d828 <PyInit__testcapi@@Base+0x466c>
    d808:	ldur	w1, [x29, #-4]
    d80c:	ldp	w3, w2, [sp, #4]
    d810:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    d814:	add	x0, x0, #0x83a
    d818:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d81c:	ldp	x29, x30, [sp, #16]
    d820:	add	sp, sp, #0x20
    d824:	ret
    d828:	mov	x0, xzr
    d82c:	ldp	x29, x30, [sp, #16]
    d830:	add	sp, sp, #0x20
    d834:	ret
    d838:	sub	sp, sp, #0x20
    d83c:	stp	x29, x30, [sp, #16]
    d840:	add	x29, sp, #0x10
    d844:	mov	x0, x1
    d848:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d84c:	add	x1, x1, #0xdd3
    d850:	sub	x2, x29, #0x4
    d854:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d858:	cbz	w0, d870 <PyInit__testcapi@@Base+0x46b4>
    d85c:	ldurb	w0, [x29, #-4]
    d860:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d864:	ldp	x29, x30, [sp, #16]
    d868:	add	sp, sp, #0x20
    d86c:	ret
    d870:	mov	x0, xzr
    d874:	ldp	x29, x30, [sp, #16]
    d878:	add	sp, sp, #0x20
    d87c:	ret
    d880:	sub	sp, sp, #0x20
    d884:	stp	x29, x30, [sp, #16]
    d888:	add	x29, sp, #0x10
    d88c:	mov	x0, x1
    d890:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d894:	add	x1, x1, #0xddd
    d898:	sub	x2, x29, #0x4
    d89c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d8a0:	cbz	w0, d8b8 <PyInit__testcapi@@Base+0x46fc>
    d8a4:	ldurb	w0, [x29, #-4]
    d8a8:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d8ac:	ldp	x29, x30, [sp, #16]
    d8b0:	add	sp, sp, #0x20
    d8b4:	ret
    d8b8:	mov	x0, xzr
    d8bc:	ldp	x29, x30, [sp, #16]
    d8c0:	add	sp, sp, #0x20
    d8c4:	ret
    d8c8:	sub	sp, sp, #0x20
    d8cc:	stp	x29, x30, [sp, #16]
    d8d0:	add	x29, sp, #0x10
    d8d4:	mov	x0, x1
    d8d8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d8dc:	add	x1, x1, #0xde7
    d8e0:	sub	x2, x29, #0x4
    d8e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d8e8:	cbz	w0, d900 <PyInit__testcapi@@Base+0x4744>
    d8ec:	ldursh	x0, [x29, #-4]
    d8f0:	bl	8840 <PyLong_FromLong@plt>
    d8f4:	ldp	x29, x30, [sp, #16]
    d8f8:	add	sp, sp, #0x20
    d8fc:	ret
    d900:	mov	x0, xzr
    d904:	ldp	x29, x30, [sp, #16]
    d908:	add	sp, sp, #0x20
    d90c:	ret
    d910:	sub	sp, sp, #0x20
    d914:	stp	x29, x30, [sp, #16]
    d918:	add	x29, sp, #0x10
    d91c:	mov	x0, x1
    d920:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d924:	add	x1, x1, #0xdf1
    d928:	sub	x2, x29, #0x4
    d92c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d930:	cbz	w0, d948 <PyInit__testcapi@@Base+0x478c>
    d934:	ldurh	w0, [x29, #-4]
    d938:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d93c:	ldp	x29, x30, [sp, #16]
    d940:	add	sp, sp, #0x20
    d944:	ret
    d948:	mov	x0, xzr
    d94c:	ldp	x29, x30, [sp, #16]
    d950:	add	sp, sp, #0x20
    d954:	ret
    d958:	sub	sp, sp, #0x20
    d95c:	stp	x29, x30, [sp, #16]
    d960:	add	x29, sp, #0x10
    d964:	mov	x0, x1
    d968:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d96c:	add	x1, x1, #0x3c2
    d970:	sub	x2, x29, #0x4
    d974:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d978:	cbz	w0, d990 <PyInit__testcapi@@Base+0x47d4>
    d97c:	ldur	w0, [x29, #-4]
    d980:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d984:	ldp	x29, x30, [sp, #16]
    d988:	add	sp, sp, #0x20
    d98c:	ret
    d990:	mov	x0, xzr
    d994:	ldp	x29, x30, [sp, #16]
    d998:	add	sp, sp, #0x20
    d99c:	ret
    d9a0:	sub	sp, sp, #0x20
    d9a4:	stp	x29, x30, [sp, #16]
    d9a8:	add	x29, sp, #0x10
    d9ac:	mov	x0, x1
    d9b0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d9b4:	add	x1, x1, #0xe05
    d9b8:	add	x2, sp, #0x8
    d9bc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d9c0:	cbz	w0, d9d8 <PyInit__testcapi@@Base+0x481c>
    d9c4:	ldr	x0, [sp, #8]
    d9c8:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d9cc:	ldp	x29, x30, [sp, #16]
    d9d0:	add	sp, sp, #0x20
    d9d4:	ret
    d9d8:	mov	x0, xzr
    d9dc:	ldp	x29, x30, [sp, #16]
    d9e0:	add	sp, sp, #0x20
    d9e4:	ret
    d9e8:	sub	sp, sp, #0x20
    d9ec:	stp	x29, x30, [sp, #16]
    d9f0:	add	x29, sp, #0x10
    d9f4:	mov	x0, x1
    d9f8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    d9fc:	add	x1, x1, #0x84b
    da00:	sub	x2, x29, #0x4
    da04:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    da08:	cbz	w0, da20 <PyInit__testcapi@@Base+0x4864>
    da0c:	ldursw	x0, [x29, #-4]
    da10:	bl	8840 <PyLong_FromLong@plt>
    da14:	ldp	x29, x30, [sp, #16]
    da18:	add	sp, sp, #0x20
    da1c:	ret
    da20:	mov	x0, xzr
    da24:	ldp	x29, x30, [sp, #16]
    da28:	add	sp, sp, #0x20
    da2c:	ret
    da30:	sub	sp, sp, #0x20
    da34:	stp	x29, x30, [sp, #16]
    da38:	add	x29, sp, #0x10
    da3c:	mov	x0, x1
    da40:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    da44:	add	x1, x1, #0xd5b
    da48:	add	x2, sp, #0x8
    da4c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    da50:	cbz	w0, da68 <PyInit__testcapi@@Base+0x48ac>
    da54:	ldr	x0, [sp, #8]
    da58:	bl	8840 <PyLong_FromLong@plt>
    da5c:	ldp	x29, x30, [sp, #16]
    da60:	add	sp, sp, #0x20
    da64:	ret
    da68:	mov	x0, xzr
    da6c:	ldp	x29, x30, [sp, #16]
    da70:	add	sp, sp, #0x20
    da74:	ret
    da78:	sub	sp, sp, #0x20
    da7c:	stp	x29, x30, [sp, #16]
    da80:	add	x29, sp, #0x10
    da84:	mov	x0, x1
    da88:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    da8c:	add	x1, x1, #0xbb2
    da90:	add	x2, sp, #0x8
    da94:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    da98:	cbz	w0, dab0 <PyInit__testcapi@@Base+0x48f4>
    da9c:	ldr	x0, [sp, #8]
    daa0:	bl	87f0 <PyLong_FromSsize_t@plt>
    daa4:	ldp	x29, x30, [sp, #16]
    daa8:	add	sp, sp, #0x20
    daac:	ret
    dab0:	mov	x0, xzr
    dab4:	ldp	x29, x30, [sp, #16]
    dab8:	add	sp, sp, #0x20
    dabc:	ret
    dac0:	sub	sp, sp, #0x20
    dac4:	stp	x29, x30, [sp, #16]
    dac8:	add	x29, sp, #0x10
    dacc:	mov	x0, x1
    dad0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dad4:	add	x1, x1, #0xe2d
    dad8:	sub	x2, x29, #0x4
    dadc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    dae0:	cbz	w0, daf8 <PyInit__testcapi@@Base+0x493c>
    dae4:	ldursw	x0, [x29, #-4]
    dae8:	bl	8840 <PyLong_FromLong@plt>
    daec:	ldp	x29, x30, [sp, #16]
    daf0:	add	sp, sp, #0x20
    daf4:	ret
    daf8:	mov	x0, xzr
    dafc:	ldp	x29, x30, [sp, #16]
    db00:	add	sp, sp, #0x20
    db04:	ret
    db08:	sub	sp, sp, #0x20
    db0c:	stp	x29, x30, [sp, #16]
    db10:	add	x29, sp, #0x10
    db14:	mov	x0, x1
    db18:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    db1c:	add	x1, x1, #0xe2c
    db20:	add	x2, sp, #0x8
    db24:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    db28:	cbz	w0, db40 <PyInit__testcapi@@Base+0x4984>
    db2c:	ldr	x0, [sp, #8]
    db30:	bl	8ef0 <PyLong_FromLongLong@plt>
    db34:	ldp	x29, x30, [sp, #16]
    db38:	add	sp, sp, #0x20
    db3c:	ret
    db40:	mov	x0, xzr
    db44:	ldp	x29, x30, [sp, #16]
    db48:	add	sp, sp, #0x20
    db4c:	ret
    db50:	sub	sp, sp, #0x20
    db54:	stp	x29, x30, [sp, #16]
    db58:	add	x29, sp, #0x10
    db5c:	mov	x0, x1
    db60:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    db64:	add	x1, x1, #0xe41
    db68:	add	x2, sp, #0x8
    db6c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    db70:	cbz	w0, db88 <PyInit__testcapi@@Base+0x49cc>
    db74:	ldr	x0, [sp, #8]
    db78:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    db7c:	ldp	x29, x30, [sp, #16]
    db80:	add	sp, sp, #0x20
    db84:	ret
    db88:	mov	x0, xzr
    db8c:	ldp	x29, x30, [sp, #16]
    db90:	add	sp, sp, #0x20
    db94:	ret
    db98:	stp	x29, x30, [sp, #-80]!
    db9c:	stp	x26, x25, [sp, #16]
    dba0:	stp	x24, x23, [sp, #32]
    dba4:	stp	x22, x21, [sp, #48]
    dba8:	stp	x20, x19, [sp, #64]
    dbac:	mov	x29, sp
    dbb0:	mov	w24, #0xaaab                	// #43691
    dbb4:	mov	w22, wzr
    dbb8:	mov	w23, #0x1                   	// #1
    dbbc:	movk	w24, #0xaaaa, lsl #16
    dbc0:	mov	w25, wzr
    dbc4:	neg	x26, x23
    dbc8:	b	dbd8 <PyInit__testcapi@@Base+0x4a1c>
    dbcc:	add	w25, w25, #0x1
    dbd0:	cmp	w25, #0x6
    dbd4:	b.eq	dc8c <PyInit__testcapi@@Base+0x4ad0>  // b.none
    dbd8:	umull	x8, w25, w24
    dbdc:	lsr	x8, x8, #33
    dbe0:	add	w8, w8, w8, lsl #1
    dbe4:	cmp	w25, #0x3
    dbe8:	mvn	w8, w8
    dbec:	csel	x9, x23, x26, cc  // cc = lo, ul, last
    dbf0:	add	w8, w8, w25
    dbf4:	add	x19, x9, w8, sxtw
    dbf8:	mov	x0, x19
    dbfc:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    dc00:	cbz	x0, dcec <PyInit__testcapi@@Base+0x4b30>
    dc04:	mov	x20, x0
    dc08:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    dc0c:	mov	x21, x0
    dc10:	cmn	x0, #0x1
    dc14:	b.ne	dc20 <PyInit__testcapi@@Base+0x4a64>  // b.any
    dc18:	bl	8980 <PyErr_Occurred@plt>
    dc1c:	cbnz	x0, dd7c <PyInit__testcapi@@Base+0x4bc0>
    dc20:	cmp	x21, x19
    dc24:	b.ne	dd10 <PyInit__testcapi@@Base+0x4b54>  // b.any
    dc28:	ldr	x8, [x20]
    dc2c:	subs	x8, x8, #0x1
    dc30:	str	x8, [x20]
    dc34:	b.ne	dc40 <PyInit__testcapi@@Base+0x4a84>  // b.any
    dc38:	mov	x0, x20
    dc3c:	bl	8560 <_Py_Dealloc@plt>
    dc40:	mov	x0, x19
    dc44:	bl	8ef0 <PyLong_FromLongLong@plt>
    dc48:	cbz	x0, dd34 <PyInit__testcapi@@Base+0x4b78>
    dc4c:	mov	x20, x0
    dc50:	bl	8df0 <PyLong_AsLongLong@plt>
    dc54:	mov	x21, x0
    dc58:	cmn	x0, #0x1
    dc5c:	b.ne	dc68 <PyInit__testcapi@@Base+0x4aac>  // b.any
    dc60:	bl	8980 <PyErr_Occurred@plt>
    dc64:	cbnz	x0, dda0 <PyInit__testcapi@@Base+0x4be4>
    dc68:	cmp	x21, x19
    dc6c:	b.ne	dd58 <PyInit__testcapi@@Base+0x4b9c>  // b.any
    dc70:	ldr	x8, [x20]
    dc74:	subs	x8, x8, #0x1
    dc78:	str	x8, [x20]
    dc7c:	b.ne	dbcc <PyInit__testcapi@@Base+0x4a10>  // b.any
    dc80:	mov	x0, x20
    dc84:	bl	8560 <_Py_Dealloc@plt>
    dc88:	b	dbcc <PyInit__testcapi@@Base+0x4a10>
    dc8c:	add	w22, w22, #0x1
    dc90:	cmp	w22, #0x41
    dc94:	lsl	x23, x23, #1
    dc98:	b.ne	dbc0 <PyInit__testcapi@@Base+0x4a04>  // b.any
    dc9c:	mov	w0, #0x1                   	// #1
    dca0:	bl	8840 <PyLong_FromLong@plt>
    dca4:	mov	x19, x0
    dca8:	cbz	x0, dde4 <PyInit__testcapi@@Base+0x4c28>
    dcac:	mov	x0, x19
    dcb0:	bl	8270 <PyNumber_Negative@plt>
    dcb4:	cbz	x0, e084 <PyInit__testcapi@@Base+0x4ec8>
    dcb8:	mov	x20, x0
    dcbc:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    dcc0:	cmn	x0, #0x1
    dcc4:	b.eq	de0c <PyInit__testcapi@@Base+0x4c50>  // b.none
    dcc8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dccc:	ldr	x0, [x8, #3552]
    dcd0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dcd4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dcd8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dcdc:	add	x1, x1, #0xba2
    dce0:	add	x2, x2, #0xe43
    dce4:	add	x3, x3, #0x90b
    dce8:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dcec:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dcf0:	ldr	x0, [x8, #3552]
    dcf4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dcf8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dcfc:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd00:	add	x1, x1, #0xba2
    dd04:	add	x2, x2, #0xe43
    dd08:	add	x3, x3, #0x868
    dd0c:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dd10:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dd14:	ldr	x0, [x8, #3552]
    dd18:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd1c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dd20:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd24:	add	x1, x1, #0xba2
    dd28:	add	x2, x2, #0xe43
    dd2c:	add	x3, x3, #0x8a6
    dd30:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dd34:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dd38:	ldr	x0, [x8, #3552]
    dd3c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd40:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dd44:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd48:	add	x1, x1, #0xba2
    dd4c:	add	x2, x2, #0xe43
    dd50:	add	x3, x3, #0x86a
    dd54:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dd58:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dd5c:	ldr	x0, [x8, #3552]
    dd60:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd64:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dd68:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd6c:	add	x1, x1, #0xba2
    dd70:	add	x2, x2, #0xe43
    dd74:	add	x3, x3, #0x8a8
    dd78:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dd7c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dd80:	ldr	x0, [x8, #3552]
    dd84:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd88:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dd8c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd90:	add	x1, x1, #0xba2
    dd94:	add	x2, x2, #0xe43
    dd98:	add	x3, x3, #0x888
    dd9c:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dda0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dda4:	ldr	x0, [x8, #3552]
    dda8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ddac:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    ddb0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ddb4:	add	x1, x1, #0xba2
    ddb8:	add	x2, x2, #0xe43
    ddbc:	add	x3, x3, #0x88a
    ddc0:	bl	8e60 <PyErr_Format@plt>
    ddc4:	mov	x19, xzr
    ddc8:	mov	x0, x19
    ddcc:	ldp	x20, x19, [sp, #64]
    ddd0:	ldp	x22, x21, [sp, #48]
    ddd4:	ldp	x24, x23, [sp, #32]
    ddd8:	ldp	x26, x25, [sp, #16]
    dddc:	ldp	x29, x30, [sp], #80
    dde0:	ret
    dde4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dde8:	ldr	x0, [x8, #3552]
    ddec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ddf0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    ddf4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ddf8:	add	x1, x1, #0xba2
    ddfc:	add	x2, x2, #0xe43
    de00:	add	x3, x3, #0x8bf
    de04:	bl	8e60 <PyErr_Format@plt>
    de08:	b	ddc8 <PyInit__testcapi@@Base+0x4c0c>
    de0c:	bl	8980 <PyErr_Occurred@plt>
    de10:	cbz	x0, dcc8 <PyInit__testcapi@@Base+0x4b0c>
    de14:	adrp	x22, 27000 <PyInit__testcapi@@Base+0x1de44>
    de18:	ldr	x22, [x22, #4000]
    de1c:	ldr	x0, [x22]
    de20:	bl	8760 <PyErr_ExceptionMatches@plt>
    de24:	cbz	w0, deb4 <PyInit__testcapi@@Base+0x4cf8>
    de28:	bl	88c0 <PyErr_Clear@plt>
    de2c:	ldr	x8, [x20]
    de30:	subs	x8, x8, #0x1
    de34:	str	x8, [x20]
    de38:	b.ne	de44 <PyInit__testcapi@@Base+0x4c88>  // b.any
    de3c:	mov	x0, x20
    de40:	bl	8560 <_Py_Dealloc@plt>
    de44:	mov	w0, #0x40                  	// #64
    de48:	bl	8840 <PyLong_FromLong@plt>
    de4c:	cbz	x0, ded8 <PyInit__testcapi@@Base+0x4d1c>
    de50:	mov	x21, x0
    de54:	mov	x0, x19
    de58:	mov	x1, x21
    de5c:	bl	8390 <PyNumber_Lshift@plt>
    de60:	ldr	x8, [x21]
    de64:	mov	x20, x0
    de68:	subs	x8, x8, #0x1
    de6c:	str	x8, [x21]
    de70:	b.ne	de7c <PyInit__testcapi@@Base+0x4cc0>  // b.any
    de74:	mov	x0, x21
    de78:	bl	8560 <_Py_Dealloc@plt>
    de7c:	cbz	x20, defc <PyInit__testcapi@@Base+0x4d40>
    de80:	mov	x0, x20
    de84:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    de88:	cmn	x0, #0x1
    de8c:	b.eq	df20 <PyInit__testcapi@@Base+0x4d64>  // b.none
    de90:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    de94:	ldr	x0, [x8, #3552]
    de98:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    de9c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dea0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dea4:	add	x1, x1, #0xba2
    dea8:	add	x2, x2, #0xe43
    deac:	add	x3, x3, #0x99c
    deb0:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    deb4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    deb8:	ldr	x0, [x8, #3552]
    debc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dec0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dec4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dec8:	add	x1, x1, #0xba2
    decc:	add	x2, x2, #0xe43
    ded0:	add	x3, x3, #0x934
    ded4:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    ded8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dedc:	ldr	x0, [x8, #3552]
    dee0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dee4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dee8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    deec:	add	x1, x1, #0xba2
    def0:	add	x2, x2, #0xe43
    def4:	add	x3, x3, #0x8bf
    def8:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    defc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    df00:	ldr	x0, [x8, #3552]
    df04:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    df08:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    df0c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    df10:	add	x1, x1, #0xba2
    df14:	add	x2, x2, #0xe43
    df18:	add	x3, x3, #0x977
    df1c:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    df20:	bl	8980 <PyErr_Occurred@plt>
    df24:	cbz	x0, de90 <PyInit__testcapi@@Base+0x4cd4>
    df28:	ldr	x0, [x22]
    df2c:	mov	x23, x22
    df30:	bl	8760 <PyErr_ExceptionMatches@plt>
    df34:	cbz	w0, df9c <PyInit__testcapi@@Base+0x4de0>
    df38:	bl	88c0 <PyErr_Clear@plt>
    df3c:	mov	x0, x20
    df40:	mov	x1, x19
    df44:	bl	8b60 <PyNumber_Rshift@plt>
    df48:	ldr	x8, [x20]
    df4c:	mov	x21, x0
    df50:	subs	x8, x8, #0x1
    df54:	str	x8, [x20]
    df58:	b.ne	df64 <PyInit__testcapi@@Base+0x4da8>  // b.any
    df5c:	mov	x0, x20
    df60:	bl	8560 <_Py_Dealloc@plt>
    df64:	cbz	x21, dfc0 <PyInit__testcapi@@Base+0x4e04>
    df68:	mov	x0, x21
    df6c:	bl	8df0 <PyLong_AsLongLong@plt>
    df70:	cmn	x0, #0x1
    df74:	b.eq	dfe4 <PyInit__testcapi@@Base+0x4e28>  // b.none
    df78:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    df7c:	ldr	x0, [x8, #3552]
    df80:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    df84:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    df88:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    df8c:	add	x1, x1, #0xba2
    df90:	add	x2, x2, #0xe43
    df94:	add	x3, x3, #0xa39
    df98:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    df9c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dfa0:	ldr	x0, [x8, #3552]
    dfa4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dfa8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dfac:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dfb0:	add	x1, x1, #0xba2
    dfb4:	add	x2, x2, #0xe43
    dfb8:	add	x3, x3, #0x9cb
    dfbc:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dfc0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    dfc4:	ldr	x0, [x8, #3552]
    dfc8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dfcc:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    dfd0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dfd4:	add	x1, x1, #0xba2
    dfd8:	add	x2, x2, #0xe43
    dfdc:	add	x3, x3, #0xa14
    dfe0:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    dfe4:	bl	8980 <PyErr_Occurred@plt>
    dfe8:	cbz	x0, df78 <PyInit__testcapi@@Base+0x4dbc>
    dfec:	ldr	x0, [x23]
    dff0:	bl	8760 <PyErr_ExceptionMatches@plt>
    dff4:	cbz	w0, e0a8 <PyInit__testcapi@@Base+0x4eec>
    dff8:	bl	88c0 <PyErr_Clear@plt>
    dffc:	mov	x0, x21
    e000:	bl	8270 <PyNumber_Negative@plt>
    e004:	ldr	x8, [x21]
    e008:	mov	x22, x0
    e00c:	subs	x8, x8, #0x1
    e010:	str	x8, [x21]
    e014:	b.ne	e020 <PyInit__testcapi@@Base+0x4e64>  // b.any
    e018:	mov	x0, x21
    e01c:	bl	8560 <_Py_Dealloc@plt>
    e020:	cbz	x22, e084 <PyInit__testcapi@@Base+0x4ec8>
    e024:	mov	x0, x22
    e028:	mov	x1, x19
    e02c:	bl	8fe0 <PyNumber_Subtract@plt>
    e030:	ldr	x8, [x22]
    e034:	mov	x20, x0
    e038:	subs	x8, x8, #0x1
    e03c:	str	x8, [x22]
    e040:	b.ne	e04c <PyInit__testcapi@@Base+0x4e90>  // b.any
    e044:	mov	x0, x22
    e048:	bl	8560 <_Py_Dealloc@plt>
    e04c:	cbz	x20, e0cc <PyInit__testcapi@@Base+0x4f10>
    e050:	mov	x0, x20
    e054:	bl	8df0 <PyLong_AsLongLong@plt>
    e058:	cmn	x0, #0x1
    e05c:	b.eq	e0f0 <PyInit__testcapi@@Base+0x4f34>  // b.none
    e060:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e064:	ldr	x0, [x8, #3552]
    e068:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e06c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e070:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e074:	add	x1, x1, #0xba2
    e078:	add	x2, x2, #0xe43
    e07c:	add	x3, x3, #0xad0
    e080:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    e084:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e088:	ldr	x0, [x8, #3552]
    e08c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e090:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e094:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e098:	add	x1, x1, #0xba2
    e09c:	add	x2, x2, #0xe43
    e0a0:	add	x3, x3, #0x8e4
    e0a4:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    e0a8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e0ac:	ldr	x0, [x8, #3552]
    e0b0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e0b4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e0b8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e0bc:	add	x1, x1, #0xba2
    e0c0:	add	x2, x2, #0xe43
    e0c4:	add	x3, x3, #0xa64
    e0c8:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    e0cc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e0d0:	ldr	x0, [x8, #3552]
    e0d4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e0d8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e0dc:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e0e0:	add	x1, x1, #0xba2
    e0e4:	add	x2, x2, #0xe43
    e0e8:	add	x3, x3, #0xaa9
    e0ec:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    e0f0:	bl	8980 <PyErr_Occurred@plt>
    e0f4:	cbz	x0, e060 <PyInit__testcapi@@Base+0x4ea4>
    e0f8:	ldr	x0, [x23]
    e0fc:	bl	8760 <PyErr_ExceptionMatches@plt>
    e100:	cbz	w0, e17c <PyInit__testcapi@@Base+0x4fc0>
    e104:	bl	88c0 <PyErr_Clear@plt>
    e108:	ldr	x8, [x20]
    e10c:	subs	x8, x8, #0x1
    e110:	str	x8, [x20]
    e114:	b.ne	e120 <PyInit__testcapi@@Base+0x4f64>  // b.any
    e118:	mov	x0, x20
    e11c:	bl	8560 <_Py_Dealloc@plt>
    e120:	ldr	x8, [x19]
    e124:	subs	x8, x8, #0x1
    e128:	str	x8, [x19]
    e12c:	b.ne	e138 <PyInit__testcapi@@Base+0x4f7c>  // b.any
    e130:	mov	x0, x19
    e134:	bl	8560 <_Py_Dealloc@plt>
    e138:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    e13c:	ldr	x0, [x0, #4016]
    e140:	ldr	x8, [x0]
    e144:	add	x8, x8, #0x1
    e148:	str	x8, [x0]
    e14c:	bl	8df0 <PyLong_AsLongLong@plt>
    e150:	cmn	x0, #0x1
    e154:	b.eq	e1a0 <PyInit__testcapi@@Base+0x4fe4>  // b.none
    e158:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e15c:	ldr	x0, [x8, #3552]
    e160:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e164:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e168:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e16c:	add	x1, x1, #0xba2
    e170:	add	x2, x2, #0xe43
    e174:	add	x3, x3, #0xb46
    e178:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    e17c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e180:	ldr	x0, [x8, #3552]
    e184:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e188:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e18c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e190:	add	x1, x1, #0xba2
    e194:	add	x2, x2, #0xe43
    e198:	add	x3, x3, #0xafe
    e19c:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    e1a0:	bl	8980 <PyErr_Occurred@plt>
    e1a4:	cbz	x0, e158 <PyInit__testcapi@@Base+0x4f9c>
    e1a8:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    e1ac:	ldr	x20, [x20, #3952]
    e1b0:	ldr	x0, [x20]
    e1b4:	bl	8760 <PyErr_ExceptionMatches@plt>
    e1b8:	cbz	w0, e218 <PyInit__testcapi@@Base+0x505c>
    e1bc:	bl	88c0 <PyErr_Clear@plt>
    e1c0:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
    e1c4:	ldr	x19, [x19, #4016]
    e1c8:	mov	x0, x19
    e1cc:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    e1d0:	cmn	x0, #0x1
    e1d4:	b.ne	e158 <PyInit__testcapi@@Base+0x4f9c>  // b.any
    e1d8:	bl	8980 <PyErr_Occurred@plt>
    e1dc:	cbz	x0, e158 <PyInit__testcapi@@Base+0x4f9c>
    e1e0:	ldr	x0, [x20]
    e1e4:	bl	8760 <PyErr_ExceptionMatches@plt>
    e1e8:	cbz	w0, e218 <PyInit__testcapi@@Base+0x505c>
    e1ec:	bl	88c0 <PyErr_Clear@plt>
    e1f0:	ldr	x8, [x19]
    e1f4:	subs	x8, x8, #0x1
    e1f8:	str	x8, [x19]
    e1fc:	b.ne	e20c <PyInit__testcapi@@Base+0x5050>  // b.any
    e200:	mov	x0, x19
    e204:	bl	8560 <_Py_Dealloc@plt>
    e208:	ldr	x8, [x19]
    e20c:	add	x8, x8, #0x1
    e210:	str	x8, [x19]
    e214:	b	ddc8 <PyInit__testcapi@@Base+0x4c0c>
    e218:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e21c:	ldr	x0, [x8, #3552]
    e220:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e224:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e228:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e22c:	add	x1, x1, #0xba2
    e230:	add	x2, x2, #0xe43
    e234:	add	x3, x3, #0xb69
    e238:	b	ddc0 <PyInit__testcapi@@Base+0x4c04>
    e23c:	stp	x29, x30, [sp, #-48]!
    e240:	str	x21, [sp, #16]
    e244:	stp	x20, x19, [sp, #32]
    e248:	mov	x29, sp
    e24c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    e250:	add	x0, x0, #0xc49
    e254:	mov	w2, #0x10                  	// #16
    e258:	mov	x1, xzr
    e25c:	bl	8f90 <PyLong_FromString@plt>
    e260:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e264:	mov	w8, #0x4d2                 	// #1234
    e268:	add	x1, x29, #0x1c
    e26c:	mov	x19, x0
    e270:	str	w8, [x29, #28]
    e274:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e278:	ldr	x8, [x19]
    e27c:	mov	x20, x0
    e280:	subs	x8, x8, #0x1
    e284:	str	x8, [x19]
    e288:	b.eq	e298 <PyInit__testcapi@@Base+0x50dc>  // b.none
    e28c:	cmn	x20, #0x1
    e290:	b.ne	e2a8 <PyInit__testcapi@@Base+0x50ec>  // b.any
    e294:	b	e2e0 <PyInit__testcapi@@Base+0x5124>
    e298:	mov	x0, x19
    e29c:	bl	8560 <_Py_Dealloc@plt>
    e2a0:	cmn	x20, #0x1
    e2a4:	b.eq	e2e0 <PyInit__testcapi@@Base+0x5124>  // b.none
    e2a8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e2ac:	ldr	x0, [x8, #3552]
    e2b0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e2b4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e2b8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e2bc:	add	x1, x1, #0xba2
    e2c0:	add	x2, x2, #0xe55
    e2c4:	add	x3, x3, #0xc0f
    e2c8:	bl	8e60 <PyErr_Format@plt>
    e2cc:	mov	x0, xzr
    e2d0:	ldp	x20, x19, [sp, #32]
    e2d4:	ldr	x21, [sp, #16]
    e2d8:	ldp	x29, x30, [sp], #48
    e2dc:	ret
    e2e0:	bl	8980 <PyErr_Occurred@plt>
    e2e4:	cbz	x0, e2fc <PyInit__testcapi@@Base+0x5140>
    e2e8:	mov	x0, xzr
    e2ec:	ldp	x20, x19, [sp, #32]
    e2f0:	ldr	x21, [sp, #16]
    e2f4:	ldp	x29, x30, [sp], #48
    e2f8:	ret
    e2fc:	ldr	w8, [x29, #28]
    e300:	cmp	w8, #0x1
    e304:	b.ne	e454 <PyInit__testcapi@@Base+0x5298>  // b.any
    e308:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    e30c:	bl	8ef0 <PyLong_FromLongLong@plt>
    e310:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e314:	mov	x19, x0
    e318:	mov	w0, #0x1                   	// #1
    e31c:	bl	8840 <PyLong_FromLong@plt>
    e320:	cbz	x0, e4d0 <PyInit__testcapi@@Base+0x5314>
    e324:	mov	x21, x0
    e328:	mov	x0, x19
    e32c:	mov	x1, x21
    e330:	bl	8490 <PyNumber_Add@plt>
    e334:	ldr	x8, [x21]
    e338:	mov	x20, x0
    e33c:	subs	x8, x8, #0x1
    e340:	str	x8, [x21]
    e344:	b.eq	e360 <PyInit__testcapi@@Base+0x51a4>  // b.none
    e348:	ldr	x8, [x19]
    e34c:	subs	x8, x8, #0x1
    e350:	str	x8, [x19]
    e354:	b.eq	e378 <PyInit__testcapi@@Base+0x51bc>  // b.none
    e358:	cbnz	x20, e384 <PyInit__testcapi@@Base+0x51c8>
    e35c:	b	e2e8 <PyInit__testcapi@@Base+0x512c>
    e360:	mov	x0, x21
    e364:	bl	8560 <_Py_Dealloc@plt>
    e368:	ldr	x8, [x19]
    e36c:	subs	x8, x8, #0x1
    e370:	str	x8, [x19]
    e374:	b.ne	e358 <PyInit__testcapi@@Base+0x519c>  // b.any
    e378:	mov	x0, x19
    e37c:	bl	8560 <_Py_Dealloc@plt>
    e380:	cbz	x20, e2e8 <PyInit__testcapi@@Base+0x512c>
    e384:	add	x1, x29, #0x1c
    e388:	mov	x0, x20
    e38c:	str	wzr, [x29, #28]
    e390:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e394:	ldr	x8, [x20]
    e398:	mov	x19, x0
    e39c:	subs	x8, x8, #0x1
    e3a0:	str	x8, [x20]
    e3a4:	b.ne	e3b0 <PyInit__testcapi@@Base+0x51f4>  // b.any
    e3a8:	mov	x0, x20
    e3ac:	bl	8560 <_Py_Dealloc@plt>
    e3b0:	cmn	x19, #0x1
    e3b4:	b.ne	e2a8 <PyInit__testcapi@@Base+0x50ec>  // b.any
    e3b8:	bl	8980 <PyErr_Occurred@plt>
    e3bc:	cbnz	x0, e2e8 <PyInit__testcapi@@Base+0x512c>
    e3c0:	ldr	w8, [x29, #28]
    e3c4:	cmp	w8, #0x1
    e3c8:	b.ne	e454 <PyInit__testcapi@@Base+0x5298>  // b.any
    e3cc:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    e3d0:	add	x0, x0, #0xc48
    e3d4:	mov	w2, #0x10                  	// #16
    e3d8:	mov	x1, xzr
    e3dc:	bl	8f90 <PyLong_FromString@plt>
    e3e0:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e3e4:	mov	w8, #0x4d2                 	// #1234
    e3e8:	add	x1, x29, #0x1c
    e3ec:	mov	x19, x0
    e3f0:	str	w8, [x29, #28]
    e3f4:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e3f8:	ldr	x8, [x19]
    e3fc:	mov	x20, x0
    e400:	subs	x8, x8, #0x1
    e404:	str	x8, [x19]
    e408:	b.ne	e414 <PyInit__testcapi@@Base+0x5258>  // b.any
    e40c:	mov	x0, x19
    e410:	bl	8560 <_Py_Dealloc@plt>
    e414:	cmn	x20, #0x1
    e418:	b.ne	e2a8 <PyInit__testcapi@@Base+0x50ec>  // b.any
    e41c:	bl	8980 <PyErr_Occurred@plt>
    e420:	cbnz	x0, e2e8 <PyInit__testcapi@@Base+0x512c>
    e424:	ldr	w8, [x29, #28]
    e428:	cmn	w8, #0x1
    e42c:	b.eq	e478 <PyInit__testcapi@@Base+0x52bc>  // b.none
    e430:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e434:	ldr	x0, [x8, #3552]
    e438:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e43c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e440:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e444:	add	x1, x1, #0xba2
    e448:	add	x2, x2, #0xe55
    e44c:	add	x3, x3, #0xc62
    e450:	b	e2c8 <PyInit__testcapi@@Base+0x510c>
    e454:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e458:	ldr	x0, [x8, #3552]
    e45c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e460:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e464:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e468:	add	x1, x1, #0xba2
    e46c:	add	x2, x2, #0xe55
    e470:	add	x3, x3, #0xc2e
    e474:	b	e2c8 <PyInit__testcapi@@Base+0x510c>
    e478:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e47c:	bl	8ef0 <PyLong_FromLongLong@plt>
    e480:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e484:	mov	x19, x0
    e488:	mov	w0, #0x1                   	// #1
    e48c:	bl	8840 <PyLong_FromLong@plt>
    e490:	cbz	x0, e4d0 <PyInit__testcapi@@Base+0x5314>
    e494:	mov	x21, x0
    e498:	mov	x0, x19
    e49c:	mov	x1, x21
    e4a0:	bl	8fe0 <PyNumber_Subtract@plt>
    e4a4:	ldr	x8, [x21]
    e4a8:	mov	x20, x0
    e4ac:	subs	x8, x8, #0x1
    e4b0:	str	x8, [x21]
    e4b4:	b.eq	e4ec <PyInit__testcapi@@Base+0x5330>  // b.none
    e4b8:	ldr	x8, [x19]
    e4bc:	subs	x8, x8, #0x1
    e4c0:	str	x8, [x19]
    e4c4:	b.eq	e504 <PyInit__testcapi@@Base+0x5348>  // b.none
    e4c8:	cbnz	x20, e510 <PyInit__testcapi@@Base+0x5354>
    e4cc:	b	e2e8 <PyInit__testcapi@@Base+0x512c>
    e4d0:	ldr	x8, [x19]
    e4d4:	subs	x8, x8, #0x1
    e4d8:	str	x8, [x19]
    e4dc:	b.ne	e2e8 <PyInit__testcapi@@Base+0x512c>  // b.any
    e4e0:	mov	x0, x19
    e4e4:	bl	8560 <_Py_Dealloc@plt>
    e4e8:	b	e2e8 <PyInit__testcapi@@Base+0x512c>
    e4ec:	mov	x0, x21
    e4f0:	bl	8560 <_Py_Dealloc@plt>
    e4f4:	ldr	x8, [x19]
    e4f8:	subs	x8, x8, #0x1
    e4fc:	str	x8, [x19]
    e500:	b.ne	e4c8 <PyInit__testcapi@@Base+0x530c>  // b.any
    e504:	mov	x0, x19
    e508:	bl	8560 <_Py_Dealloc@plt>
    e50c:	cbz	x20, e2e8 <PyInit__testcapi@@Base+0x512c>
    e510:	add	x1, x29, #0x1c
    e514:	mov	x0, x20
    e518:	str	wzr, [x29, #28]
    e51c:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e520:	ldr	x8, [x20]
    e524:	mov	x19, x0
    e528:	subs	x8, x8, #0x1
    e52c:	str	x8, [x20]
    e530:	b.ne	e53c <PyInit__testcapi@@Base+0x5380>  // b.any
    e534:	mov	x0, x20
    e538:	bl	8560 <_Py_Dealloc@plt>
    e53c:	cmn	x19, #0x1
    e540:	b.ne	e2a8 <PyInit__testcapi@@Base+0x50ec>  // b.any
    e544:	bl	8980 <PyErr_Occurred@plt>
    e548:	cbnz	x0, e2e8 <PyInit__testcapi@@Base+0x512c>
    e54c:	ldr	w8, [x29, #28]
    e550:	cmn	w8, #0x1
    e554:	b.ne	e430 <PyInit__testcapi@@Base+0x5274>  // b.any
    e558:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    e55c:	add	x0, x0, #0xcb2
    e560:	mov	w2, #0x10                  	// #16
    e564:	mov	x1, xzr
    e568:	bl	8f90 <PyLong_FromString@plt>
    e56c:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e570:	mov	w8, #0x4d2                 	// #1234
    e574:	add	x1, x29, #0x1c
    e578:	mov	x19, x0
    e57c:	str	w8, [x29, #28]
    e580:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e584:	ldr	x8, [x19]
    e588:	mov	x20, x0
    e58c:	subs	x8, x8, #0x1
    e590:	str	x8, [x19]
    e594:	b.ne	e5a0 <PyInit__testcapi@@Base+0x53e4>  // b.any
    e598:	mov	x0, x19
    e59c:	bl	8560 <_Py_Dealloc@plt>
    e5a0:	cmp	x20, #0xff
    e5a4:	b.eq	e5dc <PyInit__testcapi@@Base+0x5420>  // b.none
    e5a8:	cmn	x20, #0x1
    e5ac:	b.ne	e5b8 <PyInit__testcapi@@Base+0x53fc>  // b.any
    e5b0:	bl	8980 <PyErr_Occurred@plt>
    e5b4:	cbnz	x0, e2e8 <PyInit__testcapi@@Base+0x512c>
    e5b8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e5bc:	ldr	x0, [x8, #3552]
    e5c0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e5c4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e5c8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e5cc:	add	x1, x1, #0xba2
    e5d0:	add	x2, x2, #0xe55
    e5d4:	add	x3, x3, #0xc7d
    e5d8:	b	e2c8 <PyInit__testcapi@@Base+0x510c>
    e5dc:	ldr	w8, [x29, #28]
    e5e0:	cbz	w8, e608 <PyInit__testcapi@@Base+0x544c>
    e5e4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e5e8:	ldr	x0, [x8, #3552]
    e5ec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e5f0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e5f4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e5f8:	add	x1, x1, #0xba2
    e5fc:	add	x2, x2, #0xe55
    e600:	add	x3, x3, #0xc98
    e604:	b	e2c8 <PyInit__testcapi@@Base+0x510c>
    e608:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    e60c:	add	x0, x0, #0xcb1
    e610:	mov	w2, #0x10                  	// #16
    e614:	mov	x1, xzr
    e618:	bl	8f90 <PyLong_FromString@plt>
    e61c:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e620:	add	x1, x29, #0x1c
    e624:	mov	x19, x0
    e628:	str	wzr, [x29, #28]
    e62c:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e630:	ldr	x8, [x19]
    e634:	mov	x20, x0
    e638:	subs	x8, x8, #0x1
    e63c:	str	x8, [x19]
    e640:	b.ne	e64c <PyInit__testcapi@@Base+0x5490>  // b.any
    e644:	mov	x0, x19
    e648:	bl	8560 <_Py_Dealloc@plt>
    e64c:	cmn	x20, #0xff
    e650:	b.eq	e660 <PyInit__testcapi@@Base+0x54a4>  // b.none
    e654:	cmn	x20, #0x1
    e658:	b.eq	e5b0 <PyInit__testcapi@@Base+0x53f4>  // b.none
    e65c:	b	e5b8 <PyInit__testcapi@@Base+0x53fc>
    e660:	ldr	w8, [x29, #28]
    e664:	cbz	w8, e68c <PyInit__testcapi@@Base+0x54d0>
    e668:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e66c:	ldr	x0, [x8, #3552]
    e670:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e674:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e678:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e67c:	add	x1, x1, #0xba2
    e680:	add	x2, x2, #0xe55
    e684:	add	x3, x3, #0xcb5
    e688:	b	e2c8 <PyInit__testcapi@@Base+0x510c>
    e68c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    e690:	bl	8ef0 <PyLong_FromLongLong@plt>
    e694:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e698:	mov	w8, #0x4d2                 	// #1234
    e69c:	add	x1, x29, #0x1c
    e6a0:	mov	x19, x0
    e6a4:	str	w8, [x29, #28]
    e6a8:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e6ac:	ldr	x8, [x19]
    e6b0:	mov	x20, x0
    e6b4:	subs	x8, x8, #0x1
    e6b8:	str	x8, [x19]
    e6bc:	b.ne	e6c8 <PyInit__testcapi@@Base+0x550c>  // b.any
    e6c0:	mov	x0, x19
    e6c4:	bl	8560 <_Py_Dealloc@plt>
    e6c8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    e6cc:	cmp	x20, x8
    e6d0:	b.eq	e708 <PyInit__testcapi@@Base+0x554c>  // b.none
    e6d4:	cmn	x20, #0x1
    e6d8:	b.ne	e6e4 <PyInit__testcapi@@Base+0x5528>  // b.any
    e6dc:	bl	8980 <PyErr_Occurred@plt>
    e6e0:	cbnz	x0, e2e8 <PyInit__testcapi@@Base+0x512c>
    e6e4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e6e8:	ldr	x0, [x8, #3552]
    e6ec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e6f0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e6f4:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    e6f8:	add	x1, x1, #0xba2
    e6fc:	add	x2, x2, #0xe55
    e700:	add	x3, x3, #0x85a
    e704:	b	e2c8 <PyInit__testcapi@@Base+0x510c>
    e708:	ldr	w8, [x29, #28]
    e70c:	cbnz	w8, e5e4 <PyInit__testcapi@@Base+0x5428>
    e710:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e714:	bl	8ef0 <PyLong_FromLongLong@plt>
    e718:	cbz	x0, e2d0 <PyInit__testcapi@@Base+0x5114>
    e71c:	add	x1, x29, #0x1c
    e720:	mov	x19, x0
    e724:	str	wzr, [x29, #28]
    e728:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    e72c:	ldr	x8, [x19]
    e730:	mov	x20, x0
    e734:	subs	x8, x8, #0x1
    e738:	str	x8, [x19]
    e73c:	b.ne	e748 <PyInit__testcapi@@Base+0x558c>  // b.any
    e740:	mov	x0, x19
    e744:	bl	8560 <_Py_Dealloc@plt>
    e748:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    e74c:	cmp	x20, x8
    e750:	b.eq	e788 <PyInit__testcapi@@Base+0x55cc>  // b.none
    e754:	cmn	x20, #0x1
    e758:	b.ne	e764 <PyInit__testcapi@@Base+0x55a8>  // b.any
    e75c:	bl	8980 <PyErr_Occurred@plt>
    e760:	cbnz	x0, e2e8 <PyInit__testcapi@@Base+0x512c>
    e764:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e768:	ldr	x0, [x8, #3552]
    e76c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e770:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    e774:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    e778:	add	x1, x1, #0xba2
    e77c:	add	x2, x2, #0xe55
    e780:	add	x3, x3, #0x87d
    e784:	b	e2c8 <PyInit__testcapi@@Base+0x510c>
    e788:	ldr	w8, [x29, #28]
    e78c:	cbnz	w8, e5e4 <PyInit__testcapi@@Base+0x5428>
    e790:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    e794:	ldr	x0, [x0, #4016]
    e798:	ldr	x8, [x0]
    e79c:	add	x8, x8, #0x1
    e7a0:	str	x8, [x0]
    e7a4:	ldp	x20, x19, [sp, #32]
    e7a8:	ldr	x21, [sp, #16]
    e7ac:	ldp	x29, x30, [sp], #48
    e7b0:	ret
    e7b4:	sub	sp, sp, #0x30
    e7b8:	stp	x29, x30, [sp, #16]
    e7bc:	stp	x20, x19, [sp, #32]
    e7c0:	add	x29, sp, #0x10
    e7c4:	mov	w0, #0x1                   	// #1
    e7c8:	bl	8920 <PyTuple_New@plt>
    e7cc:	cbz	x0, e830 <PyInit__testcapi@@Base+0x5674>
    e7d0:	mov	x19, x0
    e7d4:	mov	w0, #0x2a                  	// #42
    e7d8:	bl	8840 <PyLong_FromLong@plt>
    e7dc:	cbz	x0, e830 <PyInit__testcapi@@Base+0x5674>
    e7e0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    e7e4:	mov	x20, x0
    e7e8:	str	x0, [x19, #24]
    e7ec:	mov	x8, #0xffffffffffffffff    	// #-1
    e7f0:	add	x1, x1, #0x8a0
    e7f4:	add	x2, sp, #0x8
    e7f8:	mov	x0, x19
    e7fc:	str	x8, [sp, #8]
    e800:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e804:	cbz	w0, e864 <PyInit__testcapi@@Base+0x56a8>
    e808:	ldr	x8, [sp, #8]
    e80c:	cmp	x8, #0x2a
    e810:	b.ne	e840 <PyInit__testcapi@@Base+0x5684>  // b.any
    e814:	ldr	x8, [x20]
    e818:	subs	x8, x8, #0x1
    e81c:	str	x8, [x20]
    e820:	b.eq	e878 <PyInit__testcapi@@Base+0x56bc>  // b.none
    e824:	mov	w0, #0x2a                  	// #42
    e828:	bl	8840 <PyLong_FromLong@plt>
    e82c:	cbnz	x0, e88c <PyInit__testcapi@@Base+0x56d0>
    e830:	ldp	x20, x19, [sp, #32]
    e834:	ldp	x29, x30, [sp, #16]
    e838:	add	sp, sp, #0x30
    e83c:	ret
    e840:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e844:	ldr	x0, [x8, #3552]
    e848:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e84c:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    e850:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    e854:	add	x1, x1, #0xba2
    e858:	add	x2, x2, #0x8a2
    e85c:	add	x3, x3, #0x8ae
    e860:	bl	8e60 <PyErr_Format@plt>
    e864:	mov	x0, xzr
    e868:	ldp	x20, x19, [sp, #32]
    e86c:	ldp	x29, x30, [sp, #16]
    e870:	add	sp, sp, #0x30
    e874:	ret
    e878:	mov	x0, x20
    e87c:	bl	8560 <_Py_Dealloc@plt>
    e880:	mov	w0, #0x2a                  	// #42
    e884:	bl	8840 <PyLong_FromLong@plt>
    e888:	cbz	x0, e830 <PyInit__testcapi@@Base+0x5674>
    e88c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    e890:	str	x0, [x19, #24]
    e894:	mov	x8, #0xffffffffffffffff    	// #-1
    e898:	add	x1, x1, #0x8a0
    e89c:	add	x2, sp, #0x8
    e8a0:	mov	x0, x19
    e8a4:	str	x8, [sp, #8]
    e8a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e8ac:	cbz	w0, e864 <PyInit__testcapi@@Base+0x56a8>
    e8b0:	ldr	x8, [sp, #8]
    e8b4:	cmp	x8, #0x2a
    e8b8:	b.ne	e8f8 <PyInit__testcapi@@Base+0x573c>  // b.any
    e8bc:	ldr	x8, [x19]
    e8c0:	subs	x8, x8, #0x1
    e8c4:	str	x8, [x19]
    e8c8:	b.ne	e8d4 <PyInit__testcapi@@Base+0x5718>  // b.any
    e8cc:	mov	x0, x19
    e8d0:	bl	8560 <_Py_Dealloc@plt>
    e8d4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    e8d8:	ldr	x0, [x0, #4016]
    e8dc:	ldr	x8, [x0]
    e8e0:	add	x8, x8, #0x1
    e8e4:	str	x8, [x0]
    e8e8:	ldp	x20, x19, [sp, #32]
    e8ec:	ldp	x29, x30, [sp, #16]
    e8f0:	add	sp, sp, #0x30
    e8f4:	ret
    e8f8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    e8fc:	ldr	x0, [x8, #3552]
    e900:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e904:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    e908:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    e90c:	add	x1, x1, #0xba2
    e910:	add	x2, x2, #0x8a2
    e914:	add	x3, x3, #0x8d6
    e918:	b	e860 <PyInit__testcapi@@Base+0x56a4>
    e91c:	sub	sp, sp, #0x20
    e920:	stp	x29, x30, [sp, #16]
    e924:	add	x29, sp, #0x10
    e928:	mov	x0, x1
    e92c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e930:	add	x1, x1, #0xe79
    e934:	sub	x2, x29, #0x4
    e938:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e93c:	cbz	w0, e958 <PyInit__testcapi@@Base+0x579c>
    e940:	ldur	s0, [x29, #-4]
    e944:	fcvt	d0, s0
    e948:	bl	8800 <PyFloat_FromDouble@plt>
    e94c:	ldp	x29, x30, [sp, #16]
    e950:	add	sp, sp, #0x20
    e954:	ret
    e958:	mov	x0, xzr
    e95c:	ldp	x29, x30, [sp, #16]
    e960:	add	sp, sp, #0x20
    e964:	ret
    e968:	sub	sp, sp, #0x20
    e96c:	stp	x29, x30, [sp, #16]
    e970:	add	x29, sp, #0x10
    e974:	mov	x0, x1
    e978:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    e97c:	add	x1, x1, #0x115
    e980:	add	x2, sp, #0x8
    e984:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e988:	cbz	w0, e9a0 <PyInit__testcapi@@Base+0x57e4>
    e98c:	ldr	d0, [sp, #8]
    e990:	bl	8800 <PyFloat_FromDouble@plt>
    e994:	ldp	x29, x30, [sp, #16]
    e998:	add	sp, sp, #0x20
    e99c:	ret
    e9a0:	mov	x0, xzr
    e9a4:	ldp	x29, x30, [sp, #16]
    e9a8:	add	sp, sp, #0x20
    e9ac:	ret
    e9b0:	sub	sp, sp, #0x20
    e9b4:	stp	x29, x30, [sp, #16]
    e9b8:	add	x29, sp, #0x10
    e9bc:	mov	x0, x1
    e9c0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e9c4:	add	x1, x1, #0x8da
    e9c8:	mov	x2, sp
    e9cc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e9d0:	cbz	w0, e9e8 <PyInit__testcapi@@Base+0x582c>
    e9d4:	ldp	d0, d1, [sp]
    e9d8:	bl	8e90 <PyComplex_FromCComplex@plt>
    e9dc:	ldp	x29, x30, [sp, #16]
    e9e0:	add	sp, sp, #0x20
    e9e4:	ret
    e9e8:	mov	x0, xzr
    e9ec:	ldp	x29, x30, [sp, #16]
    e9f0:	add	sp, sp, #0x20
    e9f4:	ret
    e9f8:	sub	sp, sp, #0x20
    e9fc:	stp	x29, x30, [sp, #16]
    ea00:	add	x29, sp, #0x10
    ea04:	mov	x0, x1
    ea08:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ea0c:	add	x1, x1, #0xe97
    ea10:	add	x2, sp, #0x8
    ea14:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ea18:	cbz	w0, ea38 <PyInit__testcapi@@Base+0x587c>
    ea1c:	ldr	x0, [sp, #8]
    ea20:	ldr	x8, [x0]
    ea24:	add	x8, x8, #0x1
    ea28:	str	x8, [x0]
    ea2c:	ldp	x29, x30, [sp, #16]
    ea30:	add	sp, sp, #0x20
    ea34:	ret
    ea38:	mov	x0, xzr
    ea3c:	ldp	x29, x30, [sp, #16]
    ea40:	add	sp, sp, #0x20
    ea44:	ret
    ea48:	sub	sp, sp, #0x20
    ea4c:	stp	x29, x30, [sp, #16]
    ea50:	add	x29, sp, #0x10
    ea54:	mov	x0, x1
    ea58:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ea5c:	add	x1, x1, #0xea1
    ea60:	add	x2, sp, #0x8
    ea64:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ea68:	cbz	w0, ea88 <PyInit__testcapi@@Base+0x58cc>
    ea6c:	ldr	x0, [sp, #8]
    ea70:	ldr	x8, [x0]
    ea74:	add	x8, x8, #0x1
    ea78:	str	x8, [x0]
    ea7c:	ldp	x29, x30, [sp, #16]
    ea80:	add	sp, sp, #0x20
    ea84:	ret
    ea88:	mov	x0, xzr
    ea8c:	ldp	x29, x30, [sp, #16]
    ea90:	add	sp, sp, #0x20
    ea94:	ret
    ea98:	sub	sp, sp, #0x20
    ea9c:	stp	x29, x30, [sp, #16]
    eaa0:	add	x29, sp, #0x10
    eaa4:	mov	x0, x1
    eaa8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    eaac:	add	x1, x1, #0xeab
    eab0:	add	x2, sp, #0x8
    eab4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eab8:	cbz	w0, ead8 <PyInit__testcapi@@Base+0x591c>
    eabc:	ldr	x0, [sp, #8]
    eac0:	ldr	x8, [x0]
    eac4:	add	x8, x8, #0x1
    eac8:	str	x8, [x0]
    eacc:	ldp	x29, x30, [sp, #16]
    ead0:	add	sp, sp, #0x20
    ead4:	ret
    ead8:	mov	x0, xzr
    eadc:	ldp	x29, x30, [sp, #16]
    eae0:	add	sp, sp, #0x20
    eae4:	ret
    eae8:	sub	sp, sp, #0x20
    eaec:	stp	x29, x30, [sp, #16]
    eaf0:	add	x29, sp, #0x10
    eaf4:	mov	x0, x1
    eaf8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    eafc:	add	x1, x1, #0xeb5
    eb00:	sub	x2, x29, #0x4
    eb04:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eb08:	cbz	w0, eb20 <PyInit__testcapi@@Base+0x5964>
    eb0c:	ldurb	w0, [x29, #-4]
    eb10:	bl	8840 <PyLong_FromLong@plt>
    eb14:	ldp	x29, x30, [sp, #16]
    eb18:	add	sp, sp, #0x20
    eb1c:	ret
    eb20:	mov	x0, xzr
    eb24:	ldp	x29, x30, [sp, #16]
    eb28:	add	sp, sp, #0x20
    eb2c:	ret
    eb30:	sub	sp, sp, #0x20
    eb34:	stp	x29, x30, [sp, #16]
    eb38:	add	x29, sp, #0x10
    eb3c:	mov	x0, x1
    eb40:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    eb44:	add	x1, x1, #0x916
    eb48:	sub	x2, x29, #0x4
    eb4c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eb50:	cbz	w0, eb68 <PyInit__testcapi@@Base+0x59ac>
    eb54:	ldursw	x0, [x29, #-4]
    eb58:	bl	8840 <PyLong_FromLong@plt>
    eb5c:	ldp	x29, x30, [sp, #16]
    eb60:	add	sp, sp, #0x20
    eb64:	ret
    eb68:	mov	x0, xzr
    eb6c:	ldp	x29, x30, [sp, #16]
    eb70:	add	sp, sp, #0x20
    eb74:	ret
    eb78:	sub	sp, sp, #0x20
    eb7c:	stp	x29, x30, [sp, #16]
    eb80:	add	x29, sp, #0x10
    eb84:	mov	x0, x1
    eb88:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb8c:	add	x1, x1, #0xba7
    eb90:	add	x2, sp, #0x8
    eb94:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eb98:	cbz	w0, ebb0 <PyInit__testcapi@@Base+0x59f4>
    eb9c:	ldr	x0, [sp, #8]
    eba0:	bl	8970 <PyBytes_FromString@plt>
    eba4:	ldp	x29, x30, [sp, #16]
    eba8:	add	sp, sp, #0x20
    ebac:	ret
    ebb0:	mov	x0, xzr
    ebb4:	ldp	x29, x30, [sp, #16]
    ebb8:	add	sp, sp, #0x20
    ebbc:	ret
    ebc0:	sub	sp, sp, #0x70
    ebc4:	stp	x29, x30, [sp, #80]
    ebc8:	str	x19, [sp, #96]
    ebcc:	add	x29, sp, #0x50
    ebd0:	mov	x0, x1
    ebd4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ebd8:	add	x1, x1, #0x8fd
    ebdc:	mov	x2, sp
    ebe0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ebe4:	cbz	w0, ec04 <PyInit__testcapi@@Base+0x5a48>
    ebe8:	ldr	x0, [sp]
    ebec:	ldr	x1, [sp, #16]
    ebf0:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ebf4:	mov	x19, x0
    ebf8:	mov	x0, sp
    ebfc:	bl	8470 <PyBuffer_Release@plt>
    ec00:	b	ec08 <PyInit__testcapi@@Base+0x5a4c>
    ec04:	mov	x19, xzr
    ec08:	mov	x0, x19
    ec0c:	ldr	x19, [sp, #96]
    ec10:	ldp	x29, x30, [sp, #80]
    ec14:	add	sp, sp, #0x70
    ec18:	ret
    ec1c:	sub	sp, sp, #0x20
    ec20:	stp	x29, x30, [sp, #16]
    ec24:	add	x29, sp, #0x10
    ec28:	mov	x0, x1
    ec2c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ec30:	add	x1, x1, #0x92e
    ec34:	add	x2, sp, #0x8
    ec38:	mov	x3, sp
    ec3c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ec40:	cbz	w0, ec58 <PyInit__testcapi@@Base+0x5a9c>
    ec44:	ldp	x1, x0, [sp]
    ec48:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ec4c:	ldp	x29, x30, [sp, #16]
    ec50:	add	sp, sp, #0x20
    ec54:	ret
    ec58:	mov	x0, xzr
    ec5c:	ldp	x29, x30, [sp, #16]
    ec60:	add	sp, sp, #0x20
    ec64:	ret
    ec68:	sub	sp, sp, #0x20
    ec6c:	stp	x29, x30, [sp, #16]
    ec70:	add	x29, sp, #0x10
    ec74:	mov	x0, x1
    ec78:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ec7c:	add	x1, x1, #0xef1
    ec80:	add	x2, sp, #0x8
    ec84:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ec88:	cbz	w0, eca4 <PyInit__testcapi@@Base+0x5ae8>
    ec8c:	ldr	x0, [sp, #8]
    ec90:	cbz	x0, ecb4 <PyInit__testcapi@@Base+0x5af8>
    ec94:	bl	8970 <PyBytes_FromString@plt>
    ec98:	ldp	x29, x30, [sp, #16]
    ec9c:	add	sp, sp, #0x20
    eca0:	ret
    eca4:	mov	x0, xzr
    eca8:	ldp	x29, x30, [sp, #16]
    ecac:	add	sp, sp, #0x20
    ecb0:	ret
    ecb4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    ecb8:	ldr	x0, [x0, #4016]
    ecbc:	ldr	x8, [x0]
    ecc0:	add	x8, x8, #0x1
    ecc4:	str	x8, [x0]
    ecc8:	ldp	x29, x30, [sp, #16]
    eccc:	add	sp, sp, #0x20
    ecd0:	ret
    ecd4:	sub	sp, sp, #0x70
    ecd8:	stp	x29, x30, [sp, #80]
    ecdc:	str	x19, [sp, #96]
    ece0:	add	x29, sp, #0x50
    ece4:	mov	x0, x1
    ece8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ecec:	add	x1, x1, #0x900
    ecf0:	mov	x2, sp
    ecf4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ecf8:	cbz	w0, ed14 <PyInit__testcapi@@Base+0x5b58>
    ecfc:	ldr	x0, [sp]
    ed00:	cbz	x0, ed1c <PyInit__testcapi@@Base+0x5b60>
    ed04:	ldr	x1, [sp, #16]
    ed08:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ed0c:	mov	x19, x0
    ed10:	b	ed30 <PyInit__testcapi@@Base+0x5b74>
    ed14:	mov	x19, xzr
    ed18:	b	ed38 <PyInit__testcapi@@Base+0x5b7c>
    ed1c:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
    ed20:	ldr	x19, [x19, #4016]
    ed24:	ldr	x8, [x19]
    ed28:	add	x8, x8, #0x1
    ed2c:	str	x8, [x19]
    ed30:	mov	x0, sp
    ed34:	bl	8470 <PyBuffer_Release@plt>
    ed38:	mov	x0, x19
    ed3c:	ldr	x19, [sp, #96]
    ed40:	ldp	x29, x30, [sp, #80]
    ed44:	add	sp, sp, #0x70
    ed48:	ret
    ed4c:	sub	sp, sp, #0x20
    ed50:	stp	x29, x30, [sp, #16]
    ed54:	add	x29, sp, #0x10
    ed58:	mov	x0, x1
    ed5c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ed60:	add	x1, x1, #0x903
    ed64:	add	x2, sp, #0x8
    ed68:	mov	x3, sp
    ed6c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ed70:	cbz	w0, ed90 <PyInit__testcapi@@Base+0x5bd4>
    ed74:	ldr	x0, [sp, #8]
    ed78:	cbz	x0, eda0 <PyInit__testcapi@@Base+0x5be4>
    ed7c:	ldr	x1, [sp]
    ed80:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ed84:	ldp	x29, x30, [sp, #16]
    ed88:	add	sp, sp, #0x20
    ed8c:	ret
    ed90:	mov	x0, xzr
    ed94:	ldp	x29, x30, [sp, #16]
    ed98:	add	sp, sp, #0x20
    ed9c:	ret
    eda0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    eda4:	ldr	x0, [x0, #4016]
    eda8:	ldr	x8, [x0]
    edac:	add	x8, x8, #0x1
    edb0:	str	x8, [x0]
    edb4:	ldp	x29, x30, [sp, #16]
    edb8:	add	sp, sp, #0x20
    edbc:	ret
    edc0:	sub	sp, sp, #0x20
    edc4:	stp	x29, x30, [sp, #16]
    edc8:	add	x29, sp, #0x10
    edcc:	mov	x0, x1
    edd0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    edd4:	add	x1, x1, #0xf19
    edd8:	add	x2, sp, #0x8
    eddc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ede0:	cbz	w0, edf8 <PyInit__testcapi@@Base+0x5c3c>
    ede4:	ldr	x0, [sp, #8]
    ede8:	bl	8970 <PyBytes_FromString@plt>
    edec:	ldp	x29, x30, [sp, #16]
    edf0:	add	sp, sp, #0x20
    edf4:	ret
    edf8:	mov	x0, xzr
    edfc:	ldp	x29, x30, [sp, #16]
    ee00:	add	sp, sp, #0x20
    ee04:	ret
    ee08:	sub	sp, sp, #0x70
    ee0c:	stp	x29, x30, [sp, #80]
    ee10:	str	x19, [sp, #96]
    ee14:	add	x29, sp, #0x50
    ee18:	mov	x0, x1
    ee1c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ee20:	add	x1, x1, #0x906
    ee24:	mov	x2, sp
    ee28:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ee2c:	cbz	w0, ee4c <PyInit__testcapi@@Base+0x5c90>
    ee30:	ldr	x0, [sp]
    ee34:	ldr	x1, [sp, #16]
    ee38:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ee3c:	mov	x19, x0
    ee40:	mov	x0, sp
    ee44:	bl	8470 <PyBuffer_Release@plt>
    ee48:	b	ee50 <PyInit__testcapi@@Base+0x5c94>
    ee4c:	mov	x19, xzr
    ee50:	mov	x0, x19
    ee54:	ldr	x19, [sp, #96]
    ee58:	ldp	x29, x30, [sp, #80]
    ee5c:	add	sp, sp, #0x70
    ee60:	ret
    ee64:	sub	sp, sp, #0x20
    ee68:	stp	x29, x30, [sp, #16]
    ee6c:	add	x29, sp, #0x10
    ee70:	mov	x0, x1
    ee74:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ee78:	add	x1, x1, #0x909
    ee7c:	add	x2, sp, #0x8
    ee80:	mov	x3, sp
    ee84:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ee88:	cbz	w0, eea0 <PyInit__testcapi@@Base+0x5ce4>
    ee8c:	ldp	x1, x0, [sp]
    ee90:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ee94:	ldp	x29, x30, [sp, #16]
    ee98:	add	sp, sp, #0x20
    ee9c:	ret
    eea0:	mov	x0, xzr
    eea4:	ldp	x29, x30, [sp, #16]
    eea8:	add	sp, sp, #0x20
    eeac:	ret
    eeb0:	sub	sp, sp, #0x20
    eeb4:	stp	x29, x30, [sp, #16]
    eeb8:	add	x29, sp, #0x10
    eebc:	mov	x0, x1
    eec0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    eec4:	add	x1, x1, #0x14f
    eec8:	add	x2, sp, #0x8
    eecc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eed0:	cbz	w0, eeec <PyInit__testcapi@@Base+0x5d30>
    eed4:	ldr	x0, [sp, #8]
    eed8:	mov	x1, #0xffffffffffffffff    	// #-1
    eedc:	bl	8400 <PyUnicode_FromWideChar@plt>
    eee0:	ldp	x29, x30, [sp, #16]
    eee4:	add	sp, sp, #0x20
    eee8:	ret
    eeec:	mov	x0, xzr
    eef0:	ldp	x29, x30, [sp, #16]
    eef4:	add	sp, sp, #0x20
    eef8:	ret
    eefc:	sub	sp, sp, #0x20
    ef00:	stp	x29, x30, [sp, #16]
    ef04:	add	x29, sp, #0x10
    ef08:	mov	x0, x1
    ef0c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ef10:	add	x1, x1, #0x90c
    ef14:	add	x2, sp, #0x8
    ef18:	mov	x3, sp
    ef1c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ef20:	cbz	w0, ef38 <PyInit__testcapi@@Base+0x5d7c>
    ef24:	ldp	x1, x0, [sp]
    ef28:	bl	8400 <PyUnicode_FromWideChar@plt>
    ef2c:	ldp	x29, x30, [sp, #16]
    ef30:	add	sp, sp, #0x20
    ef34:	ret
    ef38:	mov	x0, xzr
    ef3c:	ldp	x29, x30, [sp, #16]
    ef40:	add	sp, sp, #0x20
    ef44:	ret
    ef48:	sub	sp, sp, #0x20
    ef4c:	stp	x29, x30, [sp, #16]
    ef50:	add	x29, sp, #0x10
    ef54:	mov	x0, x1
    ef58:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ef5c:	add	x1, x1, #0xf5a
    ef60:	add	x2, sp, #0x8
    ef64:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ef68:	cbz	w0, ef88 <PyInit__testcapi@@Base+0x5dcc>
    ef6c:	ldr	x0, [sp, #8]
    ef70:	cbz	x0, ef98 <PyInit__testcapi@@Base+0x5ddc>
    ef74:	mov	x1, #0xffffffffffffffff    	// #-1
    ef78:	bl	8400 <PyUnicode_FromWideChar@plt>
    ef7c:	ldp	x29, x30, [sp, #16]
    ef80:	add	sp, sp, #0x20
    ef84:	ret
    ef88:	mov	x0, xzr
    ef8c:	ldp	x29, x30, [sp, #16]
    ef90:	add	sp, sp, #0x20
    ef94:	ret
    ef98:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    ef9c:	ldr	x0, [x0, #4016]
    efa0:	ldr	x8, [x0]
    efa4:	add	x8, x8, #0x1
    efa8:	str	x8, [x0]
    efac:	ldp	x29, x30, [sp, #16]
    efb0:	add	sp, sp, #0x20
    efb4:	ret
    efb8:	sub	sp, sp, #0x20
    efbc:	stp	x29, x30, [sp, #16]
    efc0:	add	x29, sp, #0x10
    efc4:	mov	x0, x1
    efc8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    efcc:	add	x1, x1, #0x90f
    efd0:	add	x2, sp, #0x8
    efd4:	mov	x3, sp
    efd8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    efdc:	cbz	w0, effc <PyInit__testcapi@@Base+0x5e40>
    efe0:	ldr	x0, [sp, #8]
    efe4:	cbz	x0, f00c <PyInit__testcapi@@Base+0x5e50>
    efe8:	ldr	x1, [sp]
    efec:	bl	8400 <PyUnicode_FromWideChar@plt>
    eff0:	ldp	x29, x30, [sp, #16]
    eff4:	add	sp, sp, #0x20
    eff8:	ret
    effc:	mov	x0, xzr
    f000:	ldp	x29, x30, [sp, #16]
    f004:	add	sp, sp, #0x20
    f008:	ret
    f00c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    f010:	ldr	x0, [x0, #4016]
    f014:	ldr	x8, [x0]
    f018:	add	x8, x8, #0x1
    f01c:	str	x8, [x0]
    f020:	ldp	x29, x30, [sp, #16]
    f024:	add	sp, sp, #0x20
    f028:	ret
    f02c:	sub	sp, sp, #0x70
    f030:	stp	x29, x30, [sp, #80]
    f034:	str	x19, [sp, #96]
    f038:	add	x29, sp, #0x50
    f03c:	mov	x0, x1
    f040:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f044:	add	x1, x1, #0x912
    f048:	mov	x2, sp
    f04c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f050:	cbz	w0, f098 <PyInit__testcapi@@Base+0x5edc>
    f054:	ldr	x1, [sp, #16]
    f058:	cmp	x1, #0x2
    f05c:	b.lt	f080 <PyInit__testcapi@@Base+0x5ec4>  // b.tstop
    f060:	ldr	x8, [sp]
    f064:	mov	w9, #0x5b                  	// #91
    f068:	strb	w9, [x8]
    f06c:	ldr	x9, [sp, #16]
    f070:	add	x8, x9, x8
    f074:	mov	w9, #0x5d                  	// #93
    f078:	sturb	w9, [x8, #-1]
    f07c:	ldr	x1, [sp, #16]
    f080:	ldr	x0, [sp]
    f084:	bl	8500 <PyBytes_FromStringAndSize@plt>
    f088:	mov	x19, x0
    f08c:	mov	x0, sp
    f090:	bl	8470 <PyBuffer_Release@plt>
    f094:	b	f09c <PyInit__testcapi@@Base+0x5ee0>
    f098:	mov	x19, xzr
    f09c:	mov	x0, x19
    f0a0:	ldr	x19, [sp, #96]
    f0a4:	ldp	x29, x30, [sp, #80]
    f0a8:	add	sp, sp, #0x70
    f0ac:	ret
    f0b0:	sub	sp, sp, #0x30
    f0b4:	stp	x29, x30, [sp, #16]
    f0b8:	str	x19, [sp, #32]
    f0bc:	add	x29, sp, #0x10
    f0c0:	mov	x0, x1
    f0c4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f0c8:	add	x1, x1, #0x924
    f0cc:	add	x2, x29, #0x18
    f0d0:	add	x3, sp, #0x8
    f0d4:	str	xzr, [sp, #8]
    f0d8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f0dc:	cbz	w0, f118 <PyInit__testcapi@@Base+0x5f5c>
    f0e0:	ldr	x0, [x29, #24]
    f0e4:	ldr	x2, [sp, #8]
    f0e8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    f0ec:	add	x1, x1, #0xf73
    f0f0:	mov	x3, sp
    f0f4:	bl	8810 <_PyArg_Parse_SizeT@plt>
    f0f8:	cbz	w0, f118 <PyInit__testcapi@@Base+0x5f5c>
    f0fc:	ldr	x0, [sp]
    f100:	bl	8970 <PyBytes_FromString@plt>
    f104:	ldr	x8, [sp]
    f108:	mov	x19, x0
    f10c:	mov	x0, x8
    f110:	bl	83d0 <PyMem_Free@plt>
    f114:	b	f11c <PyInit__testcapi@@Base+0x5f60>
    f118:	mov	x19, xzr
    f11c:	mov	x0, x19
    f120:	ldr	x19, [sp, #32]
    f124:	ldp	x29, x30, [sp, #16]
    f128:	add	sp, sp, #0x30
    f12c:	ret
    f130:	sub	sp, sp, #0x30
    f134:	stp	x29, x30, [sp, #16]
    f138:	str	x19, [sp, #32]
    f13c:	add	x29, sp, #0x10
    f140:	mov	x0, x1
    f144:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f148:	add	x1, x1, #0x924
    f14c:	add	x2, x29, #0x18
    f150:	add	x3, sp, #0x8
    f154:	str	xzr, [sp, #8]
    f158:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f15c:	cbz	w0, f198 <PyInit__testcapi@@Base+0x5fdc>
    f160:	ldr	x0, [x29, #24]
    f164:	ldr	x2, [sp, #8]
    f168:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    f16c:	add	x1, x1, #0x7fe
    f170:	mov	x3, sp
    f174:	bl	8810 <_PyArg_Parse_SizeT@plt>
    f178:	cbz	w0, f198 <PyInit__testcapi@@Base+0x5fdc>
    f17c:	ldr	x0, [sp]
    f180:	bl	8970 <PyBytes_FromString@plt>
    f184:	ldr	x8, [sp]
    f188:	mov	x19, x0
    f18c:	mov	x0, x8
    f190:	bl	83d0 <PyMem_Free@plt>
    f194:	b	f19c <PyInit__testcapi@@Base+0x5fe0>
    f198:	mov	x19, xzr
    f19c:	mov	x0, x19
    f1a0:	ldr	x19, [sp, #32]
    f1a4:	ldp	x29, x30, [sp, #16]
    f1a8:	add	sp, sp, #0x30
    f1ac:	ret
    f1b0:	sub	sp, sp, #0x40
    f1b4:	stp	x29, x30, [sp, #32]
    f1b8:	str	x19, [sp, #48]
    f1bc:	add	x29, sp, #0x20
    f1c0:	mov	x0, x1
    f1c4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f1c8:	add	x1, x1, #0x928
    f1cc:	add	x2, x29, #0x18
    f1d0:	sub	x3, x29, #0x8
    f1d4:	add	x4, sp, #0x10
    f1d8:	stur	xzr, [x29, #-8]
    f1dc:	stp	xzr, xzr, [sp, #8]
    f1e0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f1e4:	cbz	w0, f24c <PyInit__testcapi@@Base+0x6090>
    f1e8:	ldr	x9, [sp, #16]
    f1ec:	cbz	x9, f20c <PyInit__testcapi@@Base+0x6050>
    f1f0:	ldr	x8, [x9, #16]
    f1f4:	cbz	x8, f200 <PyInit__testcapi@@Base+0x6044>
    f1f8:	ldr	x9, [x9, #40]
    f1fc:	b	f208 <PyInit__testcapi@@Base+0x604c>
    f200:	adrp	x9, 27000 <PyInit__testcapi@@Base+0x1de44>
    f204:	ldr	x9, [x9, #3904]
    f208:	stp	x8, x9, [sp]
    f20c:	ldr	x0, [x29, #24]
    f210:	ldur	x2, [x29, #-8]
    f214:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f218:	add	x1, x1, #0x92d
    f21c:	add	x3, sp, #0x8
    f220:	mov	x4, sp
    f224:	bl	8810 <_PyArg_Parse_SizeT@plt>
    f228:	cbz	w0, f24c <PyInit__testcapi@@Base+0x6090>
    f22c:	ldp	x1, x0, [sp]
    f230:	bl	8500 <PyBytes_FromStringAndSize@plt>
    f234:	ldr	x8, [sp, #16]
    f238:	mov	x19, x0
    f23c:	cbnz	x8, f250 <PyInit__testcapi@@Base+0x6094>
    f240:	ldr	x0, [sp, #8]
    f244:	bl	83d0 <PyMem_Free@plt>
    f248:	b	f250 <PyInit__testcapi@@Base+0x6094>
    f24c:	mov	x19, xzr
    f250:	mov	x0, x19
    f254:	ldr	x19, [sp, #48]
    f258:	ldp	x29, x30, [sp, #32]
    f25c:	add	sp, sp, #0x40
    f260:	ret
    f264:	sub	sp, sp, #0x40
    f268:	stp	x29, x30, [sp, #32]
    f26c:	str	x19, [sp, #48]
    f270:	add	x29, sp, #0x20
    f274:	mov	x0, x1
    f278:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f27c:	add	x1, x1, #0x928
    f280:	add	x2, x29, #0x18
    f284:	sub	x3, x29, #0x8
    f288:	add	x4, sp, #0x10
    f28c:	stur	xzr, [x29, #-8]
    f290:	stp	xzr, xzr, [sp, #8]
    f294:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f298:	cbz	w0, f300 <PyInit__testcapi@@Base+0x6144>
    f29c:	ldr	x9, [sp, #16]
    f2a0:	cbz	x9, f2c0 <PyInit__testcapi@@Base+0x6104>
    f2a4:	ldr	x8, [x9, #16]
    f2a8:	cbz	x8, f2b4 <PyInit__testcapi@@Base+0x60f8>
    f2ac:	ldr	x9, [x9, #40]
    f2b0:	b	f2bc <PyInit__testcapi@@Base+0x6100>
    f2b4:	adrp	x9, 27000 <PyInit__testcapi@@Base+0x1de44>
    f2b8:	ldr	x9, [x9, #3904]
    f2bc:	stp	x8, x9, [sp]
    f2c0:	ldr	x0, [x29, #24]
    f2c4:	ldur	x2, [x29, #-8]
    f2c8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f2cc:	add	x1, x1, #0x931
    f2d0:	add	x3, sp, #0x8
    f2d4:	mov	x4, sp
    f2d8:	bl	8810 <_PyArg_Parse_SizeT@plt>
    f2dc:	cbz	w0, f300 <PyInit__testcapi@@Base+0x6144>
    f2e0:	ldp	x1, x0, [sp]
    f2e4:	bl	8500 <PyBytes_FromStringAndSize@plt>
    f2e8:	ldr	x8, [sp, #16]
    f2ec:	mov	x19, x0
    f2f0:	cbnz	x8, f304 <PyInit__testcapi@@Base+0x6148>
    f2f4:	ldr	x0, [sp, #8]
    f2f8:	bl	83d0 <PyMem_Free@plt>
    f2fc:	b	f304 <PyInit__testcapi@@Base+0x6148>
    f300:	mov	x19, xzr
    f304:	mov	x0, x19
    f308:	ldr	x19, [sp, #48]
    f30c:	ldp	x29, x30, [sp, #32]
    f310:	add	sp, sp, #0x40
    f314:	ret
    f318:	sub	sp, sp, #0x20
    f31c:	stp	x29, x30, [sp, #16]
    f320:	add	x29, sp, #0x10
    f324:	mov	x0, x1
    f328:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f32c:	add	x1, x1, #0x935
    f330:	add	x2, sp, #0x8
    f334:	mov	x3, sp
    f338:	str	xzr, [sp]
    f33c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f340:	cbz	w0, f358 <PyInit__testcapi@@Base+0x619c>
    f344:	ldp	x1, x0, [sp]
    f348:	bl	8a60 <PyCodec_IncrementalEncoder@plt>
    f34c:	ldp	x29, x30, [sp, #16]
    f350:	add	sp, sp, #0x20
    f354:	ret
    f358:	mov	x0, xzr
    f35c:	ldp	x29, x30, [sp, #16]
    f360:	add	sp, sp, #0x20
    f364:	ret
    f368:	sub	sp, sp, #0x20
    f36c:	stp	x29, x30, [sp, #16]
    f370:	add	x29, sp, #0x10
    f374:	mov	x0, x1
    f378:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f37c:	add	x1, x1, #0x951
    f380:	add	x2, sp, #0x8
    f384:	mov	x3, sp
    f388:	str	xzr, [sp]
    f38c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f390:	cbz	w0, f3a8 <PyInit__testcapi@@Base+0x61ec>
    f394:	ldp	x1, x0, [sp]
    f398:	bl	88b0 <PyCodec_IncrementalDecoder@plt>
    f39c:	ldp	x29, x30, [sp, #16]
    f3a0:	add	sp, sp, #0x20
    f3a4:	ret
    f3a8:	mov	x0, xzr
    f3ac:	ldp	x29, x30, [sp, #16]
    f3b0:	add	sp, sp, #0x20
    f3b4:	ret
    f3b8:	stp	x29, x30, [sp, #-32]!
    f3bc:	str	x19, [sp, #16]
    f3c0:	mov	x29, sp
    f3c4:	mov	w0, #0x1                   	// #1
    f3c8:	bl	8920 <PyTuple_New@plt>
    f3cc:	cbz	x0, f454 <PyInit__testcapi@@Base+0x6298>
    f3d0:	mov	x19, x0
    f3d4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    f3d8:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    f3dc:	add	x0, x0, #0x96d
    f3e0:	add	x2, x2, #0x972
    f3e4:	mov	w1, #0x4                   	// #4
    f3e8:	mov	x3, xzr
    f3ec:	bl	8e50 <PyUnicode_Decode@plt>
    f3f0:	cbz	x0, f454 <PyInit__testcapi@@Base+0x6298>
    f3f4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f3f8:	str	x0, [x19, #24]
    f3fc:	add	x1, x1, #0x97a
    f400:	add	x2, x29, #0x18
    f404:	mov	x0, x19
    f408:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f40c:	cbz	w0, f460 <PyInit__testcapi@@Base+0x62a4>
    f410:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f414:	add	x1, x1, #0x989
    f418:	add	x2, x29, #0x18
    f41c:	mov	x0, x19
    f420:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f424:	cbz	w0, f460 <PyInit__testcapi@@Base+0x62a4>
    f428:	ldr	x8, [x19]
    f42c:	subs	x8, x8, #0x1
    f430:	str	x8, [x19]
    f434:	b.ne	f440 <PyInit__testcapi@@Base+0x6284>  // b.any
    f438:	mov	x0, x19
    f43c:	bl	8560 <_Py_Dealloc@plt>
    f440:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    f444:	ldr	x0, [x0, #4016]
    f448:	ldr	x8, [x0]
    f44c:	add	x8, x8, #0x1
    f450:	str	x8, [x0]
    f454:	ldr	x19, [sp, #16]
    f458:	ldp	x29, x30, [sp], #32
    f45c:	ret
    f460:	mov	x0, xzr
    f464:	ldr	x19, [sp, #16]
    f468:	ldp	x29, x30, [sp], #32
    f46c:	ret
    f470:	sub	sp, sp, #0x40
    f474:	stp	x29, x30, [sp, #16]
    f478:	str	x21, [sp, #32]
    f47c:	stp	x20, x19, [sp, #48]
    f480:	add	x29, sp, #0x10
    f484:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    f488:	ldr	x8, [x8, #3880]
    f48c:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f490:	mov	w0, #0x1                   	// #1
    f494:	ldrb	w8, [x8, #25]
    f498:	str	w8, [x9, #3544]
    f49c:	bl	8920 <PyTuple_New@plt>
    f4a0:	cbz	x0, f600 <PyInit__testcapi@@Base+0x6444>
    f4a4:	mov	x19, x0
    f4a8:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    f4ac:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f4b0:	add	x0, x0, #0x998
    f4b4:	add	x2, x2, #0xce9
    f4b8:	mov	w1, #0x4                   	// #4
    f4bc:	mov	x3, xzr
    f4c0:	bl	8e50 <PyUnicode_Decode@plt>
    f4c4:	cbz	x0, f600 <PyInit__testcapi@@Base+0x6444>
    f4c8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f4cc:	mov	x20, x0
    f4d0:	str	x0, [x19, #24]
    f4d4:	add	x1, x1, #0x99d
    f4d8:	add	x2, x29, #0x18
    f4dc:	mov	x0, x19
    f4e0:	str	xzr, [x29, #24]
    f4e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f4e8:	cbz	w0, f5fc <PyInit__testcapi@@Base+0x6440>
    f4ec:	ldr	x0, [x20, #40]
    f4f0:	ldr	x21, [x29, #24]
    f4f4:	cbz	x0, f524 <PyInit__testcapi@@Base+0x6368>
    f4f8:	cmp	x21, x0
    f4fc:	b.eq	f534 <PyInit__testcapi@@Base+0x6378>  // b.none
    f500:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f504:	ldr	x0, [x8, #3552]
    f508:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f50c:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    f510:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f514:	add	x1, x1, #0xba2
    f518:	add	x2, x2, #0x9d6
    f51c:	add	x3, x3, #0x9ab
    f520:	b	f5f8 <PyInit__testcapi@@Base+0x643c>
    f524:	mov	x0, x20
    f528:	bl	8910 <PyUnicode_AsUnicode@plt>
    f52c:	cmp	x21, x0
    f530:	b.ne	f500 <PyInit__testcapi@@Base+0x6344>  // b.any
    f534:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f538:	add	x1, x1, #0x9d3
    f53c:	add	x2, x29, #0x18
    f540:	add	x3, sp, #0x8
    f544:	mov	x0, x19
    f548:	str	xzr, [x29, #24]
    f54c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f550:	cbz	w0, f5fc <PyInit__testcapi@@Base+0x6440>
    f554:	ldr	x0, [x20, #40]
    f558:	ldr	x21, [x29, #24]
    f55c:	cbnz	x0, f568 <PyInit__testcapi@@Base+0x63ac>
    f560:	mov	x0, x20
    f564:	bl	8910 <PyUnicode_AsUnicode@plt>
    f568:	cmp	x21, x0
    f56c:	b.ne	f5d8 <PyInit__testcapi@@Base+0x641c>  // b.any
    f570:	ldr	x8, [x20, #40]
    f574:	ldr	x21, [sp, #8]
    f578:	cbnz	x8, f584 <PyInit__testcapi@@Base+0x63c8>
    f57c:	mov	x0, x20
    f580:	bl	8910 <PyUnicode_AsUnicode@plt>
    f584:	ldr	w8, [x20, #32]
    f588:	mov	w9, #0x60                  	// #96
    f58c:	mov	w10, #0x40                  	// #64
    f590:	bics	wzr, w9, w8
    f594:	mov	w8, #0x10                  	// #16
    f598:	csel	x8, x8, x10, eq  // eq = none
    f59c:	ldr	x8, [x20, x8]
    f5a0:	cmp	x21, x8
    f5a4:	b.ne	f5d8 <PyInit__testcapi@@Base+0x641c>  // b.any
    f5a8:	ldr	x8, [x19]
    f5ac:	subs	x8, x8, #0x1
    f5b0:	str	x8, [x19]
    f5b4:	b.ne	f5c0 <PyInit__testcapi@@Base+0x6404>  // b.any
    f5b8:	mov	x0, x19
    f5bc:	bl	8560 <_Py_Dealloc@plt>
    f5c0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    f5c4:	ldr	x0, [x0, #4016]
    f5c8:	ldr	x8, [x0]
    f5cc:	add	x8, x8, #0x1
    f5d0:	str	x8, [x0]
    f5d4:	b	f600 <PyInit__testcapi@@Base+0x6444>
    f5d8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f5dc:	ldr	x0, [x8, #3552]
    f5e0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f5e4:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    f5e8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f5ec:	add	x1, x1, #0xba2
    f5f0:	add	x2, x2, #0x9d6
    f5f4:	add	x3, x3, #0x9e2
    f5f8:	bl	8e60 <PyErr_Format@plt>
    f5fc:	mov	x0, xzr
    f600:	ldp	x20, x19, [sp, #48]
    f604:	ldr	x21, [sp, #32]
    f608:	ldp	x29, x30, [sp, #16]
    f60c:	add	sp, sp, #0x40
    f610:	ret
    f614:	sub	sp, sp, #0x50
    f618:	stp	x29, x30, [sp, #32]
    f61c:	stp	x22, x21, [sp, #48]
    f620:	stp	x20, x19, [sp, #64]
    f624:	add	x29, sp, #0x20
    f628:	mov	w0, #0x2                   	// #2
    f62c:	bl	8920 <PyTuple_New@plt>
    f630:	cbz	x0, f800 <PyInit__testcapi@@Base+0x6644>
    f634:	mov	x20, x0
    f638:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    f63c:	add	x0, x0, #0x998
    f640:	bl	8d10 <PyUnicode_FromString@plt>
    f644:	str	x0, [x20, #24]
    f648:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
    f64c:	ldr	x19, [x19, #4016]
    f650:	mov	x21, x0
    f654:	ldr	x8, [x19]
    f658:	add	x8, x8, #0x1
    f65c:	str	x8, [x19]
    f660:	str	x19, [x20, #32]
    f664:	stur	xzr, [x29, #-8]
    f668:	ldr	x0, [x0, #40]
    f66c:	cbnz	x0, f678 <PyInit__testcapi@@Base+0x64bc>
    f670:	mov	x0, x21
    f674:	bl	8910 <PyUnicode_AsUnicode@plt>
    f678:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f67c:	str	x0, [sp, #16]
    f680:	add	x1, x1, #0xa0c
    f684:	sub	x2, x29, #0x8
    f688:	add	x3, sp, #0x10
    f68c:	mov	x0, x20
    f690:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f694:	cbz	w0, f800 <PyInit__testcapi@@Base+0x6644>
    f698:	ldr	x0, [x21, #40]
    f69c:	ldur	x22, [x29, #-8]
    f6a0:	cbz	x0, f6d0 <PyInit__testcapi@@Base+0x6514>
    f6a4:	cmp	x22, x0
    f6a8:	b.eq	f6e0 <PyInit__testcapi@@Base+0x6524>  // b.none
    f6ac:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f6b0:	ldr	x0, [x8, #3552]
    f6b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f6b8:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    f6bc:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f6c0:	add	x1, x1, #0xba2
    f6c4:	add	x2, x2, #0xa6c
    f6c8:	add	x3, x3, #0xa1b
    f6cc:	b	f7fc <PyInit__testcapi@@Base+0x6640>
    f6d0:	mov	x0, x21
    f6d4:	bl	8910 <PyUnicode_AsUnicode@plt>
    f6d8:	cmp	x22, x0
    f6dc:	b.ne	f6ac <PyInit__testcapi@@Base+0x64f0>  // b.any
    f6e0:	ldr	x8, [sp, #16]
    f6e4:	cbz	x8, f70c <PyInit__testcapi@@Base+0x6550>
    f6e8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f6ec:	ldr	x0, [x8, #3552]
    f6f0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f6f4:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    f6f8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f6fc:	add	x1, x1, #0xba2
    f700:	add	x2, x2, #0xa6c
    f704:	add	x3, x3, #0xa42
    f708:	b	f7fc <PyInit__testcapi@@Base+0x6640>
    f70c:	stur	xzr, [x29, #-8]
    f710:	ldr	x0, [x21, #40]
    f714:	cbnz	x0, f720 <PyInit__testcapi@@Base+0x6564>
    f718:	mov	x0, x21
    f71c:	bl	8910 <PyUnicode_AsUnicode@plt>
    f720:	mov	x8, #0xffffffffffffffff    	// #-1
    f724:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f728:	stp	x8, x0, [sp, #8]
    f72c:	add	x1, x1, #0xa67
    f730:	sub	x2, x29, #0x8
    f734:	add	x3, sp, #0x8
    f738:	add	x4, sp, #0x10
    f73c:	mov	x5, sp
    f740:	mov	x0, x20
    f744:	str	x8, [sp]
    f748:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f74c:	cbz	w0, f800 <PyInit__testcapi@@Base+0x6644>
    f750:	ldr	x0, [x21, #40]
    f754:	ldur	x22, [x29, #-8]
    f758:	cbnz	x0, f764 <PyInit__testcapi@@Base+0x65a8>
    f75c:	mov	x0, x21
    f760:	bl	8910 <PyUnicode_AsUnicode@plt>
    f764:	cmp	x22, x0
    f768:	b.ne	f7dc <PyInit__testcapi@@Base+0x6620>  // b.any
    f76c:	ldr	x8, [x21, #40]
    f770:	ldr	x22, [sp, #8]
    f774:	cbnz	x8, f780 <PyInit__testcapi@@Base+0x65c4>
    f778:	mov	x0, x21
    f77c:	bl	8910 <PyUnicode_AsUnicode@plt>
    f780:	ldr	w8, [x21, #32]
    f784:	mov	w9, #0x60                  	// #96
    f788:	mov	w10, #0x40                  	// #64
    f78c:	bics	wzr, w9, w8
    f790:	mov	w8, #0x10                  	// #16
    f794:	csel	x8, x8, x10, eq  // eq = none
    f798:	ldr	x8, [x21, x8]
    f79c:	cmp	x22, x8
    f7a0:	b.ne	f7dc <PyInit__testcapi@@Base+0x6620>  // b.any
    f7a4:	ldr	x8, [sp, #16]
    f7a8:	cbnz	x8, f81c <PyInit__testcapi@@Base+0x6660>
    f7ac:	ldr	x8, [sp]
    f7b0:	cbnz	x8, f81c <PyInit__testcapi@@Base+0x6660>
    f7b4:	ldr	x8, [x20]
    f7b8:	subs	x8, x8, #0x1
    f7bc:	str	x8, [x20]
    f7c0:	b.ne	f7cc <PyInit__testcapi@@Base+0x6610>  // b.any
    f7c4:	mov	x0, x20
    f7c8:	bl	8560 <_Py_Dealloc@plt>
    f7cc:	ldr	x8, [x19]
    f7d0:	add	x8, x8, #0x1
    f7d4:	str	x8, [x19]
    f7d8:	b	f804 <PyInit__testcapi@@Base+0x6648>
    f7dc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f7e0:	ldr	x0, [x8, #3552]
    f7e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f7e8:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    f7ec:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f7f0:	add	x1, x1, #0xba2
    f7f4:	add	x2, x2, #0xa6c
    f7f8:	add	x3, x3, #0xa78
    f7fc:	bl	8e60 <PyErr_Format@plt>
    f800:	mov	x19, xzr
    f804:	mov	x0, x19
    f808:	ldp	x20, x19, [sp, #64]
    f80c:	ldp	x22, x21, [sp, #48]
    f810:	ldp	x29, x30, [sp, #32]
    f814:	add	sp, sp, #0x50
    f818:	ret
    f81c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f820:	ldr	x0, [x8, #3552]
    f824:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f828:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
    f82c:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f830:	add	x1, x1, #0xba2
    f834:	add	x2, x2, #0xa6c
    f838:	add	x3, x3, #0xaa1
    f83c:	b	f7fc <PyInit__testcapi@@Base+0x6640>
    f840:	sub	sp, sp, #0x40
    f844:	stp	x29, x30, [sp, #16]
    f848:	str	x21, [sp, #32]
    f84c:	stp	x20, x19, [sp, #48]
    f850:	add	x29, sp, #0x10
    f854:	mov	w8, #0xabcd                	// #43981
    f858:	movk	w8, #0x10, lsl #16
    f85c:	mov	w9, #0x110000              	// #1114112
    f860:	add	x0, x29, #0x18
    f864:	mov	w1, #0x1                   	// #1
    f868:	str	x8, [x29, #24]
    f86c:	stur	w9, [x29, #-4]
    f870:	bl	8400 <PyUnicode_FromWideChar@plt>
    f874:	cbz	x0, f964 <PyInit__testcapi@@Base+0x67a8>
    f878:	mov	x20, x0
    f87c:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    f880:	add	x0, x0, #0xac9
    f884:	bl	8d10 <PyUnicode_FromString@plt>
    f888:	cbz	x0, f900 <PyInit__testcapi@@Base+0x6744>
    f88c:	ldr	x8, [x20, #16]
    f890:	ldr	x9, [x0, #16]
    f894:	mov	x19, x0
    f898:	cmp	x8, x9
    f89c:	b.ne	f91c <PyInit__testcapi@@Base+0x6760>  // b.any
    f8a0:	mov	x0, x20
    f8a4:	mov	x1, x19
    f8a8:	bl	8b30 <PyUnicode_Compare@plt>
    f8ac:	ldr	x8, [x20]
    f8b0:	mov	w21, w0
    f8b4:	subs	x8, x8, #0x1
    f8b8:	str	x8, [x20]
    f8bc:	b.eq	f978 <PyInit__testcapi@@Base+0x67bc>  // b.none
    f8c0:	ldr	x8, [x19]
    f8c4:	subs	x8, x8, #0x1
    f8c8:	str	x8, [x19]
    f8cc:	b.eq	f990 <PyInit__testcapi@@Base+0x67d4>  // b.none
    f8d0:	cbz	w21, f99c <PyInit__testcapi@@Base+0x67e0>
    f8d4:	bl	8980 <PyErr_Occurred@plt>
    f8d8:	cbnz	x0, f960 <PyInit__testcapi@@Base+0x67a4>
    f8dc:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f8e0:	ldr	x0, [x8, #3552]
    f8e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f8e8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f8ec:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f8f0:	add	x1, x1, #0xba2
    f8f4:	add	x2, x2, #0xfdf
    f8f8:	add	x3, x3, #0xb00
    f8fc:	b	f95c <PyInit__testcapi@@Base+0x67a0>
    f900:	ldr	x8, [x20]
    f904:	subs	x8, x8, #0x1
    f908:	str	x8, [x20]
    f90c:	b.ne	f960 <PyInit__testcapi@@Base+0x67a4>  // b.any
    f910:	mov	x0, x20
    f914:	bl	8560 <_Py_Dealloc@plt>
    f918:	b	f960 <PyInit__testcapi@@Base+0x67a4>
    f91c:	ldr	x8, [x20]
    f920:	subs	x8, x8, #0x1
    f924:	str	x8, [x20]
    f928:	b.eq	f9d0 <PyInit__testcapi@@Base+0x6814>  // b.none
    f92c:	ldr	x8, [x19]
    f930:	subs	x8, x8, #0x1
    f934:	str	x8, [x19]
    f938:	b.eq	f9e8 <PyInit__testcapi@@Base+0x682c>  // b.none
    f93c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f940:	ldr	x0, [x8, #3552]
    f944:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f948:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f94c:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f950:	add	x1, x1, #0xba2
    f954:	add	x2, x2, #0xfdf
    f958:	add	x3, x3, #0xace
    f95c:	bl	8e60 <PyErr_Format@plt>
    f960:	mov	x0, xzr
    f964:	ldp	x20, x19, [sp, #48]
    f968:	ldr	x21, [sp, #32]
    f96c:	ldp	x29, x30, [sp, #16]
    f970:	add	sp, sp, #0x40
    f974:	ret
    f978:	mov	x0, x20
    f97c:	bl	8560 <_Py_Dealloc@plt>
    f980:	ldr	x8, [x19]
    f984:	subs	x8, x8, #0x1
    f988:	str	x8, [x19]
    f98c:	b.ne	f8d0 <PyInit__testcapi@@Base+0x6714>  // b.any
    f990:	mov	x0, x19
    f994:	bl	8560 <_Py_Dealloc@plt>
    f998:	cbnz	w21, f8d4 <PyInit__testcapi@@Base+0x6718>
    f99c:	sub	x0, x29, #0x4
    f9a0:	mov	w1, #0x1                   	// #1
    f9a4:	bl	8400 <PyUnicode_FromWideChar@plt>
    f9a8:	cbz	x0, f9f4 <PyInit__testcapi@@Base+0x6838>
    f9ac:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    f9b0:	ldr	x0, [x8, #3552]
    f9b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f9b8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f9bc:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    f9c0:	add	x1, x1, #0xba2
    f9c4:	add	x2, x2, #0xfdf
    f9c8:	add	x3, x3, #0xb2a
    f9cc:	b	f95c <PyInit__testcapi@@Base+0x67a0>
    f9d0:	mov	x0, x20
    f9d4:	bl	8560 <_Py_Dealloc@plt>
    f9d8:	ldr	x8, [x19]
    f9dc:	subs	x8, x8, #0x1
    f9e0:	str	x8, [x19]
    f9e4:	b.ne	f93c <PyInit__testcapi@@Base+0x6780>  // b.any
    f9e8:	mov	x0, x19
    f9ec:	bl	8560 <_Py_Dealloc@plt>
    f9f0:	b	f93c <PyInit__testcapi@@Base+0x6780>
    f9f4:	bl	88c0 <PyErr_Clear@plt>
    f9f8:	sub	x0, x29, #0x4
    f9fc:	mov	w1, #0x1                   	// #1
    fa00:	bl	8890 <PyUnicode_FromUnicode@plt>
    fa04:	cbz	x0, fa2c <PyInit__testcapi@@Base+0x6870>
    fa08:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    fa0c:	ldr	x0, [x8, #3552]
    fa10:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fa14:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    fa18:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    fa1c:	add	x1, x1, #0xba2
    fa20:	add	x2, x2, #0xfdf
    fa24:	add	x3, x3, #0xb5f
    fa28:	b	f95c <PyInit__testcapi@@Base+0x67a0>
    fa2c:	bl	88c0 <PyErr_Clear@plt>
    fa30:	mov	w1, #0x1                   	// #1
    fa34:	mov	x0, xzr
    fa38:	bl	8890 <PyUnicode_FromUnicode@plt>
    fa3c:	cbz	x0, f964 <PyInit__testcapi@@Base+0x67a8>
    fa40:	mov	x19, x0
    fa44:	ldr	x0, [x0, #40]
    fa48:	ldur	w20, [x29, #-4]
    fa4c:	cbnz	x0, fa58 <PyInit__testcapi@@Base+0x689c>
    fa50:	mov	x0, x19
    fa54:	bl	8910 <PyUnicode_AsUnicode@plt>
    fa58:	str	w20, [x0]
    fa5c:	mov	x0, x19
    fa60:	bl	82c0 <_PyUnicode_Ready@plt>
    fa64:	ldr	x8, [x19]
    fa68:	mov	w20, w0
    fa6c:	subs	x8, x8, #0x1
    fa70:	str	x8, [x19]
    fa74:	b.ne	fa80 <PyInit__testcapi@@Base+0x68c4>  // b.any
    fa78:	mov	x0, x19
    fa7c:	bl	8560 <_Py_Dealloc@plt>
    fa80:	tbnz	w20, #31, faa8 <PyInit__testcapi@@Base+0x68ec>
    fa84:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
    fa88:	ldr	x0, [x8, #3552]
    fa8c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fa90:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    fa94:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
    fa98:	add	x1, x1, #0xba2
    fa9c:	add	x2, x2, #0xfdf
    faa0:	add	x3, x3, #0xb93
    faa4:	b	f95c <PyInit__testcapi@@Base+0x67a0>
    faa8:	bl	88c0 <PyErr_Clear@plt>
    faac:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    fab0:	ldr	x0, [x0, #4016]
    fab4:	ldr	x8, [x0]
    fab8:	add	x8, x8, #0x1
    fabc:	str	x8, [x0]
    fac0:	b	f964 <PyInit__testcapi@@Base+0x67a8>
    fac4:	sub	sp, sp, #0x40
    fac8:	stp	x29, x30, [sp, #16]
    facc:	str	x21, [sp, #32]
    fad0:	stp	x20, x19, [sp, #48]
    fad4:	add	x29, sp, #0x10
    fad8:	mov	x0, x1
    fadc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    fae0:	add	x1, x1, #0xbb1
    fae4:	add	x2, x29, #0x18
    fae8:	add	x3, sp, #0x8
    faec:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    faf0:	cbz	w0, fb7c <PyInit__testcapi@@Base+0x69c0>
    faf4:	ldr	x8, [sp, #8]
    faf8:	lsr	x9, x8, #61
    fafc:	cbnz	x9, fb6c <PyInit__testcapi@@Base+0x69b0>
    fb00:	lsl	x0, x8, #2
    fb04:	bl	8fc0 <PyMem_Malloc@plt>
    fb08:	cbz	x0, fb6c <PyInit__testcapi@@Base+0x69b0>
    fb0c:	mov	x19, x0
    fb10:	ldr	x0, [x29, #24]
    fb14:	ldr	x2, [sp, #8]
    fb18:	mov	x1, x19
    fb1c:	bl	82d0 <PyUnicode_AsWideChar@plt>
    fb20:	cmn	x0, #0x1
    fb24:	b.eq	fb74 <PyInit__testcapi@@Base+0x69b8>  // b.none
    fb28:	ldr	x8, [sp, #8]
    fb2c:	mov	x20, x0
    fb30:	cmp	x0, x8
    fb34:	cinc	x1, x0, lt  // lt = tstop
    fb38:	mov	x0, x19
    fb3c:	str	x1, [sp, #8]
    fb40:	bl	8400 <PyUnicode_FromWideChar@plt>
    fb44:	mov	x21, x0
    fb48:	mov	x0, x19
    fb4c:	bl	83d0 <PyMem_Free@plt>
    fb50:	cbz	x21, fb7c <PyInit__testcapi@@Base+0x69c0>
    fb54:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    fb58:	add	x0, x0, #0xbb4
    fb5c:	mov	x1, x21
    fb60:	mov	x2, x20
    fb64:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    fb68:	b	fb80 <PyInit__testcapi@@Base+0x69c4>
    fb6c:	bl	8570 <PyErr_NoMemory@plt>
    fb70:	b	fb80 <PyInit__testcapi@@Base+0x69c4>
    fb74:	mov	x0, x19
    fb78:	bl	83d0 <PyMem_Free@plt>
    fb7c:	mov	x0, xzr
    fb80:	ldp	x20, x19, [sp, #48]
    fb84:	ldr	x21, [sp, #32]
    fb88:	ldp	x29, x30, [sp, #16]
    fb8c:	add	sp, sp, #0x40
    fb90:	ret
    fb94:	sub	sp, sp, #0x30
    fb98:	stp	x29, x30, [sp, #16]
    fb9c:	stp	x20, x19, [sp, #32]
    fba0:	add	x29, sp, #0x10
    fba4:	mov	x0, x1
    fba8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    fbac:	add	x1, x1, #0xeab
    fbb0:	add	x2, sp, #0x8
    fbb4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fbb8:	cbz	w0, fc10 <PyInit__testcapi@@Base+0x6a54>
    fbbc:	ldr	x0, [sp, #8]
    fbc0:	mov	x1, sp
    fbc4:	bl	8c70 <PyUnicode_AsWideCharString@plt>
    fbc8:	cbz	x0, fc00 <PyInit__testcapi@@Base+0x6a44>
    fbcc:	ldr	x8, [sp]
    fbd0:	mov	x19, x0
    fbd4:	add	x1, x8, #0x1
    fbd8:	bl	8400 <PyUnicode_FromWideChar@plt>
    fbdc:	mov	x20, x0
    fbe0:	mov	x0, x19
    fbe4:	bl	83d0 <PyMem_Free@plt>
    fbe8:	cbz	x20, fc10 <PyInit__testcapi@@Base+0x6a54>
    fbec:	ldr	x2, [sp]
    fbf0:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    fbf4:	add	x0, x0, #0xbb4
    fbf8:	mov	x1, x20
    fbfc:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    fc00:	ldp	x20, x19, [sp, #32]
    fc04:	ldp	x29, x30, [sp, #16]
    fc08:	add	sp, sp, #0x30
    fc0c:	ret
    fc10:	mov	x0, xzr
    fc14:	ldp	x20, x19, [sp, #32]
    fc18:	ldp	x29, x30, [sp, #16]
    fc1c:	add	sp, sp, #0x30
    fc20:	ret
    fc24:	sub	sp, sp, #0x40
    fc28:	stp	x29, x30, [sp, #16]
    fc2c:	str	x21, [sp, #32]
    fc30:	stp	x20, x19, [sp, #48]
    fc34:	add	x29, sp, #0x10
    fc38:	mov	x0, x1
    fc3c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    fc40:	add	x1, x1, #0xbb9
    fc44:	add	x2, x29, #0x18
    fc48:	mov	x3, sp
    fc4c:	sub	x4, x29, #0x4
    fc50:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fc54:	cbz	w0, fce0 <PyInit__testcapi@@Base+0x6b24>
    fc58:	ldr	x8, [sp]
    fc5c:	add	x19, x8, #0x1
    fc60:	lsr	x8, x19, #61
    fc64:	cbnz	x8, fccc <PyInit__testcapi@@Base+0x6b10>
    fc68:	lsl	x21, x19, #2
    fc6c:	mov	x0, x21
    fc70:	bl	8fc0 <PyMem_Malloc@plt>
    fc74:	cbz	x0, fccc <PyInit__testcapi@@Base+0x6b10>
    fc78:	mov	w1, wzr
    fc7c:	mov	x2, x21
    fc80:	mov	x20, x0
    fc84:	bl	8770 <memset@plt>
    fc88:	ldr	x8, [sp]
    fc8c:	mov	w9, #0xffff                	// #65535
    fc90:	mov	x1, x20
    fc94:	mov	x2, x19
    fc98:	str	w9, [x20, x8, lsl #2]
    fc9c:	ldr	x0, [x29, #24]
    fca0:	ldur	w3, [x29, #-4]
    fca4:	bl	8a00 <PyUnicode_AsUCS4@plt>
    fca8:	cbz	x0, fcd8 <PyInit__testcapi@@Base+0x6b1c>
    fcac:	mov	w0, #0x4                   	// #4
    fcb0:	mov	x1, x20
    fcb4:	mov	x2, x19
    fcb8:	bl	8bf0 <PyUnicode_FromKindAndData@plt>
    fcbc:	mov	x19, x0
    fcc0:	mov	x0, x20
    fcc4:	bl	83d0 <PyMem_Free@plt>
    fcc8:	b	fce4 <PyInit__testcapi@@Base+0x6b28>
    fccc:	bl	8570 <PyErr_NoMemory@plt>
    fcd0:	mov	x19, x0
    fcd4:	b	fce4 <PyInit__testcapi@@Base+0x6b28>
    fcd8:	mov	x0, x20
    fcdc:	bl	83d0 <PyMem_Free@plt>
    fce0:	mov	x19, xzr
    fce4:	mov	x0, x19
    fce8:	ldp	x20, x19, [sp, #48]
    fcec:	ldr	x21, [sp, #32]
    fcf0:	ldp	x29, x30, [sp, #16]
    fcf4:	add	sp, sp, #0x40
    fcf8:	ret
    fcfc:	sub	sp, sp, #0x30
    fd00:	stp	x29, x30, [sp, #32]
    fd04:	add	x29, sp, #0x20
    fd08:	mov	x0, x1
    fd0c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    fd10:	add	x1, x1, #0xbcc
    fd14:	sub	x2, x29, #0x8
    fd18:	add	x3, sp, #0x10
    fd1c:	add	x4, sp, #0x8
    fd20:	mov	x5, sp
    fd24:	sub	x6, x29, #0xc
    fd28:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fd2c:	cbz	w0, fd4c <PyInit__testcapi@@Base+0x6b90>
    fd30:	ldur	x0, [x29, #-8]
    fd34:	ldr	w1, [sp, #16]
    fd38:	ldp	x3, x2, [sp]
    fd3c:	ldur	w4, [x29, #-12]
    fd40:	bl	8fb0 <PyUnicode_FindChar@plt>
    fd44:	cmn	x0, #0x2
    fd48:	b.ne	fd5c <PyInit__testcapi@@Base+0x6ba0>  // b.any
    fd4c:	mov	x0, xzr
    fd50:	ldp	x29, x30, [sp, #32]
    fd54:	add	sp, sp, #0x30
    fd58:	ret
    fd5c:	bl	87f0 <PyLong_FromSsize_t@plt>
    fd60:	ldp	x29, x30, [sp, #32]
    fd64:	add	sp, sp, #0x30
    fd68:	ret
    fd6c:	sub	sp, sp, #0x40
    fd70:	stp	x29, x30, [sp, #32]
    fd74:	str	x19, [sp, #48]
    fd78:	add	x29, sp, #0x20
    fd7c:	mov	x0, x1
    fd80:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    fd84:	add	x1, x1, #0xbe3
    fd88:	sub	x2, x29, #0x8
    fd8c:	add	x3, sp, #0x8
    fd90:	add	x4, x29, #0x18
    fd94:	add	x5, sp, #0x10
    fd98:	mov	x6, sp
    fd9c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fda0:	cbz	w0, fddc <PyInit__testcapi@@Base+0x6c20>
    fda4:	ldur	x9, [x29, #-8]
    fda8:	ldr	w8, [x9, #32]
    fdac:	ldr	x0, [x9, #16]
    fdb0:	tbnz	w8, #6, fdf0 <PyInit__testcapi@@Base+0x6c34>
    fdb4:	ubfx	w8, w8, #2, #3
    fdb8:	cmp	w8, #0x1
    fdbc:	b.ne	fe00 <PyInit__testcapi@@Base+0x6c44>  // b.any
    fdc0:	mov	w1, #0xff                  	// #255
    fdc4:	bl	9010 <PyUnicode_New@plt>
    fdc8:	cbnz	x0, fe18 <PyInit__testcapi@@Base+0x6c5c>
    fdcc:	ldr	x19, [sp, #48]
    fdd0:	ldp	x29, x30, [sp, #32]
    fdd4:	add	sp, sp, #0x40
    fdd8:	ret
    fddc:	mov	x0, xzr
    fde0:	ldr	x19, [sp, #48]
    fde4:	ldp	x29, x30, [sp, #32]
    fde8:	add	sp, sp, #0x40
    fdec:	ret
    fdf0:	mov	w1, #0x7f                  	// #127
    fdf4:	bl	9010 <PyUnicode_New@plt>
    fdf8:	cbnz	x0, fe18 <PyInit__testcapi@@Base+0x6c5c>
    fdfc:	b	fdcc <PyInit__testcapi@@Base+0x6c10>
    fe00:	cmp	w8, #0x2
    fe04:	mov	w8, #0x10ffff              	// #1114111
    fe08:	mov	w9, #0xffff                	// #65535
    fe0c:	csel	w1, w9, w8, eq  // eq = none
    fe10:	bl	9010 <PyUnicode_New@plt>
    fe14:	cbz	x0, fdcc <PyInit__testcapi@@Base+0x6c10>
    fe18:	ldr	x2, [x0, #16]
    fe1c:	mov	x1, xzr
    fe20:	mov	w3, wzr
    fe24:	mov	x19, x0
    fe28:	bl	8c90 <PyUnicode_Fill@plt>
    fe2c:	tbnz	x0, #63, fe6c <PyInit__testcapi@@Base+0x6cb0>
    fe30:	ldp	x1, x3, [sp, #8]
    fe34:	ldr	x2, [x29, #24]
    fe38:	ldr	x4, [sp]
    fe3c:	mov	x0, x19
    fe40:	bl	8630 <PyUnicode_CopyCharacters@plt>
    fe44:	tbnz	x0, #63, fe6c <PyInit__testcapi@@Base+0x6cb0>
    fe48:	mov	x2, x0
    fe4c:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
    fe50:	add	x0, x0, #0xbb4
    fe54:	mov	x1, x19
    fe58:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    fe5c:	ldr	x19, [sp, #48]
    fe60:	ldp	x29, x30, [sp, #32]
    fe64:	add	sp, sp, #0x40
    fe68:	ret
    fe6c:	ldr	x8, [x19]
    fe70:	subs	x8, x8, #0x1
    fe74:	str	x8, [x19]
    fe78:	b.ne	fe84 <PyInit__testcapi@@Base+0x6cc8>  // b.any
    fe7c:	mov	x0, x19
    fe80:	bl	8560 <_Py_Dealloc@plt>
    fe84:	mov	x0, xzr
    fe88:	ldr	x19, [sp, #48]
    fe8c:	ldp	x29, x30, [sp, #32]
    fe90:	add	sp, sp, #0x40
    fe94:	ret
    fe98:	sub	sp, sp, #0x40
    fe9c:	stp	x29, x30, [sp, #32]
    fea0:	stp	x20, x19, [sp, #48]
    fea4:	add	x29, sp, #0x20
    fea8:	mov	x0, x1
    feac:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    feb0:	add	x1, x1, #0xc00
    feb4:	sub	x2, x29, #0x8
    feb8:	add	x3, sp, #0x10
    febc:	add	x4, sp, #0x8
    fec0:	str	xzr, [sp, #8]
    fec4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fec8:	cbz	w0, ff4c <PyInit__testcapi@@Base+0x6d90>
    fecc:	ldr	x8, [sp, #16]
    fed0:	mov	x0, xzr
    fed4:	lsl	x9, x8, #3
    fed8:	sub	x1, x9, x8
    fedc:	bl	8500 <PyBytes_FromStringAndSize@plt>
    fee0:	str	x0, [sp]
    fee4:	cbz	x0, ff24 <PyInit__testcapi@@Base+0x6d68>
    fee8:	mov	x19, x0
    feec:	ldur	x0, [x29, #-8]
    fef0:	ldp	x3, x1, [sp, #8]
    fef4:	add	x20, x19, #0x20
    fef8:	mov	x2, x20
    fefc:	bl	8af0 <PyUnicode_EncodeDecimal@plt>
    ff00:	tbnz	w0, #31, ff34 <PyInit__testcapi@@Base+0x6d78>
    ff04:	mov	x0, x20
    ff08:	bl	8300 <strlen@plt>
    ff0c:	mov	x1, x0
    ff10:	mov	x0, sp
    ff14:	bl	8370 <_PyBytes_Resize@plt>
    ff18:	ldr	x8, [sp]
    ff1c:	cmp	w0, #0x0
    ff20:	csel	x0, xzr, x8, lt  // lt = tstop
    ff24:	ldp	x20, x19, [sp, #48]
    ff28:	ldp	x29, x30, [sp, #32]
    ff2c:	add	sp, sp, #0x40
    ff30:	ret
    ff34:	ldr	x8, [x19]
    ff38:	subs	x8, x8, #0x1
    ff3c:	str	x8, [x19]
    ff40:	b.ne	ff4c <PyInit__testcapi@@Base+0x6d90>  // b.any
    ff44:	mov	x0, x19
    ff48:	bl	8560 <_Py_Dealloc@plt>
    ff4c:	mov	x0, xzr
    ff50:	ldp	x20, x19, [sp, #48]
    ff54:	ldp	x29, x30, [sp, #32]
    ff58:	add	sp, sp, #0x40
    ff5c:	ret
    ff60:	sub	sp, sp, #0x20
    ff64:	stp	x29, x30, [sp, #16]
    ff68:	add	x29, sp, #0x10
    ff6c:	mov	x0, x1
    ff70:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ff74:	add	x1, x1, #0xc00
    ff78:	add	x2, sp, #0x8
    ff7c:	mov	x3, sp
    ff80:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ff84:	cbz	w0, ff9c <PyInit__testcapi@@Base+0x6de0>
    ff88:	ldp	x1, x0, [sp]
    ff8c:	bl	9020 <PyUnicode_TransformDecimalToASCII@plt>
    ff90:	ldp	x29, x30, [sp, #16]
    ff94:	add	sp, sp, #0x20
    ff98:	ret
    ff9c:	mov	x0, xzr
    ffa0:	ldp	x29, x30, [sp, #16]
    ffa4:	add	sp, sp, #0x20
    ffa8:	ret
    ffac:	sub	sp, sp, #0x30
    ffb0:	stp	x29, x30, [sp, #16]
    ffb4:	str	x19, [sp, #32]
    ffb8:	add	x29, sp, #0x10
    ffbc:	mov	x0, x1
    ffc0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    ffc4:	add	x1, x1, #0x90c
    ffc8:	add	x2, x29, #0x18
    ffcc:	add	x3, sp, #0x8
    ffd0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ffd4:	cbz	w0, 10010 <PyInit__testcapi@@Base+0x6e54>
    ffd8:	ldr	x1, [sp, #8]
    ffdc:	mov	x0, xzr
    ffe0:	bl	8890 <PyUnicode_FromUnicode@plt>
    ffe4:	mov	x19, x0
    ffe8:	cbz	x0, 10014 <PyInit__testcapi@@Base+0x6e58>
    ffec:	ldr	x0, [x19, #40]
    fff0:	cbnz	x0, fffc <PyInit__testcapi@@Base+0x6e40>
    fff4:	mov	x0, x19
    fff8:	bl	8910 <PyUnicode_AsUnicode@plt>
    fffc:	ldr	x8, [sp, #8]
   10000:	ldr	x1, [x29, #24]
   10004:	lsl	x2, x8, #2
   10008:	bl	8250 <memcpy@plt>
   1000c:	b	10014 <PyInit__testcapi@@Base+0x6e58>
   10010:	mov	x19, xzr
   10014:	mov	x0, x19
   10018:	ldr	x19, [sp, #32]
   1001c:	ldp	x29, x30, [sp, #16]
   10020:	add	sp, sp, #0x30
   10024:	ret
   10028:	sub	sp, sp, #0x50
   1002c:	stp	x29, x30, [sp, #16]
   10030:	stp	x24, x23, [sp, #32]
   10034:	stp	x22, x21, [sp, #48]
   10038:	stp	x20, x19, [sp, #64]
   1003c:	add	x29, sp, #0x10
   10040:	mov	x0, x1
   10044:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10048:	add	x1, x1, #0xc05
   1004c:	add	x2, sp, #0x8
   10050:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10054:	cbz	w0, 10304 <PyInit__testcapi@@Base+0x7148>
   10058:	ldr	x0, [sp, #8]
   1005c:	bl	8c30 <PyCallable_Check@plt>
   10060:	cbz	w0, 100e4 <PyInit__testcapi@@Base+0x6f28>
   10064:	bl	8f70 <PyEval_InitThreads@plt>
   10068:	bl	8ad0 <PyThread_allocate_lock@plt>
   1006c:	adrp	x23, 2b000 <PyInit__testcapi@@Base+0x21e44>
   10070:	str	x0, [x23, #3528]
   10074:	cbz	x0, 10320 <PyInit__testcapi@@Base+0x7164>
   10078:	mov	w1, #0x1                   	// #1
   1007c:	bl	85e0 <PyThread_acquire_lock@plt>
   10080:	ldr	x1, [sp, #8]
   10084:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
   10088:	add	x0, x0, #0x174
   1008c:	bl	8460 <PyThread_start_new_thread@plt>
   10090:	ldr	x19, [sp, #8]
   10094:	bl	86e0 <PyGILState_Ensure@plt>
   10098:	ldr	x8, [x19, #8]
   1009c:	mov	w20, w0
   100a0:	ldrb	w9, [x8, #169]
   100a4:	tbz	w9, #3, 1010c <PyInit__testcapi@@Base+0x6f50>
   100a8:	ldr	x8, [x8, #56]
   100ac:	ldr	x8, [x19, x8]
   100b0:	cbz	x8, 1010c <PyInit__testcapi@@Base+0x6f50>
   100b4:	mov	x0, x19
   100b8:	mov	x1, xzr
   100bc:	mov	x2, xzr
   100c0:	mov	x3, xzr
   100c4:	blr	x8
   100c8:	mov	x1, x0
   100cc:	mov	x0, x19
   100d0:	mov	x2, xzr
   100d4:	bl	8a80 <_Py_CheckFunctionResult@plt>
   100d8:	mov	x19, x0
   100dc:	cbnz	x0, 10128 <PyInit__testcapi@@Base+0x6f6c>
   100e0:	b	10140 <PyInit__testcapi@@Base+0x6f84>
   100e4:	ldr	x8, [sp, #8]
   100e8:	adrp	x9, 27000 <PyInit__testcapi@@Base+0x1de44>
   100ec:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   100f0:	add	x1, x1, #0xc19
   100f4:	ldr	x8, [x8, #8]
   100f8:	ldr	x9, [x9, #3952]
   100fc:	ldr	x2, [x8, #24]
   10100:	ldr	x0, [x9]
   10104:	bl	8e60 <PyErr_Format@plt>
   10108:	b	10304 <PyInit__testcapi@@Base+0x7148>
   1010c:	mov	x0, x19
   10110:	mov	x1, xzr
   10114:	mov	x2, xzr
   10118:	mov	x3, xzr
   1011c:	bl	8f00 <_PyObject_MakeTpCall@plt>
   10120:	mov	x19, x0
   10124:	cbz	x0, 10140 <PyInit__testcapi@@Base+0x6f84>
   10128:	ldr	x8, [x19]
   1012c:	subs	x8, x8, #0x1
   10130:	str	x8, [x19]
   10134:	b.ne	10140 <PyInit__testcapi@@Base+0x6f84>  // b.any
   10138:	mov	x0, x19
   1013c:	bl	8560 <_Py_Dealloc@plt>
   10140:	mov	w0, w20
   10144:	bl	8360 <PyGILState_Release@plt>
   10148:	bl	8d50 <PyEval_SaveThread@plt>
   1014c:	ldr	x22, [sp, #8]
   10150:	mov	x20, x0
   10154:	bl	86e0 <PyGILState_Ensure@plt>
   10158:	ldr	x8, [x22, #8]
   1015c:	mov	w21, w0
   10160:	ldrb	w9, [x8, #169]
   10164:	tbz	w9, #3, 101a4 <PyInit__testcapi@@Base+0x6fe8>
   10168:	ldr	x8, [x8, #56]
   1016c:	ldr	x8, [x22, x8]
   10170:	cbz	x8, 101a4 <PyInit__testcapi@@Base+0x6fe8>
   10174:	mov	x0, x22
   10178:	mov	x1, xzr
   1017c:	mov	x2, xzr
   10180:	mov	x3, xzr
   10184:	blr	x8
   10188:	mov	x1, x0
   1018c:	mov	x0, x22
   10190:	mov	x2, xzr
   10194:	bl	8a80 <_Py_CheckFunctionResult@plt>
   10198:	mov	x22, x0
   1019c:	cbnz	x0, 101c0 <PyInit__testcapi@@Base+0x7004>
   101a0:	b	101d8 <PyInit__testcapi@@Base+0x701c>
   101a4:	mov	x0, x22
   101a8:	mov	x1, xzr
   101ac:	mov	x2, xzr
   101b0:	mov	x3, xzr
   101b4:	bl	8f00 <_PyObject_MakeTpCall@plt>
   101b8:	mov	x22, x0
   101bc:	cbz	x0, 101d8 <PyInit__testcapi@@Base+0x701c>
   101c0:	ldr	x8, [x22]
   101c4:	subs	x8, x8, #0x1
   101c8:	str	x8, [x22]
   101cc:	b.ne	101d8 <PyInit__testcapi@@Base+0x701c>  // b.any
   101d0:	mov	x0, x22
   101d4:	bl	8560 <_Py_Dealloc@plt>
   101d8:	cmp	x22, #0x0
   101dc:	cset	w22, ne  // ne = any
   101e0:	cmp	x19, #0x0
   101e4:	mov	w0, w21
   101e8:	cset	w24, ne  // ne = any
   101ec:	bl	8360 <PyGILState_Release@plt>
   101f0:	ldr	x0, [x23, #3528]
   101f4:	mov	w1, #0x1                   	// #1
   101f8:	bl	85e0 <PyThread_acquire_lock@plt>
   101fc:	mov	x0, x20
   10200:	bl	83b0 <PyEval_RestoreThread@plt>
   10204:	bl	8d50 <PyEval_SaveThread@plt>
   10208:	ldr	x1, [sp, #8]
   1020c:	mov	x19, x0
   10210:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
   10214:	add	x0, x0, #0x174
   10218:	bl	8460 <PyThread_start_new_thread@plt>
   1021c:	ldr	x21, [sp, #8]
   10220:	bl	86e0 <PyGILState_Ensure@plt>
   10224:	ldr	x8, [x21, #8]
   10228:	mov	w20, w0
   1022c:	ldrb	w9, [x8, #169]
   10230:	tbz	w9, #3, 10274 <PyInit__testcapi@@Base+0x70b8>
   10234:	ldr	x8, [x8, #56]
   10238:	ldr	x8, [x21, x8]
   1023c:	cbz	x8, 10274 <PyInit__testcapi@@Base+0x70b8>
   10240:	mov	x0, x21
   10244:	mov	x1, xzr
   10248:	mov	x2, xzr
   1024c:	mov	x3, xzr
   10250:	blr	x8
   10254:	mov	x1, x0
   10258:	mov	x0, x21
   1025c:	mov	x2, xzr
   10260:	bl	8a80 <_Py_CheckFunctionResult@plt>
   10264:	mov	x21, x0
   10268:	and	w22, w24, w22
   1026c:	cbnz	x0, 10294 <PyInit__testcapi@@Base+0x70d8>
   10270:	b	102ac <PyInit__testcapi@@Base+0x70f0>
   10274:	mov	x0, x21
   10278:	mov	x1, xzr
   1027c:	mov	x2, xzr
   10280:	mov	x3, xzr
   10284:	bl	8f00 <_PyObject_MakeTpCall@plt>
   10288:	mov	x21, x0
   1028c:	and	w22, w24, w22
   10290:	cbz	x0, 102ac <PyInit__testcapi@@Base+0x70f0>
   10294:	ldr	x8, [x21]
   10298:	subs	x8, x8, #0x1
   1029c:	str	x8, [x21]
   102a0:	b.ne	102ac <PyInit__testcapi@@Base+0x70f0>  // b.any
   102a4:	mov	x0, x21
   102a8:	bl	8560 <_Py_Dealloc@plt>
   102ac:	cmp	x21, #0x0
   102b0:	mov	w0, w20
   102b4:	cset	w21, eq  // eq = none
   102b8:	bl	8360 <PyGILState_Release@plt>
   102bc:	ldr	x0, [x23, #3528]
   102c0:	mov	w1, #0x1                   	// #1
   102c4:	eor	w20, w22, #0x1
   102c8:	bl	85e0 <PyThread_acquire_lock@plt>
   102cc:	mov	x0, x19
   102d0:	bl	83b0 <PyEval_RestoreThread@plt>
   102d4:	ldr	x0, [x23, #3528]
   102d8:	bl	8b90 <PyThread_release_lock@plt>
   102dc:	ldr	x0, [x23, #3528]
   102e0:	bl	9030 <PyThread_free_lock@plt>
   102e4:	orr	w8, w20, w21
   102e8:	tbnz	w8, #0, 10304 <PyInit__testcapi@@Base+0x7148>
   102ec:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   102f0:	ldr	x0, [x0, #4016]
   102f4:	ldr	x8, [x0]
   102f8:	add	x8, x8, #0x1
   102fc:	str	x8, [x0]
   10300:	b	10308 <PyInit__testcapi@@Base+0x714c>
   10304:	mov	x0, xzr
   10308:	ldp	x20, x19, [sp, #64]
   1030c:	ldp	x22, x21, [sp, #48]
   10310:	ldp	x24, x23, [sp, #32]
   10314:	ldp	x29, x30, [sp, #16]
   10318:	add	sp, sp, #0x50
   1031c:	ret
   10320:	bl	8570 <PyErr_NoMemory@plt>
   10324:	b	10308 <PyInit__testcapi@@Base+0x714c>
   10328:	sub	sp, sp, #0x30
   1032c:	stp	x29, x30, [sp, #16]
   10330:	stp	x20, x19, [sp, #32]
   10334:	add	x29, sp, #0x10
   10338:	mov	x0, x1
   1033c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   10340:	add	x1, x1, #0xc6
   10344:	add	x2, sp, #0x8
   10348:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1034c:	cbz	w0, 10394 <PyInit__testcapi@@Base+0x71d8>
   10350:	ldr	x8, [sp, #8]
   10354:	ldr	x9, [x8]
   10358:	add	x9, x9, #0x1
   1035c:	str	x9, [x8]
   10360:	bl	8d50 <PyEval_SaveThread@plt>
   10364:	ldr	x1, [sp, #8]
   10368:	mov	x19, x0
   1036c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
   10370:	add	x0, x0, #0x218
   10374:	bl	88e0 <Py_AddPendingCall@plt>
   10378:	mov	w20, w0
   1037c:	mov	x0, x19
   10380:	bl	83b0 <PyEval_RestoreThread@plt>
   10384:	tbnz	w20, #31, 103a8 <PyInit__testcapi@@Base+0x71ec>
   10388:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   1038c:	ldr	x0, [x0, #4032]
   10390:	b	103c8 <PyInit__testcapi@@Base+0x720c>
   10394:	mov	x0, xzr
   10398:	ldp	x20, x19, [sp, #32]
   1039c:	ldp	x29, x30, [sp, #16]
   103a0:	add	sp, sp, #0x30
   103a4:	ret
   103a8:	ldr	x0, [sp, #8]
   103ac:	ldr	x8, [x0]
   103b0:	subs	x8, x8, #0x1
   103b4:	str	x8, [x0]
   103b8:	b.ne	103c0 <PyInit__testcapi@@Base+0x7204>  // b.any
   103bc:	bl	8560 <_Py_Dealloc@plt>
   103c0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   103c4:	ldr	x0, [x0, #3984]
   103c8:	ldr	x8, [x0]
   103cc:	add	x8, x8, #0x1
   103d0:	str	x8, [x0]
   103d4:	ldp	x20, x19, [sp, #32]
   103d8:	ldp	x29, x30, [sp, #16]
   103dc:	add	sp, sp, #0x30
   103e0:	ret
   103e4:	sub	sp, sp, #0x60
   103e8:	stp	x29, x30, [sp, #32]
   103ec:	str	x23, [sp, #48]
   103f0:	stp	x22, x21, [sp, #64]
   103f4:	stp	x20, x19, [sp, #80]
   103f8:	add	x29, sp, #0x20
   103fc:	add	x0, sp, #0x10
   10400:	mov	x1, xzr
   10404:	bl	8780 <gettimeofday@plt>
   10408:	mov	w20, wzr
   1040c:	mov	w21, #0x4e20                	// #20000
   10410:	b	10420 <PyInit__testcapi@@Base+0x7264>
   10414:	add	w20, w20, #0x1
   10418:	cmp	w20, w21
   1041c:	b.eq	10454 <PyInit__testcapi@@Base+0x7298>  // b.none
   10420:	mov	x19, xzr
   10424:	b	10434 <PyInit__testcapi@@Base+0x7278>
   10428:	add	x19, x19, #0x1
   1042c:	cmp	x19, #0x3e8
   10430:	b.eq	10414 <PyInit__testcapi@@Base+0x7258>  // b.none
   10434:	mov	x0, x19
   10438:	bl	8840 <PyLong_FromLong@plt>
   1043c:	ldr	x8, [x0]
   10440:	subs	x8, x8, #0x1
   10444:	str	x8, [x0]
   10448:	b.ne	10428 <PyInit__testcapi@@Base+0x726c>  // b.any
   1044c:	bl	8560 <_Py_Dealloc@plt>
   10450:	b	10428 <PyInit__testcapi@@Base+0x726c>
   10454:	mov	w20, #0x4240                	// #16960
   10458:	mov	x0, sp
   1045c:	mov	x1, xzr
   10460:	movk	w20, #0xf, lsl #16
   10464:	bl	8780 <gettimeofday@plt>
   10468:	ldp	q1, q0, [sp]
   1046c:	sub	v0.2d, v1.2d, v0.2d
   10470:	mov	x3, v0.d[1]
   10474:	fmov	x2, d0
   10478:	str	q0, [sp]
   1047c:	tbz	x3, #63, 1048c <PyInit__testcapi@@Base+0x72d0>
   10480:	sub	x2, x2, #0x1
   10484:	add	x3, x3, x20
   10488:	stp	x2, x3, [sp]
   1048c:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   10490:	add	x0, x0, #0xc35
   10494:	mov	w1, #0x1                   	// #1
   10498:	bl	8f30 <printf@plt>
   1049c:	add	x0, sp, #0x10
   104a0:	mov	x1, xzr
   104a4:	bl	8780 <gettimeofday@plt>
   104a8:	mov	w19, wzr
   104ac:	mov	w21, #0x4e20                	// #20000
   104b0:	b	104c0 <PyInit__testcapi@@Base+0x7304>
   104b4:	add	w19, w19, #0x1
   104b8:	cmp	w19, w21
   104bc:	b.eq	104f4 <PyInit__testcapi@@Base+0x7338>  // b.none
   104c0:	mov	x22, xzr
   104c4:	b	104d4 <PyInit__testcapi@@Base+0x7318>
   104c8:	add	x22, x22, #0x1
   104cc:	cmp	x22, #0x3e8
   104d0:	b.eq	104b4 <PyInit__testcapi@@Base+0x72f8>  // b.none
   104d4:	add	x0, x22, x20
   104d8:	bl	8840 <PyLong_FromLong@plt>
   104dc:	ldr	x8, [x0]
   104e0:	subs	x8, x8, #0x1
   104e4:	str	x8, [x0]
   104e8:	b.ne	104c8 <PyInit__testcapi@@Base+0x730c>  // b.any
   104ec:	bl	8560 <_Py_Dealloc@plt>
   104f0:	b	104c8 <PyInit__testcapi@@Base+0x730c>
   104f4:	mov	x0, sp
   104f8:	mov	x1, xzr
   104fc:	bl	8780 <gettimeofday@plt>
   10500:	ldp	q1, q0, [sp]
   10504:	sub	v0.2d, v1.2d, v0.2d
   10508:	mov	x3, v0.d[1]
   1050c:	fmov	x2, d0
   10510:	str	q0, [sp]
   10514:	tbz	x3, #63, 10524 <PyInit__testcapi@@Base+0x7368>
   10518:	sub	x2, x2, #0x1
   1051c:	add	x3, x3, x20
   10520:	stp	x2, x3, [sp]
   10524:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   10528:	add	x0, x0, #0xc35
   1052c:	mov	w1, #0x2                   	// #2
   10530:	bl	8f30 <printf@plt>
   10534:	mov	w0, #0x1f40                	// #8000
   10538:	bl	8660 <malloc@plt>
   1053c:	cbz	x0, 10738 <PyInit__testcapi@@Base+0x757c>
   10540:	mov	x19, x0
   10544:	add	x0, sp, #0x10
   10548:	mov	x1, xzr
   1054c:	bl	8780 <gettimeofday@plt>
   10550:	mov	w21, wzr
   10554:	mov	w22, #0x4e20                	// #20000
   10558:	b	10568 <PyInit__testcapi@@Base+0x73ac>
   1055c:	add	w21, w21, #0x1
   10560:	cmp	w21, w22
   10564:	b.eq	105b4 <PyInit__testcapi@@Base+0x73f8>  // b.none
   10568:	mov	x23, xzr
   1056c:	add	x0, x23, x20
   10570:	bl	8840 <PyLong_FromLong@plt>
   10574:	str	x0, [x19, x23, lsl #3]
   10578:	add	x23, x23, #0x1
   1057c:	cmp	x23, #0x3e8
   10580:	b.ne	1056c <PyInit__testcapi@@Base+0x73b0>  // b.any
   10584:	mov	x23, xzr
   10588:	b	10598 <PyInit__testcapi@@Base+0x73dc>
   1058c:	add	x23, x23, #0x1
   10590:	cmp	x23, #0x3e8
   10594:	b.eq	1055c <PyInit__testcapi@@Base+0x73a0>  // b.none
   10598:	ldr	x0, [x19, x23, lsl #3]
   1059c:	ldr	x8, [x0]
   105a0:	subs	x8, x8, #0x1
   105a4:	str	x8, [x0]
   105a8:	b.ne	1058c <PyInit__testcapi@@Base+0x73d0>  // b.any
   105ac:	bl	8560 <_Py_Dealloc@plt>
   105b0:	b	1058c <PyInit__testcapi@@Base+0x73d0>
   105b4:	mov	x0, sp
   105b8:	mov	x1, xzr
   105bc:	bl	8780 <gettimeofday@plt>
   105c0:	ldp	q1, q0, [sp]
   105c4:	sub	v0.2d, v1.2d, v0.2d
   105c8:	mov	x3, v0.d[1]
   105cc:	fmov	x2, d0
   105d0:	str	q0, [sp]
   105d4:	tbz	x3, #63, 105e4 <PyInit__testcapi@@Base+0x7428>
   105d8:	sub	x2, x2, #0x1
   105dc:	add	x3, x3, x20
   105e0:	stp	x2, x3, [sp]
   105e4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   105e8:	mov	w21, #0x1200                	// #4608
   105ec:	add	x0, x0, #0xc35
   105f0:	mov	w1, #0x3                   	// #3
   105f4:	movk	w21, #0x7a, lsl #16
   105f8:	bl	8f30 <printf@plt>
   105fc:	mov	x0, x19
   10600:	bl	8aa0 <free@plt>
   10604:	mov	w0, #0x1200                	// #4608
   10608:	movk	w0, #0x7a, lsl #16
   1060c:	bl	8660 <malloc@plt>
   10610:	cbz	x0, 10738 <PyInit__testcapi@@Base+0x757c>
   10614:	mov	x19, x0
   10618:	add	x0, sp, #0x10
   1061c:	mov	x1, xzr
   10620:	bl	8780 <gettimeofday@plt>
   10624:	mov	w22, wzr
   10628:	b	10638 <PyInit__testcapi@@Base+0x747c>
   1062c:	add	w22, w22, #0x1
   10630:	cmp	w22, #0x14
   10634:	b.eq	10684 <PyInit__testcapi@@Base+0x74c8>  // b.none
   10638:	mov	x23, xzr
   1063c:	add	x0, x23, x20
   10640:	bl	8840 <PyLong_FromLong@plt>
   10644:	str	x0, [x19, x23, lsl #3]
   10648:	add	x23, x23, #0x1
   1064c:	cmp	x20, x23
   10650:	b.ne	1063c <PyInit__testcapi@@Base+0x7480>  // b.any
   10654:	mov	x23, xzr
   10658:	b	10668 <PyInit__testcapi@@Base+0x74ac>
   1065c:	add	x23, x23, #0x8
   10660:	cmp	x21, x23
   10664:	b.eq	1062c <PyInit__testcapi@@Base+0x7470>  // b.none
   10668:	ldr	x0, [x19, x23]
   1066c:	ldr	x8, [x0]
   10670:	subs	x8, x8, #0x1
   10674:	str	x8, [x0]
   10678:	b.ne	1065c <PyInit__testcapi@@Base+0x74a0>  // b.any
   1067c:	bl	8560 <_Py_Dealloc@plt>
   10680:	b	1065c <PyInit__testcapi@@Base+0x74a0>
   10684:	mov	x0, sp
   10688:	mov	x1, xzr
   1068c:	bl	8780 <gettimeofday@plt>
   10690:	ldp	q1, q0, [sp]
   10694:	sub	v0.2d, v1.2d, v0.2d
   10698:	mov	x3, v0.d[1]
   1069c:	fmov	x2, d0
   106a0:	str	q0, [sp]
   106a4:	tbz	x3, #63, 106b4 <PyInit__testcapi@@Base+0x74f8>
   106a8:	sub	x2, x2, #0x1
   106ac:	add	x3, x3, x20
   106b0:	stp	x2, x3, [sp]
   106b4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   106b8:	add	x0, x0, #0xc35
   106bc:	mov	w1, #0x4                   	// #4
   106c0:	bl	8f30 <printf@plt>
   106c4:	mov	x0, x19
   106c8:	bl	8aa0 <free@plt>
   106cc:	mov	w0, #0x1200                	// #4608
   106d0:	movk	w0, #0x7a, lsl #16
   106d4:	bl	8660 <malloc@plt>
   106d8:	cbz	x0, 10738 <PyInit__testcapi@@Base+0x757c>
   106dc:	mov	x19, x0
   106e0:	add	x0, sp, #0x10
   106e4:	mov	x1, xzr
   106e8:	bl	8780 <gettimeofday@plt>
   106ec:	mov	x22, xzr
   106f0:	add	x0, x22, #0x3e8
   106f4:	bl	8840 <PyLong_FromLong@plt>
   106f8:	str	x0, [x19, x22, lsl #3]
   106fc:	add	x22, x22, #0x1
   10700:	cmp	x20, x22
   10704:	b.ne	106f0 <PyInit__testcapi@@Base+0x7534>  // b.any
   10708:	mov	x22, xzr
   1070c:	b	1071c <PyInit__testcapi@@Base+0x7560>
   10710:	add	x22, x22, #0x8
   10714:	cmp	x21, x22
   10718:	b.eq	10754 <PyInit__testcapi@@Base+0x7598>  // b.none
   1071c:	ldr	x0, [x19, x22]
   10720:	ldr	x8, [x0]
   10724:	subs	x8, x8, #0x1
   10728:	str	x8, [x0]
   1072c:	b.ne	10710 <PyInit__testcapi@@Base+0x7554>  // b.any
   10730:	bl	8560 <_Py_Dealloc@plt>
   10734:	b	10710 <PyInit__testcapi@@Base+0x7554>
   10738:	bl	8570 <PyErr_NoMemory@plt>
   1073c:	ldp	x20, x19, [sp, #80]
   10740:	ldp	x22, x21, [sp, #64]
   10744:	ldr	x23, [sp, #48]
   10748:	ldp	x29, x30, [sp, #32]
   1074c:	add	sp, sp, #0x60
   10750:	ret
   10754:	mov	x22, xzr
   10758:	add	x0, x22, #0x3e8
   1075c:	bl	8840 <PyLong_FromLong@plt>
   10760:	str	x0, [x19, x22, lsl #3]
   10764:	add	x22, x22, #0x1
   10768:	cmp	x20, x22
   1076c:	b.ne	10758 <PyInit__testcapi@@Base+0x759c>  // b.any
   10770:	mov	x22, xzr
   10774:	b	10784 <PyInit__testcapi@@Base+0x75c8>
   10778:	add	x22, x22, #0x8
   1077c:	cmp	x21, x22
   10780:	b.eq	107a0 <PyInit__testcapi@@Base+0x75e4>  // b.none
   10784:	ldr	x0, [x19, x22]
   10788:	ldr	x8, [x0]
   1078c:	subs	x8, x8, #0x1
   10790:	str	x8, [x0]
   10794:	b.ne	10778 <PyInit__testcapi@@Base+0x75bc>  // b.any
   10798:	bl	8560 <_Py_Dealloc@plt>
   1079c:	b	10778 <PyInit__testcapi@@Base+0x75bc>
   107a0:	mov	x22, xzr
   107a4:	add	x0, x22, #0x3e8
   107a8:	bl	8840 <PyLong_FromLong@plt>
   107ac:	str	x0, [x19, x22, lsl #3]
   107b0:	add	x22, x22, #0x1
   107b4:	cmp	x20, x22
   107b8:	b.ne	107a4 <PyInit__testcapi@@Base+0x75e8>  // b.any
   107bc:	mov	x22, xzr
   107c0:	b	107d0 <PyInit__testcapi@@Base+0x7614>
   107c4:	add	x22, x22, #0x8
   107c8:	cmp	x21, x22
   107cc:	b.eq	107ec <PyInit__testcapi@@Base+0x7630>  // b.none
   107d0:	ldr	x0, [x19, x22]
   107d4:	ldr	x8, [x0]
   107d8:	subs	x8, x8, #0x1
   107dc:	str	x8, [x0]
   107e0:	b.ne	107c4 <PyInit__testcapi@@Base+0x7608>  // b.any
   107e4:	bl	8560 <_Py_Dealloc@plt>
   107e8:	b	107c4 <PyInit__testcapi@@Base+0x7608>
   107ec:	mov	x22, xzr
   107f0:	add	x0, x22, #0x3e8
   107f4:	bl	8840 <PyLong_FromLong@plt>
   107f8:	str	x0, [x19, x22, lsl #3]
   107fc:	add	x22, x22, #0x1
   10800:	cmp	x20, x22
   10804:	b.ne	107f0 <PyInit__testcapi@@Base+0x7634>  // b.any
   10808:	mov	x22, xzr
   1080c:	b	1081c <PyInit__testcapi@@Base+0x7660>
   10810:	add	x22, x22, #0x8
   10814:	cmp	x21, x22
   10818:	b.eq	10838 <PyInit__testcapi@@Base+0x767c>  // b.none
   1081c:	ldr	x0, [x19, x22]
   10820:	ldr	x8, [x0]
   10824:	subs	x8, x8, #0x1
   10828:	str	x8, [x0]
   1082c:	b.ne	10810 <PyInit__testcapi@@Base+0x7654>  // b.any
   10830:	bl	8560 <_Py_Dealloc@plt>
   10834:	b	10810 <PyInit__testcapi@@Base+0x7654>
   10838:	mov	x22, xzr
   1083c:	add	x0, x22, #0x3e8
   10840:	bl	8840 <PyLong_FromLong@plt>
   10844:	str	x0, [x19, x22, lsl #3]
   10848:	add	x22, x22, #0x1
   1084c:	cmp	x20, x22
   10850:	b.ne	1083c <PyInit__testcapi@@Base+0x7680>  // b.any
   10854:	mov	x22, xzr
   10858:	b	10868 <PyInit__testcapi@@Base+0x76ac>
   1085c:	add	x22, x22, #0x8
   10860:	cmp	x21, x22
   10864:	b.eq	10884 <PyInit__testcapi@@Base+0x76c8>  // b.none
   10868:	ldr	x0, [x19, x22]
   1086c:	ldr	x8, [x0]
   10870:	subs	x8, x8, #0x1
   10874:	str	x8, [x0]
   10878:	b.ne	1085c <PyInit__testcapi@@Base+0x76a0>  // b.any
   1087c:	bl	8560 <_Py_Dealloc@plt>
   10880:	b	1085c <PyInit__testcapi@@Base+0x76a0>
   10884:	mov	x22, xzr
   10888:	add	x0, x22, #0x3e8
   1088c:	bl	8840 <PyLong_FromLong@plt>
   10890:	str	x0, [x19, x22, lsl #3]
   10894:	add	x22, x22, #0x1
   10898:	cmp	x20, x22
   1089c:	b.ne	10888 <PyInit__testcapi@@Base+0x76cc>  // b.any
   108a0:	mov	x22, xzr
   108a4:	b	108b4 <PyInit__testcapi@@Base+0x76f8>
   108a8:	add	x22, x22, #0x8
   108ac:	cmp	x21, x22
   108b0:	b.eq	108d0 <PyInit__testcapi@@Base+0x7714>  // b.none
   108b4:	ldr	x0, [x19, x22]
   108b8:	ldr	x8, [x0]
   108bc:	subs	x8, x8, #0x1
   108c0:	str	x8, [x0]
   108c4:	b.ne	108a8 <PyInit__testcapi@@Base+0x76ec>  // b.any
   108c8:	bl	8560 <_Py_Dealloc@plt>
   108cc:	b	108a8 <PyInit__testcapi@@Base+0x76ec>
   108d0:	mov	x22, xzr
   108d4:	add	x0, x22, #0x3e8
   108d8:	bl	8840 <PyLong_FromLong@plt>
   108dc:	str	x0, [x19, x22, lsl #3]
   108e0:	add	x22, x22, #0x1
   108e4:	cmp	x20, x22
   108e8:	b.ne	108d4 <PyInit__testcapi@@Base+0x7718>  // b.any
   108ec:	mov	x22, xzr
   108f0:	b	10900 <PyInit__testcapi@@Base+0x7744>
   108f4:	add	x22, x22, #0x8
   108f8:	cmp	x21, x22
   108fc:	b.eq	1091c <PyInit__testcapi@@Base+0x7760>  // b.none
   10900:	ldr	x0, [x19, x22]
   10904:	ldr	x8, [x0]
   10908:	subs	x8, x8, #0x1
   1090c:	str	x8, [x0]
   10910:	b.ne	108f4 <PyInit__testcapi@@Base+0x7738>  // b.any
   10914:	bl	8560 <_Py_Dealloc@plt>
   10918:	b	108f4 <PyInit__testcapi@@Base+0x7738>
   1091c:	mov	x22, xzr
   10920:	add	x0, x22, #0x3e8
   10924:	bl	8840 <PyLong_FromLong@plt>
   10928:	str	x0, [x19, x22, lsl #3]
   1092c:	add	x22, x22, #0x1
   10930:	cmp	x20, x22
   10934:	b.ne	10920 <PyInit__testcapi@@Base+0x7764>  // b.any
   10938:	mov	x22, xzr
   1093c:	b	1094c <PyInit__testcapi@@Base+0x7790>
   10940:	add	x22, x22, #0x8
   10944:	cmp	x21, x22
   10948:	b.eq	10968 <PyInit__testcapi@@Base+0x77ac>  // b.none
   1094c:	ldr	x0, [x19, x22]
   10950:	ldr	x8, [x0]
   10954:	subs	x8, x8, #0x1
   10958:	str	x8, [x0]
   1095c:	b.ne	10940 <PyInit__testcapi@@Base+0x7784>  // b.any
   10960:	bl	8560 <_Py_Dealloc@plt>
   10964:	b	10940 <PyInit__testcapi@@Base+0x7784>
   10968:	mov	x22, xzr
   1096c:	add	x0, x22, #0x3e8
   10970:	bl	8840 <PyLong_FromLong@plt>
   10974:	str	x0, [x19, x22, lsl #3]
   10978:	add	x22, x22, #0x1
   1097c:	cmp	x20, x22
   10980:	b.ne	1096c <PyInit__testcapi@@Base+0x77b0>  // b.any
   10984:	mov	x22, xzr
   10988:	b	10998 <PyInit__testcapi@@Base+0x77dc>
   1098c:	add	x22, x22, #0x8
   10990:	cmp	x21, x22
   10994:	b.eq	109b4 <PyInit__testcapi@@Base+0x77f8>  // b.none
   10998:	ldr	x0, [x19, x22]
   1099c:	ldr	x8, [x0]
   109a0:	subs	x8, x8, #0x1
   109a4:	str	x8, [x0]
   109a8:	b.ne	1098c <PyInit__testcapi@@Base+0x77d0>  // b.any
   109ac:	bl	8560 <_Py_Dealloc@plt>
   109b0:	b	1098c <PyInit__testcapi@@Base+0x77d0>
   109b4:	mov	x22, xzr
   109b8:	add	x0, x22, #0x3e8
   109bc:	bl	8840 <PyLong_FromLong@plt>
   109c0:	str	x0, [x19, x22, lsl #3]
   109c4:	add	x22, x22, #0x1
   109c8:	cmp	x20, x22
   109cc:	b.ne	109b8 <PyInit__testcapi@@Base+0x77fc>  // b.any
   109d0:	mov	x22, xzr
   109d4:	b	109e4 <PyInit__testcapi@@Base+0x7828>
   109d8:	add	x22, x22, #0x8
   109dc:	cmp	x21, x22
   109e0:	b.eq	10a00 <PyInit__testcapi@@Base+0x7844>  // b.none
   109e4:	ldr	x0, [x19, x22]
   109e8:	ldr	x8, [x0]
   109ec:	subs	x8, x8, #0x1
   109f0:	str	x8, [x0]
   109f4:	b.ne	109d8 <PyInit__testcapi@@Base+0x781c>  // b.any
   109f8:	bl	8560 <_Py_Dealloc@plt>
   109fc:	b	109d8 <PyInit__testcapi@@Base+0x781c>
   10a00:	mov	x0, sp
   10a04:	mov	x1, xzr
   10a08:	bl	8780 <gettimeofday@plt>
   10a0c:	ldp	q1, q0, [sp]
   10a10:	sub	v0.2d, v1.2d, v0.2d
   10a14:	mov	x3, v0.d[1]
   10a18:	fmov	x2, d0
   10a1c:	str	q0, [sp]
   10a20:	tbz	x3, #63, 10a30 <PyInit__testcapi@@Base+0x7874>
   10a24:	sub	x2, x2, #0x1
   10a28:	add	x3, x3, x20
   10a2c:	stp	x2, x3, [sp]
   10a30:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   10a34:	mov	w21, #0x9680                	// #38528
   10a38:	add	x0, x0, #0xc35
   10a3c:	mov	w1, #0x5                   	// #5
   10a40:	movk	w21, #0x98, lsl #16
   10a44:	bl	8f30 <printf@plt>
   10a48:	mov	x0, x19
   10a4c:	bl	8aa0 <free@plt>
   10a50:	mov	w0, #0x1                   	// #1
   10a54:	bl	8840 <PyLong_FromLong@plt>
   10a58:	mov	x19, x0
   10a5c:	add	x0, sp, #0x10
   10a60:	mov	x1, xzr
   10a64:	bl	8780 <gettimeofday@plt>
   10a68:	mov	w22, #0x9680                	// #38528
   10a6c:	movk	w22, #0x98, lsl #16
   10a70:	b	10a7c <PyInit__testcapi@@Base+0x78c0>
   10a74:	subs	w22, w22, #0x1
   10a78:	b.eq	10aa0 <PyInit__testcapi@@Base+0x78e4>  // b.none
   10a7c:	mov	x0, x19
   10a80:	mov	x1, x19
   10a84:	bl	8490 <PyNumber_Add@plt>
   10a88:	ldr	x8, [x0]
   10a8c:	subs	x8, x8, #0x1
   10a90:	str	x8, [x0]
   10a94:	b.ne	10a74 <PyInit__testcapi@@Base+0x78b8>  // b.any
   10a98:	bl	8560 <_Py_Dealloc@plt>
   10a9c:	b	10a74 <PyInit__testcapi@@Base+0x78b8>
   10aa0:	mov	x0, sp
   10aa4:	mov	x1, xzr
   10aa8:	bl	8780 <gettimeofday@plt>
   10aac:	ldr	x8, [x19]
   10ab0:	subs	x8, x8, #0x1
   10ab4:	str	x8, [x19]
   10ab8:	b.ne	10ac4 <PyInit__testcapi@@Base+0x7908>  // b.any
   10abc:	mov	x0, x19
   10ac0:	bl	8560 <_Py_Dealloc@plt>
   10ac4:	ldp	q1, q0, [sp]
   10ac8:	sub	v0.2d, v1.2d, v0.2d
   10acc:	mov	x3, v0.d[1]
   10ad0:	fmov	x2, d0
   10ad4:	str	q0, [sp]
   10ad8:	tbz	x3, #63, 10ae8 <PyInit__testcapi@@Base+0x792c>
   10adc:	sub	x2, x2, #0x1
   10ae0:	add	x3, x3, x20
   10ae4:	stp	x2, x3, [sp]
   10ae8:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   10aec:	add	x0, x0, #0xc35
   10af0:	mov	w1, #0x6                   	// #6
   10af4:	bl	8f30 <printf@plt>
   10af8:	mov	w0, #0x3e8                 	// #1000
   10afc:	bl	8840 <PyLong_FromLong@plt>
   10b00:	cbz	x0, 1073c <PyInit__testcapi@@Base+0x7580>
   10b04:	mov	x19, x0
   10b08:	add	x0, sp, #0x10
   10b0c:	mov	x1, xzr
   10b10:	bl	8780 <gettimeofday@plt>
   10b14:	b	10b20 <PyInit__testcapi@@Base+0x7964>
   10b18:	subs	w21, w21, #0x1
   10b1c:	b.eq	10b48 <PyInit__testcapi@@Base+0x798c>  // b.none
   10b20:	mov	x0, x19
   10b24:	mov	x1, x19
   10b28:	bl	8490 <PyNumber_Add@plt>
   10b2c:	cbz	x0, 10b18 <PyInit__testcapi@@Base+0x795c>
   10b30:	ldr	x8, [x0]
   10b34:	subs	x8, x8, #0x1
   10b38:	str	x8, [x0]
   10b3c:	b.ne	10b18 <PyInit__testcapi@@Base+0x795c>  // b.any
   10b40:	bl	8560 <_Py_Dealloc@plt>
   10b44:	b	10b18 <PyInit__testcapi@@Base+0x795c>
   10b48:	mov	x0, sp
   10b4c:	mov	x1, xzr
   10b50:	bl	8780 <gettimeofday@plt>
   10b54:	ldr	x8, [x19]
   10b58:	subs	x8, x8, #0x1
   10b5c:	str	x8, [x19]
   10b60:	b.ne	10b6c <PyInit__testcapi@@Base+0x79b0>  // b.any
   10b64:	mov	x0, x19
   10b68:	bl	8560 <_Py_Dealloc@plt>
   10b6c:	ldp	q1, q0, [sp]
   10b70:	sub	v0.2d, v1.2d, v0.2d
   10b74:	mov	x3, v0.d[1]
   10b78:	fmov	x2, d0
   10b7c:	str	q0, [sp]
   10b80:	tbz	x3, #63, 10b90 <PyInit__testcapi@@Base+0x79d4>
   10b84:	sub	x2, x2, #0x1
   10b88:	add	x3, x3, x20
   10b8c:	stp	x2, x3, [sp]
   10b90:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   10b94:	add	x0, x0, #0xc35
   10b98:	mov	w1, #0x7                   	// #7
   10b9c:	bl	8f30 <printf@plt>
   10ba0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   10ba4:	ldr	x0, [x0, #4016]
   10ba8:	ldr	x8, [x0]
   10bac:	add	x8, x8, #0x1
   10bb0:	str	x8, [x0]
   10bb4:	b	1073c <PyInit__testcapi@@Base+0x7580>
   10bb8:	sub	sp, sp, #0x20
   10bbc:	stp	x29, x30, [sp, #16]
   10bc0:	add	x29, sp, #0x10
   10bc4:	mov	x0, x1
   10bc8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10bcc:	add	x1, x1, #0xc48
   10bd0:	mov	x2, sp
   10bd4:	add	x3, sp, #0x8
   10bd8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10bdc:	cbz	w0, 10c0c <PyInit__testcapi@@Base+0x7a50>
   10be0:	ldp	x0, x1, [sp]
   10be4:	bl	8ee0 <PyTraceBack_Print@plt>
   10be8:	tbnz	w0, #31, 10c0c <PyInit__testcapi@@Base+0x7a50>
   10bec:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   10bf0:	ldr	x0, [x0, #4016]
   10bf4:	ldr	x8, [x0]
   10bf8:	add	x8, x8, #0x1
   10bfc:	str	x8, [x0]
   10c00:	ldp	x29, x30, [sp, #16]
   10c04:	add	sp, sp, #0x20
   10c08:	ret
   10c0c:	mov	x0, xzr
   10c10:	ldp	x29, x30, [sp, #16]
   10c14:	add	sp, sp, #0x20
   10c18:	ret
   10c1c:	stp	x29, x30, [sp, #-32]!
   10c20:	str	x19, [sp, #16]
   10c24:	mov	x29, sp
   10c28:	mov	x0, x1
   10c2c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10c30:	add	x1, x1, #0xc5b
   10c34:	add	x2, x29, #0x18
   10c38:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10c3c:	cbz	w0, 10c68 <PyInit__testcapi@@Base+0x7aac>
   10c40:	ldr	x0, [x29, #24]
   10c44:	ldr	x8, [x0, #8]
   10c48:	ldrb	w8, [x8, #171]
   10c4c:	tbnz	w8, #6, 10c78 <PyInit__testcapi@@Base+0x7abc>
   10c50:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   10c54:	ldr	x8, [x8, #3952]
   10c58:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10c5c:	add	x1, x1, #0xc6d
   10c60:	ldr	x0, [x8]
   10c64:	bl	8e60 <PyErr_Format@plt>
   10c68:	mov	x0, xzr
   10c6c:	ldr	x19, [sp, #16]
   10c70:	ldp	x29, x30, [sp], #32
   10c74:	ret
   10c78:	bl	86b0 <PyException_GetTraceback@plt>
   10c7c:	ldr	x1, [x29, #24]
   10c80:	mov	x19, x0
   10c84:	mov	x2, x19
   10c88:	ldr	x8, [x1, #8]
   10c8c:	mov	x0, x8
   10c90:	bl	8e30 <PyErr_Display@plt>
   10c94:	cbz	x19, 10cb0 <PyInit__testcapi@@Base+0x7af4>
   10c98:	ldr	x8, [x19]
   10c9c:	subs	x8, x8, #0x1
   10ca0:	str	x8, [x19]
   10ca4:	b.ne	10cb0 <PyInit__testcapi@@Base+0x7af4>  // b.any
   10ca8:	mov	x0, x19
   10cac:	bl	8560 <_Py_Dealloc@plt>
   10cb0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   10cb4:	ldr	x0, [x0, #4016]
   10cb8:	ldr	x8, [x0]
   10cbc:	add	x8, x8, #0x1
   10cc0:	str	x8, [x0]
   10cc4:	ldr	x19, [sp, #16]
   10cc8:	ldp	x29, x30, [sp], #32
   10ccc:	ret
   10cd0:	sub	sp, sp, #0x50
   10cd4:	stp	x29, x30, [sp, #48]
   10cd8:	str	x19, [sp, #64]
   10cdc:	add	x29, sp, #0x30
   10ce0:	mov	x0, x1
   10ce4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10ce8:	add	x1, x1, #0xc8f
   10cec:	add	x2, x29, #0x18
   10cf0:	sub	x3, x29, #0x8
   10cf4:	sub	x4, x29, #0x10
   10cf8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10cfc:	cbz	w0, 10dd4 <PyInit__testcapi@@Base+0x7c18>
   10d00:	add	x0, sp, #0x18
   10d04:	add	x1, sp, #0x10
   10d08:	add	x2, sp, #0x8
   10d0c:	bl	82f0 <PyErr_GetExcInfo@plt>
   10d10:	ldr	x0, [x29, #24]
   10d14:	ldr	x8, [x0]
   10d18:	add	x8, x8, #0x1
   10d1c:	str	x8, [x0]
   10d20:	ldur	x1, [x29, #-8]
   10d24:	ldr	x8, [x1]
   10d28:	add	x8, x8, #0x1
   10d2c:	str	x8, [x1]
   10d30:	ldur	x2, [x29, #-16]
   10d34:	ldr	x8, [x2]
   10d38:	add	x8, x8, #0x1
   10d3c:	str	x8, [x2]
   10d40:	bl	8fa0 <PyErr_SetExcInfo@plt>
   10d44:	ldp	x10, x8, [sp, #16]
   10d48:	adrp	x9, 27000 <PyInit__testcapi@@Base+0x1de44>
   10d4c:	ldr	x9, [x9, #4016]
   10d50:	ldr	x11, [sp, #8]
   10d54:	cmp	x8, #0x0
   10d58:	mov	w0, #0x3                   	// #3
   10d5c:	csel	x1, x9, x8, eq  // eq = none
   10d60:	cmp	x10, #0x0
   10d64:	csel	x2, x9, x10, eq  // eq = none
   10d68:	cmp	x11, #0x0
   10d6c:	csel	x3, x9, x11, eq  // eq = none
   10d70:	bl	9040 <PyTuple_Pack@plt>
   10d74:	ldr	x8, [sp, #24]
   10d78:	mov	x19, x0
   10d7c:	cbz	x8, 10d98 <PyInit__testcapi@@Base+0x7bdc>
   10d80:	ldr	x9, [x8]
   10d84:	subs	x9, x9, #0x1
   10d88:	str	x9, [x8]
   10d8c:	b.ne	10d98 <PyInit__testcapi@@Base+0x7bdc>  // b.any
   10d90:	mov	x0, x8
   10d94:	bl	8560 <_Py_Dealloc@plt>
   10d98:	ldr	x0, [sp, #16]
   10d9c:	cbz	x0, 10db4 <PyInit__testcapi@@Base+0x7bf8>
   10da0:	ldr	x8, [x0]
   10da4:	subs	x8, x8, #0x1
   10da8:	str	x8, [x0]
   10dac:	b.ne	10db4 <PyInit__testcapi@@Base+0x7bf8>  // b.any
   10db0:	bl	8560 <_Py_Dealloc@plt>
   10db4:	ldr	x0, [sp, #8]
   10db8:	cbz	x0, 10dd8 <PyInit__testcapi@@Base+0x7c1c>
   10dbc:	ldr	x8, [x0]
   10dc0:	subs	x8, x8, #0x1
   10dc4:	str	x8, [x0]
   10dc8:	b.ne	10dd8 <PyInit__testcapi@@Base+0x7c1c>  // b.any
   10dcc:	bl	8560 <_Py_Dealloc@plt>
   10dd0:	b	10dd8 <PyInit__testcapi@@Base+0x7c1c>
   10dd4:	mov	x19, xzr
   10dd8:	mov	x0, x19
   10ddc:	ldr	x19, [sp, #64]
   10de0:	ldp	x29, x30, [sp, #48]
   10de4:	add	sp, sp, #0x50
   10de8:	ret
   10dec:	stp	x29, x30, [sp, #-32]!
   10df0:	stp	x20, x19, [sp, #16]
   10df4:	mov	x29, sp
   10df8:	adrp	x5, 2b000 <PyInit__testcapi@@Base+0x21e44>
   10dfc:	add	x5, x5, #0xdf8
   10e00:	mov	x3, x5
   10e04:	str	xzr, [x5]
   10e08:	str	xzr, [x3, #8]!
   10e0c:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
   10e10:	ldr	x2, [x2, #3920]
   10e14:	mov	x0, x1
   10e18:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10e1c:	adrp	x4, 13000 <PyInit__testcapi@@Base+0x9e44>
   10e20:	add	x1, x1, #0xca5
   10e24:	add	x4, x4, #0x2d0
   10e28:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10e2c:	cbz	w0, 10e54 <PyInit__testcapi@@Base+0x7c98>
   10e30:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
   10e34:	ldr	x19, [x19, #4016]
   10e38:	ldr	x8, [x19]
   10e3c:	add	x8, x8, #0x1
   10e40:	str	x8, [x19]
   10e44:	mov	x0, x19
   10e48:	ldp	x20, x19, [sp, #16]
   10e4c:	ldp	x29, x30, [sp], #32
   10e50:	ret
   10e54:	adrp	x20, 2b000 <PyInit__testcapi@@Base+0x21e44>
   10e58:	ldr	x8, [x20, #3576]
   10e5c:	cbz	x8, 10e98 <PyInit__testcapi@@Base+0x7cdc>
   10e60:	ldr	x0, [x8]
   10e64:	bl	87f0 <PyLong_FromSsize_t@plt>
   10e68:	mov	x19, x0
   10e6c:	ldr	x0, [x20, #3576]
   10e70:	ldr	x8, [x0]
   10e74:	subs	x8, x8, #0x1
   10e78:	str	x8, [x0]
   10e7c:	b.ne	10e84 <PyInit__testcapi@@Base+0x7cc8>  // b.any
   10e80:	bl	8560 <_Py_Dealloc@plt>
   10e84:	bl	88c0 <PyErr_Clear@plt>
   10e88:	mov	x0, x19
   10e8c:	ldp	x20, x19, [sp, #16]
   10e90:	ldp	x29, x30, [sp], #32
   10e94:	ret
   10e98:	mov	x19, xzr
   10e9c:	mov	x0, x19
   10ea0:	ldp	x20, x19, [sp, #16]
   10ea4:	ldp	x29, x30, [sp], #32
   10ea8:	ret
   10eac:	sub	sp, sp, #0x30
   10eb0:	stp	x29, x30, [sp, #32]
   10eb4:	add	x29, sp, #0x20
   10eb8:	mov	x0, x1
   10ebc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10ec0:	add	x1, x1, #0xcaa
   10ec4:	sub	x2, x29, #0x8
   10ec8:	add	x3, sp, #0x10
   10ecc:	add	x4, sp, #0xc
   10ed0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10ed4:	cbz	w0, 10ef4 <PyInit__testcapi@@Base+0x7d38>
   10ed8:	ldur	x0, [x29, #-8]
   10edc:	ldr	x1, [sp, #16]
   10ee0:	ldr	w2, [sp, #12]
   10ee4:	bl	9060 <PyCode_NewEmpty@plt>
   10ee8:	ldp	x29, x30, [sp, #32]
   10eec:	add	sp, sp, #0x30
   10ef0:	ret
   10ef4:	mov	x0, xzr
   10ef8:	ldp	x29, x30, [sp, #32]
   10efc:	add	sp, sp, #0x30
   10f00:	ret
   10f04:	sub	sp, sp, #0x30
   10f08:	stp	x29, x30, [sp, #32]
   10f0c:	add	x29, sp, #0x20
   10f10:	mov	x8, x2
   10f14:	adrp	x2, 16000 <PyInit__testcapi@@Base+0xce44>
   10f18:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe44>
   10f1c:	mov	x0, x1
   10f20:	add	x2, x2, #0xcc1
   10f24:	add	x3, x3, #0xfa8
   10f28:	sub	x4, x29, #0x8
   10f2c:	add	x5, sp, #0x10
   10f30:	add	x6, sp, #0x8
   10f34:	mov	x7, sp
   10f38:	mov	x1, x8
   10f3c:	stp	xzr, xzr, [sp, #8]
   10f40:	str	xzr, [sp]
   10f44:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
   10f48:	cbz	w0, 10f68 <PyInit__testcapi@@Base+0x7dac>
   10f4c:	ldur	x0, [x29, #-8]
   10f50:	ldp	x2, x1, [sp, #8]
   10f54:	ldr	x3, [sp]
   10f58:	bl	85d0 <PyErr_NewExceptionWithDoc@plt>
   10f5c:	ldp	x29, x30, [sp, #32]
   10f60:	add	sp, sp, #0x30
   10f64:	ret
   10f68:	mov	x0, xzr
   10f6c:	ldp	x29, x30, [sp, #32]
   10f70:	add	sp, sp, #0x30
   10f74:	ret
   10f78:	sub	sp, sp, #0x60
   10f7c:	stp	x29, x30, [sp, #80]
   10f80:	add	x29, sp, #0x50
   10f84:	mov	x0, sp
   10f88:	mov	w3, #0x1                   	// #1
   10f8c:	mov	w4, #0x1                   	// #1
   10f90:	mov	w5, #0x11c                 	// #284
   10f94:	mov	x1, xzr
   10f98:	mov	x2, xzr
   10f9c:	bl	8870 <PyBuffer_FillInfo@plt>
   10fa0:	tbnz	w0, #31, 10fb8 <PyInit__testcapi@@Base+0x7dfc>
   10fa4:	mov	x0, sp
   10fa8:	bl	9050 <PyMemoryView_FromBuffer@plt>
   10fac:	ldp	x29, x30, [sp, #80]
   10fb0:	add	sp, sp, #0x60
   10fb4:	ret
   10fb8:	mov	x0, xzr
   10fbc:	ldp	x29, x30, [sp, #80]
   10fc0:	add	sp, sp, #0x60
   10fc4:	ret
   10fc8:	stp	x29, x30, [sp, #-32]!
   10fcc:	str	x19, [sp, #16]
   10fd0:	mov	x29, sp
   10fd4:	bl	8d50 <PyEval_SaveThread@plt>
   10fd8:	mov	x19, x0
   10fdc:	bl	8940 <PyThreadState_Get@plt>
   10fe0:	mov	x0, x19
   10fe4:	bl	83b0 <PyEval_RestoreThread@plt>
   10fe8:	ldr	x19, [sp, #16]
   10fec:	mov	x0, xzr
   10ff0:	ldp	x29, x30, [sp], #32
   10ff4:	ret
   10ff8:	stp	x29, x30, [sp, #-48]!
   10ffc:	str	x21, [sp, #16]
   11000:	stp	x20, x19, [sp, #32]
   11004:	mov	x29, sp
   11008:	mov	x0, x1
   1100c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11010:	add	x1, x1, #0xcdf
   11014:	add	x2, x29, #0x18
   11018:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1101c:	cbz	w0, 11094 <PyInit__testcapi@@Base+0x7ed8>
   11020:	bl	8940 <PyThreadState_Get@plt>
   11024:	mov	x19, x0
   11028:	mov	x0, xzr
   1102c:	bl	8fd0 <PyThreadState_Swap@plt>
   11030:	bl	8790 <Py_NewInterpreter@plt>
   11034:	cbz	x0, 11074 <PyInit__testcapi@@Base+0x7eb8>
   11038:	mov	x20, x0
   1103c:	ldr	x0, [x29, #24]
   11040:	mov	x1, xzr
   11044:	bl	8ed0 <PyRun_SimpleStringFlags@plt>
   11048:	mov	w21, w0
   1104c:	mov	x0, x20
   11050:	bl	8540 <Py_EndInterpreter@plt>
   11054:	mov	x0, x19
   11058:	bl	8fd0 <PyThreadState_Swap@plt>
   1105c:	sxtw	x0, w21
   11060:	bl	8840 <PyLong_FromLong@plt>
   11064:	ldp	x20, x19, [sp, #32]
   11068:	ldr	x21, [sp, #16]
   1106c:	ldp	x29, x30, [sp], #48
   11070:	ret
   11074:	mov	x0, x19
   11078:	bl	8fd0 <PyThreadState_Swap@plt>
   1107c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11080:	ldr	x8, [x8, #3928]
   11084:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11088:	add	x1, x1, #0xcf2
   1108c:	ldr	x0, [x8]
   11090:	bl	8670 <PyErr_SetString@plt>
   11094:	mov	x0, xzr
   11098:	ldp	x20, x19, [sp, #32]
   1109c:	ldr	x21, [sp, #16]
   110a0:	ldp	x29, x30, [sp], #48
   110a4:	ret
   110a8:	sub	sp, sp, #0x30
   110ac:	stp	x29, x30, [sp, #32]
   110b0:	add	x29, sp, #0x20
   110b4:	mov	x0, x1
   110b8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   110bc:	add	x1, x1, #0xd12
   110c0:	sub	x2, x29, #0x8
   110c4:	add	x3, sp, #0xc
   110c8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   110cc:	cbz	w0, 11120 <PyInit__testcapi@@Base+0x7f64>
   110d0:	ldr	w2, [sp, #12]
   110d4:	cmp	w2, #0x4
   110d8:	b.cc	110f8 <PyInit__testcapi@@Base+0x7f3c>  // b.lo, b.ul, b.last
   110dc:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   110e0:	ldr	x8, [x8, #3944]
   110e4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   110e8:	add	x1, x1, #0xd2d
   110ec:	ldr	x0, [x8]
   110f0:	bl	8670 <PyErr_SetString@plt>
   110f4:	b	11120 <PyInit__testcapi@@Base+0x7f64>
   110f8:	ldur	x0, [x29, #-8]
   110fc:	add	x1, sp, #0x10
   11100:	bl	8bc0 <_PyTime_ObjectToTime_t@plt>
   11104:	cmn	w0, #0x1
   11108:	b.eq	11120 <PyInit__testcapi@@Base+0x7f64>  // b.none
   1110c:	ldr	x0, [sp, #16]
   11110:	bl	9000 <_PyLong_FromTime_t@plt>
   11114:	ldp	x29, x30, [sp, #32]
   11118:	add	sp, sp, #0x30
   1111c:	ret
   11120:	mov	x0, xzr
   11124:	ldp	x29, x30, [sp, #32]
   11128:	add	sp, sp, #0x30
   1112c:	ret
   11130:	sub	sp, sp, #0x30
   11134:	stp	x29, x30, [sp, #32]
   11138:	add	x29, sp, #0x20
   1113c:	mov	x0, x1
   11140:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11144:	add	x1, x1, #0xd3e
   11148:	sub	x2, x29, #0x8
   1114c:	add	x3, sp, #0x4
   11150:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11154:	cbz	w0, 111c0 <PyInit__testcapi@@Base+0x8004>
   11158:	ldr	w3, [sp, #4]
   1115c:	cmp	w3, #0x4
   11160:	b.cc	11180 <PyInit__testcapi@@Base+0x7fc4>  // b.lo, b.ul, b.last
   11164:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11168:	ldr	x8, [x8, #3944]
   1116c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11170:	add	x1, x1, #0xd2d
   11174:	ldr	x0, [x8]
   11178:	bl	8670 <PyErr_SetString@plt>
   1117c:	b	111c0 <PyInit__testcapi@@Base+0x8004>
   11180:	ldur	x0, [x29, #-8]
   11184:	add	x1, sp, #0x10
   11188:	add	x2, sp, #0x8
   1118c:	bl	8420 <_PyTime_ObjectToTimeval@plt>
   11190:	cmn	w0, #0x1
   11194:	b.eq	111c0 <PyInit__testcapi@@Base+0x8004>  // b.none
   11198:	ldr	x0, [sp, #16]
   1119c:	bl	9000 <_PyLong_FromTime_t@plt>
   111a0:	ldr	x2, [sp, #8]
   111a4:	mov	x1, x0
   111a8:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   111ac:	add	x0, x0, #0xd5a
   111b0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   111b4:	ldp	x29, x30, [sp, #32]
   111b8:	add	sp, sp, #0x30
   111bc:	ret
   111c0:	mov	x0, xzr
   111c4:	ldp	x29, x30, [sp, #32]
   111c8:	add	sp, sp, #0x30
   111cc:	ret
   111d0:	sub	sp, sp, #0x30
   111d4:	stp	x29, x30, [sp, #32]
   111d8:	add	x29, sp, #0x20
   111dc:	mov	x0, x1
   111e0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   111e4:	add	x1, x1, #0xd5d
   111e8:	sub	x2, x29, #0x8
   111ec:	add	x3, sp, #0x4
   111f0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   111f4:	cbz	w0, 11260 <PyInit__testcapi@@Base+0x80a4>
   111f8:	ldr	w3, [sp, #4]
   111fc:	cmp	w3, #0x4
   11200:	b.cc	11220 <PyInit__testcapi@@Base+0x8064>  // b.lo, b.ul, b.last
   11204:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11208:	ldr	x8, [x8, #3944]
   1120c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11210:	add	x1, x1, #0xd2d
   11214:	ldr	x0, [x8]
   11218:	bl	8670 <PyErr_SetString@plt>
   1121c:	b	11260 <PyInit__testcapi@@Base+0x80a4>
   11220:	ldur	x0, [x29, #-8]
   11224:	add	x1, sp, #0x10
   11228:	add	x2, sp, #0x8
   1122c:	bl	8b10 <_PyTime_ObjectToTimespec@plt>
   11230:	cmn	w0, #0x1
   11234:	b.eq	11260 <PyInit__testcapi@@Base+0x80a4>  // b.none
   11238:	ldr	x0, [sp, #16]
   1123c:	bl	9000 <_PyLong_FromTime_t@plt>
   11240:	ldr	x2, [sp, #8]
   11244:	mov	x1, x0
   11248:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   1124c:	add	x0, x0, #0xd5a
   11250:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11254:	ldp	x29, x30, [sp, #32]
   11258:	add	sp, sp, #0x30
   1125c:	ret
   11260:	mov	x0, xzr
   11264:	ldp	x29, x30, [sp, #32]
   11268:	add	sp, sp, #0x30
   1126c:	ret
   11270:	sub	sp, sp, #0x20
   11274:	stp	x29, x30, [sp, #16]
   11278:	add	x29, sp, #0x10
   1127c:	mov	x0, x1
   11280:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11284:	add	x1, x1, #0xd7a
   11288:	add	x2, sp, #0x8
   1128c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11290:	cbz	w0, 112c4 <PyInit__testcapi@@Base+0x8108>
   11294:	ldr	x2, [sp, #8]
   11298:	ldr	x8, [x2, #8]
   1129c:	ldr	w8, [x8, #168]
   112a0:	tbz	w8, #31, 112ac <PyInit__testcapi@@Base+0x80f0>
   112a4:	ldrb	w8, [x2, #169]
   112a8:	tbnz	w8, #1, 112d8 <PyInit__testcapi@@Base+0x811c>
   112ac:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   112b0:	ldr	x8, [x8, #3952]
   112b4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   112b8:	add	x1, x1, #0xd88
   112bc:	ldr	x0, [x8]
   112c0:	bl	8e60 <PyErr_Format@plt>
   112c4:	mov	x2, xzr
   112c8:	ldp	x29, x30, [sp, #16]
   112cc:	mov	x0, x2
   112d0:	add	sp, sp, #0x20
   112d4:	ret
   112d8:	ldr	x8, [x2]
   112dc:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e44>
   112e0:	add	x9, x9, #0x2f4
   112e4:	str	x9, [x2, #376]
   112e8:	add	x8, x8, #0x1
   112ec:	str	x8, [x2]
   112f0:	ldp	x29, x30, [sp, #16]
   112f4:	mov	x0, x2
   112f8:	add	sp, sp, #0x20
   112fc:	ret
   11300:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe44>
   11304:	add	x8, x8, #0xfe8
   11308:	mov	x1, x0
   1130c:	mov	x0, x8
   11310:	mov	x2, xzr
   11314:	b	8430 <PyCFunction_NewEx@plt>
   11318:	stp	x29, x30, [sp, #-16]!
   1131c:	mov	x29, sp
   11320:	mov	x0, xzr
   11324:	bl	84d0 <PyMem_RawMalloc@plt>
   11328:	cbz	x0, 113a8 <PyInit__testcapi@@Base+0x81ec>
   1132c:	bl	8a10 <PyMem_RawFree@plt>
   11330:	mov	x0, xzr
   11334:	mov	x1, xzr
   11338:	bl	8d30 <PyMem_RawCalloc@plt>
   1133c:	cbz	x0, 113bc <PyInit__testcapi@@Base+0x8200>
   11340:	bl	8a10 <PyMem_RawFree@plt>
   11344:	mov	x0, xzr
   11348:	bl	8fc0 <PyMem_Malloc@plt>
   1134c:	cbz	x0, 113d0 <PyInit__testcapi@@Base+0x8214>
   11350:	bl	83d0 <PyMem_Free@plt>
   11354:	mov	x0, xzr
   11358:	mov	x1, xzr
   1135c:	bl	8f20 <PyMem_Calloc@plt>
   11360:	cbz	x0, 113e4 <PyInit__testcapi@@Base+0x8228>
   11364:	bl	83d0 <PyMem_Free@plt>
   11368:	mov	x0, xzr
   1136c:	bl	86c0 <PyObject_Malloc@plt>
   11370:	cbz	x0, 113f8 <PyInit__testcapi@@Base+0x823c>
   11374:	bl	87c0 <PyObject_Free@plt>
   11378:	mov	x0, xzr
   1137c:	mov	x1, xzr
   11380:	bl	90a0 <PyObject_Calloc@plt>
   11384:	cbz	x0, 1140c <PyInit__testcapi@@Base+0x8250>
   11388:	bl	87c0 <PyObject_Free@plt>
   1138c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   11390:	ldr	x0, [x0, #4016]
   11394:	ldr	x8, [x0]
   11398:	add	x8, x8, #0x1
   1139c:	str	x8, [x0]
   113a0:	ldp	x29, x30, [sp], #16
   113a4:	ret
   113a8:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   113ac:	ldr	x8, [x8, #3928]
   113b0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   113b4:	add	x1, x1, #0xdae
   113b8:	b	1141c <PyInit__testcapi@@Base+0x8260>
   113bc:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   113c0:	ldr	x8, [x8, #3928]
   113c4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   113c8:	add	x1, x1, #0xdce
   113cc:	b	1141c <PyInit__testcapi@@Base+0x8260>
   113d0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   113d4:	ldr	x8, [x8, #3928]
   113d8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   113dc:	add	x1, x1, #0xdf1
   113e0:	b	1141c <PyInit__testcapi@@Base+0x8260>
   113e4:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   113e8:	ldr	x8, [x8, #3928]
   113ec:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   113f0:	add	x1, x1, #0xe0e
   113f4:	b	1141c <PyInit__testcapi@@Base+0x8260>
   113f8:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   113fc:	ldr	x8, [x8, #3928]
   11400:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11404:	add	x1, x1, #0xe2e
   11408:	b	1141c <PyInit__testcapi@@Base+0x8260>
   1140c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11410:	ldr	x8, [x8, #3928]
   11414:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11418:	add	x1, x1, #0xe4e
   1141c:	ldr	x0, [x8]
   11420:	bl	8670 <PyErr_SetString@plt>
   11424:	mov	x0, xzr
   11428:	ldp	x29, x30, [sp], #16
   1142c:	ret
   11430:	mov	w0, wzr
   11434:	b	13434 <PyInit__testcapi@@Base+0xa278>
   11438:	mov	w0, #0x1                   	// #1
   1143c:	b	13434 <PyInit__testcapi@@Base+0xa278>
   11440:	mov	w0, #0x2                   	// #2
   11444:	b	13434 <PyInit__testcapi@@Base+0xa278>
   11448:	sub	sp, sp, #0x60
   1144c:	stp	x29, x30, [sp, #48]
   11450:	str	x21, [sp, #64]
   11454:	stp	x20, x19, [sp, #80]
   11458:	add	x29, sp, #0x30
   1145c:	adrp	x2, 2b000 <PyInit__testcapi@@Base+0x21e44>
   11460:	add	x2, x2, #0xe08
   11464:	mov	x0, x1
   11468:	mov	x3, x2
   1146c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11470:	str	xzr, [x2, #8]
   11474:	str	wzr, [x3, #4]!
   11478:	add	x1, x1, #0xf60
   1147c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11480:	cbz	w0, 11540 <PyInit__testcapi@@Base+0x8384>
   11484:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   11488:	ldr	w8, [x8, #3608]
   1148c:	cbnz	w8, 11528 <PyInit__testcapi@@Base+0x836c>
   11490:	adrp	x21, 2b000 <PyInit__testcapi@@Base+0x21e44>
   11494:	add	x21, x21, #0xe18
   11498:	mov	w8, #0x1                   	// #1
   1149c:	mov	x19, x21
   114a0:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e44>
   114a4:	adrp	x10, 13000 <PyInit__testcapi@@Base+0x9e44>
   114a8:	adrp	x11, 13000 <PyInit__testcapi@@Base+0x9e44>
   114ac:	adrp	x12, 13000 <PyInit__testcapi@@Base+0x9e44>
   114b0:	str	w8, [x19], #8
   114b4:	add	x9, x9, #0x7e0
   114b8:	add	x10, x10, #0x828
   114bc:	add	x11, x11, #0x874
   114c0:	add	x12, x12, #0x8c0
   114c4:	mov	w0, wzr
   114c8:	mov	x1, x19
   114cc:	stp	x9, x10, [sp, #16]
   114d0:	stp	x11, x12, [sp, #32]
   114d4:	bl	8b70 <PyMem_GetAllocator@plt>
   114d8:	add	x20, x21, #0x30
   114dc:	mov	w0, #0x1                   	// #1
   114e0:	mov	x1, x20
   114e4:	bl	8b70 <PyMem_GetAllocator@plt>
   114e8:	add	x21, x21, #0x58
   114ec:	mov	w0, #0x2                   	// #2
   114f0:	mov	x1, x21
   114f4:	bl	8b70 <PyMem_GetAllocator@plt>
   114f8:	add	x1, sp, #0x8
   114fc:	mov	w0, wzr
   11500:	str	x19, [sp, #8]
   11504:	bl	8700 <PyMem_SetAllocator@plt>
   11508:	add	x1, sp, #0x8
   1150c:	mov	w0, #0x1                   	// #1
   11510:	str	x20, [sp, #8]
   11514:	bl	8700 <PyMem_SetAllocator@plt>
   11518:	add	x1, sp, #0x8
   1151c:	mov	w0, #0x2                   	// #2
   11520:	str	x21, [sp, #8]
   11524:	bl	8700 <PyMem_SetAllocator@plt>
   11528:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   1152c:	ldr	x0, [x0, #4016]
   11530:	ldr	x8, [x0]
   11534:	add	x8, x8, #0x1
   11538:	str	x8, [x0]
   1153c:	b	11544 <PyInit__testcapi@@Base+0x8388>
   11540:	mov	x0, xzr
   11544:	ldp	x20, x19, [sp, #80]
   11548:	ldr	x21, [sp, #64]
   1154c:	ldp	x29, x30, [sp, #48]
   11550:	add	sp, sp, #0x60
   11554:	ret
   11558:	stp	x29, x30, [sp, #-32]!
   1155c:	str	x19, [sp, #16]
   11560:	mov	x29, sp
   11564:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   11568:	ldr	w8, [x8, #3608]
   1156c:	cbz	w8, 115a0 <PyInit__testcapi@@Base+0x83e4>
   11570:	adrp	x19, 2b000 <PyInit__testcapi@@Base+0x21e44>
   11574:	add	x19, x19, #0xe18
   11578:	mov	x1, x19
   1157c:	str	wzr, [x1], #8
   11580:	mov	w0, wzr
   11584:	bl	8700 <PyMem_SetAllocator@plt>
   11588:	add	x1, x19, #0x30
   1158c:	mov	w0, #0x1                   	// #1
   11590:	bl	8700 <PyMem_SetAllocator@plt>
   11594:	add	x1, x19, #0x58
   11598:	mov	w0, #0x2                   	// #2
   1159c:	bl	8700 <PyMem_SetAllocator@plt>
   115a0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   115a4:	ldr	x0, [x0, #4016]
   115a8:	ldr	x19, [sp, #16]
   115ac:	ldr	x8, [x0]
   115b0:	add	x8, x8, #0x1
   115b4:	str	x8, [x0]
   115b8:	ldp	x29, x30, [sp], #32
   115bc:	ret
   115c0:	sub	sp, sp, #0x50
   115c4:	stp	x29, x30, [sp, #32]
   115c8:	str	x21, [sp, #48]
   115cc:	stp	x20, x19, [sp, #64]
   115d0:	add	x29, sp, #0x20
   115d4:	mov	x19, x1
   115d8:	bl	8f70 <PyEval_InitThreads@plt>
   115dc:	bl	8ad0 <PyThread_allocate_lock@plt>
   115e0:	mov	x20, x0
   115e4:	str	x0, [sp, #8]
   115e8:	bl	8ad0 <PyThread_allocate_lock@plt>
   115ec:	stp	x0, xzr, [sp, #16]
   115f0:	cbz	x0, 11698 <PyInit__testcapi@@Base+0x84dc>
   115f4:	cbz	x20, 11698 <PyInit__testcapi@@Base+0x84dc>
   115f8:	ldr	x8, [x19]
   115fc:	mov	x21, x0
   11600:	mov	w1, #0x1                   	// #1
   11604:	mov	x0, x20
   11608:	add	x8, x8, #0x1
   1160c:	str	x8, [x19]
   11610:	str	x19, [sp, #24]
   11614:	bl	85e0 <PyThread_acquire_lock@plt>
   11618:	mov	w1, #0x1                   	// #1
   1161c:	mov	x0, x21
   11620:	bl	85e0 <PyThread_acquire_lock@plt>
   11624:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
   11628:	add	x0, x0, #0x8cc
   1162c:	add	x1, sp, #0x8
   11630:	bl	8460 <PyThread_start_new_thread@plt>
   11634:	cmn	x0, #0x1
   11638:	b.eq	116c0 <PyInit__testcapi@@Base+0x8504>  // b.none
   1163c:	ldr	x0, [sp, #8]
   11640:	mov	w1, #0x1                   	// #1
   11644:	bl	85e0 <PyThread_acquire_lock@plt>
   11648:	ldr	x0, [sp, #8]
   1164c:	bl	8b90 <PyThread_release_lock@plt>
   11650:	bl	8d50 <PyEval_SaveThread@plt>
   11654:	ldr	x8, [sp, #16]
   11658:	mov	x19, x0
   1165c:	mov	w1, #0x1                   	// #1
   11660:	mov	x0, x8
   11664:	bl	85e0 <PyThread_acquire_lock@plt>
   11668:	ldr	x0, [sp, #16]
   1166c:	bl	8b90 <PyThread_release_lock@plt>
   11670:	mov	x0, x19
   11674:	bl	83b0 <PyEval_RestoreThread@plt>
   11678:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
   1167c:	ldr	x19, [x19, #4016]
   11680:	ldr	x8, [x19]
   11684:	add	x8, x8, #0x1
   11688:	str	x8, [x19]
   1168c:	ldr	x0, [sp, #24]
   11690:	cbnz	x0, 116f4 <PyInit__testcapi@@Base+0x8538>
   11694:	b	1170c <PyInit__testcapi@@Base+0x8550>
   11698:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   1169c:	ldr	x8, [x8, #3928]
   116a0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   116a4:	add	x1, x1, #0xf64
   116a8:	ldr	x0, [x8]
   116ac:	bl	8670 <PyErr_SetString@plt>
   116b0:	mov	x19, xzr
   116b4:	ldr	x0, [sp, #24]
   116b8:	cbnz	x0, 116f4 <PyInit__testcapi@@Base+0x8538>
   116bc:	b	1170c <PyInit__testcapi@@Base+0x8550>
   116c0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   116c4:	ldr	x8, [x8, #3928]
   116c8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   116cc:	add	x1, x1, #0xf7c
   116d0:	ldr	x0, [x8]
   116d4:	bl	8670 <PyErr_SetString@plt>
   116d8:	ldr	x0, [sp, #8]
   116dc:	bl	8b90 <PyThread_release_lock@plt>
   116e0:	ldr	x0, [sp, #16]
   116e4:	bl	8b90 <PyThread_release_lock@plt>
   116e8:	mov	x19, xzr
   116ec:	ldr	x0, [sp, #24]
   116f0:	cbz	x0, 1170c <PyInit__testcapi@@Base+0x8550>
   116f4:	str	xzr, [sp, #24]
   116f8:	ldr	x8, [x0]
   116fc:	subs	x8, x8, #0x1
   11700:	str	x8, [x0]
   11704:	b.ne	1170c <PyInit__testcapi@@Base+0x8550>  // b.any
   11708:	bl	8560 <_Py_Dealloc@plt>
   1170c:	ldr	x0, [sp, #8]
   11710:	cbz	x0, 11718 <PyInit__testcapi@@Base+0x855c>
   11714:	bl	9030 <PyThread_free_lock@plt>
   11718:	ldr	x0, [sp, #16]
   1171c:	cbz	x0, 11724 <PyInit__testcapi@@Base+0x8568>
   11720:	bl	9030 <PyThread_free_lock@plt>
   11724:	mov	x0, x19
   11728:	ldp	x20, x19, [sp, #64]
   1172c:	ldr	x21, [sp, #48]
   11730:	ldp	x29, x30, [sp, #32]
   11734:	add	sp, sp, #0x50
   11738:	ret
   1173c:	sub	sp, sp, #0x30
   11740:	stp	x29, x30, [sp, #16]
   11744:	str	x19, [sp, #32]
   11748:	add	x29, sp, #0x10
   1174c:	mov	x0, x1
   11750:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11754:	add	x1, x1, #0xf97
   11758:	add	x2, x29, #0x18
   1175c:	add	x3, sp, #0x8
   11760:	add	x4, sp, #0x4
   11764:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11768:	cbz	w0, 117d8 <PyInit__testcapi@@Base+0x861c>
   1176c:	ldr	x0, [sp, #8]
   11770:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11774:	add	x1, x1, #0xfb8
   11778:	bl	8cd0 <fopen64@plt>
   1177c:	cbz	x0, 117c8 <PyInit__testcapi@@Base+0x860c>
   11780:	mov	x19, x0
   11784:	ldr	x0, [x29, #24]
   11788:	ldr	w2, [sp, #4]
   1178c:	mov	x1, x19
   11790:	bl	85c0 <PyMarshal_WriteLongToFile@plt>
   11794:	mov	x0, x19
   11798:	bl	8640 <fclose@plt>
   1179c:	bl	8980 <PyErr_Occurred@plt>
   117a0:	cbnz	x0, 117d8 <PyInit__testcapi@@Base+0x861c>
   117a4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   117a8:	ldr	x0, [x0, #4016]
   117ac:	ldr	x8, [x0]
   117b0:	add	x8, x8, #0x1
   117b4:	str	x8, [x0]
   117b8:	ldr	x19, [sp, #32]
   117bc:	ldp	x29, x30, [sp, #16]
   117c0:	add	sp, sp, #0x30
   117c4:	ret
   117c8:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   117cc:	ldr	x8, [x8, #3976]
   117d0:	ldr	x0, [x8]
   117d4:	bl	8410 <PyErr_SetFromErrno@plt>
   117d8:	mov	x0, xzr
   117dc:	ldr	x19, [sp, #32]
   117e0:	ldp	x29, x30, [sp, #16]
   117e4:	add	sp, sp, #0x30
   117e8:	ret
   117ec:	sub	sp, sp, #0x30
   117f0:	stp	x29, x30, [sp, #16]
   117f4:	str	x19, [sp, #32]
   117f8:	add	x29, sp, #0x10
   117fc:	mov	x0, x1
   11800:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11804:	add	x1, x1, #0xfbb
   11808:	add	x2, x29, #0x18
   1180c:	add	x3, sp, #0x8
   11810:	add	x4, sp, #0x4
   11814:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11818:	cbz	w0, 11888 <PyInit__testcapi@@Base+0x86cc>
   1181c:	ldr	x0, [sp, #8]
   11820:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11824:	add	x1, x1, #0xfb8
   11828:	bl	8cd0 <fopen64@plt>
   1182c:	cbz	x0, 11878 <PyInit__testcapi@@Base+0x86bc>
   11830:	mov	x19, x0
   11834:	ldr	x0, [x29, #24]
   11838:	ldr	w2, [sp, #4]
   1183c:	mov	x1, x19
   11840:	bl	8ac0 <PyMarshal_WriteObjectToFile@plt>
   11844:	mov	x0, x19
   11848:	bl	8640 <fclose@plt>
   1184c:	bl	8980 <PyErr_Occurred@plt>
   11850:	cbnz	x0, 11888 <PyInit__testcapi@@Base+0x86cc>
   11854:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   11858:	ldr	x0, [x0, #4016]
   1185c:	ldr	x8, [x0]
   11860:	add	x8, x8, #0x1
   11864:	str	x8, [x0]
   11868:	ldr	x19, [sp, #32]
   1186c:	ldp	x29, x30, [sp, #16]
   11870:	add	sp, sp, #0x30
   11874:	ret
   11878:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   1187c:	ldr	x8, [x8, #3976]
   11880:	ldr	x0, [x8]
   11884:	bl	8410 <PyErr_SetFromErrno@plt>
   11888:	mov	x0, xzr
   1188c:	ldr	x19, [sp, #32]
   11890:	ldp	x29, x30, [sp, #16]
   11894:	add	sp, sp, #0x30
   11898:	ret
   1189c:	stp	x29, x30, [sp, #-48]!
   118a0:	str	x21, [sp, #16]
   118a4:	stp	x20, x19, [sp, #32]
   118a8:	mov	x29, sp
   118ac:	mov	x0, x1
   118b0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   118b4:	add	x1, x1, #0xfde
   118b8:	add	x2, x29, #0x18
   118bc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   118c0:	cbz	w0, 11934 <PyInit__testcapi@@Base+0x8778>
   118c4:	ldr	x0, [x29, #24]
   118c8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   118cc:	add	x1, x1, #0xfff
   118d0:	bl	8cd0 <fopen64@plt>
   118d4:	cbz	x0, 11924 <PyInit__testcapi@@Base+0x8768>
   118d8:	mov	x21, x0
   118dc:	bl	8f60 <PyMarshal_ReadShortFromFile@plt>
   118e0:	mov	w19, w0
   118e4:	mov	x0, x21
   118e8:	bl	84b0 <ftell@plt>
   118ec:	mov	x20, x0
   118f0:	mov	x0, x21
   118f4:	bl	8640 <fclose@plt>
   118f8:	bl	8980 <PyErr_Occurred@plt>
   118fc:	cbnz	x0, 11934 <PyInit__testcapi@@Base+0x8778>
   11900:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   11904:	add	x0, x0, #0xbae
   11908:	mov	w1, w19
   1190c:	mov	x2, x20
   11910:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11914:	ldp	x20, x19, [sp, #32]
   11918:	ldr	x21, [sp, #16]
   1191c:	ldp	x29, x30, [sp], #48
   11920:	ret
   11924:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11928:	ldr	x8, [x8, #3976]
   1192c:	ldr	x0, [x8]
   11930:	bl	8410 <PyErr_SetFromErrno@plt>
   11934:	mov	x0, xzr
   11938:	ldp	x20, x19, [sp, #32]
   1193c:	ldr	x21, [sp, #16]
   11940:	ldp	x29, x30, [sp], #48
   11944:	ret
   11948:	stp	x29, x30, [sp, #-48]!
   1194c:	str	x21, [sp, #16]
   11950:	stp	x20, x19, [sp, #32]
   11954:	mov	x29, sp
   11958:	mov	x0, x1
   1195c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11960:	add	x1, x1, #0x2
   11964:	add	x2, x29, #0x18
   11968:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1196c:	cbz	w0, 119e0 <PyInit__testcapi@@Base+0x8824>
   11970:	ldr	x0, [x29, #24]
   11974:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11978:	add	x1, x1, #0xfff
   1197c:	bl	8cd0 <fopen64@plt>
   11980:	cbz	x0, 119d0 <PyInit__testcapi@@Base+0x8814>
   11984:	mov	x21, x0
   11988:	bl	82b0 <PyMarshal_ReadLongFromFile@plt>
   1198c:	mov	x19, x0
   11990:	mov	x0, x21
   11994:	bl	84b0 <ftell@plt>
   11998:	mov	x20, x0
   1199c:	mov	x0, x21
   119a0:	bl	8640 <fclose@plt>
   119a4:	bl	8980 <PyErr_Occurred@plt>
   119a8:	cbnz	x0, 119e0 <PyInit__testcapi@@Base+0x8824>
   119ac:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   119b0:	add	x0, x0, #0x57f
   119b4:	mov	x1, x19
   119b8:	mov	x2, x20
   119bc:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   119c0:	ldp	x20, x19, [sp, #32]
   119c4:	ldr	x21, [sp, #16]
   119c8:	ldp	x29, x30, [sp], #48
   119cc:	ret
   119d0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   119d4:	ldr	x8, [x8, #3976]
   119d8:	ldr	x0, [x8]
   119dc:	bl	8410 <PyErr_SetFromErrno@plt>
   119e0:	mov	x0, xzr
   119e4:	ldp	x20, x19, [sp, #32]
   119e8:	ldr	x21, [sp, #16]
   119ec:	ldp	x29, x30, [sp], #48
   119f0:	ret
   119f4:	stp	x29, x30, [sp, #-48]!
   119f8:	str	x21, [sp, #16]
   119fc:	stp	x20, x19, [sp, #32]
   11a00:	mov	x29, sp
   11a04:	mov	x0, x1
   11a08:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11a0c:	add	x1, x1, #0x22
   11a10:	add	x2, x29, #0x18
   11a14:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11a18:	cbz	w0, 11a84 <PyInit__testcapi@@Base+0x88c8>
   11a1c:	ldr	x0, [x29, #24]
   11a20:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11a24:	add	x1, x1, #0xfff
   11a28:	bl	8cd0 <fopen64@plt>
   11a2c:	cbz	x0, 11a74 <PyInit__testcapi@@Base+0x88b8>
   11a30:	mov	x19, x0
   11a34:	bl	8280 <PyMarshal_ReadLastObjectFromFile@plt>
   11a38:	mov	x20, x0
   11a3c:	mov	x0, x19
   11a40:	bl	84b0 <ftell@plt>
   11a44:	mov	x21, x0
   11a48:	mov	x0, x19
   11a4c:	bl	8640 <fclose@plt>
   11a50:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   11a54:	add	x0, x0, #0xd5a
   11a58:	mov	x1, x20
   11a5c:	mov	x2, x21
   11a60:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11a64:	ldp	x20, x19, [sp, #32]
   11a68:	ldr	x21, [sp, #16]
   11a6c:	ldp	x29, x30, [sp], #48
   11a70:	ret
   11a74:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11a78:	ldr	x8, [x8, #3976]
   11a7c:	ldr	x0, [x8]
   11a80:	bl	8410 <PyErr_SetFromErrno@plt>
   11a84:	mov	x0, xzr
   11a88:	ldp	x20, x19, [sp, #32]
   11a8c:	ldr	x21, [sp, #16]
   11a90:	ldp	x29, x30, [sp], #48
   11a94:	ret
   11a98:	stp	x29, x30, [sp, #-48]!
   11a9c:	str	x21, [sp, #16]
   11aa0:	stp	x20, x19, [sp, #32]
   11aa4:	mov	x29, sp
   11aa8:	mov	x0, x1
   11aac:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11ab0:	add	x1, x1, #0x49
   11ab4:	add	x2, x29, #0x18
   11ab8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11abc:	cbz	w0, 11b28 <PyInit__testcapi@@Base+0x896c>
   11ac0:	ldr	x0, [x29, #24]
   11ac4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11ac8:	add	x1, x1, #0xfff
   11acc:	bl	8cd0 <fopen64@plt>
   11ad0:	cbz	x0, 11b18 <PyInit__testcapi@@Base+0x895c>
   11ad4:	mov	x19, x0
   11ad8:	bl	8d40 <PyMarshal_ReadObjectFromFile@plt>
   11adc:	mov	x20, x0
   11ae0:	mov	x0, x19
   11ae4:	bl	84b0 <ftell@plt>
   11ae8:	mov	x21, x0
   11aec:	mov	x0, x19
   11af0:	bl	8640 <fclose@plt>
   11af4:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   11af8:	add	x0, x0, #0xd5a
   11afc:	mov	x1, x20
   11b00:	mov	x2, x21
   11b04:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11b08:	ldp	x20, x19, [sp, #32]
   11b0c:	ldr	x21, [sp, #16]
   11b10:	ldp	x29, x30, [sp], #48
   11b14:	ret
   11b18:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11b1c:	ldr	x8, [x8, #3976]
   11b20:	ldr	x0, [x8]
   11b24:	bl	8410 <PyErr_SetFromErrno@plt>
   11b28:	mov	x0, xzr
   11b2c:	ldp	x20, x19, [sp, #32]
   11b30:	ldr	x21, [sp, #16]
   11b34:	ldp	x29, x30, [sp], #48
   11b38:	ret
   11b3c:	stp	x29, x30, [sp, #-16]!
   11b40:	mov	x29, sp
   11b44:	bl	88c0 <PyErr_Clear@plt>
   11b48:	mov	x0, xzr
   11b4c:	ldp	x29, x30, [sp], #16
   11b50:	ret
   11b54:	stp	x29, x30, [sp, #-16]!
   11b58:	mov	x29, sp
   11b5c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11b60:	ldr	x8, [x8, #3944]
   11b64:	ldr	x0, [x8]
   11b68:	bl	8750 <PyErr_SetNone@plt>
   11b6c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   11b70:	ldr	x0, [x0, #4016]
   11b74:	ldr	x8, [x0]
   11b78:	add	x8, x8, #0x1
   11b7c:	str	x8, [x0]
   11b80:	ldp	x29, x30, [sp], #16
   11b84:	ret
   11b88:	sub	sp, sp, #0x20
   11b8c:	stp	x29, x30, [sp, #16]
   11b90:	add	x29, sp, #0x10
   11b94:	mov	x0, x1
   11b98:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11b9c:	add	x1, x1, #0x84b
   11ba0:	sub	x2, x29, #0x4
   11ba4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11ba8:	cbz	w0, 11bc4 <PyInit__testcapi@@Base+0x8a08>
   11bac:	ldur	w0, [x29, #-4]
   11bb0:	bl	8e00 <_PyTime_FromSeconds@plt>
   11bb4:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   11bb8:	ldp	x29, x30, [sp, #16]
   11bbc:	add	sp, sp, #0x20
   11bc0:	ret
   11bc4:	mov	x0, xzr
   11bc8:	ldp	x29, x30, [sp, #16]
   11bcc:	add	sp, sp, #0x20
   11bd0:	ret
   11bd4:	sub	sp, sp, #0x30
   11bd8:	stp	x29, x30, [sp, #32]
   11bdc:	add	x29, sp, #0x20
   11be0:	mov	x0, x1
   11be4:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11be8:	add	x1, x1, #0x6b
   11bec:	sub	x2, x29, #0x8
   11bf0:	sub	x3, x29, #0xc
   11bf4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11bf8:	cbz	w0, 11c4c <PyInit__testcapi@@Base+0x8a90>
   11bfc:	ldur	w2, [x29, #-12]
   11c00:	cmp	w2, #0x4
   11c04:	b.cc	11c24 <PyInit__testcapi@@Base+0x8a68>  // b.lo, b.ul, b.last
   11c08:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11c0c:	ldr	x8, [x8, #3944]
   11c10:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11c14:	add	x1, x1, #0xd2d
   11c18:	ldr	x0, [x8]
   11c1c:	bl	8670 <PyErr_SetString@plt>
   11c20:	b	11c4c <PyInit__testcapi@@Base+0x8a90>
   11c24:	ldur	x1, [x29, #-8]
   11c28:	add	x0, sp, #0x8
   11c2c:	bl	87b0 <_PyTime_FromSecondsObject@plt>
   11c30:	cmn	w0, #0x1
   11c34:	b.eq	11c4c <PyInit__testcapi@@Base+0x8a90>  // b.none
   11c38:	ldr	x0, [sp, #8]
   11c3c:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   11c40:	ldp	x29, x30, [sp, #32]
   11c44:	add	sp, sp, #0x30
   11c48:	ret
   11c4c:	mov	x0, xzr
   11c50:	ldp	x29, x30, [sp, #32]
   11c54:	add	sp, sp, #0x30
   11c58:	ret
   11c5c:	sub	sp, sp, #0x20
   11c60:	stp	x29, x30, [sp, #16]
   11c64:	add	x29, sp, #0x10
   11c68:	mov	x0, x1
   11c6c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11c70:	add	x1, x1, #0xc6
   11c74:	add	x2, sp, #0x8
   11c78:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11c7c:	cbz	w0, 11ca8 <PyInit__testcapi@@Base+0x8aec>
   11c80:	ldr	x1, [sp, #8]
   11c84:	mov	x0, sp
   11c88:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   11c8c:	tbnz	w0, #31, 11ca8 <PyInit__testcapi@@Base+0x8aec>
   11c90:	ldr	x0, [sp]
   11c94:	bl	8690 <_PyTime_AsSecondsDouble@plt>
   11c98:	bl	8800 <PyFloat_FromDouble@plt>
   11c9c:	ldp	x29, x30, [sp, #16]
   11ca0:	add	sp, sp, #0x20
   11ca4:	ret
   11ca8:	mov	x0, xzr
   11cac:	ldp	x29, x30, [sp, #16]
   11cb0:	add	sp, sp, #0x20
   11cb4:	ret
   11cb8:	sub	sp, sp, #0x40
   11cbc:	stp	x29, x30, [sp, #48]
   11cc0:	add	x29, sp, #0x30
   11cc4:	mov	x0, x1
   11cc8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11ccc:	add	x1, x1, #0x6b
   11cd0:	sub	x2, x29, #0x8
   11cd4:	sub	x3, x29, #0xc
   11cd8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11cdc:	cbz	w0, 11d64 <PyInit__testcapi@@Base+0x8ba8>
   11ce0:	ldur	w8, [x29, #-12]
   11ce4:	cmp	w8, #0x4
   11ce8:	b.cc	11d14 <PyInit__testcapi@@Base+0x8b58>  // b.lo, b.ul, b.last
   11cec:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11cf0:	ldr	x8, [x8, #3944]
   11cf4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11cf8:	add	x1, x1, #0xd2d
   11cfc:	ldr	x0, [x8]
   11d00:	bl	8670 <PyErr_SetString@plt>
   11d04:	mov	x0, xzr
   11d08:	ldp	x29, x30, [sp, #48]
   11d0c:	add	sp, sp, #0x40
   11d10:	ret
   11d14:	ldur	x1, [x29, #-8]
   11d18:	add	x0, sp, #0x18
   11d1c:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   11d20:	tbnz	w0, #31, 11d64 <PyInit__testcapi@@Base+0x8ba8>
   11d24:	ldr	x0, [sp, #24]
   11d28:	ldur	w2, [x29, #-12]
   11d2c:	add	x1, sp, #0x8
   11d30:	bl	8dd0 <_PyTime_AsTimeval@plt>
   11d34:	tbnz	w0, #31, 11d64 <PyInit__testcapi@@Base+0x8ba8>
   11d38:	ldr	x0, [sp, #8]
   11d3c:	bl	8ef0 <PyLong_FromLongLong@plt>
   11d40:	cbz	x0, 11d08 <PyInit__testcapi@@Base+0x8b4c>
   11d44:	ldr	x2, [sp, #16]
   11d48:	mov	x1, x0
   11d4c:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   11d50:	add	x0, x0, #0xd5a
   11d54:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11d58:	ldp	x29, x30, [sp, #48]
   11d5c:	add	sp, sp, #0x40
   11d60:	ret
   11d64:	mov	x0, xzr
   11d68:	ldp	x29, x30, [sp, #48]
   11d6c:	add	sp, sp, #0x40
   11d70:	ret
   11d74:	sub	sp, sp, #0x30
   11d78:	stp	x29, x30, [sp, #32]
   11d7c:	add	x29, sp, #0x20
   11d80:	mov	x0, x1
   11d84:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11d88:	add	x1, x1, #0xc6
   11d8c:	sub	x2, x29, #0x8
   11d90:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11d94:	cbz	w0, 11de4 <PyInit__testcapi@@Base+0x8c28>
   11d98:	ldur	x1, [x29, #-8]
   11d9c:	add	x0, sp, #0x10
   11da0:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   11da4:	tbnz	w0, #31, 11de4 <PyInit__testcapi@@Base+0x8c28>
   11da8:	ldr	x0, [sp, #16]
   11dac:	mov	x1, sp
   11db0:	bl	8a40 <_PyTime_AsTimespec@plt>
   11db4:	cmn	w0, #0x1
   11db8:	b.eq	11de4 <PyInit__testcapi@@Base+0x8c28>  // b.none
   11dbc:	ldr	x0, [sp]
   11dc0:	bl	9000 <_PyLong_FromTime_t@plt>
   11dc4:	ldr	x2, [sp, #8]
   11dc8:	mov	x1, x0
   11dcc:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   11dd0:	add	x0, x0, #0xd5a
   11dd4:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11dd8:	ldp	x29, x30, [sp, #32]
   11ddc:	add	sp, sp, #0x30
   11de0:	ret
   11de4:	mov	x0, xzr
   11de8:	ldp	x29, x30, [sp, #32]
   11dec:	add	sp, sp, #0x30
   11df0:	ret
   11df4:	sub	sp, sp, #0x30
   11df8:	stp	x29, x30, [sp, #32]
   11dfc:	add	x29, sp, #0x20
   11e00:	mov	x0, x1
   11e04:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11e08:	add	x1, x1, #0x6b
   11e0c:	sub	x2, x29, #0x8
   11e10:	sub	x3, x29, #0xc
   11e14:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11e18:	cbz	w0, 11e50 <PyInit__testcapi@@Base+0x8c94>
   11e1c:	ldur	x1, [x29, #-8]
   11e20:	add	x0, sp, #0x8
   11e24:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   11e28:	tbnz	w0, #31, 11e50 <PyInit__testcapi@@Base+0x8c94>
   11e2c:	ldur	w1, [x29, #-12]
   11e30:	cmp	w1, #0x4
   11e34:	b.cc	11e60 <PyInit__testcapi@@Base+0x8ca4>  // b.lo, b.ul, b.last
   11e38:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11e3c:	ldr	x8, [x8, #3944]
   11e40:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11e44:	add	x1, x1, #0xd2d
   11e48:	ldr	x0, [x8]
   11e4c:	bl	8670 <PyErr_SetString@plt>
   11e50:	mov	x0, xzr
   11e54:	ldp	x29, x30, [sp, #32]
   11e58:	add	sp, sp, #0x30
   11e5c:	ret
   11e60:	ldr	x0, [sp, #8]
   11e64:	bl	87d0 <_PyTime_AsMilliseconds@plt>
   11e68:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   11e6c:	ldp	x29, x30, [sp, #32]
   11e70:	add	sp, sp, #0x30
   11e74:	ret
   11e78:	sub	sp, sp, #0x30
   11e7c:	stp	x29, x30, [sp, #32]
   11e80:	add	x29, sp, #0x20
   11e84:	mov	x0, x1
   11e88:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   11e8c:	add	x1, x1, #0x6b
   11e90:	sub	x2, x29, #0x8
   11e94:	sub	x3, x29, #0xc
   11e98:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11e9c:	cbz	w0, 11ed4 <PyInit__testcapi@@Base+0x8d18>
   11ea0:	ldur	x1, [x29, #-8]
   11ea4:	add	x0, sp, #0x8
   11ea8:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   11eac:	tbnz	w0, #31, 11ed4 <PyInit__testcapi@@Base+0x8d18>
   11eb0:	ldur	w1, [x29, #-12]
   11eb4:	cmp	w1, #0x4
   11eb8:	b.cc	11ee4 <PyInit__testcapi@@Base+0x8d28>  // b.lo, b.ul, b.last
   11ebc:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   11ec0:	ldr	x8, [x8, #3944]
   11ec4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11ec8:	add	x1, x1, #0xd2d
   11ecc:	ldr	x0, [x8]
   11ed0:	bl	8670 <PyErr_SetString@plt>
   11ed4:	mov	x0, xzr
   11ed8:	ldp	x29, x30, [sp, #32]
   11edc:	add	sp, sp, #0x30
   11ee0:	ret
   11ee4:	ldr	x0, [sp, #8]
   11ee8:	bl	8d70 <_PyTime_AsMicroseconds@plt>
   11eec:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   11ef0:	ldp	x29, x30, [sp, #32]
   11ef4:	add	sp, sp, #0x30
   11ef8:	ret
   11efc:	stp	x29, x30, [sp, #-16]!
   11f00:	mov	x29, sp
   11f04:	bl	8940 <PyThreadState_Get@plt>
   11f08:	ldr	w8, [x0, #32]
   11f0c:	sub	w8, w8, #0x1
   11f10:	sxtw	x0, w8
   11f14:	ldp	x29, x30, [sp], #16
   11f18:	b	8840 <PyLong_FromLong@plt>
   11f1c:	stp	x29, x30, [sp, #-16]!
   11f20:	mov	x29, sp
   11f24:	mov	w0, #0x10                  	// #16
   11f28:	bl	8fc0 <PyMem_Malloc@plt>
   11f2c:	cbz	x0, 11f58 <PyInit__testcapi@@Base+0x8d9c>
   11f30:	mov	w8, #0x78                  	// #120
   11f34:	strb	w8, [x0, #16]
   11f38:	bl	83d0 <PyMem_Free@plt>
   11f3c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   11f40:	ldr	x0, [x0, #4016]
   11f44:	ldr	x8, [x0]
   11f48:	add	x8, x8, #0x1
   11f4c:	str	x8, [x0]
   11f50:	ldp	x29, x30, [sp], #16
   11f54:	ret
   11f58:	bl	8570 <PyErr_NoMemory@plt>
   11f5c:	mov	x0, xzr
   11f60:	ldp	x29, x30, [sp], #16
   11f64:	ret
   11f68:	stp	x29, x30, [sp, #-16]!
   11f6c:	mov	x29, sp
   11f70:	mov	w0, #0x10                  	// #16
   11f74:	bl	8fc0 <PyMem_Malloc@plt>
   11f78:	bl	8a10 <PyMem_RawFree@plt>
   11f7c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   11f80:	ldr	x0, [x0, #4016]
   11f84:	ldr	x8, [x0]
   11f88:	add	x8, x8, #0x1
   11f8c:	str	x8, [x0]
   11f90:	ldp	x29, x30, [sp], #16
   11f94:	ret
   11f98:	stp	x29, x30, [sp, #-32]!
   11f9c:	stp	x20, x19, [sp, #16]
   11fa0:	mov	x29, sp
   11fa4:	bl	8d50 <PyEval_SaveThread@plt>
   11fa8:	mov	x19, x0
   11fac:	mov	w0, #0xa                   	// #10
   11fb0:	bl	8fc0 <PyMem_Malloc@plt>
   11fb4:	mov	x20, x0
   11fb8:	mov	x0, x19
   11fbc:	bl	83b0 <PyEval_RestoreThread@plt>
   11fc0:	mov	x0, x20
   11fc4:	bl	83d0 <PyMem_Free@plt>
   11fc8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   11fcc:	ldr	x0, [x0, #4016]
   11fd0:	ldp	x20, x19, [sp, #16]
   11fd4:	ldr	x8, [x0]
   11fd8:	add	x8, x8, #0x1
   11fdc:	str	x8, [x0]
   11fe0:	ldp	x29, x30, [sp], #32
   11fe4:	ret
   11fe8:	stp	x29, x30, [sp, #-16]!
   11fec:	mov	x29, sp
   11ff0:	bl	8de0 <_PyMem_GetCurrentAllocatorName@plt>
   11ff4:	cbz	x0, 12000 <PyInit__testcapi@@Base+0x8e44>
   11ff8:	ldp	x29, x30, [sp], #16
   11ffc:	b	8d10 <PyUnicode_FromString@plt>
   12000:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12004:	ldr	x8, [x8, #3928]
   12008:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   1200c:	add	x1, x1, #0x6e
   12010:	ldr	x0, [x8]
   12014:	bl	8670 <PyErr_SetString@plt>
   12018:	mov	x0, xzr
   1201c:	ldp	x29, x30, [sp], #16
   12020:	ret
   12024:	stp	x29, x30, [sp, #-16]!
   12028:	mov	x29, sp
   1202c:	mov	x0, xzr
   12030:	bl	83e0 <_PyObject_IsFreed@plt>
   12034:	cbz	w0, 12054 <PyInit__testcapi@@Base+0x8e98>
   12038:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   1203c:	ldr	x0, [x0, #4016]
   12040:	ldr	x8, [x0]
   12044:	add	x8, x8, #0x1
   12048:	str	x8, [x0]
   1204c:	ldp	x29, x30, [sp], #16
   12050:	ret
   12054:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12058:	ldr	x0, [x8, #3552]
   1205c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12060:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12064:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12068:	add	x1, x1, #0xba2
   1206c:	add	x2, x2, #0x422
   12070:	add	x3, x3, #0x89
   12074:	bl	8e60 <PyErr_Format@plt>
   12078:	mov	x0, xzr
   1207c:	ldp	x29, x30, [sp], #16
   12080:	ret
   12084:	stp	x29, x30, [sp, #-16]!
   12088:	mov	x29, sp
   1208c:	mov	w0, #0x10                  	// #16
   12090:	bl	86c0 <PyObject_Malloc@plt>
   12094:	cbz	x0, 120bc <PyInit__testcapi@@Base+0x8f00>
   12098:	mov	w8, #0x1                   	// #1
   1209c:	str	x8, [x0]
   120a0:	bl	83e0 <_PyObject_IsFreed@plt>
   120a4:	cbz	w0, 120c4 <PyInit__testcapi@@Base+0x8f08>
   120a8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   120ac:	ldr	x0, [x0, #4016]
   120b0:	ldr	x8, [x0]
   120b4:	add	x8, x8, #0x1
   120b8:	str	x8, [x0]
   120bc:	ldp	x29, x30, [sp], #16
   120c0:	ret
   120c4:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   120c8:	ldr	x0, [x8, #3552]
   120cc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   120d0:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   120d4:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   120d8:	add	x1, x1, #0xba2
   120dc:	add	x2, x2, #0x43f
   120e0:	add	x3, x3, #0x89
   120e4:	bl	8e60 <PyErr_Format@plt>
   120e8:	mov	x0, xzr
   120ec:	ldp	x29, x30, [sp], #16
   120f0:	ret
   120f4:	stp	x29, x30, [sp, #-16]!
   120f8:	mov	x29, sp
   120fc:	mov	w0, #0x8                   	// #8
   12100:	bl	86c0 <PyObject_Malloc@plt>
   12104:	cbz	x0, 1212c <PyInit__testcapi@@Base+0x8f70>
   12108:	mov	w8, #0x1                   	// #1
   1210c:	str	x8, [x0]
   12110:	bl	83e0 <_PyObject_IsFreed@plt>
   12114:	cbz	w0, 12134 <PyInit__testcapi@@Base+0x8f78>
   12118:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   1211c:	ldr	x0, [x0, #4016]
   12120:	ldr	x8, [x0]
   12124:	add	x8, x8, #0x1
   12128:	str	x8, [x0]
   1212c:	ldp	x29, x30, [sp], #16
   12130:	ret
   12134:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12138:	ldr	x0, [x8, #3552]
   1213c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12140:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12144:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12148:	add	x1, x1, #0xba2
   1214c:	add	x2, x2, #0x465
   12150:	add	x3, x3, #0x89
   12154:	bl	8e60 <PyErr_Format@plt>
   12158:	mov	x0, xzr
   1215c:	ldp	x29, x30, [sp], #16
   12160:	ret
   12164:	stp	x29, x30, [sp, #-32]!
   12168:	str	x19, [sp, #16]
   1216c:	mov	x29, sp
   12170:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12174:	ldr	x8, [x8, #4048]
   12178:	ldr	x9, [x8, #8]
   1217c:	ldrb	w10, [x9, #169]
   12180:	tbz	w10, #3, 121d4 <PyInit__testcapi@@Base+0x9018>
   12184:	ldr	x9, [x9, #56]
   12188:	ldr	x8, [x8, x9]
   1218c:	cbz	x8, 121d4 <PyInit__testcapi@@Base+0x9018>
   12190:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
   12194:	ldr	x19, [x19, #4048]
   12198:	mov	x1, xzr
   1219c:	mov	x2, xzr
   121a0:	mov	x3, xzr
   121a4:	mov	x0, x19
   121a8:	blr	x8
   121ac:	mov	x1, x0
   121b0:	mov	x0, x19
   121b4:	mov	x2, xzr
   121b8:	bl	8a80 <_Py_CheckFunctionResult@plt>
   121bc:	mov	x19, x0
   121c0:	cbnz	x0, 121f4 <PyInit__testcapi@@Base+0x9038>
   121c4:	mov	x0, xzr
   121c8:	ldr	x19, [sp, #16]
   121cc:	ldp	x29, x30, [sp], #32
   121d0:	ret
   121d4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   121d8:	ldr	x0, [x0, #4048]
   121dc:	mov	x1, xzr
   121e0:	mov	x2, xzr
   121e4:	mov	x3, xzr
   121e8:	bl	8f00 <_PyObject_MakeTpCall@plt>
   121ec:	mov	x19, x0
   121f0:	cbz	x0, 121c4 <PyInit__testcapi@@Base+0x9008>
   121f4:	ldr	x8, [x19, #8]
   121f8:	mov	x0, x19
   121fc:	ldr	x8, [x8, #48]
   12200:	blr	x8
   12204:	mov	w8, #0x1                   	// #1
   12208:	mov	x0, x19
   1220c:	str	x8, [x19]
   12210:	bl	83e0 <_PyObject_IsFreed@plt>
   12214:	cbz	w0, 12238 <PyInit__testcapi@@Base+0x907c>
   12218:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   1221c:	ldr	x0, [x0, #4016]
   12220:	ldr	x8, [x0]
   12224:	add	x8, x8, #0x1
   12228:	str	x8, [x0]
   1222c:	ldr	x19, [sp, #16]
   12230:	ldp	x29, x30, [sp], #32
   12234:	ret
   12238:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   1223c:	ldr	x0, [x8, #3552]
   12240:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12244:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12248:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   1224c:	add	x1, x1, #0xba2
   12250:	add	x2, x2, #0x48d
   12254:	add	x3, x3, #0x89
   12258:	bl	8e60 <PyErr_Format@plt>
   1225c:	mov	x0, xzr
   12260:	ldr	x19, [sp, #16]
   12264:	ldp	x29, x30, [sp], #32
   12268:	ret
   1226c:	stp	x29, x30, [sp, #-32]!
   12270:	stp	x20, x19, [sp, #16]
   12274:	mov	x29, sp
   12278:	bl	8d50 <PyEval_SaveThread@plt>
   1227c:	mov	x19, x0
   12280:	mov	w0, #0xa                   	// #10
   12284:	bl	86c0 <PyObject_Malloc@plt>
   12288:	mov	x20, x0
   1228c:	mov	x0, x19
   12290:	bl	83b0 <PyEval_RestoreThread@plt>
   12294:	mov	x0, x20
   12298:	bl	87c0 <PyObject_Free@plt>
   1229c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   122a0:	ldr	x0, [x0, #4016]
   122a4:	ldp	x20, x19, [sp, #16]
   122a8:	ldr	x8, [x0]
   122ac:	add	x8, x8, #0x1
   122b0:	str	x8, [x0]
   122b4:	ldp	x29, x30, [sp], #32
   122b8:	ret
   122bc:	sub	sp, sp, #0x40
   122c0:	stp	x29, x30, [sp, #32]
   122c4:	stp	x20, x19, [sp, #48]
   122c8:	add	x29, sp, #0x20
   122cc:	mov	x0, x1
   122d0:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   122d4:	add	x1, x1, #0xa5
   122d8:	sub	x2, x29, #0x4
   122dc:	add	x3, sp, #0x10
   122e0:	add	x4, sp, #0x8
   122e4:	add	x5, sp, #0x4
   122e8:	str	wzr, [sp, #4]
   122ec:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   122f0:	cbz	w0, 12308 <PyInit__testcapi@@Base+0x914c>
   122f4:	ldr	x0, [sp, #16]
   122f8:	bl	87e0 <PyLong_AsVoidPtr@plt>
   122fc:	mov	x19, x0
   12300:	bl	8980 <PyErr_Occurred@plt>
   12304:	cbz	x0, 1231c <PyInit__testcapi@@Base+0x9160>
   12308:	mov	x0, xzr
   1230c:	ldp	x20, x19, [sp, #48]
   12310:	ldp	x29, x30, [sp, #32]
   12314:	add	sp, sp, #0x40
   12318:	ret
   1231c:	ldr	w8, [sp, #4]
   12320:	cbz	w8, 12374 <PyInit__testcapi@@Base+0x91b8>
   12324:	bl	8d50 <PyEval_SaveThread@plt>
   12328:	ldur	w8, [x29, #-4]
   1232c:	ldr	x2, [sp, #8]
   12330:	mov	x20, x0
   12334:	mov	x1, x19
   12338:	mov	w0, w8
   1233c:	bl	8730 <PyTraceMalloc_Track@plt>
   12340:	mov	w19, w0
   12344:	mov	x0, x20
   12348:	bl	83b0 <PyEval_RestoreThread@plt>
   1234c:	tbnz	w19, #31, 1238c <PyInit__testcapi@@Base+0x91d0>
   12350:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   12354:	ldr	x0, [x0, #4016]
   12358:	ldr	x8, [x0]
   1235c:	add	x8, x8, #0x1
   12360:	str	x8, [x0]
   12364:	ldp	x20, x19, [sp, #48]
   12368:	ldp	x29, x30, [sp, #32]
   1236c:	add	sp, sp, #0x40
   12370:	ret
   12374:	ldur	w0, [x29, #-4]
   12378:	ldr	x2, [sp, #8]
   1237c:	mov	x1, x19
   12380:	bl	8730 <PyTraceMalloc_Track@plt>
   12384:	mov	w19, w0
   12388:	tbz	w19, #31, 12350 <PyInit__testcapi@@Base+0x9194>
   1238c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12390:	ldr	x8, [x8, #3928]
   12394:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12398:	add	x1, x1, #0xab
   1239c:	ldr	x0, [x8]
   123a0:	bl	8670 <PyErr_SetString@plt>
   123a4:	b	12308 <PyInit__testcapi@@Base+0x914c>
   123a8:	sub	sp, sp, #0x30
   123ac:	stp	x29, x30, [sp, #16]
   123b0:	str	x19, [sp, #32]
   123b4:	add	x29, sp, #0x10
   123b8:	mov	x0, x1
   123bc:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   123c0:	add	x1, x1, #0xc5
   123c4:	add	x2, x29, #0x1c
   123c8:	add	x3, sp, #0x8
   123cc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   123d0:	cbz	w0, 123e8 <PyInit__testcapi@@Base+0x922c>
   123d4:	ldr	x0, [sp, #8]
   123d8:	bl	87e0 <PyLong_AsVoidPtr@plt>
   123dc:	mov	x19, x0
   123e0:	bl	8980 <PyErr_Occurred@plt>
   123e4:	cbz	x0, 123fc <PyInit__testcapi@@Base+0x9240>
   123e8:	mov	x0, xzr
   123ec:	ldr	x19, [sp, #32]
   123f0:	ldp	x29, x30, [sp, #16]
   123f4:	add	sp, sp, #0x30
   123f8:	ret
   123fc:	ldr	w0, [x29, #28]
   12400:	mov	x1, x19
   12404:	bl	8310 <PyTraceMalloc_Untrack@plt>
   12408:	tbnz	w0, #31, 12430 <PyInit__testcapi@@Base+0x9274>
   1240c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   12410:	ldr	x0, [x0, #4016]
   12414:	ldr	x8, [x0]
   12418:	add	x8, x8, #0x1
   1241c:	str	x8, [x0]
   12420:	ldr	x19, [sp, #32]
   12424:	ldp	x29, x30, [sp, #16]
   12428:	add	sp, sp, #0x30
   1242c:	ret
   12430:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12434:	ldr	x8, [x8, #3928]
   12438:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   1243c:	add	x1, x1, #0xc8
   12440:	ldr	x0, [x8]
   12444:	bl	8670 <PyErr_SetString@plt>
   12448:	b	123e8 <PyInit__testcapi@@Base+0x922c>
   1244c:	sub	sp, sp, #0x30
   12450:	stp	x29, x30, [sp, #16]
   12454:	str	x19, [sp, #32]
   12458:	add	x29, sp, #0x10
   1245c:	mov	x0, x1
   12460:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12464:	add	x1, x1, #0xc5
   12468:	add	x2, x29, #0x1c
   1246c:	add	x3, sp, #0x8
   12470:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   12474:	cbz	w0, 1248c <PyInit__testcapi@@Base+0x92d0>
   12478:	ldr	x0, [sp, #8]
   1247c:	bl	87e0 <PyLong_AsVoidPtr@plt>
   12480:	mov	x19, x0
   12484:	bl	8980 <PyErr_Occurred@plt>
   12488:	cbz	x0, 124a0 <PyInit__testcapi@@Base+0x92e4>
   1248c:	mov	x0, xzr
   12490:	ldr	x19, [sp, #32]
   12494:	ldp	x29, x30, [sp, #16]
   12498:	add	sp, sp, #0x30
   1249c:	ret
   124a0:	ldr	w0, [x29, #28]
   124a4:	mov	x1, x19
   124a8:	bl	8b20 <_PyTraceMalloc_GetTraceback@plt>
   124ac:	ldr	x19, [sp, #32]
   124b0:	ldp	x29, x30, [sp, #16]
   124b4:	add	sp, sp, #0x30
   124b8:	ret
   124bc:	sub	sp, sp, #0x20
   124c0:	stp	x29, x30, [sp, #16]
   124c4:	add	x29, sp, #0x10
   124c8:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
   124cc:	ldr	x2, [x2, #4040]
   124d0:	mov	x0, x1
   124d4:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   124d8:	add	x1, x1, #0xe4
   124dc:	add	x3, sp, #0x8
   124e0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   124e4:	cbz	w0, 12500 <PyInit__testcapi@@Base+0x9344>
   124e8:	ldr	x8, [sp, #8]
   124ec:	ldr	x0, [x8, #24]
   124f0:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
   124f4:	ldp	x29, x30, [sp, #16]
   124f8:	add	sp, sp, #0x20
   124fc:	ret
   12500:	mov	x0, xzr
   12504:	ldp	x29, x30, [sp, #16]
   12508:	add	sp, sp, #0x20
   1250c:	ret
   12510:	sub	sp, sp, #0x20
   12514:	stp	x29, x30, [sp, #16]
   12518:	add	x29, sp, #0x10
   1251c:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
   12520:	ldr	x2, [x2, #3960]
   12524:	mov	x0, x1
   12528:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   1252c:	add	x1, x1, #0xe4
   12530:	add	x3, sp, #0x8
   12534:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   12538:	cbz	w0, 12560 <PyInit__testcapi@@Base+0x93a4>
   1253c:	mov	w0, #0x2                   	// #2
   12540:	bl	8330 <raise@plt>
   12544:	adrp	x1, 27000 <PyInit__testcapi@@Base+0x1de44>
   12548:	ldr	x0, [sp, #8]
   1254c:	ldr	x1, [x1, #4016]
   12550:	bl	8620 <_PyGen_Send@plt>
   12554:	ldp	x29, x30, [sp, #16]
   12558:	add	sp, sp, #0x20
   1255c:	ret
   12560:	mov	x0, xzr
   12564:	ldp	x29, x30, [sp, #16]
   12568:	add	sp, sp, #0x20
   1256c:	ret
   12570:	sub	sp, sp, #0x30
   12574:	stp	x29, x30, [sp, #16]
   12578:	str	x19, [sp, #32]
   1257c:	add	x29, sp, #0x10
   12580:	mov	x0, x1
   12584:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12588:	add	x1, x1, #0x105
   1258c:	add	x2, x29, #0x18
   12590:	add	x3, sp, #0x8
   12594:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   12598:	cbz	w0, 125d4 <PyInit__testcapi@@Base+0x9418>
   1259c:	adrp	x9, 27000 <PyInit__testcapi@@Base+0x1de44>
   125a0:	ldr	x8, [sp, #8]
   125a4:	ldr	x9, [x9, #4016]
   125a8:	cmp	x8, x9
   125ac:	b.eq	125e8 <PyInit__testcapi@@Base+0x942c>  // b.none
   125b0:	ldr	x9, [x8, #8]
   125b4:	ldrb	w9, [x9, #171]
   125b8:	tbnz	w9, #2, 12604 <PyInit__testcapi@@Base+0x9448>
   125bc:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   125c0:	ldr	x8, [x8, #3952]
   125c4:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   125c8:	add	x1, x1, #0xe7
   125cc:	ldr	x0, [x8]
   125d0:	bl	8670 <PyErr_SetString@plt>
   125d4:	mov	x0, xzr
   125d8:	ldr	x19, [sp, #32]
   125dc:	ldp	x29, x30, [sp, #16]
   125e0:	add	sp, sp, #0x30
   125e4:	ret
   125e8:	mov	x1, xzr
   125ec:	mov	x2, xzr
   125f0:	ldr	x19, [x29, #24]
   125f4:	ldr	x8, [x19, #8]
   125f8:	ldrb	w9, [x8, #169]
   125fc:	tbnz	w9, #3, 1261c <PyInit__testcapi@@Base+0x9460>
   12600:	b	12654 <PyInit__testcapi@@Base+0x9498>
   12604:	ldr	x2, [x8, #16]
   12608:	add	x1, x8, #0x18
   1260c:	ldr	x19, [x29, #24]
   12610:	ldr	x8, [x19, #8]
   12614:	ldrb	w9, [x8, #169]
   12618:	tbz	w9, #3, 12654 <PyInit__testcapi@@Base+0x9498>
   1261c:	ldr	x8, [x8, #56]
   12620:	ldr	x8, [x19, x8]
   12624:	cbz	x8, 12654 <PyInit__testcapi@@Base+0x9498>
   12628:	mov	x0, x19
   1262c:	mov	x3, xzr
   12630:	blr	x8
   12634:	mov	x1, x0
   12638:	mov	x0, x19
   1263c:	mov	x2, xzr
   12640:	bl	8a80 <_Py_CheckFunctionResult@plt>
   12644:	ldr	x19, [sp, #32]
   12648:	ldp	x29, x30, [sp, #16]
   1264c:	add	sp, sp, #0x30
   12650:	ret
   12654:	and	x2, x2, #0x7fffffffffffffff
   12658:	mov	x0, x19
   1265c:	mov	x3, xzr
   12660:	bl	8f00 <_PyObject_MakeTpCall@plt>
   12664:	ldr	x19, [sp, #32]
   12668:	ldp	x29, x30, [sp, #16]
   1266c:	add	sp, sp, #0x30
   12670:	ret
   12674:	sub	sp, sp, #0x30
   12678:	stp	x29, x30, [sp, #32]
   1267c:	add	x29, sp, #0x20
   12680:	mov	x0, x1
   12684:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12688:	add	x1, x1, #0x104
   1268c:	sub	x2, x29, #0x8
   12690:	add	x3, sp, #0x10
   12694:	add	x4, sp, #0x8
   12698:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1269c:	cbz	w0, 1270c <PyInit__testcapi@@Base+0x9550>
   126a0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   126a4:	ldr	x9, [sp, #16]
   126a8:	ldr	x8, [x8, #4016]
   126ac:	cmp	x9, x8
   126b0:	b.eq	126d4 <PyInit__testcapi@@Base+0x9518>  // b.none
   126b4:	ldr	x10, [x9, #8]
   126b8:	ldrb	w10, [x10, #171]
   126bc:	tbnz	w10, #2, 1271c <PyInit__testcapi@@Base+0x9560>
   126c0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   126c4:	ldr	x8, [x8, #3952]
   126c8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   126cc:	add	x1, x1, #0xe7
   126d0:	b	12704 <PyInit__testcapi@@Base+0x9548>
   126d4:	mov	x1, xzr
   126d8:	mov	x2, xzr
   126dc:	ldr	x3, [sp, #8]
   126e0:	cmp	x3, x8
   126e4:	b.eq	12730 <PyInit__testcapi@@Base+0x9574>  // b.none
   126e8:	ldr	x8, [x3, #8]
   126ec:	ldrb	w8, [x8, #171]
   126f0:	tbnz	w8, #5, 12738 <PyInit__testcapi@@Base+0x957c>
   126f4:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   126f8:	ldr	x8, [x8, #3952]
   126fc:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12700:	add	x1, x1, #0x108
   12704:	ldr	x0, [x8]
   12708:	bl	8670 <PyErr_SetString@plt>
   1270c:	mov	x0, xzr
   12710:	ldp	x29, x30, [sp, #32]
   12714:	add	sp, sp, #0x30
   12718:	ret
   1271c:	ldr	x2, [x9, #16]
   12720:	add	x1, x9, #0x18
   12724:	ldr	x3, [sp, #8]
   12728:	cmp	x3, x8
   1272c:	b.ne	126e8 <PyInit__testcapi@@Base+0x952c>  // b.any
   12730:	mov	x3, xzr
   12734:	str	xzr, [sp, #8]
   12738:	ldur	x0, [x29, #-8]
   1273c:	bl	8680 <_PyObject_FastCallDict@plt>
   12740:	ldp	x29, x30, [sp, #32]
   12744:	add	sp, sp, #0x30
   12748:	ret
   1274c:	sub	sp, sp, #0x30
   12750:	stp	x29, x30, [sp, #16]
   12754:	str	x19, [sp, #32]
   12758:	add	x29, sp, #0x10
   1275c:	mov	x0, x1
   12760:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12764:	add	x1, x1, #0x104
   12768:	add	x2, x29, #0x18
   1276c:	add	x3, sp, #0x8
   12770:	mov	x4, sp
   12774:	str	xzr, [sp]
   12778:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1277c:	cbz	w0, 1282c <PyInit__testcapi@@Base+0x9670>
   12780:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12784:	ldr	x9, [sp, #8]
   12788:	ldr	x8, [x8, #4016]
   1278c:	cmp	x9, x8
   12790:	b.eq	127b4 <PyInit__testcapi@@Base+0x95f8>  // b.none
   12794:	ldr	x10, [x9, #8]
   12798:	ldrb	w10, [x10, #171]
   1279c:	tbnz	w10, #2, 127d4 <PyInit__testcapi@@Base+0x9618>
   127a0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   127a4:	ldr	x8, [x8, #3952]
   127a8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   127ac:	add	x1, x1, #0xe7
   127b0:	b	12824 <PyInit__testcapi@@Base+0x9668>
   127b4:	mov	x1, xzr
   127b8:	mov	x2, xzr
   127bc:	ldr	x3, [sp]
   127c0:	cmp	x3, x8
   127c4:	b.ne	127e8 <PyInit__testcapi@@Base+0x962c>  // b.any
   127c8:	mov	x3, xzr
   127cc:	str	xzr, [sp]
   127d0:	b	12840 <PyInit__testcapi@@Base+0x9684>
   127d4:	ldr	x2, [x9, #16]
   127d8:	add	x1, x9, #0x18
   127dc:	ldr	x3, [sp]
   127e0:	cmp	x3, x8
   127e4:	b.eq	127c8 <PyInit__testcapi@@Base+0x960c>  // b.none
   127e8:	ldr	x8, [x3, #8]
   127ec:	ldrb	w8, [x8, #171]
   127f0:	tbnz	w8, #2, 12808 <PyInit__testcapi@@Base+0x964c>
   127f4:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   127f8:	ldr	x8, [x8, #3952]
   127fc:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12800:	add	x1, x1, #0x140
   12804:	b	12824 <PyInit__testcapi@@Base+0x9668>
   12808:	ldr	x8, [x3, #16]
   1280c:	subs	x2, x2, x8
   12810:	b.ge	12840 <PyInit__testcapi@@Base+0x9684>  // b.tcont
   12814:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12818:	ldr	x8, [x8, #3944]
   1281c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12820:	add	x1, x1, #0x127
   12824:	ldr	x0, [x8]
   12828:	bl	8670 <PyErr_SetString@plt>
   1282c:	mov	x0, xzr
   12830:	ldr	x19, [sp, #32]
   12834:	ldp	x29, x30, [sp, #16]
   12838:	add	sp, sp, #0x30
   1283c:	ret
   12840:	ldr	x19, [x29, #24]
   12844:	ldr	x8, [x19, #8]
   12848:	ldrb	w9, [x8, #169]
   1284c:	tbz	w9, #3, 12884 <PyInit__testcapi@@Base+0x96c8>
   12850:	ldr	x8, [x8, #56]
   12854:	ldr	x8, [x19, x8]
   12858:	cbz	x8, 12884 <PyInit__testcapi@@Base+0x96c8>
   1285c:	mov	x0, x19
   12860:	blr	x8
   12864:	mov	x1, x0
   12868:	mov	x0, x19
   1286c:	mov	x2, xzr
   12870:	bl	8a80 <_Py_CheckFunctionResult@plt>
   12874:	ldr	x19, [sp, #32]
   12878:	ldp	x29, x30, [sp, #16]
   1287c:	add	sp, sp, #0x30
   12880:	ret
   12884:	and	x2, x2, #0x7fffffffffffffff
   12888:	mov	x0, x19
   1288c:	bl	8f00 <_PyObject_MakeTpCall@plt>
   12890:	ldr	x19, [sp, #32]
   12894:	ldp	x29, x30, [sp, #16]
   12898:	add	sp, sp, #0x30
   1289c:	ret
   128a0:	sub	sp, sp, #0x30
   128a4:	stp	x29, x30, [sp, #32]
   128a8:	add	x29, sp, #0x20
   128ac:	mov	x0, x1
   128b0:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   128b4:	add	x1, x1, #0x160
   128b8:	sub	x2, x29, #0x8
   128bc:	add	x3, sp, #0x10
   128c0:	add	x4, sp, #0x8
   128c4:	str	xzr, [sp, #8]
   128c8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   128cc:	cbz	w0, 128f4 <PyInit__testcapi@@Base+0x9738>
   128d0:	ldr	x1, [sp, #16]
   128d4:	ldr	x8, [x1, #8]
   128d8:	ldrb	w8, [x8, #171]
   128dc:	tbnz	w8, #2, 12904 <PyInit__testcapi@@Base+0x9748>
   128e0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   128e4:	ldr	x8, [x8, #3952]
   128e8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   128ec:	add	x1, x1, #0x165
   128f0:	b	12928 <PyInit__testcapi@@Base+0x976c>
   128f4:	mov	x0, xzr
   128f8:	ldp	x29, x30, [sp, #32]
   128fc:	add	sp, sp, #0x30
   12900:	ret
   12904:	ldr	x2, [sp, #8]
   12908:	cbz	x2, 12940 <PyInit__testcapi@@Base+0x9784>
   1290c:	ldr	x8, [x2, #8]
   12910:	ldrb	w8, [x8, #171]
   12914:	tbnz	w8, #5, 12940 <PyInit__testcapi@@Base+0x9784>
   12918:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   1291c:	ldr	x8, [x8, #3952]
   12920:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12924:	add	x1, x1, #0x17a
   12928:	ldr	x0, [x8]
   1292c:	bl	8670 <PyErr_SetString@plt>
   12930:	mov	x0, xzr
   12934:	ldp	x29, x30, [sp, #32]
   12938:	add	sp, sp, #0x30
   1293c:	ret
   12940:	ldur	x0, [x29, #-8]
   12944:	bl	8bb0 <PyVectorcall_Call@plt>
   12948:	ldp	x29, x30, [sp, #32]
   1294c:	add	sp, sp, #0x30
   12950:	ret
   12954:	sub	sp, sp, #0x20
   12958:	stp	x29, x30, [sp, #16]
   1295c:	add	x29, sp, #0x10
   12960:	mov	w8, #0x5                   	// #5
   12964:	sub	x0, x29, #0x4
   12968:	stur	w8, [x29, #-4]
   1296c:	bl	8880 <PyLong_FromVoidPtr@plt>
   12970:	ldp	x29, x30, [sp, #16]
   12974:	add	sp, sp, #0x20
   12978:	ret
   1297c:	sub	sp, sp, #0x20
   12980:	stp	x29, x30, [sp, #16]
   12984:	add	x29, sp, #0x10
   12988:	mov	x0, x1
   1298c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12990:	add	x1, x1, #0x84b
   12994:	sub	x2, x29, #0x4
   12998:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1299c:	cbz	w0, 129c0 <PyInit__testcapi@@Base+0x9804>
   129a0:	ldur	w8, [x29, #-4]
   129a4:	mov	w9, #0x7f                  	// #127
   129a8:	bfi	w9, w8, #8, #24
   129ac:	sxtw	x0, w9
   129b0:	bl	8840 <PyLong_FromLong@plt>
   129b4:	ldp	x29, x30, [sp, #16]
   129b8:	add	sp, sp, #0x20
   129bc:	ret
   129c0:	mov	x0, xzr
   129c4:	ldp	x29, x30, [sp, #16]
   129c8:	add	sp, sp, #0x20
   129cc:	ret
   129d0:	mov	x0, x1
   129d4:	b	8530 <PyMapping_Keys@plt>
   129d8:	mov	x0, x1
   129dc:	b	8dc0 <PyMapping_Values@plt>
   129e0:	mov	x0, x1
   129e4:	b	8290 <PyMapping_Items@plt>
   129e8:	stp	x29, x30, [sp, #-32]!
   129ec:	str	x19, [sp, #16]
   129f0:	mov	x29, sp
   129f4:	add	x0, x29, #0x18
   129f8:	str	xzr, [x29, #24]
   129fc:	bl	8520 <PyThread_tss_is_created@plt>
   12a00:	cbz	w0, 12a38 <PyInit__testcapi@@Base+0x987c>
   12a04:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12a08:	ldr	x0, [x8, #3552]
   12a0c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12a10:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12a14:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12a18:	add	x1, x1, #0xba2
   12a1c:	add	x2, x2, #0x5d1
   12a20:	add	x3, x3, #0x190
   12a24:	bl	8e60 <PyErr_Format@plt>
   12a28:	mov	x0, xzr
   12a2c:	ldr	x19, [sp, #16]
   12a30:	ldp	x29, x30, [sp], #32
   12a34:	ret
   12a38:	add	x0, x29, #0x18
   12a3c:	bl	8350 <PyThread_tss_create@plt>
   12a40:	cbz	w0, 12a6c <PyInit__testcapi@@Base+0x98b0>
   12a44:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12a48:	ldr	x8, [x8, #3928]
   12a4c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12a50:	add	x1, x1, #0x1c7
   12a54:	ldr	x0, [x8]
   12a58:	bl	8670 <PyErr_SetString@plt>
   12a5c:	mov	x0, xzr
   12a60:	ldr	x19, [sp, #16]
   12a64:	ldp	x29, x30, [sp], #32
   12a68:	ret
   12a6c:	add	x0, x29, #0x18
   12a70:	bl	8520 <PyThread_tss_is_created@plt>
   12a74:	cbz	w0, 12aa8 <PyInit__testcapi@@Base+0x98ec>
   12a78:	add	x0, x29, #0x18
   12a7c:	bl	8350 <PyThread_tss_create@plt>
   12a80:	cbz	w0, 12acc <PyInit__testcapi@@Base+0x9910>
   12a84:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12a88:	ldr	x0, [x8, #3552]
   12a8c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12a90:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12a94:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12a98:	add	x1, x1, #0xba2
   12a9c:	add	x2, x2, #0x5d1
   12aa0:	add	x3, x3, #0x22c
   12aa4:	b	12a24 <PyInit__testcapi@@Base+0x9868>
   12aa8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12aac:	ldr	x0, [x8, #3552]
   12ab0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12ab4:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12ab8:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12abc:	add	x1, x1, #0xba2
   12ac0:	add	x2, x2, #0x5d1
   12ac4:	add	x3, x3, #0x1e2
   12ac8:	b	12a24 <PyInit__testcapi@@Base+0x9868>
   12acc:	add	x0, x29, #0x18
   12ad0:	mov	x1, xzr
   12ad4:	bl	8c00 <PyThread_tss_set@plt>
   12ad8:	add	x0, x29, #0x18
   12adc:	bl	8520 <PyThread_tss_is_created@plt>
   12ae0:	cbz	w0, 12b30 <PyInit__testcapi@@Base+0x9974>
   12ae4:	add	x0, x29, #0x18
   12ae8:	bl	8f10 <PyThread_tss_get@plt>
   12aec:	add	x0, x29, #0x18
   12af0:	bl	8520 <PyThread_tss_is_created@plt>
   12af4:	cbz	w0, 12b54 <PyInit__testcapi@@Base+0x9998>
   12af8:	add	x0, x29, #0x18
   12afc:	bl	8d90 <PyThread_tss_delete@plt>
   12b00:	add	x0, x29, #0x18
   12b04:	bl	8520 <PyThread_tss_is_created@plt>
   12b08:	cbz	w0, 12b78 <PyInit__testcapi@@Base+0x99bc>
   12b0c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12b10:	ldr	x0, [x8, #3552]
   12b14:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b18:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b1c:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12b20:	add	x1, x1, #0xba2
   12b24:	add	x2, x2, #0x5d1
   12b28:	add	x3, x3, #0x323
   12b2c:	b	12a24 <PyInit__testcapi@@Base+0x9868>
   12b30:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12b34:	ldr	x0, [x8, #3552]
   12b38:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b3c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b40:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12b44:	add	x1, x1, #0xba2
   12b48:	add	x2, x2, #0x5d1
   12b4c:	add	x3, x3, #0x26d
   12b50:	b	12a24 <PyInit__testcapi@@Base+0x9868>
   12b54:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12b58:	ldr	x0, [x8, #3552]
   12b5c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b60:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b64:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12b68:	add	x1, x1, #0xba2
   12b6c:	add	x2, x2, #0x5d1
   12b70:	add	x3, x3, #0x2cb
   12b74:	b	12a24 <PyInit__testcapi@@Base+0x9868>
   12b78:	bl	8ba0 <PyThread_tss_alloc@plt>
   12b7c:	cbz	x0, 12bb0 <PyInit__testcapi@@Base+0x99f4>
   12b80:	mov	x19, x0
   12b84:	bl	8520 <PyThread_tss_is_created@plt>
   12b88:	cbz	w0, 12bc4 <PyInit__testcapi@@Base+0x9a08>
   12b8c:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12b90:	ldr	x0, [x8, #3552]
   12b94:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b98:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12b9c:	adrp	x3, 17000 <PyInit__testcapi@@Base+0xde44>
   12ba0:	add	x1, x1, #0xba2
   12ba4:	add	x2, x2, #0x5d1
   12ba8:	add	x3, x3, #0x388
   12bac:	b	12a24 <PyInit__testcapi@@Base+0x9868>
   12bb0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12bb4:	ldr	x8, [x8, #3928]
   12bb8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12bbc:	add	x1, x1, #0x36e
   12bc0:	b	12a54 <PyInit__testcapi@@Base+0x9898>
   12bc4:	mov	x0, x19
   12bc8:	bl	83a0 <PyThread_tss_free@plt>
   12bcc:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   12bd0:	ldr	x0, [x0, #4016]
   12bd4:	ldr	x8, [x0]
   12bd8:	add	x8, x8, #0x1
   12bdc:	str	x8, [x0]
   12be0:	ldr	x19, [sp, #16]
   12be4:	ldp	x29, x30, [sp], #32
   12be8:	ret
   12bec:	b	8da0 <_PyContext_NewHamtForTests@plt>
   12bf0:	sub	sp, sp, #0x30
   12bf4:	stp	x29, x30, [sp, #32]
   12bf8:	add	x29, sp, #0x20
   12bfc:	mov	x8, x2
   12c00:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   12c04:	mov	x0, x1
   12c08:	add	x2, x2, #0x5f2
   12c0c:	sub	x5, x29, #0x8
   12c10:	add	x6, sp, #0x10
   12c14:	add	x7, sp, #0x8
   12c18:	mov	w3, #0x3                   	// #3
   12c1c:	mov	w4, #0x3                   	// #3
   12c20:	mov	x1, x8
   12c24:	bl	8710 <_PyArg_UnpackStack@plt>
   12c28:	cbz	w0, 12c64 <PyInit__testcapi@@Base+0x9aa8>
   12c2c:	ldr	x0, [sp, #8]
   12c30:	mov	x1, xzr
   12c34:	bl	89e0 <PyObject_CallObject@plt>
   12c38:	cbz	x0, 12c58 <PyInit__testcapi@@Base+0x9a9c>
   12c3c:	ldr	x8, [x0]
   12c40:	subs	x8, x8, #0x1
   12c44:	str	x8, [x0]
   12c48:	b.ne	12c50 <PyInit__testcapi@@Base+0x9a94>  // b.any
   12c4c:	bl	8560 <_Py_Dealloc@plt>
   12c50:	ldur	x0, [x29, #-8]
   12c54:	bl	8db0 <PyObject_Repr@plt>
   12c58:	ldp	x29, x30, [sp, #32]
   12c5c:	add	sp, sp, #0x30
   12c60:	ret
   12c64:	mov	x0, xzr
   12c68:	ldp	x29, x30, [sp, #32]
   12c6c:	add	sp, sp, #0x30
   12c70:	ret
   12c74:	sub	sp, sp, #0x50
   12c78:	stp	x29, x30, [sp, #48]
   12c7c:	stp	x20, x19, [sp, #64]
   12c80:	add	x29, sp, #0x30
   12c84:	mov	x0, x1
   12c88:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12c8c:	add	x1, x1, #0x3c1
   12c90:	sub	x2, x29, #0x8
   12c94:	sub	x3, x29, #0xc
   12c98:	add	x4, sp, #0x18
   12c9c:	stur	wzr, [x29, #-12]
   12ca0:	str	xzr, [sp, #24]
   12ca4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   12ca8:	cbz	w0, 12d70 <PyInit__testcapi@@Base+0x9bb4>
   12cac:	ldur	x0, [x29, #-8]
   12cb0:	mov	x1, xzr
   12cb4:	bl	8c70 <PyUnicode_AsWideCharString@plt>
   12cb8:	mov	x19, x0
   12cbc:	cbz	x0, 12d74 <PyInit__testcapi@@Base+0x9bb8>
   12cc0:	ldr	x0, [sp, #24]
   12cc4:	bl	83c0 <_Py_GetErrorHandler@plt>
   12cc8:	ldur	w4, [x29, #-12]
   12ccc:	mov	w5, w0
   12cd0:	add	x1, sp, #0x10
   12cd4:	add	x2, sp, #0x8
   12cd8:	mov	x3, sp
   12cdc:	mov	x0, x19
   12ce0:	str	xzr, [sp, #16]
   12ce4:	str	xzr, [sp]
   12ce8:	bl	8340 <_Py_EncodeLocaleEx@plt>
   12cec:	mov	w20, w0
   12cf0:	mov	x0, x19
   12cf4:	bl	83d0 <PyMem_Free@plt>
   12cf8:	add	w8, w20, #0x3
   12cfc:	cmp	w8, #0x3
   12d00:	b.hi	12d30 <PyInit__testcapi@@Base+0x9b74>  // b.pmore
   12d04:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae44>
   12d08:	add	x9, x9, #0x90
   12d0c:	adr	x10, 12d1c <PyInit__testcapi@@Base+0x9b60>
   12d10:	ldrb	w11, [x9, x8]
   12d14:	add	x10, x10, x11, lsl #2
   12d18:	br	x10
   12d1c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12d20:	ldr	x8, [x8, #3944]
   12d24:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12d28:	add	x1, x1, #0x3e7
   12d2c:	b	12d40 <PyInit__testcapi@@Base+0x9b84>
   12d30:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12d34:	ldr	x8, [x8, #3944]
   12d38:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12d3c:	add	x1, x1, #0x401
   12d40:	ldr	x0, [x8]
   12d44:	bl	8670 <PyErr_SetString@plt>
   12d48:	b	12d70 <PyInit__testcapi@@Base+0x9bb4>
   12d4c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12d50:	ldr	x8, [x8, #3928]
   12d54:	ldp	x3, x2, [sp]
   12d58:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12d5c:	add	x1, x1, #0x3c6
   12d60:	ldr	x0, [x8]
   12d64:	bl	8e60 <PyErr_Format@plt>
   12d68:	b	12d70 <PyInit__testcapi@@Base+0x9bb4>
   12d6c:	bl	8570 <PyErr_NoMemory@plt>
   12d70:	mov	x19, xzr
   12d74:	mov	x0, x19
   12d78:	ldp	x20, x19, [sp, #64]
   12d7c:	ldp	x29, x30, [sp, #48]
   12d80:	add	sp, sp, #0x50
   12d84:	ret
   12d88:	ldr	x0, [sp, #16]
   12d8c:	bl	8970 <PyBytes_FromString@plt>
   12d90:	ldr	x8, [sp, #16]
   12d94:	mov	x19, x0
   12d98:	mov	x0, x8
   12d9c:	bl	8a10 <PyMem_RawFree@plt>
   12da0:	b	12d74 <PyInit__testcapi@@Base+0x9bb8>
   12da4:	sub	sp, sp, #0x50
   12da8:	stp	x29, x30, [sp, #48]
   12dac:	str	x19, [sp, #64]
   12db0:	add	x29, sp, #0x30
   12db4:	mov	x0, x1
   12db8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12dbc:	add	x1, x1, #0x413
   12dc0:	add	x2, x29, #0x18
   12dc4:	sub	x3, x29, #0x4
   12dc8:	sub	x4, x29, #0x10
   12dcc:	stur	wzr, [x29, #-4]
   12dd0:	stur	xzr, [x29, #-16]
   12dd4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   12dd8:	cbz	w0, 12e80 <PyInit__testcapi@@Base+0x9cc4>
   12ddc:	ldur	x0, [x29, #-16]
   12de0:	bl	83c0 <_Py_GetErrorHandler@plt>
   12de4:	mov	w5, w0
   12de8:	ldr	x0, [x29, #24]
   12dec:	ldur	w4, [x29, #-4]
   12df0:	add	x1, sp, #0x18
   12df4:	add	x2, sp, #0x10
   12df8:	add	x3, sp, #0x8
   12dfc:	stp	xzr, xzr, [sp, #16]
   12e00:	str	xzr, [sp, #8]
   12e04:	bl	87a0 <_Py_DecodeLocaleEx@plt>
   12e08:	add	w8, w0, #0x3
   12e0c:	cmp	w8, #0x3
   12e10:	b.hi	12e40 <PyInit__testcapi@@Base+0x9c84>  // b.pmore
   12e14:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae44>
   12e18:	add	x9, x9, #0x94
   12e1c:	adr	x10, 12e2c <PyInit__testcapi@@Base+0x9c70>
   12e20:	ldrb	w11, [x9, x8]
   12e24:	add	x10, x10, x11, lsl #2
   12e28:	br	x10
   12e2c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12e30:	ldr	x8, [x8, #3944]
   12e34:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12e38:	add	x1, x1, #0x3e7
   12e3c:	b	12e50 <PyInit__testcapi@@Base+0x9c94>
   12e40:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12e44:	ldr	x8, [x8, #3944]
   12e48:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12e4c:	add	x1, x1, #0x401
   12e50:	ldr	x0, [x8]
   12e54:	bl	8670 <PyErr_SetString@plt>
   12e58:	b	12e80 <PyInit__testcapi@@Base+0x9cc4>
   12e5c:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   12e60:	ldr	x8, [x8, #3928]
   12e64:	ldp	x3, x2, [sp, #8]
   12e68:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12e6c:	add	x1, x1, #0x418
   12e70:	ldr	x0, [x8]
   12e74:	bl	8e60 <PyErr_Format@plt>
   12e78:	b	12e80 <PyInit__testcapi@@Base+0x9cc4>
   12e7c:	bl	8570 <PyErr_NoMemory@plt>
   12e80:	mov	x19, xzr
   12e84:	mov	x0, x19
   12e88:	ldr	x19, [sp, #64]
   12e8c:	ldp	x29, x30, [sp, #48]
   12e90:	add	sp, sp, #0x50
   12e94:	ret
   12e98:	ldp	x1, x0, [sp, #16]
   12e9c:	bl	8400 <PyUnicode_FromWideChar@plt>
   12ea0:	ldr	x8, [sp, #24]
   12ea4:	mov	x19, x0
   12ea8:	mov	x0, x8
   12eac:	bl	8a10 <PyMem_RawFree@plt>
   12eb0:	b	12e84 <PyInit__testcapi@@Base+0x9cc8>
   12eb4:	sub	sp, sp, #0x40
   12eb8:	stp	x29, x30, [sp, #32]
   12ebc:	stp	x20, x19, [sp, #48]
   12ec0:	add	x29, sp, #0x20
   12ec4:	mov	x0, x1
   12ec8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   12ecc:	add	x1, x1, #0x104
   12ed0:	sub	x2, x29, #0x8
   12ed4:	add	x3, sp, #0x10
   12ed8:	add	x4, sp, #0x8
   12edc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   12ee0:	cbz	w0, 12f04 <PyInit__testcapi@@Base+0x9d48>
   12ee4:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de44>
   12ee8:	ldr	x0, [sp, #16]
   12eec:	ldr	x19, [x19, #4016]
   12ef0:	cmp	x0, x19
   12ef4:	b.eq	12f0c <PyInit__testcapi@@Base+0x9d50>  // b.none
   12ef8:	bl	8ca0 <PyUnicode_AsUTF8@plt>
   12efc:	mov	x20, x0
   12f00:	cbnz	x0, 12f10 <PyInit__testcapi@@Base+0x9d54>
   12f04:	mov	x19, xzr
   12f08:	b	12f34 <PyInit__testcapi@@Base+0x9d78>
   12f0c:	mov	x20, xzr
   12f10:	ldur	x1, [x29, #-8]
   12f14:	ldr	x0, [x1, #8]
   12f18:	bl	8580 <PyErr_SetObject@plt>
   12f1c:	ldr	x1, [sp, #8]
   12f20:	mov	x0, x20
   12f24:	bl	89c0 <_PyErr_WriteUnraisableMsg@plt>
   12f28:	ldr	x8, [x19]
   12f2c:	add	x8, x8, #0x1
   12f30:	str	x8, [x19]
   12f34:	mov	x0, x19
   12f38:	ldp	x20, x19, [sp, #48]
   12f3c:	ldp	x29, x30, [sp, #32]
   12f40:	add	sp, sp, #0x40
   12f44:	ret
   12f48:	stp	x29, x30, [sp, #-32]!
   12f4c:	str	x19, [sp, #16]
   12f50:	mov	x29, sp
   12f54:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12f58:	ldr	w9, [x8, #3540]
   12f5c:	mov	x19, x0
   12f60:	add	w9, w9, #0x1
   12f64:	str	w9, [x8, #3540]
   12f68:	bl	8b50 <PyCapsule_GetContext@plt>
   12f6c:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12f70:	add	x8, x8, #0x675
   12f74:	cmp	x0, x8
   12f78:	b.eq	12f88 <PyInit__testcapi@@Base+0x9dcc>  // b.none
   12f7c:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12f80:	add	x8, x8, #0x5d8
   12f84:	b	12ff8 <PyInit__testcapi@@Base+0x9e3c>
   12f88:	mov	x0, x19
   12f8c:	bl	8ec0 <PyCapsule_GetDestructor@plt>
   12f90:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   12f94:	add	x8, x8, #0xf48
   12f98:	cmp	x0, x8
   12f9c:	b.eq	12fac <PyInit__testcapi@@Base+0x9df0>  // b.none
   12fa0:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12fa4:	add	x8, x8, #0x5fd
   12fa8:	b	12ff8 <PyInit__testcapi@@Base+0x9e3c>
   12fac:	mov	x0, x19
   12fb0:	bl	8440 <PyCapsule_GetName@plt>
   12fb4:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12fb8:	add	x8, x8, #0x5cb
   12fbc:	cmp	x0, x8
   12fc0:	b.eq	12fd0 <PyInit__testcapi@@Base+0x9e14>  // b.none
   12fc4:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12fc8:	add	x8, x8, #0x62e
   12fcc:	b	12ff8 <PyInit__testcapi@@Base+0x9e3c>
   12fd0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12fd4:	add	x1, x1, #0x5cb
   12fd8:	mov	x0, x19
   12fdc:	bl	8e70 <PyCapsule_GetPointer@plt>
   12fe0:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12fe4:	add	x8, x8, #0x5bb
   12fe8:	cmp	x0, x8
   12fec:	b.eq	13000 <PyInit__testcapi@@Base+0x9e44>  // b.none
   12ff0:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12ff4:	add	x8, x8, #0x650
   12ff8:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
   12ffc:	str	x8, [x9, #3568]
   13000:	ldr	x19, [sp, #16]
   13004:	ldp	x29, x30, [sp], #32
   13008:	ret
   1300c:	stp	x29, x30, [sp, #-32]!
   13010:	stp	x20, x19, [sp, #16]
   13014:	mov	x29, sp
   13018:	mov	x19, x0
   1301c:	mov	x0, xzr
   13020:	bl	82a0 <PyList_New@plt>
   13024:	cbz	x0, 130a8 <PyInit__testcapi@@Base+0x9eec>
   13028:	ldr	x8, [x0]
   1302c:	mov	x20, x0
   13030:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
   13034:	add	x1, x1, #0x138
   13038:	add	x8, x8, #0x1
   1303c:	str	x8, [x0]
   13040:	mov	x0, x19
   13044:	mov	x2, xzr
   13048:	mov	x3, x20
   1304c:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   13050:	cbz	x0, 130a8 <PyInit__testcapi@@Base+0x9eec>
   13054:	ldr	x8, [x0]
   13058:	subs	x8, x8, #0x1
   1305c:	str	x8, [x0]
   13060:	b.eq	130b8 <PyInit__testcapi@@Base+0x9efc>  // b.none
   13064:	ldr	x8, [x20]
   13068:	cmp	x8, #0x1
   1306c:	b.ne	130c8 <PyInit__testcapi@@Base+0x9f0c>  // b.any
   13070:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
   13074:	mov	w8, #0x2                   	// #2
   13078:	add	x1, x1, #0x150
   1307c:	mov	x0, x19
   13080:	mov	x2, xzr
   13084:	mov	x3, x20
   13088:	str	x8, [x20]
   1308c:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   13090:	cbz	x0, 130f0 <PyInit__testcapi@@Base+0x9f34>
   13094:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13098:	ldr	x0, [x8, #3552]
   1309c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   130a0:	add	x1, x1, #0x797
   130a4:	b	130d8 <PyInit__testcapi@@Base+0x9f1c>
   130a8:	mov	w0, #0xffffffff            	// #-1
   130ac:	ldp	x20, x19, [sp, #16]
   130b0:	ldp	x29, x30, [sp], #32
   130b4:	ret
   130b8:	bl	8560 <_Py_Dealloc@plt>
   130bc:	ldr	x8, [x20]
   130c0:	cmp	x8, #0x1
   130c4:	b.eq	13070 <PyInit__testcapi@@Base+0x9eb4>  // b.none
   130c8:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   130cc:	ldr	x0, [x8, #3552]
   130d0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   130d4:	add	x1, x1, #0x74d
   130d8:	mov	x2, x19
   130dc:	bl	8e60 <PyErr_Format@plt>
   130e0:	mov	w0, #0xffffffff            	// #-1
   130e4:	ldp	x20, x19, [sp, #16]
   130e8:	ldp	x29, x30, [sp], #32
   130ec:	ret
   130f0:	bl	8980 <PyErr_Occurred@plt>
   130f4:	cbz	x0, 13094 <PyInit__testcapi@@Base+0x9ed8>
   130f8:	bl	88c0 <PyErr_Clear@plt>
   130fc:	ldr	x8, [x20]
   13100:	cmp	x8, #0x1
   13104:	b.ne	13124 <PyInit__testcapi@@Base+0x9f68>  // b.any
   13108:	mov	x0, x20
   1310c:	str	xzr, [x20]
   13110:	bl	8560 <_Py_Dealloc@plt>
   13114:	mov	w0, wzr
   13118:	ldp	x20, x19, [sp, #16]
   1311c:	ldp	x29, x30, [sp], #32
   13120:	ret
   13124:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13128:	ldr	x0, [x8, #3552]
   1312c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   13130:	add	x1, x1, #0x7ce
   13134:	b	130d8 <PyInit__testcapi@@Base+0x9f1c>
   13138:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   1313c:	ldr	x0, [x0, #4016]
   13140:	ldr	x8, [x0]
   13144:	add	x8, x8, #0x1
   13148:	str	x8, [x0]
   1314c:	ret
   13150:	stp	x29, x30, [sp, #-16]!
   13154:	mov	x29, sp
   13158:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   1315c:	ldr	x8, [x8, #3944]
   13160:	ldr	x0, [x8]
   13164:	bl	8750 <PyErr_SetNone@plt>
   13168:	mov	x0, xzr
   1316c:	ldp	x29, x30, [sp], #16
   13170:	ret
   13174:	stp	x29, x30, [sp, #-32]!
   13178:	stp	x20, x19, [sp, #16]
   1317c:	mov	x29, sp
   13180:	mov	x20, x0
   13184:	bl	86e0 <PyGILState_Ensure@plt>
   13188:	ldr	x8, [x20, #8]
   1318c:	mov	w19, w0
   13190:	ldrb	w9, [x8, #169]
   13194:	tbz	w9, #3, 131d0 <PyInit__testcapi@@Base+0xa014>
   13198:	ldr	x8, [x8, #56]
   1319c:	ldr	x8, [x20, x8]
   131a0:	cbz	x8, 131d0 <PyInit__testcapi@@Base+0xa014>
   131a4:	mov	x0, x20
   131a8:	mov	x1, xzr
   131ac:	mov	x2, xzr
   131b0:	mov	x3, xzr
   131b4:	blr	x8
   131b8:	mov	x1, x0
   131bc:	mov	x0, x20
   131c0:	mov	x2, xzr
   131c4:	bl	8a80 <_Py_CheckFunctionResult@plt>
   131c8:	cbnz	x0, 131e8 <PyInit__testcapi@@Base+0xa02c>
   131cc:	b	131fc <PyInit__testcapi@@Base+0xa040>
   131d0:	mov	x0, x20
   131d4:	mov	x1, xzr
   131d8:	mov	x2, xzr
   131dc:	mov	x3, xzr
   131e0:	bl	8f00 <_PyObject_MakeTpCall@plt>
   131e4:	cbz	x0, 131fc <PyInit__testcapi@@Base+0xa040>
   131e8:	ldr	x8, [x0]
   131ec:	subs	x8, x8, #0x1
   131f0:	str	x8, [x0]
   131f4:	b.ne	131fc <PyInit__testcapi@@Base+0xa040>  // b.any
   131f8:	bl	8560 <_Py_Dealloc@plt>
   131fc:	mov	w0, w19
   13200:	bl	8360 <PyGILState_Release@plt>
   13204:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13208:	ldr	x0, [x8, #3528]
   1320c:	ldp	x20, x19, [sp, #16]
   13210:	ldp	x29, x30, [sp], #32
   13214:	b	8b90 <PyThread_release_lock@plt>
   13218:	stp	x29, x30, [sp, #-32]!
   1321c:	stp	x20, x19, [sp, #16]
   13220:	mov	x29, sp
   13224:	ldr	x8, [x0, #8]
   13228:	mov	x19, x0
   1322c:	ldrb	w9, [x8, #169]
   13230:	tbz	w9, #3, 13268 <PyInit__testcapi@@Base+0xa0ac>
   13234:	ldr	x8, [x8, #56]
   13238:	ldr	x8, [x19, x8]
   1323c:	cbz	x8, 13268 <PyInit__testcapi@@Base+0xa0ac>
   13240:	mov	x0, x19
   13244:	mov	x1, xzr
   13248:	mov	x2, xzr
   1324c:	mov	x3, xzr
   13250:	blr	x8
   13254:	mov	x1, x0
   13258:	mov	x0, x19
   1325c:	mov	x2, xzr
   13260:	bl	8a80 <_Py_CheckFunctionResult@plt>
   13264:	b	1327c <PyInit__testcapi@@Base+0xa0c0>
   13268:	mov	x0, x19
   1326c:	mov	x1, xzr
   13270:	mov	x2, xzr
   13274:	mov	x3, xzr
   13278:	bl	8f00 <_PyObject_MakeTpCall@plt>
   1327c:	ldr	x8, [x19]
   13280:	mov	x20, x0
   13284:	subs	x8, x8, #0x1
   13288:	str	x8, [x19]
   1328c:	b.eq	13298 <PyInit__testcapi@@Base+0xa0dc>  // b.none
   13290:	cbnz	x20, 132a4 <PyInit__testcapi@@Base+0xa0e8>
   13294:	b	132bc <PyInit__testcapi@@Base+0xa100>
   13298:	mov	x0, x19
   1329c:	bl	8560 <_Py_Dealloc@plt>
   132a0:	cbz	x20, 132bc <PyInit__testcapi@@Base+0xa100>
   132a4:	ldr	x8, [x20]
   132a8:	subs	x8, x8, #0x1
   132ac:	str	x8, [x20]
   132b0:	b.ne	132bc <PyInit__testcapi@@Base+0xa100>  // b.any
   132b4:	mov	x0, x20
   132b8:	bl	8560 <_Py_Dealloc@plt>
   132bc:	cmp	x20, #0x0
   132c0:	ldp	x20, x19, [sp, #16]
   132c4:	csetm	w0, eq  // eq = none
   132c8:	ldp	x29, x30, [sp], #32
   132cc:	ret
   132d0:	adrp	x8, 2b000 <PyInit__testcapi@@Base+0x21e44>
   132d4:	add	x8, x8, #0xdf8
   132d8:	ldr	x9, [x8, #8]
   132dc:	mov	w0, wzr
   132e0:	str	x9, [x8]
   132e4:	ldr	x8, [x9]
   132e8:	add	x8, x8, #0x1
   132ec:	str	x8, [x9]
   132f0:	ret
   132f4:	sub	sp, sp, #0x40
   132f8:	stp	x29, x30, [sp, #32]
   132fc:	stp	x20, x19, [sp, #48]
   13300:	add	x29, sp, #0x20
   13304:	mov	w8, #0x1                   	// #1
   13308:	mov	x19, x0
   1330c:	str	x8, [x0]
   13310:	sub	x0, x29, #0x8
   13314:	add	x1, sp, #0x10
   13318:	add	x2, sp, #0x8
   1331c:	bl	8ce0 <PyErr_Fetch@plt>
   13320:	adrp	x1, 29000 <PyInit__testcapi@@Base+0x1fe44>
   13324:	add	x1, x1, #0xfd0
   13328:	mov	x0, x19
   1332c:	bl	86f0 <_PyObject_LookupSpecial@plt>
   13330:	cbz	x0, 133d4 <PyInit__testcapi@@Base+0xa218>
   13334:	ldr	x8, [x0, #8]
   13338:	mov	x20, x0
   1333c:	ldrb	w9, [x8, #169]
   13340:	tbz	w9, #3, 13394 <PyInit__testcapi@@Base+0xa1d8>
   13344:	ldr	x8, [x8, #56]
   13348:	ldr	x8, [x20, x8]
   1334c:	cbz	x8, 13394 <PyInit__testcapi@@Base+0xa1d8>
   13350:	mov	x0, x20
   13354:	mov	x1, xzr
   13358:	mov	x2, xzr
   1335c:	mov	x3, xzr
   13360:	blr	x8
   13364:	mov	x1, x0
   13368:	mov	x0, x20
   1336c:	mov	x2, xzr
   13370:	bl	8a80 <_Py_CheckFunctionResult@plt>
   13374:	cbnz	x0, 133ac <PyInit__testcapi@@Base+0xa1f0>
   13378:	mov	x0, x20
   1337c:	bl	9080 <PyErr_WriteUnraisable@plt>
   13380:	ldr	x8, [x20]
   13384:	subs	x8, x8, #0x1
   13388:	str	x8, [x20]
   1338c:	b.ne	133d4 <PyInit__testcapi@@Base+0xa218>  // b.any
   13390:	b	133cc <PyInit__testcapi@@Base+0xa210>
   13394:	mov	x0, x20
   13398:	mov	x1, xzr
   1339c:	mov	x2, xzr
   133a0:	mov	x3, xzr
   133a4:	bl	8f00 <_PyObject_MakeTpCall@plt>
   133a8:	cbz	x0, 13378 <PyInit__testcapi@@Base+0xa1bc>
   133ac:	ldr	x8, [x0]
   133b0:	subs	x8, x8, #0x1
   133b4:	str	x8, [x0]
   133b8:	b.eq	1341c <PyInit__testcapi@@Base+0xa260>  // b.none
   133bc:	ldr	x8, [x20]
   133c0:	subs	x8, x8, #0x1
   133c4:	str	x8, [x20]
   133c8:	b.ne	133d4 <PyInit__testcapi@@Base+0xa218>  // b.any
   133cc:	mov	x0, x20
   133d0:	bl	8560 <_Py_Dealloc@plt>
   133d4:	ldur	x0, [x29, #-8]
   133d8:	ldp	x2, x1, [sp, #8]
   133dc:	bl	8380 <PyErr_Restore@plt>
   133e0:	ldr	x8, [x19]
   133e4:	subs	x20, x8, #0x1
   133e8:	str	x20, [x19]
   133ec:	b.eq	1340c <PyInit__testcapi@@Base+0xa250>  // b.none
   133f0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   133f4:	ldr	x8, [x8, #3968]
   133f8:	ldr	w8, [x8, #4]
   133fc:	cbz	w8, 13408 <PyInit__testcapi@@Base+0xa24c>
   13400:	mov	x0, x19
   13404:	bl	8c10 <_PyTraceMalloc_NewReference@plt>
   13408:	str	x20, [x19]
   1340c:	ldp	x20, x19, [sp, #48]
   13410:	ldp	x29, x30, [sp, #32]
   13414:	add	sp, sp, #0x40
   13418:	ret
   1341c:	bl	8560 <_Py_Dealloc@plt>
   13420:	ldr	x8, [x20]
   13424:	subs	x8, x8, #0x1
   13428:	str	x8, [x20]
   1342c:	b.ne	133d4 <PyInit__testcapi@@Base+0xa218>  // b.any
   13430:	b	133cc <PyInit__testcapi@@Base+0xa210>
   13434:	sub	sp, sp, #0xc0
   13438:	stp	x29, x30, [sp, #144]
   1343c:	str	x21, [sp, #160]
   13440:	stp	x20, x19, [sp, #176]
   13444:	add	x29, sp, #0x90
   13448:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e44>
   1344c:	add	x8, sp, #0x30
   13450:	add	x9, x9, #0x788
   13454:	adrp	x10, 13000 <PyInit__testcapi@@Base+0x9e44>
   13458:	stp	x8, x9, [sp, #8]
   1345c:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
   13460:	add	x10, x10, #0x79c
   13464:	add	x8, x8, #0x7b4
   13468:	stp	x10, x8, [sp, #24]
   1346c:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
   13470:	movi	v0.2d, #0x0
   13474:	add	x8, x8, #0x7cc
   13478:	add	x1, sp, #0x30
   1347c:	mov	w19, w0
   13480:	stp	q0, q0, [sp, #48]
   13484:	stp	q0, q0, [sp, #80]
   13488:	stp	q0, q0, [sp, #112]
   1348c:	str	x8, [sp, #40]
   13490:	bl	8b70 <PyMem_GetAllocator@plt>
   13494:	add	x1, sp, #0x8
   13498:	mov	w0, w19
   1349c:	bl	8700 <PyMem_SetAllocator@plt>
   134a0:	cmp	w19, #0x2
   134a4:	str	xzr, [sp, #136]
   134a8:	b.eq	134cc <PyInit__testcapi@@Base+0xa310>  // b.none
   134ac:	cmp	w19, #0x1
   134b0:	b.eq	134e8 <PyInit__testcapi@@Base+0xa32c>  // b.none
   134b4:	cbnz	w19, 134dc <PyInit__testcapi@@Base+0xa320>
   134b8:	mov	w0, #0x2a                  	// #42
   134bc:	bl	84d0 <PyMem_RawMalloc@plt>
   134c0:	mov	x20, x0
   134c4:	cbnz	x0, 134f8 <PyInit__testcapi@@Base+0xa33c>
   134c8:	b	134dc <PyInit__testcapi@@Base+0xa320>
   134cc:	mov	w0, #0x2a                  	// #42
   134d0:	bl	86c0 <PyObject_Malloc@plt>
   134d4:	mov	x20, x0
   134d8:	cbnz	x0, 134f8 <PyInit__testcapi@@Base+0xa33c>
   134dc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   134e0:	add	x1, x1, #0xe71
   134e4:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   134e8:	mov	w0, #0x2a                  	// #42
   134ec:	bl	8fc0 <PyMem_Malloc@plt>
   134f0:	mov	x20, x0
   134f4:	cbz	x0, 134dc <PyInit__testcapi@@Base+0xa320>
   134f8:	ldr	x8, [sp, #136]
   134fc:	add	x9, sp, #0x30
   13500:	cmp	x8, x9
   13504:	b.eq	13514 <PyInit__testcapi@@Base+0xa358>  // b.none
   13508:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   1350c:	add	x1, x1, #0xe7f
   13510:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   13514:	ldr	x8, [sp, #88]
   13518:	str	xzr, [sp, #136]
   1351c:	cmp	x8, #0x2a
   13520:	b.ne	13548 <PyInit__testcapi@@Base+0xa38c>  // b.any
   13524:	cmp	w19, #0x2
   13528:	b.eq	13554 <PyInit__testcapi@@Base+0xa398>  // b.none
   1352c:	cmp	w19, #0x1
   13530:	b.eq	13564 <PyInit__testcapi@@Base+0xa3a8>  // b.none
   13534:	cbnz	w19, 13594 <PyInit__testcapi@@Base+0xa3d8>
   13538:	mov	w1, #0xc8                  	// #200
   1353c:	mov	x0, x20
   13540:	bl	9090 <PyMem_RawRealloc@plt>
   13544:	b	13570 <PyInit__testcapi@@Base+0xa3b4>
   13548:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   1354c:	add	x1, x1, #0xe94
   13550:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   13554:	mov	w1, #0xc8                  	// #200
   13558:	mov	x0, x20
   1355c:	bl	8ae0 <PyObject_Realloc@plt>
   13560:	b	13570 <PyInit__testcapi@@Base+0xa3b4>
   13564:	mov	w1, #0xc8                  	// #200
   13568:	mov	x0, x20
   1356c:	bl	8740 <PyMem_Realloc@plt>
   13570:	mov	x21, x0
   13574:	cbz	x0, 13594 <PyInit__testcapi@@Base+0xa3d8>
   13578:	ldr	x8, [sp, #136]
   1357c:	add	x9, sp, #0x30
   13580:	cmp	x8, x9
   13584:	b.eq	135a0 <PyInit__testcapi@@Base+0xa3e4>  // b.none
   13588:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   1358c:	add	x1, x1, #0xeb7
   13590:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   13594:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   13598:	add	x1, x1, #0xea8
   1359c:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   135a0:	ldr	x8, [sp, #112]
   135a4:	str	xzr, [sp, #136]
   135a8:	cmp	x8, x20
   135ac:	b.ne	135dc <PyInit__testcapi@@Base+0xa420>  // b.any
   135b0:	ldr	x8, [sp, #120]
   135b4:	cmp	x8, #0xc8
   135b8:	b.ne	135dc <PyInit__testcapi@@Base+0xa420>  // b.any
   135bc:	cmp	w19, #0x2
   135c0:	b.eq	1361c <PyInit__testcapi@@Base+0xa460>  // b.none
   135c4:	cmp	w19, #0x1
   135c8:	b.eq	13628 <PyInit__testcapi@@Base+0xa46c>  // b.none
   135cc:	cbnz	w19, 13630 <PyInit__testcapi@@Base+0xa474>
   135d0:	mov	x0, x21
   135d4:	bl	8a10 <PyMem_RawFree@plt>
   135d8:	b	13630 <PyInit__testcapi@@Base+0xa474>
   135dc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   135e0:	add	x1, x1, #0xecd
   135e4:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   135e8:	ldr	x8, [x8, #3928]
   135ec:	ldr	x0, [x8]
   135f0:	bl	8670 <PyErr_SetString@plt>
   135f4:	mov	x20, xzr
   135f8:	add	x1, sp, #0x30
   135fc:	mov	w0, w19
   13600:	bl	8700 <PyMem_SetAllocator@plt>
   13604:	mov	x0, x20
   13608:	ldp	x20, x19, [sp, #176]
   1360c:	ldr	x21, [sp, #160]
   13610:	ldp	x29, x30, [sp, #144]
   13614:	add	sp, sp, #0xc0
   13618:	ret
   1361c:	mov	x0, x21
   13620:	bl	87c0 <PyObject_Free@plt>
   13624:	b	13630 <PyInit__testcapi@@Base+0xa474>
   13628:	mov	x0, x21
   1362c:	bl	83d0 <PyMem_Free@plt>
   13630:	ldr	x8, [sp, #136]
   13634:	add	x9, sp, #0x30
   13638:	cmp	x8, x9
   1363c:	b.eq	1364c <PyInit__testcapi@@Base+0xa490>  // b.none
   13640:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   13644:	add	x1, x1, #0xf31
   13648:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   1364c:	ldr	x8, [sp, #128]
   13650:	str	xzr, [sp, #136]
   13654:	cmp	x8, x21
   13658:	b.eq	13668 <PyInit__testcapi@@Base+0xa4ac>  // b.none
   1365c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   13660:	add	x1, x1, #0xf4b
   13664:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   13668:	cmp	w19, #0x2
   1366c:	b.eq	1368c <PyInit__testcapi@@Base+0xa4d0>  // b.none
   13670:	cmp	w19, #0x1
   13674:	b.eq	1369c <PyInit__testcapi@@Base+0xa4e0>  // b.none
   13678:	cbnz	w19, 136cc <PyInit__testcapi@@Base+0xa510>
   1367c:	mov	w0, #0x2                   	// #2
   13680:	mov	w1, #0x5                   	// #5
   13684:	bl	8d30 <PyMem_RawCalloc@plt>
   13688:	b	136a8 <PyInit__testcapi@@Base+0xa4ec>
   1368c:	mov	w0, #0x2                   	// #2
   13690:	mov	w1, #0x5                   	// #5
   13694:	bl	90a0 <PyObject_Calloc@plt>
   13698:	b	136a8 <PyInit__testcapi@@Base+0xa4ec>
   1369c:	mov	w0, #0x2                   	// #2
   136a0:	mov	w1, #0x5                   	// #5
   136a4:	bl	8f20 <PyMem_Calloc@plt>
   136a8:	mov	x20, x0
   136ac:	cbz	x0, 136cc <PyInit__testcapi@@Base+0xa510>
   136b0:	ldr	x8, [sp, #136]
   136b4:	add	x9, sp, #0x30
   136b8:	cmp	x8, x9
   136bc:	b.eq	136d8 <PyInit__testcapi@@Base+0xa51c>  // b.none
   136c0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   136c4:	add	x1, x1, #0xef6
   136c8:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   136cc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   136d0:	add	x1, x1, #0xee8
   136d4:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   136d8:	ldr	x8, [sp, #96]
   136dc:	str	xzr, [sp, #136]
   136e0:	cmp	x8, #0x2
   136e4:	b.ne	13718 <PyInit__testcapi@@Base+0xa55c>  // b.any
   136e8:	ldr	x8, [sp, #104]
   136ec:	cmp	x8, #0x5
   136f0:	b.ne	13718 <PyInit__testcapi@@Base+0xa55c>  // b.any
   136f4:	cmp	w19, #0x2
   136f8:	str	xzr, [sp, #128]
   136fc:	b.eq	13724 <PyInit__testcapi@@Base+0xa568>  // b.none
   13700:	cmp	w19, #0x1
   13704:	b.eq	13730 <PyInit__testcapi@@Base+0xa574>  // b.none
   13708:	cbnz	w19, 13738 <PyInit__testcapi@@Base+0xa57c>
   1370c:	mov	x0, x20
   13710:	bl	8a10 <PyMem_RawFree@plt>
   13714:	b	13738 <PyInit__testcapi@@Base+0xa57c>
   13718:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   1371c:	add	x1, x1, #0xf0b
   13720:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   13724:	mov	x0, x20
   13728:	bl	87c0 <PyObject_Free@plt>
   1372c:	b	13738 <PyInit__testcapi@@Base+0xa57c>
   13730:	mov	x0, x20
   13734:	bl	83d0 <PyMem_Free@plt>
   13738:	ldr	x8, [sp, #136]
   1373c:	add	x9, sp, #0x30
   13740:	cmp	x8, x9
   13744:	b.eq	13754 <PyInit__testcapi@@Base+0xa598>  // b.none
   13748:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   1374c:	add	x1, x1, #0xf2a
   13750:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   13754:	ldr	x8, [sp, #128]
   13758:	str	xzr, [sp, #136]
   1375c:	cmp	x8, x20
   13760:	b.eq	13770 <PyInit__testcapi@@Base+0xa5b4>  // b.none
   13764:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   13768:	add	x1, x1, #0xf44
   1376c:	b	135e4 <PyInit__testcapi@@Base+0xa428>
   13770:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
   13774:	ldr	x20, [x20, #4016]
   13778:	ldr	x8, [x20]
   1377c:	add	x8, x8, #0x1
   13780:	str	x8, [x20]
   13784:	b	135f8 <PyInit__testcapi@@Base+0xa43c>
   13788:	ldp	x8, x2, [x0]
   1378c:	str	x0, [x0, #88]
   13790:	str	x1, [x0, #40]
   13794:	mov	x0, x8
   13798:	br	x2
   1379c:	ldr	x8, [x0]
   137a0:	ldr	x3, [x0, #16]
   137a4:	str	x0, [x0, #88]
   137a8:	stp	x1, x2, [x0, #48]
   137ac:	mov	x0, x8
   137b0:	br	x3
   137b4:	ldr	x8, [x0]
   137b8:	ldr	x3, [x0, #24]
   137bc:	str	x0, [x0, #88]
   137c0:	stp	x1, x2, [x0, #64]
   137c4:	mov	x0, x8
   137c8:	br	x3
   137cc:	ldr	x8, [x0]
   137d0:	ldr	x2, [x0, #32]
   137d4:	stp	x1, x0, [x0, #80]
   137d8:	mov	x0, x8
   137dc:	br	x2
   137e0:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
   137e4:	add	x9, x9, #0xe08
   137e8:	ldr	x8, [x9, #8]
   137ec:	ldrsw	x10, [x9]
   137f0:	add	x8, x8, #0x1
   137f4:	cmp	x8, x10
   137f8:	str	x8, [x9, #8]
   137fc:	b.le	13818 <PyInit__testcapi@@Base+0xa65c>
   13800:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13804:	ldrsw	x9, [x9, #3596]
   13808:	cmp	w9, #0x1
   1380c:	b.lt	13820 <PyInit__testcapi@@Base+0xa664>  // b.tstop
   13810:	cmp	x8, x9
   13814:	b.le	13820 <PyInit__testcapi@@Base+0xa664>
   13818:	ldp	x0, x2, [x0]
   1381c:	br	x2
   13820:	mov	x0, xzr
   13824:	ret
   13828:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
   1382c:	add	x9, x9, #0xe08
   13830:	ldr	x8, [x9, #8]
   13834:	ldrsw	x10, [x9]
   13838:	add	x8, x8, #0x1
   1383c:	cmp	x8, x10
   13840:	str	x8, [x9, #8]
   13844:	b.le	13860 <PyInit__testcapi@@Base+0xa6a4>
   13848:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
   1384c:	ldrsw	x9, [x9, #3596]
   13850:	cmp	w9, #0x1
   13854:	b.lt	1386c <PyInit__testcapi@@Base+0xa6b0>  // b.tstop
   13858:	cmp	x8, x9
   1385c:	b.le	1386c <PyInit__testcapi@@Base+0xa6b0>
   13860:	ldr	x3, [x0, #16]
   13864:	ldr	x0, [x0]
   13868:	br	x3
   1386c:	mov	x0, xzr
   13870:	ret
   13874:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13878:	add	x9, x9, #0xe08
   1387c:	ldr	x8, [x9, #8]
   13880:	ldrsw	x10, [x9]
   13884:	add	x8, x8, #0x1
   13888:	cmp	x8, x10
   1388c:	str	x8, [x9, #8]
   13890:	b.le	138ac <PyInit__testcapi@@Base+0xa6f0>
   13894:	adrp	x9, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13898:	ldrsw	x9, [x9, #3596]
   1389c:	cmp	w9, #0x1
   138a0:	b.lt	138b8 <PyInit__testcapi@@Base+0xa6fc>  // b.tstop
   138a4:	cmp	x8, x9
   138a8:	b.le	138b8 <PyInit__testcapi@@Base+0xa6fc>
   138ac:	ldr	x3, [x0, #24]
   138b0:	ldr	x0, [x0]
   138b4:	br	x3
   138b8:	mov	x0, xzr
   138bc:	ret
   138c0:	ldr	x2, [x0, #32]
   138c4:	ldr	x0, [x0]
   138c8:	br	x2
   138cc:	stp	x29, x30, [sp, #-48]!
   138d0:	str	x21, [sp, #16]
   138d4:	stp	x20, x19, [sp, #32]
   138d8:	mov	x29, sp
   138dc:	mov	x19, x0
   138e0:	ldr	x0, [x0]
   138e4:	bl	8b90 <PyThread_release_lock@plt>
   138e8:	bl	86e0 <PyGILState_Ensure@plt>
   138ec:	ldr	x21, [x19, #16]
   138f0:	mov	w20, w0
   138f4:	ldr	x8, [x21, #8]
   138f8:	ldrb	w9, [x8, #169]
   138fc:	tbz	w9, #3, 1390c <PyInit__testcapi@@Base+0xa750>
   13900:	ldr	x8, [x8, #56]
   13904:	ldr	x8, [x21, x8]
   13908:	cbnz	x8, 13930 <PyInit__testcapi@@Base+0xa774>
   1390c:	mov	x0, x21
   13910:	mov	x1, xzr
   13914:	mov	x2, xzr
   13918:	mov	x3, xzr
   1391c:	bl	8f00 <_PyObject_MakeTpCall@plt>
   13920:	mov	x21, x0
   13924:	ldr	x0, [x19, #16]
   13928:	cbnz	x0, 13960 <PyInit__testcapi@@Base+0xa7a4>
   1392c:	b	13978 <PyInit__testcapi@@Base+0xa7bc>
   13930:	mov	x0, x21
   13934:	mov	x1, xzr
   13938:	mov	x2, xzr
   1393c:	mov	x3, xzr
   13940:	blr	x8
   13944:	mov	x1, x0
   13948:	mov	x0, x21
   1394c:	mov	x2, xzr
   13950:	bl	8a80 <_Py_CheckFunctionResult@plt>
   13954:	mov	x21, x0
   13958:	ldr	x0, [x19, #16]
   1395c:	cbz	x0, 13978 <PyInit__testcapi@@Base+0xa7bc>
   13960:	str	xzr, [x19, #16]
   13964:	ldr	x8, [x0]
   13968:	subs	x8, x8, #0x1
   1396c:	str	x8, [x0]
   13970:	b.ne	13978 <PyInit__testcapi@@Base+0xa7bc>  // b.any
   13974:	bl	8560 <_Py_Dealloc@plt>
   13978:	cbnz	x21, 13984 <PyInit__testcapi@@Base+0xa7c8>
   1397c:	bl	8720 <PyErr_Print@plt>
   13980:	b	1399c <PyInit__testcapi@@Base+0xa7e0>
   13984:	ldr	x8, [x21]
   13988:	subs	x8, x8, #0x1
   1398c:	str	x8, [x21]
   13990:	b.ne	1399c <PyInit__testcapi@@Base+0xa7e0>  // b.any
   13994:	mov	x0, x21
   13998:	bl	8560 <_Py_Dealloc@plt>
   1399c:	mov	w0, w20
   139a0:	bl	8360 <PyGILState_Release@plt>
   139a4:	ldr	x0, [x19, #8]
   139a8:	bl	8b90 <PyThread_release_lock@plt>
   139ac:	bl	8550 <PyThread_exit_thread@plt>
   139b0:	b	87c0 <PyObject_Free@plt>
   139b4:	sub	sp, sp, #0xa0
   139b8:	stp	x29, x30, [sp, #112]
   139bc:	str	x21, [sp, #128]
   139c0:	stp	x20, x19, [sp, #144]
   139c4:	add	x29, sp, #0x70
   139c8:	mov	x20, x2
   139cc:	mov	x21, x1
   139d0:	str	xzr, [x29, #24]
   139d4:	stur	xzr, [x29, #-8]
   139d8:	bl	8cf0 <_PyObject_New@plt>
   139dc:	mov	x19, x0
   139e0:	cbz	x0, 13aec <PyInit__testcapi@@Base+0xa930>
   139e4:	movi	v0.2d, #0x0
   139e8:	mov	x4, x19
   139ec:	str	q0, [x4, #16]!
   139f0:	mov	x11, x4
   139f4:	mov	x8, x4
   139f8:	mov	x9, x4
   139fc:	mov	x10, x4
   13a00:	str	q0, [x11, #64]!
   13a04:	add	x17, x4, #0x48
   13a08:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   13a0c:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
   13a10:	add	x5, x4, #0x1
   13a14:	add	x6, x4, #0x2
   13a18:	add	x7, x4, #0x4
   13a1c:	add	x12, x4, #0x6
   13a20:	add	x13, x4, #0x8
   13a24:	add	x14, x4, #0xc
   13a28:	add	x15, x4, #0x18
   13a2c:	add	x16, x4, #0x28
   13a30:	str	q0, [x8, #16]!
   13a34:	str	q0, [x9, #32]!
   13a38:	str	q0, [x10, #48]!
   13a3c:	stp	x11, x17, [sp, #80]
   13a40:	sub	x11, x29, #0x8
   13a44:	add	x17, x29, #0x18
   13a48:	add	x2, x2, #0x560
   13a4c:	add	x3, x3, #0x288
   13a50:	mov	x0, x21
   13a54:	mov	x1, x20
   13a58:	stp	x16, x10, [sp, #48]
   13a5c:	stp	x15, x9, [sp, #32]
   13a60:	stp	x14, x8, [sp, #16]
   13a64:	stp	x17, x11, [sp, #64]
   13a68:	stp	x12, x13, [sp]
   13a6c:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
   13a70:	cbz	w0, 13abc <PyInit__testcapi@@Base+0xa900>
   13a74:	ldr	x1, [x29, #24]
   13a78:	cbz	x1, 13adc <PyInit__testcapi@@Base+0xa920>
   13a7c:	ldur	x8, [x29, #-8]
   13a80:	cmp	x8, #0x6
   13a84:	b.lt	13ae4 <PyInit__testcapi@@Base+0xa928>  // b.tstop
   13a88:	ldr	x8, [x19]
   13a8c:	subs	x8, x8, #0x1
   13a90:	str	x8, [x19]
   13a94:	b.ne	13aa0 <PyInit__testcapi@@Base+0xa8e4>  // b.any
   13a98:	mov	x0, x19
   13a9c:	bl	8560 <_Py_Dealloc@plt>
   13aa0:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   13aa4:	ldr	x8, [x8, #3944]
   13aa8:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13aac:	add	x1, x1, #0x4fd
   13ab0:	ldr	x0, [x8]
   13ab4:	bl	8670 <PyErr_SetString@plt>
   13ab8:	b	13ad4 <PyInit__testcapi@@Base+0xa918>
   13abc:	ldr	x8, [x19]
   13ac0:	subs	x8, x8, #0x1
   13ac4:	str	x8, [x19]
   13ac8:	b.ne	13ad4 <PyInit__testcapi@@Base+0xa918>  // b.any
   13acc:	mov	x0, x19
   13ad0:	bl	8560 <_Py_Dealloc@plt>
   13ad4:	mov	x19, xzr
   13ad8:	b	13aec <PyInit__testcapi@@Base+0xa930>
   13adc:	strb	wzr, [x19, #72]
   13ae0:	b	13aec <PyInit__testcapi@@Base+0xa930>
   13ae4:	add	x0, x19, #0x48
   13ae8:	bl	8cb0 <strcpy@plt>
   13aec:	mov	x0, x19
   13af0:	ldp	x20, x19, [sp, #144]
   13af4:	ldr	x21, [sp, #128]
   13af8:	ldp	x29, x30, [sp, #112]
   13afc:	add	sp, sp, #0xa0
   13b00:	ret
   13b04:	ldr	x8, [x0, #8]
   13b08:	ldr	x1, [x8, #320]
   13b0c:	br	x1
   13b10:	adrp	x8, 17000 <PyInit__testcapi@@Base+0xde44>
   13b14:	mov	x3, x1
   13b18:	add	x8, x8, #0x539
   13b1c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13b20:	add	x1, x1, #0x540
   13b24:	mov	x2, x0
   13b28:	mov	x0, x8
   13b2c:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   13b30:	adrp	x8, 17000 <PyInit__testcapi@@Base+0xde44>
   13b34:	mov	x3, x1
   13b38:	add	x8, x8, #0x539
   13b3c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13b40:	add	x1, x1, #0x53f
   13b44:	mov	x2, x0
   13b48:	mov	x0, x8
   13b4c:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   13b50:	adrp	x0, 17000 <PyInit__testcapi@@Base+0xde44>
   13b54:	add	x0, x0, #0x105
   13b58:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   13b5c:	stp	x29, x30, [sp, #-32]!
   13b60:	str	x19, [sp, #16]
   13b64:	mov	x29, sp
   13b68:	mov	x19, x0
   13b6c:	ldr	x0, [x0, #16]
   13b70:	cbz	x0, 13b8c <PyInit__testcapi@@Base+0xa9d0>
   13b74:	str	xzr, [x19, #16]
   13b78:	ldr	x8, [x0]
   13b7c:	subs	x8, x8, #0x1
   13b80:	str	x8, [x0]
   13b84:	b.ne	13b8c <PyInit__testcapi@@Base+0xa9d0>  // b.any
   13b88:	bl	8560 <_Py_Dealloc@plt>
   13b8c:	ldr	x8, [x19, #8]
   13b90:	mov	x0, x19
   13b94:	ldr	x19, [sp, #16]
   13b98:	ldr	x1, [x8, #320]
   13b9c:	ldp	x29, x30, [sp], #32
   13ba0:	br	x1
   13ba4:	stp	x29, x30, [sp, #-32]!
   13ba8:	str	x19, [sp, #16]
   13bac:	mov	x29, sp
   13bb0:	mov	x8, x1
   13bb4:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13bb8:	mov	x19, x0
   13bbc:	add	x1, x1, #0x565
   13bc0:	add	x4, x29, #0x18
   13bc4:	mov	w2, #0x1                   	// #1
   13bc8:	mov	w3, #0x1                   	// #1
   13bcc:	mov	x0, x8
   13bd0:	bl	8960 <PyArg_UnpackTuple@plt>
   13bd4:	cbz	w0, 13c0c <PyInit__testcapi@@Base+0xaa50>
   13bd8:	ldr	x8, [x19, #304]
   13bdc:	mov	x0, x19
   13be0:	mov	x1, xzr
   13be4:	blr	x8
   13be8:	cbz	x0, 13c00 <PyInit__testcapi@@Base+0xaa44>
   13bec:	ldr	x8, [x29, #24]
   13bf0:	ldr	x9, [x8]
   13bf4:	add	x9, x9, #0x1
   13bf8:	str	x9, [x8]
   13bfc:	str	x8, [x0, #16]
   13c00:	ldr	x19, [sp, #16]
   13c04:	ldp	x29, x30, [sp], #32
   13c08:	ret
   13c0c:	mov	x0, xzr
   13c10:	ldr	x19, [sp, #16]
   13c14:	ldp	x29, x30, [sp], #32
   13c18:	ret
   13c1c:	ldr	x0, [x0, #16]
   13c20:	ldr	x8, [x0]
   13c24:	add	x8, x8, #0x1
   13c28:	str	x8, [x0]
   13c2c:	ret
   13c30:	stp	x29, x30, [sp, #-16]!
   13c34:	mov	x29, sp
   13c38:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   13c3c:	ldr	x8, [x8, #4064]
   13c40:	ldr	x8, [x8, #312]
   13c44:	blr	x8
   13c48:	str	wzr, [x0, #40]
   13c4c:	ldp	x29, x30, [sp], #16
   13c50:	ret
   13c54:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
   13c58:	ldr	x8, [x8, #4016]
   13c5c:	cmp	x1, x8
   13c60:	b.eq	13c6c <PyInit__testcapi@@Base+0xaab0>  // b.none
   13c64:	cbz	x1, 13c6c <PyInit__testcapi@@Base+0xaab0>
   13c68:	b	86a0 <PyMethod_New@plt>
   13c6c:	ldr	x8, [x0]
   13c70:	add	x8, x8, #0x1
   13c74:	str	x8, [x0]
   13c78:	ret
   13c7c:	stp	x29, x30, [sp, #-16]!
   13c80:	mov	x29, sp
   13c84:	ldr	x8, [x0, #304]
   13c88:	mov	x1, xzr
   13c8c:	blr	x8
   13c90:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
   13c94:	add	x8, x8, #0xca4
   13c98:	str	x8, [x0, #16]
   13c9c:	ldp	x29, x30, [sp], #16
   13ca0:	ret
   13ca4:	ldr	x8, [x0, #16]
   13ca8:	cmp	x8, #0x0
   13cac:	cset	w0, ne  // ne = any
   13cb0:	b	88d0 <PyBool_FromLong@plt>
   13cb4:	ldr	x8, [x1]
   13cb8:	mov	x0, x1
   13cbc:	add	x8, x8, #0x1
   13cc0:	str	x8, [x1]
   13cc4:	ret
   13cc8:	ldr	x8, [x0]
   13ccc:	add	x8, x8, #0x1
   13cd0:	str	x8, [x0]
   13cd4:	ret
   13cd8:	stp	x29, x30, [sp, #-16]!
   13cdc:	mov	x29, sp
   13ce0:	bl	8cf0 <_PyObject_New@plt>
   13ce4:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
   13ce8:	add	x8, x8, #0xca4
   13cec:	stp	xzr, x8, [x0, #16]
   13cf0:	ldp	x29, x30, [sp], #16
   13cf4:	ret
   13cf8:	stp	x29, x30, [sp, #-32]!
   13cfc:	str	x19, [sp, #16]
   13d00:	mov	x29, sp
   13d04:	mov	x19, x0
   13d08:	ldr	x0, [x0, #16]
   13d0c:	cbz	x0, 13d28 <PyInit__testcapi@@Base+0xab6c>
   13d10:	str	xzr, [x19, #16]
   13d14:	ldr	x8, [x0]
   13d18:	subs	x8, x8, #0x1
   13d1c:	str	x8, [x0]
   13d20:	b.ne	13d28 <PyInit__testcapi@@Base+0xab6c>  // b.any
   13d24:	bl	8560 <_Py_Dealloc@plt>
   13d28:	ldr	x8, [x19, #8]
   13d2c:	mov	x0, x19
   13d30:	ldr	x19, [sp, #16]
   13d34:	ldr	x1, [x8, #320]
   13d38:	ldp	x29, x30, [sp], #32
   13d3c:	br	x1
   13d40:	ldr	x1, [x0, #16]
   13d44:	mov	w0, #0x1                   	// #1
   13d48:	b	9040 <PyTuple_Pack@plt>
   13d4c:	stp	x29, x30, [sp, #-32]!
   13d50:	str	x19, [sp, #16]
   13d54:	mov	x29, sp
   13d58:	adrp	x0, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13d5c:	add	x0, x0, #0x8d8
   13d60:	mov	x19, x1
   13d64:	bl	8cf0 <_PyObject_New@plt>
   13d68:	cbz	x0, 13d7c <PyInit__testcapi@@Base+0xabc0>
   13d6c:	ldr	x8, [x19]
   13d70:	add	x8, x8, #0x1
   13d74:	str	x8, [x19]
   13d78:	str	x19, [x0, #16]
   13d7c:	ldr	x19, [sp, #16]
   13d80:	ldp	x29, x30, [sp], #32
   13d84:	ret
   13d88:	stp	x29, x30, [sp, #-16]!
   13d8c:	mov	x29, sp
   13d90:	adrp	x0, 2b000 <PyInit__testcapi@@Base+0x21e44>
   13d94:	add	x0, x0, #0xc18
   13d98:	ldr	x8, [x0]
   13d9c:	mov	x1, xzr
   13da0:	add	x8, x8, #0x1
   13da4:	str	x8, [x0]
   13da8:	bl	8580 <PyErr_SetObject@plt>
   13dac:	mov	w0, #0xffffffff            	// #-1
   13db0:	ldp	x29, x30, [sp], #16
   13db4:	ret
   13db8:	mov	w8, #0xa                   	// #10
   13dbc:	str	w8, [x0, #16]
   13dc0:	mov	w0, wzr
   13dc4:	ret
   13dc8:	stp	x29, x30, [sp, #-32]!
   13dcc:	stp	x20, x19, [sp, #16]
   13dd0:	mov	x29, sp
   13dd4:	ldr	x19, [x0, #8]
   13dd8:	mov	x20, x0
   13ddc:	bl	9070 <PyObject_GC_UnTrack@plt>
   13de0:	mov	x0, x20
   13de4:	bl	8590 <PyObject_GC_Del@plt>
   13de8:	ldr	x8, [x19]
   13dec:	subs	x8, x8, #0x1
   13df0:	str	x8, [x19]
   13df4:	b.eq	13e04 <PyInit__testcapi@@Base+0xac48>  // b.none
   13df8:	ldp	x20, x19, [sp, #16]
   13dfc:	ldp	x29, x30, [sp], #32
   13e00:	ret
   13e04:	mov	x0, x19
   13e08:	ldp	x20, x19, [sp, #16]
   13e0c:	ldp	x29, x30, [sp], #32
   13e10:	b	8560 <_Py_Dealloc@plt>
   13e14:	stp	x29, x30, [sp, #-32]!
   13e18:	str	x19, [sp, #16]
   13e1c:	mov	x29, sp
   13e20:	ldr	x19, [x0, #8]
   13e24:	bl	87c0 <PyObject_Free@plt>
   13e28:	ldr	x8, [x19]
   13e2c:	subs	x8, x8, #0x1
   13e30:	str	x8, [x19]
   13e34:	b.eq	13e44 <PyInit__testcapi@@Base+0xac88>  // b.none
   13e38:	ldr	x19, [sp, #16]
   13e3c:	ldp	x29, x30, [sp], #32
   13e40:	ret
   13e44:	mov	x0, x19
   13e48:	ldr	x19, [sp, #16]
   13e4c:	ldp	x29, x30, [sp], #32
   13e50:	b	8560 <_Py_Dealloc@plt>
   13e54:	mov	w8, #0xa                   	// #10
   13e58:	mov	w9, #0x14                  	// #20
   13e5c:	str	w8, [x0, #16]
   13e60:	str	w9, [x0, #24]
   13e64:	mov	w0, wzr
   13e68:	ret
   13e6c:	stp	x29, x30, [sp, #-48]!
   13e70:	str	x21, [sp, #16]
   13e74:	stp	x20, x19, [sp, #32]
   13e78:	mov	x29, sp
   13e7c:	mov	x20, x0
   13e80:	ldr	x0, [x0, #8]
   13e84:	mov	x21, x1
   13e88:	mov	w1, #0x30                  	// #48
   13e8c:	mov	x19, x2
   13e90:	bl	85a0 <PyType_GetSlot@plt>
   13e94:	mov	w1, #0x3c                  	// #60
   13e98:	bl	85a0 <PyType_GetSlot@plt>
   13e9c:	mov	x8, x0
   13ea0:	mov	x0, x20
   13ea4:	mov	x1, x21
   13ea8:	mov	x2, x19
   13eac:	blr	x8
   13eb0:	ldp	x20, x19, [sp, #32]
   13eb4:	ldr	x21, [sp, #16]
   13eb8:	mov	w0, wzr
   13ebc:	ldp	x29, x30, [sp], #48
   13ec0:	ret
   13ec4:	sub	sp, sp, #0x40
   13ec8:	stp	x29, x30, [sp, #16]
   13ecc:	str	x21, [sp, #32]
   13ed0:	stp	x20, x19, [sp, #48]
   13ed4:	add	x29, sp, #0x10
   13ed8:	mov	x21, x0
   13edc:	add	x0, x29, #0x18
   13ee0:	add	x1, sp, #0x8
   13ee4:	mov	x2, sp
   13ee8:	bl	8ce0 <PyErr_Fetch@plt>
   13eec:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
   13ef0:	add	x0, x0, #0x830
   13ef4:	bl	89f0 <PyState_FindModule@plt>
   13ef8:	cbz	x0, 14014 <PyInit__testcapi@@Base+0xae58>
   13efc:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13f00:	add	x1, x1, #0x622
   13f04:	mov	x19, x0
   13f08:	bl	84a0 <PyObject_GetAttrString@plt>
   13f0c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13f10:	mov	x20, x0
   13f14:	add	x1, x1, #0x5ff
   13f18:	mov	x0, x19
   13f1c:	bl	84a0 <PyObject_GetAttrString@plt>
   13f20:	mov	x19, x0
   13f24:	cbz	x20, 13fbc <PyInit__testcapi@@Base+0xae00>
   13f28:	cbz	x19, 13fbc <PyInit__testcapi@@Base+0xae00>
   13f2c:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13f30:	add	x1, x1, #0x641
   13f34:	mov	x0, x21
   13f38:	mov	x2, x19
   13f3c:	bl	8510 <PyObject_SetAttrString@plt>
   13f40:	tbnz	w0, #31, 14034 <PyInit__testcapi@@Base+0xae78>
   13f44:	ldr	x0, [x20]
   13f48:	bl	87f0 <PyLong_FromSsize_t@plt>
   13f4c:	mov	x21, x0
   13f50:	cbz	x0, 13fc4 <PyInit__testcapi@@Base+0xae08>
   13f54:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13f58:	add	x1, x1, #0x64b
   13f5c:	mov	x0, x20
   13f60:	mov	x2, x21
   13f64:	bl	8510 <PyObject_SetAttrString@plt>
   13f68:	tbnz	w0, #31, 13fc4 <PyInit__testcapi@@Base+0xae08>
   13f6c:	ldr	x8, [x21]
   13f70:	subs	x8, x8, #0x1
   13f74:	str	x8, [x21]
   13f78:	b.ne	13f84 <PyInit__testcapi@@Base+0xadc8>  // b.any
   13f7c:	mov	x0, x21
   13f80:	bl	8560 <_Py_Dealloc@plt>
   13f84:	ldr	x0, [x19]
   13f88:	bl	87f0 <PyLong_FromSsize_t@plt>
   13f8c:	mov	x21, x0
   13f90:	cbz	x0, 13fc4 <PyInit__testcapi@@Base+0xae08>
   13f94:	adrp	x1, 17000 <PyInit__testcapi@@Base+0xde44>
   13f98:	add	x1, x1, #0x64b
   13f9c:	mov	x0, x19
   13fa0:	mov	x2, x21
   13fa4:	bl	8510 <PyObject_SetAttrString@plt>
   13fa8:	ldr	x8, [x20]
   13fac:	subs	x8, x8, #0x1
   13fb0:	str	x8, [x20]
   13fb4:	b.ne	13fdc <PyInit__testcapi@@Base+0xae20>  // b.any
   13fb8:	b	13fd4 <PyInit__testcapi@@Base+0xae18>
   13fbc:	mov	x21, xzr
   13fc0:	cbz	x20, 13fdc <PyInit__testcapi@@Base+0xae20>
   13fc4:	ldr	x8, [x20]
   13fc8:	subs	x8, x8, #0x1
   13fcc:	str	x8, [x20]
   13fd0:	b.ne	13fdc <PyInit__testcapi@@Base+0xae20>  // b.any
   13fd4:	mov	x0, x20
   13fd8:	bl	8560 <_Py_Dealloc@plt>
   13fdc:	cbz	x19, 13ff8 <PyInit__testcapi@@Base+0xae3c>
   13fe0:	ldr	x8, [x19]
   13fe4:	subs	x8, x8, #0x1
   13fe8:	str	x8, [x19]
   13fec:	b.ne	13ff8 <PyInit__testcapi@@Base+0xae3c>  // b.any
   13ff0:	mov	x0, x19
   13ff4:	bl	8560 <_Py_Dealloc@plt>
   13ff8:	cbz	x21, 14014 <PyInit__testcapi@@Base+0xae58>
   13ffc:	ldr	x8, [x21]
   14000:	subs	x8, x8, #0x1
   14004:	str	x8, [x21]
   14008:	b.ne	14014 <PyInit__testcapi@@Base+0xae58>  // b.any
   1400c:	mov	x0, x21
   14010:	bl	8560 <_Py_Dealloc@plt>
   14014:	ldr	x0, [x29, #24]
   14018:	ldp	x2, x1, [sp]
   1401c:	bl	8380 <PyErr_Restore@plt>
   14020:	ldp	x20, x19, [sp, #48]
   14024:	ldr	x21, [sp, #32]
   14028:	ldp	x29, x30, [sp, #16]
   1402c:	add	sp, sp, #0x40
   14030:	ret
   14034:	mov	x21, xzr
   14038:	ldr	x8, [x20]
   1403c:	subs	x8, x8, #0x1
   14040:	str	x8, [x20]
   14044:	b.ne	13fdc <PyInit__testcapi@@Base+0xae20>  // b.any
   14048:	b	13fd4 <PyInit__testcapi@@Base+0xae18>

Disassembly of section .fini:

000000000001404c <.fini>:
   1404c:	stp	x29, x30, [sp, #-16]!
   14050:	mov	x29, sp
   14054:	ldp	x29, x30, [sp], #16
   14058:	ret
