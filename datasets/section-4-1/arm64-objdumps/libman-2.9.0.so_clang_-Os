
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a290 <.init>:
    a290:	stp	x29, x30, [sp, #-16]!
    a294:	mov	x29, sp
    a298:	bl	b010 <xgetcwd@plt+0x10>
    a29c:	ldp	x29, x30, [sp], #16
    a2a0:	ret

Disassembly of section .plt:

000000000000a2b0 <base_len@plt-0x20>:
    a2b0:	stp	x16, x30, [sp, #-16]!
    a2b4:	adrp	x16, 3c000 <vasnprintf@@Base+0x14944>
    a2b8:	ldr	x17, [x16, #4088]
    a2bc:	add	x16, x16, #0xff8
    a2c0:	br	x17
    a2c4:	nop
    a2c8:	nop
    a2cc:	nop

000000000000a2d0 <base_len@plt>:
    a2d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a2d4:	ldr	x17, [x16]
    a2d8:	add	x16, x16, #0x0
    a2dc:	br	x17

000000000000a2e0 <mbrtowc@plt>:
    a2e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a2e4:	ldr	x17, [x16, #8]
    a2e8:	add	x16, x16, #0x8
    a2ec:	br	x17

000000000000a2f0 <memcpy@plt>:
    a2f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a2f4:	ldr	x17, [x16, #16]
    a2f8:	add	x16, x16, #0x10
    a2fc:	br	x17

000000000000a300 <memmove@plt>:
    a300:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a304:	ldr	x17, [x16, #24]
    a308:	add	x16, x16, #0x18
    a30c:	br	x17

000000000000a310 <pthread_rwlockattr_init@plt>:
    a310:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a314:	ldr	x17, [x16, #32]
    a318:	add	x16, x16, #0x20
    a31c:	br	x17

000000000000a320 <_exit@plt>:
    a320:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a324:	ldr	x17, [x16, #40]
    a328:	add	x16, x16, #0x28
    a32c:	br	x17

000000000000a330 <getcwd@plt>:
    a330:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a334:	ldr	x17, [x16, #48]
    a338:	add	x16, x16, #0x30
    a33c:	br	x17

000000000000a340 <same_nameat@plt>:
    a340:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a344:	ldr	x17, [x16, #56]
    a348:	add	x16, x16, #0x38
    a34c:	br	x17

000000000000a350 <fwrite_unlocked@plt>:
    a350:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a354:	ldr	x17, [x16, #64]
    a358:	add	x16, x16, #0x40
    a35c:	br	x17

000000000000a360 <get_canonical_charset_name@plt>:
    a360:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a364:	ldr	x17, [x16, #72]
    a368:	add	x16, x16, #0x48
    a36c:	br	x17

000000000000a370 <strlen@plt>:
    a370:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a374:	ldr	x17, [x16, #80]
    a378:	add	x16, x16, #0x50
    a37c:	br	x17

000000000000a380 <fputs@plt>:
    a380:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a384:	ldr	x17, [x16, #88]
    a388:	add	x16, x16, #0x58
    a38c:	br	x17

000000000000a390 <exit@plt>:
    a390:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a394:	ldr	x17, [x16, #96]
    a398:	add	x16, x16, #0x60
    a39c:	br	x17

000000000000a3a0 <error@plt>:
    a3a0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a3a4:	ldr	x17, [x16, #104]
    a3a8:	add	x16, x16, #0x68
    a3ac:	br	x17

000000000000a3b0 <pthread_mutexattr_settype@plt>:
    a3b0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a3b4:	ldr	x17, [x16, #112]
    a3b8:	add	x16, x16, #0x70
    a3bc:	br	x17

000000000000a3c0 <fchdir@plt>:
    a3c0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a3c4:	ldr	x17, [x16, #120]
    a3c8:	add	x16, x16, #0x78
    a3cc:	br	x17

000000000000a3d0 <perror@plt>:
    a3d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a3d4:	ldr	x17, [x16, #128]
    a3d8:	add	x16, x16, #0x80
    a3dc:	br	x17

000000000000a3e0 <flockfile@plt>:
    a3e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a3e4:	ldr	x17, [x16, #136]
    a3e8:	add	x16, x16, #0x88
    a3ec:	br	x17

000000000000a3f0 <getegid@plt>:
    a3f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a3f4:	ldr	x17, [x16, #144]
    a3f8:	add	x16, x16, #0x90
    a3fc:	br	x17

000000000000a400 <wctype@plt>:
    a400:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a404:	ldr	x17, [x16, #152]
    a408:	add	x16, x16, #0x98
    a40c:	br	x17

000000000000a410 <remove_directory@plt>:
    a410:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a414:	ldr	x17, [x16, #160]
    a418:	add	x16, x16, #0xa0
    a41c:	br	x17

000000000000a420 <sigprocmask@plt>:
    a420:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a424:	ldr	x17, [x16, #168]
    a428:	add	x16, x16, #0xa8
    a42c:	br	x17

000000000000a430 <rpl_mbrtowc@plt>:
    a430:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a434:	ldr	x17, [x16, #176]
    a438:	add	x16, x16, #0xb0
    a43c:	br	x17

000000000000a440 <geteuid@plt>:
    a440:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a444:	ldr	x17, [x16, #184]
    a448:	add	x16, x16, #0xb8
    a44c:	br	x17

000000000000a450 <get_roff_encoding@plt>:
    a450:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a454:	ldr	x17, [x16, #192]
    a458:	add	x16, x16, #0xc0
    a45c:	br	x17

000000000000a460 <pthread_rwlock_init@plt>:
    a460:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a464:	ldr	x17, [x16, #200]
    a468:	add	x16, x16, #0xc8
    a46c:	br	x17

000000000000a470 <getresuid@plt>:
    a470:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a474:	ldr	x17, [x16, #208]
    a478:	add	x16, x16, #0xd0
    a47c:	br	x17

000000000000a480 <pthread_rwlockattr_setkind_np@plt>:
    a480:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a484:	ldr	x17, [x16, #216]
    a488:	add	x16, x16, #0xd8
    a48c:	br	x17

000000000000a490 <chdir_long@plt>:
    a490:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a494:	ldr	x17, [x16, #224]
    a498:	add	x16, x16, #0xe0
    a49c:	br	x17

000000000000a4a0 <hash_insert@plt>:
    a4a0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a4a4:	ldr	x17, [x16, #232]
    a4a8:	add	x16, x16, #0xe8
    a4ac:	br	x17

000000000000a4b0 <setenv@plt>:
    a4b0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a4b4:	ldr	x17, [x16, #240]
    a4b8:	add	x16, x16, #0xf0
    a4bc:	br	x17

000000000000a4c0 <readlink@plt>:
    a4c0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a4c4:	ldr	x17, [x16, #248]
    a4c8:	add	x16, x16, #0xf8
    a4cc:	br	x17

000000000000a4d0 <__cxa_finalize@plt>:
    a4d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a4d4:	ldr	x17, [x16, #256]
    a4d8:	add	x16, x16, #0x100
    a4dc:	br	x17

000000000000a4e0 <sprintf@plt>:
    a4e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a4e4:	ldr	x17, [x16, #264]
    a4e8:	add	x16, x16, #0x108
    a4ec:	br	x17

000000000000a4f0 <getuid@plt>:
    a4f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a4f4:	ldr	x17, [x16, #272]
    a4f8:	add	x16, x16, #0x110
    a4fc:	br	x17

000000000000a500 <pipe@plt>:
    a500:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a504:	ldr	x17, [x16, #280]
    a508:	add	x16, x16, #0x118
    a50c:	br	x17

000000000000a510 <opendir@plt>:
    a510:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a514:	ldr	x17, [x16, #288]
    a518:	add	x16, x16, #0x120
    a51c:	br	x17

000000000000a520 <__cxa_atexit@plt>:
    a520:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a524:	ldr	x17, [x16, #296]
    a528:	add	x16, x16, #0x128
    a52c:	br	x17

000000000000a530 <fputc@plt>:
    a530:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a534:	ldr	x17, [x16, #304]
    a538:	add	x16, x16, #0x130
    a53c:	br	x17

000000000000a540 <clock_gettime@plt>:
    a540:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a544:	ldr	x17, [x16, #312]
    a548:	add	x16, x16, #0x138
    a54c:	br	x17

000000000000a550 <qsort@plt>:
    a550:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a554:	ldr	x17, [x16, #320]
    a558:	add	x16, x16, #0x140
    a55c:	br	x17

000000000000a560 <kill@plt>:
    a560:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a564:	ldr	x17, [x16, #328]
    a568:	add	x16, x16, #0x148
    a56c:	br	x17

000000000000a570 <_argp_fmtstream_update@plt>:
    a570:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a574:	ldr	x17, [x16, #336]
    a578:	add	x16, x16, #0x150
    a57c:	br	x17

000000000000a580 <__ctype_tolower_loc@plt>:
    a580:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a584:	ldr	x17, [x16, #344]
    a588:	add	x16, x16, #0x158
    a58c:	br	x17

000000000000a590 <snprintf@plt>:
    a590:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a594:	ldr	x17, [x16, #352]
    a598:	add	x16, x16, #0x160
    a59c:	br	x17

000000000000a5a0 <mdir_name@plt>:
    a5a0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a5a4:	ldr	x17, [x16, #360]
    a5a8:	add	x16, x16, #0x168
    a5ac:	br	x17

000000000000a5b0 <triple_free@plt>:
    a5b0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a5b4:	ldr	x17, [x16, #368]
    a5b8:	add	x16, x16, #0x170
    a5bc:	br	x17

000000000000a5c0 <putc_unlocked@plt>:
    a5c0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a5c4:	ldr	x17, [x16, #376]
    a5c8:	add	x16, x16, #0x178
    a5cc:	br	x17

000000000000a5d0 <debug@plt>:
    a5d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a5d4:	ldr	x17, [x16, #384]
    a5d8:	add	x16, x16, #0x180
    a5dc:	br	x17

000000000000a5e0 <hash_free@plt>:
    a5e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a5e4:	ldr	x17, [x16, #392]
    a5e8:	add	x16, x16, #0x188
    a5ec:	br	x17

000000000000a5f0 <fclose@plt>:
    a5f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a5f4:	ldr	x17, [x16, #400]
    a5f8:	add	x16, x16, #0x190
    a5fc:	br	x17

000000000000a600 <atoi@plt>:
    a600:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a604:	ldr	x17, [x16, #408]
    a608:	add	x16, x16, #0x198
    a60c:	br	x17

000000000000a610 <rpl_regcomp@plt>:
    a610:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a614:	ldr	x17, [x16, #416]
    a618:	add	x16, x16, #0x1a0
    a61c:	br	x17

000000000000a620 <getpid@plt>:
    a620:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a624:	ldr	x17, [x16, #424]
    a628:	add	x16, x16, #0x1a8
    a62c:	br	x17

000000000000a630 <nl_langinfo@plt>:
    a630:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a634:	ldr	x17, [x16, #432]
    a638:	add	x16, x16, #0x1b0
    a63c:	br	x17

000000000000a640 <fopen@plt>:
    a640:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a644:	ldr	x17, [x16, #440]
    a648:	add	x16, x16, #0x1b8
    a64c:	br	x17

000000000000a650 <iswctype@plt>:
    a650:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a654:	ldr	x17, [x16, #448]
    a658:	add	x16, x16, #0x1c0
    a65c:	br	x17

000000000000a660 <malloc@plt>:
    a660:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a664:	ldr	x17, [x16, #456]
    a668:	add	x16, x16, #0x1c8
    a66c:	br	x17

000000000000a670 <record_file@plt>:
    a670:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a674:	ldr	x17, [x16, #464]
    a678:	add	x16, x16, #0x1d0
    a67c:	br	x17

000000000000a680 <toupper@plt>:
    a680:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a684:	ldr	x17, [x16, #472]
    a688:	add	x16, x16, #0x1d8
    a68c:	br	x17

000000000000a690 <futimesat@plt>:
    a690:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a694:	ldr	x17, [x16, #480]
    a698:	add	x16, x16, #0x1e0
    a69c:	br	x17

000000000000a6a0 <funlockfile@plt>:
    a6a0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a6a4:	ldr	x17, [x16, #488]
    a6a8:	add	x16, x16, #0x1e8
    a6ac:	br	x17

000000000000a6b0 <stdopen@plt>:
    a6b0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a6b4:	ldr	x17, [x16, #496]
    a6b8:	add	x16, x16, #0x1f0
    a6bc:	br	x17

000000000000a6c0 <open@plt>:
    a6c0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a6c4:	ldr	x17, [x16, #504]
    a6c8:	add	x16, x16, #0x1f8
    a6cc:	br	x17

000000000000a6d0 <argp_failure@plt>:
    a6d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a6d4:	ldr	x17, [x16, #512]
    a6d8:	add	x16, x16, #0x200
    a6dc:	br	x17

000000000000a6e0 <xrealloc@plt>:
    a6e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a6e4:	ldr	x17, [x16, #520]
    a6e8:	add	x16, x16, #0x208
    a6ec:	br	x17

000000000000a6f0 <dir_name@plt>:
    a6f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a6f4:	ldr	x17, [x16, #528]
    a6f8:	add	x16, x16, #0x210
    a6fc:	br	x17

000000000000a700 <idpriv_temp_drop@plt>:
    a700:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a704:	ldr	x17, [x16, #536]
    a708:	add	x16, x16, #0x218
    a70c:	br	x17

000000000000a710 <sigemptyset@plt>:
    a710:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a714:	ldr	x17, [x16, #544]
    a718:	add	x16, x16, #0x220
    a71c:	br	x17

000000000000a720 <get_groff_preconv@plt>:
    a720:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a724:	ldr	x17, [x16, #552]
    a728:	add	x16, x16, #0x228
    a72c:	br	x17

000000000000a730 <futimens@plt>:
    a730:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a734:	ldr	x17, [x16, #560]
    a738:	add	x16, x16, #0x230
    a73c:	br	x17

000000000000a740 <strncmp@plt>:
    a740:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a744:	ldr	x17, [x16, #568]
    a748:	add	x16, x16, #0x238
    a74c:	br	x17

000000000000a750 <bindtextdomain@plt>:
    a750:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a754:	ldr	x17, [x16, #576]
    a758:	add	x16, x16, #0x240
    a75c:	br	x17

000000000000a760 <fstatfs@plt>:
    a760:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a764:	ldr	x17, [x16, #584]
    a768:	add	x16, x16, #0x248
    a76c:	br	x17

000000000000a770 <memset@plt>:
    a770:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a774:	ldr	x17, [x16, #592]
    a778:	add	x16, x16, #0x250
    a77c:	br	x17

000000000000a780 <gettimeofday@plt>:
    a780:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a784:	ldr	x17, [x16, #600]
    a788:	add	x16, x16, #0x258
    a78c:	br	x17

000000000000a790 <xmalloc@plt>:
    a790:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a794:	ldr	x17, [x16, #608]
    a798:	add	x16, x16, #0x260
    a79c:	br	x17

000000000000a7a0 <getpwnam@plt>:
    a7a0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a7a4:	ldr	x17, [x16, #616]
    a7a8:	add	x16, x16, #0x268
    a7ac:	br	x17

000000000000a7b0 <xstrdup@plt>:
    a7b0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a7b4:	ldr	x17, [x16, #624]
    a7b8:	add	x16, x16, #0x270
    a7bc:	br	x17

000000000000a7c0 <sleep@plt>:
    a7c0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a7c4:	ldr	x17, [x16, #632]
    a7c8:	add	x16, x16, #0x278
    a7cc:	br	x17

000000000000a7d0 <same_name@plt>:
    a7d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a7d4:	ldr	x17, [x16, #640]
    a7d8:	add	x16, x16, #0x280
    a7dc:	br	x17

000000000000a7e0 <strerror_r@plt>:
    a7e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a7e4:	ldr	x17, [x16, #648]
    a7e8:	add	x16, x16, #0x288
    a7ec:	br	x17

000000000000a7f0 <calloc@plt>:
    a7f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a7f4:	ldr	x17, [x16, #656]
    a7f8:	add	x16, x16, #0x290
    a7fc:	br	x17

000000000000a800 <last_component@plt>:
    a800:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a804:	ldr	x17, [x16, #664]
    a808:	add	x16, x16, #0x298
    a80c:	br	x17

000000000000a810 <hard_locale@plt>:
    a810:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a814:	ldr	x17, [x16, #672]
    a818:	add	x16, x16, #0x2a0
    a81c:	br	x17

000000000000a820 <bcmp@plt>:
    a820:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a824:	ldr	x17, [x16, #680]
    a828:	add	x16, x16, #0x2a8
    a82c:	br	x17

000000000000a830 <hash_insert_if_absent@plt>:
    a830:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a834:	ldr	x17, [x16, #688]
    a838:	add	x16, x16, #0x2b0
    a83c:	br	x17

000000000000a840 <strcasecmp@plt>:
    a840:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a844:	ldr	x17, [x16, #696]
    a848:	add	x16, x16, #0x2b8
    a84c:	br	x17

000000000000a850 <readdir@plt>:
    a850:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a854:	ldr	x17, [x16, #704]
    a858:	add	x16, x16, #0x2c0
    a85c:	br	x17

000000000000a860 <realloc@plt>:
    a860:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a864:	ldr	x17, [x16, #712]
    a868:	add	x16, x16, #0x2c8
    a86c:	br	x17

000000000000a870 <__ctype_toupper_loc@plt>:
    a870:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a874:	ldr	x17, [x16, #720]
    a878:	add	x16, x16, #0x2d0
    a87c:	br	x17

000000000000a880 <hash_initialize@plt>:
    a880:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a884:	ldr	x17, [x16, #728]
    a888:	add	x16, x16, #0x2d8
    a88c:	br	x17

000000000000a890 <try_tempname@plt>:
    a890:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a894:	ldr	x17, [x16, #736]
    a898:	add	x16, x16, #0x2e0
    a89c:	br	x17

000000000000a8a0 <closedir@plt>:
    a8a0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a8a4:	ldr	x17, [x16, #744]
    a8a8:	add	x16, x16, #0x2e8
    a8ac:	br	x17

000000000000a8b0 <strerror@plt>:
    a8b0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a8b4:	ldr	x17, [x16, #752]
    a8b8:	add	x16, x16, #0x2f0
    a8bc:	br	x17

000000000000a8c0 <pthread_mutex_init@plt>:
    a8c0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a8c4:	ldr	x17, [x16, #760]
    a8c8:	add	x16, x16, #0x2f8
    a8cc:	br	x17

000000000000a8d0 <close@plt>:
    a8d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a8d4:	ldr	x17, [x16, #768]
    a8d8:	add	x16, x16, #0x300
    a8dc:	br	x17

000000000000a8e0 <sigaction@plt>:
    a8e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a8e4:	ldr	x17, [x16, #776]
    a8e8:	add	x16, x16, #0x308
    a8ec:	br	x17

000000000000a8f0 <hash_lookup@plt>:
    a8f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a8f4:	ldr	x17, [x16, #784]
    a8f8:	add	x16, x16, #0x310
    a8fc:	br	x17

000000000000a900 <strrchr@plt>:
    a900:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a904:	ldr	x17, [x16, #792]
    a908:	add	x16, x16, #0x318
    a90c:	br	x17

000000000000a910 <xalloc_die@plt>:
    a910:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a914:	ldr	x17, [x16, #800]
    a918:	add	x16, x16, #0x320
    a91c:	br	x17

000000000000a920 <memmem@plt>:
    a920:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a924:	ldr	x17, [x16, #808]
    a928:	add	x16, x16, #0x328
    a92c:	br	x17

000000000000a930 <__gmon_start__@plt>:
    a930:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a934:	ldr	x17, [x16, #816]
    a938:	add	x16, x16, #0x330
    a93c:	br	x17

000000000000a940 <drop_effective_privs@plt>:
    a940:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a944:	ldr	x17, [x16, #824]
    a948:	add	x16, x16, #0x338
    a94c:	br	x17

000000000000a950 <btowc@plt>:
    a950:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a954:	ldr	x17, [x16, #832]
    a958:	add	x16, x16, #0x340
    a95c:	br	x17

000000000000a960 <mkdtemp@plt>:
    a960:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a964:	ldr	x17, [x16, #840]
    a968:	add	x16, x16, #0x348
    a96c:	br	x17

000000000000a970 <argp_fmtstream_printf@plt>:
    a970:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a974:	ldr	x17, [x16, #848]
    a978:	add	x16, x16, #0x350
    a97c:	br	x17

000000000000a980 <abort@plt>:
    a980:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a984:	ldr	x17, [x16, #856]
    a988:	add	x16, x16, #0x358
    a98c:	br	x17

000000000000a990 <_getopt_long_only_r@plt>:
    a990:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a994:	ldr	x17, [x16, #864]
    a998:	add	x16, x16, #0x360
    a99c:	br	x17

000000000000a9a0 <hash_rehash@plt>:
    a9a0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a9a4:	ldr	x17, [x16, #872]
    a9a8:	add	x16, x16, #0x368
    a9ac:	br	x17

000000000000a9b0 <mbsinit@plt>:
    a9b0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a9b4:	ldr	x17, [x16, #880]
    a9b8:	add	x16, x16, #0x370
    a9bc:	br	x17

000000000000a9c0 <access@plt>:
    a9c0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a9c4:	ldr	x17, [x16, #888]
    a9c8:	add	x16, x16, #0x378
    a9cc:	br	x17

000000000000a9d0 <fdutimens@plt>:
    a9d0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a9d4:	ldr	x17, [x16, #896]
    a9d8:	add	x16, x16, #0x380
    a9dc:	br	x17

000000000000a9e0 <hash_pjw_bare@plt>:
    a9e0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a9e4:	ldr	x17, [x16, #904]
    a9e8:	add	x16, x16, #0x388
    a9ec:	br	x17

000000000000a9f0 <textdomain@plt>:
    a9f0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    a9f4:	ldr	x17, [x16, #912]
    a9f8:	add	x16, x16, #0x390
    a9fc:	br	x17

000000000000aa00 <strsep@plt>:
    aa00:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa04:	ldr	x17, [x16, #920]
    aa08:	add	x16, x16, #0x398
    aa0c:	br	x17

000000000000aa10 <strcmp@plt>:
    aa10:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa14:	ldr	x17, [x16, #928]
    aa18:	add	x16, x16, #0x3a0
    aa1c:	br	x17

000000000000aa20 <_getopt_long_r@plt>:
    aa20:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa24:	ldr	x17, [x16, #936]
    aa28:	add	x16, x16, #0x3a8
    aa2c:	br	x17

000000000000aa30 <__ctype_b_loc@plt>:
    aa30:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa34:	ldr	x17, [x16, #944]
    aa38:	add	x16, x16, #0x3b0
    aa3c:	br	x17

000000000000aa40 <rmdir@plt>:
    aa40:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa44:	ldr	x17, [x16, #952]
    aa48:	add	x16, x16, #0x3b8
    aa4c:	br	x17

000000000000aa50 <seen_file@plt>:
    aa50:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa54:	ldr	x17, [x16, #960]
    aa58:	add	x16, x16, #0x3c0
    aa5c:	br	x17

000000000000aa60 <getline@plt>:
    aa60:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa64:	ldr	x17, [x16, #968]
    aa68:	add	x16, x16, #0x3c8
    aa6c:	br	x17

000000000000aa70 <dir_len@plt>:
    aa70:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa74:	ldr	x17, [x16, #976]
    aa78:	add	x16, x16, #0x3d0
    aa7c:	br	x17

000000000000aa80 <chdir@plt>:
    aa80:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa84:	ldr	x17, [x16, #984]
    aa88:	add	x16, x16, #0x3d8
    aa8c:	br	x17

000000000000aa90 <dup_safer@plt>:
    aa90:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aa94:	ldr	x17, [x16, #992]
    aa98:	add	x16, x16, #0x3e0
    aa9c:	br	x17

000000000000aaa0 <free@plt>:
    aaa0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aaa4:	ldr	x17, [x16, #1000]
    aaa8:	add	x16, x16, #0x3e8
    aaac:	br	x17

000000000000aab0 <renameat2@plt>:
    aab0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aab4:	ldr	x17, [x16, #1008]
    aab8:	add	x16, x16, #0x3f0
    aabc:	br	x17

000000000000aac0 <argp_make_fmtstream@plt>:
    aac0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aac4:	ldr	x17, [x16, #1016]
    aac8:	add	x16, x16, #0x3f8
    aacc:	br	x17

000000000000aad0 <__ctype_get_mb_cur_max@plt>:
    aad0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aad4:	ldr	x17, [x16, #1024]
    aad8:	add	x16, x16, #0x400
    aadc:	br	x17

000000000000aae0 <getgid@plt>:
    aae0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aae4:	ldr	x17, [x16, #1032]
    aae8:	add	x16, x16, #0x408
    aaec:	br	x17

000000000000aaf0 <renameat@plt>:
    aaf0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aaf4:	ldr	x17, [x16, #1040]
    aaf8:	add	x16, x16, #0x410
    aafc:	br	x17

000000000000ab00 <xasprintf@plt>:
    ab00:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab04:	ldr	x17, [x16, #1048]
    ab08:	add	x16, x16, #0x418
    ab0c:	br	x17

000000000000ab10 <vasnprintf@plt>:
    ab10:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab14:	ldr	x17, [x16, #1056]
    ab18:	add	x16, x16, #0x420
    ab1c:	br	x17

000000000000ab20 <printf_fetchargs@plt>:
    ab20:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab24:	ldr	x17, [x16, #1064]
    ab28:	add	x16, x16, #0x428
    ab2c:	br	x17

000000000000ab30 <nanosleep@plt>:
    ab30:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab34:	ldr	x17, [x16, #1072]
    ab38:	add	x16, x16, #0x430
    ab3c:	br	x17

000000000000ab40 <vasprintf@plt>:
    ab40:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab44:	ldr	x17, [x16, #1080]
    ab48:	add	x16, x16, #0x438
    ab4c:	br	x17

000000000000ab50 <rpl_getopt_internal@plt>:
    ab50:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab54:	ldr	x17, [x16, #1088]
    ab58:	add	x16, x16, #0x440
    ab5c:	br	x17

000000000000ab60 <strndup@plt>:
    ab60:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab64:	ldr	x17, [x16, #1096]
    ab68:	add	x16, x16, #0x448
    ab6c:	br	x17

000000000000ab70 <strspn@plt>:
    ab70:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab74:	ldr	x17, [x16, #1104]
    ab78:	add	x16, x16, #0x450
    ab7c:	br	x17

000000000000ab80 <rpl_ioctl@plt>:
    ab80:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab84:	ldr	x17, [x16, #1112]
    ab88:	add	x16, x16, #0x458
    ab8c:	br	x17

000000000000ab90 <strchr@plt>:
    ab90:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ab94:	ldr	x17, [x16, #1120]
    ab98:	add	x16, x16, #0x460
    ab9c:	br	x17

000000000000aba0 <areadlink_with_size@plt>:
    aba0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aba4:	ldr	x17, [x16, #1128]
    aba8:	add	x16, x16, #0x468
    abac:	br	x17

000000000000abb0 <argp_error@plt>:
    abb0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    abb4:	ldr	x17, [x16, #1136]
    abb8:	add	x16, x16, #0x470
    abbc:	br	x17

000000000000abc0 <memrchr@plt>:
    abc0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    abc4:	ldr	x17, [x16, #1144]
    abc8:	add	x16, x16, #0x478
    abcc:	br	x17

000000000000abd0 <utimensat@plt>:
    abd0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    abd4:	ldr	x17, [x16, #1152]
    abd8:	add	x16, x16, #0x480
    abdc:	br	x17

000000000000abe0 <pipeline_peekline@plt>:
    abe0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    abe4:	ldr	x17, [x16, #1160]
    abe8:	add	x16, x16, #0x488
    abec:	br	x17

000000000000abf0 <do_cleanups_sigsafe@plt>:
    abf0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    abf4:	ldr	x17, [x16, #1168]
    abf8:	add	x16, x16, #0x490
    abfc:	br	x17

000000000000ac00 <rpl_fcntl@plt>:
    ac00:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac04:	ldr	x17, [x16, #1176]
    ac08:	add	x16, x16, #0x498
    ac0c:	br	x17

000000000000ac10 <fnmatch@plt>:
    ac10:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac14:	ldr	x17, [x16, #1184]
    ac18:	add	x16, x16, #0x4a0
    ac1c:	br	x17

000000000000ac20 <fcntl@plt>:
    ac20:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac24:	ldr	x17, [x16, #1192]
    ac28:	add	x16, x16, #0x4a8
    ac2c:	br	x17

000000000000ac30 <idpriv_drop@plt>:
    ac30:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac34:	ldr	x17, [x16, #1200]
    ac38:	add	x16, x16, #0x4b0
    ac3c:	br	x17

000000000000ac40 <rpl_regerror@plt>:
    ac40:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac44:	ldr	x17, [x16, #1208]
    ac48:	add	x16, x16, #0x4b8
    ac4c:	br	x17

000000000000ac50 <pthread_mutex_destroy@plt>:
    ac50:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac54:	ldr	x17, [x16, #1216]
    ac58:	add	x16, x16, #0x4c0
    ac5c:	br	x17

000000000000ac60 <strcpy@plt>:
    ac60:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac64:	ldr	x17, [x16, #1224]
    ac68:	add	x16, x16, #0x4c8
    ac6c:	br	x17

000000000000ac70 <hash_pjw@plt>:
    ac70:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac74:	ldr	x17, [x16, #1232]
    ac78:	add	x16, x16, #0x4d0
    ac7c:	br	x17

000000000000ac80 <_argp_input@plt>:
    ac80:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac84:	ldr	x17, [x16, #1240]
    ac88:	add	x16, x16, #0x4d8
    ac8c:	br	x17

000000000000ac90 <__lxstat@plt>:
    ac90:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ac94:	ldr	x17, [x16, #1248]
    ac98:	add	x16, x16, #0x4e0
    ac9c:	br	x17

000000000000aca0 <dup_safer_flag@plt>:
    aca0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aca4:	ldr	x17, [x16, #1256]
    aca8:	add	x16, x16, #0x4e8
    acac:	br	x17

000000000000acb0 <memchr@plt>:
    acb0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    acb4:	ldr	x17, [x16, #1264]
    acb8:	add	x16, x16, #0x4f0
    acbc:	br	x17

000000000000acc0 <idpriv_temp_restore@plt>:
    acc0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    acc4:	ldr	x17, [x16, #1272]
    acc8:	add	x16, x16, #0x4f8
    accc:	br	x17

000000000000acd0 <new_string_list@plt>:
    acd0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    acd4:	ldr	x17, [x16, #1280]
    acd8:	add	x16, x16, #0x500
    acdc:	br	x17

000000000000ace0 <getresgid@plt>:
    ace0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ace4:	ldr	x17, [x16, #1288]
    ace8:	add	x16, x16, #0x508
    acec:	br	x17

000000000000acf0 <isatty@plt>:
    acf0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    acf4:	ldr	x17, [x16, #1296]
    acf8:	add	x16, x16, #0x510
    acfc:	br	x17

000000000000ad00 <xzalloc@plt>:
    ad00:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad04:	ldr	x17, [x16, #1304]
    ad08:	add	x16, x16, #0x518
    ad0c:	br	x17

000000000000ad10 <xstrndup@plt>:
    ad10:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad14:	ldr	x17, [x16, #1312]
    ad18:	add	x16, x16, #0x520
    ad1c:	br	x17

000000000000ad20 <pthread_mutexattr_init@plt>:
    ad20:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad24:	ldr	x17, [x16, #1320]
    ad28:	add	x16, x16, #0x528
    ad2c:	br	x17

000000000000ad30 <setresuid@plt>:
    ad30:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad34:	ldr	x17, [x16, #1328]
    ad38:	add	x16, x16, #0x530
    ad3c:	br	x17

000000000000ad40 <utimes@plt>:
    ad40:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad44:	ldr	x17, [x16, #1336]
    ad48:	add	x16, x16, #0x538
    ad4c:	br	x17

000000000000ad50 <iswalnum@plt>:
    ad50:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad54:	ldr	x17, [x16, #1344]
    ad58:	add	x16, x16, #0x540
    ad5c:	br	x17

000000000000ad60 <__fxstat@plt>:
    ad60:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad64:	ldr	x17, [x16, #1352]
    ad68:	add	x16, x16, #0x548
    ad6c:	br	x17

000000000000ad70 <pthread_mutexattr_destroy@plt>:
    ad70:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad74:	ldr	x17, [x16, #1360]
    ad78:	add	x16, x16, #0x550
    ad7c:	br	x17

000000000000ad80 <strchrnul@plt>:
    ad80:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad84:	ldr	x17, [x16, #1368]
    ad88:	add	x16, x16, #0x558
    ad8c:	br	x17

000000000000ad90 <strstr@plt>:
    ad90:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ad94:	ldr	x17, [x16, #1376]
    ad98:	add	x16, x16, #0x560
    ad9c:	br	x17

000000000000ada0 <_argp_fmtstream_ensure@plt>:
    ada0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ada4:	ldr	x17, [x16, #1384]
    ada8:	add	x16, x16, #0x568
    adac:	br	x17

000000000000adb0 <argp_state_help@plt>:
    adb0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    adb4:	ldr	x17, [x16, #1392]
    adb8:	add	x16, x16, #0x570
    adbc:	br	x17

000000000000adc0 <dcgettext@plt>:
    adc0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    adc4:	ldr	x17, [x16, #1400]
    adc8:	add	x16, x16, #0x578
    adcc:	br	x17

000000000000add0 <pthread_rwlockattr_destroy@plt>:
    add0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    add4:	ldr	x17, [x16, #1408]
    add8:	add	x16, x16, #0x580
    addc:	br	x17

000000000000ade0 <vsnprintf@plt>:
    ade0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ade4:	ldr	x17, [x16, #1416]
    ade8:	add	x16, x16, #0x588
    adec:	br	x17

000000000000adf0 <argp_fmtstream_free@plt>:
    adf0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    adf4:	ldr	x17, [x16, #1424]
    adf8:	add	x16, x16, #0x590
    adfc:	br	x17

000000000000ae00 <get_locale_charset@plt>:
    ae00:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae04:	ldr	x17, [x16, #1432]
    ae08:	add	x16, x16, #0x598
    ae0c:	br	x17

000000000000ae10 <xvasprintf@plt>:
    ae10:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae14:	ldr	x17, [x16, #1440]
    ae18:	add	x16, x16, #0x5a0
    ae1c:	br	x17

000000000000ae20 <fputs_unlocked@plt>:
    ae20:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae24:	ldr	x17, [x16, #1448]
    ae28:	add	x16, x16, #0x5a8
    ae2c:	br	x17

000000000000ae30 <sigaddset@plt>:
    ae30:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae34:	ldr	x17, [x16, #1456]
    ae38:	add	x16, x16, #0x5b0
    ae3c:	br	x17

000000000000ae40 <pathsearch_executable@plt>:
    ae40:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae44:	ldr	x17, [x16, #1464]
    ae48:	add	x16, x16, #0x5b8
    ae4c:	br	x17

000000000000ae50 <towupper@plt>:
    ae50:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae54:	ldr	x17, [x16, #1472]
    ae58:	add	x16, x16, #0x5c0
    ae5c:	br	x17

000000000000ae60 <fd_safer_flag@plt>:
    ae60:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae64:	ldr	x17, [x16, #1480]
    ae68:	add	x16, x16, #0x5c8
    ae6c:	br	x17

000000000000ae70 <strcspn@plt>:
    ae70:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae74:	ldr	x17, [x16, #1488]
    ae78:	add	x16, x16, #0x5d0
    ae7c:	br	x17

000000000000ae80 <_getopt_internal_r@plt>:
    ae80:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae84:	ldr	x17, [x16, #1496]
    ae88:	add	x16, x16, #0x5d8
    ae8c:	br	x17

000000000000ae90 <vfprintf@plt>:
    ae90:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    ae94:	ldr	x17, [x16, #1504]
    ae98:	add	x16, x16, #0x5e0
    ae9c:	br	x17

000000000000aea0 <openat@plt>:
    aea0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aea4:	ldr	x17, [x16, #1512]
    aea8:	add	x16, x16, #0x5e8
    aeac:	br	x17

000000000000aeb0 <__assert_fail@plt>:
    aeb0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aeb4:	ldr	x17, [x16, #1520]
    aeb8:	add	x16, x16, #0x5f0
    aebc:	br	x17

000000000000aec0 <__errno_location@plt>:
    aec0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aec4:	ldr	x17, [x16, #1528]
    aec8:	add	x16, x16, #0x5f8
    aecc:	br	x17

000000000000aed0 <tolower@plt>:
    aed0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aed4:	ldr	x17, [x16, #1536]
    aed8:	add	x16, x16, #0x600
    aedc:	br	x17

000000000000aee0 <setresgid@plt>:
    aee0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aee4:	ldr	x17, [x16, #1544]
    aee8:	add	x16, x16, #0x608
    aeec:	br	x17

000000000000aef0 <getenv@plt>:
    aef0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aef4:	ldr	x17, [x16, #1552]
    aef8:	add	x16, x16, #0x610
    aefc:	br	x17

000000000000af00 <locale_charset@plt>:
    af00:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af04:	ldr	x17, [x16, #1560]
    af08:	add	x16, x16, #0x618
    af0c:	br	x17

000000000000af10 <__xstat@plt>:
    af10:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af14:	ldr	x17, [x16, #1568]
    af18:	add	x16, x16, #0x620
    af1c:	br	x17

000000000000af20 <pthread_mutex_lock@plt>:
    af20:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af24:	ldr	x17, [x16, #1576]
    af28:	add	x16, x16, #0x628
    af2c:	br	x17

000000000000af30 <printf_parse@plt>:
    af30:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af34:	ldr	x17, [x16, #1584]
    af38:	add	x16, x16, #0x630
    af3c:	br	x17

000000000000af40 <fd_safer@plt>:
    af40:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af44:	ldr	x17, [x16, #1592]
    af48:	add	x16, x16, #0x638
    af4c:	br	x17

000000000000af50 <pthread_mutex_unlock@plt>:
    af50:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af54:	ldr	x17, [x16, #1600]
    af58:	add	x16, x16, #0x640
    af5c:	br	x17

000000000000af60 <unlink@plt>:
    af60:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af64:	ldr	x17, [x16, #1608]
    af68:	add	x16, x16, #0x648
    af6c:	br	x17

000000000000af70 <mkdir@plt>:
    af70:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af74:	ldr	x17, [x16, #1616]
    af78:	add	x16, x16, #0x650
    af7c:	br	x17

000000000000af80 <towlower@plt>:
    af80:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af84:	ldr	x17, [x16, #1624]
    af88:	add	x16, x16, #0x658
    af8c:	br	x17

000000000000af90 <gettime@plt>:
    af90:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    af94:	ldr	x17, [x16, #1632]
    af98:	add	x16, x16, #0x660
    af9c:	br	x17

000000000000afa0 <rpl_re_compile_fastmap@plt>:
    afa0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    afa4:	ldr	x17, [x16, #1640]
    afa8:	add	x16, x16, #0x668
    afac:	br	x17

000000000000afb0 <fprintf@plt>:
    afb0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    afb4:	ldr	x17, [x16, #1648]
    afb8:	add	x16, x16, #0x670
    afbc:	br	x17

000000000000afc0 <ioctl@plt>:
    afc0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    afc4:	ldr	x17, [x16, #1656]
    afc8:	add	x16, x16, #0x678
    afcc:	br	x17

000000000000afd0 <setlocale@plt>:
    afd0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    afd4:	ldr	x17, [x16, #1664]
    afd8:	add	x16, x16, #0x680
    afdc:	br	x17

000000000000afe0 <__fxstatat@plt>:
    afe0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    afe4:	ldr	x17, [x16, #1672]
    afe8:	add	x16, x16, #0x688
    afec:	br	x17

000000000000aff0 <wcrtomb@plt>:
    aff0:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    aff4:	ldr	x17, [x16, #1680]
    aff8:	add	x16, x16, #0x690
    affc:	br	x17

000000000000b000 <xgetcwd@plt>:
    b000:	adrp	x16, 3d000 <base_len@@Base+0x2a06c>
    b004:	ldr	x17, [x16, #1688]
    b008:	add	x16, x16, #0x698
    b00c:	br	x17

Disassembly of section .text:

000000000000b010 <appendstr@@Base-0xd4>:
    b010:	adrp	x0, 3c000 <vasnprintf@@Base+0x14944>
    b014:	ldr	x0, [x0, #3904]
    b018:	cbz	x0, b020 <xgetcwd@plt+0x20>
    b01c:	b	a930 <__gmon_start__@plt>
    b020:	ret
    b024:	adrp	x0, 3d000 <base_len@@Base+0x2a06c>
    b028:	add	x0, x0, #0x6f0
    b02c:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b030:	add	x1, x1, #0x6f0
    b034:	cmp	x1, x0
    b038:	b.eq	b050 <xgetcwd@plt+0x50>  // b.none
    b03c:	adrp	x1, 3c000 <vasnprintf@@Base+0x14944>
    b040:	ldr	x1, [x1, #3776]
    b044:	cbz	x1, b050 <xgetcwd@plt+0x50>
    b048:	mov	x16, x1
    b04c:	br	x16
    b050:	ret
    b054:	adrp	x0, 3d000 <base_len@@Base+0x2a06c>
    b058:	add	x0, x0, #0x6f0
    b05c:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b060:	add	x1, x1, #0x6f0
    b064:	sub	x1, x1, x0
    b068:	mov	x2, #0x2                   	// #2
    b06c:	asr	x1, x1, #3
    b070:	sdiv	x1, x1, x2
    b074:	cbz	x1, b08c <xgetcwd@plt+0x8c>
    b078:	adrp	x2, 3c000 <vasnprintf@@Base+0x14944>
    b07c:	ldr	x2, [x2, #4024]
    b080:	cbz	x2, b08c <xgetcwd@plt+0x8c>
    b084:	mov	x16, x2
    b088:	br	x16
    b08c:	ret
    b090:	adrp	x0, 3d000 <base_len@@Base+0x2a06c>
    b094:	ldrb	w1, [x0, #1776]
    b098:	cbnz	w1, b0dc <xgetcwd@plt+0xdc>
    b09c:	stp	x29, x30, [sp, #-32]!
    b0a0:	mov	x29, sp
    b0a4:	str	x19, [sp, #16]
    b0a8:	mov	x19, x0
    b0ac:	adrp	x0, 3c000 <vasnprintf@@Base+0x14944>
    b0b0:	ldr	x0, [x0, #3800]
    b0b4:	cbz	x0, b0c4 <xgetcwd@plt+0xc4>
    b0b8:	adrp	x0, 3d000 <base_len@@Base+0x2a06c>
    b0bc:	ldr	x0, [x0, #1696]
    b0c0:	bl	a4d0 <__cxa_finalize@plt>
    b0c4:	bl	b024 <xgetcwd@plt+0x24>
    b0c8:	mov	w0, #0x1                   	// #1
    b0cc:	strb	w0, [x19, #1776]
    b0d0:	ldr	x19, [sp, #16]
    b0d4:	ldp	x29, x30, [sp], #32
    b0d8:	ret
    b0dc:	ret
    b0e0:	b	b054 <xgetcwd@plt+0x54>

000000000000b0e4 <appendstr@@Base>:
    b0e4:	sub	sp, sp, #0x120
    b0e8:	stp	x29, x30, [sp, #224]
    b0ec:	stp	x20, x19, [sp, #272]
    b0f0:	add	x29, sp, #0xe0
    b0f4:	mov	x19, x0
    b0f8:	stp	x28, x23, [sp, #240]
    b0fc:	stp	x22, x21, [sp, #256]
    b100:	stp	x1, x2, [x29, #-88]
    b104:	stp	x3, x4, [x29, #-72]
    b108:	stp	x5, x6, [x29, #-56]
    b10c:	stur	x7, [x29, #-40]
    b110:	stp	q0, q1, [sp]
    b114:	stp	q2, q3, [sp, #32]
    b118:	stp	q4, q5, [sp, #64]
    b11c:	stp	q6, q7, [sp, #96]
    b120:	cbz	x0, b134 <appendstr@@Base+0x50>
    b124:	mov	x0, x19
    b128:	bl	a370 <strlen@plt>
    b12c:	mov	x20, x0
    b130:	b	b138 <appendstr@@Base+0x54>
    b134:	mov	x20, xzr
    b138:	mov	x8, #0xffffffffffffffc8    	// #-56
    b13c:	mov	x10, sp
    b140:	movk	x8, #0xff80, lsl #32
    b144:	sub	x11, x29, #0x58
    b148:	add	x10, x10, #0x80
    b14c:	add	x9, x29, #0x40
    b150:	add	x21, x20, #0x1
    b154:	add	x22, x11, #0x38
    b158:	stp	x10, x8, [x29, #-16]
    b15c:	mov	w8, #0xffffffc8            	// #-56
    b160:	stp	x9, x22, [x29, #-32]
    b164:	tbnz	w8, #31, b170 <appendstr@@Base+0x8c>
    b168:	mov	w23, w8
    b16c:	b	b188 <appendstr@@Base+0xa4>
    b170:	add	w23, w8, #0x8
    b174:	cmn	w8, #0x8
    b178:	stur	w23, [x29, #-8]
    b17c:	b.gt	b188 <appendstr@@Base+0xa4>
    b180:	add	x8, x22, w8, sxtw
    b184:	b	b194 <appendstr@@Base+0xb0>
    b188:	ldur	x8, [x29, #-32]
    b18c:	add	x9, x8, #0x8
    b190:	stur	x9, [x29, #-32]
    b194:	ldr	x0, [x8]
    b198:	cbz	x0, b1b0 <appendstr@@Base+0xcc>
    b19c:	bl	a370 <strlen@plt>
    b1a0:	add	x21, x0, x21
    b1a4:	mov	w8, w23
    b1a8:	tbz	w8, #31, b168 <appendstr@@Base+0x84>
    b1ac:	b	b170 <appendstr@@Base+0x8c>
    b1b0:	mov	x0, x19
    b1b4:	mov	x1, x21
    b1b8:	bl	a6e0 <xrealloc@plt>
    b1bc:	sub	x9, x29, #0x58
    b1c0:	mov	x10, sp
    b1c4:	mov	x11, #0xffffffffffffffc8    	// #-56
    b1c8:	mov	x19, x0
    b1cc:	add	x20, x0, x20
    b1d0:	add	x8, x29, #0x40
    b1d4:	movk	x11, #0xff80, lsl #32
    b1d8:	add	x9, x9, #0x38
    b1dc:	add	x10, x10, #0x80
    b1e0:	stp	x8, x9, [x29, #-32]
    b1e4:	stp	x10, x11, [x29, #-16]
    b1e8:	ldursw	x8, [x29, #-8]
    b1ec:	tbz	w8, #31, b20c <appendstr@@Base+0x128>
    b1f0:	add	w9, w8, #0x8
    b1f4:	cmn	w8, #0x8
    b1f8:	stur	w9, [x29, #-8]
    b1fc:	b.gt	b20c <appendstr@@Base+0x128>
    b200:	ldur	x9, [x29, #-24]
    b204:	add	x8, x9, x8
    b208:	b	b218 <appendstr@@Base+0x134>
    b20c:	ldur	x8, [x29, #-32]
    b210:	add	x9, x8, #0x8
    b214:	stur	x9, [x29, #-32]
    b218:	ldr	x21, [x8]
    b21c:	cbz	x21, b23c <appendstr@@Base+0x158>
    b220:	mov	x0, x20
    b224:	mov	x1, x21
    b228:	bl	ac60 <strcpy@plt>
    b22c:	mov	x0, x21
    b230:	bl	a370 <strlen@plt>
    b234:	add	x20, x20, x0
    b238:	b	b1e8 <appendstr@@Base+0x104>
    b23c:	mov	x0, x19
    b240:	ldp	x20, x19, [sp, #272]
    b244:	ldp	x22, x21, [sp, #256]
    b248:	ldp	x28, x23, [sp, #240]
    b24c:	ldp	x29, x30, [sp, #224]
    b250:	add	sp, sp, #0x120
    b254:	ret

000000000000b258 <do_cleanups_sigsafe@@Base>:
    b258:	stp	x29, x30, [sp, #-48]!
    b25c:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    b260:	adrp	x9, 3d000 <base_len@@Base+0x2a06c>
    b264:	stp	x20, x19, [sp, #32]
    b268:	ldr	w20, [x8, #1784]
    b26c:	ldr	w8, [x9, #1788]
    b270:	stp	x22, x21, [sp, #16]
    b274:	mov	x29, sp
    b278:	cmp	w20, w8
    b27c:	b.hi	b2d4 <do_cleanups_sigsafe@@Base+0x7c>  // b.pmore
    b280:	cbz	w20, b2c4 <do_cleanups_sigsafe@@Base+0x6c>
    b284:	sub	w8, w20, #0x1
    b288:	mov	w9, #0x18                  	// #24
    b28c:	mov	w19, w0
    b290:	umull	x21, w8, w9
    b294:	adrp	x22, 3d000 <base_len@@Base+0x2a06c>
    b298:	ldr	x8, [x22, #1792]
    b29c:	cbz	w19, b2ac <do_cleanups_sigsafe@@Base+0x54>
    b2a0:	add	x9, x8, x21
    b2a4:	ldr	w9, [x9, #16]
    b2a8:	cbz	w9, b2b8 <do_cleanups_sigsafe@@Base+0x60>
    b2ac:	add	x8, x8, x21
    b2b0:	ldp	x9, x0, [x8]
    b2b4:	blr	x9
    b2b8:	sub	w20, w20, #0x1
    b2bc:	sub	x21, x21, #0x18
    b2c0:	cbnz	w20, b298 <do_cleanups_sigsafe@@Base+0x40>
    b2c4:	ldp	x20, x19, [sp, #32]
    b2c8:	ldp	x22, x21, [sp, #16]
    b2cc:	ldp	x29, x30, [sp], #48
    b2d0:	ret
    b2d4:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    b2d8:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    b2dc:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    b2e0:	add	x0, x0, #0x360
    b2e4:	add	x1, x1, #0x36e
    b2e8:	add	x3, x3, #0x378
    b2ec:	mov	w2, #0xa9                  	// #169
    b2f0:	bl	aeb0 <__assert_fail@plt>

000000000000b2f4 <do_cleanups@@Base>:
    b2f4:	stp	x29, x30, [sp, #-32]!
    b2f8:	mov	w0, wzr
    b2fc:	str	x19, [sp, #16]
    b300:	mov	x29, sp
    b304:	bl	abf0 <do_cleanups_sigsafe@plt>
    b308:	adrp	x19, 3d000 <base_len@@Base+0x2a06c>
    b30c:	ldr	x0, [x19, #1792]
    b310:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    b314:	str	wzr, [x8, #1784]
    b318:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    b31c:	str	wzr, [x8, #1788]
    b320:	bl	aaa0 <free@plt>
    b324:	str	xzr, [x19, #1792]
    b328:	ldr	x19, [sp, #16]
    b32c:	ldp	x29, x30, [sp], #32
    b330:	ret

000000000000b334 <push_cleanup@@Base>:
    b334:	stp	x29, x30, [sp, #-64]!
    b338:	stp	x24, x23, [sp, #16]
    b33c:	stp	x22, x21, [sp, #32]
    b340:	adrp	x22, 3d000 <base_len@@Base+0x2a06c>
    b344:	adrp	x23, 3d000 <base_len@@Base+0x2a06c>
    b348:	ldr	w8, [x22, #1784]
    b34c:	ldr	w9, [x23, #1788]
    b350:	stp	x20, x19, [sp, #48]
    b354:	mov	x29, sp
    b358:	cmp	w8, w9
    b35c:	b.hi	b464 <push_cleanup@@Base+0x130>  // b.pmore
    b360:	adrp	x24, 3d000 <base_len@@Base+0x2a06c>
    b364:	ldrb	w10, [x24, #1800]
    b368:	mov	w19, w2
    b36c:	mov	x20, x1
    b370:	mov	x21, x0
    b374:	tbnz	w10, #0, b398 <push_cleanup@@Base+0x64>
    b378:	adrp	x0, 3c000 <vasnprintf@@Base+0x14944>
    b37c:	ldr	x0, [x0, #3840]
    b380:	bl	282e8 <vasnprintf@@Base+0xc2c>
    b384:	cbnz	w0, b44c <push_cleanup@@Base+0x118>
    b388:	ldr	w8, [x22, #1784]
    b38c:	ldr	w9, [x23, #1788]
    b390:	mov	w10, #0x1                   	// #1
    b394:	strb	w10, [x24, #1800]
    b398:	cmp	w8, w9
    b39c:	adrp	x24, 3d000 <base_len@@Base+0x2a06c>
    b3a0:	b.ne	b3d4 <push_cleanup@@Base+0xa0>  // b.any
    b3a4:	ldr	x0, [x24, #1792]
    b3a8:	cbz	x0, b438 <push_cleanup@@Base+0x104>
    b3ac:	add	w8, w9, #0x1
    b3b0:	mov	w9, #0x18                  	// #24
    b3b4:	umull	x1, w8, w9
    b3b8:	bl	a6e0 <xrealloc@plt>
    b3bc:	cbz	x0, b44c <push_cleanup@@Base+0x118>
    b3c0:	ldr	w9, [x23, #1788]
    b3c4:	ldr	w8, [x22, #1784]
    b3c8:	str	x0, [x24, #1792]
    b3cc:	add	w9, w9, #0x1
    b3d0:	str	w9, [x23, #1788]
    b3d4:	cmp	w8, w9
    b3d8:	b.cs	b484 <push_cleanup@@Base+0x150>  // b.hs, b.nlast
    b3dc:	ldr	x9, [x24, #1792]
    b3e0:	mov	w10, #0x18                  	// #24
    b3e4:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b3e8:	add	w11, w8, #0x1
    b3ec:	umaddl	x8, w8, w10, x9
    b3f0:	add	x1, x1, #0x710
    b3f4:	mov	w0, #0x1                   	// #1
    b3f8:	stp	x21, x20, [x8]
    b3fc:	str	w19, [x8, #16]
    b400:	str	w11, [x22, #1784]
    b404:	bl	b5c0 <pop_all_cleanups@@Base+0xc>
    b408:	cbnz	w0, b430 <push_cleanup@@Base+0xfc>
    b40c:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b410:	add	x1, x1, #0x7a8
    b414:	mov	w0, #0x2                   	// #2
    b418:	bl	b5c0 <pop_all_cleanups@@Base+0xc>
    b41c:	cbnz	w0, b430 <push_cleanup@@Base+0xfc>
    b420:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b424:	add	x1, x1, #0x840
    b428:	mov	w0, #0xf                   	// #15
    b42c:	bl	b5c0 <pop_all_cleanups@@Base+0xc>
    b430:	mov	w0, wzr
    b434:	b	b450 <push_cleanup@@Base+0x11c>
    b438:	add	w8, w9, #0x1
    b43c:	mov	w9, #0x18                  	// #24
    b440:	umull	x0, w8, w9
    b444:	bl	a790 <xmalloc@plt>
    b448:	cbnz	x0, b3c0 <push_cleanup@@Base+0x8c>
    b44c:	mov	w0, #0xffffffff            	// #-1
    b450:	ldp	x20, x19, [sp, #48]
    b454:	ldp	x22, x21, [sp, #32]
    b458:	ldp	x24, x23, [sp, #16]
    b45c:	ldp	x29, x30, [sp], #64
    b460:	ret
    b464:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    b468:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    b46c:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    b470:	add	x0, x0, #0x360
    b474:	add	x1, x1, #0x36e
    b478:	add	x3, x3, #0x396
    b47c:	mov	w2, #0xc8                  	// #200
    b480:	bl	aeb0 <__assert_fail@plt>
    b484:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    b488:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    b48c:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    b490:	add	x0, x0, #0x3c1
    b494:	add	x1, x1, #0x36e
    b498:	add	x3, x3, #0x396
    b49c:	mov	w2, #0xe0                  	// #224
    b4a0:	bl	aeb0 <__assert_fail@plt>

000000000000b4a4 <pop_cleanup@@Base>:
    b4a4:	stp	x29, x30, [sp, #-16]!
    b4a8:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    b4ac:	ldr	w9, [x8, #1784]
    b4b0:	mov	x29, sp
    b4b4:	cbz	w9, b558 <pop_cleanup@@Base+0xb4>
    b4b8:	adrp	x11, 3d000 <base_len@@Base+0x2a06c>
    b4bc:	ldr	x11, [x11, #1792]
    b4c0:	mov	w13, #0x18                  	// #24
    b4c4:	mov	x10, xzr
    b4c8:	sub	x14, x9, #0x1
    b4cc:	madd	x12, x9, x13, x11
    b4d0:	add	w15, w14, w10
    b4d4:	umull	x16, w15, w13
    b4d8:	ldr	x16, [x11, x16]
    b4dc:	cmp	x16, x0
    b4e0:	b.ne	b4f4 <pop_cleanup@@Base+0x50>  // b.any
    b4e4:	madd	x15, x15, x13, x11
    b4e8:	ldr	x15, [x15, #8]
    b4ec:	cmp	x15, x1
    b4f0:	b.eq	b50c <pop_cleanup@@Base+0x68>  // b.none
    b4f4:	sub	x10, x10, #0x1
    b4f8:	cmn	w9, w10
    b4fc:	sub	x12, x12, #0x18
    b500:	b.ne	b4d0 <pop_cleanup@@Base+0x2c>  // b.any
    b504:	ldp	x29, x30, [sp], #16
    b508:	ret
    b50c:	add	w13, w9, w10
    b510:	cmp	w9, w13
    b514:	b.ls	b544 <pop_cleanup@@Base+0xa0>  // b.plast
    b518:	mov	w13, #0xffffffff            	// #-1
    b51c:	add	x13, x9, x13
    b520:	mov	w14, #0x18                  	// #24
    b524:	ldr	x16, [x12, #16]
    b528:	ldr	q0, [x12], #24
    b52c:	add	w15, w13, w10
    b530:	adds	x10, x10, #0x1
    b534:	umaddl	x15, w15, w14, x11
    b538:	str	x16, [x15, #16]
    b53c:	str	q0, [x15]
    b540:	b.cc	b524 <pop_cleanup@@Base+0x80>  // b.lo, b.ul, b.last
    b544:	subs	w9, w9, #0x1
    b548:	str	w9, [x8, #1784]
    b54c:	b.ne	b504 <pop_cleanup@@Base+0x60>  // b.any
    b550:	ldp	x29, x30, [sp], #16
    b554:	b	b578 <pop_cleanup@@Base+0xd4>
    b558:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    b55c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    b560:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    b564:	add	x0, x0, #0x3ce
    b568:	add	x1, x1, #0x36e
    b56c:	add	x3, x3, #0x3d6
    b570:	mov	w2, #0xf5                  	// #245
    b574:	bl	aeb0 <__assert_fail@plt>
    b578:	stp	x29, x30, [sp, #-16]!
    b57c:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b580:	add	x1, x1, #0x710
    b584:	mov	w0, #0x1                   	// #1
    b588:	mov	x29, sp
    b58c:	bl	b6f8 <pop_all_cleanups@@Base+0x144>
    b590:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b594:	add	x1, x1, #0x7a8
    b598:	mov	w0, #0x2                   	// #2
    b59c:	bl	b6f8 <pop_all_cleanups@@Base+0x144>
    b5a0:	adrp	x1, 3d000 <base_len@@Base+0x2a06c>
    b5a4:	add	x1, x1, #0x840
    b5a8:	mov	w0, #0xf                   	// #15
    b5ac:	ldp	x29, x30, [sp], #16
    b5b0:	b	b6f8 <pop_all_cleanups@@Base+0x144>

000000000000b5b4 <pop_all_cleanups@@Base>:
    b5b4:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    b5b8:	str	wzr, [x8, #1784]
    b5bc:	b	b578 <pop_cleanup@@Base+0xd4>
    b5c0:	sub	sp, sp, #0xd0
    b5c4:	stp	x20, x19, [sp, #192]
    b5c8:	mov	x19, x1
    b5cc:	mov	x1, xzr
    b5d0:	mov	x2, x19
    b5d4:	stp	x29, x30, [sp, #160]
    b5d8:	str	x21, [sp, #176]
    b5dc:	add	x29, sp, #0xa0
    b5e0:	mov	w20, w0
    b5e4:	bl	a8e0 <sigaction@plt>
    b5e8:	cbz	w0, b5f4 <pop_all_cleanups@@Base+0x40>
    b5ec:	mov	w0, #0xffffffff            	// #-1
    b5f0:	b	b644 <pop_all_cleanups@@Base+0x90>
    b5f4:	ldr	x8, [x19]
    b5f8:	cbz	x8, b604 <pop_all_cleanups@@Base+0x50>
    b5fc:	mov	w0, wzr
    b600:	b	b644 <pop_all_cleanups@@Base+0x90>
    b604:	add	x8, sp, #0x8
    b608:	add	x21, x8, #0x8
    b60c:	mov	w2, #0x90                  	// #144
    b610:	mov	x0, x21
    b614:	mov	w1, wzr
    b618:	bl	a770 <memset@plt>
    b61c:	adrp	x8, b000 <xgetcwd@plt>
    b620:	add	x8, x8, #0x658
    b624:	mov	x0, x21
    b628:	str	x8, [sp, #8]
    b62c:	bl	a710 <sigemptyset@plt>
    b630:	add	x1, sp, #0x8
    b634:	mov	w0, w20
    b638:	mov	x2, x19
    b63c:	str	wzr, [sp, #144]
    b640:	bl	a8e0 <sigaction@plt>
    b644:	ldp	x20, x19, [sp, #192]
    b648:	ldr	x21, [sp, #176]
    b64c:	ldp	x29, x30, [sp, #160]
    b650:	add	sp, sp, #0xd0
    b654:	ret
    b658:	sub	sp, sp, #0x150
    b65c:	stp	x20, x19, [sp, #320]
    b660:	mov	w19, w0
    b664:	mov	w0, #0x1                   	// #1
    b668:	stp	x29, x30, [sp, #288]
    b66c:	str	x28, [sp, #304]
    b670:	add	x29, sp, #0x120
    b674:	bl	abf0 <do_cleanups_sigsafe@plt>
    b678:	add	x8, sp, #0x88
    b67c:	add	x0, sp, #0x88
    b680:	mov	w2, #0x98                  	// #152
    b684:	mov	w1, wzr
    b688:	add	x20, x8, #0x8
    b68c:	bl	a770 <memset@plt>
    b690:	mov	x0, x20
    b694:	bl	a710 <sigemptyset@plt>
    b698:	add	x1, sp, #0x88
    b69c:	mov	w0, w19
    b6a0:	mov	x2, xzr
    b6a4:	str	wzr, [sp, #272]
    b6a8:	bl	a8e0 <sigaction@plt>
    b6ac:	cbnz	w0, b6f0 <pop_all_cleanups@@Base+0x13c>
    b6b0:	add	x0, sp, #0x8
    b6b4:	bl	a710 <sigemptyset@plt>
    b6b8:	cbnz	w0, b6f0 <pop_all_cleanups@@Base+0x13c>
    b6bc:	add	x0, sp, #0x8
    b6c0:	mov	w1, w19
    b6c4:	bl	ae30 <sigaddset@plt>
    b6c8:	cbnz	w0, b6f0 <pop_all_cleanups@@Base+0x13c>
    b6cc:	add	x1, sp, #0x8
    b6d0:	mov	w0, #0x1                   	// #1
    b6d4:	mov	x2, xzr
    b6d8:	bl	a420 <sigprocmask@plt>
    b6dc:	cbnz	w0, b6f0 <pop_all_cleanups@@Base+0x13c>
    b6e0:	bl	a620 <getpid@plt>
    b6e4:	mov	w1, w19
    b6e8:	bl	a560 <kill@plt>
    b6ec:	bl	a980 <abort@plt>
    b6f0:	mov	w0, #0x2                   	// #2
    b6f4:	bl	a320 <_exit@plt>
    b6f8:	sub	sp, sp, #0xc0
    b6fc:	stp	x20, x19, [sp, #176]
    b700:	mov	x19, x1
    b704:	add	x2, sp, #0x8
    b708:	mov	x1, xzr
    b70c:	stp	x29, x30, [sp, #160]
    b710:	add	x29, sp, #0xa0
    b714:	mov	w20, w0
    b718:	bl	a8e0 <sigaction@plt>
    b71c:	cbz	w0, b728 <pop_all_cleanups@@Base+0x174>
    b720:	mov	w0, #0xffffffff            	// #-1
    b724:	b	b754 <pop_all_cleanups@@Base+0x1a0>
    b728:	ldr	x8, [sp, #8]
    b72c:	adrp	x9, b000 <xgetcwd@plt>
    b730:	add	x9, x9, #0x658
    b734:	cmp	x8, x9
    b738:	b.eq	b744 <pop_all_cleanups@@Base+0x190>  // b.none
    b73c:	mov	w0, wzr
    b740:	b	b754 <pop_all_cleanups@@Base+0x1a0>
    b744:	mov	w0, w20
    b748:	mov	x1, x19
    b74c:	mov	x2, xzr
    b750:	bl	a8e0 <sigaction@plt>
    b754:	ldp	x20, x19, [sp, #176]
    b758:	ldp	x29, x30, [sp, #160]
    b75c:	add	sp, sp, #0xc0
    b760:	ret

000000000000b764 <init_debug@@Base>:
    b764:	stp	x29, x30, [sp, #-16]!
    b768:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    b76c:	add	x0, x0, #0x3fc
    b770:	mov	x29, sp
    b774:	bl	aef0 <getenv@plt>
    b778:	cbz	x0, b79c <init_debug@@Base+0x38>
    b77c:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
    b780:	add	x1, x1, #0xfd3
    b784:	bl	aa10 <strcmp@plt>
    b788:	cbnz	w0, b79c <init_debug@@Base+0x38>
    b78c:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    b790:	ldr	x8, [x8, #3808]
    b794:	mov	w9, #0x1                   	// #1
    b798:	strb	w9, [x8]
    b79c:	ldp	x29, x30, [sp], #16
    b7a0:	ret

000000000000b7a4 <debug@@Base>:
    b7a4:	sub	sp, sp, #0x140
    b7a8:	stp	x29, x30, [sp, #288]
    b7ac:	str	x28, [sp, #304]
    b7b0:	stp	x1, x2, [sp, #136]
    b7b4:	stp	x3, x4, [sp, #152]
    b7b8:	stp	x5, x6, [sp, #168]
    b7bc:	str	x7, [sp, #184]
    b7c0:	stp	q0, q1, [sp]
    b7c4:	stp	q2, q3, [sp, #32]
    b7c8:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    b7cc:	ldr	x9, [x9, #3808]
    b7d0:	add	x29, sp, #0x120
    b7d4:	stp	q4, q5, [sp, #64]
    b7d8:	stp	q6, q7, [sp, #96]
    b7dc:	ldrb	w10, [x9]
    b7e0:	cbz	w10, b818 <debug@@Base+0x74>
    b7e4:	mov	x10, #0xffffffffffffffc8    	// #-56
    b7e8:	mov	x12, sp
    b7ec:	add	x13, sp, #0x88
    b7f0:	movk	x10, #0xff80, lsl #32
    b7f4:	add	x11, x29, #0x20
    b7f8:	add	x12, x12, #0x80
    b7fc:	add	x13, x13, #0x38
    b800:	stp	x12, x10, [x29, #-48]
    b804:	stp	x11, x13, [x29, #-64]
    b808:	ldrb	w9, [x9]
    b80c:	ldp	q0, q1, [x29, #-64]
    b810:	stp	q0, q1, [x29, #-96]
    b814:	cbnz	w9, b828 <debug@@Base+0x84>
    b818:	ldr	x28, [sp, #304]
    b81c:	ldp	x29, x30, [sp, #288]
    b820:	add	sp, sp, #0x140
    b824:	ret
    b828:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    b82c:	ldr	x9, [x9, #3816]
    b830:	mov	x8, x0
    b834:	ldp	q0, q1, [x29, #-96]
    b838:	sub	x2, x29, #0x20
    b83c:	ldr	x0, [x9]
    b840:	mov	x1, x8
    b844:	stp	q0, q1, [x29, #-32]
    b848:	bl	ae90 <vfprintf@plt>
    b84c:	b	b818 <debug@@Base+0x74>

000000000000b850 <debug_error@@Base>:
    b850:	sub	sp, sp, #0x140
    b854:	stp	x29, x30, [sp, #288]
    b858:	str	x28, [sp, #304]
    b85c:	stp	x1, x2, [sp, #136]
    b860:	stp	x3, x4, [sp, #152]
    b864:	stp	x5, x6, [sp, #168]
    b868:	str	x7, [sp, #184]
    b86c:	stp	q0, q1, [sp]
    b870:	stp	q2, q3, [sp, #32]
    b874:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    b878:	ldr	x9, [x9, #3808]
    b87c:	add	x29, sp, #0x120
    b880:	stp	q4, q5, [sp, #64]
    b884:	stp	q6, q7, [sp, #96]
    b888:	ldrb	w10, [x9]
    b88c:	cbz	w10, b8e0 <debug_error@@Base+0x90>
    b890:	mov	x10, #0xffffffffffffffc8    	// #-56
    b894:	mov	x12, sp
    b898:	add	x13, sp, #0x88
    b89c:	movk	x10, #0xff80, lsl #32
    b8a0:	add	x11, x29, #0x20
    b8a4:	add	x12, x12, #0x80
    b8a8:	add	x13, x13, #0x38
    b8ac:	stp	x12, x10, [x29, #-48]
    b8b0:	stp	x11, x13, [x29, #-64]
    b8b4:	ldrb	w9, [x9]
    b8b8:	ldp	q0, q1, [x29, #-64]
    b8bc:	stp	q0, q1, [x29, #-96]
    b8c0:	cbnz	w9, b8f0 <debug_error@@Base+0xa0>
    b8c4:	bl	aec0 <__errno_location@plt>
    b8c8:	ldr	w0, [x0]
    b8cc:	bl	a8b0 <strerror@plt>
    b8d0:	mov	x1, x0
    b8d4:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    b8d8:	add	x0, x0, #0x4ef
    b8dc:	bl	a5d0 <debug@plt>
    b8e0:	ldr	x28, [sp, #304]
    b8e4:	ldp	x29, x30, [sp, #288]
    b8e8:	add	sp, sp, #0x140
    b8ec:	ret
    b8f0:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    b8f4:	ldr	x9, [x9, #3816]
    b8f8:	mov	x8, x0
    b8fc:	ldp	q0, q1, [x29, #-96]
    b900:	sub	x2, x29, #0x20
    b904:	ldr	x0, [x9]
    b908:	mov	x1, x8
    b90c:	stp	q0, q1, [x29, #-32]
    b910:	bl	ae90 <vfprintf@plt>
    b914:	b	b8c4 <debug_error@@Base+0x74>

000000000000b918 <get_groff_preconv@@Base>:
    b918:	stp	x29, x30, [sp, #-32]!
    b91c:	stp	x20, x19, [sp, #16]
    b920:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    b924:	ldr	x20, [x20, #3832]
    b928:	mov	x29, sp
    b92c:	ldr	x19, [x20]
    b930:	cbnz	x19, b96c <get_groff_preconv@@Base+0x54>
    b934:	adrp	x19, 28000 <vasnprintf@@Base+0x944>
    b938:	add	x19, x19, #0x406
    b93c:	mov	x0, x19
    b940:	bl	ae40 <pathsearch_executable@plt>
    b944:	tbnz	w0, #0, b968 <get_groff_preconv@@Base+0x50>
    b948:	adrp	x19, 28000 <vasnprintf@@Base+0x944>
    b94c:	add	x19, x19, #0x407
    b950:	mov	x0, x19
    b954:	bl	ae40 <pathsearch_executable@plt>
    b958:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
    b95c:	add	x8, x8, #0x9e6
    b960:	tst	w0, #0x1
    b964:	csel	x19, x19, x8, ne  // ne = any
    b968:	str	x19, [x20]
    b96c:	ldrb	w8, [x19]
    b970:	cmp	w8, #0x0
    b974:	csel	x0, xzr, x19, eq  // eq = none
    b978:	ldp	x20, x19, [sp, #16]
    b97c:	ldp	x29, x30, [sp], #32
    b980:	ret

000000000000b984 <get_page_encoding@@Base>:
    b984:	stp	x29, x30, [sp, #-48]!
    b988:	str	x21, [sp, #16]
    b98c:	stp	x20, x19, [sp, #32]
    b990:	mov	x29, sp
    b994:	cbz	x0, b9a4 <get_page_encoding@@Base+0x20>
    b998:	ldrb	w8, [x0]
    b99c:	mov	x19, x0
    b9a0:	cbnz	w8, b9b8 <get_page_encoding@@Base+0x34>
    b9a4:	mov	w0, #0x5                   	// #5
    b9a8:	mov	x1, xzr
    b9ac:	bl	afd0 <setlocale@plt>
    b9b0:	mov	x19, x0
    b9b4:	cbz	x0, ba48 <get_page_encoding@@Base+0xc4>
    b9b8:	mov	w1, #0x2e                  	// #46
    b9bc:	mov	x0, x19
    b9c0:	bl	ab90 <strchr@plt>
    b9c4:	cbz	x0, ba14 <get_page_encoding@@Base+0x90>
    b9c8:	add	x19, x0, #0x1
    b9cc:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    b9d0:	add	x1, x1, #0x40f
    b9d4:	mov	x0, x19
    b9d8:	bl	ae70 <strcspn@plt>
    b9dc:	mov	x1, x0
    b9e0:	mov	x0, x19
    b9e4:	bl	ad10 <xstrndup@plt>
    b9e8:	mov	x19, x0
    b9ec:	bl	a360 <get_canonical_charset_name@plt>
    b9f0:	bl	a7b0 <xstrdup@plt>
    b9f4:	mov	x20, x0
    b9f8:	mov	x0, x19
    b9fc:	bl	aaa0 <free@plt>
    ba00:	mov	x0, x20
    ba04:	ldp	x20, x19, [sp, #32]
    ba08:	ldr	x21, [sp, #16]
    ba0c:	ldp	x29, x30, [sp], #48
    ba10:	ret
    ba14:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    ba18:	adrp	x21, 3b000 <vasnprintf@@Base+0x13944>
    ba1c:	add	x20, x20, #0x560
    ba20:	add	x21, x21, #0xc88
    ba24:	mov	x0, x20
    ba28:	bl	a370 <strlen@plt>
    ba2c:	mov	x2, x0
    ba30:	mov	x0, x20
    ba34:	mov	x1, x19
    ba38:	bl	a740 <strncmp@plt>
    ba3c:	cbz	w0, ba54 <get_page_encoding@@Base+0xd0>
    ba40:	ldr	x20, [x21], #16
    ba44:	cbnz	x20, ba24 <get_page_encoding@@Base+0xa0>
    ba48:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    ba4c:	add	x0, x0, #0xa73
    ba50:	b	ba58 <get_page_encoding@@Base+0xd4>
    ba54:	ldur	x0, [x21, #-8]
    ba58:	ldp	x20, x19, [sp, #32]
    ba5c:	ldr	x21, [sp, #16]
    ba60:	ldp	x29, x30, [sp], #48
    ba64:	b	a7b0 <xstrdup@plt>

000000000000ba68 <get_canonical_charset_name@@Base>:
    ba68:	stp	x29, x30, [sp, #-48]!
    ba6c:	str	x21, [sp, #16]
    ba70:	stp	x20, x19, [sp, #32]
    ba74:	mov	x29, sp
    ba78:	mov	x19, x0
    ba7c:	bl	a7b0 <xstrdup@plt>
    ba80:	ldrb	w21, [x0]
    ba84:	mov	x20, x0
    ba88:	cbz	w21, bab0 <get_canonical_charset_name@@Base+0x48>
    ba8c:	bl	a870 <__ctype_toupper_loc@plt>
    ba90:	add	x8, x20, #0x1
    ba94:	ldr	x9, [x0]
    ba98:	and	x10, x21, #0xff
    ba9c:	ldrb	w21, [x8]
    baa0:	ldr	w9, [x9, x10, lsl #2]
    baa4:	sturb	w9, [x8, #-1]
    baa8:	add	x8, x8, #0x1
    baac:	cbnz	w21, ba94 <get_canonical_charset_name@@Base+0x2c>
    bab0:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    bab4:	adrp	x21, 3b000 <vasnprintf@@Base+0x13944>
    bab8:	add	x0, x0, #0x647
    babc:	add	x21, x21, #0xf68
    bac0:	mov	x1, x20
    bac4:	bl	aa10 <strcmp@plt>
    bac8:	cbz	w0, bae0 <get_canonical_charset_name@@Base+0x78>
    bacc:	ldr	x0, [x21], #16
    bad0:	cbnz	x0, bac0 <get_canonical_charset_name@@Base+0x58>
    bad4:	mov	x0, x20
    bad8:	bl	aaa0 <free@plt>
    badc:	b	baec <get_canonical_charset_name@@Base+0x84>
    bae0:	mov	x0, x20
    bae4:	bl	aaa0 <free@plt>
    bae8:	ldur	x19, [x21, #-8]
    baec:	mov	x0, x19
    baf0:	ldp	x20, x19, [sp, #32]
    baf4:	ldr	x21, [sp, #16]
    baf8:	ldp	x29, x30, [sp], #48
    bafc:	ret

000000000000bb00 <get_source_encoding@@Base>:
    bb00:	stp	x29, x30, [sp, #-48]!
    bb04:	stp	x22, x21, [sp, #16]
    bb08:	stp	x20, x19, [sp, #32]
    bb0c:	mov	x29, sp
    bb10:	cbz	x0, bb20 <get_source_encoding@@Base+0x20>
    bb14:	ldrb	w8, [x0]
    bb18:	mov	x19, x0
    bb1c:	cbnz	w8, bb34 <get_source_encoding@@Base+0x34>
    bb20:	mov	w0, #0x5                   	// #5
    bb24:	mov	x1, xzr
    bb28:	bl	afd0 <setlocale@plt>
    bb2c:	mov	x19, x0
    bb30:	cbz	x0, bb7c <get_source_encoding@@Base+0x7c>
    bb34:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    bb38:	adrp	x22, 3b000 <vasnprintf@@Base+0x13944>
    bb3c:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    bb40:	add	x21, x21, #0x560
    bb44:	add	x22, x22, #0xc88
    bb48:	add	x20, x20, #0xa73
    bb4c:	mov	x0, x21
    bb50:	bl	a370 <strlen@plt>
    bb54:	mov	x2, x0
    bb58:	mov	x0, x21
    bb5c:	mov	x1, x19
    bb60:	bl	a740 <strncmp@plt>
    bb64:	cbz	w0, bb74 <get_source_encoding@@Base+0x74>
    bb68:	ldr	x21, [x22], #16
    bb6c:	cbnz	x21, bb4c <get_source_encoding@@Base+0x4c>
    bb70:	b	bb84 <get_source_encoding@@Base+0x84>
    bb74:	ldur	x20, [x22, #-8]
    bb78:	b	bb84 <get_source_encoding@@Base+0x84>
    bb7c:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    bb80:	add	x20, x20, #0xa73
    bb84:	mov	x0, x20
    bb88:	ldp	x20, x19, [sp, #32]
    bb8c:	ldp	x22, x21, [sp, #16]
    bb90:	ldp	x29, x30, [sp], #48
    bb94:	ret

000000000000bb98 <get_locale_charset@@Base>:
    bb98:	stp	x29, x30, [sp, #-32]!
    bb9c:	mov	w0, wzr
    bba0:	mov	x1, xzr
    bba4:	stp	x20, x19, [sp, #16]
    bba8:	mov	x29, sp
    bbac:	bl	afd0 <setlocale@plt>
    bbb0:	cbz	x0, bbc0 <get_locale_charset@@Base+0x28>
    bbb4:	bl	a7b0 <xstrdup@plt>
    bbb8:	mov	x19, x0
    bbbc:	b	bbc4 <get_locale_charset@@Base+0x2c>
    bbc0:	mov	x19, xzr
    bbc4:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
    bbc8:	add	x1, x1, #0x9e6
    bbcc:	mov	w0, wzr
    bbd0:	bl	afd0 <setlocale@plt>
    bbd4:	bl	af00 <locale_charset@plt>
    bbd8:	mov	x20, x0
    bbdc:	mov	w0, wzr
    bbe0:	mov	x1, x19
    bbe4:	bl	afd0 <setlocale@plt>
    bbe8:	mov	x0, x19
    bbec:	bl	aaa0 <free@plt>
    bbf0:	cbz	x20, bc0c <get_locale_charset@@Base+0x74>
    bbf4:	ldrb	w8, [x20]
    bbf8:	cbz	w8, bc0c <get_locale_charset@@Base+0x74>
    bbfc:	mov	x0, x20
    bc00:	ldp	x20, x19, [sp, #16]
    bc04:	ldp	x29, x30, [sp], #32
    bc08:	b	a360 <get_canonical_charset_name@plt>
    bc0c:	ldp	x20, x19, [sp, #16]
    bc10:	mov	x0, xzr
    bc14:	ldp	x29, x30, [sp], #32
    bc18:	ret

000000000000bc1c <find_charset_locale@@Base>:
    bc1c:	sub	sp, sp, #0x70
    bc20:	stp	x29, x30, [sp, #48]
    bc24:	str	x23, [sp, #64]
    bc28:	stp	x22, x21, [sp, #80]
    bc2c:	stp	x20, x19, [sp, #96]
    bc30:	add	x29, sp, #0x30
    bc34:	mov	x19, x0
    bc38:	bl	a360 <get_canonical_charset_name@plt>
    bc3c:	adrp	x8, 28000 <vasnprintf@@Base+0x944>
    bc40:	add	x8, x8, #0x412
    bc44:	ldr	q0, [x8]
    bc48:	ldur	q1, [x8, #10]
    bc4c:	mov	x21, x0
    bc50:	str	xzr, [x29, #24]
    bc54:	str	q0, [sp, #16]
    bc58:	stur	q1, [sp, #26]
    bc5c:	str	xzr, [sp, #8]
    bc60:	bl	ae00 <get_locale_charset@plt>
    bc64:	mov	x1, x0
    bc68:	mov	x0, x19
    bc6c:	bl	aa10 <strcmp@plt>
    bc70:	cbz	w0, bc90 <find_charset_locale@@Base+0x74>
    bc74:	mov	w0, wzr
    bc78:	mov	x1, xzr
    bc7c:	bl	afd0 <setlocale@plt>
    bc80:	cbz	x0, bc98 <find_charset_locale@@Base+0x7c>
    bc84:	bl	a7b0 <xstrdup@plt>
    bc88:	mov	x19, x0
    bc8c:	b	bc9c <find_charset_locale@@Base+0x80>
    bc90:	mov	x22, xzr
    bc94:	b	bdac <find_charset_locale@@Base+0x190>
    bc98:	mov	x19, xzr
    bc9c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    bca0:	add	x1, x1, #0x864
    bca4:	add	x0, sp, #0x10
    bca8:	bl	a640 <fopen@plt>
    bcac:	mov	x20, x0
    bcb0:	cbz	x0, bd58 <find_charset_locale@@Base+0x13c>
    bcb4:	add	x0, x29, #0x18
    bcb8:	add	x1, sp, #0x8
    bcbc:	mov	x2, x20
    bcc0:	bl	aa60 <getline@plt>
    bcc4:	tbnz	x0, #63, bd58 <find_charset_locale@@Base+0x13c>
    bcc8:	ldr	x23, [x29, #24]
    bccc:	mov	w1, #0x20                  	// #32
    bcd0:	mov	x0, x23
    bcd4:	bl	ab90 <strchr@plt>
    bcd8:	cbz	x0, bd48 <find_charset_locale@@Base+0x12c>
    bcdc:	mov	x22, x0
    bce0:	add	x0, x0, #0x1
    bce4:	bl	a7b0 <xstrdup@plt>
    bce8:	mov	w1, #0xa                   	// #10
    bcec:	mov	x23, x0
    bcf0:	bl	ab90 <strchr@plt>
    bcf4:	cbz	x0, bcfc <find_charset_locale@@Base+0xe0>
    bcf8:	strb	wzr, [x0]
    bcfc:	mov	x0, x23
    bd00:	bl	a360 <get_canonical_charset_name@plt>
    bd04:	mov	x1, x0
    bd08:	mov	x0, x21
    bd0c:	bl	aa10 <strcmp@plt>
    bd10:	cbnz	w0, bd3c <find_charset_locale@@Base+0x120>
    bd14:	ldr	x0, [x29, #24]
    bd18:	sub	x1, x22, x0
    bd1c:	bl	ad10 <xstrndup@plt>
    bd20:	mov	x22, x0
    bd24:	mov	w0, wzr
    bd28:	mov	x1, x22
    bd2c:	bl	afd0 <setlocale@plt>
    bd30:	cbnz	x0, be1c <find_charset_locale@@Base+0x200>
    bd34:	mov	x0, x22
    bd38:	bl	aaa0 <free@plt>
    bd3c:	mov	x0, x23
    bd40:	bl	aaa0 <free@plt>
    bd44:	ldr	x23, [x29, #24]
    bd48:	mov	x0, x23
    bd4c:	bl	aaa0 <free@plt>
    bd50:	str	xzr, [x29, #24]
    bd54:	b	bcb4 <find_charset_locale@@Base+0x98>
    bd58:	mov	x0, x21
    bd5c:	bl	a370 <strlen@plt>
    bd60:	cmp	x0, #0x5
    bd64:	b.cc	bd80 <find_charset_locale@@Base+0x164>  // b.lo, b.ul, b.last
    bd68:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    bd6c:	add	x1, x1, #0x42e
    bd70:	mov	w2, #0x5                   	// #5
    bd74:	mov	x0, x21
    bd78:	bl	a740 <strncmp@plt>
    bd7c:	cbz	w0, bdc8 <find_charset_locale@@Base+0x1ac>
    bd80:	mov	x22, xzr
    bd84:	ldr	x0, [x29, #24]
    bd88:	bl	aaa0 <free@plt>
    bd8c:	mov	w0, wzr
    bd90:	mov	x1, x19
    bd94:	bl	afd0 <setlocale@plt>
    bd98:	mov	x0, x19
    bd9c:	bl	aaa0 <free@plt>
    bda0:	cbz	x20, bdac <find_charset_locale@@Base+0x190>
    bda4:	mov	x0, x20
    bda8:	bl	a5f0 <fclose@plt>
    bdac:	mov	x0, x22
    bdb0:	ldp	x20, x19, [sp, #96]
    bdb4:	ldp	x22, x21, [sp, #80]
    bdb8:	ldr	x23, [sp, #64]
    bdbc:	ldp	x29, x30, [sp, #48]
    bdc0:	add	sp, sp, #0x70
    bdc4:	ret
    bdc8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    bdcc:	add	x0, x0, #0x42c
    bdd0:	bl	a7b0 <xstrdup@plt>
    bdd4:	mov	x22, x0
    bdd8:	mov	w0, wzr
    bddc:	mov	x1, x22
    bde0:	bl	afd0 <setlocale@plt>
    bde4:	cbnz	x0, bd84 <find_charset_locale@@Base+0x168>
    bde8:	mov	x0, x22
    bdec:	bl	aaa0 <free@plt>
    bdf0:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    bdf4:	add	x0, x0, #0x434
    bdf8:	bl	a7b0 <xstrdup@plt>
    bdfc:	mov	x22, x0
    be00:	mov	w0, wzr
    be04:	mov	x1, x22
    be08:	bl	afd0 <setlocale@plt>
    be0c:	cbnz	x0, bd84 <find_charset_locale@@Base+0x168>
    be10:	mov	x0, x22
    be14:	bl	aaa0 <free@plt>
    be18:	b	bd80 <find_charset_locale@@Base+0x164>
    be1c:	mov	x0, x23
    be20:	bl	aaa0 <free@plt>
    be24:	b	bd84 <find_charset_locale@@Base+0x168>

000000000000be28 <get_default_device@@Base>:
    be28:	stp	x29, x30, [sp, #-96]!
    be2c:	stp	x28, x27, [sp, #16]
    be30:	stp	x26, x25, [sp, #32]
    be34:	stp	x24, x23, [sp, #48]
    be38:	stp	x22, x21, [sp, #64]
    be3c:	stp	x20, x19, [sp, #80]
    be40:	mov	x29, sp
    be44:	mov	x20, x1
    be48:	mov	x19, x0
    be4c:	bl	a720 <get_groff_preconv@plt>
    be50:	cbz	x0, be78 <get_default_device@@Base+0x50>
    be54:	cbz	x19, be6c <get_default_device@@Base+0x44>
    be58:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    be5c:	add	x1, x1, #0x440
    be60:	mov	x0, x19
    be64:	bl	aa10 <strcmp@plt>
    be68:	cbz	w0, bfbc <get_default_device@@Base+0x194>
    be6c:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    be70:	add	x21, x21, #0x455
    be74:	b	bfd0 <get_default_device@@Base+0x1a8>
    be78:	cbz	x19, bfc8 <get_default_device@@Base+0x1a0>
    be7c:	adrp	x22, 28000 <vasnprintf@@Base+0x944>
    be80:	add	x22, x22, #0x440
    be84:	adrp	x27, 3c000 <vasnprintf@@Base+0x14944>
    be88:	adrp	x23, 28000 <vasnprintf@@Base+0x944>
    be8c:	adrp	x24, 28000 <vasnprintf@@Base+0x944>
    be90:	adrp	x25, 28000 <vasnprintf@@Base+0x944>
    be94:	adrp	x26, 28000 <vasnprintf@@Base+0x944>
    be98:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    be9c:	add	x27, x27, #0x220
    bea0:	add	x23, x23, #0x42e
    bea4:	add	x24, x24, #0x642
    bea8:	add	x25, x25, #0x638
    beac:	add	x26, x26, #0x5be
    beb0:	add	x21, x21, #0x808
    beb4:	mov	x0, x22
    beb8:	mov	x1, x19
    bebc:	bl	aa10 <strcmp@plt>
    bec0:	cbnz	w0, bfa4 <get_default_device@@Base+0x17c>
    bec4:	ldr	x0, [x27]
    bec8:	mov	x1, x20
    becc:	bl	a450 <get_roff_encoding@plt>
    bed0:	mov	x28, x0
    bed4:	mov	x0, x20
    bed8:	mov	x1, x28
    bedc:	bl	aa10 <strcmp@plt>
    bee0:	cbz	w0, bfb4 <get_default_device@@Base+0x18c>
    bee4:	mov	x0, x20
    bee8:	mov	x1, x22
    beec:	bl	aa10 <strcmp@plt>
    bef0:	cbz	w0, bfb4 <get_default_device@@Base+0x18c>
    bef4:	mov	x0, x20
    bef8:	mov	x1, x23
    befc:	bl	aa10 <strcmp@plt>
    bf00:	cbz	w0, bfb4 <get_default_device@@Base+0x18c>
    bf04:	mov	x0, x28
    bf08:	mov	x1, x22
    bf0c:	bl	aa10 <strcmp@plt>
    bf10:	cbz	w0, bfb4 <get_default_device@@Base+0x18c>
    bf14:	mov	x0, x20
    bf18:	mov	x1, x24
    bf1c:	bl	aa10 <strcmp@plt>
    bf20:	cbz	w0, bf94 <get_default_device@@Base+0x16c>
    bf24:	mov	x0, x20
    bf28:	mov	x1, x25
    bf2c:	bl	aa10 <strcmp@plt>
    bf30:	cbz	w0, bf94 <get_default_device@@Base+0x16c>
    bf34:	mov	x0, x20
    bf38:	mov	x1, x26
    bf3c:	bl	aa10 <strcmp@plt>
    bf40:	cbz	w0, bf94 <get_default_device@@Base+0x16c>
    bf44:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    bf48:	mov	x0, x20
    bf4c:	add	x1, x1, #0x726
    bf50:	bl	aa10 <strcmp@plt>
    bf54:	cbz	w0, bf94 <get_default_device@@Base+0x16c>
    bf58:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    bf5c:	mov	x0, x20
    bf60:	add	x1, x1, #0x634
    bf64:	bl	aa10 <strcmp@plt>
    bf68:	cbz	w0, bf94 <get_default_device@@Base+0x16c>
    bf6c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    bf70:	mov	x0, x20
    bf74:	add	x1, x1, #0x5c8
    bf78:	bl	aa10 <strcmp@plt>
    bf7c:	cbz	w0, bf94 <get_default_device@@Base+0x16c>
    bf80:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    bf84:	mov	x0, x20
    bf88:	add	x1, x1, #0x73f
    bf8c:	bl	aa10 <strcmp@plt>
    bf90:	cbnz	w0, bfa4 <get_default_device@@Base+0x17c>
    bf94:	mov	x0, x28
    bf98:	mov	x1, x23
    bf9c:	bl	aa10 <strcmp@plt>
    bfa0:	cbz	w0, bfb4 <get_default_device@@Base+0x18c>
    bfa4:	ldr	x0, [x27, #8]
    bfa8:	add	x27, x27, #0x10
    bfac:	cbnz	x0, beb8 <get_default_device@@Base+0x90>
    bfb0:	b	bfd0 <get_default_device@@Base+0x1a8>
    bfb4:	ldr	x21, [x27]
    bfb8:	b	bfd0 <get_default_device@@Base+0x1a8>
    bfbc:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    bfc0:	add	x21, x21, #0x44f
    bfc4:	b	bfd0 <get_default_device@@Base+0x1a8>
    bfc8:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    bfcc:	add	x21, x21, #0x808
    bfd0:	mov	x0, x21
    bfd4:	ldp	x20, x19, [sp, #80]
    bfd8:	ldp	x22, x21, [sp, #64]
    bfdc:	ldp	x24, x23, [sp, #48]
    bfe0:	ldp	x26, x25, [sp, #32]
    bfe4:	ldp	x28, x27, [sp, #16]
    bfe8:	ldp	x29, x30, [sp], #96
    bfec:	ret

000000000000bff0 <get_roff_encoding@@Base>:
    bff0:	stp	x29, x30, [sp, #-48]!
    bff4:	stp	x20, x19, [sp, #32]
    bff8:	mov	x19, x1
    bffc:	stp	x22, x21, [sp, #16]
    c000:	mov	x29, sp
    c004:	cbz	x0, c03c <get_roff_encoding@@Base+0x4c>
    c008:	mov	x20, x0
    c00c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c010:	adrp	x22, 3c000 <vasnprintf@@Base+0x14944>
    c014:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    c018:	add	x0, x0, #0x44f
    c01c:	add	x22, x22, #0x2d0
    c020:	add	x21, x21, #0xa68
    c024:	mov	x1, x20
    c028:	bl	aa10 <strcmp@plt>
    c02c:	cbz	w0, c048 <get_roff_encoding@@Base+0x58>
    c030:	ldr	x0, [x22], #24
    c034:	cbnz	x0, c024 <get_roff_encoding@@Base+0x34>
    c038:	b	c04c <get_roff_encoding@@Base+0x5c>
    c03c:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    c040:	add	x21, x21, #0xa68
    c044:	b	c11c <get_roff_encoding@@Base+0x12c>
    c048:	ldur	x21, [x22, #-16]
    c04c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c050:	add	x1, x1, #0x455
    c054:	mov	x0, x20
    c058:	bl	aa10 <strcmp@plt>
    c05c:	cbnz	w0, c11c <get_roff_encoding@@Base+0x12c>
    c060:	bl	a720 <get_groff_preconv@plt>
    c064:	cbnz	x0, c11c <get_roff_encoding@@Base+0x12c>
    c068:	bl	ae00 <get_locale_charset@plt>
    c06c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c070:	add	x1, x1, #0x42e
    c074:	bl	aa10 <strcmp@plt>
    c078:	cbnz	w0, c11c <get_roff_encoding@@Base+0x12c>
    c07c:	mov	x1, xzr
    c080:	bl	afd0 <setlocale@plt>
    c084:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c088:	add	x1, x1, #0x45a
    c08c:	mov	w2, #0x5                   	// #5
    c090:	mov	x20, x0
    c094:	bl	a740 <strncmp@plt>
    c098:	cbz	w0, c114 <get_roff_encoding@@Base+0x124>
    c09c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c0a0:	add	x1, x1, #0x460
    c0a4:	mov	w2, #0x5                   	// #5
    c0a8:	mov	x0, x20
    c0ac:	bl	a740 <strncmp@plt>
    c0b0:	cbz	w0, c114 <get_roff_encoding@@Base+0x124>
    c0b4:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c0b8:	add	x1, x1, #0x466
    c0bc:	mov	w2, #0x5                   	// #5
    c0c0:	mov	x0, x20
    c0c4:	bl	a740 <strncmp@plt>
    c0c8:	cbz	w0, c114 <get_roff_encoding@@Base+0x124>
    c0cc:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c0d0:	add	x1, x1, #0x46c
    c0d4:	mov	w2, #0x5                   	// #5
    c0d8:	mov	x0, x20
    c0dc:	bl	a740 <strncmp@plt>
    c0e0:	cbz	w0, c114 <get_roff_encoding@@Base+0x124>
    c0e4:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c0e8:	add	x1, x1, #0x472
    c0ec:	mov	w2, #0x5                   	// #5
    c0f0:	mov	x0, x20
    c0f4:	bl	a740 <strncmp@plt>
    c0f8:	cbz	w0, c114 <get_roff_encoding@@Base+0x124>
    c0fc:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c100:	add	x1, x1, #0x478
    c104:	mov	w2, #0x5                   	// #5
    c108:	mov	x0, x20
    c10c:	bl	a740 <strncmp@plt>
    c110:	cbnz	w0, c11c <get_roff_encoding@@Base+0x12c>
    c114:	adrp	x21, 28000 <vasnprintf@@Base+0x944>
    c118:	add	x21, x21, #0x42e
    c11c:	cmp	x21, #0x0
    c120:	csel	x0, x19, x21, eq  // eq = none
    c124:	ldp	x20, x19, [sp, #32]
    c128:	ldp	x22, x21, [sp, #16]
    c12c:	ldp	x29, x30, [sp], #48
    c130:	ret

000000000000c134 <is_roff_device@@Base>:
    c134:	stp	x29, x30, [sp, #-32]!
    c138:	stp	x20, x19, [sp, #16]
    c13c:	mov	x19, x0
    c140:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c144:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    c148:	mov	x29, sp
    c14c:	add	x0, x0, #0x44f
    c150:	add	x20, x20, #0x2d0
    c154:	mov	x1, x19
    c158:	bl	aa10 <strcmp@plt>
    c15c:	cbz	w0, c16c <is_roff_device@@Base+0x38>
    c160:	ldr	x0, [x20], #24
    c164:	cbnz	x0, c154 <is_roff_device@@Base+0x20>
    c168:	b	c170 <is_roff_device@@Base+0x3c>
    c16c:	mov	w0, #0x1                   	// #1
    c170:	ldp	x20, x19, [sp, #16]
    c174:	ldp	x29, x30, [sp], #32
    c178:	ret

000000000000c17c <get_output_encoding@@Base>:
    c17c:	stp	x29, x30, [sp, #-32]!
    c180:	stp	x20, x19, [sp, #16]
    c184:	mov	x19, x0
    c188:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c18c:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    c190:	add	x0, x0, #0x44f
    c194:	add	x20, x20, #0x2d0
    c198:	mov	x29, sp
    c19c:	mov	x1, x19
    c1a0:	bl	aa10 <strcmp@plt>
    c1a4:	cbz	w0, c1b4 <get_output_encoding@@Base+0x38>
    c1a8:	ldr	x0, [x20], #24
    c1ac:	cbnz	x0, c19c <get_output_encoding@@Base+0x20>
    c1b0:	b	c1b8 <get_output_encoding@@Base+0x3c>
    c1b4:	ldur	x0, [x20, #-8]
    c1b8:	ldp	x20, x19, [sp, #16]
    c1bc:	ldp	x29, x30, [sp], #32
    c1c0:	ret

000000000000c1c4 <get_less_charset@@Base>:
    c1c4:	stp	x29, x30, [sp, #-48]!
    c1c8:	str	x21, [sp, #16]
    c1cc:	stp	x20, x19, [sp, #32]
    c1d0:	mov	x29, sp
    c1d4:	cbz	x0, c20c <get_less_charset@@Base+0x48>
    c1d8:	mov	x20, x0
    c1dc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c1e0:	adrp	x21, 3c000 <vasnprintf@@Base+0x14944>
    c1e4:	adrp	x19, 28000 <vasnprintf@@Base+0x944>
    c1e8:	add	x0, x0, #0x440
    c1ec:	add	x21, x21, #0x438
    c1f0:	add	x19, x19, #0xa7e
    c1f4:	mov	x1, x20
    c1f8:	bl	aa10 <strcmp@plt>
    c1fc:	cbz	w0, c218 <get_less_charset@@Base+0x54>
    c200:	ldr	x0, [x21], #24
    c204:	cbnz	x0, c1f4 <get_less_charset@@Base+0x30>
    c208:	b	c21c <get_less_charset@@Base+0x58>
    c20c:	adrp	x19, 28000 <vasnprintf@@Base+0x944>
    c210:	add	x19, x19, #0xa7e
    c214:	b	c21c <get_less_charset@@Base+0x58>
    c218:	ldur	x19, [x21, #-16]
    c21c:	mov	x0, x19
    c220:	ldp	x20, x19, [sp, #32]
    c224:	ldr	x21, [sp, #16]
    c228:	ldp	x29, x30, [sp], #48
    c22c:	ret

000000000000c230 <get_jless_charset@@Base>:
    c230:	stp	x29, x30, [sp, #-32]!
    c234:	stp	x20, x19, [sp, #16]
    c238:	mov	x29, sp
    c23c:	cbz	x0, c270 <get_jless_charset@@Base+0x40>
    c240:	mov	x19, x0
    c244:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c248:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    c24c:	add	x0, x0, #0x440
    c250:	add	x20, x20, #0x438
    c254:	mov	x1, x19
    c258:	bl	aa10 <strcmp@plt>
    c25c:	cbz	w0, c26c <get_jless_charset@@Base+0x3c>
    c260:	ldr	x0, [x20], #24
    c264:	cbnz	x0, c254 <get_jless_charset@@Base+0x24>
    c268:	b	c270 <get_jless_charset@@Base+0x40>
    c26c:	ldur	x0, [x20, #-8]
    c270:	ldp	x20, x19, [sp, #16]
    c274:	ldp	x29, x30, [sp], #32
    c278:	ret

000000000000c27c <check_preprocessor_encoding@@Base>:
    c27c:	stp	x29, x30, [sp, #-96]!
    c280:	stp	x28, x27, [sp, #16]
    c284:	stp	x26, x25, [sp, #32]
    c288:	stp	x24, x23, [sp, #48]
    c28c:	stp	x22, x21, [sp, #64]
    c290:	stp	x20, x19, [sp, #80]
    c294:	mov	x29, sp
    c298:	mov	x19, x2
    c29c:	mov	x20, x1
    c2a0:	bl	abe0 <pipeline_peekline@plt>
    c2a4:	cbz	x0, c38c <check_preprocessor_encoding@@Base+0x110>
    c2a8:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c2ac:	add	x1, x1, #0x47e
    c2b0:	mov	w2, #0x4                   	// #4
    c2b4:	mov	x21, x0
    c2b8:	bl	a740 <strncmp@plt>
    c2bc:	cbz	w0, c2d8 <check_preprocessor_encoding@@Base+0x5c>
    c2c0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c2c4:	add	x1, x1, #0x483
    c2c8:	mov	w2, #0x4                   	// #4
    c2cc:	mov	x0, x21
    c2d0:	bl	a740 <strncmp@plt>
    c2d4:	cbnz	w0, c38c <check_preprocessor_encoding@@Base+0x110>
    c2d8:	mov	w1, #0xa                   	// #10
    c2dc:	mov	x0, x21
    c2e0:	bl	ab90 <strchr@plt>
    c2e4:	mov	x22, x0
    c2e8:	add	x23, x21, #0x4
    c2ec:	cbnz	x0, c2fc <check_preprocessor_encoding@@Base+0x80>
    c2f0:	mov	x0, x23
    c2f4:	bl	a370 <strlen@plt>
    c2f8:	add	x22, x23, x0
    c2fc:	adrp	x2, 28000 <vasnprintf@@Base+0x944>
    c300:	sub	x1, x22, x23
    c304:	add	x2, x2, #0x488
    c308:	mov	w3, #0x3                   	// #3
    c30c:	mov	x0, x23
    c310:	bl	a920 <memmem@plt>
    c314:	cbz	x0, c38c <check_preprocessor_encoding@@Base+0x110>
    c318:	add	x25, x0, #0x3
    c31c:	cmp	x25, x22
    c320:	b.cs	c38c <check_preprocessor_encoding@@Base+0x110>  // b.hs, b.nlast
    c324:	adrp	x24, 28000 <vasnprintf@@Base+0x944>
    c328:	add	x24, x24, #0x48c
    c32c:	ldrb	w8, [x25]
    c330:	cmp	w8, #0x20
    c334:	b.eq	c340 <check_preprocessor_encoding@@Base+0xc4>  // b.none
    c338:	cbnz	w8, c34c <check_preprocessor_encoding@@Base+0xd0>
    c33c:	b	c38c <check_preprocessor_encoding@@Base+0x110>
    c340:	ldrb	w8, [x25, #1]!
    c344:	cmp	w8, #0x20
    c348:	b.eq	c340 <check_preprocessor_encoding@@Base+0xc4>  // b.none
    c34c:	mov	w2, #0x7                   	// #7
    c350:	mov	x0, x25
    c354:	mov	x1, x24
    c358:	bl	a740 <strncmp@plt>
    c35c:	cbz	w0, c3b0 <check_preprocessor_encoding@@Base+0x134>
    c360:	sub	x2, x22, x25
    c364:	mov	w1, #0x3b                  	// #59
    c368:	mov	x0, x25
    c36c:	bl	acb0 <memchr@plt>
    c370:	cmp	x0, #0x0
    c374:	csinc	x25, xzr, x0, eq  // eq = none
    c378:	mov	x23, xzr
    c37c:	cbz	x25, c390 <check_preprocessor_encoding@@Base+0x114>
    c380:	cmp	x25, x22
    c384:	b.cc	c32c <check_preprocessor_encoding@@Base+0xb0>  // b.lo, b.ul, b.last
    c388:	b	c390 <check_preprocessor_encoding@@Base+0x114>
    c38c:	mov	x23, xzr
    c390:	mov	x0, x23
    c394:	ldp	x20, x19, [sp, #80]
    c398:	ldp	x22, x21, [sp, #64]
    c39c:	ldp	x24, x23, [sp, #48]
    c3a0:	ldp	x26, x25, [sp, #32]
    c3a4:	ldp	x28, x27, [sp, #16]
    c3a8:	ldp	x29, x30, [sp], #96
    c3ac:	ret
    c3b0:	add	x24, x25, #0x6
    c3b4:	ldrb	w8, [x24, #1]!
    c3b8:	cmp	w8, #0x20
    c3bc:	b.eq	c3b4 <check_preprocessor_encoding@@Base+0x138>  // b.none
    c3c0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c3c4:	add	x1, x1, #0x494
    c3c8:	mov	x0, x24
    c3cc:	bl	ab70 <strspn@plt>
    c3d0:	mov	x25, x0
    c3d4:	mov	x0, x24
    c3d8:	mov	x1, x25
    c3dc:	bl	ad10 <xstrndup@plt>
    c3e0:	mov	x23, x0
    c3e4:	bl	a370 <strlen@plt>
    c3e8:	cmp	x0, #0x5
    c3ec:	b.cc	c458 <check_preprocessor_encoding@@Base+0x1dc>  // b.lo, b.ul, b.last
    c3f0:	add	x28, x23, x0
    c3f4:	sub	x27, x28, #0x4
    c3f8:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c3fc:	mov	x26, x0
    c400:	add	x1, x1, #0x866
    c404:	mov	x0, x27
    c408:	bl	a840 <strcasecmp@plt>
    c40c:	cbnz	w0, c418 <check_preprocessor_encoding@@Base+0x19c>
    c410:	add	x8, x26, x23
    c414:	sturb	wzr, [x8, #-4]
    c418:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c41c:	add	x1, x1, #0x86b
    c420:	mov	x0, x27
    c424:	bl	a840 <strcasecmp@plt>
    c428:	cbnz	w0, c434 <check_preprocessor_encoding@@Base+0x1b8>
    c42c:	add	x8, x26, x23
    c430:	sturb	wzr, [x8, #-4]
    c434:	cmp	x26, #0x6
    c438:	b.cc	c458 <check_preprocessor_encoding@@Base+0x1dc>  // b.lo, b.ul, b.last
    c43c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c440:	sub	x0, x28, #0x5
    c444:	add	x1, x1, #0x870
    c448:	bl	a840 <strcasecmp@plt>
    c44c:	cbnz	w0, c458 <check_preprocessor_encoding@@Base+0x1dc>
    c450:	add	x8, x26, x23
    c454:	sturb	wzr, [x8, #-5]
    c458:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c45c:	adrp	x26, 3c000 <vasnprintf@@Base+0x14944>
    c460:	add	x0, x0, #0x876
    c464:	add	x26, x26, #0x4f0
    c468:	mov	x1, x23
    c46c:	bl	a840 <strcasecmp@plt>
    c470:	cbz	w0, c480 <check_preprocessor_encoding@@Base+0x204>
    c474:	ldr	x0, [x26], #16
    c478:	cbnz	x0, c468 <check_preprocessor_encoding@@Base+0x1ec>
    c47c:	b	c494 <check_preprocessor_encoding@@Base+0x218>
    c480:	mov	x0, x23
    c484:	bl	aaa0 <free@plt>
    c488:	ldur	x0, [x26, #-8]
    c48c:	bl	a7b0 <xstrdup@plt>
    c490:	mov	x23, x0
    c494:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c498:	add	x0, x0, #0x4da
    c49c:	mov	x1, x23
    c4a0:	bl	a5d0 <debug@plt>
    c4a4:	cbz	x20, c390 <check_preprocessor_encoding@@Base+0x114>
    c4a8:	cbz	x19, c390 <check_preprocessor_encoding@@Base+0x114>
    c4ac:	cbz	x23, c390 <check_preprocessor_encoding@@Base+0x114>
    c4b0:	mov	x0, x23
    c4b4:	mov	x1, x20
    c4b8:	bl	a840 <strcasecmp@plt>
    c4bc:	cbz	w0, c390 <check_preprocessor_encoding@@Base+0x114>
    c4c0:	cbz	x22, c4ec <check_preprocessor_encoding@@Base+0x270>
    c4c4:	add	x5, x24, x25
    c4c8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c4cc:	sub	w1, w24, w21
    c4d0:	sub	w4, w22, w5
    c4d4:	add	x0, x0, #0x554
    c4d8:	mov	x2, x21
    c4dc:	mov	x3, x20
    c4e0:	bl	ab00 <xasprintf@plt>
    c4e4:	str	x0, [x19]
    c4e8:	b	c390 <check_preprocessor_encoding@@Base+0x114>
    c4ec:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c4f0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    c4f4:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    c4f8:	add	x0, x0, #0x4f5
    c4fc:	add	x1, x1, #0x503
    c500:	add	x3, x3, #0x50f
    c504:	mov	w2, #0x39a                 	// #922
    c508:	bl	aeb0 <__assert_fail@plt>

000000000000c50c <string_equals@@Base>:
    c50c:	stp	x29, x30, [sp, #-16]!
    c510:	mov	x29, sp
    c514:	bl	aa10 <strcmp@plt>
    c518:	cmp	w0, #0x0
    c51c:	cset	w0, eq  // eq = none
    c520:	ldp	x29, x30, [sp], #16
    c524:	ret

000000000000c528 <string_hash@@Base>:
    c528:	stp	x29, x30, [sp, #-32]!
    c52c:	str	x19, [sp, #16]
    c530:	mov	x29, sp
    c534:	mov	x19, x0
    c538:	bl	a370 <strlen@plt>
    c53c:	mov	x1, x0
    c540:	mov	x0, x19
    c544:	ldr	x19, [sp, #16]
    c548:	ldp	x29, x30, [sp], #32
    c54c:	b	a9e0 <hash_pjw_bare@plt>

000000000000c550 <plain_free@@Base>:
    c550:	b	aaa0 <free@plt>

000000000000c554 <new_string_list@@Base>:
    c554:	stp	x29, x30, [sp, #-16]!
    c558:	and	w4, w1, #0x1
    c55c:	adrp	x1, 3c000 <vasnprintf@@Base+0x14944>
    c560:	adrp	x2, 3c000 <vasnprintf@@Base+0x14944>
    c564:	adrp	x3, 3c000 <vasnprintf@@Base+0x14944>
    c568:	ldr	x8, [x0]
    c56c:	ldr	x1, [x1, #3824]
    c570:	ldr	x2, [x2, #3864]
    c574:	ldr	x3, [x3, #4000]
    c578:	mov	x29, sp
    c57c:	blr	x8
    c580:	cbz	x0, c58c <new_string_list@@Base+0x38>
    c584:	ldp	x29, x30, [sp], #16
    c588:	ret
    c58c:	bl	a910 <xalloc_die@plt>

000000000000c590 <new_string_map@@Base>:
    c590:	stp	x29, x30, [sp, #-16]!
    c594:	mov	x4, x1
    c598:	adrp	x1, 3c000 <vasnprintf@@Base+0x14944>
    c59c:	adrp	x2, 3c000 <vasnprintf@@Base+0x14944>
    c5a0:	adrp	x3, 3c000 <vasnprintf@@Base+0x14944>
    c5a4:	ldr	x8, [x0]
    c5a8:	ldr	x1, [x1, #3824]
    c5ac:	ldr	x2, [x2, #3864]
    c5b0:	ldr	x3, [x3, #4000]
    c5b4:	mov	x29, sp
    c5b8:	blr	x8
    c5bc:	cbz	x0, c5c8 <new_string_map@@Base+0x38>
    c5c0:	ldp	x29, x30, [sp], #16
    c5c4:	ret
    c5c8:	bl	a910 <xalloc_die@plt>

000000000000c5cc <new_string_set@@Base>:
    c5cc:	stp	x29, x30, [sp, #-16]!
    c5d0:	adrp	x1, 3c000 <vasnprintf@@Base+0x14944>
    c5d4:	adrp	x2, 3c000 <vasnprintf@@Base+0x14944>
    c5d8:	adrp	x3, 3c000 <vasnprintf@@Base+0x14944>
    c5dc:	ldr	x8, [x0]
    c5e0:	ldr	x1, [x1, #3824]
    c5e4:	ldr	x2, [x2, #3864]
    c5e8:	ldr	x3, [x3, #4000]
    c5ec:	mov	x29, sp
    c5f0:	blr	x8
    c5f4:	cbz	x0, c600 <new_string_set@@Base+0x34>
    c5f8:	ldp	x29, x30, [sp], #16
    c5fc:	ret
    c600:	bl	a910 <xalloc_die@plt>

000000000000c604 <get_line_length@@Base>:
    c604:	stp	x29, x30, [sp, #-48]!
    c608:	str	x21, [sp, #16]
    c60c:	adrp	x21, 3d000 <base_len@@Base+0x2a06c>
    c610:	ldr	w0, [x21, #1704]
    c614:	stp	x20, x19, [sp, #32]
    c618:	mov	x29, sp
    c61c:	cmn	w0, #0x1
    c620:	b.ne	c6a8 <get_line_length@@Base+0xa4>  // b.any
    c624:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c628:	mov	w8, #0x50                  	// #80
    c62c:	add	x0, x0, #0xa86
    c630:	str	w8, [x21, #1704]
    c634:	bl	aef0 <getenv@plt>
    c638:	cbz	x0, c648 <get_line_length@@Base+0x44>
    c63c:	bl	a600 <atoi@plt>
    c640:	cmp	w0, #0x1
    c644:	b.ge	c6a4 <get_line_length@@Base+0xa0>  // b.tcont
    c648:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c64c:	add	x0, x0, #0xa8f
    c650:	bl	aef0 <getenv@plt>
    c654:	cbz	x0, c664 <get_line_length@@Base+0x60>
    c658:	bl	a600 <atoi@plt>
    c65c:	cmp	w0, #0x1
    c660:	b.ge	c6a4 <get_line_length@@Base+0xa0>  // b.tcont
    c664:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c668:	add	x0, x0, #0xa97
    c66c:	mov	w1, wzr
    c670:	bl	a6c0 <open@plt>
    c674:	tbnz	w0, #31, c6b8 <get_line_length@@Base+0xb4>
    c678:	add	x2, x29, #0x18
    c67c:	mov	w1, #0x5413                	// #21523
    c680:	mov	w19, w0
    c684:	bl	ab80 <rpl_ioctl@plt>
    c688:	mov	w20, w0
    c68c:	mov	w0, w19
    c690:	bl	a8d0 <close@plt>
    c694:	cbnz	w20, c6ec <get_line_length@@Base+0xe8>
    c698:	ldrh	w0, [x29, #26]
    c69c:	cbnz	w0, c6a4 <get_line_length@@Base+0xa0>
    c6a0:	mov	w0, #0x50                  	// #80
    c6a4:	str	w0, [x21, #1704]
    c6a8:	ldp	x20, x19, [sp, #32]
    c6ac:	ldr	x21, [sp, #16]
    c6b0:	ldp	x29, x30, [sp], #48
    c6b4:	ret
    c6b8:	mov	w0, #0x1                   	// #1
    c6bc:	mov	w19, #0x1                   	// #1
    c6c0:	bl	acf0 <isatty@plt>
    c6c4:	cbnz	w0, c6d4 <get_line_length@@Base+0xd0>
    c6c8:	bl	acf0 <isatty@plt>
    c6cc:	mov	w19, wzr
    c6d0:	cbz	w0, c6a0 <get_line_length@@Base+0x9c>
    c6d4:	add	x2, x29, #0x18
    c6d8:	mov	w1, #0x5413                	// #21523
    c6dc:	mov	w0, w19
    c6e0:	bl	ab80 <rpl_ioctl@plt>
    c6e4:	mov	w20, w0
    c6e8:	cbz	w20, c698 <get_line_length@@Base+0x94>
    c6ec:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c6f0:	add	x0, x0, #0xaa0
    c6f4:	bl	a3d0 <perror@plt>
    c6f8:	b	c6a0 <get_line_length@@Base+0x9c>

000000000000c6fc <order_files@@Base>:
    c6fc:	sub	sp, sp, #0x180
    c700:	stp	x29, x30, [sp, #288]
    c704:	stp	x28, x27, [sp, #304]
    c708:	stp	x26, x25, [sp, #320]
    c70c:	stp	x24, x23, [sp, #336]
    c710:	stp	x22, x21, [sp, #352]
    c714:	stp	x20, x19, [sp, #368]
    c718:	ldr	x20, [x1]
    c71c:	mov	x19, x1
    c720:	mov	w1, #0x4000                	// #16384
    c724:	movk	w1, #0x20, lsl #16
    c728:	add	x29, sp, #0x120
    c72c:	bl	a6c0 <open@plt>
    c730:	tbnz	w0, #31, c900 <order_files@@Base+0x204>
    c734:	sub	x1, x29, #0x80
    c738:	mov	w21, w0
    c73c:	bl	a760 <fstatfs@plt>
    c740:	tbnz	w0, #31, c8f8 <order_files@@Base+0x1fc>
    c744:	adrp	x0, 3c000 <vasnprintf@@Base+0x14944>
    c748:	ldr	x0, [x0, #3912]
    c74c:	adrp	x1, 3c000 <vasnprintf@@Base+0x14944>
    c750:	adrp	x2, 3c000 <vasnprintf@@Base+0x14944>
    c754:	adrp	x4, 3c000 <vasnprintf@@Base+0x14944>
    c758:	ldr	x8, [x0]
    c75c:	ldr	x1, [x1, #3824]
    c760:	ldr	x2, [x2, #3864]
    c764:	ldr	x4, [x4, #4000]
    c768:	mov	x3, xzr
    c76c:	blr	x8
    c770:	cbz	x0, c920 <order_files@@Base+0x224>
    c774:	adrp	x26, 3c000 <vasnprintf@@Base+0x14944>
    c778:	ldr	x26, [x26, #3984]
    c77c:	mov	w1, wzr
    c780:	str	x0, [x26]
    c784:	adrp	x0, 3c000 <vasnprintf@@Base+0x14944>
    c788:	ldr	x0, [x0, #3896]
    c78c:	bl	acd0 <new_string_list@plt>
    c790:	ldr	x8, [x20]
    c794:	mov	x22, x0
    c798:	mov	x0, x20
    c79c:	ldr	x9, [x8, #160]
    c7a0:	add	x8, sp, #0x60
    c7a4:	blr	x9
    c7a8:	ldr	x8, [sp, #96]
    c7ac:	add	x0, sp, #0x60
    c7b0:	sub	x1, x29, #0x88
    c7b4:	add	x2, sp, #0x58
    c7b8:	ldr	x8, [x8, #176]
    c7bc:	blr	x8
    c7c0:	tbz	w0, #0, c8b4 <order_files@@Base+0x1b8>
    c7c4:	adrp	x23, c000 <get_roff_encoding@@Base+0x10>
    c7c8:	mov	w27, #0x1                   	// #1
    c7cc:	add	x23, x23, #0x924
    c7d0:	ldur	x1, [x29, #-136]
    c7d4:	mov	w0, w21
    c7d8:	mov	w2, wzr
    c7dc:	bl	aea0 <openat@plt>
    c7e0:	tbnz	w0, #31, c898 <order_files@@Base+0x19c>
    c7e4:	ldur	x8, [x29, #-120]
    c7e8:	mov	w1, #0x660b                	// #26123
    c7ec:	movi	v0.2d, #0x0
    c7f0:	mov	x2, sp
    c7f4:	movk	w1, #0xc020, lsl #16
    c7f8:	mov	w24, w0
    c7fc:	stp	q0, q0, [sp]
    c800:	str	xzr, [sp, #80]
    c804:	stp	q0, q0, [sp, #48]
    c808:	str	q0, [sp, #32]
    c80c:	str	x8, [sp, #8]
    c810:	str	wzr, [sp, #16]
    c814:	str	w27, [sp, #24]
    c818:	bl	ab80 <rpl_ioctl@plt>
    c81c:	cbnz	w0, c86c <order_files@@Base+0x170>
    c820:	mov	w0, #0x8                   	// #8
    c824:	bl	a790 <xmalloc@plt>
    c828:	ldr	x8, [sp, #40]
    c82c:	ldr	x25, [x26]
    c830:	ldur	x1, [x29, #-136]
    c834:	mov	x2, x0
    c838:	str	x8, [x0]
    c83c:	ldr	x8, [x25]
    c840:	sub	x3, x29, #0x8
    c844:	mov	x0, x25
    c848:	ldr	x8, [x8, #24]
    c84c:	blr	x8
    c850:	cbz	w0, c85c <order_files@@Base+0x160>
    c854:	tbz	w0, #31, c86c <order_files@@Base+0x170>
    c858:	b	c920 <order_files@@Base+0x224>
    c85c:	ldr	x8, [x25, #24]
    c860:	cbz	x8, c86c <order_files@@Base+0x170>
    c864:	ldur	x0, [x29, #-8]
    c868:	blr	x8
    c86c:	mov	w0, w24
    c870:	bl	a8d0 <close@plt>
    c874:	ldur	x0, [x29, #-136]
    c878:	bl	a7b0 <xstrdup@plt>
    c87c:	ldr	x8, [x22]
    c880:	mov	x2, x0
    c884:	mov	x0, x22
    c888:	mov	x1, x23
    c88c:	ldr	x8, [x8, #224]
    c890:	blr	x8
    c894:	cbz	x0, c920 <order_files@@Base+0x224>
    c898:	ldr	x8, [sp, #96]
    c89c:	add	x0, sp, #0x60
    c8a0:	sub	x1, x29, #0x88
    c8a4:	add	x2, sp, #0x58
    c8a8:	ldr	x8, [x8, #176]
    c8ac:	blr	x8
    c8b0:	tbnz	w0, #0, c7d0 <order_files@@Base+0xd4>
    c8b4:	ldr	x8, [sp, #96]
    c8b8:	add	x0, sp, #0x60
    c8bc:	ldr	x8, [x8, #184]
    c8c0:	blr	x8
    c8c4:	ldr	x0, [x26]
    c8c8:	ldr	x8, [x0]
    c8cc:	ldr	x8, [x8, #40]
    c8d0:	blr	x8
    c8d4:	mov	w0, w21
    c8d8:	str	xzr, [x26]
    c8dc:	bl	a8d0 <close@plt>
    c8e0:	ldr	x8, [x20]
    c8e4:	mov	x0, x20
    c8e8:	ldr	x8, [x8, #152]
    c8ec:	blr	x8
    c8f0:	str	x22, [x19]
    c8f4:	b	c900 <order_files@@Base+0x204>
    c8f8:	mov	w0, w21
    c8fc:	bl	a8d0 <close@plt>
    c900:	ldp	x20, x19, [sp, #368]
    c904:	ldp	x22, x21, [sp, #352]
    c908:	ldp	x24, x23, [sp, #336]
    c90c:	ldp	x26, x25, [sp, #320]
    c910:	ldp	x28, x27, [sp, #304]
    c914:	ldp	x29, x30, [sp, #288]
    c918:	add	sp, sp, #0x180
    c91c:	ret
    c920:	bl	a910 <xalloc_die@plt>
    c924:	sub	sp, sp, #0x30
    c928:	stp	x29, x30, [sp, #16]
    c92c:	stp	x20, x19, [sp, #32]
    c930:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    c934:	ldr	x20, [x20, #3984]
    c938:	str	xzr, [sp, #8]
    c93c:	mov	x19, x1
    c940:	mov	x1, x0
    c944:	ldr	x8, [x20]
    c948:	add	x2, sp, #0x8
    c94c:	add	x29, sp, #0x10
    c950:	ldr	x9, [x8]
    c954:	mov	x0, x8
    c958:	ldr	x9, [x9, #16]
    c95c:	blr	x9
    c960:	ldr	x0, [x20]
    c964:	ldr	x20, [sp, #8]
    c968:	str	xzr, [sp, #8]
    c96c:	add	x2, sp, #0x8
    c970:	ldr	x8, [x0]
    c974:	mov	x1, x19
    c978:	ldr	x8, [x8, #16]
    c97c:	blr	x8
    c980:	ldr	x9, [sp, #8]
    c984:	cbz	x20, c998 <order_files@@Base+0x29c>
    c988:	ldr	x8, [x20]
    c98c:	cbz	x9, c9a0 <order_files@@Base+0x2a4>
    c990:	ldr	x9, [x9]
    c994:	b	c9a4 <order_files@@Base+0x2a8>
    c998:	mov	x8, #0xffffffffffffffff    	// #-1
    c99c:	cbnz	x9, c990 <order_files@@Base+0x294>
    c9a0:	mov	x9, #0xffffffffffffffff    	// #-1
    c9a4:	ldp	x20, x19, [sp, #32]
    c9a8:	ldp	x29, x30, [sp, #16]
    c9ac:	cmp	x8, x9
    c9b0:	cset	w8, hi  // hi = pmore
    c9b4:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
    c9b8:	add	sp, sp, #0x30
    c9bc:	ret

000000000000c9c0 <pathsearch_executable@@Base>:
    c9c0:	sub	sp, sp, #0xe0
    c9c4:	stp	x20, x19, [sp, #208]
    c9c8:	mov	x19, x0
    c9cc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    c9d0:	add	x0, x0, #0xab2
    c9d4:	stp	x29, x30, [sp, #128]
    c9d8:	str	x27, [sp, #144]
    c9dc:	stp	x26, x25, [sp, #160]
    c9e0:	stp	x24, x23, [sp, #176]
    c9e4:	stp	x22, x21, [sp, #192]
    c9e8:	add	x29, sp, #0x80
    c9ec:	bl	aef0 <getenv@plt>
    c9f0:	cbz	x0, ca40 <pathsearch_executable@@Base+0x80>
    c9f4:	mov	x20, x0
    c9f8:	mov	w1, #0x2f                  	// #47
    c9fc:	mov	x0, x19
    ca00:	bl	ab90 <strchr@plt>
    ca04:	cbz	x0, ca48 <pathsearch_executable@@Base+0x88>
    ca08:	mov	x1, sp
    ca0c:	mov	x0, x19
    ca10:	bl	282f8 <vasnprintf@@Base+0xc3c>
    ca14:	cmn	w0, #0x1
    ca18:	b.eq	ca40 <pathsearch_executable@@Base+0x80>  // b.none
    ca1c:	ldr	w8, [sp, #16]
    ca20:	mov	w9, #0x49                  	// #73
    ca24:	and	w10, w8, #0xf000
    ca28:	cmp	w10, #0x8, lsl #12
    ca2c:	cset	w10, eq  // eq = none
    ca30:	tst	w8, w9
    ca34:	cset	w8, ne  // ne = any
    ca38:	and	w26, w8, w10
    ca3c:	b	cb30 <pathsearch_executable@@Base+0x170>
    ca40:	mov	w26, wzr
    ca44:	b	cb30 <pathsearch_executable@@Base+0x170>
    ca48:	mov	x0, x20
    ca4c:	bl	a7b0 <xstrdup@plt>
    ca50:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    ca54:	mov	x20, x0
    ca58:	str	x0, [x29, #24]
    ca5c:	add	x1, x1, #0xd00
    ca60:	add	x0, x29, #0x18
    ca64:	bl	aa00 <strsep@plt>
    ca68:	cbz	x0, cb18 <pathsearch_executable@@Base+0x158>
    ca6c:	adrp	x22, 28000 <vasnprintf@@Base+0x944>
    ca70:	adrp	x23, 28000 <vasnprintf@@Base+0x944>
    ca74:	mov	x1, x0
    ca78:	mov	w26, wzr
    ca7c:	mov	x21, xzr
    ca80:	add	x22, x22, #0xab7
    ca84:	add	x23, x23, #0xd00
    ca88:	mov	w27, #0x49                  	// #73
    ca8c:	ldrb	w8, [x1]
    ca90:	cbnz	w8, caa8 <pathsearch_executable@@Base+0xe8>
    ca94:	mov	x1, x21
    ca98:	cbnz	x21, caa8 <pathsearch_executable@@Base+0xe8>
    ca9c:	bl	b000 <xgetcwd@plt>
    caa0:	mov	x21, x0
    caa4:	mov	x1, x0
    caa8:	mov	x0, x22
    caac:	mov	x2, x19
    cab0:	bl	ab00 <xasprintf@plt>
    cab4:	mov	x1, sp
    cab8:	mov	x24, x0
    cabc:	bl	282f8 <vasnprintf@@Base+0xc3c>
    cac0:	mov	w25, w0
    cac4:	mov	x0, x24
    cac8:	bl	aaa0 <free@plt>
    cacc:	cmn	w25, #0x1
    cad0:	b.eq	cb00 <pathsearch_executable@@Base+0x140>  // b.none
    cad4:	ldr	w8, [sp, #16]
    cad8:	and	w9, w8, #0xf000
    cadc:	tst	w8, w27
    cae0:	cset	w10, ne  // ne = any
    cae4:	cmp	w9, #0x8, lsl #12
    cae8:	cset	w9, eq  // eq = none
    caec:	and	w9, w9, w10
    caf0:	orr	w26, w26, w9
    caf4:	b.ne	cb00 <pathsearch_executable@@Base+0x140>  // b.any
    caf8:	and	w8, w8, w27
    cafc:	cbnz	w8, cb20 <pathsearch_executable@@Base+0x160>
    cb00:	add	x0, x29, #0x18
    cb04:	mov	x1, x23
    cb08:	bl	aa00 <strsep@plt>
    cb0c:	mov	x1, x0
    cb10:	cbnz	x0, ca8c <pathsearch_executable@@Base+0xcc>
    cb14:	b	cb20 <pathsearch_executable@@Base+0x160>
    cb18:	mov	x21, xzr
    cb1c:	mov	w26, wzr
    cb20:	mov	x0, x20
    cb24:	bl	aaa0 <free@plt>
    cb28:	mov	x0, x21
    cb2c:	bl	aaa0 <free@plt>
    cb30:	and	w0, w26, #0x1
    cb34:	ldp	x20, x19, [sp, #208]
    cb38:	ldp	x22, x21, [sp, #192]
    cb3c:	ldp	x24, x23, [sp, #176]
    cb40:	ldp	x26, x25, [sp, #160]
    cb44:	ldr	x27, [sp, #144]
    cb48:	ldp	x29, x30, [sp, #128]
    cb4c:	add	sp, sp, #0xe0
    cb50:	ret

000000000000cb54 <directory_on_path@@Base>:
    cb54:	sub	sp, sp, #0x40
    cb58:	stp	x20, x19, [sp, #48]
    cb5c:	mov	x20, x0
    cb60:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cb64:	add	x0, x0, #0xab2
    cb68:	stp	x29, x30, [sp, #16]
    cb6c:	stp	x22, x21, [sp, #32]
    cb70:	add	x29, sp, #0x10
    cb74:	bl	aef0 <getenv@plt>
    cb78:	cbz	x0, cbe4 <directory_on_path@@Base+0x90>
    cb7c:	bl	a7b0 <xstrdup@plt>
    cb80:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    cb84:	mov	x19, x0
    cb88:	str	x0, [sp, #8]
    cb8c:	add	x1, x1, #0xd00
    cb90:	add	x0, sp, #0x8
    cb94:	bl	aa00 <strsep@plt>
    cb98:	mov	x21, xzr
    cb9c:	cbz	x0, cbdc <directory_on_path@@Base+0x88>
    cba0:	adrp	x22, 28000 <vasnprintf@@Base+0x944>
    cba4:	add	x22, x22, #0xd00
    cba8:	ldrb	w8, [x0]
    cbac:	cbnz	w8, cbc0 <directory_on_path@@Base+0x6c>
    cbb0:	mov	x0, x21
    cbb4:	cbnz	x21, cbc0 <directory_on_path@@Base+0x6c>
    cbb8:	bl	b000 <xgetcwd@plt>
    cbbc:	mov	x21, x0
    cbc0:	mov	x1, x20
    cbc4:	bl	aa10 <strcmp@plt>
    cbc8:	cbz	w0, cbec <directory_on_path@@Base+0x98>
    cbcc:	add	x0, sp, #0x8
    cbd0:	mov	x1, x22
    cbd4:	bl	aa00 <strsep@plt>
    cbd8:	cbnz	x0, cba8 <directory_on_path@@Base+0x54>
    cbdc:	mov	w20, wzr
    cbe0:	b	cbf0 <directory_on_path@@Base+0x9c>
    cbe4:	mov	w20, wzr
    cbe8:	b	cc00 <directory_on_path@@Base+0xac>
    cbec:	mov	w20, #0x1                   	// #1
    cbf0:	mov	x0, x19
    cbf4:	bl	aaa0 <free@plt>
    cbf8:	mov	x0, x21
    cbfc:	bl	aaa0 <free@plt>
    cc00:	mov	w0, w20
    cc04:	ldp	x20, x19, [sp, #48]
    cc08:	ldp	x22, x21, [sp, #32]
    cc0c:	ldp	x29, x30, [sp, #16]
    cc10:	add	sp, sp, #0x40
    cc14:	ret

000000000000cc18 <sandbox_init@@Base>:
    cc18:	stp	x29, x30, [sp, #-16]!
    cc1c:	mov	w0, #0x1                   	// #1
    cc20:	mov	x29, sp
    cc24:	bl	ad00 <xzalloc@plt>
    cc28:	strb	wzr, [x0]
    cc2c:	ldp	x29, x30, [sp], #16
    cc30:	ret

000000000000cc34 <sandbox_load@@Base>:
    cc34:	ret

000000000000cc38 <sandbox_load_permissive@@Base>:
    cc38:	ret

000000000000cc3c <sandbox_free@@Base>:
    cc3c:	b	aaa0 <free@plt>

000000000000cc40 <init_security@@Base>:
    cc40:	stp	x29, x30, [sp, #-32]!
    cc44:	str	x19, [sp, #16]
    cc48:	mov	x29, sp
    cc4c:	bl	a4f0 <getuid@plt>
    cc50:	adrp	x19, 3c000 <vasnprintf@@Base+0x14944>
    cc54:	ldr	x19, [x19, #4064]
    cc58:	str	w0, [x19]
    cc5c:	bl	a440 <geteuid@plt>
    cc60:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    cc64:	ldr	x8, [x8, #3784]
    cc68:	ldr	w1, [x19]
    cc6c:	mov	w2, w0
    cc70:	str	w0, [x8]
    cc74:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    cc78:	ldr	x8, [x8, #3952]
    cc7c:	str	w0, [x8]
    cc80:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cc84:	add	x0, x0, #0xabd
    cc88:	bl	a5d0 <debug@plt>
    cc8c:	bl	aae0 <getgid@plt>
    cc90:	adrp	x19, 3c000 <vasnprintf@@Base+0x14944>
    cc94:	ldr	x19, [x19, #3960]
    cc98:	str	w0, [x19]
    cc9c:	bl	a3f0 <getegid@plt>
    cca0:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    cca4:	ldr	x8, [x8, #3760]
    cca8:	ldr	w1, [x19]
    ccac:	mov	w2, w0
    ccb0:	str	w0, [x8]
    ccb4:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    ccb8:	ldr	x8, [x8, #3792]
    ccbc:	str	w0, [x8]
    ccc0:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    ccc4:	add	x0, x0, #0xacf
    ccc8:	bl	a5d0 <debug@plt>
    cccc:	ldr	x19, [sp, #16]
    ccd0:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    ccd4:	str	wzr, [x8, #2312]
    ccd8:	ldp	x29, x30, [sp], #32
    ccdc:	b	a940 <drop_effective_privs@plt>

000000000000cce0 <drop_effective_privs@@Base>:
    cce0:	stp	x29, x30, [sp, #-32]!
    cce4:	stp	x20, x19, [sp, #16]
    cce8:	adrp	x19, 3c000 <vasnprintf@@Base+0x14944>
    ccec:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    ccf0:	ldr	x19, [x19, #3952]
    ccf4:	ldr	x20, [x20, #4064]
    ccf8:	mov	x29, sp
    ccfc:	ldr	w8, [x19]
    cd00:	ldr	w9, [x20]
    cd04:	cmp	w8, w9
    cd08:	b.eq	cd44 <drop_effective_privs@@Base+0x64>  // b.none
    cd0c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cd10:	add	x0, x0, #0xb45
    cd14:	bl	a5d0 <debug@plt>
    cd18:	bl	a700 <idpriv_temp_drop@plt>
    cd1c:	cbz	w0, cd24 <drop_effective_privs@@Base+0x44>
    cd20:	bl	ce14 <get_man_owner@@Base+0x88>
    cd24:	ldr	w8, [x20]
    cd28:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    cd2c:	ldr	x9, [x9, #3960]
    cd30:	str	w8, [x19]
    cd34:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    cd38:	ldr	w9, [x9]
    cd3c:	ldr	x8, [x8, #3792]
    cd40:	str	w9, [x8]
    cd44:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    cd48:	ldr	w9, [x8, #2312]
    cd4c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cd50:	add	x0, x0, #0xb5d
    cd54:	add	w1, w9, #0x1
    cd58:	str	w1, [x8, #2312]
    cd5c:	ldp	x20, x19, [sp, #16]
    cd60:	ldp	x29, x30, [sp], #32
    cd64:	b	a5d0 <debug@plt>

000000000000cd68 <running_setuid@@Base>:
    cd68:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    cd6c:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    cd70:	ldr	x8, [x8, #4064]
    cd74:	ldr	x9, [x9, #3784]
    cd78:	ldr	w8, [x8]
    cd7c:	ldr	w9, [x9]
    cd80:	cmp	w8, w9
    cd84:	cset	w0, ne  // ne = any
    cd88:	ret

000000000000cd8c <get_man_owner@@Base>:
    cd8c:	stp	x29, x30, [sp, #-32]!
    cd90:	str	x19, [sp, #16]
    cd94:	adrp	x19, 3d000 <base_len@@Base+0x2a06c>
    cd98:	ldr	x0, [x19, #2320]
    cd9c:	mov	x29, sp
    cda0:	cbnz	x0, cde8 <get_man_owner@@Base+0x5c>
    cda4:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cda8:	add	x0, x0, #0xae1
    cdac:	bl	a7a0 <getpwnam@plt>
    cdb0:	str	x0, [x19, #2320]
    cdb4:	cbnz	x0, cde8 <get_man_owner@@Base+0x5c>
    cdb8:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    cdbc:	add	x1, x1, #0xae5
    cdc0:	mov	w2, #0x5                   	// #5
    cdc4:	bl	adc0 <dcgettext@plt>
    cdc8:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    cdcc:	mov	x2, x0
    cdd0:	add	x3, x3, #0xae1
    cdd4:	mov	w0, #0x1                   	// #1
    cdd8:	mov	w1, wzr
    cddc:	bl	a3a0 <error@plt>
    cde0:	ldr	x0, [x19, #2320]
    cde4:	cbz	x0, cdf4 <get_man_owner@@Base+0x68>
    cde8:	ldr	x19, [sp, #16]
    cdec:	ldp	x29, x30, [sp], #32
    cdf0:	ret
    cdf4:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cdf8:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    cdfc:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    ce00:	add	x0, x0, #0xb0d
    ce04:	add	x1, x1, #0xb17
    ce08:	add	x3, x3, #0xb22
    ce0c:	mov	w2, #0x78                  	// #120
    ce10:	bl	aeb0 <__assert_fail@plt>
    ce14:	stp	x29, x30, [sp, #-32]!
    ce18:	str	x19, [sp, #16]
    ce1c:	mov	x29, sp
    ce20:	bl	aec0 <__errno_location@plt>
    ce24:	ldr	w19, [x0]
    ce28:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    ce2c:	add	x1, x1, #0xba7
    ce30:	mov	w2, #0x5                   	// #5
    ce34:	mov	x0, xzr
    ce38:	bl	adc0 <dcgettext@plt>
    ce3c:	mov	w1, w19
    ce40:	ldr	x19, [sp, #16]
    ce44:	mov	x2, x0
    ce48:	mov	w0, #0x2                   	// #2
    ce4c:	ldp	x29, x30, [sp], #32
    ce50:	b	a3a0 <error@plt>

000000000000ce54 <regain_effective_privs@@Base>:
    ce54:	stp	x29, x30, [sp, #-32]!
    ce58:	stp	x20, x19, [sp, #16]
    ce5c:	adrp	x19, 3d000 <base_len@@Base+0x2a06c>
    ce60:	ldr	w8, [x19, #2312]
    ce64:	mov	x29, sp
    ce68:	cbz	w8, ce88 <regain_effective_privs@@Base+0x34>
    ce6c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    ce70:	sub	w1, w8, #0x1
    ce74:	add	x0, x0, #0xb75
    ce78:	str	w1, [x19, #2312]
    ce7c:	bl	a5d0 <debug@plt>
    ce80:	ldr	w8, [x19, #2312]
    ce84:	cbnz	w8, cee0 <regain_effective_privs@@Base+0x8c>
    ce88:	adrp	x19, 3c000 <vasnprintf@@Base+0x14944>
    ce8c:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    ce90:	ldr	x19, [x19, #3952]
    ce94:	ldr	x20, [x20, #3784]
    ce98:	ldr	w8, [x19]
    ce9c:	ldr	w9, [x20]
    cea0:	cmp	w8, w9
    cea4:	b.eq	cee0 <regain_effective_privs@@Base+0x8c>  // b.none
    cea8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    ceac:	add	x0, x0, #0xb8d
    ceb0:	bl	a5d0 <debug@plt>
    ceb4:	bl	acc0 <idpriv_temp_restore@plt>
    ceb8:	cbz	w0, cec0 <regain_effective_privs@@Base+0x6c>
    cebc:	bl	ce14 <get_man_owner@@Base+0x88>
    cec0:	ldr	w8, [x20]
    cec4:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    cec8:	ldr	x9, [x9, #3760]
    cecc:	str	w8, [x19]
    ced0:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    ced4:	ldr	w9, [x9]
    ced8:	ldr	x8, [x8, #3792]
    cedc:	str	w9, [x8]
    cee0:	ldp	x20, x19, [sp, #16]
    cee4:	ldp	x29, x30, [sp], #32
    cee8:	ret

000000000000ceec <drop_privs@@Base>:
    ceec:	stp	x29, x30, [sp, #-16]!
    cef0:	mov	x29, sp
    cef4:	bl	ac30 <idpriv_drop@plt>
    cef8:	cbz	w0, cf04 <drop_privs@@Base+0x18>
    cefc:	ldp	x29, x30, [sp], #16
    cf00:	b	ce14 <get_man_owner@@Base+0x88>
    cf04:	ldp	x29, x30, [sp], #16
    cf08:	ret

000000000000cf0c <create_tempdir@@Base>:
    cf0c:	stp	x29, x30, [sp, #-32]!
    cf10:	stp	x20, x19, [sp, #16]
    cf14:	mov	x29, sp
    cf18:	mov	x19, x0
    cf1c:	bl	a4f0 <getuid@plt>
    cf20:	mov	w20, w0
    cf24:	bl	a440 <geteuid@plt>
    cf28:	cmp	w20, w0
    cf2c:	b.ne	cf84 <create_tempdir@@Base+0x78>  // b.any
    cf30:	bl	aae0 <getgid@plt>
    cf34:	mov	w20, w0
    cf38:	bl	a3f0 <getegid@plt>
    cf3c:	cmp	w20, w0
    cf40:	b.ne	cf84 <create_tempdir@@Base+0x78>  // b.any
    cf44:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cf48:	add	x0, x0, #0xbcb
    cf4c:	bl	aef0 <getenv@plt>
    cf50:	cbz	x0, cf64 <create_tempdir@@Base+0x58>
    cf54:	mov	w1, #0x2                   	// #2
    cf58:	mov	x20, x0
    cf5c:	bl	a9c0 <access@plt>
    cf60:	cbz	w0, cfbc <create_tempdir@@Base+0xb0>
    cf64:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cf68:	add	x0, x0, #0xbd2
    cf6c:	bl	aef0 <getenv@plt>
    cf70:	cbz	x0, cf84 <create_tempdir@@Base+0x78>
    cf74:	mov	w1, #0x2                   	// #2
    cf78:	mov	x20, x0
    cf7c:	bl	a9c0 <access@plt>
    cf80:	cbz	w0, cfbc <create_tempdir@@Base+0xb0>
    cf84:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    cf88:	add	x20, x20, #0xbd6
    cf8c:	mov	w1, #0x2                   	// #2
    cf90:	mov	x0, x20
    cf94:	bl	a9c0 <access@plt>
    cf98:	cbz	w0, cfbc <create_tempdir@@Base+0xb0>
    cf9c:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    cfa0:	add	x20, x20, #0xbd6
    cfa4:	mov	w1, #0x2                   	// #2
    cfa8:	mov	x0, x20
    cfac:	bl	a9c0 <access@plt>
    cfb0:	cbz	w0, cfbc <create_tempdir@@Base+0xb0>
    cfb4:	mov	x0, xzr
    cfb8:	b	cfe0 <create_tempdir@@Base+0xd4>
    cfbc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    cfc0:	add	x0, x0, #0xbbf
    cfc4:	mov	x1, x20
    cfc8:	mov	x2, x19
    cfcc:	bl	ab00 <xasprintf@plt>
    cfd0:	mov	x19, x0
    cfd4:	bl	a960 <mkdtemp@plt>
    cfd8:	cmp	x0, #0x0
    cfdc:	csel	x0, xzr, x19, eq  // eq = none
    cfe0:	ldp	x20, x19, [sp, #16]
    cfe4:	ldp	x29, x30, [sp], #32
    cfe8:	ret

000000000000cfec <is_changed@@Base>:
    cfec:	sub	sp, sp, #0x130
    cff0:	stp	x20, x19, [sp, #288]
    cff4:	mov	x19, x1
    cff8:	mov	x20, x0
    cffc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d000:	add	x0, x0, #0xbdb
    d004:	mov	x1, x20
    d008:	mov	x2, x19
    d00c:	stp	x29, x30, [sp, #256]
    d010:	str	x28, [sp, #272]
    d014:	add	x29, sp, #0x100
    d018:	bl	a5d0 <debug@plt>
    d01c:	add	x1, sp, #0x80
    d020:	mov	x0, x20
    d024:	bl	282f8 <vasnprintf@@Base+0xc3c>
    d028:	cmp	w0, #0x0
    d02c:	mov	x1, sp
    d030:	mov	x0, x19
    d034:	cset	w20, ne  // ne = any
    d038:	bl	282f8 <vasnprintf@@Base+0xc3c>
    d03c:	orr	w8, w20, #0x2
    d040:	cmp	w0, #0x0
    d044:	csel	w8, w20, w8, eq  // eq = none
    d048:	cbz	w8, d054 <is_changed@@Base+0x68>
    d04c:	neg	w19, w8
    d050:	b	d0a4 <is_changed@@Base+0xb8>
    d054:	ldr	x9, [sp, #176]
    d058:	ldr	x11, [sp, #48]
    d05c:	ldr	x10, [sp, #216]
    d060:	ldr	x12, [sp, #88]
    d064:	cmp	x9, #0x0
    d068:	mov	w8, #0x4                   	// #4
    d06c:	cset	w9, eq  // eq = none
    d070:	cmp	x11, #0x0
    d074:	lsl	w11, w9, #1
    d078:	bfi	w8, w9, #1, #1
    d07c:	csel	w8, w8, w11, eq  // eq = none
    d080:	cmp	x10, x12
    d084:	b.ne	d09c <is_changed@@Base+0xb0>  // b.any
    d088:	ldr	x9, [sp, #224]
    d08c:	ldr	x10, [sp, #96]
    d090:	cmp	w9, w10
    d094:	cset	w9, ne  // ne = any
    d098:	b	d0a0 <is_changed@@Base+0xb4>
    d09c:	mov	w9, #0x1                   	// #1
    d0a0:	orr	w19, w9, w8
    d0a4:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d0a8:	add	x0, x0, #0xbf2
    d0ac:	mov	w1, w19
    d0b0:	bl	a5d0 <debug@plt>
    d0b4:	mov	w0, w19
    d0b8:	ldp	x20, x19, [sp, #288]
    d0bc:	ldr	x28, [sp, #272]
    d0c0:	ldp	x29, x30, [sp, #256]
    d0c4:	add	sp, sp, #0x130
    d0c8:	ret

000000000000d0cc <is_directory@@Base>:
    d0cc:	sub	sp, sp, #0x90
    d0d0:	mov	x1, sp
    d0d4:	stp	x29, x30, [sp, #128]
    d0d8:	add	x29, sp, #0x80
    d0dc:	bl	282f8 <vasnprintf@@Base+0xc3c>
    d0e0:	ldr	w8, [sp, #16]
    d0e4:	ldp	x29, x30, [sp, #128]
    d0e8:	cmp	w0, #0x0
    d0ec:	ubfx	w8, w8, #14, #1
    d0f0:	csel	w0, w8, w0, eq  // eq = none
    d0f4:	add	sp, sp, #0x90
    d0f8:	ret

000000000000d0fc <escape_shell@@Base>:
    d0fc:	stp	x29, x30, [sp, #-64]!
    d100:	stp	x24, x23, [sp, #16]
    d104:	stp	x22, x21, [sp, #32]
    d108:	stp	x20, x19, [sp, #48]
    d10c:	mov	x29, sp
    d110:	cbz	x0, d1c0 <escape_shell@@Base+0xc4>
    d114:	mov	x20, x0
    d118:	bl	a370 <strlen@plt>
    d11c:	mov	w8, #0x1                   	// #1
    d120:	bfi	x8, x0, #1, #63
    d124:	mov	x0, x8
    d128:	bl	a790 <xmalloc@plt>
    d12c:	ldrb	w21, [x20]
    d130:	mov	x19, x0
    d134:	mov	x23, x0
    d138:	cbz	w21, d1b8 <escape_shell@@Base+0xbc>
    d13c:	add	x22, x20, #0x1
    d140:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    d144:	add	x20, x20, #0xbf9
    d148:	mov	w24, #0x5c                  	// #92
    d14c:	mov	x23, x19
    d150:	and	w8, w21, #0xffffffdf
    d154:	sub	w8, w8, #0x41
    d158:	and	w8, w8, #0xff
    d15c:	cmp	w8, #0x1a
    d160:	b.cc	d190 <escape_shell@@Base+0x94>  // b.lo, b.ul, b.last
    d164:	sub	w8, w21, #0x30
    d168:	and	w8, w8, #0xff
    d16c:	cmp	w8, #0xa
    d170:	mov	w8, #0x1                   	// #1
    d174:	mov	x9, x23
    d178:	b.cc	d1a8 <escape_shell@@Base+0xac>  // b.lo, b.ul, b.last
    d17c:	and	w1, w21, #0xff
    d180:	mov	w2, #0x8                   	// #8
    d184:	mov	x0, x20
    d188:	bl	acb0 <memchr@plt>
    d18c:	cbz	x0, d19c <escape_shell@@Base+0xa0>
    d190:	mov	w8, #0x1                   	// #1
    d194:	mov	x9, x23
    d198:	b	d1a8 <escape_shell@@Base+0xac>
    d19c:	mov	x9, x23
    d1a0:	strb	w24, [x9], #1
    d1a4:	mov	w8, #0x2                   	// #2
    d1a8:	strb	w21, [x9]
    d1ac:	ldrb	w21, [x22], #1
    d1b0:	add	x23, x23, x8
    d1b4:	cbnz	w21, d150 <escape_shell@@Base+0x54>
    d1b8:	strb	wzr, [x23]
    d1bc:	b	d1c4 <escape_shell@@Base+0xc8>
    d1c0:	mov	x19, xzr
    d1c4:	mov	x0, x19
    d1c8:	ldp	x20, x19, [sp, #48]
    d1cc:	ldp	x22, x21, [sp, #32]
    d1d0:	ldp	x24, x23, [sp, #16]
    d1d4:	ldp	x29, x30, [sp], #64
    d1d8:	ret

000000000000d1dc <remove_directory@@Base>:
    d1dc:	sub	sp, sp, #0xd0
    d1e0:	stp	x29, x30, [sp, #128]
    d1e4:	str	x25, [sp, #144]
    d1e8:	stp	x24, x23, [sp, #160]
    d1ec:	stp	x22, x21, [sp, #176]
    d1f0:	stp	x20, x19, [sp, #192]
    d1f4:	add	x29, sp, #0x80
    d1f8:	mov	w21, w1
    d1fc:	mov	x19, x0
    d200:	bl	a510 <opendir@plt>
    d204:	cbz	x0, d2f0 <remove_directory@@Base+0x114>
    d208:	mov	x20, x0
    d20c:	bl	a850 <readdir@plt>
    d210:	cbz	x0, d2c4 <remove_directory@@Base+0xe8>
    d214:	adrp	x22, 28000 <vasnprintf@@Base+0x944>
    d218:	adrp	x23, 28000 <vasnprintf@@Base+0x944>
    d21c:	adrp	x24, 28000 <vasnprintf@@Base+0x944>
    d220:	add	x22, x22, #0xc02
    d224:	add	x23, x23, #0xc01
    d228:	add	x24, x24, #0xab7
    d22c:	add	x25, x0, #0x13
    d230:	mov	x0, x25
    d234:	mov	x1, x22
    d238:	bl	aa10 <strcmp@plt>
    d23c:	cbz	w0, d2b8 <remove_directory@@Base+0xdc>
    d240:	mov	x0, x25
    d244:	mov	x1, x23
    d248:	bl	aa10 <strcmp@plt>
    d24c:	cbz	w0, d2b8 <remove_directory@@Base+0xdc>
    d250:	mov	x0, x24
    d254:	mov	x1, x19
    d258:	mov	x2, x25
    d25c:	bl	ab00 <xasprintf@plt>
    d260:	mov	x1, sp
    d264:	mov	x25, x0
    d268:	bl	282f8 <vasnprintf@@Base+0xc3c>
    d26c:	cmn	w0, #0x1
    d270:	b.eq	d2e0 <remove_directory@@Base+0x104>  // b.none
    d274:	ldr	w8, [sp, #16]
    d278:	and	w8, w8, #0xf000
    d27c:	cbz	w21, d298 <remove_directory@@Base+0xbc>
    d280:	cmp	w8, #0x4, lsl #12
    d284:	b.ne	d298 <remove_directory@@Base+0xbc>  // b.any
    d288:	mov	x0, x25
    d28c:	mov	w1, w21
    d290:	bl	a410 <remove_directory@plt>
    d294:	b	d2a8 <remove_directory@@Base+0xcc>
    d298:	cmp	w8, #0x8, lsl #12
    d29c:	b.ne	d2b0 <remove_directory@@Base+0xd4>  // b.any
    d2a0:	mov	x0, x25
    d2a4:	bl	af60 <unlink@plt>
    d2a8:	cmn	w0, #0x1
    d2ac:	b.eq	d2e0 <remove_directory@@Base+0x104>  // b.none
    d2b0:	mov	x0, x25
    d2b4:	bl	aaa0 <free@plt>
    d2b8:	mov	x0, x20
    d2bc:	bl	a850 <readdir@plt>
    d2c0:	cbnz	x0, d22c <remove_directory@@Base+0x50>
    d2c4:	mov	x0, x20
    d2c8:	bl	a8a0 <closedir@plt>
    d2cc:	mov	x0, x19
    d2d0:	bl	aa40 <rmdir@plt>
    d2d4:	cmn	w0, #0x1
    d2d8:	csetm	w0, eq  // eq = none
    d2dc:	b	d2f4 <remove_directory@@Base+0x118>
    d2e0:	mov	x0, x25
    d2e4:	bl	aaa0 <free@plt>
    d2e8:	mov	x0, x20
    d2ec:	bl	a8a0 <closedir@plt>
    d2f0:	mov	w0, #0xffffffff            	// #-1
    d2f4:	ldp	x20, x19, [sp, #192]
    d2f8:	ldp	x22, x21, [sp, #176]
    d2fc:	ldp	x24, x23, [sp, #160]
    d300:	ldr	x25, [sp, #144]
    d304:	ldp	x29, x30, [sp, #128]
    d308:	add	sp, sp, #0xd0
    d30c:	ret

000000000000d310 <trim_spaces@@Base>:
    d310:	stp	x29, x30, [sp, #-32]!
    d314:	stp	x20, x19, [sp, #16]
    d318:	sub	x20, x0, #0x2
    d31c:	mov	x29, sp
    d320:	ldrb	w8, [x20, #2]
    d324:	add	x20, x20, #0x1
    d328:	cmp	w8, #0x20
    d32c:	b.eq	d320 <trim_spaces@@Base+0x10>  // b.none
    d330:	add	x19, x20, #0x1
    d334:	mov	x0, x19
    d338:	bl	a370 <strlen@plt>
    d33c:	lsl	x11, x0, #32
    d340:	sxtw	x9, w0
    d344:	mov	x8, #0xffffffff00000000    	// #-4294967296
    d348:	mov	x10, x11
    d34c:	cbz	x9, d364 <trim_spaces@@Base+0x54>
    d350:	ldrb	w11, [x20, x9]
    d354:	sub	x9, x9, #0x1
    d358:	cmp	w11, #0x20
    d35c:	add	x11, x10, x8
    d360:	b.eq	d348 <trim_spaces@@Base+0x38>  // b.none
    d364:	mov	x0, x19
    d368:	ldp	x20, x19, [sp, #16]
    d36c:	asr	x1, x10, #32
    d370:	ldp	x29, x30, [sp], #32
    d374:	b	ad10 <xstrndup@plt>

000000000000d378 <lang_dir@@Base>:
    d378:	stp	x29, x30, [sp, #-48]!
    d37c:	stp	x20, x19, [sp, #32]
    d380:	mov	x20, x0
    d384:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
    d388:	add	x0, x0, #0x9e6
    d38c:	str	x21, [sp, #16]
    d390:	mov	x29, sp
    d394:	bl	a7b0 <xstrdup@plt>
    d398:	mov	x19, x0
    d39c:	cbz	x20, d458 <lang_dir@@Base+0xe0>
    d3a0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    d3a4:	add	x1, x1, #0xc05
    d3a8:	mov	w2, #0x4                   	// #4
    d3ac:	mov	x0, x20
    d3b0:	bl	a740 <strncmp@plt>
    d3b4:	cbz	w0, d3d0 <lang_dir@@Base+0x58>
    d3b8:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    d3bc:	add	x1, x1, #0xc04
    d3c0:	mov	x0, x20
    d3c4:	bl	ad90 <strstr@plt>
    d3c8:	cbz	x0, d458 <lang_dir@@Base+0xe0>
    d3cc:	add	x20, x0, #0x1
    d3d0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    d3d4:	add	x0, x20, #0x2
    d3d8:	add	x1, x1, #0xc0a
    d3dc:	bl	ad90 <strstr@plt>
    d3e0:	cbz	x0, d458 <lang_dir@@Base+0xe0>
    d3e4:	ldrb	w8, [x0, #5]
    d3e8:	mov	x21, x0
    d3ec:	cmp	w8, #0x2f
    d3f0:	b.ne	d458 <lang_dir@@Base+0xe0>  // b.any
    d3f4:	ldrb	w1, [x21, #4]
    d3f8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d3fc:	add	x0, x0, #0xc0f
    d400:	mov	w2, #0xd                   	// #13
    d404:	bl	acb0 <memchr@plt>
    d408:	cbz	x0, d458 <lang_dir@@Base+0xe0>
    d40c:	add	x8, x20, #0x3
    d410:	cmp	x21, x8
    d414:	b.eq	d46c <lang_dir@@Base+0xf4>  // b.none
    d418:	add	x20, x20, #0x4
    d41c:	mov	w1, #0x2f                  	// #47
    d420:	mov	x0, x20
    d424:	bl	ab90 <strchr@plt>
    d428:	cbz	x0, d458 <lang_dir@@Base+0xe0>
    d42c:	mov	x21, x0
    d430:	mov	x0, x19
    d434:	bl	aaa0 <free@plt>
    d438:	sub	x1, x21, x20
    d43c:	mov	x0, x20
    d440:	bl	ad10 <xstrndup@plt>
    d444:	mov	x19, x0
    d448:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d44c:	add	x0, x0, #0xc1c
    d450:	mov	x1, x19
    d454:	bl	a5d0 <debug@plt>
    d458:	mov	x0, x19
    d45c:	ldp	x20, x19, [sp, #32]
    d460:	ldr	x21, [sp, #16]
    d464:	ldp	x29, x30, [sp], #48
    d468:	ret
    d46c:	mov	x0, x19
    d470:	bl	aaa0 <free@plt>
    d474:	ldp	x20, x19, [sp, #32]
    d478:	ldr	x21, [sp, #16]
    d47c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d480:	add	x0, x0, #0x560
    d484:	ldp	x29, x30, [sp], #48
    d488:	b	a7b0 <xstrdup@plt>

000000000000d48c <init_locale@@Base>:
    d48c:	stp	x29, x30, [sp, #-32]!
    d490:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
    d494:	add	x1, x1, #0x9e6
    d498:	mov	w0, #0x6                   	// #6
    d49c:	stp	x20, x19, [sp, #16]
    d4a0:	mov	x29, sp
    d4a4:	bl	afd0 <setlocale@plt>
    d4a8:	cbnz	x0, d4dc <init_locale@@Base+0x50>
    d4ac:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d4b0:	add	x0, x0, #0xc37
    d4b4:	bl	aef0 <getenv@plt>
    d4b8:	cbnz	x0, d4dc <init_locale@@Base+0x50>
    d4bc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d4c0:	add	x0, x0, #0xc4d
    d4c4:	bl	aef0 <getenv@plt>
    d4c8:	cbnz	x0, d4dc <init_locale@@Base+0x50>
    d4cc:	adrp	x2, 28000 <vasnprintf@@Base+0x944>
    d4d0:	add	x2, x2, #0xc62
    d4d4:	mov	w1, wzr
    d4d8:	bl	a3a0 <error@plt>
    d4dc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d4e0:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
    d4e4:	add	x0, x0, #0xc37
    d4e8:	add	x1, x1, #0xfd3
    d4ec:	mov	w2, #0x1                   	// #1
    d4f0:	bl	a4b0 <setenv@plt>
    d4f4:	adrp	x19, 28000 <vasnprintf@@Base+0x944>
    d4f8:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    d4fc:	add	x19, x19, #0xc9e
    d500:	add	x20, x20, #0xca5
    d504:	mov	x0, x19
    d508:	mov	x1, x20
    d50c:	bl	a750 <bindtextdomain@plt>
    d510:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    d514:	add	x0, x0, #0xcb7
    d518:	mov	x1, x20
    d51c:	bl	a750 <bindtextdomain@plt>
    d520:	mov	x0, x19
    d524:	ldp	x20, x19, [sp, #16]
    d528:	ldp	x29, x30, [sp], #32
    d52c:	b	a9f0 <textdomain@plt>

000000000000d530 <word_fnmatch@@Base>:
    d530:	stp	x29, x30, [sp, #-64]!
    d534:	stp	x20, x19, [sp, #48]
    d538:	mov	x20, x0
    d53c:	mov	x0, x1
    d540:	str	x23, [sp, #16]
    d544:	stp	x22, x21, [sp, #32]
    d548:	mov	x29, sp
    d54c:	bl	a7b0 <xstrdup@plt>
    d550:	ldrb	w23, [x0]
    d554:	mov	x19, x0
    d558:	cbz	w23, d5c4 <word_fnmatch@@Base+0x94>
    d55c:	bl	aa30 <__ctype_b_loc@plt>
    d560:	mov	x21, x0
    d564:	add	x22, x19, #0x1
    d568:	mov	x1, x19
    d56c:	and	w8, w23, #0xff
    d570:	cmp	w8, #0x5f
    d574:	b.eq	d5b4 <word_fnmatch@@Base+0x84>  // b.none
    d578:	ldr	x8, [x21]
    d57c:	and	x9, x23, #0xff
    d580:	ldrh	w8, [x8, x9, lsl #1]
    d584:	tbnz	w8, #10, d5b4 <word_fnmatch@@Base+0x84>
    d588:	sub	x9, x22, #0x1
    d58c:	add	x8, x1, #0x1
    d590:	cmp	x9, x8
    d594:	b.ls	d5b8 <word_fnmatch@@Base+0x88>  // b.plast
    d598:	mov	w2, #0x10                  	// #16
    d59c:	mov	x0, x20
    d5a0:	strb	wzr, [x9]
    d5a4:	bl	ac10 <fnmatch@plt>
    d5a8:	mov	x8, x22
    d5ac:	cbnz	w0, d5b8 <word_fnmatch@@Base+0x88>
    d5b0:	b	d5e8 <word_fnmatch@@Base+0xb8>
    d5b4:	mov	x8, x1
    d5b8:	ldrb	w23, [x22], #1
    d5bc:	mov	x1, x8
    d5c0:	cbnz	w23, d56c <word_fnmatch@@Base+0x3c>
    d5c4:	mov	w20, wzr
    d5c8:	mov	x0, x19
    d5cc:	bl	aaa0 <free@plt>
    d5d0:	mov	w0, w20
    d5d4:	ldp	x20, x19, [sp, #48]
    d5d8:	ldp	x22, x21, [sp, #32]
    d5dc:	ldr	x23, [sp, #16]
    d5e0:	ldp	x29, x30, [sp], #64
    d5e4:	ret
    d5e8:	mov	w20, #0x1                   	// #1
    d5ec:	b	d5c8 <word_fnmatch@@Base+0x98>

000000000000d5f0 <xregcomp@@Base>:
    d5f0:	stp	x29, x30, [sp, #-64]!
    d5f4:	str	x23, [sp, #16]
    d5f8:	stp	x22, x21, [sp, #32]
    d5fc:	stp	x20, x19, [sp, #48]
    d600:	mov	x29, sp
    d604:	mov	x19, x1
    d608:	mov	x20, x0
    d60c:	bl	a610 <rpl_regcomp@plt>
    d610:	cbz	w0, d684 <xregcomp@@Base+0x94>
    d614:	mov	x1, x20
    d618:	mov	x2, xzr
    d61c:	mov	x3, xzr
    d620:	mov	w21, w0
    d624:	bl	ac40 <rpl_regerror@plt>
    d628:	mov	x22, x0
    d62c:	bl	a790 <xmalloc@plt>
    d630:	mov	x23, x0
    d634:	mov	w0, w21
    d638:	mov	x1, x20
    d63c:	mov	x2, x23
    d640:	mov	x3, x22
    d644:	bl	ac40 <rpl_regerror@plt>
    d648:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    d64c:	add	x1, x1, #0xcc5
    d650:	mov	w2, #0x5                   	// #5
    d654:	mov	x0, xzr
    d658:	bl	adc0 <dcgettext@plt>
    d65c:	mov	x3, x19
    d660:	mov	x4, x23
    d664:	ldp	x20, x19, [sp, #48]
    d668:	ldp	x22, x21, [sp, #32]
    d66c:	ldr	x23, [sp, #16]
    d670:	mov	x2, x0
    d674:	mov	w0, #0x2                   	// #2
    d678:	mov	w1, wzr
    d67c:	ldp	x29, x30, [sp], #64
    d680:	b	a3a0 <error@plt>
    d684:	ldp	x20, x19, [sp, #48]
    d688:	ldp	x22, x21, [sp, #32]
    d68c:	ldr	x23, [sp, #16]
    d690:	ldp	x29, x30, [sp], #64
    d694:	ret

000000000000d698 <areadlink_with_size@@Base>:
    d698:	sub	sp, sp, #0xd0
    d69c:	cmp	x1, #0x401
    d6a0:	mov	w8, #0x401                 	// #1025
    d6a4:	csinc	x8, x8, x1, cs  // cs = hs, nlast
    d6a8:	cmp	x1, #0x0
    d6ac:	mov	w9, #0x80                  	// #128
    d6b0:	stp	x22, x21, [sp, #176]
    d6b4:	stp	x20, x19, [sp, #192]
    d6b8:	mov	x20, x1
    d6bc:	mov	x21, x0
    d6c0:	csel	x22, x9, x8, eq  // eq = none
    d6c4:	stp	x29, x30, [sp, #128]
    d6c8:	stp	x26, x25, [sp, #144]
    d6cc:	stp	x24, x23, [sp, #160]
    d6d0:	add	x29, sp, #0x80
    d6d4:	cbnz	x20, d6ec <areadlink_with_size@@Base+0x54>
    d6d8:	cmp	x22, #0x80
    d6dc:	b.ne	d6ec <areadlink_with_size@@Base+0x54>  // b.any
    d6e0:	mov	x19, xzr
    d6e4:	mov	x23, sp
    d6e8:	b	d700 <areadlink_with_size@@Base+0x68>
    d6ec:	mov	x0, x22
    d6f0:	bl	a660 <malloc@plt>
    d6f4:	mov	x23, x0
    d6f8:	mov	x19, x0
    d6fc:	cbz	x0, d7d8 <areadlink_with_size@@Base+0x140>
    d700:	mov	x0, x21
    d704:	mov	x1, x23
    d708:	mov	x2, x22
    d70c:	bl	a4c0 <readlink@plt>
    d710:	mov	x24, x0
    d714:	tbz	x0, #63, d728 <areadlink_with_size@@Base+0x90>
    d718:	bl	aec0 <__errno_location@plt>
    d71c:	ldr	w26, [x0]
    d720:	cmp	w26, #0x22
    d724:	b.ne	d7a0 <areadlink_with_size@@Base+0x108>  // b.any
    d728:	cmp	x24, x22
    d72c:	b.cc	d760 <areadlink_with_size@@Base+0xc8>  // b.lo, b.ul, b.last
    d730:	mov	x0, x19
    d734:	bl	aaa0 <free@plt>
    d738:	lsr	x8, x22, #62
    d73c:	cbnz	x8, d748 <areadlink_with_size@@Base+0xb0>
    d740:	lsl	x8, x22, #1
    d744:	b	d754 <areadlink_with_size@@Base+0xbc>
    d748:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    d74c:	cmp	x22, x8
    d750:	b.cs	d78c <areadlink_with_size@@Base+0xf4>  // b.hs, b.nlast
    d754:	mov	x22, x8
    d758:	cbz	x20, d6d8 <areadlink_with_size@@Base+0x40>
    d75c:	b	d6ec <areadlink_with_size@@Base+0x54>
    d760:	add	x20, x24, #0x1
    d764:	strb	wzr, [x23, x24]
    d768:	cbz	x19, d7b8 <areadlink_with_size@@Base+0x120>
    d76c:	cmp	x20, x22
    d770:	b.cs	d7d8 <areadlink_with_size@@Base+0x140>  // b.hs, b.nlast
    d774:	mov	x0, x19
    d778:	mov	x1, x20
    d77c:	bl	a860 <realloc@plt>
    d780:	cmp	x0, #0x0
    d784:	csel	x19, x19, x0, eq  // eq = none
    d788:	b	d7d8 <areadlink_with_size@@Base+0x140>
    d78c:	bl	aec0 <__errno_location@plt>
    d790:	mov	x19, xzr
    d794:	mov	w8, #0xc                   	// #12
    d798:	str	w8, [x0]
    d79c:	b	d7d8 <areadlink_with_size@@Base+0x140>
    d7a0:	mov	x25, x0
    d7a4:	mov	x0, x19
    d7a8:	bl	aaa0 <free@plt>
    d7ac:	mov	x19, xzr
    d7b0:	str	w26, [x25]
    d7b4:	b	d7d8 <areadlink_with_size@@Base+0x140>
    d7b8:	mov	x0, x20
    d7bc:	bl	a660 <malloc@plt>
    d7c0:	mov	x19, x0
    d7c4:	cbz	x0, d7d8 <areadlink_with_size@@Base+0x140>
    d7c8:	mov	x0, x19
    d7cc:	mov	x1, x23
    d7d0:	mov	x2, x20
    d7d4:	bl	a2f0 <memcpy@plt>
    d7d8:	mov	x0, x19
    d7dc:	ldp	x20, x19, [sp, #192]
    d7e0:	ldp	x22, x21, [sp, #176]
    d7e4:	ldp	x24, x23, [sp, #160]
    d7e8:	ldp	x26, x25, [sp, #144]
    d7ec:	ldp	x29, x30, [sp, #128]
    d7f0:	add	sp, sp, #0xd0
    d7f4:	ret

000000000000d7f8 <argp_make_fmtstream@@Base>:
    d7f8:	stp	x29, x30, [sp, #-64]!
    d7fc:	str	x23, [sp, #16]
    d800:	mov	x23, x0
    d804:	mov	w0, #0x48                  	// #72
    d808:	stp	x22, x21, [sp, #32]
    d80c:	stp	x20, x19, [sp, #48]
    d810:	mov	x29, sp
    d814:	mov	x20, x3
    d818:	mov	x21, x2
    d81c:	mov	x22, x1
    d820:	bl	a660 <malloc@plt>
    d824:	mov	x19, x0
    d828:	cbz	x0, d860 <argp_make_fmtstream@@Base+0x68>
    d82c:	mov	w0, #0xc8                  	// #200
    d830:	stp	x23, x22, [x19]
    d834:	stp	x21, x20, [x19, #16]
    d838:	stp	xzr, xzr, [x19, #32]
    d83c:	bl	a660 <malloc@plt>
    d840:	str	x0, [x19, #48]
    d844:	cbz	x0, d854 <argp_make_fmtstream@@Base+0x5c>
    d848:	add	x8, x0, #0xc8
    d84c:	stp	x0, x8, [x19, #56]
    d850:	b	d860 <argp_make_fmtstream@@Base+0x68>
    d854:	mov	x0, x19
    d858:	bl	aaa0 <free@plt>
    d85c:	mov	x19, xzr
    d860:	mov	x0, x19
    d864:	ldp	x20, x19, [sp, #48]
    d868:	ldp	x22, x21, [sp, #32]
    d86c:	ldr	x23, [sp, #16]
    d870:	ldp	x29, x30, [sp], #64
    d874:	ret

000000000000d878 <argp_fmtstream_free@@Base>:
    d878:	stp	x29, x30, [sp, #-32]!
    d87c:	str	x19, [sp, #16]
    d880:	mov	x29, sp
    d884:	mov	x19, x0
    d888:	bl	a570 <_argp_fmtstream_update@plt>
    d88c:	ldp	x0, x8, [x19, #48]
    d890:	subs	x2, x8, x0
    d894:	b.ls	d8a8 <argp_fmtstream_free@@Base+0x30>  // b.plast
    d898:	ldr	x3, [x19]
    d89c:	mov	w1, #0x1                   	// #1
    d8a0:	bl	a350 <fwrite_unlocked@plt>
    d8a4:	ldr	x0, [x19, #48]
    d8a8:	bl	aaa0 <free@plt>
    d8ac:	mov	x0, x19
    d8b0:	ldr	x19, [sp, #16]
    d8b4:	ldp	x29, x30, [sp], #32
    d8b8:	b	aaa0 <free@plt>

000000000000d8bc <_argp_fmtstream_update@@Base>:
    d8bc:	stp	x29, x30, [sp, #-96]!
    d8c0:	stp	x28, x27, [sp, #16]
    d8c4:	stp	x26, x25, [sp, #32]
    d8c8:	stp	x24, x23, [sp, #48]
    d8cc:	stp	x22, x21, [sp, #64]
    d8d0:	stp	x20, x19, [sp, #80]
    d8d4:	ldr	x8, [x0, #32]
    d8d8:	ldp	x9, x27, [x0, #48]
    d8dc:	mov	x19, x0
    d8e0:	mov	x29, sp
    d8e4:	add	x21, x9, x8
    d8e8:	cmp	x21, x27
    d8ec:	b.cs	dcb4 <_argp_fmtstream_update@@Base+0x3f8>  // b.hs, b.nlast
    d8f0:	ldr	x23, [x19, #40]
    d8f4:	cbnz	x23, d968 <_argp_fmtstream_update@@Base+0xac>
    d8f8:	ldr	x23, [x19, #8]
    d8fc:	cbz	x23, d968 <_argp_fmtstream_update@@Base+0xac>
    d900:	ldr	x8, [x19, #64]
    d904:	add	x9, x27, x23
    d908:	mov	x20, x23
    d90c:	cmp	x9, x8
    d910:	b.cs	d94c <_argp_fmtstream_update@@Base+0x90>  // b.hs, b.nlast
    d914:	add	x20, x21, x23
    d918:	sub	x2, x27, x21
    d91c:	mov	x0, x20
    d920:	mov	x1, x21
    d924:	bl	a300 <memmove@plt>
    d928:	ldr	x8, [x19, #56]
    d92c:	mov	w1, #0x20                  	// #32
    d930:	mov	x0, x21
    d934:	mov	x2, x23
    d938:	add	x8, x8, x23
    d93c:	str	x8, [x19, #56]
    d940:	bl	a770 <memset@plt>
    d944:	mov	x21, x20
    d948:	b	d960 <_argp_fmtstream_update@@Base+0xa4>
    d94c:	ldr	x1, [x19]
    d950:	mov	w0, #0x20                  	// #32
    d954:	bl	a5c0 <putc_unlocked@plt>
    d958:	subs	x20, x20, #0x1
    d95c:	b.ne	d94c <_argp_fmtstream_update@@Base+0x90>  // b.any
    d960:	ldr	x27, [x19, #56]
    d964:	str	x23, [x19, #40]
    d968:	sub	x26, x27, x21
    d96c:	mov	w1, #0xa                   	// #10
    d970:	mov	x0, x21
    d974:	mov	x2, x26
    d978:	bl	acb0 <memchr@plt>
    d97c:	mov	x24, x0
    d980:	tbnz	x23, #63, d9a0 <_argp_fmtstream_update@@Base+0xe4>
    d984:	cbz	x24, d9ac <_argp_fmtstream_update@@Base+0xf0>
    d988:	ldr	x20, [x19, #16]
    d98c:	sub	x8, x24, x21
    d990:	add	x8, x8, x23
    d994:	cmp	x8, x20
    d998:	b.ge	d9c0 <_argp_fmtstream_update@@Base+0x104>  // b.tcont
    d99c:	b	db1c <_argp_fmtstream_update@@Base+0x260>
    d9a0:	mov	x23, xzr
    d9a4:	str	xzr, [x19, #40]
    d9a8:	cbnz	x24, d988 <_argp_fmtstream_update@@Base+0xcc>
    d9ac:	ldr	x20, [x19, #16]
    d9b0:	add	x8, x23, x26
    d9b4:	mov	x24, x27
    d9b8:	cmp	x8, x20
    d9bc:	b.cc	dc98 <_argp_fmtstream_update@@Base+0x3dc>  // b.lo, b.ul, b.last
    d9c0:	ldr	x28, [x19, #24]
    d9c4:	tbnz	x28, #63, da00 <_argp_fmtstream_update@@Base+0x144>
    d9c8:	subs	x25, x20, x23
    d9cc:	add	x20, x21, x25
    d9d0:	b.mi	da4c <_argp_fmtstream_update@@Base+0x190>  // b.first
    d9d4:	bl	aa30 <__ctype_b_loc@plt>
    d9d8:	ldr	x8, [x0]
    d9dc:	mov	x22, x20
    d9e0:	ldrb	w9, [x22]
    d9e4:	ldrh	w9, [x8, x9, lsl #1]
    d9e8:	tbnz	w9, #0, da58 <_argp_fmtstream_update@@Base+0x19c>
    d9ec:	sub	x22, x22, #0x1
    d9f0:	cmp	x22, x21
    d9f4:	b.cs	d9e0 <_argp_fmtstream_update@@Base+0x124>  // b.hs, b.nlast
    d9f8:	mov	w8, wzr
    d9fc:	b	da5c <_argp_fmtstream_update@@Base+0x1a0>
    da00:	cmp	x24, x27
    da04:	sub	x22, x20, #0x1
    da08:	b.cs	dca0 <_argp_fmtstream_update@@Base+0x3e4>  // b.hs, b.nlast
    da0c:	sub	x8, x22, x23
    da10:	add	x0, x21, x8
    da14:	sub	x2, x27, x24
    da18:	mov	x1, x24
    da1c:	bl	a300 <memmove@plt>
    da20:	ldr	x8, [x19, #40]
    da24:	ldr	x9, [x19, #56]
    da28:	mov	x23, xzr
    da2c:	str	xzr, [x19, #40]
    da30:	sub	x8, x22, x8
    da34:	add	x8, x21, x8
    da38:	sub	x8, x24, x8
    da3c:	add	x27, x9, x8
    da40:	str	x27, [x19, #56]
    da44:	add	x20, x21, x20
    da48:	b	dc88 <_argp_fmtstream_update@@Base+0x3cc>
    da4c:	mov	w8, wzr
    da50:	mov	x22, x20
    da54:	b	da5c <_argp_fmtstream_update@@Base+0x1a0>
    da58:	mov	w8, #0x1                   	// #1
    da5c:	add	x23, x22, #0x1
    da60:	cmp	x23, x21
    da64:	b.ls	da9c <_argp_fmtstream_update@@Base+0x1e0>  // b.plast
    da68:	cbz	w8, da94 <_argp_fmtstream_update@@Base+0x1d8>
    da6c:	sub	x8, x22, #0x1
    da70:	mov	x22, x8
    da74:	cmp	x8, x21
    da78:	b.cc	da94 <_argp_fmtstream_update@@Base+0x1d8>  // b.lo, b.ul, b.last
    da7c:	bl	aa30 <__ctype_b_loc@plt>
    da80:	mov	x8, x22
    da84:	ldr	x9, [x0]
    da88:	ldrb	w10, [x8], #-1
    da8c:	ldrh	w9, [x9, x10, lsl #1]
    da90:	tbnz	w9, #0, da70 <_argp_fmtstream_update@@Base+0x1b4>
    da94:	add	x20, x22, #0x1
    da98:	b	daf0 <_argp_fmtstream_update@@Base+0x234>
    da9c:	cmp	x20, x24
    daa0:	b.cs	dad0 <_argp_fmtstream_update@@Base+0x214>  // b.hs, b.nlast
    daa4:	add	x8, x21, x25
    daa8:	add	x8, x8, #0x1
    daac:	mov	x20, x8
    dab0:	cmp	x8, x24
    dab4:	b.cs	dad0 <_argp_fmtstream_update@@Base+0x214>  // b.hs, b.nlast
    dab8:	bl	aa30 <__ctype_b_loc@plt>
    dabc:	mov	x8, x20
    dac0:	ldr	x9, [x0]
    dac4:	ldrb	w10, [x8], #1
    dac8:	ldrh	w9, [x9, x10, lsl #1]
    dacc:	tbz	w9, #0, daac <_argp_fmtstream_update@@Base+0x1f0>
    dad0:	cmp	x20, x24
    dad4:	b.eq	db1c <_argp_fmtstream_update@@Base+0x260>  // b.none
    dad8:	bl	aa30 <__ctype_b_loc@plt>
    dadc:	ldr	x8, [x0]
    dae0:	mov	x23, x20
    dae4:	ldrb	w9, [x23, #1]!
    dae8:	ldrh	w9, [x8, x9, lsl #1]
    daec:	tbnz	w9, #0, dae4 <_argp_fmtstream_update@@Base+0x228>
    daf0:	add	x8, x27, #0x1
    daf4:	cmp	x23, x8
    daf8:	b.eq	db2c <_argp_fmtstream_update@@Base+0x270>  // b.none
    dafc:	cmp	x27, x23
    db00:	b.ls	db8c <_argp_fmtstream_update@@Base+0x2d0>  // b.plast
    db04:	mvn	x8, x20
    db08:	add	x8, x8, x23
    db0c:	cmp	x8, x28
    db10:	b.ge	db8c <_argp_fmtstream_update@@Base+0x2d0>  // b.tcont
    db14:	ldr	x8, [x19, #64]
    db18:	b	db44 <_argp_fmtstream_update@@Base+0x288>
    db1c:	mov	x23, xzr
    db20:	add	x20, x24, #0x1
    db24:	str	xzr, [x19, #40]
    db28:	b	dc88 <_argp_fmtstream_update@@Base+0x3cc>
    db2c:	cmp	x27, x23
    db30:	b.ls	db8c <_argp_fmtstream_update@@Base+0x2d0>  // b.plast
    db34:	ldr	x8, [x19, #64]
    db38:	sub	x9, x8, x20
    db3c:	cmp	x9, x28
    db40:	b.gt	db8c <_argp_fmtstream_update@@Base+0x2d0>
    db44:	sub	x8, x8, x27
    db48:	add	x9, x28, #0x1
    db4c:	cmp	x8, x9
    db50:	b.le	db98 <_argp_fmtstream_update@@Base+0x2dc>
    db54:	sub	x22, x27, x23
    db58:	add	x24, x20, #0x1
    db5c:	add	x0, x24, x28
    db60:	mov	x1, x23
    db64:	mov	x2, x22
    db68:	bl	a300 <memmove@plt>
    db6c:	ldr	x8, [x19, #24]
    db70:	mov	w9, #0xa                   	// #10
    db74:	strb	w9, [x20]
    db78:	mov	x20, x24
    db7c:	add	x23, x24, x8
    db80:	add	x8, x23, x22
    db84:	sub	x26, x8, x21
    db88:	b	dbc8 <_argp_fmtstream_update@@Base+0x30c>
    db8c:	mov	w8, #0xa                   	// #10
    db90:	strb	w8, [x20], #1
    db94:	b	dbc8 <_argp_fmtstream_update@@Base+0x30c>
    db98:	ldr	x0, [x19, #48]
    db9c:	subs	x2, x20, x0
    dba0:	b.ls	dbb0 <_argp_fmtstream_update@@Base+0x2f4>  // b.plast
    dba4:	ldr	x3, [x19]
    dba8:	mov	w1, #0x1                   	// #1
    dbac:	bl	a350 <fwrite_unlocked@plt>
    dbb0:	ldr	x1, [x19]
    dbb4:	mov	w0, #0xa                   	// #10
    dbb8:	bl	a5c0 <putc_unlocked@plt>
    dbbc:	ldr	x20, [x19, #48]
    dbc0:	sub	x26, x27, x20
    dbc4:	mov	x21, x20
    dbc8:	ldr	x8, [x19, #24]
    dbcc:	sub	x9, x23, x20
    dbd0:	mov	w10, #0x20                  	// #32
    dbd4:	cmp	x9, x8
    dbd8:	b.ge	dc28 <_argp_fmtstream_update@@Base+0x36c>  // b.tcont
    dbdc:	add	x9, x21, x26
    dbe0:	add	x9, x9, #0x1
    dbe4:	cmp	x23, x9
    dbe8:	b.ne	dbfc <_argp_fmtstream_update@@Base+0x340>  // b.any
    dbec:	ldr	x9, [x19, #64]
    dbf0:	sub	x9, x9, x23
    dbf4:	cmp	x9, x8
    dbf8:	b.ge	dc28 <_argp_fmtstream_update@@Base+0x36c>  // b.tcont
    dbfc:	cmp	x8, #0x1
    dc00:	b.lt	dc4c <_argp_fmtstream_update@@Base+0x390>  // b.tstop
    dc04:	mov	x22, xzr
    dc08:	ldr	x1, [x19]
    dc0c:	mov	w0, #0x20                  	// #32
    dc10:	bl	a5c0 <putc_unlocked@plt>
    dc14:	ldr	x8, [x19, #24]
    dc18:	add	x22, x22, #0x1
    dc1c:	cmp	x8, x22
    dc20:	b.gt	dc08 <_argp_fmtstream_update@@Base+0x34c>
    dc24:	b	dc4c <_argp_fmtstream_update@@Base+0x390>
    dc28:	cmp	x8, #0x1
    dc2c:	b.lt	dc4c <_argp_fmtstream_update@@Base+0x390>  // b.tstop
    dc30:	mov	x9, xzr
    dc34:	strb	w10, [x20, x9]
    dc38:	ldr	x8, [x19, #24]
    dc3c:	add	x9, x9, #0x1
    dc40:	cmp	x8, x9
    dc44:	b.gt	dc34 <_argp_fmtstream_update@@Base+0x378>
    dc48:	add	x20, x20, x9
    dc4c:	cmp	x20, x23
    dc50:	b.cs	dc6c <_argp_fmtstream_update@@Base+0x3b0>  // b.hs, b.nlast
    dc54:	add	x8, x21, x26
    dc58:	sub	x2, x8, x23
    dc5c:	mov	x0, x20
    dc60:	mov	x1, x23
    dc64:	bl	a300 <memmove@plt>
    dc68:	ldr	x8, [x19, #24]
    dc6c:	sub	x9, x26, x23
    dc70:	cmp	x8, #0x0
    dc74:	add	x9, x9, x21
    dc78:	csinv	x23, x8, xzr, ne  // ne = any
    dc7c:	add	x27, x20, x9
    dc80:	str	x27, [x19, #56]
    dc84:	str	x23, [x19, #40]
    dc88:	cmp	x20, x27
    dc8c:	mov	x21, x20
    dc90:	b.cc	d8f4 <_argp_fmtstream_update@@Base+0x38>  // b.lo, b.ul, b.last
    dc94:	b	dcb4 <_argp_fmtstream_update@@Base+0x3f8>
    dc98:	str	x8, [x19, #40]
    dc9c:	b	dcb4 <_argp_fmtstream_update@@Base+0x3f8>
    dca0:	add	x8, x23, x26
    dca4:	str	x8, [x19, #40]
    dca8:	sub	x8, x22, x8
    dcac:	add	x27, x27, x8
    dcb0:	str	x27, [x19, #56]
    dcb4:	ldr	x8, [x19, #48]
    dcb8:	sub	x8, x27, x8
    dcbc:	str	x8, [x19, #32]
    dcc0:	ldp	x20, x19, [sp, #80]
    dcc4:	ldp	x22, x21, [sp, #64]
    dcc8:	ldp	x24, x23, [sp, #48]
    dccc:	ldp	x26, x25, [sp, #32]
    dcd0:	ldp	x28, x27, [sp, #16]
    dcd4:	ldp	x29, x30, [sp], #96
    dcd8:	ret

000000000000dcdc <_argp_fmtstream_ensure@@Base>:
    dcdc:	stp	x29, x30, [sp, #-32]!
    dce0:	stp	x20, x19, [sp, #16]
    dce4:	ldp	x9, x8, [x0, #56]
    dce8:	mov	x29, sp
    dcec:	sub	x8, x8, x9
    dcf0:	cmp	x8, x1
    dcf4:	b.cs	dd64 <_argp_fmtstream_ensure@@Base+0x88>  // b.hs, b.nlast
    dcf8:	mov	x20, x1
    dcfc:	mov	x19, x0
    dd00:	bl	a570 <_argp_fmtstream_update@plt>
    dd04:	ldp	x0, x8, [x19, #48]
    dd08:	ldr	x3, [x19]
    dd0c:	mov	w1, #0x1                   	// #1
    dd10:	sub	x2, x8, x0
    dd14:	bl	a350 <fwrite_unlocked@plt>
    dd18:	mov	x8, x0
    dd1c:	ldp	x0, x9, [x19, #48]
    dd20:	sub	x10, x9, x0
    dd24:	cmp	x8, x10
    dd28:	b.ne	dd6c <_argp_fmtstream_ensure@@Base+0x90>  // b.any
    dd2c:	ldr	x8, [x19, #64]
    dd30:	str	x0, [x19, #56]
    dd34:	str	xzr, [x19, #32]
    dd38:	sub	x8, x8, x0
    dd3c:	cmp	x8, x20
    dd40:	b.cs	dd64 <_argp_fmtstream_ensure@@Base+0x88>  // b.hs, b.nlast
    dd44:	adds	x20, x8, x20
    dd48:	b.cs	dd94 <_argp_fmtstream_ensure@@Base+0xb8>  // b.hs, b.nlast
    dd4c:	mov	x1, x20
    dd50:	bl	a860 <realloc@plt>
    dd54:	cbz	x0, dd94 <_argp_fmtstream_ensure@@Base+0xb8>
    dd58:	add	x8, x0, x20
    dd5c:	stp	x0, x0, [x19, #48]
    dd60:	str	x8, [x19, #64]
    dd64:	mov	w0, #0x1                   	// #1
    dd68:	b	dda8 <_argp_fmtstream_ensure@@Base+0xcc>
    dd6c:	ldr	x10, [x19, #32]
    dd70:	sub	x9, x9, x8
    dd74:	add	x1, x0, x8
    dd78:	sub	x2, x9, x0
    dd7c:	sub	x8, x10, x8
    dd80:	str	x9, [x19, #56]
    dd84:	str	x8, [x19, #32]
    dd88:	bl	a300 <memmove@plt>
    dd8c:	mov	w0, wzr
    dd90:	b	dda8 <_argp_fmtstream_ensure@@Base+0xcc>
    dd94:	bl	aec0 <__errno_location@plt>
    dd98:	mov	x8, x0
    dd9c:	mov	w0, wzr
    dda0:	mov	w9, #0xc                   	// #12
    dda4:	str	w9, [x8]
    dda8:	ldp	x20, x19, [sp, #16]
    ddac:	ldp	x29, x30, [sp], #32
    ddb0:	ret

000000000000ddb4 <argp_fmtstream_printf@@Base>:
    ddb4:	sub	sp, sp, #0x140
    ddb8:	stp	x29, x30, [sp, #240]
    ddbc:	add	x29, sp, #0xf0
    ddc0:	stp	x22, x21, [sp, #288]
    ddc4:	mov	x22, #0xffffffffffffffd0    	// #-48
    ddc8:	mov	x8, sp
    ddcc:	sub	x9, x29, #0x70
    ddd0:	stp	x28, x25, [sp, #256]
    ddd4:	stp	x24, x23, [sp, #272]
    ddd8:	stp	x20, x19, [sp, #304]
    dddc:	mov	x20, x1
    dde0:	mov	x19, x0
    dde4:	mov	w1, #0x96                  	// #150
    dde8:	movk	x22, #0xff80, lsl #32
    ddec:	add	x23, x29, #0x50
    ddf0:	add	x24, x8, #0x80
    ddf4:	add	x25, x9, #0x30
    ddf8:	stp	x2, x3, [x29, #-112]
    ddfc:	stp	x4, x5, [x29, #-96]
    de00:	stp	x6, x7, [x29, #-80]
    de04:	stp	q1, q2, [sp, #16]
    de08:	stp	q3, q4, [sp, #48]
    de0c:	str	q0, [sp]
    de10:	stp	q5, q6, [sp, #80]
    de14:	str	q7, [sp, #112]
    de18:	mov	x0, x19
    de1c:	bl	ada0 <_argp_fmtstream_ensure@plt>
    de20:	cbz	w0, de70 <argp_fmtstream_printf@@Base+0xbc>
    de24:	stp	x24, x22, [x29, #-16]
    de28:	stp	x23, x25, [x29, #-32]
    de2c:	ldp	x0, x8, [x19, #56]
    de30:	ldp	q0, q1, [x29, #-32]
    de34:	sub	x3, x29, #0x40
    de38:	mov	x2, x20
    de3c:	sub	x21, x8, x0
    de40:	mov	x1, x21
    de44:	stp	q0, q1, [x29, #-64]
    de48:	bl	ade0 <vsnprintf@plt>
    de4c:	add	w8, w0, #0x1
    de50:	cmp	x21, w0, sxtw
    de54:	sxtw	x1, w8
    de58:	b.ls	de18 <argp_fmtstream_printf@@Base+0x64>  // b.plast
    de5c:	ldr	x8, [x19, #56]
    de60:	sxtw	x0, w0
    de64:	add	x8, x8, x0
    de68:	str	x8, [x19, #56]
    de6c:	b	de74 <argp_fmtstream_printf@@Base+0xc0>
    de70:	mov	x0, #0xffffffffffffffff    	// #-1
    de74:	ldp	x20, x19, [sp, #304]
    de78:	ldp	x22, x21, [sp, #288]
    de7c:	ldp	x24, x23, [sp, #272]
    de80:	ldp	x28, x25, [sp, #256]
    de84:	ldp	x29, x30, [sp, #240]
    de88:	add	sp, sp, #0x140
    de8c:	ret

000000000000de90 <argp_fmtstream_write@@Base>:
    de90:	stp	x29, x30, [sp, #-48]!
    de94:	stp	x20, x19, [sp, #32]
    de98:	mov	x20, x0
    de9c:	ldr	x0, [x0, #56]
    dea0:	ldr	x8, [x20, #64]
    dea4:	str	x21, [sp, #16]
    dea8:	mov	x19, x2
    deac:	add	x9, x0, x2
    deb0:	cmp	x9, x8
    deb4:	mov	x21, x1
    deb8:	mov	x29, sp
    debc:	b.ls	ded4 <argp_fmtstream_write@@Base+0x44>  // b.plast
    dec0:	mov	x0, x20
    dec4:	mov	x1, x19
    dec8:	bl	ada0 <_argp_fmtstream_ensure@plt>
    decc:	cbz	w0, def0 <argp_fmtstream_write@@Base+0x60>
    ded0:	ldr	x0, [x20, #56]
    ded4:	mov	x1, x21
    ded8:	mov	x2, x19
    dedc:	bl	a2f0 <memcpy@plt>
    dee0:	ldr	x8, [x20, #56]
    dee4:	add	x8, x8, x19
    dee8:	str	x8, [x20, #56]
    deec:	b	def4 <argp_fmtstream_write@@Base+0x64>
    def0:	mov	x19, xzr
    def4:	mov	x0, x19
    def8:	ldp	x20, x19, [sp, #32]
    defc:	ldr	x21, [sp, #16]
    df00:	ldp	x29, x30, [sp], #48
    df04:	ret

000000000000df08 <argp_fmtstream_puts@@Base>:
    df08:	stp	x29, x30, [sp, #-48]!
    df0c:	stp	x20, x19, [sp, #32]
    df10:	mov	x20, x0
    df14:	mov	x0, x1
    df18:	str	x21, [sp, #16]
    df1c:	mov	x29, sp
    df20:	mov	x21, x1
    df24:	bl	a370 <strlen@plt>
    df28:	cbz	x0, df80 <argp_fmtstream_puts@@Base+0x78>
    df2c:	mov	x19, x0
    df30:	ldp	x0, x8, [x20, #56]
    df34:	add	x9, x0, x19
    df38:	cmp	x9, x8
    df3c:	b.ls	df54 <argp_fmtstream_puts@@Base+0x4c>  // b.plast
    df40:	mov	x0, x20
    df44:	mov	x1, x19
    df48:	bl	ada0 <_argp_fmtstream_ensure@plt>
    df4c:	cbz	w0, df74 <argp_fmtstream_puts@@Base+0x6c>
    df50:	ldr	x0, [x20, #56]
    df54:	mov	x1, x21
    df58:	mov	x2, x19
    df5c:	bl	a2f0 <memcpy@plt>
    df60:	ldr	x8, [x20, #56]
    df64:	add	x8, x8, x19
    df68:	str	x8, [x20, #56]
    df6c:	mov	x8, x19
    df70:	b	df78 <argp_fmtstream_puts@@Base+0x70>
    df74:	mov	x8, xzr
    df78:	cmp	x8, x19
    df7c:	csetm	w0, ne  // ne = any
    df80:	ldp	x20, x19, [sp, #32]
    df84:	ldr	x21, [sp, #16]
    df88:	ldp	x29, x30, [sp], #48
    df8c:	ret

000000000000df90 <argp_fmtstream_putc@@Base>:
    df90:	stp	x29, x30, [sp, #-32]!
    df94:	stp	x20, x19, [sp, #16]
    df98:	ldp	x8, x9, [x0, #56]
    df9c:	mov	x19, x0
    dfa0:	mov	w20, w1
    dfa4:	mov	x29, sp
    dfa8:	cmp	x8, x9
    dfac:	b.cc	dfc4 <argp_fmtstream_putc@@Base+0x34>  // b.lo, b.ul, b.last
    dfb0:	mov	w1, #0x1                   	// #1
    dfb4:	mov	x0, x19
    dfb8:	bl	ada0 <_argp_fmtstream_ensure@plt>
    dfbc:	cbz	w0, dfd8 <argp_fmtstream_putc@@Base+0x48>
    dfc0:	ldr	x8, [x19, #56]
    dfc4:	add	x9, x8, #0x1
    dfc8:	and	w0, w20, #0xff
    dfcc:	str	x9, [x19, #56]
    dfd0:	strb	w20, [x8]
    dfd4:	b	dfdc <argp_fmtstream_putc@@Base+0x4c>
    dfd8:	mov	w0, #0xffffffff            	// #-1
    dfdc:	ldp	x20, x19, [sp, #16]
    dfe0:	ldp	x29, x30, [sp], #32
    dfe4:	ret

000000000000dfe8 <argp_fmtstream_set_lmargin@@Base>:
    dfe8:	stp	x29, x30, [sp, #-32]!
    dfec:	stp	x20, x19, [sp, #16]
    dff0:	ldp	x9, x8, [x0, #48]
    dff4:	ldr	x10, [x0, #32]
    dff8:	mov	x19, x0
    dffc:	mov	x20, x1
    e000:	sub	x8, x8, x9
    e004:	cmp	x8, x10
    e008:	mov	x29, sp
    e00c:	b.ls	e018 <argp_fmtstream_set_lmargin@@Base+0x30>  // b.plast
    e010:	mov	x0, x19
    e014:	bl	a570 <_argp_fmtstream_update@plt>
    e018:	ldr	x0, [x19, #8]
    e01c:	str	x20, [x19, #8]
    e020:	ldp	x20, x19, [sp, #16]
    e024:	ldp	x29, x30, [sp], #32
    e028:	ret

000000000000e02c <argp_fmtstream_set_rmargin@@Base>:
    e02c:	stp	x29, x30, [sp, #-32]!
    e030:	stp	x20, x19, [sp, #16]
    e034:	ldp	x9, x8, [x0, #48]
    e038:	ldr	x10, [x0, #32]
    e03c:	mov	x19, x0
    e040:	mov	x20, x1
    e044:	sub	x8, x8, x9
    e048:	cmp	x8, x10
    e04c:	mov	x29, sp
    e050:	b.ls	e05c <argp_fmtstream_set_rmargin@@Base+0x30>  // b.plast
    e054:	mov	x0, x19
    e058:	bl	a570 <_argp_fmtstream_update@plt>
    e05c:	ldr	x0, [x19, #16]
    e060:	str	x20, [x19, #16]
    e064:	ldp	x20, x19, [sp, #16]
    e068:	ldp	x29, x30, [sp], #32
    e06c:	ret

000000000000e070 <argp_fmtstream_set_wmargin@@Base>:
    e070:	stp	x29, x30, [sp, #-32]!
    e074:	stp	x20, x19, [sp, #16]
    e078:	ldp	x9, x8, [x0, #48]
    e07c:	ldr	x10, [x0, #32]
    e080:	mov	x19, x0
    e084:	mov	x20, x1
    e088:	sub	x8, x8, x9
    e08c:	cmp	x8, x10
    e090:	mov	x29, sp
    e094:	b.ls	e0a0 <argp_fmtstream_set_wmargin@@Base+0x30>  // b.plast
    e098:	mov	x0, x19
    e09c:	bl	a570 <_argp_fmtstream_update@plt>
    e0a0:	ldr	x0, [x19, #24]
    e0a4:	str	x20, [x19, #24]
    e0a8:	ldp	x20, x19, [sp, #16]
    e0ac:	ldp	x29, x30, [sp], #32
    e0b0:	ret

000000000000e0b4 <argp_fmtstream_point@@Base>:
    e0b4:	stp	x29, x30, [sp, #-32]!
    e0b8:	str	x19, [sp, #16]
    e0bc:	ldp	x9, x8, [x0, #48]
    e0c0:	ldr	x10, [x0, #32]
    e0c4:	mov	x19, x0
    e0c8:	mov	x29, sp
    e0cc:	sub	x8, x8, x9
    e0d0:	cmp	x8, x10
    e0d4:	b.ls	e0e0 <argp_fmtstream_point@@Base+0x2c>  // b.plast
    e0d8:	mov	x0, x19
    e0dc:	bl	a570 <_argp_fmtstream_update@plt>
    e0e0:	ldr	x8, [x19, #40]
    e0e4:	ldr	x19, [sp, #16]
    e0e8:	bic	x0, x8, x8, asr #63
    e0ec:	ldp	x29, x30, [sp], #32
    e0f0:	ret

000000000000e0f4 <argp_help@@Base>:
    e0f4:	mov	x4, x3
    e0f8:	mov	w3, w2
    e0fc:	mov	x2, x1
    e100:	mov	x1, xzr
    e104:	b	e108 <argp_help@@Base+0x14>
    e108:	stp	x29, x30, [sp, #-96]!
    e10c:	stp	x28, x27, [sp, #16]
    e110:	stp	x26, x25, [sp, #32]
    e114:	stp	x24, x23, [sp, #48]
    e118:	stp	x22, x21, [sp, #64]
    e11c:	stp	x20, x19, [sp, #80]
    e120:	mov	x29, sp
    e124:	sub	sp, sp, #0x80
    e128:	stp	x0, x4, [x29, #-96]
    e12c:	cbz	x2, f0b0 <argp_help@@Base+0xfbc>
    e130:	mov	x0, x2
    e134:	mov	w28, w3
    e138:	mov	x21, x2
    e13c:	mov	x19, x1
    e140:	bl	a3e0 <flockfile@plt>
    e144:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    e148:	ldr	w8, [x8, #1748]
    e14c:	stur	w28, [x29, #-76]
    e150:	stur	x19, [x29, #-72]
    e154:	cbnz	w8, e458 <argp_help@@Base+0x364>
    e158:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    e15c:	add	x0, x0, #0xd61
    e160:	bl	aef0 <getenv@plt>
    e164:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    e168:	add	x8, x8, #0x6b0
    e16c:	ldp	q0, q1, [x8]
    e170:	ldr	x8, [x8, #32]
    e174:	stp	q0, q1, [x29, #-48]
    e178:	stur	x8, [x29, #-16]
    e17c:	cbz	x0, e458 <argp_help@@Base+0x364>
    e180:	ldrb	w19, [x0]
    e184:	mov	x23, x0
    e188:	cbz	w19, e3f4 <argp_help@@Base+0x300>
    e18c:	bl	aa30 <__ctype_b_loc@plt>
    e190:	ldur	x9, [x29, #-72]
    e194:	adrp	x8, 28000 <vasnprintf@@Base+0x944>
    e198:	add	x8, x8, #0xcb7
    e19c:	adrp	x26, 28000 <vasnprintf@@Base+0x944>
    e1a0:	cmp	x9, #0x0
    e1a4:	mov	x24, x0
    e1a8:	add	x26, x26, #0xfa8
    e1ac:	csel	x8, xzr, x8, eq  // eq = none
    e1b0:	stur	x8, [x29, #-104]
    e1b4:	ldr	x20, [x24]
    e1b8:	and	x8, x19, #0xff
    e1bc:	ldrh	w8, [x20, x8, lsl #1]
    e1c0:	tbz	w8, #13, e1d0 <argp_help@@Base+0xdc>
    e1c4:	ldrb	w19, [x23, #1]!
    e1c8:	ldrh	w8, [x20, x19, lsl #1]
    e1cc:	tbnz	w8, #13, e1c4 <argp_help@@Base+0xd0>
    e1d0:	tbz	w8, #10, e3c0 <argp_help@@Base+0x2cc>
    e1d4:	mov	w22, w19
    e1d8:	mov	x9, x23
    e1dc:	and	x8, x22, #0xff
    e1e0:	ldrh	w8, [x20, x8, lsl #1]
    e1e4:	tbnz	w8, #3, e1fc <argp_help@@Base+0x108>
    e1e8:	and	w10, w22, #0xff
    e1ec:	cmp	w10, #0x5f
    e1f0:	b.eq	e1fc <argp_help@@Base+0x108>  // b.none
    e1f4:	cmp	w10, #0x2d
    e1f8:	b.ne	e204 <argp_help@@Base+0x110>  // b.any
    e1fc:	ldrb	w22, [x9, #1]!
    e200:	b	e1dc <argp_help@@Base+0xe8>
    e204:	mov	x27, x9
    e208:	tbz	w8, #13, e21c <argp_help@@Base+0x128>
    e20c:	mov	x27, x9
    e210:	ldrb	w22, [x27, #1]!
    e214:	ldrh	w8, [x20, x22, lsl #1]
    e218:	tbnz	w8, #13, e210 <argp_help@@Base+0x11c>
    e21c:	ands	w10, w22, #0xff
    e220:	sub	x28, x9, x23
    e224:	b.eq	e254 <argp_help@@Base+0x160>  // b.none
    e228:	cmp	w10, #0x2c
    e22c:	b.eq	e254 <argp_help@@Base+0x160>  // b.none
    e230:	cmp	w10, #0x3d
    e234:	b.ne	e244 <argp_help@@Base+0x150>  // b.any
    e238:	ldrb	w22, [x27, #1]!
    e23c:	ldrh	w8, [x20, x22, lsl #1]
    e240:	tbnz	w8, #13, e238 <argp_help@@Base+0x144>
    e244:	tbnz	w8, #11, e298 <argp_help@@Base+0x1a4>
    e248:	mov	w20, wzr
    e24c:	mov	w19, wzr
    e250:	b	e2d0 <argp_help@@Base+0x1dc>
    e254:	and	w8, w19, #0xff
    e258:	cmp	w8, #0x6e
    e25c:	b.ne	e28c <argp_help@@Base+0x198>  // b.any
    e260:	ldrb	w8, [x23, #1]
    e264:	cmp	w8, #0x6f
    e268:	b.ne	e28c <argp_help@@Base+0x198>  // b.any
    e26c:	ldrb	w8, [x23, #2]
    e270:	cmp	w8, #0x2d
    e274:	b.ne	e28c <argp_help@@Base+0x198>  // b.any
    e278:	mov	w19, wzr
    e27c:	add	x23, x23, #0x3
    e280:	sub	x28, x28, #0x3
    e284:	mov	w20, #0x1                   	// #1
    e288:	b	e2d0 <argp_help@@Base+0x1dc>
    e28c:	mov	w20, #0x1                   	// #1
    e290:	mov	w19, #0x1                   	// #1
    e294:	b	e2d0 <argp_help@@Base+0x1dc>
    e298:	mov	x0, x27
    e29c:	bl	a600 <atoi@plt>
    e2a0:	and	x8, x22, #0xff
    e2a4:	ldrh	w8, [x20, x8, lsl #1]
    e2a8:	mov	w19, w0
    e2ac:	tbz	w8, #11, e2bc <argp_help@@Base+0x1c8>
    e2b0:	ldrb	w8, [x27, #1]!
    e2b4:	ldrh	w8, [x20, x8, lsl #1]
    e2b8:	tbnz	w8, #11, e2b0 <argp_help@@Base+0x1bc>
    e2bc:	tbz	w8, #13, e2cc <argp_help@@Base+0x1d8>
    e2c0:	ldrb	w8, [x27, #1]!
    e2c4:	ldrh	w8, [x20, x8, lsl #1]
    e2c8:	tbnz	w8, #13, e2c0 <argp_help@@Base+0x1cc>
    e2cc:	mov	w20, wzr
    e2d0:	mov	x25, xzr
    e2d4:	add	x22, x26, x25
    e2d8:	mov	x0, x22
    e2dc:	bl	a370 <strlen@plt>
    e2e0:	cmp	x0, x28
    e2e4:	b.ne	e2fc <argp_help@@Base+0x208>  // b.any
    e2e8:	mov	x0, x23
    e2ec:	mov	x1, x22
    e2f0:	mov	x2, x28
    e2f4:	bl	a740 <strncmp@plt>
    e2f8:	cbz	w0, e344 <argp_help@@Base+0x250>
    e2fc:	add	x25, x25, #0x10
    e300:	add	x8, x26, x25
    e304:	add	x9, x26, #0x90
    e308:	cmp	x8, x9
    e30c:	b.cc	e2d4 <argp_help@@Base+0x1e0>  // b.lo, b.ul, b.last
    e310:	ldur	x0, [x29, #-104]
    e314:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e318:	mov	w2, #0x5                   	// #5
    e31c:	add	x1, x1, #0xd9e
    e320:	bl	adc0 <dcgettext@plt>
    e324:	mov	x3, x0
    e328:	ldur	x0, [x29, #-72]
    e32c:	mov	w1, wzr
    e330:	mov	w2, wzr
    e334:	mov	w4, w28
    e338:	mov	x5, x23
    e33c:	bl	a6d0 <argp_failure@plt>
    e340:	b	e36c <argp_help@@Base+0x278>
    e344:	cbz	w20, e354 <argp_help@@Base+0x260>
    e348:	add	x8, x26, x25
    e34c:	ldrb	w8, [x8, #14]
    e350:	cbz	w8, e38c <argp_help@@Base+0x298>
    e354:	add	x8, x26, x25
    e358:	ldrb	w8, [x8, #15]
    e35c:	sub	x9, x29, #0x30
    e360:	str	w19, [x9, x8]
    e364:	cmp	x25, #0x90
    e368:	b.eq	e310 <argp_help@@Base+0x21c>  // b.none
    e36c:	mov	x8, x27
    e370:	ldrb	w9, [x8], #1
    e374:	ldur	w28, [x29, #-76]
    e378:	cmp	w9, #0x2c
    e37c:	csel	x23, x8, x27, eq  // eq = none
    e380:	ldrb	w19, [x23]
    e384:	cbnz	w19, e1b4 <argp_help@@Base+0xc0>
    e388:	b	e3f4 <argp_help@@Base+0x300>
    e38c:	ldur	x0, [x29, #-104]
    e390:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e394:	mov	w2, #0x5                   	// #5
    e398:	add	x1, x1, #0xd6f
    e39c:	bl	adc0 <dcgettext@plt>
    e3a0:	mov	x3, x0
    e3a4:	ldur	x0, [x29, #-72]
    e3a8:	mov	w1, wzr
    e3ac:	mov	w2, wzr
    e3b0:	mov	w4, w28
    e3b4:	mov	x5, x23
    e3b8:	bl	a6d0 <argp_failure@plt>
    e3bc:	b	e364 <argp_help@@Base+0x270>
    e3c0:	tst	w19, #0xff
    e3c4:	b.eq	e3f4 <argp_help@@Base+0x300>  // b.none
    e3c8:	ldur	x0, [x29, #-104]
    e3cc:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e3d0:	add	x1, x1, #0xdc4
    e3d4:	mov	w2, #0x5                   	// #5
    e3d8:	bl	adc0 <dcgettext@plt>
    e3dc:	mov	x3, x0
    e3e0:	ldur	x0, [x29, #-72]
    e3e4:	mov	w1, wzr
    e3e8:	mov	w2, wzr
    e3ec:	mov	x4, x23
    e3f0:	bl	a6d0 <argp_failure@plt>
    e3f4:	ldur	w8, [x29, #-16]
    e3f8:	ldur	x20, [x29, #-72]
    e3fc:	adrp	x19, 28000 <vasnprintf@@Base+0x944>
    e400:	adrp	x10, 29000 <vasnprintf@@Base+0x1944>
    e404:	add	x19, x19, #0xfa8
    e408:	sub	x9, x29, #0x30
    e40c:	add	x10, x10, #0x38
    e410:	ldrb	w11, [x19, #14]
    e414:	cbnz	w11, e430 <argp_help@@Base+0x33c>
    e418:	ldrb	w11, [x19, #15]
    e41c:	cmp	x11, #0x20
    e420:	b.eq	e430 <argp_help@@Base+0x33c>  // b.none
    e424:	ldr	w11, [x9, x11]
    e428:	cmp	w11, w8
    e42c:	b.ge	f0d0 <argp_help@@Base+0xfdc>  // b.tcont
    e430:	add	x19, x19, #0x10
    e434:	cmp	x19, x10
    e438:	b.cc	e410 <argp_help@@Base+0x31c>  // b.lo, b.ul, b.last
    e43c:	ldp	q0, q1, [x29, #-48]
    e440:	ldur	w8, [x29, #-16]
    e444:	adrp	x10, 3d000 <base_len@@Base+0x2a06c>
    e448:	mov	w9, #0x1                   	// #1
    e44c:	add	x10, x10, #0x6b0
    e450:	stp	q0, q1, [x10]
    e454:	stp	w8, w9, [x10, #32]
    e458:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    e45c:	ldrsw	x2, [x8, #1744]
    e460:	mov	x0, x21
    e464:	mov	x1, xzr
    e468:	mov	x3, xzr
    e46c:	bl	aac0 <argp_make_fmtstream@plt>
    e470:	cbz	x0, e4e8 <argp_help@@Base+0x3f4>
    e474:	mov	w8, #0xb                   	// #11
    e478:	mov	x23, x0
    e47c:	tst	w28, w8
    e480:	b.eq	e50c <argp_help@@Base+0x418>  // b.none
    e484:	ldur	x0, [x29, #-96]
    e488:	mov	x1, xzr
    e48c:	bl	f450 <argp_failure@@Base+0x190>
    e490:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e494:	add	x1, x1, #0xcf0
    e498:	mov	x24, x0
    e49c:	bl	f940 <argp_failure@@Base+0x680>
    e4a0:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
    e4a4:	add	x1, x1, #0xd6
    e4a8:	mov	x0, x24
    e4ac:	bl	f940 <argp_failure@@Base+0x680>
    e4b0:	ldr	w1, [x24, #8]
    e4b4:	cbz	w1, e510 <argp_help@@Base+0x41c>
    e4b8:	ldr	x0, [x24]
    e4bc:	mov	w8, wzr
    e4c0:	add	x9, x0, #0x30
    e4c4:	str	w8, [x9], #56
    e4c8:	add	w8, w8, #0x1
    e4cc:	cmp	w1, w8
    e4d0:	b.ne	e4c4 <argp_help@@Base+0x3d0>  // b.any
    e4d4:	adrp	x3, 10000 <argp_failure@@Base+0xd40>
    e4d8:	add	x3, x3, #0x248
    e4dc:	mov	w2, #0x38                  	// #56
    e4e0:	bl	a550 <qsort@plt>
    e4e4:	b	e510 <argp_help@@Base+0x41c>
    e4e8:	mov	x0, x21
    e4ec:	mov	sp, x29
    e4f0:	ldp	x20, x19, [sp, #80]
    e4f4:	ldp	x22, x21, [sp, #64]
    e4f8:	ldp	x24, x23, [sp, #48]
    e4fc:	ldp	x26, x25, [sp, #32]
    e500:	ldp	x28, x27, [sp, #16]
    e504:	ldp	x29, x30, [sp], #96
    e508:	b	a6a0 <funlockfile@plt>
    e50c:	mov	x24, xzr
    e510:	tst	w28, #0x3
    e514:	b.eq	e7cc <argp_help@@Base+0x6d8>  // b.none
    e518:	ldur	x0, [x29, #-96]
    e51c:	mov	x25, x24
    e520:	stur	x21, [x29, #-120]
    e524:	bl	f9c8 <argp_failure@@Base+0x708>
    e528:	add	x9, x0, #0xf
    e52c:	mov	x8, sp
    e530:	and	x9, x9, #0xfffffffffffffff0
    e534:	sub	x19, x8, x9
    e538:	mov	x2, x0
    e53c:	mov	sp, x19
    e540:	mov	x0, x19
    e544:	mov	w1, wzr
    e548:	bl	a770 <memset@plt>
    e54c:	adrp	x22, 28000 <vasnprintf@@Base+0x944>
    e550:	adrp	x26, 28000 <vasnprintf@@Base+0x944>
    e554:	add	x22, x22, #0xcfb
    e558:	adrp	x24, 3d000 <base_len@@Base+0x2a06c>
    e55c:	add	x26, x26, #0xcb7
    e560:	ldp	x9, x8, [x23, #48]
    e564:	ldr	x10, [x23, #32]
    e568:	ldrsw	x21, [x24, #1740]
    e56c:	sub	x8, x8, x9
    e570:	cmp	x8, x10
    e574:	b.ls	e580 <argp_help@@Base+0x48c>  // b.plast
    e578:	mov	x0, x23
    e57c:	bl	a570 <_argp_fmtstream_update@plt>
    e580:	ldr	x20, [x23, #24]
    e584:	mov	w2, #0x5                   	// #5
    e588:	mov	x0, x26
    e58c:	mov	x1, x22
    e590:	str	x21, [x23, #24]
    e594:	stur	x19, [x29, #-48]
    e598:	bl	adc0 <dcgettext@plt>
    e59c:	ldur	x3, [x29, #-88]
    e5a0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e5a4:	mov	x2, x0
    e5a8:	mov	x0, x23
    e5ac:	add	x1, x1, #0xcf5
    e5b0:	bl	a970 <argp_fmtstream_printf@plt>
    e5b4:	ldp	x9, x8, [x23, #48]
    e5b8:	ldr	x10, [x23, #32]
    e5bc:	ldrsw	x21, [x24, #1740]
    e5c0:	ldur	w22, [x29, #-76]
    e5c4:	sub	x8, x8, x9
    e5c8:	cmp	x8, x10
    e5cc:	b.ls	e5d8 <argp_help@@Base+0x4e4>  // b.plast
    e5d0:	mov	x0, x23
    e5d4:	bl	a570 <_argp_fmtstream_update@plt>
    e5d8:	ldr	x27, [x23, #8]
    e5dc:	str	x21, [x23, #8]
    e5e0:	tbnz	w22, #1, e5fc <argp_help@@Base+0x508>
    e5e4:	mov	x0, x25
    e5e8:	mov	x1, x23
    e5ec:	bl	fa34 <argp_failure@@Base+0x774>
    e5f0:	orr	w22, w22, #0x2
    e5f4:	stur	w22, [x29, #-76]
    e5f8:	b	e664 <argp_help@@Base+0x570>
    e5fc:	ldr	w8, [x25, #8]
    e600:	cbz	w8, e664 <argp_help@@Base+0x570>
    e604:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e608:	mov	w2, #0x5                   	// #5
    e60c:	mov	x0, x26
    e610:	add	x1, x1, #0xd09
    e614:	bl	adc0 <dcgettext@plt>
    e618:	mov	x22, x0
    e61c:	bl	a370 <strlen@plt>
    e620:	cbz	x0, e664 <argp_help@@Base+0x570>
    e624:	mov	x28, x0
    e628:	ldp	x0, x8, [x23, #56]
    e62c:	add	x9, x0, x28
    e630:	cmp	x9, x8
    e634:	b.ls	e64c <argp_help@@Base+0x558>  // b.plast
    e638:	mov	x0, x23
    e63c:	mov	x1, x28
    e640:	bl	ada0 <_argp_fmtstream_ensure@plt>
    e644:	cbz	w0, e664 <argp_help@@Base+0x570>
    e648:	ldr	x0, [x23, #56]
    e64c:	mov	x1, x22
    e650:	mov	x2, x28
    e654:	bl	a2f0 <memcpy@plt>
    e658:	ldr	x8, [x23, #56]
    e65c:	add	x8, x8, x28
    e660:	str	x8, [x23, #56]
    e664:	ldur	x0, [x29, #-96]
    e668:	ldur	x1, [x29, #-72]
    e66c:	sub	x2, x29, #0x30
    e670:	mov	w3, #0x1                   	// #1
    e674:	mov	x4, x23
    e678:	bl	fc00 <argp_failure@@Base+0x940>
    e67c:	ldp	x10, x8, [x23, #48]
    e680:	ldr	x9, [x23, #32]
    e684:	mov	w28, w0
    e688:	sxtw	x20, w20
    e68c:	sub	x10, x8, x10
    e690:	cmp	x10, x9
    e694:	b.ls	e6ac <argp_help@@Base+0x5b8>  // b.plast
    e698:	mov	x0, x23
    e69c:	bl	a570 <_argp_fmtstream_update@plt>
    e6a0:	ldp	x10, x8, [x23, #48]
    e6a4:	ldr	x9, [x23, #32]
    e6a8:	sub	x10, x8, x10
    e6ac:	str	x20, [x23, #24]
    e6b0:	cmp	x10, x9
    e6b4:	sxtw	x20, w27
    e6b8:	b.ls	e6c8 <argp_help@@Base+0x5d4>  // b.plast
    e6bc:	mov	x0, x23
    e6c0:	bl	a570 <_argp_fmtstream_update@plt>
    e6c4:	ldr	x8, [x23, #56]
    e6c8:	ldr	x9, [x23, #64]
    e6cc:	str	x20, [x23, #8]
    e6d0:	cmp	x8, x9
    e6d4:	b.cc	e6ec <argp_help@@Base+0x5f8>  // b.lo, b.ul, b.last
    e6d8:	mov	w1, #0x1                   	// #1
    e6dc:	mov	x0, x23
    e6e0:	bl	ada0 <_argp_fmtstream_ensure@plt>
    e6e4:	cbz	w0, e6fc <argp_help@@Base+0x608>
    e6e8:	ldr	x8, [x23, #56]
    e6ec:	add	x9, x8, #0x1
    e6f0:	str	x9, [x23, #56]
    e6f4:	mov	w9, #0xa                   	// #10
    e6f8:	strb	w9, [x8]
    e6fc:	adrp	x22, 28000 <vasnprintf@@Base+0x944>
    e700:	add	x22, x22, #0xd02
    e704:	cbnz	w28, e560 <argp_help@@Base+0x46c>
    e708:	ldur	x21, [x29, #-120]
    e70c:	ldur	w28, [x29, #-76]
    e710:	ldur	x26, [x29, #-72]
    e714:	mov	w19, #0x1                   	// #1
    e718:	mov	x24, x25
    e71c:	tbz	w28, #4, e740 <argp_help@@Base+0x64c>
    e720:	ldur	x0, [x29, #-96]
    e724:	mov	w4, #0x1                   	// #1
    e728:	mov	x1, x26
    e72c:	mov	w2, wzr
    e730:	mov	w3, wzr
    e734:	mov	x5, x23
    e738:	bl	fe0c <argp_failure@@Base+0xb4c>
    e73c:	orr	w19, w0, w19
    e740:	tbnz	w28, #2, e74c <argp_help@@Base+0x658>
    e744:	tbnz	w28, #3, e780 <argp_help@@Base+0x68c>
    e748:	b	f000 <argp_help@@Base+0xf0c>
    e74c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    e750:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e754:	add	x0, x0, #0xcb7
    e758:	add	x1, x1, #0xd16
    e75c:	mov	w2, #0x5                   	// #5
    e760:	bl	adc0 <dcgettext@plt>
    e764:	ldur	x2, [x29, #-88]
    e768:	mov	x1, x0
    e76c:	mov	x0, x23
    e770:	mov	x3, x2
    e774:	bl	a970 <argp_fmtstream_printf@plt>
    e778:	mov	w19, #0x1                   	// #1
    e77c:	tbz	w28, #3, f000 <argp_help@@Base+0xf0c>
    e780:	ldr	w27, [x24, #8]
    e784:	cbz	w27, f000 <argp_help@@Base+0xf0c>
    e788:	cbz	w19, e7dc <argp_help@@Base+0x6e8>
    e78c:	ldp	x8, x9, [x23, #56]
    e790:	cmp	x8, x9
    e794:	b.cc	e7ac <argp_help@@Base+0x6b8>  // b.lo, b.ul, b.last
    e798:	mov	w1, #0x1                   	// #1
    e79c:	mov	x0, x23
    e7a0:	bl	ada0 <_argp_fmtstream_ensure@plt>
    e7a4:	cbz	w0, e7bc <argp_help@@Base+0x6c8>
    e7a8:	ldr	x8, [x23, #56]
    e7ac:	add	x9, x8, #0x1
    e7b0:	mov	w10, #0xa                   	// #10
    e7b4:	str	x9, [x23, #56]
    e7b8:	strb	w10, [x8]
    e7bc:	ldr	w27, [x24, #8]
    e7c0:	stp	xzr, xzr, [x29, #-64]
    e7c4:	cbnz	w27, e7e0 <argp_help@@Base+0x6ec>
    e7c8:	b	effc <argp_help@@Base+0xf08>
    e7cc:	ldur	x26, [x29, #-72]
    e7d0:	mov	w19, wzr
    e7d4:	tbnz	w28, #4, e720 <argp_help@@Base+0x62c>
    e7d8:	b	e740 <argp_help@@Base+0x64c>
    e7dc:	stp	xzr, xzr, [x29, #-64]
    e7e0:	stp	x24, x21, [x29, #-128]
    e7e4:	ldr	x24, [x24]
    e7e8:	add	x8, x23, #0x38
    e7ec:	stur	w28, [x29, #-76]
    e7f0:	stur	x8, [x29, #-88]
    e7f4:	ldp	x9, x8, [x23, #48]
    e7f8:	ldr	x10, [x23, #32]
    e7fc:	ldr	x28, [x24]
    e800:	ldr	x19, [x24, #16]
    e804:	sub	x8, x8, x9
    e808:	cmp	x8, x10
    e80c:	b.ls	e818 <argp_help@@Base+0x724>  // b.plast
    e810:	mov	x0, x23
    e814:	bl	a570 <_argp_fmtstream_update@plt>
    e818:	ldr	x8, [x23, #8]
    e81c:	str	xzr, [x23, #8]
    e820:	ldr	x11, [x23, #24]
    e824:	stp	x24, x23, [x29, #-48]
    e828:	stur	x8, [x29, #-112]
    e82c:	sub	x8, x29, #0x40
    e830:	stur	x8, [x29, #-32]
    e834:	mov	w8, #0x1                   	// #1
    e838:	stur	w8, [x29, #-24]
    e83c:	stur	x26, [x29, #-16]
    e840:	ldrb	w8, [x28, #24]
    e844:	stur	x11, [x29, #-104]
    e848:	tbnz	w8, #3, e874 <argp_help@@Base+0x780>
    e84c:	ldr	w8, [x24, #8]
    e850:	cbz	w8, e874 <argp_help@@Base+0x780>
    e854:	mov	x9, x28
    e858:	ldr	x10, [x9]
    e85c:	cbz	x10, e868 <argp_help@@Base+0x774>
    e860:	ldrb	w10, [x9, #24]
    e864:	tbz	w10, #1, ebe4 <argp_help@@Base+0xaf0>
    e868:	subs	w8, w8, #0x1
    e86c:	add	x9, x9, #0x30
    e870:	b.ne	e858 <argp_help@@Base+0x764>  // b.any
    e874:	mov	w20, wzr
    e878:	ldp	x9, x8, [x23, #48]
    e87c:	ldr	x10, [x23, #32]
    e880:	adrp	x11, 3d000 <base_len@@Base+0x2a06c>
    e884:	ldrsw	x21, [x11, #1720]
    e888:	sub	x8, x8, x9
    e88c:	cmp	x8, x10
    e890:	b.ls	e89c <argp_help@@Base+0x7a8>  // b.plast
    e894:	mov	x0, x23
    e898:	bl	a570 <_argp_fmtstream_update@plt>
    e89c:	str	x21, [x23, #24]
    e8a0:	ldr	w22, [x24, #8]
    e8a4:	cbz	w22, e9cc <argp_help@@Base+0x8d8>
    e8a8:	add	x25, x28, #0x18
    e8ac:	ldr	w26, [x25]
    e8b0:	tbnz	w26, #3, e9c0 <argp_help@@Base+0x8cc>
    e8b4:	ldur	w21, [x25, #-16]
    e8b8:	sub	w8, w21, #0x1
    e8bc:	cmp	w8, #0xfe
    e8c0:	b.hi	e9c0 <argp_help@@Base+0x8cc>  // b.pmore
    e8c4:	bl	aa30 <__ctype_b_loc@plt>
    e8c8:	ldr	x8, [x0]
    e8cc:	ldrh	w8, [x8, x21, lsl #1]
    e8d0:	tbz	w8, #14, e9c0 <argp_help@@Base+0x8cc>
    e8d4:	ldrb	w8, [x19]
    e8d8:	cmp	w21, w8
    e8dc:	b.ne	e9c0 <argp_help@@Base+0x8cc>  // b.any
    e8e0:	tbnz	w26, #1, e9bc <argp_help@@Base+0x8c8>
    e8e4:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    e8e8:	ldr	w0, [x8, #1720]
    e8ec:	sub	x1, x29, #0x30
    e8f0:	bl	10844 <argp_failure@@Base+0x1584>
    e8f4:	ldp	x8, x9, [x23, #56]
    e8f8:	cmp	x8, x9
    e8fc:	b.cc	e918 <argp_help@@Base+0x824>  // b.lo, b.ul, b.last
    e900:	mov	w1, #0x1                   	// #1
    e904:	mov	x0, x23
    e908:	bl	ada0 <_argp_fmtstream_ensure@plt>
    e90c:	cbz	w0, e92c <argp_help@@Base+0x838>
    e910:	ldur	x8, [x29, #-88]
    e914:	ldr	x8, [x8]
    e918:	ldur	x10, [x29, #-88]
    e91c:	add	x9, x8, #0x1
    e920:	str	x9, [x10]
    e924:	mov	w9, #0x2d                  	// #45
    e928:	strb	w9, [x8]
    e92c:	ldp	x8, x9, [x23, #56]
    e930:	ldrb	w26, [x19]
    e934:	cmp	x8, x9
    e938:	b.cc	e954 <argp_help@@Base+0x860>  // b.lo, b.ul, b.last
    e93c:	mov	w1, #0x1                   	// #1
    e940:	mov	x0, x23
    e944:	bl	ada0 <_argp_fmtstream_ensure@plt>
    e948:	cbz	w0, e964 <argp_help@@Base+0x870>
    e94c:	ldur	x8, [x29, #-88]
    e950:	ldr	x8, [x8]
    e954:	ldur	x10, [x29, #-88]
    e958:	add	x9, x8, #0x1
    e95c:	str	x9, [x10]
    e960:	strb	w26, [x8]
    e964:	cbz	w20, e988 <argp_help@@Base+0x894>
    e968:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    e96c:	ldr	w8, [x8, #1712]
    e970:	cbnz	w8, e988 <argp_help@@Base+0x894>
    e974:	ldr	x8, [x28, #16]
    e978:	cbz	x8, e9bc <argp_help@@Base+0x8c8>
    e97c:	mov	w8, #0x1                   	// #1
    e980:	stur	w8, [x29, #-52]
    e984:	b	e9bc <argp_help@@Base+0x8c8>
    e988:	ldur	x8, [x29, #-72]
    e98c:	cbz	x8, e99c <argp_help@@Base+0x8a8>
    e990:	ldr	x8, [x24, #40]
    e994:	ldr	x3, [x8, #48]
    e998:	b	e9a0 <argp_help@@Base+0x8ac>
    e99c:	mov	x3, xzr
    e9a0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    e9a4:	adrp	x2, 28000 <vasnprintf@@Base+0x944>
    e9a8:	mov	x0, x28
    e9ac:	add	x1, x1, #0xcd7
    e9b0:	add	x2, x2, #0xf94
    e9b4:	mov	x4, x23
    e9b8:	bl	109a0 <argp_failure@@Base+0x16e0>
    e9bc:	add	x19, x19, #0x1
    e9c0:	subs	w22, w22, #0x1
    e9c4:	add	x25, x25, #0x30
    e9c8:	b.ne	e8ac <argp_help@@Base+0x7b8>  // b.any
    e9cc:	ldrb	w8, [x28, #24]
    e9d0:	tbnz	w8, #3, ea80 <argp_help@@Base+0x98c>
    e9d4:	ldp	x9, x8, [x23, #48]
    e9d8:	ldr	x10, [x23, #32]
    e9dc:	adrp	x11, 3d000 <base_len@@Base+0x2a06c>
    e9e0:	ldrsw	x19, [x11, #1724]
    e9e4:	ldur	x26, [x29, #-72]
    e9e8:	sub	x8, x8, x9
    e9ec:	cmp	x8, x10
    e9f0:	b.ls	e9fc <argp_help@@Base+0x908>  // b.plast
    e9f4:	mov	x0, x23
    e9f8:	bl	a570 <_argp_fmtstream_update@plt>
    e9fc:	str	x19, [x23, #24]
    ea00:	ldr	w19, [x24, #8]
    ea04:	cbz	w19, eb58 <argp_help@@Base+0xa64>
    ea08:	mov	x20, x28
    ea0c:	ldr	x8, [x20]
    ea10:	cbz	x8, ea70 <argp_help@@Base+0x97c>
    ea14:	ldrb	w8, [x20, #24]
    ea18:	tbnz	w8, #1, ea70 <argp_help@@Base+0x97c>
    ea1c:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    ea20:	ldr	w0, [x8, #1724]
    ea24:	sub	x1, x29, #0x30
    ea28:	bl	10844 <argp_failure@@Base+0x1584>
    ea2c:	ldr	x2, [x20]
    ea30:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    ea34:	mov	x0, x23
    ea38:	add	x1, x1, #0xf99
    ea3c:	bl	a970 <argp_fmtstream_printf@plt>
    ea40:	cbz	x26, ea50 <argp_help@@Base+0x95c>
    ea44:	ldr	x8, [x24, #40]
    ea48:	ldr	x3, [x8, #48]
    ea4c:	b	ea54 <argp_help@@Base+0x960>
    ea50:	mov	x3, xzr
    ea54:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    ea58:	adrp	x2, 28000 <vasnprintf@@Base+0x944>
    ea5c:	mov	x0, x28
    ea60:	add	x1, x1, #0xbee
    ea64:	add	x2, x2, #0xf9e
    ea68:	mov	x4, x23
    ea6c:	bl	109a0 <argp_failure@@Base+0x16e0>
    ea70:	subs	w19, w19, #0x1
    ea74:	add	x20, x20, #0x30
    ea78:	b.ne	ea0c <argp_help@@Base+0x918>  // b.any
    ea7c:	b	eb58 <argp_help@@Base+0xa64>
    ea80:	ldp	x9, x8, [x23, #48]
    ea84:	ldr	x10, [x23, #32]
    ea88:	adrp	x11, 3d000 <base_len@@Base+0x2a06c>
    ea8c:	ldrsw	x19, [x11, #1728]
    ea90:	ldur	x26, [x29, #-72]
    ea94:	sub	x8, x8, x9
    ea98:	cmp	x8, x10
    ea9c:	b.ls	eaa8 <argp_help@@Base+0x9b4>  // b.plast
    eaa0:	mov	x0, x23
    eaa4:	bl	a570 <_argp_fmtstream_update@plt>
    eaa8:	str	x19, [x23, #24]
    eaac:	ldr	w20, [x24, #8]
    eab0:	cbz	w20, eb58 <argp_help@@Base+0xa64>
    eab4:	mov	x25, x28
    eab8:	ldr	x8, [x25]
    eabc:	cbz	x8, eb4c <argp_help@@Base+0xa58>
    eac0:	ldrb	w8, [x25, #24]
    eac4:	tbnz	w8, #1, eb4c <argp_help@@Base+0xa58>
    eac8:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    eacc:	ldr	w0, [x8, #1728]
    ead0:	sub	x1, x29, #0x30
    ead4:	bl	10844 <argp_failure@@Base+0x1584>
    ead8:	cbz	x26, eae8 <argp_help@@Base+0x9f4>
    eadc:	ldr	x8, [x24, #40]
    eae0:	ldr	x0, [x8, #48]
    eae4:	b	eaec <argp_help@@Base+0x9f8>
    eae8:	mov	x0, xzr
    eaec:	ldr	x1, [x25]
    eaf0:	mov	w2, #0x5                   	// #5
    eaf4:	bl	adc0 <dcgettext@plt>
    eaf8:	mov	x19, x0
    eafc:	bl	a370 <strlen@plt>
    eb00:	cbz	x0, eb4c <argp_help@@Base+0xa58>
    eb04:	mov	x22, x0
    eb08:	ldp	x0, x8, [x23, #56]
    eb0c:	add	x9, x0, x22
    eb10:	cmp	x9, x8
    eb14:	b.ls	eb30 <argp_help@@Base+0xa3c>  // b.plast
    eb18:	mov	x0, x23
    eb1c:	mov	x1, x22
    eb20:	bl	ada0 <_argp_fmtstream_ensure@plt>
    eb24:	cbz	w0, eb4c <argp_help@@Base+0xa58>
    eb28:	ldur	x8, [x29, #-88]
    eb2c:	ldr	x0, [x8]
    eb30:	mov	x1, x19
    eb34:	mov	x2, x22
    eb38:	bl	a2f0 <memcpy@plt>
    eb3c:	ldur	x9, [x29, #-88]
    eb40:	ldr	x8, [x9]
    eb44:	add	x8, x8, x22
    eb48:	str	x8, [x9]
    eb4c:	subs	w20, w20, #0x1
    eb50:	add	x25, x25, #0x30
    eb54:	b.ne	eab8 <argp_help@@Base+0x9c4>  // b.any
    eb58:	ldp	x9, x8, [x23, #48]
    eb5c:	ldr	x10, [x23, #32]
    eb60:	sub	x8, x8, x9
    eb64:	cmp	x8, x10
    eb68:	b.ls	eb74 <argp_help@@Base+0xa80>  // b.plast
    eb6c:	mov	x0, x23
    eb70:	bl	a570 <_argp_fmtstream_update@plt>
    eb74:	str	xzr, [x23, #8]
    eb78:	ldur	w8, [x29, #-24]
    eb7c:	cbz	w8, ebc4 <argp_help@@Base+0xad0>
    eb80:	ldrb	w8, [x28, #24]
    eb84:	tbnz	w8, #3, eba8 <argp_help@@Base+0xab4>
    eb88:	ldr	w19, [x28, #8]
    eb8c:	sub	w8, w19, #0x1
    eb90:	cmp	w8, #0xfe
    eb94:	b.hi	eba8 <argp_help@@Base+0xab4>  // b.pmore
    eb98:	bl	aa30 <__ctype_b_loc@plt>
    eb9c:	ldr	x8, [x0]
    eba0:	ldrh	w8, [x8, x19, lsl #1]
    eba4:	tbnz	w8, #14, ee3c <argp_help@@Base+0xd48>
    eba8:	ldr	x8, [x28]
    ebac:	cbnz	x8, ee3c <argp_help@@Base+0xd48>
    ebb0:	ldr	x0, [x28, #32]
    ebb4:	ldr	x1, [x24, #40]
    ebb8:	sub	x2, x29, #0x30
    ebbc:	bl	10a08 <argp_failure@@Base+0x1748>
    ebc0:	b	ee38 <argp_help@@Base+0xd44>
    ebc4:	ldr	x1, [x28, #32]
    ebc8:	cbz	x1, ebdc <argp_help@@Base+0xae8>
    ebcc:	cbz	x26, ebec <argp_help@@Base+0xaf8>
    ebd0:	ldr	x8, [x24, #40]
    ebd4:	ldr	x0, [x8, #48]
    ebd8:	b	ebf0 <argp_help@@Base+0xafc>
    ebdc:	mov	x22, xzr
    ebe0:	b	ebfc <argp_help@@Base+0xb08>
    ebe4:	mov	w20, #0x1                   	// #1
    ebe8:	b	e878 <argp_help@@Base+0x784>
    ebec:	mov	x0, xzr
    ebf0:	mov	w2, #0x5                   	// #5
    ebf4:	bl	adc0 <dcgettext@plt>
    ebf8:	mov	x22, x0
    ebfc:	ldr	x25, [x24, #40]
    ec00:	mov	x19, x22
    ec04:	cbz	x25, ec3c <argp_help@@Base+0xb48>
    ec08:	ldr	x8, [x25, #40]
    ec0c:	mov	x19, x22
    ec10:	cbz	x8, ec3c <argp_help@@Base+0xb48>
    ec14:	ldr	w19, [x28, #8]
    ec18:	mov	x0, x25
    ec1c:	mov	x1, x26
    ec20:	bl	ac80 <_argp_input@plt>
    ec24:	ldr	x8, [x25, #40]
    ec28:	mov	x2, x0
    ec2c:	mov	w0, w19
    ec30:	mov	x1, x22
    ec34:	blr	x8
    ec38:	mov	x19, x0
    ec3c:	cbz	x19, eddc <argp_help@@Base+0xce8>
    ec40:	ldrb	w8, [x19]
    ec44:	cbz	w8, edcc <argp_help@@Base+0xcd8>
    ec48:	ldp	x10, x9, [x23, #48]
    ec4c:	ldr	x8, [x23, #32]
    ec50:	sub	x9, x9, x10
    ec54:	cmp	x9, x8
    ec58:	b.ls	ec70 <argp_help@@Base+0xb7c>  // b.plast
    ec5c:	mov	x0, x23
    ec60:	bl	a570 <_argp_fmtstream_update@plt>
    ec64:	ldp	x10, x9, [x23, #48]
    ec68:	ldr	x8, [x23, #32]
    ec6c:	sub	x9, x9, x10
    ec70:	adrp	x11, 3d000 <base_len@@Base+0x2a06c>
    ec74:	ldr	x10, [x23, #40]
    ec78:	ldr	w1, [x11, #1732]
    ec7c:	cmp	x10, #0x0
    ec80:	sxtw	x28, w1
    ec84:	csel	w20, w10, wzr, gt
    ec88:	cmp	x9, x8
    ec8c:	mov	x25, x28
    ec90:	b.ls	ecb4 <argp_help@@Base+0xbc0>  // b.plast
    ec94:	mov	x0, x23
    ec98:	bl	a570 <_argp_fmtstream_update@plt>
    ec9c:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    eca0:	ldr	w1, [x8, #1732]
    eca4:	ldp	x10, x9, [x23, #48]
    eca8:	ldr	x8, [x23, #32]
    ecac:	sxtw	x25, w1
    ecb0:	sub	x9, x9, x10
    ecb4:	cmp	x9, x8
    ecb8:	str	x28, [x23, #8]
    ecbc:	b.ls	ecd0 <argp_help@@Base+0xbdc>  // b.plast
    ecc0:	mov	x0, x23
    ecc4:	bl	a570 <_argp_fmtstream_update@plt>
    ecc8:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    eccc:	ldr	w1, [x8, #1732]
    ecd0:	add	w8, w1, #0x3
    ecd4:	cmp	w8, w20
    ecd8:	str	x25, [x23, #24]
    ecdc:	b.cs	ed1c <argp_help@@Base+0xc28>  // b.hs, b.nlast
    ece0:	ldp	x8, x9, [x23, #56]
    ece4:	cmp	x8, x9
    ece8:	b.cc	ed04 <argp_help@@Base+0xc10>  // b.lo, b.ul, b.last
    ecec:	mov	w1, #0x1                   	// #1
    ecf0:	mov	x0, x23
    ecf4:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ecf8:	cbz	w0, ed78 <argp_help@@Base+0xc84>
    ecfc:	ldur	x8, [x29, #-88]
    ed00:	ldr	x8, [x8]
    ed04:	ldur	x10, [x29, #-88]
    ed08:	add	x9, x8, #0x1
    ed0c:	str	x9, [x10]
    ed10:	mov	w9, #0xa                   	// #10
    ed14:	strb	w9, [x8]
    ed18:	b	ed78 <argp_help@@Base+0xc84>
    ed1c:	cmp	w1, w20
    ed20:	b.ls	ed30 <argp_help@@Base+0xc3c>  // b.plast
    ed24:	mov	x0, x23
    ed28:	bl	10c34 <argp_failure@@Base+0x1974>
    ed2c:	b	ed78 <argp_help@@Base+0xc84>
    ed30:	ldp	x8, x9, [x23, #56]
    ed34:	add	x10, x8, #0x3
    ed38:	cmp	x10, x9
    ed3c:	b.ls	ed58 <argp_help@@Base+0xc64>  // b.plast
    ed40:	mov	w1, #0x3                   	// #3
    ed44:	mov	x0, x23
    ed48:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ed4c:	cbz	w0, ed78 <argp_help@@Base+0xc84>
    ed50:	ldur	x8, [x29, #-88]
    ed54:	ldr	x8, [x8]
    ed58:	mov	w9, #0x20                  	// #32
    ed5c:	strb	w9, [x8, #2]
    ed60:	mov	w9, #0x2020                	// #8224
    ed64:	strh	w9, [x8]
    ed68:	ldur	x9, [x29, #-88]
    ed6c:	ldr	x8, [x9]
    ed70:	add	x8, x8, #0x3
    ed74:	str	x8, [x9]
    ed78:	mov	x0, x19
    ed7c:	bl	a370 <strlen@plt>
    ed80:	cbz	x0, edcc <argp_help@@Base+0xcd8>
    ed84:	mov	x28, x0
    ed88:	ldp	x0, x8, [x23, #56]
    ed8c:	add	x9, x0, x28
    ed90:	cmp	x9, x8
    ed94:	b.ls	edb0 <argp_help@@Base+0xcbc>  // b.plast
    ed98:	mov	x0, x23
    ed9c:	mov	x1, x28
    eda0:	bl	ada0 <_argp_fmtstream_ensure@plt>
    eda4:	cbz	w0, edcc <argp_help@@Base+0xcd8>
    eda8:	ldur	x8, [x29, #-88]
    edac:	ldr	x0, [x8]
    edb0:	mov	x1, x19
    edb4:	mov	x2, x28
    edb8:	bl	a2f0 <memcpy@plt>
    edbc:	ldur	x9, [x29, #-88]
    edc0:	ldr	x8, [x9]
    edc4:	add	x8, x8, x28
    edc8:	str	x8, [x9]
    edcc:	cmp	x19, x22
    edd0:	b.eq	eddc <argp_help@@Base+0xce8>  // b.none
    edd4:	mov	x0, x19
    edd8:	bl	aaa0 <free@plt>
    eddc:	ldp	x9, x8, [x23, #48]
    ede0:	ldr	x10, [x23, #32]
    ede4:	sub	x9, x8, x9
    ede8:	cmp	x9, x10
    edec:	b.ls	edfc <argp_help@@Base+0xd08>  // b.plast
    edf0:	mov	x0, x23
    edf4:	bl	a570 <_argp_fmtstream_update@plt>
    edf8:	ldr	x8, [x23, #56]
    edfc:	ldr	x9, [x23, #64]
    ee00:	str	xzr, [x23, #8]
    ee04:	cmp	x8, x9
    ee08:	b.cc	ee24 <argp_help@@Base+0xd30>  // b.lo, b.ul, b.last
    ee0c:	mov	w1, #0x1                   	// #1
    ee10:	mov	x0, x23
    ee14:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ee18:	cbz	w0, ee38 <argp_help@@Base+0xd44>
    ee1c:	ldur	x8, [x29, #-88]
    ee20:	ldr	x8, [x8]
    ee24:	ldur	x10, [x29, #-88]
    ee28:	add	x9, x8, #0x1
    ee2c:	str	x9, [x10]
    ee30:	mov	w9, #0xa                   	// #10
    ee34:	strb	w9, [x8]
    ee38:	stur	x24, [x29, #-64]
    ee3c:	ldp	x10, x9, [x23, #48]
    ee40:	ldr	x8, [x23, #32]
    ee44:	sub	x9, x9, x10
    ee48:	ldur	x10, [x29, #-112]
    ee4c:	cmp	x9, x8
    ee50:	sxtw	x19, w10
    ee54:	b.ls	ee6c <argp_help@@Base+0xd78>  // b.plast
    ee58:	mov	x0, x23
    ee5c:	bl	a570 <_argp_fmtstream_update@plt>
    ee60:	ldp	x10, x9, [x23, #48]
    ee64:	ldr	x8, [x23, #32]
    ee68:	sub	x9, x9, x10
    ee6c:	ldur	x10, [x29, #-104]
    ee70:	str	x19, [x23, #8]
    ee74:	cmp	x9, x8
    ee78:	sxtw	x19, w10
    ee7c:	b.ls	ee88 <argp_help@@Base+0xd94>  // b.plast
    ee80:	mov	x0, x23
    ee84:	bl	a570 <_argp_fmtstream_update@plt>
    ee88:	subs	w27, w27, #0x1
    ee8c:	add	x24, x24, #0x38
    ee90:	str	x19, [x23, #24]
    ee94:	b.ne	e7f4 <argp_help@@Base+0x700>  // b.any
    ee98:	ldur	w8, [x29, #-52]
    ee9c:	ldp	x24, x21, [x29, #-128]
    eea0:	ldur	w28, [x29, #-76]
    eea4:	cbz	w8, effc <argp_help@@Base+0xf08>
    eea8:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
    eeac:	ldr	w8, [x8, #1716]
    eeb0:	cbz	w8, effc <argp_help@@Base+0xf08>
    eeb4:	adrp	x8, 28000 <vasnprintf@@Base+0x944>
    eeb8:	add	x8, x8, #0xcb7
    eebc:	cmp	x26, #0x0
    eec0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    eec4:	csel	x0, xzr, x8, eq  // eq = none
    eec8:	add	x1, x1, #0xf20
    eecc:	mov	w2, #0x5                   	// #5
    eed0:	bl	adc0 <dcgettext@plt>
    eed4:	mov	x19, x0
    eed8:	cbz	x26, ef18 <argp_help@@Base+0xe24>
    eedc:	ldr	x22, [x26]
    eee0:	cbz	x22, ef18 <argp_help@@Base+0xe24>
    eee4:	ldr	x8, [x22, #40]
    eee8:	cbz	x8, ef18 <argp_help@@Base+0xe24>
    eeec:	mov	x0, x22
    eef0:	mov	x1, x26
    eef4:	bl	ac80 <_argp_input@plt>
    eef8:	ldr	x8, [x22, #40]
    eefc:	mov	x2, x0
    ef00:	mov	w0, #0x5                   	// #5
    ef04:	movk	w0, #0x200, lsl #16
    ef08:	mov	x1, x19
    ef0c:	blr	x8
    ef10:	mov	x22, x0
    ef14:	b	ef1c <argp_help@@Base+0xe28>
    ef18:	mov	x22, x19
    ef1c:	cbz	x22, effc <argp_help@@Base+0xf08>
    ef20:	ldrb	w8, [x22]
    ef24:	cbz	w8, efec <argp_help@@Base+0xef8>
    ef28:	ldp	x8, x9, [x23, #56]
    ef2c:	cmp	x8, x9
    ef30:	b.cc	ef4c <argp_help@@Base+0xe58>  // b.lo, b.ul, b.last
    ef34:	mov	w1, #0x1                   	// #1
    ef38:	mov	x0, x23
    ef3c:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ef40:	cbz	w0, ef60 <argp_help@@Base+0xe6c>
    ef44:	ldur	x8, [x29, #-88]
    ef48:	ldr	x8, [x8]
    ef4c:	ldur	x11, [x29, #-88]
    ef50:	add	x9, x8, #0x1
    ef54:	mov	w10, #0xa                   	// #10
    ef58:	str	x9, [x11]
    ef5c:	strb	w10, [x8]
    ef60:	mov	x0, x22
    ef64:	bl	a370 <strlen@plt>
    ef68:	cbz	x0, efb4 <argp_help@@Base+0xec0>
    ef6c:	mov	x25, x0
    ef70:	ldp	x0, x8, [x23, #56]
    ef74:	add	x9, x0, x25
    ef78:	cmp	x9, x8
    ef7c:	b.ls	ef98 <argp_help@@Base+0xea4>  // b.plast
    ef80:	mov	x0, x23
    ef84:	mov	x1, x25
    ef88:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ef8c:	cbz	w0, efb4 <argp_help@@Base+0xec0>
    ef90:	ldur	x8, [x29, #-88]
    ef94:	ldr	x0, [x8]
    ef98:	mov	x1, x22
    ef9c:	mov	x2, x25
    efa0:	bl	a2f0 <memcpy@plt>
    efa4:	ldur	x9, [x29, #-88]
    efa8:	ldr	x8, [x9]
    efac:	add	x8, x8, x25
    efb0:	str	x8, [x9]
    efb4:	ldp	x8, x9, [x23, #56]
    efb8:	cmp	x8, x9
    efbc:	b.cc	efd8 <argp_help@@Base+0xee4>  // b.lo, b.ul, b.last
    efc0:	mov	w1, #0x1                   	// #1
    efc4:	mov	x0, x23
    efc8:	bl	ada0 <_argp_fmtstream_ensure@plt>
    efcc:	cbz	w0, efec <argp_help@@Base+0xef8>
    efd0:	ldur	x8, [x29, #-88]
    efd4:	ldr	x8, [x8]
    efd8:	ldur	x11, [x29, #-88]
    efdc:	add	x9, x8, #0x1
    efe0:	mov	w10, #0xa                   	// #10
    efe4:	str	x9, [x11]
    efe8:	strb	w10, [x8]
    efec:	cmp	x22, x19
    eff0:	b.eq	effc <argp_help@@Base+0xf08>  // b.none
    eff4:	mov	x0, x22
    eff8:	bl	aaa0 <free@plt>
    effc:	mov	w19, #0x1                   	// #1
    f000:	tbz	w28, #5, f024 <argp_help@@Base+0xf30>
    f004:	ldur	x0, [x29, #-96]
    f008:	mov	w2, #0x1                   	// #1
    f00c:	mov	x1, x26
    f010:	mov	w3, w19
    f014:	mov	w4, wzr
    f018:	mov	x5, x23
    f01c:	bl	fe0c <argp_failure@@Base+0xb4c>
    f020:	orr	w19, w0, w19
    f024:	tbz	w28, #6, f094 <argp_help@@Base+0xfa0>
    f028:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
    f02c:	ldr	x20, [x20, #3968]
    f030:	ldr	x8, [x20]
    f034:	cbz	x8, f094 <argp_help@@Base+0xfa0>
    f038:	cbz	w19, f06c <argp_help@@Base+0xf78>
    f03c:	ldp	x8, x9, [x23, #56]
    f040:	cmp	x8, x9
    f044:	b.cc	f05c <argp_help@@Base+0xf68>  // b.lo, b.ul, b.last
    f048:	mov	w1, #0x1                   	// #1
    f04c:	mov	x0, x23
    f050:	bl	ada0 <_argp_fmtstream_ensure@plt>
    f054:	cbz	w0, f06c <argp_help@@Base+0xf78>
    f058:	ldr	x8, [x23, #56]
    f05c:	add	x9, x8, #0x1
    f060:	mov	w10, #0xa                   	// #10
    f064:	str	x9, [x23, #56]
    f068:	strb	w10, [x8]
    f06c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    f070:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    f074:	add	x0, x0, #0xcb7
    f078:	add	x1, x1, #0xd4d
    f07c:	mov	w2, #0x5                   	// #5
    f080:	bl	adc0 <dcgettext@plt>
    f084:	ldr	x2, [x20]
    f088:	mov	x1, x0
    f08c:	mov	x0, x23
    f090:	bl	a970 <argp_fmtstream_printf@plt>
    f094:	mov	x0, x21
    f098:	bl	a6a0 <funlockfile@plt>
    f09c:	cbz	x24, f0a8 <argp_help@@Base+0xfb4>
    f0a0:	mov	x0, x24
    f0a4:	bl	101f8 <argp_failure@@Base+0xf38>
    f0a8:	mov	x0, x23
    f0ac:	bl	adf0 <argp_fmtstream_free@plt>
    f0b0:	mov	sp, x29
    f0b4:	ldp	x20, x19, [sp, #80]
    f0b8:	ldp	x22, x21, [sp, #64]
    f0bc:	ldp	x24, x23, [sp, #48]
    f0c0:	ldp	x26, x25, [sp, #32]
    f0c4:	ldp	x28, x27, [sp, #16]
    f0c8:	ldp	x29, x30, [sp], #96
    f0cc:	ret
    f0d0:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    f0d4:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    f0d8:	add	x0, x0, #0xcb7
    f0dc:	add	x1, x1, #0xde1
    f0e0:	mov	w2, #0x5                   	// #5
    f0e4:	bl	adc0 <dcgettext@plt>
    f0e8:	adrp	x4, 28000 <vasnprintf@@Base+0x944>
    f0ec:	mov	x3, x0
    f0f0:	add	x4, x4, #0xe15
    f0f4:	mov	x0, x20
    f0f8:	mov	w1, wzr
    f0fc:	mov	w2, wzr
    f100:	mov	x5, x19
    f104:	bl	a6d0 <argp_failure@plt>
    f108:	b	e458 <argp_help@@Base+0x364>

000000000000f10c <argp_state_help@@Base>:
    f10c:	stp	x29, x30, [sp, #-32]!
    f110:	stp	x20, x19, [sp, #16]
    f114:	mov	w19, w2
    f118:	mov	x2, x1
    f11c:	mov	x29, sp
    f120:	cbz	x0, f160 <argp_state_help@@Base+0x54>
    f124:	cbz	x2, f188 <argp_state_help@@Base+0x7c>
    f128:	ldr	w8, [x0, #28]
    f12c:	mov	x20, x0
    f130:	tbnz	w8, #1, f188 <argp_state_help@@Base+0x7c>
    f134:	ldr	x0, [x20]
    f138:	ldr	x4, [x20, #64]
    f13c:	lsl	w8, w8, #1
    f140:	and	w8, w8, #0x80
    f144:	orr	w19, w8, w19
    f148:	mov	x1, x20
    f14c:	mov	w3, w19
    f150:	bl	e108 <argp_help@@Base+0x14>
    f154:	ldrb	w8, [x20, #28]
    f158:	tbz	w8, #5, f180 <argp_state_help@@Base+0x74>
    f15c:	b	f188 <argp_state_help@@Base+0x7c>
    f160:	cbz	x2, f188 <argp_state_help@@Base+0x7c>
    f164:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    f168:	ldr	x8, [x8, #4008]
    f16c:	mov	x0, xzr
    f170:	mov	x1, xzr
    f174:	mov	w3, w19
    f178:	ldr	x4, [x8]
    f17c:	bl	e108 <argp_help@@Base+0x14>
    f180:	tbnz	w19, #8, f194 <argp_state_help@@Base+0x88>
    f184:	tbnz	w19, #9, f1a4 <argp_state_help@@Base+0x98>
    f188:	ldp	x20, x19, [sp, #16]
    f18c:	ldp	x29, x30, [sp], #32
    f190:	ret
    f194:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    f198:	ldr	x8, [x8, #4048]
    f19c:	ldr	w0, [x8]
    f1a0:	bl	a390 <exit@plt>
    f1a4:	mov	w0, wzr
    f1a8:	bl	a390 <exit@plt>

000000000000f1ac <argp_error@@Base>:
    f1ac:	sub	sp, sp, #0x120
    f1b0:	stp	x29, x30, [sp, #240]
    f1b4:	stp	x20, x19, [sp, #272]
    f1b8:	add	x29, sp, #0xf0
    f1bc:	mov	x20, x1
    f1c0:	mov	x19, x0
    f1c4:	stp	x28, x21, [sp, #256]
    f1c8:	stp	x2, x3, [x29, #-112]
    f1cc:	stp	x4, x5, [x29, #-96]
    f1d0:	stp	x6, x7, [x29, #-80]
    f1d4:	stp	q1, q2, [sp, #16]
    f1d8:	stp	q3, q4, [sp, #48]
    f1dc:	str	q0, [sp]
    f1e0:	stp	q5, q6, [sp, #80]
    f1e4:	str	q7, [sp, #112]
    f1e8:	cbz	x0, f1fc <argp_error@@Base+0x50>
    f1ec:	ldrb	w8, [x19, #28]
    f1f0:	tbnz	w8, #1, f2ac <argp_error@@Base+0x100>
    f1f4:	add	x8, x19, #0x48
    f1f8:	b	f204 <argp_error@@Base+0x58>
    f1fc:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    f200:	ldr	x8, [x8, #3816]
    f204:	ldr	x21, [x8]
    f208:	cbz	x21, f2ac <argp_error@@Base+0x100>
    f20c:	mov	x0, x21
    f210:	bl	a3e0 <flockfile@plt>
    f214:	adrp	x13, 3c000 <vasnprintf@@Base+0x14944>
    f218:	ldr	x13, [x13, #4008]
    f21c:	mov	x8, #0xffffffffffffffd0    	// #-48
    f220:	mov	x9, sp
    f224:	sub	x10, x29, #0x70
    f228:	movk	x8, #0xff80, lsl #32
    f22c:	add	x11, x29, #0x30
    f230:	add	x12, x19, #0x40
    f234:	cmp	x19, #0x0
    f238:	add	x9, x9, #0x80
    f23c:	add	x10, x10, #0x30
    f240:	stp	x9, x8, [x29, #-16]
    f244:	stp	x11, x10, [x29, #-32]
    f248:	csel	x8, x12, x13, ne  // ne = any
    f24c:	ldr	x0, [x8]
    f250:	mov	x1, x21
    f254:	bl	ae20 <fputs_unlocked@plt>
    f258:	mov	w0, #0x3a                  	// #58
    f25c:	mov	x1, x21
    f260:	bl	a5c0 <putc_unlocked@plt>
    f264:	mov	w0, #0x20                  	// #32
    f268:	mov	x1, x21
    f26c:	bl	a5c0 <putc_unlocked@plt>
    f270:	ldp	q0, q1, [x29, #-32]
    f274:	sub	x2, x29, #0x40
    f278:	mov	x0, x21
    f27c:	mov	x1, x20
    f280:	stp	q0, q1, [x29, #-64]
    f284:	bl	ae90 <vfprintf@plt>
    f288:	mov	w0, #0xa                   	// #10
    f28c:	mov	x1, x21
    f290:	bl	a5c0 <putc_unlocked@plt>
    f294:	mov	w2, #0x104                 	// #260
    f298:	mov	x0, x19
    f29c:	mov	x1, x21
    f2a0:	bl	adb0 <argp_state_help@plt>
    f2a4:	mov	x0, x21
    f2a8:	bl	a6a0 <funlockfile@plt>
    f2ac:	ldp	x20, x19, [sp, #272]
    f2b0:	ldp	x28, x21, [sp, #256]
    f2b4:	ldp	x29, x30, [sp, #240]
    f2b8:	add	sp, sp, #0x120
    f2bc:	ret

000000000000f2c0 <argp_failure@@Base>:
    f2c0:	sub	sp, sp, #0x1e0
    f2c4:	stp	x24, x23, [sp, #432]
    f2c8:	stp	x22, x21, [sp, #448]
    f2cc:	stp	x20, x19, [sp, #464]
    f2d0:	mov	x23, x3
    f2d4:	mov	w22, w2
    f2d8:	mov	w19, w1
    f2dc:	mov	x20, x0
    f2e0:	stp	x29, x30, [sp, #400]
    f2e4:	str	x28, [sp, #416]
    f2e8:	add	x29, sp, #0x190
    f2ec:	stp	x4, x5, [sp, #136]
    f2f0:	stp	x6, x7, [sp, #152]
    f2f4:	stp	q0, q1, [sp]
    f2f8:	stp	q2, q3, [sp, #32]
    f2fc:	stp	q4, q5, [sp, #64]
    f300:	stp	q6, q7, [sp, #96]
    f304:	cbz	x0, f318 <argp_failure@@Base+0x58>
    f308:	ldrb	w8, [x20, #28]
    f30c:	tbnz	w8, #1, f42c <argp_failure@@Base+0x16c>
    f310:	add	x8, x20, #0x48
    f314:	b	f320 <argp_failure@@Base+0x60>
    f318:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
    f31c:	ldr	x8, [x8, #3816]
    f320:	ldr	x21, [x8]
    f324:	cbz	x21, f42c <argp_failure@@Base+0x16c>
    f328:	mov	x0, x21
    f32c:	bl	a3e0 <flockfile@plt>
    f330:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
    f334:	ldr	x9, [x9, #4008]
    f338:	add	x8, x20, #0x40
    f33c:	cmp	x20, #0x0
    f340:	mov	x1, x21
    f344:	csel	x8, x8, x9, ne  // ne = any
    f348:	ldr	x0, [x8]
    f34c:	bl	ae20 <fputs_unlocked@plt>
    f350:	cbz	x23, f3ac <argp_failure@@Base+0xec>
    f354:	mov	x8, #0xffffffffffffffe0    	// #-32
    f358:	mov	x10, sp
    f35c:	add	x11, sp, #0x88
    f360:	movk	x8, #0xff80, lsl #32
    f364:	add	x9, x29, #0x50
    f368:	add	x10, x10, #0x80
    f36c:	add	x11, x11, #0x20
    f370:	mov	w0, #0x3a                  	// #58
    f374:	mov	x1, x21
    f378:	add	x24, sp, #0xa8
    f37c:	stp	x10, x8, [sp, #184]
    f380:	stp	x9, x11, [sp, #168]
    f384:	bl	a5c0 <putc_unlocked@plt>
    f388:	mov	w0, #0x20                  	// #32
    f38c:	mov	x1, x21
    f390:	bl	a5c0 <putc_unlocked@plt>
    f394:	ldp	q0, q1, [x24]
    f398:	sub	x2, x29, #0x20
    f39c:	mov	x0, x21
    f3a0:	mov	x1, x23
    f3a4:	stp	q0, q1, [x29, #-32]
    f3a8:	bl	ae90 <vfprintf@plt>
    f3ac:	cbz	w22, f408 <argp_failure@@Base+0x148>
    f3b0:	mov	w0, #0x3a                  	// #58
    f3b4:	mov	x1, x21
    f3b8:	bl	a5c0 <putc_unlocked@plt>
    f3bc:	mov	w0, #0x20                  	// #32
    f3c0:	mov	x1, x21
    f3c4:	bl	a5c0 <putc_unlocked@plt>
    f3c8:	add	x1, sp, #0xa8
    f3cc:	mov	w2, #0xc8                  	// #200
    f3d0:	mov	w0, w22
    f3d4:	bl	a7e0 <strerror_r@plt>
    f3d8:	cbnz	x0, f400 <argp_failure@@Base+0x140>
    f3dc:	mov	w0, w22
    f3e0:	bl	a8b0 <strerror@plt>
    f3e4:	cbnz	x0, f400 <argp_failure@@Base+0x140>
    f3e8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    f3ec:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    f3f0:	add	x0, x0, #0xcb7
    f3f4:	add	x1, x1, #0xcdb
    f3f8:	mov	w2, #0x5                   	// #5
    f3fc:	bl	adc0 <dcgettext@plt>
    f400:	mov	x1, x21
    f404:	bl	ae20 <fputs_unlocked@plt>
    f408:	mov	w0, #0xa                   	// #10
    f40c:	mov	x1, x21
    f410:	bl	a5c0 <putc_unlocked@plt>
    f414:	mov	x0, x21
    f418:	bl	a6a0 <funlockfile@plt>
    f41c:	cbz	w19, f42c <argp_failure@@Base+0x16c>
    f420:	cbz	x20, f448 <argp_failure@@Base+0x188>
    f424:	ldrb	w8, [x20, #28]
    f428:	tbz	w8, #5, f448 <argp_failure@@Base+0x188>
    f42c:	ldp	x20, x19, [sp, #464]
    f430:	ldp	x22, x21, [sp, #448]
    f434:	ldp	x24, x23, [sp, #432]
    f438:	ldr	x28, [sp, #416]
    f43c:	ldp	x29, x30, [sp, #400]
    f440:	add	sp, sp, #0x1e0
    f444:	ret
    f448:	mov	w0, w19
    f44c:	bl	a390 <exit@plt>
    f450:	sub	sp, sp, #0xa0
    f454:	stp	x29, x30, [sp, #64]
    f458:	stp	x28, x27, [sp, #80]
    f45c:	stp	x26, x25, [sp, #96]
    f460:	stp	x24, x23, [sp, #112]
    f464:	stp	x22, x21, [sp, #128]
    f468:	stp	x20, x19, [sp, #144]
    f46c:	ldr	x27, [x0, #32]
    f470:	ldr	x24, [x0]
    f474:	mov	x26, x0
    f478:	mov	w0, #0x20                  	// #32
    f47c:	add	x29, sp, #0x40
    f480:	mov	x28, x1
    f484:	bl	a660 <malloc@plt>
    f488:	cbz	x0, f900 <argp_failure@@Base+0x640>
    f48c:	mov	x8, x0
    f490:	mov	x21, x0
    f494:	str	xzr, [x8, #24]!
    f498:	stur	x8, [x29, #-16]
    f49c:	stur	wzr, [x8, #-16]
    f4a0:	cbz	x24, f63c <argp_failure@@Base+0x37c>
    f4a4:	ldrb	w8, [x24, #24]
    f4a8:	tbnz	w8, #2, f920 <argp_failure@@Base+0x660>
    f4ac:	mov	w22, wzr
    f4b0:	mov	w19, wzr
    f4b4:	add	x23, x24, #0x28
    f4b8:	ldur	w25, [x23, #-32]
    f4bc:	cbnz	w25, f4d8 <argp_failure@@Base+0x218>
    f4c0:	ldur	x8, [x23, #-40]
    f4c4:	cbnz	x8, f4d8 <argp_failure@@Base+0x218>
    f4c8:	ldur	x8, [x23, #-8]
    f4cc:	cbnz	x8, f4d8 <argp_failure@@Base+0x218>
    f4d0:	ldr	w8, [x23]
    f4d4:	cbz	w8, f514 <argp_failure@@Base+0x254>
    f4d8:	ldur	w8, [x23, #-16]
    f4dc:	tbnz	w8, #2, f4e8 <argp_failure@@Base+0x228>
    f4e0:	add	w22, w22, #0x1
    f4e4:	str	w22, [x21, #8]
    f4e8:	sub	w9, w25, #0x1
    f4ec:	cmp	w9, #0xfe
    f4f0:	b.hi	f50c <argp_failure@@Base+0x24c>  // b.pmore
    f4f4:	tbnz	w8, #3, f50c <argp_failure@@Base+0x24c>
    f4f8:	bl	aa30 <__ctype_b_loc@plt>
    f4fc:	ldr	x8, [x0]
    f500:	ldrh	w8, [x8, x25, lsl #1]
    f504:	tbz	w8, #14, f50c <argp_failure@@Base+0x24c>
    f508:	add	w19, w19, #0x1
    f50c:	add	x23, x23, #0x30
    f510:	b	f4b8 <argp_failure@@Base+0x1f8>
    f514:	mov	w8, #0x38                  	// #56
    f518:	umull	x0, w22, w8
    f51c:	bl	a660 <malloc@plt>
    f520:	mov	x22, x0
    f524:	str	x0, [x21]
    f528:	add	w0, w19, #0x1
    f52c:	bl	a660 <malloc@plt>
    f530:	str	x0, [x21, #16]
    f534:	cbz	x22, f8e0 <argp_failure@@Base+0x620>
    f538:	mov	x23, x0
    f53c:	cbz	x0, f8e0 <argp_failure@@Base+0x620>
    f540:	mov	w8, wzr
    f544:	ldr	w9, [x24, #8]
    f548:	cbnz	w9, f564 <argp_failure@@Base+0x2a4>
    f54c:	ldr	x10, [x24]
    f550:	cbnz	x10, f564 <argp_failure@@Base+0x2a4>
    f554:	ldr	x10, [x24, #32]
    f558:	cbnz	x10, f564 <argp_failure@@Base+0x2a4>
    f55c:	ldr	w10, [x24, #40]
    f560:	cbz	w10, f638 <argp_failure@@Base+0x378>
    f564:	str	x24, [x22]
    f568:	str	wzr, [x22, #8]
    f56c:	str	x23, [x22, #16]
    f570:	ldr	w25, [x24, #40]
    f574:	cbnz	w25, f590 <argp_failure@@Base+0x2d0>
    f578:	ldr	x10, [x24]
    f57c:	cbz	x10, f588 <argp_failure@@Base+0x2c8>
    f580:	mov	w25, w8
    f584:	b	f590 <argp_failure@@Base+0x2d0>
    f588:	cmp	w9, #0x0
    f58c:	cinc	w25, w8, eq  // eq = none
    f590:	mov	w9, wzr
    f594:	str	w25, [x22, #24]
    f598:	stp	x28, x26, [x22, #32]
    f59c:	add	w8, w9, #0x1
    f5a0:	str	w8, [x22, #8]
    f5a4:	ldrb	w8, [x24, #24]
    f5a8:	tbnz	w8, #3, f5f0 <argp_failure@@Base+0x330>
    f5ac:	ldr	w19, [x24, #8]
    f5b0:	sub	w8, w19, #0x1
    f5b4:	cmp	w8, #0xfe
    f5b8:	b.hi	f5f0 <argp_failure@@Base+0x330>  // b.pmore
    f5bc:	bl	aa30 <__ctype_b_loc@plt>
    f5c0:	ldr	x8, [x0]
    f5c4:	ldrh	w8, [x8, x19, lsl #1]
    f5c8:	tbz	w8, #14, f5f0 <argp_failure@@Base+0x330>
    f5cc:	ldr	x8, [x21, #16]
    f5d0:	cmp	x8, x23
    f5d4:	b.cs	f5ec <argp_failure@@Base+0x32c>  // b.hs, b.nlast
    f5d8:	ldrb	w9, [x8], #1
    f5dc:	cmp	w9, w19, uxtb
    f5e0:	b.eq	f5f0 <argp_failure@@Base+0x330>  // b.none
    f5e4:	cmp	x23, x8
    f5e8:	b.ne	f5d8 <argp_failure@@Base+0x318>  // b.any
    f5ec:	strb	w19, [x23], #1
    f5f0:	ldr	w9, [x24, #56]
    f5f4:	add	x8, x24, #0x30
    f5f8:	cbnz	w9, f614 <argp_failure@@Base+0x354>
    f5fc:	ldr	x9, [x8]
    f600:	cbnz	x9, f614 <argp_failure@@Base+0x354>
    f604:	ldr	x9, [x24, #80]
    f608:	cbnz	x9, f614 <argp_failure@@Base+0x354>
    f60c:	ldr	w9, [x24, #88]
    f610:	cbz	w9, f628 <argp_failure@@Base+0x368>
    f614:	ldrb	w9, [x24, #72]
    f618:	tbz	w9, #2, f628 <argp_failure@@Base+0x368>
    f61c:	ldr	w9, [x22, #8]
    f620:	mov	x24, x8
    f624:	b	f59c <argp_failure@@Base+0x2dc>
    f628:	add	x22, x22, #0x38
    f62c:	mov	x24, x8
    f630:	mov	w8, w25
    f634:	b	f544 <argp_failure@@Base+0x284>
    f638:	strb	wzr, [x23]
    f63c:	cbz	x27, f89c <argp_failure@@Base+0x5dc>
    f640:	ldr	x8, [x27]
    f644:	cbz	x8, f89c <argp_failure@@Base+0x5dc>
    f648:	stp	x28, x26, [sp]
    f64c:	ldr	w19, [x27, #24]
    f650:	cbz	w19, f65c <argp_failure@@Base+0x39c>
    f654:	ldr	x20, [x27, #16]
    f658:	b	f668 <argp_failure@@Base+0x3a8>
    f65c:	ldr	x20, [x27, #16]
    f660:	mov	x1, x28
    f664:	cbz	x20, f6b8 <argp_failure@@Base+0x3f8>
    f668:	ldr	x22, [x26, #32]
    f66c:	mov	w0, #0x30                  	// #48
    f670:	bl	a660 <malloc@plt>
    f674:	mov	x1, x0
    f678:	cbz	x0, f6b8 <argp_failure@@Base+0x3f8>
    f67c:	sub	x8, x27, x22
    f680:	lsr	x8, x8, #5
    f684:	str	x20, [x1]
    f688:	stp	w8, w19, [x1, #8]
    f68c:	stp	x28, x26, [x1, #16]
    f690:	cbz	x28, f6a0 <argp_failure@@Base+0x3e0>
    f694:	ldr	w8, [x28, #32]
    f698:	add	w8, w8, #0x1
    f69c:	b	f6a4 <argp_failure@@Base+0x3e4>
    f6a0:	mov	w8, wzr
    f6a4:	ldur	x10, [x29, #-16]
    f6a8:	str	w8, [x1, #32]
    f6ac:	ldr	x9, [x10]
    f6b0:	str	x1, [x10]
    f6b4:	str	x9, [x1, #40]
    f6b8:	ldr	x0, [x27]
    f6bc:	bl	f450 <argp_failure@@Base+0x190>
    f6c0:	ldur	x9, [x29, #-16]
    f6c4:	mov	x22, x0
    f6c8:	ldr	x10, [x9]
    f6cc:	mov	x8, x9
    f6d0:	add	x9, x10, #0x28
    f6d4:	cbnz	x10, f6c8 <argp_failure@@Base+0x408>
    f6d8:	ldr	x9, [x22, #24]
    f6dc:	str	x9, [x8]
    f6e0:	ldr	w23, [x22, #8]
    f6e4:	str	xzr, [x22, #24]
    f6e8:	cbz	w23, f88c <argp_failure@@Base+0x5cc>
    f6ec:	ldr	w19, [x21, #8]
    f6f0:	cbz	w19, f874 <argp_failure@@Base+0x5b4>
    f6f4:	add	w9, w19, w23
    f6f8:	mov	w8, #0x38                  	// #56
    f6fc:	umull	x0, w9, w8
    f700:	str	x27, [sp, #32]
    f704:	str	w9, [sp, #20]
    f708:	bl	a660 <malloc@plt>
    f70c:	ldr	x27, [x21, #16]
    f710:	mov	x24, x0
    f714:	mov	x0, x27
    f718:	bl	a370 <strlen@plt>
    f71c:	ldr	x25, [x22, #16]
    f720:	mov	x26, x0
    f724:	mov	x0, x25
    f728:	bl	a370 <strlen@plt>
    f72c:	add	x8, x0, w26, uxtw
    f730:	add	x0, x8, #0x1
    f734:	bl	a660 <malloc@plt>
    f738:	stur	x24, [x29, #-24]
    f73c:	cbz	x24, f8c0 <argp_failure@@Base+0x600>
    f740:	mov	x20, x0
    f744:	cbz	x0, f8c0 <argp_failure@@Base+0x600>
    f748:	ldur	x24, [x29, #-24]
    f74c:	ldr	x1, [x21]
    f750:	mov	w8, #0x38                  	// #56
    f754:	mul	x28, x19, x8
    f758:	mov	x0, x24
    f75c:	mov	x2, x28
    f760:	and	x26, x26, #0xffffffff
    f764:	bl	a2f0 <memcpy@plt>
    f768:	ldr	x1, [x22]
    f76c:	mov	w8, #0x38                  	// #56
    f770:	add	x0, x24, x28
    f774:	mul	x2, x23, x8
    f778:	str	x22, [sp, #24]
    f77c:	bl	a2f0 <memcpy@plt>
    f780:	mov	x0, x20
    f784:	mov	x1, x27
    f788:	mov	x2, x26
    f78c:	bl	a2f0 <memcpy@plt>
    f790:	mov	x28, x24
    f794:	ldr	x8, [x28, #16]
    f798:	subs	w19, w19, #0x1
    f79c:	sub	x8, x8, x27
    f7a0:	add	x8, x20, x8
    f7a4:	str	x8, [x28, #16]
    f7a8:	add	x28, x28, #0x38
    f7ac:	b.ne	f794 <argp_failure@@Base+0x4d4>  // b.any
    f7b0:	add	x27, x20, x26
    f7b4:	stur	x20, [x29, #-8]
    f7b8:	ldr	w22, [x28, #8]
    f7bc:	str	x27, [x28, #16]
    f7c0:	cbz	w22, f830 <argp_failure@@Base+0x570>
    f7c4:	ldr	x19, [x28]
    f7c8:	ldrb	w8, [x19, #24]
    f7cc:	tbnz	w8, #3, f824 <argp_failure@@Base+0x564>
    f7d0:	ldr	w24, [x19, #8]
    f7d4:	sub	w8, w24, #0x1
    f7d8:	cmp	w8, #0xfe
    f7dc:	b.hi	f824 <argp_failure@@Base+0x564>  // b.pmore
    f7e0:	ldrb	w20, [x25]
    f7e4:	bl	aa30 <__ctype_b_loc@plt>
    f7e8:	cmp	w24, w20
    f7ec:	b.ne	f824 <argp_failure@@Base+0x564>  // b.any
    f7f0:	ldr	x8, [x0]
    f7f4:	ldrh	w8, [x8, x24, lsl #1]
    f7f8:	tbz	w8, #14, f824 <argp_failure@@Base+0x564>
    f7fc:	ldur	x9, [x29, #-8]
    f800:	mov	x8, x26
    f804:	cbz	x26, f81c <argp_failure@@Base+0x55c>
    f808:	ldrb	w10, [x9], #1
    f80c:	cmp	w10, w20
    f810:	b.eq	f820 <argp_failure@@Base+0x560>  // b.none
    f814:	subs	x8, x8, #0x1
    f818:	b.ne	f808 <argp_failure@@Base+0x548>  // b.any
    f81c:	strb	w20, [x27], #1
    f820:	add	x25, x25, #0x1
    f824:	subs	w22, w22, #0x1
    f828:	add	x19, x19, #0x30
    f82c:	b.ne	f7c8 <argp_failure@@Base+0x508>  // b.any
    f830:	subs	w23, w23, #0x1
    f834:	add	x28, x28, #0x38
    f838:	b.ne	f7b8 <argp_failure@@Base+0x4f8>  // b.any
    f83c:	ldr	x0, [x21]
    f840:	strb	wzr, [x27]
    f844:	bl	aaa0 <free@plt>
    f848:	ldr	x0, [x21, #16]
    f84c:	bl	aaa0 <free@plt>
    f850:	ldur	x8, [x29, #-24]
    f854:	ldp	x28, x26, [sp]
    f858:	ldp	x22, x27, [sp, #24]
    f85c:	str	x8, [x21]
    f860:	ldr	w8, [sp, #20]
    f864:	str	w8, [x21, #8]
    f868:	ldur	x8, [x29, #-8]
    f86c:	str	x8, [x21, #16]
    f870:	b	f88c <argp_failure@@Base+0x5cc>
    f874:	ldr	x8, [x22]
    f878:	ldr	x9, [x22, #16]
    f87c:	str	w23, [x21, #8]
    f880:	str	wzr, [x22, #8]
    f884:	str	x8, [x21]
    f888:	str	x9, [x21, #16]
    f88c:	mov	x0, x22
    f890:	bl	101f8 <argp_failure@@Base+0xf38>
    f894:	ldr	x8, [x27, #32]!
    f898:	cbnz	x8, f64c <argp_failure@@Base+0x38c>
    f89c:	mov	x0, x21
    f8a0:	ldp	x20, x19, [sp, #144]
    f8a4:	ldp	x22, x21, [sp, #128]
    f8a8:	ldp	x24, x23, [sp, #112]
    f8ac:	ldp	x26, x25, [sp, #96]
    f8b0:	ldp	x28, x27, [sp, #80]
    f8b4:	ldp	x29, x30, [sp, #64]
    f8b8:	add	sp, sp, #0xa0
    f8bc:	ret
    f8c0:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    f8c4:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    f8c8:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    f8cc:	add	x0, x0, #0xea0
    f8d0:	add	x1, x1, #0xe21
    f8d4:	add	x3, x3, #0xeb9
    f8d8:	mov	w2, #0x370                 	// #880
    f8dc:	bl	aeb0 <__assert_fail@plt>
    f8e0:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    f8e4:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    f8e8:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    f8ec:	add	x0, x0, #0xe7d
    f8f0:	add	x1, x1, #0xe21
    f8f4:	add	x3, x3, #0xe2d
    f8f8:	mov	w2, #0x1db                 	// #475
    f8fc:	bl	aeb0 <__assert_fail@plt>
    f900:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    f904:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    f908:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    f90c:	add	x0, x0, #0xe1d
    f910:	add	x1, x1, #0xe21
    f914:	add	x3, x3, #0xe2d
    f918:	mov	w2, #0x1c3                 	// #451
    f91c:	bl	aeb0 <__assert_fail@plt>
    f920:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
    f924:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    f928:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
    f92c:	add	x0, x0, #0xe6d
    f930:	add	x1, x1, #0xe21
    f934:	add	x3, x3, #0xe2d
    f938:	mov	w2, #0x1cd                 	// #461
    f93c:	bl	aeb0 <__assert_fail@plt>
    f940:	stp	x29, x30, [sp, #-64]!
    f944:	stp	x22, x21, [sp, #32]
    f948:	stp	x20, x19, [sp, #48]
    f94c:	ldr	w21, [x0, #8]
    f950:	str	x23, [sp, #16]
    f954:	mov	x29, sp
    f958:	cbz	w21, f9b4 <argp_failure@@Base+0x6f4>
    f95c:	ldr	x20, [x0]
    f960:	mov	x19, x1
    f964:	ldr	w22, [x20, #8]
    f968:	cbz	w22, f998 <argp_failure@@Base+0x6d8>
    f96c:	ldr	x23, [x20]
    f970:	ldr	x0, [x23]
    f974:	cbz	x0, f98c <argp_failure@@Base+0x6cc>
    f978:	ldrb	w8, [x23, #24]
    f97c:	tbnz	w8, #1, f98c <argp_failure@@Base+0x6cc>
    f980:	mov	x1, x19
    f984:	bl	aa10 <strcmp@plt>
    f988:	cbz	w0, f9a8 <argp_failure@@Base+0x6e8>
    f98c:	sub	w22, w22, #0x1
    f990:	add	x23, x23, #0x30
    f994:	cbnz	w22, f970 <argp_failure@@Base+0x6b0>
    f998:	sub	w21, w21, #0x1
    f99c:	add	x20, x20, #0x38
    f9a0:	cbnz	w21, f964 <argp_failure@@Base+0x6a4>
    f9a4:	b	f9b4 <argp_failure@@Base+0x6f4>
    f9a8:	cbz	x20, f9b4 <argp_failure@@Base+0x6f4>
    f9ac:	mov	w8, #0xffffffff            	// #-1
    f9b0:	str	w8, [x20, #24]
    f9b4:	ldp	x20, x19, [sp, #48]
    f9b8:	ldp	x22, x21, [sp, #32]
    f9bc:	ldr	x23, [sp, #16]
    f9c0:	ldp	x29, x30, [sp], #64
    f9c4:	ret
    f9c8:	stp	x29, x30, [sp, #-32]!
    f9cc:	stp	x20, x19, [sp, #16]
    f9d0:	mov	x8, x0
    f9d4:	ldr	x0, [x0, #16]
    f9d8:	ldr	x20, [x8, #32]
    f9dc:	mov	x29, sp
    f9e0:	cbz	x0, f9fc <argp_failure@@Base+0x73c>
    f9e4:	mov	w1, #0xa                   	// #10
    f9e8:	bl	ab90 <strchr@plt>
    f9ec:	cmp	x0, #0x0
    f9f0:	cset	w19, ne  // ne = any
    f9f4:	cbnz	x20, fa04 <argp_failure@@Base+0x744>
    f9f8:	b	fa24 <argp_failure@@Base+0x764>
    f9fc:	mov	x19, xzr
    fa00:	cbz	x20, fa24 <argp_failure@@Base+0x764>
    fa04:	ldr	x8, [x20]
    fa08:	cbz	x8, fa24 <argp_failure@@Base+0x764>
    fa0c:	add	x20, x20, #0x20
    fa10:	mov	x0, x8
    fa14:	bl	f9c8 <argp_failure@@Base+0x708>
    fa18:	ldr	x8, [x20], #32
    fa1c:	add	x19, x0, x19
    fa20:	cbnz	x8, fa10 <argp_failure@@Base+0x750>
    fa24:	mov	x0, x19
    fa28:	ldp	x20, x19, [sp, #16]
    fa2c:	ldp	x29, x30, [sp], #32
    fa30:	ret
    fa34:	stp	x29, x30, [sp, #-96]!
    fa38:	stp	x28, x27, [sp, #16]
    fa3c:	stp	x26, x25, [sp, #32]
    fa40:	stp	x24, x23, [sp, #48]
    fa44:	stp	x22, x21, [sp, #64]
    fa48:	stp	x20, x19, [sp, #80]
    fa4c:	mov	x29, sp
    fa50:	sub	sp, sp, #0x10
    fa54:	ldr	w24, [x0, #8]
    fa58:	cbz	w24, fbe0 <argp_failure@@Base+0x920>
    fa5c:	mov	x20, x0
    fa60:	ldr	x0, [x0, #16]
    fa64:	mov	x19, x1
    fa68:	bl	a370 <strlen@plt>
    fa6c:	add	x9, x0, #0x10
    fa70:	mov	x8, sp
    fa74:	and	x9, x9, #0xfffffffffffffff0
    fa78:	sub	x21, x8, x9
    fa7c:	mov	sp, x21
    fa80:	stur	x21, [x29, #-8]
    fa84:	ldr	x22, [x20]
    fa88:	adrp	x23, 10000 <argp_failure@@Base+0xd40>
    fa8c:	add	x23, x23, #0x6b8
    fa90:	ldr	x8, [x22, #40]
    fa94:	sub	x3, x29, #0x8
    fa98:	mov	x0, x22
    fa9c:	mov	x1, x23
    faa0:	ldr	x2, [x8, #48]
    faa4:	bl	10590 <argp_failure@@Base+0x12d0>
    faa8:	subs	w24, w24, #0x1
    faac:	add	x22, x22, #0x38
    fab0:	b.ne	fa90 <argp_failure@@Base+0x7d0>  // b.any
    fab4:	ldur	x8, [x29, #-8]
    fab8:	cmp	x8, x21
    fabc:	b.ls	fae0 <argp_failure@@Base+0x820>  // b.plast
    fac0:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    fac4:	add	x9, x8, #0x1
    fac8:	add	x1, x1, #0xee5
    facc:	mov	x0, x19
    fad0:	mov	x2, x21
    fad4:	stur	x9, [x29, #-8]
    fad8:	strb	wzr, [x8]
    fadc:	bl	a970 <argp_fmtstream_printf@plt>
    fae0:	ldr	w23, [x20, #8]
    fae4:	cbz	w23, fbe0 <argp_failure@@Base+0x920>
    fae8:	ldr	x21, [x20]
    faec:	adrp	x22, 10000 <argp_failure@@Base+0xd40>
    faf0:	add	x22, x22, #0x6f4
    faf4:	ldr	x8, [x21, #40]
    faf8:	mov	x0, x21
    fafc:	mov	x1, x22
    fb00:	mov	x3, x19
    fb04:	ldr	x2, [x8, #48]
    fb08:	bl	10590 <argp_failure@@Base+0x12d0>
    fb0c:	subs	w23, w23, #0x1
    fb10:	add	x21, x21, #0x38
    fb14:	b.ne	faf4 <argp_failure@@Base+0x834>  // b.any
    fb18:	ldr	w24, [x20, #8]
    fb1c:	cbz	w24, fbe0 <argp_failure@@Base+0x920>
    fb20:	ldr	x25, [x20]
    fb24:	adrp	x20, 28000 <vasnprintf@@Base+0x944>
    fb28:	adrp	x22, 28000 <vasnprintf@@Base+0x944>
    fb2c:	add	x20, x20, #0xf18
    fb30:	add	x22, x22, #0xf00
    fb34:	ldr	w26, [x25, #8]
    fb38:	cbz	w26, fbd4 <argp_failure@@Base+0x914>
    fb3c:	ldr	x8, [x25, #40]
    fb40:	ldr	x27, [x25]
    fb44:	ldr	x23, [x8, #48]
    fb48:	mov	x28, x27
    fb4c:	ldr	x2, [x28]
    fb50:	cbz	x2, fbc8 <argp_failure@@Base+0x908>
    fb54:	ldr	w8, [x28, #24]
    fb58:	tst	w8, #0x4
    fb5c:	csel	x27, x28, x27, eq  // eq = none
    fb60:	tbnz	w8, #1, fbc8 <argp_failure@@Base+0x908>
    fb64:	ldr	w9, [x27, #24]
    fb68:	ldr	x1, [x28, #16]
    fb6c:	orr	w21, w9, w8
    fb70:	cbz	x1, fb7c <argp_failure@@Base+0x8bc>
    fb74:	tbz	w21, #4, fb84 <argp_failure@@Base+0x8c4>
    fb78:	b	fbc8 <argp_failure@@Base+0x908>
    fb7c:	ldr	x1, [x27, #16]
    fb80:	tbnz	w21, #4, fbc8 <argp_failure@@Base+0x908>
    fb84:	cbz	x1, fbb0 <argp_failure@@Base+0x8f0>
    fb88:	mov	w2, #0x5                   	// #5
    fb8c:	mov	x0, x23
    fb90:	bl	adc0 <dcgettext@plt>
    fb94:	ldr	x2, [x28]
    fb98:	mov	x3, x0
    fb9c:	mov	x0, x19
    fba0:	tbnz	w21, #0, fbc0 <argp_failure@@Base+0x900>
    fba4:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
    fba8:	add	x1, x1, #0xf0d
    fbac:	b	fbc4 <argp_failure@@Base+0x904>
    fbb0:	mov	x0, x19
    fbb4:	mov	x1, x20
    fbb8:	bl	a970 <argp_fmtstream_printf@plt>
    fbbc:	b	fbc8 <argp_failure@@Base+0x908>
    fbc0:	mov	x1, x22
    fbc4:	bl	a970 <argp_fmtstream_printf@plt>
    fbc8:	subs	w26, w26, #0x1
    fbcc:	add	x28, x28, #0x30
    fbd0:	b.ne	fb4c <argp_failure@@Base+0x88c>  // b.any
    fbd4:	subs	w24, w24, #0x1
    fbd8:	add	x25, x25, #0x38
    fbdc:	b.ne	fb34 <argp_failure@@Base+0x874>  // b.any
    fbe0:	mov	sp, x29
    fbe4:	ldp	x20, x19, [sp, #80]
    fbe8:	ldp	x22, x21, [sp, #64]
    fbec:	ldp	x24, x23, [sp, #48]
    fbf0:	ldp	x26, x25, [sp, #32]
    fbf4:	ldp	x28, x27, [sp, #16]
    fbf8:	ldp	x29, x30, [sp], #96
    fbfc:	ret
    fc00:	sub	sp, sp, #0x70
    fc04:	stp	x29, x30, [sp, #16]
    fc08:	stp	x28, x27, [sp, #32]
    fc0c:	stp	x26, x25, [sp, #48]
    fc10:	stp	x24, x23, [sp, #64]
    fc14:	stp	x22, x21, [sp, #80]
    fc18:	stp	x20, x19, [sp, #96]
    fc1c:	ldr	x28, [x2]
    fc20:	ldr	x8, [x0, #16]
    fc24:	ldr	x26, [x0, #32]
    fc28:	mov	x20, x4
    fc2c:	mov	w19, w3
    fc30:	mov	x21, x2
    fc34:	mov	x23, x0
    fc38:	mov	x22, x1
    fc3c:	add	x29, sp, #0x10
    fc40:	cbz	x8, fc5c <argp_failure@@Base+0x99c>
    fc44:	ldr	x0, [x23, #48]
    fc48:	mov	w2, #0x5                   	// #5
    fc4c:	mov	x1, x8
    fc50:	bl	adc0 <dcgettext@plt>
    fc54:	mov	x24, x0
    fc58:	b	fc60 <argp_failure@@Base+0x9a0>
    fc5c:	mov	x24, xzr
    fc60:	ldr	x8, [x23, #40]
    fc64:	mov	x25, x24
    fc68:	cbz	x8, fc94 <argp_failure@@Base+0x9d4>
    fc6c:	mov	x0, x23
    fc70:	mov	x1, x22
    fc74:	bl	ac80 <_argp_input@plt>
    fc78:	ldr	x8, [x23, #40]
    fc7c:	mov	x2, x0
    fc80:	mov	w0, #0x6                   	// #6
    fc84:	movk	w0, #0x200, lsl #16
    fc88:	mov	x1, x24
    fc8c:	blr	x8
    fc90:	mov	x25, x0
    fc94:	str	x28, [sp, #8]
    fc98:	cbz	x25, fce8 <argp_failure@@Base+0xa28>
    fc9c:	mov	w1, #0xa                   	// #10
    fca0:	mov	x0, x25
    fca4:	bl	ad80 <strchrnul@plt>
    fca8:	ldrb	w8, [x0]
    fcac:	mov	x23, x0
    fcb0:	str	x26, [sp]
    fcb4:	cbz	w8, fcf8 <argp_failure@@Base+0xa38>
    fcb8:	ldrb	w27, [x28]
    fcbc:	cbz	w27, fd04 <argp_failure@@Base+0xa44>
    fcc0:	mov	w28, wzr
    fcc4:	add	x26, x23, #0x1
    fcc8:	mov	w1, #0xa                   	// #10
    fccc:	mov	x0, x26
    fcd0:	bl	ad80 <strchrnul@plt>
    fcd4:	add	w28, w28, #0x1
    fcd8:	cmp	w28, w27
    fcdc:	mov	x23, x0
    fce0:	b.cc	fcc4 <argp_failure@@Base+0xa04>  // b.lo, b.ul, b.last
    fce4:	b	fd08 <argp_failure@@Base+0xa48>
    fce8:	mov	x23, xzr
    fcec:	mov	w28, wzr
    fcf0:	cbnz	x26, fd7c <argp_failure@@Base+0xabc>
    fcf4:	b	fdb0 <argp_failure@@Base+0xaf0>
    fcf8:	mov	w28, wzr
    fcfc:	mov	x26, x25
    fd00:	b	fd18 <argp_failure@@Base+0xa58>
    fd04:	mov	x26, x25
    fd08:	ldr	x8, [x21]
    fd0c:	mov	w28, #0x1                   	// #1
    fd10:	add	x8, x8, #0x1
    fd14:	str	x8, [x21]
    fd18:	sub	x27, x23, x26
    fd1c:	add	x1, x27, #0x1
    fd20:	mov	x0, x20
    fd24:	bl	10794 <argp_failure@@Base+0x14d4>
    fd28:	ldp	x0, x8, [x20, #56]
    fd2c:	add	x9, x0, x27
    fd30:	cmp	x9, x8
    fd34:	b.ls	fd4c <argp_failure@@Base+0xa8c>  // b.plast
    fd38:	mov	x0, x20
    fd3c:	mov	x1, x27
    fd40:	bl	ada0 <_argp_fmtstream_ensure@plt>
    fd44:	cbz	w0, fd64 <argp_failure@@Base+0xaa4>
    fd48:	ldr	x0, [x20, #56]
    fd4c:	mov	x1, x26
    fd50:	mov	x2, x27
    fd54:	bl	a2f0 <memcpy@plt>
    fd58:	ldr	x8, [x20, #56]
    fd5c:	add	x8, x8, x27
    fd60:	str	x8, [x20, #56]
    fd64:	cmp	x25, x24
    fd68:	b.eq	fd74 <argp_failure@@Base+0xab4>  // b.none
    fd6c:	mov	x0, x25
    fd70:	bl	aaa0 <free@plt>
    fd74:	ldr	x26, [sp]
    fd78:	cbz	x26, fdb0 <argp_failure@@Base+0xaf0>
    fd7c:	ldr	x8, [x26]
    fd80:	cbz	x8, fdb0 <argp_failure@@Base+0xaf0>
    fd84:	add	x24, x26, #0x20
    fd88:	mov	x0, x8
    fd8c:	mov	x1, x22
    fd90:	mov	x2, x21
    fd94:	mov	w3, w19
    fd98:	mov	x4, x20
    fd9c:	bl	fc00 <argp_failure@@Base+0x940>
    fda0:	ldr	x8, [x24], #32
    fda4:	cmp	w0, #0x0
    fda8:	cset	w19, eq  // eq = none
    fdac:	cbnz	x8, fd88 <argp_failure@@Base+0xac8>
    fdb0:	cbz	w28, fde4 <argp_failure@@Base+0xb24>
    fdb4:	cbz	w19, fde4 <argp_failure@@Base+0xb24>
    fdb8:	ldr	x10, [sp, #8]
    fdbc:	ldrb	w9, [x23]
    fdc0:	ldrb	w8, [x10]
    fdc4:	cbz	w9, fdd8 <argp_failure@@Base+0xb18>
    fdc8:	add	w8, w8, #0x1
    fdcc:	mov	w19, wzr
    fdd0:	strb	w8, [x10]
    fdd4:	b	fde4 <argp_failure@@Base+0xb24>
    fdd8:	cbz	w8, fde0 <argp_failure@@Base+0xb20>
    fddc:	strb	wzr, [x10]
    fde0:	mov	w19, #0x1                   	// #1
    fde4:	cmp	w19, #0x0
    fde8:	ldp	x20, x19, [sp, #96]
    fdec:	ldp	x22, x21, [sp, #80]
    fdf0:	ldp	x24, x23, [sp, #64]
    fdf4:	ldp	x26, x25, [sp, #48]
    fdf8:	ldp	x28, x27, [sp, #32]
    fdfc:	ldp	x29, x30, [sp, #16]
    fe00:	cset	w0, eq  // eq = none
    fe04:	add	sp, sp, #0x70
    fe08:	ret
    fe0c:	sub	sp, sp, #0x70
    fe10:	stp	x29, x30, [sp, #16]
    fe14:	stp	x28, x27, [sp, #32]
    fe18:	stp	x26, x25, [sp, #48]
    fe1c:	stp	x24, x23, [sp, #64]
    fe20:	stp	x22, x21, [sp, #80]
    fe24:	stp	x20, x19, [sp, #96]
    fe28:	ldr	x8, [x0, #24]
    fe2c:	mov	x19, x5
    fe30:	mov	w20, w4
    fe34:	mov	w21, w3
    fe38:	mov	w22, w2
    fe3c:	mov	x24, x0
    fe40:	mov	x23, x1
    fe44:	add	x29, sp, #0x10
    fe48:	cbz	x8, fe98 <argp_failure@@Base+0xbd8>
    fe4c:	ldr	x0, [x24, #48]
    fe50:	mov	w2, #0x5                   	// #5
    fe54:	mov	x1, x8
    fe58:	bl	adc0 <dcgettext@plt>
    fe5c:	ldr	x27, [x24, #32]
    fe60:	mov	x26, x0
    fe64:	cbz	x0, fea8 <argp_failure@@Base+0xbe8>
    fe68:	mov	w1, #0xb                   	// #11
    fe6c:	mov	x0, x26
    fe70:	bl	ab90 <strchr@plt>
    fe74:	cmp	x0, #0x0
    fe78:	csinc	x9, xzr, x0, eq  // eq = none
    fe7c:	cmp	x0, #0x0
    fe80:	sub	x8, x0, x26
    fe84:	ccmp	w22, #0x0, #0x0, ne  // ne = any
    fe88:	csel	x25, x8, xzr, eq  // eq = none
    fe8c:	cmp	w22, #0x0
    fe90:	csel	x26, x26, x9, eq  // eq = none
    fe94:	b	feac <argp_failure@@Base+0xbec>
    fe98:	ldr	x27, [x24, #32]
    fe9c:	mov	x25, xzr
    fea0:	mov	x26, xzr
    fea4:	b	feac <argp_failure@@Base+0xbec>
    fea8:	mov	x25, xzr
    feac:	ldr	x8, [x24, #40]
    feb0:	mov	w28, #0x1                   	// #1
    feb4:	movk	w28, #0x200, lsl #16
    feb8:	cbz	x8, ff04 <argp_failure@@Base+0xc44>
    febc:	cbz	x25, fed0 <argp_failure@@Base+0xc10>
    fec0:	mov	x0, x26
    fec4:	mov	x1, x25
    fec8:	bl	ab60 <strndup@plt>
    fecc:	mov	x26, x0
    fed0:	mov	x0, x24
    fed4:	mov	x1, x23
    fed8:	bl	ac80 <_argp_input@plt>
    fedc:	ldr	x8, [x24, #40]
    fee0:	cmp	w22, #0x0
    fee4:	mov	x2, x0
    fee8:	cinc	w0, w28, ne  // ne = any
    feec:	mov	x1, x26
    fef0:	str	x2, [sp, #8]
    fef4:	blr	x8
    fef8:	mov	x28, x0
    fefc:	cbnz	x28, ff10 <argp_failure@@Base+0xc50>
    ff00:	b	10054 <argp_failure@@Base+0xd94>
    ff04:	str	xzr, [sp, #8]
    ff08:	mov	x28, x26
    ff0c:	cbz	x28, 10054 <argp_failure@@Base+0xd94>
    ff10:	cbz	w21, ff44 <argp_failure@@Base+0xc84>
    ff14:	ldp	x8, x9, [x19, #56]
    ff18:	cmp	x8, x9
    ff1c:	b.cc	ff34 <argp_failure@@Base+0xc74>  // b.lo, b.ul, b.last
    ff20:	mov	w1, #0x1                   	// #1
    ff24:	mov	x0, x19
    ff28:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ff2c:	cbz	w0, ff44 <argp_failure@@Base+0xc84>
    ff30:	ldr	x8, [x19, #56]
    ff34:	add	x9, x8, #0x1
    ff38:	mov	w10, #0xa                   	// #10
    ff3c:	str	x9, [x19, #56]
    ff40:	strb	w10, [x8]
    ff44:	str	x27, [sp]
    ff48:	cbz	x25, ff90 <argp_failure@@Base+0xcd0>
    ff4c:	cmp	x28, x26
    ff50:	b.ne	ff90 <argp_failure@@Base+0xcd0>  // b.any
    ff54:	ldp	x0, x8, [x19, #56]
    ff58:	add	x9, x0, x25
    ff5c:	cmp	x9, x8
    ff60:	b.ls	ff78 <argp_failure@@Base+0xcb8>  // b.plast
    ff64:	mov	x0, x19
    ff68:	mov	x1, x25
    ff6c:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ff70:	cbz	w0, ffdc <argp_failure@@Base+0xd1c>
    ff74:	ldr	x0, [x19, #56]
    ff78:	mov	x1, x26
    ff7c:	mov	x2, x25
    ff80:	bl	a2f0 <memcpy@plt>
    ff84:	ldr	x8, [x19, #56]
    ff88:	add	x8, x8, x25
    ff8c:	b	ffd8 <argp_failure@@Base+0xd18>
    ff90:	mov	x0, x28
    ff94:	bl	a370 <strlen@plt>
    ff98:	cbz	x0, ffdc <argp_failure@@Base+0xd1c>
    ff9c:	mov	x27, x0
    ffa0:	ldp	x0, x8, [x19, #56]
    ffa4:	add	x9, x0, x27
    ffa8:	cmp	x9, x8
    ffac:	b.ls	ffc4 <argp_failure@@Base+0xd04>  // b.plast
    ffb0:	mov	x0, x19
    ffb4:	mov	x1, x27
    ffb8:	bl	ada0 <_argp_fmtstream_ensure@plt>
    ffbc:	cbz	w0, ffdc <argp_failure@@Base+0xd1c>
    ffc0:	ldr	x0, [x19, #56]
    ffc4:	mov	x1, x28
    ffc8:	mov	x2, x27
    ffcc:	bl	a2f0 <memcpy@plt>
    ffd0:	ldr	x8, [x19, #56]
    ffd4:	add	x8, x8, x27
    ffd8:	str	x8, [x19, #56]
    ffdc:	ldp	x9, x8, [x19, #48]
    ffe0:	ldr	x10, [x19, #32]
    ffe4:	sub	x8, x8, x9
    ffe8:	cmp	x8, x10
    ffec:	b.ls	fff8 <argp_failure@@Base+0xd38>  // b.plast
    fff0:	mov	x0, x19
    fff4:	bl	a570 <_argp_fmtstream_update@plt>
    fff8:	ldr	x8, [x19, #40]
    fffc:	ldr	x9, [x19, #8]
   10000:	ldr	x27, [sp]
   10004:	bic	x8, x8, x8, asr #63
   10008:	cmp	x8, x9
   1000c:	b.ls	10040 <argp_failure@@Base+0xd80>  // b.plast
   10010:	ldp	x8, x9, [x19, #56]
   10014:	cmp	x8, x9
   10018:	b.cc	10030 <argp_failure@@Base+0xd70>  // b.lo, b.ul, b.last
   1001c:	mov	w1, #0x1                   	// #1
   10020:	mov	x0, x19
   10024:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10028:	cbz	w0, 10040 <argp_failure@@Base+0xd80>
   1002c:	ldr	x8, [x19, #56]
   10030:	add	x9, x8, #0x1
   10034:	mov	w10, #0xa                   	// #10
   10038:	str	x9, [x19, #56]
   1003c:	strb	w10, [x8]
   10040:	cmp	x28, x26
   10044:	b.eq	10050 <argp_failure@@Base+0xd90>  // b.none
   10048:	mov	x0, x28
   1004c:	bl	aaa0 <free@plt>
   10050:	mov	w28, #0x1                   	// #1
   10054:	cbz	x25, 1006c <argp_failure@@Base+0xdac>
   10058:	cbz	x26, 1006c <argp_failure@@Base+0xdac>
   1005c:	ldr	x8, [x24, #40]
   10060:	cbz	x8, 1006c <argp_failure@@Base+0xdac>
   10064:	mov	x0, x26
   10068:	bl	aaa0 <free@plt>
   1006c:	cbz	w22, 1018c <argp_failure@@Base+0xecc>
   10070:	ldr	x8, [x24, #40]
   10074:	cbz	x8, 1018c <argp_failure@@Base+0xecc>
   10078:	ldr	x2, [sp, #8]
   1007c:	mov	w9, #0x1                   	// #1
   10080:	movk	w9, #0x200, lsl #16
   10084:	add	w0, w9, #0x3
   10088:	mov	x1, xzr
   1008c:	blr	x8
   10090:	cbz	x0, 1018c <argp_failure@@Base+0xecc>
   10094:	mov	x24, x0
   10098:	orr	w8, w28, w21
   1009c:	cbz	w8, 100d0 <argp_failure@@Base+0xe10>
   100a0:	ldp	x8, x9, [x19, #56]
   100a4:	cmp	x8, x9
   100a8:	b.cc	100c0 <argp_failure@@Base+0xe00>  // b.lo, b.ul, b.last
   100ac:	mov	w1, #0x1                   	// #1
   100b0:	mov	x0, x19
   100b4:	bl	ada0 <_argp_fmtstream_ensure@plt>
   100b8:	cbz	w0, 100d0 <argp_failure@@Base+0xe10>
   100bc:	ldr	x8, [x19, #56]
   100c0:	add	x9, x8, #0x1
   100c4:	mov	w10, #0xa                   	// #10
   100c8:	str	x9, [x19, #56]
   100cc:	strb	w10, [x8]
   100d0:	mov	x0, x24
   100d4:	bl	a370 <strlen@plt>
   100d8:	cbz	x0, 1011c <argp_failure@@Base+0xe5c>
   100dc:	mov	x25, x0
   100e0:	ldp	x0, x8, [x19, #56]
   100e4:	add	x9, x0, x25
   100e8:	cmp	x9, x8
   100ec:	b.ls	10104 <argp_failure@@Base+0xe44>  // b.plast
   100f0:	mov	x0, x19
   100f4:	mov	x1, x25
   100f8:	bl	ada0 <_argp_fmtstream_ensure@plt>
   100fc:	cbz	w0, 1011c <argp_failure@@Base+0xe5c>
   10100:	ldr	x0, [x19, #56]
   10104:	mov	x1, x24
   10108:	mov	x2, x25
   1010c:	bl	a2f0 <memcpy@plt>
   10110:	ldr	x8, [x19, #56]
   10114:	add	x8, x8, x25
   10118:	str	x8, [x19, #56]
   1011c:	mov	x0, x24
   10120:	bl	aaa0 <free@plt>
   10124:	ldp	x9, x8, [x19, #48]
   10128:	ldr	x10, [x19, #32]
   1012c:	sub	x8, x8, x9
   10130:	cmp	x8, x10
   10134:	b.ls	10140 <argp_failure@@Base+0xe80>  // b.plast
   10138:	mov	x0, x19
   1013c:	bl	a570 <_argp_fmtstream_update@plt>
   10140:	ldr	x8, [x19, #40]
   10144:	ldr	x9, [x19, #8]
   10148:	bic	x8, x8, x8, asr #63
   1014c:	cmp	x8, x9
   10150:	b.ls	10188 <argp_failure@@Base+0xec8>  // b.plast
   10154:	ldp	x8, x9, [x19, #56]
   10158:	cmp	x8, x9
   1015c:	b.cc	10178 <argp_failure@@Base+0xeb8>  // b.lo, b.ul, b.last
   10160:	mov	w1, #0x1                   	// #1
   10164:	mov	x0, x19
   10168:	mov	w28, #0x1                   	// #1
   1016c:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10170:	cbz	w0, 1018c <argp_failure@@Base+0xecc>
   10174:	ldr	x8, [x19, #56]
   10178:	add	x9, x8, #0x1
   1017c:	mov	w10, #0xa                   	// #10
   10180:	str	x9, [x19, #56]
   10184:	strb	w10, [x8]
   10188:	mov	w28, #0x1                   	// #1
   1018c:	cbz	x27, 101d4 <argp_failure@@Base+0xf14>
   10190:	ldr	x8, [x27]
   10194:	cbz	x8, 101d4 <argp_failure@@Base+0xf14>
   10198:	add	x24, x27, #0x20
   1019c:	cbz	w20, 101a4 <argp_failure@@Base+0xee4>
   101a0:	cbnz	w28, 101d4 <argp_failure@@Base+0xf14>
   101a4:	orr	w9, w28, w21
   101a8:	cmp	w9, #0x0
   101ac:	cset	w3, ne  // ne = any
   101b0:	mov	x0, x8
   101b4:	mov	x1, x23
   101b8:	mov	w2, w22
   101bc:	mov	w4, w20
   101c0:	mov	x5, x19
   101c4:	bl	fe0c <argp_failure@@Base+0xb4c>
   101c8:	ldr	x8, [x24], #32
   101cc:	orr	w28, w0, w28
   101d0:	cbnz	x8, 1019c <argp_failure@@Base+0xedc>
   101d4:	mov	w0, w28
   101d8:	ldp	x20, x19, [sp, #96]
   101dc:	ldp	x22, x21, [sp, #80]
   101e0:	ldp	x24, x23, [sp, #64]
   101e4:	ldp	x26, x25, [sp, #48]
   101e8:	ldp	x28, x27, [sp, #32]
   101ec:	ldp	x29, x30, [sp, #16]
   101f0:	add	sp, sp, #0x70
   101f4:	ret
   101f8:	stp	x29, x30, [sp, #-32]!
   101fc:	stp	x20, x19, [sp, #16]
   10200:	mov	x19, x0
   10204:	ldr	x0, [x0, #24]
   10208:	mov	x29, sp
   1020c:	cbz	x0, 10220 <argp_failure@@Base+0xf60>
   10210:	ldr	x20, [x0, #40]
   10214:	bl	aaa0 <free@plt>
   10218:	mov	x0, x20
   1021c:	cbnz	x20, 10210 <argp_failure@@Base+0xf50>
   10220:	ldr	w8, [x19, #8]
   10224:	cbz	w8, 10238 <argp_failure@@Base+0xf78>
   10228:	ldr	x0, [x19]
   1022c:	bl	aaa0 <free@plt>
   10230:	ldr	x0, [x19, #16]
   10234:	bl	aaa0 <free@plt>
   10238:	mov	x0, x19
   1023c:	ldp	x20, x19, [sp, #16]
   10240:	ldp	x29, x30, [sp], #32
   10244:	b	aaa0 <free@plt>
   10248:	sub	sp, sp, #0x50
   1024c:	stp	x29, x30, [sp, #16]
   10250:	stp	x22, x21, [sp, #48]
   10254:	stp	x20, x19, [sp, #64]
   10258:	ldr	x8, [x0, #32]
   1025c:	ldr	x9, [x1, #32]
   10260:	ldr	w11, [x0, #24]
   10264:	ldr	w10, [x1, #24]
   10268:	str	x23, [sp, #32]
   1026c:	cmp	x8, x9
   10270:	add	x29, sp, #0x10
   10274:	b.eq	10324 <argp_failure@@Base+0x1064>  // b.none
   10278:	cbz	x8, 1029c <argp_failure@@Base+0xfdc>
   1027c:	cbz	x9, 102bc <argp_failure@@Base+0xffc>
   10280:	ldr	w10, [x8, #32]
   10284:	ldr	w11, [x9, #32]
   10288:	cmp	w10, w11
   1028c:	b.le	102e4 <argp_failure@@Base+0x1024>
   10290:	ldr	x8, [x8, #16]
   10294:	ldr	w10, [x8, #32]
   10298:	b	10288 <argp_failure@@Base+0xfc8>
   1029c:	mov	x8, x9
   102a0:	ldr	x9, [x9, #16]
   102a4:	cbnz	x9, 1029c <argp_failure@@Base+0xfdc>
   102a8:	ldr	w8, [x8, #12]
   102ac:	subs	w0, w11, w8
   102b0:	b.ne	10470 <argp_failure@@Base+0x11b0>  // b.any
   102b4:	mov	w0, #0xffffffff            	// #-1
   102b8:	b	104f0 <argp_failure@@Base+0x1230>
   102bc:	mov	x9, x8
   102c0:	ldr	x8, [x8, #16]
   102c4:	cbnz	x8, 102bc <argp_failure@@Base+0xffc>
   102c8:	ldr	w8, [x9, #12]
   102cc:	subs	w0, w8, w10
   102d0:	b.ne	10488 <argp_failure@@Base+0x11c8>  // b.any
   102d4:	mov	w0, #0x1                   	// #1
   102d8:	b	104f0 <argp_failure@@Base+0x1230>
   102dc:	ldr	x9, [x9, #16]
   102e0:	ldr	w11, [x9, #32]
   102e4:	cmp	w11, w10
   102e8:	b.gt	102dc <argp_failure@@Base+0x101c>
   102ec:	mov	x11, x9
   102f0:	mov	x10, x8
   102f4:	ldr	x8, [x8, #16]
   102f8:	ldr	x9, [x9, #16]
   102fc:	cmp	x8, x9
   10300:	b.ne	102ec <argp_failure@@Base+0x102c>  // b.any
   10304:	ldr	w8, [x10, #12]
   10308:	ldr	w9, [x11, #12]
   1030c:	subs	w0, w8, w9
   10310:	b.ne	10458 <argp_failure@@Base+0x1198>  // b.any
   10314:	ldr	w8, [x11, #8]
   10318:	ldr	w9, [x10, #8]
   1031c:	sub	w0, w8, w9
   10320:	b	104f0 <argp_failure@@Base+0x1230>
   10324:	mov	x20, x0
   10328:	subs	w0, w11, w10
   1032c:	b.ne	10440 <argp_failure@@Base+0x1180>  // b.any
   10330:	ldr	x8, [x20, #40]
   10334:	adrp	x22, 10000 <argp_failure@@Base+0xd40>
   10338:	add	x22, x22, #0x66c
   1033c:	mov	x21, x1
   10340:	ldr	x2, [x8, #48]
   10344:	mov	x0, x20
   10348:	mov	x1, x22
   1034c:	mov	x3, xzr
   10350:	bl	10590 <argp_failure@@Base+0x12d0>
   10354:	ldr	x8, [x21, #40]
   10358:	mov	w19, w0
   1035c:	mov	x0, x21
   10360:	mov	x1, x22
   10364:	ldr	x2, [x8, #48]
   10368:	mov	x3, xzr
   1036c:	bl	10590 <argp_failure@@Base+0x12d0>
   10370:	ldr	x11, [x20]
   10374:	ldr	x9, [x21]
   10378:	ldr	w12, [x20, #8]
   1037c:	mov	w20, w0
   10380:	ldr	w8, [x11, #24]
   10384:	ldr	w22, [x9, #24]
   10388:	cbz	w12, 103a8 <argp_failure@@Base+0x10e8>
   1038c:	ldr	x10, [x11]
   10390:	cbz	x10, 1039c <argp_failure@@Base+0x10dc>
   10394:	ldrb	w13, [x11, #24]
   10398:	tbz	w13, #1, 103ac <argp_failure@@Base+0x10ec>
   1039c:	subs	w12, w12, #0x1
   103a0:	add	x11, x11, #0x30
   103a4:	b.ne	1038c <argp_failure@@Base+0x10cc>  // b.any
   103a8:	mov	x10, xzr
   103ac:	str	x10, [x29, #24]
   103b0:	ldr	w11, [x21, #8]
   103b4:	cbz	w11, 103d4 <argp_failure@@Base+0x1114>
   103b8:	ldr	x21, [x9]
   103bc:	cbz	x21, 103c8 <argp_failure@@Base+0x1108>
   103c0:	ldrb	w12, [x9, #24]
   103c4:	tbz	w12, #1, 103d8 <argp_failure@@Base+0x1118>
   103c8:	subs	w11, w11, #0x1
   103cc:	add	x9, x9, #0x30
   103d0:	b.ne	103b8 <argp_failure@@Base+0x10f8>  // b.any
   103d4:	mov	x21, xzr
   103d8:	mov	w23, wzr
   103dc:	str	x21, [sp, #8]
   103e0:	tbz	w8, #3, 103f8 <argp_failure@@Base+0x1138>
   103e4:	cbz	x10, 103f8 <argp_failure@@Base+0x1138>
   103e8:	add	x0, x29, #0x18
   103ec:	bl	10508 <argp_failure@@Base+0x1248>
   103f0:	cmp	w0, #0x0
   103f4:	cset	w23, ne  // ne = any
   103f8:	mov	w8, wzr
   103fc:	tbz	w22, #3, 10414 <argp_failure@@Base+0x1154>
   10400:	cbz	x21, 10414 <argp_failure@@Base+0x1154>
   10404:	add	x0, sp, #0x8
   10408:	bl	10508 <argp_failure@@Base+0x1248>
   1040c:	cmp	w0, #0x0
   10410:	cset	w8, ne  // ne = any
   10414:	subs	w0, w23, w8
   10418:	b.ne	104f0 <argp_failure@@Base+0x1230>  // b.any
   1041c:	ldr	x0, [x29, #24]
   10420:	ldr	x1, [sp, #8]
   10424:	orr	w8, w20, w19
   10428:	tst	w8, #0xff
   1042c:	b.ne	104a0 <argp_failure@@Base+0x11e0>  // b.any
   10430:	cbz	x0, 104a0 <argp_failure@@Base+0x11e0>
   10434:	cbz	x1, 104a0 <argp_failure@@Base+0x11e0>
   10438:	bl	a840 <strcasecmp@plt>
   1043c:	b	104f0 <argp_failure@@Base+0x1230>
   10440:	tst	w10, w11
   10444:	b.lt	104f0 <argp_failure@@Base+0x1230>  // b.tstop
   10448:	orr	w8, w10, w11
   1044c:	tbz	w8, #31, 104f0 <argp_failure@@Base+0x1230>
   10450:	sub	w0, w10, w11
   10454:	b	104f0 <argp_failure@@Base+0x1230>
   10458:	tst	w9, w8
   1045c:	b.lt	104f0 <argp_failure@@Base+0x1230>  // b.tstop
   10460:	orr	w10, w9, w8
   10464:	tbz	w10, #31, 104f0 <argp_failure@@Base+0x1230>
   10468:	sub	w0, w9, w8
   1046c:	b	104f0 <argp_failure@@Base+0x1230>
   10470:	tst	w8, w11
   10474:	b.lt	104f0 <argp_failure@@Base+0x1230>  // b.tstop
   10478:	orr	w9, w8, w11
   1047c:	tbz	w9, #31, 104f0 <argp_failure@@Base+0x1230>
   10480:	sub	w0, w8, w11
   10484:	b	104f0 <argp_failure@@Base+0x1230>
   10488:	tst	w8, w10
   1048c:	b.lt	104f0 <argp_failure@@Base+0x1230>  // b.tstop
   10490:	orr	w9, w8, w10
   10494:	tbz	w9, #31, 104f0 <argp_failure@@Base+0x1230>
   10498:	sub	w0, w10, w8
   1049c:	b	104f0 <argp_failure@@Base+0x1230>
   104a0:	tst	w19, #0xff
   104a4:	b.ne	104b0 <argp_failure@@Base+0x11f0>  // b.any
   104a8:	cbz	x0, 104b0 <argp_failure@@Base+0x11f0>
   104ac:	ldrb	w19, [x0]
   104b0:	tst	w20, #0xff
   104b4:	b.ne	104c8 <argp_failure@@Base+0x1208>  // b.any
   104b8:	cbz	x1, 104c4 <argp_failure@@Base+0x1204>
   104bc:	ldrb	w20, [x1]
   104c0:	b	104c8 <argp_failure@@Base+0x1208>
   104c4:	mov	w20, wzr
   104c8:	bl	a580 <__ctype_tolower_loc@plt>
   104cc:	ldr	x8, [x0]
   104d0:	and	x9, x19, #0xff
   104d4:	and	x10, x20, #0xff
   104d8:	ldr	w9, [x8, x9, lsl #2]
   104dc:	ldr	w8, [x8, x10, lsl #2]
   104e0:	and	w10, w20, #0xff
   104e4:	subs	w8, w9, w8
   104e8:	sub	w9, w10, w19, uxtb
   104ec:	csel	w0, w9, w8, eq  // eq = none
   104f0:	ldp	x20, x19, [sp, #64]
   104f4:	ldp	x22, x21, [sp, #48]
   104f8:	ldr	x23, [sp, #32]
   104fc:	ldp	x29, x30, [sp, #16]
   10500:	add	sp, sp, #0x50
   10504:	ret
   10508:	stp	x29, x30, [sp, #-32]!
   1050c:	str	x19, [sp, #16]
   10510:	mov	x29, sp
   10514:	mov	x19, x0
   10518:	bl	aa30 <__ctype_b_loc@plt>
   1051c:	ldr	x11, [x19]
   10520:	ldr	x9, [x0]
   10524:	ldrb	w10, [x11]
   10528:	ldrh	w8, [x9, x10, lsl #1]
   1052c:	tbz	w8, #13, 1054c <argp_failure@@Base+0x128c>
   10530:	add	x8, x11, #0x1
   10534:	str	x8, [x19]
   10538:	ldr	x9, [x0]
   1053c:	ldrb	w10, [x8], #1
   10540:	ldrh	w11, [x9, x10, lsl #1]
   10544:	tbnz	w11, #13, 10534 <argp_failure@@Base+0x1274>
   10548:	sub	x11, x8, #0x1
   1054c:	cmp	w10, #0x2d
   10550:	cset	w8, ne  // ne = any
   10554:	cbz	w10, 10580 <argp_failure@@Base+0x12c0>
   10558:	ldrh	w9, [x9, w10, uxtw #1]
   1055c:	tbnz	w9, #3, 10580 <argp_failure@@Base+0x12c0>
   10560:	add	x9, x11, #0x1
   10564:	str	x9, [x19]
   10568:	ldrb	w10, [x9]
   1056c:	cbz	x10, 10580 <argp_failure@@Base+0x12c0>
   10570:	ldr	x11, [x0]
   10574:	add	x9, x9, #0x1
   10578:	ldrh	w10, [x11, x10, lsl #1]
   1057c:	tbz	w10, #3, 10564 <argp_failure@@Base+0x12a4>
   10580:	ldr	x19, [sp, #16]
   10584:	mov	w0, w8
   10588:	ldp	x29, x30, [sp], #32
   1058c:	ret
   10590:	stp	x29, x30, [sp, #-96]!
   10594:	stp	x26, x25, [sp, #32]
   10598:	stp	x24, x23, [sp, #48]
   1059c:	stp	x22, x21, [sp, #64]
   105a0:	stp	x20, x19, [sp, #80]
   105a4:	ldr	w8, [x0, #8]
   105a8:	str	x27, [sp, #16]
   105ac:	mov	x29, sp
   105b0:	cbz	w8, 1064c <argp_failure@@Base+0x138c>
   105b4:	ldr	x22, [x0]
   105b8:	ldr	x24, [x0, #16]
   105bc:	mov	x19, x3
   105c0:	mov	x20, x2
   105c4:	mov	x21, x1
   105c8:	sub	w25, w8, #0x1
   105cc:	mov	x23, x22
   105d0:	ldr	w26, [x23, #24]
   105d4:	tbnz	w26, #3, 10628 <argp_failure@@Base+0x1368>
   105d8:	ldr	w27, [x23, #8]
   105dc:	sub	w8, w27, #0x1
   105e0:	cmp	w8, #0xfe
   105e4:	b.hi	10628 <argp_failure@@Base+0x1368>  // b.pmore
   105e8:	bl	aa30 <__ctype_b_loc@plt>
   105ec:	ldr	x8, [x0]
   105f0:	ldrh	w8, [x8, x27, lsl #1]
   105f4:	tbz	w8, #14, 10628 <argp_failure@@Base+0x1368>
   105f8:	ldrb	w8, [x24]
   105fc:	cmp	w27, w8
   10600:	b.ne	10628 <argp_failure@@Base+0x1368>  // b.any
   10604:	tst	w26, #0x4
   10608:	csel	x22, x23, x22, eq  // eq = none
   1060c:	tbnz	w26, #1, 10640 <argp_failure@@Base+0x1380>
   10610:	mov	x0, x23
   10614:	mov	x1, x22
   10618:	mov	x2, x20
   1061c:	mov	x3, x19
   10620:	blr	x21
   10624:	b	10644 <argp_failure@@Base+0x1384>
   10628:	mov	w0, wzr
   1062c:	subs	w25, w25, #0x1
   10630:	b.cc	10650 <argp_failure@@Base+0x1390>  // b.lo, b.ul, b.last
   10634:	add	x23, x23, #0x30
   10638:	cbz	w0, 105d0 <argp_failure@@Base+0x1310>
   1063c:	b	10650 <argp_failure@@Base+0x1390>
   10640:	mov	w0, wzr
   10644:	add	x24, x24, #0x1
   10648:	b	1062c <argp_failure@@Base+0x136c>
   1064c:	mov	w0, wzr
   10650:	ldp	x20, x19, [sp, #80]
   10654:	ldp	x22, x21, [sp, #64]
   10658:	ldp	x24, x23, [sp, #48]
   1065c:	ldp	x26, x25, [sp, #32]
   10660:	ldr	x27, [sp, #16]
   10664:	ldp	x29, x30, [sp], #96
   10668:	ret
   1066c:	stp	x29, x30, [sp, #-32]!
   10670:	ldrb	w8, [x0, #24]
   10674:	str	x19, [sp, #16]
   10678:	mov	x29, sp
   1067c:	tbnz	w8, #3, 106a8 <argp_failure@@Base+0x13e8>
   10680:	ldr	w19, [x0, #8]
   10684:	sub	w8, w19, #0x1
   10688:	cmp	w8, #0xfe
   1068c:	b.hi	106a8 <argp_failure@@Base+0x13e8>  // b.pmore
   10690:	bl	aa30 <__ctype_b_loc@plt>
   10694:	ldr	x8, [x0]
   10698:	ldrh	w8, [x8, x19, lsl #1]
   1069c:	lsl	w8, w8, #17
   106a0:	and	w0, w19, w8, asr #31
   106a4:	b	106ac <argp_failure@@Base+0x13ec>
   106a8:	mov	w0, wzr
   106ac:	ldr	x19, [sp, #16]
   106b0:	ldp	x29, x30, [sp], #32
   106b4:	ret
   106b8:	ldr	x8, [x0, #16]
   106bc:	cbnz	x8, 106ec <argp_failure@@Base+0x142c>
   106c0:	ldr	x8, [x1, #16]
   106c4:	cbnz	x8, 106ec <argp_failure@@Base+0x142c>
   106c8:	ldr	w8, [x0, #24]
   106cc:	ldr	w9, [x1, #24]
   106d0:	orr	w8, w9, w8
   106d4:	tbnz	w8, #4, 106ec <argp_failure@@Base+0x142c>
   106d8:	ldr	x8, [x3]
   106dc:	ldr	w9, [x0, #8]
   106e0:	add	x10, x8, #0x1
   106e4:	str	x10, [x3]
   106e8:	strb	w9, [x8]
   106ec:	mov	w0, wzr
   106f0:	ret
   106f4:	stp	x29, x30, [sp, #-48]!
   106f8:	stp	x22, x21, [sp, #16]
   106fc:	stp	x20, x19, [sp, #32]
   10700:	mov	x9, x1
   10704:	ldr	w10, [x0, #24]
   10708:	ldr	w11, [x9, #24]
   1070c:	ldr	x1, [x0, #16]
   10710:	mov	x19, x3
   10714:	mov	x8, x2
   10718:	mov	x20, x0
   1071c:	orr	w22, w11, w10
   10720:	mov	x29, sp
   10724:	cbnz	x1, 1072c <argp_failure@@Base+0x146c>
   10728:	ldr	x1, [x9, #16]
   1072c:	tbnz	w22, #4, 10780 <argp_failure@@Base+0x14c0>
   10730:	cbz	x1, 10780 <argp_failure@@Base+0x14c0>
   10734:	mov	w2, #0x5                   	// #5
   10738:	mov	x0, x8
   1073c:	bl	adc0 <dcgettext@plt>
   10740:	mov	x21, x0
   10744:	tbnz	w22, #0, 10768 <argp_failure@@Base+0x14a8>
   10748:	mov	x0, x21
   1074c:	bl	a370 <strlen@plt>
   10750:	add	x1, x0, #0x6
   10754:	mov	x0, x19
   10758:	bl	10794 <argp_failure@@Base+0x14d4>
   1075c:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
   10760:	add	x1, x1, #0xef7
   10764:	b	10770 <argp_failure@@Base+0x14b0>
   10768:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
   1076c:	add	x1, x1, #0xeec
   10770:	ldr	w2, [x20, #8]
   10774:	mov	x0, x19
   10778:	mov	x3, x21
   1077c:	bl	a970 <argp_fmtstream_printf@plt>
   10780:	ldp	x20, x19, [sp, #32]
   10784:	ldp	x22, x21, [sp, #16]
   10788:	mov	w0, wzr
   1078c:	ldp	x29, x30, [sp], #48
   10790:	ret
   10794:	stp	x29, x30, [sp, #-32]!
   10798:	stp	x20, x19, [sp, #16]
   1079c:	ldp	x9, x8, [x0, #48]
   107a0:	ldr	x10, [x0, #32]
   107a4:	mov	x19, x0
   107a8:	mov	x20, x1
   107ac:	sub	x9, x8, x9
   107b0:	cmp	x9, x10
   107b4:	mov	x29, sp
   107b8:	b.ls	107c8 <argp_failure@@Base+0x1508>  // b.plast
   107bc:	mov	x0, x19
   107c0:	bl	a570 <_argp_fmtstream_update@plt>
   107c4:	ldr	x8, [x19, #56]
   107c8:	ldr	x9, [x19, #40]
   107cc:	ldr	x10, [x19, #16]
   107d0:	bic	x11, x9, x9, asr #63
   107d4:	ldr	x9, [x19, #64]
   107d8:	add	x11, x11, x20
   107dc:	cmp	x11, x10
   107e0:	b.cs	1080c <argp_failure@@Base+0x154c>  // b.hs, b.nlast
   107e4:	cmp	x8, x9
   107e8:	b.cc	10800 <argp_failure@@Base+0x1540>  // b.lo, b.ul, b.last
   107ec:	mov	w1, #0x1                   	// #1
   107f0:	mov	x0, x19
   107f4:	bl	ada0 <_argp_fmtstream_ensure@plt>
   107f8:	cbz	w0, 10838 <argp_failure@@Base+0x1578>
   107fc:	ldr	x8, [x19, #56]
   10800:	add	x9, x8, #0x1
   10804:	mov	w10, #0x20                  	// #32
   10808:	b	10830 <argp_failure@@Base+0x1570>
   1080c:	cmp	x8, x9
   10810:	b.cc	10828 <argp_failure@@Base+0x1568>  // b.lo, b.ul, b.last
   10814:	mov	w1, #0x1                   	// #1
   10818:	mov	x0, x19
   1081c:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10820:	cbz	w0, 10838 <argp_failure@@Base+0x1578>
   10824:	ldr	x8, [x19, #56]
   10828:	add	x9, x8, #0x1
   1082c:	mov	w10, #0xa                   	// #10
   10830:	str	x9, [x19, #56]
   10834:	strb	w10, [x8]
   10838:	ldp	x20, x19, [sp, #16]
   1083c:	ldp	x29, x30, [sp], #32
   10840:	ret
   10844:	stp	x29, x30, [sp, #-64]!
   10848:	stp	x22, x21, [sp, #32]
   1084c:	stp	x20, x19, [sp, #48]
   10850:	ldr	w8, [x1, #24]
   10854:	mov	x19, x1
   10858:	mov	w20, w0
   1085c:	str	x23, [sp, #16]
   10860:	mov	x29, sp
   10864:	cbz	w8, 10948 <argp_failure@@Base+0x1688>
   10868:	ldr	x9, [x19, #16]
   1086c:	ldr	x8, [x19]
   10870:	ldr	x23, [x9]
   10874:	ldr	x22, [x8, #32]
   10878:	cbz	x23, 108c8 <argp_failure@@Base+0x1608>
   1087c:	ldr	w9, [x9, #8]
   10880:	cbz	w9, 108c8 <argp_failure@@Base+0x1608>
   10884:	ldr	w8, [x8, #24]
   10888:	ldr	w9, [x23, #24]
   1088c:	cmp	w8, w9
   10890:	b.eq	108c8 <argp_failure@@Base+0x1608>  // b.none
   10894:	ldr	x21, [x19, #8]
   10898:	ldp	x8, x9, [x21, #56]
   1089c:	cmp	x8, x9
   108a0:	b.cc	108b8 <argp_failure@@Base+0x15f8>  // b.lo, b.ul, b.last
   108a4:	mov	w1, #0x1                   	// #1
   108a8:	mov	x0, x21
   108ac:	bl	ada0 <_argp_fmtstream_ensure@plt>
   108b0:	cbz	w0, 108c8 <argp_failure@@Base+0x1608>
   108b4:	ldr	x8, [x21, #56]
   108b8:	add	x9, x8, #0x1
   108bc:	mov	w10, #0xa                   	// #10
   108c0:	str	x9, [x21, #56]
   108c4:	strb	w10, [x8]
   108c8:	cbz	x22, 10940 <argp_failure@@Base+0x1680>
   108cc:	ldr	x0, [x22]
   108d0:	cbz	x0, 10940 <argp_failure@@Base+0x1680>
   108d4:	ldrb	w8, [x0]
   108d8:	cbz	w8, 10940 <argp_failure@@Base+0x1680>
   108dc:	cbz	x23, 10908 <argp_failure@@Base+0x1648>
   108e0:	ldr	x8, [x23, #32]
   108e4:	cmp	x8, x22
   108e8:	b.eq	10940 <argp_failure@@Base+0x1680>  // b.none
   108ec:	cbz	x8, 10900 <argp_failure@@Base+0x1640>
   108f0:	ldr	x8, [x8, #16]
   108f4:	cmp	x8, x22
   108f8:	b.eq	10900 <argp_failure@@Base+0x1640>  // b.none
   108fc:	cbnz	x8, 108f0 <argp_failure@@Base+0x1630>
   10900:	cmp	x8, x22
   10904:	b.eq	10940 <argp_failure@@Base+0x1680>  // b.none
   10908:	ldr	x8, [x19, #8]
   1090c:	ldr	x1, [x22, #24]
   10910:	mov	x2, x19
   10914:	ldrsw	x23, [x8, #24]
   10918:	bl	10a08 <argp_failure@@Base+0x1748>
   1091c:	ldr	x21, [x19, #8]
   10920:	ldp	x9, x8, [x21, #48]
   10924:	ldr	x10, [x21, #32]
   10928:	sub	x8, x8, x9
   1092c:	cmp	x8, x10
   10930:	b.ls	1093c <argp_failure@@Base+0x167c>  // b.plast
   10934:	mov	x0, x21
   10938:	bl	a570 <_argp_fmtstream_update@plt>
   1093c:	str	x23, [x21, #24]
   10940:	str	wzr, [x19, #24]
   10944:	b	10984 <argp_failure@@Base+0x16c4>
   10948:	ldr	x21, [x19, #8]
   1094c:	ldp	x8, x9, [x21, #56]
   10950:	add	x10, x8, #0x2
   10954:	cmp	x10, x9
   10958:	b.ls	10970 <argp_failure@@Base+0x16b0>  // b.plast
   1095c:	mov	w1, #0x2                   	// #2
   10960:	mov	x0, x21
   10964:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10968:	cbz	w0, 10984 <argp_failure@@Base+0x16c4>
   1096c:	ldr	x8, [x21, #56]
   10970:	mov	w9, #0x202c                	// #8236
   10974:	strh	w9, [x8]
   10978:	ldr	x8, [x21, #56]
   1097c:	add	x8, x8, #0x2
   10980:	str	x8, [x21, #56]
   10984:	ldr	x0, [x19, #8]
   10988:	mov	w1, w20
   1098c:	ldp	x20, x19, [sp, #48]
   10990:	ldp	x22, x21, [sp, #32]
   10994:	ldr	x23, [sp, #16]
   10998:	ldp	x29, x30, [sp], #64
   1099c:	b	10c34 <argp_failure@@Base+0x1974>
   109a0:	stp	x29, x30, [sp, #-48]!
   109a4:	stp	x22, x21, [sp, #16]
   109a8:	stp	x20, x19, [sp, #32]
   109ac:	ldr	x8, [x0, #16]
   109b0:	mov	x29, sp
   109b4:	cbz	x8, 109f8 <argp_failure@@Base+0x1738>
   109b8:	ldr	w22, [x0, #24]
   109bc:	mov	x20, x2
   109c0:	mov	x21, x1
   109c4:	mov	w2, #0x5                   	// #5
   109c8:	mov	x0, x3
   109cc:	mov	x1, x8
   109d0:	mov	x19, x4
   109d4:	bl	adc0 <dcgettext@plt>
   109d8:	tst	w22, #0x1
   109dc:	csel	x1, x21, x20, eq  // eq = none
   109e0:	mov	x2, x0
   109e4:	mov	x0, x19
   109e8:	ldp	x20, x19, [sp, #32]
   109ec:	ldp	x22, x21, [sp, #16]
   109f0:	ldp	x29, x30, [sp], #48
   109f4:	b	a970 <argp_fmtstream_printf@plt>
   109f8:	ldp	x20, x19, [sp, #32]
   109fc:	ldp	x22, x21, [sp, #16]
   10a00:	ldp	x29, x30, [sp], #48
   10a04:	ret
   10a08:	stp	x29, x30, [sp, #-80]!
   10a0c:	stp	x22, x21, [sp, #48]
   10a10:	stp	x20, x19, [sp, #64]
   10a14:	mov	x19, x2
   10a18:	mov	x22, x1
   10a1c:	str	x25, [sp, #16]
   10a20:	stp	x24, x23, [sp, #32]
   10a24:	mov	x29, sp
   10a28:	cbz	x0, 10a44 <argp_failure@@Base+0x1784>
   10a2c:	mov	x1, x0
   10a30:	ldr	x0, [x22, #48]
   10a34:	mov	w2, #0x5                   	// #5
   10a38:	bl	adc0 <dcgettext@plt>
   10a3c:	mov	x20, x0
   10a40:	b	10a4c <argp_failure@@Base+0x178c>
   10a44:	cbz	x22, 10c1c <argp_failure@@Base+0x195c>
   10a48:	mov	x20, xzr
   10a4c:	ldr	x8, [x22, #40]
   10a50:	mov	x21, x20
   10a54:	cbz	x8, 10a80 <argp_failure@@Base+0x17c0>
   10a58:	ldr	x1, [x19, #32]
   10a5c:	mov	x0, x22
   10a60:	bl	ac80 <_argp_input@plt>
   10a64:	ldr	x8, [x22, #40]
   10a68:	mov	x2, x0
   10a6c:	mov	w0, #0x3                   	// #3
   10a70:	movk	w0, #0x200, lsl #16
   10a74:	mov	x1, x20
   10a78:	blr	x8
   10a7c:	mov	x21, x0
   10a80:	cbz	x21, 10bf8 <argp_failure@@Base+0x1938>
   10a84:	ldrb	w8, [x21]
   10a88:	cbz	w8, 10bec <argp_failure@@Base+0x192c>
   10a8c:	ldr	x8, [x19, #16]
   10a90:	ldr	x8, [x8]
   10a94:	cbz	x8, 10acc <argp_failure@@Base+0x180c>
   10a98:	ldr	x22, [x19, #8]
   10a9c:	ldp	x8, x9, [x22, #56]
   10aa0:	cmp	x8, x9
   10aa4:	b.cc	10abc <argp_failure@@Base+0x17fc>  // b.lo, b.ul, b.last
   10aa8:	mov	w1, #0x1                   	// #1
   10aac:	mov	x0, x22
   10ab0:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10ab4:	cbz	w0, 10acc <argp_failure@@Base+0x180c>
   10ab8:	ldr	x8, [x22, #56]
   10abc:	add	x9, x8, #0x1
   10ac0:	mov	w10, #0xa                   	// #10
   10ac4:	str	x9, [x22, #56]
   10ac8:	strb	w10, [x8]
   10acc:	adrp	x25, 3d000 <base_len@@Base+0x2a06c>
   10ad0:	ldr	x0, [x19, #8]
   10ad4:	ldr	w1, [x25, #1736]
   10ad8:	bl	10c34 <argp_failure@@Base+0x1974>
   10adc:	ldr	x22, [x19, #8]
   10ae0:	ldrsw	x24, [x25, #1736]
   10ae4:	ldp	x10, x9, [x22, #48]
   10ae8:	ldr	x8, [x22, #32]
   10aec:	sub	x9, x9, x10
   10af0:	cmp	x9, x8
   10af4:	b.ls	10b18 <argp_failure@@Base+0x1858>  // b.plast
   10af8:	mov	x0, x22
   10afc:	bl	a570 <_argp_fmtstream_update@plt>
   10b00:	ldr	x23, [x19, #8]
   10b04:	ldrsw	x25, [x25, #1736]
   10b08:	ldp	x10, x9, [x23, #48]
   10b0c:	ldr	x8, [x23, #32]
   10b10:	sub	x9, x9, x10
   10b14:	b	10b20 <argp_failure@@Base+0x1860>
   10b18:	mov	x25, x24
   10b1c:	mov	x23, x22
   10b20:	cmp	x9, x8
   10b24:	str	x24, [x22, #8]
   10b28:	mov	x22, x23
   10b2c:	b.ls	10b3c <argp_failure@@Base+0x187c>  // b.plast
   10b30:	mov	x0, x23
   10b34:	bl	a570 <_argp_fmtstream_update@plt>
   10b38:	ldr	x22, [x19, #8]
   10b3c:	mov	x0, x21
   10b40:	str	x25, [x23, #24]
   10b44:	bl	a370 <strlen@plt>
   10b48:	cbz	x0, 10b8c <argp_failure@@Base+0x18cc>
   10b4c:	mov	x23, x0
   10b50:	ldp	x0, x8, [x22, #56]
   10b54:	add	x9, x0, x23
   10b58:	cmp	x9, x8
   10b5c:	b.ls	10b74 <argp_failure@@Base+0x18b4>  // b.plast
   10b60:	mov	x0, x22
   10b64:	mov	x1, x23
   10b68:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10b6c:	cbz	w0, 10b8c <argp_failure@@Base+0x18cc>
   10b70:	ldr	x0, [x22, #56]
   10b74:	mov	x1, x21
   10b78:	mov	x2, x23
   10b7c:	bl	a2f0 <memcpy@plt>
   10b80:	ldr	x8, [x22, #56]
   10b84:	add	x8, x8, x23
   10b88:	str	x8, [x22, #56]
   10b8c:	ldr	x23, [x19, #8]
   10b90:	ldp	x9, x8, [x23, #48]
   10b94:	ldr	x10, [x23, #32]
   10b98:	mov	x22, x23
   10b9c:	sub	x9, x8, x9
   10ba0:	cmp	x9, x10
   10ba4:	b.ls	10bb8 <argp_failure@@Base+0x18f8>  // b.plast
   10ba8:	mov	x0, x23
   10bac:	bl	a570 <_argp_fmtstream_update@plt>
   10bb0:	ldr	x22, [x19, #8]
   10bb4:	ldr	x8, [x22, #56]
   10bb8:	str	xzr, [x23, #8]
   10bbc:	ldr	x9, [x22, #64]
   10bc0:	cmp	x8, x9
   10bc4:	b.cc	10bdc <argp_failure@@Base+0x191c>  // b.lo, b.ul, b.last
   10bc8:	mov	w1, #0x1                   	// #1
   10bcc:	mov	x0, x22
   10bd0:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10bd4:	cbz	w0, 10bec <argp_failure@@Base+0x192c>
   10bd8:	ldr	x8, [x22, #56]
   10bdc:	add	x9, x8, #0x1
   10be0:	mov	w10, #0xa                   	// #10
   10be4:	str	x9, [x22, #56]
   10be8:	strb	w10, [x8]
   10bec:	ldr	x8, [x19, #16]
   10bf0:	mov	w9, #0x1                   	// #1
   10bf4:	str	w9, [x8, #8]
   10bf8:	cmp	x21, x20
   10bfc:	b.eq	10c1c <argp_failure@@Base+0x195c>  // b.none
   10c00:	mov	x0, x21
   10c04:	ldp	x20, x19, [sp, #64]
   10c08:	ldp	x22, x21, [sp, #48]
   10c0c:	ldp	x24, x23, [sp, #32]
   10c10:	ldr	x25, [sp, #16]
   10c14:	ldp	x29, x30, [sp], #80
   10c18:	b	aaa0 <free@plt>
   10c1c:	ldp	x20, x19, [sp, #64]
   10c20:	ldp	x22, x21, [sp, #48]
   10c24:	ldp	x24, x23, [sp, #32]
   10c28:	ldr	x25, [sp, #16]
   10c2c:	ldp	x29, x30, [sp], #80
   10c30:	ret
   10c34:	stp	x29, x30, [sp, #-48]!
   10c38:	str	x21, [sp, #16]
   10c3c:	stp	x20, x19, [sp, #32]
   10c40:	ldp	x9, x8, [x0, #48]
   10c44:	ldr	x10, [x0, #32]
   10c48:	mov	x19, x0
   10c4c:	mov	w20, w1
   10c50:	sub	x8, x8, x9
   10c54:	cmp	x8, x10
   10c58:	mov	x29, sp
   10c5c:	b.ls	10c68 <argp_failure@@Base+0x19a8>  // b.plast
   10c60:	mov	x0, x19
   10c64:	bl	a570 <_argp_fmtstream_update@plt>
   10c68:	ldr	x8, [x19, #40]
   10c6c:	cmp	x8, #0x0
   10c70:	csel	w8, w8, wzr, gt
   10c74:	sub	w8, w20, w8
   10c78:	cmp	w8, #0x1
   10c7c:	b.lt	10cc0 <argp_failure@@Base+0x1a00>  // b.tstop
   10c80:	add	w20, w8, #0x1
   10c84:	mov	w21, #0x20                  	// #32
   10c88:	ldp	x8, x9, [x19, #56]
   10c8c:	cmp	x8, x9
   10c90:	b.cc	10ca8 <argp_failure@@Base+0x19e8>  // b.lo, b.ul, b.last
   10c94:	mov	w1, #0x1                   	// #1
   10c98:	mov	x0, x19
   10c9c:	bl	ada0 <_argp_fmtstream_ensure@plt>
   10ca0:	cbz	w0, 10cb4 <argp_failure@@Base+0x19f4>
   10ca4:	ldr	x8, [x19, #56]
   10ca8:	add	x9, x8, #0x1
   10cac:	str	x9, [x19, #56]
   10cb0:	strb	w21, [x8]
   10cb4:	sub	w20, w20, #0x1
   10cb8:	cmp	w20, #0x1
   10cbc:	b.gt	10c88 <argp_failure@@Base+0x19c8>
   10cc0:	ldp	x20, x19, [sp, #32]
   10cc4:	ldr	x21, [sp, #16]
   10cc8:	ldp	x29, x30, [sp], #48
   10ccc:	ret

0000000000010cd0 <argp_parse@@Base>:
   10cd0:	stp	x29, x30, [sp, #-96]!
   10cd4:	stp	x28, x27, [sp, #16]
   10cd8:	stp	x26, x25, [sp, #32]
   10cdc:	stp	x24, x23, [sp, #48]
   10ce0:	stp	x22, x21, [sp, #64]
   10ce4:	stp	x20, x19, [sp, #80]
   10ce8:	mov	x29, sp
   10cec:	sub	sp, sp, #0x180
   10cf0:	mov	x19, sp
   10cf4:	mov	x28, x4
   10cf8:	mov	w24, w3
   10cfc:	mov	x21, x2
   10d00:	mov	x25, x0
   10d04:	str	x5, [x19, #16]
   10d08:	str	w1, [x19, #28]
   10d0c:	tbnz	w3, #0, 10d44 <argp_parse@@Base+0x74>
   10d10:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   10d14:	ldr	x8, [x8, #3768]
   10d18:	ldr	x9, [x8]
   10d1c:	cbnz	x9, 10d28 <argp_parse@@Base+0x58>
   10d20:	ldr	x9, [x21]
   10d24:	str	x9, [x8]
   10d28:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
   10d2c:	ldr	x20, [x20, #4008]
   10d30:	ldr	x8, [x20]
   10d34:	cbnz	x8, 10d44 <argp_parse@@Base+0x74>
   10d38:	ldr	x0, [x21]
   10d3c:	bl	a800 <last_component@plt>
   10d40:	str	x0, [x20]
   10d44:	add	x22, x19, #0x28
   10d48:	tbnz	w24, #4, 10de0 <argp_parse@@Base+0x110>
   10d4c:	mov	x10, sp
   10d50:	sub	x8, x10, #0x80
   10d54:	mov	sp, x8
   10d58:	mov	x11, sp
   10d5c:	sub	x9, x11, #0x40
   10d60:	mov	sp, x9
   10d64:	movi	v0.2d, #0x0
   10d68:	stur	xzr, [x11, #-16]
   10d6c:	stp	q0, q0, [x11, #-48]
   10d70:	stur	q0, [x11, #-64]
   10d74:	stur	x8, [x11, #-32]
   10d78:	stp	q0, q0, [x10, #-32]
   10d7c:	stp	q0, q0, [x10, #-64]
   10d80:	stp	q0, q0, [x10, #-96]
   10d84:	stp	q0, q0, [x10, #-128]
   10d88:	cbz	x25, 10d90 <argp_parse@@Base+0xc0>
   10d8c:	str	x25, [x8], #32
   10d90:	adrp	x10, 3c000 <vasnprintf@@Base+0x14944>
   10d94:	ldr	x10, [x10, #3936]
   10d98:	adrp	x11, 3c000 <vasnprintf@@Base+0x14944>
   10d9c:	add	x11, x11, #0x780
   10da0:	str	x11, [x8]
   10da4:	ldr	x10, [x10]
   10da8:	cbnz	x10, 10dc4 <argp_parse@@Base+0xf4>
   10dac:	adrp	x10, 3c000 <vasnprintf@@Base+0x14944>
   10db0:	ldr	x10, [x10, #4056]
   10db4:	ldr	x10, [x10]
   10db8:	cbnz	x10, 10dc4 <argp_parse@@Base+0xf4>
   10dbc:	mov	w10, #0x1                   	// #1
   10dc0:	b	10dd4 <argp_parse@@Base+0x104>
   10dc4:	adrp	x10, 3c000 <vasnprintf@@Base+0x14944>
   10dc8:	add	x10, x10, #0x7b8
   10dcc:	str	x10, [x8, #32]
   10dd0:	mov	w10, #0x2                   	// #2
   10dd4:	lsl	x10, x10, #5
   10dd8:	mov	x25, x9
   10ddc:	str	xzr, [x8, x10]
   10de0:	mov	w8, #0x1                   	// #1
   10de4:	movi	v0.2d, #0x0
   10de8:	bic	w8, w8, w24, lsr #2
   10dec:	stur	q0, [x22, #248]
   10df0:	stur	q0, [x22, #232]
   10df4:	stur	q0, [x22, #216]
   10df8:	stp	x8, xzr, [x29, #-80]
   10dfc:	stp	xzr, xzr, [x29, #-64]
   10e00:	str	x21, [x19, #32]
   10e04:	cbz	x25, 10e38 <argp_parse@@Base+0x168>
   10e08:	sub	x1, x29, #0x50
   10e0c:	mov	x0, x25
   10e10:	bl	11984 <_argp_input@@Base+0x1ec>
   10e14:	ldp	x9, x10, [x29, #-64]
   10e18:	ldp	x8, x11, [x29, #-80]
   10e1c:	mov	w12, #0x48                  	// #72
   10e20:	mul	x9, x9, x12
   10e24:	lsl	x27, x10, #3
   10e28:	lsl	x10, x11, #5
   10e2c:	add	x21, x9, #0x48
   10e30:	add	x9, x10, #0x20
   10e34:	b	10e44 <argp_parse@@Base+0x174>
   10e38:	mov	x27, xzr
   10e3c:	mov	w21, #0x48                  	// #72
   10e40:	mov	w9, #0x20                  	// #32
   10e44:	add	x23, x21, x27
   10e48:	add	x20, x23, x9
   10e4c:	add	x8, x8, x20
   10e50:	add	x0, x8, #0x1
   10e54:	bl	a660 <malloc@plt>
   10e58:	str	x0, [x19, #248]
   10e5c:	cbz	x0, 10ecc <argp_parse@@Base+0x1fc>
   10e60:	ldur	q1, [x22, #216]
   10e64:	ldur	q2, [x22, #232]
   10e68:	ldur	q3, [x22, #248]
   10e6c:	str	x28, [x19, #8]
   10e70:	add	x28, x0, x21
   10e74:	mov	x26, x0
   10e78:	add	x23, x0, x23
   10e7c:	add	x21, x0, x20
   10e80:	movi	v0.2s, #0x1
   10e84:	str	x0, [x19, #120]
   10e88:	mov	x0, x28
   10e8c:	mov	w1, wzr
   10e90:	mov	x2, x27
   10e94:	str	x28, [x19, #136]
   10e98:	stp	x21, x23, [x19, #48]
   10e9c:	str	d0, [x19, #64]
   10ea0:	stur	q1, [x19, #72]
   10ea4:	stur	q2, [x19, #88]
   10ea8:	stur	q3, [x19, #104]
   10eac:	bl	a770 <memset@plt>
   10eb0:	add	x8, x19, #0x28
   10eb4:	stp	x8, x21, [x29, #-48]
   10eb8:	stp	x23, x28, [x29, #-32]
   10ebc:	tbnz	w24, #3, 10ed4 <argp_parse@@Base+0x204>
   10ec0:	tbz	w24, #2, 10ee0 <argp_parse@@Base+0x210>
   10ec4:	mov	w8, #0x2b                  	// #43
   10ec8:	b	10ed8 <argp_parse@@Base+0x208>
   10ecc:	mov	w24, #0xc                   	// #12
   10ed0:	b	116fc <argp_parse@@Base+0xa2c>
   10ed4:	mov	w8, #0x2d                  	// #45
   10ed8:	strb	w8, [x21], #1
   10edc:	stur	x21, [x29, #-40]
   10ee0:	strb	wzr, [x21]
   10ee4:	str	xzr, [x23]
   10ee8:	str	x25, [x19, #40]
   10eec:	cbz	x25, 10f1c <argp_parse@@Base+0x24c>
   10ef0:	sub	x4, x29, #0x30
   10ef4:	mov	x0, x25
   10ef8:	mov	x1, xzr
   10efc:	mov	w2, wzr
   10f00:	mov	x3, x26
   10f04:	bl	11a50 <_argp_input@@Base+0x2b8>
   10f08:	ldr	x8, [x19, #40]
   10f0c:	ldr	x25, [x19, #120]
   10f10:	mov	x26, x0
   10f14:	str	x0, [x19, #128]
   10f18:	b	10f28 <argp_parse@@Base+0x258>
   10f1c:	mov	x8, xzr
   10f20:	mov	x25, x26
   10f24:	str	x26, [x19, #128]
   10f28:	adrp	x10, 3c000 <vasnprintf@@Base+0x14944>
   10f2c:	adrp	x11, 3c000 <vasnprintf@@Base+0x14944>
   10f30:	ldr	w12, [x19, #28]
   10f34:	ldr	x10, [x10, #3816]
   10f38:	ldr	x11, [x11, #3872]
   10f3c:	ldr	x20, [x19, #32]
   10f40:	mov	w27, #0x6                   	// #6
   10f44:	ldr	x10, [x10]
   10f48:	ldr	x11, [x11]
   10f4c:	add	x9, x19, #0x28
   10f50:	movi	v0.2d, #0x0
   10f54:	movk	w27, #0x100, lsl #16
   10f58:	cmp	x25, x26
   10f5c:	stur	q0, [x19, #152]
   10f60:	str	x8, [x19, #152]
   10f64:	mov	w8, #0x1                   	// #1
   10f68:	add	x21, x9, #0x70
   10f6c:	stur	q0, [x19, #168]
   10f70:	str	w12, [x19, #160]
   10f74:	stur	q0, [x19, #184]
   10f78:	stur	q0, [x19, #200]
   10f7c:	str	x20, [x19, #168]
   10f80:	stp	wzr, w24, [x19, #176]
   10f84:	stp	xzr, x10, [x19, #216]
   10f88:	stp	x11, x9, [x19, #232]
   10f8c:	str	w8, [x19, #144]
   10f90:	b.cs	1104c <argp_parse@@Base+0x37c>  // b.hs, b.nlast
   10f94:	ldr	x8, [x19, #16]
   10f98:	mov	w24, wzr
   10f9c:	sub	w23, w27, #0x3
   10fa0:	str	x8, [x25, #48]
   10fa4:	cmp	w24, #0x7
   10fa8:	b.eq	10fb0 <argp_parse@@Base+0x2e0>  // b.none
   10fac:	cbnz	w24, 116fc <argp_parse@@Base+0xa2c>
   10fb0:	ldr	x8, [x25, #32]
   10fb4:	cbz	x8, 10fc8 <argp_parse@@Base+0x2f8>
   10fb8:	ldr	x8, [x8, #56]
   10fbc:	ldr	w9, [x25, #40]
   10fc0:	ldr	x8, [x8, x9, lsl #3]
   10fc4:	str	x8, [x25, #48]
   10fc8:	ldr	x8, [x25]
   10fcc:	cbz	x8, 11008 <argp_parse@@Base+0x338>
   10fd0:	ldr	x9, [x25, #64]
   10fd4:	mov	w0, w23
   10fd8:	mov	x1, xzr
   10fdc:	mov	x2, x21
   10fe0:	str	x9, [x19, #208]
   10fe4:	ldr	q0, [x25, #48]
   10fe8:	stur	q0, [x22, #152]
   10fec:	ldr	w9, [x25, #24]
   10ff0:	str	w9, [x19, #184]
   10ff4:	blr	x8
   10ff8:	ldr	x8, [x19, #208]
   10ffc:	mov	w24, w0
   11000:	str	x8, [x25, #64]
   11004:	b	11030 <argp_parse@@Base+0x360>
   11008:	ldr	x8, [x25, #8]
   1100c:	ldr	x8, [x8, #32]
   11010:	cbz	x8, 1102c <argp_parse@@Base+0x35c>
   11014:	ldr	x8, [x8]
   11018:	cbz	x8, 1102c <argp_parse@@Base+0x35c>
   1101c:	ldp	x8, x9, [x25, #48]
   11020:	str	x8, [x9]
   11024:	ldr	x8, [x25]
   11028:	cbnz	x8, 10fd0 <argp_parse@@Base+0x300>
   1102c:	mov	w24, #0x7                   	// #7
   11030:	ldr	x8, [x19, #128]
   11034:	add	x25, x25, #0x48
   11038:	cmp	x25, x8
   1103c:	b.cc	10fa4 <argp_parse@@Base+0x2d4>  // b.lo, b.ul, b.last
   11040:	cmp	w24, #0x7
   11044:	b.eq	1104c <argp_parse@@Base+0x37c>  // b.none
   11048:	cbnz	w24, 116fc <argp_parse@@Base+0xa2c>
   1104c:	ldr	w8, [x19, #180]
   11050:	tbnz	w8, #1, 11060 <argp_parse@@Base+0x390>
   11054:	mov	w8, #0x1                   	// #1
   11058:	str	w8, [x19, #68]
   1105c:	b	11080 <argp_parse@@Base+0x3b0>
   11060:	str	wzr, [x19, #68]
   11064:	tbz	w8, #0, 11080 <argp_parse@@Base+0x3b0>
   11068:	ldr	x8, [x19, #168]
   1106c:	ldr	w9, [x19, #160]
   11070:	sub	x8, x8, #0x8
   11074:	add	w9, w9, #0x1
   11078:	str	x8, [x19, #168]
   1107c:	str	w9, [x19, #160]
   11080:	ldr	x8, [x19, #168]
   11084:	cmp	x8, x20
   11088:	b.eq	110a0 <argp_parse@@Base+0x3d0>  // b.none
   1108c:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   11090:	ldr	x8, [x8, #4008]
   11094:	ldr	x8, [x8]
   11098:	str	x8, [x19, #216]
   1109c:	b	110b0 <argp_parse@@Base+0x3e0>
   110a0:	ldr	x0, [x20]
   110a4:	cbz	x0, 1108c <argp_parse@@Base+0x3bc>
   110a8:	bl	a800 <last_component@plt>
   110ac:	str	x0, [x19, #216]
   110b0:	add	x8, x19, #0x28
   110b4:	mov	w26, #0xffffffff            	// #-1
   110b8:	add	x23, x8, #0x18
   110bc:	ldr	w8, [x19, #188]
   110c0:	cbz	w8, 110d4 <argp_parse@@Base+0x404>
   110c4:	ldr	w28, [x19, #176]
   110c8:	cmp	w28, w8
   110cc:	b.ge	11168 <argp_parse@@Base+0x498>  // b.tcont
   110d0:	str	wzr, [x19, #188]
   110d4:	ldr	w8, [x19, #144]
   110d8:	ldr	w28, [x19, #176]
   110dc:	cbz	w8, 11168 <argp_parse@@Base+0x498>
   110e0:	ldr	w0, [x19, #160]
   110e4:	ldr	x1, [x19, #168]
   110e8:	ldrb	w8, [x19, #180]
   110ec:	ldp	x2, x3, [x19, #48]
   110f0:	mov	x4, xzr
   110f4:	mov	x5, x23
   110f8:	str	w28, [x19, #64]
   110fc:	str	w26, [x19, #72]
   11100:	tbnz	w8, #6, 1110c <argp_parse@@Base+0x43c>
   11104:	bl	aa20 <_getopt_long_r@plt>
   11108:	b	11110 <argp_parse@@Base+0x440>
   1110c:	bl	a990 <_getopt_long_only_r@plt>
   11110:	ldr	w28, [x19, #64]
   11114:	mov	w25, w0
   11118:	cmn	w0, #0x1
   1111c:	str	w28, [x19, #176]
   11120:	b.eq	1113c <argp_parse@@Base+0x46c>  // b.none
   11124:	cmp	w25, #0x3f
   11128:	b.eq	112cc <argp_parse@@Base+0x5fc>  // b.none
   1112c:	cmp	w25, #0x1
   11130:	b.ne	112dc <argp_parse@@Base+0x60c>  // b.any
   11134:	ldr	x25, [x19, #80]
   11138:	b	11194 <argp_parse@@Base+0x4c4>
   1113c:	cmp	w28, #0x2
   11140:	str	wzr, [x19, #144]
   11144:	b.lt	11168 <argp_parse@@Base+0x498>  // b.tstop
   11148:	ldr	x8, [x19, #168]
   1114c:	sub	w9, w28, #0x1
   11150:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   11154:	add	x1, x1, #0x101
   11158:	ldr	x0, [x8, w9, sxtw #3]
   1115c:	bl	aa10 <strcmp@plt>
   11160:	cbnz	w0, 11168 <argp_parse@@Base+0x498>
   11164:	str	w28, [x19, #188]
   11168:	ldr	w8, [x19, #160]
   1116c:	cmp	w28, w8
   11170:	b.ge	11424 <argp_parse@@Base+0x754>  // b.tcont
   11174:	ldrb	w8, [x19, #180]
   11178:	tbnz	w8, #2, 11424 <argp_parse@@Base+0x754>
   1117c:	ldr	x8, [x19, #168]
   11180:	add	w9, w28, #0x1
   11184:	str	w9, [x19, #176]
   11188:	ldr	x25, [x8, w28, sxtw #3]
   1118c:	mov	w28, w9
   11190:	str	x25, [x19, #80]
   11194:	ldp	x9, x10, [x19, #120]
   11198:	sub	w8, w28, #0x1
   1119c:	str	w8, [x19, #176]
   111a0:	cmp	x9, x10
   111a4:	b.cs	113d4 <argp_parse@@Base+0x704>  // b.hs, b.nlast
   111a8:	add	x20, x9, #0x48
   111ac:	add	w9, w8, #0x1
   111b0:	str	w9, [x19, #176]
   111b4:	ldur	x9, [x20, #-72]
   111b8:	cbz	x9, 1123c <argp_parse@@Base+0x56c>
   111bc:	ldur	x8, [x20, #-8]
   111c0:	mov	w0, wzr
   111c4:	mov	x1, x25
   111c8:	mov	x2, x21
   111cc:	str	x8, [x19, #208]
   111d0:	ldur	q0, [x20, #-24]
   111d4:	stur	q0, [x22, #152]
   111d8:	ldur	w8, [x20, #-48]
   111dc:	str	w8, [x19, #184]
   111e0:	blr	x9
   111e4:	ldr	x8, [x19, #208]
   111e8:	cmp	w0, #0x7
   111ec:	stur	x8, [x20, #-8]
   111f0:	b.ne	1127c <argp_parse@@Base+0x5ac>  // b.any
   111f4:	ldr	w9, [x19, #176]
   111f8:	ldur	x8, [x20, #-72]
   111fc:	sub	w9, w9, #0x1
   11200:	str	w9, [x19, #176]
   11204:	cbz	x8, 11240 <argp_parse@@Base+0x570>
   11208:	ldur	q0, [x20, #-24]
   1120c:	mov	w0, #0x6                   	// #6
   11210:	movk	w0, #0x100, lsl #16
   11214:	mov	x1, xzr
   11218:	stur	q0, [x22, #152]
   1121c:	ldur	w9, [x20, #-48]
   11220:	mov	x2, x21
   11224:	str	w9, [x19, #184]
   11228:	blr	x8
   1122c:	ldr	x8, [x19, #208]
   11230:	mov	w24, w0
   11234:	stur	x8, [x20, #-8]
   11238:	b	11244 <argp_parse@@Base+0x574>
   1123c:	str	w8, [x19, #176]
   11240:	mov	w24, #0x7                   	// #7
   11244:	cmp	w24, #0x7
   11248:	b.ne	11264 <argp_parse@@Base+0x594>  // b.any
   1124c:	ldr	x8, [x19, #128]
   11250:	cmp	x20, x8
   11254:	b.cs	11264 <argp_parse@@Base+0x594>  // b.hs, b.nlast
   11258:	ldr	w8, [x19, #176]
   1125c:	add	x20, x20, #0x48
   11260:	b	111ac <argp_parse@@Base+0x4dc>
   11264:	mov	w8, #0x6                   	// #6
   11268:	movk	w8, #0x100, lsl #16
   1126c:	cbz	w24, 11288 <argp_parse@@Base+0x5b8>
   11270:	cmp	w24, #0x7
   11274:	b.ne	113cc <argp_parse@@Base+0x6fc>  // b.any
   11278:	b	113d4 <argp_parse@@Base+0x704>
   1127c:	mov	w24, w0
   11280:	mov	w8, wzr
   11284:	cbnz	w24, 11270 <argp_parse@@Base+0x5a0>
   11288:	cmp	w8, w27
   1128c:	b.ne	1129c <argp_parse@@Base+0x5cc>  // b.any
   11290:	ldr	w8, [x19, #160]
   11294:	str	w8, [x19, #176]
   11298:	b	112a0 <argp_parse@@Base+0x5d0>
   1129c:	ldr	w8, [x19, #176]
   112a0:	mov	w24, wzr
   112a4:	subs	w8, w8, w28
   112a8:	b.ge	112b8 <argp_parse@@Base+0x5e8>  // b.tcont
   112ac:	mov	w8, #0x1                   	// #1
   112b0:	str	w8, [x19, #144]
   112b4:	b	113cc <argp_parse@@Base+0x6fc>
   112b8:	ldur	w9, [x20, #-48]
   112bc:	add	w8, w8, w9
   112c0:	add	w8, w8, #0x1
   112c4:	stur	w8, [x20, #-48]
   112c8:	b	113cc <argp_parse@@Base+0x6fc>
   112cc:	ldr	w8, [x19, #72]
   112d0:	cmn	w8, #0x1
   112d4:	b.eq	11340 <argp_parse@@Base+0x670>  // b.none
   112d8:	b	11624 <argp_parse@@Base+0x954>
   112dc:	asr	w8, w25, #24
   112e0:	cbz	w8, 11340 <argp_parse@@Base+0x670>
   112e4:	ldr	x9, [x19, #120]
   112e8:	sxtw	x8, w8
   112ec:	sub	x10, x8, #0x1
   112f0:	mov	w8, #0x48                  	// #72
   112f4:	mul	x8, x10, x8
   112f8:	ldr	x8, [x9, x8]
   112fc:	cbz	x8, 11720 <argp_parse@@Base+0xa50>
   11300:	mov	w11, #0x48                  	// #72
   11304:	madd	x20, x10, x11, x9
   11308:	ldr	x1, [x19, #80]
   1130c:	ldr	x9, [x20, #64]!
   11310:	sbfx	w0, w25, #23, #1
   11314:	bfxil	w0, w25, #0, #24
   11318:	mov	x2, x21
   1131c:	str	x9, [x19, #208]
   11320:	ldur	q0, [x20, #-16]
   11324:	stur	q0, [x22, #152]
   11328:	ldur	w9, [x20, #-40]
   1132c:	str	w9, [x19, #184]
   11330:	blr	x8
   11334:	mov	w24, w0
   11338:	mov	w8, wzr
   1133c:	b	113bc <argp_parse@@Base+0x6ec>
   11340:	ldr	x0, [x19, #48]
   11344:	mov	w1, w25
   11348:	bl	ab90 <strchr@plt>
   1134c:	cbz	x0, 113e4 <argp_parse@@Base+0x714>
   11350:	ldp	x8, x9, [x19, #120]
   11354:	cmp	x8, x9
   11358:	b.cs	113e4 <argp_parse@@Base+0x714>  // b.hs, b.nlast
   1135c:	add	x8, x8, #0x30
   11360:	ldur	x10, [x8, #-32]
   11364:	cmp	x10, x0
   11368:	b.hi	11380 <argp_parse@@Base+0x6b0>  // b.pmore
   1136c:	add	x10, x8, #0x18
   11370:	add	x8, x8, #0x48
   11374:	cmp	x10, x9
   11378:	b.cc	11360 <argp_parse@@Base+0x690>  // b.lo, b.ul, b.last
   1137c:	b	113e4 <argp_parse@@Base+0x714>
   11380:	ldur	x9, [x8, #-48]
   11384:	cbz	x9, 113e4 <argp_parse@@Base+0x714>
   11388:	mov	x20, x8
   1138c:	ldr	x1, [x19, #80]
   11390:	ldr	x10, [x20, #16]!
   11394:	mov	w0, w25
   11398:	mov	x2, x21
   1139c:	str	x10, [x19, #208]
   113a0:	ldr	q0, [x8]
   113a4:	stur	q0, [x22, #152]
   113a8:	ldur	w8, [x8, #-24]
   113ac:	str	w8, [x19, #184]
   113b0:	blr	x9
   113b4:	mov	w24, w0
   113b8:	mov	w8, #0x1                   	// #1
   113bc:	ldr	x9, [x19, #208]
   113c0:	cmp	w24, #0x7
   113c4:	str	x9, [x20]
   113c8:	b.eq	113e0 <argp_parse@@Base+0x710>  // b.none
   113cc:	cbz	w24, 110bc <argp_parse@@Base+0x3ec>
   113d0:	b	11550 <argp_parse@@Base+0x880>
   113d4:	mov	w25, #0x1                   	// #1
   113d8:	mov	w8, #0x1                   	// #1
   113dc:	b	11418 <argp_parse@@Base+0x748>
   113e0:	cbz	w8, 11720 <argp_parse@@Base+0xa50>
   113e4:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   113e8:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   113ec:	add	x0, x0, #0xcb7
   113f0:	add	x1, x1, #0x131
   113f4:	mov	w2, #0x5                   	// #5
   113f8:	bl	adc0 <dcgettext@plt>
   113fc:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   11400:	mov	x3, x0
   11404:	add	x1, x1, #0x104
   11408:	mov	x0, x21
   1140c:	mov	w2, w25
   11410:	bl	abb0 <argp_error@plt>
   11414:	mov	w8, wzr
   11418:	cmn	w25, #0x1
   1141c:	b.eq	11424 <argp_parse@@Base+0x754>  // b.none
   11420:	tbz	w8, #0, 11624 <argp_parse@@Base+0x954>
   11424:	ldr	w8, [x19, #176]
   11428:	ldr	w9, [x19, #160]
   1142c:	cmp	w8, w9
   11430:	b.ne	114b4 <argp_parse@@Base+0x7e4>  // b.any
   11434:	ldp	x23, x8, [x19, #120]
   11438:	cmp	x23, x8
   1143c:	b.cs	114c4 <argp_parse@@Base+0x7f4>  // b.hs, b.nlast
   11440:	mov	w24, wzr
   11444:	sub	w20, w27, #0x4
   11448:	cmp	w24, #0x7
   1144c:	b.eq	11454 <argp_parse@@Base+0x784>  // b.none
   11450:	cbnz	w24, 114ac <argp_parse@@Base+0x7dc>
   11454:	ldr	w9, [x23, #24]
   11458:	cbnz	w9, 114a0 <argp_parse@@Base+0x7d0>
   1145c:	ldr	x9, [x23]
   11460:	cbz	x9, 1149c <argp_parse@@Base+0x7cc>
   11464:	ldr	x8, [x23, #64]
   11468:	mov	w0, w20
   1146c:	mov	x1, xzr
   11470:	mov	x2, x21
   11474:	str	x8, [x19, #208]
   11478:	ldr	q0, [x23, #48]
   1147c:	stur	q0, [x22, #152]
   11480:	str	wzr, [x19, #184]
   11484:	blr	x9
   11488:	ldr	x8, [x19, #208]
   1148c:	mov	w24, w0
   11490:	str	x8, [x23, #64]
   11494:	ldr	x8, [x19, #128]
   11498:	b	114a0 <argp_parse@@Base+0x7d0>
   1149c:	mov	w24, #0x7                   	// #7
   114a0:	add	x23, x23, #0x48
   114a4:	cmp	x23, x8
   114a8:	b.cc	11448 <argp_parse@@Base+0x778>  // b.lo, b.ul, b.last
   114ac:	ldr	x23, [x19, #120]
   114b0:	b	114c8 <argp_parse@@Base+0x7f8>
   114b4:	ldr	x9, [x19, #8]
   114b8:	cbz	x9, 115ec <argp_parse@@Base+0x91c>
   114bc:	str	w8, [x9]
   114c0:	b	11560 <argp_parse@@Base+0x890>
   114c4:	mov	w24, wzr
   114c8:	ldr	x26, [x19, #8]
   114cc:	sub	x25, x8, #0x48
   114d0:	cmp	x25, x23
   114d4:	b.cc	1153c <argp_parse@@Base+0x86c>  // b.lo, b.ul, b.last
   114d8:	sub	w20, w27, #0x5
   114dc:	cmp	w24, #0x7
   114e0:	b.eq	114e8 <argp_parse@@Base+0x818>  // b.none
   114e4:	cbnz	w24, 11544 <argp_parse@@Base+0x874>
   114e8:	ldr	x8, [x25]
   114ec:	cbz	x8, 1152c <argp_parse@@Base+0x85c>
   114f0:	ldr	x9, [x25, #64]
   114f4:	mov	w0, w20
   114f8:	mov	x1, xzr
   114fc:	mov	x2, x21
   11500:	str	x9, [x19, #208]
   11504:	ldr	q0, [x25, #48]
   11508:	stur	q0, [x22, #152]
   1150c:	ldr	w9, [x25, #24]
   11510:	str	w9, [x19, #184]
   11514:	blr	x8
   11518:	ldr	x8, [x19, #208]
   1151c:	mov	w24, w0
   11520:	str	x8, [x25, #64]
   11524:	ldr	x23, [x19, #120]
   11528:	b	11530 <argp_parse@@Base+0x860>
   1152c:	mov	w24, #0x7                   	// #7
   11530:	sub	x25, x25, #0x48
   11534:	cmp	x25, x23
   11538:	b.cs	114dc <argp_parse@@Base+0x80c>  // b.hs, b.nlast
   1153c:	cmp	w24, #0x7
   11540:	csel	w24, wzr, w24, eq  // eq = none
   11544:	cbz	x26, 11550 <argp_parse@@Base+0x880>
   11548:	ldr	w8, [x19, #176]
   1154c:	str	w8, [x26]
   11550:	cbz	w24, 11560 <argp_parse@@Base+0x890>
   11554:	cmp	w24, #0x7
   11558:	b.eq	11624 <argp_parse@@Base+0x954>  // b.none
   1155c:	b	11638 <argp_parse@@Base+0x968>
   11560:	ldp	x23, x8, [x19, #120]
   11564:	sub	x25, x8, #0x48
   11568:	cmp	x25, x23
   1156c:	b.cs	11578 <argp_parse@@Base+0x8a8>  // b.hs, b.nlast
   11570:	mov	w24, wzr
   11574:	b	11694 <argp_parse@@Base+0x9c4>
   11578:	mov	w24, wzr
   1157c:	sub	w20, w27, #0x2
   11580:	cmp	w24, #0x7
   11584:	b.eq	1158c <argp_parse@@Base+0x8bc>  // b.none
   11588:	cbnz	w24, 11694 <argp_parse@@Base+0x9c4>
   1158c:	ldr	x8, [x25]
   11590:	cbz	x8, 115d0 <argp_parse@@Base+0x900>
   11594:	ldr	x9, [x25, #64]
   11598:	mov	w0, w20
   1159c:	mov	x1, xzr
   115a0:	mov	x2, x21
   115a4:	str	x9, [x19, #208]
   115a8:	ldr	q0, [x25, #48]
   115ac:	stur	q0, [x22, #152]
   115b0:	ldr	w9, [x25, #24]
   115b4:	str	w9, [x19, #184]
   115b8:	blr	x8
   115bc:	ldr	x8, [x19, #208]
   115c0:	mov	w24, w0
   115c4:	str	x8, [x25, #64]
   115c8:	ldr	x23, [x19, #120]
   115cc:	b	115d4 <argp_parse@@Base+0x904>
   115d0:	mov	w24, #0x7                   	// #7
   115d4:	sub	x25, x25, #0x48
   115d8:	cmp	x25, x23
   115dc:	b.cs	11580 <argp_parse@@Base+0x8b0>  // b.hs, b.nlast
   115e0:	cmp	w24, #0x7
   115e4:	csel	w24, wzr, w24, eq  // eq = none
   115e8:	b	11694 <argp_parse@@Base+0x9c4>
   115ec:	ldrb	w8, [x19, #180]
   115f0:	tbnz	w8, #1, 11624 <argp_parse@@Base+0x954>
   115f4:	ldr	x20, [x19, #224]
   115f8:	cbz	x20, 11624 <argp_parse@@Base+0x954>
   115fc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   11600:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   11604:	add	x0, x0, #0xcb7
   11608:	add	x1, x1, #0x119
   1160c:	mov	w2, #0x5                   	// #5
   11610:	bl	adc0 <dcgettext@plt>
   11614:	ldr	x2, [x19, #216]
   11618:	mov	x1, x0
   1161c:	mov	x0, x20
   11620:	bl	afb0 <fprintf@plt>
   11624:	ldr	x1, [x19, #224]
   11628:	mov	w2, #0x104                 	// #260
   1162c:	mov	x0, x21
   11630:	bl	adb0 <argp_state_help@plt>
   11634:	mov	w24, #0x7                   	// #7
   11638:	ldp	x23, x8, [x19, #120]
   1163c:	cmp	x23, x8
   11640:	b.cs	11694 <argp_parse@@Base+0x9c4>  // b.hs, b.nlast
   11644:	sub	w20, w27, #0x1
   11648:	ldr	x9, [x23]
   1164c:	cbz	x9, 11684 <argp_parse@@Base+0x9b4>
   11650:	ldr	x8, [x23, #64]
   11654:	mov	w0, w20
   11658:	mov	x1, xzr
   1165c:	mov	x2, x21
   11660:	str	x8, [x19, #208]
   11664:	ldr	q0, [x23, #48]
   11668:	stur	q0, [x22, #152]
   1166c:	ldr	w8, [x23, #24]
   11670:	str	w8, [x19, #184]
   11674:	blr	x9
   11678:	ldr	x8, [x19, #208]
   1167c:	str	x8, [x23, #64]
   11680:	ldr	x8, [x19, #128]
   11684:	add	x23, x23, #0x48
   11688:	cmp	x23, x8
   1168c:	b.cc	11648 <argp_parse@@Base+0x978>  // b.lo, b.ul, b.last
   11690:	ldr	x23, [x19, #120]
   11694:	ldr	x8, [x19, #128]
   11698:	sub	x20, x8, #0x48
   1169c:	cmp	x20, x23
   116a0:	b.cc	116e8 <argp_parse@@Base+0xa18>  // b.lo, b.ul, b.last
   116a4:	ldr	x8, [x20]
   116a8:	cbz	x8, 116e0 <argp_parse@@Base+0xa10>
   116ac:	ldr	x9, [x20, #64]
   116b0:	add	w0, w27, #0x1
   116b4:	mov	x1, xzr
   116b8:	mov	x2, x21
   116bc:	str	x9, [x19, #208]
   116c0:	ldr	q0, [x20, #48]
   116c4:	stur	q0, [x22, #152]
   116c8:	ldr	w9, [x20, #24]
   116cc:	str	w9, [x19, #184]
   116d0:	blr	x8
   116d4:	ldr	x8, [x19, #208]
   116d8:	str	x8, [x20, #64]
   116dc:	ldr	x23, [x19, #120]
   116e0:	sub	x20, x20, #0x48
   116e4:	b	1169c <argp_parse@@Base+0x9cc>
   116e8:	ldr	x0, [x19, #248]
   116ec:	cmp	w24, #0x7
   116f0:	mov	w8, #0x16                  	// #22
   116f4:	csel	w24, w8, w24, eq  // eq = none
   116f8:	bl	aaa0 <free@plt>
   116fc:	mov	w0, w24
   11700:	mov	sp, x29
   11704:	ldp	x20, x19, [sp, #80]
   11708:	ldp	x22, x21, [sp, #64]
   1170c:	ldp	x24, x23, [sp, #48]
   11710:	ldp	x26, x25, [sp, #32]
   11714:	ldp	x28, x27, [sp, #16]
   11718:	ldp	x29, x30, [sp], #96
   1171c:	ret
   11720:	ldr	x8, [x19, #56]
   11724:	ldr	w9, [x8, #24]
   11728:	cmp	w9, w25
   1172c:	b.eq	11750 <argp_parse@@Base+0xa80>  // b.none
   11730:	ldr	x9, [x8]
   11734:	cbz	x9, 11750 <argp_parse@@Base+0xa80>
   11738:	ldr	w10, [x8, #56]
   1173c:	add	x9, x8, #0x20
   11740:	mov	x8, x9
   11744:	cmp	w10, w25
   11748:	b.ne	11730 <argp_parse@@Base+0xa60>  // b.any
   1174c:	mov	x8, x9
   11750:	ldr	x8, [x8]
   11754:	adrp	x9, 29000 <vasnprintf@@Base+0x1944>
   11758:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1175c:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   11760:	add	x9, x9, #0x115
   11764:	cmp	x8, #0x0
   11768:	add	x0, x0, #0xcb7
   1176c:	add	x1, x1, #0x131
   11770:	mov	w2, #0x5                   	// #5
   11774:	csel	x20, x9, x8, eq  // eq = none
   11778:	bl	adc0 <dcgettext@plt>
   1177c:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   11780:	mov	x3, x0
   11784:	add	x1, x1, #0x10c
   11788:	mov	x0, x21
   1178c:	mov	x2, x20
   11790:	bl	abb0 <argp_error@plt>
   11794:	b	11414 <argp_parse@@Base+0x744>

0000000000011798 <_argp_input@@Base>:
   11798:	cbz	x1, 117c0 <_argp_input@@Base+0x28>
   1179c:	ldr	x9, [x1, #88]
   117a0:	ldp	x8, x9, [x9, #80]
   117a4:	cmp	x8, x9
   117a8:	b.cs	117c0 <_argp_input@@Base+0x28>  // b.hs, b.nlast
   117ac:	ldr	x10, [x8, #8]
   117b0:	cmp	x10, x0
   117b4:	b.eq	117c8 <_argp_input@@Base+0x30>  // b.none
   117b8:	add	x8, x8, #0x48
   117bc:	b	117a4 <_argp_input@@Base+0xc>
   117c0:	mov	x0, xzr
   117c4:	ret
   117c8:	ldr	x0, [x8, #48]
   117cc:	ret
   117d0:	stp	x29, x30, [sp, #-32]!
   117d4:	stp	x20, x19, [sp, #16]
   117d8:	mov	x19, x2
   117dc:	mov	x20, x1
   117e0:	mov	w8, w0
   117e4:	cmn	w0, #0x3
   117e8:	mov	w0, #0x7                   	// #7
   117ec:	mov	x29, sp
   117f0:	b.gt	11810 <_argp_input@@Base+0x78>
   117f4:	cmn	w8, #0x4
   117f8:	b.eq	11834 <_argp_input@@Base+0x9c>  // b.none
   117fc:	cmn	w8, #0x3
   11800:	b.ne	118c8 <_argp_input@@Base+0x130>  // b.any
   11804:	ldr	x1, [x19, #80]
   11808:	mov	w2, #0x201                 	// #513
   1180c:	b	11828 <_argp_input@@Base+0x90>
   11810:	cmn	w8, #0x2
   11814:	b.eq	11880 <_argp_input@@Base+0xe8>  // b.none
   11818:	cmp	w8, #0x3f
   1181c:	b.ne	118c8 <_argp_input@@Base+0x130>  // b.any
   11820:	ldr	x1, [x19, #80]
   11824:	mov	w2, #0x27a                 	// #634
   11828:	mov	x0, x19
   1182c:	bl	adb0 <argp_state_help@plt>
   11830:	b	118c4 <_argp_input@@Base+0x12c>
   11834:	adrp	x8, 29000 <vasnprintf@@Base+0x1944>
   11838:	add	x8, x8, #0xc3
   1183c:	cmp	x20, #0x0
   11840:	csel	x0, x8, x20, eq  // eq = none
   11844:	bl	a600 <atoi@plt>
   11848:	adrp	x19, 3d000 <base_len@@Base+0x2a06c>
   1184c:	str	w0, [x19, #2328]
   11850:	ldr	w8, [x19, #2328]
   11854:	subs	w8, w8, #0x1
   11858:	str	w8, [x19, #2328]
   1185c:	b.lt	118c4 <_argp_input@@Base+0x12c>  // b.tstop
   11860:	mov	w0, #0x1                   	// #1
   11864:	bl	a7c0 <sleep@plt>
   11868:	ldr	w8, [x19, #2328]
   1186c:	sub	w9, w8, #0x1
   11870:	cmp	w8, #0x0
   11874:	str	w9, [x19, #2328]
   11878:	b.gt	11860 <_argp_input@@Base+0xc8>
   1187c:	b	118c4 <_argp_input@@Base+0x12c>
   11880:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   11884:	ldr	x8, [x8, #3768]
   11888:	mov	x0, x20
   1188c:	str	x20, [x8]
   11890:	bl	a800 <last_component@plt>
   11894:	str	x0, [x19, #64]
   11898:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1189c:	ldr	x8, [x8, #4008]
   118a0:	str	x0, [x8]
   118a4:	ldr	w8, [x19, #28]
   118a8:	and	w8, w8, #0x3
   118ac:	cmp	w8, #0x1
   118b0:	b.ne	118c4 <_argp_input@@Base+0x12c>  // b.any
   118b4:	ldr	x8, [x19, #16]
   118b8:	mov	w0, wzr
   118bc:	str	x20, [x8]
   118c0:	b	118c8 <_argp_input@@Base+0x130>
   118c4:	mov	w0, wzr
   118c8:	ldp	x20, x19, [sp, #16]
   118cc:	ldp	x29, x30, [sp], #32
   118d0:	ret
   118d4:	stp	x29, x30, [sp, #-32]!
   118d8:	cmp	w0, #0x56
   118dc:	str	x19, [sp, #16]
   118e0:	mov	x29, sp
   118e4:	b.ne	1190c <_argp_input@@Base+0x174>  // b.any
   118e8:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   118ec:	ldr	x8, [x8, #4056]
   118f0:	mov	x19, x2
   118f4:	ldr	x8, [x8]
   118f8:	cbz	x8, 11914 <_argp_input@@Base+0x17c>
   118fc:	ldr	x0, [x19, #80]
   11900:	mov	x1, x19
   11904:	blr	x8
   11908:	b	11964 <_argp_input@@Base+0x1cc>
   1190c:	mov	w0, #0x7                   	// #7
   11910:	b	11970 <_argp_input@@Base+0x1d8>
   11914:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   11918:	ldr	x8, [x8, #3936]
   1191c:	ldr	x2, [x8]
   11920:	cbz	x2, 11938 <_argp_input@@Base+0x1a0>
   11924:	ldr	x0, [x19, #80]
   11928:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
   1192c:	add	x1, x1, #0x4f1
   11930:	bl	afb0 <fprintf@plt>
   11934:	b	11964 <_argp_input@@Base+0x1cc>
   11938:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1193c:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   11940:	add	x0, x0, #0xcb7
   11944:	add	x1, x1, #0xde
   11948:	mov	w2, #0x5                   	// #5
   1194c:	bl	adc0 <dcgettext@plt>
   11950:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
   11954:	mov	x2, x0
   11958:	add	x1, x1, #0xcd8
   1195c:	mov	x0, x19
   11960:	bl	abb0 <argp_error@plt>
   11964:	ldrb	w8, [x19, #28]
   11968:	tbz	w8, #5, 1197c <_argp_input@@Base+0x1e4>
   1196c:	mov	w0, wzr
   11970:	ldr	x19, [sp, #16]
   11974:	ldp	x29, x30, [sp], #32
   11978:	ret
   1197c:	mov	w0, wzr
   11980:	bl	a390 <exit@plt>
   11984:	stp	x29, x30, [sp, #-32]!
   11988:	stp	x20, x19, [sp, #16]
   1198c:	ldr	x11, [x0]
   11990:	ldr	x8, [x0, #32]
   11994:	mov	x19, x1
   11998:	mov	x29, sp
   1199c:	cbz	x11, 119fc <_argp_input@@Base+0x264>
   119a0:	ldr	x12, [x19, #16]
   119a4:	mov	w10, wzr
   119a8:	mov	x9, xzr
   119ac:	add	x11, x11, #0x28
   119b0:	add	x12, x12, #0x1
   119b4:	str	x12, [x19, #16]
   119b8:	ldur	w12, [x11, #-32]
   119bc:	cbnz	w12, 119d8 <_argp_input@@Base+0x240>
   119c0:	ldur	x12, [x11, #-40]
   119c4:	cbnz	x12, 119d8 <_argp_input@@Base+0x240>
   119c8:	ldur	x12, [x11, #-8]
   119cc:	cbnz	x12, 119d8 <_argp_input@@Base+0x240>
   119d0:	ldr	w12, [x11]
   119d4:	cbz	w12, 119e8 <_argp_input@@Base+0x250>
   119d8:	add	x11, x11, #0x30
   119dc:	add	x9, x9, #0x1
   119e0:	add	w10, w10, #0x3
   119e4:	b	119b8 <_argp_input@@Base+0x220>
   119e8:	ldr	x11, [x19]
   119ec:	add	x11, x11, w10, uxtw
   119f0:	mov	x10, x19
   119f4:	str	x11, [x10], #8
   119f8:	b	11a0c <_argp_input@@Base+0x274>
   119fc:	ldr	x9, [x0, #8]
   11a00:	cbz	x9, 11a18 <_argp_input@@Base+0x280>
   11a04:	add	x10, x19, #0x10
   11a08:	mov	w9, #0x1                   	// #1
   11a0c:	ldr	x11, [x10]
   11a10:	add	x9, x11, x9
   11a14:	str	x9, [x10]
   11a18:	cbz	x8, 11a44 <_argp_input@@Base+0x2ac>
   11a1c:	ldr	x0, [x8]
   11a20:	cbz	x0, 11a44 <_argp_input@@Base+0x2ac>
   11a24:	add	x20, x8, #0x20
   11a28:	mov	x1, x19
   11a2c:	bl	11984 <_argp_input@@Base+0x1ec>
   11a30:	ldr	x8, [x19, #24]
   11a34:	add	x8, x8, #0x1
   11a38:	str	x8, [x19, #24]
   11a3c:	ldr	x0, [x20], #32
   11a40:	cbnz	x0, 11a28 <_argp_input@@Base+0x290>
   11a44:	ldp	x20, x19, [sp, #16]
   11a48:	ldp	x29, x30, [sp], #32
   11a4c:	ret
   11a50:	sub	sp, sp, #0x80
   11a54:	stp	x29, x30, [sp, #32]
   11a58:	stp	x28, x27, [sp, #48]
   11a5c:	stp	x26, x25, [sp, #64]
   11a60:	stp	x24, x23, [sp, #80]
   11a64:	stp	x22, x21, [sp, #96]
   11a68:	stp	x20, x19, [sp, #112]
   11a6c:	ldr	x23, [x0]
   11a70:	ldr	x10, [x0, #32]
   11a74:	mov	x19, x4
   11a78:	mov	x20, x3
   11a7c:	add	x29, sp, #0x20
   11a80:	cbz	x23, 11bf4 <_argp_input@@Base+0x45c>
   11a84:	mov	w28, #0x39000000            	// #956301312
   11a88:	mov	w21, #0x1000000             	// #16777216
   11a8c:	mov	x26, x23
   11a90:	stp	x0, x1, [sp]
   11a94:	stur	w2, [x29, #-12]
   11a98:	stur	x10, [x29, #-8]
   11a9c:	ldr	w24, [x26, #8]
   11aa0:	cbnz	w24, 11abc <_argp_input@@Base+0x324>
   11aa4:	ldr	x8, [x26]
   11aa8:	cbnz	x8, 11abc <_argp_input@@Base+0x324>
   11aac:	ldr	x8, [x26, #32]
   11ab0:	cbnz	x8, 11abc <_argp_input@@Base+0x324>
   11ab4:	ldr	w8, [x26, #40]
   11ab8:	cbz	w8, 11be0 <_argp_input@@Base+0x448>
   11abc:	ldr	w8, [x26, #24]
   11ac0:	tst	w8, #0x4
   11ac4:	csel	x23, x26, x23, eq  // eq = none
   11ac8:	ldrb	w9, [x23, #24]
   11acc:	tbnz	w9, #3, 11bd8 <_argp_input@@Base+0x440>
   11ad0:	sub	w9, w24, #0x1
   11ad4:	cmp	w9, #0xfe
   11ad8:	b.hi	11b40 <_argp_input@@Base+0x3a8>  // b.pmore
   11adc:	tbnz	w8, #3, 11b40 <_argp_input@@Base+0x3a8>
   11ae0:	bl	aa30 <__ctype_b_loc@plt>
   11ae4:	ldr	x8, [x0]
   11ae8:	ldrh	w8, [x8, x24, lsl #1]
   11aec:	tbz	w8, #14, 11b40 <_argp_input@@Base+0x3a8>
   11af0:	ldr	x8, [x19, #8]
   11af4:	add	x9, x8, #0x1
   11af8:	str	x9, [x19, #8]
   11afc:	strb	w24, [x8]
   11b00:	ldr	x8, [x23, #16]
   11b04:	cbz	x8, 11b38 <_argp_input@@Base+0x3a0>
   11b08:	ldr	x8, [x19, #8]
   11b0c:	add	x9, x8, #0x1
   11b10:	str	x9, [x19, #8]
   11b14:	mov	w9, #0x3a                  	// #58
   11b18:	strb	w9, [x8]
   11b1c:	ldrb	w8, [x23, #24]
   11b20:	tbz	w8, #0, 11b38 <_argp_input@@Base+0x3a0>
   11b24:	ldr	x8, [x19, #8]
   11b28:	add	x9, x8, #0x1
   11b2c:	str	x9, [x19, #8]
   11b30:	mov	w9, #0x3a                  	// #58
   11b34:	strb	w9, [x8]
   11b38:	ldr	x8, [x19, #8]
   11b3c:	strb	wzr, [x8]
   11b40:	ldr	x24, [x26]
   11b44:	cbz	x24, 11bd8 <_argp_input@@Base+0x440>
   11b48:	ldr	x25, [x19]
   11b4c:	ldr	x22, [x25, #16]
   11b50:	ldr	x0, [x22]
   11b54:	cbz	x0, 11b7c <_argp_input@@Base+0x3e4>
   11b58:	mov	x27, x22
   11b5c:	mov	x1, x24
   11b60:	bl	aa10 <strcmp@plt>
   11b64:	cbz	w0, 11b74 <_argp_input@@Base+0x3dc>
   11b68:	ldr	x0, [x27, #32]!
   11b6c:	cbnz	x0, 11b5c <_argp_input@@Base+0x3c4>
   11b70:	b	11b7c <_argp_input@@Base+0x3e4>
   11b74:	sub	x8, x27, x22
   11b78:	tbz	x8, #36, 11bd8 <_argp_input@@Base+0x440>
   11b7c:	ldr	x8, [x19, #16]
   11b80:	str	x24, [x8]
   11b84:	ldr	x9, [x23, #16]
   11b88:	cbz	x9, 11b9c <_argp_input@@Base+0x404>
   11b8c:	ldrb	w9, [x23, #24]
   11b90:	tst	w9, #0x1
   11b94:	mov	w9, #0x1                   	// #1
   11b98:	cinc	w9, w9, ne  // ne = any
   11b9c:	str	w9, [x8, #8]
   11ba0:	str	xzr, [x8, #16]
   11ba4:	ldr	w9, [x26, #8]
   11ba8:	cbnz	w9, 11bb0 <_argp_input@@Base+0x418>
   11bac:	ldr	w9, [x23, #8]
   11bb0:	ldr	w10, [x25, #80]
   11bb4:	add	x11, x8, #0x20
   11bb8:	sub	w10, w20, w10
   11bbc:	lsr	w10, w10, #3
   11bc0:	mul	w10, w10, w28
   11bc4:	bfxil	w10, w9, #0, #24
   11bc8:	add	w9, w10, w21
   11bcc:	str	w9, [x8, #24]
   11bd0:	str	x11, [x19, #16]
   11bd4:	str	xzr, [x8, #32]
   11bd8:	add	x26, x26, #0x30
   11bdc:	b	11a9c <_argp_input@@Base+0x304>
   11be0:	ldp	x0, x1, [sp]
   11be4:	ldur	x10, [x29, #-8]
   11be8:	ldur	w2, [x29, #-12]
   11bec:	ldr	x8, [x0, #8]
   11bf0:	b	11bfc <_argp_input@@Base+0x464>
   11bf4:	ldr	x8, [x0, #8]
   11bf8:	cbz	x8, 11ca0 <_argp_input@@Base+0x508>
   11bfc:	stp	x8, x0, [x20]
   11c00:	ldr	x8, [x19, #8]
   11c04:	str	wzr, [x20, #24]
   11c08:	str	x1, [x20, #32]
   11c0c:	str	w2, [x20, #40]
   11c10:	stp	xzr, xzr, [x20, #56]
   11c14:	str	x8, [x20, #16]
   11c18:	str	xzr, [x20, #48]
   11c1c:	cbz	x10, 11c44 <_argp_input@@Base+0x4ac>
   11c20:	mov	w8, #0xffffffff            	// #-1
   11c24:	add	w8, w8, #0x1
   11c28:	lsl	x9, x8, #5
   11c2c:	ldr	x9, [x10, x9]
   11c30:	cbnz	x9, 11c24 <_argp_input@@Base+0x48c>
   11c34:	ldr	x9, [x19, #24]
   11c38:	add	x8, x9, w8, uxtw #3
   11c3c:	str	x9, [x20, #56]
   11c40:	str	x8, [x19, #24]
   11c44:	add	x3, x20, #0x48
   11c48:	cbz	x10, 11c7c <_argp_input@@Base+0x4e4>
   11c4c:	ldr	x0, [x10]
   11c50:	cbz	x0, 11c7c <_argp_input@@Base+0x4e4>
   11c54:	mov	w2, wzr
   11c58:	add	x21, x10, #0x20
   11c5c:	mov	x1, x20
   11c60:	mov	x4, x19
   11c64:	add	w22, w2, #0x1
   11c68:	bl	11a50 <_argp_input@@Base+0x2b8>
   11c6c:	mov	x3, x0
   11c70:	ldr	x0, [x21], #32
   11c74:	mov	w2, w22
   11c78:	cbnz	x0, 11c5c <_argp_input@@Base+0x4c4>
   11c7c:	ldp	x20, x19, [sp, #112]
   11c80:	ldp	x22, x21, [sp, #96]
   11c84:	ldp	x24, x23, [sp, #80]
   11c88:	ldp	x26, x25, [sp, #64]
   11c8c:	ldp	x28, x27, [sp, #48]
   11c90:	ldp	x29, x30, [sp, #32]
   11c94:	mov	x0, x3
   11c98:	add	sp, sp, #0x80
   11c9c:	ret
   11ca0:	mov	x3, x20
   11ca4:	mov	x20, xzr
   11ca8:	cbnz	x10, 11c4c <_argp_input@@Base+0x4b4>
   11cac:	b	11c7c <_argp_input@@Base+0x4e4>

0000000000011cb0 <argp_usage@@Base>:
   11cb0:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   11cb4:	ldr	x8, [x8, #3816]
   11cb8:	mov	w2, #0x106                 	// #262
   11cbc:	ldr	x1, [x8]
   11cc0:	b	adb0 <argp_state_help@plt>

0000000000011cc4 <_option_is_short@@Base>:
   11cc4:	stp	x29, x30, [sp, #-32]!
   11cc8:	ldrb	w8, [x0, #24]
   11ccc:	str	x19, [sp, #16]
   11cd0:	mov	x29, sp
   11cd4:	tbnz	w8, #3, 11cfc <_option_is_short@@Base+0x38>
   11cd8:	ldr	w19, [x0, #8]
   11cdc:	sub	w8, w19, #0x1
   11ce0:	cmp	w8, #0xfe
   11ce4:	b.hi	11cfc <_option_is_short@@Base+0x38>  // b.pmore
   11ce8:	bl	aa30 <__ctype_b_loc@plt>
   11cec:	ldr	x8, [x0]
   11cf0:	ldrh	w8, [x8, x19, lsl #1]
   11cf4:	ubfx	w0, w8, #14, #1
   11cf8:	b	11d00 <_option_is_short@@Base+0x3c>
   11cfc:	mov	w0, wzr
   11d00:	ldr	x19, [sp, #16]
   11d04:	ldp	x29, x30, [sp], #32
   11d08:	ret

0000000000011d0c <_option_is_end@@Base>:
   11d0c:	ldr	w8, [x0, #8]
   11d10:	cbnz	w8, 11d24 <_option_is_end@@Base+0x18>
   11d14:	ldr	x8, [x0]
   11d18:	cbnz	x8, 11d24 <_option_is_end@@Base+0x18>
   11d1c:	ldr	x8, [x0, #32]
   11d20:	cbz	x8, 11d2c <_option_is_end@@Base+0x20>
   11d24:	mov	w0, wzr
   11d28:	ret
   11d2c:	ldr	w8, [x0, #40]
   11d30:	cmp	w8, #0x0
   11d34:	cset	w0, eq  // eq = none
   11d38:	ret
   11d3c:	stp	x29, x30, [sp, #-64]!
   11d40:	str	x23, [sp, #16]
   11d44:	mov	x23, x0
   11d48:	mov	w0, #0x40                  	// #64
   11d4c:	stp	x22, x21, [sp, #32]
   11d50:	stp	x20, x19, [sp, #48]
   11d54:	mov	x29, sp
   11d58:	mov	w21, w4
   11d5c:	mov	x19, x3
   11d60:	mov	x20, x2
   11d64:	mov	x22, x1
   11d68:	bl	a660 <malloc@plt>
   11d6c:	cbz	x0, 11d88 <_option_is_end@@Base+0x7c>
   11d70:	and	w8, w21, #0x1
   11d74:	stp	x23, x22, [x0]
   11d78:	stp	x20, x19, [x0, #16]
   11d7c:	stp	xzr, xzr, [x0, #48]
   11d80:	strb	w8, [x0, #32]
   11d84:	str	xzr, [x0, #40]
   11d88:	ldp	x20, x19, [sp, #48]
   11d8c:	ldp	x22, x21, [sp, #32]
   11d90:	ldr	x23, [sp, #16]
   11d94:	ldp	x29, x30, [sp], #64
   11d98:	ret
   11d9c:	stp	x29, x30, [sp, #-80]!
   11da0:	stp	x26, x25, [sp, #16]
   11da4:	mov	x26, x0
   11da8:	mov	w0, #0x40                  	// #64
   11dac:	stp	x24, x23, [sp, #32]
   11db0:	stp	x22, x21, [sp, #48]
   11db4:	stp	x20, x19, [sp, #64]
   11db8:	mov	x29, sp
   11dbc:	mov	x21, x6
   11dc0:	mov	x19, x5
   11dc4:	mov	w24, w4
   11dc8:	mov	x22, x3
   11dcc:	mov	x23, x2
   11dd0:	mov	x25, x1
   11dd4:	bl	a660 <malloc@plt>
   11dd8:	mov	x20, x0
   11ddc:	cbz	x0, 11e38 <_option_is_end@@Base+0x12c>
   11de0:	and	w8, w24, #0x1
   11de4:	stp	x26, x25, [x20]
   11de8:	stp	x23, x22, [x20, #16]
   11dec:	strb	w8, [x20, #32]
   11df0:	cbz	x19, 11e30 <_option_is_end@@Base+0x124>
   11df4:	lsr	x8, x19, #61
   11df8:	cbnz	x8, 11e20 <_option_is_end@@Base+0x114>
   11dfc:	lsl	x22, x19, #3
   11e00:	mov	x0, x22
   11e04:	bl	a660 <malloc@plt>
   11e08:	str	x0, [x20, #40]
   11e0c:	cbz	x0, 11e20 <_option_is_end@@Base+0x114>
   11e10:	mov	x1, x21
   11e14:	mov	x2, x22
   11e18:	bl	a2f0 <memcpy@plt>
   11e1c:	b	11e34 <_option_is_end@@Base+0x128>
   11e20:	mov	x0, x20
   11e24:	bl	aaa0 <free@plt>
   11e28:	mov	x20, xzr
   11e2c:	b	11e38 <_option_is_end@@Base+0x12c>
   11e30:	str	xzr, [x20, #40]
   11e34:	stp	x19, x19, [x20, #48]
   11e38:	mov	x0, x20
   11e3c:	ldp	x20, x19, [sp, #64]
   11e40:	ldp	x22, x21, [sp, #48]
   11e44:	ldp	x24, x23, [sp, #32]
   11e48:	ldp	x26, x25, [sp, #16]
   11e4c:	ldp	x29, x30, [sp], #80
   11e50:	ret
   11e54:	ldr	x0, [x0, #48]
   11e58:	ret
   11e5c:	stp	x29, x30, [sp, #-16]!
   11e60:	ldr	x9, [x0, #48]
   11e64:	sub	x8, x1, #0x1
   11e68:	mov	x29, sp
   11e6c:	cmp	x8, x9
   11e70:	b.cs	11e84 <_option_is_end@@Base+0x178>  // b.hs, b.nlast
   11e74:	ldr	x9, [x0, #40]
   11e78:	ldr	x0, [x9, x8, lsl #3]
   11e7c:	ldp	x29, x30, [sp], #16
   11e80:	ret
   11e84:	bl	a980 <abort@plt>
   11e88:	stp	x29, x30, [sp, #-16]!
   11e8c:	ldr	x9, [x0, #48]
   11e90:	sub	x8, x1, #0x1
   11e94:	mov	x29, sp
   11e98:	cmp	x8, x9
   11e9c:	b.cs	11eb4 <_option_is_end@@Base+0x1a8>  // b.hs, b.nlast
   11ea0:	ldr	x9, [x0, #40]
   11ea4:	mov	w0, wzr
   11ea8:	str	x2, [x9, x8, lsl #3]
   11eac:	ldp	x29, x30, [sp], #16
   11eb0:	ret
   11eb4:	bl	a980 <abort@plt>
   11eb8:	stp	x29, x30, [sp, #-16]!
   11ebc:	ldr	x8, [x0, #48]
   11ec0:	sub	x9, x1, #0x1
   11ec4:	mov	x29, sp
   11ec8:	cmp	x9, x8
   11ecc:	b.cs	11ee0 <_option_is_end@@Base+0x1d4>  // b.hs, b.nlast
   11ed0:	cmp	x8, x1
   11ed4:	csinc	x0, xzr, x1, ls  // ls = plast
   11ed8:	ldp	x29, x30, [sp], #16
   11edc:	ret
   11ee0:	bl	a980 <abort@plt>
   11ee4:	stp	x29, x30, [sp, #-16]!
   11ee8:	ldr	x8, [x0, #48]
   11eec:	sub	x0, x1, #0x1
   11ef0:	mov	x29, sp
   11ef4:	cmp	x0, x8
   11ef8:	b.cs	11f04 <_option_is_end@@Base+0x1f8>  // b.hs, b.nlast
   11efc:	ldp	x29, x30, [sp], #16
   11f00:	ret
   11f04:	bl	a980 <abort@plt>
   11f08:	stp	x29, x30, [sp, #-16]!
   11f0c:	ldr	x8, [x0, #48]
   11f10:	mov	x29, sp
   11f14:	cmp	x8, x1
   11f18:	b.ls	11f2c <_option_is_end@@Base+0x220>  // b.plast
   11f1c:	ldr	x8, [x0, #40]
   11f20:	ldr	x0, [x8, x1, lsl #3]
   11f24:	ldp	x29, x30, [sp], #16
   11f28:	ret
   11f2c:	bl	a980 <abort@plt>
   11f30:	stp	x29, x30, [sp, #-16]!
   11f34:	ldr	x8, [x0, #48]
   11f38:	mov	x29, sp
   11f3c:	cmp	x8, x1
   11f40:	b.ls	11f58 <_option_is_end@@Base+0x24c>  // b.plast
   11f44:	ldr	x8, [x0, #40]
   11f48:	add	x0, x1, #0x1
   11f4c:	str	x2, [x8, x1, lsl #3]
   11f50:	ldp	x29, x30, [sp], #16
   11f54:	ret
   11f58:	bl	a980 <abort@plt>
   11f5c:	stp	x29, x30, [sp, #-16]!
   11f60:	mov	x29, sp
   11f64:	bl	11f74 <_option_is_end@@Base+0x268>
   11f68:	add	x0, x0, #0x1
   11f6c:	ldp	x29, x30, [sp], #16
   11f70:	ret
   11f74:	stp	x29, x30, [sp, #-64]!
   11f78:	cmp	x1, x2
   11f7c:	str	x23, [sp, #16]
   11f80:	stp	x22, x21, [sp, #32]
   11f84:	stp	x20, x19, [sp, #48]
   11f88:	mov	x29, sp
   11f8c:	b.hi	12018 <_option_is_end@@Base+0x30c>  // b.pmore
   11f90:	ldr	x8, [x0, #48]
   11f94:	mov	x21, x2
   11f98:	mov	x22, x0
   11f9c:	cmp	x8, x2
   11fa0:	b.cc	12018 <_option_is_end@@Base+0x30c>  // b.lo, b.ul, b.last
   11fa4:	mov	x19, x1
   11fa8:	cmp	x1, x21
   11fac:	b.cs	11ffc <_option_is_end@@Base+0x2f0>  // b.hs, b.nlast
   11fb0:	ldr	x23, [x22, #8]
   11fb4:	mov	x20, x3
   11fb8:	cbz	x23, 11fe0 <_option_is_end@@Base+0x2d4>
   11fbc:	ldr	x8, [x22, #40]
   11fc0:	mov	x0, x20
   11fc4:	ldr	x1, [x8, x19, lsl #3]
   11fc8:	blr	x23
   11fcc:	tbnz	w0, #0, 12000 <_option_is_end@@Base+0x2f4>
   11fd0:	add	x19, x19, #0x1
   11fd4:	cmp	x21, x19
   11fd8:	b.ne	11fbc <_option_is_end@@Base+0x2b0>  // b.any
   11fdc:	b	11ffc <_option_is_end@@Base+0x2f0>
   11fe0:	ldr	x8, [x22, #40]
   11fe4:	ldr	x9, [x8, x19, lsl #3]
   11fe8:	cmp	x9, x20
   11fec:	b.eq	12000 <_option_is_end@@Base+0x2f4>  // b.none
   11ff0:	add	x19, x19, #0x1
   11ff4:	cmp	x21, x19
   11ff8:	b.ne	11fe4 <_option_is_end@@Base+0x2d8>  // b.any
   11ffc:	mov	x19, #0xffffffffffffffff    	// #-1
   12000:	mov	x0, x19
   12004:	ldp	x20, x19, [sp, #48]
   12008:	ldp	x22, x21, [sp, #32]
   1200c:	ldr	x23, [sp, #16]
   12010:	ldp	x29, x30, [sp], #64
   12014:	ret
   12018:	bl	a980 <abort@plt>
   1201c:	stp	x29, x30, [sp, #-48]!
   12020:	str	x21, [sp, #16]
   12024:	stp	x20, x19, [sp, #32]
   12028:	ldp	x21, x8, [x0, #48]
   1202c:	mov	x19, x0
   12030:	mov	x20, x1
   12034:	mov	x29, sp
   12038:	cmp	x21, x8
   1203c:	b.ne	1204c <_option_is_end@@Base+0x340>  // b.any
   12040:	mov	x0, x19
   12044:	bl	12750 <_option_is_end@@Base+0xa44>
   12048:	tbnz	w0, #31, 12080 <_option_is_end@@Base+0x374>
   1204c:	ldr	x8, [x19, #40]
   12050:	cbz	x21, 1206c <_option_is_end@@Base+0x360>
   12054:	mov	x9, x21
   12058:	add	x10, x8, x9, lsl #3
   1205c:	ldur	x11, [x10, #-8]
   12060:	subs	x9, x9, #0x1
   12064:	str	x11, [x10]
   12068:	b.ne	12058 <_option_is_end@@Base+0x34c>  // b.any
   1206c:	str	x20, [x8]
   12070:	add	x8, x21, #0x1
   12074:	mov	w0, #0x1                   	// #1
   12078:	str	x8, [x19, #48]
   1207c:	b	12084 <_option_is_end@@Base+0x378>
   12080:	mov	x0, xzr
   12084:	ldp	x20, x19, [sp, #32]
   12088:	ldr	x21, [sp, #16]
   1208c:	ldp	x29, x30, [sp], #48
   12090:	ret
   12094:	stp	x29, x30, [sp, #-48]!
   12098:	str	x21, [sp, #16]
   1209c:	stp	x20, x19, [sp, #32]
   120a0:	ldp	x21, x8, [x0, #48]
   120a4:	mov	x19, x0
   120a8:	mov	x20, x1
   120ac:	mov	x29, sp
   120b0:	cmp	x21, x8
   120b4:	b.ne	120c4 <_option_is_end@@Base+0x3b8>  // b.any
   120b8:	mov	x0, x19
   120bc:	bl	12750 <_option_is_end@@Base+0xa44>
   120c0:	tbnz	w0, #31, 120d8 <_option_is_end@@Base+0x3cc>
   120c4:	ldr	x8, [x19, #40]
   120c8:	add	x0, x21, #0x1
   120cc:	str	x20, [x8, x21, lsl #3]
   120d0:	str	x0, [x19, #48]
   120d4:	b	120dc <_option_is_end@@Base+0x3d0>
   120d8:	mov	x0, xzr
   120dc:	ldp	x20, x19, [sp, #32]
   120e0:	ldr	x21, [sp, #16]
   120e4:	ldp	x29, x30, [sp], #48
   120e8:	ret
   120ec:	stp	x29, x30, [sp, #-64]!
   120f0:	stp	x22, x21, [sp, #32]
   120f4:	stp	x20, x19, [sp, #48]
   120f8:	ldr	x22, [x0, #48]
   120fc:	str	x23, [sp, #16]
   12100:	sub	x23, x1, #0x1
   12104:	mov	x29, sp
   12108:	cmp	x23, x22
   1210c:	b.cs	12180 <_option_is_end@@Base+0x474>  // b.hs, b.nlast
   12110:	ldr	x8, [x0, #56]
   12114:	mov	x20, x0
   12118:	mov	x19, x1
   1211c:	mov	x21, x2
   12120:	cmp	x22, x8
   12124:	b.ne	12134 <_option_is_end@@Base+0x428>  // b.any
   12128:	mov	x0, x20
   1212c:	bl	12750 <_option_is_end@@Base+0xa44>
   12130:	tbnz	w0, #31, 12178 <_option_is_end@@Base+0x46c>
   12134:	ldr	x8, [x20, #40]
   12138:	mov	x9, x22
   1213c:	add	x10, x8, x9, lsl #3
   12140:	ldur	x11, [x10, #-8]
   12144:	sub	x9, x9, #0x1
   12148:	cmp	x9, x23
   1214c:	str	x11, [x10]
   12150:	b.hi	1213c <_option_is_end@@Base+0x430>  // b.pmore
   12154:	str	x21, [x8, x23, lsl #3]
   12158:	add	x8, x22, #0x1
   1215c:	str	x8, [x20, #48]
   12160:	mov	x0, x19
   12164:	ldp	x20, x19, [sp, #48]
   12168:	ldp	x22, x21, [sp, #32]
   1216c:	ldr	x23, [sp, #16]
   12170:	ldp	x29, x30, [sp], #64
   12174:	ret
   12178:	mov	x19, xzr
   1217c:	b	12160 <_option_is_end@@Base+0x454>
   12180:	bl	a980 <abort@plt>
   12184:	stp	x29, x30, [sp, #-48]!
   12188:	stp	x22, x21, [sp, #16]
   1218c:	stp	x20, x19, [sp, #32]
   12190:	ldr	x22, [x0, #48]
   12194:	sub	x8, x1, #0x1
   12198:	mov	x29, sp
   1219c:	cmp	x8, x22
   121a0:	b.cs	12218 <_option_is_end@@Base+0x50c>  // b.hs, b.nlast
   121a4:	ldr	x8, [x0, #56]
   121a8:	mov	x19, x0
   121ac:	mov	x20, x1
   121b0:	mov	x21, x2
   121b4:	cmp	x22, x8
   121b8:	b.ne	121c8 <_option_is_end@@Base+0x4bc>  // b.any
   121bc:	mov	x0, x19
   121c0:	bl	12750 <_option_is_end@@Base+0xa44>
   121c4:	tbnz	w0, #31, 12210 <_option_is_end@@Base+0x504>
   121c8:	ldr	x8, [x19, #40]
   121cc:	cmp	x22, x20
   121d0:	b.ls	121f0 <_option_is_end@@Base+0x4e4>  // b.plast
   121d4:	mov	x9, x22
   121d8:	add	x10, x8, x9, lsl #3
   121dc:	ldur	x11, [x10, #-8]
   121e0:	sub	x9, x9, #0x1
   121e4:	cmp	x9, x20
   121e8:	str	x11, [x10]
   121ec:	b.hi	121d8 <_option_is_end@@Base+0x4cc>  // b.pmore
   121f0:	str	x21, [x8, x20, lsl #3]
   121f4:	add	x8, x22, #0x1
   121f8:	add	x0, x20, #0x1
   121fc:	str	x8, [x19, #48]
   12200:	ldp	x20, x19, [sp, #32]
   12204:	ldp	x22, x21, [sp, #16]
   12208:	ldp	x29, x30, [sp], #48
   1220c:	ret
   12210:	mov	x0, xzr
   12214:	b	12200 <_option_is_end@@Base+0x4f4>
   12218:	bl	a980 <abort@plt>
   1221c:	stp	x29, x30, [sp, #-48]!
   12220:	stp	x22, x21, [sp, #16]
   12224:	stp	x20, x19, [sp, #32]
   12228:	ldr	x22, [x0, #48]
   1222c:	mov	x29, sp
   12230:	cmp	x22, x1
   12234:	b.cc	122ac <_option_is_end@@Base+0x5a0>  // b.lo, b.ul, b.last
   12238:	ldr	x8, [x0, #56]
   1223c:	mov	x19, x0
   12240:	mov	x20, x1
   12244:	mov	x21, x2
   12248:	cmp	x22, x8
   1224c:	b.ne	1225c <_option_is_end@@Base+0x550>  // b.any
   12250:	mov	x0, x19
   12254:	bl	12750 <_option_is_end@@Base+0xa44>
   12258:	tbnz	w0, #31, 122a4 <_option_is_end@@Base+0x598>
   1225c:	ldr	x8, [x19, #40]
   12260:	cmp	x22, x20
   12264:	b.ls	12284 <_option_is_end@@Base+0x578>  // b.plast
   12268:	mov	x9, x22
   1226c:	add	x10, x8, x9, lsl #3
   12270:	ldur	x11, [x10, #-8]
   12274:	sub	x9, x9, #0x1
   12278:	cmp	x9, x20
   1227c:	str	x11, [x10]
   12280:	b.hi	1226c <_option_is_end@@Base+0x560>  // b.pmore
   12284:	str	x21, [x8, x20, lsl #3]
   12288:	add	x8, x22, #0x1
   1228c:	add	x0, x20, #0x1
   12290:	str	x8, [x19, #48]
   12294:	ldp	x20, x19, [sp, #32]
   12298:	ldp	x22, x21, [sp, #16]
   1229c:	ldp	x29, x30, [sp], #48
   122a0:	ret
   122a4:	mov	x0, xzr
   122a8:	b	12294 <_option_is_end@@Base+0x588>
   122ac:	bl	a980 <abort@plt>
   122b0:	stp	x29, x30, [sp, #-48]!
   122b4:	stp	x22, x21, [sp, #16]
   122b8:	stp	x20, x19, [sp, #32]
   122bc:	ldr	x21, [x0, #48]
   122c0:	sub	x8, x1, #0x1
   122c4:	mov	x29, sp
   122c8:	cmp	x8, x21
   122cc:	b.cs	12328 <_option_is_end@@Base+0x61c>  // b.hs, b.nlast
   122d0:	ldr	x9, [x0, #24]
   122d4:	ldr	x22, [x0, #40]
   122d8:	mov	x19, x0
   122dc:	mov	x20, x1
   122e0:	cbz	x9, 122ec <_option_is_end@@Base+0x5e0>
   122e4:	ldr	x0, [x22, x8, lsl #3]
   122e8:	blr	x9
   122ec:	subs	x8, x21, x20
   122f0:	b.ls	1230c <_option_is_end@@Base+0x600>  // b.plast
   122f4:	add	x9, x22, x20, lsl #3
   122f8:	ldr	x10, [x9]
   122fc:	subs	x8, x8, #0x1
   12300:	stur	x10, [x9, #-8]
   12304:	add	x9, x9, #0x8
   12308:	b.ne	122f8 <_option_is_end@@Base+0x5ec>  // b.any
   1230c:	sub	x8, x21, #0x1
   12310:	str	x8, [x19, #48]
   12314:	ldp	x20, x19, [sp, #32]
   12318:	ldp	x22, x21, [sp, #16]
   1231c:	mov	w0, #0x1                   	// #1
   12320:	ldp	x29, x30, [sp], #48
   12324:	ret
   12328:	bl	a980 <abort@plt>
   1232c:	stp	x29, x30, [sp, #-48]!
   12330:	stp	x22, x21, [sp, #16]
   12334:	stp	x20, x19, [sp, #32]
   12338:	ldr	x21, [x0, #48]
   1233c:	mov	x29, sp
   12340:	cmp	x21, x1
   12344:	b.ls	123b0 <_option_is_end@@Base+0x6a4>  // b.plast
   12348:	ldr	x8, [x0, #24]
   1234c:	ldr	x22, [x0, #40]
   12350:	mov	x19, x0
   12354:	mov	x20, x1
   12358:	cbz	x8, 12364 <_option_is_end@@Base+0x658>
   1235c:	ldr	x0, [x22, x20, lsl #3]
   12360:	blr	x8
   12364:	add	x8, x20, #0x1
   12368:	cmp	x8, x21
   1236c:	b.cs	12394 <_option_is_end@@Base+0x688>  // b.hs, b.nlast
   12370:	add	x8, x22, x20, lsl #3
   12374:	mvn	x9, x20
   12378:	add	x8, x8, #0x8
   1237c:	add	x9, x9, x21
   12380:	ldr	x10, [x8]
   12384:	subs	x9, x9, #0x1
   12388:	stur	x10, [x8, #-8]
   1238c:	add	x8, x8, #0x8
   12390:	b.ne	12380 <_option_is_end@@Base+0x674>  // b.any
   12394:	sub	x8, x21, #0x1
   12398:	str	x8, [x19, #48]
   1239c:	ldp	x20, x19, [sp, #32]
   123a0:	ldp	x22, x21, [sp, #16]
   123a4:	mov	w0, #0x1                   	// #1
   123a8:	ldp	x29, x30, [sp], #48
   123ac:	ret
   123b0:	bl	a980 <abort@plt>
   123b4:	stp	x29, x30, [sp, #-32]!
   123b8:	ldr	x2, [x0, #48]
   123bc:	mov	x3, x1
   123c0:	mov	x1, xzr
   123c4:	str	x19, [sp, #16]
   123c8:	mov	x29, sp
   123cc:	mov	x19, x0
   123d0:	bl	11f74 <_option_is_end@@Base+0x268>
   123d4:	cmn	x0, #0x1
   123d8:	b.eq	123f0 <_option_is_end@@Base+0x6e4>  // b.none
   123dc:	mov	x1, x0
   123e0:	mov	x0, x19
   123e4:	bl	1232c <_option_is_end@@Base+0x620>
   123e8:	mov	w0, #0x1                   	// #1
   123ec:	b	123f4 <_option_is_end@@Base+0x6e8>
   123f0:	mov	w0, wzr
   123f4:	ldr	x19, [sp, #16]
   123f8:	ldp	x29, x30, [sp], #32
   123fc:	ret
   12400:	stp	x29, x30, [sp, #-48]!
   12404:	stp	x22, x21, [sp, #16]
   12408:	stp	x20, x19, [sp, #32]
   1240c:	ldr	x20, [x0, #40]
   12410:	mov	x19, x0
   12414:	mov	x29, sp
   12418:	cbz	x20, 12448 <_option_is_end@@Base+0x73c>
   1241c:	ldr	x21, [x19, #24]
   12420:	cbz	x21, 12440 <_option_is_end@@Base+0x734>
   12424:	ldr	x22, [x19, #48]
   12428:	cbz	x22, 12440 <_option_is_end@@Base+0x734>
   1242c:	ldr	x0, [x20], #8
   12430:	blr	x21
   12434:	subs	x22, x22, #0x1
   12438:	b.ne	1242c <_option_is_end@@Base+0x720>  // b.any
   1243c:	ldr	x20, [x19, #40]
   12440:	mov	x0, x20
   12444:	bl	aaa0 <free@plt>
   12448:	mov	x0, x19
   1244c:	ldp	x20, x19, [sp, #32]
   12450:	ldp	x22, x21, [sp, #16]
   12454:	ldp	x29, x30, [sp], #48
   12458:	b	aaa0 <free@plt>
   1245c:	ldr	x9, [x0]
   12460:	stp	x9, x0, [x8]
   12464:	ldp	x10, x9, [x0, #40]
   12468:	stp	x9, x10, [x8, #16]
   1246c:	add	x9, x10, x9, lsl #3
   12470:	str	x9, [x8, #32]
   12474:	ret
   12478:	stp	x29, x30, [sp, #-16]!
   1247c:	cmp	x1, x2
   12480:	mov	x29, sp
   12484:	b.hi	124b8 <_option_is_end@@Base+0x7ac>  // b.pmore
   12488:	ldr	x9, [x0, #48]
   1248c:	cmp	x9, x2
   12490:	b.cc	124b8 <_option_is_end@@Base+0x7ac>  // b.lo, b.ul, b.last
   12494:	ldr	x10, [x0]
   12498:	stp	x0, x9, [x8, #8]
   1249c:	str	x10, [x8]
   124a0:	ldr	x9, [x0, #40]
   124a4:	add	x10, x9, x1, lsl #3
   124a8:	add	x9, x9, x2, lsl #3
   124ac:	stp	x10, x9, [x8, #24]
   124b0:	ldp	x29, x30, [sp], #16
   124b4:	ret
   124b8:	bl	a980 <abort@plt>
   124bc:	stp	x29, x30, [sp, #-16]!
   124c0:	ldp	x8, x9, [x0, #8]
   124c4:	mov	x29, sp
   124c8:	ldr	x10, [x8, #48]
   124cc:	cmp	x9, x10
   124d0:	b.ne	124dc <_option_is_end@@Base+0x7d0>  // b.any
   124d4:	ldp	x9, x10, [x0, #24]
   124d8:	b	12500 <_option_is_end@@Base+0x7f4>
   124dc:	add	x10, x10, #0x1
   124e0:	cmp	x9, x10
   124e4:	b.ne	12544 <_option_is_end@@Base+0x838>  // b.any
   124e8:	ldp	x10, x11, [x0, #24]
   124ec:	sub	x9, x9, #0x1
   124f0:	str	x9, [x0, #16]
   124f4:	sub	x9, x10, #0x8
   124f8:	sub	x10, x11, #0x8
   124fc:	stp	x9, x10, [x0, #24]
   12500:	cmp	x9, x10
   12504:	b.cs	12538 <_option_is_end@@Base+0x82c>  // b.hs, b.nlast
   12508:	ldr	x10, [x9]
   1250c:	str	x10, [x1]
   12510:	cbz	x2, 12528 <_option_is_end@@Base+0x81c>
   12514:	ldr	x8, [x8, #40]
   12518:	sub	x8, x9, x8
   1251c:	asr	x8, x8, #3
   12520:	add	x8, x8, #0x1
   12524:	str	x8, [x2]
   12528:	add	x8, x9, #0x8
   1252c:	str	x8, [x0, #24]
   12530:	mov	w0, #0x1                   	// #1
   12534:	b	1253c <_option_is_end@@Base+0x830>
   12538:	mov	w0, wzr
   1253c:	ldp	x29, x30, [sp], #16
   12540:	ret
   12544:	bl	a980 <abort@plt>
   12548:	ret
   1254c:	stp	x29, x30, [sp, #-16]!
   12550:	ldr	x3, [x0, #48]
   12554:	mov	x4, x2
   12558:	mov	x2, xzr
   1255c:	mov	x29, sp
   12560:	bl	12598 <_option_is_end@@Base+0x88c>
   12564:	add	x0, x0, #0x1
   12568:	ldp	x29, x30, [sp], #16
   1256c:	ret
   12570:	stp	x29, x30, [sp, #-16]!
   12574:	mov	x29, sp
   12578:	bl	12598 <_option_is_end@@Base+0x88c>
   1257c:	add	x0, x0, #0x1
   12580:	ldp	x29, x30, [sp], #16
   12584:	ret
   12588:	ldr	x3, [x0, #48]
   1258c:	mov	x4, x2
   12590:	mov	x2, xzr
   12594:	b	12598 <_option_is_end@@Base+0x88c>
   12598:	stp	x29, x30, [sp, #-80]!
   1259c:	cmp	x2, x3
   125a0:	str	x25, [sp, #16]
   125a4:	stp	x24, x23, [sp, #32]
   125a8:	stp	x22, x21, [sp, #48]
   125ac:	stp	x20, x19, [sp, #64]
   125b0:	mov	x29, sp
   125b4:	b.hi	12674 <_option_is_end@@Base+0x968>  // b.pmore
   125b8:	ldr	x8, [x0, #48]
   125bc:	mov	x23, x3
   125c0:	mov	x22, x0
   125c4:	cmp	x8, x3
   125c8:	b.cc	12674 <_option_is_end@@Base+0x968>  // b.lo, b.ul, b.last
   125cc:	mov	x19, x2
   125d0:	cmp	x2, x23
   125d4:	b.cs	12614 <_option_is_end@@Base+0x908>  // b.hs, b.nlast
   125d8:	mov	x20, x4
   125dc:	mov	x21, x1
   125e0:	ldr	x8, [x22, #40]
   125e4:	sub	x9, x23, x19
   125e8:	add	x24, x19, x9, lsr #1
   125ec:	mov	x1, x20
   125f0:	ldr	x0, [x8, x24, lsl #3]
   125f4:	blr	x21
   125f8:	tbnz	w0, #31, 12608 <_option_is_end@@Base+0x8fc>
   125fc:	cbz	w0, 12668 <_option_is_end@@Base+0x95c>
   12600:	mov	x23, x24
   12604:	b	1260c <_option_is_end@@Base+0x900>
   12608:	add	x19, x24, #0x1
   1260c:	cmp	x19, x23
   12610:	b.cc	125e0 <_option_is_end@@Base+0x8d4>  // b.lo, b.ul, b.last
   12614:	mov	x19, #0xffffffffffffffff    	// #-1
   12618:	mov	x0, x19
   1261c:	ldp	x20, x19, [sp, #64]
   12620:	ldp	x22, x21, [sp, #48]
   12624:	ldp	x24, x23, [sp, #32]
   12628:	ldr	x25, [sp, #16]
   1262c:	ldp	x29, x30, [sp], #80
   12630:	ret
   12634:	ldr	x8, [x22, #40]
   12638:	sub	x25, x24, x19
   1263c:	add	x23, x19, x25, lsr #1
   12640:	mov	x1, x20
   12644:	ldr	x0, [x8, x23, lsl #3]
   12648:	blr	x21
   1264c:	tbz	w0, #31, 12658 <_option_is_end@@Base+0x94c>
   12650:	add	x19, x23, #0x1
   12654:	b	12668 <_option_is_end@@Base+0x95c>
   12658:	cbnz	w0, 12674 <_option_is_end@@Base+0x968>
   1265c:	lsr	x8, x25, #1
   12660:	sub	x24, x23, #0x1
   12664:	cbz	x8, 12618 <_option_is_end@@Base+0x90c>
   12668:	cmp	x24, x19
   1266c:	b.hi	12634 <_option_is_end@@Base+0x928>  // b.pmore
   12670:	b	12618 <_option_is_end@@Base+0x90c>
   12674:	bl	a980 <abort@plt>
   12678:	stp	x29, x30, [sp, #-64]!
   1267c:	stp	x24, x23, [sp, #16]
   12680:	stp	x22, x21, [sp, #32]
   12684:	stp	x20, x19, [sp, #48]
   12688:	ldr	x23, [x0, #48]
   1268c:	mov	x19, x2
   12690:	mov	x20, x0
   12694:	mov	x29, sp
   12698:	cbz	x23, 126e0 <_option_is_end@@Base+0x9d4>
   1269c:	mov	x21, x1
   126a0:	mov	x24, xzr
   126a4:	ldr	x8, [x20, #40]
   126a8:	sub	x9, x23, x24
   126ac:	add	x22, x24, x9, lsr #1
   126b0:	mov	x1, x19
   126b4:	ldr	x0, [x8, x22, lsl #3]
   126b8:	blr	x21
   126bc:	tbnz	w0, #31, 126cc <_option_is_end@@Base+0x9c0>
   126c0:	mov	x23, x22
   126c4:	cbnz	w0, 126d0 <_option_is_end@@Base+0x9c4>
   126c8:	b	126e4 <_option_is_end@@Base+0x9d8>
   126cc:	add	x24, x22, #0x1
   126d0:	cmp	x23, x24
   126d4:	mov	x22, x24
   126d8:	b.hi	126a4 <_option_is_end@@Base+0x998>  // b.pmore
   126dc:	b	126e4 <_option_is_end@@Base+0x9d8>
   126e0:	mov	x22, xzr
   126e4:	mov	x0, x20
   126e8:	mov	x1, x22
   126ec:	mov	x2, x19
   126f0:	ldp	x20, x19, [sp, #48]
   126f4:	ldp	x22, x21, [sp, #32]
   126f8:	ldp	x24, x23, [sp, #16]
   126fc:	ldp	x29, x30, [sp], #64
   12700:	b	1221c <_option_is_end@@Base+0x510>
   12704:	stp	x29, x30, [sp, #-32]!
   12708:	ldr	x3, [x0, #48]
   1270c:	mov	x4, x2
   12710:	mov	x2, xzr
   12714:	str	x19, [sp, #16]
   12718:	mov	x29, sp
   1271c:	mov	x19, x0
   12720:	bl	12598 <_option_is_end@@Base+0x88c>
   12724:	cmn	x0, #0x1
   12728:	b.eq	12740 <_option_is_end@@Base+0xa34>  // b.none
   1272c:	mov	x1, x0
   12730:	mov	x0, x19
   12734:	bl	1232c <_option_is_end@@Base+0x620>
   12738:	mov	w0, #0x1                   	// #1
   1273c:	b	12744 <_option_is_end@@Base+0xa38>
   12740:	mov	w0, wzr
   12744:	ldr	x19, [sp, #16]
   12748:	ldp	x29, x30, [sp], #32
   1274c:	ret
   12750:	stp	x29, x30, [sp, #-32]!
   12754:	stp	x20, x19, [sp, #16]
   12758:	ldr	x8, [x0, #56]
   1275c:	mov	x29, sp
   12760:	lsl	x9, x8, #1
   12764:	cmp	x8, #0x0
   12768:	csinv	x8, x9, xzr, ge  // ge = tcont
   1276c:	adds	x8, x8, #0x1
   12770:	csinv	x20, x8, xzr, cc  // cc = lo, ul, last
   12774:	lsr	x8, x20, #61
   12778:	cbnz	x8, 127a4 <_option_is_end@@Base+0xa98>
   1277c:	mov	x19, x0
   12780:	ldr	x0, [x0, #40]
   12784:	lsl	x1, x20, #3
   12788:	bl	a860 <realloc@plt>
   1278c:	cbz	x0, 127a4 <_option_is_end@@Base+0xa98>
   12790:	mov	x8, x0
   12794:	mov	w0, wzr
   12798:	str	x8, [x19, #40]
   1279c:	str	x20, [x19, #56]
   127a0:	b	127a8 <_option_is_end@@Base+0xa9c>
   127a4:	mov	w0, #0xffffffff            	// #-1
   127a8:	ldp	x20, x19, [sp, #16]
   127ac:	ldp	x29, x30, [sp], #32
   127b0:	ret

00000000000127b4 <rotl64@@Base>:
   127b4:	neg	w8, w1
   127b8:	ror	x0, x0, x8
   127bc:	ret

00000000000127c0 <rotr64@@Base>:
   127c0:	ror	x0, x0, x1
   127c4:	ret

00000000000127c8 <rotl32@@Base>:
   127c8:	neg	w8, w1
   127cc:	ror	w0, w0, w8
   127d0:	ret

00000000000127d4 <rotr32@@Base>:
   127d4:	ror	w0, w0, w1
   127d8:	ret

00000000000127dc <rotl_sz@@Base>:
   127dc:	sxtw	x9, w1
   127e0:	neg	x9, x9
   127e4:	lsl	x8, x0, x1
   127e8:	lsr	x9, x0, x9
   127ec:	orr	x0, x9, x8
   127f0:	ret

00000000000127f4 <rotr_sz@@Base>:
   127f4:	sxtw	x9, w1
   127f8:	neg	x9, x9
   127fc:	lsr	x8, x0, x1
   12800:	lsl	x9, x0, x9
   12804:	orr	x0, x9, x8
   12808:	ret

000000000001280c <rotl16@@Base>:
   1280c:	neg	w10, w1
   12810:	and	w8, w0, #0xffff
   12814:	and	w9, w1, #0xf
   12818:	and	w10, w10, #0xf
   1281c:	lsl	w9, w0, w9
   12820:	lsr	w8, w8, w10
   12824:	orr	w0, w9, w8
   12828:	ret

000000000001282c <rotr16@@Base>:
   1282c:	and	w8, w0, #0xffff
   12830:	and	w9, w1, #0xf
   12834:	neg	w10, w1
   12838:	lsr	w8, w8, w9
   1283c:	and	w9, w10, #0xf
   12840:	lsl	w9, w0, w9
   12844:	orr	w0, w9, w8
   12848:	ret

000000000001284c <rotl8@@Base>:
   1284c:	neg	w10, w1
   12850:	and	w8, w0, #0xff
   12854:	and	w9, w1, #0x7
   12858:	and	w10, w10, #0x7
   1285c:	lsl	w9, w0, w9
   12860:	lsr	w8, w8, w10
   12864:	orr	w0, w9, w8
   12868:	ret

000000000001286c <rotr8@@Base>:
   1286c:	and	w8, w0, #0xff
   12870:	and	w9, w1, #0x7
   12874:	neg	w10, w1
   12878:	lsr	w8, w8, w9
   1287c:	and	w9, w10, #0x7
   12880:	lsl	w9, w0, w9
   12884:	orr	w0, w9, w8
   12888:	ret

000000000001288c <canonicalize_filename_mode@@Base>:
   1288c:	sub	sp, sp, #0x110
   12890:	stp	x26, x25, [sp, #208]
   12894:	and	w26, w1, #0x3
   12898:	sub	w8, w26, #0x1
   1289c:	tst	w26, w8
   128a0:	stp	x29, x30, [sp, #176]
   128a4:	stp	x28, x27, [sp, #192]
   128a8:	stp	x24, x23, [sp, #224]
   128ac:	stp	x22, x21, [sp, #240]
   128b0:	stp	x20, x19, [sp, #256]
   128b4:	add	x29, sp, #0xb0
   128b8:	b.ne	128e4 <canonicalize_filename_mode@@Base+0x58>  // b.any
   128bc:	mov	x27, x0
   128c0:	cbz	x0, 128e4 <canonicalize_filename_mode@@Base+0x58>
   128c4:	ldrb	w8, [x27]
   128c8:	mov	w22, w1
   128cc:	cmp	w8, #0x2f
   128d0:	b.eq	12918 <canonicalize_filename_mode@@Base+0x8c>  // b.none
   128d4:	cbnz	w8, 12938 <canonicalize_filename_mode@@Base+0xac>
   128d8:	bl	aec0 <__errno_location@plt>
   128dc:	mov	w8, #0x2                   	// #2
   128e0:	b	128ec <canonicalize_filename_mode@@Base+0x60>
   128e4:	bl	aec0 <__errno_location@plt>
   128e8:	mov	w8, #0x16                  	// #22
   128ec:	mov	x21, xzr
   128f0:	str	w8, [x0]
   128f4:	mov	x0, x21
   128f8:	ldp	x20, x19, [sp, #256]
   128fc:	ldp	x22, x21, [sp, #240]
   12900:	ldp	x24, x23, [sp, #224]
   12904:	ldp	x26, x25, [sp, #208]
   12908:	ldp	x28, x27, [sp, #192]
   1290c:	ldp	x29, x30, [sp, #176]
   12910:	add	sp, sp, #0x110
   12914:	ret
   12918:	mov	w0, #0x1000                	// #4096
   1291c:	bl	a790 <xmalloc@plt>
   12920:	mov	w8, #0x2f                  	// #47
   12924:	mov	x19, x0
   12928:	mov	x21, x0
   1292c:	add	x20, x0, #0x1, lsl #12
   12930:	strb	w8, [x19], #1
   12934:	b	1297c <canonicalize_filename_mode@@Base+0xf0>
   12938:	bl	b000 <xgetcwd@plt>
   1293c:	mov	x21, x0
   12940:	cbz	x0, 128f4 <canonicalize_filename_mode@@Base+0x68>
   12944:	mov	x0, x21
   12948:	bl	a370 <strlen@plt>
   1294c:	mov	x20, x0
   12950:	cmp	x0, #0xfff
   12954:	b.gt	12974 <canonicalize_filename_mode@@Base+0xe8>
   12958:	mov	w1, #0x1000                	// #4096
   1295c:	mov	x0, x21
   12960:	bl	a6e0 <xrealloc@plt>
   12964:	mov	x21, x0
   12968:	add	x19, x0, x20
   1296c:	add	x20, x0, #0x1, lsl #12
   12970:	b	1297c <canonicalize_filename_mode@@Base+0xf0>
   12974:	add	x20, x21, x20
   12978:	mov	x19, x20
   1297c:	ldrb	w8, [x27]
   12980:	cbz	w8, 12cf4 <canonicalize_filename_mode@@Base+0x468>
   12984:	and	w9, w22, #0x7
   12988:	mov	x24, x19
   1298c:	mov	x23, x27
   12990:	stp	xzr, xzr, [sp, #8]
   12994:	str	xzr, [sp, #24]
   12998:	stp	w22, w9, [sp, #32]
   1299c:	and	w9, w8, #0xff
   129a0:	cmp	w9, #0x2f
   129a4:	mov	x28, x23
   129a8:	b.ne	129bc <canonicalize_filename_mode@@Base+0x130>  // b.any
   129ac:	ldrb	w8, [x28, #1]!
   129b0:	cmp	w8, #0x2f
   129b4:	b.eq	129ac <canonicalize_filename_mode@@Base+0x120>  // b.none
   129b8:	mov	x23, x28
   129bc:	mov	w9, w8
   129c0:	ands	w9, w9, #0xff
   129c4:	b.eq	129d8 <canonicalize_filename_mode@@Base+0x14c>  // b.none
   129c8:	cmp	w9, #0x2f
   129cc:	b.eq	129d8 <canonicalize_filename_mode@@Base+0x14c>  // b.none
   129d0:	ldrb	w9, [x23, #1]!
   129d4:	b	129c0 <canonicalize_filename_mode@@Base+0x134>
   129d8:	sub	x25, x23, x28
   129dc:	cmp	x25, #0x1
   129e0:	b.eq	12a3c <canonicalize_filename_mode@@Base+0x1b0>  // b.none
   129e4:	cmp	x25, #0x2
   129e8:	b.eq	129f4 <canonicalize_filename_mode@@Base+0x168>  // b.none
   129ec:	cbnz	x25, 12a50 <canonicalize_filename_mode@@Base+0x1c4>
   129f0:	b	12cfc <canonicalize_filename_mode@@Base+0x470>
   129f4:	and	w8, w8, #0xff
   129f8:	cmp	w8, #0x2e
   129fc:	b.ne	12a50 <canonicalize_filename_mode@@Base+0x1c4>  // b.any
   12a00:	ldrb	w8, [x28, #1]
   12a04:	cmp	w8, #0x2e
   12a08:	b.ne	12a50 <canonicalize_filename_mode@@Base+0x1c4>  // b.any
   12a0c:	add	x8, x21, #0x1
   12a10:	cmp	x24, x8
   12a14:	b.ls	12a48 <canonicalize_filename_mode@@Base+0x1bc>  // b.plast
   12a18:	sub	x8, x24, #0x1
   12a1c:	mov	x19, x8
   12a20:	cmp	x8, x21
   12a24:	b.ls	12b5c <canonicalize_filename_mode@@Base+0x2d0>  // b.plast
   12a28:	mov	x8, x19
   12a2c:	ldrb	w9, [x8, #-1]!
   12a30:	cmp	w9, #0x2f
   12a34:	b.ne	12a1c <canonicalize_filename_mode@@Base+0x190>  // b.any
   12a38:	b	12b5c <canonicalize_filename_mode@@Base+0x2d0>
   12a3c:	and	w8, w8, #0xff
   12a40:	cmp	w8, #0x2e
   12a44:	b.ne	12a50 <canonicalize_filename_mode@@Base+0x1c4>  // b.any
   12a48:	mov	x19, x24
   12a4c:	b	12b5c <canonicalize_filename_mode@@Base+0x2d0>
   12a50:	ldurb	w8, [x24, #-1]
   12a54:	cmp	w8, #0x2f
   12a58:	b.eq	12a64 <canonicalize_filename_mode@@Base+0x1d8>  // b.none
   12a5c:	mov	w8, #0x2f                  	// #47
   12a60:	strb	w8, [x24], #1
   12a64:	add	x8, x24, x25
   12a68:	cmp	x8, x20
   12a6c:	b.cc	12aa0 <canonicalize_filename_mode@@Base+0x214>  // b.lo, b.ul, b.last
   12a70:	cmp	x25, #0x1, lsl #12
   12a74:	mov	w9, #0x1000                	// #4096
   12a78:	sub	x8, x20, x21
   12a7c:	csinc	x9, x9, x25, lt  // lt = tstop
   12a80:	add	x22, x9, x8
   12a84:	mov	x0, x21
   12a88:	mov	x1, x22
   12a8c:	sub	x19, x24, x21
   12a90:	bl	a6e0 <xrealloc@plt>
   12a94:	mov	x21, x0
   12a98:	add	x20, x0, x22
   12a9c:	add	x24, x0, x19
   12aa0:	mov	x0, x24
   12aa4:	mov	x1, x28
   12aa8:	mov	x2, x25
   12aac:	bl	a2f0 <memcpy@plt>
   12ab0:	ldr	w8, [sp, #36]
   12ab4:	add	x19, x24, x25
   12ab8:	strb	wzr, [x19]
   12abc:	cmp	w8, #0x6
   12ac0:	b.eq	12af0 <canonicalize_filename_mode@@Base+0x264>  // b.none
   12ac4:	ldr	w8, [sp, #32]
   12ac8:	tbnz	w8, #2, 12b08 <canonicalize_filename_mode@@Base+0x27c>
   12acc:	add	x1, sp, #0x28
   12ad0:	mov	x0, x21
   12ad4:	bl	28318 <vasnprintf@@Base+0xc5c>
   12ad8:	cbz	w0, 12b18 <canonicalize_filename_mode@@Base+0x28c>
   12adc:	bl	aec0 <__errno_location@plt>
   12ae0:	ldr	w22, [x0]
   12ae4:	cmp	w26, #0x1
   12ae8:	b.eq	12b34 <canonicalize_filename_mode@@Base+0x2a8>  // b.none
   12aec:	cbz	w26, 12d60 <canonicalize_filename_mode@@Base+0x4d4>
   12af0:	str	wzr, [sp, #56]
   12af4:	cmp	w26, #0x2
   12af8:	b.eq	12b54 <canonicalize_filename_mode@@Base+0x2c8>  // b.none
   12afc:	ldrb	w8, [x23]
   12b00:	cbz	w8, 12b54 <canonicalize_filename_mode@@Base+0x2c8>
   12b04:	b	12d5c <canonicalize_filename_mode@@Base+0x4d0>
   12b08:	add	x1, sp, #0x28
   12b0c:	mov	x0, x21
   12b10:	bl	282f8 <vasnprintf@@Base+0xc3c>
   12b14:	cbnz	w0, 12adc <canonicalize_filename_mode@@Base+0x250>
   12b18:	ldr	w8, [sp, #56]
   12b1c:	and	w8, w8, #0xf000
   12b20:	cmp	w8, #0xa, lsl #12
   12b24:	b.eq	12b6c <canonicalize_filename_mode@@Base+0x2e0>  // b.none
   12b28:	cmp	w8, #0x4, lsl #12
   12b2c:	b.eq	12b54 <canonicalize_filename_mode@@Base+0x2c8>  // b.none
   12b30:	b	12af4 <canonicalize_filename_mode@@Base+0x268>
   12b34:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   12b38:	mov	x0, x23
   12b3c:	add	x1, x1, #0xb25
   12b40:	bl	ab70 <strspn@plt>
   12b44:	cmp	w22, #0x2
   12b48:	b.ne	12d60 <canonicalize_filename_mode@@Base+0x4d4>  // b.any
   12b4c:	ldrb	w8, [x23, x0]
   12b50:	cbnz	w8, 12d60 <canonicalize_filename_mode@@Base+0x4d4>
   12b54:	mov	x22, x23
   12b58:	mov	x23, x22
   12b5c:	ldrb	w8, [x23]
   12b60:	mov	x24, x19
   12b64:	cbnz	w8, 1299c <canonicalize_filename_mode@@Base+0x110>
   12b68:	b	12d00 <canonicalize_filename_mode@@Base+0x474>
   12b6c:	ldr	x0, [sp, #24]
   12b70:	cbnz	x0, 12b9c <canonicalize_filename_mode@@Base+0x310>
   12b74:	adrp	x2, 3c000 <vasnprintf@@Base+0x14944>
   12b78:	adrp	x3, 3c000 <vasnprintf@@Base+0x14944>
   12b7c:	adrp	x4, 3c000 <vasnprintf@@Base+0x14944>
   12b80:	ldr	x2, [x2, #3888]
   12b84:	ldr	x3, [x3, #3928]
   12b88:	ldr	x4, [x4, #3848]
   12b8c:	mov	w0, #0x7                   	// #7
   12b90:	mov	x1, xzr
   12b94:	bl	a880 <hash_initialize@plt>
   12b98:	cbz	x0, 12d9c <canonicalize_filename_mode@@Base+0x510>
   12b9c:	add	x2, sp, #0x28
   12ba0:	mov	x1, x27
   12ba4:	mov	x22, x0
   12ba8:	bl	aa50 <seen_file@plt>
   12bac:	str	x22, [sp, #24]
   12bb0:	tbz	w0, #0, 12bc0 <canonicalize_filename_mode@@Base+0x334>
   12bb4:	cmp	w26, #0x2
   12bb8:	b.eq	12b5c <canonicalize_filename_mode@@Base+0x2d0>  // b.none
   12bbc:	b	12d8c <canonicalize_filename_mode@@Base+0x500>
   12bc0:	add	x2, sp, #0x28
   12bc4:	mov	x0, x22
   12bc8:	mov	x1, x27
   12bcc:	bl	a670 <record_file@plt>
   12bd0:	ldr	x1, [sp, #88]
   12bd4:	mov	x0, x21
   12bd8:	bl	aba0 <areadlink_with_size@plt>
   12bdc:	cbz	x0, 12c30 <canonicalize_filename_mode@@Base+0x3a4>
   12be0:	mov	x28, x0
   12be4:	bl	a370 <strlen@plt>
   12be8:	mov	x22, x0
   12bec:	mov	x0, x23
   12bf0:	bl	a370 <strlen@plt>
   12bf4:	ldr	x8, [sp, #8]
   12bf8:	add	x2, x0, #0x1
   12bfc:	add	x27, x2, x22
   12c00:	str	x22, [sp]
   12c04:	cbz	x8, 12c4c <canonicalize_filename_mode@@Base+0x3c0>
   12c08:	cmp	x27, x8
   12c0c:	b.ls	12c70 <canonicalize_filename_mode@@Base+0x3e4>  // b.plast
   12c10:	ldr	x0, [sp, #16]
   12c14:	mov	x1, x27
   12c18:	mov	x22, x2
   12c1c:	bl	a6e0 <xrealloc@plt>
   12c20:	mov	x2, x22
   12c24:	mov	x22, x0
   12c28:	str	x27, [sp, #8]
   12c2c:	b	12c74 <canonicalize_filename_mode@@Base+0x3e8>
   12c30:	bl	aec0 <__errno_location@plt>
   12c34:	cmp	w26, #0x2
   12c38:	b.ne	12d94 <canonicalize_filename_mode@@Base+0x508>  // b.any
   12c3c:	ldr	w8, [x0]
   12c40:	cmp	w8, #0xc
   12c44:	b.ne	12b5c <canonicalize_filename_mode@@Base+0x2d0>  // b.any
   12c48:	b	12d94 <canonicalize_filename_mode@@Base+0x508>
   12c4c:	cmp	x27, #0x1, lsl #12
   12c50:	mov	w8, #0x1000                	// #4096
   12c54:	csel	x0, x27, x8, hi  // hi = pmore
   12c58:	str	x0, [sp, #8]
   12c5c:	mov	x22, x2
   12c60:	bl	a790 <xmalloc@plt>
   12c64:	mov	x2, x22
   12c68:	mov	x22, x0
   12c6c:	b	12c74 <canonicalize_filename_mode@@Base+0x3e8>
   12c70:	ldr	x22, [sp, #16]
   12c74:	ldr	x27, [sp]
   12c78:	mov	x1, x23
   12c7c:	add	x0, x22, x27
   12c80:	bl	a300 <memmove@plt>
   12c84:	mov	x0, x22
   12c88:	mov	x1, x28
   12c8c:	mov	x2, x27
   12c90:	bl	a2f0 <memcpy@plt>
   12c94:	ldrb	w8, [x28]
   12c98:	cmp	w8, #0x2f
   12c9c:	add	x8, x21, #0x1
   12ca0:	b.ne	12cb4 <canonicalize_filename_mode@@Base+0x428>  // b.any
   12ca4:	mov	w9, #0x2f                  	// #47
   12ca8:	strb	w9, [x21]
   12cac:	mov	x19, x8
   12cb0:	b	12ce0 <canonicalize_filename_mode@@Base+0x454>
   12cb4:	cmp	x19, x8
   12cb8:	b.ls	12ce0 <canonicalize_filename_mode@@Base+0x454>  // b.plast
   12cbc:	add	x8, x24, x25
   12cc0:	sub	x8, x8, #0x1
   12cc4:	mov	x19, x8
   12cc8:	cmp	x8, x21
   12ccc:	b.ls	12ce0 <canonicalize_filename_mode@@Base+0x454>  // b.plast
   12cd0:	mov	x8, x19
   12cd4:	ldrb	w9, [x8, #-1]!
   12cd8:	cmp	w9, #0x2f
   12cdc:	b.ne	12cc4 <canonicalize_filename_mode@@Base+0x438>  // b.any
   12ce0:	mov	x0, x28
   12ce4:	bl	aaa0 <free@plt>
   12ce8:	mov	x27, x22
   12cec:	str	x22, [sp, #16]
   12cf0:	b	12b58 <canonicalize_filename_mode@@Base+0x2cc>
   12cf4:	stp	xzr, xzr, [sp, #16]
   12cf8:	b	12d00 <canonicalize_filename_mode@@Base+0x474>
   12cfc:	mov	x19, x24
   12d00:	add	x8, x21, #0x1
   12d04:	cmp	x19, x8
   12d08:	b.ls	12d1c <canonicalize_filename_mode@@Base+0x490>  // b.plast
   12d0c:	mov	x8, x19
   12d10:	ldrb	w9, [x8, #-1]!
   12d14:	cmp	w9, #0x2f
   12d18:	csel	x19, x8, x19, eq  // eq = none
   12d1c:	ldr	x22, [sp, #16]
   12d20:	mov	x8, x19
   12d24:	strb	wzr, [x8], #1
   12d28:	cmp	x20, x8
   12d2c:	b.eq	12d44 <canonicalize_filename_mode@@Base+0x4b8>  // b.none
   12d30:	sub	x8, x19, x21
   12d34:	add	x1, x8, #0x1
   12d38:	mov	x0, x21
   12d3c:	bl	a6e0 <xrealloc@plt>
   12d40:	mov	x21, x0
   12d44:	mov	x0, x22
   12d48:	bl	aaa0 <free@plt>
   12d4c:	ldr	x0, [sp, #24]
   12d50:	cbz	x0, 128f4 <canonicalize_filename_mode@@Base+0x68>
   12d54:	bl	a5e0 <hash_free@plt>
   12d58:	b	128f4 <canonicalize_filename_mode@@Base+0x68>
   12d5c:	mov	w22, #0x14                  	// #20
   12d60:	ldr	x0, [sp, #16]
   12d64:	bl	aaa0 <free@plt>
   12d68:	mov	x0, x21
   12d6c:	bl	aaa0 <free@plt>
   12d70:	ldr	x0, [sp, #24]
   12d74:	cbz	x0, 12d7c <canonicalize_filename_mode@@Base+0x4f0>
   12d78:	bl	a5e0 <hash_free@plt>
   12d7c:	bl	aec0 <__errno_location@plt>
   12d80:	mov	x21, xzr
   12d84:	str	w22, [x0]
   12d88:	b	128f4 <canonicalize_filename_mode@@Base+0x68>
   12d8c:	mov	w22, #0x28                  	// #40
   12d90:	b	12d60 <canonicalize_filename_mode@@Base+0x4d4>
   12d94:	ldr	w22, [x0]
   12d98:	b	12d60 <canonicalize_filename_mode@@Base+0x4d4>
   12d9c:	bl	a910 <xalloc_die@plt>

0000000000012da0 <set_cloexec_flag@@Base>:
   12da0:	stp	x29, x30, [sp, #-32]!
   12da4:	stp	x20, x19, [sp, #16]
   12da8:	mov	w20, w1
   12dac:	mov	w1, #0x1                   	// #1
   12db0:	mov	w2, wzr
   12db4:	mov	x29, sp
   12db8:	mov	w19, w0
   12dbc:	bl	ac00 <rpl_fcntl@plt>
   12dc0:	tbnz	w0, #31, 12de4 <set_cloexec_flag@@Base+0x44>
   12dc4:	orr	w8, w0, #0x1
   12dc8:	and	w9, w0, #0xfffffffe
   12dcc:	tst	w20, #0x1
   12dd0:	csel	w2, w8, w9, ne  // ne = any
   12dd4:	cmp	w0, w2
   12dd8:	b.ne	12dec <set_cloexec_flag@@Base+0x4c>  // b.any
   12ddc:	mov	w0, wzr
   12de0:	b	12e00 <set_cloexec_flag@@Base+0x60>
   12de4:	mov	w0, #0xffffffff            	// #-1
   12de8:	b	12e00 <set_cloexec_flag@@Base+0x60>
   12dec:	mov	w1, #0x2                   	// #2
   12df0:	mov	w0, w19
   12df4:	bl	ac00 <rpl_fcntl@plt>
   12df8:	cmn	w0, #0x1
   12dfc:	csetm	w0, eq  // eq = none
   12e00:	ldp	x20, x19, [sp, #16]
   12e04:	ldp	x29, x30, [sp], #32
   12e08:	ret

0000000000012e0c <dup_cloexec@@Base>:
   12e0c:	mov	w1, #0x406                 	// #1030
   12e10:	mov	w2, wzr
   12e14:	b	ac00 <rpl_fcntl@plt>

0000000000012e18 <dir_name@@Base>:
   12e18:	stp	x29, x30, [sp, #-16]!
   12e1c:	mov	x29, sp
   12e20:	bl	a5a0 <mdir_name@plt>
   12e24:	cbz	x0, 12e30 <dir_name@@Base+0x18>
   12e28:	ldp	x29, x30, [sp], #16
   12e2c:	ret
   12e30:	bl	a910 <xalloc_die@plt>

0000000000012e34 <base_name@@Base>:
   12e34:	stp	x29, x30, [sp, #-32]!
   12e38:	stp	x20, x19, [sp, #16]
   12e3c:	mov	x29, sp
   12e40:	mov	x19, x0
   12e44:	bl	a800 <last_component@plt>
   12e48:	ldrb	w8, [x0]
   12e4c:	cbz	w8, 12e6c <base_name@@Base+0x38>
   12e50:	mov	x20, x0
   12e54:	bl	a2d0 <base_len@plt>
   12e58:	ldrb	w8, [x20, x0]
   12e5c:	cmp	w8, #0x2f
   12e60:	cinc	x1, x0, eq  // eq = none
   12e64:	mov	x0, x20
   12e68:	b	12e7c <base_name@@Base+0x48>
   12e6c:	mov	x0, x19
   12e70:	bl	a2d0 <base_len@plt>
   12e74:	mov	x1, x0
   12e78:	mov	x0, x19
   12e7c:	ldp	x20, x19, [sp, #16]
   12e80:	ldp	x29, x30, [sp], #32
   12e84:	b	ad10 <xstrndup@plt>

0000000000012e88 <dir_len@@Base>:
   12e88:	stp	x29, x30, [sp, #-48]!
   12e8c:	str	x21, [sp, #16]
   12e90:	stp	x20, x19, [sp, #32]
   12e94:	mov	x20, x0
   12e98:	ldrb	w8, [x20], #-1
   12e9c:	mov	x29, sp
   12ea0:	mov	x19, x0
   12ea4:	cmp	w8, #0x2f
   12ea8:	cset	w21, eq  // eq = none
   12eac:	bl	a800 <last_component@plt>
   12eb0:	sub	x8, x0, x19
   12eb4:	mov	x0, x8
   12eb8:	cmp	x8, x21
   12ebc:	b.ls	12ed0 <dir_len@@Base+0x48>  // b.plast
   12ec0:	ldrb	w8, [x20, x0]
   12ec4:	cmp	w8, #0x2f
   12ec8:	sub	x8, x0, #0x1
   12ecc:	b.eq	12eb4 <dir_len@@Base+0x2c>  // b.none
   12ed0:	ldp	x20, x19, [sp, #32]
   12ed4:	ldr	x21, [sp, #16]
   12ed8:	ldp	x29, x30, [sp], #48
   12edc:	ret

0000000000012ee0 <mdir_name@@Base>:
   12ee0:	stp	x29, x30, [sp, #-48]!
   12ee4:	str	x21, [sp, #16]
   12ee8:	stp	x20, x19, [sp, #32]
   12eec:	mov	x29, sp
   12ef0:	mov	x21, x0
   12ef4:	bl	aa70 <dir_len@plt>
   12ef8:	cmp	x0, #0x0
   12efc:	cinc	x8, x0, eq  // eq = none
   12f00:	mov	x19, x0
   12f04:	add	x0, x8, #0x1
   12f08:	bl	a660 <malloc@plt>
   12f0c:	mov	x20, x0
   12f10:	cbz	x0, 12f38 <mdir_name@@Base+0x58>
   12f14:	mov	x0, x20
   12f18:	mov	x1, x21
   12f1c:	mov	x2, x19
   12f20:	bl	a2f0 <memcpy@plt>
   12f24:	cbnz	x19, 12f34 <mdir_name@@Base+0x54>
   12f28:	mov	w8, #0x2e                  	// #46
   12f2c:	mov	w19, #0x1                   	// #1
   12f30:	strb	w8, [x20]
   12f34:	strb	wzr, [x20, x19]
   12f38:	mov	x0, x20
   12f3c:	ldp	x20, x19, [sp, #32]
   12f40:	ldr	x21, [sp, #16]
   12f44:	ldp	x29, x30, [sp], #48
   12f48:	ret

0000000000012f4c <last_component@@Base>:
   12f4c:	sub	x0, x0, #0x1
   12f50:	ldrb	w10, [x0, #1]!
   12f54:	cmp	w10, #0x2f
   12f58:	b.eq	12f50 <last_component@@Base+0x4>  // b.none
   12f5c:	mov	w8, wzr
   12f60:	mov	x9, x0
   12f64:	and	w10, w10, #0xff
   12f68:	cmp	w10, #0x2f
   12f6c:	b.eq	12f84 <last_component@@Base+0x38>  // b.none
   12f70:	cbz	w10, 12f90 <last_component@@Base+0x44>
   12f74:	tst	w8, #0x1
   12f78:	mov	w8, wzr
   12f7c:	csel	x0, x9, x0, ne  // ne = any
   12f80:	b	12f88 <last_component@@Base+0x3c>
   12f84:	mov	w8, #0x1                   	// #1
   12f88:	ldrb	w10, [x9, #1]!
   12f8c:	b	12f64 <last_component@@Base+0x18>
   12f90:	ret

0000000000012f94 <base_len@@Base>:
   12f94:	stp	x29, x30, [sp, #-32]!
   12f98:	str	x19, [sp, #16]
   12f9c:	mov	x29, sp
   12fa0:	mov	x19, x0
   12fa4:	bl	a370 <strlen@plt>
   12fa8:	mov	x8, x0
   12fac:	sub	x9, x19, #0x1
   12fb0:	mov	x0, x8
   12fb4:	cmp	x8, #0x2
   12fb8:	b.cc	12fcc <base_len@@Base+0x38>  // b.lo, b.ul, b.last
   12fbc:	ldrb	w8, [x9, x0]
   12fc0:	cmp	w8, #0x2f
   12fc4:	sub	x8, x0, #0x1
   12fc8:	b.eq	12fb0 <base_len@@Base+0x1c>  // b.none
   12fcc:	ldr	x19, [sp, #16]
   12fd0:	ldp	x29, x30, [sp], #32
   12fd4:	ret

0000000000012fd8 <strip_trailing_slashes@@Base>:
   12fd8:	stp	x29, x30, [sp, #-32]!
   12fdc:	str	x19, [sp, #16]
   12fe0:	mov	x29, sp
   12fe4:	mov	x19, x0
   12fe8:	bl	a800 <last_component@plt>
   12fec:	ldrb	w8, [x0]
   12ff0:	cmp	w8, #0x0
   12ff4:	csel	x19, x19, x0, eq  // eq = none
   12ff8:	mov	x0, x19
   12ffc:	bl	a2d0 <base_len@plt>
   13000:	ldrb	w8, [x19, x0]
   13004:	strb	wzr, [x19, x0]
   13008:	ldr	x19, [sp, #16]
   1300c:	cmp	w8, #0x0
   13010:	cset	w0, ne  // ne = any
   13014:	ldp	x29, x30, [sp], #32
   13018:	ret

000000000001301c <fd_safer_flag@@Base>:
   1301c:	stp	x29, x30, [sp, #-48]!
   13020:	stp	x20, x19, [sp, #32]
   13024:	mov	w19, w0
   13028:	cmp	w0, #0x2
   1302c:	stp	x22, x21, [sp, #16]
   13030:	mov	x29, sp
   13034:	b.hi	13064 <fd_safer_flag@@Base+0x48>  // b.pmore
   13038:	mov	w0, w19
   1303c:	bl	aca0 <dup_safer_flag@plt>
   13040:	mov	w20, w0
   13044:	bl	aec0 <__errno_location@plt>
   13048:	ldr	w22, [x0]
   1304c:	mov	x21, x0
   13050:	mov	w0, w19
   13054:	bl	a8d0 <close@plt>
   13058:	str	w22, [x21]
   1305c:	mov	w0, w20
   13060:	b	13068 <fd_safer_flag@@Base+0x4c>
   13064:	mov	w0, w19
   13068:	ldp	x20, x19, [sp, #32]
   1306c:	ldp	x22, x21, [sp, #16]
   13070:	ldp	x29, x30, [sp], #48
   13074:	ret

0000000000013078 <dup_safer_flag@@Base>:
   13078:	lsl	w8, w1, #12
   1307c:	mov	w9, #0x406                 	// #1030
   13080:	and	w1, w9, w8, asr #31
   13084:	mov	w2, #0x3                   	// #3
   13088:	b	ac00 <rpl_fcntl@plt>

000000000001308c <record_file@@Base>:
   1308c:	stp	x29, x30, [sp, #-48]!
   13090:	stp	x22, x21, [sp, #16]
   13094:	stp	x20, x19, [sp, #32]
   13098:	mov	x29, sp
   1309c:	cbz	x0, 130fc <record_file@@Base+0x70>
   130a0:	mov	x20, x0
   130a4:	mov	w0, #0x18                  	// #24
   130a8:	mov	x21, x2
   130ac:	mov	x22, x1
   130b0:	bl	a790 <xmalloc@plt>
   130b4:	mov	x19, x0
   130b8:	mov	x0, x22
   130bc:	bl	a7b0 <xstrdup@plt>
   130c0:	str	x0, [x19]
   130c4:	ldr	q0, [x21]
   130c8:	mov	x0, x20
   130cc:	mov	x1, x19
   130d0:	ext	v0.16b, v0.16b, v0.16b, #8
   130d4:	stur	q0, [x19, #8]
   130d8:	bl	a4a0 <hash_insert@plt>
   130dc:	cbz	x0, 1310c <record_file@@Base+0x80>
   130e0:	cmp	x0, x19
   130e4:	b.eq	130fc <record_file@@Base+0x70>  // b.none
   130e8:	mov	x0, x19
   130ec:	ldp	x20, x19, [sp, #32]
   130f0:	ldp	x22, x21, [sp, #16]
   130f4:	ldp	x29, x30, [sp], #48
   130f8:	b	a5b0 <triple_free@plt>
   130fc:	ldp	x20, x19, [sp, #32]
   13100:	ldp	x22, x21, [sp, #16]
   13104:	ldp	x29, x30, [sp], #48
   13108:	ret
   1310c:	bl	a910 <xalloc_die@plt>

0000000000013110 <seen_file@@Base>:
   13110:	cbz	x0, 13148 <seen_file@@Base+0x38>
   13114:	sub	sp, sp, #0x30
   13118:	stp	x29, x30, [sp, #32]
   1311c:	str	x1, [sp, #8]
   13120:	ldr	q0, [x2]
   13124:	add	x1, sp, #0x8
   13128:	add	x29, sp, #0x20
   1312c:	ext	v0.16b, v0.16b, v0.16b, #8
   13130:	stur	q0, [sp, #16]
   13134:	bl	a8f0 <hash_lookup@plt>
   13138:	ldp	x29, x30, [sp, #32]
   1313c:	cmp	x0, #0x0
   13140:	cset	w0, ne  // ne = any
   13144:	add	sp, sp, #0x30
   13148:	ret

000000000001314c <mfile_name_concat@@Base>:
   1314c:	stp	x29, x30, [sp, #-80]!
   13150:	stp	x26, x25, [sp, #16]
   13154:	stp	x24, x23, [sp, #32]
   13158:	stp	x22, x21, [sp, #48]
   1315c:	stp	x20, x19, [sp, #64]
   13160:	mov	x29, sp
   13164:	mov	x20, x2
   13168:	mov	x19, x1
   1316c:	mov	x22, x0
   13170:	bl	a800 <last_component@plt>
   13174:	mov	x21, x0
   13178:	bl	a2d0 <base_len@plt>
   1317c:	sub	x8, x21, x22
   13180:	mov	x24, x0
   13184:	add	x23, x8, x0
   13188:	mov	x0, x19
   1318c:	bl	a370 <strlen@plt>
   13190:	mov	x21, x0
   13194:	cbz	x24, 131b0 <mfile_name_concat@@Base+0x64>
   13198:	add	x8, x23, x22
   1319c:	ldurb	w8, [x8, #-1]
   131a0:	cmp	w8, #0x2f
   131a4:	b.ne	131c4 <mfile_name_concat@@Base+0x78>  // b.any
   131a8:	mov	w25, wzr
   131ac:	b	131d4 <mfile_name_concat@@Base+0x88>
   131b0:	ldrb	w8, [x19]
   131b4:	cmp	w8, #0x2f
   131b8:	mov	w8, #0x2e                  	// #46
   131bc:	csel	w25, w8, wzr, eq  // eq = none
   131c0:	b	131d4 <mfile_name_concat@@Base+0x88>
   131c4:	ldrb	w8, [x19]
   131c8:	cmp	w8, #0x2f
   131cc:	mov	w8, #0x2f                  	// #47
   131d0:	csel	w25, wzr, w8, eq  // eq = none
   131d4:	cmp	w25, #0x0
   131d8:	add	x8, x21, x23
   131dc:	cinc	x8, x8, ne  // ne = any
   131e0:	add	x0, x8, #0x1
   131e4:	cset	w26, ne  // ne = any
   131e8:	bl	a660 <malloc@plt>
   131ec:	mov	x24, x0
   131f0:	cbz	x0, 1322c <mfile_name_concat@@Base+0xe0>
   131f4:	mov	x0, x24
   131f8:	mov	x1, x22
   131fc:	mov	x2, x23
   13200:	bl	a2f0 <memcpy@plt>
   13204:	add	x8, x24, x23
   13208:	add	x22, x8, x26
   1320c:	strb	w25, [x8]
   13210:	cbz	x20, 13218 <mfile_name_concat@@Base+0xcc>
   13214:	str	x22, [x20]
   13218:	mov	x0, x22
   1321c:	mov	x1, x19
   13220:	mov	x2, x21
   13224:	bl	a2f0 <memcpy@plt>
   13228:	strb	wzr, [x22, x21]
   1322c:	mov	x0, x24
   13230:	ldp	x20, x19, [sp, #64]
   13234:	ldp	x22, x21, [sp, #48]
   13238:	ldp	x24, x23, [sp, #32]
   1323c:	ldp	x26, x25, [sp, #16]
   13240:	ldp	x29, x30, [sp], #80
   13244:	ret

0000000000013248 <getprogname@@Base>:
   13248:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1324c:	ldr	x8, [x8, #4008]
   13250:	ldr	x0, [x8]
   13254:	ret

0000000000013258 <gettime@@Base>:
   13258:	mov	x1, x0
   1325c:	mov	w0, wzr
   13260:	b	a540 <clock_gettime@plt>

0000000000013264 <current_timespec@@Base>:
   13264:	sub	sp, sp, #0x20
   13268:	mov	x1, sp
   1326c:	mov	w0, wzr
   13270:	stp	x29, x30, [sp, #16]
   13274:	add	x29, sp, #0x10
   13278:	bl	a540 <clock_gettime@plt>
   1327c:	ldp	x0, x1, [sp]
   13280:	ldp	x29, x30, [sp, #16]
   13284:	add	sp, sp, #0x20
   13288:	ret

000000000001328c <hard_locale@@Base>:
   1328c:	stp	x29, x30, [sp, #-32]!
   13290:	mov	x1, xzr
   13294:	str	x19, [sp, #16]
   13298:	mov	x29, sp
   1329c:	bl	afd0 <setlocale@plt>
   132a0:	cbz	x0, 132cc <hard_locale@@Base+0x40>
   132a4:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
   132a8:	add	x1, x1, #0x560
   132ac:	mov	x19, x0
   132b0:	bl	aa10 <strcmp@plt>
   132b4:	cbz	w0, 132d4 <hard_locale@@Base+0x48>
   132b8:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
   132bc:	add	x1, x1, #0x562
   132c0:	mov	x0, x19
   132c4:	bl	aa10 <strcmp@plt>
   132c8:	cbz	w0, 132d4 <hard_locale@@Base+0x48>
   132cc:	mov	w0, #0x1                   	// #1
   132d0:	b	132d8 <hard_locale@@Base+0x4c>
   132d4:	mov	w0, wzr
   132d8:	ldr	x19, [sp, #16]
   132dc:	ldp	x29, x30, [sp], #32
   132e0:	ret

00000000000132e4 <hash_get_n_buckets@@Base>:
   132e4:	ldr	x0, [x0, #16]
   132e8:	ret

00000000000132ec <hash_get_n_buckets_used@@Base>:
   132ec:	ldr	x0, [x0, #24]
   132f0:	ret

00000000000132f4 <hash_get_n_entries@@Base>:
   132f4:	ldr	x0, [x0, #32]
   132f8:	ret

00000000000132fc <hash_get_max_bucket_length@@Base>:
   132fc:	ldp	x8, x9, [x0]
   13300:	cmp	x8, x9
   13304:	b.cs	13340 <hash_get_max_bucket_length@@Base+0x44>  // b.hs, b.nlast
   13308:	mov	x0, xzr
   1330c:	ldr	x10, [x8]
   13310:	cbz	x10, 13330 <hash_get_max_bucket_length@@Base+0x34>
   13314:	mov	x10, xzr
   13318:	mov	x11, x8
   1331c:	ldr	x11, [x11, #8]
   13320:	add	x10, x10, #0x1
   13324:	cbnz	x11, 1331c <hash_get_max_bucket_length@@Base+0x20>
   13328:	cmp	x10, x0
   1332c:	csel	x0, x10, x0, hi  // hi = pmore
   13330:	add	x8, x8, #0x10
   13334:	cmp	x8, x9
   13338:	b.cc	1330c <hash_get_max_bucket_length@@Base+0x10>  // b.lo, b.ul, b.last
   1333c:	ret
   13340:	mov	x0, xzr
   13344:	ret

0000000000013348 <hash_table_ok@@Base>:
   13348:	ldp	x9, x10, [x0]
   1334c:	cmp	x9, x10
   13350:	b.cs	13388 <hash_table_ok@@Base+0x40>  // b.hs, b.nlast
   13354:	mov	x8, xzr
   13358:	mov	x11, xzr
   1335c:	ldr	x12, [x9]
   13360:	cbz	x12, 13378 <hash_table_ok@@Base+0x30>
   13364:	mov	x12, x9
   13368:	ldr	x12, [x12, #8]
   1336c:	add	x8, x8, #0x1
   13370:	cbnz	x12, 13368 <hash_table_ok@@Base+0x20>
   13374:	add	x11, x11, #0x1
   13378:	add	x9, x9, #0x10
   1337c:	cmp	x9, x10
   13380:	b.cc	1335c <hash_table_ok@@Base+0x14>  // b.lo, b.ul, b.last
   13384:	b	13390 <hash_table_ok@@Base+0x48>
   13388:	mov	x11, xzr
   1338c:	mov	x8, xzr
   13390:	ldr	x9, [x0, #24]
   13394:	cmp	x11, x9
   13398:	b.ne	133b0 <hash_table_ok@@Base+0x68>  // b.any
   1339c:	ldr	x9, [x0, #32]
   133a0:	cmp	x8, x9
   133a4:	b.ne	133b0 <hash_table_ok@@Base+0x68>  // b.any
   133a8:	mov	w0, #0x1                   	// #1
   133ac:	ret
   133b0:	mov	w0, wzr
   133b4:	ret

00000000000133b8 <hash_print_statistics@@Base>:
   133b8:	stp	x29, x30, [sp, #-48]!
   133bc:	stp	x22, x21, [sp, #16]
   133c0:	stp	x20, x19, [sp, #32]
   133c4:	ldp	x8, x9, [x0]
   133c8:	ldp	x20, x2, [x0, #24]
   133cc:	ldr	x22, [x0, #16]
   133d0:	mov	x19, x1
   133d4:	cmp	x8, x9
   133d8:	mov	x21, xzr
   133dc:	mov	x29, sp
   133e0:	b.cs	13414 <hash_print_statistics@@Base+0x5c>  // b.hs, b.nlast
   133e4:	ldr	x10, [x8]
   133e8:	cbz	x10, 13408 <hash_print_statistics@@Base+0x50>
   133ec:	mov	x10, xzr
   133f0:	mov	x11, x8
   133f4:	ldr	x11, [x11, #8]
   133f8:	add	x10, x10, #0x1
   133fc:	cbnz	x11, 133f4 <hash_print_statistics@@Base+0x3c>
   13400:	cmp	x10, x21
   13404:	csel	x21, x10, x21, hi  // hi = pmore
   13408:	add	x8, x8, #0x10
   1340c:	cmp	x8, x9
   13410:	b.cc	133e4 <hash_print_statistics@@Base+0x2c>  // b.lo, b.ul, b.last
   13414:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   13418:	add	x1, x1, #0x174
   1341c:	mov	x0, x19
   13420:	bl	afb0 <fprintf@plt>
   13424:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   13428:	add	x1, x1, #0x18c
   1342c:	mov	x0, x19
   13430:	mov	x2, x22
   13434:	bl	afb0 <fprintf@plt>
   13438:	mov	x8, #0x4059000000000000    	// #4636737291354636288
   1343c:	ucvtf	d0, x20
   13440:	fmov	d1, x8
   13444:	fmul	d0, d0, d1
   13448:	ucvtf	d1, x22
   1344c:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   13450:	fdiv	d0, d0, d1
   13454:	add	x1, x1, #0x1a4
   13458:	mov	x0, x19
   1345c:	mov	x2, x20
   13460:	bl	afb0 <fprintf@plt>
   13464:	mov	x0, x19
   13468:	mov	x2, x21
   1346c:	ldp	x20, x19, [sp, #32]
   13470:	ldp	x22, x21, [sp, #16]
   13474:	adrp	x1, 29000 <vasnprintf@@Base+0x1944>
   13478:	add	x1, x1, #0x1c5
   1347c:	ldp	x29, x30, [sp], #48
   13480:	b	afb0 <fprintf@plt>

0000000000013484 <hash_lookup@@Base>:
   13484:	stp	x29, x30, [sp, #-48]!
   13488:	stp	x20, x19, [sp, #32]
   1348c:	ldr	x8, [x0, #16]
   13490:	ldr	x9, [x0, #48]
   13494:	mov	x19, x0
   13498:	mov	x20, x1
   1349c:	mov	x0, x1
   134a0:	mov	x1, x8
   134a4:	str	x21, [sp, #16]
   134a8:	mov	x29, sp
   134ac:	blr	x9
   134b0:	ldr	x8, [x19, #16]
   134b4:	cmp	x0, x8
   134b8:	b.cs	13520 <hash_lookup@@Base+0x9c>  // b.hs, b.nlast
   134bc:	ldr	x8, [x19]
   134c0:	add	x21, x8, x0, lsl #4
   134c4:	ldr	x1, [x21]
   134c8:	mov	x0, xzr
   134cc:	cbz	x1, 13510 <hash_lookup@@Base+0x8c>
   134d0:	cbz	x8, 13510 <hash_lookup@@Base+0x8c>
   134d4:	cmp	x1, x20
   134d8:	b.eq	134fc <hash_lookup@@Base+0x78>  // b.none
   134dc:	ldr	x8, [x19, #56]
   134e0:	mov	x0, x20
   134e4:	blr	x8
   134e8:	tbnz	w0, #0, 13504 <hash_lookup@@Base+0x80>
   134ec:	ldr	x21, [x21, #8]
   134f0:	cbz	x21, 1350c <hash_lookup@@Base+0x88>
   134f4:	ldr	x1, [x21]
   134f8:	b	134d4 <hash_lookup@@Base+0x50>
   134fc:	mov	x0, x20
   13500:	b	13510 <hash_lookup@@Base+0x8c>
   13504:	ldr	x0, [x21]
   13508:	b	13510 <hash_lookup@@Base+0x8c>
   1350c:	mov	x0, xzr
   13510:	ldp	x20, x19, [sp, #32]
   13514:	ldr	x21, [sp, #16]
   13518:	ldp	x29, x30, [sp], #48
   1351c:	ret
   13520:	bl	a980 <abort@plt>

0000000000013524 <hash_get_first@@Base>:
   13524:	stp	x29, x30, [sp, #-16]!
   13528:	ldr	x8, [x0, #32]
   1352c:	mov	x29, sp
   13530:	cbz	x8, 1354c <hash_get_first@@Base+0x28>
   13534:	ldp	x8, x9, [x0]
   13538:	cmp	x8, x9
   1353c:	b.cs	13558 <hash_get_first@@Base+0x34>  // b.hs, b.nlast
   13540:	ldr	x0, [x8], #16
   13544:	cbz	x0, 13538 <hash_get_first@@Base+0x14>
   13548:	b	13550 <hash_get_first@@Base+0x2c>
   1354c:	mov	x0, xzr
   13550:	ldp	x29, x30, [sp], #16
   13554:	ret
   13558:	bl	a980 <abort@plt>

000000000001355c <hash_get_next@@Base>:
   1355c:	stp	x29, x30, [sp, #-32]!
   13560:	stp	x20, x19, [sp, #16]
   13564:	ldr	x8, [x0, #16]
   13568:	ldr	x9, [x0, #48]
   1356c:	mov	x19, x0
   13570:	mov	x20, x1
   13574:	mov	x0, x1
   13578:	mov	x1, x8
   1357c:	mov	x29, sp
   13580:	blr	x9
   13584:	ldr	x8, [x19, #16]
   13588:	cmp	x0, x8
   1358c:	b.cs	135e8 <hash_get_next@@Base+0x8c>  // b.hs, b.nlast
   13590:	ldr	x8, [x19]
   13594:	add	x9, x8, x0, lsl #4
   13598:	ldp	x10, x9, [x9]
   1359c:	cmp	x10, x20
   135a0:	b.eq	135ac <hash_get_next@@Base+0x50>  // b.none
   135a4:	cbnz	x9, 13598 <hash_get_next@@Base+0x3c>
   135a8:	b	135b8 <hash_get_next@@Base+0x5c>
   135ac:	cbz	x9, 135b8 <hash_get_next@@Base+0x5c>
   135b0:	ldr	x0, [x9]
   135b4:	b	135dc <hash_get_next@@Base+0x80>
   135b8:	ldr	x9, [x19, #8]
   135bc:	add	x8, x8, x0, lsl #4
   135c0:	add	x8, x8, #0x10
   135c4:	cmp	x8, x9
   135c8:	b.cs	135d8 <hash_get_next@@Base+0x7c>  // b.hs, b.nlast
   135cc:	ldr	x0, [x8], #16
   135d0:	cbz	x0, 135c4 <hash_get_next@@Base+0x68>
   135d4:	b	135dc <hash_get_next@@Base+0x80>
   135d8:	mov	x0, xzr
   135dc:	ldp	x20, x19, [sp, #16]
   135e0:	ldp	x29, x30, [sp], #32
   135e4:	ret
   135e8:	bl	a980 <abort@plt>

00000000000135ec <hash_get_entries@@Base>:
   135ec:	ldp	x9, x10, [x0]
   135f0:	cmp	x9, x10
   135f4:	b.cs	1364c <hash_get_entries@@Base+0x60>  // b.hs, b.nlast
   135f8:	mov	x11, xzr
   135fc:	ldr	x8, [x9]
   13600:	cbz	x8, 13634 <hash_get_entries@@Base+0x48>
   13604:	cbz	x9, 13634 <hash_get_entries@@Base+0x48>
   13608:	mov	x10, x9
   1360c:	cmp	x11, x2
   13610:	b.cs	13654 <hash_get_entries@@Base+0x68>  // b.hs, b.nlast
   13614:	ldr	x8, [x10]
   13618:	str	x8, [x1, x11, lsl #3]
   1361c:	ldr	x10, [x10, #8]
   13620:	add	x8, x11, #0x1
   13624:	mov	x11, x8
   13628:	cbnz	x10, 1360c <hash_get_entries@@Base+0x20>
   1362c:	ldr	x10, [x0, #8]
   13630:	b	13638 <hash_get_entries@@Base+0x4c>
   13634:	mov	x8, x11
   13638:	add	x9, x9, #0x10
   1363c:	cmp	x9, x10
   13640:	mov	x11, x8
   13644:	b.cc	135fc <hash_get_entries@@Base+0x10>  // b.lo, b.ul, b.last
   13648:	b	13658 <hash_get_entries@@Base+0x6c>
   1364c:	mov	x8, xzr
   13650:	b	13658 <hash_get_entries@@Base+0x6c>
   13654:	mov	x8, x11
   13658:	mov	x0, x8
   1365c:	ret

0000000000013660 <hash_do_for_each@@Base>:
   13660:	stp	x29, x30, [sp, #-64]!
   13664:	stp	x24, x23, [sp, #16]
   13668:	stp	x22, x21, [sp, #32]
   1366c:	stp	x20, x19, [sp, #48]
   13670:	ldp	x23, x8, [x0]
   13674:	mov	x29, sp
   13678:	cmp	x23, x8
   1367c:	b.cs	136e0 <hash_do_for_each@@Base+0x80>  // b.hs, b.nlast
   13680:	mov	x19, x2
   13684:	mov	x20, x0
   13688:	mov	x21, x1
   1368c:	mov	x22, xzr
   13690:	ldr	x0, [x23]
   13694:	cbz	x0, 136d0 <hash_do_for_each@@Base+0x70>
   13698:	cbz	x23, 136d0 <hash_do_for_each@@Base+0x70>
   1369c:	mov	x1, x19
   136a0:	blr	x21
   136a4:	tbz	w0, #0, 136e4 <hash_do_for_each@@Base+0x84>
   136a8:	mov	x24, x23
   136ac:	ldr	x24, [x24, #8]
   136b0:	add	x22, x22, #0x1
   136b4:	cbz	x24, 136cc <hash_do_for_each@@Base+0x6c>
   136b8:	ldr	x0, [x24]
   136bc:	mov	x1, x19
   136c0:	blr	x21
   136c4:	tbnz	w0, #0, 136ac <hash_do_for_each@@Base+0x4c>
   136c8:	b	136e4 <hash_do_for_each@@Base+0x84>
   136cc:	ldr	x8, [x20, #8]
   136d0:	add	x23, x23, #0x10
   136d4:	cmp	x23, x8
   136d8:	b.cc	13690 <hash_do_for_each@@Base+0x30>  // b.lo, b.ul, b.last
   136dc:	b	136e4 <hash_do_for_each@@Base+0x84>
   136e0:	mov	x22, xzr
   136e4:	mov	x0, x22
   136e8:	ldp	x20, x19, [sp, #48]
   136ec:	ldp	x22, x21, [sp, #32]
   136f0:	ldp	x24, x23, [sp, #16]
   136f4:	ldp	x29, x30, [sp], #64
   136f8:	ret

00000000000136fc <hash_string@@Base>:
   136fc:	ldrb	w9, [x0]
   13700:	cbz	w9, 13730 <hash_string@@Base+0x34>
   13704:	mov	x8, x0
   13708:	mov	x0, xzr
   1370c:	add	x8, x8, #0x1
   13710:	lsl	x10, x0, #5
   13714:	sub	x10, x10, x0
   13718:	add	x10, x10, w9, uxtb
   1371c:	ldrb	w9, [x8], #1
   13720:	udiv	x11, x10, x1
   13724:	msub	x0, x11, x1, x10
   13728:	cbnz	w9, 13710 <hash_string@@Base+0x14>
   1372c:	ret
   13730:	mov	x0, xzr
   13734:	ret

0000000000013738 <hash_reset_tuning@@Base>:
   13738:	adrp	x8, 29000 <vasnprintf@@Base+0x1944>
   1373c:	add	x8, x8, #0x1e0
   13740:	ldr	w9, [x8, #16]
   13744:	ldr	q0, [x8]
   13748:	str	w9, [x0, #16]
   1374c:	str	q0, [x0]
   13750:	ret

0000000000013754 <hash_initialize@@Base>:
   13754:	stp	x29, x30, [sp, #-64]!
   13758:	adrp	x8, 13000 <strip_trailing_slashes@@Base+0x28>
   1375c:	add	x8, x8, #0x828
   13760:	cmp	x2, #0x0
   13764:	adrp	x9, 13000 <strip_trailing_slashes@@Base+0x28>
   13768:	stp	x24, x23, [sp, #16]
   1376c:	stp	x22, x21, [sp, #32]
   13770:	mov	x21, x0
   13774:	add	x9, x9, #0x838
   13778:	csel	x23, x8, x2, eq  // eq = none
   1377c:	cmp	x3, #0x0
   13780:	mov	w0, #0x50                  	// #80
   13784:	stp	x20, x19, [sp, #48]
   13788:	mov	x29, sp
   1378c:	mov	x19, x4
   13790:	mov	x22, x1
   13794:	csel	x24, x9, x3, eq  // eq = none
   13798:	bl	a660 <malloc@plt>
   1379c:	mov	x20, x0
   137a0:	cbz	x0, 13810 <hash_initialize@@Base+0xbc>
   137a4:	adrp	x8, 29000 <vasnprintf@@Base+0x1944>
   137a8:	add	x8, x8, #0x1e0
   137ac:	cmp	x22, #0x0
   137b0:	csel	x22, x8, x22, eq  // eq = none
   137b4:	mov	x0, x20
   137b8:	str	x22, [x20, #40]
   137bc:	bl	13844 <hash_initialize@@Base+0xf0>
   137c0:	tbz	w0, #0, 13804 <hash_initialize@@Base+0xb0>
   137c4:	mov	x0, x21
   137c8:	mov	x1, x22
   137cc:	bl	138d8 <hash_initialize@@Base+0x184>
   137d0:	str	x0, [x20, #16]
   137d4:	cbz	x0, 13804 <hash_initialize@@Base+0xb0>
   137d8:	mov	w1, #0x10                  	// #16
   137dc:	mov	x21, x0
   137e0:	bl	a7f0 <calloc@plt>
   137e4:	str	x0, [x20]
   137e8:	cbz	x0, 13804 <hash_initialize@@Base+0xb0>
   137ec:	add	x8, x0, x21, lsl #4
   137f0:	stp	xzr, xzr, [x20, #24]
   137f4:	stp	x23, x24, [x20, #48]
   137f8:	str	x8, [x20, #8]
   137fc:	stp	x19, xzr, [x20, #64]
   13800:	b	13810 <hash_initialize@@Base+0xbc>
   13804:	mov	x0, x20
   13808:	bl	aaa0 <free@plt>
   1380c:	mov	x20, xzr
   13810:	mov	x0, x20
   13814:	ldp	x20, x19, [sp, #48]
   13818:	ldp	x22, x21, [sp, #32]
   1381c:	ldp	x24, x23, [sp, #16]
   13820:	ldp	x29, x30, [sp], #64
   13824:	ret
   13828:	ror	x8, x0, #3
   1382c:	udiv	x9, x8, x1
   13830:	msub	x0, x9, x1, x8
   13834:	ret
   13838:	cmp	x0, x1
   1383c:	cset	w0, eq  // eq = none
   13840:	ret
   13844:	ldr	x8, [x0, #40]
   13848:	adrp	x9, 29000 <vasnprintf@@Base+0x1944>
   1384c:	add	x9, x9, #0x1e0
   13850:	cmp	x8, x9
   13854:	b.eq	138c0 <hash_initialize@@Base+0x16c>  // b.none
   13858:	adrp	x10, 29000 <vasnprintf@@Base+0x1944>
   1385c:	ldr	s0, [x8, #8]
   13860:	ldr	s1, [x10, #360]
   13864:	fcmp	s0, s1
   13868:	b.le	138c8 <hash_initialize@@Base+0x174>
   1386c:	adrp	x10, 29000 <vasnprintf@@Base+0x1944>
   13870:	ldr	s2, [x10, #364]
   13874:	fcmp	s0, s2
   13878:	b.pl	138c8 <hash_initialize@@Base+0x174>  // b.nfrst
   1387c:	adrp	x10, 29000 <vasnprintf@@Base+0x1944>
   13880:	ldr	s2, [x8, #12]
   13884:	ldr	s3, [x10, #368]
   13888:	fcmp	s2, s3
   1388c:	b.le	138c8 <hash_initialize@@Base+0x174>
   13890:	ldr	s2, [x8]
   13894:	fcmp	s2, #0.0
   13898:	b.lt	138c8 <hash_initialize@@Base+0x174>  // b.tstop
   1389c:	fadd	s1, s2, s1
   138a0:	fcmp	s1, s0
   138a4:	b.pl	138c8 <hash_initialize@@Base+0x174>  // b.nfrst
   138a8:	ldr	s0, [x8, #4]
   138ac:	fmov	s2, #1.000000000000000000e+00
   138b0:	fcmp	s0, s2
   138b4:	b.hi	138c8 <hash_initialize@@Base+0x174>  // b.pmore
   138b8:	fcmp	s1, s0
   138bc:	b.pl	138c8 <hash_initialize@@Base+0x174>  // b.nfrst
   138c0:	mov	w8, #0x1                   	// #1
   138c4:	b	138d0 <hash_initialize@@Base+0x17c>
   138c8:	mov	w8, wzr
   138cc:	str	x9, [x0, #40]
   138d0:	mov	w0, w8
   138d4:	ret
   138d8:	ldrb	w8, [x1, #16]
   138dc:	cbnz	w8, 13900 <hash_initialize@@Base+0x1ac>
   138e0:	ldr	s0, [x1, #8]
   138e4:	ucvtf	s1, x0
   138e8:	mov	w8, #0x5f800000            	// #1602224128
   138ec:	fdiv	s0, s1, s0
   138f0:	fmov	s1, w8
   138f4:	fcmp	s0, s1
   138f8:	b.ge	13974 <hash_initialize@@Base+0x220>  // b.tcont
   138fc:	fcvtzu	x0, s0
   13900:	cmp	x0, #0xa
   13904:	mov	w8, #0xa                   	// #10
   13908:	csel	x8, x0, x8, hi  // hi = pmore
   1390c:	orr	x0, x8, #0x1
   13910:	cmn	x0, #0x1
   13914:	b.eq	13974 <hash_initialize@@Base+0x220>  // b.none
   13918:	cmp	x0, #0xa
   1391c:	b.cc	13954 <hash_initialize@@Base+0x200>  // b.lo, b.ul, b.last
   13920:	mov	w9, #0xc                   	// #12
   13924:	mov	w10, #0x9                   	// #9
   13928:	mov	w8, #0x3                   	// #3
   1392c:	udiv	x11, x0, x8
   13930:	msub	x11, x11, x8, x0
   13934:	cbz	x11, 13958 <hash_initialize@@Base+0x204>
   13938:	add	x10, x10, x9
   1393c:	add	x10, x10, #0x4
   13940:	add	x8, x8, #0x2
   13944:	cmp	x10, x0
   13948:	add	x9, x9, #0x8
   1394c:	b.cc	1392c <hash_initialize@@Base+0x1d8>  // b.lo, b.ul, b.last
   13950:	b	13958 <hash_initialize@@Base+0x204>
   13954:	mov	w8, #0x3                   	// #3
   13958:	udiv	x9, x0, x8
   1395c:	msub	x8, x9, x8, x0
   13960:	cbnz	x8, 1396c <hash_initialize@@Base+0x218>
   13964:	add	x0, x0, #0x2
   13968:	b	13910 <hash_initialize@@Base+0x1bc>
   1396c:	lsr	x8, x0, #60
   13970:	cbz	x8, 13978 <hash_initialize@@Base+0x224>
   13974:	mov	x0, xzr
   13978:	ret

000000000001397c <hash_clear@@Base>:
   1397c:	stp	x29, x30, [sp, #-48]!
   13980:	str	x21, [sp, #16]
   13984:	stp	x20, x19, [sp, #32]
   13988:	ldp	x20, x8, [x0]
   1398c:	mov	x19, x0
   13990:	mov	x29, sp
   13994:	cmp	x20, x8
   13998:	b.cs	13a08 <hash_clear@@Base+0x8c>  // b.hs, b.nlast
   1399c:	ldr	x9, [x20]
   139a0:	cbz	x9, 13a00 <hash_clear@@Base+0x84>
   139a4:	ldr	x8, [x19, #64]
   139a8:	ldr	x21, [x20, #8]
   139ac:	cmp	x8, #0x0
   139b0:	cset	w9, ne  // ne = any
   139b4:	cbz	x21, 139ec <hash_clear@@Base+0x70>
   139b8:	tbz	w9, #0, 139c8 <hash_clear@@Base+0x4c>
   139bc:	ldr	x0, [x21]
   139c0:	blr	x8
   139c4:	ldr	x8, [x19, #64]
   139c8:	str	xzr, [x21]
   139cc:	ldr	x9, [x19, #72]
   139d0:	ldr	x10, [x21, #8]
   139d4:	cmp	x8, #0x0
   139d8:	str	x9, [x21, #8]
   139dc:	str	x21, [x19, #72]
   139e0:	cset	w9, ne  // ne = any
   139e4:	mov	x21, x10
   139e8:	cbnz	x10, 139b8 <hash_clear@@Base+0x3c>
   139ec:	cbz	w9, 139f8 <hash_clear@@Base+0x7c>
   139f0:	ldr	x0, [x20]
   139f4:	blr	x8
   139f8:	stp	xzr, xzr, [x20]
   139fc:	ldr	x8, [x19, #8]
   13a00:	add	x20, x20, #0x10
   13a04:	b	13994 <hash_clear@@Base+0x18>
   13a08:	stp	xzr, xzr, [x19, #24]
   13a0c:	ldp	x20, x19, [sp, #32]
   13a10:	ldr	x21, [sp, #16]
   13a14:	ldp	x29, x30, [sp], #48
   13a18:	ret

0000000000013a1c <hash_free@@Base>:
   13a1c:	stp	x29, x30, [sp, #-48]!
   13a20:	stp	x20, x19, [sp, #32]
   13a24:	ldr	x8, [x0, #64]
   13a28:	mov	x19, x0
   13a2c:	str	x21, [sp, #16]
   13a30:	mov	x29, sp
   13a34:	cbz	x8, 13a88 <hash_free@@Base+0x6c>
   13a38:	ldr	x8, [x19, #32]
   13a3c:	cbz	x8, 13a88 <hash_free@@Base+0x6c>
   13a40:	ldp	x20, x8, [x19]
   13a44:	cmp	x20, x8
   13a48:	b.cs	13a88 <hash_free@@Base+0x6c>  // b.hs, b.nlast
   13a4c:	ldr	x0, [x20]
   13a50:	cbz	x0, 13a80 <hash_free@@Base+0x64>
   13a54:	cbz	x20, 13a80 <hash_free@@Base+0x64>
   13a58:	ldr	x8, [x19, #64]
   13a5c:	blr	x8
   13a60:	ldr	x21, [x20, #8]
   13a64:	cbz	x21, 13a7c <hash_free@@Base+0x60>
   13a68:	ldr	x0, [x21]
   13a6c:	ldr	x8, [x19, #64]
   13a70:	blr	x8
   13a74:	ldr	x21, [x21, #8]
   13a78:	cbnz	x21, 13a68 <hash_free@@Base+0x4c>
   13a7c:	ldr	x8, [x19, #8]
   13a80:	add	x20, x20, #0x10
   13a84:	b	13a44 <hash_free@@Base+0x28>
   13a88:	ldp	x20, x8, [x19]
   13a8c:	cmp	x20, x8
   13a90:	b.cs	13ab8 <hash_free@@Base+0x9c>  // b.hs, b.nlast
   13a94:	ldr	x0, [x20, #8]
   13a98:	cbz	x0, 13ab0 <hash_free@@Base+0x94>
   13a9c:	ldr	x21, [x0, #8]
   13aa0:	bl	aaa0 <free@plt>
   13aa4:	mov	x0, x21
   13aa8:	cbnz	x21, 13a9c <hash_free@@Base+0x80>
   13aac:	ldr	x8, [x19, #8]
   13ab0:	add	x20, x20, #0x10
   13ab4:	b	13a8c <hash_free@@Base+0x70>
   13ab8:	ldr	x0, [x19, #72]
   13abc:	cbz	x0, 13ad0 <hash_free@@Base+0xb4>
   13ac0:	ldr	x20, [x0, #8]
   13ac4:	bl	aaa0 <free@plt>
   13ac8:	mov	x0, x20
   13acc:	cbnz	x20, 13ac0 <hash_free@@Base+0xa4>
   13ad0:	ldr	x0, [x19]
   13ad4:	bl	aaa0 <free@plt>
   13ad8:	mov	x0, x19
   13adc:	ldp	x20, x19, [sp, #32]
   13ae0:	ldr	x21, [sp, #16]
   13ae4:	ldp	x29, x30, [sp], #48
   13ae8:	b	aaa0 <free@plt>

0000000000013aec <hash_rehash@@Base>:
   13aec:	sub	sp, sp, #0x80
   13af0:	stp	x29, x30, [sp, #80]
   13af4:	stp	x20, x19, [sp, #112]
   13af8:	ldr	x20, [x0, #40]
   13afc:	mov	x19, x0
   13b00:	mov	x0, x1
   13b04:	str	x21, [sp, #96]
   13b08:	mov	x1, x20
   13b0c:	add	x29, sp, #0x50
   13b10:	bl	138d8 <hash_initialize@@Base+0x184>
   13b14:	cbz	x0, 13b94 <hash_rehash@@Base+0xa8>
   13b18:	ldr	x8, [x19, #16]
   13b1c:	mov	x21, x0
   13b20:	cmp	x0, x8
   13b24:	b.eq	13b90 <hash_rehash@@Base+0xa4>  // b.none
   13b28:	mov	w1, #0x10                  	// #16
   13b2c:	mov	x0, x21
   13b30:	bl	a7f0 <calloc@plt>
   13b34:	str	x0, [sp]
   13b38:	cbz	x0, 13b94 <hash_rehash@@Base+0xa8>
   13b3c:	add	x8, x0, x21, lsl #4
   13b40:	stp	xzr, xzr, [sp, #24]
   13b44:	stp	x8, x21, [sp, #8]
   13b48:	str	x20, [sp, #40]
   13b4c:	ldr	q0, [x19, #48]
   13b50:	mov	x0, sp
   13b54:	mov	x1, x19
   13b58:	mov	w2, wzr
   13b5c:	str	q0, [sp, #48]
   13b60:	ldr	q0, [x19, #64]
   13b64:	str	q0, [sp, #64]
   13b68:	bl	13bec <hash_rehash@@Base+0x100>
   13b6c:	tbz	w0, #0, 13ba8 <hash_rehash@@Base+0xbc>
   13b70:	ldr	x0, [x19]
   13b74:	bl	aaa0 <free@plt>
   13b78:	ldr	q0, [sp]
   13b7c:	str	q0, [x19]
   13b80:	ldr	q0, [sp, #16]
   13b84:	str	q0, [x19, #16]
   13b88:	ldr	x8, [sp, #72]
   13b8c:	str	x8, [x19, #72]
   13b90:	mov	w0, #0x1                   	// #1
   13b94:	ldp	x20, x19, [sp, #112]
   13b98:	ldr	x21, [sp, #96]
   13b9c:	ldp	x29, x30, [sp, #80]
   13ba0:	add	sp, sp, #0x80
   13ba4:	ret
   13ba8:	ldr	x8, [sp, #72]
   13bac:	mov	x1, sp
   13bb0:	mov	w2, #0x1                   	// #1
   13bb4:	mov	x0, x19
   13bb8:	str	x8, [x19, #72]
   13bbc:	bl	13bec <hash_rehash@@Base+0x100>
   13bc0:	tbz	w0, #0, 13be8 <hash_rehash@@Base+0xfc>
   13bc4:	mov	x1, sp
   13bc8:	mov	x0, x19
   13bcc:	mov	w2, wzr
   13bd0:	bl	13bec <hash_rehash@@Base+0x100>
   13bd4:	tbz	w0, #0, 13be8 <hash_rehash@@Base+0xfc>
   13bd8:	ldr	x0, [sp]
   13bdc:	bl	aaa0 <free@plt>
   13be0:	mov	w0, wzr
   13be4:	b	13b94 <hash_rehash@@Base+0xa8>
   13be8:	bl	a980 <abort@plt>
   13bec:	stp	x29, x30, [sp, #-80]!
   13bf0:	stp	x26, x25, [sp, #16]
   13bf4:	stp	x24, x23, [sp, #32]
   13bf8:	stp	x22, x21, [sp, #48]
   13bfc:	stp	x20, x19, [sp, #64]
   13c00:	ldp	x24, x8, [x1]
   13c04:	mov	x29, sp
   13c08:	cmp	x24, x8
   13c0c:	b.cs	13d3c <hash_rehash@@Base+0x250>  // b.hs, b.nlast
   13c10:	mov	w19, w2
   13c14:	mov	x20, x1
   13c18:	mov	x21, x0
   13c1c:	add	x25, x0, #0x48
   13c20:	ldr	x22, [x24]
   13c24:	cbz	x22, 13d2c <hash_rehash@@Base+0x240>
   13c28:	ldr	x23, [x24, #8]
   13c2c:	cbz	x23, 13c9c <hash_rehash@@Base+0x1b0>
   13c30:	ldr	x1, [x21, #16]
   13c34:	ldr	x22, [x23]
   13c38:	ldr	x8, [x21, #48]
   13c3c:	mov	x0, x22
   13c40:	blr	x8
   13c44:	ldr	x1, [x21, #16]
   13c48:	cmp	x0, x1
   13c4c:	b.cs	13d58 <hash_rehash@@Base+0x26c>  // b.hs, b.nlast
   13c50:	ldr	x8, [x21]
   13c54:	add	x9, x8, x0, lsl #4
   13c58:	ldr	x10, [x9]
   13c5c:	ldr	x8, [x23, #8]
   13c60:	cbz	x10, 13c6c <hash_rehash@@Base+0x180>
   13c64:	add	x9, x9, #0x8
   13c68:	b	13c84 <hash_rehash@@Base+0x198>
   13c6c:	str	x22, [x9]
   13c70:	ldr	x9, [x21, #24]
   13c74:	add	x9, x9, #0x1
   13c78:	str	x9, [x21, #24]
   13c7c:	mov	x9, x25
   13c80:	str	xzr, [x23]
   13c84:	ldr	x10, [x9]
   13c88:	str	x10, [x23, #8]
   13c8c:	str	x23, [x9]
   13c90:	mov	x23, x8
   13c94:	cbnz	x8, 13c34 <hash_rehash@@Base+0x148>
   13c98:	ldr	x22, [x24]
   13c9c:	str	xzr, [x24, #8]
   13ca0:	tbnz	w19, #0, 13d2c <hash_rehash@@Base+0x240>
   13ca4:	ldr	x8, [x21, #48]
   13ca8:	ldr	x1, [x21, #16]
   13cac:	mov	x0, x22
   13cb0:	blr	x8
   13cb4:	ldr	x8, [x21, #16]
   13cb8:	cmp	x0, x8
   13cbc:	b.cs	13d58 <hash_rehash@@Base+0x26c>  // b.hs, b.nlast
   13cc0:	ldr	x26, [x21]
   13cc4:	mov	x23, x0
   13cc8:	add	x8, x26, x0, lsl #4
   13ccc:	ldr	x9, [x8]
   13cd0:	cbz	x9, 13ce8 <hash_rehash@@Base+0x1fc>
   13cd4:	ldr	x0, [x25]
   13cd8:	cbz	x0, 13cfc <hash_rehash@@Base+0x210>
   13cdc:	ldr	x8, [x0, #8]
   13ce0:	str	x8, [x25]
   13ce4:	b	13d08 <hash_rehash@@Base+0x21c>
   13ce8:	str	x22, [x8]
   13cec:	ldr	x8, [x21, #24]
   13cf0:	add	x8, x8, #0x1
   13cf4:	str	x8, [x21, #24]
   13cf8:	b	13d1c <hash_rehash@@Base+0x230>
   13cfc:	mov	w0, #0x10                  	// #16
   13d00:	bl	a660 <malloc@plt>
   13d04:	cbz	x0, 13d40 <hash_rehash@@Base+0x254>
   13d08:	str	x22, [x0]
   13d0c:	add	x8, x26, x23, lsl #4
   13d10:	ldr	x9, [x8, #8]
   13d14:	str	x9, [x0, #8]
   13d18:	str	x0, [x8, #8]
   13d1c:	str	xzr, [x24]
   13d20:	ldr	x8, [x20, #24]
   13d24:	sub	x8, x8, #0x1
   13d28:	str	x8, [x20, #24]
   13d2c:	ldr	x8, [x20, #8]
   13d30:	add	x24, x24, #0x10
   13d34:	cmp	x24, x8
   13d38:	b.cc	13c20 <hash_rehash@@Base+0x134>  // b.lo, b.ul, b.last
   13d3c:	mov	w0, #0x1                   	// #1
   13d40:	ldp	x20, x19, [sp, #64]
   13d44:	ldp	x22, x21, [sp, #48]
   13d48:	ldp	x24, x23, [sp, #32]
   13d4c:	ldp	x26, x25, [sp, #16]
   13d50:	ldp	x29, x30, [sp], #80
   13d54:	ret
   13d58:	bl	a980 <abort@plt>

0000000000013d5c <hash_insert_if_absent@@Base>:
   13d5c:	stp	x29, x30, [sp, #-48]!
   13d60:	str	x21, [sp, #16]
   13d64:	stp	x20, x19, [sp, #32]
   13d68:	mov	x29, sp
   13d6c:	cbz	x1, 13ec0 <hash_insert_if_absent@@Base+0x164>
   13d70:	mov	x21, x2
   13d74:	add	x2, x29, #0x18
   13d78:	mov	w3, wzr
   13d7c:	mov	x20, x1
   13d80:	mov	x19, x0
   13d84:	bl	13ec4 <hash_insert_if_absent@@Base+0x168>
   13d88:	cbz	x0, 13da0 <hash_insert_if_absent@@Base+0x44>
   13d8c:	cbz	x21, 13e58 <hash_insert_if_absent@@Base+0xfc>
   13d90:	mov	x8, x0
   13d94:	mov	w0, wzr
   13d98:	str	x8, [x21]
   13d9c:	b	13eb0 <hash_insert_if_absent@@Base+0x154>
   13da0:	ldr	x8, [x19, #40]
   13da4:	ldp	x10, x9, [x19, #16]
   13da8:	ldr	s0, [x8, #8]
   13dac:	ucvtf	s2, x10
   13db0:	ucvtf	s1, x9
   13db4:	fmul	s0, s0, s2
   13db8:	fcmp	s0, s1
   13dbc:	b.pl	13e38 <hash_insert_if_absent@@Base+0xdc>  // b.nfrst
   13dc0:	mov	x0, x19
   13dc4:	bl	13844 <hash_initialize@@Base+0xf0>
   13dc8:	ldr	x8, [x19, #40]
   13dcc:	ldp	x10, x9, [x19, #16]
   13dd0:	ldr	s0, [x8, #8]
   13dd4:	ucvtf	s1, x10
   13dd8:	ucvtf	s2, x9
   13ddc:	fmul	s3, s0, s1
   13de0:	fcmp	s3, s2
   13de4:	b.pl	13e38 <hash_insert_if_absent@@Base+0xdc>  // b.nfrst
   13de8:	ldr	s2, [x8, #12]
   13dec:	ldrb	w8, [x8, #16]
   13df0:	fmul	s1, s2, s1
   13df4:	cmp	w8, #0x0
   13df8:	fmul	s0, s0, s1
   13dfc:	mov	w8, #0x5f800000            	// #1602224128
   13e00:	fcsel	s0, s0, s1, eq  // eq = none
   13e04:	fmov	s1, w8
   13e08:	fcmp	s0, s1
   13e0c:	b.ge	13eac <hash_insert_if_absent@@Base+0x150>  // b.tcont
   13e10:	fcvtzu	x1, s0
   13e14:	mov	x0, x19
   13e18:	bl	a9a0 <hash_rehash@plt>
   13e1c:	tbz	w0, #0, 13eac <hash_insert_if_absent@@Base+0x150>
   13e20:	add	x2, x29, #0x18
   13e24:	mov	x0, x19
   13e28:	mov	x1, x20
   13e2c:	mov	w3, wzr
   13e30:	bl	13ec4 <hash_insert_if_absent@@Base+0x168>
   13e34:	cbnz	x0, 13ec0 <hash_insert_if_absent@@Base+0x164>
   13e38:	ldr	x21, [x29, #24]
   13e3c:	ldr	x8, [x21]
   13e40:	cbz	x8, 13e60 <hash_insert_if_absent@@Base+0x104>
   13e44:	ldr	x0, [x19, #72]
   13e48:	cbz	x0, 13e7c <hash_insert_if_absent@@Base+0x120>
   13e4c:	ldr	x8, [x0, #8]
   13e50:	str	x8, [x19, #72]
   13e54:	b	13e88 <hash_insert_if_absent@@Base+0x12c>
   13e58:	mov	w0, wzr
   13e5c:	b	13eb0 <hash_insert_if_absent@@Base+0x154>
   13e60:	str	x20, [x21]
   13e64:	ldur	q0, [x19, #24]
   13e68:	mov	w0, #0x1                   	// #1
   13e6c:	dup	v1.2d, x0
   13e70:	add	v0.2d, v0.2d, v1.2d
   13e74:	stur	q0, [x19, #24]
   13e78:	b	13eb0 <hash_insert_if_absent@@Base+0x154>
   13e7c:	mov	w0, #0x10                  	// #16
   13e80:	bl	a660 <malloc@plt>
   13e84:	cbz	x0, 13eac <hash_insert_if_absent@@Base+0x150>
   13e88:	str	x20, [x0]
   13e8c:	ldr	x8, [x21, #8]
   13e90:	str	x8, [x0, #8]
   13e94:	str	x0, [x21, #8]
   13e98:	ldr	x8, [x19, #32]
   13e9c:	mov	w0, #0x1                   	// #1
   13ea0:	add	x8, x8, #0x1
   13ea4:	str	x8, [x19, #32]
   13ea8:	b	13eb0 <hash_insert_if_absent@@Base+0x154>
   13eac:	mov	w0, #0xffffffff            	// #-1
   13eb0:	ldp	x20, x19, [sp, #32]
   13eb4:	ldr	x21, [sp, #16]
   13eb8:	ldp	x29, x30, [sp], #48
   13ebc:	ret
   13ec0:	bl	a980 <abort@plt>
   13ec4:	stp	x29, x30, [sp, #-80]!
   13ec8:	stp	x24, x23, [sp, #32]
   13ecc:	stp	x22, x21, [sp, #48]
   13ed0:	stp	x20, x19, [sp, #64]
   13ed4:	ldr	x8, [x0, #16]
   13ed8:	ldr	x9, [x0, #48]
   13edc:	mov	x20, x0
   13ee0:	mov	x19, x1
   13ee4:	mov	x0, x1
   13ee8:	mov	x1, x8
   13eec:	str	x25, [sp, #16]
   13ef0:	mov	x29, sp
   13ef4:	mov	w21, w3
   13ef8:	mov	x23, x2
   13efc:	blr	x9
   13f00:	ldr	x8, [x20, #16]
   13f04:	cmp	x0, x8
   13f08:	b.cs	13fec <hash_insert_if_absent@@Base+0x290>  // b.hs, b.nlast
   13f0c:	ldr	x25, [x20]
   13f10:	mov	x22, x0
   13f14:	add	x24, x25, x0, lsl #4
   13f18:	str	x24, [x23]
   13f1c:	ldr	x1, [x24]
   13f20:	cbz	x1, 13f94 <hash_insert_if_absent@@Base+0x238>
   13f24:	cmp	x1, x19
   13f28:	b.eq	13f40 <hash_insert_if_absent@@Base+0x1e4>  // b.none
   13f2c:	ldr	x8, [x20, #56]
   13f30:	mov	x0, x19
   13f34:	blr	x8
   13f38:	tbz	w0, #0, 13f5c <hash_insert_if_absent@@Base+0x200>
   13f3c:	ldr	x19, [x24]
   13f40:	tbz	w21, #0, 13fd0 <hash_insert_if_absent@@Base+0x274>
   13f44:	add	x8, x25, x22, lsl #4
   13f48:	ldr	x8, [x8, #8]
   13f4c:	cbz	x8, 13f9c <hash_insert_if_absent@@Base+0x240>
   13f50:	ldr	q0, [x8]
   13f54:	str	q0, [x24]
   13f58:	b	13fc0 <hash_insert_if_absent@@Base+0x264>
   13f5c:	add	x22, x25, x22, lsl #4
   13f60:	ldr	x9, [x22, #8]!
   13f64:	cbz	x9, 13f94 <hash_insert_if_absent@@Base+0x238>
   13f68:	ldr	x1, [x9]
   13f6c:	cmp	x1, x19
   13f70:	b.eq	13fa4 <hash_insert_if_absent@@Base+0x248>  // b.none
   13f74:	ldr	x8, [x20, #56]
   13f78:	mov	x0, x19
   13f7c:	blr	x8
   13f80:	ldr	x8, [x22]
   13f84:	tbnz	w0, #0, 13fb0 <hash_insert_if_absent@@Base+0x254>
   13f88:	ldr	x9, [x8, #8]!
   13f8c:	mov	x22, x8
   13f90:	cbnz	x9, 13f68 <hash_insert_if_absent@@Base+0x20c>
   13f94:	mov	x19, xzr
   13f98:	b	13fd0 <hash_insert_if_absent@@Base+0x274>
   13f9c:	str	xzr, [x24]
   13fa0:	b	13fd0 <hash_insert_if_absent@@Base+0x274>
   13fa4:	mov	x8, x9
   13fa8:	tbnz	w21, #0, 13fb8 <hash_insert_if_absent@@Base+0x25c>
   13fac:	b	13fd0 <hash_insert_if_absent@@Base+0x274>
   13fb0:	ldr	x19, [x8]
   13fb4:	tbz	w21, #0, 13fd0 <hash_insert_if_absent@@Base+0x274>
   13fb8:	ldr	x9, [x8, #8]
   13fbc:	str	x9, [x22]
   13fc0:	str	xzr, [x8]
   13fc4:	ldr	x9, [x20, #72]
   13fc8:	str	x9, [x8, #8]
   13fcc:	str	x8, [x20, #72]
   13fd0:	mov	x0, x19
   13fd4:	ldp	x20, x19, [sp, #64]
   13fd8:	ldp	x22, x21, [sp, #48]
   13fdc:	ldp	x24, x23, [sp, #32]
   13fe0:	ldr	x25, [sp, #16]
   13fe4:	ldp	x29, x30, [sp], #80
   13fe8:	ret
   13fec:	bl	a980 <abort@plt>

0000000000013ff0 <hash_insert@@Base>:
   13ff0:	stp	x29, x30, [sp, #-32]!
   13ff4:	mov	x29, sp
   13ff8:	add	x2, x29, #0x18
   13ffc:	str	x19, [sp, #16]
   14000:	mov	x19, x1
   14004:	bl	a830 <hash_insert_if_absent@plt>
   14008:	ldr	x8, [x29, #24]
   1400c:	cmp	w0, #0x0
   14010:	csel	x8, x8, x19, eq  // eq = none
   14014:	ldr	x19, [sp, #16]
   14018:	cmn	w0, #0x1
   1401c:	csel	x0, xzr, x8, eq  // eq = none
   14020:	ldp	x29, x30, [sp], #32
   14024:	ret

0000000000014028 <hash_delete@@Base>:
   14028:	stp	x29, x30, [sp, #-48]!
   1402c:	mov	x29, sp
   14030:	add	x2, x29, #0x18
   14034:	mov	w3, #0x1                   	// #1
   14038:	str	x21, [sp, #16]
   1403c:	stp	x20, x19, [sp, #32]
   14040:	mov	x19, x0
   14044:	bl	13ec4 <hash_insert_if_absent@@Base+0x168>
   14048:	mov	x20, x0
   1404c:	cbz	x0, 140fc <hash_delete@@Base+0xd4>
   14050:	ldr	x8, [x19, #32]
   14054:	sub	x8, x8, #0x1
   14058:	str	x8, [x19, #32]
   1405c:	ldr	x8, [x29, #24]
   14060:	ldr	x8, [x8]
   14064:	cbnz	x8, 140fc <hash_delete@@Base+0xd4>
   14068:	ldp	x10, x8, [x19, #16]
   1406c:	ldr	x9, [x19, #40]
   14070:	sub	x8, x8, #0x1
   14074:	str	x8, [x19, #24]
   14078:	ldr	s0, [x9]
   1407c:	ucvtf	s2, x10
   14080:	ucvtf	s1, x8
   14084:	fmul	s0, s0, s2
   14088:	fcmp	s0, s1
   1408c:	b.le	140fc <hash_delete@@Base+0xd4>
   14090:	mov	x0, x19
   14094:	bl	13844 <hash_initialize@@Base+0xf0>
   14098:	ldr	x8, [x19, #40]
   1409c:	ldp	x10, x9, [x19, #16]
   140a0:	ldr	s1, [x8]
   140a4:	ucvtf	s0, x10
   140a8:	ucvtf	s2, x9
   140ac:	fmul	s1, s1, s0
   140b0:	fcmp	s1, s2
   140b4:	b.le	140fc <hash_delete@@Base+0xd4>
   140b8:	ldr	s1, [x8, #4]
   140bc:	ldrb	w9, [x8, #16]
   140c0:	fmul	s0, s1, s0
   140c4:	cbnz	w9, 140d0 <hash_delete@@Base+0xa8>
   140c8:	ldr	s1, [x8, #8]
   140cc:	fmul	s0, s0, s1
   140d0:	fcvtzu	x1, s0
   140d4:	mov	x0, x19
   140d8:	bl	a9a0 <hash_rehash@plt>
   140dc:	tbnz	w0, #0, 140fc <hash_delete@@Base+0xd4>
   140e0:	ldr	x0, [x19, #72]
   140e4:	cbz	x0, 140f8 <hash_delete@@Base+0xd0>
   140e8:	ldr	x21, [x0, #8]
   140ec:	bl	aaa0 <free@plt>
   140f0:	mov	x0, x21
   140f4:	cbnz	x21, 140e8 <hash_delete@@Base+0xc0>
   140f8:	str	xzr, [x19, #72]
   140fc:	mov	x0, x20
   14100:	ldp	x20, x19, [sp, #32]
   14104:	ldr	x21, [sp, #16]
   14108:	ldp	x29, x30, [sp], #48
   1410c:	ret
   14110:	stp	x29, x30, [sp, #-64]!
   14114:	stp	x24, x23, [sp, #16]
   14118:	mov	x24, x0
   1411c:	mov	w0, #0x40                  	// #64
   14120:	stp	x22, x21, [sp, #32]
   14124:	stp	x20, x19, [sp, #48]
   14128:	mov	x29, sp
   1412c:	mov	x20, x4
   14130:	mov	x22, x3
   14134:	mov	x21, x2
   14138:	mov	x23, x1
   1413c:	bl	a660 <malloc@plt>
   14140:	mov	x19, x0
   14144:	cbz	x0, 14184 <hash_delete@@Base+0x15c>
   14148:	mov	w8, #0xb                   	// #11
   1414c:	mov	w0, #0xb                   	// #11
   14150:	mov	w1, #0x8                   	// #8
   14154:	stp	x24, x23, [x19]
   14158:	stp	x22, x20, [x19, #16]
   1415c:	str	x21, [x19, #32]
   14160:	str	x8, [x19, #48]
   14164:	bl	a7f0 <calloc@plt>
   14168:	str	x0, [x19, #40]
   1416c:	cbz	x0, 14178 <hash_delete@@Base+0x150>
   14170:	str	xzr, [x19, #56]
   14174:	b	14184 <hash_delete@@Base+0x15c>
   14178:	mov	x0, x19
   1417c:	bl	aaa0 <free@plt>
   14180:	mov	x19, xzr
   14184:	mov	x0, x19
   14188:	ldp	x20, x19, [sp, #48]
   1418c:	ldp	x22, x21, [sp, #32]
   14190:	ldp	x24, x23, [sp, #16]
   14194:	ldp	x29, x30, [sp], #64
   14198:	ret
   1419c:	ldr	x0, [x0, #56]
   141a0:	ret
   141a4:	stp	x29, x30, [sp, #-64]!
   141a8:	stp	x22, x21, [sp, #32]
   141ac:	stp	x20, x19, [sp, #48]
   141b0:	ldr	x8, [x0, #32]
   141b4:	mov	x19, x2
   141b8:	mov	x22, x0
   141bc:	mov	x20, x1
   141c0:	str	x23, [sp, #16]
   141c4:	mov	x29, sp
   141c8:	cbz	x8, 141dc <hash_delete@@Base+0x1b4>
   141cc:	mov	x0, x20
   141d0:	blr	x8
   141d4:	mov	x21, x0
   141d8:	b	141e0 <hash_delete@@Base+0x1b8>
   141dc:	mov	x21, x20
   141e0:	ldp	x9, x8, [x22, #40]
   141e4:	udiv	x10, x21, x8
   141e8:	msub	x8, x10, x8, x21
   141ec:	ldr	x23, [x9, x8, lsl #3]
   141f0:	cbz	x23, 1422c <hash_delete@@Base+0x204>
   141f4:	ldr	x22, [x22, #8]
   141f8:	ldr	x8, [x23, #8]
   141fc:	cmp	x8, x21
   14200:	b.ne	14224 <hash_delete@@Base+0x1fc>  // b.any
   14204:	ldr	x1, [x23, #16]
   14208:	cbz	x22, 1421c <hash_delete@@Base+0x1f4>
   1420c:	mov	x0, x20
   14210:	blr	x22
   14214:	tbz	w0, #0, 14224 <hash_delete@@Base+0x1fc>
   14218:	b	14234 <hash_delete@@Base+0x20c>
   1421c:	cmp	x1, x20
   14220:	b.eq	14234 <hash_delete@@Base+0x20c>  // b.none
   14224:	ldr	x23, [x23]
   14228:	cbnz	x23, 141f8 <hash_delete@@Base+0x1d0>
   1422c:	mov	w0, wzr
   14230:	b	14240 <hash_delete@@Base+0x218>
   14234:	ldr	x8, [x23, #24]
   14238:	mov	w0, #0x1                   	// #1
   1423c:	str	x8, [x19]
   14240:	ldp	x20, x19, [sp, #48]
   14244:	ldp	x22, x21, [sp, #32]
   14248:	ldr	x23, [sp, #16]
   1424c:	ldp	x29, x30, [sp], #64
   14250:	ret
   14254:	stp	x29, x30, [sp, #-80]!
   14258:	stp	x26, x25, [sp, #16]
   1425c:	stp	x24, x23, [sp, #32]
   14260:	stp	x22, x21, [sp, #48]
   14264:	stp	x20, x19, [sp, #64]
   14268:	ldr	x8, [x0, #32]
   1426c:	mov	x22, x3
   14270:	mov	x20, x2
   14274:	mov	x19, x0
   14278:	mov	x21, x1
   1427c:	mov	x29, sp
   14280:	cbz	x8, 14294 <hash_delete@@Base+0x26c>
   14284:	mov	x0, x21
   14288:	blr	x8
   1428c:	mov	x23, x0
   14290:	b	14298 <hash_delete@@Base+0x270>
   14294:	mov	x23, x21
   14298:	ldp	x9, x8, [x19, #40]
   1429c:	udiv	x10, x23, x8
   142a0:	msub	x24, x10, x8, x23
   142a4:	ldr	x25, [x9, x24, lsl #3]
   142a8:	cbz	x25, 142e4 <hash_delete@@Base+0x2bc>
   142ac:	ldr	x26, [x19, #8]
   142b0:	ldr	x8, [x25, #8]
   142b4:	cmp	x8, x23
   142b8:	b.ne	142dc <hash_delete@@Base+0x2b4>  // b.any
   142bc:	ldr	x1, [x25, #16]
   142c0:	cbz	x26, 142d4 <hash_delete@@Base+0x2ac>
   142c4:	mov	x0, x21
   142c8:	blr	x26
   142cc:	tbz	w0, #0, 142dc <hash_delete@@Base+0x2b4>
   142d0:	b	143c0 <hash_delete@@Base+0x398>
   142d4:	cmp	x1, x21
   142d8:	b.eq	143c0 <hash_delete@@Base+0x398>  // b.none
   142dc:	ldr	x25, [x25]
   142e0:	cbnz	x25, 142b0 <hash_delete@@Base+0x288>
   142e4:	mov	w0, #0x20                  	// #32
   142e8:	bl	a660 <malloc@plt>
   142ec:	cbz	x0, 143b8 <hash_delete@@Base+0x390>
   142f0:	stp	x21, x20, [x0, #16]
   142f4:	str	x23, [x0, #8]
   142f8:	ldr	x8, [x19, #40]
   142fc:	ldr	x9, [x8, x24, lsl #3]
   14300:	str	x9, [x0]
   14304:	str	x0, [x8, x24, lsl #3]
   14308:	ldp	x22, x8, [x19, #48]
   1430c:	add	x9, x8, #0x1
   14310:	adds	x8, x9, x9, lsr #1
   14314:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   14318:	cmp	x8, x22
   1431c:	str	x9, [x19, #56]
   14320:	b.ls	143b0 <hash_delete@@Base+0x388>  // b.plast
   14324:	adrp	x10, 29000 <vasnprintf@@Base+0x1944>
   14328:	mov	x9, xzr
   1432c:	add	x10, x10, #0x1f8
   14330:	ldr	x20, [x10, x9]
   14334:	cmp	x20, x8
   14338:	b.cs	1434c <hash_delete@@Base+0x324>  // b.hs, b.nlast
   1433c:	add	x9, x9, #0x8
   14340:	cmp	x9, #0x740
   14344:	b.ne	14330 <hash_delete@@Base+0x308>  // b.any
   14348:	mov	x20, #0xffffffffffffffff    	// #-1
   1434c:	cmp	x20, x22
   14350:	b.ls	143b0 <hash_delete@@Base+0x388>  // b.plast
   14354:	lsr	x8, x20, #61
   14358:	cbnz	x8, 143b0 <hash_delete@@Base+0x388>
   1435c:	ldr	x21, [x19, #40]
   14360:	mov	w1, #0x8                   	// #8
   14364:	mov	x0, x20
   14368:	bl	a7f0 <calloc@plt>
   1436c:	cbz	x0, 143b0 <hash_delete@@Base+0x388>
   14370:	cbz	x22, 143a4 <hash_delete@@Base+0x37c>
   14374:	sub	x22, x22, #0x1
   14378:	ldr	x8, [x21, x22, lsl #3]
   1437c:	cbz	x8, 143a0 <hash_delete@@Base+0x378>
   14380:	ldp	x11, x9, [x8]
   14384:	udiv	x10, x9, x20
   14388:	msub	x9, x10, x20, x9
   1438c:	ldr	x10, [x0, x9, lsl #3]
   14390:	str	x10, [x8]
   14394:	str	x8, [x0, x9, lsl #3]
   14398:	mov	x8, x11
   1439c:	cbnz	x11, 14380 <hash_delete@@Base+0x358>
   143a0:	cbnz	x22, 14374 <hash_delete@@Base+0x34c>
   143a4:	stp	x0, x20, [x19, #40]
   143a8:	mov	x0, x21
   143ac:	bl	aaa0 <free@plt>
   143b0:	mov	w0, #0x1                   	// #1
   143b4:	b	143d0 <hash_delete@@Base+0x3a8>
   143b8:	mov	w0, #0xffffffff            	// #-1
   143bc:	b	143d0 <hash_delete@@Base+0x3a8>
   143c0:	ldr	x8, [x25, #24]
   143c4:	mov	w0, wzr
   143c8:	str	x8, [x22]
   143cc:	str	x20, [x25, #24]
   143d0:	ldp	x20, x19, [sp, #64]
   143d4:	ldp	x22, x21, [sp, #48]
   143d8:	ldp	x24, x23, [sp, #32]
   143dc:	ldp	x26, x25, [sp, #16]
   143e0:	ldp	x29, x30, [sp], #80
   143e4:	ret
   143e8:	stp	x29, x30, [sp, #-80]!
   143ec:	stp	x24, x23, [sp, #32]
   143f0:	stp	x22, x21, [sp, #48]
   143f4:	stp	x20, x19, [sp, #64]
   143f8:	ldr	x8, [x0, #32]
   143fc:	mov	x20, x2
   14400:	mov	x19, x0
   14404:	mov	x21, x1
   14408:	str	x25, [sp, #16]
   1440c:	mov	x29, sp
   14410:	cbz	x8, 14424 <hash_delete@@Base+0x3fc>
   14414:	mov	x0, x21
   14418:	blr	x8
   1441c:	mov	x23, x0
   14420:	b	14428 <hash_delete@@Base+0x400>
   14424:	mov	x23, x21
   14428:	ldp	x9, x8, [x19, #40]
   1442c:	udiv	x10, x23, x8
   14430:	msub	x8, x10, x8, x23
   14434:	add	x25, x9, x8, lsl #3
   14438:	ldr	x22, [x25]
   1443c:	cbz	x22, 14480 <hash_delete@@Base+0x458>
   14440:	ldr	x24, [x19, #8]
   14444:	ldr	x8, [x22, #8]
   14448:	cmp	x8, x23
   1444c:	b.ne	14474 <hash_delete@@Base+0x44c>  // b.any
   14450:	ldr	x1, [x22, #16]
   14454:	cbz	x24, 1446c <hash_delete@@Base+0x444>
   14458:	mov	x0, x21
   1445c:	blr	x24
   14460:	tbnz	w0, #0, 14488 <hash_delete@@Base+0x460>
   14464:	ldr	x22, [x25]
   14468:	b	14474 <hash_delete@@Base+0x44c>
   1446c:	cmp	x1, x21
   14470:	b.eq	14488 <hash_delete@@Base+0x460>  // b.none
   14474:	mov	x25, x22
   14478:	ldr	x22, [x22]
   1447c:	cbnz	x22, 14444 <hash_delete@@Base+0x41c>
   14480:	mov	w0, wzr
   14484:	b	144c0 <hash_delete@@Base+0x498>
   14488:	ldr	x8, [x22, #24]
   1448c:	str	x8, [x20]
   14490:	ldr	x8, [x22]
   14494:	str	x8, [x25]
   14498:	ldr	x9, [x19, #56]
   1449c:	ldr	x8, [x19, #16]
   144a0:	sub	x9, x9, #0x1
   144a4:	str	x9, [x19, #56]
   144a8:	cbz	x8, 144b4 <hash_delete@@Base+0x48c>
   144ac:	ldr	x0, [x22, #16]
   144b0:	blr	x8
   144b4:	mov	x0, x22
   144b8:	bl	aaa0 <free@plt>
   144bc:	mov	w0, #0x1                   	// #1
   144c0:	ldp	x20, x19, [sp, #64]
   144c4:	ldp	x22, x21, [sp, #48]
   144c8:	ldp	x24, x23, [sp, #32]
   144cc:	ldr	x25, [sp, #16]
   144d0:	ldp	x29, x30, [sp], #80
   144d4:	ret
   144d8:	stp	x29, x30, [sp, #-80]!
   144dc:	stp	x24, x23, [sp, #32]
   144e0:	stp	x22, x21, [sp, #48]
   144e4:	stp	x20, x19, [sp, #64]
   144e8:	ldr	x8, [x0, #56]
   144ec:	mov	x19, x0
   144f0:	str	x25, [sp, #16]
   144f4:	mov	x29, sp
   144f8:	cbz	x8, 14548 <hash_delete@@Base+0x520>
   144fc:	ldr	x21, [x19, #48]
   14500:	cbz	x21, 14548 <hash_delete@@Base+0x520>
   14504:	ldp	x22, x23, [x19, #16]
   14508:	ldr	x24, [x19, #40]
   1450c:	sub	x21, x21, #0x1
   14510:	ldr	x20, [x24, x21, lsl #3]
   14514:	cbz	x20, 14544 <hash_delete@@Base+0x51c>
   14518:	ldr	x25, [x20]
   1451c:	cbz	x23, 14528 <hash_delete@@Base+0x500>
   14520:	ldr	x0, [x20, #24]
   14524:	blr	x23
   14528:	cbz	x22, 14534 <hash_delete@@Base+0x50c>
   1452c:	ldr	x0, [x20, #16]
   14530:	blr	x22
   14534:	mov	x0, x20
   14538:	bl	aaa0 <free@plt>
   1453c:	mov	x20, x25
   14540:	cbnz	x25, 14518 <hash_delete@@Base+0x4f0>
   14544:	cbnz	x21, 1450c <hash_delete@@Base+0x4e4>
   14548:	ldr	x0, [x19, #40]
   1454c:	bl	aaa0 <free@plt>
   14550:	mov	x0, x19
   14554:	ldp	x20, x19, [sp, #64]
   14558:	ldp	x22, x21, [sp, #48]
   1455c:	ldp	x24, x23, [sp, #32]
   14560:	ldr	x25, [sp, #16]
   14564:	ldp	x29, x30, [sp], #80
   14568:	b	aaa0 <free@plt>
   1456c:	ldr	x9, [x0]
   14570:	str	xzr, [x8, #24]
   14574:	stp	x9, x0, [x8]
   14578:	ldr	x9, [x0, #48]
   1457c:	stp	xzr, x9, [x8, #40]
   14580:	ret
   14584:	ldr	x8, [x0, #24]
   14588:	cbz	x8, 145ac <hash_delete@@Base+0x584>
   1458c:	ldr	x9, [x8, #16]
   14590:	str	x9, [x1]
   14594:	ldr	x9, [x8, #24]
   14598:	str	x9, [x2]
   1459c:	ldr	x8, [x8]
   145a0:	str	x8, [x0, #24]
   145a4:	mov	w8, #0x1                   	// #1
   145a8:	b	14600 <hash_delete@@Base+0x5d8>
   145ac:	ldp	x8, x9, [x0, #40]
   145b0:	cmp	x8, x9
   145b4:	b.cs	145d4 <hash_delete@@Base+0x5ac>  // b.hs, b.nlast
   145b8:	ldr	x10, [x0, #8]
   145bc:	ldr	x10, [x10, #40]
   145c0:	ldr	x11, [x10, x8, lsl #3]
   145c4:	add	x8, x8, #0x1
   145c8:	cbnz	x11, 145e0 <hash_delete@@Base+0x5b8>
   145cc:	cmp	x9, x8
   145d0:	b.ne	145c0 <hash_delete@@Base+0x598>  // b.any
   145d4:	mov	w8, wzr
   145d8:	str	x9, [x0, #40]
   145dc:	b	14600 <hash_delete@@Base+0x5d8>
   145e0:	ldr	x9, [x11, #16]
   145e4:	str	x9, [x1]
   145e8:	ldr	x9, [x11, #24]
   145ec:	str	x9, [x2]
   145f0:	ldr	x9, [x11]
   145f4:	str	x8, [x0, #40]
   145f8:	mov	w8, #0x1                   	// #1
   145fc:	str	x9, [x0, #24]
   14600:	mov	w0, w8
   14604:	ret
   14608:	ret

000000000001460c <hash_pjw@@Base>:
   1460c:	ldrb	w9, [x0]
   14610:	cbz	w9, 14630 <hash_pjw@@Base+0x24>
   14614:	mov	x8, xzr
   14618:	add	x10, x0, #0x1
   1461c:	ror	x8, x8, #55
   14620:	add	x8, x8, w9, uxtb
   14624:	ldrb	w9, [x10], #1
   14628:	cbnz	w9, 1461c <hash_pjw@@Base+0x10>
   1462c:	b	14634 <hash_pjw@@Base+0x28>
   14630:	mov	x8, xzr
   14634:	udiv	x9, x8, x1
   14638:	msub	x0, x9, x1, x8
   1463c:	ret

0000000000014640 <hash_pjw_bare@@Base>:
   14640:	cbz	x1, 14670 <hash_pjw_bare@@Base+0x30>
   14644:	mov	x10, xzr
   14648:	mov	x8, xzr
   1464c:	mov	w9, #0x1                   	// #1
   14650:	ldrb	w11, [x0, x10]
   14654:	ror	x8, x8, #55
   14658:	mov	w10, w9
   1465c:	cmp	x10, x1
   14660:	add	x8, x8, x11
   14664:	add	w9, w9, #0x1
   14668:	b.cc	14650 <hash_pjw_bare@@Base+0x10>  // b.lo, b.ul, b.last
   1466c:	b	14674 <hash_pjw_bare@@Base+0x34>
   14670:	mov	x8, xzr
   14674:	mov	x0, x8
   14678:	ret
   1467c:	stp	x29, x30, [sp, #-64]!
   14680:	str	x23, [sp, #16]
   14684:	mov	x23, x0
   14688:	mov	w0, #0x38                  	// #56
   1468c:	stp	x22, x21, [sp, #32]
   14690:	stp	x20, x19, [sp, #48]
   14694:	mov	x29, sp
   14698:	mov	x21, x3
   1469c:	mov	x20, x2
   146a0:	mov	x22, x1
   146a4:	bl	a660 <malloc@plt>
   146a8:	mov	x19, x0
   146ac:	cbz	x0, 146e8 <hash_pjw_bare@@Base+0xa8>
   146b0:	mov	w8, #0xb                   	// #11
   146b4:	mov	w0, #0xb                   	// #11
   146b8:	mov	w1, #0x8                   	// #8
   146bc:	stp	x23, x22, [x19]
   146c0:	stp	x21, x20, [x19, #16]
   146c4:	str	x8, [x19, #40]
   146c8:	bl	a7f0 <calloc@plt>
   146cc:	str	x0, [x19, #32]
   146d0:	cbz	x0, 146dc <hash_pjw_bare@@Base+0x9c>
   146d4:	str	xzr, [x19, #48]
   146d8:	b	146e8 <hash_pjw_bare@@Base+0xa8>
   146dc:	mov	x0, x19
   146e0:	bl	aaa0 <free@plt>
   146e4:	mov	x19, xzr
   146e8:	mov	x0, x19
   146ec:	ldp	x20, x19, [sp, #48]
   146f0:	ldp	x22, x21, [sp, #32]
   146f4:	ldr	x23, [sp, #16]
   146f8:	ldp	x29, x30, [sp], #64
   146fc:	ret
   14700:	ldr	x0, [x0, #48]
   14704:	ret
   14708:	stp	x29, x30, [sp, #-48]!
   1470c:	stp	x22, x21, [sp, #16]
   14710:	stp	x20, x19, [sp, #32]
   14714:	ldr	x8, [x0, #24]
   14718:	mov	x21, x0
   1471c:	mov	x19, x1
   14720:	mov	x29, sp
   14724:	cbz	x8, 14738 <hash_pjw_bare@@Base+0xf8>
   14728:	mov	x0, x19
   1472c:	blr	x8
   14730:	mov	x20, x0
   14734:	b	1473c <hash_pjw_bare@@Base+0xfc>
   14738:	mov	x20, x19
   1473c:	ldp	x9, x8, [x21, #32]
   14740:	udiv	x10, x20, x8
   14744:	msub	x8, x10, x8, x20
   14748:	ldr	x22, [x9, x8, lsl #3]
   1474c:	cbz	x22, 14788 <hash_pjw_bare@@Base+0x148>
   14750:	ldr	x21, [x21, #8]
   14754:	ldr	x8, [x22, #8]
   14758:	cmp	x8, x20
   1475c:	b.ne	14780 <hash_pjw_bare@@Base+0x140>  // b.any
   14760:	ldr	x1, [x22, #16]
   14764:	cbz	x21, 14778 <hash_pjw_bare@@Base+0x138>
   14768:	mov	x0, x19
   1476c:	blr	x21
   14770:	tbz	w0, #0, 14780 <hash_pjw_bare@@Base+0x140>
   14774:	b	14790 <hash_pjw_bare@@Base+0x150>
   14778:	cmp	x1, x19
   1477c:	b.eq	14790 <hash_pjw_bare@@Base+0x150>  // b.none
   14780:	ldr	x22, [x22]
   14784:	cbnz	x22, 14754 <hash_pjw_bare@@Base+0x114>
   14788:	mov	w0, wzr
   1478c:	b	14794 <hash_pjw_bare@@Base+0x154>
   14790:	mov	w0, #0x1                   	// #1
   14794:	ldp	x20, x19, [sp, #32]
   14798:	ldp	x22, x21, [sp, #16]
   1479c:	ldp	x29, x30, [sp], #48
   147a0:	ret
   147a4:	stp	x29, x30, [sp, #-64]!
   147a8:	stp	x24, x23, [sp, #16]
   147ac:	stp	x22, x21, [sp, #32]
   147b0:	stp	x20, x19, [sp, #48]
   147b4:	ldr	x8, [x0, #24]
   147b8:	mov	x19, x0
   147bc:	mov	x20, x1
   147c0:	mov	x29, sp
   147c4:	cbz	x8, 147d8 <hash_pjw_bare@@Base+0x198>
   147c8:	mov	x0, x20
   147cc:	blr	x8
   147d0:	mov	x21, x0
   147d4:	b	147dc <hash_pjw_bare@@Base+0x19c>
   147d8:	mov	x21, x20
   147dc:	ldp	x9, x8, [x19, #32]
   147e0:	udiv	x10, x21, x8
   147e4:	msub	x22, x10, x8, x21
   147e8:	ldr	x23, [x9, x22, lsl #3]
   147ec:	cbz	x23, 14828 <hash_pjw_bare@@Base+0x1e8>
   147f0:	ldr	x24, [x19, #8]
   147f4:	ldr	x8, [x23, #8]
   147f8:	cmp	x8, x21
   147fc:	b.ne	14820 <hash_pjw_bare@@Base+0x1e0>  // b.any
   14800:	ldr	x1, [x23, #16]
   14804:	cbz	x24, 14818 <hash_pjw_bare@@Base+0x1d8>
   14808:	mov	x0, x20
   1480c:	blr	x24
   14810:	tbz	w0, #0, 14820 <hash_pjw_bare@@Base+0x1e0>
   14814:	b	14900 <hash_pjw_bare@@Base+0x2c0>
   14818:	cmp	x1, x20
   1481c:	b.eq	14900 <hash_pjw_bare@@Base+0x2c0>  // b.none
   14820:	ldr	x23, [x23]
   14824:	cbnz	x23, 147f4 <hash_pjw_bare@@Base+0x1b4>
   14828:	mov	w0, #0x18                  	// #24
   1482c:	bl	a660 <malloc@plt>
   14830:	cbz	x0, 148f8 <hash_pjw_bare@@Base+0x2b8>
   14834:	stp	x21, x20, [x0, #8]
   14838:	ldr	x8, [x19, #32]
   1483c:	ldr	x9, [x8, x22, lsl #3]
   14840:	str	x9, [x0]
   14844:	str	x0, [x8, x22, lsl #3]
   14848:	ldp	x22, x8, [x19, #40]
   1484c:	add	x9, x8, #0x1
   14850:	adds	x8, x9, x9, lsr #1
   14854:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   14858:	cmp	x8, x22
   1485c:	str	x9, [x19, #48]
   14860:	b.ls	148f0 <hash_pjw_bare@@Base+0x2b0>  // b.plast
   14864:	adrp	x10, 29000 <vasnprintf@@Base+0x1944>
   14868:	mov	x9, xzr
   1486c:	add	x10, x10, #0x938
   14870:	ldr	x20, [x10, x9]
   14874:	cmp	x20, x8
   14878:	b.cs	1488c <hash_pjw_bare@@Base+0x24c>  // b.hs, b.nlast
   1487c:	add	x9, x9, #0x8
   14880:	cmp	x9, #0x740
   14884:	b.ne	14870 <hash_pjw_bare@@Base+0x230>  // b.any
   14888:	mov	x20, #0xffffffffffffffff    	// #-1
   1488c:	cmp	x20, x22
   14890:	b.ls	148f0 <hash_pjw_bare@@Base+0x2b0>  // b.plast
   14894:	lsr	x8, x20, #61
   14898:	cbnz	x8, 148f0 <hash_pjw_bare@@Base+0x2b0>
   1489c:	ldr	x21, [x19, #32]
   148a0:	mov	w1, #0x8                   	// #8
   148a4:	mov	x0, x20
   148a8:	bl	a7f0 <calloc@plt>
   148ac:	cbz	x0, 148f0 <hash_pjw_bare@@Base+0x2b0>
   148b0:	cbz	x22, 148e4 <hash_pjw_bare@@Base+0x2a4>
   148b4:	sub	x22, x22, #0x1
   148b8:	ldr	x8, [x21, x22, lsl #3]
   148bc:	cbz	x8, 148e0 <hash_pjw_bare@@Base+0x2a0>
   148c0:	ldp	x11, x9, [x8]
   148c4:	udiv	x10, x9, x20
   148c8:	msub	x9, x10, x20, x9
   148cc:	ldr	x10, [x0, x9, lsl #3]
   148d0:	str	x10, [x8]
   148d4:	str	x8, [x0, x9, lsl #3]
   148d8:	mov	x8, x11
   148dc:	cbnz	x11, 148c0 <hash_pjw_bare@@Base+0x280>
   148e0:	cbnz	x22, 148b4 <hash_pjw_bare@@Base+0x274>
   148e4:	stp	x0, x20, [x19, #32]
   148e8:	mov	x0, x21
   148ec:	bl	aaa0 <free@plt>
   148f0:	mov	w0, #0x1                   	// #1
   148f4:	b	14904 <hash_pjw_bare@@Base+0x2c4>
   148f8:	mov	w0, #0xffffffff            	// #-1
   148fc:	b	14904 <hash_pjw_bare@@Base+0x2c4>
   14900:	mov	w0, wzr
   14904:	ldp	x20, x19, [sp, #48]
   14908:	ldp	x22, x21, [sp, #32]
   1490c:	ldp	x24, x23, [sp, #16]
   14910:	ldp	x29, x30, [sp], #64
   14914:	ret
   14918:	stp	x29, x30, [sp, #-64]!
   1491c:	stp	x24, x23, [sp, #16]
   14920:	stp	x22, x21, [sp, #32]
   14924:	stp	x20, x19, [sp, #48]
   14928:	ldr	x8, [x0, #24]
   1492c:	mov	x19, x0
   14930:	mov	x20, x1
   14934:	mov	x29, sp
   14938:	cbz	x8, 1494c <hash_pjw_bare@@Base+0x30c>
   1493c:	mov	x0, x20
   14940:	blr	x8
   14944:	mov	x22, x0
   14948:	b	14950 <hash_pjw_bare@@Base+0x310>
   1494c:	mov	x22, x20
   14950:	ldp	x9, x8, [x19, #32]
   14954:	udiv	x10, x22, x8
   14958:	msub	x8, x10, x8, x22
   1495c:	add	x24, x9, x8, lsl #3
   14960:	ldr	x21, [x24]
   14964:	cbz	x21, 149a8 <hash_pjw_bare@@Base+0x368>
   14968:	ldr	x23, [x19, #8]
   1496c:	ldr	x8, [x21, #8]
   14970:	cmp	x8, x22
   14974:	b.ne	1499c <hash_pjw_bare@@Base+0x35c>  // b.any
   14978:	ldr	x1, [x21, #16]
   1497c:	cbz	x23, 14994 <hash_pjw_bare@@Base+0x354>
   14980:	mov	x0, x20
   14984:	blr	x23
   14988:	tbnz	w0, #0, 149b0 <hash_pjw_bare@@Base+0x370>
   1498c:	ldr	x21, [x24]
   14990:	b	1499c <hash_pjw_bare@@Base+0x35c>
   14994:	cmp	x1, x20
   14998:	b.eq	149b0 <hash_pjw_bare@@Base+0x370>  // b.none
   1499c:	mov	x24, x21
   149a0:	ldr	x21, [x21]
   149a4:	cbnz	x21, 1496c <hash_pjw_bare@@Base+0x32c>
   149a8:	mov	w0, wzr
   149ac:	b	149e0 <hash_pjw_bare@@Base+0x3a0>
   149b0:	ldr	x8, [x21]
   149b4:	str	x8, [x24]
   149b8:	ldr	x9, [x19, #48]
   149bc:	ldr	x8, [x19, #16]
   149c0:	sub	x9, x9, #0x1
   149c4:	str	x9, [x19, #48]
   149c8:	cbz	x8, 149d4 <hash_pjw_bare@@Base+0x394>
   149cc:	ldr	x0, [x21, #16]
   149d0:	blr	x8
   149d4:	mov	x0, x21
   149d8:	bl	aaa0 <free@plt>
   149dc:	mov	w0, #0x1                   	// #1
   149e0:	ldp	x20, x19, [sp, #48]
   149e4:	ldp	x22, x21, [sp, #32]
   149e8:	ldp	x24, x23, [sp, #16]
   149ec:	ldp	x29, x30, [sp], #64
   149f0:	ret
   149f4:	stp	x29, x30, [sp, #-64]!
   149f8:	stp	x24, x23, [sp, #16]
   149fc:	stp	x22, x21, [sp, #32]
   14a00:	stp	x20, x19, [sp, #48]
   14a04:	ldr	x8, [x0, #48]
   14a08:	mov	x19, x0
   14a0c:	mov	x29, sp
   14a10:	cbz	x8, 14a54 <hash_pjw_bare@@Base+0x414>
   14a14:	ldr	x21, [x19, #40]
   14a18:	cbz	x21, 14a54 <hash_pjw_bare@@Base+0x414>
   14a1c:	ldr	x22, [x19, #16]
   14a20:	ldr	x23, [x19, #32]
   14a24:	sub	x21, x21, #0x1
   14a28:	ldr	x20, [x23, x21, lsl #3]
   14a2c:	cbz	x20, 14a50 <hash_pjw_bare@@Base+0x410>
   14a30:	ldr	x24, [x20]
   14a34:	cbz	x22, 14a40 <hash_pjw_bare@@Base+0x400>
   14a38:	ldr	x0, [x20, #16]
   14a3c:	blr	x22
   14a40:	mov	x0, x20
   14a44:	bl	aaa0 <free@plt>
   14a48:	mov	x20, x24
   14a4c:	cbnz	x24, 14a30 <hash_pjw_bare@@Base+0x3f0>
   14a50:	cbnz	x21, 14a24 <hash_pjw_bare@@Base+0x3e4>
   14a54:	ldr	x0, [x19, #32]
   14a58:	bl	aaa0 <free@plt>
   14a5c:	mov	x0, x19
   14a60:	ldp	x20, x19, [sp, #48]
   14a64:	ldp	x22, x21, [sp, #32]
   14a68:	ldp	x24, x23, [sp, #16]
   14a6c:	ldp	x29, x30, [sp], #64
   14a70:	b	aaa0 <free@plt>
   14a74:	ldr	x9, [x0]
   14a78:	str	xzr, [x8, #24]
   14a7c:	stp	x9, x0, [x8]
   14a80:	ldr	x9, [x0, #40]
   14a84:	stp	xzr, x9, [x8, #40]
   14a88:	ret
   14a8c:	ldr	x8, [x0, #24]
   14a90:	cbz	x8, 14aac <hash_pjw_bare@@Base+0x46c>
   14a94:	ldr	x9, [x8, #16]
   14a98:	str	x9, [x1]
   14a9c:	ldr	x8, [x8]
   14aa0:	str	x8, [x0, #24]
   14aa4:	mov	w8, #0x1                   	// #1
   14aa8:	b	14af8 <hash_pjw_bare@@Base+0x4b8>
   14aac:	ldp	x8, x9, [x0, #40]
   14ab0:	cmp	x8, x9
   14ab4:	b.cs	14ad4 <hash_pjw_bare@@Base+0x494>  // b.hs, b.nlast
   14ab8:	ldr	x10, [x0, #8]
   14abc:	ldr	x10, [x10, #32]
   14ac0:	ldr	x11, [x10, x8, lsl #3]
   14ac4:	add	x8, x8, #0x1
   14ac8:	cbnz	x11, 14ae0 <hash_pjw_bare@@Base+0x4a0>
   14acc:	cmp	x9, x8
   14ad0:	b.ne	14ac0 <hash_pjw_bare@@Base+0x480>  // b.any
   14ad4:	mov	w8, wzr
   14ad8:	str	x9, [x0, #40]
   14adc:	b	14af8 <hash_pjw_bare@@Base+0x4b8>
   14ae0:	ldr	x9, [x11, #16]
   14ae4:	str	x9, [x1]
   14ae8:	ldr	x9, [x11]
   14aec:	str	x8, [x0, #40]
   14af0:	mov	w8, #0x1                   	// #1
   14af4:	str	x9, [x0, #24]
   14af8:	mov	w0, w8
   14afc:	ret
   14b00:	ret

0000000000014b04 <triple_hash@@Base>:
   14b04:	stp	x29, x30, [sp, #-32]!
   14b08:	stp	x20, x19, [sp, #16]
   14b0c:	mov	x19, x0
   14b10:	ldr	x0, [x0]
   14b14:	mov	x29, sp
   14b18:	mov	x20, x1
   14b1c:	bl	ac70 <hash_pjw@plt>
   14b20:	ldr	x8, [x19, #8]
   14b24:	eor	x8, x8, x0
   14b28:	udiv	x9, x8, x20
   14b2c:	msub	x0, x9, x20, x8
   14b30:	ldp	x20, x19, [sp, #16]
   14b34:	ldp	x29, x30, [sp], #32
   14b38:	ret

0000000000014b3c <triple_hash_no_name@@Base>:
   14b3c:	ldr	x8, [x0, #8]
   14b40:	udiv	x9, x8, x1
   14b44:	msub	x0, x9, x1, x8
   14b48:	ret

0000000000014b4c <triple_compare@@Base>:
   14b4c:	ldr	x8, [x0, #8]
   14b50:	ldr	x9, [x1, #8]
   14b54:	cmp	x8, x9
   14b58:	b.ne	14b78 <triple_compare@@Base+0x2c>  // b.any
   14b5c:	ldr	x8, [x0, #16]
   14b60:	ldr	x9, [x1, #16]
   14b64:	cmp	x8, x9
   14b68:	b.ne	14b78 <triple_compare@@Base+0x2c>  // b.any
   14b6c:	ldr	x0, [x0]
   14b70:	ldr	x1, [x1]
   14b74:	b	a7d0 <same_name@plt>
   14b78:	mov	w0, wzr
   14b7c:	ret

0000000000014b80 <triple_compare_ino_str@@Base>:
   14b80:	stp	x29, x30, [sp, #-16]!
   14b84:	ldr	x8, [x0, #8]
   14b88:	ldr	x9, [x1, #8]
   14b8c:	mov	x29, sp
   14b90:	cmp	x8, x9
   14b94:	b.ne	14bc0 <triple_compare_ino_str@@Base+0x40>  // b.any
   14b98:	ldr	x8, [x0, #16]
   14b9c:	ldr	x9, [x1, #16]
   14ba0:	cmp	x8, x9
   14ba4:	b.ne	14bc0 <triple_compare_ino_str@@Base+0x40>  // b.any
   14ba8:	ldr	x0, [x0]
   14bac:	ldr	x1, [x1]
   14bb0:	bl	aa10 <strcmp@plt>
   14bb4:	cmp	w0, #0x0
   14bb8:	cset	w0, eq  // eq = none
   14bbc:	b	14bc4 <triple_compare_ino_str@@Base+0x44>
   14bc0:	mov	w0, wzr
   14bc4:	ldp	x29, x30, [sp], #16
   14bc8:	ret

0000000000014bcc <triple_free@@Base>:
   14bcc:	stp	x29, x30, [sp, #-32]!
   14bd0:	str	x19, [sp, #16]
   14bd4:	mov	x19, x0
   14bd8:	ldr	x0, [x0]
   14bdc:	mov	x29, sp
   14be0:	bl	aaa0 <free@plt>
   14be4:	mov	x0, x19
   14be8:	ldr	x19, [sp, #16]
   14bec:	ldp	x29, x30, [sp], #32
   14bf0:	b	aaa0 <free@plt>

0000000000014bf4 <idpriv_drop@@Base>:
   14bf4:	sub	sp, sp, #0x30
   14bf8:	stp	x29, x30, [sp, #16]
   14bfc:	stp	x20, x19, [sp, #32]
   14c00:	add	x29, sp, #0x10
   14c04:	bl	a4f0 <getuid@plt>
   14c08:	mov	w20, w0
   14c0c:	bl	aae0 <getgid@plt>
   14c10:	mov	w1, w0
   14c14:	mov	w2, w0
   14c18:	mov	w19, w0
   14c1c:	bl	aee0 <setresgid@plt>
   14c20:	tbnz	w0, #31, 14cb0 <idpriv_drop@@Base+0xbc>
   14c24:	mov	w0, w20
   14c28:	mov	w1, w20
   14c2c:	mov	w2, w20
   14c30:	bl	ad30 <setresuid@plt>
   14c34:	tbnz	w0, #31, 14cb0 <idpriv_drop@@Base+0xbc>
   14c38:	sub	x0, x29, #0x4
   14c3c:	add	x1, sp, #0x8
   14c40:	add	x2, sp, #0x4
   14c44:	bl	a470 <getresuid@plt>
   14c48:	tbnz	w0, #31, 14cc4 <idpriv_drop@@Base+0xd0>
   14c4c:	ldur	w8, [x29, #-4]
   14c50:	cmp	w8, w20
   14c54:	b.ne	14cc4 <idpriv_drop@@Base+0xd0>  // b.any
   14c58:	ldr	w8, [sp, #8]
   14c5c:	cmp	w8, w20
   14c60:	b.ne	14cc4 <idpriv_drop@@Base+0xd0>  // b.any
   14c64:	ldr	w8, [sp, #4]
   14c68:	cmp	w8, w20
   14c6c:	b.ne	14cc4 <idpriv_drop@@Base+0xd0>  // b.any
   14c70:	sub	x0, x29, #0x4
   14c74:	add	x1, sp, #0x8
   14c78:	add	x2, sp, #0x4
   14c7c:	bl	ace0 <getresgid@plt>
   14c80:	tbnz	w0, #31, 14cc4 <idpriv_drop@@Base+0xd0>
   14c84:	ldur	w8, [x29, #-4]
   14c88:	cmp	w8, w19
   14c8c:	b.ne	14cc4 <idpriv_drop@@Base+0xd0>  // b.any
   14c90:	ldr	w8, [sp, #8]
   14c94:	cmp	w8, w19
   14c98:	b.ne	14cc4 <idpriv_drop@@Base+0xd0>  // b.any
   14c9c:	ldr	w8, [sp, #4]
   14ca0:	cmp	w8, w19
   14ca4:	b.ne	14cc4 <idpriv_drop@@Base+0xd0>  // b.any
   14ca8:	mov	w0, wzr
   14cac:	b	14cb4 <idpriv_drop@@Base+0xc0>
   14cb0:	mov	w0, #0xffffffff            	// #-1
   14cb4:	ldp	x20, x19, [sp, #32]
   14cb8:	ldp	x29, x30, [sp, #16]
   14cbc:	add	sp, sp, #0x30
   14cc0:	ret
   14cc4:	bl	a980 <abort@plt>

0000000000014cc8 <idpriv_temp_drop@@Base>:
   14cc8:	sub	sp, sp, #0x50
   14ccc:	stp	x29, x30, [sp, #16]
   14cd0:	str	x23, [sp, #32]
   14cd4:	stp	x22, x21, [sp, #48]
   14cd8:	stp	x20, x19, [sp, #64]
   14cdc:	add	x29, sp, #0x10
   14ce0:	bl	a4f0 <getuid@plt>
   14ce4:	mov	w20, w0
   14ce8:	bl	aae0 <getgid@plt>
   14cec:	adrp	x23, 3d000 <base_len@@Base+0x2a06c>
   14cf0:	ldr	w8, [x23, #1756]
   14cf4:	mov	w19, w0
   14cf8:	cmn	w8, #0x1
   14cfc:	b.ne	14d08 <idpriv_temp_drop@@Base+0x40>  // b.any
   14d00:	bl	a440 <geteuid@plt>
   14d04:	str	w0, [x23, #1756]
   14d08:	adrp	x22, 3d000 <base_len@@Base+0x2a06c>
   14d0c:	ldr	w2, [x22, #1760]
   14d10:	cmn	w2, #0x1
   14d14:	b.ne	14d24 <idpriv_temp_drop@@Base+0x5c>  // b.any
   14d18:	bl	a3f0 <getegid@plt>
   14d1c:	mov	w2, w0
   14d20:	str	w0, [x22, #1760]
   14d24:	mov	w0, #0xffffffff            	// #-1
   14d28:	mov	w1, w19
   14d2c:	mov	w21, #0xffffffff            	// #-1
   14d30:	bl	aee0 <setresgid@plt>
   14d34:	tbnz	w0, #31, 14dcc <idpriv_temp_drop@@Base+0x104>
   14d38:	ldr	w2, [x23, #1756]
   14d3c:	mov	w0, #0xffffffff            	// #-1
   14d40:	mov	w1, w20
   14d44:	mov	w21, #0xffffffff            	// #-1
   14d48:	bl	ad30 <setresuid@plt>
   14d4c:	tbnz	w0, #31, 14dcc <idpriv_temp_drop@@Base+0x104>
   14d50:	add	x0, x29, #0x1c
   14d54:	add	x1, x29, #0x18
   14d58:	sub	x2, x29, #0x4
   14d5c:	bl	a470 <getresuid@plt>
   14d60:	tbnz	w0, #31, 14de8 <idpriv_temp_drop@@Base+0x120>
   14d64:	ldr	w8, [x29, #28]
   14d68:	cmp	w8, w20
   14d6c:	b.ne	14de8 <idpriv_temp_drop@@Base+0x120>  // b.any
   14d70:	ldr	w8, [x29, #24]
   14d74:	cmp	w8, w20
   14d78:	b.ne	14de8 <idpriv_temp_drop@@Base+0x120>  // b.any
   14d7c:	ldur	w8, [x29, #-4]
   14d80:	ldr	w9, [x23, #1756]
   14d84:	cmp	w8, w9
   14d88:	b.ne	14de8 <idpriv_temp_drop@@Base+0x120>  // b.any
   14d8c:	add	x0, x29, #0x1c
   14d90:	add	x1, x29, #0x18
   14d94:	sub	x2, x29, #0x4
   14d98:	bl	ace0 <getresgid@plt>
   14d9c:	tbnz	w0, #31, 14de8 <idpriv_temp_drop@@Base+0x120>
   14da0:	ldr	w8, [x29, #28]
   14da4:	cmp	w8, w19
   14da8:	b.ne	14de8 <idpriv_temp_drop@@Base+0x120>  // b.any
   14dac:	ldr	w8, [x29, #24]
   14db0:	cmp	w8, w19
   14db4:	b.ne	14de8 <idpriv_temp_drop@@Base+0x120>  // b.any
   14db8:	ldur	w8, [x29, #-4]
   14dbc:	ldr	w9, [x22, #1760]
   14dc0:	cmp	w8, w9
   14dc4:	b.ne	14de8 <idpriv_temp_drop@@Base+0x120>  // b.any
   14dc8:	mov	w21, wzr
   14dcc:	mov	w0, w21
   14dd0:	ldp	x20, x19, [sp, #64]
   14dd4:	ldp	x22, x21, [sp, #48]
   14dd8:	ldr	x23, [sp, #32]
   14ddc:	ldp	x29, x30, [sp, #16]
   14de0:	add	sp, sp, #0x50
   14de4:	ret
   14de8:	bl	a980 <abort@plt>

0000000000014dec <idpriv_temp_restore@@Base>:
   14dec:	sub	sp, sp, #0x50
   14df0:	stp	x29, x30, [sp, #16]
   14df4:	str	x23, [sp, #32]
   14df8:	stp	x22, x21, [sp, #48]
   14dfc:	stp	x20, x19, [sp, #64]
   14e00:	add	x29, sp, #0x10
   14e04:	bl	a4f0 <getuid@plt>
   14e08:	mov	w20, w0
   14e0c:	bl	aae0 <getgid@plt>
   14e10:	adrp	x23, 3d000 <base_len@@Base+0x2a06c>
   14e14:	ldr	w1, [x23, #1756]
   14e18:	cmn	w1, #0x1
   14e1c:	b.eq	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.none
   14e20:	adrp	x22, 3d000 <base_len@@Base+0x2a06c>
   14e24:	ldr	w8, [x22, #1760]
   14e28:	cmn	w8, #0x1
   14e2c:	b.eq	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.none
   14e30:	mov	w19, w0
   14e34:	mov	w0, #0xffffffff            	// #-1
   14e38:	mov	w2, #0xffffffff            	// #-1
   14e3c:	mov	w21, #0xffffffff            	// #-1
   14e40:	bl	ad30 <setresuid@plt>
   14e44:	tbnz	w0, #31, 14edc <idpriv_temp_restore@@Base+0xf0>
   14e48:	ldr	w1, [x22, #1760]
   14e4c:	mov	w0, #0xffffffff            	// #-1
   14e50:	mov	w2, #0xffffffff            	// #-1
   14e54:	mov	w21, #0xffffffff            	// #-1
   14e58:	bl	aee0 <setresgid@plt>
   14e5c:	tbnz	w0, #31, 14edc <idpriv_temp_restore@@Base+0xf0>
   14e60:	add	x0, x29, #0x1c
   14e64:	add	x1, x29, #0x18
   14e68:	sub	x2, x29, #0x4
   14e6c:	bl	a470 <getresuid@plt>
   14e70:	tbnz	w0, #31, 14ef8 <idpriv_temp_restore@@Base+0x10c>
   14e74:	ldr	w8, [x29, #28]
   14e78:	cmp	w8, w20
   14e7c:	b.ne	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.any
   14e80:	ldr	w9, [x29, #24]
   14e84:	ldr	w8, [x23, #1756]
   14e88:	cmp	w9, w8
   14e8c:	b.ne	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.any
   14e90:	ldur	w9, [x29, #-4]
   14e94:	cmp	w9, w8
   14e98:	b.ne	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.any
   14e9c:	add	x0, x29, #0x1c
   14ea0:	add	x1, x29, #0x18
   14ea4:	sub	x2, x29, #0x4
   14ea8:	bl	ace0 <getresgid@plt>
   14eac:	tbnz	w0, #31, 14ef8 <idpriv_temp_restore@@Base+0x10c>
   14eb0:	ldr	w8, [x29, #28]
   14eb4:	cmp	w8, w19
   14eb8:	b.ne	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.any
   14ebc:	ldr	w9, [x29, #24]
   14ec0:	ldr	w8, [x22, #1760]
   14ec4:	cmp	w9, w8
   14ec8:	b.ne	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.any
   14ecc:	ldur	w9, [x29, #-4]
   14ed0:	cmp	w9, w8
   14ed4:	b.ne	14ef8 <idpriv_temp_restore@@Base+0x10c>  // b.any
   14ed8:	mov	w21, wzr
   14edc:	mov	w0, w21
   14ee0:	ldp	x20, x19, [sp, #64]
   14ee4:	ldp	x22, x21, [sp, #48]
   14ee8:	ldr	x23, [sp, #32]
   14eec:	ldp	x29, x30, [sp, #16]
   14ef0:	add	sp, sp, #0x50
   14ef4:	ret
   14ef8:	bl	a980 <abort@plt>
   14efc:	stp	x29, x30, [sp, #-64]!
   14f00:	stp	x24, x23, [sp, #16]
   14f04:	mov	x24, x0
   14f08:	mov	w0, #0x68                  	// #104
   14f0c:	stp	x22, x21, [sp, #32]
   14f10:	stp	x20, x19, [sp, #48]
   14f14:	mov	x29, sp
   14f18:	mov	w22, w4
   14f1c:	mov	x20, x3
   14f20:	mov	x21, x2
   14f24:	mov	x23, x1
   14f28:	bl	a660 <malloc@plt>
   14f2c:	mov	x19, x0
   14f30:	cbz	x0, 14f7c <idpriv_temp_restore@@Base+0x190>
   14f34:	and	w8, w22, #0x1
   14f38:	mov	w9, #0xb                   	// #11
   14f3c:	mov	w0, #0xb                   	// #11
   14f40:	mov	w1, #0x8                   	// #8
   14f44:	stp	x24, x23, [x19]
   14f48:	stp	x21, x20, [x19, #16]
   14f4c:	strb	w8, [x19, #32]
   14f50:	str	x9, [x19, #48]
   14f54:	bl	a7f0 <calloc@plt>
   14f58:	str	x0, [x19, #40]
   14f5c:	cbz	x0, 14f70 <idpriv_temp_restore@@Base+0x184>
   14f60:	add	x8, x19, #0x38
   14f64:	stp	x8, x8, [x19, #72]
   14f68:	str	xzr, [x19, #96]
   14f6c:	b	14f7c <idpriv_temp_restore@@Base+0x190>
   14f70:	mov	x0, x19
   14f74:	bl	aaa0 <free@plt>
   14f78:	mov	x19, xzr
   14f7c:	mov	x0, x19
   14f80:	ldp	x20, x19, [sp, #48]
   14f84:	ldp	x22, x21, [sp, #32]
   14f88:	ldp	x24, x23, [sp, #16]
   14f8c:	ldp	x29, x30, [sp], #64
   14f90:	ret
   14f94:	stp	x29, x30, [sp, #-80]!
   14f98:	stp	x26, x25, [sp, #16]
   14f9c:	mov	x26, x0
   14fa0:	mov	w0, #0x68                  	// #104
   14fa4:	stp	x24, x23, [sp, #32]
   14fa8:	stp	x22, x21, [sp, #48]
   14fac:	stp	x20, x19, [sp, #64]
   14fb0:	mov	x29, sp
   14fb4:	mov	x20, x6
   14fb8:	mov	x21, x5
   14fbc:	mov	w24, w4
   14fc0:	mov	x22, x3
   14fc4:	mov	x23, x2
   14fc8:	mov	x25, x1
   14fcc:	bl	a660 <malloc@plt>
   14fd0:	mov	x19, x0
   14fd4:	cbz	x0, 150f8 <idpriv_temp_restore@@Base+0x30c>
   14fd8:	and	w9, w24, #0x1
   14fdc:	adds	x10, x21, x21, lsr #1
   14fe0:	strb	w9, [x19, #32]
   14fe4:	csinv	x9, x10, xzr, cc  // cc = lo, ul, last
   14fe8:	mov	w11, #0xa                   	// #10
   14fec:	cmp	x9, #0xa
   14ff0:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   14ff4:	mov	x8, xzr
   14ff8:	stp	x26, x25, [x19]
   14ffc:	stp	x23, x22, [x19, #16]
   15000:	csel	x9, x9, x11, hi  // hi = pmore
   15004:	add	x10, x10, #0x78
   15008:	ldr	x22, [x10, x8, lsl #3]
   1500c:	cmp	x22, x9
   15010:	b.cs	15024 <idpriv_temp_restore@@Base+0x238>  // b.hs, b.nlast
   15014:	add	x8, x8, #0x1
   15018:	cmp	x8, #0xe8
   1501c:	b.ne	15008 <idpriv_temp_restore@@Base+0x21c>  // b.any
   15020:	b	150ec <idpriv_temp_restore@@Base+0x300>
   15024:	cmp	x8, #0xda
   15028:	str	x22, [x19, #48]
   1502c:	b.hi	150ec <idpriv_temp_restore@@Base+0x300>  // b.pmore
   15030:	mov	w1, #0x8                   	// #8
   15034:	mov	x0, x22
   15038:	bl	a7f0 <calloc@plt>
   1503c:	str	x0, [x19, #40]
   15040:	cbz	x0, 150ec <idpriv_temp_restore@@Base+0x300>
   15044:	add	x25, x19, #0x38
   15048:	str	x21, [x19, #96]
   1504c:	cbz	x21, 150b4 <idpriv_temp_restore@@Base+0x2c8>
   15050:	mov	x23, x25
   15054:	mov	w0, #0x28                  	// #40
   15058:	bl	a660 <malloc@plt>
   1505c:	cbz	x0, 150c4 <idpriv_temp_restore@@Base+0x2d8>
   15060:	mov	x24, x0
   15064:	ldr	x0, [x20]
   15068:	ldr	x8, [x19, #16]
   1506c:	str	x0, [x24, #32]
   15070:	cbz	x8, 1507c <idpriv_temp_restore@@Base+0x290>
   15074:	blr	x8
   15078:	ldr	x22, [x19, #48]
   1507c:	ldr	x8, [x19, #40]
   15080:	udiv	x9, x0, x22
   15084:	str	x0, [x24, #8]
   15088:	msub	x9, x9, x22, x0
   1508c:	ldr	x10, [x8, x9, lsl #3]
   15090:	subs	x21, x21, #0x1
   15094:	add	x20, x20, #0x8
   15098:	str	x10, [x24]
   1509c:	str	x24, [x8, x9, lsl #3]
   150a0:	str	x23, [x24, #24]
   150a4:	str	x24, [x23, #16]
   150a8:	mov	x23, x24
   150ac:	b.ne	15054 <idpriv_temp_restore@@Base+0x268>  // b.any
   150b0:	b	150b8 <idpriv_temp_restore@@Base+0x2cc>
   150b4:	mov	x24, x25
   150b8:	str	x25, [x24, #16]
   150bc:	str	x24, [x19, #80]
   150c0:	b	150f8 <idpriv_temp_restore@@Base+0x30c>
   150c4:	cmp	x23, x25
   150c8:	b.eq	150e4 <idpriv_temp_restore@@Base+0x2f8>  // b.none
   150cc:	ldr	x20, [x23, #24]
   150d0:	mov	x0, x23
   150d4:	bl	aaa0 <free@plt>
   150d8:	cmp	x20, x25
   150dc:	mov	x23, x20
   150e0:	b.ne	150cc <idpriv_temp_restore@@Base+0x2e0>  // b.any
   150e4:	ldr	x0, [x19, #40]
   150e8:	bl	aaa0 <free@plt>
   150ec:	mov	x0, x19
   150f0:	bl	aaa0 <free@plt>
   150f4:	mov	x19, xzr
   150f8:	mov	x0, x19
   150fc:	ldp	x20, x19, [sp, #64]
   15100:	ldp	x22, x21, [sp, #48]
   15104:	ldp	x24, x23, [sp, #32]
   15108:	ldp	x26, x25, [sp, #16]
   1510c:	ldp	x29, x30, [sp], #80
   15110:	ret
   15114:	ldr	x0, [x0, #96]
   15118:	ret
   1511c:	ldr	x0, [x1, #32]
   15120:	ret
   15124:	stp	x29, x30, [sp, #-48]!
   15128:	stp	x22, x21, [sp, #16]
   1512c:	stp	x20, x19, [sp, #32]
   15130:	ldr	x8, [x1, #32]
   15134:	mov	x29, sp
   15138:	cmp	x8, x2
   1513c:	b.eq	151a8 <idpriv_temp_restore@@Base+0x3bc>  // b.none
   15140:	ldr	x8, [x0, #16]
   15144:	mov	x19, x1
   15148:	mov	x21, x2
   1514c:	mov	x20, x0
   15150:	cbz	x8, 15164 <idpriv_temp_restore@@Base+0x378>
   15154:	mov	x0, x21
   15158:	blr	x8
   1515c:	mov	x22, x0
   15160:	b	15168 <idpriv_temp_restore@@Base+0x37c>
   15164:	mov	x22, x21
   15168:	ldr	x8, [x19, #8]
   1516c:	cmp	x22, x8
   15170:	b.ne	1517c <idpriv_temp_restore@@Base+0x390>  // b.any
   15174:	str	x21, [x19, #32]
   15178:	b	151a8 <idpriv_temp_restore@@Base+0x3bc>
   1517c:	mov	x0, x20
   15180:	mov	x1, x19
   15184:	bl	1614c <idpriv_temp_restore@@Base+0x1360>
   15188:	str	x21, [x19, #32]
   1518c:	str	x22, [x19, #8]
   15190:	ldp	x9, x8, [x20, #40]
   15194:	udiv	x10, x22, x8
   15198:	msub	x8, x10, x8, x22
   1519c:	ldr	x10, [x9, x8, lsl #3]
   151a0:	str	x10, [x19]
   151a4:	str	x19, [x9, x8, lsl #3]
   151a8:	ldp	x20, x19, [sp, #32]
   151ac:	ldp	x22, x21, [sp, #16]
   151b0:	mov	w0, wzr
   151b4:	ldp	x29, x30, [sp], #48
   151b8:	ret
   151bc:	ldr	x8, [x1, #16]
   151c0:	add	x9, x0, #0x38
   151c4:	cmp	x8, x9
   151c8:	csel	x0, xzr, x8, eq  // eq = none
   151cc:	ret
   151d0:	ldr	x8, [x1, #24]
   151d4:	add	x9, x0, #0x38
   151d8:	cmp	x8, x9
   151dc:	csel	x0, xzr, x8, eq  // eq = none
   151e0:	ret
   151e4:	stp	x29, x30, [sp, #-16]!
   151e8:	ldr	x9, [x0, #96]
   151ec:	mov	x29, sp
   151f0:	cmp	x9, x1
   151f4:	b.ls	15248 <idpriv_temp_restore@@Base+0x45c>  // b.plast
   151f8:	sub	x10, x9, #0x1
   151fc:	cmp	x1, x10, lsr #1
   15200:	b.ls	15228 <idpriv_temp_restore@@Base+0x43c>  // b.plast
   15204:	ldr	x8, [x0, #80]
   15208:	cmp	x10, x1
   1520c:	b.eq	1523c <idpriv_temp_restore@@Base+0x450>  // b.none
   15210:	sub	x9, x1, x9
   15214:	add	x9, x9, #0x1
   15218:	ldr	x8, [x8, #24]
   1521c:	adds	x9, x9, #0x1
   15220:	b.cc	15218 <idpriv_temp_restore@@Base+0x42c>  // b.lo, b.ul, b.last
   15224:	b	1523c <idpriv_temp_restore@@Base+0x450>
   15228:	ldr	x8, [x0, #72]
   1522c:	cbz	x1, 1523c <idpriv_temp_restore@@Base+0x450>
   15230:	ldr	x8, [x8, #16]
   15234:	subs	x1, x1, #0x1
   15238:	b.ne	15230 <idpriv_temp_restore@@Base+0x444>  // b.any
   1523c:	ldr	x0, [x8, #32]
   15240:	ldp	x29, x30, [sp], #16
   15244:	ret
   15248:	bl	a980 <abort@plt>
   1524c:	stp	x29, x30, [sp, #-48]!
   15250:	stp	x22, x21, [sp, #16]
   15254:	stp	x20, x19, [sp, #32]
   15258:	ldr	x8, [x0, #96]
   1525c:	mov	x29, sp
   15260:	cmp	x8, x1
   15264:	b.ls	15330 <idpriv_temp_restore@@Base+0x544>  // b.plast
   15268:	sub	x9, x8, #0x1
   1526c:	mov	x19, x0
   15270:	mov	x21, x2
   15274:	cmp	x1, x9, lsr #1
   15278:	b.ls	152a0 <idpriv_temp_restore@@Base+0x4b4>  // b.plast
   1527c:	ldr	x20, [x19, #80]
   15280:	cmp	x9, x1
   15284:	b.eq	152b4 <idpriv_temp_restore@@Base+0x4c8>  // b.none
   15288:	sub	x8, x1, x8
   1528c:	add	x8, x8, #0x1
   15290:	ldr	x20, [x20, #24]
   15294:	adds	x8, x8, #0x1
   15298:	b.cc	15290 <idpriv_temp_restore@@Base+0x4a4>  // b.lo, b.ul, b.last
   1529c:	b	152b4 <idpriv_temp_restore@@Base+0x4c8>
   152a0:	ldr	x20, [x19, #72]
   152a4:	cbz	x1, 152b4 <idpriv_temp_restore@@Base+0x4c8>
   152a8:	ldr	x20, [x20, #16]
   152ac:	subs	x1, x1, #0x1
   152b0:	b.ne	152a8 <idpriv_temp_restore@@Base+0x4bc>  // b.any
   152b4:	ldr	x8, [x20, #32]
   152b8:	cmp	x8, x21
   152bc:	b.eq	1531c <idpriv_temp_restore@@Base+0x530>  // b.none
   152c0:	ldr	x8, [x19, #16]
   152c4:	cbz	x8, 152d8 <idpriv_temp_restore@@Base+0x4ec>
   152c8:	mov	x0, x21
   152cc:	blr	x8
   152d0:	mov	x22, x0
   152d4:	b	152dc <idpriv_temp_restore@@Base+0x4f0>
   152d8:	mov	x22, x21
   152dc:	ldr	x8, [x20, #8]
   152e0:	cmp	x22, x8
   152e4:	b.ne	152f0 <idpriv_temp_restore@@Base+0x504>  // b.any
   152e8:	str	x21, [x20, #32]
   152ec:	b	1531c <idpriv_temp_restore@@Base+0x530>
   152f0:	mov	x0, x19
   152f4:	mov	x1, x20
   152f8:	bl	1614c <idpriv_temp_restore@@Base+0x1360>
   152fc:	str	x21, [x20, #32]
   15300:	str	x22, [x20, #8]
   15304:	ldp	x9, x8, [x19, #40]
   15308:	udiv	x10, x22, x8
   1530c:	msub	x8, x10, x8, x22
   15310:	ldr	x10, [x9, x8, lsl #3]
   15314:	str	x10, [x20]
   15318:	str	x20, [x9, x8, lsl #3]
   1531c:	mov	x0, x20
   15320:	ldp	x20, x19, [sp, #32]
   15324:	ldp	x22, x21, [sp, #16]
   15328:	ldp	x29, x30, [sp], #48
   1532c:	ret
   15330:	bl	a980 <abort@plt>
   15334:	stp	x29, x30, [sp, #-96]!
   15338:	str	x27, [sp, #16]
   1533c:	subs	x27, x2, x1
   15340:	stp	x26, x25, [sp, #32]
   15344:	stp	x24, x23, [sp, #48]
   15348:	stp	x22, x21, [sp, #64]
   1534c:	stp	x20, x19, [sp, #80]
   15350:	mov	x29, sp
   15354:	b.cc	1557c <idpriv_temp_restore@@Base+0x790>  // b.lo, b.ul, b.last
   15358:	ldr	x26, [x0, #96]
   1535c:	mov	x19, x2
   15360:	mov	x21, x0
   15364:	cmp	x26, x2
   15368:	b.cc	1557c <idpriv_temp_restore@@Base+0x790>  // b.lo, b.ul, b.last
   1536c:	ldr	x8, [x21, #16]
   15370:	mov	x22, x3
   15374:	mov	x20, x1
   15378:	cbz	x8, 1538c <idpriv_temp_restore@@Base+0x5a0>
   1537c:	mov	x0, x22
   15380:	blr	x8
   15384:	mov	x23, x0
   15388:	b	15390 <idpriv_temp_restore@@Base+0x5a4>
   1538c:	mov	x23, x22
   15390:	ldp	x9, x8, [x21, #40]
   15394:	ldr	x24, [x21, #8]
   15398:	udiv	x10, x23, x8
   1539c:	msub	x8, x10, x8, x23
   153a0:	ldrb	w10, [x21, #32]
   153a4:	ldr	x25, [x9, x8, lsl #3]
   153a8:	cbz	w10, 15400 <idpriv_temp_restore@@Base+0x614>
   153ac:	cbz	x25, 15458 <idpriv_temp_restore@@Base+0x66c>
   153b0:	mov	x26, xzr
   153b4:	ldr	x8, [x25, #8]
   153b8:	cmp	x8, x23
   153bc:	b.ne	153e8 <idpriv_temp_restore@@Base+0x5fc>  // b.any
   153c0:	ldr	x1, [x25, #32]
   153c4:	cbz	x24, 153e0 <idpriv_temp_restore@@Base+0x5f4>
   153c8:	mov	x0, x22
   153cc:	blr	x24
   153d0:	tbz	w0, #0, 153e8 <idpriv_temp_restore@@Base+0x5fc>
   153d4:	mov	x0, x25
   153d8:	cbz	x26, 153ec <idpriv_temp_restore@@Base+0x600>
   153dc:	b	154f4 <idpriv_temp_restore@@Base+0x708>
   153e0:	cmp	x1, x22
   153e4:	b.eq	153d4 <idpriv_temp_restore@@Base+0x5e8>  // b.none
   153e8:	mov	x0, x26
   153ec:	ldr	x25, [x25]
   153f0:	mov	x26, x0
   153f4:	cbnz	x25, 153b4 <idpriv_temp_restore@@Base+0x5c8>
   153f8:	cbnz	x20, 15460 <idpriv_temp_restore@@Base+0x674>
   153fc:	b	15488 <idpriv_temp_restore@@Base+0x69c>
   15400:	cbz	x25, 15438 <idpriv_temp_restore@@Base+0x64c>
   15404:	ldr	x8, [x25, #8]
   15408:	cmp	x8, x23
   1540c:	b.ne	15430 <idpriv_temp_restore@@Base+0x644>  // b.any
   15410:	ldr	x1, [x25, #32]
   15414:	cbz	x24, 15428 <idpriv_temp_restore@@Base+0x63c>
   15418:	mov	x0, x22
   1541c:	blr	x24
   15420:	tbz	w0, #0, 15430 <idpriv_temp_restore@@Base+0x644>
   15424:	b	15438 <idpriv_temp_restore@@Base+0x64c>
   15428:	cmp	x1, x22
   1542c:	b.eq	15438 <idpriv_temp_restore@@Base+0x64c>  // b.none
   15430:	ldr	x25, [x25]
   15434:	cbnz	x25, 15404 <idpriv_temp_restore@@Base+0x618>
   15438:	cbz	x20, 154bc <idpriv_temp_restore@@Base+0x6d0>
   1543c:	ldr	x8, [x21, #72]
   15440:	cmp	x8, x25
   15444:	b.eq	15554 <idpriv_temp_restore@@Base+0x768>  // b.none
   15448:	subs	x20, x20, #0x1
   1544c:	b.eq	154bc <idpriv_temp_restore@@Base+0x6d0>  // b.none
   15450:	ldr	x8, [x8, #16]
   15454:	b	15440 <idpriv_temp_restore@@Base+0x654>
   15458:	mov	x0, xzr
   1545c:	cbz	x20, 15488 <idpriv_temp_restore@@Base+0x69c>
   15460:	ldr	x8, [x21, #72]
   15464:	add	x9, x21, #0x38
   15468:	cmp	x8, x9
   1546c:	b.eq	15488 <idpriv_temp_restore@@Base+0x69c>  // b.none
   15470:	cmp	x8, x0
   15474:	b.eq	15554 <idpriv_temp_restore@@Base+0x768>  // b.none
   15478:	subs	x20, x20, #0x1
   1547c:	b.eq	15488 <idpriv_temp_restore@@Base+0x69c>  // b.none
   15480:	ldr	x8, [x8, #16]
   15484:	b	15468 <idpriv_temp_restore@@Base+0x67c>
   15488:	ldr	x9, [x21, #96]
   1548c:	cmp	x9, x19
   15490:	b.ls	15558 <idpriv_temp_restore@@Base+0x76c>  // b.plast
   15494:	ldr	x8, [x21, #80]
   15498:	cmp	x8, x0
   1549c:	b.eq	15554 <idpriv_temp_restore@@Base+0x768>  // b.none
   154a0:	sub	x9, x19, x9
   154a4:	adds	x9, x9, #0x1
   154a8:	b.cs	15558 <idpriv_temp_restore@@Base+0x76c>  // b.hs, b.nlast
   154ac:	ldr	x8, [x8, #24]
   154b0:	cmp	x8, x0
   154b4:	b.ne	154a4 <idpriv_temp_restore@@Base+0x6b8>  // b.any
   154b8:	b	15554 <idpriv_temp_restore@@Base+0x768>
   154bc:	cmp	x26, x19
   154c0:	b.ls	154ec <idpriv_temp_restore@@Base+0x700>  // b.plast
   154c4:	ldr	x8, [x21, #80]
   154c8:	cmp	x8, x25
   154cc:	b.eq	15554 <idpriv_temp_restore@@Base+0x768>  // b.none
   154d0:	sub	x9, x19, x26
   154d4:	adds	x9, x9, #0x1
   154d8:	b.cs	154ec <idpriv_temp_restore@@Base+0x700>  // b.hs, b.nlast
   154dc:	ldr	x8, [x8, #24]
   154e0:	cmp	x8, x25
   154e4:	b.ne	154d4 <idpriv_temp_restore@@Base+0x6e8>  // b.any
   154e8:	b	15554 <idpriv_temp_restore@@Base+0x768>
   154ec:	mov	x0, x25
   154f0:	b	15558 <idpriv_temp_restore@@Base+0x76c>
   154f4:	ldr	x21, [x21, #72]
   154f8:	cbz	x20, 1550c <idpriv_temp_restore@@Base+0x720>
   154fc:	mov	x8, x20
   15500:	ldr	x21, [x21, #16]
   15504:	subs	x8, x8, #0x1
   15508:	b.ne	15500 <idpriv_temp_restore@@Base+0x714>  // b.any
   1550c:	cbz	x27, 15554 <idpriv_temp_restore@@Base+0x768>
   15510:	sub	x19, x20, x19
   15514:	ldr	x8, [x21, #8]
   15518:	cmp	x8, x23
   1551c:	b.ne	15540 <idpriv_temp_restore@@Base+0x754>  // b.any
   15520:	ldr	x1, [x21, #32]
   15524:	cbz	x24, 15538 <idpriv_temp_restore@@Base+0x74c>
   15528:	mov	x0, x22
   1552c:	blr	x24
   15530:	tbz	w0, #0, 15540 <idpriv_temp_restore@@Base+0x754>
   15534:	b	15574 <idpriv_temp_restore@@Base+0x788>
   15538:	cmp	x1, x22
   1553c:	b.eq	15574 <idpriv_temp_restore@@Base+0x788>  // b.none
   15540:	ldr	x21, [x21, #16]
   15544:	adds	x19, x19, #0x1
   15548:	mov	x0, xzr
   1554c:	b.cc	15514 <idpriv_temp_restore@@Base+0x728>  // b.lo, b.ul, b.last
   15550:	b	15558 <idpriv_temp_restore@@Base+0x76c>
   15554:	mov	x0, xzr
   15558:	ldp	x20, x19, [sp, #80]
   1555c:	ldp	x22, x21, [sp, #64]
   15560:	ldp	x24, x23, [sp, #48]
   15564:	ldp	x26, x25, [sp, #32]
   15568:	ldr	x27, [sp, #16]
   1556c:	ldp	x29, x30, [sp], #96
   15570:	ret
   15574:	mov	x0, x21
   15578:	b	15558 <idpriv_temp_restore@@Base+0x76c>
   1557c:	bl	a980 <abort@plt>
   15580:	stp	x29, x30, [sp, #-80]!
   15584:	cmp	x1, x2
   15588:	stp	x26, x25, [sp, #16]
   1558c:	stp	x24, x23, [sp, #32]
   15590:	stp	x22, x21, [sp, #48]
   15594:	stp	x20, x19, [sp, #64]
   15598:	mov	x29, sp
   1559c:	b.hi	15730 <idpriv_temp_restore@@Base+0x944>  // b.pmore
   155a0:	ldr	x8, [x0, #96]
   155a4:	mov	x20, x2
   155a8:	mov	x23, x0
   155ac:	cmp	x8, x2
   155b0:	b.cc	15730 <idpriv_temp_restore@@Base+0x944>  // b.lo, b.ul, b.last
   155b4:	ldr	x8, [x23, #16]
   155b8:	mov	x21, x3
   155bc:	mov	x19, x1
   155c0:	cbz	x8, 155d4 <idpriv_temp_restore@@Base+0x7e8>
   155c4:	mov	x0, x21
   155c8:	blr	x8
   155cc:	mov	x22, x0
   155d0:	b	155d8 <idpriv_temp_restore@@Base+0x7ec>
   155d4:	mov	x22, x21
   155d8:	ldp	x9, x8, [x23, #40]
   155dc:	ldr	x24, [x23, #8]
   155e0:	udiv	x10, x22, x8
   155e4:	msub	x8, x10, x8, x22
   155e8:	ldrb	w10, [x23, #32]
   155ec:	ldr	x25, [x9, x8, lsl #3]
   155f0:	cbz	w10, 15678 <idpriv_temp_restore@@Base+0x88c>
   155f4:	cbz	x25, 1567c <idpriv_temp_restore@@Base+0x890>
   155f8:	mov	x8, xzr
   155fc:	ldr	x9, [x25, #8]
   15600:	mov	x26, x8
   15604:	cmp	x9, x22
   15608:	b.ne	15634 <idpriv_temp_restore@@Base+0x848>  // b.any
   1560c:	ldr	x1, [x25, #32]
   15610:	cbz	x24, 1562c <idpriv_temp_restore@@Base+0x840>
   15614:	mov	x0, x21
   15618:	blr	x24
   1561c:	tbz	w0, #0, 15634 <idpriv_temp_restore@@Base+0x848>
   15620:	mov	x8, x25
   15624:	cbz	x26, 15638 <idpriv_temp_restore@@Base+0x84c>
   15628:	b	156c4 <idpriv_temp_restore@@Base+0x8d8>
   1562c:	cmp	x1, x21
   15630:	b.eq	15620 <idpriv_temp_restore@@Base+0x834>  // b.none
   15634:	mov	x8, x26
   15638:	ldr	x25, [x25]
   1563c:	cbnz	x25, 155fc <idpriv_temp_restore@@Base+0x810>
   15640:	cbnz	x8, 15688 <idpriv_temp_restore@@Base+0x89c>
   15644:	b	1567c <idpriv_temp_restore@@Base+0x890>
   15648:	ldr	x8, [x25, #8]
   1564c:	cmp	x8, x22
   15650:	b.ne	15674 <idpriv_temp_restore@@Base+0x888>  // b.any
   15654:	ldr	x1, [x25, #32]
   15658:	cbz	x24, 1566c <idpriv_temp_restore@@Base+0x880>
   1565c:	mov	x0, x21
   15660:	blr	x24
   15664:	tbz	w0, #0, 15674 <idpriv_temp_restore@@Base+0x888>
   15668:	b	15684 <idpriv_temp_restore@@Base+0x898>
   1566c:	cmp	x1, x21
   15670:	b.eq	15684 <idpriv_temp_restore@@Base+0x898>  // b.none
   15674:	ldr	x25, [x25]
   15678:	cbnz	x25, 15648 <idpriv_temp_restore@@Base+0x85c>
   1567c:	mov	x0, #0xffffffffffffffff    	// #-1
   15680:	b	156ac <idpriv_temp_restore@@Base+0x8c0>
   15684:	mov	x8, x25
   15688:	add	x10, x23, #0x38
   1568c:	mov	x9, #0xffffffffffffffff    	// #-1
   15690:	ldr	x8, [x8, #24]
   15694:	add	x9, x9, #0x1
   15698:	cmp	x8, x10
   1569c:	b.ne	15690 <idpriv_temp_restore@@Base+0x8a4>  // b.any
   156a0:	cmp	x9, x20
   156a4:	ccmp	x9, x19, #0x0, cc  // cc = lo, ul, last
   156a8:	csinv	x0, x9, xzr, cs  // cs = hs, nlast
   156ac:	ldp	x20, x19, [sp, #64]
   156b0:	ldp	x22, x21, [sp, #48]
   156b4:	ldp	x24, x23, [sp, #32]
   156b8:	ldp	x26, x25, [sp, #16]
   156bc:	ldp	x29, x30, [sp], #80
   156c0:	ret
   156c4:	ldr	x23, [x23, #72]
   156c8:	cbz	x19, 156dc <idpriv_temp_restore@@Base+0x8f0>
   156cc:	mov	x8, x19
   156d0:	ldr	x23, [x23, #16]
   156d4:	subs	x8, x8, #0x1
   156d8:	b.ne	156d0 <idpriv_temp_restore@@Base+0x8e4>  // b.any
   156dc:	cmp	x19, x20
   156e0:	b.cs	1567c <idpriv_temp_restore@@Base+0x890>  // b.hs, b.nlast
   156e4:	ldr	x8, [x23, #8]
   156e8:	cmp	x8, x22
   156ec:	b.ne	15710 <idpriv_temp_restore@@Base+0x924>  // b.any
   156f0:	ldr	x1, [x23, #32]
   156f4:	cbz	x24, 15708 <idpriv_temp_restore@@Base+0x91c>
   156f8:	mov	x0, x21
   156fc:	blr	x24
   15700:	tbz	w0, #0, 15710 <idpriv_temp_restore@@Base+0x924>
   15704:	b	15728 <idpriv_temp_restore@@Base+0x93c>
   15708:	cmp	x1, x21
   1570c:	b.eq	15728 <idpriv_temp_restore@@Base+0x93c>  // b.none
   15710:	ldr	x23, [x23, #16]
   15714:	add	x19, x19, #0x1
   15718:	cmp	x20, x19
   1571c:	mov	x0, #0xffffffffffffffff    	// #-1
   15720:	b.ne	156e4 <idpriv_temp_restore@@Base+0x8f8>  // b.any
   15724:	b	156ac <idpriv_temp_restore@@Base+0x8c0>
   15728:	mov	x0, x19
   1572c:	b	156ac <idpriv_temp_restore@@Base+0x8c0>
   15730:	bl	a980 <abort@plt>
   15734:	stp	x29, x30, [sp, #-48]!
   15738:	stp	x20, x19, [sp, #32]
   1573c:	mov	x20, x0
   15740:	mov	w0, #0x28                  	// #40
   15744:	str	x21, [sp, #16]
   15748:	mov	x29, sp
   1574c:	mov	x21, x1
   15750:	bl	a660 <malloc@plt>
   15754:	mov	x19, x0
   15758:	cbz	x0, 157b8 <idpriv_temp_restore@@Base+0x9cc>
   1575c:	str	x21, [x19, #32]
   15760:	ldr	x8, [x20, #16]
   15764:	cbz	x8, 15774 <idpriv_temp_restore@@Base+0x988>
   15768:	mov	x0, x21
   1576c:	blr	x8
   15770:	mov	x21, x0
   15774:	str	x21, [x19, #8]
   15778:	ldp	x9, x8, [x20, #40]
   1577c:	mov	x0, x20
   15780:	udiv	x10, x21, x8
   15784:	msub	x8, x10, x8, x21
   15788:	ldr	x10, [x9, x8, lsl #3]
   1578c:	str	x10, [x19]
   15790:	str	x19, [x9, x8, lsl #3]
   15794:	ldr	x8, [x20, #72]
   15798:	add	x10, x20, #0x38
   1579c:	stp	x8, x10, [x19, #16]
   157a0:	str	x19, [x8, #24]
   157a4:	ldr	x8, [x20, #96]
   157a8:	str	x19, [x20, #72]
   157ac:	add	x8, x8, #0x1
   157b0:	str	x8, [x20, #96]
   157b4:	bl	16194 <idpriv_temp_restore@@Base+0x13a8>
   157b8:	mov	x0, x19
   157bc:	ldp	x20, x19, [sp, #32]
   157c0:	ldr	x21, [sp, #16]
   157c4:	ldp	x29, x30, [sp], #48
   157c8:	ret
   157cc:	stp	x29, x30, [sp, #-48]!
   157d0:	stp	x20, x19, [sp, #32]
   157d4:	mov	x20, x0
   157d8:	mov	w0, #0x28                  	// #40
   157dc:	str	x21, [sp, #16]
   157e0:	mov	x29, sp
   157e4:	mov	x21, x1
   157e8:	bl	a660 <malloc@plt>
   157ec:	mov	x19, x0
   157f0:	cbz	x0, 15850 <idpriv_temp_restore@@Base+0xa64>
   157f4:	str	x21, [x19, #32]
   157f8:	ldr	x8, [x20, #16]
   157fc:	cbz	x8, 1580c <idpriv_temp_restore@@Base+0xa20>
   15800:	mov	x0, x21
   15804:	blr	x8
   15808:	mov	x21, x0
   1580c:	str	x21, [x19, #8]
   15810:	ldp	x9, x8, [x20, #40]
   15814:	mov	x0, x20
   15818:	udiv	x10, x21, x8
   1581c:	msub	x8, x10, x8, x21
   15820:	ldr	x10, [x9, x8, lsl #3]
   15824:	str	x10, [x19]
   15828:	str	x19, [x9, x8, lsl #3]
   1582c:	ldr	x8, [x20, #80]
   15830:	add	x10, x20, #0x38
   15834:	stp	x10, x8, [x19, #16]
   15838:	str	x19, [x8, #16]
   1583c:	ldr	x8, [x20, #96]
   15840:	str	x19, [x20, #80]
   15844:	add	x8, x8, #0x1
   15848:	str	x8, [x20, #96]
   1584c:	bl	16194 <idpriv_temp_restore@@Base+0x13a8>
   15850:	mov	x0, x19
   15854:	ldp	x20, x19, [sp, #32]
   15858:	ldr	x21, [sp, #16]
   1585c:	ldp	x29, x30, [sp], #48
   15860:	ret
   15864:	stp	x29, x30, [sp, #-48]!
   15868:	stp	x20, x19, [sp, #32]
   1586c:	mov	x20, x0
   15870:	mov	w0, #0x28                  	// #40
   15874:	stp	x22, x21, [sp, #16]
   15878:	mov	x29, sp
   1587c:	mov	x22, x2
   15880:	mov	x21, x1
   15884:	bl	a660 <malloc@plt>
   15888:	mov	x19, x0
   1588c:	cbz	x0, 158e8 <idpriv_temp_restore@@Base+0xafc>
   15890:	str	x22, [x19, #32]
   15894:	ldr	x8, [x20, #16]
   15898:	cbz	x8, 158a8 <idpriv_temp_restore@@Base+0xabc>
   1589c:	mov	x0, x22
   158a0:	blr	x8
   158a4:	mov	x22, x0
   158a8:	str	x22, [x19, #8]
   158ac:	ldp	x9, x8, [x20, #40]
   158b0:	mov	x0, x20
   158b4:	udiv	x10, x22, x8
   158b8:	msub	x8, x10, x8, x22
   158bc:	ldr	x10, [x9, x8, lsl #3]
   158c0:	str	x10, [x19]
   158c4:	str	x19, [x9, x8, lsl #3]
   158c8:	ldr	x8, [x21, #24]
   158cc:	stp	x21, x8, [x19, #16]
   158d0:	str	x19, [x8, #16]
   158d4:	str	x19, [x21, #24]
   158d8:	ldr	x8, [x20, #96]
   158dc:	add	x8, x8, #0x1
   158e0:	str	x8, [x20, #96]
   158e4:	bl	16194 <idpriv_temp_restore@@Base+0x13a8>
   158e8:	mov	x0, x19
   158ec:	ldp	x20, x19, [sp, #32]
   158f0:	ldp	x22, x21, [sp, #16]
   158f4:	ldp	x29, x30, [sp], #48
   158f8:	ret
   158fc:	stp	x29, x30, [sp, #-48]!
   15900:	stp	x20, x19, [sp, #32]
   15904:	mov	x20, x0
   15908:	mov	w0, #0x28                  	// #40
   1590c:	stp	x22, x21, [sp, #16]
   15910:	mov	x29, sp
   15914:	mov	x22, x2
   15918:	mov	x21, x1
   1591c:	bl	a660 <malloc@plt>
   15920:	mov	x19, x0
   15924:	cbz	x0, 15980 <idpriv_temp_restore@@Base+0xb94>
   15928:	str	x22, [x19, #32]
   1592c:	ldr	x8, [x20, #16]
   15930:	cbz	x8, 15940 <idpriv_temp_restore@@Base+0xb54>
   15934:	mov	x0, x22
   15938:	blr	x8
   1593c:	mov	x22, x0
   15940:	str	x22, [x19, #8]
   15944:	ldp	x9, x8, [x20, #40]
   15948:	mov	x0, x20
   1594c:	udiv	x10, x22, x8
   15950:	msub	x8, x10, x8, x22
   15954:	ldr	x10, [x9, x8, lsl #3]
   15958:	str	x10, [x19]
   1595c:	str	x19, [x9, x8, lsl #3]
   15960:	ldr	x8, [x21, #16]
   15964:	stp	x8, x21, [x19, #16]
   15968:	str	x19, [x8, #24]
   1596c:	str	x19, [x21, #16]
   15970:	ldr	x8, [x20, #96]
   15974:	add	x8, x8, #0x1
   15978:	str	x8, [x20, #96]
   1597c:	bl	16194 <idpriv_temp_restore@@Base+0x13a8>
   15980:	mov	x0, x19
   15984:	ldp	x20, x19, [sp, #32]
   15988:	ldp	x22, x21, [sp, #16]
   1598c:	ldp	x29, x30, [sp], #48
   15990:	ret
   15994:	stp	x29, x30, [sp, #-64]!
   15998:	stp	x22, x21, [sp, #32]
   1599c:	stp	x20, x19, [sp, #48]
   159a0:	str	x23, [sp, #16]
   159a4:	ldr	x23, [x0, #96]
   159a8:	mov	x29, sp
   159ac:	cmp	x23, x1
   159b0:	b.cc	15a94 <idpriv_temp_restore@@Base+0xca8>  // b.lo, b.ul, b.last
   159b4:	mov	x19, x0
   159b8:	mov	w0, #0x28                  	// #40
   159bc:	mov	x21, x1
   159c0:	mov	x22, x2
   159c4:	bl	a660 <malloc@plt>
   159c8:	mov	x20, x0
   159cc:	cbz	x0, 15a7c <idpriv_temp_restore@@Base+0xc90>
   159d0:	str	x22, [x20, #32]
   159d4:	ldr	x8, [x19, #16]
   159d8:	cbz	x8, 159e8 <idpriv_temp_restore@@Base+0xbfc>
   159dc:	mov	x0, x22
   159e0:	blr	x8
   159e4:	mov	x22, x0
   159e8:	str	x22, [x20, #8]
   159ec:	ldp	x9, x8, [x19, #40]
   159f0:	cmp	x21, x23, lsr #1
   159f4:	udiv	x10, x22, x8
   159f8:	msub	x8, x10, x8, x22
   159fc:	ldr	x10, [x9, x8, lsl #3]
   15a00:	str	x10, [x20]
   15a04:	str	x20, [x9, x8, lsl #3]
   15a08:	b.ls	15a3c <idpriv_temp_restore@@Base+0xc50>  // b.plast
   15a0c:	cmp	x23, x21
   15a10:	add	x8, x19, #0x38
   15a14:	b.eq	15a28 <idpriv_temp_restore@@Base+0xc3c>  // b.none
   15a18:	sub	x9, x21, x23
   15a1c:	ldr	x8, [x8, #24]
   15a20:	adds	x9, x9, #0x1
   15a24:	b.cc	15a1c <idpriv_temp_restore@@Base+0xc30>  // b.lo, b.ul, b.last
   15a28:	str	x8, [x20, #16]
   15a2c:	ldr	x9, [x8, #24]!
   15a30:	str	x9, [x20, #24]
   15a34:	add	x9, x9, #0x10
   15a38:	b	15a60 <idpriv_temp_restore@@Base+0xc74>
   15a3c:	add	x8, x19, #0x38
   15a40:	cbz	x21, 15a50 <idpriv_temp_restore@@Base+0xc64>
   15a44:	ldr	x8, [x8, #16]
   15a48:	subs	x21, x21, #0x1
   15a4c:	b.ne	15a44 <idpriv_temp_restore@@Base+0xc58>  // b.any
   15a50:	str	x8, [x20, #24]
   15a54:	ldr	x9, [x8, #16]!
   15a58:	str	x9, [x20, #16]
   15a5c:	add	x9, x9, #0x18
   15a60:	str	x20, [x9]
   15a64:	str	x20, [x8]
   15a68:	ldr	x8, [x19, #96]
   15a6c:	mov	x0, x19
   15a70:	add	x8, x8, #0x1
   15a74:	str	x8, [x19, #96]
   15a78:	bl	16194 <idpriv_temp_restore@@Base+0x13a8>
   15a7c:	mov	x0, x20
   15a80:	ldp	x20, x19, [sp, #48]
   15a84:	ldp	x22, x21, [sp, #32]
   15a88:	ldr	x23, [sp, #16]
   15a8c:	ldp	x29, x30, [sp], #64
   15a90:	ret
   15a94:	bl	a980 <abort@plt>
   15a98:	stp	x29, x30, [sp, #-32]!
   15a9c:	stp	x20, x19, [sp, #16]
   15aa0:	mov	x29, sp
   15aa4:	mov	x19, x1
   15aa8:	mov	x20, x0
   15aac:	bl	1614c <idpriv_temp_restore@@Base+0x1360>
   15ab0:	ldp	x9, x8, [x19, #16]
   15ab4:	str	x9, [x8, #16]
   15ab8:	str	x8, [x9, #24]
   15abc:	ldr	x9, [x20, #96]
   15ac0:	ldr	x8, [x20, #24]
   15ac4:	sub	x9, x9, #0x1
   15ac8:	str	x9, [x20, #96]
   15acc:	cbz	x8, 15ad8 <idpriv_temp_restore@@Base+0xcec>
   15ad0:	ldr	x0, [x19, #32]
   15ad4:	blr	x8
   15ad8:	mov	x0, x19
   15adc:	bl	aaa0 <free@plt>
   15ae0:	ldp	x20, x19, [sp, #16]
   15ae4:	mov	w0, #0x1                   	// #1
   15ae8:	ldp	x29, x30, [sp], #32
   15aec:	ret
   15af0:	stp	x29, x30, [sp, #-32]!
   15af4:	stp	x20, x19, [sp, #16]
   15af8:	ldr	x8, [x0, #96]
   15afc:	mov	x29, sp
   15b00:	cmp	x8, x1
   15b04:	b.ls	15ba0 <idpriv_temp_restore@@Base+0xdb4>  // b.plast
   15b08:	sub	x9, x8, #0x1
   15b0c:	mov	x19, x0
   15b10:	add	x20, x0, #0x38
   15b14:	cmp	x1, x9, lsr #1
   15b18:	b.ls	15b40 <idpriv_temp_restore@@Base+0xd54>  // b.plast
   15b1c:	sub	x8, x1, x8
   15b20:	mov	x9, x20
   15b24:	ldr	x20, [x20, #24]
   15b28:	adds	x8, x8, #0x1
   15b2c:	b.cc	15b20 <idpriv_temp_restore@@Base+0xd34>  // b.lo, b.ul, b.last
   15b30:	ldr	x8, [x20, #24]
   15b34:	str	x8, [x9, #24]
   15b38:	str	x9, [x8, #16]
   15b3c:	b	15b60 <idpriv_temp_restore@@Base+0xd74>
   15b40:	add	x8, x1, #0x1
   15b44:	mov	x9, x20
   15b48:	ldr	x20, [x20, #16]
   15b4c:	subs	x8, x8, #0x1
   15b50:	b.ne	15b44 <idpriv_temp_restore@@Base+0xd58>  // b.any
   15b54:	ldr	x8, [x20, #16]
   15b58:	str	x8, [x9, #16]
   15b5c:	str	x9, [x8, #24]
   15b60:	mov	x0, x19
   15b64:	mov	x1, x20
   15b68:	bl	1614c <idpriv_temp_restore@@Base+0x1360>
   15b6c:	ldr	x9, [x19, #96]
   15b70:	ldr	x8, [x19, #24]
   15b74:	sub	x9, x9, #0x1
   15b78:	str	x9, [x19, #96]
   15b7c:	cbz	x8, 15b88 <idpriv_temp_restore@@Base+0xd9c>
   15b80:	ldr	x0, [x20, #32]
   15b84:	blr	x8
   15b88:	mov	x0, x20
   15b8c:	bl	aaa0 <free@plt>
   15b90:	ldp	x20, x19, [sp, #16]
   15b94:	mov	w0, #0x1                   	// #1
   15b98:	ldp	x29, x30, [sp], #32
   15b9c:	ret
   15ba0:	bl	a980 <abort@plt>
   15ba4:	stp	x29, x30, [sp, #-32]!
   15ba8:	ldr	x2, [x0, #96]
   15bac:	mov	x3, x1
   15bb0:	mov	x1, xzr
   15bb4:	str	x19, [sp, #16]
   15bb8:	mov	x29, sp
   15bbc:	mov	x19, x0
   15bc0:	bl	15334 <idpriv_temp_restore@@Base+0x548>
   15bc4:	cbz	x0, 15bd8 <idpriv_temp_restore@@Base+0xdec>
   15bc8:	mov	x1, x0
   15bcc:	mov	x0, x19
   15bd0:	bl	15a98 <idpriv_temp_restore@@Base+0xcac>
   15bd4:	mov	w0, #0x1                   	// #1
   15bd8:	ldr	x19, [sp, #16]
   15bdc:	ldp	x29, x30, [sp], #32
   15be0:	ret
   15be4:	stp	x29, x30, [sp, #-64]!
   15be8:	stp	x22, x21, [sp, #32]
   15bec:	stp	x20, x19, [sp, #48]
   15bf0:	ldr	x20, [x0, #72]
   15bf4:	add	x21, x0, #0x38
   15bf8:	mov	x19, x0
   15bfc:	str	x23, [sp, #16]
   15c00:	cmp	x20, x21
   15c04:	mov	x29, sp
   15c08:	b.eq	15c34 <idpriv_temp_restore@@Base+0xe48>  // b.none
   15c0c:	ldr	x22, [x19, #24]
   15c10:	ldr	x23, [x20, #16]
   15c14:	cbz	x22, 15c20 <idpriv_temp_restore@@Base+0xe34>
   15c18:	ldr	x0, [x20, #32]
   15c1c:	blr	x22
   15c20:	mov	x0, x20
   15c24:	bl	aaa0 <free@plt>
   15c28:	cmp	x23, x21
   15c2c:	mov	x20, x23
   15c30:	b.ne	15c10 <idpriv_temp_restore@@Base+0xe24>  // b.any
   15c34:	ldr	x0, [x19, #40]
   15c38:	bl	aaa0 <free@plt>
   15c3c:	mov	x0, x19
   15c40:	ldp	x20, x19, [sp, #48]
   15c44:	ldp	x22, x21, [sp, #32]
   15c48:	ldr	x23, [sp, #16]
   15c4c:	ldp	x29, x30, [sp], #64
   15c50:	b	aaa0 <free@plt>
   15c54:	ldr	x9, [x0]
   15c58:	add	x10, x0, #0x38
   15c5c:	stp	x9, x0, [x8]
   15c60:	ldr	x9, [x0, #72]
   15c64:	stp	x9, x10, [x8, #24]
   15c68:	ret
   15c6c:	stp	x29, x30, [sp, #-16]!
   15c70:	subs	x10, x2, x1
   15c74:	mov	x29, sp
   15c78:	b.cc	15d54 <idpriv_temp_restore@@Base+0xf68>  // b.lo, b.ul, b.last
   15c7c:	ldr	x11, [x0, #96]
   15c80:	subs	x12, x11, x2
   15c84:	b.cc	15d54 <idpriv_temp_restore@@Base+0xf68>  // b.lo, b.ul, b.last
   15c88:	ldr	x9, [x0]
   15c8c:	cmp	x10, x1
   15c90:	stp	x9, x0, [x8]
   15c94:	b.cs	15cd8 <idpriv_temp_restore@@Base+0xeec>  // b.hs, b.nlast
   15c98:	cmp	x12, x1
   15c9c:	b.cs	15cd8 <idpriv_temp_restore@@Base+0xeec>  // b.hs, b.nlast
   15ca0:	add	x9, x0, #0x38
   15ca4:	cbz	x12, 15cb8 <idpriv_temp_restore@@Base+0xecc>
   15ca8:	sub	x11, x2, x11
   15cac:	ldr	x9, [x9, #24]
   15cb0:	adds	x11, x11, #0x1
   15cb4:	b.cc	15cac <idpriv_temp_restore@@Base+0xec0>  // b.lo, b.ul, b.last
   15cb8:	str	x9, [x8, #32]
   15cbc:	cbz	x10, 15cd0 <idpriv_temp_restore@@Base+0xee4>
   15cc0:	sub	x10, x1, x2
   15cc4:	ldr	x9, [x9, #24]
   15cc8:	adds	x10, x10, #0x1
   15ccc:	b.cc	15cc4 <idpriv_temp_restore@@Base+0xed8>  // b.lo, b.ul, b.last
   15cd0:	add	x8, x8, #0x18
   15cd4:	b	15d48 <idpriv_temp_restore@@Base+0xf5c>
   15cd8:	cmp	x10, x12
   15cdc:	b.ls	15d14 <idpriv_temp_restore@@Base+0xf28>  // b.plast
   15ce0:	ldr	x10, [x0, #72]
   15ce4:	add	x9, x0, #0x38
   15ce8:	cbz	x1, 15cf8 <idpriv_temp_restore@@Base+0xf0c>
   15cec:	ldr	x10, [x10, #16]
   15cf0:	subs	x1, x1, #0x1
   15cf4:	b.ne	15cec <idpriv_temp_restore@@Base+0xf00>  // b.any
   15cf8:	str	x10, [x8, #24]
   15cfc:	cbz	x12, 15d44 <idpriv_temp_restore@@Base+0xf58>
   15d00:	sub	x10, x2, x11
   15d04:	ldr	x9, [x9, #24]
   15d08:	adds	x10, x10, #0x1
   15d0c:	b.cc	15d04 <idpriv_temp_restore@@Base+0xf18>  // b.lo, b.ul, b.last
   15d10:	b	15d44 <idpriv_temp_restore@@Base+0xf58>
   15d14:	ldr	x9, [x0, #72]
   15d18:	cbz	x1, 15d2c <idpriv_temp_restore@@Base+0xf40>
   15d1c:	mov	x11, x1
   15d20:	ldr	x9, [x9, #16]
   15d24:	subs	x11, x11, #0x1
   15d28:	b.ne	15d20 <idpriv_temp_restore@@Base+0xf34>  // b.any
   15d2c:	str	x9, [x8, #24]
   15d30:	cbz	x10, 15d44 <idpriv_temp_restore@@Base+0xf58>
   15d34:	sub	x10, x1, x2
   15d38:	ldr	x9, [x9, #16]
   15d3c:	adds	x10, x10, #0x1
   15d40:	b.cc	15d38 <idpriv_temp_restore@@Base+0xf4c>  // b.lo, b.ul, b.last
   15d44:	add	x8, x8, #0x20
   15d48:	str	x9, [x8]
   15d4c:	ldp	x29, x30, [sp], #16
   15d50:	ret
   15d54:	bl	a980 <abort@plt>
   15d58:	ldp	x8, x9, [x0, #24]
   15d5c:	cmp	x8, x9
   15d60:	b.eq	15d84 <idpriv_temp_restore@@Base+0xf98>  // b.none
   15d64:	ldr	x9, [x8, #32]
   15d68:	str	x9, [x1]
   15d6c:	cbz	x2, 15d74 <idpriv_temp_restore@@Base+0xf88>
   15d70:	str	x8, [x2]
   15d74:	ldr	x8, [x8, #16]
   15d78:	str	x8, [x0, #24]
   15d7c:	mov	w0, #0x1                   	// #1
   15d80:	ret
   15d84:	mov	w0, wzr
   15d88:	ret
   15d8c:	ret
   15d90:	stp	x29, x30, [sp, #-64]!
   15d94:	stp	x24, x23, [sp, #16]
   15d98:	stp	x22, x21, [sp, #32]
   15d9c:	stp	x20, x19, [sp, #48]
   15da0:	ldr	x22, [x0, #72]
   15da4:	add	x23, x0, #0x38
   15da8:	mov	x29, sp
   15dac:	cmp	x22, x23
   15db0:	b.eq	15dfc <idpriv_temp_restore@@Base+0x1010>  // b.none
   15db4:	mov	x20, x2
   15db8:	mov	x21, x1
   15dbc:	mov	w24, #0x2                   	// #2
   15dc0:	ldr	x0, [x22, #32]
   15dc4:	mov	x1, x20
   15dc8:	blr	x21
   15dcc:	cmp	w0, #0x0
   15dd0:	cset	w8, eq  // eq = none
   15dd4:	csel	x9, x22, x19, eq  // eq = none
   15dd8:	csel	w8, w24, w8, gt
   15ddc:	csel	x19, x19, x9, gt
   15de0:	cbnz	w8, 15df4 <idpriv_temp_restore@@Base+0x1008>
   15de4:	ldr	x22, [x22, #16]
   15de8:	cmp	x22, x23
   15dec:	b.ne	15dc0 <idpriv_temp_restore@@Base+0xfd4>  // b.any
   15df0:	b	15dfc <idpriv_temp_restore@@Base+0x1010>
   15df4:	cmp	w8, #0x2
   15df8:	b.ne	15e00 <idpriv_temp_restore@@Base+0x1014>  // b.any
   15dfc:	mov	x19, xzr
   15e00:	mov	x0, x19
   15e04:	ldp	x20, x19, [sp, #48]
   15e08:	ldp	x22, x21, [sp, #32]
   15e0c:	ldp	x24, x23, [sp, #16]
   15e10:	ldp	x29, x30, [sp], #64
   15e14:	ret
   15e18:	stp	x29, x30, [sp, #-48]!
   15e1c:	cmp	x3, x2
   15e20:	stp	x22, x21, [sp, #16]
   15e24:	stp	x20, x19, [sp, #32]
   15e28:	mov	x29, sp
   15e2c:	b.cc	15ed4 <idpriv_temp_restore@@Base+0x10e8>  // b.lo, b.ul, b.last
   15e30:	ldr	x8, [x0, #96]
   15e34:	cmp	x8, x3
   15e38:	b.cc	15ed4 <idpriv_temp_restore@@Base+0x10e8>  // b.lo, b.ul, b.last
   15e3c:	cmp	x3, x2
   15e40:	b.eq	15ebc <idpriv_temp_restore@@Base+0x10d0>  // b.none
   15e44:	sub	x9, x8, #0x1
   15e48:	mov	x19, x4
   15e4c:	mov	x20, x1
   15e50:	cmp	x2, x9, lsr #1
   15e54:	b.ls	15e7c <idpriv_temp_restore@@Base+0x1090>  // b.plast
   15e58:	ldr	x21, [x0, #80]
   15e5c:	cmp	x9, x2
   15e60:	b.eq	15e94 <idpriv_temp_restore@@Base+0x10a8>  // b.none
   15e64:	sub	x8, x2, x8
   15e68:	add	x8, x8, #0x1
   15e6c:	ldr	x21, [x21, #24]
   15e70:	adds	x8, x8, #0x1
   15e74:	b.cc	15e6c <idpriv_temp_restore@@Base+0x1080>  // b.lo, b.ul, b.last
   15e78:	b	15e94 <idpriv_temp_restore@@Base+0x10a8>
   15e7c:	ldr	x21, [x0, #72]
   15e80:	cbz	x2, 15e94 <idpriv_temp_restore@@Base+0x10a8>
   15e84:	mov	x8, x2
   15e88:	ldr	x21, [x21, #16]
   15e8c:	subs	x8, x8, #0x1
   15e90:	b.ne	15e88 <idpriv_temp_restore@@Base+0x109c>  // b.any
   15e94:	sub	x22, x2, x3
   15e98:	ldr	x0, [x21, #32]
   15e9c:	mov	x1, x19
   15ea0:	blr	x20
   15ea4:	cmp	w0, #0x0
   15ea8:	b.gt	15ebc <idpriv_temp_restore@@Base+0x10d0>
   15eac:	cbz	w0, 15ec0 <idpriv_temp_restore@@Base+0x10d4>
   15eb0:	ldr	x21, [x21, #16]
   15eb4:	adds	x22, x22, #0x1
   15eb8:	b.cc	15e98 <idpriv_temp_restore@@Base+0x10ac>  // b.lo, b.ul, b.last
   15ebc:	mov	x21, xzr
   15ec0:	mov	x0, x21
   15ec4:	ldp	x20, x19, [sp, #32]
   15ec8:	ldp	x22, x21, [sp, #16]
   15ecc:	ldp	x29, x30, [sp], #48
   15ed0:	ret
   15ed4:	bl	a980 <abort@plt>
   15ed8:	stp	x29, x30, [sp, #-80]!
   15edc:	stp	x24, x23, [sp, #32]
   15ee0:	stp	x22, x21, [sp, #48]
   15ee4:	stp	x20, x19, [sp, #64]
   15ee8:	ldr	x22, [x0, #72]
   15eec:	add	x23, x0, #0x38
   15ef0:	str	x25, [sp, #16]
   15ef4:	mov	x29, sp
   15ef8:	cmp	x22, x23
   15efc:	b.eq	15f50 <idpriv_temp_restore@@Base+0x1164>  // b.none
   15f00:	mov	x20, x2
   15f04:	mov	x21, x1
   15f08:	mov	x24, xzr
   15f0c:	mov	w25, #0x2                   	// #2
   15f10:	ldr	x0, [x22, #32]
   15f14:	mov	x1, x20
   15f18:	blr	x21
   15f1c:	cmp	w0, #0x0
   15f20:	cset	w8, eq  // eq = none
   15f24:	csel	x9, x24, x19, eq  // eq = none
   15f28:	csel	w8, w25, w8, gt
   15f2c:	csel	x19, x19, x9, gt
   15f30:	cbnz	w8, 15f48 <idpriv_temp_restore@@Base+0x115c>
   15f34:	ldr	x22, [x22, #16]
   15f38:	add	x24, x24, #0x1
   15f3c:	cmp	x22, x23
   15f40:	b.ne	15f10 <idpriv_temp_restore@@Base+0x1124>  // b.any
   15f44:	b	15f50 <idpriv_temp_restore@@Base+0x1164>
   15f48:	cmp	w8, #0x2
   15f4c:	b.ne	15f54 <idpriv_temp_restore@@Base+0x1168>  // b.any
   15f50:	mov	x19, #0xffffffffffffffff    	// #-1
   15f54:	mov	x0, x19
   15f58:	ldp	x20, x19, [sp, #64]
   15f5c:	ldp	x22, x21, [sp, #48]
   15f60:	ldp	x24, x23, [sp, #32]
   15f64:	ldr	x25, [sp, #16]
   15f68:	ldp	x29, x30, [sp], #80
   15f6c:	ret
   15f70:	stp	x29, x30, [sp, #-64]!
   15f74:	cmp	x3, x2
   15f78:	str	x23, [sp, #16]
   15f7c:	stp	x22, x21, [sp, #32]
   15f80:	stp	x20, x19, [sp, #48]
   15f84:	mov	x29, sp
   15f88:	b.cc	16040 <idpriv_temp_restore@@Base+0x1254>  // b.lo, b.ul, b.last
   15f8c:	ldr	x8, [x0, #96]
   15f90:	mov	x21, x3
   15f94:	cmp	x8, x3
   15f98:	b.cc	16040 <idpriv_temp_restore@@Base+0x1254>  // b.lo, b.ul, b.last
   15f9c:	mov	x19, x2
   15fa0:	cmp	x21, x2
   15fa4:	b.eq	16024 <idpriv_temp_restore@@Base+0x1238>  // b.none
   15fa8:	sub	x9, x8, #0x1
   15fac:	mov	x20, x4
   15fb0:	mov	x22, x1
   15fb4:	cmp	x19, x9, lsr #1
   15fb8:	b.ls	15fe0 <idpriv_temp_restore@@Base+0x11f4>  // b.plast
   15fbc:	ldr	x23, [x0, #80]
   15fc0:	cmp	x9, x19
   15fc4:	b.eq	16010 <idpriv_temp_restore@@Base+0x1224>  // b.none
   15fc8:	sub	x8, x19, x8
   15fcc:	add	x8, x8, #0x1
   15fd0:	ldr	x23, [x23, #24]
   15fd4:	adds	x8, x8, #0x1
   15fd8:	b.cc	15fd0 <idpriv_temp_restore@@Base+0x11e4>  // b.lo, b.ul, b.last
   15fdc:	b	16010 <idpriv_temp_restore@@Base+0x1224>
   15fe0:	ldr	x23, [x0, #72]
   15fe4:	cbz	x19, 16010 <idpriv_temp_restore@@Base+0x1224>
   15fe8:	mov	x8, x19
   15fec:	ldr	x23, [x23, #16]
   15ff0:	subs	x8, x8, #0x1
   15ff4:	b.ne	15fec <idpriv_temp_restore@@Base+0x1200>  // b.any
   15ff8:	b	16010 <idpriv_temp_restore@@Base+0x1224>
   15ffc:	cbz	w0, 16028 <idpriv_temp_restore@@Base+0x123c>
   16000:	ldr	x23, [x23, #16]
   16004:	add	x19, x19, #0x1
   16008:	cmp	x21, x19
   1600c:	b.eq	16024 <idpriv_temp_restore@@Base+0x1238>  // b.none
   16010:	ldr	x0, [x23, #32]
   16014:	mov	x1, x20
   16018:	blr	x22
   1601c:	cmp	w0, #0x0
   16020:	b.le	15ffc <idpriv_temp_restore@@Base+0x1210>
   16024:	mov	x19, #0xffffffffffffffff    	// #-1
   16028:	mov	x0, x19
   1602c:	ldp	x20, x19, [sp, #48]
   16030:	ldp	x22, x21, [sp, #32]
   16034:	ldr	x23, [sp, #16]
   16038:	ldp	x29, x30, [sp], #64
   1603c:	ret
   16040:	bl	a980 <abort@plt>
   16044:	stp	x29, x30, [sp, #-64]!
   16048:	stp	x22, x21, [sp, #32]
   1604c:	stp	x20, x19, [sp, #48]
   16050:	ldr	x21, [x0, #72]
   16054:	str	x23, [sp, #16]
   16058:	add	x23, x0, #0x38
   1605c:	mov	x19, x2
   16060:	mov	x20, x0
   16064:	cmp	x21, x23
   16068:	mov	x29, sp
   1606c:	b.eq	16090 <idpriv_temp_restore@@Base+0x12a4>  // b.none
   16070:	mov	x22, x1
   16074:	ldr	x0, [x21, #32]
   16078:	mov	x1, x19
   1607c:	blr	x22
   16080:	tbz	w0, #31, 160ac <idpriv_temp_restore@@Base+0x12c0>
   16084:	ldr	x21, [x21, #16]
   16088:	cmp	x21, x23
   1608c:	b.ne	16074 <idpriv_temp_restore@@Base+0x1288>  // b.any
   16090:	mov	x0, x20
   16094:	mov	x1, x19
   16098:	ldp	x20, x19, [sp, #48]
   1609c:	ldp	x22, x21, [sp, #32]
   160a0:	ldr	x23, [sp, #16]
   160a4:	ldp	x29, x30, [sp], #64
   160a8:	b	157cc <idpriv_temp_restore@@Base+0x9e0>
   160ac:	mov	x0, x20
   160b0:	mov	x1, x21
   160b4:	mov	x2, x19
   160b8:	ldp	x20, x19, [sp, #48]
   160bc:	ldp	x22, x21, [sp, #32]
   160c0:	ldr	x23, [sp, #16]
   160c4:	ldp	x29, x30, [sp], #64
   160c8:	b	15864 <idpriv_temp_restore@@Base+0xa78>
   160cc:	stp	x29, x30, [sp, #-64]!
   160d0:	stp	x22, x21, [sp, #32]
   160d4:	stp	x20, x19, [sp, #48]
   160d8:	ldr	x21, [x0, #72]
   160dc:	str	x23, [sp, #16]
   160e0:	add	x23, x0, #0x38
   160e4:	mov	x29, sp
   160e8:	cmp	x21, x23
   160ec:	b.eq	16120 <idpriv_temp_restore@@Base+0x1334>  // b.none
   160f0:	mov	x20, x2
   160f4:	mov	x19, x0
   160f8:	mov	x22, x1
   160fc:	ldr	x0, [x21, #32]
   16100:	mov	x1, x20
   16104:	blr	x22
   16108:	cmp	w0, #0x0
   1610c:	b.gt	16120 <idpriv_temp_restore@@Base+0x1334>
   16110:	cbz	w0, 16128 <idpriv_temp_restore@@Base+0x133c>
   16114:	ldr	x21, [x21, #16]
   16118:	cmp	x21, x23
   1611c:	b.ne	160fc <idpriv_temp_restore@@Base+0x1310>  // b.any
   16120:	mov	w0, wzr
   16124:	b	16138 <idpriv_temp_restore@@Base+0x134c>
   16128:	mov	x0, x19
   1612c:	mov	x1, x21
   16130:	bl	15a98 <idpriv_temp_restore@@Base+0xcac>
   16134:	mov	w0, #0x1                   	// #1
   16138:	ldp	x20, x19, [sp, #48]
   1613c:	ldp	x22, x21, [sp, #32]
   16140:	ldr	x23, [sp, #16]
   16144:	ldp	x29, x30, [sp], #64
   16148:	ret
   1614c:	stp	x29, x30, [sp, #-16]!
   16150:	ldr	x8, [x1, #8]
   16154:	ldp	x10, x9, [x0, #40]
   16158:	mov	x29, sp
   1615c:	udiv	x11, x8, x9
   16160:	msub	x8, x11, x9, x8
   16164:	add	x8, x10, x8, lsl #3
   16168:	ldr	x9, [x8]
   1616c:	cmp	x9, x1
   16170:	b.eq	16180 <idpriv_temp_restore@@Base+0x1394>  // b.none
   16174:	cbz	x9, 16190 <idpriv_temp_restore@@Base+0x13a4>
   16178:	mov	x8, x9
   1617c:	b	16168 <idpriv_temp_restore@@Base+0x137c>
   16180:	ldr	x9, [x1]
   16184:	str	x9, [x8]
   16188:	ldp	x29, x30, [sp], #16
   1618c:	ret
   16190:	bl	a980 <abort@plt>
   16194:	stp	x29, x30, [sp, #-48]!
   16198:	stp	x22, x21, [sp, #16]
   1619c:	stp	x20, x19, [sp, #32]
   161a0:	ldr	x8, [x0, #96]
   161a4:	ldr	x22, [x0, #48]
   161a8:	mov	x29, sp
   161ac:	adds	x8, x8, x8, lsr #1
   161b0:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   161b4:	cmp	x8, x22
   161b8:	b.ls	16258 <idpriv_temp_restore@@Base+0x146c>  // b.plast
   161bc:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   161c0:	mov	x19, x0
   161c4:	mov	x9, xzr
   161c8:	add	x10, x10, #0x78
   161cc:	ldr	x20, [x10, x9]
   161d0:	cmp	x20, x8
   161d4:	b.cs	161e8 <idpriv_temp_restore@@Base+0x13fc>  // b.hs, b.nlast
   161d8:	add	x9, x9, #0x8
   161dc:	cmp	x9, #0x740
   161e0:	b.ne	161cc <idpriv_temp_restore@@Base+0x13e0>  // b.any
   161e4:	mov	x20, #0xffffffffffffffff    	// #-1
   161e8:	cmp	x20, x22
   161ec:	b.ls	16258 <idpriv_temp_restore@@Base+0x146c>  // b.plast
   161f0:	lsr	x8, x20, #61
   161f4:	cbnz	x8, 16258 <idpriv_temp_restore@@Base+0x146c>
   161f8:	ldr	x21, [x19, #40]
   161fc:	mov	w1, #0x8                   	// #8
   16200:	mov	x0, x20
   16204:	bl	a7f0 <calloc@plt>
   16208:	cbz	x0, 16258 <idpriv_temp_restore@@Base+0x146c>
   1620c:	cbz	x22, 16240 <idpriv_temp_restore@@Base+0x1454>
   16210:	sub	x22, x22, #0x1
   16214:	ldr	x8, [x21, x22, lsl #3]
   16218:	cbz	x8, 1623c <idpriv_temp_restore@@Base+0x1450>
   1621c:	ldp	x11, x9, [x8]
   16220:	udiv	x10, x9, x20
   16224:	msub	x9, x10, x20, x9
   16228:	ldr	x10, [x0, x9, lsl #3]
   1622c:	str	x10, [x8]
   16230:	str	x8, [x0, x9, lsl #3]
   16234:	mov	x8, x11
   16238:	cbnz	x11, 1621c <idpriv_temp_restore@@Base+0x1430>
   1623c:	cbnz	x22, 16210 <idpriv_temp_restore@@Base+0x1424>
   16240:	stp	x0, x20, [x19, #40]
   16244:	mov	x0, x21
   16248:	ldp	x20, x19, [sp, #32]
   1624c:	ldp	x22, x21, [sp, #16]
   16250:	ldp	x29, x30, [sp], #48
   16254:	b	aaa0 <free@plt>
   16258:	ldp	x20, x19, [sp, #32]
   1625c:	ldp	x22, x21, [sp, #16]
   16260:	ldp	x29, x30, [sp], #48
   16264:	ret

0000000000016268 <gl_list_nx_create_empty@@Base>:
   16268:	ldr	x5, [x0]
   1626c:	and	w4, w4, #0x1
   16270:	br	x5

0000000000016274 <gl_list_nx_create@@Base>:
   16274:	ldr	x7, [x0, #8]
   16278:	and	w4, w4, #0x1
   1627c:	br	x7

0000000000016280 <gl_list_size@@Base>:
   16280:	ldr	x8, [x0]
   16284:	ldr	x1, [x8, #16]
   16288:	br	x1

000000000001628c <gl_list_node_value@@Base>:
   1628c:	ldr	x8, [x0]
   16290:	ldr	x2, [x8, #24]
   16294:	br	x2

0000000000016298 <gl_list_node_nx_set_value@@Base>:
   16298:	ldr	x8, [x0]
   1629c:	ldr	x3, [x8, #32]
   162a0:	br	x3

00000000000162a4 <gl_list_next_node@@Base>:
   162a4:	ldr	x8, [x0]
   162a8:	ldr	x2, [x8, #40]
   162ac:	br	x2

00000000000162b0 <gl_list_previous_node@@Base>:
   162b0:	ldr	x8, [x0]
   162b4:	ldr	x2, [x8, #48]
   162b8:	br	x2

00000000000162bc <gl_list_get_at@@Base>:
   162bc:	ldr	x8, [x0]
   162c0:	ldr	x2, [x8, #56]
   162c4:	br	x2

00000000000162c8 <gl_list_nx_set_at@@Base>:
   162c8:	ldr	x8, [x0]
   162cc:	ldr	x3, [x8, #64]
   162d0:	br	x3

00000000000162d4 <gl_list_search@@Base>:
   162d4:	stp	x29, x30, [sp, #-32]!
   162d8:	stp	x20, x19, [sp, #16]
   162dc:	ldr	x8, [x0]
   162e0:	mov	x29, sp
   162e4:	mov	x19, x0
   162e8:	mov	x20, x1
   162ec:	ldr	x8, [x8, #16]
   162f0:	blr	x8
   162f4:	ldr	x8, [x19]
   162f8:	mov	x2, x0
   162fc:	mov	x0, x19
   16300:	mov	x3, x20
   16304:	ldr	x4, [x8, #72]
   16308:	ldp	x20, x19, [sp, #16]
   1630c:	mov	x1, xzr
   16310:	ldp	x29, x30, [sp], #32
   16314:	br	x4

0000000000016318 <gl_list_search_from@@Base>:
   16318:	stp	x29, x30, [sp, #-48]!
   1631c:	stp	x20, x19, [sp, #32]
   16320:	ldr	x8, [x0]
   16324:	str	x21, [sp, #16]
   16328:	mov	x29, sp
   1632c:	mov	x19, x2
   16330:	ldr	x8, [x8, #16]
   16334:	mov	x20, x0
   16338:	mov	x21, x1
   1633c:	blr	x8
   16340:	ldr	x8, [x20]
   16344:	mov	x2, x0
   16348:	mov	x0, x20
   1634c:	mov	x1, x21
   16350:	ldr	x4, [x8, #72]
   16354:	mov	x3, x19
   16358:	ldp	x20, x19, [sp, #32]
   1635c:	ldr	x21, [sp, #16]
   16360:	ldp	x29, x30, [sp], #48
   16364:	br	x4

0000000000016368 <gl_list_search_from_to@@Base>:
   16368:	ldr	x8, [x0]
   1636c:	ldr	x4, [x8, #72]
   16370:	br	x4

0000000000016374 <gl_list_indexof@@Base>:
   16374:	stp	x29, x30, [sp, #-32]!
   16378:	stp	x20, x19, [sp, #16]
   1637c:	ldr	x8, [x0]
   16380:	mov	x29, sp
   16384:	mov	x19, x0
   16388:	mov	x20, x1
   1638c:	ldr	x8, [x8, #16]
   16390:	blr	x8
   16394:	ldr	x8, [x19]
   16398:	mov	x2, x0
   1639c:	mov	x0, x19
   163a0:	mov	x3, x20
   163a4:	ldr	x4, [x8, #80]
   163a8:	ldp	x20, x19, [sp, #16]
   163ac:	mov	x1, xzr
   163b0:	ldp	x29, x30, [sp], #32
   163b4:	br	x4

00000000000163b8 <gl_list_indexof_from@@Base>:
   163b8:	stp	x29, x30, [sp, #-48]!
   163bc:	stp	x20, x19, [sp, #32]
   163c0:	ldr	x8, [x0]
   163c4:	str	x21, [sp, #16]
   163c8:	mov	x29, sp
   163cc:	mov	x19, x2
   163d0:	ldr	x8, [x8, #16]
   163d4:	mov	x20, x0
   163d8:	mov	x21, x1
   163dc:	blr	x8
   163e0:	ldr	x8, [x20]
   163e4:	mov	x2, x0
   163e8:	mov	x0, x20
   163ec:	mov	x1, x21
   163f0:	ldr	x4, [x8, #80]
   163f4:	mov	x3, x19
   163f8:	ldp	x20, x19, [sp, #32]
   163fc:	ldr	x21, [sp, #16]
   16400:	ldp	x29, x30, [sp], #48
   16404:	br	x4

0000000000016408 <gl_list_indexof_from_to@@Base>:
   16408:	ldr	x8, [x0]
   1640c:	ldr	x4, [x8, #80]
   16410:	br	x4

0000000000016414 <gl_list_nx_add_first@@Base>:
   16414:	ldr	x8, [x0]
   16418:	ldr	x2, [x8, #88]
   1641c:	br	x2

0000000000016420 <gl_list_nx_add_last@@Base>:
   16420:	ldr	x8, [x0]
   16424:	ldr	x2, [x8, #96]
   16428:	br	x2

000000000001642c <gl_list_nx_add_before@@Base>:
   1642c:	ldr	x8, [x0]
   16430:	ldr	x3, [x8, #104]
   16434:	br	x3

0000000000016438 <gl_list_nx_add_after@@Base>:
   16438:	ldr	x8, [x0]
   1643c:	ldr	x3, [x8, #112]
   16440:	br	x3

0000000000016444 <gl_list_nx_add_at@@Base>:
   16444:	ldr	x8, [x0]
   16448:	ldr	x3, [x8, #120]
   1644c:	br	x3

0000000000016450 <gl_list_remove_node@@Base>:
   16450:	ldr	x8, [x0]
   16454:	ldr	x2, [x8, #128]
   16458:	br	x2

000000000001645c <gl_list_remove_at@@Base>:
   1645c:	ldr	x8, [x0]
   16460:	ldr	x2, [x8, #136]
   16464:	br	x2

0000000000016468 <gl_list_remove@@Base>:
   16468:	ldr	x8, [x0]
   1646c:	ldr	x2, [x8, #144]
   16470:	br	x2

0000000000016474 <gl_list_free@@Base>:
   16474:	ldr	x8, [x0]
   16478:	ldr	x1, [x8, #152]
   1647c:	br	x1

0000000000016480 <gl_list_iterator@@Base>:
   16480:	ldr	x9, [x0]
   16484:	ldr	x1, [x9, #160]
   16488:	br	x1

000000000001648c <gl_list_iterator_from_to@@Base>:
   1648c:	ldr	x9, [x0]
   16490:	ldr	x3, [x9, #168]
   16494:	br	x3

0000000000016498 <gl_list_iterator_next@@Base>:
   16498:	ldr	x8, [x0]
   1649c:	ldr	x3, [x8, #176]
   164a0:	br	x3

00000000000164a4 <gl_list_iterator_free@@Base>:
   164a4:	ldr	x8, [x0]
   164a8:	ldr	x1, [x8, #184]
   164ac:	br	x1

00000000000164b0 <gl_sortedlist_search@@Base>:
   164b0:	ldr	x8, [x0]
   164b4:	ldr	x3, [x8, #192]
   164b8:	br	x3

00000000000164bc <gl_sortedlist_search_from_to@@Base>:
   164bc:	ldr	x8, [x0]
   164c0:	ldr	x5, [x8, #200]
   164c4:	br	x5

00000000000164c8 <gl_sortedlist_indexof@@Base>:
   164c8:	ldr	x8, [x0]
   164cc:	ldr	x3, [x8, #208]
   164d0:	br	x3

00000000000164d4 <gl_sortedlist_indexof_from_to@@Base>:
   164d4:	ldr	x8, [x0]
   164d8:	ldr	x5, [x8, #216]
   164dc:	br	x5

00000000000164e0 <gl_sortedlist_nx_add@@Base>:
   164e0:	ldr	x8, [x0]
   164e4:	ldr	x3, [x8, #224]
   164e8:	br	x3

00000000000164ec <gl_sortedlist_remove@@Base>:
   164ec:	ldr	x8, [x0]
   164f0:	ldr	x3, [x8, #232]
   164f4:	br	x3

00000000000164f8 <locale_charset@@Base>:
   164f8:	stp	x29, x30, [sp, #-16]!
   164fc:	mov	w0, #0xe                   	// #14
   16500:	mov	x29, sp
   16504:	bl	a630 <nl_langinfo@plt>
   16508:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   1650c:	add	x8, x8, #0x9e6
   16510:	cmp	x0, #0x0
   16514:	csel	x8, x8, x0, eq  // eq = none
   16518:	ldrb	w9, [x8]
   1651c:	adrp	x10, 28000 <vasnprintf@@Base+0x944>
   16520:	add	x10, x10, #0x7fd
   16524:	cmp	w9, #0x0
   16528:	csel	x0, x10, x8, eq  // eq = none
   1652c:	ldp	x29, x30, [sp], #16
   16530:	ret

0000000000016534 <glthread_rwlock_init_for_glibc@@Base>:
   16534:	sub	sp, sp, #0x30
   16538:	stp	x20, x19, [sp, #32]
   1653c:	mov	x19, x0
   16540:	add	x0, sp, #0x8
   16544:	stp	x29, x30, [sp, #16]
   16548:	add	x29, sp, #0x10
   1654c:	bl	a310 <pthread_rwlockattr_init@plt>
   16550:	mov	w20, w0
   16554:	cbnz	w0, 16584 <glthread_rwlock_init_for_glibc@@Base+0x50>
   16558:	add	x0, sp, #0x8
   1655c:	mov	w1, #0x2                   	// #2
   16560:	bl	a480 <pthread_rwlockattr_setkind_np@plt>
   16564:	mov	w20, w0
   16568:	cbnz	w0, 1657c <glthread_rwlock_init_for_glibc@@Base+0x48>
   1656c:	add	x1, sp, #0x8
   16570:	mov	x0, x19
   16574:	bl	a460 <pthread_rwlock_init@plt>
   16578:	mov	w20, w0
   1657c:	add	x0, sp, #0x8
   16580:	bl	add0 <pthread_rwlockattr_destroy@plt>
   16584:	mov	w0, w20
   16588:	ldp	x20, x19, [sp, #32]
   1658c:	ldp	x29, x30, [sp, #16]
   16590:	add	sp, sp, #0x30
   16594:	ret

0000000000016598 <glthread_recursive_lock_init_multithreaded@@Base>:
   16598:	sub	sp, sp, #0x30
   1659c:	stp	x20, x19, [sp, #32]
   165a0:	mov	x19, x0
   165a4:	add	x0, sp, #0x8
   165a8:	stp	x29, x30, [sp, #16]
   165ac:	add	x29, sp, #0x10
   165b0:	bl	ad20 <pthread_mutexattr_init@plt>
   165b4:	mov	w20, w0
   165b8:	cbnz	w0, 165fc <glthread_recursive_lock_init_multithreaded@@Base+0x64>
   165bc:	add	x0, sp, #0x8
   165c0:	mov	w1, #0x1                   	// #1
   165c4:	bl	a3b0 <pthread_mutexattr_settype@plt>
   165c8:	cbz	w0, 165dc <glthread_recursive_lock_init_multithreaded@@Base+0x44>
   165cc:	mov	w20, w0
   165d0:	add	x0, sp, #0x8
   165d4:	bl	ad70 <pthread_mutexattr_destroy@plt>
   165d8:	b	165fc <glthread_recursive_lock_init_multithreaded@@Base+0x64>
   165dc:	add	x1, sp, #0x8
   165e0:	mov	x0, x19
   165e4:	bl	a8c0 <pthread_mutex_init@plt>
   165e8:	mov	w19, w0
   165ec:	add	x0, sp, #0x8
   165f0:	bl	ad70 <pthread_mutexattr_destroy@plt>
   165f4:	cmp	w19, #0x0
   165f8:	csel	w20, w0, w19, eq  // eq = none
   165fc:	mov	w0, w20
   16600:	ldp	x20, x19, [sp, #32]
   16604:	ldp	x29, x30, [sp, #16]
   16608:	add	sp, sp, #0x30
   1660c:	ret

0000000000016610 <glthread_once_singlethreaded@@Base>:
   16610:	ldrb	w8, [x0]
   16614:	cbz	w8, 16620 <glthread_once_singlethreaded@@Base+0x10>
   16618:	mov	w0, wzr
   1661c:	ret
   16620:	mov	w8, #0xff                  	// #255
   16624:	strb	w8, [x0]
   16628:	mov	w0, #0x1                   	// #1
   1662c:	ret

0000000000016630 <mmalloca@@Base>:
   16630:	stp	x29, x30, [sp, #-16]!
   16634:	cmn	x0, #0x21
   16638:	mov	x29, sp
   1663c:	b.hi	16668 <mmalloca@@Base+0x38>  // b.pmore
   16640:	add	x0, x0, #0x20
   16644:	bl	a660 <malloc@plt>
   16648:	cbz	x0, 1666c <mmalloca@@Base+0x3c>
   1664c:	add	x9, x0, #0x10
   16650:	and	x9, x9, #0xffffffffffffffe0
   16654:	mov	x8, x0
   16658:	orr	x0, x9, #0x10
   1665c:	sub	w8, w0, w8
   16660:	sturb	w8, [x0, #-1]
   16664:	b	1666c <mmalloca@@Base+0x3c>
   16668:	mov	x0, xzr
   1666c:	ldp	x29, x30, [sp], #16
   16670:	ret

0000000000016674 <freea@@Base>:
   16674:	stp	x29, x30, [sp, #-16]!
   16678:	tst	x0, #0xf
   1667c:	mov	x29, sp
   16680:	b.ne	166a0 <freea@@Base+0x2c>  // b.any
   16684:	tbnz	w0, #4, 16690 <freea@@Base+0x1c>
   16688:	ldp	x29, x30, [sp], #16
   1668c:	ret
   16690:	ldurb	w8, [x0, #-1]
   16694:	sub	x0, x0, x8
   16698:	ldp	x29, x30, [sp], #16
   1669c:	b	aaa0 <free@plt>
   166a0:	bl	a980 <abort@plt>

00000000000166a4 <gl_map_nx_create_empty@@Base>:
   166a4:	ldr	x5, [x0]
   166a8:	br	x5

00000000000166ac <gl_map_size@@Base>:
   166ac:	ldr	x8, [x0]
   166b0:	ldr	x1, [x8, #8]
   166b4:	br	x1

00000000000166b8 <gl_map_search@@Base>:
   166b8:	ldr	x8, [x0]
   166bc:	ldr	x3, [x8, #16]
   166c0:	br	x3

00000000000166c4 <gl_map_nx_getput@@Base>:
   166c4:	ldr	x8, [x0]
   166c8:	ldr	x4, [x8, #24]
   166cc:	br	x4

00000000000166d0 <gl_map_getremove@@Base>:
   166d0:	ldr	x8, [x0]
   166d4:	ldr	x3, [x8, #32]
   166d8:	br	x3

00000000000166dc <gl_map_free@@Base>:
   166dc:	ldr	x8, [x0]
   166e0:	ldr	x1, [x8, #40]
   166e4:	br	x1

00000000000166e8 <gl_map_iterator@@Base>:
   166e8:	ldr	x9, [x0]
   166ec:	ldr	x1, [x9, #48]
   166f0:	br	x1

00000000000166f4 <gl_map_iterator_next@@Base>:
   166f4:	ldr	x8, [x0]
   166f8:	ldr	x3, [x8, #56]
   166fc:	br	x3

0000000000016700 <gl_map_iterator_free@@Base>:
   16700:	ldr	x8, [x0]
   16704:	ldr	x1, [x8, #64]
   16708:	br	x1

000000000001670c <gl_map_get@@Base>:
   1670c:	sub	sp, sp, #0x20
   16710:	stp	x29, x30, [sp, #16]
   16714:	str	xzr, [sp, #8]
   16718:	ldr	x8, [x0]
   1671c:	add	x2, sp, #0x8
   16720:	add	x29, sp, #0x10
   16724:	ldr	x8, [x8, #16]
   16728:	blr	x8
   1672c:	ldr	x0, [sp, #8]
   16730:	ldp	x29, x30, [sp, #16]
   16734:	add	sp, sp, #0x20
   16738:	ret

000000000001673c <gl_map_nx_put@@Base>:
   1673c:	sub	sp, sp, #0x30
   16740:	stp	x29, x30, [sp, #16]
   16744:	stp	x20, x19, [sp, #32]
   16748:	ldr	x8, [x0]
   1674c:	add	x3, sp, #0x8
   16750:	add	x29, sp, #0x10
   16754:	mov	x20, x0
   16758:	ldr	x8, [x8, #24]
   1675c:	blr	x8
   16760:	mov	w19, w0
   16764:	cbnz	w0, 16778 <gl_map_nx_put@@Base+0x3c>
   16768:	ldr	x8, [x20, #24]
   1676c:	cbz	x8, 16778 <gl_map_nx_put@@Base+0x3c>
   16770:	ldr	x0, [sp, #8]
   16774:	blr	x8
   16778:	mov	w0, w19
   1677c:	ldp	x20, x19, [sp, #32]
   16780:	ldp	x29, x30, [sp, #16]
   16784:	add	sp, sp, #0x30
   16788:	ret

000000000001678c <gl_map_remove@@Base>:
   1678c:	sub	sp, sp, #0x30
   16790:	stp	x29, x30, [sp, #16]
   16794:	stp	x20, x19, [sp, #32]
   16798:	ldr	x8, [x0]
   1679c:	add	x2, sp, #0x8
   167a0:	add	x29, sp, #0x10
   167a4:	mov	x20, x0
   167a8:	ldr	x8, [x8, #32]
   167ac:	blr	x8
   167b0:	mov	w19, w0
   167b4:	tbz	w0, #0, 167c8 <gl_map_remove@@Base+0x3c>
   167b8:	ldr	x8, [x20, #24]
   167bc:	cbz	x8, 167c8 <gl_map_remove@@Base+0x3c>
   167c0:	ldr	x0, [sp, #8]
   167c4:	blr	x8
   167c8:	and	w0, w19, #0x1
   167cc:	ldp	x20, x19, [sp, #32]
   167d0:	ldp	x29, x30, [sp, #16]
   167d4:	add	sp, sp, #0x30
   167d8:	ret

00000000000167dc <get_nonblocking_flag@@Base>:
   167dc:	stp	x29, x30, [sp, #-16]!
   167e0:	mov	w1, #0x3                   	// #3
   167e4:	mov	w2, wzr
   167e8:	mov	x29, sp
   167ec:	bl	ac20 <fcntl@plt>
   167f0:	ubfx	w8, w0, #11, #1
   167f4:	cmp	w0, #0x0
   167f8:	csinv	w0, w8, wzr, ge  // ge = tcont
   167fc:	ldp	x29, x30, [sp], #16
   16800:	ret

0000000000016804 <set_nonblocking_flag@@Base>:
   16804:	stp	x29, x30, [sp, #-32]!
   16808:	stp	x20, x19, [sp, #16]
   1680c:	mov	w20, w1
   16810:	mov	w1, #0x3                   	// #3
   16814:	mov	w2, wzr
   16818:	mov	x29, sp
   1681c:	mov	w19, w0
   16820:	bl	ac20 <fcntl@plt>
   16824:	tbnz	w0, #31, 16854 <set_nonblocking_flag@@Base+0x50>
   16828:	eor	w8, w20, w0, lsr #11
   1682c:	tbz	w8, #0, 1685c <set_nonblocking_flag@@Base+0x58>
   16830:	orr	w8, w0, #0x800
   16834:	and	w9, w0, #0xfffff7ff
   16838:	tst	w20, #0x1
   1683c:	mov	w0, w19
   16840:	ldp	x20, x19, [sp, #16]
   16844:	csel	w2, w8, w9, ne  // ne = any
   16848:	mov	w1, #0x4                   	// #4
   1684c:	ldp	x29, x30, [sp], #32
   16850:	b	ac20 <fcntl@plt>
   16854:	mov	w0, #0xffffffff            	// #-1
   16858:	b	16860 <set_nonblocking_flag@@Base+0x5c>
   1685c:	mov	w0, wzr
   16860:	ldp	x20, x19, [sp, #16]
   16864:	ldp	x29, x30, [sp], #32
   16868:	ret

000000000001686c <openat_save_fail@@Base>:
   1686c:	stp	x29, x30, [sp, #-32]!
   16870:	stp	x20, x19, [sp, #16]
   16874:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   16878:	ldr	x8, [x8, #3976]
   1687c:	mov	w20, w0
   16880:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   16884:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   16888:	ldr	w19, [x8]
   1688c:	add	x0, x0, #0xcb7
   16890:	add	x1, x1, #0x7b8
   16894:	mov	w2, #0x5                   	// #5
   16898:	mov	x29, sp
   1689c:	bl	adc0 <dcgettext@plt>
   168a0:	mov	x2, x0
   168a4:	mov	w0, w19
   168a8:	mov	w1, w20
   168ac:	bl	a3a0 <error@plt>
   168b0:	bl	a980 <abort@plt>

00000000000168b4 <openat_restore_fail@@Base>:
   168b4:	stp	x29, x30, [sp, #-32]!
   168b8:	stp	x20, x19, [sp, #16]
   168bc:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   168c0:	ldr	x8, [x8, #3976]
   168c4:	mov	w20, w0
   168c8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   168cc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   168d0:	ldr	w19, [x8]
   168d4:	add	x0, x0, #0xcb7
   168d8:	add	x1, x1, #0x7e3
   168dc:	mov	w2, #0x5                   	// #5
   168e0:	mov	x29, sp
   168e4:	bl	adc0 <dcgettext@plt>
   168e8:	mov	x2, x0
   168ec:	mov	w0, w19
   168f0:	mov	w1, w20
   168f4:	bl	a3a0 <error@plt>
   168f8:	bl	a980 <abort@plt>

00000000000168fc <set_program_name@@Base>:
   168fc:	stp	x29, x30, [sp, #-32]!
   16900:	stp	x20, x19, [sp, #16]
   16904:	mov	x29, sp
   16908:	cbz	x0, 16994 <set_program_name@@Base+0x98>
   1690c:	mov	w1, #0x2f                  	// #47
   16910:	mov	x19, x0
   16914:	bl	a900 <strrchr@plt>
   16918:	cmp	x0, #0x0
   1691c:	csinc	x20, x19, x0, eq  // eq = none
   16920:	sub	x8, x20, x19
   16924:	cmp	x8, #0x7
   16928:	b.lt	16970 <set_program_name@@Base+0x74>  // b.tstop
   1692c:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   16930:	sub	x0, x20, #0x7
   16934:	add	x1, x1, #0x849
   16938:	mov	w2, #0x7                   	// #7
   1693c:	bl	a740 <strncmp@plt>
   16940:	cbnz	w0, 16970 <set_program_name@@Base+0x74>
   16944:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   16948:	add	x1, x1, #0x851
   1694c:	mov	w2, #0x3                   	// #3
   16950:	mov	x0, x20
   16954:	bl	a740 <strncmp@plt>
   16958:	mov	x19, x20
   1695c:	cbnz	w0, 16970 <set_program_name@@Base+0x74>
   16960:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   16964:	ldr	x8, [x8, #4008]
   16968:	add	x19, x20, #0x3
   1696c:	str	x19, [x8]
   16970:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   16974:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
   16978:	ldr	x8, [x8, #3992]
   1697c:	ldr	x9, [x9, #3768]
   16980:	str	x19, [x8]
   16984:	str	x19, [x9]
   16988:	ldp	x20, x19, [sp, #16]
   1698c:	ldp	x29, x30, [sp], #32
   16990:	ret
   16994:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   16998:	ldr	x8, [x8, #3816]
   1699c:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   169a0:	add	x0, x0, #0x811
   169a4:	ldr	x1, [x8]
   169a8:	bl	a380 <fputs@plt>
   169ac:	bl	a980 <abort@plt>

00000000000169b0 <gl_rbtree_list_check_invariants@@Base>:
   169b0:	ldr	x0, [x0, #40]
   169b4:	cbz	x0, 169c0 <gl_rbtree_list_check_invariants@@Base+0x10>
   169b8:	mov	x1, xzr
   169bc:	b	169c4 <gl_rbtree_list_check_invariants@@Base+0x14>
   169c0:	ret
   169c4:	stp	x29, x30, [sp, #-48]!
   169c8:	stp	x20, x19, [sp, #32]
   169cc:	str	x21, [sp, #16]
   169d0:	mov	x21, x0
   169d4:	ldr	x0, [x0]
   169d8:	mov	x20, x1
   169dc:	mov	x29, sp
   169e0:	cbz	x0, 169f4 <gl_rbtree_list_check_invariants@@Base+0x44>
   169e4:	mov	x1, x21
   169e8:	bl	169c4 <gl_rbtree_list_check_invariants@@Base+0x14>
   169ec:	mov	w19, w0
   169f0:	b	169f8 <gl_rbtree_list_check_invariants@@Base+0x48>
   169f4:	mov	w19, wzr
   169f8:	ldr	x0, [x21, #8]
   169fc:	cbz	x0, 16a08 <gl_rbtree_list_check_invariants@@Base+0x58>
   16a00:	mov	x1, x21
   16a04:	bl	169c4 <gl_rbtree_list_check_invariants@@Base+0x14>
   16a08:	ldr	x8, [x21, #16]
   16a0c:	cmp	x8, x20
   16a10:	b.ne	16a7c <gl_rbtree_list_check_invariants@@Base+0xcc>  // b.any
   16a14:	ldr	x9, [x21]
   16a18:	ldr	x8, [x21, #32]
   16a1c:	cbz	x9, 16a2c <gl_rbtree_list_check_invariants@@Base+0x7c>
   16a20:	ldr	x9, [x9, #32]
   16a24:	add	x9, x9, #0x1
   16a28:	b	16a30 <gl_rbtree_list_check_invariants@@Base+0x80>
   16a2c:	mov	w9, #0x1                   	// #1
   16a30:	ldr	x10, [x21, #8]
   16a34:	cbz	x10, 16a3c <gl_rbtree_list_check_invariants@@Base+0x8c>
   16a38:	ldr	x10, [x10, #32]
   16a3c:	add	x9, x10, x9
   16a40:	cmp	x8, x9
   16a44:	b.ne	16a7c <gl_rbtree_list_check_invariants@@Base+0xcc>  // b.any
   16a48:	ldr	w8, [x21, #24]
   16a4c:	cmp	w8, #0x2
   16a50:	b.cs	16a7c <gl_rbtree_list_check_invariants@@Base+0xcc>  // b.hs, b.nlast
   16a54:	cbnz	x20, 16a5c <gl_rbtree_list_check_invariants@@Base+0xac>
   16a58:	cbnz	w8, 16a7c <gl_rbtree_list_check_invariants@@Base+0xcc>
   16a5c:	cmp	w19, w0
   16a60:	b.ne	16a7c <gl_rbtree_list_check_invariants@@Base+0xcc>  // b.any
   16a64:	cmp	w8, #0x0
   16a68:	cinc	w0, w19, eq  // eq = none
   16a6c:	ldp	x20, x19, [sp, #32]
   16a70:	ldr	x21, [sp, #16]
   16a74:	ldp	x29, x30, [sp], #48
   16a78:	ret
   16a7c:	bl	a980 <abort@plt>
   16a80:	stp	x29, x30, [sp, #-64]!
   16a84:	str	x23, [sp, #16]
   16a88:	mov	x23, x0
   16a8c:	mov	w0, #0x30                  	// #48
   16a90:	stp	x22, x21, [sp, #32]
   16a94:	stp	x20, x19, [sp, #48]
   16a98:	mov	x29, sp
   16a9c:	mov	w21, w4
   16aa0:	mov	x19, x3
   16aa4:	mov	x20, x2
   16aa8:	mov	x22, x1
   16aac:	bl	a660 <malloc@plt>
   16ab0:	cbz	x0, 16ac8 <gl_rbtree_list_check_invariants@@Base+0x118>
   16ab4:	and	w8, w21, #0x1
   16ab8:	stp	x23, x22, [x0]
   16abc:	stp	x20, x19, [x0, #16]
   16ac0:	strb	w8, [x0, #32]
   16ac4:	str	xzr, [x0, #40]
   16ac8:	ldp	x20, x19, [sp, #48]
   16acc:	ldp	x22, x21, [sp, #32]
   16ad0:	ldr	x23, [sp, #16]
   16ad4:	ldp	x29, x30, [sp], #64
   16ad8:	ret
   16adc:	stp	x29, x30, [sp, #-80]!
   16ae0:	stp	x26, x25, [sp, #16]
   16ae4:	mov	x26, x0
   16ae8:	mov	w0, #0x30                  	// #48
   16aec:	stp	x24, x23, [sp, #32]
   16af0:	stp	x22, x21, [sp, #48]
   16af4:	stp	x20, x19, [sp, #64]
   16af8:	mov	x29, sp
   16afc:	mov	x20, x6
   16b00:	mov	x21, x5
   16b04:	mov	w24, w4
   16b08:	mov	x22, x3
   16b0c:	mov	x23, x2
   16b10:	mov	x25, x1
   16b14:	bl	a660 <malloc@plt>
   16b18:	mov	x19, x0
   16b1c:	cbz	x0, 16b8c <gl_rbtree_list_check_invariants@@Base+0x1dc>
   16b20:	and	w8, w24, #0x1
   16b24:	stp	x26, x25, [x19]
   16b28:	stp	x23, x22, [x19, #16]
   16b2c:	strb	w8, [x19, #32]
   16b30:	cbz	x21, 16b58 <gl_rbtree_list_check_invariants@@Base+0x1a8>
   16b34:	add	x8, x21, #0x1
   16b38:	cmp	x8, #0x2
   16b3c:	b.cc	16b60 <gl_rbtree_list_check_invariants@@Base+0x1b0>  // b.lo, b.ul, b.last
   16b40:	mov	w0, wzr
   16b44:	cmp	x8, #0x3
   16b48:	lsr	x8, x8, #1
   16b4c:	add	w0, w0, #0x1
   16b50:	b.hi	16b44 <gl_rbtree_list_check_invariants@@Base+0x194>  // b.pmore
   16b54:	b	16b64 <gl_rbtree_list_check_invariants@@Base+0x1b4>
   16b58:	str	xzr, [x19, #40]
   16b5c:	b	16b8c <gl_rbtree_list_check_invariants@@Base+0x1dc>
   16b60:	mov	w0, wzr
   16b64:	mov	x1, x21
   16b68:	mov	x2, x20
   16b6c:	bl	17cac <gl_rbtree_list_check_invariants@@Base+0x12fc>
   16b70:	str	x0, [x19, #40]
   16b74:	cbz	x0, 16b80 <gl_rbtree_list_check_invariants@@Base+0x1d0>
   16b78:	str	xzr, [x0, #16]
   16b7c:	b	16b8c <gl_rbtree_list_check_invariants@@Base+0x1dc>
   16b80:	mov	x0, x19
   16b84:	bl	aaa0 <free@plt>
   16b88:	mov	x19, xzr
   16b8c:	mov	x0, x19
   16b90:	ldp	x20, x19, [sp, #64]
   16b94:	ldp	x22, x21, [sp, #48]
   16b98:	ldp	x24, x23, [sp, #32]
   16b9c:	ldp	x26, x25, [sp, #16]
   16ba0:	ldp	x29, x30, [sp], #80
   16ba4:	ret
   16ba8:	ldr	x8, [x0, #40]
   16bac:	cbz	x8, 16bb8 <gl_rbtree_list_check_invariants@@Base+0x208>
   16bb0:	ldr	x0, [x8, #32]
   16bb4:	ret
   16bb8:	mov	x0, xzr
   16bbc:	ret
   16bc0:	ldr	x0, [x1, #40]
   16bc4:	ret
   16bc8:	mov	w0, wzr
   16bcc:	str	x2, [x1, #40]
   16bd0:	ret
   16bd4:	ldr	x8, [x1, #8]
   16bd8:	cbz	x8, 16bec <gl_rbtree_list_check_invariants@@Base+0x23c>
   16bdc:	mov	x0, x8
   16be0:	ldr	x8, [x8]
   16be4:	cbnz	x8, 16bdc <gl_rbtree_list_check_invariants@@Base+0x22c>
   16be8:	b	16c04 <gl_rbtree_list_check_invariants@@Base+0x254>
   16bec:	ldr	x0, [x1, #16]
   16bf0:	cbz	x0, 16c04 <gl_rbtree_list_check_invariants@@Base+0x254>
   16bf4:	ldr	x8, [x0, #8]
   16bf8:	cmp	x8, x1
   16bfc:	mov	x1, x0
   16c00:	b.eq	16bec <gl_rbtree_list_check_invariants@@Base+0x23c>  // b.none
   16c04:	ret
   16c08:	ldr	x8, [x1]
   16c0c:	cbz	x8, 16c20 <gl_rbtree_list_check_invariants@@Base+0x270>
   16c10:	mov	x0, x8
   16c14:	ldr	x8, [x8, #8]
   16c18:	cbnz	x8, 16c10 <gl_rbtree_list_check_invariants@@Base+0x260>
   16c1c:	b	16c38 <gl_rbtree_list_check_invariants@@Base+0x288>
   16c20:	ldr	x0, [x1, #16]
   16c24:	cbz	x0, 16c38 <gl_rbtree_list_check_invariants@@Base+0x288>
   16c28:	ldr	x8, [x0]
   16c2c:	cmp	x8, x1
   16c30:	mov	x1, x0
   16c34:	b.eq	16c20 <gl_rbtree_list_check_invariants@@Base+0x270>  // b.none
   16c38:	ret
   16c3c:	stp	x29, x30, [sp, #-16]!
   16c40:	ldr	x8, [x0, #40]
   16c44:	mov	x29, sp
   16c48:	cbz	x8, 16c90 <gl_rbtree_list_check_invariants@@Base+0x2e0>
   16c4c:	ldr	x9, [x8, #32]
   16c50:	cmp	x9, x1
   16c54:	b.ls	16c90 <gl_rbtree_list_check_invariants@@Base+0x2e0>  // b.plast
   16c58:	mov	x9, x8
   16c5c:	ldr	x8, [x8]
   16c60:	cbz	x8, 16c74 <gl_rbtree_list_check_invariants@@Base+0x2c4>
   16c64:	ldr	x10, [x8, #32]
   16c68:	subs	x10, x1, x10
   16c6c:	b.cc	16c58 <gl_rbtree_list_check_invariants@@Base+0x2a8>  // b.lo, b.ul, b.last
   16c70:	mov	x1, x10
   16c74:	cbz	x1, 16c84 <gl_rbtree_list_check_invariants@@Base+0x2d4>
   16c78:	ldr	x8, [x9, #8]
   16c7c:	sub	x1, x1, #0x1
   16c80:	b	16c58 <gl_rbtree_list_check_invariants@@Base+0x2a8>
   16c84:	ldr	x0, [x9, #40]
   16c88:	ldp	x29, x30, [sp], #16
   16c8c:	ret
   16c90:	bl	a980 <abort@plt>
   16c94:	stp	x29, x30, [sp, #-16]!
   16c98:	ldr	x8, [x0, #40]
   16c9c:	mov	x29, sp
   16ca0:	cbz	x8, 16ce8 <gl_rbtree_list_check_invariants@@Base+0x338>
   16ca4:	ldr	x9, [x8, #32]
   16ca8:	cmp	x9, x1
   16cac:	b.ls	16ce8 <gl_rbtree_list_check_invariants@@Base+0x338>  // b.plast
   16cb0:	mov	x0, x8
   16cb4:	ldr	x8, [x8]
   16cb8:	cbz	x8, 16ccc <gl_rbtree_list_check_invariants@@Base+0x31c>
   16cbc:	ldr	x9, [x8, #32]
   16cc0:	subs	x9, x1, x9
   16cc4:	b.cc	16cb0 <gl_rbtree_list_check_invariants@@Base+0x300>  // b.lo, b.ul, b.last
   16cc8:	mov	x1, x9
   16ccc:	cbz	x1, 16cdc <gl_rbtree_list_check_invariants@@Base+0x32c>
   16cd0:	ldr	x8, [x0, #8]
   16cd4:	sub	x1, x1, #0x1
   16cd8:	b	16cb0 <gl_rbtree_list_check_invariants@@Base+0x300>
   16cdc:	str	x2, [x0, #40]
   16ce0:	ldp	x29, x30, [sp], #16
   16ce4:	ret
   16ce8:	bl	a980 <abort@plt>
   16cec:	stp	x29, x30, [sp, #-96]!
   16cf0:	stp	x28, x27, [sp, #16]
   16cf4:	stp	x26, x25, [sp, #32]
   16cf8:	stp	x24, x23, [sp, #48]
   16cfc:	stp	x22, x21, [sp, #64]
   16d00:	stp	x20, x19, [sp, #80]
   16d04:	mov	x29, sp
   16d08:	sub	sp, sp, #0x750
   16d0c:	cmp	x1, x2
   16d10:	b.hi	16ec0 <gl_rbtree_list_check_invariants@@Base+0x510>  // b.pmore
   16d14:	ldr	x8, [x0, #40]
   16d18:	mov	x19, x3
   16d1c:	mov	x20, x2
   16d20:	cbz	x8, 16d2c <gl_rbtree_list_check_invariants@@Base+0x37c>
   16d24:	ldr	x9, [x8, #32]
   16d28:	b	16d30 <gl_rbtree_list_check_invariants@@Base+0x380>
   16d2c:	mov	x9, xzr
   16d30:	cmp	x9, x20
   16d34:	b.cc	16ec0 <gl_rbtree_list_check_invariants@@Base+0x510>  // b.lo, b.ul, b.last
   16d38:	ldr	x22, [x0, #8]
   16d3c:	cbz	x1, 16e04 <gl_rbtree_list_check_invariants@@Base+0x454>
   16d40:	add	x9, sp, #0x8
   16d44:	mov	x23, xzr
   16d48:	mov	x24, xzr
   16d4c:	add	x25, x9, #0x8
   16d50:	sub	x26, x9, #0x8
   16d54:	cbz	x8, 16d7c <gl_rbtree_list_check_invariants@@Base+0x3cc>
   16d58:	add	x9, x25, x23, lsl #4
   16d5c:	ldr	x10, [x8, #32]
   16d60:	cmp	x10, x1
   16d64:	b.ls	16d7c <gl_rbtree_list_check_invariants@@Base+0x3cc>  // b.plast
   16d68:	stp	x8, xzr, [x9, #-8]
   16d6c:	ldr	x8, [x8]
   16d70:	add	x23, x23, #0x1
   16d74:	add	x9, x9, #0x10
   16d78:	cbnz	x8, 16d5c <gl_rbtree_list_check_invariants@@Base+0x3ac>
   16d7c:	cbz	x23, 16e98 <gl_rbtree_list_check_invariants@@Base+0x4e8>
   16d80:	add	x27, x26, x23, lsl #4
   16d84:	ldr	x8, [x27]
   16d88:	cbz	x8, 16da0 <gl_rbtree_list_check_invariants@@Base+0x3f0>
   16d8c:	sub	x23, x23, #0x1
   16d90:	add	x1, x8, x1
   16d94:	sub	x27, x27, #0x10
   16d98:	cbnz	x23, 16d84 <gl_rbtree_list_check_invariants@@Base+0x3d4>
   16d9c:	b	16e98 <gl_rbtree_list_check_invariants@@Base+0x4e8>
   16da0:	ldur	x21, [x27, #-8]
   16da4:	ldr	x8, [x21]
   16da8:	cbz	x8, 16db0 <gl_rbtree_list_check_invariants@@Base+0x400>
   16dac:	ldr	x8, [x8, #32]
   16db0:	add	x28, x8, #0x1
   16db4:	cmp	x1, x28
   16db8:	b.cs	16de4 <gl_rbtree_list_check_invariants@@Base+0x434>  // b.hs, b.nlast
   16dbc:	ldr	x1, [x21, #40]
   16dc0:	cbz	x22, 16dd8 <gl_rbtree_list_check_invariants@@Base+0x428>
   16dc4:	mov	x0, x19
   16dc8:	blr	x22
   16dcc:	mov	x1, x28
   16dd0:	tbz	w0, #0, 16de4 <gl_rbtree_list_check_invariants@@Base+0x434>
   16dd4:	b	16e9c <gl_rbtree_list_check_invariants@@Base+0x4ec>
   16dd8:	cmp	x1, x19
   16ddc:	mov	x1, x28
   16de0:	b.eq	16e9c <gl_rbtree_list_check_invariants@@Base+0x4ec>  // b.none
   16de4:	add	x24, x24, #0x1
   16de8:	cmp	x24, x20
   16dec:	b.cs	16e98 <gl_rbtree_list_check_invariants@@Base+0x4e8>  // b.hs, b.nlast
   16df0:	str	x28, [x27]
   16df4:	ldr	x8, [x21, #8]
   16df8:	sub	x1, x1, x28
   16dfc:	cbnz	x8, 16d58 <gl_rbtree_list_check_invariants@@Base+0x3a8>
   16e00:	b	16d7c <gl_rbtree_list_check_invariants@@Base+0x3cc>
   16e04:	add	x24, sp, #0x8
   16e08:	mov	x26, xzr
   16e0c:	mov	x23, xzr
   16e10:	add	x25, x24, #0x8
   16e14:	mov	w27, #0x1                   	// #1
   16e18:	cbz	x8, 16e34 <gl_rbtree_list_check_invariants@@Base+0x484>
   16e1c:	add	x9, x25, x26, lsl #4
   16e20:	stp	x8, xzr, [x9, #-8]
   16e24:	ldr	x8, [x8]
   16e28:	add	x26, x26, #0x1
   16e2c:	add	x9, x9, #0x10
   16e30:	cbnz	x8, 16e20 <gl_rbtree_list_check_invariants@@Base+0x470>
   16e34:	add	x9, x26, #0x1
   16e38:	add	x8, x24, x26, lsl #4
   16e3c:	mov	x26, x9
   16e40:	sub	x26, x26, #0x1
   16e44:	cbz	x26, 16e98 <gl_rbtree_list_check_invariants@@Base+0x4e8>
   16e48:	ldur	x9, [x8, #-8]
   16e4c:	sub	x28, x8, #0x10
   16e50:	mov	x8, x28
   16e54:	cbnz	x9, 16e40 <gl_rbtree_list_check_invariants@@Base+0x490>
   16e58:	ldr	x21, [x28]
   16e5c:	ldr	x1, [x21, #40]
   16e60:	cbz	x22, 16e74 <gl_rbtree_list_check_invariants@@Base+0x4c4>
   16e64:	mov	x0, x19
   16e68:	blr	x22
   16e6c:	tbz	w0, #0, 16e7c <gl_rbtree_list_check_invariants@@Base+0x4cc>
   16e70:	b	16e9c <gl_rbtree_list_check_invariants@@Base+0x4ec>
   16e74:	cmp	x1, x19
   16e78:	b.eq	16e9c <gl_rbtree_list_check_invariants@@Base+0x4ec>  // b.none
   16e7c:	add	x23, x23, #0x1
   16e80:	cmp	x23, x20
   16e84:	b.cs	16e98 <gl_rbtree_list_check_invariants@@Base+0x4e8>  // b.hs, b.nlast
   16e88:	str	x27, [x28, #8]
   16e8c:	ldr	x8, [x21, #8]
   16e90:	cbnz	x8, 16e1c <gl_rbtree_list_check_invariants@@Base+0x46c>
   16e94:	b	16e34 <gl_rbtree_list_check_invariants@@Base+0x484>
   16e98:	mov	x21, xzr
   16e9c:	mov	x0, x21
   16ea0:	add	sp, sp, #0x750
   16ea4:	ldp	x20, x19, [sp, #80]
   16ea8:	ldp	x22, x21, [sp, #64]
   16eac:	ldp	x24, x23, [sp, #48]
   16eb0:	ldp	x26, x25, [sp, #32]
   16eb4:	ldp	x28, x27, [sp, #16]
   16eb8:	ldp	x29, x30, [sp], #96
   16ebc:	ret
   16ec0:	bl	a980 <abort@plt>
   16ec4:	stp	x29, x30, [sp, #-96]!
   16ec8:	stp	x28, x27, [sp, #16]
   16ecc:	stp	x26, x25, [sp, #32]
   16ed0:	stp	x24, x23, [sp, #48]
   16ed4:	stp	x22, x21, [sp, #64]
   16ed8:	stp	x20, x19, [sp, #80]
   16edc:	mov	x29, sp
   16ee0:	sub	sp, sp, #0x750
   16ee4:	cmp	x1, x2
   16ee8:	b.hi	17098 <gl_rbtree_list_check_invariants@@Base+0x6e8>  // b.pmore
   16eec:	ldr	x8, [x0, #40]
   16ef0:	mov	x20, x3
   16ef4:	mov	x21, x2
   16ef8:	cbz	x8, 16f04 <gl_rbtree_list_check_invariants@@Base+0x554>
   16efc:	ldr	x9, [x8, #32]
   16f00:	b	16f08 <gl_rbtree_list_check_invariants@@Base+0x558>
   16f04:	mov	x9, xzr
   16f08:	cmp	x9, x21
   16f0c:	b.cc	17098 <gl_rbtree_list_check_invariants@@Base+0x6e8>  // b.lo, b.ul, b.last
   16f10:	ldr	x22, [x0, #8]
   16f14:	cbz	x1, 16fdc <gl_rbtree_list_check_invariants@@Base+0x62c>
   16f18:	add	x9, sp, #0x8
   16f1c:	mov	x23, xzr
   16f20:	mov	x19, xzr
   16f24:	add	x24, x9, #0x8
   16f28:	sub	x25, x9, #0x8
   16f2c:	cbz	x8, 16f54 <gl_rbtree_list_check_invariants@@Base+0x5a4>
   16f30:	add	x9, x24, x23, lsl #4
   16f34:	ldr	x10, [x8, #32]
   16f38:	cmp	x10, x1
   16f3c:	b.ls	16f54 <gl_rbtree_list_check_invariants@@Base+0x5a4>  // b.plast
   16f40:	stp	x8, xzr, [x9, #-8]
   16f44:	ldr	x8, [x8]
   16f48:	add	x23, x23, #0x1
   16f4c:	add	x9, x9, #0x10
   16f50:	cbnz	x8, 16f34 <gl_rbtree_list_check_invariants@@Base+0x584>
   16f54:	cbz	x23, 17070 <gl_rbtree_list_check_invariants@@Base+0x6c0>
   16f58:	add	x26, x25, x23, lsl #4
   16f5c:	ldr	x8, [x26]
   16f60:	cbz	x8, 16f78 <gl_rbtree_list_check_invariants@@Base+0x5c8>
   16f64:	sub	x23, x23, #0x1
   16f68:	add	x1, x8, x1
   16f6c:	sub	x26, x26, #0x10
   16f70:	cbnz	x23, 16f5c <gl_rbtree_list_check_invariants@@Base+0x5ac>
   16f74:	b	17070 <gl_rbtree_list_check_invariants@@Base+0x6c0>
   16f78:	ldur	x27, [x26, #-8]
   16f7c:	ldr	x8, [x27]
   16f80:	cbz	x8, 16f88 <gl_rbtree_list_check_invariants@@Base+0x5d8>
   16f84:	ldr	x8, [x8, #32]
   16f88:	add	x28, x8, #0x1
   16f8c:	cmp	x1, x28
   16f90:	b.cs	16fbc <gl_rbtree_list_check_invariants@@Base+0x60c>  // b.hs, b.nlast
   16f94:	ldr	x1, [x27, #40]
   16f98:	cbz	x22, 16fb0 <gl_rbtree_list_check_invariants@@Base+0x600>
   16f9c:	mov	x0, x20
   16fa0:	blr	x22
   16fa4:	mov	x1, x28
   16fa8:	tbz	w0, #0, 16fbc <gl_rbtree_list_check_invariants@@Base+0x60c>
   16fac:	b	17074 <gl_rbtree_list_check_invariants@@Base+0x6c4>
   16fb0:	cmp	x1, x20
   16fb4:	mov	x1, x28
   16fb8:	b.eq	17074 <gl_rbtree_list_check_invariants@@Base+0x6c4>  // b.none
   16fbc:	add	x19, x19, #0x1
   16fc0:	cmp	x19, x21
   16fc4:	b.cs	17070 <gl_rbtree_list_check_invariants@@Base+0x6c0>  // b.hs, b.nlast
   16fc8:	str	x28, [x26]
   16fcc:	ldr	x8, [x27, #8]
   16fd0:	sub	x1, x1, x28
   16fd4:	cbnz	x8, 16f30 <gl_rbtree_list_check_invariants@@Base+0x580>
   16fd8:	b	16f54 <gl_rbtree_list_check_invariants@@Base+0x5a4>
   16fdc:	add	x23, sp, #0x8
   16fe0:	mov	x25, xzr
   16fe4:	mov	x19, xzr
   16fe8:	add	x24, x23, #0x8
   16fec:	mov	w26, #0x1                   	// #1
   16ff0:	cbz	x8, 1700c <gl_rbtree_list_check_invariants@@Base+0x65c>
   16ff4:	add	x9, x24, x25, lsl #4
   16ff8:	stp	x8, xzr, [x9, #-8]
   16ffc:	ldr	x8, [x8]
   17000:	add	x25, x25, #0x1
   17004:	add	x9, x9, #0x10
   17008:	cbnz	x8, 16ff8 <gl_rbtree_list_check_invariants@@Base+0x648>
   1700c:	add	x9, x25, #0x1
   17010:	add	x8, x23, x25, lsl #4
   17014:	mov	x25, x9
   17018:	sub	x25, x25, #0x1
   1701c:	cbz	x25, 17070 <gl_rbtree_list_check_invariants@@Base+0x6c0>
   17020:	ldur	x9, [x8, #-8]
   17024:	sub	x27, x8, #0x10
   17028:	mov	x8, x27
   1702c:	cbnz	x9, 17018 <gl_rbtree_list_check_invariants@@Base+0x668>
   17030:	ldr	x28, [x27]
   17034:	ldr	x1, [x28, #40]
   17038:	cbz	x22, 1704c <gl_rbtree_list_check_invariants@@Base+0x69c>
   1703c:	mov	x0, x20
   17040:	blr	x22
   17044:	tbz	w0, #0, 17054 <gl_rbtree_list_check_invariants@@Base+0x6a4>
   17048:	b	17074 <gl_rbtree_list_check_invariants@@Base+0x6c4>
   1704c:	cmp	x1, x20
   17050:	b.eq	17074 <gl_rbtree_list_check_invariants@@Base+0x6c4>  // b.none
   17054:	add	x19, x19, #0x1
   17058:	cmp	x19, x21
   1705c:	b.cs	17070 <gl_rbtree_list_check_invariants@@Base+0x6c0>  // b.hs, b.nlast
   17060:	str	x26, [x27, #8]
   17064:	ldr	x8, [x28, #8]
   17068:	cbnz	x8, 16ff4 <gl_rbtree_list_check_invariants@@Base+0x644>
   1706c:	b	1700c <gl_rbtree_list_check_invariants@@Base+0x65c>
   17070:	mov	x19, #0xffffffffffffffff    	// #-1
   17074:	mov	x0, x19
   17078:	add	sp, sp, #0x750
   1707c:	ldp	x20, x19, [sp, #80]
   17080:	ldp	x22, x21, [sp, #64]
   17084:	ldp	x24, x23, [sp, #48]
   17088:	ldp	x26, x25, [sp, #32]
   1708c:	ldp	x28, x27, [sp, #16]
   17090:	ldp	x29, x30, [sp], #96
   17094:	ret
   17098:	bl	a980 <abort@plt>
   1709c:	stp	x29, x30, [sp, #-48]!
   170a0:	stp	x20, x19, [sp, #32]
   170a4:	mov	x20, x0
   170a8:	mov	w0, #0x30                  	// #48
   170ac:	str	x21, [sp, #16]
   170b0:	mov	x29, sp
   170b4:	mov	x21, x1
   170b8:	bl	a660 <malloc@plt>
   170bc:	mov	x19, x0
   170c0:	cbz	x0, 17120 <gl_rbtree_list_check_invariants@@Base+0x770>
   170c4:	mov	w8, #0x1                   	// #1
   170c8:	stp	xzr, xzr, [x19]
   170cc:	stp	x8, x21, [x19, #32]
   170d0:	ldr	x8, [x20, #40]
   170d4:	cbz	x8, 17114 <gl_rbtree_list_check_invariants@@Base+0x764>
   170d8:	mov	x2, x8
   170dc:	ldr	x8, [x8]
   170e0:	cbnz	x8, 170d8 <gl_rbtree_list_check_invariants@@Base+0x728>
   170e4:	mov	x8, x2
   170e8:	str	x19, [x2]
   170ec:	str	x2, [x19, #16]
   170f0:	ldr	x9, [x8, #32]
   170f4:	add	x9, x9, #0x1
   170f8:	str	x9, [x8, #32]
   170fc:	ldr	x8, [x8, #16]
   17100:	cbnz	x8, 170f0 <gl_rbtree_list_check_invariants@@Base+0x740>
   17104:	mov	x0, x20
   17108:	mov	x1, x19
   1710c:	bl	17dbc <gl_rbtree_list_check_invariants@@Base+0x140c>
   17110:	b	17120 <gl_rbtree_list_check_invariants@@Base+0x770>
   17114:	str	wzr, [x19, #24]
   17118:	str	x19, [x20, #40]
   1711c:	str	xzr, [x19, #16]
   17120:	mov	x0, x19
   17124:	ldp	x20, x19, [sp, #32]
   17128:	ldr	x21, [sp, #16]
   1712c:	ldp	x29, x30, [sp], #48
   17130:	ret
   17134:	stp	x29, x30, [sp, #-48]!
   17138:	stp	x20, x19, [sp, #32]
   1713c:	mov	x20, x0
   17140:	mov	w0, #0x30                  	// #48
   17144:	str	x21, [sp, #16]
   17148:	mov	x29, sp
   1714c:	mov	x21, x1
   17150:	bl	a660 <malloc@plt>
   17154:	mov	x19, x0
   17158:	cbz	x0, 171b8 <gl_rbtree_list_check_invariants@@Base+0x808>
   1715c:	mov	w8, #0x1                   	// #1
   17160:	stp	xzr, xzr, [x19]
   17164:	stp	x8, x21, [x19, #32]
   17168:	ldr	x8, [x20, #40]
   1716c:	cbz	x8, 171ac <gl_rbtree_list_check_invariants@@Base+0x7fc>
   17170:	mov	x2, x8
   17174:	ldr	x8, [x8, #8]
   17178:	cbnz	x8, 17170 <gl_rbtree_list_check_invariants@@Base+0x7c0>
   1717c:	mov	x8, x2
   17180:	str	x19, [x2, #8]
   17184:	str	x2, [x19, #16]
   17188:	ldr	x9, [x8, #32]
   1718c:	add	x9, x9, #0x1
   17190:	str	x9, [x8, #32]
   17194:	ldr	x8, [x8, #16]
   17198:	cbnz	x8, 17188 <gl_rbtree_list_check_invariants@@Base+0x7d8>
   1719c:	mov	x0, x20
   171a0:	mov	x1, x19
   171a4:	bl	17dbc <gl_rbtree_list_check_invariants@@Base+0x140c>
   171a8:	b	171b8 <gl_rbtree_list_check_invariants@@Base+0x808>
   171ac:	str	wzr, [x19, #24]
   171b0:	str	x19, [x20, #40]
   171b4:	str	xzr, [x19, #16]
   171b8:	mov	x0, x19
   171bc:	ldp	x20, x19, [sp, #32]
   171c0:	ldr	x21, [sp, #16]
   171c4:	ldp	x29, x30, [sp], #48
   171c8:	ret
   171cc:	stp	x29, x30, [sp, #-48]!
   171d0:	stp	x20, x19, [sp, #32]
   171d4:	mov	x20, x0
   171d8:	mov	w0, #0x30                  	// #48
   171dc:	stp	x22, x21, [sp, #16]
   171e0:	mov	x29, sp
   171e4:	mov	x22, x2
   171e8:	mov	x21, x1
   171ec:	bl	a660 <malloc@plt>
   171f0:	mov	x19, x0
   171f4:	cbz	x0, 17254 <gl_rbtree_list_check_invariants@@Base+0x8a4>
   171f8:	mov	w8, #0x1                   	// #1
   171fc:	stp	xzr, xzr, [x19]
   17200:	stp	x8, x22, [x19, #32]
   17204:	ldr	x8, [x21]
   17208:	cbz	x8, 17220 <gl_rbtree_list_check_invariants@@Base+0x870>
   1720c:	mov	x21, x8
   17210:	ldr	x8, [x8, #8]
   17214:	cbnz	x8, 1720c <gl_rbtree_list_check_invariants@@Base+0x85c>
   17218:	add	x8, x21, #0x8
   1721c:	b	17224 <gl_rbtree_list_check_invariants@@Base+0x874>
   17220:	mov	x8, x21
   17224:	str	x19, [x8]
   17228:	mov	x8, x21
   1722c:	str	x21, [x19, #16]
   17230:	ldr	x9, [x8, #32]
   17234:	add	x9, x9, #0x1
   17238:	str	x9, [x8, #32]
   1723c:	ldr	x8, [x8, #16]
   17240:	cbnz	x8, 17230 <gl_rbtree_list_check_invariants@@Base+0x880>
   17244:	mov	x0, x20
   17248:	mov	x1, x19
   1724c:	mov	x2, x21
   17250:	bl	17dbc <gl_rbtree_list_check_invariants@@Base+0x140c>
   17254:	mov	x0, x19
   17258:	ldp	x20, x19, [sp, #32]
   1725c:	ldp	x22, x21, [sp, #16]
   17260:	ldp	x29, x30, [sp], #48
   17264:	ret
   17268:	stp	x29, x30, [sp, #-48]!
   1726c:	stp	x20, x19, [sp, #32]
   17270:	mov	x20, x0
   17274:	mov	w0, #0x30                  	// #48
   17278:	stp	x22, x21, [sp, #16]
   1727c:	mov	x29, sp
   17280:	mov	x22, x2
   17284:	mov	x21, x1
   17288:	bl	a660 <malloc@plt>
   1728c:	mov	x19, x0
   17290:	cbz	x0, 172ec <gl_rbtree_list_check_invariants@@Base+0x93c>
   17294:	mov	w8, #0x1                   	// #1
   17298:	stp	xzr, xzr, [x19]
   1729c:	stp	x8, x22, [x19, #32]
   172a0:	mov	x8, x21
   172a4:	ldr	x9, [x8, #8]!
   172a8:	cbz	x9, 172bc <gl_rbtree_list_check_invariants@@Base+0x90c>
   172ac:	mov	x21, x9
   172b0:	ldr	x9, [x9]
   172b4:	cbnz	x9, 172ac <gl_rbtree_list_check_invariants@@Base+0x8fc>
   172b8:	mov	x8, x21
   172bc:	str	x19, [x8]
   172c0:	mov	x8, x21
   172c4:	str	x21, [x19, #16]
   172c8:	ldr	x9, [x8, #32]
   172cc:	add	x9, x9, #0x1
   172d0:	str	x9, [x8, #32]
   172d4:	ldr	x8, [x8, #16]
   172d8:	cbnz	x8, 172c8 <gl_rbtree_list_check_invariants@@Base+0x918>
   172dc:	mov	x0, x20
   172e0:	mov	x1, x19
   172e4:	mov	x2, x21
   172e8:	bl	17dbc <gl_rbtree_list_check_invariants@@Base+0x140c>
   172ec:	mov	x0, x19
   172f0:	ldp	x20, x19, [sp, #32]
   172f4:	ldp	x22, x21, [sp, #16]
   172f8:	ldp	x29, x30, [sp], #48
   172fc:	ret
   17300:	stp	x29, x30, [sp, #-16]!
   17304:	ldr	x9, [x0, #40]
   17308:	mov	x29, sp
   1730c:	cbz	x9, 17318 <gl_rbtree_list_check_invariants@@Base+0x968>
   17310:	ldr	x8, [x9, #32]
   17314:	b	1731c <gl_rbtree_list_check_invariants@@Base+0x96c>
   17318:	mov	x8, xzr
   1731c:	cmp	x8, x1
   17320:	b.cc	1736c <gl_rbtree_list_check_invariants@@Base+0x9bc>  // b.lo, b.ul, b.last
   17324:	b.ne	17334 <gl_rbtree_list_check_invariants@@Base+0x984>  // b.any
   17328:	mov	x1, x2
   1732c:	ldp	x29, x30, [sp], #16
   17330:	b	17134 <gl_rbtree_list_check_invariants@@Base+0x784>
   17334:	mov	x8, x9
   17338:	ldr	x9, [x9]
   1733c:	cbz	x9, 17350 <gl_rbtree_list_check_invariants@@Base+0x9a0>
   17340:	ldr	x10, [x9, #32]
   17344:	subs	x10, x1, x10
   17348:	b.cc	17334 <gl_rbtree_list_check_invariants@@Base+0x984>  // b.lo, b.ul, b.last
   1734c:	mov	x1, x10
   17350:	cbz	x1, 17360 <gl_rbtree_list_check_invariants@@Base+0x9b0>
   17354:	ldr	x9, [x8, #8]
   17358:	sub	x1, x1, #0x1
   1735c:	b	17334 <gl_rbtree_list_check_invariants@@Base+0x984>
   17360:	mov	x1, x8
   17364:	ldp	x29, x30, [sp], #16
   17368:	b	171cc <gl_rbtree_list_check_invariants@@Base+0x81c>
   1736c:	bl	a980 <abort@plt>
   17370:	stp	x29, x30, [sp, #-32]!
   17374:	stp	x20, x19, [sp, #16]
   17378:	ldp	x8, x2, [x1, #8]
   1737c:	ldr	x10, [x1]
   17380:	mov	x19, x1
   17384:	mov	x20, x0
   17388:	mov	x29, sp
   1738c:	cbz	x10, 173c8 <gl_rbtree_list_check_invariants@@Base+0xa18>
   17390:	cbz	x8, 17418 <gl_rbtree_list_check_invariants@@Base+0xa68>
   17394:	mov	x9, x10
   17398:	mov	x8, x9
   1739c:	ldr	x9, [x9, #8]
   173a0:	cbnz	x9, 17398 <gl_rbtree_list_check_invariants@@Base+0x9e8>
   173a4:	ldr	x9, [x8, #16]
   173a8:	ldr	x1, [x8]
   173ac:	ldr	w11, [x8, #24]
   173b0:	cmp	x9, x19
   173b4:	b.eq	1744c <gl_rbtree_list_check_invariants@@Base+0xa9c>  // b.none
   173b8:	cbz	x1, 173c0 <gl_rbtree_list_check_invariants@@Base+0xa10>
   173bc:	str	x9, [x1, #16]
   173c0:	str	x1, [x9, #8]
   173c4:	b	17450 <gl_rbtree_list_check_invariants@@Base+0xaa0>
   173c8:	cbz	x8, 173d4 <gl_rbtree_list_check_invariants@@Base+0xa24>
   173cc:	str	x2, [x8, #16]
   173d0:	str	wzr, [x8, #24]
   173d4:	cbz	x2, 174d4 <gl_rbtree_list_check_invariants@@Base+0xb24>
   173d8:	ldr	x9, [x2]
   173dc:	cmp	x9, x19
   173e0:	cset	w9, ne  // ne = any
   173e4:	str	x8, [x2, w9, uxtw #3]
   173e8:	mov	x9, x2
   173ec:	ldr	x10, [x9, #32]
   173f0:	sub	x10, x10, #0x1
   173f4:	str	x10, [x9, #32]
   173f8:	ldr	x9, [x9, #16]
   173fc:	cbnz	x9, 173ec <gl_rbtree_list_check_invariants@@Base+0xa3c>
   17400:	cbnz	x8, 174f4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   17404:	ldr	w8, [x19, #24]
   17408:	cbnz	w8, 174f4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   1740c:	mov	x0, x20
   17410:	mov	x1, xzr
   17414:	b	174e8 <gl_rbtree_list_check_invariants@@Base+0xb38>
   17418:	str	x2, [x10, #16]
   1741c:	str	wzr, [x10, #24]
   17420:	cbz	x2, 174f0 <gl_rbtree_list_check_invariants@@Base+0xb40>
   17424:	ldr	x8, [x2]
   17428:	cmp	x8, x19
   1742c:	cset	w8, ne  // ne = any
   17430:	str	x10, [x2, w8, uxtw #3]
   17434:	ldr	x8, [x2, #32]
   17438:	sub	x8, x8, #0x1
   1743c:	str	x8, [x2, #32]
   17440:	ldr	x2, [x2, #16]
   17444:	cbnz	x2, 17434 <gl_rbtree_list_check_invariants@@Base+0xa84>
   17448:	b	174f4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   1744c:	cbz	x19, 17478 <gl_rbtree_list_check_invariants@@Base+0xac8>
   17450:	mov	x12, x9
   17454:	ldr	x13, [x12, #32]
   17458:	sub	x13, x13, #0x1
   1745c:	str	x13, [x12, #32]
   17460:	ldr	x12, [x12, #16]
   17464:	cbnz	x12, 17454 <gl_rbtree_list_check_invariants@@Base+0xaa4>
   17468:	cmp	x9, x19
   1746c:	b.eq	17478 <gl_rbtree_list_check_invariants@@Base+0xac8>  // b.none
   17470:	str	x10, [x8]
   17474:	str	x8, [x10, #16]
   17478:	ldr	x10, [x19, #8]
   1747c:	str	x10, [x8, #8]
   17480:	str	x8, [x10, #16]
   17484:	ldr	w10, [x19, #24]
   17488:	str	w10, [x8, #24]
   1748c:	ldr	x10, [x19, #32]
   17490:	str	x2, [x8, #16]
   17494:	str	x10, [x8, #32]
   17498:	cbz	x2, 174b0 <gl_rbtree_list_check_invariants@@Base+0xb00>
   1749c:	mov	x10, x2
   174a0:	ldr	x12, [x10], #8
   174a4:	cmp	x12, x19
   174a8:	csel	x10, x2, x10, eq  // eq = none
   174ac:	b	174b4 <gl_rbtree_list_check_invariants@@Base+0xb04>
   174b0:	add	x10, x20, #0x28
   174b4:	str	x8, [x10]
   174b8:	cbnz	w11, 174f4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   174bc:	cbz	x1, 174dc <gl_rbtree_list_check_invariants@@Base+0xb2c>
   174c0:	ldr	w10, [x1, #24]
   174c4:	cmp	w10, #0x1
   174c8:	b.ne	174dc <gl_rbtree_list_check_invariants@@Base+0xb2c>  // b.any
   174cc:	str	wzr, [x1, #24]
   174d0:	b	174f4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   174d4:	str	x8, [x20, #40]
   174d8:	b	174f4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   174dc:	cmp	x9, x19
   174e0:	csel	x2, x9, x8, ne  // ne = any
   174e4:	mov	x0, x20
   174e8:	bl	17fd8 <gl_rbtree_list_check_invariants@@Base+0x1628>
   174ec:	b	174f4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   174f0:	str	x10, [x20, #40]
   174f4:	ldr	x8, [x20, #24]
   174f8:	cbz	x8, 17504 <gl_rbtree_list_check_invariants@@Base+0xb54>
   174fc:	ldr	x0, [x19, #40]
   17500:	blr	x8
   17504:	mov	x0, x19
   17508:	bl	aaa0 <free@plt>
   1750c:	ldp	x20, x19, [sp, #16]
   17510:	mov	w0, #0x1                   	// #1
   17514:	ldp	x29, x30, [sp], #32
   17518:	ret
   1751c:	stp	x29, x30, [sp, #-16]!
   17520:	ldr	x9, [x0, #40]
   17524:	mov	x29, sp
   17528:	cbz	x9, 17578 <gl_rbtree_list_check_invariants@@Base+0xbc8>
   1752c:	ldr	x8, [x9, #32]
   17530:	cmp	x8, x1
   17534:	b.ls	17578 <gl_rbtree_list_check_invariants@@Base+0xbc8>  // b.plast
   17538:	mov	x8, x9
   1753c:	ldr	x9, [x9]
   17540:	cbz	x9, 17554 <gl_rbtree_list_check_invariants@@Base+0xba4>
   17544:	ldr	x10, [x9, #32]
   17548:	subs	x10, x1, x10
   1754c:	b.cc	17538 <gl_rbtree_list_check_invariants@@Base+0xb88>  // b.lo, b.ul, b.last
   17550:	mov	x1, x10
   17554:	cbz	x1, 17564 <gl_rbtree_list_check_invariants@@Base+0xbb4>
   17558:	ldr	x9, [x8, #8]
   1755c:	sub	x1, x1, #0x1
   17560:	b	17538 <gl_rbtree_list_check_invariants@@Base+0xb88>
   17564:	mov	x1, x8
   17568:	bl	17370 <gl_rbtree_list_check_invariants@@Base+0x9c0>
   1756c:	mov	w0, #0x1                   	// #1
   17570:	ldp	x29, x30, [sp], #16
   17574:	ret
   17578:	bl	a980 <abort@plt>
   1757c:	stp	x29, x30, [sp, #-32]!
   17580:	ldr	x8, [x0, #40]
   17584:	str	x19, [sp, #16]
   17588:	mov	x29, sp
   1758c:	cbz	x8, 175bc <gl_rbtree_list_check_invariants@@Base+0xc0c>
   17590:	ldr	x2, [x8, #32]
   17594:	mov	x3, x1
   17598:	mov	x1, xzr
   1759c:	mov	x19, x0
   175a0:	bl	16cec <gl_rbtree_list_check_invariants@@Base+0x33c>
   175a4:	cbz	x0, 175c0 <gl_rbtree_list_check_invariants@@Base+0xc10>
   175a8:	mov	x1, x0
   175ac:	mov	x0, x19
   175b0:	bl	17370 <gl_rbtree_list_check_invariants@@Base+0x9c0>
   175b4:	mov	w0, #0x1                   	// #1
   175b8:	b	175c0 <gl_rbtree_list_check_invariants@@Base+0xc10>
   175bc:	mov	w0, wzr
   175c0:	ldr	x19, [sp, #16]
   175c4:	ldp	x29, x30, [sp], #32
   175c8:	ret
   175cc:	stp	x29, x30, [sp, #-80]!
   175d0:	stp	x28, x25, [sp, #16]
   175d4:	stp	x24, x23, [sp, #32]
   175d8:	stp	x22, x21, [sp, #48]
   175dc:	stp	x20, x19, [sp, #64]
   175e0:	mov	x29, sp
   175e4:	sub	sp, sp, #0x740
   175e8:	ldr	x8, [x0, #40]
   175ec:	mov	x9, sp
   175f0:	mov	x19, x0
   175f4:	mov	x21, xzr
   175f8:	add	x22, x9, #0x8
   175fc:	sub	x23, x9, #0x8
   17600:	mov	w24, #0x1                   	// #1
   17604:	cbz	x8, 17620 <gl_rbtree_list_check_invariants@@Base+0xc70>
   17608:	add	x9, x22, x21, lsl #4
   1760c:	stp	x8, xzr, [x9, #-8]
   17610:	ldr	x8, [x8]
   17614:	add	x21, x21, #0x1
   17618:	add	x9, x9, #0x10
   1761c:	cbnz	x8, 1760c <gl_rbtree_list_check_invariants@@Base+0xc5c>
   17620:	cbz	x21, 17668 <gl_rbtree_list_check_invariants@@Base+0xcb8>
   17624:	add	x25, x23, x21, lsl #4
   17628:	ldp	x20, x8, [x25, #-8]
   1762c:	cbz	x8, 17658 <gl_rbtree_list_check_invariants@@Base+0xca8>
   17630:	ldr	x8, [x19, #24]
   17634:	sub	x21, x21, #0x1
   17638:	cbz	x8, 17644 <gl_rbtree_list_check_invariants@@Base+0xc94>
   1763c:	ldr	x0, [x20, #40]
   17640:	blr	x8
   17644:	mov	x0, x20
   17648:	bl	aaa0 <free@plt>
   1764c:	sub	x25, x25, #0x10
   17650:	cbnz	x21, 17628 <gl_rbtree_list_check_invariants@@Base+0xc78>
   17654:	b	17668 <gl_rbtree_list_check_invariants@@Base+0xcb8>
   17658:	str	x24, [x25]
   1765c:	ldr	x8, [x20, #8]
   17660:	cbnz	x8, 17608 <gl_rbtree_list_check_invariants@@Base+0xc58>
   17664:	b	17620 <gl_rbtree_list_check_invariants@@Base+0xc70>
   17668:	mov	x0, x19
   1766c:	add	sp, sp, #0x740
   17670:	ldp	x20, x19, [sp, #64]
   17674:	ldp	x22, x21, [sp, #48]
   17678:	ldp	x24, x23, [sp, #32]
   1767c:	ldp	x28, x25, [sp, #16]
   17680:	ldp	x29, x30, [sp], #80
   17684:	b	aaa0 <free@plt>
   17688:	ldr	x9, [x0]
   1768c:	stp	x9, x0, [x8]
   17690:	ldr	x9, [x0, #40]
   17694:	cbz	x9, 176a8 <gl_rbtree_list_check_invariants@@Base+0xcf8>
   17698:	mov	x10, x9
   1769c:	ldr	x9, [x9]
   176a0:	cbnz	x9, 17698 <gl_rbtree_list_check_invariants@@Base+0xce8>
   176a4:	b	176ac <gl_rbtree_list_check_invariants@@Base+0xcfc>
   176a8:	mov	x10, xzr
   176ac:	stp	x10, xzr, [x8, #24]
   176b0:	ret
   176b4:	stp	x29, x30, [sp, #-16]!
   176b8:	ldr	x9, [x0, #40]
   176bc:	mov	x29, sp
   176c0:	cbz	x9, 176cc <gl_rbtree_list_check_invariants@@Base+0xd1c>
   176c4:	ldr	x10, [x9, #32]
   176c8:	b	176d0 <gl_rbtree_list_check_invariants@@Base+0xd20>
   176cc:	mov	x10, xzr
   176d0:	cmp	x1, x2
   176d4:	b.hi	1776c <gl_rbtree_list_check_invariants@@Base+0xdbc>  // b.pmore
   176d8:	cmp	x10, x2
   176dc:	b.cc	1776c <gl_rbtree_list_check_invariants@@Base+0xdbc>  // b.lo, b.ul, b.last
   176e0:	ldr	x11, [x0]
   176e4:	cmp	x10, x1
   176e8:	stp	x11, x0, [x8]
   176ec:	b.ls	17720 <gl_rbtree_list_check_invariants@@Base+0xd70>  // b.plast
   176f0:	mov	x12, x9
   176f4:	mov	x11, x12
   176f8:	ldr	x12, [x12]
   176fc:	cbz	x12, 17710 <gl_rbtree_list_check_invariants@@Base+0xd60>
   17700:	ldr	x13, [x12, #32]
   17704:	subs	x13, x1, x13
   17708:	b.cc	176f4 <gl_rbtree_list_check_invariants@@Base+0xd44>  // b.lo, b.ul, b.last
   1770c:	mov	x1, x13
   17710:	cbz	x1, 17724 <gl_rbtree_list_check_invariants@@Base+0xd74>
   17714:	ldr	x12, [x11, #8]
   17718:	sub	x1, x1, #0x1
   1771c:	b	176f4 <gl_rbtree_list_check_invariants@@Base+0xd44>
   17720:	mov	x11, xzr
   17724:	cmp	x10, x2
   17728:	str	x11, [x8, #24]
   1772c:	b.ls	1775c <gl_rbtree_list_check_invariants@@Base+0xdac>  // b.plast
   17730:	mov	x10, x9
   17734:	ldr	x9, [x9]
   17738:	cbz	x9, 1774c <gl_rbtree_list_check_invariants@@Base+0xd9c>
   1773c:	ldr	x11, [x9, #32]
   17740:	subs	x11, x2, x11
   17744:	b.cc	17730 <gl_rbtree_list_check_invariants@@Base+0xd80>  // b.lo, b.ul, b.last
   17748:	mov	x2, x11
   1774c:	cbz	x2, 17760 <gl_rbtree_list_check_invariants@@Base+0xdb0>
   17750:	ldr	x9, [x10, #8]
   17754:	sub	x2, x2, #0x1
   17758:	b	17730 <gl_rbtree_list_check_invariants@@Base+0xd80>
   1775c:	mov	x10, xzr
   17760:	str	x10, [x8, #32]
   17764:	ldp	x29, x30, [sp], #16
   17768:	ret
   1776c:	bl	a980 <abort@plt>
   17770:	ldp	x8, x9, [x0, #24]
   17774:	cmp	x8, x9
   17778:	b.eq	177c8 <gl_rbtree_list_check_invariants@@Base+0xe18>  // b.none
   1777c:	ldr	x9, [x8, #40]
   17780:	str	x9, [x1]
   17784:	cbz	x2, 1778c <gl_rbtree_list_check_invariants@@Base+0xddc>
   17788:	str	x8, [x2]
   1778c:	ldr	x10, [x8, #8]
   17790:	cbz	x10, 177a4 <gl_rbtree_list_check_invariants@@Base+0xdf4>
   17794:	mov	x9, x10
   17798:	ldr	x10, [x10]
   1779c:	cbnz	x10, 17794 <gl_rbtree_list_check_invariants@@Base+0xde4>
   177a0:	b	177bc <gl_rbtree_list_check_invariants@@Base+0xe0c>
   177a4:	ldr	x9, [x8, #16]
   177a8:	cbz	x9, 177bc <gl_rbtree_list_check_invariants@@Base+0xe0c>
   177ac:	ldr	x10, [x9, #8]
   177b0:	cmp	x10, x8
   177b4:	mov	x8, x9
   177b8:	b.eq	177a4 <gl_rbtree_list_check_invariants@@Base+0xdf4>  // b.none
   177bc:	str	x9, [x0, #24]
   177c0:	mov	w0, #0x1                   	// #1
   177c4:	ret
   177c8:	mov	w0, wzr
   177cc:	ret
   177d0:	ret
   177d4:	stp	x29, x30, [sp, #-48]!
   177d8:	stp	x22, x21, [sp, #16]
   177dc:	stp	x20, x19, [sp, #32]
   177e0:	ldr	x20, [x0, #40]
   177e4:	mov	x29, sp
   177e8:	cbz	x20, 1784c <gl_rbtree_list_check_invariants@@Base+0xe9c>
   177ec:	mov	x19, x2
   177f0:	mov	x21, x1
   177f4:	ldr	x0, [x20, #40]
   177f8:	mov	x1, x19
   177fc:	blr	x21
   17800:	tbnz	w0, #31, 1780c <gl_rbtree_list_check_invariants@@Base+0xe5c>
   17804:	cbnz	w0, 17810 <gl_rbtree_list_check_invariants@@Base+0xe60>
   17808:	b	1781c <gl_rbtree_list_check_invariants@@Base+0xe6c>
   1780c:	add	x20, x20, #0x8
   17810:	ldr	x20, [x20]
   17814:	cbnz	x20, 177f4 <gl_rbtree_list_check_invariants@@Base+0xe44>
   17818:	b	1784c <gl_rbtree_list_check_invariants@@Base+0xe9c>
   1781c:	ldr	x22, [x20]
   17820:	cbz	x22, 1784c <gl_rbtree_list_check_invariants@@Base+0xe9c>
   17824:	ldr	x0, [x22, #40]
   17828:	mov	x1, x19
   1782c:	blr	x21
   17830:	tbnz	w0, #31, 17840 <gl_rbtree_list_check_invariants@@Base+0xe90>
   17834:	cbnz	w0, 17860 <gl_rbtree_list_check_invariants@@Base+0xeb0>
   17838:	mov	x20, x22
   1783c:	b	17844 <gl_rbtree_list_check_invariants@@Base+0xe94>
   17840:	add	x22, x22, #0x8
   17844:	ldr	x22, [x22]
   17848:	cbnz	x22, 17824 <gl_rbtree_list_check_invariants@@Base+0xe74>
   1784c:	mov	x0, x20
   17850:	ldp	x20, x19, [sp, #32]
   17854:	ldp	x22, x21, [sp, #16]
   17858:	ldp	x29, x30, [sp], #48
   1785c:	ret
   17860:	bl	a980 <abort@plt>
   17864:	stp	x29, x30, [sp, #-64]!
   17868:	cmp	x2, x3
   1786c:	stp	x24, x23, [sp, #16]
   17870:	stp	x22, x21, [sp, #32]
   17874:	stp	x20, x19, [sp, #48]
   17878:	mov	x29, sp
   1787c:	b.hi	17990 <gl_rbtree_list_check_invariants@@Base+0xfe0>  // b.pmore
   17880:	ldr	x22, [x0, #40]
   17884:	mov	x19, x4
   17888:	mov	x23, x3
   1788c:	mov	x21, x2
   17890:	mov	x20, x1
   17894:	cbz	x22, 178a0 <gl_rbtree_list_check_invariants@@Base+0xef0>
   17898:	ldr	x8, [x22, #32]
   1789c:	b	178a4 <gl_rbtree_list_check_invariants@@Base+0xef4>
   178a0:	mov	x8, xzr
   178a4:	cmp	x8, x23
   178a8:	b.cc	17990 <gl_rbtree_list_check_invariants@@Base+0xfe0>  // b.lo, b.ul, b.last
   178ac:	cbz	x22, 17978 <gl_rbtree_list_check_invariants@@Base+0xfc8>
   178b0:	ldr	x8, [x22]
   178b4:	cbz	x8, 178c0 <gl_rbtree_list_check_invariants@@Base+0xf10>
   178b8:	ldr	x24, [x8, #32]
   178bc:	b	178c4 <gl_rbtree_list_check_invariants@@Base+0xf14>
   178c0:	mov	x24, xzr
   178c4:	cmp	x21, x24
   178c8:	b.ls	178e0 <gl_rbtree_list_check_invariants@@Base+0xf30>  // b.plast
   178cc:	add	x8, x24, #0x1
   178d0:	sub	x21, x21, x8
   178d4:	sub	x23, x23, x8
   178d8:	add	x22, x22, #0x8
   178dc:	b	178fc <gl_rbtree_list_check_invariants@@Base+0xf4c>
   178e0:	cmp	x23, x24
   178e4:	b.ls	17900 <gl_rbtree_list_check_invariants@@Base+0xf50>  // b.plast
   178e8:	ldr	x0, [x22, #40]
   178ec:	mov	x1, x19
   178f0:	blr	x20
   178f4:	tbnz	w0, #31, 1790c <gl_rbtree_list_check_invariants@@Base+0xf5c>
   178f8:	cbz	w0, 1791c <gl_rbtree_list_check_invariants@@Base+0xf6c>
   178fc:	ldr	x8, [x22]
   17900:	mov	x22, x8
   17904:	cbnz	x8, 178b0 <gl_rbtree_list_check_invariants@@Base+0xf00>
   17908:	b	17978 <gl_rbtree_list_check_invariants@@Base+0xfc8>
   1790c:	mvn	x8, x24
   17910:	mov	x21, xzr
   17914:	add	x23, x23, x8
   17918:	b	178d8 <gl_rbtree_list_check_invariants@@Base+0xf28>
   1791c:	ldr	x23, [x22]
   17920:	cbz	x23, 17978 <gl_rbtree_list_check_invariants@@Base+0xfc8>
   17924:	ldr	x8, [x23]
   17928:	cbz	x8, 17930 <gl_rbtree_list_check_invariants@@Base+0xf80>
   1792c:	ldr	x8, [x8, #32]
   17930:	cmp	x21, x8
   17934:	b.ls	17944 <gl_rbtree_list_check_invariants@@Base+0xf94>  // b.plast
   17938:	mvn	x8, x8
   1793c:	add	x21, x21, x8
   17940:	b	17964 <gl_rbtree_list_check_invariants@@Base+0xfb4>
   17944:	ldr	x0, [x23, #40]
   17948:	mov	x1, x19
   1794c:	blr	x20
   17950:	tbnz	w0, #31, 17960 <gl_rbtree_list_check_invariants@@Base+0xfb0>
   17954:	mov	x8, x23
   17958:	cbz	w0, 1796c <gl_rbtree_list_check_invariants@@Base+0xfbc>
   1795c:	b	17990 <gl_rbtree_list_check_invariants@@Base+0xfe0>
   17960:	mov	x21, xzr
   17964:	add	x8, x23, #0x8
   17968:	mov	x23, x22
   1796c:	mov	x22, x23
   17970:	ldr	x23, [x8]
   17974:	cbnz	x23, 17924 <gl_rbtree_list_check_invariants@@Base+0xf74>
   17978:	mov	x0, x22
   1797c:	ldp	x20, x19, [sp, #48]
   17980:	ldp	x22, x21, [sp, #32]
   17984:	ldp	x24, x23, [sp, #16]
   17988:	ldp	x29, x30, [sp], #64
   1798c:	ret
   17990:	bl	a980 <abort@plt>
   17994:	stp	x29, x30, [sp, #-64]!
   17998:	stp	x22, x21, [sp, #32]
   1799c:	stp	x20, x19, [sp, #48]
   179a0:	ldr	x21, [x0, #40]
   179a4:	str	x23, [sp, #16]
   179a8:	mov	x29, sp
   179ac:	cbz	x21, 179f4 <gl_rbtree_list_check_invariants@@Base+0x1044>
   179b0:	mov	x19, x2
   179b4:	mov	x20, x1
   179b8:	mov	x22, xzr
   179bc:	ldr	x0, [x21, #40]
   179c0:	mov	x1, x19
   179c4:	blr	x20
   179c8:	tbnz	w0, #31, 179d4 <gl_rbtree_list_check_invariants@@Base+0x1024>
   179cc:	cbnz	w0, 179ec <gl_rbtree_list_check_invariants@@Base+0x103c>
   179d0:	b	17a10 <gl_rbtree_list_check_invariants@@Base+0x1060>
   179d4:	ldr	x8, [x21]
   179d8:	cbz	x8, 179e4 <gl_rbtree_list_check_invariants@@Base+0x1034>
   179dc:	ldr	x8, [x8, #32]
   179e0:	add	x22, x8, x22
   179e4:	add	x22, x22, #0x1
   179e8:	add	x21, x21, #0x8
   179ec:	ldr	x21, [x21]
   179f0:	cbnz	x21, 179bc <gl_rbtree_list_check_invariants@@Base+0x100c>
   179f4:	mov	x21, #0xffffffffffffffff    	// #-1
   179f8:	mov	x0, x21
   179fc:	ldp	x20, x19, [sp, #48]
   17a00:	ldp	x22, x21, [sp, #32]
   17a04:	ldr	x23, [sp, #16]
   17a08:	ldp	x29, x30, [sp], #64
   17a0c:	ret
   17a10:	ldr	x23, [x21]
   17a14:	cbz	x23, 17a74 <gl_rbtree_list_check_invariants@@Base+0x10c4>
   17a18:	ldr	x8, [x23, #32]
   17a1c:	add	x21, x8, x22
   17a20:	ldr	x0, [x23, #40]
   17a24:	mov	x1, x19
   17a28:	blr	x20
   17a2c:	tbnz	w0, #31, 17a44 <gl_rbtree_list_check_invariants@@Base+0x1094>
   17a30:	cbnz	w0, 17a7c <gl_rbtree_list_check_invariants@@Base+0x10cc>
   17a34:	ldr	x23, [x23]
   17a38:	cbz	x23, 17a64 <gl_rbtree_list_check_invariants@@Base+0x10b4>
   17a3c:	ldr	x8, [x23, #32]
   17a40:	b	17a68 <gl_rbtree_list_check_invariants@@Base+0x10b8>
   17a44:	ldr	x8, [x23]
   17a48:	cbz	x8, 17a54 <gl_rbtree_list_check_invariants@@Base+0x10a4>
   17a4c:	ldr	x8, [x8, #32]
   17a50:	add	x22, x8, x22
   17a54:	ldr	x23, [x23, #8]
   17a58:	add	x22, x22, #0x1
   17a5c:	cbnz	x23, 17a20 <gl_rbtree_list_check_invariants@@Base+0x1070>
   17a60:	b	179f8 <gl_rbtree_list_check_invariants@@Base+0x1048>
   17a64:	mov	x8, xzr
   17a68:	add	x21, x8, x22
   17a6c:	cbnz	x23, 17a20 <gl_rbtree_list_check_invariants@@Base+0x1070>
   17a70:	b	179f8 <gl_rbtree_list_check_invariants@@Base+0x1048>
   17a74:	mov	x21, x22
   17a78:	b	179f8 <gl_rbtree_list_check_invariants@@Base+0x1048>
   17a7c:	bl	a980 <abort@plt>
   17a80:	stp	x29, x30, [sp, #-80]!
   17a84:	cmp	x2, x3
   17a88:	str	x25, [sp, #16]
   17a8c:	stp	x24, x23, [sp, #32]
   17a90:	stp	x22, x21, [sp, #48]
   17a94:	stp	x20, x19, [sp, #64]
   17a98:	mov	x29, sp
   17a9c:	b.hi	17bd4 <gl_rbtree_list_check_invariants@@Base+0x1224>  // b.pmore
   17aa0:	ldr	x24, [x0, #40]
   17aa4:	mov	x19, x4
   17aa8:	mov	x22, x3
   17aac:	mov	x20, x2
   17ab0:	mov	x21, x1
   17ab4:	cbz	x24, 17ac0 <gl_rbtree_list_check_invariants@@Base+0x1110>
   17ab8:	ldr	x8, [x24, #32]
   17abc:	b	17ac4 <gl_rbtree_list_check_invariants@@Base+0x1114>
   17ac0:	mov	x8, xzr
   17ac4:	cmp	x8, x22
   17ac8:	b.cc	17bd4 <gl_rbtree_list_check_invariants@@Base+0x1224>  // b.lo, b.ul, b.last
   17acc:	cbz	x24, 17b40 <gl_rbtree_list_check_invariants@@Base+0x1190>
   17ad0:	mov	x23, xzr
   17ad4:	ldr	x8, [x24]
   17ad8:	cbz	x8, 17ae4 <gl_rbtree_list_check_invariants@@Base+0x1134>
   17adc:	ldr	x25, [x8, #32]
   17ae0:	b	17ae8 <gl_rbtree_list_check_invariants@@Base+0x1138>
   17ae4:	mov	x25, xzr
   17ae8:	cmp	x20, x25
   17aec:	b.ls	17b08 <gl_rbtree_list_check_invariants@@Base+0x1158>  // b.plast
   17af0:	add	x8, x25, #0x1
   17af4:	sub	x20, x20, x8
   17af8:	sub	x22, x22, x8
   17afc:	add	x23, x8, x23
   17b00:	add	x24, x24, #0x8
   17b04:	b	17b24 <gl_rbtree_list_check_invariants@@Base+0x1174>
   17b08:	cmp	x22, x25
   17b0c:	b.ls	17b28 <gl_rbtree_list_check_invariants@@Base+0x1178>  // b.plast
   17b10:	ldr	x0, [x24, #40]
   17b14:	mov	x1, x19
   17b18:	blr	x21
   17b1c:	tbnz	w0, #31, 17b34 <gl_rbtree_list_check_invariants@@Base+0x1184>
   17b20:	cbz	w0, 17b60 <gl_rbtree_list_check_invariants@@Base+0x11b0>
   17b24:	ldr	x8, [x24]
   17b28:	mov	x24, x8
   17b2c:	cbnz	x8, 17ad4 <gl_rbtree_list_check_invariants@@Base+0x1124>
   17b30:	b	17b40 <gl_rbtree_list_check_invariants@@Base+0x1190>
   17b34:	mov	x20, xzr
   17b38:	add	x8, x25, #0x1
   17b3c:	b	17af8 <gl_rbtree_list_check_invariants@@Base+0x1148>
   17b40:	mov	x22, #0xffffffffffffffff    	// #-1
   17b44:	mov	x0, x22
   17b48:	ldp	x20, x19, [sp, #64]
   17b4c:	ldp	x22, x21, [sp, #48]
   17b50:	ldp	x24, x23, [sp, #32]
   17b54:	ldr	x25, [sp, #16]
   17b58:	ldp	x29, x30, [sp], #80
   17b5c:	ret
   17b60:	ldr	x24, [x24]
   17b64:	cbz	x24, 17bcc <gl_rbtree_list_check_invariants@@Base+0x121c>
   17b68:	ldr	x8, [x24, #32]
   17b6c:	add	x22, x8, x23
   17b70:	ldr	x8, [x24]
   17b74:	cbz	x8, 17b80 <gl_rbtree_list_check_invariants@@Base+0x11d0>
   17b78:	ldr	x25, [x8, #32]
   17b7c:	b	17b84 <gl_rbtree_list_check_invariants@@Base+0x11d4>
   17b80:	mov	x25, xzr
   17b84:	cmp	x20, x25
   17b88:	b.ls	17b98 <gl_rbtree_list_check_invariants@@Base+0x11e8>  // b.plast
   17b8c:	mvn	x8, x25
   17b90:	add	x20, x20, x8
   17b94:	b	17bbc <gl_rbtree_list_check_invariants@@Base+0x120c>
   17b98:	ldr	x0, [x24, #40]
   17b9c:	mov	x1, x19
   17ba0:	blr	x21
   17ba4:	tbnz	w0, #31, 17bb4 <gl_rbtree_list_check_invariants@@Base+0x1204>
   17ba8:	cbnz	w0, 17bd4 <gl_rbtree_list_check_invariants@@Base+0x1224>
   17bac:	add	x22, x25, x23
   17bb0:	b	17bc0 <gl_rbtree_list_check_invariants@@Base+0x1210>
   17bb4:	add	x8, x25, x23
   17bb8:	add	x23, x8, #0x1
   17bbc:	add	x24, x24, #0x8
   17bc0:	ldr	x24, [x24]
   17bc4:	cbnz	x24, 17b70 <gl_rbtree_list_check_invariants@@Base+0x11c0>
   17bc8:	b	17b44 <gl_rbtree_list_check_invariants@@Base+0x1194>
   17bcc:	mov	x22, x23
   17bd0:	b	17b44 <gl_rbtree_list_check_invariants@@Base+0x1194>
   17bd4:	bl	a980 <abort@plt>
   17bd8:	stp	x29, x30, [sp, #-48]!
   17bdc:	stp	x22, x21, [sp, #16]
   17be0:	stp	x20, x19, [sp, #32]
   17be4:	ldr	x8, [x0, #40]
   17be8:	mov	x19, x2
   17bec:	mov	x20, x0
   17bf0:	mov	x29, sp
   17bf4:	cbz	x8, 17c60 <gl_rbtree_list_check_invariants@@Base+0x12b0>
   17bf8:	mov	x21, x1
   17bfc:	ldr	x0, [x8, #40]
   17c00:	mov	x1, x19
   17c04:	mov	x22, x8
   17c08:	blr	x21
   17c0c:	tbnz	w0, #31, 17c20 <gl_rbtree_list_check_invariants@@Base+0x1270>
   17c10:	cbz	w0, 17c44 <gl_rbtree_list_check_invariants@@Base+0x1294>
   17c14:	ldr	x8, [x22]
   17c18:	cbnz	x8, 17bfc <gl_rbtree_list_check_invariants@@Base+0x124c>
   17c1c:	b	17c44 <gl_rbtree_list_check_invariants@@Base+0x1294>
   17c20:	ldr	x8, [x22, #8]
   17c24:	cbnz	x8, 17bfc <gl_rbtree_list_check_invariants@@Base+0x124c>
   17c28:	mov	x0, x20
   17c2c:	mov	x1, x22
   17c30:	mov	x2, x19
   17c34:	ldp	x20, x19, [sp, #32]
   17c38:	ldp	x22, x21, [sp, #16]
   17c3c:	ldp	x29, x30, [sp], #48
   17c40:	b	17268 <gl_rbtree_list_check_invariants@@Base+0x8b8>
   17c44:	mov	x0, x20
   17c48:	mov	x1, x22
   17c4c:	mov	x2, x19
   17c50:	ldp	x20, x19, [sp, #32]
   17c54:	ldp	x22, x21, [sp, #16]
   17c58:	ldp	x29, x30, [sp], #48
   17c5c:	b	171cc <gl_rbtree_list_check_invariants@@Base+0x81c>
   17c60:	mov	x0, x20
   17c64:	mov	x1, x19
   17c68:	ldp	x20, x19, [sp, #32]
   17c6c:	ldp	x22, x21, [sp, #16]
   17c70:	ldp	x29, x30, [sp], #48
   17c74:	b	1709c <gl_rbtree_list_check_invariants@@Base+0x6ec>
   17c78:	stp	x29, x30, [sp, #-32]!
   17c7c:	str	x19, [sp, #16]
   17c80:	mov	x29, sp
   17c84:	mov	x19, x0
   17c88:	bl	177d4 <gl_rbtree_list_check_invariants@@Base+0xe24>
   17c8c:	cbz	x0, 17ca0 <gl_rbtree_list_check_invariants@@Base+0x12f0>
   17c90:	mov	x1, x0
   17c94:	mov	x0, x19
   17c98:	bl	17370 <gl_rbtree_list_check_invariants@@Base+0x9c0>
   17c9c:	mov	w0, #0x1                   	// #1
   17ca0:	ldr	x19, [sp, #16]
   17ca4:	ldp	x29, x30, [sp], #32
   17ca8:	ret
   17cac:	stp	x29, x30, [sp, #-64]!
   17cb0:	stp	x22, x21, [sp, #32]
   17cb4:	mov	w21, w0
   17cb8:	mov	w0, #0x30                  	// #48
   17cbc:	str	x23, [sp, #16]
   17cc0:	stp	x20, x19, [sp, #48]
   17cc4:	mov	x29, sp
   17cc8:	mov	x22, x2
   17ccc:	mov	x20, x1
   17cd0:	bl	a660 <malloc@plt>
   17cd4:	mov	x19, x0
   17cd8:	cbz	x0, 17d6c <gl_rbtree_list_check_invariants@@Base+0x13bc>
   17cdc:	sub	x8, x20, #0x1
   17ce0:	lsr	x23, x8, #1
   17ce4:	cbz	x23, 17d08 <gl_rbtree_list_check_invariants@@Base+0x1358>
   17ce8:	sub	w0, w21, #0x1
   17cec:	mov	x1, x23
   17cf0:	mov	x2, x22
   17cf4:	bl	17cac <gl_rbtree_list_check_invariants@@Base+0x12fc>
   17cf8:	str	x0, [x19]
   17cfc:	cbz	x0, 17d60 <gl_rbtree_list_check_invariants@@Base+0x13b0>
   17d00:	str	x19, [x0, #16]
   17d04:	b	17d0c <gl_rbtree_list_check_invariants@@Base+0x135c>
   17d08:	str	xzr, [x19]
   17d0c:	add	x8, x22, x23, lsl #3
   17d10:	ldr	x9, [x8]
   17d14:	lsr	x1, x20, #1
   17d18:	str	x9, [x19, #40]
   17d1c:	cbz	x1, 17d3c <gl_rbtree_list_check_invariants@@Base+0x138c>
   17d20:	sub	w0, w21, #0x1
   17d24:	add	x2, x8, #0x8
   17d28:	bl	17cac <gl_rbtree_list_check_invariants@@Base+0x12fc>
   17d2c:	str	x0, [x19, #8]
   17d30:	cbz	x0, 17d54 <gl_rbtree_list_check_invariants@@Base+0x13a4>
   17d34:	str	x19, [x0, #16]
   17d38:	b	17d40 <gl_rbtree_list_check_invariants@@Base+0x1390>
   17d3c:	str	xzr, [x19, #8]
   17d40:	cmp	w21, #0x0
   17d44:	cset	w8, eq  // eq = none
   17d48:	str	w8, [x19, #24]
   17d4c:	str	x20, [x19, #32]
   17d50:	b	17d6c <gl_rbtree_list_check_invariants@@Base+0x13bc>
   17d54:	ldr	x0, [x19]
   17d58:	cbz	x0, 17d60 <gl_rbtree_list_check_invariants@@Base+0x13b0>
   17d5c:	bl	17d84 <gl_rbtree_list_check_invariants@@Base+0x13d4>
   17d60:	mov	x0, x19
   17d64:	bl	aaa0 <free@plt>
   17d68:	mov	x19, xzr
   17d6c:	mov	x0, x19
   17d70:	ldp	x20, x19, [sp, #48]
   17d74:	ldp	x22, x21, [sp, #32]
   17d78:	ldr	x23, [sp, #16]
   17d7c:	ldp	x29, x30, [sp], #64
   17d80:	ret
   17d84:	stp	x29, x30, [sp, #-32]!
   17d88:	str	x19, [sp, #16]
   17d8c:	mov	x19, x0
   17d90:	ldr	x0, [x0]
   17d94:	mov	x29, sp
   17d98:	cbz	x0, 17da0 <gl_rbtree_list_check_invariants@@Base+0x13f0>
   17d9c:	bl	17d84 <gl_rbtree_list_check_invariants@@Base+0x13d4>
   17da0:	ldr	x0, [x19, #8]
   17da4:	cbz	x0, 17dac <gl_rbtree_list_check_invariants@@Base+0x13fc>
   17da8:	bl	17d84 <gl_rbtree_list_check_invariants@@Base+0x13d4>
   17dac:	mov	x0, x19
   17db0:	ldr	x19, [sp, #16]
   17db4:	ldp	x29, x30, [sp], #32
   17db8:	b	aaa0 <free@plt>
   17dbc:	stp	x29, x30, [sp, #-64]!
   17dc0:	stp	x22, x21, [sp, #32]
   17dc4:	stp	x20, x19, [sp, #48]
   17dc8:	mov	x21, x2
   17dcc:	mov	x19, x1
   17dd0:	mov	w9, #0x1                   	// #1
   17dd4:	str	x23, [sp, #16]
   17dd8:	mov	x29, sp
   17ddc:	ldr	w8, [x21, #24]
   17de0:	cbz	w8, 17e58 <gl_rbtree_list_check_invariants@@Base+0x14a8>
   17de4:	ldr	x20, [x21, #16]
   17de8:	ldp	x8, x10, [x20]
   17dec:	cmp	x8, x21
   17df0:	b.eq	17e00 <gl_rbtree_list_check_invariants@@Base+0x1450>  // b.none
   17df4:	cmp	x10, x21
   17df8:	mov	x10, x8
   17dfc:	b.ne	17e54 <gl_rbtree_list_check_invariants@@Base+0x14a4>  // b.any
   17e00:	cbz	x10, 17e34 <gl_rbtree_list_check_invariants@@Base+0x1484>
   17e04:	ldr	w11, [x10, #24]
   17e08:	cmp	w11, #0x1
   17e0c:	b.ne	17e34 <gl_rbtree_list_check_invariants@@Base+0x1484>  // b.any
   17e10:	str	w9, [x19, #24]
   17e14:	str	wzr, [x10, #24]
   17e18:	str	wzr, [x21, #24]
   17e1c:	ldr	x21, [x20, #16]
   17e20:	mov	x19, x20
   17e24:	cbnz	x21, 17ddc <gl_rbtree_list_check_invariants@@Base+0x142c>
   17e28:	mov	w8, wzr
   17e2c:	mov	x19, x20
   17e30:	b	17ef0 <gl_rbtree_list_check_invariants@@Base+0x1540>
   17e34:	ldr	x23, [x20, #16]
   17e38:	cbz	x23, 17e60 <gl_rbtree_list_check_invariants@@Base+0x14b0>
   17e3c:	ldr	x9, [x23]
   17e40:	cmp	x9, x20
   17e44:	b.eq	17e64 <gl_rbtree_list_check_invariants@@Base+0x14b4>  // b.none
   17e48:	ldr	x9, [x23, #8]!
   17e4c:	cmp	x9, x20
   17e50:	b.eq	17e64 <gl_rbtree_list_check_invariants@@Base+0x14b4>  // b.none
   17e54:	bl	a980 <abort@plt>
   17e58:	mov	w8, #0x1                   	// #1
   17e5c:	b	17ef0 <gl_rbtree_list_check_invariants@@Base+0x1540>
   17e60:	add	x23, x0, #0x28
   17e64:	cmp	x8, x21
   17e68:	b.eq	17e80 <gl_rbtree_list_check_invariants@@Base+0x14d0>  // b.none
   17e6c:	ldr	x8, [x21]
   17e70:	cmp	x8, x19
   17e74:	b.eq	17e94 <gl_rbtree_list_check_invariants@@Base+0x14e4>  // b.none
   17e78:	mov	x22, x21
   17e7c:	b	17eac <gl_rbtree_list_check_invariants@@Base+0x14fc>
   17e80:	ldr	x8, [x21, #8]
   17e84:	cmp	x8, x19
   17e88:	b.eq	17ec4 <gl_rbtree_list_check_invariants@@Base+0x1514>  // b.none
   17e8c:	mov	x0, x21
   17e90:	b	17ed8 <gl_rbtree_list_check_invariants@@Base+0x1528>
   17e94:	mov	x0, x19
   17e98:	mov	x1, x21
   17e9c:	bl	17f70 <gl_rbtree_list_check_invariants@@Base+0x15c0>
   17ea0:	str	x19, [x20, #8]
   17ea4:	mov	x22, x19
   17ea8:	mov	x19, x21
   17eac:	mov	x0, x20
   17eb0:	mov	x1, x22
   17eb4:	bl	17f08 <gl_rbtree_list_check_invariants@@Base+0x1558>
   17eb8:	str	x0, [x23]
   17ebc:	str	wzr, [x22, #24]
   17ec0:	b	17ee8 <gl_rbtree_list_check_invariants@@Base+0x1538>
   17ec4:	mov	x0, x21
   17ec8:	mov	x1, x19
   17ecc:	bl	17f08 <gl_rbtree_list_check_invariants@@Base+0x1558>
   17ed0:	mov	x19, x21
   17ed4:	str	x0, [x20]
   17ed8:	mov	x1, x20
   17edc:	bl	17f70 <gl_rbtree_list_check_invariants@@Base+0x15c0>
   17ee0:	str	x0, [x23]
   17ee4:	str	wzr, [x0, #24]
   17ee8:	mov	w8, #0x1                   	// #1
   17eec:	str	w8, [x20, #24]
   17ef0:	str	w8, [x19, #24]
   17ef4:	ldp	x20, x19, [sp, #48]
   17ef8:	ldp	x22, x21, [sp, #32]
   17efc:	ldr	x23, [sp, #16]
   17f00:	ldp	x29, x30, [sp], #64
   17f04:	ret
   17f08:	ldp	x9, x8, [x1]
   17f0c:	ldr	x10, [x0]
   17f10:	str	x9, [x0, #8]
   17f14:	str	x0, [x1]
   17f18:	ldr	x11, [x0, #16]
   17f1c:	str	x11, [x1, #16]
   17f20:	str	x1, [x0, #16]
   17f24:	cbz	x9, 17f2c <gl_rbtree_list_check_invariants@@Base+0x157c>
   17f28:	str	x0, [x9, #16]
   17f2c:	cbz	x10, 17f64 <gl_rbtree_list_check_invariants@@Base+0x15b4>
   17f30:	ldr	x10, [x10, #32]
   17f34:	add	x10, x10, #0x1
   17f38:	cbz	x9, 17f40 <gl_rbtree_list_check_invariants@@Base+0x1590>
   17f3c:	ldr	x9, [x9, #32]
   17f40:	add	x9, x9, x10
   17f44:	str	x9, [x0, #32]
   17f48:	add	x9, x9, #0x1
   17f4c:	cbz	x8, 17f54 <gl_rbtree_list_check_invariants@@Base+0x15a4>
   17f50:	ldr	x8, [x8, #32]
   17f54:	add	x8, x9, x8
   17f58:	mov	x0, x1
   17f5c:	str	x8, [x1, #32]
   17f60:	ret
   17f64:	mov	w10, #0x1                   	// #1
   17f68:	cbnz	x9, 17f3c <gl_rbtree_list_check_invariants@@Base+0x158c>
   17f6c:	b	17f40 <gl_rbtree_list_check_invariants@@Base+0x1590>
   17f70:	ldp	x8, x10, [x0]
   17f74:	ldr	x9, [x1, #8]
   17f78:	str	x10, [x1]
   17f7c:	str	x1, [x0, #8]
   17f80:	ldr	x11, [x1, #16]
   17f84:	str	x11, [x0, #16]
   17f88:	str	x0, [x1, #16]
   17f8c:	cbz	x10, 17fbc <gl_rbtree_list_check_invariants@@Base+0x160c>
   17f90:	ldr	x11, [x10, #32]
   17f94:	str	x1, [x10, #16]
   17f98:	add	x10, x11, #0x1
   17f9c:	cbz	x9, 17fa4 <gl_rbtree_list_check_invariants@@Base+0x15f4>
   17fa0:	ldr	x9, [x9, #32]
   17fa4:	add	x9, x9, x10
   17fa8:	str	x9, [x1, #32]
   17fac:	cbz	x8, 17fc8 <gl_rbtree_list_check_invariants@@Base+0x1618>
   17fb0:	ldr	x8, [x8, #32]
   17fb4:	add	x8, x8, #0x1
   17fb8:	b	17fcc <gl_rbtree_list_check_invariants@@Base+0x161c>
   17fbc:	mov	w10, #0x1                   	// #1
   17fc0:	cbnz	x9, 17fa0 <gl_rbtree_list_check_invariants@@Base+0x15f0>
   17fc4:	b	17fa4 <gl_rbtree_list_check_invariants@@Base+0x15f4>
   17fc8:	mov	w8, #0x1                   	// #1
   17fcc:	add	x8, x8, x9
   17fd0:	str	x8, [x0, #32]
   17fd4:	ret
   17fd8:	stp	x29, x30, [sp, #-64]!
   17fdc:	stp	x24, x23, [sp, #16]
   17fe0:	stp	x22, x21, [sp, #32]
   17fe4:	stp	x20, x19, [sp, #48]
   17fe8:	mov	x19, x2
   17fec:	add	x22, x0, #0x28
   17ff0:	mov	w23, #0x1                   	// #1
   17ff4:	mov	x29, sp
   17ff8:	ldr	x8, [x19, #16]
   17ffc:	mov	x24, x22
   18000:	cbz	x8, 18020 <gl_rbtree_list_check_invariants@@Base+0x1670>
   18004:	ldr	x9, [x8]
   18008:	cmp	x9, x19
   1800c:	b.eq	1801c <gl_rbtree_list_check_invariants@@Base+0x166c>  // b.none
   18010:	ldr	x9, [x8, #8]!
   18014:	cmp	x9, x19
   18018:	b.ne	18204 <gl_rbtree_list_check_invariants@@Base+0x1854>  // b.any
   1801c:	mov	x24, x8
   18020:	ldp	x21, x20, [x19]
   18024:	cmp	x21, x1
   18028:	b.eq	18094 <gl_rbtree_list_check_invariants@@Base+0x16e4>  // b.none
   1802c:	cmp	x20, x1
   18030:	b.ne	18204 <gl_rbtree_list_check_invariants@@Base+0x1854>  // b.any
   18034:	ldr	w8, [x21, #24]
   18038:	cmp	w8, #0x1
   1803c:	b.ne	18060 <gl_rbtree_list_check_invariants@@Base+0x16b0>  // b.any
   18040:	mov	x0, x21
   18044:	mov	x1, x19
   18048:	bl	17f70 <gl_rbtree_list_check_invariants@@Base+0x15c0>
   1804c:	str	x21, [x24]
   18050:	str	w23, [x19, #24]
   18054:	str	wzr, [x21, #24]
   18058:	add	x24, x21, #0x8
   1805c:	ldr	x21, [x19]
   18060:	ldr	x8, [x21]
   18064:	cbz	x8, 18074 <gl_rbtree_list_check_invariants@@Base+0x16c4>
   18068:	ldr	w8, [x8, #24]
   1806c:	cmp	w8, #0x1
   18070:	b.eq	18120 <gl_rbtree_list_check_invariants@@Base+0x1770>  // b.none
   18074:	ldr	x1, [x21, #8]
   18078:	cbz	x1, 18088 <gl_rbtree_list_check_invariants@@Base+0x16d8>
   1807c:	ldr	w8, [x1, #24]
   18080:	cmp	w8, #0x1
   18084:	b.eq	18144 <gl_rbtree_list_check_invariants@@Base+0x1794>  // b.none
   18088:	ldr	w8, [x19, #24]
   1808c:	cbz	w8, 180f8 <gl_rbtree_list_check_invariants@@Base+0x1748>
   18090:	b	18110 <gl_rbtree_list_check_invariants@@Base+0x1760>
   18094:	ldr	w8, [x20, #24]
   18098:	cmp	w8, #0x1
   1809c:	b.ne	180c4 <gl_rbtree_list_check_invariants@@Base+0x1714>  // b.any
   180a0:	mov	x0, x19
   180a4:	mov	x1, x20
   180a8:	bl	17f08 <gl_rbtree_list_check_invariants@@Base+0x1558>
   180ac:	str	x0, [x24]
   180b0:	str	w23, [x19, #24]
   180b4:	str	wzr, [x20, #24]
   180b8:	ldr	x8, [x19, #8]
   180bc:	mov	x24, x20
   180c0:	mov	x20, x8
   180c4:	ldr	x8, [x20, #8]
   180c8:	cbz	x8, 180d8 <gl_rbtree_list_check_invariants@@Base+0x1728>
   180cc:	ldr	w8, [x8, #24]
   180d0:	cmp	w8, #0x1
   180d4:	b.eq	18188 <gl_rbtree_list_check_invariants@@Base+0x17d8>  // b.none
   180d8:	ldr	x21, [x20]
   180dc:	cbz	x21, 180ec <gl_rbtree_list_check_invariants@@Base+0x173c>
   180e0:	ldr	w8, [x21, #24]
   180e4:	cmp	w8, #0x1
   180e8:	b.eq	181ac <gl_rbtree_list_check_invariants@@Base+0x17fc>  // b.none
   180ec:	ldr	w8, [x19, #24]
   180f0:	cbnz	w8, 1817c <gl_rbtree_list_check_invariants@@Base+0x17cc>
   180f4:	mov	x21, x20
   180f8:	str	w23, [x21, #24]
   180fc:	ldr	x8, [x19, #16]
   18100:	mov	x1, x19
   18104:	mov	x19, x8
   18108:	cbnz	x8, 17ff8 <gl_rbtree_list_check_invariants@@Base+0x1648>
   1810c:	b	181f0 <gl_rbtree_list_check_invariants@@Base+0x1840>
   18110:	str	wzr, [x19, #24]
   18114:	mov	w8, #0x1                   	// #1
   18118:	mov	x20, x21
   1811c:	b	181ec <gl_rbtree_list_check_invariants@@Base+0x183c>
   18120:	mov	x0, x21
   18124:	mov	x1, x19
   18128:	bl	17f70 <gl_rbtree_list_check_invariants@@Base+0x15c0>
   1812c:	str	x21, [x24]
   18130:	ldr	w8, [x19, #24]
   18134:	str	w8, [x21, #24]
   18138:	str	wzr, [x19, #24]
   1813c:	ldr	x20, [x21]
   18140:	b	181e8 <gl_rbtree_list_check_invariants@@Base+0x1838>
   18144:	mov	x0, x21
   18148:	bl	17f08 <gl_rbtree_list_check_invariants@@Base+0x1558>
   1814c:	mov	w8, #0x1                   	// #1
   18150:	mov	x1, x19
   18154:	str	x0, [x19]
   18158:	str	w8, [x21, #24]
   1815c:	str	wzr, [x0, #24]
   18160:	bl	17f70 <gl_rbtree_list_check_invariants@@Base+0x15c0>
   18164:	str	x0, [x24]
   18168:	ldr	w8, [x19, #24]
   1816c:	str	w8, [x0, #24]
   18170:	str	wzr, [x19, #24]
   18174:	ldr	x20, [x0]
   18178:	b	181e8 <gl_rbtree_list_check_invariants@@Base+0x1838>
   1817c:	mov	w8, #0x1                   	// #1
   18180:	str	wzr, [x19, #24]
   18184:	b	181ec <gl_rbtree_list_check_invariants@@Base+0x183c>
   18188:	mov	x0, x19
   1818c:	mov	x1, x20
   18190:	bl	17f08 <gl_rbtree_list_check_invariants@@Base+0x1558>
   18194:	str	x0, [x24]
   18198:	ldr	w8, [x19, #24]
   1819c:	str	w8, [x20, #24]
   181a0:	str	wzr, [x19, #24]
   181a4:	ldr	x20, [x20, #8]
   181a8:	b	181e8 <gl_rbtree_list_check_invariants@@Base+0x1838>
   181ac:	mov	x0, x21
   181b0:	mov	x1, x20
   181b4:	bl	17f70 <gl_rbtree_list_check_invariants@@Base+0x15c0>
   181b8:	mov	w8, #0x1                   	// #1
   181bc:	mov	x0, x19
   181c0:	mov	x1, x21
   181c4:	str	x21, [x19, #8]
   181c8:	str	w8, [x20, #24]
   181cc:	str	wzr, [x21, #24]
   181d0:	bl	17f08 <gl_rbtree_list_check_invariants@@Base+0x1558>
   181d4:	str	x0, [x24]
   181d8:	ldr	w8, [x19, #24]
   181dc:	str	w8, [x21, #24]
   181e0:	str	wzr, [x19, #24]
   181e4:	ldr	x20, [x21, #8]
   181e8:	mov	w8, wzr
   181ec:	str	w8, [x20, #24]
   181f0:	ldp	x20, x19, [sp, #48]
   181f4:	ldp	x22, x21, [sp, #32]
   181f8:	ldp	x24, x23, [sp, #16]
   181fc:	ldp	x29, x30, [sp], #64
   18200:	ret
   18204:	bl	a980 <abort@plt>

0000000000018208 <renameatu@@Base>:
   18208:	sub	sp, sp, #0x150
   1820c:	stp	x29, x30, [sp, #256]
   18210:	stp	x28, x25, [sp, #272]
   18214:	stp	x24, x23, [sp, #288]
   18218:	stp	x22, x21, [sp, #304]
   1821c:	stp	x20, x19, [sp, #320]
   18220:	add	x29, sp, #0x100
   18224:	mov	w25, w4
   18228:	mov	x19, x3
   1822c:	mov	w20, w2
   18230:	mov	x21, x1
   18234:	mov	w22, w0
   18238:	bl	aab0 <renameat2@plt>
   1823c:	mov	w24, w0
   18240:	bl	aec0 <__errno_location@plt>
   18244:	tbz	w24, #31, 1839c <renameatu@@Base+0x194>
   18248:	ldr	w8, [x0]
   1824c:	mov	x23, x0
   18250:	cmp	w8, #0x16
   18254:	b.eq	18268 <renameatu@@Base+0x60>  // b.none
   18258:	cmp	w8, #0x5f
   1825c:	b.eq	18268 <renameatu@@Base+0x60>  // b.none
   18260:	cmp	w8, #0x26
   18264:	b.ne	1839c <renameatu@@Base+0x194>  // b.any
   18268:	cbz	w25, 182bc <renameatu@@Base+0xb4>
   1826c:	cmp	w25, #0x1
   18270:	b.ne	182a8 <renameatu@@Base+0xa0>  // b.any
   18274:	mov	x2, sp
   18278:	mov	w3, #0x100                 	// #256
   1827c:	mov	w0, w20
   18280:	mov	x1, x19
   18284:	bl	28328 <vasnprintf@@Base+0xc6c>
   18288:	cbz	w0, 182a0 <renameatu@@Base+0x98>
   1828c:	ldr	w8, [x23]
   18290:	cmp	w8, #0x2
   18294:	b.eq	182b8 <renameatu@@Base+0xb0>  // b.none
   18298:	cmp	w8, #0x4b
   1829c:	b.ne	182b0 <renameatu@@Base+0xa8>  // b.any
   182a0:	mov	w8, #0x11                  	// #17
   182a4:	b	182ac <renameatu@@Base+0xa4>
   182a8:	mov	w8, #0x5f                  	// #95
   182ac:	str	w8, [x23]
   182b0:	mov	w24, #0xffffffff            	// #-1
   182b4:	b	1839c <renameatu@@Base+0x194>
   182b8:	mov	w25, #0x1                   	// #1
   182bc:	mov	x0, x21
   182c0:	bl	a370 <strlen@plt>
   182c4:	mov	x24, x0
   182c8:	mov	x0, x19
   182cc:	bl	a370 <strlen@plt>
   182d0:	cbz	x24, 18384 <renameatu@@Base+0x17c>
   182d4:	cbz	x0, 18384 <renameatu@@Base+0x17c>
   182d8:	add	x8, x24, x21
   182dc:	ldurb	w8, [x8, #-1]
   182e0:	cmp	w8, #0x2f
   182e4:	b.eq	182f8 <renameatu@@Base+0xf0>  // b.none
   182e8:	add	x8, x0, x19
   182ec:	ldurb	w8, [x8, #-1]
   182f0:	cmp	w8, #0x2f
   182f4:	b.ne	18384 <renameatu@@Base+0x17c>  // b.any
   182f8:	add	x2, sp, #0x80
   182fc:	mov	w3, #0x100                 	// #256
   18300:	mov	w0, w22
   18304:	mov	x1, x21
   18308:	bl	28328 <vasnprintf@@Base+0xc6c>
   1830c:	cbnz	w0, 182b0 <renameatu@@Base+0xa8>
   18310:	cbz	w25, 1832c <renameatu@@Base+0x124>
   18314:	ldr	w8, [sp, #144]
   18318:	and	w8, w8, #0xf000
   1831c:	cmp	w8, #0x4, lsl #12
   18320:	b.eq	18384 <renameatu@@Base+0x17c>  // b.none
   18324:	mov	w8, #0x2                   	// #2
   18328:	b	182ac <renameatu@@Base+0xa4>
   1832c:	mov	x2, sp
   18330:	mov	w3, #0x100                 	// #256
   18334:	mov	w0, w20
   18338:	mov	x1, x19
   1833c:	bl	28328 <vasnprintf@@Base+0xc6c>
   18340:	cbz	w0, 18364 <renameatu@@Base+0x15c>
   18344:	ldr	w8, [x23]
   18348:	cmp	w8, #0x2
   1834c:	b.ne	182b0 <renameatu@@Base+0xa8>  // b.any
   18350:	ldr	w8, [sp, #144]
   18354:	and	w8, w8, #0xf000
   18358:	cmp	w8, #0x4, lsl #12
   1835c:	b.ne	182b0 <renameatu@@Base+0xa8>  // b.any
   18360:	b	18384 <renameatu@@Base+0x17c>
   18364:	ldr	w8, [sp, #16]
   18368:	and	w8, w8, #0xf000
   1836c:	cmp	w8, #0x4, lsl #12
   18370:	b.ne	183bc <renameatu@@Base+0x1b4>  // b.any
   18374:	ldr	w8, [sp, #144]
   18378:	and	w8, w8, #0xf000
   1837c:	cmp	w8, #0x4, lsl #12
   18380:	b.ne	183c4 <renameatu@@Base+0x1bc>  // b.any
   18384:	mov	w0, w22
   18388:	mov	x1, x21
   1838c:	mov	w2, w20
   18390:	mov	x3, x19
   18394:	bl	aaf0 <renameat@plt>
   18398:	mov	w24, w0
   1839c:	mov	w0, w24
   183a0:	ldp	x20, x19, [sp, #320]
   183a4:	ldp	x22, x21, [sp, #304]
   183a8:	ldp	x24, x23, [sp, #288]
   183ac:	ldp	x28, x25, [sp, #272]
   183b0:	ldp	x29, x30, [sp, #256]
   183b4:	add	sp, sp, #0x150
   183b8:	ret
   183bc:	mov	w8, #0x14                  	// #20
   183c0:	b	182ac <renameatu@@Base+0xa4>
   183c4:	mov	w8, #0x15                  	// #21
   183c8:	b	182ac <renameatu@@Base+0xa4>

00000000000183cc <same_name@@Base>:
   183cc:	mov	x8, x0
   183d0:	mov	w0, #0xffffff9c            	// #-100
   183d4:	mov	w2, #0xffffff9c            	// #-100
   183d8:	mov	x3, x1
   183dc:	mov	x1, x8
   183e0:	b	a340 <same_nameat@plt>

00000000000183e4 <same_nameat@@Base>:
   183e4:	sub	sp, sp, #0x150
   183e8:	stp	x22, x21, [sp, #304]
   183ec:	mov	w21, w0
   183f0:	mov	x0, x1
   183f4:	stp	x29, x30, [sp, #256]
   183f8:	stp	x28, x25, [sp, #272]
   183fc:	stp	x24, x23, [sp, #288]
   18400:	stp	x20, x19, [sp, #320]
   18404:	add	x29, sp, #0x100
   18408:	mov	x20, x3
   1840c:	mov	w19, w2
   18410:	mov	x22, x1
   18414:	bl	a800 <last_component@plt>
   18418:	mov	x23, x0
   1841c:	mov	x0, x20
   18420:	bl	a800 <last_component@plt>
   18424:	mov	x24, x0
   18428:	mov	x0, x23
   1842c:	bl	a2d0 <base_len@plt>
   18430:	mov	x25, x0
   18434:	mov	x0, x24
   18438:	bl	a2d0 <base_len@plt>
   1843c:	cmp	x25, x0
   18440:	b.ne	18458 <same_nameat@@Base+0x74>  // b.any
   18444:	mov	x0, x23
   18448:	mov	x1, x24
   1844c:	mov	x2, x25
   18450:	bl	a820 <bcmp@plt>
   18454:	cbz	w0, 1847c <same_nameat@@Base+0x98>
   18458:	mov	w19, wzr
   1845c:	mov	w0, w19
   18460:	ldp	x20, x19, [sp, #320]
   18464:	ldp	x22, x21, [sp, #304]
   18468:	ldp	x24, x23, [sp, #288]
   1846c:	ldp	x28, x25, [sp, #272]
   18470:	ldp	x29, x30, [sp, #256]
   18474:	add	sp, sp, #0x150
   18478:	ret
   1847c:	mov	x0, x22
   18480:	bl	a6f0 <dir_name@plt>
   18484:	mov	x22, x0
   18488:	add	x2, sp, #0x80
   1848c:	mov	w3, #0x100                 	// #256
   18490:	mov	w0, w21
   18494:	mov	x1, x22
   18498:	bl	28328 <vasnprintf@@Base+0xc6c>
   1849c:	cbz	w0, 184bc <same_nameat@@Base+0xd8>
   184a0:	bl	aec0 <__errno_location@plt>
   184a4:	ldr	w1, [x0]
   184a8:	adrp	x2, 28000 <vasnprintf@@Base+0x944>
   184ac:	add	x2, x2, #0xcd8
   184b0:	mov	w0, #0x1                   	// #1
   184b4:	mov	x3, x22
   184b8:	bl	a3a0 <error@plt>
   184bc:	mov	x0, x22
   184c0:	bl	aaa0 <free@plt>
   184c4:	mov	x0, x20
   184c8:	bl	a6f0 <dir_name@plt>
   184cc:	mov	x20, x0
   184d0:	mov	x2, sp
   184d4:	mov	w3, #0x100                 	// #256
   184d8:	mov	w0, w19
   184dc:	mov	x1, x20
   184e0:	bl	28328 <vasnprintf@@Base+0xc6c>
   184e4:	cbz	w0, 18504 <same_nameat@@Base+0x120>
   184e8:	bl	aec0 <__errno_location@plt>
   184ec:	ldr	w1, [x0]
   184f0:	adrp	x2, 28000 <vasnprintf@@Base+0x944>
   184f4:	add	x2, x2, #0xcd8
   184f8:	mov	w0, #0x1                   	// #1
   184fc:	mov	x3, x20
   18500:	bl	a3a0 <error@plt>
   18504:	ldp	x11, x8, [sp]
   18508:	ldp	x10, x9, [sp, #128]
   1850c:	mov	x0, x20
   18510:	cmp	x9, x8
   18514:	cset	w8, eq  // eq = none
   18518:	cmp	x10, x11
   1851c:	cset	w9, eq  // eq = none
   18520:	and	w19, w8, w9
   18524:	bl	aaa0 <free@plt>
   18528:	b	1845c <same_nameat@@Base+0x78>

000000000001852c <save_cwd@@Base>:
   1852c:	stp	x29, x30, [sp, #-32]!
   18530:	str	x19, [sp, #16]
   18534:	mov	x19, x0
   18538:	str	xzr, [x0, #8]
   1853c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   18540:	add	x0, x0, #0xc02
   18544:	mov	w1, #0x80000               	// #524288
   18548:	mov	x29, sp
   1854c:	bl	a6c0 <open@plt>
   18550:	mov	w1, #0x80000               	// #524288
   18554:	str	w0, [x19]
   18558:	bl	ae60 <fd_safer_flag@plt>
   1855c:	str	w0, [x19]
   18560:	tbnz	w0, #31, 1856c <save_cwd@@Base+0x40>
   18564:	mov	w0, wzr
   18568:	b	18584 <save_cwd@@Base+0x58>
   1856c:	mov	x0, xzr
   18570:	mov	x1, xzr
   18574:	bl	a330 <getcwd@plt>
   18578:	cmp	x0, #0x0
   1857c:	str	x0, [x19, #8]
   18580:	csetm	w0, eq  // eq = none
   18584:	ldr	x19, [sp, #16]
   18588:	ldp	x29, x30, [sp], #32
   1858c:	ret

0000000000018590 <restore_cwd@@Base>:
   18590:	mov	x8, x0
   18594:	ldr	w0, [x0]
   18598:	tbnz	w0, #31, 185a0 <restore_cwd@@Base+0x10>
   1859c:	b	a3c0 <fchdir@plt>
   185a0:	ldr	x0, [x8, #8]
   185a4:	b	a490 <chdir_long@plt>

00000000000185a8 <free_cwd@@Base>:
   185a8:	stp	x29, x30, [sp, #-32]!
   185ac:	str	x19, [sp, #16]
   185b0:	mov	x19, x0
   185b4:	ldr	w0, [x0]
   185b8:	mov	x29, sp
   185bc:	tbnz	w0, #31, 185c4 <free_cwd@@Base+0x1c>
   185c0:	bl	a8d0 <close@plt>
   185c4:	ldr	x0, [x19, #8]
   185c8:	ldr	x19, [sp, #16]
   185cc:	ldp	x29, x30, [sp], #32
   185d0:	b	aaa0 <free@plt>

00000000000185d4 <gl_scratch_buffer_grow@@Base>:
   185d4:	stp	x29, x30, [sp, #-48]!
   185d8:	stp	x20, x19, [sp, #32]
   185dc:	mov	x19, x0
   185e0:	ldr	x0, [x0]
   185e4:	ldr	x8, [x19, #8]
   185e8:	str	x21, [sp, #16]
   185ec:	add	x21, x19, #0x10
   185f0:	cmp	x0, x21
   185f4:	lsl	x20, x8, #1
   185f8:	mov	x29, sp
   185fc:	b.eq	18608 <gl_scratch_buffer_grow@@Base+0x34>  // b.none
   18600:	bl	aaa0 <free@plt>
   18604:	ldr	x8, [x19, #8]
   18608:	cmp	x20, x8
   1860c:	b.cc	18638 <gl_scratch_buffer_grow@@Base+0x64>  // b.lo, b.ul, b.last
   18610:	mov	x0, x20
   18614:	bl	a660 <malloc@plt>
   18618:	cbz	x0, 18644 <gl_scratch_buffer_grow@@Base+0x70>
   1861c:	str	x0, [x19]
   18620:	mov	w0, #0x1                   	// #1
   18624:	str	x20, [x19, #8]
   18628:	ldp	x20, x19, [sp, #32]
   1862c:	ldr	x21, [sp, #16]
   18630:	ldp	x29, x30, [sp], #48
   18634:	ret
   18638:	bl	aec0 <__errno_location@plt>
   1863c:	mov	w8, #0xc                   	// #12
   18640:	str	w8, [x0]
   18644:	mov	w0, wzr
   18648:	str	x21, [x19]
   1864c:	mov	w20, #0x400                 	// #1024
   18650:	b	18624 <gl_scratch_buffer_grow@@Base+0x50>

0000000000018654 <gl_scratch_buffer_grow_preserve@@Base>:
   18654:	stp	x29, x30, [sp, #-64]!
   18658:	stp	x24, x23, [sp, #16]
   1865c:	stp	x22, x21, [sp, #32]
   18660:	stp	x20, x19, [sp, #48]
   18664:	ldp	x21, x23, [x0]
   18668:	add	x24, x0, #0x10
   1866c:	mov	x19, x0
   18670:	mov	x29, sp
   18674:	cmp	x21, x24
   18678:	lsl	x20, x23, #1
   1867c:	b.eq	186a4 <gl_scratch_buffer_grow_preserve@@Base+0x50>  // b.none
   18680:	cmp	x20, x23
   18684:	b.cc	186e0 <gl_scratch_buffer_grow_preserve@@Base+0x8c>  // b.lo, b.ul, b.last
   18688:	mov	x0, x21
   1868c:	mov	x1, x20
   18690:	bl	a860 <realloc@plt>
   18694:	mov	x22, x0
   18698:	cbnz	x0, 186c0 <gl_scratch_buffer_grow_preserve@@Base+0x6c>
   1869c:	ldr	x21, [x19]
   186a0:	b	186ec <gl_scratch_buffer_grow_preserve@@Base+0x98>
   186a4:	mov	x0, x20
   186a8:	bl	a660 <malloc@plt>
   186ac:	cbz	x0, 186cc <gl_scratch_buffer_grow_preserve@@Base+0x78>
   186b0:	mov	x1, x21
   186b4:	mov	x2, x23
   186b8:	mov	x22, x0
   186bc:	bl	a2f0 <memcpy@plt>
   186c0:	str	x22, [x19]
   186c4:	mov	w0, #0x1                   	// #1
   186c8:	str	x20, [x19, #8]
   186cc:	ldp	x20, x19, [sp, #48]
   186d0:	ldp	x22, x21, [sp, #32]
   186d4:	ldp	x24, x23, [sp, #16]
   186d8:	ldp	x29, x30, [sp], #64
   186dc:	ret
   186e0:	bl	aec0 <__errno_location@plt>
   186e4:	mov	w8, #0xc                   	// #12
   186e8:	str	w8, [x0]
   186ec:	mov	x0, x21
   186f0:	bl	aaa0 <free@plt>
   186f4:	mov	w0, wzr
   186f8:	mov	w20, #0x400                 	// #1024
   186fc:	str	x24, [x19]
   18700:	b	186c8 <gl_scratch_buffer_grow_preserve@@Base+0x74>

0000000000018704 <gl_scratch_buffer_set_array_size@@Base>:
   18704:	stp	x29, x30, [sp, #-48]!
   18708:	umulh	x8, x1, x2
   1870c:	cmp	xzr, x8
   18710:	stp	x20, x19, [sp, #32]
   18714:	mov	x19, x0
   18718:	cset	w8, ne  // ne = any
   1871c:	str	x21, [sp, #16]
   18720:	mov	x29, sp
   18724:	cbz	x1, 1876c <gl_scratch_buffer_set_array_size@@Base+0x68>
   18728:	orr	x9, x2, x1
   1872c:	lsr	x9, x9, #32
   18730:	cbz	x9, 1876c <gl_scratch_buffer_set_array_size@@Base+0x68>
   18734:	cbz	w8, 1876c <gl_scratch_buffer_set_array_size@@Base+0x68>
   18738:	mov	x20, x19
   1873c:	ldr	x0, [x20], #16
   18740:	cmp	x0, x20
   18744:	b.eq	1874c <gl_scratch_buffer_set_array_size@@Base+0x48>  // b.none
   18748:	bl	aaa0 <free@plt>
   1874c:	mov	w8, #0x400                 	// #1024
   18750:	stp	x20, x8, [x19]
   18754:	bl	aec0 <__errno_location@plt>
   18758:	mov	x8, x0
   1875c:	mov	w9, #0xc                   	// #12
   18760:	mov	w0, wzr
   18764:	str	w9, [x8]
   18768:	b	187a4 <gl_scratch_buffer_set_array_size@@Base+0xa0>
   1876c:	ldr	x8, [x19, #8]
   18770:	mul	x20, x1, x2
   18774:	cmp	x20, x8
   18778:	b.ls	187a0 <gl_scratch_buffer_set_array_size@@Base+0x9c>  // b.plast
   1877c:	mov	x21, x19
   18780:	ldr	x0, [x21], #16
   18784:	cmp	x0, x21
   18788:	b.eq	18790 <gl_scratch_buffer_set_array_size@@Base+0x8c>  // b.none
   1878c:	bl	aaa0 <free@plt>
   18790:	mov	x0, x20
   18794:	bl	a660 <malloc@plt>
   18798:	cbz	x0, 187b4 <gl_scratch_buffer_set_array_size@@Base+0xb0>
   1879c:	stp	x0, x20, [x19]
   187a0:	mov	w0, #0x1                   	// #1
   187a4:	ldp	x20, x19, [sp, #32]
   187a8:	ldr	x21, [sp, #16]
   187ac:	ldp	x29, x30, [sp], #48
   187b0:	ret
   187b4:	mov	w8, #0x400                 	// #1024
   187b8:	stp	x21, x8, [x19]
   187bc:	b	187a4 <gl_scratch_buffer_set_array_size@@Base+0xa0>

00000000000187c0 <gl_set_nx_create_empty@@Base>:
   187c0:	ldr	x4, [x0]
   187c4:	br	x4

00000000000187c8 <gl_set_size@@Base>:
   187c8:	ldr	x8, [x0]
   187cc:	ldr	x1, [x8, #8]
   187d0:	br	x1

00000000000187d4 <gl_set_search@@Base>:
   187d4:	ldr	x8, [x0]
   187d8:	ldr	x2, [x8, #16]
   187dc:	br	x2

00000000000187e0 <gl_set_nx_add@@Base>:
   187e0:	ldr	x8, [x0]
   187e4:	ldr	x2, [x8, #24]
   187e8:	br	x2

00000000000187ec <gl_set_remove@@Base>:
   187ec:	ldr	x8, [x0]
   187f0:	ldr	x2, [x8, #32]
   187f4:	br	x2

00000000000187f8 <gl_set_free@@Base>:
   187f8:	ldr	x8, [x0]
   187fc:	ldr	x1, [x8, #40]
   18800:	br	x1

0000000000018804 <gl_set_iterator@@Base>:
   18804:	ldr	x9, [x0]
   18808:	ldr	x1, [x9, #48]
   1880c:	br	x1

0000000000018810 <gl_set_iterator_next@@Base>:
   18810:	ldr	x8, [x0]
   18814:	ldr	x2, [x8, #56]
   18818:	br	x2

000000000001881c <gl_set_iterator_free@@Base>:
   1881c:	ldr	x8, [x0]
   18820:	ldr	x1, [x8, #64]
   18824:	br	x1

0000000000018828 <get_handler@@Base>:
   18828:	ldr	x0, [x0]
   1882c:	ret

0000000000018830 <gl_sockets_startup@@Base>:
   18830:	mov	w0, wzr
   18834:	ret

0000000000018838 <gl_sockets_cleanup@@Base>:
   18838:	mov	w0, wzr
   1883c:	ret

0000000000018840 <get_stat_atime_ns@@Base>:
   18840:	ldr	x0, [x0, #80]
   18844:	ret

0000000000018848 <get_stat_ctime_ns@@Base>:
   18848:	ldr	x0, [x0, #112]
   1884c:	ret

0000000000018850 <get_stat_mtime_ns@@Base>:
   18850:	ldr	x0, [x0, #96]
   18854:	ret

0000000000018858 <get_stat_birthtime_ns@@Base>:
   18858:	mov	x0, xzr
   1885c:	ret

0000000000018860 <get_stat_atime@@Base>:
   18860:	ldp	x8, x1, [x0, #72]
   18864:	mov	x0, x8
   18868:	ret

000000000001886c <get_stat_ctime@@Base>:
   1886c:	ldp	x8, x1, [x0, #104]
   18870:	mov	x0, x8
   18874:	ret

0000000000018878 <get_stat_mtime@@Base>:
   18878:	ldp	x8, x1, [x0, #88]
   1887c:	mov	x0, x8
   18880:	ret

0000000000018884 <get_stat_birthtime@@Base>:
   18884:	mov	x0, #0xffffffffffffffff    	// #-1
   18888:	mov	x1, #0xffffffffffffffff    	// #-1
   1888c:	ret

0000000000018890 <stat_time_normalize@@Base>:
   18890:	ret

0000000000018894 <statat@@Base>:
   18894:	mov	w3, wzr
   18898:	b	28328 <vasnprintf@@Base+0xc6c>

000000000001889c <lstatat@@Base>:
   1889c:	mov	w3, #0x100                 	// #256
   188a0:	b	28328 <vasnprintf@@Base+0xc6c>

00000000000188a4 <stdopen@@Base>:
   188a4:	stp	x29, x30, [sp, #-48]!
   188a8:	stp	x22, x21, [sp, #16]
   188ac:	stp	x20, x19, [sp, #32]
   188b0:	adrp	x20, 2a000 <vasnprintf@@Base+0x2944>
   188b4:	adrp	x21, 2a000 <vasnprintf@@Base+0x2944>
   188b8:	mov	w19, wzr
   188bc:	add	x20, x20, #0x855
   188c0:	add	x21, x21, #0x85f
   188c4:	mov	x29, sp
   188c8:	mov	w1, #0x1                   	// #1
   188cc:	mov	w0, w19
   188d0:	bl	ac00 <rpl_fcntl@plt>
   188d4:	tbz	w0, #31, 18910 <stdopen@@Base+0x6c>
   188d8:	cmp	w19, #0x0
   188dc:	cset	w22, eq  // eq = none
   188e0:	cbz	w19, 188f8 <stdopen@@Base+0x54>
   188e4:	mov	x0, x21
   188e8:	mov	w1, w22
   188ec:	bl	a6c0 <open@plt>
   188f0:	tbz	w0, #31, 18908 <stdopen@@Base+0x64>
   188f4:	b	18938 <stdopen@@Base+0x94>
   188f8:	mov	x0, x20
   188fc:	mov	w1, w22
   18900:	bl	a6c0 <open@plt>
   18904:	tbnz	w0, #31, 188e4 <stdopen@@Base+0x40>
   18908:	cmp	w0, #0x3
   1890c:	b.ge	18920 <stdopen@@Base+0x7c>  // b.tcont
   18910:	add	w19, w19, #0x1
   18914:	cmp	w19, #0x3
   18918:	b.ne	188c8 <stdopen@@Base+0x24>  // b.any
   1891c:	b	18924 <stdopen@@Base+0x80>
   18920:	bl	a8d0 <close@plt>
   18924:	mov	w0, wzr
   18928:	ldp	x20, x19, [sp, #32]
   1892c:	ldp	x22, x21, [sp, #16]
   18930:	ldp	x29, x30, [sp], #48
   18934:	ret
   18938:	bl	aec0 <__errno_location@plt>
   1893c:	ldr	w0, [x0]
   18940:	b	18928 <stdopen@@Base+0x84>

0000000000018944 <strnlen1@@Base>:
   18944:	stp	x29, x30, [sp, #-32]!
   18948:	stp	x20, x19, [sp, #16]
   1894c:	mov	x19, x1
   18950:	mov	w1, wzr
   18954:	mov	x2, x19
   18958:	mov	x29, sp
   1895c:	mov	x20, x0
   18960:	bl	acb0 <memchr@plt>
   18964:	sub	x8, x0, x20
   18968:	cmp	x0, #0x0
   1896c:	csinc	x0, x19, x8, eq  // eq = none
   18970:	ldp	x20, x19, [sp, #16]
   18974:	ldp	x29, x30, [sp], #32
   18978:	ret

000000000001897c <try_tempname@@Base>:
   1897c:	sub	sp, sp, #0x80
   18980:	stp	x29, x30, [sp, #32]
   18984:	stp	x28, x27, [sp, #48]
   18988:	stp	x26, x25, [sp, #64]
   1898c:	stp	x24, x23, [sp, #80]
   18990:	stp	x22, x21, [sp, #96]
   18994:	stp	x20, x19, [sp, #112]
   18998:	add	x29, sp, #0x20
   1899c:	mov	x20, x3
   189a0:	mov	x21, x2
   189a4:	mov	w23, w1
   189a8:	mov	x22, x0
   189ac:	bl	aec0 <__errno_location@plt>
   189b0:	ldr	w24, [x0]
   189b4:	mov	x19, x0
   189b8:	mov	x0, x22
   189bc:	bl	a370 <strlen@plt>
   189c0:	add	w8, w23, #0x6
   189c4:	cmp	w8, w0
   189c8:	b.gt	189fc <try_tempname@@Base+0x80>
   189cc:	sub	w8, w0, w23
   189d0:	sub	w8, w8, #0x6
   189d4:	add	x23, x22, w8, sxtw
   189d8:	ldr	w8, [x23]
   189dc:	ldrh	w9, [x23, #4]
   189e0:	mov	w10, #0x5858                	// #22616
   189e4:	movk	w10, #0x5858, lsl #16
   189e8:	mov	w11, #0x5858                	// #22616
   189ec:	eor	w8, w8, w10
   189f0:	eor	w9, w9, w11
   189f4:	orr	w8, w8, w9
   189f8:	cbz	w8, 18a28 <try_tempname@@Base+0xac>
   189fc:	mov	w0, #0xffffffff            	// #-1
   18a00:	mov	w8, #0x16                  	// #22
   18a04:	str	w8, [x19]
   18a08:	ldp	x20, x19, [sp, #112]
   18a0c:	ldp	x22, x21, [sp, #96]
   18a10:	ldp	x24, x23, [sp, #80]
   18a14:	ldp	x26, x25, [sp, #64]
   18a18:	ldp	x28, x27, [sp, #48]
   18a1c:	ldp	x29, x30, [sp, #32]
   18a20:	add	sp, sp, #0x80
   18a24:	ret
   18a28:	add	x0, sp, #0x10
   18a2c:	mov	x1, xzr
   18a30:	str	w24, [sp, #4]
   18a34:	bl	a780 <gettimeofday@plt>
   18a38:	ldp	x9, x8, [sp, #16]
   18a3c:	eor	x8, x9, x8, lsl #16
   18a40:	str	x8, [sp, #8]
   18a44:	bl	a620 <getpid@plt>
   18a48:	adrp	x25, 3d000 <base_len@@Base+0x2a06c>
   18a4c:	ldr	x10, [sp, #8]
   18a50:	ldr	x9, [x25, #2352]
   18a54:	mov	x27, #0x2109                	// #8457
   18a58:	sxtw	x8, w0
   18a5c:	movk	x27, #0x1084, lsl #16
   18a60:	mov	w26, #0xa2f8                	// #41720
   18a64:	movk	x27, #0x842, lsl #32
   18a68:	adrp	x24, 2a000 <vasnprintf@@Base+0x2944>
   18a6c:	eor	x8, x10, x8
   18a70:	movk	w26, #0x3, lsl #16
   18a74:	movk	x27, #0x8421, lsl #48
   18a78:	mov	w28, #0x3e                  	// #62
   18a7c:	add	x24, x24, #0x869
   18a80:	add	x8, x8, x9
   18a84:	str	x8, [x25, #2352]
   18a88:	mov	x10, #0x5b1b                	// #23323
   18a8c:	movk	x10, #0xa12a, lsl #16
   18a90:	movk	x10, #0xa63, lsl #32
   18a94:	movk	x10, #0x2219, lsl #48
   18a98:	mov	x12, #0x9d65                	// #40293
   18a9c:	umulh	x10, x8, x10
   18aa0:	movk	x12, #0xeb0a, lsl #16
   18aa4:	movk	x12, #0x9357, lsl #32
   18aa8:	lsr	x14, x10, #9
   18aac:	lsr	x10, x10, #10
   18ab0:	movk	x12, #0x48aa, lsl #48
   18ab4:	mov	x13, #0xac13                	// #44051
   18ab8:	umulh	x10, x10, x27
   18abc:	umulh	x12, x8, x12
   18ac0:	movk	x13, #0x68cb, lsl #16
   18ac4:	lsr	x10, x10, #4
   18ac8:	movk	x13, #0x544e, lsl #32
   18acc:	msub	x10, x10, x28, x14
   18ad0:	lsr	x14, x12, #22
   18ad4:	lsr	x12, x12, #23
   18ad8:	movk	x13, #0x2581, lsl #48
   18adc:	umulh	x12, x12, x27
   18ae0:	umulh	x13, x8, x13
   18ae4:	lsr	x12, x12, #4
   18ae8:	msub	x12, x12, x28, x14
   18aec:	lsr	x14, x13, #27
   18af0:	lsr	x13, x13, #28
   18af4:	lsr	x9, x8, #1
   18af8:	mov	x15, #0x243d                	// #9277
   18afc:	umulh	x13, x13, x27
   18b00:	umulh	x9, x9, x27
   18b04:	movk	x15, #0x95d9, lsl #16
   18b08:	lsr	x13, x13, #4
   18b0c:	movk	x15, #0x9f5e, lsl #32
   18b10:	msub	x13, x13, x28, x14
   18b14:	lsr	x14, x9, #4
   18b18:	lsr	x9, x9, #5
   18b1c:	lsr	x11, x8, #3
   18b20:	movk	x15, #0x2332, lsl #48
   18b24:	umulh	x9, x9, x27
   18b28:	umulh	x11, x11, x15
   18b2c:	msub	x8, x14, x28, x8
   18b30:	lsr	x9, x9, #4
   18b34:	msub	x9, x9, x28, x14
   18b38:	lsr	x14, x11, #12
   18b3c:	lsr	x11, x11, #13
   18b40:	ldrb	w8, [x24, x8]
   18b44:	ldrb	w10, [x24, x10]
   18b48:	umulh	x11, x11, x27
   18b4c:	lsr	x11, x11, #4
   18b50:	msub	x11, x11, x28, x14
   18b54:	strb	w8, [x23]
   18b58:	strb	w10, [x23, #2]
   18b5c:	ldrb	w8, [x24, x12]
   18b60:	ldrb	w9, [x24, x9]
   18b64:	ldrb	w10, [x24, x11]
   18b68:	ldrb	w11, [x24, x13]
   18b6c:	mov	x0, x22
   18b70:	mov	x1, x21
   18b74:	strb	w8, [x23, #4]
   18b78:	strb	w9, [x23, #1]
   18b7c:	strb	w10, [x23, #3]
   18b80:	strb	w11, [x23, #5]
   18b84:	blr	x20
   18b88:	tbz	w0, #31, 18bbc <try_tempname@@Base+0x240>
   18b8c:	ldr	w8, [x19]
   18b90:	cmp	w8, #0x11
   18b94:	b.ne	18bc4 <try_tempname@@Base+0x248>  // b.any
   18b98:	ldr	x8, [x25, #2352]
   18b9c:	mov	w9, #0x1e61                	// #7777
   18ba0:	subs	w26, w26, #0x1
   18ba4:	add	x8, x8, x9
   18ba8:	str	x8, [x25, #2352]
   18bac:	b.ne	18a88 <try_tempname@@Base+0x10c>  // b.any
   18bb0:	mov	w0, #0xffffffff            	// #-1
   18bb4:	mov	w8, #0x11                  	// #17
   18bb8:	b	18a04 <try_tempname@@Base+0x88>
   18bbc:	ldr	w8, [sp, #4]
   18bc0:	b	18a04 <try_tempname@@Base+0x88>
   18bc4:	mov	w0, #0xffffffff            	// #-1
   18bc8:	b	18a08 <try_tempname@@Base+0x8c>

0000000000018bcc <gen_tempname@@Base>:
   18bcc:	sub	sp, sp, #0x20
   18bd0:	stp	x29, x30, [sp, #16]
   18bd4:	add	x29, sp, #0x10
   18bd8:	cmp	w3, #0x3
   18bdc:	stur	w2, [x29, #-4]
   18be0:	b.cs	18c04 <gen_tempname@@Base+0x38>  // b.hs, b.nlast
   18be4:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   18be8:	add	x8, x8, #0xca0
   18bec:	ldr	x3, [x8, w3, sxtw #3]
   18bf0:	sub	x2, x29, #0x4
   18bf4:	bl	a890 <try_tempname@plt>
   18bf8:	ldp	x29, x30, [sp, #16]
   18bfc:	add	sp, sp, #0x20
   18c00:	ret
   18c04:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   18c08:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   18c0c:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   18c10:	add	x0, x0, #0x8a8
   18c14:	add	x1, x1, #0x8cb
   18c18:	add	x3, x3, #0x8d6
   18c1c:	mov	w2, #0x13f                 	// #319
   18c20:	bl	aeb0 <__assert_fail@plt>
   18c24:	ldr	w8, [x1]
   18c28:	mov	w9, #0xc2                  	// #194
   18c2c:	mov	w2, #0x180                 	// #384
   18c30:	and	w8, w8, #0xfffffffc
   18c34:	orr	w1, w8, w9
   18c38:	b	a6c0 <open@plt>
   18c3c:	mov	w1, #0x1c0                 	// #448
   18c40:	b	af70 <mkdir@plt>
   18c44:	sub	sp, sp, #0xa0
   18c48:	mov	x1, sp
   18c4c:	stp	x29, x30, [sp, #128]
   18c50:	str	x19, [sp, #144]
   18c54:	add	x29, sp, #0x80
   18c58:	bl	28318 <vasnprintf@@Base+0xc5c>
   18c5c:	mov	w19, w0
   18c60:	bl	aec0 <__errno_location@plt>
   18c64:	cbz	w19, 18c74 <gen_tempname@@Base+0xa8>
   18c68:	ldr	w8, [x0]
   18c6c:	cmp	w8, #0x4b
   18c70:	b.ne	18c7c <gen_tempname@@Base+0xb0>  // b.any
   18c74:	mov	w8, #0x11                  	// #17
   18c78:	str	w8, [x0]
   18c7c:	ldr	w8, [x0]
   18c80:	ldr	x19, [sp, #144]
   18c84:	ldp	x29, x30, [sp, #128]
   18c88:	cmp	w8, #0x2
   18c8c:	csetm	w0, ne  // ne = any
   18c90:	add	sp, sp, #0xa0
   18c94:	ret

0000000000018c98 <make_timespec@@Base>:
   18c98:	ret

0000000000018c9c <timespec_cmp@@Base>:
   18c9c:	cmp	x0, x2
   18ca0:	b.ge	18cac <timespec_cmp@@Base+0x10>  // b.tcont
   18ca4:	mov	w0, #0xffffffff            	// #-1
   18ca8:	ret
   18cac:	b.le	18cb8 <timespec_cmp@@Base+0x1c>
   18cb0:	mov	w0, #0x1                   	// #1
   18cb4:	ret
   18cb8:	sub	w0, w1, w3
   18cbc:	ret

0000000000018cc0 <timespec_sign@@Base>:
   18cc0:	orr	x8, x1, x0
   18cc4:	cmp	x8, #0x0
   18cc8:	cset	w8, ne  // ne = any
   18ccc:	cmp	x0, #0x0
   18cd0:	csinv	w0, w8, wzr, ge  // ge = tcont
   18cd4:	ret

0000000000018cd8 <timespectod@@Base>:
   18cd8:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   18cdc:	ldr	d0, [x8, #2304]
   18ce0:	scvtf	d2, x1
   18ce4:	scvtf	d1, x0
   18ce8:	fdiv	d0, d2, d0
   18cec:	fadd	d0, d0, d1
   18cf0:	ret

0000000000018cf4 <dup_safer@@Base>:
   18cf4:	mov	w2, #0x3                   	// #3
   18cf8:	mov	w1, wzr
   18cfc:	b	ac00 <rpl_fcntl@plt>

0000000000018d00 <fd_safer@@Base>:
   18d00:	stp	x29, x30, [sp, #-48]!
   18d04:	stp	x20, x19, [sp, #32]
   18d08:	mov	w19, w0
   18d0c:	cmp	w0, #0x2
   18d10:	stp	x22, x21, [sp, #16]
   18d14:	mov	x29, sp
   18d18:	b.hi	18d48 <fd_safer@@Base+0x48>  // b.pmore
   18d1c:	mov	w0, w19
   18d20:	bl	aa90 <dup_safer@plt>
   18d24:	mov	w20, w0
   18d28:	bl	aec0 <__errno_location@plt>
   18d2c:	ldr	w22, [x0]
   18d30:	mov	x21, x0
   18d34:	mov	w0, w19
   18d38:	bl	a8d0 <close@plt>
   18d3c:	str	w22, [x21]
   18d40:	mov	w0, w20
   18d44:	b	18d4c <fd_safer@@Base+0x4c>
   18d48:	mov	w0, w19
   18d4c:	ldp	x20, x19, [sp, #32]
   18d50:	ldp	x22, x21, [sp, #16]
   18d54:	ldp	x29, x30, [sp], #48
   18d58:	ret

0000000000018d5c <pipe_safer@@Base>:
   18d5c:	stp	x29, x30, [sp, #-48]!
   18d60:	stp	x22, x21, [sp, #16]
   18d64:	stp	x20, x19, [sp, #32]
   18d68:	mov	x29, sp
   18d6c:	mov	x19, x0
   18d70:	bl	a500 <pipe@plt>
   18d74:	cbnz	w0, 18dc4 <pipe_safer@@Base+0x68>
   18d78:	mov	x8, xzr
   18d7c:	ldr	w0, [x19, x8, lsl #2]
   18d80:	mov	x21, x8
   18d84:	bl	af40 <fd_safer@plt>
   18d88:	str	w0, [x19, x21, lsl #2]
   18d8c:	tbnz	w0, #31, 18da0 <pipe_safer@@Base+0x44>
   18d90:	mov	w8, #0x1                   	// #1
   18d94:	cbz	x21, 18d7c <pipe_safer@@Base+0x20>
   18d98:	mov	w0, wzr
   18d9c:	b	18dc8 <pipe_safer@@Base+0x6c>
   18da0:	bl	aec0 <__errno_location@plt>
   18da4:	mov	x8, #0x100000000           	// #4294967296
   18da8:	sub	x8, x8, x21, lsl #32
   18dac:	lsr	x8, x8, #30
   18db0:	mov	x20, x0
   18db4:	ldr	w22, [x0]
   18db8:	ldr	w0, [x19, x8]
   18dbc:	bl	a8d0 <close@plt>
   18dc0:	str	w22, [x20]
   18dc4:	mov	w0, #0xffffffff            	// #-1
   18dc8:	ldp	x20, x19, [sp, #32]
   18dcc:	ldp	x22, x21, [sp, #16]
   18dd0:	ldp	x29, x30, [sp], #48
   18dd4:	ret

0000000000018dd8 <fdutimens@@Base>:
   18dd8:	sub	sp, sp, #0x140
   18ddc:	stp	x29, x30, [sp, #240]
   18de0:	add	x29, sp, #0xf0
   18de4:	cmp	x2, #0x0
   18de8:	sub	x8, x29, #0x20
   18dec:	stp	x22, x21, [sp, #288]
   18df0:	stp	x20, x19, [sp, #304]
   18df4:	mov	x21, x2
   18df8:	mov	x20, x1
   18dfc:	mov	w19, w0
   18e00:	csel	x22, xzr, x8, eq  // eq = none
   18e04:	stp	x28, x25, [sp, #256]
   18e08:	stp	x24, x23, [sp, #272]
   18e0c:	stur	x22, [x29, #-40]
   18e10:	cbz	x2, 18e3c <fdutimens@@Base+0x64>
   18e14:	ldr	q0, [x21]
   18e18:	mov	x0, x22
   18e1c:	stur	q0, [x29, #-32]
   18e20:	ldr	q0, [x21, #16]
   18e24:	stur	q0, [x29, #-16]
   18e28:	bl	19144 <fdutimens@@Base+0x36c>
   18e2c:	mov	w23, w0
   18e30:	tbnz	w0, #31, 18e54 <fdutimens@@Base+0x7c>
   18e34:	tbnz	w19, #31, 18e44 <fdutimens@@Base+0x6c>
   18e38:	b	18e78 <fdutimens@@Base+0xa0>
   18e3c:	mov	w23, wzr
   18e40:	tbz	w19, #31, 18e78 <fdutimens@@Base+0xa0>
   18e44:	cbnz	x20, 18e78 <fdutimens@@Base+0xa0>
   18e48:	bl	aec0 <__errno_location@plt>
   18e4c:	mov	w8, #0x9                   	// #9
   18e50:	str	w8, [x0]
   18e54:	mov	w24, #0xffffffff            	// #-1
   18e58:	mov	w0, w24
   18e5c:	ldp	x20, x19, [sp, #304]
   18e60:	ldp	x22, x21, [sp, #288]
   18e64:	ldp	x24, x23, [sp, #272]
   18e68:	ldp	x28, x25, [sp, #256]
   18e6c:	ldp	x29, x30, [sp, #240]
   18e70:	add	sp, sp, #0x140
   18e74:	ret
   18e78:	adrp	x25, 3d000 <base_len@@Base+0x2a06c>
   18e7c:	ldr	w8, [x25, #2360]
   18e80:	tbnz	w8, #31, 18f3c <fdutimens@@Base+0x164>
   18e84:	cmp	w23, #0x2
   18e88:	b.ne	18eec <fdutimens@@Base+0x114>  // b.any
   18e8c:	add	x1, sp, #0x48
   18e90:	tbnz	w19, #31, 18ea4 <fdutimens@@Base+0xcc>
   18e94:	mov	w0, w19
   18e98:	bl	28308 <vasnprintf@@Base+0xc4c>
   18e9c:	cbnz	w0, 18e54 <fdutimens@@Base+0x7c>
   18ea0:	b	18eb0 <fdutimens@@Base+0xd8>
   18ea4:	mov	x0, x20
   18ea8:	bl	282f8 <vasnprintf@@Base+0xc3c>
   18eac:	cbnz	w0, 18e54 <fdutimens@@Base+0x7c>
   18eb0:	ldr	x8, [x22, #8]
   18eb4:	mov	w9, #0x3ffffffe            	// #1073741822
   18eb8:	cmp	x8, x9
   18ebc:	add	x8, sp, #0x48
   18ec0:	b.ne	18ed0 <fdutimens@@Base+0xf8>  // b.any
   18ec4:	ldur	q0, [x8, #72]
   18ec8:	str	q0, [x22]
   18ecc:	b	18ee8 <fdutimens@@Base+0x110>
   18ed0:	ldr	x9, [x22, #24]
   18ed4:	mov	w10, #0x3ffffffe            	// #1073741822
   18ed8:	cmp	x9, x10
   18edc:	b.ne	18ee8 <fdutimens@@Base+0x110>  // b.any
   18ee0:	ldur	q0, [x8, #88]
   18ee4:	str	q0, [x22, #16]
   18ee8:	mov	w23, #0x3                   	// #3
   18eec:	tbz	w19, #31, 18f18 <fdutimens@@Base+0x140>
   18ef0:	mov	w0, #0xffffff9c            	// #-100
   18ef4:	mov	x1, x20
   18ef8:	mov	x2, x22
   18efc:	mov	w3, wzr
   18f00:	bl	abd0 <utimensat@plt>
   18f04:	cmp	w0, #0x1
   18f08:	b.lt	190d8 <fdutimens@@Base+0x300>  // b.tstop
   18f0c:	bl	aec0 <__errno_location@plt>
   18f10:	mov	w8, #0x26                  	// #38
   18f14:	str	w8, [x0]
   18f18:	tbnz	w19, #31, 18f3c <fdutimens@@Base+0x164>
   18f1c:	mov	w0, w19
   18f20:	mov	x1, x22
   18f24:	bl	a730 <futimens@plt>
   18f28:	cmp	w0, #0x1
   18f2c:	b.lt	190ac <fdutimens@@Base+0x2d4>  // b.tstop
   18f30:	bl	aec0 <__errno_location@plt>
   18f34:	mov	w8, #0x26                  	// #38
   18f38:	str	w8, [x0]
   18f3c:	mov	w8, #0xffffffff            	// #-1
   18f40:	adrp	x9, 3d000 <base_len@@Base+0x2a06c>
   18f44:	str	w8, [x25, #2360]
   18f48:	str	w8, [x9, #2364]
   18f4c:	cbz	w23, 18f70 <fdutimens@@Base+0x198>
   18f50:	cmp	w23, #0x3
   18f54:	b.ne	18fec <fdutimens@@Base+0x214>  // b.any
   18f58:	cbz	x21, 19004 <fdutimens@@Base+0x22c>
   18f5c:	add	x0, sp, #0x48
   18f60:	sub	x1, x29, #0x28
   18f64:	bl	191fc <fdutimens@@Base+0x424>
   18f68:	tbnz	w0, #0, 1913c <fdutimens@@Base+0x364>
   18f6c:	ldur	x22, [x29, #-40]
   18f70:	cbz	x22, 1900c <fdutimens@@Base+0x234>
   18f74:	ldr	x8, [x22]
   18f78:	mov	x9, #0xf7cf                	// #63439
   18f7c:	movk	x9, #0xe353, lsl #16
   18f80:	movk	x9, #0x9ba5, lsl #32
   18f84:	str	x8, [sp, #40]
   18f88:	ldr	x8, [x22, #8]
   18f8c:	movk	x9, #0x20c4, lsl #48
   18f90:	add	x21, sp, #0x28
   18f94:	smulh	x8, x8, x9
   18f98:	asr	x10, x8, #7
   18f9c:	add	x8, x10, x8, lsr #63
   18fa0:	str	x8, [sp, #48]
   18fa4:	ldr	x8, [x22, #16]
   18fa8:	str	x8, [sp, #56]
   18fac:	ldr	x8, [x22, #24]
   18fb0:	smulh	x8, x8, x9
   18fb4:	asr	x9, x8, #7
   18fb8:	add	x8, x9, x8, lsr #63
   18fbc:	str	x8, [sp, #64]
   18fc0:	tbnz	w19, #31, 19014 <fdutimens@@Base+0x23c>
   18fc4:	mov	w0, w19
   18fc8:	mov	x1, xzr
   18fcc:	mov	x2, x21
   18fd0:	bl	a690 <futimesat@plt>
   18fd4:	cbz	w0, 1902c <fdutimens@@Base+0x254>
   18fd8:	cbz	x20, 18e54 <fdutimens@@Base+0x7c>
   18fdc:	mov	x0, x20
   18fe0:	mov	x1, x21
   18fe4:	bl	ad40 <utimes@plt>
   18fe8:	b	19024 <fdutimens@@Base+0x24c>
   18fec:	add	x1, sp, #0x48
   18ff0:	tbnz	w19, #31, 190c8 <fdutimens@@Base+0x2f0>
   18ff4:	mov	w0, w19
   18ff8:	bl	28308 <vasnprintf@@Base+0xc4c>
   18ffc:	cbnz	w0, 18e54 <fdutimens@@Base+0x7c>
   19000:	b	18f58 <fdutimens@@Base+0x180>
   19004:	mov	x22, xzr
   19008:	cbnz	x22, 18f74 <fdutimens@@Base+0x19c>
   1900c:	mov	x21, xzr
   19010:	tbz	w19, #31, 18fc4 <fdutimens@@Base+0x1ec>
   19014:	mov	w0, #0xffffff9c            	// #-100
   19018:	mov	x1, x20
   1901c:	mov	x2, x21
   19020:	bl	a690 <futimesat@plt>
   19024:	mov	w24, w0
   19028:	b	18e58 <fdutimens@@Base+0x80>
   1902c:	cbz	x21, 1913c <fdutimens@@Base+0x364>
   19030:	ldr	x23, [x21, #8]
   19034:	ldr	x20, [x21, #24]
   19038:	mov	w22, #0xa11f                	// #41247
   1903c:	movk	w22, #0x7, lsl #16
   19040:	cmp	x23, x22
   19044:	b.gt	19050 <fdutimens@@Base+0x278>
   19048:	cmp	x20, x22
   1904c:	b.le	1913c <fdutimens@@Base+0x364>
   19050:	add	x1, sp, #0x48
   19054:	mov	w0, w19
   19058:	bl	28308 <vasnprintf@@Base+0xc4c>
   1905c:	cbnz	w0, 1913c <fdutimens@@Base+0x364>
   19060:	ldr	q0, [x21]
   19064:	add	x9, x21, #0x10
   19068:	ldr	x10, [x21]
   1906c:	ldr	x8, [x21, #16]
   19070:	str	q0, [sp]
   19074:	ldr	q0, [x9]
   19078:	ldr	x11, [sp, #144]
   1907c:	ldr	x9, [sp, #160]
   19080:	mov	x2, xzr
   19084:	cmp	x23, x22
   19088:	str	q0, [sp, #16]
   1908c:	b.le	19104 <fdutimens@@Base+0x32c>
   19090:	sub	x10, x11, x10
   19094:	cmp	x10, #0x1
   19098:	b.ne	19104 <fdutimens@@Base+0x32c>  // b.any
   1909c:	ldr	x10, [sp, #152]
   190a0:	cbz	x10, 190fc <fdutimens@@Base+0x324>
   190a4:	mov	x2, xzr
   190a8:	b	19104 <fdutimens@@Base+0x32c>
   190ac:	mov	w24, w0
   190b0:	cbz	w0, 190f0 <fdutimens@@Base+0x318>
   190b4:	bl	aec0 <__errno_location@plt>
   190b8:	ldr	w8, [x0]
   190bc:	cmp	w8, #0x26
   190c0:	b.eq	18f3c <fdutimens@@Base+0x164>  // b.none
   190c4:	b	190f0 <fdutimens@@Base+0x318>
   190c8:	mov	x0, x20
   190cc:	bl	282f8 <vasnprintf@@Base+0xc3c>
   190d0:	cbnz	w0, 18e54 <fdutimens@@Base+0x7c>
   190d4:	b	18f58 <fdutimens@@Base+0x180>
   190d8:	mov	w24, w0
   190dc:	cbz	w0, 190f0 <fdutimens@@Base+0x318>
   190e0:	bl	aec0 <__errno_location@plt>
   190e4:	ldr	w8, [x0]
   190e8:	cmp	w8, #0x26
   190ec:	b.eq	18f18 <fdutimens@@Base+0x140>  // b.none
   190f0:	mov	w8, #0x1                   	// #1
   190f4:	str	w8, [x25, #2360]
   190f8:	b	18e58 <fdutimens@@Base+0x80>
   190fc:	mov	x2, sp
   19100:	str	xzr, [sp, #8]
   19104:	cmp	x20, x22
   19108:	b.le	19120 <fdutimens@@Base+0x348>
   1910c:	sub	x8, x9, x8
   19110:	cmp	x8, #0x1
   19114:	b.ne	19120 <fdutimens@@Base+0x348>  // b.any
   19118:	ldr	x8, [sp, #168]
   1911c:	cbz	x8, 19128 <fdutimens@@Base+0x350>
   19120:	cbnz	x2, 19130 <fdutimens@@Base+0x358>
   19124:	b	1913c <fdutimens@@Base+0x364>
   19128:	mov	x2, sp
   1912c:	str	xzr, [sp, #24]
   19130:	mov	w0, w19
   19134:	mov	x1, xzr
   19138:	bl	a690 <futimesat@plt>
   1913c:	mov	w24, wzr
   19140:	b	18e58 <fdutimens@@Base+0x80>
   19144:	stp	x29, x30, [sp, #-16]!
   19148:	ldr	x10, [x0, #8]
   1914c:	mov	w9, #0xca00                	// #51712
   19150:	movk	w9, #0x3b9a, lsl #16
   19154:	mov	x29, sp
   19158:	cmp	x10, x9
   1915c:	and	x11, x10, #0xfffffffffffffffe
   19160:	b.cc	19170 <fdutimens@@Base+0x398>  // b.lo, b.ul, b.last
   19164:	mov	w8, #0x3ffffffe            	// #1073741822
   19168:	cmp	x11, x8
   1916c:	b.ne	1918c <fdutimens@@Base+0x3b4>  // b.any
   19170:	ldr	x8, [x0, #24]
   19174:	cmp	x8, x9
   19178:	and	x9, x8, #0xfffffffffffffffe
   1917c:	b.cc	191a0 <fdutimens@@Base+0x3c8>  // b.lo, b.ul, b.last
   19180:	mov	w12, #0x3ffffffe            	// #1073741822
   19184:	cmp	x9, x12
   19188:	b.eq	191a0 <fdutimens@@Base+0x3c8>  // b.none
   1918c:	bl	aec0 <__errno_location@plt>
   19190:	mov	w8, #0x16                  	// #22
   19194:	str	w8, [x0]
   19198:	mov	w0, #0xffffffff            	// #-1
   1919c:	b	191f4 <fdutimens@@Base+0x41c>
   191a0:	mov	w12, #0x3ffffffe            	// #1073741822
   191a4:	cmp	x11, x12
   191a8:	b.ne	191c4 <fdutimens@@Base+0x3ec>  // b.any
   191ac:	mov	w11, #0x3ffffffe            	// #1073741822
   191b0:	cmp	x10, x11
   191b4:	cset	w10, eq  // eq = none
   191b8:	mov	w11, #0x1                   	// #1
   191bc:	str	xzr, [x0]
   191c0:	b	191cc <fdutimens@@Base+0x3f4>
   191c4:	mov	w11, wzr
   191c8:	mov	w10, wzr
   191cc:	mov	w12, #0x3ffffffe            	// #1073741822
   191d0:	cmp	x9, x12
   191d4:	b.ne	191ec <fdutimens@@Base+0x414>  // b.any
   191d8:	mov	w9, #0x3ffffffe            	// #1073741822
   191dc:	cmp	x8, x9
   191e0:	cinc	w10, w10, eq  // eq = none
   191e4:	mov	w11, #0x1                   	// #1
   191e8:	str	xzr, [x0, #16]
   191ec:	cmp	w10, #0x1
   191f0:	cinc	w0, w11, eq  // eq = none
   191f4:	ldp	x29, x30, [sp], #16
   191f8:	ret
   191fc:	stp	x29, x30, [sp, #-32]!
   19200:	stp	x20, x19, [sp, #16]
   19204:	ldr	x19, [x1]
   19208:	mov	w9, #0x3fffffff            	// #1073741823
   1920c:	mov	x20, x0
   19210:	mov	x29, sp
   19214:	ldr	x8, [x19, #8]
   19218:	cmp	x8, x9
   1921c:	b.eq	19244 <fdutimens@@Base+0x46c>  // b.none
   19220:	mov	w9, #0x3ffffffe            	// #1073741822
   19224:	cmp	x8, x9
   19228:	b.ne	19274 <fdutimens@@Base+0x49c>  // b.any
   1922c:	ldr	x8, [x19, #24]
   19230:	mov	w9, #0x3ffffffe            	// #1073741822
   19234:	cmp	x8, x9
   19238:	b.ne	19260 <fdutimens@@Base+0x488>  // b.any
   1923c:	mov	w0, #0x1                   	// #1
   19240:	b	192ac <fdutimens@@Base+0x4d4>
   19244:	ldr	x8, [x19, #24]
   19248:	mov	w9, #0x3fffffff            	// #1073741823
   1924c:	cmp	x8, x9
   19250:	b.ne	1926c <fdutimens@@Base+0x494>  // b.any
   19254:	mov	w0, wzr
   19258:	str	xzr, [x1]
   1925c:	b	192ac <fdutimens@@Base+0x4d4>
   19260:	ldur	q0, [x20, #72]
   19264:	str	q0, [x19]
   19268:	b	19274 <fdutimens@@Base+0x49c>
   1926c:	mov	x0, x19
   19270:	bl	af90 <gettime@plt>
   19274:	ldr	x8, [x19, #24]
   19278:	mov	w9, #0x3fffffff            	// #1073741823
   1927c:	cmp	x8, x9
   19280:	b.eq	192a0 <fdutimens@@Base+0x4c8>  // b.none
   19284:	mov	w9, #0x3ffffffe            	// #1073741822
   19288:	cmp	x8, x9
   1928c:	b.ne	192a8 <fdutimens@@Base+0x4d0>  // b.any
   19290:	ldur	q0, [x20, #88]
   19294:	mov	w0, wzr
   19298:	str	q0, [x19, #16]
   1929c:	b	192ac <fdutimens@@Base+0x4d4>
   192a0:	add	x0, x19, #0x10
   192a4:	bl	af90 <gettime@plt>
   192a8:	mov	w0, wzr
   192ac:	ldp	x20, x19, [sp, #16]
   192b0:	ldp	x29, x30, [sp], #32
   192b4:	ret

00000000000192b8 <utimens@@Base>:
   192b8:	mov	x8, x0
   192bc:	mov	w0, #0xffffffff            	// #-1
   192c0:	mov	x2, x1
   192c4:	mov	x1, x8
   192c8:	b	a9d0 <fdutimens@plt>

00000000000192cc <lutimens@@Base>:
   192cc:	sub	sp, sp, #0xf0
   192d0:	stp	x29, x30, [sp, #176]
   192d4:	add	x29, sp, #0xb0
   192d8:	sub	x8, x29, #0x20
   192dc:	cmp	x1, #0x0
   192e0:	stp	x22, x21, [sp, #208]
   192e4:	stp	x20, x19, [sp, #224]
   192e8:	mov	x20, x1
   192ec:	mov	x19, x0
   192f0:	csel	x21, xzr, x8, eq  // eq = none
   192f4:	str	x23, [sp, #192]
   192f8:	stur	x21, [x29, #-40]
   192fc:	cbz	x1, 19324 <lutimens@@Base+0x58>
   19300:	ldr	q0, [x20]
   19304:	mov	x0, x21
   19308:	str	q0, [x8]
   1930c:	ldr	q0, [x20, #16]
   19310:	str	q0, [x8, #16]
   19314:	bl	19144 <fdutimens@@Base+0x36c>
   19318:	mov	w22, w0
   1931c:	tbz	w0, #31, 19328 <lutimens@@Base+0x5c>
   19320:	b	19418 <lutimens@@Base+0x14c>
   19324:	mov	w22, wzr
   19328:	adrp	x23, 3d000 <base_len@@Base+0x2a06c>
   1932c:	ldr	w8, [x23, #2364]
   19330:	tbnz	w8, #31, 193ac <lutimens@@Base+0xe0>
   19334:	cmp	w22, #0x2
   19338:	b.ne	19384 <lutimens@@Base+0xb8>  // b.any
   1933c:	add	x1, sp, #0x8
   19340:	mov	x0, x19
   19344:	bl	28318 <vasnprintf@@Base+0xc5c>
   19348:	cbnz	w0, 19418 <lutimens@@Base+0x14c>
   1934c:	ldr	x8, [x21, #8]
   19350:	mov	w9, #0x3ffffffe            	// #1073741822
   19354:	cmp	x8, x9
   19358:	b.ne	19368 <lutimens@@Base+0x9c>  // b.any
   1935c:	ldur	q0, [sp, #80]
   19360:	str	q0, [x21]
   19364:	b	19380 <lutimens@@Base+0xb4>
   19368:	ldr	x8, [x21, #24]
   1936c:	mov	w9, #0x3ffffffe            	// #1073741822
   19370:	cmp	x8, x9
   19374:	b.ne	19380 <lutimens@@Base+0xb4>  // b.any
   19378:	ldur	q0, [sp, #96]
   1937c:	str	q0, [x21, #16]
   19380:	mov	w22, #0x3                   	// #3
   19384:	mov	w0, #0xffffff9c            	// #-100
   19388:	mov	w3, #0x100                 	// #256
   1938c:	mov	x1, x19
   19390:	mov	x2, x21
   19394:	bl	abd0 <utimensat@plt>
   19398:	cmp	w0, #0x1
   1939c:	b.lt	19438 <lutimens@@Base+0x16c>  // b.tstop
   193a0:	bl	aec0 <__errno_location@plt>
   193a4:	mov	w8, #0x26                  	// #38
   193a8:	str	w8, [x0]
   193ac:	mov	w8, #0xffffffff            	// #-1
   193b0:	str	w8, [x23, #2364]
   193b4:	cbz	w22, 193ec <lutimens@@Base+0x120>
   193b8:	cmp	w22, #0x3
   193bc:	b.eq	193d0 <lutimens@@Base+0x104>  // b.none
   193c0:	add	x1, sp, #0x8
   193c4:	mov	x0, x19
   193c8:	bl	28318 <vasnprintf@@Base+0xc5c>
   193cc:	cbnz	w0, 19418 <lutimens@@Base+0x14c>
   193d0:	cbz	x20, 193fc <lutimens@@Base+0x130>
   193d4:	add	x0, sp, #0x8
   193d8:	sub	x1, x29, #0x28
   193dc:	bl	191fc <fdutimens@@Base+0x424>
   193e0:	tbz	w0, #0, 193fc <lutimens@@Base+0x130>
   193e4:	mov	w21, wzr
   193e8:	b	1941c <lutimens@@Base+0x150>
   193ec:	add	x1, sp, #0x8
   193f0:	mov	x0, x19
   193f4:	bl	28318 <vasnprintf@@Base+0xc5c>
   193f8:	cbnz	w0, 19418 <lutimens@@Base+0x14c>
   193fc:	ldr	w8, [sp, #24]
   19400:	and	w8, w8, #0xf000
   19404:	cmp	w8, #0xa, lsl #12
   19408:	b.ne	19464 <lutimens@@Base+0x198>  // b.any
   1940c:	bl	aec0 <__errno_location@plt>
   19410:	mov	w8, #0x26                  	// #38
   19414:	str	w8, [x0]
   19418:	mov	w21, #0xffffffff            	// #-1
   1941c:	mov	w0, w21
   19420:	ldp	x20, x19, [sp, #224]
   19424:	ldp	x22, x21, [sp, #208]
   19428:	ldr	x23, [sp, #192]
   1942c:	ldp	x29, x30, [sp, #176]
   19430:	add	sp, sp, #0xf0
   19434:	ret
   19438:	mov	w21, w0
   1943c:	cbz	w0, 19450 <lutimens@@Base+0x184>
   19440:	bl	aec0 <__errno_location@plt>
   19444:	ldr	w8, [x0]
   19448:	cmp	w8, #0x26
   1944c:	b.eq	193ac <lutimens@@Base+0xe0>  // b.none
   19450:	adrp	x8, 3d000 <base_len@@Base+0x2a06c>
   19454:	mov	w9, #0x1                   	// #1
   19458:	str	w9, [x8, #2360]
   1945c:	str	w9, [x23, #2364]
   19460:	b	1941c <lutimens@@Base+0x150>
   19464:	ldur	x2, [x29, #-40]
   19468:	mov	w0, #0xffffffff            	// #-1
   1946c:	mov	x1, x19
   19470:	bl	a9d0 <fdutimens@plt>
   19474:	mov	w21, w0
   19478:	b	1941c <lutimens@@Base+0x150>

000000000001947c <xnmalloc@@Base>:
   1947c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   19480:	udiv	x8, x8, x1
   19484:	cmp	x8, x0
   19488:	b.cc	19494 <xnmalloc@@Base+0x18>  // b.lo, b.ul, b.last
   1948c:	mul	x0, x1, x0
   19490:	b	a790 <xmalloc@plt>
   19494:	stp	x29, x30, [sp, #-16]!
   19498:	mov	x29, sp
   1949c:	bl	a910 <xalloc_die@plt>

00000000000194a0 <xmalloc@@Base>:
   194a0:	stp	x29, x30, [sp, #-32]!
   194a4:	str	x19, [sp, #16]
   194a8:	mov	x29, sp
   194ac:	mov	x19, x0
   194b0:	bl	a660 <malloc@plt>
   194b4:	cbz	x19, 194bc <xmalloc@@Base+0x1c>
   194b8:	cbz	x0, 194c8 <xmalloc@@Base+0x28>
   194bc:	ldr	x19, [sp, #16]
   194c0:	ldp	x29, x30, [sp], #32
   194c4:	ret
   194c8:	bl	a910 <xalloc_die@plt>

00000000000194cc <xnrealloc@@Base>:
   194cc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   194d0:	udiv	x8, x8, x2
   194d4:	cmp	x8, x1
   194d8:	b.cc	194e4 <xnrealloc@@Base+0x18>  // b.lo, b.ul, b.last
   194dc:	mul	x1, x2, x1
   194e0:	b	a6e0 <xrealloc@plt>
   194e4:	stp	x29, x30, [sp, #-16]!
   194e8:	mov	x29, sp
   194ec:	bl	a910 <xalloc_die@plt>

00000000000194f0 <xrealloc@@Base>:
   194f0:	stp	x29, x30, [sp, #-32]!
   194f4:	str	x19, [sp, #16]
   194f8:	mov	x19, x1
   194fc:	mov	x29, sp
   19500:	cbz	x0, 19514 <xrealloc@@Base+0x24>
   19504:	cbnz	x19, 19514 <xrealloc@@Base+0x24>
   19508:	bl	aaa0 <free@plt>
   1950c:	mov	x0, xzr
   19510:	b	19524 <xrealloc@@Base+0x34>
   19514:	mov	x1, x19
   19518:	bl	a860 <realloc@plt>
   1951c:	cbz	x19, 19524 <xrealloc@@Base+0x34>
   19520:	cbz	x0, 19530 <xrealloc@@Base+0x40>
   19524:	ldr	x19, [sp, #16]
   19528:	ldp	x29, x30, [sp], #32
   1952c:	ret
   19530:	bl	a910 <xalloc_die@plt>

0000000000019534 <x2nrealloc@@Base>:
   19534:	stp	x29, x30, [sp, #-16]!
   19538:	ldr	x9, [x1]
   1953c:	mov	x29, sp
   19540:	cbz	x0, 19564 <x2nrealloc@@Base+0x30>
   19544:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   19548:	movk	x8, #0x5554
   1954c:	udiv	x8, x8, x2
   19550:	cmp	x8, x9
   19554:	b.ls	1959c <x2nrealloc@@Base+0x68>  // b.plast
   19558:	add	x8, x9, x9, lsr #1
   1955c:	add	x9, x8, #0x1
   19560:	b	19588 <x2nrealloc@@Base+0x54>
   19564:	cbnz	x9, 19578 <x2nrealloc@@Base+0x44>
   19568:	mov	w8, #0x80                  	// #128
   1956c:	udiv	x8, x8, x2
   19570:	cmp	x2, #0x80
   19574:	cinc	x9, x8, hi  // hi = pmore
   19578:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1957c:	udiv	x8, x8, x2
   19580:	cmp	x8, x9
   19584:	b.cc	1959c <x2nrealloc@@Base+0x68>  // b.lo, b.ul, b.last
   19588:	mul	x8, x9, x2
   1958c:	str	x9, [x1]
   19590:	mov	x1, x8
   19594:	ldp	x29, x30, [sp], #16
   19598:	b	a6e0 <xrealloc@plt>
   1959c:	bl	a910 <xalloc_die@plt>

00000000000195a0 <xcharalloc@@Base>:
   195a0:	b	a790 <xmalloc@plt>

00000000000195a4 <x2realloc@@Base>:
   195a4:	stp	x29, x30, [sp, #-16]!
   195a8:	ldr	x8, [x1]
   195ac:	mov	x29, sp
   195b0:	cbz	x0, 195d0 <x2realloc@@Base+0x2c>
   195b4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   195b8:	movk	x9, #0x5554
   195bc:	cmp	x8, x9
   195c0:	b.cs	195d8 <x2realloc@@Base+0x34>  // b.hs, b.nlast
   195c4:	add	x8, x8, x8, lsr #1
   195c8:	add	x8, x8, #0x1
   195cc:	b	195e0 <x2realloc@@Base+0x3c>
   195d0:	cbz	x8, 195dc <x2realloc@@Base+0x38>
   195d4:	tbz	x8, #63, 195e0 <x2realloc@@Base+0x3c>
   195d8:	bl	a910 <xalloc_die@plt>
   195dc:	mov	w8, #0x80                  	// #128
   195e0:	str	x8, [x1]
   195e4:	mov	x1, x8
   195e8:	ldp	x29, x30, [sp], #16
   195ec:	b	a6e0 <xrealloc@plt>

00000000000195f0 <xzalloc@@Base>:
   195f0:	stp	x29, x30, [sp, #-32]!
   195f4:	str	x19, [sp, #16]
   195f8:	mov	x29, sp
   195fc:	mov	x19, x0
   19600:	bl	a790 <xmalloc@plt>
   19604:	mov	x2, x19
   19608:	ldr	x19, [sp, #16]
   1960c:	mov	w1, wzr
   19610:	ldp	x29, x30, [sp], #32
   19614:	b	a770 <memset@plt>

0000000000019618 <xcalloc@@Base>:
   19618:	stp	x29, x30, [sp, #-16]!
   1961c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   19620:	udiv	x8, x8, x1
   19624:	cmp	x8, x0
   19628:	mov	x29, sp
   1962c:	b.cc	19640 <xcalloc@@Base+0x28>  // b.lo, b.ul, b.last
   19630:	bl	a7f0 <calloc@plt>
   19634:	cbz	x0, 19640 <xcalloc@@Base+0x28>
   19638:	ldp	x29, x30, [sp], #16
   1963c:	ret
   19640:	bl	a910 <xalloc_die@plt>

0000000000019644 <xmemdup@@Base>:
   19644:	stp	x29, x30, [sp, #-32]!
   19648:	stp	x20, x19, [sp, #16]
   1964c:	mov	x20, x0
   19650:	mov	x0, x1
   19654:	mov	x29, sp
   19658:	mov	x19, x1
   1965c:	bl	a790 <xmalloc@plt>
   19660:	mov	x1, x20
   19664:	mov	x2, x19
   19668:	ldp	x20, x19, [sp, #16]
   1966c:	ldp	x29, x30, [sp], #32
   19670:	b	a2f0 <memcpy@plt>

0000000000019674 <xstrdup@@Base>:
   19674:	stp	x29, x30, [sp, #-32]!
   19678:	stp	x20, x19, [sp, #16]
   1967c:	mov	x29, sp
   19680:	mov	x19, x0
   19684:	bl	a370 <strlen@plt>
   19688:	add	x20, x0, #0x1
   1968c:	mov	x0, x20
   19690:	bl	a790 <xmalloc@plt>
   19694:	mov	x1, x19
   19698:	mov	x2, x20
   1969c:	ldp	x20, x19, [sp, #16]
   196a0:	ldp	x29, x30, [sp], #32
   196a4:	b	a2f0 <memcpy@plt>

00000000000196a8 <xalloc_die@@Base>:
   196a8:	stp	x29, x30, [sp, #-32]!
   196ac:	str	x19, [sp, #16]
   196b0:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   196b4:	ldr	x8, [x8, #3976]
   196b8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   196bc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   196c0:	add	x0, x0, #0xcb7
   196c4:	ldr	w19, [x8]
   196c8:	add	x1, x1, #0x908
   196cc:	mov	w2, #0x5                   	// #5
   196d0:	mov	x29, sp
   196d4:	bl	adc0 <dcgettext@plt>
   196d8:	adrp	x2, 28000 <vasnprintf@@Base+0x944>
   196dc:	mov	x3, x0
   196e0:	add	x2, x2, #0xcd8
   196e4:	mov	w0, w19
   196e8:	mov	w1, wzr
   196ec:	bl	a3a0 <error@plt>
   196f0:	bl	a980 <abort@plt>

00000000000196f4 <xgetcwd@@Base>:
   196f4:	stp	x29, x30, [sp, #-32]!
   196f8:	mov	x0, xzr
   196fc:	mov	x1, xzr
   19700:	str	x19, [sp, #16]
   19704:	mov	x29, sp
   19708:	bl	a330 <getcwd@plt>
   1970c:	mov	x19, x0
   19710:	cbnz	x0, 19724 <xgetcwd@@Base+0x30>
   19714:	bl	aec0 <__errno_location@plt>
   19718:	ldr	w8, [x0]
   1971c:	cmp	w8, #0xc
   19720:	b.eq	19734 <xgetcwd@@Base+0x40>  // b.none
   19724:	mov	x0, x19
   19728:	ldr	x19, [sp, #16]
   1972c:	ldp	x29, x30, [sp], #32
   19730:	ret
   19734:	bl	a910 <xalloc_die@plt>

0000000000019738 <gl_list_create_empty@@Base>:
   19738:	stp	x29, x30, [sp, #-16]!
   1973c:	ldr	x8, [x0]
   19740:	and	w4, w4, #0x1
   19744:	mov	x29, sp
   19748:	blr	x8
   1974c:	cbz	x0, 19758 <gl_list_create_empty@@Base+0x20>
   19750:	ldp	x29, x30, [sp], #16
   19754:	ret
   19758:	bl	a910 <xalloc_die@plt>

000000000001975c <gl_list_create@@Base>:
   1975c:	stp	x29, x30, [sp, #-16]!
   19760:	ldr	x8, [x0, #8]
   19764:	and	w4, w4, #0x1
   19768:	mov	x29, sp
   1976c:	blr	x8
   19770:	cbz	x0, 1977c <gl_list_create@@Base+0x20>
   19774:	ldp	x29, x30, [sp], #16
   19778:	ret
   1977c:	bl	a910 <xalloc_die@plt>

0000000000019780 <gl_list_node_set_value@@Base>:
   19780:	stp	x29, x30, [sp, #-16]!
   19784:	ldr	x8, [x0]
   19788:	mov	x29, sp
   1978c:	ldr	x8, [x8, #32]
   19790:	blr	x8
   19794:	tbnz	w0, #31, 197a0 <gl_list_node_set_value@@Base+0x20>
   19798:	ldp	x29, x30, [sp], #16
   1979c:	ret
   197a0:	bl	a910 <xalloc_die@plt>

00000000000197a4 <gl_list_set_at@@Base>:
   197a4:	stp	x29, x30, [sp, #-16]!
   197a8:	ldr	x8, [x0]
   197ac:	mov	x29, sp
   197b0:	ldr	x8, [x8, #64]
   197b4:	blr	x8
   197b8:	cbz	x0, 197c4 <gl_list_set_at@@Base+0x20>
   197bc:	ldp	x29, x30, [sp], #16
   197c0:	ret
   197c4:	bl	a910 <xalloc_die@plt>

00000000000197c8 <gl_list_add_first@@Base>:
   197c8:	stp	x29, x30, [sp, #-16]!
   197cc:	ldr	x8, [x0]
   197d0:	mov	x29, sp
   197d4:	ldr	x8, [x8, #88]
   197d8:	blr	x8
   197dc:	cbz	x0, 197e8 <gl_list_add_first@@Base+0x20>
   197e0:	ldp	x29, x30, [sp], #16
   197e4:	ret
   197e8:	bl	a910 <xalloc_die@plt>

00000000000197ec <gl_list_add_last@@Base>:
   197ec:	stp	x29, x30, [sp, #-16]!
   197f0:	ldr	x8, [x0]
   197f4:	mov	x29, sp
   197f8:	ldr	x8, [x8, #96]
   197fc:	blr	x8
   19800:	cbz	x0, 1980c <gl_list_add_last@@Base+0x20>
   19804:	ldp	x29, x30, [sp], #16
   19808:	ret
   1980c:	bl	a910 <xalloc_die@plt>

0000000000019810 <gl_list_add_before@@Base>:
   19810:	stp	x29, x30, [sp, #-16]!
   19814:	ldr	x8, [x0]
   19818:	mov	x29, sp
   1981c:	ldr	x8, [x8, #104]
   19820:	blr	x8
   19824:	cbz	x0, 19830 <gl_list_add_before@@Base+0x20>
   19828:	ldp	x29, x30, [sp], #16
   1982c:	ret
   19830:	bl	a910 <xalloc_die@plt>

0000000000019834 <gl_list_add_after@@Base>:
   19834:	stp	x29, x30, [sp, #-16]!
   19838:	ldr	x8, [x0]
   1983c:	mov	x29, sp
   19840:	ldr	x8, [x8, #112]
   19844:	blr	x8
   19848:	cbz	x0, 19854 <gl_list_add_after@@Base+0x20>
   1984c:	ldp	x29, x30, [sp], #16
   19850:	ret
   19854:	bl	a910 <xalloc_die@plt>

0000000000019858 <gl_list_add_at@@Base>:
   19858:	stp	x29, x30, [sp, #-16]!
   1985c:	ldr	x8, [x0]
   19860:	mov	x29, sp
   19864:	ldr	x8, [x8, #120]
   19868:	blr	x8
   1986c:	cbz	x0, 19878 <gl_list_add_at@@Base+0x20>
   19870:	ldp	x29, x30, [sp], #16
   19874:	ret
   19878:	bl	a910 <xalloc_die@plt>

000000000001987c <gl_sortedlist_add@@Base>:
   1987c:	stp	x29, x30, [sp, #-16]!
   19880:	ldr	x8, [x0]
   19884:	mov	x29, sp
   19888:	ldr	x8, [x8, #224]
   1988c:	blr	x8
   19890:	cbz	x0, 1989c <gl_sortedlist_add@@Base+0x20>
   19894:	ldp	x29, x30, [sp], #16
   19898:	ret
   1989c:	bl	a910 <xalloc_die@plt>

00000000000198a0 <gl_map_create_empty@@Base>:
   198a0:	stp	x29, x30, [sp, #-16]!
   198a4:	ldr	x8, [x0]
   198a8:	mov	x29, sp
   198ac:	blr	x8
   198b0:	cbz	x0, 198bc <gl_map_create_empty@@Base+0x1c>
   198b4:	ldp	x29, x30, [sp], #16
   198b8:	ret
   198bc:	bl	a910 <xalloc_die@plt>

00000000000198c0 <gl_map_put@@Base>:
   198c0:	sub	sp, sp, #0x30
   198c4:	stp	x29, x30, [sp, #16]
   198c8:	stp	x20, x19, [sp, #32]
   198cc:	ldr	x8, [x0]
   198d0:	add	x3, sp, #0x8
   198d4:	add	x29, sp, #0x10
   198d8:	mov	x20, x0
   198dc:	ldr	x8, [x8, #24]
   198e0:	blr	x8
   198e4:	mov	w19, w0
   198e8:	cbz	w0, 198f4 <gl_map_put@@Base+0x34>
   198ec:	tbz	w19, #31, 19904 <gl_map_put@@Base+0x44>
   198f0:	bl	a910 <xalloc_die@plt>
   198f4:	ldr	x8, [x20, #24]
   198f8:	cbz	x8, 19904 <gl_map_put@@Base+0x44>
   198fc:	ldr	x0, [sp, #8]
   19900:	blr	x8
   19904:	cmp	w19, #0x0
   19908:	ldp	x20, x19, [sp, #32]
   1990c:	ldp	x29, x30, [sp, #16]
   19910:	cset	w0, ne  // ne = any
   19914:	add	sp, sp, #0x30
   19918:	ret

000000000001991c <gl_map_getput@@Base>:
   1991c:	stp	x29, x30, [sp, #-16]!
   19920:	ldr	x8, [x0]
   19924:	mov	x29, sp
   19928:	ldr	x8, [x8, #24]
   1992c:	blr	x8
   19930:	tbnz	w0, #31, 19944 <gl_map_getput@@Base+0x28>
   19934:	cmp	w0, #0x0
   19938:	cset	w0, ne  // ne = any
   1993c:	ldp	x29, x30, [sp], #16
   19940:	ret
   19944:	bl	a910 <xalloc_die@plt>

0000000000019948 <gl_set_create_empty@@Base>:
   19948:	stp	x29, x30, [sp, #-16]!
   1994c:	ldr	x8, [x0]
   19950:	mov	x29, sp
   19954:	blr	x8
   19958:	cbz	x0, 19964 <gl_set_create_empty@@Base+0x1c>
   1995c:	ldp	x29, x30, [sp], #16
   19960:	ret
   19964:	bl	a910 <xalloc_die@plt>

0000000000019968 <gl_set_add@@Base>:
   19968:	stp	x29, x30, [sp, #-16]!
   1996c:	ldr	x8, [x0]
   19970:	mov	x29, sp
   19974:	ldr	x8, [x8, #24]
   19978:	blr	x8
   1997c:	tbnz	w0, #31, 19990 <gl_set_add@@Base+0x28>
   19980:	cmp	w0, #0x0
   19984:	cset	w0, ne  // ne = any
   19988:	ldp	x29, x30, [sp], #16
   1998c:	ret
   19990:	bl	a910 <xalloc_die@plt>

0000000000019994 <xsum@@Base>:
   19994:	adds	x8, x0, x1
   19998:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   1999c:	ret

00000000000199a0 <xsum3@@Base>:
   199a0:	adds	x8, x0, x1
   199a4:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   199a8:	adds	x8, x8, x2
   199ac:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   199b0:	ret

00000000000199b4 <xsum4@@Base>:
   199b4:	adds	x8, x0, x1
   199b8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   199bc:	adds	x8, x8, x2
   199c0:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   199c4:	adds	x8, x8, x3
   199c8:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   199cc:	ret

00000000000199d0 <xmax@@Base>:
   199d0:	cmp	x0, x1
   199d4:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   199d8:	ret

00000000000199dc <xstdopen@@Base>:
   199dc:	stp	x29, x30, [sp, #-32]!
   199e0:	stp	x20, x19, [sp, #16]
   199e4:	mov	x29, sp
   199e8:	bl	a6b0 <stdopen@plt>
   199ec:	cbz	w0, 19a30 <xstdopen@@Base+0x54>
   199f0:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   199f4:	ldr	x8, [x8, #3976]
   199f8:	mov	w19, w0
   199fc:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   19a00:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19a04:	ldr	w20, [x8]
   19a08:	add	x0, x0, #0xcb7
   19a0c:	add	x1, x1, #0x919
   19a10:	mov	w2, #0x5                   	// #5
   19a14:	bl	adc0 <dcgettext@plt>
   19a18:	mov	x2, x0
   19a1c:	mov	w0, w20
   19a20:	mov	w1, w19
   19a24:	ldp	x20, x19, [sp, #16]
   19a28:	ldp	x29, x30, [sp], #32
   19a2c:	b	a3a0 <error@plt>
   19a30:	ldp	x20, x19, [sp, #16]
   19a34:	ldp	x29, x30, [sp], #32
   19a38:	ret

0000000000019a3c <xstrndup@@Base>:
   19a3c:	stp	x29, x30, [sp, #-16]!
   19a40:	mov	x29, sp
   19a44:	bl	ab60 <strndup@plt>
   19a48:	cbz	x0, 19a54 <xstrndup@@Base+0x18>
   19a4c:	ldp	x29, x30, [sp], #16
   19a50:	ret
   19a54:	bl	a910 <xalloc_die@plt>

0000000000019a58 <xvasprintf@@Base>:
   19a58:	sub	sp, sp, #0x80
   19a5c:	str	x23, [sp, #80]
   19a60:	mov	x8, x0
   19a64:	mov	x23, xzr
   19a68:	mov	x9, x0
   19a6c:	stp	x29, x30, [sp, #64]
   19a70:	stp	x22, x21, [sp, #96]
   19a74:	stp	x20, x19, [sp, #112]
   19a78:	add	x29, sp, #0x40
   19a7c:	ldrb	w10, [x9]
   19a80:	cmp	w10, #0x25
   19a84:	b.ne	19aa0 <xvasprintf@@Base+0x48>  // b.any
   19a88:	ldrb	w10, [x9, #1]
   19a8c:	cmp	w10, #0x73
   19a90:	b.ne	19b2c <xvasprintf@@Base+0xd4>  // b.any
   19a94:	sub	x23, x23, #0x1
   19a98:	add	x9, x9, #0x2
   19a9c:	b	19a7c <xvasprintf@@Base+0x24>
   19aa0:	cbnz	w10, 19b2c <xvasprintf@@Base+0xd4>
   19aa4:	ldp	q1, q0, [x1]
   19aa8:	stp	q1, q0, [sp]
   19aac:	stp	q1, q0, [sp, #32]
   19ab0:	cbz	x23, 19b68 <xvasprintf@@Base+0x110>
   19ab4:	ldr	x20, [sp, #40]
   19ab8:	ldr	w8, [sp, #56]
   19abc:	mov	x19, xzr
   19ac0:	mov	x21, x23
   19ac4:	tbnz	w8, #31, 19ad0 <xvasprintf@@Base+0x78>
   19ac8:	mov	w22, w8
   19acc:	b	19ae8 <xvasprintf@@Base+0x90>
   19ad0:	add	w22, w8, #0x8
   19ad4:	cmn	w8, #0x8
   19ad8:	str	w22, [sp, #56]
   19adc:	b.gt	19ae8 <xvasprintf@@Base+0x90>
   19ae0:	add	x8, x20, w8, sxtw
   19ae4:	b	19af4 <xvasprintf@@Base+0x9c>
   19ae8:	ldr	x8, [sp, #32]
   19aec:	add	x9, x8, #0x8
   19af0:	str	x9, [sp, #32]
   19af4:	ldr	x0, [x8]
   19af8:	bl	a370 <strlen@plt>
   19afc:	adds	x8, x19, x0
   19b00:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
   19b04:	adds	x21, x21, #0x1
   19b08:	mov	w8, w22
   19b0c:	b.cc	19ac4 <xvasprintf@@Base+0x6c>  // b.lo, b.ul, b.last
   19b10:	lsr	x8, x19, #31
   19b14:	cbz	x8, 19b7c <xvasprintf@@Base+0x124>
   19b18:	bl	aec0 <__errno_location@plt>
   19b1c:	mov	w8, #0x4b                  	// #75
   19b20:	mov	x19, xzr
   19b24:	str	w8, [x0]
   19b28:	b	19bec <xvasprintf@@Base+0x194>
   19b2c:	ldp	q1, q0, [x1]
   19b30:	mov	x0, sp
   19b34:	add	x2, sp, #0x20
   19b38:	mov	x1, x8
   19b3c:	stp	q1, q0, [sp, #32]
   19b40:	bl	ab40 <vasprintf@plt>
   19b44:	tbnz	w0, #31, 19b50 <xvasprintf@@Base+0xf8>
   19b48:	ldr	x19, [sp]
   19b4c:	b	19bec <xvasprintf@@Base+0x194>
   19b50:	bl	aec0 <__errno_location@plt>
   19b54:	ldr	w8, [x0]
   19b58:	cmp	w8, #0xc
   19b5c:	b.eq	19c08 <xvasprintf@@Base+0x1b0>  // b.none
   19b60:	mov	x19, xzr
   19b64:	b	19bec <xvasprintf@@Base+0x194>
   19b68:	mov	w0, #0x1                   	// #1
   19b6c:	bl	a790 <xmalloc@plt>
   19b70:	mov	x19, x0
   19b74:	mov	x20, x0
   19b78:	b	19be8 <xvasprintf@@Base+0x190>
   19b7c:	add	x0, x19, #0x1
   19b80:	bl	a790 <xmalloc@plt>
   19b84:	mov	x19, x0
   19b88:	mov	x20, x0
   19b8c:	ldrsw	x8, [sp, #24]
   19b90:	tbz	w8, #31, 19bb0 <xvasprintf@@Base+0x158>
   19b94:	add	w9, w8, #0x8
   19b98:	cmn	w8, #0x8
   19b9c:	str	w9, [sp, #24]
   19ba0:	b.gt	19bb0 <xvasprintf@@Base+0x158>
   19ba4:	ldr	x9, [sp, #8]
   19ba8:	add	x8, x9, x8
   19bac:	b	19bbc <xvasprintf@@Base+0x164>
   19bb0:	ldr	x8, [sp]
   19bb4:	add	x9, x8, #0x8
   19bb8:	str	x9, [sp]
   19bbc:	ldr	x21, [x8]
   19bc0:	mov	x0, x21
   19bc4:	bl	a370 <strlen@plt>
   19bc8:	mov	x22, x0
   19bcc:	mov	x0, x20
   19bd0:	mov	x1, x21
   19bd4:	mov	x2, x22
   19bd8:	bl	a2f0 <memcpy@plt>
   19bdc:	adds	x23, x23, #0x1
   19be0:	add	x20, x20, x22
   19be4:	b.cc	19b8c <xvasprintf@@Base+0x134>  // b.lo, b.ul, b.last
   19be8:	strb	wzr, [x20]
   19bec:	mov	x0, x19
   19bf0:	ldp	x20, x19, [sp, #112]
   19bf4:	ldp	x22, x21, [sp, #96]
   19bf8:	ldr	x23, [sp, #80]
   19bfc:	ldp	x29, x30, [sp, #64]
   19c00:	add	sp, sp, #0x80
   19c04:	ret
   19c08:	bl	a910 <xalloc_die@plt>

0000000000019c0c <xasprintf@@Base>:
   19c0c:	sub	sp, sp, #0x120
   19c10:	stp	x29, x30, [sp, #256]
   19c14:	add	x29, sp, #0x100
   19c18:	mov	x8, #0xffffffffffffffc8    	// #-56
   19c1c:	mov	x9, sp
   19c20:	sub	x10, x29, #0x78
   19c24:	movk	x8, #0xff80, lsl #32
   19c28:	add	x11, x29, #0x20
   19c2c:	add	x9, x9, #0x80
   19c30:	add	x10, x10, #0x38
   19c34:	stp	x9, x8, [x29, #-16]
   19c38:	stp	x11, x10, [x29, #-32]
   19c3c:	stp	x1, x2, [x29, #-120]
   19c40:	stp	x3, x4, [x29, #-104]
   19c44:	stp	x5, x6, [x29, #-88]
   19c48:	stur	x7, [x29, #-72]
   19c4c:	stp	q0, q1, [sp]
   19c50:	ldp	q0, q1, [x29, #-32]
   19c54:	sub	x1, x29, #0x40
   19c58:	str	x28, [sp, #272]
   19c5c:	stp	q2, q3, [sp, #32]
   19c60:	stp	q4, q5, [sp, #64]
   19c64:	stp	q6, q7, [sp, #96]
   19c68:	stp	q0, q1, [x29, #-64]
   19c6c:	bl	ae10 <xvasprintf@plt>
   19c70:	ldr	x28, [sp, #272]
   19c74:	ldp	x29, x30, [sp, #256]
   19c78:	add	sp, sp, #0x120
   19c7c:	ret

0000000000019c80 <asnprintf@@Base>:
   19c80:	sub	sp, sp, #0x100
   19c84:	stp	x29, x30, [sp, #240]
   19c88:	add	x29, sp, #0xf0
   19c8c:	mov	x8, #0xffffffffffffffd8    	// #-40
   19c90:	mov	x9, sp
   19c94:	sub	x10, x29, #0x68
   19c98:	movk	x8, #0xff80, lsl #32
   19c9c:	add	x11, x29, #0x10
   19ca0:	add	x9, x9, #0x80
   19ca4:	add	x10, x10, #0x28
   19ca8:	stp	x9, x8, [x29, #-16]
   19cac:	stp	x11, x10, [x29, #-32]
   19cb0:	stp	x3, x4, [x29, #-104]
   19cb4:	stp	x5, x6, [x29, #-88]
   19cb8:	stur	x7, [x29, #-72]
   19cbc:	stp	q1, q2, [sp, #16]
   19cc0:	str	q0, [sp]
   19cc4:	ldp	q0, q1, [x29, #-32]
   19cc8:	sub	x3, x29, #0x40
   19ccc:	stp	q3, q4, [sp, #48]
   19cd0:	stp	q5, q6, [sp, #80]
   19cd4:	str	q7, [sp, #112]
   19cd8:	stp	q0, q1, [x29, #-64]
   19cdc:	bl	ab10 <vasnprintf@plt>
   19ce0:	ldp	x29, x30, [sp, #240]
   19ce4:	add	sp, sp, #0x100
   19ce8:	ret

0000000000019cec <chdir_long@@Base>:
   19cec:	sub	sp, sp, #0x50
   19cf0:	stp	x29, x30, [sp, #16]
   19cf4:	stp	x24, x23, [sp, #32]
   19cf8:	stp	x22, x21, [sp, #48]
   19cfc:	stp	x20, x19, [sp, #64]
   19d00:	add	x29, sp, #0x10
   19d04:	mov	x20, x0
   19d08:	bl	aa80 <chdir@plt>
   19d0c:	mov	w21, w0
   19d10:	cbz	w0, 19ea4 <chdir_long@@Base+0x1b8>
   19d14:	bl	aec0 <__errno_location@plt>
   19d18:	ldr	w8, [x0]
   19d1c:	cmp	w8, #0x24
   19d20:	b.ne	19ea4 <chdir_long@@Base+0x1b8>  // b.any
   19d24:	mov	x19, x0
   19d28:	mov	x0, x20
   19d2c:	bl	a370 <strlen@plt>
   19d30:	mov	w8, #0xffffff9c            	// #-100
   19d34:	str	w8, [sp, #8]
   19d38:	cbz	x0, 19ef0 <chdir_long@@Base+0x204>
   19d3c:	mov	x21, x0
   19d40:	cmp	x0, #0xfff
   19d44:	b.ls	19f10 <chdir_long@@Base+0x224>  // b.plast
   19d48:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19d4c:	add	x1, x1, #0xb25
   19d50:	mov	x0, x20
   19d54:	bl	ab70 <strspn@plt>
   19d58:	mov	x22, x20
   19d5c:	cbz	x0, 19dd4 <chdir_long@@Base+0xe8>
   19d60:	mov	x23, x0
   19d64:	cmp	x0, #0x2
   19d68:	b.ne	19dbc <chdir_long@@Base+0xd0>  // b.any
   19d6c:	add	x0, x20, #0x3
   19d70:	sub	x2, x21, #0x3
   19d74:	mov	w1, #0x2f                  	// #47
   19d78:	mov	w23, #0x2f                  	// #47
   19d7c:	bl	acb0 <memchr@plt>
   19d80:	cbz	x0, 19e98 <chdir_long@@Base+0x1ac>
   19d84:	mov	x22, x0
   19d88:	strb	wzr, [x0]
   19d8c:	add	x0, sp, #0x8
   19d90:	mov	x1, x20
   19d94:	bl	19f70 <chdir_long@@Base+0x284>
   19d98:	strb	w23, [x22]
   19d9c:	cbnz	w0, 19e84 <chdir_long@@Base+0x198>
   19da0:	add	x22, x22, #0x1
   19da4:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19da8:	add	x1, x1, #0xb25
   19dac:	mov	x0, x22
   19db0:	bl	ab70 <strspn@plt>
   19db4:	add	x22, x22, x0
   19db8:	b	19dd4 <chdir_long@@Base+0xe8>
   19dbc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19dc0:	add	x1, x1, #0xb25
   19dc4:	add	x0, sp, #0x8
   19dc8:	bl	19f70 <chdir_long@@Base+0x284>
   19dcc:	cbnz	w0, 19e84 <chdir_long@@Base+0x198>
   19dd0:	add	x22, x20, x23
   19dd4:	ldrb	w8, [x22]
   19dd8:	cmp	w8, #0x2f
   19ddc:	b.eq	19f30 <chdir_long@@Base+0x244>  // b.none
   19de0:	add	x23, x20, x21
   19de4:	cmp	x22, x23
   19de8:	b.hi	19f50 <chdir_long@@Base+0x264>  // b.pmore
   19dec:	sub	x8, x23, x22
   19df0:	cmp	x8, #0x1, lsl #12
   19df4:	b.lt	19e60 <chdir_long@@Base+0x174>  // b.tstop
   19df8:	adrp	x20, 2a000 <vasnprintf@@Base+0x2944>
   19dfc:	mov	w24, #0x2f                  	// #47
   19e00:	add	x20, x20, #0xb25
   19e04:	mov	w1, #0x2f                  	// #47
   19e08:	mov	w2, #0x1000                	// #4096
   19e0c:	mov	x0, x22
   19e10:	bl	abc0 <memrchr@plt>
   19e14:	cbz	x0, 19e98 <chdir_long@@Base+0x1ac>
   19e18:	sub	x8, x0, x22
   19e1c:	mov	x21, x0
   19e20:	cmp	x8, #0x1, lsl #12
   19e24:	strb	wzr, [x0]
   19e28:	b.ge	19ed0 <chdir_long@@Base+0x1e4>  // b.tcont
   19e2c:	add	x0, sp, #0x8
   19e30:	mov	x1, x22
   19e34:	bl	19f70 <chdir_long@@Base+0x284>
   19e38:	strb	w24, [x21]
   19e3c:	cbnz	w0, 19e84 <chdir_long@@Base+0x198>
   19e40:	add	x21, x21, #0x1
   19e44:	mov	x0, x21
   19e48:	mov	x1, x20
   19e4c:	bl	ab70 <strspn@plt>
   19e50:	add	x22, x21, x0
   19e54:	sub	x8, x23, x22
   19e58:	cmp	x8, #0xfff
   19e5c:	b.gt	19e04 <chdir_long@@Base+0x118>
   19e60:	cmp	x22, x23
   19e64:	b.cs	19e78 <chdir_long@@Base+0x18c>  // b.hs, b.nlast
   19e68:	add	x0, sp, #0x8
   19e6c:	mov	x1, x22
   19e70:	bl	19f70 <chdir_long@@Base+0x284>
   19e74:	cbnz	w0, 19e84 <chdir_long@@Base+0x198>
   19e78:	ldr	w0, [sp, #8]
   19e7c:	bl	a3c0 <fchdir@plt>
   19e80:	cbz	w0, 19ec0 <chdir_long@@Base+0x1d4>
   19e84:	ldr	w20, [x19]
   19e88:	add	x0, sp, #0x8
   19e8c:	bl	19fb8 <chdir_long@@Base+0x2cc>
   19e90:	str	w20, [x19]
   19e94:	b	19ea0 <chdir_long@@Base+0x1b4>
   19e98:	mov	w8, #0x24                  	// #36
   19e9c:	str	w8, [x19]
   19ea0:	mov	w21, #0xffffffff            	// #-1
   19ea4:	mov	w0, w21
   19ea8:	ldp	x20, x19, [sp, #64]
   19eac:	ldp	x22, x21, [sp, #48]
   19eb0:	ldp	x24, x23, [sp, #32]
   19eb4:	ldp	x29, x30, [sp, #16]
   19eb8:	add	sp, sp, #0x50
   19ebc:	ret
   19ec0:	add	x0, sp, #0x8
   19ec4:	bl	19fb8 <chdir_long@@Base+0x2cc>
   19ec8:	mov	w21, wzr
   19ecc:	b	19ea4 <chdir_long@@Base+0x1b8>
   19ed0:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   19ed4:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19ed8:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   19edc:	add	x0, x0, #0x986
   19ee0:	add	x1, x1, #0x93b
   19ee4:	add	x3, x3, #0x948
   19ee8:	mov	w2, #0xb3                  	// #179
   19eec:	bl	aeb0 <__assert_fail@plt>
   19ef0:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   19ef4:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19ef8:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   19efc:	add	x0, x0, #0x933
   19f00:	add	x1, x1, #0x93b
   19f04:	add	x3, x3, #0x948
   19f08:	mov	w2, #0x7e                  	// #126
   19f0c:	bl	aeb0 <__assert_fail@plt>
   19f10:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   19f14:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19f18:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   19f1c:	add	x0, x0, #0x95f
   19f20:	add	x1, x1, #0x93b
   19f24:	add	x3, x3, #0x948
   19f28:	mov	w2, #0x7f                  	// #127
   19f2c:	bl	aeb0 <__assert_fail@plt>
   19f30:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   19f34:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19f38:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   19f3c:	add	x0, x0, #0x96b
   19f40:	add	x1, x1, #0x93b
   19f44:	add	x3, x3, #0x948
   19f48:	mov	w2, #0xa2                  	// #162
   19f4c:	bl	aeb0 <__assert_fail@plt>
   19f50:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   19f54:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19f58:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   19f5c:	add	x0, x0, #0x977
   19f60:	add	x1, x1, #0x93b
   19f64:	add	x3, x3, #0x948
   19f68:	mov	w2, #0xa3                  	// #163
   19f6c:	bl	aeb0 <__assert_fail@plt>
   19f70:	stp	x29, x30, [sp, #-32]!
   19f74:	stp	x20, x19, [sp, #16]
   19f78:	mov	x19, x0
   19f7c:	ldr	w0, [x0]
   19f80:	mov	w2, #0x4900                	// #18688
   19f84:	mov	x29, sp
   19f88:	bl	aea0 <openat@plt>
   19f8c:	tbnz	w0, #31, 19fa8 <chdir_long@@Base+0x2bc>
   19f90:	mov	w20, w0
   19f94:	mov	x0, x19
   19f98:	bl	19fb8 <chdir_long@@Base+0x2cc>
   19f9c:	mov	w0, wzr
   19fa0:	str	w20, [x19]
   19fa4:	b	19fac <chdir_long@@Base+0x2c0>
   19fa8:	mov	w0, #0xffffffff            	// #-1
   19fac:	ldp	x20, x19, [sp, #16]
   19fb0:	ldp	x29, x30, [sp], #32
   19fb4:	ret
   19fb8:	stp	x29, x30, [sp, #-16]!
   19fbc:	ldr	w0, [x0]
   19fc0:	mov	x29, sp
   19fc4:	tbnz	w0, #31, 19fd0 <chdir_long@@Base+0x2e4>
   19fc8:	bl	a8d0 <close@plt>
   19fcc:	cbnz	w0, 19fd8 <chdir_long@@Base+0x2ec>
   19fd0:	ldp	x29, x30, [sp], #16
   19fd4:	ret
   19fd8:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   19fdc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   19fe0:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   19fe4:	add	x0, x0, #0x999
   19fe8:	add	x1, x1, #0x93b
   19fec:	add	x3, x3, #0x9a6
   19ff0:	mov	w2, #0x40                  	// #64
   19ff4:	bl	aeb0 <__assert_fail@plt>

0000000000019ff8 <rpl_fcntl@@Base>:
   19ff8:	sub	sp, sp, #0x100
   19ffc:	stp	x29, x30, [sp, #208]
   1a000:	add	x29, sp, #0xd0
   1a004:	mov	x8, #0xffffffffffffffd0    	// #-48
   1a008:	mov	x9, sp
   1a00c:	sub	x10, x29, #0x50
   1a010:	stp	x20, x19, [sp, #240]
   1a014:	mov	w19, w0
   1a018:	movk	x8, #0xff80, lsl #32
   1a01c:	add	x11, x29, #0x30
   1a020:	cmp	w1, #0xb
   1a024:	add	x9, x9, #0x80
   1a028:	add	x10, x10, #0x30
   1a02c:	stp	x22, x21, [sp, #224]
   1a030:	stp	x2, x3, [x29, #-80]
   1a034:	stp	x4, x5, [x29, #-64]
   1a038:	stp	x6, x7, [x29, #-48]
   1a03c:	stp	q1, q2, [sp, #16]
   1a040:	stp	q3, q4, [sp, #48]
   1a044:	str	q0, [sp]
   1a048:	stp	q5, q6, [sp, #80]
   1a04c:	str	q7, [sp, #112]
   1a050:	stp	x9, x8, [x29, #-16]
   1a054:	stp	x11, x10, [x29, #-32]
   1a058:	b.hi	1a0a4 <rpl_fcntl@@Base+0xac>  // b.pmore
   1a05c:	mov	w8, #0x1                   	// #1
   1a060:	lsl	w8, w8, w1
   1a064:	mov	w9, #0x514                 	// #1300
   1a068:	tst	w8, w9
   1a06c:	b.ne	1a0dc <rpl_fcntl@@Base+0xe4>  // b.any
   1a070:	mov	w9, #0xa0a                 	// #2570
   1a074:	tst	w8, w9
   1a078:	b.ne	1a0d0 <rpl_fcntl@@Base+0xd8>  // b.any
   1a07c:	cbnz	w1, 1a0a4 <rpl_fcntl@@Base+0xac>
   1a080:	ldursw	x8, [x29, #-8]
   1a084:	tbz	w8, #31, 1a184 <rpl_fcntl@@Base+0x18c>
   1a088:	add	w9, w8, #0x8
   1a08c:	cmn	w8, #0x8
   1a090:	stur	w9, [x29, #-8]
   1a094:	b.gt	1a184 <rpl_fcntl@@Base+0x18c>
   1a098:	ldur	x9, [x29, #-24]
   1a09c:	add	x8, x9, x8
   1a0a0:	b	1a190 <rpl_fcntl@@Base+0x198>
   1a0a4:	sub	w8, w1, #0x400
   1a0a8:	cmp	w8, #0xa
   1a0ac:	b.hi	1a160 <rpl_fcntl@@Base+0x168>  // b.pmore
   1a0b0:	mov	w9, #0x1                   	// #1
   1a0b4:	lsl	w9, w9, w8
   1a0b8:	mov	w10, #0x285                 	// #645
   1a0bc:	tst	w9, w10
   1a0c0:	b.ne	1a0dc <rpl_fcntl@@Base+0xe4>  // b.any
   1a0c4:	mov	w10, #0x502                 	// #1282
   1a0c8:	tst	w9, w10
   1a0cc:	b.eq	1a134 <rpl_fcntl@@Base+0x13c>  // b.none
   1a0d0:	mov	w0, w19
   1a0d4:	bl	ac20 <fcntl@plt>
   1a0d8:	b	1a118 <rpl_fcntl@@Base+0x120>
   1a0dc:	ldursw	x8, [x29, #-8]
   1a0e0:	tbz	w8, #31, 1a100 <rpl_fcntl@@Base+0x108>
   1a0e4:	add	w9, w8, #0x8
   1a0e8:	cmn	w8, #0x8
   1a0ec:	stur	w9, [x29, #-8]
   1a0f0:	b.gt	1a100 <rpl_fcntl@@Base+0x108>
   1a0f4:	ldur	x9, [x29, #-24]
   1a0f8:	add	x8, x9, x8
   1a0fc:	b	1a10c <rpl_fcntl@@Base+0x114>
   1a100:	ldur	x8, [x29, #-32]
   1a104:	add	x9, x8, #0x8
   1a108:	stur	x9, [x29, #-32]
   1a10c:	ldr	w2, [x8]
   1a110:	mov	w0, w19
   1a114:	bl	ac20 <fcntl@plt>
   1a118:	mov	w20, w0
   1a11c:	mov	w0, w20
   1a120:	ldp	x20, x19, [sp, #240]
   1a124:	ldp	x22, x21, [sp, #224]
   1a128:	ldp	x29, x30, [sp, #208]
   1a12c:	add	sp, sp, #0x100
   1a130:	ret
   1a134:	cmp	w8, #0x6
   1a138:	b.ne	1a160 <rpl_fcntl@@Base+0x168>  // b.any
   1a13c:	ldursw	x8, [x29, #-8]
   1a140:	tbz	w8, #31, 1a1a0 <rpl_fcntl@@Base+0x1a8>
   1a144:	add	w9, w8, #0x8
   1a148:	cmn	w8, #0x8
   1a14c:	stur	w9, [x29, #-8]
   1a150:	b.gt	1a1a0 <rpl_fcntl@@Base+0x1a8>
   1a154:	ldur	x9, [x29, #-24]
   1a158:	add	x8, x9, x8
   1a15c:	b	1a1ac <rpl_fcntl@@Base+0x1b4>
   1a160:	ldursw	x8, [x29, #-8]
   1a164:	tbz	w8, #31, 1a20c <rpl_fcntl@@Base+0x214>
   1a168:	add	w9, w8, #0x8
   1a16c:	cmn	w8, #0x8
   1a170:	stur	w9, [x29, #-8]
   1a174:	b.gt	1a20c <rpl_fcntl@@Base+0x214>
   1a178:	ldur	x9, [x29, #-24]
   1a17c:	add	x8, x9, x8
   1a180:	b	1a218 <rpl_fcntl@@Base+0x220>
   1a184:	ldur	x8, [x29, #-32]
   1a188:	add	x9, x8, #0x8
   1a18c:	stur	x9, [x29, #-32]
   1a190:	ldr	w2, [x8]
   1a194:	mov	w0, w19
   1a198:	mov	w1, wzr
   1a19c:	b	1a114 <rpl_fcntl@@Base+0x11c>
   1a1a0:	ldur	x8, [x29, #-32]
   1a1a4:	add	x9, x8, #0x8
   1a1a8:	stur	x9, [x29, #-32]
   1a1ac:	adrp	x22, 3d000 <base_len@@Base+0x2a06c>
   1a1b0:	ldr	w9, [x22, #2368]
   1a1b4:	ldr	w21, [x8]
   1a1b8:	tbnz	w9, #31, 1a234 <rpl_fcntl@@Base+0x23c>
   1a1bc:	mov	w1, #0x406                 	// #1030
   1a1c0:	mov	w0, w19
   1a1c4:	mov	w2, w21
   1a1c8:	bl	ac20 <fcntl@plt>
   1a1cc:	mov	w20, w0
   1a1d0:	tbz	w0, #31, 1a228 <rpl_fcntl@@Base+0x230>
   1a1d4:	bl	aec0 <__errno_location@plt>
   1a1d8:	ldr	w8, [x0]
   1a1dc:	cmp	w8, #0x16
   1a1e0:	b.ne	1a228 <rpl_fcntl@@Base+0x230>  // b.any
   1a1e4:	mov	w0, w19
   1a1e8:	mov	w1, wzr
   1a1ec:	mov	w2, w21
   1a1f0:	bl	ac20 <fcntl@plt>
   1a1f4:	mov	w20, w0
   1a1f8:	tbnz	w0, #31, 1a11c <rpl_fcntl@@Base+0x124>
   1a1fc:	mov	w8, #0xffffffff            	// #-1
   1a200:	str	w8, [x22, #2368]
   1a204:	mov	w8, #0x1                   	// #1
   1a208:	b	1a254 <rpl_fcntl@@Base+0x25c>
   1a20c:	ldur	x8, [x29, #-32]
   1a210:	add	x9, x8, #0x8
   1a214:	stur	x9, [x29, #-32]
   1a218:	ldr	x2, [x8]
   1a21c:	mov	w0, w19
   1a220:	bl	ac20 <fcntl@plt>
   1a224:	b	1a118 <rpl_fcntl@@Base+0x120>
   1a228:	mov	w8, #0x1                   	// #1
   1a22c:	str	w8, [x22, #2368]
   1a230:	b	1a11c <rpl_fcntl@@Base+0x124>
   1a234:	mov	w0, w19
   1a238:	mov	w1, wzr
   1a23c:	mov	w2, w21
   1a240:	bl	ac20 <fcntl@plt>
   1a244:	ldr	w8, [x22, #2368]
   1a248:	mov	w20, w0
   1a24c:	cmn	w8, #0x1
   1a250:	cset	w8, eq  // eq = none
   1a254:	cbz	w8, 1a11c <rpl_fcntl@@Base+0x124>
   1a258:	tbnz	w20, #31, 1a11c <rpl_fcntl@@Base+0x124>
   1a25c:	mov	w1, #0x1                   	// #1
   1a260:	mov	w0, w20
   1a264:	bl	ac20 <fcntl@plt>
   1a268:	tbnz	w0, #31, 1a284 <rpl_fcntl@@Base+0x28c>
   1a26c:	orr	w2, w0, #0x1
   1a270:	mov	w1, #0x2                   	// #2
   1a274:	mov	w0, w20
   1a278:	bl	ac20 <fcntl@plt>
   1a27c:	cmn	w0, #0x1
   1a280:	b.ne	1a11c <rpl_fcntl@@Base+0x124>  // b.any
   1a284:	bl	aec0 <__errno_location@plt>
   1a288:	ldr	w21, [x0]
   1a28c:	mov	x19, x0
   1a290:	mov	w0, w20
   1a294:	bl	a8d0 <close@plt>
   1a298:	str	w21, [x19]
   1a29c:	mov	w20, #0xffffffff            	// #-1
   1a2a0:	b	1a11c <rpl_fcntl@@Base+0x124>

000000000001a2a4 <_getopt_internal_r@@Base>:
   1a2a4:	sub	sp, sp, #0x70
   1a2a8:	cmp	w0, #0x1
   1a2ac:	stp	x29, x30, [sp, #16]
   1a2b0:	stp	x28, x27, [sp, #32]
   1a2b4:	stp	x26, x25, [sp, #48]
   1a2b8:	stp	x24, x23, [sp, #64]
   1a2bc:	stp	x22, x21, [sp, #80]
   1a2c0:	stp	x20, x19, [sp, #96]
   1a2c4:	add	x29, sp, #0x10
   1a2c8:	b.lt	1a5dc <_getopt_internal_r@@Base+0x338>  // b.tstop
   1a2cc:	ldp	w28, w25, [x6]
   1a2d0:	mov	x19, x6
   1a2d4:	mov	w26, w5
   1a2d8:	mov	x22, x4
   1a2dc:	mov	x24, x3
   1a2e0:	mov	x21, x2
   1a2e4:	mov	w23, w0
   1a2e8:	mov	x20, x1
   1a2ec:	str	xzr, [x6, #16]
   1a2f0:	cbz	w28, 1a318 <_getopt_internal_r@@Base+0x74>
   1a2f4:	ldr	w8, [x19, #24]
   1a2f8:	cbz	w8, 1a320 <_getopt_internal_r@@Base+0x7c>
   1a2fc:	ldrb	w8, [x21]
   1a300:	cmp	w8, #0x2d
   1a304:	b.eq	1a310 <_getopt_internal_r@@Base+0x6c>  // b.none
   1a308:	cmp	w8, #0x2b
   1a30c:	b.ne	1a374 <_getopt_internal_r@@Base+0xd0>  // b.any
   1a310:	add	x21, x21, #0x1
   1a314:	b	1a374 <_getopt_internal_r@@Base+0xd0>
   1a318:	mov	w28, #0x1                   	// #1
   1a31c:	str	w28, [x19]
   1a320:	stp	w28, w28, [x19, #44]
   1a324:	str	xzr, [x19, #32]
   1a328:	ldrb	w8, [x21]
   1a32c:	cmp	w8, #0x2b
   1a330:	b.eq	1a348 <_getopt_internal_r@@Base+0xa4>  // b.none
   1a334:	cmp	w8, #0x2d
   1a338:	b.ne	1a354 <_getopt_internal_r@@Base+0xb0>  // b.any
   1a33c:	mov	w8, #0x2                   	// #2
   1a340:	str	w8, [x19, #40]
   1a344:	b	1a34c <_getopt_internal_r@@Base+0xa8>
   1a348:	str	wzr, [x19, #40]
   1a34c:	add	x21, x21, #0x1
   1a350:	b	1a36c <_getopt_internal_r@@Base+0xc8>
   1a354:	cbnz	w7, 1a368 <_getopt_internal_r@@Base+0xc4>
   1a358:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   1a35c:	add	x0, x0, #0xa14
   1a360:	bl	aef0 <getenv@plt>
   1a364:	cbz	x0, 1a61c <_getopt_internal_r@@Base+0x378>
   1a368:	str	wzr, [x19, #40]
   1a36c:	mov	w8, #0x1                   	// #1
   1a370:	str	w8, [x19, #24]
   1a374:	ldrb	w8, [x21]
   1a378:	ldr	x27, [x19, #32]
   1a37c:	str	x22, [sp, #8]
   1a380:	cmp	w8, #0x3a
   1a384:	csel	w25, wzr, w25, eq  // eq = none
   1a388:	cbz	x27, 1a414 <_getopt_internal_r@@Base+0x170>
   1a38c:	ldrb	w8, [x27]
   1a390:	cbz	w8, 1a414 <_getopt_internal_r@@Base+0x170>
   1a394:	add	x22, x27, #0x1
   1a398:	str	x22, [x19, #32]
   1a39c:	ldrb	w26, [x27]
   1a3a0:	mov	x0, x21
   1a3a4:	mov	w1, w26
   1a3a8:	bl	ab90 <strchr@plt>
   1a3ac:	ldrb	w8, [x27, #1]
   1a3b0:	cbnz	w8, 1a3bc <_getopt_internal_r@@Base+0x118>
   1a3b4:	add	w28, w28, #0x1
   1a3b8:	str	w28, [x19]
   1a3bc:	orr	w8, w26, #0x1
   1a3c0:	cmp	w8, #0x3b
   1a3c4:	b.eq	1a46c <_getopt_internal_r@@Base+0x1c8>  // b.none
   1a3c8:	cbz	x0, 1a46c <_getopt_internal_r@@Base+0x1c8>
   1a3cc:	ldrb	w9, [x0]
   1a3d0:	ldrb	w8, [x0, #1]
   1a3d4:	cmp	w9, #0x57
   1a3d8:	b.ne	1a47c <_getopt_internal_r@@Base+0x1d8>  // b.any
   1a3dc:	cbz	x24, 1a47c <_getopt_internal_r@@Base+0x1d8>
   1a3e0:	cmp	w8, #0x3b
   1a3e4:	b.ne	1a47c <_getopt_internal_r@@Base+0x1d8>  // b.any
   1a3e8:	ldrb	w8, [x22]
   1a3ec:	cbnz	w8, 1a68c <_getopt_internal_r@@Base+0x3e8>
   1a3f0:	cmp	w28, w23
   1a3f4:	b.ne	1a688 <_getopt_internal_r@@Base+0x3e4>  // b.any
   1a3f8:	cbnz	w25, 1a758 <_getopt_internal_r@@Base+0x4b4>
   1a3fc:	str	w26, [x19, #8]
   1a400:	ldrb	w8, [x21]
   1a404:	mov	w9, #0x3f                  	// #63
   1a408:	cmp	w8, #0x3a
   1a40c:	csel	w26, w8, w9, eq  // eq = none
   1a410:	b	1a5e0 <_getopt_internal_r@@Base+0x33c>
   1a414:	ldr	w22, [x19, #48]
   1a418:	cmp	w22, w28
   1a41c:	b.le	1a428 <_getopt_internal_r@@Base+0x184>
   1a420:	mov	w22, w28
   1a424:	str	w28, [x19, #48]
   1a428:	ldr	w8, [x19, #44]
   1a42c:	cmp	w8, w28
   1a430:	b.le	1a43c <_getopt_internal_r@@Base+0x198>
   1a434:	mov	w8, w28
   1a438:	str	w28, [x19, #44]
   1a43c:	ldr	w9, [x19, #40]
   1a440:	cmp	w9, #0x1
   1a444:	b.ne	1a4f0 <_getopt_internal_r@@Base+0x24c>  // b.any
   1a448:	cmp	w8, w22
   1a44c:	b.eq	1a4a0 <_getopt_internal_r@@Base+0x1fc>  // b.none
   1a450:	cmp	w22, w28
   1a454:	b.eq	1a4a0 <_getopt_internal_r@@Base+0x1fc>  // b.none
   1a458:	mov	x0, x20
   1a45c:	mov	x1, x19
   1a460:	bl	1a7d0 <_getopt_internal_r@@Base+0x52c>
   1a464:	ldr	w28, [x19]
   1a468:	b	1a4ac <_getopt_internal_r@@Base+0x208>
   1a46c:	cbnz	w25, 1a64c <_getopt_internal_r@@Base+0x3a8>
   1a470:	str	w26, [x19, #8]
   1a474:	mov	w26, #0x3f                  	// #63
   1a478:	b	1a5e0 <_getopt_internal_r@@Base+0x33c>
   1a47c:	cmp	w8, #0x3a
   1a480:	b.ne	1a5e0 <_getopt_internal_r@@Base+0x33c>  // b.any
   1a484:	ldrb	w9, [x0, #2]
   1a488:	ldrb	w8, [x22]
   1a48c:	cmp	w9, #0x3a
   1a490:	b.ne	1a604 <_getopt_internal_r@@Base+0x360>  // b.any
   1a494:	cbnz	w8, 1a608 <_getopt_internal_r@@Base+0x364>
   1a498:	str	xzr, [x19, #16]
   1a49c:	b	1a614 <_getopt_internal_r@@Base+0x370>
   1a4a0:	cmp	w22, w28
   1a4a4:	b.eq	1a4ac <_getopt_internal_r@@Base+0x208>  // b.none
   1a4a8:	str	w28, [x19, #44]
   1a4ac:	cmp	w28, w23
   1a4b0:	b.ge	1a4e8 <_getopt_internal_r@@Base+0x244>  // b.tcont
   1a4b4:	add	x8, x20, w28, sxtw #3
   1a4b8:	ldr	x9, [x8]
   1a4bc:	ldrb	w10, [x9]
   1a4c0:	cmp	w10, #0x2d
   1a4c4:	b.ne	1a4d0 <_getopt_internal_r@@Base+0x22c>  // b.any
   1a4c8:	ldrb	w9, [x9, #1]
   1a4cc:	cbnz	w9, 1a4e8 <_getopt_internal_r@@Base+0x244>
   1a4d0:	add	w28, w28, #0x1
   1a4d4:	cmp	w23, w28
   1a4d8:	add	x8, x8, #0x8
   1a4dc:	str	w28, [x19]
   1a4e0:	b.ne	1a4b8 <_getopt_internal_r@@Base+0x214>  // b.any
   1a4e4:	mov	w28, w23
   1a4e8:	mov	w22, w28
   1a4ec:	str	w28, [x19, #48]
   1a4f0:	cmp	w28, w23
   1a4f4:	b.eq	1a5cc <_getopt_internal_r@@Base+0x328>  // b.none
   1a4f8:	ldr	x0, [x20, w28, sxtw #3]
   1a4fc:	adrp	x27, 29000 <vasnprintf@@Base+0x1944>
   1a500:	add	x27, x27, #0x101
   1a504:	mov	x1, x27
   1a508:	bl	aa10 <strcmp@plt>
   1a50c:	cbz	w0, 1a56c <_getopt_internal_r@@Base+0x2c8>
   1a510:	cmp	w28, w23
   1a514:	b.eq	1a5cc <_getopt_internal_r@@Base+0x328>  // b.none
   1a518:	sxtw	x8, w28
   1a51c:	ldr	x22, [x20, x8, lsl #3]
   1a520:	ldrb	w8, [x22]
   1a524:	cmp	w8, #0x2d
   1a528:	b.ne	1a598 <_getopt_internal_r@@Base+0x2f4>  // b.any
   1a52c:	mov	x9, x22
   1a530:	ldrb	w1, [x9, #1]!
   1a534:	cbz	w1, 1a598 <_getopt_internal_r@@Base+0x2f4>
   1a538:	cbz	x24, 1a74c <_getopt_internal_r@@Base+0x4a8>
   1a53c:	cmp	w1, #0x2d
   1a540:	b.ne	1a6cc <_getopt_internal_r@@Base+0x428>  // b.any
   1a544:	ldr	x4, [sp, #8]
   1a548:	add	x8, x22, #0x2
   1a54c:	mov	w0, w23
   1a550:	mov	x1, x20
   1a554:	mov	x2, x21
   1a558:	mov	x3, x24
   1a55c:	mov	w5, w26
   1a560:	str	x8, [x19, #32]
   1a564:	str	x27, [sp]
   1a568:	b	1a6bc <_getopt_internal_r@@Base+0x418>
   1a56c:	ldr	w9, [x19, #44]
   1a570:	add	w8, w28, #0x1
   1a574:	str	w8, [x19]
   1a578:	cmp	w9, w22
   1a57c:	b.eq	1a5b4 <_getopt_internal_r@@Base+0x310>  // b.none
   1a580:	cmp	w22, w8
   1a584:	b.eq	1a5b4 <_getopt_internal_r@@Base+0x310>  // b.none
   1a588:	mov	x0, x20
   1a58c:	mov	x1, x19
   1a590:	bl	1a7d0 <_getopt_internal_r@@Base+0x52c>
   1a594:	b	1a5c0 <_getopt_internal_r@@Base+0x31c>
   1a598:	ldr	w8, [x19, #40]
   1a59c:	cbz	w8, 1a5dc <_getopt_internal_r@@Base+0x338>
   1a5a0:	add	w8, w28, #0x1
   1a5a4:	str	x22, [x19, #16]
   1a5a8:	str	w8, [x19]
   1a5ac:	mov	w26, #0x1                   	// #1
   1a5b0:	b	1a5e0 <_getopt_internal_r@@Base+0x33c>
   1a5b4:	cmp	w9, w22
   1a5b8:	b.ne	1a5c0 <_getopt_internal_r@@Base+0x31c>  // b.any
   1a5bc:	str	w8, [x19, #44]
   1a5c0:	str	w23, [x19, #48]
   1a5c4:	str	w23, [x19]
   1a5c8:	mov	w22, w23
   1a5cc:	ldr	w8, [x19, #44]
   1a5d0:	cmp	w8, w22
   1a5d4:	b.eq	1a5dc <_getopt_internal_r@@Base+0x338>  // b.none
   1a5d8:	str	w8, [x19]
   1a5dc:	mov	w26, #0xffffffff            	// #-1
   1a5e0:	mov	w0, w26
   1a5e4:	ldp	x20, x19, [sp, #96]
   1a5e8:	ldp	x22, x21, [sp, #80]
   1a5ec:	ldp	x24, x23, [sp, #64]
   1a5f0:	ldp	x26, x25, [sp, #48]
   1a5f4:	ldp	x28, x27, [sp, #32]
   1a5f8:	ldp	x29, x30, [sp, #16]
   1a5fc:	add	sp, sp, #0x70
   1a600:	ret
   1a604:	cbz	w8, 1a628 <_getopt_internal_r@@Base+0x384>
   1a608:	add	w8, w28, #0x1
   1a60c:	str	x22, [x19, #16]
   1a610:	str	w8, [x19]
   1a614:	str	xzr, [x19, #32]
   1a618:	b	1a5e0 <_getopt_internal_r@@Base+0x33c>
   1a61c:	mov	w8, #0x1                   	// #1
   1a620:	str	w8, [x19, #40]
   1a624:	b	1a36c <_getopt_internal_r@@Base+0xc8>
   1a628:	cmp	w28, w23
   1a62c:	b.ne	1a724 <_getopt_internal_r@@Base+0x480>  // b.any
   1a630:	cbnz	w25, 1a794 <_getopt_internal_r@@Base+0x4f0>
   1a634:	str	w26, [x19, #8]
   1a638:	ldrb	w8, [x21]
   1a63c:	mov	w9, #0x3f                  	// #63
   1a640:	cmp	w8, #0x3a
   1a644:	csel	w26, w8, w9, eq  // eq = none
   1a648:	b	1a614 <_getopt_internal_r@@Base+0x370>
   1a64c:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1a650:	ldr	x8, [x8, #3816]
   1a654:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1a658:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1a65c:	add	x0, x0, #0xcb7
   1a660:	ldr	x21, [x8]
   1a664:	add	x1, x1, #0x9cb
   1a668:	mov	w2, #0x5                   	// #5
   1a66c:	bl	adc0 <dcgettext@plt>
   1a670:	ldr	x2, [x20]
   1a674:	mov	x1, x0
   1a678:	mov	x0, x21
   1a67c:	mov	w3, w26
   1a680:	bl	afb0 <fprintf@plt>
   1a684:	b	1a470 <_getopt_internal_r@@Base+0x1cc>
   1a688:	ldr	x22, [x20, w28, sxtw #3]
   1a68c:	str	x22, [x19, #16]
   1a690:	ldr	x4, [sp, #8]
   1a694:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   1a698:	add	x8, x8, #0xa10
   1a69c:	str	x22, [x19, #32]
   1a6a0:	str	xzr, [x19, #16]
   1a6a4:	str	x8, [sp]
   1a6a8:	mov	w0, w23
   1a6ac:	mov	x1, x20
   1a6b0:	mov	x2, x21
   1a6b4:	mov	x3, x24
   1a6b8:	mov	w5, wzr
   1a6bc:	mov	x6, x19
   1a6c0:	mov	w7, w25
   1a6c4:	bl	1a88c <_getopt_internal_r@@Base+0x5e8>
   1a6c8:	b	1a5e4 <_getopt_internal_r@@Base+0x340>
   1a6cc:	cbz	w26, 1a74c <_getopt_internal_r@@Base+0x4a8>
   1a6d0:	ldrb	w8, [x22, #2]
   1a6d4:	cbz	w8, 1a738 <_getopt_internal_r@@Base+0x494>
   1a6d8:	ldr	x4, [sp, #8]
   1a6dc:	adrp	x8, 28000 <vasnprintf@@Base+0x944>
   1a6e0:	add	x8, x8, #0x48a
   1a6e4:	mov	w0, w23
   1a6e8:	mov	x1, x20
   1a6ec:	mov	x2, x21
   1a6f0:	mov	x3, x24
   1a6f4:	mov	w5, w26
   1a6f8:	mov	x6, x19
   1a6fc:	mov	w7, w25
   1a700:	str	x9, [x19, #32]
   1a704:	str	x8, [sp]
   1a708:	bl	1a88c <_getopt_internal_r@@Base+0x5e8>
   1a70c:	mov	w26, w0
   1a710:	cmn	w0, #0x1
   1a714:	b.ne	1a5e0 <_getopt_internal_r@@Base+0x33c>  // b.any
   1a718:	ldrsw	x28, [x19]
   1a71c:	ldr	x22, [x20, x28, lsl #3]
   1a720:	b	1a74c <_getopt_internal_r@@Base+0x4a8>
   1a724:	add	w8, w28, #0x1
   1a728:	str	w8, [x19]
   1a72c:	ldr	x8, [x20, w28, sxtw #3]
   1a730:	str	x8, [x19, #16]
   1a734:	b	1a614 <_getopt_internal_r@@Base+0x370>
   1a738:	mov	x0, x21
   1a73c:	mov	x27, x9
   1a740:	bl	ab90 <strchr@plt>
   1a744:	mov	x9, x27
   1a748:	cbz	x0, 1a6d8 <_getopt_internal_r@@Base+0x434>
   1a74c:	add	x27, x22, #0x1
   1a750:	str	x27, [x19, #32]
   1a754:	b	1a394 <_getopt_internal_r@@Base+0xf0>
   1a758:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1a75c:	ldr	x8, [x8, #3816]
   1a760:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1a764:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1a768:	add	x0, x0, #0xcb7
   1a76c:	ldr	x22, [x8]
   1a770:	add	x1, x1, #0x9e7
   1a774:	mov	w2, #0x5                   	// #5
   1a778:	bl	adc0 <dcgettext@plt>
   1a77c:	ldr	x2, [x20]
   1a780:	mov	x1, x0
   1a784:	mov	x0, x22
   1a788:	mov	w3, w26
   1a78c:	bl	afb0 <fprintf@plt>
   1a790:	b	1a3fc <_getopt_internal_r@@Base+0x158>
   1a794:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1a798:	ldr	x8, [x8, #3816]
   1a79c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1a7a0:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1a7a4:	add	x0, x0, #0xcb7
   1a7a8:	ldr	x22, [x8]
   1a7ac:	add	x1, x1, #0x9e7
   1a7b0:	mov	w2, #0x5                   	// #5
   1a7b4:	bl	adc0 <dcgettext@plt>
   1a7b8:	ldr	x2, [x20]
   1a7bc:	mov	x1, x0
   1a7c0:	mov	x0, x22
   1a7c4:	mov	w3, w26
   1a7c8:	bl	afb0 <fprintf@plt>
   1a7cc:	b	1a634 <_getopt_internal_r@@Base+0x390>
   1a7d0:	ldp	w9, w11, [x1, #44]
   1a7d4:	ldr	w8, [x1]
   1a7d8:	sxtw	x10, w11
   1a7dc:	cmp	w8, w11
   1a7e0:	b.le	1a87c <_getopt_internal_r@@Base+0x5d8>
   1a7e4:	cmp	w9, w11
   1a7e8:	b.ge	1a87c <_getopt_internal_r@@Base+0x5d8>  // b.tcont
   1a7ec:	add	x11, x0, x10, lsl #3
   1a7f0:	mov	w12, w9
   1a7f4:	mov	w13, w8
   1a7f8:	sub	w14, w13, w10
   1a7fc:	sub	w15, w10, w12
   1a800:	cmp	w14, w15
   1a804:	b.le	1a83c <_getopt_internal_r@@Base+0x598>
   1a808:	cmp	w15, #0x1
   1a80c:	sub	w13, w13, w15
   1a810:	b.lt	1a86c <_getopt_internal_r@@Base+0x5c8>  // b.tstop
   1a814:	mov	w14, w15
   1a818:	add	x15, x0, w13, sxtw #3
   1a81c:	add	x16, x0, w12, sxtw #3
   1a820:	ldr	x17, [x15]
   1a824:	ldr	x18, [x16]
   1a828:	subs	x14, x14, #0x1
   1a82c:	str	x17, [x16], #8
   1a830:	str	x18, [x15], #8
   1a834:	b.ne	1a820 <_getopt_internal_r@@Base+0x57c>  // b.any
   1a838:	b	1a86c <_getopt_internal_r@@Base+0x5c8>
   1a83c:	cmp	w14, #0x1
   1a840:	b.lt	1a868 <_getopt_internal_r@@Base+0x5c4>  // b.tstop
   1a844:	sub	w15, w13, w10
   1a848:	add	x16, x0, w12, sxtw #3
   1a84c:	mov	x17, x11
   1a850:	ldr	x18, [x17]
   1a854:	ldr	x2, [x16]
   1a858:	subs	x15, x15, #0x1
   1a85c:	str	x18, [x16], #8
   1a860:	str	x2, [x17], #8
   1a864:	b.ne	1a850 <_getopt_internal_r@@Base+0x5ac>  // b.any
   1a868:	add	w12, w12, w14
   1a86c:	cmp	w13, w10
   1a870:	b.le	1a87c <_getopt_internal_r@@Base+0x5d8>
   1a874:	cmp	w10, w12
   1a878:	b.gt	1a7f8 <_getopt_internal_r@@Base+0x554>
   1a87c:	sub	w9, w9, w10
   1a880:	add	w9, w9, w8
   1a884:	stp	w9, w8, [x1, #44]
   1a888:	ret
   1a88c:	sub	sp, sp, #0xb0
   1a890:	stp	x29, x30, [sp, #80]
   1a894:	add	x29, sp, #0x50
   1a898:	stp	x28, x27, [sp, #96]
   1a89c:	stp	x26, x25, [sp, #112]
   1a8a0:	stp	x24, x23, [sp, #128]
   1a8a4:	stp	x22, x21, [sp, #144]
   1a8a8:	stp	x20, x19, [sp, #160]
   1a8ac:	stp	w7, w5, [x29, #-8]
   1a8b0:	ldr	x24, [x6, #32]
   1a8b4:	ldr	x22, [x29, #96]
   1a8b8:	mov	x21, x6
   1a8bc:	mov	x25, x3
   1a8c0:	mov	x20, x24
   1a8c4:	str	x2, [sp, #40]
   1a8c8:	stur	x1, [x29, #-32]
   1a8cc:	str	w0, [sp, #36]
   1a8d0:	ldrb	w8, [x20]
   1a8d4:	cbz	w8, 1a8e8 <_getopt_internal_r@@Base+0x644>
   1a8d8:	cmp	w8, #0x3d
   1a8dc:	b.eq	1a8e8 <_getopt_internal_r@@Base+0x644>  // b.none
   1a8e0:	add	x20, x20, #0x1
   1a8e4:	b	1a8d0 <_getopt_internal_r@@Base+0x62c>
   1a8e8:	ldr	x26, [x25]
   1a8ec:	cbz	x26, 1aa38 <_getopt_internal_r@@Base+0x794>
   1a8f0:	mov	x28, xzr
   1a8f4:	sub	x23, x20, x24
   1a8f8:	mov	x27, x26
   1a8fc:	mov	x19, x25
   1a900:	stur	x4, [x29, #-24]
   1a904:	mov	x0, x27
   1a908:	mov	x1, x24
   1a90c:	mov	x2, x23
   1a910:	bl	a740 <strncmp@plt>
   1a914:	cbnz	w0, 1a928 <_getopt_internal_r@@Base+0x684>
   1a918:	mov	x0, x27
   1a91c:	bl	a370 <strlen@plt>
   1a920:	cmp	x23, x0
   1a924:	b.eq	1aa5c <_getopt_internal_r@@Base+0x7b8>  // b.none
   1a928:	ldr	x27, [x19, #32]!
   1a92c:	add	x28, x28, #0x1
   1a930:	cbnz	x27, 1a904 <_getopt_internal_r@@Base+0x660>
   1a934:	str	x25, [sp, #24]
   1a938:	cbz	x26, 1aa68 <_getopt_internal_r@@Base+0x7c4>
   1a93c:	stp	x22, x21, [sp]
   1a940:	mov	x21, xzr
   1a944:	mov	x22, x25
   1a948:	mov	w25, wzr
   1a94c:	mov	x27, xzr
   1a950:	mov	x19, xzr
   1a954:	mov	w8, #0xffffffff            	// #-1
   1a958:	str	wzr, [sp, #20]
   1a95c:	stur	w8, [x29, #-12]
   1a960:	mov	x0, x26
   1a964:	mov	x1, x24
   1a968:	mov	x2, x23
   1a96c:	bl	a740 <strncmp@plt>
   1a970:	cbz	w0, 1a984 <_getopt_internal_r@@Base+0x6e0>
   1a974:	ldr	x26, [x22, #32]!
   1a978:	add	x21, x21, #0x1
   1a97c:	cbnz	x26, 1a960 <_getopt_internal_r@@Base+0x6bc>
   1a980:	b	1aa44 <_getopt_internal_r@@Base+0x7a0>
   1a984:	cbz	x19, 1a9fc <_getopt_internal_r@@Base+0x758>
   1a988:	ldur	w8, [x29, #-4]
   1a98c:	cbnz	w8, 1a9b0 <_getopt_internal_r@@Base+0x70c>
   1a990:	ldr	w8, [x19, #8]
   1a994:	ldr	w9, [x22, #8]
   1a998:	cmp	w8, w9
   1a99c:	b.ne	1a9b0 <_getopt_internal_r@@Base+0x70c>  // b.any
   1a9a0:	ldr	x8, [x19, #16]
   1a9a4:	ldr	x9, [x22, #16]
   1a9a8:	cmp	x8, x9
   1a9ac:	b.eq	1aa20 <_getopt_internal_r@@Base+0x77c>  // b.none
   1a9b0:	cbnz	w25, 1a974 <_getopt_internal_r@@Base+0x6d0>
   1a9b4:	ldur	w8, [x29, #-8]
   1a9b8:	cbz	w8, 1aa0c <_getopt_internal_r@@Base+0x768>
   1a9bc:	cbnz	x27, 1a9f4 <_getopt_internal_r@@Base+0x750>
   1a9c0:	mov	x0, x28
   1a9c4:	bl	a660 <malloc@plt>
   1a9c8:	mov	x27, x0
   1a9cc:	mov	w25, #0x1                   	// #1
   1a9d0:	cbz	x0, 1a974 <_getopt_internal_r@@Base+0x6d0>
   1a9d4:	mov	x0, x27
   1a9d8:	mov	w1, wzr
   1a9dc:	mov	x2, x28
   1a9e0:	bl	a770 <memset@plt>
   1a9e4:	ldur	w8, [x29, #-12]
   1a9e8:	strb	w25, [x27, w8, sxtw]
   1a9ec:	mov	w8, #0x1                   	// #1
   1a9f0:	str	w8, [sp, #20]
   1a9f4:	mov	w25, wzr
   1a9f8:	b	1aa14 <_getopt_internal_r@@Base+0x770>
   1a9fc:	mov	x19, x22
   1aa00:	mov	w8, w21
   1aa04:	stur	w21, [x29, #-12]
   1aa08:	b	1a974 <_getopt_internal_r@@Base+0x6d0>
   1aa0c:	mov	w25, #0x1                   	// #1
   1aa10:	cbz	x27, 1a974 <_getopt_internal_r@@Base+0x6d0>
   1aa14:	mov	w8, #0x1                   	// #1
   1aa18:	strb	w8, [x27, x21]
   1aa1c:	b	1a974 <_getopt_internal_r@@Base+0x6d0>
   1aa20:	cbnz	w25, 1a974 <_getopt_internal_r@@Base+0x6d0>
   1aa24:	ldr	w8, [x19, #24]
   1aa28:	ldr	w9, [x22, #24]
   1aa2c:	cmp	w8, w9
   1aa30:	b.ne	1a9b4 <_getopt_internal_r@@Base+0x710>  // b.any
   1aa34:	b	1a974 <_getopt_internal_r@@Base+0x6d0>
   1aa38:	str	x25, [sp, #24]
   1aa3c:	mov	w28, wzr
   1aa40:	b	1aa6c <_getopt_internal_r@@Base+0x7c8>
   1aa44:	ldp	x22, x21, [sp]
   1aa48:	ldur	x4, [x29, #-24]
   1aa4c:	ldr	w26, [sp, #20]
   1aa50:	ldur	w12, [x29, #-12]
   1aa54:	cbz	x27, 1aa80 <_getopt_internal_r@@Base+0x7dc>
   1aa58:	b	1aab4 <_getopt_internal_r@@Base+0x810>
   1aa5c:	ldur	x4, [x29, #-24]
   1aa60:	mov	w12, w28
   1aa64:	b	1aa88 <_getopt_internal_r@@Base+0x7e4>
   1aa68:	ldur	x4, [x29, #-24]
   1aa6c:	mov	x19, xzr
   1aa70:	mov	x27, xzr
   1aa74:	mov	w25, wzr
   1aa78:	mov	w12, #0xffffffff            	// #-1
   1aa7c:	cbnz	x27, 1aab4 <_getopt_internal_r@@Base+0x810>
   1aa80:	cbnz	w25, 1aab4 <_getopt_internal_r@@Base+0x810>
   1aa84:	cbz	x19, 1ab30 <_getopt_internal_r@@Base+0x88c>
   1aa88:	ldr	w9, [x21]
   1aa8c:	str	xzr, [x21, #32]
   1aa90:	add	w8, w9, #0x1
   1aa94:	str	w8, [x21]
   1aa98:	ldrb	w11, [x20]
   1aa9c:	ldr	w10, [x19, #8]
   1aaa0:	cbz	w11, 1aae8 <_getopt_internal_r@@Base+0x844>
   1aaa4:	cbz	w10, 1aba8 <_getopt_internal_r@@Base+0x904>
   1aaa8:	add	x8, x20, #0x1
   1aaac:	str	x8, [x21, #16]
   1aab0:	b	1ab10 <_getopt_internal_r@@Base+0x86c>
   1aab4:	ldur	w8, [x29, #-8]
   1aab8:	cbnz	w8, 1abe8 <_getopt_internal_r@@Base+0x944>
   1aabc:	cbz	w26, 1aac8 <_getopt_internal_r@@Base+0x824>
   1aac0:	mov	x0, x27
   1aac4:	bl	aaa0 <free@plt>
   1aac8:	ldr	x20, [x21, #32]
   1aacc:	mov	x0, x20
   1aad0:	bl	a370 <strlen@plt>
   1aad4:	ldr	w8, [x21]
   1aad8:	add	x9, x20, x0
   1aadc:	str	wzr, [x21, #8]
   1aae0:	str	x9, [x21, #32]
   1aae4:	b	1ab7c <_getopt_internal_r@@Base+0x8d8>
   1aae8:	cmp	w10, #0x1
   1aaec:	b.ne	1ab10 <_getopt_internal_r@@Base+0x86c>  // b.any
   1aaf0:	ldr	w10, [sp, #36]
   1aaf4:	cmp	w8, w10
   1aaf8:	b.ge	1abc0 <_getopt_internal_r@@Base+0x91c>  // b.tcont
   1aafc:	add	w9, w9, #0x2
   1ab00:	str	w9, [x21]
   1ab04:	ldur	x9, [x29, #-32]
   1ab08:	ldr	x8, [x9, w8, sxtw #3]
   1ab0c:	b	1aaac <_getopt_internal_r@@Base+0x808>
   1ab10:	cbz	x4, 1ab18 <_getopt_internal_r@@Base+0x874>
   1ab14:	str	w12, [x4]
   1ab18:	ldr	x8, [x19, #16]
   1ab1c:	ldr	w0, [x19, #24]
   1ab20:	cbz	x8, 1ab88 <_getopt_internal_r@@Base+0x8e4>
   1ab24:	str	w0, [x8]
   1ab28:	mov	w0, wzr
   1ab2c:	b	1ab88 <_getopt_internal_r@@Base+0x8e4>
   1ab30:	ldur	w8, [x29, #-4]
   1ab34:	cbz	w8, 1ab68 <_getopt_internal_r@@Base+0x8c4>
   1ab38:	ldrsw	x8, [x21]
   1ab3c:	ldur	x9, [x29, #-32]
   1ab40:	ldr	x8, [x9, x8, lsl #3]
   1ab44:	ldrb	w8, [x8, #1]
   1ab48:	cmp	w8, #0x2d
   1ab4c:	b.eq	1ab68 <_getopt_internal_r@@Base+0x8c4>  // b.none
   1ab50:	ldrb	w1, [x24]
   1ab54:	ldr	x0, [sp, #40]
   1ab58:	bl	ab90 <strchr@plt>
   1ab5c:	cbz	x0, 1ab68 <_getopt_internal_r@@Base+0x8c4>
   1ab60:	mov	w0, #0xffffffff            	// #-1
   1ab64:	b	1ab88 <_getopt_internal_r@@Base+0x8e4>
   1ab68:	ldur	w8, [x29, #-8]
   1ab6c:	cbnz	w8, 1acd8 <_getopt_internal_r@@Base+0xa34>
   1ab70:	ldr	w8, [x21]
   1ab74:	str	xzr, [x21, #32]
   1ab78:	str	wzr, [x21, #8]
   1ab7c:	add	w8, w8, #0x1
   1ab80:	str	w8, [x21]
   1ab84:	mov	w0, #0x3f                  	// #63
   1ab88:	ldp	x20, x19, [sp, #160]
   1ab8c:	ldp	x22, x21, [sp, #144]
   1ab90:	ldp	x24, x23, [sp, #128]
   1ab94:	ldp	x26, x25, [sp, #112]
   1ab98:	ldp	x28, x27, [sp, #96]
   1ab9c:	ldp	x29, x30, [sp, #80]
   1aba0:	add	sp, sp, #0xb0
   1aba4:	ret
   1aba8:	ldur	w8, [x29, #-8]
   1abac:	cbnz	w8, 1ad1c <_getopt_internal_r@@Base+0xa78>
   1abb0:	ldr	w8, [x19, #24]
   1abb4:	mov	w0, #0x3f                  	// #63
   1abb8:	str	w8, [x21, #8]
   1abbc:	b	1ab88 <_getopt_internal_r@@Base+0x8e4>
   1abc0:	ldur	w8, [x29, #-8]
   1abc4:	cbnz	w8, 1ad60 <_getopt_internal_r@@Base+0xabc>
   1abc8:	ldr	w8, [x19, #24]
   1abcc:	mov	w9, #0x3f                  	// #63
   1abd0:	str	w8, [x21, #8]
   1abd4:	ldr	x8, [sp, #40]
   1abd8:	ldrb	w8, [x8]
   1abdc:	cmp	w8, #0x3a
   1abe0:	csel	w0, w8, w9, eq  // eq = none
   1abe4:	b	1ab88 <_getopt_internal_r@@Base+0x8e4>
   1abe8:	adrp	x19, 3c000 <vasnprintf@@Base+0x14944>
   1abec:	ldr	x19, [x19, #3816]
   1abf0:	ldr	x20, [x19]
   1abf4:	cbz	w25, 1ac30 <_getopt_internal_r@@Base+0x98c>
   1abf8:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1abfc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1ac00:	add	x0, x0, #0xcb7
   1ac04:	add	x1, x1, #0xa24
   1ac08:	mov	w2, #0x5                   	// #5
   1ac0c:	bl	adc0 <dcgettext@plt>
   1ac10:	ldur	x8, [x29, #-32]
   1ac14:	ldr	x4, [x21, #32]
   1ac18:	mov	x1, x0
   1ac1c:	mov	x0, x20
   1ac20:	ldr	x2, [x8]
   1ac24:	mov	x3, x22
   1ac28:	bl	afb0 <fprintf@plt>
   1ac2c:	b	1aabc <_getopt_internal_r@@Base+0x818>
   1ac30:	mov	x0, x20
   1ac34:	bl	a3e0 <flockfile@plt>
   1ac38:	ldr	x20, [x19]
   1ac3c:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1ac40:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1ac44:	add	x0, x0, #0xcb7
   1ac48:	add	x1, x1, #0xa44
   1ac4c:	mov	w2, #0x5                   	// #5
   1ac50:	bl	adc0 <dcgettext@plt>
   1ac54:	ldur	x8, [x29, #-32]
   1ac58:	ldr	x4, [x21, #32]
   1ac5c:	mov	x1, x0
   1ac60:	mov	x0, x20
   1ac64:	ldr	x2, [x8]
   1ac68:	mov	x3, x22
   1ac6c:	mov	x23, x21
   1ac70:	mov	x24, x22
   1ac74:	bl	afb0 <fprintf@plt>
   1ac78:	ldr	x25, [sp, #24]
   1ac7c:	cbz	w28, 1acbc <_getopt_internal_r@@Base+0xa18>
   1ac80:	adrp	x20, 2a000 <vasnprintf@@Base+0x2944>
   1ac84:	mov	w21, w28
   1ac88:	add	x20, x20, #0xa73
   1ac8c:	mov	x22, x27
   1ac90:	ldrb	w8, [x22]
   1ac94:	cbz	w8, 1acac <_getopt_internal_r@@Base+0xa08>
   1ac98:	ldr	x0, [x19]
   1ac9c:	ldr	x3, [x25]
   1aca0:	mov	x1, x20
   1aca4:	mov	x2, x24
   1aca8:	bl	afb0 <fprintf@plt>
   1acac:	add	x22, x22, #0x1
   1acb0:	subs	x21, x21, #0x1
   1acb4:	add	x25, x25, #0x20
   1acb8:	b.ne	1ac90 <_getopt_internal_r@@Base+0x9ec>  // b.any
   1acbc:	ldr	x1, [x19]
   1acc0:	mov	w0, #0xa                   	// #10
   1acc4:	bl	a530 <fputc@plt>
   1acc8:	ldr	x0, [x19]
   1accc:	bl	a6a0 <funlockfile@plt>
   1acd0:	mov	x21, x23
   1acd4:	b	1aabc <_getopt_internal_r@@Base+0x818>
   1acd8:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1acdc:	ldr	x8, [x8, #3816]
   1ace0:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1ace4:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1ace8:	add	x0, x0, #0xcb7
   1acec:	ldr	x20, [x8]
   1acf0:	add	x1, x1, #0xa7b
   1acf4:	mov	w2, #0x5                   	// #5
   1acf8:	bl	adc0 <dcgettext@plt>
   1acfc:	ldur	x8, [x29, #-32]
   1ad00:	ldr	x4, [x21, #32]
   1ad04:	mov	x1, x0
   1ad08:	mov	x0, x20
   1ad0c:	ldr	x2, [x8]
   1ad10:	mov	x3, x22
   1ad14:	bl	afb0 <fprintf@plt>
   1ad18:	b	1ab70 <_getopt_internal_r@@Base+0x8cc>
   1ad1c:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1ad20:	ldr	x8, [x8, #3816]
   1ad24:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1ad28:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1ad2c:	add	x0, x0, #0xcb7
   1ad30:	ldr	x20, [x8]
   1ad34:	add	x1, x1, #0xa9b
   1ad38:	mov	w2, #0x5                   	// #5
   1ad3c:	bl	adc0 <dcgettext@plt>
   1ad40:	ldur	x8, [x29, #-32]
   1ad44:	ldr	x4, [x19]
   1ad48:	mov	x1, x0
   1ad4c:	mov	x0, x20
   1ad50:	ldr	x2, [x8]
   1ad54:	mov	x3, x22
   1ad58:	bl	afb0 <fprintf@plt>
   1ad5c:	b	1abb0 <_getopt_internal_r@@Base+0x90c>
   1ad60:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1ad64:	ldr	x8, [x8, #3816]
   1ad68:	adrp	x0, 28000 <vasnprintf@@Base+0x944>
   1ad6c:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1ad70:	add	x0, x0, #0xcb7
   1ad74:	ldr	x20, [x8]
   1ad78:	add	x1, x1, #0xac8
   1ad7c:	mov	w2, #0x5                   	// #5
   1ad80:	bl	adc0 <dcgettext@plt>
   1ad84:	ldur	x8, [x29, #-32]
   1ad88:	ldr	x4, [x19]
   1ad8c:	mov	x1, x0
   1ad90:	mov	x0, x20
   1ad94:	ldr	x2, [x8]
   1ad98:	mov	x3, x22
   1ad9c:	bl	afb0 <fprintf@plt>
   1ada0:	b	1abc8 <_getopt_internal_r@@Base+0x924>

000000000001ada4 <rpl_getopt_internal@@Base>:
   1ada4:	stp	x29, x30, [sp, #-32]!
   1ada8:	stp	x20, x19, [sp, #16]
   1adac:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
   1adb0:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1adb4:	ldr	x20, [x20, #4032]
   1adb8:	ldr	x8, [x8, #3856]
   1adbc:	adrp	x19, 3d000 <base_len@@Base+0x2a06c>
   1adc0:	add	x19, x19, #0x948
   1adc4:	ldr	w9, [x20]
   1adc8:	ldr	w8, [x8]
   1adcc:	mov	w7, w6
   1add0:	mov	x6, x19
   1add4:	mov	x29, sp
   1add8:	stp	w9, w8, [x19]
   1addc:	bl	ae80 <_getopt_internal_r@plt>
   1ade0:	ldr	w8, [x19]
   1ade4:	adrp	x10, 3c000 <vasnprintf@@Base+0x14944>
   1ade8:	adrp	x12, 3c000 <vasnprintf@@Base+0x14944>
   1adec:	ldr	x9, [x19, #16]
   1adf0:	ldr	x10, [x10, #4016]
   1adf4:	ldr	w11, [x19, #8]
   1adf8:	ldr	x12, [x12, #3880]
   1adfc:	str	w8, [x20]
   1ae00:	ldp	x20, x19, [sp, #16]
   1ae04:	str	x9, [x10]
   1ae08:	str	w11, [x12]
   1ae0c:	ldp	x29, x30, [sp], #32
   1ae10:	ret

000000000001ae14 <rpl_getopt@@Base>:
   1ae14:	stp	x29, x30, [sp, #-32]!
   1ae18:	stp	x20, x19, [sp, #16]
   1ae1c:	adrp	x20, 3c000 <vasnprintf@@Base+0x14944>
   1ae20:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1ae24:	ldr	x20, [x20, #4032]
   1ae28:	ldr	x8, [x8, #3856]
   1ae2c:	adrp	x19, 3d000 <base_len@@Base+0x2a06c>
   1ae30:	add	x19, x19, #0x948
   1ae34:	ldr	w9, [x20]
   1ae38:	ldr	w8, [x8]
   1ae3c:	mov	w7, #0x1                   	// #1
   1ae40:	mov	x3, xzr
   1ae44:	mov	x4, xzr
   1ae48:	mov	w5, wzr
   1ae4c:	mov	x6, x19
   1ae50:	mov	x29, sp
   1ae54:	stp	w9, w8, [x19]
   1ae58:	bl	ae80 <_getopt_internal_r@plt>
   1ae5c:	ldr	w8, [x19]
   1ae60:	adrp	x10, 3c000 <vasnprintf@@Base+0x14944>
   1ae64:	adrp	x12, 3c000 <vasnprintf@@Base+0x14944>
   1ae68:	ldr	x9, [x19, #16]
   1ae6c:	ldr	x10, [x10, #4016]
   1ae70:	ldr	w11, [x19, #8]
   1ae74:	ldr	x12, [x12, #3880]
   1ae78:	str	w8, [x20]
   1ae7c:	ldp	x20, x19, [sp, #16]
   1ae80:	str	x9, [x10]
   1ae84:	str	w11, [x12]
   1ae88:	ldp	x29, x30, [sp], #32
   1ae8c:	ret

000000000001ae90 <rpl_getopt_long@@Base>:
   1ae90:	mov	w5, wzr
   1ae94:	mov	w6, wzr
   1ae98:	b	ab50 <rpl_getopt_internal@plt>

000000000001ae9c <_getopt_long_r@@Base>:
   1ae9c:	mov	x6, x5
   1aea0:	mov	w5, wzr
   1aea4:	mov	w7, wzr
   1aea8:	b	ae80 <_getopt_internal_r@plt>

000000000001aeac <rpl_getopt_long_only@@Base>:
   1aeac:	mov	w5, #0x1                   	// #1
   1aeb0:	mov	w6, wzr
   1aeb4:	b	ab50 <rpl_getopt_internal@plt>

000000000001aeb8 <_getopt_long_only_r@@Base>:
   1aeb8:	mov	x6, x5
   1aebc:	mov	w5, #0x1                   	// #1
   1aec0:	mov	w7, wzr
   1aec4:	b	ae80 <_getopt_internal_r@plt>

000000000001aec8 <rpl_ioctl@@Base>:
   1aec8:	sub	sp, sp, #0xe0
   1aecc:	stp	x29, x30, [sp, #208]
   1aed0:	add	x29, sp, #0xd0
   1aed4:	mov	x9, #0xffffffffffffffd0    	// #-48
   1aed8:	mov	x10, sp
   1aedc:	sub	x11, x29, #0x50
   1aee0:	movk	x9, #0xff80, lsl #32
   1aee4:	add	x12, x29, #0x10
   1aee8:	mov	x8, #0xffffffffffffffd0    	// #-48
   1aeec:	add	x10, x10, #0x80
   1aef0:	add	x11, x11, #0x30
   1aef4:	stp	x2, x3, [x29, #-80]
   1aef8:	stp	x4, x5, [x29, #-64]
   1aefc:	stp	x6, x7, [x29, #-48]
   1af00:	stp	q1, q2, [sp, #16]
   1af04:	stp	q3, q4, [sp, #48]
   1af08:	str	q0, [sp]
   1af0c:	stp	q5, q6, [sp, #80]
   1af10:	str	q7, [sp, #112]
   1af14:	stp	x10, x9, [x29, #-16]
   1af18:	stp	x12, x11, [x29, #-32]
   1af1c:	tbz	w8, #31, 1af3c <rpl_ioctl@@Base+0x74>
   1af20:	add	w9, w8, #0x8
   1af24:	cmn	w8, #0x8
   1af28:	stur	w9, [x29, #-8]
   1af2c:	b.gt	1af3c <rpl_ioctl@@Base+0x74>
   1af30:	ldur	x9, [x29, #-24]
   1af34:	add	x8, x9, x8
   1af38:	b	1af48 <rpl_ioctl@@Base+0x80>
   1af3c:	ldur	x8, [x29, #-32]
   1af40:	add	x9, x8, #0x8
   1af44:	stur	x9, [x29, #-32]
   1af48:	ldr	x2, [x8]
   1af4c:	mov	w1, w1
   1af50:	bl	afc0 <ioctl@plt>
   1af54:	ldp	x29, x30, [sp, #208]
   1af58:	add	sp, sp, #0xe0
   1af5c:	ret

000000000001af60 <rpl_mbrtowc@@Base>:
   1af60:	sub	sp, sp, #0x40
   1af64:	stp	x29, x30, [sp, #16]
   1af68:	add	x29, sp, #0x10
   1af6c:	cmp	x0, #0x0
   1af70:	sub	x8, x29, #0x4
   1af74:	stp	x20, x19, [sp, #48]
   1af78:	csel	x20, x8, x0, eq  // eq = none
   1af7c:	mov	x0, x20
   1af80:	stp	x22, x21, [sp, #32]
   1af84:	mov	x22, x2
   1af88:	mov	x19, x1
   1af8c:	bl	a2e0 <mbrtowc@plt>
   1af90:	mov	x21, x0
   1af94:	cbz	x22, 1afb8 <rpl_mbrtowc@@Base+0x58>
   1af98:	cmn	x21, #0x2
   1af9c:	b.cc	1afb8 <rpl_mbrtowc@@Base+0x58>  // b.lo, b.ul, b.last
   1afa0:	mov	w0, wzr
   1afa4:	bl	a810 <hard_locale@plt>
   1afa8:	tbnz	w0, #0, 1afb8 <rpl_mbrtowc@@Base+0x58>
   1afac:	ldrb	w8, [x19]
   1afb0:	mov	w21, #0x1                   	// #1
   1afb4:	str	w8, [x20]
   1afb8:	mov	x0, x21
   1afbc:	ldp	x20, x19, [sp, #48]
   1afc0:	ldp	x22, x21, [sp, #32]
   1afc4:	ldp	x29, x30, [sp, #16]
   1afc8:	add	sp, sp, #0x40
   1afcc:	ret

000000000001afd0 <rpl_nanosleep@@Base>:
   1afd0:	sub	sp, sp, #0x40
   1afd4:	stp	x29, x30, [sp, #16]
   1afd8:	stp	x22, x21, [sp, #32]
   1afdc:	stp	x20, x19, [sp, #48]
   1afe0:	ldr	x8, [x0, #8]
   1afe4:	mov	w9, #0xca00                	// #51712
   1afe8:	movk	w9, #0x3b9a, lsl #16
   1afec:	add	x29, sp, #0x10
   1aff0:	cmp	x8, x9
   1aff4:	b.cc	1b00c <rpl_nanosleep@@Base+0x3c>  // b.lo, b.ul, b.last
   1aff8:	bl	aec0 <__errno_location@plt>
   1affc:	mov	w8, #0x16                  	// #22
   1b000:	str	w8, [x0]
   1b004:	mov	w0, #0xffffffff            	// #-1
   1b008:	b	1b070 <rpl_nanosleep@@Base+0xa0>
   1b00c:	ldr	x20, [x0]
   1b010:	mov	w21, #0xa400                	// #41984
   1b014:	mov	x22, #0xffffffffffff5c00    	// #-41984
   1b018:	mov	x19, x1
   1b01c:	movk	w21, #0x1f, lsl #16
   1b020:	movk	x22, #0xffe0, lsl #16
   1b024:	cmp	x20, x21
   1b028:	str	x8, [sp, #8]
   1b02c:	b.le	1b060 <rpl_nanosleep@@Base+0x90>
   1b030:	mov	x0, sp
   1b034:	mov	x1, x19
   1b038:	str	x21, [sp]
   1b03c:	bl	ab30 <nanosleep@plt>
   1b040:	mov	x8, xzr
   1b044:	add	x20, x20, x22
   1b048:	cbz	w0, 1b024 <rpl_nanosleep@@Base+0x54>
   1b04c:	cbz	x19, 1b070 <rpl_nanosleep@@Base+0xa0>
   1b050:	ldr	x8, [x19]
   1b054:	add	x8, x8, x20
   1b058:	str	x8, [x19]
   1b05c:	b	1b070 <rpl_nanosleep@@Base+0xa0>
   1b060:	mov	x0, sp
   1b064:	mov	x1, x19
   1b068:	str	x20, [sp]
   1b06c:	bl	ab30 <nanosleep@plt>
   1b070:	ldp	x20, x19, [sp, #48]
   1b074:	ldp	x22, x21, [sp, #32]
   1b078:	ldp	x29, x30, [sp, #16]
   1b07c:	add	sp, sp, #0x40
   1b080:	ret

000000000001b084 <openat_proc_name@@Base>:
   1b084:	sub	sp, sp, #0x60
   1b088:	stp	x29, x30, [sp, #32]
   1b08c:	stp	x22, x21, [sp, #64]
   1b090:	stp	x20, x19, [sp, #80]
   1b094:	ldrb	w8, [x2]
   1b098:	mov	x19, x0
   1b09c:	str	x23, [sp, #48]
   1b0a0:	add	x29, sp, #0x20
   1b0a4:	cbz	w8, 1b104 <openat_proc_name@@Base+0x80>
   1b0a8:	adrp	x23, 3d000 <base_len@@Base+0x2a06c>
   1b0ac:	ldr	w8, [x23, #2432]
   1b0b0:	mov	x20, x2
   1b0b4:	mov	w21, w1
   1b0b8:	cbz	w8, 1b10c <openat_proc_name@@Base+0x88>
   1b0bc:	tbnz	w8, #31, 1b164 <openat_proc_name@@Base+0xe0>
   1b0c0:	mov	x0, x20
   1b0c4:	bl	a370 <strlen@plt>
   1b0c8:	add	x0, x0, #0x1b
   1b0cc:	cmp	x0, #0xfc1
   1b0d0:	b.cc	1b0e0 <openat_proc_name@@Base+0x5c>  // b.lo, b.ul, b.last
   1b0d4:	bl	a660 <malloc@plt>
   1b0d8:	mov	x19, x0
   1b0dc:	cbz	x0, 1b178 <openat_proc_name@@Base+0xf4>
   1b0e0:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1b0e4:	add	x1, x1, #0xb15
   1b0e8:	mov	x0, x19
   1b0ec:	mov	w2, w21
   1b0f0:	bl	a4e0 <sprintf@plt>
   1b0f4:	add	x0, x19, w0, sxtw
   1b0f8:	mov	x1, x20
   1b0fc:	bl	ac60 <strcpy@plt>
   1b100:	b	1b178 <openat_proc_name@@Base+0xf4>
   1b104:	strb	wzr, [x19]
   1b108:	b	1b178 <openat_proc_name@@Base+0xf4>
   1b10c:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   1b110:	add	x0, x0, #0xaf0
   1b114:	mov	w1, #0x4900                	// #18688
   1b118:	bl	a6c0 <open@plt>
   1b11c:	tbnz	w0, #31, 1b16c <openat_proc_name@@Base+0xe8>
   1b120:	mov	w22, w0
   1b124:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   1b128:	add	x1, x1, #0xafe
   1b12c:	mov	x0, sp
   1b130:	mov	w2, w22
   1b134:	bl	a4e0 <sprintf@plt>
   1b138:	mov	x0, sp
   1b13c:	mov	w1, wzr
   1b140:	bl	a9c0 <access@plt>
   1b144:	cmp	w0, #0x0
   1b148:	mov	w8, #0x1                   	// #1
   1b14c:	cneg	w8, w8, ne  // ne = any
   1b150:	mov	w0, w22
   1b154:	str	w8, [x23, #2432]
   1b158:	bl	a8d0 <close@plt>
   1b15c:	ldr	w8, [x23, #2432]
   1b160:	tbz	w8, #31, 1b0c0 <openat_proc_name@@Base+0x3c>
   1b164:	mov	x19, xzr
   1b168:	b	1b178 <openat_proc_name@@Base+0xf4>
   1b16c:	mov	w8, #0xffffffff            	// #-1
   1b170:	mov	x19, xzr
   1b174:	str	w8, [x23, #2432]
   1b178:	mov	x0, x19
   1b17c:	ldp	x20, x19, [sp, #80]
   1b180:	ldp	x22, x21, [sp, #64]
   1b184:	ldr	x23, [sp, #48]
   1b188:	ldp	x29, x30, [sp, #32]
   1b18c:	add	sp, sp, #0x60
   1b190:	ret

000000000001b194 <printf_fetchargs@@Base>:
   1b194:	ldr	x8, [x1]
   1b198:	cbz	x8, 1b3cc <printf_fetchargs@@Base+0x238>
   1b19c:	ldr	x12, [x1, #8]
   1b1a0:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   1b1a4:	adrp	x11, 2a000 <vasnprintf@@Base+0x2944>
   1b1a8:	adrp	x13, 2a000 <vasnprintf@@Base+0x2944>
   1b1ac:	mov	x8, xzr
   1b1b0:	add	x9, x0, #0x18
   1b1b4:	add	x10, x10, #0xb28
   1b1b8:	add	x11, x11, #0xb5c
   1b1bc:	add	x12, x12, #0x10
   1b1c0:	add	x13, x13, #0xb40
   1b1c4:	ldur	w14, [x12, #-16]
   1b1c8:	sub	w14, w14, #0x1
   1b1cc:	cmp	w14, #0x15
   1b1d0:	b.hi	1b3d4 <printf_fetchargs@@Base+0x240>  // b.pmore
   1b1d4:	adr	x15, 1b1e4 <printf_fetchargs@@Base+0x50>
   1b1d8:	ldrb	w16, [x10, x14]
   1b1dc:	add	x15, x15, x16, lsl #2
   1b1e0:	br	x15
   1b1e4:	ldrsw	x14, [x9]
   1b1e8:	tbz	w14, #31, 1b2dc <printf_fetchargs@@Base+0x148>
   1b1ec:	add	w15, w14, #0x8
   1b1f0:	cmn	w14, #0x8
   1b1f4:	str	w15, [x9]
   1b1f8:	b.gt	1b2dc <printf_fetchargs@@Base+0x148>
   1b1fc:	ldr	x15, [x0, #8]
   1b200:	add	x14, x15, x14
   1b204:	b	1b2e8 <printf_fetchargs@@Base+0x154>
   1b208:	ldrsw	x14, [x9]
   1b20c:	tbz	w14, #31, 1b22c <printf_fetchargs@@Base+0x98>
   1b210:	add	w15, w14, #0x8
   1b214:	cmn	w14, #0x8
   1b218:	str	w15, [x9]
   1b21c:	b.gt	1b22c <printf_fetchargs@@Base+0x98>
   1b220:	ldr	x15, [x0, #8]
   1b224:	add	x14, x15, x14
   1b228:	b	1b238 <printf_fetchargs@@Base+0xa4>
   1b22c:	ldr	x14, [x0]
   1b230:	add	x15, x14, #0x8
   1b234:	str	x15, [x0]
   1b238:	ldr	w14, [x14]
   1b23c:	str	w14, [x12]
   1b240:	b	1b2f0 <printf_fetchargs@@Base+0x15c>
   1b244:	ldrsw	x14, [x9]
   1b248:	tbz	w14, #31, 1b28c <printf_fetchargs@@Base+0xf8>
   1b24c:	add	w15, w14, #0x8
   1b250:	cmn	w14, #0x8
   1b254:	str	w15, [x9]
   1b258:	b.gt	1b28c <printf_fetchargs@@Base+0xf8>
   1b25c:	ldr	x15, [x0, #8]
   1b260:	add	x14, x15, x14
   1b264:	b	1b298 <printf_fetchargs@@Base+0x104>
   1b268:	ldrsw	x14, [x9]
   1b26c:	tbz	w14, #31, 1b2a4 <printf_fetchargs@@Base+0x110>
   1b270:	add	w15, w14, #0x8
   1b274:	cmn	w14, #0x8
   1b278:	str	w15, [x9]
   1b27c:	b.gt	1b2a4 <printf_fetchargs@@Base+0x110>
   1b280:	ldr	x15, [x0, #8]
   1b284:	add	x14, x15, x14
   1b288:	b	1b2b0 <printf_fetchargs@@Base+0x11c>
   1b28c:	ldr	x14, [x0]
   1b290:	add	x15, x14, #0x8
   1b294:	str	x15, [x0]
   1b298:	ldr	w14, [x14]
   1b29c:	strb	w14, [x12]
   1b2a0:	b	1b2f0 <printf_fetchargs@@Base+0x15c>
   1b2a4:	ldr	x14, [x0]
   1b2a8:	add	x15, x14, #0x8
   1b2ac:	str	x15, [x0]
   1b2b0:	ldr	w14, [x14]
   1b2b4:	strh	w14, [x12]
   1b2b8:	b	1b2f0 <printf_fetchargs@@Base+0x15c>
   1b2bc:	ldrsw	x14, [x0, #28]
   1b2c0:	tbz	w14, #31, 1b2dc <printf_fetchargs@@Base+0x148>
   1b2c4:	add	w15, w14, #0x10
   1b2c8:	cmn	w14, #0x10
   1b2cc:	str	w15, [x0, #28]
   1b2d0:	b.gt	1b2dc <printf_fetchargs@@Base+0x148>
   1b2d4:	ldr	x15, [x0, #16]
   1b2d8:	b	1b200 <printf_fetchargs@@Base+0x6c>
   1b2dc:	ldr	x14, [x0]
   1b2e0:	add	x15, x14, #0x8
   1b2e4:	str	x15, [x0]
   1b2e8:	ldr	x14, [x14]
   1b2ec:	str	x14, [x12]
   1b2f0:	ldr	x14, [x1]
   1b2f4:	add	x8, x8, #0x1
   1b2f8:	add	x12, x12, #0x20
   1b2fc:	cmp	x8, x14
   1b300:	b.cc	1b1c4 <printf_fetchargs@@Base+0x30>  // b.lo, b.ul, b.last
   1b304:	b	1b3cc <printf_fetchargs@@Base+0x238>
   1b308:	ldrsw	x14, [x0, #28]
   1b30c:	tbz	w14, #31, 1b374 <printf_fetchargs@@Base+0x1e0>
   1b310:	add	w15, w14, #0x10
   1b314:	cmn	w14, #0x10
   1b318:	str	w15, [x0, #28]
   1b31c:	b.gt	1b374 <printf_fetchargs@@Base+0x1e0>
   1b320:	ldr	x15, [x0, #16]
   1b324:	add	x14, x15, x14
   1b328:	b	1b388 <printf_fetchargs@@Base+0x1f4>
   1b32c:	ldrsw	x14, [x9]
   1b330:	tbz	w14, #31, 1b394 <printf_fetchargs@@Base+0x200>
   1b334:	add	w15, w14, #0x8
   1b338:	cmn	w14, #0x8
   1b33c:	str	w15, [x9]
   1b340:	b.gt	1b394 <printf_fetchargs@@Base+0x200>
   1b344:	ldr	x15, [x0, #8]
   1b348:	add	x14, x15, x14
   1b34c:	b	1b3a0 <printf_fetchargs@@Base+0x20c>
   1b350:	ldrsw	x14, [x9]
   1b354:	tbz	w14, #31, 1b3b0 <printf_fetchargs@@Base+0x21c>
   1b358:	add	w15, w14, #0x8
   1b35c:	cmn	w14, #0x8
   1b360:	str	w15, [x9]
   1b364:	b.gt	1b3b0 <printf_fetchargs@@Base+0x21c>
   1b368:	ldr	x15, [x0, #8]
   1b36c:	add	x14, x15, x14
   1b370:	b	1b3bc <printf_fetchargs@@Base+0x228>
   1b374:	ldr	x14, [x0]
   1b378:	add	x14, x14, #0xf
   1b37c:	and	x14, x14, #0xfffffffffffffff0
   1b380:	add	x15, x14, #0x10
   1b384:	str	x15, [x0]
   1b388:	ldr	q0, [x14]
   1b38c:	str	q0, [x12]
   1b390:	b	1b2f0 <printf_fetchargs@@Base+0x15c>
   1b394:	ldr	x14, [x0]
   1b398:	add	x15, x14, #0x8
   1b39c:	str	x15, [x0]
   1b3a0:	ldr	x14, [x14]
   1b3a4:	cmp	x14, #0x0
   1b3a8:	csel	x14, x11, x14, eq  // eq = none
   1b3ac:	b	1b2ec <printf_fetchargs@@Base+0x158>
   1b3b0:	ldr	x14, [x0]
   1b3b4:	add	x15, x14, #0x8
   1b3b8:	str	x15, [x0]
   1b3bc:	ldr	x14, [x14]
   1b3c0:	cmp	x14, #0x0
   1b3c4:	csel	x14, x13, x14, eq  // eq = none
   1b3c8:	b	1b2ec <printf_fetchargs@@Base+0x158>
   1b3cc:	mov	w0, wzr
   1b3d0:	ret
   1b3d4:	mov	w0, #0xffffffff            	// #-1
   1b3d8:	ret

000000000001b3dc <printf_parse@@Base>:
   1b3dc:	sub	sp, sp, #0xb0
   1b3e0:	add	x8, x1, #0x20
   1b3e4:	add	x9, x2, #0x10
   1b3e8:	stp	x29, x30, [sp, #80]
   1b3ec:	stp	x28, x27, [sp, #96]
   1b3f0:	stp	x26, x25, [sp, #112]
   1b3f4:	stp	x24, x23, [sp, #128]
   1b3f8:	stp	x22, x21, [sp, #144]
   1b3fc:	stp	x20, x19, [sp, #160]
   1b400:	stp	xzr, x8, [x1]
   1b404:	str	x8, [sp, #32]
   1b408:	stp	xzr, x9, [x2]
   1b40c:	ldrb	w8, [x0]
   1b410:	add	x29, sp, #0x50
   1b414:	mov	x23, x0
   1b418:	stur	x9, [x29, #-16]
   1b41c:	cbz	w8, 1bd90 <printf_parse@@Base+0x9b4>
   1b420:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1b424:	movk	x0, #0x999a
   1b428:	adrp	x20, 2a000 <vasnprintf@@Base+0x2944>
   1b42c:	movk	x0, #0x1999, lsl #48
   1b430:	mov	w18, #0x7                   	// #7
   1b434:	mov	w3, #0x1                   	// #1
   1b438:	add	x20, x20, #0xb64
   1b43c:	mov	w25, #0x7                   	// #7
   1b440:	stur	xzr, [x29, #-8]
   1b444:	stp	xzr, xzr, [sp, #16]
   1b448:	stur	x1, [x29, #-24]
   1b44c:	str	x2, [sp, #40]
   1b450:	and	w8, w8, #0xff
   1b454:	cmp	w8, #0x25
   1b458:	add	x13, x23, #0x1
   1b45c:	b.ne	1b534 <printf_parse@@Base+0x158>  // b.any
   1b460:	ldp	x4, x5, [x1]
   1b464:	mov	w8, #0x58                  	// #88
   1b468:	mov	x28, #0xffffffffffffffff    	// #-1
   1b46c:	stur	x18, [x29, #-32]
   1b470:	mul	x8, x4, x8
   1b474:	add	x24, x5, x8
   1b478:	str	x23, [x5, x8]
   1b47c:	mov	x11, x24
   1b480:	mov	x10, x24
   1b484:	mov	x9, x24
   1b488:	mov	x8, x24
   1b48c:	mov	x27, x24
   1b490:	mov	x26, x24
   1b494:	mov	x22, x24
   1b498:	str	wzr, [x11, #16]!
   1b49c:	str	xzr, [x10, #24]!
   1b4a0:	str	xzr, [x9, #32]!
   1b4a4:	str	x28, [x8, #40]!
   1b4a8:	str	xzr, [x27, #48]!
   1b4ac:	str	xzr, [x26, #56]!
   1b4b0:	str	x28, [x22, #64]!
   1b4b4:	str	x28, [x24, #80]!
   1b4b8:	ldrb	w14, [x23, #1]
   1b4bc:	sub	w12, w14, #0x30
   1b4c0:	cmp	w12, #0x9
   1b4c4:	b.hi	1b540 <printf_parse@@Base+0x164>  // b.pmore
   1b4c8:	add	x12, x23, #0x2
   1b4cc:	mov	x15, x12
   1b4d0:	ldrb	w16, [x15], #1
   1b4d4:	sub	w17, w16, #0x30
   1b4d8:	cmp	w17, #0xa
   1b4dc:	b.cc	1b4d0 <printf_parse@@Base+0xf4>  // b.lo, b.ul, b.last
   1b4e0:	cmp	w16, #0x24
   1b4e4:	b.ne	1b53c <printf_parse@@Base+0x160>  // b.any
   1b4e8:	mov	x13, xzr
   1b4ec:	add	x15, x13, x13, lsl #2
   1b4f0:	cmp	x13, x0
   1b4f4:	and	x13, x14, #0xff
   1b4f8:	ldrb	w14, [x12], #1
   1b4fc:	lsl	x15, x15, #1
   1b500:	sub	x13, x13, #0x30
   1b504:	csinv	x15, x15, xzr, cc  // cc = lo, ul, last
   1b508:	adds	x13, x15, x13
   1b50c:	sub	w15, w14, #0x30
   1b510:	csinv	x13, x13, xzr, cc  // cc = lo, ul, last
   1b514:	cmp	w15, #0xa
   1b518:	b.cc	1b4ec <printf_parse@@Base+0x110>  // b.lo, b.ul, b.last
   1b51c:	add	x14, x13, #0x1
   1b520:	cmp	x14, #0x2
   1b524:	b.cc	1bda0 <printf_parse@@Base+0x9c4>  // b.lo, b.ul, b.last
   1b528:	sub	x28, x13, #0x1
   1b52c:	mov	x13, x12
   1b530:	b	1b540 <printf_parse@@Base+0x164>
   1b534:	mov	x23, x13
   1b538:	b	1bb8c <printf_parse@@Base+0x7b0>
   1b53c:	mov	x28, #0xffffffffffffffff    	// #-1
   1b540:	mov	w14, wzr
   1b544:	add	x12, x13, #0x1
   1b548:	add	x21, x13, #0x2
   1b54c:	sub	x13, x13, #0x1
   1b550:	ldurb	w15, [x12, #-1]
   1b554:	sub	w16, w15, #0x20
   1b558:	cmp	w16, #0x10
   1b55c:	b.hi	1b57c <printf_parse@@Base+0x1a0>  // b.pmore
   1b560:	adr	x17, 1b574 <printf_parse@@Base+0x198>
   1b564:	ldrb	w18, [x20, x16]
   1b568:	add	x17, x17, x18, lsl #2
   1b56c:	mov	w16, #0x1                   	// #1
   1b570:	br	x17
   1b574:	mov	w16, #0x8                   	// #8
   1b578:	b	1b5a8 <printf_parse@@Base+0x1cc>
   1b57c:	cmp	w15, #0x49
   1b580:	b.ne	1b5c0 <printf_parse@@Base+0x1e4>  // b.any
   1b584:	mov	w16, #0x40                  	// #64
   1b588:	b	1b5a8 <printf_parse@@Base+0x1cc>
   1b58c:	mov	w16, #0x10                  	// #16
   1b590:	b	1b5a8 <printf_parse@@Base+0x1cc>
   1b594:	mov	w16, #0x4                   	// #4
   1b598:	b	1b5a8 <printf_parse@@Base+0x1cc>
   1b59c:	mov	w16, #0x2                   	// #2
   1b5a0:	b	1b5a8 <printf_parse@@Base+0x1cc>
   1b5a4:	mov	w16, #0x20                  	// #32
   1b5a8:	orr	w14, w14, w16
   1b5ac:	add	x12, x12, #0x1
   1b5b0:	add	x21, x21, #0x1
   1b5b4:	str	w14, [x11]
   1b5b8:	add	x13, x13, #0x1
   1b5bc:	b	1b550 <printf_parse@@Base+0x174>
   1b5c0:	sub	w8, w15, #0x30
   1b5c4:	cmp	w8, #0x9
   1b5c8:	sub	x21, x12, #0x1
   1b5cc:	b.hi	1b7a8 <printf_parse@@Base+0x3cc>  // b.pmore
   1b5d0:	str	x21, [x10]
   1b5d4:	ldrb	w8, [x13, #1]!
   1b5d8:	sub	w8, w8, #0x30
   1b5dc:	cmp	w8, #0xa
   1b5e0:	b.cc	1b5d4 <printf_parse@@Base+0x1f8>  // b.lo, b.ul, b.last
   1b5e4:	str	x13, [x9]
   1b5e8:	ldr	x9, [sp, #24]
   1b5ec:	sub	x8, x13, x21
   1b5f0:	mov	x21, x13
   1b5f4:	cmp	x9, x8
   1b5f8:	csel	x9, x8, x9, cc  // cc = lo, ul, last
   1b5fc:	str	x9, [sp, #24]
   1b600:	b	1b7a4 <printf_parse@@Base+0x3c8>
   1b604:	sub	x11, x12, #0x1
   1b608:	str	x11, [x10]
   1b60c:	ldr	x10, [sp, #24]
   1b610:	str	x12, [x9]
   1b614:	ldrb	w9, [x12]
   1b618:	stp	x5, x4, [sp]
   1b61c:	cmp	x10, #0x0
   1b620:	csinc	x10, x10, xzr, ne  // ne = any
   1b624:	str	x10, [sp, #24]
   1b628:	sub	w10, w9, #0x30
   1b62c:	cmp	w10, #0x9
   1b630:	b.hi	1b69c <printf_parse@@Base+0x2c0>  // b.pmore
   1b634:	mov	x10, x21
   1b638:	ldrb	w11, [x10], #1
   1b63c:	sub	w13, w11, #0x30
   1b640:	cmp	w13, #0xa
   1b644:	b.cc	1b638 <printf_parse@@Base+0x25c>  // b.lo, b.ul, b.last
   1b648:	cmp	w11, #0x24
   1b64c:	b.ne	1b69c <printf_parse@@Base+0x2c0>  // b.any
   1b650:	mov	x10, xzr
   1b654:	add	x11, x10, x10, lsl #2
   1b658:	cmp	x10, x0
   1b65c:	and	x10, x9, #0xff
   1b660:	ldrb	w9, [x21], #1
   1b664:	lsl	x11, x11, #1
   1b668:	sub	x10, x10, #0x30
   1b66c:	csinv	x11, x11, xzr, cc  // cc = lo, ul, last
   1b670:	adds	x10, x11, x10
   1b674:	sub	w11, w9, #0x30
   1b678:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
   1b67c:	cmp	w11, #0xa
   1b680:	b.cc	1b654 <printf_parse@@Base+0x278>  // b.lo, b.ul, b.last
   1b684:	add	x9, x10, #0x1
   1b688:	cmp	x9, #0x2
   1b68c:	b.cc	1bda0 <printf_parse@@Base+0x9c4>  // b.lo, b.ul, b.last
   1b690:	sub	x19, x10, #0x1
   1b694:	str	x19, [x8]
   1b698:	b	1b6b8 <printf_parse@@Base+0x2dc>
   1b69c:	ldur	x10, [x29, #-8]
   1b6a0:	adds	x9, x10, #0x1
   1b6a4:	str	x10, [x8]
   1b6a8:	b.cs	1bda0 <printf_parse@@Base+0x9c4>  // b.hs, b.nlast
   1b6ac:	ldur	x19, [x29, #-8]
   1b6b0:	mov	x21, x12
   1b6b4:	stur	x9, [x29, #-8]
   1b6b8:	cmp	x19, x25
   1b6bc:	b.cs	1b6c8 <printf_parse@@Base+0x2ec>  // b.hs, b.nlast
   1b6c0:	ldr	x23, [x2, #8]
   1b6c4:	b	1b748 <printf_parse@@Base+0x36c>
   1b6c8:	lsl	x8, x25, #1
   1b6cc:	cmp	x25, #0x0
   1b6d0:	csinv	x8, x8, xzr, ge  // ge = tcont
   1b6d4:	cmp	x8, x19
   1b6d8:	csinc	x25, x8, x19, hi  // hi = pmore
   1b6dc:	lsr	x8, x25, #59
   1b6e0:	cbnz	x8, 1bdd8 <printf_parse@@Base+0x9fc>
   1b6e4:	ldr	x0, [x2, #8]
   1b6e8:	ldur	x8, [x29, #-16]
   1b6ec:	lsl	x1, x25, #5
   1b6f0:	cmp	x0, x8
   1b6f4:	b.eq	1b700 <printf_parse@@Base+0x324>  // b.none
   1b6f8:	bl	a860 <realloc@plt>
   1b6fc:	b	1b708 <printf_parse@@Base+0x32c>
   1b700:	mov	x0, x1
   1b704:	bl	a660 <malloc@plt>
   1b708:	ldr	x2, [sp, #40]
   1b70c:	ldur	x1, [x29, #-24]
   1b710:	mov	x23, x0
   1b714:	cbz	x0, 1bdd8 <printf_parse@@Base+0x9fc>
   1b718:	ldr	x8, [x2, #8]
   1b71c:	ldur	x9, [x29, #-16]
   1b720:	cmp	x8, x9
   1b724:	b.ne	1b744 <printf_parse@@Base+0x368>  // b.any
   1b728:	ldr	x8, [x2]
   1b72c:	ldur	x1, [x29, #-16]
   1b730:	mov	x0, x23
   1b734:	lsl	x2, x8, #5
   1b738:	bl	a2f0 <memcpy@plt>
   1b73c:	ldr	x2, [sp, #40]
   1b740:	ldur	x1, [x29, #-24]
   1b744:	str	x23, [x2, #8]
   1b748:	ldr	x8, [x2]
   1b74c:	cmp	x8, x19
   1b750:	b.hi	1b76c <printf_parse@@Base+0x390>  // b.pmore
   1b754:	add	x9, x23, x8, lsl #5
   1b758:	add	x8, x8, #0x1
   1b75c:	cmp	x8, x19
   1b760:	str	wzr, [x9], #32
   1b764:	b.ls	1b758 <printf_parse@@Base+0x37c>  // b.plast
   1b768:	str	x8, [x2]
   1b76c:	add	x8, x23, x19, lsl #5
   1b770:	ldr	w9, [x8]
   1b774:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1b778:	movk	x0, #0x999a
   1b77c:	movk	x0, #0x1999, lsl #48
   1b780:	mov	w3, #0x1                   	// #1
   1b784:	cmp	w9, #0x5
   1b788:	b.eq	1b7a0 <printf_parse@@Base+0x3c4>  // b.none
   1b78c:	ldp	x5, x4, [sp]
   1b790:	cbnz	w9, 1bda0 <printf_parse@@Base+0x9c4>
   1b794:	mov	w9, #0x5                   	// #5
   1b798:	str	w9, [x8]
   1b79c:	b	1b7a4 <printf_parse@@Base+0x3c8>
   1b7a0:	ldp	x5, x4, [sp]
   1b7a4:	ldrb	w15, [x21]
   1b7a8:	cmp	w15, #0x2e
   1b7ac:	b.ne	1b888 <printf_parse@@Base+0x4ac>  // b.any
   1b7b0:	ldrb	w8, [x21, #1]
   1b7b4:	str	x21, [x27]
   1b7b8:	mov	x27, x21
   1b7bc:	cmp	w8, #0x2a
   1b7c0:	b.ne	1b85c <printf_parse@@Base+0x480>  // b.any
   1b7c4:	add	x9, x21, #0x2
   1b7c8:	ldr	x10, [sp, #16]
   1b7cc:	str	x9, [x26]
   1b7d0:	ldrb	w8, [x21, #2]
   1b7d4:	mov	w11, #0x2                   	// #2
   1b7d8:	cmp	x10, #0x2
   1b7dc:	csel	x10, x10, x11, hi  // hi = pmore
   1b7e0:	str	x10, [sp, #16]
   1b7e4:	sub	w10, w8, #0x30
   1b7e8:	cmp	w10, #0x9
   1b7ec:	b.hi	1b97c <printf_parse@@Base+0x5a0>  // b.pmore
   1b7f0:	add	x27, x21, #0x3
   1b7f4:	mov	x10, x27
   1b7f8:	ldrb	w11, [x10], #1
   1b7fc:	sub	w12, w11, #0x30
   1b800:	cmp	w12, #0xa
   1b804:	b.cc	1b7f8 <printf_parse@@Base+0x41c>  // b.lo, b.ul, b.last
   1b808:	cmp	w11, #0x24
   1b80c:	b.ne	1b97c <printf_parse@@Base+0x5a0>  // b.any
   1b810:	mov	x9, xzr
   1b814:	add	x10, x9, x9, lsl #2
   1b818:	cmp	x9, x0
   1b81c:	and	x9, x8, #0xff
   1b820:	ldrb	w8, [x27], #1
   1b824:	lsl	x10, x10, #1
   1b828:	sub	x9, x9, #0x30
   1b82c:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
   1b830:	adds	x9, x10, x9
   1b834:	sub	w10, w8, #0x30
   1b838:	csinv	x9, x9, xzr, cc  // cc = lo, ul, last
   1b83c:	cmp	w10, #0xa
   1b840:	b.cc	1b814 <printf_parse@@Base+0x438>  // b.lo, b.ul, b.last
   1b844:	add	x8, x9, #0x1
   1b848:	cmp	x8, #0x2
   1b84c:	b.cc	1bda0 <printf_parse@@Base+0x9c4>  // b.lo, b.ul, b.last
   1b850:	sub	x21, x9, #0x1
   1b854:	str	x21, [x22]
   1b858:	b	1bbd4 <printf_parse@@Base+0x7f8>
   1b85c:	ldrb	w8, [x27, #1]!
   1b860:	sub	w8, w8, #0x30
   1b864:	cmp	w8, #0xa
   1b868:	b.cc	1b85c <printf_parse@@Base+0x480>  // b.lo, b.ul, b.last
   1b86c:	ldr	x9, [sp, #16]
   1b870:	sub	x8, x27, x21
   1b874:	str	x27, [x26]
   1b878:	cmp	x9, x8
   1b87c:	csel	x9, x8, x9, cc  // cc = lo, ul, last
   1b880:	str	x9, [sp, #16]
   1b884:	b	1b88c <printf_parse@@Base+0x4b0>
   1b888:	mov	x27, x21
   1b88c:	mov	w8, wzr
   1b890:	add	x23, x27, #0x1
   1b894:	ldurb	w21, [x23, #-1]
   1b898:	cmp	w21, #0x69
   1b89c:	b.le	1b8bc <printf_parse@@Base+0x4e0>
   1b8a0:	cmp	w21, #0x73
   1b8a4:	b.gt	1b8e4 <printf_parse@@Base+0x508>
   1b8a8:	cmp	w21, #0x6a
   1b8ac:	b.eq	1b8f4 <printf_parse@@Base+0x518>  // b.none
   1b8b0:	cmp	w21, #0x6c
   1b8b4:	b.eq	1b8f4 <printf_parse@@Base+0x518>  // b.none
   1b8b8:	b	1b908 <printf_parse@@Base+0x52c>
   1b8bc:	cmp	w21, #0x4c
   1b8c0:	b.eq	1b900 <printf_parse@@Base+0x524>  // b.none
   1b8c4:	cmp	w21, #0x5a
   1b8c8:	b.eq	1b8f4 <printf_parse@@Base+0x518>  // b.none
   1b8cc:	cmp	w21, #0x68
   1b8d0:	b.ne	1b908 <printf_parse@@Base+0x52c>  // b.any
   1b8d4:	and	w9, w8, #0x1
   1b8d8:	lsl	w9, w3, w9
   1b8dc:	orr	w8, w9, w8
   1b8e0:	b	1b8f8 <printf_parse@@Base+0x51c>
   1b8e4:	cmp	w21, #0x74
   1b8e8:	b.eq	1b8f4 <printf_parse@@Base+0x518>  // b.none
   1b8ec:	cmp	w21, #0x7a
   1b8f0:	b.ne	1b908 <printf_parse@@Base+0x52c>  // b.any
   1b8f4:	add	w8, w8, #0x8
   1b8f8:	add	x23, x23, #0x1
   1b8fc:	b	1b894 <printf_parse@@Base+0x4b8>
   1b900:	orr	w8, w8, #0x4
   1b904:	b	1b8f8 <printf_parse@@Base+0x51c>
   1b908:	cmp	w21, #0x52
   1b90c:	b.le	1b954 <printf_parse@@Base+0x578>
   1b910:	sub	w9, w21, #0x58
   1b914:	cmp	w9, #0x20
   1b918:	b.hi	1bc24 <printf_parse@@Base+0x848>  // b.pmore
   1b91c:	adrp	x12, 2a000 <vasnprintf@@Base+0x2944>
   1b920:	add	x12, x12, #0xb76
   1b924:	adr	x10, 1b934 <printf_parse@@Base+0x558>
   1b928:	ldrh	w11, [x12, x9, lsl #1]
   1b92c:	add	x10, x10, x11, lsl #2
   1b930:	br	x10
   1b934:	cmp	w8, #0xf
   1b938:	mov	w22, #0xa                   	// #10
   1b93c:	b.gt	1b9ac <printf_parse@@Base+0x5d0>
   1b940:	tbnz	w8, #2, 1b9ac <printf_parse@@Base+0x5d0>
   1b944:	cmp	w8, #0x7
   1b948:	b.le	1bd30 <printf_parse@@Base+0x954>
   1b94c:	mov	w22, #0x8                   	// #8
   1b950:	b	1b9ac <printf_parse@@Base+0x5d0>
   1b954:	cmp	w21, #0x44
   1b958:	b.gt	1b990 <printf_parse@@Base+0x5b4>
   1b95c:	cmp	w21, #0x25
   1b960:	b.eq	1bac0 <printf_parse@@Base+0x6e4>  // b.none
   1b964:	cmp	w21, #0x41
   1b968:	b.eq	1b99c <printf_parse@@Base+0x5c0>  // b.none
   1b96c:	cmp	w21, #0x43
   1b970:	b.ne	1bda0 <printf_parse@@Base+0x9c4>  // b.any
   1b974:	mov	w22, #0xe                   	// #14
   1b978:	b	1bd1c <printf_parse@@Base+0x940>
   1b97c:	ldr	x21, [x22]
   1b980:	cmn	x21, #0x1
   1b984:	b.eq	1bbb8 <printf_parse@@Base+0x7dc>  // b.none
   1b988:	mov	x27, x9
   1b98c:	b	1bbd4 <printf_parse@@Base+0x7f8>
   1b990:	sub	w9, w21, #0x45
   1b994:	cmp	w9, #0x3
   1b998:	b.cs	1bda0 <printf_parse@@Base+0x9c4>  // b.hs, b.nlast
   1b99c:	tst	w8, #0x4
   1b9a0:	ccmp	w8, #0x10, #0x0, eq  // eq = none
   1b9a4:	mov	w8, #0xb                   	// #11
   1b9a8:	cinc	w22, w8, ge  // ge = tcont
   1b9ac:	cmn	x28, #0x1
   1b9b0:	str	x28, [x24]
   1b9b4:	b.ne	1b9d0 <printf_parse@@Base+0x5f4>  // b.any
   1b9b8:	ldur	x9, [x29, #-8]
   1b9bc:	adds	x8, x9, #0x1
   1b9c0:	str	x9, [x24]
   1b9c4:	b.cs	1bda0 <printf_parse@@Base+0x9c4>  // b.hs, b.nlast
   1b9c8:	ldur	x28, [x29, #-8]
   1b9cc:	stur	x8, [x29, #-8]
   1b9d0:	cmp	x28, x25
   1b9d4:	b.cs	1b9e0 <printf_parse@@Base+0x604>  // b.hs, b.nlast
   1b9d8:	ldr	x24, [x2, #8]
   1b9dc:	b	1ba80 <printf_parse@@Base+0x6a4>
   1b9e0:	lsl	x8, x25, #1
   1b9e4:	cmp	x25, #0x0
   1b9e8:	csinv	x8, x8, xzr, ge  // ge = tcont
   1b9ec:	cmp	x8, x28
   1b9f0:	csinc	x25, x8, x28, hi  // hi = pmore
   1b9f4:	lsr	x8, x25, #59
   1b9f8:	cbnz	x8, 1bdd8 <printf_parse@@Base+0x9fc>
   1b9fc:	ldr	x0, [x2, #8]
   1ba00:	ldur	x8, [x29, #-16]
   1ba04:	mov	x26, x5
   1ba08:	mov	x19, x4
   1ba0c:	lsl	x1, x25, #5
   1ba10:	cmp	x0, x8
   1ba14:	b.eq	1ba20 <printf_parse@@Base+0x644>  // b.none
   1ba18:	bl	a860 <realloc@plt>
   1ba1c:	b	1ba28 <printf_parse@@Base+0x64c>
   1ba20:	mov	x0, x1
   1ba24:	bl	a660 <malloc@plt>
   1ba28:	ldr	x2, [sp, #40]
   1ba2c:	ldur	x1, [x29, #-24]
   1ba30:	mov	x24, x0
   1ba34:	cbz	x0, 1bdd8 <printf_parse@@Base+0x9fc>
   1ba38:	ldr	x8, [x2, #8]
   1ba3c:	ldur	x9, [x29, #-16]
   1ba40:	cmp	x8, x9
   1ba44:	b.ne	1ba64 <printf_parse@@Base+0x688>  // b.any
   1ba48:	ldr	x8, [x2]
   1ba4c:	ldur	x1, [x29, #-16]
   1ba50:	mov	x0, x24
   1ba54:	lsl	x2, x8, #5
   1ba58:	bl	a2f0 <memcpy@plt>
   1ba5c:	ldr	x2, [sp, #40]
   1ba60:	ldur	x1, [x29, #-24]
   1ba64:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1ba68:	movk	x0, #0x999a
   1ba6c:	movk	x0, #0x1999, lsl #48
   1ba70:	mov	w3, #0x1                   	// #1
   1ba74:	mov	x4, x19
   1ba78:	mov	x5, x26
   1ba7c:	str	x24, [x2, #8]
   1ba80:	ldr	x8, [x2]
   1ba84:	cmp	x8, x28
   1ba88:	b.hi	1baa4 <printf_parse@@Base+0x6c8>  // b.pmore
   1ba8c:	add	x9, x24, x8, lsl #5
   1ba90:	add	x8, x8, #0x1
   1ba94:	cmp	x8, x28
   1ba98:	str	wzr, [x9], #32
   1ba9c:	b.ls	1ba90 <printf_parse@@Base+0x6b4>  // b.plast
   1baa0:	str	x8, [x2]
   1baa4:	add	x8, x24, x28, lsl #5
   1baa8:	ldr	w9, [x8]
   1baac:	cbz	w9, 1babc <printf_parse@@Base+0x6e0>
   1bab0:	cmp	w9, w22
   1bab4:	b.eq	1bac0 <printf_parse@@Base+0x6e4>  // b.none
   1bab8:	b	1bda0 <printf_parse@@Base+0x9c4>
   1babc:	str	w22, [x8]
   1bac0:	mov	w8, #0x58                  	// #88
   1bac4:	madd	x8, x4, x8, x5
   1bac8:	strb	w21, [x8, #72]
   1bacc:	str	x23, [x8, #8]
   1bad0:	ldr	x8, [x1]
   1bad4:	ldur	x18, [x29, #-32]
   1bad8:	add	x8, x8, #0x1
   1badc:	cmp	x8, x18
   1bae0:	str	x8, [x1]
   1bae4:	b.cc	1bb8c <printf_parse@@Base+0x7b0>  // b.lo, b.ul, b.last
   1bae8:	mov	x9, #0xe8ba                	// #59578
   1baec:	movk	x9, #0x8ba2, lsl #16
   1baf0:	lsl	x19, x18, #1
   1baf4:	cmp	x18, #0x0
   1baf8:	movk	x9, #0xba2e, lsl #32
   1bafc:	csinv	x8, x19, xzr, ge  // ge = tcont
   1bb00:	movk	x9, #0x2e8, lsl #48
   1bb04:	cmp	x8, x9
   1bb08:	b.hi	1bdd8 <printf_parse@@Base+0x9fc>  // b.pmore
   1bb0c:	ldr	x0, [x1, #8]
   1bb10:	ldr	x9, [sp, #32]
   1bb14:	cmp	x0, x9
   1bb18:	mov	w9, #0x58                  	// #88
   1bb1c:	mul	x1, x8, x9
   1bb20:	b.eq	1bb2c <printf_parse@@Base+0x750>  // b.none
   1bb24:	bl	a860 <realloc@plt>
   1bb28:	b	1bb34 <printf_parse@@Base+0x758>
   1bb2c:	mov	x0, x1
   1bb30:	bl	a660 <malloc@plt>
   1bb34:	ldur	x1, [x29, #-24]
   1bb38:	ldr	x2, [sp, #40]
   1bb3c:	mov	x24, x0
   1bb40:	cbz	x0, 1bdd8 <printf_parse@@Base+0x9fc>
   1bb44:	ldr	x8, [x1, #8]
   1bb48:	ldr	x9, [sp, #32]
   1bb4c:	cmp	x8, x9
   1bb50:	b.ne	1bb74 <printf_parse@@Base+0x798>  // b.any
   1bb54:	ldr	x8, [x1]
   1bb58:	ldr	x1, [sp, #32]
   1bb5c:	mov	w9, #0x58                  	// #88
   1bb60:	mov	x0, x24
   1bb64:	mul	x2, x8, x9
   1bb68:	bl	a2f0 <memcpy@plt>
   1bb6c:	ldr	x2, [sp, #40]
   1bb70:	ldur	x1, [x29, #-24]
   1bb74:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1bb78:	movk	x0, #0x999a
   1bb7c:	mov	x18, x19
   1bb80:	movk	x0, #0x1999, lsl #48
   1bb84:	mov	w3, #0x1                   	// #1
   1bb88:	str	x24, [x1, #8]
   1bb8c:	ldrb	w8, [x23]
   1bb90:	cbnz	w8, 1b450 <printf_parse@@Base+0x74>
   1bb94:	b	1be18 <printf_parse@@Base+0xa3c>
   1bb98:	cmp	w8, #0xf
   1bb9c:	mov	w22, #0x9                   	// #9
   1bba0:	b.gt	1b9ac <printf_parse@@Base+0x5d0>
   1bba4:	tbnz	w8, #2, 1b9ac <printf_parse@@Base+0x5d0>
   1bba8:	cmp	w8, #0x7
   1bbac:	b.le	1bd48 <printf_parse@@Base+0x96c>
   1bbb0:	mov	w22, #0x7                   	// #7
   1bbb4:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bbb8:	ldur	x10, [x29, #-8]
   1bbbc:	adds	x8, x10, #0x1
   1bbc0:	str	x10, [x22]
   1bbc4:	b.cs	1bda0 <printf_parse@@Base+0x9c4>  // b.hs, b.nlast
   1bbc8:	ldur	x21, [x29, #-8]
   1bbcc:	mov	x27, x9
   1bbd0:	stur	x8, [x29, #-8]
   1bbd4:	cmp	x21, x25
   1bbd8:	b.cs	1bbe4 <printf_parse@@Base+0x808>  // b.hs, b.nlast
   1bbdc:	ldr	x23, [x2, #8]
   1bbe0:	b	1bc94 <printf_parse@@Base+0x8b8>
   1bbe4:	lsl	x8, x25, #1
   1bbe8:	cmp	x25, #0x0
   1bbec:	csinv	x8, x8, xzr, ge  // ge = tcont
   1bbf0:	cmp	x8, x21
   1bbf4:	csinc	x25, x8, x21, hi  // hi = pmore
   1bbf8:	lsr	x8, x25, #59
   1bbfc:	cbnz	x8, 1bdd8 <printf_parse@@Base+0x9fc>
   1bc00:	ldr	x0, [x2, #8]
   1bc04:	ldur	x8, [x29, #-16]
   1bc08:	mov	x22, x5
   1bc0c:	mov	x19, x4
   1bc10:	lsl	x1, x25, #5
   1bc14:	cmp	x0, x8
   1bc18:	b.eq	1bc34 <printf_parse@@Base+0x858>  // b.none
   1bc1c:	bl	a860 <realloc@plt>
   1bc20:	b	1bc3c <printf_parse@@Base+0x860>
   1bc24:	cmp	w21, #0x53
   1bc28:	b.ne	1bda0 <printf_parse@@Base+0x9c4>  // b.any
   1bc2c:	mov	w22, #0x10                  	// #16
   1bc30:	b	1bd08 <printf_parse@@Base+0x92c>
   1bc34:	mov	x0, x1
   1bc38:	bl	a660 <malloc@plt>
   1bc3c:	ldur	x1, [x29, #-24]
   1bc40:	ldr	x2, [sp, #40]
   1bc44:	mov	x23, x0
   1bc48:	cbz	x0, 1bdd8 <printf_parse@@Base+0x9fc>
   1bc4c:	ldr	x8, [x2, #8]
   1bc50:	ldur	x9, [x29, #-16]
   1bc54:	cmp	x8, x9
   1bc58:	b.ne	1bc78 <printf_parse@@Base+0x89c>  // b.any
   1bc5c:	ldr	x8, [x2]
   1bc60:	ldur	x1, [x29, #-16]
   1bc64:	mov	x0, x23
   1bc68:	lsl	x2, x8, #5
   1bc6c:	bl	a2f0 <memcpy@plt>
   1bc70:	ldr	x2, [sp, #40]
   1bc74:	ldur	x1, [x29, #-24]
   1bc78:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1bc7c:	movk	x0, #0x999a
   1bc80:	movk	x0, #0x1999, lsl #48
   1bc84:	mov	w3, #0x1                   	// #1
   1bc88:	mov	x4, x19
   1bc8c:	mov	x5, x22
   1bc90:	str	x23, [x2, #8]
   1bc94:	ldr	x8, [x2]
   1bc98:	cmp	x8, x21
   1bc9c:	b.hi	1bcb8 <printf_parse@@Base+0x8dc>  // b.pmore
   1bca0:	add	x9, x23, x8, lsl #5
   1bca4:	add	x8, x8, #0x1
   1bca8:	cmp	x8, x21
   1bcac:	str	wzr, [x9], #32
   1bcb0:	b.ls	1bca4 <printf_parse@@Base+0x8c8>  // b.plast
   1bcb4:	str	x8, [x2]
   1bcb8:	add	x8, x23, x21, lsl #5
   1bcbc:	ldr	w9, [x8]
   1bcc0:	cmp	w9, #0x5
   1bcc4:	b.eq	1b88c <printf_parse@@Base+0x4b0>  // b.none
   1bcc8:	cbnz	w9, 1bda0 <printf_parse@@Base+0x9c4>
   1bccc:	mov	w9, #0x5                   	// #5
   1bcd0:	str	w9, [x8]
   1bcd4:	b	1b88c <printf_parse@@Base+0x4b0>
   1bcd8:	mov	w22, #0x16                  	// #22
   1bcdc:	cmp	w8, #0xf
   1bce0:	mov	w21, #0x6e                  	// #110
   1bce4:	b.gt	1b9ac <printf_parse@@Base+0x5d0>
   1bce8:	tbnz	w8, #2, 1b9ac <printf_parse@@Base+0x5d0>
   1bcec:	cmp	w8, #0x7
   1bcf0:	b.le	1bd68 <printf_parse@@Base+0x98c>
   1bcf4:	mov	w22, #0x15                  	// #21
   1bcf8:	b	1bd88 <printf_parse@@Base+0x9ac>
   1bcfc:	cmp	w8, #0x7
   1bd00:	mov	w8, #0xf                   	// #15
   1bd04:	cinc	w22, w8, gt
   1bd08:	mov	w21, #0x73                  	// #115
   1bd0c:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd10:	cmp	w8, #0x7
   1bd14:	mov	w8, #0xd                   	// #13
   1bd18:	cinc	w22, w8, gt
   1bd1c:	mov	w21, #0x63                  	// #99
   1bd20:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd24:	mov	w22, #0x11                  	// #17
   1bd28:	mov	w21, #0x70                  	// #112
   1bd2c:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd30:	tbnz	w8, #1, 1bd60 <printf_parse@@Base+0x984>
   1bd34:	tst	w8, #0x1
   1bd38:	mov	w8, #0x4                   	// #4
   1bd3c:	mov	w9, #0x6                   	// #6
   1bd40:	csel	w22, w9, w8, eq  // eq = none
   1bd44:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd48:	tbnz	w8, #1, 1bd7c <printf_parse@@Base+0x9a0>
   1bd4c:	tst	w8, #0x1
   1bd50:	mov	w8, #0x5                   	// #5
   1bd54:	mov	w9, #0x3                   	// #3
   1bd58:	csel	w22, w8, w9, eq  // eq = none
   1bd5c:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd60:	mov	w22, #0x2                   	// #2
   1bd64:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd68:	tbnz	w8, #1, 1bd84 <printf_parse@@Base+0x9a8>
   1bd6c:	tst	w8, #0x1
   1bd70:	mov	w8, #0x13                  	// #19
   1bd74:	cinc	w22, w8, eq  // eq = none
   1bd78:	b	1bd88 <printf_parse@@Base+0x9ac>
   1bd7c:	mov	w22, #0x1                   	// #1
   1bd80:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd84:	mov	w22, #0x12                  	// #18
   1bd88:	mov	w21, #0x6e                  	// #110
   1bd8c:	b	1b9ac <printf_parse@@Base+0x5d0>
   1bd90:	mov	x8, xzr
   1bd94:	mov	x10, xzr
   1bd98:	mov	x11, xzr
   1bd9c:	b	1be28 <printf_parse@@Base+0xa4c>
   1bda0:	ldr	x0, [x2, #8]
   1bda4:	ldur	x8, [x29, #-16]
   1bda8:	cmp	x0, x8
   1bdac:	b.eq	1bdb8 <printf_parse@@Base+0x9dc>  // b.none
   1bdb0:	bl	aaa0 <free@plt>
   1bdb4:	ldur	x1, [x29, #-24]
   1bdb8:	ldr	x0, [x1, #8]
   1bdbc:	ldr	x8, [sp, #32]
   1bdc0:	cmp	x0, x8
   1bdc4:	b.eq	1bdcc <printf_parse@@Base+0x9f0>  // b.none
   1bdc8:	bl	aaa0 <free@plt>
   1bdcc:	bl	aec0 <__errno_location@plt>
   1bdd0:	mov	w8, #0x16                  	// #22
   1bdd4:	b	1be0c <printf_parse@@Base+0xa30>
   1bdd8:	ldr	x0, [x2, #8]
   1bddc:	ldur	x8, [x29, #-16]
   1bde0:	cmp	x0, x8
   1bde4:	b.eq	1bdf0 <printf_parse@@Base+0xa14>  // b.none
   1bde8:	bl	aaa0 <free@plt>
   1bdec:	ldur	x1, [x29, #-24]
   1bdf0:	ldr	x0, [x1, #8]
   1bdf4:	ldr	x8, [sp, #32]
   1bdf8:	cmp	x0, x8
   1bdfc:	b.eq	1be04 <printf_parse@@Base+0xa28>  // b.none
   1be00:	bl	aaa0 <free@plt>
   1be04:	bl	aec0 <__errno_location@plt>
   1be08:	mov	w8, #0xc                   	// #12
   1be0c:	str	w8, [x0]
   1be10:	mov	w0, #0xffffffff            	// #-1
   1be14:	b	1be40 <printf_parse@@Base+0xa64>
   1be18:	ldr	x8, [x1, #8]
   1be1c:	ldp	x10, x11, [sp, #16]
   1be20:	str	x8, [sp, #32]
   1be24:	ldr	x8, [x1]
   1be28:	mov	w9, #0x58                  	// #88
   1be2c:	mul	x8, x8, x9
   1be30:	ldr	x9, [sp, #32]
   1be34:	mov	w0, wzr
   1be38:	str	x23, [x9, x8]
   1be3c:	stp	x11, x10, [x1, #16]
   1be40:	ldp	x20, x19, [sp, #160]
   1be44:	ldp	x22, x21, [sp, #144]
   1be48:	ldp	x24, x23, [sp, #128]
   1be4c:	ldp	x26, x25, [sp, #112]
   1be50:	ldp	x28, x27, [sp, #96]
   1be54:	ldp	x29, x30, [sp, #80]
   1be58:	add	sp, sp, #0xb0
   1be5c:	ret

000000000001be60 <rpl_re_compile_pattern@@Base>:
   1be60:	stp	x29, x30, [sp, #-16]!
   1be64:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
   1be68:	ldr	x9, [x9, #3920]
   1be6c:	mov	x8, x1
   1be70:	mov	x1, x0
   1be74:	mov	x0, x2
   1be78:	ldr	x3, [x9]
   1be7c:	ldrb	w9, [x2, #56]
   1be80:	mov	x29, sp
   1be84:	ubfx	x10, x3, #21, #11
   1be88:	and	w10, w10, #0x10
   1be8c:	and	w9, w9, #0xffffffef
   1be90:	orr	w9, w9, w10
   1be94:	orr	w9, w9, #0x80
   1be98:	strb	w9, [x2, #56]
   1be9c:	mov	x2, x8
   1bea0:	bl	1bedc <rpl_re_compile_pattern@@Base+0x7c>
   1bea4:	cbz	w0, 1bed0 <rpl_re_compile_pattern@@Base+0x70>
   1bea8:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   1beac:	add	x8, x8, #0xe00
   1beb0:	ldr	x8, [x8, w0, sxtw #3]
   1beb4:	adrp	x9, 2a000 <vasnprintf@@Base+0x2944>
   1beb8:	add	x9, x9, #0xc7f
   1bebc:	mov	w2, #0x5                   	// #5
   1bec0:	add	x1, x9, x8
   1bec4:	mov	x0, xzr
   1bec8:	ldp	x29, x30, [sp], #16
   1becc:	b	adc0 <dcgettext@plt>
   1bed0:	mov	x0, xzr
   1bed4:	ldp	x29, x30, [sp], #16
   1bed8:	ret
   1bedc:	sub	sp, sp, #0x140
   1bee0:	stp	x29, x30, [sp, #224]
   1bee4:	add	x29, sp, #0xe0
   1bee8:	stp	x28, x27, [sp, #240]
   1beec:	stp	x26, x25, [sp, #256]
   1bef0:	stp	x24, x23, [sp, #272]
   1bef4:	stp	x22, x21, [sp, #288]
   1bef8:	stp	x20, x19, [sp, #304]
   1befc:	str	x1, [sp, #8]
   1bf00:	stur	wzr, [x29, #-52]
   1bf04:	ldrb	w8, [x0, #56]
   1bf08:	ldp	x20, x9, [x0]
   1bf0c:	mov	w10, #0x90                  	// #144
   1bf10:	mov	x21, x3
   1bf14:	mov	x22, x2
   1bf18:	mov	x19, x0
   1bf1c:	and	w8, w8, w10
   1bf20:	cmp	x9, #0x117
   1bf24:	stp	xzr, x3, [x0, #16]
   1bf28:	str	xzr, [x0, #48]
   1bf2c:	strb	w8, [x0, #56]
   1bf30:	b.ls	1c980 <rpl_re_compile_pattern@@Base+0xb20>  // b.plast
   1bf34:	mov	w8, #0x118                 	// #280
   1bf38:	mov	w2, #0x118                 	// #280
   1bf3c:	mov	x0, x20
   1bf40:	mov	w1, wzr
   1bf44:	str	x8, [x19, #16]
   1bf48:	bl	a770 <memset@plt>
   1bf4c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1bf50:	movk	x9, #0x5554
   1bf54:	movk	x9, #0x555, lsl #48
   1bf58:	mov	w8, #0xf                   	// #15
   1bf5c:	cmp	x22, x9
   1bf60:	str	w8, [x20, #128]
   1bf64:	b.hi	1c18c <rpl_re_compile_pattern@@Base+0x32c>  // b.pmore
   1bf68:	add	x24, x22, #0x1
   1bf6c:	lsl	x0, x24, #4
   1bf70:	str	x24, [x20, #8]
   1bf74:	bl	a660 <malloc@plt>
   1bf78:	mov	w8, #0x1                   	// #1
   1bf7c:	str	x0, [x20]
   1bf80:	mov	x25, x8
   1bf84:	cmp	x8, x22
   1bf88:	lsl	x8, x8, #1
   1bf8c:	b.ls	1bf80 <rpl_re_compile_pattern@@Base+0x120>  // b.plast
   1bf90:	mov	w0, #0x18                  	// #24
   1bf94:	mov	x1, x25
   1bf98:	bl	a7f0 <calloc@plt>
   1bf9c:	sub	x8, x25, #0x1
   1bfa0:	str	x0, [x20, #64]
   1bfa4:	str	x8, [x20, #136]
   1bfa8:	bl	aad0 <__ctype_get_mb_cur_max@plt>
   1bfac:	str	w0, [x20, #180]
   1bfb0:	mov	w0, #0xe                   	// #14
   1bfb4:	bl	a630 <nl_langinfo@plt>
   1bfb8:	ldrb	w8, [x0]
   1bfbc:	orr	w8, w8, #0x20
   1bfc0:	cmp	w8, #0x75
   1bfc4:	b.ne	1c010 <rpl_re_compile_pattern@@Base+0x1b0>  // b.any
   1bfc8:	ldrb	w8, [x0, #1]
   1bfcc:	orr	w8, w8, #0x20
   1bfd0:	cmp	w8, #0x74
   1bfd4:	b.ne	1c010 <rpl_re_compile_pattern@@Base+0x1b0>  // b.any
   1bfd8:	ldrb	w8, [x0, #2]
   1bfdc:	orr	w8, w8, #0x20
   1bfe0:	cmp	w8, #0x66
   1bfe4:	b.ne	1c010 <rpl_re_compile_pattern@@Base+0x1b0>  // b.any
   1bfe8:	ldrb	w8, [x0, #3]!
   1bfec:	adrp	x1, 28000 <vasnprintf@@Base+0x944>
   1bff0:	add	x1, x1, #0x6a1
   1bff4:	cmp	w8, #0x2d
   1bff8:	cinc	x0, x0, eq  // eq = none
   1bffc:	bl	aa10 <strcmp@plt>
   1c000:	cbnz	w0, 1c010 <rpl_re_compile_pattern@@Base+0x1b0>
   1c004:	ldrb	w8, [x20, #176]
   1c008:	orr	w8, w8, #0x4
   1c00c:	strb	w8, [x20, #176]
   1c010:	ldrb	w8, [x20, #176]
   1c014:	ldr	w9, [x20, #180]
   1c018:	and	w10, w8, #0xfffffff7
   1c01c:	cmp	w9, #0x2
   1c020:	strb	w10, [x20, #176]
   1c024:	b.lt	1c0c4 <rpl_re_compile_pattern@@Base+0x264>  // b.tstop
   1c028:	tbnz	w8, #2, 1c0b8 <rpl_re_compile_pattern@@Base+0x258>
   1c02c:	mov	w0, #0x20                  	// #32
   1c030:	mov	w1, #0x1                   	// #1
   1c034:	bl	a7f0 <calloc@plt>
   1c038:	str	x0, [x20, #120]
   1c03c:	cbz	x0, 1c18c <rpl_re_compile_pattern@@Base+0x32c>
   1c040:	mov	x26, xzr
   1c044:	mov	w8, wzr
   1c048:	mov	w27, #0x1                   	// #1
   1c04c:	mov	x28, xzr
   1c050:	mov	w23, w8
   1c054:	add	x25, x23, x28
   1c058:	mov	w0, w25
   1c05c:	bl	a950 <btowc@plt>
   1c060:	cmn	w0, #0x1
   1c064:	b.eq	1c07c <rpl_re_compile_pattern@@Base+0x21c>  // b.none
   1c068:	ldr	x8, [x20, #120]
   1c06c:	lsl	x10, x27, x28
   1c070:	ldr	x9, [x8, x26, lsl #3]
   1c074:	orr	x9, x9, x10
   1c078:	str	x9, [x8, x26, lsl #3]
   1c07c:	cmp	w25, #0x7f
   1c080:	b.hi	1c098 <rpl_re_compile_pattern@@Base+0x238>  // b.pmore
   1c084:	cmp	w25, w0
   1c088:	b.eq	1c098 <rpl_re_compile_pattern@@Base+0x238>  // b.none
   1c08c:	ldrb	w8, [x20, #176]
   1c090:	orr	w8, w8, #0x8
   1c094:	strb	w8, [x20, #176]
   1c098:	add	x28, x28, #0x1
   1c09c:	cmp	x28, #0x40
   1c0a0:	b.ne	1c054 <rpl_re_compile_pattern@@Base+0x1f4>  // b.any
   1c0a4:	add	x26, x26, #0x1
   1c0a8:	cmp	x26, #0x4
   1c0ac:	add	w8, w23, w28
   1c0b0:	b.ne	1c04c <rpl_re_compile_pattern@@Base+0x1ec>  // b.any
   1c0b4:	b	1c0c4 <rpl_re_compile_pattern@@Base+0x264>
   1c0b8:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   1c0bc:	add	x8, x8, #0xe88
   1c0c0:	str	x8, [x20, #120]
   1c0c4:	ldr	x8, [x20]
   1c0c8:	cbz	x8, 1c18c <rpl_re_compile_pattern@@Base+0x32c>
   1c0cc:	ldr	x8, [x20, #64]
   1c0d0:	cbz	x8, 1c18c <rpl_re_compile_pattern@@Base+0x32c>
   1c0d4:	adrp	x25, 3c000 <vasnprintf@@Base+0x14944>
   1c0d8:	adrp	x26, 3c000 <vasnprintf@@Base+0x14944>
   1c0dc:	ldr	x25, [x25, #3944]
   1c0e0:	ldr	x26, [x26, #4040]
   1c0e4:	stur	wzr, [x29, #-52]
   1c0e8:	orr	x8, x26, x25
   1c0ec:	cbz	x8, 1c100 <rpl_re_compile_pattern@@Base+0x2a0>
   1c0f0:	add	x0, x20, #0xe8
   1c0f4:	mov	x1, xzr
   1c0f8:	bl	a8c0 <pthread_mutex_init@plt>
   1c0fc:	cbnz	w0, 1c18c <rpl_re_compile_pattern@@Base+0x32c>
   1c100:	ldr	x28, [x19, #40]
   1c104:	add	x8, sp, #0x10
   1c108:	and	x27, x21, #0x400000
   1c10c:	add	x0, x8, #0x8
   1c110:	mov	w2, #0x90                  	// #144
   1c114:	mov	w1, wzr
   1c118:	orr	x23, x27, x28
   1c11c:	bl	a770 <memset@plt>
   1c120:	ldr	x9, [sp, #8]
   1c124:	cmp	x23, #0x0
   1c128:	ubfx	x8, x21, #22, #1
   1c12c:	stp	x22, x22, [sp, #96]
   1c130:	str	x9, [sp, #16]
   1c134:	cset	w9, ne  // ne = any
   1c138:	str	x28, [sp, #136]
   1c13c:	strb	w8, [sp, #152]
   1c140:	strb	w9, [sp, #155]
   1c144:	ldr	w8, [x20, #180]
   1c148:	cmp	x22, #0x1
   1c14c:	str	w8, [sp, #160]
   1c150:	ldrb	w10, [x20, #176]
   1c154:	stp	x22, x22, [sp, #112]
   1c158:	ubfx	w11, w10, #2, #1
   1c15c:	ubfx	w10, w10, #3, #1
   1c160:	strb	w11, [sp, #153]
   1c164:	strb	w10, [sp, #154]
   1c168:	b.lt	1c1a4 <rpl_re_compile_pattern@@Base+0x344>  // b.tstop
   1c16c:	add	x0, sp, #0x10
   1c170:	mov	x1, x24
   1c174:	bl	1f24c <rpl_re_set_registers@@Base+0x198>
   1c178:	cbnz	w0, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c17c:	ldrb	w9, [sp, #155]
   1c180:	ldr	x10, [sp, #24]
   1c184:	ldr	w8, [x20, #180]
   1c188:	b	1c1a8 <rpl_re_compile_pattern@@Base+0x348>
   1c18c:	mov	w21, #0xc                   	// #12
   1c190:	mov	x0, x20
   1c194:	stur	w21, [x29, #-52]
   1c198:	bl	1cfbc <rpl_regfree@@Base+0x68>
   1c19c:	stp	xzr, xzr, [x19]
   1c1a0:	b	1c8b4 <rpl_re_compile_pattern@@Base+0xa54>
   1c1a4:	mov	x10, xzr
   1c1a8:	cmp	w9, #0x0
   1c1ac:	ldr	x9, [sp, #8]
   1c1b0:	csel	x10, x9, x10, eq  // eq = none
   1c1b4:	cmp	w8, #0x2
   1c1b8:	str	x10, [sp, #24]
   1c1bc:	cbz	x27, 1c208 <rpl_re_compile_pattern@@Base+0x3a8>
   1c1c0:	b.lt	1c218 <rpl_re_compile_pattern@@Base+0x3b8>  // b.tstop
   1c1c4:	add	x0, sp, #0x10
   1c1c8:	bl	1f2dc <rpl_re_set_registers@@Base+0x228>
   1c1cc:	cbnz	w0, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c1d0:	ldr	x8, [sp, #72]
   1c1d4:	cmp	x8, x22
   1c1d8:	b.ge	1c29c <rpl_re_compile_pattern@@Base+0x43c>  // b.tcont
   1c1dc:	ldr	x9, [sp, #64]
   1c1e0:	ldrsw	x10, [x20, #180]
   1c1e4:	ldr	x8, [sp, #80]
   1c1e8:	add	x9, x9, x10
   1c1ec:	cmp	x8, x9
   1c1f0:	b.gt	1c29c <rpl_re_compile_pattern@@Base+0x43c>
   1c1f4:	lsl	x1, x8, #1
   1c1f8:	add	x0, sp, #0x10
   1c1fc:	bl	1f24c <rpl_re_set_registers@@Base+0x198>
   1c200:	cbz	w0, 1c1c4 <rpl_re_compile_pattern@@Base+0x364>
   1c204:	b	1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c208:	b.lt	1c224 <rpl_re_compile_pattern@@Base+0x3c4>  // b.tstop
   1c20c:	add	x0, sp, #0x10
   1c210:	bl	1f854 <rpl_re_set_registers@@Base+0x7a0>
   1c214:	b	1c29c <rpl_re_compile_pattern@@Base+0x43c>
   1c218:	add	x0, sp, #0x10
   1c21c:	bl	1f7dc <rpl_re_set_registers@@Base+0x728>
   1c220:	b	1c29c <rpl_re_compile_pattern@@Base+0x43c>
   1c224:	ldr	x9, [sp, #80]
   1c228:	cbz	x28, 1c298 <rpl_re_compile_pattern@@Base+0x438>
   1c22c:	ldr	x11, [sp, #104]
   1c230:	ldr	x8, [sp, #64]
   1c234:	cmp	x9, x11
   1c238:	csel	x9, x11, x9, gt
   1c23c:	cmp	x8, x9
   1c240:	b.ge	1c290 <rpl_re_compile_pattern@@Base+0x430>  // b.tcont
   1c244:	ldr	x11, [sp, #56]
   1c248:	ldr	x12, [sp, #16]
   1c24c:	ldr	x13, [sp, #136]
   1c250:	add	x11, x11, x8
   1c254:	ldrb	w11, [x12, x11]
   1c258:	ldrb	w11, [x13, x11]
   1c25c:	strb	w11, [x10, x8]
   1c260:	add	x8, x8, #0x1
   1c264:	cmp	x8, x9
   1c268:	b.ge	1c290 <rpl_re_compile_pattern@@Base+0x430>  // b.tcont
   1c26c:	ldr	x10, [sp, #16]
   1c270:	ldr	x11, [sp, #56]
   1c274:	ldr	x12, [sp, #136]
   1c278:	add	x10, x10, x11
   1c27c:	ldrb	w10, [x10, x8]
   1c280:	ldr	x11, [sp, #24]
   1c284:	ldrb	w10, [x12, x10]
   1c288:	strb	w10, [x11, x8]
   1c28c:	b	1c260 <rpl_re_compile_pattern@@Base+0x400>
   1c290:	stp	x8, x8, [sp, #64]
   1c294:	b	1c29c <rpl_re_compile_pattern@@Base+0x43c>
   1c298:	stp	x9, x9, [sp, #64]
   1c29c:	stur	wzr, [x29, #-52]
   1c2a0:	ldr	x22, [x19]
   1c2a4:	orr	x2, x21, #0x800000
   1c2a8:	sub	x0, x29, #0x30
   1c2ac:	add	x1, sp, #0x10
   1c2b0:	str	xzr, [x19, #48]
   1c2b4:	str	x21, [x22, #216]
   1c2b8:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   1c2bc:	ldr	x8, [sp, #88]
   1c2c0:	sub	x2, x29, #0x30
   1c2c4:	sub	x5, x29, #0x34
   1c2c8:	mov	x1, x19
   1c2cc:	add	x8, x8, w0, sxtw
   1c2d0:	add	x0, sp, #0x10
   1c2d4:	mov	x3, x21
   1c2d8:	mov	x4, xzr
   1c2dc:	str	x8, [sp, #88]
   1c2e0:	bl	1fa70 <rpl_re_set_registers@@Base+0x9bc>
   1c2e4:	mov	x21, x0
   1c2e8:	cbnz	x0, 1c2f4 <rpl_re_compile_pattern@@Base+0x494>
   1c2ec:	ldur	w8, [x29, #-52]
   1c2f0:	cbnz	w8, 1c9b0 <rpl_re_compile_pattern@@Base+0xb50>
   1c2f4:	mov	w8, #0x2                   	// #2
   1c2f8:	sub	x3, x29, #0x20
   1c2fc:	mov	x0, x22
   1c300:	mov	x1, xzr
   1c304:	mov	x2, xzr
   1c308:	stur	w8, [x29, #-24]
   1c30c:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   1c310:	mov	x23, x0
   1c314:	cbz	x21, 1c334 <rpl_re_compile_pattern@@Base+0x4d4>
   1c318:	mov	w8, #0x10                  	// #16
   1c31c:	sub	x3, x29, #0x20
   1c320:	mov	x0, x22
   1c324:	mov	x1, x21
   1c328:	mov	x2, x23
   1c32c:	stur	w8, [x29, #-24]
   1c330:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   1c334:	cbz	x23, 1c9a8 <rpl_re_compile_pattern@@Base+0xb48>
   1c338:	cbz	x0, 1c9a8 <rpl_re_compile_pattern@@Base+0xb48>
   1c33c:	str	x0, [x20, #104]
   1c340:	ldr	x21, [x19]
   1c344:	ldr	x8, [x21, #8]
   1c348:	lsl	x0, x8, #3
   1c34c:	bl	a660 <malloc@plt>
   1c350:	ldr	x8, [x21, #8]
   1c354:	str	x0, [x21, #24]
   1c358:	lsl	x0, x8, #3
   1c35c:	bl	a660 <malloc@plt>
   1c360:	ldr	x8, [x21, #8]
   1c364:	str	x0, [x21, #32]
   1c368:	add	x8, x8, x8, lsl #1
   1c36c:	lsl	x0, x8, #3
   1c370:	bl	a660 <malloc@plt>
   1c374:	ldr	x8, [x21, #8]
   1c378:	str	x0, [x21, #40]
   1c37c:	add	x8, x8, x8, lsl #1
   1c380:	lsl	x0, x8, #3
   1c384:	bl	a660 <malloc@plt>
   1c388:	ldr	x9, [x21, #24]
   1c38c:	str	x0, [x21, #48]
   1c390:	cbz	x9, 1c8d8 <rpl_re_compile_pattern@@Base+0xa78>
   1c394:	ldr	x9, [x21, #32]
   1c398:	cbz	x9, 1c8d8 <rpl_re_compile_pattern@@Base+0xa78>
   1c39c:	mov	x8, x0
   1c3a0:	mov	w0, #0xc                   	// #12
   1c3a4:	cbz	x8, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c3a8:	ldr	x8, [x21, #40]
   1c3ac:	cbz	x8, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c3b0:	ldr	x22, [x19, #48]
   1c3b4:	lsl	x0, x22, #3
   1c3b8:	bl	a660 <malloc@plt>
   1c3bc:	str	x0, [x21, #224]
   1c3c0:	cbz	x0, 1c434 <rpl_re_compile_pattern@@Base+0x5d4>
   1c3c4:	cbz	x22, 1c3dc <rpl_re_compile_pattern@@Base+0x57c>
   1c3c8:	mov	x8, xzr
   1c3cc:	str	x8, [x0, x8, lsl #3]
   1c3d0:	add	x8, x8, #0x1
   1c3d4:	cmp	x22, x8
   1c3d8:	b.ne	1c3cc <rpl_re_compile_pattern@@Base+0x56c>  // b.any
   1c3dc:	ldr	x0, [x21, #104]
   1c3e0:	adrp	x1, 22000 <rpl_re_set_registers@@Base+0x2f4c>
   1c3e4:	add	x1, x1, #0x66c
   1c3e8:	mov	x2, x21
   1c3ec:	bl	225e8 <rpl_re_set_registers@@Base+0x3534>
   1c3f0:	ldr	x8, [x19, #48]
   1c3f4:	cbz	x8, 1c41c <rpl_re_compile_pattern@@Base+0x5bc>
   1c3f8:	ldr	x0, [x21, #224]
   1c3fc:	mov	x9, xzr
   1c400:	ldr	x10, [x0, x9, lsl #3]
   1c404:	cmp	x9, x10
   1c408:	b.ne	1c424 <rpl_re_compile_pattern@@Base+0x5c4>  // b.any
   1c40c:	add	x9, x9, #0x1
   1c410:	cmp	x8, x9
   1c414:	b.ne	1c400 <rpl_re_compile_pattern@@Base+0x5a0>  // b.any
   1c418:	b	1c42c <rpl_re_compile_pattern@@Base+0x5cc>
   1c41c:	ldr	x0, [x21, #224]
   1c420:	b	1c42c <rpl_re_compile_pattern@@Base+0x5cc>
   1c424:	cmp	x8, x9
   1c428:	b.ne	1c434 <rpl_re_compile_pattern@@Base+0x5d4>  // b.any
   1c42c:	bl	aaa0 <free@plt>
   1c430:	str	xzr, [x21, #224]
   1c434:	ldr	x0, [x21, #104]
   1c438:	adrp	x1, 22000 <rpl_re_set_registers@@Base+0x2f4c>
   1c43c:	add	x1, x1, #0x70c
   1c440:	mov	x2, x19
   1c444:	bl	203c4 <rpl_re_set_registers@@Base+0x1310>
   1c448:	cbnz	w0, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c44c:	ldr	x0, [x21, #104]
   1c450:	adrp	x1, 22000 <rpl_re_set_registers@@Base+0x2f4c>
   1c454:	add	x1, x1, #0x794
   1c458:	mov	x2, x21
   1c45c:	bl	203c4 <rpl_re_set_registers@@Base+0x1310>
   1c460:	cbnz	w0, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c464:	ldr	x0, [x21, #104]
   1c468:	adrp	x1, 22000 <rpl_re_set_registers@@Base+0x2f4c>
   1c46c:	add	x1, x1, #0x830
   1c470:	mov	x2, x21
   1c474:	bl	225e8 <rpl_re_set_registers@@Base+0x3534>
   1c478:	ldr	x0, [x21, #104]
   1c47c:	adrp	x1, 22000 <rpl_re_set_registers@@Base+0x2f4c>
   1c480:	add	x1, x1, #0x888
   1c484:	mov	x2, x21
   1c488:	bl	225e8 <rpl_re_set_registers@@Base+0x3534>
   1c48c:	cbnz	w0, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c490:	ldr	x8, [x21, #16]
   1c494:	cbz	x8, 1c51c <rpl_re_compile_pattern@@Base+0x6bc>
   1c498:	mov	w24, wzr
   1c49c:	mov	x22, xzr
   1c4a0:	mov	w23, #0x18                  	// #24
   1c4a4:	ldr	x8, [x21, #48]
   1c4a8:	madd	x8, x22, x23, x8
   1c4ac:	ldr	x8, [x8, #8]
   1c4b0:	cbnz	x8, 1c4e8 <rpl_re_compile_pattern@@Base+0x688>
   1c4b4:	sub	x0, x29, #0x20
   1c4b8:	mov	w3, #0x1                   	// #1
   1c4bc:	mov	x1, x21
   1c4c0:	mov	x2, x22
   1c4c4:	bl	22dd4 <rpl_re_set_registers@@Base+0x3d20>
   1c4c8:	cbnz	w0, 1c8dc <rpl_re_compile_pattern@@Base+0xa7c>
   1c4cc:	ldr	x8, [x21, #48]
   1c4d0:	madd	x8, x22, x23, x8
   1c4d4:	ldr	x8, [x8, #8]
   1c4d8:	cbnz	x8, 1c4e8 <rpl_re_compile_pattern@@Base+0x688>
   1c4dc:	ldur	x0, [x29, #-16]
   1c4e0:	bl	aaa0 <free@plt>
   1c4e4:	mov	w24, #0x1                   	// #1
   1c4e8:	ldr	x9, [x21, #16]
   1c4ec:	add	x8, x22, #0x1
   1c4f0:	mov	w10, w24
   1c4f4:	cmp	x8, x9
   1c4f8:	cset	w11, ne  // ne = any
   1c4fc:	csinc	x22, xzr, x22, eq  // eq = none
   1c500:	and	w24, w24, w11
   1c504:	tbnz	w10, #0, 1c4a4 <rpl_re_compile_pattern@@Base+0x644>
   1c508:	cmp	x8, x9
   1c50c:	b.ne	1c4a4 <rpl_re_compile_pattern@@Base+0x644>  // b.any
   1c510:	add	x8, x8, x8, lsl #1
   1c514:	lsl	x0, x8, #3
   1c518:	b	1c520 <rpl_re_compile_pattern@@Base+0x6c0>
   1c51c:	mov	x0, xzr
   1c520:	ldrb	w8, [x19, #56]
   1c524:	tbnz	w8, #4, 1c538 <rpl_re_compile_pattern@@Base+0x6d8>
   1c528:	ldr	x8, [x19, #48]
   1c52c:	cbz	x8, 1c538 <rpl_re_compile_pattern@@Base+0x6d8>
   1c530:	ldrb	w8, [x21, #176]
   1c534:	tbnz	w8, #0, 1c540 <rpl_re_compile_pattern@@Base+0x6e0>
   1c538:	ldr	x8, [x21, #152]
   1c53c:	cbz	x8, 1c5fc <rpl_re_compile_pattern@@Base+0x79c>
   1c540:	bl	a660 <malloc@plt>
   1c544:	str	x0, [x21, #56]
   1c548:	cbz	x0, 1c8d8 <rpl_re_compile_pattern@@Base+0xa78>
   1c54c:	ldr	x8, [x21, #16]
   1c550:	cbz	x8, 1c5fc <rpl_re_compile_pattern@@Base+0x79c>
   1c554:	stp	xzr, xzr, [x0]
   1c558:	str	xzr, [x0, #16]
   1c55c:	ldr	x8, [x21, #16]
   1c560:	cmp	x8, #0x2
   1c564:	b.cc	1c594 <rpl_re_compile_pattern@@Base+0x734>  // b.lo, b.ul, b.last
   1c568:	mov	w9, #0x1                   	// #1
   1c56c:	mov	w10, #0x18                  	// #24
   1c570:	ldr	x8, [x21, #56]
   1c574:	add	x9, x9, #0x1
   1c578:	add	x8, x8, x10
   1c57c:	stp	xzr, xzr, [x8]
   1c580:	str	xzr, [x8, #16]
   1c584:	ldr	x8, [x21, #16]
   1c588:	add	x10, x10, #0x18
   1c58c:	cmp	x9, x8
   1c590:	b.cc	1c570 <rpl_re_compile_pattern@@Base+0x710>  // b.lo, b.ul, b.last
   1c594:	cbz	x8, 1c5fc <rpl_re_compile_pattern@@Base+0x79c>
   1c598:	ldr	x9, [x21, #48]
   1c59c:	mov	x22, xzr
   1c5a0:	mov	w23, #0x18                  	// #24
   1c5a4:	madd	x10, x22, x23, x9
   1c5a8:	ldr	x11, [x10, #8]
   1c5ac:	cmp	x11, #0x1
   1c5b0:	b.lt	1c5f0 <rpl_re_compile_pattern@@Base+0x790>  // b.tstop
   1c5b4:	ldr	x24, [x10, #16]
   1c5b8:	mov	x28, xzr
   1c5bc:	ldr	x8, [x21, #56]
   1c5c0:	ldr	x9, [x24, x28, lsl #3]
   1c5c4:	mov	x1, x22
   1c5c8:	madd	x0, x9, x23, x8
   1c5cc:	bl	23570 <rpl_re_set_registers@@Base+0x44bc>
   1c5d0:	tbz	w0, #0, 1c8d8 <rpl_re_compile_pattern@@Base+0xa78>
   1c5d4:	ldr	x9, [x21, #48]
   1c5d8:	add	x28, x28, #0x1
   1c5dc:	madd	x8, x22, x23, x9
   1c5e0:	ldr	x8, [x8, #8]
   1c5e4:	cmp	x28, x8
   1c5e8:	b.lt	1c5bc <rpl_re_compile_pattern@@Base+0x75c>  // b.tstop
   1c5ec:	ldr	x8, [x21, #16]
   1c5f0:	add	x22, x22, #0x1
   1c5f4:	cmp	x22, x8
   1c5f8:	b.cc	1c5a4 <rpl_re_compile_pattern@@Base+0x744>  // b.lo, b.ul, b.last
   1c5fc:	stur	wzr, [x29, #-52]
   1c600:	cbnz	x27, 1c6f8 <rpl_re_compile_pattern@@Base+0x898>
   1c604:	ldrb	w9, [x20, #176]
   1c608:	tbz	w9, #2, 1c6f8 <rpl_re_compile_pattern@@Base+0x898>
   1c60c:	ldr	x8, [x19, #40]
   1c610:	cbnz	x8, 1c6f8 <rpl_re_compile_pattern@@Base+0x898>
   1c614:	ldr	x11, [x20, #16]
   1c618:	cbz	x11, 1c6c4 <rpl_re_compile_pattern@@Base+0x864>
   1c61c:	ldr	x10, [x20]
   1c620:	adrp	x13, 2a000 <vasnprintf@@Base+0x2944>
   1c624:	mov	w8, wzr
   1c628:	mov	w12, wzr
   1c62c:	add	x13, x13, #0xbb8
   1c630:	mov	w14, #0x1                   	// #1
   1c634:	mov	w15, #0x8b                  	// #139
   1c638:	mov	x16, x10
   1c63c:	ldrb	w17, [x16, #8]
   1c640:	sub	w17, w17, #0x1
   1c644:	cmp	w17, #0xb
   1c648:	b.hi	1c9c0 <rpl_re_compile_pattern@@Base+0xb60>  // b.pmore
   1c64c:	adr	x18, 1c65c <rpl_re_compile_pattern@@Base+0x7fc>
   1c650:	ldrb	w0, [x13, x17]
   1c654:	add	x18, x18, x0, lsl #2
   1c658:	br	x18
   1c65c:	subs	x11, x11, #0x1
   1c660:	add	x16, x16, #0x10
   1c664:	b.ne	1c63c <rpl_re_compile_pattern@@Base+0x7dc>  // b.any
   1c668:	b	1c914 <rpl_re_compile_pattern@@Base+0xab4>
   1c66c:	ldr	x17, [x16]
   1c670:	ldr	x18, [x17, #16]
   1c674:	cbnz	x18, 1c6f8 <rpl_re_compile_pattern@@Base+0x898>
   1c678:	ldr	x17, [x17, #24]
   1c67c:	cbz	x17, 1c65c <rpl_re_compile_pattern@@Base+0x7fc>
   1c680:	b	1c6f8 <rpl_re_compile_pattern@@Base+0x898>
   1c684:	ldr	w17, [x16]
   1c688:	sub	w17, w17, #0x10
   1c68c:	ror	w17, w17, #4
   1c690:	cmp	w17, #0x7
   1c694:	b.hi	1c6f8 <rpl_re_compile_pattern@@Base+0x898>  // b.pmore
   1c698:	lsl	w17, w14, w17
   1c69c:	tst	w17, w15
   1c6a0:	b.ne	1c65c <rpl_re_compile_pattern@@Base+0x7fc>  // b.any
   1c6a4:	b	1c6f8 <rpl_re_compile_pattern@@Base+0x898>
   1c6a8:	ldrsb	w17, [x16]
   1c6ac:	cmp	w17, #0x0
   1c6b0:	cset	w17, lt  // lt = tstop
   1c6b4:	orr	w12, w12, w17
   1c6b8:	b	1c65c <rpl_re_compile_pattern@@Base+0x7fc>
   1c6bc:	mov	w8, #0x1                   	// #1
   1c6c0:	b	1c65c <rpl_re_compile_pattern@@Base+0x7fc>
   1c6c4:	mov	w8, wzr
   1c6c8:	ldr	x10, [x20, #152]
   1c6cc:	mov	w12, #0x2                   	// #2
   1c6d0:	and	w9, w9, #0xfffffff9
   1c6d4:	mov	w11, #0x1                   	// #1
   1c6d8:	cmp	x10, #0x0
   1c6dc:	cset	w10, gt
   1c6e0:	orr	w8, w8, w10
   1c6e4:	tst	w8, #0x1
   1c6e8:	csel	w8, w12, wzr, ne  // ne = any
   1c6ec:	orr	w8, w8, w9
   1c6f0:	str	w11, [x20, #180]
   1c6f4:	strb	w8, [x20, #176]
   1c6f8:	ldr	x8, [x20, #104]
   1c6fc:	ldr	x9, [x20, #48]
   1c700:	mov	w10, #0x18                  	// #24
   1c704:	sub	x0, x29, #0x20
   1c708:	ldr	x8, [x8, #24]
   1c70c:	ldr	x8, [x8, #56]
   1c710:	madd	x1, x8, x10, x9
   1c714:	str	x8, [x20, #144]
   1c718:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   1c71c:	stur	w0, [x29, #-48]
   1c720:	cbnz	w0, 1c894 <rpl_re_compile_pattern@@Base+0xa34>
   1c724:	ldr	x8, [x20, #152]
   1c728:	cmp	x8, #0x1
   1c72c:	b.lt	1c7fc <rpl_re_compile_pattern@@Base+0x99c>  // b.tstop
   1c730:	ldur	x23, [x29, #-24]
   1c734:	cmp	x23, #0x1
   1c738:	b.lt	1c7fc <rpl_re_compile_pattern@@Base+0x99c>  // b.tstop
   1c73c:	mov	x24, xzr
   1c740:	mov	w22, #0x18                  	// #24
   1c744:	ldur	x9, [x29, #-16]
   1c748:	ldr	x10, [x20]
   1c74c:	ldr	x8, [x9, x24, lsl #3]
   1c750:	add	x11, x10, x8, lsl #4
   1c754:	ldrb	w11, [x11, #8]
   1c758:	cmp	w11, #0x4
   1c75c:	b.ne	1c7f0 <rpl_re_compile_pattern@@Base+0x990>  // b.any
   1c760:	cmp	x23, #0x1
   1c764:	b.lt	1c7a8 <rpl_re_compile_pattern@@Base+0x948>  // b.tstop
   1c768:	mov	x11, xzr
   1c76c:	add	x12, x10, x8, lsl #4
   1c770:	ldr	x13, [x9, x11, lsl #3]
   1c774:	add	x14, x10, x13, lsl #4
   1c778:	ldrb	w14, [x14, #8]
   1c77c:	cmp	w14, #0x9
   1c780:	b.ne	1c798 <rpl_re_compile_pattern@@Base+0x938>  // b.any
   1c784:	lsl	x13, x13, #4
   1c788:	ldr	x13, [x10, x13]
   1c78c:	ldr	x14, [x12]
   1c790:	cmp	x13, x14
   1c794:	b.eq	1c7ac <rpl_re_compile_pattern@@Base+0x94c>  // b.none
   1c798:	add	x11, x11, #0x1
   1c79c:	cmp	x23, x11
   1c7a0:	b.ne	1c770 <rpl_re_compile_pattern@@Base+0x910>  // b.any
   1c7a4:	b	1c7f0 <rpl_re_compile_pattern@@Base+0x990>
   1c7a8:	mov	x11, xzr
   1c7ac:	cmp	x11, x23
   1c7b0:	b.eq	1c7f0 <rpl_re_compile_pattern@@Base+0x990>  // b.none
   1c7b4:	ldr	x9, [x20, #40]
   1c7b8:	sub	x0, x29, #0x20
   1c7bc:	madd	x8, x8, x22, x9
   1c7c0:	ldr	x8, [x8, #16]
   1c7c4:	ldr	x21, [x8]
   1c7c8:	mov	x1, x21
   1c7cc:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   1c7d0:	cbnz	x0, 1c7f0 <rpl_re_compile_pattern@@Base+0x990>
   1c7d4:	ldr	x8, [x20, #48]
   1c7d8:	sub	x0, x29, #0x20
   1c7dc:	madd	x1, x21, x22, x8
   1c7e0:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   1c7e4:	cbnz	w0, 1c894 <rpl_re_compile_pattern@@Base+0xa34>
   1c7e8:	ldur	x23, [x29, #-24]
   1c7ec:	mov	x24, xzr
   1c7f0:	add	x24, x24, #0x1
   1c7f4:	cmp	x24, x23
   1c7f8:	b.lt	1c744 <rpl_re_compile_pattern@@Base+0x8e4>  // b.tstop
   1c7fc:	sub	x0, x29, #0x30
   1c800:	sub	x2, x29, #0x20
   1c804:	mov	x1, x20
   1c808:	mov	w3, wzr
   1c80c:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1c810:	str	x0, [x20, #72]
   1c814:	cbz	x0, 1c9a0 <rpl_re_compile_pattern@@Base+0xb40>
   1c818:	ldrsb	w8, [x0, #104]
   1c81c:	tbnz	w8, #31, 1c82c <rpl_re_compile_pattern@@Base+0x9cc>
   1c820:	stp	x0, x0, [x20, #88]
   1c824:	str	x0, [x20, #80]
   1c828:	b	1c888 <rpl_re_compile_pattern@@Base+0xa28>
   1c82c:	sub	x0, x29, #0x30
   1c830:	sub	x2, x29, #0x20
   1c834:	mov	w3, #0x1                   	// #1
   1c838:	mov	x1, x20
   1c83c:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1c840:	str	x0, [x20, #80]
   1c844:	sub	x0, x29, #0x30
   1c848:	sub	x2, x29, #0x20
   1c84c:	mov	w3, #0x2                   	// #2
   1c850:	mov	x1, x20
   1c854:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1c858:	str	x0, [x20, #88]
   1c85c:	sub	x0, x29, #0x30
   1c860:	sub	x2, x29, #0x20
   1c864:	mov	w3, #0x6                   	// #6
   1c868:	mov	x1, x20
   1c86c:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1c870:	ldr	x8, [x20, #80]
   1c874:	str	x0, [x20, #96]
   1c878:	cbz	x8, 1c9a0 <rpl_re_compile_pattern@@Base+0xb40>
   1c87c:	cbz	x0, 1c9a0 <rpl_re_compile_pattern@@Base+0xb40>
   1c880:	ldr	x8, [x20, #88]
   1c884:	cbz	x8, 1c9a0 <rpl_re_compile_pattern@@Base+0xb40>
   1c888:	ldur	x0, [x29, #-16]
   1c88c:	bl	aaa0 <free@plt>
   1c890:	mov	w0, wzr
   1c894:	stur	w0, [x29, #-52]
   1c898:	mov	x0, x19
   1c89c:	bl	1f1bc <rpl_re_set_registers@@Base+0x108>
   1c8a0:	add	x0, sp, #0x10
   1c8a4:	bl	1f208 <rpl_re_set_registers@@Base+0x154>
   1c8a8:	ldur	w8, [x29, #-52]
   1c8ac:	cbnz	w8, 1c8f0 <rpl_re_compile_pattern@@Base+0xa90>
   1c8b0:	mov	w21, wzr
   1c8b4:	mov	w0, w21
   1c8b8:	ldp	x20, x19, [sp, #304]
   1c8bc:	ldp	x22, x21, [sp, #288]
   1c8c0:	ldp	x24, x23, [sp, #272]
   1c8c4:	ldp	x26, x25, [sp, #256]
   1c8c8:	ldp	x28, x27, [sp, #240]
   1c8cc:	ldp	x29, x30, [sp, #224]
   1c8d0:	add	sp, sp, #0x140
   1c8d4:	ret
   1c8d8:	mov	w0, #0xc                   	// #12
   1c8dc:	stur	w0, [x29, #-52]
   1c8e0:	mov	x0, x19
   1c8e4:	bl	1f1bc <rpl_re_set_registers@@Base+0x108>
   1c8e8:	add	x0, sp, #0x10
   1c8ec:	bl	1f208 <rpl_re_set_registers@@Base+0x154>
   1c8f0:	orr	x8, x26, x25
   1c8f4:	cbz	x8, 1c900 <rpl_re_compile_pattern@@Base+0xaa0>
   1c8f8:	add	x0, x20, #0xe8
   1c8fc:	bl	ac50 <pthread_mutex_destroy@plt>
   1c900:	mov	x0, x20
   1c904:	bl	1cfbc <rpl_regfree@@Base+0x68>
   1c908:	stp	xzr, xzr, [x19]
   1c90c:	ldur	w21, [x29, #-52]
   1c910:	b	1c8b4 <rpl_re_compile_pattern@@Base+0xa54>
   1c914:	orr	w11, w12, w8
   1c918:	tbz	w11, #0, 1c6c8 <rpl_re_compile_pattern@@Base+0x868>
   1c91c:	mov	x9, xzr
   1c920:	mov	w11, #0x1                   	// #1
   1c924:	add	x12, x10, x9
   1c928:	ldr	w13, [x12, #8]
   1c92c:	and	w14, w13, #0xff
   1c930:	cmp	w14, #0x5
   1c934:	b.eq	1c950 <rpl_re_compile_pattern@@Base+0xaf0>  // b.none
   1c938:	cmp	w14, #0x1
   1c93c:	b.ne	1c95c <rpl_re_compile_pattern@@Base+0xafc>  // b.any
   1c940:	ldrsb	w10, [x10, x9]
   1c944:	tbz	w10, #31, 1c95c <rpl_re_compile_pattern@@Base+0xafc>
   1c948:	and	w10, w13, #0xffdfffff
   1c94c:	b	1c958 <rpl_re_compile_pattern@@Base+0xaf8>
   1c950:	and	w10, w13, #0xffffff00
   1c954:	orr	w10, w10, #0x7
   1c958:	str	w10, [x12, #8]
   1c95c:	ldr	x10, [x20, #16]
   1c960:	cmp	x11, x10
   1c964:	b.cs	1c978 <rpl_re_compile_pattern@@Base+0xb18>  // b.hs, b.nlast
   1c968:	ldr	x10, [x20]
   1c96c:	add	x9, x9, #0x10
   1c970:	add	x11, x11, #0x1
   1c974:	b	1c924 <rpl_re_compile_pattern@@Base+0xac4>
   1c978:	ldrb	w9, [x20, #176]
   1c97c:	b	1c6c8 <rpl_re_compile_pattern@@Base+0x868>
   1c980:	mov	w1, #0x118                 	// #280
   1c984:	mov	x0, x20
   1c988:	bl	a860 <realloc@plt>
   1c98c:	cbz	x0, 1c9b8 <rpl_re_compile_pattern@@Base+0xb58>
   1c990:	mov	x20, x0
   1c994:	mov	w8, #0x118                 	// #280
   1c998:	stp	x0, x8, [x19]
   1c99c:	b	1bf34 <rpl_re_compile_pattern@@Base+0xd4>
   1c9a0:	ldur	w0, [x29, #-48]
   1c9a4:	b	1c894 <rpl_re_compile_pattern@@Base+0xa34>
   1c9a8:	mov	w8, #0xc                   	// #12
   1c9ac:	stur	w8, [x29, #-52]
   1c9b0:	str	xzr, [x20, #104]
   1c9b4:	b	1c8e0 <rpl_re_compile_pattern@@Base+0xa80>
   1c9b8:	mov	w21, #0xc                   	// #12
   1c9bc:	b	1c8b4 <rpl_re_compile_pattern@@Base+0xa54>
   1c9c0:	bl	a980 <abort@plt>

000000000001c9c4 <rpl_re_set_syntax@@Base>:
   1c9c4:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
   1c9c8:	ldr	x9, [x9, #3920]
   1c9cc:	ldr	x8, [x9]
   1c9d0:	str	x0, [x9]
   1c9d4:	mov	x0, x8
   1c9d8:	ret

000000000001c9dc <rpl_re_compile_fastmap@@Base>:
   1c9dc:	stp	x29, x30, [sp, #-48]!
   1c9e0:	stp	x20, x19, [sp, #32]
   1c9e4:	ldr	x20, [x0, #32]
   1c9e8:	str	x21, [sp, #16]
   1c9ec:	ldr	x21, [x0]
   1c9f0:	mov	x19, x0
   1c9f4:	mov	w2, #0x100                 	// #256
   1c9f8:	mov	x0, x20
   1c9fc:	mov	w1, wzr
   1ca00:	mov	x29, sp
   1ca04:	bl	a770 <memset@plt>
   1ca08:	ldr	x1, [x21, #72]
   1ca0c:	mov	x0, x19
   1ca10:	mov	x2, x20
   1ca14:	bl	1ca88 <rpl_re_compile_fastmap@@Base+0xac>
   1ca18:	ldp	x8, x1, [x21, #72]
   1ca1c:	cmp	x8, x1
   1ca20:	b.eq	1ca34 <rpl_re_compile_fastmap@@Base+0x58>  // b.none
   1ca24:	mov	x0, x19
   1ca28:	mov	x2, x20
   1ca2c:	bl	1ca88 <rpl_re_compile_fastmap@@Base+0xac>
   1ca30:	ldr	x8, [x21, #72]
   1ca34:	ldr	x1, [x21, #88]
   1ca38:	cmp	x8, x1
   1ca3c:	b.eq	1ca50 <rpl_re_compile_fastmap@@Base+0x74>  // b.none
   1ca40:	mov	x0, x19
   1ca44:	mov	x2, x20
   1ca48:	bl	1ca88 <rpl_re_compile_fastmap@@Base+0xac>
   1ca4c:	ldr	x8, [x21, #72]
   1ca50:	ldr	x1, [x21, #96]
   1ca54:	cmp	x8, x1
   1ca58:	b.eq	1ca68 <rpl_re_compile_fastmap@@Base+0x8c>  // b.none
   1ca5c:	mov	x0, x19
   1ca60:	mov	x2, x20
   1ca64:	bl	1ca88 <rpl_re_compile_fastmap@@Base+0xac>
   1ca68:	ldrb	w8, [x19, #56]
   1ca6c:	ldr	x21, [sp, #16]
   1ca70:	mov	w0, wzr
   1ca74:	orr	w8, w8, #0x8
   1ca78:	strb	w8, [x19, #56]
   1ca7c:	ldp	x20, x19, [sp, #32]
   1ca80:	ldp	x29, x30, [sp], #48
   1ca84:	ret
   1ca88:	sub	sp, sp, #0x1a0
   1ca8c:	stp	x29, x30, [sp, #320]
   1ca90:	stp	x28, x27, [sp, #336]
   1ca94:	stp	x26, x25, [sp, #352]
   1ca98:	stp	x24, x23, [sp, #368]
   1ca9c:	stp	x22, x21, [sp, #384]
   1caa0:	stp	x20, x19, [sp, #400]
   1caa4:	ldr	x23, [x0]
   1caa8:	mov	x20, x2
   1caac:	add	x29, sp, #0x140
   1cab0:	str	x0, [sp, #32]
   1cab4:	ldr	w8, [x23, #180]
   1cab8:	cmp	w8, #0x1
   1cabc:	b.ne	1cacc <rpl_re_compile_fastmap@@Base+0xf0>  // b.any
   1cac0:	ldrb	w8, [x0, #26]
   1cac4:	ubfx	w24, w8, #6, #1
   1cac8:	b	1cad0 <rpl_re_compile_fastmap@@Base+0xf4>
   1cacc:	mov	w24, wzr
   1cad0:	ldr	x8, [x1, #16]
   1cad4:	cmp	x8, #0x1
   1cad8:	b.lt	1cda8 <rpl_re_compile_fastmap@@Base+0x3cc>  // b.tstop
   1cadc:	add	x8, sp, #0x28
   1cae0:	mov	x9, xzr
   1cae4:	mov	w28, #0x1                   	// #1
   1cae8:	orr	x8, x8, #0x1
   1caec:	stp	x8, x1, [sp, #8]
   1caf0:	ldr	x8, [x1, #24]
   1caf4:	str	x9, [sp, #24]
   1caf8:	ldr	x21, [x8, x9, lsl #3]
   1cafc:	ldr	x8, [x23]
   1cb00:	add	x9, x8, x21, lsl #4
   1cb04:	ldrb	w19, [x9, #8]
   1cb08:	sub	w10, w19, #0x1
   1cb0c:	cmp	w10, #0x6
   1cb10:	b.hi	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>  // b.pmore
   1cb14:	adrp	x13, 2a000 <vasnprintf@@Base+0x2944>
   1cb18:	add	x13, x13, #0xbc4
   1cb1c:	adr	x11, 1cb30 <rpl_re_compile_fastmap@@Base+0x154>
   1cb20:	ldrb	w12, [x13, x10]
   1cb24:	add	x11, x11, x12, lsl #2
   1cb28:	lsl	x22, x21, #4
   1cb2c:	br	x11
   1cb30:	ldrb	w0, [x9]
   1cb34:	strb	w28, [x20, x0]
   1cb38:	cbz	w24, 1cb44 <rpl_re_compile_fastmap@@Base+0x168>
   1cb3c:	bl	aed0 <tolower@plt>
   1cb40:	strb	w28, [x20, w0, sxtw]
   1cb44:	ldr	x8, [sp, #32]
   1cb48:	ldrb	w8, [x8, #26]
   1cb4c:	tbz	w8, #6, 1cd68 <rpl_re_compile_fastmap@@Base+0x38c>
   1cb50:	ldr	w8, [x23, #180]
   1cb54:	cmp	w8, #0x2
   1cb58:	b.lt	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>  // b.tstop
   1cb5c:	ldr	x8, [x23]
   1cb60:	add	x9, x21, #0x1
   1cb64:	mov	w13, #0x1                   	// #1
   1cb68:	movk	w13, #0x20, lsl #16
   1cb6c:	ldrb	w8, [x8, x22]
   1cb70:	strb	w8, [sp, #40]
   1cb74:	ldr	x8, [x23, #16]
   1cb78:	cmp	x9, x8
   1cb7c:	ldr	x8, [sp, #8]
   1cb80:	b.cs	1cbc0 <rpl_re_compile_fastmap@@Base+0x1e4>  // b.hs, b.nlast
   1cb84:	ldr	x8, [sp, #8]
   1cb88:	ldr	x10, [x23]
   1cb8c:	add	w12, w13, #0xfe
   1cb90:	add	x10, x10, x22
   1cb94:	ldr	w11, [x10, #24]
   1cb98:	and	w11, w11, w12
   1cb9c:	cmp	w11, w13
   1cba0:	b.ne	1cbc0 <rpl_re_compile_fastmap@@Base+0x1e4>  // b.any
   1cba4:	ldrb	w10, [x10, #16]
   1cba8:	add	x9, x9, #0x1
   1cbac:	add	x22, x22, #0x10
   1cbb0:	strb	w10, [x8], #1
   1cbb4:	ldr	x10, [x23, #16]
   1cbb8:	cmp	x9, x10
   1cbbc:	b.cc	1cb88 <rpl_re_compile_fastmap@@Base+0x1ac>  // b.lo, b.ul, b.last
   1cbc0:	add	x9, sp, #0x28
   1cbc4:	sub	x22, x8, x9
   1cbc8:	sub	x0, x29, #0xc
   1cbcc:	add	x1, sp, #0x28
   1cbd0:	sub	x3, x29, #0x18
   1cbd4:	mov	x2, x22
   1cbd8:	stur	xzr, [x29, #-24]
   1cbdc:	bl	a430 <rpl_mbrtowc@plt>
   1cbe0:	cmp	x0, x22
   1cbe4:	b.ne	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>  // b.any
   1cbe8:	ldur	w0, [x29, #-12]
   1cbec:	bl	af80 <towlower@plt>
   1cbf0:	mov	w1, w0
   1cbf4:	add	x0, sp, #0x28
   1cbf8:	sub	x2, x29, #0x18
   1cbfc:	bl	aff0 <wcrtomb@plt>
   1cc00:	cmn	x0, #0x1
   1cc04:	b.eq	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>  // b.none
   1cc08:	ldrb	w8, [sp, #40]
   1cc0c:	strb	w28, [x20, x8]
   1cc10:	b	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>
   1cc14:	mov	x27, xzr
   1cc18:	mov	x26, xzr
   1cc1c:	ldr	x8, [x8, x22]
   1cc20:	mov	x21, xzr
   1cc24:	add	x25, x20, w26, sxtw
   1cc28:	ldr	x19, [x8, x27, lsl #3]
   1cc2c:	lsr	x8, x19, x21
   1cc30:	tbz	w8, #0, 1cc48 <rpl_re_compile_fastmap@@Base+0x26c>
   1cc34:	strb	w28, [x25, x21]
   1cc38:	cbz	w24, 1cc48 <rpl_re_compile_fastmap@@Base+0x26c>
   1cc3c:	add	w0, w26, w21
   1cc40:	bl	aed0 <tolower@plt>
   1cc44:	strb	w28, [x20, w0, sxtw]
   1cc48:	add	x21, x21, #0x1
   1cc4c:	cmp	x21, #0x40
   1cc50:	b.ne	1cc2c <rpl_re_compile_fastmap@@Base+0x250>  // b.any
   1cc54:	add	x27, x27, #0x1
   1cc58:	cmp	x27, #0x4
   1cc5c:	b.eq	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>  // b.none
   1cc60:	ldr	x8, [x23]
   1cc64:	add	x26, x21, w26, sxtw
   1cc68:	b	1cc1c <rpl_re_compile_fastmap@@Base+0x240>
   1cc6c:	ldr	w8, [x23, #180]
   1cc70:	ldr	x22, [x9]
   1cc74:	cmp	w8, #0x2
   1cc78:	b.lt	1ccd0 <rpl_re_compile_fastmap@@Base+0x2f4>  // b.tstop
   1cc7c:	ldr	x8, [x22, #72]
   1cc80:	cbnz	x8, 1cc94 <rpl_re_compile_fastmap@@Base+0x2b8>
   1cc84:	ldrb	w8, [x22, #32]
   1cc88:	tbnz	w8, #0, 1cc94 <rpl_re_compile_fastmap@@Base+0x2b8>
   1cc8c:	ldr	x8, [x22, #64]
   1cc90:	cbz	x8, 1ccd0 <rpl_re_compile_fastmap@@Base+0x2f4>
   1cc94:	sturb	wzr, [x29, #-24]
   1cc98:	sub	x1, x29, #0x18
   1cc9c:	add	x3, sp, #0x28
   1cca0:	mov	w2, #0x1                   	// #1
   1cca4:	mov	x0, xzr
   1cca8:	str	xzr, [sp, #40]
   1ccac:	bl	a430 <rpl_mbrtowc@plt>
   1ccb0:	ldurb	w8, [x29, #-24]
   1ccb4:	cmn	x0, #0x2
   1ccb8:	b.ne	1ccc0 <rpl_re_compile_fastmap@@Base+0x2e4>  // b.any
   1ccbc:	strb	w28, [x20, x8]
   1ccc0:	add	w8, w8, #0x1
   1ccc4:	sturb	w8, [x29, #-24]
   1ccc8:	tbz	w8, #8, 1cc98 <rpl_re_compile_fastmap@@Base+0x2bc>
   1cccc:	b	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>
   1ccd0:	ldr	x8, [x22, #40]
   1ccd4:	cmp	x8, #0x1
   1ccd8:	b.lt	1cd68 <rpl_re_compile_fastmap@@Base+0x38c>  // b.tstop
   1ccdc:	mov	x27, xzr
   1cce0:	stur	xzr, [x29, #-24]
   1cce4:	ldr	x8, [x22]
   1cce8:	add	x0, sp, #0x28
   1ccec:	sub	x2, x29, #0x18
   1ccf0:	ldr	w1, [x8, x27, lsl #2]
   1ccf4:	bl	aff0 <wcrtomb@plt>
   1ccf8:	cmn	x0, #0x1
   1ccfc:	b.eq	1cd14 <rpl_re_compile_fastmap@@Base+0x338>  // b.none
   1cd00:	ldrb	w0, [sp, #40]
   1cd04:	strb	w28, [x20, x0]
   1cd08:	cbz	w24, 1cd14 <rpl_re_compile_fastmap@@Base+0x338>
   1cd0c:	bl	aed0 <tolower@plt>
   1cd10:	strb	w28, [x20, w0, sxtw]
   1cd14:	ldr	x8, [sp, #32]
   1cd18:	ldrb	w8, [x8, #26]
   1cd1c:	tbz	w8, #6, 1cd58 <rpl_re_compile_fastmap@@Base+0x37c>
   1cd20:	ldr	w8, [x23, #180]
   1cd24:	cmp	w8, #0x2
   1cd28:	b.lt	1cd58 <rpl_re_compile_fastmap@@Base+0x37c>  // b.tstop
   1cd2c:	ldr	x8, [x22]
   1cd30:	ldr	w0, [x8, x27, lsl #2]
   1cd34:	bl	af80 <towlower@plt>
   1cd38:	mov	w1, w0
   1cd3c:	add	x0, sp, #0x28
   1cd40:	sub	x2, x29, #0x18
   1cd44:	bl	aff0 <wcrtomb@plt>
   1cd48:	cmn	x0, #0x1
   1cd4c:	b.eq	1cd58 <rpl_re_compile_fastmap@@Base+0x37c>  // b.none
   1cd50:	ldrb	w8, [sp, #40]
   1cd54:	strb	w28, [x20, x8]
   1cd58:	ldr	x8, [x22, #40]
   1cd5c:	add	x27, x27, #0x1
   1cd60:	cmp	x27, x8
   1cd64:	b.lt	1cce0 <rpl_re_compile_fastmap@@Base+0x304>  // b.tstop
   1cd68:	ldp	x1, x9, [sp, #16]
   1cd6c:	ldr	x8, [x1, #16]
   1cd70:	add	x9, x9, #0x1
   1cd74:	cmp	x9, x8
   1cd78:	b.lt	1caf0 <rpl_re_compile_fastmap@@Base+0x114>  // b.tstop
   1cd7c:	b	1cda8 <rpl_re_compile_fastmap@@Base+0x3cc>
   1cd80:	mov	w1, #0x1                   	// #1
   1cd84:	mov	w2, #0x100                 	// #256
   1cd88:	mov	x0, x20
   1cd8c:	bl	a770 <memset@plt>
   1cd90:	cmp	w19, #0x2
   1cd94:	b.ne	1cda8 <rpl_re_compile_fastmap@@Base+0x3cc>  // b.any
   1cd98:	ldr	x9, [sp, #32]
   1cd9c:	ldrb	w8, [x9, #56]
   1cda0:	orr	w8, w8, #0x1
   1cda4:	strb	w8, [x9, #56]
   1cda8:	ldp	x20, x19, [sp, #400]
   1cdac:	ldp	x22, x21, [sp, #384]
   1cdb0:	ldp	x24, x23, [sp, #368]
   1cdb4:	ldp	x26, x25, [sp, #352]
   1cdb8:	ldp	x28, x27, [sp, #336]
   1cdbc:	ldp	x29, x30, [sp, #320]
   1cdc0:	add	sp, sp, #0x1a0
   1cdc4:	ret

000000000001cdc8 <rpl_regcomp@@Base>:
   1cdc8:	stp	x29, x30, [sp, #-48]!
   1cdcc:	stp	x20, x19, [sp, #32]
   1cdd0:	mov	x19, x0
   1cdd4:	stp	xzr, xzr, [x0]
   1cdd8:	str	xzr, [x0, #16]
   1cddc:	mov	w0, #0x100                 	// #256
   1cde0:	stp	x22, x21, [sp, #16]
   1cde4:	mov	x29, sp
   1cde8:	mov	w21, w2
   1cdec:	mov	x20, x1
   1cdf0:	bl	a660 <malloc@plt>
   1cdf4:	str	x0, [x19, #32]
   1cdf8:	cbz	x0, 1ceac <rpl_regcomp@@Base+0xe4>
   1cdfc:	mov	w8, #0xb2fc                	// #45820
   1ce00:	mov	w9, #0x2c6                 	// #710
   1ce04:	tst	w21, #0x1
   1ce08:	movk	w8, #0x3, lsl #16
   1ce0c:	movk	w9, #0x101, lsl #16
   1ce10:	lsl	w10, w21, #21
   1ce14:	csel	x8, x9, x8, eq  // eq = none
   1ce18:	and	w9, w10, #0x400000
   1ce1c:	orr	x22, x8, x9
   1ce20:	tbnz	w21, #2, 1ce30 <rpl_regcomp@@Base+0x68>
   1ce24:	ldrb	w8, [x19, #56]
   1ce28:	and	w8, w8, #0x7f
   1ce2c:	b	1ce48 <rpl_regcomp@@Base+0x80>
   1ce30:	ldrb	w8, [x19, #56]
   1ce34:	mov	w9, #0xb2be                	// #45758
   1ce38:	movk	w9, #0x143, lsl #16
   1ce3c:	and	x9, x22, x9
   1ce40:	orr	x22, x9, #0x100
   1ce44:	orr	w8, w8, #0xffffff80
   1ce48:	lsl	w9, w21, #1
   1ce4c:	strb	w8, [x19, #56]
   1ce50:	and	w8, w8, #0xffffffef
   1ce54:	and	w9, w9, #0x10
   1ce58:	orr	w8, w8, w9
   1ce5c:	mov	x0, x20
   1ce60:	strb	w8, [x19, #56]
   1ce64:	str	xzr, [x19, #40]
   1ce68:	bl	a370 <strlen@plt>
   1ce6c:	mov	x2, x0
   1ce70:	mov	x0, x19
   1ce74:	mov	x1, x20
   1ce78:	mov	x3, x22
   1ce7c:	bl	1bedc <rpl_re_compile_pattern@@Base+0x7c>
   1ce80:	cmp	w0, #0x10
   1ce84:	mov	w8, #0x8                   	// #8
   1ce88:	csel	w20, w8, w0, eq  // eq = none
   1ce8c:	cbnz	w20, 1ceb4 <rpl_regcomp@@Base+0xec>
   1ce90:	mov	x0, x19
   1ce94:	bl	afa0 <rpl_re_compile_fastmap@plt>
   1ce98:	mov	w0, w20
   1ce9c:	ldp	x20, x19, [sp, #32]
   1cea0:	ldp	x22, x21, [sp, #16]
   1cea4:	ldp	x29, x30, [sp], #48
   1cea8:	ret
   1ceac:	mov	w20, #0xc                   	// #12
   1ceb0:	b	1ce98 <rpl_regcomp@@Base+0xd0>
   1ceb4:	ldr	x0, [x19, #32]
   1ceb8:	bl	aaa0 <free@plt>
   1cebc:	str	xzr, [x19, #32]
   1cec0:	b	1ce98 <rpl_regcomp@@Base+0xd0>

000000000001cec4 <rpl_regerror@@Base>:
   1cec4:	stp	x29, x30, [sp, #-48]!
   1cec8:	cmp	w0, #0x11
   1cecc:	stp	x22, x21, [sp, #16]
   1ced0:	stp	x20, x19, [sp, #32]
   1ced4:	mov	x29, sp
   1ced8:	b.cs	1cf50 <rpl_regerror@@Base+0x8c>  // b.hs, b.nlast
   1cedc:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   1cee0:	add	x8, x8, #0xe00
   1cee4:	ldr	x8, [x8, w0, uxtw #3]
   1cee8:	adrp	x9, 2a000 <vasnprintf@@Base+0x2944>
   1ceec:	add	x9, x9, #0xc7f
   1cef0:	mov	x19, x2
   1cef4:	add	x1, x9, x8
   1cef8:	mov	w2, #0x5                   	// #5
   1cefc:	mov	x0, xzr
   1cf00:	mov	x20, x3
   1cf04:	bl	adc0 <dcgettext@plt>
   1cf08:	mov	x21, x0
   1cf0c:	bl	a370 <strlen@plt>
   1cf10:	add	x22, x0, #0x1
   1cf14:	cbz	x20, 1cf30 <rpl_regerror@@Base+0x6c>
   1cf18:	cmp	x22, x20
   1cf1c:	mov	x2, x22
   1cf20:	b.hi	1cf44 <rpl_regerror@@Base+0x80>  // b.pmore
   1cf24:	mov	x0, x19
   1cf28:	mov	x1, x21
   1cf2c:	bl	a2f0 <memcpy@plt>
   1cf30:	mov	x0, x22
   1cf34:	ldp	x20, x19, [sp, #32]
   1cf38:	ldp	x22, x21, [sp, #16]
   1cf3c:	ldp	x29, x30, [sp], #48
   1cf40:	ret
   1cf44:	sub	x2, x20, #0x1
   1cf48:	strb	wzr, [x19, x2]
   1cf4c:	b	1cf24 <rpl_regerror@@Base+0x60>
   1cf50:	bl	a980 <abort@plt>

000000000001cf54 <rpl_regfree@@Base>:
   1cf54:	stp	x29, x30, [sp, #-32]!
   1cf58:	stp	x20, x19, [sp, #16]
   1cf5c:	ldr	x20, [x0]
   1cf60:	mov	x19, x0
   1cf64:	mov	x29, sp
   1cf68:	cbz	x20, 1cf94 <rpl_regfree@@Base+0x40>
   1cf6c:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1cf70:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
   1cf74:	ldr	x8, [x8, #3944]
   1cf78:	ldr	x9, [x9, #4040]
   1cf7c:	orr	x8, x9, x8
   1cf80:	cbz	x8, 1cf8c <rpl_regfree@@Base+0x38>
   1cf84:	add	x0, x20, #0xe8
   1cf88:	bl	ac50 <pthread_mutex_destroy@plt>
   1cf8c:	mov	x0, x20
   1cf90:	bl	1cfbc <rpl_regfree@@Base+0x68>
   1cf94:	ldr	x0, [x19, #32]
   1cf98:	stp	xzr, xzr, [x19]
   1cf9c:	bl	aaa0 <free@plt>
   1cfa0:	ldr	x0, [x19, #40]
   1cfa4:	str	xzr, [x19, #32]
   1cfa8:	bl	aaa0 <free@plt>
   1cfac:	str	xzr, [x19, #40]
   1cfb0:	ldp	x20, x19, [sp, #16]
   1cfb4:	ldp	x29, x30, [sp], #32
   1cfb8:	ret
   1cfbc:	stp	x29, x30, [sp, #-64]!
   1cfc0:	stp	x24, x23, [sp, #16]
   1cfc4:	stp	x22, x21, [sp, #32]
   1cfc8:	stp	x20, x19, [sp, #48]
   1cfcc:	mov	x19, x0
   1cfd0:	ldr	x0, [x0]
   1cfd4:	mov	x29, sp
   1cfd8:	cbz	x0, 1d01c <rpl_regfree@@Base+0xc8>
   1cfdc:	ldr	x8, [x19, #16]
   1cfe0:	cbz	x8, 1d01c <rpl_regfree@@Base+0xc8>
   1cfe4:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   1cfe8:	ldr	x8, [x19, #16]
   1cfec:	cmp	x8, #0x2
   1cff0:	b.cc	1d01c <rpl_regfree@@Base+0xc8>  // b.lo, b.ul, b.last
   1cff4:	mov	w20, #0x1                   	// #1
   1cff8:	mov	w21, #0x10                  	// #16
   1cffc:	ldr	x8, [x19]
   1d000:	add	x0, x8, x21
   1d004:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   1d008:	ldr	x8, [x19, #16]
   1d00c:	add	x20, x20, #0x1
   1d010:	add	x21, x21, #0x10
   1d014:	cmp	x20, x8
   1d018:	b.cc	1cffc <rpl_regfree@@Base+0xa8>  // b.lo, b.ul, b.last
   1d01c:	ldr	x0, [x19, #24]
   1d020:	bl	aaa0 <free@plt>
   1d024:	ldr	x8, [x19, #16]
   1d028:	cbz	x8, 1d078 <rpl_regfree@@Base+0x124>
   1d02c:	mov	x20, xzr
   1d030:	mov	w21, #0x10                  	// #16
   1d034:	ldr	x8, [x19, #48]
   1d038:	cbz	x8, 1d044 <rpl_regfree@@Base+0xf0>
   1d03c:	ldr	x0, [x8, x21]
   1d040:	bl	aaa0 <free@plt>
   1d044:	ldr	x8, [x19, #56]
   1d048:	cbz	x8, 1d054 <rpl_regfree@@Base+0x100>
   1d04c:	ldr	x0, [x8, x21]
   1d050:	bl	aaa0 <free@plt>
   1d054:	ldr	x8, [x19, #40]
   1d058:	cbz	x8, 1d064 <rpl_regfree@@Base+0x110>
   1d05c:	ldr	x0, [x8, x21]
   1d060:	bl	aaa0 <free@plt>
   1d064:	ldr	x8, [x19, #16]
   1d068:	add	x20, x20, #0x1
   1d06c:	add	x21, x21, #0x18
   1d070:	cmp	x20, x8
   1d074:	b.cc	1d034 <rpl_regfree@@Base+0xe0>  // b.lo, b.ul, b.last
   1d078:	ldr	x0, [x19, #40]
   1d07c:	bl	aaa0 <free@plt>
   1d080:	ldr	x0, [x19, #48]
   1d084:	bl	aaa0 <free@plt>
   1d088:	ldr	x0, [x19, #56]
   1d08c:	bl	aaa0 <free@plt>
   1d090:	ldr	x0, [x19]
   1d094:	bl	aaa0 <free@plt>
   1d098:	ldr	x0, [x19, #64]
   1d09c:	cbz	x0, 1d100 <rpl_regfree@@Base+0x1ac>
   1d0a0:	mov	x20, xzr
   1d0a4:	mov	w21, #0x18                  	// #24
   1d0a8:	madd	x23, x20, x21, x0
   1d0ac:	mov	x22, x23
   1d0b0:	ldr	x8, [x22], #16
   1d0b4:	cmp	x8, #0x1
   1d0b8:	b.lt	1d0dc <rpl_regfree@@Base+0x188>  // b.tstop
   1d0bc:	mov	x24, xzr
   1d0c0:	ldr	x8, [x22]
   1d0c4:	ldr	x0, [x8, x24, lsl #3]
   1d0c8:	bl	1f114 <rpl_re_set_registers@@Base+0x60>
   1d0cc:	ldr	x8, [x23]
   1d0d0:	add	x24, x24, #0x1
   1d0d4:	cmp	x24, x8
   1d0d8:	b.lt	1d0c0 <rpl_regfree@@Base+0x16c>  // b.tstop
   1d0dc:	ldr	x0, [x22]
   1d0e0:	bl	aaa0 <free@plt>
   1d0e4:	ldr	x8, [x19, #136]
   1d0e8:	cmp	x20, x8
   1d0ec:	b.cs	1d0fc <rpl_regfree@@Base+0x1a8>  // b.hs, b.nlast
   1d0f0:	ldr	x0, [x19, #64]
   1d0f4:	add	x20, x20, #0x1
   1d0f8:	b	1d0a8 <rpl_regfree@@Base+0x154>
   1d0fc:	ldr	x0, [x19, #64]
   1d100:	bl	aaa0 <free@plt>
   1d104:	ldr	x0, [x19, #120]
   1d108:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   1d10c:	add	x8, x8, #0xe88
   1d110:	cmp	x0, x8
   1d114:	b.eq	1d11c <rpl_regfree@@Base+0x1c8>  // b.none
   1d118:	bl	aaa0 <free@plt>
   1d11c:	ldr	x0, [x19, #224]
   1d120:	bl	aaa0 <free@plt>
   1d124:	mov	x0, x19
   1d128:	ldp	x20, x19, [sp, #48]
   1d12c:	ldp	x22, x21, [sp, #32]
   1d130:	ldp	x24, x23, [sp, #16]
   1d134:	ldp	x29, x30, [sp], #64
   1d138:	b	aaa0 <free@plt>

000000000001d13c <rpl_regexec@@Base>:
   1d13c:	cmp	w4, #0x7
   1d140:	b.ls	1d14c <rpl_regexec@@Base+0x10>  // b.plast
   1d144:	mov	w0, #0x2                   	// #2
   1d148:	ret
   1d14c:	sub	sp, sp, #0x70
   1d150:	stp	x26, x25, [sp, #48]
   1d154:	ldr	x26, [x0]
   1d158:	stp	x24, x23, [sp, #64]
   1d15c:	stp	x22, x21, [sp, #80]
   1d160:	stp	x20, x19, [sp, #96]
   1d164:	mov	w22, w4
   1d168:	mov	x19, x3
   1d16c:	mov	x21, x2
   1d170:	mov	x20, x1
   1d174:	mov	x23, x0
   1d178:	stp	x29, x30, [sp, #16]
   1d17c:	stp	x28, x27, [sp, #32]
   1d180:	add	x29, sp, #0x10
   1d184:	tbnz	w4, #2, 1d19c <rpl_regexec@@Base+0x60>
   1d188:	mov	x0, x20
   1d18c:	bl	a370 <strlen@plt>
   1d190:	mov	x24, x0
   1d194:	mov	x25, xzr
   1d198:	b	1d1a0 <rpl_regexec@@Base+0x64>
   1d19c:	ldp	x25, x24, [x19]
   1d1a0:	adrp	x27, 3c000 <vasnprintf@@Base+0x14944>
   1d1a4:	adrp	x28, 3c000 <vasnprintf@@Base+0x14944>
   1d1a8:	ldr	x27, [x27, #3944]
   1d1ac:	ldr	x28, [x28, #4040]
   1d1b0:	orr	x8, x28, x27
   1d1b4:	cbz	x8, 1d1c0 <rpl_regexec@@Base+0x84>
   1d1b8:	add	x0, x26, #0xe8
   1d1bc:	bl	af20 <pthread_mutex_lock@plt>
   1d1c0:	ldrb	w8, [x23, #56]
   1d1c4:	tbnz	w8, #4, 1d1f0 <rpl_regexec@@Base+0xb4>
   1d1c8:	mov	x0, x23
   1d1cc:	mov	x1, x20
   1d1d0:	mov	x2, x24
   1d1d4:	mov	x3, x25
   1d1d8:	mov	x4, x24
   1d1dc:	mov	x5, x24
   1d1e0:	mov	x6, x21
   1d1e4:	mov	x7, x19
   1d1e8:	str	w22, [sp]
   1d1ec:	b	1d214 <rpl_regexec@@Base+0xd8>
   1d1f0:	str	w22, [sp]
   1d1f4:	mov	x0, x23
   1d1f8:	mov	x1, x20
   1d1fc:	mov	x2, x24
   1d200:	mov	x3, x25
   1d204:	mov	x4, x24
   1d208:	mov	x5, x24
   1d20c:	mov	x6, xzr
   1d210:	mov	x7, xzr
   1d214:	bl	1d254 <rpl_regexec@@Base+0x118>
   1d218:	mov	w19, w0
   1d21c:	orr	x8, x28, x27
   1d220:	cbz	x8, 1d22c <rpl_regexec@@Base+0xf0>
   1d224:	add	x0, x26, #0xe8
   1d228:	bl	af50 <pthread_mutex_unlock@plt>
   1d22c:	cmp	w19, #0x0
   1d230:	ldp	x20, x19, [sp, #96]
   1d234:	ldp	x22, x21, [sp, #80]
   1d238:	ldp	x24, x23, [sp, #64]
   1d23c:	ldp	x26, x25, [sp, #48]
   1d240:	ldp	x28, x27, [sp, #32]
   1d244:	ldp	x29, x30, [sp, #16]
   1d248:	cset	w0, ne  // ne = any
   1d24c:	add	sp, sp, #0x70
   1d250:	ret
   1d254:	stp	x29, x30, [sp, #-96]!
   1d258:	stp	x28, x27, [sp, #16]
   1d25c:	stp	x26, x25, [sp, #32]
   1d260:	stp	x24, x23, [sp, #48]
   1d264:	stp	x22, x21, [sp, #64]
   1d268:	stp	x20, x19, [sp, #80]
   1d26c:	mov	x29, sp
   1d270:	sub	sp, sp, #0x2f0
   1d274:	stp	x1, x2, [sp, #248]
   1d278:	ldr	x25, [x0]
   1d27c:	mov	x28, x0
   1d280:	add	x0, sp, #0x120
   1d284:	mov	w2, #0x100                 	// #256
   1d288:	mov	w1, wzr
   1d28c:	mov	x21, x7
   1d290:	mov	x24, x6
   1d294:	mov	x27, x5
   1d298:	mov	x19, x4
   1d29c:	mov	x26, x3
   1d2a0:	bl	a770 <memset@plt>
   1d2a4:	str	x25, [sp, #440]
   1d2a8:	ldr	x8, [x28, #32]
   1d2ac:	cbz	x8, 1d2cc <rpl_regexec@@Base+0x190>
   1d2b0:	ldrb	w9, [x28, #56]
   1d2b4:	mov	w10, #0x9                   	// #9
   1d2b8:	and	w9, w9, w10
   1d2bc:	cmp	w9, #0x8
   1d2c0:	ccmp	x26, x19, #0x4, eq  // eq = none
   1d2c4:	csel	x22, x8, xzr, ne  // ne = any
   1d2c8:	b	1d2d0 <rpl_regexec@@Base+0x194>
   1d2cc:	mov	x22, xzr
   1d2d0:	ldr	x8, [x28, #48]
   1d2d4:	ldr	x9, [x28, #16]
   1d2d8:	mvn	x10, x8
   1d2dc:	add	x10, x10, x24
   1d2e0:	cmp	x8, x24
   1d2e4:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
   1d2e8:	cbz	x9, 1e9a4 <rpl_regexec@@Base+0x1868>
   1d2ec:	ldr	x10, [x25, #72]
   1d2f0:	cbz	x10, 1e9a4 <rpl_regexec@@Base+0x1868>
   1d2f4:	ldr	x9, [x25, #80]
   1d2f8:	cbz	x9, 1e9a4 <rpl_regexec@@Base+0x1868>
   1d2fc:	ldr	x8, [x25, #88]
   1d300:	cbz	x8, 1e9a4 <rpl_regexec@@Base+0x1868>
   1d304:	ldr	x11, [x25, #96]
   1d308:	cbz	x11, 1e9a4 <rpl_regexec@@Base+0x1868>
   1d30c:	ldr	x10, [x10, #16]
   1d310:	ldr	x23, [x28, #40]
   1d314:	cbnz	x10, 1d320 <rpl_regexec@@Base+0x1e4>
   1d318:	ldr	x9, [x9, #16]
   1d31c:	cbz	x9, 1e984 <rpl_regexec@@Base+0x1848>
   1d320:	mov	x20, x19
   1d324:	sub	x8, x24, x12
   1d328:	str	x8, [sp, #216]
   1d32c:	str	x24, [sp, #120]
   1d330:	str	x12, [sp, #136]
   1d334:	cbz	x8, 1d340 <rpl_regexec@@Base+0x204>
   1d338:	mov	w8, #0x1                   	// #1
   1d33c:	b	1d34c <rpl_regexec@@Base+0x210>
   1d340:	ldr	x8, [x25, #152]
   1d344:	cmp	x8, #0x0
   1d348:	cset	w8, ne  // ne = any
   1d34c:	str	w8, [sp, #156]
   1d350:	ldp	x12, x19, [sp, #248]
   1d354:	ldr	x8, [x25, #16]
   1d358:	ldrsw	x10, [x25, #180]
   1d35c:	ldr	x9, [x28, #24]
   1d360:	str	x12, [sp, #288]
   1d364:	add	x12, x8, #0x1
   1d368:	cmp	x12, x10
   1d36c:	add	x11, x19, #0x1
   1d370:	and	x12, x9, #0x400000
   1d374:	ubfx	x9, x9, #22, #1
   1d378:	csinc	x8, x10, x8, lt  // lt = tstop
   1d37c:	strb	w9, [sp, #424]
   1d380:	orr	x9, x23, x12
   1d384:	cmp	x11, x8
   1d388:	csinc	x1, x8, x19, ge  // ge = tcont
   1d38c:	cmp	x9, #0x0
   1d390:	cset	w8, ne  // ne = any
   1d394:	stp	x19, x19, [sp, #368]
   1d398:	str	x23, [sp, #408]
   1d39c:	str	w10, [sp, #432]
   1d3a0:	strb	w8, [sp, #427]
   1d3a4:	ldrb	w8, [x25, #176]
   1d3a8:	add	x0, sp, #0x120
   1d3ac:	str	x28, [sp, #224]
   1d3b0:	stp	x19, x19, [sp, #384]
   1d3b4:	ubfx	w9, w8, #2, #1
   1d3b8:	ubfx	w8, w8, #3, #1
   1d3bc:	strb	w9, [sp, #425]
   1d3c0:	strb	w8, [sp, #426]
   1d3c4:	bl	1f24c <rpl_re_set_registers@@Base+0x198>
   1d3c8:	cbnz	w0, 1eb28 <rpl_regexec@@Base+0x19ec>
   1d3cc:	add	x8, x25, #0xb8
   1d3d0:	str	x8, [sp, #416]
   1d3d4:	ldrb	w8, [x25, #176]
   1d3d8:	ldrb	w9, [sp, #427]
   1d3dc:	ldr	w10, [x29, #96]
   1d3e0:	str	x21, [sp, #128]
   1d3e4:	ubfx	w8, w8, #4, #1
   1d3e8:	strb	w8, [sp, #430]
   1d3ec:	str	w10, [sp, #276]
   1d3f0:	cbz	w9, 1d3fc <rpl_regexec@@Base+0x2c0>
   1d3f4:	mov	x8, xzr
   1d3f8:	b	1d410 <rpl_regexec@@Base+0x2d4>
   1d3fc:	ldr	x8, [sp, #248]
   1d400:	str	x8, [sp, #296]
   1d404:	ldr	w8, [x25, #180]
   1d408:	cmp	w8, #0x1
   1d40c:	csel	x8, xzr, x19, gt
   1d410:	ldr	x9, [sp, #224]
   1d414:	stp	x8, x8, [sp, #336]
   1d418:	stp	x27, x27, [sp, #384]
   1d41c:	ldrb	w8, [x9, #56]
   1d420:	ldr	w9, [sp, #276]
   1d424:	lsr	w8, w8, #7
   1d428:	strb	w8, [sp, #429]
   1d42c:	ldr	x24, [x25, #152]
   1d430:	mov	x8, #0xffffffffffffffff    	// #-1
   1d434:	str	w9, [sp, #448]
   1d438:	str	x8, [sp, #456]
   1d43c:	lsl	x21, x24, #1
   1d440:	cmp	x24, #0x1
   1d444:	b.lt	1d488 <rpl_regexec@@Base+0x34c>  // b.tstop
   1d448:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   1d44c:	movk	x8, #0x666, lsl #48
   1d450:	cmp	x21, x8
   1d454:	b.hi	1eb68 <rpl_regexec@@Base+0x1a2c>  // b.pmore
   1d458:	add	x8, x24, x24, lsl #2
   1d45c:	lsl	x0, x8, #4
   1d460:	bl	a660 <malloc@plt>
   1d464:	mov	x19, x0
   1d468:	str	x0, [sp, #504]
   1d46c:	lsl	x0, x24, #4
   1d470:	bl	a660 <malloc@plt>
   1d474:	mov	w28, #0xc                   	// #12
   1d478:	str	x0, [sp, #536]
   1d47c:	cbz	x19, 1eacc <rpl_regexec@@Base+0x1990>
   1d480:	ldr	x19, [sp, #256]
   1d484:	cbz	x0, 1eacc <rpl_regexec@@Base+0x1990>
   1d488:	ldr	x9, [sp, #216]
   1d48c:	mov	w8, #0x1                   	// #1
   1d490:	str	x21, [sp, #496]
   1d494:	str	w8, [sp, #512]
   1d498:	cmp	x9, #0x1
   1d49c:	str	x21, [sp, #528]
   1d4a0:	b.hi	1d4b4 <rpl_regexec@@Base+0x378>  // b.pmore
   1d4a4:	ldrb	w8, [x25, #176]
   1d4a8:	tbnz	w8, #1, 1d4b4 <rpl_regexec@@Base+0x378>
   1d4ac:	str	xzr, [sp, #472]
   1d4b0:	b	1d4d8 <rpl_regexec@@Base+0x39c>
   1d4b4:	ldr	x8, [sp, #352]
   1d4b8:	mov	x9, #0x1ffffffffffffffe    	// #2305843009213693950
   1d4bc:	cmp	x8, x9
   1d4c0:	b.hi	1eb68 <rpl_regexec@@Base+0x1a2c>  // b.pmore
   1d4c4:	lsl	x8, x8, #3
   1d4c8:	add	x0, x8, #0x8
   1d4cc:	bl	a660 <malloc@plt>
   1d4d0:	str	x0, [sp, #472]
   1d4d4:	cbz	x0, 1eb68 <rpl_regexec@@Base+0x1a2c>
   1d4d8:	ldr	w9, [sp, #276]
   1d4dc:	mov	w10, #0x6                   	// #6
   1d4e0:	stur	x26, [x29, #-208]
   1d4e4:	add	x8, sp, #0x120
   1d4e8:	tst	w9, #0x1
   1d4ec:	mov	w9, #0x4                   	// #4
   1d4f0:	csel	w9, w10, w9, eq  // eq = none
   1d4f4:	str	w9, [sp, #400]
   1d4f8:	ldr	w21, [x25, #180]
   1d4fc:	cmp	x20, x26
   1d500:	csel	x27, x20, x26, lt  // lt = tstop
   1d504:	csel	x24, x26, x20, lt  // lt = tstop
   1d508:	cbz	x22, 1d51c <rpl_regexec@@Base+0x3e0>
   1d50c:	cmp	w21, #0x1
   1d510:	b.ne	1d524 <rpl_regexec@@Base+0x3e8>  // b.any
   1d514:	mov	w9, #0x4                   	// #4
   1d518:	b	1d540 <rpl_regexec@@Base+0x404>
   1d51c:	mov	w9, #0x8                   	// #8
   1d520:	b	1d558 <rpl_regexec@@Base+0x41c>
   1d524:	ldr	x9, [sp, #224]
   1d528:	ldr	x9, [x9, #24]
   1d52c:	and	x9, x9, #0x400000
   1d530:	orr	x9, x23, x9
   1d534:	cmp	x9, #0x0
   1d538:	cset	w9, eq  // eq = none
   1d53c:	lsl	w9, w9, #2
   1d540:	cmp	x20, x26
   1d544:	cset	w10, ge  // ge = tcont
   1d548:	cmp	x23, #0x0
   1d54c:	cset	w11, ne  // ne = any
   1d550:	bfi	w11, w10, #1, #1
   1d554:	orr	w9, w11, w9
   1d558:	add	x8, x8, #0x38
   1d55c:	str	x8, [sp, #112]
   1d560:	add	x8, sp, #0x120
   1d564:	cmp	x20, x26
   1d568:	sub	x10, x29, #0xd0
   1d56c:	add	x8, x8, #0xc0
   1d570:	mov	x11, #0xffffffffffffffff    	// #-1
   1d574:	str	x8, [sp, #168]
   1d578:	csel	x8, xzr, x10, lt  // lt = tstop
   1d57c:	sub	x12, x29, #0x40
   1d580:	sub	w20, w9, #0x4
   1d584:	cneg	x9, x11, ge  // ge = tcont
   1d588:	cmp	x8, #0x0
   1d58c:	str	x9, [sp, #280]
   1d590:	add	x9, x12, #0x20
   1d594:	str	x8, [sp, #160]
   1d598:	cset	w8, ne  // ne = any
   1d59c:	str	x9, [sp, #144]
   1d5a0:	str	w8, [sp, #180]
   1d5a4:	str	x25, [sp, #240]
   1d5a8:	str	w21, [sp, #204]
   1d5ac:	str	x27, [sp, #192]
   1d5b0:	str	x20, [sp, #208]
   1d5b4:	cmp	w20, #0x4
   1d5b8:	b.hi	1d70c <rpl_regexec@@Base+0x5d0>  // b.pmore
   1d5bc:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   1d5c0:	add	x10, x10, #0xbcb
   1d5c4:	adr	x8, 1d5d4 <rpl_regexec@@Base+0x498>
   1d5c8:	ldrb	w9, [x10, x20]
   1d5cc:	add	x8, x8, x9, lsl #2
   1d5d0:	br	x8
   1d5d4:	cmp	x26, x27
   1d5d8:	b.lt	1e908 <rpl_regexec@@Base+0x17cc>  // b.tstop
   1d5dc:	ldr	x9, [sp, #248]
   1d5e0:	cmp	x26, x19
   1d5e4:	b.ge	1d5f4 <rpl_regexec@@Base+0x4b8>  // b.tcont
   1d5e8:	ldrb	w8, [x9, x26]
   1d5ec:	cbnz	x23, 1d5fc <rpl_regexec@@Base+0x4c0>
   1d5f0:	b	1d600 <rpl_regexec@@Base+0x4c4>
   1d5f4:	mov	w8, wzr
   1d5f8:	cbz	x23, 1d600 <rpl_regexec@@Base+0x4c4>
   1d5fc:	ldrb	w8, [x23, w8, uxtw]
   1d600:	ldrb	w8, [x22, w8, uxtw]
   1d604:	cbnz	w8, 1d67c <rpl_regexec@@Base+0x540>
   1d608:	cmp	x26, x27
   1d60c:	sub	x26, x26, #0x1
   1d610:	stur	x26, [x29, #-208]
   1d614:	b.gt	1d5e0 <rpl_regexec@@Base+0x4a4>
   1d618:	b	1e908 <rpl_regexec@@Base+0x17cc>
   1d61c:	cmp	x26, x24
   1d620:	b.ge	1d674 <rpl_regexec@@Base+0x538>  // b.tcont
   1d624:	ldr	x9, [sp, #248]
   1d628:	ldrb	w8, [x9, x26]
   1d62c:	ldrb	w8, [x23, x8]
   1d630:	ldrb	w8, [x22, x8]
   1d634:	cbnz	w8, 1d674 <rpl_regexec@@Base+0x538>
   1d638:	add	x26, x26, #0x1
   1d63c:	cmp	x26, x24
   1d640:	stur	x26, [x29, #-208]
   1d644:	b.lt	1d628 <rpl_regexec@@Base+0x4ec>  // b.tstop
   1d648:	b	1d674 <rpl_regexec@@Base+0x538>
   1d64c:	ldr	x9, [sp, #248]
   1d650:	cmp	x26, x24
   1d654:	b.ge	1d674 <rpl_regexec@@Base+0x538>  // b.tcont
   1d658:	ldrb	w8, [x9, x26]
   1d65c:	ldrb	w8, [x22, x8]
   1d660:	cbnz	w8, 1d674 <rpl_regexec@@Base+0x538>
   1d664:	add	x26, x26, #0x1
   1d668:	cmp	x26, x24
   1d66c:	stur	x26, [x29, #-208]
   1d670:	b.lt	1d658 <rpl_regexec@@Base+0x51c>  // b.tstop
   1d674:	cmp	x26, x24
   1d678:	b.eq	1e848 <rpl_regexec@@Base+0x170c>  // b.none
   1d67c:	ldr	w2, [sp, #276]
   1d680:	add	x0, sp, #0x120
   1d684:	mov	x1, x26
   1d688:	bl	23a7c <rpl_re_set_registers@@Base+0x49c8>
   1d68c:	cbnz	w0, 1eb28 <rpl_regexec@@Base+0x19ec>
   1d690:	cmp	w21, #0x1
   1d694:	b.eq	1d6b0 <rpl_regexec@@Base+0x574>  // b.none
   1d698:	ldr	x8, [sp, #336]
   1d69c:	cbz	x8, 1d6b0 <rpl_regexec@@Base+0x574>
   1d6a0:	ldr	x8, [sp, #304]
   1d6a4:	ldr	w8, [x8]
   1d6a8:	cmn	w8, #0x1
   1d6ac:	b.eq	1e6e0 <rpl_regexec@@Base+0x15a4>  // b.none
   1d6b0:	ldr	x8, [sp, #168]
   1d6b4:	str	wzr, [sp, #512]
   1d6b8:	stur	wzr, [x29, #-196]
   1d6bc:	stp	xzr, xzr, [x8]
   1d6c0:	ldr	x19, [sp, #440]
   1d6c4:	ldr	x27, [sp, #360]
   1d6c8:	ldr	x28, [x19, #72]
   1d6cc:	ldrsb	w8, [x28, #104]
   1d6d0:	tbnz	w8, #31, 1d6dc <rpl_regexec@@Base+0x5a0>
   1d6d4:	ldr	w21, [sp, #180]
   1d6d8:	b	1d78c <rpl_regexec@@Base+0x650>
   1d6dc:	ldr	w2, [sp, #448]
   1d6e0:	sub	x1, x27, #0x1
   1d6e4:	add	x0, sp, #0x120
   1d6e8:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   1d6ec:	ldr	w21, [sp, #180]
   1d6f0:	tbnz	w0, #0, 1d788 <rpl_regexec@@Base+0x64c>
   1d6f4:	mov	w3, w0
   1d6f8:	cbz	w0, 1d78c <rpl_regexec@@Base+0x650>
   1d6fc:	tbz	w3, #1, 1e7b0 <rpl_regexec@@Base+0x1674>
   1d700:	tbz	w3, #2, 1e7b0 <rpl_regexec@@Base+0x1674>
   1d704:	ldr	x28, [x19, #96]
   1d708:	b	1d78c <rpl_regexec@@Base+0x650>
   1d70c:	ldr	x8, [sp, #328]
   1d710:	ldr	x10, [sp, #344]
   1d714:	sub	x9, x26, x8
   1d718:	cmp	x9, x10
   1d71c:	b.cs	1d764 <rpl_regexec@@Base+0x628>  // b.hs, b.nlast
   1d720:	cmp	x26, x19
   1d724:	b.ge	1d734 <rpl_regexec@@Base+0x5f8>  // b.tcont
   1d728:	ldr	x10, [sp, #296]
   1d72c:	ldrb	w9, [x10, x9]
   1d730:	b	1d738 <rpl_regexec@@Base+0x5fc>
   1d734:	mov	x9, xzr
   1d738:	ldrb	w9, [x22, x9]
   1d73c:	cbnz	w9, 1d67c <rpl_regexec@@Base+0x540>
   1d740:	ldr	x9, [sp, #280]
   1d744:	mov	w28, #0x1                   	// #1
   1d748:	add	x26, x26, x9
   1d74c:	cmp	x26, x27
   1d750:	stur	x26, [x29, #-208]
   1d754:	b.lt	1eacc <rpl_regexec@@Base+0x1990>  // b.tstop
   1d758:	cmp	x26, x24
   1d75c:	b.le	1d710 <rpl_regexec@@Base+0x5d4>
   1d760:	b	1eacc <rpl_regexec@@Base+0x1990>
   1d764:	ldr	w2, [sp, #276]
   1d768:	add	x0, sp, #0x120
   1d76c:	mov	x1, x26
   1d770:	bl	23a7c <rpl_re_set_registers@@Base+0x49c8>
   1d774:	cbnz	w0, 1eb28 <rpl_regexec@@Base+0x19ec>
   1d778:	ldur	x26, [x29, #-208]
   1d77c:	ldr	x8, [sp, #328]
   1d780:	sub	x9, x26, x8
   1d784:	b	1d720 <rpl_regexec@@Base+0x5e4>
   1d788:	ldr	x28, [x19, #80]
   1d78c:	cbz	x28, 1eb30 <rpl_regexec@@Base+0x19f4>
   1d790:	ldr	x8, [sp, #472]
   1d794:	mov	w20, w21
   1d798:	cbz	x8, 1d7ac <rpl_regexec@@Base+0x670>
   1d79c:	str	x28, [x8, x27, lsl #3]
   1d7a0:	ldr	x8, [x19, #152]
   1d7a4:	mov	w20, w21
   1d7a8:	cbnz	x8, 1e808 <rpl_regexec@@Base+0x16cc>
   1d7ac:	ldrsb	w25, [x28, #104]
   1d7b0:	tbnz	w25, #4, 1e7e8 <rpl_regexec@@Base+0x16ac>
   1d7b4:	mov	x8, #0xffffffffffffffff    	// #-1
   1d7b8:	str	xzr, [sp, #184]
   1d7bc:	str	x8, [sp, #264]
   1d7c0:	ldr	x8, [sp, #392]
   1d7c4:	ldr	x19, [sp, #360]
   1d7c8:	cmp	x8, x19
   1d7cc:	b.le	1e520 <rpl_regexec@@Base+0x13e4>
   1d7d0:	ldr	x8, [sp, #160]
   1d7d4:	str	x8, [sp, #232]
   1d7d8:	ldr	x9, [sp, #352]
   1d7dc:	ldr	x8, [sp, #376]
   1d7e0:	add	x21, x19, #0x1
   1d7e4:	mov	x26, x28
   1d7e8:	cmp	x21, x9
   1d7ec:	b.lt	1d7f8 <rpl_regexec@@Base+0x6bc>  // b.tstop
   1d7f0:	cmp	x9, x8
   1d7f4:	b.lt	1d940 <rpl_regexec@@Base+0x804>  // b.tstop
   1d7f8:	ldr	x9, [sp, #336]
   1d7fc:	cmp	x21, x9
   1d800:	b.lt	1d80c <rpl_regexec@@Base+0x6d0>  // b.tstop
   1d804:	cmp	x9, x8
   1d808:	b.lt	1d940 <rpl_regexec@@Base+0x804>  // b.tstop
   1d80c:	tbnz	w25, #5, 1d95c <rpl_regexec@@Base+0x820>
   1d810:	ldr	x8, [sp, #360]
   1d814:	ldr	x9, [sp, #296]
   1d818:	mov	x25, x26
   1d81c:	add	x10, x8, #0x1
   1d820:	str	x10, [sp, #360]
   1d824:	ldrb	w19, [x9, x8]
   1d828:	ldr	x0, [x25, #88]!
   1d82c:	cbz	x0, 1dbac <rpl_regexec@@Base+0xa70>
   1d830:	ldr	x28, [x0, x19, lsl #3]
   1d834:	ldr	x8, [sp, #472]
   1d838:	cbz	x8, 1d850 <rpl_regexec@@Base+0x714>
   1d83c:	sub	x0, x29, #0xc4
   1d840:	add	x1, sp, #0x120
   1d844:	mov	x2, x28
   1d848:	bl	2508c <rpl_re_set_registers@@Base+0x5fd8>
   1d84c:	mov	x28, x0
   1d850:	cbz	x28, 1d874 <rpl_regexec@@Base+0x738>
   1d854:	ldrsb	w25, [x28, #104]
   1d858:	cmp	x26, x28
   1d85c:	cset	w26, eq  // eq = none
   1d860:	tst	w20, w26
   1d864:	csel	x27, x21, x27, ne  // ne = any
   1d868:	tbnz	w25, #4, 1d8f0 <rpl_regexec@@Base+0x7b4>
   1d86c:	ldr	x19, [sp, #360]
   1d870:	b	1d924 <rpl_regexec@@Base+0x7e8>
   1d874:	ldur	w8, [x29, #-196]
   1d878:	ldr	x25, [sp, #240]
   1d87c:	cbnz	w8, 1eb68 <rpl_regexec@@Base+0x1a2c>
   1d880:	ldr	x8, [sp, #184]
   1d884:	ldr	w9, [sp, #156]
   1d888:	cmp	x8, #0x0
   1d88c:	cset	w8, ne  // ne = any
   1d890:	bic	w8, w8, w9
   1d894:	tbnz	w8, #0, 1e528 <rpl_regexec@@Base+0x13ec>
   1d898:	ldr	x10, [sp, #472]
   1d89c:	cbz	x10, 1e528 <rpl_regexec@@Base+0x13ec>
   1d8a0:	ldr	x8, [sp, #480]
   1d8a4:	ldr	x9, [sp, #360]
   1d8a8:	add	x10, x10, #0x8
   1d8ac:	cmp	x9, x8
   1d8b0:	b.ge	1e528 <rpl_regexec@@Base+0x13ec>  // b.tcont
   1d8b4:	add	x11, x9, #0x1
   1d8b8:	str	x11, [sp, #360]
   1d8bc:	ldr	x12, [x10, x9, lsl #3]
   1d8c0:	mov	x9, x11
   1d8c4:	cbz	x12, 1d8ac <rpl_regexec@@Base+0x770>
   1d8c8:	sub	x0, x29, #0xc4
   1d8cc:	add	x1, sp, #0x120
   1d8d0:	mov	x2, xzr
   1d8d4:	bl	2508c <rpl_re_set_registers@@Base+0x5fd8>
   1d8d8:	mov	x28, x0
   1d8dc:	cbnz	x0, 1d938 <rpl_regexec@@Base+0x7fc>
   1d8e0:	ldur	w8, [x29, #-196]
   1d8e4:	cbnz	w8, 1d938 <rpl_regexec@@Base+0x7fc>
   1d8e8:	ldr	x10, [sp, #472]
   1d8ec:	b	1d8a0 <rpl_regexec@@Base+0x764>
   1d8f0:	ldr	x19, [sp, #360]
   1d8f4:	tbz	w25, #31, 1d90c <rpl_regexec@@Base+0x7d0>
   1d8f8:	add	x0, sp, #0x120
   1d8fc:	mov	x1, x28
   1d900:	mov	x2, x19
   1d904:	bl	240d0 <rpl_re_set_registers@@Base+0x501c>
   1d908:	cbz	x0, 1d924 <rpl_regexec@@Base+0x7e8>
   1d90c:	ldr	w8, [sp, #156]
   1d910:	cbz	w8, 1e7d8 <rpl_regexec@@Base+0x169c>
   1d914:	mov	w8, #0x1                   	// #1
   1d918:	str	xzr, [sp, #232]
   1d91c:	str	x19, [sp, #264]
   1d920:	str	x8, [sp, #184]
   1d924:	ldr	x8, [sp, #392]
   1d928:	and	w20, w20, w26
   1d92c:	cmp	x8, x19
   1d930:	b.gt	1d7d8 <rpl_regexec@@Base+0x69c>
   1d934:	b	1e528 <rpl_regexec@@Base+0x13ec>
   1d938:	cbnz	x28, 1d854 <rpl_regexec@@Base+0x718>
   1d93c:	b	1e528 <rpl_regexec@@Base+0x13ec>
   1d940:	add	w1, w19, #0x2
   1d944:	add	x0, sp, #0x120
   1d948:	bl	24fc4 <rpl_re_set_registers@@Base+0x5f10>
   1d94c:	stur	w0, [x29, #-196]
   1d950:	cbnz	w0, 1eb70 <rpl_regexec@@Base+0x1a34>
   1d954:	ldrb	w25, [x26, #104]
   1d958:	tbz	w25, #5, 1d810 <rpl_regexec@@Base+0x6d4>
   1d95c:	ldr	x8, [x26, #16]
   1d960:	cmp	x8, #0x1
   1d964:	b.lt	1dac0 <rpl_regexec@@Base+0x984>  // b.tstop
   1d968:	ldr	x8, [sp, #440]
   1d96c:	mov	x25, xzr
   1d970:	stp	x26, x8, [sp, #96]
   1d974:	ldr	x8, [x26, #24]
   1d978:	ldr	x19, [x8, x25, lsl #3]
   1d97c:	ldr	x8, [sp, #104]
   1d980:	ldr	x8, [x8]
   1d984:	add	x8, x8, x19, lsl #4
   1d988:	ldr	w26, [x8, #8]
   1d98c:	tbz	w26, #20, 1daac <rpl_regexec@@Base+0x970>
   1d990:	ldr	x28, [sp, #360]
   1d994:	tst	w26, #0x3ff00
   1d998:	b.eq	1d9d0 <rpl_regexec@@Base+0x894>  // b.none
   1d99c:	ldr	w2, [sp, #448]
   1d9a0:	add	x0, sp, #0x120
   1d9a4:	mov	x1, x28
   1d9a8:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   1d9ac:	and	w8, w0, #0x1
   1d9b0:	tbz	w26, #10, 1d9b8 <rpl_regexec@@Base+0x87c>
   1d9b4:	cbz	w8, 1daac <rpl_regexec@@Base+0x970>
   1d9b8:	tbz	w26, #11, 1d9c0 <rpl_regexec@@Base+0x884>
   1d9bc:	cbnz	w8, 1daac <rpl_regexec@@Base+0x970>
   1d9c0:	tbz	w26, #13, 1d9c8 <rpl_regexec@@Base+0x88c>
   1d9c4:	tbz	w0, #1, 1daac <rpl_regexec@@Base+0x970>
   1d9c8:	tbz	w26, #15, 1d9d0 <rpl_regexec@@Base+0x894>
   1d9cc:	tbz	w0, #3, 1daac <rpl_regexec@@Base+0x970>
   1d9d0:	ldr	x0, [sp, #104]
   1d9d4:	add	x2, sp, #0x120
   1d9d8:	mov	x1, x19
   1d9dc:	mov	x3, x28
   1d9e0:	bl	26194 <rpl_re_set_registers@@Base+0x70e0>
   1d9e4:	cbz	w0, 1daac <rpl_regexec@@Base+0x970>
   1d9e8:	ldr	x8, [sp, #360]
   1d9ec:	ldr	w9, [sp, #512]
   1d9f0:	add	x28, x8, w0, sxtw
   1d9f4:	cmp	w9, w0
   1d9f8:	csel	w8, w0, w9, lt  // lt = tstop
   1d9fc:	add	x0, sp, #0x120
   1da00:	mov	x1, x28
   1da04:	str	w8, [sp, #512]
   1da08:	bl	25400 <rpl_re_set_registers@@Base+0x634c>
   1da0c:	stur	w0, [x29, #-96]
   1da10:	cbnz	w0, 1dac8 <rpl_regexec@@Base+0x98c>
   1da14:	ldr	x10, [sp, #104]
   1da18:	ldr	x9, [sp, #472]
   1da1c:	ldr	x8, [x10, #24]
   1da20:	ldr	x10, [x10, #48]
   1da24:	ldr	x8, [x8, x19, lsl #3]
   1da28:	ldr	x19, [x9, x28, lsl #3]
   1da2c:	mov	w9, #0x18                  	// #24
   1da30:	madd	x2, x8, x9, x10
   1da34:	cbz	x19, 1da50 <rpl_regexec@@Base+0x914>
   1da38:	ldr	x1, [x19, #80]
   1da3c:	sub	x0, x29, #0x40
   1da40:	bl	251d4 <rpl_re_set_registers@@Base+0x6120>
   1da44:	stur	w0, [x29, #-96]
   1da48:	cbz	w0, 1da60 <rpl_regexec@@Base+0x924>
   1da4c:	b	1dac8 <rpl_regexec@@Base+0x98c>
   1da50:	ldr	x8, [x2, #16]
   1da54:	ldr	q0, [x2]
   1da58:	stur	x8, [x29, #-48]
   1da5c:	stur	q0, [x29, #-64]
   1da60:	ldr	w2, [sp, #448]
   1da64:	sub	x1, x28, #0x1
   1da68:	add	x0, sp, #0x120
   1da6c:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   1da70:	ldr	x1, [sp, #104]
   1da74:	mov	w3, w0
   1da78:	sub	x0, x29, #0x60
   1da7c:	sub	x2, x29, #0x40
   1da80:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1da84:	ldr	x8, [sp, #472]
   1da88:	str	x0, [x8, x28, lsl #3]
   1da8c:	cbz	x19, 1da98 <rpl_regexec@@Base+0x95c>
   1da90:	ldur	x0, [x29, #-48]
   1da94:	bl	aaa0 <free@plt>
   1da98:	ldr	x8, [sp, #472]
   1da9c:	ldr	x8, [x8, x28, lsl #3]
   1daa0:	cbnz	x8, 1daac <rpl_regexec@@Base+0x970>
   1daa4:	ldur	w0, [x29, #-96]
   1daa8:	cbnz	w0, 1dac8 <rpl_regexec@@Base+0x98c>
   1daac:	ldr	x26, [sp, #96]
   1dab0:	add	x25, x25, #0x1
   1dab4:	ldr	x8, [x26, #16]
   1dab8:	cmp	x25, x8
   1dabc:	b.lt	1d974 <rpl_regexec@@Base+0x838>  // b.tstop
   1dac0:	stur	wzr, [x29, #-196]
   1dac4:	b	1d810 <rpl_regexec@@Base+0x6d4>
   1dac8:	mov	x28, xzr
   1dacc:	stur	w0, [x29, #-196]
   1dad0:	b	1e4b4 <rpl_regexec@@Base+0x1378>
   1dad4:	ldr	x26, [sp, #104]
   1dad8:	cmp	x26, #0x1
   1dadc:	b.lt	1daf8 <rpl_regexec@@Base+0x9bc>  // b.tstop
   1dae0:	ldr	x8, [sp, #72]
   1dae4:	add	x28, x8, #0x10
   1dae8:	ldr	x0, [x28], #24
   1daec:	bl	aaa0 <free@plt>
   1daf0:	subs	x26, x26, #0x1
   1daf4:	b.ne	1dae8 <rpl_regexec@@Base+0x9ac>  // b.any
   1daf8:	mov	x8, #0xffffffffffffffff    	// #-1
   1dafc:	str	x8, [sp, #104]
   1db00:	b	1e40c <rpl_regexec@@Base+0x12d0>
   1db04:	stp	xzr, xzr, [x28]
   1db08:	b	1dad8 <rpl_regexec@@Base+0x99c>
   1db0c:	mov	w0, #0x8                   	// #8
   1db10:	mov	w1, #0x200                 	// #512
   1db14:	bl	a7f0 <calloc@plt>
   1db18:	ldr	x8, [sp, #96]
   1db1c:	str	x0, [x8, #96]
   1db20:	cbz	x0, 1e4c0 <rpl_regexec@@Base+0x1384>
   1db24:	ldr	x10, [sp, #32]
   1db28:	ldr	x11, [sp, #56]
   1db2c:	mov	x8, xzr
   1db30:	mov	x9, xzr
   1db34:	sub	x10, x10, #0x8
   1db38:	ldr	x12, [x26, x9, lsl #3]
   1db3c:	cbz	x12, 1db94 <rpl_regexec@@Base+0xa58>
   1db40:	mov	x13, x8
   1db44:	mov	w14, #0x1                   	// #1
   1db48:	tbnz	w12, #0, 1db60 <rpl_regexec@@Base+0xa24>
   1db4c:	lsl	x14, x14, #1
   1db50:	lsr	x12, x12, #1
   1db54:	add	x13, x13, #0x1
   1db58:	cbnz	x12, 1db48 <rpl_regexec@@Base+0xa0c>
   1db5c:	b	1db94 <rpl_regexec@@Base+0xa58>
   1db60:	mov	x16, x11
   1db64:	mov	x15, x10
   1db68:	ldr	x17, [x16], #32
   1db6c:	add	x15, x15, #0x8
   1db70:	tst	x17, x14
   1db74:	b.eq	1db68 <rpl_regexec@@Base+0xa2c>  // b.none
   1db78:	ldr	x17, [sp, #104]
   1db7c:	ldr	x16, [x15]
   1db80:	ldr	x15, [x15, x17, lsl #3]
   1db84:	add	x17, x0, x13, lsl #3
   1db88:	str	x16, [x17]
   1db8c:	str	x15, [x17, #2048]
   1db90:	b	1db4c <rpl_regexec@@Base+0xa10>
   1db94:	add	x9, x9, #0x1
   1db98:	add	x8, x8, #0x40
   1db9c:	cmp	x9, #0x4
   1dba0:	add	x11, x11, #0x8
   1dba4:	b.ne	1db38 <rpl_regexec@@Base+0x9fc>  // b.any
   1dba8:	b	1e3cc <rpl_regexec@@Base+0x1290>
   1dbac:	str	x26, [sp, #96]
   1dbb0:	ldr	x26, [x26, #96]
   1dbb4:	cbnz	x26, 1e494 <rpl_regexec@@Base+0x1358>
   1dbb8:	ldr	x8, [sp, #440]
   1dbbc:	mov	w0, #0x3800                	// #14336
   1dbc0:	str	x8, [sp, #88]
   1dbc4:	bl	a660 <malloc@plt>
   1dbc8:	str	x0, [sp, #72]
   1dbcc:	cbz	x0, 1e504 <rpl_regexec@@Base+0x13c8>
   1dbd0:	stp	xzr, xzr, [x25]
   1dbd4:	ldr	x8, [sp, #96]
   1dbd8:	movi	v0.2d, #0x0
   1dbdc:	stp	q0, q0, [x29, #-64]
   1dbe0:	ldr	x8, [x8, #16]
   1dbe4:	cmp	x8, #0x1
   1dbe8:	b.lt	1e408 <rpl_regexec@@Base+0x12cc>  // b.tstop
   1dbec:	ldr	x9, [sp, #72]
   1dbf0:	mov	w8, #0x1800                	// #6144
   1dbf4:	str	xzr, [sp, #104]
   1dbf8:	add	x8, x9, x8
   1dbfc:	stp	x8, xzr, [sp, #56]
   1dc00:	ldr	x8, [sp, #88]
   1dc04:	add	x8, x8, #0xb8
   1dc08:	str	x8, [sp, #16]
   1dc0c:	ldp	x9, x8, [sp, #88]
   1dc10:	ldr	x10, [sp, #64]
   1dc14:	ldr	x8, [x8, #24]
   1dc18:	ldr	x9, [x9]
   1dc1c:	ldr	x8, [x8, x10, lsl #3]
   1dc20:	add	x8, x9, x8, lsl #4
   1dc24:	str	x8, [sp, #24]
   1dc28:	ldr	w8, [x8, #8]
   1dc2c:	and	w9, w8, #0xff
   1dc30:	cmp	w9, #0x1
   1dc34:	str	w9, [sp, #84]
   1dc38:	b.ne	1dcf8 <rpl_regexec@@Base+0xbbc>  // b.any
   1dc3c:	ldr	x9, [sp, #24]
   1dc40:	sub	x12, x29, #0x40
   1dc44:	mov	w13, #0x1                   	// #1
   1dc48:	ldrb	w9, [x9]
   1dc4c:	lsr	x10, x9, #3
   1dc50:	and	x10, x10, #0x18
   1dc54:	ldr	x11, [x12, x10]
   1dc58:	lsl	x9, x13, x9
   1dc5c:	orr	x9, x9, x11
   1dc60:	str	x9, [x12, x10]
   1dc64:	and	w9, w8, #0x3ff00
   1dc68:	cbz	w9, 1dee0 <rpl_regexec@@Base+0xda4>
   1dc6c:	tbz	w8, #13, 1dc88 <rpl_regexec@@Base+0xb4c>
   1dc70:	ldur	x9, [x29, #-64]
   1dc74:	movi	v0.2d, #0x0
   1dc78:	stp	q0, q0, [x29, #-64]
   1dc7c:	tbz	w9, #10, 1e0c4 <rpl_regexec@@Base+0xf88>
   1dc80:	mov	w9, #0x400                 	// #1024
   1dc84:	stur	x9, [x29, #-64]
   1dc88:	tbnz	w8, #15, 1e0bc <rpl_regexec@@Base+0xf80>
   1dc8c:	tbz	w8, #10, 1de38 <rpl_regexec@@Base+0xcfc>
   1dc90:	mov	w9, #0xff                  	// #255
   1dc94:	movk	w9, #0x40, lsl #16
   1dc98:	and	w9, w8, w9
   1dc9c:	cmp	w9, #0x1
   1dca0:	b.eq	1e0bc <rpl_regexec@@Base+0xf80>  // b.none
   1dca4:	ldr	x9, [sp, #88]
   1dca8:	ldr	w9, [x9, #180]
   1dcac:	cmp	w9, #0x1
   1dcb0:	b.le	1ddf8 <rpl_regexec@@Base+0xcbc>
   1dcb4:	ldr	x10, [sp, #88]
   1dcb8:	mov	x9, xzr
   1dcbc:	movi	v0.2d, #0x0
   1dcc0:	ldr	x10, [x10, #120]
   1dcc4:	ldr	x11, [sp, #16]
   1dcc8:	ldr	q2, [x10, x9]
   1dccc:	ldr	q1, [x11, x9]
   1dcd0:	sub	x11, x29, #0x40
   1dcd4:	ldr	q3, [x11, x9]
   1dcd8:	orn	v1.16b, v1.16b, v2.16b
   1dcdc:	and	v1.16b, v3.16b, v1.16b
   1dce0:	str	q1, [x11, x9]
   1dce4:	add	x9, x9, #0x10
   1dce8:	cmp	x9, #0x20
   1dcec:	orr	v0.16b, v1.16b, v0.16b
   1dcf0:	b.ne	1dcc4 <rpl_regexec@@Base+0xb88>  // b.any
   1dcf4:	b	1de28 <rpl_regexec@@Base+0xcec>
   1dcf8:	ldr	w9, [sp, #84]
   1dcfc:	cmp	w9, #0x7
   1dd00:	b.eq	1dd8c <rpl_regexec@@Base+0xc50>  // b.none
   1dd04:	ldr	w9, [sp, #84]
   1dd08:	cmp	w9, #0x5
   1dd0c:	b.eq	1dd4c <rpl_regexec@@Base+0xc10>  // b.none
   1dd10:	ldr	w9, [sp, #84]
   1dd14:	cmp	w9, #0x3
   1dd18:	b.ne	1e0c4 <rpl_regexec@@Base+0xf88>  // b.any
   1dd1c:	ldr	x9, [sp, #24]
   1dd20:	mov	x10, xzr
   1dd24:	ldr	x9, [x9]
   1dd28:	sub	x11, x29, #0x40
   1dd2c:	ldr	q0, [x9, x10]
   1dd30:	ldr	q1, [x11, x10]
   1dd34:	orr	v0.16b, v1.16b, v0.16b
   1dd38:	str	q0, [x11, x10]
   1dd3c:	add	x10, x10, #0x10
   1dd40:	cmp	x10, #0x20
   1dd44:	b.ne	1dd28 <rpl_regexec@@Base+0xbec>  // b.any
   1dd48:	b	1dc64 <rpl_regexec@@Base+0xb28>
   1dd4c:	ldr	x9, [sp, #88]
   1dd50:	ldr	w9, [x9, #180]
   1dd54:	cmp	w9, #0x2
   1dd58:	b.lt	1ddc4 <rpl_regexec@@Base+0xc88>  // b.tstop
   1dd5c:	ldr	x9, [sp, #88]
   1dd60:	mov	x10, xzr
   1dd64:	ldr	x9, [x9, #120]
   1dd68:	sub	x11, x29, #0x40
   1dd6c:	ldr	q0, [x9, x10]
   1dd70:	ldr	q1, [x11, x10]
   1dd74:	orr	v0.16b, v1.16b, v0.16b
   1dd78:	str	q0, [x11, x10]
   1dd7c:	add	x10, x10, #0x10
   1dd80:	cmp	x10, #0x20
   1dd84:	b.ne	1dd68 <rpl_regexec@@Base+0xc2c>  // b.any
   1dd88:	b	1ddcc <rpl_regexec@@Base+0xc90>
   1dd8c:	mov	x9, #0xffffffffffffffff    	// #-1
   1dd90:	stp	x9, x9, [x29, #-64]
   1dd94:	ldr	x9, [sp, #88]
   1dd98:	ldr	x9, [x9, #216]
   1dd9c:	tbz	w9, #6, 1dda4 <rpl_regexec@@Base+0xc68>
   1dda0:	tbz	w9, #7, 1dc64 <rpl_regexec@@Base+0xb28>
   1dda4:	tst	x9, #0x40
   1dda8:	mov	x10, #0xfffffffffffffffe    	// #-2
   1ddac:	mov	x11, #0xfffffffffffffbfe    	// #-1026
   1ddb0:	csel	x10, x11, x10, eq  // eq = none
   1ddb4:	tst	x9, #0x80
   1ddb8:	mov	x9, #0xfffffffffffffbff    	// #-1025
   1ddbc:	csel	x9, x9, x10, eq  // eq = none
   1ddc0:	b	1ddf0 <rpl_regexec@@Base+0xcb4>
   1ddc4:	movi	v0.2d, #0xffffffffffffffff
   1ddc8:	stp	q0, q0, [x29, #-64]
   1ddcc:	ldr	x9, [sp, #88]
   1ddd0:	ldr	x9, [x9, #216]
   1ddd4:	tbnz	w9, #6, 1dde4 <rpl_regexec@@Base+0xca8>
   1ddd8:	ldur	x10, [x29, #-64]
   1dddc:	and	x10, x10, #0xfffffffffffffbff
   1dde0:	stur	x10, [x29, #-64]
   1dde4:	tbz	w9, #7, 1dc64 <rpl_regexec@@Base+0xb28>
   1dde8:	ldur	x9, [x29, #-64]
   1ddec:	and	x9, x9, #0xfffffffffffffffe
   1ddf0:	stur	x9, [x29, #-64]
   1ddf4:	b	1dc64 <rpl_regexec@@Base+0xb28>
   1ddf8:	mov	x9, xzr
   1ddfc:	movi	v0.2d, #0x0
   1de00:	ldr	x10, [sp, #16]
   1de04:	ldr	q1, [x10, x9]
   1de08:	sub	x10, x29, #0x40
   1de0c:	ldr	q2, [x10, x9]
   1de10:	and	v1.16b, v2.16b, v1.16b
   1de14:	str	q1, [x10, x9]
   1de18:	add	x9, x9, #0x10
   1de1c:	cmp	x9, #0x20
   1de20:	orr	v0.16b, v1.16b, v0.16b
   1de24:	b.ne	1de00 <rpl_regexec@@Base+0xcc4>  // b.any
   1de28:	dup	v1.2d, v0.d[1]
   1de2c:	orr	v0.16b, v0.16b, v1.16b
   1de30:	fmov	x9, d0
   1de34:	cbz	x9, 1e0c4 <rpl_regexec@@Base+0xf88>
   1de38:	tbz	w8, #11, 1dee0 <rpl_regexec@@Base+0xda4>
   1de3c:	tbz	w8, #22, 1de4c <rpl_regexec@@Base+0xd10>
   1de40:	ldr	w8, [sp, #84]
   1de44:	cmp	w8, #0x1
   1de48:	b.eq	1e0bc <rpl_regexec@@Base+0xf80>  // b.none
   1de4c:	ldr	x8, [sp, #88]
   1de50:	ldr	w8, [x8, #180]
   1de54:	cmp	w8, #0x1
   1de58:	b.le	1dea0 <rpl_regexec@@Base+0xd64>
   1de5c:	ldr	x9, [sp, #88]
   1de60:	mov	x8, xzr
   1de64:	movi	v0.2d, #0x0
   1de68:	ldr	x9, [x9, #120]
   1de6c:	ldr	x10, [sp, #16]
   1de70:	ldr	q2, [x9, x8]
   1de74:	ldr	q1, [x10, x8]
   1de78:	sub	x10, x29, #0x40
   1de7c:	ldr	q3, [x10, x8]
   1de80:	and	v1.16b, v2.16b, v1.16b
   1de84:	bic	v1.16b, v3.16b, v1.16b
   1de88:	str	q1, [x10, x8]
   1de8c:	add	x8, x8, #0x10
   1de90:	cmp	x8, #0x20
   1de94:	orr	v0.16b, v1.16b, v0.16b
   1de98:	b.ne	1de6c <rpl_regexec@@Base+0xd30>  // b.any
   1de9c:	b	1ded0 <rpl_regexec@@Base+0xd94>
   1dea0:	mov	x8, xzr
   1dea4:	movi	v0.2d, #0x0
   1dea8:	ldr	x9, [sp, #16]
   1deac:	ldr	q1, [x9, x8]
   1deb0:	sub	x9, x29, #0x40
   1deb4:	ldr	q2, [x9, x8]
   1deb8:	bic	v1.16b, v2.16b, v1.16b
   1debc:	str	q1, [x9, x8]
   1dec0:	add	x8, x8, #0x10
   1dec4:	cmp	x8, #0x20
   1dec8:	orr	v0.16b, v1.16b, v0.16b
   1decc:	b.ne	1dea8 <rpl_regexec@@Base+0xd6c>  // b.any
   1ded0:	dup	v1.2d, v0.d[1]
   1ded4:	orr	v0.16b, v0.16b, v1.16b
   1ded8:	fmov	x8, d0
   1dedc:	cbz	x8, 1e0c4 <rpl_regexec@@Base+0xf88>
   1dee0:	ldr	x8, [sp, #104]
   1dee4:	cmp	x8, #0x1
   1dee8:	b.lt	1e054 <rpl_regexec@@Base+0xf18>  // b.tstop
   1deec:	ldr	x28, [sp, #56]
   1def0:	mov	x26, xzr
   1def4:	ldr	w8, [sp, #84]
   1def8:	cmp	w8, #0x1
   1defc:	b.ne	1df24 <rpl_regexec@@Base+0xde8>  // b.any
   1df00:	ldr	x8, [sp, #24]
   1df04:	ldr	x10, [sp, #56]
   1df08:	ldrb	w8, [x8]
   1df0c:	add	x10, x10, x26, lsl #5
   1df10:	lsr	x9, x8, #3
   1df14:	and	x9, x9, #0x18
   1df18:	ldr	x9, [x10, x9]
   1df1c:	lsr	x8, x9, x8
   1df20:	tbz	w8, #0, 1e034 <rpl_regexec@@Base+0xef8>
   1df24:	mov	x8, xzr
   1df28:	movi	v0.2d, #0x0
   1df2c:	sub	x9, x29, #0x40
   1df30:	sub	x10, x29, #0x60
   1df34:	ldr	q1, [x9, x8]
   1df38:	ldr	q2, [x28, x8]
   1df3c:	and	v1.16b, v2.16b, v1.16b
   1df40:	str	q1, [x10, x8]
   1df44:	add	x8, x8, #0x10
   1df48:	cmp	x8, #0x20
   1df4c:	orr	v0.16b, v1.16b, v0.16b
   1df50:	b.ne	1df34 <rpl_regexec@@Base+0xdf8>  // b.any
   1df54:	dup	v1.2d, v0.d[1]
   1df58:	orr	v0.16b, v0.16b, v1.16b
   1df5c:	fmov	x8, d0
   1df60:	cbz	x8, 1e034 <rpl_regexec@@Base+0xef8>
   1df64:	mov	x8, xzr
   1df68:	movi	v4.2d, #0x0
   1df6c:	movi	v0.2d, #0x0
   1df70:	sub	x9, x29, #0x40
   1df74:	sub	x10, x29, #0x80
   1df78:	ldr	q1, [x9, x8]
   1df7c:	ldr	q2, [x28, x8]
   1df80:	bic	v3.16b, v2.16b, v1.16b
   1df84:	bic	v1.16b, v1.16b, v2.16b
   1df88:	str	q3, [x10, x8]
   1df8c:	str	q1, [x9, x8]
   1df90:	add	x8, x8, #0x10
   1df94:	orr	v0.16b, v3.16b, v0.16b
   1df98:	cmp	x8, #0x20
   1df9c:	orr	v4.16b, v1.16b, v4.16b
   1dfa0:	b.ne	1df78 <rpl_regexec@@Base+0xe3c>  // b.any
   1dfa4:	dup	v1.2d, v0.d[1]
   1dfa8:	orr	v0.16b, v0.16b, v1.16b
   1dfac:	fmov	x8, d0
   1dfb0:	str	q4, [sp, #32]
   1dfb4:	cbz	x8, 1dffc <rpl_regexec@@Base+0xec0>
   1dfb8:	ldr	x12, [sp, #104]
   1dfbc:	ldr	x9, [sp, #56]
   1dfc0:	ldr	x11, [sp, #72]
   1dfc4:	ldp	q0, q1, [x29, #-128]
   1dfc8:	ldp	q2, q3, [x29, #-96]
   1dfcc:	mov	w10, #0x18                  	// #24
   1dfd0:	add	x8, x9, x12, lsl #5
   1dfd4:	add	x9, x9, x26, lsl #5
   1dfd8:	madd	x0, x12, x10, x11
   1dfdc:	madd	x1, x26, x10, x11
   1dfe0:	stp	q0, q1, [x8]
   1dfe4:	stp	q2, q3, [x9]
   1dfe8:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   1dfec:	cbnz	w0, 1dad4 <rpl_regexec@@Base+0x998>
   1dff0:	ldr	x8, [sp, #104]
   1dff4:	add	x8, x8, #0x1
   1dff8:	str	x8, [sp, #104]
   1dffc:	ldr	x8, [sp, #96]
   1e000:	ldr	x9, [sp, #64]
   1e004:	ldr	x8, [x8, #24]
   1e008:	ldr	x1, [x8, x9, lsl #3]
   1e00c:	ldr	x9, [sp, #72]
   1e010:	mov	w8, #0x18                  	// #24
   1e014:	madd	x0, x26, x8, x9
   1e018:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   1e01c:	tbz	w0, #0, 1dad4 <rpl_regexec@@Base+0x998>
   1e020:	ldr	q1, [sp, #32]
   1e024:	dup	v0.2d, v1.d[1]
   1e028:	orr	v0.16b, v1.16b, v0.16b
   1e02c:	fmov	x8, d0
   1e030:	cbz	x8, 1e058 <rpl_regexec@@Base+0xf1c>
   1e034:	ldr	x8, [sp, #104]
   1e038:	mov	x9, x26
   1e03c:	add	x9, x26, #0x1
   1e040:	mov	x26, x9
   1e044:	cmp	x9, x8
   1e048:	add	x28, x28, #0x20
   1e04c:	b.lt	1def4 <rpl_regexec@@Base+0xdb8>  // b.tstop
   1e050:	b	1e058 <rpl_regexec@@Base+0xf1c>
   1e054:	mov	x26, xzr
   1e058:	ldr	x8, [sp, #104]
   1e05c:	cmp	x26, x8
   1e060:	b.ne	1e0c4 <rpl_regexec@@Base+0xf88>  // b.any
   1e064:	ldp	x8, x9, [sp, #56]
   1e068:	ldp	q1, q0, [x29, #-64]
   1e06c:	mov	w0, #0x8                   	// #8
   1e070:	add	x8, x8, x26, lsl #5
   1e074:	stp	q1, q0, [x8]
   1e078:	ldr	x8, [sp, #96]
   1e07c:	ldr	x8, [x8, #24]
   1e080:	ldr	x8, [x8, x9, lsl #3]
   1e084:	ldr	x9, [sp, #72]
   1e088:	str	x8, [sp, #104]
   1e08c:	mov	w8, #0x18                  	// #24
   1e090:	madd	x28, x26, x8, x9
   1e094:	mov	w8, #0x1                   	// #1
   1e098:	dup	v0.2d, x8
   1e09c:	str	q0, [x28]
   1e0a0:	bl	a660 <malloc@plt>
   1e0a4:	str	x0, [x28, #16]
   1e0a8:	cbz	x0, 1db04 <rpl_regexec@@Base+0x9c8>
   1e0ac:	ldr	x8, [sp, #104]
   1e0b0:	str	x8, [x0]
   1e0b4:	add	x8, x26, #0x1
   1e0b8:	str	x8, [sp, #104]
   1e0bc:	movi	v0.2d, #0x0
   1e0c0:	stp	q0, q0, [x29, #-64]
   1e0c4:	ldr	x8, [sp, #96]
   1e0c8:	ldr	x9, [sp, #64]
   1e0cc:	ldr	x8, [x8, #16]
   1e0d0:	add	x9, x9, #0x1
   1e0d4:	str	x9, [sp, #64]
   1e0d8:	cmp	x9, x8
   1e0dc:	b.lt	1dc0c <rpl_regexec@@Base+0xad0>  // b.tstop
   1e0e0:	ldr	x8, [sp, #104]
   1e0e4:	cmp	x8, #0x0
   1e0e8:	b.le	1e40c <rpl_regexec@@Base+0x12d0>
   1e0ec:	ldr	x26, [sp, #104]
   1e0f0:	add	x8, x26, #0x1
   1e0f4:	lsl	x0, x8, #3
   1e0f8:	stp	x8, xzr, [x29, #-160]
   1e0fc:	bl	a660 <malloc@plt>
   1e100:	cmp	x0, #0x0
   1e104:	mov	w8, #0xc                   	// #12
   1e108:	csel	w9, w8, wzr, eq  // eq = none
   1e10c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1e110:	movk	x8, #0xa855
   1e114:	movk	x8, #0xaaa, lsl #48
   1e118:	mov	x28, x0
   1e11c:	cmp	x26, x8
   1e120:	stur	x0, [x29, #-144]
   1e124:	str	w9, [sp, #84]
   1e128:	stur	w9, [x29, #-132]
   1e12c:	b.hi	1e514 <rpl_regexec@@Base+0x13d8>  // b.pmore
   1e130:	cbz	x28, 1e514 <rpl_regexec@@Base+0x13d8>
   1e134:	ldr	x8, [sp, #104]
   1e138:	add	x8, x8, x8, lsl #1
   1e13c:	lsl	x0, x8, #3
   1e140:	bl	a660 <malloc@plt>
   1e144:	str	x0, [sp, #32]
   1e148:	cbz	x0, 1e514 <rpl_regexec@@Base+0x13d8>
   1e14c:	ldr	x8, [sp, #104]
   1e150:	ldr	x9, [sp, #32]
   1e154:	movi	v0.2d, #0x0
   1e158:	str	xzr, [sp, #64]
   1e15c:	str	wzr, [sp, #4]
   1e160:	add	x9, x9, x8, lsl #3
   1e164:	add	x8, x9, x8, lsl #3
   1e168:	stp	x8, x9, [sp, #8]
   1e16c:	ldr	x8, [sp, #56]
   1e170:	stp	q0, q0, [x29, #-192]
   1e174:	str	x8, [sp, #24]
   1e178:	ldp	x10, x9, [sp, #64]
   1e17c:	mov	w8, #0x18                  	// #24
   1e180:	stur	xzr, [x29, #-152]
   1e184:	madd	x8, x10, x8, x9
   1e188:	ldr	x26, [x8, #8]
   1e18c:	cmp	x26, #0x1
   1e190:	b.lt	1e1f0 <rpl_regexec@@Base+0x10b4>  // b.tstop
   1e194:	ldp	x10, x9, [sp, #64]
   1e198:	mov	w8, #0x18                  	// #24
   1e19c:	madd	x8, x10, x8, x9
   1e1a0:	ldr	x28, [x8, #16]
   1e1a4:	ldr	x10, [sp, #88]
   1e1a8:	ldr	x8, [x10, #24]
   1e1ac:	ldr	x9, [x28]
   1e1b0:	ldr	x8, [x8, x9, lsl #3]
   1e1b4:	cmn	x8, #0x1
   1e1b8:	b.eq	1e1dc <rpl_regexec@@Base+0x10a0>  // b.none
   1e1bc:	ldr	x9, [x10, #48]
   1e1c0:	mov	w10, #0x18                  	// #24
   1e1c4:	sub	x0, x29, #0xa0
   1e1c8:	madd	x1, x8, x10, x9
   1e1cc:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   1e1d0:	cbnz	w0, 1e4bc <rpl_regexec@@Base+0x1380>
   1e1d4:	ldr	x10, [sp, #88]
   1e1d8:	str	wzr, [sp, #84]
   1e1dc:	subs	x26, x26, #0x1
   1e1e0:	add	x28, x28, #0x8
   1e1e4:	b.ne	1e1a8 <rpl_regexec@@Base+0x106c>  // b.any
   1e1e8:	ldr	w8, [sp, #84]
   1e1ec:	stur	w8, [x29, #-132]
   1e1f0:	ldr	x1, [sp, #88]
   1e1f4:	sub	x0, x29, #0x84
   1e1f8:	sub	x2, x29, #0xa0
   1e1fc:	mov	w3, wzr
   1e200:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1e204:	ldur	w8, [x29, #-132]
   1e208:	ldr	x9, [sp, #64]
   1e20c:	str	w8, [sp, #84]
   1e210:	ldr	x8, [sp, #32]
   1e214:	str	x0, [x8, x9, lsl #3]
   1e218:	cbnz	x0, 1e224 <rpl_regexec@@Base+0x10e8>
   1e21c:	ldr	w8, [sp, #84]
   1e220:	cbnz	w8, 1e4c0 <rpl_regexec@@Base+0x1384>
   1e224:	ldrsb	w8, [x0, #104]
   1e228:	tbnz	w8, #31, 1e248 <rpl_regexec@@Base+0x110c>
   1e22c:	ldp	x10, x8, [sp, #8]
   1e230:	ldr	x9, [sp, #64]
   1e234:	str	x0, [x8, x9, lsl #3]
   1e238:	ldr	x8, [sp, #32]
   1e23c:	ldr	x8, [x8, x9, lsl #3]
   1e240:	str	x8, [x10, x9, lsl #3]
   1e244:	b	1e2d8 <rpl_regexec@@Base+0x119c>
   1e248:	ldr	x1, [sp, #88]
   1e24c:	sub	x0, x29, #0x84
   1e250:	sub	x2, x29, #0xa0
   1e254:	mov	w3, #0x1                   	// #1
   1e258:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1e25c:	ldr	x8, [sp, #16]
   1e260:	ldr	x9, [sp, #64]
   1e264:	str	x0, [x8, x9, lsl #3]
   1e268:	cbnz	x0, 1e274 <rpl_regexec@@Base+0x1138>
   1e26c:	ldur	w8, [x29, #-132]
   1e270:	cbnz	w8, 1e4c0 <rpl_regexec@@Base+0x1384>
   1e274:	ldr	x8, [sp, #32]
   1e278:	ldr	x9, [sp, #64]
   1e27c:	ldr	x8, [x8, x9, lsl #3]
   1e280:	cmp	x8, x0
   1e284:	b.eq	1e2a4 <rpl_regexec@@Base+0x1168>  // b.none
   1e288:	ldr	x8, [sp, #88]
   1e28c:	ldr	w9, [sp, #4]
   1e290:	ldr	w8, [x8, #180]
   1e294:	cmp	w8, #0x1
   1e298:	cset	w8, gt
   1e29c:	orr	w9, w9, w8
   1e2a0:	str	w9, [sp, #4]
   1e2a4:	ldr	x1, [sp, #88]
   1e2a8:	sub	x0, x29, #0x84
   1e2ac:	sub	x2, x29, #0xa0
   1e2b0:	mov	w3, #0x2                   	// #2
   1e2b4:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1e2b8:	ldur	w8, [x29, #-132]
   1e2bc:	ldr	x9, [sp, #8]
   1e2c0:	str	w8, [sp, #84]
   1e2c4:	ldr	x8, [sp, #64]
   1e2c8:	str	x0, [x9, x8, lsl #3]
   1e2cc:	cbnz	x0, 1e2d8 <rpl_regexec@@Base+0x119c>
   1e2d0:	ldr	w8, [sp, #84]
   1e2d4:	cbnz	w8, 1e4c0 <rpl_regexec@@Base+0x1384>
   1e2d8:	ldr	x10, [sp, #24]
   1e2dc:	mov	x8, xzr
   1e2e0:	sub	x9, x29, #0xc0
   1e2e4:	ldr	q0, [x10, x8]
   1e2e8:	ldr	q1, [x9, x8]
   1e2ec:	orr	v0.16b, v1.16b, v0.16b
   1e2f0:	str	q0, [x9, x8]
   1e2f4:	add	x8, x8, #0x10
   1e2f8:	cmp	x8, #0x20
   1e2fc:	b.ne	1e2e4 <rpl_regexec@@Base+0x11a8>  // b.any
   1e300:	ldr	x9, [sp, #64]
   1e304:	ldr	x8, [sp, #104]
   1e308:	sub	x26, x29, #0xc0
   1e30c:	add	x10, x10, #0x20
   1e310:	add	x9, x9, #0x1
   1e314:	cmp	x9, x8
   1e318:	str	x9, [sp, #64]
   1e31c:	str	x10, [sp, #24]
   1e320:	b.ne	1e178 <rpl_regexec@@Base+0x103c>  // b.any
   1e324:	ldr	w8, [sp, #4]
   1e328:	tbnz	w8, #0, 1db0c <rpl_regexec@@Base+0x9d0>
   1e32c:	mov	w0, #0x8                   	// #8
   1e330:	mov	w1, #0x100                 	// #256
   1e334:	bl	a7f0 <calloc@plt>
   1e338:	str	x0, [x25]
   1e33c:	cbz	x0, 1e4c0 <rpl_regexec@@Base+0x1384>
   1e340:	ldr	x10, [sp, #56]
   1e344:	mov	x8, xzr
   1e348:	mov	x9, xzr
   1e34c:	ldr	x11, [x26, x9, lsl #3]
   1e350:	cbz	x11, 1e3b8 <rpl_regexec@@Base+0x127c>
   1e354:	ldr	x12, [sp, #88]
   1e358:	mov	w14, #0x1                   	// #1
   1e35c:	add	x13, x12, x9, lsl #3
   1e360:	mov	x12, x8
   1e364:	add	x13, x13, #0xb8
   1e368:	tbnz	w11, #0, 1e380 <rpl_regexec@@Base+0x1244>
   1e36c:	lsl	x14, x14, #1
   1e370:	lsr	x11, x11, #1
   1e374:	add	x12, x12, #0x1
   1e378:	cbnz	x11, 1e368 <rpl_regexec@@Base+0x122c>
   1e37c:	b	1e3b8 <rpl_regexec@@Base+0x127c>
   1e380:	mov	x15, #0xfffffffffffffff8    	// #-8
   1e384:	mov	x16, x10
   1e388:	ldr	x17, [x16], #32
   1e38c:	add	x15, x15, #0x8
   1e390:	tst	x17, x14
   1e394:	b.eq	1e388 <rpl_regexec@@Base+0x124c>  // b.none
   1e398:	ldr	x16, [x13]
   1e39c:	ldr	x17, [sp, #16]
   1e3a0:	tst	x16, x14
   1e3a4:	ldr	x16, [sp, #32]
   1e3a8:	csel	x16, x16, x17, eq  // eq = none
   1e3ac:	ldr	x15, [x16, x15]
   1e3b0:	str	x15, [x0, x12, lsl #3]
   1e3b4:	b	1e36c <rpl_regexec@@Base+0x1230>
   1e3b8:	add	x9, x9, #0x1
   1e3bc:	add	x8, x8, #0x40
   1e3c0:	cmp	x9, #0x4
   1e3c4:	add	x10, x10, #0x8
   1e3c8:	b.ne	1e34c <rpl_regexec@@Base+0x1210>  // b.any
   1e3cc:	ldurb	w8, [x29, #-191]
   1e3d0:	tbz	w8, #2, 1e448 <rpl_regexec@@Base+0x130c>
   1e3d4:	ldr	x9, [sp, #104]
   1e3d8:	ldr	x8, [sp, #32]
   1e3dc:	add	x8, x8, x9, lsl #4
   1e3e0:	ldr	x10, [sp, #56]
   1e3e4:	ldrb	w10, [x10, #1]
   1e3e8:	tbnz	w10, #2, 1e434 <rpl_regexec@@Base+0x12f8>
   1e3ec:	ldr	x10, [sp, #56]
   1e3f0:	add	x8, x8, #0x8
   1e3f4:	subs	x9, x9, #0x1
   1e3f8:	add	x10, x10, #0x20
   1e3fc:	str	x10, [sp, #56]
   1e400:	b.ne	1e3e0 <rpl_regexec@@Base+0x12a4>  // b.any
   1e404:	b	1e448 <rpl_regexec@@Base+0x130c>
   1e408:	str	xzr, [sp, #104]
   1e40c:	ldr	x0, [sp, #72]
   1e410:	bl	aaa0 <free@plt>
   1e414:	ldr	x8, [sp, #104]
   1e418:	cbnz	x8, 1e504 <rpl_regexec@@Base+0x13c8>
   1e41c:	mov	w0, #0x8                   	// #8
   1e420:	mov	w1, #0x100                 	// #256
   1e424:	bl	a7f0 <calloc@plt>
   1e428:	str	x0, [x25]
   1e42c:	cbnz	x0, 1e488 <rpl_regexec@@Base+0x134c>
   1e430:	b	1e504 <rpl_regexec@@Base+0x13c8>
   1e434:	ldr	x8, [x8]
   1e438:	ldr	w9, [sp, #4]
   1e43c:	str	x8, [x0, #80]
   1e440:	tbz	w9, #0, 1e448 <rpl_regexec@@Base+0x130c>
   1e444:	str	x8, [x0, #2128]
   1e448:	ldr	x0, [sp, #32]
   1e44c:	bl	aaa0 <free@plt>
   1e450:	ldur	x0, [x29, #-144]
   1e454:	bl	aaa0 <free@plt>
   1e458:	mov	w26, #0x10                  	// #16
   1e45c:	ldr	x8, [sp, #72]
   1e460:	ldr	x0, [x8, x26]
   1e464:	bl	aaa0 <free@plt>
   1e468:	ldr	x8, [sp, #104]
   1e46c:	add	x26, x26, #0x18
   1e470:	subs	x8, x8, #0x1
   1e474:	str	x8, [sp, #104]
   1e478:	b.ne	1e45c <rpl_regexec@@Base+0x1320>  // b.any
   1e47c:	ldr	x0, [sp, #72]
   1e480:	bl	aaa0 <free@plt>
   1e484:	ldr	x0, [x25]
   1e488:	ldr	x26, [sp, #96]
   1e48c:	cbnz	x0, 1d830 <rpl_regexec@@Base+0x6f4>
   1e490:	b	1dbac <rpl_regexec@@Base+0xa70>
   1e494:	ldr	x8, [sp, #360]
   1e498:	ldr	w2, [sp, #448]
   1e49c:	add	x0, sp, #0x120
   1e4a0:	sub	x1, x8, #0x1
   1e4a4:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   1e4a8:	ubfiz	w8, w0, #8, #1
   1e4ac:	orr	x8, x8, x19
   1e4b0:	ldr	x28, [x26, x8, lsl #3]
   1e4b4:	ldr	x26, [sp, #96]
   1e4b8:	b	1d834 <rpl_regexec@@Base+0x6f8>
   1e4bc:	stur	w0, [x29, #-132]
   1e4c0:	ldr	x0, [sp, #32]
   1e4c4:	bl	aaa0 <free@plt>
   1e4c8:	ldur	x0, [x29, #-144]
   1e4cc:	bl	aaa0 <free@plt>
   1e4d0:	ldr	x8, [sp, #104]
   1e4d4:	cmp	x8, #0x1
   1e4d8:	b.lt	1e4fc <rpl_regexec@@Base+0x13c0>  // b.tstop
   1e4dc:	ldr	x8, [sp, #72]
   1e4e0:	add	x19, x8, #0x10
   1e4e4:	ldr	x0, [x19], #24
   1e4e8:	bl	aaa0 <free@plt>
   1e4ec:	ldr	x8, [sp, #104]
   1e4f0:	subs	x8, x8, #0x1
   1e4f4:	str	x8, [sp, #104]
   1e4f8:	b.ne	1e4e4 <rpl_regexec@@Base+0x13a8>  // b.any
   1e4fc:	ldr	x0, [sp, #72]
   1e500:	bl	aaa0 <free@plt>
   1e504:	mov	x28, xzr
   1e508:	mov	w8, #0xc                   	// #12
   1e50c:	stur	w8, [x29, #-196]
   1e510:	b	1e4b4 <rpl_regexec@@Base+0x1378>
   1e514:	mov	x0, x28
   1e518:	bl	aaa0 <free@plt>
   1e51c:	b	1e4dc <rpl_regexec@@Base+0x13a0>
   1e520:	ldr	x8, [sp, #160]
   1e524:	str	x8, [sp, #232]
   1e528:	ldr	x9, [sp, #232]
   1e52c:	cbz	x9, 1e53c <rpl_regexec@@Base+0x1400>
   1e530:	ldr	x8, [x9]
   1e534:	add	x8, x8, x27
   1e538:	str	x8, [x9]
   1e53c:	ldr	x25, [sp, #240]
   1e540:	ldp	x19, x28, [sp, #256]
   1e544:	ldr	x20, [sp, #208]
   1e548:	ldr	w21, [sp, #204]
   1e54c:	ldr	x27, [sp, #192]
   1e550:	cmn	x28, #0x1
   1e554:	b.eq	1e6d8 <rpl_regexec@@Base+0x159c>  // b.none
   1e558:	cmn	x28, #0x2
   1e55c:	b.eq	1eb68 <rpl_regexec@@Base+0x1a2c>  // b.none
   1e560:	ldr	x26, [sp, #216]
   1e564:	str	x28, [sp, #456]
   1e568:	cmp	x26, #0x2
   1e56c:	b.cc	1e5ac <rpl_regexec@@Base+0x1470>  // b.lo, b.ul, b.last
   1e570:	ldr	x8, [sp, #224]
   1e574:	ldrb	w8, [x8, #56]
   1e578:	tbnz	w8, #4, 1e5ac <rpl_regexec@@Base+0x1470>
   1e57c:	ldr	x8, [sp, #472]
   1e580:	add	x0, sp, #0x120
   1e584:	mov	x2, x28
   1e588:	ldr	x1, [x8, x28, lsl #3]
   1e58c:	bl	240d0 <rpl_re_set_registers@@Base+0x501c>
   1e590:	str	x0, [sp, #464]
   1e594:	ldrb	w8, [x25, #176]
   1e598:	mov	x20, x0
   1e59c:	tbnz	w8, #0, 1e5d0 <rpl_regexec@@Base+0x1494>
   1e5a0:	ldr	x8, [x25, #152]
   1e5a4:	cbnz	x8, 1e5d0 <rpl_regexec@@Base+0x1494>
   1e5a8:	b	1e928 <rpl_regexec@@Base+0x17ec>
   1e5ac:	ldr	x8, [x25, #152]
   1e5b0:	cbz	x8, 1e928 <rpl_regexec@@Base+0x17ec>
   1e5b4:	ldr	x8, [sp, #472]
   1e5b8:	add	x0, sp, #0x120
   1e5bc:	mov	x2, x28
   1e5c0:	ldr	x1, [x8, x28, lsl #3]
   1e5c4:	bl	240d0 <rpl_re_set_registers@@Base+0x501c>
   1e5c8:	mov	x20, x0
   1e5cc:	str	x0, [sp, #464]
   1e5d0:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
   1e5d4:	cmp	x28, x8
   1e5d8:	b.cs	1eb68 <rpl_regexec@@Base+0x1a2c>  // b.hs, b.nlast
   1e5dc:	ldr	x19, [sp, #440]
   1e5e0:	lsl	x8, x28, #3
   1e5e4:	add	x21, x8, #0x8
   1e5e8:	mov	x0, x21
   1e5ec:	bl	a660 <malloc@plt>
   1e5f0:	mov	x27, x0
   1e5f4:	cbz	x0, 1eb5c <rpl_regexec@@Base+0x1a20>
   1e5f8:	ldr	x8, [x19, #152]
   1e5fc:	str	x28, [sp, #264]
   1e600:	cbz	x8, 1e684 <rpl_regexec@@Base+0x1548>
   1e604:	mov	x0, x21
   1e608:	bl	a660 <malloc@plt>
   1e60c:	cbz	x0, 1eb5c <rpl_regexec@@Base+0x1a20>
   1e610:	add	x21, x28, #0x1
   1e614:	lsl	x2, x21, #3
   1e618:	mov	w1, wzr
   1e61c:	mov	x25, x0
   1e620:	bl	a770 <memset@plt>
   1e624:	ldr	x8, [sp, #144]
   1e628:	add	x0, sp, #0x120
   1e62c:	sub	x1, x29, #0x40
   1e630:	stp	x27, x25, [x29, #-64]
   1e634:	stp	x20, x28, [x29, #-48]
   1e638:	stp	xzr, xzr, [x8, #8]
   1e63c:	str	xzr, [x8]
   1e640:	bl	26590 <rpl_re_set_registers@@Base+0x74dc>
   1e644:	cbnz	w0, 1e8c8 <rpl_regexec@@Base+0x178c>
   1e648:	ldr	x8, [x27]
   1e64c:	cbnz	x8, 1e658 <rpl_regexec@@Base+0x151c>
   1e650:	ldr	x8, [x25]
   1e654:	cbz	x8, 1e708 <rpl_regexec@@Base+0x15cc>
   1e658:	mov	x0, x19
   1e65c:	mov	x1, x27
   1e660:	mov	x2, x25
   1e664:	mov	x3, x21
   1e668:	bl	267dc <rpl_re_set_registers@@Base+0x7728>
   1e66c:	mov	w28, w0
   1e670:	mov	x0, x25
   1e674:	bl	aaa0 <free@plt>
   1e678:	ldr	x26, [sp, #216]
   1e67c:	cbz	w28, 1e910 <rpl_regexec@@Base+0x17d4>
   1e680:	b	1e8bc <rpl_regexec@@Base+0x1780>
   1e684:	ldr	x8, [sp, #144]
   1e688:	add	x0, sp, #0x120
   1e68c:	sub	x1, x29, #0x40
   1e690:	stp	x27, xzr, [x29, #-64]
   1e694:	stp	x20, x28, [x29, #-48]
   1e698:	stp	xzr, xzr, [x8]
   1e69c:	str	xzr, [x8, #16]
   1e6a0:	bl	26590 <rpl_re_set_registers@@Base+0x74dc>
   1e6a4:	cbnz	w0, 1e8b8 <rpl_regexec@@Base+0x177c>
   1e6a8:	ldr	x8, [x27]
   1e6ac:	cbnz	x8, 1e910 <rpl_regexec@@Base+0x17d4>
   1e6b0:	mov	x25, xzr
   1e6b4:	ldr	x20, [sp, #208]
   1e6b8:	mov	x0, x27
   1e6bc:	bl	aaa0 <free@plt>
   1e6c0:	mov	x0, x25
   1e6c4:	bl	aaa0 <free@plt>
   1e6c8:	ldr	x25, [sp, #240]
   1e6cc:	ldr	x19, [sp, #256]
   1e6d0:	ldr	w21, [sp, #204]
   1e6d4:	ldr	x27, [sp, #192]
   1e6d8:	add	x0, sp, #0x120
   1e6dc:	bl	24170 <rpl_re_set_registers@@Base+0x50bc>
   1e6e0:	ldur	x8, [x29, #-208]
   1e6e4:	ldr	x9, [sp, #280]
   1e6e8:	mov	w28, #0x1                   	// #1
   1e6ec:	add	x26, x8, x9
   1e6f0:	cmp	x26, x27
   1e6f4:	stur	x26, [x29, #-208]
   1e6f8:	b.lt	1eacc <rpl_regexec@@Base+0x1990>  // b.tstop
   1e6fc:	cmp	x24, x26
   1e700:	b.ge	1d5b4 <rpl_regexec@@Base+0x478>  // b.tcont
   1e704:	b	1eacc <rpl_regexec@@Base+0x1990>
   1e708:	ldr	x9, [sp, #264]
   1e70c:	cmp	x9, #0x1
   1e710:	b.lt	1e6b4 <rpl_regexec@@Base+0x1578>  // b.tstop
   1e714:	ldr	x8, [sp, #472]
   1e718:	ldr	x20, [sp, #208]
   1e71c:	add	x26, x9, #0x1
   1e720:	lsl	x21, x9, #3
   1e724:	sub	x8, x8, #0x8
   1e728:	ldr	x1, [x8, x21]
   1e72c:	cbz	x1, 1e738 <rpl_regexec@@Base+0x15fc>
   1e730:	ldrb	w9, [x1, #104]
   1e734:	tbnz	w9, #4, 1e74c <rpl_regexec@@Base+0x1610>
   1e738:	sub	x26, x26, #0x1
   1e73c:	cmp	x26, #0x2
   1e740:	sub	x21, x21, #0x8
   1e744:	b.ge	1e728 <rpl_regexec@@Base+0x15ec>  // b.tcont
   1e748:	b	1e6b8 <rpl_regexec@@Base+0x157c>
   1e74c:	sub	x28, x26, #0x2
   1e750:	add	x0, sp, #0x120
   1e754:	mov	x2, x28
   1e758:	bl	240d0 <rpl_re_set_registers@@Base+0x501c>
   1e75c:	mov	x20, x0
   1e760:	mov	x0, x25
   1e764:	mov	w1, wzr
   1e768:	mov	x2, x21
   1e76c:	bl	a770 <memset@plt>
   1e770:	ldr	x8, [sp, #144]
   1e774:	add	x0, sp, #0x120
   1e778:	sub	x1, x29, #0x40
   1e77c:	stp	x27, x25, [x29, #-64]
   1e780:	stp	x20, x28, [x29, #-48]
   1e784:	str	x28, [sp, #264]
   1e788:	stp	xzr, xzr, [x8, #8]
   1e78c:	str	xzr, [x8]
   1e790:	bl	26590 <rpl_re_set_registers@@Base+0x74dc>
   1e794:	cbnz	w0, 1e8c4 <rpl_regexec@@Base+0x1788>
   1e798:	ldr	x8, [x27]
   1e79c:	cbnz	x8, 1e7a8 <rpl_regexec@@Base+0x166c>
   1e7a0:	ldr	x8, [x25]
   1e7a4:	cbz	x8, 1e708 <rpl_regexec@@Base+0x15cc>
   1e7a8:	sub	x21, x26, #0x1
   1e7ac:	b	1e658 <rpl_regexec@@Base+0x151c>
   1e7b0:	tbnz	w3, #1, 1e7d0 <rpl_regexec@@Base+0x1694>
   1e7b4:	tbz	w3, #2, 1d78c <rpl_regexec@@Base+0x650>
   1e7b8:	ldr	x2, [x28, #80]
   1e7bc:	sub	x0, x29, #0xc4
   1e7c0:	mov	x1, x19
   1e7c4:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   1e7c8:	mov	x28, x0
   1e7cc:	b	1d78c <rpl_regexec@@Base+0x650>
   1e7d0:	ldr	x28, [x19, #88]
   1e7d4:	b	1d78c <rpl_regexec@@Base+0x650>
   1e7d8:	ldr	x25, [sp, #240]
   1e7dc:	mov	x28, x19
   1e7e0:	ldr	x19, [sp, #256]
   1e7e4:	b	1e544 <rpl_regexec@@Base+0x1408>
   1e7e8:	ldr	x19, [sp, #256]
   1e7ec:	tbnz	w25, #31, 1e85c <rpl_regexec@@Base+0x1720>
   1e7f0:	ldr	w8, [sp, #156]
   1e7f4:	cbz	w8, 1e890 <rpl_regexec@@Base+0x1754>
   1e7f8:	mov	w8, #0x1                   	// #1
   1e7fc:	str	x27, [sp, #264]
   1e800:	str	x8, [sp, #184]
   1e804:	b	1d7c0 <rpl_regexec@@Base+0x684>
   1e808:	add	x19, x28, #0x8
   1e80c:	add	x0, sp, #0x120
   1e810:	mov	x1, x19
   1e814:	mov	x2, xzr
   1e818:	bl	248b4 <rpl_re_set_registers@@Base+0x5800>
   1e81c:	stur	w0, [x29, #-196]
   1e820:	cbnz	w0, 1e900 <rpl_regexec@@Base+0x17c4>
   1e824:	ldrb	w8, [x28, #104]
   1e828:	tbz	w8, #6, 1e840 <rpl_regexec@@Base+0x1704>
   1e82c:	add	x0, sp, #0x120
   1e830:	mov	x1, x19
   1e834:	bl	249b8 <rpl_re_set_registers@@Base+0x5904>
   1e838:	stur	w0, [x29, #-196]
   1e83c:	cbnz	w0, 1e900 <rpl_regexec@@Base+0x17c4>
   1e840:	mov	w20, wzr
   1e844:	b	1d7ac <rpl_regexec@@Base+0x670>
   1e848:	cmp	x24, x19
   1e84c:	b.ge	1e89c <rpl_regexec@@Base+0x1760>  // b.tcont
   1e850:	ldr	x8, [sp, #248]
   1e854:	ldrb	w8, [x8, x24]
   1e858:	b	1e8a0 <rpl_regexec@@Base+0x1764>
   1e85c:	add	x0, sp, #0x120
   1e860:	mov	x1, x28
   1e864:	mov	x2, x27
   1e868:	bl	240d0 <rpl_re_set_registers@@Base+0x501c>
   1e86c:	ldr	w9, [sp, #156]
   1e870:	cmp	x0, #0x0
   1e874:	cset	w8, ne  // ne = any
   1e878:	str	x8, [sp, #184]
   1e87c:	cset	w8, eq  // eq = none
   1e880:	orr	w8, w9, w8
   1e884:	csinv	x9, x27, xzr, ne  // ne = any
   1e888:	str	x9, [sp, #264]
   1e88c:	tbnz	w8, #0, 1d7c0 <rpl_regexec@@Base+0x684>
   1e890:	ldr	x25, [sp, #240]
   1e894:	mov	x28, x27
   1e898:	b	1e544 <rpl_regexec@@Base+0x1408>
   1e89c:	mov	w8, wzr
   1e8a0:	cbz	x23, 1e8a8 <rpl_regexec@@Base+0x176c>
   1e8a4:	ldrb	w8, [x23, w8, uxtw]
   1e8a8:	ldrb	w8, [x22, w8, uxtw]
   1e8ac:	mov	x26, x24
   1e8b0:	cbnz	w8, 1d67c <rpl_regexec@@Base+0x540>
   1e8b4:	b	1e908 <rpl_regexec@@Base+0x17cc>
   1e8b8:	mov	w28, w0
   1e8bc:	mov	x25, xzr
   1e8c0:	b	1e8cc <rpl_regexec@@Base+0x1790>
   1e8c4:	ldr	x26, [sp, #216]
   1e8c8:	mov	w28, w0
   1e8cc:	mov	x0, x27
   1e8d0:	bl	aaa0 <free@plt>
   1e8d4:	mov	x0, x25
   1e8d8:	bl	aaa0 <free@plt>
   1e8dc:	ldr	x25, [sp, #240]
   1e8e0:	ldr	x19, [sp, #256]
   1e8e4:	ldr	w21, [sp, #204]
   1e8e8:	ldr	x27, [sp, #192]
   1e8ec:	cbz	w28, 1e928 <rpl_regexec@@Base+0x17ec>
   1e8f0:	ldr	x20, [sp, #208]
   1e8f4:	cmp	w28, #0x1
   1e8f8:	b.eq	1e6d8 <rpl_regexec@@Base+0x159c>  // b.none
   1e8fc:	b	1eacc <rpl_regexec@@Base+0x1990>
   1e900:	sxtw	x28, w0
   1e904:	b	1e7e0 <rpl_regexec@@Base+0x16a4>
   1e908:	mov	w28, #0x1                   	// #1
   1e90c:	b	1eacc <rpl_regexec@@Base+0x1990>
   1e910:	ldr	x0, [sp, #472]
   1e914:	bl	aaa0 <free@plt>
   1e918:	ldr	x8, [sp, #264]
   1e91c:	ldr	x25, [sp, #240]
   1e920:	stp	x20, x27, [sp, #464]
   1e924:	str	x8, [sp, #456]
   1e928:	cbz	x26, 1eac8 <rpl_regexec@@Base+0x198c>
   1e92c:	ldr	x19, [sp, #128]
   1e930:	cmp	x26, #0x1
   1e934:	b.eq	1e958 <rpl_regexec@@Base+0x181c>  // b.none
   1e938:	ldr	x8, [sp, #136]
   1e93c:	ldr	x9, [sp, #120]
   1e940:	add	x0, x19, #0x10
   1e944:	mov	w1, #0xff                  	// #255
   1e948:	mvn	x8, x8
   1e94c:	add	x8, x8, x9
   1e950:	lsl	x2, x8, #4
   1e954:	bl	a770 <memset@plt>
   1e958:	ldr	x8, [sp, #456]
   1e95c:	cmp	x26, #0x2
   1e960:	stp	xzr, x8, [x19]
   1e964:	ldr	x0, [sp, #224]
   1e968:	b.cc	1e9cc <rpl_regexec@@Base+0x1890>  // b.lo, b.ul, b.last
   1e96c:	ldrb	w8, [x0, #56]
   1e970:	tbnz	w8, #4, 1e9cc <rpl_regexec@@Base+0x1890>
   1e974:	ldrb	w8, [x25, #176]
   1e978:	tbnz	w8, #0, 1e9ac <rpl_regexec@@Base+0x1870>
   1e97c:	mov	w4, wzr
   1e980:	b	1e9b8 <rpl_regexec@@Base+0x187c>
   1e984:	ldr	x8, [x8, #16]
   1e988:	cbz	x8, 1e994 <rpl_regexec@@Base+0x1858>
   1e98c:	ldrsb	w8, [x28, #56]
   1e990:	tbnz	w8, #31, 1d320 <rpl_regexec@@Base+0x1e4>
   1e994:	mov	x20, xzr
   1e998:	cbz	x26, 1eb20 <rpl_regexec@@Base+0x19e4>
   1e99c:	mov	x26, x20
   1e9a0:	cbz	x19, 1d324 <rpl_regexec@@Base+0x1e8>
   1e9a4:	mov	w28, #0x1                   	// #1
   1e9a8:	b	1eafc <rpl_regexec@@Base+0x19c0>
   1e9ac:	ldr	x8, [x25, #152]
   1e9b0:	cmp	x8, #0x0
   1e9b4:	cset	w4, gt
   1e9b8:	add	x1, sp, #0x120
   1e9bc:	mov	x2, x26
   1e9c0:	mov	x3, x19
   1e9c4:	bl	2422c <rpl_re_set_registers@@Base+0x5178>
   1e9c8:	cbnz	w0, 1eb28 <rpl_regexec@@Base+0x19ec>
   1e9cc:	ldrb	w9, [sp, #428]
   1e9d0:	ldr	x10, [sp, #336]
   1e9d4:	ldr	x11, [sp, #312]
   1e9d8:	ldur	x12, [x29, #-208]
   1e9dc:	ldr	x20, [sp, #136]
   1e9e0:	ldr	x17, [sp, #112]
   1e9e4:	mov	x8, xzr
   1e9e8:	add	x13, x19, #0x8
   1e9ec:	ldur	x14, [x13, #-8]
   1e9f0:	cmn	x14, #0x1
   1e9f4:	b.eq	1ea0c <rpl_regexec@@Base+0x18d0>  // b.none
   1e9f8:	cbnz	w9, 1ea20 <rpl_regexec@@Base+0x18e4>
   1e9fc:	ldr	x15, [x13]
   1ea00:	add	x14, x14, x12
   1ea04:	add	x15, x15, x12
   1ea08:	stp	x14, x15, [x13, #-8]
   1ea0c:	add	x8, x8, #0x1
   1ea10:	cmp	x8, x26
   1ea14:	add	x13, x13, #0x10
   1ea18:	b.cc	1e9ec <rpl_regexec@@Base+0x18b0>  // b.lo, b.ul, b.last
   1ea1c:	b	1ea50 <rpl_regexec@@Base+0x1914>
   1ea20:	add	x15, x11, x14, lsl #3
   1ea24:	cmp	x14, x10
   1ea28:	ldr	x16, [x13]
   1ea2c:	csel	x14, x17, x15, eq  // eq = none
   1ea30:	ldr	x14, [x14]
   1ea34:	add	x15, x11, x16, lsl #3
   1ea38:	cmp	x16, x10
   1ea3c:	stur	x14, [x13, #-8]
   1ea40:	csel	x15, x17, x15, eq  // eq = none
   1ea44:	ldr	x15, [x15]
   1ea48:	str	x15, [x13]
   1ea4c:	b	1ea00 <rpl_regexec@@Base+0x18c4>
   1ea50:	cmp	x20, #0x1
   1ea54:	b.lt	1ea68 <rpl_regexec@@Base+0x192c>  // b.tstop
   1ea58:	add	x0, x19, x26, lsl #4
   1ea5c:	lsl	x2, x20, #4
   1ea60:	mov	w1, #0xff                  	// #255
   1ea64:	bl	a770 <memset@plt>
   1ea68:	ldr	x8, [x25, #224]
   1ea6c:	mov	w28, wzr
   1ea70:	cbz	x8, 1eacc <rpl_regexec@@Base+0x1990>
   1ea74:	cmp	x26, #0x2
   1ea78:	b.cc	1eacc <rpl_regexec@@Base+0x1990>  // b.lo, b.ul, b.last
   1ea7c:	ldp	x11, x13, [sp, #120]
   1ea80:	mvn	x10, x20
   1ea84:	mov	x9, xzr
   1ea88:	add	x10, x10, x11
   1ea8c:	add	x11, x13, #0x18
   1ea90:	ldr	x12, [x8, x9, lsl #3]
   1ea94:	cmp	x9, x12
   1ea98:	b.eq	1eab8 <rpl_regexec@@Base+0x197c>  // b.none
   1ea9c:	add	x12, x13, x12, lsl #4
   1eaa0:	ldr	x12, [x12, #16]
   1eaa4:	stur	x12, [x11, #-8]
   1eaa8:	ldr	x12, [x8, x9, lsl #3]
   1eaac:	add	x12, x13, x12, lsl #4
   1eab0:	ldr	x12, [x12, #24]
   1eab4:	str	x12, [x11]
   1eab8:	add	x9, x9, #0x1
   1eabc:	cmp	x10, x9
   1eac0:	add	x11, x11, #0x10
   1eac4:	b.ne	1ea90 <rpl_regexec@@Base+0x1954>  // b.any
   1eac8:	mov	w28, wzr
   1eacc:	ldr	x0, [sp, #472]
   1ead0:	bl	aaa0 <free@plt>
   1ead4:	ldr	x8, [x25, #152]
   1ead8:	cbz	x8, 1eaf4 <rpl_regexec@@Base+0x19b8>
   1eadc:	add	x0, sp, #0x120
   1eae0:	bl	24170 <rpl_re_set_registers@@Base+0x50bc>
   1eae4:	ldr	x0, [sp, #536]
   1eae8:	bl	aaa0 <free@plt>
   1eaec:	ldr	x0, [sp, #504]
   1eaf0:	bl	aaa0 <free@plt>
   1eaf4:	add	x0, sp, #0x120
   1eaf8:	bl	1f208 <rpl_re_set_registers@@Base+0x154>
   1eafc:	mov	w0, w28
   1eb00:	add	sp, sp, #0x2f0
   1eb04:	ldp	x20, x19, [sp, #80]
   1eb08:	ldp	x22, x21, [sp, #64]
   1eb0c:	ldp	x24, x23, [sp, #48]
   1eb10:	ldp	x26, x25, [sp, #32]
   1eb14:	ldp	x28, x27, [sp, #16]
   1eb18:	ldp	x29, x30, [sp], #96
   1eb1c:	ret
   1eb20:	mov	x26, x20
   1eb24:	b	1d324 <rpl_regexec@@Base+0x1e8>
   1eb28:	mov	w28, w0
   1eb2c:	b	1eacc <rpl_regexec@@Base+0x1990>
   1eb30:	ldur	w8, [x29, #-196]
   1eb34:	cmp	w8, #0xc
   1eb38:	b.eq	1eb68 <rpl_regexec@@Base+0x1a2c>  // b.none
   1eb3c:	adrp	x0, 2b000 <vasnprintf@@Base+0x3944>
   1eb40:	adrp	x1, 2b000 <vasnprintf@@Base+0x3944>
   1eb44:	adrp	x3, 2b000 <vasnprintf@@Base+0x3944>
   1eb48:	add	x0, x0, #0x120
   1eb4c:	add	x1, x1, #0x1d
   1eb50:	add	x3, x3, #0x132
   1eb54:	mov	w2, #0x435                 	// #1077
   1eb58:	bl	aeb0 <__assert_fail@plt>
   1eb5c:	mov	x0, x27
   1eb60:	bl	aaa0 <free@plt>
   1eb64:	ldr	x25, [sp, #240]
   1eb68:	mov	w28, #0xc                   	// #12
   1eb6c:	b	1eacc <rpl_regexec@@Base+0x1990>
   1eb70:	ldr	x25, [sp, #240]
   1eb74:	cmp	w0, #0xc
   1eb78:	b.eq	1eb68 <rpl_regexec@@Base+0x1a2c>  // b.none
   1eb7c:	adrp	x0, 2b000 <vasnprintf@@Base+0x3944>
   1eb80:	adrp	x1, 2b000 <vasnprintf@@Base+0x3944>
   1eb84:	adrp	x3, 2b000 <vasnprintf@@Base+0x3944>
   1eb88:	add	x0, x0, #0x120
   1eb8c:	add	x1, x1, #0x1d
   1eb90:	add	x3, x3, #0x132
   1eb94:	mov	w2, #0x46c                 	// #1132
   1eb98:	bl	aeb0 <__assert_fail@plt>

000000000001eb9c <rpl_re_match@@Base>:
   1eb9c:	mov	x6, x4
   1eba0:	mov	w7, #0x1                   	// #1
   1eba4:	mov	x4, xzr
   1eba8:	mov	x5, x2
   1ebac:	b	1ebb0 <rpl_re_match@@Base+0x14>
   1ebb0:	sub	sp, sp, #0x80
   1ebb4:	cmp	x3, x2
   1ebb8:	cset	w8, gt
   1ebbc:	orr	x8, x8, x3, lsr #63
   1ebc0:	stp	x29, x30, [sp, #32]
   1ebc4:	stp	x28, x27, [sp, #48]
   1ebc8:	stp	x26, x25, [sp, #64]
   1ebcc:	stp	x24, x23, [sp, #80]
   1ebd0:	stp	x22, x21, [sp, #96]
   1ebd4:	stp	x20, x19, [sp, #112]
   1ebd8:	add	x29, sp, #0x20
   1ebdc:	cbnz	x8, 1ee70 <rpl_re_match@@Base+0x2d4>
   1ebe0:	add	x8, x4, x3
   1ebe4:	adrp	x10, 3c000 <vasnprintf@@Base+0x14944>
   1ebe8:	bic	x9, x8, x8, asr #63
   1ebec:	cmp	x8, x2
   1ebf0:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1ebf4:	ldr	x22, [x0]
   1ebf8:	ldr	x10, [x10, #3944]
   1ebfc:	ldr	x8, [x8, #4040]
   1ec00:	mov	w23, w7
   1ec04:	mov	x20, x6
   1ec08:	mov	x24, x5
   1ec0c:	mov	x19, x3
   1ec10:	mov	x25, x2
   1ec14:	mov	x26, x1
   1ec18:	mov	x21, x0
   1ec1c:	orr	x8, x8, x10
   1ec20:	csel	x27, x2, x9, gt
   1ec24:	cbz	x8, 1ec30 <rpl_re_match@@Base+0x94>
   1ec28:	add	x0, x22, #0xe8
   1ec2c:	bl	af20 <pthread_mutex_lock@plt>
   1ec30:	ldrb	w28, [x21, #56]
   1ec34:	cmp	x27, x19
   1ec38:	stur	x22, [x29, #-8]
   1ec3c:	stur	w23, [x29, #-12]
   1ec40:	b.le	1ec64 <rpl_re_match@@Base+0xc8>
   1ec44:	tbnz	w28, #3, 1ec64 <rpl_re_match@@Base+0xc8>
   1ec48:	ldr	x9, [x21, #32]
   1ec4c:	mov	w8, w28
   1ec50:	cbz	x9, 1ec68 <rpl_re_match@@Base+0xcc>
   1ec54:	mov	x0, x21
   1ec58:	bl	afa0 <rpl_re_compile_fastmap@plt>
   1ec5c:	ldrb	w8, [x21, #56]
   1ec60:	b	1ec68 <rpl_re_match@@Base+0xcc>
   1ec64:	mov	w8, w28
   1ec68:	mov	x22, xzr
   1ec6c:	mov	w23, #0x1                   	// #1
   1ec70:	cbz	x20, 1ecb0 <rpl_re_match@@Base+0x114>
   1ec74:	tbnz	w8, #4, 1ecb0 <rpl_re_match@@Base+0x114>
   1ec78:	and	w8, w8, #0x6
   1ec7c:	cmp	w8, #0x4
   1ec80:	b.ne	1eca4 <rpl_re_match@@Base+0x108>  // b.any
   1ec84:	ldr	x8, [x20]
   1ec88:	ldr	x9, [x21, #48]
   1ec8c:	cmp	x8, x9
   1ec90:	b.hi	1eca8 <rpl_re_match@@Base+0x10c>  // b.pmore
   1ec94:	cmp	x8, #0x1
   1ec98:	csel	x22, xzr, x20, lt  // lt = tstop
   1ec9c:	csinc	x23, x8, xzr, ge  // ge = tcont
   1eca0:	b	1ecb0 <rpl_re_match@@Base+0x114>
   1eca4:	ldr	x9, [x21, #48]
   1eca8:	add	x23, x9, #0x1
   1ecac:	mov	x22, x20
   1ecb0:	lsl	x0, x23, #4
   1ecb4:	bl	a660 <malloc@plt>
   1ecb8:	cbz	x0, 1ee78 <rpl_re_match@@Base+0x2dc>
   1ecbc:	mov	x20, x0
   1ecc0:	ubfx	w8, w28, #5, #2
   1ecc4:	mov	x0, x21
   1ecc8:	mov	x1, x26
   1eccc:	mov	x2, x25
   1ecd0:	mov	x3, x19
   1ecd4:	mov	x4, x27
   1ecd8:	mov	x5, x24
   1ecdc:	mov	x6, x23
   1ece0:	mov	x7, x20
   1ece4:	str	w8, [sp]
   1ece8:	bl	1d254 <rpl_regexec@@Base+0x118>
   1ecec:	cbz	w0, 1ed4c <rpl_re_match@@Base+0x1b0>
   1ecf0:	ldur	x22, [x29, #-8]
   1ecf4:	cmp	w0, #0x1
   1ecf8:	mov	x8, #0xfffffffffffffffe    	// #-2
   1ecfc:	cinc	x21, x8, eq  // eq = none
   1ed00:	mov	x0, x20
   1ed04:	bl	aaa0 <free@plt>
   1ed08:	adrp	x8, 3c000 <vasnprintf@@Base+0x14944>
   1ed0c:	adrp	x9, 3c000 <vasnprintf@@Base+0x14944>
   1ed10:	ldr	x8, [x8, #3944]
   1ed14:	ldr	x9, [x9, #4040]
   1ed18:	orr	x8, x9, x8
   1ed1c:	cbz	x8, 1ed28 <rpl_re_match@@Base+0x18c>
   1ed20:	add	x0, x22, #0xe8
   1ed24:	bl	af50 <pthread_mutex_unlock@plt>
   1ed28:	mov	x0, x21
   1ed2c:	ldp	x20, x19, [sp, #112]
   1ed30:	ldp	x22, x21, [sp, #96]
   1ed34:	ldp	x24, x23, [sp, #80]
   1ed38:	ldp	x26, x25, [sp, #64]
   1ed3c:	ldp	x28, x27, [sp, #48]
   1ed40:	ldp	x29, x30, [sp, #32]
   1ed44:	add	sp, sp, #0x80
   1ed48:	ret
   1ed4c:	cbz	x22, 1ee40 <rpl_re_match@@Base+0x2a4>
   1ed50:	ldrb	w8, [x21, #56]
   1ed54:	ubfx	w8, w8, #1, #2
   1ed58:	cmp	w8, #0x2
   1ed5c:	b.eq	1edbc <rpl_re_match@@Base+0x220>  // b.none
   1ed60:	cmp	w8, #0x1
   1ed64:	add	x26, x23, #0x1
   1ed68:	b.eq	1eda4 <rpl_re_match@@Base+0x208>  // b.none
   1ed6c:	cbnz	w8, 1eec4 <rpl_re_match@@Base+0x328>
   1ed70:	lsl	x25, x26, #3
   1ed74:	mov	x0, x25
   1ed78:	bl	a660 <malloc@plt>
   1ed7c:	str	x0, [x22, #8]
   1ed80:	cbz	x0, 1eebc <rpl_re_match@@Base+0x320>
   1ed84:	mov	x24, x0
   1ed88:	mov	x0, x25
   1ed8c:	bl	a660 <malloc@plt>
   1ed90:	str	x0, [x22, #16]
   1ed94:	cbz	x0, 1eeb4 <rpl_re_match@@Base+0x318>
   1ed98:	str	x26, [x22]
   1ed9c:	mov	w8, #0x1                   	// #1
   1eda0:	b	1edcc <rpl_re_match@@Base+0x230>
   1eda4:	ldr	x9, [x22]
   1eda8:	cmp	x26, x9
   1edac:	b.hi	1ee84 <rpl_re_match@@Base+0x2e8>  // b.pmore
   1edb0:	mov	w8, #0x1                   	// #1
   1edb4:	mov	x26, x9
   1edb8:	b	1edcc <rpl_re_match@@Base+0x230>
   1edbc:	ldr	x26, [x22]
   1edc0:	cmp	x26, x23
   1edc4:	b.cc	1ef04 <rpl_re_match@@Base+0x368>  // b.lo, b.ul, b.last
   1edc8:	mov	w8, #0x2                   	// #2
   1edcc:	cmp	x23, #0x1
   1edd0:	b.lt	1ee00 <rpl_re_match@@Base+0x264>  // b.tstop
   1edd4:	ldp	x9, x10, [x22, #8]
   1edd8:	add	x11, x20, #0x8
   1eddc:	mov	x12, x23
   1ede0:	ldur	x13, [x11, #-8]
   1ede4:	subs	x12, x12, #0x1
   1ede8:	str	x13, [x9], #8
   1edec:	ldr	x13, [x11], #16
   1edf0:	str	x13, [x10], #8
   1edf4:	b.ne	1ede0 <rpl_re_match@@Base+0x244>  // b.any
   1edf8:	ldr	x26, [x22]
   1edfc:	b	1ee04 <rpl_re_match@@Base+0x268>
   1ee00:	mov	x23, xzr
   1ee04:	cmp	x23, x26
   1ee08:	b.cs	1ee2c <rpl_re_match@@Base+0x290>  // b.hs, b.nlast
   1ee0c:	ldp	x10, x9, [x22, #8]
   1ee10:	mov	x11, #0xffffffffffffffff    	// #-1
   1ee14:	str	x11, [x9, x23, lsl #3]
   1ee18:	str	x11, [x10, x23, lsl #3]
   1ee1c:	ldr	x12, [x22]
   1ee20:	add	x23, x23, #0x1
   1ee24:	cmp	x23, x12
   1ee28:	b.cc	1ee14 <rpl_re_match@@Base+0x278>  // b.lo, b.ul, b.last
   1ee2c:	ldrb	w9, [x21, #56]
   1ee30:	and	w9, w9, #0xfffffff9
   1ee34:	orr	w9, w9, w8, lsl #1
   1ee38:	strb	w9, [x21, #56]
   1ee3c:	cbz	w8, 1ee64 <rpl_re_match@@Base+0x2c8>
   1ee40:	ldr	x21, [x20]
   1ee44:	ldur	x22, [x29, #-8]
   1ee48:	ldur	w8, [x29, #-12]
   1ee4c:	tbz	w8, #0, 1ed00 <rpl_re_match@@Base+0x164>
   1ee50:	cmp	x21, x19
   1ee54:	b.ne	1eee4 <rpl_re_match@@Base+0x348>  // b.any
   1ee58:	ldr	x8, [x20, #8]
   1ee5c:	sub	x21, x8, x19
   1ee60:	b	1ed00 <rpl_re_match@@Base+0x164>
   1ee64:	ldur	x22, [x29, #-8]
   1ee68:	mov	x21, #0xfffffffffffffffe    	// #-2
   1ee6c:	b	1ed00 <rpl_re_match@@Base+0x164>
   1ee70:	mov	x21, #0xffffffffffffffff    	// #-1
   1ee74:	b	1ed28 <rpl_re_match@@Base+0x18c>
   1ee78:	ldur	x22, [x29, #-8]
   1ee7c:	mov	x21, #0xfffffffffffffffe    	// #-2
   1ee80:	b	1ed08 <rpl_re_match@@Base+0x16c>
   1ee84:	ldr	x0, [x22, #8]
   1ee88:	lsl	x25, x26, #3
   1ee8c:	mov	x1, x25
   1ee90:	bl	a860 <realloc@plt>
   1ee94:	cbz	x0, 1eebc <rpl_re_match@@Base+0x320>
   1ee98:	mov	x24, x0
   1ee9c:	ldr	x0, [x22, #16]
   1eea0:	mov	x1, x25
   1eea4:	bl	a860 <realloc@plt>
   1eea8:	cbz	x0, 1eeb4 <rpl_re_match@@Base+0x318>
   1eeac:	stp	x24, x0, [x22, #8]
   1eeb0:	b	1ed98 <rpl_re_match@@Base+0x1fc>
   1eeb4:	mov	x0, x24
   1eeb8:	bl	aaa0 <free@plt>
   1eebc:	mov	w8, wzr
   1eec0:	b	1ee2c <rpl_re_match@@Base+0x290>
   1eec4:	adrp	x0, 2b000 <vasnprintf@@Base+0x3944>
   1eec8:	adrp	x1, 2b000 <vasnprintf@@Base+0x3944>
   1eecc:	adrp	x3, 2b000 <vasnprintf@@Base+0x3944>
   1eed0:	add	x0, x0, #0xa2
   1eed4:	add	x1, x1, #0x1d
   1eed8:	add	x3, x3, #0xbf
   1eedc:	mov	w2, #0x1f9                 	// #505
   1eee0:	bl	aeb0 <__assert_fail@plt>
   1eee4:	adrp	x0, 2b000 <vasnprintf@@Base+0x3944>
   1eee8:	adrp	x1, 2b000 <vasnprintf@@Base+0x3944>
   1eeec:	adrp	x3, 2b000 <vasnprintf@@Base+0x3944>
   1eef0:	add	x0, x0, #0x4
   1eef4:	add	x1, x1, #0x1d
   1eef8:	add	x3, x3, #0x29
   1eefc:	mov	w2, #0x1be                 	// #446
   1ef00:	bl	aeb0 <__assert_fail@plt>
   1ef04:	adrp	x0, 2b000 <vasnprintf@@Base+0x3944>
   1ef08:	adrp	x1, 2b000 <vasnprintf@@Base+0x3944>
   1ef0c:	adrp	x3, 2b000 <vasnprintf@@Base+0x3944>
   1ef10:	add	x0, x0, #0x108
   1ef14:	add	x1, x1, #0x1d
   1ef18:	add	x3, x3, #0xbf
   1ef1c:	mov	w2, #0x1fb                 	// #507
   1ef20:	bl	aeb0 <__assert_fail@plt>

000000000001ef24 <rpl_re_search@@Base>:
   1ef24:	mov	x6, x5
   1ef28:	mov	x5, x2
   1ef2c:	mov	w7, wzr
   1ef30:	b	1ebb0 <rpl_re_match@@Base+0x14>

000000000001ef34 <rpl_re_match_2@@Base>:
   1ef34:	sub	sp, sp, #0x20
   1ef38:	mov	x8, x6
   1ef3c:	mov	w9, #0x1                   	// #1
   1ef40:	str	x7, [sp]
   1ef44:	mov	x6, xzr
   1ef48:	mov	x7, x8
   1ef4c:	stp	x29, x30, [sp, #16]
   1ef50:	add	x29, sp, #0x10
   1ef54:	strb	w9, [sp, #8]
   1ef58:	bl	1ef68 <rpl_re_match_2@@Base+0x34>
   1ef5c:	ldp	x29, x30, [sp, #16]
   1ef60:	add	sp, sp, #0x20
   1ef64:	ret
   1ef68:	sub	sp, sp, #0x70
   1ef6c:	stp	x29, x30, [sp, #16]
   1ef70:	add	x29, sp, #0x10
   1ef74:	stp	x22, x21, [sp, #80]
   1ef78:	ldr	x22, [x29, #96]
   1ef7c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   1ef80:	sub	x9, x9, x4
   1ef84:	orr	x8, x4, x2
   1ef88:	cmp	x9, x2
   1ef8c:	orr	x8, x8, x22
   1ef90:	cset	w9, lt  // lt = tstop
   1ef94:	orr	x8, x9, x8, lsr #63
   1ef98:	stp	x28, x27, [sp, #32]
   1ef9c:	stp	x26, x25, [sp, #48]
   1efa0:	stp	x24, x23, [sp, #64]
   1efa4:	stp	x20, x19, [sp, #96]
   1efa8:	cbnz	x8, 1f084 <rpl_re_match_2@@Base+0x150>
   1efac:	mov	x10, x7
   1efb0:	mov	x20, x6
   1efb4:	mov	x21, x5
   1efb8:	mov	x28, x4
   1efbc:	mov	x19, x2
   1efc0:	mov	x24, x1
   1efc4:	mov	x23, x0
   1efc8:	cmp	x4, #0x1
   1efcc:	add	x25, x4, x2
   1efd0:	b.lt	1f01c <rpl_re_match_2@@Base+0xe8>  // b.tstop
   1efd4:	mov	x27, x3
   1efd8:	cmp	x19, #0x1
   1efdc:	b.lt	1f024 <rpl_re_match_2@@Base+0xf0>  // b.tstop
   1efe0:	mov	x0, x25
   1efe4:	str	x10, [sp, #8]
   1efe8:	bl	a660 <malloc@plt>
   1efec:	cbz	x0, 1f084 <rpl_re_match_2@@Base+0x150>
   1eff0:	mov	x1, x24
   1eff4:	mov	x2, x19
   1eff8:	mov	x26, x0
   1effc:	bl	a2f0 <memcpy@plt>
   1f000:	add	x0, x26, x19
   1f004:	mov	x1, x27
   1f008:	mov	x2, x28
   1f00c:	bl	a2f0 <memcpy@plt>
   1f010:	ldr	x10, [sp, #8]
   1f014:	mov	x24, x26
   1f018:	b	1f02c <rpl_re_match_2@@Base+0xf8>
   1f01c:	mov	x26, xzr
   1f020:	b	1f02c <rpl_re_match_2@@Base+0xf8>
   1f024:	mov	x26, xzr
   1f028:	mov	x24, x27
   1f02c:	ldrb	w8, [x29, #104]
   1f030:	mov	x0, x23
   1f034:	mov	x1, x24
   1f038:	mov	x2, x25
   1f03c:	and	w7, w8, #0x1
   1f040:	mov	x3, x21
   1f044:	mov	x4, x20
   1f048:	mov	x5, x22
   1f04c:	mov	x6, x10
   1f050:	bl	1ebb0 <rpl_re_match@@Base+0x14>
   1f054:	mov	x19, x0
   1f058:	mov	x0, x26
   1f05c:	bl	aaa0 <free@plt>
   1f060:	mov	x0, x19
   1f064:	ldp	x20, x19, [sp, #96]
   1f068:	ldp	x22, x21, [sp, #80]
   1f06c:	ldp	x24, x23, [sp, #64]
   1f070:	ldp	x26, x25, [sp, #48]
   1f074:	ldp	x28, x27, [sp, #32]
   1f078:	ldp	x29, x30, [sp, #16]
   1f07c:	add	sp, sp, #0x70
   1f080:	ret
   1f084:	mov	x0, #0xfffffffffffffffe    	// #-2
   1f088:	b	1f064 <rpl_re_match_2@@Base+0x130>

000000000001f08c <rpl_re_search_2@@Base>:
   1f08c:	sub	sp, sp, #0x20
   1f090:	stp	x29, x30, [sp, #16]
   1f094:	add	x29, sp, #0x10
   1f098:	ldr	x8, [x29, #16]
   1f09c:	strb	wzr, [sp, #8]
   1f0a0:	str	x8, [sp]
   1f0a4:	bl	1ef68 <rpl_re_match_2@@Base+0x34>
   1f0a8:	ldp	x29, x30, [sp, #16]
   1f0ac:	add	sp, sp, #0x20
   1f0b0:	ret

000000000001f0b4 <rpl_re_set_registers@@Base>:
   1f0b4:	ldrb	w8, [x0, #56]
   1f0b8:	cmp	x2, #0x0
   1f0bc:	csel	x9, xzr, x4, eq  // eq = none
   1f0c0:	csel	x10, xzr, x3, eq  // eq = none
   1f0c4:	and	w8, w8, #0xfffffff9
   1f0c8:	orr	w11, w8, #0x2
   1f0cc:	csel	w8, w8, w11, eq  // eq = none
   1f0d0:	strb	w8, [x0, #56]
   1f0d4:	stp	x10, x9, [x1, #8]
   1f0d8:	str	x2, [x1]
   1f0dc:	ret
   1f0e0:	ldr	w8, [x0, #8]
   1f0e4:	mov	w9, #0xff                  	// #255
   1f0e8:	movk	w9, #0x4, lsl #16
   1f0ec:	and	w8, w8, w9
   1f0f0:	cmp	w8, #0x3
   1f0f4:	b.eq	1f108 <rpl_re_set_registers@@Base+0x54>  // b.none
   1f0f8:	cmp	w8, #0x6
   1f0fc:	b.ne	1f110 <rpl_re_set_registers@@Base+0x5c>  // b.any
   1f100:	ldr	x0, [x0]
   1f104:	b	1f17c <rpl_re_set_registers@@Base+0xc8>
   1f108:	ldr	x0, [x0]
   1f10c:	b	aaa0 <free@plt>
   1f110:	ret
   1f114:	stp	x29, x30, [sp, #-32]!
   1f118:	str	x19, [sp, #16]
   1f11c:	mov	x19, x0
   1f120:	ldr	x0, [x0, #48]
   1f124:	mov	x29, sp
   1f128:	bl	aaa0 <free@plt>
   1f12c:	ldr	x0, [x19, #72]
   1f130:	bl	aaa0 <free@plt>
   1f134:	ldr	x8, [x19, #80]
   1f138:	add	x9, x19, #0x8
   1f13c:	cmp	x8, x9
   1f140:	b.eq	1f154 <rpl_re_set_registers@@Base+0xa0>  // b.none
   1f144:	ldr	x0, [x8, #16]
   1f148:	bl	aaa0 <free@plt>
   1f14c:	ldr	x0, [x19, #80]
   1f150:	bl	aaa0 <free@plt>
   1f154:	ldr	x0, [x19, #24]
   1f158:	bl	aaa0 <free@plt>
   1f15c:	ldr	x0, [x19, #96]
   1f160:	bl	aaa0 <free@plt>
   1f164:	ldr	x0, [x19, #88]
   1f168:	bl	aaa0 <free@plt>
   1f16c:	mov	x0, x19
   1f170:	ldr	x19, [sp, #16]
   1f174:	ldp	x29, x30, [sp], #32
   1f178:	b	aaa0 <free@plt>
   1f17c:	stp	x29, x30, [sp, #-32]!
   1f180:	str	x19, [sp, #16]
   1f184:	mov	x19, x0
   1f188:	ldr	x0, [x0]
   1f18c:	mov	x29, sp
   1f190:	bl	aaa0 <free@plt>
   1f194:	ldr	x0, [x19, #8]
   1f198:	bl	aaa0 <free@plt>
   1f19c:	ldr	x0, [x19, #16]
   1f1a0:	bl	aaa0 <free@plt>
   1f1a4:	ldr	x0, [x19, #24]
   1f1a8:	bl	aaa0 <free@plt>
   1f1ac:	mov	x0, x19
   1f1b0:	ldr	x19, [sp, #16]
   1f1b4:	ldp	x29, x30, [sp], #32
   1f1b8:	b	aaa0 <free@plt>
   1f1bc:	stp	x29, x30, [sp, #-32]!
   1f1c0:	stp	x20, x19, [sp, #16]
   1f1c4:	ldr	x19, [x0]
   1f1c8:	mov	x29, sp
   1f1cc:	ldr	x0, [x19, #112]
   1f1d0:	cbz	x0, 1f1e4 <rpl_re_set_registers@@Base+0x130>
   1f1d4:	ldr	x20, [x0]
   1f1d8:	bl	aaa0 <free@plt>
   1f1dc:	mov	x0, x20
   1f1e0:	cbnz	x20, 1f1d4 <rpl_re_set_registers@@Base+0x120>
   1f1e4:	ldr	x0, [x19, #32]
   1f1e8:	mov	w8, #0xf                   	// #15
   1f1ec:	str	w8, [x19, #128]
   1f1f0:	stp	xzr, xzr, [x19, #104]
   1f1f4:	bl	aaa0 <free@plt>
   1f1f8:	str	xzr, [x19, #32]
   1f1fc:	ldp	x20, x19, [sp, #16]
   1f200:	ldp	x29, x30, [sp], #32
   1f204:	ret
   1f208:	stp	x29, x30, [sp, #-32]!
   1f20c:	str	x19, [sp, #16]
   1f210:	mov	x19, x0
   1f214:	ldr	x0, [x0, #16]
   1f218:	mov	x29, sp
   1f21c:	bl	aaa0 <free@plt>
   1f220:	ldr	x0, [x19, #24]
   1f224:	bl	aaa0 <free@plt>
   1f228:	ldrb	w8, [x19, #139]
   1f22c:	cbz	w8, 1f240 <rpl_re_set_registers@@Base+0x18c>
   1f230:	ldr	x0, [x19, #8]
   1f234:	ldr	x19, [sp, #16]
   1f238:	ldp	x29, x30, [sp], #32
   1f23c:	b	aaa0 <free@plt>
   1f240:	ldr	x19, [sp, #16]
   1f244:	ldp	x29, x30, [sp], #32
   1f248:	ret
   1f24c:	stp	x29, x30, [sp, #-32]!
   1f250:	stp	x20, x19, [sp, #16]
   1f254:	ldr	w8, [x0, #144]
   1f258:	mov	x19, x0
   1f25c:	mov	x20, x1
   1f260:	mov	x29, sp
   1f264:	cmp	w8, #0x2
   1f268:	b.lt	1f2a4 <rpl_re_set_registers@@Base+0x1f0>  // b.tstop
   1f26c:	lsr	x8, x20, #61
   1f270:	cbnz	x8, 1f2d4 <rpl_re_set_registers@@Base+0x220>
   1f274:	ldr	x0, [x19, #16]
   1f278:	lsl	x1, x20, #2
   1f27c:	bl	a860 <realloc@plt>
   1f280:	cbz	x0, 1f2d4 <rpl_re_set_registers@@Base+0x220>
   1f284:	mov	x8, x0
   1f288:	ldr	x0, [x19, #24]
   1f28c:	str	x8, [x19, #16]
   1f290:	cbz	x0, 1f2a4 <rpl_re_set_registers@@Base+0x1f0>
   1f294:	lsl	x1, x20, #3
   1f298:	bl	a860 <realloc@plt>
   1f29c:	cbz	x0, 1f2d4 <rpl_re_set_registers@@Base+0x220>
   1f2a0:	str	x0, [x19, #24]
   1f2a4:	ldrb	w8, [x19, #139]
   1f2a8:	cbz	w8, 1f2c0 <rpl_re_set_registers@@Base+0x20c>
   1f2ac:	ldr	x0, [x19, #8]
   1f2b0:	mov	x1, x20
   1f2b4:	bl	a860 <realloc@plt>
   1f2b8:	cbz	x0, 1f2d4 <rpl_re_set_registers@@Base+0x220>
   1f2bc:	str	x0, [x19, #8]
   1f2c0:	mov	w0, wzr
   1f2c4:	str	x20, [x19, #64]
   1f2c8:	ldp	x20, x19, [sp, #16]
   1f2cc:	ldp	x29, x30, [sp], #32
   1f2d0:	ret
   1f2d4:	mov	w0, #0xc                   	// #12
   1f2d8:	b	1f2c8 <rpl_re_set_registers@@Base+0x214>
   1f2dc:	sub	sp, sp, #0xb0
   1f2e0:	stp	x29, x30, [sp, #80]
   1f2e4:	stp	x28, x27, [sp, #96]
   1f2e8:	stp	x26, x25, [sp, #112]
   1f2ec:	stp	x24, x23, [sp, #128]
   1f2f0:	stp	x22, x21, [sp, #144]
   1f2f4:	stp	x20, x19, [sp, #160]
   1f2f8:	ldr	x8, [x0, #64]
   1f2fc:	ldr	x9, [x0, #88]
   1f300:	ldrb	w10, [x0, #138]
   1f304:	ldr	x25, [x0, #48]
   1f308:	mov	x19, x0
   1f30c:	cmp	x8, x9
   1f310:	csel	x26, x9, x8, gt
   1f314:	add	x29, sp, #0x50
   1f318:	cbnz	w10, 1f32c <rpl_re_set_registers@@Base+0x278>
   1f31c:	ldr	x8, [x19, #120]
   1f320:	cbnz	x8, 1f32c <rpl_re_set_registers@@Base+0x278>
   1f324:	ldrb	w8, [x19, #140]
   1f328:	cbz	w8, 1f334 <rpl_re_set_registers@@Base+0x280>
   1f32c:	ldr	x23, [x19, #56]
   1f330:	b	1f4cc <rpl_re_set_registers@@Base+0x418>
   1f334:	cmp	x26, x25
   1f338:	b.le	1f4c4 <rpl_re_set_registers@@Base+0x410>
   1f33c:	add	x20, x19, #0x20
   1f340:	ldr	x21, [x19, #40]
   1f344:	ldr	x22, [x19]
   1f348:	add	x8, x21, x25
   1f34c:	ldrsb	w23, [x22, x8]
   1f350:	tbnz	w23, #31, 1f38c <rpl_re_set_registers@@Base+0x2d8>
   1f354:	mov	x0, x20
   1f358:	bl	a9b0 <mbsinit@plt>
   1f35c:	cbz	w0, 1f38c <rpl_re_set_registers@@Base+0x2d8>
   1f360:	and	x21, x23, #0xff
   1f364:	bl	a870 <__ctype_toupper_loc@plt>
   1f368:	ldr	x8, [x0]
   1f36c:	ldr	x9, [x19, #8]
   1f370:	add	x27, x25, #0x1
   1f374:	ldr	w8, [x8, x21, lsl #2]
   1f378:	strb	w8, [x9, x25]
   1f37c:	ldp	x8, x9, [x19, #8]
   1f380:	ldrb	w8, [x8, x25]
   1f384:	str	w8, [x9, x25, lsl #2]
   1f388:	b	1f454 <rpl_re_set_registers@@Base+0x3a0>
   1f38c:	ldr	x8, [x20]
   1f390:	add	x9, x22, x21
   1f394:	sub	x2, x26, x25
   1f398:	add	x1, x9, x25
   1f39c:	add	x0, sp, #0x4
   1f3a0:	mov	x3, x20
   1f3a4:	stur	x8, [x29, #-8]
   1f3a8:	bl	a430 <rpl_mbrtowc@plt>
   1f3ac:	sub	x23, x0, #0x1
   1f3b0:	mov	x21, x0
   1f3b4:	cmn	x23, #0x4
   1f3b8:	b.hi	1f464 <rpl_re_set_registers@@Base+0x3b0>  // b.pmore
   1f3bc:	ldr	w0, [sp, #4]
   1f3c0:	bl	ae50 <towupper@plt>
   1f3c4:	ldr	w8, [sp, #4]
   1f3c8:	mov	w22, w0
   1f3cc:	cmp	w0, w8
   1f3d0:	b.ne	1f3ec <rpl_re_set_registers@@Base+0x338>  // b.any
   1f3d4:	ldp	x9, x8, [x19]
   1f3d8:	ldr	x10, [x19, #40]
   1f3dc:	add	x0, x8, x25
   1f3e0:	add	x8, x9, x10
   1f3e4:	add	x1, x8, x25
   1f3e8:	b	1f410 <rpl_re_set_registers@@Base+0x35c>
   1f3ec:	add	x0, sp, #0x8
   1f3f0:	sub	x2, x29, #0x8
   1f3f4:	mov	w1, w22
   1f3f8:	bl	aff0 <wcrtomb@plt>
   1f3fc:	cmp	x21, x0
   1f400:	b.ne	1f4b4 <rpl_re_set_registers@@Base+0x400>  // b.any
   1f404:	ldr	x8, [x19, #8]
   1f408:	add	x1, sp, #0x8
   1f40c:	add	x0, x8, x25
   1f410:	mov	x2, x21
   1f414:	bl	a2f0 <memcpy@plt>
   1f418:	ldr	x8, [x19, #16]
   1f41c:	add	x24, x21, x25
   1f420:	add	x27, x25, #0x1
   1f424:	cmp	x27, x24
   1f428:	str	w22, [x8, x25, lsl #2]
   1f42c:	b.ge	1f454 <rpl_re_set_registers@@Base+0x3a0>  // b.tcont
   1f430:	add	x8, x8, x25, lsl #2
   1f434:	lsl	x9, x21, #2
   1f438:	add	x0, x8, #0x4
   1f43c:	sub	x2, x9, #0x4
   1f440:	mov	w1, #0xff                  	// #255
   1f444:	bl	a770 <memset@plt>
   1f448:	subs	x23, x23, #0x1
   1f44c:	b.ne	1f448 <rpl_re_set_registers@@Base+0x394>  // b.any
   1f450:	mov	x27, x24
   1f454:	cmp	x26, x27
   1f458:	mov	x25, x27
   1f45c:	b.gt	1f340 <rpl_re_set_registers@@Base+0x28c>
   1f460:	b	1f798 <rpl_re_set_registers@@Base+0x6e4>
   1f464:	add	x8, x21, #0x1
   1f468:	cmp	x8, #0x2
   1f46c:	b.cc	1f480 <rpl_re_set_registers@@Base+0x3cc>  // b.lo, b.ul, b.last
   1f470:	ldr	x8, [x19, #64]
   1f474:	ldr	x9, [x19, #88]
   1f478:	cmp	x8, x9
   1f47c:	b.lt	1f4bc <rpl_re_set_registers@@Base+0x408>  // b.tstop
   1f480:	ldr	x8, [x19, #40]
   1f484:	ldp	x9, x10, [x19]
   1f488:	add	x27, x25, #0x1
   1f48c:	cmn	x21, #0x1
   1f490:	add	x8, x8, x25
   1f494:	ldrb	w8, [x9, x8]
   1f498:	strb	w8, [x10, x25]
   1f49c:	ldr	x9, [x19, #16]
   1f4a0:	str	w8, [x9, x25, lsl #2]
   1f4a4:	b.ne	1f454 <rpl_re_set_registers@@Base+0x3a0>  // b.any
   1f4a8:	ldur	x8, [x29, #-8]
   1f4ac:	str	x8, [x20]
   1f4b0:	b	1f454 <rpl_re_set_registers@@Base+0x3a0>
   1f4b4:	mov	x27, x25
   1f4b8:	b	1f4dc <rpl_re_set_registers@@Base+0x428>
   1f4bc:	ldur	x8, [x29, #-8]
   1f4c0:	str	x8, [x20]
   1f4c4:	mov	x27, x25
   1f4c8:	b	1f798 <rpl_re_set_registers@@Base+0x6e4>
   1f4cc:	cmp	x25, x26
   1f4d0:	mov	x27, x25
   1f4d4:	mov	x25, x23
   1f4d8:	b.ge	1f798 <rpl_re_set_registers@@Base+0x6e4>  // b.tcont
   1f4dc:	mov	x21, x19
   1f4e0:	ldr	x8, [x21, #32]!
   1f4e4:	sub	x2, x26, x27
   1f4e8:	stur	x8, [x29, #-8]
   1f4ec:	ldr	x8, [x21, #88]
   1f4f0:	cbnz	x8, 1f5bc <rpl_re_set_registers@@Base+0x508>
   1f4f4:	ldr	x8, [x19]
   1f4f8:	ldr	x9, [x19, #40]
   1f4fc:	add	x8, x8, x9
   1f500:	add	x24, x8, x25
   1f504:	mov	x0, sp
   1f508:	mov	x1, x24
   1f50c:	mov	x3, x21
   1f510:	bl	a430 <rpl_mbrtowc@plt>
   1f514:	sub	x28, x0, #0x1
   1f518:	mov	x20, x0
   1f51c:	cmn	x28, #0x4
   1f520:	b.hi	1f610 <rpl_re_set_registers@@Base+0x55c>  // b.pmore
   1f524:	ldr	w0, [sp]
   1f528:	bl	ae50 <towupper@plt>
   1f52c:	ldr	w8, [sp]
   1f530:	mov	w22, w0
   1f534:	cmp	w0, w8
   1f538:	b.ne	1f548 <rpl_re_set_registers@@Base+0x494>  // b.any
   1f53c:	ldr	x8, [x19, #8]
   1f540:	mov	x1, x24
   1f544:	b	1f568 <rpl_re_set_registers@@Base+0x4b4>
   1f548:	add	x0, sp, #0x8
   1f54c:	sub	x2, x29, #0x8
   1f550:	mov	w1, w22
   1f554:	bl	aff0 <wcrtomb@plt>
   1f558:	subs	x9, x0, x20
   1f55c:	b.ne	1f678 <rpl_re_set_registers@@Base+0x5c4>  // b.any
   1f560:	ldr	x8, [x19, #8]
   1f564:	add	x1, sp, #0x8
   1f568:	add	x0, x8, x27
   1f56c:	mov	x2, x20
   1f570:	bl	a2f0 <memcpy@plt>
   1f574:	ldrb	w8, [x19, #140]
   1f578:	cbnz	w8, 1f76c <rpl_re_set_registers@@Base+0x6b8>
   1f57c:	ldr	x8, [x19, #16]
   1f580:	add	x23, x20, x25
   1f584:	add	x21, x20, x27
   1f588:	add	x25, x27, #0x1
   1f58c:	cmp	x25, x21
   1f590:	str	w22, [x8, x27, lsl #2]
   1f594:	b.ge	1f4cc <rpl_re_set_registers@@Base+0x418>  // b.tcont
   1f598:	add	x0, x8, x25, lsl #2
   1f59c:	lsl	x8, x20, #2
   1f5a0:	sub	x2, x8, #0x4
   1f5a4:	mov	w1, #0xff                  	// #255
   1f5a8:	bl	a770 <memset@plt>
   1f5ac:	subs	x28, x28, #0x1
   1f5b0:	b.ne	1f5ac <rpl_re_set_registers@@Base+0x4f8>  // b.any
   1f5b4:	mov	x25, x21
   1f5b8:	b	1f4cc <rpl_re_set_registers@@Base+0x418>
   1f5bc:	ldr	w9, [x19, #144]
   1f5c0:	add	x24, sp, #0x8
   1f5c4:	cmp	w9, #0x1
   1f5c8:	b.lt	1f504 <rpl_re_set_registers@@Base+0x450>  // b.tstop
   1f5cc:	cmp	x2, #0x1
   1f5d0:	b.lt	1f504 <rpl_re_set_registers@@Base+0x450>  // b.tstop
   1f5d4:	ldr	x11, [x19, #40]
   1f5d8:	ldr	x12, [x19]
   1f5dc:	mov	x10, xzr
   1f5e0:	add	x11, x25, x11
   1f5e4:	add	x11, x12, x11
   1f5e8:	ldrb	w12, [x11, x10]
   1f5ec:	add	x24, sp, #0x8
   1f5f0:	ldrb	w12, [x8, x12]
   1f5f4:	strb	w12, [x24, x10]
   1f5f8:	add	x10, x10, #0x1
   1f5fc:	cmp	x10, x9
   1f600:	b.cs	1f504 <rpl_re_set_registers@@Base+0x450>  // b.hs, b.nlast
   1f604:	cmp	x2, x10
   1f608:	b.gt	1f5e8 <rpl_re_set_registers@@Base+0x534>
   1f60c:	b	1f504 <rpl_re_set_registers@@Base+0x450>
   1f610:	add	x8, x20, #0x1
   1f614:	cmp	x8, #0x2
   1f618:	b.cc	1f62c <rpl_re_set_registers@@Base+0x578>  // b.lo, b.ul, b.last
   1f61c:	ldr	x8, [x19, #64]
   1f620:	ldr	x9, [x19, #88]
   1f624:	cmp	x8, x9
   1f628:	b.lt	1f790 <rpl_re_set_registers@@Base+0x6dc>  // b.tstop
   1f62c:	ldr	x8, [x19, #40]
   1f630:	ldr	x10, [x19]
   1f634:	ldr	x9, [x19, #120]
   1f638:	add	x8, x8, x25
   1f63c:	ldrb	w8, [x10, x8]
   1f640:	cbnz	x9, 1f7c8 <rpl_re_set_registers@@Base+0x714>
   1f644:	ldr	x9, [x19, #8]
   1f648:	strb	w8, [x9, x27]
   1f64c:	ldrb	w9, [x19, #140]
   1f650:	cbnz	w9, 1f7d0 <rpl_re_set_registers@@Base+0x71c>
   1f654:	ldr	x9, [x19, #16]
   1f658:	add	x23, x25, #0x1
   1f65c:	add	x25, x27, #0x1
   1f660:	cmn	x20, #0x1
   1f664:	str	w8, [x9, x27, lsl #2]
   1f668:	b.ne	1f4cc <rpl_re_set_registers@@Base+0x418>  // b.any
   1f66c:	ldur	x8, [x29, #-8]
   1f670:	str	x8, [x21]
   1f674:	b	1f4cc <rpl_re_set_registers@@Base+0x418>
   1f678:	mov	x23, x0
   1f67c:	cmn	x0, #0x1
   1f680:	b.eq	1f53c <rpl_re_set_registers@@Base+0x488>  // b.none
   1f684:	ldr	x8, [x19, #64]
   1f688:	add	x24, x23, x27
   1f68c:	cmp	x24, x8
   1f690:	b.hi	1f790 <rpl_re_set_registers@@Base+0x6dc>  // b.pmore
   1f694:	ldr	x0, [x19, #24]
   1f698:	mov	x21, x9
   1f69c:	cbnz	x0, 1f6b0 <rpl_re_set_registers@@Base+0x5fc>
   1f6a0:	lsl	x0, x8, #3
   1f6a4:	bl	a660 <malloc@plt>
   1f6a8:	str	x0, [x19, #24]
   1f6ac:	cbz	x0, 1f7c0 <rpl_re_set_registers@@Base+0x70c>
   1f6b0:	ldrb	w8, [x19, #140]
   1f6b4:	cbnz	w8, 1f6d8 <rpl_re_set_registers@@Base+0x624>
   1f6b8:	cbz	x27, 1f6d0 <rpl_re_set_registers@@Base+0x61c>
   1f6bc:	mov	x8, xzr
   1f6c0:	str	x8, [x0, x8, lsl #3]
   1f6c4:	add	x8, x8, #0x1
   1f6c8:	cmp	x27, x8
   1f6cc:	b.ne	1f6c0 <rpl_re_set_registers@@Base+0x60c>  // b.any
   1f6d0:	mov	w8, #0x1                   	// #1
   1f6d4:	strb	w8, [x19, #140]
   1f6d8:	ldr	x8, [x19, #8]
   1f6dc:	add	x1, sp, #0x8
   1f6e0:	mov	x2, x23
   1f6e4:	add	x0, x8, x27
   1f6e8:	bl	a2f0 <memcpy@plt>
   1f6ec:	ldr	x8, [x19, #16]
   1f6f0:	cmp	x23, #0x2
   1f6f4:	str	w22, [x8, x27, lsl #2]
   1f6f8:	ldr	x9, [x19, #24]
   1f6fc:	str	x25, [x9, x27, lsl #3]
   1f700:	b.cc	1f734 <rpl_re_set_registers@@Base+0x680>  // b.lo, b.ul, b.last
   1f704:	add	x8, x8, x27, lsl #2
   1f708:	add	x9, x9, x27, lsl #3
   1f70c:	mov	w10, #0x1                   	// #1
   1f710:	mov	w11, #0xffffffff            	// #-1
   1f714:	cmp	x10, x20
   1f718:	csel	x12, x10, x28, cc  // cc = lo, ul, last
   1f71c:	add	x12, x12, x25
   1f720:	str	x12, [x9, x10, lsl #3]
   1f724:	str	w11, [x8, x10, lsl #2]
   1f728:	add	x10, x10, #0x1
   1f72c:	cmp	x23, x10
   1f730:	b.ne	1f714 <rpl_re_set_registers@@Base+0x660>  // b.any
   1f734:	ldp	x8, x9, [x19, #88]
   1f738:	add	x8, x8, x21
   1f73c:	cmp	x9, x25
   1f740:	str	x8, [x19, #88]
   1f744:	b.le	1f754 <rpl_re_set_registers@@Base+0x6a0>
   1f748:	ldr	x9, [x19, #104]
   1f74c:	add	x9, x9, x21
   1f750:	str	x9, [x19, #104]
   1f754:	ldr	x9, [x19, #64]
   1f758:	add	x23, x20, x25
   1f75c:	mov	x25, x24
   1f760:	cmp	x9, x8
   1f764:	csel	x26, x8, x9, gt
   1f768:	b	1f4cc <rpl_re_set_registers@@Base+0x418>
   1f76c:	ldr	x8, [x19, #24]
   1f770:	mov	x9, x25
   1f774:	mov	x10, x20
   1f778:	add	x8, x8, x27, lsl #3
   1f77c:	str	x9, [x8], #8
   1f780:	subs	x10, x10, #0x1
   1f784:	add	x9, x9, #0x1
   1f788:	b.ne	1f77c <rpl_re_set_registers@@Base+0x6c8>  // b.any
   1f78c:	b	1f57c <rpl_re_set_registers@@Base+0x4c8>
   1f790:	ldur	x8, [x29, #-8]
   1f794:	str	x8, [x21]
   1f798:	mov	w0, wzr
   1f79c:	stp	x27, x25, [x19, #48]
   1f7a0:	ldp	x20, x19, [sp, #160]
   1f7a4:	ldp	x22, x21, [sp, #144]
   1f7a8:	ldp	x24, x23, [sp, #128]
   1f7ac:	ldp	x26, x25, [sp, #112]
   1f7b0:	ldp	x28, x27, [sp, #96]
   1f7b4:	ldp	x29, x30, [sp, #80]
   1f7b8:	add	sp, sp, #0xb0
   1f7bc:	ret
   1f7c0:	mov	w0, #0xc                   	// #12
   1f7c4:	b	1f7a0 <rpl_re_set_registers@@Base+0x6ec>
   1f7c8:	ldrb	w8, [x9, x8]
   1f7cc:	b	1f644 <rpl_re_set_registers@@Base+0x590>
   1f7d0:	ldr	x9, [x19, #24]
   1f7d4:	str	x25, [x9, x27, lsl #3]
   1f7d8:	b	1f654 <rpl_re_set_registers@@Base+0x5a0>
   1f7dc:	stp	x29, x30, [sp, #-48]!
   1f7e0:	stp	x20, x19, [sp, #32]
   1f7e4:	ldr	x8, [x0, #64]
   1f7e8:	ldr	x9, [x0, #88]
   1f7ec:	ldr	x20, [x0, #48]
   1f7f0:	str	x21, [sp, #16]
   1f7f4:	mov	x19, x0
   1f7f8:	cmp	x8, x9
   1f7fc:	csel	x21, x9, x8, gt
   1f800:	mov	x29, sp
   1f804:	cmp	x20, x21
   1f808:	b.ge	1f840 <rpl_re_set_registers@@Base+0x78c>  // b.tcont
   1f80c:	ldr	x8, [x19]
   1f810:	ldr	x9, [x19, #40]
   1f814:	add	x9, x8, x9
   1f818:	ldr	x8, [x19, #120]
   1f81c:	ldrb	w0, [x9, x20]
   1f820:	cbnz	x8, 1f838 <rpl_re_set_registers@@Base+0x784>
   1f824:	bl	a680 <toupper@plt>
   1f828:	ldr	x8, [x19, #8]
   1f82c:	strb	w0, [x8, x20]
   1f830:	add	x20, x20, #0x1
   1f834:	b	1f804 <rpl_re_set_registers@@Base+0x750>
   1f838:	ldrb	w0, [x8, x0]
   1f83c:	b	1f824 <rpl_re_set_registers@@Base+0x770>
   1f840:	stp	x20, x20, [x19, #48]
   1f844:	ldp	x20, x19, [sp, #32]
   1f848:	ldr	x21, [sp, #16]
   1f84c:	ldp	x29, x30, [sp], #48
   1f850:	ret
   1f854:	sub	sp, sp, #0x90
   1f858:	stp	x29, x30, [sp, #80]
   1f85c:	stp	x24, x23, [sp, #96]
   1f860:	stp	x22, x21, [sp, #112]
   1f864:	stp	x20, x19, [sp, #128]
   1f868:	ldr	x8, [x0, #64]
   1f86c:	ldr	x9, [x0, #88]
   1f870:	ldr	x23, [x0, #48]
   1f874:	mov	x19, x0
   1f878:	add	x29, sp, #0x50
   1f87c:	cmp	x8, x9
   1f880:	csel	x22, x9, x8, gt
   1f884:	cmp	x22, x23
   1f888:	b.le	1fa08 <rpl_re_set_registers@@Base+0x954>
   1f88c:	add	x20, x19, #0x20
   1f890:	ldr	x8, [x19, #120]
   1f894:	ldr	x24, [x19, #32]
   1f898:	sub	x2, x22, x23
   1f89c:	cbnz	x8, 1f960 <rpl_re_set_registers@@Base+0x8ac>
   1f8a0:	ldr	x8, [x19]
   1f8a4:	ldr	x9, [x19, #40]
   1f8a8:	add	x8, x8, x9
   1f8ac:	add	x1, x8, x23
   1f8b0:	add	x0, sp, #0xc
   1f8b4:	mov	x3, x20
   1f8b8:	bl	a430 <rpl_mbrtowc@plt>
   1f8bc:	add	x8, x0, #0x1
   1f8c0:	cmp	x8, #0x2
   1f8c4:	b.cc	1f8e4 <rpl_re_set_registers@@Base+0x830>  // b.lo, b.ul, b.last
   1f8c8:	mov	x21, x0
   1f8cc:	cmn	x0, #0x2
   1f8d0:	b.ne	1f90c <rpl_re_set_registers@@Base+0x858>  // b.any
   1f8d4:	ldr	x8, [x19, #64]
   1f8d8:	ldr	x9, [x19, #88]
   1f8dc:	cmp	x8, x9
   1f8e0:	b.lt	1fa04 <rpl_re_set_registers@@Base+0x950>  // b.tstop
   1f8e4:	ldr	x8, [x19, #40]
   1f8e8:	ldr	x9, [x19]
   1f8ec:	add	x8, x8, x23
   1f8f0:	ldrb	w8, [x9, x8]
   1f8f4:	str	w8, [sp, #12]
   1f8f8:	ldr	x9, [x19, #120]
   1f8fc:	cbnz	x9, 1f9f8 <rpl_re_set_registers@@Base+0x944>
   1f900:	mov	w21, #0x1                   	// #1
   1f904:	str	x24, [x20]
   1f908:	b	1f910 <rpl_re_set_registers@@Base+0x85c>
   1f90c:	ldr	w8, [sp, #12]
   1f910:	ldr	x10, [x19, #16]
   1f914:	add	x24, x21, x23
   1f918:	add	x9, x23, #0x1
   1f91c:	cmp	x9, x24
   1f920:	str	w8, [x10, x23, lsl #2]
   1f924:	b.ge	1f950 <rpl_re_set_registers@@Base+0x89c>  // b.tcont
   1f928:	add	x8, x10, x23, lsl #2
   1f92c:	lsl	x9, x21, #2
   1f930:	add	x0, x8, #0x4
   1f934:	sub	x2, x9, #0x4
   1f938:	mov	w1, #0xff                  	// #255
   1f93c:	bl	a770 <memset@plt>
   1f940:	sub	x8, x21, #0x1
   1f944:	subs	x8, x8, #0x1
   1f948:	b.ne	1f944 <rpl_re_set_registers@@Base+0x890>  // b.any
   1f94c:	mov	x9, x24
   1f950:	cmp	x22, x9
   1f954:	mov	x23, x9
   1f958:	b.gt	1f890 <rpl_re_set_registers@@Base+0x7dc>
   1f95c:	b	1fa0c <rpl_re_set_registers@@Base+0x958>
   1f960:	ldr	w9, [x19, #144]
   1f964:	add	x1, sp, #0x10
   1f968:	cmp	w9, #0x1
   1f96c:	b.lt	1f8b0 <rpl_re_set_registers@@Base+0x7fc>  // b.tstop
   1f970:	cmp	x2, #0x1
   1f974:	b.lt	1f8b0 <rpl_re_set_registers@@Base+0x7fc>  // b.tstop
   1f978:	ldr	x9, [x19, #40]
   1f97c:	ldp	x10, x11, [x19]
   1f980:	add	x1, sp, #0x10
   1f984:	add	x9, x23, x9
   1f988:	ldrb	w9, [x10, x9]
   1f98c:	ldrb	w8, [x8, x9]
   1f990:	strb	w8, [x11, x23]
   1f994:	strb	w8, [sp, #16]
   1f998:	ldr	w8, [x19, #144]
   1f99c:	cmp	w8, #0x2
   1f9a0:	b.lt	1f8b0 <rpl_re_set_registers@@Base+0x7fc>  // b.tstop
   1f9a4:	cmp	x2, #0x2
   1f9a8:	b.lt	1f8b0 <rpl_re_set_registers@@Base+0x7fc>  // b.tstop
   1f9ac:	mov	w8, #0x1                   	// #1
   1f9b0:	ldr	x9, [x19, #40]
   1f9b4:	ldp	x10, x12, [x19]
   1f9b8:	ldr	x11, [x19, #120]
   1f9bc:	add	x1, sp, #0x10
   1f9c0:	add	x9, x10, x9
   1f9c4:	add	x9, x9, x23
   1f9c8:	ldrb	w9, [x9, x8]
   1f9cc:	add	x10, x12, x23
   1f9d0:	ldrb	w9, [x11, x9]
   1f9d4:	strb	w9, [x10, x8]
   1f9d8:	strb	w9, [x1, x8]
   1f9dc:	ldr	w9, [x19, #144]
   1f9e0:	add	x8, x8, #0x1
   1f9e4:	cmp	w9, w8
   1f9e8:	b.le	1f8b0 <rpl_re_set_registers@@Base+0x7fc>
   1f9ec:	cmp	x2, x8
   1f9f0:	b.gt	1f9b0 <rpl_re_set_registers@@Base+0x8fc>
   1f9f4:	b	1f8b0 <rpl_re_set_registers@@Base+0x7fc>
   1f9f8:	ldrb	w8, [x9, w8, uxtw]
   1f9fc:	str	w8, [sp, #12]
   1fa00:	b	1f900 <rpl_re_set_registers@@Base+0x84c>
   1fa04:	str	x24, [x20]
   1fa08:	mov	x9, x23
   1fa0c:	stp	x9, x9, [x19, #48]
   1fa10:	ldp	x20, x19, [sp, #128]
   1fa14:	ldp	x22, x21, [sp, #112]
   1fa18:	ldp	x24, x23, [sp, #96]
   1fa1c:	ldp	x29, x30, [sp, #80]
   1fa20:	add	sp, sp, #0x90
   1fa24:	ret
   1fa28:	ldr	x9, [x0, #64]
   1fa2c:	ldr	x10, [x0, #88]
   1fa30:	ldr	x8, [x0, #48]
   1fa34:	cmp	x9, x10
   1fa38:	csel	x9, x10, x9, gt
   1fa3c:	cmp	x8, x9
   1fa40:	b.ge	1fa68 <rpl_re_set_registers@@Base+0x9b4>  // b.tcont
   1fa44:	ldr	x10, [x0, #40]
   1fa48:	ldp	x11, x13, [x0]
   1fa4c:	ldr	x12, [x0, #120]
   1fa50:	add	x10, x11, x10
   1fa54:	ldrb	w10, [x10, x8]
   1fa58:	ldrb	w10, [x12, x10]
   1fa5c:	strb	w10, [x13, x8]
   1fa60:	add	x8, x8, #0x1
   1fa64:	b	1fa3c <rpl_re_set_registers@@Base+0x988>
   1fa68:	stp	x8, x8, [x0, #48]
   1fa6c:	ret
   1fa70:	sub	sp, sp, #0x80
   1fa74:	stp	x29, x30, [sp, #32]
   1fa78:	stp	x28, x27, [sp, #48]
   1fa7c:	stp	x26, x25, [sp, #64]
   1fa80:	stp	x24, x23, [sp, #80]
   1fa84:	stp	x22, x21, [sp, #96]
   1fa88:	stp	x20, x19, [sp, #112]
   1fa8c:	ldr	x25, [x1]
   1fa90:	add	x29, sp, #0x20
   1fa94:	mov	x20, x5
   1fa98:	mov	x21, x4
   1fa9c:	ldr	x8, [x25, #168]
   1faa0:	mov	x23, x2
   1faa4:	mov	x24, x1
   1faa8:	mov	x26, x0
   1faac:	stp	x8, x3, [sp]
   1fab0:	bl	201f8 <rpl_re_set_registers@@Base+0x1144>
   1fab4:	mov	x19, x0
   1fab8:	cbnz	x0, 1fac4 <rpl_re_set_registers@@Base+0xa10>
   1fabc:	ldr	w8, [x20]
   1fac0:	cbnz	w8, 1fbec <rpl_re_set_registers@@Base+0xb38>
   1fac4:	ldr	x8, [sp, #8]
   1fac8:	mov	w28, #0xa                   	// #10
   1facc:	orr	x27, x8, #0x800000
   1fad0:	ldrb	w8, [x23, #8]
   1fad4:	cmp	w8, #0xa
   1fad8:	b.ne	1fb84 <rpl_re_set_registers@@Base+0xad0>  // b.any
   1fadc:	mov	x0, x23
   1fae0:	mov	x1, x26
   1fae4:	mov	x2, x27
   1fae8:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   1faec:	ldr	x8, [x26, #72]
   1faf0:	add	x8, x8, w0, sxtw
   1faf4:	str	x8, [x26, #72]
   1faf8:	ldrb	w8, [x23, #8]
   1fafc:	orr	w9, w8, #0x8
   1fb00:	cmp	w9, #0xa
   1fb04:	b.ne	1fb2c <rpl_re_set_registers@@Base+0xa78>  // b.any
   1fb08:	mov	x2, xzr
   1fb0c:	add	x3, sp, #0x10
   1fb10:	mov	x0, x25
   1fb14:	mov	x1, x19
   1fb18:	str	w28, [sp, #24]
   1fb1c:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   1fb20:	mov	x19, x0
   1fb24:	cbnz	x0, 1fad0 <rpl_re_set_registers@@Base+0xa1c>
   1fb28:	b	1fb7c <rpl_re_set_registers@@Base+0xac8>
   1fb2c:	cbz	x21, 1fb38 <rpl_re_set_registers@@Base+0xa84>
   1fb30:	cmp	w8, #0x9
   1fb34:	b.eq	1fb08 <rpl_re_set_registers@@Base+0xa54>  // b.none
   1fb38:	ldp	x8, x3, [sp]
   1fb3c:	ldr	x22, [x25, #168]
   1fb40:	mov	x0, x26
   1fb44:	mov	x1, x24
   1fb48:	mov	x2, x23
   1fb4c:	mov	x4, x21
   1fb50:	mov	x5, x20
   1fb54:	str	x8, [x25, #168]
   1fb58:	bl	201f8 <rpl_re_set_registers@@Base+0x1144>
   1fb5c:	mov	x2, x0
   1fb60:	cbnz	x0, 1fb6c <rpl_re_set_registers@@Base+0xab8>
   1fb64:	ldr	w8, [x20]
   1fb68:	cbnz	w8, 1fba8 <rpl_re_set_registers@@Base+0xaf4>
   1fb6c:	ldr	x8, [x25, #168]
   1fb70:	orr	x8, x8, x22
   1fb74:	str	x8, [x25, #168]
   1fb78:	b	1fb0c <rpl_re_set_registers@@Base+0xa58>
   1fb7c:	mov	w8, #0xc                   	// #12
   1fb80:	str	w8, [x20]
   1fb84:	mov	x0, x19
   1fb88:	ldp	x20, x19, [sp, #112]
   1fb8c:	ldp	x22, x21, [sp, #96]
   1fb90:	ldp	x24, x23, [sp, #80]
   1fb94:	ldp	x26, x25, [sp, #64]
   1fb98:	ldp	x28, x27, [sp, #48]
   1fb9c:	ldp	x29, x30, [sp, #32]
   1fba0:	add	sp, sp, #0x80
   1fba4:	ret
   1fba8:	cbz	x19, 1fb84 <rpl_re_set_registers@@Base+0xad0>
   1fbac:	mov	x20, x19
   1fbb0:	ldr	x19, [x19, #8]
   1fbb4:	cbnz	x19, 1fbac <rpl_re_set_registers@@Base+0xaf8>
   1fbb8:	ldr	x19, [x20, #16]
   1fbbc:	cbnz	x19, 1fbac <rpl_re_set_registers@@Base+0xaf8>
   1fbc0:	add	x0, x20, #0x28
   1fbc4:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   1fbc8:	ldr	x8, [x20]
   1fbcc:	cbz	x8, 1fbec <rpl_re_set_registers@@Base+0xb38>
   1fbd0:	ldr	x19, [x8, #16]
   1fbd4:	cmp	x19, x20
   1fbd8:	mov	x20, x8
   1fbdc:	b.eq	1fbc0 <rpl_re_set_registers@@Base+0xb0c>  // b.none
   1fbe0:	mov	x20, x8
   1fbe4:	cbz	x19, 1fbc0 <rpl_re_set_registers@@Base+0xb0c>
   1fbe8:	b	1fbac <rpl_re_set_registers@@Base+0xaf8>
   1fbec:	mov	x19, xzr
   1fbf0:	b	1fb84 <rpl_re_set_registers@@Base+0xad0>
   1fbf4:	sub	sp, sp, #0x50
   1fbf8:	stp	x29, x30, [sp, #16]
   1fbfc:	stp	x24, x23, [sp, #32]
   1fc00:	stp	x22, x21, [sp, #48]
   1fc04:	stp	x20, x19, [sp, #64]
   1fc08:	ldr	x9, [x1, #104]
   1fc0c:	ldr	x8, [x1, #72]
   1fc10:	mov	x19, x0
   1fc14:	add	x29, sp, #0x10
   1fc18:	cmp	x9, x8
   1fc1c:	b.le	1fd00 <rpl_re_set_registers@@Base+0xc4c>
   1fc20:	ldr	x9, [x1, #8]
   1fc24:	mov	x23, x19
   1fc28:	mov	x20, x2
   1fc2c:	mov	x21, x1
   1fc30:	ldrb	w24, [x9, x8]
   1fc34:	strb	w24, [x23], #8
   1fc38:	ldr	w8, [x23]
   1fc3c:	and	w9, w8, #0xff9fffff
   1fc40:	str	w9, [x23]
   1fc44:	ldr	w11, [x1, #144]
   1fc48:	cmp	w11, #0x2
   1fc4c:	b.lt	1fc70 <rpl_re_set_registers@@Base+0xbbc>  // b.tstop
   1fc50:	ldr	x9, [x21, #72]
   1fc54:	ldr	x10, [x21, #48]
   1fc58:	cmp	x9, x10
   1fc5c:	b.eq	1fc70 <rpl_re_set_registers@@Base+0xbbc>  // b.none
   1fc60:	ldr	x10, [x21, #16]
   1fc64:	ldr	w9, [x10, x9, lsl #2]
   1fc68:	cmn	w9, #0x1
   1fc6c:	b.eq	1ff1c <rpl_re_set_registers@@Base+0xe68>  // b.none
   1fc70:	mov	w9, #0xff00                	// #65280
   1fc74:	cmp	w24, #0x5c
   1fc78:	movk	w9, #0xff9f, lsl #16
   1fc7c:	b.ne	1fd10 <rpl_re_set_registers@@Base+0xc5c>  // b.any
   1fc80:	ldr	x12, [x21, #72]
   1fc84:	ldr	x13, [x21, #88]
   1fc88:	add	x10, x12, #0x1
   1fc8c:	cmp	x10, x13
   1fc90:	b.ge	1fd60 <rpl_re_set_registers@@Base+0xcac>  // b.tcont
   1fc94:	ldrb	w13, [x21, #139]
   1fc98:	cbnz	w13, 20194 <rpl_re_set_registers@@Base+0x10e0>
   1fc9c:	ldr	x11, [x21, #8]
   1fca0:	ldrb	w22, [x11, x10]
   1fca4:	and	w8, w8, w9
   1fca8:	orr	w24, w8, #0x1
   1fcac:	strb	w22, [x19]
   1fcb0:	str	w24, [x19, #8]
   1fcb4:	ldr	w8, [x21, #144]
   1fcb8:	cmp	w8, #0x2
   1fcbc:	b.lt	1fe70 <rpl_re_set_registers@@Base+0xdbc>  // b.tstop
   1fcc0:	ldr	x8, [x21, #72]
   1fcc4:	ldr	x9, [x21, #16]
   1fcc8:	add	x8, x9, x8, lsl #2
   1fccc:	ldr	w21, [x8, #4]
   1fcd0:	mov	w0, w21
   1fcd4:	bl	ad50 <iswalnum@plt>
   1fcd8:	ldr	w9, [x23]
   1fcdc:	cmp	w0, #0x0
   1fce0:	mov	w8, #0x5f                  	// #95
   1fce4:	mov	w10, #0x400000              	// #4194304
   1fce8:	ccmp	w21, w8, #0x4, eq  // eq = none
   1fcec:	csel	w8, w10, wzr, eq  // eq = none
   1fcf0:	and	w9, w9, #0xffbfffff
   1fcf4:	orr	w8, w8, w9
   1fcf8:	and	x9, x22, #0xff
   1fcfc:	b	1fe98 <rpl_re_set_registers@@Base+0xde4>
   1fd00:	mov	w8, #0x2                   	// #2
   1fd04:	mov	w0, wzr
   1fd08:	strb	w8, [x19, #8]
   1fd0c:	b	2017c <rpl_re_set_registers@@Base+0x10c8>
   1fd10:	and	w8, w8, w9
   1fd14:	orr	w22, w8, #0x1
   1fd18:	str	w22, [x23]
   1fd1c:	ldr	w8, [x21, #144]
   1fd20:	cmp	w8, #0x2
   1fd24:	b.lt	1fd70 <rpl_re_set_registers@@Base+0xcbc>  // b.tstop
   1fd28:	ldr	x8, [x21, #72]
   1fd2c:	ldr	x9, [x21, #16]
   1fd30:	ldr	w22, [x9, x8, lsl #2]
   1fd34:	mov	w0, w22
   1fd38:	bl	ad50 <iswalnum@plt>
   1fd3c:	ldr	w9, [x23]
   1fd40:	cmp	w0, #0x0
   1fd44:	mov	w8, #0x5f                  	// #95
   1fd48:	ccmp	w22, w8, #0x4, eq  // eq = none
   1fd4c:	mov	w8, #0x400000              	// #4194304
   1fd50:	csel	w8, w8, wzr, eq  // eq = none
   1fd54:	and	w9, w9, #0xffbfffff
   1fd58:	orr	w8, w8, w9
   1fd5c:	b	1fd9c <rpl_re_set_registers@@Base+0xce8>
   1fd60:	and	w8, w8, w9
   1fd64:	mov	w9, #0x24                  	// #36
   1fd68:	orr	w8, w8, w9
   1fd6c:	b	20004 <rpl_re_set_registers@@Base+0xf50>
   1fd70:	bl	aa30 <__ctype_b_loc@plt>
   1fd74:	ldr	x8, [x0]
   1fd78:	cmp	w24, #0x5f
   1fd7c:	cset	w9, eq  // eq = none
   1fd80:	ldrh	w8, [x8, x24, lsl #1]
   1fd84:	and	w8, w8, #0x8
   1fd88:	orr	w8, w9, w8, lsr #3
   1fd8c:	cmp	w8, #0x0
   1fd90:	mov	w8, #0x400000              	// #4194304
   1fd94:	csel	w8, w8, wzr, ne  // ne = any
   1fd98:	orr	w8, w8, w22
   1fd9c:	cmp	w24, #0x3e
   1fda0:	mov	w0, #0x1                   	// #1
   1fda4:	str	w8, [x23]
   1fda8:	b.gt	1fe28 <rpl_re_set_registers@@Base+0xd74>
   1fdac:	sub	w9, w24, #0x24
   1fdb0:	cmp	w9, #0xa
   1fdb4:	b.hi	1ff68 <rpl_re_set_registers@@Base+0xeb4>  // b.pmore
   1fdb8:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   1fdbc:	add	x10, x10, #0xbd0
   1fdc0:	adr	x11, 1fdd0 <rpl_re_set_registers@@Base+0xd1c>
   1fdc4:	ldrb	w12, [x10, x9]
   1fdc8:	add	x11, x11, x12, lsl #2
   1fdcc:	br	x11
   1fdd0:	tbnz	w20, #3, 1fe1c <rpl_re_set_registers@@Base+0xd68>
   1fdd4:	ldr	x9, [x21, #72]
   1fdd8:	ldr	x10, [x21, #88]
   1fddc:	add	x9, x9, #0x1
   1fde0:	cmp	x9, x10
   1fde4:	b.eq	1fe1c <rpl_re_set_registers@@Base+0xd68>  // b.none
   1fde8:	mov	x0, sp
   1fdec:	mov	x1, x21
   1fdf0:	mov	x2, x20
   1fdf4:	str	x9, [x21, #72]
   1fdf8:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   1fdfc:	ldr	x8, [x21, #72]
   1fe00:	sub	x8, x8, #0x1
   1fe04:	str	x8, [x21, #72]
   1fe08:	ldrb	w8, [sp, #8]
   1fe0c:	sub	w8, w8, #0x9
   1fe10:	cmp	w8, #0x1
   1fe14:	b.hi	20008 <rpl_re_set_registers@@Base+0xf54>  // b.pmore
   1fe18:	ldr	w8, [x23]
   1fe1c:	and	w8, w8, #0xffffff00
   1fe20:	mov	w9, #0x20                  	// #32
   1fe24:	b	1fe60 <rpl_re_set_registers@@Base+0xdac>
   1fe28:	cmp	w24, #0x7a
   1fe2c:	b.gt	1fee8 <rpl_re_set_registers@@Base+0xe34>
   1fe30:	cmp	w24, #0x3f
   1fe34:	b.eq	1ffb8 <rpl_re_set_registers@@Base+0xf04>  // b.none
   1fe38:	cmp	w24, #0x5b
   1fe3c:	b.eq	1ffcc <rpl_re_set_registers@@Base+0xf18>  // b.none
   1fe40:	cmp	w24, #0x5e
   1fe44:	b.ne	2017c <rpl_re_set_registers@@Base+0x10c8>  // b.any
   1fe48:	mov	w9, #0x8                   	// #8
   1fe4c:	movk	w9, #0x80, lsl #16
   1fe50:	tst	x20, x9
   1fe54:	b.eq	20030 <rpl_re_set_registers@@Base+0xf7c>  // b.none
   1fe58:	and	w8, w8, #0xffffff00
   1fe5c:	mov	w9, #0x10                  	// #16
   1fe60:	orr	w8, w8, #0xc
   1fe64:	str	w9, [x19]
   1fe68:	str	w8, [x19, #8]
   1fe6c:	b	20008 <rpl_re_set_registers@@Base+0xf54>
   1fe70:	bl	aa30 <__ctype_b_loc@plt>
   1fe74:	ldr	x8, [x0]
   1fe78:	and	x9, x22, #0xff
   1fe7c:	and	w10, w22, #0xff
   1fe80:	cmp	w10, #0x5f
   1fe84:	ldrh	w8, [x8, x9, lsl #1]
   1fe88:	cset	w10, eq  // eq = none
   1fe8c:	ubfx	w8, w8, #3, #1
   1fe90:	orr	w8, w8, w10
   1fe94:	orr	w8, w24, w8, lsl #22
   1fe98:	and	w10, w22, #0xff
   1fe9c:	cmp	w10, #0x5f
   1fea0:	mov	w0, #0x2                   	// #2
   1fea4:	str	w8, [x23]
   1fea8:	b.gt	1ff38 <rpl_re_set_registers@@Base+0xe84>
   1feac:	sub	w11, w10, #0x27
   1feb0:	cmp	w11, #0x2c
   1feb4:	b.hi	20054 <rpl_re_set_registers@@Base+0xfa0>  // b.pmore
   1feb8:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   1febc:	add	x10, x10, #0xbdb
   1fec0:	adr	x12, 1fed0 <rpl_re_set_registers@@Base+0xe1c>
   1fec4:	ldrb	w13, [x10, x11]
   1fec8:	add	x12, x12, x13, lsl #2
   1fecc:	br	x12
   1fed0:	tbnz	w20, #14, 20178 <rpl_re_set_registers@@Base+0x10c4>
   1fed4:	and	w8, w8, #0xffffff00
   1fed8:	sub	x9, x9, #0x31
   1fedc:	orr	w8, w8, #0x4
   1fee0:	str	x9, [x19]
   1fee4:	b	20160 <rpl_re_set_registers@@Base+0x10ac>
   1fee8:	cmp	w24, #0x7b
   1feec:	b.eq	1ffd4 <rpl_re_set_registers@@Base+0xf20>  // b.none
   1fef0:	cmp	w24, #0x7c
   1fef4:	b.eq	1ffec <rpl_re_set_registers@@Base+0xf38>  // b.none
   1fef8:	cmp	w24, #0x7d
   1fefc:	b.ne	2017c <rpl_re_set_registers@@Base+0x10c8>  // b.any
   1ff00:	mvn	w9, w20
   1ff04:	mov	w10, #0x1200                	// #4608
   1ff08:	tst	x9, x10
   1ff0c:	b.ne	20008 <rpl_re_set_registers@@Base+0xf54>  // b.any
   1ff10:	and	w8, w8, #0xffffff00
   1ff14:	orr	w8, w8, #0x18
   1ff18:	b	20004 <rpl_re_set_registers@@Base+0xf50>
   1ff1c:	mov	w9, #0xff00                	// #65280
   1ff20:	movk	w9, #0xff9f, lsl #16
   1ff24:	mov	w10, #0x1                   	// #1
   1ff28:	movk	w10, #0x20, lsl #16
   1ff2c:	and	w8, w8, w9
   1ff30:	orr	w8, w8, w10
   1ff34:	b	20004 <rpl_re_set_registers@@Base+0xf50>
   1ff38:	sub	w9, w10, #0x73
   1ff3c:	cmp	w9, #0xa
   1ff40:	b.hi	20010 <rpl_re_set_registers@@Base+0xf5c>  // b.pmore
   1ff44:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   1ff48:	add	x10, x10, #0xc08
   1ff4c:	adr	x11, 1ff5c <rpl_re_set_registers@@Base+0xea8>
   1ff50:	ldrb	w12, [x10, x9]
   1ff54:	add	x11, x11, x12, lsl #2
   1ff58:	br	x11
   1ff5c:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   1ff60:	mov	w9, #0x22                  	// #34
   1ff64:	b	20170 <rpl_re_set_registers@@Base+0x10bc>
   1ff68:	cmp	w24, #0xa
   1ff6c:	b.ne	2017c <rpl_re_set_registers@@Base+0x10c8>  // b.any
   1ff70:	tbnz	w20, #11, 1fffc <rpl_re_set_registers@@Base+0xf48>
   1ff74:	b	20008 <rpl_re_set_registers@@Base+0xf54>
   1ff78:	tbz	w20, #13, 20008 <rpl_re_set_registers@@Base+0xf54>
   1ff7c:	and	w8, w8, #0xffffff00
   1ff80:	orr	w8, w8, #0x8
   1ff84:	b	20004 <rpl_re_set_registers@@Base+0xf50>
   1ff88:	tbz	w20, #13, 20008 <rpl_re_set_registers@@Base+0xf54>
   1ff8c:	mov	w9, #0x9                   	// #9
   1ff90:	b	20000 <rpl_re_set_registers@@Base+0xf4c>
   1ff94:	mov	w9, #0xb                   	// #11
   1ff98:	b	20000 <rpl_re_set_registers@@Base+0xf4c>
   1ff9c:	mov	w9, #0x402                 	// #1026
   1ffa0:	tst	x20, x9
   1ffa4:	b.ne	20008 <rpl_re_set_registers@@Base+0xf54>  // b.any
   1ffa8:	mov	w9, #0x12                  	// #18
   1ffac:	b	20000 <rpl_re_set_registers@@Base+0xf4c>
   1ffb0:	mov	w9, #0x5                   	// #5
   1ffb4:	b	20000 <rpl_re_set_registers@@Base+0xf4c>
   1ffb8:	mov	w9, #0x402                 	// #1026
   1ffbc:	tst	x20, x9
   1ffc0:	b.ne	20008 <rpl_re_set_registers@@Base+0xf54>  // b.any
   1ffc4:	mov	w9, #0x13                  	// #19
   1ffc8:	b	20000 <rpl_re_set_registers@@Base+0xf4c>
   1ffcc:	mov	w9, #0x14                  	// #20
   1ffd0:	b	20000 <rpl_re_set_registers@@Base+0xf4c>
   1ffd4:	mvn	w9, w20
   1ffd8:	mov	w10, #0x1200                	// #4608
   1ffdc:	tst	x9, x10
   1ffe0:	b.ne	20008 <rpl_re_set_registers@@Base+0xf54>  // b.any
   1ffe4:	mov	w9, #0x17                  	// #23
   1ffe8:	b	20000 <rpl_re_set_registers@@Base+0xf4c>
   1ffec:	mov	w9, #0x8400                	// #33792
   1fff0:	and	x9, x20, x9
   1fff4:	cmp	x9, #0x8, lsl #12
   1fff8:	b.ne	20008 <rpl_re_set_registers@@Base+0xf54>  // b.any
   1fffc:	mov	w9, #0xa                   	// #10
   20000:	bfxil	w8, w9, #0, #8
   20004:	str	w8, [x23]
   20008:	mov	w0, #0x1                   	// #1
   2000c:	b	2017c <rpl_re_set_registers@@Base+0x10c8>
   20010:	cmp	w10, #0x60
   20014:	b.eq	200c0 <rpl_re_set_registers@@Base+0x100c>  // b.none
   20018:	cmp	w10, #0x62
   2001c:	b.ne	2017c <rpl_re_set_registers@@Base+0x10c8>  // b.any
   20020:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   20024:	and	w8, w8, #0xffffff00
   20028:	mov	w9, #0x100                 	// #256
   2002c:	b	20158 <rpl_re_set_registers@@Base+0x10a4>
   20030:	ldr	x9, [x21, #72]
   20034:	cbz	x9, 1fe58 <rpl_re_set_registers@@Base+0xda4>
   20038:	tbz	w20, #11, 20008 <rpl_re_set_registers@@Base+0xf54>
   2003c:	ldr	x10, [x21, #8]
   20040:	add	x9, x9, x10
   20044:	ldurb	w9, [x9, #-1]
   20048:	cmp	w9, #0xa
   2004c:	b.eq	1fe58 <rpl_re_set_registers@@Base+0xda4>  // b.none
   20050:	b	20008 <rpl_re_set_registers@@Base+0xf54>
   20054:	cmp	w10, #0x57
   20058:	b.ne	2017c <rpl_re_set_registers@@Base+0x10c8>  // b.any
   2005c:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   20060:	mov	w9, #0x21                  	// #33
   20064:	b	20170 <rpl_re_set_registers@@Base+0x10bc>
   20068:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   2006c:	and	w8, w8, #0xffffff00
   20070:	orr	w8, w8, #0x20
   20074:	b	20174 <rpl_re_set_registers@@Base+0x10c0>
   20078:	mov	w9, #0x1200                	// #4608
   2007c:	and	x9, x20, x9
   20080:	cmp	x9, #0x200
   20084:	b.ne	20178 <rpl_re_set_registers@@Base+0x10c4>  // b.any
   20088:	mov	w9, #0x17                  	// #23
   2008c:	b	20170 <rpl_re_set_registers@@Base+0x10bc>
   20090:	mov	w9, #0x8400                	// #33792
   20094:	tst	x20, x9
   20098:	b.ne	20178 <rpl_re_set_registers@@Base+0x10c4>  // b.any
   2009c:	mov	w9, #0xa                   	// #10
   200a0:	b	20170 <rpl_re_set_registers@@Base+0x10bc>
   200a4:	mov	w9, #0x1200                	// #4608
   200a8:	and	x9, x20, x9
   200ac:	cmp	x9, #0x200
   200b0:	b.ne	20178 <rpl_re_set_registers@@Base+0x10c4>  // b.any
   200b4:	and	w8, w8, #0xffffff00
   200b8:	orr	w8, w8, #0x18
   200bc:	b	20174 <rpl_re_set_registers@@Base+0x10c0>
   200c0:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   200c4:	and	w8, w8, #0xffffff00
   200c8:	mov	w9, #0x40                  	// #64
   200cc:	b	20158 <rpl_re_set_registers@@Base+0x10a4>
   200d0:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   200d4:	and	w8, w8, #0xffffff00
   200d8:	mov	w9, #0x80                  	// #128
   200dc:	b	20158 <rpl_re_set_registers@@Base+0x10a4>
   200e0:	tbnz	w20, #13, 20178 <rpl_re_set_registers@@Base+0x10c4>
   200e4:	and	w8, w8, #0xffffff00
   200e8:	orr	w8, w8, #0x8
   200ec:	b	20174 <rpl_re_set_registers@@Base+0x10c0>
   200f0:	tbnz	w20, #13, 20178 <rpl_re_set_registers@@Base+0x10c4>
   200f4:	mov	w9, #0x9                   	// #9
   200f8:	b	20170 <rpl_re_set_registers@@Base+0x10bc>
   200fc:	mov	w9, #0x402                 	// #1026
   20100:	and	x9, x20, x9
   20104:	cmp	x9, #0x2
   20108:	b.ne	20178 <rpl_re_set_registers@@Base+0x10c4>  // b.any
   2010c:	mov	w9, #0x12                  	// #18
   20110:	b	20170 <rpl_re_set_registers@@Base+0x10bc>
   20114:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   20118:	and	w8, w8, #0xffffff00
   2011c:	mov	w9, #0x6                   	// #6
   20120:	b	20158 <rpl_re_set_registers@@Base+0x10a4>
   20124:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   20128:	and	w8, w8, #0xffffff00
   2012c:	mov	w9, #0x9                   	// #9
   20130:	b	20158 <rpl_re_set_registers@@Base+0x10a4>
   20134:	mov	w9, #0x402                 	// #1026
   20138:	and	x9, x20, x9
   2013c:	cmp	x9, #0x2
   20140:	b.ne	20178 <rpl_re_set_registers@@Base+0x10c4>  // b.any
   20144:	mov	w9, #0x13                  	// #19
   20148:	b	20170 <rpl_re_set_registers@@Base+0x10bc>
   2014c:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   20150:	and	w8, w8, #0xffffff00
   20154:	mov	w9, #0x200                 	// #512
   20158:	orr	w8, w8, #0xc
   2015c:	str	w9, [x19]
   20160:	str	w8, [x19, #8]
   20164:	b	20178 <rpl_re_set_registers@@Base+0x10c4>
   20168:	tbnz	w20, #19, 20178 <rpl_re_set_registers@@Base+0x10c4>
   2016c:	mov	w9, #0x23                  	// #35
   20170:	bfxil	w8, w9, #0, #8
   20174:	str	w8, [x23]
   20178:	mov	w0, #0x2                   	// #2
   2017c:	ldp	x20, x19, [sp, #64]
   20180:	ldp	x22, x21, [sp, #48]
   20184:	ldp	x24, x23, [sp, #32]
   20188:	ldp	x29, x30, [sp, #16]
   2018c:	add	sp, sp, #0x50
   20190:	ret
   20194:	cmp	w11, #0x2
   20198:	b.lt	201c8 <rpl_re_set_registers@@Base+0x1114>  // b.tstop
   2019c:	ldr	x11, [x21, #16]
   201a0:	ldr	w13, [x11, x10, lsl #2]
   201a4:	cmn	w13, #0x1
   201a8:	b.eq	1fc9c <rpl_re_set_registers@@Base+0xbe8>  // b.none
   201ac:	ldr	x13, [x21, #48]
   201b0:	add	x12, x12, #0x2
   201b4:	cmp	x13, x12
   201b8:	b.eq	201c8 <rpl_re_set_registers@@Base+0x1114>  // b.none
   201bc:	ldr	w11, [x11, x12, lsl #2]
   201c0:	cmn	w11, #0x1
   201c4:	b.eq	1fc9c <rpl_re_set_registers@@Base+0xbe8>  // b.none
   201c8:	ldrb	w11, [x21, #140]
   201cc:	mov	x12, x10
   201d0:	cbz	w11, 201dc <rpl_re_set_registers@@Base+0x1128>
   201d4:	ldr	x12, [x21, #24]
   201d8:	ldr	x12, [x12, x10, lsl #3]
   201dc:	ldr	x13, [x21, #40]
   201e0:	ldr	x14, [x21]
   201e4:	add	x12, x13, x12
   201e8:	ldrsb	w22, [x14, x12]
   201ec:	cbz	w11, 1fca4 <rpl_re_set_registers@@Base+0xbf0>
   201f0:	tbnz	w22, #31, 1fc9c <rpl_re_set_registers@@Base+0xbe8>
   201f4:	b	1fca4 <rpl_re_set_registers@@Base+0xbf0>
   201f8:	sub	sp, sp, #0x70
   201fc:	stp	x29, x30, [sp, #16]
   20200:	stp	x28, x27, [sp, #32]
   20204:	stp	x26, x25, [sp, #48]
   20208:	stp	x24, x23, [sp, #64]
   2020c:	stp	x22, x21, [sp, #80]
   20210:	stp	x20, x19, [sp, #96]
   20214:	ldr	x25, [x1]
   20218:	add	x29, sp, #0x10
   2021c:	mov	x19, x5
   20220:	mov	x21, x4
   20224:	mov	x22, x3
   20228:	mov	x23, x2
   2022c:	mov	x24, x1
   20230:	mov	x26, x0
   20234:	bl	20434 <rpl_re_set_registers@@Base+0x1380>
   20238:	cbnz	x0, 20244 <rpl_re_set_registers@@Base+0x1190>
   2023c:	ldr	w8, [x19]
   20240:	cbnz	w8, 203bc <rpl_re_set_registers@@Base+0x1308>
   20244:	mov	w28, #0x10                  	// #16
   20248:	ldrb	w8, [x23, #8]
   2024c:	mov	x20, x0
   20250:	orr	w9, w8, #0x8
   20254:	cmp	w9, #0xa
   20258:	b.eq	20354 <rpl_re_set_registers@@Base+0x12a0>  // b.none
   2025c:	cbz	x21, 20268 <rpl_re_set_registers@@Base+0x11b4>
   20260:	cmp	w8, #0x9
   20264:	b.eq	20354 <rpl_re_set_registers@@Base+0x12a0>  // b.none
   20268:	mov	x0, x26
   2026c:	mov	x1, x24
   20270:	mov	x2, x23
   20274:	mov	x3, x22
   20278:	mov	x4, x21
   2027c:	mov	x5, x19
   20280:	bl	20434 <rpl_re_set_registers@@Base+0x1380>
   20284:	mov	x27, x0
   20288:	cbnz	x0, 20294 <rpl_re_set_registers@@Base+0x11e0>
   2028c:	ldr	w8, [x19]
   20290:	cbnz	w8, 20378 <rpl_re_set_registers@@Base+0x12c4>
   20294:	cbz	x20, 202bc <rpl_re_set_registers@@Base+0x1208>
   20298:	cbz	x27, 202bc <rpl_re_set_registers@@Base+0x1208>
   2029c:	mov	x3, sp
   202a0:	mov	x0, x25
   202a4:	mov	x1, x20
   202a8:	mov	x2, x27
   202ac:	str	w28, [sp, #8]
   202b0:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   202b4:	cbnz	x0, 20248 <rpl_re_set_registers@@Base+0x1194>
   202b8:	b	202c8 <rpl_re_set_registers@@Base+0x1214>
   202bc:	cmp	x20, #0x0
   202c0:	csel	x0, x27, x20, eq  // eq = none
   202c4:	b	20248 <rpl_re_set_registers@@Base+0x1194>
   202c8:	mov	x21, x27
   202cc:	ldr	x27, [x27, #8]
   202d0:	cbnz	x27, 202c8 <rpl_re_set_registers@@Base+0x1214>
   202d4:	ldr	x27, [x21, #16]
   202d8:	cbnz	x27, 202c8 <rpl_re_set_registers@@Base+0x1214>
   202dc:	add	x0, x21, #0x28
   202e0:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   202e4:	ldr	x8, [x21]
   202e8:	cbz	x8, 20308 <rpl_re_set_registers@@Base+0x1254>
   202ec:	ldr	x27, [x8, #16]
   202f0:	cmp	x27, x21
   202f4:	mov	x21, x8
   202f8:	b.eq	202dc <rpl_re_set_registers@@Base+0x1228>  // b.none
   202fc:	mov	x21, x8
   20300:	cbz	x27, 202dc <rpl_re_set_registers@@Base+0x1228>
   20304:	b	202c8 <rpl_re_set_registers@@Base+0x1214>
   20308:	mov	x21, x20
   2030c:	ldr	x20, [x20, #8]
   20310:	cbnz	x20, 20308 <rpl_re_set_registers@@Base+0x1254>
   20314:	ldr	x20, [x21, #16]
   20318:	cbnz	x20, 20308 <rpl_re_set_registers@@Base+0x1254>
   2031c:	add	x0, x21, #0x28
   20320:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   20324:	ldr	x8, [x21]
   20328:	cbz	x8, 20348 <rpl_re_set_registers@@Base+0x1294>
   2032c:	ldr	x20, [x8, #16]
   20330:	cmp	x20, x21
   20334:	mov	x21, x8
   20338:	b.eq	2031c <rpl_re_set_registers@@Base+0x1268>  // b.none
   2033c:	mov	x21, x8
   20340:	cbz	x20, 2031c <rpl_re_set_registers@@Base+0x1268>
   20344:	b	20308 <rpl_re_set_registers@@Base+0x1254>
   20348:	mov	x20, xzr
   2034c:	mov	w8, #0xc                   	// #12
   20350:	str	w8, [x19]
   20354:	mov	x0, x20
   20358:	ldp	x20, x19, [sp, #96]
   2035c:	ldp	x22, x21, [sp, #80]
   20360:	ldp	x24, x23, [sp, #64]
   20364:	ldp	x26, x25, [sp, #48]
   20368:	ldp	x28, x27, [sp, #32]
   2036c:	ldp	x29, x30, [sp, #16]
   20370:	add	sp, sp, #0x70
   20374:	ret
   20378:	cbz	x20, 20354 <rpl_re_set_registers@@Base+0x12a0>
   2037c:	mov	x19, x20
   20380:	ldr	x20, [x20, #8]
   20384:	cbnz	x20, 2037c <rpl_re_set_registers@@Base+0x12c8>
   20388:	ldr	x20, [x19, #16]
   2038c:	cbnz	x20, 2037c <rpl_re_set_registers@@Base+0x12c8>
   20390:	add	x0, x19, #0x28
   20394:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   20398:	ldr	x8, [x19]
   2039c:	cbz	x8, 203bc <rpl_re_set_registers@@Base+0x1308>
   203a0:	ldr	x20, [x8, #16]
   203a4:	cmp	x20, x19
   203a8:	mov	x19, x8
   203ac:	b.eq	20390 <rpl_re_set_registers@@Base+0x12dc>  // b.none
   203b0:	mov	x19, x8
   203b4:	cbz	x20, 20390 <rpl_re_set_registers@@Base+0x12dc>
   203b8:	b	2037c <rpl_re_set_registers@@Base+0x12c8>
   203bc:	mov	x20, xzr
   203c0:	b	20354 <rpl_re_set_registers@@Base+0x12a0>
   203c4:	stp	x29, x30, [sp, #-48]!
   203c8:	stp	x20, x19, [sp, #32]
   203cc:	mov	x19, x2
   203d0:	mov	x20, x1
   203d4:	str	x21, [sp, #16]
   203d8:	mov	x29, sp
   203dc:	mov	x21, x0
   203e0:	ldr	x0, [x0, #8]
   203e4:	cbnz	x0, 203dc <rpl_re_set_registers@@Base+0x1328>
   203e8:	ldr	x0, [x21, #16]
   203ec:	cbnz	x0, 203dc <rpl_re_set_registers@@Base+0x1328>
   203f0:	mov	x0, x19
   203f4:	mov	x1, x21
   203f8:	blr	x20
   203fc:	cbnz	w0, 20424 <rpl_re_set_registers@@Base+0x1370>
   20400:	ldr	x8, [x21]
   20404:	cbz	x8, 20424 <rpl_re_set_registers@@Base+0x1370>
   20408:	ldr	x0, [x8, #16]
   2040c:	cmp	x0, x21
   20410:	mov	x21, x8
   20414:	b.eq	203f0 <rpl_re_set_registers@@Base+0x133c>  // b.none
   20418:	mov	x21, x8
   2041c:	cbz	x0, 203f0 <rpl_re_set_registers@@Base+0x133c>
   20420:	b	203dc <rpl_re_set_registers@@Base+0x1328>
   20424:	ldp	x20, x19, [sp, #32]
   20428:	ldr	x21, [sp, #16]
   2042c:	ldp	x29, x30, [sp], #48
   20430:	ret
   20434:	sub	sp, sp, #0x120
   20438:	stp	x29, x30, [sp, #192]
   2043c:	stp	x28, x27, [sp, #208]
   20440:	stp	x26, x25, [sp, #224]
   20444:	stp	x24, x23, [sp, #240]
   20448:	stp	x22, x21, [sp, #256]
   2044c:	stp	x20, x19, [sp, #272]
   20450:	ldr	w8, [x2, #8]
   20454:	mov	x19, xzr
   20458:	add	x29, sp, #0xc0
   2045c:	str	x3, [sp, #56]
   20460:	and	w9, w8, #0xff
   20464:	sub	w9, w9, #0x1
   20468:	cmp	w9, #0x23
   2046c:	b.hi	213b0 <rpl_re_set_registers@@Base+0x22fc>  // b.pmore
   20470:	ldr	x23, [x1]
   20474:	adrp	x10, 2a000 <vasnprintf@@Base+0x2944>
   20478:	add	x10, x10, #0xc14
   2047c:	adr	x11, 204a4 <rpl_re_set_registers@@Base+0x13f0>
   20480:	ldrh	w12, [x10, x9, lsl #1]
   20484:	add	x11, x11, x12, lsl #2
   20488:	mov	x20, x5
   2048c:	mov	x25, x4
   20490:	mov	x22, x2
   20494:	mov	x26, x1
   20498:	mov	x28, x0
   2049c:	str	x0, [sp, #48]
   204a0:	br	x11
   204a4:	ldr	x9, [sp, #56]
   204a8:	tbnz	w9, #5, 213a4 <rpl_re_set_registers@@Base+0x22f0>
   204ac:	tbnz	w9, #4, 20808 <rpl_re_set_registers@@Base+0x1754>
   204b0:	ldr	x9, [sp, #56]
   204b4:	tbnz	w9, #17, 2053c <rpl_re_set_registers@@Base+0x1488>
   204b8:	and	w9, w8, #0xff
   204bc:	cmp	w9, #0x9
   204c0:	b.ne	2053c <rpl_re_set_registers@@Base+0x1488>  // b.any
   204c4:	mov	x19, xzr
   204c8:	mov	w8, #0x10                  	// #16
   204cc:	b	213ac <rpl_re_set_registers@@Base+0x22f8>
   204d0:	ldr	x1, [x28, #120]
   204d4:	and	w8, w8, #0xff
   204d8:	cmp	w8, #0x23
   204dc:	adrp	x2, 2a000 <vasnprintf@@Base+0x2944>
   204e0:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   204e4:	cset	w4, eq  // eq = none
   204e8:	add	x2, x2, #0xed6
   204ec:	add	x3, x3, #0x9e6
   204f0:	b	20514 <rpl_re_set_registers@@Base+0x1460>
   204f4:	ldr	x1, [x28, #120]
   204f8:	and	w8, w8, #0xff
   204fc:	cmp	w8, #0x21
   20500:	adrp	x2, 2a000 <vasnprintf@@Base+0x2944>
   20504:	adrp	x3, 28000 <vasnprintf@@Base+0x944>
   20508:	cset	w4, eq  // eq = none
   2050c:	add	x2, x2, #0xed0
   20510:	add	x3, x3, #0xbff
   20514:	mov	x0, x23
   20518:	mov	x5, x20
   2051c:	bl	216c4 <rpl_re_set_registers@@Base+0x2610>
   20520:	mov	x19, x0
   20524:	str	x20, [sp, #40]
   20528:	cbnz	x0, 20e44 <rpl_re_set_registers@@Base+0x1d90>
   2052c:	ldr	w8, [x20]
   20530:	ldr	x25, [sp, #56]
   20534:	cbz	w8, 20f54 <rpl_re_set_registers@@Base+0x1ea0>
   20538:	b	20888 <rpl_re_set_registers@@Base+0x17d4>
   2053c:	and	w8, w8, #0xffffff00
   20540:	orr	w8, w8, #0x1
   20544:	mov	x0, x23
   20548:	mov	x1, xzr
   2054c:	mov	x2, xzr
   20550:	mov	x3, x22
   20554:	str	x20, [sp, #40]
   20558:	str	w8, [x22, #8]
   2055c:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20560:	ldr	x25, [sp, #56]
   20564:	mov	x19, x0
   20568:	cbnz	x0, 20f54 <rpl_re_set_registers@@Base+0x1ea0>
   2056c:	b	206e4 <rpl_re_set_registers@@Base+0x1630>
   20570:	ldr	x9, [sp, #56]
   20574:	tbnz	w9, #24, 213a4 <rpl_re_set_registers@@Base+0x22f0>
   20578:	b	204a4 <rpl_re_set_registers@@Base+0x13f0>
   2057c:	ldr	w8, [x22]
   20580:	ldr	x9, [x23, #168]
   20584:	mov	w10, #0x1                   	// #1
   20588:	lsl	w8, w10, w8
   2058c:	sxtw	x8, w8
   20590:	tst	x9, x8
   20594:	b.eq	214d4 <rpl_re_set_registers@@Base+0x2420>  // b.none
   20598:	ldr	x9, [x23, #160]
   2059c:	mov	x0, x23
   205a0:	mov	x1, xzr
   205a4:	mov	x2, xzr
   205a8:	orr	x8, x9, x8
   205ac:	mov	x3, x22
   205b0:	str	x20, [sp, #40]
   205b4:	str	x8, [x23, #160]
   205b8:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   205bc:	ldr	x25, [sp, #56]
   205c0:	mov	x19, x0
   205c4:	cbz	x0, 206e4 <rpl_re_set_registers@@Base+0x1630>
   205c8:	ldr	x8, [x23, #152]
   205cc:	ldrb	w9, [x23, #176]
   205d0:	add	x8, x8, #0x1
   205d4:	orr	w9, w9, #0x2
   205d8:	str	x8, [x23, #152]
   205dc:	strb	w9, [x23, #176]
   205e0:	b	20f54 <rpl_re_set_registers@@Base+0x1ea0>
   205e4:	str	x20, [sp, #40]
   205e8:	ldr	x20, [x26, #48]
   205ec:	ldr	x21, [sp, #56]
   205f0:	mov	x0, x22
   205f4:	mov	x1, x28
   205f8:	add	x8, x20, #0x1
   205fc:	orr	x2, x21, #0x800000
   20600:	str	x8, [x26, #48]
   20604:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   20608:	ldr	x8, [x28, #72]
   2060c:	add	x8, x8, w0, sxtw
   20610:	str	x8, [x28, #72]
   20614:	ldrb	w8, [x22, #8]
   20618:	cmp	w8, #0x9
   2061c:	b.ne	20860 <rpl_re_set_registers@@Base+0x17ac>  // b.any
   20620:	mov	x1, xzr
   20624:	b	20f0c <rpl_re_set_registers@@Base+0x1e58>
   20628:	mov	x0, x23
   2062c:	mov	x1, xzr
   20630:	mov	x2, xzr
   20634:	mov	x3, x22
   20638:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   2063c:	mov	x19, x0
   20640:	cbz	x0, 21498 <rpl_re_set_registers@@Base+0x23e4>
   20644:	ldr	w8, [x23, #180]
   20648:	ldr	x25, [sp, #56]
   2064c:	str	x20, [sp, #40]
   20650:	cmp	w8, #0x2
   20654:	b.lt	20f54 <rpl_re_set_registers@@Base+0x1ea0>  // b.tstop
   20658:	mov	w20, #0x10                  	// #16
   2065c:	ldr	x9, [x28, #104]
   20660:	ldr	x8, [x28, #72]
   20664:	cmp	x9, x8
   20668:	b.le	20f54 <rpl_re_set_registers@@Base+0x1ea0>
   2066c:	ldr	x9, [x28, #48]
   20670:	cmp	x8, x9
   20674:	b.eq	20f54 <rpl_re_set_registers@@Base+0x1ea0>  // b.none
   20678:	ldr	x9, [x28, #16]
   2067c:	ldr	w8, [x9, x8, lsl #2]
   20680:	cmn	w8, #0x1
   20684:	b.ne	20f54 <rpl_re_set_registers@@Base+0x1ea0>  // b.any
   20688:	mov	x0, x22
   2068c:	mov	x1, x28
   20690:	mov	x2, x25
   20694:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   20698:	ldr	x8, [x28, #72]
   2069c:	mov	x1, xzr
   206a0:	mov	x2, xzr
   206a4:	mov	x3, x22
   206a8:	add	x8, x8, w0, sxtw
   206ac:	mov	x0, x23
   206b0:	str	x8, [x28, #72]
   206b4:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   206b8:	mov	x24, x0
   206bc:	sub	x3, x29, #0x50
   206c0:	mov	x0, x23
   206c4:	mov	x1, x19
   206c8:	mov	x2, x24
   206cc:	stur	w20, [x29, #-72]
   206d0:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   206d4:	cbz	x24, 206e0 <rpl_re_set_registers@@Base+0x162c>
   206d8:	mov	x19, x0
   206dc:	cbnz	x0, 2065c <rpl_re_set_registers@@Base+0x15a8>
   206e0:	mov	x19, xzr
   206e4:	mov	w8, #0xc                   	// #12
   206e8:	ldr	x9, [sp, #40]
   206ec:	str	w8, [x9]
   206f0:	b	213b0 <rpl_re_set_registers@@Base+0x22fc>
   206f4:	mov	x0, x23
   206f8:	mov	x1, xzr
   206fc:	mov	x2, xzr
   20700:	mov	x3, x22
   20704:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20708:	mov	x19, x0
   2070c:	cbz	x0, 21498 <rpl_re_set_registers@@Base+0x23e4>
   20710:	ldr	w8, [x23, #180]
   20714:	ldr	x25, [sp, #56]
   20718:	str	x20, [sp, #40]
   2071c:	cmp	w8, #0x2
   20720:	b.lt	20f54 <rpl_re_set_registers@@Base+0x1ea0>  // b.tstop
   20724:	ldrb	w8, [x23, #176]
   20728:	orr	w8, w8, #0x2
   2072c:	strb	w8, [x23, #176]
   20730:	b	20f54 <rpl_re_set_registers@@Base+0x1ea0>
   20734:	ldr	w8, [x22]
   20738:	mov	w9, #0x30f                 	// #783
   2073c:	tst	w8, w9
   20740:	b.eq	20778 <rpl_re_set_registers@@Base+0x16c4>  // b.none
   20744:	ldrb	w8, [x23, #176]
   20748:	mov	x21, x20
   2074c:	tbnz	w8, #4, 20770 <rpl_re_set_registers@@Base+0x16bc>
   20750:	orr	w9, w8, #0x10
   20754:	strb	w9, [x23, #176]
   20758:	tbnz	w8, #3, 21500 <rpl_re_set_registers@@Base+0x244c>
   2075c:	adrp	x9, 2a000 <vasnprintf@@Base+0x2944>
   20760:	ldr	q0, [x9, #3776]
   20764:	stur	q0, [x23, #184]
   20768:	tbz	w8, #2, 2150c <rpl_re_set_registers@@Base+0x2458>
   2076c:	stp	xzr, xzr, [x23, #200]
   20770:	ldr	w8, [x22]
   20774:	mov	x20, x21
   20778:	cmp	w8, #0x100
   2077c:	b.eq	20e4c <rpl_re_set_registers@@Base+0x1d98>  // b.none
   20780:	cmp	w8, #0x200
   20784:	b.ne	20ec0 <rpl_re_set_registers@@Base+0x1e0c>  // b.any
   20788:	mov	w19, #0xa                   	// #10
   2078c:	mov	w8, #0x5                   	// #5
   20790:	b	20e54 <rpl_re_set_registers@@Base+0x1da0>
   20794:	mov	x19, xzr
   20798:	mov	w8, #0x5                   	// #5
   2079c:	b	213ac <rpl_re_set_registers@@Base+0x22f8>
   207a0:	mov	w0, #0x20                  	// #32
   207a4:	mov	w1, #0x1                   	// #1
   207a8:	stur	xzr, [x29, #-16]
   207ac:	bl	a7f0 <calloc@plt>
   207b0:	mov	x25, x0
   207b4:	mov	w0, #0x50                  	// #80
   207b8:	mov	w1, #0x1                   	// #1
   207bc:	bl	a7f0 <calloc@plt>
   207c0:	mov	x27, x0
   207c4:	str	x20, [sp, #40]
   207c8:	cbz	x25, 214e0 <rpl_re_set_registers@@Base+0x242c>
   207cc:	cbz	x27, 214e0 <rpl_re_set_registers@@Base+0x242c>
   207d0:	ldr	x19, [sp, #56]
   207d4:	mov	x0, x22
   207d8:	mov	x1, x28
   207dc:	mov	x2, x19
   207e0:	bl	218bc <rpl_re_set_registers@@Base+0x2808>
   207e4:	ldr	w8, [x22, #8]
   207e8:	mov	w3, w0
   207ec:	and	w9, w8, #0xff
   207f0:	cmp	w9, #0x19
   207f4:	b.eq	20890 <rpl_re_set_registers@@Base+0x17dc>  // b.none
   207f8:	cmp	w9, #0x2
   207fc:	b.eq	214a8 <rpl_re_set_registers@@Base+0x23f4>  // b.none
   20800:	str	wzr, [sp, #36]
   20804:	b	208e4 <rpl_re_set_registers@@Base+0x1830>
   20808:	ldr	x19, [sp, #56]
   2080c:	mov	x0, x22
   20810:	mov	x1, x28
   20814:	mov	x2, x19
   20818:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   2081c:	ldr	x8, [x28, #72]
   20820:	mov	x1, x26
   20824:	mov	x2, x22
   20828:	mov	x3, x19
   2082c:	add	x8, x8, w0, sxtw
   20830:	str	x8, [x28, #72]
   20834:	mov	x0, x28
   20838:	mov	x4, x25
   2083c:	mov	x5, x20
   20840:	ldp	x20, x19, [sp, #272]
   20844:	ldp	x22, x21, [sp, #256]
   20848:	ldp	x24, x23, [sp, #240]
   2084c:	ldp	x26, x25, [sp, #224]
   20850:	ldp	x28, x27, [sp, #208]
   20854:	ldp	x29, x30, [sp, #192]
   20858:	add	sp, sp, #0x120
   2085c:	b	20434 <rpl_re_set_registers@@Base+0x1380>
   20860:	ldr	x19, [sp, #40]
   20864:	add	x4, x25, #0x1
   20868:	mov	x0, x28
   2086c:	mov	x1, x26
   20870:	mov	x2, x22
   20874:	mov	x3, x21
   20878:	mov	x5, x19
   2087c:	bl	1fa70 <rpl_re_set_registers@@Base+0x9bc>
   20880:	ldr	w8, [x19]
   20884:	cbz	w8, 20efc <rpl_re_set_registers@@Base+0x1e48>
   20888:	mov	x19, xzr
   2088c:	b	213b0 <rpl_re_set_registers@@Base+0x22fc>
   20890:	ldrb	w8, [x27, #32]
   20894:	orr	w8, w8, #0x1
   20898:	strb	w8, [x27, #32]
   2089c:	tbz	w19, #8, 208ac <rpl_re_set_registers@@Base+0x17f8>
   208a0:	ldr	x8, [x25]
   208a4:	orr	x8, x8, #0x400
   208a8:	str	x8, [x25]
   208ac:	ldr	x8, [x28, #72]
   208b0:	ldr	x2, [sp, #56]
   208b4:	mov	x0, x22
   208b8:	mov	x1, x28
   208bc:	add	x8, x8, w3, sxtw
   208c0:	str	x8, [x28, #72]
   208c4:	bl	218bc <rpl_re_set_registers@@Base+0x2808>
   208c8:	ldr	w8, [x22, #8]
   208cc:	and	w9, w8, #0xff
   208d0:	cmp	w9, #0x2
   208d4:	b.eq	214a8 <rpl_re_set_registers@@Base+0x23f4>  // b.none
   208d8:	mov	w3, w0
   208dc:	mov	w9, #0x1                   	// #1
   208e0:	str	w9, [sp, #36]
   208e4:	and	w9, w8, #0xff
   208e8:	cmp	w9, #0x15
   208ec:	b.ne	208fc <rpl_re_set_registers@@Base+0x1848>  // b.any
   208f0:	and	w8, w8, #0xffffff00
   208f4:	orr	w8, w8, #0x1
   208f8:	str	w8, [x22, #8]
   208fc:	ldr	x4, [sp, #56]
   20900:	sub	x21, x29, #0x50
   20904:	mov	w8, #0x3                   	// #3
   20908:	sub	x0, x29, #0x20
   2090c:	mov	w5, #0x1                   	// #1
   20910:	mov	x1, x28
   20914:	mov	x2, x22
   20918:	stur	x21, [x29, #-24]
   2091c:	stur	w8, [x29, #-32]
   20920:	mov	w26, #0x1                   	// #1
   20924:	bl	21a18 <rpl_re_set_registers@@Base+0x2964>
   20928:	cbnz	w0, 214b4 <rpl_re_set_registers@@Base+0x2400>
   2092c:	ldr	x19, [sp, #56]
   20930:	stp	xzr, xzr, [sp, #16]
   20934:	mov	x0, x22
   20938:	mov	x1, x28
   2093c:	mov	x2, x19
   20940:	bl	218bc <rpl_re_set_registers@@Base+0x2808>
   20944:	ldur	w19, [x29, #-32]
   20948:	mov	w24, w0
   2094c:	cmp	w19, #0x2
   20950:	b.eq	20abc <rpl_re_set_registers@@Base+0x1a08>  // b.none
   20954:	cmp	w19, #0x4
   20958:	b.ne	20984 <rpl_re_set_registers@@Base+0x18d0>  // b.any
   2095c:	ldr	x0, [x28, #120]
   20960:	ldur	x4, [x29, #-24]
   20964:	ldr	x5, [sp, #56]
   20968:	sub	x3, x29, #0x10
   2096c:	mov	x1, x25
   20970:	mov	x2, x27
   20974:	bl	21cbc <rpl_re_set_registers@@Base+0x2c08>
   20978:	str	w0, [x20]
   2097c:	cbz	w0, 20af0 <rpl_re_set_registers@@Base+0x1a3c>
   20980:	b	214bc <rpl_re_set_registers@@Base+0x2408>
   20984:	ldrb	w8, [x22, #8]
   20988:	cmp	w8, #0x16
   2098c:	b.eq	2099c <rpl_re_set_registers@@Base+0x18e8>  // b.none
   20990:	cmp	w8, #0x2
   20994:	b.ne	20a94 <rpl_re_set_registers@@Base+0x19e0>  // b.any
   20998:	b	214a0 <rpl_re_set_registers@@Base+0x23ec>
   2099c:	ldr	x8, [x28, #72]
   209a0:	ldr	x2, [sp, #56]
   209a4:	add	x0, sp, #0x40
   209a8:	mov	x1, x28
   209ac:	add	x8, x8, w24, sxtw
   209b0:	str	x8, [x28, #72]
   209b4:	bl	218bc <rpl_re_set_registers@@Base+0x2808>
   209b8:	ldrb	w8, [sp, #72]
   209bc:	cmp	w8, #0x15
   209c0:	b.eq	20a7c <rpl_re_set_registers@@Base+0x19c8>  // b.none
   209c4:	cmp	w8, #0x2
   209c8:	b.eq	214a0 <rpl_re_set_registers@@Base+0x23ec>  // b.none
   209cc:	ldr	x20, [sp, #56]
   209d0:	add	x8, sp, #0x50
   209d4:	mov	w3, w0
   209d8:	stur	x8, [x29, #-40]
   209dc:	mov	w8, #0x3                   	// #3
   209e0:	sub	x0, x29, #0x30
   209e4:	add	x2, sp, #0x40
   209e8:	mov	w5, #0x1                   	// #1
   209ec:	mov	x1, x28
   209f0:	mov	x4, x20
   209f4:	stur	w8, [x29, #-48]
   209f8:	bl	21a18 <rpl_re_set_registers@@Base+0x2964>
   209fc:	cbnz	w0, 214b4 <rpl_re_set_registers@@Base+0x2400>
   20a00:	mov	x0, x22
   20a04:	mov	x1, x28
   20a08:	mov	x2, x20
   20a0c:	bl	218bc <rpl_re_set_registers@@Base+0x2808>
   20a10:	ldr	w8, [x23, #180]
   20a14:	ldur	w21, [x29, #-48]
   20a18:	mov	w24, w0
   20a1c:	mov	w0, #0xb                   	// #11
   20a20:	cmp	w8, #0x1
   20a24:	csel	x20, x27, xzr, gt
   20a28:	cmp	w21, #0x2
   20a2c:	b.eq	214b4 <rpl_re_set_registers@@Base+0x2400>  // b.none
   20a30:	cmp	w21, #0x4
   20a34:	b.eq	214b4 <rpl_re_set_registers@@Base+0x2400>  // b.none
   20a38:	cmp	w19, #0x3
   20a3c:	b.ne	20a50 <rpl_re_set_registers@@Base+0x199c>  // b.any
   20a40:	ldur	x0, [x29, #-24]
   20a44:	bl	a370 <strlen@plt>
   20a48:	cmp	x0, #0x1
   20a4c:	b.hi	214b0 <rpl_re_set_registers@@Base+0x23fc>  // b.pmore
   20a50:	cmp	w21, #0x3
   20a54:	b.ne	20a68 <rpl_re_set_registers@@Base+0x19b4>  // b.any
   20a58:	ldur	x0, [x29, #-40]
   20a5c:	bl	a370 <strlen@plt>
   20a60:	cmp	x0, #0x1
   20a64:	b.hi	214b0 <rpl_re_set_registers@@Base+0x23fc>  // b.pmore
   20a68:	cmp	w19, #0x3
   20a6c:	b.eq	20b80 <rpl_re_set_registers@@Base+0x1acc>  // b.none
   20a70:	cbnz	w19, 20b8c <rpl_re_set_registers@@Base+0x1ad8>
   20a74:	ldurb	w26, [x29, #-24]
   20a78:	b	20b90 <rpl_re_set_registers@@Base+0x1adc>
   20a7c:	ldr	x8, [x28, #72]
   20a80:	neg	w9, w24
   20a84:	add	x8, x8, w9, sxtw
   20a88:	str	x8, [x28, #72]
   20a8c:	mov	w8, #0x1                   	// #1
   20a90:	strb	w8, [x22, #8]
   20a94:	mov	w26, #0x1                   	// #1
   20a98:	cmp	w19, #0x3
   20a9c:	b.hi	215f8 <rpl_re_set_registers@@Base+0x2544>  // b.pmore
   20aa0:	adrp	x11, 2a000 <vasnprintf@@Base+0x2944>
   20aa4:	mov	w8, w19
   20aa8:	add	x11, x11, #0xc5c
   20aac:	adr	x9, 20abc <rpl_re_set_registers@@Base+0x1a08>
   20ab0:	ldrb	w10, [x11, x8]
   20ab4:	add	x9, x9, x10, lsl #2
   20ab8:	br	x9
   20abc:	ldur	x19, [x29, #-24]
   20ac0:	mov	x0, x19
   20ac4:	bl	a370 <strlen@plt>
   20ac8:	cmp	x0, #0x1
   20acc:	b.ne	214b0 <rpl_re_set_registers@@Base+0x23fc>  // b.any
   20ad0:	ldrb	w8, [x19]
   20ad4:	lsr	x9, x8, #3
   20ad8:	and	x9, x9, #0x18
   20adc:	ldr	x10, [x25, x9]
   20ae0:	lsl	x8, x26, x8
   20ae4:	orr	x8, x8, x10
   20ae8:	str	x8, [x25, x9]
   20aec:	str	wzr, [x20]
   20af0:	ldrb	w8, [x22, #8]
   20af4:	cmp	w8, #0x15
   20af8:	b.eq	20d2c <rpl_re_set_registers@@Base+0x1c78>  // b.none
   20afc:	cmp	w8, #0x2
   20b00:	b.eq	214a0 <rpl_re_set_registers@@Base+0x23ec>  // b.none
   20b04:	ldr	x19, [sp, #56]
   20b08:	mov	w8, #0x3                   	// #3
   20b0c:	sub	x0, x29, #0x20
   20b10:	mov	x1, x28
   20b14:	mov	x2, x22
   20b18:	mov	w3, w24
   20b1c:	mov	x4, x19
   20b20:	mov	w5, wzr
   20b24:	stur	x21, [x29, #-24]
   20b28:	stur	w8, [x29, #-32]
   20b2c:	bl	21a18 <rpl_re_set_registers@@Base+0x2964>
   20b30:	cbz	w0, 20934 <rpl_re_set_registers@@Base+0x1880>
   20b34:	b	214b4 <rpl_re_set_registers@@Base+0x2400>
   20b38:	ldurb	w8, [x29, #-24]
   20b3c:	lsr	x9, x8, #3
   20b40:	and	x9, x9, #0x18
   20b44:	ldr	x10, [x25, x9]
   20b48:	lsl	x8, x26, x8
   20b4c:	orr	x8, x8, x10
   20b50:	str	x8, [x25, x9]
   20b54:	b	20af0 <rpl_re_set_registers@@Base+0x1a3c>
   20b58:	ldr	x8, [x27, #40]
   20b5c:	ldr	x9, [sp, #24]
   20b60:	cmp	x9, x8
   20b64:	b.eq	20c9c <rpl_re_set_registers@@Base+0x1be8>  // b.none
   20b68:	ldr	x0, [x27]
   20b6c:	ldur	w9, [x29, #-24]
   20b70:	add	x10, x8, #0x1
   20b74:	str	x10, [x27, #40]
   20b78:	str	w9, [x0, x8, lsl #2]
   20b7c:	b	20af0 <rpl_re_set_registers@@Base+0x1a3c>
   20b80:	ldur	x8, [x29, #-24]
   20b84:	ldrb	w26, [x8]
   20b88:	b	20b90 <rpl_re_set_registers@@Base+0x1adc>
   20b8c:	mov	w26, wzr
   20b90:	cmp	w21, #0x3
   20b94:	b.eq	20ba4 <rpl_re_set_registers@@Base+0x1af0>  // b.none
   20b98:	cbnz	w21, 20bb0 <rpl_re_set_registers@@Base+0x1afc>
   20b9c:	ldurb	w28, [x29, #-40]
   20ba0:	b	20bb4 <rpl_re_set_registers@@Base+0x1b00>
   20ba4:	ldur	x8, [x29, #-40]
   20ba8:	ldrb	w28, [x8]
   20bac:	b	20bb4 <rpl_re_set_registers@@Base+0x1b00>
   20bb0:	mov	w28, wzr
   20bb4:	cmp	w19, #0x3
   20bb8:	b.eq	20bc0 <rpl_re_set_registers@@Base+0x1b0c>  // b.none
   20bbc:	cbnz	w19, 20bd4 <rpl_re_set_registers@@Base+0x1b20>
   20bc0:	cbz	x20, 20bd8 <rpl_re_set_registers@@Base+0x1b24>
   20bc4:	mov	w0, w26
   20bc8:	bl	a950 <btowc@plt>
   20bcc:	mov	w26, w0
   20bd0:	b	20bd8 <rpl_re_set_registers@@Base+0x1b24>
   20bd4:	ldur	w26, [x29, #-24]
   20bd8:	cmp	w21, #0x3
   20bdc:	b.eq	20be4 <rpl_re_set_registers@@Base+0x1b30>  // b.none
   20be0:	cbnz	w21, 20bf8 <rpl_re_set_registers@@Base+0x1b44>
   20be4:	cbz	x20, 20bfc <rpl_re_set_registers@@Base+0x1b48>
   20be8:	mov	w0, w28
   20bec:	bl	a950 <btowc@plt>
   20bf0:	mov	w28, w0
   20bf4:	b	20bfc <rpl_re_set_registers@@Base+0x1b48>
   20bf8:	ldur	w28, [x29, #-40]
   20bfc:	cmn	w26, #0x1
   20c00:	mov	w0, #0x3                   	// #3
   20c04:	b.eq	214b4 <rpl_re_set_registers@@Base+0x2400>  // b.none
   20c08:	cmn	w28, #0x1
   20c0c:	b.eq	214b4 <rpl_re_set_registers@@Base+0x2400>  // b.none
   20c10:	ldr	x8, [sp, #56]
   20c14:	tbz	w8, #16, 20c20 <rpl_re_set_registers@@Base+0x1b6c>
   20c18:	cmp	w26, w28
   20c1c:	b.hi	215cc <rpl_re_set_registers@@Base+0x2518>  // b.pmore
   20c20:	sub	x21, x29, #0x50
   20c24:	mov	w14, #0x1                   	// #1
   20c28:	cbz	x20, 20c50 <rpl_re_set_registers@@Base+0x1b9c>
   20c2c:	ldr	x8, [x20, #64]
   20c30:	ldr	x9, [sp, #16]
   20c34:	cmp	x9, x8
   20c38:	b.eq	20cd0 <rpl_re_set_registers@@Base+0x1c1c>  // b.none
   20c3c:	ldp	x0, x19, [x20, #8]
   20c40:	add	x9, x8, #0x1
   20c44:	str	w26, [x0, x8, lsl #2]
   20c48:	str	x9, [x20, #64]
   20c4c:	str	w28, [x19, x8, lsl #2]
   20c50:	mov	w9, w28
   20c54:	ldp	x20, x28, [sp, #40]
   20c58:	mov	x8, xzr
   20c5c:	mov	w10, w26
   20c60:	cmp	x8, x10
   20c64:	b.cc	20c88 <rpl_re_set_registers@@Base+0x1bd4>  // b.lo, b.ul, b.last
   20c68:	cmp	x8, x9
   20c6c:	b.hi	20c88 <rpl_re_set_registers@@Base+0x1bd4>  // b.pmore
   20c70:	lsr	x11, x8, #3
   20c74:	and	x11, x11, #0x1ffffffffffffff8
   20c78:	ldr	x12, [x25, x11]
   20c7c:	lsl	x13, x14, x8
   20c80:	orr	x12, x12, x13
   20c84:	str	x12, [x25, x11]
   20c88:	add	x8, x8, #0x1
   20c8c:	cmp	x8, #0x100
   20c90:	b.ne	20c60 <rpl_re_set_registers@@Base+0x1bac>  // b.any
   20c94:	mov	w26, #0x1                   	// #1
   20c98:	b	20aec <rpl_re_set_registers@@Base+0x1a38>
   20c9c:	ldr	x8, [sp, #24]
   20ca0:	ldr	x0, [x27]
   20ca4:	mov	w19, #0x1                   	// #1
   20ca8:	bfi	x19, x8, #1, #63
   20cac:	lsl	x1, x19, #2
   20cb0:	bl	a860 <realloc@plt>
   20cb4:	cbz	x0, 215d4 <rpl_re_set_registers@@Base+0x2520>
   20cb8:	ldr	x8, [x27, #40]
   20cbc:	ldr	x28, [sp, #48]
   20cc0:	sub	x21, x29, #0x50
   20cc4:	str	x0, [x27]
   20cc8:	str	x19, [sp, #24]
   20ccc:	b	20b6c <rpl_re_set_registers@@Base+0x1ab8>
   20cd0:	ldr	x8, [sp, #16]
   20cd4:	ldr	x0, [x20, #8]
   20cd8:	mov	w21, #0x1                   	// #1
   20cdc:	bfi	x21, x8, #1, #63
   20ce0:	lsl	x19, x21, #2
   20ce4:	mov	x1, x19
   20ce8:	bl	a860 <realloc@plt>
   20cec:	ldr	x8, [x20, #16]
   20cf0:	str	x0, [sp, #8]
   20cf4:	mov	x1, x19
   20cf8:	mov	x0, x8
   20cfc:	bl	a860 <realloc@plt>
   20d00:	ldr	x8, [sp, #8]
   20d04:	mov	x19, x0
   20d08:	mov	x0, x8
   20d0c:	cbz	x8, 215e4 <rpl_re_set_registers@@Base+0x2530>
   20d10:	cbz	x19, 215e4 <rpl_re_set_registers@@Base+0x2530>
   20d14:	ldr	x8, [x20, #64]
   20d18:	stp	x0, x19, [x20, #8]
   20d1c:	str	x21, [sp, #16]
   20d20:	sub	x21, x29, #0x50
   20d24:	mov	w14, #0x1                   	// #1
   20d28:	b	20c40 <rpl_re_set_registers@@Base+0x1b8c>
   20d2c:	ldr	x8, [x28, #72]
   20d30:	add	x8, x8, w24, sxtw
   20d34:	str	x8, [x28, #72]
   20d38:	ldr	w8, [sp, #36]
   20d3c:	cbz	w8, 20d50 <rpl_re_set_registers@@Base+0x1c9c>
   20d40:	ldp	q0, q1, [x25]
   20d44:	mvn	v0.16b, v0.16b
   20d48:	mvn	v1.16b, v1.16b
   20d4c:	stp	q0, q1, [x25]
   20d50:	ldr	w8, [x23, #180]
   20d54:	cmp	w8, #0x2
   20d58:	b.lt	20d80 <rpl_re_set_registers@@Base+0x1ccc>  // b.tstop
   20d5c:	ldr	x9, [x23, #120]
   20d60:	mov	x10, xzr
   20d64:	ldr	x11, [x9, x10]
   20d68:	ldr	x12, [x25, x10]
   20d6c:	and	x11, x12, x11
   20d70:	str	x11, [x25, x10]
   20d74:	add	x10, x10, #0x8
   20d78:	cmp	x10, #0x20
   20d7c:	b.ne	20d64 <rpl_re_set_registers@@Base+0x1cb0>  // b.any
   20d80:	ldr	x9, [x27, #40]
   20d84:	cbnz	x9, 20da0 <rpl_re_set_registers@@Base+0x1cec>
   20d88:	ldr	x9, [x27, #48]
   20d8c:	cbnz	x9, 20da0 <rpl_re_set_registers@@Base+0x1cec>
   20d90:	ldr	x9, [x27, #56]
   20d94:	cbnz	x9, 20da0 <rpl_re_set_registers@@Base+0x1cec>
   20d98:	ldr	x9, [x27, #64]
   20d9c:	cbz	x9, 21458 <rpl_re_set_registers@@Base+0x23a4>
   20da0:	ldrb	w8, [x23, #176]
   20da4:	mov	w9, #0x6                   	// #6
   20da8:	add	x3, sp, #0x50
   20dac:	mov	x0, x23
   20db0:	orr	w8, w8, #0x2
   20db4:	mov	x1, xzr
   20db8:	mov	x2, xzr
   20dbc:	strb	w8, [x23, #176]
   20dc0:	str	w9, [sp, #88]
   20dc4:	str	x27, [sp, #80]
   20dc8:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20dcc:	cbz	x0, 215d8 <rpl_re_set_registers@@Base+0x2524>
   20dd0:	mov	x19, x0
   20dd4:	mov	x8, xzr
   20dd8:	ldr	x9, [x25, x8]
   20ddc:	cbnz	x9, 20df8 <rpl_re_set_registers@@Base+0x1d44>
   20de0:	add	x8, x8, #0x8
   20de4:	cmp	x8, #0x20
   20de8:	b.ne	20dd8 <rpl_re_set_registers@@Base+0x1d24>  // b.any
   20dec:	mov	x0, x25
   20df0:	bl	aaa0 <free@plt>
   20df4:	b	20e40 <rpl_re_set_registers@@Base+0x1d8c>
   20df8:	mov	w8, #0x3                   	// #3
   20dfc:	add	x3, sp, #0x50
   20e00:	mov	x0, x23
   20e04:	mov	x1, xzr
   20e08:	mov	x2, xzr
   20e0c:	str	w8, [sp, #88]
   20e10:	str	x25, [sp, #80]
   20e14:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20e18:	cbz	x0, 215d8 <rpl_re_set_registers@@Base+0x2524>
   20e1c:	mov	w8, #0xa                   	// #10
   20e20:	mov	x1, x0
   20e24:	stur	w8, [x29, #-72]
   20e28:	sub	x3, x29, #0x50
   20e2c:	mov	x0, x23
   20e30:	mov	x2, x19
   20e34:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20e38:	mov	x19, x0
   20e3c:	cbz	x0, 215d8 <rpl_re_set_registers@@Base+0x2524>
   20e40:	cbz	x19, 2052c <rpl_re_set_registers@@Base+0x1478>
   20e44:	ldr	x25, [sp, #56]
   20e48:	b	20f54 <rpl_re_set_registers@@Base+0x1ea0>
   20e4c:	mov	w19, #0x9                   	// #9
   20e50:	mov	w8, #0x6                   	// #6
   20e54:	mov	x0, x23
   20e58:	mov	x1, xzr
   20e5c:	mov	x2, xzr
   20e60:	mov	x3, x22
   20e64:	str	w8, [x22]
   20e68:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20e6c:	mov	x25, x0
   20e70:	mov	x0, x23
   20e74:	mov	x1, xzr
   20e78:	mov	x2, xzr
   20e7c:	mov	x3, x22
   20e80:	str	w19, [x22]
   20e84:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20e88:	mov	x24, x0
   20e8c:	mov	w8, #0xa                   	// #10
   20e90:	sub	x3, x29, #0x50
   20e94:	mov	x0, x23
   20e98:	mov	x1, x25
   20e9c:	mov	x2, x24
   20ea0:	stur	w8, [x29, #-72]
   20ea4:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20ea8:	cbz	x25, 20eb8 <rpl_re_set_registers@@Base+0x1e04>
   20eac:	cbz	x24, 20eb8 <rpl_re_set_registers@@Base+0x1e04>
   20eb0:	mov	x19, x0
   20eb4:	cbnz	x0, 20edc <rpl_re_set_registers@@Base+0x1e28>
   20eb8:	mov	x19, xzr
   20ebc:	b	21498 <rpl_re_set_registers@@Base+0x23e4>
   20ec0:	mov	x0, x23
   20ec4:	mov	x1, xzr
   20ec8:	mov	x2, xzr
   20ecc:	mov	x3, x22
   20ed0:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20ed4:	mov	x19, x0
   20ed8:	cbz	x0, 21498 <rpl_re_set_registers@@Base+0x23e4>
   20edc:	ldr	x2, [sp, #56]
   20ee0:	mov	x0, x22
   20ee4:	mov	x1, x28
   20ee8:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   20eec:	ldr	x8, [x28, #72]
   20ef0:	add	x8, x8, w0, sxtw
   20ef4:	str	x8, [x28, #72]
   20ef8:	b	213b0 <rpl_re_set_registers@@Base+0x22fc>
   20efc:	ldrb	w8, [x22, #8]
   20f00:	mov	x1, x0
   20f04:	cmp	w8, #0x9
   20f08:	b.ne	2157c <rpl_re_set_registers@@Base+0x24c8>  // b.any
   20f0c:	mov	x25, x21
   20f10:	cmp	x20, #0x8
   20f14:	b.hi	20f30 <rpl_re_set_registers@@Base+0x1e7c>  // b.pmore
   20f18:	ldr	x8, [x23, #168]
   20f1c:	mov	w9, #0x1                   	// #1
   20f20:	lsl	w9, w9, w20
   20f24:	sxtw	x9, w9
   20f28:	orr	x8, x8, x9
   20f2c:	str	x8, [x23, #168]
   20f30:	mov	w8, #0x11                  	// #17
   20f34:	sub	x3, x29, #0x50
   20f38:	mov	x0, x23
   20f3c:	mov	x2, xzr
   20f40:	stur	w8, [x29, #-72]
   20f44:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   20f48:	mov	x19, x0
   20f4c:	cbz	x0, 206e4 <rpl_re_set_registers@@Base+0x1630>
   20f50:	str	x20, [x19, #40]
   20f54:	mov	x0, x22
   20f58:	mov	x1, x28
   20f5c:	mov	x2, x25
   20f60:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   20f64:	ldr	x8, [x28, #72]
   20f68:	mov	w26, #0x1                   	// #1
   20f6c:	mov	w21, #0xa                   	// #10
   20f70:	mov	w20, #0x10                  	// #16
   20f74:	add	x8, x8, w0, sxtw
   20f78:	str	x8, [x28, #72]
   20f7c:	ldrb	w8, [x22, #8]
   20f80:	cmp	w8, #0x17
   20f84:	b.hi	213b0 <rpl_re_set_registers@@Base+0x22fc>  // b.pmore
   20f88:	mov	w10, #0x800                 	// #2048
   20f8c:	lsl	w9, w26, w8
   20f90:	movk	w10, #0x8c, lsl #16
   20f94:	tst	w9, w10
   20f98:	b.eq	213b0 <rpl_re_set_registers@@Base+0x22fc>  // b.none
   20f9c:	ldr	q0, [x22]
   20fa0:	ldr	x24, [x28, #72]
   20fa4:	cmp	w8, #0x17
   20fa8:	str	q0, [sp, #80]
   20fac:	b.ne	20fe8 <rpl_re_set_registers@@Base+0x1f34>  // b.any
   20fb0:	mov	x0, x28
   20fb4:	mov	x1, x22
   20fb8:	mov	x2, x25
   20fbc:	bl	22434 <rpl_re_set_registers@@Base+0x3380>
   20fc0:	cmn	x0, #0x1
   20fc4:	b.ne	21000 <rpl_re_set_registers@@Base+0x1f4c>  // b.any
   20fc8:	ldrb	w8, [x22, #8]
   20fcc:	cmp	w8, #0x1
   20fd0:	b.ne	211fc <rpl_re_set_registers@@Base+0x2148>  // b.any
   20fd4:	ldrb	w9, [x22]
   20fd8:	cmp	w9, #0x2c
   20fdc:	b.ne	211fc <rpl_re_set_registers@@Base+0x2148>  // b.any
   20fe0:	mov	x27, xzr
   20fe4:	b	21010 <rpl_re_set_registers@@Base+0x1f5c>
   20fe8:	cmp	w8, #0x12
   20fec:	cset	w27, eq  // eq = none
   20ff0:	cmp	w8, #0x13
   20ff4:	mov	w8, #0x1                   	// #1
   20ff8:	cneg	x26, x8, ne  // ne = any
   20ffc:	b	2107c <rpl_re_set_registers@@Base+0x1fc8>
   21000:	mov	x27, x0
   21004:	cmn	x0, #0x2
   21008:	b.eq	2120c <rpl_re_set_registers@@Base+0x2158>  // b.none
   2100c:	ldr	w8, [x22, #8]
   21010:	and	w8, w8, #0xff
   21014:	cmp	w8, #0x18
   21018:	mov	x26, x27
   2101c:	b.eq	21050 <rpl_re_set_registers@@Base+0x1f9c>  // b.none
   21020:	cmp	w8, #0x1
   21024:	b.ne	2120c <rpl_re_set_registers@@Base+0x2158>  // b.any
   21028:	ldrb	w8, [x22]
   2102c:	cmp	w8, #0x2c
   21030:	b.ne	2120c <rpl_re_set_registers@@Base+0x2158>  // b.any
   21034:	mov	x0, x28
   21038:	mov	x1, x22
   2103c:	mov	x2, x25
   21040:	bl	22434 <rpl_re_set_registers@@Base+0x3380>
   21044:	mov	x26, x0
   21048:	cmn	x0, #0x2
   2104c:	b.eq	2120c <rpl_re_set_registers@@Base+0x2158>  // b.none
   21050:	cmn	x26, #0x1
   21054:	b.eq	21060 <rpl_re_set_registers@@Base+0x1fac>  // b.none
   21058:	cmp	x27, x26
   2105c:	b.gt	21350 <rpl_re_set_registers@@Base+0x229c>
   21060:	ldrb	w8, [x22, #8]
   21064:	cmp	w8, #0x18
   21068:	b.ne	21350 <rpl_re_set_registers@@Base+0x229c>  // b.any
   2106c:	cmn	x26, #0x1
   21070:	csel	x8, x27, x26, eq  // eq = none
   21074:	cmp	x8, #0x8, lsl #12
   21078:	b.ge	21384 <rpl_re_set_registers@@Base+0x22d0>  // b.tcont
   2107c:	mov	x0, x22
   21080:	mov	x1, x28
   21084:	mov	x2, x25
   21088:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   2108c:	ldr	x8, [x28, #72]
   21090:	add	x8, x8, w0, sxtw
   21094:	str	x8, [x28, #72]
   21098:	cbz	x19, 21264 <rpl_re_set_registers@@Base+0x21b0>
   2109c:	orr	x8, x26, x27
   210a0:	cbz	x8, 2126c <rpl_re_set_registers@@Base+0x21b8>
   210a4:	subs	x28, x27, #0x1
   210a8:	b.ge	212bc <rpl_re_set_registers@@Base+0x2208>  // b.tcont
   210ac:	mov	x24, xzr
   210b0:	mov	x28, x19
   210b4:	ldrb	w8, [x28, #48]
   210b8:	cmp	w8, #0x11
   210bc:	b.ne	21124 <rpl_re_set_registers@@Base+0x2070>  // b.any
   210c0:	ldr	x8, [x28, #40]
   210c4:	mov	x10, x28
   210c8:	mov	x9, x10
   210cc:	ldr	x10, [x10, #8]
   210d0:	cbnz	x10, 210c8 <rpl_re_set_registers@@Base+0x2014>
   210d4:	ldr	x10, [x9, #16]
   210d8:	cbnz	x10, 210c8 <rpl_re_set_registers@@Base+0x2014>
   210dc:	ldr	w10, [x9, #48]
   210e0:	and	w11, w10, #0xff
   210e4:	cmp	w11, #0x11
   210e8:	b.ne	21100 <rpl_re_set_registers@@Base+0x204c>  // b.any
   210ec:	ldr	x11, [x9, #40]
   210f0:	cmp	x11, x8
   210f4:	b.ne	21100 <rpl_re_set_registers@@Base+0x204c>  // b.any
   210f8:	orr	w10, w10, #0x80000
   210fc:	str	w10, [x9, #48]
   21100:	ldr	x11, [x9]
   21104:	cbz	x11, 21124 <rpl_re_set_registers@@Base+0x2070>
   21108:	ldr	x10, [x11, #16]
   2110c:	cmp	x10, x9
   21110:	mov	x9, x11
   21114:	b.eq	210dc <rpl_re_set_registers@@Base+0x2028>  // b.none
   21118:	mov	x9, x11
   2111c:	cbz	x10, 210dc <rpl_re_set_registers@@Base+0x2028>
   21120:	b	210c8 <rpl_re_set_registers@@Base+0x2014>
   21124:	cmn	x26, #0x1
   21128:	cinc	w8, w21, eq  // eq = none
   2112c:	sub	x3, x29, #0x50
   21130:	mov	x0, x23
   21134:	mov	x1, x28
   21138:	mov	x2, xzr
   2113c:	stur	w8, [x29, #-72]
   21140:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   21144:	cbz	x0, 21334 <rpl_re_set_registers@@Base+0x2280>
   21148:	add	x8, x27, #0x2
   2114c:	mov	x25, x0
   21150:	cmp	x8, x26
   21154:	b.gt	211b8 <rpl_re_set_registers@@Base+0x2104>
   21158:	add	x27, x27, #0x1
   2115c:	mov	x0, x28
   21160:	mov	x1, x23
   21164:	bl	22514 <rpl_re_set_registers@@Base+0x3460>
   21168:	mov	x28, x0
   2116c:	sub	x3, x29, #0x50
   21170:	mov	x0, x23
   21174:	mov	x1, x25
   21178:	mov	x2, x28
   2117c:	stur	w20, [x29, #-72]
   21180:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   21184:	cbz	x28, 21334 <rpl_re_set_registers@@Base+0x2280>
   21188:	mov	x1, x0
   2118c:	cbz	x0, 21334 <rpl_re_set_registers@@Base+0x2280>
   21190:	sub	x3, x29, #0x50
   21194:	mov	x0, x23
   21198:	mov	x2, xzr
   2119c:	stur	w21, [x29, #-72]
   211a0:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   211a4:	cbz	x0, 21334 <rpl_re_set_registers@@Base+0x2280>
   211a8:	add	x27, x27, #0x1
   211ac:	mov	x25, x0
   211b0:	cmp	x27, x26
   211b4:	b.lt	2115c <rpl_re_set_registers@@Base+0x20a8>  // b.tstop
   211b8:	ldr	x28, [sp, #48]
   211bc:	mov	w26, #0x1                   	// #1
   211c0:	cbz	x24, 211e8 <rpl_re_set_registers@@Base+0x2134>
   211c4:	sub	x3, x29, #0x50
   211c8:	mov	x0, x23
   211cc:	mov	x1, x24
   211d0:	mov	x2, x25
   211d4:	stur	w20, [x29, #-72]
   211d8:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   211dc:	ldr	x25, [sp, #56]
   211e0:	mov	x24, x0
   211e4:	b	21228 <rpl_re_set_registers@@Base+0x2174>
   211e8:	mov	x24, x25
   211ec:	ldr	x25, [sp, #56]
   211f0:	cmp	x24, #0x0
   211f4:	cset	w8, eq  // eq = none
   211f8:	b	21240 <rpl_re_set_registers@@Base+0x218c>
   211fc:	ldr	x8, [sp, #40]
   21200:	mov	x24, xzr
   21204:	str	w21, [x8]
   21208:	b	21228 <rpl_re_set_registers@@Base+0x2174>
   2120c:	tbz	w25, #21, 21360 <rpl_re_set_registers@@Base+0x22ac>
   21210:	str	x24, [x28, #72]
   21214:	ldr	q0, [sp, #80]
   21218:	mov	w26, #0x1                   	// #1
   2121c:	mov	x24, x19
   21220:	str	q0, [x22]
   21224:	strb	w26, [x22, #8]
   21228:	cmp	x24, #0x0
   2122c:	cset	w8, eq  // eq = none
   21230:	cbnz	x24, 21240 <rpl_re_set_registers@@Base+0x218c>
   21234:	ldr	x9, [sp, #40]
   21238:	ldr	w9, [x9]
   2123c:	cbnz	w9, 21414 <rpl_re_set_registers@@Base+0x2360>
   21240:	mov	x19, x24
   21244:	tbz	w25, #24, 20f7c <rpl_re_set_registers@@Base+0x1ec8>
   21248:	ldrb	w9, [x22, #8]
   2124c:	cmp	w9, #0x17
   21250:	b.eq	2139c <rpl_re_set_registers@@Base+0x22e8>  // b.none
   21254:	cmp	w9, #0xb
   21258:	mov	x19, x24
   2125c:	b.ne	20f7c <rpl_re_set_registers@@Base+0x1ec8>  // b.any
   21260:	b	2139c <rpl_re_set_registers@@Base+0x22e8>
   21264:	mov	x24, xzr
   21268:	b	21348 <rpl_re_set_registers@@Base+0x2294>
   2126c:	mov	x8, x19
   21270:	mov	w26, #0x1                   	// #1
   21274:	mov	x24, x8
   21278:	ldr	x8, [x8, #8]
   2127c:	cbnz	x8, 21274 <rpl_re_set_registers@@Base+0x21c0>
   21280:	ldr	x8, [x24, #16]
   21284:	cbnz	x8, 21274 <rpl_re_set_registers@@Base+0x21c0>
   21288:	add	x0, x24, #0x28
   2128c:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   21290:	ldr	x9, [x24]
   21294:	cbz	x9, 212b4 <rpl_re_set_registers@@Base+0x2200>
   21298:	ldr	x8, [x9, #16]
   2129c:	cmp	x8, x24
   212a0:	mov	x24, x9
   212a4:	b.eq	21288 <rpl_re_set_registers@@Base+0x21d4>  // b.none
   212a8:	mov	x24, x9
   212ac:	cbz	x8, 21288 <rpl_re_set_registers@@Base+0x21d4>
   212b0:	b	21274 <rpl_re_set_registers@@Base+0x21c0>
   212b4:	mov	x24, xzr
   212b8:	b	21228 <rpl_re_set_registers@@Base+0x2174>
   212bc:	mov	x24, x19
   212c0:	mov	x25, x19
   212c4:	b.eq	2130c <rpl_re_set_registers@@Base+0x2258>  // b.none
   212c8:	mov	x25, x19
   212cc:	mov	x24, x19
   212d0:	mov	x0, x25
   212d4:	mov	x1, x23
   212d8:	bl	22514 <rpl_re_set_registers@@Base+0x3460>
   212dc:	mov	x25, x0
   212e0:	sub	x3, x29, #0x50
   212e4:	mov	x0, x23
   212e8:	mov	x1, x24
   212ec:	mov	x2, x25
   212f0:	stur	w20, [x29, #-72]
   212f4:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   212f8:	cbz	x25, 21334 <rpl_re_set_registers@@Base+0x2280>
   212fc:	mov	x24, x0
   21300:	cbz	x0, 21334 <rpl_re_set_registers@@Base+0x2280>
   21304:	subs	x28, x28, #0x1
   21308:	b.ne	212d0 <rpl_re_set_registers@@Base+0x221c>  // b.any
   2130c:	cmp	x27, x26
   21310:	b.ne	21320 <rpl_re_set_registers@@Base+0x226c>  // b.any
   21314:	ldr	x28, [sp, #48]
   21318:	mov	w26, #0x1                   	// #1
   2131c:	b	211ec <rpl_re_set_registers@@Base+0x2138>
   21320:	mov	x0, x25
   21324:	mov	x1, x23
   21328:	bl	22514 <rpl_re_set_registers@@Base+0x3460>
   2132c:	mov	x28, x0
   21330:	cbnz	x0, 210b4 <rpl_re_set_registers@@Base+0x2000>
   21334:	ldp	x8, x28, [sp, #40]
   21338:	ldr	x25, [sp, #56]
   2133c:	mov	w9, #0xc                   	// #12
   21340:	mov	x24, xzr
   21344:	str	w9, [x8]
   21348:	mov	w26, #0x1                   	// #1
   2134c:	b	21228 <rpl_re_set_registers@@Base+0x2174>
   21350:	ldr	x8, [sp, #40]
   21354:	mov	x24, xzr
   21358:	mov	w26, #0x1                   	// #1
   2135c:	b	21204 <rpl_re_set_registers@@Base+0x2150>
   21360:	ldrb	w8, [x22, #8]
   21364:	ldr	x9, [sp, #40]
   21368:	mov	x24, xzr
   2136c:	mov	w26, #0x1                   	// #1
   21370:	cmp	w8, #0x2
   21374:	mov	w8, #0x9                   	// #9
   21378:	cinc	w8, w8, ne  // ne = any
   2137c:	str	w8, [x9]
   21380:	b	21228 <rpl_re_set_registers@@Base+0x2174>
   21384:	ldr	x8, [sp, #40]
   21388:	mov	w9, #0xf                   	// #15
   2138c:	mov	x24, xzr
   21390:	mov	w26, #0x1                   	// #1
   21394:	str	w9, [x8]
   21398:	b	21228 <rpl_re_set_registers@@Base+0x2174>
   2139c:	ldr	x20, [sp, #40]
   213a0:	tbz	w8, #0, 213d4 <rpl_re_set_registers@@Base+0x2320>
   213a4:	mov	x19, xzr
   213a8:	mov	w8, #0xd                   	// #13
   213ac:	str	w8, [x20]
   213b0:	mov	x0, x19
   213b4:	ldp	x20, x19, [sp, #272]
   213b8:	ldp	x22, x21, [sp, #256]
   213bc:	ldp	x24, x23, [sp, #240]
   213c0:	ldp	x26, x25, [sp, #224]
   213c4:	ldp	x28, x27, [sp, #208]
   213c8:	ldp	x29, x30, [sp, #192]
   213cc:	add	sp, sp, #0x120
   213d0:	ret
   213d4:	mov	x19, x24
   213d8:	ldr	x24, [x24, #8]
   213dc:	cbnz	x24, 213d4 <rpl_re_set_registers@@Base+0x2320>
   213e0:	ldr	x24, [x19, #16]
   213e4:	cbnz	x24, 213d4 <rpl_re_set_registers@@Base+0x2320>
   213e8:	add	x0, x19, #0x28
   213ec:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   213f0:	ldr	x8, [x19]
   213f4:	cbz	x8, 213a4 <rpl_re_set_registers@@Base+0x22f0>
   213f8:	ldr	x24, [x8, #16]
   213fc:	cmp	x24, x19
   21400:	mov	x19, x8
   21404:	b.eq	213e8 <rpl_re_set_registers@@Base+0x2334>  // b.none
   21408:	mov	x19, x8
   2140c:	cbz	x24, 213e8 <rpl_re_set_registers@@Base+0x2334>
   21410:	b	213d4 <rpl_re_set_registers@@Base+0x2320>
   21414:	cbz	x19, 213b0 <rpl_re_set_registers@@Base+0x22fc>
   21418:	mov	x20, x19
   2141c:	ldr	x19, [x19, #8]
   21420:	cbnz	x19, 21418 <rpl_re_set_registers@@Base+0x2364>
   21424:	ldr	x19, [x20, #16]
   21428:	cbnz	x19, 21418 <rpl_re_set_registers@@Base+0x2364>
   2142c:	add	x0, x20, #0x28
   21430:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   21434:	ldr	x8, [x20]
   21438:	cbz	x8, 20888 <rpl_re_set_registers@@Base+0x17d4>
   2143c:	ldr	x19, [x8, #16]
   21440:	cmp	x19, x20
   21444:	mov	x20, x8
   21448:	b.eq	2142c <rpl_re_set_registers@@Base+0x2378>  // b.none
   2144c:	mov	x20, x8
   21450:	cbz	x19, 2142c <rpl_re_set_registers@@Base+0x2378>
   21454:	b	21418 <rpl_re_set_registers@@Base+0x2364>
   21458:	cmp	w8, #0x2
   2145c:	b.lt	21470 <rpl_re_set_registers@@Base+0x23bc>  // b.tstop
   21460:	ldr	x8, [x27, #72]
   21464:	cbnz	x8, 20da0 <rpl_re_set_registers@@Base+0x1cec>
   21468:	ldrb	w8, [x27, #32]
   2146c:	tbnz	w8, #0, 20da0 <rpl_re_set_registers@@Base+0x1cec>
   21470:	mov	x0, x27
   21474:	bl	1f17c <rpl_re_set_registers@@Base+0xc8>
   21478:	mov	w8, #0x3                   	// #3
   2147c:	add	x3, sp, #0x50
   21480:	mov	x0, x23
   21484:	mov	x1, xzr
   21488:	mov	x2, xzr
   2148c:	str	w8, [sp, #88]
   21490:	str	x25, [sp, #80]
   21494:	b	20e34 <rpl_re_set_registers@@Base+0x1d80>
   21498:	mov	w8, #0xc                   	// #12
   2149c:	b	213ac <rpl_re_set_registers@@Base+0x22f8>
   214a0:	mov	w0, #0x7                   	// #7
   214a4:	b	214b4 <rpl_re_set_registers@@Base+0x2400>
   214a8:	mov	w8, #0x2                   	// #2
   214ac:	b	215dc <rpl_re_set_registers@@Base+0x2528>
   214b0:	mov	w0, #0x3                   	// #3
   214b4:	ldp	x20, x28, [sp, #40]
   214b8:	str	w0, [x20]
   214bc:	mov	x0, x25
   214c0:	bl	aaa0 <free@plt>
   214c4:	mov	x0, x27
   214c8:	bl	1f17c <rpl_re_set_registers@@Base+0xc8>
   214cc:	mov	x19, xzr
   214d0:	b	20e40 <rpl_re_set_registers@@Base+0x1d8c>
   214d4:	mov	x19, xzr
   214d8:	mov	w8, #0x6                   	// #6
   214dc:	b	213ac <rpl_re_set_registers@@Base+0x22f8>
   214e0:	mov	x0, x25
   214e4:	bl	aaa0 <free@plt>
   214e8:	mov	x0, x27
   214ec:	bl	aaa0 <free@plt>
   214f0:	mov	w8, #0xc                   	// #12
   214f4:	mov	x19, xzr
   214f8:	str	w8, [x20]
   214fc:	b	20e40 <rpl_re_set_registers@@Base+0x1d8c>
   21500:	mov	x20, xzr
   21504:	mov	x19, xzr
   21508:	b	21514 <rpl_re_set_registers@@Base+0x2460>
   2150c:	mov	w19, #0x2                   	// #2
   21510:	mov	w20, #0x80                  	// #128
   21514:	bl	aa30 <__ctype_b_loc@plt>
   21518:	ldr	x8, [x0]
   2151c:	ldr	x28, [sp, #48]
   21520:	mov	w9, #0x1                   	// #1
   21524:	add	x8, x8, x20, lsl #1
   21528:	add	x11, x23, x19, lsl #3
   2152c:	mov	x10, xzr
   21530:	add	x11, x11, #0xb8
   21534:	add	x12, x20, x10
   21538:	cmp	x12, #0x5f
   2153c:	b.eq	21548 <rpl_re_set_registers@@Base+0x2494>  // b.none
   21540:	ldrh	w12, [x8, x10, lsl #1]
   21544:	tbz	w12, #3, 21558 <rpl_re_set_registers@@Base+0x24a4>
   21548:	ldr	x12, [x11]
   2154c:	lsl	x13, x9, x10
   21550:	orr	x12, x12, x13
   21554:	str	x12, [x11]
   21558:	add	x10, x10, #0x1
   2155c:	cmp	x10, #0x40
   21560:	b.ne	21534 <rpl_re_set_registers@@Base+0x2480>  // b.any
   21564:	add	x19, x19, #0x1
   21568:	add	x20, x20, #0x40
   2156c:	cmp	x19, #0x4
   21570:	add	x8, x8, #0x80
   21574:	b.ne	21528 <rpl_re_set_registers@@Base+0x2474>  // b.any
   21578:	b	20770 <rpl_re_set_registers@@Base+0x16bc>
   2157c:	cbz	x1, 215c0 <rpl_re_set_registers@@Base+0x250c>
   21580:	mov	x19, x1
   21584:	ldr	x1, [x1, #8]
   21588:	cbnz	x1, 21580 <rpl_re_set_registers@@Base+0x24cc>
   2158c:	ldr	x1, [x19, #16]
   21590:	cbnz	x1, 21580 <rpl_re_set_registers@@Base+0x24cc>
   21594:	add	x0, x19, #0x28
   21598:	bl	1f0e0 <rpl_re_set_registers@@Base+0x2c>
   2159c:	ldr	x8, [x19]
   215a0:	cbz	x8, 215c0 <rpl_re_set_registers@@Base+0x250c>
   215a4:	ldr	x1, [x8, #16]
   215a8:	cmp	x1, x19
   215ac:	mov	x19, x8
   215b0:	b.eq	21594 <rpl_re_set_registers@@Base+0x24e0>  // b.none
   215b4:	mov	x19, x8
   215b8:	cbz	x1, 21594 <rpl_re_set_registers@@Base+0x24e0>
   215bc:	b	21580 <rpl_re_set_registers@@Base+0x24cc>
   215c0:	mov	x19, xzr
   215c4:	mov	w8, #0x8                   	// #8
   215c8:	b	206e8 <rpl_re_set_registers@@Base+0x1634>
   215cc:	mov	w0, #0xb                   	// #11
   215d0:	b	214b4 <rpl_re_set_registers@@Base+0x2400>
   215d4:	ldr	x28, [sp, #48]
   215d8:	mov	w8, #0xc                   	// #12
   215dc:	str	w8, [x20]
   215e0:	b	214bc <rpl_re_set_registers@@Base+0x2408>
   215e4:	bl	aaa0 <free@plt>
   215e8:	mov	x0, x19
   215ec:	bl	aaa0 <free@plt>
   215f0:	mov	w0, #0xc                   	// #12
   215f4:	b	214b4 <rpl_re_set_registers@@Base+0x2400>
   215f8:	adrp	x0, 2b000 <vasnprintf@@Base+0x3944>
   215fc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21600:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   21604:	add	x0, x0, #0x170
   21608:	add	x1, x1, #0xedc
   2160c:	add	x3, x3, #0xee8
   21610:	mov	w2, #0xced                 	// #3309
   21614:	bl	aeb0 <__assert_fail@plt>
   21618:	stp	x29, x30, [sp, #-48]!
   2161c:	stp	x22, x21, [sp, #16]
   21620:	stp	x20, x19, [sp, #32]
   21624:	ldr	w8, [x0, #128]
   21628:	mov	x21, x3
   2162c:	mov	x19, x2
   21630:	mov	x22, x0
   21634:	cmp	w8, #0xf
   21638:	mov	x20, x1
   2163c:	mov	x29, sp
   21640:	b.eq	216a0 <rpl_re_set_registers@@Base+0x25ec>  // b.none
   21644:	ldr	x0, [x22, #112]
   21648:	add	w9, w8, #0x1
   2164c:	sxtw	x8, w8
   21650:	add	x0, x0, x8, lsl #6
   21654:	str	w9, [x22, #128]
   21658:	str	xzr, [x0, #8]!
   2165c:	stp	x20, x19, [x0, #8]
   21660:	ldr	q0, [x21]
   21664:	mov	x9, #0xffffffffffffffff    	// #-1
   21668:	stp	xzr, xzr, [x0, #24]
   2166c:	str	x9, [x0, #56]
   21670:	stur	q0, [x0, #40]
   21674:	ldr	w8, [x0, #48]
   21678:	and	w8, w8, #0xfff3ffff
   2167c:	str	w8, [x0, #48]
   21680:	cbz	x20, 21688 <rpl_re_set_registers@@Base+0x25d4>
   21684:	str	x0, [x20]
   21688:	cbz	x19, 21690 <rpl_re_set_registers@@Base+0x25dc>
   2168c:	str	x0, [x19]
   21690:	ldp	x20, x19, [sp, #32]
   21694:	ldp	x22, x21, [sp, #16]
   21698:	ldp	x29, x30, [sp], #48
   2169c:	ret
   216a0:	mov	w0, #0x3c8                 	// #968
   216a4:	bl	a660 <malloc@plt>
   216a8:	cbz	x0, 21690 <rpl_re_set_registers@@Base+0x25dc>
   216ac:	ldr	x9, [x22, #112]
   216b0:	mov	w8, wzr
   216b4:	str	x9, [x0]
   216b8:	str	x0, [x22, #112]
   216bc:	str	wzr, [x22, #128]
   216c0:	b	21648 <rpl_re_set_registers@@Base+0x2594>
   216c4:	sub	sp, sp, #0x80
   216c8:	stp	x26, x25, [sp, #64]
   216cc:	stp	x20, x19, [sp, #112]
   216d0:	mov	x26, x1
   216d4:	mov	x20, x0
   216d8:	mov	w0, #0x20                  	// #32
   216dc:	mov	w1, #0x1                   	// #1
   216e0:	stp	x29, x30, [sp, #48]
   216e4:	stp	x24, x23, [sp, #80]
   216e8:	stp	x22, x21, [sp, #96]
   216ec:	add	x29, sp, #0x30
   216f0:	mov	x19, x5
   216f4:	mov	w23, w4
   216f8:	mov	x24, x3
   216fc:	mov	x25, x2
   21700:	str	xzr, [sp, #24]
   21704:	bl	a7f0 <calloc@plt>
   21708:	cbz	x0, 2188c <rpl_re_set_registers@@Base+0x27d8>
   2170c:	mov	x21, x0
   21710:	mov	w0, #0x50                  	// #80
   21714:	mov	w1, #0x1                   	// #1
   21718:	bl	a7f0 <calloc@plt>
   2171c:	cbz	x0, 21884 <rpl_re_set_registers@@Base+0x27d0>
   21720:	mov	x22, x0
   21724:	and	w8, w23, #0x1
   21728:	strb	w8, [x0, #32]
   2172c:	add	x3, sp, #0x18
   21730:	mov	x0, x26
   21734:	mov	x1, x21
   21738:	mov	x2, x22
   2173c:	mov	x4, x25
   21740:	mov	x5, xzr
   21744:	bl	21cbc <rpl_re_set_registers@@Base+0x2c08>
   21748:	cbnz	w0, 2189c <rpl_re_set_registers@@Base+0x27e8>
   2174c:	ldrb	w8, [x24]
   21750:	cbz	w8, 2177c <rpl_re_set_registers@@Base+0x26c8>
   21754:	add	x9, x24, #0x1
   21758:	mov	w10, #0x1                   	// #1
   2175c:	lsr	w11, w8, #3
   21760:	and	x11, x11, #0x18
   21764:	ldr	x12, [x21, x11]
   21768:	lsl	x8, x10, x8
   2176c:	orr	x8, x12, x8
   21770:	str	x8, [x21, x11]
   21774:	ldrb	w8, [x9], #1
   21778:	cbnz	w8, 2175c <rpl_re_set_registers@@Base+0x26a8>
   2177c:	tbz	w23, #0, 21790 <rpl_re_set_registers@@Base+0x26dc>
   21780:	ldp	q0, q1, [x21]
   21784:	mvn	v0.16b, v0.16b
   21788:	mvn	v1.16b, v1.16b
   2178c:	stp	q0, q1, [x21]
   21790:	ldr	w8, [x20, #180]
   21794:	cmp	w8, #0x2
   21798:	b.lt	217c0 <rpl_re_set_registers@@Base+0x270c>  // b.tstop
   2179c:	ldr	x8, [x20, #120]
   217a0:	mov	x9, xzr
   217a4:	ldr	x10, [x8, x9]
   217a8:	ldr	x11, [x21, x9]
   217ac:	and	x10, x11, x10
   217b0:	str	x10, [x21, x9]
   217b4:	add	x9, x9, #0x8
   217b8:	cmp	x9, #0x20
   217bc:	b.ne	217a4 <rpl_re_set_registers@@Base+0x26f0>  // b.any
   217c0:	mov	w8, #0x3                   	// #3
   217c4:	add	x3, sp, #0x8
   217c8:	mov	x0, x20
   217cc:	mov	x1, xzr
   217d0:	mov	x2, xzr
   217d4:	str	w8, [sp, #16]
   217d8:	str	x21, [sp, #8]
   217dc:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   217e0:	cbz	x0, 21870 <rpl_re_set_registers@@Base+0x27bc>
   217e4:	ldr	w8, [x20, #180]
   217e8:	mov	x23, x0
   217ec:	cmp	w8, #0x2
   217f0:	b.lt	21848 <rpl_re_set_registers@@Base+0x2794>  // b.tstop
   217f4:	mov	w8, #0x6                   	// #6
   217f8:	str	w8, [sp, #16]
   217fc:	str	x22, [sp, #8]
   21800:	ldrb	w8, [x20, #176]
   21804:	add	x3, sp, #0x8
   21808:	mov	x0, x20
   2180c:	mov	x1, xzr
   21810:	orr	w8, w8, #0x2
   21814:	mov	x2, xzr
   21818:	strb	w8, [x20, #176]
   2181c:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   21820:	cbz	x0, 21870 <rpl_re_set_registers@@Base+0x27bc>
   21824:	mov	x2, x0
   21828:	mov	w8, #0xa                   	// #10
   2182c:	sub	x3, x29, #0x10
   21830:	mov	x0, x20
   21834:	mov	x1, x23
   21838:	stur	w8, [x29, #-8]
   2183c:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   21840:	mov	x23, x0
   21844:	b	21850 <rpl_re_set_registers@@Base+0x279c>
   21848:	mov	x0, x22
   2184c:	bl	1f17c <rpl_re_set_registers@@Base+0xc8>
   21850:	mov	x0, x23
   21854:	ldp	x20, x19, [sp, #112]
   21858:	ldp	x22, x21, [sp, #96]
   2185c:	ldp	x24, x23, [sp, #80]
   21860:	ldp	x26, x25, [sp, #64]
   21864:	ldp	x29, x30, [sp, #48]
   21868:	add	sp, sp, #0x80
   2186c:	ret
   21870:	mov	x0, x21
   21874:	bl	aaa0 <free@plt>
   21878:	mov	x0, x22
   2187c:	bl	1f17c <rpl_re_set_registers@@Base+0xc8>
   21880:	b	2188c <rpl_re_set_registers@@Base+0x27d8>
   21884:	mov	x0, x21
   21888:	bl	aaa0 <free@plt>
   2188c:	mov	x23, xzr
   21890:	mov	w8, #0xc                   	// #12
   21894:	str	w8, [x19]
   21898:	b	21850 <rpl_re_set_registers@@Base+0x279c>
   2189c:	mov	w25, w0
   218a0:	mov	x0, x21
   218a4:	bl	aaa0 <free@plt>
   218a8:	mov	x0, x22
   218ac:	bl	1f17c <rpl_re_set_registers@@Base+0xc8>
   218b0:	mov	x23, xzr
   218b4:	str	w25, [x19]
   218b8:	b	21850 <rpl_re_set_registers@@Base+0x279c>
   218bc:	ldr	x9, [x1, #104]
   218c0:	ldr	x8, [x1, #72]
   218c4:	cmp	x9, x8
   218c8:	b.le	2193c <rpl_re_set_registers@@Base+0x2888>
   218cc:	ldr	x9, [x1, #8]
   218d0:	ldrb	w8, [x9, x8]
   218d4:	strb	w8, [x0]
   218d8:	ldr	w9, [x1, #144]
   218dc:	cmp	w9, #0x2
   218e0:	b.lt	21904 <rpl_re_set_registers@@Base+0x2850>  // b.tstop
   218e4:	ldr	x9, [x1, #72]
   218e8:	ldr	x10, [x1, #48]
   218ec:	cmp	x9, x10
   218f0:	b.eq	21904 <rpl_re_set_registers@@Base+0x2850>  // b.none
   218f4:	ldr	x10, [x1, #16]
   218f8:	ldr	w9, [x10, x9, lsl #2]
   218fc:	cmn	w9, #0x1
   21900:	b.eq	219bc <rpl_re_set_registers@@Base+0x2908>  // b.none
   21904:	tbz	w2, #0, 2194c <rpl_re_set_registers@@Base+0x2898>
   21908:	cmp	w8, #0x5c
   2190c:	b.ne	2194c <rpl_re_set_registers@@Base+0x2898>  // b.any
   21910:	ldr	x8, [x1, #72]
   21914:	ldr	x9, [x1, #88]
   21918:	add	x8, x8, #0x1
   2191c:	cmp	x8, x9
   21920:	b.ge	219bc <rpl_re_set_registers@@Base+0x2908>  // b.tcont
   21924:	ldr	x9, [x1, #8]
   21928:	str	x8, [x1, #72]
   2192c:	ldrb	w9, [x9, x8]
   21930:	mov	w8, #0x1                   	// #1
   21934:	strb	w9, [x0]
   21938:	b	219c0 <rpl_re_set_registers@@Base+0x290c>
   2193c:	mov	w8, wzr
   21940:	mov	w9, #0x2                   	// #2
   21944:	strb	w9, [x0, #8]
   21948:	b	219dc <rpl_re_set_registers@@Base+0x2928>
   2194c:	cmp	w8, #0x5c
   21950:	b.gt	219a4 <rpl_re_set_registers@@Base+0x28f0>
   21954:	cmp	w8, #0x2d
   21958:	b.eq	219c8 <rpl_re_set_registers@@Base+0x2914>  // b.none
   2195c:	cmp	w8, #0x5b
   21960:	b.ne	219bc <rpl_re_set_registers@@Base+0x2908>  // b.any
   21964:	ldr	x8, [x1, #72]
   21968:	ldr	x9, [x1, #88]
   2196c:	add	x8, x8, #0x1
   21970:	cmp	x8, x9
   21974:	b.ge	219e4 <rpl_re_set_registers@@Base+0x2930>  // b.tcont
   21978:	ldr	x9, [x1, #8]
   2197c:	ldrb	w8, [x9, x8]
   21980:	cmp	w8, #0x3d
   21984:	strb	w8, [x0]
   21988:	b.eq	219fc <rpl_re_set_registers@@Base+0x2948>  // b.none
   2198c:	cmp	w8, #0x3a
   21990:	b.eq	21a04 <rpl_re_set_registers@@Base+0x2950>  // b.none
   21994:	cmp	w8, #0x2e
   21998:	b.ne	219e8 <rpl_re_set_registers@@Base+0x2934>  // b.any
   2199c:	mov	w8, #0x1a                  	// #26
   219a0:	b	21a0c <rpl_re_set_registers@@Base+0x2958>
   219a4:	cmp	w8, #0x5d
   219a8:	b.eq	219d0 <rpl_re_set_registers@@Base+0x291c>  // b.none
   219ac:	cmp	w8, #0x5e
   219b0:	b.ne	219bc <rpl_re_set_registers@@Base+0x2908>  // b.any
   219b4:	mov	w8, #0x19                  	// #25
   219b8:	b	219d4 <rpl_re_set_registers@@Base+0x2920>
   219bc:	mov	w8, #0x1                   	// #1
   219c0:	strb	w8, [x0, #8]
   219c4:	b	219dc <rpl_re_set_registers@@Base+0x2928>
   219c8:	mov	w8, #0x16                  	// #22
   219cc:	b	219d4 <rpl_re_set_registers@@Base+0x2920>
   219d0:	mov	w8, #0x15                  	// #21
   219d4:	strb	w8, [x0, #8]
   219d8:	mov	w8, #0x1                   	// #1
   219dc:	mov	w0, w8
   219e0:	ret
   219e4:	strb	wzr, [x0]
   219e8:	mov	w8, #0x1                   	// #1
   219ec:	mov	w9, #0x5b                  	// #91
   219f0:	strb	w8, [x0, #8]
   219f4:	strb	w9, [x0]
   219f8:	b	219dc <rpl_re_set_registers@@Base+0x2928>
   219fc:	mov	w8, #0x1c                  	// #28
   21a00:	b	21a0c <rpl_re_set_registers@@Base+0x2958>
   21a04:	tbz	w2, #2, 219e8 <rpl_re_set_registers@@Base+0x2934>
   21a08:	mov	w8, #0x1e                  	// #30
   21a0c:	strb	w8, [x0, #8]
   21a10:	mov	w8, #0x2                   	// #2
   21a14:	b	219dc <rpl_re_set_registers@@Base+0x2928>
   21a18:	sub	sp, sp, #0x30
   21a1c:	stp	x29, x30, [sp, #32]
   21a20:	ldr	w8, [x1, #144]
   21a24:	ldr	x9, [x1, #72]
   21a28:	add	x29, sp, #0x20
   21a2c:	cmp	w8, #0x1
   21a30:	b.eq	21aa0 <rpl_re_set_registers@@Base+0x29ec>  // b.none
   21a34:	ldr	x8, [x1, #48]
   21a38:	add	x10, x9, #0x1
   21a3c:	cmp	x10, x8
   21a40:	b.ge	21aa0 <rpl_re_set_registers@@Base+0x29ec>  // b.tcont
   21a44:	ldr	x10, [x1, #16]
   21a48:	sub	x8, x8, x9
   21a4c:	mov	w11, #0x1                   	// #1
   21a50:	add	x12, x10, x9, lsl #2
   21a54:	ldr	w13, [x12, x11, lsl #2]
   21a58:	cmn	w13, #0x1
   21a5c:	b.ne	21a74 <rpl_re_set_registers@@Base+0x29c0>  // b.any
   21a60:	add	x11, x11, #0x1
   21a64:	cmp	x8, x11
   21a68:	b.ne	21a54 <rpl_re_set_registers@@Base+0x29a0>  // b.any
   21a6c:	mov	x11, x8
   21a70:	b	21a7c <rpl_re_set_registers@@Base+0x29c8>
   21a74:	cmp	w11, #0x2
   21a78:	b.lt	21aa0 <rpl_re_set_registers@@Base+0x29ec>  // b.tstop
   21a7c:	mov	w12, #0x1                   	// #1
   21a80:	str	w12, [x0]
   21a84:	ldr	w9, [x10, x9, lsl #2]
   21a88:	mov	w8, wzr
   21a8c:	str	w9, [x0, #8]
   21a90:	ldr	x9, [x1, #72]
   21a94:	add	x9, x9, w11, sxtw
   21a98:	str	x9, [x1, #72]
   21a9c:	b	21ca4 <rpl_re_set_registers@@Base+0x2bf0>
   21aa0:	add	x8, x9, w3, sxtw
   21aa4:	str	x8, [x1, #72]
   21aa8:	ldrb	w10, [x2, #8]
   21aac:	sub	w9, w10, #0x16
   21ab0:	cmp	w9, #0x8
   21ab4:	b.hi	21c94 <rpl_re_set_registers@@Base+0x2be0>  // b.pmore
   21ab8:	adrp	x11, 2a000 <vasnprintf@@Base+0x2944>
   21abc:	add	x11, x11, #0xc60
   21ac0:	adr	x12, 21ad0 <rpl_re_set_registers@@Base+0x2a1c>
   21ac4:	ldrb	w13, [x11, x9]
   21ac8:	add	x12, x12, x13, lsl #2
   21acc:	br	x12
   21ad0:	ldr	x9, [x1, #104]
   21ad4:	cmp	x9, x8
   21ad8:	b.le	21c18 <rpl_re_set_registers@@Base+0x2b64>
   21adc:	ldrb	w9, [x2]
   21ae0:	mov	x8, xzr
   21ae4:	and	w10, w10, #0xff
   21ae8:	cmp	w10, #0x1e
   21aec:	b.ne	21af8 <rpl_re_set_registers@@Base+0x2a44>  // b.any
   21af0:	ldrb	w10, [x1, #139]
   21af4:	cbnz	w10, 21b4c <rpl_re_set_registers@@Base+0x2a98>
   21af8:	ldr	x10, [x1, #72]
   21afc:	ldr	x11, [x1, #8]
   21b00:	add	x12, x10, #0x1
   21b04:	str	x12, [x1, #72]
   21b08:	ldrb	w10, [x11, x10]
   21b0c:	ldr	x11, [x1, #104]
   21b10:	cmp	x11, x12
   21b14:	b.le	21c18 <rpl_re_set_registers@@Base+0x2b64>
   21b18:	cmp	w9, w10, uxtb
   21b1c:	b.ne	21b30 <rpl_re_set_registers@@Base+0x2a7c>  // b.any
   21b20:	ldr	x11, [x1, #8]
   21b24:	ldrb	w11, [x11, x12]
   21b28:	cmp	w11, #0x5d
   21b2c:	b.eq	21c20 <rpl_re_set_registers@@Base+0x2b6c>  // b.none
   21b30:	ldr	x11, [x0, #8]
   21b34:	strb	w10, [x11, x8]
   21b38:	add	x8, x8, #0x1
   21b3c:	cmp	x8, #0x20
   21b40:	b.eq	21c18 <rpl_re_set_registers@@Base+0x2b64>  // b.none
   21b44:	ldrb	w10, [x2, #8]
   21b48:	b	21ae4 <rpl_re_set_registers@@Base+0x2a30>
   21b4c:	ldrb	w10, [x1, #140]
   21b50:	cbz	w10, 21bd4 <rpl_re_set_registers@@Base+0x2b20>
   21b54:	ldr	x11, [x1, #72]
   21b58:	ldr	x13, [x1, #48]
   21b5c:	subs	x12, x13, x11
   21b60:	b.eq	21b74 <rpl_re_set_registers@@Base+0x2ac0>  // b.none
   21b64:	ldr	x10, [x1, #16]
   21b68:	ldr	w10, [x10, x11, lsl #2]
   21b6c:	cmn	w10, #0x1
   21b70:	b.eq	21bf4 <rpl_re_set_registers@@Base+0x2b40>  // b.none
   21b74:	ldr	x10, [x1, #24]
   21b78:	ldr	x14, [x1, #40]
   21b7c:	ldr	x15, [x1]
   21b80:	ldr	x10, [x10, x11, lsl #3]
   21b84:	add	x10, x14, x10
   21b88:	ldrsb	w10, [x15, x10]
   21b8c:	tbnz	w10, #31, 21bf4 <rpl_re_set_registers@@Base+0x2b40>
   21b90:	ldr	w14, [x1, #144]
   21b94:	cmp	w14, #0x1
   21b98:	b.eq	21c08 <rpl_re_set_registers@@Base+0x2b54>  // b.none
   21b9c:	add	x14, x11, #0x1
   21ba0:	cmp	x14, x13
   21ba4:	b.ge	21c08 <rpl_re_set_registers@@Base+0x2b54>  // b.tcont
   21ba8:	ldr	x13, [x1, #16]
   21bac:	add	x14, x13, x11, lsl #2
   21bb0:	mov	w13, #0x1                   	// #1
   21bb4:	ldr	w15, [x14, x13, lsl #2]
   21bb8:	cmn	w15, #0x1
   21bbc:	b.ne	21c0c <rpl_re_set_registers@@Base+0x2b58>  // b.any
   21bc0:	add	x13, x13, #0x1
   21bc4:	cmp	x12, x13
   21bc8:	b.ne	21bb4 <rpl_re_set_registers@@Base+0x2b00>  // b.any
   21bcc:	mov	x13, x12
   21bd0:	b	21c0c <rpl_re_set_registers@@Base+0x2b58>
   21bd4:	ldr	x10, [x1, #72]
   21bd8:	ldr	x11, [x1, #40]
   21bdc:	ldr	x13, [x1]
   21be0:	add	x12, x10, #0x1
   21be4:	str	x12, [x1, #72]
   21be8:	add	x10, x10, x11
   21bec:	ldrb	w10, [x13, x10]
   21bf0:	b	21b0c <rpl_re_set_registers@@Base+0x2a58>
   21bf4:	ldr	x10, [x1, #8]
   21bf8:	add	x12, x11, #0x1
   21bfc:	str	x12, [x1, #72]
   21c00:	ldrb	w10, [x10, x11]
   21c04:	b	21b0c <rpl_re_set_registers@@Base+0x2a58>
   21c08:	mov	w13, #0x1                   	// #1
   21c0c:	add	x12, x11, w13, sxtw
   21c10:	str	x12, [x1, #72]
   21c14:	b	21b0c <rpl_re_set_registers@@Base+0x2a58>
   21c18:	mov	w8, #0x7                   	// #7
   21c1c:	b	21ca4 <rpl_re_set_registers@@Base+0x2bf0>
   21c20:	add	x9, x12, #0x1
   21c24:	str	x9, [x1, #72]
   21c28:	ldr	x9, [x0, #8]
   21c2c:	strb	wzr, [x9, w8, uxtw]
   21c30:	ldrb	w8, [x2, #8]
   21c34:	cmp	w8, #0x1e
   21c38:	b.eq	21c58 <rpl_re_set_registers@@Base+0x2ba4>  // b.none
   21c3c:	cmp	w8, #0x1c
   21c40:	b.eq	21c60 <rpl_re_set_registers@@Base+0x2bac>  // b.none
   21c44:	cmp	w8, #0x1a
   21c48:	mov	w8, wzr
   21c4c:	b.ne	21ca4 <rpl_re_set_registers@@Base+0x2bf0>  // b.any
   21c50:	mov	w9, #0x3                   	// #3
   21c54:	b	21c64 <rpl_re_set_registers@@Base+0x2bb0>
   21c58:	mov	w9, #0x4                   	// #4
   21c5c:	b	21c64 <rpl_re_set_registers@@Base+0x2bb0>
   21c60:	mov	w9, #0x2                   	// #2
   21c64:	mov	w8, wzr
   21c68:	str	w9, [x0]
   21c6c:	b	21ca4 <rpl_re_set_registers@@Base+0x2bf0>
   21c70:	tbnz	w5, #0, 21c94 <rpl_re_set_registers@@Base+0x2be0>
   21c74:	stp	x2, x0, [sp]
   21c78:	add	x0, sp, #0x10
   21c7c:	mov	x2, x4
   21c80:	bl	218bc <rpl_re_set_registers@@Base+0x2808>
   21c84:	ldrb	w8, [sp, #24]
   21c88:	ldp	x2, x0, [sp]
   21c8c:	cmp	w8, #0x15
   21c90:	b.ne	21cb4 <rpl_re_set_registers@@Base+0x2c00>  // b.any
   21c94:	str	wzr, [x0]
   21c98:	ldrb	w9, [x2]
   21c9c:	mov	w8, wzr
   21ca0:	strb	w9, [x0, #8]
   21ca4:	ldp	x29, x30, [sp, #32]
   21ca8:	mov	w0, w8
   21cac:	add	sp, sp, #0x30
   21cb0:	ret
   21cb4:	mov	w8, #0xb                   	// #11
   21cb8:	b	21ca4 <rpl_re_set_registers@@Base+0x2bf0>
   21cbc:	stp	x29, x30, [sp, #-64]!
   21cc0:	stp	x24, x23, [sp, #16]
   21cc4:	stp	x22, x21, [sp, #32]
   21cc8:	stp	x20, x19, [sp, #48]
   21ccc:	mov	x21, x4
   21cd0:	mov	x23, x3
   21cd4:	mov	x22, x2
   21cd8:	mov	x19, x1
   21cdc:	mov	x20, x0
   21ce0:	mov	x29, sp
   21ce4:	tbz	w5, #22, 21d18 <rpl_re_set_registers@@Base+0x2c64>
   21ce8:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21cec:	add	x1, x1, #0xf4e
   21cf0:	mov	x0, x21
   21cf4:	bl	aa10 <strcmp@plt>
   21cf8:	cbz	w0, 21d10 <rpl_re_set_registers@@Base+0x2c5c>
   21cfc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21d00:	add	x1, x1, #0xf54
   21d04:	mov	x0, x21
   21d08:	bl	aa10 <strcmp@plt>
   21d0c:	cbnz	w0, 21d18 <rpl_re_set_registers@@Base+0x2c64>
   21d10:	adrp	x21, 2a000 <vasnprintf@@Base+0x2944>
   21d14:	add	x21, x21, #0xf5a
   21d18:	ldr	x8, [x23]
   21d1c:	ldr	x9, [x22, #72]
   21d20:	cmp	x8, x9
   21d24:	b.eq	222b8 <rpl_re_set_registers@@Base+0x3204>  // b.none
   21d28:	mov	x0, x21
   21d2c:	bl	a400 <wctype@plt>
   21d30:	ldr	x8, [x22, #72]
   21d34:	ldr	x9, [x22, #24]
   21d38:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21d3c:	add	x1, x1, #0xed0
   21d40:	add	x10, x8, #0x1
   21d44:	str	x10, [x22, #72]
   21d48:	str	x0, [x9, x8, lsl #3]
   21d4c:	mov	x0, x21
   21d50:	bl	aa10 <strcmp@plt>
   21d54:	cbz	w0, 21e3c <rpl_re_set_registers@@Base+0x2d88>
   21d58:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21d5c:	add	x1, x1, #0xf60
   21d60:	mov	x0, x21
   21d64:	bl	aa10 <strcmp@plt>
   21d68:	cbz	w0, 21e7c <rpl_re_set_registers@@Base+0x2dc8>
   21d6c:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21d70:	add	x1, x1, #0xf54
   21d74:	mov	x0, x21
   21d78:	bl	aa10 <strcmp@plt>
   21d7c:	cbz	w0, 21ebc <rpl_re_set_registers@@Base+0x2e08>
   21d80:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21d84:	add	x1, x1, #0xed6
   21d88:	mov	x0, x21
   21d8c:	bl	aa10 <strcmp@plt>
   21d90:	cbz	w0, 21efc <rpl_re_set_registers@@Base+0x2e48>
   21d94:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21d98:	add	x1, x1, #0xf5a
   21d9c:	mov	x0, x21
   21da0:	bl	aa10 <strcmp@plt>
   21da4:	cbz	w0, 21f3c <rpl_re_set_registers@@Base+0x2e88>
   21da8:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21dac:	add	x1, x1, #0xf7f
   21db0:	mov	x0, x21
   21db4:	bl	aa10 <strcmp@plt>
   21db8:	cbz	w0, 21f7c <rpl_re_set_registers@@Base+0x2ec8>
   21dbc:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21dc0:	add	x1, x1, #0xf66
   21dc4:	mov	x0, x21
   21dc8:	bl	aa10 <strcmp@plt>
   21dcc:	cbz	w0, 21fd0 <rpl_re_set_registers@@Base+0x2f1c>
   21dd0:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21dd4:	add	x1, x1, #0xf4e
   21dd8:	mov	x0, x21
   21ddc:	bl	aa10 <strcmp@plt>
   21de0:	cbz	w0, 22014 <rpl_re_set_registers@@Base+0x2f60>
   21de4:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21de8:	add	x1, x1, #0xf6c
   21dec:	mov	x0, x21
   21df0:	bl	aa10 <strcmp@plt>
   21df4:	cbz	w0, 22058 <rpl_re_set_registers@@Base+0x2fa4>
   21df8:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21dfc:	add	x1, x1, #0xf72
   21e00:	mov	x0, x21
   21e04:	bl	aa10 <strcmp@plt>
   21e08:	cbz	w0, 220d4 <rpl_re_set_registers@@Base+0x3020>
   21e0c:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21e10:	add	x1, x1, #0xf78
   21e14:	mov	x0, x21
   21e18:	bl	aa10 <strcmp@plt>
   21e1c:	cbz	w0, 22150 <rpl_re_set_registers@@Base+0x309c>
   21e20:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   21e24:	add	x1, x1, #0xf7e
   21e28:	mov	x0, x21
   21e2c:	bl	aa10 <strcmp@plt>
   21e30:	cbz	w0, 221cc <rpl_re_set_registers@@Base+0x3118>
   21e34:	mov	w0, #0x4                   	// #4
   21e38:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   21e3c:	bl	aa30 <__ctype_b_loc@plt>
   21e40:	ldr	x8, [x0]
   21e44:	mov	x9, xzr
   21e48:	mov	w10, #0x1                   	// #1
   21e4c:	cbnz	x20, 2209c <rpl_re_set_registers@@Base+0x2fe8>
   21e50:	ldrh	w11, [x8, x9, lsl #1]
   21e54:	tbz	w11, #3, 21e6c <rpl_re_set_registers@@Base+0x2db8>
   21e58:	ubfx	x11, x9, #6, #2
   21e5c:	ldr	x12, [x19, x11, lsl #3]
   21e60:	lsl	x13, x10, x9
   21e64:	orr	x12, x12, x13
   21e68:	str	x12, [x19, x11, lsl #3]
   21e6c:	add	x9, x9, #0x1
   21e70:	cmp	x9, #0x100
   21e74:	b.ne	21e50 <rpl_re_set_registers@@Base+0x2d9c>  // b.any
   21e78:	b	21fb8 <rpl_re_set_registers@@Base+0x2f04>
   21e7c:	bl	aa30 <__ctype_b_loc@plt>
   21e80:	ldr	x8, [x0]
   21e84:	mov	x9, xzr
   21e88:	mov	w10, #0x1                   	// #1
   21e8c:	cbnz	x20, 22118 <rpl_re_set_registers@@Base+0x3064>
   21e90:	ldrh	w11, [x8, x9, lsl #1]
   21e94:	tbz	w11, #1, 21eac <rpl_re_set_registers@@Base+0x2df8>
   21e98:	ubfx	x11, x9, #6, #2
   21e9c:	ldr	x12, [x19, x11, lsl #3]
   21ea0:	lsl	x13, x10, x9
   21ea4:	orr	x12, x12, x13
   21ea8:	str	x12, [x19, x11, lsl #3]
   21eac:	add	x9, x9, #0x1
   21eb0:	cmp	x9, #0x100
   21eb4:	b.ne	21e90 <rpl_re_set_registers@@Base+0x2ddc>  // b.any
   21eb8:	b	21fb8 <rpl_re_set_registers@@Base+0x2f04>
   21ebc:	bl	aa30 <__ctype_b_loc@plt>
   21ec0:	ldr	x8, [x0]
   21ec4:	mov	x9, xzr
   21ec8:	mov	w10, #0x1                   	// #1
   21ecc:	cbnz	x20, 22194 <rpl_re_set_registers@@Base+0x30e0>
   21ed0:	ldrh	w11, [x8, x9, lsl #1]
   21ed4:	tbz	w11, #9, 21eec <rpl_re_set_registers@@Base+0x2e38>
   21ed8:	ubfx	x11, x9, #6, #2
   21edc:	ldr	x12, [x19, x11, lsl #3]
   21ee0:	lsl	x13, x10, x9
   21ee4:	orr	x12, x12, x13
   21ee8:	str	x12, [x19, x11, lsl #3]
   21eec:	add	x9, x9, #0x1
   21ef0:	cmp	x9, #0x100
   21ef4:	b.ne	21ed0 <rpl_re_set_registers@@Base+0x2e1c>  // b.any
   21ef8:	b	21fb8 <rpl_re_set_registers@@Base+0x2f04>
   21efc:	bl	aa30 <__ctype_b_loc@plt>
   21f00:	ldr	x8, [x0]
   21f04:	mov	x9, xzr
   21f08:	mov	w10, #0x1                   	// #1
   21f0c:	cbnz	x20, 22210 <rpl_re_set_registers@@Base+0x315c>
   21f10:	ldrh	w11, [x8, x9, lsl #1]
   21f14:	tbz	w11, #13, 21f2c <rpl_re_set_registers@@Base+0x2e78>
   21f18:	ubfx	x11, x9, #6, #2
   21f1c:	ldr	x12, [x19, x11, lsl #3]
   21f20:	lsl	x13, x10, x9
   21f24:	orr	x12, x12, x13
   21f28:	str	x12, [x19, x11, lsl #3]
   21f2c:	add	x9, x9, #0x1
   21f30:	cmp	x9, #0x100
   21f34:	b.ne	21f10 <rpl_re_set_registers@@Base+0x2e5c>  // b.any
   21f38:	b	21fb8 <rpl_re_set_registers@@Base+0x2f04>
   21f3c:	bl	aa30 <__ctype_b_loc@plt>
   21f40:	ldr	x8, [x0]
   21f44:	mov	x9, xzr
   21f48:	mov	w10, #0x1                   	// #1
   21f4c:	cbnz	x20, 22248 <rpl_re_set_registers@@Base+0x3194>
   21f50:	ldrh	w11, [x8, x9, lsl #1]
   21f54:	tbz	w11, #10, 21f6c <rpl_re_set_registers@@Base+0x2eb8>
   21f58:	ubfx	x11, x9, #6, #2
   21f5c:	ldr	x12, [x19, x11, lsl #3]
   21f60:	lsl	x13, x10, x9
   21f64:	orr	x12, x12, x13
   21f68:	str	x12, [x19, x11, lsl #3]
   21f6c:	add	x9, x9, #0x1
   21f70:	cmp	x9, #0x100
   21f74:	b.ne	21f50 <rpl_re_set_registers@@Base+0x2e9c>  // b.any
   21f78:	b	21fb8 <rpl_re_set_registers@@Base+0x2f04>
   21f7c:	bl	aa30 <__ctype_b_loc@plt>
   21f80:	ldr	x8, [x0]
   21f84:	mov	x9, xzr
   21f88:	mov	w10, #0x1                   	// #1
   21f8c:	cbnz	x20, 22280 <rpl_re_set_registers@@Base+0x31cc>
   21f90:	ldrh	w11, [x8, x9, lsl #1]
   21f94:	tbz	w11, #11, 21fac <rpl_re_set_registers@@Base+0x2ef8>
   21f98:	ubfx	x11, x9, #6, #2
   21f9c:	ldr	x12, [x19, x11, lsl #3]
   21fa0:	lsl	x13, x10, x9
   21fa4:	orr	x12, x12, x13
   21fa8:	str	x12, [x19, x11, lsl #3]
   21fac:	add	x9, x9, #0x1
   21fb0:	cmp	x9, #0x100
   21fb4:	b.ne	21f90 <rpl_re_set_registers@@Base+0x2edc>  // b.any
   21fb8:	mov	w0, wzr
   21fbc:	ldp	x20, x19, [sp, #48]
   21fc0:	ldp	x22, x21, [sp, #32]
   21fc4:	ldp	x24, x23, [sp, #16]
   21fc8:	ldp	x29, x30, [sp], #64
   21fcc:	ret
   21fd0:	bl	aa30 <__ctype_b_loc@plt>
   21fd4:	ldr	x8, [x0]
   21fd8:	mov	x9, xzr
   21fdc:	mov	w10, #0x1                   	// #1
   21fe0:	cbnz	x20, 222dc <rpl_re_set_registers@@Base+0x3228>
   21fe4:	ldrh	w11, [x8, x9, lsl #1]
   21fe8:	tbz	w11, #14, 22000 <rpl_re_set_registers@@Base+0x2f4c>
   21fec:	ubfx	x11, x9, #6, #2
   21ff0:	ldr	x12, [x19, x11, lsl #3]
   21ff4:	lsl	x13, x10, x9
   21ff8:	orr	x12, x12, x13
   21ffc:	str	x12, [x19, x11, lsl #3]
   22000:	add	x9, x9, #0x1
   22004:	cmp	x9, #0x100
   22008:	mov	w0, wzr
   2200c:	b.ne	21fe4 <rpl_re_set_registers@@Base+0x2f30>  // b.any
   22010:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22014:	bl	aa30 <__ctype_b_loc@plt>
   22018:	ldr	x8, [x0]
   2201c:	mov	x9, xzr
   22020:	mov	w10, #0x1                   	// #1
   22024:	cbnz	x20, 22314 <rpl_re_set_registers@@Base+0x3260>
   22028:	ldrh	w11, [x8, x9, lsl #1]
   2202c:	tbz	w11, #8, 22044 <rpl_re_set_registers@@Base+0x2f90>
   22030:	ubfx	x11, x9, #6, #2
   22034:	ldr	x12, [x19, x11, lsl #3]
   22038:	lsl	x13, x10, x9
   2203c:	orr	x12, x12, x13
   22040:	str	x12, [x19, x11, lsl #3]
   22044:	add	x9, x9, #0x1
   22048:	cmp	x9, #0x100
   2204c:	mov	w0, wzr
   22050:	b.ne	22028 <rpl_re_set_registers@@Base+0x2f74>  // b.any
   22054:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22058:	bl	aa30 <__ctype_b_loc@plt>
   2205c:	ldr	x8, [x0]
   22060:	mov	x9, xzr
   22064:	mov	w10, #0x1                   	// #1
   22068:	cbnz	x20, 2234c <rpl_re_set_registers@@Base+0x3298>
   2206c:	ldrh	w11, [x8, x9, lsl #1]
   22070:	tbz	w11, #0, 22088 <rpl_re_set_registers@@Base+0x2fd4>
   22074:	ubfx	x11, x9, #6, #2
   22078:	ldr	x12, [x19, x11, lsl #3]
   2207c:	lsl	x13, x10, x9
   22080:	orr	x12, x12, x13
   22084:	str	x12, [x19, x11, lsl #3]
   22088:	add	x9, x9, #0x1
   2208c:	cmp	x9, #0x100
   22090:	mov	w0, wzr
   22094:	b.ne	2206c <rpl_re_set_registers@@Base+0x2fb8>  // b.any
   22098:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   2209c:	ldrh	w11, [x8, x9, lsl #1]
   220a0:	tbz	w11, #3, 220c0 <rpl_re_set_registers@@Base+0x300c>
   220a4:	ldrb	w11, [x20, x9]
   220a8:	lsr	x12, x11, #3
   220ac:	and	x12, x12, #0x18
   220b0:	ldr	x13, [x19, x12]
   220b4:	lsl	x11, x10, x11
   220b8:	orr	x11, x11, x13
   220bc:	str	x11, [x19, x12]
   220c0:	add	x9, x9, #0x1
   220c4:	cmp	x9, #0x100
   220c8:	mov	w0, wzr
   220cc:	b.ne	2209c <rpl_re_set_registers@@Base+0x2fe8>  // b.any
   220d0:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   220d4:	bl	aa30 <__ctype_b_loc@plt>
   220d8:	ldr	x8, [x0]
   220dc:	mov	x9, xzr
   220e0:	mov	w10, #0x1                   	// #1
   220e4:	cbnz	x20, 22384 <rpl_re_set_registers@@Base+0x32d0>
   220e8:	ldrsh	w11, [x8, x9, lsl #1]
   220ec:	tbz	w11, #31, 22104 <rpl_re_set_registers@@Base+0x3050>
   220f0:	ubfx	x11, x9, #6, #2
   220f4:	ldr	x12, [x19, x11, lsl #3]
   220f8:	lsl	x13, x10, x9
   220fc:	orr	x12, x12, x13
   22100:	str	x12, [x19, x11, lsl #3]
   22104:	add	x9, x9, #0x1
   22108:	cmp	x9, #0x100
   2210c:	mov	w0, wzr
   22110:	b.ne	220e8 <rpl_re_set_registers@@Base+0x3034>  // b.any
   22114:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22118:	ldrh	w11, [x8, x9, lsl #1]
   2211c:	tbz	w11, #1, 2213c <rpl_re_set_registers@@Base+0x3088>
   22120:	ldrb	w11, [x20, x9]
   22124:	lsr	x12, x11, #3
   22128:	and	x12, x12, #0x18
   2212c:	ldr	x13, [x19, x12]
   22130:	lsl	x11, x10, x11
   22134:	orr	x11, x11, x13
   22138:	str	x11, [x19, x12]
   2213c:	add	x9, x9, #0x1
   22140:	cmp	x9, #0x100
   22144:	mov	w0, wzr
   22148:	b.ne	22118 <rpl_re_set_registers@@Base+0x3064>  // b.any
   2214c:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22150:	bl	aa30 <__ctype_b_loc@plt>
   22154:	ldr	x8, [x0]
   22158:	mov	x9, xzr
   2215c:	mov	w10, #0x1                   	// #1
   22160:	cbnz	x20, 223bc <rpl_re_set_registers@@Base+0x3308>
   22164:	ldrh	w11, [x8, x9, lsl #1]
   22168:	tbz	w11, #2, 22180 <rpl_re_set_registers@@Base+0x30cc>
   2216c:	ubfx	x11, x9, #6, #2
   22170:	ldr	x12, [x19, x11, lsl #3]
   22174:	lsl	x13, x10, x9
   22178:	orr	x12, x12, x13
   2217c:	str	x12, [x19, x11, lsl #3]
   22180:	add	x9, x9, #0x1
   22184:	cmp	x9, #0x100
   22188:	mov	w0, wzr
   2218c:	b.ne	22164 <rpl_re_set_registers@@Base+0x30b0>  // b.any
   22190:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22194:	ldrh	w11, [x8, x9, lsl #1]
   22198:	tbz	w11, #9, 221b8 <rpl_re_set_registers@@Base+0x3104>
   2219c:	ldrb	w11, [x20, x9]
   221a0:	lsr	x12, x11, #3
   221a4:	and	x12, x12, #0x18
   221a8:	ldr	x13, [x19, x12]
   221ac:	lsl	x11, x10, x11
   221b0:	orr	x11, x11, x13
   221b4:	str	x11, [x19, x12]
   221b8:	add	x9, x9, #0x1
   221bc:	cmp	x9, #0x100
   221c0:	mov	w0, wzr
   221c4:	b.ne	22194 <rpl_re_set_registers@@Base+0x30e0>  // b.any
   221c8:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   221cc:	bl	aa30 <__ctype_b_loc@plt>
   221d0:	ldr	x8, [x0]
   221d4:	mov	x9, xzr
   221d8:	mov	w10, #0x1                   	// #1
   221dc:	cbnz	x20, 223f4 <rpl_re_set_registers@@Base+0x3340>
   221e0:	ldrh	w11, [x8, x9, lsl #1]
   221e4:	tbz	w11, #12, 221fc <rpl_re_set_registers@@Base+0x3148>
   221e8:	ubfx	x11, x9, #6, #2
   221ec:	ldr	x12, [x19, x11, lsl #3]
   221f0:	lsl	x13, x10, x9
   221f4:	orr	x12, x12, x13
   221f8:	str	x12, [x19, x11, lsl #3]
   221fc:	add	x9, x9, #0x1
   22200:	cmp	x9, #0x100
   22204:	mov	w0, wzr
   22208:	b.ne	221e0 <rpl_re_set_registers@@Base+0x312c>  // b.any
   2220c:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22210:	ldrh	w11, [x8, x9, lsl #1]
   22214:	tbz	w11, #13, 22234 <rpl_re_set_registers@@Base+0x3180>
   22218:	ldrb	w11, [x20, x9]
   2221c:	lsr	x12, x11, #3
   22220:	and	x12, x12, #0x18
   22224:	ldr	x13, [x19, x12]
   22228:	lsl	x11, x10, x11
   2222c:	orr	x11, x11, x13
   22230:	str	x11, [x19, x12]
   22234:	add	x9, x9, #0x1
   22238:	cmp	x9, #0x100
   2223c:	mov	w0, wzr
   22240:	b.ne	22210 <rpl_re_set_registers@@Base+0x315c>  // b.any
   22244:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22248:	ldrh	w11, [x8, x9, lsl #1]
   2224c:	tbz	w11, #10, 2226c <rpl_re_set_registers@@Base+0x31b8>
   22250:	ldrb	w11, [x20, x9]
   22254:	lsr	x12, x11, #3
   22258:	and	x12, x12, #0x18
   2225c:	ldr	x13, [x19, x12]
   22260:	lsl	x11, x10, x11
   22264:	orr	x11, x11, x13
   22268:	str	x11, [x19, x12]
   2226c:	add	x9, x9, #0x1
   22270:	cmp	x9, #0x100
   22274:	mov	w0, wzr
   22278:	b.ne	22248 <rpl_re_set_registers@@Base+0x3194>  // b.any
   2227c:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22280:	ldrh	w11, [x8, x9, lsl #1]
   22284:	tbz	w11, #11, 222a4 <rpl_re_set_registers@@Base+0x31f0>
   22288:	ldrb	w11, [x20, x9]
   2228c:	lsr	x12, x11, #3
   22290:	and	x12, x12, #0x18
   22294:	ldr	x13, [x19, x12]
   22298:	lsl	x11, x10, x11
   2229c:	orr	x11, x11, x13
   222a0:	str	x11, [x19, x12]
   222a4:	add	x9, x9, #0x1
   222a8:	cmp	x9, #0x100
   222ac:	mov	w0, wzr
   222b0:	b.ne	22280 <rpl_re_set_registers@@Base+0x31cc>  // b.any
   222b4:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   222b8:	ldr	x0, [x22, #24]
   222bc:	mov	w24, #0x1                   	// #1
   222c0:	bfi	x24, x8, #1, #63
   222c4:	lsl	x1, x24, #3
   222c8:	bl	a860 <realloc@plt>
   222cc:	cbz	x0, 2242c <rpl_re_set_registers@@Base+0x3378>
   222d0:	str	x0, [x22, #24]
   222d4:	str	x24, [x23]
   222d8:	b	21d28 <rpl_re_set_registers@@Base+0x2c74>
   222dc:	ldrh	w11, [x8, x9, lsl #1]
   222e0:	tbz	w11, #14, 22300 <rpl_re_set_registers@@Base+0x324c>
   222e4:	ldrb	w11, [x20, x9]
   222e8:	lsr	x12, x11, #3
   222ec:	and	x12, x12, #0x18
   222f0:	ldr	x13, [x19, x12]
   222f4:	lsl	x11, x10, x11
   222f8:	orr	x11, x11, x13
   222fc:	str	x11, [x19, x12]
   22300:	add	x9, x9, #0x1
   22304:	cmp	x9, #0x100
   22308:	mov	w0, wzr
   2230c:	b.ne	222dc <rpl_re_set_registers@@Base+0x3228>  // b.any
   22310:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22314:	ldrh	w11, [x8, x9, lsl #1]
   22318:	tbz	w11, #8, 22338 <rpl_re_set_registers@@Base+0x3284>
   2231c:	ldrb	w11, [x20, x9]
   22320:	lsr	x12, x11, #3
   22324:	and	x12, x12, #0x18
   22328:	ldr	x13, [x19, x12]
   2232c:	lsl	x11, x10, x11
   22330:	orr	x11, x11, x13
   22334:	str	x11, [x19, x12]
   22338:	add	x9, x9, #0x1
   2233c:	cmp	x9, #0x100
   22340:	mov	w0, wzr
   22344:	b.ne	22314 <rpl_re_set_registers@@Base+0x3260>  // b.any
   22348:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   2234c:	ldrh	w11, [x8, x9, lsl #1]
   22350:	tbz	w11, #0, 22370 <rpl_re_set_registers@@Base+0x32bc>
   22354:	ldrb	w11, [x20, x9]
   22358:	lsr	x12, x11, #3
   2235c:	and	x12, x12, #0x18
   22360:	ldr	x13, [x19, x12]
   22364:	lsl	x11, x10, x11
   22368:	orr	x11, x11, x13
   2236c:	str	x11, [x19, x12]
   22370:	add	x9, x9, #0x1
   22374:	cmp	x9, #0x100
   22378:	mov	w0, wzr
   2237c:	b.ne	2234c <rpl_re_set_registers@@Base+0x3298>  // b.any
   22380:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22384:	ldrsh	w11, [x8, x9, lsl #1]
   22388:	tbz	w11, #31, 223a8 <rpl_re_set_registers@@Base+0x32f4>
   2238c:	ldrb	w11, [x20, x9]
   22390:	lsr	x12, x11, #3
   22394:	and	x12, x12, #0x18
   22398:	ldr	x13, [x19, x12]
   2239c:	lsl	x11, x10, x11
   223a0:	orr	x11, x11, x13
   223a4:	str	x11, [x19, x12]
   223a8:	add	x9, x9, #0x1
   223ac:	cmp	x9, #0x100
   223b0:	mov	w0, wzr
   223b4:	b.ne	22384 <rpl_re_set_registers@@Base+0x32d0>  // b.any
   223b8:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   223bc:	ldrh	w11, [x8, x9, lsl #1]
   223c0:	tbz	w11, #2, 223e0 <rpl_re_set_registers@@Base+0x332c>
   223c4:	ldrb	w11, [x20, x9]
   223c8:	lsr	x12, x11, #3
   223cc:	and	x12, x12, #0x18
   223d0:	ldr	x13, [x19, x12]
   223d4:	lsl	x11, x10, x11
   223d8:	orr	x11, x11, x13
   223dc:	str	x11, [x19, x12]
   223e0:	add	x9, x9, #0x1
   223e4:	cmp	x9, #0x100
   223e8:	mov	w0, wzr
   223ec:	b.ne	223bc <rpl_re_set_registers@@Base+0x3308>  // b.any
   223f0:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   223f4:	ldrh	w11, [x8, x9, lsl #1]
   223f8:	tbz	w11, #12, 22418 <rpl_re_set_registers@@Base+0x3364>
   223fc:	ldrb	w11, [x20, x9]
   22400:	lsr	x12, x11, #3
   22404:	and	x12, x12, #0x18
   22408:	ldr	x13, [x19, x12]
   2240c:	lsl	x11, x10, x11
   22410:	orr	x11, x11, x13
   22414:	str	x11, [x19, x12]
   22418:	add	x9, x9, #0x1
   2241c:	cmp	x9, #0x100
   22420:	mov	w0, wzr
   22424:	b.ne	223f4 <rpl_re_set_registers@@Base+0x3340>  // b.any
   22428:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   2242c:	mov	w0, #0xc                   	// #12
   22430:	b	21fbc <rpl_re_set_registers@@Base+0x2f08>
   22434:	stp	x29, x30, [sp, #-80]!
   22438:	str	x25, [sp, #16]
   2243c:	stp	x24, x23, [sp, #32]
   22440:	stp	x22, x21, [sp, #48]
   22444:	stp	x20, x19, [sp, #64]
   22448:	mov	x19, x2
   2244c:	mov	x20, x1
   22450:	mov	x21, x0
   22454:	mov	x9, #0xffffffffffffffff    	// #-1
   22458:	mov	w23, #0xa                   	// #10
   2245c:	mov	w24, #0x8030                	// #32816
   22460:	mov	w25, #0x8000                	// #32768
   22464:	mov	x29, sp
   22468:	mov	x0, x20
   2246c:	mov	x1, x21
   22470:	mov	x2, x19
   22474:	mov	x22, x9
   22478:	bl	1fbf4 <rpl_re_set_registers@@Base+0xb40>
   2247c:	ldr	x8, [x21, #72]
   22480:	add	x8, x8, w0, sxtw
   22484:	str	x8, [x21, #72]
   22488:	ldrb	w10, [x20, #8]
   2248c:	cmp	w10, #0x18
   22490:	b.eq	224f8 <rpl_re_set_registers@@Base+0x3444>  // b.none
   22494:	cmp	w10, #0x2
   22498:	b.eq	224f4 <rpl_re_set_registers@@Base+0x3440>  // b.none
   2249c:	ldrb	w8, [x20]
   224a0:	cmp	w8, #0x2c
   224a4:	b.eq	224f8 <rpl_re_set_registers@@Base+0x3444>  // b.none
   224a8:	cmp	w8, #0x30
   224ac:	mov	x9, #0xfffffffffffffffe    	// #-2
   224b0:	b.cc	22468 <rpl_re_set_registers@@Base+0x33b4>  // b.lo, b.ul, b.last
   224b4:	cmp	w10, #0x1
   224b8:	b.ne	22468 <rpl_re_set_registers@@Base+0x33b4>  // b.any
   224bc:	cmn	x22, #0x2
   224c0:	mov	x9, #0xfffffffffffffffe    	// #-2
   224c4:	b.eq	22468 <rpl_re_set_registers@@Base+0x33b4>  // b.none
   224c8:	cmp	w8, #0x39
   224cc:	b.hi	22468 <rpl_re_set_registers@@Base+0x33b4>  // b.pmore
   224d0:	cmn	x22, #0x1
   224d4:	b.eq	224ec <rpl_re_set_registers@@Base+0x3438>  // b.none
   224d8:	madd	x8, x22, x23, x8
   224dc:	sub	x9, x8, #0x30
   224e0:	cmp	x8, x24
   224e4:	csel	x9, x25, x9, gt
   224e8:	b	22468 <rpl_re_set_registers@@Base+0x33b4>
   224ec:	sub	x9, x8, #0x30
   224f0:	b	22468 <rpl_re_set_registers@@Base+0x33b4>
   224f4:	mov	x22, #0xfffffffffffffffe    	// #-2
   224f8:	mov	x0, x22
   224fc:	ldp	x20, x19, [sp, #64]
   22500:	ldp	x22, x21, [sp, #48]
   22504:	ldp	x24, x23, [sp, #32]
   22508:	ldr	x25, [sp, #16]
   2250c:	ldp	x29, x30, [sp], #80
   22510:	ret
   22514:	stp	x29, x30, [sp, #-64]!
   22518:	str	x23, [sp, #16]
   2251c:	stp	x22, x21, [sp, #32]
   22520:	stp	x20, x19, [sp, #48]
   22524:	mov	x3, x0
   22528:	ldr	x22, [x3], #40
   2252c:	mov	x21, x0
   22530:	mov	x19, x1
   22534:	mov	x0, x1
   22538:	mov	x1, xzr
   2253c:	mov	x2, xzr
   22540:	mov	x29, sp
   22544:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   22548:	mov	x20, x0
   2254c:	str	x0, [x29, #24]
   22550:	cbz	x0, 225d0 <rpl_re_set_registers@@Base+0x351c>
   22554:	add	x23, x29, #0x18
   22558:	mov	x0, x20
   2255c:	str	x22, [x0]
   22560:	ldr	x8, [x23]
   22564:	ldr	w9, [x8, #48]
   22568:	orr	w9, w9, #0x40000
   2256c:	str	w9, [x8, #48]
   22570:	ldr	x8, [x21, #8]
   22574:	ldr	x22, [x23]
   22578:	cbz	x8, 22594 <rpl_re_set_registers@@Base+0x34e0>
   2257c:	add	x23, x22, #0x8
   22580:	mov	x21, x8
   22584:	b	225b0 <rpl_re_set_registers@@Base+0x34fc>
   22588:	ldr	x21, [x8]
   2258c:	ldr	x22, [x22]
   22590:	cbz	x21, 225d0 <rpl_re_set_registers@@Base+0x351c>
   22594:	mov	x9, x8
   22598:	mov	x8, x21
   2259c:	ldr	x21, [x21, #16]
   225a0:	cmp	x21, x9
   225a4:	b.eq	22588 <rpl_re_set_registers@@Base+0x34d4>  // b.none
   225a8:	cbz	x21, 22588 <rpl_re_set_registers@@Base+0x34d4>
   225ac:	add	x23, x22, #0x10
   225b0:	add	x3, x21, #0x28
   225b4:	mov	x0, x19
   225b8:	mov	x1, xzr
   225bc:	mov	x2, xzr
   225c0:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   225c4:	str	x0, [x23]
   225c8:	cbnz	x0, 2255c <rpl_re_set_registers@@Base+0x34a8>
   225cc:	mov	x20, xzr
   225d0:	mov	x0, x20
   225d4:	ldp	x20, x19, [sp, #48]
   225d8:	ldp	x22, x21, [sp, #32]
   225dc:	ldr	x23, [sp, #16]
   225e0:	ldp	x29, x30, [sp], #64
   225e4:	ret
   225e8:	stp	x29, x30, [sp, #-48]!
   225ec:	stp	x22, x21, [sp, #16]
   225f0:	mov	x21, x0
   225f4:	stp	x20, x19, [sp, #32]
   225f8:	mov	x20, x1
   225fc:	mov	x0, x2
   22600:	mov	x1, x21
   22604:	mov	x29, sp
   22608:	mov	x19, x2
   2260c:	blr	x20
   22610:	cbnz	w0, 2265c <rpl_re_set_registers@@Base+0x35a8>
   22614:	ldr	x22, [x21, #8]
   22618:	cbz	x22, 22634 <rpl_re_set_registers@@Base+0x3580>
   2261c:	mov	x0, x19
   22620:	mov	x1, x22
   22624:	blr	x20
   22628:	mov	x21, x22
   2262c:	cbz	w0, 22614 <rpl_re_set_registers@@Base+0x3560>
   22630:	b	2265c <rpl_re_set_registers@@Base+0x35a8>
   22634:	mov	x8, xzr
   22638:	ldr	x22, [x21, #16]
   2263c:	mov	x9, x8
   22640:	mov	x8, x21
   22644:	cmp	x22, x9
   22648:	b.eq	22650 <rpl_re_set_registers@@Base+0x359c>  // b.none
   2264c:	cbnz	x22, 2261c <rpl_re_set_registers@@Base+0x3568>
   22650:	ldr	x21, [x8]
   22654:	cbnz	x21, 22638 <rpl_re_set_registers@@Base+0x3584>
   22658:	mov	w0, wzr
   2265c:	ldp	x20, x19, [sp, #32]
   22660:	ldp	x22, x21, [sp, #16]
   22664:	ldp	x29, x30, [sp], #48
   22668:	ret
   2266c:	ldrb	w8, [x1, #48]
   22670:	cmp	w8, #0x11
   22674:	b.eq	226b0 <rpl_re_set_registers@@Base+0x35fc>  // b.none
   22678:	cmp	w8, #0x4
   2267c:	b.ne	22704 <rpl_re_set_registers@@Base+0x3650>  // b.any
   22680:	ldr	x8, [x0, #224]
   22684:	cbz	x8, 22704 <rpl_re_set_registers@@Base+0x3650>
   22688:	ldr	x9, [x1, #40]
   2268c:	mov	w10, #0x1                   	// #1
   22690:	sbfiz	x9, x9, #3, #32
   22694:	ldr	x8, [x8, x9]
   22698:	str	x8, [x1, #40]
   2269c:	ldr	x9, [x0, #160]
   226a0:	lsl	w8, w10, w8
   226a4:	sxtw	x8, w8
   226a8:	orr	x8, x9, x8
   226ac:	b	22700 <rpl_re_set_registers@@Base+0x364c>
   226b0:	ldr	x8, [x1, #8]
   226b4:	cbz	x8, 22704 <rpl_re_set_registers@@Base+0x3650>
   226b8:	ldrb	w9, [x8, #48]
   226bc:	cmp	w9, #0x11
   226c0:	b.ne	22704 <rpl_re_set_registers@@Base+0x3650>  // b.any
   226c4:	ldr	x9, [x8, #8]
   226c8:	ldr	x8, [x8, #40]
   226cc:	str	x9, [x1, #8]
   226d0:	cbz	x9, 226d8 <rpl_re_set_registers@@Base+0x3624>
   226d4:	str	x1, [x9]
   226d8:	ldr	x9, [x0, #224]
   226dc:	ldr	x10, [x1, #40]
   226e0:	cmp	x8, #0x3f
   226e4:	ldr	x10, [x9, x10, lsl #3]
   226e8:	str	x10, [x9, x8, lsl #3]
   226ec:	b.gt	22704 <rpl_re_set_registers@@Base+0x3650>
   226f0:	ldr	x9, [x0, #160]
   226f4:	mov	w10, #0x1                   	// #1
   226f8:	lsl	x8, x10, x8
   226fc:	bic	x8, x9, x8
   22700:	str	x8, [x0, #160]
   22704:	mov	w0, wzr
   22708:	ret
   2270c:	sub	sp, sp, #0x30
   22710:	stp	x29, x30, [sp, #16]
   22714:	add	x29, sp, #0x10
   22718:	stp	x20, x19, [sp, #32]
   2271c:	stur	wzr, [x29, #-4]
   22720:	ldr	x2, [x1, #8]
   22724:	mov	x19, x1
   22728:	mov	x20, x0
   2272c:	cbz	x2, 22754 <rpl_re_set_registers@@Base+0x36a0>
   22730:	ldrb	w8, [x2, #48]
   22734:	cmp	w8, #0x11
   22738:	b.ne	22754 <rpl_re_set_registers@@Base+0x36a0>  // b.any
   2273c:	sub	x0, x29, #0x4
   22740:	mov	x1, x20
   22744:	bl	22ac4 <rpl_re_set_registers@@Base+0x3a10>
   22748:	str	x0, [x19, #8]
   2274c:	cbz	x0, 22754 <rpl_re_set_registers@@Base+0x36a0>
   22750:	str	x19, [x0]
   22754:	ldr	x2, [x19, #16]
   22758:	cbz	x2, 22780 <rpl_re_set_registers@@Base+0x36cc>
   2275c:	ldrb	w8, [x2, #48]
   22760:	cmp	w8, #0x11
   22764:	b.ne	22780 <rpl_re_set_registers@@Base+0x36cc>  // b.any
   22768:	sub	x0, x29, #0x4
   2276c:	mov	x1, x20
   22770:	bl	22ac4 <rpl_re_set_registers@@Base+0x3a10>
   22774:	str	x0, [x19, #16]
   22778:	cbz	x0, 22780 <rpl_re_set_registers@@Base+0x36cc>
   2277c:	str	x19, [x0]
   22780:	ldur	w0, [x29, #-4]
   22784:	ldp	x20, x19, [sp, #32]
   22788:	ldp	x29, x30, [sp, #16]
   2278c:	add	sp, sp, #0x30
   22790:	ret
   22794:	stp	x29, x30, [sp, #-32]!
   22798:	stp	x20, x19, [sp, #16]
   2279c:	ldrb	w8, [x1, #48]
   227a0:	mov	x19, x1
   227a4:	mov	x29, sp
   227a8:	cmp	w8, #0x10
   227ac:	b.ne	227cc <rpl_re_set_registers@@Base+0x3718>  // b.any
   227b0:	ldr	x8, [x19, #8]
   227b4:	mov	w0, wzr
   227b8:	ldr	x9, [x8, #24]
   227bc:	str	x9, [x19, #24]
   227c0:	ldr	x8, [x8, #56]
   227c4:	str	x8, [x19, #56]
   227c8:	b	2281c <rpl_re_set_registers@@Base+0x3768>
   227cc:	ldp	x1, x2, [x19, #40]
   227d0:	mov	x20, x0
   227d4:	str	x19, [x19, #24]
   227d8:	bl	22c10 <rpl_re_set_registers@@Base+0x3b5c>
   227dc:	cmn	x0, #0x1
   227e0:	str	x0, [x19, #56]
   227e4:	b.eq	22828 <rpl_re_set_registers@@Base+0x3774>  // b.none
   227e8:	ldrb	w9, [x19, #48]
   227ec:	cmp	w9, #0xc
   227f0:	b.ne	22818 <rpl_re_set_registers@@Base+0x3764>  // b.any
   227f4:	ldr	x9, [x20]
   227f8:	mov	x8, x0
   227fc:	ldr	w10, [x19, #40]
   22800:	mov	w0, wzr
   22804:	add	x8, x9, x8, lsl #4
   22808:	ldr	w9, [x8, #8]
   2280c:	bfi	w9, w10, #8, #10
   22810:	str	w9, [x8, #8]
   22814:	b	2281c <rpl_re_set_registers@@Base+0x3768>
   22818:	mov	w0, wzr
   2281c:	ldp	x20, x19, [sp, #16]
   22820:	ldp	x29, x30, [sp], #32
   22824:	ret
   22828:	mov	w0, #0xc                   	// #12
   2282c:	b	2281c <rpl_re_set_registers@@Base+0x3768>
   22830:	ldrb	w8, [x1, #48]
   22834:	cmp	w8, #0x10
   22838:	b.eq	22850 <rpl_re_set_registers@@Base+0x379c>  // b.none
   2283c:	cmp	w8, #0xb
   22840:	b.ne	22860 <rpl_re_set_registers@@Base+0x37ac>  // b.any
   22844:	ldr	x8, [x1, #8]
   22848:	str	x1, [x8, #32]
   2284c:	b	22880 <rpl_re_set_registers@@Base+0x37cc>
   22850:	ldp	x9, x8, [x1, #8]
   22854:	ldr	x10, [x8, #24]
   22858:	str	x10, [x9, #32]
   2285c:	b	22878 <rpl_re_set_registers@@Base+0x37c4>
   22860:	ldr	x8, [x1, #8]
   22864:	cbz	x8, 22870 <rpl_re_set_registers@@Base+0x37bc>
   22868:	ldr	x9, [x1, #32]
   2286c:	str	x9, [x8, #32]
   22870:	ldr	x8, [x1, #16]
   22874:	cbz	x8, 22880 <rpl_re_set_registers@@Base+0x37cc>
   22878:	ldr	x9, [x1, #32]
   2287c:	str	x9, [x8, #32]
   22880:	mov	w0, wzr
   22884:	ret
   22888:	stp	x29, x30, [sp, #-64]!
   2288c:	stp	x22, x21, [sp, #32]
   22890:	stp	x20, x19, [sp, #48]
   22894:	ldr	w9, [x1, #48]
   22898:	ldr	x19, [x1, #56]
   2289c:	str	x23, [sp, #16]
   228a0:	mov	x29, sp
   228a4:	and	w8, w9, #0xff
   228a8:	sub	w10, w8, #0x2
   228ac:	cmp	w10, #0xe
   228b0:	mov	x8, x0
   228b4:	b.hi	229e8 <rpl_re_set_registers@@Base+0x3934>  // b.pmore
   228b8:	adrp	x11, 2a000 <vasnprintf@@Base+0x2944>
   228bc:	add	x11, x11, #0xc69
   228c0:	adr	x12, 228d4 <rpl_re_set_registers@@Base+0x3820>
   228c4:	ldrb	w13, [x11, x10]
   228c8:	add	x12, x12, x13, lsl #2
   228cc:	mov	w0, wzr
   228d0:	br	x12
   228d4:	ldr	x9, [x1, #32]
   228d8:	ldr	x8, [x8, #40]
   228dc:	mov	w10, #0x18                  	// #24
   228e0:	ldr	x20, [x9, #56]
   228e4:	madd	x19, x19, x10, x8
   228e8:	mov	w8, #0x1                   	// #1
   228ec:	dup	v0.2d, x8
   228f0:	mov	w0, #0x8                   	// #8
   228f4:	str	q0, [x19]
   228f8:	bl	a660 <malloc@plt>
   228fc:	str	x0, [x19, #16]
   22900:	cbz	x0, 22a38 <rpl_re_set_registers@@Base+0x3984>
   22904:	mov	x8, x0
   22908:	mov	w0, wzr
   2290c:	b	2299c <rpl_re_set_registers@@Base+0x38e8>
   22910:	ldrb	w9, [x8, #176]
   22914:	add	x10, x1, #0x20
   22918:	orr	w9, w9, #0x1
   2291c:	strb	w9, [x8, #176]
   22920:	ldp	x9, x11, [x1, #8]
   22924:	add	x12, x9, #0x18
   22928:	cmp	x9, #0x0
   2292c:	csel	x9, x10, x12, eq  // eq = none
   22930:	ldr	x9, [x9]
   22934:	cmp	x11, #0x0
   22938:	ldr	x20, [x9, #56]
   2293c:	add	x9, x11, #0x18
   22940:	csel	x9, x10, x9, eq  // eq = none
   22944:	tbnz	x20, #63, 22a44 <rpl_re_set_registers@@Base+0x3990>
   22948:	ldr	x9, [x9]
   2294c:	ldr	x21, [x9, #56]
   22950:	tbnz	x21, #63, 22a64 <rpl_re_set_registers@@Base+0x39b0>
   22954:	ldr	x22, [x8, #40]
   22958:	mov	w8, #0x18                  	// #24
   2295c:	mov	w0, #0x10                  	// #16
   22960:	madd	x23, x19, x8, x22
   22964:	mov	w8, #0x2                   	// #2
   22968:	str	x8, [x23]
   2296c:	bl	a660 <malloc@plt>
   22970:	str	x0, [x23, #16]
   22974:	cbz	x0, 22a3c <rpl_re_set_registers@@Base+0x3988>
   22978:	mov	w9, #0x18                  	// #24
   2297c:	madd	x9, x19, x9, x22
   22980:	mov	x8, x0
   22984:	cmp	x20, x21
   22988:	add	x9, x9, #0x8
   2298c:	b.ne	22a04 <rpl_re_set_registers@@Base+0x3950>  // b.any
   22990:	mov	w10, #0x1                   	// #1
   22994:	mov	w0, wzr
   22998:	str	x10, [x9]
   2299c:	str	x20, [x8]
   229a0:	b	22a24 <rpl_re_set_registers@@Base+0x3970>
   229a4:	ldr	x9, [x1, #32]
   229a8:	ldr	x20, [x9, #56]
   229ac:	ldr	x9, [x8, #24]
   229b0:	str	x20, [x9, x19, lsl #3]
   229b4:	ldrb	w9, [x1, #48]
   229b8:	cmp	w9, #0x4
   229bc:	b.ne	229e0 <rpl_re_set_registers@@Base+0x392c>  // b.any
   229c0:	ldr	x8, [x8, #40]
   229c4:	mov	w9, #0x18                  	// #24
   229c8:	mov	w10, #0x1                   	// #1
   229cc:	dup	v0.2d, x10
   229d0:	madd	x19, x19, x9, x8
   229d4:	b	228f0 <rpl_re_set_registers@@Base+0x383c>
   229d8:	ldr	x8, [x1, #32]
   229dc:	cbnz	x8, 22a84 <rpl_re_set_registers@@Base+0x39d0>
   229e0:	mov	w0, wzr
   229e4:	b	22a24 <rpl_re_set_registers@@Base+0x3970>
   229e8:	tbnz	w9, #3, 22aa4 <rpl_re_set_registers@@Base+0x39f0>
   229ec:	ldr	x9, [x1, #32]
   229f0:	ldr	x8, [x8, #24]
   229f4:	mov	w0, wzr
   229f8:	ldr	x9, [x9, #56]
   229fc:	str	x9, [x8, x19, lsl #3]
   22a00:	b	22a24 <rpl_re_set_registers@@Base+0x3970>
   22a04:	mov	w10, #0x2                   	// #2
   22a08:	cmp	x20, x21
   22a0c:	mov	w0, wzr
   22a10:	str	x10, [x9]
   22a14:	b.ge	22a20 <rpl_re_set_registers@@Base+0x396c>  // b.tcont
   22a18:	stp	x20, x21, [x8]
   22a1c:	b	22a24 <rpl_re_set_registers@@Base+0x3970>
   22a20:	stp	x21, x20, [x8]
   22a24:	ldp	x20, x19, [sp, #48]
   22a28:	ldp	x22, x21, [sp, #32]
   22a2c:	ldr	x23, [sp, #16]
   22a30:	ldp	x29, x30, [sp], #64
   22a34:	ret
   22a38:	stp	xzr, xzr, [x19]
   22a3c:	mov	w0, #0xc                   	// #12
   22a40:	b	22a24 <rpl_re_set_registers@@Base+0x3970>
   22a44:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   22a48:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   22a4c:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   22a50:	add	x0, x0, #0xfcb
   22a54:	add	x1, x1, #0xedc
   22a58:	add	x3, x3, #0xf98
   22a5c:	mov	w2, #0x5af                 	// #1455
   22a60:	bl	aeb0 <__assert_fail@plt>
   22a64:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   22a68:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   22a6c:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   22a70:	add	x0, x0, #0xfd5
   22a74:	add	x1, x1, #0xedc
   22a78:	add	x3, x3, #0xf98
   22a7c:	mov	w2, #0x5b0                 	// #1456
   22a80:	bl	aeb0 <__assert_fail@plt>
   22a84:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   22a88:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   22a8c:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   22a90:	add	x0, x0, #0xf85
   22a94:	add	x1, x1, #0xedc
   22a98:	add	x3, x3, #0xf98
   22a9c:	mov	w2, #0x59f                 	// #1439
   22aa0:	bl	aeb0 <__assert_fail@plt>
   22aa4:	adrp	x0, 2a000 <vasnprintf@@Base+0x2944>
   22aa8:	adrp	x1, 2a000 <vasnprintf@@Base+0x2944>
   22aac:	adrp	x3, 2a000 <vasnprintf@@Base+0x2944>
   22ab0:	add	x0, x0, #0xfe0
   22ab4:	add	x1, x1, #0xedc
   22ab8:	add	x3, x3, #0xf98
   22abc:	mov	w2, #0x5c2                 	// #1474
   22ac0:	bl	aeb0 <__assert_fail@plt>
   22ac4:	sub	sp, sp, #0x60
   22ac8:	stp	x29, x30, [sp, #16]
   22acc:	stp	x24, x23, [sp, #48]
   22ad0:	stp	x22, x21, [sp, #64]
   22ad4:	stp	x20, x19, [sp, #80]
   22ad8:	ldr	x19, [x2, #8]
   22adc:	ldr	x22, [x1]
   22ae0:	mov	x20, x2
   22ae4:	mov	x21, x0
   22ae8:	str	x25, [sp, #32]
   22aec:	add	x29, sp, #0x10
   22af0:	cbz	x19, 22b14 <rpl_re_set_registers@@Base+0x3a60>
   22af4:	ldrb	w8, [x1, #56]
   22af8:	tbz	w8, #4, 22b14 <rpl_re_set_registers@@Base+0x3a60>
   22afc:	ldr	x8, [x20, #40]
   22b00:	cmp	x8, #0x3f
   22b04:	b.gt	22be0 <rpl_re_set_registers@@Base+0x3b2c>
   22b08:	ldr	x9, [x22, #160]
   22b0c:	lsr	x8, x9, x8
   22b10:	tbz	w8, #0, 22be0 <rpl_re_set_registers@@Base+0x3b2c>
   22b14:	mov	w8, #0x8                   	// #8
   22b18:	mov	x3, sp
   22b1c:	mov	x0, x22
   22b20:	mov	x1, xzr
   22b24:	mov	x2, xzr
   22b28:	str	w8, [sp, #8]
   22b2c:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   22b30:	mov	x23, x0
   22b34:	mov	w8, #0x9                   	// #9
   22b38:	mov	x3, sp
   22b3c:	mov	x0, x22
   22b40:	mov	x1, xzr
   22b44:	mov	x2, xzr
   22b48:	str	w8, [sp, #8]
   22b4c:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   22b50:	mov	x24, x0
   22b54:	mov	x25, x0
   22b58:	cbz	x19, 22b7c <rpl_re_set_registers@@Base+0x3ac8>
   22b5c:	mov	w8, #0x10                  	// #16
   22b60:	mov	x3, sp
   22b64:	mov	x0, x22
   22b68:	mov	x1, x19
   22b6c:	mov	x2, x24
   22b70:	str	w8, [sp, #8]
   22b74:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   22b78:	mov	x25, x0
   22b7c:	mov	w8, #0x10                  	// #16
   22b80:	mov	x3, sp
   22b84:	mov	x0, x22
   22b88:	mov	x1, x23
   22b8c:	mov	x2, x25
   22b90:	str	w8, [sp, #8]
   22b94:	bl	21618 <rpl_re_set_registers@@Base+0x2564>
   22b98:	cbz	x24, 22c00 <rpl_re_set_registers@@Base+0x3b4c>
   22b9c:	cbz	x23, 22c00 <rpl_re_set_registers@@Base+0x3b4c>
   22ba0:	cbz	x25, 22c00 <rpl_re_set_registers@@Base+0x3b4c>
   22ba4:	mov	x19, x0
   22ba8:	cbz	x0, 22c00 <rpl_re_set_registers@@Base+0x3b4c>
   22bac:	ldr	x8, [x20, #40]
   22bb0:	str	x8, [x24, #40]
   22bb4:	str	x8, [x23, #40]
   22bb8:	ldr	w8, [x20, #48]
   22bbc:	ldr	w9, [x24, #48]
   22bc0:	and	w8, w8, #0x80000
   22bc4:	and	w9, w9, #0xfff7ffff
   22bc8:	orr	w9, w9, w8
   22bcc:	str	w9, [x24, #48]
   22bd0:	ldr	w9, [x23, #48]
   22bd4:	and	w9, w9, #0xfff7ffff
   22bd8:	orr	w8, w9, w8
   22bdc:	str	w8, [x23, #48]
   22be0:	mov	x0, x19
   22be4:	ldp	x20, x19, [sp, #80]
   22be8:	ldp	x22, x21, [sp, #64]
   22bec:	ldp	x24, x23, [sp, #48]
   22bf0:	ldr	x25, [sp, #32]
   22bf4:	ldp	x29, x30, [sp, #16]
   22bf8:	add	sp, sp, #0x60
   22bfc:	ret
   22c00:	mov	w8, #0xc                   	// #12
   22c04:	mov	x19, xzr
   22c08:	str	w8, [x21]
   22c0c:	b	22be0 <rpl_re_set_registers@@Base+0x3b2c>
   22c10:	stp	x29, x30, [sp, #-80]!
   22c14:	stp	x26, x25, [sp, #16]
   22c18:	stp	x24, x23, [sp, #32]
   22c1c:	stp	x22, x21, [sp, #48]
   22c20:	stp	x20, x19, [sp, #64]
   22c24:	ldp	x24, x8, [x0, #8]
   22c28:	mov	x20, x2
   22c2c:	mov	x19, x0
   22c30:	mov	x21, x1
   22c34:	cmp	x8, x24
   22c38:	mov	x29, sp
   22c3c:	b.cs	22d08 <rpl_re_set_registers@@Base+0x3c54>  // b.hs, b.nlast
   22c40:	ldr	x9, [x19]
   22c44:	add	x8, x9, x8, lsl #4
   22c48:	stp	x21, x20, [x8]
   22c4c:	ldr	x8, [x19]
   22c50:	ldr	x9, [x19, #16]
   22c54:	add	x9, x8, x9, lsl #4
   22c58:	ldr	w10, [x9, #8]
   22c5c:	and	w8, w20, #0xff
   22c60:	cmp	w8, #0x5
   22c64:	and	w10, w10, #0xfffc00ff
   22c68:	str	w10, [x9, #8]
   22c6c:	b.ne	22c84 <rpl_re_set_registers@@Base+0x3bd0>  // b.any
   22c70:	ldr	w9, [x19, #180]
   22c74:	cmp	w9, #0x1
   22c78:	b.le	22c84 <rpl_re_set_registers@@Base+0x3bd0>
   22c7c:	mov	w8, #0x100000              	// #1048576
   22c80:	b	22c90 <rpl_re_set_registers@@Base+0x3bdc>
   22c84:	cmp	w8, #0x6
   22c88:	cset	w8, eq  // eq = none
   22c8c:	lsl	w8, w8, #20
   22c90:	ldr	x9, [x19]
   22c94:	ldr	x10, [x19, #16]
   22c98:	add	x9, x9, x10, lsl #4
   22c9c:	ldr	w10, [x9, #8]
   22ca0:	and	w10, w10, #0xffefffff
   22ca4:	orr	w8, w10, w8
   22ca8:	str	w8, [x9, #8]
   22cac:	ldp	x9, x8, [x19, #16]
   22cb0:	mov	x10, #0xffffffffffffffff    	// #-1
   22cb4:	str	x10, [x8, x9, lsl #3]
   22cb8:	ldr	x8, [x19, #40]
   22cbc:	ldr	x9, [x19, #16]
   22cc0:	mov	w10, #0x18                  	// #24
   22cc4:	madd	x8, x9, x10, x8
   22cc8:	stp	xzr, xzr, [x8]
   22ccc:	str	xzr, [x8, #16]
   22cd0:	ldr	x8, [x19, #48]
   22cd4:	ldr	x9, [x19, #16]
   22cd8:	madd	x8, x9, x10, x8
   22cdc:	stp	xzr, xzr, [x8]
   22ce0:	str	xzr, [x8, #16]
   22ce4:	ldr	x0, [x19, #16]
   22ce8:	add	x8, x0, #0x1
   22cec:	str	x8, [x19, #16]
   22cf0:	ldp	x20, x19, [sp, #64]
   22cf4:	ldp	x22, x21, [sp, #48]
   22cf8:	ldp	x24, x23, [sp, #32]
   22cfc:	ldp	x26, x25, [sp, #16]
   22d00:	ldp	x29, x30, [sp], #80
   22d04:	ret
   22d08:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   22d0c:	lsl	x26, x24, #1
   22d10:	movk	x8, #0xaaa, lsl #48
   22d14:	cmp	x26, x8
   22d18:	b.hi	22dcc <rpl_re_set_registers@@Base+0x3d18>  // b.pmore
   22d1c:	ldr	x0, [x19]
   22d20:	lsl	x1, x24, #5
   22d24:	bl	a860 <realloc@plt>
   22d28:	cbz	x0, 22dcc <rpl_re_set_registers@@Base+0x3d18>
   22d2c:	ldr	x8, [x19, #24]
   22d30:	lsl	x23, x24, #4
   22d34:	str	x0, [x19]
   22d38:	mov	x1, x23
   22d3c:	mov	x0, x8
   22d40:	bl	a860 <realloc@plt>
   22d44:	ldr	x8, [x19, #32]
   22d48:	mov	x22, x0
   22d4c:	mov	x1, x23
   22d50:	mov	x0, x8
   22d54:	bl	a860 <realloc@plt>
   22d58:	mov	x23, x0
   22d5c:	ldr	x0, [x19, #40]
   22d60:	add	x8, x24, x24, lsl #1
   22d64:	lsl	x25, x8, #4
   22d68:	mov	x1, x25
   22d6c:	bl	a860 <realloc@plt>
   22d70:	ldr	x8, [x19, #48]
   22d74:	mov	x24, x0
   22d78:	mov	x1, x25
   22d7c:	mov	x0, x8
   22d80:	bl	a860 <realloc@plt>
   22d84:	cbz	x22, 22da8 <rpl_re_set_registers@@Base+0x3cf4>
   22d88:	cbz	x23, 22da8 <rpl_re_set_registers@@Base+0x3cf4>
   22d8c:	cbz	x24, 22da8 <rpl_re_set_registers@@Base+0x3cf4>
   22d90:	cbz	x0, 22da8 <rpl_re_set_registers@@Base+0x3cf4>
   22d94:	ldr	x8, [x19, #16]
   22d98:	stp	x22, x23, [x19, #24]
   22d9c:	stp	x24, x0, [x19, #40]
   22da0:	str	x26, [x19, #8]
   22da4:	b	22c40 <rpl_re_set_registers@@Base+0x3b8c>
   22da8:	mov	x19, x0
   22dac:	mov	x0, x22
   22db0:	bl	aaa0 <free@plt>
   22db4:	mov	x0, x23
   22db8:	bl	aaa0 <free@plt>
   22dbc:	mov	x0, x24
   22dc0:	bl	aaa0 <free@plt>
   22dc4:	mov	x0, x19
   22dc8:	bl	aaa0 <free@plt>
   22dcc:	mov	x0, #0xffffffffffffffff    	// #-1
   22dd0:	b	22cf0 <rpl_re_set_registers@@Base+0x3c3c>
   22dd4:	sub	sp, sp, #0x80
   22dd8:	stp	x29, x30, [sp, #48]
   22ddc:	stp	x26, x25, [sp, #64]
   22de0:	stp	x24, x23, [sp, #80]
   22de4:	stp	x22, x21, [sp, #96]
   22de8:	stp	x20, x19, [sp, #112]
   22dec:	ldr	x23, [x1, #40]
   22df0:	mov	w8, #0x18                  	// #24
   22df4:	mov	x19, x0
   22df8:	add	x29, sp, #0x30
   22dfc:	madd	x24, x2, x8, x23
   22e00:	ldr	x8, [x24, #8]!
   22e04:	mov	w21, w3
   22e08:	mov	x20, x2
   22e0c:	mov	x22, x1
   22e10:	add	x8, x8, #0x1
   22e14:	lsl	x0, x8, #3
   22e18:	stp	x8, xzr, [sp, #24]
   22e1c:	bl	a660 <malloc@plt>
   22e20:	str	x0, [sp, #40]
   22e24:	cbz	x0, 22fdc <rpl_re_set_registers@@Base+0x3f28>
   22e28:	ldr	x8, [x22, #48]
   22e2c:	mov	w9, #0x18                  	// #24
   22e30:	madd	x8, x20, x9, x8
   22e34:	mov	x9, #0xffffffffffffffff    	// #-1
   22e38:	str	x9, [x8, #8]
   22e3c:	ldr	x9, [x22]
   22e40:	add	x8, x9, x20, lsl #4
   22e44:	ldr	w8, [x8, #8]
   22e48:	ubfx	w4, w8, #8, #10
   22e4c:	cbz	w4, 22e98 <rpl_re_set_registers@@Base+0x3de4>
   22e50:	ldr	x10, [x24]
   22e54:	cbz	x10, 22e98 <rpl_re_set_registers@@Base+0x3de4>
   22e58:	mov	w10, #0x18                  	// #24
   22e5c:	madd	x10, x20, x10, x23
   22e60:	ldr	x10, [x10, #16]
   22e64:	ldr	x10, [x10]
   22e68:	add	x9, x9, x10, lsl #4
   22e6c:	ldrb	w9, [x9, #10]
   22e70:	tbnz	w9, #2, 22e98 <rpl_re_set_registers@@Base+0x3de4>
   22e74:	mov	x0, x22
   22e78:	mov	x1, x20
   22e7c:	mov	x2, x20
   22e80:	mov	x3, x20
   22e84:	bl	22fe4 <rpl_re_set_registers@@Base+0x3f30>
   22e88:	cbnz	w0, 22fc0 <rpl_re_set_registers@@Base+0x3f0c>
   22e8c:	ldr	x8, [x22]
   22e90:	add	x8, x8, x20, lsl #4
   22e94:	ldr	w8, [x8, #8]
   22e98:	tbz	w8, #3, 22f64 <rpl_re_set_registers@@Base+0x3eb0>
   22e9c:	ldr	x8, [x22, #40]
   22ea0:	mov	w9, #0x18                  	// #24
   22ea4:	madd	x9, x20, x9, x8
   22ea8:	ldr	x9, [x9, #8]
   22eac:	cmp	x9, #0x1
   22eb0:	b.lt	22f64 <rpl_re_set_registers@@Base+0x3eb0>  // b.tstop
   22eb4:	mov	w26, wzr
   22eb8:	mov	x24, xzr
   22ebc:	mov	w25, #0x18                  	// #24
   22ec0:	madd	x8, x20, x25, x8
   22ec4:	ldr	x8, [x8, #16]
   22ec8:	ldr	x23, [x8, x24, lsl #3]
   22ecc:	ldr	x8, [x22, #48]
   22ed0:	madd	x9, x23, x25, x8
   22ed4:	ldr	x9, [x9, #8]
   22ed8:	cmn	x9, #0x1
   22edc:	b.eq	22f3c <rpl_re_set_registers@@Base+0x3e88>  // b.none
   22ee0:	cbnz	x9, 22f00 <rpl_re_set_registers@@Base+0x3e4c>
   22ee4:	mov	x0, sp
   22ee8:	mov	x1, x22
   22eec:	mov	x2, x23
   22ef0:	mov	w3, wzr
   22ef4:	bl	22dd4 <rpl_re_set_registers@@Base+0x3d20>
   22ef8:	cbz	w0, 22f14 <rpl_re_set_registers@@Base+0x3e60>
   22efc:	b	22fc0 <rpl_re_set_registers@@Base+0x3f0c>
   22f00:	madd	x8, x23, x25, x8
   22f04:	ldr	x9, [x8, #16]
   22f08:	ldr	q0, [x8]
   22f0c:	str	x9, [sp, #16]
   22f10:	str	q0, [sp]
   22f14:	add	x0, sp, #0x18
   22f18:	mov	x1, sp
   22f1c:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   22f20:	cbnz	w0, 22fc0 <rpl_re_set_registers@@Base+0x3f0c>
   22f24:	ldr	x8, [x22, #48]
   22f28:	madd	x8, x23, x25, x8
   22f2c:	ldr	x8, [x8, #8]
   22f30:	cbnz	x8, 22f40 <rpl_re_set_registers@@Base+0x3e8c>
   22f34:	ldr	x0, [sp, #16]
   22f38:	bl	aaa0 <free@plt>
   22f3c:	mov	w26, #0x1                   	// #1
   22f40:	ldr	x8, [x22, #40]
   22f44:	add	x24, x24, #0x1
   22f48:	madd	x9, x20, x25, x8
   22f4c:	ldr	x9, [x9, #8]
   22f50:	cmp	x24, x9
   22f54:	b.lt	22ec0 <rpl_re_set_registers@@Base+0x3e0c>  // b.tstop
   22f58:	tst	w26, #0x1
   22f5c:	cset	w23, eq  // eq = none
   22f60:	b	22f68 <rpl_re_set_registers@@Base+0x3eb4>
   22f64:	mov	w23, #0x1                   	// #1
   22f68:	add	x0, sp, #0x18
   22f6c:	mov	x1, x20
   22f70:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   22f74:	tbz	w0, #0, 22fdc <rpl_re_set_registers@@Base+0x3f28>
   22f78:	ldr	x8, [x22, #48]
   22f7c:	orr	w9, w23, w21
   22f80:	tbz	w9, #0, 22fa0 <rpl_re_set_registers@@Base+0x3eec>
   22f84:	ldr	x9, [sp, #40]
   22f88:	ldur	q0, [sp, #24]
   22f8c:	mov	w10, #0x18                  	// #24
   22f90:	madd	x8, x20, x10, x8
   22f94:	str	x9, [x8, #16]
   22f98:	str	q0, [x8]
   22f9c:	b	22fac <rpl_re_set_registers@@Base+0x3ef8>
   22fa0:	mov	w9, #0x18                  	// #24
   22fa4:	madd	x8, x20, x9, x8
   22fa8:	str	xzr, [x8, #8]
   22fac:	ldr	x8, [sp, #40]
   22fb0:	ldur	q0, [sp, #24]
   22fb4:	mov	w0, wzr
   22fb8:	str	x8, [x19, #16]
   22fbc:	str	q0, [x19]
   22fc0:	ldp	x20, x19, [sp, #112]
   22fc4:	ldp	x22, x21, [sp, #96]
   22fc8:	ldp	x24, x23, [sp, #80]
   22fcc:	ldp	x26, x25, [sp, #64]
   22fd0:	ldp	x29, x30, [sp, #48]
   22fd4:	add	sp, sp, #0x80
   22fd8:	ret
   22fdc:	mov	w0, #0xc                   	// #12
   22fe0:	b	22fc0 <rpl_re_set_registers@@Base+0x3f0c>
   22fe4:	stp	x29, x30, [sp, #-80]!
   22fe8:	stp	x26, x25, [sp, #16]
   22fec:	stp	x24, x23, [sp, #32]
   22ff0:	stp	x22, x21, [sp, #48]
   22ff4:	stp	x20, x19, [sp, #64]
   22ff8:	mov	w19, w4
   22ffc:	mov	x20, x3
   23000:	mov	x22, x2
   23004:	mov	x24, x1
   23008:	mov	x21, x0
   2300c:	mov	w26, #0x18                  	// #24
   23010:	mov	x29, sp
   23014:	mov	x23, x24
   23018:	ldr	x9, [x21]
   2301c:	add	x10, x9, x23, lsl #4
   23020:	ldrb	w8, [x10, #8]!
   23024:	cmp	w8, #0x4
   23028:	b.ne	23088 <rpl_re_set_registers@@Base+0x3fd4>  // b.any
   2302c:	ldr	x8, [x21, #24]
   23030:	ldr	x9, [x21, #40]
   23034:	mov	x0, x21
   23038:	mov	w2, w19
   2303c:	ldr	x24, [x8, x23, lsl #3]
   23040:	madd	x8, x22, x26, x9
   23044:	str	xzr, [x8, #8]
   23048:	mov	x1, x24
   2304c:	bl	234d8 <rpl_re_set_registers@@Base+0x4424>
   23050:	cmn	x0, #0x1
   23054:	b.eq	23244 <rpl_re_set_registers@@Base+0x4190>  // b.none
   23058:	ldr	x8, [x21, #24]
   2305c:	mov	x25, x0
   23060:	mov	x1, x25
   23064:	ldr	x9, [x8, x23, lsl #3]
   23068:	str	x9, [x8, x22, lsl #3]
   2306c:	ldr	x8, [x21, #40]
   23070:	madd	x0, x22, x26, x8
   23074:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   23078:	mov	x23, x24
   2307c:	mov	x22, x25
   23080:	tbnz	w0, #0, 23018 <rpl_re_set_registers@@Base+0x3f64>
   23084:	b	23244 <rpl_re_set_registers@@Base+0x4190>
   23088:	ldr	x8, [x21, #40]
   2308c:	madd	x11, x23, x26, x8
   23090:	ldr	x11, [x11, #8]
   23094:	cbz	x11, 23200 <rpl_re_set_registers@@Base+0x414c>
   23098:	madd	x12, x23, x26, x8
   2309c:	ldr	x12, [x12, #16]
   230a0:	cmp	x11, #0x1
   230a4:	ldr	x24, [x12]
   230a8:	madd	x12, x22, x26, x8
   230ac:	str	xzr, [x12, #8]
   230b0:	b.eq	231ac <rpl_re_set_registers@@Base+0x40f8>  // b.none
   230b4:	ldr	x12, [x21, #16]
   230b8:	sub	x1, x12, #0x1
   230bc:	cmp	x1, #0x1
   230c0:	b.lt	23108 <rpl_re_set_registers@@Base+0x4054>  // b.tstop
   230c4:	add	x10, x9, x1, lsl #4
   230c8:	ldr	w11, [x10, #8]
   230cc:	tbz	w11, #18, 23108 <rpl_re_set_registers@@Base+0x4054>
   230d0:	ldr	x10, [x21, #32]
   230d4:	add	x9, x9, x12, lsl #4
   230d8:	sub	x9, x9, #0x18
   230dc:	ldr	x12, [x10, x1, lsl #3]
   230e0:	cmp	x12, x24
   230e4:	b.ne	230f4 <rpl_re_set_registers@@Base+0x4040>  // b.any
   230e8:	ubfx	w11, w11, #8, #10
   230ec:	cmp	w11, w19
   230f0:	b.eq	2319c <rpl_re_set_registers@@Base+0x40e8>  // b.none
   230f4:	ldr	w11, [x9], #-16
   230f8:	sub	x1, x1, #0x1
   230fc:	cmp	x1, #0x1
   23100:	b.lt	23108 <rpl_re_set_registers@@Base+0x4054>  // b.tstop
   23104:	tbnz	w11, #18, 230dc <rpl_re_set_registers@@Base+0x4028>
   23108:	mov	x0, x21
   2310c:	mov	x1, x24
   23110:	mov	w2, w19
   23114:	bl	234d8 <rpl_re_set_registers@@Base+0x4424>
   23118:	cmn	x0, #0x1
   2311c:	b.eq	23244 <rpl_re_set_registers@@Base+0x4190>  // b.none
   23120:	ldr	x8, [x21, #40]
   23124:	mov	x25, x0
   23128:	mov	x1, x25
   2312c:	madd	x0, x22, x26, x8
   23130:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   23134:	tbz	w0, #0, 23244 <rpl_re_set_registers@@Base+0x4190>
   23138:	mov	x0, x21
   2313c:	mov	x1, x24
   23140:	mov	x2, x25
   23144:	mov	x3, x20
   23148:	mov	w4, w19
   2314c:	bl	22fe4 <rpl_re_set_registers@@Base+0x3f30>
   23150:	cbnz	w0, 23210 <rpl_re_set_registers@@Base+0x415c>
   23154:	ldr	x8, [x21, #40]
   23158:	mov	x0, x21
   2315c:	mov	w2, w19
   23160:	madd	x8, x23, x26, x8
   23164:	ldr	x8, [x8, #16]
   23168:	ldr	x23, [x8, #8]
   2316c:	mov	x1, x23
   23170:	bl	234d8 <rpl_re_set_registers@@Base+0x4424>
   23174:	cmn	x0, #0x1
   23178:	b.eq	23244 <rpl_re_set_registers@@Base+0x4190>  // b.none
   2317c:	ldr	x8, [x21, #40]
   23180:	mov	x24, x0
   23184:	mov	x1, x24
   23188:	madd	x0, x22, x26, x8
   2318c:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   23190:	mov	x22, x24
   23194:	tbnz	w0, #0, 23018 <rpl_re_set_registers@@Base+0x3f64>
   23198:	b	23244 <rpl_re_set_registers@@Base+0x4190>
   2319c:	madd	x0, x22, x26, x8
   231a0:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   231a4:	tbnz	w0, #0, 23154 <rpl_re_set_registers@@Base+0x40a0>
   231a8:	b	23244 <rpl_re_set_registers@@Base+0x4190>
   231ac:	cmp	x23, x20
   231b0:	b.ne	231bc <rpl_re_set_registers@@Base+0x4108>  // b.any
   231b4:	cmp	x22, x23
   231b8:	b.ne	23228 <rpl_re_set_registers@@Base+0x4174>  // b.any
   231bc:	ldr	w8, [x10]
   231c0:	mov	x0, x21
   231c4:	mov	x1, x24
   231c8:	ubfx	w8, w8, #8, #10
   231cc:	orr	w19, w8, w19
   231d0:	mov	w2, w19
   231d4:	bl	234d8 <rpl_re_set_registers@@Base+0x4424>
   231d8:	cmn	x0, #0x1
   231dc:	b.eq	23244 <rpl_re_set_registers@@Base+0x4190>  // b.none
   231e0:	ldr	x8, [x21, #40]
   231e4:	mov	x23, x0
   231e8:	mov	x1, x23
   231ec:	madd	x0, x22, x26, x8
   231f0:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   231f4:	mov	x22, x23
   231f8:	tbnz	w0, #0, 23014 <rpl_re_set_registers@@Base+0x3f60>
   231fc:	b	23244 <rpl_re_set_registers@@Base+0x4190>
   23200:	ldr	x8, [x21, #24]
   23204:	mov	w0, wzr
   23208:	ldr	x9, [x8, x23, lsl #3]
   2320c:	str	x9, [x8, x22, lsl #3]
   23210:	ldp	x20, x19, [sp, #64]
   23214:	ldp	x22, x21, [sp, #48]
   23218:	ldp	x24, x23, [sp, #32]
   2321c:	ldp	x26, x25, [sp, #16]
   23220:	ldp	x29, x30, [sp], #80
   23224:	ret
   23228:	mov	w9, #0x18                  	// #24
   2322c:	madd	x0, x22, x9, x8
   23230:	mov	x1, x24
   23234:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   23238:	tbz	w0, #0, 23244 <rpl_re_set_registers@@Base+0x4190>
   2323c:	mov	w0, wzr
   23240:	b	23210 <rpl_re_set_registers@@Base+0x415c>
   23244:	mov	w0, #0xc                   	// #12
   23248:	b	23210 <rpl_re_set_registers@@Base+0x415c>
   2324c:	stp	x29, x30, [sp, #-48]!
   23250:	str	x21, [sp, #16]
   23254:	stp	x20, x19, [sp, #32]
   23258:	mov	x29, sp
   2325c:	cbz	x1, 2333c <rpl_re_set_registers@@Base+0x4288>
   23260:	ldr	x10, [x1, #8]
   23264:	mov	x20, x1
   23268:	cbz	x10, 2333c <rpl_re_set_registers@@Base+0x4288>
   2326c:	ldp	x8, x11, [x0]
   23270:	mov	x19, x0
   23274:	add	x9, x11, x10, lsl #1
   23278:	cmp	x8, x9
   2327c:	b.ge	232a8 <rpl_re_set_registers@@Base+0x41f4>  // b.tcont
   23280:	ldr	x0, [x19, #16]
   23284:	add	x21, x8, x10
   23288:	lsl	x1, x21, #4
   2328c:	bl	a860 <realloc@plt>
   23290:	cbz	x0, 233c8 <rpl_re_set_registers@@Base+0x4314>
   23294:	lsl	x8, x21, #1
   23298:	str	x0, [x19, #16]
   2329c:	str	x8, [x19]
   232a0:	ldr	x11, [x19, #8]
   232a4:	ldr	x10, [x20, #8]
   232a8:	cbz	x11, 233b4 <rpl_re_set_registers@@Base+0x4300>
   232ac:	sub	x8, x10, #0x1
   232b0:	sub	x9, x11, #0x1
   232b4:	orr	x12, x8, x9
   232b8:	add	x21, x11, x10, lsl #1
   232bc:	tbnz	x12, #63, 23300 <rpl_re_set_registers@@Base+0x424c>
   232c0:	ldr	x10, [x19, #16]
   232c4:	ldr	x11, [x20, #16]
   232c8:	ldr	x13, [x10, x9, lsl #3]
   232cc:	ldr	x12, [x11, x8, lsl #3]
   232d0:	cmp	x13, x12
   232d4:	b.ne	232e0 <rpl_re_set_registers@@Base+0x422c>  // b.any
   232d8:	sub	x8, x8, #0x1
   232dc:	b	232f4 <rpl_re_set_registers@@Base+0x4240>
   232e0:	b.ge	232f4 <rpl_re_set_registers@@Base+0x4240>  // b.tcont
   232e4:	sub	x8, x8, #0x1
   232e8:	sub	x21, x21, #0x1
   232ec:	str	x12, [x10, x21, lsl #3]
   232f0:	b	232f8 <rpl_re_set_registers@@Base+0x4244>
   232f4:	sub	x9, x9, #0x1
   232f8:	orr	x12, x8, x9
   232fc:	tbz	x12, #63, 232c8 <rpl_re_set_registers@@Base+0x4214>
   23300:	tbnz	x8, #63, 23320 <rpl_re_set_registers@@Base+0x426c>
   23304:	ldr	x9, [x19, #16]
   23308:	ldr	x1, [x20, #16]
   2330c:	add	x8, x8, #0x1
   23310:	sub	x21, x21, x8
   23314:	add	x0, x9, x21, lsl #3
   23318:	lsl	x2, x8, #3
   2331c:	bl	a2f0 <memcpy@plt>
   23320:	ldr	x10, [x19, #8]
   23324:	ldr	x8, [x20, #8]
   23328:	sub	x9, x10, #0x1
   2332c:	add	x8, x9, x8, lsl #1
   23330:	sub	x11, x8, x21
   23334:	adds	x11, x11, #0x1
   23338:	b.cc	23350 <rpl_re_set_registers@@Base+0x429c>  // b.lo, b.ul, b.last
   2333c:	mov	w0, wzr
   23340:	ldp	x20, x19, [sp, #32]
   23344:	ldr	x21, [sp, #16]
   23348:	ldp	x29, x30, [sp], #48
   2334c:	ret
   23350:	ldr	x0, [x19, #16]
   23354:	add	x10, x11, x10
   23358:	str	x10, [x19, #8]
   2335c:	add	x10, x0, x9, lsl #3
   23360:	lsl	x2, x11, #3
   23364:	neg	x11, x11
   23368:	ldr	x12, [x0, x8, lsl #3]
   2336c:	ldr	x13, [x0, x9, lsl #3]
   23370:	cmp	x12, x13
   23374:	b.le	23390 <rpl_re_set_registers@@Base+0x42dc>
   23378:	sub	x8, x8, #0x1
   2337c:	str	x12, [x10, x2]
   23380:	adds	x11, x11, #0x1
   23384:	sub	x2, x2, #0x8
   23388:	b.cc	23368 <rpl_re_set_registers@@Base+0x42b4>  // b.lo, b.ul, b.last
   2338c:	b	2333c <rpl_re_set_registers@@Base+0x4288>
   23390:	str	x13, [x10, x2]
   23394:	cmp	x9, #0x0
   23398:	sub	x9, x9, #0x1
   2339c:	neg	x11, x11
   233a0:	sub	x10, x10, #0x8
   233a4:	b.gt	23360 <rpl_re_set_registers@@Base+0x42ac>
   233a8:	add	x1, x0, x21, lsl #3
   233ac:	bl	a2f0 <memcpy@plt>
   233b0:	b	2333c <rpl_re_set_registers@@Base+0x4288>
   233b4:	str	x10, [x19, #8]
   233b8:	ldp	x8, x1, [x20, #8]
   233bc:	ldr	x0, [x19, #16]
   233c0:	lsl	x2, x8, #3
   233c4:	b	233ac <rpl_re_set_registers@@Base+0x42f8>
   233c8:	mov	w0, #0xc                   	// #12
   233cc:	b	23340 <rpl_re_set_registers@@Base+0x428c>
   233d0:	stp	x29, x30, [sp, #-32]!
   233d4:	stp	x20, x19, [sp, #16]
   233d8:	ldr	x9, [x0]
   233dc:	mov	x19, x0
   233e0:	mov	x20, x1
   233e4:	mov	x29, sp
   233e8:	cbz	x9, 2340c <rpl_re_set_registers@@Base+0x4358>
   233ec:	ldr	x8, [x19, #8]
   233f0:	cbnz	x8, 2343c <rpl_re_set_registers@@Base+0x4388>
   233f4:	ldr	x8, [x19, #16]
   233f8:	str	x20, [x8]
   233fc:	ldr	x8, [x19, #8]
   23400:	add	x8, x8, #0x1
   23404:	str	x8, [x19, #8]
   23408:	b	2342c <rpl_re_set_registers@@Base+0x4378>
   2340c:	mov	w8, #0x1                   	// #1
   23410:	dup	v0.2d, x8
   23414:	mov	w0, #0x8                   	// #8
   23418:	str	q0, [x19]
   2341c:	bl	a660 <malloc@plt>
   23420:	str	x0, [x19, #16]
   23424:	cbz	x0, 23468 <rpl_re_set_registers@@Base+0x43b4>
   23428:	str	x20, [x0]
   2342c:	mov	w0, #0x1                   	// #1
   23430:	ldp	x20, x19, [sp, #16]
   23434:	ldp	x29, x30, [sp], #32
   23438:	ret
   2343c:	cmp	x9, x8
   23440:	b.ne	23470 <rpl_re_set_registers@@Base+0x43bc>  // b.any
   23444:	ldr	x0, [x19, #16]
   23448:	lsl	x8, x9, #1
   2344c:	lsl	x1, x9, #4
   23450:	str	x8, [x19]
   23454:	bl	a860 <realloc@plt>
   23458:	cbz	x0, 23430 <rpl_re_set_registers@@Base+0x437c>
   2345c:	ldr	x8, [x19, #8]
   23460:	str	x0, [x19, #16]
   23464:	b	23474 <rpl_re_set_registers@@Base+0x43c0>
   23468:	stp	xzr, xzr, [x19]
   2346c:	b	23430 <rpl_re_set_registers@@Base+0x437c>
   23470:	ldr	x0, [x19, #16]
   23474:	ldr	x9, [x0]
   23478:	cmp	x9, x20
   2347c:	b.le	234a8 <rpl_re_set_registers@@Base+0x43f4>
   23480:	cmp	x8, #0x1
   23484:	b.lt	234d0 <rpl_re_set_registers@@Base+0x441c>  // b.tstop
   23488:	mov	x9, x8
   2348c:	add	x10, x0, x9, lsl #3
   23490:	ldur	x11, [x10, #-8]
   23494:	subs	x8, x9, #0x1
   23498:	mov	x9, x8
   2349c:	str	x11, [x10]
   234a0:	b.gt	2348c <rpl_re_set_registers@@Base+0x43d8>
   234a4:	b	234d0 <rpl_re_set_registers@@Base+0x441c>
   234a8:	add	x9, x0, x8, lsl #3
   234ac:	ldur	x9, [x9, #-8]
   234b0:	cmp	x9, x20
   234b4:	b.le	234d0 <rpl_re_set_registers@@Base+0x441c>
   234b8:	add	x10, x0, x8, lsl #3
   234bc:	str	x9, [x10]
   234c0:	ldur	x9, [x10, #-16]
   234c4:	sub	x8, x8, #0x1
   234c8:	cmp	x9, x20
   234cc:	b.gt	234b8 <rpl_re_set_registers@@Base+0x4404>
   234d0:	str	x20, [x0, x8, lsl #3]
   234d4:	b	233fc <rpl_re_set_registers@@Base+0x4348>
   234d8:	stp	x29, x30, [sp, #-48]!
   234dc:	stp	x20, x19, [sp, #32]
   234e0:	ldr	x8, [x0]
   234e4:	str	x21, [sp, #16]
   234e8:	mov	x19, x1
   234ec:	mov	w21, w2
   234f0:	add	x8, x8, x1, lsl #4
   234f4:	ldp	x1, x8, [x8]
   234f8:	mov	x29, sp
   234fc:	mov	x20, x0
   23500:	mov	x2, x8
   23504:	bl	22c10 <rpl_re_set_registers@@Base+0x3b5c>
   23508:	cmn	x0, #0x1
   2350c:	b.eq	23560 <rpl_re_set_registers@@Base+0x44ac>  // b.none
   23510:	ldr	x8, [x20]
   23514:	add	x8, x8, x0, lsl #4
   23518:	ldr	w9, [x8, #8]
   2351c:	bfi	w9, w21, #8, #10
   23520:	str	w9, [x8, #8]
   23524:	ldr	x8, [x20]
   23528:	add	x9, x8, x19, lsl #4
   2352c:	ldr	w9, [x9, #8]
   23530:	add	x8, x8, x0, lsl #4
   23534:	ldr	w10, [x8, #8]
   23538:	and	w9, w9, #0x3ff00
   2353c:	orr	w9, w9, w10
   23540:	str	w9, [x8, #8]
   23544:	ldr	x8, [x20]
   23548:	add	x8, x8, x0, lsl #4
   2354c:	ldr	w9, [x8, #8]
   23550:	orr	w9, w9, #0x40000
   23554:	str	w9, [x8, #8]
   23558:	ldr	x8, [x20, #32]
   2355c:	str	x19, [x8, x0, lsl #3]
   23560:	ldp	x20, x19, [sp, #32]
   23564:	ldr	x21, [sp, #16]
   23568:	ldp	x29, x30, [sp], #48
   2356c:	ret
   23570:	stp	x29, x30, [sp, #-32]!
   23574:	stp	x20, x19, [sp, #16]
   23578:	ldp	x9, x8, [x0]
   2357c:	mov	x19, x0
   23580:	mov	x20, x1
   23584:	mov	x29, sp
   23588:	cmp	x9, x8
   2358c:	b.ne	235b8 <rpl_re_set_registers@@Base+0x4504>  // b.any
   23590:	ldr	x0, [x19, #16]
   23594:	lsl	x8, x9, #1
   23598:	add	x8, x8, #0x2
   2359c:	lsl	x1, x8, #3
   235a0:	str	x8, [x19]
   235a4:	bl	a860 <realloc@plt>
   235a8:	cbz	x0, 235cc <rpl_re_set_registers@@Base+0x4518>
   235ac:	ldr	x8, [x19, #8]
   235b0:	str	x0, [x19, #16]
   235b4:	b	235bc <rpl_re_set_registers@@Base+0x4508>
   235b8:	ldr	x0, [x19, #16]
   235bc:	add	x9, x8, #0x1
   235c0:	str	x9, [x19, #8]
   235c4:	str	x20, [x0, x8, lsl #3]
   235c8:	mov	w0, #0x1                   	// #1
   235cc:	ldp	x20, x19, [sp, #16]
   235d0:	ldp	x29, x30, [sp], #32
   235d4:	ret
   235d8:	stp	x29, x30, [sp, #-48]!
   235dc:	stp	x20, x19, [sp, #32]
   235e0:	ldr	x8, [x1, #8]
   235e4:	str	x21, [sp, #16]
   235e8:	mov	x19, x0
   235ec:	mov	x29, sp
   235f0:	str	x8, [x0, #8]
   235f4:	ldr	x21, [x1, #8]
   235f8:	cmp	x21, #0x1
   235fc:	b.lt	2362c <rpl_re_set_registers@@Base+0x4578>  // b.tstop
   23600:	lsl	x0, x8, #3
   23604:	mov	x20, x1
   23608:	str	x8, [x19]
   2360c:	bl	a660 <malloc@plt>
   23610:	str	x0, [x19, #16]
   23614:	cbz	x0, 23648 <rpl_re_set_registers@@Base+0x4594>
   23618:	ldr	x1, [x20, #16]
   2361c:	lsl	x2, x21, #3
   23620:	bl	a2f0 <memcpy@plt>
   23624:	mov	w0, wzr
   23628:	b	23638 <rpl_re_set_registers@@Base+0x4584>
   2362c:	mov	w0, wzr
   23630:	stp	xzr, xzr, [x19]
   23634:	str	xzr, [x19, #16]
   23638:	ldp	x20, x19, [sp, #32]
   2363c:	ldr	x21, [sp, #16]
   23640:	ldp	x29, x30, [sp], #48
   23644:	ret
   23648:	stp	xzr, xzr, [x19]
   2364c:	mov	w0, #0xc                   	// #12
   23650:	b	23638 <rpl_re_set_registers@@Base+0x4584>
   23654:	ldr	x8, [x0, #8]
   23658:	subs	x9, x8, #0x1
   2365c:	b.lt	2369c <rpl_re_set_registers@@Base+0x45e8>  // b.tstop
   23660:	ldr	x8, [x0, #16]
   23664:	mov	x10, xzr
   23668:	b.eq	2368c <rpl_re_set_registers@@Base+0x45d8>  // b.none
   2366c:	add	x11, x9, x10
   23670:	lsr	x11, x11, #1
   23674:	ldr	x12, [x8, x11, lsl #3]
   23678:	cmp	x12, x1
   2367c:	csinc	x10, x10, x11, ge  // ge = tcont
   23680:	csel	x9, x9, x11, lt  // lt = tstop
   23684:	cmp	x10, x9
   23688:	b.cc	2366c <rpl_re_set_registers@@Base+0x45b8>  // b.lo, b.ul, b.last
   2368c:	ldr	x8, [x8, x10, lsl #3]
   23690:	cmp	x8, x1
   23694:	csinc	x0, xzr, x10, ne  // ne = any
   23698:	ret
   2369c:	mov	x0, xzr
   236a0:	ret
   236a4:	stp	x29, x30, [sp, #-96]!
   236a8:	stp	x26, x25, [sp, #32]
   236ac:	stp	x24, x23, [sp, #48]
   236b0:	stp	x22, x21, [sp, #64]
   236b4:	stp	x20, x19, [sp, #80]
   236b8:	ldr	x8, [x2, #8]
   236bc:	mov	x19, x0
   236c0:	str	x27, [sp, #16]
   236c4:	mov	x29, sp
   236c8:	cbz	x8, 23930 <rpl_re_set_registers@@Base+0x487c>
   236cc:	mov	w21, w3
   236d0:	mov	x22, x2
   236d4:	mov	x20, x1
   236d8:	subs	x9, x8, #0x1
   236dc:	add	x23, x8, w3, uxtw
   236e0:	b.lt	236fc <rpl_re_set_registers@@Base+0x4648>  // b.tstop
   236e4:	ldr	x10, [x22, #16]
   236e8:	mov	x11, x8
   236ec:	ldr	x12, [x10], #8
   236f0:	subs	x11, x11, #0x1
   236f4:	add	x23, x12, x23
   236f8:	b.ne	236ec <rpl_re_set_registers@@Base+0x4638>  // b.any
   236fc:	ldr	x10, [x20, #136]
   23700:	ldr	x11, [x20, #64]
   23704:	and	x12, x10, x23
   23708:	mov	w10, #0x18                  	// #24
   2370c:	mul	x10, x12, x10
   23710:	ldr	x10, [x11, x10]
   23714:	cmp	x10, #0x1
   23718:	b.lt	2379c <rpl_re_set_registers@@Base+0x46e8>  // b.tstop
   2371c:	mov	w13, #0x18                  	// #24
   23720:	madd	x11, x12, x13, x11
   23724:	ldr	x11, [x11, #16]
   23728:	mov	x12, xzr
   2372c:	ldr	x24, [x11, x12, lsl #3]
   23730:	ldr	x13, [x24]
   23734:	cmp	x13, x23
   23738:	b.ne	23790 <rpl_re_set_registers@@Base+0x46dc>  // b.any
   2373c:	ldrb	w13, [x24, #104]
   23740:	and	w13, w13, #0xf
   23744:	cmp	w13, w21
   23748:	b.ne	23790 <rpl_re_set_registers@@Base+0x46dc>  // b.any
   2374c:	cbz	x22, 23790 <rpl_re_set_registers@@Base+0x46dc>
   23750:	ldr	x13, [x24, #80]
   23754:	cbz	x13, 23790 <rpl_re_set_registers@@Base+0x46dc>
   23758:	ldr	x14, [x13, #8]
   2375c:	cmp	x14, x8
   23760:	b.ne	23790 <rpl_re_set_registers@@Base+0x46dc>  // b.any
   23764:	mov	x14, x9
   23768:	add	x15, x14, #0x1
   2376c:	cmp	x15, #0x1
   23770:	b.lt	23938 <rpl_re_set_registers@@Base+0x4884>  // b.tstop
   23774:	ldr	x15, [x13, #16]
   23778:	ldr	x16, [x22, #16]
   2377c:	ldr	x15, [x15, x14, lsl #3]
   23780:	ldr	x16, [x16, x14, lsl #3]
   23784:	sub	x14, x14, #0x1
   23788:	cmp	x15, x16
   2378c:	b.eq	23768 <rpl_re_set_registers@@Base+0x46b4>  // b.none
   23790:	add	x12, x12, #0x1
   23794:	cmp	x12, x10
   23798:	b.lt	2372c <rpl_re_set_registers@@Base+0x4678>  // b.tstop
   2379c:	mov	w0, #0x70                  	// #112
   237a0:	mov	w1, #0x1                   	// #1
   237a4:	bl	a7f0 <calloc@plt>
   237a8:	cbz	x0, 23920 <rpl_re_set_registers@@Base+0x486c>
   237ac:	add	x25, x0, #0x8
   237b0:	mov	x24, x0
   237b4:	mov	x0, x25
   237b8:	mov	x1, x22
   237bc:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   237c0:	cbnz	w0, 23958 <rpl_re_set_registers@@Base+0x48a4>
   237c4:	ldrb	w8, [x24, #104]
   237c8:	str	x25, [x24, #80]
   237cc:	bfxil	w8, w21, #0, #4
   237d0:	strb	w8, [x24, #104]
   237d4:	ldr	x8, [x22, #8]
   237d8:	cmp	x8, #0x1
   237dc:	b.lt	23904 <rpl_re_set_registers@@Base+0x4850>  // b.tstop
   237e0:	mov	x26, xzr
   237e4:	mov	x8, xzr
   237e8:	ldr	x9, [x22, #16]
   237ec:	ldr	x10, [x20]
   237f0:	ldr	x9, [x9, x26, lsl #3]
   237f4:	add	x9, x10, x9, lsl #4
   237f8:	ldr	w27, [x9, #8]
   237fc:	and	w9, w27, #0x3ffff
   23800:	cmp	w9, #0x1
   23804:	b.eq	238f4 <rpl_re_set_registers@@Base+0x4840>  // b.none
   23808:	ldrb	w10, [x24, #104]
   2380c:	lsr	w12, w27, #15
   23810:	and	w11, w27, #0xff
   23814:	and	w12, w12, #0x20
   23818:	and	w9, w27, #0x3ff00
   2381c:	orr	w10, w10, w12
   23820:	cmp	w11, #0x2
   23824:	strb	w10, [x24, #104]
   23828:	b.eq	2383c <rpl_re_set_registers@@Base+0x4788>  // b.none
   2382c:	cmp	w11, #0x4
   23830:	b.ne	23848 <rpl_re_set_registers@@Base+0x4794>  // b.any
   23834:	mov	w11, #0x40                  	// #64
   23838:	b	23840 <rpl_re_set_registers@@Base+0x478c>
   2383c:	mov	w11, #0x10                  	// #16
   23840:	orr	w10, w10, w11
   23844:	strb	w10, [x24, #104]
   23848:	cbz	w9, 238f4 <rpl_re_set_registers@@Base+0x4840>
   2384c:	ldr	x9, [x24, #80]
   23850:	cmp	x9, x25
   23854:	b.eq	23860 <rpl_re_set_registers@@Base+0x47ac>  // b.none
   23858:	tbz	w21, #0, 23890 <rpl_re_set_registers@@Base+0x47dc>
   2385c:	b	23894 <rpl_re_set_registers@@Base+0x47e0>
   23860:	mov	w0, #0x18                  	// #24
   23864:	bl	a660 <malloc@plt>
   23868:	cbz	x0, 23918 <rpl_re_set_registers@@Base+0x4864>
   2386c:	mov	x1, x22
   23870:	str	x0, [x24, #80]
   23874:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   23878:	cbnz	w0, 23918 <rpl_re_set_registers@@Base+0x4864>
   2387c:	ldrb	w9, [x24, #104]
   23880:	mov	x8, xzr
   23884:	orr	w9, w9, #0x80
   23888:	strb	w9, [x24, #104]
   2388c:	tbnz	w21, #0, 23894 <rpl_re_set_registers@@Base+0x47e0>
   23890:	tbnz	w27, #8, 238ac <rpl_re_set_registers@@Base+0x47f8>
   23894:	tbz	w21, #0, 2389c <rpl_re_set_registers@@Base+0x47e8>
   23898:	tbnz	w27, #9, 238ac <rpl_re_set_registers@@Base+0x47f8>
   2389c:	tbnz	w21, #1, 238a4 <rpl_re_set_registers@@Base+0x47f0>
   238a0:	tbnz	w27, #12, 238ac <rpl_re_set_registers@@Base+0x47f8>
   238a4:	tbnz	w21, #2, 238f4 <rpl_re_set_registers@@Base+0x4840>
   238a8:	tbz	w27, #14, 238f4 <rpl_re_set_registers@@Base+0x4840>
   238ac:	subs	x9, x26, x8
   238b0:	b.mi	238f0 <rpl_re_set_registers@@Base+0x483c>  // b.first
   238b4:	ldr	x10, [x24, #16]
   238b8:	cmp	x10, x9
   238bc:	b.le	238f0 <rpl_re_set_registers@@Base+0x483c>
   238c0:	sub	x10, x10, #0x1
   238c4:	cmp	x10, x9
   238c8:	str	x10, [x24, #16]
   238cc:	b.le	238f0 <rpl_re_set_registers@@Base+0x483c>
   238d0:	ldr	x10, [x24, #24]
   238d4:	add	x11, x10, x9, lsl #3
   238d8:	ldr	x12, [x11, #8]
   238dc:	add	x9, x9, #0x1
   238e0:	str	x12, [x11]
   238e4:	ldr	x11, [x24, #16]
   238e8:	cmp	x9, x11
   238ec:	b.lt	238d4 <rpl_re_set_registers@@Base+0x4820>  // b.tstop
   238f0:	add	x8, x8, #0x1
   238f4:	ldr	x9, [x22, #8]
   238f8:	add	x26, x26, #0x1
   238fc:	cmp	x26, x9
   23900:	b.lt	237e8 <rpl_re_set_registers@@Base+0x4734>  // b.tstop
   23904:	mov	x0, x20
   23908:	mov	x1, x24
   2390c:	mov	x2, x23
   23910:	bl	23964 <rpl_re_set_registers@@Base+0x48b0>
   23914:	cbz	w0, 23938 <rpl_re_set_registers@@Base+0x4884>
   23918:	mov	x0, x24
   2391c:	bl	1f114 <rpl_re_set_registers@@Base+0x60>
   23920:	mov	x24, xzr
   23924:	mov	w8, #0xc                   	// #12
   23928:	str	w8, [x19]
   2392c:	b	23938 <rpl_re_set_registers@@Base+0x4884>
   23930:	mov	x24, xzr
   23934:	str	wzr, [x19]
   23938:	mov	x0, x24
   2393c:	ldp	x20, x19, [sp, #80]
   23940:	ldp	x22, x21, [sp, #64]
   23944:	ldp	x24, x23, [sp, #48]
   23948:	ldp	x26, x25, [sp, #32]
   2394c:	ldr	x27, [sp, #16]
   23950:	ldp	x29, x30, [sp], #96
   23954:	ret
   23958:	mov	x0, x24
   2395c:	bl	aaa0 <free@plt>
   23960:	b	23920 <rpl_re_set_registers@@Base+0x486c>
   23964:	stp	x29, x30, [sp, #-64]!
   23968:	stp	x24, x23, [sp, #16]
   2396c:	stp	x22, x21, [sp, #32]
   23970:	stp	x20, x19, [sp, #48]
   23974:	ldr	x23, [x1, #16]
   23978:	mov	x21, x0
   2397c:	mov	x22, x1
   23980:	mov	x29, sp
   23984:	lsl	x0, x23, #3
   23988:	mov	x20, x2
   2398c:	mov	x19, x1
   23990:	str	x2, [x1]
   23994:	str	x23, [x22, #32]!
   23998:	str	xzr, [x1, #40]
   2399c:	bl	a660 <malloc@plt>
   239a0:	str	x0, [x19, #48]
   239a4:	cbz	x0, 23a64 <rpl_re_set_registers@@Base+0x49b0>
   239a8:	cmp	x23, #0x1
   239ac:	b.lt	239e8 <rpl_re_set_registers@@Base+0x4934>  // b.tstop
   239b0:	mov	x24, xzr
   239b4:	ldr	x8, [x19, #24]
   239b8:	ldr	x1, [x8, x24, lsl #3]
   239bc:	ldr	x8, [x21]
   239c0:	add	x8, x8, x1, lsl #4
   239c4:	ldrb	w8, [x8, #8]
   239c8:	tbnz	w8, #3, 239dc <rpl_re_set_registers@@Base+0x4928>
   239cc:	mov	x0, x22
   239d0:	bl	23570 <rpl_re_set_registers@@Base+0x44bc>
   239d4:	tbz	w0, #0, 23a64 <rpl_re_set_registers@@Base+0x49b0>
   239d8:	ldr	x23, [x19, #16]
   239dc:	add	x24, x24, #0x1
   239e0:	cmp	x24, x23
   239e4:	b.lt	239b4 <rpl_re_set_registers@@Base+0x4900>  // b.tstop
   239e8:	ldr	x9, [x21, #136]
   239ec:	ldr	x8, [x21, #64]
   239f0:	mov	w11, #0x18                  	// #24
   239f4:	and	x10, x9, x20
   239f8:	madd	x20, x10, x11, x8
   239fc:	mov	x21, x20
   23a00:	ldr	x11, [x21, #8]!
   23a04:	ldr	x9, [x20]
   23a08:	cmp	x11, x9
   23a0c:	b.le	23a30 <rpl_re_set_registers@@Base+0x497c>
   23a10:	mov	w11, #0x18                  	// #24
   23a14:	madd	x8, x10, x11, x8
   23a18:	ldr	x8, [x8, #16]
   23a1c:	mov	w0, wzr
   23a20:	add	x10, x9, #0x1
   23a24:	str	x10, [x20]
   23a28:	str	x19, [x8, x9, lsl #3]
   23a2c:	b	23a68 <rpl_re_set_registers@@Base+0x49b4>
   23a30:	mov	w11, #0x18                  	// #24
   23a34:	madd	x22, x10, x11, x8
   23a38:	ldr	x0, [x22, #16]!
   23a3c:	lsl	x8, x9, #1
   23a40:	add	x23, x8, #0x2
   23a44:	lsl	x1, x23, #3
   23a48:	bl	a860 <realloc@plt>
   23a4c:	cbz	x0, 23a64 <rpl_re_set_registers@@Base+0x49b0>
   23a50:	str	x0, [x22]
   23a54:	str	x23, [x21]
   23a58:	ldr	x9, [x20]
   23a5c:	mov	x8, x0
   23a60:	b	23a1c <rpl_re_set_registers@@Base+0x4968>
   23a64:	mov	w0, #0xc                   	// #12
   23a68:	ldp	x20, x19, [sp, #48]
   23a6c:	ldp	x22, x21, [sp, #32]
   23a70:	ldp	x24, x23, [sp, #16]
   23a74:	ldp	x29, x30, [sp], #64
   23a78:	ret
   23a7c:	sub	sp, sp, #0x70
   23a80:	stp	x29, x30, [sp, #32]
   23a84:	str	x25, [sp, #48]
   23a88:	stp	x24, x23, [sp, #64]
   23a8c:	stp	x22, x21, [sp, #80]
   23a90:	stp	x20, x19, [sp, #96]
   23a94:	mov	x9, x0
   23a98:	ldr	x8, [x9, #40]!
   23a9c:	mov	x19, x0
   23aa0:	mov	x20, x1
   23aa4:	add	x29, sp, #0x20
   23aa8:	cmp	x8, x1
   23aac:	b.le	23c04 <rpl_re_set_registers@@Base+0x4b50>
   23ab0:	ldr	w8, [x19, #144]
   23ab4:	cmp	w8, #0x2
   23ab8:	b.lt	23ac0 <rpl_re_set_registers@@Base+0x4a0c>  // b.tstop
   23abc:	str	xzr, [x19, #32]
   23ac0:	ldr	x10, [x19, #80]
   23ac4:	ldr	x11, [x19, #96]
   23ac8:	strb	wzr, [x19, #140]
   23acc:	tst	w2, #0x1
   23ad0:	str	x10, [x19, #88]
   23ad4:	str	x11, [x19, #104]
   23ad8:	stp	xzr, xzr, [x9]
   23adc:	str	xzr, [x9, #16]
   23ae0:	ldrb	w9, [x19, #139]
   23ae4:	mov	w10, #0x4                   	// #4
   23ae8:	mov	w11, #0x6                   	// #6
   23aec:	mov	x8, xzr
   23af0:	csel	w10, w11, w10, eq  // eq = none
   23af4:	mov	x23, x20
   23af8:	str	w10, [x19, #112]
   23afc:	cbnz	w9, 23b10 <rpl_re_set_registers@@Base+0x4a5c>
   23b00:	ldr	x9, [x19]
   23b04:	mov	x8, xzr
   23b08:	mov	x23, x20
   23b0c:	str	x9, [x19, #8]
   23b10:	cbz	x23, 23b88 <rpl_re_set_registers@@Base+0x4ad4>
   23b14:	ldr	x10, [x19, #56]
   23b18:	cmp	x23, x10
   23b1c:	b.ge	23c10 <rpl_re_set_registers@@Base+0x4b5c>  // b.tcont
   23b20:	ldrb	w8, [x19, #140]
   23b24:	cbnz	w8, 23d64 <rpl_re_set_registers@@Base+0x4cb0>
   23b28:	sub	x1, x23, #0x1
   23b2c:	mov	x0, x19
   23b30:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   23b34:	ldr	w8, [x19, #144]
   23b38:	str	w0, [x19, #112]
   23b3c:	cmp	w8, #0x2
   23b40:	b.lt	23b5c <rpl_re_set_registers@@Base+0x4aa8>  // b.tstop
   23b44:	ldr	x8, [x19, #48]
   23b48:	ldr	x0, [x19, #16]
   23b4c:	sub	x8, x8, x23
   23b50:	add	x1, x0, x23, lsl #2
   23b54:	lsl	x2, x8, #2
   23b58:	bl	a300 <memmove@plt>
   23b5c:	ldrb	w8, [x19, #139]
   23b60:	cbnz	w8, 23e4c <rpl_re_set_registers@@Base+0x4d98>
   23b64:	ldr	q0, [x19, #48]
   23b68:	dup	v1.2d, x23
   23b6c:	sub	v0.2d, v0.2d, v1.2d
   23b70:	str	q0, [x19, #48]
   23b74:	ldrb	w8, [x19, #139]
   23b78:	cbnz	w8, 23b88 <rpl_re_set_registers@@Base+0x4ad4>
   23b7c:	ldr	x8, [x19, #8]
   23b80:	add	x8, x8, x23
   23b84:	str	x8, [x19, #8]
   23b88:	ldr	x8, [x19, #88]
   23b8c:	ldr	x9, [x19, #104]
   23b90:	ldr	w10, [x19, #144]
   23b94:	str	x20, [x19, #40]
   23b98:	sub	x8, x8, x23
   23b9c:	sub	x9, x9, x23
   23ba0:	cmp	w10, #0x2
   23ba4:	str	x8, [x19, #88]
   23ba8:	str	x9, [x19, #104]
   23bac:	b.lt	23bc8 <rpl_re_set_registers@@Base+0x4b14>  // b.tstop
   23bb0:	ldrb	w8, [x19, #136]
   23bb4:	cbz	w8, 23bd8 <rpl_re_set_registers@@Base+0x4b24>
   23bb8:	mov	x0, x19
   23bbc:	bl	1f2dc <rpl_re_set_registers@@Base+0x228>
   23bc0:	cbnz	w0, 23be8 <rpl_re_set_registers@@Base+0x4b34>
   23bc4:	b	23be0 <rpl_re_set_registers@@Base+0x4b2c>
   23bc8:	ldrb	w9, [x19, #139]
   23bcc:	cbnz	w9, 23edc <rpl_re_set_registers@@Base+0x4e28>
   23bd0:	str	x8, [x19, #48]
   23bd4:	b	23be0 <rpl_re_set_registers@@Base+0x4b2c>
   23bd8:	mov	x0, x19
   23bdc:	bl	1f854 <rpl_re_set_registers@@Base+0x7a0>
   23be0:	mov	w0, wzr
   23be4:	str	xzr, [x19, #72]
   23be8:	ldp	x20, x19, [sp, #96]
   23bec:	ldp	x22, x21, [sp, #80]
   23bf0:	ldp	x24, x23, [sp, #64]
   23bf4:	ldr	x25, [sp, #48]
   23bf8:	ldp	x29, x30, [sp, #32]
   23bfc:	add	sp, sp, #0x70
   23c00:	ret
   23c04:	sub	x23, x20, x8
   23c08:	cbnz	x23, 23b14 <rpl_re_set_registers@@Base+0x4a60>
   23c0c:	b	23b88 <rpl_re_set_registers@@Base+0x4ad4>
   23c10:	ldrb	w11, [x19, #140]
   23c14:	ldr	x9, [x19, #48]
   23c18:	cbnz	w11, 24020 <rpl_re_set_registers@@Base+0x4f6c>
   23c1c:	ldr	w11, [x19, #144]
   23c20:	str	xzr, [x19, #48]
   23c24:	cmp	w11, #0x2
   23c28:	b.lt	23ef0 <rpl_re_set_registers@@Base+0x4e3c>  // b.tstop
   23c2c:	ldrb	w12, [x19, #137]
   23c30:	cbz	w12, 23ce8 <rpl_re_set_registers@@Base+0x4c34>
   23c34:	ldr	x14, [x19]
   23c38:	sub	x11, x23, x11
   23c3c:	add	x12, x14, x8
   23c40:	add	x11, x12, x11
   23c44:	cmp	x11, x14
   23c48:	add	x24, x12, x23
   23c4c:	csel	x13, x14, x11, cc  // cc = lo, ul, last
   23c50:	add	x11, x14, x23
   23c54:	add	x14, x11, x8
   23c58:	sub	x14, x14, #0x1
   23c5c:	cmp	x14, x13
   23c60:	b.cc	23ce8 <rpl_re_set_registers@@Base+0x4c34>  // b.lo, b.ul, b.last
   23c64:	ldrb	w14, [x14]
   23c68:	sub	x11, x11, #0x1
   23c6c:	and	w14, w14, #0xc0
   23c70:	cmp	w14, #0x80
   23c74:	b.eq	23c54 <rpl_re_set_registers@@Base+0x4ba0>  // b.none
   23c78:	ldr	x10, [x19, #88]
   23c7c:	mov	x21, x9
   23c80:	ldr	x9, [x19, #120]
   23c84:	add	x25, x11, x8
   23c88:	add	x10, x12, x10
   23c8c:	mov	w22, w2
   23c90:	sub	x2, x10, x25
   23c94:	mov	x1, x25
   23c98:	cbnz	x9, 2408c <rpl_re_set_registers@@Base+0x4fd8>
   23c9c:	sub	x0, x29, #0x4
   23ca0:	add	x3, x29, #0x18
   23ca4:	str	xzr, [x29, #24]
   23ca8:	bl	a430 <rpl_mbrtowc@plt>
   23cac:	sub	x8, x24, x25
   23cb0:	subs	x9, x0, x8
   23cb4:	mov	w8, #0xffffffff            	// #-1
   23cb8:	b.cc	23cd0 <rpl_re_set_registers@@Base+0x4c1c>  // b.lo, b.ul, b.last
   23cbc:	cmn	x0, #0x3
   23cc0:	b.hi	23cd0 <rpl_re_set_registers@@Base+0x4c1c>  // b.pmore
   23cc4:	str	xzr, [x19, #32]
   23cc8:	str	x9, [x19, #48]
   23ccc:	ldur	w8, [x29, #-4]
   23cd0:	cmn	w8, #0x1
   23cd4:	b.ne	23f80 <rpl_re_set_registers@@Base+0x4ecc>  // b.any
   23cd8:	ldr	x8, [x19, #40]
   23cdc:	ldr	x10, [x19, #56]
   23ce0:	mov	w2, w22
   23ce4:	mov	x9, x21
   23ce8:	add	x24, x10, x8
   23cec:	subs	x21, x24, x20
   23cf0:	b.ge	23f6c <rpl_re_set_registers@@Base+0x4eb8>  // b.tcont
   23cf4:	add	x22, x19, #0x20
   23cf8:	str	x9, [sp, #8]
   23cfc:	str	w2, [sp, #4]
   23d00:	ldr	x8, [x19, #80]
   23d04:	ldr	x9, [x19]
   23d08:	ldr	x25, [x19, #32]
   23d0c:	add	x0, x29, #0x18
   23d10:	sub	x21, x8, x24
   23d14:	add	x1, x9, x24
   23d18:	mov	x2, x21
   23d1c:	mov	x3, x22
   23d20:	bl	a430 <rpl_mbrtowc@plt>
   23d24:	sub	x8, x0, #0x1
   23d28:	cmn	x8, #0x3
   23d2c:	b.cs	23d44 <rpl_re_set_registers@@Base+0x4c90>  // b.hs, b.nlast
   23d30:	ldr	w8, [x29, #24]
   23d34:	add	x24, x0, x24
   23d38:	subs	x21, x24, x20
   23d3c:	b.lt	23d00 <rpl_re_set_registers@@Base+0x4c4c>  // b.tstop
   23d40:	b	23f74 <rpl_re_set_registers@@Base+0x4ec0>
   23d44:	mov	w8, wzr
   23d48:	cbz	x21, 23d58 <rpl_re_set_registers@@Base+0x4ca4>
   23d4c:	cbz	x0, 23d58 <rpl_re_set_registers@@Base+0x4ca4>
   23d50:	ldr	x8, [x19]
   23d54:	ldrb	w8, [x8, x24]
   23d58:	str	x25, [x22]
   23d5c:	mov	w0, #0x1                   	// #1
   23d60:	b	23d34 <rpl_re_set_registers@@Base+0x4c80>
   23d64:	ldr	x22, [x19, #48]
   23d68:	ldr	x21, [x19, #24]
   23d6c:	mov	x8, xzr
   23d70:	mov	x10, x22
   23d74:	add	x9, x8, x10
   23d78:	cmp	x9, #0x0
   23d7c:	cinc	x9, x9, lt  // lt = tstop
   23d80:	asr	x9, x9, #1
   23d84:	ldr	x11, [x21, x9, lsl #3]
   23d88:	mov	x12, x9
   23d8c:	cmp	x11, x23
   23d90:	b.gt	23da0 <rpl_re_set_registers@@Base+0x4cec>
   23d94:	b.ge	23dac <rpl_re_set_registers@@Base+0x4cf8>  // b.tcont
   23d98:	add	x8, x9, #0x1
   23d9c:	mov	x12, x10
   23da0:	cmp	x8, x12
   23da4:	mov	x10, x12
   23da8:	b.lt	23d74 <rpl_re_set_registers@@Base+0x4cc0>  // b.tstop
   23dac:	cmp	x11, x23
   23db0:	cinc	x24, x9, lt  // lt = tstop
   23db4:	sub	x1, x24, #0x1
   23db8:	mov	x0, x19
   23dbc:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   23dc0:	subs	x8, x22, x23
   23dc4:	str	w0, [x19, #112]
   23dc8:	b.le	23e64 <rpl_re_set_registers@@Base+0x4db0>
   23dcc:	cmp	x24, x23
   23dd0:	b.ne	23e64 <rpl_re_set_registers@@Base+0x4db0>  // b.any
   23dd4:	ldr	x9, [x21, x23, lsl #3]
   23dd8:	cmp	x9, x23
   23ddc:	b.ne	23e64 <rpl_re_set_registers@@Base+0x4db0>  // b.any
   23de0:	ldr	x0, [x19, #16]
   23de4:	lsl	x2, x8, #2
   23de8:	add	x1, x0, x23, lsl #2
   23dec:	bl	a300 <memmove@plt>
   23df0:	ldr	x0, [x19, #8]
   23df4:	ldr	x8, [x19, #48]
   23df8:	add	x1, x0, x23
   23dfc:	sub	x2, x8, x23
   23e00:	bl	a300 <memmove@plt>
   23e04:	ldr	q0, [x19, #48]
   23e08:	dup	v1.2d, x23
   23e0c:	sub	v0.2d, v0.2d, v1.2d
   23e10:	fmov	x8, d0
   23e14:	cmp	x8, #0x1
   23e18:	str	q0, [x19, #48]
   23e1c:	b.lt	23b74 <rpl_re_set_registers@@Base+0x4ac0>  // b.tstop
   23e20:	ldr	x9, [x19, #24]
   23e24:	mov	x8, xzr
   23e28:	add	x10, x9, x23, lsl #3
   23e2c:	ldr	x11, [x10, x8, lsl #3]
   23e30:	sub	x11, x11, x23
   23e34:	str	x11, [x9, x8, lsl #3]
   23e38:	ldr	x11, [x19, #48]
   23e3c:	add	x8, x8, #0x1
   23e40:	cmp	x8, x11
   23e44:	b.lt	23e2c <rpl_re_set_registers@@Base+0x4d78>  // b.tstop
   23e48:	b	23b74 <rpl_re_set_registers@@Base+0x4ac0>
   23e4c:	ldr	x0, [x19, #8]
   23e50:	ldr	x8, [x19, #48]
   23e54:	add	x1, x0, x23
   23e58:	sub	x2, x8, x23
   23e5c:	bl	a300 <memmove@plt>
   23e60:	b	23b64 <rpl_re_set_registers@@Base+0x4ab0>
   23e64:	ldr	x9, [x19, #96]
   23e68:	ldr	x8, [x19, #80]
   23e6c:	sub	x10, x23, x20
   23e70:	strb	wzr, [x19, #140]
   23e74:	add	x9, x10, x9
   23e78:	add	x8, x10, x8
   23e7c:	str	x9, [x19, #104]
   23e80:	sub	x9, x21, #0x8
   23e84:	str	x8, [x19, #88]
   23e88:	mov	x8, x24
   23e8c:	subs	x24, x24, #0x1
   23e90:	b.lt	23ea0 <rpl_re_set_registers@@Base+0x4dec>  // b.tstop
   23e94:	ldr	x10, [x9, x8, lsl #3]
   23e98:	cmp	x10, x23
   23e9c:	b.eq	23e88 <rpl_re_set_registers@@Base+0x4dd4>  // b.none
   23ea0:	cmp	x8, x22
   23ea4:	b.ge	23ec8 <rpl_re_set_registers@@Base+0x4e14>  // b.tcont
   23ea8:	ldr	x9, [x19, #16]
   23eac:	ldr	w10, [x9, x8, lsl #2]
   23eb0:	cmn	w10, #0x1
   23eb4:	b.ne	23ec8 <rpl_re_set_registers@@Base+0x4e14>  // b.any
   23eb8:	add	x8, x8, #0x1
   23ebc:	cmp	x22, x8
   23ec0:	b.ne	23eac <rpl_re_set_registers@@Base+0x4df8>  // b.any
   23ec4:	b	23ed0 <rpl_re_set_registers@@Base+0x4e1c>
   23ec8:	cmp	x8, x22
   23ecc:	b.ne	23f30 <rpl_re_set_registers@@Base+0x4e7c>  // b.any
   23ed0:	mov	x8, xzr
   23ed4:	str	xzr, [x19, #48]
   23ed8:	b	24018 <rpl_re_set_registers@@Base+0x4f64>
   23edc:	ldrb	w8, [x19, #136]
   23ee0:	cbz	w8, 23fa4 <rpl_re_set_registers@@Base+0x4ef0>
   23ee4:	mov	x0, x19
   23ee8:	bl	1f7dc <rpl_re_set_registers@@Base+0x728>
   23eec:	b	23be0 <rpl_re_set_registers@@Base+0x4b2c>
   23ef0:	ldr	x9, [x19]
   23ef4:	add	x8, x23, x8
   23ef8:	add	x8, x8, x9
   23efc:	ldr	x9, [x19, #120]
   23f00:	ldurb	w8, [x8, #-1]
   23f04:	str	xzr, [x19, #56]
   23f08:	cbz	x9, 23f10 <rpl_re_set_registers@@Base+0x4e5c>
   23f0c:	ldrb	w8, [x9, x8]
   23f10:	ldr	x9, [x19, #128]
   23f14:	lsr	x10, x8, #3
   23f18:	and	x10, x10, #0x18
   23f1c:	ldr	x9, [x9, x10]
   23f20:	lsr	x9, x9, x8
   23f24:	tbz	w9, #0, 23fb8 <rpl_re_set_registers@@Base+0x4f04>
   23f28:	mov	w8, #0x1                   	// #1
   23f2c:	b	23ff0 <rpl_re_set_registers@@Base+0x4f3c>
   23f30:	ldr	x8, [x21, x8, lsl #3]
   23f34:	subs	x21, x8, x23
   23f38:	str	x21, [x19, #48]
   23f3c:	b.eq	23fe4 <rpl_re_set_registers@@Base+0x4f30>  // b.none
   23f40:	cmp	x21, #0x1
   23f44:	b.lt	23f58 <rpl_re_set_registers@@Base+0x4ea4>  // b.tstop
   23f48:	ldr	x0, [x19, #16]
   23f4c:	lsl	x2, x21, #2
   23f50:	mov	w1, #0xff                  	// #255
   23f54:	bl	a770 <memset@plt>
   23f58:	ldr	x0, [x19, #8]
   23f5c:	mov	w1, #0xff                  	// #255
   23f60:	mov	x2, x21
   23f64:	bl	a770 <memset@plt>
   23f68:	b	24014 <rpl_re_set_registers@@Base+0x4f60>
   23f6c:	str	x21, [x19, #48]
   23f70:	b	24000 <rpl_re_set_registers@@Base+0x4f4c>
   23f74:	cmn	w8, #0x1
   23f78:	str	x21, [x19, #48]
   23f7c:	b.eq	23ff8 <rpl_re_set_registers@@Base+0x4f44>  // b.none
   23f80:	ldrb	w9, [x19, #142]
   23f84:	cbnz	w9, 24068 <rpl_re_set_registers@@Base+0x4fb4>
   23f88:	cmp	w8, #0xa
   23f8c:	b.ne	23fd4 <rpl_re_set_registers@@Base+0x4f20>  // b.any
   23f90:	ldrb	w8, [x19, #141]
   23f94:	cmp	w8, #0x0
   23f98:	cset	w8, ne  // ne = any
   23f9c:	lsl	w9, w8, #1
   23fa0:	b	23fd8 <rpl_re_set_registers@@Base+0x4f24>
   23fa4:	ldr	x8, [x19, #120]
   23fa8:	cbz	x8, 23be0 <rpl_re_set_registers@@Base+0x4b2c>
   23fac:	mov	x0, x19
   23fb0:	bl	1fa28 <rpl_re_set_registers@@Base+0x974>
   23fb4:	b	23be0 <rpl_re_set_registers@@Base+0x4b2c>
   23fb8:	cmp	w8, #0xa
   23fbc:	b.ne	23fec <rpl_re_set_registers@@Base+0x4f38>  // b.any
   23fc0:	ldrb	w8, [x19, #141]
   23fc4:	cmp	w8, #0x0
   23fc8:	cset	w8, ne  // ne = any
   23fcc:	lsl	w8, w8, #1
   23fd0:	b	23ff0 <rpl_re_set_registers@@Base+0x4f3c>
   23fd4:	mov	w9, wzr
   23fd8:	ldr	x21, [x19, #48]
   23fdc:	str	w9, [x19, #112]
   23fe0:	b	24010 <rpl_re_set_registers@@Base+0x4f5c>
   23fe4:	mov	x8, xzr
   23fe8:	b	24018 <rpl_re_set_registers@@Base+0x4f64>
   23fec:	mov	w8, wzr
   23ff0:	str	w8, [x19, #112]
   23ff4:	b	23b74 <rpl_re_set_registers@@Base+0x4ac0>
   23ff8:	ldr	w2, [sp, #4]
   23ffc:	ldr	x9, [sp, #8]
   24000:	sub	x1, x9, #0x1
   24004:	mov	x0, x19
   24008:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   2400c:	str	w0, [x19, #112]
   24010:	cbnz	x21, 24044 <rpl_re_set_registers@@Base+0x4f90>
   24014:	ldr	x8, [x19, #48]
   24018:	str	x8, [x19, #56]
   2401c:	b	23b74 <rpl_re_set_registers@@Base+0x4ac0>
   24020:	ldr	x11, [x19, #80]
   24024:	ldr	x12, [x19, #96]
   24028:	sub	x13, x23, x20
   2402c:	strb	wzr, [x19, #140]
   24030:	add	x11, x13, x11
   24034:	add	x12, x13, x12
   24038:	str	x11, [x19, #88]
   2403c:	str	x12, [x19, #104]
   24040:	b	23c1c <rpl_re_set_registers@@Base+0x4b68>
   24044:	cmp	x21, #0x1
   24048:	b.lt	2405c <rpl_re_set_registers@@Base+0x4fa8>  // b.tstop
   2404c:	ldr	x0, [x19, #16]
   24050:	lsl	x2, x21, #2
   24054:	mov	w1, #0xff                  	// #255
   24058:	bl	a770 <memset@plt>
   2405c:	ldrb	w8, [x19, #139]
   24060:	cbnz	w8, 23f58 <rpl_re_set_registers@@Base+0x4ea4>
   24064:	b	24014 <rpl_re_set_registers@@Base+0x4f60>
   24068:	mov	w0, w8
   2406c:	mov	w21, w8
   24070:	bl	ad50 <iswalnum@plt>
   24074:	cmp	w21, #0x5f
   24078:	mov	w9, #0x1                   	// #1
   2407c:	b.eq	23fd8 <rpl_re_set_registers@@Base+0x4f24>  // b.none
   24080:	mov	w8, w21
   24084:	cbz	w0, 23f88 <rpl_re_set_registers@@Base+0x4ed4>
   24088:	b	23fd8 <rpl_re_set_registers@@Base+0x4f24>
   2408c:	cmp	x2, #0x6
   24090:	mov	w10, #0x6                   	// #6
   24094:	csel	x10, x2, x10, lt  // lt = tstop
   24098:	cmp	w10, #0x1
   2409c:	sub	x1, x29, #0xc
   240a0:	b.lt	23c9c <rpl_re_set_registers@@Base+0x4be8>  // b.tstop
   240a4:	sxtw	x10, w10
   240a8:	sub	x12, x1, #0x1
   240ac:	add	x13, x8, x10
   240b0:	add	x13, x11, x13
   240b4:	ldurb	w13, [x13, #-1]
   240b8:	sub	x1, x29, #0xc
   240bc:	ldrb	w13, [x9, x13]
   240c0:	strb	w13, [x12, x10]
   240c4:	subs	x10, x10, #0x1
   240c8:	b.gt	240ac <rpl_re_set_registers@@Base+0x4ff8>
   240cc:	b	23c9c <rpl_re_set_registers@@Base+0x4be8>
   240d0:	stp	x29, x30, [sp, #-32]!
   240d4:	stp	x20, x19, [sp, #16]
   240d8:	mov	x8, x2
   240dc:	ldr	w2, [x0, #160]
   240e0:	mov	x20, x1
   240e4:	mov	x1, x8
   240e8:	mov	x29, sp
   240ec:	mov	x19, x0
   240f0:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   240f4:	ldr	x9, [x20, #16]
   240f8:	cmp	x9, #0x1
   240fc:	b.lt	2415c <rpl_re_set_registers@@Base+0x50a8>  // b.tstop
   24100:	ldr	x8, [x19, #152]
   24104:	ldr	x10, [x20, #24]
   24108:	mov	x12, xzr
   2410c:	ldr	x11, [x8]
   24110:	ldr	x8, [x10, x12, lsl #3]
   24114:	add	x13, x11, x8, lsl #4
   24118:	ldr	w13, [x13, #8]
   2411c:	and	w14, w13, #0xff
   24120:	cmp	w14, #0x2
   24124:	b.ne	24150 <rpl_re_set_registers@@Base+0x509c>  // b.any
   24128:	tst	w13, #0x3ff00
   2412c:	b.eq	24160 <rpl_re_set_registers@@Base+0x50ac>  // b.none
   24130:	tbnz	w0, #0, 24138 <rpl_re_set_registers@@Base+0x5084>
   24134:	tbnz	w13, #10, 24150 <rpl_re_set_registers@@Base+0x509c>
   24138:	tbz	w0, #0, 24140 <rpl_re_set_registers@@Base+0x508c>
   2413c:	tbnz	w13, #11, 24150 <rpl_re_set_registers@@Base+0x509c>
   24140:	tbnz	w0, #1, 24148 <rpl_re_set_registers@@Base+0x5094>
   24144:	tbnz	w13, #13, 24150 <rpl_re_set_registers@@Base+0x509c>
   24148:	tbnz	w0, #3, 24160 <rpl_re_set_registers@@Base+0x50ac>
   2414c:	tbz	w13, #15, 24160 <rpl_re_set_registers@@Base+0x50ac>
   24150:	add	x12, x12, #0x1
   24154:	cmp	x12, x9
   24158:	b.lt	24110 <rpl_re_set_registers@@Base+0x505c>  // b.tstop
   2415c:	mov	x8, xzr
   24160:	ldp	x20, x19, [sp, #16]
   24164:	mov	x0, x8
   24168:	ldp	x29, x30, [sp], #32
   2416c:	ret
   24170:	stp	x29, x30, [sp, #-64]!
   24174:	stp	x22, x21, [sp, #32]
   24178:	stp	x20, x19, [sp, #48]
   2417c:	ldr	x8, [x0, #232]
   24180:	mov	x19, x0
   24184:	str	x23, [sp, #16]
   24188:	mov	x29, sp
   2418c:	cmp	x8, #0x1
   24190:	b.lt	24210 <rpl_re_set_registers@@Base+0x515c>  // b.tstop
   24194:	mov	x22, xzr
   24198:	ldr	x8, [x19, #248]
   2419c:	ldr	x20, [x8, x22, lsl #3]
   241a0:	ldr	x8, [x20, #32]
   241a4:	cmp	x8, #0x1
   241a8:	b.lt	241d8 <rpl_re_set_registers@@Base+0x5124>  // b.tstop
   241ac:	mov	x23, xzr
   241b0:	ldr	x8, [x20, #40]
   241b4:	ldr	x21, [x8, x23, lsl #3]
   241b8:	ldr	x0, [x21, #32]
   241bc:	bl	aaa0 <free@plt>
   241c0:	mov	x0, x21
   241c4:	bl	aaa0 <free@plt>
   241c8:	ldr	x8, [x20, #32]
   241cc:	add	x23, x23, #0x1
   241d0:	cmp	x23, x8
   241d4:	b.lt	241b0 <rpl_re_set_registers@@Base+0x50fc>  // b.tstop
   241d8:	ldr	x0, [x20, #40]
   241dc:	bl	aaa0 <free@plt>
   241e0:	ldr	x8, [x20, #16]
   241e4:	cbz	x8, 241f8 <rpl_re_set_registers@@Base+0x5144>
   241e8:	ldr	x0, [x8, #16]
   241ec:	bl	aaa0 <free@plt>
   241f0:	ldr	x0, [x20, #16]
   241f4:	bl	aaa0 <free@plt>
   241f8:	mov	x0, x20
   241fc:	bl	aaa0 <free@plt>
   24200:	ldr	x8, [x19, #232]
   24204:	add	x22, x22, #0x1
   24208:	cmp	x22, x8
   2420c:	b.lt	24198 <rpl_re_set_registers@@Base+0x50e4>  // b.tstop
   24210:	str	xzr, [x19, #232]
   24214:	str	xzr, [x19, #200]
   24218:	ldp	x20, x19, [sp, #48]
   2421c:	ldp	x22, x21, [sp, #32]
   24220:	ldr	x23, [sp, #16]
   24224:	ldp	x29, x30, [sp], #64
   24228:	ret
   2422c:	stp	x29, x30, [sp, #-96]!
   24230:	stp	x28, x27, [sp, #16]
   24234:	stp	x26, x25, [sp, #32]
   24238:	stp	x24, x23, [sp, #48]
   2423c:	stp	x22, x21, [sp, #64]
   24240:	stp	x20, x19, [sp, #80]
   24244:	mov	x29, sp
   24248:	sub	sp, sp, #0x70
   2424c:	adrp	x8, 2a000 <vasnprintf@@Base+0x2944>
   24250:	add	x8, x8, #0xea8
   24254:	ldr	q0, [x8]
   24258:	ldr	x8, [x8, #16]
   2425c:	ldr	x24, [x0]
   24260:	mov	x21, x3
   24264:	mov	x22, x2
   24268:	mov	x23, x1
   2426c:	stur	q0, [x29, #-64]
   24270:	stur	x8, [x29, #-48]
   24274:	tbz	w4, #0, 24290 <rpl_re_set_registers@@Base+0x51dc>
   24278:	mov	w0, #0x60                  	// #96
   2427c:	bl	a660 <malloc@plt>
   24280:	stur	x0, [x29, #-48]
   24284:	cbz	x0, 2479c <rpl_re_set_registers@@Base+0x56e8>
   24288:	sub	x19, x29, #0x40
   2428c:	b	24294 <rpl_re_set_registers@@Base+0x51e0>
   24290:	mov	x19, xzr
   24294:	ldr	x25, [x24, #144]
   24298:	lsl	x20, x22, #4
   2429c:	cmp	x20, #0xfbf
   242a0:	stp	xzr, xzr, [x29, #-32]
   242a4:	stur	xzr, [x29, #-16]
   242a8:	b.hi	242c8 <rpl_re_set_registers@@Base+0x5214>  // b.pmore
   242ac:	add	x9, x20, #0xf
   242b0:	mov	x8, sp
   242b4:	and	x9, x9, #0xfffffffffffffff0
   242b8:	sub	x0, x8, x9
   242bc:	mov	sp, x0
   242c0:	stur	wzr, [x29, #-84]
   242c4:	b	242dc <rpl_re_set_registers@@Base+0x5228>
   242c8:	mov	x0, x20
   242cc:	bl	a660 <malloc@plt>
   242d0:	cbz	x0, 24794 <rpl_re_set_registers@@Base+0x56e0>
   242d4:	mov	w8, #0x1                   	// #1
   242d8:	stur	w8, [x29, #-84]
   242dc:	mov	x1, x21
   242e0:	mov	x2, x20
   242e4:	stur	x0, [x29, #-80]
   242e8:	stur	x20, [x29, #-96]
   242ec:	bl	a2f0 <memcpy@plt>
   242f0:	ldp	x27, x8, [x21]
   242f4:	cmp	x27, x8
   242f8:	stur	x27, [x29, #-8]
   242fc:	b.le	24308 <rpl_re_set_registers@@Base+0x5254>
   24300:	mov	x0, xzr
   24304:	b	2471c <rpl_re_set_registers@@Base+0x5668>
   24308:	add	x8, x21, #0x8
   2430c:	stur	x8, [x29, #-104]
   24310:	stur	x24, [x29, #-72]
   24314:	ldr	x8, [x24]
   24318:	add	x8, x8, x25, lsl #4
   2431c:	ldr	w9, [x8, #8]
   24320:	and	w10, w9, #0xff
   24324:	cmp	w10, #0x9
   24328:	b.eq	24354 <rpl_re_set_registers@@Base+0x52a0>  // b.none
   2432c:	cmp	w10, #0x8
   24330:	b.ne	243b8 <rpl_re_set_registers@@Base+0x5304>  // b.any
   24334:	ldr	x8, [x8]
   24338:	add	x8, x8, #0x1
   2433c:	cmp	x8, x22
   24340:	b.ge	243b8 <rpl_re_set_registers@@Base+0x5304>  // b.tcont
   24344:	add	x8, x21, x8, lsl #4
   24348:	mov	x9, #0xffffffffffffffff    	// #-1
   2434c:	stp	x27, x9, [x8]
   24350:	b	243b8 <rpl_re_set_registers@@Base+0x5304>
   24354:	ldr	x8, [x8]
   24358:	add	x8, x8, #0x1
   2435c:	cmp	x8, x22
   24360:	b.ge	243b8 <rpl_re_set_registers@@Base+0x5304>  // b.tcont
   24364:	lsl	x10, x8, #4
   24368:	ldr	x11, [x21, x10]
   2436c:	cmp	x11, x27
   24370:	b.ge	24388 <rpl_re_set_registers@@Base+0x52d4>  // b.tcont
   24374:	ldur	x0, [x29, #-80]
   24378:	add	x8, x21, x8, lsl #4
   2437c:	str	x27, [x8, #8]
   24380:	mov	x1, x21
   24384:	b	243a4 <rpl_re_set_registers@@Base+0x52f0>
   24388:	tbz	w9, #19, 243b0 <rpl_re_set_registers@@Base+0x52fc>
   2438c:	ldur	x9, [x29, #-80]
   24390:	ldr	x9, [x9, x10]
   24394:	cmn	x9, #0x1
   24398:	b.eq	243b0 <rpl_re_set_registers@@Base+0x52fc>  // b.none
   2439c:	ldur	x1, [x29, #-80]
   243a0:	mov	x0, x21
   243a4:	ldur	x2, [x29, #-96]
   243a8:	bl	a2f0 <memcpy@plt>
   243ac:	b	243b8 <rpl_re_set_registers@@Base+0x5304>
   243b0:	add	x8, x21, x8, lsl #4
   243b4:	str	x27, [x8, #8]
   243b8:	ldr	x8, [x21, #8]
   243bc:	cmp	x27, x8
   243c0:	b.ne	2442c <rpl_re_set_registers@@Base+0x5378>  // b.any
   243c4:	ldr	x8, [x23, #176]
   243c8:	cmp	x25, x8
   243cc:	b.ne	2442c <rpl_re_set_registers@@Base+0x5378>  // b.any
   243d0:	cbz	x19, 24760 <rpl_re_set_registers@@Base+0x56ac>
   243d4:	mov	x8, xzr
   243d8:	cbz	x22, 24408 <rpl_re_set_registers@@Base+0x5354>
   243dc:	ldur	x9, [x29, #-104]
   243e0:	ldur	x10, [x9, #-8]
   243e4:	tbnz	x10, #63, 243f4 <rpl_re_set_registers@@Base+0x5340>
   243e8:	ldr	x10, [x9]
   243ec:	cmn	x10, #0x1
   243f0:	b.eq	24408 <rpl_re_set_registers@@Base+0x5354>  // b.none
   243f4:	add	x8, x8, #0x1
   243f8:	cmp	x22, x8
   243fc:	add	x9, x9, #0x10
   24400:	b.ne	243e0 <rpl_re_set_registers@@Base+0x532c>  // b.any
   24404:	b	24718 <rpl_re_set_registers@@Base+0x5664>
   24408:	cmp	x8, x22
   2440c:	b.eq	24718 <rpl_re_set_registers@@Base+0x5664>  // b.none
   24410:	sub	x1, x29, #0x8
   24414:	sub	x4, x29, #0x20
   24418:	mov	x0, x19
   2441c:	mov	x2, x22
   24420:	mov	x3, x21
   24424:	bl	27600 <rpl_re_set_registers@@Base+0x854c>
   24428:	mov	x25, x0
   2442c:	ldr	x27, [x23, #152]
   24430:	ldr	x8, [x27]
   24434:	add	x9, x8, x25, lsl #4
   24438:	ldr	w9, [x9, #8]
   2443c:	tbnz	w9, #3, 244bc <rpl_re_set_registers@@Base+0x5408>
   24440:	tbnz	w9, #20, 24534 <rpl_re_set_registers@@Base+0x5480>
   24444:	and	w9, w9, #0xff
   24448:	cmp	w9, #0x4
   2444c:	b.ne	24558 <rpl_re_set_registers@@Base+0x54a4>  // b.any
   24450:	lsl	x9, x25, #4
   24454:	ldr	x8, [x8, x9]
   24458:	add	x8, x21, x8, lsl #4
   2445c:	ldp	x8, x9, [x8, #16]
   24460:	sub	x28, x9, x8
   24464:	cbz	x19, 24610 <rpl_re_set_registers@@Base+0x555c>
   24468:	cmn	x9, #0x1
   2446c:	b.eq	246e8 <rpl_re_set_registers@@Base+0x5634>  // b.none
   24470:	cmn	x8, #0x1
   24474:	b.eq	246e8 <rpl_re_set_registers@@Base+0x5634>  // b.none
   24478:	cbz	x28, 24630 <rpl_re_set_registers@@Base+0x557c>
   2447c:	ldr	x9, [x23, #48]
   24480:	ldur	x20, [x29, #-8]
   24484:	sub	x9, x9, x20
   24488:	cmp	x9, x28
   2448c:	b.lt	246e8 <rpl_re_set_registers@@Base+0x5634>  // b.tstop
   24490:	ldr	x9, [x23, #8]
   24494:	mov	x2, x28
   24498:	add	x0, x9, x8
   2449c:	add	x1, x9, x20
   244a0:	bl	a820 <bcmp@plt>
   244a4:	cbnz	w0, 246e8 <rpl_re_set_registers@@Base+0x5634>
   244a8:	ldr	x8, [x27, #24]
   244ac:	ldr	x26, [x8, x25, lsl #3]
   244b0:	add	x8, x20, x28
   244b4:	stur	x8, [x29, #-8]
   244b8:	b	24590 <rpl_re_set_registers@@Base+0x54dc>
   244bc:	ldr	x8, [x23, #184]
   244c0:	ldur	x28, [x29, #-8]
   244c4:	ldr	x20, [x27, #40]
   244c8:	sub	x0, x29, #0x20
   244cc:	mov	x1, x25
   244d0:	ldr	x26, [x8, x28, lsl #3]
   244d4:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   244d8:	tbz	w0, #0, 2477c <rpl_re_set_registers@@Base+0x56c8>
   244dc:	mov	w8, #0x18                  	// #24
   244e0:	madd	x8, x25, x8, x20
   244e4:	ldr	x24, [x8, #8]
   244e8:	cmp	x24, #0x1
   244ec:	b.lt	246e0 <rpl_re_set_registers@@Base+0x562c>  // b.tstop
   244f0:	mov	w8, #0x18                  	// #24
   244f4:	madd	x8, x25, x8, x20
   244f8:	ldr	x20, [x8, #16]
   244fc:	add	x27, x26, #0x8
   24500:	mov	x26, #0xffffffffffffffff    	// #-1
   24504:	ldr	x25, [x20]
   24508:	mov	x0, x27
   2450c:	mov	x1, x25
   24510:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   24514:	cbz	x0, 24524 <rpl_re_set_registers@@Base+0x5470>
   24518:	cmn	x26, #0x1
   2451c:	b.ne	245bc <rpl_re_set_registers@@Base+0x5508>  // b.any
   24520:	mov	x26, x25
   24524:	subs	x24, x24, #0x1
   24528:	add	x20, x20, #0x8
   2452c:	b.ne	24504 <rpl_re_set_registers@@Base+0x5450>  // b.any
   24530:	b	246cc <rpl_re_set_registers@@Base+0x5618>
   24534:	ldur	x28, [x29, #-8]
   24538:	mov	x0, x27
   2453c:	mov	x1, x25
   24540:	mov	x2, x23
   24544:	mov	x3, x28
   24548:	bl	26194 <rpl_re_set_registers@@Base+0x70e0>
   2454c:	cbz	w0, 2455c <rpl_re_set_registers@@Base+0x54a8>
   24550:	sxtw	x8, w0
   24554:	b	2457c <rpl_re_set_registers@@Base+0x54c8>
   24558:	ldur	x28, [x29, #-8]
   2455c:	ldr	x8, [x27]
   24560:	mov	x0, x23
   24564:	mov	x2, x28
   24568:	add	x1, x8, x25, lsl #4
   2456c:	bl	2648c <rpl_re_set_registers@@Base+0x73d8>
   24570:	tbz	w0, #0, 246e0 <rpl_re_set_registers@@Base+0x562c>
   24574:	ldur	x24, [x29, #-72]
   24578:	mov	w8, #0x1                   	// #1
   2457c:	ldr	x9, [x27, #24]
   24580:	add	x8, x28, x8
   24584:	ldr	x26, [x9, x25, lsl #3]
   24588:	stur	x8, [x29, #-8]
   2458c:	cbz	x19, 24628 <rpl_re_set_registers@@Base+0x5574>
   24590:	ldr	x9, [x23, #168]
   24594:	cmp	x8, x9
   24598:	b.gt	246e8 <rpl_re_set_registers@@Base+0x5634>
   2459c:	ldr	x9, [x23, #184]
   245a0:	ldr	x8, [x9, x8, lsl #3]
   245a4:	cbz	x8, 246e8 <rpl_re_set_registers@@Base+0x5634>
   245a8:	add	x0, x8, #0x8
   245ac:	mov	x1, x26
   245b0:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   245b4:	cbnz	x0, 24628 <rpl_re_set_registers@@Base+0x5574>
   245b8:	b	246e8 <rpl_re_set_registers@@Base+0x5634>
   245bc:	sub	x0, x29, #0x20
   245c0:	mov	x1, x26
   245c4:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   245c8:	cbnz	x0, 246c8 <rpl_re_set_registers@@Base+0x5614>
   245cc:	cbz	x19, 246cc <rpl_re_set_registers@@Base+0x5618>
   245d0:	ldp	x20, x9, [x19]
   245d4:	add	x8, x20, #0x1
   245d8:	cmp	x8, x9
   245dc:	str	x8, [x19]
   245e0:	b.ne	24674 <rpl_re_set_registers@@Base+0x55c0>  // b.any
   245e4:	ldr	x0, [x19, #16]
   245e8:	add	x8, x8, x8, lsl #1
   245ec:	lsl	x1, x8, #5
   245f0:	bl	a860 <realloc@plt>
   245f4:	mov	w9, #0x30                  	// #48
   245f8:	cbz	x0, 246c4 <rpl_re_set_registers@@Base+0x5610>
   245fc:	ldr	x8, [x19, #8]
   24600:	mov	x27, x0
   24604:	lsl	x8, x8, #1
   24608:	stp	x8, x0, [x19, #8]
   2460c:	b	2467c <rpl_re_set_registers@@Base+0x55c8>
   24610:	cbz	x28, 24630 <rpl_re_set_registers@@Base+0x557c>
   24614:	ldr	x8, [x27, #24]
   24618:	ldur	x9, [x29, #-8]
   2461c:	ldr	x26, [x8, x25, lsl #3]
   24620:	add	x8, x9, x28
   24624:	stur	x8, [x29, #-8]
   24628:	stur	xzr, [x29, #-24]
   2462c:	b	246cc <rpl_re_set_registers@@Base+0x5618>
   24630:	sub	x0, x29, #0x20
   24634:	mov	x1, x25
   24638:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   2463c:	tbz	w0, #0, 2477c <rpl_re_set_registers@@Base+0x56c8>
   24640:	ldr	x8, [x27, #40]
   24644:	mov	w10, #0x18                  	// #24
   24648:	ldr	x9, [x23, #184]
   2464c:	ldur	x28, [x29, #-8]
   24650:	madd	x8, x25, x10, x8
   24654:	ldr	x8, [x8, #16]
   24658:	ldr	x9, [x9, x28, lsl #3]
   2465c:	ldr	x26, [x8]
   24660:	add	x0, x9, #0x8
   24664:	mov	x1, x26
   24668:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   2466c:	cbnz	x0, 246cc <rpl_re_set_registers@@Base+0x5618>
   24670:	b	2455c <rpl_re_set_registers@@Base+0x54a8>
   24674:	ldr	x27, [x19, #16]
   24678:	mov	w9, #0x30                  	// #48
   2467c:	stur	x20, [x29, #-112]
   24680:	madd	x20, x20, x9, x27
   24684:	stp	x28, x25, [x20]
   24688:	ldur	x24, [x29, #-96]
   2468c:	mov	w25, #0x30                  	// #48
   24690:	mov	x0, x24
   24694:	bl	a660 <malloc@plt>
   24698:	str	x0, [x20, #16]
   2469c:	cbz	x0, 246c4 <rpl_re_set_registers@@Base+0x5610>
   246a0:	mov	x1, x21
   246a4:	mov	x2, x24
   246a8:	bl	a2f0 <memcpy@plt>
   246ac:	ldur	x8, [x29, #-112]
   246b0:	sub	x1, x29, #0x20
   246b4:	madd	x8, x8, x25, x27
   246b8:	add	x0, x8, #0x18
   246bc:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   246c0:	cbz	w0, 246cc <rpl_re_set_registers@@Base+0x5618>
   246c4:	mov	x25, #0xfffffffffffffffe    	// #-2
   246c8:	mov	x26, x25
   246cc:	tbnz	x26, #63, 246d8 <rpl_re_set_registers@@Base+0x5624>
   246d0:	ldur	x24, [x29, #-72]
   246d4:	b	24704 <rpl_re_set_registers@@Base+0x5650>
   246d8:	cmn	x26, #0x2
   246dc:	b.eq	2477c <rpl_re_set_registers@@Base+0x56c8>  // b.none
   246e0:	ldur	x24, [x29, #-72]
   246e4:	cbz	x19, 24740 <rpl_re_set_registers@@Base+0x568c>
   246e8:	sub	x1, x29, #0x8
   246ec:	sub	x4, x29, #0x20
   246f0:	mov	x0, x19
   246f4:	mov	x2, x22
   246f8:	mov	x3, x21
   246fc:	bl	27600 <rpl_re_set_registers@@Base+0x854c>
   24700:	mov	x26, x0
   24704:	ldur	x27, [x29, #-8]
   24708:	ldr	x8, [x21, #8]
   2470c:	mov	x25, x26
   24710:	cmp	x27, x8
   24714:	b.le	24314 <rpl_re_set_registers@@Base+0x5260>
   24718:	ldur	x0, [x29, #-16]
   2471c:	bl	aaa0 <free@plt>
   24720:	ldur	w8, [x29, #-84]
   24724:	cbz	w8, 24730 <rpl_re_set_registers@@Base+0x567c>
   24728:	ldur	x0, [x29, #-80]
   2472c:	bl	aaa0 <free@plt>
   24730:	mov	x0, x19
   24734:	bl	27588 <rpl_re_set_registers@@Base+0x84d4>
   24738:	mov	w0, wzr
   2473c:	b	247a0 <rpl_re_set_registers@@Base+0x56ec>
   24740:	ldur	x0, [x29, #-16]
   24744:	bl	aaa0 <free@plt>
   24748:	ldur	w8, [x29, #-84]
   2474c:	cbz	w8, 24758 <rpl_re_set_registers@@Base+0x56a4>
   24750:	ldur	x0, [x29, #-80]
   24754:	bl	aaa0 <free@plt>
   24758:	mov	w0, #0x1                   	// #1
   2475c:	b	247a0 <rpl_re_set_registers@@Base+0x56ec>
   24760:	ldur	x0, [x29, #-16]
   24764:	bl	aaa0 <free@plt>
   24768:	ldur	w8, [x29, #-84]
   2476c:	cbz	w8, 24738 <rpl_re_set_registers@@Base+0x5684>
   24770:	ldur	x0, [x29, #-80]
   24774:	bl	aaa0 <free@plt>
   24778:	b	24738 <rpl_re_set_registers@@Base+0x5684>
   2477c:	ldur	x0, [x29, #-16]
   24780:	bl	aaa0 <free@plt>
   24784:	ldur	w8, [x29, #-84]
   24788:	cbz	w8, 24794 <rpl_re_set_registers@@Base+0x56e0>
   2478c:	ldur	x0, [x29, #-80]
   24790:	bl	aaa0 <free@plt>
   24794:	mov	x0, x19
   24798:	bl	27588 <rpl_re_set_registers@@Base+0x84d4>
   2479c:	mov	w0, #0xc                   	// #12
   247a0:	mov	sp, x29
   247a4:	ldp	x20, x19, [sp, #80]
   247a8:	ldp	x22, x21, [sp, #64]
   247ac:	ldp	x24, x23, [sp, #48]
   247b0:	ldp	x26, x25, [sp, #32]
   247b4:	ldp	x28, x27, [sp, #16]
   247b8:	ldp	x29, x30, [sp], #96
   247bc:	ret
   247c0:	sub	sp, sp, #0x20
   247c4:	stp	x29, x30, [sp, #16]
   247c8:	add	x29, sp, #0x10
   247cc:	tbnz	x1, #63, 24804 <rpl_re_set_registers@@Base+0x5750>
   247d0:	ldr	x8, [x0, #88]
   247d4:	cmp	x8, x1
   247d8:	b.eq	24874 <rpl_re_set_registers@@Base+0x57c0>  // b.none
   247dc:	ldr	w8, [x0, #144]
   247e0:	cmp	w8, #0x2
   247e4:	b.lt	2480c <rpl_re_set_registers@@Base+0x5758>  // b.tstop
   247e8:	ldr	x8, [x0, #16]
   247ec:	ldr	w9, [x8, x1, lsl #2]
   247f0:	cmn	w9, #0x1
   247f4:	b.ne	24834 <rpl_re_set_registers@@Base+0x5780>  // b.any
   247f8:	cmp	x1, #0x0
   247fc:	sub	x1, x1, #0x1
   24800:	b.gt	247ec <rpl_re_set_registers@@Base+0x5738>
   24804:	ldr	w8, [x0, #112]
   24808:	b	24864 <rpl_re_set_registers@@Base+0x57b0>
   2480c:	ldr	x8, [x0, #8]
   24810:	ldr	x9, [x0, #128]
   24814:	ldrb	w8, [x8, x1]
   24818:	lsr	x10, x8, #3
   2481c:	and	x10, x10, #0x18
   24820:	ldr	x9, [x9, x10]
   24824:	lsr	x9, x9, x8
   24828:	tbz	w9, #0, 24858 <rpl_re_set_registers@@Base+0x57a4>
   2482c:	mov	w8, #0x1                   	// #1
   24830:	b	24864 <rpl_re_set_registers@@Base+0x57b0>
   24834:	ldrb	w8, [x0, #142]
   24838:	cbnz	w8, 24884 <rpl_re_set_registers@@Base+0x57d0>
   2483c:	cmp	w9, #0xa
   24840:	b.ne	24860 <rpl_re_set_registers@@Base+0x57ac>  // b.any
   24844:	ldrb	w8, [x0, #141]
   24848:	cmp	w8, #0x0
   2484c:	cset	w8, ne  // ne = any
   24850:	lsl	w8, w8, #1
   24854:	b	24864 <rpl_re_set_registers@@Base+0x57b0>
   24858:	cmp	w8, #0xa
   2485c:	b.eq	24844 <rpl_re_set_registers@@Base+0x5790>  // b.none
   24860:	mov	w8, wzr
   24864:	ldp	x29, x30, [sp, #16]
   24868:	mov	w0, w8
   2486c:	add	sp, sp, #0x20
   24870:	ret
   24874:	and	w8, w2, #0x2
   24878:	mov	w9, #0xa                   	// #10
   2487c:	eor	w8, w8, w9
   24880:	b	24864 <rpl_re_set_registers@@Base+0x57b0>
   24884:	str	x0, [sp]
   24888:	mov	w0, w9
   2488c:	stur	w9, [x29, #-4]
   24890:	bl	ad50 <iswalnum@plt>
   24894:	ldur	w9, [x29, #-4]
   24898:	mov	w8, #0x1                   	// #1
   2489c:	cmp	w9, #0x5f
   248a0:	b.eq	24864 <rpl_re_set_registers@@Base+0x57b0>  // b.none
   248a4:	mov	w10, w0
   248a8:	ldr	x0, [sp]
   248ac:	cbz	w10, 2483c <rpl_re_set_registers@@Base+0x5788>
   248b0:	b	24864 <rpl_re_set_registers@@Base+0x57b0>
   248b4:	stp	x29, x30, [sp, #-80]!
   248b8:	stp	x24, x23, [sp, #32]
   248bc:	stp	x22, x21, [sp, #48]
   248c0:	stp	x20, x19, [sp, #64]
   248c4:	ldr	x8, [x1, #8]
   248c8:	str	x25, [sp, #16]
   248cc:	mov	x29, sp
   248d0:	cmp	x8, #0x1
   248d4:	b.lt	24994 <rpl_re_set_registers@@Base+0x58e0>  // b.tstop
   248d8:	ldr	x22, [x0, #152]
   248dc:	mov	x19, x2
   248e0:	mov	x20, x1
   248e4:	mov	x21, x0
   248e8:	mov	x23, xzr
   248ec:	ldr	x9, [x20, #16]
   248f0:	ldr	x24, [x9, x23, lsl #3]
   248f4:	ldr	x9, [x22]
   248f8:	add	x10, x9, x24, lsl #4
   248fc:	ldrb	w10, [x10, #8]
   24900:	cmp	w10, #0x8
   24904:	b.ne	24968 <rpl_re_set_registers@@Base+0x58b4>  // b.any
   24908:	lsl	x10, x24, #4
   2490c:	ldr	x9, [x9, x10]
   24910:	cmp	x9, #0x3f
   24914:	b.gt	24968 <rpl_re_set_registers@@Base+0x58b4>
   24918:	ldr	x10, [x22, #160]
   2491c:	lsr	x9, x10, x9
   24920:	tbz	w9, #0, 24968 <rpl_re_set_registers@@Base+0x58b4>
   24924:	ldp	x25, x8, [x21, #232]
   24928:	cmp	x25, x8
   2492c:	b.eq	24978 <rpl_re_set_registers@@Base+0x58c4>  // b.none
   24930:	mov	w0, #0x1                   	// #1
   24934:	mov	w1, #0x30                  	// #48
   24938:	bl	a7f0 <calloc@plt>
   2493c:	ldr	x9, [x21, #248]
   24940:	ldr	x8, [x21, #232]
   24944:	str	x0, [x9, x8, lsl #3]
   24948:	ldr	x9, [x21, #248]
   2494c:	ldr	x9, [x9, x8, lsl #3]
   24950:	cbz	x9, 249b0 <rpl_re_set_registers@@Base+0x58fc>
   24954:	add	x8, x8, #0x1
   24958:	str	x24, [x9, #8]
   2495c:	str	x8, [x21, #232]
   24960:	str	x19, [x9]
   24964:	ldr	x8, [x20, #8]
   24968:	add	x23, x23, #0x1
   2496c:	cmp	x23, x8
   24970:	b.lt	248ec <rpl_re_set_registers@@Base+0x5838>  // b.tstop
   24974:	b	24994 <rpl_re_set_registers@@Base+0x58e0>
   24978:	ldr	x0, [x21, #248]
   2497c:	lsl	x1, x25, #4
   24980:	bl	a860 <realloc@plt>
   24984:	cbz	x0, 249b0 <rpl_re_set_registers@@Base+0x58fc>
   24988:	lsl	x8, x25, #1
   2498c:	stp	x8, x0, [x21, #240]
   24990:	b	24930 <rpl_re_set_registers@@Base+0x587c>
   24994:	mov	w0, wzr
   24998:	ldp	x20, x19, [sp, #64]
   2499c:	ldp	x22, x21, [sp, #48]
   249a0:	ldp	x24, x23, [sp, #32]
   249a4:	ldr	x25, [sp, #16]
   249a8:	ldp	x29, x30, [sp], #80
   249ac:	ret
   249b0:	mov	w0, #0xc                   	// #12
   249b4:	b	24998 <rpl_re_set_registers@@Base+0x58e4>
   249b8:	sub	sp, sp, #0xd0
   249bc:	stp	x29, x30, [sp, #112]
   249c0:	stp	x28, x27, [sp, #128]
   249c4:	stp	x26, x25, [sp, #144]
   249c8:	stp	x24, x23, [sp, #160]
   249cc:	stp	x22, x21, [sp, #176]
   249d0:	stp	x20, x19, [sp, #192]
   249d4:	ldr	x8, [x1, #8]
   249d8:	add	x29, sp, #0x70
   249dc:	cmp	x8, #0x1
   249e0:	b.lt	24f6c <rpl_re_set_registers@@Base+0x5eb8>  // b.tstop
   249e4:	ldr	x28, [x0, #152]
   249e8:	ldr	x8, [x0, #72]
   249ec:	mov	x21, x1
   249f0:	mov	x20, x0
   249f4:	mov	x9, xzr
   249f8:	stur	x8, [x29, #-40]
   249fc:	stp	x1, x28, [sp, #16]
   24a00:	ldr	x8, [x21, #16]
   24a04:	str	x9, [sp, #48]
   24a08:	ldr	x9, [x8, x9, lsl #3]
   24a0c:	ldr	x8, [x28]
   24a10:	stur	x9, [x29, #-48]
   24a14:	add	x8, x8, x9, lsl #4
   24a18:	ldr	w19, [x8, #8]
   24a1c:	and	w8, w19, #0xff
   24a20:	cmp	w8, #0x4
   24a24:	b.ne	24f58 <rpl_re_set_registers@@Base+0x5ea4>  // b.any
   24a28:	tst	w19, #0x3ff00
   24a2c:	b.eq	24a64 <rpl_re_set_registers@@Base+0x59b0>  // b.none
   24a30:	ldr	w2, [x20, #160]
   24a34:	ldur	x1, [x29, #-40]
   24a38:	mov	x0, x20
   24a3c:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   24a40:	and	w8, w0, #0x1
   24a44:	tbz	w19, #10, 24a4c <rpl_re_set_registers@@Base+0x5998>
   24a48:	cbz	w8, 24f58 <rpl_re_set_registers@@Base+0x5ea4>
   24a4c:	tbz	w19, #11, 24a54 <rpl_re_set_registers@@Base+0x59a0>
   24a50:	cbnz	w8, 24f58 <rpl_re_set_registers@@Base+0x5ea4>
   24a54:	tbz	w19, #13, 24a5c <rpl_re_set_registers@@Base+0x59a8>
   24a58:	tbz	w0, #1, 24f58 <rpl_re_set_registers@@Base+0x5ea4>
   24a5c:	tbz	w19, #15, 24a64 <rpl_re_set_registers@@Base+0x59b0>
   24a60:	tbz	w0, #3, 24f58 <rpl_re_set_registers@@Base+0x5ea4>
   24a64:	ldur	x1, [x29, #-40]
   24a68:	ldr	x19, [x20, #200]
   24a6c:	ldr	x23, [x20, #152]
   24a70:	ldr	x21, [x20, #8]
   24a74:	mov	x0, x20
   24a78:	bl	25384 <rpl_re_set_registers@@Base+0x62d0>
   24a7c:	cmn	x0, #0x1
   24a80:	b.eq	24aac <rpl_re_set_registers@@Base+0x59f8>  // b.none
   24a84:	ldr	x8, [x20, #216]
   24a88:	mov	w9, #0x28                  	// #40
   24a8c:	madd	x8, x0, x9, x8
   24a90:	ldr	x9, [x8]
   24a94:	ldur	x10, [x29, #-48]
   24a98:	cmp	x9, x10
   24a9c:	b.eq	24da8 <rpl_re_set_registers@@Base+0x5cf4>  // b.none
   24aa0:	ldrb	w9, [x8, #32]
   24aa4:	add	x8, x8, #0x28
   24aa8:	cbnz	w9, 24a90 <rpl_re_set_registers@@Base+0x59dc>
   24aac:	ldr	x8, [x20, #232]
   24ab0:	cmp	x8, #0x1
   24ab4:	b.lt	24da8 <rpl_re_set_registers@@Base+0x5cf4>  // b.tstop
   24ab8:	ldur	x9, [x29, #-48]
   24abc:	ldr	x8, [x23]
   24ac0:	str	x19, [sp, #8]
   24ac4:	mov	x12, xzr
   24ac8:	lsl	x9, x9, #4
   24acc:	ldr	x19, [x8, x9]
   24ad0:	stp	x23, x19, [sp, #32]
   24ad4:	ldr	x9, [x20, #248]
   24ad8:	ldr	x24, [x9, x12, lsl #3]
   24adc:	ldr	x9, [x24, #8]
   24ae0:	lsl	x9, x9, #4
   24ae4:	ldr	x8, [x8, x9]
   24ae8:	cmp	x8, x19
   24aec:	b.ne	24bf4 <rpl_re_set_registers@@Base+0x5b40>  // b.any
   24af0:	ldr	x8, [x24, #32]
   24af4:	ldr	x28, [x24]
   24af8:	str	x12, [sp, #56]
   24afc:	cmp	x8, #0x1
   24b00:	b.lt	24ba8 <rpl_re_set_registers@@Base+0x5af4>  // b.tstop
   24b04:	ldur	x22, [x29, #-40]
   24b08:	mov	x23, xzr
   24b0c:	mov	x19, x28
   24b10:	ldr	x9, [x24, #40]
   24b14:	ldr	x26, [x9, x23, lsl #3]
   24b18:	ldr	x28, [x26, #8]
   24b1c:	sub	x25, x28, x19
   24b20:	cmp	x25, #0x1
   24b24:	b.lt	24b4c <rpl_re_set_registers@@Base+0x5a98>  // b.tstop
   24b28:	ldr	x9, [x20, #48]
   24b2c:	add	x1, x25, x22
   24b30:	cmp	x1, x9
   24b34:	b.gt	24b88 <rpl_re_set_registers@@Base+0x5ad4>
   24b38:	add	x0, x21, x22
   24b3c:	add	x1, x21, x19
   24b40:	mov	x2, x25
   24b44:	bl	a820 <bcmp@plt>
   24b48:	cbnz	w0, 24bb4 <rpl_re_set_registers@@Base+0x5b00>
   24b4c:	ldp	x3, x4, [x29, #-48]
   24b50:	mov	x0, x20
   24b54:	mov	x1, x24
   24b58:	mov	x2, x26
   24b5c:	bl	254a0 <rpl_re_set_registers@@Base+0x63ec>
   24b60:	cmp	w0, #0x1
   24b64:	b.hi	24fa0 <rpl_re_set_registers@@Base+0x5eec>  // b.pmore
   24b68:	ldr	x8, [x24, #32]
   24b6c:	ldr	x21, [x20, #8]
   24b70:	add	x23, x23, #0x1
   24b74:	add	x22, x25, x22
   24b78:	cmp	x23, x8
   24b7c:	mov	x19, x28
   24b80:	b.lt	24b10 <rpl_re_set_registers@@Base+0x5a5c>  // b.tstop
   24b84:	b	24bbc <rpl_re_set_registers@@Base+0x5b08>
   24b88:	ldr	x9, [x20, #88]
   24b8c:	cmp	x1, x9
   24b90:	b.gt	24bb8 <rpl_re_set_registers@@Base+0x5b04>
   24b94:	mov	x0, x20
   24b98:	bl	25400 <rpl_re_set_registers@@Base+0x634c>
   24b9c:	cbnz	w0, 24fa0 <rpl_re_set_registers@@Base+0x5eec>
   24ba0:	ldr	x21, [x20, #8]
   24ba4:	b	24b38 <rpl_re_set_registers@@Base+0x5a84>
   24ba8:	ldur	x22, [x29, #-40]
   24bac:	mov	x23, xzr
   24bb0:	b	24bbc <rpl_re_set_registers@@Base+0x5b08>
   24bb4:	ldr	x8, [x24, #32]
   24bb8:	mov	x28, x19
   24bbc:	cmp	x23, x8
   24bc0:	b.ge	24bd4 <rpl_re_set_registers@@Base+0x5b20>  // b.tcont
   24bc4:	ldp	x28, x23, [sp, #24]
   24bc8:	ldr	x19, [sp, #40]
   24bcc:	ldr	x12, [sp, #56]
   24bd0:	b	24bf4 <rpl_re_set_registers@@Base+0x5b40>
   24bd4:	ldur	x8, [x29, #-40]
   24bd8:	ldr	x19, [sp, #40]
   24bdc:	ldr	x12, [sp, #56]
   24be0:	cmp	x23, #0x0
   24be4:	cinc	x25, x28, ne  // ne = any
   24be8:	cmp	x25, x8
   24bec:	b.le	24c0c <rpl_re_set_registers@@Base+0x5b58>
   24bf0:	ldp	x28, x23, [sp, #24]
   24bf4:	ldr	x8, [x20, #232]
   24bf8:	add	x12, x12, #0x1
   24bfc:	cmp	x12, x8
   24c00:	b.ge	24db4 <rpl_re_set_registers@@Base+0x5d00>  // b.tcont
   24c04:	ldr	x8, [x23]
   24c08:	b	24ad4 <rpl_re_set_registers@@Base+0x5a20>
   24c0c:	ldp	x28, x23, [sp, #24]
   24c10:	ldr	x8, [x24]
   24c14:	cmp	x25, x8
   24c18:	b.le	24c40 <rpl_re_set_registers@@Base+0x5b8c>
   24c1c:	ldr	x8, [x20, #48]
   24c20:	cmp	x22, x8
   24c24:	b.ge	24d58 <rpl_re_set_registers@@Base+0x5ca4>  // b.tcont
   24c28:	add	x9, x25, x21
   24c2c:	ldrb	w8, [x21, x22]
   24c30:	ldurb	w9, [x9, #-1]
   24c34:	cmp	w8, w9
   24c38:	b.ne	24bf4 <rpl_re_set_registers@@Base+0x5b40>  // b.any
   24c3c:	add	x22, x22, #0x1
   24c40:	ldr	x8, [x20, #184]
   24c44:	ldr	x9, [x8, x25, lsl #3]
   24c48:	cbz	x9, 24c90 <rpl_re_set_registers@@Base+0x5bdc>
   24c4c:	ldr	x8, [x9, #16]
   24c50:	cmp	x8, #0x1
   24c54:	b.lt	24c90 <rpl_re_set_registers@@Base+0x5bdc>  // b.tstop
   24c58:	ldr	x9, [x9, #24]
   24c5c:	ldr	x10, [x23]
   24c60:	ldr	x26, [x9]
   24c64:	add	x11, x10, x26, lsl #4
   24c68:	ldrb	w11, [x11, #8]
   24c6c:	cmp	w11, #0x9
   24c70:	b.ne	24c84 <rpl_re_set_registers@@Base+0x5bd0>  // b.any
   24c74:	lsl	x11, x26, #4
   24c78:	ldr	x11, [x10, x11]
   24c7c:	cmp	x11, x19
   24c80:	b.eq	24ca4 <rpl_re_set_registers@@Base+0x5bf0>  // b.none
   24c84:	subs	x8, x8, #0x1
   24c88:	add	x9, x9, #0x8
   24c8c:	b.ne	24c60 <rpl_re_set_registers@@Base+0x5bac>  // b.any
   24c90:	ldur	x8, [x29, #-40]
   24c94:	cmp	x25, x8
   24c98:	add	x25, x25, #0x1
   24c9c:	b.lt	24c10 <rpl_re_set_registers@@Base+0x5b5c>  // b.tstop
   24ca0:	b	24bf4 <rpl_re_set_registers@@Base+0x5b40>
   24ca4:	cmn	x26, #0x1
   24ca8:	b.eq	24c90 <rpl_re_set_registers@@Base+0x5bdc>  // b.none
   24cac:	ldr	x1, [x24, #16]
   24cb0:	cbnz	x1, 24cd4 <rpl_re_set_registers@@Base+0x5c20>
   24cb4:	ldr	x8, [x24]
   24cb8:	mov	w0, #0x18                  	// #24
   24cbc:	sub	x8, x25, x8
   24cc0:	add	x1, x8, #0x1
   24cc4:	bl	a7f0 <calloc@plt>
   24cc8:	mov	x1, x0
   24ccc:	str	x0, [x24, #16]
   24cd0:	cbz	x0, 24f98 <rpl_re_set_registers@@Base+0x5ee4>
   24cd4:	ldp	x3, x2, [x24]
   24cd8:	mov	w6, #0x9                   	// #9
   24cdc:	mov	x0, x20
   24ce0:	mov	x4, x26
   24ce4:	mov	x5, x25
   24ce8:	bl	2560c <rpl_re_set_registers@@Base+0x6558>
   24cec:	ldr	x12, [sp, #56]
   24cf0:	cmp	w0, #0x1
   24cf4:	b.eq	24c90 <rpl_re_set_registers@@Base+0x5bdc>  // b.none
   24cf8:	mov	w27, w0
   24cfc:	cbnz	w0, 24fa4 <rpl_re_set_registers@@Base+0x5ef0>
   24d00:	ldp	x9, x8, [x24, #24]
   24d04:	cmp	x8, x9
   24d08:	b.eq	24d80 <rpl_re_set_registers@@Base+0x5ccc>  // b.none
   24d0c:	mov	w0, #0x1                   	// #1
   24d10:	mov	w1, #0x28                  	// #40
   24d14:	bl	a7f0 <calloc@plt>
   24d18:	cbz	x0, 24f98 <rpl_re_set_registers@@Base+0x5ee4>
   24d1c:	ldp	x9, x8, [x24, #32]
   24d20:	mov	x2, x0
   24d24:	mov	x1, x24
   24d28:	str	x0, [x8, x9, lsl #3]
   24d2c:	add	x8, x9, #0x1
   24d30:	stp	x26, x25, [x0]
   24d34:	str	x8, [x24, #32]
   24d38:	ldp	x3, x4, [x29, #-48]
   24d3c:	mov	x0, x20
   24d40:	bl	254a0 <rpl_re_set_registers@@Base+0x63ec>
   24d44:	cmp	w0, #0x1
   24d48:	b.hi	24fa0 <rpl_re_set_registers@@Base+0x5eec>  // b.pmore
   24d4c:	ldr	x21, [x20, #8]
   24d50:	ldr	x12, [sp, #56]
   24d54:	b	24c90 <rpl_re_set_registers@@Base+0x5bdc>
   24d58:	ldr	x8, [x20, #88]
   24d5c:	cmp	x22, x8
   24d60:	b.ge	24bf4 <rpl_re_set_registers@@Base+0x5b40>  // b.tcont
   24d64:	add	w1, w22, #0x1
   24d68:	mov	x0, x20
   24d6c:	bl	24fc4 <rpl_re_set_registers@@Base+0x5f10>
   24d70:	cbnz	w0, 24fa0 <rpl_re_set_registers@@Base+0x5eec>
   24d74:	ldr	x21, [x20, #8]
   24d78:	ldr	x12, [sp, #56]
   24d7c:	b	24c28 <rpl_re_set_registers@@Base+0x5b74>
   24d80:	ldr	x0, [x24, #40]
   24d84:	mov	w19, #0x1                   	// #1
   24d88:	bfi	x19, x8, #1, #63
   24d8c:	lsl	x1, x19, #3
   24d90:	bl	a860 <realloc@plt>
   24d94:	cbz	x0, 24f98 <rpl_re_set_registers@@Base+0x5ee4>
   24d98:	str	x19, [x24, #24]
   24d9c:	ldr	x19, [sp, #40]
   24da0:	str	x0, [x24, #40]
   24da4:	b	24d0c <rpl_re_set_registers@@Base+0x5c58>
   24da8:	ldr	x21, [sp, #16]
   24dac:	stur	wzr, [x29, #-4]
   24db0:	b	24f58 <rpl_re_set_registers@@Base+0x5ea4>
   24db4:	ldr	x8, [x20, #200]
   24db8:	ldp	x24, x21, [sp, #8]
   24dbc:	stur	wzr, [x29, #-4]
   24dc0:	cmp	x24, x8
   24dc4:	b.ge	24f58 <rpl_re_set_registers@@Base+0x5ea4>  // b.tcont
   24dc8:	add	x8, x24, x24, lsl #2
   24dcc:	lsl	x19, x8, #3
   24dd0:	ldr	x8, [x20, #216]
   24dd4:	ldur	x10, [x29, #-48]
   24dd8:	ldr	x9, [x8, x19]
   24ddc:	cmp	x9, x10
   24de0:	b.ne	24f44 <rpl_re_set_registers@@Base+0x5e90>  // b.any
   24de4:	add	x8, x8, x19
   24de8:	ldr	x9, [x8, #8]
   24dec:	ldur	x10, [x29, #-40]
   24df0:	cmp	x9, x10
   24df4:	b.ne	24f44 <rpl_re_set_registers@@Base+0x5e90>  // b.any
   24df8:	ldp	x22, x21, [x8, #16]
   24dfc:	ldr	x8, [x28, #48]
   24e00:	cmp	x21, x22
   24e04:	b.ne	24e20 <rpl_re_set_registers@@Base+0x5d6c>  // b.any
   24e08:	ldr	x9, [x28, #40]
   24e0c:	ldur	x10, [x29, #-48]
   24e10:	mov	w11, #0x18                  	// #24
   24e14:	madd	x9, x10, x11, x9
   24e18:	ldr	x9, [x9, #16]
   24e1c:	b	24e30 <rpl_re_set_registers@@Base+0x5d7c>
   24e20:	ldr	x9, [x28, #24]
   24e24:	ldur	x10, [x29, #-48]
   24e28:	mov	w11, #0x18                  	// #24
   24e2c:	add	x9, x9, x10, lsl #3
   24e30:	ldur	x23, [x29, #-40]
   24e34:	ldr	x9, [x9]
   24e38:	ldr	w2, [x20, #160]
   24e3c:	mov	x0, x20
   24e40:	add	x10, x21, x23
   24e44:	sub	x26, x10, x22
   24e48:	sub	x1, x26, #0x1
   24e4c:	madd	x27, x9, x11, x8
   24e50:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   24e54:	ldr	x8, [x20, #184]
   24e58:	mov	w25, w0
   24e5c:	ldr	x9, [x8, x23, lsl #3]
   24e60:	ldr	x8, [x8, x26, lsl #3]
   24e64:	cbz	x9, 24eb8 <rpl_re_set_registers@@Base+0x5e04>
   24e68:	ldr	x9, [x9, #16]
   24e6c:	str	x9, [sp, #56]
   24e70:	cbz	x8, 24ec0 <rpl_re_set_registers@@Base+0x5e0c>
   24e74:	ldr	x1, [x8, #80]
   24e78:	sub	x0, x29, #0x20
   24e7c:	mov	x2, x27
   24e80:	mov	x23, x27
   24e84:	bl	251d4 <rpl_re_set_registers@@Base+0x6120>
   24e88:	stur	w0, [x29, #-4]
   24e8c:	cbnz	w0, 24fac <rpl_re_set_registers@@Base+0x5ef8>
   24e90:	sub	x0, x29, #0x4
   24e94:	sub	x2, x29, #0x20
   24e98:	mov	x1, x28
   24e9c:	mov	w3, w25
   24ea0:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   24ea4:	ldr	x8, [x20, #184]
   24ea8:	str	x0, [x8, x26, lsl #3]
   24eac:	ldur	x0, [x29, #-16]
   24eb0:	bl	aaa0 <free@plt>
   24eb4:	b	24ee0 <rpl_re_set_registers@@Base+0x5e2c>
   24eb8:	str	xzr, [sp, #56]
   24ebc:	cbnz	x8, 24e74 <rpl_re_set_registers@@Base+0x5dc0>
   24ec0:	sub	x0, x29, #0x4
   24ec4:	mov	x1, x28
   24ec8:	mov	x2, x27
   24ecc:	mov	w3, w25
   24ed0:	mov	x23, x27
   24ed4:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   24ed8:	ldr	x8, [x20, #184]
   24edc:	str	x0, [x8, x26, lsl #3]
   24ee0:	ldr	x8, [x20, #184]
   24ee4:	ldr	x9, [x8, x26, lsl #3]
   24ee8:	cbnz	x9, 24ef4 <rpl_re_set_registers@@Base+0x5e40>
   24eec:	ldur	w27, [x29, #-4]
   24ef0:	cbnz	w27, 24f74 <rpl_re_set_registers@@Base+0x5ec0>
   24ef4:	cmp	x21, x22
   24ef8:	ldr	x21, [sp, #16]
   24efc:	b.ne	24f44 <rpl_re_set_registers@@Base+0x5e90>  // b.any
   24f00:	ldur	x9, [x29, #-40]
   24f04:	ldr	x8, [x8, x9, lsl #3]
   24f08:	ldr	x9, [sp, #56]
   24f0c:	ldr	x8, [x8, #16]
   24f10:	cmp	x8, x9
   24f14:	b.le	24f44 <rpl_re_set_registers@@Base+0x5e90>
   24f18:	ldur	x2, [x29, #-40]
   24f1c:	mov	x0, x20
   24f20:	mov	x1, x23
   24f24:	bl	248b4 <rpl_re_set_registers@@Base+0x5800>
   24f28:	stur	w0, [x29, #-4]
   24f2c:	cbnz	w0, 24fbc <rpl_re_set_registers@@Base+0x5f08>
   24f30:	mov	x0, x20
   24f34:	mov	x1, x23
   24f38:	bl	249b8 <rpl_re_set_registers@@Base+0x5904>
   24f3c:	stur	w0, [x29, #-4]
   24f40:	cbnz	w0, 24fbc <rpl_re_set_registers@@Base+0x5f08>
   24f44:	ldr	x8, [x20, #200]
   24f48:	add	x24, x24, #0x1
   24f4c:	add	x19, x19, #0x28
   24f50:	cmp	x24, x8
   24f54:	b.lt	24dd0 <rpl_re_set_registers@@Base+0x5d1c>  // b.tstop
   24f58:	ldr	x9, [sp, #48]
   24f5c:	ldr	x8, [x21, #8]
   24f60:	add	x9, x9, #0x1
   24f64:	cmp	x9, x8
   24f68:	b.lt	24a00 <rpl_re_set_registers@@Base+0x594c>  // b.tstop
   24f6c:	mov	w27, wzr
   24f70:	stur	wzr, [x29, #-4]
   24f74:	mov	w0, w27
   24f78:	ldp	x20, x19, [sp, #192]
   24f7c:	ldp	x22, x21, [sp, #176]
   24f80:	ldp	x24, x23, [sp, #160]
   24f84:	ldp	x26, x25, [sp, #144]
   24f88:	ldp	x28, x27, [sp, #128]
   24f8c:	ldp	x29, x30, [sp, #112]
   24f90:	add	sp, sp, #0xd0
   24f94:	ret
   24f98:	mov	w27, #0xc                   	// #12
   24f9c:	b	24fa4 <rpl_re_set_registers@@Base+0x5ef0>
   24fa0:	mov	w27, w0
   24fa4:	stur	w27, [x29, #-4]
   24fa8:	b	24f74 <rpl_re_set_registers@@Base+0x5ec0>
   24fac:	mov	w27, w0
   24fb0:	ldur	x0, [x29, #-16]
   24fb4:	bl	aaa0 <free@plt>
   24fb8:	b	24f74 <rpl_re_set_registers@@Base+0x5ec0>
   24fbc:	mov	w27, w0
   24fc0:	b	24f74 <rpl_re_set_registers@@Base+0x5ec0>
   24fc4:	stp	x29, x30, [sp, #-32]!
   24fc8:	ldr	x8, [x0, #64]
   24fcc:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
   24fd0:	str	x19, [sp, #16]
   24fd4:	mov	x29, sp
   24fd8:	cmp	x8, x9
   24fdc:	b.hi	25084 <rpl_re_set_registers@@Base+0x5fd0>  // b.pmore
   24fe0:	ldr	x9, [x0, #88]
   24fe4:	lsl	x11, x8, #1
   24fe8:	sxtw	x10, w1
   24fec:	mov	x19, x0
   24ff0:	cmp	x9, x8, lsl #1
   24ff4:	csel	x8, x9, x11, lt  // lt = tstop
   24ff8:	cmp	x8, w1, sxtw
   24ffc:	csel	x1, x8, x10, gt
   25000:	bl	1f24c <rpl_re_set_registers@@Base+0x198>
   25004:	cbnz	w0, 25078 <rpl_re_set_registers@@Base+0x5fc4>
   25008:	ldr	x0, [x19, #184]
   2500c:	cbz	x0, 25028 <rpl_re_set_registers@@Base+0x5f74>
   25010:	ldr	x8, [x19, #64]
   25014:	lsl	x8, x8, #3
   25018:	add	x1, x8, #0x8
   2501c:	bl	a860 <realloc@plt>
   25020:	cbz	x0, 25084 <rpl_re_set_registers@@Base+0x5fd0>
   25024:	str	x0, [x19, #184]
   25028:	ldr	w8, [x19, #144]
   2502c:	ldrb	w9, [x19, #136]
   25030:	cmp	w8, #0x2
   25034:	cbz	w9, 2504c <rpl_re_set_registers@@Base+0x5f98>
   25038:	mov	x0, x19
   2503c:	b.lt	2505c <rpl_re_set_registers@@Base+0x5fa8>  // b.tstop
   25040:	bl	1f2dc <rpl_re_set_registers@@Base+0x228>
   25044:	cbz	w0, 25074 <rpl_re_set_registers@@Base+0x5fc0>
   25048:	b	25078 <rpl_re_set_registers@@Base+0x5fc4>
   2504c:	b.lt	25064 <rpl_re_set_registers@@Base+0x5fb0>  // b.tstop
   25050:	mov	x0, x19
   25054:	bl	1f854 <rpl_re_set_registers@@Base+0x7a0>
   25058:	b	25074 <rpl_re_set_registers@@Base+0x5fc0>
   2505c:	bl	1f7dc <rpl_re_set_registers@@Base+0x728>
   25060:	b	25074 <rpl_re_set_registers@@Base+0x5fc0>
   25064:	ldr	x8, [x19, #120]
   25068:	cbz	x8, 25074 <rpl_re_set_registers@@Base+0x5fc0>
   2506c:	mov	x0, x19
   25070:	bl	1fa28 <rpl_re_set_registers@@Base+0x974>
   25074:	mov	w0, wzr
   25078:	ldr	x19, [sp, #16]
   2507c:	ldp	x29, x30, [sp], #32
   25080:	ret
   25084:	mov	w0, #0xc                   	// #12
   25088:	b	25078 <rpl_re_set_registers@@Base+0x5fc4>
   2508c:	sub	sp, sp, #0x60
   25090:	stp	x29, x30, [sp, #32]
   25094:	stp	x24, x23, [sp, #48]
   25098:	stp	x22, x21, [sp, #64]
   2509c:	stp	x20, x19, [sp, #80]
   250a0:	ldr	x20, [x1, #72]
   250a4:	ldp	x8, x9, [x1, #184]
   250a8:	ldr	x22, [x1, #152]
   250ac:	mov	x23, x2
   250b0:	mov	x19, x1
   250b4:	cmp	x20, x9
   250b8:	mov	x21, x0
   250bc:	add	x29, sp, #0x20
   250c0:	b.le	250d0 <rpl_re_set_registers@@Base+0x601c>
   250c4:	str	x23, [x8, x20, lsl #3]
   250c8:	str	x20, [x19, #192]
   250cc:	b	25164 <rpl_re_set_registers@@Base+0x60b0>
   250d0:	ldr	x9, [x8, x20, lsl #3]
   250d4:	cbz	x9, 25108 <rpl_re_set_registers@@Base+0x6054>
   250d8:	ldr	x2, [x9, #80]
   250dc:	cbz	x23, 25110 <rpl_re_set_registers@@Base+0x605c>
   250e0:	ldr	x23, [x23, #80]
   250e4:	mov	x0, sp
   250e8:	mov	x1, x23
   250ec:	bl	251d4 <rpl_re_set_registers@@Base+0x6120>
   250f0:	str	w0, [x21]
   250f4:	cbnz	w0, 251cc <rpl_re_set_registers@@Base+0x6118>
   250f8:	ldr	x8, [x19, #72]
   250fc:	cmp	x23, #0x0
   25100:	cset	w24, eq  // eq = none
   25104:	b	25128 <rpl_re_set_registers@@Base+0x6074>
   25108:	str	x23, [x8, x20, lsl #3]
   2510c:	b	25164 <rpl_re_set_registers@@Base+0x60b0>
   25110:	ldr	x8, [x2, #16]
   25114:	ldr	q0, [x2]
   25118:	mov	w24, #0x1                   	// #1
   2511c:	str	x8, [sp, #16]
   25120:	mov	x8, x20
   25124:	str	q0, [sp]
   25128:	ldr	w2, [x19, #160]
   2512c:	sub	x1, x8, #0x1
   25130:	mov	x0, x19
   25134:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   25138:	mov	w3, w0
   2513c:	mov	x2, sp
   25140:	mov	x0, x21
   25144:	mov	x1, x22
   25148:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   2514c:	ldr	x8, [x19, #184]
   25150:	mov	x23, x0
   25154:	str	x0, [x8, x20, lsl #3]
   25158:	tbnz	w24, #0, 25164 <rpl_re_set_registers@@Base+0x60b0>
   2515c:	ldr	x0, [sp, #16]
   25160:	bl	aaa0 <free@plt>
   25164:	cbz	x23, 251b0 <rpl_re_set_registers@@Base+0x60fc>
   25168:	ldr	x8, [x22, #152]
   2516c:	cbz	x8, 251b0 <rpl_re_set_registers@@Base+0x60fc>
   25170:	add	x22, x23, #0x8
   25174:	mov	x0, x19
   25178:	mov	x1, x22
   2517c:	mov	x2, x20
   25180:	bl	248b4 <rpl_re_set_registers@@Base+0x5800>
   25184:	str	w0, [x21]
   25188:	cbnz	w0, 251cc <rpl_re_set_registers@@Base+0x6118>
   2518c:	ldrb	w8, [x23, #104]
   25190:	tbz	w8, #6, 251b0 <rpl_re_set_registers@@Base+0x60fc>
   25194:	mov	x0, x19
   25198:	mov	x1, x22
   2519c:	bl	249b8 <rpl_re_set_registers@@Base+0x5904>
   251a0:	str	w0, [x21]
   251a4:	cbnz	w0, 251cc <rpl_re_set_registers@@Base+0x6118>
   251a8:	ldr	x8, [x19, #184]
   251ac:	ldr	x23, [x8, x20, lsl #3]
   251b0:	mov	x0, x23
   251b4:	ldp	x20, x19, [sp, #80]
   251b8:	ldp	x22, x21, [sp, #64]
   251bc:	ldp	x24, x23, [sp, #48]
   251c0:	ldp	x29, x30, [sp, #32]
   251c4:	add	sp, sp, #0x60
   251c8:	ret
   251cc:	mov	x23, xzr
   251d0:	b	251b0 <rpl_re_set_registers@@Base+0x60fc>
   251d4:	stp	x29, x30, [sp, #-80]!
   251d8:	stp	x20, x19, [sp, #64]
   251dc:	mov	x20, x2
   251e0:	mov	x19, x0
   251e4:	stp	x26, x25, [sp, #16]
   251e8:	stp	x24, x23, [sp, #32]
   251ec:	stp	x22, x21, [sp, #48]
   251f0:	mov	x29, sp
   251f4:	cbz	x1, 252f8 <rpl_re_set_registers@@Base+0x6244>
   251f8:	ldr	x24, [x1, #8]
   251fc:	mov	x21, x1
   25200:	cbz	x20, 252e4 <rpl_re_set_registers@@Base+0x6230>
   25204:	cmp	x24, #0x1
   25208:	b.lt	252e4 <rpl_re_set_registers@@Base+0x6230>  // b.tstop
   2520c:	ldr	x23, [x20, #8]
   25210:	cmp	x23, #0x1
   25214:	b.lt	252e4 <rpl_re_set_registers@@Base+0x6230>  // b.tstop
   25218:	add	x8, x23, x24
   2521c:	lsl	x0, x8, #3
   25220:	str	x8, [x19]
   25224:	bl	a660 <malloc@plt>
   25228:	str	x0, [x19, #16]
   2522c:	cbz	x0, 2537c <rpl_re_set_registers@@Base+0x62c8>
   25230:	mov	x25, xzr
   25234:	mov	x22, xzr
   25238:	mov	x11, xzr
   2523c:	mov	x9, xzr
   25240:	mov	w10, #0x1                   	// #1
   25244:	add	x8, x0, x22, lsl #3
   25248:	mov	x26, x11
   2524c:	tbz	w10, #0, 25338 <rpl_re_set_registers@@Base+0x6284>
   25250:	ldr	x10, [x21, #16]
   25254:	ldr	x11, [x20, #16]
   25258:	ldr	x13, [x10, x9, lsl #3]
   2525c:	ldr	x12, [x11, x26, lsl #3]
   25260:	cmp	x13, x12
   25264:	b.le	25288 <rpl_re_set_registers@@Base+0x61d4>
   25268:	add	x26, x26, #0x1
   2526c:	cmp	x23, x26
   25270:	add	x22, x22, #0x1
   25274:	cset	w10, gt
   25278:	cmp	x24, x9
   2527c:	str	x12, [x8], #8
   25280:	b.gt	2524c <rpl_re_set_registers@@Base+0x6198>
   25284:	b	252bc <rpl_re_set_registers@@Base+0x6208>
   25288:	str	x13, [x8]
   2528c:	ldr	x23, [x20, #8]
   25290:	ldr	x24, [x21, #8]
   25294:	cinc	x11, x26, eq  // eq = none
   25298:	add	x9, x9, #0x1
   2529c:	cmp	x23, x11
   252a0:	add	x22, x22, #0x1
   252a4:	cset	w10, gt
   252a8:	cmp	x24, x9
   252ac:	sub	x25, x25, #0x1
   252b0:	b.gt	25244 <rpl_re_set_registers@@Base+0x6190>
   252b4:	cmp	x13, x12
   252b8:	cinc	x26, x26, eq  // eq = none
   252bc:	cbz	w10, 2535c <rpl_re_set_registers@@Base+0x62a8>
   252c0:	ldr	x8, [x20, #16]
   252c4:	sub	x9, x23, x26
   252c8:	add	x0, x0, x22, lsl #3
   252cc:	lsl	x2, x9, #3
   252d0:	add	x1, x8, x26, lsl #3
   252d4:	bl	a2f0 <memcpy@plt>
   252d8:	sub	x8, x22, x26
   252dc:	add	x22, x8, x23
   252e0:	b	2535c <rpl_re_set_registers@@Base+0x62a8>
   252e4:	cmp	x24, #0x1
   252e8:	b.lt	252f8 <rpl_re_set_registers@@Base+0x6244>  // b.tstop
   252ec:	mov	x0, x19
   252f0:	mov	x1, x21
   252f4:	b	25310 <rpl_re_set_registers@@Base+0x625c>
   252f8:	cbz	x20, 25328 <rpl_re_set_registers@@Base+0x6274>
   252fc:	ldr	x8, [x20, #8]
   25300:	cmp	x8, #0x1
   25304:	b.lt	25328 <rpl_re_set_registers@@Base+0x6274>  // b.tstop
   25308:	mov	x0, x19
   2530c:	mov	x1, x20
   25310:	ldp	x20, x19, [sp, #64]
   25314:	ldp	x22, x21, [sp, #48]
   25318:	ldp	x24, x23, [sp, #32]
   2531c:	ldp	x26, x25, [sp, #16]
   25320:	ldp	x29, x30, [sp], #80
   25324:	b	235d8 <rpl_re_set_registers@@Base+0x4524>
   25328:	mov	w0, wzr
   2532c:	stp	xzr, xzr, [x19]
   25330:	str	xzr, [x19, #16]
   25334:	b	25364 <rpl_re_set_registers@@Base+0x62b0>
   25338:	ldr	x10, [x21, #16]
   2533c:	sub	x11, x24, x9
   25340:	lsl	x2, x11, #3
   25344:	mov	x0, x8
   25348:	add	x1, x10, x9, lsl #3
   2534c:	bl	a2f0 <memcpy@plt>
   25350:	ldr	x8, [x21, #8]
   25354:	add	x8, x8, x25
   25358:	add	x22, x8, x22
   2535c:	mov	w0, wzr
   25360:	str	x22, [x19, #8]
   25364:	ldp	x20, x19, [sp, #64]
   25368:	ldp	x22, x21, [sp, #48]
   2536c:	ldp	x24, x23, [sp, #32]
   25370:	ldp	x26, x25, [sp, #16]
   25374:	ldp	x29, x30, [sp], #80
   25378:	ret
   2537c:	mov	w0, #0xc                   	// #12
   25380:	b	25364 <rpl_re_set_registers@@Base+0x62b0>
   25384:	ldr	x9, [x0, #200]
   25388:	mov	x8, x0
   2538c:	cmp	x9, #0x1
   25390:	b.lt	253d4 <rpl_re_set_registers@@Base+0x6320>  // b.tstop
   25394:	ldr	x10, [x8, #216]
   25398:	mov	x0, xzr
   2539c:	mov	w11, #0x28                  	// #40
   253a0:	mov	x12, x9
   253a4:	add	x13, x0, x12
   253a8:	cmp	x13, #0x0
   253ac:	cinc	x13, x13, lt  // lt = tstop
   253b0:	asr	x13, x13, #1
   253b4:	madd	x14, x13, x11, x10
   253b8:	ldr	x14, [x14, #8]
   253bc:	cmp	x14, x1
   253c0:	csel	x12, x12, x13, lt  // lt = tstop
   253c4:	csinc	x0, x0, x13, ge  // ge = tcont
   253c8:	cmp	x0, x12
   253cc:	b.lt	253a4 <rpl_re_set_registers@@Base+0x62f0>  // b.tstop
   253d0:	b	253d8 <rpl_re_set_registers@@Base+0x6324>
   253d4:	mov	x0, xzr
   253d8:	cmp	x0, x9
   253dc:	b.ge	253f8 <rpl_re_set_registers@@Base+0x6344>  // b.tcont
   253e0:	ldr	x8, [x8, #216]
   253e4:	mov	w9, #0x28                  	// #40
   253e8:	madd	x8, x0, x9, x8
   253ec:	ldr	x8, [x8, #8]
   253f0:	cmp	x8, x1
   253f4:	b.eq	253fc <rpl_re_set_registers@@Base+0x6348>  // b.none
   253f8:	mov	x0, #0xffffffffffffffff    	// #-1
   253fc:	ret
   25400:	stp	x29, x30, [sp, #-48]!
   25404:	stp	x20, x19, [sp, #32]
   25408:	ldr	x8, [x0, #64]
   2540c:	str	x21, [sp, #16]
   25410:	ldr	x21, [x0, #192]
   25414:	mov	x19, x0
   25418:	mov	x20, x1
   2541c:	cmp	x8, x1
   25420:	mov	x29, sp
   25424:	b.gt	25434 <rpl_re_set_registers@@Base+0x6380>
   25428:	ldr	x9, [x19, #88]
   2542c:	cmp	x8, x9
   25430:	b.lt	2544c <rpl_re_set_registers@@Base+0x6398>  // b.tstop
   25434:	ldr	x8, [x19, #48]
   25438:	cmp	x8, x20
   2543c:	b.gt	2545c <rpl_re_set_registers@@Base+0x63a8>
   25440:	ldr	x9, [x19, #88]
   25444:	cmp	x8, x9
   25448:	b.ge	2545c <rpl_re_set_registers@@Base+0x63a8>  // b.tcont
   2544c:	add	w1, w20, #0x1
   25450:	mov	x0, x19
   25454:	bl	24fc4 <rpl_re_set_registers@@Base+0x5f10>
   25458:	cbnz	w0, 25490 <rpl_re_set_registers@@Base+0x63dc>
   2545c:	cmp	x21, x20
   25460:	b.ge	2548c <rpl_re_set_registers@@Base+0x63d8>  // b.tcont
   25464:	ldr	x8, [x19, #184]
   25468:	sub	x9, x20, x21
   2546c:	lsl	x2, x9, #3
   25470:	mov	w1, wzr
   25474:	add	x8, x8, x21, lsl #3
   25478:	add	x0, x8, #0x8
   2547c:	bl	a770 <memset@plt>
   25480:	mov	w0, wzr
   25484:	str	x20, [x19, #192]
   25488:	b	25490 <rpl_re_set_registers@@Base+0x63dc>
   2548c:	mov	w0, wzr
   25490:	ldp	x20, x19, [sp, #32]
   25494:	ldr	x21, [sp, #16]
   25498:	ldp	x29, x30, [sp], #48
   2549c:	ret
   254a0:	stp	x29, x30, [sp, #-96]!
   254a4:	stp	x28, x27, [sp, #16]
   254a8:	stp	x26, x25, [sp, #32]
   254ac:	stp	x24, x23, [sp, #48]
   254b0:	stp	x22, x21, [sp, #64]
   254b4:	stp	x20, x19, [sp, #80]
   254b8:	mov	x22, x2
   254bc:	mov	x23, x3
   254c0:	ldr	x2, [x2]
   254c4:	ldr	x3, [x22, #8]
   254c8:	mov	x19, x4
   254cc:	mov	x21, x1
   254d0:	add	x1, x22, #0x10
   254d4:	mov	w6, #0x8                   	// #8
   254d8:	mov	x4, x23
   254dc:	mov	x5, x19
   254e0:	mov	x29, sp
   254e4:	mov	x20, x0
   254e8:	bl	2560c <rpl_re_set_registers@@Base+0x6558>
   254ec:	cbz	w0, 2550c <rpl_re_set_registers@@Base+0x6458>
   254f0:	ldp	x20, x19, [sp, #80]
   254f4:	ldp	x22, x21, [sp, #64]
   254f8:	ldp	x24, x23, [sp, #48]
   254fc:	ldp	x26, x25, [sp, #32]
   25500:	ldp	x28, x27, [sp, #16]
   25504:	ldp	x29, x30, [sp], #96
   25508:	ret
   2550c:	ldp	x27, x8, [x20, #200]
   25510:	ldr	x26, [x21]
   25514:	ldr	x25, [x22, #8]
   25518:	cmp	x27, x8
   2551c:	b.ge	25528 <rpl_re_set_registers@@Base+0x6474>  // b.tcont
   25520:	ldr	x24, [x20, #216]
   25524:	b	25568 <rpl_re_set_registers@@Base+0x64b4>
   25528:	ldr	x0, [x20, #216]
   2552c:	add	x8, x8, x8, lsl #2
   25530:	lsl	x1, x8, #4
   25534:	bl	a860 <realloc@plt>
   25538:	cbz	x0, 255fc <rpl_re_set_registers@@Base+0x6548>
   2553c:	ldp	x27, x28, [x20, #200]
   25540:	mov	w8, #0x28                  	// #40
   25544:	mov	x24, x0
   25548:	str	x0, [x20, #216]
   2554c:	madd	x0, x27, x8, x0
   25550:	add	x8, x28, x28, lsl #2
   25554:	lsl	x2, x8, #3
   25558:	mov	w1, wzr
   2555c:	bl	a770 <memset@plt>
   25560:	lsl	x8, x28, #1
   25564:	str	x8, [x20, #208]
   25568:	subs	x8, x27, #0x1
   2556c:	b.lt	25594 <rpl_re_set_registers@@Base+0x64e0>  // b.tstop
   25570:	mov	w9, #0x28                  	// #40
   25574:	madd	x9, x8, x9, x24
   25578:	ldr	x9, [x9, #8]
   2557c:	cmp	x9, x19
   25580:	b.ne	25594 <rpl_re_set_registers@@Base+0x64e0>  // b.any
   25584:	mov	w9, #0x28                  	// #40
   25588:	madd	x8, x8, x9, x24
   2558c:	mov	w9, #0x1                   	// #1
   25590:	strb	w9, [x8, #32]
   25594:	mov	w9, #0x28                  	// #40
   25598:	subs	x8, x25, x26
   2559c:	add	x10, x27, #0x1
   255a0:	madd	x9, x27, x9, x24
   255a4:	csetm	w11, eq  // eq = none
   255a8:	stp	x23, x19, [x9]
   255ac:	stp	x26, x25, [x9, #16]
   255b0:	strh	w11, [x9, #34]
   255b4:	str	x10, [x20, #200]
   255b8:	strb	wzr, [x9, #32]
   255bc:	ldrsw	x9, [x20, #224]
   255c0:	cmp	x8, x9
   255c4:	b.le	255cc <rpl_re_set_registers@@Base+0x6518>
   255c8:	str	w8, [x20, #224]
   255cc:	ldr	x8, [x22, #8]
   255d0:	ldr	x9, [x21]
   255d4:	mov	x0, x20
   255d8:	ldp	x22, x21, [sp, #64]
   255dc:	add	x8, x8, x19
   255e0:	ldp	x20, x19, [sp, #80]
   255e4:	ldp	x24, x23, [sp, #48]
   255e8:	ldp	x26, x25, [sp, #32]
   255ec:	ldp	x28, x27, [sp, #16]
   255f0:	sub	x1, x8, x9
   255f4:	ldp	x29, x30, [sp], #96
   255f8:	b	25400 <rpl_re_set_registers@@Base+0x634c>
   255fc:	ldr	x0, [x20, #216]
   25600:	bl	aaa0 <free@plt>
   25604:	mov	w0, #0xc                   	// #12
   25608:	b	254f0 <rpl_re_set_registers@@Base+0x643c>
   2560c:	sub	sp, sp, #0xf0
   25610:	stp	x29, x30, [sp, #144]
   25614:	stp	x28, x27, [sp, #160]
   25618:	stp	x26, x25, [sp, #176]
   2561c:	stp	x24, x23, [sp, #192]
   25620:	stp	x22, x21, [sp, #208]
   25624:	stp	x20, x19, [sp, #224]
   25628:	ldr	x8, [x0, #152]
   2562c:	add	x29, sp, #0x90
   25630:	stur	wzr, [x29, #-36]
   25634:	lsl	x10, x2, #4
   25638:	str	x8, [sp, #64]
   2563c:	ldr	x8, [x8]
   25640:	ldrsw	x9, [x0, #224]
   25644:	ldr	x20, [x1, #8]
   25648:	mov	x25, x4
   2564c:	ldr	x8, [x8, x10]
   25650:	mov	x19, x2
   25654:	mov	x26, x1
   25658:	mov	x21, x0
   2565c:	stp	x5, x8, [sp, #48]
   25660:	add	x8, x9, x5
   25664:	cmp	x20, x8
   25668:	mov	x22, x3
   2566c:	str	w6, [sp, #44]
   25670:	b.le	25a40 <rpl_re_set_registers@@Base+0x698c>
   25674:	ldr	x27, [x26, #16]
   25678:	mov	w24, w6
   2567c:	mov	x23, x5
   25680:	ldr	x9, [x21, #72]
   25684:	ldr	x8, [x26]
   25688:	ldr	x20, [x21, #184]
   2568c:	mov	x0, x21
   25690:	stp	x9, x26, [sp, #24]
   25694:	ldr	w2, [x21, #160]
   25698:	cmp	x8, #0x0
   2569c:	csel	x26, x22, x8, eq  // eq = none
   256a0:	sub	x1, x26, #0x1
   256a4:	str	x27, [x21, #184]
   256a8:	str	x26, [x21, #72]
   256ac:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   256b0:	cmp	x26, x22
   256b4:	mov	w22, w0
   256b8:	b.ne	25750 <rpl_re_set_registers@@Base+0x669c>  // b.any
   256bc:	mov	w8, #0x1                   	// #1
   256c0:	dup	v0.2d, x8
   256c4:	mov	w0, #0x8                   	// #8
   256c8:	stur	q0, [x29, #-64]
   256cc:	bl	a660 <malloc@plt>
   256d0:	stur	x0, [x29, #-48]
   256d4:	cbz	x0, 25aa4 <rpl_re_set_registers@@Base+0x69f0>
   256d8:	str	x19, [x0]
   256dc:	ldp	x2, x0, [sp, #56]
   256e0:	sub	x1, x29, #0x40
   256e4:	mov	w3, w24
   256e8:	stur	wzr, [x29, #-36]
   256ec:	bl	25ac4 <rpl_re_set_registers@@Base+0x6a10>
   256f0:	stur	w0, [x29, #-36]
   256f4:	cbnz	w0, 25a94 <rpl_re_set_registers@@Base+0x69e0>
   256f8:	ldur	x8, [x29, #-56]
   256fc:	cbz	x8, 25720 <rpl_re_set_registers@@Base+0x666c>
   25700:	ldr	x3, [sp, #56]
   25704:	sub	x1, x29, #0x40
   25708:	mov	x0, x21
   2570c:	mov	x2, x26
   25710:	mov	w4, w24
   25714:	bl	25c04 <rpl_re_set_registers@@Base+0x6b50>
   25718:	stur	w0, [x29, #-36]
   2571c:	cbnz	w0, 25a94 <rpl_re_set_registers@@Base+0x69e0>
   25720:	ldr	x1, [sp, #64]
   25724:	sub	x0, x29, #0x24
   25728:	sub	x2, x29, #0x40
   2572c:	mov	w3, w22
   25730:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   25734:	mov	x27, x0
   25738:	cbnz	x0, 25744 <rpl_re_set_registers@@Base+0x6690>
   2573c:	ldur	w8, [x29, #-36]
   25740:	cbnz	w8, 25a30 <rpl_re_set_registers@@Base+0x697c>
   25744:	ldr	x8, [x21, #184]
   25748:	str	x27, [x8, x26, lsl #3]
   2574c:	b	25768 <rpl_re_set_registers@@Base+0x66b4>
   25750:	ldr	x27, [x27, x26, lsl #3]
   25754:	cbz	x27, 25760 <rpl_re_set_registers@@Base+0x66ac>
   25758:	ldrb	w8, [x27, #104]
   2575c:	tbnz	w8, #6, 259f0 <rpl_re_set_registers@@Base+0x693c>
   25760:	stp	xzr, xzr, [x29, #-64]
   25764:	stur	xzr, [x29, #-48]
   25768:	cmp	x26, x23
   2576c:	b.ge	25988 <rpl_re_set_registers@@Base+0x68d4>  // b.tcont
   25770:	stp	x20, x25, [sp, #8]
   25774:	ldp	x22, x20, [sp, #56]
   25778:	mov	x25, xzr
   2577c:	ldrsw	x8, [x21, #224]
   25780:	cmp	x25, x8
   25784:	b.gt	25984 <rpl_re_set_registers@@Base+0x68d0>
   25788:	stur	xzr, [x29, #-56]
   2578c:	ldr	x8, [x21, #184]
   25790:	add	x19, x26, #0x1
   25794:	ldr	x8, [x8, x19, lsl #3]
   25798:	cbz	x8, 257b0 <rpl_re_set_registers@@Base+0x66fc>
   2579c:	add	x1, x8, #0x8
   257a0:	sub	x0, x29, #0x40
   257a4:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   257a8:	stur	w0, [x29, #-36]
   257ac:	cbnz	w0, 25a30 <rpl_re_set_registers@@Base+0x697c>
   257b0:	cbz	x27, 258ec <rpl_re_set_registers@@Base+0x6838>
   257b4:	str	x19, [sp, #72]
   257b8:	ldr	x19, [x21, #152]
   257bc:	stur	wzr, [x29, #-4]
   257c0:	stp	xzr, xzr, [x29, #-32]
   257c4:	stur	xzr, [x29, #-16]
   257c8:	ldr	x8, [x27, #40]
   257cc:	cmp	x8, #0x1
   257d0:	b.lt	258dc <rpl_re_set_registers@@Base+0x6828>  // b.tstop
   257d4:	mov	x24, xzr
   257d8:	ldr	x8, [x27, #48]
   257dc:	ldr	x22, [x8, x24, lsl #3]
   257e0:	ldr	x8, [x19]
   257e4:	add	x9, x8, x22, lsl #4
   257e8:	ldrb	w9, [x9, #10]
   257ec:	tbnz	w9, #4, 25808 <rpl_re_set_registers@@Base+0x6754>
   257f0:	add	x1, x8, x22, lsl #4
   257f4:	mov	x0, x21
   257f8:	mov	x2, x26
   257fc:	bl	2648c <rpl_re_set_registers@@Base+0x73d8>
   25800:	tbnz	w0, #0, 25898 <rpl_re_set_registers@@Base+0x67e4>
   25804:	b	258ac <rpl_re_set_registers@@Base+0x67f8>
   25808:	mov	x0, x19
   2580c:	mov	x1, x22
   25810:	mov	x2, x21
   25814:	mov	x3, x26
   25818:	bl	26194 <rpl_re_set_registers@@Base+0x70e0>
   2581c:	cmp	w0, #0x2
   25820:	b.lt	25894 <rpl_re_set_registers@@Base+0x67e0>  // b.tstop
   25824:	ldr	x8, [x21, #184]
   25828:	ldr	x9, [x19, #24]
   2582c:	add	x28, x26, w0, uxtw
   25830:	ldr	x8, [x8, x28, lsl #3]
   25834:	ldr	x20, [x9, x22, lsl #3]
   25838:	stur	xzr, [x29, #-24]
   2583c:	cbz	x8, 25854 <rpl_re_set_registers@@Base+0x67a0>
   25840:	add	x1, x8, #0x8
   25844:	sub	x0, x29, #0x20
   25848:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   2584c:	stur	w0, [x29, #-4]
   25850:	cbnz	w0, 25a38 <rpl_re_set_registers@@Base+0x6984>
   25854:	sub	x0, x29, #0x20
   25858:	mov	x1, x20
   2585c:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   25860:	tbz	w0, #0, 25a10 <rpl_re_set_registers@@Base+0x695c>
   25864:	sub	x0, x29, #0x4
   25868:	sub	x2, x29, #0x20
   2586c:	mov	x1, x19
   25870:	bl	25fa4 <rpl_re_set_registers@@Base+0x6ef0>
   25874:	ldr	x8, [x21, #184]
   25878:	str	x0, [x8, x28, lsl #3]
   2587c:	ldr	x8, [x21, #184]
   25880:	ldr	x8, [x8, x28, lsl #3]
   25884:	cbnz	x8, 25898 <rpl_re_set_registers@@Base+0x67e4>
   25888:	ldur	w23, [x29, #-4]
   2588c:	cbz	w23, 25898 <rpl_re_set_registers@@Base+0x67e4>
   25890:	b	25a14 <rpl_re_set_registers@@Base+0x6960>
   25894:	cbz	w0, 258c0 <rpl_re_set_registers@@Base+0x680c>
   25898:	ldr	x8, [x19, #24]
   2589c:	sub	x0, x29, #0x40
   258a0:	ldr	x1, [x8, x22, lsl #3]
   258a4:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   258a8:	tbz	w0, #0, 25a10 <rpl_re_set_registers@@Base+0x695c>
   258ac:	ldr	x8, [x27, #40]
   258b0:	add	x24, x24, #0x1
   258b4:	cmp	x24, x8
   258b8:	b.lt	257d8 <rpl_re_set_registers@@Base+0x6724>  // b.tstop
   258bc:	b	258c8 <rpl_re_set_registers@@Base+0x6814>
   258c0:	ldr	x8, [x19]
   258c4:	b	257f0 <rpl_re_set_registers@@Base+0x673c>
   258c8:	ldur	x0, [x29, #-16]
   258cc:	ldp	x23, x22, [sp, #48]
   258d0:	ldr	w24, [sp, #44]
   258d4:	ldr	x20, [sp, #64]
   258d8:	b	258e0 <rpl_re_set_registers@@Base+0x682c>
   258dc:	mov	x0, xzr
   258e0:	bl	aaa0 <free@plt>
   258e4:	ldr	x19, [sp, #72]
   258e8:	stur	wzr, [x29, #-36]
   258ec:	ldur	x8, [x29, #-56]
   258f0:	cbz	x8, 25930 <rpl_re_set_registers@@Base+0x687c>
   258f4:	sub	x1, x29, #0x40
   258f8:	mov	x0, x20
   258fc:	mov	x2, x22
   25900:	mov	w3, w24
   25904:	bl	25ac4 <rpl_re_set_registers@@Base+0x6a10>
   25908:	stur	w0, [x29, #-36]
   2590c:	cbnz	w0, 25a30 <rpl_re_set_registers@@Base+0x697c>
   25910:	sub	x1, x29, #0x40
   25914:	mov	x0, x21
   25918:	mov	x2, x19
   2591c:	mov	x3, x22
   25920:	mov	w4, w24
   25924:	bl	25c04 <rpl_re_set_registers@@Base+0x6b50>
   25928:	stur	w0, [x29, #-36]
   2592c:	cbnz	w0, 25a30 <rpl_re_set_registers@@Base+0x697c>
   25930:	ldr	w2, [x21, #160]
   25934:	mov	x0, x21
   25938:	mov	x1, x26
   2593c:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   25940:	mov	w3, w0
   25944:	sub	x0, x29, #0x24
   25948:	sub	x2, x29, #0x40
   2594c:	mov	x1, x20
   25950:	bl	236a4 <rpl_re_set_registers@@Base+0x45f0>
   25954:	mov	x27, x0
   25958:	cbnz	x0, 25964 <rpl_re_set_registers@@Base+0x68b0>
   2595c:	ldur	w8, [x29, #-36]
   25960:	cbnz	w8, 25a30 <rpl_re_set_registers@@Base+0x697c>
   25964:	ldr	x8, [x21, #184]
   25968:	cmp	x27, #0x0
   2596c:	csinc	x25, xzr, x25, ne  // ne = any
   25970:	cmp	x19, x23
   25974:	mov	x26, x19
   25978:	str	x27, [x8, x19, lsl #3]
   2597c:	b.ne	2577c <rpl_re_set_registers@@Base+0x66c8>  // b.any
   25980:	mov	x26, x23
   25984:	ldp	x20, x25, [sp, #8]
   25988:	ldur	x0, [x29, #-48]
   2598c:	bl	aaa0 <free@plt>
   25990:	ldr	x8, [x21, #184]
   25994:	ldr	x9, [sp, #32]
   25998:	ldr	x8, [x8, x23, lsl #3]
   2599c:	str	x26, [x9]
   259a0:	ldr	x9, [sp, #24]
   259a4:	str	x20, [x21, #184]
   259a8:	str	x9, [x21, #72]
   259ac:	cbz	x8, 259c8 <rpl_re_set_registers@@Base+0x6914>
   259b0:	add	x0, x8, #0x8
   259b4:	mov	x1, x25
   259b8:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   259bc:	cbz	x0, 259c8 <rpl_re_set_registers@@Base+0x6914>
   259c0:	mov	w19, wzr
   259c4:	b	259cc <rpl_re_set_registers@@Base+0x6918>
   259c8:	mov	w19, #0x1                   	// #1
   259cc:	mov	w0, w19
   259d0:	ldp	x20, x19, [sp, #224]
   259d4:	ldp	x22, x21, [sp, #208]
   259d8:	ldp	x24, x23, [sp, #192]
   259dc:	ldp	x26, x25, [sp, #176]
   259e0:	ldp	x28, x27, [sp, #160]
   259e4:	ldp	x29, x30, [sp, #144]
   259e8:	add	sp, sp, #0xf0
   259ec:	ret
   259f0:	add	x1, x27, #0x8
   259f4:	sub	x0, x29, #0x40
   259f8:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   259fc:	stur	w0, [x29, #-36]
   25a00:	cbnz	w0, 25ab4 <rpl_re_set_registers@@Base+0x6a00>
   25a04:	ldrb	w8, [x27, #104]
   25a08:	tbnz	w8, #6, 256f8 <rpl_re_set_registers@@Base+0x6644>
   25a0c:	b	25768 <rpl_re_set_registers@@Base+0x66b4>
   25a10:	mov	w23, #0xc                   	// #12
   25a14:	ldur	x0, [x29, #-16]
   25a18:	bl	aaa0 <free@plt>
   25a1c:	ldur	x0, [x29, #-48]
   25a20:	stur	w23, [x29, #-36]
   25a24:	bl	aaa0 <free@plt>
   25a28:	ldur	w19, [x29, #-36]
   25a2c:	b	259cc <rpl_re_set_registers@@Base+0x6918>
   25a30:	ldur	x0, [x29, #-48]
   25a34:	b	25a24 <rpl_re_set_registers@@Base+0x6970>
   25a38:	mov	w23, w0
   25a3c:	b	25a14 <rpl_re_set_registers@@Base+0x6960>
   25a40:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   25a44:	sub	x9, x9, x20
   25a48:	cmp	x9, x8
   25a4c:	b.le	25abc <rpl_re_set_registers@@Base+0x6a08>
   25a50:	add	x23, x8, #0x1
   25a54:	add	x24, x23, x20
   25a58:	lsr	x8, x24, #61
   25a5c:	cbnz	x8, 25abc <rpl_re_set_registers@@Base+0x6a08>
   25a60:	ldr	x0, [x26, #16]
   25a64:	lsl	x1, x24, #3
   25a68:	bl	a860 <realloc@plt>
   25a6c:	cbz	x0, 25abc <rpl_re_set_registers@@Base+0x6a08>
   25a70:	mov	x27, x0
   25a74:	stp	x24, x0, [x26, #8]
   25a78:	add	x0, x0, x20, lsl #3
   25a7c:	lsl	x2, x23, #3
   25a80:	mov	w1, wzr
   25a84:	bl	a770 <memset@plt>
   25a88:	ldr	x23, [sp, #48]
   25a8c:	ldr	w24, [sp, #44]
   25a90:	b	25680 <rpl_re_set_registers@@Base+0x65cc>
   25a94:	mov	w19, w0
   25a98:	ldur	x0, [x29, #-48]
   25a9c:	bl	aaa0 <free@plt>
   25aa0:	b	259cc <rpl_re_set_registers@@Base+0x6918>
   25aa4:	mov	w19, #0xc                   	// #12
   25aa8:	stp	xzr, xzr, [x29, #-64]
   25aac:	stur	w19, [x29, #-36]
   25ab0:	b	259cc <rpl_re_set_registers@@Base+0x6918>
   25ab4:	mov	w19, w0
   25ab8:	b	259cc <rpl_re_set_registers@@Base+0x6918>
   25abc:	mov	w19, #0xc                   	// #12
   25ac0:	b	259cc <rpl_re_set_registers@@Base+0x6918>
   25ac4:	sub	sp, sp, #0x70
   25ac8:	stp	x29, x30, [sp, #32]
   25acc:	stp	x24, x23, [sp, #64]
   25ad0:	stp	x22, x21, [sp, #80]
   25ad4:	stp	x20, x19, [sp, #96]
   25ad8:	ldr	x23, [x1, #8]
   25adc:	mov	x22, x0
   25ae0:	str	x25, [sp, #48]
   25ae4:	add	x29, sp, #0x20
   25ae8:	lsl	x0, x23, #3
   25aec:	mov	w20, w3
   25af0:	mov	x21, x2
   25af4:	mov	x19, x1
   25af8:	stp	x23, xzr, [sp, #8]
   25afc:	bl	a660 <malloc@plt>
   25b00:	str	x0, [sp, #24]
   25b04:	cbz	x0, 25bfc <rpl_re_set_registers@@Base+0x6b48>
   25b08:	cmp	x23, #0x1
   25b0c:	b.lt	25bc0 <rpl_re_set_registers@@Base+0x6b0c>  // b.tstop
   25b10:	mov	x24, xzr
   25b14:	mov	w25, #0x18                  	// #24
   25b18:	ldr	x8, [x19, #16]
   25b1c:	ldr	x9, [x22, #48]
   25b20:	ldr	x2, [x8, x24, lsl #3]
   25b24:	madd	x1, x2, x25, x9
   25b28:	ldr	x8, [x1, #8]
   25b2c:	cmp	x8, #0x1
   25b30:	b.lt	25b70 <rpl_re_set_registers@@Base+0x6abc>  // b.tstop
   25b34:	madd	x9, x2, x25, x9
   25b38:	ldr	x9, [x9, #16]
   25b3c:	ldr	x10, [x22]
   25b40:	ldr	x11, [x9]
   25b44:	add	x12, x10, x11, lsl #4
   25b48:	ldrb	w12, [x12, #8]
   25b4c:	cmp	w12, w20
   25b50:	b.ne	25b64 <rpl_re_set_registers@@Base+0x6ab0>  // b.any
   25b54:	lsl	x12, x11, #4
   25b58:	ldr	x12, [x10, x12]
   25b5c:	cmp	x12, x21
   25b60:	b.eq	25b90 <rpl_re_set_registers@@Base+0x6adc>  // b.none
   25b64:	subs	x8, x8, #0x1
   25b68:	add	x9, x9, #0x8
   25b6c:	b.ne	25b40 <rpl_re_set_registers@@Base+0x6a8c>  // b.any
   25b70:	add	x0, sp, #0x8
   25b74:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   25b78:	cbnz	w0, 25bb0 <rpl_re_set_registers@@Base+0x6afc>
   25b7c:	ldr	x8, [x19, #8]
   25b80:	add	x24, x24, #0x1
   25b84:	cmp	x24, x8
   25b88:	b.lt	25b18 <rpl_re_set_registers@@Base+0x6a64>  // b.tstop
   25b8c:	b	25bc0 <rpl_re_set_registers@@Base+0x6b0c>
   25b90:	cmn	x11, #0x1
   25b94:	b.eq	25b70 <rpl_re_set_registers@@Base+0x6abc>  // b.none
   25b98:	add	x1, sp, #0x8
   25b9c:	mov	x0, x22
   25ba0:	mov	x3, x21
   25ba4:	mov	w4, w20
   25ba8:	bl	25e98 <rpl_re_set_registers@@Base+0x6de4>
   25bac:	cbz	w0, 25b7c <rpl_re_set_registers@@Base+0x6ac8>
   25bb0:	mov	w23, w0
   25bb4:	ldr	x0, [sp, #24]
   25bb8:	bl	aaa0 <free@plt>
   25bbc:	b	25bdc <rpl_re_set_registers@@Base+0x6b28>
   25bc0:	ldr	x0, [x19, #16]
   25bc4:	bl	aaa0 <free@plt>
   25bc8:	ldr	x8, [sp, #24]
   25bcc:	ldur	q0, [sp, #8]
   25bd0:	mov	w23, wzr
   25bd4:	str	x8, [x19, #16]
   25bd8:	str	q0, [x19]
   25bdc:	mov	w0, w23
   25be0:	ldp	x20, x19, [sp, #96]
   25be4:	ldp	x22, x21, [sp, #80]
   25be8:	ldp	x24, x23, [sp, #64]
   25bec:	ldr	x25, [sp, #48]
   25bf0:	ldp	x29, x30, [sp, #32]
   25bf4:	add	sp, sp, #0x70
   25bf8:	ret
   25bfc:	mov	w23, #0xc                   	// #12
   25c00:	b	25bdc <rpl_re_set_registers@@Base+0x6b28>
   25c04:	sub	sp, sp, #0xa0
   25c08:	stp	x29, x30, [sp, #64]
   25c0c:	stp	x28, x27, [sp, #80]
   25c10:	stp	x26, x25, [sp, #96]
   25c14:	stp	x24, x23, [sp, #112]
   25c18:	stp	x22, x21, [sp, #128]
   25c1c:	stp	x20, x19, [sp, #144]
   25c20:	ldr	x23, [x0, #152]
   25c24:	mov	x24, x1
   25c28:	mov	x1, x2
   25c2c:	add	x29, sp, #0x40
   25c30:	str	w4, [sp, #28]
   25c34:	str	x3, [sp, #16]
   25c38:	mov	x21, x2
   25c3c:	mov	x22, x0
   25c40:	bl	25384 <rpl_re_set_registers@@Base+0x62d0>
   25c44:	cmn	x0, #0x1
   25c48:	b.eq	25e70 <rpl_re_set_registers@@Base+0x6dbc>  // b.none
   25c4c:	mov	w8, #0x1                   	// #1
   25c50:	dup	v0.2d, x8
   25c54:	mov	x25, x0
   25c58:	mov	w9, #0x28                  	// #40
   25c5c:	str	q0, [sp]
   25c60:	ldr	x8, [x22, #216]
   25c64:	madd	x8, x25, x9, x8
   25c68:	add	x20, x8, #0x10
   25c6c:	ldur	x27, [x20, #-16]
   25c70:	mov	x0, x24
   25c74:	mov	x1, x27
   25c78:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   25c7c:	cbz	x0, 25e00 <rpl_re_set_registers@@Base+0x6d4c>
   25c80:	ldp	x9, x8, [x20]
   25c84:	add	x8, x8, x21
   25c88:	sub	x19, x8, x9
   25c8c:	cmp	x19, x21
   25c90:	b.ne	25d28 <rpl_re_set_registers@@Base+0x6c74>  // b.any
   25c94:	ldr	x8, [x23, #40]
   25c98:	mov	w9, #0x18                  	// #24
   25c9c:	mov	x0, x24
   25ca0:	madd	x8, x27, x9, x8
   25ca4:	ldr	x8, [x8, #16]
   25ca8:	ldr	x27, [x8]
   25cac:	mov	x1, x27
   25cb0:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   25cb4:	cbnz	x0, 25d50 <rpl_re_set_registers@@Base+0x6c9c>
   25cb8:	ldr	q0, [sp]
   25cbc:	mov	w0, #0x8                   	// #8
   25cc0:	str	q0, [sp, #32]
   25cc4:	bl	a660 <malloc@plt>
   25cc8:	str	x0, [sp, #48]
   25ccc:	cbz	x0, 25e10 <rpl_re_set_registers@@Base+0x6d5c>
   25cd0:	mov	w19, wzr
   25cd4:	str	x27, [x0]
   25cd8:	ldr	x2, [sp, #16]
   25cdc:	ldr	w3, [sp, #28]
   25ce0:	add	x1, sp, #0x20
   25ce4:	mov	x0, x23
   25ce8:	stur	w19, [x29, #-4]
   25cec:	bl	25ac4 <rpl_re_set_registers@@Base+0x6a10>
   25cf0:	mov	w27, w0
   25cf4:	add	x1, sp, #0x20
   25cf8:	mov	x0, x24
   25cfc:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   25d00:	ldr	x8, [sp, #48]
   25d04:	mov	w28, w0
   25d08:	mov	x0, x8
   25d0c:	bl	aaa0 <free@plt>
   25d10:	orr	w8, w27, w19
   25d14:	orr	w8, w8, w28
   25d18:	cbnz	w8, 25e1c <rpl_re_set_registers@@Base+0x6d68>
   25d1c:	mov	w8, #0x2                   	// #2
   25d20:	cbnz	w8, 25df8 <rpl_re_set_registers@@Base+0x6d44>
   25d24:	b	25e00 <rpl_re_set_registers@@Base+0x6d4c>
   25d28:	ldr	x8, [x22, #184]
   25d2c:	ldr	x9, [x23, #24]
   25d30:	ldr	x8, [x8, x19, lsl #3]
   25d34:	ldr	x27, [x9, x27, lsl #3]
   25d38:	cbz	x8, 25d5c <rpl_re_set_registers@@Base+0x6ca8>
   25d3c:	add	x28, x8, #0x8
   25d40:	mov	x0, x28
   25d44:	mov	x1, x27
   25d48:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   25d4c:	cbz	x0, 25d84 <rpl_re_set_registers@@Base+0x6cd0>
   25d50:	mov	w8, #0x4                   	// #4
   25d54:	cbnz	w8, 25df8 <rpl_re_set_registers@@Base+0x6d44>
   25d58:	b	25e00 <rpl_re_set_registers@@Base+0x6d4c>
   25d5c:	mov	w8, #0x1                   	// #1
   25d60:	dup	v0.2d, x8
   25d64:	mov	w0, #0x8                   	// #8
   25d68:	str	q0, [sp, #32]
   25d6c:	bl	a660 <malloc@plt>
   25d70:	str	x0, [sp, #48]
   25d74:	cbz	x0, 25e30 <rpl_re_set_registers@@Base+0x6d7c>
   25d78:	str	x27, [x0]
   25d7c:	stur	wzr, [x29, #-4]
   25d80:	b	25dac <rpl_re_set_registers@@Base+0x6cf8>
   25d84:	add	x0, sp, #0x20
   25d88:	mov	x1, x28
   25d8c:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   25d90:	mov	w28, w0
   25d94:	stur	w0, [x29, #-4]
   25d98:	add	x0, sp, #0x20
   25d9c:	mov	x1, x27
   25da0:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   25da4:	cbnz	w28, 25e3c <rpl_re_set_registers@@Base+0x6d88>
   25da8:	tbz	w0, #0, 25e3c <rpl_re_set_registers@@Base+0x6d88>
   25dac:	sub	x0, x29, #0x4
   25db0:	add	x2, sp, #0x20
   25db4:	mov	x1, x23
   25db8:	bl	25fa4 <rpl_re_set_registers@@Base+0x6ef0>
   25dbc:	ldr	x8, [x22, #184]
   25dc0:	str	x0, [x8, x19, lsl #3]
   25dc4:	ldr	x0, [sp, #48]
   25dc8:	bl	aaa0 <free@plt>
   25dcc:	ldr	x8, [x22, #184]
   25dd0:	ldur	w9, [x29, #-4]
   25dd4:	ldr	x8, [x8, x19, lsl #3]
   25dd8:	cmp	x8, #0x0
   25ddc:	cset	w10, eq  // eq = none
   25de0:	cmp	w9, #0x0
   25de4:	cset	w11, ne  // ne = any
   25de8:	tst	w10, w11
   25dec:	and	w8, w10, w11
   25df0:	csel	w26, w9, w26, ne  // ne = any
   25df4:	cbz	w8, 25e00 <rpl_re_set_registers@@Base+0x6d4c>
   25df8:	cmp	w8, #0x4
   25dfc:	b.ne	25e60 <rpl_re_set_registers@@Base+0x6dac>  // b.any
   25e00:	ldrb	w8, [x20, #16]
   25e04:	add	x20, x20, #0x28
   25e08:	cbnz	w8, 25c6c <rpl_re_set_registers@@Base+0x6bb8>
   25e0c:	b	25e70 <rpl_re_set_registers@@Base+0x6dbc>
   25e10:	stp	xzr, xzr, [sp, #32]
   25e14:	mov	w19, #0xc                   	// #12
   25e18:	b	25cd8 <rpl_re_set_registers@@Base+0x6c24>
   25e1c:	cmp	w27, #0x0
   25e20:	csel	w8, w28, w27, eq  // eq = none
   25e24:	cmp	w19, #0x0
   25e28:	csel	w26, w8, w19, eq  // eq = none
   25e2c:	b	25e50 <rpl_re_set_registers@@Base+0x6d9c>
   25e30:	mov	w26, #0xc                   	// #12
   25e34:	stp	xzr, xzr, [sp, #32]
   25e38:	b	25e50 <rpl_re_set_registers@@Base+0x6d9c>
   25e3c:	ldr	x0, [sp, #48]
   25e40:	bl	aaa0 <free@plt>
   25e44:	cmp	w28, #0x0
   25e48:	mov	w8, #0xc                   	// #12
   25e4c:	csel	w26, w8, w28, eq  // eq = none
   25e50:	mov	w8, #0x1                   	// #1
   25e54:	stur	w26, [x29, #-4]
   25e58:	cbnz	w8, 25df8 <rpl_re_set_registers@@Base+0x6d44>
   25e5c:	b	25e00 <rpl_re_set_registers@@Base+0x6d4c>
   25e60:	cmp	w8, #0x2
   25e64:	b.ne	25e74 <rpl_re_set_registers@@Base+0x6dc0>  // b.any
   25e68:	mov	w9, #0x28                  	// #40
   25e6c:	b	25c60 <rpl_re_set_registers@@Base+0x6bac>
   25e70:	mov	w26, wzr
   25e74:	mov	w0, w26
   25e78:	ldp	x20, x19, [sp, #144]
   25e7c:	ldp	x22, x21, [sp, #128]
   25e80:	ldp	x24, x23, [sp, #112]
   25e84:	ldp	x26, x25, [sp, #96]
   25e88:	ldp	x28, x27, [sp, #80]
   25e8c:	ldp	x29, x30, [sp, #64]
   25e90:	add	sp, sp, #0xa0
   25e94:	ret
   25e98:	stp	x29, x30, [sp, #-64]!
   25e9c:	stp	x24, x23, [sp, #16]
   25ea0:	stp	x20, x19, [sp, #48]
   25ea4:	mov	x20, x1
   25ea8:	mov	x23, x0
   25eac:	mov	x0, x1
   25eb0:	mov	x1, x2
   25eb4:	stp	x22, x21, [sp, #32]
   25eb8:	mov	x29, sp
   25ebc:	mov	w21, w4
   25ec0:	mov	x22, x3
   25ec4:	mov	x19, x2
   25ec8:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   25ecc:	cbz	x0, 25ee8 <rpl_re_set_registers@@Base+0x6e34>
   25ed0:	mov	w0, wzr
   25ed4:	ldp	x20, x19, [sp, #48]
   25ed8:	ldp	x22, x21, [sp, #32]
   25edc:	ldp	x24, x23, [sp, #16]
   25ee0:	ldp	x29, x30, [sp], #64
   25ee4:	ret
   25ee8:	mov	w24, #0x18                  	// #24
   25eec:	ldr	x8, [x23]
   25ef0:	add	x9, x8, x19, lsl #4
   25ef4:	ldrb	w9, [x9, #8]
   25ef8:	cmp	w9, w21
   25efc:	b.ne	25f10 <rpl_re_set_registers@@Base+0x6e5c>  // b.any
   25f00:	lsl	x9, x19, #4
   25f04:	ldr	x8, [x8, x9]
   25f08:	cmp	x8, x22
   25f0c:	b.eq	25f84 <rpl_re_set_registers@@Base+0x6ed0>  // b.none
   25f10:	mov	x0, x20
   25f14:	mov	x1, x19
   25f18:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   25f1c:	tbz	w0, #0, 25f9c <rpl_re_set_registers@@Base+0x6ee8>
   25f20:	ldr	x8, [x23, #40]
   25f24:	madd	x9, x19, x24, x8
   25f28:	ldr	x9, [x9, #8]
   25f2c:	cmp	x9, #0x2
   25f30:	b.eq	25f3c <rpl_re_set_registers@@Base+0x6e88>  // b.none
   25f34:	cbnz	x9, 25f64 <rpl_re_set_registers@@Base+0x6eb0>
   25f38:	b	25ed0 <rpl_re_set_registers@@Base+0x6e1c>
   25f3c:	madd	x8, x19, x24, x8
   25f40:	ldr	x8, [x8, #16]
   25f44:	mov	x0, x23
   25f48:	mov	x1, x20
   25f4c:	mov	x3, x22
   25f50:	ldr	x2, [x8, #8]
   25f54:	mov	w4, w21
   25f58:	bl	25e98 <rpl_re_set_registers@@Base+0x6de4>
   25f5c:	cbnz	w0, 25ed4 <rpl_re_set_registers@@Base+0x6e20>
   25f60:	ldr	x8, [x23, #40]
   25f64:	madd	x8, x19, x24, x8
   25f68:	ldr	x8, [x8, #16]
   25f6c:	mov	x0, x20
   25f70:	ldr	x19, [x8]
   25f74:	mov	x1, x19
   25f78:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   25f7c:	cbz	x0, 25eec <rpl_re_set_registers@@Base+0x6e38>
   25f80:	b	25ed0 <rpl_re_set_registers@@Base+0x6e1c>
   25f84:	cmp	w21, #0x9
   25f88:	b.ne	25ed0 <rpl_re_set_registers@@Base+0x6e1c>  // b.any
   25f8c:	mov	x0, x20
   25f90:	mov	x1, x19
   25f94:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   25f98:	tbnz	w0, #0, 25ed0 <rpl_re_set_registers@@Base+0x6e1c>
   25f9c:	mov	w0, #0xc                   	// #12
   25fa0:	b	25ed4 <rpl_re_set_registers@@Base+0x6e20>
   25fa4:	stp	x29, x30, [sp, #-64]!
   25fa8:	stp	x24, x23, [sp, #16]
   25fac:	stp	x22, x21, [sp, #32]
   25fb0:	stp	x20, x19, [sp, #48]
   25fb4:	ldr	x8, [x2, #8]
   25fb8:	mov	x19, x0
   25fbc:	mov	x29, sp
   25fc0:	cbz	x8, 26164 <rpl_re_set_registers@@Base+0x70b0>
   25fc4:	mov	x23, x2
   25fc8:	mov	x20, x1
   25fcc:	subs	x9, x8, #0x1
   25fd0:	b.lt	25ff4 <rpl_re_set_registers@@Base+0x6f40>  // b.tstop
   25fd4:	ldr	x10, [x23, #16]
   25fd8:	mov	x11, x8
   25fdc:	mov	x21, x8
   25fe0:	ldr	x12, [x10], #8
   25fe4:	subs	x11, x11, #0x1
   25fe8:	add	x21, x12, x21
   25fec:	b.ne	25fe0 <rpl_re_set_registers@@Base+0x6f2c>  // b.any
   25ff0:	b	25ff8 <rpl_re_set_registers@@Base+0x6f44>
   25ff4:	mov	x21, x8
   25ff8:	ldr	x10, [x20, #136]
   25ffc:	ldr	x11, [x20, #64]
   26000:	and	x12, x10, x21
   26004:	mov	w10, #0x18                  	// #24
   26008:	mul	x10, x12, x10
   2600c:	ldr	x10, [x11, x10]
   26010:	cmp	x10, #0x1
   26014:	b.lt	26080 <rpl_re_set_registers@@Base+0x6fcc>  // b.tstop
   26018:	mov	w13, #0x18                  	// #24
   2601c:	madd	x11, x12, x13, x11
   26020:	ldr	x11, [x11, #16]
   26024:	mov	x12, xzr
   26028:	cbz	x23, 26074 <rpl_re_set_registers@@Base+0x6fc0>
   2602c:	ldr	x22, [x11, x12, lsl #3]
   26030:	ldr	x13, [x22]
   26034:	cmp	x21, x13
   26038:	b.ne	26074 <rpl_re_set_registers@@Base+0x6fc0>  // b.any
   2603c:	ldr	x13, [x22, #16]
   26040:	cmp	x13, x8
   26044:	b.ne	26074 <rpl_re_set_registers@@Base+0x6fc0>  // b.any
   26048:	mov	x13, x9
   2604c:	add	x14, x13, #0x1
   26050:	cmp	x14, #0x1
   26054:	b.lt	2614c <rpl_re_set_registers@@Base+0x7098>  // b.tstop
   26058:	ldr	x14, [x22, #24]
   2605c:	ldr	x15, [x23, #16]
   26060:	ldr	x14, [x14, x13, lsl #3]
   26064:	ldr	x15, [x15, x13, lsl #3]
   26068:	sub	x13, x13, #0x1
   2606c:	cmp	x14, x15
   26070:	b.eq	2604c <rpl_re_set_registers@@Base+0x6f98>  // b.none
   26074:	add	x12, x12, #0x1
   26078:	cmp	x12, x10
   2607c:	b.lt	26028 <rpl_re_set_registers@@Base+0x6f74>  // b.tstop
   26080:	mov	w0, #0x70                  	// #112
   26084:	mov	w1, #0x1                   	// #1
   26088:	bl	a7f0 <calloc@plt>
   2608c:	cbz	x0, 26184 <rpl_re_set_registers@@Base+0x70d0>
   26090:	add	x24, x0, #0x8
   26094:	mov	x22, x0
   26098:	mov	x0, x24
   2609c:	mov	x1, x23
   260a0:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   260a4:	cbnz	w0, 26170 <rpl_re_set_registers@@Base+0x70bc>
   260a8:	str	x24, [x22, #80]
   260ac:	ldr	x8, [x23, #8]
   260b0:	cmp	x8, #0x1
   260b4:	b.lt	26138 <rpl_re_set_registers@@Base+0x7084>  // b.tstop
   260b8:	ldr	x9, [x20]
   260bc:	ldr	x10, [x23, #16]
   260c0:	ldr	x11, [x10]
   260c4:	add	x11, x9, x11, lsl #4
   260c8:	ldr	w12, [x11, #8]!
   260cc:	and	w13, w12, #0x3ffff
   260d0:	cmp	w13, #0x1
   260d4:	b.eq	2612c <rpl_re_set_registers@@Base+0x7078>  // b.none
   260d8:	ldrb	w14, [x22, #104]
   260dc:	lsr	w15, w12, #15
   260e0:	and	w13, w12, #0xff
   260e4:	and	w12, w15, #0x20
   260e8:	orr	w12, w14, w12
   260ec:	cmp	w13, #0xc
   260f0:	strb	w12, [x22, #104]
   260f4:	b.eq	26124 <rpl_re_set_registers@@Base+0x7070>  // b.none
   260f8:	cmp	w13, #0x4
   260fc:	b.eq	26110 <rpl_re_set_registers@@Base+0x705c>  // b.none
   26100:	cmp	w13, #0x2
   26104:	b.ne	26118 <rpl_re_set_registers@@Base+0x7064>  // b.any
   26108:	orr	w11, w12, #0x10
   2610c:	b	26128 <rpl_re_set_registers@@Base+0x7074>
   26110:	orr	w11, w12, #0x40
   26114:	b	26128 <rpl_re_set_registers@@Base+0x7074>
   26118:	ldr	w11, [x11]
   2611c:	tst	w11, #0x3ff00
   26120:	b.eq	2612c <rpl_re_set_registers@@Base+0x7078>  // b.none
   26124:	orr	w11, w12, #0x80
   26128:	strb	w11, [x22, #104]
   2612c:	subs	x8, x8, #0x1
   26130:	add	x10, x10, #0x8
   26134:	b.ne	260c0 <rpl_re_set_registers@@Base+0x700c>  // b.any
   26138:	mov	x0, x20
   2613c:	mov	x1, x22
   26140:	mov	x2, x21
   26144:	bl	23964 <rpl_re_set_registers@@Base+0x48b0>
   26148:	cbnz	w0, 2617c <rpl_re_set_registers@@Base+0x70c8>
   2614c:	mov	x0, x22
   26150:	ldp	x20, x19, [sp, #48]
   26154:	ldp	x22, x21, [sp, #32]
   26158:	ldp	x24, x23, [sp, #16]
   2615c:	ldp	x29, x30, [sp], #64
   26160:	ret
   26164:	mov	x22, xzr
   26168:	str	wzr, [x19]
   2616c:	b	2614c <rpl_re_set_registers@@Base+0x7098>
   26170:	mov	x0, x22
   26174:	bl	aaa0 <free@plt>
   26178:	b	26184 <rpl_re_set_registers@@Base+0x70d0>
   2617c:	mov	x0, x22
   26180:	bl	1f114 <rpl_re_set_registers@@Base+0x60>
   26184:	mov	x22, xzr
   26188:	mov	w8, #0xc                   	// #12
   2618c:	str	w8, [x19]
   26190:	b	2614c <rpl_re_set_registers@@Base+0x7098>
   26194:	stp	x29, x30, [sp, #-48]!
   26198:	stp	x22, x21, [sp, #16]
   2619c:	stp	x20, x19, [sp, #32]
   261a0:	ldr	x8, [x0]
   261a4:	mov	x29, sp
   261a8:	add	x9, x8, x1, lsl #4
   261ac:	ldrb	w10, [x9, #8]
   261b0:	cmp	w10, #0x7
   261b4:	b.eq	26380 <rpl_re_set_registers@@Base+0x72cc>  // b.none
   261b8:	ldr	w9, [x2, #144]
   261bc:	cmp	w9, #0x1
   261c0:	b.eq	26204 <rpl_re_set_registers@@Base+0x7150>  // b.none
   261c4:	ldr	x11, [x2, #48]
   261c8:	add	x12, x3, #0x1
   261cc:	cmp	x12, x11
   261d0:	b.ge	26204 <rpl_re_set_registers@@Base+0x7150>  // b.tcont
   261d4:	ldr	x13, [x2, #16]
   261d8:	sub	w20, w11, w3
   261dc:	sub	x12, x11, x3
   261e0:	mov	w11, #0x1                   	// #1
   261e4:	add	x13, x13, x3, lsl #2
   261e8:	ldr	w14, [x13, x11, lsl #2]
   261ec:	cmn	w14, #0x1
   261f0:	b.ne	26290 <rpl_re_set_registers@@Base+0x71dc>  // b.any
   261f4:	add	x11, x11, #0x1
   261f8:	cmp	x12, x11
   261fc:	b.ne	261e8 <rpl_re_set_registers@@Base+0x7134>  // b.any
   26200:	b	26208 <rpl_re_set_registers@@Base+0x7154>
   26204:	mov	w20, #0x1                   	// #1
   26208:	cmp	w10, #0x5
   2620c:	b.ne	26248 <rpl_re_set_registers@@Base+0x7194>  // b.any
   26210:	cmp	w20, #0x2
   26214:	b.lt	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.tstop
   26218:	ldr	x8, [x0, #216]
   2621c:	tbnz	w8, #6, 26230 <rpl_re_set_registers@@Base+0x717c>
   26220:	ldr	x9, [x2, #8]
   26224:	ldrb	w9, [x9, x3]
   26228:	cmp	w9, #0xa
   2622c:	b.eq	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.none
   26230:	tbz	w8, #7, 26240 <rpl_re_set_registers@@Base+0x718c>
   26234:	ldr	x8, [x2, #8]
   26238:	ldrb	w8, [x8, x3]
   2623c:	cbz	w8, 26358 <rpl_re_set_registers@@Base+0x72a4>
   26240:	mov	w0, w20
   26244:	b	2635c <rpl_re_set_registers@@Base+0x72a8>
   26248:	cmp	w10, #0x6
   2624c:	mov	w0, wzr
   26250:	b.ne	2635c <rpl_re_set_registers@@Base+0x72a8>  // b.any
   26254:	cmp	w20, #0x2
   26258:	b.lt	2635c <rpl_re_set_registers@@Base+0x72a8>  // b.tstop
   2625c:	lsl	x10, x1, #4
   26260:	ldr	x21, [x8, x10]
   26264:	ldr	x8, [x21, #64]
   26268:	cbnz	x8, 2627c <rpl_re_set_registers@@Base+0x71c8>
   2626c:	ldr	x10, [x21, #72]
   26270:	cbnz	x10, 2627c <rpl_re_set_registers@@Base+0x71c8>
   26274:	ldr	x10, [x21, #40]
   26278:	cbz	x10, 26378 <rpl_re_set_registers@@Base+0x72c4>
   2627c:	cmp	w9, #0x1
   26280:	b.ne	26298 <rpl_re_set_registers@@Base+0x71e4>  // b.any
   26284:	ldr	x9, [x2, #8]
   26288:	ldrb	w19, [x9, x3]
   2628c:	b	262a0 <rpl_re_set_registers@@Base+0x71ec>
   26290:	mov	w20, w11
   26294:	b	26208 <rpl_re_set_registers@@Base+0x7154>
   26298:	ldr	x9, [x2, #16]
   2629c:	ldr	w19, [x9, x3, lsl #2]
   262a0:	ldr	x9, [x21, #40]
   262a4:	cmp	x9, #0x1
   262a8:	b.lt	262cc <rpl_re_set_registers@@Base+0x7218>  // b.tstop
   262ac:	ldr	x10, [x21]
   262b0:	mov	x11, xzr
   262b4:	ldr	w12, [x10, x11, lsl #2]
   262b8:	cmp	w19, w12
   262bc:	b.eq	26344 <rpl_re_set_registers@@Base+0x7290>  // b.none
   262c0:	add	x11, x11, #0x1
   262c4:	cmp	x11, x9
   262c8:	b.lt	262b4 <rpl_re_set_registers@@Base+0x7200>  // b.tstop
   262cc:	ldr	x9, [x21, #72]
   262d0:	cmp	x9, #0x1
   262d4:	b.lt	26304 <rpl_re_set_registers@@Base+0x7250>  // b.tstop
   262d8:	mov	x22, xzr
   262dc:	ldr	x8, [x21, #24]
   262e0:	mov	w0, w19
   262e4:	ldr	x1, [x8, x22, lsl #3]
   262e8:	bl	a650 <iswctype@plt>
   262ec:	cbnz	w0, 26344 <rpl_re_set_registers@@Base+0x7290>
   262f0:	ldr	x8, [x21, #72]
   262f4:	add	x22, x22, #0x1
   262f8:	cmp	x22, x8
   262fc:	b.lt	262dc <rpl_re_set_registers@@Base+0x7228>  // b.tstop
   26300:	ldr	x8, [x21, #64]
   26304:	cmp	x8, #0x1
   26308:	b.lt	2633c <rpl_re_set_registers@@Base+0x7288>  // b.tstop
   2630c:	ldr	x9, [x21, #8]
   26310:	mov	x10, xzr
   26314:	ldr	w11, [x9, x10, lsl #2]
   26318:	cmp	w11, w19
   2631c:	b.hi	26330 <rpl_re_set_registers@@Base+0x727c>  // b.pmore
   26320:	ldr	x11, [x21, #16]
   26324:	ldr	w11, [x11, x10, lsl #2]
   26328:	cmp	w19, w11
   2632c:	b.ls	26344 <rpl_re_set_registers@@Base+0x7290>  // b.plast
   26330:	add	x10, x10, #0x1
   26334:	cmp	x10, x8
   26338:	b.lt	26314 <rpl_re_set_registers@@Base+0x7260>  // b.tstop
   2633c:	mov	w0, wzr
   26340:	b	26348 <rpl_re_set_registers@@Base+0x7294>
   26344:	mov	w0, w20
   26348:	ldrb	w8, [x21, #32]
   2634c:	tbz	w8, #0, 2635c <rpl_re_set_registers@@Base+0x72a8>
   26350:	cmp	w0, #0x0
   26354:	b.le	2636c <rpl_re_set_registers@@Base+0x72b8>
   26358:	mov	w0, wzr
   2635c:	ldp	x20, x19, [sp, #32]
   26360:	ldp	x22, x21, [sp, #16]
   26364:	ldp	x29, x30, [sp], #48
   26368:	ret
   2636c:	cmp	w20, #0x1
   26370:	csinc	w0, w20, wzr, gt
   26374:	b	2635c <rpl_re_set_registers@@Base+0x72a8>
   26378:	mov	w19, wzr
   2637c:	b	262a0 <rpl_re_set_registers@@Base+0x71ec>
   26380:	ldr	x8, [x2, #8]
   26384:	ldrb	w10, [x8, x3]
   26388:	cmp	w10, #0xc2
   2638c:	b.cc	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.lo, b.ul, b.last
   26390:	ldr	x9, [x2, #88]
   26394:	add	x11, x3, #0x2
   26398:	cmp	x11, x9
   2639c:	b.gt	26358 <rpl_re_set_registers@@Base+0x72a4>
   263a0:	add	x11, x3, x8
   263a4:	ldrb	w11, [x11, #1]
   263a8:	cmp	w10, #0xdf
   263ac:	b.hi	263cc <rpl_re_set_registers@@Base+0x7318>  // b.pmore
   263b0:	sxtb	w8, w11
   263b4:	cmp	w11, #0xbf
   263b8:	mov	w9, #0xffffffff            	// #-1
   263bc:	ccmp	w8, w9, #0x0, ls  // ls = plast
   263c0:	mov	w8, #0x2                   	// #2
   263c4:	csel	w0, wzr, w8, gt
   263c8:	b	2635c <rpl_re_set_registers@@Base+0x72a8>
   263cc:	cmp	w10, #0xef
   263d0:	b.hi	263ec <rpl_re_set_registers@@Base+0x7338>  // b.pmore
   263d4:	cmp	w10, #0xe0
   263d8:	mov	w10, #0x3                   	// #3
   263dc:	b.ne	26448 <rpl_re_set_registers@@Base+0x7394>  // b.any
   263e0:	cmp	w11, #0xa0
   263e4:	b.cc	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.lo, b.ul, b.last
   263e8:	b	26448 <rpl_re_set_registers@@Base+0x7394>
   263ec:	cmp	w10, #0xf7
   263f0:	b.hi	2640c <rpl_re_set_registers@@Base+0x7358>  // b.pmore
   263f4:	cmp	w10, #0xf0
   263f8:	mov	w10, #0x4                   	// #4
   263fc:	b.ne	26448 <rpl_re_set_registers@@Base+0x7394>  // b.any
   26400:	cmp	w11, #0x90
   26404:	b.cc	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.lo, b.ul, b.last
   26408:	b	26448 <rpl_re_set_registers@@Base+0x7394>
   2640c:	cmp	w10, #0xfb
   26410:	b.hi	2642c <rpl_re_set_registers@@Base+0x7378>  // b.pmore
   26414:	cmp	w10, #0xf8
   26418:	mov	w10, #0x5                   	// #5
   2641c:	b.ne	26448 <rpl_re_set_registers@@Base+0x7394>  // b.any
   26420:	cmp	w11, #0x88
   26424:	b.cc	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.lo, b.ul, b.last
   26428:	b	26448 <rpl_re_set_registers@@Base+0x7394>
   2642c:	cmp	w10, #0xfd
   26430:	b.hi	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.pmore
   26434:	cmp	w10, #0xfc
   26438:	mov	w10, #0x6                   	// #6
   2643c:	b.ne	26448 <rpl_re_set_registers@@Base+0x7394>  // b.any
   26440:	cmp	w11, #0x84
   26444:	b.cc	26358 <rpl_re_set_registers@@Base+0x72a4>  // b.lo, b.ul, b.last
   26448:	add	x11, x10, x3
   2644c:	cmp	x11, x9
   26450:	b.gt	26358 <rpl_re_set_registers@@Base+0x72a4>
   26454:	add	x8, x3, x8
   26458:	sub	x9, x10, #0x1
   2645c:	add	x8, x8, #0x1
   26460:	ldrb	w11, [x8]
   26464:	mov	w0, wzr
   26468:	sxtb	w12, w11
   2646c:	tbz	w12, #31, 2635c <rpl_re_set_registers@@Base+0x72a8>
   26470:	cmp	w11, #0xbf
   26474:	b.hi	2635c <rpl_re_set_registers@@Base+0x72a8>  // b.pmore
   26478:	subs	x9, x9, #0x1
   2647c:	add	x8, x8, #0x1
   26480:	b.ne	26460 <rpl_re_set_registers@@Base+0x73ac>  // b.any
   26484:	mov	w0, w10
   26488:	b	2635c <rpl_re_set_registers@@Base+0x72a8>
   2648c:	stp	x29, x30, [sp, #-32]!
   26490:	str	x19, [sp, #16]
   26494:	ldr	w19, [x1, #8]
   26498:	mov	x29, sp
   2649c:	and	w8, w19, #0xff
   264a0:	sub	w10, w8, #0x1
   264a4:	cmp	w10, #0x6
   264a8:	mov	w8, wzr
   264ac:	b.hi	2656c <rpl_re_set_registers@@Base+0x74b8>  // b.pmore
   264b0:	ldr	x9, [x0, #8]
   264b4:	adrp	x11, 2a000 <vasnprintf@@Base+0x2944>
   264b8:	add	x11, x11, #0xc78
   264bc:	ldrb	w9, [x9, x2]
   264c0:	adr	x12, 264d0 <rpl_re_set_registers@@Base+0x741c>
   264c4:	ldrb	w13, [x11, x10]
   264c8:	add	x12, x12, x13, lsl #2
   264cc:	br	x12
   264d0:	ldrb	w8, [x1]
   264d4:	cmp	w8, w9
   264d8:	b.eq	2652c <rpl_re_set_registers@@Base+0x7478>  // b.none
   264dc:	b	26560 <rpl_re_set_registers@@Base+0x74ac>
   264e0:	ldr	x8, [x1]
   264e4:	lsr	x10, x9, #3
   264e8:	and	x10, x10, #0x18
   264ec:	ldr	x8, [x8, x10]
   264f0:	lsr	x8, x8, x9
   264f4:	tbnz	w8, #0, 2652c <rpl_re_set_registers@@Base+0x7478>
   264f8:	b	26560 <rpl_re_set_registers@@Base+0x74ac>
   264fc:	sxtb	w8, w9
   26500:	tbnz	w8, #31, 26560 <rpl_re_set_registers@@Base+0x74ac>
   26504:	cbz	w9, 26520 <rpl_re_set_registers@@Base+0x746c>
   26508:	cmp	w9, #0xa
   2650c:	b.ne	2652c <rpl_re_set_registers@@Base+0x7478>  // b.any
   26510:	ldr	x8, [x0, #152]
   26514:	ldrb	w8, [x8, #216]
   26518:	tbnz	w8, #6, 2652c <rpl_re_set_registers@@Base+0x7478>
   2651c:	b	26560 <rpl_re_set_registers@@Base+0x74ac>
   26520:	ldr	x8, [x0, #152]
   26524:	ldrb	w8, [x8, #216]
   26528:	tbnz	w8, #7, 26560 <rpl_re_set_registers@@Base+0x74ac>
   2652c:	tst	w19, #0x3ff00
   26530:	b.eq	26568 <rpl_re_set_registers@@Base+0x74b4>  // b.none
   26534:	ldr	w8, [x0, #160]
   26538:	mov	x1, x2
   2653c:	mov	w2, w8
   26540:	bl	247c0 <rpl_re_set_registers@@Base+0x570c>
   26544:	and	w8, w0, #0x1
   26548:	tbz	w19, #10, 26550 <rpl_re_set_registers@@Base+0x749c>
   2654c:	cbz	w8, 2656c <rpl_re_set_registers@@Base+0x74b8>
   26550:	tbz	w19, #11, 26558 <rpl_re_set_registers@@Base+0x74a4>
   26554:	cbnz	w8, 26560 <rpl_re_set_registers@@Base+0x74ac>
   26558:	tbz	w19, #13, 2657c <rpl_re_set_registers@@Base+0x74c8>
   2655c:	tbnz	w0, #1, 2657c <rpl_re_set_registers@@Base+0x74c8>
   26560:	mov	w8, wzr
   26564:	b	2656c <rpl_re_set_registers@@Base+0x74b8>
   26568:	mov	w8, #0x1                   	// #1
   2656c:	mov	w0, w8
   26570:	ldr	x19, [sp, #16]
   26574:	ldp	x29, x30, [sp], #32
   26578:	ret
   2657c:	tst	w19, #0x8000
   26580:	cset	w8, eq  // eq = none
   26584:	and	w9, w0, #0x8
   26588:	orr	w0, w8, w9, lsr #3
   2658c:	b	26570 <rpl_re_set_registers@@Base+0x74bc>
   26590:	sub	sp, sp, #0xa0
   26594:	stp	x29, x30, [sp, #64]
   26598:	stp	x28, x27, [sp, #80]
   2659c:	stp	x26, x25, [sp, #96]
   265a0:	stp	x24, x23, [sp, #112]
   265a4:	stp	x22, x21, [sp, #128]
   265a8:	stp	x20, x19, [sp, #144]
   265ac:	ldp	x22, x21, [x1, #16]
   265b0:	mov	w8, #0x1                   	// #1
   265b4:	mov	x20, x0
   265b8:	dup	v0.2d, x8
   265bc:	mov	w0, #0x8                   	// #8
   265c0:	add	x29, sp, #0x40
   265c4:	mov	x19, x1
   265c8:	str	q0, [sp, #32]
   265cc:	bl	a660 <malloc@plt>
   265d0:	str	x0, [sp, #48]
   265d4:	cbz	x0, 267d0 <rpl_re_set_registers@@Base+0x771c>
   265d8:	str	x22, [x0]
   265dc:	add	x3, sp, #0x20
   265e0:	mov	x0, x20
   265e4:	mov	x1, x19
   265e8:	mov	x2, x21
   265ec:	bl	26884 <rpl_re_set_registers@@Base+0x77d0>
   265f0:	cbnz	w0, 26774 <rpl_re_set_registers@@Base+0x76c0>
   265f4:	mov	w10, wzr
   265f8:	add	x8, x19, #0x20
   265fc:	str	x8, [sp, #16]
   26600:	mov	x11, x21
   26604:	subs	x21, x21, #0x1
   26608:	b.lt	26784 <rpl_re_set_registers@@Base+0x76d0>  // b.tstop
   2660c:	ldr	x0, [x19]
   26610:	ldr	w9, [x20, #224]
   26614:	ldr	x8, [x0, x11, lsl #3]
   26618:	cmp	x8, #0x0
   2661c:	csinc	w10, wzr, w10, ne  // ne = any
   26620:	cmp	w10, w9
   26624:	b.gt	267b4 <rpl_re_set_registers@@Base+0x7700>
   26628:	str	xzr, [sp, #40]
   2662c:	ldr	x8, [x20, #184]
   26630:	str	x11, [sp, #24]
   26634:	str	w10, [sp, #12]
   26638:	ldr	x28, [x8, x21, lsl #3]
   2663c:	cbz	x28, 26758 <rpl_re_set_registers@@Base+0x76a4>
   26640:	ldr	x8, [x28, #40]
   26644:	cmp	x8, #0x1
   26648:	b.lt	26758 <rpl_re_set_registers@@Base+0x76a4>  // b.tstop
   2664c:	ldr	x22, [x20, #152]
   26650:	mov	x26, xzr
   26654:	ldr	x8, [x28, #48]
   26658:	ldr	x23, [x8, x26, lsl #3]
   2665c:	ldr	x8, [x22]
   26660:	add	x8, x8, x23, lsl #4
   26664:	ldrb	w8, [x8, #10]
   26668:	tbnz	w8, #4, 266b0 <rpl_re_set_registers@@Base+0x75fc>
   2666c:	ldr	x8, [x22]
   26670:	mov	x0, x20
   26674:	mov	x2, x21
   26678:	add	x1, x8, x23, lsl #4
   2667c:	bl	2648c <rpl_re_set_registers@@Base+0x73d8>
   26680:	tbz	w0, #0, 26748 <rpl_re_set_registers@@Base+0x7694>
   26684:	ldr	x8, [x19]
   26688:	ldr	x9, [sp, #24]
   2668c:	ldr	x8, [x8, x9, lsl #3]
   26690:	cbz	x8, 26748 <rpl_re_set_registers@@Base+0x7694>
   26694:	ldr	x9, [x22, #24]
   26698:	add	x0, x8, #0x8
   2669c:	ldr	x1, [x9, x23, lsl #3]
   266a0:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   266a4:	cbz	x0, 26748 <rpl_re_set_registers@@Base+0x7694>
   266a8:	mov	w24, #0x1                   	// #1
   266ac:	b	2670c <rpl_re_set_registers@@Base+0x7658>
   266b0:	ldr	x25, [x20, #152]
   266b4:	ldr	x27, [x19, #24]
   266b8:	mov	x1, x23
   266bc:	mov	x2, x20
   266c0:	mov	x0, x25
   266c4:	mov	x3, x21
   266c8:	bl	26194 <rpl_re_set_registers@@Base+0x70e0>
   266cc:	mov	w24, w0
   266d0:	cmp	w0, #0x1
   266d4:	b.lt	26708 <rpl_re_set_registers@@Base+0x7654>  // b.tstop
   266d8:	add	x8, x21, w24, uxtw
   266dc:	cmp	x8, x27
   266e0:	b.gt	2670c <rpl_re_set_registers@@Base+0x7658>
   266e4:	ldr	x9, [x19]
   266e8:	ldr	x8, [x9, x8, lsl #3]
   266ec:	cbz	x8, 2666c <rpl_re_set_registers@@Base+0x75b8>
   266f0:	ldr	x9, [x25, #24]
   266f4:	add	x0, x8, #0x8
   266f8:	ldr	x1, [x9, x23, lsl #3]
   266fc:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   26700:	cbnz	x0, 2670c <rpl_re_set_registers@@Base+0x7658>
   26704:	b	2666c <rpl_re_set_registers@@Base+0x75b8>
   26708:	cbz	w24, 2666c <rpl_re_set_registers@@Base+0x75b8>
   2670c:	ldr	x8, [x19, #40]
   26710:	cbz	x8, 26738 <rpl_re_set_registers@@Base+0x7684>
   26714:	ldr	x8, [x22, #24]
   26718:	ldr	x1, [sp, #16]
   2671c:	add	x3, x21, w24, sxtw
   26720:	mov	x0, x20
   26724:	ldr	x2, [x8, x23, lsl #3]
   26728:	mov	x4, x23
   2672c:	mov	x5, x21
   26730:	bl	27238 <rpl_re_set_registers@@Base+0x8184>
   26734:	tbnz	w0, #0, 26748 <rpl_re_set_registers@@Base+0x7694>
   26738:	add	x0, sp, #0x20
   2673c:	mov	x1, x23
   26740:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   26744:	tbz	w0, #0, 2677c <rpl_re_set_registers@@Base+0x76c8>
   26748:	ldr	x8, [x28, #40]
   2674c:	add	x26, x26, #0x1
   26750:	cmp	x26, x8
   26754:	b.lt	26654 <rpl_re_set_registers@@Base+0x75a0>  // b.tstop
   26758:	add	x3, sp, #0x20
   2675c:	mov	x0, x20
   26760:	mov	x1, x19
   26764:	mov	x2, x21
   26768:	bl	26884 <rpl_re_set_registers@@Base+0x77d0>
   2676c:	ldr	w10, [sp, #12]
   26770:	cbz	w0, 26600 <rpl_re_set_registers@@Base+0x754c>
   26774:	mov	w23, w0
   26778:	b	26788 <rpl_re_set_registers@@Base+0x76d4>
   2677c:	mov	w23, #0xc                   	// #12
   26780:	b	26788 <rpl_re_set_registers@@Base+0x76d4>
   26784:	mov	w23, wzr
   26788:	ldr	x0, [sp, #48]
   2678c:	bl	aaa0 <free@plt>
   26790:	mov	w0, w23
   26794:	ldp	x20, x19, [sp, #144]
   26798:	ldp	x22, x21, [sp, #128]
   2679c:	ldp	x24, x23, [sp, #112]
   267a0:	ldp	x26, x25, [sp, #96]
   267a4:	ldp	x28, x27, [sp, #80]
   267a8:	ldp	x29, x30, [sp, #64]
   267ac:	add	sp, sp, #0xa0
   267b0:	ret
   267b4:	lsl	x2, x11, #3
   267b8:	mov	w1, wzr
   267bc:	bl	a770 <memset@plt>
   267c0:	ldr	x0, [sp, #48]
   267c4:	bl	aaa0 <free@plt>
   267c8:	mov	w23, wzr
   267cc:	b	26790 <rpl_re_set_registers@@Base+0x76dc>
   267d0:	stp	xzr, xzr, [sp, #32]
   267d4:	mov	w23, #0xc                   	// #12
   267d8:	b	26790 <rpl_re_set_registers@@Base+0x76dc>
   267dc:	sub	sp, sp, #0x50
   267e0:	cmp	x3, #0x1
   267e4:	stp	x29, x30, [sp, #32]
   267e8:	stp	x22, x21, [sp, #48]
   267ec:	stp	x20, x19, [sp, #64]
   267f0:	add	x29, sp, #0x20
   267f4:	b.lt	2686c <rpl_re_set_registers@@Base+0x77b8>  // b.tstop
   267f8:	mov	x19, x3
   267fc:	mov	x20, x2
   26800:	mov	x21, x1
   26804:	mov	x22, x0
   26808:	ldr	x9, [x21]
   2680c:	ldr	x8, [x20]
   26810:	cbz	x9, 26858 <rpl_re_set_registers@@Base+0x77a4>
   26814:	cbz	x8, 2685c <rpl_re_set_registers@@Base+0x77a8>
   26818:	add	x1, x9, #0x8
   2681c:	add	x2, x8, #0x8
   26820:	mov	x0, sp
   26824:	bl	251d4 <rpl_re_set_registers@@Base+0x6120>
   26828:	stur	w0, [x29, #-4]
   2682c:	cbnz	w0, 26870 <rpl_re_set_registers@@Base+0x77bc>
   26830:	sub	x0, x29, #0x4
   26834:	mov	x2, sp
   26838:	mov	x1, x22
   2683c:	bl	25fa4 <rpl_re_set_registers@@Base+0x6ef0>
   26840:	str	x0, [x21]
   26844:	ldr	x0, [sp, #16]
   26848:	bl	aaa0 <free@plt>
   2684c:	ldur	w0, [x29, #-4]
   26850:	cbz	w0, 2685c <rpl_re_set_registers@@Base+0x77a8>
   26854:	b	26870 <rpl_re_set_registers@@Base+0x77bc>
   26858:	str	x8, [x21]
   2685c:	subs	x19, x19, #0x1
   26860:	add	x20, x20, #0x8
   26864:	add	x21, x21, #0x8
   26868:	b.ne	26808 <rpl_re_set_registers@@Base+0x7754>  // b.any
   2686c:	mov	w0, wzr
   26870:	ldp	x20, x19, [sp, #64]
   26874:	ldp	x22, x21, [sp, #48]
   26878:	ldp	x29, x30, [sp, #32]
   2687c:	add	sp, sp, #0x50
   26880:	ret
   26884:	sub	sp, sp, #0xe0
   26888:	stp	x29, x30, [sp, #128]
   2688c:	stp	x28, x27, [sp, #144]
   26890:	stp	x26, x25, [sp, #160]
   26894:	stp	x24, x23, [sp, #176]
   26898:	stp	x22, x21, [sp, #192]
   2689c:	stp	x20, x19, [sp, #208]
   268a0:	ldr	x24, [x0, #152]
   268a4:	str	wzr, [sp, #60]
   268a8:	ldr	x8, [x0, #184]
   268ac:	mov	x19, x2
   268b0:	mov	x20, x1
   268b4:	add	x29, sp, #0x80
   268b8:	ldr	x27, [x8, x2, lsl #3]
   268bc:	ldr	x8, [x3, #8]
   268c0:	add	x9, x27, #0x8
   268c4:	cmp	x27, #0x0
   268c8:	csel	x9, xzr, x9, eq  // eq = none
   268cc:	stp	x9, x0, [sp, #40]
   268d0:	cbz	x8, 26b8c <rpl_re_set_registers@@Base+0x7ad8>
   268d4:	mov	x23, x3
   268d8:	cbz	x27, 26ba0 <rpl_re_set_registers@@Base+0x7aec>
   268dc:	add	x0, sp, #0x40
   268e0:	mov	x1, x24
   268e4:	mov	x2, x23
   268e8:	str	wzr, [sp, #64]
   268ec:	bl	25fa4 <rpl_re_set_registers@@Base+0x6ef0>
   268f0:	ldr	w22, [sp, #64]
   268f4:	cbnz	w22, 26e48 <rpl_re_set_registers@@Base+0x7d94>
   268f8:	mov	x25, x0
   268fc:	ldr	x8, [x25, #56]!
   26900:	mov	x26, x0
   26904:	cbnz	x8, 26974 <rpl_re_set_registers@@Base+0x78c0>
   26908:	ldr	x8, [x23, #8]
   2690c:	lsl	x0, x8, #3
   26910:	stp	x8, xzr, [x26, #56]
   26914:	bl	a660 <malloc@plt>
   26918:	cmp	x0, #0x0
   2691c:	mov	w22, #0xc                   	// #12
   26920:	csel	w8, w22, wzr, eq  // eq = none
   26924:	str	x0, [x26, #72]
   26928:	str	w8, [sp, #64]
   2692c:	cbz	x0, 26e48 <rpl_re_set_registers@@Base+0x7d94>
   26930:	ldr	x8, [x23, #8]
   26934:	cmp	x8, #0x1
   26938:	b.lt	26974 <rpl_re_set_registers@@Base+0x78c0>  // b.tstop
   2693c:	mov	x21, xzr
   26940:	mov	w22, #0x18                  	// #24
   26944:	ldr	x8, [x23, #16]
   26948:	ldr	x9, [x24, #56]
   2694c:	mov	x0, x25
   26950:	ldr	x8, [x8, x21, lsl #3]
   26954:	madd	x1, x8, x22, x9
   26958:	bl	2324c <rpl_re_set_registers@@Base+0x4198>
   2695c:	cbnz	w0, 26e58 <rpl_re_set_registers@@Base+0x7da4>
   26960:	ldr	x8, [x23, #8]
   26964:	add	x21, x21, #0x1
   26968:	cmp	x21, x8
   2696c:	b.lt	26944 <rpl_re_set_registers@@Base+0x7890>  // b.tstop
   26970:	str	wzr, [sp, #64]
   26974:	ldr	x1, [sp, #40]
   26978:	mov	x0, x23
   2697c:	mov	x2, x25
   26980:	bl	26e7c <rpl_re_set_registers@@Base+0x7dc8>
   26984:	str	w0, [sp, #60]
   26988:	cbnz	w0, 26e74 <rpl_re_set_registers@@Base+0x7dc0>
   2698c:	ldr	x8, [x20, #40]
   26990:	cbz	x8, 26ba0 <rpl_re_set_registers@@Base+0x7aec>
   26994:	cmp	x8, #0x1
   26998:	str	x27, [sp, #24]
   2699c:	b.lt	26b98 <rpl_re_set_registers@@Base+0x7ae4>  // b.tstop
   269a0:	ldr	x8, [sp, #48]
   269a4:	mov	x26, xzr
   269a8:	mov	w13, #0x18                  	// #24
   269ac:	ldr	x28, [x8, #216]
   269b0:	ldr	x8, [x20, #48]
   269b4:	mov	w9, #0x28                  	// #40
   269b8:	ldr	x8, [x8, x26, lsl #3]
   269bc:	madd	x9, x8, x9, x28
   269c0:	ldr	x9, [x9, #16]
   269c4:	cmp	x9, x19
   269c8:	b.ge	269e0 <rpl_re_set_registers@@Base+0x792c>  // b.tcont
   269cc:	mov	w9, #0x28                  	// #40
   269d0:	madd	x9, x8, x9, x28
   269d4:	ldr	x9, [x9, #8]
   269d8:	cmp	x9, x19
   269dc:	b.ge	269f4 <rpl_re_set_registers@@Base+0x7940>  // b.tcont
   269e0:	ldr	x8, [x20, #40]
   269e4:	add	x26, x26, #0x1
   269e8:	cmp	x26, x8
   269ec:	b.lt	269b0 <rpl_re_set_registers@@Base+0x78fc>  // b.tstop
   269f0:	b	26b98 <rpl_re_set_registers@@Base+0x7ae4>
   269f4:	mov	w9, #0x28                  	// #40
   269f8:	madd	x8, x8, x9, x28
   269fc:	ldr	x10, [x8]
   26a00:	ldr	x9, [x24]
   26a04:	ldr	x11, [x8, #24]
   26a08:	lsl	x8, x10, #4
   26a0c:	ldr	x27, [x9, x8]
   26a10:	ldr	x8, [x23, #8]
   26a14:	cmp	x11, x19
   26a18:	b.ne	26b20 <rpl_re_set_registers@@Base+0x7a6c>  // b.any
   26a1c:	cmp	x8, #0x1
   26a20:	b.lt	269e0 <rpl_re_set_registers@@Base+0x792c>  // b.tstop
   26a24:	ldr	x10, [x23, #16]
   26a28:	mov	x25, #0xffffffffffffffff    	// #-1
   26a2c:	mov	x1, #0xffffffffffffffff    	// #-1
   26a30:	ldr	x11, [x10]
   26a34:	add	x12, x9, x11, lsl #4
   26a38:	ldrb	w12, [x12, #8]
   26a3c:	cmp	w12, #0x9
   26a40:	b.eq	26a60 <rpl_re_set_registers@@Base+0x79ac>  // b.none
   26a44:	cmp	w12, #0x8
   26a48:	b.ne	26a70 <rpl_re_set_registers@@Base+0x79bc>  // b.any
   26a4c:	lsl	x12, x11, #4
   26a50:	ldr	x12, [x9, x12]
   26a54:	cmp	x27, x12
   26a58:	csel	x1, x11, x1, eq  // eq = none
   26a5c:	b	26a70 <rpl_re_set_registers@@Base+0x79bc>
   26a60:	lsl	x12, x11, #4
   26a64:	ldr	x12, [x9, x12]
   26a68:	cmp	x27, x12
   26a6c:	csel	x25, x11, x25, eq  // eq = none
   26a70:	subs	x8, x8, #0x1
   26a74:	add	x10, x10, #0x8
   26a78:	b.ne	26a30 <rpl_re_set_registers@@Base+0x797c>  // b.any
   26a7c:	tbnz	x1, #63, 26a98 <rpl_re_set_registers@@Base+0x79e4>
   26a80:	ldr	x3, [sp, #40]
   26a84:	mov	x0, x24
   26a88:	mov	x2, x23
   26a8c:	bl	27044 <rpl_re_set_registers@@Base+0x7f90>
   26a90:	mov	w13, #0x18                  	// #24
   26a94:	cbnz	w0, 26e44 <rpl_re_set_registers@@Base+0x7d90>
   26a98:	tbnz	x25, #63, 269e0 <rpl_re_set_registers@@Base+0x792c>
   26a9c:	ldr	x8, [x23, #8]
   26aa0:	cmp	x8, #0x1
   26aa4:	str	x8, [sp, #32]
   26aa8:	b.lt	269e0 <rpl_re_set_registers@@Base+0x792c>  // b.tstop
   26aac:	mov	x21, xzr
   26ab0:	ldr	x8, [x23, #16]
   26ab4:	mov	x1, x25
   26ab8:	mov	w27, #0x18                  	// #24
   26abc:	ldr	x22, [x8, x21, lsl #3]
   26ac0:	ldr	x8, [x24, #56]
   26ac4:	madd	x0, x22, x13, x8
   26ac8:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   26acc:	cbnz	x0, 26b08 <rpl_re_set_registers@@Base+0x7a54>
   26ad0:	ldr	x8, [x24, #48]
   26ad4:	mov	x1, x25
   26ad8:	madd	x0, x22, x27, x8
   26adc:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   26ae0:	cbnz	x0, 26b08 <rpl_re_set_registers@@Base+0x7a54>
   26ae4:	ldr	x3, [sp, #40]
   26ae8:	mov	x0, x24
   26aec:	mov	x1, x22
   26af0:	mov	x2, x23
   26af4:	bl	27044 <rpl_re_set_registers@@Base+0x7f90>
   26af8:	cbnz	w0, 26e44 <rpl_re_set_registers@@Base+0x7d90>
   26afc:	ldr	x8, [x23, #8]
   26b00:	sub	x21, x21, #0x1
   26b04:	str	x8, [sp, #32]
   26b08:	ldr	x8, [sp, #32]
   26b0c:	add	x21, x21, #0x1
   26b10:	mov	w13, #0x18                  	// #24
   26b14:	cmp	x21, x8
   26b18:	b.lt	26ab0 <rpl_re_set_registers@@Base+0x79fc>  // b.tstop
   26b1c:	b	269e0 <rpl_re_set_registers@@Base+0x792c>
   26b20:	cmp	x8, #0x1
   26b24:	b.lt	269e0 <rpl_re_set_registers@@Base+0x792c>  // b.tstop
   26b28:	mov	x21, xzr
   26b2c:	ldr	x10, [x23, #16]
   26b30:	ldr	x1, [x10, x21, lsl #3]
   26b34:	add	x10, x9, x1, lsl #4
   26b38:	ldr	w10, [x10, #8]
   26b3c:	and	w10, w10, #0xfe
   26b40:	orr	w10, w10, #0x1
   26b44:	cmp	w10, #0x9
   26b48:	b.ne	26b78 <rpl_re_set_registers@@Base+0x7ac4>  // b.any
   26b4c:	lsl	x10, x1, #4
   26b50:	ldr	x9, [x9, x10]
   26b54:	cmp	x27, x9
   26b58:	b.ne	26b78 <rpl_re_set_registers@@Base+0x7ac4>  // b.any
   26b5c:	ldr	x3, [sp, #40]
   26b60:	mov	x0, x24
   26b64:	mov	x2, x23
   26b68:	bl	27044 <rpl_re_set_registers@@Base+0x7f90>
   26b6c:	cbnz	w0, 26e44 <rpl_re_set_registers@@Base+0x7d90>
   26b70:	ldr	x8, [x23, #8]
   26b74:	mov	w13, #0x18                  	// #24
   26b78:	add	x21, x21, #0x1
   26b7c:	cmp	x21, x8
   26b80:	b.ge	269e0 <rpl_re_set_registers@@Base+0x792c>  // b.tcont
   26b84:	ldr	x9, [x24]
   26b88:	b	26b2c <rpl_re_set_registers@@Base+0x7a78>
   26b8c:	ldr	x8, [x20]
   26b90:	str	xzr, [x8, x19, lsl #3]
   26b94:	b	26bc0 <rpl_re_set_registers@@Base+0x7b0c>
   26b98:	ldr	x27, [sp, #24]
   26b9c:	str	wzr, [sp, #60]
   26ba0:	add	x0, sp, #0x3c
   26ba4:	mov	x1, x24
   26ba8:	mov	x2, x23
   26bac:	bl	25fa4 <rpl_re_set_registers@@Base+0x6ef0>
   26bb0:	ldr	x8, [x20]
   26bb4:	str	x0, [x8, x19, lsl #3]
   26bb8:	ldr	w22, [sp, #60]
   26bbc:	cbnz	w22, 26e20 <rpl_re_set_registers@@Base+0x7d6c>
   26bc0:	cbz	x27, 26e1c <rpl_re_set_registers@@Base+0x7d68>
   26bc4:	ldr	x8, [sp, #48]
   26bc8:	ldr	x8, [x8, #184]
   26bcc:	ldr	x8, [x8, x19, lsl #3]
   26bd0:	ldrb	w8, [x8, #104]
   26bd4:	tbz	w8, #6, 26e1c <rpl_re_set_registers@@Base+0x7d68>
   26bd8:	ldr	x0, [sp, #48]
   26bdc:	mov	x1, x19
   26be0:	ldr	x23, [x0, #152]
   26be4:	bl	25384 <rpl_re_set_registers@@Base+0x62d0>
   26be8:	cmn	x0, #0x1
   26bec:	str	x0, [sp, #16]
   26bf0:	b.eq	26e18 <rpl_re_set_registers@@Base+0x7d64>  // b.none
   26bf4:	ldr	x8, [sp, #40]
   26bf8:	str	xzr, [sp, #64]
   26bfc:	ldr	x8, [x8, #8]
   26c00:	cmp	x8, #0x0
   26c04:	b.le	26e18 <rpl_re_set_registers@@Base+0x7d64>
   26c08:	add	x9, x20, #0x20
   26c0c:	str	x9, [sp, #32]
   26c10:	add	x9, sp, #0x40
   26c14:	mov	x28, xzr
   26c18:	mov	x27, xzr
   26c1c:	add	x10, x19, #0x1
   26c20:	add	x9, x9, #0x20
   26c24:	str	x10, [sp, #8]
   26c28:	str	x9, [sp, #24]
   26c2c:	ldr	x9, [sp, #40]
   26c30:	ldr	x10, [x20, #16]
   26c34:	ldr	x9, [x9, #16]
   26c38:	ldr	x26, [x9, x27, lsl #3]
   26c3c:	ldr	x9, [x23]
   26c40:	cmp	x26, x10
   26c44:	add	x9, x9, x26, lsl #4
   26c48:	ldrb	w9, [x9, #8]
   26c4c:	b.ne	26c68 <rpl_re_set_registers@@Base+0x7bb4>  // b.any
   26c50:	cmp	w9, #0x4
   26c54:	b.ne	26df0 <rpl_re_set_registers@@Base+0x7d3c>  // b.any
   26c58:	ldr	x9, [x20, #24]
   26c5c:	cmp	x9, x19
   26c60:	b.ne	26c70 <rpl_re_set_registers@@Base+0x7bbc>  // b.any
   26c64:	b	26df0 <rpl_re_set_registers@@Base+0x7d3c>
   26c68:	cmp	w9, #0x4
   26c6c:	b.ne	26df0 <rpl_re_set_registers@@Base+0x7d3c>  // b.any
   26c70:	ldr	x8, [sp, #48]
   26c74:	ldr	x24, [sp, #16]
   26c78:	mov	w9, #0x28                  	// #40
   26c7c:	ldr	x8, [x8, #216]
   26c80:	madd	x21, x24, x9, x8
   26c84:	ldr	x8, [x21]
   26c88:	cmp	x8, x26
   26c8c:	b.ne	26dd8 <rpl_re_set_registers@@Base+0x7d24>  // b.any
   26c90:	ldp	x9, x8, [x21, #16]
   26c94:	subs	x8, x8, x9
   26c98:	add	x22, x8, x19
   26c9c:	b.eq	26cac <rpl_re_set_registers@@Base+0x7bf8>  // b.none
   26ca0:	ldr	x8, [x23, #24]
   26ca4:	add	x8, x8, x26, lsl #3
   26ca8:	b	26cbc <rpl_re_set_registers@@Base+0x7c08>
   26cac:	ldr	x8, [x23, #40]
   26cb0:	mov	w9, #0x18                  	// #24
   26cb4:	madd	x8, x26, x9, x8
   26cb8:	ldr	x8, [x8, #16]
   26cbc:	ldr	x9, [x20, #24]
   26cc0:	cmp	x22, x9
   26cc4:	b.gt	26dd8 <rpl_re_set_registers@@Base+0x7d24>
   26cc8:	ldr	x9, [x20]
   26ccc:	ldr	x9, [x9, x22, lsl #3]
   26cd0:	cbz	x9, 26dd8 <rpl_re_set_registers@@Base+0x7d24>
   26cd4:	ldr	x25, [x8]
   26cd8:	add	x0, x9, #0x8
   26cdc:	mov	x1, x25
   26ce0:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   26ce4:	cbz	x0, 26dd8 <rpl_re_set_registers@@Base+0x7d24>
   26ce8:	ldr	x0, [sp, #48]
   26cec:	ldr	x1, [sp, #32]
   26cf0:	mov	x2, x26
   26cf4:	mov	x3, x19
   26cf8:	mov	x4, x25
   26cfc:	mov	x5, x22
   26d00:	bl	27238 <rpl_re_set_registers@@Base+0x8184>
   26d04:	tbnz	w0, #0, 26dd8 <rpl_re_set_registers@@Base+0x7d24>
   26d08:	cbnz	x28, 26d30 <rpl_re_set_registers@@Base+0x7c7c>
   26d0c:	ldr	x8, [x20, #48]
   26d10:	ldp	q1, q0, [x20, #16]
   26d14:	ldr	q2, [x20]
   26d18:	ldp	x0, x1, [sp, #24]
   26d1c:	str	x8, [sp, #112]
   26d20:	stp	q1, q0, [sp, #80]
   26d24:	str	q2, [sp, #64]
   26d28:	bl	235d8 <rpl_re_set_registers@@Base+0x4524>
   26d2c:	cbnz	w0, 26e50 <rpl_re_set_registers@@Base+0x7d9c>
   26d30:	ldr	x0, [sp, #24]
   26d34:	mov	x1, x24
   26d38:	stp	x26, x19, [sp, #80]
   26d3c:	bl	233d0 <rpl_re_set_registers@@Base+0x431c>
   26d40:	tbz	w0, #0, 26e64 <rpl_re_set_registers@@Base+0x7db0>
   26d44:	ldr	x28, [sp, #64]
   26d48:	ldr	x0, [sp, #48]
   26d4c:	add	x1, sp, #0x40
   26d50:	ldr	x21, [x28, x19, lsl #3]
   26d54:	bl	26590 <rpl_re_set_registers@@Base+0x74dc>
   26d58:	cbnz	w0, 26e50 <rpl_re_set_registers@@Base+0x7d9c>
   26d5c:	ldr	x1, [x20, #8]
   26d60:	cbz	x1, 26d78 <rpl_re_set_registers@@Base+0x7cc4>
   26d64:	ldr	x3, [sp, #8]
   26d68:	mov	x0, x23
   26d6c:	mov	x2, x28
   26d70:	bl	267dc <rpl_re_set_registers@@Base+0x7728>
   26d74:	cbnz	w0, 26e50 <rpl_re_set_registers@@Base+0x7d9c>
   26d78:	ldr	x0, [sp, #24]
   26d7c:	mov	x1, x24
   26d80:	str	x21, [x28, x19, lsl #3]
   26d84:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   26d88:	cmp	x0, #0x1
   26d8c:	b.lt	26dc8 <rpl_re_set_registers@@Base+0x7d14>  // b.tstop
   26d90:	ldr	x9, [sp, #104]
   26d94:	cmp	x9, x0
   26d98:	b.lt	26dc8 <rpl_re_set_registers@@Base+0x7d14>  // b.tstop
   26d9c:	sub	x8, x9, #0x1
   26da0:	cmp	x9, x0
   26da4:	str	x8, [sp, #104]
   26da8:	b.le	26dc8 <rpl_re_set_registers@@Base+0x7d14>
   26dac:	ldr	x9, [sp, #112]
   26db0:	add	x10, x9, x0, lsl #3
   26db4:	ldr	x11, [x10]
   26db8:	cmp	x0, x8
   26dbc:	add	x0, x0, #0x1
   26dc0:	stur	x11, [x10, #-8]
   26dc4:	b.lt	26db0 <rpl_re_set_registers@@Base+0x7cfc>  // b.tstop
   26dc8:	ldr	x8, [sp, #48]
   26dcc:	mov	w9, #0x28                  	// #40
   26dd0:	ldr	x8, [x8, #216]
   26dd4:	madd	x21, x24, x9, x8
   26dd8:	ldrb	w8, [x21, #32]
   26ddc:	add	x21, x21, #0x28
   26de0:	add	x24, x24, #0x1
   26de4:	cbnz	w8, 26c84 <rpl_re_set_registers@@Base+0x7bd0>
   26de8:	ldr	x8, [sp, #40]
   26dec:	ldr	x8, [x8, #8]
   26df0:	add	x27, x27, #0x1
   26df4:	cmp	x27, x8
   26df8:	b.lt	26c2c <rpl_re_set_registers@@Base+0x7b78>  // b.tstop
   26dfc:	mov	w22, wzr
   26e00:	cbz	x28, 26e0c <rpl_re_set_registers@@Base+0x7d58>
   26e04:	ldr	x0, [sp, #112]
   26e08:	bl	aaa0 <free@plt>
   26e0c:	str	w22, [sp, #60]
   26e10:	cbz	w22, 26e1c <rpl_re_set_registers@@Base+0x7d68>
   26e14:	b	26e20 <rpl_re_set_registers@@Base+0x7d6c>
   26e18:	str	wzr, [sp, #60]
   26e1c:	mov	w22, wzr
   26e20:	mov	w0, w22
   26e24:	ldp	x20, x19, [sp, #208]
   26e28:	ldp	x22, x21, [sp, #192]
   26e2c:	ldp	x24, x23, [sp, #176]
   26e30:	ldp	x26, x25, [sp, #160]
   26e34:	ldp	x28, x27, [sp, #144]
   26e38:	ldp	x29, x30, [sp, #128]
   26e3c:	add	sp, sp, #0xe0
   26e40:	ret
   26e44:	mov	w22, w0
   26e48:	str	w22, [sp, #60]
   26e4c:	b	26e20 <rpl_re_set_registers@@Base+0x7d6c>
   26e50:	mov	w22, w0
   26e54:	b	26e68 <rpl_re_set_registers@@Base+0x7db4>
   26e58:	mov	w22, #0xc                   	// #12
   26e5c:	str	w0, [sp, #64]
   26e60:	b	26e48 <rpl_re_set_registers@@Base+0x7d94>
   26e64:	mov	w22, #0xc                   	// #12
   26e68:	ldr	x28, [sp, #64]
   26e6c:	cbnz	x28, 26e04 <rpl_re_set_registers@@Base+0x7d50>
   26e70:	b	26e0c <rpl_re_set_registers@@Base+0x7d58>
   26e74:	mov	w22, w0
   26e78:	b	26e20 <rpl_re_set_registers@@Base+0x7d6c>
   26e7c:	stp	x29, x30, [sp, #-48]!
   26e80:	stp	x22, x21, [sp, #16]
   26e84:	stp	x20, x19, [sp, #32]
   26e88:	ldr	x9, [x1, #8]
   26e8c:	mov	x29, sp
   26e90:	cbz	x9, 27028 <rpl_re_set_registers@@Base+0x7f74>
   26e94:	ldr	x10, [x2, #8]
   26e98:	mov	x20, x2
   26e9c:	cbz	x10, 27028 <rpl_re_set_registers@@Base+0x7f74>
   26ea0:	ldp	x8, x13, [x0]
   26ea4:	add	x11, x10, x9
   26ea8:	mov	x21, x1
   26eac:	mov	x19, x0
   26eb0:	add	x12, x13, x11
   26eb4:	cmp	x12, x8
   26eb8:	b.le	26ee4 <rpl_re_set_registers@@Base+0x7e30>
   26ebc:	ldr	x0, [x19, #16]
   26ec0:	add	x22, x8, x11
   26ec4:	lsl	x1, x22, #3
   26ec8:	bl	a860 <realloc@plt>
   26ecc:	cbz	x0, 2703c <rpl_re_set_registers@@Base+0x7f88>
   26ed0:	str	x0, [x19, #16]
   26ed4:	str	x22, [x19]
   26ed8:	ldr	x13, [x19, #8]
   26edc:	ldr	x9, [x21, #8]
   26ee0:	ldr	x10, [x20, #8]
   26ee4:	ldr	x11, [x21, #16]
   26ee8:	ldr	x12, [x20, #16]
   26eec:	add	x8, x9, x13
   26ef0:	add	x8, x8, x10
   26ef4:	sub	x13, x13, #0x1
   26ef8:	sub	x9, x9, #0x1
   26efc:	mov	x14, x10
   26f00:	sub	x10, x14, #0x1
   26f04:	ldr	x16, [x12, x10, lsl #3]
   26f08:	ldr	x15, [x11, x9, lsl #3]
   26f0c:	cmp	x15, x16
   26f10:	b.eq	26f38 <rpl_re_set_registers@@Base+0x7e84>  // b.none
   26f14:	b.lt	26f28 <rpl_re_set_registers@@Base+0x7e74>  // b.tstop
   26f18:	cmp	x9, #0x0
   26f1c:	sub	x9, x9, #0x1
   26f20:	b.gt	26f08 <rpl_re_set_registers@@Base+0x7e54>
   26f24:	b	26f90 <rpl_re_set_registers@@Base+0x7edc>
   26f28:	cmp	x14, #0x2
   26f2c:	mov	x14, x10
   26f30:	b.ge	26f00 <rpl_re_set_registers@@Base+0x7e4c>  // b.tcont
   26f34:	b	26f90 <rpl_re_set_registers@@Base+0x7edc>
   26f38:	tbnz	x13, #63, 26f60 <rpl_re_set_registers@@Base+0x7eac>
   26f3c:	ldr	x17, [x19, #16]
   26f40:	ldr	x16, [x17, x13, lsl #3]
   26f44:	cmp	x16, x15
   26f48:	b.le	26f68 <rpl_re_set_registers@@Base+0x7eb4>
   26f4c:	sub	x16, x13, #0x1
   26f50:	cmp	x13, #0x0
   26f54:	mov	x13, x16
   26f58:	b.gt	26f40 <rpl_re_set_registers@@Base+0x7e8c>
   26f5c:	b	26f70 <rpl_re_set_registers@@Base+0x7ebc>
   26f60:	mov	x16, x13
   26f64:	b	26f70 <rpl_re_set_registers@@Base+0x7ebc>
   26f68:	mov	x16, x13
   26f6c:	b.eq	26f80 <rpl_re_set_registers@@Base+0x7ecc>  // b.none
   26f70:	ldr	x13, [x19, #16]
   26f74:	sub	x8, x8, #0x1
   26f78:	str	x15, [x13, x8, lsl #3]
   26f7c:	mov	x13, x16
   26f80:	cmp	x9, #0x1
   26f84:	b.lt	26f90 <rpl_re_set_registers@@Base+0x7edc>  // b.tstop
   26f88:	cmp	x14, #0x2
   26f8c:	b.ge	26ef8 <rpl_re_set_registers@@Base+0x7e44>  // b.tcont
   26f90:	ldp	x12, x0, [x19, #8]
   26f94:	ldr	x13, [x21, #8]
   26f98:	ldr	x14, [x20, #8]
   26f9c:	subs	x9, x12, #0x1
   26fa0:	add	x9, x9, x13
   26fa4:	add	x10, x9, x14
   26fa8:	sub	x15, x10, x8
   26fac:	add	x9, x15, #0x1
   26fb0:	subs	x11, x12, #0x1
   26fb4:	add	x16, x9, x12
   26fb8:	str	x16, [x19, #8]
   26fbc:	b.lt	27018 <rpl_re_set_registers@@Base+0x7f64>  // b.tstop
   26fc0:	tbnz	x15, #63, 27018 <rpl_re_set_registers@@Base+0x7f64>
   26fc4:	add	x12, x12, x14
   26fc8:	add	x12, x12, x13
   26fcc:	sub	x12, x12, x8
   26fd0:	add	x12, x0, x12, lsl #3
   26fd4:	ldr	x14, [x0, x10, lsl #3]
   26fd8:	ldr	x13, [x0, x11, lsl #3]
   26fdc:	cmp	x14, x13
   26fe0:	b.gt	26ffc <rpl_re_set_registers@@Base+0x7f48>
   26fe4:	sub	x14, x11, #0x1
   26fe8:	cmp	x11, #0x0
   26fec:	str	x13, [x12, x11, lsl #3]
   26ff0:	mov	x11, x14
   26ff4:	b.gt	26fd4 <rpl_re_set_registers@@Base+0x7f20>
   26ff8:	b	27018 <rpl_re_set_registers@@Base+0x7f64>
   26ffc:	mov	x13, xzr
   27000:	sub	x10, x10, #0x1
   27004:	sub	x9, x9, #0x1
   27008:	str	x14, [x12, x11, lsl #3]
   2700c:	sub	x12, x12, #0x8
   27010:	cbnz	x9, 26fd4 <rpl_re_set_registers@@Base+0x7f20>
   27014:	b	2701c <rpl_re_set_registers@@Base+0x7f68>
   27018:	mov	x13, x9
   2701c:	add	x1, x0, x8, lsl #3
   27020:	lsl	x2, x13, #3
   27024:	bl	a2f0 <memcpy@plt>
   27028:	mov	w0, wzr
   2702c:	ldp	x20, x19, [sp, #32]
   27030:	ldp	x22, x21, [sp, #16]
   27034:	ldp	x29, x30, [sp], #48
   27038:	ret
   2703c:	mov	w0, #0xc                   	// #12
   27040:	b	2702c <rpl_re_set_registers@@Base+0x7f78>
   27044:	sub	sp, sp, #0x90
   27048:	stp	x29, x30, [sp, #48]
   2704c:	stp	x28, x27, [sp, #64]
   27050:	stp	x26, x25, [sp, #80]
   27054:	stp	x24, x23, [sp, #96]
   27058:	stp	x22, x21, [sp, #112]
   2705c:	stp	x20, x19, [sp, #128]
   27060:	ldr	x9, [x0, #56]
   27064:	mov	w8, #0x18                  	// #24
   27068:	stp	xzr, xzr, [sp, #24]
   2706c:	str	xzr, [sp, #40]
   27070:	madd	x26, x1, x8, x9
   27074:	stp	x3, x26, [sp, #8]
   27078:	ldr	x21, [x26, #8]!
   2707c:	add	x29, sp, #0x30
   27080:	cmp	x21, #0x1
   27084:	b.lt	27200 <rpl_re_set_registers@@Base+0x814c>  // b.tstop
   27088:	mov	w8, #0x18                  	// #24
   2708c:	madd	x8, x1, x8, x9
   27090:	mov	x20, x1
   27094:	mov	x22, x0
   27098:	mov	x19, x2
   2709c:	mov	x28, xzr
   270a0:	add	x27, x8, #0x10
   270a4:	str	x9, [sp]
   270a8:	ldr	x8, [x27]
   270ac:	ldr	x23, [x8, x28, lsl #3]
   270b0:	cmp	x23, x20
   270b4:	b.eq	2715c <rpl_re_set_registers@@Base+0x80a8>  // b.none
   270b8:	ldr	x8, [x22]
   270bc:	add	x8, x8, x23, lsl #4
   270c0:	ldrb	w8, [x8, #8]
   270c4:	tbz	w8, #3, 2715c <rpl_re_set_registers@@Base+0x80a8>
   270c8:	ldr	x8, [x22, #40]
   270cc:	mov	w9, #0x18                  	// #24
   270d0:	madd	x9, x23, x9, x8
   270d4:	ldp	x9, x8, [x9, #8]
   270d8:	ldr	x25, [x8]
   270dc:	cmp	x9, #0x2
   270e0:	b.lt	270ec <rpl_re_set_registers@@Base+0x8038>  // b.tstop
   270e4:	ldr	x24, [x8, #8]
   270e8:	b	270f0 <rpl_re_set_registers@@Base+0x803c>
   270ec:	mov	x24, #0xffffffffffffffff    	// #-1
   270f0:	ldr	x0, [sp, #16]
   270f4:	mov	x1, x25
   270f8:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   270fc:	cbz	x0, 2712c <rpl_re_set_registers@@Base+0x8078>
   27100:	cmp	x24, #0x1
   27104:	b.lt	2715c <rpl_re_set_registers@@Base+0x80a8>  // b.tstop
   27108:	ldr	x0, [sp, #16]
   2710c:	mov	x1, x24
   27110:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   27114:	cbnz	x0, 2715c <rpl_re_set_registers@@Base+0x80a8>
   27118:	mov	x0, x19
   2711c:	mov	x1, x24
   27120:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   27124:	cbnz	x0, 2713c <rpl_re_set_registers@@Base+0x8088>
   27128:	b	2715c <rpl_re_set_registers@@Base+0x80a8>
   2712c:	mov	x0, x19
   27130:	mov	x1, x25
   27134:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   27138:	cbz	x0, 27100 <rpl_re_set_registers@@Base+0x804c>
   2713c:	ldr	x8, [x22, #56]
   27140:	ldr	x1, [sp, #8]
   27144:	mov	w9, #0x18                  	// #24
   27148:	add	x0, sp, #0x18
   2714c:	madd	x2, x23, x9, x8
   27150:	bl	26e7c <rpl_re_set_registers@@Base+0x7dc8>
   27154:	cbnz	w0, 27230 <rpl_re_set_registers@@Base+0x817c>
   27158:	ldr	x21, [x26]
   2715c:	add	x28, x28, #0x1
   27160:	cmp	x28, x21
   27164:	b.lt	270a8 <rpl_re_set_registers@@Base+0x7ff4>  // b.tstop
   27168:	cmp	x21, #0x1
   2716c:	b.lt	27200 <rpl_re_set_registers@@Base+0x814c>  // b.tstop
   27170:	ldr	x9, [sp]
   27174:	mov	w8, #0x18                  	// #24
   27178:	mov	x22, xzr
   2717c:	madd	x8, x20, x8, x9
   27180:	ldr	x21, [x8, #16]
   27184:	ldr	x20, [x21, x22, lsl #3]
   27188:	add	x0, sp, #0x18
   2718c:	mov	x1, x20
   27190:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   27194:	cbz	x0, 271ac <rpl_re_set_registers@@Base+0x80f8>
   27198:	ldr	x8, [x26]
   2719c:	add	x22, x22, #0x1
   271a0:	cmp	x22, x8
   271a4:	b.lt	27184 <rpl_re_set_registers@@Base+0x80d0>  // b.tstop
   271a8:	b	27200 <rpl_re_set_registers@@Base+0x814c>
   271ac:	mov	x0, x19
   271b0:	mov	x1, x20
   271b4:	bl	23654 <rpl_re_set_registers@@Base+0x45a0>
   271b8:	cmp	x0, #0x1
   271bc:	b.lt	27198 <rpl_re_set_registers@@Base+0x80e4>  // b.tstop
   271c0:	ldr	x8, [x19, #8]
   271c4:	cmp	x8, x0
   271c8:	b.lt	27198 <rpl_re_set_registers@@Base+0x80e4>  // b.tstop
   271cc:	sub	x9, x8, #0x1
   271d0:	cmp	x8, x0
   271d4:	str	x9, [x19, #8]
   271d8:	b.le	27198 <rpl_re_set_registers@@Base+0x80e4>
   271dc:	ldr	x8, [x19, #16]
   271e0:	add	x9, x8, x0, lsl #3
   271e4:	ldr	x10, [x9]
   271e8:	stur	x10, [x9, #-8]
   271ec:	ldr	x9, [x19, #8]
   271f0:	cmp	x0, x9
   271f4:	add	x0, x0, #0x1
   271f8:	b.lt	271e0 <rpl_re_set_registers@@Base+0x812c>  // b.tstop
   271fc:	b	27198 <rpl_re_set_registers@@Base+0x80e4>
   27200:	mov	w24, wzr
   27204:	ldr	x0, [sp, #40]
   27208:	bl	aaa0 <free@plt>
   2720c:	mov	w0, w24
   27210:	ldp	x20, x19, [sp, #128]
   27214:	ldp	x22, x21, [sp, #112]
   27218:	ldp	x24, x23, [sp, #96]
   2721c:	ldp	x26, x25, [sp, #80]
   27220:	ldp	x28, x27, [sp, #64]
   27224:	ldp	x29, x30, [sp, #48]
   27228:	add	sp, sp, #0x90
   2722c:	ret
   27230:	mov	w24, w0
   27234:	b	27204 <rpl_re_set_registers@@Base+0x8150>
   27238:	sub	sp, sp, #0x70
   2723c:	stp	x24, x23, [sp, #64]
   27240:	mov	x23, x1
   27244:	mov	x1, x3
   27248:	stp	x29, x30, [sp, #16]
   2724c:	stp	x28, x27, [sp, #32]
   27250:	stp	x26, x25, [sp, #48]
   27254:	stp	x22, x21, [sp, #80]
   27258:	stp	x20, x19, [sp, #96]
   2725c:	add	x29, sp, #0x10
   27260:	mov	x19, x5
   27264:	stp	x2, x4, [sp]
   27268:	mov	x21, x3
   2726c:	mov	x24, x0
   27270:	bl	25384 <rpl_re_set_registers@@Base+0x62d0>
   27274:	mov	x25, x0
   27278:	mov	x0, x24
   2727c:	mov	x1, x19
   27280:	bl	25384 <rpl_re_set_registers@@Base+0x62d0>
   27284:	ldr	x8, [x23, #8]
   27288:	cmp	x8, #0x1
   2728c:	b.lt	27314 <rpl_re_set_registers@@Base+0x8260>  // b.tstop
   27290:	ldr	x22, [x24, #152]
   27294:	mov	x26, x0
   27298:	mov	x20, xzr
   2729c:	ldr	x8, [x23, #16]
   272a0:	mov	w9, #0x28                  	// #40
   272a4:	ldr	x3, [sp]
   272a8:	mov	x0, x24
   272ac:	ldr	x1, [x8, x20, lsl #3]
   272b0:	ldr	x8, [x24, #216]
   272b4:	mov	x4, x21
   272b8:	mov	x5, x25
   272bc:	mul	x9, x1, x9
   272c0:	ldr	x8, [x8, x9]
   272c4:	ldr	x9, [x22]
   272c8:	lsl	x8, x8, #4
   272cc:	ldr	x27, [x9, x8]
   272d0:	mov	x2, x27
   272d4:	bl	27340 <rpl_re_set_registers@@Base+0x828c>
   272d8:	ldr	x8, [x23, #16]
   272dc:	ldr	x3, [sp, #8]
   272e0:	mov	w28, w0
   272e4:	mov	x0, x24
   272e8:	ldr	x1, [x8, x20, lsl #3]
   272ec:	mov	x2, x27
   272f0:	mov	x4, x19
   272f4:	mov	x5, x26
   272f8:	bl	27340 <rpl_re_set_registers@@Base+0x828c>
   272fc:	cmp	w0, w28
   27300:	b.ne	2731c <rpl_re_set_registers@@Base+0x8268>  // b.any
   27304:	ldr	x8, [x23, #8]
   27308:	add	x20, x20, #0x1
   2730c:	cmp	x20, x8
   27310:	b.lt	2729c <rpl_re_set_registers@@Base+0x81e8>  // b.tstop
   27314:	mov	w0, wzr
   27318:	b	27320 <rpl_re_set_registers@@Base+0x826c>
   2731c:	mov	w0, #0x1                   	// #1
   27320:	ldp	x20, x19, [sp, #96]
   27324:	ldp	x22, x21, [sp, #80]
   27328:	ldp	x24, x23, [sp, #64]
   2732c:	ldp	x26, x25, [sp, #48]
   27330:	ldp	x28, x27, [sp, #32]
   27334:	ldp	x29, x30, [sp, #16]
   27338:	add	sp, sp, #0x70
   2733c:	ret
   27340:	ldr	x9, [x0, #216]
   27344:	mov	w8, #0x28                  	// #40
   27348:	madd	x8, x1, x8, x9
   2734c:	ldr	x8, [x8, #16]
   27350:	cmp	x8, x4
   27354:	b.le	27360 <rpl_re_set_registers@@Base+0x82ac>
   27358:	mov	w0, #0xffffffff            	// #-1
   2735c:	ret
   27360:	mov	w10, #0x28                  	// #40
   27364:	madd	x9, x1, x10, x9
   27368:	ldr	x9, [x9, #24]
   2736c:	cmp	x9, x4
   27370:	b.ge	2737c <rpl_re_set_registers@@Base+0x82c8>  // b.tcont
   27374:	mov	w0, #0x1                   	// #1
   27378:	ret
   2737c:	cmp	x8, x4
   27380:	cset	w1, eq  // eq = none
   27384:	cmp	x9, x4
   27388:	cset	w8, eq  // eq = none
   2738c:	bfi	w1, w8, #1, #1
   27390:	cbz	w1, 2739c <rpl_re_set_registers@@Base+0x82e8>
   27394:	mov	x4, x5
   27398:	b	273a4 <rpl_re_set_registers@@Base+0x82f0>
   2739c:	mov	w0, wzr
   273a0:	ret
   273a4:	sub	sp, sp, #0x80
   273a8:	stp	x29, x30, [sp, #32]
   273ac:	stp	x28, x27, [sp, #48]
   273b0:	stp	x26, x25, [sp, #64]
   273b4:	stp	x24, x23, [sp, #80]
   273b8:	stp	x22, x21, [sp, #96]
   273bc:	stp	x20, x19, [sp, #112]
   273c0:	ldr	x24, [x0, #152]
   273c4:	mov	w8, #0x18                  	// #24
   273c8:	mov	w23, w1
   273cc:	add	x29, sp, #0x20
   273d0:	ldr	x9, [x24, #48]
   273d4:	madd	x13, x3, x8, x9
   273d8:	ldr	x8, [x13, #8]!
   273dc:	cmp	x8, #0x1
   273e0:	b.lt	2754c <rpl_re_set_registers@@Base+0x8498>  // b.tstop
   273e4:	mov	w12, #0x18                  	// #24
   273e8:	cmp	x2, #0x3f
   273ec:	and	w10, w23, #0x2
   273f0:	mov	w11, #0x1                   	// #1
   273f4:	madd	x9, x3, x12, x9
   273f8:	cset	w12, gt
   273fc:	lsl	x11, x11, x2
   27400:	add	x25, x9, #0x10
   27404:	orr	w9, w12, w10, lsr #1
   27408:	mov	x19, x4
   2740c:	mov	x20, x3
   27410:	mov	x21, x2
   27414:	mov	x22, x0
   27418:	mov	x26, xzr
   2741c:	stur	w9, [x29, #-12]
   27420:	stur	x11, [x29, #-8]
   27424:	mvn	w9, w11
   27428:	mov	w11, #0x28                  	// #40
   2742c:	str	w9, [sp, #16]
   27430:	str	x13, [sp, #8]
   27434:	ldr	x9, [x25]
   27438:	ldr	x27, [x9, x26, lsl #3]
   2743c:	ldr	x9, [x24]
   27440:	add	x9, x9, x27, lsl #4
   27444:	ldrb	w10, [x9, #8]
   27448:	cmp	w10, #0x9
   2744c:	b.eq	2751c <rpl_re_set_registers@@Base+0x8468>  // b.none
   27450:	cmp	w10, #0x8
   27454:	b.eq	27530 <rpl_re_set_registers@@Base+0x847c>  // b.none
   27458:	cmp	w10, #0x4
   2745c:	b.ne	27540 <rpl_re_set_registers@@Base+0x848c>  // b.any
   27460:	cmn	x19, #0x1
   27464:	b.eq	27540 <rpl_re_set_registers@@Base+0x848c>  // b.none
   27468:	ldr	x8, [x22, #216]
   2746c:	madd	x8, x19, x11, x8
   27470:	add	x28, x8, #0x22
   27474:	ldur	x8, [x28, #-34]
   27478:	cmp	x8, x27
   2747c:	b.ne	27500 <rpl_re_set_registers@@Base+0x844c>  // b.any
   27480:	cmp	x21, #0x3f
   27484:	b.gt	27498 <rpl_re_set_registers@@Base+0x83e4>
   27488:	ldrh	w8, [x28]
   2748c:	ldur	x9, [x29, #-8]
   27490:	tst	x9, x8
   27494:	b.eq	27500 <rpl_re_set_registers@@Base+0x844c>  // b.none
   27498:	ldr	x8, [x24, #40]
   2749c:	mov	w9, #0x18                  	// #24
   274a0:	madd	x8, x27, x9, x8
   274a4:	ldr	x8, [x8, #16]
   274a8:	ldr	x3, [x8]
   274ac:	cmp	x3, x20
   274b0:	b.eq	27554 <rpl_re_set_registers@@Base+0x84a0>  // b.none
   274b4:	mov	x0, x22
   274b8:	mov	w1, w23
   274bc:	mov	x2, x21
   274c0:	mov	x4, x19
   274c4:	bl	273a4 <rpl_re_set_registers@@Base+0x82f0>
   274c8:	cbz	w0, 274e0 <rpl_re_set_registers@@Base+0x842c>
   274cc:	cmn	w0, #0x1
   274d0:	b.eq	27568 <rpl_re_set_registers@@Base+0x84b4>  // b.none
   274d4:	cmp	x21, #0x3f
   274d8:	b.le	274f0 <rpl_re_set_registers@@Base+0x843c>
   274dc:	b	27500 <rpl_re_set_registers@@Base+0x844c>
   274e0:	ldur	w8, [x29, #-12]
   274e4:	tbz	w8, #0, 274f0 <rpl_re_set_registers@@Base+0x843c>
   274e8:	tbz	w23, #1, 27500 <rpl_re_set_registers@@Base+0x844c>
   274ec:	b	2755c <rpl_re_set_registers@@Base+0x84a8>
   274f0:	ldrh	w8, [x28]
   274f4:	ldr	w9, [sp, #16]
   274f8:	and	w8, w8, w9
   274fc:	strh	w8, [x28]
   27500:	ldurb	w8, [x28, #-2]
   27504:	add	x28, x28, #0x28
   27508:	cbnz	w8, 27474 <rpl_re_set_registers@@Base+0x83c0>
   2750c:	ldr	x13, [sp, #8]
   27510:	mov	w11, #0x28                  	// #40
   27514:	ldr	x8, [x13]
   27518:	b	27540 <rpl_re_set_registers@@Base+0x848c>
   2751c:	tbz	w23, #1, 27540 <rpl_re_set_registers@@Base+0x848c>
   27520:	ldr	x9, [x9]
   27524:	cmp	x9, x21
   27528:	b.ne	27540 <rpl_re_set_registers@@Base+0x848c>  // b.any
   2752c:	b	2755c <rpl_re_set_registers@@Base+0x84a8>
   27530:	tbz	w23, #0, 27540 <rpl_re_set_registers@@Base+0x848c>
   27534:	ldr	x9, [x9]
   27538:	cmp	x9, x21
   2753c:	b.eq	27564 <rpl_re_set_registers@@Base+0x84b0>  // b.none
   27540:	add	x26, x26, #0x1
   27544:	cmp	x26, x8
   27548:	b.lt	27434 <rpl_re_set_registers@@Base+0x8380>  // b.tstop
   2754c:	ubfx	w0, w23, #1, #1
   27550:	b	27568 <rpl_re_set_registers@@Base+0x84b4>
   27554:	sbfx	w0, w23, #0, #1
   27558:	b	27568 <rpl_re_set_registers@@Base+0x84b4>
   2755c:	mov	w0, wzr
   27560:	b	27568 <rpl_re_set_registers@@Base+0x84b4>
   27564:	mov	w0, #0xffffffff            	// #-1
   27568:	ldp	x20, x19, [sp, #112]
   2756c:	ldp	x22, x21, [sp, #96]
   27570:	ldp	x24, x23, [sp, #80]
   27574:	ldp	x26, x25, [sp, #64]
   27578:	ldp	x28, x27, [sp, #48]
   2757c:	ldp	x29, x30, [sp, #32]
   27580:	add	sp, sp, #0x80
   27584:	ret
   27588:	cbz	x0, 275fc <rpl_re_set_registers@@Base+0x8548>
   2758c:	stp	x29, x30, [sp, #-48]!
   27590:	stp	x20, x19, [sp, #32]
   27594:	ldr	x8, [x0]
   27598:	mov	x19, x0
   2759c:	ldr	x0, [x0, #16]
   275a0:	str	x21, [sp, #16]
   275a4:	cmp	x8, #0x1
   275a8:	mov	x29, sp
   275ac:	b.lt	275ec <rpl_re_set_registers@@Base+0x8538>  // b.tstop
   275b0:	mov	x20, xzr
   275b4:	mov	x21, xzr
   275b8:	add	x8, x0, x20
   275bc:	ldr	x0, [x8, #40]
   275c0:	bl	aaa0 <free@plt>
   275c4:	ldr	x8, [x19, #16]
   275c8:	add	x8, x8, x20
   275cc:	ldr	x0, [x8, #16]
   275d0:	bl	aaa0 <free@plt>
   275d4:	ldr	x8, [x19]
   275d8:	ldr	x0, [x19, #16]
   275dc:	add	x21, x21, #0x1
   275e0:	add	x20, x20, #0x30
   275e4:	cmp	x21, x8
   275e8:	b.lt	275b8 <rpl_re_set_registers@@Base+0x8504>  // b.tstop
   275ec:	ldp	x20, x19, [sp, #32]
   275f0:	ldr	x21, [sp, #16]
   275f4:	ldp	x29, x30, [sp], #48
   275f8:	b	aaa0 <free@plt>
   275fc:	ret
   27600:	stp	x29, x30, [sp, #-48]!
   27604:	stp	x20, x19, [sp, #32]
   27608:	ldr	x9, [x0]
   2760c:	str	x21, [sp, #16]
   27610:	mov	x29, sp
   27614:	sub	x8, x9, #0x1
   27618:	cmp	x9, #0x0
   2761c:	str	x8, [x0]
   27620:	b.le	2769c <rpl_re_set_registers@@Base+0x85e8>
   27624:	ldr	x9, [x0, #16]
   27628:	add	x21, x8, x8, lsl #1
   2762c:	mov	x20, x0
   27630:	lsl	x2, x2, #4
   27634:	add	x8, x9, x21, lsl #4
   27638:	ldr	x9, [x8]
   2763c:	mov	x0, x3
   27640:	mov	x19, x4
   27644:	str	x9, [x1]
   27648:	ldr	x1, [x8, #16]
   2764c:	bl	a2f0 <memcpy@plt>
   27650:	ldr	x0, [x19, #16]
   27654:	bl	aaa0 <free@plt>
   27658:	ldr	x8, [x20, #16]
   2765c:	add	x8, x8, x21, lsl #4
   27660:	ldr	x0, [x8, #16]
   27664:	bl	aaa0 <free@plt>
   27668:	ldr	x8, [x20, #16]
   2766c:	add	x8, x8, x21, lsl #4
   27670:	ldr	x9, [x8, #40]
   27674:	ldur	q0, [x8, #24]
   27678:	str	x9, [x19, #16]
   2767c:	str	q0, [x19]
   27680:	ldr	x8, [x20, #16]
   27684:	ldp	x20, x19, [sp, #32]
   27688:	add	x8, x8, x21, lsl #4
   2768c:	ldr	x0, [x8, #8]
   27690:	ldr	x21, [sp, #16]
   27694:	ldp	x29, x30, [sp], #48
   27698:	ret
   2769c:	adrp	x0, 2b000 <vasnprintf@@Base+0x3944>
   276a0:	adrp	x1, 2b000 <vasnprintf@@Base+0x3944>
   276a4:	adrp	x3, 2b000 <vasnprintf@@Base+0x3944>
   276a8:	add	x0, x0, #0x169
   276ac:	add	x1, x1, #0x1d
   276b0:	add	x3, x3, #0x172
   276b4:	mov	w2, #0x555                 	// #1365
   276b8:	bl	aeb0 <__assert_fail@plt>

00000000000276bc <vasnprintf@@Base>:
   276bc:	stp	x29, x30, [sp, #-96]!
   276c0:	stp	x28, x27, [sp, #16]
   276c4:	stp	x26, x25, [sp, #32]
   276c8:	stp	x24, x23, [sp, #48]
   276cc:	stp	x22, x21, [sp, #64]
   276d0:	stp	x20, x19, [sp, #80]
   276d4:	mov	x29, sp
   276d8:	sub	sp, sp, #0x400
   276dc:	mov	x19, sp
   276e0:	mov	x21, x2
   276e4:	mov	x22, x1
   276e8:	mov	x20, x0
   276ec:	add	x1, x19, #0x168
   276f0:	add	x2, x19, #0x70
   276f4:	mov	x0, x21
   276f8:	mov	x23, x3
   276fc:	bl	af30 <printf_parse@plt>
   27700:	tbnz	w0, #31, 27764 <vasnprintf@@Base+0xa8>
   27704:	ldp	q1, q0, [x23]
   27708:	add	x0, x19, #0x50
   2770c:	add	x1, x19, #0x70
   27710:	add	x28, x19, #0x168
   27714:	stp	q1, q0, [x19, #80]
   27718:	bl	ab20 <printf_fetchargs@plt>
   2771c:	tbnz	w0, #31, 2776c <vasnprintf@@Base+0xb0>
   27720:	ldp	x8, x9, [x28, #16]
   27724:	adds	x8, x8, #0x7
   27728:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   2772c:	adds	x8, x8, x9
   27730:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   27734:	adds	x8, x8, #0x6
   27738:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   2773c:	cmp	x0, #0xf9f
   27740:	b.hi	277ac <vasnprintf@@Base+0xf0>  // b.pmore
   27744:	add	x9, x0, #0xf
   27748:	mov	x8, sp
   2774c:	and	x9, x9, #0xfffffffffffffff0
   27750:	sub	x8, x8, x9
   27754:	str	x8, [x19, #64]
   27758:	mov	sp, x8
   2775c:	mov	x0, xzr
   27760:	b	277c0 <vasnprintf@@Base+0x104>
   27764:	mov	x20, xzr
   27768:	b	28088 <vasnprintf@@Base+0x9cc>
   2776c:	ldr	x0, [x28, #8]
   27770:	add	x8, x19, #0x168
   27774:	add	x8, x8, #0x20
   27778:	cmp	x0, x8
   2777c:	b.eq	27784 <vasnprintf@@Base+0xc8>  // b.none
   27780:	bl	aaa0 <free@plt>
   27784:	ldr	x0, [x19, #120]
   27788:	add	x8, x19, #0x70
   2778c:	add	x8, x8, #0x10
   27790:	cmp	x0, x8
   27794:	b.eq	2779c <vasnprintf@@Base+0xe0>  // b.none
   27798:	bl	aaa0 <free@plt>
   2779c:	bl	aec0 <__errno_location@plt>
   277a0:	mov	x20, xzr
   277a4:	mov	w8, #0x16                  	// #22
   277a8:	b	28084 <vasnprintf@@Base+0x9c8>
   277ac:	cmn	x0, #0x1
   277b0:	b.eq	28048 <vasnprintf@@Base+0x98c>  // b.none
   277b4:	bl	a660 <malloc@plt>
   277b8:	str	x0, [x19, #64]
   277bc:	cbz	x0, 28048 <vasnprintf@@Base+0x98c>
   277c0:	str	x0, [x19, #32]
   277c4:	str	x22, [x19]
   277c8:	cbz	x20, 277d4 <vasnprintf@@Base+0x118>
   277cc:	ldr	x24, [x22]
   277d0:	b	277d8 <vasnprintf@@Base+0x11c>
   277d4:	mov	x24, xzr
   277d8:	ldr	x8, [x19, #64]
   277dc:	ldr	x22, [x28, #8]
   277e0:	mov	x23, xzr
   277e4:	mov	x27, xzr
   277e8:	add	x9, x8, #0x1
   277ec:	add	x8, x8, #0x2
   277f0:	mov	x14, x20
   277f4:	str	x9, [x19, #40]
   277f8:	str	x8, [x19, #24]
   277fc:	ldr	x8, [x22]
   27800:	cmp	x21, x8
   27804:	b.eq	278c4 <vasnprintf@@Base+0x208>  // b.none
   27808:	mov	x26, x22
   2780c:	mov	x22, x27
   27810:	sub	x27, x8, x21
   27814:	adds	x8, x23, x27
   27818:	csinv	x25, x8, xzr, cc  // cc = lo, ul, last
   2781c:	mov	w9, #0xc                   	// #12
   27820:	cmp	x25, x24
   27824:	b.ls	27868 <vasnprintf@@Base+0x1ac>  // b.plast
   27828:	lsl	x8, x24, #1
   2782c:	cmp	x24, #0x0
   27830:	csinv	x8, x8, xzr, ge  // ge = tcont
   27834:	csel	x8, x9, x8, eq  // eq = none
   27838:	cmp	x25, x8
   2783c:	csel	x24, x25, x8, hi  // hi = pmore
   27840:	cmn	x24, #0x1
   27844:	b.eq	28024 <vasnprintf@@Base+0x968>  // b.none
   27848:	cmp	x14, x20
   2784c:	str	x14, [x19, #56]
   27850:	b.eq	27870 <vasnprintf@@Base+0x1b4>  // b.none
   27854:	cbz	x14, 27870 <vasnprintf@@Base+0x1b4>
   27858:	mov	x0, x14
   2785c:	mov	x1, x24
   27860:	bl	a860 <realloc@plt>
   27864:	b	27878 <vasnprintf@@Base+0x1bc>
   27868:	mov	x28, x14
   2786c:	b	278a0 <vasnprintf@@Base+0x1e4>
   27870:	mov	x0, x24
   27874:	bl	a660 <malloc@plt>
   27878:	mov	x28, x0
   2787c:	cbz	x0, 281d0 <vasnprintf@@Base+0xb14>
   27880:	cbz	x23, 278a0 <vasnprintf@@Base+0x1e4>
   27884:	ldr	x8, [x19, #56]
   27888:	cmp	x8, x20
   2788c:	b.ne	278a0 <vasnprintf@@Base+0x1e4>  // b.any
   27890:	mov	x1, x20
   27894:	mov	x0, x28
   27898:	mov	x2, x23
   2789c:	bl	a2f0 <memcpy@plt>
   278a0:	add	x0, x28, x23
   278a4:	mov	x1, x21
   278a8:	mov	x2, x27
   278ac:	bl	a2f0 <memcpy@plt>
   278b0:	mov	x23, x25
   278b4:	mov	x14, x28
   278b8:	add	x28, x19, #0x168
   278bc:	mov	x27, x22
   278c0:	mov	x22, x26
   278c4:	ldr	x8, [x28]
   278c8:	cmp	x27, x8
   278cc:	b.eq	2813c <vasnprintf@@Base+0xa80>  // b.none
   278d0:	ldrb	w10, [x22, #72]
   278d4:	ldr	x8, [x22, #80]
   278d8:	cmp	w10, #0x25
   278dc:	b.ne	27940 <vasnprintf@@Base+0x284>  // b.any
   278e0:	cmn	x8, #0x1
   278e4:	b.ne	282e0 <vasnprintf@@Base+0xc24>  // b.any
   278e8:	adds	x8, x23, #0x1
   278ec:	csinv	x25, x8, xzr, cc  // cc = lo, ul, last
   278f0:	cmp	x25, x24
   278f4:	b.ls	27990 <vasnprintf@@Base+0x2d4>  // b.plast
   278f8:	lsl	x8, x24, #1
   278fc:	cmp	x24, #0x0
   27900:	csinv	x8, x8, xzr, ge  // ge = tcont
   27904:	mov	w9, #0xc                   	// #12
   27908:	csel	x8, x9, x8, eq  // eq = none
   2790c:	cmp	x25, x8
   27910:	csel	x24, x25, x8, hi  // hi = pmore
   27914:	cmn	x24, #0x1
   27918:	b.eq	28024 <vasnprintf@@Base+0x968>  // b.none
   2791c:	mov	x26, x23
   27920:	cmp	x14, x20
   27924:	b.eq	27ae4 <vasnprintf@@Base+0x428>  // b.none
   27928:	cbz	x14, 27ae4 <vasnprintf@@Base+0x428>
   2792c:	mov	x0, x14
   27930:	mov	x1, x24
   27934:	mov	x23, x14
   27938:	bl	a860 <realloc@plt>
   2793c:	b	27af0 <vasnprintf@@Base+0x434>
   27940:	cmn	x8, #0x1
   27944:	b.eq	282e0 <vasnprintf@@Base+0xc24>  // b.none
   27948:	ldr	x9, [x19, #120]
   2794c:	lsl	x11, x8, #5
   27950:	cmp	w10, #0x6e
   27954:	ldr	w26, [x9, x11]
   27958:	b.ne	27998 <vasnprintf@@Base+0x2dc>  // b.any
   2795c:	sub	w10, w26, #0x12
   27960:	cmp	w10, #0x4
   27964:	b.hi	282e0 <vasnprintf@@Base+0xc24>  // b.pmore
   27968:	adrp	x13, 2b000 <vasnprintf@@Base+0x3944>
   2796c:	add	x13, x13, #0x1da
   27970:	adr	x11, 27980 <vasnprintf@@Base+0x2c4>
   27974:	ldrh	w12, [x13, x10, lsl #1]
   27978:	add	x11, x11, x12, lsl #2
   2797c:	br	x11
   27980:	add	x8, x9, x8, lsl #5
   27984:	ldr	x8, [x8, #16]
   27988:	str	x23, [x8]
   2798c:	b	27b30 <vasnprintf@@Base+0x474>
   27990:	mov	x21, x14
   27994:	b	27b20 <vasnprintf@@Base+0x464>
   27998:	str	x27, [x19, #16]
   2799c:	ldr	w8, [x22, #16]
   279a0:	ldr	x9, [x19, #64]
   279a4:	ldr	x27, [x19, #40]
   279a8:	mov	w10, #0x25                  	// #37
   279ac:	strb	w10, [x9]
   279b0:	tbnz	w8, #0, 27a9c <vasnprintf@@Base+0x3e0>
   279b4:	tbnz	w8, #1, 27ab0 <vasnprintf@@Base+0x3f4>
   279b8:	tbnz	w8, #2, 27abc <vasnprintf@@Base+0x400>
   279bc:	tbnz	w8, #3, 27ac8 <vasnprintf@@Base+0x40c>
   279c0:	tbnz	w8, #4, 27ad4 <vasnprintf@@Base+0x418>
   279c4:	tbz	w8, #6, 279d0 <vasnprintf@@Base+0x314>
   279c8:	mov	w9, #0x49                  	// #73
   279cc:	strb	w9, [x27], #1
   279d0:	mov	x25, x14
   279d4:	tbz	w8, #5, 279e0 <vasnprintf@@Base+0x324>
   279d8:	mov	w8, #0x30                  	// #48
   279dc:	strb	w8, [x27], #1
   279e0:	ldp	x1, x8, [x22, #24]
   279e4:	cmp	x1, x8
   279e8:	b.eq	27a00 <vasnprintf@@Base+0x344>  // b.none
   279ec:	sub	x21, x8, x1
   279f0:	mov	x0, x27
   279f4:	mov	x2, x21
   279f8:	bl	a2f0 <memcpy@plt>
   279fc:	add	x27, x27, x21
   27a00:	ldp	x1, x8, [x22, #48]
   27a04:	cmp	x1, x8
   27a08:	b.eq	27a20 <vasnprintf@@Base+0x364>  // b.none
   27a0c:	sub	x21, x8, x1
   27a10:	mov	x0, x27
   27a14:	mov	x2, x21
   27a18:	bl	a2f0 <memcpy@plt>
   27a1c:	add	x27, x27, x21
   27a20:	mov	x14, x25
   27a24:	cmp	w26, #0x10
   27a28:	b.hi	27a5c <vasnprintf@@Base+0x3a0>  // b.pmore
   27a2c:	mov	w8, #0x1                   	// #1
   27a30:	mov	w9, #0x4180                	// #16768
   27a34:	lsl	w8, w8, w26
   27a38:	movk	w9, #0x1, lsl #16
   27a3c:	tst	w8, w9
   27a40:	b.ne	27a54 <vasnprintf@@Base+0x398>  // b.any
   27a44:	tst	w8, #0x600
   27a48:	b.eq	28010 <vasnprintf@@Base+0x954>  // b.none
   27a4c:	mov	w8, #0x6c                  	// #108
   27a50:	strb	w8, [x27], #1
   27a54:	mov	w8, #0x6c                  	// #108
   27a58:	strb	w8, [x27], #1
   27a5c:	ldrb	w8, [x22, #72]
   27a60:	strb	wzr, [x27, #1]
   27a64:	strb	w8, [x27]
   27a68:	ldr	x8, [x22, #40]
   27a6c:	cmn	x8, #0x1
   27a70:	b.eq	27b40 <vasnprintf@@Base+0x484>  // b.none
   27a74:	ldr	x9, [x19, #120]
   27a78:	lsl	x10, x8, #5
   27a7c:	ldr	w10, [x9, x10]
   27a80:	cmp	w10, #0x5
   27a84:	b.ne	282e0 <vasnprintf@@Base+0xc24>  // b.any
   27a88:	add	x8, x9, x8, lsl #5
   27a8c:	ldr	w8, [x8, #16]
   27a90:	mov	w28, #0x1                   	// #1
   27a94:	str	w8, [x19, #80]
   27a98:	b	27b44 <vasnprintf@@Base+0x488>
   27a9c:	ldr	x9, [x19, #40]
   27aa0:	ldr	x27, [x19, #24]
   27aa4:	mov	w10, #0x27                  	// #39
   27aa8:	strb	w10, [x9]
   27aac:	tbz	w8, #1, 279b8 <vasnprintf@@Base+0x2fc>
   27ab0:	mov	w9, #0x2d                  	// #45
   27ab4:	strb	w9, [x27], #1
   27ab8:	tbz	w8, #2, 279bc <vasnprintf@@Base+0x300>
   27abc:	mov	w9, #0x2b                  	// #43
   27ac0:	strb	w9, [x27], #1
   27ac4:	tbz	w8, #3, 279c0 <vasnprintf@@Base+0x304>
   27ac8:	mov	w9, #0x20                  	// #32
   27acc:	strb	w9, [x27], #1
   27ad0:	tbz	w8, #4, 279c4 <vasnprintf@@Base+0x308>
   27ad4:	mov	w9, #0x23                  	// #35
   27ad8:	strb	w9, [x27], #1
   27adc:	tbnz	w8, #6, 279c8 <vasnprintf@@Base+0x30c>
   27ae0:	b	279d0 <vasnprintf@@Base+0x314>
   27ae4:	mov	x0, x24
   27ae8:	mov	x23, x14
   27aec:	bl	a660 <malloc@plt>
   27af0:	mov	x21, x0
   27af4:	cbz	x0, 281e0 <vasnprintf@@Base+0xb24>
   27af8:	cbz	x26, 27b1c <vasnprintf@@Base+0x460>
   27afc:	cmp	x23, x20
   27b00:	b.ne	27b1c <vasnprintf@@Base+0x460>  // b.any
   27b04:	mov	x0, x21
   27b08:	mov	x1, x20
   27b0c:	mov	x2, x26
   27b10:	mov	x23, x26
   27b14:	bl	a2f0 <memcpy@plt>
   27b18:	b	27b20 <vasnprintf@@Base+0x464>
   27b1c:	mov	x23, x26
   27b20:	mov	w8, #0x25                  	// #37
   27b24:	strb	w8, [x21, x23]
   27b28:	mov	x23, x25
   27b2c:	mov	x14, x21
   27b30:	ldr	x21, [x22, #8]
   27b34:	add	x27, x27, #0x1
   27b38:	add	x22, x22, #0x58
   27b3c:	b	277fc <vasnprintf@@Base+0x140>
   27b40:	mov	w28, wzr
   27b44:	ldr	x8, [x22, #64]
   27b48:	cmn	x8, #0x1
   27b4c:	b.eq	27b7c <vasnprintf@@Base+0x4c0>  // b.none
   27b50:	ldr	x9, [x19, #120]
   27b54:	lsl	x10, x8, #5
   27b58:	ldr	w10, [x9, x10]
   27b5c:	cmp	w10, #0x5
   27b60:	b.ne	282e0 <vasnprintf@@Base+0xc24>  // b.any
   27b64:	add	x8, x9, x8, lsl #5
   27b68:	ldr	w8, [x8, #16]
   27b6c:	add	w9, w28, #0x1
   27b70:	add	x10, x19, #0x50
   27b74:	str	w8, [x10, w28, uxtw #2]
   27b78:	mov	w28, w9
   27b7c:	adds	x8, x23, #0x2
   27b80:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   27b84:	cmp	x8, x24
   27b88:	str	x27, [x19, #48]
   27b8c:	b.ls	27bd8 <vasnprintf@@Base+0x51c>  // b.plast
   27b90:	lsl	x9, x24, #1
   27b94:	cmp	x24, #0x0
   27b98:	csinv	x9, x9, xzr, ge  // ge = tcont
   27b9c:	mov	w10, #0xc                   	// #12
   27ba0:	csel	x9, x10, x9, eq  // eq = none
   27ba4:	cmp	x8, x9
   27ba8:	csel	x24, x8, x9, hi  // hi = pmore
   27bac:	cmn	x24, #0x1
   27bb0:	b.eq	28020 <vasnprintf@@Base+0x964>  // b.none
   27bb4:	mov	x25, x23
   27bb8:	cmp	x14, x20
   27bbc:	b.eq	27be0 <vasnprintf@@Base+0x524>  // b.none
   27bc0:	cbz	x14, 27be0 <vasnprintf@@Base+0x524>
   27bc4:	mov	x0, x14
   27bc8:	mov	x1, x24
   27bcc:	mov	x23, x14
   27bd0:	bl	a860 <realloc@plt>
   27bd4:	b	27bec <vasnprintf@@Base+0x530>
   27bd8:	mov	x21, x14
   27bdc:	b	27c18 <vasnprintf@@Base+0x55c>
   27be0:	mov	x0, x24
   27be4:	mov	x23, x14
   27be8:	bl	a660 <malloc@plt>
   27bec:	mov	x21, x0
   27bf0:	mov	x14, x23
   27bf4:	cbz	x0, 28020 <vasnprintf@@Base+0x964>
   27bf8:	mov	x23, x25
   27bfc:	cbz	x25, 27c18 <vasnprintf@@Base+0x55c>
   27c00:	cmp	x14, x20
   27c04:	b.ne	27c18 <vasnprintf@@Base+0x55c>  // b.any
   27c08:	mov	x0, x21
   27c0c:	mov	x1, x20
   27c10:	mov	x2, x23
   27c14:	bl	a2f0 <memcpy@plt>
   27c18:	strb	wzr, [x21, x23]
   27c1c:	bl	aec0 <__errno_location@plt>
   27c20:	ldr	w8, [x0]
   27c24:	str	x0, [x19, #56]
   27c28:	str	w8, [x19, #12]
   27c2c:	mov	x14, x21
   27c30:	sub	x25, x24, x23
   27c34:	mov	w9, #0x7fffffff            	// #2147483647
   27c38:	cmp	x25, x9
   27c3c:	csel	x21, x25, x9, cc  // cc = lo, ul, last
   27c40:	ldr	x9, [x19, #56]
   27c44:	mov	w8, #0xffffffff            	// #-1
   27c48:	str	w8, [x19, #76]
   27c4c:	sub	w8, w26, #0x1
   27c50:	cmp	w8, #0x10
   27c54:	str	wzr, [x9]
   27c58:	b.hi	282e0 <vasnprintf@@Base+0xc24>  // b.pmore
   27c5c:	adrp	x11, 2b000 <vasnprintf@@Base+0x3944>
   27c60:	add	x11, x11, #0x1c8
   27c64:	adr	x9, 27c7c <vasnprintf@@Base+0x5c0>
   27c68:	ldrb	w10, [x11, x8]
   27c6c:	add	x9, x9, x10, lsl #2
   27c70:	mov	w27, w26
   27c74:	mov	x26, x14
   27c78:	br	x9
   27c7c:	ldr	x8, [x19, #120]
   27c80:	ldr	x9, [x22, #80]
   27c84:	cmp	w28, #0x2
   27c88:	add	x8, x8, x9, lsl #5
   27c8c:	ldr	x8, [x8, #16]
   27c90:	b.eq	27d3c <vasnprintf@@Base+0x680>  // b.none
   27c94:	cmp	w28, #0x1
   27c98:	b.eq	27d1c <vasnprintf@@Base+0x660>  // b.none
   27c9c:	cbnz	w28, 282e0 <vasnprintf@@Base+0xc24>
   27ca0:	ldr	x2, [x19, #64]
   27ca4:	add	x0, x14, x23
   27ca8:	add	x4, x19, #0x4c
   27cac:	mov	x1, x21
   27cb0:	mov	x3, x8
   27cb4:	bl	a590 <snprintf@plt>
   27cb8:	b	27dcc <vasnprintf@@Base+0x710>
   27cbc:	ldr	x8, [x19, #120]
   27cc0:	ldr	x9, [x22, #80]
   27cc4:	add	x8, x8, x9, lsl #5
   27cc8:	ldr	w8, [x8, #16]
   27ccc:	cmp	w28, #0x2
   27cd0:	b.eq	27db0 <vasnprintf@@Base+0x6f4>  // b.none
   27cd4:	cmp	w28, #0x1
   27cd8:	b.eq	27cfc <vasnprintf@@Base+0x640>  // b.none
   27cdc:	cbnz	w28, 282e0 <vasnprintf@@Base+0xc24>
   27ce0:	ldr	x2, [x19, #64]
   27ce4:	add	x0, x14, x23
   27ce8:	add	x4, x19, #0x4c
   27cec:	mov	x1, x21
   27cf0:	mov	w3, w8
   27cf4:	bl	a590 <snprintf@plt>
   27cf8:	b	27dcc <vasnprintf@@Base+0x710>
   27cfc:	ldr	w3, [x19, #80]
   27d00:	ldr	x2, [x19, #64]
   27d04:	add	x0, x14, x23
   27d08:	add	x5, x19, #0x4c
   27d0c:	mov	x1, x21
   27d10:	mov	w4, w8
   27d14:	bl	a590 <snprintf@plt>
   27d18:	b	27dcc <vasnprintf@@Base+0x710>
   27d1c:	ldr	w3, [x19, #80]
   27d20:	ldr	x2, [x19, #64]
   27d24:	add	x0, x14, x23
   27d28:	add	x5, x19, #0x4c
   27d2c:	mov	x1, x21
   27d30:	mov	x4, x8
   27d34:	bl	a590 <snprintf@plt>
   27d38:	b	27dcc <vasnprintf@@Base+0x710>
   27d3c:	ldp	w3, w4, [x19, #80]
   27d40:	ldr	x2, [x19, #64]
   27d44:	add	x0, x14, x23
   27d48:	add	x6, x19, #0x4c
   27d4c:	mov	x1, x21
   27d50:	mov	x5, x8
   27d54:	bl	a590 <snprintf@plt>
   27d58:	b	27dcc <vasnprintf@@Base+0x710>
   27d5c:	ldr	x8, [x19, #120]
   27d60:	ldr	x9, [x22, #80]
   27d64:	cmp	w28, #0x2
   27d68:	add	x8, x8, x9, lsl #5
   27d6c:	ldr	q0, [x8, #16]
   27d70:	b.eq	27ee4 <vasnprintf@@Base+0x828>  // b.none
   27d74:	cmp	w28, #0x1
   27d78:	b.eq	27f00 <vasnprintf@@Base+0x844>  // b.none
   27d7c:	cbnz	w28, 282e0 <vasnprintf@@Base+0xc24>
   27d80:	ldr	x2, [x19, #64]
   27d84:	add	x0, x14, x23
   27d88:	add	x3, x19, #0x4c
   27d8c:	mov	x1, x21
   27d90:	bl	a590 <snprintf@plt>
   27d94:	b	27dcc <vasnprintf@@Base+0x710>
   27d98:	ldr	x8, [x19, #120]
   27d9c:	ldr	x9, [x22, #80]
   27da0:	cmp	w28, #0x2
   27da4:	add	x8, x8, x9, lsl #5
   27da8:	ldrsb	w8, [x8, #16]
   27dac:	b.ne	27cd4 <vasnprintf@@Base+0x618>  // b.any
   27db0:	ldp	w3, w4, [x19, #80]
   27db4:	ldr	x2, [x19, #64]
   27db8:	add	x0, x14, x23
   27dbc:	add	x6, x19, #0x4c
   27dc0:	mov	x1, x21
   27dc4:	mov	w5, w8
   27dc8:	bl	a590 <snprintf@plt>
   27dcc:	ldr	w8, [x19, #76]
   27dd0:	mov	x14, x26
   27dd4:	tbnz	w8, #31, 27e04 <vasnprintf@@Base+0x748>
   27dd8:	cmp	x21, x8
   27ddc:	b.ls	27dec <vasnprintf@@Base+0x730>  // b.plast
   27de0:	add	x9, x14, x23
   27de4:	ldrb	w9, [x9, x8]
   27de8:	cbnz	w9, 282e0 <vasnprintf@@Base+0xc24>
   27dec:	cmp	w0, w8
   27df0:	b.le	27e24 <vasnprintf@@Base+0x768>
   27df4:	mov	w8, w0
   27df8:	str	w0, [x19, #76]
   27dfc:	tbz	w0, #31, 27e24 <vasnprintf@@Base+0x768>
   27e00:	b	28114 <vasnprintf@@Base+0xa58>
   27e04:	ldr	x9, [x19, #48]
   27e08:	ldrb	w8, [x9, #1]
   27e0c:	cbz	w8, 27e18 <vasnprintf@@Base+0x75c>
   27e10:	strb	wzr, [x9, #1]
   27e14:	b	27e64 <vasnprintf@@Base+0x7a8>
   27e18:	tbnz	w0, #31, 28114 <vasnprintf@@Base+0xa58>
   27e1c:	mov	w8, w0
   27e20:	str	w0, [x19, #76]
   27e24:	add	w9, w8, #0x1
   27e28:	cmp	x21, x9
   27e2c:	b.hi	27fc4 <vasnprintf@@Base+0x908>  // b.pmore
   27e30:	mov	w9, #0x7ffffffe            	// #2147483646
   27e34:	cmp	x25, x9
   27e38:	b.hi	280ac <vasnprintf@@Base+0x9f0>  // b.pmore
   27e3c:	add	w8, w8, #0x2
   27e40:	adds	x8, x23, x8
   27e44:	lsl	x9, x24, #1
   27e48:	csinv	x10, x8, xzr, cc  // cc = lo, ul, last
   27e4c:	cmp	x24, #0x0
   27e50:	csinv	x8, x9, xzr, ge  // ge = tcont
   27e54:	cmp	x10, x8
   27e58:	csel	x9, x8, x10, cc  // cc = lo, ul, last
   27e5c:	cmp	x9, x24
   27e60:	b.hi	27f54 <vasnprintf@@Base+0x898>  // b.pmore
   27e64:	mov	w26, w27
   27e68:	b	27c30 <vasnprintf@@Base+0x574>
   27e6c:	ldr	x8, [x19, #120]
   27e70:	ldr	x9, [x22, #80]
   27e74:	add	x8, x8, x9, lsl #5
   27e78:	ldrb	w8, [x8, #16]
   27e7c:	b	27ccc <vasnprintf@@Base+0x610>
   27e80:	ldr	x8, [x19, #120]
   27e84:	ldr	x9, [x22, #80]
   27e88:	add	x8, x8, x9, lsl #5
   27e8c:	ldrsh	w8, [x8, #16]
   27e90:	b	27ccc <vasnprintf@@Base+0x610>
   27e94:	ldr	x8, [x19, #120]
   27e98:	ldr	x9, [x22, #80]
   27e9c:	add	x8, x8, x9, lsl #5
   27ea0:	ldrh	w8, [x8, #16]
   27ea4:	b	27ccc <vasnprintf@@Base+0x610>
   27ea8:	ldr	x8, [x19, #120]
   27eac:	ldr	x9, [x22, #80]
   27eb0:	cmp	w28, #0x2
   27eb4:	add	x8, x8, x9, lsl #5
   27eb8:	ldr	d0, [x8, #16]
   27ebc:	b.eq	27f1c <vasnprintf@@Base+0x860>  // b.none
   27ec0:	cmp	w28, #0x1
   27ec4:	b.eq	27f38 <vasnprintf@@Base+0x87c>  // b.none
   27ec8:	cbnz	w28, 282e0 <vasnprintf@@Base+0xc24>
   27ecc:	ldr	x2, [x19, #64]
   27ed0:	add	x0, x14, x23
   27ed4:	add	x3, x19, #0x4c
   27ed8:	mov	x1, x21
   27edc:	bl	a590 <snprintf@plt>
   27ee0:	b	27dcc <vasnprintf@@Base+0x710>
   27ee4:	ldp	w3, w4, [x19, #80]
   27ee8:	ldr	x2, [x19, #64]
   27eec:	add	x0, x14, x23
   27ef0:	add	x5, x19, #0x4c
   27ef4:	mov	x1, x21
   27ef8:	bl	a590 <snprintf@plt>
   27efc:	b	27dcc <vasnprintf@@Base+0x710>
   27f00:	ldr	w3, [x19, #80]
   27f04:	ldr	x2, [x19, #64]
   27f08:	add	x0, x14, x23
   27f0c:	add	x4, x19, #0x4c
   27f10:	mov	x1, x21
   27f14:	bl	a590 <snprintf@plt>
   27f18:	b	27dcc <vasnprintf@@Base+0x710>
   27f1c:	ldp	w3, w4, [x19, #80]
   27f20:	ldr	x2, [x19, #64]
   27f24:	add	x0, x14, x23
   27f28:	add	x5, x19, #0x4c
   27f2c:	mov	x1, x21
   27f30:	bl	a590 <snprintf@plt>
   27f34:	b	27dcc <vasnprintf@@Base+0x710>
   27f38:	ldr	w3, [x19, #80]
   27f3c:	ldr	x2, [x19, #64]
   27f40:	add	x0, x14, x23
   27f44:	add	x4, x19, #0x4c
   27f48:	mov	x1, x21
   27f4c:	bl	a590 <snprintf@plt>
   27f50:	b	27dcc <vasnprintf@@Base+0x710>
   27f54:	cmp	x24, #0x0
   27f58:	mov	w10, #0xc                   	// #12
   27f5c:	csel	x8, x10, x8, eq  // eq = none
   27f60:	cmp	x9, x8
   27f64:	csel	x24, x9, x8, hi  // hi = pmore
   27f68:	cmn	x24, #0x1
   27f6c:	b.eq	28020 <vasnprintf@@Base+0x964>  // b.none
   27f70:	cmp	x14, x20
   27f74:	b.eq	27f8c <vasnprintf@@Base+0x8d0>  // b.none
   27f78:	cbz	x14, 27f8c <vasnprintf@@Base+0x8d0>
   27f7c:	mov	x0, x14
   27f80:	mov	x1, x24
   27f84:	bl	a860 <realloc@plt>
   27f88:	b	27f94 <vasnprintf@@Base+0x8d8>
   27f8c:	mov	x0, x24
   27f90:	bl	a660 <malloc@plt>
   27f94:	mov	x21, x0
   27f98:	mov	x14, x26
   27f9c:	cbz	x0, 28020 <vasnprintf@@Base+0x964>
   27fa0:	mov	w26, w27
   27fa4:	cbz	x23, 27c2c <vasnprintf@@Base+0x570>
   27fa8:	cmp	x14, x20
   27fac:	b.ne	27c2c <vasnprintf@@Base+0x570>  // b.any
   27fb0:	mov	x0, x21
   27fb4:	mov	x1, x20
   27fb8:	mov	x2, x23
   27fbc:	bl	a2f0 <memcpy@plt>
   27fc0:	b	27c2c <vasnprintf@@Base+0x570>
   27fc4:	add	x23, x23, w8, uxtw
   27fc8:	ldr	x8, [x19, #56]
   27fcc:	ldr	w9, [x19, #12]
   27fd0:	ldr	x27, [x19, #16]
   27fd4:	add	x28, x19, #0x168
   27fd8:	str	w9, [x8]
   27fdc:	b	27b30 <vasnprintf@@Base+0x474>
   27fe0:	add	x8, x9, x8, lsl #5
   27fe4:	ldr	x8, [x8, #16]
   27fe8:	strb	w23, [x8]
   27fec:	b	27b30 <vasnprintf@@Base+0x474>
   27ff0:	add	x8, x9, x8, lsl #5
   27ff4:	ldr	x8, [x8, #16]
   27ff8:	strh	w23, [x8]
   27ffc:	b	27b30 <vasnprintf@@Base+0x474>
   28000:	add	x8, x9, x8, lsl #5
   28004:	ldr	x8, [x8, #16]
   28008:	str	w23, [x8]
   2800c:	b	27b30 <vasnprintf@@Base+0x474>
   28010:	cmp	w26, #0xc
   28014:	b.ne	27a5c <vasnprintf@@Base+0x3a0>  // b.any
   28018:	mov	w8, #0x4c                  	// #76
   2801c:	b	27a58 <vasnprintf@@Base+0x39c>
   28020:	add	x28, x19, #0x168
   28024:	ldr	x22, [x19, #32]
   28028:	cmp	x14, x20
   2802c:	b.eq	2803c <vasnprintf@@Base+0x980>  // b.none
   28030:	cbz	x14, 2803c <vasnprintf@@Base+0x980>
   28034:	mov	x0, x14
   28038:	bl	aaa0 <free@plt>
   2803c:	cbz	x22, 28048 <vasnprintf@@Base+0x98c>
   28040:	mov	x0, x22
   28044:	bl	aaa0 <free@plt>
   28048:	ldr	x0, [x28, #8]
   2804c:	add	x8, x19, #0x168
   28050:	add	x8, x8, #0x20
   28054:	cmp	x0, x8
   28058:	b.eq	28060 <vasnprintf@@Base+0x9a4>  // b.none
   2805c:	bl	aaa0 <free@plt>
   28060:	ldr	x0, [x19, #120]
   28064:	add	x8, x19, #0x70
   28068:	add	x8, x8, #0x10
   2806c:	cmp	x0, x8
   28070:	b.eq	28078 <vasnprintf@@Base+0x9bc>  // b.none
   28074:	bl	aaa0 <free@plt>
   28078:	bl	aec0 <__errno_location@plt>
   2807c:	mov	x20, xzr
   28080:	mov	w8, #0xc                   	// #12
   28084:	str	w8, [x0]
   28088:	mov	x0, x20
   2808c:	mov	sp, x29
   28090:	ldp	x20, x19, [sp, #80]
   28094:	ldp	x22, x21, [sp, #64]
   28098:	ldp	x24, x23, [sp, #48]
   2809c:	ldp	x26, x25, [sp, #32]
   280a0:	ldp	x28, x27, [sp, #16]
   280a4:	ldp	x29, x30, [sp], #96
   280a8:	ret
   280ac:	cmp	x14, x20
   280b0:	b.eq	280c0 <vasnprintf@@Base+0xa04>  // b.none
   280b4:	cbz	x14, 280c0 <vasnprintf@@Base+0xa04>
   280b8:	mov	x0, x14
   280bc:	bl	aaa0 <free@plt>
   280c0:	ldr	x0, [x19, #32]
   280c4:	add	x20, x19, #0x168
   280c8:	cbz	x0, 280d0 <vasnprintf@@Base+0xa14>
   280cc:	bl	aaa0 <free@plt>
   280d0:	ldr	x0, [x20, #8]
   280d4:	add	x8, x19, #0x168
   280d8:	add	x8, x8, #0x20
   280dc:	cmp	x0, x8
   280e0:	b.eq	280e8 <vasnprintf@@Base+0xa2c>  // b.none
   280e4:	bl	aaa0 <free@plt>
   280e8:	ldr	x0, [x19, #120]
   280ec:	add	x8, x19, #0x70
   280f0:	add	x8, x8, #0x10
   280f4:	cmp	x0, x8
   280f8:	b.eq	28100 <vasnprintf@@Base+0xa44>  // b.none
   280fc:	bl	aaa0 <free@plt>
   28100:	ldr	x9, [x19, #56]
   28104:	mov	x20, xzr
   28108:	mov	w8, #0x4b                  	// #75
   2810c:	str	w8, [x9]
   28110:	b	28088 <vasnprintf@@Base+0x9cc>
   28114:	ldr	x8, [x19, #56]
   28118:	add	x23, x19, #0x168
   2811c:	ldr	w21, [x8]
   28120:	cbnz	w21, 28234 <vasnprintf@@Base+0xb78>
   28124:	ldrb	w8, [x22, #72]
   28128:	orr	w8, w8, #0x10
   2812c:	cmp	w8, #0x73
   28130:	b.ne	28230 <vasnprintf@@Base+0xb74>  // b.any
   28134:	mov	w21, #0x54                  	// #84
   28138:	b	28234 <vasnprintf@@Base+0xb78>
   2813c:	adds	x8, x23, #0x1
   28140:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   28144:	cmp	x8, x24
   28148:	b.ls	28198 <vasnprintf@@Base+0xadc>  // b.plast
   2814c:	lsl	x9, x24, #1
   28150:	cmp	x24, #0x0
   28154:	csinv	x9, x9, xzr, ge  // ge = tcont
   28158:	mov	w10, #0xc                   	// #12
   2815c:	csel	x9, x10, x9, eq  // eq = none
   28160:	ldr	x22, [x19, #32]
   28164:	cmp	x8, x9
   28168:	csel	x24, x8, x9, hi  // hi = pmore
   2816c:	cmn	x24, #0x1
   28170:	b.eq	28028 <vasnprintf@@Base+0x96c>  // b.none
   28174:	mov	x26, x23
   28178:	cmp	x14, x20
   2817c:	b.eq	28294 <vasnprintf@@Base+0xbd8>  // b.none
   28180:	cbz	x14, 28294 <vasnprintf@@Base+0xbd8>
   28184:	mov	x0, x14
   28188:	mov	x1, x24
   2818c:	mov	x23, x14
   28190:	bl	a860 <realloc@plt>
   28194:	b	282a0 <vasnprintf@@Base+0xbe4>
   28198:	ldr	x22, [x19, #32]
   2819c:	mov	x21, x14
   281a0:	ldr	x25, [x19]
   281a4:	cmp	x21, x20
   281a8:	strb	wzr, [x21, x23]
   281ac:	b.eq	281ec <vasnprintf@@Base+0xb30>  // b.none
   281b0:	add	x1, x23, #0x1
   281b4:	cmp	x1, x24
   281b8:	b.cs	281e8 <vasnprintf@@Base+0xb2c>  // b.hs, b.nlast
   281bc:	mov	x0, x21
   281c0:	bl	a860 <realloc@plt>
   281c4:	cmp	x0, #0x0
   281c8:	csel	x20, x21, x0, eq  // eq = none
   281cc:	b	281ec <vasnprintf@@Base+0xb30>
   281d0:	ldr	x22, [x19, #32]
   281d4:	ldr	x14, [x19, #56]
   281d8:	add	x28, x19, #0x168
   281dc:	b	28028 <vasnprintf@@Base+0x96c>
   281e0:	ldr	x22, [x19, #32]
   281e4:	b	282cc <vasnprintf@@Base+0xc10>
   281e8:	mov	x20, x21
   281ec:	cbz	x22, 281f8 <vasnprintf@@Base+0xb3c>
   281f0:	mov	x0, x22
   281f4:	bl	aaa0 <free@plt>
   281f8:	ldr	x0, [x28, #8]
   281fc:	add	x8, x19, #0x168
   28200:	add	x8, x8, #0x20
   28204:	cmp	x0, x8
   28208:	b.eq	28210 <vasnprintf@@Base+0xb54>  // b.none
   2820c:	bl	aaa0 <free@plt>
   28210:	ldr	x0, [x19, #120]
   28214:	add	x8, x19, #0x70
   28218:	add	x8, x8, #0x10
   2821c:	cmp	x0, x8
   28220:	b.eq	28228 <vasnprintf@@Base+0xb6c>  // b.none
   28224:	bl	aaa0 <free@plt>
   28228:	str	x23, [x25]
   2822c:	b	28088 <vasnprintf@@Base+0x9cc>
   28230:	mov	w21, #0x16                  	// #22
   28234:	cmp	x14, x20
   28238:	b.eq	28248 <vasnprintf@@Base+0xb8c>  // b.none
   2823c:	cbz	x14, 28248 <vasnprintf@@Base+0xb8c>
   28240:	mov	x0, x14
   28244:	bl	aaa0 <free@plt>
   28248:	ldr	x0, [x19, #32]
   2824c:	cbz	x0, 28254 <vasnprintf@@Base+0xb98>
   28250:	bl	aaa0 <free@plt>
   28254:	ldr	x0, [x23, #8]
   28258:	add	x8, x19, #0x168
   2825c:	add	x8, x8, #0x20
   28260:	cmp	x0, x8
   28264:	b.eq	2826c <vasnprintf@@Base+0xbb0>  // b.none
   28268:	bl	aaa0 <free@plt>
   2826c:	ldr	x0, [x19, #120]
   28270:	add	x8, x19, #0x70
   28274:	add	x8, x8, #0x10
   28278:	cmp	x0, x8
   2827c:	b.eq	28284 <vasnprintf@@Base+0xbc8>  // b.none
   28280:	bl	aaa0 <free@plt>
   28284:	ldr	x8, [x19, #56]
   28288:	mov	x20, xzr
   2828c:	str	w21, [x8]
   28290:	b	28088 <vasnprintf@@Base+0x9cc>
   28294:	mov	x0, x24
   28298:	mov	x23, x14
   2829c:	bl	a660 <malloc@plt>
   282a0:	mov	x21, x0
   282a4:	cbz	x0, 282cc <vasnprintf@@Base+0xc10>
   282a8:	cbz	x26, 282d4 <vasnprintf@@Base+0xc18>
   282ac:	cmp	x23, x20
   282b0:	b.ne	282d4 <vasnprintf@@Base+0xc18>  // b.any
   282b4:	mov	x0, x21
   282b8:	mov	x1, x20
   282bc:	mov	x2, x26
   282c0:	mov	x23, x26
   282c4:	bl	a2f0 <memcpy@plt>
   282c8:	b	281a0 <vasnprintf@@Base+0xae4>
   282cc:	mov	x14, x23
   282d0:	b	28028 <vasnprintf@@Base+0x96c>
   282d4:	ldr	x25, [x19]
   282d8:	mov	x23, x26
   282dc:	b	281a4 <vasnprintf@@Base+0xae8>
   282e0:	bl	a980 <abort@plt>
   282e4:	nop
   282e8:	adrp	x2, 3d000 <base_len@@Base+0x2a06c>
   282ec:	mov	x1, #0x0                   	// #0
   282f0:	ldr	x2, [x2, #1696]
   282f4:	b	a520 <__cxa_atexit@plt>
   282f8:	mov	x2, x1
   282fc:	mov	x1, x0
   28300:	mov	w0, #0x0                   	// #0
   28304:	b	af10 <__xstat@plt>
   28308:	mov	x2, x1
   2830c:	mov	w1, w0
   28310:	mov	w0, #0x0                   	// #0
   28314:	b	ad60 <__fxstat@plt>
   28318:	mov	x2, x1
   2831c:	mov	x1, x0
   28320:	mov	w0, #0x0                   	// #0
   28324:	b	ac90 <__lxstat@plt>
   28328:	mov	x4, x1
   2832c:	mov	x5, x2
   28330:	mov	w1, w0
   28334:	mov	x2, x4
   28338:	mov	w0, #0x0                   	// #0
   2833c:	mov	w4, w3
   28340:	mov	x3, x5
   28344:	b	afe0 <__fxstatat@plt>

Disassembly of section .fini:

0000000000028348 <.fini>:
   28348:	stp	x29, x30, [sp, #-16]!
   2834c:	mov	x29, sp
   28350:	ldp	x29, x30, [sp], #16
   28354:	ret
