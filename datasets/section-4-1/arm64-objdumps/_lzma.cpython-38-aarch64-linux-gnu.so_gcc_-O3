
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 17000 <PyInit__lzma@@Base+0x12728>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0x2288>:
    2650:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	nop
    2668:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    266c:	add	x0, x0, #0x9d8
    2670:	adrp	x1, 18000 <PyInit__lzma@@Base+0x13728>
    2674:	add	x1, x1, #0x9d8
    2678:	cmp	x1, x0
    267c:	b.eq	2694 <_PyDict_SetItemId@plt+0x54>  // b.none
    2680:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12728>
    2684:	ldr	x1, [x1, #3976]
    2688:	cbz	x1, 2694 <_PyDict_SetItemId@plt+0x54>
    268c:	mov	x16, x1
    2690:	br	x16
    2694:	ret
    2698:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    269c:	add	x0, x0, #0x9d8
    26a0:	adrp	x1, 18000 <PyInit__lzma@@Base+0x13728>
    26a4:	add	x1, x1, #0x9d8
    26a8:	sub	x1, x1, x0
    26ac:	lsr	x2, x1, #63
    26b0:	add	x1, x2, x1, asr #3
    26b4:	cmp	xzr, x1, asr #1
    26b8:	asr	x1, x1, #1
    26bc:	b.eq	26d4 <_PyDict_SetItemId@plt+0x94>  // b.none
    26c0:	adrp	x2, 17000 <PyInit__lzma@@Base+0x12728>
    26c4:	ldr	x2, [x2, #4064]
    26c8:	cbz	x2, 26d4 <_PyDict_SetItemId@plt+0x94>
    26cc:	mov	x16, x2
    26d0:	br	x16
    26d4:	ret
    26d8:	stp	x29, x30, [sp, #-32]!
    26dc:	mov	x29, sp
    26e0:	str	x19, [sp, #16]
    26e4:	adrp	x19, 18000 <PyInit__lzma@@Base+0x13728>
    26e8:	ldrb	w0, [x19, #2520]
    26ec:	cbnz	w0, 2714 <_PyDict_SetItemId@plt+0xd4>
    26f0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    26f4:	ldr	x0, [x0, #3992]
    26f8:	cbz	x0, 2708 <_PyDict_SetItemId@plt+0xc8>
    26fc:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    2700:	ldr	x0, [x0, #560]
    2704:	bl	22b0 <__cxa_finalize@plt>
    2708:	bl	2668 <_PyDict_SetItemId@plt+0x28>
    270c:	mov	w0, #0x1                   	// #1
    2710:	strb	w0, [x19, #2520]
    2714:	ldr	x19, [sp, #16]
    2718:	ldp	x29, x30, [sp], #32
    271c:	ret
    2720:	b	2698 <_PyDict_SetItemId@plt+0x58>
    2724:	nop
    2728:	mov	x0, x1
    272c:	b	24d0 <PyMem_RawFree@plt>
    2730:	cbz	x2, 2744 <_PyDict_SetItemId@plt+0x104>
    2734:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    2738:	udiv	x0, x0, x2
    273c:	cmp	x0, x1
    2740:	b.cc	274c <_PyDict_SetItemId@plt+0x10c>  // b.lo, b.ul, b.last
    2744:	mul	x0, x2, x1
    2748:	b	22c0 <PyMem_RawMalloc@plt>
    274c:	mov	x0, #0x0                   	// #0
    2750:	ret
    2754:	nop
    2758:	stp	x29, x30, [sp, #-16]!
    275c:	cmp	w0, #0x7
    2760:	mov	x29, sp
    2764:	b.eq	28b8 <_PyDict_SetItemId@plt+0x278>  // b.none
    2768:	mov	w2, w0
    276c:	b.hi	27d8 <_PyDict_SetItemId@plt+0x198>  // b.pmore
    2770:	cmp	w0, #0x4
    2774:	b.eq	283c <_PyDict_SetItemId@plt+0x1fc>  // b.none
    2778:	b.ls	27a4 <_PyDict_SetItemId@plt+0x164>  // b.plast
    277c:	cmp	w0, #0x5
    2780:	b.eq	2848 <_PyDict_SetItemId@plt+0x208>  // b.none
    2784:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    2788:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    278c:	add	x1, x1, #0xe90
    2790:	ldr	x0, [x0, #2528]
    2794:	bl	2350 <PyErr_SetString@plt>
    2798:	mov	w0, #0x1                   	// #1
    279c:	ldp	x29, x30, [sp], #16
    27a0:	ret
    27a4:	cmp	w0, #0x2
    27a8:	mov	w0, #0x0                   	// #0
    27ac:	b.ls	279c <_PyDict_SetItemId@plt+0x15c>  // b.plast
    27b0:	cmp	w2, #0x3
    27b4:	b.ne	2858 <_PyDict_SetItemId@plt+0x218>  // b.any
    27b8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    27bc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27c0:	add	x1, x1, #0xe70
    27c4:	ldr	x0, [x0, #2528]
    27c8:	bl	2350 <PyErr_SetString@plt>
    27cc:	mov	w0, #0x1                   	// #1
    27d0:	ldp	x29, x30, [sp], #16
    27d4:	ret
    27d8:	cmp	w0, #0xa
    27dc:	b.eq	2878 <_PyDict_SetItemId@plt+0x238>  // b.none
    27e0:	b.ls	280c <_PyDict_SetItemId@plt+0x1cc>  // b.plast
    27e4:	cmp	w0, #0xb
    27e8:	b.ne	2858 <_PyDict_SetItemId@plt+0x218>  // b.any
    27ec:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    27f0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27f4:	add	x1, x1, #0xf30
    27f8:	ldr	x0, [x0, #2528]
    27fc:	bl	2350 <PyErr_SetString@plt>
    2800:	mov	w0, #0x1                   	// #1
    2804:	ldp	x29, x30, [sp], #16
    2808:	ret
    280c:	cmp	w0, #0x8
    2810:	b.eq	2898 <_PyDict_SetItemId@plt+0x258>  // b.none
    2814:	cmp	w0, #0x9
    2818:	b.ne	2858 <_PyDict_SetItemId@plt+0x218>  // b.any
    281c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    2820:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2824:	add	x1, x1, #0xef8
    2828:	ldr	x0, [x0, #2528]
    282c:	bl	2350 <PyErr_SetString@plt>
    2830:	mov	w0, #0x1                   	// #1
    2834:	ldp	x29, x30, [sp], #16
    2838:	ret
    283c:	mov	w0, #0x0                   	// #0
    2840:	ldp	x29, x30, [sp], #16
    2844:	ret
    2848:	bl	2300 <PyErr_NoMemory@plt>
    284c:	mov	w0, #0x1                   	// #1
    2850:	ldp	x29, x30, [sp], #16
    2854:	ret
    2858:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    285c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2860:	add	x1, x1, #0xf40
    2864:	ldr	x0, [x0, #2528]
    2868:	bl	25b0 <PyErr_Format@plt>
    286c:	mov	w0, #0x1                   	// #1
    2870:	ldp	x29, x30, [sp], #16
    2874:	ret
    2878:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    287c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2880:	add	x1, x1, #0xf10
    2884:	ldr	x0, [x0, #2528]
    2888:	bl	2350 <PyErr_SetString@plt>
    288c:	mov	w0, #0x1                   	// #1
    2890:	ldp	x29, x30, [sp], #16
    2894:	ret
    2898:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    289c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    28a0:	add	x1, x1, #0xed8
    28a4:	ldr	x0, [x0, #2528]
    28a8:	bl	2350 <PyErr_SetString@plt>
    28ac:	mov	w0, #0x1                   	// #1
    28b0:	ldp	x29, x30, [sp], #16
    28b4:	ret
    28b8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    28bc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    28c0:	add	x1, x1, #0xeb0
    28c4:	ldr	x0, [x0, #2528]
    28c8:	bl	2350 <PyErr_SetString@plt>
    28cc:	mov	w0, #0x1                   	// #1
    28d0:	ldp	x29, x30, [sp], #16
    28d4:	ret
    28d8:	stp	x29, x30, [sp, #-32]!
    28dc:	mov	x29, sp
    28e0:	str	x19, [sp, #16]
    28e4:	mov	x19, x0
    28e8:	ldr	x0, [x0, #200]
    28ec:	cbz	x0, 28f4 <_PyDict_SetItemId@plt+0x2b4>
    28f0:	bl	2270 <PyMem_Free@plt>
    28f4:	add	x0, x19, #0x28
    28f8:	bl	24c0 <lzma_end@plt>
    28fc:	ldr	x0, [x19, #184]
    2900:	cbz	x0, 2918 <_PyDict_SetItemId@plt+0x2d8>
    2904:	ldr	x1, [x0]
    2908:	str	xzr, [x19, #184]
    290c:	sub	x1, x1, #0x1
    2910:	str	x1, [x0]
    2914:	cbz	x1, 2940 <_PyDict_SetItemId@plt+0x300>
    2918:	ldr	x0, [x19, #216]
    291c:	cbz	x0, 2924 <_PyDict_SetItemId@plt+0x2e4>
    2920:	bl	2630 <PyThread_free_lock@plt>
    2924:	ldr	x1, [x19, #8]
    2928:	mov	x0, x19
    292c:	ldr	x19, [sp, #16]
    2930:	ldp	x29, x30, [sp], #32
    2934:	ldr	x1, [x1, #320]
    2938:	mov	x16, x1
    293c:	br	x16
    2940:	bl	22f0 <_Py_Dealloc@plt>
    2944:	b	2918 <_PyDict_SetItemId@plt+0x2d8>
    2948:	stp	x29, x30, [sp, #-32]!
    294c:	mov	x29, sp
    2950:	str	x19, [sp, #16]
    2954:	mov	x19, x0
    2958:	add	x0, x0, #0x28
    295c:	bl	24c0 <lzma_end@plt>
    2960:	ldr	x0, [x19, #184]
    2964:	cbz	x0, 296c <_PyDict_SetItemId@plt+0x32c>
    2968:	bl	2630 <PyThread_free_lock@plt>
    296c:	ldr	x1, [x19, #8]
    2970:	mov	x0, x19
    2974:	ldr	x19, [sp, #16]
    2978:	ldp	x29, x30, [sp], #32
    297c:	ldr	x1, [x1, #320]
    2980:	mov	x16, x1
    2984:	br	x16
    2988:	stp	x29, x30, [sp, #-32]!
    298c:	mov	x29, sp
    2990:	stp	x19, x20, [sp, #16]
    2994:	mov	x20, x1
    2998:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    299c:	mov	x19, x0
    29a0:	bl	2480 <PyErr_Occurred@plt>
    29a4:	cbz	x0, 29b8 <_PyDict_SetItemId@plt+0x378>
    29a8:	mov	w0, #0x0                   	// #0
    29ac:	ldp	x19, x20, [sp, #16]
    29b0:	ldp	x29, x30, [sp], #32
    29b4:	ret
    29b8:	tst	x19, #0xffffffff00000000
    29bc:	b.ne	29d4 <_PyDict_SetItemId@plt+0x394>  // b.any
    29c0:	str	w19, [x20]
    29c4:	mov	w0, #0x1                   	// #1
    29c8:	ldp	x19, x20, [sp, #16]
    29cc:	ldp	x29, x30, [sp], #32
    29d0:	ret
    29d4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    29d8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    29dc:	add	x1, x1, #0xf68
    29e0:	ldr	x0, [x0, #4040]
    29e4:	ldr	x0, [x0]
    29e8:	bl	2350 <PyErr_SetString@plt>
    29ec:	mov	w0, #0x0                   	// #0
    29f0:	ldp	x19, x20, [sp, #16]
    29f4:	ldp	x29, x30, [sp], #32
    29f8:	ret
    29fc:	nop
    2a00:	stp	x29, x30, [sp, #-32]!
    2a04:	mov	x29, sp
    2a08:	stp	x19, x20, [sp, #16]
    2a0c:	mov	x20, x1
    2a10:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2a14:	mov	x19, x0
    2a18:	bl	2480 <PyErr_Occurred@plt>
    2a1c:	cbz	x0, 2a30 <_PyDict_SetItemId@plt+0x3f0>
    2a20:	mov	w0, #0x0                   	// #0
    2a24:	ldp	x19, x20, [sp, #16]
    2a28:	ldp	x29, x30, [sp], #32
    2a2c:	ret
    2a30:	tst	x19, #0xffffffff00000000
    2a34:	b.ne	2a4c <_PyDict_SetItemId@plt+0x40c>  // b.any
    2a38:	str	w19, [x20]
    2a3c:	mov	w0, #0x1                   	// #1
    2a40:	ldp	x19, x20, [sp, #16]
    2a44:	ldp	x29, x30, [sp], #32
    2a48:	ret
    2a4c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    2a50:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2a54:	add	x1, x1, #0xf98
    2a58:	ldr	x0, [x0, #4040]
    2a5c:	ldr	x0, [x0]
    2a60:	bl	2350 <PyErr_SetString@plt>
    2a64:	mov	w0, #0x0                   	// #0
    2a68:	ldp	x19, x20, [sp, #16]
    2a6c:	ldp	x29, x30, [sp], #32
    2a70:	ret
    2a74:	nop
    2a78:	stp	x29, x30, [sp, #-32]!
    2a7c:	mov	x29, sp
    2a80:	stp	x19, x20, [sp, #16]
    2a84:	mov	x20, x1
    2a88:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2a8c:	mov	x19, x0
    2a90:	bl	2480 <PyErr_Occurred@plt>
    2a94:	cbz	x0, 2aa8 <_PyDict_SetItemId@plt+0x468>
    2a98:	mov	w0, #0x0                   	// #0
    2a9c:	ldp	x19, x20, [sp, #16]
    2aa0:	ldp	x29, x30, [sp], #32
    2aa4:	ret
    2aa8:	tst	x19, #0xffffffff00000000
    2aac:	b.ne	2ac4 <_PyDict_SetItemId@plt+0x484>  // b.any
    2ab0:	str	w19, [x20]
    2ab4:	mov	w0, #0x1                   	// #1
    2ab8:	ldp	x19, x20, [sp, #16]
    2abc:	ldp	x29, x30, [sp], #32
    2ac0:	ret
    2ac4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    2ac8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2acc:	add	x1, x1, #0xfc0
    2ad0:	ldr	x0, [x0, #4040]
    2ad4:	ldr	x0, [x0]
    2ad8:	bl	2350 <PyErr_SetString@plt>
    2adc:	mov	w0, #0x0                   	// #0
    2ae0:	ldp	x19, x20, [sp, #16]
    2ae4:	ldp	x29, x30, [sp], #32
    2ae8:	ret
    2aec:	nop
    2af0:	stp	x29, x30, [sp, #-32]!
    2af4:	adrp	x2, 17000 <PyInit__lzma@@Base+0x12728>
    2af8:	mov	x29, sp
    2afc:	str	x19, [sp, #16]
    2b00:	mov	x19, x1
    2b04:	ldr	x1, [x2, #3984]
    2b08:	ldr	x0, [x19, #8]
    2b0c:	cmp	x0, x1
    2b10:	b.eq	2b60 <_PyDict_SetItemId@plt+0x520>  // b.none
    2b14:	bl	25a0 <PyType_IsSubtype@plt>
    2b18:	cbnz	w0, 2b60 <_PyDict_SetItemId@plt+0x520>
    2b1c:	mov	x0, x19
    2b20:	bl	2600 <_PyLong_AsInt@plt>
    2b24:	mov	w19, w0
    2b28:	cmn	w0, #0x1
    2b2c:	b.eq	2b48 <_PyDict_SetItemId@plt+0x508>  // b.none
    2b30:	mov	w0, w19
    2b34:	bl	25c0 <lzma_check_is_supported@plt>
    2b38:	ldr	x19, [sp, #16]
    2b3c:	and	x0, x0, #0xff
    2b40:	ldp	x29, x30, [sp], #32
    2b44:	b	2430 <PyBool_FromLong@plt>
    2b48:	bl	2480 <PyErr_Occurred@plt>
    2b4c:	cbz	x0, 2b30 <_PyDict_SetItemId@plt+0x4f0>
    2b50:	mov	x0, #0x0                   	// #0
    2b54:	ldr	x19, [sp, #16]
    2b58:	ldp	x29, x30, [sp], #32
    2b5c:	ret
    2b60:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    2b64:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2b68:	add	x1, x1, #0xfe8
    2b6c:	ldr	x0, [x0, #4016]
    2b70:	ldr	x0, [x0]
    2b74:	bl	2350 <PyErr_SetString@plt>
    2b78:	mov	x0, #0x0                   	// #0
    2b7c:	ldr	x19, [sp, #16]
    2b80:	ldp	x29, x30, [sp], #32
    2b84:	ret
    2b88:	sub	sp, sp, #0xe0
    2b8c:	stp	x29, x30, [sp, #16]
    2b90:	add	x29, sp, #0x10
    2b94:	stp	x19, x20, [sp, #32]
    2b98:	mov	x19, x1
    2b9c:	mov	x1, x2
    2ba0:	stp	x21, x22, [sp, #48]
    2ba4:	mov	x21, x0
    2ba8:	stp	x23, x24, [sp, #64]
    2bac:	cbz	x3, 2cb0 <_PyDict_SetItemId@plt+0x670>
    2bb0:	ldr	x20, [x3, #16]
    2bb4:	stp	xzr, xzr, [sp, #144]
    2bb8:	add	x20, x2, x20
    2bbc:	stp	xzr, xzr, [sp, #160]
    2bc0:	stp	xzr, xzr, [sp, #176]
    2bc4:	stp	xzr, xzr, [sp, #192]
    2bc8:	stp	xzr, xzr, [sp, #208]
    2bcc:	add	x0, sp, #0x80
    2bd0:	str	x0, [sp]
    2bd4:	adrp	x4, 18000 <PyInit__lzma@@Base+0x13728>
    2bd8:	mov	x0, x19
    2bdc:	add	x4, x4, #0x580
    2be0:	mov	w7, #0x0                   	// #0
    2be4:	mov	w6, #0x2                   	// #2
    2be8:	mov	w5, #0x1                   	// #1
    2bec:	mov	x2, #0x0                   	// #0
    2bf0:	bl	2340 <_PyArg_UnpackKeywords@plt>
    2bf4:	mov	x19, x0
    2bf8:	cbz	x0, 2e4c <_PyDict_SetItemId@plt+0x80c>
    2bfc:	ldr	x0, [x19]
    2c00:	add	x22, sp, #0x90
    2c04:	mov	x1, x22
    2c08:	mov	w2, #0x0                   	// #0
    2c0c:	bl	2560 <PyObject_GetBuffer@plt>
    2c10:	cbnz	w0, 2e4c <_PyDict_SetItemId@plt+0x80c>
    2c14:	mov	x0, x22
    2c18:	mov	w1, #0x43                  	// #67
    2c1c:	bl	22d0 <PyBuffer_IsContiguous@plt>
    2c20:	cbz	w0, 2fd8 <_PyDict_SetItemId@plt+0x998>
    2c24:	cmp	x20, #0x1
    2c28:	b.eq	2ce4 <_PyDict_SetItemId@plt+0x6a4>  // b.none
    2c2c:	ldr	x0, [x19, #8]
    2c30:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12728>
    2c34:	ldr	x1, [x1, #3984]
    2c38:	ldr	x0, [x0, #8]
    2c3c:	cmp	x0, x1
    2c40:	b.eq	2f48 <_PyDict_SetItemId@plt+0x908>  // b.none
    2c44:	bl	25a0 <PyType_IsSubtype@plt>
    2c48:	cbnz	w0, 2f48 <_PyDict_SetItemId@plt+0x908>
    2c4c:	ldr	x0, [x19, #8]
    2c50:	bl	25f0 <PyNumber_Index@plt>
    2c54:	mov	x19, x0
    2c58:	cbz	x0, 2cdc <_PyDict_SetItemId@plt+0x69c>
    2c5c:	bl	23f0 <PyLong_AsSsize_t@plt>
    2c60:	mov	x23, x0
    2c64:	ldr	x1, [x19]
    2c68:	sub	x0, x1, #0x1
    2c6c:	str	x0, [x19]
    2c70:	cbz	x0, 2fbc <_PyDict_SetItemId@plt+0x97c>
    2c74:	cmn	x23, #0x1
    2c78:	b.eq	2cdc <_PyDict_SetItemId@plt+0x69c>  // b.none
    2c7c:	ldr	x0, [x21, #216]
    2c80:	mov	w1, #0x0                   	// #0
    2c84:	stp	x25, x26, [sp, #80]
    2c88:	bl	2320 <PyThread_acquire_lock@plt>
    2c8c:	cbnz	w0, 2cfc <_PyDict_SetItemId@plt+0x6bc>
    2c90:	bl	2580 <PyEval_SaveThread@plt>
    2c94:	mov	x19, x0
    2c98:	ldr	x0, [x21, #216]
    2c9c:	mov	w1, #0x1                   	// #1
    2ca0:	bl	2320 <PyThread_acquire_lock@plt>
    2ca4:	mov	x0, x19
    2ca8:	bl	2260 <PyEval_RestoreThread@plt>
    2cac:	b	2cfc <_PyDict_SetItemId@plt+0x6bc>
    2cb0:	stp	xzr, xzr, [sp, #144]
    2cb4:	sub	x0, x2, #0x1
    2cb8:	mov	x20, x2
    2cbc:	stp	xzr, xzr, [sp, #160]
    2cc0:	cmp	x0, #0x1
    2cc4:	stp	xzr, xzr, [sp, #176]
    2cc8:	stp	xzr, xzr, [sp, #192]
    2ccc:	stp	xzr, xzr, [sp, #208]
    2cd0:	b.hi	2bcc <_PyDict_SetItemId@plt+0x58c>  // b.pmore
    2cd4:	cbnz	x19, 2bfc <_PyDict_SetItemId@plt+0x5bc>
    2cd8:	b	2bcc <_PyDict_SetItemId@plt+0x58c>
    2cdc:	bl	2480 <PyErr_Occurred@plt>
    2ce0:	cbnz	x0, 2e4c <_PyDict_SetItemId@plt+0x80c>
    2ce4:	ldr	x0, [x21, #216]
    2ce8:	mov	x23, #0xffffffffffffffff    	// #-1
    2cec:	mov	w1, #0x0                   	// #0
    2cf0:	stp	x25, x26, [sp, #80]
    2cf4:	bl	2320 <PyThread_acquire_lock@plt>
    2cf8:	cbz	w0, 2c90 <_PyDict_SetItemId@plt+0x650>
    2cfc:	ldrb	w26, [x21, #180]
    2d00:	cbnz	w26, 2f9c <_PyDict_SetItemId@plt+0x95c>
    2d04:	ldr	x1, [x21, #40]
    2d08:	str	x27, [sp, #96]
    2d0c:	add	x19, x21, #0x28
    2d10:	ldr	x27, [sp, #144]
    2d14:	ldr	x20, [sp, #160]
    2d18:	cbz	x1, 2e7c <_PyDict_SetItemId@plt+0x83c>
    2d1c:	ldp	x4, x3, [x21, #200]
    2d20:	ldr	x2, [x19, #8]
    2d24:	add	x0, x1, x2
    2d28:	add	x25, x4, x3
    2d2c:	sub	x5, x3, x2
    2d30:	sub	x25, x25, x0
    2d34:	cmp	x20, x5
    2d38:	b.hi	3000 <_PyDict_SetItemId@plt+0x9c0>  // b.pmore
    2d3c:	cmp	x20, x25
    2d40:	b.hi	30cc <_PyDict_SetItemId@plt+0xa8c>  // b.pmore
    2d44:	mov	x2, x20
    2d48:	mov	x1, x27
    2d4c:	bl	2200 <memcpy@plt>
    2d50:	mov	w26, #0x1                   	// #1
    2d54:	ldr	x0, [x19, #8]
    2d58:	add	x20, x0, x20
    2d5c:	str	x20, [x19, #8]
    2d60:	mov	x0, #0x1fff                	// #8191
    2d64:	cmp	x23, x0
    2d68:	b.ls	2f68 <_PyDict_SetItemId@plt+0x928>  // b.plast
    2d6c:	mov	x1, #0x2000                	// #8192
    2d70:	mov	x0, #0x0                   	// #0
    2d74:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2d78:	str	x0, [sp, #120]
    2d7c:	cbz	x0, 2f20 <_PyDict_SetItemId@plt+0x8e0>
    2d80:	add	x1, x0, #0x20
    2d84:	add	x25, sp, #0x78
    2d88:	ldr	x0, [x0, #16]
    2d8c:	stp	x1, x0, [x19, #24]
    2d90:	bl	2580 <PyEval_SaveThread@plt>
    2d94:	mov	w1, #0x0                   	// #0
    2d98:	mov	x24, x0
    2d9c:	mov	x0, x19
    2da0:	bl	2250 <lzma_code@plt>
    2da4:	ldr	x1, [sp, #120]
    2da8:	mov	w20, w0
    2dac:	ldr	x22, [x19, #24]
    2db0:	add	x1, x1, #0x20
    2db4:	cmp	w0, #0xa
    2db8:	sub	x22, x22, x1
    2dbc:	b.eq	2ee4 <_PyDict_SetItemId@plt+0x8a4>  // b.none
    2dc0:	mov	x0, x24
    2dc4:	bl	2260 <PyEval_RestoreThread@plt>
    2dc8:	mov	w0, w20
    2dcc:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    2dd0:	cbnz	w0, 2f08 <_PyDict_SetItemId@plt+0x8c8>
    2dd4:	sub	w0, w20, #0x2
    2dd8:	tst	w0, #0xfffffffd
    2ddc:	b.ne	2dec <_PyDict_SetItemId@plt+0x7ac>  // b.any
    2de0:	mov	x0, x19
    2de4:	bl	24e0 <lzma_get_check@plt>
    2de8:	str	w0, [x21, #176]
    2dec:	cmp	w20, #0x1
    2df0:	b.eq	2fc8 <_PyDict_SetItemId@plt+0x988>  // b.none
    2df4:	ldr	x0, [x19, #32]
    2df8:	cbnz	x0, 2e88 <_PyDict_SetItemId@plt+0x848>
    2dfc:	ldr	x24, [sp, #120]
    2e00:	cmp	x23, x22
    2e04:	ldr	x1, [x24, #16]
    2e08:	b.eq	2e98 <_PyDict_SetItemId@plt+0x858>  // b.none
    2e0c:	add	x0, x1, #0x6
    2e10:	cmp	x23, #0x0
    2e14:	add	x1, x0, x1, asr #3
    2e18:	mov	x0, x25
    2e1c:	ccmp	x23, x1, #0x0, gt
    2e20:	csel	x1, x1, x23, ge  // ge = tcont
    2e24:	bl	2240 <_PyBytes_Resize@plt>
    2e28:	cmn	w0, #0x1
    2e2c:	b.eq	2f08 <_PyDict_SetItemId@plt+0x8c8>  // b.none
    2e30:	ldr	x0, [sp, #120]
    2e34:	add	x1, x0, #0x20
    2e38:	ldr	x0, [x0, #16]
    2e3c:	add	x1, x1, x22
    2e40:	sub	x22, x0, x22
    2e44:	stp	x1, x22, [x19, #24]
    2e48:	b	2d90 <_PyDict_SetItemId@plt+0x750>
    2e4c:	mov	x24, #0x0                   	// #0
    2e50:	ldr	x0, [sp, #152]
    2e54:	cbz	x0, 2e60 <_PyDict_SetItemId@plt+0x820>
    2e58:	add	x0, sp, #0x90
    2e5c:	bl	2290 <PyBuffer_Release@plt>
    2e60:	mov	x0, x24
    2e64:	ldp	x29, x30, [sp, #16]
    2e68:	ldp	x19, x20, [sp, #32]
    2e6c:	ldp	x21, x22, [sp, #48]
    2e70:	ldp	x23, x24, [sp, #64]
    2e74:	add	sp, sp, #0xe0
    2e78:	ret
    2e7c:	str	x27, [x21, #40]
    2e80:	str	x20, [x19, #8]
    2e84:	b	2d60 <_PyDict_SetItemId@plt+0x720>
    2e88:	ldr	x0, [x19, #8]
    2e8c:	cbnz	x0, 2d90 <_PyDict_SetItemId@plt+0x750>
    2e90:	ldr	x24, [sp, #120]
    2e94:	ldr	x1, [x24, #16]
    2e98:	cmp	x22, x1
    2e9c:	b.eq	2ebc <_PyDict_SetItemId@plt+0x87c>  // b.none
    2ea0:	mov	x1, x22
    2ea4:	add	x0, sp, #0x78
    2ea8:	bl	2240 <_PyBytes_Resize@plt>
    2eac:	cmn	w0, #0x1
    2eb0:	b.eq	2f08 <_PyDict_SetItemId@plt+0x8c8>  // b.none
    2eb4:	ldr	x24, [sp, #120]
    2eb8:	cbz	x24, 2f20 <_PyDict_SetItemId@plt+0x8e0>
    2ebc:	ldrb	w0, [x21, #180]
    2ec0:	ldr	x2, [x19, #8]
    2ec4:	cbz	w0, 2f7c <_PyDict_SetItemId@plt+0x93c>
    2ec8:	strb	wzr, [x21, #192]
    2ecc:	cbnz	x2, 306c <_PyDict_SetItemId@plt+0xa2c>
    2ed0:	ldr	x27, [sp, #96]
    2ed4:	ldr	x0, [x21, #216]
    2ed8:	bl	2520 <PyThread_release_lock@plt>
    2edc:	ldp	x25, x26, [sp, #80]
    2ee0:	b	2e50 <_PyDict_SetItemId@plt+0x810>
    2ee4:	ldr	x0, [x19, #8]
    2ee8:	cbnz	x0, 2f30 <_PyDict_SetItemId@plt+0x8f0>
    2eec:	ldr	x0, [x19, #32]
    2ef0:	cbz	x0, 2f30 <_PyDict_SetItemId@plt+0x8f0>
    2ef4:	mov	x0, x24
    2ef8:	bl	2260 <PyEval_RestoreThread@plt>
    2efc:	mov	w0, #0x0                   	// #0
    2f00:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    2f04:	cbz	w0, 2df4 <_PyDict_SetItemId@plt+0x7b4>
    2f08:	ldr	x0, [sp, #120]
    2f0c:	cbz	x0, 2f20 <_PyDict_SetItemId@plt+0x8e0>
    2f10:	ldr	x1, [x0]
    2f14:	sub	x1, x1, #0x1
    2f18:	str	x1, [x0]
    2f1c:	cbz	x1, 30b4 <_PyDict_SetItemId@plt+0xa74>
    2f20:	mov	x24, #0x0                   	// #0
    2f24:	ldr	x27, [sp, #96]
    2f28:	str	xzr, [x21, #40]
    2f2c:	b	2ed4 <_PyDict_SetItemId@plt+0x894>
    2f30:	mov	x0, x24
    2f34:	bl	2260 <PyEval_RestoreThread@plt>
    2f38:	mov	w0, w20
    2f3c:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    2f40:	cbz	w0, 2df4 <_PyDict_SetItemId@plt+0x7b4>
    2f44:	b	2f08 <_PyDict_SetItemId@plt+0x8c8>
    2f48:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    2f4c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2f50:	mov	x24, #0x0                   	// #0
    2f54:	add	x1, x1, #0xfe8
    2f58:	ldr	x0, [x0, #4016]
    2f5c:	ldr	x0, [x0]
    2f60:	bl	2350 <PyErr_SetString@plt>
    2f64:	b	2e50 <_PyDict_SetItemId@plt+0x810>
    2f68:	mov	x1, x23
    2f6c:	mov	x0, #0x0                   	// #0
    2f70:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2f74:	str	x0, [sp, #120]
    2f78:	b	2d7c <_PyDict_SetItemId@plt+0x73c>
    2f7c:	cbnz	x2, 3038 <_PyDict_SetItemId@plt+0x9f8>
    2f80:	ldr	x0, [x19, #32]
    2f84:	cmp	x0, #0x0
    2f88:	cset	w0, ne  // ne = any
    2f8c:	strb	w0, [x21, #192]
    2f90:	ldr	x27, [sp, #96]
    2f94:	str	xzr, [x21, #40]
    2f98:	b	2ed4 <_PyDict_SetItemId@plt+0x894>
    2f9c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    2fa0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    2fa4:	mov	x24, #0x0                   	// #0
    2fa8:	add	x1, x1, #0x48
    2fac:	ldr	x0, [x0, #4048]
    2fb0:	ldr	x0, [x0]
    2fb4:	bl	2350 <PyErr_SetString@plt>
    2fb8:	b	2ed4 <_PyDict_SetItemId@plt+0x894>
    2fbc:	mov	x0, x19
    2fc0:	bl	22f0 <_Py_Dealloc@plt>
    2fc4:	b	2c74 <_PyDict_SetItemId@plt+0x634>
    2fc8:	ldr	x24, [sp, #120]
    2fcc:	strb	w20, [x21, #180]
    2fd0:	ldr	x1, [x24, #16]
    2fd4:	b	2e98 <_PyDict_SetItemId@plt+0x858>
    2fd8:	ldr	x3, [x19]
    2fdc:	adrp	x2, 5000 <PyInit__lzma@@Base+0x728>
    2fe0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    2fe4:	add	x2, x2, #0x10
    2fe8:	add	x1, x1, #0x28
    2fec:	adrp	x0, 5000 <PyInit__lzma@@Base+0x728>
    2ff0:	mov	x24, #0x0                   	// #0
    2ff4:	add	x0, x0, #0x38
    2ff8:	bl	2400 <_PyArg_BadArgument@plt>
    2ffc:	b	2e50 <_PyDict_SetItemId@plt+0x810>
    3000:	add	x3, x20, x3
    3004:	sub	x22, x1, x4
    3008:	sub	x25, x3, x25
    300c:	mov	x0, x4
    3010:	mov	x1, x25
    3014:	bl	2380 <PyMem_Realloc@plt>
    3018:	mov	x24, x0
    301c:	cbz	x0, 3124 <_PyDict_SetItemId@plt+0xae4>
    3020:	ldr	x1, [x19, #8]
    3024:	add	x0, x0, x22
    3028:	str	x0, [x21, #40]
    302c:	add	x0, x0, x1
    3030:	stp	x24, x25, [x21, #200]
    3034:	b	2d44 <_PyDict_SetItemId@plt+0x704>
    3038:	strb	wzr, [x21, #192]
    303c:	cbnz	w26, 2ed0 <_PyDict_SetItemId@plt+0x890>
    3040:	ldr	x0, [x21, #200]
    3044:	cbz	x0, 30f4 <_PyDict_SetItemId@plt+0xab4>
    3048:	ldr	x1, [x21, #208]
    304c:	cmp	x1, x2
    3050:	b.cc	30e8 <_PyDict_SetItemId@plt+0xaa8>  // b.lo, b.ul, b.last
    3054:	ldr	x1, [x21, #40]
    3058:	bl	2200 <memcpy@plt>
    305c:	ldr	x0, [x21, #200]
    3060:	ldr	x27, [sp, #96]
    3064:	str	x0, [x21, #40]
    3068:	b	2ed4 <_PyDict_SetItemId@plt+0x894>
    306c:	ldr	x0, [x21, #40]
    3070:	mov	x1, x2
    3074:	ldr	x19, [x21, #184]
    3078:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    307c:	str	x0, [x21, #184]
    3080:	cbz	x19, 3094 <_PyDict_SetItemId@plt+0xa54>
    3084:	ldr	x1, [x19]
    3088:	sub	x1, x1, #0x1
    308c:	str	x1, [x19]
    3090:	cbz	x1, 30bc <_PyDict_SetItemId@plt+0xa7c>
    3094:	cbnz	x0, 2ed0 <_PyDict_SetItemId@plt+0x890>
    3098:	ldr	x0, [x24]
    309c:	sub	x0, x0, #0x1
    30a0:	str	x0, [x24]
    30a4:	cbz	x0, 3110 <_PyDict_SetItemId@plt+0xad0>
    30a8:	mov	x24, #0x0                   	// #0
    30ac:	ldr	x27, [sp, #96]
    30b0:	b	2ed4 <_PyDict_SetItemId@plt+0x894>
    30b4:	bl	22f0 <_Py_Dealloc@plt>
    30b8:	b	2f20 <_PyDict_SetItemId@plt+0x8e0>
    30bc:	mov	x0, x19
    30c0:	bl	22f0 <_Py_Dealloc@plt>
    30c4:	ldr	x0, [x21, #184]
    30c8:	b	3094 <_PyDict_SetItemId@plt+0xa54>
    30cc:	mov	x0, x4
    30d0:	bl	2210 <memmove@plt>
    30d4:	ldr	x1, [x19, #8]
    30d8:	ldr	x0, [x21, #200]
    30dc:	str	x0, [x21, #40]
    30e0:	add	x0, x0, x1
    30e4:	b	2d44 <_PyDict_SetItemId@plt+0x704>
    30e8:	bl	2270 <PyMem_Free@plt>
    30ec:	ldr	x2, [x19, #8]
    30f0:	str	xzr, [x21, #200]
    30f4:	mov	x0, x2
    30f8:	bl	2620 <PyMem_Malloc@plt>
    30fc:	str	x0, [x21, #200]
    3100:	cbz	x0, 313c <_PyDict_SetItemId@plt+0xafc>
    3104:	ldr	x2, [x19, #8]
    3108:	str	x2, [x21, #208]
    310c:	b	3054 <_PyDict_SetItemId@plt+0xa14>
    3110:	mov	x0, x24
    3114:	mov	x24, #0x0                   	// #0
    3118:	bl	22f0 <_Py_Dealloc@plt>
    311c:	ldr	x27, [sp, #96]
    3120:	b	2ed4 <_PyDict_SetItemId@plt+0x894>
    3124:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3128:	ldr	x0, [x0, #4000]
    312c:	ldr	x0, [x0]
    3130:	bl	2390 <PyErr_SetNone@plt>
    3134:	ldr	x27, [sp, #96]
    3138:	b	2ed4 <_PyDict_SetItemId@plt+0x894>
    313c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3140:	ldr	x0, [x0, #4000]
    3144:	ldr	x0, [x0]
    3148:	bl	2390 <PyErr_SetNone@plt>
    314c:	b	3098 <_PyDict_SetItemId@plt+0xa58>
    3150:	sub	sp, sp, #0xb0
    3154:	stp	x29, x30, [sp, #112]
    3158:	add	x29, sp, #0x70
    315c:	stp	x19, x20, [sp, #128]
    3160:	mov	x20, x1
    3164:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3168:	add	x1, x1, #0x68
    316c:	stp	x21, x22, [sp, #144]
    3170:	mov	x21, x0
    3174:	bl	2360 <PyMapping_GetItemString@plt>
    3178:	cbz	x0, 32d4 <_PyDict_SetItemId@plt+0xc94>
    317c:	mov	x19, x0
    3180:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3184:	ldr	x1, [x19]
    3188:	str	x0, [x20]
    318c:	sub	x1, x1, #0x1
    3190:	str	x1, [x19]
    3194:	cbz	x1, 32c8 <_PyDict_SetItemId@plt+0xc88>
    3198:	bl	2480 <PyErr_Occurred@plt>
    319c:	mov	x19, x0
    31a0:	cbz	x0, 31c0 <_PyDict_SetItemId@plt+0xb80>
    31a4:	mov	w21, #0x0                   	// #0
    31a8:	mov	w0, w21
    31ac:	ldp	x29, x30, [sp, #112]
    31b0:	ldp	x19, x20, [sp, #128]
    31b4:	ldp	x21, x22, [sp, #144]
    31b8:	add	sp, sp, #0xb0
    31bc:	ret
    31c0:	ldr	x2, [x20]
    31c4:	cmp	x2, #0x9
    31c8:	b.hi	3260 <_PyDict_SetItemId@plt+0xc20>  // b.pmore
    31cc:	cmp	x2, #0x3
    31d0:	b.hi	3328 <_PyDict_SetItemId@plt+0xce8>  // b.pmore
    31d4:	b.ne	3308 <_PyDict_SetItemId@plt+0xcc8>  // b.any
    31d8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    31dc:	adrp	x3, 18000 <PyInit__lzma@@Base+0x13728>
    31e0:	add	x3, x3, #0x580
    31e4:	mov	x1, x21
    31e8:	ldr	x0, [x0, #2536]
    31ec:	add	x3, x3, #0xa0
    31f0:	add	x6, sp, #0xa0
    31f4:	add	x4, sp, #0xa8
    31f8:	mov	w22, #0x1                   	// #1
    31fc:	adrp	x5, 2000 <memcpy@plt-0x200>
    3200:	adrp	x2, 5000 <PyInit__lzma@@Base+0x728>
    3204:	add	x5, x5, #0xa78
    3208:	add	x2, x2, #0x110
    320c:	str	w22, [sp, #160]
    3210:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3214:	mov	w21, w0
    3218:	cbz	w0, 349c <_PyDict_SetItemId@plt+0xe5c>
    321c:	mov	x0, #0x28                  	// #40
    3220:	bl	2620 <PyMem_Malloc@plt>
    3224:	mov	x19, x0
    3228:	cbz	x0, 34bc <_PyDict_SetItemId@plt+0xe7c>
    322c:	stp	xzr, xzr, [x0]
    3230:	mov	w21, w22
    3234:	stp	xzr, xzr, [x0, #16]
    3238:	str	xzr, [x0, #32]
    323c:	ldr	w0, [sp, #160]
    3240:	str	w0, [x19, #4]
    3244:	str	x19, [x20, #8]
    3248:	mov	w0, w21
    324c:	ldp	x29, x30, [sp, #112]
    3250:	ldp	x19, x20, [sp, #128]
    3254:	ldp	x21, x22, [sp, #144]
    3258:	add	sp, sp, #0xb0
    325c:	ret
    3260:	cmp	x2, #0x21
    3264:	b.eq	3278 <_PyDict_SetItemId@plt+0xc38>  // b.none
    3268:	mov	x0, #0x1                   	// #1
    326c:	movk	x0, #0x4000, lsl #48
    3270:	cmp	x2, x0
    3274:	b.ne	3308 <_PyDict_SetItemId@plt+0xcc8>  // b.any
    3278:	mov	x0, x21
    327c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3280:	add	x1, x1, #0xa0
    3284:	bl	2360 <PyMapping_GetItemString@plt>
    3288:	str	x0, [sp, #168]
    328c:	cbz	x0, 347c <_PyDict_SetItemId@plt+0xe3c>
    3290:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3294:	mov	x22, x0
    3298:	bl	2480 <PyErr_Occurred@plt>
    329c:	cbz	x0, 3390 <_PyDict_SetItemId@plt+0xd50>
    32a0:	ldr	x0, [sp, #168]
    32a4:	ldr	x1, [x0]
    32a8:	sub	x1, x1, #0x1
    32ac:	str	x1, [x0]
    32b0:	cbnz	x1, 34d4 <_PyDict_SetItemId@plt+0xe94>
    32b4:	mov	x19, #0x0                   	// #0
    32b8:	bl	22f0 <_Py_Dealloc@plt>
    32bc:	mov	w21, #0x0                   	// #0
    32c0:	str	x19, [x20, #8]
    32c4:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    32c8:	mov	x0, x19
    32cc:	bl	22f0 <_Py_Dealloc@plt>
    32d0:	b	3198 <_PyDict_SetItemId@plt+0xb58>
    32d4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    32d8:	ldr	x0, [x0, #4024]
    32dc:	ldr	x0, [x0]
    32e0:	bl	23a0 <PyErr_ExceptionMatches@plt>
    32e4:	cbz	w0, 31a4 <_PyDict_SetItemId@plt+0xb64>
    32e8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    32ec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    32f0:	mov	w21, #0x0                   	// #0
    32f4:	add	x1, x1, #0x70
    32f8:	ldr	x0, [x0, #4008]
    32fc:	ldr	x0, [x0]
    3300:	bl	2350 <PyErr_SetString@plt>
    3304:	b	31a8 <_PyDict_SetItemId@plt+0xb68>
    3308:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    330c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3310:	mov	w21, #0x0                   	// #0
    3314:	add	x1, x1, #0x170
    3318:	ldr	x0, [x0, #4008]
    331c:	ldr	x0, [x0]
    3320:	bl	25b0 <PyErr_Format@plt>
    3324:	b	31a8 <_PyDict_SetItemId@plt+0xb68>
    3328:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    332c:	adrp	x3, 18000 <PyInit__lzma@@Base+0x13728>
    3330:	add	x3, x3, #0x580
    3334:	mov	x1, x21
    3338:	ldr	x0, [x0, #2536]
    333c:	add	x3, x3, #0xc0
    3340:	add	x6, sp, #0xa0
    3344:	add	x4, sp, #0xa8
    3348:	adrp	x5, 2000 <memcpy@plt-0x200>
    334c:	adrp	x2, 5000 <PyInit__lzma@@Base+0x728>
    3350:	add	x5, x5, #0xa78
    3354:	add	x2, x2, #0x110
    3358:	str	wzr, [sp, #160]
    335c:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3360:	mov	w21, w0
    3364:	cbz	w0, 34e4 <_PyDict_SetItemId@plt+0xea4>
    3368:	mov	x0, #0x4                   	// #4
    336c:	bl	2620 <PyMem_Malloc@plt>
    3370:	mov	x19, x0
    3374:	cbz	x0, 34bc <_PyDict_SetItemId@plt+0xe7c>
    3378:	str	wzr, [x0]
    337c:	mov	w21, #0x1                   	// #1
    3380:	ldr	w0, [sp, #160]
    3384:	str	w0, [x19]
    3388:	str	x19, [x20, #8]
    338c:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    3390:	tst	x22, #0xffffffff00000000
    3394:	b.ne	3534 <_PyDict_SetItemId@plt+0xef4>  // b.any
    3398:	ldr	x0, [sp, #168]
    339c:	ldr	x1, [x0]
    33a0:	sub	x1, x1, #0x1
    33a4:	str	x1, [x0]
    33a8:	cbz	x1, 357c <_PyDict_SetItemId@plt+0xf3c>
    33ac:	mov	x0, #0x70                  	// #112
    33b0:	bl	2620 <PyMem_Malloc@plt>
    33b4:	mov	x19, x0
    33b8:	cbz	x0, 34bc <_PyDict_SetItemId@plt+0xe7c>
    33bc:	stp	xzr, xzr, [x0]
    33c0:	mov	w1, w22
    33c4:	stp	xzr, xzr, [x0, #16]
    33c8:	stp	xzr, xzr, [x0, #32]
    33cc:	stp	xzr, xzr, [x0, #48]
    33d0:	stp	xzr, xzr, [x0, #64]
    33d4:	stp	xzr, xzr, [x0, #80]
    33d8:	stp	xzr, xzr, [x0, #96]
    33dc:	bl	2610 <lzma_lzma_preset@plt>
    33e0:	tst	w0, #0xff
    33e4:	b.ne	3504 <_PyDict_SetItemId@plt+0xec4>  // b.any
    33e8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    33ec:	add	x8, x19, #0x2c
    33f0:	add	x9, x19, #0x28
    33f4:	add	x10, x19, #0x1c
    33f8:	ldr	x0, [x0, #2536]
    33fc:	add	x5, x19, #0x24
    3400:	add	x7, x19, #0x20
    3404:	add	x1, x19, #0x18
    3408:	add	x3, x19, #0x14
    340c:	adrp	x6, 2000 <memcpy@plt-0x200>
    3410:	adrp	x4, 2000 <memcpy@plt-0x200>
    3414:	add	x6, x6, #0xa78
    3418:	add	x4, x4, #0x988
    341c:	adrp	x2, 2000 <memcpy@plt-0x200>
    3420:	add	x2, x2, #0xa00
    3424:	stp	x6, x3, [sp]
    3428:	adrp	x3, 18000 <PyInit__lzma@@Base+0x13728>
    342c:	stp	x6, x1, [sp, #16]
    3430:	add	x3, x3, #0x580
    3434:	mov	x1, x21
    3438:	stp	x6, x10, [sp, #32]
    343c:	add	x3, x3, #0x40
    3440:	stp	x2, x7, [sp, #48]
    3444:	mov	x7, x19
    3448:	adrp	x2, 5000 <PyInit__lzma@@Base+0x728>
    344c:	stp	x6, x5, [sp, #64]
    3450:	add	x2, x2, #0xc8
    3454:	add	x5, sp, #0xa8
    3458:	stp	x4, x9, [sp, #80]
    345c:	add	x4, sp, #0xa0
    3460:	stp	x6, x8, [sp, #96]
    3464:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3468:	mov	w21, w0
    346c:	cbz	w0, 3550 <_PyDict_SetItemId@plt+0xf10>
    3470:	mov	w21, #0x1                   	// #1
    3474:	str	x19, [x20, #8]
    3478:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    347c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3480:	ldr	x0, [x0, #4024]
    3484:	ldr	x0, [x0]
    3488:	bl	23a0 <PyErr_ExceptionMatches@plt>
    348c:	cbz	w0, 34d4 <_PyDict_SetItemId@plt+0xe94>
    3490:	mov	w22, #0x6                   	// #6
    3494:	bl	2420 <PyErr_Clear@plt>
    3498:	b	33ac <_PyDict_SetItemId@plt+0xd6c>
    349c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    34a0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    34a4:	add	x1, x1, #0x118
    34a8:	ldr	x0, [x0, #4008]
    34ac:	ldr	x0, [x0]
    34b0:	bl	2350 <PyErr_SetString@plt>
    34b4:	str	x19, [x20, #8]
    34b8:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    34bc:	bl	2300 <PyErr_NoMemory@plt>
    34c0:	cmp	x0, #0x0
    34c4:	mov	x19, x0
    34c8:	cset	w21, ne  // ne = any
    34cc:	str	x19, [x20, #8]
    34d0:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    34d4:	mov	x19, #0x0                   	// #0
    34d8:	mov	w21, #0x0                   	// #0
    34dc:	str	x19, [x20, #8]
    34e0:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    34e4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    34e8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    34ec:	add	x1, x1, #0x148
    34f0:	ldr	x0, [x0, #4008]
    34f4:	ldr	x0, [x0]
    34f8:	bl	2350 <PyErr_SetString@plt>
    34fc:	str	x19, [x20, #8]
    3500:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    3504:	mov	x0, x19
    3508:	bl	2270 <PyMem_Free@plt>
    350c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    3510:	mov	w2, w22
    3514:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3518:	mov	x19, #0x0                   	// #0
    351c:	ldr	x0, [x0, #2528]
    3520:	add	x1, x1, #0xa8
    3524:	mov	w21, #0x0                   	// #0
    3528:	bl	25b0 <PyErr_Format@plt>
    352c:	str	x19, [x20, #8]
    3530:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    3534:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3538:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    353c:	add	x1, x1, #0xfc0
    3540:	ldr	x0, [x0, #4040]
    3544:	ldr	x0, [x0]
    3548:	bl	2350 <PyErr_SetString@plt>
    354c:	b	32a0 <_PyDict_SetItemId@plt+0xc60>
    3550:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3554:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3558:	add	x1, x1, #0xe0
    355c:	ldr	x0, [x0, #4008]
    3560:	ldr	x0, [x0]
    3564:	bl	2350 <PyErr_SetString@plt>
    3568:	mov	x0, x19
    356c:	mov	x19, #0x0                   	// #0
    3570:	bl	2270 <PyMem_Free@plt>
    3574:	str	x19, [x20, #8]
    3578:	b	3248 <_PyDict_SetItemId@plt+0xc08>
    357c:	bl	22f0 <_Py_Dealloc@plt>
    3580:	b	33ac <_PyDict_SetItemId@plt+0xd6c>
    3584:	nop
    3588:	stp	x29, x30, [sp, #-80]!
    358c:	mov	x0, #0xffffffffffffffff    	// #-1
    3590:	mov	x29, sp
    3594:	stp	x19, x20, [sp, #16]
    3598:	mov	x19, x1
    359c:	stp	x0, xzr, [sp, #48]
    35a0:	mov	x0, x1
    35a4:	bl	2230 <PyMapping_Check@plt>
    35a8:	cbz	w0, 364c <_PyDict_SetItemId@plt+0x100c>
    35ac:	mov	x0, x19
    35b0:	add	x1, sp, #0x30
    35b4:	bl	3150 <_PyDict_SetItemId@plt+0xb10>
    35b8:	cbz	w0, 3624 <_PyDict_SetItemId@plt+0xfe4>
    35bc:	ldp	x2, x3, [sp, #48]
    35c0:	add	x20, sp, #0x40
    35c4:	mov	x1, x20
    35c8:	add	x0, sp, #0x2c
    35cc:	stp	x2, x3, [sp, #64]
    35d0:	bl	23b0 <lzma_properties_size@plt>
    35d4:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    35d8:	cbnz	w0, 3624 <_PyDict_SetItemId@plt+0xfe4>
    35dc:	ldr	w1, [sp, #44]
    35e0:	mov	x0, #0x0                   	// #0
    35e4:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    35e8:	mov	x19, x0
    35ec:	cbz	x0, 3624 <_PyDict_SetItemId@plt+0xfe4>
    35f0:	add	x1, x0, #0x20
    35f4:	mov	x0, x20
    35f8:	bl	2570 <lzma_properties_encode@plt>
    35fc:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3600:	cbz	w0, 3628 <_PyDict_SetItemId@plt+0xfe8>
    3604:	ldr	x0, [x19]
    3608:	sub	x0, x0, #0x1
    360c:	str	x0, [x19]
    3610:	cbnz	x0, 3624 <_PyDict_SetItemId@plt+0xfe4>
    3614:	mov	x0, x19
    3618:	mov	x19, #0x0                   	// #0
    361c:	bl	22f0 <_Py_Dealloc@plt>
    3620:	b	3628 <_PyDict_SetItemId@plt+0xfe8>
    3624:	mov	x19, #0x0                   	// #0
    3628:	ldr	x0, [sp, #48]
    362c:	cmn	x0, #0x1
    3630:	b.eq	363c <_PyDict_SetItemId@plt+0xffc>  // b.none
    3634:	ldr	x0, [sp, #56]
    3638:	bl	2270 <PyMem_Free@plt>
    363c:	mov	x0, x19
    3640:	ldp	x19, x20, [sp, #16]
    3644:	ldp	x29, x30, [sp], #80
    3648:	ret
    364c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3650:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3654:	mov	x19, #0x0                   	// #0
    3658:	add	x1, x1, #0x188
    365c:	ldr	x0, [x0, #4016]
    3660:	ldr	x0, [x0]
    3664:	bl	2350 <PyErr_SetString@plt>
    3668:	b	3628 <_PyDict_SetItemId@plt+0xfe8>
    366c:	nop
    3670:	stp	x29, x30, [sp, #-80]!
    3674:	mov	x29, sp
    3678:	stp	x21, x22, [sp, #32]
    367c:	mov	x22, x0
    3680:	mov	x0, x1
    3684:	stp	x23, x24, [sp, #48]
    3688:	mov	x24, x1
    368c:	bl	2410 <PySequence_Size@plt>
    3690:	cmn	x0, #0x1
    3694:	b.eq	37bc <_PyDict_SetItemId@plt+0x117c>  // b.none
    3698:	mov	x23, x0
    369c:	cmp	x0, #0x4
    36a0:	b.gt	37d0 <_PyDict_SetItemId@plt+0x1190>
    36a4:	stp	x19, x20, [sp, #16]
    36a8:	cmp	x0, #0x0
    36ac:	mov	x21, x22
    36b0:	mov	x20, #0x0                   	// #0
    36b4:	b.le	3718 <_PyDict_SetItemId@plt+0x10d8>
    36b8:	str	x25, [sp, #64]
    36bc:	nop
    36c0:	mov	x1, x20
    36c4:	mov	x0, x24
    36c8:	bl	23c0 <PySequence_GetItem@plt>
    36cc:	mov	x19, x0
    36d0:	cbz	x0, 3778 <_PyDict_SetItemId@plt+0x1138>
    36d4:	bl	2230 <PyMapping_Check@plt>
    36d8:	add	x20, x20, #0x1
    36dc:	mov	w2, w0
    36e0:	mov	x1, x21
    36e4:	mov	x0, x19
    36e8:	cbz	w2, 3748 <_PyDict_SetItemId@plt+0x1108>
    36ec:	bl	3150 <_PyDict_SetItemId@plt+0xb10>
    36f0:	mov	w25, w0
    36f4:	ldr	x2, [x19]
    36f8:	sub	x2, x2, #0x1
    36fc:	str	x2, [x19]
    3700:	cbz	x2, 373c <_PyDict_SetItemId@plt+0x10fc>
    3704:	cbz	w25, 3778 <_PyDict_SetItemId@plt+0x1138>
    3708:	add	x21, x21, #0x10
    370c:	cmp	x23, x20
    3710:	b.ne	36c0 <_PyDict_SetItemId@plt+0x1080>  // b.any
    3714:	ldr	x25, [sp, #64]
    3718:	lsl	x23, x23, #4
    371c:	mov	x1, #0xffffffffffffffff    	// #-1
    3720:	mov	w0, #0x0                   	// #0
    3724:	ldp	x19, x20, [sp, #16]
    3728:	str	x1, [x22, x23]
    372c:	ldp	x21, x22, [sp, #32]
    3730:	ldp	x23, x24, [sp, #48]
    3734:	ldp	x29, x30, [sp], #80
    3738:	ret
    373c:	mov	x0, x19
    3740:	bl	22f0 <_Py_Dealloc@plt>
    3744:	b	3704 <_PyDict_SetItemId@plt+0x10c4>
    3748:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    374c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3750:	add	x1, x1, #0x188
    3754:	ldr	x0, [x0, #4016]
    3758:	ldr	x0, [x0]
    375c:	bl	2350 <PyErr_SetString@plt>
    3760:	ldr	x0, [x19]
    3764:	sub	x0, x0, #0x1
    3768:	str	x0, [x19]
    376c:	cbnz	x0, 3778 <_PyDict_SetItemId@plt+0x1138>
    3770:	mov	x0, x19
    3774:	bl	22f0 <_Py_Dealloc@plt>
    3778:	mov	x0, #0xffffffffffffffff    	// #-1
    377c:	str	x0, [x21]
    3780:	mov	w19, #0x0                   	// #0
    3784:	mov	x0, x22
    3788:	ldr	x1, [x22]
    378c:	cmn	x1, #0x1
    3790:	b.eq	37b4 <_PyDict_SetItemId@plt+0x1174>  // b.none
    3794:	ldr	x0, [x0, #8]
    3798:	add	w19, w19, #0x1
    379c:	bl	2270 <PyMem_Free@plt>
    37a0:	sbfiz	x1, x19, #4, #32
    37a4:	add	x0, x22, x1
    37a8:	ldr	x1, [x22, x1]
    37ac:	cmn	x1, #0x1
    37b0:	b.ne	3794 <_PyDict_SetItemId@plt+0x1154>  // b.any
    37b4:	ldp	x19, x20, [sp, #16]
    37b8:	ldr	x25, [sp, #64]
    37bc:	mov	w0, #0xffffffff            	// #-1
    37c0:	ldp	x21, x22, [sp, #32]
    37c4:	ldp	x23, x24, [sp, #48]
    37c8:	ldp	x29, x30, [sp], #80
    37cc:	ret
    37d0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    37d4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    37d8:	mov	w2, #0x4                   	// #4
    37dc:	add	x1, x1, #0x1c0
    37e0:	ldr	x0, [x0, #4008]
    37e4:	ldr	x0, [x0]
    37e8:	bl	25b0 <PyErr_Format@plt>
    37ec:	mov	w0, #0xffffffff            	// #-1
    37f0:	b	37c0 <_PyDict_SetItemId@plt+0x1180>
    37f4:	nop
    37f8:	sub	sp, sp, #0xc0
    37fc:	stp	x29, x30, [sp, #16]
    3800:	add	x29, sp, #0x10
    3804:	stp	x19, x20, [sp, #32]
    3808:	mov	x19, x0
    380c:	stp	x21, x22, [sp, #48]
    3810:	add	x21, x1, #0x18
    3814:	ldr	x1, [x1, #16]
    3818:	cbz	x2, 39c0 <_PyDict_SetItemId@plt+0x1380>
    381c:	ldr	x22, [x2, #16]
    3820:	add	x22, x1, x22
    3824:	add	x0, sp, #0x58
    3828:	str	x0, [sp]
    382c:	adrp	x4, 18000 <PyInit__lzma@@Base+0x13728>
    3830:	add	x4, x4, #0x580
    3834:	mov	x0, x21
    3838:	add	x4, x4, #0xd8
    383c:	mov	w7, #0x0                   	// #0
    3840:	mov	w6, #0x3                   	// #3
    3844:	mov	w5, #0x0                   	// #0
    3848:	mov	x3, #0x0                   	// #0
    384c:	bl	2340 <_PyArg_UnpackKeywords@plt>
    3850:	mov	x21, x0
    3854:	cbz	x0, 3b9c <_PyDict_SetItemId@plt+0x155c>
    3858:	stp	x23, x24, [sp, #64]
    385c:	cbz	x22, 39d4 <_PyDict_SetItemId@plt+0x1394>
    3860:	ldr	x0, [x21]
    3864:	cbz	x0, 3aec <_PyDict_SetItemId@plt+0x14ac>
    3868:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12728>
    386c:	ldr	x0, [x0, #8]
    3870:	ldr	x1, [x1, #3984]
    3874:	cmp	x0, x1
    3878:	b.eq	3bac <_PyDict_SetItemId@plt+0x156c>  // b.none
    387c:	bl	25a0 <PyType_IsSubtype@plt>
    3880:	cbnz	w0, 3bac <_PyDict_SetItemId@plt+0x156c>
    3884:	ldr	x0, [x21]
    3888:	bl	2600 <_PyLong_AsInt@plt>
    388c:	mov	w20, w0
    3890:	cmn	w0, #0x1
    3894:	b.eq	3b90 <_PyDict_SetItemId@plt+0x1550>  // b.none
    3898:	subs	x22, x22, #0x1
    389c:	b.eq	3b78 <_PyDict_SetItemId@plt+0x1538>  // b.none
    38a0:	ldr	x0, [x21, #8]
    38a4:	adrp	x24, 17000 <PyInit__lzma@@Base+0x12728>
    38a8:	cbz	x0, 3afc <_PyDict_SetItemId@plt+0x14bc>
    38ac:	ldr	x23, [x24, #4056]
    38b0:	cmp	x22, #0x1
    38b4:	b.eq	38bc <_PyDict_SetItemId@plt+0x127c>  // b.none
    38b8:	ldr	x23, [x21, #16]
    38bc:	ldr	x1, [x24, #4056]
    38c0:	cmp	x0, x1
    38c4:	b.eq	3b3c <_PyDict_SetItemId@plt+0x14fc>  // b.none
    38c8:	cmp	w20, #0x3
    38cc:	b.eq	3bd0 <_PyDict_SetItemId@plt+0x1590>  // b.none
    38d0:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    38d4:	mov	x22, x0
    38d8:	bl	2480 <PyErr_Occurred@plt>
    38dc:	cbnz	x0, 3b98 <_PyDict_SetItemId@plt+0x1558>
    38e0:	ldr	x24, [x24, #4056]
    38e4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    38e8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    38ec:	add	x1, x1, #0x250
    38f0:	cmp	x23, x24
    38f4:	b.ne	3b60 <_PyDict_SetItemId@plt+0x1520>  // b.any
    38f8:	add	x2, x19, #0x10
    38fc:	adrp	x0, 2000 <memcpy@plt-0x200>
    3900:	adrp	x1, 2000 <memcpy@plt-0x200>
    3904:	add	x0, x0, #0x730
    3908:	add	x1, x1, #0x728
    390c:	stp	x0, x1, [x19, #16]
    3910:	stp	xzr, xzr, [x19, #32]
    3914:	str	x2, [x19, #88]
    3918:	bl	2500 <PyThread_allocate_lock@plt>
    391c:	mov	x21, x0
    3920:	cbz	x0, 3be0 <_PyDict_SetItemId@plt+0x15a0>
    3924:	ldr	x0, [x19, #216]
    3928:	cbz	x0, 3930 <_PyDict_SetItemId@plt+0x12f0>
    392c:	bl	2630 <PyThread_free_lock@plt>
    3930:	mov	w1, #0x10                  	// #16
    3934:	mov	w0, #0x1                   	// #1
    3938:	str	w1, [x19, #176]
    393c:	mov	x1, #0x0                   	// #0
    3940:	strb	w0, [x19, #192]
    3944:	mov	x0, #0x0                   	// #0
    3948:	stp	xzr, xzr, [x19, #200]
    394c:	str	x21, [x19, #216]
    3950:	ldr	x21, [x19, #184]
    3954:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3958:	str	x0, [x19, #184]
    395c:	cbz	x21, 3970 <_PyDict_SetItemId@plt+0x1330>
    3960:	ldr	x1, [x21]
    3964:	sub	x1, x1, #0x1
    3968:	str	x1, [x21]
    396c:	cbz	x1, 39f0 <_PyDict_SetItemId@plt+0x13b0>
    3970:	cbz	x0, 3a38 <_PyDict_SetItemId@plt+0x13f8>
    3974:	cmp	w20, #0x2
    3978:	b.eq	3b04 <_PyDict_SetItemId@plt+0x14c4>  // b.none
    397c:	b.gt	3a60 <_PyDict_SetItemId@plt+0x1420>
    3980:	cbz	w20, 3b20 <_PyDict_SetItemId@plt+0x14e0>
    3984:	cmp	w20, #0x1
    3988:	b.ne	3a00 <_PyDict_SetItemId@plt+0x13c0>  // b.any
    398c:	mov	x1, x22
    3990:	mov	w2, #0x5                   	// #5
    3994:	add	x0, x19, #0x28
    3998:	bl	24a0 <lzma_stream_decoder@plt>
    399c:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    39a0:	cbnz	w0, 3a1c <_PyDict_SetItemId@plt+0x13dc>
    39a4:	ldp	x23, x24, [sp, #64]
    39a8:	mov	w0, #0x0                   	// #0
    39ac:	ldp	x29, x30, [sp, #16]
    39b0:	ldp	x19, x20, [sp, #32]
    39b4:	ldp	x21, x22, [sp, #48]
    39b8:	add	sp, sp, #0xc0
    39bc:	ret
    39c0:	cmp	x1, #0x3
    39c4:	b.hi	39e8 <_PyDict_SetItemId@plt+0x13a8>  // b.pmore
    39c8:	stp	x23, x24, [sp, #64]
    39cc:	mov	x22, x1
    39d0:	cbnz	x22, 3860 <_PyDict_SetItemId@plt+0x1220>
    39d4:	adrp	x23, 17000 <PyInit__lzma@@Base+0x12728>
    39d8:	mov	w20, #0x0                   	// #0
    39dc:	mov	x22, #0xffffffffffffffff    	// #-1
    39e0:	ldr	x23, [x23, #4056]
    39e4:	b	38f8 <_PyDict_SetItemId@plt+0x12b8>
    39e8:	mov	x22, x1
    39ec:	b	3824 <_PyDict_SetItemId@plt+0x11e4>
    39f0:	mov	x0, x21
    39f4:	bl	22f0 <_Py_Dealloc@plt>
    39f8:	ldr	x0, [x19, #184]
    39fc:	b	3970 <_PyDict_SetItemId@plt+0x1330>
    3a00:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3a04:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3a08:	mov	w2, w20
    3a0c:	add	x1, x1, #0x298
    3a10:	ldr	x0, [x0, #4008]
    3a14:	ldr	x0, [x0]
    3a18:	bl	25b0 <PyErr_Format@plt>
    3a1c:	ldr	x0, [x19, #184]
    3a20:	cbz	x0, 3a38 <_PyDict_SetItemId@plt+0x13f8>
    3a24:	ldr	x1, [x0]
    3a28:	str	xzr, [x19, #184]
    3a2c:	sub	x1, x1, #0x1
    3a30:	str	x1, [x0]
    3a34:	cbz	x1, 3ba4 <_PyDict_SetItemId@plt+0x1564>
    3a38:	ldr	x0, [x19, #216]
    3a3c:	bl	2630 <PyThread_free_lock@plt>
    3a40:	ldp	x23, x24, [sp, #64]
    3a44:	str	xzr, [x19, #216]
    3a48:	mov	w0, #0xffffffff            	// #-1
    3a4c:	ldp	x29, x30, [sp, #16]
    3a50:	ldp	x19, x20, [sp, #32]
    3a54:	ldp	x21, x22, [sp, #48]
    3a58:	add	sp, sp, #0xc0
    3a5c:	ret
    3a60:	cmp	w20, #0x3
    3a64:	b.ne	3a00 <_PyDict_SetItemId@plt+0x13c0>  // b.any
    3a68:	str	wzr, [x19, #176]
    3a6c:	add	x21, sp, #0x70
    3a70:	mov	x1, x23
    3a74:	mov	x0, x21
    3a78:	bl	3670 <_PyDict_SetItemId@plt+0x1030>
    3a7c:	cmn	w0, #0x1
    3a80:	add	x0, x19, #0x28
    3a84:	b.eq	3a1c <_PyDict_SetItemId@plt+0x13dc>  // b.none
    3a88:	mov	x1, x21
    3a8c:	bl	2530 <lzma_raw_decoder@plt>
    3a90:	ldr	x1, [sp, #112]
    3a94:	mov	w22, w0
    3a98:	mov	x2, x21
    3a9c:	mov	w20, #0x0                   	// #0
    3aa0:	cmn	x1, #0x1
    3aa4:	b.eq	3ac8 <_PyDict_SetItemId@plt+0x1488>  // b.none
    3aa8:	ldr	x0, [x2, #8]
    3aac:	add	w20, w20, #0x1
    3ab0:	bl	2270 <PyMem_Free@plt>
    3ab4:	sbfiz	x1, x20, #4, #32
    3ab8:	add	x2, x21, x1
    3abc:	ldr	x1, [x21, x1]
    3ac0:	cmn	x1, #0x1
    3ac4:	b.ne	3aa8 <_PyDict_SetItemId@plt+0x1468>  // b.any
    3ac8:	mov	w0, w22
    3acc:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3ad0:	cbnz	w0, 3a1c <_PyDict_SetItemId@plt+0x13dc>
    3ad4:	ldp	x29, x30, [sp, #16]
    3ad8:	ldp	x19, x20, [sp, #32]
    3adc:	ldp	x21, x22, [sp, #48]
    3ae0:	ldp	x23, x24, [sp, #64]
    3ae4:	add	sp, sp, #0xc0
    3ae8:	ret
    3aec:	ldr	x0, [x21, #8]
    3af0:	mov	w20, #0x0                   	// #0
    3af4:	adrp	x24, 17000 <PyInit__lzma@@Base+0x12728>
    3af8:	cbnz	x0, 38ac <_PyDict_SetItemId@plt+0x126c>
    3afc:	ldr	x0, [x24, #4056]
    3b00:	b	38b8 <_PyDict_SetItemId@plt+0x1278>
    3b04:	mov	x1, x22
    3b08:	str	wzr, [x19, #176]
    3b0c:	add	x0, x19, #0x28
    3b10:	bl	24b0 <lzma_alone_decoder@plt>
    3b14:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3b18:	cbz	w0, 39a4 <_PyDict_SetItemId@plt+0x1364>
    3b1c:	b	3a1c <_PyDict_SetItemId@plt+0x13dc>
    3b20:	mov	x1, x22
    3b24:	mov	w2, #0x5                   	// #5
    3b28:	add	x0, x19, #0x28
    3b2c:	bl	23d0 <lzma_auto_decoder@plt>
    3b30:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3b34:	cbz	w0, 39a4 <_PyDict_SetItemId@plt+0x1364>
    3b38:	b	3a1c <_PyDict_SetItemId@plt+0x13dc>
    3b3c:	cmp	w20, #0x3
    3b40:	b.ne	3c04 <_PyDict_SetItemId@plt+0x15c4>  // b.any
    3b44:	cmp	x23, x0
    3b48:	mov	x22, #0xffffffffffffffff    	// #-1
    3b4c:	b.ne	38f8 <_PyDict_SetItemId@plt+0x12b8>  // b.any
    3b50:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3b54:	add	x1, x1, #0x228
    3b58:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3b5c:	nop
    3b60:	ldr	x0, [x0, #4008]
    3b64:	ldr	x0, [x0]
    3b68:	bl	2350 <PyErr_SetString@plt>
    3b6c:	mov	w0, #0xffffffff            	// #-1
    3b70:	ldp	x23, x24, [sp, #64]
    3b74:	b	39ac <_PyDict_SetItemId@plt+0x136c>
    3b78:	cmp	w20, #0x3
    3b7c:	b.eq	3b50 <_PyDict_SetItemId@plt+0x1510>  // b.none
    3b80:	adrp	x23, 17000 <PyInit__lzma@@Base+0x12728>
    3b84:	mov	x22, #0xffffffffffffffff    	// #-1
    3b88:	ldr	x23, [x23, #4056]
    3b8c:	b	38f8 <_PyDict_SetItemId@plt+0x12b8>
    3b90:	bl	2480 <PyErr_Occurred@plt>
    3b94:	cbz	x0, 3898 <_PyDict_SetItemId@plt+0x1258>
    3b98:	ldp	x23, x24, [sp, #64]
    3b9c:	mov	w0, #0xffffffff            	// #-1
    3ba0:	b	39ac <_PyDict_SetItemId@plt+0x136c>
    3ba4:	bl	22f0 <_Py_Dealloc@plt>
    3ba8:	b	3a38 <_PyDict_SetItemId@plt+0x13f8>
    3bac:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3bb0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3bb4:	add	x1, x1, #0xfe8
    3bb8:	ldr	x0, [x0, #4016]
    3bbc:	ldr	x0, [x0]
    3bc0:	bl	2350 <PyErr_SetString@plt>
    3bc4:	mov	w0, #0xffffffff            	// #-1
    3bc8:	ldp	x23, x24, [sp, #64]
    3bcc:	b	39ac <_PyDict_SetItemId@plt+0x136c>
    3bd0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3bd4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3bd8:	add	x1, x1, #0x1f8
    3bdc:	b	3b60 <_PyDict_SetItemId@plt+0x1520>
    3be0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3be4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3be8:	add	x1, x1, #0x280
    3bec:	ldr	x0, [x0, #4000]
    3bf0:	ldr	x0, [x0]
    3bf4:	bl	2350 <PyErr_SetString@plt>
    3bf8:	mov	w0, #0xffffffff            	// #-1
    3bfc:	ldp	x23, x24, [sp, #64]
    3c00:	b	39ac <_PyDict_SetItemId@plt+0x136c>
    3c04:	mov	x22, #0xffffffffffffffff    	// #-1
    3c08:	b	38e0 <_PyDict_SetItemId@plt+0x12a0>
    3c0c:	nop
    3c10:	stp	x29, x30, [sp, #-208]!
    3c14:	mov	w9, #0x1                   	// #1
    3c18:	adrp	x3, 18000 <PyInit__lzma@@Base+0x13728>
    3c1c:	mov	x29, sp
    3c20:	stp	x21, x22, [sp, #32]
    3c24:	adrp	x21, 17000 <PyInit__lzma@@Base+0x12728>
    3c28:	add	x3, x3, #0x580
    3c2c:	ldr	x8, [x21, #4056]
    3c30:	add	x3, x3, #0x120
    3c34:	add	x7, sp, #0x58
    3c38:	add	x6, sp, #0x50
    3c3c:	add	x5, sp, #0x4c
    3c40:	add	x4, sp, #0x48
    3c44:	stp	x19, x20, [sp, #16]
    3c48:	mov	x19, x0
    3c4c:	mov	w20, #0xffffffff            	// #-1
    3c50:	mov	x0, x1
    3c54:	mov	x1, x2
    3c58:	adrp	x2, 5000 <PyInit__lzma@@Base+0x728>
    3c5c:	add	x2, x2, #0x2b8
    3c60:	stp	w9, w20, [sp, #72]
    3c64:	stp	x8, x8, [sp, #80]
    3c68:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3c6c:	cbz	w0, 3cb8 <_PyDict_SetItemId@plt+0x1678>
    3c70:	ldr	w0, [sp, #72]
    3c74:	cmp	w0, #0x1
    3c78:	b.eq	3c8c <_PyDict_SetItemId@plt+0x164c>  // b.none
    3c7c:	ldr	w0, [sp, #76]
    3c80:	add	w0, w0, #0x1
    3c84:	cmp	w0, #0x1
    3c88:	b.hi	3ff4 <_PyDict_SetItemId@plt+0x19b4>  // b.pmore
    3c8c:	ldr	x1, [x21, #4056]
    3c90:	ldr	x0, [sp, #80]
    3c94:	cmp	x0, x1
    3c98:	b.eq	3d58 <_PyDict_SetItemId@plt+0x1718>  // b.none
    3c9c:	ldr	x2, [sp, #88]
    3ca0:	cmp	x2, x1
    3ca4:	b.ne	3fd8 <_PyDict_SetItemId@plt+0x1998>  // b.any
    3ca8:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3cac:	mov	x20, x0
    3cb0:	bl	2480 <PyErr_Occurred@plt>
    3cb4:	cbz	x0, 3ccc <_PyDict_SetItemId@plt+0x168c>
    3cb8:	mov	w0, #0xffffffff            	// #-1
    3cbc:	ldp	x19, x20, [sp, #16]
    3cc0:	ldp	x21, x22, [sp, #32]
    3cc4:	ldp	x29, x30, [sp], #208
    3cc8:	ret
    3ccc:	tst	x20, #0xffffffff00000000
    3cd0:	b.ne	3f98 <_PyDict_SetItemId@plt+0x1958>  // b.any
    3cd4:	add	x0, x19, #0x10
    3cd8:	adrp	x2, 2000 <memcpy@plt-0x200>
    3cdc:	adrp	x1, 2000 <memcpy@plt-0x200>
    3ce0:	add	x2, x2, #0x730
    3ce4:	add	x1, x1, #0x728
    3ce8:	stp	x2, x1, [x19, #16]
    3cec:	str	xzr, [x19, #32]
    3cf0:	str	x0, [x19, #88]
    3cf4:	bl	2500 <PyThread_allocate_lock@plt>
    3cf8:	str	x0, [x19, #184]
    3cfc:	cbz	x0, 4014 <_PyDict_SetItemId@plt+0x19d4>
    3d00:	ldr	w2, [sp, #72]
    3d04:	str	wzr, [x19, #176]
    3d08:	cmp	w2, #0x2
    3d0c:	b.eq	3e8c <_PyDict_SetItemId@plt+0x184c>  // b.none
    3d10:	cmp	w2, #0x3
    3d14:	b.eq	3e04 <_PyDict_SetItemId@plt+0x17c4>  // b.none
    3d18:	cmp	w2, #0x1
    3d1c:	b.eq	3d60 <_PyDict_SetItemId@plt+0x1720>  // b.none
    3d20:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3d24:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3d28:	add	x1, x1, #0x298
    3d2c:	ldr	x0, [x0, #4008]
    3d30:	ldr	x0, [x0]
    3d34:	bl	25b0 <PyErr_Format@plt>
    3d38:	ldr	x0, [x19, #184]
    3d3c:	bl	2630 <PyThread_free_lock@plt>
    3d40:	str	xzr, [x19, #184]
    3d44:	mov	w0, #0xffffffff            	// #-1
    3d48:	ldp	x19, x20, [sp, #16]
    3d4c:	ldp	x21, x22, [sp, #32]
    3d50:	ldp	x29, x30, [sp], #208
    3d54:	ret
    3d58:	mov	w20, #0x6                   	// #6
    3d5c:	b	3cd4 <_PyDict_SetItemId@plt+0x1694>
    3d60:	ldr	w22, [sp, #76]
    3d64:	str	x23, [sp, #48]
    3d68:	cmn	w22, #0x1
    3d6c:	b.eq	3f44 <_PyDict_SetItemId@plt+0x1904>  // b.none
    3d70:	ldr	x21, [x21, #4056]
    3d74:	add	x23, x19, #0x28
    3d78:	ldr	x1, [sp, #88]
    3d7c:	cmp	x1, x21
    3d80:	b.eq	3f54 <_PyDict_SetItemId@plt+0x1914>  // b.none
    3d84:	add	x20, sp, #0x60
    3d88:	mov	x0, x20
    3d8c:	bl	3670 <_PyDict_SetItemId@plt+0x1030>
    3d90:	cmn	w0, #0x1
    3d94:	b.eq	4034 <_PyDict_SetItemId@plt+0x19f4>  // b.none
    3d98:	mov	w2, w22
    3d9c:	mov	x1, x20
    3da0:	mov	x0, x23
    3da4:	bl	25d0 <lzma_stream_encoder@plt>
    3da8:	ldr	x1, [sp, #96]
    3dac:	mov	w22, w0
    3db0:	mov	x2, x20
    3db4:	mov	w21, #0x0                   	// #0
    3db8:	cmn	x1, #0x1
    3dbc:	b.eq	3de0 <_PyDict_SetItemId@plt+0x17a0>  // b.none
    3dc0:	ldr	x0, [x2, #8]
    3dc4:	add	w21, w21, #0x1
    3dc8:	bl	2270 <PyMem_Free@plt>
    3dcc:	sbfiz	x1, x21, #4, #32
    3dd0:	add	x2, x20, x1
    3dd4:	ldr	x1, [x20, x1]
    3dd8:	cmn	x1, #0x1
    3ddc:	b.ne	3dc0 <_PyDict_SetItemId@plt+0x1780>  // b.any
    3de0:	mov	w0, w22
    3de4:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3de8:	ldr	x23, [sp, #48]
    3dec:	cbnz	w0, 3d38 <_PyDict_SetItemId@plt+0x16f8>
    3df0:	mov	w0, #0x0                   	// #0
    3df4:	ldp	x19, x20, [sp, #16]
    3df8:	ldp	x21, x22, [sp, #32]
    3dfc:	ldp	x29, x30, [sp], #208
    3e00:	ret
    3e04:	ldr	x21, [x21, #4056]
    3e08:	add	x22, x19, #0x28
    3e0c:	ldr	x1, [sp, #88]
    3e10:	cmp	x1, x21
    3e14:	b.eq	403c <_PyDict_SetItemId@plt+0x19fc>  // b.none
    3e18:	add	x20, sp, #0x60
    3e1c:	mov	x0, x20
    3e20:	bl	3670 <_PyDict_SetItemId@plt+0x1030>
    3e24:	cmn	w0, #0x1
    3e28:	b.eq	3d38 <_PyDict_SetItemId@plt+0x16f8>  // b.none
    3e2c:	mov	x0, x22
    3e30:	mov	x1, x20
    3e34:	bl	2370 <lzma_raw_encoder@plt>
    3e38:	mov	w21, #0x0                   	// #0
    3e3c:	ldr	x1, [sp, #96]
    3e40:	mov	w22, w0
    3e44:	mov	x2, x20
    3e48:	cmn	x1, #0x1
    3e4c:	b.eq	3e70 <_PyDict_SetItemId@plt+0x1830>  // b.none
    3e50:	ldr	x0, [x2, #8]
    3e54:	add	w21, w21, #0x1
    3e58:	bl	2270 <PyMem_Free@plt>
    3e5c:	sbfiz	x1, x21, #4, #32
    3e60:	add	x2, x20, x1
    3e64:	ldr	x1, [x20, x1]
    3e68:	cmn	x1, #0x1
    3e6c:	b.ne	3e50 <_PyDict_SetItemId@plt+0x1810>  // b.any
    3e70:	mov	w0, w22
    3e74:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3e78:	cbnz	w0, 3d38 <_PyDict_SetItemId@plt+0x16f8>
    3e7c:	ldp	x19, x20, [sp, #16]
    3e80:	ldp	x21, x22, [sp, #32]
    3e84:	ldp	x29, x30, [sp], #208
    3e88:	ret
    3e8c:	ldr	x21, [x21, #4056]
    3e90:	add	x22, x19, #0x28
    3e94:	ldr	x1, [sp, #88]
    3e98:	cmp	x1, x21
    3e9c:	b.eq	3f6c <_PyDict_SetItemId@plt+0x192c>  // b.none
    3ea0:	add	x20, sp, #0x60
    3ea4:	mov	x0, x20
    3ea8:	bl	3670 <_PyDict_SetItemId@plt+0x1030>
    3eac:	cmn	w0, #0x1
    3eb0:	b.eq	3d38 <_PyDict_SetItemId@plt+0x16f8>  // b.none
    3eb4:	ldr	x1, [sp, #96]
    3eb8:	mov	x0, #0x1                   	// #1
    3ebc:	movk	x0, #0x4000, lsl #48
    3ec0:	cmp	x1, x0
    3ec4:	b.ne	3ed4 <_PyDict_SetItemId@plt+0x1894>  // b.any
    3ec8:	ldr	x0, [sp, #112]
    3ecc:	cmn	x0, #0x1
    3ed0:	b.eq	3fc4 <_PyDict_SetItemId@plt+0x1984>  // b.none
    3ed4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3ed8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3edc:	mov	w22, #0xb                   	// #11
    3ee0:	add	x1, x1, #0x338
    3ee4:	ldr	x0, [x0, #4008]
    3ee8:	ldr	x0, [x0]
    3eec:	bl	2350 <PyErr_SetString@plt>
    3ef0:	ldr	x0, [sp, #96]
    3ef4:	mov	x2, x20
    3ef8:	mov	w21, #0x0                   	// #0
    3efc:	cmn	x0, #0x1
    3f00:	b.eq	3f28 <_PyDict_SetItemId@plt+0x18e8>  // b.none
    3f04:	nop
    3f08:	ldr	x0, [x2, #8]
    3f0c:	add	w21, w21, #0x1
    3f10:	bl	2270 <PyMem_Free@plt>
    3f14:	sbfiz	x1, x21, #4, #32
    3f18:	add	x2, x20, x1
    3f1c:	ldr	x1, [x20, x1]
    3f20:	cmn	x1, #0x1
    3f24:	b.ne	3f08 <_PyDict_SetItemId@plt+0x18c8>  // b.any
    3f28:	bl	2480 <PyErr_Occurred@plt>
    3f2c:	cbnz	x0, 3d38 <_PyDict_SetItemId@plt+0x16f8>
    3f30:	mov	w0, w22
    3f34:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    3f38:	cbnz	w0, 3d38 <_PyDict_SetItemId@plt+0x16f8>
    3f3c:	mov	w0, #0x0                   	// #0
    3f40:	b	3df4 <_PyDict_SetItemId@plt+0x17b4>
    3f44:	mov	w0, #0x4                   	// #4
    3f48:	mov	w22, w0
    3f4c:	str	w0, [sp, #76]
    3f50:	b	3d70 <_PyDict_SetItemId@plt+0x1730>
    3f54:	mov	w2, w22
    3f58:	mov	w1, w20
    3f5c:	mov	x0, x23
    3f60:	bl	2330 <lzma_easy_encoder@plt>
    3f64:	mov	w22, w0
    3f68:	b	3de0 <_PyDict_SetItemId@plt+0x17a0>
    3f6c:	add	x21, sp, #0x60
    3f70:	mov	w1, w20
    3f74:	mov	x0, x21
    3f78:	bl	2610 <lzma_lzma_preset@plt>
    3f7c:	tst	w0, #0xff
    3f80:	b.ne	4058 <_PyDict_SetItemId@plt+0x1a18>  // b.any
    3f84:	mov	x0, x22
    3f88:	mov	x1, x21
    3f8c:	bl	2550 <lzma_alone_encoder@plt>
    3f90:	mov	w22, w0
    3f94:	b	3f28 <_PyDict_SetItemId@plt+0x18e8>
    3f98:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3f9c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3fa0:	add	x1, x1, #0xfc0
    3fa4:	ldr	x0, [x0, #4040]
    3fa8:	ldr	x0, [x0]
    3fac:	bl	2350 <PyErr_SetString@plt>
    3fb0:	mov	w0, #0xffffffff            	// #-1
    3fb4:	ldp	x19, x20, [sp, #16]
    3fb8:	ldp	x21, x22, [sp, #32]
    3fbc:	ldp	x29, x30, [sp], #208
    3fc0:	ret
    3fc4:	ldr	x1, [sp, #104]
    3fc8:	mov	x0, x22
    3fcc:	bl	2550 <lzma_alone_encoder@plt>
    3fd0:	mov	w22, w0
    3fd4:	b	3ef0 <_PyDict_SetItemId@plt+0x18b0>
    3fd8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3fdc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3fe0:	add	x1, x1, #0x308
    3fe4:	ldr	x0, [x0, #4008]
    3fe8:	ldr	x0, [x0]
    3fec:	bl	2350 <PyErr_SetString@plt>
    3ff0:	b	3cb8 <_PyDict_SetItemId@plt+0x1678>
    3ff4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    3ff8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    3ffc:	add	x1, x1, #0x2d0
    4000:	ldr	x0, [x0, #4008]
    4004:	ldr	x0, [x0]
    4008:	bl	2350 <PyErr_SetString@plt>
    400c:	mov	w0, w20
    4010:	b	3cbc <_PyDict_SetItemId@plt+0x167c>
    4014:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    4018:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    401c:	add	x1, x1, #0x280
    4020:	ldr	x0, [x0, #4000]
    4024:	ldr	x0, [x0]
    4028:	bl	2350 <PyErr_SetString@plt>
    402c:	mov	w0, #0xffffffff            	// #-1
    4030:	b	3cbc <_PyDict_SetItemId@plt+0x167c>
    4034:	ldr	x23, [sp, #48]
    4038:	b	3d38 <_PyDict_SetItemId@plt+0x16f8>
    403c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    4040:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4044:	add	x1, x1, #0x228
    4048:	ldr	x0, [x0, #4008]
    404c:	ldr	x0, [x0]
    4050:	bl	2350 <PyErr_SetString@plt>
    4054:	b	3d38 <_PyDict_SetItemId@plt+0x16f8>
    4058:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    405c:	mov	w2, w20
    4060:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4064:	add	x1, x1, #0xa8
    4068:	ldr	x0, [x0, #2528]
    406c:	bl	25b0 <PyErr_Format@plt>
    4070:	b	3d38 <_PyDict_SetItemId@plt+0x16f8>
    4074:	nop
    4078:	stp	x29, x30, [sp, #-96]!
    407c:	mov	x29, sp
    4080:	stp	x19, x20, [sp, #16]
    4084:	mov	x20, x1
    4088:	mov	x19, x2
    408c:	mov	x1, #0x2000                	// #8192
    4090:	stp	x21, x22, [sp, #32]
    4094:	mov	w21, w3
    4098:	stp	x25, x26, [sp, #64]
    409c:	mov	x25, x0
    40a0:	mov	x0, #0x0                   	// #0
    40a4:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    40a8:	str	x0, [sp, #88]
    40ac:	cbz	x0, 414c <_PyDict_SetItemId@plt+0x1b0c>
    40b0:	cmp	x19, #0x0
    40b4:	stp	x23, x24, [sp, #48]
    40b8:	cset	w22, eq  // eq = none
    40bc:	add	x23, x25, #0x28
    40c0:	add	x24, sp, #0x58
    40c4:	ldr	x1, [x0, #16]
    40c8:	add	x0, x0, #0x20
    40cc:	stp	x20, x19, [x25, #40]
    40d0:	stp	x0, x1, [x25, #64]
    40d4:	nop
    40d8:	bl	2580 <PyEval_SaveThread@plt>
    40dc:	mov	w1, w21
    40e0:	mov	x20, x0
    40e4:	mov	x0, x23
    40e8:	bl	2250 <lzma_code@plt>
    40ec:	ldr	x2, [sp, #88]
    40f0:	cmp	w22, #0x0
    40f4:	ldr	x1, [x25, #64]
    40f8:	add	x2, x2, #0x20
    40fc:	mov	w19, w0
    4100:	ccmp	w0, #0xa, #0x0, ne  // ne = any
    4104:	sub	x26, x1, x2
    4108:	b.ne	4164 <_PyDict_SetItemId@plt+0x1b24>  // b.any
    410c:	ldr	x0, [x25, #72]
    4110:	cbnz	x0, 4240 <_PyDict_SetItemId@plt+0x1c00>
    4114:	mov	x0, x20
    4118:	bl	2260 <PyEval_RestoreThread@plt>
    411c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    4120:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4124:	add	x1, x1, #0xf10
    4128:	ldr	x0, [x0, #2528]
    412c:	bl	2350 <PyErr_SetString@plt>
    4130:	ldr	x0, [sp, #88]
    4134:	cbz	x0, 4148 <_PyDict_SetItemId@plt+0x1b08>
    4138:	ldr	x1, [x0]
    413c:	sub	x1, x1, #0x1
    4140:	str	x1, [x0]
    4144:	cbz	x1, 4344 <_PyDict_SetItemId@plt+0x1d04>
    4148:	ldp	x23, x24, [sp, #48]
    414c:	mov	x0, #0x0                   	// #0
    4150:	ldp	x19, x20, [sp, #16]
    4154:	ldp	x21, x22, [sp, #32]
    4158:	ldp	x25, x26, [sp, #64]
    415c:	ldp	x29, x30, [sp], #96
    4160:	ret
    4164:	mov	x0, x20
    4168:	bl	2260 <PyEval_RestoreThread@plt>
    416c:	cmp	w19, #0x7
    4170:	b.eq	42d4 <_PyDict_SetItemId@plt+0x1c94>  // b.none
    4174:	b.hi	41a0 <_PyDict_SetItemId@plt+0x1b60>  // b.pmore
    4178:	cmp	w19, #0x5
    417c:	b.eq	42ec <_PyDict_SetItemId@plt+0x1cac>  // b.none
    4180:	cmp	w19, #0x6
    4184:	b.ne	41d4 <_PyDict_SetItemId@plt+0x1b94>  // b.any
    4188:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    418c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4190:	add	x1, x1, #0xe90
    4194:	ldr	x0, [x0, #2528]
    4198:	bl	2350 <PyErr_SetString@plt>
    419c:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    41a0:	cmp	w19, #0x9
    41a4:	b.eq	42f4 <_PyDict_SetItemId@plt+0x1cb4>  // b.none
    41a8:	b.ls	41f4 <_PyDict_SetItemId@plt+0x1bb4>  // b.plast
    41ac:	cmp	w19, #0xa
    41b0:	b.eq	411c <_PyDict_SetItemId@plt+0x1adc>  // b.none
    41b4:	cmp	w19, #0xb
    41b8:	b.ne	4224 <_PyDict_SetItemId@plt+0x1be4>  // b.any
    41bc:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    41c0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    41c4:	add	x1, x1, #0xf30
    41c8:	ldr	x0, [x0, #2528]
    41cc:	bl	2350 <PyErr_SetString@plt>
    41d0:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    41d4:	cmp	w19, #0x3
    41d8:	b.ne	4214 <_PyDict_SetItemId@plt+0x1bd4>  // b.any
    41dc:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    41e0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    41e4:	add	x1, x1, #0xe70
    41e8:	ldr	x0, [x0, #2528]
    41ec:	bl	2350 <PyErr_SetString@plt>
    41f0:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    41f4:	cmp	w19, #0x8
    41f8:	b.ne	430c <_PyDict_SetItemId@plt+0x1ccc>  // b.any
    41fc:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    4200:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4204:	add	x1, x1, #0xed8
    4208:	ldr	x0, [x0, #2528]
    420c:	bl	2350 <PyErr_SetString@plt>
    4210:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    4214:	b.ls	4298 <_PyDict_SetItemId@plt+0x1c58>  // b.plast
    4218:	cmp	w19, #0x4
    421c:	b.eq	4248 <_PyDict_SetItemId@plt+0x1c08>  // b.none
    4220:	mov	w19, #0x5                   	// #5
    4224:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    4228:	mov	w2, w19
    422c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4230:	add	x1, x1, #0xf40
    4234:	ldr	x0, [x0, #2528]
    4238:	bl	25b0 <PyErr_Format@plt>
    423c:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    4240:	mov	x0, x20
    4244:	bl	2260 <PyEval_RestoreThread@plt>
    4248:	cbnz	w21, 4254 <_PyDict_SetItemId@plt+0x1c14>
    424c:	ldr	x0, [x25, #48]
    4250:	cbz	x0, 42ac <_PyDict_SetItemId@plt+0x1c6c>
    4254:	ldr	x0, [x25, #72]
    4258:	cbnz	x0, 40d8 <_PyDict_SetItemId@plt+0x1a98>
    425c:	ldr	x1, [sp, #88]
    4260:	mov	x0, x24
    4264:	ldr	x1, [x1, #16]
    4268:	add	x2, x1, #0x6
    426c:	add	x1, x2, x1, asr #3
    4270:	bl	2240 <_PyBytes_Resize@plt>
    4274:	cmn	w0, #0x1
    4278:	b.eq	4130 <_PyDict_SetItemId@plt+0x1af0>  // b.none
    427c:	ldr	x1, [sp, #88]
    4280:	add	x0, x1, #0x20
    4284:	ldr	x1, [x1, #16]
    4288:	add	x0, x0, x26
    428c:	sub	x1, x1, x26
    4290:	stp	x0, x1, [x25, #64]
    4294:	b	40d8 <_PyDict_SetItemId@plt+0x1a98>
    4298:	b.eq	4224 <_PyDict_SetItemId@plt+0x1be4>  // b.none
    429c:	cbz	w21, 424c <_PyDict_SetItemId@plt+0x1c0c>
    42a0:	cmp	w21, #0x3
    42a4:	ccmp	w19, #0x1, #0x0, eq  // eq = none
    42a8:	b.ne	4254 <_PyDict_SetItemId@plt+0x1c14>  // b.any
    42ac:	ldr	x0, [sp, #88]
    42b0:	ldr	x1, [x0, #16]
    42b4:	cmp	x1, x26
    42b8:	b.ne	4314 <_PyDict_SetItemId@plt+0x1cd4>  // b.any
    42bc:	ldp	x19, x20, [sp, #16]
    42c0:	ldp	x21, x22, [sp, #32]
    42c4:	ldp	x23, x24, [sp, #48]
    42c8:	ldp	x25, x26, [sp, #64]
    42cc:	ldp	x29, x30, [sp], #96
    42d0:	ret
    42d4:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    42d8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    42dc:	add	x1, x1, #0xeb0
    42e0:	ldr	x0, [x0, #2528]
    42e4:	bl	2350 <PyErr_SetString@plt>
    42e8:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    42ec:	bl	2300 <PyErr_NoMemory@plt>
    42f0:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    42f4:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    42f8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    42fc:	add	x1, x1, #0xef8
    4300:	ldr	x0, [x0, #2528]
    4304:	bl	2350 <PyErr_SetString@plt>
    4308:	b	4130 <_PyDict_SetItemId@plt+0x1af0>
    430c:	mov	w19, #0x9                   	// #9
    4310:	b	4224 <_PyDict_SetItemId@plt+0x1be4>
    4314:	mov	x1, x26
    4318:	add	x0, sp, #0x58
    431c:	bl	2240 <_PyBytes_Resize@plt>
    4320:	cmn	w0, #0x1
    4324:	b.eq	4130 <_PyDict_SetItemId@plt+0x1af0>  // b.none
    4328:	ldp	x19, x20, [sp, #16]
    432c:	ldp	x21, x22, [sp, #32]
    4330:	ldp	x23, x24, [sp, #48]
    4334:	ldp	x25, x26, [sp, #64]
    4338:	ldr	x0, [sp, #88]
    433c:	ldp	x29, x30, [sp], #96
    4340:	ret
    4344:	bl	22f0 <_Py_Dealloc@plt>
    4348:	mov	x0, #0x0                   	// #0
    434c:	ldp	x19, x20, [sp, #16]
    4350:	ldp	x21, x22, [sp, #32]
    4354:	ldp	x23, x24, [sp, #48]
    4358:	ldp	x25, x26, [sp, #64]
    435c:	ldp	x29, x30, [sp], #96
    4360:	ret
    4364:	nop
    4368:	stp	x29, x30, [sp, #-32]!
    436c:	mov	w1, #0x0                   	// #0
    4370:	mov	x29, sp
    4374:	stp	x19, x20, [sp, #16]
    4378:	mov	x19, x0
    437c:	ldr	x0, [x0, #184]
    4380:	bl	2320 <PyThread_acquire_lock@plt>
    4384:	cbz	w0, 43c8 <_PyDict_SetItemId@plt+0x1d88>
    4388:	ldr	w0, [x19, #176]
    438c:	cbnz	w0, 43ec <_PyDict_SetItemId@plt+0x1dac>
    4390:	mov	w0, #0x1                   	// #1
    4394:	str	w0, [x19, #176]
    4398:	mov	w3, #0x3                   	// #3
    439c:	mov	x2, #0x0                   	// #0
    43a0:	mov	x1, #0x0                   	// #0
    43a4:	mov	x0, x19
    43a8:	bl	4078 <_PyDict_SetItemId@plt+0x1a38>
    43ac:	mov	x20, x0
    43b0:	ldr	x0, [x19, #184]
    43b4:	bl	2520 <PyThread_release_lock@plt>
    43b8:	mov	x0, x20
    43bc:	ldp	x19, x20, [sp, #16]
    43c0:	ldp	x29, x30, [sp], #32
    43c4:	ret
    43c8:	bl	2580 <PyEval_SaveThread@plt>
    43cc:	mov	x20, x0
    43d0:	ldr	x0, [x19, #184]
    43d4:	mov	w1, #0x1                   	// #1
    43d8:	bl	2320 <PyThread_acquire_lock@plt>
    43dc:	mov	x0, x20
    43e0:	bl	2260 <PyEval_RestoreThread@plt>
    43e4:	ldr	w0, [x19, #176]
    43e8:	cbz	w0, 4390 <_PyDict_SetItemId@plt+0x1d50>
    43ec:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    43f0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    43f4:	add	x1, x1, #0x380
    43f8:	mov	x20, #0x0                   	// #0
    43fc:	ldr	x0, [x0, #4008]
    4400:	ldr	x0, [x0]
    4404:	bl	2350 <PyErr_SetString@plt>
    4408:	ldr	x0, [x19, #184]
    440c:	bl	2520 <PyThread_release_lock@plt>
    4410:	mov	x0, x20
    4414:	ldp	x19, x20, [sp, #16]
    4418:	ldp	x29, x30, [sp], #32
    441c:	ret
    4420:	stp	x29, x30, [sp, #-128]!
    4424:	mov	w2, #0x0                   	// #0
    4428:	mov	x29, sp
    442c:	stp	x21, x22, [sp, #32]
    4430:	add	x22, sp, #0x30
    4434:	mov	x21, #0x0                   	// #0
    4438:	stp	x19, x20, [sp, #16]
    443c:	mov	x20, x1
    4440:	mov	x19, x0
    4444:	mov	x0, x1
    4448:	mov	x1, x22
    444c:	stp	xzr, xzr, [sp, #48]
    4450:	stp	xzr, xzr, [sp, #64]
    4454:	stp	xzr, xzr, [sp, #80]
    4458:	stp	xzr, xzr, [sp, #96]
    445c:	stp	xzr, xzr, [sp, #112]
    4460:	bl	2560 <PyObject_GetBuffer@plt>
    4464:	cbnz	w0, 44b0 <_PyDict_SetItemId@plt+0x1e70>
    4468:	mov	x0, x22
    446c:	mov	w1, #0x43                  	// #67
    4470:	bl	22d0 <PyBuffer_IsContiguous@plt>
    4474:	cbz	w0, 4518 <_PyDict_SetItemId@plt+0x1ed8>
    4478:	ldr	x0, [x19, #184]
    447c:	mov	w1, #0x0                   	// #0
    4480:	bl	2320 <PyThread_acquire_lock@plt>
    4484:	cbz	w0, 44d4 <_PyDict_SetItemId@plt+0x1e94>
    4488:	ldr	w0, [x19, #176]
    448c:	cbnz	w0, 44f8 <_PyDict_SetItemId@plt+0x1eb8>
    4490:	ldr	x1, [sp, #48]
    4494:	mov	x0, x19
    4498:	ldr	x2, [sp, #64]
    449c:	mov	w3, #0x0                   	// #0
    44a0:	bl	4078 <_PyDict_SetItemId@plt+0x1a38>
    44a4:	mov	x21, x0
    44a8:	ldr	x0, [x19, #184]
    44ac:	bl	2520 <PyThread_release_lock@plt>
    44b0:	ldr	x0, [sp, #56]
    44b4:	cbz	x0, 44c0 <_PyDict_SetItemId@plt+0x1e80>
    44b8:	mov	x0, x22
    44bc:	bl	2290 <PyBuffer_Release@plt>
    44c0:	mov	x0, x21
    44c4:	ldp	x19, x20, [sp, #16]
    44c8:	ldp	x21, x22, [sp, #32]
    44cc:	ldp	x29, x30, [sp], #128
    44d0:	ret
    44d4:	bl	2580 <PyEval_SaveThread@plt>
    44d8:	mov	x20, x0
    44dc:	ldr	x0, [x19, #184]
    44e0:	mov	w1, #0x1                   	// #1
    44e4:	bl	2320 <PyThread_acquire_lock@plt>
    44e8:	mov	x0, x20
    44ec:	bl	2260 <PyEval_RestoreThread@plt>
    44f0:	ldr	w0, [x19, #176]
    44f4:	cbz	w0, 4490 <_PyDict_SetItemId@plt+0x1e50>
    44f8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    44fc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4500:	mov	x21, #0x0                   	// #0
    4504:	add	x1, x1, #0x3c0
    4508:	ldr	x0, [x0, #4008]
    450c:	ldr	x0, [x0]
    4510:	bl	2350 <PyErr_SetString@plt>
    4514:	b	44a8 <_PyDict_SetItemId@plt+0x1e68>
    4518:	mov	x3, x20
    451c:	adrp	x2, 5000 <PyInit__lzma@@Base+0x728>
    4520:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4524:	add	x2, x2, #0x10
    4528:	add	x1, x1, #0x3a0
    452c:	adrp	x0, 5000 <PyInit__lzma@@Base+0x728>
    4530:	add	x0, x0, #0x3b0
    4534:	bl	2400 <_PyArg_BadArgument@plt>
    4538:	b	44b0 <_PyDict_SetItemId@plt+0x1e70>
    453c:	nop
    4540:	stp	x29, x30, [sp, #-160]!
    4544:	cmp	x2, #0x2
    4548:	mov	x29, sp
    454c:	stp	x19, x20, [sp, #16]
    4550:	mov	x20, x1
    4554:	stp	xzr, xzr, [sp, #80]
    4558:	stp	xzr, xzr, [sp, #96]
    455c:	stp	xzr, xzr, [sp, #112]
    4560:	stp	xzr, xzr, [sp, #128]
    4564:	stp	xzr, xzr, [sp, #144]
    4568:	b.eq	4588 <_PyDict_SetItemId@plt+0x1f48>  // b.none
    456c:	mov	x1, x2
    4570:	adrp	x0, 5000 <PyInit__lzma@@Base+0x728>
    4574:	mov	x3, #0x2                   	// #2
    4578:	add	x0, x0, #0x3e0
    457c:	mov	x2, x3
    4580:	bl	2460 <_PyArg_CheckPositional@plt>
    4584:	cbz	w0, 45a8 <_PyDict_SetItemId@plt+0x1f68>
    4588:	ldr	x0, [x20]
    458c:	stp	x21, x22, [sp, #32]
    4590:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    4594:	mov	x21, x0
    4598:	bl	2480 <PyErr_Occurred@plt>
    459c:	mov	x19, x0
    45a0:	cbz	x0, 45cc <_PyDict_SetItemId@plt+0x1f8c>
    45a4:	ldp	x21, x22, [sp, #32]
    45a8:	mov	x19, #0x0                   	// #0
    45ac:	ldr	x0, [sp, #88]
    45b0:	cbz	x0, 45bc <_PyDict_SetItemId@plt+0x1f7c>
    45b4:	add	x0, sp, #0x50
    45b8:	bl	2290 <PyBuffer_Release@plt>
    45bc:	mov	x0, x19
    45c0:	ldp	x19, x20, [sp, #16]
    45c4:	ldp	x29, x30, [sp], #160
    45c8:	ret
    45cc:	ldr	x0, [x20, #8]
    45d0:	add	x22, sp, #0x50
    45d4:	mov	x1, x22
    45d8:	mov	w2, #0x0                   	// #0
    45dc:	bl	2560 <PyObject_GetBuffer@plt>
    45e0:	cbnz	w0, 45a4 <_PyDict_SetItemId@plt+0x1f64>
    45e4:	mov	x0, x22
    45e8:	mov	w1, #0x43                  	// #67
    45ec:	bl	22d0 <PyBuffer_IsContiguous@plt>
    45f0:	cbz	w0, 4828 <_PyDict_SetItemId@plt+0x21e8>
    45f4:	ldr	x2, [sp, #80]
    45f8:	mov	x1, #0x0                   	// #0
    45fc:	ldr	x3, [sp, #96]
    4600:	add	x0, sp, #0x40
    4604:	str	x21, [sp, #64]
    4608:	bl	2470 <lzma_properties_decode@plt>
    460c:	bl	2758 <_PyDict_SetItemId@plt+0x118>
    4610:	cbnz	w0, 46c8 <_PyDict_SetItemId@plt+0x2088>
    4614:	bl	2540 <PyDict_New@plt>
    4618:	mov	x20, x0
    461c:	cbz	x0, 46b8 <_PyDict_SetItemId@plt+0x2078>
    4620:	ldr	x0, [sp, #64]
    4624:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    4628:	mov	x21, x0
    462c:	cbz	x0, 46a8 <_PyDict_SetItemId@plt+0x2068>
    4630:	stp	x23, x24, [sp, #48]
    4634:	adrp	x23, 18000 <PyInit__lzma@@Base+0x13728>
    4638:	add	x1, x23, #0x580
    463c:	add	x1, x1, #0x148
    4640:	mov	x2, x0
    4644:	mov	x0, x20
    4648:	bl	2640 <_PyDict_SetItemId@plt>
    464c:	ldr	x1, [x21]
    4650:	mov	w22, w0
    4654:	sub	x1, x1, #0x1
    4658:	str	x1, [x21]
    465c:	cbz	x1, 4850 <_PyDict_SetItemId@plt+0x2210>
    4660:	cmn	w22, #0x1
    4664:	b.eq	4814 <_PyDict_SetItemId@plt+0x21d4>  // b.none
    4668:	ldr	x2, [sp, #64]
    466c:	cmp	x2, #0x21
    4670:	b.eq	488c <_PyDict_SetItemId@plt+0x224c>  // b.none
    4674:	b.hi	4720 <_PyDict_SetItemId@plt+0x20e0>  // b.pmore
    4678:	cmp	x2, #0x3
    467c:	b.eq	4868 <_PyDict_SetItemId@plt+0x2228>  // b.none
    4680:	sub	x0, x2, #0x4
    4684:	cmp	x0, #0x5
    4688:	b.ls	46d0 <_PyDict_SetItemId@plt+0x2090>  // b.plast
    468c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12728>
    4690:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4694:	add	x1, x1, #0x170
    4698:	ldr	x0, [x0, #4008]
    469c:	ldr	x0, [x0]
    46a0:	bl	25b0 <PyErr_Format@plt>
    46a4:	ldp	x23, x24, [sp, #48]
    46a8:	ldr	x0, [x20]
    46ac:	sub	x0, x0, #0x1
    46b0:	str	x0, [x20]
    46b4:	cbz	x0, 485c <_PyDict_SetItemId@plt+0x221c>
    46b8:	ldr	x0, [sp, #72]
    46bc:	bl	24f0 <free@plt>
    46c0:	ldp	x21, x22, [sp, #32]
    46c4:	b	45ac <_PyDict_SetItemId@plt+0x1f6c>
    46c8:	ldp	x21, x22, [sp, #32]
    46cc:	b	45ac <_PyDict_SetItemId@plt+0x1f6c>
    46d0:	ldr	x0, [sp, #72]
    46d4:	ldr	w0, [x0]
    46d8:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    46dc:	mov	x21, x0
    46e0:	cbz	x0, 4814 <_PyDict_SetItemId@plt+0x21d4>
    46e4:	add	x1, x23, #0x580
    46e8:	mov	x2, x0
    46ec:	add	x1, x1, #0x1f0
    46f0:	mov	x0, x20
    46f4:	bl	2640 <_PyDict_SetItemId@plt>
    46f8:	ldr	x1, [x21]
    46fc:	mov	w22, w0
    4700:	sub	x1, x1, #0x1
    4704:	str	x1, [x21]
    4708:	cbz	x1, 481c <_PyDict_SetItemId@plt+0x21dc>
    470c:	cmn	w22, #0x1
    4710:	b.eq	4814 <_PyDict_SetItemId@plt+0x21d4>  // b.none
    4714:	mov	x19, x20
    4718:	ldp	x23, x24, [sp, #48]
    471c:	b	46b8 <_PyDict_SetItemId@plt+0x2078>
    4720:	mov	x0, #0x1                   	// #1
    4724:	movk	x0, #0x4000, lsl #48
    4728:	cmp	x2, x0
    472c:	b.ne	468c <_PyDict_SetItemId@plt+0x204c>  // b.any
    4730:	ldr	x22, [sp, #72]
    4734:	ldr	w0, [x22, #20]
    4738:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    473c:	mov	x21, x0
    4740:	cbz	x0, 4814 <_PyDict_SetItemId@plt+0x21d4>
    4744:	add	x1, x23, #0x580
    4748:	mov	x2, x0
    474c:	add	x1, x1, #0x160
    4750:	mov	x0, x20
    4754:	bl	2640 <_PyDict_SetItemId@plt>
    4758:	mov	w24, w0
    475c:	ldr	x1, [x21]
    4760:	sub	x1, x1, #0x1
    4764:	str	x1, [x21]
    4768:	cbz	x1, 48b0 <_PyDict_SetItemId@plt+0x2270>
    476c:	cmn	w24, #0x1
    4770:	b.eq	4814 <_PyDict_SetItemId@plt+0x21d4>  // b.none
    4774:	ldr	w0, [x22, #24]
    4778:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    477c:	mov	x21, x0
    4780:	cbz	x0, 4814 <_PyDict_SetItemId@plt+0x21d4>
    4784:	add	x1, x23, #0x580
    4788:	mov	x2, x0
    478c:	add	x1, x1, #0x178
    4790:	mov	x0, x20
    4794:	bl	2640 <_PyDict_SetItemId@plt>
    4798:	mov	w24, w0
    479c:	ldr	x1, [x21]
    47a0:	sub	x1, x1, #0x1
    47a4:	str	x1, [x21]
    47a8:	cbz	x1, 48bc <_PyDict_SetItemId@plt+0x227c>
    47ac:	cmn	w24, #0x1
    47b0:	b.eq	4814 <_PyDict_SetItemId@plt+0x21d4>  // b.none
    47b4:	ldr	w0, [x22, #28]
    47b8:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    47bc:	mov	x21, x0
    47c0:	cbz	x0, 4814 <_PyDict_SetItemId@plt+0x21d4>
    47c4:	add	x1, x23, #0x580
    47c8:	mov	x2, x0
    47cc:	add	x1, x1, #0x190
    47d0:	mov	x0, x20
    47d4:	bl	2640 <_PyDict_SetItemId@plt>
    47d8:	mov	w24, w0
    47dc:	ldr	x1, [x21]
    47e0:	sub	x1, x1, #0x1
    47e4:	str	x1, [x21]
    47e8:	cbz	x1, 48c8 <_PyDict_SetItemId@plt+0x2288>
    47ec:	cmn	w24, #0x1
    47f0:	b.eq	4814 <_PyDict_SetItemId@plt+0x21d4>  // b.none
    47f4:	ldr	w0, [x22]
    47f8:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    47fc:	mov	x21, x0
    4800:	cbz	x0, 4814 <_PyDict_SetItemId@plt+0x21d4>
    4804:	add	x1, x23, #0x580
    4808:	mov	x2, x0
    480c:	add	x1, x1, #0x1a8
    4810:	b	46f0 <_PyDict_SetItemId@plt+0x20b0>
    4814:	ldp	x23, x24, [sp, #48]
    4818:	b	46a8 <_PyDict_SetItemId@plt+0x2068>
    481c:	mov	x0, x21
    4820:	bl	22f0 <_Py_Dealloc@plt>
    4824:	b	470c <_PyDict_SetItemId@plt+0x20cc>
    4828:	ldr	x3, [x20, #8]
    482c:	adrp	x2, 5000 <PyInit__lzma@@Base+0x728>
    4830:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4834:	add	x2, x2, #0x10
    4838:	add	x1, x1, #0x400
    483c:	adrp	x0, 5000 <PyInit__lzma@@Base+0x728>
    4840:	add	x0, x0, #0x3e0
    4844:	bl	2400 <_PyArg_BadArgument@plt>
    4848:	ldp	x21, x22, [sp, #32]
    484c:	b	45ac <_PyDict_SetItemId@plt+0x1f6c>
    4850:	mov	x0, x21
    4854:	bl	22f0 <_Py_Dealloc@plt>
    4858:	b	4660 <_PyDict_SetItemId@plt+0x2020>
    485c:	mov	x0, x20
    4860:	bl	22f0 <_Py_Dealloc@plt>
    4864:	b	46b8 <_PyDict_SetItemId@plt+0x2078>
    4868:	ldr	x0, [sp, #72]
    486c:	ldr	w0, [x0, #4]
    4870:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    4874:	mov	x21, x0
    4878:	cbz	x0, 4814 <_PyDict_SetItemId@plt+0x21d4>
    487c:	add	x1, x23, #0x580
    4880:	mov	x2, x0
    4884:	add	x1, x1, #0x1d8
    4888:	b	46f0 <_PyDict_SetItemId@plt+0x20b0>
    488c:	ldr	x0, [sp, #72]
    4890:	ldr	w0, [x0]
    4894:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    4898:	mov	x21, x0
    489c:	cbz	x0, 4814 <_PyDict_SetItemId@plt+0x21d4>
    48a0:	add	x1, x23, #0x580
    48a4:	mov	x2, x0
    48a8:	add	x1, x1, #0x1c0
    48ac:	b	46f0 <_PyDict_SetItemId@plt+0x20b0>
    48b0:	mov	x0, x21
    48b4:	bl	22f0 <_Py_Dealloc@plt>
    48b8:	b	476c <_PyDict_SetItemId@plt+0x212c>
    48bc:	mov	x0, x21
    48c0:	bl	22f0 <_Py_Dealloc@plt>
    48c4:	b	47ac <_PyDict_SetItemId@plt+0x216c>
    48c8:	mov	x0, x21
    48cc:	bl	22f0 <_Py_Dealloc@plt>
    48d0:	b	47ec <_PyDict_SetItemId@plt+0x21ac>
    48d4:	nop

00000000000048d8 <PyInit__lzma@@Base>:
    48d8:	stp	x29, x30, [sp, #-48]!
    48dc:	mov	x0, #0x0                   	// #0
    48e0:	mov	x29, sp
    48e4:	stp	x19, x20, [sp, #16]
    48e8:	str	x21, [sp, #32]
    48ec:	bl	2450 <PyTuple_New@plt>
    48f0:	adrp	x21, 18000 <PyInit__lzma@@Base+0x13728>
    48f4:	add	x1, x21, #0x9e0
    48f8:	str	x0, [x1, #8]
    48fc:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4900:	adrp	x0, 18000 <PyInit__lzma@@Base+0x13728>
    4904:	add	x0, x0, #0x580
    4908:	add	x0, x0, #0x208
    490c:	mov	w1, #0x3f5                 	// #1013
    4910:	bl	2490 <PyModule_Create2@plt>
    4914:	mov	x19, x0
    4918:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    491c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4920:	mov	x2, #0x0                   	// #0
    4924:	add	x1, x1, #0x410
    4928:	bl	2220 <PyModule_AddIntConstant@plt>
    492c:	cmn	w0, #0x1
    4930:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    4934:	mov	x0, x19
    4938:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    493c:	mov	x2, #0x1                   	// #1
    4940:	add	x1, x1, #0x420
    4944:	bl	2220 <PyModule_AddIntConstant@plt>
    4948:	cmn	w0, #0x1
    494c:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    4950:	mov	x0, x19
    4954:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4958:	mov	x2, #0x2                   	// #2
    495c:	add	x1, x1, #0x430
    4960:	bl	2220 <PyModule_AddIntConstant@plt>
    4964:	cmn	w0, #0x1
    4968:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    496c:	mov	x0, x19
    4970:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4974:	mov	x2, #0x3                   	// #3
    4978:	add	x1, x1, #0x440
    497c:	bl	2220 <PyModule_AddIntConstant@plt>
    4980:	cmn	w0, #0x1
    4984:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    4988:	mov	x0, #0x0                   	// #0
    498c:	bl	25e0 <PyLong_FromLongLong@plt>
    4990:	mov	x20, x0
    4994:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4998:	mov	x2, x0
    499c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    49a0:	mov	x0, x19
    49a4:	add	x1, x1, #0x450
    49a8:	bl	2590 <PyModule_AddObject@plt>
    49ac:	cbz	w0, 49e0 <PyInit__lzma@@Base+0x108>
    49b0:	ldr	x0, [x20]
    49b4:	sub	x0, x0, #0x1
    49b8:	str	x0, [x20]
    49bc:	cbnz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    49c0:	mov	x0, x20
    49c4:	mov	x19, #0x0                   	// #0
    49c8:	bl	22f0 <_Py_Dealloc@plt>
    49cc:	mov	x0, x19
    49d0:	ldp	x19, x20, [sp, #16]
    49d4:	ldr	x21, [sp, #32]
    49d8:	ldp	x29, x30, [sp], #48
    49dc:	ret
    49e0:	mov	x0, #0x1                   	// #1
    49e4:	bl	25e0 <PyLong_FromLongLong@plt>
    49e8:	mov	x20, x0
    49ec:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    49f0:	mov	x2, x0
    49f4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    49f8:	mov	x0, x19
    49fc:	add	x1, x1, #0x460
    4a00:	bl	2590 <PyModule_AddObject@plt>
    4a04:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4a08:	mov	x0, #0x4                   	// #4
    4a0c:	bl	25e0 <PyLong_FromLongLong@plt>
    4a10:	mov	x20, x0
    4a14:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4a18:	mov	x2, x0
    4a1c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4a20:	mov	x0, x19
    4a24:	add	x1, x1, #0x470
    4a28:	bl	2590 <PyModule_AddObject@plt>
    4a2c:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4a30:	mov	x0, #0xa                   	// #10
    4a34:	bl	25e0 <PyLong_FromLongLong@plt>
    4a38:	mov	x20, x0
    4a3c:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4a40:	mov	x2, x0
    4a44:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4a48:	mov	x0, x19
    4a4c:	add	x1, x1, #0x480
    4a50:	bl	2590 <PyModule_AddObject@plt>
    4a54:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4a58:	mov	x0, #0xf                   	// #15
    4a5c:	bl	25e0 <PyLong_FromLongLong@plt>
    4a60:	mov	x20, x0
    4a64:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4a68:	mov	x2, x0
    4a6c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4a70:	mov	x0, x19
    4a74:	add	x1, x1, #0x490
    4a78:	bl	2590 <PyModule_AddObject@plt>
    4a7c:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4a80:	mov	x0, #0x10                  	// #16
    4a84:	bl	25e0 <PyLong_FromLongLong@plt>
    4a88:	mov	x20, x0
    4a8c:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4a90:	mov	x2, x0
    4a94:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4a98:	mov	x0, x19
    4a9c:	add	x1, x1, #0x4a0
    4aa0:	bl	2590 <PyModule_AddObject@plt>
    4aa4:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4aa8:	mov	x0, #0x1                   	// #1
    4aac:	movk	x0, #0x4000, lsl #48
    4ab0:	bl	25e0 <PyLong_FromLongLong@plt>
    4ab4:	mov	x20, x0
    4ab8:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4abc:	mov	x2, x0
    4ac0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4ac4:	mov	x0, x19
    4ac8:	add	x1, x1, #0x4b0
    4acc:	bl	2590 <PyModule_AddObject@plt>
    4ad0:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4ad4:	mov	x0, #0x21                  	// #33
    4ad8:	bl	25e0 <PyLong_FromLongLong@plt>
    4adc:	mov	x20, x0
    4ae0:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4ae4:	mov	x2, x0
    4ae8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4aec:	mov	x0, x19
    4af0:	add	x1, x1, #0x4c0
    4af4:	bl	2590 <PyModule_AddObject@plt>
    4af8:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4afc:	mov	x0, #0x3                   	// #3
    4b00:	bl	25e0 <PyLong_FromLongLong@plt>
    4b04:	mov	x20, x0
    4b08:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4b0c:	mov	x2, x0
    4b10:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4b14:	mov	x0, x19
    4b18:	add	x1, x1, #0x4d0
    4b1c:	bl	2590 <PyModule_AddObject@plt>
    4b20:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4b24:	mov	x0, #0x4                   	// #4
    4b28:	bl	25e0 <PyLong_FromLongLong@plt>
    4b2c:	mov	x20, x0
    4b30:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4b34:	mov	x2, x0
    4b38:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4b3c:	mov	x0, x19
    4b40:	add	x1, x1, #0x4e0
    4b44:	bl	2590 <PyModule_AddObject@plt>
    4b48:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4b4c:	mov	x0, #0x6                   	// #6
    4b50:	bl	25e0 <PyLong_FromLongLong@plt>
    4b54:	mov	x20, x0
    4b58:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4b5c:	mov	x2, x0
    4b60:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4b64:	mov	x0, x19
    4b68:	add	x1, x1, #0x4f0
    4b6c:	bl	2590 <PyModule_AddObject@plt>
    4b70:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4b74:	mov	x0, #0x7                   	// #7
    4b78:	bl	25e0 <PyLong_FromLongLong@plt>
    4b7c:	mov	x20, x0
    4b80:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4b84:	mov	x2, x0
    4b88:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4b8c:	mov	x0, x19
    4b90:	add	x1, x1, #0x500
    4b94:	bl	2590 <PyModule_AddObject@plt>
    4b98:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4b9c:	mov	x0, #0x8                   	// #8
    4ba0:	bl	25e0 <PyLong_FromLongLong@plt>
    4ba4:	mov	x20, x0
    4ba8:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4bac:	mov	x2, x0
    4bb0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4bb4:	mov	x0, x19
    4bb8:	add	x1, x1, #0x510
    4bbc:	bl	2590 <PyModule_AddObject@plt>
    4bc0:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4bc4:	mov	x0, #0x9                   	// #9
    4bc8:	bl	25e0 <PyLong_FromLongLong@plt>
    4bcc:	mov	x20, x0
    4bd0:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4bd4:	mov	x2, x0
    4bd8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4bdc:	mov	x0, x19
    4be0:	add	x1, x1, #0x520
    4be4:	bl	2590 <PyModule_AddObject@plt>
    4be8:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4bec:	mov	x0, #0x5                   	// #5
    4bf0:	bl	25e0 <PyLong_FromLongLong@plt>
    4bf4:	mov	x20, x0
    4bf8:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4bfc:	mov	x2, x0
    4c00:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4c04:	mov	x0, x19
    4c08:	add	x1, x1, #0x530
    4c0c:	bl	2590 <PyModule_AddObject@plt>
    4c10:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4c14:	mov	x0, #0x3                   	// #3
    4c18:	bl	25e0 <PyLong_FromLongLong@plt>
    4c1c:	mov	x20, x0
    4c20:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4c24:	mov	x2, x0
    4c28:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4c2c:	mov	x0, x19
    4c30:	add	x1, x1, #0x540
    4c34:	bl	2590 <PyModule_AddObject@plt>
    4c38:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4c3c:	mov	x0, #0x4                   	// #4
    4c40:	bl	25e0 <PyLong_FromLongLong@plt>
    4c44:	mov	x20, x0
    4c48:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4c4c:	mov	x2, x0
    4c50:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4c54:	mov	x0, x19
    4c58:	add	x1, x1, #0x548
    4c5c:	bl	2590 <PyModule_AddObject@plt>
    4c60:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4c64:	mov	x0, #0x12                  	// #18
    4c68:	bl	25e0 <PyLong_FromLongLong@plt>
    4c6c:	mov	x20, x0
    4c70:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4c74:	mov	x2, x0
    4c78:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4c7c:	mov	x0, x19
    4c80:	add	x1, x1, #0x550
    4c84:	bl	2590 <PyModule_AddObject@plt>
    4c88:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4c8c:	mov	x0, #0x13                  	// #19
    4c90:	bl	25e0 <PyLong_FromLongLong@plt>
    4c94:	mov	x20, x0
    4c98:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4c9c:	mov	x2, x0
    4ca0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4ca4:	mov	x0, x19
    4ca8:	add	x1, x1, #0x558
    4cac:	bl	2590 <PyModule_AddObject@plt>
    4cb0:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4cb4:	mov	x0, #0x14                  	// #20
    4cb8:	bl	25e0 <PyLong_FromLongLong@plt>
    4cbc:	mov	x20, x0
    4cc0:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4cc4:	mov	x2, x0
    4cc8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4ccc:	mov	x0, x19
    4cd0:	add	x1, x1, #0x560
    4cd4:	bl	2590 <PyModule_AddObject@plt>
    4cd8:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4cdc:	mov	x0, #0x1                   	// #1
    4ce0:	bl	25e0 <PyLong_FromLongLong@plt>
    4ce4:	mov	x20, x0
    4ce8:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4cec:	mov	x2, x0
    4cf0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4cf4:	mov	x0, x19
    4cf8:	add	x1, x1, #0x568
    4cfc:	bl	2590 <PyModule_AddObject@plt>
    4d00:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4d04:	mov	x0, #0x2                   	// #2
    4d08:	bl	25e0 <PyLong_FromLongLong@plt>
    4d0c:	mov	x20, x0
    4d10:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4d14:	mov	x2, x0
    4d18:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4d1c:	mov	x0, x19
    4d20:	add	x1, x1, #0x578
    4d24:	bl	2590 <PyModule_AddObject@plt>
    4d28:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4d2c:	mov	x0, #0x6                   	// #6
    4d30:	bl	25e0 <PyLong_FromLongLong@plt>
    4d34:	mov	x20, x0
    4d38:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4d3c:	mov	x2, x0
    4d40:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4d44:	mov	x0, x19
    4d48:	add	x1, x1, #0x588
    4d4c:	bl	2590 <PyModule_AddObject@plt>
    4d50:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4d54:	mov	x0, #0x80000000            	// #2147483648
    4d58:	bl	25e0 <PyLong_FromLongLong@plt>
    4d5c:	mov	x20, x0
    4d60:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4d64:	mov	x2, x0
    4d68:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4d6c:	mov	x0, x19
    4d70:	add	x1, x1, #0x598
    4d74:	bl	2590 <PyModule_AddObject@plt>
    4d78:	cbnz	w0, 49b0 <PyInit__lzma@@Base+0xd8>
    4d7c:	mov	x2, #0x0                   	// #0
    4d80:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4d84:	adrp	x0, 5000 <PyInit__lzma@@Base+0x728>
    4d88:	add	x1, x1, #0x5a8
    4d8c:	add	x0, x0, #0x5c0
    4d90:	mov	x3, #0x0                   	// #0
    4d94:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    4d98:	str	x0, [x21, #2528]
    4d9c:	mov	x2, x0
    4da0:	cbz	x0, 4e48 <PyInit__lzma@@Base+0x570>
    4da4:	ldr	x3, [x2]
    4da8:	mov	x0, x19
    4dac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4db0:	add	x1, x1, #0x5d0
    4db4:	add	x3, x3, #0x1
    4db8:	str	x3, [x2]
    4dbc:	bl	2590 <PyModule_AddObject@plt>
    4dc0:	cmn	w0, #0x1
    4dc4:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    4dc8:	adrp	x21, 18000 <PyInit__lzma@@Base+0x13728>
    4dcc:	add	x20, x21, #0x238
    4dd0:	mov	x0, x20
    4dd4:	bl	23e0 <PyType_Ready@plt>
    4dd8:	cmn	w0, #0x1
    4ddc:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    4de0:	ldr	x3, [x21, #568]
    4de4:	mov	x2, x20
    4de8:	mov	x0, x19
    4dec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4df0:	add	x3, x3, #0x1
    4df4:	add	x1, x1, #0x5e0
    4df8:	str	x3, [x21, #568]
    4dfc:	bl	2590 <PyModule_AddObject@plt>
    4e00:	cmn	w0, #0x1
    4e04:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    4e08:	add	x21, x20, #0x1a0
    4e0c:	mov	x0, x21
    4e10:	bl	23e0 <PyType_Ready@plt>
    4e14:	cmn	w0, #0x1
    4e18:	b.eq	4e48 <PyInit__lzma@@Base+0x570>  // b.none
    4e1c:	ldr	x3, [x20, #416]
    4e20:	mov	x2, x21
    4e24:	mov	x0, x19
    4e28:	adrp	x1, 5000 <PyInit__lzma@@Base+0x728>
    4e2c:	add	x3, x3, #0x1
    4e30:	str	x3, [x20, #416]
    4e34:	add	x1, x1, #0x5f0
    4e38:	bl	2590 <PyModule_AddObject@plt>
    4e3c:	cmn	w0, #0x1
    4e40:	b.ne	4e4c <PyInit__lzma@@Base+0x574>  // b.any
    4e44:	nop
    4e48:	mov	x19, #0x0                   	// #0
    4e4c:	mov	x0, x19
    4e50:	ldp	x19, x20, [sp, #16]
    4e54:	ldr	x21, [sp, #32]
    4e58:	ldp	x29, x30, [sp], #48
    4e5c:	ret

Disassembly of section .fini:

0000000000004e60 <.fini>:
    4e60:	stp	x29, x30, [sp, #-16]!
    4e64:	mov	x29, sp
    4e68:	ldp	x29, x30, [sp], #16
    4e6c:	ret
