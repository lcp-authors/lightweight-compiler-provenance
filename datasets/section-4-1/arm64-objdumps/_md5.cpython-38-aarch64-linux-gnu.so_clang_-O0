
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_md5.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 13000 <PyInit__md5@@Base+0x1210c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__md5@@Base-0xd4>:
     e20:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 14000 <PyInit__md5@@Base+0x1310c>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 14000 <PyInit__md5@@Base+0x1310c>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 13000 <PyInit__md5@@Base+0x1210c>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 14000 <PyInit__md5@@Base+0x1310c>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 14000 <PyInit__md5@@Base+0x1310c>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 13000 <PyInit__md5@@Base+0x1210c>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 14000 <PyInit__md5@@Base+0x1310c>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 14000 <PyInit__md5@@Base+0x1310c>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>

0000000000000ef4 <PyInit__md5@@Base>:
     ef4:	sub	sp, sp, #0x30
     ef8:	stp	x29, x30, [sp, #32]
     efc:	add	x29, sp, #0x20
     f00:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
     f04:	ldr	x8, [x8, #4048]
     f08:	adrp	x9, 14000 <PyInit__md5@@Base+0x1310c>
     f0c:	add	x9, x9, #0x98
     f10:	str	x8, [x9, #8]
     f14:	mov	x0, x9
     f18:	str	x9, [sp, #8]
     f1c:	bl	d80 <PyType_Ready@plt>
     f20:	cmp	w0, #0x0
     f24:	cset	w10, ge  // ge = tcont
     f28:	tbnz	w10, #0, f38 <PyInit__md5@@Base+0x44>
     f2c:	mov	x8, xzr
     f30:	stur	x8, [x29, #-8]
     f34:	b	f84 <PyInit__md5@@Base+0x90>
     f38:	adrp	x0, 14000 <PyInit__md5@@Base+0x1310c>
     f3c:	add	x0, x0, #0x238
     f40:	mov	w1, #0x3f5                 	// #1013
     f44:	bl	dc0 <PyModule_Create2@plt>
     f48:	str	x0, [sp, #16]
     f4c:	ldr	x8, [sp, #16]
     f50:	cbnz	x8, f60 <PyInit__md5@@Base+0x6c>
     f54:	mov	x8, xzr
     f58:	stur	x8, [x29, #-8]
     f5c:	b	f84 <PyInit__md5@@Base+0x90>
     f60:	ldr	x0, [sp, #8]
     f64:	bl	f94 <PyInit__md5@@Base+0xa0>
     f68:	ldr	x0, [sp, #16]
     f6c:	adrp	x1, 3000 <PyInit__md5@@Base+0x210c>
     f70:	add	x1, x1, #0x630
     f74:	ldr	x2, [sp, #8]
     f78:	bl	df0 <PyModule_AddObject@plt>
     f7c:	ldr	x8, [sp, #16]
     f80:	stur	x8, [x29, #-8]
     f84:	ldur	x0, [x29, #-8]
     f88:	ldp	x29, x30, [sp, #32]
     f8c:	add	sp, sp, #0x30
     f90:	ret
     f94:	sub	sp, sp, #0x10
     f98:	str	x0, [sp, #8]
     f9c:	ldr	x8, [sp, #8]
     fa0:	ldr	x9, [x8]
     fa4:	add	x9, x9, #0x1
     fa8:	str	x9, [x8]
     fac:	add	sp, sp, #0x10
     fb0:	ret
     fb4:	sub	sp, sp, #0x20
     fb8:	stp	x29, x30, [sp, #16]
     fbc:	add	x29, sp, #0x10
     fc0:	str	x0, [sp, #8]
     fc4:	ldr	x0, [sp, #8]
     fc8:	bl	d70 <PyObject_Free@plt>
     fcc:	ldp	x29, x30, [sp, #16]
     fd0:	add	sp, sp, #0x20
     fd4:	ret
     fd8:	sub	sp, sp, #0x20
     fdc:	stp	x29, x30, [sp, #16]
     fe0:	add	x29, sp, #0x10
     fe4:	str	x0, [sp, #8]
     fe8:	str	x1, [sp]
     fec:	ldr	x0, [sp, #8]
     ff0:	bl	1198 <PyInit__md5@@Base+0x2a4>
     ff4:	ldp	x29, x30, [sp, #16]
     ff8:	add	sp, sp, #0x20
     ffc:	ret
    1000:	sub	sp, sp, #0x20
    1004:	stp	x29, x30, [sp, #16]
    1008:	add	x29, sp, #0x10
    100c:	str	x0, [sp, #8]
    1010:	str	x1, [sp]
    1014:	ldr	x0, [sp, #8]
    1018:	bl	120c <PyInit__md5@@Base+0x318>
    101c:	ldp	x29, x30, [sp, #16]
    1020:	add	sp, sp, #0x20
    1024:	ret
    1028:	sub	sp, sp, #0x20
    102c:	stp	x29, x30, [sp, #16]
    1030:	add	x29, sp, #0x10
    1034:	str	x0, [sp, #8]
    1038:	str	x1, [sp]
    103c:	ldr	x0, [sp, #8]
    1040:	bl	303c <PyInit__md5@@Base+0x2148>
    1044:	ldp	x29, x30, [sp, #16]
    1048:	add	sp, sp, #0x20
    104c:	ret
    1050:	sub	sp, sp, #0x90
    1054:	stp	x29, x30, [sp, #128]
    1058:	add	x29, sp, #0x80
    105c:	stur	x0, [x29, #-16]
    1060:	stur	x1, [x29, #-24]
    1064:	ldur	x8, [x29, #-24]
    1068:	ldr	x8, [x8, #8]
    106c:	ldr	x8, [x8, #168]
    1070:	and	x8, x8, #0x10000000
    1074:	cbz	x8, 109c <PyInit__md5@@Base+0x1a8>
    1078:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
    107c:	ldr	x8, [x8, #4032]
    1080:	ldr	x0, [x8]
    1084:	adrp	x1, 3000 <PyInit__md5@@Base+0x210c>
    1088:	add	x1, x1, #0x657
    108c:	bl	d60 <PyErr_SetString@plt>
    1090:	mov	x8, xzr
    1094:	stur	x8, [x29, #-8]
    1098:	b	1188 <PyInit__md5@@Base+0x294>
    109c:	ldur	x8, [x29, #-24]
    10a0:	ldr	x8, [x8, #8]
    10a4:	ldr	x8, [x8, #160]
    10a8:	cbz	x8, 10c0 <PyInit__md5@@Base+0x1cc>
    10ac:	ldur	x8, [x29, #-24]
    10b0:	ldr	x8, [x8, #8]
    10b4:	ldr	x8, [x8, #160]
    10b8:	ldr	x8, [x8]
    10bc:	cbnz	x8, 10e4 <PyInit__md5@@Base+0x1f0>
    10c0:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
    10c4:	ldr	x8, [x8, #4032]
    10c8:	ldr	x0, [x8]
    10cc:	adrp	x1, 3000 <PyInit__md5@@Base+0x210c>
    10d0:	add	x1, x1, #0x686
    10d4:	bl	d60 <PyErr_SetString@plt>
    10d8:	mov	x8, xzr
    10dc:	stur	x8, [x29, #-8]
    10e0:	b	1188 <PyInit__md5@@Base+0x294>
    10e4:	ldur	x0, [x29, #-24]
    10e8:	add	x1, sp, #0x18
    10ec:	mov	w8, wzr
    10f0:	mov	w2, w8
    10f4:	bl	dd0 <PyObject_GetBuffer@plt>
    10f8:	mov	w8, #0xffffffff            	// #-1
    10fc:	cmp	w0, w8
    1100:	b.ne	1110 <PyInit__md5@@Base+0x21c>  // b.any
    1104:	mov	x8, xzr
    1108:	stur	x8, [x29, #-8]
    110c:	b	1188 <PyInit__md5@@Base+0x294>
    1110:	ldr	w8, [sp, #60]
    1114:	cmp	w8, #0x1
    1118:	b.le	1148 <PyInit__md5@@Base+0x254>
    111c:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
    1120:	ldr	x8, [x8, #4024]
    1124:	ldr	x0, [x8]
    1128:	adrp	x1, 3000 <PyInit__md5@@Base+0x210c>
    112c:	add	x1, x1, #0x6b0
    1130:	bl	d60 <PyErr_SetString@plt>
    1134:	add	x0, sp, #0x18
    1138:	bl	d10 <PyBuffer_Release@plt>
    113c:	mov	x8, xzr
    1140:	stur	x8, [x29, #-8]
    1144:	b	1188 <PyInit__md5@@Base+0x294>
    1148:	ldur	x8, [x29, #-16]
    114c:	add	x0, x8, #0x10
    1150:	add	x8, sp, #0x18
    1154:	ldr	x1, [sp, #24]
    1158:	ldr	x2, [sp, #40]
    115c:	str	x8, [sp, #16]
    1160:	bl	30a0 <PyInit__md5@@Base+0x21ac>
    1164:	ldr	x0, [sp, #16]
    1168:	bl	d10 <PyBuffer_Release@plt>
    116c:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
    1170:	ldr	x8, [x8, #4056]
    1174:	mov	x0, x8
    1178:	str	x8, [sp, #8]
    117c:	bl	f94 <PyInit__md5@@Base+0xa0>
    1180:	ldr	x8, [sp, #8]
    1184:	stur	x8, [x29, #-8]
    1188:	ldur	x0, [x29, #-8]
    118c:	ldp	x29, x30, [sp, #128]
    1190:	add	sp, sp, #0x90
    1194:	ret
    1198:	sub	sp, sp, #0x30
    119c:	stp	x29, x30, [sp, #32]
    11a0:	add	x29, sp, #0x20
    11a4:	str	x0, [sp, #16]
    11a8:	bl	11f0 <PyInit__md5@@Base+0x2fc>
    11ac:	str	x0, [sp, #8]
    11b0:	cbnz	x0, 11c0 <PyInit__md5@@Base+0x2cc>
    11b4:	mov	x8, xzr
    11b8:	stur	x8, [x29, #-8]
    11bc:	b	11e0 <PyInit__md5@@Base+0x2ec>
    11c0:	ldr	x8, [sp, #8]
    11c4:	add	x0, x8, #0x10
    11c8:	ldr	x8, [sp, #16]
    11cc:	add	x1, x8, #0x10
    11d0:	mov	x2, #0x60                  	// #96
    11d4:	bl	d00 <memcpy@plt>
    11d8:	ldr	x8, [sp, #8]
    11dc:	stur	x8, [x29, #-8]
    11e0:	ldur	x0, [x29, #-8]
    11e4:	ldp	x29, x30, [sp, #32]
    11e8:	add	sp, sp, #0x30
    11ec:	ret
    11f0:	stp	x29, x30, [sp, #-16]!
    11f4:	mov	x29, sp
    11f8:	adrp	x0, 14000 <PyInit__md5@@Base+0x1310c>
    11fc:	add	x0, x0, #0x98
    1200:	bl	de0 <_PyObject_New@plt>
    1204:	ldp	x29, x30, [sp], #16
    1208:	ret
    120c:	sub	sp, sp, #0xa0
    1210:	stp	x29, x30, [sp, #144]
    1214:	add	x29, sp, #0x90
    1218:	mov	x2, #0x60                  	// #96
    121c:	mov	x1, #0x10                  	// #16
    1220:	sub	x8, x29, #0x18
    1224:	add	x9, sp, #0x18
    1228:	stur	x0, [x29, #-8]
    122c:	ldur	x10, [x29, #-8]
    1230:	add	x10, x10, #0x10
    1234:	mov	x0, x9
    1238:	str	x1, [sp, #16]
    123c:	mov	x1, x10
    1240:	str	x8, [sp, #8]
    1244:	str	x9, [sp]
    1248:	bl	d00 <memcpy@plt>
    124c:	ldr	x0, [sp]
    1250:	ldr	x1, [sp, #8]
    1254:	bl	1270 <PyInit__md5@@Base+0x37c>
    1258:	ldr	x0, [sp, #8]
    125c:	ldr	x1, [sp, #16]
    1260:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1264:	ldp	x29, x30, [sp, #144]
    1268:	add	sp, sp, #0xa0
    126c:	ret
    1270:	sub	sp, sp, #0x30
    1274:	stp	x29, x30, [sp, #32]
    1278:	add	x29, sp, #0x20
    127c:	mov	w8, #0x8                   	// #8
    1280:	mov	w9, #0x80                  	// #128
    1284:	stur	x0, [x29, #-8]
    1288:	str	x1, [sp, #16]
    128c:	ldur	x10, [x29, #-8]
    1290:	ldr	w11, [x10, #24]
    1294:	mul	w8, w11, w8
    1298:	mov	w10, w8
    129c:	ubfx	x10, x10, #0, #32
    12a0:	ldur	x12, [x29, #-8]
    12a4:	ldr	x13, [x12]
    12a8:	add	x10, x13, x10
    12ac:	str	x10, [x12]
    12b0:	ldur	x10, [x29, #-8]
    12b4:	add	x10, x10, #0x1c
    12b8:	ldur	x12, [x29, #-8]
    12bc:	ldr	w8, [x12, #24]
    12c0:	mov	w13, w8
    12c4:	mov	w8, w13
    12c8:	add	w8, w8, #0x1
    12cc:	str	w8, [x12, #24]
    12d0:	add	x10, x10, x13
    12d4:	strb	w9, [x10]
    12d8:	ldur	x10, [x29, #-8]
    12dc:	ldr	w8, [x10, #24]
    12e0:	cmp	w8, #0x38
    12e4:	b.ls	1340 <PyInit__md5@@Base+0x44c>  // b.plast
    12e8:	ldur	x8, [x29, #-8]
    12ec:	ldr	w9, [x8, #24]
    12f0:	cmp	w9, #0x40
    12f4:	b.cs	1328 <PyInit__md5@@Base+0x434>  // b.hs, b.nlast
    12f8:	ldur	x8, [x29, #-8]
    12fc:	add	x8, x8, #0x1c
    1300:	ldur	x9, [x29, #-8]
    1304:	ldr	w10, [x9, #24]
    1308:	mov	w11, w10
    130c:	mov	w10, w11
    1310:	add	w10, w10, #0x1
    1314:	str	w10, [x9, #24]
    1318:	add	x8, x8, x11
    131c:	mov	w10, #0x0                   	// #0
    1320:	strb	w10, [x8]
    1324:	b	12e8 <PyInit__md5@@Base+0x3f4>
    1328:	ldur	x0, [x29, #-8]
    132c:	ldur	x8, [x29, #-8]
    1330:	add	x1, x8, #0x1c
    1334:	bl	154c <PyInit__md5@@Base+0x658>
    1338:	ldur	x8, [x29, #-8]
    133c:	str	wzr, [x8, #24]
    1340:	ldur	x8, [x29, #-8]
    1344:	ldr	w9, [x8, #24]
    1348:	cmp	w9, #0x38
    134c:	b.cs	1380 <PyInit__md5@@Base+0x48c>  // b.hs, b.nlast
    1350:	ldur	x8, [x29, #-8]
    1354:	add	x8, x8, #0x1c
    1358:	ldur	x9, [x29, #-8]
    135c:	ldr	w10, [x9, #24]
    1360:	mov	w11, w10
    1364:	mov	w10, w11
    1368:	add	w10, w10, #0x1
    136c:	str	w10, [x9, #24]
    1370:	add	x8, x8, x11
    1374:	mov	w10, #0x0                   	// #0
    1378:	strb	w10, [x8]
    137c:	b	1340 <PyInit__md5@@Base+0x44c>
    1380:	ldur	x8, [x29, #-8]
    1384:	ldr	x8, [x8]
    1388:	asr	x8, x8, #56
    138c:	and	x8, x8, #0xff
    1390:	ldur	x9, [x29, #-8]
    1394:	strb	w8, [x9, #91]
    1398:	ldur	x9, [x29, #-8]
    139c:	ldr	x9, [x9]
    13a0:	asr	x9, x9, #48
    13a4:	and	x9, x9, #0xff
    13a8:	ldur	x10, [x29, #-8]
    13ac:	strb	w9, [x10, #90]
    13b0:	ldur	x10, [x29, #-8]
    13b4:	ldr	x10, [x10]
    13b8:	asr	x10, x10, #40
    13bc:	and	x10, x10, #0xff
    13c0:	ldur	x11, [x29, #-8]
    13c4:	strb	w10, [x11, #89]
    13c8:	ldur	x11, [x29, #-8]
    13cc:	ldr	x11, [x11]
    13d0:	asr	x11, x11, #32
    13d4:	and	x11, x11, #0xff
    13d8:	ldur	x12, [x29, #-8]
    13dc:	strb	w11, [x12, #88]
    13e0:	ldur	x12, [x29, #-8]
    13e4:	ldr	x12, [x12]
    13e8:	asr	x12, x12, #24
    13ec:	and	x12, x12, #0xff
    13f0:	ldur	x13, [x29, #-8]
    13f4:	strb	w12, [x13, #87]
    13f8:	ldur	x13, [x29, #-8]
    13fc:	ldr	x13, [x13]
    1400:	asr	x13, x13, #16
    1404:	and	x13, x13, #0xff
    1408:	ldur	x14, [x29, #-8]
    140c:	strb	w13, [x14, #86]
    1410:	ldur	x14, [x29, #-8]
    1414:	ldr	x14, [x14]
    1418:	asr	x14, x14, #8
    141c:	and	x14, x14, #0xff
    1420:	ldur	x15, [x29, #-8]
    1424:	strb	w14, [x15, #85]
    1428:	ldur	x15, [x29, #-8]
    142c:	ldr	x15, [x15]
    1430:	and	x15, x15, #0xff
    1434:	ldur	x16, [x29, #-8]
    1438:	strb	w15, [x16, #84]
    143c:	ldur	x0, [x29, #-8]
    1440:	ldur	x16, [x29, #-8]
    1444:	add	x1, x16, #0x1c
    1448:	bl	154c <PyInit__md5@@Base+0x658>
    144c:	str	wzr, [sp, #12]
    1450:	ldr	w8, [sp, #12]
    1454:	cmp	w8, #0x4
    1458:	b.ge	1540 <PyInit__md5@@Base+0x64c>  // b.tcont
    145c:	ldur	x8, [x29, #-8]
    1460:	mov	x9, #0x8                   	// #8
    1464:	add	x8, x8, #0x8
    1468:	ldrsw	x10, [sp, #12]
    146c:	ldr	w11, [x8, x10, lsl #2]
    1470:	lsr	w11, w11, #24
    1474:	and	w11, w11, #0xff
    1478:	ldr	x8, [sp, #16]
    147c:	ldr	w12, [sp, #12]
    1480:	mov	w13, #0x4                   	// #4
    1484:	mul	w12, w13, w12
    1488:	mov	w0, w12
    148c:	sxtw	x10, w0
    1490:	add	x8, x8, x10
    1494:	strb	w11, [x8, #3]
    1498:	ldur	x8, [x29, #-8]
    149c:	add	x8, x8, #0x8
    14a0:	ldrsw	x10, [sp, #12]
    14a4:	ldr	w11, [x8, x10, lsl #2]
    14a8:	lsr	w11, w11, #16
    14ac:	and	w11, w11, #0xff
    14b0:	ldr	x8, [sp, #16]
    14b4:	ldr	w12, [sp, #12]
    14b8:	mul	w12, w13, w12
    14bc:	mov	w0, w12
    14c0:	sxtw	x10, w0
    14c4:	add	x8, x8, x10
    14c8:	strb	w11, [x8, #2]
    14cc:	ldur	x8, [x29, #-8]
    14d0:	add	x8, x8, #0x8
    14d4:	ldrsw	x10, [sp, #12]
    14d8:	ldr	w11, [x8, x10, lsl #2]
    14dc:	lsr	w9, w11, w9
    14e0:	and	w9, w9, #0xff
    14e4:	ldr	x8, [sp, #16]
    14e8:	ldr	w11, [sp, #12]
    14ec:	mul	w11, w13, w11
    14f0:	mov	w0, w11
    14f4:	sxtw	x10, w0
    14f8:	add	x8, x8, x10
    14fc:	strb	w9, [x8, #1]
    1500:	ldur	x8, [x29, #-8]
    1504:	add	x8, x8, #0x8
    1508:	ldrsw	x10, [sp, #12]
    150c:	ldr	w9, [x8, x10, lsl #2]
    1510:	and	w9, w9, #0xff
    1514:	ldr	x8, [sp, #16]
    1518:	ldr	w11, [sp, #12]
    151c:	mul	w11, w13, w11
    1520:	mov	w0, w11
    1524:	sxtw	x10, w0
    1528:	add	x8, x8, x10
    152c:	strb	w9, [x8]
    1530:	ldr	w8, [sp, #12]
    1534:	add	w8, w8, #0x1
    1538:	str	w8, [sp, #12]
    153c:	b	1450 <PyInit__md5@@Base+0x55c>
    1540:	ldp	x29, x30, [sp, #32]
    1544:	add	sp, sp, #0x30
    1548:	ret
    154c:	sub	sp, sp, #0xd0
    1550:	stp	x29, x30, [sp, #112]
    1554:	stp	x28, x27, [sp, #128]
    1558:	stp	x26, x25, [sp, #144]
    155c:	stp	x24, x23, [sp, #160]
    1560:	stp	x22, x21, [sp, #176]
    1564:	stp	x20, x19, [sp, #192]
    1568:	str	x0, [sp, #104]
    156c:	str	x1, [sp, #96]
    1570:	str	wzr, [sp, #92]
    1574:	ldr	w8, [sp, #92]
    1578:	cmp	w8, #0x10
    157c:	b.cs	1648 <PyInit__md5@@Base+0x754>  // b.hs, b.nlast
    1580:	ldr	x8, [sp, #96]
    1584:	ldr	w9, [sp, #92]
    1588:	mov	w10, #0x4                   	// #4
    158c:	mul	w9, w10, w9
    1590:	mov	w11, w9
    1594:	ubfx	x11, x11, #0, #32
    1598:	add	x8, x8, x11
    159c:	ldrb	w9, [x8, #3]
    15a0:	and	w9, w9, #0xff
    15a4:	mov	w0, w9
    15a8:	sxtw	x8, w0
    15ac:	ldr	x11, [sp, #96]
    15b0:	ldr	w9, [sp, #92]
    15b4:	mul	w9, w10, w9
    15b8:	mov	w12, w9
    15bc:	ubfx	x12, x12, #0, #32
    15c0:	add	x11, x11, x12
    15c4:	ldrb	w9, [x11, #2]
    15c8:	and	w9, w9, #0xff
    15cc:	mov	w0, w9
    15d0:	sxtw	x11, w0
    15d4:	lsl	x11, x11, #16
    15d8:	orr	x8, x11, x8, lsl #24
    15dc:	ldr	x11, [sp, #96]
    15e0:	ldr	w9, [sp, #92]
    15e4:	mul	w9, w10, w9
    15e8:	mov	w12, w9
    15ec:	ubfx	x12, x12, #0, #32
    15f0:	add	x11, x11, x12
    15f4:	ldrb	w9, [x11, #1]
    15f8:	and	w9, w9, #0xff
    15fc:	mov	w0, w9
    1600:	sxtw	x11, w0
    1604:	orr	x8, x8, x11, lsl #8
    1608:	ldr	x11, [sp, #96]
    160c:	ldr	w9, [sp, #92]
    1610:	mul	w9, w10, w9
    1614:	ldrb	w9, [x11, w9, uxtw]
    1618:	and	w9, w9, #0xff
    161c:	mov	w0, w9
    1620:	sxtw	x11, w0
    1624:	orr	x8, x8, x11
    1628:	ldr	w9, [sp, #92]
    162c:	mov	w11, w9
    1630:	add	x12, sp, #0x1c
    1634:	str	w8, [x12, x11, lsl #2]
    1638:	ldr	w8, [sp, #92]
    163c:	add	w8, w8, #0x1
    1640:	str	w8, [sp, #92]
    1644:	b	1574 <PyInit__md5@@Base+0x680>
    1648:	ldr	x8, [sp, #104]
    164c:	ldr	w9, [x8, #8]
    1650:	str	w9, [sp, #24]
    1654:	ldr	x8, [sp, #104]
    1658:	ldr	w9, [x8, #12]
    165c:	str	w9, [sp, #20]
    1660:	ldr	x8, [sp, #104]
    1664:	ldr	w9, [x8, #16]
    1668:	str	w9, [sp, #16]
    166c:	ldr	x8, [sp, #104]
    1670:	ldr	w9, [x8, #20]
    1674:	str	w9, [sp, #12]
    1678:	ldr	w9, [sp, #24]
    167c:	ldr	w10, [sp, #12]
    1680:	ldr	w11, [sp, #20]
    1684:	ldr	w12, [sp, #16]
    1688:	ldr	w13, [sp, #12]
    168c:	eor	w12, w12, w13
    1690:	and	w11, w11, w12
    1694:	eor	w10, w10, w11
    1698:	add	w9, w9, w10
    169c:	ldr	w10, [sp, #28]
    16a0:	add	w9, w9, w10
    16a4:	mov	w8, w9
    16a8:	ubfx	x8, x8, #0, #32
    16ac:	mov	x14, #0xa478                	// #42104
    16b0:	movk	x14, #0xd76a, lsl #16
    16b4:	add	x8, x8, x14
    16b8:	str	w8, [sp, #24]
    16bc:	ldr	w8, [sp, #24]
    16c0:	mov	w14, w8
    16c4:	ldr	w8, [sp, #24]
    16c8:	mov	w15, w8
    16cc:	and	x15, x15, #0xffffffff
    16d0:	lsr	x15, x15, #25
    16d4:	orr	x14, x15, x14, lsl #7
    16d8:	ldr	w8, [sp, #20]
    16dc:	mov	w15, w8
    16e0:	add	x15, x15, w14, uxtw
    16e4:	str	w15, [sp, #24]
    16e8:	ldr	w8, [sp, #12]
    16ec:	ldr	w9, [sp, #16]
    16f0:	ldr	w10, [sp, #24]
    16f4:	ldr	w11, [sp, #20]
    16f8:	ldr	w12, [sp, #16]
    16fc:	eor	w11, w11, w12
    1700:	and	w10, w10, w11
    1704:	eor	w9, w9, w10
    1708:	add	w8, w8, w9
    170c:	ldr	w9, [sp, #32]
    1710:	add	w8, w8, w9
    1714:	mov	w16, w8
    1718:	ubfx	x16, x16, #0, #32
    171c:	mov	x17, #0xb756                	// #46934
    1720:	movk	x17, #0xe8c7, lsl #16
    1724:	add	x16, x16, x17
    1728:	str	w16, [sp, #12]
    172c:	ldr	w8, [sp, #12]
    1730:	mov	w17, w8
    1734:	ldr	w8, [sp, #12]
    1738:	mov	w18, w8
    173c:	and	x18, x18, #0xffffffff
    1740:	lsr	x18, x18, #20
    1744:	orr	x17, x18, x17, lsl #12
    1748:	ldr	w8, [sp, #24]
    174c:	mov	w18, w8
    1750:	add	x18, x18, w17, uxtw
    1754:	str	w18, [sp, #12]
    1758:	ldr	w8, [sp, #16]
    175c:	ldr	w9, [sp, #20]
    1760:	ldr	w10, [sp, #12]
    1764:	ldr	w11, [sp, #24]
    1768:	ldr	w12, [sp, #20]
    176c:	eor	w11, w11, w12
    1770:	and	w10, w10, w11
    1774:	eor	w9, w9, w10
    1778:	add	w8, w8, w9
    177c:	ldr	w9, [sp, #36]
    1780:	add	w8, w8, w9
    1784:	mov	w0, w8
    1788:	ubfx	x0, x0, #0, #32
    178c:	mov	x1, #0x70db                	// #28891
    1790:	movk	x1, #0x2420, lsl #16
    1794:	add	x0, x0, x1
    1798:	str	w0, [sp, #16]
    179c:	ldr	w8, [sp, #16]
    17a0:	mov	w1, w8
    17a4:	ldr	w8, [sp, #16]
    17a8:	mov	w2, w8
    17ac:	and	x2, x2, #0xffffffff
    17b0:	lsr	x2, x2, #15
    17b4:	orr	x1, x2, x1, lsl #17
    17b8:	ldr	w8, [sp, #12]
    17bc:	mov	w2, w8
    17c0:	add	x2, x2, w1, uxtw
    17c4:	str	w2, [sp, #16]
    17c8:	ldr	w8, [sp, #20]
    17cc:	ldr	w9, [sp, #24]
    17d0:	ldr	w10, [sp, #16]
    17d4:	ldr	w11, [sp, #12]
    17d8:	ldr	w12, [sp, #24]
    17dc:	eor	w11, w11, w12
    17e0:	and	w10, w10, w11
    17e4:	eor	w9, w9, w10
    17e8:	add	w8, w8, w9
    17ec:	ldr	w9, [sp, #40]
    17f0:	add	w8, w8, w9
    17f4:	mov	w3, w8
    17f8:	ubfx	x3, x3, #0, #32
    17fc:	mov	x4, #0xceee                	// #52974
    1800:	movk	x4, #0xc1bd, lsl #16
    1804:	add	x3, x3, x4
    1808:	str	w3, [sp, #20]
    180c:	ldr	w8, [sp, #20]
    1810:	mov	w4, w8
    1814:	ldr	w8, [sp, #20]
    1818:	mov	w5, w8
    181c:	and	x5, x5, #0xffffffff
    1820:	lsr	x5, x5, #10
    1824:	orr	x4, x5, x4, lsl #22
    1828:	ldr	w8, [sp, #16]
    182c:	mov	w5, w8
    1830:	add	x5, x5, w4, uxtw
    1834:	str	w5, [sp, #20]
    1838:	ldr	w8, [sp, #24]
    183c:	ldr	w9, [sp, #12]
    1840:	ldr	w10, [sp, #20]
    1844:	ldr	w11, [sp, #16]
    1848:	ldr	w12, [sp, #12]
    184c:	eor	w11, w11, w12
    1850:	and	w10, w10, w11
    1854:	eor	w9, w9, w10
    1858:	add	w8, w8, w9
    185c:	ldr	w9, [sp, #44]
    1860:	add	w8, w8, w9
    1864:	mov	w6, w8
    1868:	ubfx	x6, x6, #0, #32
    186c:	mov	x7, #0xfaf                 	// #4015
    1870:	movk	x7, #0xf57c, lsl #16
    1874:	add	x6, x6, x7
    1878:	str	w6, [sp, #24]
    187c:	ldr	w8, [sp, #24]
    1880:	mov	w7, w8
    1884:	ldr	w8, [sp, #24]
    1888:	mov	w19, w8
    188c:	and	x19, x19, #0xffffffff
    1890:	lsr	x19, x19, #25
    1894:	orr	x7, x19, x7, lsl #7
    1898:	ldr	w8, [sp, #20]
    189c:	mov	w19, w8
    18a0:	add	x19, x19, w7, uxtw
    18a4:	str	w19, [sp, #24]
    18a8:	ldr	w8, [sp, #12]
    18ac:	ldr	w9, [sp, #16]
    18b0:	ldr	w10, [sp, #24]
    18b4:	ldr	w11, [sp, #20]
    18b8:	ldr	w12, [sp, #16]
    18bc:	eor	w11, w11, w12
    18c0:	and	w10, w10, w11
    18c4:	eor	w9, w9, w10
    18c8:	add	w8, w8, w9
    18cc:	ldr	w9, [sp, #48]
    18d0:	add	w8, w8, w9
    18d4:	mov	w20, w8
    18d8:	ubfx	x20, x20, #0, #32
    18dc:	mov	x21, #0xc62a                	// #50730
    18e0:	movk	x21, #0x4787, lsl #16
    18e4:	add	x20, x20, x21
    18e8:	str	w20, [sp, #12]
    18ec:	ldr	w8, [sp, #12]
    18f0:	mov	w21, w8
    18f4:	ldr	w8, [sp, #12]
    18f8:	mov	w22, w8
    18fc:	and	x22, x22, #0xffffffff
    1900:	lsr	x22, x22, #20
    1904:	orr	x21, x22, x21, lsl #12
    1908:	ldr	w8, [sp, #24]
    190c:	mov	w22, w8
    1910:	add	x22, x22, w21, uxtw
    1914:	str	w22, [sp, #12]
    1918:	ldr	w8, [sp, #16]
    191c:	ldr	w9, [sp, #20]
    1920:	ldr	w10, [sp, #12]
    1924:	ldr	w11, [sp, #24]
    1928:	ldr	w12, [sp, #20]
    192c:	eor	w11, w11, w12
    1930:	and	w10, w10, w11
    1934:	eor	w9, w9, w10
    1938:	add	w8, w8, w9
    193c:	ldr	w9, [sp, #52]
    1940:	add	w8, w8, w9
    1944:	mov	w23, w8
    1948:	ubfx	x23, x23, #0, #32
    194c:	mov	x24, #0x4613                	// #17939
    1950:	movk	x24, #0xa830, lsl #16
    1954:	add	x23, x23, x24
    1958:	str	w23, [sp, #16]
    195c:	ldr	w8, [sp, #16]
    1960:	mov	w24, w8
    1964:	ldr	w8, [sp, #16]
    1968:	mov	w25, w8
    196c:	and	x25, x25, #0xffffffff
    1970:	lsr	x25, x25, #15
    1974:	orr	x24, x25, x24, lsl #17
    1978:	ldr	w8, [sp, #12]
    197c:	mov	w25, w8
    1980:	add	x25, x25, w24, uxtw
    1984:	str	w25, [sp, #16]
    1988:	ldr	w8, [sp, #20]
    198c:	ldr	w9, [sp, #24]
    1990:	ldr	w10, [sp, #16]
    1994:	ldr	w11, [sp, #12]
    1998:	ldr	w12, [sp, #24]
    199c:	eor	w11, w11, w12
    19a0:	and	w10, w10, w11
    19a4:	eor	w9, w9, w10
    19a8:	add	w8, w8, w9
    19ac:	ldr	w9, [sp, #56]
    19b0:	add	w8, w8, w9
    19b4:	mov	w26, w8
    19b8:	ubfx	x26, x26, #0, #32
    19bc:	mov	x27, #0x9501                	// #38145
    19c0:	movk	x27, #0xfd46, lsl #16
    19c4:	add	x26, x26, x27
    19c8:	str	w26, [sp, #20]
    19cc:	ldr	w8, [sp, #20]
    19d0:	mov	w27, w8
    19d4:	ldr	w8, [sp, #20]
    19d8:	mov	w28, w8
    19dc:	and	x28, x28, #0xffffffff
    19e0:	lsr	x28, x28, #10
    19e4:	orr	x27, x28, x27, lsl #22
    19e8:	ldr	w8, [sp, #16]
    19ec:	mov	w28, w8
    19f0:	add	x28, x28, w27, uxtw
    19f4:	str	w28, [sp, #20]
    19f8:	ldr	w8, [sp, #24]
    19fc:	ldr	w9, [sp, #12]
    1a00:	ldr	w10, [sp, #20]
    1a04:	ldr	w11, [sp, #16]
    1a08:	ldr	w12, [sp, #12]
    1a0c:	eor	w11, w11, w12
    1a10:	and	w10, w10, w11
    1a14:	eor	w9, w9, w10
    1a18:	add	w8, w8, w9
    1a1c:	ldr	w9, [sp, #60]
    1a20:	add	w8, w8, w9
    1a24:	mov	w29, w8
    1a28:	ubfx	x29, x29, #0, #32
    1a2c:	mov	x30, #0x98d8                	// #39128
    1a30:	movk	x30, #0x6980, lsl #16
    1a34:	add	x29, x29, x30
    1a38:	str	w29, [sp, #24]
    1a3c:	ldr	w8, [sp, #24]
    1a40:	mov	w30, w8
    1a44:	ldr	w8, [sp, #24]
    1a48:	and	x8, x8, #0xffffffff
    1a4c:	lsr	x8, x8, #25
    1a50:	orr	x8, x8, x30, lsl #7
    1a54:	ldr	w9, [sp, #20]
    1a58:	mov	w30, w9
    1a5c:	add	x30, x30, w8, uxtw
    1a60:	str	w30, [sp, #24]
    1a64:	ldr	w8, [sp, #12]
    1a68:	ldr	w9, [sp, #16]
    1a6c:	ldr	w10, [sp, #24]
    1a70:	ldr	w11, [sp, #20]
    1a74:	ldr	w12, [sp, #16]
    1a78:	eor	w11, w11, w12
    1a7c:	and	w10, w10, w11
    1a80:	eor	w9, w9, w10
    1a84:	add	w8, w8, w9
    1a88:	ldr	w9, [sp, #64]
    1a8c:	add	w8, w8, w9
    1a90:	ubfx	x8, x8, #0, #32
    1a94:	mov	x9, #0xf7af                	// #63407
    1a98:	movk	x9, #0x8b44, lsl #16
    1a9c:	add	x8, x8, x9
    1aa0:	str	w8, [sp, #12]
    1aa4:	ldr	w8, [sp, #12]
    1aa8:	mov	w9, w8
    1aac:	ldr	w8, [sp, #12]
    1ab0:	and	x8, x8, #0xffffffff
    1ab4:	lsr	x8, x8, #20
    1ab8:	orr	x8, x8, x9, lsl #12
    1abc:	ldr	w10, [sp, #24]
    1ac0:	mov	w9, w10
    1ac4:	add	x9, x9, w8, uxtw
    1ac8:	str	w9, [sp, #12]
    1acc:	ldr	w8, [sp, #16]
    1ad0:	ldr	w9, [sp, #20]
    1ad4:	ldr	w10, [sp, #12]
    1ad8:	ldr	w11, [sp, #24]
    1adc:	ldr	w12, [sp, #20]
    1ae0:	eor	w11, w11, w12
    1ae4:	and	w10, w10, w11
    1ae8:	eor	w9, w9, w10
    1aec:	add	w8, w8, w9
    1af0:	ldr	w9, [sp, #68]
    1af4:	add	w8, w8, w9
    1af8:	ubfx	x8, x8, #0, #32
    1afc:	mov	x9, #0x5bb1                	// #23473
    1b00:	movk	x9, #0xffff, lsl #16
    1b04:	add	x8, x8, x9
    1b08:	str	w8, [sp, #16]
    1b0c:	ldr	w8, [sp, #16]
    1b10:	mov	w9, w8
    1b14:	ldr	w8, [sp, #16]
    1b18:	and	x8, x8, #0xffffffff
    1b1c:	lsr	x8, x8, #15
    1b20:	orr	x8, x8, x9, lsl #17
    1b24:	ldr	w10, [sp, #12]
    1b28:	mov	w9, w10
    1b2c:	add	x9, x9, w8, uxtw
    1b30:	str	w9, [sp, #16]
    1b34:	ldr	w8, [sp, #20]
    1b38:	ldr	w9, [sp, #24]
    1b3c:	ldr	w10, [sp, #16]
    1b40:	ldr	w11, [sp, #12]
    1b44:	ldr	w12, [sp, #24]
    1b48:	eor	w11, w11, w12
    1b4c:	and	w10, w10, w11
    1b50:	eor	w9, w9, w10
    1b54:	add	w8, w8, w9
    1b58:	ldr	w9, [sp, #72]
    1b5c:	add	w8, w8, w9
    1b60:	ubfx	x8, x8, #0, #32
    1b64:	mov	x9, #0xd7be                	// #55230
    1b68:	movk	x9, #0x895c, lsl #16
    1b6c:	add	x8, x8, x9
    1b70:	str	w8, [sp, #20]
    1b74:	ldr	w8, [sp, #20]
    1b78:	mov	w9, w8
    1b7c:	ldr	w8, [sp, #20]
    1b80:	and	x8, x8, #0xffffffff
    1b84:	lsr	x8, x8, #10
    1b88:	orr	x8, x8, x9, lsl #22
    1b8c:	ldr	w10, [sp, #16]
    1b90:	mov	w9, w10
    1b94:	add	x9, x9, w8, uxtw
    1b98:	str	w9, [sp, #20]
    1b9c:	ldr	w8, [sp, #24]
    1ba0:	ldr	w9, [sp, #12]
    1ba4:	ldr	w10, [sp, #20]
    1ba8:	ldr	w11, [sp, #16]
    1bac:	ldr	w12, [sp, #12]
    1bb0:	eor	w11, w11, w12
    1bb4:	and	w10, w10, w11
    1bb8:	eor	w9, w9, w10
    1bbc:	add	w8, w8, w9
    1bc0:	ldr	w9, [sp, #76]
    1bc4:	add	w8, w8, w9
    1bc8:	ubfx	x8, x8, #0, #32
    1bcc:	mov	x9, #0x1122                	// #4386
    1bd0:	movk	x9, #0x6b90, lsl #16
    1bd4:	add	x8, x8, x9
    1bd8:	str	w8, [sp, #24]
    1bdc:	ldr	w8, [sp, #24]
    1be0:	mov	w9, w8
    1be4:	ldr	w8, [sp, #24]
    1be8:	and	x8, x8, #0xffffffff
    1bec:	lsr	x8, x8, #25
    1bf0:	orr	x8, x8, x9, lsl #7
    1bf4:	ldr	w10, [sp, #20]
    1bf8:	mov	w9, w10
    1bfc:	add	x9, x9, w8, uxtw
    1c00:	str	w9, [sp, #24]
    1c04:	ldr	w8, [sp, #12]
    1c08:	ldr	w9, [sp, #16]
    1c0c:	ldr	w10, [sp, #24]
    1c10:	ldr	w11, [sp, #20]
    1c14:	ldr	w12, [sp, #16]
    1c18:	eor	w11, w11, w12
    1c1c:	and	w10, w10, w11
    1c20:	eor	w9, w9, w10
    1c24:	add	w8, w8, w9
    1c28:	ldr	w9, [sp, #80]
    1c2c:	add	w8, w8, w9
    1c30:	ubfx	x8, x8, #0, #32
    1c34:	mov	x9, #0x7193                	// #29075
    1c38:	movk	x9, #0xfd98, lsl #16
    1c3c:	add	x8, x8, x9
    1c40:	str	w8, [sp, #12]
    1c44:	ldr	w8, [sp, #12]
    1c48:	mov	w9, w8
    1c4c:	ldr	w8, [sp, #12]
    1c50:	and	x8, x8, #0xffffffff
    1c54:	lsr	x8, x8, #20
    1c58:	orr	x8, x8, x9, lsl #12
    1c5c:	ldr	w10, [sp, #24]
    1c60:	mov	w9, w10
    1c64:	add	x9, x9, w8, uxtw
    1c68:	str	w9, [sp, #12]
    1c6c:	ldr	w8, [sp, #16]
    1c70:	ldr	w9, [sp, #20]
    1c74:	ldr	w10, [sp, #12]
    1c78:	ldr	w11, [sp, #24]
    1c7c:	ldr	w12, [sp, #20]
    1c80:	eor	w11, w11, w12
    1c84:	and	w10, w10, w11
    1c88:	eor	w9, w9, w10
    1c8c:	add	w8, w8, w9
    1c90:	ldr	w9, [sp, #84]
    1c94:	add	w8, w8, w9
    1c98:	ubfx	x8, x8, #0, #32
    1c9c:	mov	x9, #0x438e                	// #17294
    1ca0:	movk	x9, #0xa679, lsl #16
    1ca4:	add	x8, x8, x9
    1ca8:	str	w8, [sp, #16]
    1cac:	ldr	w8, [sp, #16]
    1cb0:	mov	w9, w8
    1cb4:	ldr	w8, [sp, #16]
    1cb8:	and	x8, x8, #0xffffffff
    1cbc:	lsr	x8, x8, #15
    1cc0:	orr	x8, x8, x9, lsl #17
    1cc4:	ldr	w10, [sp, #12]
    1cc8:	mov	w9, w10
    1ccc:	add	x9, x9, w8, uxtw
    1cd0:	str	w9, [sp, #16]
    1cd4:	ldr	w8, [sp, #20]
    1cd8:	ldr	w9, [sp, #24]
    1cdc:	ldr	w10, [sp, #16]
    1ce0:	ldr	w11, [sp, #12]
    1ce4:	ldr	w12, [sp, #24]
    1ce8:	eor	w11, w11, w12
    1cec:	and	w10, w10, w11
    1cf0:	eor	w9, w9, w10
    1cf4:	add	w8, w8, w9
    1cf8:	ldr	w9, [sp, #88]
    1cfc:	add	w8, w8, w9
    1d00:	ubfx	x8, x8, #0, #32
    1d04:	mov	x9, #0x821                 	// #2081
    1d08:	movk	x9, #0x49b4, lsl #16
    1d0c:	add	x8, x8, x9
    1d10:	str	w8, [sp, #20]
    1d14:	ldr	w8, [sp, #20]
    1d18:	mov	w9, w8
    1d1c:	ldr	w8, [sp, #20]
    1d20:	and	x8, x8, #0xffffffff
    1d24:	lsr	x8, x8, #10
    1d28:	orr	x8, x8, x9, lsl #22
    1d2c:	ldr	w10, [sp, #16]
    1d30:	mov	w9, w10
    1d34:	add	x9, x9, w8, uxtw
    1d38:	str	w9, [sp, #20]
    1d3c:	ldr	w8, [sp, #24]
    1d40:	ldr	w9, [sp, #16]
    1d44:	ldr	w10, [sp, #12]
    1d48:	ldr	w11, [sp, #16]
    1d4c:	ldr	w12, [sp, #20]
    1d50:	eor	w11, w11, w12
    1d54:	and	w10, w10, w11
    1d58:	eor	w9, w9, w10
    1d5c:	add	w8, w8, w9
    1d60:	ldr	w9, [sp, #32]
    1d64:	add	w8, w8, w9
    1d68:	ubfx	x8, x8, #0, #32
    1d6c:	mov	x9, #0x2562                	// #9570
    1d70:	movk	x9, #0xf61e, lsl #16
    1d74:	add	x8, x8, x9
    1d78:	str	w8, [sp, #24]
    1d7c:	ldr	w8, [sp, #24]
    1d80:	mov	w9, w8
    1d84:	ldr	w8, [sp, #24]
    1d88:	and	x8, x8, #0xffffffff
    1d8c:	lsr	x8, x8, #27
    1d90:	orr	x8, x8, x9, lsl #5
    1d94:	ldr	w10, [sp, #20]
    1d98:	mov	w9, w10
    1d9c:	add	x9, x9, w8, uxtw
    1da0:	str	w9, [sp, #24]
    1da4:	ldr	w8, [sp, #12]
    1da8:	ldr	w9, [sp, #20]
    1dac:	ldr	w10, [sp, #16]
    1db0:	ldr	w11, [sp, #20]
    1db4:	ldr	w12, [sp, #24]
    1db8:	eor	w11, w11, w12
    1dbc:	and	w10, w10, w11
    1dc0:	eor	w9, w9, w10
    1dc4:	add	w8, w8, w9
    1dc8:	ldr	w9, [sp, #52]
    1dcc:	add	w8, w8, w9
    1dd0:	ubfx	x8, x8, #0, #32
    1dd4:	mov	x9, #0xb340                	// #45888
    1dd8:	movk	x9, #0xc040, lsl #16
    1ddc:	add	x8, x8, x9
    1de0:	str	w8, [sp, #12]
    1de4:	ldr	w8, [sp, #12]
    1de8:	mov	w9, w8
    1dec:	ldr	w8, [sp, #12]
    1df0:	and	x8, x8, #0xffffffff
    1df4:	lsr	x8, x8, #23
    1df8:	orr	x8, x8, x9, lsl #9
    1dfc:	ldr	w10, [sp, #24]
    1e00:	mov	w9, w10
    1e04:	add	x9, x9, w8, uxtw
    1e08:	str	w9, [sp, #12]
    1e0c:	ldr	w8, [sp, #16]
    1e10:	ldr	w9, [sp, #24]
    1e14:	ldr	w10, [sp, #20]
    1e18:	ldr	w11, [sp, #24]
    1e1c:	ldr	w12, [sp, #12]
    1e20:	eor	w11, w11, w12
    1e24:	and	w10, w10, w11
    1e28:	eor	w9, w9, w10
    1e2c:	add	w8, w8, w9
    1e30:	ldr	w9, [sp, #72]
    1e34:	add	w8, w8, w9
    1e38:	ubfx	x8, x8, #0, #32
    1e3c:	mov	x9, #0x5a51                	// #23121
    1e40:	movk	x9, #0x265e, lsl #16
    1e44:	add	x8, x8, x9
    1e48:	str	w8, [sp, #16]
    1e4c:	ldr	w8, [sp, #16]
    1e50:	mov	w9, w8
    1e54:	ldr	w8, [sp, #16]
    1e58:	and	x8, x8, #0xffffffff
    1e5c:	lsr	x8, x8, #18
    1e60:	orr	x8, x8, x9, lsl #14
    1e64:	ldr	w10, [sp, #12]
    1e68:	mov	w9, w10
    1e6c:	add	x9, x9, w8, uxtw
    1e70:	str	w9, [sp, #16]
    1e74:	ldr	w8, [sp, #20]
    1e78:	ldr	w9, [sp, #12]
    1e7c:	ldr	w10, [sp, #24]
    1e80:	ldr	w11, [sp, #12]
    1e84:	ldr	w12, [sp, #16]
    1e88:	eor	w11, w11, w12
    1e8c:	and	w10, w10, w11
    1e90:	eor	w9, w9, w10
    1e94:	add	w8, w8, w9
    1e98:	ldr	w9, [sp, #28]
    1e9c:	add	w8, w8, w9
    1ea0:	ubfx	x8, x8, #0, #32
    1ea4:	mov	x9, #0xc7aa                	// #51114
    1ea8:	movk	x9, #0xe9b6, lsl #16
    1eac:	add	x8, x8, x9
    1eb0:	str	w8, [sp, #20]
    1eb4:	ldr	w8, [sp, #20]
    1eb8:	mov	w9, w8
    1ebc:	ldr	w8, [sp, #20]
    1ec0:	and	x8, x8, #0xffffffff
    1ec4:	lsr	x8, x8, #12
    1ec8:	orr	x8, x8, x9, lsl #20
    1ecc:	ldr	w10, [sp, #16]
    1ed0:	mov	w9, w10
    1ed4:	add	x9, x9, w8, uxtw
    1ed8:	str	w9, [sp, #20]
    1edc:	ldr	w8, [sp, #24]
    1ee0:	ldr	w9, [sp, #16]
    1ee4:	ldr	w10, [sp, #12]
    1ee8:	ldr	w11, [sp, #16]
    1eec:	ldr	w12, [sp, #20]
    1ef0:	eor	w11, w11, w12
    1ef4:	and	w10, w10, w11
    1ef8:	eor	w9, w9, w10
    1efc:	add	w8, w8, w9
    1f00:	ldr	w9, [sp, #48]
    1f04:	add	w8, w8, w9
    1f08:	ubfx	x8, x8, #0, #32
    1f0c:	mov	x9, #0x105d                	// #4189
    1f10:	movk	x9, #0xd62f, lsl #16
    1f14:	add	x8, x8, x9
    1f18:	str	w8, [sp, #24]
    1f1c:	ldr	w8, [sp, #24]
    1f20:	mov	w9, w8
    1f24:	ldr	w8, [sp, #24]
    1f28:	and	x8, x8, #0xffffffff
    1f2c:	lsr	x8, x8, #27
    1f30:	orr	x8, x8, x9, lsl #5
    1f34:	ldr	w10, [sp, #20]
    1f38:	mov	w9, w10
    1f3c:	add	x9, x9, w8, uxtw
    1f40:	str	w9, [sp, #24]
    1f44:	ldr	w8, [sp, #12]
    1f48:	ldr	w9, [sp, #20]
    1f4c:	ldr	w10, [sp, #16]
    1f50:	ldr	w11, [sp, #20]
    1f54:	ldr	w12, [sp, #24]
    1f58:	eor	w11, w11, w12
    1f5c:	and	w10, w10, w11
    1f60:	eor	w9, w9, w10
    1f64:	add	w8, w8, w9
    1f68:	ldr	w9, [sp, #68]
    1f6c:	add	w8, w8, w9
    1f70:	ubfx	x8, x8, #0, #32
    1f74:	mov	x9, #0x1453                	// #5203
    1f78:	movk	x9, #0x244, lsl #16
    1f7c:	add	x8, x8, x9
    1f80:	str	w8, [sp, #12]
    1f84:	ldr	w8, [sp, #12]
    1f88:	mov	w9, w8
    1f8c:	ldr	w8, [sp, #12]
    1f90:	and	x8, x8, #0xffffffff
    1f94:	lsr	x8, x8, #23
    1f98:	orr	x8, x8, x9, lsl #9
    1f9c:	ldr	w10, [sp, #24]
    1fa0:	mov	w9, w10
    1fa4:	add	x9, x9, w8, uxtw
    1fa8:	str	w9, [sp, #12]
    1fac:	ldr	w8, [sp, #16]
    1fb0:	ldr	w9, [sp, #24]
    1fb4:	ldr	w10, [sp, #20]
    1fb8:	ldr	w11, [sp, #24]
    1fbc:	ldr	w12, [sp, #12]
    1fc0:	eor	w11, w11, w12
    1fc4:	and	w10, w10, w11
    1fc8:	eor	w9, w9, w10
    1fcc:	add	w8, w8, w9
    1fd0:	ldr	w9, [sp, #88]
    1fd4:	add	w8, w8, w9
    1fd8:	ubfx	x8, x8, #0, #32
    1fdc:	mov	x9, #0xe681                	// #59009
    1fe0:	movk	x9, #0xd8a1, lsl #16
    1fe4:	add	x8, x8, x9
    1fe8:	str	w8, [sp, #16]
    1fec:	ldr	w8, [sp, #16]
    1ff0:	mov	w9, w8
    1ff4:	ldr	w8, [sp, #16]
    1ff8:	and	x8, x8, #0xffffffff
    1ffc:	lsr	x8, x8, #18
    2000:	orr	x8, x8, x9, lsl #14
    2004:	ldr	w10, [sp, #12]
    2008:	mov	w9, w10
    200c:	add	x9, x9, w8, uxtw
    2010:	str	w9, [sp, #16]
    2014:	ldr	w8, [sp, #20]
    2018:	ldr	w9, [sp, #12]
    201c:	ldr	w10, [sp, #24]
    2020:	ldr	w11, [sp, #12]
    2024:	ldr	w12, [sp, #16]
    2028:	eor	w11, w11, w12
    202c:	and	w10, w10, w11
    2030:	eor	w9, w9, w10
    2034:	add	w8, w8, w9
    2038:	ldr	w9, [sp, #44]
    203c:	add	w8, w8, w9
    2040:	ubfx	x8, x8, #0, #32
    2044:	mov	x9, #0xfbc8                	// #64456
    2048:	movk	x9, #0xe7d3, lsl #16
    204c:	add	x8, x8, x9
    2050:	str	w8, [sp, #20]
    2054:	ldr	w8, [sp, #20]
    2058:	mov	w9, w8
    205c:	ldr	w8, [sp, #20]
    2060:	and	x8, x8, #0xffffffff
    2064:	lsr	x8, x8, #12
    2068:	orr	x8, x8, x9, lsl #20
    206c:	ldr	w10, [sp, #16]
    2070:	mov	w9, w10
    2074:	add	x9, x9, w8, uxtw
    2078:	str	w9, [sp, #20]
    207c:	ldr	w8, [sp, #24]
    2080:	ldr	w9, [sp, #16]
    2084:	ldr	w10, [sp, #12]
    2088:	ldr	w11, [sp, #16]
    208c:	ldr	w12, [sp, #20]
    2090:	eor	w11, w11, w12
    2094:	and	w10, w10, w11
    2098:	eor	w9, w9, w10
    209c:	add	w8, w8, w9
    20a0:	ldr	w9, [sp, #64]
    20a4:	add	w8, w8, w9
    20a8:	ubfx	x8, x8, #0, #32
    20ac:	mov	x9, #0xcde6                	// #52710
    20b0:	movk	x9, #0x21e1, lsl #16
    20b4:	add	x8, x8, x9
    20b8:	str	w8, [sp, #24]
    20bc:	ldr	w8, [sp, #24]
    20c0:	mov	w9, w8
    20c4:	ldr	w8, [sp, #24]
    20c8:	and	x8, x8, #0xffffffff
    20cc:	lsr	x8, x8, #27
    20d0:	orr	x8, x8, x9, lsl #5
    20d4:	ldr	w10, [sp, #20]
    20d8:	mov	w9, w10
    20dc:	add	x9, x9, w8, uxtw
    20e0:	str	w9, [sp, #24]
    20e4:	ldr	w8, [sp, #12]
    20e8:	ldr	w9, [sp, #20]
    20ec:	ldr	w10, [sp, #16]
    20f0:	ldr	w11, [sp, #20]
    20f4:	ldr	w12, [sp, #24]
    20f8:	eor	w11, w11, w12
    20fc:	and	w10, w10, w11
    2100:	eor	w9, w9, w10
    2104:	add	w8, w8, w9
    2108:	ldr	w9, [sp, #84]
    210c:	add	w8, w8, w9
    2110:	ubfx	x8, x8, #0, #32
    2114:	mov	x9, #0x7d6                 	// #2006
    2118:	movk	x9, #0xc337, lsl #16
    211c:	add	x8, x8, x9
    2120:	str	w8, [sp, #12]
    2124:	ldr	w8, [sp, #12]
    2128:	mov	w9, w8
    212c:	ldr	w8, [sp, #12]
    2130:	and	x8, x8, #0xffffffff
    2134:	lsr	x8, x8, #23
    2138:	orr	x8, x8, x9, lsl #9
    213c:	ldr	w10, [sp, #24]
    2140:	mov	w9, w10
    2144:	add	x9, x9, w8, uxtw
    2148:	str	w9, [sp, #12]
    214c:	ldr	w8, [sp, #16]
    2150:	ldr	w9, [sp, #24]
    2154:	ldr	w10, [sp, #20]
    2158:	ldr	w11, [sp, #24]
    215c:	ldr	w12, [sp, #12]
    2160:	eor	w11, w11, w12
    2164:	and	w10, w10, w11
    2168:	eor	w9, w9, w10
    216c:	add	w8, w8, w9
    2170:	ldr	w9, [sp, #40]
    2174:	add	w8, w8, w9
    2178:	ubfx	x8, x8, #0, #32
    217c:	mov	x9, #0xd87                 	// #3463
    2180:	movk	x9, #0xf4d5, lsl #16
    2184:	add	x8, x8, x9
    2188:	str	w8, [sp, #16]
    218c:	ldr	w8, [sp, #16]
    2190:	mov	w9, w8
    2194:	ldr	w8, [sp, #16]
    2198:	and	x8, x8, #0xffffffff
    219c:	lsr	x8, x8, #18
    21a0:	orr	x8, x8, x9, lsl #14
    21a4:	ldr	w10, [sp, #12]
    21a8:	mov	w9, w10
    21ac:	add	x9, x9, w8, uxtw
    21b0:	str	w9, [sp, #16]
    21b4:	ldr	w8, [sp, #20]
    21b8:	ldr	w9, [sp, #12]
    21bc:	ldr	w10, [sp, #24]
    21c0:	ldr	w11, [sp, #12]
    21c4:	ldr	w12, [sp, #16]
    21c8:	eor	w11, w11, w12
    21cc:	and	w10, w10, w11
    21d0:	eor	w9, w9, w10
    21d4:	add	w8, w8, w9
    21d8:	ldr	w9, [sp, #60]
    21dc:	add	w8, w8, w9
    21e0:	ubfx	x8, x8, #0, #32
    21e4:	mov	x9, #0x14ed                	// #5357
    21e8:	movk	x9, #0x455a, lsl #16
    21ec:	add	x8, x8, x9
    21f0:	str	w8, [sp, #20]
    21f4:	ldr	w8, [sp, #20]
    21f8:	mov	w9, w8
    21fc:	ldr	w8, [sp, #20]
    2200:	and	x8, x8, #0xffffffff
    2204:	lsr	x8, x8, #12
    2208:	orr	x8, x8, x9, lsl #20
    220c:	ldr	w10, [sp, #16]
    2210:	mov	w9, w10
    2214:	add	x9, x9, w8, uxtw
    2218:	str	w9, [sp, #20]
    221c:	ldr	w8, [sp, #24]
    2220:	ldr	w9, [sp, #16]
    2224:	ldr	w10, [sp, #12]
    2228:	ldr	w11, [sp, #16]
    222c:	ldr	w12, [sp, #20]
    2230:	eor	w11, w11, w12
    2234:	and	w10, w10, w11
    2238:	eor	w9, w9, w10
    223c:	add	w8, w8, w9
    2240:	ldr	w9, [sp, #80]
    2244:	add	w8, w8, w9
    2248:	ubfx	x8, x8, #0, #32
    224c:	mov	x9, #0xe905                	// #59653
    2250:	movk	x9, #0xa9e3, lsl #16
    2254:	add	x8, x8, x9
    2258:	str	w8, [sp, #24]
    225c:	ldr	w8, [sp, #24]
    2260:	mov	w9, w8
    2264:	ldr	w8, [sp, #24]
    2268:	and	x8, x8, #0xffffffff
    226c:	lsr	x8, x8, #27
    2270:	orr	x8, x8, x9, lsl #5
    2274:	ldr	w10, [sp, #20]
    2278:	mov	w9, w10
    227c:	add	x9, x9, w8, uxtw
    2280:	str	w9, [sp, #24]
    2284:	ldr	w8, [sp, #12]
    2288:	ldr	w9, [sp, #20]
    228c:	ldr	w10, [sp, #16]
    2290:	ldr	w11, [sp, #20]
    2294:	ldr	w12, [sp, #24]
    2298:	eor	w11, w11, w12
    229c:	and	w10, w10, w11
    22a0:	eor	w9, w9, w10
    22a4:	add	w8, w8, w9
    22a8:	ldr	w9, [sp, #36]
    22ac:	add	w8, w8, w9
    22b0:	ubfx	x8, x8, #0, #32
    22b4:	mov	x9, #0xa3f8                	// #41976
    22b8:	movk	x9, #0xfcef, lsl #16
    22bc:	add	x8, x8, x9
    22c0:	str	w8, [sp, #12]
    22c4:	ldr	w8, [sp, #12]
    22c8:	mov	w9, w8
    22cc:	ldr	w8, [sp, #12]
    22d0:	and	x8, x8, #0xffffffff
    22d4:	lsr	x8, x8, #23
    22d8:	orr	x8, x8, x9, lsl #9
    22dc:	ldr	w10, [sp, #24]
    22e0:	mov	w9, w10
    22e4:	add	x9, x9, w8, uxtw
    22e8:	str	w9, [sp, #12]
    22ec:	ldr	w8, [sp, #16]
    22f0:	ldr	w9, [sp, #24]
    22f4:	ldr	w10, [sp, #20]
    22f8:	ldr	w11, [sp, #24]
    22fc:	ldr	w12, [sp, #12]
    2300:	eor	w11, w11, w12
    2304:	and	w10, w10, w11
    2308:	eor	w9, w9, w10
    230c:	add	w8, w8, w9
    2310:	ldr	w9, [sp, #56]
    2314:	add	w8, w8, w9
    2318:	ubfx	x8, x8, #0, #32
    231c:	mov	x9, #0x2d9                 	// #729
    2320:	movk	x9, #0x676f, lsl #16
    2324:	add	x8, x8, x9
    2328:	str	w8, [sp, #16]
    232c:	ldr	w8, [sp, #16]
    2330:	mov	w9, w8
    2334:	ldr	w8, [sp, #16]
    2338:	and	x8, x8, #0xffffffff
    233c:	lsr	x8, x8, #18
    2340:	orr	x8, x8, x9, lsl #14
    2344:	ldr	w10, [sp, #12]
    2348:	mov	w9, w10
    234c:	add	x9, x9, w8, uxtw
    2350:	str	w9, [sp, #16]
    2354:	ldr	w8, [sp, #20]
    2358:	ldr	w9, [sp, #12]
    235c:	ldr	w10, [sp, #24]
    2360:	ldr	w11, [sp, #12]
    2364:	ldr	w12, [sp, #16]
    2368:	eor	w11, w11, w12
    236c:	and	w10, w10, w11
    2370:	eor	w9, w9, w10
    2374:	add	w8, w8, w9
    2378:	ldr	w9, [sp, #76]
    237c:	add	w8, w8, w9
    2380:	ubfx	x8, x8, #0, #32
    2384:	mov	x9, #0x4c8a                	// #19594
    2388:	movk	x9, #0x8d2a, lsl #16
    238c:	add	x8, x8, x9
    2390:	str	w8, [sp, #20]
    2394:	ldr	w8, [sp, #20]
    2398:	mov	w9, w8
    239c:	ldr	w8, [sp, #20]
    23a0:	and	x8, x8, #0xffffffff
    23a4:	lsr	x8, x8, #12
    23a8:	orr	x8, x8, x9, lsl #20
    23ac:	ldr	w10, [sp, #16]
    23b0:	mov	w9, w10
    23b4:	add	x9, x9, w8, uxtw
    23b8:	str	w9, [sp, #20]
    23bc:	ldr	w8, [sp, #24]
    23c0:	ldr	w9, [sp, #20]
    23c4:	ldr	w10, [sp, #16]
    23c8:	eor	w9, w9, w10
    23cc:	ldr	w10, [sp, #12]
    23d0:	eor	w9, w9, w10
    23d4:	add	w8, w8, w9
    23d8:	ldr	w9, [sp, #48]
    23dc:	add	w8, w8, w9
    23e0:	ubfx	x8, x8, #0, #32
    23e4:	mov	x9, #0x3942                	// #14658
    23e8:	movk	x9, #0xfffa, lsl #16
    23ec:	add	x8, x8, x9
    23f0:	str	w8, [sp, #24]
    23f4:	ldr	w8, [sp, #24]
    23f8:	mov	w9, w8
    23fc:	ldr	w8, [sp, #24]
    2400:	and	x8, x8, #0xffffffff
    2404:	lsr	x8, x8, #28
    2408:	orr	x8, x8, x9, lsl #4
    240c:	ldr	w10, [sp, #20]
    2410:	mov	w9, w10
    2414:	add	x9, x9, w8, uxtw
    2418:	str	w9, [sp, #24]
    241c:	ldr	w8, [sp, #12]
    2420:	ldr	w9, [sp, #24]
    2424:	ldr	w10, [sp, #20]
    2428:	eor	w9, w9, w10
    242c:	ldr	w10, [sp, #16]
    2430:	eor	w9, w9, w10
    2434:	add	w8, w8, w9
    2438:	ldr	w9, [sp, #60]
    243c:	add	w8, w8, w9
    2440:	ubfx	x8, x8, #0, #32
    2444:	mov	x9, #0xf681                	// #63105
    2448:	movk	x9, #0x8771, lsl #16
    244c:	add	x8, x8, x9
    2450:	str	w8, [sp, #12]
    2454:	ldr	w8, [sp, #12]
    2458:	mov	w9, w8
    245c:	ldr	w8, [sp, #12]
    2460:	and	x8, x8, #0xffffffff
    2464:	lsr	x8, x8, #21
    2468:	orr	x8, x8, x9, lsl #11
    246c:	ldr	w10, [sp, #24]
    2470:	mov	w9, w10
    2474:	add	x9, x9, w8, uxtw
    2478:	str	w9, [sp, #12]
    247c:	ldr	w8, [sp, #16]
    2480:	ldr	w9, [sp, #12]
    2484:	ldr	w10, [sp, #24]
    2488:	eor	w9, w9, w10
    248c:	ldr	w10, [sp, #20]
    2490:	eor	w9, w9, w10
    2494:	add	w8, w8, w9
    2498:	ldr	w9, [sp, #72]
    249c:	add	w8, w8, w9
    24a0:	ubfx	x8, x8, #0, #32
    24a4:	mov	x9, #0x6122                	// #24866
    24a8:	movk	x9, #0x6d9d, lsl #16
    24ac:	add	x8, x8, x9
    24b0:	str	w8, [sp, #16]
    24b4:	ldr	w8, [sp, #16]
    24b8:	mov	w9, w8
    24bc:	ldr	w8, [sp, #16]
    24c0:	and	x8, x8, #0xffffffff
    24c4:	lsr	x8, x8, #16
    24c8:	orr	x8, x8, x9, lsl #16
    24cc:	ldr	w10, [sp, #12]
    24d0:	mov	w9, w10
    24d4:	add	x9, x9, w8, uxtw
    24d8:	str	w9, [sp, #16]
    24dc:	ldr	w8, [sp, #20]
    24e0:	ldr	w9, [sp, #16]
    24e4:	ldr	w10, [sp, #12]
    24e8:	eor	w9, w9, w10
    24ec:	ldr	w10, [sp, #24]
    24f0:	eor	w9, w9, w10
    24f4:	add	w8, w8, w9
    24f8:	ldr	w9, [sp, #84]
    24fc:	add	w8, w8, w9
    2500:	ubfx	x8, x8, #0, #32
    2504:	mov	x9, #0x380c                	// #14348
    2508:	movk	x9, #0xfde5, lsl #16
    250c:	add	x8, x8, x9
    2510:	str	w8, [sp, #20]
    2514:	ldr	w8, [sp, #20]
    2518:	mov	w9, w8
    251c:	ldr	w8, [sp, #20]
    2520:	and	x8, x8, #0xffffffff
    2524:	lsr	x8, x8, #9
    2528:	orr	x8, x8, x9, lsl #23
    252c:	ldr	w10, [sp, #16]
    2530:	mov	w9, w10
    2534:	add	x9, x9, w8, uxtw
    2538:	str	w9, [sp, #20]
    253c:	ldr	w8, [sp, #24]
    2540:	ldr	w9, [sp, #20]
    2544:	ldr	w10, [sp, #16]
    2548:	eor	w9, w9, w10
    254c:	ldr	w10, [sp, #12]
    2550:	eor	w9, w9, w10
    2554:	add	w8, w8, w9
    2558:	ldr	w9, [sp, #32]
    255c:	add	w8, w8, w9
    2560:	ubfx	x8, x8, #0, #32
    2564:	mov	x9, #0xea44                	// #59972
    2568:	movk	x9, #0xa4be, lsl #16
    256c:	add	x8, x8, x9
    2570:	str	w8, [sp, #24]
    2574:	ldr	w8, [sp, #24]
    2578:	mov	w9, w8
    257c:	ldr	w8, [sp, #24]
    2580:	and	x8, x8, #0xffffffff
    2584:	lsr	x8, x8, #28
    2588:	orr	x8, x8, x9, lsl #4
    258c:	ldr	w10, [sp, #20]
    2590:	mov	w9, w10
    2594:	add	x9, x9, w8, uxtw
    2598:	str	w9, [sp, #24]
    259c:	ldr	w8, [sp, #12]
    25a0:	ldr	w9, [sp, #24]
    25a4:	ldr	w10, [sp, #20]
    25a8:	eor	w9, w9, w10
    25ac:	ldr	w10, [sp, #16]
    25b0:	eor	w9, w9, w10
    25b4:	add	w8, w8, w9
    25b8:	ldr	w9, [sp, #44]
    25bc:	add	w8, w8, w9
    25c0:	ubfx	x8, x8, #0, #32
    25c4:	mov	x9, #0xcfa9                	// #53161
    25c8:	movk	x9, #0x4bde, lsl #16
    25cc:	add	x8, x8, x9
    25d0:	str	w8, [sp, #12]
    25d4:	ldr	w8, [sp, #12]
    25d8:	mov	w9, w8
    25dc:	ldr	w8, [sp, #12]
    25e0:	and	x8, x8, #0xffffffff
    25e4:	lsr	x8, x8, #21
    25e8:	orr	x8, x8, x9, lsl #11
    25ec:	ldr	w10, [sp, #24]
    25f0:	mov	w9, w10
    25f4:	add	x9, x9, w8, uxtw
    25f8:	str	w9, [sp, #12]
    25fc:	ldr	w8, [sp, #16]
    2600:	ldr	w9, [sp, #12]
    2604:	ldr	w10, [sp, #24]
    2608:	eor	w9, w9, w10
    260c:	ldr	w10, [sp, #20]
    2610:	eor	w9, w9, w10
    2614:	add	w8, w8, w9
    2618:	ldr	w9, [sp, #56]
    261c:	add	w8, w8, w9
    2620:	ubfx	x8, x8, #0, #32
    2624:	mov	x9, #0x4b60                	// #19296
    2628:	movk	x9, #0xf6bb, lsl #16
    262c:	add	x8, x8, x9
    2630:	str	w8, [sp, #16]
    2634:	ldr	w8, [sp, #16]
    2638:	mov	w9, w8
    263c:	ldr	w8, [sp, #16]
    2640:	and	x8, x8, #0xffffffff
    2644:	lsr	x8, x8, #16
    2648:	orr	x8, x8, x9, lsl #16
    264c:	ldr	w10, [sp, #12]
    2650:	mov	w9, w10
    2654:	add	x9, x9, w8, uxtw
    2658:	str	w9, [sp, #16]
    265c:	ldr	w8, [sp, #20]
    2660:	ldr	w9, [sp, #16]
    2664:	ldr	w10, [sp, #12]
    2668:	eor	w9, w9, w10
    266c:	ldr	w10, [sp, #24]
    2670:	eor	w9, w9, w10
    2674:	add	w8, w8, w9
    2678:	ldr	w9, [sp, #68]
    267c:	add	w8, w8, w9
    2680:	ubfx	x8, x8, #0, #32
    2684:	mov	x9, #0xbc70                	// #48240
    2688:	movk	x9, #0xbebf, lsl #16
    268c:	add	x8, x8, x9
    2690:	str	w8, [sp, #20]
    2694:	ldr	w8, [sp, #20]
    2698:	mov	w9, w8
    269c:	ldr	w8, [sp, #20]
    26a0:	and	x8, x8, #0xffffffff
    26a4:	lsr	x8, x8, #9
    26a8:	orr	x8, x8, x9, lsl #23
    26ac:	ldr	w10, [sp, #16]
    26b0:	mov	w9, w10
    26b4:	add	x9, x9, w8, uxtw
    26b8:	str	w9, [sp, #20]
    26bc:	ldr	w8, [sp, #24]
    26c0:	ldr	w9, [sp, #20]
    26c4:	ldr	w10, [sp, #16]
    26c8:	eor	w9, w9, w10
    26cc:	ldr	w10, [sp, #12]
    26d0:	eor	w9, w9, w10
    26d4:	add	w8, w8, w9
    26d8:	ldr	w9, [sp, #80]
    26dc:	add	w8, w8, w9
    26e0:	ubfx	x8, x8, #0, #32
    26e4:	mov	x9, #0x7ec6                	// #32454
    26e8:	movk	x9, #0x289b, lsl #16
    26ec:	add	x8, x8, x9
    26f0:	str	w8, [sp, #24]
    26f4:	ldr	w8, [sp, #24]
    26f8:	mov	w9, w8
    26fc:	ldr	w8, [sp, #24]
    2700:	and	x8, x8, #0xffffffff
    2704:	lsr	x8, x8, #28
    2708:	orr	x8, x8, x9, lsl #4
    270c:	ldr	w10, [sp, #20]
    2710:	mov	w9, w10
    2714:	add	x9, x9, w8, uxtw
    2718:	str	w9, [sp, #24]
    271c:	ldr	w8, [sp, #12]
    2720:	ldr	w9, [sp, #24]
    2724:	ldr	w10, [sp, #20]
    2728:	eor	w9, w9, w10
    272c:	ldr	w10, [sp, #16]
    2730:	eor	w9, w9, w10
    2734:	add	w8, w8, w9
    2738:	ldr	w9, [sp, #28]
    273c:	add	w8, w8, w9
    2740:	ubfx	x8, x8, #0, #32
    2744:	mov	x9, #0x27fa                	// #10234
    2748:	movk	x9, #0xeaa1, lsl #16
    274c:	add	x8, x8, x9
    2750:	str	w8, [sp, #12]
    2754:	ldr	w8, [sp, #12]
    2758:	mov	w9, w8
    275c:	ldr	w8, [sp, #12]
    2760:	and	x8, x8, #0xffffffff
    2764:	lsr	x8, x8, #21
    2768:	orr	x8, x8, x9, lsl #11
    276c:	ldr	w10, [sp, #24]
    2770:	mov	w9, w10
    2774:	add	x9, x9, w8, uxtw
    2778:	str	w9, [sp, #12]
    277c:	ldr	w8, [sp, #16]
    2780:	ldr	w9, [sp, #12]
    2784:	ldr	w10, [sp, #24]
    2788:	eor	w9, w9, w10
    278c:	ldr	w10, [sp, #20]
    2790:	eor	w9, w9, w10
    2794:	add	w8, w8, w9
    2798:	ldr	w9, [sp, #40]
    279c:	add	w8, w8, w9
    27a0:	ubfx	x8, x8, #0, #32
    27a4:	mov	x9, #0x3085                	// #12421
    27a8:	movk	x9, #0xd4ef, lsl #16
    27ac:	add	x8, x8, x9
    27b0:	str	w8, [sp, #16]
    27b4:	ldr	w8, [sp, #16]
    27b8:	mov	w9, w8
    27bc:	ldr	w8, [sp, #16]
    27c0:	and	x8, x8, #0xffffffff
    27c4:	lsr	x8, x8, #16
    27c8:	orr	x8, x8, x9, lsl #16
    27cc:	ldr	w10, [sp, #12]
    27d0:	mov	w9, w10
    27d4:	add	x9, x9, w8, uxtw
    27d8:	str	w9, [sp, #16]
    27dc:	ldr	w8, [sp, #20]
    27e0:	ldr	w9, [sp, #16]
    27e4:	ldr	w10, [sp, #12]
    27e8:	eor	w9, w9, w10
    27ec:	ldr	w10, [sp, #24]
    27f0:	eor	w9, w9, w10
    27f4:	add	w8, w8, w9
    27f8:	ldr	w9, [sp, #52]
    27fc:	add	w8, w8, w9
    2800:	ubfx	x8, x8, #0, #32
    2804:	mov	x9, #0x1d05                	// #7429
    2808:	movk	x9, #0x488, lsl #16
    280c:	add	x8, x8, x9
    2810:	str	w8, [sp, #20]
    2814:	ldr	w8, [sp, #20]
    2818:	mov	w9, w8
    281c:	ldr	w8, [sp, #20]
    2820:	and	x8, x8, #0xffffffff
    2824:	lsr	x8, x8, #9
    2828:	orr	x8, x8, x9, lsl #23
    282c:	ldr	w10, [sp, #16]
    2830:	mov	w9, w10
    2834:	add	x9, x9, w8, uxtw
    2838:	str	w9, [sp, #20]
    283c:	ldr	w8, [sp, #24]
    2840:	ldr	w9, [sp, #20]
    2844:	ldr	w10, [sp, #16]
    2848:	eor	w9, w9, w10
    284c:	ldr	w10, [sp, #12]
    2850:	eor	w9, w9, w10
    2854:	add	w8, w8, w9
    2858:	ldr	w9, [sp, #64]
    285c:	add	w8, w8, w9
    2860:	ubfx	x8, x8, #0, #32
    2864:	mov	x9, #0xd039                	// #53305
    2868:	movk	x9, #0xd9d4, lsl #16
    286c:	add	x8, x8, x9
    2870:	str	w8, [sp, #24]
    2874:	ldr	w8, [sp, #24]
    2878:	mov	w9, w8
    287c:	ldr	w8, [sp, #24]
    2880:	and	x8, x8, #0xffffffff
    2884:	lsr	x8, x8, #28
    2888:	orr	x8, x8, x9, lsl #4
    288c:	ldr	w10, [sp, #20]
    2890:	mov	w9, w10
    2894:	add	x9, x9, w8, uxtw
    2898:	str	w9, [sp, #24]
    289c:	ldr	w8, [sp, #12]
    28a0:	ldr	w9, [sp, #24]
    28a4:	ldr	w10, [sp, #20]
    28a8:	eor	w9, w9, w10
    28ac:	ldr	w10, [sp, #16]
    28b0:	eor	w9, w9, w10
    28b4:	add	w8, w8, w9
    28b8:	ldr	w9, [sp, #76]
    28bc:	add	w8, w8, w9
    28c0:	ubfx	x8, x8, #0, #32
    28c4:	mov	x9, #0x99e5                	// #39397
    28c8:	movk	x9, #0xe6db, lsl #16
    28cc:	add	x8, x8, x9
    28d0:	str	w8, [sp, #12]
    28d4:	ldr	w8, [sp, #12]
    28d8:	mov	w9, w8
    28dc:	ldr	w8, [sp, #12]
    28e0:	and	x8, x8, #0xffffffff
    28e4:	lsr	x8, x8, #21
    28e8:	orr	x8, x8, x9, lsl #11
    28ec:	ldr	w10, [sp, #24]
    28f0:	mov	w9, w10
    28f4:	add	x9, x9, w8, uxtw
    28f8:	str	w9, [sp, #12]
    28fc:	ldr	w8, [sp, #16]
    2900:	ldr	w9, [sp, #12]
    2904:	ldr	w10, [sp, #24]
    2908:	eor	w9, w9, w10
    290c:	ldr	w10, [sp, #20]
    2910:	eor	w9, w9, w10
    2914:	add	w8, w8, w9
    2918:	ldr	w9, [sp, #88]
    291c:	add	w8, w8, w9
    2920:	ubfx	x8, x8, #0, #32
    2924:	mov	x9, #0x7cf8                	// #31992
    2928:	movk	x9, #0x1fa2, lsl #16
    292c:	add	x8, x8, x9
    2930:	str	w8, [sp, #16]
    2934:	ldr	w8, [sp, #16]
    2938:	mov	w9, w8
    293c:	ldr	w8, [sp, #16]
    2940:	and	x8, x8, #0xffffffff
    2944:	lsr	x8, x8, #16
    2948:	orr	x8, x8, x9, lsl #16
    294c:	ldr	w10, [sp, #12]
    2950:	mov	w9, w10
    2954:	add	x9, x9, w8, uxtw
    2958:	str	w9, [sp, #16]
    295c:	ldr	w8, [sp, #20]
    2960:	ldr	w9, [sp, #16]
    2964:	ldr	w10, [sp, #12]
    2968:	eor	w9, w9, w10
    296c:	ldr	w10, [sp, #24]
    2970:	eor	w9, w9, w10
    2974:	add	w8, w8, w9
    2978:	ldr	w9, [sp, #36]
    297c:	add	w8, w8, w9
    2980:	ubfx	x8, x8, #0, #32
    2984:	mov	x9, #0x5665                	// #22117
    2988:	movk	x9, #0xc4ac, lsl #16
    298c:	add	x8, x8, x9
    2990:	str	w8, [sp, #20]
    2994:	ldr	w8, [sp, #20]
    2998:	mov	w9, w8
    299c:	ldr	w8, [sp, #20]
    29a0:	and	x8, x8, #0xffffffff
    29a4:	lsr	x8, x8, #9
    29a8:	orr	x8, x8, x9, lsl #23
    29ac:	ldr	w10, [sp, #16]
    29b0:	mov	w9, w10
    29b4:	add	x9, x9, w8, uxtw
    29b8:	str	w9, [sp, #20]
    29bc:	ldr	w8, [sp, #24]
    29c0:	ldr	w9, [sp, #16]
    29c4:	ldr	w10, [sp, #20]
    29c8:	ldr	w11, [sp, #12]
    29cc:	orn	w10, w10, w11
    29d0:	eor	w9, w9, w10
    29d4:	add	w8, w8, w9
    29d8:	ldr	w9, [sp, #28]
    29dc:	add	w8, w8, w9
    29e0:	ubfx	x8, x8, #0, #32
    29e4:	mov	x9, #0x2244                	// #8772
    29e8:	movk	x9, #0xf429, lsl #16
    29ec:	add	x8, x8, x9
    29f0:	str	w8, [sp, #24]
    29f4:	ldr	w8, [sp, #24]
    29f8:	mov	w9, w8
    29fc:	ldr	w8, [sp, #24]
    2a00:	and	x8, x8, #0xffffffff
    2a04:	lsr	x8, x8, #26
    2a08:	orr	x8, x8, x9, lsl #6
    2a0c:	ldr	w10, [sp, #20]
    2a10:	mov	w9, w10
    2a14:	add	x9, x9, w8, uxtw
    2a18:	str	w9, [sp, #24]
    2a1c:	ldr	w8, [sp, #12]
    2a20:	ldr	w9, [sp, #20]
    2a24:	ldr	w10, [sp, #24]
    2a28:	ldr	w11, [sp, #16]
    2a2c:	orn	w10, w10, w11
    2a30:	eor	w9, w9, w10
    2a34:	add	w8, w8, w9
    2a38:	ldr	w9, [sp, #56]
    2a3c:	add	w8, w8, w9
    2a40:	ubfx	x8, x8, #0, #32
    2a44:	mov	x9, #0xff97                	// #65431
    2a48:	movk	x9, #0x432a, lsl #16
    2a4c:	add	x8, x8, x9
    2a50:	str	w8, [sp, #12]
    2a54:	ldr	w8, [sp, #12]
    2a58:	mov	w9, w8
    2a5c:	ldr	w8, [sp, #12]
    2a60:	and	x8, x8, #0xffffffff
    2a64:	lsr	x8, x8, #22
    2a68:	orr	x8, x8, x9, lsl #10
    2a6c:	ldr	w10, [sp, #24]
    2a70:	mov	w9, w10
    2a74:	add	x9, x9, w8, uxtw
    2a78:	str	w9, [sp, #12]
    2a7c:	ldr	w8, [sp, #16]
    2a80:	ldr	w9, [sp, #24]
    2a84:	ldr	w10, [sp, #12]
    2a88:	ldr	w11, [sp, #20]
    2a8c:	orn	w10, w10, w11
    2a90:	eor	w9, w9, w10
    2a94:	add	w8, w8, w9
    2a98:	ldr	w9, [sp, #84]
    2a9c:	add	w8, w8, w9
    2aa0:	ubfx	x8, x8, #0, #32
    2aa4:	mov	x9, #0x23a7                	// #9127
    2aa8:	movk	x9, #0xab94, lsl #16
    2aac:	add	x8, x8, x9
    2ab0:	str	w8, [sp, #16]
    2ab4:	ldr	w8, [sp, #16]
    2ab8:	mov	w9, w8
    2abc:	ldr	w8, [sp, #16]
    2ac0:	and	x8, x8, #0xffffffff
    2ac4:	lsr	x8, x8, #17
    2ac8:	orr	x8, x8, x9, lsl #15
    2acc:	ldr	w10, [sp, #12]
    2ad0:	mov	w9, w10
    2ad4:	add	x9, x9, w8, uxtw
    2ad8:	str	w9, [sp, #16]
    2adc:	ldr	w8, [sp, #20]
    2ae0:	ldr	w9, [sp, #12]
    2ae4:	ldr	w10, [sp, #16]
    2ae8:	ldr	w11, [sp, #24]
    2aec:	orn	w10, w10, w11
    2af0:	eor	w9, w9, w10
    2af4:	add	w8, w8, w9
    2af8:	ldr	w9, [sp, #48]
    2afc:	add	w8, w8, w9
    2b00:	ubfx	x8, x8, #0, #32
    2b04:	mov	x9, #0xa039                	// #41017
    2b08:	movk	x9, #0xfc93, lsl #16
    2b0c:	add	x8, x8, x9
    2b10:	str	w8, [sp, #20]
    2b14:	ldr	w8, [sp, #20]
    2b18:	mov	w9, w8
    2b1c:	ldr	w8, [sp, #20]
    2b20:	and	x8, x8, #0xffffffff
    2b24:	lsr	x8, x8, #11
    2b28:	orr	x8, x8, x9, lsl #21
    2b2c:	ldr	w10, [sp, #16]
    2b30:	mov	w9, w10
    2b34:	add	x9, x9, w8, uxtw
    2b38:	str	w9, [sp, #20]
    2b3c:	ldr	w8, [sp, #24]
    2b40:	ldr	w9, [sp, #16]
    2b44:	ldr	w10, [sp, #20]
    2b48:	ldr	w11, [sp, #12]
    2b4c:	orn	w10, w10, w11
    2b50:	eor	w9, w9, w10
    2b54:	add	w8, w8, w9
    2b58:	ldr	w9, [sp, #76]
    2b5c:	add	w8, w8, w9
    2b60:	ubfx	x8, x8, #0, #32
    2b64:	mov	x9, #0x59c3                	// #22979
    2b68:	movk	x9, #0x655b, lsl #16
    2b6c:	add	x8, x8, x9
    2b70:	str	w8, [sp, #24]
    2b74:	ldr	w8, [sp, #24]
    2b78:	mov	w9, w8
    2b7c:	ldr	w8, [sp, #24]
    2b80:	and	x8, x8, #0xffffffff
    2b84:	lsr	x8, x8, #26
    2b88:	orr	x8, x8, x9, lsl #6
    2b8c:	ldr	w10, [sp, #20]
    2b90:	mov	w9, w10
    2b94:	add	x9, x9, w8, uxtw
    2b98:	str	w9, [sp, #24]
    2b9c:	ldr	w8, [sp, #12]
    2ba0:	ldr	w9, [sp, #20]
    2ba4:	ldr	w10, [sp, #24]
    2ba8:	ldr	w11, [sp, #16]
    2bac:	orn	w10, w10, w11
    2bb0:	eor	w9, w9, w10
    2bb4:	add	w8, w8, w9
    2bb8:	ldr	w9, [sp, #40]
    2bbc:	add	w8, w8, w9
    2bc0:	ubfx	x8, x8, #0, #32
    2bc4:	mov	x9, #0xcc92                	// #52370
    2bc8:	movk	x9, #0x8f0c, lsl #16
    2bcc:	add	x8, x8, x9
    2bd0:	str	w8, [sp, #12]
    2bd4:	ldr	w8, [sp, #12]
    2bd8:	mov	w9, w8
    2bdc:	ldr	w8, [sp, #12]
    2be0:	and	x8, x8, #0xffffffff
    2be4:	lsr	x8, x8, #22
    2be8:	orr	x8, x8, x9, lsl #10
    2bec:	ldr	w10, [sp, #24]
    2bf0:	mov	w9, w10
    2bf4:	add	x9, x9, w8, uxtw
    2bf8:	str	w9, [sp, #12]
    2bfc:	ldr	w8, [sp, #16]
    2c00:	ldr	w9, [sp, #24]
    2c04:	ldr	w10, [sp, #12]
    2c08:	ldr	w11, [sp, #20]
    2c0c:	orn	w10, w10, w11
    2c10:	eor	w9, w9, w10
    2c14:	add	w8, w8, w9
    2c18:	ldr	w9, [sp, #68]
    2c1c:	add	w8, w8, w9
    2c20:	ubfx	x8, x8, #0, #32
    2c24:	mov	x9, #0xf47d                	// #62589
    2c28:	movk	x9, #0xffef, lsl #16
    2c2c:	add	x8, x8, x9
    2c30:	str	w8, [sp, #16]
    2c34:	ldr	w8, [sp, #16]
    2c38:	mov	w9, w8
    2c3c:	ldr	w8, [sp, #16]
    2c40:	and	x8, x8, #0xffffffff
    2c44:	lsr	x8, x8, #17
    2c48:	orr	x8, x8, x9, lsl #15
    2c4c:	ldr	w10, [sp, #12]
    2c50:	mov	w9, w10
    2c54:	add	x9, x9, w8, uxtw
    2c58:	str	w9, [sp, #16]
    2c5c:	ldr	w8, [sp, #20]
    2c60:	ldr	w9, [sp, #12]
    2c64:	ldr	w10, [sp, #16]
    2c68:	ldr	w11, [sp, #24]
    2c6c:	orn	w10, w10, w11
    2c70:	eor	w9, w9, w10
    2c74:	add	w8, w8, w9
    2c78:	ldr	w9, [sp, #32]
    2c7c:	add	w8, w8, w9
    2c80:	ubfx	x8, x8, #0, #32
    2c84:	mov	x9, #0x5dd1                	// #24017
    2c88:	movk	x9, #0x8584, lsl #16
    2c8c:	add	x8, x8, x9
    2c90:	str	w8, [sp, #20]
    2c94:	ldr	w8, [sp, #20]
    2c98:	mov	w9, w8
    2c9c:	ldr	w8, [sp, #20]
    2ca0:	and	x8, x8, #0xffffffff
    2ca4:	lsr	x8, x8, #11
    2ca8:	orr	x8, x8, x9, lsl #21
    2cac:	ldr	w10, [sp, #16]
    2cb0:	mov	w9, w10
    2cb4:	add	x9, x9, w8, uxtw
    2cb8:	str	w9, [sp, #20]
    2cbc:	ldr	w8, [sp, #24]
    2cc0:	ldr	w9, [sp, #16]
    2cc4:	ldr	w10, [sp, #20]
    2cc8:	ldr	w11, [sp, #12]
    2ccc:	orn	w10, w10, w11
    2cd0:	eor	w9, w9, w10
    2cd4:	add	w8, w8, w9
    2cd8:	ldr	w9, [sp, #60]
    2cdc:	add	w8, w8, w9
    2ce0:	ubfx	x8, x8, #0, #32
    2ce4:	mov	x9, #0x7e4f                	// #32335
    2ce8:	movk	x9, #0x6fa8, lsl #16
    2cec:	add	x8, x8, x9
    2cf0:	str	w8, [sp, #24]
    2cf4:	ldr	w8, [sp, #24]
    2cf8:	mov	w9, w8
    2cfc:	ldr	w8, [sp, #24]
    2d00:	and	x8, x8, #0xffffffff
    2d04:	lsr	x8, x8, #26
    2d08:	orr	x8, x8, x9, lsl #6
    2d0c:	ldr	w10, [sp, #20]
    2d10:	mov	w9, w10
    2d14:	add	x9, x9, w8, uxtw
    2d18:	str	w9, [sp, #24]
    2d1c:	ldr	w8, [sp, #12]
    2d20:	ldr	w9, [sp, #20]
    2d24:	ldr	w10, [sp, #24]
    2d28:	ldr	w11, [sp, #16]
    2d2c:	orn	w10, w10, w11
    2d30:	eor	w9, w9, w10
    2d34:	add	w8, w8, w9
    2d38:	ldr	w9, [sp, #88]
    2d3c:	add	w8, w8, w9
    2d40:	ubfx	x8, x8, #0, #32
    2d44:	mov	x9, #0xe6e0                	// #59104
    2d48:	movk	x9, #0xfe2c, lsl #16
    2d4c:	add	x8, x8, x9
    2d50:	str	w8, [sp, #12]
    2d54:	ldr	w8, [sp, #12]
    2d58:	mov	w9, w8
    2d5c:	ldr	w8, [sp, #12]
    2d60:	and	x8, x8, #0xffffffff
    2d64:	lsr	x8, x8, #22
    2d68:	orr	x8, x8, x9, lsl #10
    2d6c:	ldr	w10, [sp, #24]
    2d70:	mov	w9, w10
    2d74:	add	x9, x9, w8, uxtw
    2d78:	str	w9, [sp, #12]
    2d7c:	ldr	w8, [sp, #16]
    2d80:	ldr	w9, [sp, #24]
    2d84:	ldr	w10, [sp, #12]
    2d88:	ldr	w11, [sp, #20]
    2d8c:	orn	w10, w10, w11
    2d90:	eor	w9, w9, w10
    2d94:	add	w8, w8, w9
    2d98:	ldr	w9, [sp, #52]
    2d9c:	add	w8, w8, w9
    2da0:	ubfx	x8, x8, #0, #32
    2da4:	mov	x9, #0x4314                	// #17172
    2da8:	movk	x9, #0xa301, lsl #16
    2dac:	add	x8, x8, x9
    2db0:	str	w8, [sp, #16]
    2db4:	ldr	w8, [sp, #16]
    2db8:	mov	w9, w8
    2dbc:	ldr	w8, [sp, #16]
    2dc0:	and	x8, x8, #0xffffffff
    2dc4:	lsr	x8, x8, #17
    2dc8:	orr	x8, x8, x9, lsl #15
    2dcc:	ldr	w10, [sp, #12]
    2dd0:	mov	w9, w10
    2dd4:	add	x9, x9, w8, uxtw
    2dd8:	str	w9, [sp, #16]
    2ddc:	ldr	w8, [sp, #20]
    2de0:	ldr	w9, [sp, #12]
    2de4:	ldr	w10, [sp, #16]
    2de8:	ldr	w11, [sp, #24]
    2dec:	orn	w10, w10, w11
    2df0:	eor	w9, w9, w10
    2df4:	add	w8, w8, w9
    2df8:	ldr	w9, [sp, #80]
    2dfc:	add	w8, w8, w9
    2e00:	ubfx	x8, x8, #0, #32
    2e04:	mov	x9, #0x11a1                	// #4513
    2e08:	movk	x9, #0x4e08, lsl #16
    2e0c:	add	x8, x8, x9
    2e10:	str	w8, [sp, #20]
    2e14:	ldr	w8, [sp, #20]
    2e18:	mov	w9, w8
    2e1c:	ldr	w8, [sp, #20]
    2e20:	and	x8, x8, #0xffffffff
    2e24:	lsr	x8, x8, #11
    2e28:	orr	x8, x8, x9, lsl #21
    2e2c:	ldr	w10, [sp, #16]
    2e30:	mov	w9, w10
    2e34:	add	x9, x9, w8, uxtw
    2e38:	str	w9, [sp, #20]
    2e3c:	ldr	w8, [sp, #24]
    2e40:	ldr	w9, [sp, #16]
    2e44:	ldr	w10, [sp, #20]
    2e48:	ldr	w11, [sp, #12]
    2e4c:	orn	w10, w10, w11
    2e50:	eor	w9, w9, w10
    2e54:	add	w8, w8, w9
    2e58:	ldr	w9, [sp, #44]
    2e5c:	add	w8, w8, w9
    2e60:	ubfx	x8, x8, #0, #32
    2e64:	mov	x9, #0x7e82                	// #32386
    2e68:	movk	x9, #0xf753, lsl #16
    2e6c:	add	x8, x8, x9
    2e70:	str	w8, [sp, #24]
    2e74:	ldr	w8, [sp, #24]
    2e78:	mov	w9, w8
    2e7c:	ldr	w8, [sp, #24]
    2e80:	and	x8, x8, #0xffffffff
    2e84:	lsr	x8, x8, #26
    2e88:	orr	x8, x8, x9, lsl #6
    2e8c:	ldr	w10, [sp, #20]
    2e90:	mov	w9, w10
    2e94:	add	x9, x9, w8, uxtw
    2e98:	str	w9, [sp, #24]
    2e9c:	ldr	w8, [sp, #12]
    2ea0:	ldr	w9, [sp, #20]
    2ea4:	ldr	w10, [sp, #24]
    2ea8:	ldr	w11, [sp, #16]
    2eac:	orn	w10, w10, w11
    2eb0:	eor	w9, w9, w10
    2eb4:	add	w8, w8, w9
    2eb8:	ldr	w9, [sp, #72]
    2ebc:	add	w8, w8, w9
    2ec0:	ubfx	x8, x8, #0, #32
    2ec4:	mov	x9, #0xf235                	// #62005
    2ec8:	movk	x9, #0xbd3a, lsl #16
    2ecc:	add	x8, x8, x9
    2ed0:	str	w8, [sp, #12]
    2ed4:	ldr	w8, [sp, #12]
    2ed8:	mov	w9, w8
    2edc:	ldr	w8, [sp, #12]
    2ee0:	and	x8, x8, #0xffffffff
    2ee4:	lsr	x8, x8, #22
    2ee8:	orr	x8, x8, x9, lsl #10
    2eec:	ldr	w10, [sp, #24]
    2ef0:	mov	w9, w10
    2ef4:	add	x9, x9, w8, uxtw
    2ef8:	str	w9, [sp, #12]
    2efc:	ldr	w8, [sp, #16]
    2f00:	ldr	w9, [sp, #24]
    2f04:	ldr	w10, [sp, #12]
    2f08:	ldr	w11, [sp, #20]
    2f0c:	orn	w10, w10, w11
    2f10:	eor	w9, w9, w10
    2f14:	add	w8, w8, w9
    2f18:	ldr	w9, [sp, #36]
    2f1c:	add	w8, w8, w9
    2f20:	ubfx	x8, x8, #0, #32
    2f24:	mov	x9, #0xd2bb                	// #53947
    2f28:	movk	x9, #0x2ad7, lsl #16
    2f2c:	add	x8, x8, x9
    2f30:	str	w8, [sp, #16]
    2f34:	ldr	w8, [sp, #16]
    2f38:	mov	w9, w8
    2f3c:	ldr	w8, [sp, #16]
    2f40:	and	x8, x8, #0xffffffff
    2f44:	lsr	x8, x8, #17
    2f48:	orr	x8, x8, x9, lsl #15
    2f4c:	ldr	w10, [sp, #12]
    2f50:	mov	w9, w10
    2f54:	add	x9, x9, w8, uxtw
    2f58:	str	w9, [sp, #16]
    2f5c:	ldr	w8, [sp, #20]
    2f60:	ldr	w9, [sp, #12]
    2f64:	ldr	w10, [sp, #16]
    2f68:	ldr	w11, [sp, #24]
    2f6c:	orn	w10, w10, w11
    2f70:	eor	w9, w9, w10
    2f74:	add	w8, w8, w9
    2f78:	ldr	w9, [sp, #64]
    2f7c:	add	w8, w8, w9
    2f80:	ubfx	x8, x8, #0, #32
    2f84:	mov	x9, #0xd391                	// #54161
    2f88:	movk	x9, #0xeb86, lsl #16
    2f8c:	add	x8, x8, x9
    2f90:	str	w8, [sp, #20]
    2f94:	ldr	w8, [sp, #20]
    2f98:	mov	w9, w8
    2f9c:	ldr	w8, [sp, #20]
    2fa0:	and	x8, x8, #0xffffffff
    2fa4:	lsr	x8, x8, #11
    2fa8:	orr	x8, x8, x9, lsl #21
    2fac:	ldr	w10, [sp, #16]
    2fb0:	mov	w9, w10
    2fb4:	add	x9, x9, w8, uxtw
    2fb8:	str	w9, [sp, #20]
    2fbc:	ldr	x8, [sp, #104]
    2fc0:	ldr	w9, [x8, #8]
    2fc4:	ldr	w10, [sp, #24]
    2fc8:	add	w9, w9, w10
    2fcc:	ldr	x8, [sp, #104]
    2fd0:	str	w9, [x8, #8]
    2fd4:	ldr	x8, [sp, #104]
    2fd8:	ldr	w9, [x8, #12]
    2fdc:	ldr	w10, [sp, #20]
    2fe0:	add	w9, w9, w10
    2fe4:	ldr	x8, [sp, #104]
    2fe8:	str	w9, [x8, #12]
    2fec:	ldr	x8, [sp, #104]
    2ff0:	ldr	w9, [x8, #16]
    2ff4:	ldr	w10, [sp, #16]
    2ff8:	add	w9, w9, w10
    2ffc:	ldr	x8, [sp, #104]
    3000:	str	w9, [x8, #16]
    3004:	ldr	x8, [sp, #104]
    3008:	ldr	w9, [x8, #20]
    300c:	ldr	w10, [sp, #12]
    3010:	add	w9, w9, w10
    3014:	ldr	x8, [sp, #104]
    3018:	str	w9, [x8, #20]
    301c:	ldp	x20, x19, [sp, #192]
    3020:	ldp	x22, x21, [sp, #176]
    3024:	ldp	x24, x23, [sp, #160]
    3028:	ldp	x26, x25, [sp, #144]
    302c:	ldp	x28, x27, [sp, #128]
    3030:	ldp	x29, x30, [sp, #112]
    3034:	add	sp, sp, #0xd0
    3038:	ret
    303c:	sub	sp, sp, #0xa0
    3040:	stp	x29, x30, [sp, #144]
    3044:	add	x29, sp, #0x90
    3048:	mov	x2, #0x60                  	// #96
    304c:	mov	x1, #0x10                  	// #16
    3050:	sub	x8, x29, #0x18
    3054:	add	x9, sp, #0x18
    3058:	stur	x0, [x29, #-8]
    305c:	ldur	x10, [x29, #-8]
    3060:	add	x10, x10, #0x10
    3064:	mov	x0, x9
    3068:	str	x1, [sp, #16]
    306c:	mov	x1, x10
    3070:	str	x8, [sp, #8]
    3074:	str	x9, [sp]
    3078:	bl	d00 <memcpy@plt>
    307c:	ldr	x0, [sp]
    3080:	ldr	x1, [sp, #8]
    3084:	bl	1270 <PyInit__md5@@Base+0x37c>
    3088:	ldr	x0, [sp, #8]
    308c:	ldr	x1, [sp, #16]
    3090:	bl	e10 <_Py_strhex@plt>
    3094:	ldp	x29, x30, [sp, #144]
    3098:	add	sp, sp, #0xa0
    309c:	ret
    30a0:	sub	sp, sp, #0x40
    30a4:	stp	x29, x30, [sp, #48]
    30a8:	add	x29, sp, #0x30
    30ac:	stur	x0, [x29, #-8]
    30b0:	stur	x1, [x29, #-16]
    30b4:	str	x2, [sp, #24]
    30b8:	ldr	x8, [sp, #24]
    30bc:	cmp	x8, #0x0
    30c0:	cset	w9, le
    30c4:	tbnz	w9, #0, 3200 <PyInit__md5@@Base+0x230c>
    30c8:	ldur	x8, [x29, #-8]
    30cc:	ldr	w9, [x8, #24]
    30d0:	cbnz	w9, 3118 <PyInit__md5@@Base+0x2224>
    30d4:	ldr	x8, [sp, #24]
    30d8:	cmp	x8, #0x40
    30dc:	b.lt	3118 <PyInit__md5@@Base+0x2224>  // b.tstop
    30e0:	ldur	x0, [x29, #-8]
    30e4:	ldur	x1, [x29, #-16]
    30e8:	bl	154c <PyInit__md5@@Base+0x658>
    30ec:	ldur	x8, [x29, #-8]
    30f0:	ldr	x9, [x8]
    30f4:	add	x9, x9, #0x200
    30f8:	str	x9, [x8]
    30fc:	ldur	x8, [x29, #-16]
    3100:	add	x8, x8, #0x40
    3104:	stur	x8, [x29, #-16]
    3108:	ldr	x8, [sp, #24]
    310c:	subs	x8, x8, #0x40
    3110:	str	x8, [sp, #24]
    3114:	b	31fc <PyInit__md5@@Base+0x2308>
    3118:	ldr	x8, [sp, #24]
    311c:	ldur	x9, [x29, #-8]
    3120:	ldr	w10, [x9, #24]
    3124:	mov	w11, #0x40                  	// #64
    3128:	subs	w10, w11, w10
    312c:	mov	w9, w10
    3130:	ubfx	x9, x9, #0, #32
    3134:	cmp	x8, x9
    3138:	b.le	315c <PyInit__md5@@Base+0x2268>
    313c:	ldur	x8, [x29, #-8]
    3140:	ldr	w9, [x8, #24]
    3144:	mov	w10, #0x40                  	// #64
    3148:	subs	w9, w10, w9
    314c:	mov	w8, w9
    3150:	ubfx	x8, x8, #0, #32
    3154:	str	x8, [sp, #8]
    3158:	b	3164 <PyInit__md5@@Base+0x2270>
    315c:	ldr	x8, [sp, #24]
    3160:	str	x8, [sp, #8]
    3164:	ldr	x8, [sp, #8]
    3168:	str	x8, [sp, #16]
    316c:	ldur	x8, [x29, #-8]
    3170:	add	x8, x8, #0x1c
    3174:	ldur	x9, [x29, #-8]
    3178:	ldr	w10, [x9, #24]
    317c:	mov	w9, w10
    3180:	add	x0, x8, x9
    3184:	ldur	x1, [x29, #-16]
    3188:	ldr	x2, [sp, #16]
    318c:	bl	d00 <memcpy@plt>
    3190:	ldr	x8, [sp, #16]
    3194:	ldur	x9, [x29, #-8]
    3198:	ldr	w10, [x9, #24]
    319c:	add	w8, w10, w8
    31a0:	str	w8, [x9, #24]
    31a4:	ldr	x9, [sp, #16]
    31a8:	ldur	x11, [x29, #-16]
    31ac:	add	x9, x11, x9
    31b0:	stur	x9, [x29, #-16]
    31b4:	ldr	x9, [sp, #16]
    31b8:	ldr	x11, [sp, #24]
    31bc:	subs	x9, x11, x9
    31c0:	str	x9, [sp, #24]
    31c4:	ldur	x9, [x29, #-8]
    31c8:	ldr	w8, [x9, #24]
    31cc:	cmp	w8, #0x40
    31d0:	b.ne	31fc <PyInit__md5@@Base+0x2308>  // b.any
    31d4:	ldur	x0, [x29, #-8]
    31d8:	ldur	x8, [x29, #-8]
    31dc:	add	x1, x8, #0x1c
    31e0:	bl	154c <PyInit__md5@@Base+0x658>
    31e4:	ldur	x8, [x29, #-8]
    31e8:	ldr	x9, [x8]
    31ec:	add	x9, x9, #0x200
    31f0:	str	x9, [x8]
    31f4:	ldur	x8, [x29, #-8]
    31f8:	str	wzr, [x8, #24]
    31fc:	b	30b8 <PyInit__md5@@Base+0x21c4>
    3200:	ldp	x29, x30, [sp, #48]
    3204:	add	sp, sp, #0x40
    3208:	ret
    320c:	sub	sp, sp, #0x20
    3210:	stp	x29, x30, [sp, #16]
    3214:	add	x29, sp, #0x10
    3218:	mov	x8, #0x40                  	// #64
    321c:	str	x0, [sp, #8]
    3220:	str	x1, [sp]
    3224:	mov	x0, x8
    3228:	bl	d90 <PyLong_FromLong@plt>
    322c:	ldp	x29, x30, [sp, #16]
    3230:	add	sp, sp, #0x20
    3234:	ret
    3238:	sub	sp, sp, #0x20
    323c:	stp	x29, x30, [sp, #16]
    3240:	add	x29, sp, #0x10
    3244:	adrp	x8, 3000 <PyInit__md5@@Base+0x210c>
    3248:	add	x8, x8, #0x63d
    324c:	mov	x9, #0x3                   	// #3
    3250:	str	x0, [sp, #8]
    3254:	str	x1, [sp]
    3258:	mov	x0, x8
    325c:	mov	x1, x9
    3260:	bl	e00 <PyUnicode_FromStringAndSize@plt>
    3264:	ldp	x29, x30, [sp, #16]
    3268:	add	sp, sp, #0x20
    326c:	ret
    3270:	sub	sp, sp, #0x20
    3274:	stp	x29, x30, [sp, #16]
    3278:	add	x29, sp, #0x10
    327c:	mov	x8, #0x10                  	// #16
    3280:	str	x0, [sp, #8]
    3284:	str	x1, [sp]
    3288:	mov	x0, x8
    328c:	bl	d90 <PyLong_FromLong@plt>
    3290:	ldp	x29, x30, [sp, #16]
    3294:	add	sp, sp, #0x20
    3298:	ret
    329c:	sub	sp, sp, #0x70
    32a0:	stp	x29, x30, [sp, #96]
    32a4:	add	x29, sp, #0x60
    32a8:	mov	x8, xzr
    32ac:	stur	x0, [x29, #-8]
    32b0:	stur	x1, [x29, #-16]
    32b4:	stur	x2, [x29, #-24]
    32b8:	stur	x3, [x29, #-32]
    32bc:	stur	x8, [x29, #-40]
    32c0:	ldur	x8, [x29, #-24]
    32c4:	ldur	x9, [x29, #-32]
    32c8:	str	x8, [sp, #24]
    32cc:	cbz	x9, 32e0 <PyInit__md5@@Base+0x23ec>
    32d0:	ldur	x8, [x29, #-32]
    32d4:	ldr	x8, [x8, #16]
    32d8:	str	x8, [sp, #16]
    32dc:	b	32e8 <PyInit__md5@@Base+0x23f4>
    32e0:	mov	x8, xzr
    32e4:	str	x8, [sp, #16]
    32e8:	ldr	x8, [sp, #16]
    32ec:	ldr	x9, [sp, #24]
    32f0:	add	x8, x9, x8
    32f4:	mov	x10, xzr
    32f8:	subs	x8, x8, #0x0
    32fc:	str	x8, [sp, #40]
    3300:	str	x10, [sp, #32]
    3304:	ldur	x8, [x29, #-32]
    3308:	cbnz	x8, 3340 <PyInit__md5@@Base+0x244c>
    330c:	ldur	x8, [x29, #-24]
    3310:	mov	x9, xzr
    3314:	cmp	x9, x8
    3318:	cset	w10, gt
    331c:	tbnz	w10, #0, 3340 <PyInit__md5@@Base+0x244c>
    3320:	ldur	x8, [x29, #-24]
    3324:	cmp	x8, #0x1
    3328:	b.gt	3340 <PyInit__md5@@Base+0x244c>
    332c:	ldur	x8, [x29, #-16]
    3330:	cbz	x8, 3340 <PyInit__md5@@Base+0x244c>
    3334:	ldur	x8, [x29, #-16]
    3338:	str	x8, [sp, #8]
    333c:	b	3380 <PyInit__md5@@Base+0x248c>
    3340:	ldur	x0, [x29, #-16]
    3344:	ldur	x1, [x29, #-24]
    3348:	ldur	x3, [x29, #-32]
    334c:	mov	x8, xzr
    3350:	mov	x2, x8
    3354:	adrp	x4, 14000 <PyInit__md5@@Base+0x1310c>
    3358:	add	x4, x4, #0x420
    335c:	mov	w9, wzr
    3360:	mov	w5, w9
    3364:	mov	w6, #0x1                   	// #1
    3368:	mov	w7, w9
    336c:	mov	x8, sp
    3370:	add	x10, sp, #0x30
    3374:	str	x10, [x8]
    3378:	bl	d50 <_PyArg_UnpackKeywords@plt>
    337c:	str	x0, [sp, #8]
    3380:	ldr	x8, [sp, #8]
    3384:	stur	x8, [x29, #-16]
    3388:	ldur	x8, [x29, #-16]
    338c:	cbnz	x8, 3394 <PyInit__md5@@Base+0x24a0>
    3390:	b	33bc <PyInit__md5@@Base+0x24c8>
    3394:	ldr	x8, [sp, #40]
    3398:	cbnz	x8, 33a0 <PyInit__md5@@Base+0x24ac>
    339c:	b	33ac <PyInit__md5@@Base+0x24b8>
    33a0:	ldur	x8, [x29, #-16]
    33a4:	ldr	x8, [x8]
    33a8:	str	x8, [sp, #32]
    33ac:	ldur	x0, [x29, #-8]
    33b0:	ldr	x1, [sp, #32]
    33b4:	bl	33cc <PyInit__md5@@Base+0x24d8>
    33b8:	stur	x0, [x29, #-40]
    33bc:	ldur	x0, [x29, #-40]
    33c0:	ldp	x29, x30, [sp, #96]
    33c4:	add	sp, sp, #0x70
    33c8:	ret
    33cc:	sub	sp, sp, #0x90
    33d0:	stp	x29, x30, [sp, #128]
    33d4:	add	x29, sp, #0x80
    33d8:	stur	x0, [x29, #-16]
    33dc:	stur	x1, [x29, #-24]
    33e0:	ldur	x8, [x29, #-24]
    33e4:	cbz	x8, 34cc <PyInit__md5@@Base+0x25d8>
    33e8:	ldur	x8, [x29, #-24]
    33ec:	ldr	x8, [x8, #8]
    33f0:	ldr	x8, [x8, #168]
    33f4:	and	x8, x8, #0x10000000
    33f8:	cbz	x8, 3420 <PyInit__md5@@Base+0x252c>
    33fc:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
    3400:	ldr	x8, [x8, #4032]
    3404:	ldr	x0, [x8]
    3408:	adrp	x1, 3000 <PyInit__md5@@Base+0x210c>
    340c:	add	x1, x1, #0x657
    3410:	bl	d60 <PyErr_SetString@plt>
    3414:	mov	x8, xzr
    3418:	stur	x8, [x29, #-8]
    341c:	b	356c <PyInit__md5@@Base+0x2678>
    3420:	ldur	x8, [x29, #-24]
    3424:	ldr	x8, [x8, #8]
    3428:	ldr	x8, [x8, #160]
    342c:	cbz	x8, 3444 <PyInit__md5@@Base+0x2550>
    3430:	ldur	x8, [x29, #-24]
    3434:	ldr	x8, [x8, #8]
    3438:	ldr	x8, [x8, #160]
    343c:	ldr	x8, [x8]
    3440:	cbnz	x8, 3468 <PyInit__md5@@Base+0x2574>
    3444:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
    3448:	ldr	x8, [x8, #4032]
    344c:	ldr	x0, [x8]
    3450:	adrp	x1, 3000 <PyInit__md5@@Base+0x210c>
    3454:	add	x1, x1, #0x686
    3458:	bl	d60 <PyErr_SetString@plt>
    345c:	mov	x8, xzr
    3460:	stur	x8, [x29, #-8]
    3464:	b	356c <PyInit__md5@@Base+0x2678>
    3468:	ldur	x0, [x29, #-24]
    346c:	add	x1, sp, #0x10
    3470:	mov	w8, wzr
    3474:	mov	w2, w8
    3478:	bl	dd0 <PyObject_GetBuffer@plt>
    347c:	mov	w8, #0xffffffff            	// #-1
    3480:	cmp	w0, w8
    3484:	b.ne	3494 <PyInit__md5@@Base+0x25a0>  // b.any
    3488:	mov	x8, xzr
    348c:	stur	x8, [x29, #-8]
    3490:	b	356c <PyInit__md5@@Base+0x2678>
    3494:	ldr	w8, [sp, #52]
    3498:	cmp	w8, #0x1
    349c:	b.le	34cc <PyInit__md5@@Base+0x25d8>
    34a0:	adrp	x8, 13000 <PyInit__md5@@Base+0x1210c>
    34a4:	ldr	x8, [x8, #4024]
    34a8:	ldr	x0, [x8]
    34ac:	adrp	x1, 3000 <PyInit__md5@@Base+0x210c>
    34b0:	add	x1, x1, #0x6b0
    34b4:	bl	d60 <PyErr_SetString@plt>
    34b8:	add	x0, sp, #0x10
    34bc:	bl	d10 <PyBuffer_Release@plt>
    34c0:	mov	x8, xzr
    34c4:	stur	x8, [x29, #-8]
    34c8:	b	356c <PyInit__md5@@Base+0x2678>
    34cc:	bl	11f0 <PyInit__md5@@Base+0x2fc>
    34d0:	stur	x0, [x29, #-32]
    34d4:	cbnz	x0, 34f4 <PyInit__md5@@Base+0x2600>
    34d8:	ldur	x8, [x29, #-24]
    34dc:	cbz	x8, 34e8 <PyInit__md5@@Base+0x25f4>
    34e0:	add	x0, sp, #0x10
    34e4:	bl	d10 <PyBuffer_Release@plt>
    34e8:	mov	x8, xzr
    34ec:	stur	x8, [x29, #-8]
    34f0:	b	356c <PyInit__md5@@Base+0x2678>
    34f4:	ldur	x8, [x29, #-32]
    34f8:	add	x0, x8, #0x10
    34fc:	bl	357c <PyInit__md5@@Base+0x2688>
    3500:	bl	db0 <PyErr_Occurred@plt>
    3504:	cbz	x0, 3538 <PyInit__md5@@Base+0x2644>
    3508:	ldur	x2, [x29, #-32]
    350c:	adrp	x0, 3000 <PyInit__md5@@Base+0x210c>
    3510:	add	x0, x0, #0x6f8
    3514:	mov	w1, #0x211                 	// #529
    3518:	bl	35dc <PyInit__md5@@Base+0x26e8>
    351c:	ldur	x8, [x29, #-24]
    3520:	cbz	x8, 352c <PyInit__md5@@Base+0x2638>
    3524:	add	x0, sp, #0x10
    3528:	bl	d10 <PyBuffer_Release@plt>
    352c:	mov	x8, xzr
    3530:	stur	x8, [x29, #-8]
    3534:	b	356c <PyInit__md5@@Base+0x2678>
    3538:	ldur	x8, [x29, #-24]
    353c:	cbz	x8, 3564 <PyInit__md5@@Base+0x2670>
    3540:	ldur	x8, [x29, #-32]
    3544:	add	x0, x8, #0x10
    3548:	add	x8, sp, #0x10
    354c:	ldr	x1, [sp, #16]
    3550:	ldr	x2, [sp, #32]
    3554:	str	x8, [sp, #8]
    3558:	bl	30a0 <PyInit__md5@@Base+0x21ac>
    355c:	ldr	x0, [sp, #8]
    3560:	bl	d10 <PyBuffer_Release@plt>
    3564:	ldur	x8, [x29, #-32]
    3568:	stur	x8, [x29, #-8]
    356c:	ldur	x0, [x29, #-8]
    3570:	ldp	x29, x30, [sp, #128]
    3574:	add	sp, sp, #0x90
    3578:	ret
    357c:	sub	sp, sp, #0x10
    3580:	mov	w8, #0x2301                	// #8961
    3584:	movk	w8, #0x6745, lsl #16
    3588:	mov	w9, #0xab89                	// #43913
    358c:	movk	w9, #0xefcd, lsl #16
    3590:	mov	w10, #0xdcfe                	// #56574
    3594:	movk	w10, #0x98ba, lsl #16
    3598:	mov	w11, #0x5476                	// #21622
    359c:	movk	w11, #0x1032, lsl #16
    35a0:	str	x0, [sp, #8]
    35a4:	ldr	x12, [sp, #8]
    35a8:	str	w8, [x12, #8]
    35ac:	ldr	x12, [sp, #8]
    35b0:	str	w9, [x12, #12]
    35b4:	ldr	x12, [sp, #8]
    35b8:	str	w10, [x12, #16]
    35bc:	ldr	x12, [sp, #8]
    35c0:	str	w11, [x12, #20]
    35c4:	ldr	x12, [sp, #8]
    35c8:	str	wzr, [x12, #24]
    35cc:	ldr	x12, [sp, #8]
    35d0:	str	xzr, [x12]
    35d4:	add	sp, sp, #0x10
    35d8:	ret
    35dc:	sub	sp, sp, #0x30
    35e0:	stp	x29, x30, [sp, #32]
    35e4:	add	x29, sp, #0x20
    35e8:	stur	x0, [x29, #-8]
    35ec:	stur	w1, [x29, #-12]
    35f0:	str	x2, [sp, #8]
    35f4:	ldr	x8, [sp, #8]
    35f8:	ldr	x9, [x8]
    35fc:	subs	x9, x9, #0x1
    3600:	str	x9, [x8]
    3604:	cbz	x9, 360c <PyInit__md5@@Base+0x2718>
    3608:	b	3614 <PyInit__md5@@Base+0x2720>
    360c:	ldr	x0, [sp, #8]
    3610:	bl	d40 <_Py_Dealloc@plt>
    3614:	ldp	x29, x30, [sp, #32]
    3618:	add	sp, sp, #0x30
    361c:	ret

Disassembly of section .fini:

0000000000003620 <.fini>:
    3620:	stp	x29, x30, [sp, #-16]!
    3624:	mov	x29, sp
    3628:	ldp	x29, x30, [sp], #16
    362c:	ret
