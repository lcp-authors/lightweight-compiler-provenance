
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bz2.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001648 <.init>:
    1648:	stp	x29, x30, [sp, #-16]!
    164c:	mov	x29, sp
    1650:	bl	1940 <PyThread_free_lock@plt+0x10>
    1654:	ldp	x29, x30, [sp], #16
    1658:	ret

Disassembly of section .plt:

0000000000001660 <memcpy@plt-0x20>:
    1660:	stp	x16, x30, [sp, #-16]!
    1664:	adrp	x16, 13000 <PyInit__bz2@@Base+0x106e8>
    1668:	ldr	x17, [x16, #4088]
    166c:	add	x16, x16, #0xff8
    1670:	br	x17
    1674:	nop
    1678:	nop
    167c:	nop

0000000000001680 <memcpy@plt>:
    1680:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1684:	ldr	x17, [x16]
    1688:	add	x16, x16, #0x0
    168c:	br	x17

0000000000001690 <memmove@plt>:
    1690:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1694:	ldr	x17, [x16, #8]
    1698:	add	x16, x16, #0x8
    169c:	br	x17

00000000000016a0 <_PyBytes_Resize@plt>:
    16a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16a4:	ldr	x17, [x16, #16]
    16a8:	add	x16, x16, #0x10
    16ac:	br	x17

00000000000016b0 <PyEval_RestoreThread@plt>:
    16b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16b4:	ldr	x17, [x16, #24]
    16b8:	add	x16, x16, #0x18
    16bc:	br	x17

00000000000016c0 <PyMem_Free@plt>:
    16c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16c4:	ldr	x17, [x16, #32]
    16c8:	add	x16, x16, #0x20
    16cc:	br	x17

00000000000016d0 <PyBuffer_Release@plt>:
    16d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #40]
    16d8:	add	x16, x16, #0x28
    16dc:	br	x17

00000000000016e0 <__cxa_finalize@plt>:
    16e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #48]
    16e8:	add	x16, x16, #0x30
    16ec:	br	x17

00000000000016f0 <PyMem_RawMalloc@plt>:
    16f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #56]
    16f8:	add	x16, x16, #0x38
    16fc:	br	x17

0000000000001700 <PyBuffer_IsContiguous@plt>:
    1700:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1704:	ldr	x17, [x16, #64]
    1708:	add	x16, x16, #0x40
    170c:	br	x17

0000000000001710 <PyBytes_FromStringAndSize@plt>:
    1710:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1714:	ldr	x17, [x16, #72]
    1718:	add	x16, x16, #0x48
    171c:	br	x17

0000000000001720 <_Py_Dealloc@plt>:
    1720:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1724:	ldr	x17, [x16, #80]
    1728:	add	x16, x16, #0x50
    172c:	br	x17

0000000000001730 <PyErr_NoMemory@plt>:
    1730:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1734:	ldr	x17, [x16, #88]
    1738:	add	x16, x16, #0x58
    173c:	br	x17

0000000000001740 <PyThread_acquire_lock@plt>:
    1740:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1744:	ldr	x17, [x16, #96]
    1748:	add	x16, x16, #0x60
    174c:	br	x17

0000000000001750 <_PyArg_UnpackKeywords@plt>:
    1750:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1754:	ldr	x17, [x16, #104]
    1758:	add	x16, x16, #0x68
    175c:	br	x17

0000000000001760 <PyErr_SetString@plt>:
    1760:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1764:	ldr	x17, [x16, #112]
    1768:	add	x16, x16, #0x70
    176c:	br	x17

0000000000001770 <BZ2_bzDecompressInit@plt>:
    1770:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1774:	ldr	x17, [x16, #120]
    1778:	add	x16, x16, #0x78
    177c:	br	x17

0000000000001780 <BZ2_bzDecompressEnd@plt>:
    1780:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1784:	ldr	x17, [x16, #128]
    1788:	add	x16, x16, #0x80
    178c:	br	x17

0000000000001790 <PyMem_Realloc@plt>:
    1790:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1794:	ldr	x17, [x16, #136]
    1798:	add	x16, x16, #0x88
    179c:	br	x17

00000000000017a0 <PyErr_SetNone@plt>:
    17a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17a4:	ldr	x17, [x16, #144]
    17a8:	add	x16, x16, #0x90
    17ac:	br	x17

00000000000017b0 <BZ2_bzCompressInit@plt>:
    17b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17b4:	ldr	x17, [x16, #152]
    17b8:	add	x16, x16, #0x98
    17bc:	br	x17

00000000000017c0 <PyType_Ready@plt>:
    17c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17c4:	ldr	x17, [x16, #160]
    17c8:	add	x16, x16, #0xa0
    17cc:	br	x17

00000000000017d0 <PyLong_AsSsize_t@plt>:
    17d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17d4:	ldr	x17, [x16, #168]
    17d8:	add	x16, x16, #0xa8
    17dc:	br	x17

00000000000017e0 <_PyArg_BadArgument@plt>:
    17e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17e4:	ldr	x17, [x16, #176]
    17e8:	add	x16, x16, #0xb0
    17ec:	br	x17

00000000000017f0 <BZ2_bzCompressEnd@plt>:
    17f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17f4:	ldr	x17, [x16, #184]
    17f8:	add	x16, x16, #0xb8
    17fc:	br	x17

0000000000001800 <_PyArg_NoPositional@plt>:
    1800:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1804:	ldr	x17, [x16, #192]
    1808:	add	x16, x16, #0xc0
    180c:	br	x17

0000000000001810 <__gmon_start__@plt>:
    1810:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1814:	ldr	x17, [x16, #200]
    1818:	add	x16, x16, #0xc8
    181c:	br	x17

0000000000001820 <_PyArg_CheckPositional@plt>:
    1820:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1824:	ldr	x17, [x16, #208]
    1828:	add	x16, x16, #0xd0
    182c:	br	x17

0000000000001830 <PyErr_Occurred@plt>:
    1830:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1834:	ldr	x17, [x16, #216]
    1838:	add	x16, x16, #0xd8
    183c:	br	x17

0000000000001840 <PyModule_Create2@plt>:
    1840:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1844:	ldr	x17, [x16, #224]
    1848:	add	x16, x16, #0xe0
    184c:	br	x17

0000000000001850 <BZ2_bzCompress@plt>:
    1850:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1854:	ldr	x17, [x16, #232]
    1858:	add	x16, x16, #0xe8
    185c:	br	x17

0000000000001860 <PyMem_RawFree@plt>:
    1860:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1864:	ldr	x17, [x16, #240]
    1868:	add	x16, x16, #0xf0
    186c:	br	x17

0000000000001870 <PyThread_allocate_lock@plt>:
    1870:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16, #248]
    1878:	add	x16, x16, #0xf8
    187c:	br	x17

0000000000001880 <BZ2_bzDecompress@plt>:
    1880:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #256]
    1888:	add	x16, x16, #0x100
    188c:	br	x17

0000000000001890 <PyThread_release_lock@plt>:
    1890:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #264]
    1898:	add	x16, x16, #0x108
    189c:	br	x17

00000000000018a0 <PyObject_GetBuffer@plt>:
    18a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #272]
    18a8:	add	x16, x16, #0x110
    18ac:	br	x17

00000000000018b0 <PyEval_SaveThread@plt>:
    18b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #280]
    18b8:	add	x16, x16, #0x118
    18bc:	br	x17

00000000000018c0 <PyModule_AddObject@plt>:
    18c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #288]
    18c8:	add	x16, x16, #0x120
    18cc:	br	x17

00000000000018d0 <PyType_IsSubtype@plt>:
    18d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #296]
    18d8:	add	x16, x16, #0x128
    18dc:	br	x17

00000000000018e0 <PyErr_Format@plt>:
    18e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #304]
    18e8:	add	x16, x16, #0x130
    18ec:	br	x17

00000000000018f0 <PyNumber_Index@plt>:
    18f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #312]
    18f8:	add	x16, x16, #0x138
    18fc:	br	x17

0000000000001900 <_PyArg_NoKeywords@plt>:
    1900:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #320]
    1908:	add	x16, x16, #0x140
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #328]
    1918:	add	x16, x16, #0x148
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #336]
    1928:	add	x16, x16, #0x150
    192c:	br	x17

0000000000001930 <PyThread_free_lock@plt>:
    1930:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #344]
    1938:	add	x16, x16, #0x158
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__bz2@@Base-0xfd8>:
    1940:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1944:	ldr	x0, [x0, #4040]
    1948:	cbz	x0, 1950 <PyThread_free_lock@plt+0x20>
    194c:	b	1810 <__gmon_start__@plt>
    1950:	ret
    1954:	nop
    1958:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116e8>
    195c:	add	x0, x0, #0x690
    1960:	adrp	x1, 14000 <PyInit__bz2@@Base+0x116e8>
    1964:	add	x1, x1, #0x690
    1968:	cmp	x1, x0
    196c:	b.eq	1984 <PyThread_free_lock@plt+0x54>  // b.none
    1970:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106e8>
    1974:	ldr	x1, [x1, #3976]
    1978:	cbz	x1, 1984 <PyThread_free_lock@plt+0x54>
    197c:	mov	x16, x1
    1980:	br	x16
    1984:	ret
    1988:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116e8>
    198c:	add	x0, x0, #0x690
    1990:	adrp	x1, 14000 <PyInit__bz2@@Base+0x116e8>
    1994:	add	x1, x1, #0x690
    1998:	sub	x1, x1, x0
    199c:	lsr	x2, x1, #63
    19a0:	add	x1, x2, x1, asr #3
    19a4:	cmp	xzr, x1, asr #1
    19a8:	asr	x1, x1, #1
    19ac:	b.eq	19c4 <PyThread_free_lock@plt+0x94>  // b.none
    19b0:	adrp	x2, 13000 <PyInit__bz2@@Base+0x106e8>
    19b4:	ldr	x2, [x2, #4064]
    19b8:	cbz	x2, 19c4 <PyThread_free_lock@plt+0x94>
    19bc:	mov	x16, x2
    19c0:	br	x16
    19c4:	ret
    19c8:	stp	x29, x30, [sp, #-32]!
    19cc:	mov	x29, sp
    19d0:	str	x19, [sp, #16]
    19d4:	adrp	x19, 14000 <PyInit__bz2@@Base+0x116e8>
    19d8:	ldrb	w0, [x19, #1680]
    19dc:	cbnz	w0, 1a04 <PyThread_free_lock@plt+0xd4>
    19e0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    19e4:	ldr	x0, [x0, #3992]
    19e8:	cbz	x0, 19f8 <PyThread_free_lock@plt+0xc8>
    19ec:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116e8>
    19f0:	ldr	x0, [x0, #352]
    19f4:	bl	16e0 <__cxa_finalize@plt>
    19f8:	bl	1958 <PyThread_free_lock@plt+0x28>
    19fc:	mov	w0, #0x1                   	// #1
    1a00:	strb	w0, [x19, #1680]
    1a04:	ldr	x19, [sp, #16]
    1a08:	ldp	x29, x30, [sp], #32
    1a0c:	ret
    1a10:	b	1988 <PyThread_free_lock@plt+0x58>
    1a14:	nop
    1a18:	stp	x29, x30, [sp, #-16]!
    1a1c:	cmn	w0, #0x3
    1a20:	mov	x29, sp
    1a24:	b.eq	1ae4 <PyThread_free_lock@plt+0x1b4>  // b.none
    1a28:	cmn	w0, #0x2
    1a2c:	b.ge	1a64 <PyThread_free_lock@plt+0x134>  // b.tcont
    1a30:	cmn	w0, #0x6
    1a34:	b.eq	1af0 <PyThread_free_lock@plt+0x1c0>  // b.none
    1a38:	cmn	w0, #0x5
    1a3c:	b.lt	1a84 <PyThread_free_lock@plt+0x154>  // b.tstop
    1a40:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1a44:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1a48:	add	x1, x1, #0x9e0
    1a4c:	ldr	x0, [x0, #4032]
    1a50:	ldr	x0, [x0]
    1a54:	bl	1760 <PyErr_SetString@plt>
    1a58:	mov	w0, #0x1                   	// #1
    1a5c:	ldp	x29, x30, [sp], #16
    1a60:	ret
    1a64:	cmn	w0, #0x1
    1a68:	b.eq	1b10 <PyThread_free_lock@plt+0x1e0>  // b.none
    1a6c:	tbnz	w0, #31, 1ab8 <PyThread_free_lock@plt+0x188>
    1a70:	cmp	w0, #0x4
    1a74:	b.gt	1b30 <PyThread_free_lock@plt+0x200>
    1a78:	mov	w0, #0x0                   	// #0
    1a7c:	ldp	x29, x30, [sp], #16
    1a80:	ret
    1a84:	cmn	w0, #0x9
    1a88:	b.eq	1b54 <PyThread_free_lock@plt+0x224>  // b.none
    1a8c:	cmn	w0, #0x7
    1a90:	b.ne	1b30 <PyThread_free_lock@plt+0x200>  // b.any
    1a94:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1a98:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1a9c:	add	x1, x1, #0xa70
    1aa0:	ldr	x0, [x0, #4056]
    1aa4:	ldr	x0, [x0]
    1aa8:	bl	1760 <PyErr_SetString@plt>
    1aac:	mov	w0, #0x1                   	// #1
    1ab0:	ldp	x29, x30, [sp], #16
    1ab4:	ret
    1ab8:	cmn	w0, #0x2
    1abc:	b.ne	1b30 <PyThread_free_lock@plt+0x200>  // b.any
    1ac0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1ac4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1ac8:	add	x1, x1, #0xa20
    1acc:	ldr	x0, [x0, #4016]
    1ad0:	ldr	x0, [x0]
    1ad4:	bl	1760 <PyErr_SetString@plt>
    1ad8:	mov	w0, #0x1                   	// #1
    1adc:	ldp	x29, x30, [sp], #16
    1ae0:	ret
    1ae4:	bl	1730 <PyErr_NoMemory@plt>
    1ae8:	mov	w0, #0x1                   	// #1
    1aec:	b	1a5c <PyThread_free_lock@plt+0x12c>
    1af0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1af4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1af8:	add	x1, x1, #0xa58
    1afc:	ldr	x0, [x0, #4032]
    1b00:	ldr	x0, [x0]
    1b04:	bl	1760 <PyErr_SetString@plt>
    1b08:	mov	w0, #0x1                   	// #1
    1b0c:	b	1a5c <PyThread_free_lock@plt+0x12c>
    1b10:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1b14:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b18:	add	x1, x1, #0xab8
    1b1c:	ldr	x0, [x0, #4000]
    1b20:	ldr	x0, [x0]
    1b24:	bl	1760 <PyErr_SetString@plt>
    1b28:	mov	w0, #0x1                   	// #1
    1b2c:	b	1a5c <PyThread_free_lock@plt+0x12c>
    1b30:	adrp	x3, 13000 <PyInit__bz2@@Base+0x106e8>
    1b34:	mov	w2, w0
    1b38:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b3c:	add	x1, x1, #0xaf8
    1b40:	ldr	x3, [x3, #4032]
    1b44:	ldr	x0, [x3]
    1b48:	bl	18e0 <PyErr_Format@plt>
    1b4c:	mov	w0, #0x1                   	// #1
    1b50:	b	1a5c <PyThread_free_lock@plt+0x12c>
    1b54:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1b58:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b5c:	add	x1, x1, #0x9f8
    1b60:	ldr	x0, [x0, #3968]
    1b64:	ldr	x0, [x0]
    1b68:	bl	1760 <PyErr_SetString@plt>
    1b6c:	mov	w0, #0x1                   	// #1
    1b70:	b	1a5c <PyThread_free_lock@plt+0x12c>
    1b74:	nop
    1b78:	stp	x29, x30, [sp, #-48]!
    1b7c:	mov	x29, sp
    1b80:	stp	x19, x20, [sp, #16]
    1b84:	mov	x19, x0
    1b88:	mov	x20, x2
    1b8c:	ldr	x0, [x0, #8]
    1b90:	str	x21, [sp, #32]
    1b94:	adrp	x21, 14000 <PyInit__bz2@@Base+0x116e8>
    1b98:	add	x21, x21, #0x168
    1b9c:	cmp	x0, x21
    1ba0:	cset	w0, eq  // eq = none
    1ba4:	cmp	x1, #0x0
    1ba8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    1bac:	b.ne	1c64 <PyThread_free_lock@plt+0x334>  // b.any
    1bb0:	cmp	x20, #0x0
    1bb4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    1bb8:	b.ne	1c48 <PyThread_free_lock@plt+0x318>  // b.any
    1bbc:	bl	1870 <PyThread_allocate_lock@plt>
    1bc0:	mov	x20, x0
    1bc4:	cbz	x0, 1cbc <PyThread_free_lock@plt+0x38c>
    1bc8:	ldr	x0, [x19, #144]
    1bcc:	cbz	x0, 1bd4 <PyThread_free_lock@plt+0x2a4>
    1bd0:	bl	1930 <PyThread_free_lock@plt>
    1bd4:	mov	w0, #0x1                   	// #1
    1bd8:	strb	w0, [x19, #112]
    1bdc:	stp	xzr, xzr, [x19, #120]
    1be0:	mov	x1, #0x0                   	// #0
    1be4:	mov	x0, #0x0                   	// #0
    1be8:	stp	xzr, x20, [x19, #136]
    1bec:	ldr	x20, [x19, #104]
    1bf0:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1bf4:	str	x0, [x19, #104]
    1bf8:	cbz	x20, 1c0c <PyThread_free_lock@plt+0x2dc>
    1bfc:	ldr	x1, [x20]
    1c00:	sub	x1, x1, #0x1
    1c04:	str	x1, [x20]
    1c08:	cbz	x1, 1c38 <PyThread_free_lock@plt+0x308>
    1c0c:	cbz	x0, 1ca8 <PyThread_free_lock@plt+0x378>
    1c10:	mov	w2, #0x0                   	// #0
    1c14:	mov	w1, #0x0                   	// #0
    1c18:	add	x0, x19, #0x10
    1c1c:	bl	1770 <BZ2_bzDecompressInit@plt>
    1c20:	bl	1a18 <PyThread_free_lock@plt+0xe8>
    1c24:	cbnz	w0, 1c84 <PyThread_free_lock@plt+0x354>
    1c28:	ldp	x19, x20, [sp, #16]
    1c2c:	ldr	x21, [sp, #32]
    1c30:	ldp	x29, x30, [sp], #48
    1c34:	ret
    1c38:	mov	x0, x20
    1c3c:	bl	1720 <_Py_Dealloc@plt>
    1c40:	ldr	x0, [x19, #104]
    1c44:	b	1c0c <PyThread_free_lock@plt+0x2dc>
    1c48:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1c4c:	mov	x1, x20
    1c50:	add	x0, x0, #0xb20
    1c54:	bl	1900 <_PyArg_NoKeywords@plt>
    1c58:	cbnz	w0, 1bbc <PyThread_free_lock@plt+0x28c>
    1c5c:	mov	w0, #0xffffffff            	// #-1
    1c60:	b	1c28 <PyThread_free_lock@plt+0x2f8>
    1c64:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1c68:	add	x0, x0, #0xb20
    1c6c:	bl	1800 <_PyArg_NoPositional@plt>
    1c70:	cbz	w0, 1c5c <PyThread_free_lock@plt+0x32c>
    1c74:	ldr	x0, [x19, #8]
    1c78:	cmp	x0, x21
    1c7c:	cset	w0, eq  // eq = none
    1c80:	b	1bb0 <PyThread_free_lock@plt+0x280>
    1c84:	ldr	x0, [x19, #104]
    1c88:	cbz	x0, 1ca8 <PyThread_free_lock@plt+0x378>
    1c8c:	ldr	x1, [x0]
    1c90:	str	xzr, [x19, #104]
    1c94:	sub	x1, x1, #0x1
    1c98:	str	x1, [x0]
    1c9c:	cbnz	x1, 1ca8 <PyThread_free_lock@plt+0x378>
    1ca0:	bl	1720 <_Py_Dealloc@plt>
    1ca4:	nop
    1ca8:	ldr	x0, [x19, #144]
    1cac:	bl	1930 <PyThread_free_lock@plt>
    1cb0:	str	xzr, [x19, #144]
    1cb4:	mov	w0, #0xffffffff            	// #-1
    1cb8:	b	1c28 <PyThread_free_lock@plt+0x2f8>
    1cbc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1cc0:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1cc4:	add	x1, x1, #0xb30
    1cc8:	ldr	x0, [x0, #4008]
    1ccc:	ldr	x0, [x0]
    1cd0:	bl	1760 <PyErr_SetString@plt>
    1cd4:	mov	w0, #0xffffffff            	// #-1
    1cd8:	b	1c28 <PyThread_free_lock@plt+0x2f8>
    1cdc:	nop
    1ce0:	stp	x29, x30, [sp, #-32]!
    1ce4:	mov	x29, sp
    1ce8:	str	x19, [sp, #16]
    1cec:	mov	x19, x0
    1cf0:	ldr	x0, [x0, #120]
    1cf4:	cbz	x0, 1cfc <PyThread_free_lock@plt+0x3cc>
    1cf8:	bl	16c0 <PyMem_Free@plt>
    1cfc:	add	x0, x19, #0x10
    1d00:	bl	1780 <BZ2_bzDecompressEnd@plt>
    1d04:	ldr	x0, [x19, #104]
    1d08:	cbz	x0, 1d20 <PyThread_free_lock@plt+0x3f0>
    1d0c:	ldr	x1, [x0]
    1d10:	str	xzr, [x19, #104]
    1d14:	sub	x1, x1, #0x1
    1d18:	str	x1, [x0]
    1d1c:	cbz	x1, 1d48 <PyThread_free_lock@plt+0x418>
    1d20:	ldr	x0, [x19, #144]
    1d24:	cbz	x0, 1d2c <PyThread_free_lock@plt+0x3fc>
    1d28:	bl	1930 <PyThread_free_lock@plt>
    1d2c:	ldr	x1, [x19, #8]
    1d30:	mov	x0, x19
    1d34:	ldr	x19, [sp, #16]
    1d38:	ldp	x29, x30, [sp], #32
    1d3c:	ldr	x1, [x1, #320]
    1d40:	mov	x16, x1
    1d44:	br	x16
    1d48:	bl	1720 <_Py_Dealloc@plt>
    1d4c:	b	1d20 <PyThread_free_lock@plt+0x3f0>
    1d50:	stp	x29, x30, [sp, #-32]!
    1d54:	cmp	x2, #0x0
    1d58:	mov	x29, sp
    1d5c:	stp	x19, x20, [sp, #16]
    1d60:	mov	x19, x0
    1d64:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116e8>
    1d68:	add	x0, x0, #0x168
    1d6c:	mov	x20, x1
    1d70:	ldr	x3, [x19, #8]
    1d74:	add	x0, x0, #0x1a0
    1d78:	ccmp	x3, x0, #0x0, ne  // ne = any
    1d7c:	b.eq	1e4c <PyThread_free_lock@plt+0x51c>  // b.none
    1d80:	ldr	x1, [x20, #16]
    1d84:	cmp	x1, #0x1
    1d88:	b.hi	1e20 <PyThread_free_lock@plt+0x4f0>  // b.pmore
    1d8c:	cmp	x1, #0x0
    1d90:	b.le	1e44 <PyThread_free_lock@plt+0x514>
    1d94:	ldr	x0, [x20, #24]
    1d98:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106e8>
    1d9c:	ldr	x1, [x1, #3984]
    1da0:	ldr	x0, [x0, #8]
    1da4:	cmp	x0, x1
    1da8:	b.eq	1e98 <PyThread_free_lock@plt+0x568>  // b.none
    1dac:	bl	18d0 <PyType_IsSubtype@plt>
    1db0:	cbnz	w0, 1e98 <PyThread_free_lock@plt+0x568>
    1db4:	ldr	x0, [x20, #24]
    1db8:	bl	1910 <_PyLong_AsInt@plt>
    1dbc:	mov	w20, w0
    1dc0:	cmn	w0, #0x1
    1dc4:	b.eq	1e68 <PyThread_free_lock@plt+0x538>  // b.none
    1dc8:	sub	w0, w0, #0x1
    1dcc:	cmp	w0, #0x8
    1dd0:	b.hi	1e70 <PyThread_free_lock@plt+0x540>  // b.pmore
    1dd4:	bl	1870 <PyThread_allocate_lock@plt>
    1dd8:	str	x0, [x19, #104]
    1ddc:	cbz	x0, 1ecc <PyThread_free_lock@plt+0x59c>
    1de0:	mov	w1, w20
    1de4:	adrp	x4, 1000 <memcpy@plt-0x680>
    1de8:	add	x4, x4, #0xef8
    1dec:	adrp	x0, 1000 <memcpy@plt-0x680>
    1df0:	mov	w3, #0x0                   	// #0
    1df4:	add	x0, x0, #0xef0
    1df8:	mov	w2, #0x0                   	// #0
    1dfc:	stp	x4, x0, [x19, #72]
    1e00:	add	x0, x19, #0x10
    1e04:	str	xzr, [x19, #88]
    1e08:	bl	17b0 <BZ2_bzCompressInit@plt>
    1e0c:	bl	1a18 <PyThread_free_lock@plt+0xe8>
    1e10:	cbnz	w0, 1eb8 <PyThread_free_lock@plt+0x588>
    1e14:	ldp	x19, x20, [sp, #16]
    1e18:	ldp	x29, x30, [sp], #32
    1e1c:	ret
    1e20:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1e24:	mov	x3, #0x1                   	// #1
    1e28:	add	x0, x0, #0xb48
    1e2c:	mov	x2, #0x0                   	// #0
    1e30:	bl	1820 <_PyArg_CheckPositional@plt>
    1e34:	cbz	w0, 1e60 <PyThread_free_lock@plt+0x530>
    1e38:	ldr	x1, [x20, #16]
    1e3c:	cmp	x1, #0x0
    1e40:	b.gt	1d94 <PyThread_free_lock@plt+0x464>
    1e44:	mov	w20, #0x9                   	// #9
    1e48:	b	1dd4 <PyThread_free_lock@plt+0x4a4>
    1e4c:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1e50:	mov	x1, x2
    1e54:	add	x0, x0, #0xb48
    1e58:	bl	1900 <_PyArg_NoKeywords@plt>
    1e5c:	cbnz	w0, 1d80 <PyThread_free_lock@plt+0x450>
    1e60:	mov	w0, #0xffffffff            	// #-1
    1e64:	b	1e14 <PyThread_free_lock@plt+0x4e4>
    1e68:	bl	1830 <PyErr_Occurred@plt>
    1e6c:	cbnz	x0, 1e60 <PyThread_free_lock@plt+0x530>
    1e70:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1e74:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1e78:	add	x1, x1, #0xb80
    1e7c:	ldr	x0, [x0, #4016]
    1e80:	ldr	x0, [x0]
    1e84:	bl	1760 <PyErr_SetString@plt>
    1e88:	mov	w0, #0xffffffff            	// #-1
    1e8c:	ldp	x19, x20, [sp, #16]
    1e90:	ldp	x29, x30, [sp], #32
    1e94:	ret
    1e98:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1e9c:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1ea0:	add	x1, x1, #0xb58
    1ea4:	ldr	x0, [x0, #4024]
    1ea8:	ldr	x0, [x0]
    1eac:	bl	1760 <PyErr_SetString@plt>
    1eb0:	mov	w0, #0xffffffff            	// #-1
    1eb4:	b	1e14 <PyThread_free_lock@plt+0x4e4>
    1eb8:	ldr	x0, [x19, #104]
    1ebc:	bl	1930 <PyThread_free_lock@plt>
    1ec0:	str	xzr, [x19, #104]
    1ec4:	mov	w0, #0xffffffff            	// #-1
    1ec8:	b	1e14 <PyThread_free_lock@plt+0x4e4>
    1ecc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1ed0:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1ed4:	add	x1, x1, #0xb30
    1ed8:	ldr	x0, [x0, #4008]
    1edc:	ldr	x0, [x0]
    1ee0:	bl	1760 <PyErr_SetString@plt>
    1ee4:	mov	w0, #0xffffffff            	// #-1
    1ee8:	b	1e14 <PyThread_free_lock@plt+0x4e4>
    1eec:	nop
    1ef0:	mov	x0, x1
    1ef4:	b	1860 <PyMem_RawFree@plt>
    1ef8:	cmp	w1, #0x0
    1efc:	ccmp	w2, #0x0, #0x1, ge  // ge = tcont
    1f00:	b.lt	1f0c <PyThread_free_lock@plt+0x5dc>  // b.tstop
    1f04:	smull	x0, w1, w2
    1f08:	b	16f0 <PyMem_RawMalloc@plt>
    1f0c:	mov	x0, #0x0                   	// #0
    1f10:	ret
    1f14:	nop
    1f18:	stp	x29, x30, [sp, #-32]!
    1f1c:	mov	x29, sp
    1f20:	str	x19, [sp, #16]
    1f24:	mov	x19, x0
    1f28:	add	x0, x0, #0x10
    1f2c:	bl	17f0 <BZ2_bzCompressEnd@plt>
    1f30:	ldr	x0, [x19, #104]
    1f34:	cbz	x0, 1f3c <PyThread_free_lock@plt+0x60c>
    1f38:	bl	1930 <PyThread_free_lock@plt>
    1f3c:	ldr	x1, [x19, #8]
    1f40:	mov	x0, x19
    1f44:	ldr	x19, [sp, #16]
    1f48:	ldp	x29, x30, [sp], #32
    1f4c:	ldr	x1, [x1, #320]
    1f50:	mov	x16, x1
    1f54:	br	x16
    1f58:	ldr	x2, [x0]
    1f5c:	cmp	x1, #0x0
    1f60:	ldr	x3, [x2, #16]
    1f64:	add	x2, x3, #0x6
    1f68:	add	x2, x2, x3, lsr #3
    1f6c:	ccmp	x1, x2, #0x2, gt
    1f70:	csel	x1, x1, x2, cc  // cc = lo, ul, last
    1f74:	cmp	x1, x3
    1f78:	b.ls	1f80 <PyThread_free_lock@plt+0x650>  // b.plast
    1f7c:	b	16a0 <_PyBytes_Resize@plt>
    1f80:	stp	x29, x30, [sp, #-16]!
    1f84:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    1f88:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1f8c:	mov	x29, sp
    1f90:	ldr	x0, [x0, #4048]
    1f94:	add	x1, x1, #0xba8
    1f98:	ldr	x0, [x0]
    1f9c:	bl	1760 <PyErr_SetString@plt>
    1fa0:	mov	w0, #0xffffffff            	// #-1
    1fa4:	ldp	x29, x30, [sp], #16
    1fa8:	ret
    1fac:	nop
    1fb0:	stp	x29, x30, [sp, #-112]!
    1fb4:	mov	x29, sp
    1fb8:	stp	x19, x20, [sp, #16]
    1fbc:	mov	w20, w3
    1fc0:	stp	x21, x22, [sp, #32]
    1fc4:	mov	x22, x2
    1fc8:	stp	x25, x26, [sp, #64]
    1fcc:	mov	x25, x0
    1fd0:	mov	x26, x1
    1fd4:	mov	x0, #0x0                   	// #0
    1fd8:	mov	x1, #0x2000                	// #8192
    1fdc:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1fe0:	str	x0, [sp, #104]
    1fe4:	cbz	x0, 2158 <PyThread_free_lock@plt+0x828>
    1fe8:	stp	x23, x24, [sp, #48]
    1fec:	add	x24, sp, #0x68
    1ff0:	add	x23, x25, #0x10
    1ff4:	stp	x27, x28, [sp, #80]
    1ff8:	add	x1, x0, #0x20
    1ffc:	mov	w2, #0x2000                	// #8192
    2000:	mov	w0, #0x0                   	// #0
    2004:	mov	x19, #0x0                   	// #0
    2008:	mov	x21, #0xffffffff            	// #4294967295
    200c:	str	x26, [x25, #16]
    2010:	str	wzr, [x25, #24]
    2014:	str	x1, [x25, #40]
    2018:	str	w2, [x25, #48]
    201c:	nop
    2020:	cbnz	w0, 2038 <PyThread_free_lock@plt+0x708>
    2024:	cbz	x22, 20ac <PyThread_free_lock@plt+0x77c>
    2028:	cmp	x22, x21
    202c:	csel	x0, x22, x21, ls  // ls = plast
    2030:	str	w0, [x25, #24]
    2034:	sub	x22, x22, x0
    2038:	ldr	w0, [x25, #48]
    203c:	cbnz	w0, 205c <PyThread_free_lock@plt+0x72c>
    2040:	ldr	x0, [sp, #104]
    2044:	ldr	x1, [x0, #16]
    2048:	subs	x1, x1, x19
    204c:	b.eq	20dc <PyThread_free_lock@plt+0x7ac>  // b.none
    2050:	cmp	x1, x21
    2054:	csel	x1, x1, x21, ls  // ls = plast
    2058:	str	w1, [x25, #48]
    205c:	bl	18b0 <PyEval_SaveThread@plt>
    2060:	mov	x27, x0
    2064:	mov	w1, w20
    2068:	mov	x0, x23
    206c:	ldr	x28, [x25, #40]
    2070:	bl	1850 <BZ2_bzCompress@plt>
    2074:	ldr	x1, [x25, #40]
    2078:	mov	w26, w0
    207c:	mov	x0, x27
    2080:	sub	x1, x1, x28
    2084:	add	x19, x19, x1
    2088:	bl	16b0 <PyEval_RestoreThread@plt>
    208c:	mov	w0, w26
    2090:	bl	1a18 <PyThread_free_lock@plt+0xe8>
    2094:	cbnz	w0, 2138 <PyThread_free_lock@plt+0x808>
    2098:	cmp	w20, #0x2
    209c:	ccmp	w26, #0x4, #0x0, eq  // eq = none
    20a0:	b.eq	20b0 <PyThread_free_lock@plt+0x780>  // b.none
    20a4:	ldr	w0, [x25, #24]
    20a8:	b	2020 <PyThread_free_lock@plt+0x6f0>
    20ac:	cbnz	w20, 2038 <PyThread_free_lock@plt+0x708>
    20b0:	ldr	x0, [sp, #104]
    20b4:	ldr	x1, [x0, #16]
    20b8:	cmp	x1, x19
    20bc:	b.ne	2108 <PyThread_free_lock@plt+0x7d8>  // b.any
    20c0:	ldp	x19, x20, [sp, #16]
    20c4:	ldp	x21, x22, [sp, #32]
    20c8:	ldp	x23, x24, [sp, #48]
    20cc:	ldp	x25, x26, [sp, #64]
    20d0:	ldp	x27, x28, [sp, #80]
    20d4:	ldp	x29, x30, [sp], #112
    20d8:	ret
    20dc:	mov	x0, x24
    20e0:	mov	x1, #0xffffffffffffffff    	// #-1
    20e4:	bl	1f58 <PyThread_free_lock@plt+0x628>
    20e8:	tbnz	w0, #31, 2138 <PyThread_free_lock@plt+0x808>
    20ec:	ldr	x1, [sp, #104]
    20f0:	add	x0, x1, #0x20
    20f4:	ldr	x1, [x1, #16]
    20f8:	add	x0, x0, x19
    20fc:	str	x0, [x25, #40]
    2100:	sub	x1, x1, x19
    2104:	b	2050 <PyThread_free_lock@plt+0x720>
    2108:	mov	x1, x19
    210c:	add	x0, sp, #0x68
    2110:	bl	16a0 <_PyBytes_Resize@plt>
    2114:	tbnz	w0, #31, 2138 <PyThread_free_lock@plt+0x808>
    2118:	ldp	x19, x20, [sp, #16]
    211c:	ldp	x21, x22, [sp, #32]
    2120:	ldp	x23, x24, [sp, #48]
    2124:	ldp	x25, x26, [sp, #64]
    2128:	ldp	x27, x28, [sp, #80]
    212c:	ldr	x0, [sp, #104]
    2130:	ldp	x29, x30, [sp], #112
    2134:	ret
    2138:	ldr	x0, [sp, #104]
    213c:	cbz	x0, 2150 <PyThread_free_lock@plt+0x820>
    2140:	ldr	x1, [x0]
    2144:	sub	x1, x1, #0x1
    2148:	str	x1, [x0]
    214c:	cbz	x1, 2170 <PyThread_free_lock@plt+0x840>
    2150:	ldp	x23, x24, [sp, #48]
    2154:	ldp	x27, x28, [sp, #80]
    2158:	mov	x0, #0x0                   	// #0
    215c:	ldp	x19, x20, [sp, #16]
    2160:	ldp	x21, x22, [sp, #32]
    2164:	ldp	x25, x26, [sp, #64]
    2168:	ldp	x29, x30, [sp], #112
    216c:	ret
    2170:	bl	1720 <_Py_Dealloc@plt>
    2174:	mov	x0, #0x0                   	// #0
    2178:	ldp	x19, x20, [sp, #16]
    217c:	ldp	x21, x22, [sp, #32]
    2180:	ldp	x23, x24, [sp, #48]
    2184:	ldp	x25, x26, [sp, #64]
    2188:	ldp	x27, x28, [sp, #80]
    218c:	ldp	x29, x30, [sp], #112
    2190:	ret
    2194:	nop
    2198:	stp	x29, x30, [sp, #-32]!
    219c:	mov	w1, #0x0                   	// #0
    21a0:	mov	x29, sp
    21a4:	stp	x19, x20, [sp, #16]
    21a8:	mov	x19, x0
    21ac:	ldr	x0, [x0, #104]
    21b0:	bl	1740 <PyThread_acquire_lock@plt>
    21b4:	cbz	w0, 21f8 <PyThread_free_lock@plt+0x8c8>
    21b8:	ldr	w0, [x19, #96]
    21bc:	cbnz	w0, 221c <PyThread_free_lock@plt+0x8ec>
    21c0:	mov	w0, #0x1                   	// #1
    21c4:	str	w0, [x19, #96]
    21c8:	mov	w3, #0x2                   	// #2
    21cc:	mov	x2, #0x0                   	// #0
    21d0:	mov	x1, #0x0                   	// #0
    21d4:	mov	x0, x19
    21d8:	bl	1fb0 <PyThread_free_lock@plt+0x680>
    21dc:	mov	x20, x0
    21e0:	ldr	x0, [x19, #104]
    21e4:	bl	1890 <PyThread_release_lock@plt>
    21e8:	mov	x0, x20
    21ec:	ldp	x19, x20, [sp, #16]
    21f0:	ldp	x29, x30, [sp], #32
    21f4:	ret
    21f8:	bl	18b0 <PyEval_SaveThread@plt>
    21fc:	mov	x20, x0
    2200:	ldr	x0, [x19, #104]
    2204:	mov	w1, #0x1                   	// #1
    2208:	bl	1740 <PyThread_acquire_lock@plt>
    220c:	mov	x0, x20
    2210:	bl	16b0 <PyEval_RestoreThread@plt>
    2214:	ldr	w0, [x19, #96]
    2218:	cbz	w0, 21c0 <PyThread_free_lock@plt+0x890>
    221c:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    2220:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2224:	add	x1, x1, #0xbd8
    2228:	mov	x20, #0x0                   	// #0
    222c:	ldr	x0, [x0, #4016]
    2230:	ldr	x0, [x0]
    2234:	bl	1760 <PyErr_SetString@plt>
    2238:	ldr	x0, [x19, #104]
    223c:	bl	1890 <PyThread_release_lock@plt>
    2240:	mov	x0, x20
    2244:	ldp	x19, x20, [sp, #16]
    2248:	ldp	x29, x30, [sp], #32
    224c:	ret
    2250:	sub	sp, sp, #0xe0
    2254:	stp	x29, x30, [sp, #16]
    2258:	add	x29, sp, #0x10
    225c:	stp	x19, x20, [sp, #32]
    2260:	mov	x20, x1
    2264:	mov	x19, x0
    2268:	stp	x21, x22, [sp, #48]
    226c:	mov	x1, x2
    2270:	cbz	x3, 2374 <PyThread_free_lock@plt+0xa44>
    2274:	ldr	x21, [x3, #16]
    2278:	stp	xzr, xzr, [sp, #144]
    227c:	add	x21, x2, x21
    2280:	stp	xzr, xzr, [sp, #160]
    2284:	stp	xzr, xzr, [sp, #176]
    2288:	stp	xzr, xzr, [sp, #192]
    228c:	stp	xzr, xzr, [sp, #208]
    2290:	add	x0, sp, #0x80
    2294:	str	x0, [sp]
    2298:	adrp	x4, 14000 <PyInit__bz2@@Base+0x116e8>
    229c:	mov	x0, x20
    22a0:	add	x4, x4, #0x4a8
    22a4:	mov	w7, #0x0                   	// #0
    22a8:	mov	w6, #0x2                   	// #2
    22ac:	mov	w5, #0x1                   	// #1
    22b0:	mov	x2, #0x0                   	// #0
    22b4:	bl	1750 <_PyArg_UnpackKeywords@plt>
    22b8:	mov	x20, x0
    22bc:	cbz	x0, 2514 <PyThread_free_lock@plt+0xbe4>
    22c0:	ldr	x0, [x20]
    22c4:	add	x22, sp, #0x90
    22c8:	mov	x1, x22
    22cc:	mov	w2, #0x0                   	// #0
    22d0:	bl	18a0 <PyObject_GetBuffer@plt>
    22d4:	cbnz	w0, 2514 <PyThread_free_lock@plt+0xbe4>
    22d8:	mov	x0, x22
    22dc:	mov	w1, #0x43                  	// #67
    22e0:	bl	1700 <PyBuffer_IsContiguous@plt>
    22e4:	cbz	w0, 2670 <PyThread_free_lock@plt+0xd40>
    22e8:	cmp	x21, #0x1
    22ec:	b.eq	23a8 <PyThread_free_lock@plt+0xa78>  // b.none
    22f0:	ldr	x0, [x20, #8]
    22f4:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106e8>
    22f8:	ldr	x1, [x1, #3984]
    22fc:	ldr	x0, [x0, #8]
    2300:	cmp	x0, x1
    2304:	b.eq	2570 <PyThread_free_lock@plt+0xc40>  // b.none
    2308:	bl	18d0 <PyType_IsSubtype@plt>
    230c:	cbnz	w0, 2570 <PyThread_free_lock@plt+0xc40>
    2310:	ldr	x0, [x20, #8]
    2314:	bl	18f0 <PyNumber_Index@plt>
    2318:	mov	x20, x0
    231c:	cbz	x0, 23a0 <PyThread_free_lock@plt+0xa70>
    2320:	bl	17d0 <PyLong_AsSsize_t@plt>
    2324:	mov	x22, x0
    2328:	ldr	x1, [x20]
    232c:	sub	x0, x1, #0x1
    2330:	str	x0, [x20]
    2334:	cbz	x0, 2664 <PyThread_free_lock@plt+0xd34>
    2338:	cmn	x22, #0x1
    233c:	b.eq	23a0 <PyThread_free_lock@plt+0xa70>  // b.none
    2340:	ldr	x0, [x19, #144]
    2344:	mov	w1, #0x0                   	// #0
    2348:	stp	x23, x24, [sp, #64]
    234c:	bl	1740 <PyThread_acquire_lock@plt>
    2350:	cbnz	w0, 23c0 <PyThread_free_lock@plt+0xa90>
    2354:	bl	18b0 <PyEval_SaveThread@plt>
    2358:	mov	x20, x0
    235c:	ldr	x0, [x19, #144]
    2360:	mov	w1, #0x1                   	// #1
    2364:	bl	1740 <PyThread_acquire_lock@plt>
    2368:	mov	x0, x20
    236c:	bl	16b0 <PyEval_RestoreThread@plt>
    2370:	b	23c0 <PyThread_free_lock@plt+0xa90>
    2374:	stp	xzr, xzr, [sp, #144]
    2378:	sub	x0, x2, #0x1
    237c:	mov	x21, x2
    2380:	stp	xzr, xzr, [sp, #160]
    2384:	cmp	x0, #0x1
    2388:	stp	xzr, xzr, [sp, #176]
    238c:	stp	xzr, xzr, [sp, #192]
    2390:	stp	xzr, xzr, [sp, #208]
    2394:	b.hi	2290 <PyThread_free_lock@plt+0x960>  // b.pmore
    2398:	cbnz	x20, 22c0 <PyThread_free_lock@plt+0x990>
    239c:	b	2290 <PyThread_free_lock@plt+0x960>
    23a0:	bl	1830 <PyErr_Occurred@plt>
    23a4:	cbnz	x0, 2514 <PyThread_free_lock@plt+0xbe4>
    23a8:	ldr	x0, [x19, #144]
    23ac:	mov	x22, #0xffffffffffffffff    	// #-1
    23b0:	mov	w1, #0x0                   	// #0
    23b4:	stp	x23, x24, [sp, #64]
    23b8:	bl	1740 <PyThread_acquire_lock@plt>
    23bc:	cbz	w0, 2354 <PyThread_free_lock@plt+0xa24>
    23c0:	ldrb	w23, [x19, #96]
    23c4:	cbnz	w23, 2618 <PyThread_free_lock@plt+0xce8>
    23c8:	ldr	x1, [x19, #16]
    23cc:	stp	x25, x26, [sp, #80]
    23d0:	ldr	x25, [sp, #144]
    23d4:	ldr	x21, [sp, #160]
    23d8:	cbz	x1, 2540 <PyThread_free_lock@plt+0xc10>
    23dc:	ldp	x4, x3, [x19, #120]
    23e0:	ldr	x2, [x19, #136]
    23e4:	add	x0, x1, x2
    23e8:	add	x24, x4, x3
    23ec:	sub	x5, x3, x2
    23f0:	sub	x24, x24, x0
    23f4:	cmp	x21, x5
    23f8:	b.hi	2698 <PyThread_free_lock@plt+0xd68>  // b.pmore
    23fc:	cmp	x21, x24
    2400:	b.hi	2714 <PyThread_free_lock@plt+0xde4>  // b.pmore
    2404:	mov	x2, x21
    2408:	mov	x1, x25
    240c:	bl	1680 <memcpy@plt>
    2410:	mov	w23, #0x1                   	// #1
    2414:	ldr	x0, [x19, #136]
    2418:	add	x21, x0, x21
    241c:	str	x21, [x19, #136]
    2420:	mov	x0, #0x1fff                	// #8191
    2424:	add	x25, x19, #0x10
    2428:	cmp	x22, x0
    242c:	b.ls	25e8 <PyThread_free_lock@plt+0xcb8>  // b.plast
    2430:	mov	x1, #0x2000                	// #8192
    2434:	mov	x0, #0x0                   	// #0
    2438:	bl	1710 <PyBytes_FromStringAndSize@plt>
    243c:	str	x0, [sp, #120]
    2440:	cbz	x0, 2654 <PyThread_free_lock@plt+0xd24>
    2444:	add	x24, sp, #0x78
    2448:	add	x0, x0, #0x20
    244c:	ldur	x1, [x0, #-16]
    2450:	mov	x21, #0x0                   	// #0
    2454:	ldr	x2, [x19, #136]
    2458:	str	x27, [sp, #96]
    245c:	mov	x27, #0xffffffff            	// #4294967295
    2460:	str	x0, [x25, #24]
    2464:	nop
    2468:	sub	x1, x1, x21
    246c:	cmp	x1, x27
    2470:	csel	x1, x1, x27, ls  // ls = plast
    2474:	cmp	x2, x27
    2478:	csel	x0, x2, x27, ls  // ls = plast
    247c:	str	w0, [x25, #8]
    2480:	sub	x2, x2, x0
    2484:	str	w1, [x25, #32]
    2488:	str	x2, [x19, #136]
    248c:	bl	18b0 <PyEval_SaveThread@plt>
    2490:	mov	x20, x0
    2494:	mov	x0, x25
    2498:	bl	1880 <BZ2_bzDecompress@plt>
    249c:	ldr	x2, [x19, #136]
    24a0:	mov	w26, w0
    24a4:	ldr	w1, [x25, #8]
    24a8:	mov	x0, x20
    24ac:	ldr	x21, [sp, #120]
    24b0:	add	x2, x2, x1
    24b4:	ldr	x1, [x25, #24]
    24b8:	str	x2, [x19, #136]
    24bc:	add	x21, x21, #0x20
    24c0:	sub	x21, x1, x21
    24c4:	bl	16b0 <PyEval_RestoreThread@plt>
    24c8:	mov	w0, w26
    24cc:	bl	1a18 <PyThread_free_lock@plt+0xe8>
    24d0:	cbnz	w0, 2638 <PyThread_free_lock@plt+0xd08>
    24d4:	ldr	x20, [sp, #120]
    24d8:	cmp	w26, #0x4
    24dc:	ldr	x1, [x20, #16]
    24e0:	b.eq	2590 <PyThread_free_lock@plt+0xc60>  // b.none
    24e4:	ldr	x2, [x19, #136]
    24e8:	cmp	x22, x21
    24ec:	cbz	x2, 2598 <PyThread_free_lock@plt+0xc68>
    24f0:	ldr	w0, [x25, #32]
    24f4:	cbnz	w0, 2468 <PyThread_free_lock@plt+0xb38>
    24f8:	b.eq	2598 <PyThread_free_lock@plt+0xc68>  // b.none
    24fc:	cmp	x21, x1
    2500:	b.eq	254c <PyThread_free_lock@plt+0xc1c>  // b.none
    2504:	add	x20, x20, #0x20
    2508:	add	x20, x20, x21
    250c:	str	x20, [x25, #24]
    2510:	b	2468 <PyThread_free_lock@plt+0xb38>
    2514:	mov	x20, #0x0                   	// #0
    2518:	ldr	x0, [sp, #152]
    251c:	cbz	x0, 2528 <PyThread_free_lock@plt+0xbf8>
    2520:	add	x0, sp, #0x90
    2524:	bl	16d0 <PyBuffer_Release@plt>
    2528:	mov	x0, x20
    252c:	ldp	x29, x30, [sp, #16]
    2530:	ldp	x19, x20, [sp, #32]
    2534:	ldp	x21, x22, [sp, #48]
    2538:	add	sp, sp, #0xe0
    253c:	ret
    2540:	str	x25, [x19, #16]
    2544:	str	x21, [x19, #136]
    2548:	b	2420 <PyThread_free_lock@plt+0xaf0>
    254c:	mov	x1, x22
    2550:	mov	x0, x24
    2554:	bl	1f58 <PyThread_free_lock@plt+0x628>
    2558:	cmn	w0, #0x1
    255c:	b.eq	2638 <PyThread_free_lock@plt+0xd08>  // b.none
    2560:	ldr	x20, [sp, #120]
    2564:	ldr	x2, [x19, #136]
    2568:	ldr	x1, [x20, #16]
    256c:	b	2504 <PyThread_free_lock@plt+0xbd4>
    2570:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    2574:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2578:	mov	x20, #0x0                   	// #0
    257c:	add	x1, x1, #0xb58
    2580:	ldr	x0, [x0, #4024]
    2584:	ldr	x0, [x0]
    2588:	bl	1760 <PyErr_SetString@plt>
    258c:	b	2518 <PyThread_free_lock@plt+0xbe8>
    2590:	mov	w0, #0x1                   	// #1
    2594:	strb	w0, [x19, #96]
    2598:	cmp	x21, x1
    259c:	b.eq	25bc <PyThread_free_lock@plt+0xc8c>  // b.none
    25a0:	mov	x1, x21
    25a4:	add	x0, sp, #0x78
    25a8:	bl	16a0 <_PyBytes_Resize@plt>
    25ac:	cmn	w0, #0x1
    25b0:	b.eq	2638 <PyThread_free_lock@plt+0xd08>  // b.none
    25b4:	ldr	x20, [sp, #120]
    25b8:	cbz	x20, 2650 <PyThread_free_lock@plt+0xd20>
    25bc:	ldrb	w0, [x19, #96]
    25c0:	ldr	x2, [x19, #136]
    25c4:	cbz	w0, 25fc <PyThread_free_lock@plt+0xccc>
    25c8:	strb	wzr, [x19, #112]
    25cc:	cbnz	x2, 2730 <PyThread_free_lock@plt+0xe00>
    25d0:	ldp	x25, x26, [sp, #80]
    25d4:	ldr	x27, [sp, #96]
    25d8:	ldr	x0, [x19, #144]
    25dc:	bl	1890 <PyThread_release_lock@plt>
    25e0:	ldp	x23, x24, [sp, #64]
    25e4:	b	2518 <PyThread_free_lock@plt+0xbe8>
    25e8:	mov	x1, x22
    25ec:	mov	x0, #0x0                   	// #0
    25f0:	bl	1710 <PyBytes_FromStringAndSize@plt>
    25f4:	str	x0, [sp, #120]
    25f8:	b	2440 <PyThread_free_lock@plt+0xb10>
    25fc:	cbnz	x2, 26d0 <PyThread_free_lock@plt+0xda0>
    2600:	mov	w0, #0x1                   	// #1
    2604:	strb	w0, [x19, #112]
    2608:	ldp	x25, x26, [sp, #80]
    260c:	ldr	x27, [sp, #96]
    2610:	str	xzr, [x19, #16]
    2614:	b	25d8 <PyThread_free_lock@plt+0xca8>
    2618:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    261c:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2620:	mov	x20, #0x0                   	// #0
    2624:	add	x1, x1, #0xc30
    2628:	ldr	x0, [x0, #4056]
    262c:	ldr	x0, [x0]
    2630:	bl	1760 <PyErr_SetString@plt>
    2634:	b	25d8 <PyThread_free_lock@plt+0xca8>
    2638:	ldr	x0, [sp, #120]
    263c:	cbz	x0, 2650 <PyThread_free_lock@plt+0xd20>
    2640:	ldr	x1, [x0]
    2644:	sub	x1, x1, #0x1
    2648:	str	x1, [x0]
    264c:	cbz	x1, 2708 <PyThread_free_lock@plt+0xdd8>
    2650:	ldr	x27, [sp, #96]
    2654:	mov	x20, #0x0                   	// #0
    2658:	ldp	x25, x26, [sp, #80]
    265c:	str	xzr, [x19, #16]
    2660:	b	25d8 <PyThread_free_lock@plt+0xca8>
    2664:	mov	x0, x20
    2668:	bl	1720 <_Py_Dealloc@plt>
    266c:	b	2338 <PyThread_free_lock@plt+0xa08>
    2670:	ldr	x3, [x20]
    2674:	adrp	x2, 2000 <PyThread_free_lock@plt+0x6d0>
    2678:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    267c:	add	x2, x2, #0xbf8
    2680:	add	x1, x1, #0xc10
    2684:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    2688:	mov	x20, #0x0                   	// #0
    268c:	add	x0, x0, #0xc20
    2690:	bl	17e0 <_PyArg_BadArgument@plt>
    2694:	b	2518 <PyThread_free_lock@plt+0xbe8>
    2698:	add	x3, x21, x3
    269c:	sub	x23, x1, x4
    26a0:	sub	x24, x3, x24
    26a4:	mov	x0, x4
    26a8:	mov	x1, x24
    26ac:	bl	1790 <PyMem_Realloc@plt>
    26b0:	mov	x20, x0
    26b4:	cbz	x0, 27cc <PyThread_free_lock@plt+0xe9c>
    26b8:	ldr	x1, [x19, #136]
    26bc:	add	x0, x0, x23
    26c0:	str	x0, [x19, #16]
    26c4:	add	x0, x0, x1
    26c8:	stp	x20, x24, [x19, #120]
    26cc:	b	2404 <PyThread_free_lock@plt+0xad4>
    26d0:	strb	wzr, [x19, #112]
    26d4:	cbnz	w23, 25d0 <PyThread_free_lock@plt+0xca0>
    26d8:	ldr	x0, [x19, #120]
    26dc:	cbz	x0, 2798 <PyThread_free_lock@plt+0xe68>
    26e0:	ldr	x1, [x19, #128]
    26e4:	cmp	x1, x2
    26e8:	b.cc	278c <PyThread_free_lock@plt+0xe5c>  // b.lo, b.ul, b.last
    26ec:	ldr	x1, [x19, #16]
    26f0:	bl	1680 <memcpy@plt>
    26f4:	ldr	x0, [x19, #120]
    26f8:	ldp	x25, x26, [sp, #80]
    26fc:	ldr	x27, [sp, #96]
    2700:	str	x0, [x19, #16]
    2704:	b	25d8 <PyThread_free_lock@plt+0xca8>
    2708:	bl	1720 <_Py_Dealloc@plt>
    270c:	ldr	x27, [sp, #96]
    2710:	b	2654 <PyThread_free_lock@plt+0xd24>
    2714:	mov	x0, x4
    2718:	bl	1690 <memmove@plt>
    271c:	ldr	x0, [x19, #120]
    2720:	str	x0, [x19, #16]
    2724:	ldr	x1, [x19, #136]
    2728:	add	x0, x0, x1
    272c:	b	2404 <PyThread_free_lock@plt+0xad4>
    2730:	ldr	x0, [x19, #16]
    2734:	mov	x1, x2
    2738:	ldr	x21, [x19, #104]
    273c:	bl	1710 <PyBytes_FromStringAndSize@plt>
    2740:	str	x0, [x19, #104]
    2744:	cbz	x21, 2758 <PyThread_free_lock@plt+0xe28>
    2748:	ldr	x1, [x21]
    274c:	sub	x1, x1, #0x1
    2750:	str	x1, [x21]
    2754:	cbz	x1, 277c <PyThread_free_lock@plt+0xe4c>
    2758:	cbnz	x0, 25d0 <PyThread_free_lock@plt+0xca0>
    275c:	ldr	x0, [x20]
    2760:	sub	x0, x0, #0x1
    2764:	str	x0, [x20]
    2768:	cbz	x0, 27b4 <PyThread_free_lock@plt+0xe84>
    276c:	mov	x20, #0x0                   	// #0
    2770:	ldp	x25, x26, [sp, #80]
    2774:	ldr	x27, [sp, #96]
    2778:	b	25d8 <PyThread_free_lock@plt+0xca8>
    277c:	mov	x0, x21
    2780:	bl	1720 <_Py_Dealloc@plt>
    2784:	ldr	x0, [x19, #104]
    2788:	b	2758 <PyThread_free_lock@plt+0xe28>
    278c:	bl	16c0 <PyMem_Free@plt>
    2790:	str	xzr, [x19, #120]
    2794:	ldr	x2, [x19, #136]
    2798:	mov	x0, x2
    279c:	bl	1920 <PyMem_Malloc@plt>
    27a0:	str	x0, [x19, #120]
    27a4:	cbz	x0, 27e4 <PyThread_free_lock@plt+0xeb4>
    27a8:	ldr	x2, [x19, #136]
    27ac:	str	x2, [x19, #128]
    27b0:	b	26ec <PyThread_free_lock@plt+0xdbc>
    27b4:	mov	x0, x20
    27b8:	mov	x20, #0x0                   	// #0
    27bc:	bl	1720 <_Py_Dealloc@plt>
    27c0:	ldp	x25, x26, [sp, #80]
    27c4:	ldr	x27, [sp, #96]
    27c8:	b	25d8 <PyThread_free_lock@plt+0xca8>
    27cc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    27d0:	ldr	x0, [x0, #4008]
    27d4:	ldr	x0, [x0]
    27d8:	bl	17a0 <PyErr_SetNone@plt>
    27dc:	ldp	x25, x26, [sp, #80]
    27e0:	b	25d8 <PyThread_free_lock@plt+0xca8>
    27e4:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    27e8:	ldr	x0, [x0, #4008]
    27ec:	ldr	x0, [x0]
    27f0:	bl	17a0 <PyErr_SetNone@plt>
    27f4:	b	275c <PyThread_free_lock@plt+0xe2c>
    27f8:	stp	x29, x30, [sp, #-128]!
    27fc:	mov	w2, #0x0                   	// #0
    2800:	mov	x29, sp
    2804:	stp	x21, x22, [sp, #32]
    2808:	add	x22, sp, #0x30
    280c:	mov	x21, #0x0                   	// #0
    2810:	stp	x19, x20, [sp, #16]
    2814:	mov	x20, x1
    2818:	mov	x19, x0
    281c:	mov	x0, x1
    2820:	mov	x1, x22
    2824:	stp	xzr, xzr, [sp, #48]
    2828:	stp	xzr, xzr, [sp, #64]
    282c:	stp	xzr, xzr, [sp, #80]
    2830:	stp	xzr, xzr, [sp, #96]
    2834:	stp	xzr, xzr, [sp, #112]
    2838:	bl	18a0 <PyObject_GetBuffer@plt>
    283c:	cbnz	w0, 2888 <PyThread_free_lock@plt+0xf58>
    2840:	mov	x0, x22
    2844:	mov	w1, #0x43                  	// #67
    2848:	bl	1700 <PyBuffer_IsContiguous@plt>
    284c:	cbz	w0, 28f0 <PyThread_free_lock@plt+0xfc0>
    2850:	ldr	x0, [x19, #104]
    2854:	mov	w1, #0x0                   	// #0
    2858:	bl	1740 <PyThread_acquire_lock@plt>
    285c:	cbz	w0, 28ac <PyThread_free_lock@plt+0xf7c>
    2860:	ldr	w0, [x19, #96]
    2864:	cbnz	w0, 28d0 <PyThread_free_lock@plt+0xfa0>
    2868:	ldr	x1, [sp, #48]
    286c:	mov	x0, x19
    2870:	ldr	x2, [sp, #64]
    2874:	mov	w3, #0x0                   	// #0
    2878:	bl	1fb0 <PyThread_free_lock@plt+0x680>
    287c:	mov	x21, x0
    2880:	ldr	x0, [x19, #104]
    2884:	bl	1890 <PyThread_release_lock@plt>
    2888:	ldr	x0, [sp, #56]
    288c:	cbz	x0, 2898 <PyThread_free_lock@plt+0xf68>
    2890:	mov	x0, x22
    2894:	bl	16d0 <PyBuffer_Release@plt>
    2898:	mov	x0, x21
    289c:	ldp	x19, x20, [sp, #16]
    28a0:	ldp	x21, x22, [sp, #32]
    28a4:	ldp	x29, x30, [sp], #128
    28a8:	ret
    28ac:	bl	18b0 <PyEval_SaveThread@plt>
    28b0:	mov	x20, x0
    28b4:	ldr	x0, [x19, #104]
    28b8:	mov	w1, #0x1                   	// #1
    28bc:	bl	1740 <PyThread_acquire_lock@plt>
    28c0:	mov	x0, x20
    28c4:	bl	16b0 <PyEval_RestoreThread@plt>
    28c8:	ldr	w0, [x19, #96]
    28cc:	cbz	w0, 2868 <PyThread_free_lock@plt+0xf38>
    28d0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106e8>
    28d4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    28d8:	mov	x21, #0x0                   	// #0
    28dc:	add	x1, x1, #0xc70
    28e0:	ldr	x0, [x0, #4016]
    28e4:	ldr	x0, [x0]
    28e8:	bl	1760 <PyErr_SetString@plt>
    28ec:	b	2880 <PyThread_free_lock@plt+0xf50>
    28f0:	mov	x3, x20
    28f4:	adrp	x2, 2000 <PyThread_free_lock@plt+0x6d0>
    28f8:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    28fc:	add	x2, x2, #0xbf8
    2900:	add	x1, x1, #0xc50
    2904:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    2908:	add	x0, x0, #0xc60
    290c:	bl	17e0 <_PyArg_BadArgument@plt>
    2910:	b	2888 <PyThread_free_lock@plt+0xf58>
    2914:	nop

0000000000002918 <PyInit__bz2@@Base>:
    2918:	stp	x29, x30, [sp, #-48]!
    291c:	mov	x29, sp
    2920:	stp	x19, x20, [sp, #16]
    2924:	stp	x21, x22, [sp, #32]
    2928:	adrp	x21, 14000 <PyInit__bz2@@Base+0x116e8>
    292c:	add	x20, x21, #0x168
    2930:	add	x22, x20, #0x1a0
    2934:	mov	x0, x22
    2938:	bl	17c0 <PyType_Ready@plt>
    293c:	tbnz	w0, #31, 29b8 <PyInit__bz2@@Base+0xa0>
    2940:	mov	x0, x20
    2944:	bl	17c0 <PyType_Ready@plt>
    2948:	tbnz	w0, #31, 29b8 <PyInit__bz2@@Base+0xa0>
    294c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116e8>
    2950:	add	x0, x0, #0x4a8
    2954:	add	x0, x0, #0x40
    2958:	mov	w1, #0x3f5                 	// #1013
    295c:	bl	1840 <PyModule_Create2@plt>
    2960:	mov	x19, x0
    2964:	cbz	x0, 29a4 <PyInit__bz2@@Base+0x8c>
    2968:	ldr	x3, [x20, #416]
    296c:	mov	x2, x22
    2970:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2974:	add	x1, x1, #0xb48
    2978:	add	x3, x3, #0x1
    297c:	str	x3, [x20, #416]
    2980:	bl	18c0 <PyModule_AddObject@plt>
    2984:	ldr	x3, [x21, #360]
    2988:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    298c:	mov	x2, x20
    2990:	add	x1, x1, #0xb20
    2994:	add	x3, x3, #0x1
    2998:	mov	x0, x19
    299c:	str	x3, [x21, #360]
    29a0:	bl	18c0 <PyModule_AddObject@plt>
    29a4:	mov	x0, x19
    29a8:	ldp	x19, x20, [sp, #16]
    29ac:	ldp	x21, x22, [sp, #32]
    29b0:	ldp	x29, x30, [sp], #48
    29b4:	ret
    29b8:	mov	x19, #0x0                   	// #0
    29bc:	mov	x0, x19
    29c0:	ldp	x19, x20, [sp, #16]
    29c4:	ldp	x21, x22, [sp, #32]
    29c8:	ldp	x29, x30, [sp], #48
    29cc:	ret

Disassembly of section .fini:

00000000000029d0 <.fini>:
    29d0:	stp	x29, x30, [sp, #-16]!
    29d4:	mov	x29, sp
    29d8:	ldp	x29, x30, [sp], #16
    29dc:	ret
