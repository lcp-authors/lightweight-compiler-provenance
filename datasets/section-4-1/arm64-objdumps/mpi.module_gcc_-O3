
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mpi.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_gcry_mpi_alloc>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	w20, w0
      10:	mov	x0, #0x18                  	// #24
      14:	bl	9a58 <gcry_xmalloc>
      18:	mov	x19, x0
      1c:	mov	x1, #0x0                   	// #0
      20:	cbnz	w20, 3c <_gcry_mpi_alloc+0x3c>
      24:	mov	x0, x19
      28:	stp	w20, wzr, [x19]
      2c:	stp	xzr, x1, [x19, #8]
      30:	ldp	x19, x20, [sp, #16]
      34:	ldp	x29, x30, [sp], #32
      38:	ret
      3c:	ubfiz	x0, x20, #3, #32
      40:	bl	9a58 <gcry_xmalloc>
      44:	mov	x1, x0
      48:	mov	x0, x19
      4c:	stp	w20, wzr, [x19]
      50:	stp	xzr, x1, [x19, #8]
      54:	ldp	x19, x20, [sp, #16]
      58:	ldp	x29, x30, [sp], #32
      5c:	ret

0000000000000060 <_gcry_mpi_m_check>:
      60:	stp	x29, x30, [sp, #-32]!
      64:	mov	x29, sp
      68:	str	x19, [sp, #16]
      6c:	mov	x19, x0
      70:	bl	9ab8 <_gcry_check_heap>
      74:	ldr	x0, [x19, #16]
      78:	ldr	x19, [sp, #16]
      7c:	ldp	x29, x30, [sp], #32
      80:	b	9ab8 <_gcry_check_heap>
      84:	nop

0000000000000088 <_gcry_mpi_alloc_secure>:
      88:	stp	x29, x30, [sp, #-32]!
      8c:	mov	x29, sp
      90:	stp	x19, x20, [sp, #16]
      94:	mov	w20, w0
      98:	mov	x0, #0x18                  	// #24
      9c:	bl	9a58 <gcry_xmalloc>
      a0:	mov	x19, x0
      a4:	mov	x1, #0x0                   	// #0
      a8:	cbnz	w20, c8 <_gcry_mpi_alloc_secure+0x40>
      ac:	mov	x0, x19
      b0:	mov	x2, #0x100000000           	// #4294967296
      b4:	stp	w20, wzr, [x19]
      b8:	stp	x2, x1, [x19, #8]
      bc:	ldp	x19, x20, [sp, #16]
      c0:	ldp	x29, x30, [sp], #32
      c4:	ret
      c8:	ubfiz	x0, x20, #3, #32
      cc:	bl	99f8 <gcry_xmalloc_secure>
      d0:	mov	x2, #0x100000000           	// #4294967296
      d4:	mov	x1, x0
      d8:	mov	x0, x19
      dc:	stp	w20, wzr, [x19]
      e0:	stp	x2, x1, [x19, #8]
      e4:	ldp	x19, x20, [sp, #16]
      e8:	ldp	x29, x30, [sp], #32
      ec:	ret

00000000000000f0 <_gcry_mpi_alloc_limb_space>:
      f0:	stp	x29, x30, [sp, #-32]!
      f4:	cmp	w0, #0x0
      f8:	mov	x2, #0x8                   	// #8
      fc:	mov	x29, sp
     100:	str	x19, [sp, #16]
     104:	mov	w19, w0
     108:	ubfiz	x0, x19, #3, #32
     10c:	csel	x0, x0, x2, ne  // ne = any
     110:	cbz	w1, 12c <_gcry_mpi_alloc_limb_space+0x3c>
     114:	bl	99f8 <gcry_xmalloc_secure>
     118:	cbnz	w19, 120 <_gcry_mpi_alloc_limb_space+0x30>
     11c:	str	xzr, [x0]
     120:	ldr	x19, [sp, #16]
     124:	ldp	x29, x30, [sp], #32
     128:	ret
     12c:	bl	9a58 <gcry_xmalloc>
     130:	b	118 <_gcry_mpi_alloc_limb_space+0x28>
     134:	nop

0000000000000138 <_gcry_mpi_free_limb_space>:
     138:	cbz	x0, 160 <_gcry_mpi_free_limb_space+0x28>
     13c:	ubfiz	x2, x1, #3, #32
     140:	cbz	x2, 15c <_gcry_mpi_free_limb_space+0x24>
     144:	add	x2, x0, x2
     148:	mov	x1, x0
     14c:	nop
     150:	strb	wzr, [x1], #1
     154:	cmp	x2, x1
     158:	b.ne	150 <_gcry_mpi_free_limb_space+0x18>  // b.any
     15c:	b	99b8 <gcry_free>
     160:	ret
     164:	nop

0000000000000168 <_gcry_mpi_assign_limb_space>:
     168:	stp	x29, x30, [sp, #-48]!
     16c:	mov	x29, sp
     170:	stp	x19, x20, [sp, #16]
     174:	mov	x19, x0
     178:	mov	x20, x1
     17c:	ldr	x0, [x0, #16]
     180:	str	x21, [sp, #32]
     184:	mov	w21, w2
     188:	cbz	x0, 1b0 <_gcry_mpi_assign_limb_space+0x48>
     18c:	ldr	w1, [x19]
     190:	lsl	x2, x1, #3
     194:	cbz	x1, 1ac <_gcry_mpi_assign_limb_space+0x44>
     198:	add	x2, x0, x2
     19c:	mov	x1, x0
     1a0:	strb	wzr, [x1], #1
     1a4:	cmp	x1, x2
     1a8:	b.ne	1a0 <_gcry_mpi_assign_limb_space+0x38>  // b.any
     1ac:	bl	99b8 <gcry_free>
     1b0:	str	w21, [x19]
     1b4:	str	x20, [x19, #16]
     1b8:	ldp	x19, x20, [sp, #16]
     1bc:	ldr	x21, [sp, #32]
     1c0:	ldp	x29, x30, [sp], #48
     1c4:	ret

00000000000001c8 <_gcry_mpi_resize>:
     1c8:	stp	x29, x30, [sp, #-48]!
     1cc:	mov	x29, sp
     1d0:	stp	x19, x20, [sp, #16]
     1d4:	mov	x19, x0
     1d8:	ldr	w0, [x0]
     1dc:	cmp	w0, w1
     1e0:	b.cs	2f8 <_gcry_mpi_resize+0x130>  // b.hs, b.nlast
     1e4:	ldr	x0, [x19, #16]
     1e8:	str	x21, [sp, #32]
     1ec:	mov	w20, w1
     1f0:	mov	w21, w1
     1f4:	cbz	x0, 2dc <_gcry_mpi_resize+0x114>
     1f8:	lsl	x1, x21, #3
     1fc:	bl	9a88 <gcry_xrealloc>
     200:	ldrsw	x2, [x19]
     204:	str	x0, [x19, #16]
     208:	cmp	x2, x21
     20c:	b.cs	2c8 <_gcry_mpi_resize+0x100>  // b.hs, b.nlast
     210:	lsl	x5, x2, #3
     214:	sub	x1, x21, #0x1
     218:	add	x3, x0, x5
     21c:	sub	x1, x1, x2
     220:	cmp	x1, #0x5
     224:	sub	x4, x21, x2
     228:	ubfx	x1, x3, #3, #1
     22c:	b.ls	274 <_gcry_mpi_resize+0xac>  // b.plast
     230:	mov	x6, x2
     234:	cbz	x1, 240 <_gcry_mpi_resize+0x78>
     238:	add	x6, x2, #0x1
     23c:	str	xzr, [x0, x5]
     240:	sub	x3, x4, x1
     244:	add	x2, x2, x1
     248:	lsr	x1, x3, #1
     24c:	add	x2, x0, x2, lsl #3
     250:	add	x1, x2, x1, lsl #4
     254:	nop
     258:	stp	xzr, xzr, [x2], #16
     25c:	cmp	x2, x1
     260:	b.ne	258 <_gcry_mpi_resize+0x90>  // b.any
     264:	and	x1, x3, #0xfffffffffffffffe
     268:	add	x2, x6, x1
     26c:	cmp	x3, x1
     270:	b.eq	2c8 <_gcry_mpi_resize+0x100>  // b.none
     274:	str	xzr, [x0, x2, lsl #3]
     278:	add	x1, x2, #0x1
     27c:	cmp	x21, x1
     280:	b.ls	2c8 <_gcry_mpi_resize+0x100>  // b.plast
     284:	str	xzr, [x0, x1, lsl #3]
     288:	add	x1, x2, #0x2
     28c:	cmp	x21, x1
     290:	b.ls	2c8 <_gcry_mpi_resize+0x100>  // b.plast
     294:	str	xzr, [x0, x1, lsl #3]
     298:	add	x1, x2, #0x3
     29c:	cmp	x21, x1
     2a0:	b.ls	2c8 <_gcry_mpi_resize+0x100>  // b.plast
     2a4:	str	xzr, [x0, x1, lsl #3]
     2a8:	add	x1, x2, #0x4
     2ac:	cmp	x21, x1
     2b0:	b.ls	2c8 <_gcry_mpi_resize+0x100>  // b.plast
     2b4:	str	xzr, [x0, x1, lsl #3]
     2b8:	add	x2, x2, #0x5
     2bc:	cmp	x21, x2
     2c0:	b.ls	2c8 <_gcry_mpi_resize+0x100>  // b.plast
     2c4:	str	xzr, [x0, x2, lsl #3]
     2c8:	ldr	x21, [sp, #32]
     2cc:	str	w20, [x19]
     2d0:	ldp	x19, x20, [sp, #16]
     2d4:	ldp	x29, x30, [sp], #48
     2d8:	ret
     2dc:	ldr	w0, [x19, #12]
     2e0:	tbz	w0, #0, 3cc <_gcry_mpi_resize+0x204>
     2e4:	mov	x0, x21
     2e8:	mov	x1, #0x8                   	// #8
     2ec:	bl	9a28 <gcry_xcalloc_secure>
     2f0:	str	x0, [x19, #16]
     2f4:	b	2c8 <_gcry_mpi_resize+0x100>
     2f8:	ldrsw	x1, [x19, #4]
     2fc:	sxtw	x4, w0
     300:	cmp	x1, w0, sxtw
     304:	b.cs	2d0 <_gcry_mpi_resize+0x108>  // b.hs, b.nlast
     308:	ldr	x2, [x19, #16]
     30c:	lsl	x6, x1, #3
     310:	sub	x3, x4, #0x1
     314:	sub	x5, x4, x1
     318:	add	x0, x2, x6
     31c:	sub	x3, x3, x1
     320:	cmp	x3, #0x5
     324:	ubfx	x0, x0, #3, #1
     328:	b.ls	36c <_gcry_mpi_resize+0x1a4>  // b.plast
     32c:	mov	x7, x1
     330:	cbz	x0, 33c <_gcry_mpi_resize+0x174>
     334:	add	x7, x1, #0x1
     338:	str	xzr, [x2, x6]
     33c:	sub	x3, x5, x0
     340:	add	x0, x0, x1
     344:	lsr	x1, x3, #1
     348:	add	x0, x2, x0, lsl #3
     34c:	add	x1, x0, x1, lsl #4
     350:	stp	xzr, xzr, [x0], #16
     354:	cmp	x0, x1
     358:	b.ne	350 <_gcry_mpi_resize+0x188>  // b.any
     35c:	and	x0, x3, #0xfffffffffffffffe
     360:	add	x1, x7, x0
     364:	cmp	x3, x0
     368:	b.eq	2d0 <_gcry_mpi_resize+0x108>  // b.none
     36c:	str	xzr, [x2, x1, lsl #3]
     370:	add	x0, x1, #0x1
     374:	cmp	x0, x4
     378:	b.cs	2d0 <_gcry_mpi_resize+0x108>  // b.hs, b.nlast
     37c:	str	xzr, [x2, x0, lsl #3]
     380:	add	x0, x1, #0x2
     384:	cmp	x4, x0
     388:	b.ls	2d0 <_gcry_mpi_resize+0x108>  // b.plast
     38c:	str	xzr, [x2, x0, lsl #3]
     390:	add	x0, x1, #0x3
     394:	cmp	x4, x0
     398:	b.ls	2d0 <_gcry_mpi_resize+0x108>  // b.plast
     39c:	str	xzr, [x2, x0, lsl #3]
     3a0:	add	x0, x1, #0x4
     3a4:	cmp	x4, x0
     3a8:	b.ls	2d0 <_gcry_mpi_resize+0x108>  // b.plast
     3ac:	str	xzr, [x2, x0, lsl #3]
     3b0:	add	x0, x1, #0x5
     3b4:	cmp	x4, x0
     3b8:	b.ls	2d0 <_gcry_mpi_resize+0x108>  // b.plast
     3bc:	str	xzr, [x2, x0, lsl #3]
     3c0:	ldp	x19, x20, [sp, #16]
     3c4:	ldp	x29, x30, [sp], #48
     3c8:	ret
     3cc:	mov	x0, x21
     3d0:	mov	x1, #0x8                   	// #8
     3d4:	bl	99c8 <gcry_xcalloc>
     3d8:	str	x0, [x19, #16]
     3dc:	b	2c8 <_gcry_mpi_resize+0x100>

00000000000003e0 <_gcry_mpi_clear>:
     3e0:	str	wzr, [x0, #4]
     3e4:	str	wzr, [x0, #12]
     3e8:	ret
     3ec:	nop

00000000000003f0 <_gcry_mpi_free>:
     3f0:	cbz	x0, 458 <_gcry_mpi_free+0x68>
     3f4:	stp	x29, x30, [sp, #-32]!
     3f8:	mov	x29, sp
     3fc:	ldr	w1, [x0, #12]
     400:	str	x19, [sp, #16]
     404:	mov	x19, x0
     408:	ldr	x0, [x0, #16]
     40c:	tbz	w1, #2, 430 <_gcry_mpi_free+0x40>
     410:	bl	99b8 <gcry_free>
     414:	ldr	w1, [x19, #12]
     418:	tst	w1, #0xfffffff8
     41c:	b.ne	45c <_gcry_mpi_free+0x6c>  // b.any
     420:	mov	x0, x19
     424:	ldr	x19, [sp, #16]
     428:	ldp	x29, x30, [sp], #32
     42c:	b	99b8 <gcry_free>
     430:	cbz	x0, 418 <_gcry_mpi_free+0x28>
     434:	ldr	w1, [x19]
     438:	lsl	x2, x1, #3
     43c:	cbz	x1, 410 <_gcry_mpi_free+0x20>
     440:	add	x2, x0, x2
     444:	mov	x1, x0
     448:	strb	wzr, [x1], #1
     44c:	cmp	x1, x2
     450:	b.ne	448 <_gcry_mpi_free+0x58>  // b.any
     454:	b	410 <_gcry_mpi_free+0x20>
     458:	ret
     45c:	adrp	x0, 0 <_gcry_mpi_alloc>
     460:	ldr	x0, [x0]
     464:	bl	9b98 <_gcry_log_bug>
	...

0000000000000470 <gcry_mpi_set_opaque>:
     470:	stp	x29, x30, [sp, #-48]!
     474:	mov	x29, sp
     478:	stp	x19, x20, [sp, #16]
     47c:	mov	x20, x1
     480:	str	x21, [sp, #32]
     484:	mov	w21, w2
     488:	cbz	x0, 4f0 <gcry_mpi_set_opaque+0x80>
     48c:	ldr	w1, [x0, #12]
     490:	mov	x19, x0
     494:	ldr	x0, [x0, #16]
     498:	tbz	w1, #2, 4c4 <gcry_mpi_set_opaque+0x54>
     49c:	bl	99b8 <gcry_free>
     4a0:	mov	x0, x19
     4a4:	mov	w1, #0x4                   	// #4
     4a8:	str	xzr, [x0]
     4ac:	stp	w21, w1, [x0, #8]
     4b0:	str	x20, [x0, #16]
     4b4:	ldp	x19, x20, [sp, #16]
     4b8:	ldr	x21, [sp, #32]
     4bc:	ldp	x29, x30, [sp], #48
     4c0:	ret
     4c4:	ldr	w2, [x19]
     4c8:	cbz	x0, 520 <gcry_mpi_set_opaque+0xb0>
     4cc:	ubfiz	x2, x2, #3, #32
     4d0:	cbz	x2, 49c <gcry_mpi_set_opaque+0x2c>
     4d4:	add	x2, x0, x2
     4d8:	mov	x1, x0
     4dc:	nop
     4e0:	strb	wzr, [x1], #1
     4e4:	cmp	x2, x1
     4e8:	b.ne	4e0 <gcry_mpi_set_opaque+0x70>  // b.any
     4ec:	b	49c <gcry_mpi_set_opaque+0x2c>
     4f0:	mov	x0, #0x18                  	// #24
     4f4:	bl	9a58 <gcry_xmalloc>
     4f8:	stp	xzr, xzr, [x0]
     4fc:	mov	w1, #0x4                   	// #4
     500:	str	xzr, [x0, #16]
     504:	str	xzr, [x0]
     508:	stp	w21, w1, [x0, #8]
     50c:	str	x20, [x0, #16]
     510:	ldp	x19, x20, [sp, #16]
     514:	ldr	x21, [sp, #32]
     518:	ldp	x29, x30, [sp], #48
     51c:	ret
     520:	mov	x0, x19
     524:	b	4a4 <gcry_mpi_set_opaque+0x34>

0000000000000528 <gcry_mpi_get_opaque>:
     528:	ldr	w2, [x0, #12]
     52c:	tbz	w2, #2, 544 <gcry_mpi_get_opaque+0x1c>
     530:	cbz	x1, 53c <gcry_mpi_get_opaque+0x14>
     534:	ldr	w2, [x0, #8]
     538:	str	w2, [x1]
     53c:	ldr	x0, [x0, #16]
     540:	ret
     544:	stp	x29, x30, [sp, #-16]!
     548:	adrp	x0, 0 <_gcry_mpi_alloc>
     54c:	mov	x29, sp
     550:	ldr	x0, [x0]
     554:	bl	9b98 <_gcry_log_bug>
	...

0000000000000560 <_gcry_mpi_copy>:
     560:	stp	x29, x30, [sp, #-48]!
     564:	mov	x29, sp
     568:	stp	x19, x20, [sp, #16]
     56c:	mov	x19, #0x0                   	// #0
     570:	cbz	x0, 5fc <_gcry_mpi_copy+0x9c>
     574:	mov	x20, x0
     578:	ldr	w0, [x0, #12]
     57c:	str	x21, [sp, #32]
     580:	tbz	w0, #2, 60c <_gcry_mpi_copy+0xac>
     584:	ldr	x0, [x20, #16]
     588:	bl	99c0 <gcry_is_secure>
     58c:	ldr	w2, [x20, #8]
     590:	add	w1, w2, #0xe
     594:	adds	w2, w2, #0x7
     598:	csel	w1, w1, w2, mi  // mi = first
     59c:	asr	w1, w1, #3
     5a0:	sxtw	x1, w1
     5a4:	cbnz	w0, 6fc <_gcry_mpi_copy+0x19c>
     5a8:	mov	x0, x1
     5ac:	bl	9a58 <gcry_xmalloc>
     5b0:	mov	x21, x0
     5b4:	ldr	w3, [x20, #8]
     5b8:	mov	x0, x21
     5bc:	ldr	x1, [x20, #16]
     5c0:	add	w2, w3, #0xe
     5c4:	adds	w3, w3, #0x7
     5c8:	csel	w2, w2, w3, mi  // mi = first
     5cc:	asr	w2, w2, #3
     5d0:	sxtw	x2, w2
     5d4:	bl	0 <grub_memmove>
     5d8:	mov	x0, #0x18                  	// #24
     5dc:	ldr	w20, [x20, #8]
     5e0:	bl	9a58 <gcry_xmalloc>
     5e4:	mov	x19, x0
     5e8:	mov	w0, #0x4                   	// #4
     5ec:	str	x21, [x19, #16]
     5f0:	ldr	x21, [sp, #32]
     5f4:	str	xzr, [x19]
     5f8:	stp	w20, w0, [x19, #8]
     5fc:	mov	x0, x19
     600:	ldp	x19, x20, [sp, #16]
     604:	ldp	x29, x30, [sp], #48
     608:	ret
     60c:	ldr	w21, [x20, #4]
     610:	tbz	w0, #0, 6bc <_gcry_mpi_copy+0x15c>
     614:	mov	x0, #0x18                  	// #24
     618:	bl	9a58 <gcry_xmalloc>
     61c:	mov	x2, #0x0                   	// #0
     620:	mov	x19, x0
     624:	cbnz	w21, 70c <_gcry_mpi_copy+0x1ac>
     628:	mov	x0, #0x100000000           	// #4294967296
     62c:	stp	w21, wzr, [x19]
     630:	stp	x0, x2, [x19, #8]
     634:	ldr	w7, [x20, #4]
     638:	ldr	x0, [x20, #8]
     63c:	str	w7, [x19, #4]
     640:	str	x0, [x19, #8]
     644:	cmp	w7, #0x0
     648:	b.le	6f4 <_gcry_mpi_copy+0x194>
     64c:	ldr	x0, [x20, #16]
     650:	sub	w3, w7, #0x1
     654:	add	x4, x0, #0xf
     658:	orr	x1, x2, x0
     65c:	sub	x4, x4, x2
     660:	and	x1, x1, #0xf
     664:	cmp	x4, #0x1e
     668:	ccmp	w3, #0xb, #0x0, hi  // hi = pmore
     66c:	ccmp	x1, #0x0, #0x0, hi  // hi = pmore
     670:	b.ne	6dc <_gcry_mpi_copy+0x17c>  // b.any
     674:	lsr	w6, w7, #1
     678:	mov	x1, x2
     67c:	mov	x3, x0
     680:	add	x6, x2, w6, uxtw #4
     684:	nop
     688:	ldp	x4, x5, [x3], #16
     68c:	stp	x4, x5, [x1], #16
     690:	cmp	x1, x6
     694:	b.ne	688 <_gcry_mpi_copy+0x128>  // b.any
     698:	and	w1, w7, #0xfffffffe
     69c:	tbz	w7, #0, 6f4 <_gcry_mpi_copy+0x194>
     6a0:	ldr	x0, [x0, x1, lsl #3]
     6a4:	str	x0, [x2, x1, lsl #3]
     6a8:	mov	x0, x19
     6ac:	ldp	x19, x20, [sp, #16]
     6b0:	ldr	x21, [sp, #32]
     6b4:	ldp	x29, x30, [sp], #48
     6b8:	ret
     6bc:	mov	x0, #0x18                  	// #24
     6c0:	bl	9a58 <gcry_xmalloc>
     6c4:	mov	x2, #0x0                   	// #0
     6c8:	mov	x19, x0
     6cc:	cbnz	w21, 71c <_gcry_mpi_copy+0x1bc>
     6d0:	stp	w21, wzr, [x19]
     6d4:	stp	xzr, x2, [x19, #8]
     6d8:	b	634 <_gcry_mpi_copy+0xd4>
     6dc:	mov	x1, #0x0                   	// #0
     6e0:	ldr	x3, [x0, x1, lsl #3]
     6e4:	str	x3, [x2, x1, lsl #3]
     6e8:	add	x1, x1, #0x1
     6ec:	cmp	w7, w1
     6f0:	b.gt	6e0 <_gcry_mpi_copy+0x180>
     6f4:	ldr	x21, [sp, #32]
     6f8:	b	5fc <_gcry_mpi_copy+0x9c>
     6fc:	mov	x0, x1
     700:	bl	99f8 <gcry_xmalloc_secure>
     704:	mov	x21, x0
     708:	b	5b4 <_gcry_mpi_copy+0x54>
     70c:	ubfiz	x0, x21, #3, #32
     710:	bl	99f8 <gcry_xmalloc_secure>
     714:	mov	x2, x0
     718:	b	628 <_gcry_mpi_copy+0xc8>
     71c:	ubfiz	x0, x21, #3, #32
     720:	bl	9a58 <gcry_xmalloc>
     724:	mov	x2, x0
     728:	b	6d0 <_gcry_mpi_copy+0x170>
     72c:	nop

0000000000000730 <_gcry_mpi_alloc_like>:
     730:	stp	x29, x30, [sp, #-48]!
     734:	mov	x29, sp
     738:	stp	x19, x20, [sp, #16]
     73c:	mov	x19, #0x0                   	// #0
     740:	cbz	x0, 7b8 <_gcry_mpi_alloc_like+0x88>
     744:	mov	x20, x0
     748:	ldr	w0, [x0, #12]
     74c:	str	x21, [sp, #32]
     750:	tbz	w0, #2, 7c8 <_gcry_mpi_alloc_like+0x98>
     754:	ldr	x0, [x20, #16]
     758:	bl	99c0 <gcry_is_secure>
     75c:	ldr	w1, [x20, #8]
     760:	add	w19, w1, #0xe
     764:	adds	w1, w1, #0x7
     768:	csel	w19, w19, w1, mi  // mi = first
     76c:	asr	w19, w19, #3
     770:	sxtw	x19, w19
     774:	cbnz	w0, 830 <_gcry_mpi_alloc_like+0x100>
     778:	mov	x0, x19
     77c:	bl	99a8 <gcry_malloc>
     780:	mov	x21, x0
     784:	ldr	x1, [x20, #16]
     788:	mov	x2, x19
     78c:	mov	x0, x21
     790:	bl	0 <grub_memmove>
     794:	ldr	w20, [x20, #8]
     798:	mov	x0, #0x18                  	// #24
     79c:	bl	9a58 <gcry_xmalloc>
     7a0:	str	x21, [x0, #16]
     7a4:	mov	x19, x0
     7a8:	ldr	x21, [sp, #32]
     7ac:	mov	w1, #0x4                   	// #4
     7b0:	str	xzr, [x0]
     7b4:	stp	w20, w1, [x0, #8]
     7b8:	mov	x0, x19
     7bc:	ldp	x19, x20, [sp, #16]
     7c0:	ldp	x29, x30, [sp], #48
     7c4:	ret
     7c8:	ldr	w21, [x20, #4]
     7cc:	tbz	w0, #0, 810 <_gcry_mpi_alloc_like+0xe0>
     7d0:	mov	x0, #0x18                  	// #24
     7d4:	bl	9a58 <gcry_xmalloc>
     7d8:	mov	x1, #0x0                   	// #0
     7dc:	mov	x19, x0
     7e0:	cbnz	w21, 840 <_gcry_mpi_alloc_like+0x110>
     7e4:	mov	x0, #0x100000000           	// #4294967296
     7e8:	stp	w21, wzr, [x19]
     7ec:	stp	x0, x1, [x19, #8]
     7f0:	ldr	w0, [x20, #12]
     7f4:	ldr	x21, [sp, #32]
     7f8:	stur	xzr, [x19, #4]
     7fc:	str	w0, [x19, #12]
     800:	mov	x0, x19
     804:	ldp	x19, x20, [sp, #16]
     808:	ldp	x29, x30, [sp], #48
     80c:	ret
     810:	mov	x0, #0x18                  	// #24
     814:	bl	9a58 <gcry_xmalloc>
     818:	mov	x1, #0x0                   	// #0
     81c:	mov	x19, x0
     820:	cbnz	w21, 850 <_gcry_mpi_alloc_like+0x120>
     824:	stp	w21, wzr, [x19]
     828:	stp	xzr, x1, [x19, #8]
     82c:	b	7f0 <_gcry_mpi_alloc_like+0xc0>
     830:	mov	x0, x19
     834:	bl	99b0 <gcry_malloc_secure>
     838:	mov	x21, x0
     83c:	b	784 <_gcry_mpi_alloc_like+0x54>
     840:	ubfiz	x0, x21, #3, #32
     844:	bl	99f8 <gcry_xmalloc_secure>
     848:	mov	x1, x0
     84c:	b	7e4 <_gcry_mpi_alloc_like+0xb4>
     850:	ubfiz	x0, x21, #3, #32
     854:	bl	9a58 <gcry_xmalloc>
     858:	mov	x1, x0
     85c:	b	824 <_gcry_mpi_alloc_like+0xf4>

0000000000000860 <gcry_mpi_set>:
     860:	stp	x29, x30, [sp, #-64]!
     864:	mov	x29, sp
     868:	stp	x19, x20, [sp, #16]
     86c:	mov	x20, x1
     870:	ldr	w19, [x1, #4]
     874:	stp	x21, x22, [sp, #32]
     878:	mov	x21, x0
     87c:	str	x23, [sp, #48]
     880:	ldur	x23, [x1, #4]
     884:	cbz	x0, 958 <gcry_mpi_set+0xf8>
     888:	ldr	w1, [x0]
     88c:	cmp	w1, w19
     890:	b.lt	924 <gcry_mpi_set+0xc4>  // b.tstop
     894:	ldr	x4, [x0, #16]
     898:	mov	x22, x0
     89c:	cmp	w19, #0x0
     8a0:	ldr	x3, [x20, #16]
     8a4:	b.le	900 <gcry_mpi_set+0xa0>
     8a8:	add	x2, x3, #0xf
     8ac:	sub	w0, w19, #0x1
     8b0:	sub	x2, x2, x4
     8b4:	orr	x1, x4, x3
     8b8:	cmp	x2, #0x1e
     8bc:	and	x1, x1, #0xf
     8c0:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
     8c4:	ccmp	x1, #0x0, #0x0, hi  // hi = pmore
     8c8:	b.ne	938 <gcry_mpi_set+0xd8>  // b.any
     8cc:	lsr	w8, w19, #1
     8d0:	mov	x2, x3
     8d4:	mov	x5, x4
     8d8:	add	x8, x3, w8, uxtw #4
     8dc:	nop
     8e0:	ldp	x6, x7, [x2], #16
     8e4:	stp	x6, x7, [x5], #16
     8e8:	cmp	x2, x8
     8ec:	b.ne	8e0 <gcry_mpi_set+0x80>  // b.any
     8f0:	and	w2, w19, #0xfffffffe
     8f4:	tbz	w19, #0, 900 <gcry_mpi_set+0xa0>
     8f8:	ldr	x3, [x3, x2, lsl #3]
     8fc:	str	x3, [x4, x2, lsl #3]
     900:	ldr	w0, [x20, #12]
     904:	ldp	x19, x20, [sp, #16]
     908:	stur	x23, [x22, #4]
     90c:	str	w0, [x22, #12]
     910:	mov	x0, x22
     914:	ldp	x21, x22, [sp, #32]
     918:	ldr	x23, [sp, #48]
     91c:	ldp	x29, x30, [sp], #64
     920:	ret
     924:	mov	w1, w19
     928:	bl	1c8 <_gcry_mpi_resize>
     92c:	mov	x22, x21
     930:	ldr	x4, [x21, #16]
     934:	b	89c <gcry_mpi_set+0x3c>
     938:	mov	x2, #0x0                   	// #0
     93c:	nop
     940:	ldr	x0, [x3, x2, lsl #3]
     944:	str	x0, [x4, x2, lsl #3]
     948:	add	x2, x2, #0x1
     94c:	cmp	w19, w2
     950:	b.gt	940 <gcry_mpi_set+0xe0>
     954:	b	900 <gcry_mpi_set+0xa0>
     958:	mov	x0, #0x18                  	// #24
     95c:	bl	9a58 <gcry_xmalloc>
     960:	mov	x22, x0
     964:	cbnz	w19, 978 <gcry_mpi_set+0x118>
     968:	mov	x4, x21
     96c:	stp	w19, wzr, [x22]
     970:	stp	xzr, x21, [x22, #8]
     974:	b	89c <gcry_mpi_set+0x3c>
     978:	ubfiz	x0, x19, #3, #32
     97c:	bl	9a58 <gcry_xmalloc>
     980:	mov	x21, x0
     984:	b	968 <gcry_mpi_set+0x108>

0000000000000988 <gcry_mpi_set_ui>:
     988:	stp	x29, x30, [sp, #-48]!
     98c:	mov	x29, sp
     990:	stp	x19, x20, [sp, #16]
     994:	mov	x20, x1
     998:	str	x21, [sp, #32]
     99c:	cbz	x0, 9f4 <gcry_mpi_set_ui+0x6c>
     9a0:	ldr	w1, [x0]
     9a4:	mov	x19, x0
     9a8:	cmp	w1, #0x0
     9ac:	b.le	9e0 <gcry_mpi_set_ui+0x58>
     9b0:	mov	x21, x0
     9b4:	ldr	x0, [x0, #16]
     9b8:	cmp	x20, #0x0
     9bc:	str	x20, [x0]
     9c0:	cset	w1, ne  // ne = any
     9c4:	str	w1, [x21, #4]
     9c8:	mov	x0, x21
     9cc:	str	xzr, [x21, #8]
     9d0:	ldp	x19, x20, [sp, #16]
     9d4:	ldr	x21, [sp, #32]
     9d8:	ldp	x29, x30, [sp], #48
     9dc:	ret
     9e0:	mov	w1, #0x1                   	// #1
     9e4:	bl	1c8 <_gcry_mpi_resize>
     9e8:	mov	x21, x19
     9ec:	ldr	x0, [x19, #16]
     9f0:	b	9b8 <gcry_mpi_set_ui+0x30>
     9f4:	mov	x0, #0x18                  	// #24
     9f8:	bl	9a58 <gcry_xmalloc>
     9fc:	mov	x21, x0
     a00:	mov	x0, #0x8                   	// #8
     a04:	bl	9a58 <gcry_xmalloc>
     a08:	mov	x1, #0x1                   	// #1
     a0c:	stp	x1, xzr, [x21]
     a10:	str	x0, [x21, #16]
     a14:	b	9b8 <gcry_mpi_set_ui+0x30>

0000000000000a18 <_gcry_mpi_get_ui>:
     a18:	ldr	w2, [x0, #4]
     a1c:	cmp	w2, #0x1
     a20:	b.gt	a38 <_gcry_mpi_get_ui+0x20>
     a24:	mov	x2, #0x0                   	// #0
     a28:	b.eq	a40 <_gcry_mpi_get_ui+0x28>  // b.none
     a2c:	mov	w0, #0x0                   	// #0
     a30:	str	x2, [x1]
     a34:	ret
     a38:	mov	w0, #0x23                  	// #35
     a3c:	ret
     a40:	ldr	x0, [x0, #16]
     a44:	ldr	x2, [x0]
     a48:	mov	w0, #0x0                   	// #0
     a4c:	str	x2, [x1]
     a50:	b	a34 <_gcry_mpi_get_ui+0x1c>
     a54:	nop

0000000000000a58 <gcry_mpi_get_ui>:
     a58:	ldr	w2, [x0, #4]
     a5c:	cmp	w2, #0x1
     a60:	b.gt	a78 <gcry_mpi_get_ui+0x20>
     a64:	mov	x2, #0x0                   	// #0
     a68:	b.eq	a80 <gcry_mpi_get_ui+0x28>  // b.none
     a6c:	mov	w0, #0x0                   	// #0
     a70:	str	x2, [x1]
     a74:	ret
     a78:	mov	w0, #0x23                  	// #35
     a7c:	ret
     a80:	ldr	x0, [x0, #16]
     a84:	ldr	x2, [x0]
     a88:	mov	w0, #0x0                   	// #0
     a8c:	str	x2, [x1]
     a90:	b	a74 <gcry_mpi_get_ui+0x1c>
     a94:	nop

0000000000000a98 <_gcry_mpi_alloc_set_ui>:
     a98:	stp	x29, x30, [sp, #-32]!
     a9c:	mov	x29, sp
     aa0:	stp	x19, x20, [sp, #16]
     aa4:	mov	x20, x0
     aa8:	mov	x0, #0x18                  	// #24
     aac:	bl	9a58 <gcry_xmalloc>
     ab0:	mov	x19, x0
     ab4:	mov	x0, #0x8                   	// #8
     ab8:	bl	9a58 <gcry_xmalloc>
     abc:	mov	x1, x0
     ac0:	cmp	x20, #0x0
     ac4:	cset	w2, ne  // ne = any
     ac8:	mov	w3, #0x1                   	// #1
     acc:	stp	w3, w2, [x19]
     ad0:	mov	x0, x19
     ad4:	str	x20, [x1]
     ad8:	stp	xzr, x1, [x19, #8]
     adc:	ldp	x19, x20, [sp, #16]
     ae0:	ldp	x29, x30, [sp], #32
     ae4:	ret

0000000000000ae8 <gcry_mpi_swap>:
     ae8:	ldp	x2, x3, [x1]
     aec:	sub	sp, sp, #0x20
     af0:	ldp	x4, x5, [x0]
     af4:	stp	x2, x3, [x0]
     af8:	ldr	x3, [x1, #16]
     afc:	ldr	x2, [x0, #16]
     b00:	str	x3, [x0, #16]
     b04:	stp	x4, x5, [x1]
     b08:	str	x2, [x1, #16]
     b0c:	add	sp, sp, #0x20
     b10:	ret
     b14:	nop

0000000000000b18 <gcry_mpi_new>:
     b18:	stp	x29, x30, [sp, #-32]!
     b1c:	mov	x29, sp
     b20:	stp	x19, x20, [sp, #16]
     b24:	mov	w20, w0
     b28:	add	w20, w20, #0x3f
     b2c:	mov	x0, #0x18                  	// #24
     b30:	bl	9a58 <gcry_xmalloc>
     b34:	lsr	w20, w20, #6
     b38:	mov	x19, x0
     b3c:	mov	x1, #0x0                   	// #0
     b40:	cbnz	w20, b5c <gcry_mpi_new+0x44>
     b44:	mov	x0, x19
     b48:	stp	w20, wzr, [x19]
     b4c:	stp	xzr, x1, [x19, #8]
     b50:	ldp	x19, x20, [sp, #16]
     b54:	ldp	x29, x30, [sp], #32
     b58:	ret
     b5c:	ubfiz	x0, x20, #3, #26
     b60:	bl	9a58 <gcry_xmalloc>
     b64:	mov	x1, x0
     b68:	mov	x0, x19
     b6c:	stp	w20, wzr, [x19]
     b70:	stp	xzr, x1, [x19, #8]
     b74:	ldp	x19, x20, [sp, #16]
     b78:	ldp	x29, x30, [sp], #32
     b7c:	ret

0000000000000b80 <gcry_mpi_snew>:
     b80:	stp	x29, x30, [sp, #-32]!
     b84:	mov	x29, sp
     b88:	stp	x19, x20, [sp, #16]
     b8c:	mov	w20, w0
     b90:	add	w20, w20, #0x3f
     b94:	mov	x0, #0x18                  	// #24
     b98:	bl	9a58 <gcry_xmalloc>
     b9c:	lsr	w20, w20, #6
     ba0:	mov	x19, x0
     ba4:	mov	x1, #0x0                   	// #0
     ba8:	cbnz	w20, bc8 <gcry_mpi_snew+0x48>
     bac:	mov	x0, x19
     bb0:	mov	x2, #0x100000000           	// #4294967296
     bb4:	stp	w20, wzr, [x19]
     bb8:	stp	x2, x1, [x19, #8]
     bbc:	ldp	x19, x20, [sp, #16]
     bc0:	ldp	x29, x30, [sp], #32
     bc4:	ret
     bc8:	ubfiz	x0, x20, #3, #26
     bcc:	bl	99f8 <gcry_xmalloc_secure>
     bd0:	mov	x2, #0x100000000           	// #4294967296
     bd4:	mov	x1, x0
     bd8:	mov	x0, x19
     bdc:	stp	w20, wzr, [x19]
     be0:	stp	x2, x1, [x19, #8]
     be4:	ldp	x19, x20, [sp, #16]
     be8:	ldp	x29, x30, [sp], #32
     bec:	ret

0000000000000bf0 <gcry_mpi_release>:
     bf0:	cbz	x0, c58 <gcry_mpi_release+0x68>
     bf4:	stp	x29, x30, [sp, #-32]!
     bf8:	mov	x29, sp
     bfc:	ldr	w1, [x0, #12]
     c00:	str	x19, [sp, #16]
     c04:	mov	x19, x0
     c08:	ldr	x0, [x0, #16]
     c0c:	tbz	w1, #2, c30 <gcry_mpi_release+0x40>
     c10:	bl	99b8 <gcry_free>
     c14:	ldr	w1, [x19, #12]
     c18:	tst	w1, #0xfffffff8
     c1c:	b.ne	c5c <gcry_mpi_release+0x6c>  // b.any
     c20:	mov	x0, x19
     c24:	ldr	x19, [sp, #16]
     c28:	ldp	x29, x30, [sp], #32
     c2c:	b	99b8 <gcry_free>
     c30:	cbz	x0, c18 <gcry_mpi_release+0x28>
     c34:	ldr	w1, [x19]
     c38:	lsl	x2, x1, #3
     c3c:	cbz	x1, c10 <gcry_mpi_release+0x20>
     c40:	add	x2, x0, x2
     c44:	mov	x1, x0
     c48:	strb	wzr, [x1], #1
     c4c:	cmp	x1, x2
     c50:	b.ne	c48 <gcry_mpi_release+0x58>  // b.any
     c54:	b	c10 <gcry_mpi_release+0x20>
     c58:	ret
     c5c:	adrp	x0, 0 <_gcry_mpi_alloc>
     c60:	ldr	x0, [x0]
     c64:	bl	9b98 <_gcry_log_bug>
	...

0000000000000c70 <gcry_mpi_set_flag>:
     c70:	stp	x29, x30, [sp, #-32]!
     c74:	cmp	w1, #0x1
     c78:	mov	x29, sp
     c7c:	stp	x19, x20, [sp, #16]
     c80:	b.ne	d9c <gcry_mpi_set_flag+0x12c>  // b.any
     c84:	ldr	w1, [x0, #12]
     c88:	mov	x19, x0
     c8c:	tbnz	w1, #0, ca8 <gcry_mpi_set_flag+0x38>
     c90:	ldr	w0, [x0, #4]
     c94:	orr	w1, w1, #0x1
     c98:	str	w1, [x19, #12]
     c9c:	ldr	x20, [x19, #16]
     ca0:	cbnz	w0, cb4 <gcry_mpi_set_flag+0x44>
     ca4:	cbnz	x20, d5c <gcry_mpi_set_flag+0xec>
     ca8:	ldp	x19, x20, [sp, #16]
     cac:	ldp	x29, x30, [sp], #32
     cb0:	ret
     cb4:	ubfiz	x0, x0, #3, #32
     cb8:	bl	99f8 <gcry_xmalloc_secure>
     cbc:	ldr	w6, [x19, #4]
     cc0:	cmp	w6, #0x0
     cc4:	b.le	d20 <gcry_mpi_set_flag+0xb0>
     cc8:	add	x2, x20, #0xf
     ccc:	sub	w3, w6, #0x1
     cd0:	sub	x2, x2, x0
     cd4:	orr	x1, x0, x20
     cd8:	cmp	x2, #0x1e
     cdc:	and	x1, x1, #0xf
     ce0:	ccmp	w3, #0xb, #0x0, hi  // hi = pmore
     ce4:	ccmp	x1, #0x0, #0x0, hi  // hi = pmore
     ce8:	b.ne	d7c <gcry_mpi_set_flag+0x10c>  // b.any
     cec:	lsr	w3, w6, #1
     cf0:	mov	x1, x20
     cf4:	mov	x2, x0
     cf8:	add	x3, x20, w3, uxtw #4
     cfc:	nop
     d00:	ldp	x4, x5, [x1], #16
     d04:	stp	x4, x5, [x2], #16
     d08:	cmp	x1, x3
     d0c:	b.ne	d00 <gcry_mpi_set_flag+0x90>  // b.any
     d10:	and	w1, w6, #0xfffffffe
     d14:	tbz	w6, #0, d20 <gcry_mpi_set_flag+0xb0>
     d18:	ldr	x2, [x20, x1, lsl #3]
     d1c:	str	x2, [x0, x1, lsl #3]
     d20:	str	x0, [x19, #16]
     d24:	cbz	x20, ca8 <gcry_mpi_set_flag+0x38>
     d28:	ldr	w0, [x19]
     d2c:	lsl	x1, x0, #3
     d30:	cbz	x0, d4c <gcry_mpi_set_flag+0xdc>
     d34:	add	x1, x20, x1
     d38:	mov	x0, x20
     d3c:	nop
     d40:	strb	wzr, [x0], #1
     d44:	cmp	x0, x1
     d48:	b.ne	d40 <gcry_mpi_set_flag+0xd0>  // b.any
     d4c:	mov	x0, x20
     d50:	ldp	x19, x20, [sp, #16]
     d54:	ldp	x29, x30, [sp], #32
     d58:	b	99b8 <gcry_free>
     d5c:	adrp	x3, 0 <_gcry_mpi_alloc>
     d60:	adrp	x1, 0 <_gcry_mpi_alloc>
     d64:	adrp	x0, 0 <_gcry_mpi_alloc>
     d68:	mov	w2, #0xc1                  	// #193
     d6c:	ldr	x3, [x3]
     d70:	ldr	x1, [x1]
     d74:	ldr	x0, [x0]
     d78:	bl	0 <_gcry_assert_failed>
     d7c:	mov	x1, #0x0                   	// #0
     d80:	ldr	x2, [x20, x1, lsl #3]
     d84:	str	x2, [x0, x1, lsl #3]
     d88:	add	x1, x1, #0x1
     d8c:	cmp	w6, w1
     d90:	b.gt	d80 <gcry_mpi_set_flag+0x110>
     d94:	str	x0, [x19, #16]
     d98:	b	d28 <gcry_mpi_set_flag+0xb8>
     d9c:	adrp	x0, 0 <_gcry_mpi_alloc>
     da0:	ldr	x0, [x0]
     da4:	bl	9b98 <_gcry_log_bug>
	...

0000000000000dc8 <gcry_mpi_clear_flag>:
     dc8:	stp	x29, x30, [sp, #-16]!
     dcc:	adrp	x0, 0 <_gcry_mpi_alloc>
     dd0:	mov	x29, sp
     dd4:	ldr	x0, [x0]
     dd8:	bl	9b98 <_gcry_log_bug>
     ddc:	nop
	...

0000000000000de8 <gcry_mpi_get_flag>:
     de8:	cmp	w1, #0x1
     dec:	b.eq	e04 <gcry_mpi_get_flag+0x1c>  // b.none
     df0:	cmp	w1, #0x2
     df4:	b.ne	e10 <gcry_mpi_get_flag+0x28>  // b.any
     df8:	ldr	w0, [x0, #12]
     dfc:	and	w0, w0, #0x4
     e00:	ret
     e04:	ldr	w0, [x0, #12]
     e08:	and	w0, w0, #0x1
     e0c:	ret
     e10:	stp	x29, x30, [sp, #-16]!
     e14:	adrp	x0, 0 <_gcry_mpi_alloc>
     e18:	mov	x29, sp
     e1c:	ldr	x0, [x0]
     e20:	bl	9b98 <_gcry_log_bug>
     e24:	nop
	...

0000000000000e30 <_gcry_mpi_normalize>:
     e30:	cbz	x0, e3c <_gcry_mpi_normalize+0xc>
     e34:	ldr	w1, [x0, #12]
     e38:	tbnz	w1, #2, e78 <_gcry_mpi_normalize+0x48>
     e3c:	ldr	w1, [x0, #4]
     e40:	cbz	w1, e78 <_gcry_mpi_normalize+0x48>
     e44:	sxtw	x3, w1
     e48:	sub	w1, w1, #0x1
     e4c:	sub	x3, x3, #0x2
     e50:	sub	x3, x3, w1, uxtw
     e54:	sxtw	x1, w1
     e58:	ldr	x4, [x0, #16]
     e5c:	b	e70 <_gcry_mpi_normalize+0x40>
     e60:	str	w1, [x0, #4]
     e64:	sub	x1, x1, #0x1
     e68:	cmp	x3, x1
     e6c:	b.eq	e78 <_gcry_mpi_normalize+0x48>  // b.none
     e70:	ldr	x2, [x4, x1, lsl #3]
     e74:	cbz	x2, e60 <_gcry_mpi_normalize+0x30>
     e78:	ret
     e7c:	nop

0000000000000e80 <gcry_mpi_get_nbits>:
     e80:	cbz	x0, e8c <gcry_mpi_get_nbits+0xc>
     e84:	ldr	w1, [x0, #12]
     e88:	tbnz	w1, #2, f44 <gcry_mpi_get_nbits+0xc4>
     e8c:	ldr	w1, [x0, #4]
     e90:	cbz	w1, f4c <gcry_mpi_get_nbits+0xcc>
     e94:	ldr	x3, [x0, #16]
     e98:	sxtw	x1, w1
     e9c:	sub	x6, x3, #0x8
     ea0:	b	eac <gcry_mpi_get_nbits+0x2c>
     ea4:	str	w5, [x0, #4]
     ea8:	cbz	w1, f4c <gcry_mpi_get_nbits+0xcc>
     eac:	ldr	x4, [x6, x1, lsl #3]
     eb0:	sub	w5, w1, #0x1
     eb4:	mov	w2, w1
     eb8:	sub	x1, x1, #0x1
     ebc:	cbz	x4, ea4 <gcry_mpi_get_nbits+0x24>
     ec0:	cbz	w2, f4c <gcry_mpi_get_nbits+0xcc>
     ec4:	add	x3, x3, w2, sxtw #3
     ec8:	mov	w0, #0x40                  	// #64
     ecc:	ldur	x1, [x3, #-8]
     ed0:	cbz	x1, f38 <gcry_mpi_get_nbits+0xb8>
     ed4:	cmp	xzr, x1, lsr #56
     ed8:	lsr	x3, x1, #56
     edc:	b.ne	f54 <gcry_mpi_get_nbits+0xd4>  // b.any
     ee0:	tst	x1, #0xff000000000000
     ee4:	lsr	x3, x1, #48
     ee8:	b.ne	f6c <gcry_mpi_get_nbits+0xec>  // b.any
     eec:	tst	x1, #0xff0000000000
     ef0:	lsr	x3, x1, #40
     ef4:	b.ne	f78 <gcry_mpi_get_nbits+0xf8>  // b.any
     ef8:	tst	x1, #0xff00000000
     efc:	lsr	x3, x1, #32
     f00:	b.ne	f84 <gcry_mpi_get_nbits+0x104>  // b.any
     f04:	tst	x1, #0xff000000
     f08:	lsr	x3, x1, #24
     f0c:	b.ne	f90 <gcry_mpi_get_nbits+0x110>  // b.any
     f10:	tst	x1, #0xff0000
     f14:	lsr	x3, x1, #16
     f18:	b.ne	f9c <gcry_mpi_get_nbits+0x11c>  // b.any
     f1c:	tst	x1, #0xff00
     f20:	lsr	x3, x1, #8
     f24:	b.ne	fa8 <gcry_mpi_get_nbits+0x128>  // b.any
     f28:	adrp	x3, 0 <_gcry_mpi_alloc>
     f2c:	ldr	x3, [x3]
     f30:	ldrb	w1, [x3, x1]
     f34:	sub	w0, w0, w1
     f38:	lsl	w2, w2, #6
     f3c:	sub	w0, w2, w0
     f40:	ret
     f44:	ldr	w0, [x0, #8]
     f48:	ret
     f4c:	mov	w0, #0x0                   	// #0
     f50:	ret
     f54:	mov	x1, x3
     f58:	mov	w3, #0x38                  	// #56
     f5c:	nop
     f60:	mov	w0, #0x40                  	// #64
     f64:	sub	w0, w0, w3
     f68:	b	f28 <gcry_mpi_get_nbits+0xa8>
     f6c:	mov	x1, x3
     f70:	mov	w3, #0x30                  	// #48
     f74:	b	f60 <gcry_mpi_get_nbits+0xe0>
     f78:	mov	x1, x3
     f7c:	mov	w3, #0x28                  	// #40
     f80:	b	f60 <gcry_mpi_get_nbits+0xe0>
     f84:	mov	x1, x3
     f88:	mov	w3, #0x20                  	// #32
     f8c:	b	f60 <gcry_mpi_get_nbits+0xe0>
     f90:	mov	x1, x3
     f94:	mov	w3, #0x18                  	// #24
     f98:	b	f60 <gcry_mpi_get_nbits+0xe0>
     f9c:	mov	x1, x3
     fa0:	mov	w3, #0x10                  	// #16
     fa4:	b	f60 <gcry_mpi_get_nbits+0xe0>
     fa8:	mov	x1, x3
     fac:	mov	w3, #0x8                   	// #8
     fb0:	b	f60 <gcry_mpi_get_nbits+0xe0>
     fb4:	nop
	...

0000000000000fc0 <gcry_mpi_test_bit>:
     fc0:	ldr	w3, [x0, #4]
     fc4:	lsr	w2, w1, #6
     fc8:	cmp	w3, w1, lsr #6
     fcc:	b.ls	fe4 <gcry_mpi_test_bit+0x24>  // b.plast
     fd0:	ldr	x0, [x0, #16]
     fd4:	ldr	x0, [x0, x2, lsl #3]
     fd8:	lsr	x1, x0, x1
     fdc:	and	w0, w1, #0x1
     fe0:	ret
     fe4:	mov	w0, #0x0                   	// #0
     fe8:	ret
     fec:	nop

0000000000000ff0 <gcry_mpi_set_bit>:
     ff0:	stp	x29, x30, [sp, #-48]!
     ff4:	mov	x29, sp
     ff8:	ldr	w2, [x0, #4]
     ffc:	stp	x19, x20, [sp, #16]
    1000:	mov	x20, x0
    1004:	lsr	w19, w1, #6
    1008:	stp	x21, x22, [sp, #32]
    100c:	cmp	w2, w1, lsr #6
    1010:	and	w21, w1, #0x3f
    1014:	b.ls	1044 <gcry_mpi_set_bit+0x54>  // b.plast
    1018:	ldr	x3, [x20, #16]
    101c:	mov	w0, w19
    1020:	mov	x1, #0x1                   	// #1
    1024:	lsl	x2, x1, x21
    1028:	ldr	x1, [x3, x0, lsl #3]
    102c:	ldp	x21, x22, [sp, #32]
    1030:	orr	x1, x1, x2
    1034:	str	x1, [x3, x0, lsl #3]
    1038:	ldp	x19, x20, [sp, #16]
    103c:	ldp	x29, x30, [sp], #48
    1040:	ret
    1044:	add	w22, w19, #0x1
    1048:	mov	w1, w22
    104c:	bl	1c8 <_gcry_mpi_resize>
    1050:	str	w22, [x20, #4]
    1054:	b	1018 <gcry_mpi_set_bit+0x28>

0000000000001058 <gcry_mpi_set_highbit>:
    1058:	stp	x29, x30, [sp, #-48]!
    105c:	mov	x29, sp
    1060:	stp	x19, x20, [sp, #16]
    1064:	lsr	w20, w1, #6
    1068:	and	w19, w1, #0x3f
    106c:	ldr	w1, [x0, #4]
    1070:	stp	x21, x22, [sp, #32]
    1074:	mov	x21, x0
    1078:	add	w22, w20, #0x1
    107c:	cmp	w1, w20
    1080:	b.ls	10d4 <gcry_mpi_set_highbit+0x7c>  // b.plast
    1084:	ldr	x0, [x21, #16]
    1088:	mov	x5, #0x1                   	// #1
    108c:	lsl	x3, x5, x19
    1090:	cmp	w19, #0x3f
    1094:	add	w2, w19, #0x1
    1098:	ldr	x1, [x0, x20, lsl #3]
    109c:	orr	x3, x3, x1
    10a0:	str	x3, [x0, x20, lsl #3]
    10a4:	b.eq	10c0 <gcry_mpi_set_highbit+0x68>  // b.none
    10a8:	lsl	x4, x5, x2
    10ac:	add	w2, w2, #0x1
    10b0:	bic	x3, x3, x4
    10b4:	cmp	w2, #0x40
    10b8:	b.ne	10a8 <gcry_mpi_set_highbit+0x50>  // b.any
    10bc:	str	x3, [x0, x20, lsl #3]
    10c0:	ldp	x19, x20, [sp, #16]
    10c4:	str	w22, [x21, #4]
    10c8:	ldp	x21, x22, [sp, #32]
    10cc:	ldp	x29, x30, [sp], #48
    10d0:	ret
    10d4:	mov	w1, w22
    10d8:	bl	1c8 <_gcry_mpi_resize>
    10dc:	b	1084 <gcry_mpi_set_highbit+0x2c>

00000000000010e0 <gcry_mpi_clear_highbit>:
    10e0:	ldr	w2, [x0, #4]
    10e4:	lsr	w5, w1, #6
    10e8:	cmp	w2, w1, lsr #6
    10ec:	b.ls	1128 <gcry_mpi_clear_highbit+0x48>  // b.plast
    10f0:	ldr	x6, [x0, #16]
    10f4:	mov	w7, w5
    10f8:	and	w1, w1, #0x3f
    10fc:	mov	x4, #0x1                   	// #1
    1100:	ldr	x2, [x6, x7, lsl #3]
    1104:	nop
    1108:	lsl	x3, x4, x1
    110c:	add	w1, w1, #0x1
    1110:	bic	x2, x2, x3
    1114:	cmp	w1, #0x40
    1118:	b.ne	1108 <gcry_mpi_clear_highbit+0x28>  // b.any
    111c:	str	x2, [x6, x7, lsl #3]
    1120:	add	w5, w5, #0x1
    1124:	str	w5, [x0, #4]
    1128:	ret
    112c:	nop

0000000000001130 <gcry_mpi_clear_bit>:
    1130:	ldr	w3, [x0, #4]
    1134:	lsr	w2, w1, #6
    1138:	cmp	w3, w1, lsr #6
    113c:	b.ls	1158 <gcry_mpi_clear_bit+0x28>  // b.plast
    1140:	ldr	x3, [x0, #16]
    1144:	mov	x0, #0x1                   	// #1
    1148:	lsl	x1, x0, x1
    114c:	ldr	x0, [x3, x2, lsl #3]
    1150:	bic	x1, x0, x1
    1154:	str	x1, [x3, x2, lsl #3]
    1158:	ret
    115c:	nop

0000000000001160 <_gcry_mpi_rshift_limbs>:
    1160:	ldr	w5, [x0, #4]
    1164:	cmp	w5, w1
    1168:	b.ls	11a4 <_gcry_mpi_rshift_limbs+0x44>  // b.plast
    116c:	ldr	x3, [x0, #16]
    1170:	sub	w6, w5, w1
    1174:	sub	w5, w5, w1
    1178:	mov	x2, #0x0                   	// #0
    117c:	nop
    1180:	add	w4, w1, w2
    1184:	ldr	x4, [x3, x4, lsl #3]
    1188:	str	x4, [x3, x2, lsl #3]
    118c:	add	x2, x2, #0x1
    1190:	cmp	x5, x2
    1194:	b.ne	1180 <_gcry_mpi_rshift_limbs+0x20>  // b.any
    1198:	str	xzr, [x3, x5, lsl #3]
    119c:	str	w6, [x0, #4]
    11a0:	ret
    11a4:	str	wzr, [x0, #4]
    11a8:	ret
    11ac:	nop

00000000000011b0 <gcry_mpi_rshift>:
    11b0:	stp	x29, x30, [sp, #-64]!
    11b4:	cmp	x0, x1
    11b8:	mov	x29, sp
    11bc:	stp	x19, x20, [sp, #16]
    11c0:	stp	x21, x22, [sp, #32]
    11c4:	mov	x21, x0
    11c8:	lsr	w22, w2, #6
    11cc:	str	x23, [sp, #48]
    11d0:	and	w23, w2, #0x3f
    11d4:	b.eq	1364 <gcry_mpi_rshift+0x1b4>  // b.none
    11d8:	cmp	w2, #0x3f
    11dc:	mov	x20, x1
    11e0:	ldp	w19, w2, [x1, #4]
    11e4:	str	w2, [x0, #8]
    11e8:	ldr	w1, [x0]
    11ec:	b.ls	12f0 <gcry_mpi_rshift+0x140>  // b.plast
    11f0:	cmp	w1, w19
    11f4:	b.lt	13c4 <gcry_mpi_rshift+0x214>  // b.tstop
    11f8:	str	w19, [x21, #4]
    11fc:	ldr	w4, [x20, #4]
    1200:	cbz	w4, 13ac <gcry_mpi_rshift+0x1fc>
    1204:	ldr	x5, [x20, #16]
    1208:	sub	w2, w4, #0x1
    120c:	ldr	x1, [x21, #16]
    1210:	add	x3, x5, #0xf
    1214:	sub	x3, x3, x1
    1218:	orr	x0, x1, x5
    121c:	cmp	x3, #0x1e
    1220:	and	x0, x0, #0xf
    1224:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    1228:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    122c:	b.ne	1418 <gcry_mpi_rshift+0x268>  // b.any
    1230:	lsr	w8, w4, #1
    1234:	mov	x0, x1
    1238:	mov	x2, x5
    123c:	add	x8, x1, w8, uxtw #4
    1240:	ldp	x6, x7, [x2], #16
    1244:	stp	x6, x7, [x0], #16
    1248:	cmp	x0, x8
    124c:	b.ne	1240 <gcry_mpi_rshift+0x90>  // b.any
    1250:	and	w2, w4, #0xfffffffe
    1254:	tbz	w4, #0, 1260 <gcry_mpi_rshift+0xb0>
    1258:	ldr	x0, [x5, x2, lsl #3]
    125c:	str	x0, [x1, x2, lsl #3]
    1260:	cmp	w22, w4
    1264:	b.cs	13ac <gcry_mpi_rshift+0x1fc>  // b.hs, b.nlast
    1268:	subs	w19, w4, w22
    126c:	mov	x4, #0x0                   	// #0
    1270:	b.eq	13a8 <gcry_mpi_rshift+0x1f8>  // b.none
    1274:	nop
    1278:	add	w0, w22, w4
    127c:	ldr	x0, [x1, x0, lsl #3]
    1280:	str	x0, [x1, x4, lsl #3]
    1284:	add	x4, x4, #0x1
    1288:	cmp	w19, w4
    128c:	b.hi	1278 <gcry_mpi_rshift+0xc8>  // b.pmore
    1290:	str	xzr, [x1, w19, uxtw #3]
    1294:	str	w19, [x21, #4]
    1298:	cbnz	w23, 1390 <gcry_mpi_rshift+0x1e0>
    129c:	nop
    12a0:	cmp	w19, #0x0
    12a4:	b.le	12dc <gcry_mpi_rshift+0x12c>
    12a8:	sub	w1, w19, #0x1
    12ac:	sxtw	x3, w19
    12b0:	sub	x3, x3, #0x2
    12b4:	sub	x3, x3, w1, uxtw
    12b8:	sxtw	x1, w1
    12bc:	ldr	x4, [x21, #16]
    12c0:	b	12d4 <gcry_mpi_rshift+0x124>
    12c4:	str	w1, [x21, #4]
    12c8:	sub	x1, x1, #0x1
    12cc:	cmp	x1, x3
    12d0:	b.eq	12dc <gcry_mpi_rshift+0x12c>  // b.none
    12d4:	ldr	x2, [x4, x1, lsl #3]
    12d8:	cbz	x2, 12c4 <gcry_mpi_rshift+0x114>
    12dc:	ldp	x19, x20, [sp, #16]
    12e0:	ldp	x21, x22, [sp, #32]
    12e4:	ldr	x23, [sp, #48]
    12e8:	ldp	x29, x30, [sp], #64
    12ec:	ret
    12f0:	cmp	w1, w19
    12f4:	b.lt	13d0 <gcry_mpi_rshift+0x220>  // b.tstop
    12f8:	str	w19, [x21, #4]
    12fc:	cbz	w19, 12dc <gcry_mpi_rshift+0x12c>
    1300:	ldr	x1, [x20, #16]
    1304:	ldr	x0, [x21, #16]
    1308:	cbnz	w23, 1438 <gcry_mpi_rshift+0x288>
    130c:	add	x3, x1, #0xf
    1310:	sub	w4, w19, #0x1
    1314:	sub	x3, x3, x0
    1318:	orr	x2, x0, x1
    131c:	cmp	x3, #0x1e
    1320:	and	x2, x2, #0xf
    1324:	ccmp	w4, #0xb, #0x0, hi  // hi = pmore
    1328:	ccmp	x2, #0x0, #0x0, hi  // hi = pmore
    132c:	b.ne	144c <gcry_mpi_rshift+0x29c>  // b.any
    1330:	lsr	w6, w19, #1
    1334:	mov	x2, x0
    1338:	mov	x3, x1
    133c:	add	x6, x0, w6, uxtw #4
    1340:	ldp	x4, x5, [x3], #16
    1344:	stp	x4, x5, [x2], #16
    1348:	cmp	x2, x6
    134c:	b.ne	1340 <gcry_mpi_rshift+0x190>  // b.any
    1350:	and	w2, w19, #0xfffffffe
    1354:	tbz	w19, #0, 12a0 <gcry_mpi_rshift+0xf0>
    1358:	ldr	x1, [x1, x2, lsl #3]
    135c:	str	x1, [x0, x2, lsl #3]
    1360:	b	12a0 <gcry_mpi_rshift+0xf0>
    1364:	ldr	w19, [x0, #4]
    1368:	cmp	w19, w22
    136c:	b.ls	13ac <gcry_mpi_rshift+0x1fc>  // b.plast
    1370:	cmp	w23, #0x0
    1374:	cset	w1, ne  // ne = any
    1378:	cmp	w2, #0x3f
    137c:	b.hi	13dc <gcry_mpi_rshift+0x22c>  // b.pmore
    1380:	cmp	w19, #0x0
    1384:	csel	w1, w1, wzr, ne  // ne = any
    1388:	cbz	w1, 12a0 <gcry_mpi_rshift+0xf0>
    138c:	ldr	x1, [x21, #16]
    1390:	mov	w2, w19
    1394:	mov	w3, w23
    1398:	mov	x0, x1
    139c:	bl	94e0 <_gcry_mpih_rshift>
    13a0:	ldr	w19, [x21, #4]
    13a4:	b	12a0 <gcry_mpi_rshift+0xf0>
    13a8:	str	xzr, [x1]
    13ac:	str	wzr, [x21, #4]
    13b0:	ldp	x19, x20, [sp, #16]
    13b4:	ldp	x21, x22, [sp, #32]
    13b8:	ldr	x23, [sp, #48]
    13bc:	ldp	x29, x30, [sp], #64
    13c0:	ret
    13c4:	mov	w1, w19
    13c8:	bl	1c8 <_gcry_mpi_resize>
    13cc:	b	11f8 <gcry_mpi_rshift+0x48>
    13d0:	mov	w1, w19
    13d4:	bl	1c8 <_gcry_mpi_resize>
    13d8:	b	12f8 <gcry_mpi_rshift+0x148>
    13dc:	subs	w19, w19, w22
    13e0:	mov	x0, #0x0                   	// #0
    13e4:	ldr	x2, [x21, #16]
    13e8:	b.eq	1470 <gcry_mpi_rshift+0x2c0>  // b.none
    13ec:	nop
    13f0:	add	w3, w22, w0
    13f4:	ldr	x3, [x2, x3, lsl #3]
    13f8:	str	x3, [x2, x0, lsl #3]
    13fc:	add	x0, x0, #0x1
    1400:	cmp	w19, w0
    1404:	b.hi	13f0 <gcry_mpi_rshift+0x240>  // b.pmore
    1408:	str	xzr, [x2, w19, uxtw #3]
    140c:	str	w19, [x21, #4]
    1410:	cbz	w1, 12a0 <gcry_mpi_rshift+0xf0>
    1414:	b	138c <gcry_mpi_rshift+0x1dc>
    1418:	mov	x0, #0x0                   	// #0
    141c:	nop
    1420:	ldr	x2, [x5, x0, lsl #3]
    1424:	str	x2, [x1, x0, lsl #3]
    1428:	add	x0, x0, #0x1
    142c:	cmp	w4, w0
    1430:	b.hi	1420 <gcry_mpi_rshift+0x270>  // b.pmore
    1434:	b	1260 <gcry_mpi_rshift+0xb0>
    1438:	mov	w2, w19
    143c:	mov	w3, w23
    1440:	bl	94e0 <_gcry_mpih_rshift>
    1444:	ldr	w19, [x21, #4]
    1448:	b	12a0 <gcry_mpi_rshift+0xf0>
    144c:	ubfiz	x3, x4, #3, #32
    1450:	mov	x2, #0x0                   	// #0
    1454:	add	x3, x3, #0x8
    1458:	ldr	x4, [x1, x2]
    145c:	str	x4, [x0, x2]
    1460:	add	x2, x2, #0x8
    1464:	cmp	x2, x3
    1468:	b.ne	1458 <gcry_mpi_rshift+0x2a8>  // b.any
    146c:	b	12a0 <gcry_mpi_rshift+0xf0>
    1470:	str	xzr, [x2]
    1474:	str	wzr, [x21, #4]
    1478:	b	12dc <gcry_mpi_rshift+0x12c>
    147c:	nop

0000000000001480 <_gcry_mpi_lshift_limbs>:
    1480:	stp	x29, x30, [sp, #-48]!
    1484:	cmp	w1, #0x0
    1488:	mov	x29, sp
    148c:	stp	x19, x20, [sp, #16]
    1490:	ldr	w20, [x0, #4]
    1494:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    1498:	b.eq	1598 <_gcry_mpi_lshift_limbs+0x118>  // b.none
    149c:	ldr	w2, [x0]
    14a0:	mov	w19, w1
    14a4:	str	x21, [sp, #32]
    14a8:	add	w1, w20, w1
    14ac:	mov	x21, x0
    14b0:	cmp	w2, w1
    14b4:	b.cc	15a4 <_gcry_mpi_lshift_limbs+0x124>  // b.lo, b.ul, b.last
    14b8:	sub	w20, w20, #0x1
    14bc:	ldr	x3, [x21, #16]
    14c0:	sxtw	x2, w20
    14c4:	tbnz	w20, #31, 14dc <_gcry_mpi_lshift_limbs+0x5c>
    14c8:	add	w4, w19, w2
    14cc:	ldr	x5, [x3, x2, lsl #3]
    14d0:	sub	x2, x2, #0x1
    14d4:	str	x5, [x3, x4, lsl #3]
    14d8:	tbz	w2, #31, 14c8 <_gcry_mpi_lshift_limbs+0x48>
    14dc:	cmp	w19, #0x0
    14e0:	mov	w0, #0x1                   	// #1
    14e4:	ubfx	w2, w3, #3, #1
    14e8:	csel	w6, w19, w0, ne  // ne = any
    14ec:	cmp	w19, #0x6
    14f0:	b.ls	15b4 <_gcry_mpi_lshift_limbs+0x134>  // b.plast
    14f4:	mov	w4, #0x0                   	// #0
    14f8:	cbz	w2, 1504 <_gcry_mpi_lshift_limbs+0x84>
    14fc:	mov	w4, w0
    1500:	str	xzr, [x3]
    1504:	sub	w6, w6, w2
    1508:	mov	w2, w2
    150c:	lsr	w5, w6, #1
    1510:	add	x2, x3, x2, lsl #3
    1514:	add	x5, x2, w5, uxtw #4
    1518:	stp	xzr, xzr, [x2], #16
    151c:	cmp	x2, x5
    1520:	b.ne	1518 <_gcry_mpi_lshift_limbs+0x98>  // b.any
    1524:	and	w0, w6, #0xfffffffe
    1528:	add	w2, w0, w4
    152c:	cmp	w6, w0
    1530:	b.eq	1590 <_gcry_mpi_lshift_limbs+0x110>  // b.none
    1534:	str	xzr, [x3, w2, sxtw #3]
    1538:	add	w0, w2, #0x1
    153c:	cmp	w19, w0
    1540:	sbfiz	x0, x2, #3, #32
    1544:	b.ls	1590 <_gcry_mpi_lshift_limbs+0x110>  // b.plast
    1548:	add	x3, x3, x0
    154c:	add	w0, w2, #0x2
    1550:	cmp	w19, w0
    1554:	str	xzr, [x3, #8]
    1558:	b.ls	1590 <_gcry_mpi_lshift_limbs+0x110>  // b.plast
    155c:	str	xzr, [x3, #16]
    1560:	add	w0, w2, #0x3
    1564:	cmp	w19, w0
    1568:	b.ls	1590 <_gcry_mpi_lshift_limbs+0x110>  // b.plast
    156c:	str	xzr, [x3, #24]
    1570:	add	w0, w2, #0x4
    1574:	cmp	w19, w0
    1578:	b.ls	1590 <_gcry_mpi_lshift_limbs+0x110>  // b.plast
    157c:	str	xzr, [x3, #32]
    1580:	add	w2, w2, #0x5
    1584:	cmp	w19, w2
    1588:	b.ls	1590 <_gcry_mpi_lshift_limbs+0x110>  // b.plast
    158c:	str	xzr, [x3, #40]
    1590:	str	w1, [x21, #4]
    1594:	ldr	x21, [sp, #32]
    1598:	ldp	x19, x20, [sp, #16]
    159c:	ldp	x29, x30, [sp], #48
    15a0:	ret
    15a4:	bl	1c8 <_gcry_mpi_resize>
    15a8:	ldr	w1, [x21, #4]
    15ac:	add	w1, w19, w1
    15b0:	b	14b8 <_gcry_mpi_lshift_limbs+0x38>
    15b4:	mov	w2, #0x0                   	// #0
    15b8:	b	1534 <_gcry_mpi_lshift_limbs+0xb4>
    15bc:	nop

00000000000015c0 <gcry_mpi_lshift>:
    15c0:	cmp	w2, #0x0
    15c4:	ccmp	x0, x1, #0x0, eq  // eq = none
    15c8:	b.eq	16e4 <gcry_mpi_lshift+0x124>  // b.none
    15cc:	stp	x29, x30, [sp, #-64]!
    15d0:	cmp	x0, x1
    15d4:	mov	x29, sp
    15d8:	stp	x19, x20, [sp, #16]
    15dc:	mov	x20, x0
    15e0:	stp	x21, x22, [sp, #32]
    15e4:	mov	x21, x1
    15e8:	lsr	w22, w2, #6
    15ec:	stp	x23, x24, [sp, #48]
    15f0:	mov	w23, w2
    15f4:	b.eq	1804 <gcry_mpi_lshift+0x244>  // b.none
    15f8:	ldr	w19, [x1, #4]
    15fc:	ldr	w2, [x0]
    1600:	add	w1, w19, #0x1
    1604:	add	w1, w1, w22
    1608:	cmp	w2, w1
    160c:	ldur	x24, [x21, #4]
    1610:	b.cc	180c <gcry_mpi_lshift+0x24c>  // b.lo, b.ul, b.last
    1614:	ldr	x3, [x20, #16]
    1618:	ldr	x1, [x21, #16]
    161c:	cbz	w19, 1674 <gcry_mpi_lshift+0xb4>
    1620:	orr	x4, x1, x3
    1624:	add	x2, x3, #0xf
    1628:	sub	x2, x2, x1
    162c:	sub	w0, w19, #0x1
    1630:	tst	x4, #0xf
    1634:	ccmp	x2, #0x1e, #0x0, eq  // eq = none
    1638:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    163c:	b.ls	1930 <gcry_mpi_lshift+0x370>  // b.plast
    1640:	lsr	w5, w19, #1
    1644:	mov	x0, x1
    1648:	mov	x4, x3
    164c:	add	x5, x1, w5, uxtw #4
    1650:	ldp	x6, x7, [x0], #16
    1654:	stp	x6, x7, [x4], #16
    1658:	cmp	x0, x5
    165c:	b.ne	1650 <gcry_mpi_lshift+0x90>  // b.any
    1660:	and	w0, w19, #0xfffffffe
    1664:	tbz	w19, #0, 1674 <gcry_mpi_lshift+0xb4>
    1668:	sxtw	x0, w0
    166c:	ldr	x1, [x1, x0, lsl #3]
    1670:	str	x1, [x3, x0, lsl #3]
    1674:	ldr	w0, [x21, #12]
    1678:	stur	x24, [x20, #4]
    167c:	str	w0, [x20, #12]
    1680:	cmp	w23, #0x3f
    1684:	and	w21, w23, #0x3f
    1688:	ccmp	w21, #0x0, #0x0, hi  // hi = pmore
    168c:	b.eq	16e8 <gcry_mpi_lshift+0x128>  // b.none
    1690:	cbnz	w23, 1814 <gcry_mpi_lshift+0x254>
    1694:	cmp	w19, #0x0
    1698:	b.le	16d0 <gcry_mpi_lshift+0x110>
    169c:	sub	w1, w19, #0x1
    16a0:	sxtw	x2, w19
    16a4:	sub	x2, x2, #0x2
    16a8:	sub	x2, x2, w1, uxtw
    16ac:	sxtw	x1, w1
    16b0:	ldr	x3, [x20, #16]
    16b4:	b	16c8 <gcry_mpi_lshift+0x108>
    16b8:	str	w1, [x20, #4]
    16bc:	sub	x1, x1, #0x1
    16c0:	cmp	x1, x2
    16c4:	b.eq	16d0 <gcry_mpi_lshift+0x110>  // b.none
    16c8:	ldr	x0, [x3, x1, lsl #3]
    16cc:	cbz	x0, 16b8 <gcry_mpi_lshift+0xf8>
    16d0:	ldp	x19, x20, [sp, #16]
    16d4:	ldp	x21, x22, [sp, #32]
    16d8:	ldp	x23, x24, [sp, #48]
    16dc:	ldp	x29, x30, [sp], #64
    16e0:	ret
    16e4:	ret
    16e8:	cmp	w22, #0x0
    16ec:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    16f0:	b.eq	1694 <gcry_mpi_lshift+0xd4>  // b.none
    16f4:	ldr	w0, [x20]
    16f8:	add	w1, w22, w19
    16fc:	cmp	w0, w1
    1700:	b.cc	1950 <gcry_mpi_lshift+0x390>  // b.lo, b.ul, b.last
    1704:	subs	w0, w19, #0x1
    1708:	ldr	x3, [x20, #16]
    170c:	b.mi	1740 <gcry_mpi_lshift+0x180>  // b.first
    1710:	sub	w2, w22, #0x1
    1714:	sxtw	x4, w19
    1718:	add	w2, w2, w19
    171c:	sxtw	x0, w0
    1720:	neg	x4, x4, lsl #3
    1724:	add	x2, x4, x2, lsl #3
    1728:	add	x2, x2, #0x8
    172c:	add	x2, x3, x2
    1730:	ldr	x4, [x3, x0, lsl #3]
    1734:	str	x4, [x2, x0, lsl #3]
    1738:	sub	x0, x0, #0x1
    173c:	tbz	w0, #31, 1730 <gcry_mpi_lshift+0x170>
    1740:	cmp	w22, #0x0
    1744:	mov	w4, #0x1                   	// #1
    1748:	ubfx	w0, w3, #3, #1
    174c:	csel	w5, w22, w4, ne  // ne = any
    1750:	cmp	w22, #0x6
    1754:	b.ls	1978 <gcry_mpi_lshift+0x3b8>  // b.plast
    1758:	mov	w2, #0x0                   	// #0
    175c:	cbz	w0, 1768 <gcry_mpi_lshift+0x1a8>
    1760:	mov	w2, w4
    1764:	str	xzr, [x3]
    1768:	sub	w5, w5, w0
    176c:	mov	w0, w0
    1770:	lsr	w4, w5, #1
    1774:	add	x0, x3, x0, lsl #3
    1778:	add	x4, x0, w4, uxtw #4
    177c:	nop
    1780:	stp	xzr, xzr, [x0], #16
    1784:	cmp	x0, x4
    1788:	b.ne	1780 <gcry_mpi_lshift+0x1c0>  // b.any
    178c:	and	w4, w5, #0xfffffffe
    1790:	add	w0, w4, w2
    1794:	cmp	w4, w5
    1798:	b.eq	17f8 <gcry_mpi_lshift+0x238>  // b.none
    179c:	str	xzr, [x3, w0, sxtw #3]
    17a0:	add	w2, w0, #0x1
    17a4:	cmp	w2, w22
    17a8:	sbfiz	x2, x0, #3, #32
    17ac:	b.cs	17f8 <gcry_mpi_lshift+0x238>  // b.hs, b.nlast
    17b0:	add	x3, x3, x2
    17b4:	add	w2, w0, #0x2
    17b8:	cmp	w22, w2
    17bc:	str	xzr, [x3, #8]
    17c0:	b.ls	17f8 <gcry_mpi_lshift+0x238>  // b.plast
    17c4:	str	xzr, [x3, #16]
    17c8:	add	w2, w0, #0x3
    17cc:	cmp	w22, w2
    17d0:	b.ls	17f8 <gcry_mpi_lshift+0x238>  // b.plast
    17d4:	str	xzr, [x3, #24]
    17d8:	add	w2, w0, #0x4
    17dc:	cmp	w22, w2
    17e0:	b.ls	17f8 <gcry_mpi_lshift+0x238>  // b.plast
    17e4:	str	xzr, [x3, #32]
    17e8:	add	w0, w0, #0x5
    17ec:	cmp	w22, w0
    17f0:	b.ls	17f8 <gcry_mpi_lshift+0x238>  // b.plast
    17f4:	str	xzr, [x3, #40]
    17f8:	mov	w19, w1
    17fc:	str	w1, [x20, #4]
    1800:	b	1694 <gcry_mpi_lshift+0xd4>
    1804:	ldr	w19, [x0, #4]
    1808:	b	1680 <gcry_mpi_lshift+0xc0>
    180c:	bl	1c8 <_gcry_mpi_resize>
    1810:	b	1614 <gcry_mpi_lshift+0x54>
    1814:	cbz	w19, 1914 <gcry_mpi_lshift+0x354>
    1818:	ldr	w0, [x20]
    181c:	add	w23, w22, #0x1
    1820:	add	w1, w23, w19
    1824:	cmp	w0, w1
    1828:	b.cc	1964 <gcry_mpi_lshift+0x3a4>  // b.lo, b.ul, b.last
    182c:	subs	w0, w19, #0x1
    1830:	ldr	x3, [x20, #16]
    1834:	b.mi	1868 <gcry_mpi_lshift+0x2a8>  // b.first
    1838:	sxtw	x4, w19
    183c:	add	w2, w22, w19
    1840:	sxtw	x0, w0
    1844:	neg	x4, x4, lsl #3
    1848:	add	x2, x4, x2, lsl #3
    184c:	add	x2, x2, #0x8
    1850:	add	x2, x3, x2
    1854:	nop
    1858:	ldr	x4, [x3, x0, lsl #3]
    185c:	str	x4, [x2, x0, lsl #3]
    1860:	sub	x0, x0, #0x1
    1864:	tbz	w0, #31, 1858 <gcry_mpi_lshift+0x298>
    1868:	cmp	w22, #0x5
    186c:	ubfx	w0, w3, #3, #1
    1870:	b.ls	1980 <gcry_mpi_lshift+0x3c0>  // b.plast
    1874:	mov	w4, #0x0                   	// #0
    1878:	cbz	w0, 1884 <gcry_mpi_lshift+0x2c4>
    187c:	mov	w4, #0x1                   	// #1
    1880:	str	xzr, [x3]
    1884:	sub	w5, w23, w0
    1888:	mov	w0, w0
    188c:	lsr	w2, w5, #1
    1890:	add	x0, x3, x0, lsl #3
    1894:	add	x2, x0, w2, uxtw #4
    1898:	stp	xzr, xzr, [x0], #16
    189c:	cmp	x0, x2
    18a0:	b.ne	1898 <gcry_mpi_lshift+0x2d8>  // b.any
    18a4:	and	w2, w5, #0xfffffffe
    18a8:	add	w0, w2, w4
    18ac:	cmp	w2, w5
    18b0:	b.eq	1910 <gcry_mpi_lshift+0x350>  // b.none
    18b4:	str	xzr, [x3, w0, sxtw #3]
    18b8:	add	w2, w0, #0x1
    18bc:	cmp	w23, w2
    18c0:	sbfiz	x2, x0, #3, #32
    18c4:	b.ls	1910 <gcry_mpi_lshift+0x350>  // b.plast
    18c8:	add	x3, x3, x2
    18cc:	add	w2, w0, #0x2
    18d0:	cmp	w23, w2
    18d4:	str	xzr, [x3, #8]
    18d8:	b.ls	1910 <gcry_mpi_lshift+0x350>  // b.plast
    18dc:	str	xzr, [x3, #16]
    18e0:	add	w2, w0, #0x3
    18e4:	cmp	w23, w2
    18e8:	b.ls	1910 <gcry_mpi_lshift+0x350>  // b.plast
    18ec:	str	xzr, [x3, #24]
    18f0:	add	w2, w0, #0x4
    18f4:	cmp	w23, w2
    18f8:	b.ls	1910 <gcry_mpi_lshift+0x350>  // b.plast
    18fc:	str	xzr, [x3, #32]
    1900:	add	w0, w0, #0x5
    1904:	cmp	w23, w0
    1908:	b.ls	1910 <gcry_mpi_lshift+0x350>  // b.plast
    190c:	str	xzr, [x3, #40]
    1910:	str	w1, [x20, #4]
    1914:	mov	x1, x20
    1918:	mov	x0, x20
    191c:	mov	w2, #0x40                  	// #64
    1920:	sub	w2, w2, w21
    1924:	bl	11b0 <gcry_mpi_rshift>
    1928:	ldr	w19, [x20, #4]
    192c:	b	1694 <gcry_mpi_lshift+0xd4>
    1930:	mov	x0, #0x0                   	// #0
    1934:	nop
    1938:	ldr	x2, [x1, x0, lsl #3]
    193c:	str	x2, [x3, x0, lsl #3]
    1940:	add	x0, x0, #0x1
    1944:	cmp	w19, w0
    1948:	b.hi	1938 <gcry_mpi_lshift+0x378>  // b.pmore
    194c:	b	1674 <gcry_mpi_lshift+0xb4>
    1950:	mov	x0, x20
    1954:	bl	1c8 <_gcry_mpi_resize>
    1958:	ldr	w1, [x20, #4]
    195c:	add	w1, w22, w1
    1960:	b	1704 <gcry_mpi_lshift+0x144>
    1964:	mov	x0, x20
    1968:	bl	1c8 <_gcry_mpi_resize>
    196c:	ldr	w1, [x20, #4]
    1970:	add	w1, w23, w1
    1974:	b	182c <gcry_mpi_lshift+0x26c>
    1978:	mov	w0, #0x0                   	// #0
    197c:	b	179c <gcry_mpi_lshift+0x1dc>
    1980:	mov	w0, #0x0                   	// #0
    1984:	b	18b4 <gcry_mpi_lshift+0x2f4>

0000000000001988 <gcry_mpi_add_ui>:
    1988:	stp	x29, x30, [sp, #-64]!
    198c:	mov	x29, sp
    1990:	stp	x19, x20, [sp, #16]
    1994:	mov	x19, x0
    1998:	ldr	w20, [x1, #4]
    199c:	stp	x21, x22, [sp, #32]
    19a0:	mov	x22, x1
    19a4:	mov	x21, x2
    19a8:	ldr	w2, [x0]
    19ac:	add	w1, w20, #0x1
    19b0:	str	x23, [sp, #48]
    19b4:	cmp	w2, w1
    19b8:	ldr	w23, [x22, #8]
    19bc:	b.lt	1acc <gcry_mpi_add_ui+0x144>  // b.tstop
    19c0:	ldr	x4, [x19, #16]
    19c4:	cbnz	w20, 19ec <gcry_mpi_add_ui+0x64>
    19c8:	cmp	x21, #0x0
    19cc:	str	x21, [x4]
    19d0:	cset	w0, ne  // ne = any
    19d4:	ldp	x21, x22, [sp, #32]
    19d8:	ldr	x23, [sp, #48]
    19dc:	stp	w0, w20, [x19, #4]
    19e0:	ldp	x19, x20, [sp, #16]
    19e4:	ldp	x29, x30, [sp], #64
    19e8:	ret
    19ec:	ldr	x1, [x22, #16]
    19f0:	ldr	x0, [x1]
    19f4:	cbnz	w23, 1ad4 <gcry_mpi_add_ui+0x14c>
    19f8:	mov	x2, x4
    19fc:	adds	x21, x21, x0
    1a00:	add	x1, x1, #0x8
    1a04:	mov	w3, w20
    1a08:	str	x21, [x2], #8
    1a0c:	b.cs	1ab8 <gcry_mpi_add_ui+0x130>  // b.hs, b.nlast
    1a10:	cmp	x2, x1
    1a14:	b.eq	1a7c <gcry_mpi_add_ui+0xf4>  // b.none
    1a18:	sub	w8, w3, #0x1
    1a1c:	cmp	w8, #0x0
    1a20:	b.le	1a7c <gcry_mpi_add_ui+0xf4>
    1a24:	orr	x5, x2, x1
    1a28:	add	x0, x2, #0xf
    1a2c:	sub	x0, x0, x1
    1a30:	sub	w3, w3, #0x2
    1a34:	tst	x5, #0xf
    1a38:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    1a3c:	ccmp	w3, #0xb, #0x0, hi  // hi = pmore
    1a40:	b.ls	1bd8 <gcry_mpi_add_ui+0x250>  // b.plast
    1a44:	lsr	w5, w8, #1
    1a48:	mov	x0, x1
    1a4c:	mov	x3, x2
    1a50:	add	x5, x1, w5, uxtw #4
    1a54:	nop
    1a58:	ldp	x6, x7, [x0], #16
    1a5c:	stp	x6, x7, [x3], #16
    1a60:	cmp	x0, x5
    1a64:	b.ne	1a58 <gcry_mpi_add_ui+0xd0>  // b.any
    1a68:	and	w0, w8, #0xfffffffe
    1a6c:	tbz	w8, #0, 1a7c <gcry_mpi_add_ui+0xf4>
    1a70:	sxtw	x0, w0
    1a74:	ldr	x1, [x1, x0, lsl #3]
    1a78:	str	x1, [x2, x0, lsl #3]
    1a7c:	mov	w0, #0x0                   	// #0
    1a80:	mov	x1, #0x0                   	// #0
    1a84:	str	x1, [x4, w20, sxtw #3]
    1a88:	add	w0, w20, w0
    1a8c:	mov	w20, #0x0                   	// #0
    1a90:	ldp	x21, x22, [sp, #32]
    1a94:	ldr	x23, [sp, #48]
    1a98:	stp	w0, w20, [x19, #4]
    1a9c:	ldp	x19, x20, [sp, #16]
    1aa0:	ldp	x29, x30, [sp], #64
    1aa4:	ret
    1aa8:	ldr	x0, [x1], #8
    1aac:	add	x0, x0, #0x1
    1ab0:	str	x0, [x2], #8
    1ab4:	cbnz	x0, 1a10 <gcry_mpi_add_ui+0x88>
    1ab8:	subs	w3, w3, #0x1
    1abc:	b.ne	1aa8 <gcry_mpi_add_ui+0x120>  // b.any
    1ac0:	mov	w0, #0x1                   	// #1
    1ac4:	mov	x1, #0x1                   	// #1
    1ac8:	b	1a84 <gcry_mpi_add_ui+0xfc>
    1acc:	bl	1c8 <_gcry_mpi_resize>
    1ad0:	b	19c0 <gcry_mpi_add_ui+0x38>
    1ad4:	cmp	w20, #0x1
    1ad8:	b.eq	1bb0 <gcry_mpi_add_ui+0x228>  // b.none
    1adc:	mov	x2, x4
    1ae0:	subs	x3, x0, x21
    1ae4:	cmp	x0, x21
    1ae8:	add	x1, x1, #0x8
    1aec:	mov	w0, w20
    1af0:	str	x3, [x2], #8
    1af4:	b.cc	1ba4 <gcry_mpi_add_ui+0x21c>  // b.lo, b.ul, b.last
    1af8:	cmp	x2, x1
    1afc:	b.eq	1b64 <gcry_mpi_add_ui+0x1dc>  // b.none
    1b00:	sub	w8, w0, #0x1
    1b04:	cmp	w8, #0x0
    1b08:	b.le	1b64 <gcry_mpi_add_ui+0x1dc>
    1b0c:	orr	x5, x1, x2
    1b10:	add	x3, x2, #0xf
    1b14:	sub	x3, x3, x1
    1b18:	sub	w0, w0, #0x2
    1b1c:	tst	x5, #0xf
    1b20:	ccmp	x3, #0x1e, #0x0, eq  // eq = none
    1b24:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    1b28:	b.ls	1bf8 <gcry_mpi_add_ui+0x270>  // b.plast
    1b2c:	lsr	w5, w8, #1
    1b30:	mov	x0, x1
    1b34:	mov	x3, x2
    1b38:	add	x5, x1, w5, uxtw #4
    1b3c:	nop
    1b40:	ldp	x6, x7, [x0], #16
    1b44:	stp	x6, x7, [x3], #16
    1b48:	cmp	x0, x5
    1b4c:	b.ne	1b40 <gcry_mpi_add_ui+0x1b8>  // b.any
    1b50:	and	w0, w8, #0xfffffffe
    1b54:	tbz	w8, #0, 1b64 <gcry_mpi_add_ui+0x1dc>
    1b58:	sxtw	x0, w0
    1b5c:	ldr	x1, [x1, x0, lsl #3]
    1b60:	str	x1, [x2, x0, lsl #3]
    1b64:	add	x4, x4, w20, sxtw #3
    1b68:	ldp	x21, x22, [sp, #32]
    1b6c:	ldur	x0, [x4, #-8]
    1b70:	ldr	x23, [sp, #48]
    1b74:	cmp	x0, #0x0
    1b78:	cset	w0, eq  // eq = none
    1b7c:	sub	w0, w20, w0
    1b80:	mov	w20, #0x1                   	// #1
    1b84:	stp	w0, w20, [x19, #4]
    1b88:	ldp	x19, x20, [sp, #16]
    1b8c:	ldp	x29, x30, [sp], #64
    1b90:	ret
    1b94:	ldr	x3, [x1], #8
    1b98:	sub	x5, x3, #0x1
    1b9c:	str	x5, [x2], #8
    1ba0:	cbnz	x3, 1af8 <gcry_mpi_add_ui+0x170>
    1ba4:	subs	w0, w0, #0x1
    1ba8:	b.ne	1b94 <gcry_mpi_add_ui+0x20c>  // b.any
    1bac:	b	1b64 <gcry_mpi_add_ui+0x1dc>
    1bb0:	cmp	x21, x0
    1bb4:	b.ls	1bcc <gcry_mpi_add_ui+0x244>  // b.plast
    1bb8:	sub	x21, x21, x0
    1bbc:	mov	w0, w20
    1bc0:	mov	w20, #0x0                   	// #0
    1bc4:	str	x21, [x4]
    1bc8:	b	19d4 <gcry_mpi_add_ui+0x4c>
    1bcc:	sub	x21, x0, x21
    1bd0:	str	x21, [x4]
    1bd4:	b	1b64 <gcry_mpi_add_ui+0x1dc>
    1bd8:	mov	x0, #0x0                   	// #0
    1bdc:	nop
    1be0:	ldr	x3, [x1, x0, lsl #3]
    1be4:	str	x3, [x2, x0, lsl #3]
    1be8:	add	x0, x0, #0x1
    1bec:	cmp	w8, w0
    1bf0:	b.gt	1be0 <gcry_mpi_add_ui+0x258>
    1bf4:	b	1a7c <gcry_mpi_add_ui+0xf4>
    1bf8:	mov	x0, #0x0                   	// #0
    1bfc:	nop
    1c00:	ldr	x3, [x1, x0, lsl #3]
    1c04:	str	x3, [x2, x0, lsl #3]
    1c08:	add	x0, x0, #0x1
    1c0c:	cmp	w8, w0
    1c10:	b.gt	1c00 <gcry_mpi_add_ui+0x278>
    1c14:	b	1b64 <gcry_mpi_add_ui+0x1dc>

0000000000001c18 <gcry_mpi_add>:
    1c18:	stp	x29, x30, [sp, #-80]!
    1c1c:	mov	x29, sp
    1c20:	stp	x19, x20, [sp, #16]
    1c24:	mov	x20, x2
    1c28:	ldr	w19, [x2, #4]
    1c2c:	stp	x21, x22, [sp, #32]
    1c30:	mov	x22, x0
    1c34:	ldr	w2, [x0]
    1c38:	stp	x25, x26, [sp, #64]
    1c3c:	ldp	w21, w26, [x1, #4]
    1c40:	stp	x23, x24, [sp, #48]
    1c44:	ldr	w24, [x20, #8]
    1c48:	mov	x23, x1
    1c4c:	cmp	w21, w19
    1c50:	b.ge	1d88 <gcry_mpi_add+0x170>  // b.tcont
    1c54:	add	w1, w19, #0x1
    1c58:	cmp	w2, w1
    1c5c:	b.lt	1de0 <gcry_mpi_add+0x1c8>  // b.tstop
    1c60:	ldr	x25, [x20, #16]
    1c64:	ldr	x4, [x23, #16]
    1c68:	ldr	x20, [x22, #16]
    1c6c:	cbnz	w21, 1ce4 <gcry_mpi_add+0xcc>
    1c70:	cmp	w19, #0x0
    1c74:	b.le	1cc8 <gcry_mpi_add+0xb0>
    1c78:	orr	x2, x20, x25
    1c7c:	add	x1, x25, #0xf
    1c80:	sub	x1, x1, x20
    1c84:	sub	w0, w19, #0x1
    1c88:	tst	x2, #0xf
    1c8c:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    1c90:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    1c94:	b.ls	1ff4 <gcry_mpi_add+0x3dc>  // b.plast
    1c98:	lsr	w3, w19, #1
    1c9c:	mov	x0, x20
    1ca0:	mov	x2, x25
    1ca4:	add	x3, x20, w3, uxtw #4
    1ca8:	ldp	x4, x5, [x2], #16
    1cac:	stp	x4, x5, [x0], #16
    1cb0:	cmp	x0, x3
    1cb4:	b.ne	1ca8 <gcry_mpi_add+0x90>  // b.any
    1cb8:	and	w2, w19, #0xfffffffe
    1cbc:	tbz	w19, #0, 1cc8 <gcry_mpi_add+0xb0>
    1cc0:	ldr	x0, [x25, x2, lsl #3]
    1cc4:	str	x0, [x20, x2, lsl #3]
    1cc8:	ldp	x25, x26, [sp, #64]
    1ccc:	stp	w19, w24, [x22, #4]
    1cd0:	ldp	x19, x20, [sp, #16]
    1cd4:	ldp	x21, x22, [sp, #32]
    1cd8:	ldp	x23, x24, [sp, #48]
    1cdc:	ldp	x29, x30, [sp], #80
    1ce0:	ret
    1ce4:	cmp	w24, w26
    1ce8:	b.eq	1de8 <gcry_mpi_add+0x1d0>  // b.none
    1cec:	cmp	w19, w21
    1cf0:	b.ne	1ef4 <gcry_mpi_add+0x2dc>  // b.any
    1cf4:	subs	w2, w19, #0x1
    1cf8:	b.mi	1d20 <gcry_mpi_add+0x108>  // b.first
    1cfc:	sxtw	x2, w2
    1d00:	b	1d08 <gcry_mpi_add+0xf0>
    1d04:	tbnz	w2, #31, 1d20 <gcry_mpi_add+0x108>
    1d08:	ldr	x3, [x25, x2, lsl #3]
    1d0c:	ldr	x0, [x4, x2, lsl #3]
    1d10:	sub	x2, x2, #0x1
    1d14:	cmp	x3, x0
    1d18:	b.eq	1d04 <gcry_mpi_add+0xec>  // b.none
    1d1c:	b.ls	2010 <gcry_mpi_add+0x3f8>  // b.plast
    1d20:	mov	x2, x4
    1d24:	mov	x1, x25
    1d28:	mov	w3, w19
    1d2c:	mov	x0, x20
    1d30:	bl	73b8 <_gcry_mpih_sub_n>
    1d34:	cmp	w19, #0x0
    1d38:	b.le	1d64 <gcry_mpi_add+0x14c>
    1d3c:	sxtw	x1, w19
    1d40:	sub	x20, x20, #0x8
    1d44:	b	1d58 <gcry_mpi_add+0x140>
    1d48:	sub	w19, w1, #0x1
    1d4c:	sub	x1, x1, #0x1
    1d50:	cmp	w1, #0x0
    1d54:	b.le	1d64 <gcry_mpi_add+0x14c>
    1d58:	ldr	x0, [x20, x1, lsl #3]
    1d5c:	mov	w19, w1
    1d60:	cbz	x0, 1d48 <gcry_mpi_add+0x130>
    1d64:	cmp	w24, #0x0
    1d68:	cset	w24, ne  // ne = any
    1d6c:	ldp	x25, x26, [sp, #64]
    1d70:	stp	w19, w24, [x22, #4]
    1d74:	ldp	x19, x20, [sp, #16]
    1d78:	ldp	x21, x22, [sp, #32]
    1d7c:	ldp	x23, x24, [sp, #48]
    1d80:	ldp	x29, x30, [sp], #80
    1d84:	ret
    1d88:	add	w1, w21, #0x1
    1d8c:	cmp	w1, w2
    1d90:	b.gt	1db8 <gcry_mpi_add+0x1a0>
    1d94:	mov	w1, w24
    1d98:	mov	w0, w19
    1d9c:	mov	w24, w26
    1da0:	mov	w19, w21
    1da4:	mov	w26, w1
    1da8:	mov	w21, w0
    1dac:	ldr	x4, [x20, #16]
    1db0:	ldr	x25, [x23, #16]
    1db4:	b	1c68 <gcry_mpi_add+0x50>
    1db8:	bl	1c8 <_gcry_mpi_resize>
    1dbc:	mov	w1, w24
    1dc0:	mov	w0, w19
    1dc4:	mov	w24, w26
    1dc8:	mov	w19, w21
    1dcc:	mov	w26, w1
    1dd0:	mov	w21, w0
    1dd4:	ldr	x4, [x20, #16]
    1dd8:	ldr	x25, [x23, #16]
    1ddc:	b	1c68 <gcry_mpi_add+0x50>
    1de0:	bl	1c8 <_gcry_mpi_resize>
    1de4:	b	1c60 <gcry_mpi_add+0x48>
    1de8:	mov	x1, x25
    1dec:	mov	x2, x4
    1df0:	mov	w3, w21
    1df4:	mov	x0, x20
    1df8:	bl	7370 <_gcry_mpih_add_n>
    1dfc:	mov	w1, w0
    1e00:	cmp	w19, w21
    1e04:	b.eq	1ea4 <gcry_mpi_add+0x28c>  // b.none
    1e08:	sxtw	x3, w21
    1e0c:	sbfiz	x1, x21, #3, #32
    1e10:	add	x2, x25, x1
    1e14:	add	x1, x20, x1
    1e18:	add	x2, x2, #0x8
    1e1c:	add	x1, x1, #0x8
    1e20:	ldr	x4, [x25, x3, lsl #3]
    1e24:	sub	w21, w19, w21
    1e28:	adds	x0, x0, x4
    1e2c:	str	x0, [x20, x3, lsl #3]
    1e30:	b.cs	1ee0 <gcry_mpi_add+0x2c8>  // b.hs, b.nlast
    1e34:	cmp	x1, x2
    1e38:	b.eq	1e9c <gcry_mpi_add+0x284>  // b.none
    1e3c:	sub	w7, w21, #0x1
    1e40:	cmp	w7, #0x0
    1e44:	b.le	1e9c <gcry_mpi_add+0x284>
    1e48:	orr	x3, x2, x1
    1e4c:	add	x0, x1, #0xf
    1e50:	sub	x0, x0, x2
    1e54:	sub	w21, w21, #0x2
    1e58:	tst	x3, #0xf
    1e5c:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    1e60:	ccmp	w21, #0xb, #0x0, hi  // hi = pmore
    1e64:	b.ls	2080 <gcry_mpi_add+0x468>  // b.plast
    1e68:	lsr	w6, w7, #1
    1e6c:	mov	x0, x2
    1e70:	mov	x3, x1
    1e74:	add	x6, x2, w6, uxtw #4
    1e78:	ldp	x4, x5, [x0], #16
    1e7c:	stp	x4, x5, [x3], #16
    1e80:	cmp	x0, x6
    1e84:	b.ne	1e78 <gcry_mpi_add+0x260>  // b.any
    1e88:	and	w0, w7, #0xfffffffe
    1e8c:	tbz	w7, #0, 1e9c <gcry_mpi_add+0x284>
    1e90:	sxtw	x0, w0
    1e94:	ldr	x2, [x2, x0, lsl #3]
    1e98:	str	x2, [x1, x0, lsl #3]
    1e9c:	mov	w1, #0x0                   	// #0
    1ea0:	mov	x0, #0x0                   	// #0
    1ea4:	cmp	w24, #0x0
    1ea8:	str	x0, [x20, w19, sxtw #3]
    1eac:	cset	w24, ne  // ne = any
    1eb0:	add	w19, w19, w1
    1eb4:	ldp	x25, x26, [sp, #64]
    1eb8:	stp	w19, w24, [x22, #4]
    1ebc:	ldp	x19, x20, [sp, #16]
    1ec0:	ldp	x21, x22, [sp, #32]
    1ec4:	ldp	x23, x24, [sp, #48]
    1ec8:	ldp	x29, x30, [sp], #80
    1ecc:	ret
    1ed0:	ldr	x0, [x2], #8
    1ed4:	add	x0, x0, #0x1
    1ed8:	str	x0, [x1], #8
    1edc:	cbnz	x0, 1e34 <gcry_mpi_add+0x21c>
    1ee0:	subs	w21, w21, #0x1
    1ee4:	b.ne	1ed0 <gcry_mpi_add+0x2b8>  // b.any
    1ee8:	mov	w1, #0x1                   	// #1
    1eec:	mov	x0, #0x1                   	// #1
    1ef0:	b	1ea4 <gcry_mpi_add+0x28c>
    1ef4:	mov	x2, x4
    1ef8:	mov	w3, w21
    1efc:	mov	x1, x25
    1f00:	mov	x0, x20
    1f04:	bl	73b8 <_gcry_mpih_sub_n>
    1f08:	sxtw	x4, w21
    1f0c:	sbfiz	x1, x21, #3, #32
    1f10:	add	x2, x25, x1
    1f14:	add	x1, x20, x1
    1f18:	sub	w21, w19, w21
    1f1c:	add	x2, x2, #0x8
    1f20:	ldr	x3, [x25, x4, lsl #3]
    1f24:	add	x1, x1, #0x8
    1f28:	subs	x5, x3, x0
    1f2c:	str	x5, [x20, x4, lsl #3]
    1f30:	cmp	x3, x0
    1f34:	b.cc	1fe8 <gcry_mpi_add+0x3d0>  // b.lo, b.ul, b.last
    1f38:	cmp	x1, x2
    1f3c:	b.eq	1fa4 <gcry_mpi_add+0x38c>  // b.none
    1f40:	sub	w7, w21, #0x1
    1f44:	cmp	w7, #0x0
    1f48:	b.le	1fa4 <gcry_mpi_add+0x38c>
    1f4c:	orr	x3, x1, x2
    1f50:	add	x0, x1, #0xf
    1f54:	sub	x0, x0, x2
    1f58:	sub	w21, w21, #0x2
    1f5c:	tst	x3, #0xf
    1f60:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    1f64:	ccmp	w21, #0xb, #0x0, hi  // hi = pmore
    1f68:	b.ls	2060 <gcry_mpi_add+0x448>  // b.plast
    1f6c:	lsr	w6, w7, #1
    1f70:	mov	x0, x2
    1f74:	mov	x3, x1
    1f78:	add	x6, x2, w6, uxtw #4
    1f7c:	nop
    1f80:	ldp	x4, x5, [x0], #16
    1f84:	stp	x4, x5, [x3], #16
    1f88:	cmp	x0, x6
    1f8c:	b.ne	1f80 <gcry_mpi_add+0x368>  // b.any
    1f90:	and	w0, w7, #0xfffffffe
    1f94:	tbz	w7, #0, 1fa4 <gcry_mpi_add+0x38c>
    1f98:	sxtw	x0, w0
    1f9c:	ldr	x2, [x2, x0, lsl #3]
    1fa0:	str	x2, [x1, x0, lsl #3]
    1fa4:	sub	x20, x20, #0x8
    1fa8:	cmp	w19, #0x0
    1fac:	sxtw	x1, w19
    1fb0:	b.gt	1fc8 <gcry_mpi_add+0x3b0>
    1fb4:	b	1cc8 <gcry_mpi_add+0xb0>
    1fb8:	sub	w19, w1, #0x1
    1fbc:	sub	x1, x1, #0x1
    1fc0:	cmp	w1, #0x0
    1fc4:	b.le	1cc8 <gcry_mpi_add+0xb0>
    1fc8:	ldr	x0, [x20, x1, lsl #3]
    1fcc:	mov	w19, w1
    1fd0:	cbz	x0, 1fb8 <gcry_mpi_add+0x3a0>
    1fd4:	b	1cc8 <gcry_mpi_add+0xb0>
    1fd8:	ldr	x0, [x2], #8
    1fdc:	sub	x3, x0, #0x1
    1fe0:	str	x3, [x1], #8
    1fe4:	cbnz	x0, 1f38 <gcry_mpi_add+0x320>
    1fe8:	subs	w21, w21, #0x1
    1fec:	b.ne	1fd8 <gcry_mpi_add+0x3c0>  // b.any
    1ff0:	b	1fa4 <gcry_mpi_add+0x38c>
    1ff4:	mov	x0, #0x0                   	// #0
    1ff8:	ldr	x1, [x25, x0, lsl #3]
    1ffc:	str	x1, [x20, x0, lsl #3]
    2000:	add	x0, x0, #0x1
    2004:	cmp	w19, w0
    2008:	b.gt	1ff8 <gcry_mpi_add+0x3e0>
    200c:	b	1cc8 <gcry_mpi_add+0xb0>
    2010:	mov	x2, x25
    2014:	mov	x1, x4
    2018:	mov	w3, w19
    201c:	mov	x0, x20
    2020:	bl	73b8 <_gcry_mpih_sub_n>
    2024:	cmp	w19, #0x0
    2028:	b.le	2054 <gcry_mpi_add+0x43c>
    202c:	sxtw	x0, w19
    2030:	sub	x20, x20, #0x8
    2034:	b	2048 <gcry_mpi_add+0x430>
    2038:	sub	w19, w0, #0x1
    203c:	sub	x0, x0, #0x1
    2040:	cmp	w0, #0x0
    2044:	b.le	2054 <gcry_mpi_add+0x43c>
    2048:	ldr	x1, [x20, x0, lsl #3]
    204c:	mov	w19, w0
    2050:	cbz	x1, 2038 <gcry_mpi_add+0x420>
    2054:	cmp	w24, #0x0
    2058:	cset	w24, eq  // eq = none
    205c:	b	1cc8 <gcry_mpi_add+0xb0>
    2060:	mov	x0, #0x0                   	// #0
    2064:	nop
    2068:	ldr	x3, [x2, x0, lsl #3]
    206c:	str	x3, [x1, x0, lsl #3]
    2070:	add	x0, x0, #0x1
    2074:	cmp	w7, w0
    2078:	b.gt	2068 <gcry_mpi_add+0x450>
    207c:	b	1fa4 <gcry_mpi_add+0x38c>
    2080:	mov	x0, #0x0                   	// #0
    2084:	nop
    2088:	ldr	x3, [x2, x0, lsl #3]
    208c:	str	x3, [x1, x0, lsl #3]
    2090:	add	x0, x0, #0x1
    2094:	cmp	w7, w0
    2098:	b.gt	2088 <gcry_mpi_add+0x470>
    209c:	b	1e9c <gcry_mpi_add+0x284>

00000000000020a0 <gcry_mpi_sub_ui>:
    20a0:	stp	x29, x30, [sp, #-64]!
    20a4:	mov	x29, sp
    20a8:	stp	x19, x20, [sp, #16]
    20ac:	mov	x19, x0
    20b0:	ldr	w20, [x1, #4]
    20b4:	stp	x21, x22, [sp, #32]
    20b8:	mov	x22, x1
    20bc:	mov	x21, x2
    20c0:	ldr	w2, [x0]
    20c4:	add	w1, w20, #0x1
    20c8:	str	x23, [sp, #48]
    20cc:	cmp	w2, w1
    20d0:	ldr	w23, [x22, #8]
    20d4:	b.lt	21e4 <gcry_mpi_sub_ui+0x144>  // b.tstop
    20d8:	ldr	x4, [x19, #16]
    20dc:	cbnz	w20, 2108 <gcry_mpi_sub_ui+0x68>
    20e0:	cmp	x21, #0x0
    20e4:	mov	w23, #0x1                   	// #1
    20e8:	cset	w20, ne  // ne = any
    20ec:	str	x21, [x4]
    20f0:	ldp	x21, x22, [sp, #32]
    20f4:	stp	w20, w23, [x19, #4]
    20f8:	ldp	x19, x20, [sp, #16]
    20fc:	ldr	x23, [sp, #48]
    2100:	ldp	x29, x30, [sp], #64
    2104:	ret
    2108:	ldr	x1, [x22, #16]
    210c:	ldr	x0, [x1]
    2110:	cbz	w23, 21ec <gcry_mpi_sub_ui+0x14c>
    2114:	mov	x2, x4
    2118:	adds	x21, x21, x0
    211c:	add	x1, x1, #0x8
    2120:	mov	w3, w20
    2124:	str	x21, [x2], #8
    2128:	b.cs	21d0 <gcry_mpi_sub_ui+0x130>  // b.hs, b.nlast
    212c:	cmp	x2, x1
    2130:	b.eq	2194 <gcry_mpi_sub_ui+0xf4>  // b.none
    2134:	sub	w8, w3, #0x1
    2138:	cmp	w8, #0x0
    213c:	b.le	2194 <gcry_mpi_sub_ui+0xf4>
    2140:	orr	x5, x2, x1
    2144:	add	x0, x2, #0xf
    2148:	sub	x0, x0, x1
    214c:	sub	w3, w3, #0x2
    2150:	tst	x5, #0xf
    2154:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    2158:	ccmp	w3, #0xb, #0x0, hi  // hi = pmore
    215c:	b.ls	22e8 <gcry_mpi_sub_ui+0x248>  // b.plast
    2160:	lsr	w5, w8, #1
    2164:	mov	x0, x1
    2168:	mov	x3, x2
    216c:	add	x5, x1, w5, uxtw #4
    2170:	ldp	x6, x7, [x0], #16
    2174:	stp	x6, x7, [x3], #16
    2178:	cmp	x0, x5
    217c:	b.ne	2170 <gcry_mpi_sub_ui+0xd0>  // b.any
    2180:	and	w0, w8, #0xfffffffe
    2184:	tbz	w8, #0, 2194 <gcry_mpi_sub_ui+0xf4>
    2188:	sxtw	x0, w0
    218c:	ldr	x1, [x1, x0, lsl #3]
    2190:	str	x1, [x2, x0, lsl #3]
    2194:	mov	w0, #0x0                   	// #0
    2198:	mov	x1, #0x0                   	// #0
    219c:	str	x1, [x4, w20, sxtw #3]
    21a0:	mov	w23, #0x0                   	// #0
    21a4:	add	w20, w20, w0
    21a8:	ldp	x21, x22, [sp, #32]
    21ac:	stp	w20, w23, [x19, #4]
    21b0:	ldp	x19, x20, [sp, #16]
    21b4:	ldr	x23, [sp, #48]
    21b8:	ldp	x29, x30, [sp], #64
    21bc:	ret
    21c0:	ldr	x0, [x1], #8
    21c4:	add	x0, x0, #0x1
    21c8:	str	x0, [x2], #8
    21cc:	cbnz	x0, 212c <gcry_mpi_sub_ui+0x8c>
    21d0:	subs	w3, w3, #0x1
    21d4:	b.ne	21c0 <gcry_mpi_sub_ui+0x120>  // b.any
    21d8:	mov	w0, #0x1                   	// #1
    21dc:	mov	x1, #0x1                   	// #1
    21e0:	b	219c <gcry_mpi_sub_ui+0xfc>
    21e4:	bl	1c8 <_gcry_mpi_resize>
    21e8:	b	20d8 <gcry_mpi_sub_ui+0x38>
    21ec:	cmp	w20, #0x1
    21f0:	b.eq	22c4 <gcry_mpi_sub_ui+0x224>  // b.none
    21f4:	mov	x2, x4
    21f8:	subs	x3, x0, x21
    21fc:	cmp	x0, x21
    2200:	add	x1, x1, #0x8
    2204:	mov	w0, w20
    2208:	str	x3, [x2], #8
    220c:	b.cc	22b8 <gcry_mpi_sub_ui+0x218>  // b.lo, b.ul, b.last
    2210:	cmp	x2, x1
    2214:	b.eq	227c <gcry_mpi_sub_ui+0x1dc>  // b.none
    2218:	sub	w8, w0, #0x1
    221c:	cmp	w8, #0x0
    2220:	b.le	227c <gcry_mpi_sub_ui+0x1dc>
    2224:	orr	x5, x1, x2
    2228:	add	x3, x2, #0xf
    222c:	sub	x3, x3, x1
    2230:	sub	w0, w0, #0x2
    2234:	tst	x5, #0xf
    2238:	ccmp	x3, #0x1e, #0x0, eq  // eq = none
    223c:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    2240:	b.ls	2308 <gcry_mpi_sub_ui+0x268>  // b.plast
    2244:	lsr	w5, w8, #1
    2248:	mov	x0, x1
    224c:	mov	x3, x2
    2250:	add	x5, x1, w5, uxtw #4
    2254:	nop
    2258:	ldp	x6, x7, [x0], #16
    225c:	stp	x6, x7, [x3], #16
    2260:	cmp	x0, x5
    2264:	b.ne	2258 <gcry_mpi_sub_ui+0x1b8>  // b.any
    2268:	and	w0, w8, #0xfffffffe
    226c:	tbz	w8, #0, 227c <gcry_mpi_sub_ui+0x1dc>
    2270:	sxtw	x0, w0
    2274:	ldr	x1, [x1, x0, lsl #3]
    2278:	str	x1, [x2, x0, lsl #3]
    227c:	add	x4, x4, w20, sxtw #3
    2280:	ldp	x21, x22, [sp, #32]
    2284:	ldur	x0, [x4, #-8]
    2288:	cmp	x0, #0x0
    228c:	cset	w0, eq  // eq = none
    2290:	sub	w20, w20, w0
    2294:	stp	w20, w23, [x19, #4]
    2298:	ldp	x19, x20, [sp, #16]
    229c:	ldr	x23, [sp, #48]
    22a0:	ldp	x29, x30, [sp], #64
    22a4:	ret
    22a8:	ldr	x3, [x1], #8
    22ac:	sub	x5, x3, #0x1
    22b0:	str	x5, [x2], #8
    22b4:	cbnz	x3, 2210 <gcry_mpi_sub_ui+0x170>
    22b8:	subs	w0, w0, #0x1
    22bc:	b.ne	22a8 <gcry_mpi_sub_ui+0x208>  // b.any
    22c0:	b	227c <gcry_mpi_sub_ui+0x1dc>
    22c4:	cmp	x21, x0
    22c8:	b.ls	22dc <gcry_mpi_sub_ui+0x23c>  // b.plast
    22cc:	sub	x21, x21, x0
    22d0:	mov	w23, w20
    22d4:	str	x21, [x4]
    22d8:	b	20f0 <gcry_mpi_sub_ui+0x50>
    22dc:	sub	x21, x0, x21
    22e0:	str	x21, [x4]
    22e4:	b	227c <gcry_mpi_sub_ui+0x1dc>
    22e8:	mov	x0, #0x0                   	// #0
    22ec:	nop
    22f0:	ldr	x3, [x1, x0, lsl #3]
    22f4:	str	x3, [x2, x0, lsl #3]
    22f8:	add	x0, x0, #0x1
    22fc:	cmp	w8, w0
    2300:	b.gt	22f0 <gcry_mpi_sub_ui+0x250>
    2304:	b	2194 <gcry_mpi_sub_ui+0xf4>
    2308:	mov	x0, #0x0                   	// #0
    230c:	nop
    2310:	ldr	x3, [x1, x0, lsl #3]
    2314:	str	x3, [x2, x0, lsl #3]
    2318:	add	x0, x0, #0x1
    231c:	cmp	w8, w0
    2320:	b.gt	2310 <gcry_mpi_sub_ui+0x270>
    2324:	b	227c <gcry_mpi_sub_ui+0x1dc>

0000000000002328 <gcry_mpi_sub>:
    2328:	stp	x29, x30, [sp, #-48]!
    232c:	mov	x29, sp
    2330:	stp	x19, x20, [sp, #16]
    2334:	mov	x20, x0
    2338:	mov	x0, x2
    233c:	str	x21, [sp, #32]
    2340:	mov	x21, x1
    2344:	bl	560 <_gcry_mpi_copy>
    2348:	mov	x19, x0
    234c:	mov	x1, x21
    2350:	mov	x0, x20
    2354:	mov	x2, x19
    2358:	ldr	w3, [x19, #8]
    235c:	cmp	w3, #0x0
    2360:	cset	w3, eq  // eq = none
    2364:	str	w3, [x19, #8]
    2368:	bl	1c18 <gcry_mpi_add>
    236c:	mov	x0, x19
    2370:	ldp	x19, x20, [sp, #16]
    2374:	ldr	x21, [sp, #32]
    2378:	ldp	x29, x30, [sp], #48
    237c:	b	3f0 <_gcry_mpi_free>

0000000000002380 <gcry_mpi_addm>:
    2380:	stp	x29, x30, [sp, #-32]!
    2384:	mov	x29, sp
    2388:	stp	x19, x20, [sp, #16]
    238c:	mov	x20, x3
    2390:	mov	x19, x0
    2394:	bl	1c18 <gcry_mpi_add>
    2398:	mov	x2, x20
    239c:	mov	x1, x19
    23a0:	mov	x0, x19
    23a4:	ldp	x19, x20, [sp, #16]
    23a8:	ldp	x29, x30, [sp], #32
    23ac:	b	3770 <_gcry_mpi_fdiv_r>

00000000000023b0 <gcry_mpi_subm>:
    23b0:	stp	x29, x30, [sp, #-48]!
    23b4:	mov	x29, sp
    23b8:	stp	x19, x20, [sp, #16]
    23bc:	mov	x20, x0
    23c0:	mov	x0, x2
    23c4:	stp	x21, x22, [sp, #32]
    23c8:	mov	x21, x3
    23cc:	mov	x22, x1
    23d0:	bl	560 <_gcry_mpi_copy>
    23d4:	mov	x19, x0
    23d8:	mov	x1, x22
    23dc:	mov	x2, x0
    23e0:	mov	x0, x20
    23e4:	ldr	w3, [x19, #8]
    23e8:	cmp	w3, #0x0
    23ec:	cset	w3, eq  // eq = none
    23f0:	str	w3, [x19, #8]
    23f4:	bl	1c18 <gcry_mpi_add>
    23f8:	mov	x0, x19
    23fc:	bl	3f0 <_gcry_mpi_free>
    2400:	mov	x2, x21
    2404:	mov	x1, x20
    2408:	mov	x0, x20
    240c:	ldp	x19, x20, [sp, #16]
    2410:	ldp	x21, x22, [sp, #32]
    2414:	ldp	x29, x30, [sp], #48
    2418:	b	3770 <_gcry_mpi_fdiv_r>
    241c:	nop

0000000000002420 <gcry_mpi_mul_ui>:
    2420:	stp	x29, x30, [sp, #-64]!
    2424:	mov	x29, sp
    2428:	stp	x21, x22, [sp, #32]
    242c:	ldr	w22, [x1, #4]
    2430:	stp	x19, x20, [sp, #16]
    2434:	mov	x19, x0
    2438:	cmp	w22, #0x0
    243c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    2440:	b.eq	24cc <gcry_mpi_mul_ui+0xac>  // b.none
    2444:	mov	x20, x1
    2448:	ldr	w1, [x0]
    244c:	stp	x23, x24, [sp, #48]
    2450:	add	w23, w22, #0x1
    2454:	mov	x21, x2
    2458:	ldr	w24, [x20, #8]
    245c:	cmp	w1, w23
    2460:	b.lt	24a4 <gcry_mpi_mul_ui+0x84>  // b.tstop
    2464:	ldr	x1, [x20, #16]
    2468:	mov	x3, x21
    246c:	ldr	x20, [x19, #16]
    2470:	mov	w2, w22
    2474:	mov	x0, x20
    2478:	bl	71d8 <_gcry_mpih_mul_1>
    247c:	cbnz	x0, 2498 <gcry_mpi_mul_ui+0x78>
    2480:	stp	w22, w24, [x19, #4]
    2484:	ldp	x19, x20, [sp, #16]
    2488:	ldp	x21, x22, [sp, #32]
    248c:	ldp	x23, x24, [sp, #48]
    2490:	ldp	x29, x30, [sp], #64
    2494:	ret
    2498:	str	x0, [x20, w22, sxtw #3]
    249c:	mov	w22, w23
    24a0:	b	2480 <gcry_mpi_mul_ui+0x60>
    24a4:	mov	w1, w23
    24a8:	bl	1c8 <_gcry_mpi_resize>
    24ac:	ldr	x1, [x20, #16]
    24b0:	mov	x3, x21
    24b4:	ldr	x20, [x19, #16]
    24b8:	mov	w2, w22
    24bc:	mov	x0, x20
    24c0:	bl	71d8 <_gcry_mpih_mul_1>
    24c4:	cbz	x0, 2480 <gcry_mpi_mul_ui+0x60>
    24c8:	b	2498 <gcry_mpi_mul_ui+0x78>
    24cc:	stur	xzr, [x0, #4]
    24d0:	ldp	x19, x20, [sp, #16]
    24d4:	ldp	x21, x22, [sp, #32]
    24d8:	ldp	x29, x30, [sp], #64
    24dc:	ret

00000000000024e0 <gcry_mpi_mul_2exp>:
    24e0:	stp	x29, x30, [sp, #-80]!
    24e4:	mov	x29, sp
    24e8:	stp	x19, x20, [sp, #16]
    24ec:	mov	x20, x0
    24f0:	ldr	w19, [x1, #4]
    24f4:	cbz	w19, 2664 <gcry_mpi_mul_2exp+0x184>
    24f8:	stp	x21, x22, [sp, #32]
    24fc:	lsr	x22, x2, #6
    2500:	mov	x21, x2
    2504:	stp	x23, x24, [sp, #48]
    2508:	mov	x23, x1
    250c:	add	w24, w19, w22
    2510:	ldr	w1, [x0]
    2514:	stp	x25, x26, [sp, #64]
    2518:	add	w26, w24, #0x1
    251c:	ldr	w25, [x23, #8]
    2520:	cmp	w1, w26
    2524:	b.lt	264c <gcry_mpi_mul_2exp+0x16c>  // b.tstop
    2528:	ands	x3, x21, #0x3f
    252c:	ldr	x21, [x20, #16]
    2530:	b.ne	262c <gcry_mpi_mul_2exp+0x14c>  // b.any
    2534:	subs	w19, w19, #0x1
    2538:	b.mi	2558 <gcry_mpi_mul_2exp+0x78>  // b.first
    253c:	ldr	x3, [x23, #16]
    2540:	sxtw	x1, w19
    2544:	add	x0, x21, w22, sxtw #3
    2548:	ldr	x2, [x3, x1, lsl #3]
    254c:	str	x2, [x0, x1, lsl #3]
    2550:	sub	x1, x1, #0x1
    2554:	tbz	w1, #31, 2548 <gcry_mpi_mul_2exp+0x68>
    2558:	cmp	w22, #0x0
    255c:	b.le	2610 <gcry_mpi_mul_2exp+0x130>
    2560:	sub	w0, w22, #0x1
    2564:	ubfx	w1, w21, #3, #1
    2568:	cmp	w0, #0x5
    256c:	mov	w0, #0x0                   	// #0
    2570:	b.ls	25b4 <gcry_mpi_mul_2exp+0xd4>  // b.plast
    2574:	cbz	w1, 2580 <gcry_mpi_mul_2exp+0xa0>
    2578:	mov	w0, #0x1                   	// #1
    257c:	str	xzr, [x21]
    2580:	sub	w3, w22, w1
    2584:	mov	w1, w1
    2588:	lsr	w2, w3, #1
    258c:	add	x1, x21, x1, lsl #3
    2590:	add	x2, x1, w2, uxtw #4
    2594:	nop
    2598:	stp	xzr, xzr, [x1], #16
    259c:	cmp	x1, x2
    25a0:	b.ne	2598 <gcry_mpi_mul_2exp+0xb8>  // b.any
    25a4:	and	w1, w3, #0xfffffffe
    25a8:	add	w0, w1, w0
    25ac:	cmp	w3, w1
    25b0:	b.eq	2610 <gcry_mpi_mul_2exp+0x130>  // b.none
    25b4:	str	xzr, [x21, w0, sxtw #3]
    25b8:	add	w1, w0, #0x1
    25bc:	cmp	w22, w1
    25c0:	sbfiz	x1, x0, #3, #32
    25c4:	b.le	2610 <gcry_mpi_mul_2exp+0x130>
    25c8:	add	x21, x21, x1
    25cc:	add	w1, w0, #0x2
    25d0:	cmp	w22, w1
    25d4:	str	xzr, [x21, #8]
    25d8:	b.le	2610 <gcry_mpi_mul_2exp+0x130>
    25dc:	str	xzr, [x21, #16]
    25e0:	add	w1, w0, #0x3
    25e4:	cmp	w22, w1
    25e8:	b.le	2610 <gcry_mpi_mul_2exp+0x130>
    25ec:	str	xzr, [x21, #24]
    25f0:	add	w1, w0, #0x4
    25f4:	cmp	w22, w1
    25f8:	b.le	2610 <gcry_mpi_mul_2exp+0x130>
    25fc:	str	xzr, [x21, #32]
    2600:	add	w0, w0, #0x5
    2604:	cmp	w22, w0
    2608:	b.le	2610 <gcry_mpi_mul_2exp+0x130>
    260c:	str	xzr, [x21, #40]
    2610:	ldp	x21, x22, [sp, #32]
    2614:	stp	w24, w25, [x20, #4]
    2618:	ldp	x19, x20, [sp, #16]
    261c:	ldp	x23, x24, [sp, #48]
    2620:	ldp	x25, x26, [sp, #64]
    2624:	ldp	x29, x30, [sp], #80
    2628:	ret
    262c:	ldr	x1, [x23, #16]
    2630:	mov	w2, w19
    2634:	add	x0, x21, w22, sxtw #3
    2638:	bl	5bb0 <_gcry_mpih_lshift>
    263c:	cbz	x0, 2558 <gcry_mpi_mul_2exp+0x78>
    2640:	str	x0, [x21, w24, sxtw #3]
    2644:	mov	w24, w26
    2648:	b	2558 <gcry_mpi_mul_2exp+0x78>
    264c:	mov	w1, w26
    2650:	bl	1c8 <_gcry_mpi_resize>
    2654:	ands	x3, x21, #0x3f
    2658:	ldr	x21, [x20, #16]
    265c:	b.eq	2534 <gcry_mpi_mul_2exp+0x54>  // b.none
    2660:	b	262c <gcry_mpi_mul_2exp+0x14c>
    2664:	stur	xzr, [x0, #4]
    2668:	ldp	x19, x20, [sp, #16]
    266c:	ldp	x29, x30, [sp], #80
    2670:	ret
    2674:	nop

0000000000002678 <gcry_mpi_mul>:
    2678:	stp	x29, x30, [sp, #-96]!
    267c:	mov	x4, x2
    2680:	mov	x29, sp
    2684:	ldr	w6, [x1, #12]
    2688:	stp	x19, x20, [sp, #16]
    268c:	mov	x19, x0
    2690:	ldr	w20, [x1, #4]
    2694:	ldr	w0, [x2, #12]
    2698:	and	w8, w6, #0x1
    269c:	stp	x21, x22, [sp, #32]
    26a0:	ldr	w21, [x2, #4]
    26a4:	stp	x23, x24, [sp, #48]
    26a8:	and	w7, w0, #0x1
    26ac:	ldr	w2, [x1, #8]
    26b0:	stp	x25, x26, [sp, #64]
    26b4:	cmp	w20, w21
    26b8:	ldr	w5, [x4, #8]
    26bc:	stp	x27, x28, [sp, #80]
    26c0:	ldr	x23, [x1, #16]
    26c4:	ldr	x22, [x4, #16]
    26c8:	b.lt	26fc <gcry_mpi_mul+0x84>  // b.tstop
    26cc:	mov	w9, w7
    26d0:	mov	w4, w5
    26d4:	mov	x3, x22
    26d8:	mov	w1, w21
    26dc:	mov	w7, w8
    26e0:	mov	w5, w2
    26e4:	mov	x22, x23
    26e8:	mov	w21, w20
    26ec:	mov	w8, w9
    26f0:	mov	w2, w4
    26f4:	mov	x23, x3
    26f8:	mov	w20, w1
    26fc:	ldr	w3, [x19, #12]
    2700:	eor	w25, w5, w2
    2704:	add	w26, w21, w20
    2708:	and	w27, w3, #0x1
    270c:	tbnz	w3, #0, 274c <gcry_mpi_mul+0xd4>
    2710:	orr	w0, w0, w6
    2714:	tbz	w0, #0, 274c <gcry_mpi_mul+0xd4>
    2718:	mov	w0, w26
    271c:	mov	w1, #0x1                   	// #1
    2720:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2724:	mov	x28, x0
    2728:	cbnz	w20, 2858 <gcry_mpi_mul+0x1e0>
    272c:	mov	w1, #0x0                   	// #0
    2730:	mov	w0, #0x0                   	// #0
    2734:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2738:	mov	x24, x0
    273c:	mov	x0, x28
    2740:	mov	w1, #0x0                   	// #0
    2744:	bl	138 <_gcry_mpi_free_limb_space>
    2748:	b	27bc <gcry_mpi_mul+0x144>
    274c:	ldr	w0, [x19]
    2750:	ldr	x24, [x19, #16]
    2754:	cmp	w0, w26
    2758:	b.lt	2798 <gcry_mpi_mul+0x120>  // b.tstop
    275c:	cmp	x22, x24
    2760:	b.eq	28f8 <gcry_mpi_mul+0x280>  // b.none
    2764:	cmp	x23, x24
    2768:	b.eq	29c4 <gcry_mpi_mul+0x34c>  // b.none
    276c:	mov	w28, #0x0                   	// #0
    2770:	mov	x27, #0x0                   	// #0
    2774:	cbnz	w20, 2808 <gcry_mpi_mul+0x190>
    2778:	stp	wzr, w25, [x19, #4]
    277c:	ldp	x19, x20, [sp, #16]
    2780:	ldp	x21, x22, [sp, #32]
    2784:	ldp	x23, x24, [sp, #48]
    2788:	ldp	x25, x26, [sp, #64]
    278c:	ldp	x27, x28, [sp, #80]
    2790:	ldp	x29, x30, [sp], #96
    2794:	ret
    2798:	cmp	x22, x24
    279c:	ccmp	x23, x24, #0x4, ne  // ne = any
    27a0:	b.ne	27ec <gcry_mpi_mul+0x174>  // b.any
    27a4:	mov	w1, w27
    27a8:	mov	w0, w26
    27ac:	mov	w27, #0x0                   	// #0
    27b0:	bl	f0 <_gcry_mpi_alloc_limb_space>
    27b4:	mov	x24, x0
    27b8:	cbnz	w20, 297c <gcry_mpi_mul+0x304>
    27bc:	mov	w2, w27
    27c0:	mov	x1, x24
    27c4:	mov	x0, x19
    27c8:	bl	168 <_gcry_mpi_assign_limb_space>
    27cc:	stp	w20, w25, [x19, #4]
    27d0:	ldp	x19, x20, [sp, #16]
    27d4:	ldp	x21, x22, [sp, #32]
    27d8:	ldp	x23, x24, [sp, #48]
    27dc:	ldp	x25, x26, [sp, #64]
    27e0:	ldp	x27, x28, [sp, #80]
    27e4:	ldp	x29, x30, [sp], #96
    27e8:	ret
    27ec:	mov	w1, w26
    27f0:	mov	x0, x19
    27f4:	mov	w28, #0x0                   	// #0
    27f8:	bl	1c8 <_gcry_mpi_resize>
    27fc:	mov	x27, #0x0                   	// #0
    2800:	ldr	x24, [x19, #16]
    2804:	cbz	w20, 2778 <gcry_mpi_mul+0x100>
    2808:	mov	w4, w20
    280c:	mov	x3, x23
    2810:	mov	w2, w21
    2814:	mov	x1, x22
    2818:	mov	x0, x24
    281c:	bl	6b58 <_gcry_mpih_mul>
    2820:	cmp	x0, #0x0
    2824:	cset	w20, eq  // eq = none
    2828:	sub	w20, w26, w20
    282c:	stp	w20, w25, [x19, #4]
    2830:	cbz	x27, 277c <gcry_mpi_mul+0x104>
    2834:	mov	w1, w28
    2838:	mov	x0, x27
    283c:	ldp	x19, x20, [sp, #16]
    2840:	ldp	x21, x22, [sp, #32]
    2844:	ldp	x23, x24, [sp, #48]
    2848:	ldp	x25, x26, [sp, #64]
    284c:	ldp	x27, x28, [sp, #80]
    2850:	ldp	x29, x30, [sp], #96
    2854:	b	138 <_gcry_mpi_free_limb_space>
    2858:	mov	w4, w20
    285c:	mov	x3, x23
    2860:	mov	w2, w21
    2864:	mov	x1, x22
    2868:	bl	6b58 <_gcry_mpih_mul>
    286c:	cmp	x0, #0x0
    2870:	cset	w20, eq  // eq = none
    2874:	mov	w1, #0x0                   	// #0
    2878:	sub	w20, w26, w20
    287c:	mov	w0, w20
    2880:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2884:	cmp	w20, #0x0
    2888:	mov	x24, x0
    288c:	mov	w27, w20
    2890:	b.le	273c <gcry_mpi_mul+0xc4>
    2894:	orr	x2, x24, x28
    2898:	add	x1, x24, #0xf
    289c:	sub	x1, x1, x28
    28a0:	sub	w0, w20, #0x1
    28a4:	tst	x2, #0xf
    28a8:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    28ac:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    28b0:	b.ls	2a40 <gcry_mpi_mul+0x3c8>  // b.plast
    28b4:	lsr	w4, w20, #1
    28b8:	mov	x0, x24
    28bc:	mov	x1, x28
    28c0:	add	x4, x24, w4, uxtw #4
    28c4:	nop
    28c8:	ldp	x2, x3, [x1], #16
    28cc:	stp	x2, x3, [x0], #16
    28d0:	cmp	x0, x4
    28d4:	b.ne	28c8 <gcry_mpi_mul+0x250>  // b.any
    28d8:	and	w0, w20, #0xfffffffe
    28dc:	tbz	w20, #0, 273c <gcry_mpi_mul+0xc4>
    28e0:	ldr	x1, [x28, x0, lsl #3]
    28e4:	str	x1, [x24, x0, lsl #3]
    28e8:	mov	x0, x28
    28ec:	mov	w1, #0x0                   	// #0
    28f0:	bl	138 <_gcry_mpi_free_limb_space>
    28f4:	b	27bc <gcry_mpi_mul+0x144>
    28f8:	mov	w1, w7
    28fc:	mov	w0, w21
    2900:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2904:	mov	w28, w21
    2908:	cmp	x23, x24
    290c:	mov	x22, x0
    2910:	csel	x23, x23, x0, ne  // ne = any
    2914:	cmp	w21, #0x0
    2918:	b.le	2970 <gcry_mpi_mul+0x2f8>
    291c:	add	x1, x24, #0xf
    2920:	sub	w2, w21, #0x1
    2924:	sub	x1, x1, x0
    2928:	orr	x0, x24, x0
    292c:	cmp	x1, #0x1e
    2930:	and	x0, x0, #0xf
    2934:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    2938:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    293c:	b.ne	29a4 <gcry_mpi_mul+0x32c>  // b.any
    2940:	lsr	w4, w21, #1
    2944:	mov	x0, x24
    2948:	mov	x1, x22
    294c:	add	x4, x24, w4, uxtw #4
    2950:	ldp	x2, x3, [x0], #16
    2954:	stp	x2, x3, [x1], #16
    2958:	cmp	x0, x4
    295c:	b.ne	2950 <gcry_mpi_mul+0x2d8>  // b.any
    2960:	and	w0, w21, #0xfffffffe
    2964:	tbz	w21, #0, 2970 <gcry_mpi_mul+0x2f8>
    2968:	ldr	x1, [x24, x0, lsl #3]
    296c:	str	x1, [x22, x0, lsl #3]
    2970:	mov	x27, x22
    2974:	cbz	w20, 282c <gcry_mpi_mul+0x1b4>
    2978:	b	2808 <gcry_mpi_mul+0x190>
    297c:	mov	w4, w20
    2980:	mov	x3, x23
    2984:	mov	w2, w21
    2988:	mov	x1, x22
    298c:	bl	6b58 <_gcry_mpih_mul>
    2990:	cmp	x0, #0x0
    2994:	cset	w20, eq  // eq = none
    2998:	sub	w20, w26, w20
    299c:	mov	w27, w20
    29a0:	b	27bc <gcry_mpi_mul+0x144>
    29a4:	mov	x0, #0x0                   	// #0
    29a8:	ldr	x1, [x24, x0, lsl #3]
    29ac:	str	x1, [x22, x0, lsl #3]
    29b0:	add	x0, x0, #0x1
    29b4:	cmp	w21, w0
    29b8:	b.gt	29a8 <gcry_mpi_mul+0x330>
    29bc:	mov	x27, x22
    29c0:	b	2974 <gcry_mpi_mul+0x2fc>
    29c4:	mov	w1, w8
    29c8:	mov	w0, w20
    29cc:	bl	f0 <_gcry_mpi_alloc_limb_space>
    29d0:	mov	w28, w20
    29d4:	mov	x23, x0
    29d8:	cmp	w20, #0x0
    29dc:	b.le	2a84 <gcry_mpi_mul+0x40c>
    29e0:	add	x1, x24, #0xf
    29e4:	sub	w2, w20, #0x1
    29e8:	sub	x1, x1, x0
    29ec:	orr	x0, x24, x0
    29f0:	cmp	x1, #0x1e
    29f4:	and	x0, x0, #0xf
    29f8:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    29fc:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    2a00:	b.ne	2a60 <gcry_mpi_mul+0x3e8>  // b.any
    2a04:	lsr	w4, w20, #1
    2a08:	mov	x0, x24
    2a0c:	mov	x1, x23
    2a10:	add	x4, x24, w4, uxtw #4
    2a14:	nop
    2a18:	ldp	x2, x3, [x0], #16
    2a1c:	stp	x2, x3, [x1], #16
    2a20:	cmp	x0, x4
    2a24:	b.ne	2a18 <gcry_mpi_mul+0x3a0>  // b.any
    2a28:	and	w0, w20, #0xfffffffe
    2a2c:	tbz	w20, #0, 2a38 <gcry_mpi_mul+0x3c0>
    2a30:	ldr	x1, [x24, x0, lsl #3]
    2a34:	str	x1, [x23, x0, lsl #3]
    2a38:	mov	x27, x23
    2a3c:	b	2808 <gcry_mpi_mul+0x190>
    2a40:	mov	x0, #0x0                   	// #0
    2a44:	nop
    2a48:	ldr	x1, [x28, x0, lsl #3]
    2a4c:	str	x1, [x24, x0, lsl #3]
    2a50:	add	x0, x0, #0x1
    2a54:	cmp	w20, w0
    2a58:	b.gt	2a48 <gcry_mpi_mul+0x3d0>
    2a5c:	b	273c <gcry_mpi_mul+0xc4>
    2a60:	mov	x0, #0x0                   	// #0
    2a64:	nop
    2a68:	ldr	x1, [x24, x0, lsl #3]
    2a6c:	str	x1, [x23, x0, lsl #3]
    2a70:	add	x0, x0, #0x1
    2a74:	cmp	w20, w0
    2a78:	b.gt	2a68 <gcry_mpi_mul+0x3f0>
    2a7c:	mov	x27, x23
    2a80:	b	2808 <gcry_mpi_mul+0x190>
    2a84:	mov	x27, x0
    2a88:	cbz	w20, 282c <gcry_mpi_mul+0x1b4>
    2a8c:	b	2808 <gcry_mpi_mul+0x190>

0000000000002a90 <gcry_mpi_mulm>:
    2a90:	stp	x29, x30, [sp, #-112]!
    2a94:	mov	x4, x2
    2a98:	mov	x29, sp
    2a9c:	ldr	w6, [x1, #12]
    2aa0:	stp	x19, x20, [sp, #16]
    2aa4:	mov	x19, x0
    2aa8:	ldr	w20, [x1, #4]
    2aac:	ldr	w0, [x2, #12]
    2ab0:	and	w8, w6, #0x1
    2ab4:	stp	x21, x22, [sp, #32]
    2ab8:	mov	x22, x3
    2abc:	ldr	w21, [x2, #4]
    2ac0:	stp	x23, x24, [sp, #48]
    2ac4:	and	w7, w0, #0x1
    2ac8:	ldr	w2, [x1, #8]
    2acc:	stp	x25, x26, [sp, #64]
    2ad0:	cmp	w20, w21
    2ad4:	ldr	w5, [x4, #8]
    2ad8:	stp	x27, x28, [sp, #80]
    2adc:	ldr	x23, [x1, #16]
    2ae0:	ldr	x24, [x4, #16]
    2ae4:	b.lt	2b18 <gcry_mpi_mulm+0x88>  // b.tstop
    2ae8:	mov	w9, w7
    2aec:	mov	w4, w5
    2af0:	mov	x3, x24
    2af4:	mov	w1, w21
    2af8:	mov	w7, w8
    2afc:	mov	w5, w2
    2b00:	mov	x24, x23
    2b04:	mov	w21, w20
    2b08:	mov	w8, w9
    2b0c:	mov	w2, w4
    2b10:	mov	x23, x3
    2b14:	mov	w20, w1
    2b18:	ldr	w3, [x19, #12]
    2b1c:	eor	w25, w5, w2
    2b20:	add	w26, w21, w20
    2b24:	and	w2, w3, #0x1
    2b28:	tbnz	w3, #0, 2b80 <gcry_mpi_mulm+0xf0>
    2b2c:	orr	w0, w0, w6
    2b30:	tbz	w0, #0, 2b80 <gcry_mpi_mulm+0xf0>
    2b34:	mov	w0, w26
    2b38:	mov	w1, #0x1                   	// #1
    2b3c:	str	w2, [sp, #104]
    2b40:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2b44:	ldr	w2, [sp, #104]
    2b48:	mov	x28, x0
    2b4c:	cbnz	w20, 2c68 <gcry_mpi_mulm+0x1d8>
    2b50:	mov	w1, #0x0                   	// #0
    2b54:	mov	w0, #0x0                   	// #0
    2b58:	str	w2, [sp, #104]
    2b5c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2b60:	ldr	w2, [sp, #104]
    2b64:	mov	x27, x0
    2b68:	mov	x0, x28
    2b6c:	mov	w1, #0x0                   	// #0
    2b70:	str	w2, [sp, #104]
    2b74:	bl	138 <_gcry_mpi_free_limb_space>
    2b78:	ldr	w2, [sp, #104]
    2b7c:	b	2c00 <gcry_mpi_mulm+0x170>
    2b80:	ldr	w1, [x19]
    2b84:	ldr	x0, [x19, #16]
    2b88:	cmp	w26, w1
    2b8c:	b.gt	2bd8 <gcry_mpi_mulm+0x148>
    2b90:	cmp	x0, x24
    2b94:	b.eq	2d10 <gcry_mpi_mulm+0x280>  // b.none
    2b98:	cmp	x0, x23
    2b9c:	b.eq	2de0 <gcry_mpi_mulm+0x350>  // b.none
    2ba0:	mov	w28, #0x0                   	// #0
    2ba4:	mov	x27, #0x0                   	// #0
    2ba8:	cbnz	w20, 2c30 <gcry_mpi_mulm+0x1a0>
    2bac:	stp	wzr, w25, [x19, #4]
    2bb0:	mov	x2, x22
    2bb4:	mov	x1, x19
    2bb8:	mov	x0, x19
    2bbc:	ldp	x19, x20, [sp, #16]
    2bc0:	ldp	x21, x22, [sp, #32]
    2bc4:	ldp	x23, x24, [sp, #48]
    2bc8:	ldp	x25, x26, [sp, #64]
    2bcc:	ldp	x27, x28, [sp, #80]
    2bd0:	ldp	x29, x30, [sp], #112
    2bd4:	b	3770 <_gcry_mpi_fdiv_r>
    2bd8:	cmp	x0, x24
    2bdc:	ccmp	x0, x23, #0x4, ne  // ne = any
    2be0:	b.ne	2c14 <gcry_mpi_mulm+0x184>  // b.any
    2be4:	mov	w1, w2
    2be8:	mov	w0, w26
    2bec:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2bf0:	mov	x27, x0
    2bf4:	mov	w2, #0x0                   	// #0
    2bf8:	cbnz	w20, 2d9c <gcry_mpi_mulm+0x30c>
    2bfc:	nop
    2c00:	mov	x1, x27
    2c04:	mov	x0, x19
    2c08:	bl	168 <_gcry_mpi_assign_limb_space>
    2c0c:	stp	w20, w25, [x19, #4]
    2c10:	b	2bb0 <gcry_mpi_mulm+0x120>
    2c14:	mov	x0, x19
    2c18:	mov	w1, w26
    2c1c:	bl	1c8 <_gcry_mpi_resize>
    2c20:	mov	w28, #0x0                   	// #0
    2c24:	mov	x27, #0x0                   	// #0
    2c28:	ldr	x0, [x19, #16]
    2c2c:	cbz	w20, 2bac <gcry_mpi_mulm+0x11c>
    2c30:	mov	w4, w20
    2c34:	mov	x3, x23
    2c38:	mov	w2, w21
    2c3c:	mov	x1, x24
    2c40:	bl	6b58 <_gcry_mpih_mul>
    2c44:	cmp	x0, #0x0
    2c48:	cset	w20, eq  // eq = none
    2c4c:	sub	w20, w26, w20
    2c50:	stp	w20, w25, [x19, #4]
    2c54:	cbz	x27, 2bb0 <gcry_mpi_mulm+0x120>
    2c58:	mov	w1, w28
    2c5c:	mov	x0, x27
    2c60:	bl	138 <_gcry_mpi_free_limb_space>
    2c64:	b	2bb0 <gcry_mpi_mulm+0x120>
    2c68:	mov	w4, w20
    2c6c:	mov	w2, w21
    2c70:	mov	x3, x23
    2c74:	mov	x1, x24
    2c78:	bl	6b58 <_gcry_mpih_mul>
    2c7c:	cmp	x0, #0x0
    2c80:	cset	w20, eq  // eq = none
    2c84:	mov	w1, #0x0                   	// #0
    2c88:	sub	w20, w26, w20
    2c8c:	mov	w0, w20
    2c90:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2c94:	str	x0, [sp, #104]
    2c98:	cmp	w20, #0x0
    2c9c:	mov	w2, w20
    2ca0:	mov	x27, x0
    2ca4:	b.le	2b68 <gcry_mpi_mulm+0xd8>
    2ca8:	orr	x3, x27, x28
    2cac:	add	x1, x27, #0xf
    2cb0:	sub	x1, x1, x28
    2cb4:	sub	w0, w20, #0x1
    2cb8:	tst	x3, #0xf
    2cbc:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    2cc0:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    2cc4:	b.ls	2e5c <gcry_mpi_mulm+0x3cc>  // b.plast
    2cc8:	lsr	w3, w20, #1
    2ccc:	mov	x0, x28
    2cd0:	mov	x1, x27
    2cd4:	add	x3, x28, w3, uxtw #4
    2cd8:	ldp	x4, x5, [x0], #16
    2cdc:	stp	x4, x5, [x1], #16
    2ce0:	cmp	x0, x3
    2ce4:	b.ne	2cd8 <gcry_mpi_mulm+0x248>  // b.any
    2ce8:	and	w0, w20, #0xfffffffe
    2cec:	tbz	w20, #0, 2b68 <gcry_mpi_mulm+0xd8>
    2cf0:	ldr	x1, [x28, x0, lsl #3]
    2cf4:	str	x1, [x27, x0, lsl #3]
    2cf8:	mov	x0, x28
    2cfc:	mov	w1, #0x0                   	// #0
    2d00:	str	w2, [sp, #104]
    2d04:	bl	138 <_gcry_mpi_free_limb_space>
    2d08:	ldr	w2, [sp, #104]
    2d0c:	b	2c00 <gcry_mpi_mulm+0x170>
    2d10:	mov	w1, w7
    2d14:	mov	w0, w21
    2d18:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2d1c:	mov	w28, w21
    2d20:	cmp	x24, x23
    2d24:	mov	x2, x0
    2d28:	csel	x23, x23, x0, ne  // ne = any
    2d2c:	cmp	w21, #0x0
    2d30:	b.le	2d88 <gcry_mpi_mulm+0x2f8>
    2d34:	add	x1, x24, #0xf
    2d38:	sub	w3, w21, #0x1
    2d3c:	sub	x1, x1, x0
    2d40:	orr	x0, x24, x0
    2d44:	cmp	x1, #0x1e
    2d48:	and	x0, x0, #0xf
    2d4c:	ccmp	w3, #0xb, #0x0, hi  // hi = pmore
    2d50:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    2d54:	b.ne	2dc4 <gcry_mpi_mulm+0x334>  // b.any
    2d58:	lsr	w3, w21, #1
    2d5c:	mov	x0, x24
    2d60:	mov	x1, x2
    2d64:	add	x3, x24, w3, uxtw #4
    2d68:	ldp	x4, x5, [x0], #16
    2d6c:	stp	x4, x5, [x1], #16
    2d70:	cmp	x0, x3
    2d74:	b.ne	2d68 <gcry_mpi_mulm+0x2d8>  // b.any
    2d78:	and	w1, w21, #0xfffffffe
    2d7c:	tbz	w21, #0, 2d88 <gcry_mpi_mulm+0x2f8>
    2d80:	ldr	x0, [x24, x1, lsl #3]
    2d84:	str	x0, [x2, x1, lsl #3]
    2d88:	mov	x27, x2
    2d8c:	mov	x0, x24
    2d90:	mov	x24, x2
    2d94:	cbz	w20, 2c50 <gcry_mpi_mulm+0x1c0>
    2d98:	b	2c30 <gcry_mpi_mulm+0x1a0>
    2d9c:	mov	w4, w20
    2da0:	mov	w2, w21
    2da4:	mov	x3, x23
    2da8:	mov	x1, x24
    2dac:	bl	6b58 <_gcry_mpih_mul>
    2db0:	cmp	x0, #0x0
    2db4:	cset	w20, eq  // eq = none
    2db8:	sub	w20, w26, w20
    2dbc:	mov	w2, w20
    2dc0:	b	2c00 <gcry_mpi_mulm+0x170>
    2dc4:	mov	x0, #0x0                   	// #0
    2dc8:	ldr	x1, [x24, x0, lsl #3]
    2dcc:	str	x1, [x2, x0, lsl #3]
    2dd0:	add	x0, x0, #0x1
    2dd4:	cmp	w21, w0
    2dd8:	b.gt	2dc8 <gcry_mpi_mulm+0x338>
    2ddc:	b	2d88 <gcry_mpi_mulm+0x2f8>
    2de0:	mov	w1, w8
    2de4:	mov	w0, w20
    2de8:	bl	f0 <_gcry_mpi_alloc_limb_space>
    2dec:	mov	w28, w20
    2df0:	mov	x27, x0
    2df4:	cmp	w20, #0x0
    2df8:	b.le	2e98 <gcry_mpi_mulm+0x408>
    2dfc:	add	x1, x23, #0xf
    2e00:	sub	w2, w20, #0x1
    2e04:	sub	x1, x1, x0
    2e08:	orr	x0, x23, x0
    2e0c:	cmp	x1, #0x1e
    2e10:	and	x0, x0, #0xf
    2e14:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    2e18:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    2e1c:	b.ne	2e78 <gcry_mpi_mulm+0x3e8>  // b.any
    2e20:	lsr	w4, w20, #1
    2e24:	mov	x0, x23
    2e28:	mov	x1, x27
    2e2c:	add	x4, x23, w4, uxtw #4
    2e30:	ldp	x2, x3, [x0], #16
    2e34:	stp	x2, x3, [x1], #16
    2e38:	cmp	x0, x4
    2e3c:	b.ne	2e30 <gcry_mpi_mulm+0x3a0>  // b.any
    2e40:	and	w1, w20, #0xfffffffe
    2e44:	tbz	w20, #0, 2e50 <gcry_mpi_mulm+0x3c0>
    2e48:	ldr	x0, [x23, x1, lsl #3]
    2e4c:	str	x0, [x27, x1, lsl #3]
    2e50:	mov	x0, x23
    2e54:	mov	x23, x27
    2e58:	b	2c30 <gcry_mpi_mulm+0x1a0>
    2e5c:	mov	x0, #0x0                   	// #0
    2e60:	ldr	x1, [x28, x0, lsl #3]
    2e64:	str	x1, [x27, x0, lsl #3]
    2e68:	add	x0, x0, #0x1
    2e6c:	cmp	w20, w0
    2e70:	b.gt	2e60 <gcry_mpi_mulm+0x3d0>
    2e74:	b	2b68 <gcry_mpi_mulm+0xd8>
    2e78:	mov	x0, #0x0                   	// #0
    2e7c:	nop
    2e80:	ldr	x1, [x23, x0, lsl #3]
    2e84:	str	x1, [x27, x0, lsl #3]
    2e88:	add	x0, x0, #0x1
    2e8c:	cmp	w20, w0
    2e90:	b.gt	2e80 <gcry_mpi_mulm+0x3f0>
    2e94:	b	2e50 <gcry_mpi_mulm+0x3c0>
    2e98:	mov	x2, x24
    2e9c:	mov	x24, x23
    2ea0:	mov	x23, x0
    2ea4:	b	2d8c <gcry_mpi_mulm+0x2fc>

0000000000002ea8 <_gcry_mpi_mod>:
    2ea8:	stp	x29, x30, [sp, #-32]!
    2eac:	mov	x29, sp
    2eb0:	str	x19, [sp, #16]
    2eb4:	mov	x19, x0
    2eb8:	bl	3770 <_gcry_mpi_fdiv_r>
    2ebc:	str	wzr, [x19, #8]
    2ec0:	ldr	x19, [sp, #16]
    2ec4:	ldp	x29, x30, [sp], #32
    2ec8:	ret
    2ecc:	nop

0000000000002ed0 <_gcry_mpi_barrett_init>:
    2ed0:	stp	x29, x30, [sp, #-48]!
    2ed4:	mov	x29, sp
    2ed8:	stp	x19, x20, [sp, #16]
    2edc:	mov	w20, w1
    2ee0:	str	x21, [sp, #32]
    2ee4:	mov	x21, x0
    2ee8:	bl	e30 <_gcry_mpi_normalize>
    2eec:	mov	x1, #0x30                  	// #48
    2ef0:	mov	x0, #0x1                   	// #1
    2ef4:	bl	99c8 <gcry_xcalloc>
    2ef8:	mov	x19, x0
    2efc:	cbnz	w20, 2f84 <_gcry_mpi_barrett_init+0xb4>
    2f00:	str	x21, [x0]
    2f04:	ldr	w0, [x21, #4]
    2f08:	str	w0, [x19, #12]
    2f0c:	add	w0, w0, #0x1
    2f10:	bl	0 <_gcry_mpi_alloc>
    2f14:	mov	x1, #0x1                   	// #1
    2f18:	mov	x20, x0
    2f1c:	bl	988 <gcry_mpi_set_ui>
    2f20:	ldr	w1, [x19, #12]
    2f24:	mov	x0, x20
    2f28:	lsl	w1, w1, #1
    2f2c:	bl	1480 <_gcry_mpi_lshift_limbs>
    2f30:	mov	x2, x21
    2f34:	mov	x1, x20
    2f38:	mov	x0, x20
    2f3c:	bl	3ff0 <_gcry_mpi_fdiv_q>
    2f40:	ldr	w0, [x19, #12]
    2f44:	str	x20, [x19, #16]
    2f48:	lsl	w0, w0, #1
    2f4c:	add	w0, w0, #0x1
    2f50:	bl	0 <_gcry_mpi_alloc>
    2f54:	ldr	w1, [x19, #12]
    2f58:	str	x0, [x19, #24]
    2f5c:	lsl	w0, w1, #1
    2f60:	add	w0, w0, #0x1
    2f64:	bl	0 <_gcry_mpi_alloc>
    2f68:	mov	x1, x0
    2f6c:	mov	x0, x19
    2f70:	str	x1, [x19, #32]
    2f74:	ldp	x19, x20, [sp, #16]
    2f78:	ldr	x21, [sp, #32]
    2f7c:	ldp	x29, x30, [sp], #48
    2f80:	ret
    2f84:	mov	x0, x21
    2f88:	bl	560 <_gcry_mpi_copy>
    2f8c:	mov	w1, #0x1                   	// #1
    2f90:	str	x0, [x19]
    2f94:	str	w1, [x19, #8]
    2f98:	b	2f04 <_gcry_mpi_barrett_init+0x34>
    2f9c:	nop

0000000000002fa0 <_gcry_mpi_barrett_free>:
    2fa0:	cbz	x0, 2ff0 <_gcry_mpi_barrett_free+0x50>
    2fa4:	stp	x29, x30, [sp, #-32]!
    2fa8:	mov	x29, sp
    2fac:	str	x19, [sp, #16]
    2fb0:	mov	x19, x0
    2fb4:	ldr	x0, [x0, #16]
    2fb8:	bl	3f0 <_gcry_mpi_free>
    2fbc:	ldr	x0, [x19, #24]
    2fc0:	bl	3f0 <_gcry_mpi_free>
    2fc4:	ldr	x0, [x19, #32]
    2fc8:	bl	3f0 <_gcry_mpi_free>
    2fcc:	ldr	x0, [x19, #40]
    2fd0:	cbz	x0, 2fd8 <_gcry_mpi_barrett_free+0x38>
    2fd4:	bl	3f0 <_gcry_mpi_free>
    2fd8:	ldr	w0, [x19, #8]
    2fdc:	cbnz	w0, 2ff4 <_gcry_mpi_barrett_free+0x54>
    2fe0:	mov	x0, x19
    2fe4:	ldr	x19, [sp, #16]
    2fe8:	ldp	x29, x30, [sp], #32
    2fec:	b	99b8 <gcry_free>
    2ff0:	ret
    2ff4:	ldr	x0, [x19]
    2ff8:	bl	3f0 <_gcry_mpi_free>
    2ffc:	mov	x0, x19
    3000:	ldr	x19, [sp, #16]
    3004:	ldp	x29, x30, [sp], #32
    3008:	b	99b8 <gcry_free>
    300c:	nop

0000000000003010 <_gcry_mpi_mod_barrett>:
    3010:	stp	x29, x30, [sp, #-96]!
    3014:	mov	x29, sp
    3018:	stp	x23, x24, [sp, #48]
    301c:	mov	x23, x1
    3020:	ldr	w24, [x2, #12]
    3024:	stp	x19, x20, [sp, #16]
    3028:	mov	x19, x0
    302c:	mov	x0, x1
    3030:	stp	x21, x22, [sp, #32]
    3034:	mov	x21, x2
    3038:	stp	x25, x26, [sp, #64]
    303c:	ldr	x20, [x2]
    3040:	ldp	x26, x22, [x2, #24]
    3044:	str	x27, [sp, #80]
    3048:	ldr	x27, [x2, #16]
    304c:	bl	e30 <_gcry_mpi_normalize>
    3050:	ldr	w0, [x23, #4]
    3054:	cmp	w0, w24, lsl #1
    3058:	b.gt	314c <_gcry_mpi_mod_barrett+0x13c>
    305c:	mov	x1, x23
    3060:	mov	x0, x22
    3064:	bl	860 <gcry_mpi_set>
    3068:	add	w25, w24, #0x1
    306c:	sub	w1, w24, #0x1
    3070:	mov	x0, x22
    3074:	bl	1160 <_gcry_mpi_rshift_limbs>
    3078:	mov	x2, x27
    307c:	mov	x1, x22
    3080:	mov	x0, x22
    3084:	bl	2678 <gcry_mpi_mul>
    3088:	mov	w1, w25
    308c:	mov	x0, x22
    3090:	bl	1160 <_gcry_mpi_rshift_limbs>
    3094:	mov	x1, x23
    3098:	mov	x0, x26
    309c:	bl	860 <gcry_mpi_set>
    30a0:	ldr	w0, [x26, #4]
    30a4:	cmp	w25, w0
    30a8:	b.ge	30b0 <_gcry_mpi_mod_barrett+0xa0>  // b.tcont
    30ac:	str	w25, [x26, #4]
    30b0:	mov	x0, x22
    30b4:	mov	x2, x20
    30b8:	mov	x1, x22
    30bc:	bl	2678 <gcry_mpi_mul>
    30c0:	ldr	w0, [x22, #4]
    30c4:	cmp	w25, w0
    30c8:	b.ge	30d0 <_gcry_mpi_mod_barrett+0xc0>  // b.tcont
    30cc:	str	w25, [x22, #4]
    30d0:	mov	x0, x19
    30d4:	mov	x2, x22
    30d8:	mov	x1, x26
    30dc:	bl	2328 <gcry_mpi_sub>
    30e0:	ldr	w0, [x19, #8]
    30e4:	cbz	w0, 3120 <_gcry_mpi_mod_barrett+0x110>
    30e8:	ldr	x2, [x21, #40]
    30ec:	cbz	x2, 317c <_gcry_mpi_mod_barrett+0x16c>
    30f0:	mov	x1, x19
    30f4:	mov	x0, x19
    30f8:	bl	1c18 <gcry_mpi_add>
    30fc:	mov	x1, x20
    3100:	mov	x0, x19
    3104:	bl	4518 <gcry_mpi_cmp>
    3108:	tbnz	w0, #31, 3130 <_gcry_mpi_mod_barrett+0x120>
    310c:	nop
    3110:	mov	x2, x20
    3114:	mov	x1, x19
    3118:	mov	x0, x19
    311c:	bl	2328 <gcry_mpi_sub>
    3120:	mov	x1, x20
    3124:	mov	x0, x19
    3128:	bl	4518 <gcry_mpi_cmp>
    312c:	tbz	w0, #31, 3110 <_gcry_mpi_mod_barrett+0x100>
    3130:	ldp	x19, x20, [sp, #16]
    3134:	ldp	x21, x22, [sp, #32]
    3138:	ldp	x23, x24, [sp, #48]
    313c:	ldp	x25, x26, [sp, #64]
    3140:	ldr	x27, [sp, #80]
    3144:	ldp	x29, x30, [sp], #96
    3148:	ret
    314c:	mov	x2, x20
    3150:	mov	x1, x23
    3154:	mov	x0, x19
    3158:	bl	3770 <_gcry_mpi_fdiv_r>
    315c:	str	wzr, [x19, #8]
    3160:	ldp	x19, x20, [sp, #16]
    3164:	ldp	x21, x22, [sp, #32]
    3168:	ldp	x23, x24, [sp, #48]
    316c:	ldp	x25, x26, [sp, #64]
    3170:	ldr	x27, [sp, #80]
    3174:	ldp	x29, x30, [sp], #96
    3178:	ret
    317c:	add	w0, w24, #0x2
    3180:	bl	0 <_gcry_mpi_alloc>
    3184:	str	x0, [x21, #40]
    3188:	mov	x1, #0x1                   	// #1
    318c:	bl	988 <gcry_mpi_set_ui>
    3190:	ldr	x0, [x21, #40]
    3194:	mov	w1, w25
    3198:	bl	1480 <_gcry_mpi_lshift_limbs>
    319c:	ldr	x2, [x21, #40]
    31a0:	b	30f0 <_gcry_mpi_mod_barrett+0xe0>
    31a4:	nop

00000000000031a8 <_gcry_mpi_mul_barrett>:
    31a8:	stp	x29, x30, [sp, #-32]!
    31ac:	mov	x29, sp
    31b0:	stp	x19, x20, [sp, #16]
    31b4:	mov	x20, x3
    31b8:	mov	x19, x0
    31bc:	bl	2678 <gcry_mpi_mul>
    31c0:	mov	x2, x20
    31c4:	mov	x1, x19
    31c8:	mov	x0, x19
    31cc:	ldp	x19, x20, [sp, #16]
    31d0:	ldp	x29, x30, [sp], #32
    31d4:	b	3010 <_gcry_mpi_mod_barrett>

00000000000031d8 <gcry_mpi_gcd>:
    31d8:	stp	x29, x30, [sp, #-48]!
    31dc:	mov	x29, sp
    31e0:	stp	x19, x20, [sp, #16]
    31e4:	mov	x19, x2
    31e8:	str	x21, [sp, #32]
    31ec:	mov	x21, x0
    31f0:	mov	x0, x1
    31f4:	bl	560 <_gcry_mpi_copy>
    31f8:	mov	x20, x0
    31fc:	mov	x0, x19
    3200:	bl	560 <_gcry_mpi_copy>
    3204:	mov	x19, x0
    3208:	str	wzr, [x20, #8]
    320c:	str	wzr, [x0, #8]
    3210:	b	3234 <gcry_mpi_gcd+0x5c>
    3214:	mov	x0, x21
    3218:	bl	3770 <_gcry_mpi_fdiv_r>
    321c:	mov	x1, x19
    3220:	mov	x0, x20
    3224:	bl	860 <gcry_mpi_set>
    3228:	mov	x1, x21
    322c:	mov	x0, x19
    3230:	bl	860 <gcry_mpi_set>
    3234:	mov	x1, #0x0                   	// #0
    3238:	mov	x0, x19
    323c:	bl	4498 <gcry_mpi_cmp_ui>
    3240:	mov	x2, x19
    3244:	mov	x1, x20
    3248:	cbnz	w0, 3214 <gcry_mpi_gcd+0x3c>
    324c:	mov	x0, x21
    3250:	bl	860 <gcry_mpi_set>
    3254:	mov	x0, x20
    3258:	bl	3f0 <_gcry_mpi_free>
    325c:	mov	x0, x19
    3260:	bl	3f0 <_gcry_mpi_free>
    3264:	mov	x0, x21
    3268:	mov	x1, #0x1                   	// #1
    326c:	bl	4498 <gcry_mpi_cmp_ui>
    3270:	cmp	w0, #0x0
    3274:	cset	w0, eq  // eq = none
    3278:	ldp	x19, x20, [sp, #16]
    327c:	ldr	x21, [sp, #32]
    3280:	ldp	x29, x30, [sp], #48
    3284:	ret

0000000000003288 <_gcry_mpi_tdiv_qr.constprop.0>:
    3288:	stp	x29, x30, [sp, #-128]!
    328c:	mov	x29, sp
    3290:	stp	x19, x20, [sp, #16]
    3294:	mov	x19, x1
    3298:	ldr	w20, [x2, #4]
    329c:	stp	x27, x28, [sp, #80]
    32a0:	mov	x27, x2
    32a4:	ldp	w28, w1, [x1, #4]
    32a8:	stp	x25, x26, [sp, #64]
    32ac:	add	w25, w28, #0x1
    32b0:	stp	x21, x22, [sp, #32]
    32b4:	mov	x22, x0
    32b8:	str	w1, [sp, #100]
    32bc:	mov	w1, w25
    32c0:	bl	1c8 <_gcry_mpi_resize>
    32c4:	sub	w0, w25, w20
    32c8:	cmp	w0, #0x0
    32cc:	b.le	3480 <_gcry_mpi_tdiv_qr.constprop.0+0x1f8>
    32d0:	cmp	w20, #0x1
    32d4:	ldr	x5, [x19, #16]
    32d8:	ldr	x21, [x22, #16]
    32dc:	ldr	x3, [x27, #16]
    32e0:	b.eq	364c <_gcry_mpi_tdiv_qr.constprop.0+0x3c4>  // b.none
    32e4:	sbfiz	x0, x20, #3, #32
    32e8:	stp	x23, x24, [sp, #48]
    32ec:	add	x1, x3, x0
    32f0:	add	x6, x21, x0
    32f4:	sxtw	x19, w20
    32f8:	ldur	x1, [x1, #-8]
    32fc:	cmp	xzr, x1, lsr #56
    3300:	lsr	x0, x1, #56
    3304:	b.ne	36e8 <_gcry_mpi_tdiv_qr.constprop.0+0x460>  // b.any
    3308:	tst	x1, #0xff000000000000
    330c:	lsr	x0, x1, #48
    3310:	b.ne	36f4 <_gcry_mpi_tdiv_qr.constprop.0+0x46c>  // b.any
    3314:	tst	x1, #0xff0000000000
    3318:	lsr	x0, x1, #40
    331c:	b.ne	36b8 <_gcry_mpi_tdiv_qr.constprop.0+0x430>  // b.any
    3320:	tst	x1, #0xff00000000
    3324:	lsr	x0, x1, #32
    3328:	b.ne	3700 <_gcry_mpi_tdiv_qr.constprop.0+0x478>  // b.any
    332c:	tst	x1, #0xff000000
    3330:	lsr	x0, x1, #24
    3334:	b.ne	370c <_gcry_mpi_tdiv_qr.constprop.0+0x484>  // b.any
    3338:	tst	x1, #0xff0000
    333c:	lsr	x0, x1, #16
    3340:	b.ne	3750 <_gcry_mpi_tdiv_qr.constprop.0+0x4c8>  // b.any
    3344:	tst	x1, #0xff00
    3348:	lsr	x0, x1, #8
    334c:	mov	w26, #0x40                  	// #64
    3350:	b.ne	375c <_gcry_mpi_tdiv_qr.constprop.0+0x4d4>  // b.any
    3354:	adrp	x0, 0 <_gcry_mpi_alloc>
    3358:	ldr	x0, [x0]
    335c:	ldrb	w0, [x0, x1]
    3360:	subs	w26, w26, w0
    3364:	b.ne	35c4 <_gcry_mpi_tdiv_qr.constprop.0+0x33c>  // b.any
    3368:	cmp	x3, x21
    336c:	b.eq	3508 <_gcry_mpi_tdiv_qr.constprop.0+0x280>  // b.none
    3370:	mov	x4, x3
    3374:	cmp	x5, x21
    3378:	mov	w27, #0x0                   	// #0
    337c:	b.eq	33d8 <_gcry_mpi_tdiv_qr.constprop.0+0x150>  // b.none
    3380:	cmp	w28, #0x0
    3384:	b.le	33d8 <_gcry_mpi_tdiv_qr.constprop.0+0x150>
    3388:	orr	x2, x5, x21
    338c:	add	x1, x5, #0xf
    3390:	sub	x1, x1, x21
    3394:	sub	w0, w28, #0x1
    3398:	tst	x2, #0xf
    339c:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    33a0:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    33a4:	b.ls	3678 <_gcry_mpi_tdiv_qr.constprop.0+0x3f0>  // b.plast
    33a8:	lsr	w3, w28, #1
    33ac:	mov	x1, x5
    33b0:	mov	x2, x21
    33b4:	add	x3, x5, w3, uxtw #4
    33b8:	ldp	x8, x9, [x1], #16
    33bc:	stp	x8, x9, [x2], #16
    33c0:	cmp	x1, x3
    33c4:	b.ne	33b8 <_gcry_mpi_tdiv_qr.constprop.0+0x130>  // b.any
    33c8:	and	w1, w28, #0xfffffffe
    33cc:	tbz	w28, #0, 33d8 <_gcry_mpi_tdiv_qr.constprop.0+0x150>
    33d0:	ldr	x2, [x5, x1, lsl #3]
    33d4:	str	x2, [x21, x1, lsl #3]
    33d8:	mov	w3, w28
    33dc:	mov	x0, x6
    33e0:	mov	w5, w20
    33e4:	mov	x2, x21
    33e8:	mov	w1, #0x0                   	// #0
    33ec:	bl	7668 <_gcry_mpih_divrem>
    33f0:	cmp	w20, #0x0
    33f4:	b.le	3450 <_gcry_mpi_tdiv_qr.constprop.0+0x1c8>
    33f8:	sub	x0, x21, #0x8
    33fc:	b	3410 <_gcry_mpi_tdiv_qr.constprop.0+0x188>
    3400:	sub	w20, w19, #0x1
    3404:	sub	x19, x19, #0x1
    3408:	cmp	w19, #0x0
    340c:	b.le	341c <_gcry_mpi_tdiv_qr.constprop.0+0x194>
    3410:	ldr	x1, [x0, x19, lsl #3]
    3414:	mov	w20, w19
    3418:	cbz	x1, 3400 <_gcry_mpi_tdiv_qr.constprop.0+0x178>
    341c:	cmp	w26, #0x0
    3420:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    3424:	b.eq	3450 <_gcry_mpi_tdiv_qr.constprop.0+0x1c8>  // b.none
    3428:	mov	x1, x21
    342c:	mov	x0, x21
    3430:	add	x21, x21, w20, sxtw #3
    3434:	mov	w2, w20
    3438:	mov	w3, w26
    343c:	bl	94e0 <_gcry_mpih_rshift>
    3440:	ldur	x0, [x21, #-8]
    3444:	cmp	x0, #0x0
    3448:	cset	w0, eq  // eq = none
    344c:	sub	w20, w20, w0
    3450:	ldr	w0, [sp, #100]
    3454:	stp	w20, w0, [x22, #4]
    3458:	cbz	w27, 35bc <_gcry_mpi_tdiv_qr.constprop.0+0x334>
    345c:	mov	w1, w24
    3460:	mov	x0, x23
    3464:	ldp	x19, x20, [sp, #16]
    3468:	ldp	x21, x22, [sp, #32]
    346c:	ldp	x23, x24, [sp, #48]
    3470:	ldp	x25, x26, [sp, #64]
    3474:	ldp	x27, x28, [sp, #80]
    3478:	ldp	x29, x30, [sp], #128
    347c:	b	138 <_gcry_mpi_free_limb_space>
    3480:	cmp	x19, x22
    3484:	b.eq	34f0 <_gcry_mpi_tdiv_qr.constprop.0+0x268>  // b.none
    3488:	ldp	w1, w0, [x19, #4]
    348c:	stp	w1, w0, [x22, #4]
    3490:	cmp	w28, #0x0
    3494:	b.le	34f0 <_gcry_mpi_tdiv_qr.constprop.0+0x268>
    3498:	ldr	x2, [x19, #16]
    349c:	sub	w0, w28, #0x1
    34a0:	ldr	x1, [x22, #16]
    34a4:	add	x3, x2, #0xf
    34a8:	orr	x4, x1, x2
    34ac:	sub	x3, x3, x1
    34b0:	tst	x4, #0xf
    34b4:	ccmp	x3, #0x1e, #0x0, eq  // eq = none
    34b8:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    34bc:	b.ls	36cc <_gcry_mpi_tdiv_qr.constprop.0+0x444>  // b.plast
    34c0:	lsr	w6, w28, #1
    34c4:	mov	x0, x1
    34c8:	mov	x3, x2
    34cc:	add	x6, x1, w6, uxtw #4
    34d0:	ldp	x4, x5, [x3], #16
    34d4:	stp	x4, x5, [x0], #16
    34d8:	cmp	x0, x6
    34dc:	b.ne	34d0 <_gcry_mpi_tdiv_qr.constprop.0+0x248>  // b.any
    34e0:	and	w0, w28, #0xfffffffe
    34e4:	tbz	w28, #0, 34f0 <_gcry_mpi_tdiv_qr.constprop.0+0x268>
    34e8:	ldr	x2, [x2, x0, lsl #3]
    34ec:	str	x2, [x1, x0, lsl #3]
    34f0:	ldp	x19, x20, [sp, #16]
    34f4:	ldp	x21, x22, [sp, #32]
    34f8:	ldp	x25, x26, [sp, #64]
    34fc:	ldp	x27, x28, [sp, #80]
    3500:	ldp	x29, x30, [sp], #128
    3504:	ret
    3508:	ldr	w1, [x27, #12]
    350c:	mov	w0, w20
    3510:	stp	x5, x3, [sp, #104]
    3514:	mov	w24, w20
    3518:	and	w1, w1, #0x1
    351c:	str	x6, [sp, #120]
    3520:	bl	f0 <_gcry_mpi_alloc_limb_space>
    3524:	cmp	w20, #0x0
    3528:	mov	x4, x0
    352c:	ldp	x5, x3, [sp, #104]
    3530:	ldr	x6, [sp, #120]
    3534:	b.le	3718 <_gcry_mpi_tdiv_qr.constprop.0+0x490>
    3538:	add	x1, x3, #0xf
    353c:	sub	w2, w20, #0x1
    3540:	sub	x1, x1, x0
    3544:	orr	x0, x3, x0
    3548:	cmp	x1, #0x1e
    354c:	and	x0, x0, #0xf
    3550:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    3554:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    3558:	b.ne	3698 <_gcry_mpi_tdiv_qr.constprop.0+0x410>  // b.any
    355c:	lsr	w0, w20, #1
    3560:	mov	x1, x3
    3564:	mov	x2, x4
    3568:	add	x0, x3, w0, uxtw #4
    356c:	nop
    3570:	ldp	x8, x9, [x1], #16
    3574:	stp	x8, x9, [x2], #16
    3578:	cmp	x1, x0
    357c:	b.ne	3570 <_gcry_mpi_tdiv_qr.constprop.0+0x2e8>  // b.any
    3580:	and	w1, w20, #0xfffffffe
    3584:	tbz	w20, #0, 3590 <_gcry_mpi_tdiv_qr.constprop.0+0x308>
    3588:	ldr	x0, [x3, x1, lsl #3]
    358c:	str	x0, [x4, x1, lsl #3]
    3590:	cmp	x5, x21
    3594:	mov	x23, x4
    3598:	mov	w27, #0x1                   	// #1
    359c:	b.ne	3380 <_gcry_mpi_tdiv_qr.constprop.0+0xf8>  // b.any
    35a0:	mov	w5, w20
    35a4:	mov	w3, w28
    35a8:	mov	x0, x6
    35ac:	mov	x2, x21
    35b0:	mov	w1, #0x0                   	// #0
    35b4:	bl	7668 <_gcry_mpih_divrem>
    35b8:	b	33f8 <_gcry_mpi_tdiv_qr.constprop.0+0x170>
    35bc:	ldp	x23, x24, [sp, #48]
    35c0:	b	34f0 <_gcry_mpi_tdiv_qr.constprop.0+0x268>
    35c4:	ldr	w1, [x27, #12]
    35c8:	mov	w0, w20
    35cc:	stp	x5, x3, [sp, #104]
    35d0:	mov	w24, w20
    35d4:	and	w1, w1, #0x1
    35d8:	str	x6, [sp, #120]
    35dc:	bl	f0 <_gcry_mpi_alloc_limb_space>
    35e0:	ldr	x3, [sp, #112]
    35e4:	mov	w2, w20
    35e8:	mov	x23, x0
    35ec:	mov	x1, x3
    35f0:	mov	w3, w26
    35f4:	bl	5bb0 <_gcry_mpih_lshift>
    35f8:	ldr	x5, [sp, #104]
    35fc:	mov	w3, w26
    3600:	mov	w2, w28
    3604:	mov	x0, x21
    3608:	mov	x1, x5
    360c:	bl	5bb0 <_gcry_mpih_lshift>
    3610:	ldr	x6, [sp, #120]
    3614:	cbz	x0, 3620 <_gcry_mpi_tdiv_qr.constprop.0+0x398>
    3618:	str	x0, [x21, w28, sxtw #3]
    361c:	mov	w28, w25
    3620:	mov	w3, w28
    3624:	mov	x0, x6
    3628:	mov	w5, w20
    362c:	mov	x4, x23
    3630:	mov	x2, x21
    3634:	mov	w1, #0x0                   	// #0
    3638:	bl	7668 <_gcry_mpih_divrem>
    363c:	mov	w27, #0x1                   	// #1
    3640:	cmp	w20, #0x0
    3644:	b.gt	33f8 <_gcry_mpi_tdiv_qr.constprop.0+0x170>
    3648:	b	341c <_gcry_mpi_tdiv_qr.constprop.0+0x194>
    364c:	ldr	x2, [x3]
    3650:	mov	w1, w28
    3654:	mov	x0, x5
    3658:	bl	7400 <_gcry_mpih_mod_1>
    365c:	cmp	x0, #0x0
    3660:	str	x0, [x21]
    3664:	ldr	w0, [sp, #100]
    3668:	str	w0, [x22, #8]
    366c:	cset	w0, ne  // ne = any
    3670:	str	w0, [x22, #4]
    3674:	b	34f0 <_gcry_mpi_tdiv_qr.constprop.0+0x268>
    3678:	mov	x1, #0x0                   	// #0
    367c:	nop
    3680:	ldr	x0, [x5, x1, lsl #3]
    3684:	str	x0, [x21, x1, lsl #3]
    3688:	add	x1, x1, #0x1
    368c:	cmp	w28, w1
    3690:	b.gt	3680 <_gcry_mpi_tdiv_qr.constprop.0+0x3f8>
    3694:	b	33d8 <_gcry_mpi_tdiv_qr.constprop.0+0x150>
    3698:	mov	x0, #0x0                   	// #0
    369c:	nop
    36a0:	ldr	x1, [x3, x0, lsl #3]
    36a4:	str	x1, [x4, x0, lsl #3]
    36a8:	add	x0, x0, #0x1
    36ac:	cmp	w20, w0
    36b0:	b.gt	36a0 <_gcry_mpi_tdiv_qr.constprop.0+0x418>
    36b4:	b	3590 <_gcry_mpi_tdiv_qr.constprop.0+0x308>
    36b8:	mov	x1, x0
    36bc:	mov	w0, #0x28                  	// #40
    36c0:	mov	w26, #0x40                  	// #64
    36c4:	sub	w26, w26, w0
    36c8:	b	3354 <_gcry_mpi_tdiv_qr.constprop.0+0xcc>
    36cc:	mov	x0, #0x0                   	// #0
    36d0:	ldr	x3, [x2, x0, lsl #3]
    36d4:	str	x3, [x1, x0, lsl #3]
    36d8:	add	x0, x0, #0x1
    36dc:	cmp	w28, w0
    36e0:	b.gt	36d0 <_gcry_mpi_tdiv_qr.constprop.0+0x448>
    36e4:	b	34f0 <_gcry_mpi_tdiv_qr.constprop.0+0x268>
    36e8:	mov	x1, x0
    36ec:	mov	w0, #0x38                  	// #56
    36f0:	b	36c0 <_gcry_mpi_tdiv_qr.constprop.0+0x438>
    36f4:	mov	x1, x0
    36f8:	mov	w0, #0x30                  	// #48
    36fc:	b	36c0 <_gcry_mpi_tdiv_qr.constprop.0+0x438>
    3700:	mov	x1, x0
    3704:	mov	w0, #0x20                  	// #32
    3708:	b	36c0 <_gcry_mpi_tdiv_qr.constprop.0+0x438>
    370c:	mov	x1, x0
    3710:	mov	w0, #0x18                  	// #24
    3714:	b	36c0 <_gcry_mpi_tdiv_qr.constprop.0+0x438>
    3718:	cmp	x5, x3
    371c:	mov	x23, x0
    3720:	mov	w27, #0x1                   	// #1
    3724:	b.ne	3380 <_gcry_mpi_tdiv_qr.constprop.0+0xf8>  // b.any
    3728:	mov	x2, x5
    372c:	mov	w3, w28
    3730:	mov	x0, x6
    3734:	mov	w5, w24
    3738:	mov	x4, x23
    373c:	mov	w1, #0x0                   	// #0
    3740:	bl	7668 <_gcry_mpih_divrem>
    3744:	ldr	w0, [sp, #100]
    3748:	stp	w24, w0, [x22, #4]
    374c:	b	345c <_gcry_mpi_tdiv_qr.constprop.0+0x1d4>
    3750:	mov	x1, x0
    3754:	mov	w0, #0x10                  	// #16
    3758:	b	36c0 <_gcry_mpi_tdiv_qr.constprop.0+0x438>
    375c:	mov	x1, x0
    3760:	mov	w0, #0x8                   	// #8
    3764:	b	36c0 <_gcry_mpi_tdiv_qr.constprop.0+0x438>
	...

0000000000003770 <_gcry_mpi_fdiv_r>:
    3770:	stp	x29, x30, [sp, #-48]!
    3774:	mov	x29, sp
    3778:	ldr	w3, [x2, #8]
    377c:	stp	x19, x20, [sp, #16]
    3780:	mov	x19, x2
    3784:	cmp	w3, #0x0
    3788:	stp	x21, x22, [sp, #32]
    378c:	cset	w22, ne  // ne = any
    3790:	mov	x21, x1
    3794:	cmp	x2, x0
    3798:	b.eq	37ec <_gcry_mpi_fdiv_r+0x7c>  // b.none
    379c:	mov	x20, x0
    37a0:	bl	3288 <_gcry_mpi_tdiv_qr.constprop.0>
    37a4:	ldr	w0, [x21, #8]
    37a8:	cmp	w0, #0x0
    37ac:	cset	w0, ne  // ne = any
    37b0:	cmp	w0, w22
    37b4:	b.eq	37c0 <_gcry_mpi_fdiv_r+0x50>  // b.none
    37b8:	ldr	w0, [x20, #4]
    37bc:	cbnz	w0, 37d0 <_gcry_mpi_fdiv_r+0x60>
    37c0:	ldp	x19, x20, [sp, #16]
    37c4:	ldp	x21, x22, [sp, #32]
    37c8:	ldp	x29, x30, [sp], #48
    37cc:	ret
    37d0:	mov	x2, x19
    37d4:	mov	x1, x20
    37d8:	mov	x0, x20
    37dc:	ldp	x19, x20, [sp, #16]
    37e0:	ldp	x21, x22, [sp, #32]
    37e4:	ldp	x29, x30, [sp], #48
    37e8:	b	1c18 <gcry_mpi_add>
    37ec:	bl	560 <_gcry_mpi_copy>
    37f0:	mov	x2, x0
    37f4:	mov	x20, x0
    37f8:	mov	x1, x21
    37fc:	mov	x0, x19
    3800:	bl	3288 <_gcry_mpi_tdiv_qr.constprop.0>
    3804:	ldr	w0, [x21, #8]
    3808:	cmp	w0, #0x0
    380c:	cset	w0, ne  // ne = any
    3810:	cmp	w0, w22
    3814:	b.eq	3820 <_gcry_mpi_fdiv_r+0xb0>  // b.none
    3818:	ldr	w0, [x19, #4]
    381c:	cbnz	w0, 3838 <_gcry_mpi_fdiv_r+0xc8>
    3820:	cbz	x20, 37c0 <_gcry_mpi_fdiv_r+0x50>
    3824:	mov	x0, x20
    3828:	ldp	x19, x20, [sp, #16]
    382c:	ldp	x21, x22, [sp, #32]
    3830:	ldp	x29, x30, [sp], #48
    3834:	b	3f0 <_gcry_mpi_free>
    3838:	mov	x2, x20
    383c:	mov	x1, x19
    3840:	mov	x0, x19
    3844:	bl	1c18 <gcry_mpi_add>
    3848:	b	3820 <_gcry_mpi_fdiv_r+0xb0>
    384c:	nop

0000000000003850 <_gcry_mpi_fdiv_r_ui>:
    3850:	stp	x29, x30, [sp, #-48]!
    3854:	mov	x29, sp
    3858:	stp	x19, x20, [sp, #16]
    385c:	mov	x19, x1
    3860:	mov	x20, x0
    3864:	ldr	w1, [x1, #4]
    3868:	ldr	x0, [x19, #16]
    386c:	str	x21, [sp, #32]
    3870:	mov	x21, x2
    3874:	bl	7400 <_gcry_mpih_mod_1>
    3878:	cbz	x0, 388c <_gcry_mpi_fdiv_r_ui+0x3c>
    387c:	ldr	w1, [x19, #8]
    3880:	sub	x2, x21, x0
    3884:	cmp	w1, #0x0
    3888:	csel	x0, x2, x0, ne  // ne = any
    388c:	cbz	x20, 38a4 <_gcry_mpi_fdiv_r_ui+0x54>
    3890:	ldr	x2, [x20, #16]
    3894:	cmp	x0, #0x0
    3898:	cset	w1, ne  // ne = any
    389c:	str	x0, [x2]
    38a0:	str	w1, [x20, #4]
    38a4:	ldp	x19, x20, [sp, #16]
    38a8:	ldr	x21, [sp, #32]
    38ac:	ldp	x29, x30, [sp], #48
    38b0:	ret
    38b4:	nop

00000000000038b8 <_gcry_mpi_tdiv_r>:
    38b8:	b	3288 <_gcry_mpi_tdiv_qr.constprop.0>
    38bc:	nop

00000000000038c0 <_gcry_mpi_tdiv_qr>:
    38c0:	stp	x29, x30, [sp, #-224]!
    38c4:	mov	x29, sp
    38c8:	stp	x21, x22, [sp, #32]
    38cc:	stp	x27, x28, [sp, #80]
    38d0:	mov	x28, x1
    38d4:	mov	x27, x0
    38d8:	mov	x0, x1
    38dc:	stp	x19, x20, [sp, #16]
    38e0:	mov	x19, x2
    38e4:	ldp	w21, w1, [x2, #4]
    38e8:	stp	x25, x26, [sp, #64]
    38ec:	ldp	w20, w25, [x3, #4]
    38f0:	add	w26, w21, #0x1
    38f4:	stp	x23, x24, [sp, #48]
    38f8:	mov	x23, x3
    38fc:	sub	w22, w26, w20
    3900:	str	w1, [sp, #104]
    3904:	mov	w1, w26
    3908:	bl	1c8 <_gcry_mpi_resize>
    390c:	cmp	w22, #0x0
    3910:	b.le	3bd0 <_gcry_mpi_tdiv_qr+0x310>
    3914:	ldr	w0, [sp, #104]
    3918:	eor	w0, w25, w0
    391c:	str	w0, [sp, #124]
    3920:	cbz	x27, 3b14 <_gcry_mpi_tdiv_qr+0x254>
    3924:	mov	w1, w22
    3928:	mov	x0, x27
    392c:	bl	1c8 <_gcry_mpi_resize>
    3930:	cmp	w20, #0x1
    3934:	ldr	x5, [x19, #16]
    3938:	ldr	x4, [x23, #16]
    393c:	ldr	x25, [x28, #16]
    3940:	b.eq	3d9c <_gcry_mpi_tdiv_qr+0x4dc>  // b.none
    3944:	ldr	x19, [x27, #16]
    3948:	sxtw	x0, w20
    394c:	str	x0, [sp, #128]
    3950:	sbfiz	x24, x20, #3, #32
    3954:	cmp	x19, x5
    3958:	b.eq	3c64 <_gcry_mpi_tdiv_qr+0x3a4>  // b.none
    395c:	mov	w22, #0x0                   	// #0
    3960:	add	x24, x4, x24
    3964:	ldur	x2, [x24, #-8]
    3968:	cmp	xzr, x2, lsr #56
    396c:	lsr	x0, x2, #56
    3970:	b.ne	3e7c <_gcry_mpi_tdiv_qr+0x5bc>  // b.any
    3974:	tst	x2, #0xff000000000000
    3978:	lsr	x0, x2, #48
    397c:	b.ne	3e94 <_gcry_mpi_tdiv_qr+0x5d4>  // b.any
    3980:	tst	x2, #0xff0000000000
    3984:	lsr	x0, x2, #40
    3988:	b.ne	3ea0 <_gcry_mpi_tdiv_qr+0x5e0>  // b.any
    398c:	tst	x2, #0xff00000000
    3990:	lsr	x0, x2, #32
    3994:	b.ne	3eac <_gcry_mpi_tdiv_qr+0x5ec>  // b.any
    3998:	tst	x2, #0xff000000
    399c:	lsr	x0, x2, #24
    39a0:	b.ne	3eb8 <_gcry_mpi_tdiv_qr+0x5f8>  // b.any
    39a4:	tst	x2, #0xff0000
    39a8:	lsr	x0, x2, #16
    39ac:	b.ne	3ec4 <_gcry_mpi_tdiv_qr+0x604>  // b.any
    39b0:	tst	x2, #0xff00
    39b4:	lsr	x0, x2, #8
    39b8:	mov	w24, #0x40                  	// #64
    39bc:	b.ne	3ed0 <_gcry_mpi_tdiv_qr+0x610>  // b.any
    39c0:	adrp	x0, 0 <_gcry_mpi_alloc>
    39c4:	ldr	x0, [x0]
    39c8:	ldrb	w0, [x0, x2]
    39cc:	subs	w0, w24, w0
    39d0:	str	w0, [sp, #112]
    39d4:	b.ne	3d24 <_gcry_mpi_tdiv_qr+0x464>  // b.any
    39d8:	cmp	x25, x4
    39dc:	b.eq	3b3c <_gcry_mpi_tdiv_qr+0x27c>  // b.none
    39e0:	cmp	x27, #0x0
    39e4:	ccmp	x19, x4, #0x0, ne  // ne = any
    39e8:	b.eq	3b3c <_gcry_mpi_tdiv_qr+0x27c>  // b.none
    39ec:	cmp	x5, x25
    39f0:	b.eq	3a50 <_gcry_mpi_tdiv_qr+0x190>  // b.none
    39f4:	cmp	w21, #0x0
    39f8:	b.le	3a50 <_gcry_mpi_tdiv_qr+0x190>
    39fc:	orr	x2, x25, x5
    3a00:	add	x1, x5, #0xf
    3a04:	sub	x1, x1, x25
    3a08:	sub	w0, w21, #0x1
    3a0c:	tst	x2, #0xf
    3a10:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    3a14:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    3a18:	b.ls	3e04 <_gcry_mpi_tdiv_qr+0x544>  // b.plast
    3a1c:	lsr	w8, w21, #1
    3a20:	mov	x0, x25
    3a24:	mov	x1, x5
    3a28:	add	x8, x25, w8, uxtw #4
    3a2c:	nop
    3a30:	ldp	x2, x3, [x1], #16
    3a34:	stp	x2, x3, [x0], #16
    3a38:	cmp	x0, x8
    3a3c:	b.ne	3a30 <_gcry_mpi_tdiv_qr+0x170>  // b.any
    3a40:	and	w0, w21, #0xfffffffe
    3a44:	tbz	w21, #0, 3a50 <_gcry_mpi_tdiv_qr+0x190>
    3a48:	ldr	x1, [x5, x0, lsl #3]
    3a4c:	str	x1, [x25, x0, lsl #3]
    3a50:	mov	w5, w20
    3a54:	mov	w3, w21
    3a58:	mov	x2, x25
    3a5c:	mov	x0, x19
    3a60:	mov	w1, #0x0                   	// #0
    3a64:	bl	7668 <_gcry_mpih_divrem>
    3a68:	cbz	x27, 3a84 <_gcry_mpi_tdiv_qr+0x1c4>
    3a6c:	sub	w21, w21, w20
    3a70:	cbz	x0, 3a7c <_gcry_mpi_tdiv_qr+0x1bc>
    3a74:	str	x0, [x19, w21, sxtw #3]
    3a78:	add	w21, w21, #0x1
    3a7c:	ldr	w0, [sp, #124]
    3a80:	stp	w21, w0, [x27, #4]
    3a84:	cmp	w20, #0x0
    3a88:	b.le	3ab4 <_gcry_mpi_tdiv_qr+0x1f4>
    3a8c:	sub	x1, x25, #0x8
    3a90:	ldr	x0, [sp, #128]
    3a94:	b	3aa8 <_gcry_mpi_tdiv_qr+0x1e8>
    3a98:	sub	w20, w0, #0x1
    3a9c:	sub	x0, x0, #0x1
    3aa0:	cmp	w0, #0x0
    3aa4:	b.le	3ab4 <_gcry_mpi_tdiv_qr+0x1f4>
    3aa8:	ldr	x2, [x1, x0, lsl #3]
    3aac:	mov	w20, w0
    3ab0:	cbz	x2, 3a98 <_gcry_mpi_tdiv_qr+0x1d8>
    3ab4:	ldr	w0, [sp, #112]
    3ab8:	cmp	w0, #0x0
    3abc:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    3ac0:	b.ne	3cf8 <_gcry_mpi_tdiv_qr+0x438>  // b.any
    3ac4:	ldr	w0, [sp, #104]
    3ac8:	stp	w20, w0, [x28, #4]
    3acc:	cbz	w22, 3af8 <_gcry_mpi_tdiv_qr+0x238>
    3ad0:	add	x2, sp, #0xa0
    3ad4:	add	x24, sp, #0xb8
    3ad8:	sub	w22, w22, #0x1
    3adc:	str	x2, [sp, #104]
    3ae0:	sxtw	x0, w22
    3ae4:	ldr	w1, [x2, x0, lsl #2]
    3ae8:	ldr	x0, [x24, x0, lsl #3]
    3aec:	bl	138 <_gcry_mpi_free_limb_space>
    3af0:	ldr	x2, [sp, #104]
    3af4:	cbnz	w22, 3ad8 <_gcry_mpi_tdiv_qr+0x218>
    3af8:	ldp	x19, x20, [sp, #16]
    3afc:	ldp	x21, x22, [sp, #32]
    3b00:	ldp	x23, x24, [sp, #48]
    3b04:	ldp	x25, x26, [sp, #64]
    3b08:	ldp	x27, x28, [sp, #80]
    3b0c:	ldp	x29, x30, [sp], #224
    3b10:	ret
    3b14:	cmp	w20, #0x1
    3b18:	ldr	x5, [x19, #16]
    3b1c:	ldr	x4, [x23, #16]
    3b20:	ldr	x25, [x28, #16]
    3b24:	b.eq	3e44 <_gcry_mpi_tdiv_qr+0x584>  // b.none
    3b28:	sbfiz	x24, x20, #3, #32
    3b2c:	sxtw	x0, w20
    3b30:	add	x19, x25, x24
    3b34:	str	x0, [sp, #128]
    3b38:	b	395c <_gcry_mpi_tdiv_qr+0x9c>
    3b3c:	sxtw	x26, w22
    3b40:	add	x2, sp, #0xa0
    3b44:	add	x24, sp, #0xb8
    3b48:	ldr	w1, [x23, #12]
    3b4c:	mov	w0, w20
    3b50:	stp	x5, x4, [sp, #136]
    3b54:	and	w1, w1, #0x1
    3b58:	str	w20, [x2, x26, lsl #2]
    3b5c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    3b60:	str	x0, [x24, x26, lsl #3]
    3b64:	add	w22, w22, #0x1
    3b68:	cmp	w20, #0x0
    3b6c:	ldr	x5, [sp, #136]
    3b70:	b.le	3bc8 <_gcry_mpi_tdiv_qr+0x308>
    3b74:	ldr	x4, [sp, #144]
    3b78:	add	x2, x0, #0xf
    3b7c:	sub	w1, w20, #0x1
    3b80:	orr	x3, x0, x4
    3b84:	sub	x2, x2, x4
    3b88:	tst	x3, #0xf
    3b8c:	ccmp	x2, #0x1e, #0x0, eq  // eq = none
    3b90:	ccmp	w1, #0xb, #0x0, hi  // hi = pmore
    3b94:	b.ls	3e20 <_gcry_mpi_tdiv_qr+0x560>  // b.plast
    3b98:	lsr	w9, w20, #1
    3b9c:	mov	x1, x4
    3ba0:	mov	x8, x0
    3ba4:	add	x9, x4, w9, uxtw #4
    3ba8:	ldp	x2, x3, [x1], #16
    3bac:	stp	x2, x3, [x8], #16
    3bb0:	cmp	x1, x9
    3bb4:	b.ne	3ba8 <_gcry_mpi_tdiv_qr+0x2e8>  // b.any
    3bb8:	and	w1, w20, #0xfffffffe
    3bbc:	tbz	w20, #0, 3bc8 <_gcry_mpi_tdiv_qr+0x308>
    3bc0:	ldr	x2, [x4, x1, lsl #3]
    3bc4:	str	x2, [x0, x1, lsl #3]
    3bc8:	mov	x4, x0
    3bcc:	b	39ec <_gcry_mpi_tdiv_qr+0x12c>
    3bd0:	cmp	x19, x28
    3bd4:	b.eq	3c40 <_gcry_mpi_tdiv_qr+0x380>  // b.none
    3bd8:	ldp	w1, w0, [x19, #4]
    3bdc:	stp	w1, w0, [x28, #4]
    3be0:	cmp	w21, #0x0
    3be4:	b.le	3c40 <_gcry_mpi_tdiv_qr+0x380>
    3be8:	ldr	x2, [x19, #16]
    3bec:	sub	w0, w21, #0x1
    3bf0:	ldr	x1, [x28, #16]
    3bf4:	add	x3, x2, #0xf
    3bf8:	orr	x4, x1, x2
    3bfc:	sub	x3, x3, x1
    3c00:	tst	x4, #0xf
    3c04:	ccmp	x3, #0x1e, #0x0, eq  // eq = none
    3c08:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    3c0c:	b.ls	3e58 <_gcry_mpi_tdiv_qr+0x598>  // b.plast
    3c10:	lsr	w6, w21, #1
    3c14:	mov	x0, x1
    3c18:	mov	x3, x2
    3c1c:	add	x6, x1, w6, uxtw #4
    3c20:	ldp	x4, x5, [x3], #16
    3c24:	stp	x4, x5, [x0], #16
    3c28:	cmp	x0, x6
    3c2c:	b.ne	3c20 <_gcry_mpi_tdiv_qr+0x360>  // b.any
    3c30:	and	w0, w21, #0xfffffffe
    3c34:	tbz	w21, #0, 3c40 <_gcry_mpi_tdiv_qr+0x380>
    3c38:	ldr	x2, [x2, x0, lsl #3]
    3c3c:	str	x2, [x1, x0, lsl #3]
    3c40:	cbz	x27, 3af8 <_gcry_mpi_tdiv_qr+0x238>
    3c44:	stur	xzr, [x27, #4]
    3c48:	ldp	x19, x20, [sp, #16]
    3c4c:	ldp	x21, x22, [sp, #32]
    3c50:	ldp	x23, x24, [sp, #48]
    3c54:	ldp	x25, x26, [sp, #64]
    3c58:	ldp	x27, x28, [sp, #80]
    3c5c:	ldp	x29, x30, [sp], #224
    3c60:	ret
    3c64:	ldr	w1, [x27, #12]
    3c68:	mov	w0, w21
    3c6c:	str	x4, [sp, #112]
    3c70:	and	w1, w1, #0x1
    3c74:	str	x5, [sp, #136]
    3c78:	str	w21, [sp, #160]
    3c7c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    3c80:	str	x0, [sp, #184]
    3c84:	cmp	w21, #0x0
    3c88:	ldr	x4, [sp, #112]
    3c8c:	b.le	3ef8 <_gcry_mpi_tdiv_qr+0x638>
    3c90:	ldr	x5, [sp, #136]
    3c94:	add	x2, x0, #0xf
    3c98:	sub	w1, w21, #0x1
    3c9c:	orr	x7, x5, x0
    3ca0:	sub	x2, x2, x5
    3ca4:	tst	x7, #0xf
    3ca8:	ccmp	x2, #0x1e, #0x0, eq  // eq = none
    3cac:	ccmp	w1, #0xb, #0x0, hi  // hi = pmore
    3cb0:	b.ls	3edc <_gcry_mpi_tdiv_qr+0x61c>  // b.plast
    3cb4:	lsr	w7, w21, #1
    3cb8:	mov	x1, x5
    3cbc:	mov	x2, x0
    3cc0:	add	x7, x5, w7, uxtw #4
    3cc4:	nop
    3cc8:	ldp	x10, x11, [x1], #16
    3ccc:	stp	x10, x11, [x2], #16
    3cd0:	cmp	x1, x7
    3cd4:	b.ne	3cc8 <_gcry_mpi_tdiv_qr+0x408>  // b.any
    3cd8:	and	w1, w21, #0xfffffffe
    3cdc:	tbz	w21, #0, 3ce8 <_gcry_mpi_tdiv_qr+0x428>
    3ce0:	ldr	x2, [x5, x1, lsl #3]
    3ce4:	str	x2, [x0, x1, lsl #3]
    3ce8:	mov	x19, x5
    3cec:	mov	w22, #0x1                   	// #1
    3cf0:	mov	x5, x0
    3cf4:	b	3960 <_gcry_mpi_tdiv_qr+0xa0>
    3cf8:	mov	x3, x0
    3cfc:	mov	w2, w20
    3d00:	mov	x1, x25
    3d04:	mov	x0, x25
    3d08:	bl	94e0 <_gcry_mpih_rshift>
    3d0c:	add	x6, x25, w20, sxtw #3
    3d10:	ldur	x0, [x6, #-8]
    3d14:	cmp	x0, #0x0
    3d18:	cset	w0, eq  // eq = none
    3d1c:	sub	w20, w20, w0
    3d20:	b	3ac4 <_gcry_mpi_tdiv_qr+0x204>
    3d24:	sxtw	x9, w22
    3d28:	add	x2, sp, #0xa0
    3d2c:	ldr	w1, [x23, #12]
    3d30:	mov	w0, w20
    3d34:	stp	x9, x5, [sp, #136]
    3d38:	add	x24, sp, #0xb8
    3d3c:	and	w1, w1, #0x1
    3d40:	str	w20, [x2, x9, lsl #2]
    3d44:	add	w22, w22, #0x1
    3d48:	str	x4, [sp, #152]
    3d4c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    3d50:	ldr	w3, [sp, #112]
    3d54:	mov	x23, x0
    3d58:	ldr	x9, [sp, #136]
    3d5c:	mov	w2, w20
    3d60:	ldr	x4, [sp, #152]
    3d64:	str	x0, [x24, x9, lsl #3]
    3d68:	mov	x1, x4
    3d6c:	bl	5bb0 <_gcry_mpih_lshift>
    3d70:	ldr	w3, [sp, #112]
    3d74:	mov	w2, w21
    3d78:	ldr	x5, [sp, #144]
    3d7c:	mov	x0, x25
    3d80:	mov	x1, x5
    3d84:	bl	5bb0 <_gcry_mpih_lshift>
    3d88:	mov	x4, x23
    3d8c:	cbz	x0, 3a50 <_gcry_mpi_tdiv_qr+0x190>
    3d90:	str	x0, [x25, w21, sxtw #3]
    3d94:	mov	w21, w26
    3d98:	b	3a50 <_gcry_mpi_tdiv_qr+0x190>
    3d9c:	ldr	x19, [x27, #16]
    3da0:	mov	w2, w21
    3da4:	ldr	x3, [x4]
    3da8:	mov	x0, x19
    3dac:	add	x19, x19, w22, sxtw #3
    3db0:	mov	x1, x5
    3db4:	bl	8058 <_gcry_mpih_divmod_1>
    3db8:	ldur	x1, [x19, #-8]
    3dbc:	ldr	w2, [sp, #124]
    3dc0:	cmp	x1, #0x0
    3dc4:	cset	w1, eq  // eq = none
    3dc8:	sub	w22, w22, w1
    3dcc:	stp	w22, w2, [x27, #4]
    3dd0:	cmp	x0, #0x0
    3dd4:	str	x0, [x25]
    3dd8:	cset	w0, ne  // ne = any
    3ddc:	str	w0, [x28, #4]
    3de0:	ldr	w0, [sp, #104]
    3de4:	str	w0, [x28, #8]
    3de8:	ldp	x19, x20, [sp, #16]
    3dec:	ldp	x21, x22, [sp, #32]
    3df0:	ldp	x23, x24, [sp, #48]
    3df4:	ldp	x25, x26, [sp, #64]
    3df8:	ldp	x27, x28, [sp, #80]
    3dfc:	ldp	x29, x30, [sp], #224
    3e00:	ret
    3e04:	mov	x0, #0x0                   	// #0
    3e08:	ldr	x1, [x5, x0, lsl #3]
    3e0c:	str	x1, [x25, x0, lsl #3]
    3e10:	add	x0, x0, #0x1
    3e14:	cmp	w21, w0
    3e18:	b.gt	3e08 <_gcry_mpi_tdiv_qr+0x548>
    3e1c:	b	3a50 <_gcry_mpi_tdiv_qr+0x190>
    3e20:	mov	x1, #0x0                   	// #0
    3e24:	nop
    3e28:	ldr	x2, [x4, x1, lsl #3]
    3e2c:	str	x2, [x0, x1, lsl #3]
    3e30:	add	x1, x1, #0x1
    3e34:	cmp	w20, w1
    3e38:	b.gt	3e28 <_gcry_mpi_tdiv_qr+0x568>
    3e3c:	mov	x4, x0
    3e40:	b	39ec <_gcry_mpi_tdiv_qr+0x12c>
    3e44:	ldr	x2, [x4]
    3e48:	mov	w1, w21
    3e4c:	mov	x0, x5
    3e50:	bl	7400 <_gcry_mpih_mod_1>
    3e54:	b	3dd0 <_gcry_mpi_tdiv_qr+0x510>
    3e58:	mov	x0, #0x0                   	// #0
    3e5c:	nop
    3e60:	ldr	x3, [x2, x0, lsl #3]
    3e64:	str	x3, [x1, x0, lsl #3]
    3e68:	add	x0, x0, #0x1
    3e6c:	cmp	w21, w0
    3e70:	b.gt	3e60 <_gcry_mpi_tdiv_qr+0x5a0>
    3e74:	cbnz	x27, 3c44 <_gcry_mpi_tdiv_qr+0x384>
    3e78:	b	3af8 <_gcry_mpi_tdiv_qr+0x238>
    3e7c:	mov	x2, x0
    3e80:	mov	w0, #0x38                  	// #56
    3e84:	nop
    3e88:	mov	w24, #0x40                  	// #64
    3e8c:	sub	w24, w24, w0
    3e90:	b	39c0 <_gcry_mpi_tdiv_qr+0x100>
    3e94:	mov	x2, x0
    3e98:	mov	w0, #0x30                  	// #48
    3e9c:	b	3e88 <_gcry_mpi_tdiv_qr+0x5c8>
    3ea0:	mov	x2, x0
    3ea4:	mov	w0, #0x28                  	// #40
    3ea8:	b	3e88 <_gcry_mpi_tdiv_qr+0x5c8>
    3eac:	mov	x2, x0
    3eb0:	mov	w0, #0x20                  	// #32
    3eb4:	b	3e88 <_gcry_mpi_tdiv_qr+0x5c8>
    3eb8:	mov	x2, x0
    3ebc:	mov	w0, #0x18                  	// #24
    3ec0:	b	3e88 <_gcry_mpi_tdiv_qr+0x5c8>
    3ec4:	mov	x2, x0
    3ec8:	mov	w0, #0x10                  	// #16
    3ecc:	b	3e88 <_gcry_mpi_tdiv_qr+0x5c8>
    3ed0:	mov	x2, x0
    3ed4:	mov	w0, #0x8                   	// #8
    3ed8:	b	3e88 <_gcry_mpi_tdiv_qr+0x5c8>
    3edc:	mov	x1, #0x0                   	// #0
    3ee0:	ldr	x2, [x5, x1, lsl #3]
    3ee4:	str	x2, [x0, x1, lsl #3]
    3ee8:	add	x1, x1, #0x1
    3eec:	cmp	w21, w1
    3ef0:	b.gt	3ee0 <_gcry_mpi_tdiv_qr+0x620>
    3ef4:	b	3ce8 <_gcry_mpi_tdiv_qr+0x428>
    3ef8:	mov	x5, x0
    3efc:	mov	w22, #0x1                   	// #1
    3f00:	b	3960 <_gcry_mpi_tdiv_qr+0xa0>
    3f04:	nop
	...

0000000000003f10 <_gcry_mpi_fdiv_qr>:
    3f10:	stp	x29, x30, [sp, #-64]!
    3f14:	cmp	x3, x0
    3f18:	ccmp	x3, x1, #0x4, ne  // ne = any
    3f1c:	mov	x29, sp
    3f20:	stp	x19, x20, [sp, #16]
    3f24:	mov	x19, x3
    3f28:	mov	x20, x1
    3f2c:	stp	x21, x22, [sp, #32]
    3f30:	mov	x21, x0
    3f34:	mov	x22, x2
    3f38:	stp	x23, x24, [sp, #48]
    3f3c:	ldr	w24, [x3, #8]
    3f40:	b.eq	3f70 <_gcry_mpi_fdiv_qr+0x60>  // b.none
    3f44:	bl	38c0 <_gcry_mpi_tdiv_qr>
    3f48:	ldr	w0, [x22, #8]
    3f4c:	cmp	w24, w0
    3f50:	b.eq	3f5c <_gcry_mpi_fdiv_qr+0x4c>  // b.none
    3f54:	ldr	w0, [x20, #4]
    3f58:	cbnz	w0, 3fc4 <_gcry_mpi_fdiv_qr+0xb4>
    3f5c:	ldp	x19, x20, [sp, #16]
    3f60:	ldp	x21, x22, [sp, #32]
    3f64:	ldp	x23, x24, [sp, #48]
    3f68:	ldp	x29, x30, [sp], #64
    3f6c:	ret
    3f70:	mov	x0, x3
    3f74:	bl	560 <_gcry_mpi_copy>
    3f78:	mov	x2, x22
    3f7c:	mov	x3, x0
    3f80:	mov	x23, x0
    3f84:	mov	x1, x20
    3f88:	mov	x0, x21
    3f8c:	bl	38c0 <_gcry_mpi_tdiv_qr>
    3f90:	ldr	w0, [x22, #8]
    3f94:	cmp	w0, w24
    3f98:	b.eq	3fa8 <_gcry_mpi_fdiv_qr+0x98>  // b.none
    3f9c:	ldr	w0, [x20, #4]
    3fa0:	mov	x19, x23
    3fa4:	cbnz	w0, 3fc8 <_gcry_mpi_fdiv_qr+0xb8>
    3fa8:	cbz	x23, 3f5c <_gcry_mpi_fdiv_qr+0x4c>
    3fac:	mov	x0, x23
    3fb0:	ldp	x19, x20, [sp, #16]
    3fb4:	ldp	x21, x22, [sp, #32]
    3fb8:	ldp	x23, x24, [sp, #48]
    3fbc:	ldp	x29, x30, [sp], #64
    3fc0:	b	3f0 <_gcry_mpi_free>
    3fc4:	mov	x23, #0x0                   	// #0
    3fc8:	mov	x1, x21
    3fcc:	mov	x0, x21
    3fd0:	mov	x2, #0x1                   	// #1
    3fd4:	bl	20a0 <gcry_mpi_sub_ui>
    3fd8:	mov	x2, x19
    3fdc:	mov	x1, x20
    3fe0:	mov	x0, x20
    3fe4:	bl	1c18 <gcry_mpi_add>
    3fe8:	b	3fa8 <_gcry_mpi_fdiv_qr+0x98>
    3fec:	nop

0000000000003ff0 <_gcry_mpi_fdiv_q>:
    3ff0:	stp	x29, x30, [sp, #-64]!
    3ff4:	mov	x29, sp
    3ff8:	stp	x21, x22, [sp, #32]
    3ffc:	mov	x21, x0
    4000:	ldr	w0, [x0, #4]
    4004:	stp	x19, x20, [sp, #16]
    4008:	mov	x19, x2
    400c:	mov	x22, x1
    4010:	stp	x23, x24, [sp, #48]
    4014:	bl	0 <_gcry_mpi_alloc>
    4018:	cmp	x21, x19
    401c:	ldr	w24, [x19, #8]
    4020:	mov	x20, x0
    4024:	ccmp	x0, x19, #0x4, ne  // ne = any
    4028:	b.eq	406c <_gcry_mpi_fdiv_q+0x7c>  // b.none
    402c:	mov	x1, x0
    4030:	mov	x3, x19
    4034:	mov	x0, x21
    4038:	mov	x2, x22
    403c:	bl	38c0 <_gcry_mpi_tdiv_qr>
    4040:	ldr	w0, [x22, #8]
    4044:	cmp	w24, w0
    4048:	b.eq	4054 <_gcry_mpi_fdiv_q+0x64>  // b.none
    404c:	ldr	w0, [x20, #4]
    4050:	cbnz	w0, 40c8 <_gcry_mpi_fdiv_q+0xd8>
    4054:	mov	x0, x20
    4058:	ldp	x19, x20, [sp, #16]
    405c:	ldp	x21, x22, [sp, #32]
    4060:	ldp	x23, x24, [sp, #48]
    4064:	ldp	x29, x30, [sp], #64
    4068:	b	3f0 <_gcry_mpi_free>
    406c:	mov	x0, x19
    4070:	bl	560 <_gcry_mpi_copy>
    4074:	mov	x2, x22
    4078:	mov	x3, x0
    407c:	mov	x23, x0
    4080:	mov	x1, x20
    4084:	mov	x0, x21
    4088:	bl	38c0 <_gcry_mpi_tdiv_qr>
    408c:	ldr	w0, [x22, #8]
    4090:	cmp	w24, w0
    4094:	b.eq	40a4 <_gcry_mpi_fdiv_q+0xb4>  // b.none
    4098:	ldr	w0, [x20, #4]
    409c:	mov	x19, x23
    40a0:	cbnz	w0, 40cc <_gcry_mpi_fdiv_q+0xdc>
    40a4:	cbz	x23, 4054 <_gcry_mpi_fdiv_q+0x64>
    40a8:	mov	x0, x23
    40ac:	bl	3f0 <_gcry_mpi_free>
    40b0:	mov	x0, x20
    40b4:	ldp	x19, x20, [sp, #16]
    40b8:	ldp	x21, x22, [sp, #32]
    40bc:	ldp	x23, x24, [sp, #48]
    40c0:	ldp	x29, x30, [sp], #64
    40c4:	b	3f0 <_gcry_mpi_free>
    40c8:	mov	x23, #0x0                   	// #0
    40cc:	mov	x1, x21
    40d0:	mov	x0, x21
    40d4:	mov	x2, #0x1                   	// #1
    40d8:	bl	20a0 <gcry_mpi_sub_ui>
    40dc:	mov	x2, x19
    40e0:	mov	x1, x20
    40e4:	mov	x0, x20
    40e8:	bl	1c18 <gcry_mpi_add>
    40ec:	b	40a4 <_gcry_mpi_fdiv_q+0xb4>

00000000000040f0 <_gcry_mpi_tdiv_q_2exp>:
    40f0:	stp	x29, x30, [sp, #-64]!
    40f4:	mov	x29, sp
    40f8:	stp	x19, x20, [sp, #16]
    40fc:	mov	w19, w2
    4100:	str	x23, [sp, #48]
    4104:	lsr	w23, w2, #6
    4108:	ldr	w2, [x1, #4]
    410c:	stp	x21, x22, [sp, #32]
    4110:	mov	x21, x0
    4114:	cmp	w2, w19, lsr #6
    4118:	b.gt	4134 <_gcry_mpi_tdiv_q_2exp+0x44>
    411c:	str	wzr, [x0, #4]
    4120:	ldp	x19, x20, [sp, #16]
    4124:	ldp	x21, x22, [sp, #32]
    4128:	ldr	x23, [sp, #48]
    412c:	ldp	x29, x30, [sp], #64
    4130:	ret
    4134:	mov	x22, x1
    4138:	ldr	w1, [x0]
    413c:	sub	w20, w2, w23
    4140:	cmp	w1, w20
    4144:	b.lt	41a0 <_gcry_mpi_tdiv_q_2exp+0xb0>  // b.tstop
    4148:	ands	w3, w19, #0x3f
    414c:	b.ne	4168 <_gcry_mpi_tdiv_q_2exp+0x78>  // b.any
    4150:	str	w20, [x21, #4]
    4154:	ldp	x19, x20, [sp, #16]
    4158:	ldp	x21, x22, [sp, #32]
    415c:	ldr	x23, [sp, #48]
    4160:	ldp	x29, x30, [sp], #64
    4164:	ret
    4168:	ldr	x19, [x21, #16]
    416c:	ubfiz	x23, x23, #3, #26
    4170:	ldr	x1, [x22, #16]
    4174:	mov	x0, x19
    4178:	add	x19, x19, w20, sxtw #3
    417c:	mov	w2, w20
    4180:	add	x1, x1, x23
    4184:	bl	94e0 <_gcry_mpih_rshift>
    4188:	ldur	x0, [x19, #-8]
    418c:	cmp	x0, #0x0
    4190:	cset	w0, eq  // eq = none
    4194:	sub	w20, w20, w0
    4198:	str	w20, [x21, #4]
    419c:	b	4154 <_gcry_mpi_tdiv_q_2exp+0x64>
    41a0:	mov	w1, w20
    41a4:	bl	1c8 <_gcry_mpi_resize>
    41a8:	ands	w3, w19, #0x3f
    41ac:	b.eq	4150 <_gcry_mpi_tdiv_q_2exp+0x60>  // b.none
    41b0:	b	4168 <_gcry_mpi_tdiv_q_2exp+0x78>
    41b4:	nop

00000000000041b8 <_gcry_mpi_divisible_ui>:
    41b8:	stp	x29, x30, [sp, #-16]!
    41bc:	mov	x2, x1
    41c0:	mov	x29, sp
    41c4:	ldr	w1, [x0, #4]
    41c8:	ldr	x0, [x0, #16]
    41cc:	bl	7400 <_gcry_mpih_mod_1>
    41d0:	cmp	x0, #0x0
    41d4:	cset	w0, eq  // eq = none
    41d8:	ldp	x29, x30, [sp], #16
    41dc:	ret

00000000000041e0 <gcry_mpi_div>:
    41e0:	stp	x29, x30, [sp, #-64]!
    41e4:	mov	x29, sp
    41e8:	stp	x19, x20, [sp, #16]
    41ec:	mov	x19, x1
    41f0:	mov	x20, x3
    41f4:	stp	x21, x22, [sp, #32]
    41f8:	mov	x21, x0
    41fc:	mov	x22, x2
    4200:	cbnz	w4, 4218 <gcry_mpi_div+0x38>
    4204:	cbz	x1, 4268 <gcry_mpi_div+0x88>
    4208:	ldp	x19, x20, [sp, #16]
    420c:	ldp	x21, x22, [sp, #32]
    4210:	ldp	x29, x30, [sp], #64
    4214:	b	38c0 <_gcry_mpi_tdiv_qr>
    4218:	stp	x23, x24, [sp, #48]
    421c:	cmp	w4, #0x0
    4220:	b.ge	43ec <gcry_mpi_div+0x20c>  // b.tcont
    4224:	cbz	x1, 4374 <gcry_mpi_div+0x194>
    4228:	ldr	w23, [x3, #8]
    422c:	cbz	x0, 4318 <gcry_mpi_div+0x138>
    4230:	cmp	x0, x3
    4234:	ccmp	x1, x3, #0x4, ne  // ne = any
    4238:	b.eq	429c <gcry_mpi_div+0xbc>  // b.none
    423c:	bl	38c0 <_gcry_mpi_tdiv_qr>
    4240:	ldr	w0, [x22, #8]
    4244:	cmp	w23, w0
    4248:	b.eq	4254 <gcry_mpi_div+0x74>  // b.none
    424c:	ldr	w0, [x19, #4]
    4250:	cbnz	w0, 42f0 <gcry_mpi_div+0x110>
    4254:	ldp	x19, x20, [sp, #16]
    4258:	ldp	x21, x22, [sp, #32]
    425c:	ldp	x23, x24, [sp, #48]
    4260:	ldp	x29, x30, [sp], #64
    4264:	ret
    4268:	ldr	w0, [x0, #4]
    426c:	bl	0 <_gcry_mpi_alloc>
    4270:	mov	x19, x0
    4274:	mov	x3, x20
    4278:	mov	x2, x22
    427c:	mov	x0, x21
    4280:	mov	x1, x19
    4284:	bl	38c0 <_gcry_mpi_tdiv_qr>
    4288:	mov	x0, x19
    428c:	ldp	x19, x20, [sp, #16]
    4290:	ldp	x21, x22, [sp, #32]
    4294:	ldp	x29, x30, [sp], #64
    4298:	b	3f0 <_gcry_mpi_free>
    429c:	mov	x0, x3
    42a0:	bl	560 <_gcry_mpi_copy>
    42a4:	mov	x2, x22
    42a8:	mov	x3, x0
    42ac:	mov	x24, x0
    42b0:	mov	x1, x19
    42b4:	mov	x0, x21
    42b8:	bl	38c0 <_gcry_mpi_tdiv_qr>
    42bc:	ldr	w0, [x22, #8]
    42c0:	cmp	w0, w23
    42c4:	b.eq	42d4 <gcry_mpi_div+0xf4>  // b.none
    42c8:	ldr	w0, [x19, #4]
    42cc:	mov	x20, x24
    42d0:	cbnz	w0, 42f4 <gcry_mpi_div+0x114>
    42d4:	cbz	x24, 4254 <gcry_mpi_div+0x74>
    42d8:	mov	x0, x24
    42dc:	ldp	x19, x20, [sp, #16]
    42e0:	ldp	x21, x22, [sp, #32]
    42e4:	ldp	x23, x24, [sp, #48]
    42e8:	ldp	x29, x30, [sp], #64
    42ec:	b	3f0 <_gcry_mpi_free>
    42f0:	mov	x24, #0x0                   	// #0
    42f4:	mov	x1, x21
    42f8:	mov	x0, x21
    42fc:	mov	x2, #0x1                   	// #1
    4300:	bl	20a0 <gcry_mpi_sub_ui>
    4304:	mov	x2, x20
    4308:	mov	x1, x19
    430c:	mov	x0, x19
    4310:	bl	1c18 <gcry_mpi_add>
    4314:	b	42d4 <gcry_mpi_div+0xf4>
    4318:	cmp	w23, #0x0
    431c:	cset	w21, ne  // ne = any
    4320:	cmp	x1, x3
    4324:	b.eq	4434 <gcry_mpi_div+0x254>  // b.none
    4328:	mov	x0, x19
    432c:	mov	x2, x3
    4330:	mov	x1, x22
    4334:	bl	3288 <_gcry_mpi_tdiv_qr.constprop.0>
    4338:	ldr	w0, [x22, #8]
    433c:	cmp	w0, #0x0
    4340:	cset	w0, ne  // ne = any
    4344:	cmp	w0, w21
    4348:	b.eq	4254 <gcry_mpi_div+0x74>  // b.none
    434c:	ldr	w0, [x19, #4]
    4350:	cbz	w0, 4254 <gcry_mpi_div+0x74>
    4354:	mov	x2, x20
    4358:	mov	x1, x19
    435c:	mov	x0, x19
    4360:	ldp	x19, x20, [sp, #16]
    4364:	ldp	x21, x22, [sp, #32]
    4368:	ldp	x23, x24, [sp, #48]
    436c:	ldp	x29, x30, [sp], #64
    4370:	b	1c18 <gcry_mpi_add>
    4374:	ldr	w0, [x0, #4]
    4378:	bl	0 <_gcry_mpi_alloc>
    437c:	ldr	w24, [x20, #8]
    4380:	cmp	x21, x20
    4384:	mov	x23, x0
    4388:	ccmp	x20, x0, #0x4, ne  // ne = any
    438c:	b.eq	43f8 <gcry_mpi_div+0x218>  // b.none
    4390:	mov	x1, x0
    4394:	mov	x3, x20
    4398:	mov	x0, x21
    439c:	mov	x2, x22
    43a0:	bl	38c0 <_gcry_mpi_tdiv_qr>
    43a4:	ldr	w0, [x22, #8]
    43a8:	cmp	w24, w0
    43ac:	b.eq	43e4 <gcry_mpi_div+0x204>  // b.none
    43b0:	ldr	w0, [x23, #4]
    43b4:	cbz	w0, 43e4 <gcry_mpi_div+0x204>
    43b8:	mov	x1, x21
    43bc:	mov	x0, x21
    43c0:	mov	x2, #0x1                   	// #1
    43c4:	bl	20a0 <gcry_mpi_sub_ui>
    43c8:	mov	x2, x20
    43cc:	mov	x1, x23
    43d0:	mov	x0, x23
    43d4:	bl	1c18 <gcry_mpi_add>
    43d8:	cbz	x19, 43e4 <gcry_mpi_div+0x204>
    43dc:	mov	x0, x19
    43e0:	bl	3f0 <_gcry_mpi_free>
    43e4:	mov	x0, x23
    43e8:	b	42dc <gcry_mpi_div+0xfc>
    43ec:	adrp	x0, 0 <_gcry_mpi_alloc>
    43f0:	ldr	x0, [x0]
    43f4:	bl	9b98 <_gcry_log_bug>
    43f8:	mov	x0, x20
    43fc:	bl	560 <_gcry_mpi_copy>
    4400:	mov	x2, x22
    4404:	mov	x3, x0
    4408:	mov	x19, x0
    440c:	mov	x1, x23
    4410:	mov	x0, x21
    4414:	bl	38c0 <_gcry_mpi_tdiv_qr>
    4418:	ldr	w0, [x22, #8]
    441c:	cmp	w24, w0
    4420:	b.eq	43d8 <gcry_mpi_div+0x1f8>  // b.none
    4424:	ldr	w0, [x23, #4]
    4428:	cbz	w0, 43d8 <gcry_mpi_div+0x1f8>
    442c:	mov	x20, x19
    4430:	b	43b8 <gcry_mpi_div+0x1d8>
    4434:	mov	x0, x1
    4438:	bl	560 <_gcry_mpi_copy>
    443c:	mov	x20, x0
    4440:	mov	x1, x22
    4444:	mov	x0, x19
    4448:	mov	x2, x20
    444c:	bl	3288 <_gcry_mpi_tdiv_qr.constprop.0>
    4450:	ldr	w0, [x22, #8]
    4454:	cmp	w0, #0x0
    4458:	cset	w0, ne  // ne = any
    445c:	cmp	w0, w21
    4460:	b.eq	446c <gcry_mpi_div+0x28c>  // b.none
    4464:	ldr	w0, [x19, #4]
    4468:	cbnz	w0, 4478 <gcry_mpi_div+0x298>
    446c:	cbz	x20, 4254 <gcry_mpi_div+0x74>
    4470:	mov	x0, x20
    4474:	b	42dc <gcry_mpi_div+0xfc>
    4478:	mov	x2, x20
    447c:	mov	x1, x19
    4480:	mov	x0, x19
    4484:	bl	1c18 <gcry_mpi_add>
    4488:	b	446c <gcry_mpi_div+0x28c>
    448c:	nop
	...

0000000000004498 <gcry_mpi_cmp_ui>:
    4498:	stp	x29, x30, [sp, #-32]!
    449c:	mov	x29, sp
    44a0:	stp	x19, x20, [sp, #16]
    44a4:	mov	x19, x0
    44a8:	mov	x20, x1
    44ac:	bl	e30 <_gcry_mpi_normalize>
    44b0:	ldr	w0, [x19, #4]
    44b4:	cbz	w0, 44f8 <gcry_mpi_cmp_ui+0x60>
    44b8:	ldr	w1, [x19, #8]
    44bc:	cbnz	w1, 450c <gcry_mpi_cmp_ui+0x74>
    44c0:	cmp	w0, #0x1
    44c4:	b.eq	44d8 <gcry_mpi_cmp_ui+0x40>  // b.none
    44c8:	mov	w0, #0x1                   	// #1
    44cc:	ldp	x19, x20, [sp, #16]
    44d0:	ldp	x29, x30, [sp], #32
    44d4:	ret
    44d8:	ldr	x1, [x19, #16]
    44dc:	ldr	x1, [x1]
    44e0:	cmp	x1, x20
    44e4:	csetm	w2, cc  // cc = lo, ul, last
    44e8:	csel	w0, w2, w0, ls  // ls = plast
    44ec:	ldp	x19, x20, [sp, #16]
    44f0:	ldp	x29, x30, [sp], #32
    44f4:	ret
    44f8:	cmp	x20, #0x0
    44fc:	csetm	w0, ne  // ne = any
    4500:	ldp	x19, x20, [sp, #16]
    4504:	ldp	x29, x30, [sp], #32
    4508:	ret
    450c:	mov	w0, #0xffffffff            	// #-1
    4510:	b	44cc <gcry_mpi_cmp_ui+0x34>
    4514:	nop

0000000000004518 <gcry_mpi_cmp>:
    4518:	stp	x29, x30, [sp, #-32]!
    451c:	mov	x29, sp
    4520:	stp	x19, x20, [sp, #16]
    4524:	mov	x19, x0
    4528:	mov	x20, x1
    452c:	cbz	x0, 4570 <gcry_mpi_cmp+0x58>
    4530:	ldr	w0, [x0, #12]
    4534:	tbz	w0, #2, 4570 <gcry_mpi_cmp+0x58>
    4538:	cbz	x1, 4600 <gcry_mpi_cmp+0xe8>
    453c:	ldr	w0, [x20, #12]
    4540:	tbz	w0, #2, 4600 <gcry_mpi_cmp+0xe8>
    4544:	ldr	w0, [x19, #8]
    4548:	ldr	w1, [x20, #8]
    454c:	orr	w2, w0, w1
    4550:	cbz	w2, 4608 <gcry_mpi_cmp+0xf0>
    4554:	cmp	w0, w1
    4558:	b.lt	4600 <gcry_mpi_cmp+0xe8>  // b.tstop
    455c:	b.le	4634 <gcry_mpi_cmp+0x11c>
    4560:	mov	w0, #0x1                   	// #1
    4564:	ldp	x19, x20, [sp, #16]
    4568:	ldp	x29, x30, [sp], #32
    456c:	ret
    4570:	cbz	x20, 458c <gcry_mpi_cmp+0x74>
    4574:	ldr	w0, [x20, #12]
    4578:	tbz	w0, #2, 458c <gcry_mpi_cmp+0x74>
    457c:	cbz	x19, 4560 <gcry_mpi_cmp+0x48>
    4580:	ldr	w0, [x19, #12]
    4584:	tbz	w0, #2, 4560 <gcry_mpi_cmp+0x48>
    4588:	b	4544 <gcry_mpi_cmp+0x2c>
    458c:	mov	x0, x19
    4590:	bl	e30 <_gcry_mpi_normalize>
    4594:	mov	x0, x20
    4598:	bl	e30 <_gcry_mpi_normalize>
    459c:	ldp	w2, w5, [x19, #4]
    45a0:	ldp	w0, w1, [x20, #4]
    45a4:	cbnz	w5, 4618 <gcry_mpi_cmp+0x100>
    45a8:	cbnz	w1, 4560 <gcry_mpi_cmp+0x48>
    45ac:	subs	w0, w2, w0
    45b0:	b.ne	4564 <gcry_mpi_cmp+0x4c>  // b.any
    45b4:	cbz	w2, 4608 <gcry_mpi_cmp+0xf0>
    45b8:	subs	w2, w2, #0x1
    45bc:	ldr	x3, [x19, #16]
    45c0:	ldr	x4, [x20, #16]
    45c4:	b.mi	4608 <gcry_mpi_cmp+0xf0>  // b.first
    45c8:	sxtw	x0, w2
    45cc:	b	45d4 <gcry_mpi_cmp+0xbc>
    45d0:	tbnz	w0, #31, 4608 <gcry_mpi_cmp+0xf0>
    45d4:	ldr	x2, [x3, x0, lsl #3]
    45d8:	ldr	x1, [x4, x0, lsl #3]
    45dc:	sub	x0, x0, #0x1
    45e0:	cmp	x2, x1
    45e4:	b.eq	45d0 <gcry_mpi_cmp+0xb8>  // b.none
    45e8:	cmp	w5, #0x0
    45ec:	cset	w3, ne  // ne = any
    45f0:	cmp	x2, x1
    45f4:	cset	w0, ls  // ls = plast
    45f8:	cmp	w3, w0
    45fc:	b.eq	4560 <gcry_mpi_cmp+0x48>  // b.none
    4600:	mov	w0, #0xffffffff            	// #-1
    4604:	b	4564 <gcry_mpi_cmp+0x4c>
    4608:	mov	w0, #0x0                   	// #0
    460c:	ldp	x19, x20, [sp, #16]
    4610:	ldp	x29, x30, [sp], #32
    4614:	ret
    4618:	cbz	w1, 4600 <gcry_mpi_cmp+0xe8>
    461c:	cmp	w2, w0
    4620:	add	w0, w2, w0
    4624:	b.eq	45b4 <gcry_mpi_cmp+0x9c>  // b.none
    4628:	ldp	x19, x20, [sp, #16]
    462c:	ldp	x29, x30, [sp], #32
    4630:	ret
    4634:	add	w2, w0, #0xe
    4638:	adds	w0, w0, #0x7
    463c:	csel	w0, w2, w0, mi  // mi = first
    4640:	ldr	x1, [x20, #16]
    4644:	asr	w2, w0, #3
    4648:	ldr	x0, [x19, #16]
    464c:	sxtw	x2, w2
    4650:	ldp	x19, x20, [sp, #16]
    4654:	ldp	x29, x30, [sp], #32
    4658:	b	0 <grub_memcmp>
    465c:	nop

0000000000004660 <gcry_mpi_invm>:
    4660:	stp	x29, x30, [sp, #-128]!
    4664:	mov	x29, sp
    4668:	stp	x19, x20, [sp, #16]
    466c:	mov	x20, x2
    4670:	stp	x21, x22, [sp, #32]
    4674:	stp	x23, x24, [sp, #48]
    4678:	stp	x25, x26, [sp, #64]
    467c:	stp	x27, x28, [sp, #80]
    4680:	str	x0, [sp, #112]
    4684:	mov	x0, x1
    4688:	bl	560 <_gcry_mpi_copy>
    468c:	mov	x19, x0
    4690:	mov	x0, x20
    4694:	bl	560 <_gcry_mpi_copy>
    4698:	mov	x20, x0
    469c:	b	46d4 <gcry_mpi_invm+0x74>
    46a0:	mov	w1, #0x0                   	// #0
    46a4:	mov	x0, x20
    46a8:	bl	fc0 <gcry_mpi_test_bit>
    46ac:	mov	w3, w0
    46b0:	mov	x1, x19
    46b4:	mov	x0, x19
    46b8:	mov	w2, #0x1                   	// #1
    46bc:	cbnz	w3, 46e4 <gcry_mpi_invm+0x84>
    46c0:	bl	11b0 <gcry_mpi_rshift>
    46c4:	mov	x1, x20
    46c8:	mov	x0, x20
    46cc:	mov	w2, #0x1                   	// #1
    46d0:	bl	11b0 <gcry_mpi_rshift>
    46d4:	mov	x0, x19
    46d8:	mov	w1, #0x0                   	// #0
    46dc:	bl	fc0 <gcry_mpi_test_bit>
    46e0:	cbz	w0, 46a0 <gcry_mpi_invm+0x40>
    46e4:	mov	w1, #0x0                   	// #0
    46e8:	mov	x0, x20
    46ec:	bl	fc0 <gcry_mpi_test_bit>
    46f0:	mov	w23, w0
    46f4:	mov	x0, #0x1                   	// #1
    46f8:	bl	a98 <_gcry_mpi_alloc_set_ui>
    46fc:	mov	x24, x0
    4700:	cbz	w23, 4914 <gcry_mpi_invm+0x2b4>
    4704:	mov	x0, x19
    4708:	bl	560 <_gcry_mpi_copy>
    470c:	mov	x26, x0
    4710:	mov	x0, x20
    4714:	bl	560 <_gcry_mpi_copy>
    4718:	mov	x27, x0
    471c:	mov	x0, x20
    4720:	bl	560 <_gcry_mpi_copy>
    4724:	mov	w1, #0x0                   	// #0
    4728:	mov	x28, x0
    472c:	mov	x0, x19
    4730:	bl	fc0 <gcry_mpi_test_bit>
    4734:	cbnz	w0, 4888 <gcry_mpi_invm+0x228>
    4738:	mov	x0, #0x1                   	// #1
    473c:	bl	a98 <_gcry_mpi_alloc_set_ui>
    4740:	mov	x21, x0
    4744:	mov	x25, #0x0                   	// #0
    4748:	stp	xzr, xzr, [sp, #96]
    474c:	mov	x0, x19
    4750:	bl	560 <_gcry_mpi_copy>
    4754:	mov	x22, x0
    4758:	cbnz	w23, 48d0 <gcry_mpi_invm+0x270>
    475c:	mov	x0, x21
    4760:	mov	w1, #0x0                   	// #0
    4764:	bl	fc0 <gcry_mpi_test_bit>
    4768:	cbnz	w0, 48f0 <gcry_mpi_invm+0x290>
    476c:	mov	x0, x25
    4770:	mov	w1, #0x0                   	// #0
    4774:	bl	fc0 <gcry_mpi_test_bit>
    4778:	cbnz	w0, 48f0 <gcry_mpi_invm+0x290>
    477c:	mov	x1, x21
    4780:	mov	x0, x21
    4784:	mov	w2, #0x1                   	// #1
    4788:	bl	11b0 <gcry_mpi_rshift>
    478c:	mov	x1, x25
    4790:	mov	x0, x25
    4794:	mov	w2, #0x1                   	// #1
    4798:	bl	11b0 <gcry_mpi_rshift>
    479c:	mov	w2, #0x1                   	// #1
    47a0:	mov	x1, x22
    47a4:	mov	x0, x22
    47a8:	bl	11b0 <gcry_mpi_rshift>
    47ac:	mov	x0, x22
    47b0:	mov	w1, #0x0                   	// #0
    47b4:	bl	fc0 <gcry_mpi_test_bit>
    47b8:	cbz	w0, 4758 <gcry_mpi_invm+0xf8>
    47bc:	ldr	w0, [x22, #8]
    47c0:	cbnz	w0, 49c4 <gcry_mpi_invm+0x364>
    47c4:	mov	x1, x21
    47c8:	mov	x0, x24
    47cc:	bl	860 <gcry_mpi_set>
    47d0:	cbz	w23, 4b00 <gcry_mpi_invm+0x4a0>
    47d4:	mov	x1, x22
    47d8:	mov	x0, x26
    47dc:	bl	860 <gcry_mpi_set>
    47e0:	mov	x2, x27
    47e4:	mov	x1, x24
    47e8:	mov	x0, x21
    47ec:	bl	2328 <gcry_mpi_sub>
    47f0:	cbz	w23, 4a18 <gcry_mpi_invm+0x3b8>
    47f4:	mov	x0, x22
    47f8:	mov	x2, x28
    47fc:	mov	x1, x26
    4800:	bl	2328 <gcry_mpi_sub>
    4804:	ldr	w0, [x21, #8]
    4808:	cbnz	w0, 4ac0 <gcry_mpi_invm+0x460>
    480c:	mov	x0, x22
    4810:	mov	x1, #0x0                   	// #0
    4814:	bl	4498 <gcry_mpi_cmp_ui>
    4818:	cbnz	w0, 48d0 <gcry_mpi_invm+0x270>
    481c:	ldr	x0, [sp, #112]
    4820:	mov	x1, x24
    4824:	bl	860 <gcry_mpi_set>
    4828:	mov	x0, x24
    482c:	bl	3f0 <_gcry_mpi_free>
    4830:	mov	x0, x27
    4834:	bl	3f0 <_gcry_mpi_free>
    4838:	mov	x0, x21
    483c:	bl	3f0 <_gcry_mpi_free>
    4840:	mov	x0, x26
    4844:	bl	3f0 <_gcry_mpi_free>
    4848:	mov	x0, x28
    484c:	bl	3f0 <_gcry_mpi_free>
    4850:	mov	x0, x22
    4854:	bl	3f0 <_gcry_mpi_free>
    4858:	mov	x0, x19
    485c:	bl	3f0 <_gcry_mpi_free>
    4860:	mov	x0, x20
    4864:	bl	3f0 <_gcry_mpi_free>
    4868:	mov	w0, #0x1                   	// #1
    486c:	ldp	x19, x20, [sp, #16]
    4870:	ldp	x21, x22, [sp, #32]
    4874:	ldp	x23, x24, [sp, #48]
    4878:	ldp	x25, x26, [sp, #64]
    487c:	ldp	x27, x28, [sp, #80]
    4880:	ldp	x29, x30, [sp], #128
    4884:	ret
    4888:	mov	x0, #0x0                   	// #0
    488c:	bl	a98 <_gcry_mpi_alloc_set_ui>
    4890:	mov	x21, x0
    4894:	mov	x25, #0x0                   	// #0
    4898:	stp	xzr, xzr, [sp, #96]
    489c:	mov	x0, x20
    48a0:	bl	560 <_gcry_mpi_copy>
    48a4:	mov	x22, x0
    48a8:	ldr	w0, [x0, #8]
    48ac:	mov	w1, #0x0                   	// #0
    48b0:	cmp	w0, #0x0
    48b4:	cset	w0, eq  // eq = none
    48b8:	str	w0, [x22, #8]
    48bc:	mov	x0, x22
    48c0:	bl	fc0 <gcry_mpi_test_bit>
    48c4:	cbnz	w0, 47bc <gcry_mpi_invm+0x15c>
    48c8:	cbz	w23, 475c <gcry_mpi_invm+0xfc>
    48cc:	nop
    48d0:	mov	x0, x21
    48d4:	mov	w1, #0x0                   	// #0
    48d8:	bl	fc0 <gcry_mpi_test_bit>
    48dc:	cbnz	w0, 498c <gcry_mpi_invm+0x32c>
    48e0:	mov	x1, x21
    48e4:	mov	x0, x21
    48e8:	mov	w2, #0x1                   	// #1
    48ec:	b	4798 <gcry_mpi_invm+0x138>
    48f0:	mov	x2, x20
    48f4:	mov	x1, x21
    48f8:	mov	x0, x21
    48fc:	bl	1c18 <gcry_mpi_add>
    4900:	mov	x2, x19
    4904:	mov	x1, x25
    4908:	mov	x0, x25
    490c:	bl	2328 <gcry_mpi_sub>
    4910:	b	477c <gcry_mpi_invm+0x11c>
    4914:	mov	x0, #0x0                   	// #0
    4918:	bl	a98 <_gcry_mpi_alloc_set_ui>
    491c:	mov	x1, x0
    4920:	mov	x0, x19
    4924:	str	x1, [sp, #96]
    4928:	bl	560 <_gcry_mpi_copy>
    492c:	mov	x26, x0
    4930:	mov	x0, x20
    4934:	bl	560 <_gcry_mpi_copy>
    4938:	mov	x27, x0
    493c:	ldr	w0, [x19, #4]
    4940:	bl	0 <_gcry_mpi_alloc>
    4944:	str	x0, [sp, #104]
    4948:	mov	x1, x24
    494c:	mov	x2, x19
    4950:	bl	2328 <gcry_mpi_sub>
    4954:	mov	x0, x20
    4958:	bl	560 <_gcry_mpi_copy>
    495c:	mov	x28, x0
    4960:	mov	w1, #0x0                   	// #0
    4964:	mov	x0, x19
    4968:	bl	fc0 <gcry_mpi_test_bit>
    496c:	cbnz	w0, 49a0 <gcry_mpi_invm+0x340>
    4970:	mov	x0, #0x1                   	// #1
    4974:	bl	a98 <_gcry_mpi_alloc_set_ui>
    4978:	mov	x21, x0
    497c:	mov	x0, #0x0                   	// #0
    4980:	bl	a98 <_gcry_mpi_alloc_set_ui>
    4984:	mov	x25, x0
    4988:	b	474c <gcry_mpi_invm+0xec>
    498c:	mov	x2, x20
    4990:	mov	x1, x21
    4994:	mov	x0, x21
    4998:	bl	1c18 <gcry_mpi_add>
    499c:	b	48e0 <gcry_mpi_invm+0x280>
    49a0:	mov	x0, #0x0                   	// #0
    49a4:	bl	a98 <_gcry_mpi_alloc_set_ui>
    49a8:	mov	x21, x0
    49ac:	mov	x0, #0x1                   	// #1
    49b0:	bl	a98 <_gcry_mpi_alloc_set_ui>
    49b4:	mov	x25, x0
    49b8:	mov	w1, #0x1                   	// #1
    49bc:	str	w1, [x0, #8]
    49c0:	b	489c <gcry_mpi_invm+0x23c>
    49c4:	mov	x0, x27
    49c8:	mov	x2, x21
    49cc:	mov	x1, x20
    49d0:	bl	2328 <gcry_mpi_sub>
    49d4:	ldr	w3, [x19, #8]
    49d8:	cmp	w3, #0x0
    49dc:	cset	w0, eq  // eq = none
    49e0:	str	w0, [x19, #8]
    49e4:	cbz	w23, 4ae4 <gcry_mpi_invm+0x484>
    49e8:	str	w3, [x19, #8]
    49ec:	mov	x1, x22
    49f0:	mov	x0, x28
    49f4:	ldr	w2, [x22, #8]
    49f8:	str	w2, [sp, #124]
    49fc:	cmp	w2, #0x0
    4a00:	cset	w3, eq  // eq = none
    4a04:	str	w3, [x22, #8]
    4a08:	bl	860 <gcry_mpi_set>
    4a0c:	ldr	w2, [sp, #124]
    4a10:	str	w2, [x22, #8]
    4a14:	b	47e0 <gcry_mpi_invm+0x180>
    4a18:	ldp	x1, x2, [sp, #96]
    4a1c:	mov	x0, x25
    4a20:	bl	2328 <gcry_mpi_sub>
    4a24:	mov	x0, x22
    4a28:	mov	x2, x28
    4a2c:	mov	x1, x26
    4a30:	bl	2328 <gcry_mpi_sub>
    4a34:	ldr	w0, [x21, #8]
    4a38:	cbnz	w0, 4a8c <gcry_mpi_invm+0x42c>
    4a3c:	mov	x0, x22
    4a40:	mov	x1, #0x0                   	// #0
    4a44:	bl	4498 <gcry_mpi_cmp_ui>
    4a48:	cbnz	w0, 475c <gcry_mpi_invm+0xfc>
    4a4c:	ldr	x0, [sp, #112]
    4a50:	mov	x1, x24
    4a54:	bl	860 <gcry_mpi_set>
    4a58:	mov	x0, x24
    4a5c:	bl	3f0 <_gcry_mpi_free>
    4a60:	mov	x0, x27
    4a64:	bl	3f0 <_gcry_mpi_free>
    4a68:	mov	x0, x21
    4a6c:	bl	3f0 <_gcry_mpi_free>
    4a70:	ldr	x0, [sp, #96]
    4a74:	bl	3f0 <_gcry_mpi_free>
    4a78:	ldr	x0, [sp, #104]
    4a7c:	bl	3f0 <_gcry_mpi_free>
    4a80:	mov	x0, x25
    4a84:	bl	3f0 <_gcry_mpi_free>
    4a88:	b	4840 <gcry_mpi_invm+0x1e0>
    4a8c:	mov	x2, x20
    4a90:	mov	x1, x21
    4a94:	mov	x0, x21
    4a98:	bl	1c18 <gcry_mpi_add>
    4a9c:	mov	x2, x19
    4aa0:	mov	x1, x25
    4aa4:	mov	x0, x25
    4aa8:	bl	2328 <gcry_mpi_sub>
    4aac:	mov	x0, x22
    4ab0:	mov	x1, #0x0                   	// #0
    4ab4:	bl	4498 <gcry_mpi_cmp_ui>
    4ab8:	cbz	w0, 4a4c <gcry_mpi_invm+0x3ec>
    4abc:	b	475c <gcry_mpi_invm+0xfc>
    4ac0:	mov	x2, x20
    4ac4:	mov	x1, x21
    4ac8:	mov	x0, x21
    4acc:	bl	1c18 <gcry_mpi_add>
    4ad0:	mov	x0, x22
    4ad4:	mov	x1, #0x0                   	// #0
    4ad8:	bl	4498 <gcry_mpi_cmp_ui>
    4adc:	cbnz	w0, 48d0 <gcry_mpi_invm+0x270>
    4ae0:	b	481c <gcry_mpi_invm+0x1bc>
    4ae4:	ldr	x0, [sp, #104]
    4ae8:	mov	x2, x25
    4aec:	mov	x1, x19
    4af0:	str	w3, [sp, #124]
    4af4:	bl	2328 <gcry_mpi_sub>
    4af8:	ldr	w3, [sp, #124]
    4afc:	b	49e8 <gcry_mpi_invm+0x388>
    4b00:	ldr	x0, [sp, #96]
    4b04:	mov	x1, x25
    4b08:	bl	860 <gcry_mpi_set>
    4b0c:	b	47d4 <gcry_mpi_invm+0x174>

0000000000004b10 <gcry_mpi_powm>:
    4b10:	stp	x29, x30, [sp, #-256]!
    4b14:	mov	x29, sp
    4b18:	stp	x19, x20, [sp, #16]
    4b1c:	ldr	w20, [x2, #4]
    4b20:	stp	x21, x22, [sp, #32]
    4b24:	mov	x21, x3
    4b28:	ldr	w19, [x3, #4]
    4b2c:	stp	x23, x24, [sp, #48]
    4b30:	mov	x24, x1
    4b34:	stp	x25, x26, [sp, #64]
    4b38:	mov	w25, #0x0                   	// #0
    4b3c:	stp	x27, x28, [sp, #80]
    4b40:	str	x0, [sp, #112]
    4b44:	cbz	x1, 4b50 <gcry_mpi_powm+0x40>
    4b48:	ldr	w25, [x1, #12]
    4b4c:	and	w25, w25, #0x1
    4b50:	ldr	x0, [sp, #112]
    4b54:	ldr	x27, [x0, #16]
    4b58:	cbz	w19, 57f8 <gcry_mpi_powm+0xce8>
    4b5c:	cbz	w20, 5204 <gcry_mpi_powm+0x6f4>
    4b60:	ldp	w3, w1, [x21, #8]
    4b64:	sbfiz	x23, x19, #3, #32
    4b68:	mov	w0, w19
    4b6c:	str	x23, [sp, #128]
    4b70:	ands	w28, w1, #0x1
    4b74:	ldr	w1, [x2, #12]
    4b78:	ldr	x2, [x2, #16]
    4b7c:	str	w1, [sp, #124]
    4b80:	csel	w1, w19, wzr, ne  // ne = any
    4b84:	str	x2, [sp, #104]
    4b88:	str	w28, [sp, #140]
    4b8c:	sxtw	x22, w19
    4b90:	str	w3, [sp, #180]
    4b94:	str	w1, [sp, #188]
    4b98:	mov	w1, w28
    4b9c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    4ba0:	str	x0, [sp, #96]
    4ba4:	ldr	x1, [x21, #16]
    4ba8:	add	x0, x1, x23
    4bac:	ldur	x0, [x0, #-8]
    4bb0:	cmp	xzr, x0, lsr #56
    4bb4:	lsr	x2, x0, #56
    4bb8:	b.ne	5700 <gcry_mpi_powm+0xbf0>  // b.any
    4bbc:	tst	x0, #0xff000000000000
    4bc0:	lsr	x2, x0, #48
    4bc4:	b.ne	570c <gcry_mpi_powm+0xbfc>  // b.any
    4bc8:	tst	x0, #0xff0000000000
    4bcc:	lsr	x2, x0, #40
    4bd0:	b.ne	5718 <gcry_mpi_powm+0xc08>  // b.any
    4bd4:	tst	x0, #0xff00000000
    4bd8:	lsr	x2, x0, #32
    4bdc:	b.ne	5724 <gcry_mpi_powm+0xc14>  // b.any
    4be0:	tst	x0, #0xff000000
    4be4:	lsr	x2, x0, #24
    4be8:	b.ne	5690 <gcry_mpi_powm+0xb80>  // b.any
    4bec:	tst	x0, #0xff0000
    4bf0:	lsr	x2, x0, #16
    4bf4:	b.ne	5730 <gcry_mpi_powm+0xc20>  // b.any
    4bf8:	tst	x0, #0xff00
    4bfc:	lsr	x3, x0, #8
    4c00:	mov	w2, #0x40                  	// #64
    4c04:	b.ne	573c <gcry_mpi_powm+0xc2c>  // b.any
    4c08:	adrp	x3, 0 <_gcry_mpi_alloc>
    4c0c:	ldr	x23, [x3]
    4c10:	ldrb	w0, [x23, x0]
    4c14:	subs	w0, w2, w0
    4c18:	str	w0, [sp, #152]
    4c1c:	b.ne	53b4 <gcry_mpi_powm+0x8a4>  // b.any
    4c20:	cmp	w19, #0x0
    4c24:	b.le	4c84 <gcry_mpi_powm+0x174>
    4c28:	ldr	x4, [sp, #96]
    4c2c:	add	x2, x1, #0xf
    4c30:	sub	w3, w19, #0x1
    4c34:	sub	x2, x2, x4
    4c38:	orr	x0, x1, x4
    4c3c:	cmp	x2, #0x1e
    4c40:	and	x0, x0, #0xf
    4c44:	ccmp	w3, #0xb, #0x0, hi  // hi = pmore
    4c48:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    4c4c:	b.ne	5630 <gcry_mpi_powm+0xb20>  // b.any
    4c50:	lsr	w3, w19, #1
    4c54:	mov	x0, x1
    4c58:	mov	x2, x4
    4c5c:	add	x3, x1, w3, uxtw #4
    4c60:	ldp	x4, x5, [x0], #16
    4c64:	stp	x4, x5, [x2], #16
    4c68:	cmp	x0, x3
    4c6c:	b.ne	4c60 <gcry_mpi_powm+0x150>  // b.any
    4c70:	and	w0, w19, #0xfffffffe
    4c74:	tbz	w19, #0, 4c84 <gcry_mpi_powm+0x174>
    4c78:	ldr	x2, [sp, #96]
    4c7c:	ldr	x1, [x1, x0, lsl #3]
    4c80:	str	x1, [x2, x0, lsl #3]
    4c84:	ldp	w26, w0, [x24, #4]
    4c88:	str	w0, [sp, #196]
    4c8c:	cmp	w19, w26
    4c90:	b.ge	5250 <gcry_mpi_powm+0x740>  // b.tcont
    4c94:	cmp	w25, #0x0
    4c98:	mov	w1, w25
    4c9c:	csinc	w0, wzr, w26, eq  // eq = none
    4ca0:	str	w0, [sp, #184]
    4ca4:	add	w0, w26, #0x1
    4ca8:	bl	f0 <_gcry_mpi_alloc_limb_space>
    4cac:	mov	x21, x0
    4cb0:	cmp	w26, #0x0
    4cb4:	b.le	4d10 <gcry_mpi_powm+0x200>
    4cb8:	ldr	x1, [x24, #16]
    4cbc:	sub	w2, w26, #0x1
    4cc0:	add	x0, x1, #0xf
    4cc4:	sub	x0, x0, x21
    4cc8:	cmp	x0, #0x1e
    4ccc:	orr	x0, x1, x21
    4cd0:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    4cd4:	and	x0, x0, #0xf
    4cd8:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    4cdc:	b.ne	5670 <gcry_mpi_powm+0xb60>  // b.any
    4ce0:	lsr	w3, w26, #1
    4ce4:	mov	x0, x1
    4ce8:	mov	x2, x21
    4cec:	add	x3, x1, w3, uxtw #4
    4cf0:	ldp	x4, x5, [x0], #16
    4cf4:	stp	x4, x5, [x2], #16
    4cf8:	cmp	x0, x3
    4cfc:	b.ne	4cf0 <gcry_mpi_powm+0x1e0>  // b.any
    4d00:	and	w0, w26, #0xfffffffe
    4d04:	tbz	w26, #0, 4d10 <gcry_mpi_powm+0x200>
    4d08:	ldr	x1, [x1, x0, lsl #3]
    4d0c:	str	x1, [x21, x0, lsl #3]
    4d10:	ldr	x4, [sp, #96]
    4d14:	mov	w3, w26
    4d18:	ldr	x0, [sp, #128]
    4d1c:	mov	x2, x21
    4d20:	mov	w5, w19
    4d24:	mov	w1, #0x0                   	// #0
    4d28:	add	x0, x21, x0
    4d2c:	bl	7668 <_gcry_mpih_divrem>
    4d30:	mov	x0, x22
    4d34:	mov	w26, w19
    4d38:	cmp	w19, #0x0
    4d3c:	sub	x2, x21, #0x8
    4d40:	b.gt	4d58 <gcry_mpi_powm+0x248>
    4d44:	b	4d64 <gcry_mpi_powm+0x254>
    4d48:	sub	w26, w0, #0x1
    4d4c:	sub	x0, x0, #0x1
    4d50:	cmp	w0, #0x0
    4d54:	b.le	5520 <gcry_mpi_powm+0xa10>
    4d58:	ldr	x1, [x2, x0, lsl #3]
    4d5c:	mov	w26, w0
    4d60:	cbz	x1, 4d48 <gcry_mpi_powm+0x238>
    4d64:	str	x21, [sp, #168]
    4d68:	cmp	x27, x21
    4d6c:	b.eq	5498 <gcry_mpi_powm+0x988>  // b.none
    4d70:	ldr	x0, [sp, #104]
    4d74:	str	xzr, [sp, #160]
    4d78:	str	wzr, [sp, #176]
    4d7c:	cmp	x27, x0
    4d80:	b.eq	527c <gcry_mpi_powm+0x76c>  // b.none
    4d84:	ldr	x0, [sp, #96]
    4d88:	cmp	x27, x0
    4d8c:	b.eq	5310 <gcry_mpi_powm+0x800>  // b.none
    4d90:	ldr	x0, [sp, #112]
    4d94:	lsl	w25, w19, #1
    4d98:	ldr	w0, [x0]
    4d9c:	cmp	w0, w19, lsl #1
    4da0:	b.lt	539c <gcry_mpi_powm+0x88c>  // b.tstop
    4da4:	nop
    4da8:	cmp	w26, #0x0
    4dac:	b.le	4e00 <gcry_mpi_powm+0x2f0>
    4db0:	orr	x0, x27, x21
    4db4:	add	x1, x27, #0xf
    4db8:	sub	x1, x1, x21
    4dbc:	tst	x0, #0xf
    4dc0:	sub	w0, w26, #0x1
    4dc4:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    4dc8:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    4dcc:	b.ls	5650 <gcry_mpi_powm+0xb40>  // b.plast
    4dd0:	lsr	w8, w26, #1
    4dd4:	mov	x2, x27
    4dd8:	mov	x3, x21
    4ddc:	add	x8, x27, w8, uxtw #4
    4de0:	ldp	x0, x1, [x3], #16
    4de4:	stp	x0, x1, [x2], #16
    4de8:	cmp	x2, x8
    4dec:	b.ne	4de0 <gcry_mpi_powm+0x2d0>  // b.any
    4df0:	and	w2, w26, #0xfffffffe
    4df4:	tbz	w26, #0, 4e00 <gcry_mpi_powm+0x2f0>
    4df8:	ldr	x3, [x21, x2, lsl #3]
    4dfc:	str	x3, [x27, x2, lsl #3]
    4e00:	ldr	w1, [sp, #140]
    4e04:	add	w0, w25, #0x2
    4e08:	cmp	w1, #0x0
    4e0c:	csel	w1, w1, w0, eq  // eq = none
    4e10:	str	w1, [sp, #140]
    4e14:	mov	w1, w28
    4e18:	bl	f0 <_gcry_mpi_alloc_limb_space>
    4e1c:	str	x0, [sp, #144]
    4e20:	mov	x2, #0x28                  	// #40
    4e24:	add	x0, sp, #0xd8
    4e28:	mov	w1, #0x0                   	// #0
    4e2c:	bl	0 <grub_memset>
    4e30:	ldr	x0, [sp, #104]
    4e34:	str	wzr, [sp, #192]
    4e38:	ldr	x0, [x0]
    4e3c:	tbz	w0, #0, 4e50 <gcry_mpi_powm+0x340>
    4e40:	ldr	w0, [x24, #8]
    4e44:	cmp	w0, #0x0
    4e48:	cset	w0, ne  // ne = any
    4e4c:	str	w0, [sp, #192]
    4e50:	ldr	x1, [sp, #104]
    4e54:	sub	w0, w20, #0x1
    4e58:	mov	w3, w0
    4e5c:	ldr	x25, [x1, w0, sxtw #3]
    4e60:	cmp	xzr, x25, lsr #56
    4e64:	lsr	x0, x25, #56
    4e68:	b.ne	5748 <gcry_mpi_powm+0xc38>  // b.any
    4e6c:	tst	x25, #0xff000000000000
    4e70:	lsr	x0, x25, #48
    4e74:	b.ne	57b4 <gcry_mpi_powm+0xca4>  // b.any
    4e78:	tst	x25, #0xff0000000000
    4e7c:	lsr	x0, x25, #40
    4e80:	b.ne	5588 <gcry_mpi_powm+0xa78>  // b.any
    4e84:	tst	x25, #0xff00000000
    4e88:	lsr	x0, x25, #32
    4e8c:	b.ne	57bc <gcry_mpi_powm+0xcac>  // b.any
    4e90:	tst	x25, #0xff000000
    4e94:	lsr	x0, x25, #24
    4e98:	b.ne	57c4 <gcry_mpi_powm+0xcb4>  // b.any
    4e9c:	tst	x25, #0xff0000
    4ea0:	lsr	x0, x25, #16
    4ea4:	b.ne	57cc <gcry_mpi_powm+0xcbc>  // b.any
    4ea8:	tst	x25, #0xff00
    4eac:	lsr	x0, x25, #8
    4eb0:	mov	w2, #0x8                   	// #8
    4eb4:	b.ne	5590 <gcry_mpi_powm+0xa80>  // b.any
    4eb8:	mov	x0, x25
    4ebc:	mov	w1, #0x40                  	// #64
    4ec0:	ldrb	w0, [x23, x0]
    4ec4:	mov	w8, #0x3f                  	// #63
    4ec8:	ldr	w2, [sp, #124]
    4ecc:	mov	w23, w3
    4ed0:	sub	w0, w1, w0
    4ed4:	str	x22, [sp, #200]
    4ed8:	ldr	x20, [sp, #144]
    4edc:	sub	w24, w8, w0
    4ee0:	and	w2, w2, #0x1
    4ee4:	lsl	x25, x25, x0
    4ee8:	mov	w28, w24
    4eec:	mov	x22, x20
    4ef0:	mov	x24, x27
    4ef4:	mov	x0, #0x0                   	// #0
    4ef8:	lsl	x25, x25, #1
    4efc:	mov	x27, x21
    4f00:	mov	x20, x0
    4f04:	str	w2, [sp, #124]
    4f08:	mov	w2, w26
    4f0c:	str	wzr, [sp, #136]
    4f10:	cbnz	w28, 4f28 <gcry_mpi_powm+0x418>
    4f14:	subs	w23, w23, #0x1
    4f18:	b.mi	5090 <gcry_mpi_powm+0x580>  // b.first
    4f1c:	ldr	x0, [sp, #104]
    4f20:	mov	w28, #0x40                  	// #64
    4f24:	ldr	x25, [x0, w23, sxtw #3]
    4f28:	cmp	w2, #0xf
    4f2c:	lsl	w21, w2, #1
    4f30:	b.le	5014 <gcry_mpi_powm+0x504>
    4f34:	cbz	x20, 5070 <gcry_mpi_powm+0x560>
    4f38:	ldr	w0, [sp, #136]
    4f3c:	cmp	w0, w21
    4f40:	b.lt	5044 <gcry_mpi_powm+0x534>  // b.tstop
    4f44:	mov	x3, x20
    4f48:	mov	x1, x24
    4f4c:	mov	x0, x22
    4f50:	bl	6550 <_gcry_mpih_sqr_n>
    4f54:	cmp	w19, w21
    4f58:	b.lt	4fec <gcry_mpi_powm+0x4dc>  // b.tstop
    4f5c:	ldr	w1, [sp, #124]
    4f60:	lsr	x0, x25, #63
    4f64:	orr	w0, w1, w0
    4f68:	cbz	w0, 4fac <gcry_mpi_powm+0x49c>
    4f6c:	cmp	w26, #0xf
    4f70:	b.gt	5024 <gcry_mpi_powm+0x514>
    4f74:	mov	w4, w26
    4f78:	mov	x3, x27
    4f7c:	mov	w2, w21
    4f80:	mov	x1, x22
    4f84:	mov	x0, x24
    4f88:	bl	6b58 <_gcry_mpih_mul>
    4f8c:	add	w3, w21, w26
    4f90:	cmp	w19, w3
    4f94:	b.lt	4fc8 <gcry_mpi_powm+0x4b8>  // b.tstop
    4f98:	tbz	x25, #63, 4fac <gcry_mpi_powm+0x49c>
    4f9c:	mov	x0, x22
    4fa0:	mov	w21, w3
    4fa4:	mov	x22, x24
    4fa8:	mov	x24, x0
    4fac:	mov	x0, x24
    4fb0:	lsl	x25, x25, #1
    4fb4:	mov	x24, x22
    4fb8:	sub	w28, w28, #0x1
    4fbc:	mov	x22, x0
    4fc0:	mov	w2, w21
    4fc4:	b	4f10 <gcry_mpi_powm+0x400>
    4fc8:	ldr	x4, [sp, #96]
    4fcc:	mov	w5, w19
    4fd0:	ldr	x0, [sp, #128]
    4fd4:	mov	x2, x24
    4fd8:	mov	w1, #0x0                   	// #0
    4fdc:	add	x0, x24, x0
    4fe0:	bl	7668 <_gcry_mpih_divrem>
    4fe4:	mov	w3, w19
    4fe8:	b	4f98 <gcry_mpi_powm+0x488>
    4fec:	ldr	x4, [sp, #96]
    4ff0:	mov	w3, w21
    4ff4:	ldr	x0, [sp, #128]
    4ff8:	mov	w21, w19
    4ffc:	mov	w5, w19
    5000:	mov	x2, x22
    5004:	add	x0, x22, x0
    5008:	mov	w1, #0x0                   	// #0
    500c:	bl	7668 <_gcry_mpih_divrem>
    5010:	b	4f5c <gcry_mpi_powm+0x44c>
    5014:	mov	x1, x24
    5018:	mov	x0, x22
    501c:	bl	6338 <_gcry_mpih_sqr_n_basecase>
    5020:	b	4f54 <gcry_mpi_powm+0x444>
    5024:	add	x5, sp, #0xd8
    5028:	mov	w4, w26
    502c:	mov	x3, x27
    5030:	mov	w2, w21
    5034:	mov	x1, x22
    5038:	mov	x0, x24
    503c:	bl	6df0 <_gcry_mpih_mul_karatsuba_case>
    5040:	b	4f8c <gcry_mpi_powm+0x47c>
    5044:	mov	x0, x20
    5048:	mov	w1, #0x0                   	// #0
    504c:	str	w2, [sp, #156]
    5050:	bl	138 <_gcry_mpi_free_limb_space>
    5054:	mov	w0, w21
    5058:	mov	w1, #0x0                   	// #0
    505c:	str	w21, [sp, #136]
    5060:	bl	f0 <_gcry_mpi_alloc_limb_space>
    5064:	ldr	w2, [sp, #156]
    5068:	mov	x20, x0
    506c:	b	4f44 <gcry_mpi_powm+0x434>
    5070:	mov	w0, w21
    5074:	mov	w1, #0x0                   	// #0
    5078:	str	w2, [sp, #156]
    507c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    5080:	ldr	w2, [sp, #156]
    5084:	mov	x20, x0
    5088:	str	w21, [sp, #136]
    508c:	b	4f44 <gcry_mpi_powm+0x434>
    5090:	ldr	x0, [sp, #112]
    5094:	mov	x21, x20
    5098:	mov	w28, w2
    509c:	mov	x27, x24
    50a0:	ldr	x22, [sp, #200]
    50a4:	ldr	x20, [x0, #16]
    50a8:	ldr	w0, [sp, #152]
    50ac:	cbnz	w0, 5544 <gcry_mpi_powm+0xa34>
    50b0:	cmp	x24, x20
    50b4:	b.eq	5110 <gcry_mpi_powm+0x600>  // b.none
    50b8:	cmp	w2, #0x0
    50bc:	b.le	5110 <gcry_mpi_powm+0x600>
    50c0:	orr	x0, x20, x24
    50c4:	add	x1, x24, #0xf
    50c8:	sub	x1, x1, x20
    50cc:	tst	x0, #0xf
    50d0:	sub	w0, w2, #0x1
    50d4:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    50d8:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    50dc:	b.ls	56e0 <gcry_mpi_powm+0xbd0>  // b.plast
    50e0:	lsr	w5, w2, #1
    50e4:	mov	x0, x20
    50e8:	mov	x1, x24
    50ec:	add	x5, x20, w5, uxtw #4
    50f0:	ldp	x2, x3, [x1], #16
    50f4:	stp	x2, x3, [x0], #16
    50f8:	cmp	x0, x5
    50fc:	b.ne	50f0 <gcry_mpi_powm+0x5e0>  // b.any
    5100:	and	w0, w28, #0xfffffffe
    5104:	tbz	w28, #0, 5110 <gcry_mpi_powm+0x600>
    5108:	ldr	x1, [x27, x0, lsl #3]
    510c:	str	x1, [x20, x0, lsl #3]
    5110:	cmp	w28, w19
    5114:	b.ge	5458 <gcry_mpi_powm+0x948>  // b.tcont
    5118:	cmp	w28, #0x0
    511c:	b.le	5148 <gcry_mpi_powm+0x638>
    5120:	sxtw	x0, w28
    5124:	sub	x2, x20, #0x8
    5128:	b	513c <gcry_mpi_powm+0x62c>
    512c:	sub	w28, w0, #0x1
    5130:	sub	x0, x0, #0x1
    5134:	cmp	w0, #0x0
    5138:	b.le	5148 <gcry_mpi_powm+0x638>
    513c:	ldr	x1, [x2, x0, lsl #3]
    5140:	mov	w28, w0
    5144:	cbz	x1, 512c <gcry_mpi_powm+0x61c>
    5148:	add	x0, sp, #0xd8
    514c:	bl	6ac8 <_gcry_mpih_release_karatsuba_ctx>
    5150:	ldr	w0, [sp, #192]
    5154:	cmp	w28, #0x0
    5158:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    515c:	b.eq	53c8 <gcry_mpi_powm+0x8b8>  // b.none
    5160:	ldr	w0, [sp, #152]
    5164:	cbnz	w0, 5480 <gcry_mpi_powm+0x970>
    5168:	ldr	x1, [sp, #96]
    516c:	mov	w3, w28
    5170:	mov	x2, x20
    5174:	mov	x0, x20
    5178:	bl	73b8 <_gcry_mpih_sub_n>
    517c:	cmp	w19, w28
    5180:	b.eq	51d0 <gcry_mpi_powm+0x6c0>  // b.none
    5184:	ldr	x4, [sp, #96]
    5188:	sbfiz	x1, x28, #3, #32
    518c:	add	x3, x20, x1
    5190:	sub	w2, w19, w28
    5194:	add	x1, x4, x1
    5198:	ldr	x4, [x4, w28, sxtw #3]
    519c:	add	x1, x1, #0x8
    51a0:	subs	x5, x4, x0
    51a4:	str	x5, [x3], #8
    51a8:	cmp	x4, x0
    51ac:	b.cc	51c4 <gcry_mpi_powm+0x6b4>  // b.lo, b.ul, b.last
    51b0:	b	55c4 <gcry_mpi_powm+0xab4>
    51b4:	ldr	x0, [x1], #8
    51b8:	sub	x4, x0, #0x1
    51bc:	str	x4, [x3], #8
    51c0:	cbnz	x0, 55c4 <gcry_mpi_powm+0xab4>
    51c4:	subs	w2, w2, #0x1
    51c8:	b.ne	51b4 <gcry_mpi_powm+0x6a4>  // b.any
    51cc:	nop
    51d0:	mov	w28, w19
    51d4:	cmp	w19, #0x0
    51d8:	sub	x2, x20, #0x8
    51dc:	b.gt	51f4 <gcry_mpi_powm+0x6e4>
    51e0:	b	53d0 <gcry_mpi_powm+0x8c0>
    51e4:	sub	w28, w22, #0x1
    51e8:	sub	x22, x22, #0x1
    51ec:	cmp	w22, #0x0
    51f0:	b.le	53d0 <gcry_mpi_powm+0x8c0>
    51f4:	ldr	x0, [x2, x22, lsl #3]
    51f8:	mov	w28, w22
    51fc:	cbz	x0, 51e4 <gcry_mpi_powm+0x6d4>
    5200:	b	53d0 <gcry_mpi_powm+0x8c0>
    5204:	cmp	w19, #0x1
    5208:	b.eq	559c <gcry_mpi_powm+0xa8c>  // b.none
    520c:	ldr	x0, [sp, #112]
    5210:	mov	w1, #0x1                   	// #1
    5214:	str	w1, [x0, #4]
    5218:	ldr	w0, [x0]
    521c:	cmp	w0, #0x0
    5220:	b.le	56cc <gcry_mpi_powm+0xbbc>
    5224:	mov	x0, #0x1                   	// #1
    5228:	str	x0, [x27]
    522c:	ldr	x0, [sp, #112]
    5230:	str	wzr, [x0, #8]
    5234:	ldp	x19, x20, [sp, #16]
    5238:	ldp	x21, x22, [sp, #32]
    523c:	ldp	x23, x24, [sp, #48]
    5240:	ldp	x25, x26, [sp, #64]
    5244:	ldp	x27, x28, [sp, #80]
    5248:	ldp	x29, x30, [sp], #256
    524c:	ret
    5250:	cbz	w26, 55b8 <gcry_mpi_powm+0xaa8>
    5254:	ldr	x21, [x24, #16]
    5258:	cmp	x27, x21
    525c:	b.eq	549c <gcry_mpi_powm+0x98c>  // b.none
    5260:	ldr	x0, [sp, #104]
    5264:	str	xzr, [sp, #160]
    5268:	str	xzr, [sp, #168]
    526c:	str	wzr, [sp, #176]
    5270:	cmp	x27, x0
    5274:	str	wzr, [sp, #184]
    5278:	b.ne	4d84 <gcry_mpi_powm+0x274>  // b.any
    527c:	ldr	w0, [sp, #124]
    5280:	ands	w1, w0, #0x1
    5284:	mov	w0, w20
    5288:	csel	w2, w20, wzr, ne  // ne = any
    528c:	str	w2, [sp, #176]
    5290:	bl	f0 <_gcry_mpi_alloc_limb_space>
    5294:	str	x0, [sp, #104]
    5298:	mov	x2, x0
    529c:	cmp	w20, #0x0
    52a0:	b.le	57d4 <gcry_mpi_powm+0xcc4>
    52a4:	add	x0, x27, #0xf
    52a8:	sub	w1, w20, #0x1
    52ac:	sub	x0, x0, x2
    52b0:	cmp	x0, #0x1e
    52b4:	orr	x0, x27, x2
    52b8:	ccmp	w1, #0xb, #0x0, hi  // hi = pmore
    52bc:	and	x0, x0, #0xf
    52c0:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    52c4:	b.ne	5774 <gcry_mpi_powm+0xc64>  // b.any
    52c8:	lsr	w4, w20, #1
    52cc:	mov	x0, x27
    52d0:	mov	x1, x2
    52d4:	add	x4, x27, w4, uxtw #4
    52d8:	ldp	x2, x3, [x0], #16
    52dc:	stp	x2, x3, [x1], #16
    52e0:	cmp	x0, x4
    52e4:	b.ne	52d8 <gcry_mpi_powm+0x7c8>  // b.any
    52e8:	and	w0, w20, #0xfffffffe
    52ec:	tbz	w20, #0, 52fc <gcry_mpi_powm+0x7ec>
    52f0:	ldr	x2, [sp, #104]
    52f4:	ldr	x1, [x27, x0, lsl #3]
    52f8:	str	x1, [x2, x0, lsl #3]
    52fc:	ldr	x0, [sp, #104]
    5300:	str	x0, [sp, #160]
    5304:	ldr	x0, [sp, #96]
    5308:	cmp	x27, x0
    530c:	b.ne	4d90 <gcry_mpi_powm+0x280>  // b.any
    5310:	cbnz	x27, 5844 <gcry_mpi_powm+0xd34>
    5314:	ldr	w1, [sp, #140]
    5318:	mov	w0, w19
    531c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    5320:	str	x0, [sp, #96]
    5324:	mov	x1, x0
    5328:	cmp	w19, #0x0
    532c:	b.le	4d90 <gcry_mpi_powm+0x280>
    5330:	mov	x0, #0xf                   	// #15
    5334:	sub	x0, x0, x1
    5338:	cmp	x0, #0x1e
    533c:	sub	w0, w19, #0x1
    5340:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    5344:	and	x0, x1, #0xf
    5348:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    534c:	b.ne	5750 <gcry_mpi_powm+0xc40>  // b.any
    5350:	lsr	w4, w19, #1
    5354:	mov	x0, #0x0                   	// #0
    5358:	lsl	x4, x4, #4
    535c:	nop
    5360:	ldp	x2, x3, [x0], #16
    5364:	stp	x2, x3, [x1], #16
    5368:	cmp	x0, x4
    536c:	b.ne	5360 <gcry_mpi_powm+0x850>  // b.any
    5370:	and	w0, w19, #0xfffffffe
    5374:	tbz	w19, #0, 4d90 <gcry_mpi_powm+0x280>
    5378:	lsl	x1, x0, #3
    537c:	lsl	w25, w19, #1
    5380:	ldr	x2, [sp, #96]
    5384:	ldr	x1, [x1]
    5388:	str	x1, [x2, x0, lsl #3]
    538c:	ldr	x0, [sp, #112]
    5390:	ldr	w0, [x0]
    5394:	cmp	w0, w19, lsl #1
    5398:	b.ge	4da8 <gcry_mpi_powm+0x298>  // b.tcont
    539c:	ldr	x27, [sp, #112]
    53a0:	mov	w1, w25
    53a4:	mov	x0, x27
    53a8:	bl	1c8 <_gcry_mpi_resize>
    53ac:	ldr	x27, [x27, #16]
    53b0:	b	4da8 <gcry_mpi_powm+0x298>
    53b4:	ldr	w3, [sp, #152]
    53b8:	mov	w2, w19
    53bc:	ldr	x0, [sp, #96]
    53c0:	bl	5bb0 <_gcry_mpih_lshift>
    53c4:	b	4c84 <gcry_mpi_powm+0x174>
    53c8:	ldr	w0, [sp, #196]
    53cc:	str	w0, [sp, #180]
    53d0:	ldr	x0, [sp, #112]
    53d4:	ldr	x0, [x0, #16]
    53d8:	cmp	x0, x20
    53dc:	b.ne	5804 <gcry_mpi_powm+0xcf4>  // b.any
    53e0:	ldr	x0, [sp, #112]
    53e4:	ldr	w1, [sp, #180]
    53e8:	stp	w28, w1, [x0, #4]
    53ec:	ldr	x0, [sp, #96]
    53f0:	cbz	x0, 53fc <gcry_mpi_powm+0x8ec>
    53f4:	ldr	w1, [sp, #188]
    53f8:	bl	138 <_gcry_mpi_free_limb_space>
    53fc:	ldr	x0, [sp, #168]
    5400:	cbz	x0, 540c <gcry_mpi_powm+0x8fc>
    5404:	ldr	w1, [sp, #184]
    5408:	bl	138 <_gcry_mpi_free_limb_space>
    540c:	ldr	x0, [sp, #160]
    5410:	cbz	x0, 541c <gcry_mpi_powm+0x90c>
    5414:	ldr	w1, [sp, #176]
    5418:	bl	138 <_gcry_mpi_free_limb_space>
    541c:	ldr	x0, [sp, #144]
    5420:	cbz	x0, 542c <gcry_mpi_powm+0x91c>
    5424:	ldr	w1, [sp, #140]
    5428:	bl	138 <_gcry_mpi_free_limb_space>
    542c:	mov	x0, x21
    5430:	cbz	x21, 5234 <gcry_mpi_powm+0x724>
    5434:	mov	w1, #0x0                   	// #0
    5438:	bl	138 <_gcry_mpi_free_limb_space>
    543c:	ldp	x19, x20, [sp, #16]
    5440:	ldp	x21, x22, [sp, #32]
    5444:	ldp	x23, x24, [sp, #48]
    5448:	ldp	x25, x26, [sp, #64]
    544c:	ldp	x27, x28, [sp, #80]
    5450:	ldp	x29, x30, [sp], #256
    5454:	ret
    5458:	ldr	x4, [sp, #96]
    545c:	mov	w3, w28
    5460:	ldr	x0, [sp, #128]
    5464:	mov	w5, w19
    5468:	mov	x2, x20
    546c:	mov	w28, w19
    5470:	add	x0, x20, x0
    5474:	mov	w1, #0x0                   	// #0
    5478:	bl	7668 <_gcry_mpih_divrem>
    547c:	b	5118 <gcry_mpi_powm+0x608>
    5480:	mov	x3, x0
    5484:	mov	w2, w19
    5488:	ldr	x0, [sp, #96]
    548c:	mov	x1, x0
    5490:	bl	94e0 <_gcry_mpih_rshift>
    5494:	b	5168 <gcry_mpi_powm+0x658>
    5498:	cbnz	x27, 5824 <gcry_mpi_powm+0xd14>
    549c:	cmp	w25, #0x0
    54a0:	mov	w1, w25
    54a4:	csel	w0, w26, wzr, ne  // ne = any
    54a8:	str	w0, [sp, #184]
    54ac:	mov	w0, w26
    54b0:	bl	f0 <_gcry_mpi_alloc_limb_space>
    54b4:	mov	x21, x0
    54b8:	cmp	w26, #0x0
    54bc:	b.le	5518 <gcry_mpi_powm+0xa08>
    54c0:	add	x0, x27, #0xf
    54c4:	sub	w1, w26, #0x1
    54c8:	sub	x0, x0, x21
    54cc:	cmp	x0, #0x1e
    54d0:	orr	x0, x27, x21
    54d4:	ccmp	w1, #0xb, #0x0, hi  // hi = pmore
    54d8:	and	x0, x0, #0xf
    54dc:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
    54e0:	b.ne	5790 <gcry_mpi_powm+0xc80>  // b.any
    54e4:	lsr	w4, w26, #1
    54e8:	mov	x0, x27
    54ec:	mov	x1, x21
    54f0:	add	x4, x27, w4, uxtw #4
    54f4:	nop
    54f8:	ldp	x2, x3, [x0], #16
    54fc:	stp	x2, x3, [x1], #16
    5500:	cmp	x0, x4
    5504:	b.ne	54f8 <gcry_mpi_powm+0x9e8>  // b.any
    5508:	and	w0, w26, #0xfffffffe
    550c:	tbz	w26, #0, 5518 <gcry_mpi_powm+0xa08>
    5510:	ldr	x1, [x27, x0, lsl #3]
    5514:	str	x1, [x21, x0, lsl #3]
    5518:	str	x21, [sp, #168]
    551c:	b	4d70 <gcry_mpi_powm+0x260>
    5520:	cbnz	w26, 4d64 <gcry_mpi_powm+0x254>
    5524:	ldr	x0, [sp, #112]
    5528:	str	wzr, [sp, #140]
    552c:	str	xzr, [sp, #144]
    5530:	stp	xzr, x21, [sp, #160]
    5534:	mov	x21, #0x0                   	// #0
    5538:	stur	xzr, [x0, #4]
    553c:	str	wzr, [sp, #176]
    5540:	b	53ec <gcry_mpi_powm+0x8dc>
    5544:	ldr	w3, [sp, #152]
    5548:	mov	x1, x24
    554c:	mov	x0, x20
    5550:	bl	5bb0 <_gcry_mpih_lshift>
    5554:	ldr	x1, [sp, #112]
    5558:	ldr	x20, [x1, #16]
    555c:	cbz	x0, 5568 <gcry_mpi_powm+0xa58>
    5560:	str	x0, [x20, w28, sxtw #3]
    5564:	add	w28, w28, #0x1
    5568:	cmp	w28, w19
    556c:	b.ge	56a4 <gcry_mpi_powm+0xb94>  // b.tcont
    5570:	ldr	w3, [sp, #152]
    5574:	mov	w2, w28
    5578:	mov	x1, x20
    557c:	mov	x0, x20
    5580:	bl	94e0 <_gcry_mpih_rshift>
    5584:	b	5118 <gcry_mpi_powm+0x608>
    5588:	mov	w2, #0x28                  	// #40
    558c:	nop
    5590:	mov	w1, #0x40                  	// #64
    5594:	sub	w1, w1, w2
    5598:	b	4ec0 <gcry_mpi_powm+0x3b0>
    559c:	ldr	x0, [x21, #16]
    55a0:	ldr	x0, [x0]
    55a4:	cmp	x0, #0x1
    55a8:	b.ne	520c <gcry_mpi_powm+0x6fc>  // b.any
    55ac:	ldr	x0, [sp, #112]
    55b0:	str	wzr, [x0, #4]
    55b4:	b	522c <gcry_mpi_powm+0x71c>
    55b8:	mov	x21, #0x0                   	// #0
    55bc:	str	wzr, [sp, #184]
    55c0:	b	5524 <gcry_mpi_powm+0xa14>
    55c4:	cmp	x3, x1
    55c8:	b.eq	51d0 <gcry_mpi_powm+0x6c0>  // b.none
    55cc:	sub	w7, w2, #0x1
    55d0:	cmp	w7, #0x0
    55d4:	b.le	51d0 <gcry_mpi_powm+0x6c0>
    55d8:	orr	x4, x1, x3
    55dc:	add	x0, x3, #0xf
    55e0:	sub	x0, x0, x1
    55e4:	sub	w2, w2, #0x2
    55e8:	tst	x4, #0xf
    55ec:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    55f0:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    55f4:	b.ls	57dc <gcry_mpi_powm+0xccc>  // b.plast
    55f8:	lsr	w6, w7, #1
    55fc:	mov	x0, x3
    5600:	mov	x2, x1
    5604:	add	x6, x3, w6, uxtw #4
    5608:	ldp	x4, x5, [x2], #16
    560c:	stp	x4, x5, [x0], #16
    5610:	cmp	x0, x6
    5614:	b.ne	5608 <gcry_mpi_powm+0xaf8>  // b.any
    5618:	and	w0, w7, #0xfffffffe
    561c:	tbz	w7, #0, 51d0 <gcry_mpi_powm+0x6c0>
    5620:	sxtw	x0, w0
    5624:	ldr	x1, [x1, x0, lsl #3]
    5628:	str	x1, [x3, x0, lsl #3]
    562c:	b	51d0 <gcry_mpi_powm+0x6c0>
    5630:	mov	x3, x4
    5634:	mov	x0, #0x0                   	// #0
    5638:	ldr	x2, [x1, x0, lsl #3]
    563c:	str	x2, [x3, x0, lsl #3]
    5640:	add	x0, x0, #0x1
    5644:	cmp	w19, w0
    5648:	b.gt	5638 <gcry_mpi_powm+0xb28>
    564c:	b	4c84 <gcry_mpi_powm+0x174>
    5650:	mov	x2, #0x0                   	// #0
    5654:	nop
    5658:	ldr	x0, [x21, x2, lsl #3]
    565c:	str	x0, [x27, x2, lsl #3]
    5660:	add	x2, x2, #0x1
    5664:	cmp	w26, w2
    5668:	b.gt	5658 <gcry_mpi_powm+0xb48>
    566c:	b	4e00 <gcry_mpi_powm+0x2f0>
    5670:	mov	x0, #0x0                   	// #0
    5674:	nop
    5678:	ldr	x2, [x1, x0, lsl #3]
    567c:	str	x2, [x21, x0, lsl #3]
    5680:	add	x0, x0, #0x1
    5684:	cmp	w26, w0
    5688:	b.gt	5678 <gcry_mpi_powm+0xb68>
    568c:	b	4d10 <gcry_mpi_powm+0x200>
    5690:	mov	x0, x2
    5694:	mov	w3, #0x18                  	// #24
    5698:	mov	w2, #0x40                  	// #64
    569c:	sub	w2, w2, w3
    56a0:	b	4c08 <gcry_mpi_powm+0xf8>
    56a4:	ldr	x4, [sp, #96]
    56a8:	mov	w3, w28
    56ac:	ldr	x0, [sp, #128]
    56b0:	mov	w5, w19
    56b4:	mov	x2, x20
    56b8:	mov	w28, w19
    56bc:	add	x0, x20, x0
    56c0:	mov	w1, #0x0                   	// #0
    56c4:	bl	7668 <_gcry_mpih_divrem>
    56c8:	b	5570 <gcry_mpi_powm+0xa60>
    56cc:	ldr	x19, [sp, #112]
    56d0:	mov	x0, x19
    56d4:	bl	1c8 <_gcry_mpi_resize>
    56d8:	ldr	x27, [x19, #16]
    56dc:	b	5224 <gcry_mpi_powm+0x714>
    56e0:	mov	x0, #0x0                   	// #0
    56e4:	nop
    56e8:	ldr	x1, [x27, x0, lsl #3]
    56ec:	str	x1, [x20, x0, lsl #3]
    56f0:	add	x0, x0, #0x1
    56f4:	cmp	w28, w0
    56f8:	b.gt	56e8 <gcry_mpi_powm+0xbd8>
    56fc:	b	5110 <gcry_mpi_powm+0x600>
    5700:	mov	x0, x2
    5704:	mov	w3, #0x38                  	// #56
    5708:	b	5698 <gcry_mpi_powm+0xb88>
    570c:	mov	x0, x2
    5710:	mov	w3, #0x30                  	// #48
    5714:	b	5698 <gcry_mpi_powm+0xb88>
    5718:	mov	x0, x2
    571c:	mov	w3, #0x28                  	// #40
    5720:	b	5698 <gcry_mpi_powm+0xb88>
    5724:	mov	x0, x2
    5728:	mov	w3, #0x20                  	// #32
    572c:	b	5698 <gcry_mpi_powm+0xb88>
    5730:	mov	x0, x2
    5734:	mov	w3, #0x10                  	// #16
    5738:	b	5698 <gcry_mpi_powm+0xb88>
    573c:	mov	x0, x3
    5740:	mov	w3, #0x8                   	// #8
    5744:	b	5698 <gcry_mpi_powm+0xb88>
    5748:	mov	w2, #0x38                  	// #56
    574c:	b	5590 <gcry_mpi_powm+0xa80>
    5750:	mov	x2, x1
    5754:	mov	x0, #0x0                   	// #0
    5758:	lsl	x1, x0, #3
    575c:	ldr	x1, [x1]
    5760:	str	x1, [x2, x0, lsl #3]
    5764:	add	x0, x0, #0x1
    5768:	cmp	w19, w0
    576c:	b.gt	5758 <gcry_mpi_powm+0xc48>
    5770:	b	4d90 <gcry_mpi_powm+0x280>
    5774:	mov	x0, #0x0                   	// #0
    5778:	ldr	x1, [x27, x0, lsl #3]
    577c:	str	x1, [x2, x0, lsl #3]
    5780:	add	x0, x0, #0x1
    5784:	cmp	w20, w0
    5788:	b.gt	5778 <gcry_mpi_powm+0xc68>
    578c:	b	52fc <gcry_mpi_powm+0x7ec>
    5790:	mov	x0, #0x0                   	// #0
    5794:	nop
    5798:	ldr	x1, [x27, x0, lsl #3]
    579c:	str	x1, [x21, x0, lsl #3]
    57a0:	add	x0, x0, #0x1
    57a4:	cmp	w26, w0
    57a8:	b.gt	5798 <gcry_mpi_powm+0xc88>
    57ac:	str	x21, [sp, #168]
    57b0:	b	4d70 <gcry_mpi_powm+0x260>
    57b4:	mov	w2, #0x30                  	// #48
    57b8:	b	5590 <gcry_mpi_powm+0xa80>
    57bc:	mov	w2, #0x20                  	// #32
    57c0:	b	5590 <gcry_mpi_powm+0xa80>
    57c4:	mov	w2, #0x18                  	// #24
    57c8:	b	5590 <gcry_mpi_powm+0xa80>
    57cc:	mov	w2, #0x10                  	// #16
    57d0:	b	5590 <gcry_mpi_powm+0xa80>
    57d4:	str	x0, [sp, #160]
    57d8:	b	4d84 <gcry_mpi_powm+0x274>
    57dc:	mov	x0, #0x0                   	// #0
    57e0:	ldr	x2, [x1, x0, lsl #3]
    57e4:	str	x2, [x3, x0, lsl #3]
    57e8:	add	x0, x0, #0x1
    57ec:	cmp	w7, w0
    57f0:	b.gt	57e0 <gcry_mpi_powm+0xcd0>
    57f4:	b	51d0 <gcry_mpi_powm+0x6c0>
    57f8:	adrp	x0, 0 <_gcry_mpi_alloc>
    57fc:	ldr	x0, [x0]
    5800:	bl	0 <grub_fatal>
    5804:	adrp	x3, 0 <_gcry_mpi_alloc>
    5808:	adrp	x1, 0 <_gcry_mpi_alloc>
    580c:	adrp	x0, 0 <_gcry_mpi_alloc>
    5810:	mov	w2, #0x145                 	// #325
    5814:	ldr	x3, [x3]
    5818:	ldr	x1, [x1]
    581c:	ldr	x0, [x0]
    5820:	bl	0 <_gcry_assert_failed>
    5824:	adrp	x3, 0 <_gcry_mpi_alloc>
    5828:	adrp	x1, 0 <_gcry_mpi_alloc>
    582c:	adrp	x0, 0 <_gcry_mpi_alloc>
    5830:	mov	w2, #0x91                  	// #145
    5834:	ldr	x3, [x3]
    5838:	ldr	x1, [x1]
    583c:	ldr	x0, [x0]
    5840:	bl	0 <_gcry_assert_failed>
    5844:	adrp	x3, 0 <_gcry_mpi_alloc>
    5848:	adrp	x1, 0 <_gcry_mpi_alloc>
    584c:	adrp	x0, 0 <_gcry_mpi_alloc>
    5850:	mov	w2, #0xa0                  	// #160
    5854:	ldr	x3, [x3]
    5858:	ldr	x1, [x1]
    585c:	ldr	x0, [x0]
    5860:	bl	0 <_gcry_assert_failed>
    5864:	nop
	...

00000000000058a0 <_gcry_mpi_mulpowm>:
    58a0:	stp	x29, x30, [sp, #-128]!
    58a4:	mov	x29, sp
    58a8:	stp	x19, x20, [sp, #16]
    58ac:	mov	x20, x0
    58b0:	ldr	x0, [x1]
    58b4:	stp	x21, x22, [sp, #32]
    58b8:	stp	x23, x24, [sp, #48]
    58bc:	stp	x25, x26, [sp, #64]
    58c0:	stp	x27, x28, [sp, #80]
    58c4:	str	x2, [sp, #96]
    58c8:	str	x1, [sp, #120]
    58cc:	cbz	x0, 5ad8 <_gcry_mpi_mulpowm+0x238>
    58d0:	mov	x23, x3
    58d4:	sub	x2, x1, #0x8
    58d8:	mov	x0, #0x1                   	// #1
    58dc:	nop
    58e0:	sub	w24, w0, #0x1
    58e4:	mov	w27, w0
    58e8:	add	x0, x0, #0x1
    58ec:	ldr	x1, [x2, x0, lsl #3]
    58f0:	cbnz	x1, 58e0 <_gcry_mpi_mulpowm+0x40>
    58f4:	ldr	x0, [sp, #96]
    58f8:	mov	x22, #0x0                   	// #0
    58fc:	mov	w21, #0x0                   	// #0
    5900:	ldr	x0, [x0]
    5904:	cbz	x0, 5af8 <_gcry_mpi_mulpowm+0x258>
    5908:	bl	e80 <gcry_mpi_get_nbits>
    590c:	cmp	w21, w0
    5910:	csel	w21, w21, w0, ge  // ge = tcont
    5914:	mov	w19, w22
    5918:	ldr	x0, [sp, #96]
    591c:	add	x22, x22, #0x1
    5920:	ldr	x0, [x0, x22, lsl #3]
    5924:	cbnz	x0, 5908 <_gcry_mpi_mulpowm+0x68>
    5928:	cmp	w24, w19
    592c:	b.ne	5af8 <_gcry_mpi_mulpowm+0x258>  // b.any
    5930:	cbz	w21, 5b38 <_gcry_mpi_mulpowm+0x298>
    5934:	cmp	w27, #0x9
    5938:	b.gt	5b58 <_gcry_mpi_mulpowm+0x2b8>
    593c:	mov	w19, #0x1                   	// #1
    5940:	mov	x1, #0x8                   	// #8
    5944:	lsl	w0, w19, w27
    5948:	str	w0, [sp, #108]
    594c:	sxtw	x0, w0
    5950:	bl	99c8 <gcry_xcalloc>
    5954:	ldr	w1, [x23, #4]
    5958:	mov	x22, x0
    595c:	sxtw	x24, w24
    5960:	add	w0, w1, w19
    5964:	bl	0 <_gcry_mpi_alloc>
    5968:	mov	x26, x0
    596c:	mov	x1, #0x1                   	// #1
    5970:	mov	x0, x20
    5974:	bl	988 <gcry_mpi_set_ui>
    5978:	sub	w25, w21, w19
    597c:	mov	x27, x24
    5980:	mov	x3, x23
    5984:	mov	x2, x20
    5988:	mov	x1, x20
    598c:	mov	x0, x26
    5990:	mov	w28, #0x0                   	// #0
    5994:	bl	2a90 <gcry_mpi_mulm>
    5998:	ldr	x0, [sp, #96]
    599c:	lsl	w28, w28, #1
    59a0:	mov	w1, w25
    59a4:	ldr	x0, [x0, x27, lsl #3]
    59a8:	sub	x27, x27, #0x1
    59ac:	bl	fc0 <gcry_mpi_test_bit>
    59b0:	cmp	w0, #0x0
    59b4:	orr	w0, w28, #0x1
    59b8:	csel	w28, w0, w28, ne  // ne = any
    59bc:	cmn	w27, #0x1
    59c0:	b.ne	5998 <_gcry_mpi_mulpowm+0xf8>  // b.any
    59c4:	ldr	w0, [sp, #108]
    59c8:	cmp	w28, w0
    59cc:	b.cs	5b18 <_gcry_mpi_mulpowm+0x278>  // b.hs, b.nlast
    59d0:	sxtw	x27, w28
    59d4:	add	x6, x22, w28, sxtw #3
    59d8:	ldr	x1, [x22, x27, lsl #3]
    59dc:	cbz	x1, 5a48 <_gcry_mpi_mulpowm+0x1a8>
    59e0:	mov	x2, x1
    59e4:	add	w19, w19, #0x1
    59e8:	mov	x3, x23
    59ec:	mov	x1, x26
    59f0:	mov	x0, x20
    59f4:	bl	2a90 <gcry_mpi_mulm>
    59f8:	cmp	w21, w19
    59fc:	b.ge	5978 <_gcry_mpi_mulpowm+0xd8>  // b.tcont
    5a00:	mov	x0, x26
    5a04:	mov	x19, #0x0                   	// #0
    5a08:	bl	3f0 <_gcry_mpi_free>
    5a0c:	nop
    5a10:	ldr	x0, [x22, x19, lsl #3]
    5a14:	add	x19, x19, #0x1
    5a18:	bl	3f0 <_gcry_mpi_free>
    5a1c:	ldr	w0, [sp, #108]
    5a20:	cmp	w0, w19
    5a24:	b.gt	5a10 <_gcry_mpi_mulpowm+0x170>
    5a28:	mov	x0, x22
    5a2c:	ldp	x19, x20, [sp, #16]
    5a30:	ldp	x21, x22, [sp, #32]
    5a34:	ldp	x23, x24, [sp, #48]
    5a38:	ldp	x25, x26, [sp, #64]
    5a3c:	ldp	x27, x28, [sp, #80]
    5a40:	ldp	x29, x30, [sp], #128
    5a44:	b	99b8 <gcry_free>
    5a48:	cbnz	w28, 5a60 <_gcry_mpi_mulpowm+0x1c0>
    5a4c:	mov	x0, #0x1                   	// #1
    5a50:	bl	a98 <_gcry_mpi_alloc_set_ui>
    5a54:	str	x0, [x22]
    5a58:	ldr	x1, [x22, x27, lsl #3]
    5a5c:	b	59e0 <_gcry_mpi_mulpowm+0x140>
    5a60:	mov	x25, #0x0                   	// #0
    5a64:	b	5a8c <_gcry_mpi_mulpowm+0x1ec>
    5a68:	ldr	x2, [x0, x25, lsl #3]
    5a6c:	mov	x3, x23
    5a70:	mov	x0, x1
    5a74:	bl	2a90 <gcry_mpi_mulm>
    5a78:	ldr	x6, [sp, #112]
    5a7c:	ldr	x1, [x6]
    5a80:	cmp	x24, x25
    5a84:	add	x25, x25, #0x1
    5a88:	b.eq	5ac0 <_gcry_mpi_mulpowm+0x220>  // b.none
    5a8c:	asr	w0, w28, w25
    5a90:	tbz	w0, #0, 5a80 <_gcry_mpi_mulpowm+0x1e0>
    5a94:	str	x6, [sp, #112]
    5a98:	ldr	x0, [sp, #120]
    5a9c:	cbnz	x1, 5a68 <_gcry_mpi_mulpowm+0x1c8>
    5aa0:	ldr	x0, [x0, x25, lsl #3]
    5aa4:	bl	560 <_gcry_mpi_copy>
    5aa8:	mov	x1, x0
    5aac:	ldr	x6, [sp, #112]
    5ab0:	cmp	x24, x25
    5ab4:	add	x25, x25, #0x1
    5ab8:	str	x0, [x6]
    5abc:	b.ne	5a8c <_gcry_mpi_mulpowm+0x1ec>  // b.any
    5ac0:	cbnz	x1, 59e0 <_gcry_mpi_mulpowm+0x140>
    5ac4:	mov	w0, #0x0                   	// #0
    5ac8:	bl	0 <_gcry_mpi_alloc>
    5acc:	mov	x1, x0
    5ad0:	str	x0, [x22, x27, lsl #3]
    5ad4:	b	59e0 <_gcry_mpi_mulpowm+0x140>
    5ad8:	adrp	x3, 0 <_gcry_mpi_alloc>
    5adc:	adrp	x1, 0 <_gcry_mpi_alloc>
    5ae0:	adrp	x0, 0 <_gcry_mpi_alloc>
    5ae4:	mov	w2, #0x52                  	// #82
    5ae8:	ldr	x3, [x3]
    5aec:	ldr	x1, [x1]
    5af0:	ldr	x0, [x0]
    5af4:	bl	0 <_gcry_assert_failed>
    5af8:	adrp	x3, 0 <_gcry_mpi_alloc>
    5afc:	adrp	x1, 0 <_gcry_mpi_alloc>
    5b00:	adrp	x0, 0 <_gcry_mpi_alloc>
    5b04:	mov	w2, #0x5a                  	// #90
    5b08:	ldr	x3, [x3]
    5b0c:	ldr	x1, [x1]
    5b10:	ldr	x0, [x0]
    5b14:	bl	0 <_gcry_assert_failed>
    5b18:	adrp	x3, 0 <_gcry_mpi_alloc>
    5b1c:	adrp	x1, 0 <_gcry_mpi_alloc>
    5b20:	adrp	x0, 0 <_gcry_mpi_alloc>
    5b24:	mov	w2, #0x69                  	// #105
    5b28:	ldr	x3, [x3]
    5b2c:	ldr	x1, [x1]
    5b30:	ldr	x0, [x0]
    5b34:	bl	0 <_gcry_assert_failed>
    5b38:	adrp	x3, 0 <_gcry_mpi_alloc>
    5b3c:	adrp	x1, 0 <_gcry_mpi_alloc>
    5b40:	adrp	x0, 0 <_gcry_mpi_alloc>
    5b44:	mov	w2, #0x5b                  	// #91
    5b48:	ldr	x3, [x3]
    5b4c:	ldr	x1, [x1]
    5b50:	ldr	x0, [x0]
    5b54:	bl	0 <_gcry_assert_failed>
    5b58:	adrp	x3, 0 <_gcry_mpi_alloc>
    5b5c:	adrp	x1, 0 <_gcry_mpi_alloc>
    5b60:	adrp	x0, 0 <_gcry_mpi_alloc>
    5b64:	mov	w2, #0x5c                  	// #92
    5b68:	ldr	x3, [x3]
    5b6c:	ldr	x1, [x1]
    5b70:	ldr	x0, [x0]
    5b74:	bl	0 <_gcry_assert_failed>
	...

0000000000005bb0 <_gcry_mpih_lshift>:
    5bb0:	sub	w4, w2, #0x1
    5bb4:	mov	w8, #0x40                  	// #64
    5bb8:	sub	w8, w8, w3
    5bbc:	add	x7, x0, #0x8
    5bc0:	subs	w2, w2, #0x2
    5bc4:	ldr	x5, [x1, w4, sxtw #3]
    5bc8:	lsr	x0, x5, x8
    5bcc:	b.mi	5bfc <_gcry_mpih_lshift+0x4c>  // b.first
    5bd0:	sxtw	x2, w2
    5bd4:	nop
    5bd8:	mov	x4, x5
    5bdc:	ldr	x5, [x1, x2, lsl #3]
    5be0:	lsl	x4, x4, x3
    5be4:	lsr	x6, x5, x8
    5be8:	orr	x4, x4, x6
    5bec:	str	x4, [x7, x2, lsl #3]
    5bf0:	sub	x2, x2, #0x1
    5bf4:	tbz	w2, #31, 5bd8 <_gcry_mpih_lshift+0x28>
    5bf8:	mov	w2, #0xffffffff            	// #-1
    5bfc:	lsl	x5, x5, x3
    5c00:	str	x5, [x7, w2, sxtw #3]
    5c04:	ret

0000000000005c08 <mul_n_basecase>:
    5c08:	stp	x29, x30, [sp, #-80]!
    5c0c:	mov	x29, sp
    5c10:	stp	x19, x20, [sp, #16]
    5c14:	mov	w20, w3
    5c18:	ldr	x3, [x2]
    5c1c:	stp	x21, x22, [sp, #32]
    5c20:	mov	x21, x0
    5c24:	stp	x23, x24, [sp, #48]
    5c28:	cmp	x3, #0x1
    5c2c:	mov	x24, x2
    5c30:	str	x25, [sp, #64]
    5c34:	mov	x23, x1
    5c38:	b.hi	5d9c <mul_n_basecase+0x194>  // b.pmore
    5c3c:	b.eq	5dac <mul_n_basecase+0x1a4>  // b.none
    5c40:	cmp	w20, #0x0
    5c44:	b.le	5cf8 <mul_n_basecase+0xf0>
    5c48:	sub	w1, w20, #0x1
    5c4c:	ubfx	w0, w0, #3, #1
    5c50:	cmp	w1, #0x5
    5c54:	b.ls	5e28 <mul_n_basecase+0x220>  // b.plast
    5c58:	mov	w1, #0x0                   	// #0
    5c5c:	cbz	w0, 5c68 <mul_n_basecase+0x60>
    5c60:	mov	w1, #0x1                   	// #1
    5c64:	str	xzr, [x21]
    5c68:	sub	w3, w20, w0
    5c6c:	mov	w0, w0
    5c70:	lsr	w2, w3, #1
    5c74:	add	x0, x21, x0, lsl #3
    5c78:	add	x2, x0, w2, uxtw #4
    5c7c:	nop
    5c80:	stp	xzr, xzr, [x0], #16
    5c84:	cmp	x0, x2
    5c88:	b.ne	5c80 <mul_n_basecase+0x78>  // b.any
    5c8c:	and	w2, w3, #0xfffffffe
    5c90:	add	w0, w2, w1
    5c94:	cmp	w3, w2
    5c98:	b.eq	5cf8 <mul_n_basecase+0xf0>  // b.none
    5c9c:	str	xzr, [x21, w0, sxtw #3]
    5ca0:	add	w1, w0, #0x1
    5ca4:	cmp	w20, w1
    5ca8:	sbfiz	x1, x0, #3, #32
    5cac:	b.le	5cf8 <mul_n_basecase+0xf0>
    5cb0:	add	x1, x21, x1
    5cb4:	add	w2, w0, #0x2
    5cb8:	cmp	w20, w2
    5cbc:	str	xzr, [x1, #8]
    5cc0:	b.le	5cf8 <mul_n_basecase+0xf0>
    5cc4:	str	xzr, [x1, #16]
    5cc8:	add	w2, w0, #0x3
    5ccc:	cmp	w20, w2
    5cd0:	b.le	5cf8 <mul_n_basecase+0xf0>
    5cd4:	str	xzr, [x1, #24]
    5cd8:	add	w2, w0, #0x4
    5cdc:	cmp	w20, w2
    5ce0:	b.le	5cf8 <mul_n_basecase+0xf0>
    5ce4:	str	xzr, [x1, #32]
    5ce8:	add	w0, w0, #0x5
    5cec:	cmp	w20, w0
    5cf0:	b.le	5cf8 <mul_n_basecase+0xf0>
    5cf4:	str	xzr, [x1, #40]
    5cf8:	mov	x4, #0x0                   	// #0
    5cfc:	str	x4, [x21, w20, sxtw #3]
    5d00:	cmp	w20, #0x1
    5d04:	add	x25, x21, w20, sxtw #3
    5d08:	b.le	5d68 <mul_n_basecase+0x160>
    5d0c:	sub	w22, w20, #0x2
    5d10:	mov	x19, #0x8                   	// #8
    5d14:	add	x22, x22, #0x2
    5d18:	lsl	x22, x22, #3
    5d1c:	b	5d34 <mul_n_basecase+0x12c>
    5d20:	b.eq	5d84 <mul_n_basecase+0x17c>  // b.none
    5d24:	str	x4, [x25, x19]
    5d28:	add	x19, x19, #0x8
    5d2c:	cmp	x19, x22
    5d30:	b.eq	5d68 <mul_n_basecase+0x160>  // b.none
    5d34:	ldr	x3, [x24, x19]
    5d38:	mov	w2, w20
    5d3c:	mov	x1, x23
    5d40:	add	x0, x21, x19
    5d44:	cmp	x3, #0x1
    5d48:	mov	x4, #0x0                   	// #0
    5d4c:	b.ls	5d20 <mul_n_basecase+0x118>  // b.plast
    5d50:	bl	7258 <_gcry_mpih_addmul_1>
    5d54:	mov	x4, x0
    5d58:	str	x4, [x25, x19]
    5d5c:	add	x19, x19, #0x8
    5d60:	cmp	x19, x22
    5d64:	b.ne	5d34 <mul_n_basecase+0x12c>  // b.any
    5d68:	mov	x0, x4
    5d6c:	ldp	x19, x20, [sp, #16]
    5d70:	ldp	x21, x22, [sp, #32]
    5d74:	ldp	x23, x24, [sp, #48]
    5d78:	ldr	x25, [sp, #64]
    5d7c:	ldp	x29, x30, [sp], #80
    5d80:	ret
    5d84:	mov	w3, w20
    5d88:	mov	x2, x23
    5d8c:	mov	x1, x0
    5d90:	bl	7370 <_gcry_mpih_add_n>
    5d94:	mov	x4, x0
    5d98:	b	5d24 <mul_n_basecase+0x11c>
    5d9c:	mov	w2, w20
    5da0:	bl	71d8 <_gcry_mpih_mul_1>
    5da4:	mov	x4, x0
    5da8:	b	5cfc <mul_n_basecase+0xf4>
    5dac:	cmp	w20, #0x0
    5db0:	b.le	5cf8 <mul_n_basecase+0xf0>
    5db4:	orr	x2, x0, x1
    5db8:	add	x1, x0, #0xf
    5dbc:	sub	x1, x1, x23
    5dc0:	sub	w0, w20, #0x1
    5dc4:	tst	x2, #0xf
    5dc8:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    5dcc:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    5dd0:	b.ls	5e0c <mul_n_basecase+0x204>  // b.plast
    5dd4:	lsr	w4, w20, #1
    5dd8:	mov	x0, x23
    5ddc:	mov	x1, x21
    5de0:	add	x4, x23, w4, uxtw #4
    5de4:	nop
    5de8:	ldp	x2, x3, [x0], #16
    5dec:	stp	x2, x3, [x1], #16
    5df0:	cmp	x0, x4
    5df4:	b.ne	5de8 <mul_n_basecase+0x1e0>  // b.any
    5df8:	and	w0, w20, #0xfffffffe
    5dfc:	tbz	w20, #0, 5cf8 <mul_n_basecase+0xf0>
    5e00:	ldr	x1, [x23, x0, lsl #3]
    5e04:	str	x1, [x21, x0, lsl #3]
    5e08:	b	5cf8 <mul_n_basecase+0xf0>
    5e0c:	mov	x0, #0x0                   	// #0
    5e10:	ldr	x1, [x23, x0, lsl #3]
    5e14:	str	x1, [x21, x0, lsl #3]
    5e18:	add	x0, x0, #0x1
    5e1c:	cmp	w20, w0
    5e20:	b.gt	5e10 <mul_n_basecase+0x208>
    5e24:	b	5cf8 <mul_n_basecase+0xf0>
    5e28:	mov	w0, #0x0                   	// #0
    5e2c:	b	5c9c <mul_n_basecase+0x94>

0000000000005e30 <mul_n>:
    5e30:	stp	x29, x30, [sp, #-144]!
    5e34:	mov	x29, sp
    5e38:	stp	x19, x20, [sp, #16]
    5e3c:	mov	w19, w3
    5e40:	and	w3, w3, #0x1
    5e44:	stp	x21, x22, [sp, #32]
    5e48:	stp	x23, x24, [sp, #48]
    5e4c:	mov	x24, x0
    5e50:	stp	x25, x26, [sp, #64]
    5e54:	mov	x26, x1
    5e58:	stp	x27, x28, [sp, #80]
    5e5c:	mov	x27, x2
    5e60:	str	w3, [sp, #104]
    5e64:	tbz	w19, #0, 5edc <mul_n+0xac>
    5e68:	sub	w20, w19, #0x1
    5e6c:	mov	w3, w20
    5e70:	cmp	w20, #0xf
    5e74:	b.le	61c8 <mul_n+0x398>
    5e78:	bl	5e30 <mul_n>
    5e7c:	sxtw	x21, w20
    5e80:	add	x22, x24, w20, sxtw #3
    5e84:	mov	w2, w20
    5e88:	mov	x1, x26
    5e8c:	mov	x0, x22
    5e90:	ldr	x3, [x27, x21, lsl #3]
    5e94:	bl	7258 <_gcry_mpih_addmul_1>
    5e98:	mov	x4, x0
    5e9c:	lsl	w3, w20, #1
    5ea0:	mov	w2, w19
    5ea4:	add	w19, w19, w20
    5ea8:	mov	x0, x22
    5eac:	mov	x1, x27
    5eb0:	str	x4, [x24, w3, sxtw #3]
    5eb4:	ldr	x3, [x26, x21, lsl #3]
    5eb8:	bl	7258 <_gcry_mpih_addmul_1>
    5ebc:	str	x0, [x24, w19, sxtw #3]
    5ec0:	ldp	x19, x20, [sp, #16]
    5ec4:	ldp	x21, x22, [sp, #32]
    5ec8:	ldp	x23, x24, [sp, #48]
    5ecc:	ldp	x25, x26, [sp, #64]
    5ed0:	ldp	x27, x28, [sp, #80]
    5ed4:	ldp	x29, x30, [sp], #144
    5ed8:	ret
    5edc:	asr	w20, w19, #1
    5ee0:	sbfiz	x2, x19, #3, #32
    5ee4:	sub	w0, w20, #0x1
    5ee8:	str	w0, [sp, #120]
    5eec:	sbfiz	x0, x20, #3, #32
    5ef0:	str	x0, [sp, #112]
    5ef4:	add	x1, x24, x0
    5ef8:	str	x1, [sp, #96]
    5efc:	add	x1, x26, x0
    5f00:	str	x2, [sp, #128]
    5f04:	str	x1, [sp, #136]
    5f08:	add	x22, x24, x2
    5f0c:	add	x28, x27, x0
    5f10:	mov	x25, x4
    5f14:	mov	w3, w20
    5f18:	cmp	w20, #0xf
    5f1c:	sxtw	x21, w20
    5f20:	sxtw	x23, w19
    5f24:	mov	x2, x28
    5f28:	mov	x0, x22
    5f2c:	b.le	619c <mul_n+0x36c>
    5f30:	bl	5e30 <mul_n>
    5f34:	ldr	x1, [sp, #136]
    5f38:	ldrsw	x4, [sp, #120]
    5f3c:	mov	x3, x4
    5f40:	b	5f48 <mul_n+0x118>
    5f44:	tbnz	w3, #31, 5f60 <mul_n+0x130>
    5f48:	ldr	x2, [x1, x3, lsl #3]
    5f4c:	ldr	x0, [x26, x3, lsl #3]
    5f50:	sub	x3, x3, #0x1
    5f54:	cmp	x2, x0
    5f58:	b.eq	5f44 <mul_n+0x114>  // b.none
    5f5c:	b.ls	62c0 <mul_n+0x490>  // b.plast
    5f60:	mov	w3, w20
    5f64:	mov	x2, x26
    5f68:	mov	x0, x24
    5f6c:	str	x4, [sp, #136]
    5f70:	bl	73b8 <_gcry_mpih_sub_n>
    5f74:	ldr	w0, [sp, #120]
    5f78:	ldr	x4, [sp, #136]
    5f7c:	tbnz	w0, #31, 632c <mul_n+0x4fc>
    5f80:	mov	x5, x4
    5f84:	b	5f8c <mul_n+0x15c>
    5f88:	tbnz	w5, #31, 5fa4 <mul_n+0x174>
    5f8c:	ldr	x1, [x28, x5, lsl #3]
    5f90:	ldr	x0, [x27, x5, lsl #3]
    5f94:	sub	x5, x5, #0x1
    5f98:	cmp	x1, x0
    5f9c:	b.eq	5f88 <mul_n+0x158>  // b.none
    5fa0:	b.ls	62a8 <mul_n+0x478>  // b.plast
    5fa4:	ldr	w0, [sp, #104]
    5fa8:	eor	w0, w0, #0x1
    5fac:	str	w0, [sp, #104]
    5fb0:	ldr	x0, [sp, #96]
    5fb4:	mov	x1, x28
    5fb8:	mov	w3, w20
    5fbc:	mov	x2, x27
    5fc0:	bl	73b8 <_gcry_mpih_sub_n>
    5fc4:	cmp	w20, #0xf
    5fc8:	b.gt	6274 <mul_n+0x444>
    5fcc:	ldr	x2, [sp, #96]
    5fd0:	mov	w3, w20
    5fd4:	mov	x1, x24
    5fd8:	mov	x0, x25
    5fdc:	bl	5c08 <mul_n_basecase>
    5fe0:	cmp	w20, #0x0
    5fe4:	b.le	6058 <mul_n+0x228>
    5fe8:	ldr	x2, [sp, #128]
    5fec:	ldr	x3, [sp, #112]
    5ff0:	add	x1, x2, #0x10
    5ff4:	cmp	x3, x1
    5ff8:	add	x0, x3, #0x10
    5ffc:	ldr	x1, [sp, #96]
    6000:	ccmp	x0, x2, #0x4, lt  // lt = tstop
    6004:	ccmp	w20, #0xc, #0x4, le
    6008:	orr	x0, x1, x22
    600c:	and	x0, x0, #0xf
    6010:	ccmp	x0, #0x0, #0x0, gt
    6014:	b.ne	6308 <mul_n+0x4d8>  // b.any
    6018:	cmp	w20, #0x0
    601c:	mov	x0, x22
    6020:	csinc	w5, w20, wzr, gt
    6024:	lsr	w4, w5, #1
    6028:	add	x4, x22, w4, uxtw #4
    602c:	nop
    6030:	ldp	x2, x3, [x0], #16
    6034:	stp	x2, x3, [x1], #16
    6038:	cmp	x0, x4
    603c:	b.ne	6030 <mul_n+0x200>  // b.any
    6040:	and	w0, w5, #0xfffffffe
    6044:	tbz	w5, #0, 6058 <mul_n+0x228>
    6048:	add	x1, x23, x0
    604c:	add	x0, x21, x0
    6050:	ldr	x1, [x24, x1, lsl #3]
    6054:	str	x1, [x24, x0, lsl #3]
    6058:	add	x21, x23, x21
    605c:	mov	w3, w20
    6060:	mov	x1, x22
    6064:	mov	x0, x22
    6068:	add	x28, x24, x21, lsl #3
    606c:	mov	x2, x28
    6070:	bl	7370 <_gcry_mpih_add_n>
    6074:	mov	x4, x0
    6078:	ldr	w0, [sp, #104]
    607c:	cbz	w0, 6250 <mul_n+0x420>
    6080:	ldr	x0, [sp, #96]
    6084:	mov	w3, w19
    6088:	mov	x2, x25
    608c:	str	x4, [sp, #104]
    6090:	mov	x1, x0
    6094:	bl	73b8 <_gcry_mpih_sub_n>
    6098:	ldr	x4, [sp, #104]
    609c:	sub	x5, x4, x0
    60a0:	str	x5, [sp, #104]
    60a4:	cmp	w20, #0xf
    60a8:	b.gt	61d0 <mul_n+0x3a0>
    60ac:	mov	x2, x27
    60b0:	mov	x1, x26
    60b4:	mov	w3, w20
    60b8:	mov	x0, x25
    60bc:	bl	5c08 <mul_n_basecase>
    60c0:	ldr	x0, [sp, #96]
    60c4:	mov	w3, w19
    60c8:	mov	x2, x25
    60cc:	mov	x1, x0
    60d0:	bl	7370 <_gcry_mpih_add_n>
    60d4:	ldr	x5, [sp, #104]
    60d8:	adds	x27, x5, x0
    60dc:	b.ne	6294 <mul_n+0x464>  // b.any
    60e0:	cmp	w20, #0x0
    60e4:	b.le	6140 <mul_n+0x310>
    60e8:	orr	x1, x25, x24
    60ec:	add	x0, x24, #0xf
    60f0:	sub	x0, x0, x25
    60f4:	tst	x1, #0xf
    60f8:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    60fc:	ccmp	w20, #0xc, #0x4, hi  // hi = pmore
    6100:	b.le	62e8 <mul_n+0x4b8>
    6104:	cmp	w20, #0x0
    6108:	mov	x0, x25
    610c:	csinc	w5, w20, wzr, gt
    6110:	mov	x1, x24
    6114:	lsr	w4, w5, #1
    6118:	add	x4, x25, w4, uxtw #4
    611c:	nop
    6120:	ldp	x2, x3, [x0], #16
    6124:	stp	x2, x3, [x1], #16
    6128:	cmp	x0, x4
    612c:	b.ne	6120 <mul_n+0x2f0>  // b.any
    6130:	and	w0, w5, #0xfffffffe
    6134:	tbz	w5, #0, 6140 <mul_n+0x310>
    6138:	ldr	x1, [x25, x0, lsl #3]
    613c:	str	x1, [x24, x0, lsl #3]
    6140:	ldr	x1, [sp, #96]
    6144:	mov	w3, w20
    6148:	ldr	x0, [sp, #112]
    614c:	add	x2, x25, x0
    6150:	mov	x0, x1
    6154:	bl	7370 <_gcry_mpih_add_n>
    6158:	cbz	x0, 5ec0 <mul_n+0x90>
    615c:	ldr	x0, [x24, x23, lsl #3]
    6160:	adds	x0, x0, #0x1
    6164:	str	x0, [x24, x23, lsl #3]
    6168:	b.cc	5ec0 <mul_n+0x90>  // b.lo, b.ul, b.last
    616c:	sub	w0, w19, #0x1
    6170:	add	x1, x22, #0x8
    6174:	add	x0, x0, #0x1
    6178:	add	x22, x22, x0, lsl #3
    617c:	b	6190 <mul_n+0x360>
    6180:	ldr	x0, [x1], #8
    6184:	add	x0, x0, #0x1
    6188:	stur	x0, [x1, #-8]
    618c:	cbnz	x0, 5ec0 <mul_n+0x90>
    6190:	cmp	x22, x1
    6194:	b.ne	6180 <mul_n+0x350>  // b.any
    6198:	b	5ec0 <mul_n+0x90>
    619c:	bl	5c08 <mul_n_basecase>
    61a0:	sub	w0, w20, #0x1
    61a4:	ldr	x1, [sp, #136]
    61a8:	tbz	w0, #31, 5f38 <mul_n+0x108>
    61ac:	mov	w4, #0x1                   	// #1
    61b0:	mov	w3, w20
    61b4:	mov	x2, x26
    61b8:	mov	x0, x24
    61bc:	str	w4, [sp, #104]
    61c0:	bl	73b8 <_gcry_mpih_sub_n>
    61c4:	b	5fb0 <mul_n+0x180>
    61c8:	bl	5c08 <mul_n_basecase>
    61cc:	b	5e7c <mul_n+0x4c>
    61d0:	ldr	x0, [sp, #128]
    61d4:	mov	x2, x27
    61d8:	mov	x1, x26
    61dc:	mov	w3, w20
    61e0:	add	x4, x25, x0
    61e4:	mov	x0, x25
    61e8:	bl	5e30 <mul_n>
    61ec:	ldr	x0, [sp, #96]
    61f0:	mov	w3, w19
    61f4:	mov	x2, x25
    61f8:	mov	x1, x0
    61fc:	bl	7370 <_gcry_mpih_add_n>
    6200:	ldr	x5, [sp, #104]
    6204:	adds	x27, x5, x0
    6208:	b.eq	60e8 <mul_n+0x2b8>  // b.none
    620c:	ldr	x0, [x24, x21, lsl #3]
    6210:	adds	x27, x27, x0
    6214:	str	x27, [x24, x21, lsl #3]
    6218:	b.cc	60e8 <mul_n+0x2b8>  // b.lo, b.ul, b.last
    621c:	ldr	x0, [sp, #120]
    6220:	add	x1, x28, #0x8
    6224:	ubfiz	x0, x0, #3, #32
    6228:	add	x0, x0, #0x8
    622c:	add	x28, x28, x0
    6230:	b	6244 <mul_n+0x414>
    6234:	ldr	x0, [x1], #8
    6238:	add	x0, x0, #0x1
    623c:	stur	x0, [x1, #-8]
    6240:	cbnz	x0, 60e0 <mul_n+0x2b0>
    6244:	cmp	x1, x28
    6248:	b.ne	6234 <mul_n+0x404>  // b.any
    624c:	b	60e0 <mul_n+0x2b0>
    6250:	ldr	x0, [sp, #96]
    6254:	mov	w3, w19
    6258:	mov	x2, x25
    625c:	str	x4, [sp, #104]
    6260:	mov	x1, x0
    6264:	bl	7370 <_gcry_mpih_add_n>
    6268:	ldr	x4, [sp, #104]
    626c:	add	x5, x4, x0
    6270:	b	60a0 <mul_n+0x270>
    6274:	ldr	x2, [sp, #96]
    6278:	mov	w3, w20
    627c:	ldr	x0, [sp, #128]
    6280:	mov	x1, x24
    6284:	add	x4, x25, x0
    6288:	mov	x0, x25
    628c:	bl	5e30 <mul_n>
    6290:	b	5fe8 <mul_n+0x1b8>
    6294:	ldr	x0, [x24, x21, lsl #3]
    6298:	adds	x27, x27, x0
    629c:	str	x27, [x24, x21, lsl #3]
    62a0:	b.cs	621c <mul_n+0x3ec>  // b.hs, b.nlast
    62a4:	b	60e0 <mul_n+0x2b0>
    62a8:	ldr	x0, [sp, #96]
    62ac:	mov	x2, x28
    62b0:	mov	w3, w20
    62b4:	mov	x1, x27
    62b8:	bl	73b8 <_gcry_mpih_sub_n>
    62bc:	b	5fc4 <mul_n+0x194>
    62c0:	mov	w0, #0x1                   	// #1
    62c4:	mov	x2, x1
    62c8:	mov	w3, w20
    62cc:	mov	x1, x26
    62d0:	str	w0, [sp, #104]
    62d4:	mov	x0, x24
    62d8:	str	x4, [sp, #136]
    62dc:	bl	73b8 <_gcry_mpih_sub_n>
    62e0:	ldr	x4, [sp, #136]
    62e4:	b	5f80 <mul_n+0x150>
    62e8:	mov	x0, #0x0                   	// #0
    62ec:	nop
    62f0:	ldr	x1, [x25, x0, lsl #3]
    62f4:	str	x1, [x24, x0, lsl #3]
    62f8:	add	x0, x0, #0x1
    62fc:	cmp	w20, w0
    6300:	b.gt	62f0 <mul_n+0x4c0>
    6304:	b	6140 <mul_n+0x310>
    6308:	mov	x0, #0x0                   	// #0
    630c:	nop
    6310:	ldr	x2, [sp, #96]
    6314:	ldr	x1, [x22, x0, lsl #3]
    6318:	str	x1, [x2, x0, lsl #3]
    631c:	add	x0, x0, #0x1
    6320:	cmp	w20, w0
    6324:	b.gt	6310 <mul_n+0x4e0>
    6328:	b	6058 <mul_n+0x228>
    632c:	mov	w0, #0x1                   	// #1
    6330:	str	w0, [sp, #104]
    6334:	b	5fb0 <mul_n+0x180>

0000000000006338 <_gcry_mpih_sqr_n_basecase>:
    6338:	stp	x29, x30, [sp, #-64]!
    633c:	mov	x29, sp
    6340:	ldr	x3, [x1]
    6344:	stp	x19, x20, [sp, #16]
    6348:	mov	x19, x0
    634c:	stp	x21, x22, [sp, #32]
    6350:	cmp	x3, #0x1
    6354:	mov	x21, x1
    6358:	stp	x23, x24, [sp, #48]
    635c:	mov	w22, w2
    6360:	b.hi	64c8 <_gcry_mpih_sqr_n_basecase+0x190>  // b.pmore
    6364:	b.eq	64d0 <_gcry_mpih_sqr_n_basecase+0x198>  // b.none
    6368:	cmp	w2, #0x0
    636c:	b.le	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    6370:	sub	w1, w2, #0x1
    6374:	ubfx	w0, w0, #3, #1
    6378:	cmp	w1, #0x5
    637c:	b.ls	6548 <_gcry_mpih_sqr_n_basecase+0x210>  // b.plast
    6380:	mov	w1, #0x0                   	// #0
    6384:	cbz	w0, 6390 <_gcry_mpih_sqr_n_basecase+0x58>
    6388:	mov	w1, #0x1                   	// #1
    638c:	str	xzr, [x19]
    6390:	sub	w3, w22, w0
    6394:	mov	w0, w0
    6398:	lsr	w2, w3, #1
    639c:	add	x0, x19, x0, lsl #3
    63a0:	add	x2, x0, w2, uxtw #4
    63a4:	nop
    63a8:	stp	xzr, xzr, [x0], #16
    63ac:	cmp	x0, x2
    63b0:	b.ne	63a8 <_gcry_mpih_sqr_n_basecase+0x70>  // b.any
    63b4:	and	w2, w3, #0xfffffffe
    63b8:	add	w0, w2, w1
    63bc:	cmp	w3, w2
    63c0:	b.eq	6420 <_gcry_mpih_sqr_n_basecase+0xe8>  // b.none
    63c4:	str	xzr, [x19, w0, sxtw #3]
    63c8:	add	w1, w0, #0x1
    63cc:	cmp	w22, w1
    63d0:	sbfiz	x1, x0, #3, #32
    63d4:	b.le	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    63d8:	add	x1, x19, x1
    63dc:	add	w2, w0, #0x2
    63e0:	cmp	w22, w2
    63e4:	str	xzr, [x1, #8]
    63e8:	b.le	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    63ec:	str	xzr, [x1, #16]
    63f0:	add	w2, w0, #0x3
    63f4:	cmp	w22, w2
    63f8:	b.le	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    63fc:	str	xzr, [x1, #24]
    6400:	add	w2, w0, #0x4
    6404:	cmp	w22, w2
    6408:	b.le	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    640c:	str	xzr, [x1, #32]
    6410:	add	w0, w0, #0x5
    6414:	cmp	w22, w0
    6418:	b.le	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    641c:	str	xzr, [x1, #40]
    6420:	mov	x0, #0x0                   	// #0
    6424:	str	x0, [x19, w22, sxtw #3]
    6428:	cmp	w22, #0x1
    642c:	add	x19, x19, #0x8
    6430:	sbfiz	x24, x22, #3, #32
    6434:	b.le	649c <_gcry_mpih_sqr_n_basecase+0x164>
    6438:	sub	w23, w22, #0x2
    643c:	mov	x20, #0x8                   	// #8
    6440:	add	x23, x23, #0x2
    6444:	lsl	x23, x23, #3
    6448:	b	6464 <_gcry_mpih_sqr_n_basecase+0x12c>
    644c:	b.eq	64b0 <_gcry_mpih_sqr_n_basecase+0x178>  // b.none
    6450:	str	x4, [x19, x24]
    6454:	add	x20, x20, #0x8
    6458:	cmp	x20, x23
    645c:	add	x19, x19, #0x8
    6460:	b.eq	649c <_gcry_mpih_sqr_n_basecase+0x164>  // b.none
    6464:	ldr	x3, [x21, x20]
    6468:	mov	x0, x19
    646c:	mov	w2, w22
    6470:	mov	x1, x21
    6474:	cmp	x3, #0x1
    6478:	mov	x4, #0x0                   	// #0
    647c:	b.ls	644c <_gcry_mpih_sqr_n_basecase+0x114>  // b.plast
    6480:	bl	7258 <_gcry_mpih_addmul_1>
    6484:	mov	x4, x0
    6488:	str	x4, [x19, x24]
    648c:	add	x20, x20, #0x8
    6490:	cmp	x20, x23
    6494:	add	x19, x19, #0x8
    6498:	b.ne	6464 <_gcry_mpih_sqr_n_basecase+0x12c>  // b.any
    649c:	ldp	x19, x20, [sp, #16]
    64a0:	ldp	x21, x22, [sp, #32]
    64a4:	ldp	x23, x24, [sp, #48]
    64a8:	ldp	x29, x30, [sp], #64
    64ac:	ret
    64b0:	mov	w3, w22
    64b4:	mov	x2, x21
    64b8:	mov	x1, x19
    64bc:	bl	7370 <_gcry_mpih_add_n>
    64c0:	mov	x4, x0
    64c4:	b	6450 <_gcry_mpih_sqr_n_basecase+0x118>
    64c8:	bl	71d8 <_gcry_mpih_mul_1>
    64cc:	b	6424 <_gcry_mpih_sqr_n_basecase+0xec>
    64d0:	cmp	w2, #0x0
    64d4:	b.le	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    64d8:	orr	x2, x0, x1
    64dc:	add	x1, x1, #0xf
    64e0:	sub	x1, x1, x0
    64e4:	sub	w0, w22, #0x1
    64e8:	tst	x2, #0xf
    64ec:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    64f0:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    64f4:	b.ls	652c <_gcry_mpih_sqr_n_basecase+0x1f4>  // b.plast
    64f8:	lsr	w4, w22, #1
    64fc:	mov	x0, x21
    6500:	mov	x1, x19
    6504:	add	x4, x21, w4, uxtw #4
    6508:	ldp	x2, x3, [x0], #16
    650c:	stp	x2, x3, [x1], #16
    6510:	cmp	x0, x4
    6514:	b.ne	6508 <_gcry_mpih_sqr_n_basecase+0x1d0>  // b.any
    6518:	and	w0, w22, #0xfffffffe
    651c:	tbz	w22, #0, 6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    6520:	ldr	x1, [x21, x0, lsl #3]
    6524:	str	x1, [x19, x0, lsl #3]
    6528:	b	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    652c:	mov	x0, #0x0                   	// #0
    6530:	ldr	x1, [x21, x0, lsl #3]
    6534:	str	x1, [x19, x0, lsl #3]
    6538:	add	x0, x0, #0x1
    653c:	cmp	w22, w0
    6540:	b.gt	6530 <_gcry_mpih_sqr_n_basecase+0x1f8>
    6544:	b	6420 <_gcry_mpih_sqr_n_basecase+0xe8>
    6548:	mov	w0, #0x0                   	// #0
    654c:	b	63c4 <_gcry_mpih_sqr_n_basecase+0x8c>

0000000000006550 <_gcry_mpih_sqr_n>:
    6550:	stp	x29, x30, [sp, #-128]!
    6554:	mov	x29, sp
    6558:	stp	x19, x20, [sp, #16]
    655c:	mov	w20, w2
    6560:	mov	x19, x0
    6564:	stp	x21, x22, [sp, #32]
    6568:	stp	x23, x24, [sp, #48]
    656c:	stp	x25, x26, [sp, #64]
    6570:	mov	x25, x1
    6574:	tbz	w20, #0, 65e8 <_gcry_mpih_sqr_n+0x98>
    6578:	sub	w21, w2, #0x1
    657c:	mov	w2, w21
    6580:	cmp	w21, #0xf
    6584:	b.le	6858 <_gcry_mpih_sqr_n+0x308>
    6588:	bl	6550 <_gcry_mpih_sqr_n>
    658c:	sxtw	x22, w21
    6590:	add	x23, x19, w21, sxtw #3
    6594:	mov	w2, w21
    6598:	mov	x1, x25
    659c:	mov	x0, x23
    65a0:	ldr	x3, [x25, x22, lsl #3]
    65a4:	bl	7258 <_gcry_mpih_addmul_1>
    65a8:	mov	x4, x0
    65ac:	lsl	w3, w21, #1
    65b0:	mov	w2, w20
    65b4:	add	w20, w20, w21
    65b8:	mov	x1, x25
    65bc:	mov	x0, x23
    65c0:	str	x4, [x19, w3, sxtw #3]
    65c4:	ldr	x3, [x25, x22, lsl #3]
    65c8:	bl	7258 <_gcry_mpih_addmul_1>
    65cc:	str	x0, [x19, w20, sxtw #3]
    65d0:	ldp	x19, x20, [sp, #16]
    65d4:	ldp	x21, x22, [sp, #32]
    65d8:	ldp	x23, x24, [sp, #48]
    65dc:	ldp	x25, x26, [sp, #64]
    65e0:	ldp	x29, x30, [sp], #128
    65e4:	ret
    65e8:	asr	w26, w2, #1
    65ec:	sbfiz	x0, x2, #3, #32
    65f0:	sub	w1, w26, #0x1
    65f4:	stp	x27, x28, [sp, #80]
    65f8:	sbfiz	x23, x26, #3, #32
    65fc:	str	x0, [sp, #96]
    6600:	add	x27, x25, x23
    6604:	str	w1, [sp, #104]
    6608:	add	x24, x19, x0
    660c:	mov	x22, x3
    6610:	mov	w2, w26
    6614:	cmp	w26, #0xf
    6618:	sxtw	x28, w26
    661c:	sxtw	x21, w20
    6620:	mov	x1, x27
    6624:	mov	x0, x24
    6628:	b.gt	6850 <_gcry_mpih_sqr_n+0x300>
    662c:	bl	6338 <_gcry_mpih_sqr_n_basecase>
    6630:	sub	w1, w26, #0x1
    6634:	tbnz	w1, #31, 665c <_gcry_mpih_sqr_n+0x10c>
    6638:	ldrsw	x4, [sp, #104]
    663c:	b	6644 <_gcry_mpih_sqr_n+0xf4>
    6640:	tbnz	w4, #31, 665c <_gcry_mpih_sqr_n+0x10c>
    6644:	ldr	x2, [x27, x4, lsl #3]
    6648:	ldr	x0, [x25, x4, lsl #3]
    664c:	sub	x4, x4, #0x1
    6650:	cmp	x2, x0
    6654:	b.eq	6640 <_gcry_mpih_sqr_n+0xf0>  // b.none
    6658:	b.ls	6958 <_gcry_mpih_sqr_n+0x408>  // b.plast
    665c:	mov	x1, x27
    6660:	mov	w3, w26
    6664:	mov	x2, x25
    6668:	mov	x0, x19
    666c:	bl	73b8 <_gcry_mpih_sub_n>
    6670:	cmp	w26, #0xf
    6674:	b.gt	6924 <_gcry_mpih_sqr_n+0x3d4>
    6678:	mov	w2, w26
    667c:	mov	x1, x19
    6680:	mov	x0, x22
    6684:	bl	6338 <_gcry_mpih_sqr_n_basecase>
    6688:	cmp	w26, #0x0
    668c:	b.le	6860 <_gcry_mpih_sqr_n+0x310>
    6690:	ldr	x2, [sp, #96]
    6694:	add	x0, x23, #0x10
    6698:	add	x3, x19, x23
    669c:	add	x1, x2, #0x10
    66a0:	cmp	x1, x23
    66a4:	ccmp	x0, x2, #0x4, gt
    66a8:	orr	x0, x24, x3
    66ac:	ccmp	w26, #0xc, #0x4, le
    66b0:	and	x0, x0, #0xf
    66b4:	ccmp	x0, #0x0, #0x0, gt
    66b8:	b.ne	6990 <_gcry_mpih_sqr_n+0x440>  // b.any
    66bc:	cmp	w26, #0x0
    66c0:	mov	x2, x24
    66c4:	csinc	w7, w26, wzr, gt
    66c8:	mov	x0, x3
    66cc:	lsr	w1, w7, #1
    66d0:	add	x1, x24, w1, uxtw #4
    66d4:	nop
    66d8:	ldp	x8, x9, [x2], #16
    66dc:	stp	x8, x9, [x0], #16
    66e0:	cmp	x2, x1
    66e4:	b.ne	66d8 <_gcry_mpih_sqr_n+0x188>  // b.any
    66e8:	and	w4, w7, #0xfffffffe
    66ec:	tbz	w7, #0, 6700 <_gcry_mpih_sqr_n+0x1b0>
    66f0:	add	x0, x21, x4
    66f4:	add	x4, x28, x4
    66f8:	ldr	x0, [x19, x0, lsl #3]
    66fc:	str	x0, [x19, x4, lsl #3]
    6700:	add	x0, x21, x28
    6704:	mov	x1, x24
    6708:	mov	x28, x3
    670c:	mov	w3, w26
    6710:	add	x27, x19, x0, lsl #3
    6714:	str	x0, [sp, #120]
    6718:	mov	x2, x27
    671c:	mov	x0, x24
    6720:	bl	7370 <_gcry_mpih_add_n>
    6724:	mov	x7, x0
    6728:	mov	x1, x28
    672c:	mov	x0, x28
    6730:	mov	w3, w20
    6734:	mov	x2, x22
    6738:	str	x7, [sp, #112]
    673c:	bl	73b8 <_gcry_mpih_sub_n>
    6740:	ldr	x7, [sp, #112]
    6744:	cmp	w26, #0xf
    6748:	sub	x7, x7, x0
    674c:	b.le	68a4 <_gcry_mpih_sqr_n+0x354>
    6750:	ldr	x0, [sp, #96]
    6754:	mov	x1, x25
    6758:	mov	w2, w26
    675c:	str	x7, [sp, #112]
    6760:	add	x3, x22, x0
    6764:	mov	x0, x22
    6768:	bl	6550 <_gcry_mpih_sqr_n>
    676c:	mov	w3, w20
    6770:	mov	x2, x22
    6774:	mov	x1, x28
    6778:	mov	x0, x28
    677c:	bl	7370 <_gcry_mpih_add_n>
    6780:	ldr	x7, [sp, #112]
    6784:	adds	x7, x7, x0
    6788:	b.ne	6940 <_gcry_mpih_sqr_n+0x3f0>  // b.any
    678c:	orr	x1, x22, x19
    6790:	add	x0, x19, #0xf
    6794:	sub	x0, x0, x22
    6798:	tst	x1, #0xf
    679c:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    67a0:	ccmp	w26, #0xc, #0x4, hi  // hi = pmore
    67a4:	b.le	6970 <_gcry_mpih_sqr_n+0x420>
    67a8:	cmp	w26, #0x0
    67ac:	mov	x0, x19
    67b0:	csinc	w8, w26, wzr, gt
    67b4:	mov	x1, x22
    67b8:	lsr	w7, w8, #1
    67bc:	add	x7, x19, w7, uxtw #4
    67c0:	ldp	x2, x3, [x1], #16
    67c4:	stp	x2, x3, [x0], #16
    67c8:	cmp	x7, x0
    67cc:	b.ne	67c0 <_gcry_mpih_sqr_n+0x270>  // b.any
    67d0:	and	w0, w8, #0xfffffffe
    67d4:	tbz	w8, #0, 67e0 <_gcry_mpih_sqr_n+0x290>
    67d8:	ldr	x1, [x22, x0, lsl #3]
    67dc:	str	x1, [x19, x0, lsl #3]
    67e0:	mov	w3, w26
    67e4:	add	x2, x22, x23
    67e8:	mov	x1, x28
    67ec:	mov	x0, x28
    67f0:	bl	7370 <_gcry_mpih_add_n>
    67f4:	cbz	x0, 6834 <_gcry_mpih_sqr_n+0x2e4>
    67f8:	ldr	x0, [x19, x21, lsl #3]
    67fc:	adds	x0, x0, #0x1
    6800:	str	x0, [x19, x21, lsl #3]
    6804:	b.cc	6834 <_gcry_mpih_sqr_n+0x2e4>  // b.lo, b.ul, b.last
    6808:	sub	w0, w20, #0x1
    680c:	add	x1, x24, #0x8
    6810:	add	x0, x0, #0x1
    6814:	add	x6, x24, x0, lsl #3
    6818:	b	682c <_gcry_mpih_sqr_n+0x2dc>
    681c:	ldr	x0, [x1], #8
    6820:	add	x0, x0, #0x1
    6824:	stur	x0, [x1, #-8]
    6828:	cbnz	x0, 6834 <_gcry_mpih_sqr_n+0x2e4>
    682c:	cmp	x6, x1
    6830:	b.ne	681c <_gcry_mpih_sqr_n+0x2cc>  // b.any
    6834:	ldp	x19, x20, [sp, #16]
    6838:	ldp	x21, x22, [sp, #32]
    683c:	ldp	x23, x24, [sp, #48]
    6840:	ldp	x25, x26, [sp, #64]
    6844:	ldp	x27, x28, [sp, #80]
    6848:	ldp	x29, x30, [sp], #128
    684c:	ret
    6850:	bl	6550 <_gcry_mpih_sqr_n>
    6854:	b	6638 <_gcry_mpih_sqr_n+0xe8>
    6858:	bl	6338 <_gcry_mpih_sqr_n_basecase>
    685c:	b	658c <_gcry_mpih_sqr_n+0x3c>
    6860:	add	x28, x21, x28
    6864:	mov	w3, w26
    6868:	mov	x1, x24
    686c:	mov	x0, x24
    6870:	add	x27, x19, x28, lsl #3
    6874:	add	x28, x19, x23
    6878:	mov	x2, x27
    687c:	bl	7370 <_gcry_mpih_add_n>
    6880:	mov	x4, x0
    6884:	mov	x1, x28
    6888:	mov	x0, x28
    688c:	mov	w3, w20
    6890:	mov	x2, x22
    6894:	str	x4, [sp, #96]
    6898:	bl	73b8 <_gcry_mpih_sub_n>
    689c:	ldr	x4, [sp, #96]
    68a0:	sub	x7, x4, x0
    68a4:	mov	x1, x25
    68a8:	mov	w2, w26
    68ac:	mov	x0, x22
    68b0:	str	x7, [sp, #96]
    68b4:	bl	6338 <_gcry_mpih_sqr_n_basecase>
    68b8:	mov	w3, w20
    68bc:	mov	x2, x22
    68c0:	mov	x1, x28
    68c4:	mov	x0, x28
    68c8:	bl	7370 <_gcry_mpih_add_n>
    68cc:	ldr	x7, [sp, #96]
    68d0:	adds	x0, x0, x7
    68d4:	b.eq	6918 <_gcry_mpih_sqr_n+0x3c8>  // b.none
    68d8:	ldr	x1, [x27]
    68dc:	adds	x0, x0, x1
    68e0:	str	x0, [x27]
    68e4:	b.cc	6918 <_gcry_mpih_sqr_n+0x3c8>  // b.lo, b.ul, b.last
    68e8:	ldr	x0, [sp, #104]
    68ec:	add	x1, x27, #0x8
    68f0:	ubfiz	x0, x0, #3, #32
    68f4:	add	x0, x0, #0x8
    68f8:	add	x27, x27, x0
    68fc:	b	6910 <_gcry_mpih_sqr_n+0x3c0>
    6900:	ldr	x0, [x1], #8
    6904:	add	x0, x0, #0x1
    6908:	stur	x0, [x1, #-8]
    690c:	cbnz	x0, 6918 <_gcry_mpih_sqr_n+0x3c8>
    6910:	cmp	x1, x27
    6914:	b.ne	6900 <_gcry_mpih_sqr_n+0x3b0>  // b.any
    6918:	cmp	w26, #0x0
    691c:	b.gt	678c <_gcry_mpih_sqr_n+0x23c>
    6920:	b	67e0 <_gcry_mpih_sqr_n+0x290>
    6924:	ldr	x0, [sp, #96]
    6928:	mov	w2, w26
    692c:	mov	x1, x19
    6930:	add	x3, x22, x0
    6934:	mov	x0, x22
    6938:	bl	6550 <_gcry_mpih_sqr_n>
    693c:	b	6690 <_gcry_mpih_sqr_n+0x140>
    6940:	ldr	x1, [sp, #120]
    6944:	ldr	x0, [x19, x1, lsl #3]
    6948:	adds	x7, x0, x7
    694c:	str	x7, [x19, x1, lsl #3]
    6950:	b.cc	678c <_gcry_mpih_sqr_n+0x23c>  // b.lo, b.ul, b.last
    6954:	b	68e8 <_gcry_mpih_sqr_n+0x398>
    6958:	mov	x2, x27
    695c:	mov	w3, w26
    6960:	mov	x1, x25
    6964:	mov	x0, x19
    6968:	bl	73b8 <_gcry_mpih_sub_n>
    696c:	b	6670 <_gcry_mpih_sqr_n+0x120>
    6970:	mov	x0, #0x0                   	// #0
    6974:	nop
    6978:	ldr	x1, [x22, x0, lsl #3]
    697c:	str	x1, [x19, x0, lsl #3]
    6980:	add	x0, x0, #0x1
    6984:	cmp	w26, w0
    6988:	b.gt	6978 <_gcry_mpih_sqr_n+0x428>
    698c:	b	67e0 <_gcry_mpih_sqr_n+0x290>
    6990:	mov	x0, #0x0                   	// #0
    6994:	nop
    6998:	ldr	x1, [x24, x0, lsl #3]
    699c:	str	x1, [x3, x0, lsl #3]
    69a0:	add	x0, x0, #0x1
    69a4:	cmp	w26, w0
    69a8:	b.gt	6998 <_gcry_mpih_sqr_n+0x448>
    69ac:	b	6700 <_gcry_mpih_sqr_n+0x1b0>

00000000000069b0 <_gcry_mpih_mul_n>:
    69b0:	stp	x29, x30, [sp, #-64]!
    69b4:	cmp	x1, x2
    69b8:	mov	x29, sp
    69bc:	stp	x19, x20, [sp, #16]
    69c0:	mov	x20, x1
    69c4:	mov	w19, w3
    69c8:	stp	x21, x22, [sp, #32]
    69cc:	mov	x22, x0
    69d0:	b.eq	6a58 <_gcry_mpih_mul_n+0xa8>  // b.none
    69d4:	cmp	w3, #0xf
    69d8:	b.le	6a48 <_gcry_mpih_mul_n+0x98>
    69dc:	mov	x0, x1
    69e0:	mov	x21, x2
    69e4:	str	x23, [sp, #48]
    69e8:	bl	99c0 <gcry_is_secure>
    69ec:	mov	w1, #0x1                   	// #1
    69f0:	cbnz	w0, 6a04 <_gcry_mpih_mul_n+0x54>
    69f4:	mov	x0, x21
    69f8:	bl	99c0 <gcry_is_secure>
    69fc:	cmp	w0, #0x0
    6a00:	cset	w1, ne  // ne = any
    6a04:	lsl	w23, w19, #1
    6a08:	mov	w0, w23
    6a0c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    6a10:	mov	w3, w19
    6a14:	mov	x19, x0
    6a18:	mov	x2, x21
    6a1c:	mov	x1, x20
    6a20:	mov	x0, x22
    6a24:	mov	x4, x19
    6a28:	bl	5e30 <mul_n>
    6a2c:	mov	w1, w23
    6a30:	mov	x0, x19
    6a34:	ldp	x19, x20, [sp, #16]
    6a38:	ldp	x21, x22, [sp, #32]
    6a3c:	ldr	x23, [sp, #48]
    6a40:	ldp	x29, x30, [sp], #64
    6a44:	b	138 <_gcry_mpi_free_limb_space>
    6a48:	ldp	x19, x20, [sp, #16]
    6a4c:	ldp	x21, x22, [sp, #32]
    6a50:	ldp	x29, x30, [sp], #64
    6a54:	b	5c08 <mul_n_basecase>
    6a58:	cmp	w3, #0xf
    6a5c:	b.gt	6a74 <_gcry_mpih_mul_n+0xc4>
    6a60:	ldp	x19, x20, [sp, #16]
    6a64:	mov	w2, w3
    6a68:	ldp	x21, x22, [sp, #32]
    6a6c:	ldp	x29, x30, [sp], #64
    6a70:	b	6338 <_gcry_mpih_sqr_n_basecase>
    6a74:	mov	x0, x1
    6a78:	str	x23, [sp, #48]
    6a7c:	lsl	w23, w3, #1
    6a80:	bl	99c0 <gcry_is_secure>
    6a84:	mov	w1, w0
    6a88:	mov	w0, w23
    6a8c:	bl	f0 <_gcry_mpi_alloc_limb_space>
    6a90:	mov	x21, x0
    6a94:	mov	w2, w19
    6a98:	mov	x1, x20
    6a9c:	mov	x0, x22
    6aa0:	mov	x3, x21
    6aa4:	bl	6550 <_gcry_mpih_sqr_n>
    6aa8:	mov	w1, w23
    6aac:	mov	x0, x21
    6ab0:	ldp	x19, x20, [sp, #16]
    6ab4:	ldp	x21, x22, [sp, #32]
    6ab8:	ldr	x23, [sp, #48]
    6abc:	ldp	x29, x30, [sp], #64
    6ac0:	b	138 <_gcry_mpi_free_limb_space>
    6ac4:	nop

0000000000006ac8 <_gcry_mpih_release_karatsuba_ctx>:
    6ac8:	stp	x29, x30, [sp, #-32]!
    6acc:	mov	x29, sp
    6ad0:	stp	x19, x20, [sp, #16]
    6ad4:	mov	x19, x0
    6ad8:	ldr	x0, [x0, #24]
    6adc:	cbz	x0, 6ae8 <_gcry_mpih_release_karatsuba_ctx+0x20>
    6ae0:	ldr	w1, [x19, #32]
    6ae4:	bl	138 <_gcry_mpi_free_limb_space>
    6ae8:	ldr	x0, [x19, #8]
    6aec:	cbz	x0, 6af8 <_gcry_mpih_release_karatsuba_ctx+0x30>
    6af0:	ldr	w1, [x19, #16]
    6af4:	bl	138 <_gcry_mpi_free_limb_space>
    6af8:	ldr	x19, [x19]
    6afc:	cbz	x19, 6b48 <_gcry_mpih_release_karatsuba_ctx+0x80>
    6b00:	ldr	x0, [x19, #24]
    6b04:	ldr	x20, [x19]
    6b08:	cbz	x0, 6b14 <_gcry_mpih_release_karatsuba_ctx+0x4c>
    6b0c:	ldr	w1, [x19, #32]
    6b10:	bl	138 <_gcry_mpi_free_limb_space>
    6b14:	ldr	x2, [x19, #8]
    6b18:	mov	x0, x19
    6b1c:	cbz	x2, 6b40 <_gcry_mpih_release_karatsuba_ctx+0x78>
    6b20:	ldr	w1, [x19, #16]
    6b24:	mov	x0, x2
    6b28:	bl	138 <_gcry_mpi_free_limb_space>
    6b2c:	mov	x0, x19
    6b30:	bl	99b8 <gcry_free>
    6b34:	cbz	x20, 6b48 <_gcry_mpih_release_karatsuba_ctx+0x80>
    6b38:	mov	x19, x20
    6b3c:	b	6b00 <_gcry_mpih_release_karatsuba_ctx+0x38>
    6b40:	bl	99b8 <gcry_free>
    6b44:	cbnz	x20, 6b38 <_gcry_mpih_release_karatsuba_ctx+0x70>
    6b48:	ldp	x19, x20, [sp, #16]
    6b4c:	ldp	x29, x30, [sp], #32
    6b50:	ret
    6b54:	nop

0000000000006b58 <_gcry_mpih_mul>:
    6b58:	stp	x29, x30, [sp, #-128]!
    6b5c:	cmp	w4, #0xf
    6b60:	mov	x29, sp
    6b64:	stp	x19, x20, [sp, #16]
    6b68:	mov	w20, w4
    6b6c:	stp	x21, x22, [sp, #32]
    6b70:	sxtw	x22, w2
    6b74:	mov	x21, x3
    6b78:	stp	x23, x24, [sp, #48]
    6b7c:	mov	x23, x22
    6b80:	mov	x24, x1
    6b84:	str	x25, [sp, #64]
    6b88:	mov	x25, x0
    6b8c:	b.gt	6c80 <_gcry_mpih_mul+0x128>
    6b90:	mov	x5, #0x0                   	// #0
    6b94:	cbnz	w4, 6bb4 <_gcry_mpih_mul+0x5c>
    6b98:	mov	x0, x5
    6b9c:	ldp	x19, x20, [sp, #16]
    6ba0:	ldp	x21, x22, [sp, #32]
    6ba4:	ldp	x23, x24, [sp, #48]
    6ba8:	ldr	x25, [sp, #64]
    6bac:	ldp	x29, x30, [sp], #128
    6bb0:	ret
    6bb4:	ldr	x3, [x3]
    6bb8:	cmp	x3, #0x1
    6bbc:	b.hi	6cdc <_gcry_mpih_mul+0x184>  // b.pmore
    6bc0:	b.eq	6d64 <_gcry_mpih_mul+0x20c>  // b.none
    6bc4:	cmp	w22, #0x0
    6bc8:	b.le	6c78 <_gcry_mpih_mul+0x120>
    6bcc:	sub	w0, w22, #0x1
    6bd0:	ubfx	w4, w25, #3, #1
    6bd4:	cmp	w0, #0x5
    6bd8:	mov	w0, #0x0                   	// #0
    6bdc:	b.ls	6c1c <_gcry_mpih_mul+0xc4>  // b.plast
    6be0:	cbz	w4, 6bec <_gcry_mpih_mul+0x94>
    6be4:	mov	w0, #0x1                   	// #1
    6be8:	str	xzr, [x25]
    6bec:	sub	w2, w23, w4
    6bf0:	mov	w4, w4
    6bf4:	lsr	w1, w2, #1
    6bf8:	add	x4, x25, x4, lsl #3
    6bfc:	add	x1, x4, w1, uxtw #4
    6c00:	stp	xzr, xzr, [x4], #16
    6c04:	cmp	x4, x1
    6c08:	b.ne	6c00 <_gcry_mpih_mul+0xa8>  // b.any
    6c0c:	and	w1, w2, #0xfffffffe
    6c10:	add	w0, w1, w0
    6c14:	cmp	w2, w1
    6c18:	b.eq	6c78 <_gcry_mpih_mul+0x120>  // b.none
    6c1c:	str	xzr, [x25, w0, sxtw #3]
    6c20:	add	w1, w0, #0x1
    6c24:	cmp	w23, w1
    6c28:	sbfiz	x1, x0, #3, #32
    6c2c:	b.le	6c78 <_gcry_mpih_mul+0x120>
    6c30:	add	x1, x25, x1
    6c34:	add	w2, w0, #0x2
    6c38:	cmp	w23, w2
    6c3c:	str	xzr, [x1, #8]
    6c40:	b.le	6c78 <_gcry_mpih_mul+0x120>
    6c44:	str	xzr, [x1, #16]
    6c48:	add	w2, w0, #0x3
    6c4c:	cmp	w23, w2
    6c50:	b.le	6c78 <_gcry_mpih_mul+0x120>
    6c54:	str	xzr, [x1, #24]
    6c58:	add	w2, w0, #0x4
    6c5c:	cmp	w23, w2
    6c60:	b.le	6c78 <_gcry_mpih_mul+0x120>
    6c64:	str	xzr, [x1, #32]
    6c68:	add	w0, w0, #0x5
    6c6c:	cmp	w23, w0
    6c70:	b.le	6c78 <_gcry_mpih_mul+0x120>
    6c74:	str	xzr, [x1, #40]
    6c78:	mov	x5, #0x0                   	// #0
    6c7c:	b	6ce4 <_gcry_mpih_mul+0x18c>
    6c80:	add	x0, sp, #0x58
    6c84:	mov	x2, #0x28                  	// #40
    6c88:	mov	w1, #0x0                   	// #0
    6c8c:	bl	0 <grub_memset>
    6c90:	mov	w4, w20
    6c94:	add	x20, x22, w20, sxtw
    6c98:	add	x5, sp, #0x58
    6c9c:	mov	x3, x21
    6ca0:	mov	w2, w22
    6ca4:	mov	x1, x24
    6ca8:	add	x20, x25, x20, lsl #3
    6cac:	mov	x0, x25
    6cb0:	bl	6df0 <_gcry_mpih_mul_karatsuba_case>
    6cb4:	add	x0, sp, #0x58
    6cb8:	bl	6ac8 <_gcry_mpih_release_karatsuba_ctx>
    6cbc:	ldur	x5, [x20, #-8]
    6cc0:	ldp	x19, x20, [sp, #16]
    6cc4:	mov	x0, x5
    6cc8:	ldp	x21, x22, [sp, #32]
    6ccc:	ldp	x23, x24, [sp, #48]
    6cd0:	ldr	x25, [sp, #64]
    6cd4:	ldp	x29, x30, [sp], #128
    6cd8:	ret
    6cdc:	bl	71d8 <_gcry_mpih_mul_1>
    6ce0:	mov	x5, x0
    6ce4:	str	x5, [x25, x22, lsl #3]
    6ce8:	cmp	w20, #0x1
    6cec:	lsl	x22, x22, #3
    6cf0:	add	x19, x25, #0x8
    6cf4:	b.le	6b98 <_gcry_mpih_mul+0x40>
    6cf8:	sub	w4, w20, #0x2
    6cfc:	add	x21, x21, #0x8
    6d00:	add	x3, x4, #0x2
    6d04:	add	x25, x25, x3, lsl #3
    6d08:	b	6d24 <_gcry_mpih_mul+0x1cc>
    6d0c:	b.eq	6d4c <_gcry_mpih_mul+0x1f4>  // b.none
    6d10:	str	x5, [x19, x22]
    6d14:	add	x19, x19, #0x8
    6d18:	cmp	x19, x25
    6d1c:	add	x21, x21, #0x8
    6d20:	b.eq	6b98 <_gcry_mpih_mul+0x40>  // b.none
    6d24:	ldr	x3, [x21]
    6d28:	mov	x0, x19
    6d2c:	mov	w2, w23
    6d30:	mov	x1, x24
    6d34:	cmp	x3, #0x1
    6d38:	mov	x5, #0x0                   	// #0
    6d3c:	b.ls	6d0c <_gcry_mpih_mul+0x1b4>  // b.plast
    6d40:	bl	7258 <_gcry_mpih_addmul_1>
    6d44:	mov	x5, x0
    6d48:	b	6d10 <_gcry_mpih_mul+0x1b8>
    6d4c:	mov	w3, w23
    6d50:	mov	x2, x24
    6d54:	mov	x1, x19
    6d58:	bl	7370 <_gcry_mpih_add_n>
    6d5c:	mov	x5, x0
    6d60:	b	6d10 <_gcry_mpih_mul+0x1b8>
    6d64:	cmp	w22, #0x0
    6d68:	b.le	6c78 <_gcry_mpih_mul+0x120>
    6d6c:	orr	x2, x0, x1
    6d70:	add	x1, x0, #0xf
    6d74:	sub	x1, x1, x24
    6d78:	sub	w0, w22, #0x1
    6d7c:	tst	x2, #0xf
    6d80:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    6d84:	ccmp	w0, #0xb, #0x0, hi  // hi = pmore
    6d88:	b.ls	6dc8 <_gcry_mpih_mul+0x270>  // b.plast
    6d8c:	lsr	w4, w22, #1
    6d90:	mov	x0, x24
    6d94:	mov	x1, x25
    6d98:	add	x4, x24, w4, uxtw #4
    6d9c:	nop
    6da0:	ldp	x2, x3, [x0], #16
    6da4:	stp	x2, x3, [x1], #16
    6da8:	cmp	x0, x4
    6dac:	b.ne	6da0 <_gcry_mpih_mul+0x248>  // b.any
    6db0:	and	w0, w23, #0xfffffffe
    6db4:	tbz	w23, #0, 6c78 <_gcry_mpih_mul+0x120>
    6db8:	ldr	x1, [x24, x0, lsl #3]
    6dbc:	mov	x5, #0x0                   	// #0
    6dc0:	str	x1, [x25, x0, lsl #3]
    6dc4:	b	6ce4 <_gcry_mpih_mul+0x18c>
    6dc8:	mov	x0, #0x0                   	// #0
    6dcc:	nop
    6dd0:	ldr	x1, [x24, x0, lsl #3]
    6dd4:	str	x1, [x25, x0, lsl #3]
    6dd8:	add	x0, x0, #0x1
    6ddc:	cmp	w23, w0
    6de0:	b.gt	6dd0 <_gcry_mpih_mul+0x278>
    6de4:	mov	x5, #0x0                   	// #0
    6de8:	b	6ce4 <_gcry_mpih_mul+0x18c>
    6dec:	nop

0000000000006df0 <_gcry_mpih_mul_karatsuba_case>:
    6df0:	stp	x29, x30, [sp, #-96]!
    6df4:	mov	x29, sp
    6df8:	stp	x23, x24, [sp, #48]
    6dfc:	mov	x24, x0
    6e00:	mov	w23, w4
    6e04:	ldr	x0, [x5, #8]
    6e08:	stp	x19, x20, [sp, #16]
    6e0c:	mov	x19, x5
    6e10:	stp	x21, x22, [sp, #32]
    6e14:	mov	x20, x1
    6e18:	mov	x21, x3
    6e1c:	stp	x25, x26, [sp, #64]
    6e20:	mov	w26, w2
    6e24:	cbz	x0, 703c <_gcry_mpih_mul_karatsuba_case+0x24c>
    6e28:	ldr	w1, [x5, #20]
    6e2c:	cmp	w1, w4
    6e30:	b.lt	7034 <_gcry_mpih_mul_karatsuba_case+0x244>  // b.tstop
    6e34:	cmp	w23, #0xf
    6e38:	b.gt	706c <_gcry_mpih_mul_karatsuba_case+0x27c>
    6e3c:	mov	w3, w23
    6e40:	mov	x2, x21
    6e44:	mov	x1, x20
    6e48:	mov	x0, x24
    6e4c:	bl	5c08 <mul_n_basecase>
    6e50:	sbfiz	x25, x23, #3, #32
    6e54:	sub	w26, w26, w23
    6e58:	cmp	w23, w26
    6e5c:	add	x24, x24, x25
    6e60:	add	x20, x20, x25
    6e64:	sxtw	x22, w23
    6e68:	b.gt	6f54 <_gcry_mpih_mul_karatsuba_case+0x164>
    6e6c:	ldr	x0, [x19, #24]
    6e70:	cbz	x0, 7198 <_gcry_mpih_mul_karatsuba_case+0x3a8>
    6e74:	ldr	w1, [x19, #36]
    6e78:	cmp	w1, w23
    6e7c:	b.lt	7130 <_gcry_mpih_mul_karatsuba_case+0x340>  // b.tstop
    6e80:	cmp	w23, #0xf
    6e84:	b.gt	70f8 <_gcry_mpih_mul_karatsuba_case+0x308>
    6e88:	mov	w3, w23
    6e8c:	mov	x2, x21
    6e90:	mov	x1, x20
    6e94:	bl	5c08 <mul_n_basecase>
    6e98:	ldr	x2, [x19, #24]
    6e9c:	mov	x1, x24
    6ea0:	mov	w3, w23
    6ea4:	mov	x0, x24
    6ea8:	add	x24, x24, x25
    6eac:	bl	7370 <_gcry_mpih_add_n>
    6eb0:	mov	x1, x0
    6eb4:	ldr	x0, [x19, #24]
    6eb8:	mov	x6, x24
    6ebc:	mov	w7, w23
    6ec0:	add	x2, x0, x25
    6ec4:	ldr	x3, [x0, x25]
    6ec8:	add	x2, x2, #0x8
    6ecc:	adds	x1, x1, x3
    6ed0:	str	x1, [x6], #8
    6ed4:	b.cs	7098 <_gcry_mpih_mul_karatsuba_case+0x2a8>  // b.hs, b.nlast
    6ed8:	cmp	x6, x2
    6edc:	b.eq	6f44 <_gcry_mpih_mul_karatsuba_case+0x154>  // b.none
    6ee0:	sub	w8, w7, #0x1
    6ee4:	cmp	w8, #0x0
    6ee8:	b.le	6f44 <_gcry_mpih_mul_karatsuba_case+0x154>
    6eec:	orr	x3, x2, x6
    6ef0:	add	x1, x6, #0xf
    6ef4:	sub	x1, x1, x2
    6ef8:	sub	w7, w7, #0x2
    6efc:	tst	x3, #0xf
    6f00:	ccmp	x1, #0x1e, #0x0, eq  // eq = none
    6f04:	ccmp	w7, #0xb, #0x0, hi  // hi = pmore
    6f08:	b.ls	7110 <_gcry_mpih_mul_karatsuba_case+0x320>  // b.plast
    6f0c:	lsr	w7, w8, #1
    6f10:	mov	x1, x2
    6f14:	mov	x3, x6
    6f18:	add	x7, x2, w7, uxtw #4
    6f1c:	nop
    6f20:	ldp	x4, x5, [x1], #16
    6f24:	stp	x4, x5, [x3], #16
    6f28:	cmp	x1, x7
    6f2c:	b.ne	6f20 <_gcry_mpih_mul_karatsuba_case+0x130>  // b.any
    6f30:	and	w1, w8, #0xfffffffe
    6f34:	tbz	w8, #0, 6f44 <_gcry_mpih_mul_karatsuba_case+0x154>
    6f38:	sxtw	x1, w1
    6f3c:	ldr	x2, [x2, x1, lsl #3]
    6f40:	str	x2, [x6, x1, lsl #3]
    6f44:	sub	w26, w26, w23
    6f48:	add	x20, x20, x25
    6f4c:	cmp	w23, w26
    6f50:	b.le	6e80 <_gcry_mpih_mul_karatsuba_case+0x90>
    6f54:	cbz	w26, 701c <_gcry_mpih_mul_karatsuba_case+0x22c>
    6f58:	cmp	w26, #0xf
    6f5c:	b.le	717c <_gcry_mpih_mul_karatsuba_case+0x38c>
    6f60:	ldr	x5, [x19]
    6f64:	cbz	x5, 71a0 <_gcry_mpih_mul_karatsuba_case+0x3b0>
    6f68:	ldr	x0, [x19, #8]
    6f6c:	mov	x3, x20
    6f70:	mov	x1, x21
    6f74:	mov	w4, w26
    6f78:	mov	w2, w23
    6f7c:	bl	6df0 <_gcry_mpih_mul_karatsuba_case>
    6f80:	ldr	x2, [x19, #8]
    6f84:	mov	x1, x24
    6f88:	mov	x0, x24
    6f8c:	mov	w3, w23
    6f90:	add	x24, x24, x25
    6f94:	bl	7370 <_gcry_mpih_add_n>
    6f98:	ldr	x2, [x19, #8]
    6f9c:	add	x1, x2, x25
    6fa0:	ldr	x2, [x2, x22, lsl #3]
    6fa4:	add	x1, x1, #0x8
    6fa8:	adds	x0, x0, x2
    6fac:	str	x0, [x24], #8
    6fb0:	b.cs	70b4 <_gcry_mpih_mul_karatsuba_case+0x2c4>  // b.hs, b.nlast
    6fb4:	cmp	x24, x1
    6fb8:	b.eq	701c <_gcry_mpih_mul_karatsuba_case+0x22c>  // b.none
    6fbc:	sub	w6, w26, #0x1
    6fc0:	cmp	w6, #0x0
    6fc4:	b.le	701c <_gcry_mpih_mul_karatsuba_case+0x22c>
    6fc8:	orr	x2, x24, x1
    6fcc:	add	x0, x24, #0xf
    6fd0:	sub	x0, x0, x1
    6fd4:	sub	w26, w26, #0x2
    6fd8:	tst	x2, #0xf
    6fdc:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    6fe0:	ccmp	w26, #0xb, #0x0, hi  // hi = pmore
    6fe4:	b.ls	71b8 <_gcry_mpih_mul_karatsuba_case+0x3c8>  // b.plast
    6fe8:	lsr	w3, w6, #1
    6fec:	mov	x0, x1
    6ff0:	mov	x2, x24
    6ff4:	add	x3, x1, w3, uxtw #4
    6ff8:	ldp	x4, x5, [x0], #16
    6ffc:	stp	x4, x5, [x2], #16
    7000:	cmp	x3, x0
    7004:	b.ne	6ff8 <_gcry_mpih_mul_karatsuba_case+0x208>  // b.any
    7008:	and	w0, w6, #0xfffffffe
    700c:	tbz	w6, #0, 701c <_gcry_mpih_mul_karatsuba_case+0x22c>
    7010:	sxtw	x0, w0
    7014:	ldr	x1, [x1, x0, lsl #3]
    7018:	str	x1, [x24, x0, lsl #3]
    701c:	ldp	x19, x20, [sp, #16]
    7020:	ldp	x21, x22, [sp, #32]
    7024:	ldp	x23, x24, [sp, #48]
    7028:	ldp	x25, x26, [sp, #64]
    702c:	ldp	x29, x30, [sp], #96
    7030:	ret
    7034:	ldr	w1, [x5, #16]
    7038:	bl	138 <_gcry_mpi_free_limb_space>
    703c:	lsl	w22, w23, #1
    7040:	str	w22, [x19, #16]
    7044:	mov	x0, x20
    7048:	bl	99c0 <gcry_is_secure>
    704c:	mov	w1, #0x1                   	// #1
    7050:	cbz	w0, 70d4 <_gcry_mpih_mul_karatsuba_case+0x2e4>
    7054:	mov	w0, w22
    7058:	bl	f0 <_gcry_mpi_alloc_limb_space>
    705c:	str	x0, [x19, #8]
    7060:	str	w23, [x19, #20]
    7064:	cmp	w23, #0xf
    7068:	b.le	6e3c <_gcry_mpih_mul_karatsuba_case+0x4c>
    706c:	mov	x4, x0
    7070:	mov	w3, w23
    7074:	mov	x2, x21
    7078:	mov	x1, x20
    707c:	mov	x0, x24
    7080:	bl	5e30 <mul_n>
    7084:	b	6e50 <_gcry_mpih_mul_karatsuba_case+0x60>
    7088:	ldr	x1, [x2], #8
    708c:	add	x1, x1, #0x1
    7090:	str	x1, [x6], #8
    7094:	cbnz	x1, 6ed8 <_gcry_mpih_mul_karatsuba_case+0xe8>
    7098:	subs	w7, w7, #0x1
    709c:	b.ne	7088 <_gcry_mpih_mul_karatsuba_case+0x298>  // b.any
    70a0:	b	6f44 <_gcry_mpih_mul_karatsuba_case+0x154>
    70a4:	ldr	x0, [x1], #8
    70a8:	add	x0, x0, #0x1
    70ac:	str	x0, [x24], #8
    70b0:	cbnz	x0, 6fb4 <_gcry_mpih_mul_karatsuba_case+0x1c4>
    70b4:	subs	w26, w26, #0x1
    70b8:	b.ne	70a4 <_gcry_mpih_mul_karatsuba_case+0x2b4>  // b.any
    70bc:	ldp	x19, x20, [sp, #16]
    70c0:	ldp	x21, x22, [sp, #32]
    70c4:	ldp	x23, x24, [sp, #48]
    70c8:	ldp	x25, x26, [sp, #64]
    70cc:	ldp	x29, x30, [sp], #96
    70d0:	ret
    70d4:	mov	x0, x21
    70d8:	bl	99c0 <gcry_is_secure>
    70dc:	cmp	w0, #0x0
    70e0:	mov	w0, w22
    70e4:	cset	w1, ne  // ne = any
    70e8:	bl	f0 <_gcry_mpi_alloc_limb_space>
    70ec:	str	x0, [x19, #8]
    70f0:	str	w23, [x19, #20]
    70f4:	b	7064 <_gcry_mpih_mul_karatsuba_case+0x274>
    70f8:	ldr	x4, [x19, #8]
    70fc:	mov	w3, w23
    7100:	mov	x2, x21
    7104:	mov	x1, x20
    7108:	bl	5e30 <mul_n>
    710c:	b	6e98 <_gcry_mpih_mul_karatsuba_case+0xa8>
    7110:	mov	x1, #0x0                   	// #0
    7114:	nop
    7118:	ldr	x3, [x2, x1, lsl #3]
    711c:	str	x3, [x6, x1, lsl #3]
    7120:	add	x1, x1, #0x1
    7124:	cmp	w8, w1
    7128:	b.gt	7118 <_gcry_mpih_mul_karatsuba_case+0x328>
    712c:	b	6f44 <_gcry_mpih_mul_karatsuba_case+0x154>
    7130:	ldr	w1, [x19, #32]
    7134:	str	x27, [sp, #80]
    7138:	bl	138 <_gcry_mpi_free_limb_space>
    713c:	lsl	w27, w23, #1
    7140:	str	w27, [x19, #32]
    7144:	mov	x0, x20
    7148:	bl	99c0 <gcry_is_secure>
    714c:	mov	w1, #0x1                   	// #1
    7150:	cbnz	w0, 7164 <_gcry_mpih_mul_karatsuba_case+0x374>
    7154:	mov	x0, x21
    7158:	bl	99c0 <gcry_is_secure>
    715c:	cmp	w0, #0x0
    7160:	cset	w1, ne  // ne = any
    7164:	mov	w0, w27
    7168:	bl	f0 <_gcry_mpi_alloc_limb_space>
    716c:	ldr	x27, [sp, #80]
    7170:	str	x0, [x19, #24]
    7174:	str	w23, [x19, #36]
    7178:	b	6e80 <_gcry_mpih_mul_karatsuba_case+0x90>
    717c:	ldr	x0, [x19, #8]
    7180:	mov	x3, x20
    7184:	mov	x1, x21
    7188:	mov	w4, w26
    718c:	mov	w2, w23
    7190:	bl	6b58 <_gcry_mpih_mul>
    7194:	b	6f80 <_gcry_mpih_mul_karatsuba_case+0x190>
    7198:	str	x27, [sp, #80]
    719c:	b	713c <_gcry_mpih_mul_karatsuba_case+0x34c>
    71a0:	mov	x1, #0x28                  	// #40
    71a4:	mov	x0, #0x1                   	// #1
    71a8:	bl	99c8 <gcry_xcalloc>
    71ac:	mov	x5, x0
    71b0:	str	x0, [x19]
    71b4:	b	6f68 <_gcry_mpih_mul_karatsuba_case+0x178>
    71b8:	mov	x0, #0x0                   	// #0
    71bc:	nop
    71c0:	ldr	x2, [x1, x0, lsl #3]
    71c4:	str	x2, [x24, x0, lsl #3]
    71c8:	add	x0, x0, #0x1
    71cc:	cmp	w6, w0
    71d0:	b.gt	71c0 <_gcry_mpih_mul_karatsuba_case+0x3d0>
    71d4:	b	701c <_gcry_mpih_mul_karatsuba_case+0x22c>

00000000000071d8 <_gcry_mpih_mul_1>:
    71d8:	sub	w10, w2, #0x1
    71dc:	lsr	x9, x3, #32
    71e0:	add	x10, x10, #0x1
    71e4:	and	x8, x3, #0xffffffff
    71e8:	mov	x11, x0
    71ec:	mov	x4, #0x0                   	// #0
    71f0:	lsl	x10, x10, #3
    71f4:	mov	x0, #0x0                   	// #0
    71f8:	mov	x12, #0x100000000           	// #4294967296
    71fc:	nop
    7200:	ldr	x2, [x1, x4]
    7204:	and	x5, x2, #0xffffffff
    7208:	lsr	x2, x2, #32
    720c:	mul	x3, x5, x8
    7210:	mul	x7, x2, x8
    7214:	madd	x6, x9, x5, x7
    7218:	mul	x2, x9, x2
    721c:	add	x5, x0, w3, uxtw
    7220:	add	x3, x6, x3, lsr #32
    7224:	add	x6, x2, x12
    7228:	cmp	x3, x7
    722c:	add	x5, x5, x3, lsl #32
    7230:	csel	x2, x6, x2, cc  // cc = lo, ul, last
    7234:	lsr	x3, x3, #32
    7238:	cmp	x5, x0
    723c:	str	x5, [x11, x4]
    7240:	cinc	x3, x3, cc  // cc = lo, ul, last
    7244:	add	x4, x4, #0x8
    7248:	add	x0, x3, x2
    724c:	cmp	x10, x4
    7250:	b.ne	7200 <_gcry_mpih_mul_1+0x28>  // b.any
    7254:	ret

0000000000007258 <_gcry_mpih_addmul_1>:
    7258:	sub	w12, w2, #0x1
    725c:	lsr	x11, x3, #32
    7260:	add	x12, x12, #0x1
    7264:	and	x9, x3, #0xffffffff
    7268:	mov	x10, x0
    726c:	mov	x4, #0x0                   	// #0
    7270:	lsl	x12, x12, #3
    7274:	mov	x0, #0x0                   	// #0
    7278:	mov	x13, #0x100000000           	// #4294967296
    727c:	nop
    7280:	ldr	x3, [x1, x4]
    7284:	ldr	x5, [x10, x4]
    7288:	and	x6, x3, #0xffffffff
    728c:	lsr	x3, x3, #32
    7290:	mul	x2, x6, x9
    7294:	mul	x8, x3, x9
    7298:	madd	x7, x11, x6, x8
    729c:	mul	x3, x11, x3
    72a0:	add	x6, x0, w2, uxtw
    72a4:	add	x2, x7, x2, lsr #32
    72a8:	add	x7, x3, x13
    72ac:	cmp	x2, x8
    72b0:	add	x6, x6, x2, lsl #32
    72b4:	csel	x3, x7, x3, cc  // cc = lo, ul, last
    72b8:	lsr	x2, x2, #32
    72bc:	cmp	x6, x0
    72c0:	cinc	x2, x2, cc  // cc = lo, ul, last
    72c4:	adds	x5, x5, x6
    72c8:	str	x5, [x10, x4]
    72cc:	add	x4, x4, #0x8
    72d0:	adc	x0, x3, x2
    72d4:	cmp	x12, x4
    72d8:	b.ne	7280 <_gcry_mpih_addmul_1+0x28>  // b.any
    72dc:	ret

00000000000072e0 <_gcry_mpih_submul_1>:
    72e0:	sub	w12, w2, #0x1
    72e4:	lsr	x11, x3, #32
    72e8:	add	x12, x12, #0x1
    72ec:	and	x9, x3, #0xffffffff
    72f0:	mov	x10, x0
    72f4:	mov	x5, #0x0                   	// #0
    72f8:	lsl	x12, x12, #3
    72fc:	mov	x0, #0x0                   	// #0
    7300:	mov	x13, #0x100000000           	// #4294967296
    7304:	nop
    7308:	ldr	x2, [x1, x5]
    730c:	ldr	x7, [x10, x5]
    7310:	and	x4, x2, #0xffffffff
    7314:	lsr	x2, x2, #32
    7318:	mul	x3, x4, x9
    731c:	mul	x8, x2, x9
    7320:	madd	x6, x11, x4, x8
    7324:	mul	x2, x11, x2
    7328:	add	x4, x0, w3, uxtw
    732c:	add	x3, x6, x3, lsr #32
    7330:	add	x6, x2, x13
    7334:	cmp	x3, x8
    7338:	add	x4, x4, x3, lsl #32
    733c:	csel	x2, x6, x2, cc  // cc = lo, ul, last
    7340:	lsr	x3, x3, #32
    7344:	cmp	x4, x0
    7348:	cinc	x3, x3, cc  // cc = lo, ul, last
    734c:	subs	x0, x7, x4
    7350:	cmp	x7, x4
    7354:	str	x0, [x10, x5]
    7358:	cinc	x2, x2, cc  // cc = lo, ul, last
    735c:	add	x5, x5, #0x8
    7360:	add	x0, x2, x3
    7364:	cmp	x12, x5
    7368:	b.ne	7308 <_gcry_mpih_submul_1+0x28>  // b.any
    736c:	ret

0000000000007370 <_gcry_mpih_add_n>:
    7370:	sub	w3, w3, #0x1
    7374:	mov	x7, x0
    7378:	add	x3, x3, #0x1
    737c:	mov	x0, #0x0                   	// #0
    7380:	lsl	x6, x3, #3
    7384:	mov	x3, #0x0                   	// #0
    7388:	ldr	x5, [x2, x3]
    738c:	ldr	x4, [x1, x3]
    7390:	adds	x0, x0, x5
    7394:	cset	x5, cs  // cs = hs, nlast
    7398:	adds	x0, x4, x0
    739c:	str	x0, [x7, x3]
    73a0:	add	x3, x3, #0x8
    73a4:	cinc	x0, x5, cs  // cs = hs, nlast
    73a8:	cmp	x6, x3
    73ac:	b.ne	7388 <_gcry_mpih_add_n+0x18>  // b.any
    73b0:	ret
    73b4:	nop

00000000000073b8 <_gcry_mpih_sub_n>:
    73b8:	sub	w3, w3, #0x1
    73bc:	mov	x8, x0
    73c0:	add	x3, x3, #0x1
    73c4:	mov	x0, #0x0                   	// #0
    73c8:	lsl	x7, x3, #3
    73cc:	mov	x3, #0x0                   	// #0
    73d0:	ldr	x5, [x2, x3]
    73d4:	ldr	x4, [x1, x3]
    73d8:	adds	x0, x0, x5
    73dc:	cset	x5, cs  // cs = hs, nlast
    73e0:	subs	x6, x4, x0
    73e4:	str	x6, [x8, x3]
    73e8:	cmp	x4, x0
    73ec:	add	x3, x3, #0x8
    73f0:	cinc	x0, x5, cc  // cc = lo, ul, last
    73f4:	cmp	x7, x3
    73f8:	b.ne	73d0 <_gcry_mpih_sub_n+0x18>  // b.any
    73fc:	ret

0000000000007400 <_gcry_mpih_mod_1>:
    7400:	mov	x7, x0
    7404:	mov	x0, #0x0                   	// #0
    7408:	cbz	w1, 7584 <_gcry_mpih_mod_1+0x184>
    740c:	cmp	xzr, x2, lsr #56
    7410:	lsr	x3, x2, #56
    7414:	b.ne	763c <_gcry_mpih_mod_1+0x23c>  // b.any
    7418:	tst	x2, #0xff000000000000
    741c:	lsr	x3, x2, #48
    7420:	b.ne	7644 <_gcry_mpih_mod_1+0x244>  // b.any
    7424:	tst	x2, #0xff0000000000
    7428:	lsr	x3, x2, #40
    742c:	b.ne	7624 <_gcry_mpih_mod_1+0x224>  // b.any
    7430:	tst	x2, #0xff00000000
    7434:	lsr	x3, x2, #32
    7438:	b.ne	764c <_gcry_mpih_mod_1+0x24c>  // b.any
    743c:	tst	x2, #0xff000000
    7440:	lsr	x3, x2, #24
    7444:	b.ne	7634 <_gcry_mpih_mod_1+0x234>  // b.any
    7448:	tst	x2, #0xff0000
    744c:	lsr	x3, x2, #16
    7450:	b.ne	7654 <_gcry_mpih_mod_1+0x254>  // b.any
    7454:	tst	x2, #0xff00
    7458:	lsr	x3, x2, #8
    745c:	mov	w9, #0x8                   	// #8
    7460:	b.ne	7628 <_gcry_mpih_mod_1+0x228>  // b.any
    7464:	mov	x3, x2
    7468:	mov	w0, #0x40                  	// #64
    746c:	adrp	x4, 0 <_gcry_mpi_alloc>
    7470:	ldr	x4, [x4]
    7474:	ldrb	w9, [x4, x3]
    7478:	subs	w9, w0, w9
    747c:	b.eq	7588 <_gcry_mpih_mod_1+0x188>  // b.none
    7480:	add	x0, x7, w1, sxtw #3
    7484:	subs	w8, w1, #0x2
    7488:	mov	w12, #0x40                  	// #64
    748c:	sub	w12, w12, w9
    7490:	lsl	x5, x2, x9
    7494:	and	x11, x5, #0xffffffff
    7498:	ldur	x1, [x0, #-8]
    749c:	lsr	x10, x5, #32
    74a0:	lsr	x2, x1, x12
    74a4:	b.mi	7524 <_gcry_mpih_mod_1+0x124>  // b.first
    74a8:	sxtw	x8, w8
    74ac:	nop
    74b0:	udiv	x3, x2, x10
    74b4:	mov	x0, x1
    74b8:	ldr	x1, [x7, x8, lsl #3]
    74bc:	lsl	x0, x0, x9
    74c0:	sub	x8, x8, #0x1
    74c4:	msub	x4, x3, x10, x2
    74c8:	lsr	x2, x1, x12
    74cc:	orr	x2, x2, x0
    74d0:	mul	x6, x3, x11
    74d4:	extr	x3, x4, x2, #32
    74d8:	cmp	x3, x6
    74dc:	b.cs	74f0 <_gcry_mpih_mod_1+0xf0>  // b.hs, b.nlast
    74e0:	adds	x3, x5, x3
    74e4:	ccmp	x3, x6, #0x2, cc  // cc = lo, ul, last
    74e8:	add	x0, x3, x5
    74ec:	csel	x3, x0, x3, cc  // cc = lo, ul, last
    74f0:	sub	x3, x3, x6
    74f4:	udiv	x4, x3, x10
    74f8:	msub	x3, x4, x10, x3
    74fc:	mul	x4, x4, x11
    7500:	bfi	x2, x3, #32, #32
    7504:	cmp	x2, x4
    7508:	b.cs	751c <_gcry_mpih_mod_1+0x11c>  // b.hs, b.nlast
    750c:	adds	x2, x5, x2
    7510:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
    7514:	add	x0, x2, x5
    7518:	csel	x2, x0, x2, cc  // cc = lo, ul, last
    751c:	sub	x2, x2, x4
    7520:	tbz	w8, #31, 74b0 <_gcry_mpih_mod_1+0xb0>
    7524:	udiv	x0, x2, x10
    7528:	lsl	x1, x1, x9
    752c:	msub	x2, x0, x10, x2
    7530:	mul	x0, x0, x11
    7534:	extr	x2, x2, x1, #32
    7538:	cmp	x0, x2
    753c:	b.ls	7550 <_gcry_mpih_mod_1+0x150>  // b.plast
    7540:	adds	x2, x2, x5
    7544:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
    7548:	add	x3, x2, x5
    754c:	csel	x2, x3, x2, hi  // hi = pmore
    7550:	sub	x2, x2, x0
    7554:	udiv	x0, x2, x10
    7558:	msub	x2, x0, x10, x2
    755c:	mul	x0, x0, x11
    7560:	bfi	x1, x2, #32, #32
    7564:	cmp	x1, x0
    7568:	b.cs	757c <_gcry_mpih_mod_1+0x17c>  // b.hs, b.nlast
    756c:	adds	x1, x1, x5
    7570:	add	x2, x1, x5
    7574:	ccmp	x1, x0, #0x2, cc  // cc = lo, ul, last
    7578:	csel	x1, x2, x1, cc  // cc = lo, ul, last
    757c:	sub	x0, x1, x0
    7580:	lsr	x0, x0, x9
    7584:	ret
    7588:	sub	w5, w1, #0x1
    758c:	ldr	x0, [x7, w5, sxtw #3]
    7590:	cmp	x0, x2
    7594:	b.cc	761c <_gcry_mpih_mod_1+0x21c>  // b.lo, b.ul, b.last
    7598:	mov	x0, #0x0                   	// #0
    759c:	tbnz	w5, #31, 7584 <_gcry_mpih_mod_1+0x184>
    75a0:	sxtw	x5, w5
    75a4:	lsr	x6, x2, #32
    75a8:	and	x8, x2, #0xffffffff
    75ac:	nop
    75b0:	udiv	x3, x0, x6
    75b4:	ldr	x4, [x7, x5, lsl #3]
    75b8:	sub	x5, x5, #0x1
    75bc:	msub	x1, x3, x6, x0
    75c0:	mul	x3, x3, x8
    75c4:	extr	x1, x1, x4, #32
    75c8:	cmp	x1, x3
    75cc:	b.cs	75e0 <_gcry_mpih_mod_1+0x1e0>  // b.hs, b.nlast
    75d0:	adds	x1, x2, x1
    75d4:	ccmp	x1, x3, #0x2, cc  // cc = lo, ul, last
    75d8:	add	x0, x1, x2
    75dc:	csel	x1, x0, x1, cc  // cc = lo, ul, last
    75e0:	sub	x3, x1, x3
    75e4:	mov	x0, x4
    75e8:	udiv	x1, x3, x6
    75ec:	msub	x3, x1, x6, x3
    75f0:	mul	x1, x1, x8
    75f4:	bfi	x0, x3, #32, #32
    75f8:	cmp	x0, x1
    75fc:	b.cs	7610 <_gcry_mpih_mod_1+0x210>  // b.hs, b.nlast
    7600:	adds	x0, x2, x0
    7604:	ccmp	x0, x1, #0x2, cc  // cc = lo, ul, last
    7608:	add	x3, x0, x2
    760c:	csel	x0, x3, x0, cc  // cc = lo, ul, last
    7610:	sub	x0, x0, x1
    7614:	tbz	w5, #31, 75b0 <_gcry_mpih_mod_1+0x1b0>
    7618:	ret
    761c:	sub	w5, w1, #0x2
    7620:	b	759c <_gcry_mpih_mod_1+0x19c>
    7624:	mov	w9, #0x28                  	// #40
    7628:	mov	w0, #0x40                  	// #64
    762c:	sub	w0, w0, w9
    7630:	b	746c <_gcry_mpih_mod_1+0x6c>
    7634:	mov	w9, #0x18                  	// #24
    7638:	b	7628 <_gcry_mpih_mod_1+0x228>
    763c:	mov	w9, #0x38                  	// #56
    7640:	b	7628 <_gcry_mpih_mod_1+0x228>
    7644:	mov	w9, #0x30                  	// #48
    7648:	b	7628 <_gcry_mpih_mod_1+0x228>
    764c:	mov	w9, #0x20                  	// #32
    7650:	b	7628 <_gcry_mpih_mod_1+0x228>
    7654:	mov	w9, #0x10                  	// #16
    7658:	b	7628 <_gcry_mpih_mod_1+0x228>
    765c:	nop
	...

0000000000007668 <_gcry_mpih_divrem>:
    7668:	stp	x29, x30, [sp, #-192]!
    766c:	cmp	w5, #0x1
    7670:	mov	x6, x2
    7674:	mov	x29, sp
    7678:	stp	x19, x20, [sp, #16]
    767c:	mov	w20, w1
    7680:	stp	x21, x22, [sp, #32]
    7684:	mov	w21, w3
    7688:	stp	x23, x24, [sp, #48]
    768c:	mov	x23, x4
    7690:	str	x0, [sp, #104]
    7694:	b.eq	7c90 <_gcry_mpih_divrem+0x628>  // b.none
    7698:	mov	w19, w5
    769c:	cmp	w5, #0x2
    76a0:	b.eq	7998 <_gcry_mpih_divrem+0x330>  // b.none
    76a4:	stp	x25, x26, [sp, #64]
    76a8:	stp	x27, x28, [sp, #80]
    76ac:	cbz	w5, 8044 <_gcry_mpih_divrem+0x9dc>
    76b0:	sub	w9, w3, w5
    76b4:	sbfiz	x4, x5, #3, #32
    76b8:	sub	x0, x4, #0x8
    76bc:	sub	x22, x4, #0x10
    76c0:	add	x27, x2, w9, sxtw #3
    76c4:	str	xzr, [sp, #168]
    76c8:	str	x0, [sp, #184]
    76cc:	add	x24, x27, x0
    76d0:	ldr	x25, [x23, x0]
    76d4:	ldr	x13, [x27, x0]
    76d8:	ldr	x28, [x23, x22]
    76dc:	cmp	x25, x13
    76e0:	b.ls	7f80 <_gcry_mpih_divrem+0x918>  // b.plast
    76e4:	add	w7, w21, w20
    76e8:	sub	w7, w7, w19
    76ec:	subs	w26, w7, #0x1
    76f0:	b.mi	789c <_gcry_mpih_divrem+0x234>  // b.first
    76f4:	sub	w0, w19, #0x2
    76f8:	str	w0, [sp, #132]
    76fc:	lsr	x0, x28, #32
    7700:	str	x0, [sp, #152]
    7704:	cmp	w20, w26
    7708:	lsr	x21, x25, #32
    770c:	b.gt	77f8 <_gcry_mpih_divrem+0x190>
    7710:	cmp	w20, #0x0
    7714:	add	x24, x27, x4
    7718:	ldr	x1, [sp, #104]
    771c:	csel	w0, w20, wzr, ge  // ge = tcont
    7720:	str	w0, [sp, #136]
    7724:	mov	x0, #0xfffffffffffffff8    	// #-8
    7728:	sub	x0, x0, x4
    772c:	str	x0, [sp, #144]
    7730:	and	x0, x25, #0xffffffff
    7734:	add	x1, x1, w26, sxtw #3
    7738:	str	x1, [sp, #112]
    773c:	str	x0, [sp, #160]
    7740:	and	x0, x28, #0xffffffff
    7744:	str	x0, [sp, #176]
    7748:	b	7788 <_gcry_mpih_divrem+0x120>
    774c:	mov	w3, w19
    7750:	mov	x2, x23
    7754:	mov	x1, x27
    7758:	mov	x0, x27
    775c:	bl	7370 <_gcry_mpih_add_n>
    7760:	sub	w26, w26, #0x1
    7764:	ldr	x0, [sp, #112]
    7768:	sub	x10, x20, #0x1
    776c:	sub	x24, x24, #0x8
    7770:	str	x10, [x0], #-8
    7774:	str	x0, [sp, #112]
    7778:	ldr	w0, [sp, #136]
    777c:	ldur	x13, [x24, #-8]
    7780:	cmp	w26, w0
    7784:	b.lt	77e8 <_gcry_mpih_divrem+0x180>  // b.tstop
    7788:	ldr	x0, [sp, #144]
    778c:	cmp	x25, x13
    7790:	mov	x20, #0xffffffffffffffff    	// #-1
    7794:	add	x27, x0, x24
    7798:	ldur	x12, [x24, #-8]
    779c:	b.ne	78bc <_gcry_mpih_divrem+0x254>  // b.any
    77a0:	mov	x3, x20
    77a4:	mov	w2, w19
    77a8:	mov	x1, x23
    77ac:	mov	x0, x27
    77b0:	str	x12, [sp, #120]
    77b4:	bl	72e0 <_gcry_mpih_submul_1>
    77b8:	ldr	x12, [sp, #120]
    77bc:	cmp	x12, x0
    77c0:	b.ne	774c <_gcry_mpih_divrem+0xe4>  // b.any
    77c4:	ldr	x0, [sp, #112]
    77c8:	sub	w26, w26, #0x1
    77cc:	sub	x24, x24, #0x8
    77d0:	str	x20, [x0], #-8
    77d4:	str	x0, [sp, #112]
    77d8:	ldr	w0, [sp, #136]
    77dc:	ldur	x13, [x24, #-8]
    77e0:	cmp	w26, w0
    77e4:	b.ge	7788 <_gcry_mpih_divrem+0x120>  // b.tcont
    77e8:	ldr	x0, [sp, #184]
    77ec:	cmn	w26, #0x1
    77f0:	add	x24, x27, x0
    77f4:	b.eq	789c <_gcry_mpih_divrem+0x234>  // b.none
    77f8:	add	x0, x27, #0x8
    77fc:	sxtw	x26, w26
    7800:	str	x0, [sp, #112]
    7804:	and	x0, x25, #0xffffffff
    7808:	str	x0, [sp, #136]
    780c:	and	x0, x28, #0xffffffff
    7810:	str	x0, [sp, #144]
    7814:	nop
    7818:	ldr	w1, [sp, #132]
    781c:	ldr	x11, [x24]
    7820:	sxtw	x0, w1
    7824:	tbnz	w1, #31, 783c <_gcry_mpih_divrem+0x1d4>
    7828:	ldr	x2, [sp, #112]
    782c:	ldr	x1, [x27, x0, lsl #3]
    7830:	str	x1, [x2, x0, lsl #3]
    7834:	sub	x0, x0, #0x1
    7838:	tbz	w0, #31, 7828 <_gcry_mpih_divrem+0x1c0>
    783c:	str	xzr, [x27]
    7840:	cmp	x25, x13
    7844:	mov	x20, #0xffffffffffffffff    	// #-1
    7848:	b.ne	7e5c <_gcry_mpih_divrem+0x7f4>  // b.any
    784c:	mov	x3, x20
    7850:	mov	w2, w19
    7854:	mov	x1, x23
    7858:	mov	x0, x27
    785c:	str	x11, [sp, #120]
    7860:	bl	72e0 <_gcry_mpih_submul_1>
    7864:	ldr	x11, [sp, #120]
    7868:	cmp	x0, x11
    786c:	b.eq	7e44 <_gcry_mpih_divrem+0x7dc>  // b.none
    7870:	mov	w3, w19
    7874:	mov	x2, x23
    7878:	mov	x1, x27
    787c:	mov	x0, x27
    7880:	bl	7370 <_gcry_mpih_add_n>
    7884:	ldr	x0, [sp, #104]
    7888:	sub	x10, x20, #0x1
    788c:	str	x10, [x0, x26, lsl #3]
    7890:	sub	x26, x26, #0x1
    7894:	ldr	x13, [x24]
    7898:	tbz	w26, #31, 7818 <_gcry_mpih_divrem+0x1b0>
    789c:	ldp	x19, x20, [sp, #16]
    78a0:	ldp	x21, x22, [sp, #32]
    78a4:	ldp	x23, x24, [sp, #48]
    78a8:	ldp	x25, x26, [sp, #64]
    78ac:	ldp	x27, x28, [sp, #80]
    78b0:	ldr	x0, [sp, #168]
    78b4:	ldp	x29, x30, [sp], #192
    78b8:	ret
    78bc:	udiv	x10, x13, x21
    78c0:	ldr	x1, [sp, #160]
    78c4:	ldur	x2, [x24, #-16]
    78c8:	msub	x0, x10, x21, x13
    78cc:	mul	x1, x1, x10
    78d0:	extr	x0, x0, x2, #32
    78d4:	cmp	x1, x0
    78d8:	b.ls	78ec <_gcry_mpih_divrem+0x284>  // b.plast
    78dc:	adds	x0, x25, x0
    78e0:	ccmp	x1, x0, #0x0, cc  // cc = lo, ul, last
    78e4:	b.hi	8000 <_gcry_mpih_divrem+0x998>  // b.pmore
    78e8:	add	x10, x10, x20
    78ec:	sub	x0, x0, x1
    78f0:	ldr	x3, [sp, #160]
    78f4:	udiv	x1, x0, x21
    78f8:	msub	x0, x1, x21, x0
    78fc:	mul	x3, x3, x1
    7900:	bfi	x2, x0, #32, #32
    7904:	cmp	x3, x2
    7908:	b.ls	791c <_gcry_mpih_divrem+0x2b4>  // b.plast
    790c:	adds	x2, x25, x2
    7910:	ccmp	x3, x2, #0x0, cc  // cc = lo, ul, last
    7914:	b.hi	7ff4 <_gcry_mpih_divrem+0x98c>  // b.pmore
    7918:	sub	x1, x1, #0x1
    791c:	orr	x20, x1, x10, lsl #32
    7920:	sub	x2, x2, x3
    7924:	ldr	x1, [sp, #152]
    7928:	and	x0, x20, #0xffffffff
    792c:	ldr	x4, [sp, #176]
    7930:	lsr	x3, x20, #32
    7934:	mul	x14, x1, x0
    7938:	mov	x13, #0x100000000           	// #4294967296
    793c:	mul	x0, x4, x0
    7940:	madd	x15, x3, x4, x14
    7944:	mul	x3, x1, x3
    7948:	and	x1, x0, #0xffffffff
    794c:	add	x0, x15, x0, lsr #32
    7950:	add	x13, x3, x13
    7954:	cmp	x14, x0
    7958:	csel	x3, x13, x3, hi  // hi = pmore
    795c:	add	x1, x1, x0, lsl #32
    7960:	add	x0, x3, x0, lsr #32
    7964:	b	7970 <_gcry_mpih_divrem+0x308>
    7968:	subs	x1, x1, x28
    796c:	sbc	x0, x0, xzr
    7970:	cmp	x0, x2
    7974:	b.hi	7988 <_gcry_mpih_divrem+0x320>  // b.pmore
    7978:	b.ne	77a0 <_gcry_mpih_divrem+0x138>  // b.any
    797c:	ldur	x3, [x24, #-24]
    7980:	cmp	x3, x1
    7984:	b.cs	77a0 <_gcry_mpih_divrem+0x138>  // b.hs, b.nlast
    7988:	adds	x2, x2, x25
    798c:	sub	x20, x20, #0x1
    7990:	b.cc	7968 <_gcry_mpih_divrem+0x300>  // b.lo, b.ul, b.last
    7994:	b	77a0 <_gcry_mpih_divrem+0x138>
    7998:	mov	x0, #0xfffffffffffffff0    	// #-16
    799c:	str	xzr, [sp, #168]
    79a0:	add	x0, x0, w3, sxtw #3
    79a4:	add	x7, x2, x0
    79a8:	ldp	x4, x5, [x4]
    79ac:	ldr	x15, [x2, x0]
    79b0:	ldr	x2, [x7, #8]
    79b4:	cmp	x5, x2
    79b8:	b.ls	7f64 <_gcry_mpih_divrem+0x8fc>  // b.plast
    79bc:	add	w9, w21, w20
    79c0:	subs	w9, w9, #0x3
    79c4:	b.mi	7c5c <_gcry_mpih_divrem+0x5f4>  // b.first
    79c8:	cmp	w20, w9
    79cc:	lsr	x3, x5, #32
    79d0:	lsr	x6, x4, #32
    79d4:	b.gt	7b24 <_gcry_mpih_divrem+0x4bc>
    79d8:	ldr	x0, [sp, #104]
    79dc:	cmp	w20, #0x0
    79e0:	csel	w20, w20, wzr, ge  // ge = tcont
    79e4:	and	x13, x5, #0xffffffff
    79e8:	and	x12, x4, #0xffffffff
    79ec:	neg	x17, x4
    79f0:	add	x11, x0, w9, sxtw #3
    79f4:	mov	x14, #0x100000000           	// #4294967296
    79f8:	mov	x16, #0xffffffffffffffff    	// #-1
    79fc:	b	7a30 <_gcry_mpih_divrem+0x3c8>
    7a00:	adds	x2, x15, x5
    7a04:	mov	x0, x2
    7a08:	b.cc	7c78 <_gcry_mpih_divrem+0x610>  // b.lo, b.ul, b.last
    7a0c:	str	x16, [x11]
    7a10:	adds	x1, x4, x10
    7a14:	sub	x2, x2, x4
    7a18:	sub	w9, w9, #0x1
    7a1c:	cinc	x2, x2, cs  // cs = hs, nlast
    7a20:	mov	x15, x1
    7a24:	sub	x11, x11, #0x8
    7a28:	cmp	w9, w20
    7a2c:	b.lt	7b1c <_gcry_mpih_divrem+0x4b4>  // b.tstop
    7a30:	cmp	x5, x2
    7a34:	ldr	x10, [x7, #-8]!
    7a38:	b.eq	7a00 <_gcry_mpih_divrem+0x398>  // b.none
    7a3c:	udiv	x18, x2, x3
    7a40:	msub	x2, x18, x3, x2
    7a44:	mul	x0, x13, x18
    7a48:	extr	x8, x2, x15, #32
    7a4c:	cmp	x0, x8
    7a50:	b.ls	7a68 <_gcry_mpih_divrem+0x400>  // b.plast
    7a54:	adds	x8, x5, x8
    7a58:	sub	x1, x18, #0x1
    7a5c:	ccmp	x0, x8, #0x0, cc  // cc = lo, ul, last
    7a60:	b.hi	7fe8 <_gcry_mpih_divrem+0x980>  // b.pmore
    7a64:	mov	x18, x1
    7a68:	sub	x8, x8, x0
    7a6c:	mov	x1, x15
    7a70:	udiv	x2, x8, x3
    7a74:	msub	x8, x2, x3, x8
    7a78:	mul	x0, x13, x2
    7a7c:	bfi	x1, x8, #32, #32
    7a80:	cmp	x0, x1
    7a84:	b.ls	7a9c <_gcry_mpih_divrem+0x434>  // b.plast
    7a88:	adds	x1, x5, x1
    7a8c:	sub	x8, x2, #0x1
    7a90:	ccmp	x0, x1, #0x0, cc  // cc = lo, ul, last
    7a94:	b.hi	7fdc <_gcry_mpih_divrem+0x974>  // b.pmore
    7a98:	mov	x2, x8
    7a9c:	orr	x8, x2, x18, lsl #32
    7aa0:	sub	x0, x1, x0
    7aa4:	and	x2, x8, #0xffffffff
    7aa8:	lsr	x15, x8, #32
    7aac:	mul	x18, x6, x2
    7ab0:	madd	x21, x15, x12, x18
    7ab4:	mul	x2, x12, x2
    7ab8:	mul	x15, x6, x15
    7abc:	and	x1, x2, #0xffffffff
    7ac0:	add	x2, x21, x2, lsr #32
    7ac4:	add	x21, x15, x14
    7ac8:	cmp	x18, x2
    7acc:	csel	x15, x21, x15, hi  // hi = pmore
    7ad0:	add	x1, x1, x2, lsl #32
    7ad4:	add	x2, x15, x2, lsr #32
    7ad8:	cmp	x2, x0
    7adc:	b.hi	7ae8 <_gcry_mpih_divrem+0x480>  // b.pmore
    7ae0:	ccmp	x1, x10, #0x0, eq  // eq = none
    7ae4:	b.ls	7b00 <_gcry_mpih_divrem+0x498>  // b.plast
    7ae8:	cmp	x1, x4
    7aec:	sub	x8, x8, #0x1
    7af0:	sbc	x2, x2, xzr
    7af4:	sub	x1, x1, x4
    7af8:	adds	x0, x0, x5
    7afc:	b.cc	7ad8 <_gcry_mpih_divrem+0x470>  // b.lo, b.ul, b.last
    7b00:	str	x8, [x11]
    7b04:	subs	x15, x10, x1
    7b08:	sub	w9, w9, #0x1
    7b0c:	sbc	x2, x0, x2
    7b10:	sub	x11, x11, #0x8
    7b14:	cmp	w9, w20
    7b18:	b.ge	7a30 <_gcry_mpih_divrem+0x3c8>  // b.tcont
    7b1c:	cmn	w9, #0x1
    7b20:	b.eq	7c5c <_gcry_mpih_divrem+0x5f4>  // b.none
    7b24:	sxtw	x9, w9
    7b28:	and	x11, x5, #0xffffffff
    7b2c:	and	x10, x4, #0xffffffff
    7b30:	neg	x14, x4
    7b34:	mov	x12, #0x100000000           	// #4294967296
    7b38:	mov	x13, #0xffffffffffffffff    	// #-1
    7b3c:	b	7b64 <_gcry_mpih_divrem+0x4fc>
    7b40:	adds	x2, x15, x5
    7b44:	mov	x1, x2
    7b48:	b.cc	7f3c <_gcry_mpih_divrem+0x8d4>  // b.lo, b.ul, b.last
    7b4c:	ldr	x0, [sp, #104]
    7b50:	sub	x2, x2, x4
    7b54:	mov	x15, x4
    7b58:	str	x13, [x0, x9, lsl #3]
    7b5c:	sub	x9, x9, #0x1
    7b60:	tbnz	w9, #31, 7c5c <_gcry_mpih_divrem+0x5f4>
    7b64:	str	xzr, [x7]
    7b68:	cmp	x5, x2
    7b6c:	b.eq	7b40 <_gcry_mpih_divrem+0x4d8>  // b.none
    7b70:	udiv	x16, x2, x3
    7b74:	msub	x2, x16, x3, x2
    7b78:	mul	x0, x16, x11
    7b7c:	extr	x8, x2, x15, #32
    7b80:	cmp	x8, x0
    7b84:	b.cs	7b9c <_gcry_mpih_divrem+0x534>  // b.hs, b.nlast
    7b88:	adds	x8, x5, x8
    7b8c:	sub	x1, x16, #0x1
    7b90:	ccmp	x8, x0, #0x2, cc  // cc = lo, ul, last
    7b94:	b.cc	8018 <_gcry_mpih_divrem+0x9b0>  // b.lo, b.ul, b.last
    7b98:	mov	x16, x1
    7b9c:	sub	x8, x8, x0
    7ba0:	mov	x1, x15
    7ba4:	udiv	x0, x8, x3
    7ba8:	msub	x8, x0, x3, x8
    7bac:	mul	x2, x0, x11
    7bb0:	bfi	x1, x8, #32, #32
    7bb4:	cmp	x1, x2
    7bb8:	b.cs	7bd0 <_gcry_mpih_divrem+0x568>  // b.hs, b.nlast
    7bbc:	adds	x1, x5, x1
    7bc0:	sub	x8, x0, #0x1
    7bc4:	ccmp	x1, x2, #0x2, cc  // cc = lo, ul, last
    7bc8:	b.cc	800c <_gcry_mpih_divrem+0x9a4>  // b.lo, b.ul, b.last
    7bcc:	mov	x0, x8
    7bd0:	orr	x16, x0, x16, lsl #32
    7bd4:	sub	x1, x1, x2
    7bd8:	and	x0, x16, #0xffffffff
    7bdc:	lsr	x8, x16, #32
    7be0:	mul	x15, x6, x0
    7be4:	madd	x2, x10, x8, x15
    7be8:	mul	x0, x0, x10
    7bec:	mul	x8, x6, x8
    7bf0:	add	x2, x2, x0, lsr #32
    7bf4:	add	x17, x8, x12
    7bf8:	cmp	x2, x15
    7bfc:	csel	x8, x17, x8, cc  // cc = lo, ul, last
    7c00:	lsl	x15, x2, #32
    7c04:	add	x0, x15, w0, uxtw
    7c08:	add	x2, x8, x2, lsr #32
    7c0c:	nop
    7c10:	cmp	x1, x2
    7c14:	b.cc	7c24 <_gcry_mpih_divrem+0x5bc>  // b.lo, b.ul, b.last
    7c18:	cmp	x0, #0x0
    7c1c:	ccmp	x1, x2, #0x0, ne  // ne = any
    7c20:	b.ne	7c3c <_gcry_mpih_divrem+0x5d4>  // b.any
    7c24:	cmp	x0, x4
    7c28:	sub	x16, x16, #0x1
    7c2c:	sbc	x2, x2, xzr
    7c30:	sub	x0, x0, x4
    7c34:	adds	x1, x5, x1
    7c38:	b.cc	7c10 <_gcry_mpih_divrem+0x5a8>  // b.lo, b.ul, b.last
    7c3c:	sub	x2, x1, x2
    7c40:	negs	x15, x0
    7c44:	ldr	x1, [sp, #104]
    7c48:	cset	x0, ne  // ne = any
    7c4c:	sub	x2, x2, x0
    7c50:	str	x16, [x1, x9, lsl #3]
    7c54:	sub	x9, x9, #0x1
    7c58:	tbz	w9, #31, 7b64 <_gcry_mpih_divrem+0x4fc>
    7c5c:	stp	x15, x2, [x7]
    7c60:	ldp	x19, x20, [sp, #16]
    7c64:	ldp	x21, x22, [sp, #32]
    7c68:	ldp	x23, x24, [sp, #48]
    7c6c:	ldr	x0, [sp, #168]
    7c70:	ldp	x29, x30, [sp], #192
    7c74:	ret
    7c78:	cmp	x4, #0x0
    7c7c:	mov	x1, x17
    7c80:	cset	x2, ne  // ne = any
    7c84:	mov	x8, #0xffffffffffffffff    	// #-1
    7c88:	sub	x2, x4, x2
    7c8c:	b	7ad8 <_gcry_mpih_divrem+0x470>
    7c90:	add	x0, x2, w21, sxtw #3
    7c94:	str	xzr, [sp, #168]
    7c98:	ldr	x7, [x4]
    7c9c:	ldur	x0, [x0, #-8]
    7ca0:	cmp	x7, x0
    7ca4:	b.ls	7f54 <_gcry_mpih_divrem+0x8ec>  // b.plast
    7ca8:	ldr	x1, [sp, #104]
    7cac:	subs	w2, w21, #0x2
    7cb0:	add	x19, x1, w20, sxtw #3
    7cb4:	b.mi	7d60 <_gcry_mpih_divrem+0x6f8>  // b.first
    7cb8:	sxtw	x2, w2
    7cbc:	lsr	x9, x7, #32
    7cc0:	and	x10, x7, #0xffffffff
    7cc4:	b	7ce0 <_gcry_mpih_divrem+0x678>
    7cc8:	mov	x8, x1
    7ccc:	orr	x5, x8, x5, lsl #32
    7cd0:	str	x5, [x19, x2, lsl #3]
    7cd4:	sub	x0, x0, x3
    7cd8:	sub	x2, x2, #0x1
    7cdc:	tbnz	w2, #31, 7d60 <_gcry_mpih_divrem+0x6f8>
    7ce0:	udiv	x5, x0, x9
    7ce4:	ldr	x4, [x6, x2, lsl #3]
    7ce8:	msub	x3, x5, x9, x0
    7cec:	mul	x0, x5, x10
    7cf0:	extr	x3, x3, x4, #32
    7cf4:	cmp	x3, x0
    7cf8:	b.cs	7d10 <_gcry_mpih_divrem+0x6a8>  // b.hs, b.nlast
    7cfc:	adds	x3, x7, x3
    7d00:	sub	x1, x5, #0x1
    7d04:	ccmp	x3, x0, #0x2, cc  // cc = lo, ul, last
    7d08:	b.cc	7e00 <_gcry_mpih_divrem+0x798>  // b.lo, b.ul, b.last
    7d0c:	mov	x5, x1
    7d10:	sub	x3, x3, x0
    7d14:	mov	x0, x4
    7d18:	udiv	x8, x3, x9
    7d1c:	msub	x1, x8, x9, x3
    7d20:	mul	x3, x8, x10
    7d24:	bfi	x0, x1, #32, #32
    7d28:	cmp	x0, x3
    7d2c:	b.cs	7ccc <_gcry_mpih_divrem+0x664>  // b.hs, b.nlast
    7d30:	adds	x0, x7, x0
    7d34:	sub	x1, x8, #0x1
    7d38:	ccmp	x0, x3, #0x2, cc  // cc = lo, ul, last
    7d3c:	b.cs	7cc8 <_gcry_mpih_divrem+0x660>  // b.hs, b.nlast
    7d40:	sub	x8, x8, #0x2
    7d44:	add	x0, x0, x7
    7d48:	orr	x5, x8, x5, lsl #32
    7d4c:	str	x5, [x19, x2, lsl #3]
    7d50:	sub	x0, x0, x3
    7d54:	sub	x2, x2, #0x1
    7d58:	tbz	w2, #31, 7ce0 <_gcry_mpih_divrem+0x678>
    7d5c:	nop
    7d60:	cmp	w20, #0x0
    7d64:	b.le	7e28 <_gcry_mpih_divrem+0x7c0>
    7d68:	sub	w20, w20, #0x1
    7d6c:	sub	x11, x19, #0x10
    7d70:	sub	x2, x19, #0x8
    7d74:	lsr	x5, x7, #32
    7d78:	sub	x11, x11, w20, uxtw #3
    7d7c:	and	x10, x7, #0xffffffff
    7d80:	b	7dc8 <_gcry_mpih_divrem+0x760>
    7d84:	sub	x1, x1, x4
    7d88:	udiv	x9, x1, x5
    7d8c:	msub	x1, x9, x5, x1
    7d90:	mov	x4, x9
    7d94:	mul	x8, x9, x10
    7d98:	lsl	x0, x1, #32
    7d9c:	cmp	x8, x1, lsl #32
    7da0:	b.ls	7db4 <_gcry_mpih_divrem+0x74c>  // b.plast
    7da4:	adds	x0, x0, x7
    7da8:	sub	x4, x9, #0x1
    7dac:	ccmp	x8, x0, #0x0, cc  // cc = lo, ul, last
    7db0:	b.hi	7e0c <_gcry_mpih_divrem+0x7a4>  // b.pmore
    7db4:	orr	x3, x4, x3, lsl #32
    7db8:	str	x3, [x2], #-8
    7dbc:	sub	x0, x0, x8
    7dc0:	cmp	x11, x2
    7dc4:	b.eq	7e28 <_gcry_mpih_divrem+0x7c0>  // b.none
    7dc8:	udiv	x8, x0, x5
    7dcc:	msub	x0, x8, x5, x0
    7dd0:	mov	x3, x8
    7dd4:	mul	x4, x8, x10
    7dd8:	lsl	x1, x0, #32
    7ddc:	cmp	x4, x0, lsl #32
    7de0:	b.ls	7d84 <_gcry_mpih_divrem+0x71c>  // b.plast
    7de4:	adds	x1, x7, x1
    7de8:	sub	x3, x8, #0x1
    7dec:	ccmp	x1, x4, #0x2, cc  // cc = lo, ul, last
    7df0:	b.cs	7d84 <_gcry_mpih_divrem+0x71c>  // b.hs, b.nlast
    7df4:	sub	x3, x8, #0x2
    7df8:	add	x1, x1, x7
    7dfc:	b	7d84 <_gcry_mpih_divrem+0x71c>
    7e00:	sub	x5, x5, #0x2
    7e04:	add	x3, x3, x7
    7e08:	b	7d10 <_gcry_mpih_divrem+0x6a8>
    7e0c:	sub	x4, x9, #0x2
    7e10:	add	x0, x0, x7
    7e14:	orr	x3, x4, x3, lsl #32
    7e18:	str	x3, [x2], #-8
    7e1c:	sub	x0, x0, x8
    7e20:	cmp	x11, x2
    7e24:	b.ne	7dc8 <_gcry_mpih_divrem+0x760>  // b.any
    7e28:	str	x0, [x6]
    7e2c:	ldp	x19, x20, [sp, #16]
    7e30:	ldp	x21, x22, [sp, #32]
    7e34:	ldp	x23, x24, [sp, #48]
    7e38:	ldr	x0, [sp, #168]
    7e3c:	ldp	x29, x30, [sp], #192
    7e40:	ret
    7e44:	ldr	x0, [sp, #104]
    7e48:	str	x20, [x0, x26, lsl #3]
    7e4c:	sub	x26, x26, #0x1
    7e50:	ldr	x13, [x24]
    7e54:	tbz	w26, #31, 7818 <_gcry_mpih_divrem+0x1b0>
    7e58:	b	789c <_gcry_mpih_divrem+0x234>
    7e5c:	udiv	x10, x13, x21
    7e60:	ldr	x1, [sp, #136]
    7e64:	ldr	x2, [x24]
    7e68:	msub	x0, x10, x21, x13
    7e6c:	mul	x1, x10, x1
    7e70:	extr	x0, x0, x2, #32
    7e74:	cmp	x0, x1
    7e78:	b.cs	7e8c <_gcry_mpih_divrem+0x824>  // b.hs, b.nlast
    7e7c:	adds	x0, x25, x0
    7e80:	ccmp	x0, x1, #0x2, cc  // cc = lo, ul, last
    7e84:	b.cc	8030 <_gcry_mpih_divrem+0x9c8>  // b.lo, b.ul, b.last
    7e88:	sub	x10, x10, #0x1
    7e8c:	sub	x0, x0, x1
    7e90:	ldr	x3, [sp, #136]
    7e94:	udiv	x1, x0, x21
    7e98:	msub	x0, x1, x21, x0
    7e9c:	mul	x3, x1, x3
    7ea0:	bfi	x2, x0, #32, #32
    7ea4:	cmp	x2, x3
    7ea8:	b.cs	7ebc <_gcry_mpih_divrem+0x854>  // b.hs, b.nlast
    7eac:	adds	x2, x25, x2
    7eb0:	ccmp	x2, x3, #0x2, cc  // cc = lo, ul, last
    7eb4:	b.cc	8024 <_gcry_mpih_divrem+0x9bc>  // b.lo, b.ul, b.last
    7eb8:	sub	x1, x1, #0x1
    7ebc:	orr	x20, x1, x10, lsl #32
    7ec0:	sub	x2, x2, x3
    7ec4:	ldp	x1, x4, [sp, #144]
    7ec8:	and	x0, x20, #0xffffffff
    7ecc:	lsr	x3, x20, #32
    7ed0:	mov	x12, #0x100000000           	// #4294967296
    7ed4:	mul	x13, x4, x0
    7ed8:	mul	x0, x0, x1
    7edc:	madd	x1, x1, x3, x13
    7ee0:	mul	x3, x4, x3
    7ee4:	add	x1, x1, x0, lsr #32
    7ee8:	add	x12, x3, x12
    7eec:	cmp	x1, x13
    7ef0:	csel	x3, x12, x3, cc  // cc = lo, ul, last
    7ef4:	lsl	x13, x1, #32
    7ef8:	add	x0, x13, w0, uxtw
    7efc:	add	x1, x3, x1, lsr #32
    7f00:	b	7f14 <_gcry_mpih_divrem+0x8ac>
    7f04:	cmp	x28, x0
    7f08:	sub	x0, x0, x28
    7f0c:	cset	x3, hi  // hi = pmore
    7f10:	sub	x1, x1, x3
    7f14:	cmp	x2, x1
    7f18:	b.cc	7f2c <_gcry_mpih_divrem+0x8c4>  // b.lo, b.ul, b.last
    7f1c:	b.ne	784c <_gcry_mpih_divrem+0x1e4>  // b.any
    7f20:	ldr	x3, [x27, x22]
    7f24:	cmp	x3, x0
    7f28:	b.cs	784c <_gcry_mpih_divrem+0x1e4>  // b.hs, b.nlast
    7f2c:	adds	x2, x25, x2
    7f30:	sub	x20, x20, #0x1
    7f34:	b.cc	7f04 <_gcry_mpih_divrem+0x89c>  // b.lo, b.ul, b.last
    7f38:	b	784c <_gcry_mpih_divrem+0x1e4>
    7f3c:	cmp	x4, #0x0
    7f40:	mov	x0, x14
    7f44:	cset	x2, ne  // ne = any
    7f48:	mov	x16, #0xffffffffffffffff    	// #-1
    7f4c:	sub	x2, x4, x2
    7f50:	b	7c10 <_gcry_mpih_divrem+0x5a8>
    7f54:	mov	x1, #0x1                   	// #1
    7f58:	sub	x0, x0, x7
    7f5c:	str	x1, [sp, #168]
    7f60:	b	7ca8 <_gcry_mpih_divrem+0x640>
    7f64:	ccmp	x4, x15, #0x0, cs  // cs = hs, nlast
    7f68:	b.hi	79bc <_gcry_mpih_divrem+0x354>  // b.pmore
    7f6c:	subs	x15, x15, x4
    7f70:	mov	x0, #0x1                   	// #1
    7f74:	sbc	x2, x2, x5
    7f78:	str	x0, [sp, #168]
    7f7c:	b	79bc <_gcry_mpih_divrem+0x354>
    7f80:	b.cc	7fb0 <_gcry_mpih_divrem+0x948>  // b.lo, b.ul, b.last
    7f84:	subs	w0, w5, #0x2
    7f88:	b.mi	7fb0 <_gcry_mpih_divrem+0x948>  // b.first
    7f8c:	sxtw	x0, w0
    7f90:	b	7f9c <_gcry_mpih_divrem+0x934>
    7f94:	sub	x0, x0, #0x1
    7f98:	tbnz	w0, #31, 7fb0 <_gcry_mpih_divrem+0x948>
    7f9c:	ldr	x2, [x27, x0, lsl #3]
    7fa0:	ldr	x1, [x23, x0, lsl #3]
    7fa4:	cmp	x2, x1
    7fa8:	b.eq	7f94 <_gcry_mpih_divrem+0x92c>  // b.none
    7fac:	b.ls	803c <_gcry_mpih_divrem+0x9d4>  // b.plast
    7fb0:	mov	w3, w19
    7fb4:	mov	x2, x23
    7fb8:	mov	x1, x27
    7fbc:	mov	x0, x27
    7fc0:	str	x4, [sp, #112]
    7fc4:	bl	73b8 <_gcry_mpih_sub_n>
    7fc8:	mov	x0, #0x1                   	// #1
    7fcc:	str	x0, [sp, #168]
    7fd0:	ldr	x13, [x24]
    7fd4:	ldr	x4, [sp, #112]
    7fd8:	b	76e4 <_gcry_mpih_divrem+0x7c>
    7fdc:	sub	x2, x2, #0x2
    7fe0:	add	x1, x1, x5
    7fe4:	b	7a9c <_gcry_mpih_divrem+0x434>
    7fe8:	sub	x18, x18, #0x2
    7fec:	add	x8, x8, x5
    7ff0:	b	7a68 <_gcry_mpih_divrem+0x400>
    7ff4:	sub	x1, x1, #0x2
    7ff8:	add	x2, x2, x25
    7ffc:	b	791c <_gcry_mpih_divrem+0x2b4>
    8000:	sub	x10, x10, #0x2
    8004:	add	x0, x0, x25
    8008:	b	78ec <_gcry_mpih_divrem+0x284>
    800c:	sub	x0, x0, #0x2
    8010:	add	x1, x1, x5
    8014:	b	7bd0 <_gcry_mpih_divrem+0x568>
    8018:	sub	x16, x16, #0x2
    801c:	add	x8, x8, x5
    8020:	b	7b9c <_gcry_mpih_divrem+0x534>
    8024:	sub	x1, x1, #0x2
    8028:	add	x2, x2, x25
    802c:	b	7ebc <_gcry_mpih_divrem+0x854>
    8030:	sub	x10, x10, #0x2
    8034:	add	x0, x0, x25
    8038:	b	7e8c <_gcry_mpih_divrem+0x824>
    803c:	str	xzr, [sp, #168]
    8040:	b	76e4 <_gcry_mpih_divrem+0x7c>
    8044:	adrp	x0, 0 <_gcry_mpi_alloc>
    8048:	ldr	x0, [x0]
    804c:	bl	0 <grub_fatal>
	...

0000000000008058 <_gcry_mpih_divmod_1>:
    8058:	mov	x6, x0
    805c:	mov	x0, #0x0                   	// #0
    8060:	cbz	w2, 8208 <_gcry_mpih_divmod_1+0x1b0>
    8064:	cmp	xzr, x3, lsr #56
    8068:	lsr	x4, x3, #56
    806c:	b.ne	830c <_gcry_mpih_divmod_1+0x2b4>  // b.any
    8070:	tst	x3, #0xff000000000000
    8074:	lsr	x4, x3, #48
    8078:	b.ne	8314 <_gcry_mpih_divmod_1+0x2bc>  // b.any
    807c:	tst	x3, #0xff0000000000
    8080:	lsr	x4, x3, #40
    8084:	b.ne	82dc <_gcry_mpih_divmod_1+0x284>  // b.any
    8088:	tst	x3, #0xff00000000
    808c:	lsr	x4, x3, #32
    8090:	b.ne	831c <_gcry_mpih_divmod_1+0x2c4>  // b.any
    8094:	tst	x3, #0xff000000
    8098:	lsr	x4, x3, #24
    809c:	b.ne	82ec <_gcry_mpih_divmod_1+0x294>  // b.any
    80a0:	tst	x3, #0xff0000
    80a4:	lsr	x4, x3, #16
    80a8:	b.ne	8324 <_gcry_mpih_divmod_1+0x2cc>  // b.any
    80ac:	tst	x3, #0xff00
    80b0:	lsr	x4, x3, #8
    80b4:	mov	w5, #0x8                   	// #8
    80b8:	b.ne	82e0 <_gcry_mpih_divmod_1+0x288>  // b.any
    80bc:	mov	x4, x3
    80c0:	mov	w0, #0x40                  	// #64
    80c4:	adrp	x5, 0 <_gcry_mpi_alloc>
    80c8:	ldr	x5, [x5]
    80cc:	ldrb	w4, [x5, x4]
    80d0:	subs	w0, w0, w4
    80d4:	b.eq	8218 <_gcry_mpih_divmod_1+0x1c0>  // b.none
    80d8:	add	x4, x1, w2, sxtw #3
    80dc:	lsl	x5, x3, x0
    80e0:	mov	w13, #0x40                  	// #64
    80e4:	sub	w13, w13, w0
    80e8:	subs	w7, w2, #0x2
    80ec:	lsr	x10, x5, #32
    80f0:	ldur	x3, [x4, #-8]
    80f4:	and	x11, x5, #0xffffffff
    80f8:	lsr	x2, x3, x13
    80fc:	b.mi	8198 <_gcry_mpih_divmod_1+0x140>  // b.first
    8100:	sxtw	x7, w7
    8104:	add	x15, x6, #0x8
    8108:	b	8154 <_gcry_mpih_divmod_1+0xfc>
    810c:	sub	x8, x8, #0x1
    8110:	sub	x4, x4, x9
    8114:	udiv	x9, x4, x10
    8118:	msub	x4, x9, x10, x4
    811c:	sub	x14, x9, #0x1
    8120:	mul	x12, x9, x11
    8124:	bfi	x2, x4, #32, #32
    8128:	cmp	x2, x12
    812c:	b.cs	8140 <_gcry_mpih_divmod_1+0xe8>  // b.hs, b.nlast
    8130:	adds	x2, x5, x2
    8134:	ccmp	x2, x12, #0x2, cc  // cc = lo, ul, last
    8138:	b.cc	820c <_gcry_mpih_divmod_1+0x1b4>  // b.lo, b.ul, b.last
    813c:	mov	x9, x14
    8140:	orr	x8, x9, x8, lsl #32
    8144:	str	x8, [x15, x7, lsl #3]
    8148:	sub	x2, x2, x12
    814c:	sub	x7, x7, #0x1
    8150:	tbnz	w7, #31, 8198 <_gcry_mpih_divmod_1+0x140>
    8154:	udiv	x8, x2, x10
    8158:	mov	x9, x3
    815c:	ldr	x3, [x1, x7, lsl #3]
    8160:	lsl	x9, x9, x0
    8164:	msub	x4, x8, x10, x2
    8168:	lsr	x2, x3, x13
    816c:	orr	x2, x2, x9
    8170:	mul	x9, x8, x11
    8174:	extr	x4, x4, x2, #32
    8178:	cmp	x4, x9
    817c:	b.cs	8110 <_gcry_mpih_divmod_1+0xb8>  // b.hs, b.nlast
    8180:	adds	x4, x5, x4
    8184:	ccmp	x4, x9, #0x2, cc  // cc = lo, ul, last
    8188:	b.cs	810c <_gcry_mpih_divmod_1+0xb4>  // b.hs, b.nlast
    818c:	sub	x8, x8, #0x2
    8190:	add	x4, x4, x5
    8194:	b	8110 <_gcry_mpih_divmod_1+0xb8>
    8198:	udiv	x1, x2, x10
    819c:	lsl	x3, x3, x0
    81a0:	msub	x2, x1, x10, x2
    81a4:	mul	x4, x1, x11
    81a8:	extr	x2, x2, x3, #32
    81ac:	cmp	x4, x2
    81b0:	b.ls	81c8 <_gcry_mpih_divmod_1+0x170>  // b.plast
    81b4:	adds	x2, x2, x5
    81b8:	sub	x7, x1, #0x1
    81bc:	ccmp	x4, x2, #0x0, cc  // cc = lo, ul, last
    81c0:	b.hi	82f4 <_gcry_mpih_divmod_1+0x29c>  // b.pmore
    81c4:	mov	x1, x7
    81c8:	sub	x2, x2, x4
    81cc:	udiv	x4, x2, x10
    81d0:	msub	x2, x4, x10, x2
    81d4:	mul	x11, x4, x11
    81d8:	bfi	x3, x2, #32, #32
    81dc:	cmp	x11, x3
    81e0:	b.ls	81f8 <_gcry_mpih_divmod_1+0x1a0>  // b.plast
    81e4:	adds	x3, x3, x5
    81e8:	sub	x2, x4, #0x1
    81ec:	ccmp	x11, x3, #0x0, cc  // cc = lo, ul, last
    81f0:	b.hi	8300 <_gcry_mpih_divmod_1+0x2a8>  // b.pmore
    81f4:	mov	x4, x2
    81f8:	sub	x3, x3, x11
    81fc:	orr	x1, x4, x1, lsl #32
    8200:	str	x1, [x6]
    8204:	lsr	x0, x3, x0
    8208:	ret
    820c:	sub	x9, x9, #0x2
    8210:	add	x2, x2, x5
    8214:	b	8140 <_gcry_mpih_divmod_1+0xe8>
    8218:	sub	w8, w2, #0x1
    821c:	sxtw	x4, w8
    8220:	ldr	x0, [x1, x4, lsl #3]
    8224:	cmp	x0, x3
    8228:	b.cc	82c4 <_gcry_mpih_divmod_1+0x26c>  // b.lo, b.ul, b.last
    822c:	mov	x0, #0x0                   	// #0
    8230:	tbnz	w8, #31, 8208 <_gcry_mpih_divmod_1+0x1b0>
    8234:	sxtw	x8, w8
    8238:	lsr	x10, x3, #32
    823c:	and	x11, x3, #0xffffffff
    8240:	b	8290 <_gcry_mpih_divmod_1+0x238>
    8244:	sub	x7, x7, #0x1
    8248:	sub	x2, x2, x0
    824c:	mov	x0, x5
    8250:	udiv	x9, x2, x10
    8254:	msub	x4, x9, x10, x2
    8258:	sub	x12, x9, #0x1
    825c:	mul	x2, x9, x11
    8260:	bfi	x0, x4, #32, #32
    8264:	cmp	x0, x2
    8268:	b.cs	827c <_gcry_mpih_divmod_1+0x224>  // b.hs, b.nlast
    826c:	adds	x0, x3, x0
    8270:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
    8274:	b.cc	82d0 <_gcry_mpih_divmod_1+0x278>  // b.lo, b.ul, b.last
    8278:	mov	x9, x12
    827c:	orr	x7, x9, x7, lsl #32
    8280:	str	x7, [x6, x8, lsl #3]
    8284:	sub	x0, x0, x2
    8288:	sub	x8, x8, #0x1
    828c:	tbnz	w8, #31, 8208 <_gcry_mpih_divmod_1+0x1b0>
    8290:	udiv	x7, x0, x10
    8294:	ldr	x5, [x1, x8, lsl #3]
    8298:	msub	x2, x7, x10, x0
    829c:	mul	x0, x7, x11
    82a0:	extr	x2, x2, x5, #32
    82a4:	cmp	x2, x0
    82a8:	b.cs	8248 <_gcry_mpih_divmod_1+0x1f0>  // b.hs, b.nlast
    82ac:	adds	x2, x3, x2
    82b0:	ccmp	x2, x0, #0x2, cc  // cc = lo, ul, last
    82b4:	b.cs	8244 <_gcry_mpih_divmod_1+0x1ec>  // b.hs, b.nlast
    82b8:	sub	x7, x7, #0x2
    82bc:	add	x2, x2, x3
    82c0:	b	8248 <_gcry_mpih_divmod_1+0x1f0>
    82c4:	sub	w8, w2, #0x2
    82c8:	str	xzr, [x6, x4, lsl #3]
    82cc:	b	8230 <_gcry_mpih_divmod_1+0x1d8>
    82d0:	sub	x9, x9, #0x2
    82d4:	add	x0, x0, x3
    82d8:	b	827c <_gcry_mpih_divmod_1+0x224>
    82dc:	mov	w5, #0x28                  	// #40
    82e0:	mov	w0, #0x40                  	// #64
    82e4:	sub	w0, w0, w5
    82e8:	b	80c4 <_gcry_mpih_divmod_1+0x6c>
    82ec:	mov	w5, #0x18                  	// #24
    82f0:	b	82e0 <_gcry_mpih_divmod_1+0x288>
    82f4:	sub	x1, x1, #0x2
    82f8:	add	x2, x2, x5
    82fc:	b	81c8 <_gcry_mpih_divmod_1+0x170>
    8300:	sub	x4, x4, #0x2
    8304:	add	x3, x3, x5
    8308:	b	81f8 <_gcry_mpih_divmod_1+0x1a0>
    830c:	mov	w5, #0x38                  	// #56
    8310:	b	82e0 <_gcry_mpih_divmod_1+0x288>
    8314:	mov	w5, #0x30                  	// #48
    8318:	b	82e0 <_gcry_mpih_divmod_1+0x288>
    831c:	mov	w5, #0x20                  	// #32
    8320:	b	82e0 <_gcry_mpih_divmod_1+0x288>
    8324:	mov	w5, #0x10                  	// #16
    8328:	b	82e0 <_gcry_mpih_divmod_1+0x288>
    832c:	nop
	...

0000000000008338 <do_get_buffer>:
    8338:	stp	x29, x30, [sp, #-48]!
    833c:	mov	x29, sp
    8340:	stp	x19, x20, [sp, #16]
    8344:	mov	x19, x1
    8348:	str	x21, [sp, #32]
    834c:	mov	x21, x0
    8350:	cbz	x2, 835c <do_get_buffer+0x24>
    8354:	ldr	w0, [x0, #8]
    8358:	str	w0, [x2]
    835c:	ldr	w1, [x21, #4]
    8360:	lsl	w1, w1, #3
    8364:	str	w1, [x19]
    8368:	cmp	w1, #0x0
    836c:	csinc	w1, w1, wzr, ne  // ne = any
    8370:	mov	w0, w1
    8374:	cbnz	w3, 8380 <do_get_buffer+0x48>
    8378:	ldr	w1, [x21, #12]
    837c:	tbz	w1, #0, 8444 <do_get_buffer+0x10c>
    8380:	bl	99b0 <gcry_malloc_secure>
    8384:	mov	x20, x0
    8388:	cbz	x20, 8430 <do_get_buffer+0xf8>
    838c:	ldr	w4, [x21, #4]
    8390:	subs	w4, w4, #0x1
    8394:	b.mi	83f4 <do_get_buffer+0xbc>  // b.first
    8398:	ldr	x1, [x21, #16]
    839c:	sxtw	x4, w4
    83a0:	mov	x2, x20
    83a4:	nop
    83a8:	ldr	x3, [x1, x4, lsl #3]
    83ac:	add	x2, x2, #0x8
    83b0:	sub	x4, x4, #0x1
    83b4:	lsr	x11, x3, #56
    83b8:	lsr	x10, x3, #48
    83bc:	lsr	x9, x3, #40
    83c0:	lsr	x8, x3, #32
    83c4:	lsr	x7, x3, #24
    83c8:	lsr	x6, x3, #16
    83cc:	lsr	x5, x3, #8
    83d0:	sturb	w11, [x2, #-8]
    83d4:	sturb	w10, [x2, #-7]
    83d8:	sturb	w9, [x2, #-6]
    83dc:	sturb	w8, [x2, #-5]
    83e0:	sturb	w7, [x2, #-4]
    83e4:	sturb	w6, [x2, #-3]
    83e8:	sturb	w5, [x2, #-2]
    83ec:	sturb	w3, [x2, #-1]
    83f0:	tbz	w4, #31, 83a8 <do_get_buffer+0x70>
    83f4:	ldr	w2, [x19]
    83f8:	mov	x1, x20
    83fc:	cbnz	w2, 8414 <do_get_buffer+0xdc>
    8400:	b	8430 <do_get_buffer+0xf8>
    8404:	sub	w2, w2, #0x1
    8408:	str	w2, [x19]
    840c:	add	x1, x1, #0x1
    8410:	cbz	w2, 841c <do_get_buffer+0xe4>
    8414:	ldrb	w3, [x1]
    8418:	cbz	w3, 8404 <do_get_buffer+0xcc>
    841c:	cmp	x20, x1
    8420:	b.eq	8430 <do_get_buffer+0xf8>  // b.none
    8424:	mov	w2, w2
    8428:	mov	x0, x20
    842c:	bl	0 <grub_memmove>
    8430:	mov	x0, x20
    8434:	ldp	x19, x20, [sp, #16]
    8438:	ldr	x21, [sp, #32]
    843c:	ldp	x29, x30, [sp], #48
    8440:	ret
    8444:	bl	99a8 <gcry_malloc>
    8448:	mov	x20, x0
    844c:	b	8388 <do_get_buffer+0x50>

0000000000008450 <gcry_mpi_dump>:
    8450:	stp	x29, x30, [sp, #-64]!
    8454:	adrp	x1, 0 <_gcry_mpi_alloc>
    8458:	mov	x29, sp
    845c:	stp	x21, x22, [sp, #32]
    8460:	mov	x21, x0
    8464:	ldr	x0, [x1]
    8468:	bl	9ac0 <_gcry_log_printf>
    846c:	cbz	x21, 8518 <gcry_mpi_dump+0xc8>
    8470:	ldr	w0, [x21, #8]
    8474:	stp	x19, x20, [sp, #16]
    8478:	cbnz	w0, 84f0 <gcry_mpi_dump+0xa0>
    847c:	ldr	w19, [x21, #4]
    8480:	cmp	w19, #0x0
    8484:	b.le	84dc <gcry_mpi_dump+0x8c>
    8488:	adrp	x0, 0 <_gcry_mpi_alloc>
    848c:	mov	x20, #0xfffffffffffffff8    	// #-8
    8490:	add	x20, x20, w19, sxtw #3
    8494:	str	x23, [sp, #48]
    8498:	ldr	x22, [x0]
    849c:	adrp	x23, 0 <_gcry_mpi_alloc>
    84a0:	mov	x0, x22
    84a4:	b	84b8 <gcry_mpi_dump+0x68>
    84a8:	ldr	x1, [x23]
    84ac:	ldr	w2, [x21, #4]
    84b0:	cmp	w2, w19
    84b4:	csel	x0, x0, x1, eq  // eq = none
    84b8:	ldr	x1, [x21, #16]
    84bc:	ldr	x1, [x1, x20]
    84c0:	sub	x20, x20, #0x8
    84c4:	bl	9ac0 <_gcry_log_printf>
    84c8:	mov	x0, x22
    84cc:	subs	w19, w19, #0x1
    84d0:	b.ne	84a8 <gcry_mpi_dump+0x58>  // b.any
    84d4:	ldr	w19, [x21, #4]
    84d8:	ldr	x23, [sp, #48]
    84dc:	cbz	w19, 8500 <gcry_mpi_dump+0xb0>
    84e0:	ldp	x19, x20, [sp, #16]
    84e4:	ldp	x21, x22, [sp, #32]
    84e8:	ldp	x29, x30, [sp], #64
    84ec:	ret
    84f0:	adrp	x0, 0 <_gcry_mpi_alloc>
    84f4:	ldr	x0, [x0]
    84f8:	bl	9ac0 <_gcry_log_printf>
    84fc:	b	847c <gcry_mpi_dump+0x2c>
    8500:	adrp	x0, 0 <_gcry_mpi_alloc>
    8504:	ldp	x19, x20, [sp, #16]
    8508:	ldp	x21, x22, [sp, #32]
    850c:	ldp	x29, x30, [sp], #64
    8510:	ldr	x0, [x0]
    8514:	b	9ac0 <_gcry_log_printf>
    8518:	adrp	x0, 0 <_gcry_mpi_alloc>
    851c:	ldp	x21, x22, [sp, #32]
    8520:	ldp	x29, x30, [sp], #64
    8524:	ldr	x0, [x0]
    8528:	b	9ac0 <_gcry_log_printf>
    852c:	nop
	...

0000000000008560 <_gcry_log_mpidump>:
    8560:	stp	x29, x30, [sp, #-64]!
    8564:	adrp	x2, 0 <_gcry_mpi_alloc>
    8568:	mov	x29, sp
    856c:	stp	x19, x20, [sp, #16]
    8570:	mov	x19, x1
    8574:	mov	x1, x0
    8578:	ldr	x0, [x2]
    857c:	bl	9ac0 <_gcry_log_printf>
    8580:	adrp	x0, 0 <_gcry_mpi_alloc>
    8584:	ldr	x0, [x0]
    8588:	bl	9ac0 <_gcry_log_printf>
    858c:	cbz	x19, 8648 <_gcry_log_mpidump+0xe8>
    8590:	ldr	w0, [x19, #8]
    8594:	cbnz	w0, 8618 <_gcry_log_mpidump+0xb8>
    8598:	ldr	w20, [x19, #4]
    859c:	cmp	w20, #0x0
    85a0:	b.le	8600 <_gcry_log_mpidump+0xa0>
    85a4:	adrp	x0, 0 <_gcry_mpi_alloc>
    85a8:	stp	x21, x22, [sp, #32]
    85ac:	mov	x21, #0xfffffffffffffff8    	// #-8
    85b0:	ldr	x22, [x0]
    85b4:	add	x21, x21, w20, sxtw #3
    85b8:	str	x23, [sp, #48]
    85bc:	adrp	x23, 0 <_gcry_mpi_alloc>
    85c0:	mov	x0, x22
    85c4:	b	85d8 <_gcry_log_mpidump+0x78>
    85c8:	ldr	x1, [x23]
    85cc:	ldr	w2, [x19, #4]
    85d0:	cmp	w2, w20
    85d4:	csel	x0, x0, x1, eq  // eq = none
    85d8:	ldr	x1, [x19, #16]
    85dc:	ldr	x1, [x1, x21]
    85e0:	sub	x21, x21, #0x8
    85e4:	bl	9ac0 <_gcry_log_printf>
    85e8:	mov	x0, x22
    85ec:	subs	w20, w20, #0x1
    85f0:	b.ne	85c8 <_gcry_log_mpidump+0x68>  // b.any
    85f4:	ldp	x21, x22, [sp, #32]
    85f8:	ldr	w20, [x19, #4]
    85fc:	ldr	x23, [sp, #48]
    8600:	cbz	w20, 8628 <_gcry_log_mpidump+0xc8>
    8604:	adrp	x0, 0 <_gcry_mpi_alloc>
    8608:	ldp	x19, x20, [sp, #16]
    860c:	ldp	x29, x30, [sp], #64
    8610:	ldr	x0, [x0]
    8614:	b	9ac0 <_gcry_log_printf>
    8618:	adrp	x0, 0 <_gcry_mpi_alloc>
    861c:	ldr	x0, [x0]
    8620:	bl	9ac0 <_gcry_log_printf>
    8624:	b	8598 <_gcry_log_mpidump+0x38>
    8628:	adrp	x0, 0 <_gcry_mpi_alloc>
    862c:	ldr	x0, [x0]
    8630:	bl	9ac0 <_gcry_log_printf>
    8634:	adrp	x0, 0 <_gcry_mpi_alloc>
    8638:	ldp	x19, x20, [sp, #16]
    863c:	ldp	x29, x30, [sp], #64
    8640:	ldr	x0, [x0]
    8644:	b	9ac0 <_gcry_log_printf>
    8648:	adrp	x0, 0 <_gcry_mpi_alloc>
    864c:	ldr	x0, [x0]
    8650:	bl	9ac0 <_gcry_log_printf>
    8654:	adrp	x0, 0 <_gcry_mpi_alloc>
    8658:	ldp	x19, x20, [sp, #16]
    865c:	ldp	x29, x30, [sp], #64
    8660:	ldr	x0, [x0]
    8664:	b	9ac0 <_gcry_log_printf>
	...

00000000000086a8 <_gcry_mpi_get_buffer>:
    86a8:	mov	w3, #0x0                   	// #0
    86ac:	b	8338 <do_get_buffer>

00000000000086b0 <_gcry_mpi_get_secure_buffer>:
    86b0:	mov	w3, #0x1                   	// #1
    86b4:	b	8338 <do_get_buffer>

00000000000086b8 <_gcry_mpi_set_buffer>:
    86b8:	stp	x29, x30, [sp, #-64]!
    86bc:	mov	x29, sp
    86c0:	stp	x19, x20, [sp, #16]
    86c4:	mov	x20, x1
    86c8:	ldr	w1, [x0]
    86cc:	stp	x21, x22, [sp, #32]
    86d0:	mov	w22, w2
    86d4:	add	w2, w2, #0x7
    86d8:	str	x23, [sp, #48]
    86dc:	mov	x19, x0
    86e0:	lsr	w21, w2, #3
    86e4:	cmp	w1, w2, lsr #3
    86e8:	mov	w23, w3
    86ec:	b.lt	884c <_gcry_mpi_set_buffer+0x194>  // b.tstop
    86f0:	mov	w9, w22
    86f4:	str	w23, [x19, #8]
    86f8:	sub	x9, x9, #0x1
    86fc:	add	x0, x20, #0x8
    8700:	add	x9, x20, x9
    8704:	cmp	x9, x0
    8708:	b.cc	8870 <_gcry_mpi_set_buffer+0x1b8>  // b.lo, b.ul, b.last
    870c:	ldr	x10, [x19, #16]
    8710:	mov	x2, x9
    8714:	nop
    8718:	ldurb	w4, [x2, #-2]
    871c:	sub	x2, x2, #0x8
    8720:	ldrb	w3, [x2, #7]
    8724:	ldrb	w8, [x2, #4]
    8728:	ldrb	w7, [x2, #5]
    872c:	lsl	x4, x4, #16
    8730:	ldrb	w5, [x2, #3]
    8734:	orr	x3, x4, x3, lsl #8
    8738:	ldrb	w6, [x2, #2]
    873c:	lsl	x8, x8, #32
    8740:	ldrb	w11, [x2, #8]
    8744:	orr	x7, x8, x7, lsl #24
    8748:	orr	x3, x3, x7
    874c:	cmp	x2, x0
    8750:	lsl	x6, x6, #48
    8754:	orr	x5, x6, x5, lsl #40
    8758:	ldrb	w4, [x2, #1]
    875c:	orr	x3, x3, x5
    8760:	orr	x4, x11, x4, lsl #56
    8764:	orr	x3, x3, x4
    8768:	str	x3, [x10], #8
    876c:	b.cs	8718 <_gcry_mpi_set_buffer+0x60>  // b.hs, b.nlast
    8770:	sub	x2, x9, x20
    8774:	sub	x2, x2, #0x8
    8778:	lsr	x2, x2, #3
    877c:	mvn	x0, x2
    8780:	add	w2, w2, #0x1
    8784:	add	x9, x9, x0, lsl #3
    8788:	cmp	x20, x9
    878c:	b.hi	882c <_gcry_mpi_set_buffer+0x174>  // b.pmore
    8790:	mov	x1, x9
    8794:	ldrb	w0, [x1], #-1
    8798:	cmp	x20, x1
    879c:	b.hi	8820 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    87a0:	ldurb	w1, [x9, #-1]
    87a4:	sub	x3, x9, #0x2
    87a8:	cmp	x20, x3
    87ac:	orr	x0, x0, x1, lsl #8
    87b0:	b.hi	8820 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    87b4:	ldurb	w1, [x9, #-2]
    87b8:	sub	x3, x9, #0x3
    87bc:	cmp	x20, x3
    87c0:	orr	x0, x0, x1, lsl #16
    87c4:	b.hi	8820 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    87c8:	ldurb	w1, [x9, #-3]
    87cc:	sub	x3, x9, #0x4
    87d0:	cmp	x20, x3
    87d4:	orr	x0, x0, x1, lsl #24
    87d8:	b.hi	8820 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    87dc:	ldurb	w1, [x9, #-4]
    87e0:	sub	x3, x9, #0x5
    87e4:	cmp	x20, x3
    87e8:	orr	x0, x0, x1, lsl #32
    87ec:	b.hi	8820 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    87f0:	ldurb	w1, [x9, #-5]
    87f4:	sub	x3, x9, #0x6
    87f8:	cmp	x20, x3
    87fc:	orr	x0, x0, x1, lsl #40
    8800:	b.hi	8820 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    8804:	ldurb	w1, [x9, #-6]
    8808:	sub	x3, x9, #0x7
    880c:	cmp	x20, x3
    8810:	orr	x0, x0, x1, lsl #48
    8814:	b.hi	8820 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    8818:	ldurb	w1, [x9, #-7]
    881c:	orr	x0, x0, x1, lsl #56
    8820:	ldr	x1, [x19, #16]
    8824:	str	x0, [x1, w2, sxtw #3]
    8828:	add	w2, w2, #0x1
    882c:	str	w2, [x19, #4]
    8830:	cmp	w2, w21
    8834:	b.ne	8878 <_gcry_mpi_set_buffer+0x1c0>  // b.any
    8838:	ldp	x19, x20, [sp, #16]
    883c:	ldp	x21, x22, [sp, #32]
    8840:	ldr	x23, [sp, #48]
    8844:	ldp	x29, x30, [sp], #64
    8848:	ret
    884c:	mov	w1, w21
    8850:	bl	1c8 <_gcry_mpi_resize>
    8854:	mov	w9, w22
    8858:	str	w23, [x19, #8]
    885c:	sub	x9, x9, #0x1
    8860:	add	x0, x20, #0x8
    8864:	add	x9, x20, x9
    8868:	cmp	x9, x0
    886c:	b.cs	870c <_gcry_mpi_set_buffer+0x54>  // b.hs, b.nlast
    8870:	mov	w2, #0x0                   	// #0
    8874:	b	8788 <_gcry_mpi_set_buffer+0xd0>
    8878:	adrp	x3, 0 <_gcry_mpi_alloc>
    887c:	adrp	x1, 0 <_gcry_mpi_alloc>
    8880:	adrp	x0, 0 <_gcry_mpi_alloc>
    8884:	mov	w2, #0x16f                 	// #367
    8888:	ldr	x3, [x3]
    888c:	ldr	x1, [x1]
    8890:	ldr	x0, [x0]
    8894:	bl	0 <_gcry_assert_failed>
	...

00000000000088b0 <gcry_mpi_scan>:
    88b0:	stp	x29, x30, [sp, #-80]!
    88b4:	mov	x29, sp
    88b8:	stp	x19, x20, [sp, #16]
    88bc:	mov	x20, x0
    88c0:	mov	x19, x2
    88c4:	stp	x21, x22, [sp, #32]
    88c8:	mov	w21, w1
    88cc:	mov	x22, x3
    88d0:	stp	x23, x24, [sp, #48]
    88d4:	mov	x23, x4
    88d8:	cbz	x2, 895c <gcry_mpi_scan+0xac>
    88dc:	mov	x0, x2
    88e0:	bl	99c0 <gcry_is_secure>
    88e4:	cbz	w0, 895c <gcry_mpi_scan+0xac>
    88e8:	cmp	w21, #0x3
    88ec:	b.eq	8c10 <gcry_mpi_scan+0x360>  // b.none
    88f0:	cmp	w21, #0x1
    88f4:	mov	w24, w22
    88f8:	b.ne	8b38 <gcry_mpi_scan+0x288>  // b.any
    88fc:	add	w0, w22, #0x7
    8900:	lsr	w0, w0, #3
    8904:	bl	88 <_gcry_mpi_alloc_secure>
    8908:	mov	x21, x0
    890c:	cbz	w24, 8934 <gcry_mpi_scan+0x84>
    8910:	ldrsb	w0, [x19]
    8914:	lsr	w1, w0, #31
    8918:	str	w1, [x21, #8]
    891c:	tbnz	w0, #31, 8c30 <gcry_mpi_scan+0x380>
    8920:	mov	w2, w24
    8924:	mov	x1, x19
    8928:	mov	x0, x21
    892c:	mov	w3, #0x0                   	// #0
    8930:	bl	86b8 <_gcry_mpi_set_buffer>
    8934:	mov	x0, x21
    8938:	cbz	x20, 8bbc <gcry_mpi_scan+0x30c>
    893c:	bl	e30 <_gcry_mpi_normalize>
    8940:	str	x21, [x20]
    8944:	mov	w0, #0x0                   	// #0
    8948:	ldp	x19, x20, [sp, #16]
    894c:	ldp	x21, x22, [sp, #32]
    8950:	ldp	x23, x24, [sp, #48]
    8954:	ldp	x29, x30, [sp], #80
    8958:	ret
    895c:	cmp	w21, #0x3
    8960:	b.eq	8ad0 <gcry_mpi_scan+0x220>  // b.none
    8964:	cmp	w21, #0x1
    8968:	mov	w24, w22
    896c:	b.eq	8b8c <gcry_mpi_scan+0x2dc>  // b.none
    8970:	cmp	w21, #0x5
    8974:	mov	w1, #0x0                   	// #0
    8978:	b.eq	8c4c <gcry_mpi_scan+0x39c>  // b.none
    897c:	cmp	w21, #0x2
    8980:	b.eq	8c90 <gcry_mpi_scan+0x3e0>  // b.none
    8984:	cmp	x22, #0x0
    8988:	mov	w0, #0xa                   	// #10
    898c:	ccmp	w21, #0x4, #0x0, eq  // eq = none
    8990:	b.ne	8948 <gcry_mpi_scan+0x98>  // b.any
    8994:	stp	x25, x26, [sp, #64]
    8998:	mov	w0, #0x0                   	// #0
    899c:	cbnz	w1, 8c40 <gcry_mpi_scan+0x390>
    89a0:	bl	0 <_gcry_mpi_alloc>
    89a4:	mov	x22, x0
    89a8:	ldrb	w0, [x19]
    89ac:	mov	w23, #0x0                   	// #0
    89b0:	cmp	w0, #0x2d
    89b4:	b.ne	89c4 <gcry_mpi_scan+0x114>  // b.any
    89b8:	ldrb	w0, [x19, #1]
    89bc:	add	x19, x19, #0x1
    89c0:	mov	w23, #0x1                   	// #1
    89c4:	cmp	w0, #0x30
    89c8:	b.ne	89dc <gcry_mpi_scan+0x12c>  // b.any
    89cc:	ldrb	w1, [x19, #1]
    89d0:	add	x0, x19, #0x2
    89d4:	cmp	w1, #0x78
    89d8:	csel	x19, x0, x19, eq  // eq = none
    89dc:	mov	x0, x19
    89e0:	bl	0 <grub_strlen>
    89e4:	lsl	w21, w0, #2
    89e8:	ldr	w1, [x22]
    89ec:	add	w21, w21, #0x7
    89f0:	and	w25, w0, #0x1
    89f4:	lsr	w21, w21, #3
    89f8:	add	w24, w21, #0x7
    89fc:	cmp	w1, w24, lsr #3
    8a00:	lsr	w24, w24, #3
    8a04:	b.cc	8c64 <gcry_mpi_scan+0x3b4>  // b.lo, b.ul, b.last
    8a08:	stp	w24, w23, [x22, #4]
    8a0c:	neg	w6, w21
    8a10:	and	w6, w6, #0x7
    8a14:	cbz	w24, 8bf4 <gcry_mpi_scan+0x344>
    8a18:	sub	w1, w24, #0x1
    8a1c:	sxtw	x0, w24
    8a20:	sub	x0, x0, x1
    8a24:	mov	x1, #0xfffffffffffffff8    	// #-8
    8a28:	add	x24, x1, w24, sxtw #3
    8a2c:	lsl	x0, x0, #3
    8a30:	sub	x1, x0, #0x10
    8a34:	ldrb	w2, [x19]
    8a38:	cbz	w25, 8e34 <gcry_mpi_scan+0x584>
    8a3c:	add	x19, x19, #0x1
    8a40:	cbz	w2, 8ba0 <gcry_mpi_scan+0x2f0>
    8a44:	mov	w3, #0x0                   	// #0
    8a48:	mov	x5, #0x0                   	// #0
    8a4c:	sub	w4, w2, #0x30
    8a50:	cmp	w4, #0x9
    8a54:	b.hi	8ab8 <gcry_mpi_scan+0x208>  // b.pmore
    8a58:	orr	w3, w4, w3
    8a5c:	sxtw	x3, w3
    8a60:	add	w6, w6, #0x1
    8a64:	orr	x5, x3, x5, lsl #8
    8a68:	cmp	w6, #0x8
    8a6c:	b.eq	8bd8 <gcry_mpi_scan+0x328>  // b.none
    8a70:	ldrb	w4, [x19]
    8a74:	mov	x2, x19
    8a78:	mov	w3, w4
    8a7c:	cbz	w3, 8ba0 <gcry_mpi_scan+0x2f0>
    8a80:	ldrb	w2, [x2, #1]
    8a84:	add	x19, x19, #0x2
    8a88:	cbz	w2, 8ba0 <gcry_mpi_scan+0x2f0>
    8a8c:	sub	w7, w4, #0x30
    8a90:	cmp	w7, #0x9
    8a94:	b.ls	8eb8 <gcry_mpi_scan+0x608>  // b.plast
    8a98:	sub	w7, w4, #0x61
    8a9c:	cmp	w7, #0x5
    8aa0:	b.hi	8b5c <gcry_mpi_scan+0x2ac>  // b.pmore
    8aa4:	sub	w3, w3, #0x57
    8aa8:	sub	w4, w2, #0x30
    8aac:	cmp	w4, #0x9
    8ab0:	lsl	w3, w3, #4
    8ab4:	b.ls	8a58 <gcry_mpi_scan+0x1a8>  // b.plast
    8ab8:	sub	w4, w2, #0x61
    8abc:	cmp	w4, #0x5
    8ac0:	b.hi	8b74 <gcry_mpi_scan+0x2c4>  // b.pmore
    8ac4:	sub	w2, w2, #0x57
    8ac8:	orr	w3, w2, w3
    8acc:	b	8a5c <gcry_mpi_scan+0x1ac>
    8ad0:	ldr	w21, [x19]
    8ad4:	rev	w21, w21
    8ad8:	sxtw	x21, w21
    8adc:	add	x0, x21, #0x7
    8ae0:	ubfx	x0, x0, #3, #32
    8ae4:	bl	0 <_gcry_mpi_alloc>
    8ae8:	mov	x22, x0
    8aec:	cbz	x21, 8b14 <gcry_mpi_scan+0x264>
    8af0:	ldrsb	w0, [x19, #4]
    8af4:	lsr	w1, w0, #31
    8af8:	str	w1, [x22, #8]
    8afc:	tbnz	w0, #31, 8c80 <gcry_mpi_scan+0x3d0>
    8b00:	add	x1, x19, #0x4
    8b04:	mov	w2, w21
    8b08:	mov	x0, x22
    8b0c:	mov	w3, #0x0                   	// #0
    8b10:	bl	86b8 <_gcry_mpi_set_buffer>
    8b14:	cbz	x23, 8b20 <gcry_mpi_scan+0x270>
    8b18:	add	x21, x21, #0x4
    8b1c:	str	x21, [x23]
    8b20:	mov	x0, x22
    8b24:	cbz	x20, 8bbc <gcry_mpi_scan+0x30c>
    8b28:	bl	e30 <_gcry_mpi_normalize>
    8b2c:	str	x22, [x20]
    8b30:	mov	w0, #0x0                   	// #0
    8b34:	b	8948 <gcry_mpi_scan+0x98>
    8b38:	cmp	w21, #0x5
    8b3c:	mov	w1, #0x1                   	// #1
    8b40:	b.ne	897c <gcry_mpi_scan+0xcc>  // b.any
    8b44:	add	w0, w22, #0x7
    8b48:	lsr	w0, w0, #3
    8b4c:	bl	88 <_gcry_mpi_alloc_secure>
    8b50:	mov	x21, x0
    8b54:	cbz	w24, 8934 <gcry_mpi_scan+0x84>
    8b58:	b	8920 <gcry_mpi_scan+0x70>
    8b5c:	sub	w4, w4, #0x41
    8b60:	cmp	w4, #0x5
    8b64:	b.hi	8ba0 <gcry_mpi_scan+0x2f0>  // b.pmore
    8b68:	sub	w3, w3, #0x37
    8b6c:	lsl	w3, w3, #4
    8b70:	b	8a4c <gcry_mpi_scan+0x19c>
    8b74:	sub	w0, w2, #0x41
    8b78:	cmp	w0, #0x5
    8b7c:	b.hi	8ba0 <gcry_mpi_scan+0x2f0>  // b.pmore
    8b80:	sub	w2, w2, #0x37
    8b84:	orr	w3, w2, w3
    8b88:	b	8a5c <gcry_mpi_scan+0x1ac>
    8b8c:	add	w0, w22, #0x7
    8b90:	lsr	w0, w0, #3
    8b94:	bl	0 <_gcry_mpi_alloc>
    8b98:	mov	x21, x0
    8b9c:	b	890c <gcry_mpi_scan+0x5c>
    8ba0:	mov	x0, x22
    8ba4:	bl	3e0 <_gcry_mpi_clear>
    8ba8:	mov	x0, x22
    8bac:	bl	3f0 <_gcry_mpi_free>
    8bb0:	mov	w0, #0xe                   	// #14
    8bb4:	ldp	x25, x26, [sp, #64]
    8bb8:	b	8948 <gcry_mpi_scan+0x98>
    8bbc:	bl	3f0 <_gcry_mpi_free>
    8bc0:	mov	w0, #0x0                   	// #0
    8bc4:	ldp	x19, x20, [sp, #16]
    8bc8:	ldp	x21, x22, [sp, #32]
    8bcc:	ldp	x23, x24, [sp, #48]
    8bd0:	ldp	x29, x30, [sp], #80
    8bd4:	ret
    8bd8:	ldr	x0, [x22, #16]
    8bdc:	mov	w25, #0x0                   	// #0
    8be0:	mov	w6, #0x0                   	// #0
    8be4:	str	x5, [x0, x24]
    8be8:	sub	x24, x24, #0x8
    8bec:	cmp	x1, x24
    8bf0:	b.ne	8a34 <gcry_mpi_scan+0x184>  // b.any
    8bf4:	cbz	x20, 8e6c <gcry_mpi_scan+0x5bc>
    8bf8:	mov	x0, x22
    8bfc:	bl	e30 <_gcry_mpi_normalize>
    8c00:	mov	w0, #0x0                   	// #0
    8c04:	ldp	x25, x26, [sp, #64]
    8c08:	str	x22, [x20]
    8c0c:	b	8948 <gcry_mpi_scan+0x98>
    8c10:	ldr	w21, [x19]
    8c14:	rev	w21, w21
    8c18:	sxtw	x21, w21
    8c1c:	add	x0, x21, #0x7
    8c20:	ubfx	x0, x0, #3, #32
    8c24:	bl	88 <_gcry_mpi_alloc_secure>
    8c28:	mov	x22, x0
    8c2c:	b	8aec <gcry_mpi_scan+0x23c>
    8c30:	mov	x0, x21
    8c34:	bl	3f0 <_gcry_mpi_free>
    8c38:	mov	w0, #0x9                   	// #9
    8c3c:	b	8948 <gcry_mpi_scan+0x98>
    8c40:	bl	88 <_gcry_mpi_alloc_secure>
    8c44:	mov	x22, x0
    8c48:	b	89a8 <gcry_mpi_scan+0xf8>
    8c4c:	add	w0, w22, #0x7
    8c50:	lsr	w0, w0, #3
    8c54:	bl	0 <_gcry_mpi_alloc>
    8c58:	mov	x21, x0
    8c5c:	cbz	w24, 8934 <gcry_mpi_scan+0x84>
    8c60:	b	8920 <gcry_mpi_scan+0x70>
    8c64:	mov	w1, w24
    8c68:	mov	x0, x22
    8c6c:	bl	1c8 <_gcry_mpi_resize>
    8c70:	stp	w24, w23, [x22, #4]
    8c74:	neg	w6, w21
    8c78:	and	w6, w6, #0x7
    8c7c:	b	8a18 <gcry_mpi_scan+0x168>
    8c80:	mov	x0, x22
    8c84:	bl	3f0 <_gcry_mpi_free>
    8c88:	mov	w0, #0x9                   	// #9
    8c8c:	b	8948 <gcry_mpi_scan+0x98>
    8c90:	cmp	w24, #0x1
    8c94:	b.ls	8e98 <gcry_mpi_scan+0x5e8>  // b.plast
    8c98:	ldrh	w0, [x19]
    8c9c:	rev16	w0, w0
    8ca0:	and	w0, w0, #0xffff
    8ca4:	cmp	w0, #0x4, lsl #12
    8ca8:	b.hi	8e98 <gcry_mpi_scan+0x5e8>  // b.pmore
    8cac:	add	w0, w0, #0x7
    8cb0:	stp	x25, x26, [sp, #64]
    8cb4:	add	x19, x19, #0x2
    8cb8:	lsr	w22, w0, #3
    8cbc:	add	w25, w22, #0x7
    8cc0:	lsr	w25, w25, #3
    8cc4:	mov	w0, w25
    8cc8:	cbz	w1, 8e80 <gcry_mpi_scan+0x5d0>
    8ccc:	bl	88 <_gcry_mpi_alloc_secure>
    8cd0:	mov	x26, x0
    8cd4:	stp	w25, wzr, [x26, #4]
    8cd8:	neg	w1, w22
    8cdc:	and	w1, w1, #0x7
    8ce0:	cbz	w25, 8e10 <gcry_mpi_scan+0x560>
    8ce4:	sub	w2, w25, #0x1
    8ce8:	sxtw	x0, w25
    8cec:	sub	x0, x0, x2
    8cf0:	mov	x2, #0xfffffffffffffff8    	// #-8
    8cf4:	add	x25, x2, w25, sxtw #3
    8cf8:	lsl	x0, x0, #3
    8cfc:	sub	x0, x0, #0x10
    8d00:	add	w22, w21, #0x1
    8d04:	cmp	w24, w22
    8d08:	b.cc	8e50 <gcry_mpi_scan+0x5a0>  // b.lo, b.ul, b.last
    8d0c:	mov	x3, x19
    8d10:	cmp	w1, #0x7
    8d14:	ldrb	w2, [x3], #1
    8d18:	b.eq	8ea0 <gcry_mpi_scan+0x5f0>  // b.none
    8d1c:	add	w22, w21, #0x2
    8d20:	cmp	w24, w22
    8d24:	b.cc	8e50 <gcry_mpi_scan+0x5a0>  // b.lo, b.ul, b.last
    8d28:	ldrb	w3, [x19, #1]
    8d2c:	cmp	w1, #0x6
    8d30:	add	x4, x19, #0x2
    8d34:	orr	x2, x3, x2, lsl #8
    8d38:	b.eq	8e8c <gcry_mpi_scan+0x5dc>  // b.none
    8d3c:	add	w22, w21, #0x3
    8d40:	cmp	w24, w22
    8d44:	b.cc	8e50 <gcry_mpi_scan+0x5a0>  // b.lo, b.ul, b.last
    8d48:	ldrb	w3, [x19, #2]
    8d4c:	cmp	w1, #0x5
    8d50:	add	x4, x19, #0x3
    8d54:	orr	x2, x3, x2, lsl #8
    8d58:	b.eq	8e8c <gcry_mpi_scan+0x5dc>  // b.none
    8d5c:	add	w22, w21, #0x4
    8d60:	cmp	w24, w22
    8d64:	b.cc	8e50 <gcry_mpi_scan+0x5a0>  // b.lo, b.ul, b.last
    8d68:	ldrb	w3, [x19, #3]
    8d6c:	cmp	w1, #0x4
    8d70:	add	x4, x19, #0x4
    8d74:	orr	x2, x3, x2, lsl #8
    8d78:	b.eq	8e8c <gcry_mpi_scan+0x5dc>  // b.none
    8d7c:	add	w22, w21, #0x5
    8d80:	cmp	w24, w22
    8d84:	b.cc	8e50 <gcry_mpi_scan+0x5a0>  // b.lo, b.ul, b.last
    8d88:	ldrb	w3, [x19, #4]
    8d8c:	cmp	w1, #0x3
    8d90:	add	x4, x19, #0x5
    8d94:	orr	x2, x3, x2, lsl #8
    8d98:	b.eq	8e8c <gcry_mpi_scan+0x5dc>  // b.none
    8d9c:	add	w22, w21, #0x6
    8da0:	cmp	w24, w22
    8da4:	b.cc	8e50 <gcry_mpi_scan+0x5a0>  // b.lo, b.ul, b.last
    8da8:	ldrb	w3, [x19, #5]
    8dac:	cmp	w1, #0x2
    8db0:	add	x4, x19, #0x6
    8db4:	add	w1, w1, #0x6
    8db8:	orr	x2, x3, x2, lsl #8
    8dbc:	b.eq	8e8c <gcry_mpi_scan+0x5dc>  // b.none
    8dc0:	add	w22, w21, #0x7
    8dc4:	cmp	w24, w22
    8dc8:	b.cc	8e50 <gcry_mpi_scan+0x5a0>  // b.lo, b.ul, b.last
    8dcc:	ldrb	w3, [x19, #6]
    8dd0:	cmp	w1, #0x6
    8dd4:	add	x1, x19, #0x7
    8dd8:	orr	x2, x3, x2, lsl #8
    8ddc:	b.ne	8eac <gcry_mpi_scan+0x5fc>  // b.any
    8de0:	add	w21, w21, #0x8
    8de4:	cmp	w24, w21
    8de8:	b.cc	8e48 <gcry_mpi_scan+0x598>  // b.lo, b.ul, b.last
    8dec:	ldrb	w1, [x19, #7]
    8df0:	add	x19, x19, #0x8
    8df4:	orr	x2, x1, x2, lsl #8
    8df8:	ldr	x3, [x26, #16]
    8dfc:	mov	w1, #0x0                   	// #0
    8e00:	str	x2, [x3, x25]
    8e04:	sub	x25, x25, #0x8
    8e08:	cmp	x25, x0
    8e0c:	b.ne	8d00 <gcry_mpi_scan+0x450>  // b.any
    8e10:	cbz	x23, 8e18 <gcry_mpi_scan+0x568>
    8e14:	str	x21, [x23]
    8e18:	mov	x0, x26
    8e1c:	cbz	x20, 8bac <gcry_mpi_scan+0x2fc>
    8e20:	bl	e30 <_gcry_mpi_normalize>
    8e24:	str	x26, [x20]
    8e28:	mov	w0, #0x0                   	// #0
    8e2c:	ldp	x25, x26, [sp, #64]
    8e30:	b	8948 <gcry_mpi_scan+0x98>
    8e34:	mov	w3, w2
    8e38:	mov	x5, #0x0                   	// #0
    8e3c:	mov	x2, x19
    8e40:	mov	w4, w3
    8e44:	b	8a7c <gcry_mpi_scan+0x1cc>
    8e48:	mov	w22, w21
    8e4c:	nop
    8e50:	mov	x0, x26
    8e54:	bl	3f0 <_gcry_mpi_free>
    8e58:	ldp	x25, x26, [sp, #64]
    8e5c:	mov	w0, #0xe                   	// #14
    8e60:	cbz	x23, 8948 <gcry_mpi_scan+0x98>
    8e64:	str	x22, [x23]
    8e68:	b	8948 <gcry_mpi_scan+0x98>
    8e6c:	mov	x0, x22
    8e70:	bl	3f0 <_gcry_mpi_free>
    8e74:	mov	w0, #0x0                   	// #0
    8e78:	ldp	x25, x26, [sp, #64]
    8e7c:	b	8948 <gcry_mpi_scan+0x98>
    8e80:	bl	0 <_gcry_mpi_alloc>
    8e84:	mov	x26, x0
    8e88:	b	8cd4 <gcry_mpi_scan+0x424>
    8e8c:	mov	x19, x4
    8e90:	mov	w21, w22
    8e94:	b	8df8 <gcry_mpi_scan+0x548>
    8e98:	mov	x22, #0x0                   	// #0
    8e9c:	b	8e5c <gcry_mpi_scan+0x5ac>
    8ea0:	mov	x19, x3
    8ea4:	mov	w21, w22
    8ea8:	b	8df8 <gcry_mpi_scan+0x548>
    8eac:	mov	x19, x1
    8eb0:	mov	w21, w22
    8eb4:	b	8df8 <gcry_mpi_scan+0x548>
    8eb8:	sub	w4, w3, #0x30
    8ebc:	lsl	w3, w4, #4
    8ec0:	b	8a4c <gcry_mpi_scan+0x19c>
    8ec4:	nop

0000000000008ec8 <gcry_mpi_print>:
    8ec8:	stp	x29, x30, [sp, #-80]!
    8ecc:	mov	x29, sp
    8ed0:	stp	x19, x20, [sp, #16]
    8ed4:	mov	x19, x3
    8ed8:	mov	w20, w0
    8edc:	mov	x0, x4
    8ee0:	stp	x21, x22, [sp, #32]
    8ee4:	mov	x22, x1
    8ee8:	mov	x21, x4
    8eec:	stp	x23, x24, [sp, #48]
    8ef0:	mov	x23, x2
    8ef4:	bl	e80 <gcry_mpi_get_nbits>
    8ef8:	cmp	x19, #0x0
    8efc:	add	x1, sp, #0x48
    8f00:	csel	x19, x1, x19, eq  // eq = none
    8f04:	cmp	w20, #0x1
    8f08:	str	xzr, [x19]
    8f0c:	b.eq	9090 <gcry_mpi_print+0x1c8>  // b.none
    8f10:	mov	w3, w0
    8f14:	cmp	w20, #0x5
    8f18:	b.eq	9020 <gcry_mpi_print+0x158>  // b.none
    8f1c:	cmp	w20, #0x2
    8f20:	b.eq	918c <gcry_mpi_print+0x2c4>  // b.none
    8f24:	cmp	w20, #0x3
    8f28:	b.eq	90fc <gcry_mpi_print+0x234>  // b.none
    8f2c:	cmp	w20, #0x4
    8f30:	mov	w0, #0xa                   	// #10
    8f34:	b.ne	900c <gcry_mpi_print+0x144>  // b.any
    8f38:	add	x1, sp, #0x44
    8f3c:	mov	x0, x21
    8f40:	mov	w3, #0x0                   	// #0
    8f44:	mov	x2, #0x0                   	// #0
    8f48:	str	wzr, [sp, #68]
    8f4c:	bl	8338 <do_get_buffer>
    8f50:	cbz	x0, 9208 <gcry_mpi_print+0x340>
    8f54:	ldr	w2, [sp, #68]
    8f58:	cbnz	w2, 9238 <gcry_mpi_print+0x370>
    8f5c:	mov	w1, #0x2                   	// #2
    8f60:	mov	w4, w1
    8f64:	ldr	w3, [x21, #8]
    8f68:	cmp	w3, #0x0
    8f6c:	cinc	w1, w1, ne  // ne = any
    8f70:	add	w1, w1, w2, lsl #1
    8f74:	add	w1, w1, #0x1
    8f78:	cbz	x22, 9288 <gcry_mpi_print+0x3c0>
    8f7c:	cmp	x23, x1
    8f80:	b.cc	926c <gcry_mpi_print+0x3a4>  // b.lo, b.ul, b.last
    8f84:	mov	x7, x22
    8f88:	cbz	w3, 8f94 <gcry_mpi_print+0xcc>
    8f8c:	mov	w1, #0x2d                  	// #45
    8f90:	strb	w1, [x7], #1
    8f94:	cbz	w4, 8fa0 <gcry_mpi_print+0xd8>
    8f98:	mov	w1, #0x3030                	// #12336
    8f9c:	strh	w1, [x7], #2
    8fa0:	cbz	w2, 8ff8 <gcry_mpi_print+0x130>
    8fa4:	sub	w2, w2, #0x1
    8fa8:	mov	x4, x0
    8fac:	add	x8, x2, #0x1
    8fb0:	mov	x3, x7
    8fb4:	add	x9, x0, x8
    8fb8:	ldrb	w1, [x4], #1
    8fbc:	and	w2, w1, #0xf
    8fc0:	cmp	w1, #0x9f
    8fc4:	lsr	w1, w1, #4
    8fc8:	add	w5, w2, #0x30
    8fcc:	add	w6, w1, #0x30
    8fd0:	add	w1, w1, #0x37
    8fd4:	csel	w1, w1, w6, hi  // hi = pmore
    8fd8:	strb	w1, [x3], #2
    8fdc:	cmp	w2, #0x9
    8fe0:	add	w2, w2, #0x37
    8fe4:	csel	w2, w2, w5, hi  // hi = pmore
    8fe8:	sturb	w2, [x3, #-1]
    8fec:	cmp	x9, x4
    8ff0:	b.ne	8fb8 <gcry_mpi_print+0xf0>  // b.any
    8ff4:	add	x7, x7, x8, lsl #1
    8ff8:	strb	wzr, [x7], #1
    8ffc:	sub	x7, x7, x22
    9000:	str	x7, [x19]
    9004:	bl	99b8 <gcry_free>
    9008:	mov	w0, #0x0                   	// #0
    900c:	ldp	x19, x20, [sp, #16]
    9010:	ldp	x21, x22, [sp, #32]
    9014:	ldp	x23, x24, [sp, #48]
    9018:	ldp	x29, x30, [sp], #80
    901c:	ret
    9020:	add	w0, w0, #0x7
    9024:	lsr	w3, w0, #3
    9028:	str	w3, [sp, #68]
    902c:	cbz	x22, 9074 <gcry_mpi_print+0x1ac>
    9030:	cmp	x23, x3
    9034:	mov	w0, #0x1d                  	// #29
    9038:	b.cc	900c <gcry_mpi_print+0x144>  // b.lo, b.ul, b.last
    903c:	mov	x0, x21
    9040:	add	x1, sp, #0x44
    9044:	mov	w3, #0x0                   	// #0
    9048:	mov	x2, #0x0                   	// #0
    904c:	bl	8338 <do_get_buffer>
    9050:	mov	x20, x0
    9054:	cbz	x0, 9208 <gcry_mpi_print+0x340>
    9058:	ldr	w2, [sp, #68]
    905c:	mov	x1, x0
    9060:	mov	x0, x22
    9064:	bl	0 <grub_memmove>
    9068:	mov	x0, x20
    906c:	bl	99b8 <gcry_free>
    9070:	ldr	w3, [sp, #68]
    9074:	str	x3, [x19]
    9078:	mov	w0, #0x0                   	// #0
    907c:	ldp	x19, x20, [sp, #16]
    9080:	ldp	x21, x22, [sp, #32]
    9084:	ldp	x23, x24, [sp, #48]
    9088:	ldp	x29, x30, [sp], #80
    908c:	ret
    9090:	ldr	w1, [x21, #8]
    9094:	mov	w0, #0x9                   	// #9
    9098:	cbnz	w1, 900c <gcry_mpi_print+0x144>
    909c:	mov	x0, x21
    90a0:	add	x1, sp, #0x44
    90a4:	mov	w3, #0x0                   	// #0
    90a8:	mov	x2, #0x0                   	// #0
    90ac:	bl	8338 <do_get_buffer>
    90b0:	mov	x20, x0
    90b4:	cbz	x0, 9208 <gcry_mpi_print+0x340>
    90b8:	ldr	w2, [sp, #68]
    90bc:	cbnz	w2, 9210 <gcry_mpi_print+0x348>
    90c0:	mov	x2, #0x0                   	// #0
    90c4:	cbz	x22, 90d4 <gcry_mpi_print+0x20c>
    90c8:	mov	x0, x22
    90cc:	mov	x1, x20
    90d0:	bl	0 <grub_memmove>
    90d4:	mov	x0, x20
    90d8:	bl	99b8 <gcry_free>
    90dc:	ldr	w1, [sp, #68]
    90e0:	mov	w0, #0x0                   	// #0
    90e4:	str	x1, [x19]
    90e8:	ldp	x19, x20, [sp, #16]
    90ec:	ldp	x21, x22, [sp, #32]
    90f0:	ldp	x23, x24, [sp, #48]
    90f4:	ldp	x29, x30, [sp], #80
    90f8:	ret
    90fc:	ldr	w24, [x21, #8]
    9100:	mov	w0, #0x9                   	// #9
    9104:	cbnz	w24, 900c <gcry_mpi_print+0x144>
    9108:	mov	x0, x21
    910c:	add	x1, sp, #0x44
    9110:	mov	w3, #0x0                   	// #0
    9114:	mov	x2, #0x0                   	// #0
    9118:	bl	8338 <do_get_buffer>
    911c:	mov	x20, x0
    9120:	cbz	x0, 9208 <gcry_mpi_print+0x340>
    9124:	ldr	w2, [sp, #68]
    9128:	mov	w0, #0x0                   	// #0
    912c:	cbz	w2, 913c <gcry_mpi_print+0x274>
    9130:	ldrsb	w1, [x20]
    9134:	mov	w0, w2
    9138:	tbnz	w1, #31, 9278 <gcry_mpi_print+0x3b0>
    913c:	cbz	x22, 9170 <gcry_mpi_print+0x2a8>
    9140:	add	w1, w0, #0x4
    9144:	cmp	x1, x23
    9148:	b.hi	9228 <gcry_mpi_print+0x360>  // b.pmore
    914c:	rev	w0, w0
    9150:	str	w0, [x22]
    9154:	add	x0, x22, #0x4
    9158:	cbz	w24, 9164 <gcry_mpi_print+0x29c>
    915c:	add	x0, x22, #0x5
    9160:	strb	wzr, [x22, #4]
    9164:	mov	w2, w2
    9168:	mov	x1, x20
    916c:	bl	0 <grub_memmove>
    9170:	mov	x0, x20
    9174:	bl	99b8 <gcry_free>
    9178:	ldr	w1, [sp, #68]
    917c:	mov	w0, #0x0                   	// #0
    9180:	add	w1, w1, #0x4
    9184:	str	x1, [x19]
    9188:	b	900c <gcry_mpi_print+0x144>
    918c:	add	w1, w0, #0x7
    9190:	ldr	w2, [x21, #8]
    9194:	mov	w0, #0xa                   	// #10
    9198:	lsr	w1, w1, #3
    919c:	str	w1, [sp, #68]
    91a0:	cbnz	w2, 900c <gcry_mpi_print+0x144>
    91a4:	add	w1, w1, #0x2
    91a8:	cbz	x22, 91fc <gcry_mpi_print+0x334>
    91ac:	cmp	x23, x1
    91b0:	mov	w0, #0x1d                  	// #29
    91b4:	b.cc	900c <gcry_mpi_print+0x144>  // b.lo, b.ul, b.last
    91b8:	rev16	w0, w3
    91bc:	strh	w0, [x22]
    91c0:	add	x1, sp, #0x44
    91c4:	mov	x0, x21
    91c8:	mov	w3, #0x0                   	// #0
    91cc:	mov	x2, #0x0                   	// #0
    91d0:	bl	8338 <do_get_buffer>
    91d4:	mov	x20, x0
    91d8:	cbz	x0, 9208 <gcry_mpi_print+0x340>
    91dc:	ldr	w2, [sp, #68]
    91e0:	mov	x1, x0
    91e4:	add	x0, x22, #0x2
    91e8:	bl	0 <grub_memmove>
    91ec:	mov	x0, x20
    91f0:	bl	99b8 <gcry_free>
    91f4:	ldr	w1, [sp, #68]
    91f8:	add	w1, w1, #0x2
    91fc:	mov	w0, #0x0                   	// #0
    9200:	str	x1, [x19]
    9204:	b	900c <gcry_mpi_print+0x144>
    9208:	bl	9c18 <gpg_error_from_syserror>
    920c:	b	900c <gcry_mpi_print+0x144>
    9210:	ldrsb	w0, [x0]
    9214:	tbnz	w0, #31, 924c <gcry_mpi_print+0x384>
    9218:	cbz	x22, 90d4 <gcry_mpi_print+0x20c>
    921c:	cmp	x23, w2, uxtw
    9220:	mov	w2, w2
    9224:	b.cs	90c8 <gcry_mpi_print+0x200>  // b.hs, b.nlast
    9228:	mov	x0, x20
    922c:	bl	99b8 <gcry_free>
    9230:	mov	w0, #0x1d                  	// #29
    9234:	b	900c <gcry_mpi_print+0x144>
    9238:	ldrsb	w3, [x0]
    923c:	mov	w1, #0x0                   	// #0
    9240:	mov	w4, #0x0                   	// #0
    9244:	tbz	w3, #31, 8f64 <gcry_mpi_print+0x9c>
    9248:	b	8f5c <gcry_mpi_print+0x94>
    924c:	add	w0, w2, #0x1
    9250:	str	w0, [sp, #68]
    9254:	cbz	x22, 90d4 <gcry_mpi_print+0x20c>
    9258:	cmp	x23, w0, uxtw
    925c:	b.cc	9228 <gcry_mpi_print+0x360>  // b.lo, b.ul, b.last
    9260:	mov	w2, w2
    9264:	strb	wzr, [x22], #1
    9268:	b	90c8 <gcry_mpi_print+0x200>
    926c:	bl	99b8 <gcry_free>
    9270:	mov	w0, #0x1d                  	// #29
    9274:	b	900c <gcry_mpi_print+0x144>
    9278:	add	w0, w2, #0x1
    927c:	mov	w24, #0x1                   	// #1
    9280:	str	w0, [sp, #68]
    9284:	b	913c <gcry_mpi_print+0x274>
    9288:	str	x1, [x19]
    928c:	b	9004 <gcry_mpi_print+0x13c>

0000000000009290 <gcry_mpi_aprint>:
    9290:	stp	x29, x30, [sp, #-80]!
    9294:	mov	x29, sp
    9298:	stp	x19, x20, [sp, #16]
    929c:	mov	w20, w0
    92a0:	mov	x19, x3
    92a4:	stp	x21, x22, [sp, #32]
    92a8:	mov	x0, x3
    92ac:	mov	x21, x1
    92b0:	str	x23, [sp, #48]
    92b4:	mov	x22, x2
    92b8:	str	xzr, [x1]
    92bc:	bl	e80 <gcry_mpi_get_nbits>
    92c0:	str	xzr, [sp, #72]
    92c4:	cmp	w20, #0x1
    92c8:	b.eq	93b4 <gcry_mpi_aprint+0x124>  // b.none
    92cc:	cmp	w20, #0x5
    92d0:	b.eq	9390 <gcry_mpi_aprint+0x100>  // b.none
    92d4:	cmp	w20, #0x2
    92d8:	b.eq	946c <gcry_mpi_aprint+0x1dc>  // b.none
    92dc:	cmp	w20, #0x3
    92e0:	b.eq	941c <gcry_mpi_aprint+0x18c>  // b.none
    92e4:	cmp	w20, #0x4
    92e8:	mov	w23, #0xa                   	// #10
    92ec:	b.ne	9378 <gcry_mpi_aprint+0xe8>  // b.any
    92f0:	add	x1, sp, #0x44
    92f4:	mov	x0, x19
    92f8:	mov	w3, #0x0                   	// #0
    92fc:	mov	x2, #0x0                   	// #0
    9300:	str	wzr, [sp, #68]
    9304:	bl	8338 <do_get_buffer>
    9308:	cbz	x0, 94bc <gcry_mpi_aprint+0x22c>
    930c:	ldr	w1, [sp, #68]
    9310:	mov	w2, #0x2                   	// #2
    9314:	cbnz	w1, 948c <gcry_mpi_aprint+0x1fc>
    9318:	ldr	w3, [x19, #8]
    931c:	cmp	w3, #0x0
    9320:	cinc	w2, w2, ne  // ne = any
    9324:	add	w1, w2, w1, lsl #1
    9328:	add	w1, w1, #0x1
    932c:	str	x1, [sp, #72]
    9330:	bl	99b8 <gcry_free>
    9334:	ldr	x0, [sp, #72]
    9338:	ldr	w1, [x19, #12]
    933c:	tbnz	w1, #0, 93a8 <gcry_mpi_aprint+0x118>
    9340:	bl	99a8 <gcry_malloc>
    9344:	mov	x1, x0
    9348:	str	x1, [x21]
    934c:	cbz	x1, 94d4 <gcry_mpi_aprint+0x244>
    9350:	ldr	x2, [sp, #72]
    9354:	mov	x4, x19
    9358:	mov	w0, w20
    935c:	add	x3, sp, #0x48
    9360:	bl	8ec8 <gcry_mpi_print>
    9364:	mov	w23, w0
    9368:	cbnz	w0, 93f8 <gcry_mpi_aprint+0x168>
    936c:	cbz	x22, 9378 <gcry_mpi_aprint+0xe8>
    9370:	ldr	x0, [sp, #72]
    9374:	str	x0, [x22]
    9378:	mov	w0, w23
    937c:	ldp	x19, x20, [sp, #16]
    9380:	ldp	x21, x22, [sp, #32]
    9384:	ldr	x23, [sp, #48]
    9388:	ldp	x29, x30, [sp], #80
    938c:	ret
    9390:	add	w0, w0, #0x7
    9394:	lsr	w0, w0, #3
    9398:	str	x0, [sp, #72]
    939c:	cbz	x19, 9340 <gcry_mpi_aprint+0xb0>
    93a0:	ldr	w1, [x19, #12]
    93a4:	tbz	w1, #0, 9340 <gcry_mpi_aprint+0xb0>
    93a8:	bl	99b0 <gcry_malloc_secure>
    93ac:	mov	x1, x0
    93b0:	b	9348 <gcry_mpi_aprint+0xb8>
    93b4:	ldr	w0, [x19, #8]
    93b8:	mov	w23, #0x9                   	// #9
    93bc:	cbnz	w0, 9378 <gcry_mpi_aprint+0xe8>
    93c0:	add	x1, sp, #0x44
    93c4:	mov	x0, x19
    93c8:	mov	w3, #0x0                   	// #0
    93cc:	mov	x2, #0x0                   	// #0
    93d0:	bl	8338 <do_get_buffer>
    93d4:	cbz	x0, 94a8 <gcry_mpi_aprint+0x218>
    93d8:	ldr	w1, [sp, #68]
    93dc:	cbz	w1, 93e8 <gcry_mpi_aprint+0x158>
    93e0:	ldrsb	w2, [x0]
    93e4:	tbnz	w2, #31, 949c <gcry_mpi_aprint+0x20c>
    93e8:	bl	99b8 <gcry_free>
    93ec:	ldr	w0, [sp, #68]
    93f0:	str	x0, [sp, #72]
    93f4:	b	9338 <gcry_mpi_aprint+0xa8>
    93f8:	ldr	x0, [x21]
    93fc:	bl	99b8 <gcry_free>
    9400:	str	xzr, [x21]
    9404:	mov	w0, w23
    9408:	ldp	x19, x20, [sp, #16]
    940c:	ldp	x21, x22, [sp, #32]
    9410:	ldr	x23, [sp, #48]
    9414:	ldp	x29, x30, [sp], #80
    9418:	ret
    941c:	ldr	w0, [x19, #8]
    9420:	mov	w23, #0x9                   	// #9
    9424:	cbnz	w0, 9378 <gcry_mpi_aprint+0xe8>
    9428:	add	x1, sp, #0x44
    942c:	mov	x0, x19
    9430:	mov	w3, #0x0                   	// #0
    9434:	mov	x2, #0x0                   	// #0
    9438:	bl	8338 <do_get_buffer>
    943c:	cbz	x0, 94a8 <gcry_mpi_aprint+0x218>
    9440:	ldr	w1, [sp, #68]
    9444:	cbz	w1, 9458 <gcry_mpi_aprint+0x1c8>
    9448:	ldrsb	w2, [x0]
    944c:	tbz	w2, #31, 9458 <gcry_mpi_aprint+0x1c8>
    9450:	add	w1, w1, #0x1
    9454:	str	w1, [sp, #68]
    9458:	bl	99b8 <gcry_free>
    945c:	ldr	w0, [sp, #68]
    9460:	add	w0, w0, #0x4
    9464:	str	x0, [sp, #72]
    9468:	b	9338 <gcry_mpi_aprint+0xa8>
    946c:	ldr	w1, [x19, #8]
    9470:	mov	w23, #0xa                   	// #10
    9474:	cbnz	w1, 9378 <gcry_mpi_aprint+0xe8>
    9478:	add	w0, w0, #0x7
    947c:	lsr	w0, w0, #3
    9480:	add	w0, w0, #0x2
    9484:	str	x0, [sp, #72]
    9488:	b	9338 <gcry_mpi_aprint+0xa8>
    948c:	ldrsb	w2, [x0]
    9490:	lsr	w2, w2, #31
    9494:	lsl	w2, w2, #1
    9498:	b	9318 <gcry_mpi_aprint+0x88>
    949c:	add	w1, w1, #0x1
    94a0:	str	w1, [sp, #68]
    94a4:	b	93e8 <gcry_mpi_aprint+0x158>
    94a8:	bl	9c18 <gpg_error_from_syserror>
    94ac:	mov	w23, w0
    94b0:	cbnz	w0, 9378 <gcry_mpi_aprint+0xe8>
    94b4:	ldr	x0, [sp, #72]
    94b8:	b	9338 <gcry_mpi_aprint+0xa8>
    94bc:	bl	9c18 <gpg_error_from_syserror>
    94c0:	mov	w23, w0
    94c4:	cbnz	w0, 9378 <gcry_mpi_aprint+0xe8>
    94c8:	ldr	x0, [sp, #72]
    94cc:	cbnz	x19, 93a0 <gcry_mpi_aprint+0x110>
    94d0:	b	9340 <gcry_mpi_aprint+0xb0>
    94d4:	bl	9c18 <gpg_error_from_syserror>
    94d8:	mov	w23, w0
    94dc:	b	9378 <gcry_mpi_aprint+0xe8>

00000000000094e0 <_gcry_mpih_rshift>:
    94e0:	ldr	x6, [x1]
    94e4:	mov	w8, #0x40                  	// #64
    94e8:	sub	w8, w8, w3
    94ec:	mov	x4, x0
    94f0:	sub	x9, x0, #0x8
    94f4:	cmp	w2, #0x1
    94f8:	lsl	x0, x6, x8
    94fc:	b.le	9530 <_gcry_mpih_rshift+0x50>
    9500:	mov	x5, #0x1                   	// #1
    9504:	nop
    9508:	mov	x4, x6
    950c:	ldr	x6, [x1, x5, lsl #3]
    9510:	lsr	x4, x4, x3
    9514:	lsl	x7, x6, x8
    9518:	orr	x4, x4, x7
    951c:	str	x4, [x9, x5, lsl #3]
    9520:	add	x5, x5, #0x1
    9524:	cmp	w2, w5
    9528:	b.gt	9508 <_gcry_mpih_rshift+0x28>
    952c:	add	x4, x9, w2, sxtw #3
    9530:	lsr	x6, x6, x3
    9534:	str	x6, [x4]
    9538:	ret
    953c:	nop

0000000000009540 <_gcry_mpih_add_1>:
    9540:	ldr	x4, [x1], #8
    9544:	adds	x4, x4, x3
    9548:	str	x4, [x0], #8
    954c:	b.cs	95d4 <_gcry_mpih_add_1+0x94>  // b.hs, b.nlast
    9550:	cmp	x0, x1
    9554:	b.eq	95bc <_gcry_mpih_add_1+0x7c>  // b.none
    9558:	sub	w7, w2, #0x1
    955c:	cmp	w7, #0x0
    9560:	b.le	95bc <_gcry_mpih_add_1+0x7c>
    9564:	orr	x4, x1, x0
    9568:	add	x3, x0, #0xf
    956c:	sub	x3, x3, x1
    9570:	sub	w2, w2, #0x2
    9574:	tst	x4, #0xf
    9578:	ccmp	x3, #0x1e, #0x0, eq  // eq = none
    957c:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    9580:	b.ls	95e4 <_gcry_mpih_add_1+0xa4>  // b.plast
    9584:	lsr	w6, w7, #1
    9588:	mov	x2, x1
    958c:	mov	x3, x0
    9590:	add	x6, x1, w6, uxtw #4
    9594:	nop
    9598:	ldp	x4, x5, [x2], #16
    959c:	stp	x4, x5, [x3], #16
    95a0:	cmp	x2, x6
    95a4:	b.ne	9598 <_gcry_mpih_add_1+0x58>  // b.any
    95a8:	and	w2, w7, #0xfffffffe
    95ac:	tbz	w7, #0, 95bc <_gcry_mpih_add_1+0x7c>
    95b0:	sxtw	x2, w2
    95b4:	ldr	x1, [x1, x2, lsl #3]
    95b8:	str	x1, [x0, x2, lsl #3]
    95bc:	mov	x0, #0x0                   	// #0
    95c0:	ret
    95c4:	ldr	x3, [x1], #8
    95c8:	add	x3, x3, #0x1
    95cc:	str	x3, [x0], #8
    95d0:	cbnz	x3, 9550 <_gcry_mpih_add_1+0x10>
    95d4:	subs	w2, w2, #0x1
    95d8:	b.ne	95c4 <_gcry_mpih_add_1+0x84>  // b.any
    95dc:	mov	x0, #0x1                   	// #1
    95e0:	ret
    95e4:	mov	x2, #0x0                   	// #0
    95e8:	ldr	x3, [x1, x2, lsl #3]
    95ec:	str	x3, [x0, x2, lsl #3]
    95f0:	add	x2, x2, #0x1
    95f4:	cmp	w7, w2
    95f8:	b.gt	95e8 <_gcry_mpih_add_1+0xa8>
    95fc:	mov	x0, #0x0                   	// #0
    9600:	b	95c0 <_gcry_mpih_add_1+0x80>
    9604:	nop

0000000000009608 <_gcry_mpih_add>:
    9608:	stp	x29, x30, [sp, #-48]!
    960c:	mov	x29, sp
    9610:	stp	x19, x20, [sp, #16]
    9614:	mov	w20, w2
    9618:	mov	x19, x1
    961c:	stp	x21, x22, [sp, #32]
    9620:	mov	x22, x0
    9624:	cbnz	w4, 96c0 <_gcry_mpih_add+0xb8>
    9628:	cbnz	w2, 9640 <_gcry_mpih_add+0x38>
    962c:	mov	x0, #0x0                   	// #0
    9630:	ldp	x19, x20, [sp, #16]
    9634:	ldp	x21, x22, [sp, #32]
    9638:	ldp	x29, x30, [sp], #48
    963c:	ret
    9640:	mov	x1, x19
    9644:	mov	x3, x22
    9648:	ldr	x0, [x1], #8
    964c:	str	x0, [x3], #8
    9650:	cmp	x3, x1
    9654:	b.eq	962c <_gcry_mpih_add+0x24>  // b.none
    9658:	sub	w7, w20, #0x1
    965c:	cmp	w7, #0x0
    9660:	b.le	962c <_gcry_mpih_add+0x24>
    9664:	orr	x4, x1, x3
    9668:	add	x0, x3, #0xf
    966c:	sub	x0, x0, x1
    9670:	sub	w20, w20, #0x2
    9674:	tst	x4, #0xf
    9678:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    967c:	ccmp	w20, #0xb, #0x0, hi  // hi = pmore
    9680:	b.ls	9734 <_gcry_mpih_add+0x12c>  // b.plast
    9684:	lsr	w6, w7, #1
    9688:	mov	x0, x1
    968c:	mov	x2, x3
    9690:	add	x6, x1, w6, uxtw #4
    9694:	nop
    9698:	ldp	x4, x5, [x0], #16
    969c:	stp	x4, x5, [x2], #16
    96a0:	cmp	x0, x6
    96a4:	b.ne	9698 <_gcry_mpih_add+0x90>  // b.any
    96a8:	and	w0, w7, #0xfffffffe
    96ac:	tbz	w7, #0, 962c <_gcry_mpih_add+0x24>
    96b0:	sxtw	x0, w0
    96b4:	ldr	x1, [x1, x0, lsl #3]
    96b8:	str	x1, [x3, x0, lsl #3]
    96bc:	b	962c <_gcry_mpih_add+0x24>
    96c0:	mov	w21, w4
    96c4:	mov	x2, x3
    96c8:	mov	w3, w4
    96cc:	bl	7370 <_gcry_mpih_add_n>
    96d0:	cmp	w21, w20
    96d4:	b.eq	9630 <_gcry_mpih_add+0x28>  // b.none
    96d8:	sxtw	x4, w21
    96dc:	sbfiz	x1, x21, #3, #32
    96e0:	add	x3, x22, x1
    96e4:	add	x1, x19, x1
    96e8:	sub	w20, w20, w21
    96ec:	add	x3, x3, #0x8
    96f0:	ldr	x2, [x19, x4, lsl #3]
    96f4:	add	x1, x1, #0x8
    96f8:	adds	x2, x0, x2
    96fc:	str	x2, [x22, x4, lsl #3]
    9700:	b.cs	9718 <_gcry_mpih_add+0x110>  // b.hs, b.nlast
    9704:	b	9650 <_gcry_mpih_add+0x48>
    9708:	ldr	x0, [x1], #8
    970c:	add	x0, x0, #0x1
    9710:	str	x0, [x3], #8
    9714:	cbnz	x0, 9650 <_gcry_mpih_add+0x48>
    9718:	subs	w20, w20, #0x1
    971c:	b.ne	9708 <_gcry_mpih_add+0x100>  // b.any
    9720:	mov	x0, #0x1                   	// #1
    9724:	ldp	x19, x20, [sp, #16]
    9728:	ldp	x21, x22, [sp, #32]
    972c:	ldp	x29, x30, [sp], #48
    9730:	ret
    9734:	mov	x0, #0x0                   	// #0
    9738:	ldr	x2, [x1, x0, lsl #3]
    973c:	str	x2, [x3, x0, lsl #3]
    9740:	add	x0, x0, #0x1
    9744:	cmp	w7, w0
    9748:	b.gt	9738 <_gcry_mpih_add+0x130>
    974c:	b	962c <_gcry_mpih_add+0x24>

0000000000009750 <_gcry_mpih_sub_1>:
    9750:	ldr	x4, [x1], #8
    9754:	subs	x5, x4, x3
    9758:	str	x5, [x0], #8
    975c:	cmp	x4, x3
    9760:	b.cc	97e4 <_gcry_mpih_sub_1+0x94>  // b.lo, b.ul, b.last
    9764:	cmp	x0, x1
    9768:	b.eq	97cc <_gcry_mpih_sub_1+0x7c>  // b.none
    976c:	sub	w7, w2, #0x1
    9770:	cmp	w7, #0x0
    9774:	b.le	97cc <_gcry_mpih_sub_1+0x7c>
    9778:	orr	x4, x1, x0
    977c:	add	x3, x0, #0xf
    9780:	sub	x3, x3, x1
    9784:	sub	w2, w2, #0x2
    9788:	tst	x4, #0xf
    978c:	ccmp	x3, #0x1e, #0x0, eq  // eq = none
    9790:	ccmp	w2, #0xb, #0x0, hi  // hi = pmore
    9794:	b.ls	97f4 <_gcry_mpih_sub_1+0xa4>  // b.plast
    9798:	lsr	w6, w7, #1
    979c:	mov	x2, x1
    97a0:	mov	x3, x0
    97a4:	add	x6, x1, w6, uxtw #4
    97a8:	ldp	x4, x5, [x2], #16
    97ac:	stp	x4, x5, [x3], #16
    97b0:	cmp	x2, x6
    97b4:	b.ne	97a8 <_gcry_mpih_sub_1+0x58>  // b.any
    97b8:	and	w2, w7, #0xfffffffe
    97bc:	tbz	w7, #0, 97cc <_gcry_mpih_sub_1+0x7c>
    97c0:	sxtw	x2, w2
    97c4:	ldr	x1, [x1, x2, lsl #3]
    97c8:	str	x1, [x0, x2, lsl #3]
    97cc:	mov	x0, #0x0                   	// #0
    97d0:	ret
    97d4:	ldr	x3, [x1], #8
    97d8:	sub	x4, x3, #0x1
    97dc:	str	x4, [x0], #8
    97e0:	cbnz	x3, 9764 <_gcry_mpih_sub_1+0x14>
    97e4:	subs	w2, w2, #0x1
    97e8:	b.ne	97d4 <_gcry_mpih_sub_1+0x84>  // b.any
    97ec:	mov	x0, #0x1                   	// #1
    97f0:	ret
    97f4:	mov	x2, #0x0                   	// #0
    97f8:	ldr	x3, [x1, x2, lsl #3]
    97fc:	str	x3, [x0, x2, lsl #3]
    9800:	add	x2, x2, #0x1
    9804:	cmp	w7, w2
    9808:	b.gt	97f8 <_gcry_mpih_sub_1+0xa8>
    980c:	mov	x0, #0x0                   	// #0
    9810:	b	97d0 <_gcry_mpih_sub_1+0x80>
    9814:	nop

0000000000009818 <_gcry_mpih_sub>:
    9818:	stp	x29, x30, [sp, #-48]!
    981c:	mov	x29, sp
    9820:	stp	x19, x20, [sp, #16]
    9824:	mov	w19, w2
    9828:	stp	x21, x22, [sp, #32]
    982c:	mov	x21, x0
    9830:	mov	x22, x1
    9834:	cbnz	w4, 98d0 <_gcry_mpih_sub+0xb8>
    9838:	cbnz	w2, 9850 <_gcry_mpih_sub+0x38>
    983c:	mov	x0, #0x0                   	// #0
    9840:	ldp	x19, x20, [sp, #16]
    9844:	ldp	x21, x22, [sp, #32]
    9848:	ldp	x29, x30, [sp], #48
    984c:	ret
    9850:	mov	x3, x22
    9854:	mov	x1, x21
    9858:	ldr	x0, [x3], #8
    985c:	str	x0, [x1], #8
    9860:	cmp	x1, x3
    9864:	b.eq	983c <_gcry_mpih_sub+0x24>  // b.none
    9868:	sub	w7, w19, #0x1
    986c:	cmp	w7, #0x0
    9870:	b.le	983c <_gcry_mpih_sub+0x24>
    9874:	orr	x4, x3, x1
    9878:	add	x0, x1, #0xf
    987c:	sub	x0, x0, x3
    9880:	sub	w19, w19, #0x2
    9884:	tst	x4, #0xf
    9888:	ccmp	x0, #0x1e, #0x0, eq  // eq = none
    988c:	ccmp	w19, #0xb, #0x0, hi  // hi = pmore
    9890:	b.ls	9948 <_gcry_mpih_sub+0x130>  // b.plast
    9894:	lsr	w6, w7, #1
    9898:	mov	x0, x3
    989c:	mov	x2, x1
    98a0:	add	x6, x3, w6, uxtw #4
    98a4:	nop
    98a8:	ldp	x4, x5, [x0], #16
    98ac:	stp	x4, x5, [x2], #16
    98b0:	cmp	x0, x6
    98b4:	b.ne	98a8 <_gcry_mpih_sub+0x90>  // b.any
    98b8:	and	w0, w7, #0xfffffffe
    98bc:	tbz	w7, #0, 983c <_gcry_mpih_sub+0x24>
    98c0:	sxtw	x0, w0
    98c4:	ldr	x2, [x3, x0, lsl #3]
    98c8:	str	x2, [x1, x0, lsl #3]
    98cc:	b	983c <_gcry_mpih_sub+0x24>
    98d0:	mov	w20, w4
    98d4:	mov	x2, x3
    98d8:	mov	w3, w4
    98dc:	bl	73b8 <_gcry_mpih_sub_n>
    98e0:	cmp	w20, w19
    98e4:	b.eq	9840 <_gcry_mpih_sub+0x28>  // b.none
    98e8:	sxtw	x6, w20
    98ec:	sbfiz	x2, x20, #3, #32
    98f0:	add	x5, x22, x2
    98f4:	add	x2, x21, x2
    98f8:	add	x1, x2, #0x8
    98fc:	sub	w19, w19, w20
    9900:	ldr	x4, [x22, x6, lsl #3]
    9904:	add	x3, x5, #0x8
    9908:	subs	x2, x4, x0
    990c:	str	x2, [x21, x6, lsl #3]
    9910:	cmp	x4, x0
    9914:	b.cc	992c <_gcry_mpih_sub+0x114>  // b.lo, b.ul, b.last
    9918:	b	9860 <_gcry_mpih_sub+0x48>
    991c:	ldr	x0, [x3], #8
    9920:	sub	x2, x0, #0x1
    9924:	str	x2, [x1], #8
    9928:	cbnz	x0, 9860 <_gcry_mpih_sub+0x48>
    992c:	subs	w19, w19, #0x1
    9930:	b.ne	991c <_gcry_mpih_sub+0x104>  // b.any
    9934:	mov	x0, #0x1                   	// #1
    9938:	ldp	x19, x20, [sp, #16]
    993c:	ldp	x21, x22, [sp, #32]
    9940:	ldp	x29, x30, [sp], #48
    9944:	ret
    9948:	mov	x0, #0x0                   	// #0
    994c:	nop
    9950:	ldr	x2, [x3, x0, lsl #3]
    9954:	str	x2, [x1, x0, lsl #3]
    9958:	add	x0, x0, #0x1
    995c:	cmp	w7, w0
    9960:	b.gt	9950 <_gcry_mpih_sub+0x138>
    9964:	b	983c <_gcry_mpih_sub+0x24>

0000000000009968 <_gcry_mpih_cmp>:
    9968:	subs	w2, w2, #0x1
    996c:	b.mi	999c <_gcry_mpih_cmp+0x34>  // b.first
    9970:	sxtw	x2, w2
    9974:	b	997c <_gcry_mpih_cmp+0x14>
    9978:	tbnz	w2, #31, 999c <_gcry_mpih_cmp+0x34>
    997c:	ldr	x4, [x0, x2, lsl #3]
    9980:	ldr	x3, [x1, x2, lsl #3]
    9984:	sub	x2, x2, #0x1
    9988:	cmp	x4, x3
    998c:	b.eq	9978 <_gcry_mpih_cmp+0x10>  // b.none
    9990:	mov	w0, #0xffffffff            	// #-1
    9994:	cneg	w0, w0, hi  // hi = pmore
    9998:	ret
    999c:	mov	w0, #0x0                   	// #0
    99a0:	ret
    99a4:	nop

00000000000099a8 <gcry_malloc>:
    99a8:	b	0 <grub_malloc>
    99ac:	nop

00000000000099b0 <gcry_malloc_secure>:
    99b0:	b	0 <grub_malloc>
    99b4:	nop

00000000000099b8 <gcry_free>:
    99b8:	b	0 <grub_free>
    99bc:	nop

00000000000099c0 <gcry_is_secure>:
    99c0:	mov	w0, #0x0                   	// #0
    99c4:	ret

00000000000099c8 <gcry_xcalloc>:
    99c8:	mul	x0, x0, x1
    99cc:	stp	x29, x30, [sp, #-16]!
    99d0:	mov	x29, sp
    99d4:	bl	0 <grub_zalloc>
    99d8:	cbz	x0, 99e4 <gcry_xcalloc+0x1c>
    99dc:	ldp	x29, x30, [sp], #16
    99e0:	ret
    99e4:	adrp	x0, 0 <_gcry_mpi_alloc>
    99e8:	ldr	x0, [x0]
    99ec:	bl	0 <grub_fatal>
	...

00000000000099f8 <gcry_xmalloc_secure>:
    99f8:	stp	x29, x30, [sp, #-16]!
    99fc:	mov	x29, sp
    9a00:	bl	0 <grub_malloc>
    9a04:	cbz	x0, 9a10 <gcry_xmalloc_secure+0x18>
    9a08:	ldp	x29, x30, [sp], #16
    9a0c:	ret
    9a10:	adrp	x0, 0 <_gcry_mpi_alloc>
    9a14:	ldr	x0, [x0]
    9a18:	bl	0 <grub_fatal>
    9a1c:	nop
	...

0000000000009a28 <gcry_xcalloc_secure>:
    9a28:	mul	x0, x0, x1
    9a2c:	stp	x29, x30, [sp, #-16]!
    9a30:	mov	x29, sp
    9a34:	bl	0 <grub_zalloc>
    9a38:	cbz	x0, 9a44 <gcry_xcalloc_secure+0x1c>
    9a3c:	ldp	x29, x30, [sp], #16
    9a40:	ret
    9a44:	adrp	x0, 0 <_gcry_mpi_alloc>
    9a48:	ldr	x0, [x0]
    9a4c:	bl	0 <grub_fatal>
	...

0000000000009a58 <gcry_xmalloc>:
    9a58:	stp	x29, x30, [sp, #-16]!
    9a5c:	mov	x29, sp
    9a60:	bl	0 <grub_malloc>
    9a64:	cbz	x0, 9a70 <gcry_xmalloc+0x18>
    9a68:	ldp	x29, x30, [sp], #16
    9a6c:	ret
    9a70:	adrp	x0, 0 <_gcry_mpi_alloc>
    9a74:	ldr	x0, [x0]
    9a78:	bl	0 <grub_fatal>
    9a7c:	nop
	...

0000000000009a88 <gcry_xrealloc>:
    9a88:	stp	x29, x30, [sp, #-16]!
    9a8c:	mov	x29, sp
    9a90:	bl	0 <grub_realloc>
    9a94:	cbz	x0, 9aa0 <gcry_xrealloc+0x18>
    9a98:	ldp	x29, x30, [sp], #16
    9a9c:	ret
    9aa0:	adrp	x0, 0 <_gcry_mpi_alloc>
    9aa4:	ldr	x0, [x0]
    9aa8:	bl	0 <grub_fatal>
    9aac:	nop
	...

0000000000009ab8 <_gcry_check_heap>:
    9ab8:	ret
    9abc:	nop

0000000000009ac0 <_gcry_log_printf>:
    9ac0:	stp	x29, x30, [sp, #-160]!
    9ac4:	adrp	x8, 0 <_gcry_mpi_alloc>
    9ac8:	mov	x29, sp
    9acc:	stp	x19, x20, [sp, #16]
    9ad0:	mov	x20, x0
    9ad4:	ldr	x0, [x8]
    9ad8:	stp	x1, x2, [sp, #104]
    9adc:	stp	x3, x4, [sp, #120]
    9ae0:	stp	x5, x6, [sp, #136]
    9ae4:	str	x7, [sp, #152]
    9ae8:	bl	0 <grub_env_get>
    9aec:	cbz	x0, 9b48 <_gcry_log_printf+0x88>
    9af0:	adrp	x1, 0 <_gcry_mpi_alloc>
    9af4:	mov	x19, x0
    9af8:	ldr	x1, [x1]
    9afc:	bl	0 <grub_strword>
    9b00:	cbz	w0, 9b54 <_gcry_log_printf+0x94>
    9b04:	adrp	x0, 0 <_gcry_mpi_alloc>
    9b08:	ldr	x0, [x0]
    9b0c:	bl	0 <grub_printf>
    9b10:	add	x1, sp, #0xa0
    9b14:	stp	x1, x1, [sp, #64]
    9b18:	add	x0, sp, #0x60
    9b1c:	mov	w2, #0xffffffc8            	// #-56
    9b20:	str	x0, [sp, #80]
    9b24:	stp	w2, wzr, [sp, #88]
    9b28:	add	x1, sp, #0x20
    9b2c:	ldp	x2, x3, [sp, #64]
    9b30:	stp	x2, x3, [sp, #32]
    9b34:	mov	x0, x20
    9b38:	ldp	x2, x3, [sp, #80]
    9b3c:	stp	x2, x3, [sp, #48]
    9b40:	bl	0 <grub_vprintf>
    9b44:	bl	0 <grub_refresh>
    9b48:	ldp	x19, x20, [sp, #16]
    9b4c:	ldp	x29, x30, [sp], #160
    9b50:	ret
    9b54:	adrp	x1, 0 <_gcry_mpi_alloc>
    9b58:	mov	x0, x19
    9b5c:	ldr	x1, [x1]
    9b60:	bl	0 <grub_strword>
    9b64:	cbnz	w0, 9b04 <_gcry_log_printf+0x44>
    9b68:	ldp	x19, x20, [sp, #16]
    9b6c:	ldp	x29, x30, [sp], #160
    9b70:	ret
    9b74:	nop
	...

0000000000009b98 <_gcry_log_bug>:
    9b98:	stp	x29, x30, [sp, #-160]!
    9b9c:	adrp	x8, 0 <_gcry_mpi_alloc>
    9ba0:	mov	x29, sp
    9ba4:	str	x19, [sp, #16]
    9ba8:	mov	x19, x0
    9bac:	ldr	x0, [x8]
    9bb0:	stp	x1, x2, [sp, #104]
    9bb4:	stp	x3, x4, [sp, #120]
    9bb8:	stp	x5, x6, [sp, #136]
    9bbc:	str	x7, [sp, #152]
    9bc0:	bl	0 <grub_printf>
    9bc4:	add	x0, sp, #0xa0
    9bc8:	stp	x0, x0, [sp, #64]
    9bcc:	add	x3, sp, #0x60
    9bd0:	mov	w2, #0xffffffc8            	// #-56
    9bd4:	str	x3, [sp, #80]
    9bd8:	stp	w2, wzr, [sp, #88]
    9bdc:	add	x1, sp, #0x20
    9be0:	ldp	x2, x3, [sp, #64]
    9be4:	stp	x2, x3, [sp, #32]
    9be8:	mov	x0, x19
    9bec:	ldp	x2, x3, [sp, #80]
    9bf0:	stp	x2, x3, [sp, #48]
    9bf4:	bl	0 <grub_vprintf>
    9bf8:	bl	0 <grub_refresh>
    9bfc:	adrp	x0, 0 <_gcry_mpi_alloc>
    9c00:	ldr	x0, [x0]
    9c04:	bl	0 <grub_fatal>
	...

0000000000009c18 <gpg_error_from_syserror>:
    9c18:	adrp	x0, 0 <_gcry_mpi_alloc>
    9c1c:	ldr	x0, [x0]
    9c20:	ldr	w0, [x0]
    9c24:	cbz	w0, 9c38 <gpg_error_from_syserror+0x20>
    9c28:	cmp	w0, #0x3
    9c2c:	mov	w1, #0x22                  	// #34
    9c30:	mov	w0, #0x8                   	// #8
    9c34:	csel	w0, w0, w1, ne  // ne = any
    9c38:	ret
    9c3c:	nop
	...
