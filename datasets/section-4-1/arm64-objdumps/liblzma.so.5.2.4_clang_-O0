
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//liblzma.so.5.2.4_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003058 <.init>:
    3058:	stp	x29, x30, [sp, #-16]!
    305c:	mov	x29, sp
    3060:	bl	3570 <pthread_cond_timedwait@plt+0x10>
    3064:	ldp	x29, x30, [sp], #16
    3068:	ret

Disassembly of section .plt:

0000000000003070 <memcpy@plt-0x20>:
    3070:	stp	x16, x30, [sp, #-16]!
    3074:	adrp	x16, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    3078:	ldr	x17, [x16, #4088]
    307c:	add	x16, x16, #0xff8
    3080:	br	x17
    3084:	nop
    3088:	nop
    308c:	nop

0000000000003090 <memcpy@plt>:
    3090:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16]
    3098:	add	x16, x16, #0x0
    309c:	br	x17

00000000000030a0 <lzma_index_iter_rewind@plt>:
    30a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #8]
    30a8:	add	x16, x16, #0x8
    30ac:	br	x17

00000000000030b0 <memmove@plt>:
    30b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #16]
    30b8:	add	x16, x16, #0x10
    30bc:	br	x17

00000000000030c0 <pthread_sigmask@plt>:
    30c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #24]
    30c8:	add	x16, x16, #0x18
    30cc:	br	x17

00000000000030d0 <lzma_block_buffer_encode@plt>:
    30d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #32]
    30d8:	add	x16, x16, #0x20
    30dc:	br	x17

00000000000030e0 <lzma_check_is_supported@plt>:
    30e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #40]
    30e8:	add	x16, x16, #0x28
    30ec:	br	x17

00000000000030f0 <lzma_filter_flags_size@plt>:
    30f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #48]
    30f8:	add	x16, x16, #0x30
    30fc:	br	x17

0000000000003100 <lzma_index_buffer_encode@plt>:
    3100:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #56]
    3108:	add	x16, x16, #0x38
    310c:	br	x17

0000000000003110 <lzma_stream_flags_compare@plt>:
    3110:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #64]
    3118:	add	x16, x16, #0x40
    311c:	br	x17

0000000000003120 <lzma_block_buffer_bound@plt>:
    3120:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #72]
    3128:	add	x16, x16, #0x48
    312c:	br	x17

0000000000003130 <lzma_index_hash_decode@plt>:
    3130:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #80]
    3138:	add	x16, x16, #0x50
    313c:	br	x17

0000000000003140 <__cxa_finalize@plt>:
    3140:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #88]
    3148:	add	x16, x16, #0x58
    314c:	br	x17

0000000000003150 <clock_gettime@plt>:
    3150:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #96]
    3158:	add	x16, x16, #0x60
    315c:	br	x17

0000000000003160 <lzma_block_header_size@plt>:
    3160:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #104]
    3168:	add	x16, x16, #0x68
    316c:	br	x17

0000000000003170 <sigfillset@plt>:
    3170:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #112]
    3178:	add	x16, x16, #0x70
    317c:	br	x17

0000000000003180 <lzma_index_memusage@plt>:
    3180:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #120]
    3188:	add	x16, x16, #0x78
    318c:	br	x17

0000000000003190 <lzma_block_unpadded_size@plt>:
    3190:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #128]
    3198:	add	x16, x16, #0x80
    319c:	br	x17

00000000000031a0 <malloc@plt>:
    31a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #136]
    31a8:	add	x16, x16, #0x88
    31ac:	br	x17

00000000000031b0 <lzma_index_hash_append@plt>:
    31b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #144]
    31b8:	add	x16, x16, #0x90
    31bc:	br	x17

00000000000031c0 <lzma_crc32@plt>:
    31c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #152]
    31c8:	add	x16, x16, #0x98
    31cc:	br	x17

00000000000031d0 <lzma_index_checks@plt>:
    31d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #160]
    31d8:	add	x16, x16, #0xa0
    31dc:	br	x17

00000000000031e0 <pthread_condattr_destroy@plt>:
    31e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #168]
    31e8:	add	x16, x16, #0xa8
    31ec:	br	x17

00000000000031f0 <lzma_stream_buffer_encode@plt>:
    31f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #176]
    31f8:	add	x16, x16, #0xb0
    31fc:	br	x17

0000000000003200 <pthread_cond_signal@plt>:
    3200:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #184]
    3208:	add	x16, x16, #0xb8
    320c:	br	x17

0000000000003210 <lzma_stream_footer_encode@plt>:
    3210:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #192]
    3218:	add	x16, x16, #0xc0
    321c:	br	x17

0000000000003220 <lzma_raw_encoder_memusage@plt>:
    3220:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #200]
    3228:	add	x16, x16, #0xc8
    322c:	br	x17

0000000000003230 <memset@plt>:
    3230:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #208]
    3238:	add	x16, x16, #0xd0
    323c:	br	x17

0000000000003240 <lzma_filters_copy@plt>:
    3240:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #216]
    3248:	add	x16, x16, #0xd8
    324c:	br	x17

0000000000003250 <lzma_properties_decode@plt>:
    3250:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #224]
    3258:	add	x16, x16, #0xe0
    325c:	br	x17

0000000000003260 <calloc@plt>:
    3260:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #232]
    3268:	add	x16, x16, #0xe8
    326c:	br	x17

0000000000003270 <lzma_check_size@plt>:
    3270:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #240]
    3278:	add	x16, x16, #0xf0
    327c:	br	x17

0000000000003280 <lzma_index_hash_init@plt>:
    3280:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #248]
    3288:	add	x16, x16, #0xf8
    328c:	br	x17

0000000000003290 <lzma_crc64@plt>:
    3290:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #256]
    3298:	add	x16, x16, #0x100
    329c:	br	x17

00000000000032a0 <pthread_mutex_init@plt>:
    32a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #264]
    32a8:	add	x16, x16, #0x108
    32ac:	br	x17

00000000000032b0 <pthread_create@plt>:
    32b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #272]
    32b8:	add	x16, x16, #0x110
    32bc:	br	x17

00000000000032c0 <__gmon_start__@plt>:
    32c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #280]
    32c8:	add	x16, x16, #0x118
    32cc:	br	x17

00000000000032d0 <pthread_join@plt>:
    32d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #288]
    32d8:	add	x16, x16, #0x120
    32dc:	br	x17

00000000000032e0 <lzma_raw_decoder_memusage@plt>:
    32e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #296]
    32e8:	add	x16, x16, #0x128
    32ec:	br	x17

00000000000032f0 <sched_getaffinity@plt>:
    32f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #304]
    32f8:	add	x16, x16, #0x130
    32fc:	br	x17

0000000000003300 <lzma_index_append@plt>:
    3300:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #312]
    3308:	add	x16, x16, #0x138
    330c:	br	x17

0000000000003310 <lzma_index_hash_end@plt>:
    3310:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #320]
    3318:	add	x16, x16, #0x140
    331c:	br	x17

0000000000003320 <lzma_end@plt>:
    3320:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #328]
    3328:	add	x16, x16, #0x148
    332c:	br	x17

0000000000003330 <memcmp@plt>:
    3330:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #336]
    3338:	add	x16, x16, #0x150
    333c:	br	x17

0000000000003340 <lzma_block_header_decode@plt>:
    3340:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #344]
    3348:	add	x16, x16, #0x158
    334c:	br	x17

0000000000003350 <lzma_filter_flags_encode@plt>:
    3350:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #352]
    3358:	add	x16, x16, #0x160
    335c:	br	x17

0000000000003360 <lzma_index_file_size@plt>:
    3360:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #360]
    3368:	add	x16, x16, #0x168
    336c:	br	x17

0000000000003370 <lzma_properties_size@plt>:
    3370:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #368]
    3378:	add	x16, x16, #0x170
    337c:	br	x17

0000000000003380 <free@plt>:
    3380:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #376]
    3388:	add	x16, x16, #0x178
    338c:	br	x17

0000000000003390 <lzma_stream_header_encode@plt>:
    3390:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #384]
    3398:	add	x16, x16, #0x180
    339c:	br	x17

00000000000033a0 <pthread_cond_wait@plt>:
    33a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    33a4:	ldr	x17, [x16, #392]
    33a8:	add	x16, x16, #0x188
    33ac:	br	x17

00000000000033b0 <lzma_index_init@plt>:
    33b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x17, [x16, #400]
    33b8:	add	x16, x16, #0x190
    33bc:	br	x17

00000000000033c0 <lzma_vli_decode@plt>:
    33c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    33c4:	ldr	x17, [x16, #408]
    33c8:	add	x16, x16, #0x198
    33cc:	br	x17

00000000000033d0 <pthread_condattr_init@plt>:
    33d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    33d4:	ldr	x17, [x16, #416]
    33d8:	add	x16, x16, #0x1a0
    33dc:	br	x17

00000000000033e0 <lzma_index_end@plt>:
    33e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    33e4:	ldr	x17, [x16, #424]
    33e8:	add	x16, x16, #0x1a8
    33ec:	br	x17

00000000000033f0 <__sched_cpucount@plt>:
    33f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    33f4:	ldr	x17, [x16, #432]
    33f8:	add	x16, x16, #0x1b0
    33fc:	br	x17

0000000000003400 <lzma_properties_encode@plt>:
    3400:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3404:	ldr	x17, [x16, #440]
    3408:	add	x16, x16, #0x1b8
    340c:	br	x17

0000000000003410 <pthread_mutex_destroy@plt>:
    3410:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3414:	ldr	x17, [x16, #448]
    3418:	add	x16, x16, #0x1c0
    341c:	br	x17

0000000000003420 <pthread_cond_init@plt>:
    3420:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3424:	ldr	x17, [x16, #456]
    3428:	add	x16, x16, #0x1c8
    342c:	br	x17

0000000000003430 <lzma_stream_footer_decode@plt>:
    3430:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3434:	ldr	x17, [x16, #464]
    3438:	add	x16, x16, #0x1d0
    343c:	br	x17

0000000000003440 <lzma_lzma_preset@plt>:
    3440:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3444:	ldr	x17, [x16, #472]
    3448:	add	x16, x16, #0x1d8
    344c:	br	x17

0000000000003450 <lzma_vli_encode@plt>:
    3450:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3454:	ldr	x17, [x16, #480]
    3458:	add	x16, x16, #0x1e0
    345c:	br	x17

0000000000003460 <lzma_index_iter_next@plt>:
    3460:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3464:	ldr	x17, [x16, #488]
    3468:	add	x16, x16, #0x1e8
    346c:	br	x17

0000000000003470 <sysconf@plt>:
    3470:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3474:	ldr	x17, [x16, #496]
    3478:	add	x16, x16, #0x1f0
    347c:	br	x17

0000000000003480 <lzma_vli_size@plt>:
    3480:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3484:	ldr	x17, [x16, #504]
    3488:	add	x16, x16, #0x1f8
    348c:	br	x17

0000000000003490 <pthread_condattr_setclock@plt>:
    3490:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3494:	ldr	x17, [x16, #512]
    3498:	add	x16, x16, #0x200
    349c:	br	x17

00000000000034a0 <lzma_stream_encoder@plt>:
    34a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    34a4:	ldr	x17, [x16, #520]
    34a8:	add	x16, x16, #0x208
    34ac:	br	x17

00000000000034b0 <lzma_index_iter_init@plt>:
    34b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    34b4:	ldr	x17, [x16, #528]
    34b8:	add	x16, x16, #0x210
    34bc:	br	x17

00000000000034c0 <lzma_block_uncomp_encode@plt>:
    34c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    34c4:	ldr	x17, [x16, #536]
    34c8:	add	x16, x16, #0x218
    34cc:	br	x17

00000000000034d0 <lzma_index_hash_size@plt>:
    34d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    34d4:	ldr	x17, [x16, #544]
    34d8:	add	x16, x16, #0x220
    34dc:	br	x17

00000000000034e0 <lzma_index_block_count@plt>:
    34e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    34e4:	ldr	x17, [x16, #552]
    34e8:	add	x16, x16, #0x228
    34ec:	br	x17

00000000000034f0 <lzma_stream_header_decode@plt>:
    34f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    34f4:	ldr	x17, [x16, #560]
    34f8:	add	x16, x16, #0x230
    34fc:	br	x17

0000000000003500 <lzma_filter_flags_decode@plt>:
    3500:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3504:	ldr	x17, [x16, #568]
    3508:	add	x16, x16, #0x238
    350c:	br	x17

0000000000003510 <lzma_index_size@plt>:
    3510:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3514:	ldr	x17, [x16, #576]
    3518:	add	x16, x16, #0x240
    351c:	br	x17

0000000000003520 <pthread_cond_destroy@plt>:
    3520:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3524:	ldr	x17, [x16, #584]
    3528:	add	x16, x16, #0x248
    352c:	br	x17

0000000000003530 <pthread_mutex_lock@plt>:
    3530:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3534:	ldr	x17, [x16, #592]
    3538:	add	x16, x16, #0x250
    353c:	br	x17

0000000000003540 <lzma_block_header_encode@plt>:
    3540:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3544:	ldr	x17, [x16, #600]
    3548:	add	x16, x16, #0x258
    354c:	br	x17

0000000000003550 <pthread_mutex_unlock@plt>:
    3550:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3554:	ldr	x17, [x16, #608]
    3558:	add	x16, x16, #0x260
    355c:	br	x17

0000000000003560 <pthread_cond_timedwait@plt>:
    3560:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    3564:	ldr	x17, [x16, #616]
    3568:	add	x16, x16, #0x268
    356c:	br	x17

Disassembly of section .text:

0000000000003570 <lzma_version_number@@XZ_5.0-0x194>:
    3570:	adrp	x0, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    3574:	ldr	x0, [x0, #3968]
    3578:	cbz	x0, 3580 <pthread_cond_timedwait@plt+0x20>
    357c:	b	32c0 <__gmon_start__@plt>
    3580:	ret
    3584:	nop
    3588:	adrp	x0, 43000 <lzma_mode_is_supported@@XZ_5.0+0x28a98>
    358c:	add	x0, x0, #0x278
    3590:	adrp	x1, 43000 <lzma_mode_is_supported@@XZ_5.0+0x28a98>
    3594:	add	x1, x1, #0x278
    3598:	cmp	x1, x0
    359c:	b.eq	35b4 <pthread_cond_timedwait@plt+0x54>  // b.none
    35a0:	adrp	x1, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    35a4:	ldr	x1, [x1, #3904]
    35a8:	cbz	x1, 35b4 <pthread_cond_timedwait@plt+0x54>
    35ac:	mov	x16, x1
    35b0:	br	x16
    35b4:	ret
    35b8:	adrp	x0, 43000 <lzma_mode_is_supported@@XZ_5.0+0x28a98>
    35bc:	add	x0, x0, #0x278
    35c0:	adrp	x1, 43000 <lzma_mode_is_supported@@XZ_5.0+0x28a98>
    35c4:	add	x1, x1, #0x278
    35c8:	sub	x1, x1, x0
    35cc:	lsr	x2, x1, #63
    35d0:	add	x1, x2, x1, asr #3
    35d4:	cmp	xzr, x1, asr #1
    35d8:	asr	x1, x1, #1
    35dc:	b.eq	35f4 <pthread_cond_timedwait@plt+0x94>  // b.none
    35e0:	adrp	x2, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    35e4:	ldr	x2, [x2, #4040]
    35e8:	cbz	x2, 35f4 <pthread_cond_timedwait@plt+0x94>
    35ec:	mov	x16, x2
    35f0:	br	x16
    35f4:	ret
    35f8:	stp	x29, x30, [sp, #-32]!
    35fc:	mov	x29, sp
    3600:	str	x19, [sp, #16]
    3604:	adrp	x19, 43000 <lzma_mode_is_supported@@XZ_5.0+0x28a98>
    3608:	ldrb	w0, [x19, #632]
    360c:	cbnz	w0, 3634 <pthread_cond_timedwait@plt+0xd4>
    3610:	adrp	x0, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    3614:	ldr	x0, [x0, #3920]
    3618:	cbz	x0, 3628 <pthread_cond_timedwait@plt+0xc8>
    361c:	adrp	x0, 43000 <lzma_mode_is_supported@@XZ_5.0+0x28a98>
    3620:	ldr	x0, [x0, #624]
    3624:	bl	3140 <__cxa_finalize@plt>
    3628:	bl	3588 <pthread_cond_timedwait@plt+0x28>
    362c:	mov	w0, #0x1                   	// #1
    3630:	strb	w0, [x19, #632]
    3634:	ldr	x19, [sp, #16]
    3638:	ldp	x29, x30, [sp], #32
    363c:	ret
    3640:	b	35b8 <pthread_cond_timedwait@plt+0x58>
    3644:	sub	sp, sp, #0x40
    3648:	stp	x29, x30, [sp, #48]
    364c:	add	x29, sp, #0x30
    3650:	mov	w0, #0x1e                  	// #30
    3654:	mov	w8, #0x55                  	// #85
    3658:	mov	x9, #0xffffffffffffffff    	// #-1
    365c:	stur	xzr, [x29, #-8]
    3660:	str	w8, [sp, #20]
    3664:	str	x9, [sp, #8]
    3668:	bl	3470 <sysconf@plt>
    366c:	stur	x0, [x29, #-16]
    3670:	ldr	w0, [sp, #20]
    3674:	bl	3470 <sysconf@plt>
    3678:	str	x0, [sp, #24]
    367c:	ldur	x9, [x29, #-16]
    3680:	ldr	x10, [sp, #8]
    3684:	cmp	x9, x10
    3688:	b.eq	36ac <pthread_cond_timedwait@plt+0x14c>  // b.none
    368c:	ldr	x8, [sp, #24]
    3690:	mov	x9, #0xffffffffffffffff    	// #-1
    3694:	cmp	x8, x9
    3698:	b.eq	36ac <pthread_cond_timedwait@plt+0x14c>  // b.none
    369c:	ldur	x8, [x29, #-16]
    36a0:	ldr	x9, [sp, #24]
    36a4:	mul	x8, x8, x9
    36a8:	stur	x8, [x29, #-8]
    36ac:	ldur	x0, [x29, #-8]
    36b0:	ldp	x29, x30, [sp, #48]
    36b4:	add	sp, sp, #0x40
    36b8:	ret
    36bc:	sub	sp, sp, #0xa0
    36c0:	stp	x29, x30, [sp, #144]
    36c4:	add	x29, sp, #0x90
    36c8:	mov	w8, wzr
    36cc:	mov	x1, #0x80                  	// #128
    36d0:	add	x2, sp, #0x8
    36d4:	stur	wzr, [x29, #-4]
    36d8:	mov	w0, w8
    36dc:	bl	32f0 <sched_getaffinity@plt>
    36e0:	cbnz	w0, 36f4 <pthread_cond_timedwait@plt+0x194>
    36e4:	mov	x0, #0x80                  	// #128
    36e8:	add	x1, sp, #0x8
    36ec:	bl	33f0 <__sched_cpucount@plt>
    36f0:	stur	w0, [x29, #-4]
    36f4:	ldur	w0, [x29, #-4]
    36f8:	ldp	x29, x30, [sp, #144]
    36fc:	add	sp, sp, #0xa0
    3700:	ret

0000000000003704 <lzma_version_number@@XZ_5.0>:
    3704:	mov	w0, #0x3eca                	// #16074
    3708:	movk	w0, #0x2fb, lsl #16
    370c:	ret

0000000000003710 <lzma_version_string@@XZ_5.0>:
    3710:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    3714:	add	x0, x0, #0x8f4
    3718:	ret
    371c:	sub	sp, sp, #0x30
    3720:	stp	x29, x30, [sp, #32]
    3724:	add	x29, sp, #0x20
    3728:	stur	x0, [x29, #-8]
    372c:	str	x1, [sp, #16]
    3730:	ldur	x8, [x29, #-8]
    3734:	cbnz	x8, 3740 <lzma_version_string@@XZ_5.0+0x30>
    3738:	mov	x8, #0x1                   	// #1
    373c:	stur	x8, [x29, #-8]
    3740:	ldr	x8, [sp, #16]
    3744:	cbz	x8, 3778 <lzma_version_string@@XZ_5.0+0x68>
    3748:	ldr	x8, [sp, #16]
    374c:	ldr	x8, [x8]
    3750:	cbz	x8, 3778 <lzma_version_string@@XZ_5.0+0x68>
    3754:	ldr	x8, [sp, #16]
    3758:	ldr	x8, [x8]
    375c:	ldr	x9, [sp, #16]
    3760:	ldr	x0, [x9, #16]
    3764:	ldur	x2, [x29, #-8]
    3768:	mov	x1, #0x1                   	// #1
    376c:	blr	x8
    3770:	str	x0, [sp, #8]
    3774:	b	3784 <lzma_version_string@@XZ_5.0+0x74>
    3778:	ldur	x0, [x29, #-8]
    377c:	bl	31a0 <malloc@plt>
    3780:	str	x0, [sp, #8]
    3784:	ldr	x0, [sp, #8]
    3788:	ldp	x29, x30, [sp, #32]
    378c:	add	sp, sp, #0x30
    3790:	ret
    3794:	sub	sp, sp, #0x30
    3798:	stp	x29, x30, [sp, #32]
    379c:	add	x29, sp, #0x20
    37a0:	stur	x0, [x29, #-8]
    37a4:	str	x1, [sp, #16]
    37a8:	ldur	x8, [x29, #-8]
    37ac:	cbnz	x8, 37b8 <lzma_version_string@@XZ_5.0+0xa8>
    37b0:	mov	x8, #0x1                   	// #1
    37b4:	stur	x8, [x29, #-8]
    37b8:	ldr	x8, [sp, #16]
    37bc:	cbz	x8, 380c <lzma_version_string@@XZ_5.0+0xfc>
    37c0:	ldr	x8, [sp, #16]
    37c4:	ldr	x8, [x8]
    37c8:	cbz	x8, 380c <lzma_version_string@@XZ_5.0+0xfc>
    37cc:	ldr	x8, [sp, #16]
    37d0:	ldr	x8, [x8]
    37d4:	ldr	x9, [sp, #16]
    37d8:	ldr	x0, [x9, #16]
    37dc:	ldur	x2, [x29, #-8]
    37e0:	mov	x1, #0x1                   	// #1
    37e4:	blr	x8
    37e8:	str	x0, [sp, #8]
    37ec:	ldr	x8, [sp, #8]
    37f0:	cbz	x8, 3808 <lzma_version_string@@XZ_5.0+0xf8>
    37f4:	ldr	x0, [sp, #8]
    37f8:	ldur	x2, [x29, #-8]
    37fc:	mov	w8, wzr
    3800:	mov	w1, w8
    3804:	bl	3230 <memset@plt>
    3808:	b	381c <lzma_version_string@@XZ_5.0+0x10c>
    380c:	ldur	x1, [x29, #-8]
    3810:	mov	x0, #0x1                   	// #1
    3814:	bl	3260 <calloc@plt>
    3818:	str	x0, [sp, #8]
    381c:	ldr	x0, [sp, #8]
    3820:	ldp	x29, x30, [sp, #32]
    3824:	add	sp, sp, #0x30
    3828:	ret
    382c:	sub	sp, sp, #0x20
    3830:	stp	x29, x30, [sp, #16]
    3834:	add	x29, sp, #0x10
    3838:	str	x0, [sp, #8]
    383c:	str	x1, [sp]
    3840:	ldr	x8, [sp]
    3844:	cbz	x8, 3870 <lzma_version_string@@XZ_5.0+0x160>
    3848:	ldr	x8, [sp]
    384c:	ldr	x8, [x8, #8]
    3850:	cbz	x8, 3870 <lzma_version_string@@XZ_5.0+0x160>
    3854:	ldr	x8, [sp]
    3858:	ldr	x8, [x8, #8]
    385c:	ldr	x9, [sp]
    3860:	ldr	x0, [x9, #16]
    3864:	ldr	x1, [sp, #8]
    3868:	blr	x8
    386c:	b	3878 <lzma_version_string@@XZ_5.0+0x168>
    3870:	ldr	x0, [sp, #8]
    3874:	bl	3380 <free@plt>
    3878:	ldp	x29, x30, [sp, #16]
    387c:	add	sp, sp, #0x20
    3880:	ret
    3884:	sub	sp, sp, #0x60
    3888:	stp	x29, x30, [sp, #80]
    388c:	add	x29, sp, #0x50
    3890:	stur	x0, [x29, #-8]
    3894:	stur	x1, [x29, #-16]
    3898:	stur	x2, [x29, #-24]
    389c:	stur	x3, [x29, #-32]
    38a0:	str	x4, [sp, #40]
    38a4:	str	x5, [sp, #32]
    38a8:	ldur	x8, [x29, #-24]
    38ac:	ldur	x9, [x29, #-16]
    38b0:	ldr	x9, [x9]
    38b4:	subs	x8, x8, x9
    38b8:	str	x8, [sp, #24]
    38bc:	ldr	x8, [sp, #32]
    38c0:	ldr	x9, [sp, #40]
    38c4:	ldr	x9, [x9]
    38c8:	subs	x8, x8, x9
    38cc:	str	x8, [sp, #16]
    38d0:	ldr	x8, [sp, #24]
    38d4:	ldr	x9, [sp, #16]
    38d8:	cmp	x8, x9
    38dc:	b.cs	38ec <lzma_version_string@@XZ_5.0+0x1dc>  // b.hs, b.nlast
    38e0:	ldr	x8, [sp, #24]
    38e4:	str	x8, [sp]
    38e8:	b	38f4 <lzma_version_string@@XZ_5.0+0x1e4>
    38ec:	ldr	x8, [sp, #16]
    38f0:	str	x8, [sp]
    38f4:	ldr	x8, [sp]
    38f8:	str	x8, [sp, #8]
    38fc:	ldur	x8, [x29, #-32]
    3900:	ldr	x9, [sp, #40]
    3904:	ldr	x9, [x9]
    3908:	add	x0, x8, x9
    390c:	ldur	x8, [x29, #-8]
    3910:	ldur	x9, [x29, #-16]
    3914:	ldr	x9, [x9]
    3918:	add	x1, x8, x9
    391c:	ldr	x2, [sp, #8]
    3920:	bl	3090 <memcpy@plt>
    3924:	ldr	x8, [sp, #8]
    3928:	ldur	x9, [x29, #-16]
    392c:	ldr	x10, [x9]
    3930:	add	x8, x10, x8
    3934:	str	x8, [x9]
    3938:	ldr	x8, [sp, #8]
    393c:	ldr	x9, [sp, #40]
    3940:	ldr	x10, [x9]
    3944:	add	x8, x10, x8
    3948:	str	x8, [x9]
    394c:	ldr	x0, [sp, #8]
    3950:	ldp	x29, x30, [sp, #80]
    3954:	add	sp, sp, #0x60
    3958:	ret
    395c:	sub	sp, sp, #0x30
    3960:	stp	x29, x30, [sp, #32]
    3964:	add	x29, sp, #0x20
    3968:	stur	x0, [x29, #-8]
    396c:	str	x1, [sp, #16]
    3970:	str	x2, [sp, #8]
    3974:	ldr	x8, [sp, #8]
    3978:	ldr	x8, [x8, #8]
    397c:	ldur	x9, [x29, #-8]
    3980:	ldr	x9, [x9, #16]
    3984:	cmp	x8, x9
    3988:	b.eq	3998 <lzma_version_string@@XZ_5.0+0x288>  // b.none
    398c:	ldur	x0, [x29, #-8]
    3990:	ldr	x1, [sp, #16]
    3994:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    3998:	ldr	x8, [sp, #8]
    399c:	ldr	x8, [x8, #8]
    39a0:	ldur	x9, [x29, #-8]
    39a4:	str	x8, [x9, #16]
    39a8:	ldr	x8, [sp, #8]
    39ac:	ldr	x8, [x8]
    39b0:	ldur	x9, [x29, #-8]
    39b4:	str	x8, [x9, #8]
    39b8:	ldr	x8, [sp, #8]
    39bc:	ldr	x8, [x8, #8]
    39c0:	cbnz	x8, 39d0 <lzma_version_string@@XZ_5.0+0x2c0>
    39c4:	mov	w8, wzr
    39c8:	str	w8, [sp, #4]
    39cc:	b	39ec <lzma_version_string@@XZ_5.0+0x2dc>
    39d0:	ldr	x8, [sp, #8]
    39d4:	ldr	x8, [x8, #8]
    39d8:	ldur	x0, [x29, #-8]
    39dc:	ldr	x1, [sp, #16]
    39e0:	ldr	x2, [sp, #8]
    39e4:	blr	x8
    39e8:	str	w0, [sp, #4]
    39ec:	ldr	w8, [sp, #4]
    39f0:	mov	w0, w8
    39f4:	ldp	x29, x30, [sp, #32]
    39f8:	add	sp, sp, #0x30
    39fc:	ret
    3a00:	sub	sp, sp, #0x80
    3a04:	stp	x29, x30, [sp, #112]
    3a08:	add	x29, sp, #0x70
    3a0c:	stur	x0, [x29, #-8]
    3a10:	stur	x1, [x29, #-16]
    3a14:	ldur	x8, [x29, #-8]
    3a18:	ldr	x8, [x8, #16]
    3a1c:	cbz	x8, 3aa0 <lzma_version_string@@XZ_5.0+0x390>
    3a20:	ldur	x8, [x29, #-8]
    3a24:	ldr	x8, [x8, #32]
    3a28:	cbz	x8, 3a48 <lzma_version_string@@XZ_5.0+0x338>
    3a2c:	ldur	x8, [x29, #-8]
    3a30:	ldr	x8, [x8, #32]
    3a34:	ldur	x9, [x29, #-8]
    3a38:	ldr	x0, [x9]
    3a3c:	ldur	x1, [x29, #-16]
    3a40:	blr	x8
    3a44:	b	3a58 <lzma_version_string@@XZ_5.0+0x348>
    3a48:	ldur	x8, [x29, #-8]
    3a4c:	ldr	x0, [x8]
    3a50:	ldur	x1, [x29, #-16]
    3a54:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    3a58:	ldur	x0, [x29, #-8]
    3a5c:	add	x8, sp, #0x18
    3a60:	str	x0, [sp, #16]
    3a64:	mov	x0, x8
    3a68:	mov	w9, wzr
    3a6c:	mov	w1, w9
    3a70:	mov	x10, #0x48                  	// #72
    3a74:	mov	x2, x10
    3a78:	str	x8, [sp, #8]
    3a7c:	str	x10, [sp]
    3a80:	bl	3230 <memset@plt>
    3a84:	mov	x8, #0xffffffffffffffff    	// #-1
    3a88:	str	x8, [sp, #32]
    3a8c:	str	xzr, [sp, #40]
    3a90:	ldr	x0, [sp, #16]
    3a94:	ldr	x1, [sp, #8]
    3a98:	ldr	x2, [sp]
    3a9c:	bl	3090 <memcpy@plt>
    3aa0:	ldp	x29, x30, [sp, #112]
    3aa4:	add	sp, sp, #0x80
    3aa8:	ret
    3aac:	sub	sp, sp, #0x30
    3ab0:	stp	x29, x30, [sp, #32]
    3ab4:	add	x29, sp, #0x20
    3ab8:	str	x0, [sp, #16]
    3abc:	str	x1, [sp, #8]
    3ac0:	str	x2, [sp]
    3ac4:	ldr	x8, [sp]
    3ac8:	ldr	x8, [x8]
    3acc:	ldr	x9, [sp, #16]
    3ad0:	ldr	x9, [x9, #8]
    3ad4:	cmp	x8, x9
    3ad8:	b.eq	3ae8 <lzma_version_string@@XZ_5.0+0x3d8>  // b.none
    3adc:	mov	w8, #0xb                   	// #11
    3ae0:	stur	w8, [x29, #-4]
    3ae4:	b	3b2c <lzma_version_string@@XZ_5.0+0x41c>
    3ae8:	ldr	x8, [sp]
    3aec:	ldr	x8, [x8]
    3af0:	mov	x9, #0xffffffffffffffff    	// #-1
    3af4:	cmp	x8, x9
    3af8:	b.ne	3b04 <lzma_version_string@@XZ_5.0+0x3f4>  // b.any
    3afc:	stur	wzr, [x29, #-4]
    3b00:	b	3b2c <lzma_version_string@@XZ_5.0+0x41c>
    3b04:	ldr	x8, [sp, #16]
    3b08:	ldr	x8, [x8, #64]
    3b0c:	ldr	x9, [sp, #16]
    3b10:	ldr	x0, [x9]
    3b14:	ldr	x1, [sp, #8]
    3b18:	ldr	x3, [sp]
    3b1c:	mov	x9, xzr
    3b20:	mov	x2, x9
    3b24:	blr	x8
    3b28:	stur	w0, [x29, #-4]
    3b2c:	ldur	w0, [x29, #-4]
    3b30:	ldp	x29, x30, [sp, #32]
    3b34:	add	sp, sp, #0x30
    3b38:	ret
    3b3c:	sub	sp, sp, #0x80
    3b40:	stp	x29, x30, [sp, #112]
    3b44:	add	x29, sp, #0x70
    3b48:	stur	x0, [x29, #-16]
    3b4c:	ldur	x8, [x29, #-16]
    3b50:	cbnz	x8, 3b60 <lzma_version_string@@XZ_5.0+0x450>
    3b54:	mov	w8, #0xb                   	// #11
    3b58:	stur	w8, [x29, #-4]
    3b5c:	b	3c2c <lzma_version_string@@XZ_5.0+0x51c>
    3b60:	ldur	x8, [x29, #-16]
    3b64:	ldr	x8, [x8, #56]
    3b68:	cbnz	x8, 3be8 <lzma_version_string@@XZ_5.0+0x4d8>
    3b6c:	ldur	x8, [x29, #-16]
    3b70:	ldr	x1, [x8, #48]
    3b74:	mov	x0, #0x60                  	// #96
    3b78:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    3b7c:	ldur	x8, [x29, #-16]
    3b80:	str	x0, [x8, #56]
    3b84:	ldur	x8, [x29, #-16]
    3b88:	ldr	x8, [x8, #56]
    3b8c:	cbnz	x8, 3b9c <lzma_version_string@@XZ_5.0+0x48c>
    3b90:	mov	w8, #0x5                   	// #5
    3b94:	stur	w8, [x29, #-4]
    3b98:	b	3c2c <lzma_version_string@@XZ_5.0+0x51c>
    3b9c:	ldur	x8, [x29, #-16]
    3ba0:	ldr	x0, [x8, #56]
    3ba4:	add	x8, sp, #0x18
    3ba8:	str	x0, [sp, #16]
    3bac:	mov	x0, x8
    3bb0:	mov	w9, wzr
    3bb4:	mov	w1, w9
    3bb8:	mov	x10, #0x48                  	// #72
    3bbc:	mov	x2, x10
    3bc0:	str	x8, [sp, #8]
    3bc4:	str	x10, [sp]
    3bc8:	bl	3230 <memset@plt>
    3bcc:	mov	x8, #0xffffffffffffffff    	// #-1
    3bd0:	str	x8, [sp, #32]
    3bd4:	str	xzr, [sp, #40]
    3bd8:	ldr	x0, [sp, #16]
    3bdc:	ldr	x1, [sp, #8]
    3be0:	ldr	x2, [sp]
    3be4:	bl	3090 <memcpy@plt>
    3be8:	ldur	x8, [x29, #-16]
    3bec:	ldr	x8, [x8, #56]
    3bf0:	str	wzr, [x8, #88]
    3bf4:	mov	w9, #0x0                   	// #0
    3bf8:	strb	w9, [x8, #92]
    3bfc:	ldur	x8, [x29, #-16]
    3c00:	ldr	x8, [x8, #56]
    3c04:	str	wzr, [x8, #72]
    3c08:	ldur	x8, [x29, #-16]
    3c0c:	ldr	x8, [x8, #56]
    3c10:	mov	w9, #0x0                   	// #0
    3c14:	strb	w9, [x8, #93]
    3c18:	ldur	x8, [x29, #-16]
    3c1c:	str	xzr, [x8, #16]
    3c20:	ldur	x8, [x29, #-16]
    3c24:	str	xzr, [x8, #40]
    3c28:	stur	wzr, [x29, #-4]
    3c2c:	ldur	w0, [x29, #-4]
    3c30:	ldp	x29, x30, [sp, #112]
    3c34:	add	sp, sp, #0x80
    3c38:	ret

0000000000003c3c <lzma_code@@XZ_5.0>:
    3c3c:	sub	sp, sp, #0x60
    3c40:	stp	x29, x30, [sp, #80]
    3c44:	add	x29, sp, #0x50
    3c48:	stur	x0, [x29, #-16]
    3c4c:	stur	w1, [x29, #-20]
    3c50:	ldur	x8, [x29, #-16]
    3c54:	ldr	x8, [x8]
    3c58:	cbnz	x8, 3c68 <lzma_code@@XZ_5.0+0x2c>
    3c5c:	ldur	x8, [x29, #-16]
    3c60:	ldr	x8, [x8, #8]
    3c64:	cbnz	x8, 3cc8 <lzma_code@@XZ_5.0+0x8c>
    3c68:	ldur	x8, [x29, #-16]
    3c6c:	ldr	x8, [x8, #24]
    3c70:	cbnz	x8, 3c80 <lzma_code@@XZ_5.0+0x44>
    3c74:	ldur	x8, [x29, #-16]
    3c78:	ldr	x8, [x8, #32]
    3c7c:	cbnz	x8, 3cc8 <lzma_code@@XZ_5.0+0x8c>
    3c80:	ldur	x8, [x29, #-16]
    3c84:	ldr	x8, [x8, #56]
    3c88:	cbz	x8, 3cc8 <lzma_code@@XZ_5.0+0x8c>
    3c8c:	ldur	x8, [x29, #-16]
    3c90:	ldr	x8, [x8, #56]
    3c94:	ldr	x8, [x8, #24]
    3c98:	cbz	x8, 3cc8 <lzma_code@@XZ_5.0+0x8c>
    3c9c:	ldur	w8, [x29, #-20]
    3ca0:	cmp	w8, #0x4
    3ca4:	b.hi	3cc8 <lzma_code@@XZ_5.0+0x8c>  // b.pmore
    3ca8:	ldur	x8, [x29, #-16]
    3cac:	ldr	x8, [x8, #56]
    3cb0:	add	x8, x8, #0x58
    3cb4:	ldur	w9, [x29, #-20]
    3cb8:	mov	w10, w9
    3cbc:	add	x8, x8, x10
    3cc0:	ldrb	w9, [x8]
    3cc4:	tbnz	w9, #0, 3cd4 <lzma_code@@XZ_5.0+0x98>
    3cc8:	mov	w8, #0xb                   	// #11
    3ccc:	stur	w8, [x29, #-4]
    3cd0:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3cd4:	ldur	x8, [x29, #-16]
    3cd8:	ldr	x8, [x8, #64]
    3cdc:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3ce0:	ldur	x8, [x29, #-16]
    3ce4:	ldr	x8, [x8, #72]
    3ce8:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3cec:	ldur	x8, [x29, #-16]
    3cf0:	ldr	x8, [x8, #80]
    3cf4:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3cf8:	ldur	x8, [x29, #-16]
    3cfc:	ldr	x8, [x8, #88]
    3d00:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3d04:	ldur	x8, [x29, #-16]
    3d08:	ldr	x8, [x8, #96]
    3d0c:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3d10:	ldur	x8, [x29, #-16]
    3d14:	ldr	x8, [x8, #104]
    3d18:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3d1c:	ldur	x8, [x29, #-16]
    3d20:	ldr	x8, [x8, #112]
    3d24:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3d28:	ldur	x8, [x29, #-16]
    3d2c:	ldr	x8, [x8, #120]
    3d30:	cbnz	x8, 3d4c <lzma_code@@XZ_5.0+0x110>
    3d34:	ldur	x8, [x29, #-16]
    3d38:	ldr	w9, [x8, #128]
    3d3c:	cbnz	w9, 3d4c <lzma_code@@XZ_5.0+0x110>
    3d40:	ldur	x8, [x29, #-16]
    3d44:	ldr	w9, [x8, #132]
    3d48:	cbz	w9, 3d58 <lzma_code@@XZ_5.0+0x11c>
    3d4c:	mov	w8, #0x8                   	// #8
    3d50:	stur	w8, [x29, #-4]
    3d54:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3d58:	ldur	x8, [x29, #-16]
    3d5c:	ldr	x8, [x8, #56]
    3d60:	ldr	w9, [x8, #72]
    3d64:	subs	w9, w9, #0x0
    3d68:	mov	w8, w9
    3d6c:	ubfx	x8, x8, #0, #32
    3d70:	cmp	x8, #0x6
    3d74:	str	x8, [sp, #24]
    3d78:	b.hi	3f08 <lzma_code@@XZ_5.0+0x2cc>  // b.pmore
    3d7c:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    3d80:	add	x8, x8, #0x840
    3d84:	ldr	x11, [sp, #24]
    3d88:	ldrsw	x10, [x8, x11, lsl #2]
    3d8c:	add	x9, x8, x10
    3d90:	br	x9
    3d94:	ldur	w8, [x29, #-20]
    3d98:	subs	w8, w8, #0x0
    3d9c:	mov	w9, w8
    3da0:	ubfx	x9, x9, #0, #32
    3da4:	cmp	x9, #0x4
    3da8:	str	x9, [sp, #16]
    3dac:	b.hi	3e18 <lzma_code@@XZ_5.0+0x1dc>  // b.pmore
    3db0:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    3db4:	add	x8, x8, #0x85c
    3db8:	ldr	x11, [sp, #16]
    3dbc:	ldrsw	x10, [x8, x11, lsl #2]
    3dc0:	add	x9, x8, x10
    3dc4:	br	x9
    3dc8:	b	3e18 <lzma_code@@XZ_5.0+0x1dc>
    3dcc:	ldur	x8, [x29, #-16]
    3dd0:	ldr	x8, [x8, #56]
    3dd4:	mov	w9, #0x1                   	// #1
    3dd8:	str	w9, [x8, #72]
    3ddc:	b	3e18 <lzma_code@@XZ_5.0+0x1dc>
    3de0:	ldur	x8, [x29, #-16]
    3de4:	ldr	x8, [x8, #56]
    3de8:	mov	w9, #0x2                   	// #2
    3dec:	str	w9, [x8, #72]
    3df0:	b	3e18 <lzma_code@@XZ_5.0+0x1dc>
    3df4:	ldur	x8, [x29, #-16]
    3df8:	ldr	x8, [x8, #56]
    3dfc:	mov	w9, #0x3                   	// #3
    3e00:	str	w9, [x8, #72]
    3e04:	b	3e18 <lzma_code@@XZ_5.0+0x1dc>
    3e08:	ldur	x8, [x29, #-16]
    3e0c:	ldr	x8, [x8, #56]
    3e10:	mov	w9, #0x4                   	// #4
    3e14:	str	w9, [x8, #72]
    3e18:	b	3f14 <lzma_code@@XZ_5.0+0x2d8>
    3e1c:	ldur	w8, [x29, #-20]
    3e20:	cmp	w8, #0x1
    3e24:	b.ne	3e44 <lzma_code@@XZ_5.0+0x208>  // b.any
    3e28:	ldur	x8, [x29, #-16]
    3e2c:	ldr	x8, [x8, #56]
    3e30:	ldr	x8, [x8, #80]
    3e34:	ldur	x9, [x29, #-16]
    3e38:	ldr	x9, [x9, #8]
    3e3c:	cmp	x8, x9
    3e40:	b.eq	3e50 <lzma_code@@XZ_5.0+0x214>  // b.none
    3e44:	mov	w8, #0xb                   	// #11
    3e48:	stur	w8, [x29, #-4]
    3e4c:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3e50:	b	3f14 <lzma_code@@XZ_5.0+0x2d8>
    3e54:	ldur	w8, [x29, #-20]
    3e58:	cmp	w8, #0x2
    3e5c:	b.ne	3e7c <lzma_code@@XZ_5.0+0x240>  // b.any
    3e60:	ldur	x8, [x29, #-16]
    3e64:	ldr	x8, [x8, #56]
    3e68:	ldr	x8, [x8, #80]
    3e6c:	ldur	x9, [x29, #-16]
    3e70:	ldr	x9, [x9, #8]
    3e74:	cmp	x8, x9
    3e78:	b.eq	3e88 <lzma_code@@XZ_5.0+0x24c>  // b.none
    3e7c:	mov	w8, #0xb                   	// #11
    3e80:	stur	w8, [x29, #-4]
    3e84:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3e88:	b	3f14 <lzma_code@@XZ_5.0+0x2d8>
    3e8c:	ldur	w8, [x29, #-20]
    3e90:	cmp	w8, #0x3
    3e94:	b.ne	3eb4 <lzma_code@@XZ_5.0+0x278>  // b.any
    3e98:	ldur	x8, [x29, #-16]
    3e9c:	ldr	x8, [x8, #56]
    3ea0:	ldr	x8, [x8, #80]
    3ea4:	ldur	x9, [x29, #-16]
    3ea8:	ldr	x9, [x9, #8]
    3eac:	cmp	x8, x9
    3eb0:	b.eq	3ec0 <lzma_code@@XZ_5.0+0x284>  // b.none
    3eb4:	mov	w8, #0xb                   	// #11
    3eb8:	stur	w8, [x29, #-4]
    3ebc:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3ec0:	b	3f14 <lzma_code@@XZ_5.0+0x2d8>
    3ec4:	ldur	w8, [x29, #-20]
    3ec8:	cmp	w8, #0x4
    3ecc:	b.ne	3eec <lzma_code@@XZ_5.0+0x2b0>  // b.any
    3ed0:	ldur	x8, [x29, #-16]
    3ed4:	ldr	x8, [x8, #56]
    3ed8:	ldr	x8, [x8, #80]
    3edc:	ldur	x9, [x29, #-16]
    3ee0:	ldr	x9, [x9, #8]
    3ee4:	cmp	x8, x9
    3ee8:	b.eq	3ef8 <lzma_code@@XZ_5.0+0x2bc>  // b.none
    3eec:	mov	w8, #0xb                   	// #11
    3ef0:	stur	w8, [x29, #-4]
    3ef4:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3ef8:	b	3f14 <lzma_code@@XZ_5.0+0x2d8>
    3efc:	mov	w8, #0x1                   	// #1
    3f00:	stur	w8, [x29, #-4]
    3f04:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3f08:	mov	w8, #0xb                   	// #11
    3f0c:	stur	w8, [x29, #-4]
    3f10:	b	4130 <lzma_code@@XZ_5.0+0x4f4>
    3f14:	sub	x3, x29, #0x20
    3f18:	stur	xzr, [x29, #-32]
    3f1c:	add	x6, sp, #0x28
    3f20:	str	xzr, [sp, #40]
    3f24:	ldur	x8, [x29, #-16]
    3f28:	ldr	x8, [x8, #56]
    3f2c:	ldr	x8, [x8, #24]
    3f30:	ldur	x9, [x29, #-16]
    3f34:	ldr	x9, [x9, #56]
    3f38:	ldr	x0, [x9]
    3f3c:	ldur	x9, [x29, #-16]
    3f40:	ldr	x1, [x9, #48]
    3f44:	ldur	x9, [x29, #-16]
    3f48:	ldr	x2, [x9]
    3f4c:	ldur	x9, [x29, #-16]
    3f50:	ldr	x4, [x9, #8]
    3f54:	ldur	x9, [x29, #-16]
    3f58:	ldr	x5, [x9, #24]
    3f5c:	ldur	x9, [x29, #-16]
    3f60:	ldr	x7, [x9, #32]
    3f64:	ldur	w10, [x29, #-20]
    3f68:	mov	x9, sp
    3f6c:	str	w10, [x9]
    3f70:	blr	x8
    3f74:	str	w0, [sp, #36]
    3f78:	ldur	x8, [x29, #-32]
    3f7c:	ldur	x9, [x29, #-16]
    3f80:	ldr	x11, [x9]
    3f84:	add	x8, x11, x8
    3f88:	str	x8, [x9]
    3f8c:	ldur	x8, [x29, #-32]
    3f90:	ldur	x9, [x29, #-16]
    3f94:	ldr	x11, [x9, #8]
    3f98:	subs	x8, x11, x8
    3f9c:	str	x8, [x9, #8]
    3fa0:	ldur	x8, [x29, #-32]
    3fa4:	ldur	x9, [x29, #-16]
    3fa8:	ldr	x11, [x9, #16]
    3fac:	add	x8, x11, x8
    3fb0:	str	x8, [x9, #16]
    3fb4:	ldr	x8, [sp, #40]
    3fb8:	ldur	x9, [x29, #-16]
    3fbc:	ldr	x11, [x9, #24]
    3fc0:	add	x8, x11, x8
    3fc4:	str	x8, [x9, #24]
    3fc8:	ldr	x8, [sp, #40]
    3fcc:	ldur	x9, [x29, #-16]
    3fd0:	ldr	x11, [x9, #32]
    3fd4:	subs	x8, x11, x8
    3fd8:	str	x8, [x9, #32]
    3fdc:	ldr	x8, [sp, #40]
    3fe0:	ldur	x9, [x29, #-16]
    3fe4:	ldr	x11, [x9, #40]
    3fe8:	add	x8, x11, x8
    3fec:	str	x8, [x9, #40]
    3ff0:	ldur	x8, [x29, #-16]
    3ff4:	ldr	x8, [x8, #8]
    3ff8:	ldur	x9, [x29, #-16]
    3ffc:	ldr	x9, [x9, #56]
    4000:	str	x8, [x9, #80]
    4004:	ldr	w10, [sp, #36]
    4008:	subs	w10, w10, #0x0
    400c:	mov	w8, w10
    4010:	ubfx	x8, x8, #0, #32
    4014:	cmp	x8, #0x20
    4018:	str	x8, [sp, #8]
    401c:	b.hi	4118 <lzma_code@@XZ_5.0+0x4dc>  // b.pmore
    4020:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    4024:	add	x8, x8, #0x870
    4028:	ldr	x11, [sp, #8]
    402c:	ldrsw	x10, [x8, x11, lsl #2]
    4030:	add	x9, x8, x10
    4034:	br	x9
    4038:	ldr	x8, [sp, #40]
    403c:	cbnz	x8, 407c <lzma_code@@XZ_5.0+0x440>
    4040:	ldur	x8, [x29, #-32]
    4044:	cbnz	x8, 407c <lzma_code@@XZ_5.0+0x440>
    4048:	ldur	x8, [x29, #-16]
    404c:	ldr	x8, [x8, #56]
    4050:	ldrb	w9, [x8, #93]
    4054:	tbnz	w9, #0, 405c <lzma_code@@XZ_5.0+0x420>
    4058:	b	4068 <lzma_code@@XZ_5.0+0x42c>
    405c:	mov	w8, #0xa                   	// #10
    4060:	str	w8, [sp, #36]
    4064:	b	4078 <lzma_code@@XZ_5.0+0x43c>
    4068:	ldur	x8, [x29, #-16]
    406c:	ldr	x8, [x8, #56]
    4070:	mov	w9, #0x1                   	// #1
    4074:	strb	w9, [x8, #93]
    4078:	b	408c <lzma_code@@XZ_5.0+0x450>
    407c:	ldur	x8, [x29, #-16]
    4080:	ldr	x8, [x8, #56]
    4084:	mov	w9, #0x0                   	// #0
    4088:	strb	w9, [x8, #93]
    408c:	b	4128 <lzma_code@@XZ_5.0+0x4ec>
    4090:	ldur	x8, [x29, #-16]
    4094:	ldr	x8, [x8, #56]
    4098:	mov	w9, #0x0                   	// #0
    409c:	strb	w9, [x8, #93]
    40a0:	str	wzr, [sp, #36]
    40a4:	b	4128 <lzma_code@@XZ_5.0+0x4ec>
    40a8:	ldur	x8, [x29, #-16]
    40ac:	ldr	x8, [x8, #56]
    40b0:	ldr	w9, [x8, #72]
    40b4:	cmp	w9, #0x1
    40b8:	b.eq	40e4 <lzma_code@@XZ_5.0+0x4a8>  // b.none
    40bc:	ldur	x8, [x29, #-16]
    40c0:	ldr	x8, [x8, #56]
    40c4:	ldr	w9, [x8, #72]
    40c8:	cmp	w9, #0x2
    40cc:	b.eq	40e4 <lzma_code@@XZ_5.0+0x4a8>  // b.none
    40d0:	ldur	x8, [x29, #-16]
    40d4:	ldr	x8, [x8, #56]
    40d8:	ldr	w9, [x8, #72]
    40dc:	cmp	w9, #0x4
    40e0:	b.ne	40f4 <lzma_code@@XZ_5.0+0x4b8>  // b.any
    40e4:	ldur	x8, [x29, #-16]
    40e8:	ldr	x8, [x8, #56]
    40ec:	str	wzr, [x8, #72]
    40f0:	b	4104 <lzma_code@@XZ_5.0+0x4c8>
    40f4:	ldur	x8, [x29, #-16]
    40f8:	ldr	x8, [x8, #56]
    40fc:	mov	w9, #0x5                   	// #5
    4100:	str	w9, [x8, #72]
    4104:	ldur	x8, [x29, #-16]
    4108:	ldr	x8, [x8, #56]
    410c:	mov	w9, #0x0                   	// #0
    4110:	strb	w9, [x8, #93]
    4114:	b	4128 <lzma_code@@XZ_5.0+0x4ec>
    4118:	ldur	x8, [x29, #-16]
    411c:	ldr	x8, [x8, #56]
    4120:	mov	w9, #0x6                   	// #6
    4124:	str	w9, [x8, #72]
    4128:	ldr	w8, [sp, #36]
    412c:	stur	w8, [x29, #-4]
    4130:	ldur	w0, [x29, #-4]
    4134:	ldp	x29, x30, [sp, #80]
    4138:	add	sp, sp, #0x60
    413c:	ret

0000000000004140 <lzma_end@@XZ_5.0>:
    4140:	sub	sp, sp, #0x20
    4144:	stp	x29, x30, [sp, #16]
    4148:	add	x29, sp, #0x10
    414c:	str	x0, [sp, #8]
    4150:	ldr	x8, [sp, #8]
    4154:	cbz	x8, 4198 <lzma_end@@XZ_5.0+0x58>
    4158:	ldr	x8, [sp, #8]
    415c:	ldr	x8, [x8, #56]
    4160:	cbz	x8, 4198 <lzma_end@@XZ_5.0+0x58>
    4164:	ldr	x8, [sp, #8]
    4168:	ldr	x0, [x8, #56]
    416c:	ldr	x8, [sp, #8]
    4170:	ldr	x1, [x8, #48]
    4174:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    4178:	ldr	x8, [sp, #8]
    417c:	ldr	x0, [x8, #56]
    4180:	ldr	x8, [sp, #8]
    4184:	ldr	x1, [x8, #48]
    4188:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    418c:	ldr	x8, [sp, #8]
    4190:	mov	x9, xzr
    4194:	str	x9, [x8, #56]
    4198:	ldp	x29, x30, [sp, #16]
    419c:	add	sp, sp, #0x20
    41a0:	ret

00000000000041a4 <lzma_get_progress@@XZ_5.2>:
    41a4:	sub	sp, sp, #0x30
    41a8:	stp	x29, x30, [sp, #32]
    41ac:	add	x29, sp, #0x20
    41b0:	stur	x0, [x29, #-8]
    41b4:	str	x1, [sp, #16]
    41b8:	str	x2, [sp, #8]
    41bc:	ldur	x8, [x29, #-8]
    41c0:	ldr	x8, [x8, #56]
    41c4:	ldr	x8, [x8, #40]
    41c8:	cbz	x8, 41f4 <lzma_get_progress@@XZ_5.2+0x50>
    41cc:	ldur	x8, [x29, #-8]
    41d0:	ldr	x8, [x8, #56]
    41d4:	ldr	x8, [x8, #40]
    41d8:	ldur	x9, [x29, #-8]
    41dc:	ldr	x9, [x9, #56]
    41e0:	ldr	x0, [x9]
    41e4:	ldr	x1, [sp, #16]
    41e8:	ldr	x2, [sp, #8]
    41ec:	blr	x8
    41f0:	b	4214 <lzma_get_progress@@XZ_5.2+0x70>
    41f4:	ldur	x8, [x29, #-8]
    41f8:	ldr	x8, [x8, #16]
    41fc:	ldr	x9, [sp, #16]
    4200:	str	x8, [x9]
    4204:	ldur	x8, [x29, #-8]
    4208:	ldr	x8, [x8, #40]
    420c:	ldr	x9, [sp, #8]
    4210:	str	x8, [x9]
    4214:	ldp	x29, x30, [sp, #32]
    4218:	add	sp, sp, #0x30
    421c:	ret

0000000000004220 <lzma_get_check@@XZ_5.0>:
    4220:	sub	sp, sp, #0x20
    4224:	stp	x29, x30, [sp, #16]
    4228:	add	x29, sp, #0x10
    422c:	str	x0, [sp]
    4230:	ldr	x8, [sp]
    4234:	ldr	x8, [x8, #56]
    4238:	ldr	x8, [x8, #48]
    423c:	cbnz	x8, 4248 <lzma_get_check@@XZ_5.0+0x28>
    4240:	stur	wzr, [x29, #-4]
    4244:	b	4268 <lzma_get_check@@XZ_5.0+0x48>
    4248:	ldr	x8, [sp]
    424c:	ldr	x8, [x8, #56]
    4250:	ldr	x8, [x8, #48]
    4254:	ldr	x9, [sp]
    4258:	ldr	x9, [x9, #56]
    425c:	ldr	x0, [x9]
    4260:	blr	x8
    4264:	stur	w0, [x29, #-4]
    4268:	ldur	w0, [x29, #-4]
    426c:	ldp	x29, x30, [sp, #16]
    4270:	add	sp, sp, #0x20
    4274:	ret

0000000000004278 <lzma_memusage@@XZ_5.0>:
    4278:	sub	sp, sp, #0x30
    427c:	stp	x29, x30, [sp, #32]
    4280:	add	x29, sp, #0x20
    4284:	str	x0, [sp, #16]
    4288:	ldr	x8, [sp, #16]
    428c:	cbz	x8, 42dc <lzma_memusage@@XZ_5.0+0x64>
    4290:	ldr	x8, [sp, #16]
    4294:	ldr	x8, [x8, #56]
    4298:	cbz	x8, 42dc <lzma_memusage@@XZ_5.0+0x64>
    429c:	ldr	x8, [sp, #16]
    42a0:	ldr	x8, [x8, #56]
    42a4:	ldr	x8, [x8, #56]
    42a8:	cbz	x8, 42dc <lzma_memusage@@XZ_5.0+0x64>
    42ac:	ldr	x8, [sp, #16]
    42b0:	ldr	x8, [x8, #56]
    42b4:	ldr	x8, [x8, #56]
    42b8:	ldr	x9, [sp, #16]
    42bc:	ldr	x9, [x9, #56]
    42c0:	ldr	x0, [x9]
    42c4:	add	x1, sp, #0x8
    42c8:	mov	x2, sp
    42cc:	mov	x9, xzr
    42d0:	mov	x3, x9
    42d4:	blr	x8
    42d8:	cbz	w0, 42e4 <lzma_memusage@@XZ_5.0+0x6c>
    42dc:	stur	xzr, [x29, #-8]
    42e0:	b	42ec <lzma_memusage@@XZ_5.0+0x74>
    42e4:	ldr	x8, [sp, #8]
    42e8:	stur	x8, [x29, #-8]
    42ec:	ldur	x0, [x29, #-8]
    42f0:	ldp	x29, x30, [sp, #32]
    42f4:	add	sp, sp, #0x30
    42f8:	ret

00000000000042fc <lzma_memlimit_get@@XZ_5.0>:
    42fc:	sub	sp, sp, #0x30
    4300:	stp	x29, x30, [sp, #32]
    4304:	add	x29, sp, #0x20
    4308:	str	x0, [sp, #16]
    430c:	ldr	x8, [sp, #16]
    4310:	cbz	x8, 4360 <lzma_memlimit_get@@XZ_5.0+0x64>
    4314:	ldr	x8, [sp, #16]
    4318:	ldr	x8, [x8, #56]
    431c:	cbz	x8, 4360 <lzma_memlimit_get@@XZ_5.0+0x64>
    4320:	ldr	x8, [sp, #16]
    4324:	ldr	x8, [x8, #56]
    4328:	ldr	x8, [x8, #56]
    432c:	cbz	x8, 4360 <lzma_memlimit_get@@XZ_5.0+0x64>
    4330:	ldr	x8, [sp, #16]
    4334:	ldr	x8, [x8, #56]
    4338:	ldr	x8, [x8, #56]
    433c:	ldr	x9, [sp, #16]
    4340:	ldr	x9, [x9, #56]
    4344:	ldr	x0, [x9]
    4348:	mov	x1, sp
    434c:	add	x2, sp, #0x8
    4350:	mov	x9, xzr
    4354:	mov	x3, x9
    4358:	blr	x8
    435c:	cbz	w0, 4368 <lzma_memlimit_get@@XZ_5.0+0x6c>
    4360:	stur	xzr, [x29, #-8]
    4364:	b	4370 <lzma_memlimit_get@@XZ_5.0+0x74>
    4368:	ldr	x8, [sp, #8]
    436c:	stur	x8, [x29, #-8]
    4370:	ldur	x0, [x29, #-8]
    4374:	ldp	x29, x30, [sp, #32]
    4378:	add	sp, sp, #0x30
    437c:	ret

0000000000004380 <lzma_memlimit_set@@XZ_5.0>:
    4380:	sub	sp, sp, #0x40
    4384:	stp	x29, x30, [sp, #48]
    4388:	add	x29, sp, #0x30
    438c:	stur	x0, [x29, #-16]
    4390:	str	x1, [sp, #24]
    4394:	ldur	x8, [x29, #-16]
    4398:	cbz	x8, 43b8 <lzma_memlimit_set@@XZ_5.0+0x38>
    439c:	ldur	x8, [x29, #-16]
    43a0:	ldr	x8, [x8, #56]
    43a4:	cbz	x8, 43b8 <lzma_memlimit_set@@XZ_5.0+0x38>
    43a8:	ldur	x8, [x29, #-16]
    43ac:	ldr	x8, [x8, #56]
    43b0:	ldr	x8, [x8, #56]
    43b4:	cbnz	x8, 43c4 <lzma_memlimit_set@@XZ_5.0+0x44>
    43b8:	mov	w8, #0xb                   	// #11
    43bc:	stur	w8, [x29, #-4]
    43c0:	b	4400 <lzma_memlimit_set@@XZ_5.0+0x80>
    43c4:	ldr	x8, [sp, #24]
    43c8:	cbnz	x8, 43d4 <lzma_memlimit_set@@XZ_5.0+0x54>
    43cc:	mov	x8, #0x1                   	// #1
    43d0:	str	x8, [sp, #24]
    43d4:	ldur	x8, [x29, #-16]
    43d8:	ldr	x8, [x8, #56]
    43dc:	ldr	x8, [x8, #56]
    43e0:	ldur	x9, [x29, #-16]
    43e4:	ldr	x9, [x9, #56]
    43e8:	ldr	x0, [x9]
    43ec:	ldr	x3, [sp, #24]
    43f0:	add	x1, sp, #0x8
    43f4:	add	x2, sp, #0x10
    43f8:	blr	x8
    43fc:	stur	w0, [x29, #-4]
    4400:	ldur	w0, [x29, #-4]
    4404:	ldp	x29, x30, [sp, #48]
    4408:	add	sp, sp, #0x40
    440c:	ret

0000000000004410 <lzma_block_compressed_size@@XZ_5.0>:
    4410:	sub	sp, sp, #0x40
    4414:	stp	x29, x30, [sp, #48]
    4418:	add	x29, sp, #0x30
    441c:	stur	x0, [x29, #-16]
    4420:	str	x1, [sp, #24]
    4424:	ldur	x0, [x29, #-16]
    4428:	bl	3190 <lzma_block_unpadded_size@plt>
    442c:	cbnz	x0, 443c <lzma_block_compressed_size@@XZ_5.0+0x2c>
    4430:	mov	w8, #0xb                   	// #11
    4434:	stur	w8, [x29, #-4]
    4438:	b	44d8 <lzma_block_compressed_size@@XZ_5.0+0xc8>
    443c:	ldur	x8, [x29, #-16]
    4440:	ldr	w9, [x8, #4]
    4444:	ldur	x8, [x29, #-16]
    4448:	ldr	w0, [x8, #8]
    444c:	str	w9, [sp, #4]
    4450:	bl	3270 <lzma_check_size@plt>
    4454:	ldr	w9, [sp, #4]
    4458:	add	w10, w9, w0
    445c:	str	w10, [sp, #20]
    4460:	ldr	x8, [sp, #24]
    4464:	ldr	w10, [sp, #20]
    4468:	mov	w11, w10
    446c:	cmp	x8, x11
    4470:	b.hi	4480 <lzma_block_compressed_size@@XZ_5.0+0x70>  // b.pmore
    4474:	mov	w8, #0x9                   	// #9
    4478:	stur	w8, [x29, #-4]
    447c:	b	44d8 <lzma_block_compressed_size@@XZ_5.0+0xc8>
    4480:	ldr	x8, [sp, #24]
    4484:	ldr	w9, [sp, #20]
    4488:	mov	w10, w9
    448c:	subs	x8, x8, x10
    4490:	str	x8, [sp, #8]
    4494:	ldur	x8, [x29, #-16]
    4498:	ldr	x8, [x8, #16]
    449c:	mov	x10, #0xffffffffffffffff    	// #-1
    44a0:	cmp	x8, x10
    44a4:	b.eq	44c8 <lzma_block_compressed_size@@XZ_5.0+0xb8>  // b.none
    44a8:	ldur	x8, [x29, #-16]
    44ac:	ldr	x8, [x8, #16]
    44b0:	ldr	x9, [sp, #8]
    44b4:	cmp	x8, x9
    44b8:	b.eq	44c8 <lzma_block_compressed_size@@XZ_5.0+0xb8>  // b.none
    44bc:	mov	w8, #0x9                   	// #9
    44c0:	stur	w8, [x29, #-4]
    44c4:	b	44d8 <lzma_block_compressed_size@@XZ_5.0+0xc8>
    44c8:	ldr	x8, [sp, #8]
    44cc:	ldur	x9, [x29, #-16]
    44d0:	str	x8, [x9, #16]
    44d4:	stur	wzr, [x29, #-4]
    44d8:	ldur	w0, [x29, #-4]
    44dc:	ldp	x29, x30, [sp, #48]
    44e0:	add	sp, sp, #0x40
    44e4:	ret

00000000000044e8 <lzma_block_unpadded_size@@XZ_5.0>:
    44e8:	sub	sp, sp, #0x30
    44ec:	stp	x29, x30, [sp, #32]
    44f0:	add	x29, sp, #0x20
    44f4:	str	x0, [sp, #16]
    44f8:	ldr	x8, [sp, #16]
    44fc:	cbz	x8, 4584 <lzma_block_unpadded_size@@XZ_5.0+0x9c>
    4500:	ldr	x8, [sp, #16]
    4504:	ldr	w9, [x8]
    4508:	cmp	w9, #0x1
    450c:	b.hi	4584 <lzma_block_unpadded_size@@XZ_5.0+0x9c>  // b.pmore
    4510:	ldr	x8, [sp, #16]
    4514:	ldr	w9, [x8, #4]
    4518:	cmp	w9, #0x8
    451c:	b.cc	4584 <lzma_block_unpadded_size@@XZ_5.0+0x9c>  // b.lo, b.ul, b.last
    4520:	ldr	x8, [sp, #16]
    4524:	ldr	w9, [x8, #4]
    4528:	cmp	w9, #0x400
    452c:	b.hi	4584 <lzma_block_unpadded_size@@XZ_5.0+0x9c>  // b.pmore
    4530:	ldr	x8, [sp, #16]
    4534:	ldr	w9, [x8, #4]
    4538:	and	w9, w9, #0x3
    453c:	cbnz	w9, 4584 <lzma_block_unpadded_size@@XZ_5.0+0x9c>
    4540:	ldr	x8, [sp, #16]
    4544:	ldr	x8, [x8, #16]
    4548:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    454c:	cmp	x8, x9
    4550:	b.ls	4568 <lzma_block_unpadded_size@@XZ_5.0+0x80>  // b.plast
    4554:	ldr	x8, [sp, #16]
    4558:	ldr	x8, [x8, #16]
    455c:	mov	x9, #0xffffffffffffffff    	// #-1
    4560:	cmp	x8, x9
    4564:	b.ne	4584 <lzma_block_unpadded_size@@XZ_5.0+0x9c>  // b.any
    4568:	ldr	x8, [sp, #16]
    456c:	ldr	x8, [x8, #16]
    4570:	cbz	x8, 4584 <lzma_block_unpadded_size@@XZ_5.0+0x9c>
    4574:	ldr	x8, [sp, #16]
    4578:	ldr	w9, [x8, #8]
    457c:	cmp	w9, #0xf
    4580:	b.ls	458c <lzma_block_unpadded_size@@XZ_5.0+0xa4>  // b.plast
    4584:	stur	xzr, [x29, #-8]
    4588:	b	4600 <lzma_block_unpadded_size@@XZ_5.0+0x118>
    458c:	ldr	x8, [sp, #16]
    4590:	ldr	x8, [x8, #16]
    4594:	mov	x9, #0xffffffffffffffff    	// #-1
    4598:	cmp	x8, x9
    459c:	b.ne	45ac <lzma_block_unpadded_size@@XZ_5.0+0xc4>  // b.any
    45a0:	mov	x8, #0xffffffffffffffff    	// #-1
    45a4:	stur	x8, [x29, #-8]
    45a8:	b	4600 <lzma_block_unpadded_size@@XZ_5.0+0x118>
    45ac:	ldr	x8, [sp, #16]
    45b0:	ldr	x8, [x8, #16]
    45b4:	ldr	x9, [sp, #16]
    45b8:	ldr	w10, [x9, #4]
    45bc:	mov	w9, w10
    45c0:	add	x8, x8, x9
    45c4:	ldr	x9, [sp, #16]
    45c8:	ldr	w0, [x9, #8]
    45cc:	str	x8, [sp]
    45d0:	bl	3270 <lzma_check_size@plt>
    45d4:	ldr	x8, [sp]
    45d8:	add	x9, x8, w0, uxtw
    45dc:	str	x9, [sp, #8]
    45e0:	ldr	x9, [sp, #8]
    45e4:	mov	x11, #0x7ffffffffffffffc    	// #9223372036854775804
    45e8:	cmp	x9, x11
    45ec:	b.ls	45f8 <lzma_block_unpadded_size@@XZ_5.0+0x110>  // b.plast
    45f0:	stur	xzr, [x29, #-8]
    45f4:	b	4600 <lzma_block_unpadded_size@@XZ_5.0+0x118>
    45f8:	ldr	x8, [sp, #8]
    45fc:	stur	x8, [x29, #-8]
    4600:	ldur	x0, [x29, #-8]
    4604:	ldp	x29, x30, [sp, #32]
    4608:	add	sp, sp, #0x30
    460c:	ret

0000000000004610 <lzma_block_total_size@@XZ_5.0>:
    4610:	sub	sp, sp, #0x30
    4614:	stp	x29, x30, [sp, #32]
    4618:	add	x29, sp, #0x20
    461c:	mov	x8, #0xffffffffffffffff    	// #-1
    4620:	stur	x0, [x29, #-8]
    4624:	ldur	x0, [x29, #-8]
    4628:	str	x8, [sp, #8]
    462c:	bl	3190 <lzma_block_unpadded_size@plt>
    4630:	str	x0, [sp, #16]
    4634:	ldr	x8, [sp, #16]
    4638:	ldr	x9, [sp, #8]
    463c:	cmp	x8, x9
    4640:	b.eq	4650 <lzma_block_total_size@@XZ_5.0+0x40>  // b.none
    4644:	ldr	x0, [sp, #16]
    4648:	bl	4660 <lzma_block_total_size@@XZ_5.0+0x50>
    464c:	str	x0, [sp, #16]
    4650:	ldr	x0, [sp, #16]
    4654:	ldp	x29, x30, [sp, #32]
    4658:	add	sp, sp, #0x30
    465c:	ret
    4660:	sub	sp, sp, #0x10
    4664:	str	x0, [sp, #8]
    4668:	ldr	x8, [sp, #8]
    466c:	add	x8, x8, #0x3
    4670:	and	x0, x8, #0xfffffffffffffffc
    4674:	add	sp, sp, #0x10
    4678:	ret
    467c:	sub	sp, sp, #0x30
    4680:	stp	x29, x30, [sp, #32]
    4684:	add	x29, sp, #0x20
    4688:	str	x0, [sp, #16]
    468c:	str	w1, [sp, #12]
    4690:	ldr	x8, [sp, #16]
    4694:	add	x0, x8, #0x50
    4698:	ldr	w1, [sp, #12]
    469c:	bl	3440 <lzma_lzma_preset@plt>
    46a0:	and	w9, w0, #0xff
    46a4:	cbz	w9, 46b8 <lzma_block_total_size@@XZ_5.0+0xa8>
    46a8:	mov	w8, #0x1                   	// #1
    46ac:	and	w8, w8, #0x1
    46b0:	sturb	w8, [x29, #-1]
    46b4:	b	46ec <lzma_block_total_size@@XZ_5.0+0xdc>
    46b8:	ldr	x8, [sp, #16]
    46bc:	mov	x9, #0x21                  	// #33
    46c0:	str	x9, [x8]
    46c4:	ldr	x8, [sp, #16]
    46c8:	add	x8, x8, #0x50
    46cc:	ldr	x9, [sp, #16]
    46d0:	str	x8, [x9, #8]
    46d4:	ldr	x8, [sp, #16]
    46d8:	mov	x9, #0xffffffffffffffff    	// #-1
    46dc:	str	x9, [x8, #16]
    46e0:	mov	w10, wzr
    46e4:	and	w10, w10, #0x1
    46e8:	sturb	w10, [x29, #-1]
    46ec:	ldurb	w8, [x29, #-1]
    46f0:	and	w0, w8, #0x1
    46f4:	ldp	x29, x30, [sp, #32]
    46f8:	add	sp, sp, #0x30
    46fc:	ret

0000000000004700 <lzma_filters_copy@@XZ_5.0>:
    4700:	sub	sp, sp, #0x60
    4704:	stp	x29, x30, [sp, #80]
    4708:	add	x29, sp, #0x50
    470c:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    4710:	add	x8, x8, #0x900
    4714:	stur	x0, [x29, #-16]
    4718:	stur	x1, [x29, #-24]
    471c:	stur	x2, [x29, #-32]
    4720:	ldur	x9, [x29, #-16]
    4724:	str	x8, [sp, #16]
    4728:	cbz	x9, 4734 <lzma_filters_copy@@XZ_5.0+0x34>
    472c:	ldur	x8, [x29, #-24]
    4730:	cbnz	x8, 4740 <lzma_filters_copy@@XZ_5.0+0x40>
    4734:	mov	w8, #0xb                   	// #11
    4738:	stur	w8, [x29, #-4]
    473c:	b	4998 <lzma_filters_copy@@XZ_5.0+0x298>
    4740:	str	xzr, [sp, #32]
    4744:	ldur	x8, [x29, #-16]
    4748:	ldr	x9, [sp, #32]
    474c:	mov	x10, #0x10                  	// #16
    4750:	mul	x9, x10, x9
    4754:	ldr	x8, [x8, x9]
    4758:	mov	x9, #0xffffffffffffffff    	// #-1
    475c:	cmp	x8, x9
    4760:	b.eq	48fc <lzma_filters_copy@@XZ_5.0+0x1fc>  // b.none
    4764:	ldr	x8, [sp, #32]
    4768:	cmp	x8, #0x4
    476c:	b.ne	477c <lzma_filters_copy@@XZ_5.0+0x7c>  // b.any
    4770:	mov	w8, #0x8                   	// #8
    4774:	stur	w8, [x29, #-36]
    4778:	b	4934 <lzma_filters_copy@@XZ_5.0+0x234>
    477c:	ldur	x8, [x29, #-16]
    4780:	ldr	x9, [sp, #32]
    4784:	mov	x10, #0x10                  	// #16
    4788:	mul	x9, x10, x9
    478c:	ldr	x8, [x8, x9]
    4790:	ldur	x9, [x29, #-24]
    4794:	ldr	x11, [sp, #32]
    4798:	mul	x11, x10, x11
    479c:	str	x8, [x9, x11]
    47a0:	ldur	x8, [x29, #-16]
    47a4:	ldr	x9, [sp, #32]
    47a8:	mul	x9, x10, x9
    47ac:	add	x8, x8, x9
    47b0:	ldr	x8, [x8, #8]
    47b4:	cbnz	x8, 47d8 <lzma_filters_copy@@XZ_5.0+0xd8>
    47b8:	ldur	x8, [x29, #-24]
    47bc:	ldr	x9, [sp, #32]
    47c0:	mov	x10, #0x10                  	// #16
    47c4:	mul	x9, x10, x9
    47c8:	add	x8, x8, x9
    47cc:	mov	x9, xzr
    47d0:	str	x9, [x8, #8]
    47d4:	b	48ec <lzma_filters_copy@@XZ_5.0+0x1ec>
    47d8:	str	xzr, [sp, #24]
    47dc:	ldur	x8, [x29, #-16]
    47e0:	ldr	x9, [sp, #32]
    47e4:	mov	x10, #0x10                  	// #16
    47e8:	mul	x9, x10, x9
    47ec:	ldr	x8, [x8, x9]
    47f0:	ldr	x9, [sp, #24]
    47f4:	mov	x10, #0x18                  	// #24
    47f8:	mul	x9, x10, x9
    47fc:	ldr	x10, [sp, #16]
    4800:	ldr	x9, [x10, x9]
    4804:	cmp	x8, x9
    4808:	b.eq	4848 <lzma_filters_copy@@XZ_5.0+0x148>  // b.none
    480c:	ldr	x8, [sp, #24]
    4810:	mov	x9, #0x18                  	// #24
    4814:	mul	x8, x9, x8
    4818:	ldr	x9, [sp, #16]
    481c:	ldr	x8, [x9, x8]
    4820:	mov	x10, #0xffffffffffffffff    	// #-1
    4824:	cmp	x8, x10
    4828:	b.ne	4838 <lzma_filters_copy@@XZ_5.0+0x138>  // b.any
    482c:	mov	w8, #0x8                   	// #8
    4830:	stur	w8, [x29, #-36]
    4834:	b	4934 <lzma_filters_copy@@XZ_5.0+0x234>
    4838:	ldr	x8, [sp, #24]
    483c:	add	x8, x8, #0x1
    4840:	str	x8, [sp, #24]
    4844:	b	47dc <lzma_filters_copy@@XZ_5.0+0xdc>
    4848:	ldr	x8, [sp, #24]
    484c:	mov	x9, #0x18                  	// #24
    4850:	mul	x8, x9, x8
    4854:	ldr	x9, [sp, #16]
    4858:	add	x8, x9, x8
    485c:	ldr	x0, [x8, #8]
    4860:	ldur	x1, [x29, #-32]
    4864:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    4868:	ldur	x8, [x29, #-24]
    486c:	ldr	x9, [sp, #32]
    4870:	mov	x10, #0x10                  	// #16
    4874:	mul	x9, x10, x9
    4878:	add	x8, x8, x9
    487c:	str	x0, [x8, #8]
    4880:	ldur	x8, [x29, #-24]
    4884:	ldr	x9, [sp, #32]
    4888:	mul	x9, x10, x9
    488c:	add	x8, x8, x9
    4890:	ldr	x8, [x8, #8]
    4894:	cbnz	x8, 48a4 <lzma_filters_copy@@XZ_5.0+0x1a4>
    4898:	mov	w8, #0x5                   	// #5
    489c:	stur	w8, [x29, #-36]
    48a0:	b	4934 <lzma_filters_copy@@XZ_5.0+0x234>
    48a4:	ldur	x8, [x29, #-24]
    48a8:	ldr	x9, [sp, #32]
    48ac:	mov	x10, #0x10                  	// #16
    48b0:	mul	x9, x10, x9
    48b4:	add	x8, x8, x9
    48b8:	ldr	x0, [x8, #8]
    48bc:	ldur	x8, [x29, #-16]
    48c0:	ldr	x9, [sp, #32]
    48c4:	mul	x9, x10, x9
    48c8:	add	x8, x8, x9
    48cc:	ldr	x1, [x8, #8]
    48d0:	ldr	x8, [sp, #24]
    48d4:	mov	x9, #0x18                  	// #24
    48d8:	mul	x8, x9, x8
    48dc:	ldr	x9, [sp, #16]
    48e0:	add	x8, x9, x8
    48e4:	ldr	x2, [x8, #8]
    48e8:	bl	3090 <memcpy@plt>
    48ec:	ldr	x8, [sp, #32]
    48f0:	add	x8, x8, #0x1
    48f4:	str	x8, [sp, #32]
    48f8:	b	4744 <lzma_filters_copy@@XZ_5.0+0x44>
    48fc:	ldur	x8, [x29, #-24]
    4900:	ldr	x9, [sp, #32]
    4904:	mov	x10, #0x10                  	// #16
    4908:	mul	x9, x10, x9
    490c:	mov	x11, #0xffffffffffffffff    	// #-1
    4910:	str	x11, [x8, x9]
    4914:	ldur	x8, [x29, #-24]
    4918:	ldr	x9, [sp, #32]
    491c:	mul	x9, x10, x9
    4920:	add	x8, x8, x9
    4924:	mov	x9, xzr
    4928:	str	x9, [x8, #8]
    492c:	stur	wzr, [x29, #-4]
    4930:	b	4998 <lzma_filters_copy@@XZ_5.0+0x298>
    4934:	ldr	x8, [sp, #32]
    4938:	subs	x9, x8, #0x1
    493c:	str	x9, [sp, #32]
    4940:	cmp	x8, #0x0
    4944:	cset	w10, ls  // ls = plast
    4948:	tbnz	w10, #0, 4990 <lzma_filters_copy@@XZ_5.0+0x290>
    494c:	ldur	x8, [x29, #-24]
    4950:	ldr	x9, [sp, #32]
    4954:	mov	x10, #0x10                  	// #16
    4958:	mul	x9, x10, x9
    495c:	add	x8, x8, x9
    4960:	ldr	x0, [x8, #8]
    4964:	ldur	x1, [x29, #-32]
    4968:	str	x10, [sp, #8]
    496c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    4970:	ldur	x8, [x29, #-24]
    4974:	ldr	x9, [sp, #32]
    4978:	ldr	x10, [sp, #8]
    497c:	mul	x9, x10, x9
    4980:	add	x8, x8, x9
    4984:	mov	x9, xzr
    4988:	str	x9, [x8, #8]
    498c:	b	4934 <lzma_filters_copy@@XZ_5.0+0x234>
    4990:	ldur	w8, [x29, #-36]
    4994:	stur	w8, [x29, #-4]
    4998:	ldur	w0, [x29, #-4]
    499c:	ldp	x29, x30, [sp, #80]
    49a0:	add	sp, sp, #0x60
    49a4:	ret
    49a8:	sub	sp, sp, #0x100
    49ac:	stp	x29, x30, [sp, #240]
    49b0:	add	x29, sp, #0xf0
    49b4:	sub	x8, x29, #0x38
    49b8:	str	x0, [x8, #40]
    49bc:	str	x1, [x8, #32]
    49c0:	str	x2, [x8, #24]
    49c4:	str	x3, [x8, #16]
    49c8:	and	w9, w4, #0x1
    49cc:	sturb	w9, [x29, #-41]
    49d0:	str	x8, [sp]
    49d4:	ldr	x8, [sp]
    49d8:	ldr	x0, [x8, #24]
    49dc:	sub	x1, x29, #0x38
    49e0:	bl	4c3c <lzma_filters_copy@@XZ_5.0+0x53c>
    49e4:	stur	w0, [x29, #-60]
    49e8:	ldur	w9, [x29, #-60]
    49ec:	cbz	w9, 49fc <lzma_filters_copy@@XZ_5.0+0x2fc>
    49f0:	ldur	w8, [x29, #-60]
    49f4:	stur	w8, [x29, #-4]
    49f8:	b	4c2c <lzma_filters_copy@@XZ_5.0+0x52c>
    49fc:	ldurb	w8, [x29, #-41]
    4a00:	tbnz	w8, #0, 4a08 <lzma_filters_copy@@XZ_5.0+0x308>
    4a04:	b	4af4 <lzma_filters_copy@@XZ_5.0+0x3f4>
    4a08:	str	xzr, [sp, #48]
    4a0c:	ldr	x8, [sp, #48]
    4a10:	ldr	x9, [sp]
    4a14:	ldr	x10, [x9]
    4a18:	cmp	x8, x10
    4a1c:	b.cs	4af0 <lzma_filters_copy@@XZ_5.0+0x3f0>  // b.hs, b.nlast
    4a20:	ldr	x8, [sp]
    4a24:	ldr	x9, [x8]
    4a28:	ldr	x10, [sp, #48]
    4a2c:	subs	x9, x9, x10
    4a30:	subs	x9, x9, #0x1
    4a34:	str	x9, [sp, #40]
    4a38:	ldr	x9, [x8, #16]
    4a3c:	ldr	x10, [x8, #24]
    4a40:	ldr	x11, [sp, #48]
    4a44:	mov	x12, #0x10                  	// #16
    4a48:	mul	x11, x12, x11
    4a4c:	ldr	x0, [x10, x11]
    4a50:	blr	x9
    4a54:	str	x0, [sp, #32]
    4a58:	ldr	x8, [sp, #32]
    4a5c:	cbz	x8, 4a6c <lzma_filters_copy@@XZ_5.0+0x36c>
    4a60:	ldr	x8, [sp, #32]
    4a64:	ldr	x8, [x8, #8]
    4a68:	cbnz	x8, 4a78 <lzma_filters_copy@@XZ_5.0+0x378>
    4a6c:	mov	w8, #0x8                   	// #8
    4a70:	stur	w8, [x29, #-4]
    4a74:	b	4c2c <lzma_filters_copy@@XZ_5.0+0x52c>
    4a78:	ldr	x8, [sp]
    4a7c:	ldr	x9, [x8, #24]
    4a80:	ldr	x10, [sp, #48]
    4a84:	mov	x11, #0x10                  	// #16
    4a88:	mul	x10, x11, x10
    4a8c:	ldr	x9, [x9, x10]
    4a90:	ldr	x10, [sp, #40]
    4a94:	mov	x12, #0x18                  	// #24
    4a98:	mul	x10, x12, x10
    4a9c:	add	x13, sp, #0x38
    4aa0:	str	x9, [x13, x10]
    4aa4:	ldr	x9, [sp, #32]
    4aa8:	ldr	x9, [x9, #8]
    4aac:	ldr	x10, [sp, #40]
    4ab0:	mul	x10, x12, x10
    4ab4:	add	x10, x13, x10
    4ab8:	str	x9, [x10, #8]
    4abc:	ldr	x9, [x8, #24]
    4ac0:	ldr	x10, [sp, #48]
    4ac4:	mul	x10, x11, x10
    4ac8:	add	x9, x9, x10
    4acc:	ldr	x9, [x9, #8]
    4ad0:	ldr	x10, [sp, #40]
    4ad4:	mul	x10, x12, x10
    4ad8:	add	x10, x13, x10
    4adc:	str	x9, [x10, #16]
    4ae0:	ldr	x8, [sp, #48]
    4ae4:	add	x8, x8, #0x1
    4ae8:	str	x8, [sp, #48]
    4aec:	b	4a0c <lzma_filters_copy@@XZ_5.0+0x30c>
    4af0:	b	4bc8 <lzma_filters_copy@@XZ_5.0+0x4c8>
    4af4:	str	xzr, [sp, #24]
    4af8:	ldr	x8, [sp, #24]
    4afc:	ldr	x9, [sp]
    4b00:	ldr	x10, [x9]
    4b04:	cmp	x8, x10
    4b08:	b.cs	4bc8 <lzma_filters_copy@@XZ_5.0+0x4c8>  // b.hs, b.nlast
    4b0c:	ldr	x8, [sp]
    4b10:	ldr	x9, [x8, #16]
    4b14:	ldr	x10, [x8, #24]
    4b18:	ldr	x11, [sp, #24]
    4b1c:	mov	x12, #0x10                  	// #16
    4b20:	mul	x11, x12, x11
    4b24:	ldr	x0, [x10, x11]
    4b28:	blr	x9
    4b2c:	str	x0, [sp, #16]
    4b30:	ldr	x8, [sp, #16]
    4b34:	cbz	x8, 4b44 <lzma_filters_copy@@XZ_5.0+0x444>
    4b38:	ldr	x8, [sp, #16]
    4b3c:	ldr	x8, [x8, #8]
    4b40:	cbnz	x8, 4b50 <lzma_filters_copy@@XZ_5.0+0x450>
    4b44:	mov	w8, #0x8                   	// #8
    4b48:	stur	w8, [x29, #-4]
    4b4c:	b	4c2c <lzma_filters_copy@@XZ_5.0+0x52c>
    4b50:	ldr	x8, [sp]
    4b54:	ldr	x9, [x8, #24]
    4b58:	ldr	x10, [sp, #24]
    4b5c:	mov	x11, #0x10                  	// #16
    4b60:	mul	x10, x11, x10
    4b64:	ldr	x9, [x9, x10]
    4b68:	ldr	x10, [sp, #24]
    4b6c:	mov	x12, #0x18                  	// #24
    4b70:	mul	x10, x12, x10
    4b74:	add	x13, sp, #0x38
    4b78:	str	x9, [x13, x10]
    4b7c:	ldr	x9, [sp, #16]
    4b80:	ldr	x9, [x9, #8]
    4b84:	ldr	x10, [sp, #24]
    4b88:	mul	x10, x12, x10
    4b8c:	add	x10, x13, x10
    4b90:	str	x9, [x10, #8]
    4b94:	ldr	x9, [x8, #24]
    4b98:	ldr	x10, [sp, #24]
    4b9c:	mul	x10, x11, x10
    4ba0:	add	x9, x9, x10
    4ba4:	ldr	x9, [x9, #8]
    4ba8:	ldr	x10, [sp, #24]
    4bac:	mul	x10, x12, x10
    4bb0:	add	x10, x13, x10
    4bb4:	str	x9, [x10, #16]
    4bb8:	ldr	x8, [sp, #24]
    4bbc:	add	x8, x8, #0x1
    4bc0:	str	x8, [sp, #24]
    4bc4:	b	4af8 <lzma_filters_copy@@XZ_5.0+0x3f8>
    4bc8:	ldr	x8, [sp]
    4bcc:	ldr	x9, [x8]
    4bd0:	mov	x10, #0x18                  	// #24
    4bd4:	mul	x9, x10, x9
    4bd8:	add	x11, sp, #0x38
    4bdc:	mov	x12, #0xffffffffffffffff    	// #-1
    4be0:	str	x12, [x11, x9]
    4be4:	ldr	x9, [x8]
    4be8:	mul	x9, x10, x9
    4bec:	add	x9, x11, x9
    4bf0:	mov	x10, xzr
    4bf4:	str	x10, [x9, #8]
    4bf8:	ldr	x0, [x8, #40]
    4bfc:	ldr	x1, [x8, #32]
    4c00:	mov	x2, x11
    4c04:	bl	395c <lzma_version_string@@XZ_5.0+0x24c>
    4c08:	str	w0, [sp, #12]
    4c0c:	ldr	w13, [sp, #12]
    4c10:	cbz	w13, 4c24 <lzma_filters_copy@@XZ_5.0+0x524>
    4c14:	ldr	x8, [sp]
    4c18:	ldr	x0, [x8, #40]
    4c1c:	ldr	x1, [x8, #32]
    4c20:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    4c24:	ldr	w8, [sp, #12]
    4c28:	stur	w8, [x29, #-4]
    4c2c:	ldur	w0, [x29, #-4]
    4c30:	ldp	x29, x30, [sp, #240]
    4c34:	add	sp, sp, #0x100
    4c38:	ret
    4c3c:	sub	sp, sp, #0x40
    4c40:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    4c44:	add	x8, x8, #0x900
    4c48:	str	x0, [sp, #48]
    4c4c:	str	x1, [sp, #40]
    4c50:	ldr	x9, [sp, #48]
    4c54:	str	x8, [sp]
    4c58:	cbz	x9, 4c70 <lzma_filters_copy@@XZ_5.0+0x570>
    4c5c:	ldr	x8, [sp, #48]
    4c60:	ldr	x8, [x8]
    4c64:	mov	x9, #0xffffffffffffffff    	// #-1
    4c68:	cmp	x8, x9
    4c6c:	b.ne	4c7c <lzma_filters_copy@@XZ_5.0+0x57c>  // b.any
    4c70:	mov	w8, #0xb                   	// #11
    4c74:	str	w8, [sp, #60]
    4c78:	b	4de0 <lzma_filters_copy@@XZ_5.0+0x6e0>
    4c7c:	str	xzr, [sp, #32]
    4c80:	mov	w8, #0x1                   	// #1
    4c84:	strb	w8, [sp, #31]
    4c88:	mov	w8, #0x0                   	// #0
    4c8c:	strb	w8, [sp, #30]
    4c90:	str	xzr, [sp, #16]
    4c94:	str	xzr, [sp, #8]
    4c98:	ldr	x8, [sp, #48]
    4c9c:	ldr	x9, [sp, #16]
    4ca0:	mov	x10, #0x10                  	// #16
    4ca4:	mul	x9, x10, x9
    4ca8:	ldr	x8, [x8, x9]
    4cac:	ldr	x9, [sp, #8]
    4cb0:	mov	x10, #0x18                  	// #24
    4cb4:	mul	x9, x10, x9
    4cb8:	ldr	x10, [sp]
    4cbc:	ldr	x9, [x10, x9]
    4cc0:	cmp	x8, x9
    4cc4:	b.eq	4d04 <lzma_filters_copy@@XZ_5.0+0x604>  // b.none
    4cc8:	ldr	x8, [sp, #8]
    4ccc:	mov	x9, #0x18                  	// #24
    4cd0:	mul	x8, x9, x8
    4cd4:	ldr	x9, [sp]
    4cd8:	ldr	x8, [x9, x8]
    4cdc:	mov	x10, #0xffffffffffffffff    	// #-1
    4ce0:	cmp	x8, x10
    4ce4:	b.ne	4cf4 <lzma_filters_copy@@XZ_5.0+0x5f4>  // b.any
    4ce8:	mov	w8, #0x8                   	// #8
    4cec:	str	w8, [sp, #60]
    4cf0:	b	4de0 <lzma_filters_copy@@XZ_5.0+0x6e0>
    4cf4:	ldr	x8, [sp, #8]
    4cf8:	add	x8, x8, #0x1
    4cfc:	str	x8, [sp, #8]
    4d00:	b	4c98 <lzma_filters_copy@@XZ_5.0+0x598>
    4d04:	ldrb	w8, [sp, #31]
    4d08:	tbnz	w8, #0, 4d18 <lzma_filters_copy@@XZ_5.0+0x618>
    4d0c:	mov	w8, #0x8                   	// #8
    4d10:	str	w8, [sp, #60]
    4d14:	b	4de0 <lzma_filters_copy@@XZ_5.0+0x6e0>
    4d18:	ldr	x8, [sp, #8]
    4d1c:	mov	x9, #0x18                  	// #24
    4d20:	mul	x8, x9, x8
    4d24:	ldr	x10, [sp]
    4d28:	add	x8, x10, x8
    4d2c:	ldrb	w11, [x8, #16]
    4d30:	mov	w12, #0x1                   	// #1
    4d34:	and	w11, w11, w12
    4d38:	strb	w11, [sp, #31]
    4d3c:	ldr	x8, [sp, #8]
    4d40:	mul	x8, x9, x8
    4d44:	add	x8, x10, x8
    4d48:	ldrb	w11, [x8, #17]
    4d4c:	and	w11, w11, #0x1
    4d50:	strb	w11, [sp, #30]
    4d54:	ldr	x8, [sp, #8]
    4d58:	mul	x8, x9, x8
    4d5c:	add	x8, x10, x8
    4d60:	ldrb	w11, [x8, #18]
    4d64:	mov	w0, w11
    4d68:	and	x8, x0, #0x1
    4d6c:	ldr	x9, [sp, #32]
    4d70:	add	x8, x9, x8
    4d74:	str	x8, [sp, #32]
    4d78:	ldr	x8, [sp, #48]
    4d7c:	ldr	x9, [sp, #16]
    4d80:	add	x9, x9, #0x1
    4d84:	str	x9, [sp, #16]
    4d88:	mov	x10, #0x10                  	// #16
    4d8c:	mul	x9, x10, x9
    4d90:	ldr	x8, [x8, x9]
    4d94:	mov	x9, #0xffffffffffffffff    	// #-1
    4d98:	cmp	x8, x9
    4d9c:	b.ne	4c94 <lzma_filters_copy@@XZ_5.0+0x594>  // b.any
    4da0:	ldr	x8, [sp, #16]
    4da4:	cmp	x8, #0x4
    4da8:	b.hi	4dc4 <lzma_filters_copy@@XZ_5.0+0x6c4>  // b.pmore
    4dac:	ldrb	w8, [sp, #30]
    4db0:	tbnz	w8, #0, 4db8 <lzma_filters_copy@@XZ_5.0+0x6b8>
    4db4:	b	4dc4 <lzma_filters_copy@@XZ_5.0+0x6c4>
    4db8:	ldr	x8, [sp, #32]
    4dbc:	cmp	x8, #0x3
    4dc0:	b.ls	4dd0 <lzma_filters_copy@@XZ_5.0+0x6d0>  // b.plast
    4dc4:	mov	w8, #0x8                   	// #8
    4dc8:	str	w8, [sp, #60]
    4dcc:	b	4de0 <lzma_filters_copy@@XZ_5.0+0x6e0>
    4dd0:	ldr	x8, [sp, #16]
    4dd4:	ldr	x9, [sp, #40]
    4dd8:	str	x8, [x9]
    4ddc:	str	wzr, [sp, #60]
    4de0:	ldr	w0, [sp, #60]
    4de4:	add	sp, sp, #0x40
    4de8:	ret
    4dec:	sub	sp, sp, #0x50
    4df0:	stp	x29, x30, [sp, #64]
    4df4:	add	x29, sp, #0x40
    4df8:	add	x8, sp, #0x20
    4dfc:	stur	x0, [x29, #-16]
    4e00:	stur	x1, [x29, #-24]
    4e04:	ldur	x0, [x29, #-24]
    4e08:	mov	x1, x8
    4e0c:	bl	4c3c <lzma_filters_copy@@XZ_5.0+0x53c>
    4e10:	cbz	w0, 4e20 <lzma_filters_copy@@XZ_5.0+0x720>
    4e14:	mov	x8, #0xffffffffffffffff    	// #-1
    4e18:	stur	x8, [x29, #-8]
    4e1c:	b	4f00 <lzma_filters_copy@@XZ_5.0+0x800>
    4e20:	str	xzr, [sp, #24]
    4e24:	str	xzr, [sp, #16]
    4e28:	ldur	x8, [x29, #-16]
    4e2c:	ldur	x9, [x29, #-24]
    4e30:	ldr	x10, [sp, #16]
    4e34:	mov	x11, #0x10                  	// #16
    4e38:	mul	x10, x11, x10
    4e3c:	ldr	x0, [x9, x10]
    4e40:	blr	x8
    4e44:	str	x0, [sp, #8]
    4e48:	ldr	x8, [sp, #8]
    4e4c:	cbnz	x8, 4e5c <lzma_filters_copy@@XZ_5.0+0x75c>
    4e50:	mov	x8, #0xffffffffffffffff    	// #-1
    4e54:	stur	x8, [x29, #-8]
    4e58:	b	4f00 <lzma_filters_copy@@XZ_5.0+0x800>
    4e5c:	ldr	x8, [sp, #8]
    4e60:	ldr	x8, [x8, #16]
    4e64:	cbnz	x8, 4e78 <lzma_filters_copy@@XZ_5.0+0x778>
    4e68:	ldr	x8, [sp, #24]
    4e6c:	add	x8, x8, #0x400
    4e70:	str	x8, [sp, #24]
    4e74:	b	4ecc <lzma_filters_copy@@XZ_5.0+0x7cc>
    4e78:	ldr	x8, [sp, #8]
    4e7c:	mov	x9, #0x10                  	// #16
    4e80:	ldr	x8, [x8, #16]
    4e84:	ldur	x10, [x29, #-24]
    4e88:	ldr	x11, [sp, #16]
    4e8c:	mul	x9, x9, x11
    4e90:	add	x9, x10, x9
    4e94:	ldr	x0, [x9, #8]
    4e98:	blr	x8
    4e9c:	str	x0, [sp]
    4ea0:	ldr	x8, [sp]
    4ea4:	mov	x9, #0xffffffffffffffff    	// #-1
    4ea8:	cmp	x8, x9
    4eac:	b.ne	4ebc <lzma_filters_copy@@XZ_5.0+0x7bc>  // b.any
    4eb0:	mov	x8, #0xffffffffffffffff    	// #-1
    4eb4:	stur	x8, [x29, #-8]
    4eb8:	b	4f00 <lzma_filters_copy@@XZ_5.0+0x800>
    4ebc:	ldr	x8, [sp]
    4ec0:	ldr	x9, [sp, #24]
    4ec4:	add	x8, x9, x8
    4ec8:	str	x8, [sp, #24]
    4ecc:	ldur	x8, [x29, #-24]
    4ed0:	ldr	x9, [sp, #16]
    4ed4:	add	x9, x9, #0x1
    4ed8:	str	x9, [sp, #16]
    4edc:	mov	x10, #0x10                  	// #16
    4ee0:	mul	x9, x10, x9
    4ee4:	ldr	x8, [x8, x9]
    4ee8:	mov	x9, #0xffffffffffffffff    	// #-1
    4eec:	cmp	x8, x9
    4ef0:	b.ne	4e28 <lzma_filters_copy@@XZ_5.0+0x728>  // b.any
    4ef4:	ldr	x8, [sp, #24]
    4ef8:	add	x8, x8, #0x8, lsl #12
    4efc:	stur	x8, [x29, #-8]
    4f00:	ldur	x0, [x29, #-8]
    4f04:	ldp	x29, x30, [sp, #64]
    4f08:	add	sp, sp, #0x50
    4f0c:	ret

0000000000004f10 <lzma_physmem@@XZ_5.0>:
    4f10:	stp	x29, x30, [sp, #-16]!
    4f14:	mov	x29, sp
    4f18:	bl	3644 <pthread_cond_timedwait@plt+0xe4>
    4f1c:	ldp	x29, x30, [sp], #16
    4f20:	ret

0000000000004f24 <lzma_index_init@@XZ_5.0>:
    4f24:	sub	sp, sp, #0x30
    4f28:	stp	x29, x30, [sp, #32]
    4f2c:	add	x29, sp, #0x20
    4f30:	str	x0, [sp, #16]
    4f34:	ldr	x0, [sp, #16]
    4f38:	bl	4fb8 <lzma_index_init@@XZ_5.0+0x94>
    4f3c:	str	x0, [sp, #8]
    4f40:	ldr	x8, [sp, #8]
    4f44:	cbnz	x8, 4f54 <lzma_index_init@@XZ_5.0+0x30>
    4f48:	mov	x8, xzr
    4f4c:	stur	x8, [x29, #-8]
    4f50:	b	4fa8 <lzma_index_init@@XZ_5.0+0x84>
    4f54:	ldr	x4, [sp, #16]
    4f58:	mov	x8, xzr
    4f5c:	mov	x0, x8
    4f60:	mov	x1, x8
    4f64:	mov	w2, #0x1                   	// #1
    4f68:	mov	x3, x8
    4f6c:	bl	5030 <lzma_index_init@@XZ_5.0+0x10c>
    4f70:	str	x0, [sp]
    4f74:	ldr	x8, [sp]
    4f78:	cbnz	x8, 4f94 <lzma_index_init@@XZ_5.0+0x70>
    4f7c:	ldr	x0, [sp, #8]
    4f80:	ldr	x1, [sp, #16]
    4f84:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    4f88:	mov	x8, xzr
    4f8c:	stur	x8, [x29, #-8]
    4f90:	b	4fa8 <lzma_index_init@@XZ_5.0+0x84>
    4f94:	ldr	x0, [sp, #8]
    4f98:	ldr	x1, [sp]
    4f9c:	bl	510c <lzma_index_init@@XZ_5.0+0x1e8>
    4fa0:	ldr	x8, [sp, #8]
    4fa4:	stur	x8, [x29, #-8]
    4fa8:	ldur	x0, [x29, #-8]
    4fac:	ldp	x29, x30, [sp, #32]
    4fb0:	add	sp, sp, #0x30
    4fb4:	ret
    4fb8:	sub	sp, sp, #0x20
    4fbc:	stp	x29, x30, [sp, #16]
    4fc0:	add	x29, sp, #0x10
    4fc4:	mov	x8, #0x50                  	// #80
    4fc8:	str	x0, [sp, #8]
    4fcc:	ldr	x1, [sp, #8]
    4fd0:	mov	x0, x8
    4fd4:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    4fd8:	str	x0, [sp]
    4fdc:	ldr	x8, [sp]
    4fe0:	cbz	x8, 5020 <lzma_index_init@@XZ_5.0+0xfc>
    4fe4:	ldr	x0, [sp]
    4fe8:	bl	6ca4 <lzma_index_iter_locate@@XZ_5.0+0x1ac>
    4fec:	ldr	x8, [sp]
    4ff0:	str	xzr, [x8, #32]
    4ff4:	ldr	x8, [sp]
    4ff8:	str	xzr, [x8, #40]
    4ffc:	ldr	x8, [sp]
    5000:	str	xzr, [x8, #48]
    5004:	ldr	x8, [sp]
    5008:	str	xzr, [x8, #56]
    500c:	ldr	x8, [sp]
    5010:	mov	x9, #0x200                 	// #512
    5014:	str	x9, [x8, #64]
    5018:	ldr	x8, [sp]
    501c:	str	wzr, [x8, #72]
    5020:	ldr	x0, [sp]
    5024:	ldp	x29, x30, [sp, #16]
    5028:	add	sp, sp, #0x20
    502c:	ret
    5030:	sub	sp, sp, #0x50
    5034:	stp	x29, x30, [sp, #64]
    5038:	add	x29, sp, #0x40
    503c:	mov	x8, #0xa8                  	// #168
    5040:	stur	x0, [x29, #-16]
    5044:	stur	x1, [x29, #-24]
    5048:	stur	w2, [x29, #-28]
    504c:	str	x3, [sp, #24]
    5050:	str	x4, [sp, #16]
    5054:	ldr	x1, [sp, #16]
    5058:	mov	x0, x8
    505c:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    5060:	str	x0, [sp, #8]
    5064:	ldr	x8, [sp, #8]
    5068:	cbnz	x8, 5078 <lzma_index_init@@XZ_5.0+0x154>
    506c:	mov	x8, xzr
    5070:	stur	x8, [x29, #-8]
    5074:	b	50fc <lzma_index_init@@XZ_5.0+0x1d8>
    5078:	ldur	x8, [x29, #-24]
    507c:	ldr	x9, [sp, #8]
    5080:	str	x8, [x9]
    5084:	ldur	x8, [x29, #-16]
    5088:	ldr	x9, [sp, #8]
    508c:	str	x8, [x9, #8]
    5090:	ldr	x8, [sp, #8]
    5094:	mov	x9, xzr
    5098:	str	x9, [x8, #16]
    509c:	ldr	x8, [sp, #8]
    50a0:	str	x9, [x8, #24]
    50a4:	ldr	x8, [sp, #8]
    50a8:	str	x9, [x8, #32]
    50ac:	ldur	w10, [x29, #-28]
    50b0:	ldr	x8, [sp, #8]
    50b4:	str	w10, [x8, #40]
    50b8:	ldr	x8, [sp, #24]
    50bc:	ldr	x9, [sp, #8]
    50c0:	str	x8, [x9, #48]
    50c4:	ldr	x8, [sp, #8]
    50c8:	add	x0, x8, #0x38
    50cc:	bl	6ca4 <lzma_index_iter_locate@@XZ_5.0+0x1ac>
    50d0:	ldr	x8, [sp, #8]
    50d4:	str	xzr, [x8, #88]
    50d8:	ldr	x8, [sp, #8]
    50dc:	str	xzr, [x8, #96]
    50e0:	ldr	x8, [sp, #8]
    50e4:	mov	w10, #0xffffffff            	// #-1
    50e8:	str	w10, [x8, #104]
    50ec:	ldr	x8, [sp, #8]
    50f0:	str	xzr, [x8, #160]
    50f4:	ldr	x8, [sp, #8]
    50f8:	stur	x8, [x29, #-8]
    50fc:	ldur	x0, [x29, #-8]
    5100:	ldp	x29, x30, [sp, #64]
    5104:	add	sp, sp, #0x50
    5108:	ret
    510c:	sub	sp, sp, #0x40
    5110:	stp	x29, x30, [sp, #48]
    5114:	add	x29, sp, #0x30
    5118:	mov	x8, xzr
    511c:	stur	x0, [x29, #-8]
    5120:	stur	x1, [x29, #-16]
    5124:	ldur	x9, [x29, #-8]
    5128:	ldr	x9, [x9, #16]
    512c:	ldur	x10, [x29, #-16]
    5130:	str	x9, [x10, #16]
    5134:	ldur	x9, [x29, #-16]
    5138:	str	x8, [x9, #24]
    513c:	ldur	x9, [x29, #-16]
    5140:	str	x8, [x9, #32]
    5144:	ldur	x8, [x29, #-8]
    5148:	ldr	w11, [x8, #24]
    514c:	add	w11, w11, #0x1
    5150:	str	w11, [x8, #24]
    5154:	ldur	x8, [x29, #-8]
    5158:	ldr	x8, [x8]
    515c:	cbnz	x8, 5188 <lzma_index_init@@XZ_5.0+0x264>
    5160:	ldur	x8, [x29, #-16]
    5164:	ldur	x9, [x29, #-8]
    5168:	str	x8, [x9]
    516c:	ldur	x8, [x29, #-16]
    5170:	ldur	x9, [x29, #-8]
    5174:	str	x8, [x9, #8]
    5178:	ldur	x8, [x29, #-16]
    517c:	ldur	x9, [x29, #-8]
    5180:	str	x8, [x9, #16]
    5184:	b	529c <lzma_index_init@@XZ_5.0+0x378>
    5188:	ldur	x8, [x29, #-16]
    518c:	ldur	x9, [x29, #-8]
    5190:	ldr	x9, [x9, #16]
    5194:	str	x8, [x9, #32]
    5198:	ldur	x8, [x29, #-16]
    519c:	ldur	x9, [x29, #-8]
    51a0:	str	x8, [x9, #16]
    51a4:	ldur	x8, [x29, #-8]
    51a8:	ldr	w10, [x8, #24]
    51ac:	ldur	x8, [x29, #-8]
    51b0:	ldr	w0, [x8, #24]
    51b4:	str	w10, [sp, #12]
    51b8:	bl	6cd8 <lzma_index_iter_locate@@XZ_5.0+0x1e0>
    51bc:	mov	w10, #0x1                   	// #1
    51c0:	lsl	w10, w10, w0
    51c4:	ldr	w11, [sp, #12]
    51c8:	eor	w10, w11, w10
    51cc:	stur	w10, [x29, #-20]
    51d0:	ldur	w10, [x29, #-20]
    51d4:	cbz	w10, 529c <lzma_index_init@@XZ_5.0+0x378>
    51d8:	ldur	x8, [x29, #-8]
    51dc:	ldr	w0, [x8, #24]
    51e0:	bl	6cf4 <lzma_index_iter_locate@@XZ_5.0+0x1fc>
    51e4:	add	w9, w0, #0x2
    51e8:	stur	w9, [x29, #-20]
    51ec:	ldur	x8, [x29, #-16]
    51f0:	ldr	x8, [x8, #16]
    51f4:	stur	x8, [x29, #-16]
    51f8:	ldur	w8, [x29, #-20]
    51fc:	subs	w8, w8, #0x1
    5200:	stur	w8, [x29, #-20]
    5204:	cmp	w8, #0x0
    5208:	cset	w8, hi  // hi = pmore
    520c:	tbnz	w8, #0, 51ec <lzma_index_init@@XZ_5.0+0x2c8>
    5210:	ldur	x8, [x29, #-16]
    5214:	ldr	x8, [x8, #32]
    5218:	str	x8, [sp, #16]
    521c:	ldur	x8, [x29, #-16]
    5220:	ldr	x8, [x8, #16]
    5224:	cbnz	x8, 5238 <lzma_index_init@@XZ_5.0+0x314>
    5228:	ldr	x8, [sp, #16]
    522c:	ldur	x9, [x29, #-8]
    5230:	str	x8, [x9]
    5234:	b	5248 <lzma_index_init@@XZ_5.0+0x324>
    5238:	ldr	x8, [sp, #16]
    523c:	ldur	x9, [x29, #-16]
    5240:	ldr	x9, [x9, #16]
    5244:	str	x8, [x9, #32]
    5248:	ldur	x8, [x29, #-16]
    524c:	ldr	x8, [x8, #16]
    5250:	ldr	x9, [sp, #16]
    5254:	str	x8, [x9, #16]
    5258:	ldr	x8, [sp, #16]
    525c:	ldr	x8, [x8, #24]
    5260:	ldur	x9, [x29, #-16]
    5264:	str	x8, [x9, #32]
    5268:	ldur	x8, [x29, #-16]
    526c:	ldr	x8, [x8, #32]
    5270:	cbz	x8, 5284 <lzma_index_init@@XZ_5.0+0x360>
    5274:	ldur	x8, [x29, #-16]
    5278:	ldur	x9, [x29, #-16]
    527c:	ldr	x9, [x9, #32]
    5280:	str	x8, [x9, #16]
    5284:	ldur	x8, [x29, #-16]
    5288:	ldr	x9, [sp, #16]
    528c:	str	x8, [x9, #24]
    5290:	ldr	x8, [sp, #16]
    5294:	ldur	x9, [x29, #-16]
    5298:	str	x8, [x9, #16]
    529c:	ldp	x29, x30, [sp, #48]
    52a0:	add	sp, sp, #0x40
    52a4:	ret

00000000000052a8 <lzma_index_end@@XZ_5.0>:
    52a8:	sub	sp, sp, #0x20
    52ac:	stp	x29, x30, [sp, #16]
    52b0:	add	x29, sp, #0x10
    52b4:	str	x0, [sp, #8]
    52b8:	str	x1, [sp]
    52bc:	ldr	x8, [sp, #8]
    52c0:	cbz	x8, 52e4 <lzma_index_end@@XZ_5.0+0x3c>
    52c4:	ldr	x0, [sp, #8]
    52c8:	ldr	x1, [sp]
    52cc:	adrp	x2, 5000 <lzma_index_init@@XZ_5.0+0xdc>
    52d0:	add	x2, x2, #0x334
    52d4:	bl	52f0 <lzma_index_end@@XZ_5.0+0x48>
    52d8:	ldr	x0, [sp, #8]
    52dc:	ldr	x1, [sp]
    52e0:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    52e4:	ldp	x29, x30, [sp, #16]
    52e8:	add	sp, sp, #0x20
    52ec:	ret
    52f0:	sub	sp, sp, #0x30
    52f4:	stp	x29, x30, [sp, #32]
    52f8:	add	x29, sp, #0x20
    52fc:	stur	x0, [x29, #-8]
    5300:	str	x1, [sp, #16]
    5304:	str	x2, [sp, #8]
    5308:	ldur	x8, [x29, #-8]
    530c:	ldr	x8, [x8]
    5310:	cbz	x8, 5328 <lzma_index_end@@XZ_5.0+0x80>
    5314:	ldur	x8, [x29, #-8]
    5318:	ldr	x0, [x8]
    531c:	ldr	x1, [sp, #16]
    5320:	ldr	x2, [sp, #8]
    5324:	bl	6d10 <lzma_index_iter_locate@@XZ_5.0+0x218>
    5328:	ldp	x29, x30, [sp, #32]
    532c:	add	sp, sp, #0x30
    5330:	ret
    5334:	sub	sp, sp, #0x30
    5338:	stp	x29, x30, [sp, #32]
    533c:	add	x29, sp, #0x20
    5340:	adrp	x2, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    5344:	ldr	x2, [x2, #3992]
    5348:	stur	x0, [x29, #-8]
    534c:	str	x1, [sp, #16]
    5350:	ldur	x8, [x29, #-8]
    5354:	str	x8, [sp, #8]
    5358:	ldr	x8, [sp, #8]
    535c:	add	x0, x8, #0x38
    5360:	ldr	x1, [sp, #16]
    5364:	bl	52f0 <lzma_index_end@@XZ_5.0+0x48>
    5368:	ldr	x0, [sp, #8]
    536c:	ldr	x1, [sp, #16]
    5370:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    5374:	ldp	x29, x30, [sp, #32]
    5378:	add	sp, sp, #0x30
    537c:	ret
    5380:	sub	sp, sp, #0x10
    5384:	mov	x8, #0xfffffffffffffffb    	// #-5
    5388:	movk	x8, #0xfff, lsl #48
    538c:	str	x0, [sp, #8]
    5390:	str	x1, [sp]
    5394:	ldr	x9, [sp]
    5398:	cmp	x9, x8
    539c:	b.ls	53ac <lzma_index_end@@XZ_5.0+0x104>  // b.plast
    53a0:	mov	x8, #0xfffffffffffffffb    	// #-5
    53a4:	movk	x8, #0xfff, lsl #48
    53a8:	str	x8, [sp]
    53ac:	ldr	x8, [sp]
    53b0:	ldr	x9, [sp, #8]
    53b4:	str	x8, [x9, #64]
    53b8:	add	sp, sp, #0x10
    53bc:	ret

00000000000053c0 <lzma_index_memusage@@XZ_5.0>:
    53c0:	sub	sp, sp, #0x60
    53c4:	mov	x8, #0x20                  	// #32
    53c8:	mov	x9, #0x128                 	// #296
    53cc:	mov	x10, #0x2060                	// #8288
    53d0:	mov	x11, #0x200                 	// #512
    53d4:	mov	x12, #0x70                  	// #112
    53d8:	mov	x13, #0xffffffffffffff8f    	// #-113
    53dc:	str	x0, [sp, #80]
    53e0:	str	x1, [sp, #72]
    53e4:	str	x8, [sp, #64]
    53e8:	str	x9, [sp, #56]
    53ec:	str	x10, [sp, #48]
    53f0:	ldr	x8, [sp, #72]
    53f4:	add	x8, x8, #0x200
    53f8:	subs	x8, x8, #0x1
    53fc:	udiv	x8, x8, x11
    5400:	str	x8, [sp, #40]
    5404:	ldr	x8, [sp, #80]
    5408:	mul	x8, x8, x9
    540c:	str	x8, [sp, #32]
    5410:	ldr	x8, [sp, #40]
    5414:	mul	x8, x8, x10
    5418:	str	x8, [sp, #24]
    541c:	str	x12, [sp, #16]
    5420:	str	x13, [sp, #8]
    5424:	ldr	x8, [sp, #80]
    5428:	cbz	x8, 549c <lzma_index_memusage@@XZ_5.0+0xdc>
    542c:	ldr	x8, [sp, #80]
    5430:	mov	x9, #0xffffffff            	// #4294967295
    5434:	cmp	x8, x9
    5438:	b.hi	549c <lzma_index_memusage@@XZ_5.0+0xdc>  // b.pmore
    543c:	ldr	x8, [sp, #72]
    5440:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    5444:	cmp	x8, x9
    5448:	b.hi	549c <lzma_index_memusage@@XZ_5.0+0xdc>  // b.pmore
    544c:	ldr	x8, [sp, #80]
    5450:	mov	x9, #0xd67c                	// #54908
    5454:	movk	x9, #0xa60d, lsl #16
    5458:	movk	x9, #0x67c8, lsl #32
    545c:	movk	x9, #0xdd, lsl #48
    5460:	cmp	x8, x9
    5464:	b.hi	549c <lzma_index_memusage@@XZ_5.0+0xdc>  // b.pmore
    5468:	ldr	x8, [sp, #40]
    546c:	mov	x9, #0x7e84                	// #32388
    5470:	movk	x9, #0x2a80, lsl #16
    5474:	movk	x9, #0xe847, lsl #32
    5478:	movk	x9, #0x7, lsl #48
    547c:	cmp	x8, x9
    5480:	b.hi	549c <lzma_index_memusage@@XZ_5.0+0xdc>  // b.pmore
    5484:	ldr	x8, [sp, #32]
    5488:	mov	x9, #0xffffffffffffff8f    	// #-113
    548c:	subs	x8, x9, x8
    5490:	ldr	x9, [sp, #24]
    5494:	cmp	x8, x9
    5498:	b.cs	54a8 <lzma_index_memusage@@XZ_5.0+0xe8>  // b.hs, b.nlast
    549c:	mov	x8, #0xffffffffffffffff    	// #-1
    54a0:	str	x8, [sp, #88]
    54a4:	b	54bc <lzma_index_memusage@@XZ_5.0+0xfc>
    54a8:	ldr	x8, [sp, #32]
    54ac:	add	x8, x8, #0x70
    54b0:	ldr	x9, [sp, #24]
    54b4:	add	x8, x8, x9
    54b8:	str	x8, [sp, #88]
    54bc:	ldr	x0, [sp, #88]
    54c0:	add	sp, sp, #0x60
    54c4:	ret

00000000000054c8 <lzma_index_memused@@XZ_5.0>:
    54c8:	sub	sp, sp, #0x20
    54cc:	stp	x29, x30, [sp, #16]
    54d0:	add	x29, sp, #0x10
    54d4:	str	x0, [sp, #8]
    54d8:	ldr	x8, [sp, #8]
    54dc:	ldr	w9, [x8, #24]
    54e0:	mov	w0, w9
    54e4:	ldr	x8, [sp, #8]
    54e8:	ldr	x1, [x8, #48]
    54ec:	bl	3180 <lzma_index_memusage@plt>
    54f0:	ldp	x29, x30, [sp, #16]
    54f4:	add	sp, sp, #0x20
    54f8:	ret

00000000000054fc <lzma_index_block_count@@XZ_5.0>:
    54fc:	sub	sp, sp, #0x10
    5500:	str	x0, [sp, #8]
    5504:	ldr	x8, [sp, #8]
    5508:	ldr	x0, [x8, #48]
    550c:	add	sp, sp, #0x10
    5510:	ret

0000000000005514 <lzma_index_stream_count@@XZ_5.0>:
    5514:	sub	sp, sp, #0x10
    5518:	str	x0, [sp, #8]
    551c:	ldr	x8, [sp, #8]
    5520:	ldr	w9, [x8, #24]
    5524:	mov	w0, w9
    5528:	add	sp, sp, #0x10
    552c:	ret

0000000000005530 <lzma_index_size@@XZ_5.0>:
    5530:	sub	sp, sp, #0x20
    5534:	stp	x29, x30, [sp, #16]
    5538:	add	x29, sp, #0x10
    553c:	str	x0, [sp, #8]
    5540:	ldr	x8, [sp, #8]
    5544:	ldr	x0, [x8, #48]
    5548:	ldr	x8, [sp, #8]
    554c:	ldr	x1, [x8, #56]
    5550:	bl	5560 <lzma_index_size@@XZ_5.0+0x30>
    5554:	ldp	x29, x30, [sp, #16]
    5558:	add	sp, sp, #0x20
    555c:	ret
    5560:	sub	sp, sp, #0x20
    5564:	stp	x29, x30, [sp, #16]
    5568:	add	x29, sp, #0x10
    556c:	str	x0, [sp, #8]
    5570:	str	x1, [sp]
    5574:	ldr	x0, [sp, #8]
    5578:	ldr	x1, [sp]
    557c:	bl	5808 <lzma_index_checks@@XZ_5.0+0xa4>
    5580:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    5584:	ldp	x29, x30, [sp, #16]
    5588:	add	sp, sp, #0x20
    558c:	ret

0000000000005590 <lzma_index_total_size@@XZ_5.0>:
    5590:	sub	sp, sp, #0x10
    5594:	str	x0, [sp, #8]
    5598:	ldr	x8, [sp, #8]
    559c:	ldr	x0, [x8, #40]
    55a0:	add	sp, sp, #0x10
    55a4:	ret

00000000000055a8 <lzma_index_stream_size@@XZ_5.0>:
    55a8:	sub	sp, sp, #0x20
    55ac:	stp	x29, x30, [sp, #16]
    55b0:	add	x29, sp, #0x10
    55b4:	str	x0, [sp, #8]
    55b8:	ldr	x8, [sp, #8]
    55bc:	ldr	x8, [x8, #40]
    55c0:	add	x8, x8, #0xc
    55c4:	ldr	x9, [sp, #8]
    55c8:	ldr	x0, [x9, #48]
    55cc:	ldr	x9, [sp, #8]
    55d0:	ldr	x1, [x9, #56]
    55d4:	str	x8, [sp]
    55d8:	bl	5560 <lzma_index_size@@XZ_5.0+0x30>
    55dc:	ldr	x8, [sp]
    55e0:	add	x9, x8, x0
    55e4:	add	x0, x9, #0xc
    55e8:	ldp	x29, x30, [sp, #16]
    55ec:	add	sp, sp, #0x20
    55f0:	ret

00000000000055f4 <lzma_index_file_size@@XZ_5.0>:
    55f4:	sub	sp, sp, #0x40
    55f8:	stp	x29, x30, [sp, #48]
    55fc:	add	x29, sp, #0x30
    5600:	stur	x0, [x29, #-8]
    5604:	ldur	x8, [x29, #-8]
    5608:	ldr	x8, [x8, #16]
    560c:	stur	x8, [x29, #-16]
    5610:	ldur	x8, [x29, #-16]
    5614:	ldr	x8, [x8, #72]
    5618:	str	x8, [sp, #24]
    561c:	ldur	x8, [x29, #-16]
    5620:	ldr	x0, [x8, #8]
    5624:	ldr	x8, [sp, #24]
    5628:	str	x0, [sp, #16]
    562c:	cbnz	x8, 563c <lzma_index_file_size@@XZ_5.0+0x48>
    5630:	mov	x8, xzr
    5634:	str	x8, [sp, #8]
    5638:	b	5660 <lzma_index_file_size@@XZ_5.0+0x6c>
    563c:	ldr	x8, [sp, #24]
    5640:	add	x8, x8, #0x40
    5644:	ldr	x9, [sp, #24]
    5648:	ldr	x9, [x9, #56]
    564c:	mov	x10, #0x10                  	// #16
    5650:	mul	x9, x10, x9
    5654:	add	x8, x8, x9
    5658:	ldr	x8, [x8, #8]
    565c:	str	x8, [sp, #8]
    5660:	ldr	x8, [sp, #8]
    5664:	ldur	x9, [x29, #-16]
    5668:	ldr	x2, [x9, #88]
    566c:	ldur	x9, [x29, #-16]
    5670:	ldr	x3, [x9, #96]
    5674:	ldur	x9, [x29, #-16]
    5678:	ldr	x4, [x9, #160]
    567c:	ldr	x0, [sp, #16]
    5680:	mov	x1, x8
    5684:	bl	5694 <lzma_index_file_size@@XZ_5.0+0xa0>
    5688:	ldp	x29, x30, [sp, #48]
    568c:	add	sp, sp, #0x40
    5690:	ret
    5694:	sub	sp, sp, #0x60
    5698:	stp	x29, x30, [sp, #80]
    569c:	add	x29, sp, #0x50
    56a0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    56a4:	stur	x0, [x29, #-16]
    56a8:	stur	x1, [x29, #-24]
    56ac:	stur	x2, [x29, #-32]
    56b0:	str	x3, [sp, #40]
    56b4:	str	x4, [sp, #32]
    56b8:	ldur	x9, [x29, #-16]
    56bc:	add	x9, x9, #0x18
    56c0:	ldr	x10, [sp, #32]
    56c4:	add	x9, x9, x10
    56c8:	ldur	x0, [x29, #-24]
    56cc:	str	x8, [sp, #16]
    56d0:	str	x9, [sp, #8]
    56d4:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    56d8:	ldr	x8, [sp, #8]
    56dc:	add	x9, x8, x0
    56e0:	str	x9, [sp, #24]
    56e4:	ldr	x9, [sp, #24]
    56e8:	ldr	x10, [sp, #16]
    56ec:	cmp	x9, x10
    56f0:	b.ls	5700 <lzma_index_file_size@@XZ_5.0+0x10c>  // b.plast
    56f4:	mov	x8, #0xffffffffffffffff    	// #-1
    56f8:	stur	x8, [x29, #-8]
    56fc:	b	573c <lzma_index_file_size@@XZ_5.0+0x148>
    5700:	ldur	x0, [x29, #-32]
    5704:	ldr	x1, [sp, #40]
    5708:	bl	5560 <lzma_index_size@@XZ_5.0+0x30>
    570c:	ldr	x8, [sp, #24]
    5710:	add	x8, x8, x0
    5714:	str	x8, [sp, #24]
    5718:	ldr	x8, [sp, #24]
    571c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    5720:	cmp	x8, x9
    5724:	b.ls	5734 <lzma_index_file_size@@XZ_5.0+0x140>  // b.plast
    5728:	mov	x8, #0xffffffffffffffff    	// #-1
    572c:	stur	x8, [x29, #-8]
    5730:	b	573c <lzma_index_file_size@@XZ_5.0+0x148>
    5734:	ldr	x8, [sp, #24]
    5738:	stur	x8, [x29, #-8]
    573c:	ldur	x0, [x29, #-8]
    5740:	ldp	x29, x30, [sp, #80]
    5744:	add	sp, sp, #0x60
    5748:	ret

000000000000574c <lzma_index_uncompressed_size@@XZ_5.0>:
    574c:	sub	sp, sp, #0x10
    5750:	str	x0, [sp, #8]
    5754:	ldr	x8, [sp, #8]
    5758:	ldr	x0, [x8, #32]
    575c:	add	sp, sp, #0x10
    5760:	ret

0000000000005764 <lzma_index_checks@@XZ_5.0>:
    5764:	sub	sp, sp, #0x20
    5768:	mov	w8, #0xffffffff            	// #-1
    576c:	str	x0, [sp, #24]
    5770:	ldr	x9, [sp, #24]
    5774:	ldr	w10, [x9, #72]
    5778:	str	w10, [sp, #20]
    577c:	ldr	x9, [sp, #24]
    5780:	ldr	x9, [x9, #16]
    5784:	str	x9, [sp, #8]
    5788:	ldr	x9, [sp, #8]
    578c:	ldr	w10, [x9, #104]
    5790:	cmp	w10, w8
    5794:	b.eq	57b4 <lzma_index_checks@@XZ_5.0+0x50>  // b.none
    5798:	ldr	x8, [sp, #8]
    579c:	ldr	w9, [x8, #120]
    57a0:	mov	w10, #0x1                   	// #1
    57a4:	lsl	w9, w10, w9
    57a8:	ldr	w10, [sp, #20]
    57ac:	orr	w9, w10, w9
    57b0:	str	w9, [sp, #20]
    57b4:	ldr	w0, [sp, #20]
    57b8:	add	sp, sp, #0x20
    57bc:	ret
    57c0:	sub	sp, sp, #0x20
    57c4:	stp	x29, x30, [sp, #16]
    57c8:	add	x29, sp, #0x10
    57cc:	mov	x8, #0x4                   	// #4
    57d0:	str	x0, [sp, #8]
    57d4:	ldr	x9, [sp, #8]
    57d8:	ldr	x0, [x9, #48]
    57dc:	ldr	x9, [sp, #8]
    57e0:	ldr	x1, [x9, #56]
    57e4:	str	x8, [sp]
    57e8:	bl	5808 <lzma_index_checks@@XZ_5.0+0xa4>
    57ec:	ldr	x8, [sp]
    57f0:	subs	x9, x8, x0
    57f4:	and	x9, x9, #0x3
    57f8:	mov	w0, w9
    57fc:	ldp	x29, x30, [sp, #16]
    5800:	add	sp, sp, #0x20
    5804:	ret
    5808:	sub	sp, sp, #0x20
    580c:	stp	x29, x30, [sp, #16]
    5810:	add	x29, sp, #0x10
    5814:	str	x0, [sp, #8]
    5818:	str	x1, [sp]
    581c:	ldr	x0, [sp, #8]
    5820:	bl	3480 <lzma_vli_size@plt>
    5824:	add	w8, w0, #0x1
    5828:	mov	w9, w8
    582c:	ubfx	x9, x9, #0, #32
    5830:	ldr	x10, [sp]
    5834:	add	x9, x9, x10
    5838:	add	x0, x9, #0x4
    583c:	ldp	x29, x30, [sp, #16]
    5840:	add	sp, sp, #0x20
    5844:	ret

0000000000005848 <lzma_index_stream_flags@@XZ_5.0>:
    5848:	sub	sp, sp, #0x40
    584c:	stp	x29, x30, [sp, #48]
    5850:	add	x29, sp, #0x30
    5854:	stur	x0, [x29, #-16]
    5858:	str	x1, [sp, #24]
    585c:	ldur	x8, [x29, #-16]
    5860:	cbz	x8, 586c <lzma_index_stream_flags@@XZ_5.0+0x24>
    5864:	ldr	x8, [sp, #24]
    5868:	cbnz	x8, 5878 <lzma_index_stream_flags@@XZ_5.0+0x30>
    586c:	mov	w8, #0xb                   	// #11
    5870:	stur	w8, [x29, #-4]
    5874:	b	58c0 <lzma_index_stream_flags@@XZ_5.0+0x78>
    5878:	ldr	x0, [sp, #24]
    587c:	ldr	x1, [sp, #24]
    5880:	bl	3110 <lzma_stream_flags_compare@plt>
    5884:	str	w0, [sp, #20]
    5888:	ldr	w8, [sp, #20]
    588c:	cbz	w8, 589c <lzma_index_stream_flags@@XZ_5.0+0x54>
    5890:	ldr	w8, [sp, #20]
    5894:	stur	w8, [x29, #-4]
    5898:	b	58c0 <lzma_index_stream_flags@@XZ_5.0+0x78>
    589c:	ldur	x8, [x29, #-16]
    58a0:	ldr	x8, [x8, #16]
    58a4:	str	x8, [sp, #8]
    58a8:	ldr	x8, [sp, #8]
    58ac:	add	x0, x8, #0x68
    58b0:	ldr	x1, [sp, #24]
    58b4:	mov	x2, #0x38                  	// #56
    58b8:	bl	3090 <memcpy@plt>
    58bc:	stur	wzr, [x29, #-4]
    58c0:	ldur	w0, [x29, #-4]
    58c4:	ldp	x29, x30, [sp, #48]
    58c8:	add	sp, sp, #0x40
    58cc:	ret

00000000000058d0 <lzma_index_stream_padding@@XZ_5.0>:
    58d0:	sub	sp, sp, #0x40
    58d4:	stp	x29, x30, [sp, #48]
    58d8:	add	x29, sp, #0x30
    58dc:	stur	x0, [x29, #-16]
    58e0:	str	x1, [sp, #24]
    58e4:	ldur	x8, [x29, #-16]
    58e8:	cbz	x8, 5908 <lzma_index_stream_padding@@XZ_5.0+0x38>
    58ec:	ldr	x8, [sp, #24]
    58f0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    58f4:	cmp	x8, x9
    58f8:	b.hi	5908 <lzma_index_stream_padding@@XZ_5.0+0x38>  // b.pmore
    58fc:	ldr	x8, [sp, #24]
    5900:	and	x8, x8, #0x3
    5904:	cbz	x8, 5914 <lzma_index_stream_padding@@XZ_5.0+0x44>
    5908:	mov	w8, #0xb                   	// #11
    590c:	stur	w8, [x29, #-4]
    5910:	b	5978 <lzma_index_stream_padding@@XZ_5.0+0xa8>
    5914:	ldur	x8, [x29, #-16]
    5918:	ldr	x8, [x8, #16]
    591c:	str	x8, [sp, #16]
    5920:	ldr	x8, [sp, #16]
    5924:	ldr	x8, [x8, #160]
    5928:	str	x8, [sp, #8]
    592c:	ldr	x8, [sp, #16]
    5930:	str	xzr, [x8, #160]
    5934:	ldur	x0, [x29, #-16]
    5938:	bl	3360 <lzma_index_file_size@plt>
    593c:	ldr	x8, [sp, #24]
    5940:	add	x8, x0, x8
    5944:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    5948:	cmp	x8, x9
    594c:	b.ls	5968 <lzma_index_stream_padding@@XZ_5.0+0x98>  // b.plast
    5950:	ldr	x8, [sp, #8]
    5954:	ldr	x9, [sp, #16]
    5958:	str	x8, [x9, #160]
    595c:	mov	w10, #0x9                   	// #9
    5960:	stur	w10, [x29, #-4]
    5964:	b	5978 <lzma_index_stream_padding@@XZ_5.0+0xa8>
    5968:	ldr	x8, [sp, #24]
    596c:	ldr	x9, [sp, #16]
    5970:	str	x8, [x9, #160]
    5974:	stur	wzr, [x29, #-4]
    5978:	ldur	w0, [x29, #-4]
    597c:	ldp	x29, x30, [sp, #48]
    5980:	add	sp, sp, #0x40
    5984:	ret

0000000000005988 <lzma_index_append@@XZ_5.0>:
    5988:	sub	sp, sp, #0x80
    598c:	stp	x29, x30, [sp, #112]
    5990:	add	x29, sp, #0x70
    5994:	stur	x0, [x29, #-16]
    5998:	stur	x1, [x29, #-24]
    599c:	stur	x2, [x29, #-32]
    59a0:	stur	x3, [x29, #-40]
    59a4:	ldur	x8, [x29, #-16]
    59a8:	cbz	x8, 59d8 <lzma_index_append@@XZ_5.0+0x50>
    59ac:	ldur	x8, [x29, #-32]
    59b0:	cmp	x8, #0x5
    59b4:	b.cc	59d8 <lzma_index_append@@XZ_5.0+0x50>  // b.lo, b.ul, b.last
    59b8:	ldur	x8, [x29, #-32]
    59bc:	mov	x9, #0x7ffffffffffffffc    	// #9223372036854775804
    59c0:	cmp	x8, x9
    59c4:	b.hi	59d8 <lzma_index_append@@XZ_5.0+0x50>  // b.pmore
    59c8:	ldur	x8, [x29, #-40]
    59cc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    59d0:	cmp	x8, x9
    59d4:	b.ls	59e4 <lzma_index_append@@XZ_5.0+0x5c>  // b.plast
    59d8:	mov	w8, #0xb                   	// #11
    59dc:	stur	w8, [x29, #-4]
    59e0:	b	5cd0 <lzma_index_append@@XZ_5.0+0x348>
    59e4:	ldur	x8, [x29, #-16]
    59e8:	ldr	x8, [x8, #16]
    59ec:	stur	x8, [x29, #-48]
    59f0:	ldur	x8, [x29, #-48]
    59f4:	ldr	x8, [x8, #72]
    59f8:	str	x8, [sp, #56]
    59fc:	ldr	x8, [sp, #56]
    5a00:	cbnz	x8, 5a10 <lzma_index_append@@XZ_5.0+0x88>
    5a04:	mov	x8, xzr
    5a08:	str	x8, [sp, #24]
    5a0c:	b	5a38 <lzma_index_append@@XZ_5.0+0xb0>
    5a10:	ldr	x8, [sp, #56]
    5a14:	add	x8, x8, #0x40
    5a18:	ldr	x9, [sp, #56]
    5a1c:	ldr	x9, [x9, #56]
    5a20:	mov	x10, #0x10                  	// #16
    5a24:	mul	x9, x10, x9
    5a28:	add	x8, x8, x9
    5a2c:	ldr	x0, [x8, #8]
    5a30:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    5a34:	str	x0, [sp, #24]
    5a38:	ldr	x8, [sp, #24]
    5a3c:	str	x8, [sp, #48]
    5a40:	ldr	x8, [sp, #56]
    5a44:	cbnz	x8, 5a54 <lzma_index_append@@XZ_5.0+0xcc>
    5a48:	mov	x8, xzr
    5a4c:	str	x8, [sp, #16]
    5a50:	b	5a74 <lzma_index_append@@XZ_5.0+0xec>
    5a54:	ldr	x8, [sp, #56]
    5a58:	add	x8, x8, #0x40
    5a5c:	ldr	x9, [sp, #56]
    5a60:	ldr	x9, [x9, #56]
    5a64:	mov	x10, #0x10                  	// #16
    5a68:	mul	x9, x10, x9
    5a6c:	ldr	x8, [x8, x9]
    5a70:	str	x8, [sp, #16]
    5a74:	ldr	x8, [sp, #16]
    5a78:	str	x8, [sp, #40]
    5a7c:	ldur	x0, [x29, #-32]
    5a80:	bl	3480 <lzma_vli_size@plt>
    5a84:	ldur	x8, [x29, #-40]
    5a88:	str	w0, [sp, #12]
    5a8c:	mov	x0, x8
    5a90:	bl	3480 <lzma_vli_size@plt>
    5a94:	ldr	w9, [sp, #12]
    5a98:	add	w10, w9, w0
    5a9c:	str	w10, [sp, #36]
    5aa0:	ldur	x8, [x29, #-48]
    5aa4:	ldr	x0, [x8, #8]
    5aa8:	ldr	x8, [sp, #48]
    5aac:	ldur	x11, [x29, #-32]
    5ab0:	add	x1, x8, x11
    5ab4:	ldur	x8, [x29, #-48]
    5ab8:	ldr	x8, [x8, #88]
    5abc:	add	x2, x8, #0x1
    5ac0:	ldur	x8, [x29, #-48]
    5ac4:	ldr	x8, [x8, #96]
    5ac8:	ldr	w10, [sp, #36]
    5acc:	mov	w11, w10
    5ad0:	add	x3, x8, x11
    5ad4:	ldur	x8, [x29, #-48]
    5ad8:	ldr	x4, [x8, #160]
    5adc:	bl	5694 <lzma_index_file_size@@XZ_5.0+0xa0>
    5ae0:	mov	x8, #0xffffffffffffffff    	// #-1
    5ae4:	cmp	x0, x8
    5ae8:	b.ne	5af8 <lzma_index_append@@XZ_5.0+0x170>  // b.any
    5aec:	mov	w8, #0x9                   	// #9
    5af0:	stur	w8, [x29, #-4]
    5af4:	b	5cd0 <lzma_index_append@@XZ_5.0+0x348>
    5af8:	ldur	x8, [x29, #-16]
    5afc:	ldr	x8, [x8, #48]
    5b00:	add	x0, x8, #0x1
    5b04:	ldur	x8, [x29, #-16]
    5b08:	ldr	x8, [x8, #56]
    5b0c:	ldr	w9, [sp, #36]
    5b10:	mov	w10, w9
    5b14:	add	x1, x8, x10
    5b18:	bl	5560 <lzma_index_size@@XZ_5.0+0x30>
    5b1c:	mov	x8, #0x400000000           	// #17179869184
    5b20:	cmp	x0, x8
    5b24:	b.ls	5b34 <lzma_index_append@@XZ_5.0+0x1ac>  // b.plast
    5b28:	mov	w8, #0x9                   	// #9
    5b2c:	stur	w8, [x29, #-4]
    5b30:	b	5cd0 <lzma_index_append@@XZ_5.0+0x348>
    5b34:	ldr	x8, [sp, #56]
    5b38:	cbz	x8, 5b6c <lzma_index_append@@XZ_5.0+0x1e4>
    5b3c:	ldr	x8, [sp, #56]
    5b40:	ldr	x8, [x8, #56]
    5b44:	add	x8, x8, #0x1
    5b48:	ldr	x9, [sp, #56]
    5b4c:	ldr	x9, [x9, #48]
    5b50:	cmp	x8, x9
    5b54:	b.cs	5b6c <lzma_index_append@@XZ_5.0+0x1e4>  // b.hs, b.nlast
    5b58:	ldr	x8, [sp, #56]
    5b5c:	ldr	x9, [x8, #56]
    5b60:	add	x9, x9, #0x1
    5b64:	str	x9, [x8, #56]
    5b68:	b	5c00 <lzma_index_append@@XZ_5.0+0x278>
    5b6c:	ldur	x8, [x29, #-16]
    5b70:	ldr	x8, [x8, #64]
    5b74:	mov	x9, #0x10                  	// #16
    5b78:	mul	x8, x8, x9
    5b7c:	add	x0, x8, #0x40
    5b80:	ldur	x1, [x29, #-24]
    5b84:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    5b88:	str	x0, [sp, #56]
    5b8c:	ldr	x8, [sp, #56]
    5b90:	cbnz	x8, 5ba0 <lzma_index_append@@XZ_5.0+0x218>
    5b94:	mov	w8, #0x5                   	// #5
    5b98:	stur	w8, [x29, #-4]
    5b9c:	b	5cd0 <lzma_index_append@@XZ_5.0+0x348>
    5ba0:	ldr	x8, [sp, #56]
    5ba4:	str	xzr, [x8, #56]
    5ba8:	ldur	x8, [x29, #-16]
    5bac:	ldr	x8, [x8, #64]
    5bb0:	ldr	x9, [sp, #56]
    5bb4:	str	x8, [x9, #48]
    5bb8:	ldur	x8, [x29, #-16]
    5bbc:	mov	x9, #0x200                 	// #512
    5bc0:	str	x9, [x8, #64]
    5bc4:	ldr	x8, [sp, #40]
    5bc8:	ldr	x9, [sp, #56]
    5bcc:	str	x8, [x9]
    5bd0:	ldr	x8, [sp, #48]
    5bd4:	ldr	x9, [sp, #56]
    5bd8:	str	x8, [x9, #8]
    5bdc:	ldur	x8, [x29, #-48]
    5be0:	ldr	x8, [x8, #88]
    5be4:	add	x8, x8, #0x1
    5be8:	ldr	x9, [sp, #56]
    5bec:	str	x8, [x9, #40]
    5bf0:	ldur	x8, [x29, #-48]
    5bf4:	add	x0, x8, #0x38
    5bf8:	ldr	x1, [sp, #56]
    5bfc:	bl	510c <lzma_index_init@@XZ_5.0+0x1e8>
    5c00:	ldr	x8, [sp, #40]
    5c04:	ldur	x9, [x29, #-40]
    5c08:	add	x8, x8, x9
    5c0c:	ldr	x9, [sp, #56]
    5c10:	add	x9, x9, #0x40
    5c14:	ldr	x10, [sp, #56]
    5c18:	ldr	x10, [x10, #56]
    5c1c:	mov	x11, #0x10                  	// #16
    5c20:	mul	x10, x11, x10
    5c24:	str	x8, [x9, x10]
    5c28:	ldr	x8, [sp, #48]
    5c2c:	ldur	x9, [x29, #-32]
    5c30:	add	x8, x8, x9
    5c34:	ldr	x9, [sp, #56]
    5c38:	add	x9, x9, #0x40
    5c3c:	ldr	x10, [sp, #56]
    5c40:	ldr	x10, [x10, #56]
    5c44:	mul	x10, x11, x10
    5c48:	add	x9, x9, x10
    5c4c:	str	x8, [x9, #8]
    5c50:	ldur	x8, [x29, #-48]
    5c54:	ldr	x9, [x8, #88]
    5c58:	add	x9, x9, #0x1
    5c5c:	str	x9, [x8, #88]
    5c60:	ldr	w12, [sp, #36]
    5c64:	mov	w8, w12
    5c68:	ldur	x9, [x29, #-48]
    5c6c:	ldr	x10, [x9, #96]
    5c70:	add	x8, x10, x8
    5c74:	str	x8, [x9, #96]
    5c78:	ldur	x0, [x29, #-32]
    5c7c:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    5c80:	ldur	x8, [x29, #-16]
    5c84:	ldr	x9, [x8, #40]
    5c88:	add	x9, x9, x0
    5c8c:	str	x9, [x8, #40]
    5c90:	ldur	x8, [x29, #-40]
    5c94:	ldur	x9, [x29, #-16]
    5c98:	ldr	x10, [x9, #32]
    5c9c:	add	x8, x10, x8
    5ca0:	str	x8, [x9, #32]
    5ca4:	ldur	x8, [x29, #-16]
    5ca8:	ldr	x9, [x8, #48]
    5cac:	add	x9, x9, #0x1
    5cb0:	str	x9, [x8, #48]
    5cb4:	ldr	w12, [sp, #36]
    5cb8:	mov	w8, w12
    5cbc:	ldur	x9, [x29, #-16]
    5cc0:	ldr	x10, [x9, #56]
    5cc4:	add	x8, x10, x8
    5cc8:	str	x8, [x9, #56]
    5ccc:	stur	wzr, [x29, #-4]
    5cd0:	ldur	w0, [x29, #-4]
    5cd4:	ldp	x29, x30, [sp, #112]
    5cd8:	add	sp, sp, #0x80
    5cdc:	ret
    5ce0:	sub	sp, sp, #0x10
    5ce4:	str	x0, [sp, #8]
    5ce8:	ldr	x8, [sp, #8]
    5cec:	add	x8, x8, #0x3
    5cf0:	and	x0, x8, #0xfffffffffffffffc
    5cf4:	add	sp, sp, #0x10
    5cf8:	ret

0000000000005cfc <lzma_index_cat@@XZ_5.0>:
    5cfc:	sub	sp, sp, #0xa0
    5d00:	stp	x29, x30, [sp, #144]
    5d04:	add	x29, sp, #0x90
    5d08:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    5d0c:	stur	x0, [x29, #-16]
    5d10:	stur	x1, [x29, #-24]
    5d14:	stur	x2, [x29, #-32]
    5d18:	ldur	x0, [x29, #-16]
    5d1c:	str	x8, [sp, #16]
    5d20:	bl	3360 <lzma_index_file_size@plt>
    5d24:	stur	x0, [x29, #-40]
    5d28:	ldur	x8, [x29, #-40]
    5d2c:	ldur	x0, [x29, #-24]
    5d30:	str	x8, [sp, #8]
    5d34:	bl	3360 <lzma_index_file_size@plt>
    5d38:	ldr	x8, [sp, #8]
    5d3c:	add	x9, x8, x0
    5d40:	ldr	x10, [sp, #16]
    5d44:	cmp	x9, x10
    5d48:	b.hi	5d6c <lzma_index_cat@@XZ_5.0+0x70>  // b.pmore
    5d4c:	ldur	x8, [x29, #-16]
    5d50:	ldr	x8, [x8, #32]
    5d54:	ldur	x9, [x29, #-24]
    5d58:	ldr	x9, [x9, #32]
    5d5c:	add	x8, x8, x9
    5d60:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    5d64:	cmp	x8, x9
    5d68:	b.ls	5d78 <lzma_index_cat@@XZ_5.0+0x7c>  // b.plast
    5d6c:	mov	w8, #0x9                   	// #9
    5d70:	stur	w8, [x29, #-4]
    5d74:	b	5ff4 <lzma_index_cat@@XZ_5.0+0x2f8>
    5d78:	ldur	x8, [x29, #-16]
    5d7c:	ldr	x0, [x8, #48]
    5d80:	ldur	x8, [x29, #-16]
    5d84:	ldr	x1, [x8, #56]
    5d88:	bl	5808 <lzma_index_checks@@XZ_5.0+0xa4>
    5d8c:	stur	x0, [x29, #-48]
    5d90:	ldur	x8, [x29, #-24]
    5d94:	ldr	x0, [x8, #48]
    5d98:	ldur	x8, [x29, #-24]
    5d9c:	ldr	x1, [x8, #56]
    5da0:	bl	5808 <lzma_index_checks@@XZ_5.0+0xa4>
    5da4:	stur	x0, [x29, #-56]
    5da8:	ldur	x8, [x29, #-48]
    5dac:	ldur	x9, [x29, #-56]
    5db0:	add	x0, x8, x9
    5db4:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    5db8:	mov	x8, #0x400000000           	// #17179869184
    5dbc:	cmp	x0, x8
    5dc0:	b.ls	5dd0 <lzma_index_cat@@XZ_5.0+0xd4>  // b.plast
    5dc4:	mov	w8, #0x9                   	// #9
    5dc8:	stur	w8, [x29, #-4]
    5dcc:	b	5ff4 <lzma_index_cat@@XZ_5.0+0x2f8>
    5dd0:	ldur	x8, [x29, #-16]
    5dd4:	ldr	x8, [x8, #16]
    5dd8:	stur	x8, [x29, #-64]
    5ddc:	ldur	x8, [x29, #-64]
    5de0:	ldr	x8, [x8, #72]
    5de4:	str	x8, [sp, #72]
    5de8:	ldr	x8, [sp, #72]
    5dec:	cbz	x8, 5f20 <lzma_index_cat@@XZ_5.0+0x224>
    5df0:	ldr	x8, [sp, #72]
    5df4:	ldr	x8, [x8, #56]
    5df8:	add	x8, x8, #0x1
    5dfc:	ldr	x9, [sp, #72]
    5e00:	ldr	x9, [x9, #48]
    5e04:	cmp	x8, x9
    5e08:	b.cs	5f20 <lzma_index_cat@@XZ_5.0+0x224>  // b.hs, b.nlast
    5e0c:	ldr	x8, [sp, #72]
    5e10:	ldr	x8, [x8, #56]
    5e14:	add	x8, x8, #0x1
    5e18:	mov	x9, #0x10                  	// #16
    5e1c:	mul	x8, x8, x9
    5e20:	add	x0, x8, #0x40
    5e24:	ldur	x1, [x29, #-32]
    5e28:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    5e2c:	str	x0, [sp, #64]
    5e30:	ldr	x8, [sp, #64]
    5e34:	cbnz	x8, 5e44 <lzma_index_cat@@XZ_5.0+0x148>
    5e38:	mov	w8, #0x5                   	// #5
    5e3c:	stur	w8, [x29, #-4]
    5e40:	b	5ff4 <lzma_index_cat@@XZ_5.0+0x2f8>
    5e44:	ldr	x0, [sp, #64]
    5e48:	ldr	x1, [sp, #72]
    5e4c:	mov	x2, #0x28                  	// #40
    5e50:	bl	3090 <memcpy@plt>
    5e54:	ldr	x8, [sp, #72]
    5e58:	ldr	x8, [x8, #56]
    5e5c:	add	x8, x8, #0x1
    5e60:	ldr	x9, [sp, #64]
    5e64:	str	x8, [x9, #48]
    5e68:	ldr	x8, [sp, #72]
    5e6c:	ldr	x8, [x8, #56]
    5e70:	ldr	x9, [sp, #64]
    5e74:	str	x8, [x9, #56]
    5e78:	ldr	x8, [sp, #72]
    5e7c:	ldr	x8, [x8, #40]
    5e80:	ldr	x9, [sp, #64]
    5e84:	str	x8, [x9, #40]
    5e88:	ldr	x8, [sp, #64]
    5e8c:	add	x0, x8, #0x40
    5e90:	ldr	x8, [sp, #72]
    5e94:	add	x1, x8, #0x40
    5e98:	ldr	x8, [sp, #64]
    5e9c:	ldr	x8, [x8, #48]
    5ea0:	mov	x9, #0x10                  	// #16
    5ea4:	mul	x2, x8, x9
    5ea8:	bl	3090 <memcpy@plt>
    5eac:	ldr	x8, [sp, #72]
    5eb0:	ldr	x8, [x8, #16]
    5eb4:	cbz	x8, 5ec8 <lzma_index_cat@@XZ_5.0+0x1cc>
    5eb8:	ldr	x8, [sp, #64]
    5ebc:	ldr	x9, [sp, #72]
    5ec0:	ldr	x9, [x9, #16]
    5ec4:	str	x8, [x9, #32]
    5ec8:	ldur	x8, [x29, #-64]
    5ecc:	ldr	x8, [x8, #64]
    5ed0:	ldr	x9, [sp, #72]
    5ed4:	cmp	x8, x9
    5ed8:	b.ne	5ef4 <lzma_index_cat@@XZ_5.0+0x1f8>  // b.any
    5edc:	ldr	x8, [sp, #64]
    5ee0:	ldur	x9, [x29, #-64]
    5ee4:	str	x8, [x9, #64]
    5ee8:	ldr	x8, [sp, #64]
    5eec:	ldur	x9, [x29, #-64]
    5ef0:	str	x8, [x9, #56]
    5ef4:	ldur	x8, [x29, #-64]
    5ef8:	ldr	x8, [x8, #72]
    5efc:	ldr	x9, [sp, #72]
    5f00:	cmp	x8, x9
    5f04:	b.ne	5f14 <lzma_index_cat@@XZ_5.0+0x218>  // b.any
    5f08:	ldr	x8, [sp, #64]
    5f0c:	ldur	x9, [x29, #-64]
    5f10:	str	x8, [x9, #72]
    5f14:	ldr	x0, [sp, #72]
    5f18:	ldur	x1, [x29, #-32]
    5f1c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    5f20:	ldur	x8, [x29, #-16]
    5f24:	ldr	x8, [x8, #32]
    5f28:	add	x9, sp, #0x18
    5f2c:	str	x8, [sp, #24]
    5f30:	ldur	x8, [x29, #-40]
    5f34:	str	x8, [sp, #32]
    5f38:	ldur	x8, [x29, #-16]
    5f3c:	ldr	x8, [x8, #48]
    5f40:	str	x8, [sp, #40]
    5f44:	ldur	x8, [x29, #-16]
    5f48:	ldr	w10, [x8, #24]
    5f4c:	str	w10, [sp, #48]
    5f50:	ldur	x8, [x29, #-16]
    5f54:	str	x8, [x9, #32]
    5f58:	ldur	x8, [x29, #-24]
    5f5c:	ldr	x1, [x8]
    5f60:	mov	x0, x9
    5f64:	bl	6004 <lzma_index_cat@@XZ_5.0+0x308>
    5f68:	ldur	x8, [x29, #-24]
    5f6c:	ldr	x8, [x8, #32]
    5f70:	ldur	x9, [x29, #-16]
    5f74:	ldr	x11, [x9, #32]
    5f78:	add	x8, x11, x8
    5f7c:	str	x8, [x9, #32]
    5f80:	ldur	x8, [x29, #-24]
    5f84:	ldr	x8, [x8, #40]
    5f88:	ldur	x9, [x29, #-16]
    5f8c:	ldr	x11, [x9, #40]
    5f90:	add	x8, x11, x8
    5f94:	str	x8, [x9, #40]
    5f98:	ldur	x8, [x29, #-24]
    5f9c:	ldr	x8, [x8, #48]
    5fa0:	ldur	x9, [x29, #-16]
    5fa4:	ldr	x11, [x9, #48]
    5fa8:	add	x8, x11, x8
    5fac:	str	x8, [x9, #48]
    5fb0:	ldur	x8, [x29, #-24]
    5fb4:	ldr	x8, [x8, #56]
    5fb8:	ldur	x9, [x29, #-16]
    5fbc:	ldr	x11, [x9, #56]
    5fc0:	add	x8, x11, x8
    5fc4:	str	x8, [x9, #56]
    5fc8:	ldur	x0, [x29, #-16]
    5fcc:	bl	31d0 <lzma_index_checks@plt>
    5fd0:	ldur	x8, [x29, #-24]
    5fd4:	ldr	w10, [x8, #72]
    5fd8:	orr	w10, w0, w10
    5fdc:	ldur	x8, [x29, #-16]
    5fe0:	str	w10, [x8, #72]
    5fe4:	ldur	x0, [x29, #-24]
    5fe8:	ldur	x1, [x29, #-32]
    5fec:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    5ff0:	stur	wzr, [x29, #-4]
    5ff4:	ldur	w0, [x29, #-4]
    5ff8:	ldp	x29, x30, [sp, #144]
    5ffc:	add	sp, sp, #0xa0
    6000:	ret
    6004:	sub	sp, sp, #0x30
    6008:	stp	x29, x30, [sp, #32]
    600c:	add	x29, sp, #0x20
    6010:	stur	x0, [x29, #-8]
    6014:	str	x1, [sp, #16]
    6018:	ldr	x8, [sp, #16]
    601c:	ldr	x8, [x8, #24]
    6020:	str	x8, [sp, #8]
    6024:	ldr	x8, [sp, #16]
    6028:	ldr	x8, [x8, #32]
    602c:	str	x8, [sp]
    6030:	ldr	x8, [sp, #8]
    6034:	cbz	x8, 6044 <lzma_index_cat@@XZ_5.0+0x348>
    6038:	ldur	x0, [x29, #-8]
    603c:	ldr	x1, [sp, #8]
    6040:	bl	6004 <lzma_index_cat@@XZ_5.0+0x308>
    6044:	ldur	x8, [x29, #-8]
    6048:	ldr	x8, [x8]
    604c:	ldr	x9, [sp, #16]
    6050:	ldr	x10, [x9]
    6054:	add	x8, x10, x8
    6058:	str	x8, [x9]
    605c:	ldur	x8, [x29, #-8]
    6060:	ldr	x8, [x8, #8]
    6064:	ldr	x9, [sp, #16]
    6068:	ldr	x10, [x9, #8]
    606c:	add	x8, x10, x8
    6070:	str	x8, [x9, #8]
    6074:	ldur	x8, [x29, #-8]
    6078:	ldr	w11, [x8, #24]
    607c:	ldr	x8, [sp, #16]
    6080:	ldr	w12, [x8, #40]
    6084:	add	w11, w12, w11
    6088:	str	w11, [x8, #40]
    608c:	ldur	x8, [x29, #-8]
    6090:	ldr	x8, [x8, #16]
    6094:	ldr	x9, [sp, #16]
    6098:	ldr	x10, [x9, #48]
    609c:	add	x8, x10, x8
    60a0:	str	x8, [x9, #48]
    60a4:	ldur	x8, [x29, #-8]
    60a8:	ldr	x0, [x8, #32]
    60ac:	ldr	x1, [sp, #16]
    60b0:	bl	510c <lzma_index_init@@XZ_5.0+0x1e8>
    60b4:	ldr	x8, [sp]
    60b8:	cbz	x8, 60c8 <lzma_index_cat@@XZ_5.0+0x3cc>
    60bc:	ldur	x0, [x29, #-8]
    60c0:	ldr	x1, [sp]
    60c4:	bl	6004 <lzma_index_cat@@XZ_5.0+0x308>
    60c8:	ldp	x29, x30, [sp, #32]
    60cc:	add	sp, sp, #0x30
    60d0:	ret

00000000000060d4 <lzma_index_dup@@XZ_5.0>:
    60d4:	sub	sp, sp, #0x40
    60d8:	stp	x29, x30, [sp, #48]
    60dc:	add	x29, sp, #0x30
    60e0:	stur	x0, [x29, #-16]
    60e4:	str	x1, [sp, #24]
    60e8:	ldr	x0, [sp, #24]
    60ec:	bl	4fb8 <lzma_index_init@@XZ_5.0+0x94>
    60f0:	str	x0, [sp, #16]
    60f4:	ldr	x8, [sp, #16]
    60f8:	cbnz	x8, 6108 <lzma_index_dup@@XZ_5.0+0x34>
    60fc:	mov	x8, xzr
    6100:	stur	x8, [x29, #-8]
    6104:	b	61ac <lzma_index_dup@@XZ_5.0+0xd8>
    6108:	ldur	x8, [x29, #-16]
    610c:	ldr	x8, [x8, #32]
    6110:	ldr	x9, [sp, #16]
    6114:	str	x8, [x9, #32]
    6118:	ldur	x8, [x29, #-16]
    611c:	ldr	x8, [x8, #40]
    6120:	ldr	x9, [sp, #16]
    6124:	str	x8, [x9, #40]
    6128:	ldur	x8, [x29, #-16]
    612c:	ldr	x8, [x8, #48]
    6130:	ldr	x9, [sp, #16]
    6134:	str	x8, [x9, #48]
    6138:	ldur	x8, [x29, #-16]
    613c:	ldr	x8, [x8, #56]
    6140:	ldr	x9, [sp, #16]
    6144:	str	x8, [x9, #56]
    6148:	ldur	x8, [x29, #-16]
    614c:	ldr	x8, [x8, #8]
    6150:	str	x8, [sp, #8]
    6154:	ldr	x0, [sp, #8]
    6158:	ldr	x1, [sp, #24]
    615c:	bl	61bc <lzma_index_dup@@XZ_5.0+0xe8>
    6160:	str	x0, [sp]
    6164:	ldr	x8, [sp]
    6168:	cbnz	x8, 6184 <lzma_index_dup@@XZ_5.0+0xb0>
    616c:	ldr	x0, [sp, #16]
    6170:	ldr	x1, [sp, #24]
    6174:	bl	33e0 <lzma_index_end@plt>
    6178:	mov	x8, xzr
    617c:	stur	x8, [x29, #-8]
    6180:	b	61ac <lzma_index_dup@@XZ_5.0+0xd8>
    6184:	ldr	x0, [sp, #16]
    6188:	ldr	x1, [sp]
    618c:	bl	510c <lzma_index_init@@XZ_5.0+0x1e8>
    6190:	ldr	x0, [sp, #8]
    6194:	bl	63b0 <lzma_index_dup@@XZ_5.0+0x2dc>
    6198:	str	x0, [sp, #8]
    619c:	ldr	x8, [sp, #8]
    61a0:	cbnz	x8, 6154 <lzma_index_dup@@XZ_5.0+0x80>
    61a4:	ldr	x8, [sp, #16]
    61a8:	stur	x8, [x29, #-8]
    61ac:	ldur	x0, [x29, #-8]
    61b0:	ldp	x29, x30, [sp, #48]
    61b4:	add	sp, sp, #0x40
    61b8:	ret
    61bc:	sub	sp, sp, #0x50
    61c0:	stp	x29, x30, [sp, #64]
    61c4:	add	x29, sp, #0x40
    61c8:	mov	x8, #0xfffffffffffffffb    	// #-5
    61cc:	movk	x8, #0xfff, lsl #48
    61d0:	stur	x0, [x29, #-16]
    61d4:	stur	x1, [x29, #-24]
    61d8:	ldur	x9, [x29, #-16]
    61dc:	ldr	x9, [x9, #88]
    61e0:	cmp	x9, x8
    61e4:	b.ls	61f4 <lzma_index_dup@@XZ_5.0+0x120>  // b.plast
    61e8:	mov	x8, xzr
    61ec:	stur	x8, [x29, #-8]
    61f0:	b	63a0 <lzma_index_dup@@XZ_5.0+0x2cc>
    61f4:	ldur	x8, [x29, #-16]
    61f8:	ldr	x0, [x8, #8]
    61fc:	ldur	x8, [x29, #-16]
    6200:	ldr	x1, [x8]
    6204:	ldur	x8, [x29, #-16]
    6208:	ldr	w2, [x8, #40]
    620c:	ldur	x8, [x29, #-16]
    6210:	ldr	x3, [x8, #48]
    6214:	ldur	x4, [x29, #-24]
    6218:	bl	5030 <lzma_index_init@@XZ_5.0+0x10c>
    621c:	str	x0, [sp, #32]
    6220:	ldr	x8, [sp, #32]
    6224:	cbnz	x8, 6234 <lzma_index_dup@@XZ_5.0+0x160>
    6228:	mov	x8, xzr
    622c:	stur	x8, [x29, #-8]
    6230:	b	63a0 <lzma_index_dup@@XZ_5.0+0x2cc>
    6234:	ldur	x8, [x29, #-16]
    6238:	ldr	x8, [x8, #88]
    623c:	ldr	x9, [sp, #32]
    6240:	str	x8, [x9, #88]
    6244:	ldur	x8, [x29, #-16]
    6248:	ldr	x8, [x8, #96]
    624c:	ldr	x9, [sp, #32]
    6250:	str	x8, [x9, #96]
    6254:	ldr	x8, [sp, #32]
    6258:	add	x0, x8, #0x68
    625c:	ldur	x8, [x29, #-16]
    6260:	add	x1, x8, #0x68
    6264:	mov	x2, #0x38                  	// #56
    6268:	bl	3090 <memcpy@plt>
    626c:	ldur	x8, [x29, #-16]
    6270:	ldr	x8, [x8, #160]
    6274:	ldr	x9, [sp, #32]
    6278:	str	x8, [x9, #160]
    627c:	ldur	x8, [x29, #-16]
    6280:	ldr	x8, [x8, #64]
    6284:	cbnz	x8, 6294 <lzma_index_dup@@XZ_5.0+0x1c0>
    6288:	ldr	x8, [sp, #32]
    628c:	stur	x8, [x29, #-8]
    6290:	b	63a0 <lzma_index_dup@@XZ_5.0+0x2cc>
    6294:	ldur	x8, [x29, #-16]
    6298:	ldr	x8, [x8, #88]
    629c:	mov	x9, #0x10                  	// #16
    62a0:	mul	x8, x8, x9
    62a4:	add	x0, x8, #0x40
    62a8:	ldur	x1, [x29, #-24]
    62ac:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    62b0:	str	x0, [sp, #24]
    62b4:	ldr	x8, [sp, #24]
    62b8:	cbnz	x8, 62d4 <lzma_index_dup@@XZ_5.0+0x200>
    62bc:	ldr	x0, [sp, #32]
    62c0:	ldur	x1, [x29, #-24]
    62c4:	bl	5334 <lzma_index_end@@XZ_5.0+0x8c>
    62c8:	mov	x8, xzr
    62cc:	stur	x8, [x29, #-8]
    62d0:	b	63a0 <lzma_index_dup@@XZ_5.0+0x2cc>
    62d4:	ldr	x8, [sp, #24]
    62d8:	str	xzr, [x8]
    62dc:	ldr	x8, [sp, #24]
    62e0:	str	xzr, [x8, #8]
    62e4:	ldr	x8, [sp, #24]
    62e8:	mov	x9, #0x1                   	// #1
    62ec:	str	x9, [x8, #40]
    62f0:	ldur	x8, [x29, #-16]
    62f4:	ldr	x8, [x8, #88]
    62f8:	ldr	x9, [sp, #24]
    62fc:	str	x8, [x9, #48]
    6300:	ldur	x8, [x29, #-16]
    6304:	ldr	x8, [x8, #88]
    6308:	subs	x8, x8, #0x1
    630c:	ldr	x9, [sp, #24]
    6310:	str	x8, [x9, #56]
    6314:	ldur	x8, [x29, #-16]
    6318:	ldr	x8, [x8, #64]
    631c:	str	x8, [sp, #16]
    6320:	str	xzr, [sp, #8]
    6324:	ldr	x8, [sp, #24]
    6328:	add	x8, x8, #0x40
    632c:	ldr	x9, [sp, #8]
    6330:	mov	x10, #0x10                  	// #16
    6334:	mul	x9, x10, x9
    6338:	add	x0, x8, x9
    633c:	ldr	x8, [sp, #16]
    6340:	add	x1, x8, #0x40
    6344:	ldr	x8, [sp, #16]
    6348:	ldr	x8, [x8, #56]
    634c:	add	x8, x8, #0x1
    6350:	mov	x9, #0x10                  	// #16
    6354:	mul	x2, x8, x9
    6358:	bl	3090 <memcpy@plt>
    635c:	ldr	x8, [sp, #16]
    6360:	ldr	x8, [x8, #56]
    6364:	add	x8, x8, #0x1
    6368:	ldr	x9, [sp, #8]
    636c:	add	x8, x9, x8
    6370:	str	x8, [sp, #8]
    6374:	ldr	x0, [sp, #16]
    6378:	bl	63b0 <lzma_index_dup@@XZ_5.0+0x2dc>
    637c:	str	x0, [sp, #16]
    6380:	ldr	x8, [sp, #16]
    6384:	cbnz	x8, 6324 <lzma_index_dup@@XZ_5.0+0x250>
    6388:	ldr	x8, [sp, #32]
    638c:	add	x0, x8, #0x38
    6390:	ldr	x1, [sp, #24]
    6394:	bl	510c <lzma_index_init@@XZ_5.0+0x1e8>
    6398:	ldr	x8, [sp, #32]
    639c:	stur	x8, [x29, #-8]
    63a0:	ldur	x0, [x29, #-8]
    63a4:	ldp	x29, x30, [sp, #64]
    63a8:	add	sp, sp, #0x50
    63ac:	ret
    63b0:	sub	sp, sp, #0x20
    63b4:	str	x0, [sp, #16]
    63b8:	ldr	x8, [sp, #16]
    63bc:	ldr	x8, [x8, #32]
    63c0:	cbz	x8, 63f8 <lzma_index_dup@@XZ_5.0+0x324>
    63c4:	ldr	x8, [sp, #16]
    63c8:	ldr	x8, [x8, #32]
    63cc:	str	x8, [sp, #16]
    63d0:	ldr	x8, [sp, #16]
    63d4:	ldr	x8, [x8, #24]
    63d8:	cbz	x8, 63ec <lzma_index_dup@@XZ_5.0+0x318>
    63dc:	ldr	x8, [sp, #16]
    63e0:	ldr	x8, [x8, #24]
    63e4:	str	x8, [sp, #16]
    63e8:	b	63d0 <lzma_index_dup@@XZ_5.0+0x2fc>
    63ec:	ldr	x8, [sp, #16]
    63f0:	str	x8, [sp, #24]
    63f4:	b	6450 <lzma_index_dup@@XZ_5.0+0x37c>
    63f8:	ldr	x8, [sp, #16]
    63fc:	ldr	x8, [x8, #16]
    6400:	mov	w9, #0x0                   	// #0
    6404:	str	w9, [sp, #12]
    6408:	cbz	x8, 6428 <lzma_index_dup@@XZ_5.0+0x354>
    640c:	ldr	x8, [sp, #16]
    6410:	ldr	x8, [x8, #16]
    6414:	ldr	x8, [x8, #32]
    6418:	ldr	x9, [sp, #16]
    641c:	cmp	x8, x9
    6420:	cset	w10, eq  // eq = none
    6424:	str	w10, [sp, #12]
    6428:	ldr	w8, [sp, #12]
    642c:	tbnz	w8, #0, 6434 <lzma_index_dup@@XZ_5.0+0x360>
    6430:	b	6444 <lzma_index_dup@@XZ_5.0+0x370>
    6434:	ldr	x8, [sp, #16]
    6438:	ldr	x8, [x8, #16]
    643c:	str	x8, [sp, #16]
    6440:	b	63f8 <lzma_index_dup@@XZ_5.0+0x324>
    6444:	ldr	x8, [sp, #16]
    6448:	ldr	x8, [x8, #16]
    644c:	str	x8, [sp, #24]
    6450:	ldr	x0, [sp, #24]
    6454:	add	sp, sp, #0x20
    6458:	ret

000000000000645c <lzma_index_iter_init@@XZ_5.0>:
    645c:	sub	sp, sp, #0x20
    6460:	stp	x29, x30, [sp, #16]
    6464:	add	x29, sp, #0x10
    6468:	str	x0, [sp, #8]
    646c:	str	x1, [sp]
    6470:	ldr	x8, [sp]
    6474:	ldr	x9, [sp, #8]
    6478:	str	x8, [x9, #256]
    647c:	ldr	x0, [sp, #8]
    6480:	bl	30a0 <lzma_index_iter_rewind@plt>
    6484:	ldp	x29, x30, [sp, #16]
    6488:	add	sp, sp, #0x20
    648c:	ret

0000000000006490 <lzma_index_iter_rewind@@XZ_5.0>:
    6490:	sub	sp, sp, #0x10
    6494:	mov	x8, xzr
    6498:	str	x0, [sp, #8]
    649c:	ldr	x9, [sp, #8]
    64a0:	str	x8, [x9, #264]
    64a4:	ldr	x9, [sp, #8]
    64a8:	str	x8, [x9, #272]
    64ac:	ldr	x8, [sp, #8]
    64b0:	str	xzr, [x8, #280]
    64b4:	ldr	x8, [sp, #8]
    64b8:	str	xzr, [x8, #288]
    64bc:	add	sp, sp, #0x10
    64c0:	ret

00000000000064c4 <lzma_index_iter_next@@XZ_5.0>:
    64c4:	sub	sp, sp, #0x60
    64c8:	stp	x29, x30, [sp, #80]
    64cc:	add	x29, sp, #0x50
    64d0:	stur	x0, [x29, #-16]
    64d4:	stur	w1, [x29, #-20]
    64d8:	ldur	w8, [x29, #-20]
    64dc:	cmp	w8, #0x3
    64e0:	b.ls	64f0 <lzma_index_iter_next@@XZ_5.0+0x2c>  // b.plast
    64e4:	mov	w8, #0x1                   	// #1
    64e8:	sturb	w8, [x29, #-1]
    64ec:	b	673c <lzma_index_iter_next@@XZ_5.0+0x278>
    64f0:	ldur	x8, [x29, #-16]
    64f4:	ldr	x8, [x8, #256]
    64f8:	stur	x8, [x29, #-32]
    64fc:	ldur	x8, [x29, #-16]
    6500:	ldr	x8, [x8, #264]
    6504:	str	x8, [sp, #40]
    6508:	mov	x8, xzr
    650c:	str	x8, [sp, #32]
    6510:	ldur	x8, [x29, #-16]
    6514:	ldr	x8, [x8, #280]
    6518:	str	x8, [sp, #24]
    651c:	ldur	w9, [x29, #-20]
    6520:	cmp	w9, #0x1
    6524:	b.eq	658c <lzma_index_iter_next@@XZ_5.0+0xc8>  // b.none
    6528:	ldur	x8, [x29, #-16]
    652c:	ldr	x8, [x8, #288]
    6530:	str	x8, [sp, #16]
    6534:	cbz	x8, 655c <lzma_index_iter_next@@XZ_5.0+0x98>
    6538:	b	653c <lzma_index_iter_next@@XZ_5.0+0x78>
    653c:	ldr	x8, [sp, #16]
    6540:	cmp	x8, #0x1
    6544:	b.eq	656c <lzma_index_iter_next@@XZ_5.0+0xa8>  // b.none
    6548:	b	654c <lzma_index_iter_next@@XZ_5.0+0x88>
    654c:	ldr	x8, [sp, #16]
    6550:	cmp	x8, #0x2
    6554:	b.eq	6580 <lzma_index_iter_next@@XZ_5.0+0xbc>  // b.none
    6558:	b	658c <lzma_index_iter_next@@XZ_5.0+0xc8>
    655c:	ldur	x8, [x29, #-16]
    6560:	ldr	x8, [x8, #272]
    6564:	str	x8, [sp, #32]
    6568:	b	658c <lzma_index_iter_next@@XZ_5.0+0xc8>
    656c:	ldur	x8, [x29, #-16]
    6570:	ldr	x0, [x8, #272]
    6574:	bl	63b0 <lzma_index_dup@@XZ_5.0+0x2dc>
    6578:	str	x0, [sp, #32]
    657c:	b	658c <lzma_index_iter_next@@XZ_5.0+0xc8>
    6580:	ldr	x8, [sp, #40]
    6584:	ldr	x8, [x8, #64]
    6588:	str	x8, [sp, #32]
    658c:	ldr	x8, [sp, #40]
    6590:	cbnz	x8, 65f0 <lzma_index_iter_next@@XZ_5.0+0x12c>
    6594:	ldur	x8, [x29, #-32]
    6598:	ldr	x8, [x8, #8]
    659c:	str	x8, [sp, #40]
    65a0:	ldur	w9, [x29, #-20]
    65a4:	cmp	w9, #0x2
    65a8:	b.cc	65dc <lzma_index_iter_next@@XZ_5.0+0x118>  // b.lo, b.ul, b.last
    65ac:	ldr	x8, [sp, #40]
    65b0:	ldr	x8, [x8, #64]
    65b4:	cbnz	x8, 65dc <lzma_index_iter_next@@XZ_5.0+0x118>
    65b8:	ldr	x0, [sp, #40]
    65bc:	bl	63b0 <lzma_index_dup@@XZ_5.0+0x2dc>
    65c0:	str	x0, [sp, #40]
    65c4:	ldr	x8, [sp, #40]
    65c8:	cbnz	x8, 65d8 <lzma_index_iter_next@@XZ_5.0+0x114>
    65cc:	mov	w8, #0x1                   	// #1
    65d0:	sturb	w8, [x29, #-1]
    65d4:	b	673c <lzma_index_iter_next@@XZ_5.0+0x278>
    65d8:	b	65ac <lzma_index_iter_next@@XZ_5.0+0xe8>
    65dc:	ldr	x8, [sp, #40]
    65e0:	ldr	x8, [x8, #64]
    65e4:	str	x8, [sp, #32]
    65e8:	str	xzr, [sp, #24]
    65ec:	b	6698 <lzma_index_iter_next@@XZ_5.0+0x1d4>
    65f0:	ldr	x8, [sp, #32]
    65f4:	cbz	x8, 661c <lzma_index_iter_next@@XZ_5.0+0x158>
    65f8:	ldr	x8, [sp, #24]
    65fc:	ldr	x9, [sp, #32]
    6600:	ldr	x9, [x9, #56]
    6604:	cmp	x8, x9
    6608:	b.cs	661c <lzma_index_iter_next@@XZ_5.0+0x158>  // b.hs, b.nlast
    660c:	ldr	x8, [sp, #24]
    6610:	add	x8, x8, #0x1
    6614:	str	x8, [sp, #24]
    6618:	b	6698 <lzma_index_iter_next@@XZ_5.0+0x1d4>
    661c:	str	xzr, [sp, #24]
    6620:	ldr	x8, [sp, #32]
    6624:	cbz	x8, 6634 <lzma_index_iter_next@@XZ_5.0+0x170>
    6628:	ldr	x0, [sp, #32]
    662c:	bl	63b0 <lzma_index_dup@@XZ_5.0+0x2dc>
    6630:	str	x0, [sp, #32]
    6634:	ldr	x8, [sp, #32]
    6638:	cbnz	x8, 6698 <lzma_index_iter_next@@XZ_5.0+0x1d4>
    663c:	ldr	x0, [sp, #40]
    6640:	bl	63b0 <lzma_index_dup@@XZ_5.0+0x2dc>
    6644:	str	x0, [sp, #40]
    6648:	ldr	x8, [sp, #40]
    664c:	cbnz	x8, 665c <lzma_index_iter_next@@XZ_5.0+0x198>
    6650:	mov	w8, #0x1                   	// #1
    6654:	sturb	w8, [x29, #-1]
    6658:	b	673c <lzma_index_iter_next@@XZ_5.0+0x278>
    665c:	ldur	w8, [x29, #-20]
    6660:	mov	w9, #0x0                   	// #0
    6664:	cmp	w8, #0x2
    6668:	str	w9, [sp, #12]
    666c:	b.cc	6684 <lzma_index_iter_next@@XZ_5.0+0x1c0>  // b.lo, b.ul, b.last
    6670:	ldr	x8, [sp, #40]
    6674:	ldr	x8, [x8, #64]
    6678:	cmp	x8, #0x0
    667c:	cset	w9, eq  // eq = none
    6680:	str	w9, [sp, #12]
    6684:	ldr	w8, [sp, #12]
    6688:	tbnz	w8, #0, 663c <lzma_index_iter_next@@XZ_5.0+0x178>
    668c:	ldr	x8, [sp, #40]
    6690:	ldr	x8, [x8, #64]
    6694:	str	x8, [sp, #32]
    6698:	ldur	w8, [x29, #-20]
    669c:	cmp	w8, #0x3
    66a0:	b.ne	6708 <lzma_index_iter_next@@XZ_5.0+0x244>  // b.any
    66a4:	ldr	x8, [sp, #24]
    66a8:	cbnz	x8, 66cc <lzma_index_iter_next@@XZ_5.0+0x208>
    66ac:	ldr	x8, [sp, #32]
    66b0:	ldr	x8, [x8]
    66b4:	ldr	x9, [sp, #32]
    66b8:	ldr	x9, [x9, #64]
    66bc:	cmp	x8, x9
    66c0:	b.ne	66c8 <lzma_index_iter_next@@XZ_5.0+0x204>  // b.any
    66c4:	b	658c <lzma_index_iter_next@@XZ_5.0+0xc8>
    66c8:	b	6708 <lzma_index_iter_next@@XZ_5.0+0x244>
    66cc:	ldr	x8, [sp, #32]
    66d0:	add	x8, x8, #0x40
    66d4:	ldr	x9, [sp, #24]
    66d8:	subs	x9, x9, #0x1
    66dc:	mov	x10, #0x10                  	// #16
    66e0:	mul	x9, x10, x9
    66e4:	ldr	x8, [x8, x9]
    66e8:	ldr	x9, [sp, #32]
    66ec:	add	x9, x9, #0x40
    66f0:	ldr	x11, [sp, #24]
    66f4:	mul	x10, x10, x11
    66f8:	ldr	x9, [x9, x10]
    66fc:	cmp	x8, x9
    6700:	b.ne	6708 <lzma_index_iter_next@@XZ_5.0+0x244>  // b.any
    6704:	b	658c <lzma_index_iter_next@@XZ_5.0+0xc8>
    6708:	ldr	x8, [sp, #40]
    670c:	ldur	x9, [x29, #-16]
    6710:	str	x8, [x9, #264]
    6714:	ldr	x8, [sp, #32]
    6718:	ldur	x9, [x29, #-16]
    671c:	str	x8, [x9, #272]
    6720:	ldr	x8, [sp, #24]
    6724:	ldur	x9, [x29, #-16]
    6728:	str	x8, [x9, #280]
    672c:	ldur	x0, [x29, #-16]
    6730:	bl	674c <lzma_index_iter_next@@XZ_5.0+0x288>
    6734:	mov	w10, #0x0                   	// #0
    6738:	sturb	w10, [x29, #-1]
    673c:	ldurb	w0, [x29, #-1]
    6740:	ldp	x29, x30, [sp, #80]
    6744:	add	sp, sp, #0x60
    6748:	ret
    674c:	sub	sp, sp, #0x70
    6750:	stp	x29, x30, [sp, #96]
    6754:	add	x29, sp, #0x60
    6758:	stur	x0, [x29, #-8]
    675c:	ldur	x8, [x29, #-8]
    6760:	ldr	x8, [x8, #256]
    6764:	stur	x8, [x29, #-16]
    6768:	ldur	x8, [x29, #-8]
    676c:	ldr	x8, [x8, #264]
    6770:	stur	x8, [x29, #-24]
    6774:	ldur	x8, [x29, #-8]
    6778:	ldr	x8, [x8, #272]
    677c:	stur	x8, [x29, #-32]
    6780:	ldur	x8, [x29, #-8]
    6784:	ldr	x8, [x8, #280]
    6788:	stur	x8, [x29, #-40]
    678c:	ldur	x8, [x29, #-32]
    6790:	cbnz	x8, 67a4 <lzma_index_iter_next@@XZ_5.0+0x2e0>
    6794:	ldur	x8, [x29, #-8]
    6798:	mov	x9, #0x2                   	// #2
    679c:	str	x9, [x8, #288]
    67a0:	b	6824 <lzma_index_iter_next@@XZ_5.0+0x360>
    67a4:	ldur	x8, [x29, #-16]
    67a8:	ldr	x8, [x8, #16]
    67ac:	ldur	x9, [x29, #-24]
    67b0:	cmp	x8, x9
    67b4:	b.ne	67cc <lzma_index_iter_next@@XZ_5.0+0x308>  // b.any
    67b8:	ldur	x8, [x29, #-24]
    67bc:	ldr	x8, [x8, #72]
    67c0:	ldur	x9, [x29, #-32]
    67c4:	cmp	x8, x9
    67c8:	b.eq	67d8 <lzma_index_iter_next@@XZ_5.0+0x314>  // b.none
    67cc:	ldur	x8, [x29, #-8]
    67d0:	str	xzr, [x8, #288]
    67d4:	b	6824 <lzma_index_iter_next@@XZ_5.0+0x360>
    67d8:	ldur	x8, [x29, #-24]
    67dc:	ldr	x8, [x8, #64]
    67e0:	ldur	x9, [x29, #-32]
    67e4:	cmp	x8, x9
    67e8:	b.eq	680c <lzma_index_iter_next@@XZ_5.0+0x348>  // b.none
    67ec:	ldur	x8, [x29, #-8]
    67f0:	mov	x9, #0x1                   	// #1
    67f4:	str	x9, [x8, #288]
    67f8:	ldur	x8, [x29, #-32]
    67fc:	ldr	x8, [x8, #16]
    6800:	ldur	x9, [x29, #-8]
    6804:	str	x8, [x9, #272]
    6808:	b	6824 <lzma_index_iter_next@@XZ_5.0+0x360>
    680c:	ldur	x8, [x29, #-8]
    6810:	mov	x9, #0x2                   	// #2
    6814:	str	x9, [x8, #288]
    6818:	ldur	x8, [x29, #-8]
    681c:	mov	x9, xzr
    6820:	str	x9, [x8, #272]
    6824:	ldur	x8, [x29, #-24]
    6828:	ldr	w9, [x8, #40]
    682c:	mov	w8, w9
    6830:	ldur	x10, [x29, #-8]
    6834:	str	x8, [x10, #32]
    6838:	ldur	x8, [x29, #-24]
    683c:	ldr	x8, [x8, #88]
    6840:	ldur	x10, [x29, #-8]
    6844:	str	x8, [x10, #40]
    6848:	ldur	x8, [x29, #-24]
    684c:	ldr	x8, [x8, #8]
    6850:	ldur	x10, [x29, #-8]
    6854:	str	x8, [x10, #48]
    6858:	ldur	x8, [x29, #-24]
    685c:	ldr	x8, [x8]
    6860:	ldur	x10, [x29, #-8]
    6864:	str	x8, [x10, #56]
    6868:	ldur	x8, [x29, #-24]
    686c:	ldr	w9, [x8, #104]
    6870:	mov	w11, #0xffffffff            	// #-1
    6874:	cmp	w9, w11
    6878:	b.ne	6888 <lzma_index_iter_next@@XZ_5.0+0x3c4>  // b.any
    687c:	mov	x8, xzr
    6880:	str	x8, [sp, #40]
    6884:	b	6894 <lzma_index_iter_next@@XZ_5.0+0x3d0>
    6888:	ldur	x8, [x29, #-24]
    688c:	add	x8, x8, #0x68
    6890:	str	x8, [sp, #40]
    6894:	ldr	x8, [sp, #40]
    6898:	ldur	x9, [x29, #-8]
    689c:	str	x8, [x9]
    68a0:	ldur	x8, [x29, #-24]
    68a4:	ldr	x8, [x8, #160]
    68a8:	ldur	x9, [x29, #-8]
    68ac:	str	x8, [x9, #80]
    68b0:	ldur	x8, [x29, #-24]
    68b4:	ldr	x8, [x8, #72]
    68b8:	cbnz	x8, 68e4 <lzma_index_iter_next@@XZ_5.0+0x420>
    68bc:	mov	x8, xzr
    68c0:	mov	x0, x8
    68c4:	mov	x1, x8
    68c8:	bl	5560 <lzma_index_size@@XZ_5.0+0x30>
    68cc:	add	x8, x0, #0x18
    68d0:	ldur	x9, [x29, #-8]
    68d4:	str	x8, [x9, #64]
    68d8:	ldur	x8, [x29, #-8]
    68dc:	str	xzr, [x8, #72]
    68e0:	b	696c <lzma_index_iter_next@@XZ_5.0+0x4a8>
    68e4:	ldur	x8, [x29, #-24]
    68e8:	mov	x9, #0x10                  	// #16
    68ec:	ldr	x8, [x8, #72]
    68f0:	str	x8, [sp, #48]
    68f4:	ldur	x8, [x29, #-24]
    68f8:	ldr	x0, [x8, #88]
    68fc:	ldur	x8, [x29, #-24]
    6900:	ldr	x1, [x8, #96]
    6904:	str	x9, [sp, #32]
    6908:	bl	5560 <lzma_index_size@@XZ_5.0+0x30>
    690c:	add	x8, x0, #0x18
    6910:	ldr	x9, [sp, #48]
    6914:	add	x9, x9, #0x40
    6918:	ldr	x10, [sp, #48]
    691c:	ldr	x10, [x10, #56]
    6920:	ldr	x11, [sp, #32]
    6924:	mul	x10, x11, x10
    6928:	add	x9, x9, x10
    692c:	ldr	x0, [x9, #8]
    6930:	str	x8, [sp, #24]
    6934:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    6938:	ldr	x8, [sp, #24]
    693c:	add	x9, x8, x0
    6940:	ldur	x10, [x29, #-8]
    6944:	str	x9, [x10, #64]
    6948:	ldr	x9, [sp, #48]
    694c:	add	x9, x9, #0x40
    6950:	ldr	x10, [sp, #48]
    6954:	ldr	x10, [x10, #56]
    6958:	ldr	x11, [sp, #32]
    695c:	mul	x10, x11, x10
    6960:	ldr	x9, [x9, x10]
    6964:	ldur	x10, [x29, #-8]
    6968:	str	x9, [x10, #72]
    696c:	ldur	x8, [x29, #-32]
    6970:	cbz	x8, 6aec <lzma_index_iter_next@@XZ_5.0+0x628>
    6974:	ldur	x8, [x29, #-32]
    6978:	ldr	x8, [x8, #40]
    697c:	ldur	x9, [x29, #-40]
    6980:	add	x8, x8, x9
    6984:	ldur	x9, [x29, #-8]
    6988:	str	x8, [x9, #144]
    698c:	ldur	x8, [x29, #-8]
    6990:	ldr	x8, [x8, #144]
    6994:	ldur	x9, [x29, #-24]
    6998:	ldr	x9, [x9, #48]
    699c:	add	x8, x8, x9
    69a0:	ldur	x9, [x29, #-8]
    69a4:	str	x8, [x9, #120]
    69a8:	ldur	x8, [x29, #-40]
    69ac:	cbnz	x8, 69c0 <lzma_index_iter_next@@XZ_5.0+0x4fc>
    69b0:	ldur	x8, [x29, #-32]
    69b4:	ldr	x8, [x8, #8]
    69b8:	str	x8, [sp, #16]
    69bc:	b	69e8 <lzma_index_iter_next@@XZ_5.0+0x524>
    69c0:	ldur	x8, [x29, #-32]
    69c4:	add	x8, x8, #0x40
    69c8:	ldur	x9, [x29, #-40]
    69cc:	subs	x9, x9, #0x1
    69d0:	mov	x10, #0x10                  	// #16
    69d4:	mul	x9, x10, x9
    69d8:	add	x8, x8, x9
    69dc:	ldr	x0, [x8, #8]
    69e0:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    69e4:	str	x0, [sp, #16]
    69e8:	ldr	x8, [sp, #16]
    69ec:	ldur	x9, [x29, #-8]
    69f0:	str	x8, [x9, #152]
    69f4:	ldur	x8, [x29, #-40]
    69f8:	cbnz	x8, 6a0c <lzma_index_iter_next@@XZ_5.0+0x548>
    69fc:	ldur	x8, [x29, #-32]
    6a00:	ldr	x8, [x8]
    6a04:	str	x8, [sp, #8]
    6a08:	b	6a2c <lzma_index_iter_next@@XZ_5.0+0x568>
    6a0c:	ldur	x8, [x29, #-32]
    6a10:	add	x8, x8, #0x40
    6a14:	ldur	x9, [x29, #-40]
    6a18:	subs	x9, x9, #0x1
    6a1c:	mov	x10, #0x10                  	// #16
    6a20:	mul	x9, x10, x9
    6a24:	ldr	x8, [x8, x9]
    6a28:	str	x8, [sp, #8]
    6a2c:	ldr	x8, [sp, #8]
    6a30:	ldur	x9, [x29, #-8]
    6a34:	str	x8, [x9, #160]
    6a38:	ldur	x8, [x29, #-32]
    6a3c:	add	x8, x8, #0x40
    6a40:	ldur	x9, [x29, #-40]
    6a44:	mov	x10, #0x10                  	// #16
    6a48:	mul	x9, x10, x9
    6a4c:	ldr	x8, [x8, x9]
    6a50:	ldur	x9, [x29, #-8]
    6a54:	ldr	x9, [x9, #160]
    6a58:	subs	x8, x8, x9
    6a5c:	ldur	x9, [x29, #-8]
    6a60:	str	x8, [x9, #168]
    6a64:	ldur	x8, [x29, #-32]
    6a68:	add	x8, x8, #0x40
    6a6c:	ldur	x9, [x29, #-40]
    6a70:	mul	x9, x10, x9
    6a74:	add	x8, x8, x9
    6a78:	ldr	x8, [x8, #8]
    6a7c:	ldur	x9, [x29, #-8]
    6a80:	ldr	x9, [x9, #152]
    6a84:	subs	x8, x8, x9
    6a88:	ldur	x9, [x29, #-8]
    6a8c:	str	x8, [x9, #176]
    6a90:	ldur	x8, [x29, #-8]
    6a94:	ldr	x0, [x8, #176]
    6a98:	bl	5ce0 <lzma_index_append@@XZ_5.0+0x358>
    6a9c:	ldur	x8, [x29, #-8]
    6aa0:	str	x0, [x8, #184]
    6aa4:	ldur	x8, [x29, #-8]
    6aa8:	ldr	x9, [x8, #152]
    6aac:	add	x9, x9, #0xc
    6ab0:	str	x9, [x8, #152]
    6ab4:	ldur	x8, [x29, #-8]
    6ab8:	ldr	x8, [x8, #152]
    6abc:	ldur	x9, [x29, #-8]
    6ac0:	ldr	x9, [x9, #48]
    6ac4:	add	x8, x8, x9
    6ac8:	ldur	x9, [x29, #-8]
    6acc:	str	x8, [x9, #128]
    6ad0:	ldur	x8, [x29, #-8]
    6ad4:	ldr	x8, [x8, #160]
    6ad8:	ldur	x9, [x29, #-8]
    6adc:	ldr	x9, [x9, #56]
    6ae0:	add	x8, x8, x9
    6ae4:	ldur	x9, [x29, #-8]
    6ae8:	str	x8, [x9, #136]
    6aec:	ldp	x29, x30, [sp, #96]
    6af0:	add	sp, sp, #0x70
    6af4:	ret

0000000000006af8 <lzma_index_iter_locate@@XZ_5.0>:
    6af8:	sub	sp, sp, #0x60
    6afc:	stp	x29, x30, [sp, #80]
    6b00:	add	x29, sp, #0x50
    6b04:	stur	x0, [x29, #-16]
    6b08:	stur	x1, [x29, #-24]
    6b0c:	ldur	x8, [x29, #-16]
    6b10:	ldr	x8, [x8, #256]
    6b14:	stur	x8, [x29, #-32]
    6b18:	ldur	x8, [x29, #-32]
    6b1c:	ldr	x8, [x8, #32]
    6b20:	ldur	x9, [x29, #-24]
    6b24:	cmp	x8, x9
    6b28:	b.hi	6b38 <lzma_index_iter_locate@@XZ_5.0+0x40>  // b.pmore
    6b2c:	mov	w8, #0x1                   	// #1
    6b30:	sturb	w8, [x29, #-1]
    6b34:	b	6c24 <lzma_index_iter_locate@@XZ_5.0+0x12c>
    6b38:	ldur	x0, [x29, #-32]
    6b3c:	ldur	x1, [x29, #-24]
    6b40:	bl	6c34 <lzma_index_iter_locate@@XZ_5.0+0x13c>
    6b44:	str	x0, [sp, #40]
    6b48:	ldr	x8, [sp, #40]
    6b4c:	ldr	x8, [x8]
    6b50:	ldur	x9, [x29, #-24]
    6b54:	subs	x8, x9, x8
    6b58:	stur	x8, [x29, #-24]
    6b5c:	ldr	x8, [sp, #40]
    6b60:	add	x0, x8, #0x38
    6b64:	ldur	x1, [x29, #-24]
    6b68:	bl	6c34 <lzma_index_iter_locate@@XZ_5.0+0x13c>
    6b6c:	str	x0, [sp, #32]
    6b70:	str	xzr, [sp, #24]
    6b74:	ldr	x8, [sp, #32]
    6b78:	ldr	x8, [x8, #56]
    6b7c:	str	x8, [sp, #16]
    6b80:	ldr	x8, [sp, #24]
    6b84:	ldr	x9, [sp, #16]
    6b88:	cmp	x8, x9
    6b8c:	b.cs	6bf0 <lzma_index_iter_locate@@XZ_5.0+0xf8>  // b.hs, b.nlast
    6b90:	ldr	x8, [sp, #24]
    6b94:	ldr	x9, [sp, #16]
    6b98:	ldr	x10, [sp, #24]
    6b9c:	subs	x9, x9, x10
    6ba0:	mov	x10, #0x2                   	// #2
    6ba4:	udiv	x9, x9, x10
    6ba8:	add	x8, x8, x9
    6bac:	str	x8, [sp, #8]
    6bb0:	ldr	x8, [sp, #32]
    6bb4:	add	x8, x8, #0x40
    6bb8:	ldr	x9, [sp, #8]
    6bbc:	mov	x10, #0x10                  	// #16
    6bc0:	mul	x9, x10, x9
    6bc4:	ldr	x8, [x8, x9]
    6bc8:	ldur	x9, [x29, #-24]
    6bcc:	cmp	x8, x9
    6bd0:	b.hi	6be4 <lzma_index_iter_locate@@XZ_5.0+0xec>  // b.pmore
    6bd4:	ldr	x8, [sp, #8]
    6bd8:	add	x8, x8, #0x1
    6bdc:	str	x8, [sp, #24]
    6be0:	b	6bec <lzma_index_iter_locate@@XZ_5.0+0xf4>
    6be4:	ldr	x8, [sp, #8]
    6be8:	str	x8, [sp, #16]
    6bec:	b	6b80 <lzma_index_iter_locate@@XZ_5.0+0x88>
    6bf0:	ldr	x8, [sp, #40]
    6bf4:	ldur	x9, [x29, #-16]
    6bf8:	str	x8, [x9, #264]
    6bfc:	ldr	x8, [sp, #32]
    6c00:	ldur	x9, [x29, #-16]
    6c04:	str	x8, [x9, #272]
    6c08:	ldr	x8, [sp, #24]
    6c0c:	ldur	x9, [x29, #-16]
    6c10:	str	x8, [x9, #280]
    6c14:	ldur	x0, [x29, #-16]
    6c18:	bl	674c <lzma_index_iter_next@@XZ_5.0+0x288>
    6c1c:	mov	w10, #0x0                   	// #0
    6c20:	sturb	w10, [x29, #-1]
    6c24:	ldurb	w0, [x29, #-1]
    6c28:	ldp	x29, x30, [sp, #80]
    6c2c:	add	sp, sp, #0x60
    6c30:	ret
    6c34:	sub	sp, sp, #0x20
    6c38:	mov	x8, xzr
    6c3c:	str	x0, [sp, #24]
    6c40:	str	x1, [sp, #16]
    6c44:	str	x8, [sp, #8]
    6c48:	ldr	x8, [sp, #24]
    6c4c:	ldr	x8, [x8]
    6c50:	str	x8, [sp]
    6c54:	ldr	x8, [sp]
    6c58:	cbz	x8, 6c98 <lzma_index_iter_locate@@XZ_5.0+0x1a0>
    6c5c:	ldr	x8, [sp]
    6c60:	ldr	x8, [x8]
    6c64:	ldr	x9, [sp, #16]
    6c68:	cmp	x8, x9
    6c6c:	b.ls	6c80 <lzma_index_iter_locate@@XZ_5.0+0x188>  // b.plast
    6c70:	ldr	x8, [sp]
    6c74:	ldr	x8, [x8, #24]
    6c78:	str	x8, [sp]
    6c7c:	b	6c94 <lzma_index_iter_locate@@XZ_5.0+0x19c>
    6c80:	ldr	x8, [sp]
    6c84:	str	x8, [sp, #8]
    6c88:	ldr	x8, [sp]
    6c8c:	ldr	x8, [x8, #32]
    6c90:	str	x8, [sp]
    6c94:	b	6c54 <lzma_index_iter_locate@@XZ_5.0+0x15c>
    6c98:	ldr	x0, [sp, #8]
    6c9c:	add	sp, sp, #0x20
    6ca0:	ret
    6ca4:	sub	sp, sp, #0x10
    6ca8:	mov	x8, xzr
    6cac:	str	x0, [sp, #8]
    6cb0:	ldr	x9, [sp, #8]
    6cb4:	str	x8, [x9]
    6cb8:	ldr	x9, [sp, #8]
    6cbc:	str	x8, [x9, #8]
    6cc0:	ldr	x9, [sp, #8]
    6cc4:	str	x8, [x9, #16]
    6cc8:	ldr	x8, [sp, #8]
    6ccc:	str	wzr, [x8, #24]
    6cd0:	add	sp, sp, #0x10
    6cd4:	ret
    6cd8:	sub	sp, sp, #0x10
    6cdc:	str	w0, [sp, #12]
    6ce0:	ldr	w8, [sp, #12]
    6ce4:	clz	w8, w8
    6ce8:	eor	w0, w8, #0x1f
    6cec:	add	sp, sp, #0x10
    6cf0:	ret
    6cf4:	sub	sp, sp, #0x10
    6cf8:	str	w0, [sp, #12]
    6cfc:	ldr	w8, [sp, #12]
    6d00:	rbit	w8, w8
    6d04:	clz	w0, w8
    6d08:	add	sp, sp, #0x10
    6d0c:	ret
    6d10:	sub	sp, sp, #0x30
    6d14:	stp	x29, x30, [sp, #32]
    6d18:	add	x29, sp, #0x20
    6d1c:	stur	x0, [x29, #-8]
    6d20:	str	x1, [sp, #16]
    6d24:	str	x2, [sp, #8]
    6d28:	ldur	x8, [x29, #-8]
    6d2c:	ldr	x8, [x8, #24]
    6d30:	cbz	x8, 6d48 <lzma_index_iter_locate@@XZ_5.0+0x250>
    6d34:	ldur	x8, [x29, #-8]
    6d38:	ldr	x0, [x8, #24]
    6d3c:	ldr	x1, [sp, #16]
    6d40:	ldr	x2, [sp, #8]
    6d44:	bl	6d10 <lzma_index_iter_locate@@XZ_5.0+0x218>
    6d48:	ldur	x8, [x29, #-8]
    6d4c:	ldr	x8, [x8, #32]
    6d50:	cbz	x8, 6d68 <lzma_index_iter_locate@@XZ_5.0+0x270>
    6d54:	ldur	x8, [x29, #-8]
    6d58:	ldr	x0, [x8, #32]
    6d5c:	ldr	x1, [sp, #16]
    6d60:	ldr	x2, [sp, #8]
    6d64:	bl	6d10 <lzma_index_iter_locate@@XZ_5.0+0x218>
    6d68:	ldr	x8, [sp, #8]
    6d6c:	ldur	x0, [x29, #-8]
    6d70:	ldr	x1, [sp, #16]
    6d74:	blr	x8
    6d78:	ldp	x29, x30, [sp, #32]
    6d7c:	add	sp, sp, #0x30
    6d80:	ret

0000000000006d84 <lzma_stream_flags_compare@@XZ_5.0>:
    6d84:	sub	sp, sp, #0x30
    6d88:	stp	x29, x30, [sp, #32]
    6d8c:	add	x29, sp, #0x20
    6d90:	str	x0, [sp, #16]
    6d94:	str	x1, [sp, #8]
    6d98:	ldr	x8, [sp, #16]
    6d9c:	ldr	w9, [x8]
    6da0:	cbnz	w9, 6db0 <lzma_stream_flags_compare@@XZ_5.0+0x2c>
    6da4:	ldr	x8, [sp, #8]
    6da8:	ldr	w9, [x8]
    6dac:	cbz	w9, 6dbc <lzma_stream_flags_compare@@XZ_5.0+0x38>
    6db0:	mov	w8, #0x8                   	// #8
    6db4:	stur	w8, [x29, #-4]
    6db8:	b	6e84 <lzma_stream_flags_compare@@XZ_5.0+0x100>
    6dbc:	ldr	x8, [sp, #16]
    6dc0:	ldr	w9, [x8, #16]
    6dc4:	cmp	w9, #0xf
    6dc8:	b.hi	6ddc <lzma_stream_flags_compare@@XZ_5.0+0x58>  // b.pmore
    6dcc:	ldr	x8, [sp, #8]
    6dd0:	ldr	w9, [x8, #16]
    6dd4:	cmp	w9, #0xf
    6dd8:	b.ls	6de8 <lzma_stream_flags_compare@@XZ_5.0+0x64>  // b.plast
    6ddc:	mov	w8, #0xb                   	// #11
    6de0:	stur	w8, [x29, #-4]
    6de4:	b	6e84 <lzma_stream_flags_compare@@XZ_5.0+0x100>
    6de8:	ldr	x8, [sp, #16]
    6dec:	ldr	w9, [x8, #16]
    6df0:	ldr	x8, [sp, #8]
    6df4:	ldr	w10, [x8, #16]
    6df8:	cmp	w9, w10
    6dfc:	b.eq	6e0c <lzma_stream_flags_compare@@XZ_5.0+0x88>  // b.none
    6e00:	mov	w8, #0x9                   	// #9
    6e04:	stur	w8, [x29, #-4]
    6e08:	b	6e84 <lzma_stream_flags_compare@@XZ_5.0+0x100>
    6e0c:	ldr	x8, [sp, #16]
    6e10:	ldr	x8, [x8, #8]
    6e14:	mov	x9, #0xffffffffffffffff    	// #-1
    6e18:	cmp	x8, x9
    6e1c:	b.eq	6e80 <lzma_stream_flags_compare@@XZ_5.0+0xfc>  // b.none
    6e20:	ldr	x8, [sp, #8]
    6e24:	ldr	x8, [x8, #8]
    6e28:	mov	x9, #0xffffffffffffffff    	// #-1
    6e2c:	cmp	x8, x9
    6e30:	b.eq	6e80 <lzma_stream_flags_compare@@XZ_5.0+0xfc>  // b.none
    6e34:	ldr	x0, [sp, #16]
    6e38:	bl	6e94 <lzma_stream_flags_compare@@XZ_5.0+0x110>
    6e3c:	tbnz	w0, #0, 6e44 <lzma_stream_flags_compare@@XZ_5.0+0xc0>
    6e40:	b	6e50 <lzma_stream_flags_compare@@XZ_5.0+0xcc>
    6e44:	ldr	x0, [sp, #8]
    6e48:	bl	6e94 <lzma_stream_flags_compare@@XZ_5.0+0x110>
    6e4c:	tbnz	w0, #0, 6e5c <lzma_stream_flags_compare@@XZ_5.0+0xd8>
    6e50:	mov	w8, #0xb                   	// #11
    6e54:	stur	w8, [x29, #-4]
    6e58:	b	6e84 <lzma_stream_flags_compare@@XZ_5.0+0x100>
    6e5c:	ldr	x8, [sp, #16]
    6e60:	ldr	x8, [x8, #8]
    6e64:	ldr	x9, [sp, #8]
    6e68:	ldr	x9, [x9, #8]
    6e6c:	cmp	x8, x9
    6e70:	b.eq	6e80 <lzma_stream_flags_compare@@XZ_5.0+0xfc>  // b.none
    6e74:	mov	w8, #0x9                   	// #9
    6e78:	stur	w8, [x29, #-4]
    6e7c:	b	6e84 <lzma_stream_flags_compare@@XZ_5.0+0x100>
    6e80:	stur	wzr, [x29, #-4]
    6e84:	ldur	w0, [x29, #-4]
    6e88:	ldp	x29, x30, [sp, #32]
    6e8c:	add	sp, sp, #0x30
    6e90:	ret
    6e94:	sub	sp, sp, #0x10
    6e98:	str	x0, [sp, #8]
    6e9c:	ldr	x8, [sp, #8]
    6ea0:	ldr	x8, [x8, #8]
    6ea4:	mov	w9, #0x0                   	// #0
    6ea8:	cmp	x8, #0x4
    6eac:	str	w9, [sp, #4]
    6eb0:	b.cc	6ee4 <lzma_stream_flags_compare@@XZ_5.0+0x160>  // b.lo, b.ul, b.last
    6eb4:	ldr	x8, [sp, #8]
    6eb8:	ldr	x8, [x8, #8]
    6ebc:	mov	x9, #0x400000000           	// #17179869184
    6ec0:	mov	w10, #0x0                   	// #0
    6ec4:	cmp	x8, x9
    6ec8:	str	w10, [sp, #4]
    6ecc:	b.hi	6ee4 <lzma_stream_flags_compare@@XZ_5.0+0x160>  // b.pmore
    6ed0:	ldr	x8, [sp, #8]
    6ed4:	ldr	x8, [x8, #8]
    6ed8:	tst	x8, #0x3
    6edc:	cset	w9, eq  // eq = none
    6ee0:	str	w9, [sp, #4]
    6ee4:	ldr	w8, [sp, #4]
    6ee8:	and	w0, w8, #0x1
    6eec:	add	sp, sp, #0x10
    6ef0:	ret

0000000000006ef4 <lzma_vli_size@@XZ_5.0>:
    6ef4:	sub	sp, sp, #0x20
    6ef8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    6efc:	str	x0, [sp, #16]
    6f00:	ldr	x9, [sp, #16]
    6f04:	cmp	x9, x8
    6f08:	b.ls	6f14 <lzma_vli_size@@XZ_5.0+0x20>  // b.plast
    6f0c:	str	wzr, [sp, #28]
    6f10:	b	6f40 <lzma_vli_size@@XZ_5.0+0x4c>
    6f14:	str	wzr, [sp, #12]
    6f18:	ldr	x8, [sp, #16]
    6f1c:	lsr	x8, x8, #7
    6f20:	str	x8, [sp, #16]
    6f24:	ldr	w9, [sp, #12]
    6f28:	add	w9, w9, #0x1
    6f2c:	str	w9, [sp, #12]
    6f30:	ldr	x8, [sp, #16]
    6f34:	cbnz	x8, 6f18 <lzma_vli_size@@XZ_5.0+0x24>
    6f38:	ldr	w8, [sp, #12]
    6f3c:	str	w8, [sp, #28]
    6f40:	ldr	w0, [sp, #28]
    6f44:	add	sp, sp, #0x20
    6f48:	ret

0000000000006f4c <lzma_cputhreads@@XZ_5.2>:
    6f4c:	stp	x29, x30, [sp, #-16]!
    6f50:	mov	x29, sp
    6f54:	bl	36bc <pthread_cond_timedwait@plt+0x15c>
    6f58:	ldp	x29, x30, [sp], #16
    6f5c:	ret

0000000000006f60 <lzma_alone_encoder@@XZ_5.0>:
    6f60:	sub	sp, sp, #0x30
    6f64:	stp	x29, x30, [sp, #32]
    6f68:	add	x29, sp, #0x20
    6f6c:	str	x0, [sp, #16]
    6f70:	str	x1, [sp, #8]
    6f74:	ldr	x0, [sp, #16]
    6f78:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    6f7c:	str	w0, [sp, #4]
    6f80:	ldr	w8, [sp, #4]
    6f84:	cbz	w8, 6f94 <lzma_alone_encoder@@XZ_5.0+0x34>
    6f88:	ldr	w8, [sp, #4]
    6f8c:	stur	w8, [x29, #-4]
    6f90:	b	6fec <lzma_alone_encoder@@XZ_5.0+0x8c>
    6f94:	ldr	x8, [sp, #16]
    6f98:	ldr	x0, [x8, #56]
    6f9c:	ldr	x8, [sp, #16]
    6fa0:	ldr	x1, [x8, #48]
    6fa4:	ldr	x2, [sp, #8]
    6fa8:	bl	6ffc <lzma_alone_encoder@@XZ_5.0+0x9c>
    6fac:	str	w0, [sp]
    6fb0:	ldr	w9, [sp]
    6fb4:	cbz	w9, 6fcc <lzma_alone_encoder@@XZ_5.0+0x6c>
    6fb8:	ldr	x0, [sp, #16]
    6fbc:	bl	3320 <lzma_end@plt>
    6fc0:	ldr	w8, [sp]
    6fc4:	stur	w8, [x29, #-4]
    6fc8:	b	6fec <lzma_alone_encoder@@XZ_5.0+0x8c>
    6fcc:	ldr	x8, [sp, #16]
    6fd0:	ldr	x8, [x8, #56]
    6fd4:	mov	w9, #0x1                   	// #1
    6fd8:	strb	w9, [x8, #88]
    6fdc:	ldr	x8, [sp, #16]
    6fe0:	ldr	x8, [x8, #56]
    6fe4:	strb	w9, [x8, #91]
    6fe8:	stur	wzr, [x29, #-4]
    6fec:	ldur	w0, [x29, #-4]
    6ff0:	ldp	x29, x30, [sp, #32]
    6ff4:	add	sp, sp, #0x30
    6ff8:	ret
    6ffc:	sub	sp, sp, #0xe0
    7000:	stp	x29, x30, [sp, #208]
    7004:	add	x29, sp, #0xd0
    7008:	adrp	x8, 6000 <lzma_index_cat@@XZ_5.0+0x304>
    700c:	add	x8, x8, #0xffc
    7010:	stur	x0, [x29, #-16]
    7014:	stur	x1, [x29, #-24]
    7018:	stur	x2, [x29, #-32]
    701c:	str	x8, [sp, #32]
    7020:	ldur	x8, [x29, #-16]
    7024:	ldr	x8, [x8, #16]
    7028:	ldr	x9, [sp, #32]
    702c:	cmp	x9, x8
    7030:	b.eq	7040 <lzma_alone_encoder@@XZ_5.0+0xe0>  // b.none
    7034:	ldur	x0, [x29, #-16]
    7038:	ldur	x1, [x29, #-24]
    703c:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    7040:	ldur	x8, [x29, #-16]
    7044:	ldr	x9, [sp, #32]
    7048:	str	x9, [x8, #16]
    704c:	ldur	x8, [x29, #-16]
    7050:	ldr	x8, [x8]
    7054:	stur	x8, [x29, #-40]
    7058:	ldur	x8, [x29, #-40]
    705c:	cbnz	x8, 70f8 <lzma_alone_encoder@@XZ_5.0+0x198>
    7060:	ldur	x1, [x29, #-24]
    7064:	mov	x0, #0x68                  	// #104
    7068:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    706c:	stur	x0, [x29, #-40]
    7070:	ldur	x8, [x29, #-40]
    7074:	cbnz	x8, 7084 <lzma_alone_encoder@@XZ_5.0+0x124>
    7078:	mov	w8, #0x5                   	// #5
    707c:	stur	w8, [x29, #-4]
    7080:	b	721c <lzma_alone_encoder@@XZ_5.0+0x2bc>
    7084:	ldur	x8, [x29, #-40]
    7088:	ldur	x9, [x29, #-16]
    708c:	str	x8, [x9]
    7090:	ldur	x8, [x29, #-16]
    7094:	adrp	x9, 7000 <lzma_alone_encoder@@XZ_5.0+0xa0>
    7098:	add	x9, x9, #0x22c
    709c:	str	x9, [x8, #24]
    70a0:	ldur	x8, [x29, #-16]
    70a4:	adrp	x9, 7000 <lzma_alone_encoder@@XZ_5.0+0xa0>
    70a8:	add	x9, x9, #0x354
    70ac:	str	x9, [x8, #32]
    70b0:	ldur	x0, [x29, #-40]
    70b4:	add	x8, sp, #0x60
    70b8:	str	x0, [sp, #24]
    70bc:	mov	x0, x8
    70c0:	mov	w10, wzr
    70c4:	mov	w1, w10
    70c8:	mov	x9, #0x48                  	// #72
    70cc:	mov	x2, x9
    70d0:	str	x8, [sp, #16]
    70d4:	str	x9, [sp, #8]
    70d8:	bl	3230 <memset@plt>
    70dc:	mov	x8, #0xffffffffffffffff    	// #-1
    70e0:	str	x8, [sp, #104]
    70e4:	str	xzr, [sp, #112]
    70e8:	ldr	x0, [sp, #24]
    70ec:	ldr	x1, [sp, #16]
    70f0:	ldr	x2, [sp, #8]
    70f4:	bl	3090 <memcpy@plt>
    70f8:	ldur	x8, [x29, #-40]
    70fc:	str	wzr, [x8, #72]
    7100:	ldur	x8, [x29, #-40]
    7104:	str	xzr, [x8, #80]
    7108:	ldur	x0, [x29, #-32]
    710c:	ldur	x8, [x29, #-40]
    7110:	add	x1, x8, #0x58
    7114:	bl	1a3ac <lzma_lzma_preset@@XZ_5.0+0x14f8>
    7118:	tbnz	w0, #0, 7120 <lzma_alone_encoder@@XZ_5.0+0x1c0>
    711c:	b	712c <lzma_alone_encoder@@XZ_5.0+0x1cc>
    7120:	mov	w8, #0x8                   	// #8
    7124:	stur	w8, [x29, #-4]
    7128:	b	721c <lzma_alone_encoder@@XZ_5.0+0x2bc>
    712c:	ldur	x8, [x29, #-32]
    7130:	ldr	w9, [x8]
    7134:	cmp	w9, #0x1, lsl #12
    7138:	b.cs	7148 <lzma_alone_encoder@@XZ_5.0+0x1e8>  // b.hs, b.nlast
    713c:	mov	w8, #0x8                   	// #8
    7140:	stur	w8, [x29, #-4]
    7144:	b	721c <lzma_alone_encoder@@XZ_5.0+0x2bc>
    7148:	ldur	x8, [x29, #-32]
    714c:	ldr	w9, [x8]
    7150:	subs	w9, w9, #0x1
    7154:	str	w9, [sp, #92]
    7158:	ldr	w9, [sp, #92]
    715c:	ldr	w10, [sp, #92]
    7160:	orr	w9, w10, w9, lsr #2
    7164:	str	w9, [sp, #92]
    7168:	ldr	w9, [sp, #92]
    716c:	ldr	w10, [sp, #92]
    7170:	orr	w9, w10, w9, lsr #3
    7174:	str	w9, [sp, #92]
    7178:	ldr	w9, [sp, #92]
    717c:	ldr	w10, [sp, #92]
    7180:	orr	w9, w10, w9, lsr #4
    7184:	str	w9, [sp, #92]
    7188:	ldr	w9, [sp, #92]
    718c:	ldr	w10, [sp, #92]
    7190:	orr	w9, w10, w9, lsr #8
    7194:	str	w9, [sp, #92]
    7198:	ldr	w9, [sp, #92]
    719c:	ldr	w10, [sp, #92]
    71a0:	orr	w9, w10, w9, lsr #16
    71a4:	str	w9, [sp, #92]
    71a8:	ldr	w9, [sp, #92]
    71ac:	mov	w10, #0xffffffff            	// #-1
    71b0:	cmp	w9, w10
    71b4:	b.eq	71c4 <lzma_alone_encoder@@XZ_5.0+0x264>  // b.none
    71b8:	ldr	w8, [sp, #92]
    71bc:	add	w8, w8, #0x1
    71c0:	str	w8, [sp, #92]
    71c4:	ldur	x8, [x29, #-40]
    71c8:	add	x0, x8, #0x59
    71cc:	ldr	w1, [sp, #92]
    71d0:	bl	7394 <lzma_alone_encoder@@XZ_5.0+0x434>
    71d4:	ldur	x8, [x29, #-40]
    71d8:	mov	x9, #0xffffffffffffffff    	// #-1
    71dc:	stur	x9, [x8, #93]
    71e0:	add	x8, sp, #0x28
    71e4:	str	xzr, [sp, #40]
    71e8:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    71ec:	ldr	x9, [x9, #4056]
    71f0:	str	x9, [x8, #8]
    71f4:	ldur	x9, [x29, #-32]
    71f8:	str	x9, [x8, #16]
    71fc:	str	xzr, [sp, #64]
    7200:	str	xzr, [sp, #72]
    7204:	str	xzr, [sp, #80]
    7208:	ldur	x0, [x29, #-40]
    720c:	ldur	x1, [x29, #-24]
    7210:	mov	x2, x8
    7214:	bl	395c <lzma_version_string@@XZ_5.0+0x24c>
    7218:	stur	w0, [x29, #-4]
    721c:	ldur	w0, [x29, #-4]
    7220:	ldp	x29, x30, [sp, #208]
    7224:	add	sp, sp, #0xe0
    7228:	ret
    722c:	sub	sp, sp, #0x80
    7230:	stp	x29, x30, [sp, #112]
    7234:	add	x29, sp, #0x70
    7238:	ldr	w8, [x29, #16]
    723c:	stur	x0, [x29, #-16]
    7240:	stur	x1, [x29, #-24]
    7244:	stur	x2, [x29, #-32]
    7248:	stur	x3, [x29, #-40]
    724c:	stur	x4, [x29, #-48]
    7250:	str	x5, [sp, #56]
    7254:	str	x6, [sp, #48]
    7258:	str	x7, [sp, #40]
    725c:	str	w8, [sp, #36]
    7260:	ldur	x9, [x29, #-16]
    7264:	str	x9, [sp, #24]
    7268:	ldr	x8, [sp, #48]
    726c:	ldr	x8, [x8]
    7270:	ldr	x9, [sp, #40]
    7274:	cmp	x8, x9
    7278:	b.cs	7340 <lzma_alone_encoder@@XZ_5.0+0x3e0>  // b.hs, b.nlast
    727c:	ldr	x8, [sp, #24]
    7280:	ldr	w9, [x8, #72]
    7284:	str	w9, [sp, #20]
    7288:	cbz	w9, 72a0 <lzma_alone_encoder@@XZ_5.0+0x340>
    728c:	b	7290 <lzma_alone_encoder@@XZ_5.0+0x330>
    7290:	ldr	w8, [sp, #20]
    7294:	cmp	w8, #0x1
    7298:	b.eq	72ec <lzma_alone_encoder@@XZ_5.0+0x38c>  // b.none
    729c:	b	7330 <lzma_alone_encoder@@XZ_5.0+0x3d0>
    72a0:	ldr	x8, [sp, #24]
    72a4:	add	x0, x8, #0x58
    72a8:	ldr	x8, [sp, #24]
    72ac:	add	x1, x8, #0x50
    72b0:	ldr	x3, [sp, #56]
    72b4:	ldr	x4, [sp, #48]
    72b8:	ldr	x5, [sp, #40]
    72bc:	mov	x2, #0xd                   	// #13
    72c0:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    72c4:	ldr	x8, [sp, #24]
    72c8:	ldr	x8, [x8, #80]
    72cc:	cmp	x8, #0xd
    72d0:	b.cs	72dc <lzma_alone_encoder@@XZ_5.0+0x37c>  // b.hs, b.nlast
    72d4:	stur	wzr, [x29, #-4]
    72d8:	b	7344 <lzma_alone_encoder@@XZ_5.0+0x3e4>
    72dc:	ldr	x8, [sp, #24]
    72e0:	mov	w9, #0x1                   	// #1
    72e4:	str	w9, [x8, #72]
    72e8:	b	733c <lzma_alone_encoder@@XZ_5.0+0x3dc>
    72ec:	ldr	x8, [sp, #24]
    72f0:	ldr	x8, [x8, #24]
    72f4:	ldr	x9, [sp, #24]
    72f8:	ldr	x0, [x9]
    72fc:	ldur	x1, [x29, #-24]
    7300:	ldur	x2, [x29, #-32]
    7304:	ldur	x3, [x29, #-40]
    7308:	ldur	x4, [x29, #-48]
    730c:	ldr	x5, [sp, #56]
    7310:	ldr	x6, [sp, #48]
    7314:	ldr	x7, [sp, #40]
    7318:	ldr	w10, [sp, #36]
    731c:	mov	x9, sp
    7320:	str	w10, [x9]
    7324:	blr	x8
    7328:	stur	w0, [x29, #-4]
    732c:	b	7344 <lzma_alone_encoder@@XZ_5.0+0x3e4>
    7330:	mov	w8, #0xb                   	// #11
    7334:	stur	w8, [x29, #-4]
    7338:	b	7344 <lzma_alone_encoder@@XZ_5.0+0x3e4>
    733c:	b	7268 <lzma_alone_encoder@@XZ_5.0+0x308>
    7340:	stur	wzr, [x29, #-4]
    7344:	ldur	w0, [x29, #-4]
    7348:	ldp	x29, x30, [sp, #112]
    734c:	add	sp, sp, #0x80
    7350:	ret
    7354:	sub	sp, sp, #0x30
    7358:	stp	x29, x30, [sp, #32]
    735c:	add	x29, sp, #0x20
    7360:	stur	x0, [x29, #-8]
    7364:	str	x1, [sp, #16]
    7368:	ldur	x8, [x29, #-8]
    736c:	str	x8, [sp, #8]
    7370:	ldr	x0, [sp, #8]
    7374:	ldr	x1, [sp, #16]
    7378:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    737c:	ldr	x0, [sp, #8]
    7380:	ldr	x1, [sp, #16]
    7384:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    7388:	ldp	x29, x30, [sp, #32]
    738c:	add	sp, sp, #0x30
    7390:	ret
    7394:	sub	sp, sp, #0x10
    7398:	str	x0, [sp, #8]
    739c:	str	w1, [sp, #4]
    73a0:	ldr	w8, [sp, #4]
    73a4:	ldr	x9, [sp, #8]
    73a8:	strb	w8, [x9]
    73ac:	ldr	w8, [sp, #4]
    73b0:	lsr	w8, w8, #8
    73b4:	ldr	x9, [sp, #8]
    73b8:	strb	w8, [x9, #1]
    73bc:	ldr	w8, [sp, #4]
    73c0:	lsr	w8, w8, #16
    73c4:	ldr	x9, [sp, #8]
    73c8:	strb	w8, [x9, #2]
    73cc:	ldr	w8, [sp, #4]
    73d0:	lsr	w8, w8, #24
    73d4:	ldr	x9, [sp, #8]
    73d8:	strb	w8, [x9, #3]
    73dc:	add	sp, sp, #0x10
    73e0:	ret
    73e4:	sub	sp, sp, #0x30
    73e8:	stp	x29, x30, [sp, #32]
    73ec:	add	x29, sp, #0x20
    73f0:	str	x0, [sp, #16]
    73f4:	ldr	x0, [sp, #16]
    73f8:	bl	743c <lzma_alone_encoder@@XZ_5.0+0x4dc>
    73fc:	str	x0, [sp, #8]
    7400:	ldr	x8, [sp, #8]
    7404:	cbnz	x8, 7410 <lzma_alone_encoder@@XZ_5.0+0x4b0>
    7408:	stur	xzr, [x29, #-8]
    740c:	b	742c <lzma_alone_encoder@@XZ_5.0+0x4cc>
    7410:	ldr	x8, [sp, #8]
    7414:	add	x8, x8, #0x3
    7418:	and	x8, x8, #0xfffffffffffffffc
    741c:	str	x8, [sp, #8]
    7420:	ldr	x8, [sp, #8]
    7424:	add	x8, x8, #0x5c
    7428:	stur	x8, [x29, #-8]
    742c:	ldur	x0, [x29, #-8]
    7430:	ldp	x29, x30, [sp, #32]
    7434:	add	sp, sp, #0x30
    7438:	ret
    743c:	sub	sp, sp, #0x20
    7440:	mov	x8, #0xfffffffffffffbbc    	// #-1092
    7444:	movk	x8, #0x7fff, lsl #48
    7448:	str	x0, [sp, #16]
    744c:	ldr	x9, [sp, #16]
    7450:	cmp	x9, x8
    7454:	b.ls	7460 <lzma_alone_encoder@@XZ_5.0+0x500>  // b.plast
    7458:	str	xzr, [sp, #24]
    745c:	b	74b8 <lzma_alone_encoder@@XZ_5.0+0x558>
    7460:	ldr	x8, [sp, #16]
    7464:	mov	x9, #0x10000               	// #65536
    7468:	add	x8, x8, #0x10, lsl #12
    746c:	subs	x8, x8, #0x1
    7470:	udiv	x8, x8, x9
    7474:	mov	x9, #0x3                   	// #3
    7478:	mul	x8, x8, x9
    747c:	add	x8, x8, #0x1
    7480:	str	x8, [sp, #8]
    7484:	ldr	x8, [sp, #8]
    7488:	mov	x9, #0xfffffffffffffbbc    	// #-1092
    748c:	movk	x9, #0x7fff, lsl #48
    7490:	subs	x8, x9, x8
    7494:	ldr	x9, [sp, #16]
    7498:	cmp	x8, x9
    749c:	b.cs	74a8 <lzma_alone_encoder@@XZ_5.0+0x548>  // b.hs, b.nlast
    74a0:	str	xzr, [sp, #24]
    74a4:	b	74b8 <lzma_alone_encoder@@XZ_5.0+0x558>
    74a8:	ldr	x8, [sp, #16]
    74ac:	ldr	x9, [sp, #8]
    74b0:	add	x8, x8, x9
    74b4:	str	x8, [sp, #24]
    74b8:	ldr	x0, [sp, #24]
    74bc:	add	sp, sp, #0x20
    74c0:	ret

00000000000074c4 <lzma_block_buffer_bound@@XZ_5.0>:
    74c4:	sub	sp, sp, #0x20
    74c8:	stp	x29, x30, [sp, #16]
    74cc:	add	x29, sp, #0x10
    74d0:	str	x0, [sp, #8]
    74d4:	ldr	x0, [sp, #8]
    74d8:	bl	73e4 <lzma_alone_encoder@@XZ_5.0+0x484>
    74dc:	str	x0, [sp]
    74e0:	ldr	x0, [sp]
    74e4:	ldp	x29, x30, [sp, #16]
    74e8:	add	sp, sp, #0x20
    74ec:	ret

00000000000074f0 <lzma_block_buffer_encode@@XZ_5.0>:
    74f0:	sub	sp, sp, #0x50
    74f4:	stp	x29, x30, [sp, #64]
    74f8:	add	x29, sp, #0x40
    74fc:	stur	x0, [x29, #-8]
    7500:	stur	x1, [x29, #-16]
    7504:	stur	x2, [x29, #-24]
    7508:	str	x3, [sp, #32]
    750c:	str	x4, [sp, #24]
    7510:	str	x5, [sp, #16]
    7514:	str	x6, [sp, #8]
    7518:	ldur	x0, [x29, #-8]
    751c:	ldur	x1, [x29, #-16]
    7520:	ldur	x2, [x29, #-24]
    7524:	ldr	x3, [sp, #32]
    7528:	ldr	x4, [sp, #24]
    752c:	ldr	x5, [sp, #16]
    7530:	ldr	x6, [sp, #8]
    7534:	mov	w8, #0x1                   	// #1
    7538:	and	w7, w8, #0x1
    753c:	bl	754c <lzma_block_buffer_encode@@XZ_5.0+0x5c>
    7540:	ldp	x29, x30, [sp, #64]
    7544:	add	sp, sp, #0x50
    7548:	ret
    754c:	sub	sp, sp, #0xe0
    7550:	stp	x29, x30, [sp, #208]
    7554:	add	x29, sp, #0xd0
    7558:	mov	w8, #0x1                   	// #1
    755c:	stur	x0, [x29, #-16]
    7560:	stur	x1, [x29, #-24]
    7564:	stur	x2, [x29, #-32]
    7568:	stur	x3, [x29, #-40]
    756c:	stur	x4, [x29, #-48]
    7570:	stur	x5, [x29, #-56]
    7574:	stur	x6, [x29, #-64]
    7578:	and	w8, w7, w8
    757c:	sturb	w8, [x29, #-65]
    7580:	ldur	x9, [x29, #-16]
    7584:	cbz	x9, 75bc <lzma_block_buffer_encode@@XZ_5.0+0xcc>
    7588:	ldur	x8, [x29, #-32]
    758c:	cbnz	x8, 7598 <lzma_block_buffer_encode@@XZ_5.0+0xa8>
    7590:	ldur	x8, [x29, #-40]
    7594:	cbnz	x8, 75bc <lzma_block_buffer_encode@@XZ_5.0+0xcc>
    7598:	ldur	x8, [x29, #-48]
    759c:	cbz	x8, 75bc <lzma_block_buffer_encode@@XZ_5.0+0xcc>
    75a0:	ldur	x8, [x29, #-56]
    75a4:	cbz	x8, 75bc <lzma_block_buffer_encode@@XZ_5.0+0xcc>
    75a8:	ldur	x8, [x29, #-56]
    75ac:	ldr	x8, [x8]
    75b0:	ldur	x9, [x29, #-64]
    75b4:	cmp	x8, x9
    75b8:	b.ls	75c8 <lzma_block_buffer_encode@@XZ_5.0+0xd8>  // b.plast
    75bc:	mov	w8, #0xb                   	// #11
    75c0:	stur	w8, [x29, #-4]
    75c4:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    75c8:	ldur	x8, [x29, #-16]
    75cc:	ldr	w9, [x8]
    75d0:	cmp	w9, #0x1
    75d4:	b.ls	75e4 <lzma_block_buffer_encode@@XZ_5.0+0xf4>  // b.plast
    75d8:	mov	w8, #0x8                   	// #8
    75dc:	stur	w8, [x29, #-4]
    75e0:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    75e4:	ldur	x8, [x29, #-16]
    75e8:	ldr	w9, [x8, #8]
    75ec:	cmp	w9, #0xf
    75f0:	b.hi	760c <lzma_block_buffer_encode@@XZ_5.0+0x11c>  // b.pmore
    75f4:	ldurb	w8, [x29, #-65]
    75f8:	tbnz	w8, #0, 7600 <lzma_block_buffer_encode@@XZ_5.0+0x110>
    75fc:	b	7618 <lzma_block_buffer_encode@@XZ_5.0+0x128>
    7600:	ldur	x8, [x29, #-16]
    7604:	ldr	x8, [x8, #32]
    7608:	cbnz	x8, 7618 <lzma_block_buffer_encode@@XZ_5.0+0x128>
    760c:	mov	w8, #0xb                   	// #11
    7610:	stur	w8, [x29, #-4]
    7614:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    7618:	ldur	x8, [x29, #-16]
    761c:	ldr	w0, [x8, #8]
    7620:	bl	30e0 <lzma_check_is_supported@plt>
    7624:	and	w9, w0, #0xff
    7628:	cbnz	w9, 7638 <lzma_block_buffer_encode@@XZ_5.0+0x148>
    762c:	mov	w8, #0x3                   	// #3
    7630:	stur	w8, [x29, #-4]
    7634:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    7638:	ldur	x8, [x29, #-64]
    763c:	ldur	x9, [x29, #-56]
    7640:	ldr	x9, [x9]
    7644:	subs	x8, x8, x9
    7648:	and	x8, x8, #0x3
    764c:	ldur	x9, [x29, #-64]
    7650:	subs	x8, x9, x8
    7654:	stur	x8, [x29, #-64]
    7658:	ldur	x8, [x29, #-16]
    765c:	ldr	w0, [x8, #8]
    7660:	bl	3270 <lzma_check_size@plt>
    7664:	mov	w8, w0
    7668:	ubfx	x8, x8, #0, #32
    766c:	stur	x8, [x29, #-80]
    7670:	ldur	x8, [x29, #-64]
    7674:	ldur	x9, [x29, #-56]
    7678:	ldr	x9, [x9]
    767c:	subs	x8, x8, x9
    7680:	ldur	x9, [x29, #-80]
    7684:	cmp	x8, x9
    7688:	b.hi	7698 <lzma_block_buffer_encode@@XZ_5.0+0x1a8>  // b.pmore
    768c:	mov	w8, #0xa                   	// #10
    7690:	stur	w8, [x29, #-4]
    7694:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    7698:	ldur	x8, [x29, #-80]
    769c:	ldur	x9, [x29, #-64]
    76a0:	subs	x8, x9, x8
    76a4:	stur	x8, [x29, #-64]
    76a8:	ldur	x8, [x29, #-40]
    76ac:	ldur	x9, [x29, #-16]
    76b0:	str	x8, [x9, #24]
    76b4:	ldur	x0, [x29, #-40]
    76b8:	bl	743c <lzma_alone_encoder@@XZ_5.0+0x4dc>
    76bc:	ldur	x8, [x29, #-16]
    76c0:	str	x0, [x8, #16]
    76c4:	ldur	x8, [x29, #-16]
    76c8:	ldr	x8, [x8, #16]
    76cc:	cbnz	x8, 76dc <lzma_block_buffer_encode@@XZ_5.0+0x1ec>
    76d0:	mov	w8, #0x9                   	// #9
    76d4:	stur	w8, [x29, #-4]
    76d8:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    76dc:	mov	w8, #0xa                   	// #10
    76e0:	stur	w8, [x29, #-84]
    76e4:	ldurb	w8, [x29, #-65]
    76e8:	tbnz	w8, #0, 76f0 <lzma_block_buffer_encode@@XZ_5.0+0x200>
    76ec:	b	7714 <lzma_block_buffer_encode@@XZ_5.0+0x224>
    76f0:	ldur	x0, [x29, #-16]
    76f4:	ldur	x1, [x29, #-24]
    76f8:	ldur	x2, [x29, #-32]
    76fc:	ldur	x3, [x29, #-40]
    7700:	ldur	x4, [x29, #-48]
    7704:	ldur	x5, [x29, #-56]
    7708:	ldur	x6, [x29, #-64]
    770c:	bl	78b4 <lzma_block_uncomp_encode@@XZ_5.2+0x5c>
    7710:	stur	w0, [x29, #-84]
    7714:	ldur	w8, [x29, #-84]
    7718:	cbz	w8, 7768 <lzma_block_buffer_encode@@XZ_5.0+0x278>
    771c:	ldur	w8, [x29, #-84]
    7720:	cmp	w8, #0xa
    7724:	b.eq	7734 <lzma_block_buffer_encode@@XZ_5.0+0x244>  // b.none
    7728:	ldur	w8, [x29, #-84]
    772c:	stur	w8, [x29, #-4]
    7730:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    7734:	ldur	x0, [x29, #-16]
    7738:	ldur	x1, [x29, #-32]
    773c:	ldur	x2, [x29, #-40]
    7740:	ldur	x3, [x29, #-48]
    7744:	ldur	x4, [x29, #-56]
    7748:	ldur	x5, [x29, #-64]
    774c:	bl	7ab8 <lzma_block_uncomp_encode@@XZ_5.2+0x260>
    7750:	stur	w0, [x29, #-88]
    7754:	ldur	w8, [x29, #-88]
    7758:	cbz	w8, 7768 <lzma_block_buffer_encode@@XZ_5.0+0x278>
    775c:	ldur	w8, [x29, #-88]
    7760:	stur	w8, [x29, #-4]
    7764:	b	7848 <lzma_block_buffer_encode@@XZ_5.0+0x358>
    7768:	ldur	x8, [x29, #-16]
    776c:	ldr	x8, [x8, #16]
    7770:	stur	x8, [x29, #-96]
    7774:	ldur	x8, [x29, #-96]
    7778:	and	x8, x8, #0x3
    777c:	cbz	x8, 77b0 <lzma_block_buffer_encode@@XZ_5.0+0x2c0>
    7780:	ldur	x8, [x29, #-48]
    7784:	ldur	x9, [x29, #-56]
    7788:	ldr	x10, [x9]
    778c:	add	x11, x10, #0x1
    7790:	str	x11, [x9]
    7794:	add	x8, x8, x10
    7798:	mov	w12, #0x0                   	// #0
    779c:	strb	w12, [x8]
    77a0:	ldur	x8, [x29, #-96]
    77a4:	add	x8, x8, #0x1
    77a8:	stur	x8, [x29, #-96]
    77ac:	b	7774 <lzma_block_buffer_encode@@XZ_5.0+0x284>
    77b0:	ldur	x8, [x29, #-80]
    77b4:	cmp	x8, #0x0
    77b8:	cset	w9, ls  // ls = plast
    77bc:	tbnz	w9, #0, 7844 <lzma_block_buffer_encode@@XZ_5.0+0x354>
    77c0:	ldur	x8, [x29, #-16]
    77c4:	ldr	w1, [x8, #8]
    77c8:	add	x8, sp, #0x8
    77cc:	mov	x0, x8
    77d0:	str	x8, [sp]
    77d4:	bl	11ec0 <lzma_check_size@@XZ_5.0+0x44>
    77d8:	ldur	x8, [x29, #-16]
    77dc:	ldr	w1, [x8, #8]
    77e0:	ldur	x2, [x29, #-32]
    77e4:	ldur	x3, [x29, #-40]
    77e8:	ldr	x0, [sp]
    77ec:	bl	11f3c <lzma_check_size@@XZ_5.0+0xc0>
    77f0:	ldur	x8, [x29, #-16]
    77f4:	ldr	w1, [x8, #8]
    77f8:	ldr	x0, [sp]
    77fc:	bl	11fec <lzma_check_size@@XZ_5.0+0x170>
    7800:	ldur	x8, [x29, #-16]
    7804:	add	x0, x8, #0x28
    7808:	ldur	x2, [x29, #-80]
    780c:	ldr	x1, [sp]
    7810:	bl	3090 <memcpy@plt>
    7814:	ldur	x8, [x29, #-48]
    7818:	ldur	x9, [x29, #-56]
    781c:	ldr	x9, [x9]
    7820:	add	x0, x8, x9
    7824:	ldur	x2, [x29, #-80]
    7828:	ldr	x1, [sp]
    782c:	bl	3090 <memcpy@plt>
    7830:	ldur	x8, [x29, #-80]
    7834:	ldur	x9, [x29, #-56]
    7838:	ldr	x10, [x9]
    783c:	add	x8, x10, x8
    7840:	str	x8, [x9]
    7844:	stur	wzr, [x29, #-4]
    7848:	ldur	w0, [x29, #-4]
    784c:	ldp	x29, x30, [sp, #208]
    7850:	add	sp, sp, #0xe0
    7854:	ret

0000000000007858 <lzma_block_uncomp_encode@@XZ_5.2>:
    7858:	sub	sp, sp, #0x40
    785c:	stp	x29, x30, [sp, #48]
    7860:	add	x29, sp, #0x30
    7864:	mov	x8, xzr
    7868:	stur	x0, [x29, #-8]
    786c:	stur	x1, [x29, #-16]
    7870:	str	x2, [sp, #24]
    7874:	str	x3, [sp, #16]
    7878:	str	x4, [sp, #8]
    787c:	str	x5, [sp]
    7880:	ldur	x0, [x29, #-8]
    7884:	ldur	x2, [x29, #-16]
    7888:	ldr	x3, [sp, #24]
    788c:	ldr	x4, [sp, #16]
    7890:	ldr	x5, [sp, #8]
    7894:	ldr	x6, [sp]
    7898:	mov	x1, x8
    789c:	mov	w9, wzr
    78a0:	and	w7, w9, #0x1
    78a4:	bl	754c <lzma_block_buffer_encode@@XZ_5.0+0x5c>
    78a8:	ldp	x29, x30, [sp, #48]
    78ac:	add	sp, sp, #0x40
    78b0:	ret
    78b4:	sub	sp, sp, #0xd0
    78b8:	stp	x29, x30, [sp, #192]
    78bc:	add	x29, sp, #0xc0
    78c0:	stur	x0, [x29, #-16]
    78c4:	stur	x1, [x29, #-24]
    78c8:	stur	x2, [x29, #-32]
    78cc:	stur	x3, [x29, #-40]
    78d0:	stur	x4, [x29, #-48]
    78d4:	stur	x5, [x29, #-56]
    78d8:	stur	x6, [x29, #-64]
    78dc:	ldur	x0, [x29, #-16]
    78e0:	bl	3160 <lzma_block_header_size@plt>
    78e4:	stur	w0, [x29, #-68]
    78e8:	ldur	w8, [x29, #-68]
    78ec:	cbz	w8, 78fc <lzma_block_uncomp_encode@@XZ_5.2+0xa4>
    78f0:	ldur	w8, [x29, #-68]
    78f4:	stur	w8, [x29, #-4]
    78f8:	b	7aa8 <lzma_block_uncomp_encode@@XZ_5.2+0x250>
    78fc:	ldur	x8, [x29, #-64]
    7900:	ldur	x9, [x29, #-56]
    7904:	ldr	x9, [x9]
    7908:	subs	x8, x8, x9
    790c:	ldur	x9, [x29, #-16]
    7910:	ldr	w10, [x9, #4]
    7914:	mov	w9, w10
    7918:	cmp	x8, x9
    791c:	b.hi	792c <lzma_block_uncomp_encode@@XZ_5.2+0xd4>  // b.pmore
    7920:	mov	w8, #0xa                   	// #10
    7924:	stur	w8, [x29, #-4]
    7928:	b	7aa8 <lzma_block_uncomp_encode@@XZ_5.2+0x250>
    792c:	ldur	x8, [x29, #-56]
    7930:	ldr	x8, [x8]
    7934:	stur	x8, [x29, #-80]
    7938:	ldur	x8, [x29, #-16]
    793c:	ldr	w9, [x8, #4]
    7940:	mov	w8, w9
    7944:	ldur	x10, [x29, #-56]
    7948:	ldr	x11, [x10]
    794c:	add	x8, x11, x8
    7950:	str	x8, [x10]
    7954:	ldur	x8, [x29, #-64]
    7958:	ldur	x10, [x29, #-56]
    795c:	ldr	x10, [x10]
    7960:	subs	x8, x8, x10
    7964:	ldur	x10, [x29, #-16]
    7968:	ldr	x10, [x10, #16]
    796c:	cmp	x8, x10
    7970:	b.ls	798c <lzma_block_uncomp_encode@@XZ_5.2+0x134>  // b.plast
    7974:	ldur	x8, [x29, #-56]
    7978:	ldr	x8, [x8]
    797c:	ldur	x9, [x29, #-16]
    7980:	ldr	x9, [x9, #16]
    7984:	add	x8, x8, x9
    7988:	stur	x8, [x29, #-64]
    798c:	add	x8, sp, #0x28
    7990:	mov	x0, x8
    7994:	mov	w9, wzr
    7998:	mov	w1, w9
    799c:	mov	x2, #0x48                  	// #72
    79a0:	str	x8, [sp, #16]
    79a4:	bl	3230 <memset@plt>
    79a8:	mov	x8, #0xffffffffffffffff    	// #-1
    79ac:	str	x8, [sp, #48]
    79b0:	ldur	x1, [x29, #-24]
    79b4:	ldur	x8, [x29, #-16]
    79b8:	ldr	x2, [x8, #32]
    79bc:	ldr	x0, [sp, #16]
    79c0:	bl	8d1c <lzma_raw_encoder_memusage@@XZ_5.0+0x30>
    79c4:	str	w0, [sp, #36]
    79c8:	ldr	w9, [sp, #36]
    79cc:	cbnz	w9, 7a10 <lzma_block_uncomp_encode@@XZ_5.2+0x1b8>
    79d0:	add	x3, sp, #0x18
    79d4:	str	xzr, [sp, #24]
    79d8:	add	x8, sp, #0x28
    79dc:	ldr	x8, [x8, #24]
    79e0:	ldr	x0, [sp, #40]
    79e4:	ldur	x1, [x29, #-24]
    79e8:	ldur	x2, [x29, #-32]
    79ec:	ldur	x4, [x29, #-40]
    79f0:	ldur	x5, [x29, #-48]
    79f4:	ldur	x6, [x29, #-56]
    79f8:	ldur	x7, [x29, #-64]
    79fc:	mov	x9, sp
    7a00:	mov	w10, #0x3                   	// #3
    7a04:	str	w10, [x9]
    7a08:	blr	x8
    7a0c:	str	w0, [sp, #36]
    7a10:	ldur	x1, [x29, #-24]
    7a14:	add	x0, sp, #0x28
    7a18:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    7a1c:	ldr	w8, [sp, #36]
    7a20:	cmp	w8, #0x1
    7a24:	b.ne	7a7c <lzma_block_uncomp_encode@@XZ_5.2+0x224>  // b.any
    7a28:	ldur	x8, [x29, #-56]
    7a2c:	ldr	x8, [x8]
    7a30:	ldur	x9, [x29, #-80]
    7a34:	ldur	x10, [x29, #-16]
    7a38:	ldr	w11, [x10, #4]
    7a3c:	mov	w10, w11
    7a40:	add	x9, x9, x10
    7a44:	subs	x8, x8, x9
    7a48:	ldur	x9, [x29, #-16]
    7a4c:	str	x8, [x9, #16]
    7a50:	ldur	x0, [x29, #-16]
    7a54:	ldur	x8, [x29, #-48]
    7a58:	ldur	x9, [x29, #-80]
    7a5c:	add	x1, x8, x9
    7a60:	bl	3540 <lzma_block_header_encode@plt>
    7a64:	str	w0, [sp, #36]
    7a68:	ldr	w11, [sp, #36]
    7a6c:	cbz	w11, 7a78 <lzma_block_uncomp_encode@@XZ_5.2+0x220>
    7a70:	mov	w8, #0xb                   	// #11
    7a74:	str	w8, [sp, #36]
    7a78:	b	7a8c <lzma_block_uncomp_encode@@XZ_5.2+0x234>
    7a7c:	ldr	w8, [sp, #36]
    7a80:	cbnz	w8, 7a8c <lzma_block_uncomp_encode@@XZ_5.2+0x234>
    7a84:	mov	w8, #0xa                   	// #10
    7a88:	str	w8, [sp, #36]
    7a8c:	ldr	w8, [sp, #36]
    7a90:	cbz	w8, 7aa0 <lzma_block_uncomp_encode@@XZ_5.2+0x248>
    7a94:	ldur	x8, [x29, #-80]
    7a98:	ldur	x9, [x29, #-56]
    7a9c:	str	x8, [x9]
    7aa0:	ldr	w8, [sp, #36]
    7aa4:	stur	w8, [x29, #-4]
    7aa8:	ldur	w0, [x29, #-4]
    7aac:	ldp	x29, x30, [sp, #192]
    7ab0:	add	sp, sp, #0xd0
    7ab4:	ret
    7ab8:	sub	sp, sp, #0x140
    7abc:	stp	x29, x30, [sp, #288]
    7ac0:	str	x28, [sp, #304]
    7ac4:	add	x29, sp, #0x120
    7ac8:	mov	x8, #0x70                  	// #112
    7acc:	mov	w9, #0x1000                	// #4096
    7ad0:	mov	x10, #0x21                  	// #33
    7ad4:	mov	x11, #0xffffffffffffffff    	// #-1
    7ad8:	mov	w12, wzr
    7adc:	add	x13, sp, #0x78
    7ae0:	add	x14, sp, #0x58
    7ae4:	stur	x0, [x29, #-16]
    7ae8:	stur	x1, [x29, #-24]
    7aec:	stur	x2, [x29, #-32]
    7af0:	stur	x3, [x29, #-40]
    7af4:	stur	x4, [x29, #-48]
    7af8:	stur	x5, [x29, #-56]
    7afc:	mov	x0, x13
    7b00:	mov	w1, w12
    7b04:	mov	x2, x8
    7b08:	str	w9, [sp, #52]
    7b0c:	str	x10, [sp, #40]
    7b10:	str	x11, [sp, #32]
    7b14:	str	x13, [sp, #24]
    7b18:	str	x14, [sp, #16]
    7b1c:	bl	3230 <memset@plt>
    7b20:	ldr	w9, [sp, #52]
    7b24:	str	w9, [sp, #120]
    7b28:	ldr	x8, [sp, #40]
    7b2c:	str	x8, [sp, #88]
    7b30:	ldr	x10, [sp, #24]
    7b34:	ldr	x11, [sp, #16]
    7b38:	str	x10, [x11, #8]
    7b3c:	ldr	x13, [sp, #32]
    7b40:	str	x13, [sp, #104]
    7b44:	ldur	x14, [x29, #-16]
    7b48:	ldr	x14, [x14, #32]
    7b4c:	str	x14, [sp, #80]
    7b50:	ldur	x14, [x29, #-16]
    7b54:	str	x11, [x14, #32]
    7b58:	ldur	x0, [x29, #-16]
    7b5c:	bl	3160 <lzma_block_header_size@plt>
    7b60:	cbz	w0, 7b7c <lzma_block_uncomp_encode@@XZ_5.2+0x324>
    7b64:	ldr	x8, [sp, #80]
    7b68:	ldur	x9, [x29, #-16]
    7b6c:	str	x8, [x9, #32]
    7b70:	mov	w10, #0xb                   	// #11
    7b74:	stur	w10, [x29, #-4]
    7b78:	b	7d5c <lzma_block_uncomp_encode@@XZ_5.2+0x504>
    7b7c:	ldur	x8, [x29, #-56]
    7b80:	ldur	x9, [x29, #-48]
    7b84:	ldr	x9, [x9]
    7b88:	subs	x8, x8, x9
    7b8c:	ldur	x9, [x29, #-16]
    7b90:	ldr	w10, [x9, #4]
    7b94:	mov	w9, w10
    7b98:	ldur	x11, [x29, #-16]
    7b9c:	ldr	x11, [x11, #16]
    7ba0:	add	x9, x9, x11
    7ba4:	cmp	x8, x9
    7ba8:	b.cs	7bc4 <lzma_block_uncomp_encode@@XZ_5.2+0x36c>  // b.hs, b.nlast
    7bac:	ldr	x8, [sp, #80]
    7bb0:	ldur	x9, [x29, #-16]
    7bb4:	str	x8, [x9, #32]
    7bb8:	mov	w10, #0xa                   	// #10
    7bbc:	stur	w10, [x29, #-4]
    7bc0:	b	7d5c <lzma_block_uncomp_encode@@XZ_5.2+0x504>
    7bc4:	ldur	x0, [x29, #-16]
    7bc8:	ldur	x8, [x29, #-40]
    7bcc:	ldur	x9, [x29, #-48]
    7bd0:	ldr	x9, [x9]
    7bd4:	add	x1, x8, x9
    7bd8:	bl	3540 <lzma_block_header_encode@plt>
    7bdc:	cbz	w0, 7bf8 <lzma_block_uncomp_encode@@XZ_5.2+0x3a0>
    7be0:	ldr	x8, [sp, #80]
    7be4:	ldur	x9, [x29, #-16]
    7be8:	str	x8, [x9, #32]
    7bec:	mov	w10, #0xb                   	// #11
    7bf0:	stur	w10, [x29, #-4]
    7bf4:	b	7d5c <lzma_block_uncomp_encode@@XZ_5.2+0x504>
    7bf8:	ldr	x8, [sp, #80]
    7bfc:	ldur	x9, [x29, #-16]
    7c00:	str	x8, [x9, #32]
    7c04:	ldur	x8, [x29, #-16]
    7c08:	ldr	w10, [x8, #4]
    7c0c:	mov	w8, w10
    7c10:	ldur	x9, [x29, #-48]
    7c14:	ldr	x11, [x9]
    7c18:	add	x8, x11, x8
    7c1c:	str	x8, [x9]
    7c20:	str	xzr, [sp, #72]
    7c24:	mov	w10, #0x1                   	// #1
    7c28:	strb	w10, [sp, #71]
    7c2c:	ldr	x8, [sp, #72]
    7c30:	ldur	x9, [x29, #-32]
    7c34:	cmp	x8, x9
    7c38:	b.cs	7d38 <lzma_block_uncomp_encode@@XZ_5.2+0x4e0>  // b.hs, b.nlast
    7c3c:	ldrb	w8, [sp, #71]
    7c40:	ldur	x9, [x29, #-40]
    7c44:	ldur	x10, [x29, #-48]
    7c48:	ldr	x11, [x10]
    7c4c:	add	x12, x11, #0x1
    7c50:	str	x12, [x10]
    7c54:	add	x9, x9, x11
    7c58:	strb	w8, [x9]
    7c5c:	mov	w8, #0x2                   	// #2
    7c60:	strb	w8, [sp, #71]
    7c64:	ldur	x9, [x29, #-32]
    7c68:	ldr	x10, [sp, #72]
    7c6c:	subs	x9, x9, x10
    7c70:	cmp	x9, #0x10, lsl #12
    7c74:	b.cs	7c8c <lzma_block_uncomp_encode@@XZ_5.2+0x434>  // b.hs, b.nlast
    7c78:	ldur	x8, [x29, #-32]
    7c7c:	ldr	x9, [sp, #72]
    7c80:	subs	x8, x8, x9
    7c84:	str	x8, [sp, #8]
    7c88:	b	7c94 <lzma_block_uncomp_encode@@XZ_5.2+0x43c>
    7c8c:	mov	x8, #0x10000               	// #65536
    7c90:	str	x8, [sp, #8]
    7c94:	ldr	x8, [sp, #8]
    7c98:	str	x8, [sp, #56]
    7c9c:	ldr	x8, [sp, #56]
    7ca0:	subs	x8, x8, #0x1
    7ca4:	lsr	x8, x8, #8
    7ca8:	ldur	x9, [x29, #-40]
    7cac:	ldur	x10, [x29, #-48]
    7cb0:	ldr	x11, [x10]
    7cb4:	add	x12, x11, #0x1
    7cb8:	str	x12, [x10]
    7cbc:	add	x9, x9, x11
    7cc0:	strb	w8, [x9]
    7cc4:	ldr	x9, [sp, #56]
    7cc8:	subs	x9, x9, #0x1
    7ccc:	and	x9, x9, #0xff
    7cd0:	ldur	x10, [x29, #-40]
    7cd4:	ldur	x11, [x29, #-48]
    7cd8:	ldr	x12, [x11]
    7cdc:	add	x13, x12, #0x1
    7ce0:	str	x13, [x11]
    7ce4:	add	x10, x10, x12
    7ce8:	strb	w9, [x10]
    7cec:	ldur	x10, [x29, #-40]
    7cf0:	ldur	x11, [x29, #-48]
    7cf4:	ldr	x11, [x11]
    7cf8:	add	x0, x10, x11
    7cfc:	ldur	x10, [x29, #-24]
    7d00:	ldr	x11, [sp, #72]
    7d04:	add	x1, x10, x11
    7d08:	ldr	x2, [sp, #56]
    7d0c:	bl	3090 <memcpy@plt>
    7d10:	ldr	x10, [sp, #56]
    7d14:	ldr	x11, [sp, #72]
    7d18:	add	x10, x11, x10
    7d1c:	str	x10, [sp, #72]
    7d20:	ldr	x10, [sp, #56]
    7d24:	ldur	x11, [x29, #-48]
    7d28:	ldr	x12, [x11]
    7d2c:	add	x10, x12, x10
    7d30:	str	x10, [x11]
    7d34:	b	7c2c <lzma_block_uncomp_encode@@XZ_5.2+0x3d4>
    7d38:	ldur	x8, [x29, #-40]
    7d3c:	ldur	x9, [x29, #-48]
    7d40:	ldr	x10, [x9]
    7d44:	add	x11, x10, #0x1
    7d48:	str	x11, [x9]
    7d4c:	add	x8, x8, x10
    7d50:	mov	w12, #0x0                   	// #0
    7d54:	strb	w12, [x8]
    7d58:	stur	wzr, [x29, #-4]
    7d5c:	ldur	w0, [x29, #-4]
    7d60:	ldr	x28, [sp, #304]
    7d64:	ldp	x29, x30, [sp, #288]
    7d68:	add	sp, sp, #0x140
    7d6c:	ret
    7d70:	sub	sp, sp, #0xa0
    7d74:	stp	x29, x30, [sp, #144]
    7d78:	add	x29, sp, #0x90
    7d7c:	adrp	x8, 7000 <lzma_alone_encoder@@XZ_5.0+0xa0>
    7d80:	add	x8, x8, #0xd70
    7d84:	stur	x0, [x29, #-16]
    7d88:	stur	x1, [x29, #-24]
    7d8c:	stur	x2, [x29, #-32]
    7d90:	str	x8, [sp, #24]
    7d94:	ldur	x8, [x29, #-16]
    7d98:	ldr	x8, [x8, #16]
    7d9c:	ldr	x9, [sp, #24]
    7da0:	cmp	x9, x8
    7da4:	b.eq	7db4 <lzma_block_uncomp_encode@@XZ_5.2+0x55c>  // b.none
    7da8:	ldur	x0, [x29, #-16]
    7dac:	ldur	x1, [x29, #-24]
    7db0:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    7db4:	ldur	x8, [x29, #-16]
    7db8:	ldr	x9, [sp, #24]
    7dbc:	str	x9, [x8, #16]
    7dc0:	ldur	x8, [x29, #-32]
    7dc4:	cbnz	x8, 7dd4 <lzma_block_uncomp_encode@@XZ_5.2+0x57c>
    7dc8:	mov	w8, #0xb                   	// #11
    7dcc:	stur	w8, [x29, #-4]
    7dd0:	b	7f40 <lzma_block_uncomp_encode@@XZ_5.2+0x6e8>
    7dd4:	ldur	x8, [x29, #-32]
    7dd8:	ldr	w9, [x8]
    7ddc:	cmp	w9, #0x1
    7de0:	b.ls	7df0 <lzma_block_uncomp_encode@@XZ_5.2+0x598>  // b.plast
    7de4:	mov	w8, #0x8                   	// #8
    7de8:	stur	w8, [x29, #-4]
    7dec:	b	7f40 <lzma_block_uncomp_encode@@XZ_5.2+0x6e8>
    7df0:	ldur	x8, [x29, #-32]
    7df4:	ldr	w9, [x8, #8]
    7df8:	cmp	w9, #0xf
    7dfc:	b.ls	7e0c <lzma_block_uncomp_encode@@XZ_5.2+0x5b4>  // b.plast
    7e00:	mov	w8, #0xb                   	// #11
    7e04:	stur	w8, [x29, #-4]
    7e08:	b	7f40 <lzma_block_uncomp_encode@@XZ_5.2+0x6e8>
    7e0c:	ldur	x8, [x29, #-32]
    7e10:	ldr	w0, [x8, #8]
    7e14:	bl	30e0 <lzma_check_is_supported@plt>
    7e18:	and	w9, w0, #0xff
    7e1c:	cbnz	w9, 7e2c <lzma_block_uncomp_encode@@XZ_5.2+0x5d4>
    7e20:	mov	w8, #0x3                   	// #3
    7e24:	stur	w8, [x29, #-4]
    7e28:	b	7f40 <lzma_block_uncomp_encode@@XZ_5.2+0x6e8>
    7e2c:	ldur	x8, [x29, #-16]
    7e30:	ldr	x8, [x8]
    7e34:	stur	x8, [x29, #-40]
    7e38:	ldur	x8, [x29, #-40]
    7e3c:	cbnz	x8, 7ee8 <lzma_block_uncomp_encode@@XZ_5.2+0x690>
    7e40:	ldur	x1, [x29, #-24]
    7e44:	mov	x0, #0xd8                  	// #216
    7e48:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    7e4c:	stur	x0, [x29, #-40]
    7e50:	ldur	x8, [x29, #-40]
    7e54:	cbnz	x8, 7e64 <lzma_block_uncomp_encode@@XZ_5.2+0x60c>
    7e58:	mov	w8, #0x5                   	// #5
    7e5c:	stur	w8, [x29, #-4]
    7e60:	b	7f40 <lzma_block_uncomp_encode@@XZ_5.2+0x6e8>
    7e64:	ldur	x8, [x29, #-40]
    7e68:	ldur	x9, [x29, #-16]
    7e6c:	str	x8, [x9]
    7e70:	ldur	x8, [x29, #-16]
    7e74:	adrp	x9, 7000 <lzma_alone_encoder@@XZ_5.0+0xa0>
    7e78:	add	x9, x9, #0xf50
    7e7c:	str	x9, [x8, #24]
    7e80:	ldur	x8, [x29, #-16]
    7e84:	adrp	x9, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x7a8>
    7e88:	add	x9, x9, #0x28c
    7e8c:	str	x9, [x8, #32]
    7e90:	ldur	x8, [x29, #-16]
    7e94:	adrp	x9, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x7a8>
    7e98:	add	x9, x9, #0x2cc
    7e9c:	str	x9, [x8, #64]
    7ea0:	ldur	x0, [x29, #-40]
    7ea4:	add	x8, sp, #0x20
    7ea8:	str	x0, [sp, #16]
    7eac:	mov	x0, x8
    7eb0:	mov	w10, wzr
    7eb4:	mov	w1, w10
    7eb8:	mov	x9, #0x48                  	// #72
    7ebc:	mov	x2, x9
    7ec0:	str	x8, [sp, #8]
    7ec4:	str	x9, [sp]
    7ec8:	bl	3230 <memset@plt>
    7ecc:	mov	x8, #0xffffffffffffffff    	// #-1
    7ed0:	str	x8, [sp, #40]
    7ed4:	str	xzr, [sp, #48]
    7ed8:	ldr	x0, [sp, #16]
    7edc:	ldr	x1, [sp, #8]
    7ee0:	ldr	x2, [sp]
    7ee4:	bl	3090 <memcpy@plt>
    7ee8:	ldur	x8, [x29, #-40]
    7eec:	str	wzr, [x8, #80]
    7ef0:	ldur	x8, [x29, #-32]
    7ef4:	ldur	x9, [x29, #-40]
    7ef8:	str	x8, [x9, #72]
    7efc:	ldur	x8, [x29, #-40]
    7f00:	str	xzr, [x8, #88]
    7f04:	ldur	x8, [x29, #-40]
    7f08:	str	xzr, [x8, #96]
    7f0c:	ldur	x8, [x29, #-40]
    7f10:	str	xzr, [x8, #104]
    7f14:	ldur	x8, [x29, #-40]
    7f18:	add	x0, x8, #0x70
    7f1c:	ldur	x8, [x29, #-32]
    7f20:	ldr	w1, [x8, #8]
    7f24:	bl	11ec0 <lzma_check_size@@XZ_5.0+0x44>
    7f28:	ldur	x0, [x29, #-40]
    7f2c:	ldur	x1, [x29, #-24]
    7f30:	ldur	x8, [x29, #-32]
    7f34:	ldr	x2, [x8, #32]
    7f38:	bl	8d1c <lzma_raw_encoder_memusage@@XZ_5.0+0x30>
    7f3c:	stur	w0, [x29, #-4]
    7f40:	ldur	w0, [x29, #-4]
    7f44:	ldp	x29, x30, [sp, #144]
    7f48:	add	sp, sp, #0xa0
    7f4c:	ret
    7f50:	sub	sp, sp, #0xb0
    7f54:	stp	x29, x30, [sp, #160]
    7f58:	add	x29, sp, #0xa0
    7f5c:	ldr	w8, [x29, #16]
    7f60:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    7f64:	stur	x0, [x29, #-16]
    7f68:	stur	x1, [x29, #-24]
    7f6c:	stur	x2, [x29, #-32]
    7f70:	stur	x3, [x29, #-40]
    7f74:	stur	x4, [x29, #-48]
    7f78:	stur	x5, [x29, #-56]
    7f7c:	stur	x6, [x29, #-64]
    7f80:	stur	x7, [x29, #-72]
    7f84:	stur	w8, [x29, #-76]
    7f88:	ldur	x10, [x29, #-16]
    7f8c:	str	x10, [sp, #72]
    7f90:	ldr	x10, [sp, #72]
    7f94:	ldr	x10, [x10, #96]
    7f98:	subs	x9, x9, x10
    7f9c:	ldur	x10, [x29, #-48]
    7fa0:	ldur	x11, [x29, #-40]
    7fa4:	ldr	x11, [x11]
    7fa8:	subs	x10, x10, x11
    7fac:	cmp	x9, x10
    7fb0:	b.cs	7fc0 <lzma_block_uncomp_encode@@XZ_5.2+0x768>  // b.hs, b.nlast
    7fb4:	mov	w8, #0x9                   	// #9
    7fb8:	stur	w8, [x29, #-4]
    7fbc:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0xa24>
    7fc0:	ldr	x8, [sp, #72]
    7fc4:	ldr	w9, [x8, #80]
    7fc8:	str	w9, [sp, #20]
    7fcc:	cbz	w9, 7ff4 <lzma_block_uncomp_encode@@XZ_5.2+0x79c>
    7fd0:	b	7fd4 <lzma_block_uncomp_encode@@XZ_5.2+0x77c>
    7fd4:	ldr	w8, [sp, #20]
    7fd8:	cmp	w8, #0x1
    7fdc:	b.eq	8148 <lzma_block_uncomp_encode@@XZ_5.2+0x8f0>  // b.none
    7fe0:	b	7fe4 <lzma_block_uncomp_encode@@XZ_5.2+0x78c>
    7fe4:	ldr	w8, [sp, #20]
    7fe8:	cmp	w8, #0x2
    7fec:	b.eq	81f0 <lzma_block_uncomp_encode@@XZ_5.2+0x998>  // b.none
    7ff0:	b	8274 <lzma_block_uncomp_encode@@XZ_5.2+0xa1c>
    7ff4:	ldur	x8, [x29, #-40]
    7ff8:	ldr	x8, [x8]
    7ffc:	str	x8, [sp, #64]
    8000:	ldur	x8, [x29, #-64]
    8004:	ldr	x8, [x8]
    8008:	str	x8, [sp, #56]
    800c:	ldr	x8, [sp, #72]
    8010:	ldr	x8, [x8, #24]
    8014:	ldr	x9, [sp, #72]
    8018:	ldr	x0, [x9]
    801c:	ldur	x1, [x29, #-24]
    8020:	ldur	x2, [x29, #-32]
    8024:	ldur	x3, [x29, #-40]
    8028:	ldur	x4, [x29, #-48]
    802c:	ldur	x5, [x29, #-56]
    8030:	ldur	x6, [x29, #-64]
    8034:	ldur	x7, [x29, #-72]
    8038:	ldur	w10, [x29, #-76]
    803c:	mov	x9, sp
    8040:	str	w10, [x9]
    8044:	blr	x8
    8048:	str	w0, [sp, #52]
    804c:	ldur	x8, [x29, #-40]
    8050:	ldr	x8, [x8]
    8054:	ldr	x9, [sp, #64]
    8058:	subs	x8, x8, x9
    805c:	str	x8, [sp, #40]
    8060:	ldur	x8, [x29, #-64]
    8064:	ldr	x8, [x8]
    8068:	ldr	x9, [sp, #56]
    806c:	subs	x8, x8, x9
    8070:	str	x8, [sp, #32]
    8074:	ldr	x8, [sp, #72]
    8078:	ldr	x8, [x8, #88]
    807c:	mov	x9, #0xfffffffffffffbbc    	// #-1092
    8080:	movk	x9, #0x7fff, lsl #48
    8084:	subs	x8, x9, x8
    8088:	ldr	x9, [sp, #32]
    808c:	cmp	x8, x9
    8090:	b.cs	80a0 <lzma_block_uncomp_encode@@XZ_5.2+0x848>  // b.hs, b.nlast
    8094:	mov	w8, #0x9                   	// #9
    8098:	stur	w8, [x29, #-4]
    809c:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0xa24>
    80a0:	ldr	x8, [sp, #32]
    80a4:	ldr	x9, [sp, #72]
    80a8:	ldr	x10, [x9, #88]
    80ac:	add	x8, x10, x8
    80b0:	str	x8, [x9, #88]
    80b4:	ldr	x8, [sp, #40]
    80b8:	ldr	x9, [sp, #72]
    80bc:	ldr	x10, [x9, #96]
    80c0:	add	x8, x10, x8
    80c4:	str	x8, [x9, #96]
    80c8:	ldr	x8, [sp, #72]
    80cc:	add	x0, x8, #0x70
    80d0:	ldr	x8, [sp, #72]
    80d4:	ldr	x8, [x8, #72]
    80d8:	ldr	w1, [x8, #8]
    80dc:	ldur	x8, [x29, #-32]
    80e0:	ldr	x9, [sp, #64]
    80e4:	add	x2, x8, x9
    80e8:	ldr	x3, [sp, #40]
    80ec:	bl	11f3c <lzma_check_size@@XZ_5.0+0xc0>
    80f0:	ldr	w11, [sp, #52]
    80f4:	cmp	w11, #0x1
    80f8:	b.ne	8108 <lzma_block_uncomp_encode@@XZ_5.2+0x8b0>  // b.any
    80fc:	ldur	w8, [x29, #-76]
    8100:	cmp	w8, #0x1
    8104:	b.ne	8114 <lzma_block_uncomp_encode@@XZ_5.2+0x8bc>  // b.any
    8108:	ldr	w8, [sp, #52]
    810c:	stur	w8, [x29, #-4]
    8110:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0xa24>
    8114:	ldr	x8, [sp, #72]
    8118:	ldr	x8, [x8, #88]
    811c:	ldr	x9, [sp, #72]
    8120:	ldr	x9, [x9, #72]
    8124:	str	x8, [x9, #16]
    8128:	ldr	x8, [sp, #72]
    812c:	ldr	x8, [x8, #96]
    8130:	ldr	x9, [sp, #72]
    8134:	ldr	x9, [x9, #72]
    8138:	str	x8, [x9, #24]
    813c:	ldr	x8, [sp, #72]
    8140:	mov	w10, #0x1                   	// #1
    8144:	str	w10, [x8, #80]
    8148:	ldr	x8, [sp, #72]
    814c:	ldr	x8, [x8, #88]
    8150:	and	x8, x8, #0x3
    8154:	cbz	x8, 81b0 <lzma_block_uncomp_encode@@XZ_5.2+0x958>
    8158:	ldur	x8, [x29, #-64]
    815c:	ldr	x8, [x8]
    8160:	ldur	x9, [x29, #-72]
    8164:	cmp	x8, x9
    8168:	b.cc	8174 <lzma_block_uncomp_encode@@XZ_5.2+0x91c>  // b.lo, b.ul, b.last
    816c:	stur	wzr, [x29, #-4]
    8170:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0xa24>
    8174:	ldur	x8, [x29, #-56]
    8178:	ldur	x9, [x29, #-64]
    817c:	ldr	x9, [x9]
    8180:	add	x8, x8, x9
    8184:	mov	w10, #0x0                   	// #0
    8188:	strb	w10, [x8]
    818c:	ldur	x8, [x29, #-64]
    8190:	ldr	x9, [x8]
    8194:	add	x9, x9, #0x1
    8198:	str	x9, [x8]
    819c:	ldr	x8, [sp, #72]
    81a0:	ldr	x9, [x8, #88]
    81a4:	add	x9, x9, #0x1
    81a8:	str	x9, [x8, #88]
    81ac:	b	8148 <lzma_block_uncomp_encode@@XZ_5.2+0x8f0>
    81b0:	ldr	x8, [sp, #72]
    81b4:	ldr	x8, [x8, #72]
    81b8:	ldr	w9, [x8, #8]
    81bc:	cbnz	w9, 81cc <lzma_block_uncomp_encode@@XZ_5.2+0x974>
    81c0:	mov	w8, #0x1                   	// #1
    81c4:	stur	w8, [x29, #-4]
    81c8:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0xa24>
    81cc:	ldr	x8, [sp, #72]
    81d0:	add	x0, x8, #0x70
    81d4:	ldr	x8, [sp, #72]
    81d8:	ldr	x8, [x8, #72]
    81dc:	ldr	w1, [x8, #8]
    81e0:	bl	11fec <lzma_check_size@@XZ_5.0+0x170>
    81e4:	ldr	x8, [sp, #72]
    81e8:	mov	w9, #0x2                   	// #2
    81ec:	str	w9, [x8, #80]
    81f0:	ldr	x8, [sp, #72]
    81f4:	ldr	x8, [x8, #72]
    81f8:	ldr	w0, [x8, #8]
    81fc:	bl	3270 <lzma_check_size@plt>
    8200:	mov	w8, w0
    8204:	ubfx	x8, x8, #0, #32
    8208:	str	x8, [sp, #24]
    820c:	ldr	x8, [sp, #72]
    8210:	add	x0, x8, #0x70
    8214:	ldr	x8, [sp, #72]
    8218:	add	x1, x8, #0x68
    821c:	ldr	x2, [sp, #24]
    8220:	ldur	x3, [x29, #-56]
    8224:	ldur	x4, [x29, #-64]
    8228:	ldur	x5, [x29, #-72]
    822c:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    8230:	ldr	x8, [sp, #72]
    8234:	ldr	x8, [x8, #104]
    8238:	ldr	x9, [sp, #24]
    823c:	cmp	x8, x9
    8240:	b.cs	824c <lzma_block_uncomp_encode@@XZ_5.2+0x9f4>  // b.hs, b.nlast
    8244:	stur	wzr, [x29, #-4]
    8248:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0xa24>
    824c:	ldr	x8, [sp, #72]
    8250:	ldr	x8, [x8, #72]
    8254:	add	x0, x8, #0x28
    8258:	ldr	x8, [sp, #72]
    825c:	add	x1, x8, #0x70
    8260:	ldr	x2, [sp, #24]
    8264:	bl	3090 <memcpy@plt>
    8268:	mov	w9, #0x1                   	// #1
    826c:	stur	w9, [x29, #-4]
    8270:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0xa24>
    8274:	mov	w8, #0xb                   	// #11
    8278:	stur	w8, [x29, #-4]
    827c:	ldur	w0, [x29, #-4]
    8280:	ldp	x29, x30, [sp, #160]
    8284:	add	sp, sp, #0xb0
    8288:	ret
    828c:	sub	sp, sp, #0x30
    8290:	stp	x29, x30, [sp, #32]
    8294:	add	x29, sp, #0x20
    8298:	stur	x0, [x29, #-8]
    829c:	str	x1, [sp, #16]
    82a0:	ldur	x8, [x29, #-8]
    82a4:	str	x8, [sp, #8]
    82a8:	ldr	x0, [sp, #8]
    82ac:	ldr	x1, [sp, #16]
    82b0:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    82b4:	ldr	x0, [sp, #8]
    82b8:	ldr	x1, [sp, #16]
    82bc:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    82c0:	ldp	x29, x30, [sp, #32]
    82c4:	add	sp, sp, #0x30
    82c8:	ret
    82cc:	sub	sp, sp, #0x40
    82d0:	stp	x29, x30, [sp, #48]
    82d4:	add	x29, sp, #0x30
    82d8:	stur	x0, [x29, #-16]
    82dc:	str	x1, [sp, #24]
    82e0:	str	x2, [sp, #16]
    82e4:	str	x3, [sp, #8]
    82e8:	ldur	x8, [x29, #-16]
    82ec:	str	x8, [sp]
    82f0:	ldr	x8, [sp]
    82f4:	ldr	w9, [x8, #80]
    82f8:	cbz	w9, 8308 <lzma_block_uncomp_encode@@XZ_5.2+0xab0>
    82fc:	mov	w8, #0xb                   	// #11
    8300:	stur	w8, [x29, #-4]
    8304:	b	831c <lzma_block_uncomp_encode@@XZ_5.2+0xac4>
    8308:	ldr	x0, [sp]
    830c:	ldr	x1, [sp, #24]
    8310:	ldr	x2, [sp, #8]
    8314:	bl	3aac <lzma_version_string@@XZ_5.0+0x39c>
    8318:	stur	w0, [x29, #-4]
    831c:	ldur	w0, [x29, #-4]
    8320:	ldp	x29, x30, [sp, #48]
    8324:	add	sp, sp, #0x40
    8328:	ret

000000000000832c <lzma_block_encoder@@XZ_5.0>:
    832c:	sub	sp, sp, #0x30
    8330:	stp	x29, x30, [sp, #32]
    8334:	add	x29, sp, #0x20
    8338:	str	x0, [sp, #16]
    833c:	str	x1, [sp, #8]
    8340:	ldr	x0, [sp, #16]
    8344:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    8348:	str	w0, [sp, #4]
    834c:	ldr	w8, [sp, #4]
    8350:	cbz	w8, 8360 <lzma_block_encoder@@XZ_5.0+0x34>
    8354:	ldr	w8, [sp, #4]
    8358:	stur	w8, [x29, #-4]
    835c:	b	83b8 <lzma_block_encoder@@XZ_5.0+0x8c>
    8360:	ldr	x8, [sp, #16]
    8364:	ldr	x0, [x8, #56]
    8368:	ldr	x8, [sp, #16]
    836c:	ldr	x1, [x8, #48]
    8370:	ldr	x2, [sp, #8]
    8374:	bl	7d70 <lzma_block_uncomp_encode@@XZ_5.2+0x518>
    8378:	str	w0, [sp]
    837c:	ldr	w9, [sp]
    8380:	cbz	w9, 8398 <lzma_block_encoder@@XZ_5.0+0x6c>
    8384:	ldr	x0, [sp, #16]
    8388:	bl	3320 <lzma_end@plt>
    838c:	ldr	w8, [sp]
    8390:	stur	w8, [x29, #-4]
    8394:	b	83b8 <lzma_block_encoder@@XZ_5.0+0x8c>
    8398:	ldr	x8, [sp, #16]
    839c:	ldr	x8, [x8, #56]
    83a0:	mov	w9, #0x1                   	// #1
    83a4:	strb	w9, [x8, #88]
    83a8:	ldr	x8, [sp, #16]
    83ac:	ldr	x8, [x8, #56]
    83b0:	strb	w9, [x8, #91]
    83b4:	stur	wzr, [x29, #-4]
    83b8:	ldur	w0, [x29, #-4]
    83bc:	ldp	x29, x30, [sp, #32]
    83c0:	add	sp, sp, #0x30
    83c4:	ret

00000000000083c8 <lzma_block_header_size@@XZ_5.0>:
    83c8:	sub	sp, sp, #0x40
    83cc:	stp	x29, x30, [sp, #48]
    83d0:	add	x29, sp, #0x30
    83d4:	stur	x0, [x29, #-16]
    83d8:	ldur	x8, [x29, #-16]
    83dc:	ldr	w9, [x8]
    83e0:	cmp	w9, #0x1
    83e4:	b.ls	83f4 <lzma_block_header_size@@XZ_5.0+0x2c>  // b.plast
    83e8:	mov	w8, #0x8                   	// #8
    83ec:	stur	w8, [x29, #-4]
    83f0:	b	8578 <lzma_block_header_size@@XZ_5.0+0x1b0>
    83f4:	mov	w8, #0x6                   	// #6
    83f8:	stur	w8, [x29, #-20]
    83fc:	ldur	x9, [x29, #-16]
    8400:	ldr	x9, [x9, #16]
    8404:	mov	x10, #0xffffffffffffffff    	// #-1
    8408:	cmp	x9, x10
    840c:	b.eq	8450 <lzma_block_header_size@@XZ_5.0+0x88>  // b.none
    8410:	ldur	x8, [x29, #-16]
    8414:	ldr	x0, [x8, #16]
    8418:	bl	3480 <lzma_vli_size@plt>
    841c:	str	w0, [sp, #24]
    8420:	ldr	w9, [sp, #24]
    8424:	cbz	w9, 8434 <lzma_block_header_size@@XZ_5.0+0x6c>
    8428:	ldur	x8, [x29, #-16]
    842c:	ldr	x8, [x8, #16]
    8430:	cbnz	x8, 8440 <lzma_block_header_size@@XZ_5.0+0x78>
    8434:	mov	w8, #0xb                   	// #11
    8438:	stur	w8, [x29, #-4]
    843c:	b	8578 <lzma_block_header_size@@XZ_5.0+0x1b0>
    8440:	ldr	w8, [sp, #24]
    8444:	ldur	w9, [x29, #-20]
    8448:	add	w8, w9, w8
    844c:	stur	w8, [x29, #-20]
    8450:	ldur	x8, [x29, #-16]
    8454:	ldr	x8, [x8, #24]
    8458:	mov	x9, #0xffffffffffffffff    	// #-1
    845c:	cmp	x8, x9
    8460:	b.eq	8498 <lzma_block_header_size@@XZ_5.0+0xd0>  // b.none
    8464:	ldur	x8, [x29, #-16]
    8468:	ldr	x0, [x8, #24]
    846c:	bl	3480 <lzma_vli_size@plt>
    8470:	str	w0, [sp, #20]
    8474:	ldr	w9, [sp, #20]
    8478:	cbnz	w9, 8488 <lzma_block_header_size@@XZ_5.0+0xc0>
    847c:	mov	w8, #0xb                   	// #11
    8480:	stur	w8, [x29, #-4]
    8484:	b	8578 <lzma_block_header_size@@XZ_5.0+0x1b0>
    8488:	ldr	w8, [sp, #20]
    848c:	ldur	w9, [x29, #-20]
    8490:	add	w8, w9, w8
    8494:	stur	w8, [x29, #-20]
    8498:	ldur	x8, [x29, #-16]
    849c:	ldr	x8, [x8, #32]
    84a0:	cbz	x8, 84bc <lzma_block_header_size@@XZ_5.0+0xf4>
    84a4:	ldur	x8, [x29, #-16]
    84a8:	ldr	x8, [x8, #32]
    84ac:	ldr	x8, [x8]
    84b0:	mov	x9, #0xffffffffffffffff    	// #-1
    84b4:	cmp	x8, x9
    84b8:	b.ne	84c8 <lzma_block_header_size@@XZ_5.0+0x100>  // b.any
    84bc:	mov	w8, #0xb                   	// #11
    84c0:	stur	w8, [x29, #-4]
    84c4:	b	8578 <lzma_block_header_size@@XZ_5.0+0x1b0>
    84c8:	str	xzr, [sp, #8]
    84cc:	ldur	x8, [x29, #-16]
    84d0:	ldr	x8, [x8, #32]
    84d4:	ldr	x9, [sp, #8]
    84d8:	mov	x10, #0x10                  	// #16
    84dc:	mul	x9, x10, x9
    84e0:	ldr	x8, [x8, x9]
    84e4:	mov	x9, #0xffffffffffffffff    	// #-1
    84e8:	cmp	x8, x9
    84ec:	b.eq	8560 <lzma_block_header_size@@XZ_5.0+0x198>  // b.none
    84f0:	ldr	x8, [sp, #8]
    84f4:	cmp	x8, #0x4
    84f8:	b.ne	8508 <lzma_block_header_size@@XZ_5.0+0x140>  // b.any
    84fc:	mov	w8, #0xb                   	// #11
    8500:	stur	w8, [x29, #-4]
    8504:	b	8578 <lzma_block_header_size@@XZ_5.0+0x1b0>
    8508:	ldur	x8, [x29, #-16]
    850c:	ldr	x8, [x8, #32]
    8510:	ldr	x9, [sp, #8]
    8514:	mov	x10, #0x10                  	// #16
    8518:	mul	x9, x10, x9
    851c:	add	x1, x8, x9
    8520:	add	x0, sp, #0x4
    8524:	bl	30f0 <lzma_filter_flags_size@plt>
    8528:	str	w0, [sp]
    852c:	ldr	w11, [sp]
    8530:	cbz	w11, 8540 <lzma_block_header_size@@XZ_5.0+0x178>
    8534:	ldr	w8, [sp]
    8538:	stur	w8, [x29, #-4]
    853c:	b	8578 <lzma_block_header_size@@XZ_5.0+0x1b0>
    8540:	ldr	w8, [sp, #4]
    8544:	ldur	w9, [x29, #-20]
    8548:	add	w8, w9, w8
    854c:	stur	w8, [x29, #-20]
    8550:	ldr	x8, [sp, #8]
    8554:	add	x8, x8, #0x1
    8558:	str	x8, [sp, #8]
    855c:	b	84cc <lzma_block_header_size@@XZ_5.0+0x104>
    8560:	ldur	w8, [x29, #-20]
    8564:	add	w8, w8, #0x3
    8568:	and	w8, w8, #0xfffffffc
    856c:	ldur	x9, [x29, #-16]
    8570:	str	w8, [x9, #4]
    8574:	stur	wzr, [x29, #-4]
    8578:	ldur	w0, [x29, #-4]
    857c:	ldp	x29, x30, [sp, #48]
    8580:	add	sp, sp, #0x40
    8584:	ret

0000000000008588 <lzma_block_header_encode@@XZ_5.0>:
    8588:	sub	sp, sp, #0x60
    858c:	stp	x29, x30, [sp, #80]
    8590:	add	x29, sp, #0x50
    8594:	stur	x0, [x29, #-16]
    8598:	stur	x1, [x29, #-24]
    859c:	ldur	x0, [x29, #-16]
    85a0:	bl	3190 <lzma_block_unpadded_size@plt>
    85a4:	cbz	x0, 85d0 <lzma_block_header_encode@@XZ_5.0+0x48>
    85a8:	ldur	x8, [x29, #-16]
    85ac:	ldr	x8, [x8, #24]
    85b0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    85b4:	cmp	x8, x9
    85b8:	b.ls	85dc <lzma_block_header_encode@@XZ_5.0+0x54>  // b.plast
    85bc:	ldur	x8, [x29, #-16]
    85c0:	ldr	x8, [x8, #24]
    85c4:	mov	x9, #0xffffffffffffffff    	// #-1
    85c8:	cmp	x8, x9
    85cc:	b.eq	85dc <lzma_block_header_encode@@XZ_5.0+0x54>  // b.none
    85d0:	mov	w8, #0xb                   	// #11
    85d4:	stur	w8, [x29, #-4]
    85d8:	b	880c <lzma_block_header_encode@@XZ_5.0+0x284>
    85dc:	ldur	x8, [x29, #-16]
    85e0:	ldr	w9, [x8, #4]
    85e4:	subs	w9, w9, #0x4
    85e8:	mov	w8, w9
    85ec:	ubfx	x8, x8, #0, #32
    85f0:	stur	x8, [x29, #-32]
    85f4:	ldur	x8, [x29, #-32]
    85f8:	mov	x10, #0x4                   	// #4
    85fc:	udiv	x8, x8, x10
    8600:	ldur	x10, [x29, #-24]
    8604:	strb	w8, [x10]
    8608:	ldur	x10, [x29, #-24]
    860c:	mov	w8, #0x0                   	// #0
    8610:	strb	w8, [x10, #1]
    8614:	mov	x10, #0x2                   	// #2
    8618:	str	x10, [sp, #40]
    861c:	ldur	x10, [x29, #-16]
    8620:	ldr	x10, [x10, #16]
    8624:	mov	x11, #0xffffffffffffffff    	// #-1
    8628:	cmp	x10, x11
    862c:	b.eq	8678 <lzma_block_header_encode@@XZ_5.0+0xf0>  // b.none
    8630:	ldur	x8, [x29, #-16]
    8634:	ldr	x0, [x8, #16]
    8638:	ldur	x2, [x29, #-24]
    863c:	ldur	x4, [x29, #-32]
    8640:	mov	x8, xzr
    8644:	mov	x1, x8
    8648:	add	x3, sp, #0x28
    864c:	bl	3450 <lzma_vli_encode@plt>
    8650:	str	w0, [sp, #36]
    8654:	ldr	w9, [sp, #36]
    8658:	cbz	w9, 8668 <lzma_block_header_encode@@XZ_5.0+0xe0>
    865c:	ldr	w8, [sp, #36]
    8660:	stur	w8, [x29, #-4]
    8664:	b	880c <lzma_block_header_encode@@XZ_5.0+0x284>
    8668:	ldur	x8, [x29, #-24]
    866c:	ldrb	w9, [x8, #1]
    8670:	orr	w9, w9, #0x40
    8674:	strb	w9, [x8, #1]
    8678:	ldur	x8, [x29, #-16]
    867c:	ldr	x8, [x8, #24]
    8680:	mov	x9, #0xffffffffffffffff    	// #-1
    8684:	cmp	x8, x9
    8688:	b.eq	86d4 <lzma_block_header_encode@@XZ_5.0+0x14c>  // b.none
    868c:	ldur	x8, [x29, #-16]
    8690:	ldr	x0, [x8, #24]
    8694:	ldur	x2, [x29, #-24]
    8698:	ldur	x4, [x29, #-32]
    869c:	mov	x8, xzr
    86a0:	mov	x1, x8
    86a4:	add	x3, sp, #0x28
    86a8:	bl	3450 <lzma_vli_encode@plt>
    86ac:	str	w0, [sp, #32]
    86b0:	ldr	w9, [sp, #32]
    86b4:	cbz	w9, 86c4 <lzma_block_header_encode@@XZ_5.0+0x13c>
    86b8:	ldr	w8, [sp, #32]
    86bc:	stur	w8, [x29, #-4]
    86c0:	b	880c <lzma_block_header_encode@@XZ_5.0+0x284>
    86c4:	ldur	x8, [x29, #-24]
    86c8:	ldrb	w9, [x8, #1]
    86cc:	orr	w9, w9, #0x80
    86d0:	strb	w9, [x8, #1]
    86d4:	ldur	x8, [x29, #-16]
    86d8:	ldr	x8, [x8, #32]
    86dc:	cbz	x8, 86f8 <lzma_block_header_encode@@XZ_5.0+0x170>
    86e0:	ldur	x8, [x29, #-16]
    86e4:	ldr	x8, [x8, #32]
    86e8:	ldr	x8, [x8]
    86ec:	mov	x9, #0xffffffffffffffff    	// #-1
    86f0:	cmp	x8, x9
    86f4:	b.ne	8704 <lzma_block_header_encode@@XZ_5.0+0x17c>  // b.any
    86f8:	mov	w8, #0xb                   	// #11
    86fc:	stur	w8, [x29, #-4]
    8700:	b	880c <lzma_block_header_encode@@XZ_5.0+0x284>
    8704:	str	xzr, [sp, #24]
    8708:	ldr	x8, [sp, #24]
    870c:	cmp	x8, #0x4
    8710:	b.ne	8720 <lzma_block_header_encode@@XZ_5.0+0x198>  // b.any
    8714:	mov	w8, #0xb                   	// #11
    8718:	stur	w8, [x29, #-4]
    871c:	b	880c <lzma_block_header_encode@@XZ_5.0+0x284>
    8720:	ldur	x8, [x29, #-16]
    8724:	ldr	x8, [x8, #32]
    8728:	ldr	x9, [sp, #24]
    872c:	mov	x10, #0x10                  	// #16
    8730:	mul	x9, x10, x9
    8734:	add	x0, x8, x9
    8738:	ldur	x1, [x29, #-24]
    873c:	ldur	x3, [x29, #-32]
    8740:	add	x2, sp, #0x28
    8744:	bl	3350 <lzma_filter_flags_encode@plt>
    8748:	str	w0, [sp, #20]
    874c:	ldr	w11, [sp, #20]
    8750:	cbz	w11, 8760 <lzma_block_header_encode@@XZ_5.0+0x1d8>
    8754:	ldr	w8, [sp, #20]
    8758:	stur	w8, [x29, #-4]
    875c:	b	880c <lzma_block_header_encode@@XZ_5.0+0x284>
    8760:	ldur	x8, [x29, #-16]
    8764:	ldr	x8, [x8, #32]
    8768:	ldr	x9, [sp, #24]
    876c:	add	x9, x9, #0x1
    8770:	str	x9, [sp, #24]
    8774:	mov	x10, #0x10                  	// #16
    8778:	mul	x9, x10, x9
    877c:	ldr	x8, [x8, x9]
    8780:	mov	x9, #0xffffffffffffffff    	// #-1
    8784:	cmp	x8, x9
    8788:	b.ne	8708 <lzma_block_header_encode@@XZ_5.0+0x180>  // b.any
    878c:	ldr	x8, [sp, #24]
    8790:	subs	x8, x8, #0x1
    8794:	ldur	x9, [x29, #-24]
    8798:	ldrb	w10, [x9, #1]
    879c:	mov	w11, w10
    87a0:	orr	x8, x11, x8
    87a4:	strb	w8, [x9, #1]
    87a8:	ldur	x9, [x29, #-24]
    87ac:	ldr	x11, [sp, #40]
    87b0:	add	x0, x9, x11
    87b4:	ldur	x9, [x29, #-32]
    87b8:	ldr	x11, [sp, #40]
    87bc:	subs	x2, x9, x11
    87c0:	mov	w8, wzr
    87c4:	mov	w1, w8
    87c8:	bl	3230 <memset@plt>
    87cc:	ldur	x9, [x29, #-24]
    87d0:	ldur	x11, [x29, #-32]
    87d4:	add	x0, x9, x11
    87d8:	ldur	x9, [x29, #-24]
    87dc:	ldur	x1, [x29, #-32]
    87e0:	str	x0, [sp, #8]
    87e4:	mov	x0, x9
    87e8:	mov	w8, wzr
    87ec:	mov	w2, w8
    87f0:	bl	31c0 <lzma_crc32@plt>
    87f4:	ldr	x9, [sp, #8]
    87f8:	str	w0, [sp, #4]
    87fc:	mov	x0, x9
    8800:	ldr	w1, [sp, #4]
    8804:	bl	881c <lzma_block_header_encode@@XZ_5.0+0x294>
    8808:	stur	wzr, [x29, #-4]
    880c:	ldur	w0, [x29, #-4]
    8810:	ldp	x29, x30, [sp, #80]
    8814:	add	sp, sp, #0x60
    8818:	ret
    881c:	sub	sp, sp, #0x10
    8820:	str	x0, [sp, #8]
    8824:	str	w1, [sp, #4]
    8828:	ldr	w8, [sp, #4]
    882c:	ldr	x9, [sp, #8]
    8830:	strb	w8, [x9]
    8834:	ldr	w8, [sp, #4]
    8838:	lsr	w8, w8, #8
    883c:	ldr	x9, [sp, #8]
    8840:	strb	w8, [x9, #1]
    8844:	ldr	w8, [sp, #4]
    8848:	lsr	w8, w8, #16
    884c:	ldr	x9, [sp, #8]
    8850:	strb	w8, [x9, #2]
    8854:	ldr	w8, [sp, #4]
    8858:	lsr	w8, w8, #24
    885c:	ldr	x9, [sp, #8]
    8860:	strb	w8, [x9, #3]
    8864:	add	sp, sp, #0x10
    8868:	ret

000000000000886c <lzma_easy_buffer_encode@@XZ_5.0>:
    886c:	sub	sp, sp, #0x120
    8870:	stp	x29, x30, [sp, #256]
    8874:	str	x28, [sp, #272]
    8878:	add	x29, sp, #0x100
    887c:	mov	x8, sp
    8880:	stur	w0, [x29, #-8]
    8884:	stur	w1, [x29, #-12]
    8888:	stur	x2, [x29, #-24]
    888c:	stur	x3, [x29, #-32]
    8890:	stur	x4, [x29, #-40]
    8894:	stur	x5, [x29, #-48]
    8898:	stur	x6, [x29, #-56]
    889c:	stur	x7, [x29, #-64]
    88a0:	ldur	w1, [x29, #-8]
    88a4:	mov	x0, x8
    88a8:	bl	467c <lzma_block_total_size@@XZ_5.0+0x6c>
    88ac:	tbnz	w0, #0, 88b4 <lzma_easy_buffer_encode@@XZ_5.0+0x48>
    88b0:	b	88c0 <lzma_easy_buffer_encode@@XZ_5.0+0x54>
    88b4:	mov	w8, #0x8                   	// #8
    88b8:	stur	w8, [x29, #-4]
    88bc:	b	88e8 <lzma_easy_buffer_encode@@XZ_5.0+0x7c>
    88c0:	ldur	w1, [x29, #-12]
    88c4:	ldur	x2, [x29, #-24]
    88c8:	ldur	x3, [x29, #-32]
    88cc:	ldur	x4, [x29, #-40]
    88d0:	ldur	x5, [x29, #-48]
    88d4:	ldur	x6, [x29, #-56]
    88d8:	ldur	x7, [x29, #-64]
    88dc:	mov	x0, sp
    88e0:	bl	31f0 <lzma_stream_buffer_encode@plt>
    88e4:	stur	w0, [x29, #-4]
    88e8:	ldur	w0, [x29, #-4]
    88ec:	ldr	x28, [sp, #272]
    88f0:	ldp	x29, x30, [sp, #256]
    88f4:	add	sp, sp, #0x120
    88f8:	ret

00000000000088fc <lzma_easy_encoder@@XZ_5.0>:
    88fc:	sub	sp, sp, #0xf0
    8900:	stp	x29, x30, [sp, #224]
    8904:	add	x29, sp, #0xe0
    8908:	add	x8, sp, #0x8
    890c:	stur	x0, [x29, #-16]
    8910:	stur	w1, [x29, #-20]
    8914:	stur	w2, [x29, #-24]
    8918:	ldur	w1, [x29, #-20]
    891c:	mov	x0, x8
    8920:	bl	467c <lzma_block_total_size@@XZ_5.0+0x6c>
    8924:	tbnz	w0, #0, 892c <lzma_easy_encoder@@XZ_5.0+0x30>
    8928:	b	8938 <lzma_easy_encoder@@XZ_5.0+0x3c>
    892c:	mov	w8, #0x8                   	// #8
    8930:	stur	w8, [x29, #-4]
    8934:	b	894c <lzma_easy_encoder@@XZ_5.0+0x50>
    8938:	ldur	x0, [x29, #-16]
    893c:	ldur	w2, [x29, #-24]
    8940:	add	x1, sp, #0x8
    8944:	bl	34a0 <lzma_stream_encoder@plt>
    8948:	stur	w0, [x29, #-4]
    894c:	ldur	w0, [x29, #-4]
    8950:	ldp	x29, x30, [sp, #224]
    8954:	add	sp, sp, #0xf0
    8958:	ret

000000000000895c <lzma_easy_encoder_memusage@@XZ_5.0>:
    895c:	sub	sp, sp, #0xe0
    8960:	stp	x29, x30, [sp, #208]
    8964:	add	x29, sp, #0xd0
    8968:	mov	x8, sp
    896c:	stur	w0, [x29, #-12]
    8970:	ldur	w1, [x29, #-12]
    8974:	mov	x0, x8
    8978:	bl	467c <lzma_block_total_size@@XZ_5.0+0x6c>
    897c:	tbnz	w0, #0, 8984 <lzma_easy_encoder_memusage@@XZ_5.0+0x28>
    8980:	b	8990 <lzma_easy_encoder_memusage@@XZ_5.0+0x34>
    8984:	mov	x8, #0xffffffff            	// #4294967295
    8988:	stur	x8, [x29, #-8]
    898c:	b	899c <lzma_easy_encoder_memusage@@XZ_5.0+0x40>
    8990:	mov	x0, sp
    8994:	bl	3220 <lzma_raw_encoder_memusage@plt>
    8998:	stur	x0, [x29, #-8]
    899c:	ldur	x0, [x29, #-8]
    89a0:	ldp	x29, x30, [sp, #208]
    89a4:	add	sp, sp, #0xe0
    89a8:	ret

00000000000089ac <lzma_raw_buffer_encode@@XZ_5.0>:
    89ac:	sub	sp, sp, #0xd0
    89b0:	stp	x29, x30, [sp, #192]
    89b4:	add	x29, sp, #0xc0
    89b8:	sub	x8, x29, #0x20
    89bc:	str	x0, [x8, #16]
    89c0:	str	x1, [x8, #8]
    89c4:	str	x2, [x8]
    89c8:	stur	x3, [x29, #-40]
    89cc:	stur	x4, [x29, #-48]
    89d0:	stur	x5, [x29, #-56]
    89d4:	stur	x6, [x29, #-64]
    89d8:	ldr	x9, [x8]
    89dc:	str	x8, [sp, #16]
    89e0:	cbnz	x9, 89ec <lzma_raw_buffer_encode@@XZ_5.0+0x40>
    89e4:	ldur	x8, [x29, #-40]
    89e8:	cbnz	x8, 8a10 <lzma_raw_buffer_encode@@XZ_5.0+0x64>
    89ec:	ldur	x8, [x29, #-48]
    89f0:	cbz	x8, 8a10 <lzma_raw_buffer_encode@@XZ_5.0+0x64>
    89f4:	ldur	x8, [x29, #-56]
    89f8:	cbz	x8, 8a10 <lzma_raw_buffer_encode@@XZ_5.0+0x64>
    89fc:	ldur	x8, [x29, #-56]
    8a00:	ldr	x8, [x8]
    8a04:	ldur	x9, [x29, #-64]
    8a08:	cmp	x8, x9
    8a0c:	b.ls	8a1c <lzma_raw_buffer_encode@@XZ_5.0+0x70>  // b.plast
    8a10:	mov	w8, #0xb                   	// #11
    8a14:	stur	w8, [x29, #-4]
    8a18:	b	8b00 <lzma_raw_buffer_encode@@XZ_5.0+0x154>
    8a1c:	add	x0, sp, #0x38
    8a20:	mov	w8, wzr
    8a24:	mov	w1, w8
    8a28:	mov	x2, #0x48                  	// #72
    8a2c:	bl	3230 <memset@plt>
    8a30:	mov	x9, #0xffffffffffffffff    	// #-1
    8a34:	str	x9, [sp, #64]
    8a38:	ldr	x8, [sp, #16]
    8a3c:	ldr	x1, [x8, #8]
    8a40:	ldr	x2, [x8, #16]
    8a44:	add	x0, sp, #0x38
    8a48:	bl	8d1c <lzma_raw_encoder_memusage@@XZ_5.0+0x30>
    8a4c:	str	w0, [sp, #52]
    8a50:	ldr	w9, [sp, #52]
    8a54:	cbz	w9, 8a64 <lzma_raw_buffer_encode@@XZ_5.0+0xb8>
    8a58:	ldr	w8, [sp, #52]
    8a5c:	stur	w8, [x29, #-4]
    8a60:	b	8b00 <lzma_raw_buffer_encode@@XZ_5.0+0x154>
    8a64:	ldur	x8, [x29, #-56]
    8a68:	ldr	x8, [x8]
    8a6c:	str	x8, [sp, #40]
    8a70:	add	x3, sp, #0x20
    8a74:	str	xzr, [sp, #32]
    8a78:	add	x8, sp, #0x38
    8a7c:	ldr	x9, [x8, #24]
    8a80:	ldr	x0, [sp, #56]
    8a84:	ldr	x10, [sp, #16]
    8a88:	ldr	x1, [x10, #8]
    8a8c:	ldr	x2, [x10]
    8a90:	ldur	x4, [x29, #-40]
    8a94:	ldur	x5, [x29, #-48]
    8a98:	ldur	x6, [x29, #-56]
    8a9c:	ldur	x7, [x29, #-64]
    8aa0:	mov	x11, sp
    8aa4:	mov	w12, #0x3                   	// #3
    8aa8:	str	w12, [x11]
    8aac:	str	x8, [sp, #8]
    8ab0:	blr	x9
    8ab4:	str	w0, [sp, #28]
    8ab8:	ldr	x8, [sp, #16]
    8abc:	ldr	x1, [x8, #8]
    8ac0:	ldr	x0, [sp, #8]
    8ac4:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    8ac8:	ldr	w12, [sp, #28]
    8acc:	cmp	w12, #0x1
    8ad0:	b.ne	8adc <lzma_raw_buffer_encode@@XZ_5.0+0x130>  // b.any
    8ad4:	str	wzr, [sp, #28]
    8ad8:	b	8af8 <lzma_raw_buffer_encode@@XZ_5.0+0x14c>
    8adc:	ldr	w8, [sp, #28]
    8ae0:	cbnz	w8, 8aec <lzma_raw_buffer_encode@@XZ_5.0+0x140>
    8ae4:	mov	w8, #0xa                   	// #10
    8ae8:	str	w8, [sp, #28]
    8aec:	ldr	x8, [sp, #40]
    8af0:	ldur	x9, [x29, #-56]
    8af4:	str	x8, [x9]
    8af8:	ldr	w8, [sp, #28]
    8afc:	stur	w8, [x29, #-4]
    8b00:	ldur	w0, [x29, #-4]
    8b04:	ldp	x29, x30, [sp, #192]
    8b08:	add	sp, sp, #0xd0
    8b0c:	ret

0000000000008b10 <lzma_filter_encoder_is_supported@@XZ_5.0>:
    8b10:	sub	sp, sp, #0x20
    8b14:	stp	x29, x30, [sp, #16]
    8b18:	add	x29, sp, #0x10
    8b1c:	str	x0, [sp, #8]
    8b20:	ldr	x0, [sp, #8]
    8b24:	bl	8b44 <lzma_filter_encoder_is_supported@@XZ_5.0+0x34>
    8b28:	cmp	x0, #0x0
    8b2c:	cset	w8, ne  // ne = any
    8b30:	and	w8, w8, #0x1
    8b34:	mov	w0, w8
    8b38:	ldp	x29, x30, [sp, #16]
    8b3c:	add	sp, sp, #0x20
    8b40:	ret
    8b44:	sub	sp, sp, #0x20
    8b48:	str	x0, [sp, #16]
    8b4c:	str	xzr, [sp, #8]
    8b50:	ldr	x8, [sp, #8]
    8b54:	cmp	x8, #0x9
    8b58:	b.cs	8bb0 <lzma_filter_encoder_is_supported@@XZ_5.0+0xa0>  // b.hs, b.nlast
    8b5c:	ldr	x8, [sp, #8]
    8b60:	mov	x9, #0x38                  	// #56
    8b64:	mul	x8, x9, x8
    8b68:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    8b6c:	add	x9, x9, #0xa00
    8b70:	ldr	x8, [x9, x8]
    8b74:	ldr	x9, [sp, #16]
    8b78:	cmp	x8, x9
    8b7c:	b.ne	8ba0 <lzma_filter_encoder_is_supported@@XZ_5.0+0x90>  // b.any
    8b80:	ldr	x8, [sp, #8]
    8b84:	mov	x9, #0x38                  	// #56
    8b88:	mul	x8, x9, x8
    8b8c:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    8b90:	add	x9, x9, #0xa00
    8b94:	add	x8, x9, x8
    8b98:	str	x8, [sp, #24]
    8b9c:	b	8bb8 <lzma_filter_encoder_is_supported@@XZ_5.0+0xa8>
    8ba0:	ldr	x8, [sp, #8]
    8ba4:	add	x8, x8, #0x1
    8ba8:	str	x8, [sp, #8]
    8bac:	b	8b50 <lzma_filter_encoder_is_supported@@XZ_5.0+0x40>
    8bb0:	mov	x8, xzr
    8bb4:	str	x8, [sp, #24]
    8bb8:	ldr	x0, [sp, #24]
    8bbc:	add	sp, sp, #0x20
    8bc0:	ret

0000000000008bc4 <lzma_filters_update@@XZ_5.0>:
    8bc4:	sub	sp, sp, #0x90
    8bc8:	stp	x29, x30, [sp, #128]
    8bcc:	add	x29, sp, #0x80
    8bd0:	stur	x0, [x29, #-16]
    8bd4:	stur	x1, [x29, #-24]
    8bd8:	ldur	x8, [x29, #-16]
    8bdc:	ldr	x8, [x8, #56]
    8be0:	ldr	x8, [x8, #64]
    8be4:	cbnz	x8, 8bf4 <lzma_filters_update@@XZ_5.0+0x30>
    8be8:	mov	w8, #0xb                   	// #11
    8bec:	stur	w8, [x29, #-4]
    8bf0:	b	8cdc <lzma_filters_update@@XZ_5.0+0x118>
    8bf4:	ldur	x0, [x29, #-24]
    8bf8:	bl	3220 <lzma_raw_encoder_memusage@plt>
    8bfc:	mov	x8, #0xffffffffffffffff    	// #-1
    8c00:	cmp	x0, x8
    8c04:	b.ne	8c14 <lzma_filters_update@@XZ_5.0+0x50>  // b.any
    8c08:	mov	w8, #0x8                   	// #8
    8c0c:	stur	w8, [x29, #-4]
    8c10:	b	8cdc <lzma_filters_update@@XZ_5.0+0x118>
    8c14:	mov	x8, #0x1                   	// #1
    8c18:	stur	x8, [x29, #-32]
    8c1c:	ldur	x8, [x29, #-24]
    8c20:	ldur	x9, [x29, #-32]
    8c24:	mov	x10, #0x10                  	// #16
    8c28:	mul	x9, x10, x9
    8c2c:	ldr	x8, [x8, x9]
    8c30:	mov	x9, #0xffffffffffffffff    	// #-1
    8c34:	cmp	x8, x9
    8c38:	b.eq	8c4c <lzma_filters_update@@XZ_5.0+0x88>  // b.none
    8c3c:	ldur	x8, [x29, #-32]
    8c40:	add	x8, x8, #0x1
    8c44:	stur	x8, [x29, #-32]
    8c48:	b	8c1c <lzma_filters_update@@XZ_5.0+0x58>
    8c4c:	str	xzr, [sp, #8]
    8c50:	ldr	x8, [sp, #8]
    8c54:	ldur	x9, [x29, #-32]
    8c58:	cmp	x8, x9
    8c5c:	b.cs	8c94 <lzma_filters_update@@XZ_5.0+0xd0>  // b.hs, b.nlast
    8c60:	ldur	x8, [x29, #-32]
    8c64:	ldr	x9, [sp, #8]
    8c68:	subs	x8, x8, x9
    8c6c:	subs	x8, x8, #0x1
    8c70:	add	x9, sp, #0x10
    8c74:	ldur	x10, [x29, #-24]
    8c78:	ldr	x11, [sp, #8]
    8c7c:	ldr	q0, [x10, x11, lsl #4]
    8c80:	str	q0, [x9, x8, lsl #4]
    8c84:	ldr	x8, [sp, #8]
    8c88:	add	x8, x8, #0x1
    8c8c:	str	x8, [sp, #8]
    8c90:	b	8c50 <lzma_filters_update@@XZ_5.0+0x8c>
    8c94:	ldur	x8, [x29, #-32]
    8c98:	mov	x9, #0x10                  	// #16
    8c9c:	mul	x8, x9, x8
    8ca0:	add	x9, sp, #0x10
    8ca4:	mov	x10, #0xffffffffffffffff    	// #-1
    8ca8:	str	x10, [x9, x8]
    8cac:	ldur	x8, [x29, #-16]
    8cb0:	ldr	x8, [x8, #56]
    8cb4:	ldr	x8, [x8, #64]
    8cb8:	ldur	x10, [x29, #-16]
    8cbc:	ldr	x10, [x10, #56]
    8cc0:	ldr	x0, [x10]
    8cc4:	ldur	x10, [x29, #-16]
    8cc8:	ldr	x1, [x10, #48]
    8ccc:	ldur	x2, [x29, #-24]
    8cd0:	mov	x3, x9
    8cd4:	blr	x8
    8cd8:	stur	w0, [x29, #-4]
    8cdc:	ldur	w0, [x29, #-4]
    8ce0:	ldp	x29, x30, [sp, #128]
    8ce4:	add	sp, sp, #0x90
    8ce8:	ret

0000000000008cec <lzma_raw_encoder_memusage@@XZ_5.0>:
    8cec:	sub	sp, sp, #0x20
    8cf0:	stp	x29, x30, [sp, #16]
    8cf4:	add	x29, sp, #0x10
    8cf8:	adrp	x8, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x7a8>
    8cfc:	add	x8, x8, #0xb44
    8d00:	str	x0, [sp, #8]
    8d04:	ldr	x1, [sp, #8]
    8d08:	mov	x0, x8
    8d0c:	bl	4dec <lzma_filters_copy@@XZ_5.0+0x6ec>
    8d10:	ldp	x29, x30, [sp, #16]
    8d14:	add	sp, sp, #0x20
    8d18:	ret
    8d1c:	sub	sp, sp, #0x30
    8d20:	stp	x29, x30, [sp, #32]
    8d24:	add	x29, sp, #0x20
    8d28:	adrp	x3, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x7a8>
    8d2c:	add	x3, x3, #0xb44
    8d30:	stur	x0, [x29, #-8]
    8d34:	str	x1, [sp, #16]
    8d38:	str	x2, [sp, #8]
    8d3c:	ldur	x0, [x29, #-8]
    8d40:	ldr	x1, [sp, #16]
    8d44:	ldr	x2, [sp, #8]
    8d48:	mov	w8, #0x1                   	// #1
    8d4c:	and	w4, w8, #0x1
    8d50:	bl	49a8 <lzma_filters_copy@@XZ_5.0+0x2a8>
    8d54:	ldp	x29, x30, [sp, #32]
    8d58:	add	sp, sp, #0x30
    8d5c:	ret

0000000000008d60 <lzma_raw_encoder@@XZ_5.0>:
    8d60:	sub	sp, sp, #0x30
    8d64:	stp	x29, x30, [sp, #32]
    8d68:	add	x29, sp, #0x20
    8d6c:	str	x0, [sp, #16]
    8d70:	str	x1, [sp, #8]
    8d74:	ldr	x0, [sp, #16]
    8d78:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    8d7c:	str	w0, [sp, #4]
    8d80:	ldr	w8, [sp, #4]
    8d84:	cbz	w8, 8d94 <lzma_raw_encoder@@XZ_5.0+0x34>
    8d88:	ldr	w8, [sp, #4]
    8d8c:	stur	w8, [x29, #-4]
    8d90:	b	8e08 <lzma_raw_encoder@@XZ_5.0+0xa8>
    8d94:	ldr	x8, [sp, #16]
    8d98:	ldr	x0, [x8, #56]
    8d9c:	ldr	x8, [sp, #16]
    8da0:	ldr	x1, [x8, #48]
    8da4:	ldr	x2, [sp, #8]
    8da8:	adrp	x3, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x7a8>
    8dac:	add	x3, x3, #0xb44
    8db0:	mov	w9, #0x1                   	// #1
    8db4:	and	w4, w9, #0x1
    8db8:	bl	49a8 <lzma_filters_copy@@XZ_5.0+0x2a8>
    8dbc:	str	w0, [sp]
    8dc0:	ldr	w9, [sp]
    8dc4:	cbz	w9, 8ddc <lzma_raw_encoder@@XZ_5.0+0x7c>
    8dc8:	ldr	x0, [sp, #16]
    8dcc:	bl	3320 <lzma_end@plt>
    8dd0:	ldr	w8, [sp]
    8dd4:	stur	w8, [x29, #-4]
    8dd8:	b	8e08 <lzma_raw_encoder@@XZ_5.0+0xa8>
    8ddc:	ldr	x8, [sp, #16]
    8de0:	ldr	x8, [x8, #56]
    8de4:	mov	w9, #0x1                   	// #1
    8de8:	strb	w9, [x8, #88]
    8dec:	ldr	x8, [sp, #16]
    8df0:	ldr	x8, [x8, #56]
    8df4:	strb	w9, [x8, #89]
    8df8:	ldr	x8, [sp, #16]
    8dfc:	ldr	x8, [x8, #56]
    8e00:	strb	w9, [x8, #91]
    8e04:	stur	wzr, [x29, #-4]
    8e08:	ldur	w0, [x29, #-4]
    8e0c:	ldp	x29, x30, [sp, #32]
    8e10:	add	sp, sp, #0x30
    8e14:	ret
    8e18:	sub	sp, sp, #0x40
    8e1c:	stp	x29, x30, [sp, #48]
    8e20:	add	x29, sp, #0x30
    8e24:	stur	x0, [x29, #-16]
    8e28:	str	xzr, [sp, #24]
    8e2c:	str	xzr, [sp, #16]
    8e30:	ldur	x8, [x29, #-16]
    8e34:	ldr	x9, [sp, #16]
    8e38:	mov	x10, #0x10                  	// #16
    8e3c:	mul	x9, x10, x9
    8e40:	ldr	x8, [x8, x9]
    8e44:	mov	x9, #0xffffffffffffffff    	// #-1
    8e48:	cmp	x8, x9
    8e4c:	b.eq	8ed8 <lzma_raw_encoder@@XZ_5.0+0x178>  // b.none
    8e50:	ldur	x8, [x29, #-16]
    8e54:	ldr	x9, [sp, #16]
    8e58:	mov	x10, #0x10                  	// #16
    8e5c:	mul	x9, x10, x9
    8e60:	ldr	x0, [x8, x9]
    8e64:	bl	8b44 <lzma_filter_encoder_is_supported@@XZ_5.0+0x34>
    8e68:	str	x0, [sp, #8]
    8e6c:	ldr	x8, [sp, #8]
    8e70:	ldr	x8, [x8, #24]
    8e74:	cbz	x8, 8ec8 <lzma_raw_encoder@@XZ_5.0+0x168>
    8e78:	ldr	x8, [sp, #8]
    8e7c:	ldr	x8, [x8, #24]
    8e80:	ldur	x9, [x29, #-16]
    8e84:	ldr	x10, [sp, #16]
    8e88:	mov	x11, #0x10                  	// #16
    8e8c:	mul	x10, x11, x10
    8e90:	add	x9, x9, x10
    8e94:	ldr	x0, [x9, #8]
    8e98:	blr	x8
    8e9c:	str	x0, [sp]
    8ea0:	ldr	x8, [sp]
    8ea4:	cbnz	x8, 8eb0 <lzma_raw_encoder@@XZ_5.0+0x150>
    8ea8:	stur	xzr, [x29, #-8]
    8eac:	b	8ee0 <lzma_raw_encoder@@XZ_5.0+0x180>
    8eb0:	ldr	x8, [sp]
    8eb4:	ldr	x9, [sp, #24]
    8eb8:	cmp	x8, x9
    8ebc:	b.ls	8ec8 <lzma_raw_encoder@@XZ_5.0+0x168>  // b.plast
    8ec0:	ldr	x8, [sp]
    8ec4:	str	x8, [sp, #24]
    8ec8:	ldr	x8, [sp, #16]
    8ecc:	add	x8, x8, #0x1
    8ed0:	str	x8, [sp, #16]
    8ed4:	b	8e30 <lzma_raw_encoder@@XZ_5.0+0xd0>
    8ed8:	ldr	x8, [sp, #24]
    8edc:	stur	x8, [x29, #-8]
    8ee0:	ldur	x0, [x29, #-8]
    8ee4:	ldp	x29, x30, [sp, #48]
    8ee8:	add	sp, sp, #0x40
    8eec:	ret

0000000000008ef0 <lzma_properties_size@@XZ_5.0>:
    8ef0:	sub	sp, sp, #0x30
    8ef4:	stp	x29, x30, [sp, #32]
    8ef8:	add	x29, sp, #0x20
    8efc:	str	x0, [sp, #16]
    8f00:	str	x1, [sp, #8]
    8f04:	ldr	x8, [sp, #8]
    8f08:	ldr	x0, [x8]
    8f0c:	bl	8b44 <lzma_filter_encoder_is_supported@@XZ_5.0+0x34>
    8f10:	str	x0, [sp]
    8f14:	ldr	x8, [sp]
    8f18:	cbnz	x8, 8f40 <lzma_properties_size@@XZ_5.0+0x50>
    8f1c:	ldr	x8, [sp, #8]
    8f20:	ldr	x8, [x8]
    8f24:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    8f28:	mov	w10, #0xb                   	// #11
    8f2c:	mov	w11, #0x8                   	// #8
    8f30:	cmp	x8, x9
    8f34:	csel	w10, w11, w10, ls  // ls = plast
    8f38:	stur	w10, [x29, #-4]
    8f3c:	b	8f80 <lzma_properties_size@@XZ_5.0+0x90>
    8f40:	ldr	x8, [sp]
    8f44:	ldr	x8, [x8, #32]
    8f48:	cbnz	x8, 8f64 <lzma_properties_size@@XZ_5.0+0x74>
    8f4c:	ldr	x8, [sp]
    8f50:	ldr	w9, [x8, #40]
    8f54:	ldr	x8, [sp, #16]
    8f58:	str	w9, [x8]
    8f5c:	stur	wzr, [x29, #-4]
    8f60:	b	8f80 <lzma_properties_size@@XZ_5.0+0x90>
    8f64:	ldr	x8, [sp]
    8f68:	ldr	x8, [x8, #32]
    8f6c:	ldr	x0, [sp, #16]
    8f70:	ldr	x9, [sp, #8]
    8f74:	ldr	x1, [x9, #8]
    8f78:	blr	x8
    8f7c:	stur	w0, [x29, #-4]
    8f80:	ldur	w0, [x29, #-4]
    8f84:	ldp	x29, x30, [sp, #32]
    8f88:	add	sp, sp, #0x30
    8f8c:	ret

0000000000008f90 <lzma_properties_encode@@XZ_5.0>:
    8f90:	sub	sp, sp, #0x30
    8f94:	stp	x29, x30, [sp, #32]
    8f98:	add	x29, sp, #0x20
    8f9c:	str	x0, [sp, #16]
    8fa0:	str	x1, [sp, #8]
    8fa4:	ldr	x8, [sp, #16]
    8fa8:	ldr	x0, [x8]
    8fac:	bl	8b44 <lzma_filter_encoder_is_supported@@XZ_5.0+0x34>
    8fb0:	str	x0, [sp]
    8fb4:	ldr	x8, [sp]
    8fb8:	cbnz	x8, 8fc8 <lzma_properties_encode@@XZ_5.0+0x38>
    8fbc:	mov	w8, #0xb                   	// #11
    8fc0:	stur	w8, [x29, #-4]
    8fc4:	b	8ff8 <lzma_properties_encode@@XZ_5.0+0x68>
    8fc8:	ldr	x8, [sp]
    8fcc:	ldr	x8, [x8, #48]
    8fd0:	cbnz	x8, 8fdc <lzma_properties_encode@@XZ_5.0+0x4c>
    8fd4:	stur	wzr, [x29, #-4]
    8fd8:	b	8ff8 <lzma_properties_encode@@XZ_5.0+0x68>
    8fdc:	ldr	x8, [sp]
    8fe0:	ldr	x8, [x8, #48]
    8fe4:	ldr	x9, [sp, #16]
    8fe8:	ldr	x0, [x9, #8]
    8fec:	ldr	x1, [sp, #8]
    8ff0:	blr	x8
    8ff4:	stur	w0, [x29, #-4]
    8ff8:	ldur	w0, [x29, #-4]
    8ffc:	ldp	x29, x30, [sp, #32]
    9000:	add	sp, sp, #0x30
    9004:	ret

0000000000009008 <lzma_filter_flags_size@@XZ_5.0>:
    9008:	sub	sp, sp, #0x30
    900c:	stp	x29, x30, [sp, #32]
    9010:	add	x29, sp, #0x20
    9014:	mov	x8, #0x4000000000000000    	// #4611686018427387904
    9018:	str	x0, [sp, #16]
    901c:	str	x1, [sp, #8]
    9020:	ldr	x9, [sp, #8]
    9024:	ldr	x9, [x9]
    9028:	cmp	x9, x8
    902c:	b.cc	903c <lzma_filter_flags_size@@XZ_5.0+0x34>  // b.lo, b.ul, b.last
    9030:	mov	w8, #0xb                   	// #11
    9034:	stur	w8, [x29, #-4]
    9038:	b	90a0 <lzma_filter_flags_size@@XZ_5.0+0x98>
    903c:	ldr	x0, [sp, #16]
    9040:	ldr	x1, [sp, #8]
    9044:	bl	3370 <lzma_properties_size@plt>
    9048:	str	w0, [sp, #4]
    904c:	ldr	w8, [sp, #4]
    9050:	cbz	w8, 9060 <lzma_filter_flags_size@@XZ_5.0+0x58>
    9054:	ldr	w8, [sp, #4]
    9058:	stur	w8, [x29, #-4]
    905c:	b	90a0 <lzma_filter_flags_size@@XZ_5.0+0x98>
    9060:	ldr	x8, [sp, #8]
    9064:	ldr	x0, [x8]
    9068:	bl	3480 <lzma_vli_size@plt>
    906c:	ldr	x8, [sp, #16]
    9070:	ldr	w9, [x8]
    9074:	mov	w1, w9
    9078:	str	w0, [sp]
    907c:	mov	x0, x1
    9080:	bl	3480 <lzma_vli_size@plt>
    9084:	ldr	w9, [sp]
    9088:	add	w10, w9, w0
    908c:	ldr	x8, [sp, #16]
    9090:	ldr	w11, [x8]
    9094:	add	w10, w11, w10
    9098:	str	w10, [x8]
    909c:	stur	wzr, [x29, #-4]
    90a0:	ldur	w0, [x29, #-4]
    90a4:	ldp	x29, x30, [sp, #32]
    90a8:	add	sp, sp, #0x30
    90ac:	ret

00000000000090b0 <lzma_filter_flags_encode@@XZ_5.0>:
    90b0:	sub	sp, sp, #0x50
    90b4:	stp	x29, x30, [sp, #64]
    90b8:	add	x29, sp, #0x40
    90bc:	mov	x8, #0x4000000000000000    	// #4611686018427387904
    90c0:	stur	x0, [x29, #-16]
    90c4:	stur	x1, [x29, #-24]
    90c8:	str	x2, [sp, #32]
    90cc:	str	x3, [sp, #24]
    90d0:	ldur	x9, [x29, #-16]
    90d4:	ldr	x9, [x9]
    90d8:	cmp	x9, x8
    90dc:	b.cc	90ec <lzma_filter_flags_encode@@XZ_5.0+0x3c>  // b.lo, b.ul, b.last
    90e0:	mov	w8, #0xb                   	// #11
    90e4:	stur	w8, [x29, #-4]
    90e8:	b	91f8 <lzma_filter_flags_encode@@XZ_5.0+0x148>
    90ec:	ldur	x8, [x29, #-16]
    90f0:	ldr	x0, [x8]
    90f4:	ldur	x2, [x29, #-24]
    90f8:	ldr	x3, [sp, #32]
    90fc:	ldr	x4, [sp, #24]
    9100:	mov	x8, xzr
    9104:	mov	x1, x8
    9108:	bl	3450 <lzma_vli_encode@plt>
    910c:	str	w0, [sp, #20]
    9110:	ldr	w9, [sp, #20]
    9114:	cbz	w9, 9124 <lzma_filter_flags_encode@@XZ_5.0+0x74>
    9118:	ldr	w8, [sp, #20]
    911c:	stur	w8, [x29, #-4]
    9120:	b	91f8 <lzma_filter_flags_encode@@XZ_5.0+0x148>
    9124:	ldur	x1, [x29, #-16]
    9128:	add	x0, sp, #0x10
    912c:	bl	3370 <lzma_properties_size@plt>
    9130:	str	w0, [sp, #12]
    9134:	ldr	w8, [sp, #12]
    9138:	cbz	w8, 9148 <lzma_filter_flags_encode@@XZ_5.0+0x98>
    913c:	ldr	w8, [sp, #12]
    9140:	stur	w8, [x29, #-4]
    9144:	b	91f8 <lzma_filter_flags_encode@@XZ_5.0+0x148>
    9148:	ldr	w8, [sp, #16]
    914c:	mov	w0, w8
    9150:	ldur	x2, [x29, #-24]
    9154:	ldr	x3, [sp, #32]
    9158:	ldr	x4, [sp, #24]
    915c:	mov	x9, xzr
    9160:	mov	x1, x9
    9164:	bl	3450 <lzma_vli_encode@plt>
    9168:	str	w0, [sp, #8]
    916c:	ldr	w8, [sp, #8]
    9170:	cbz	w8, 9180 <lzma_filter_flags_encode@@XZ_5.0+0xd0>
    9174:	ldr	w8, [sp, #8]
    9178:	stur	w8, [x29, #-4]
    917c:	b	91f8 <lzma_filter_flags_encode@@XZ_5.0+0x148>
    9180:	ldr	x8, [sp, #24]
    9184:	ldr	x9, [sp, #32]
    9188:	ldr	x9, [x9]
    918c:	subs	x8, x8, x9
    9190:	ldr	w10, [sp, #16]
    9194:	mov	w9, w10
    9198:	cmp	x8, x9
    919c:	b.cs	91ac <lzma_filter_flags_encode@@XZ_5.0+0xfc>  // b.hs, b.nlast
    91a0:	mov	w8, #0xb                   	// #11
    91a4:	stur	w8, [x29, #-4]
    91a8:	b	91f8 <lzma_filter_flags_encode@@XZ_5.0+0x148>
    91ac:	ldur	x0, [x29, #-16]
    91b0:	ldur	x8, [x29, #-24]
    91b4:	ldr	x9, [sp, #32]
    91b8:	ldr	x9, [x9]
    91bc:	add	x1, x8, x9
    91c0:	bl	3400 <lzma_properties_encode@plt>
    91c4:	str	w0, [sp, #4]
    91c8:	ldr	w10, [sp, #4]
    91cc:	cbz	w10, 91dc <lzma_filter_flags_encode@@XZ_5.0+0x12c>
    91d0:	ldr	w8, [sp, #4]
    91d4:	stur	w8, [x29, #-4]
    91d8:	b	91f8 <lzma_filter_flags_encode@@XZ_5.0+0x148>
    91dc:	ldr	w8, [sp, #16]
    91e0:	mov	w9, w8
    91e4:	ldr	x10, [sp, #32]
    91e8:	ldr	x11, [x10]
    91ec:	add	x9, x11, x9
    91f0:	str	x9, [x10]
    91f4:	stur	wzr, [x29, #-4]
    91f8:	ldur	w0, [x29, #-4]
    91fc:	ldp	x29, x30, [sp, #64]
    9200:	add	sp, sp, #0x50
    9204:	ret
    9208:	sub	sp, sp, #0x40
    920c:	stp	x29, x30, [sp, #48]
    9210:	add	x29, sp, #0x30
    9214:	adrp	x8, 9000 <lzma_properties_encode@@XZ_5.0+0x70>
    9218:	add	x8, x8, #0x208
    921c:	stur	x0, [x29, #-16]
    9220:	str	x1, [sp, #24]
    9224:	str	x2, [sp, #16]
    9228:	str	x8, [sp, #8]
    922c:	ldur	x8, [x29, #-16]
    9230:	ldr	x8, [x8, #16]
    9234:	ldr	x9, [sp, #8]
    9238:	cmp	x9, x8
    923c:	b.eq	924c <lzma_filter_flags_encode@@XZ_5.0+0x19c>  // b.none
    9240:	ldur	x0, [x29, #-16]
    9244:	ldr	x1, [sp, #24]
    9248:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    924c:	ldur	x8, [x29, #-16]
    9250:	ldr	x9, [sp, #8]
    9254:	str	x9, [x8, #16]
    9258:	ldr	x8, [sp, #16]
    925c:	cbnz	x8, 926c <lzma_filter_flags_encode@@XZ_5.0+0x1bc>
    9260:	mov	w8, #0xb                   	// #11
    9264:	stur	w8, [x29, #-4]
    9268:	b	92d8 <lzma_filter_flags_encode@@XZ_5.0+0x228>
    926c:	ldur	x8, [x29, #-16]
    9270:	ldr	x8, [x8]
    9274:	cbnz	x8, 92c4 <lzma_filter_flags_encode@@XZ_5.0+0x214>
    9278:	ldr	x1, [sp, #24]
    927c:	mov	x0, #0x150                 	// #336
    9280:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    9284:	ldur	x8, [x29, #-16]
    9288:	str	x0, [x8]
    928c:	ldur	x8, [x29, #-16]
    9290:	ldr	x8, [x8]
    9294:	cbnz	x8, 92a4 <lzma_filter_flags_encode@@XZ_5.0+0x1f4>
    9298:	mov	w8, #0x5                   	// #5
    929c:	stur	w8, [x29, #-4]
    92a0:	b	92d8 <lzma_filter_flags_encode@@XZ_5.0+0x228>
    92a4:	ldur	x8, [x29, #-16]
    92a8:	adrp	x9, 9000 <lzma_properties_encode@@XZ_5.0+0x70>
    92ac:	add	x9, x9, #0x2e8
    92b0:	str	x9, [x8, #24]
    92b4:	ldur	x8, [x29, #-16]
    92b8:	adrp	x9, 9000 <lzma_properties_encode@@XZ_5.0+0x70>
    92bc:	add	x9, x9, #0x648
    92c0:	str	x9, [x8, #32]
    92c4:	ldur	x8, [x29, #-16]
    92c8:	ldr	x0, [x8]
    92cc:	ldr	x1, [sp, #16]
    92d0:	bl	9674 <lzma_filter_flags_encode@@XZ_5.0+0x5c4>
    92d4:	stur	wzr, [x29, #-4]
    92d8:	ldur	w0, [x29, #-4]
    92dc:	ldp	x29, x30, [sp, #48]
    92e0:	add	sp, sp, #0x40
    92e4:	ret
    92e8:	sub	sp, sp, #0xa0
    92ec:	stp	x29, x30, [sp, #144]
    92f0:	add	x29, sp, #0x90
    92f4:	ldr	w8, [x29, #16]
    92f8:	stur	x0, [x29, #-16]
    92fc:	stur	x1, [x29, #-24]
    9300:	stur	x2, [x29, #-32]
    9304:	stur	x3, [x29, #-40]
    9308:	stur	x4, [x29, #-48]
    930c:	stur	x5, [x29, #-56]
    9310:	stur	x6, [x29, #-64]
    9314:	str	x7, [sp, #72]
    9318:	str	w8, [sp, #68]
    931c:	ldur	x9, [x29, #-16]
    9320:	str	x9, [sp, #56]
    9324:	ldur	x9, [x29, #-64]
    9328:	ldr	x9, [x9]
    932c:	str	x9, [sp, #48]
    9330:	str	wzr, [sp, #44]
    9334:	ldur	x8, [x29, #-64]
    9338:	ldr	x8, [x8]
    933c:	ldr	x9, [sp, #72]
    9340:	cmp	x8, x9
    9344:	b.cs	9600 <lzma_filter_flags_encode@@XZ_5.0+0x550>  // b.hs, b.nlast
    9348:	ldr	x8, [sp, #56]
    934c:	ldr	w9, [x8]
    9350:	subs	w9, w9, #0x0
    9354:	mov	w8, w9
    9358:	ubfx	x8, x8, #0, #32
    935c:	cmp	x8, #0x6
    9360:	str	x8, [sp, #16]
    9364:	b.hi	95f0 <lzma_filter_flags_encode@@XZ_5.0+0x540>  // b.pmore
    9368:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    936c:	add	x8, x8, #0x9f8
    9370:	ldr	x11, [sp, #16]
    9374:	ldrsw	x10, [x8, x11, lsl #2]
    9378:	add	x9, x8, x10
    937c:	br	x9
    9380:	ldur	x8, [x29, #-56]
    9384:	ldur	x9, [x29, #-64]
    9388:	ldr	x9, [x9]
    938c:	add	x8, x8, x9
    9390:	mov	w10, #0x0                   	// #0
    9394:	strb	w10, [x8]
    9398:	ldur	x8, [x29, #-64]
    939c:	ldr	x9, [x8]
    93a0:	add	x9, x9, #0x1
    93a4:	str	x9, [x8]
    93a8:	ldr	x8, [sp, #56]
    93ac:	mov	w10, #0x1                   	// #1
    93b0:	str	w10, [x8]
    93b4:	b	95fc <lzma_filter_flags_encode@@XZ_5.0+0x54c>
    93b8:	ldr	x8, [sp, #56]
    93bc:	ldr	x0, [x8, #8]
    93c0:	bl	34e0 <lzma_index_block_count@plt>
    93c4:	str	x0, [sp, #32]
    93c8:	ldr	x0, [sp, #32]
    93cc:	ldr	x8, [sp, #56]
    93d0:	add	x1, x8, #0x140
    93d4:	ldur	x2, [x29, #-56]
    93d8:	ldur	x3, [x29, #-64]
    93dc:	ldr	x4, [sp, #72]
    93e0:	bl	3450 <lzma_vli_encode@plt>
    93e4:	str	w0, [sp, #44]
    93e8:	ldr	w9, [sp, #44]
    93ec:	cmp	w9, #0x1
    93f0:	b.eq	93f8 <lzma_filter_flags_encode@@XZ_5.0+0x348>  // b.none
    93f4:	b	9600 <lzma_filter_flags_encode@@XZ_5.0+0x550>
    93f8:	str	wzr, [sp, #44]
    93fc:	ldr	x8, [sp, #56]
    9400:	str	xzr, [x8, #320]
    9404:	ldr	x8, [sp, #56]
    9408:	mov	w9, #0x4                   	// #4
    940c:	str	w9, [x8]
    9410:	b	95fc <lzma_filter_flags_encode@@XZ_5.0+0x54c>
    9414:	ldr	x8, [sp, #56]
    9418:	add	x0, x8, #0x10
    941c:	mov	w1, #0x2                   	// #2
    9420:	bl	3460 <lzma_index_iter_next@plt>
    9424:	and	w9, w0, #0xff
    9428:	cbz	w9, 9458 <lzma_filter_flags_encode@@XZ_5.0+0x3a8>
    942c:	ldr	x8, [sp, #56]
    9430:	ldr	x0, [x8, #8]
    9434:	bl	57c0 <lzma_index_checks@@XZ_5.0+0x5c>
    9438:	mov	w8, w0
    943c:	ubfx	x8, x8, #0, #32
    9440:	ldr	x9, [sp, #56]
    9444:	str	x8, [x9, #320]
    9448:	ldr	x8, [sp, #56]
    944c:	mov	w10, #0x5                   	// #5
    9450:	str	w10, [x8]
    9454:	b	95fc <lzma_filter_flags_encode@@XZ_5.0+0x54c>
    9458:	ldr	x8, [sp, #56]
    945c:	mov	w9, #0x2                   	// #2
    9460:	str	w9, [x8]
    9464:	ldr	x8, [sp, #56]
    9468:	ldr	w9, [x8]
    946c:	cmp	w9, #0x2
    9470:	b.ne	9484 <lzma_filter_flags_encode@@XZ_5.0+0x3d4>  // b.any
    9474:	ldr	x8, [sp, #56]
    9478:	ldr	x8, [x8, #192]
    947c:	str	x8, [sp, #8]
    9480:	b	9490 <lzma_filter_flags_encode@@XZ_5.0+0x3e0>
    9484:	ldr	x8, [sp, #56]
    9488:	ldr	x8, [x8, #184]
    948c:	str	x8, [sp, #8]
    9490:	ldr	x8, [sp, #8]
    9494:	str	x8, [sp, #24]
    9498:	ldr	x0, [sp, #24]
    949c:	ldr	x8, [sp, #56]
    94a0:	add	x1, x8, #0x140
    94a4:	ldur	x2, [x29, #-56]
    94a8:	ldur	x3, [x29, #-64]
    94ac:	ldr	x4, [sp, #72]
    94b0:	bl	3450 <lzma_vli_encode@plt>
    94b4:	str	w0, [sp, #44]
    94b8:	ldr	w9, [sp, #44]
    94bc:	cmp	w9, #0x1
    94c0:	b.eq	94c8 <lzma_filter_flags_encode@@XZ_5.0+0x418>  // b.none
    94c4:	b	9600 <lzma_filter_flags_encode@@XZ_5.0+0x550>
    94c8:	str	wzr, [sp, #44]
    94cc:	ldr	x8, [sp, #56]
    94d0:	str	xzr, [x8, #320]
    94d4:	ldr	x8, [sp, #56]
    94d8:	ldr	w9, [x8]
    94dc:	add	w9, w9, #0x1
    94e0:	str	w9, [x8]
    94e4:	b	95fc <lzma_filter_flags_encode@@XZ_5.0+0x54c>
    94e8:	ldr	x8, [sp, #56]
    94ec:	ldr	x8, [x8, #320]
    94f0:	cmp	x8, #0x0
    94f4:	cset	w9, ls  // ls = plast
    94f8:	tbnz	w9, #0, 9530 <lzma_filter_flags_encode@@XZ_5.0+0x480>
    94fc:	ldr	x8, [sp, #56]
    9500:	ldr	x9, [x8, #320]
    9504:	subs	x9, x9, #0x1
    9508:	str	x9, [x8, #320]
    950c:	ldur	x8, [x29, #-56]
    9510:	ldur	x9, [x29, #-64]
    9514:	ldr	x10, [x9]
    9518:	add	x11, x10, #0x1
    951c:	str	x11, [x9]
    9520:	add	x8, x8, x10
    9524:	mov	w12, #0x0                   	// #0
    9528:	strb	w12, [x8]
    952c:	b	95fc <lzma_filter_flags_encode@@XZ_5.0+0x54c>
    9530:	ldur	x8, [x29, #-56]
    9534:	ldr	x9, [sp, #48]
    9538:	add	x0, x8, x9
    953c:	ldur	x8, [x29, #-64]
    9540:	ldr	x8, [x8]
    9544:	ldr	x9, [sp, #48]
    9548:	subs	x1, x8, x9
    954c:	ldr	x8, [sp, #56]
    9550:	ldr	w2, [x8, #328]
    9554:	bl	31c0 <lzma_crc32@plt>
    9558:	ldr	x8, [sp, #56]
    955c:	str	w0, [x8, #328]
    9560:	ldr	x8, [sp, #56]
    9564:	mov	w10, #0x6                   	// #6
    9568:	str	w10, [x8]
    956c:	ldur	x8, [x29, #-64]
    9570:	ldr	x8, [x8]
    9574:	ldr	x9, [sp, #72]
    9578:	cmp	x8, x9
    957c:	b.ne	9588 <lzma_filter_flags_encode@@XZ_5.0+0x4d8>  // b.any
    9580:	stur	wzr, [x29, #-4]
    9584:	b	9638 <lzma_filter_flags_encode@@XZ_5.0+0x588>
    9588:	ldr	x8, [sp, #56]
    958c:	ldr	w9, [x8, #328]
    9590:	ldr	x8, [sp, #56]
    9594:	ldr	x8, [x8, #320]
    9598:	mov	x10, #0x8                   	// #8
    959c:	mul	x8, x8, x10
    95a0:	lsr	w8, w9, w8
    95a4:	and	w8, w8, #0xff
    95a8:	ldur	x10, [x29, #-56]
    95ac:	ldur	x11, [x29, #-64]
    95b0:	ldr	x11, [x11]
    95b4:	add	x10, x10, x11
    95b8:	strb	w8, [x10]
    95bc:	ldur	x10, [x29, #-64]
    95c0:	ldr	x11, [x10]
    95c4:	add	x11, x11, #0x1
    95c8:	str	x11, [x10]
    95cc:	ldr	x8, [sp, #56]
    95d0:	ldr	x9, [x8, #320]
    95d4:	add	x9, x9, #0x1
    95d8:	str	x9, [x8, #320]
    95dc:	cmp	x9, #0x4
    95e0:	b.cc	956c <lzma_filter_flags_encode@@XZ_5.0+0x4bc>  // b.lo, b.ul, b.last
    95e4:	mov	w8, #0x1                   	// #1
    95e8:	stur	w8, [x29, #-4]
    95ec:	b	9638 <lzma_filter_flags_encode@@XZ_5.0+0x588>
    95f0:	mov	w8, #0xb                   	// #11
    95f4:	stur	w8, [x29, #-4]
    95f8:	b	9638 <lzma_filter_flags_encode@@XZ_5.0+0x588>
    95fc:	b	9334 <lzma_filter_flags_encode@@XZ_5.0+0x284>
    9600:	ldur	x8, [x29, #-56]
    9604:	ldr	x9, [sp, #48]
    9608:	add	x0, x8, x9
    960c:	ldur	x8, [x29, #-64]
    9610:	ldr	x8, [x8]
    9614:	ldr	x9, [sp, #48]
    9618:	subs	x1, x8, x9
    961c:	ldr	x8, [sp, #56]
    9620:	ldr	w2, [x8, #328]
    9624:	bl	31c0 <lzma_crc32@plt>
    9628:	ldr	x8, [sp, #56]
    962c:	str	w0, [x8, #328]
    9630:	ldr	w10, [sp, #44]
    9634:	stur	w10, [x29, #-4]
    9638:	ldur	w0, [x29, #-4]
    963c:	ldp	x29, x30, [sp, #144]
    9640:	add	sp, sp, #0xa0
    9644:	ret
    9648:	sub	sp, sp, #0x20
    964c:	stp	x29, x30, [sp, #16]
    9650:	add	x29, sp, #0x10
    9654:	str	x0, [sp, #8]
    9658:	str	x1, [sp]
    965c:	ldr	x0, [sp, #8]
    9660:	ldr	x1, [sp]
    9664:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    9668:	ldp	x29, x30, [sp, #16]
    966c:	add	sp, sp, #0x20
    9670:	ret
    9674:	sub	sp, sp, #0x20
    9678:	stp	x29, x30, [sp, #16]
    967c:	add	x29, sp, #0x10
    9680:	str	x0, [sp, #8]
    9684:	str	x1, [sp]
    9688:	ldr	x8, [sp, #8]
    968c:	add	x0, x8, #0x10
    9690:	ldr	x1, [sp]
    9694:	bl	34b0 <lzma_index_iter_init@plt>
    9698:	ldr	x8, [sp, #8]
    969c:	str	wzr, [x8]
    96a0:	ldr	x8, [sp]
    96a4:	ldr	x9, [sp, #8]
    96a8:	str	x8, [x9, #8]
    96ac:	ldr	x8, [sp, #8]
    96b0:	str	xzr, [x8, #320]
    96b4:	ldr	x8, [sp, #8]
    96b8:	str	wzr, [x8, #328]
    96bc:	ldp	x29, x30, [sp, #16]
    96c0:	add	sp, sp, #0x20
    96c4:	ret

00000000000096c8 <lzma_index_encoder@@XZ_5.0>:
    96c8:	sub	sp, sp, #0x30
    96cc:	stp	x29, x30, [sp, #32]
    96d0:	add	x29, sp, #0x20
    96d4:	str	x0, [sp, #16]
    96d8:	str	x1, [sp, #8]
    96dc:	ldr	x0, [sp, #16]
    96e0:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    96e4:	str	w0, [sp, #4]
    96e8:	ldr	w8, [sp, #4]
    96ec:	cbz	w8, 96fc <lzma_index_encoder@@XZ_5.0+0x34>
    96f0:	ldr	w8, [sp, #4]
    96f4:	stur	w8, [x29, #-4]
    96f8:	b	9754 <lzma_index_encoder@@XZ_5.0+0x8c>
    96fc:	ldr	x8, [sp, #16]
    9700:	ldr	x0, [x8, #56]
    9704:	ldr	x8, [sp, #16]
    9708:	ldr	x1, [x8, #48]
    970c:	ldr	x2, [sp, #8]
    9710:	bl	9208 <lzma_filter_flags_encode@@XZ_5.0+0x158>
    9714:	str	w0, [sp]
    9718:	ldr	w9, [sp]
    971c:	cbz	w9, 9734 <lzma_index_encoder@@XZ_5.0+0x6c>
    9720:	ldr	x0, [sp, #16]
    9724:	bl	3320 <lzma_end@plt>
    9728:	ldr	w8, [sp]
    972c:	stur	w8, [x29, #-4]
    9730:	b	9754 <lzma_index_encoder@@XZ_5.0+0x8c>
    9734:	ldr	x8, [sp, #16]
    9738:	ldr	x8, [x8, #56]
    973c:	mov	w9, #0x1                   	// #1
    9740:	strb	w9, [x8, #88]
    9744:	ldr	x8, [sp, #16]
    9748:	ldr	x8, [x8, #56]
    974c:	strb	w9, [x8, #91]
    9750:	stur	wzr, [x29, #-4]
    9754:	ldur	w0, [x29, #-4]
    9758:	ldp	x29, x30, [sp, #32]
    975c:	add	sp, sp, #0x30
    9760:	ret

0000000000009764 <lzma_index_buffer_encode@@XZ_5.0>:
    9764:	sub	sp, sp, #0x1d0
    9768:	stp	x29, x30, [sp, #432]
    976c:	str	x28, [sp, #448]
    9770:	add	x29, sp, #0x1b0
    9774:	sub	x8, x29, #0x28
    9778:	str	x0, [x8, #24]
    977c:	str	x1, [x8, #16]
    9780:	str	x2, [x8, #8]
    9784:	str	x3, [x8]
    9788:	ldr	x9, [x8, #24]
    978c:	str	x8, [sp, #32]
    9790:	cbz	x9, 97c4 <lzma_index_buffer_encode@@XZ_5.0+0x60>
    9794:	ldr	x8, [sp, #32]
    9798:	ldr	x9, [x8, #16]
    979c:	cbz	x9, 97c4 <lzma_index_buffer_encode@@XZ_5.0+0x60>
    97a0:	ldr	x8, [sp, #32]
    97a4:	ldr	x9, [x8, #8]
    97a8:	cbz	x9, 97c4 <lzma_index_buffer_encode@@XZ_5.0+0x60>
    97ac:	ldr	x8, [sp, #32]
    97b0:	ldr	x9, [x8, #8]
    97b4:	ldr	x9, [x9]
    97b8:	ldr	x10, [x8]
    97bc:	cmp	x9, x10
    97c0:	b.ls	97d0 <lzma_index_buffer_encode@@XZ_5.0+0x6c>  // b.plast
    97c4:	mov	w8, #0xb                   	// #11
    97c8:	stur	w8, [x29, #-4]
    97cc:	b	9898 <lzma_index_buffer_encode@@XZ_5.0+0x134>
    97d0:	ldr	x8, [sp, #32]
    97d4:	ldr	x9, [x8]
    97d8:	ldr	x10, [x8, #8]
    97dc:	ldr	x10, [x10]
    97e0:	subs	x9, x9, x10
    97e4:	ldr	x0, [x8, #24]
    97e8:	str	x9, [sp, #24]
    97ec:	bl	3510 <lzma_index_size@plt>
    97f0:	ldr	x8, [sp, #24]
    97f4:	cmp	x8, x0
    97f8:	b.cs	9808 <lzma_index_buffer_encode@@XZ_5.0+0xa4>  // b.hs, b.nlast
    97fc:	mov	w8, #0xa                   	// #10
    9800:	stur	w8, [x29, #-4]
    9804:	b	9898 <lzma_index_buffer_encode@@XZ_5.0+0x134>
    9808:	ldr	x8, [sp, #32]
    980c:	ldr	x1, [x8, #24]
    9810:	add	x9, sp, #0x38
    9814:	mov	x0, x9
    9818:	str	x9, [sp, #16]
    981c:	bl	9674 <lzma_filter_flags_encode@@XZ_5.0+0x5c4>
    9820:	ldr	x8, [sp, #32]
    9824:	ldr	x9, [x8, #8]
    9828:	ldr	x9, [x9]
    982c:	str	x9, [sp, #48]
    9830:	ldr	x5, [x8, #16]
    9834:	ldr	x6, [x8, #8]
    9838:	ldr	x7, [x8]
    983c:	ldr	x0, [sp, #16]
    9840:	mov	x9, xzr
    9844:	mov	x1, x9
    9848:	mov	x2, x9
    984c:	mov	x3, x9
    9850:	mov	x4, x9
    9854:	mov	x9, sp
    9858:	str	wzr, [x9]
    985c:	bl	92e8 <lzma_filter_flags_encode@@XZ_5.0+0x238>
    9860:	str	w0, [sp, #44]
    9864:	ldr	w10, [sp, #44]
    9868:	cmp	w10, #0x1
    986c:	b.ne	9878 <lzma_index_buffer_encode@@XZ_5.0+0x114>  // b.any
    9870:	str	wzr, [sp, #44]
    9874:	b	9890 <lzma_index_buffer_encode@@XZ_5.0+0x12c>
    9878:	ldr	x8, [sp, #48]
    987c:	ldr	x9, [sp, #32]
    9880:	ldr	x10, [x9, #8]
    9884:	str	x8, [x10]
    9888:	mov	w11, #0xb                   	// #11
    988c:	str	w11, [sp, #44]
    9890:	ldr	w8, [sp, #44]
    9894:	stur	w8, [x29, #-4]
    9898:	ldur	w0, [x29, #-4]
    989c:	ldr	x28, [sp, #448]
    98a0:	ldp	x29, x30, [sp, #432]
    98a4:	add	sp, sp, #0x1d0
    98a8:	ret

00000000000098ac <lzma_stream_buffer_bound@@XZ_5.0>:
    98ac:	sub	sp, sp, #0x30
    98b0:	stp	x29, x30, [sp, #32]
    98b4:	add	x29, sp, #0x20
    98b8:	str	x0, [sp, #16]
    98bc:	ldr	x0, [sp, #16]
    98c0:	bl	3120 <lzma_block_buffer_bound@plt>
    98c4:	str	x0, [sp, #8]
    98c8:	ldr	x8, [sp, #8]
    98cc:	cbnz	x8, 98d8 <lzma_stream_buffer_bound@@XZ_5.0+0x2c>
    98d0:	stur	xzr, [x29, #-8]
    98d4:	b	9900 <lzma_stream_buffer_bound@@XZ_5.0+0x54>
    98d8:	ldr	x8, [sp, #8]
    98dc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    98e0:	subs	x8, x9, x8
    98e4:	cmp	x8, #0x30
    98e8:	b.cs	98f4 <lzma_stream_buffer_bound@@XZ_5.0+0x48>  // b.hs, b.nlast
    98ec:	stur	xzr, [x29, #-8]
    98f0:	b	9900 <lzma_stream_buffer_bound@@XZ_5.0+0x54>
    98f4:	ldr	x8, [sp, #8]
    98f8:	add	x8, x8, #0x30
    98fc:	stur	x8, [x29, #-8]
    9900:	ldur	x0, [x29, #-8]
    9904:	ldp	x29, x30, [sp, #32]
    9908:	add	sp, sp, #0x30
    990c:	ret

0000000000009910 <lzma_stream_buffer_encode@@XZ_5.0>:
    9910:	sub	sp, sp, #0x1c0
    9914:	stp	x29, x30, [sp, #416]
    9918:	str	x28, [sp, #432]
    991c:	add	x29, sp, #0x1a0
    9920:	sub	x8, x29, #0x88
    9924:	str	x0, [x8, #120]
    9928:	stur	w1, [x29, #-20]
    992c:	str	x2, [x8, #104]
    9930:	str	x3, [x8, #96]
    9934:	str	x4, [x8, #88]
    9938:	str	x5, [x8, #80]
    993c:	str	x6, [x8, #72]
    9940:	str	x7, [x8, #64]
    9944:	ldr	x9, [x8, #120]
    9948:	str	x8, [sp, #40]
    994c:	cbz	x9, 99a4 <lzma_stream_buffer_encode@@XZ_5.0+0x94>
    9950:	ldur	w8, [x29, #-20]
    9954:	cmp	w8, #0xf
    9958:	b.hi	99a4 <lzma_stream_buffer_encode@@XZ_5.0+0x94>  // b.pmore
    995c:	ldr	x8, [sp, #40]
    9960:	ldr	x9, [x8, #96]
    9964:	cbnz	x9, 9974 <lzma_stream_buffer_encode@@XZ_5.0+0x64>
    9968:	ldr	x8, [sp, #40]
    996c:	ldr	x9, [x8, #88]
    9970:	cbnz	x9, 99a4 <lzma_stream_buffer_encode@@XZ_5.0+0x94>
    9974:	ldr	x8, [sp, #40]
    9978:	ldr	x9, [x8, #80]
    997c:	cbz	x9, 99a4 <lzma_stream_buffer_encode@@XZ_5.0+0x94>
    9980:	ldr	x8, [sp, #40]
    9984:	ldr	x9, [x8, #72]
    9988:	cbz	x9, 99a4 <lzma_stream_buffer_encode@@XZ_5.0+0x94>
    998c:	ldr	x8, [sp, #40]
    9990:	ldr	x9, [x8, #72]
    9994:	ldr	x9, [x9]
    9998:	ldr	x10, [x8, #64]
    999c:	cmp	x9, x10
    99a0:	b.ls	99b0 <lzma_stream_buffer_encode@@XZ_5.0+0xa0>  // b.plast
    99a4:	mov	w8, #0xb                   	// #11
    99a8:	stur	w8, [x29, #-4]
    99ac:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    99b0:	ldur	w0, [x29, #-20]
    99b4:	bl	30e0 <lzma_check_is_supported@plt>
    99b8:	and	w8, w0, #0xff
    99bc:	cbnz	w8, 99cc <lzma_stream_buffer_encode@@XZ_5.0+0xbc>
    99c0:	mov	w8, #0x3                   	// #3
    99c4:	stur	w8, [x29, #-4]
    99c8:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    99cc:	ldr	x8, [sp, #40]
    99d0:	ldr	x9, [x8, #72]
    99d4:	ldr	x9, [x9]
    99d8:	str	x9, [x8, #56]
    99dc:	ldr	x9, [x8, #64]
    99e0:	ldr	x10, [x8, #56]
    99e4:	subs	x9, x9, x10
    99e8:	cmp	x9, #0x18
    99ec:	b.hi	99fc <lzma_stream_buffer_encode@@XZ_5.0+0xec>  // b.pmore
    99f0:	mov	w8, #0xa                   	// #10
    99f4:	stur	w8, [x29, #-4]
    99f8:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    99fc:	ldr	x8, [sp, #40]
    9a00:	ldr	x9, [x8, #64]
    9a04:	subs	x9, x9, #0xc
    9a08:	str	x9, [x8, #64]
    9a0c:	sub	x9, x29, #0x88
    9a10:	mov	x0, x9
    9a14:	mov	w10, wzr
    9a18:	mov	w1, w10
    9a1c:	mov	x2, #0x38                  	// #56
    9a20:	str	x9, [sp, #32]
    9a24:	bl	3230 <memset@plt>
    9a28:	stur	wzr, [x29, #-136]
    9a2c:	ldur	w10, [x29, #-20]
    9a30:	stur	w10, [x29, #-120]
    9a34:	ldr	x8, [sp, #40]
    9a38:	ldr	x9, [x8, #80]
    9a3c:	ldr	x11, [x8, #56]
    9a40:	add	x1, x9, x11
    9a44:	ldr	x0, [sp, #32]
    9a48:	bl	3390 <lzma_stream_header_encode@plt>
    9a4c:	cbz	w0, 9a5c <lzma_stream_buffer_encode@@XZ_5.0+0x14c>
    9a50:	mov	w8, #0xb                   	// #11
    9a54:	stur	w8, [x29, #-4]
    9a58:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    9a5c:	ldr	x8, [sp, #40]
    9a60:	ldr	x9, [x8, #56]
    9a64:	add	x9, x9, #0xc
    9a68:	str	x9, [x8, #56]
    9a6c:	add	x9, sp, #0x48
    9a70:	mov	x0, x9
    9a74:	mov	w10, wzr
    9a78:	mov	w1, w10
    9a7c:	mov	x2, #0xd0                  	// #208
    9a80:	str	x9, [sp, #24]
    9a84:	bl	3230 <memset@plt>
    9a88:	str	wzr, [sp, #72]
    9a8c:	ldur	w10, [x29, #-20]
    9a90:	str	w10, [sp, #80]
    9a94:	ldr	x8, [sp, #40]
    9a98:	ldr	x9, [x8, #120]
    9a9c:	ldr	x11, [sp, #24]
    9aa0:	str	x9, [x11, #32]
    9aa4:	ldr	x9, [x8, #88]
    9aa8:	cmp	x9, #0x0
    9aac:	cset	w10, ls  // ls = plast
    9ab0:	tbnz	w10, #0, 9af0 <lzma_stream_buffer_encode@@XZ_5.0+0x1e0>
    9ab4:	ldr	x8, [sp, #40]
    9ab8:	ldr	x1, [x8, #104]
    9abc:	ldr	x2, [x8, #96]
    9ac0:	ldr	x3, [x8, #88]
    9ac4:	ldr	x4, [x8, #80]
    9ac8:	ldr	x6, [x8, #64]
    9acc:	add	x0, sp, #0x48
    9ad0:	sub	x5, x29, #0x50
    9ad4:	bl	30d0 <lzma_block_buffer_encode@plt>
    9ad8:	str	w0, [sp, #68]
    9adc:	ldr	w9, [sp, #68]
    9ae0:	cbz	w9, 9af0 <lzma_stream_buffer_encode@@XZ_5.0+0x1e0>
    9ae4:	ldr	w8, [sp, #68]
    9ae8:	stur	w8, [x29, #-4]
    9aec:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    9af0:	ldr	x8, [sp, #40]
    9af4:	ldr	x0, [x8, #104]
    9af8:	bl	33b0 <lzma_index_init@plt>
    9afc:	str	x0, [sp, #56]
    9b00:	ldr	x8, [sp, #56]
    9b04:	cbnz	x8, 9b14 <lzma_stream_buffer_encode@@XZ_5.0+0x204>
    9b08:	mov	w8, #0x5                   	// #5
    9b0c:	stur	w8, [x29, #-4]
    9b10:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    9b14:	str	wzr, [sp, #52]
    9b18:	ldr	x8, [sp, #40]
    9b1c:	ldr	x9, [x8, #88]
    9b20:	cmp	x9, #0x0
    9b24:	cset	w10, ls  // ls = plast
    9b28:	tbnz	w10, #0, 9b6c <lzma_stream_buffer_encode@@XZ_5.0+0x25c>
    9b2c:	ldr	x0, [sp, #56]
    9b30:	ldr	x8, [sp, #40]
    9b34:	ldr	x1, [x8, #104]
    9b38:	add	x9, sp, #0x48
    9b3c:	str	x0, [sp, #16]
    9b40:	mov	x0, x9
    9b44:	str	x1, [sp, #8]
    9b48:	bl	3190 <lzma_block_unpadded_size@plt>
    9b4c:	ldr	x3, [sp, #96]
    9b50:	ldr	x8, [sp, #16]
    9b54:	str	x0, [sp]
    9b58:	mov	x0, x8
    9b5c:	ldr	x1, [sp, #8]
    9b60:	ldr	x2, [sp]
    9b64:	bl	3300 <lzma_index_append@plt>
    9b68:	str	w0, [sp, #52]
    9b6c:	ldr	w8, [sp, #52]
    9b70:	cbnz	w8, 9ba0 <lzma_stream_buffer_encode@@XZ_5.0+0x290>
    9b74:	ldr	x0, [sp, #56]
    9b78:	ldr	x8, [sp, #40]
    9b7c:	ldr	x1, [x8, #80]
    9b80:	ldr	x3, [x8, #64]
    9b84:	sub	x2, x29, #0x50
    9b88:	bl	3100 <lzma_index_buffer_encode@plt>
    9b8c:	str	w0, [sp, #52]
    9b90:	ldr	x0, [sp, #56]
    9b94:	bl	3510 <lzma_index_size@plt>
    9b98:	ldr	x8, [sp, #40]
    9b9c:	str	x0, [x8, #8]
    9ba0:	ldr	x0, [sp, #56]
    9ba4:	ldr	x8, [sp, #40]
    9ba8:	ldr	x1, [x8, #104]
    9bac:	bl	33e0 <lzma_index_end@plt>
    9bb0:	ldr	w9, [sp, #52]
    9bb4:	cbz	w9, 9bc4 <lzma_stream_buffer_encode@@XZ_5.0+0x2b4>
    9bb8:	ldr	w8, [sp, #52]
    9bbc:	stur	w8, [x29, #-4]
    9bc0:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    9bc4:	ldr	x8, [sp, #40]
    9bc8:	ldr	x9, [x8, #80]
    9bcc:	ldr	x10, [x8, #56]
    9bd0:	add	x1, x9, x10
    9bd4:	sub	x0, x29, #0x88
    9bd8:	bl	3210 <lzma_stream_footer_encode@plt>
    9bdc:	cbz	w0, 9bec <lzma_stream_buffer_encode@@XZ_5.0+0x2dc>
    9be0:	mov	w8, #0xb                   	// #11
    9be4:	stur	w8, [x29, #-4]
    9be8:	b	9c0c <lzma_stream_buffer_encode@@XZ_5.0+0x2fc>
    9bec:	ldr	x8, [sp, #40]
    9bf0:	ldr	x9, [x8, #56]
    9bf4:	add	x9, x9, #0xc
    9bf8:	str	x9, [x8, #56]
    9bfc:	ldr	x9, [x8, #56]
    9c00:	ldr	x10, [x8, #72]
    9c04:	str	x9, [x10]
    9c08:	stur	wzr, [x29, #-4]
    9c0c:	ldur	w0, [x29, #-4]
    9c10:	ldr	x28, [sp, #432]
    9c14:	ldp	x29, x30, [sp, #416]
    9c18:	add	sp, sp, #0x1c0
    9c1c:	ret

0000000000009c20 <lzma_stream_encoder@@XZ_5.0>:
    9c20:	sub	sp, sp, #0x40
    9c24:	stp	x29, x30, [sp, #48]
    9c28:	add	x29, sp, #0x30
    9c2c:	stur	x0, [x29, #-16]
    9c30:	str	x1, [sp, #24]
    9c34:	str	w2, [sp, #20]
    9c38:	ldur	x0, [x29, #-16]
    9c3c:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    9c40:	str	w0, [sp, #16]
    9c44:	ldr	w8, [sp, #16]
    9c48:	cbz	w8, 9c58 <lzma_stream_encoder@@XZ_5.0+0x38>
    9c4c:	ldr	w8, [sp, #16]
    9c50:	stur	w8, [x29, #-4]
    9c54:	b	9cd8 <lzma_stream_encoder@@XZ_5.0+0xb8>
    9c58:	ldur	x8, [x29, #-16]
    9c5c:	ldr	x0, [x8, #56]
    9c60:	ldur	x8, [x29, #-16]
    9c64:	ldr	x1, [x8, #48]
    9c68:	ldr	x2, [sp, #24]
    9c6c:	ldr	w3, [sp, #20]
    9c70:	bl	9ce8 <lzma_stream_encoder@@XZ_5.0+0xc8>
    9c74:	str	w0, [sp, #12]
    9c78:	ldr	w9, [sp, #12]
    9c7c:	cbz	w9, 9c94 <lzma_stream_encoder@@XZ_5.0+0x74>
    9c80:	ldur	x0, [x29, #-16]
    9c84:	bl	3320 <lzma_end@plt>
    9c88:	ldr	w8, [sp, #12]
    9c8c:	stur	w8, [x29, #-4]
    9c90:	b	9cd8 <lzma_stream_encoder@@XZ_5.0+0xb8>
    9c94:	ldur	x8, [x29, #-16]
    9c98:	ldr	x8, [x8, #56]
    9c9c:	mov	w9, #0x1                   	// #1
    9ca0:	strb	w9, [x8, #88]
    9ca4:	ldur	x8, [x29, #-16]
    9ca8:	ldr	x8, [x8, #56]
    9cac:	strb	w9, [x8, #89]
    9cb0:	ldur	x8, [x29, #-16]
    9cb4:	ldr	x8, [x8, #56]
    9cb8:	strb	w9, [x8, #90]
    9cbc:	ldur	x8, [x29, #-16]
    9cc0:	ldr	x8, [x8, #56]
    9cc4:	strb	w9, [x8, #92]
    9cc8:	ldur	x8, [x29, #-16]
    9ccc:	ldr	x8, [x8, #56]
    9cd0:	strb	w9, [x8, #91]
    9cd4:	stur	wzr, [x29, #-4]
    9cd8:	ldur	w0, [x29, #-4]
    9cdc:	ldp	x29, x30, [sp, #48]
    9ce0:	add	sp, sp, #0x40
    9ce4:	ret
    9ce8:	sub	sp, sp, #0x170
    9cec:	stp	x29, x30, [sp, #336]
    9cf0:	str	x28, [sp, #352]
    9cf4:	add	x29, sp, #0x150
    9cf8:	sub	x8, x29, #0x78
    9cfc:	adrp	x9, 9000 <lzma_properties_encode@@XZ_5.0+0x70>
    9d00:	add	x9, x9, #0xce8
    9d04:	str	x0, [x8, #104]
    9d08:	str	x1, [x8, #96]
    9d0c:	str	x2, [x8, #88]
    9d10:	stur	w3, [x29, #-36]
    9d14:	str	x8, [sp, #72]
    9d18:	str	x9, [sp, #64]
    9d1c:	ldr	x8, [sp, #72]
    9d20:	ldr	x9, [x8, #104]
    9d24:	ldr	x9, [x9, #16]
    9d28:	ldr	x10, [sp, #64]
    9d2c:	cmp	x10, x9
    9d30:	b.eq	9d44 <lzma_stream_encoder@@XZ_5.0+0x124>  // b.none
    9d34:	ldr	x8, [sp, #72]
    9d38:	ldr	x0, [x8, #104]
    9d3c:	ldr	x1, [x8, #96]
    9d40:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    9d44:	ldr	x8, [sp, #72]
    9d48:	ldr	x9, [x8, #104]
    9d4c:	ldr	x10, [sp, #64]
    9d50:	str	x10, [x9, #16]
    9d54:	ldr	x8, [sp, #72]
    9d58:	ldr	x9, [x8, #88]
    9d5c:	cbnz	x9, 9d6c <lzma_stream_encoder@@XZ_5.0+0x14c>
    9d60:	mov	w8, #0xb                   	// #11
    9d64:	stur	w8, [x29, #-4]
    9d68:	b	9f94 <lzma_stream_encoder@@XZ_5.0+0x374>
    9d6c:	ldr	x8, [sp, #72]
    9d70:	ldr	x9, [x8, #104]
    9d74:	ldr	x9, [x9]
    9d78:	str	x9, [x8, #72]
    9d7c:	ldr	x9, [x8, #72]
    9d80:	cbnz	x9, 9eb4 <lzma_stream_encoder@@XZ_5.0+0x294>
    9d84:	ldr	x8, [sp, #72]
    9d88:	ldr	x1, [x8, #96]
    9d8c:	mov	x0, #0x5d0                 	// #1488
    9d90:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    9d94:	ldr	x8, [sp, #72]
    9d98:	str	x0, [x8, #72]
    9d9c:	ldr	x9, [x8, #72]
    9da0:	cbnz	x9, 9db0 <lzma_stream_encoder@@XZ_5.0+0x190>
    9da4:	mov	w8, #0x5                   	// #5
    9da8:	stur	w8, [x29, #-4]
    9dac:	b	9f94 <lzma_stream_encoder@@XZ_5.0+0x374>
    9db0:	ldr	x8, [sp, #72]
    9db4:	ldr	x9, [x8, #72]
    9db8:	ldr	x10, [x8, #104]
    9dbc:	str	x9, [x10]
    9dc0:	ldr	x9, [x8, #104]
    9dc4:	adrp	x10, 9000 <lzma_properties_encode@@XZ_5.0+0x70>
    9dc8:	add	x10, x10, #0xfa8
    9dcc:	str	x10, [x9, #24]
    9dd0:	ldr	x9, [x8, #104]
    9dd4:	adrp	x10, a000 <lzma_stream_encoder@@XZ_5.0+0x3e0>
    9dd8:	add	x10, x10, #0x398
    9ddc:	str	x10, [x9, #32]
    9de0:	ldr	x9, [x8, #104]
    9de4:	adrp	x10, a000 <lzma_stream_encoder@@XZ_5.0+0x3e0>
    9de8:	add	x10, x10, #0x458
    9dec:	str	x10, [x9, #64]
    9df0:	ldr	x9, [x8, #72]
    9df4:	mov	x10, #0xffffffffffffffff    	// #-1
    9df8:	str	x10, [x9, #288]
    9dfc:	ldr	x9, [x8, #72]
    9e00:	add	x0, x9, #0x8
    9e04:	sub	x9, x29, #0x78
    9e08:	str	x0, [sp, #56]
    9e0c:	mov	x0, x9
    9e10:	mov	w11, wzr
    9e14:	mov	w1, w11
    9e18:	mov	x12, #0x48                  	// #72
    9e1c:	mov	x2, x12
    9e20:	str	x10, [sp, #48]
    9e24:	str	x9, [sp, #40]
    9e28:	str	w11, [sp, #36]
    9e2c:	str	x12, [sp, #24]
    9e30:	bl	3230 <memset@plt>
    9e34:	ldr	x8, [sp, #48]
    9e38:	ldr	x9, [sp, #72]
    9e3c:	str	x8, [x9, #8]
    9e40:	mov	x10, xzr
    9e44:	str	xzr, [x9, #16]
    9e48:	ldr	x0, [sp, #56]
    9e4c:	ldr	x1, [sp, #40]
    9e50:	ldr	x2, [sp, #24]
    9e54:	str	x10, [sp, #16]
    9e58:	bl	3090 <memcpy@plt>
    9e5c:	ldr	x8, [sp, #72]
    9e60:	ldr	x9, [x8, #72]
    9e64:	add	x0, x9, #0x170
    9e68:	add	x9, sp, #0x90
    9e6c:	str	x0, [sp, #8]
    9e70:	mov	x0, x9
    9e74:	ldr	w11, [sp, #36]
    9e78:	mov	w1, w11
    9e7c:	ldr	x2, [sp, #24]
    9e80:	str	x9, [sp]
    9e84:	bl	3230 <memset@plt>
    9e88:	ldr	x8, [sp, #48]
    9e8c:	str	x8, [sp, #152]
    9e90:	str	xzr, [sp, #160]
    9e94:	ldr	x0, [sp, #8]
    9e98:	ldr	x1, [sp]
    9e9c:	ldr	x2, [sp, #24]
    9ea0:	bl	3090 <memcpy@plt>
    9ea4:	ldr	x8, [sp, #72]
    9ea8:	ldr	x9, [x8, #72]
    9eac:	ldr	x10, [sp, #16]
    9eb0:	str	x10, [x9, #440]
    9eb4:	ldr	x8, [sp, #72]
    9eb8:	ldr	x9, [x8, #72]
    9ebc:	str	wzr, [x9]
    9ec0:	ldr	x9, [x8, #72]
    9ec4:	str	wzr, [x9, #80]
    9ec8:	ldur	w10, [x29, #-36]
    9ecc:	ldr	x9, [x8, #72]
    9ed0:	str	w10, [x9, #88]
    9ed4:	ldr	x9, [x8, #72]
    9ed8:	ldr	x0, [x9, #440]
    9edc:	ldr	x1, [x8, #96]
    9ee0:	bl	33e0 <lzma_index_end@plt>
    9ee4:	ldr	x8, [sp, #72]
    9ee8:	ldr	x0, [x8, #96]
    9eec:	bl	33b0 <lzma_index_init@plt>
    9ef0:	ldr	x8, [sp, #72]
    9ef4:	ldr	x9, [x8, #72]
    9ef8:	str	x0, [x9, #440]
    9efc:	ldr	x9, [x8, #72]
    9f00:	ldr	x9, [x9, #440]
    9f04:	cbnz	x9, 9f14 <lzma_stream_encoder@@XZ_5.0+0x2f4>
    9f08:	mov	w8, #0x5                   	// #5
    9f0c:	stur	w8, [x29, #-4]
    9f10:	b	9f94 <lzma_stream_encoder@@XZ_5.0+0x374>
    9f14:	add	x0, sp, #0x58
    9f18:	mov	w8, wzr
    9f1c:	mov	w1, w8
    9f20:	mov	x2, #0x38                  	// #56
    9f24:	bl	3230 <memset@plt>
    9f28:	str	wzr, [sp, #88]
    9f2c:	ldur	w8, [x29, #-36]
    9f30:	str	w8, [sp, #104]
    9f34:	ldr	x8, [sp, #72]
    9f38:	ldr	x9, [x8, #72]
    9f3c:	add	x1, x9, #0x1d0
    9f40:	add	x0, sp, #0x58
    9f44:	bl	3390 <lzma_stream_header_encode@plt>
    9f48:	str	w0, [sp, #84]
    9f4c:	ldr	w10, [sp, #84]
    9f50:	cbz	w10, 9f60 <lzma_stream_encoder@@XZ_5.0+0x340>
    9f54:	ldr	w8, [sp, #84]
    9f58:	stur	w8, [x29, #-4]
    9f5c:	b	9f94 <lzma_stream_encoder@@XZ_5.0+0x374>
    9f60:	ldr	x8, [sp, #72]
    9f64:	ldr	x9, [x8, #72]
    9f68:	mov	x10, xzr
    9f6c:	str	xzr, [x9, #448]
    9f70:	ldr	x9, [x8, #72]
    9f74:	mov	x11, #0xc                   	// #12
    9f78:	str	x11, [x9, #456]
    9f7c:	ldr	x0, [x8, #72]
    9f80:	ldr	x1, [x8, #96]
    9f84:	ldr	x2, [x8, #88]
    9f88:	mov	x3, x10
    9f8c:	bl	a458 <lzma_stream_encoder@@XZ_5.0+0x838>
    9f90:	stur	w0, [x29, #-4]
    9f94:	ldur	w0, [x29, #-4]
    9f98:	ldr	x28, [sp, #352]
    9f9c:	ldp	x29, x30, [sp, #336]
    9fa0:	add	sp, sp, #0x170
    9fa4:	ret
    9fa8:	sub	sp, sp, #0xe0
    9fac:	stp	x29, x30, [sp, #208]
    9fb0:	add	x29, sp, #0xd0
    9fb4:	ldr	w8, [x29, #16]
    9fb8:	stur	x0, [x29, #-16]
    9fbc:	stur	x1, [x29, #-24]
    9fc0:	stur	x2, [x29, #-32]
    9fc4:	stur	x3, [x29, #-40]
    9fc8:	stur	x4, [x29, #-48]
    9fcc:	stur	x5, [x29, #-56]
    9fd0:	stur	x6, [x29, #-64]
    9fd4:	stur	x7, [x29, #-72]
    9fd8:	stur	w8, [x29, #-76]
    9fdc:	ldur	x9, [x29, #-16]
    9fe0:	stur	x9, [x29, #-88]
    9fe4:	ldur	x8, [x29, #-64]
    9fe8:	ldr	x8, [x8]
    9fec:	ldur	x9, [x29, #-72]
    9ff0:	cmp	x8, x9
    9ff4:	b.cs	a384 <lzma_stream_encoder@@XZ_5.0+0x764>  // b.hs, b.nlast
    9ff8:	ldur	x8, [x29, #-88]
    9ffc:	ldr	w9, [x8]
    a000:	subs	w9, w9, #0x0
    a004:	mov	w8, w9
    a008:	ubfx	x8, x8, #0, #32
    a00c:	cmp	x8, #0x5
    a010:	str	x8, [sp, #24]
    a014:	b.hi	a374 <lzma_stream_encoder@@XZ_5.0+0x754>  // b.pmore
    a018:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    a01c:	add	x8, x8, #0xa14
    a020:	ldr	x11, [sp, #24]
    a024:	ldrsw	x10, [x8, x11, lsl #2]
    a028:	add	x9, x8, x10
    a02c:	br	x9
    a030:	ldur	x8, [x29, #-88]
    a034:	add	x0, x8, #0x1d0
    a038:	ldur	x8, [x29, #-88]
    a03c:	add	x1, x8, #0x1c0
    a040:	ldur	x8, [x29, #-88]
    a044:	ldr	x2, [x8, #456]
    a048:	ldur	x3, [x29, #-56]
    a04c:	ldur	x4, [x29, #-64]
    a050:	ldur	x5, [x29, #-72]
    a054:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    a058:	ldur	x8, [x29, #-88]
    a05c:	ldr	x8, [x8, #448]
    a060:	ldur	x9, [x29, #-88]
    a064:	ldr	x9, [x9, #456]
    a068:	cmp	x8, x9
    a06c:	b.cs	a078 <lzma_stream_encoder@@XZ_5.0+0x458>  // b.hs, b.nlast
    a070:	stur	wzr, [x29, #-4]
    a074:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a078:	ldur	x8, [x29, #-88]
    a07c:	ldr	w9, [x8]
    a080:	cmp	w9, #0x5
    a084:	b.ne	a094 <lzma_stream_encoder@@XZ_5.0+0x474>  // b.any
    a088:	mov	w8, #0x1                   	// #1
    a08c:	stur	w8, [x29, #-4]
    a090:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a094:	ldur	x8, [x29, #-88]
    a098:	str	xzr, [x8, #448]
    a09c:	ldur	x8, [x29, #-88]
    a0a0:	ldr	w9, [x8]
    a0a4:	add	w9, w9, #0x1
    a0a8:	str	w9, [x8]
    a0ac:	b	a380 <lzma_stream_encoder@@XZ_5.0+0x760>
    a0b0:	ldur	x8, [x29, #-40]
    a0b4:	ldr	x8, [x8]
    a0b8:	ldur	x9, [x29, #-48]
    a0bc:	cmp	x8, x9
    a0c0:	b.ne	a12c <lzma_stream_encoder@@XZ_5.0+0x50c>  // b.any
    a0c4:	ldur	w8, [x29, #-76]
    a0c8:	cmp	w8, #0x3
    a0cc:	b.eq	a0ec <lzma_stream_encoder@@XZ_5.0+0x4cc>  // b.none
    a0d0:	ldur	w8, [x29, #-76]
    a0d4:	mov	w9, wzr
    a0d8:	mov	w10, #0x1                   	// #1
    a0dc:	cmp	w8, #0x0
    a0e0:	csel	w8, w9, w10, eq  // eq = none
    a0e4:	stur	w8, [x29, #-4]
    a0e8:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a0ec:	ldur	x8, [x29, #-88]
    a0f0:	add	x0, x8, #0x170
    a0f4:	ldur	x1, [x29, #-24]
    a0f8:	ldur	x8, [x29, #-88]
    a0fc:	ldr	x2, [x8, #440]
    a100:	bl	9208 <lzma_filter_flags_encode@@XZ_5.0+0x158>
    a104:	stur	w0, [x29, #-92]
    a108:	ldur	w9, [x29, #-92]
    a10c:	cbz	w9, a11c <lzma_stream_encoder@@XZ_5.0+0x4fc>
    a110:	ldur	w8, [x29, #-92]
    a114:	stur	w8, [x29, #-4]
    a118:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a11c:	ldur	x8, [x29, #-88]
    a120:	mov	w9, #0x4                   	// #4
    a124:	str	w9, [x8]
    a128:	b	a380 <lzma_stream_encoder@@XZ_5.0+0x760>
    a12c:	ldur	x8, [x29, #-88]
    a130:	ldrb	w9, [x8, #4]
    a134:	tbnz	w9, #0, a15c <lzma_stream_encoder@@XZ_5.0+0x53c>
    a138:	ldur	x0, [x29, #-88]
    a13c:	ldur	x1, [x29, #-24]
    a140:	bl	a5c4 <lzma_stream_encoder@@XZ_5.0+0x9a4>
    a144:	stur	w0, [x29, #-96]
    a148:	ldur	w8, [x29, #-96]
    a14c:	cbz	w8, a15c <lzma_stream_encoder@@XZ_5.0+0x53c>
    a150:	ldur	w8, [x29, #-96]
    a154:	stur	w8, [x29, #-4]
    a158:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a15c:	ldur	x8, [x29, #-88]
    a160:	mov	w9, #0x0                   	// #0
    a164:	strb	w9, [x8, #4]
    a168:	ldur	x8, [x29, #-88]
    a16c:	add	x0, x8, #0x50
    a170:	ldur	x8, [x29, #-88]
    a174:	add	x1, x8, #0x1d0
    a178:	bl	3540 <lzma_block_header_encode@plt>
    a17c:	cbz	w0, a18c <lzma_stream_encoder@@XZ_5.0+0x56c>
    a180:	mov	w8, #0xb                   	// #11
    a184:	stur	w8, [x29, #-4]
    a188:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a18c:	ldur	x8, [x29, #-88]
    a190:	ldr	w9, [x8, #84]
    a194:	mov	w8, w9
    a198:	ldur	x10, [x29, #-88]
    a19c:	str	x8, [x10, #456]
    a1a0:	ldur	x8, [x29, #-88]
    a1a4:	mov	w9, #0x2                   	// #2
    a1a8:	str	w9, [x8]
    a1ac:	b	a380 <lzma_stream_encoder@@XZ_5.0+0x760>
    a1b0:	ldur	x8, [x29, #-88]
    a1b4:	ldr	x8, [x8, #32]
    a1b8:	ldur	x9, [x29, #-88]
    a1bc:	ldr	x0, [x9, #8]
    a1c0:	ldur	x1, [x29, #-24]
    a1c4:	ldur	x2, [x29, #-32]
    a1c8:	ldur	x3, [x29, #-40]
    a1cc:	ldur	x4, [x29, #-48]
    a1d0:	ldur	x5, [x29, #-56]
    a1d4:	ldur	x6, [x29, #-64]
    a1d8:	ldur	x7, [x29, #-72]
    a1dc:	ldur	w10, [x29, #-76]
    a1e0:	mov	w9, w10
    a1e4:	adrp	x11, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    a1e8:	add	x11, x11, #0xa2c
    a1ec:	ldr	w10, [x11, x9, lsl #2]
    a1f0:	mov	x9, sp
    a1f4:	str	w10, [x9]
    a1f8:	blr	x8
    a1fc:	stur	w0, [x29, #-100]
    a200:	ldur	w10, [x29, #-100]
    a204:	cmp	w10, #0x1
    a208:	b.ne	a218 <lzma_stream_encoder@@XZ_5.0+0x5f8>  // b.any
    a20c:	ldur	w8, [x29, #-76]
    a210:	cmp	w8, #0x1
    a214:	b.ne	a224 <lzma_stream_encoder@@XZ_5.0+0x604>  // b.any
    a218:	ldur	w8, [x29, #-100]
    a21c:	stur	w8, [x29, #-4]
    a220:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a224:	ldur	x8, [x29, #-88]
    a228:	add	x0, x8, #0x50
    a22c:	bl	3190 <lzma_block_unpadded_size@plt>
    a230:	str	x0, [sp, #96]
    a234:	ldur	x8, [x29, #-88]
    a238:	ldr	x0, [x8, #440]
    a23c:	ldur	x1, [x29, #-24]
    a240:	ldr	x2, [sp, #96]
    a244:	ldur	x8, [x29, #-88]
    a248:	ldr	x3, [x8, #104]
    a24c:	bl	3300 <lzma_index_append@plt>
    a250:	str	w0, [sp, #92]
    a254:	ldr	w9, [sp, #92]
    a258:	cbz	w9, a268 <lzma_stream_encoder@@XZ_5.0+0x648>
    a25c:	ldr	w8, [sp, #92]
    a260:	stur	w8, [x29, #-4]
    a264:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a268:	ldur	x8, [x29, #-88]
    a26c:	mov	w9, #0x1                   	// #1
    a270:	str	w9, [x8]
    a274:	b	a380 <lzma_stream_encoder@@XZ_5.0+0x760>
    a278:	ldur	x8, [x29, #-88]
    a27c:	ldr	x8, [x8, #392]
    a280:	ldur	x9, [x29, #-88]
    a284:	ldr	x0, [x9, #368]
    a288:	ldur	x1, [x29, #-24]
    a28c:	ldur	x5, [x29, #-56]
    a290:	ldur	x6, [x29, #-64]
    a294:	ldur	x7, [x29, #-72]
    a298:	mov	x9, xzr
    a29c:	mov	x2, x9
    a2a0:	mov	x3, x9
    a2a4:	mov	x4, x9
    a2a8:	mov	x9, sp
    a2ac:	str	wzr, [x9]
    a2b0:	blr	x8
    a2b4:	str	w0, [sp, #88]
    a2b8:	ldr	w10, [sp, #88]
    a2bc:	cmp	w10, #0x1
    a2c0:	b.eq	a2d0 <lzma_stream_encoder@@XZ_5.0+0x6b0>  // b.none
    a2c4:	ldr	w8, [sp, #88]
    a2c8:	stur	w8, [x29, #-4]
    a2cc:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a2d0:	add	x8, sp, #0x20
    a2d4:	str	wzr, [sp, #32]
    a2d8:	ldur	x9, [x29, #-88]
    a2dc:	ldr	x0, [x9, #440]
    a2e0:	str	x8, [sp, #16]
    a2e4:	bl	3510 <lzma_index_size@plt>
    a2e8:	str	x0, [sp, #40]
    a2ec:	ldur	x8, [x29, #-88]
    a2f0:	ldr	w10, [x8, #88]
    a2f4:	str	w10, [sp, #48]
    a2f8:	str	wzr, [sp, #52]
    a2fc:	str	wzr, [sp, #56]
    a300:	str	wzr, [sp, #60]
    a304:	str	wzr, [sp, #64]
    a308:	mov	w10, #0x0                   	// #0
    a30c:	ldr	x8, [sp, #16]
    a310:	strb	w10, [x8, #36]
    a314:	strb	w10, [x8, #37]
    a318:	strb	w10, [x8, #38]
    a31c:	strb	w10, [x8, #39]
    a320:	strb	w10, [x8, #40]
    a324:	strb	w10, [x8, #41]
    a328:	strb	w10, [x8, #42]
    a32c:	strb	w10, [x8, #43]
    a330:	str	wzr, [sp, #76]
    a334:	str	wzr, [sp, #80]
    a338:	ldur	x9, [x29, #-88]
    a33c:	add	x1, x9, #0x1d0
    a340:	mov	x0, x8
    a344:	bl	3210 <lzma_stream_footer_encode@plt>
    a348:	cbz	w0, a358 <lzma_stream_encoder@@XZ_5.0+0x738>
    a34c:	mov	w8, #0xb                   	// #11
    a350:	stur	w8, [x29, #-4]
    a354:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a358:	ldur	x8, [x29, #-88]
    a35c:	mov	x9, #0xc                   	// #12
    a360:	str	x9, [x8, #456]
    a364:	ldur	x8, [x29, #-88]
    a368:	mov	w10, #0x5                   	// #5
    a36c:	str	w10, [x8]
    a370:	b	a380 <lzma_stream_encoder@@XZ_5.0+0x760>
    a374:	mov	w8, #0xb                   	// #11
    a378:	stur	w8, [x29, #-4]
    a37c:	b	a388 <lzma_stream_encoder@@XZ_5.0+0x768>
    a380:	b	9fe4 <lzma_stream_encoder@@XZ_5.0+0x3c4>
    a384:	stur	wzr, [x29, #-4]
    a388:	ldur	w0, [x29, #-4]
    a38c:	ldp	x29, x30, [sp, #208]
    a390:	add	sp, sp, #0xe0
    a394:	ret
    a398:	sub	sp, sp, #0x30
    a39c:	stp	x29, x30, [sp, #32]
    a3a0:	add	x29, sp, #0x20
    a3a4:	stur	x0, [x29, #-8]
    a3a8:	str	x1, [sp, #16]
    a3ac:	ldur	x8, [x29, #-8]
    a3b0:	str	x8, [sp, #8]
    a3b4:	ldr	x8, [sp, #8]
    a3b8:	add	x0, x8, #0x8
    a3bc:	ldr	x1, [sp, #16]
    a3c0:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    a3c4:	ldr	x8, [sp, #8]
    a3c8:	add	x0, x8, #0x170
    a3cc:	ldr	x1, [sp, #16]
    a3d0:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    a3d4:	ldr	x8, [sp, #8]
    a3d8:	ldr	x0, [x8, #440]
    a3dc:	ldr	x1, [sp, #16]
    a3e0:	bl	33e0 <lzma_index_end@plt>
    a3e4:	str	xzr, [sp]
    a3e8:	ldr	x8, [sp, #8]
    a3ec:	add	x8, x8, #0x120
    a3f0:	ldr	x9, [sp]
    a3f4:	mov	x10, #0x10                  	// #16
    a3f8:	mul	x9, x10, x9
    a3fc:	ldr	x8, [x8, x9]
    a400:	mov	x9, #0xffffffffffffffff    	// #-1
    a404:	cmp	x8, x9
    a408:	b.eq	a440 <lzma_stream_encoder@@XZ_5.0+0x820>  // b.none
    a40c:	ldr	x8, [sp, #8]
    a410:	add	x8, x8, #0x120
    a414:	ldr	x9, [sp]
    a418:	mov	x10, #0x10                  	// #16
    a41c:	mul	x9, x10, x9
    a420:	add	x8, x8, x9
    a424:	ldr	x0, [x8, #8]
    a428:	ldr	x1, [sp, #16]
    a42c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    a430:	ldr	x8, [sp]
    a434:	add	x8, x8, #0x1
    a438:	str	x8, [sp]
    a43c:	b	a3e8 <lzma_stream_encoder@@XZ_5.0+0x7c8>
    a440:	ldr	x0, [sp, #8]
    a444:	ldr	x1, [sp, #16]
    a448:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    a44c:	ldp	x29, x30, [sp, #32]
    a450:	add	sp, sp, #0x30
    a454:	ret
    a458:	sub	sp, sp, #0x50
    a45c:	stp	x29, x30, [sp, #64]
    a460:	add	x29, sp, #0x40
    a464:	stur	x0, [x29, #-16]
    a468:	stur	x1, [x29, #-24]
    a46c:	str	x2, [sp, #32]
    a470:	str	x3, [sp, #24]
    a474:	ldur	x8, [x29, #-16]
    a478:	str	x8, [sp, #16]
    a47c:	ldr	x8, [sp, #16]
    a480:	ldr	w9, [x8]
    a484:	cmp	w9, #0x1
    a488:	b.hi	a4e8 <lzma_stream_encoder@@XZ_5.0+0x8c8>  // b.pmore
    a48c:	ldr	x8, [sp, #16]
    a490:	mov	w9, #0x0                   	// #0
    a494:	strb	w9, [x8, #4]
    a498:	ldr	x8, [sp, #32]
    a49c:	ldr	x10, [sp, #16]
    a4a0:	str	x8, [x10, #112]
    a4a4:	ldr	x0, [sp, #16]
    a4a8:	ldur	x1, [x29, #-24]
    a4ac:	bl	a5c4 <lzma_stream_encoder@@XZ_5.0+0x9a4>
    a4b0:	str	w0, [sp, #12]
    a4b4:	ldr	x8, [sp, #16]
    a4b8:	add	x8, x8, #0x120
    a4bc:	ldr	x10, [sp, #16]
    a4c0:	str	x8, [x10, #112]
    a4c4:	ldr	w9, [sp, #12]
    a4c8:	cbz	w9, a4d8 <lzma_stream_encoder@@XZ_5.0+0x8b8>
    a4cc:	ldr	w8, [sp, #12]
    a4d0:	stur	w8, [x29, #-4]
    a4d4:	b	a5b4 <lzma_stream_encoder@@XZ_5.0+0x994>
    a4d8:	ldr	x8, [sp, #16]
    a4dc:	mov	w9, #0x1                   	// #1
    a4e0:	strb	w9, [x8, #4]
    a4e4:	b	a540 <lzma_stream_encoder@@XZ_5.0+0x920>
    a4e8:	ldr	x8, [sp, #16]
    a4ec:	ldr	w9, [x8]
    a4f0:	cmp	w9, #0x3
    a4f4:	b.hi	a534 <lzma_stream_encoder@@XZ_5.0+0x914>  // b.pmore
    a4f8:	ldr	x8, [sp, #16]
    a4fc:	ldr	x8, [x8, #72]
    a500:	ldr	x9, [sp, #16]
    a504:	ldr	x0, [x9, #8]
    a508:	ldur	x1, [x29, #-24]
    a50c:	ldr	x2, [sp, #32]
    a510:	ldr	x3, [sp, #24]
    a514:	blr	x8
    a518:	str	w0, [sp, #8]
    a51c:	ldr	w10, [sp, #8]
    a520:	cbz	w10, a530 <lzma_stream_encoder@@XZ_5.0+0x910>
    a524:	ldr	w8, [sp, #8]
    a528:	stur	w8, [x29, #-4]
    a52c:	b	a5b4 <lzma_stream_encoder@@XZ_5.0+0x994>
    a530:	b	a540 <lzma_stream_encoder@@XZ_5.0+0x920>
    a534:	mov	w8, #0xb                   	// #11
    a538:	stur	w8, [x29, #-4]
    a53c:	b	a5b4 <lzma_stream_encoder@@XZ_5.0+0x994>
    a540:	str	xzr, [sp]
    a544:	ldr	x8, [sp, #16]
    a548:	add	x8, x8, #0x120
    a54c:	ldr	x9, [sp]
    a550:	mov	x10, #0x10                  	// #16
    a554:	mul	x9, x10, x9
    a558:	ldr	x8, [x8, x9]
    a55c:	mov	x9, #0xffffffffffffffff    	// #-1
    a560:	cmp	x8, x9
    a564:	b.eq	a59c <lzma_stream_encoder@@XZ_5.0+0x97c>  // b.none
    a568:	ldr	x8, [sp, #16]
    a56c:	add	x8, x8, #0x120
    a570:	ldr	x9, [sp]
    a574:	mov	x10, #0x10                  	// #16
    a578:	mul	x9, x10, x9
    a57c:	add	x8, x8, x9
    a580:	ldr	x0, [x8, #8]
    a584:	ldur	x1, [x29, #-24]
    a588:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    a58c:	ldr	x8, [sp]
    a590:	add	x8, x8, #0x1
    a594:	str	x8, [sp]
    a598:	b	a544 <lzma_stream_encoder@@XZ_5.0+0x924>
    a59c:	ldr	x0, [sp, #32]
    a5a0:	ldr	x8, [sp, #16]
    a5a4:	add	x1, x8, #0x120
    a5a8:	ldur	x2, [x29, #-24]
    a5ac:	bl	3240 <lzma_filters_copy@plt>
    a5b0:	stur	w0, [x29, #-4]
    a5b4:	ldur	w0, [x29, #-4]
    a5b8:	ldp	x29, x30, [sp, #64]
    a5bc:	add	sp, sp, #0x50
    a5c0:	ret
    a5c4:	sub	sp, sp, #0x30
    a5c8:	stp	x29, x30, [sp, #32]
    a5cc:	add	x29, sp, #0x20
    a5d0:	mov	x8, #0xffffffffffffffff    	// #-1
    a5d4:	str	x0, [sp, #16]
    a5d8:	str	x1, [sp, #8]
    a5dc:	ldr	x9, [sp, #16]
    a5e0:	str	x8, [x9, #96]
    a5e4:	ldr	x9, [sp, #16]
    a5e8:	str	x8, [x9, #104]
    a5ec:	ldr	x8, [sp, #16]
    a5f0:	add	x0, x8, #0x50
    a5f4:	bl	3160 <lzma_block_header_size@plt>
    a5f8:	str	w0, [sp, #4]
    a5fc:	ldr	w9, [sp, #4]
    a600:	cbz	w9, a610 <lzma_stream_encoder@@XZ_5.0+0x9f0>
    a604:	ldr	w8, [sp, #4]
    a608:	stur	w8, [x29, #-4]
    a60c:	b	a62c <lzma_stream_encoder@@XZ_5.0+0xa0c>
    a610:	ldr	x8, [sp, #16]
    a614:	add	x0, x8, #0x8
    a618:	ldr	x1, [sp, #8]
    a61c:	ldr	x8, [sp, #16]
    a620:	add	x2, x8, #0x50
    a624:	bl	7d70 <lzma_block_uncomp_encode@@XZ_5.2+0x518>
    a628:	stur	w0, [x29, #-4]
    a62c:	ldur	w0, [x29, #-4]
    a630:	ldp	x29, x30, [sp, #32]
    a634:	add	sp, sp, #0x30
    a638:	ret

000000000000a63c <lzma_stream_header_encode@@XZ_5.0>:
    a63c:	sub	sp, sp, #0x30
    a640:	stp	x29, x30, [sp, #32]
    a644:	add	x29, sp, #0x20
    a648:	str	x0, [sp, #16]
    a64c:	str	x1, [sp, #8]
    a650:	ldr	x8, [sp, #16]
    a654:	ldr	w9, [x8]
    a658:	cbz	w9, a668 <lzma_stream_header_encode@@XZ_5.0+0x2c>
    a65c:	mov	w8, #0x8                   	// #8
    a660:	stur	w8, [x29, #-4]
    a664:	b	a6d8 <lzma_stream_header_encode@@XZ_5.0+0x9c>
    a668:	ldr	x8, [sp, #8]
    a66c:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    a670:	ldr	x9, [x9, #3936]
    a674:	ldr	w10, [x9]
    a678:	str	w10, [x8]
    a67c:	ldrh	w10, [x9, #4]
    a680:	strh	w10, [x8, #4]
    a684:	ldr	x0, [sp, #16]
    a688:	ldr	x8, [sp, #8]
    a68c:	add	x1, x8, #0x6
    a690:	bl	a6e8 <lzma_stream_header_encode@@XZ_5.0+0xac>
    a694:	tbnz	w0, #0, a69c <lzma_stream_header_encode@@XZ_5.0+0x60>
    a698:	b	a6a8 <lzma_stream_header_encode@@XZ_5.0+0x6c>
    a69c:	mov	w8, #0xb                   	// #11
    a6a0:	stur	w8, [x29, #-4]
    a6a4:	b	a6d8 <lzma_stream_header_encode@@XZ_5.0+0x9c>
    a6a8:	ldr	x8, [sp, #8]
    a6ac:	add	x0, x8, #0x6
    a6b0:	mov	x1, #0x2                   	// #2
    a6b4:	mov	w9, wzr
    a6b8:	mov	w2, w9
    a6bc:	bl	31c0 <lzma_crc32@plt>
    a6c0:	str	w0, [sp, #4]
    a6c4:	ldr	x8, [sp, #8]
    a6c8:	add	x0, x8, #0x8
    a6cc:	ldr	w1, [sp, #4]
    a6d0:	bl	a74c <lzma_stream_header_encode@@XZ_5.0+0x110>
    a6d4:	stur	wzr, [x29, #-4]
    a6d8:	ldur	w0, [x29, #-4]
    a6dc:	ldp	x29, x30, [sp, #32]
    a6e0:	add	sp, sp, #0x30
    a6e4:	ret
    a6e8:	sub	sp, sp, #0x20
    a6ec:	str	x0, [sp, #16]
    a6f0:	str	x1, [sp, #8]
    a6f4:	ldr	x8, [sp, #16]
    a6f8:	ldr	w9, [x8, #16]
    a6fc:	cmp	w9, #0xf
    a700:	b.ls	a714 <lzma_stream_header_encode@@XZ_5.0+0xd8>  // b.plast
    a704:	mov	w8, #0x1                   	// #1
    a708:	and	w8, w8, #0x1
    a70c:	strb	w8, [sp, #31]
    a710:	b	a73c <lzma_stream_header_encode@@XZ_5.0+0x100>
    a714:	ldr	x8, [sp, #8]
    a718:	mov	w9, #0x0                   	// #0
    a71c:	strb	w9, [x8]
    a720:	ldr	x8, [sp, #16]
    a724:	ldr	w9, [x8, #16]
    a728:	ldr	x8, [sp, #8]
    a72c:	strb	w9, [x8, #1]
    a730:	mov	w9, wzr
    a734:	and	w9, w9, #0x1
    a738:	strb	w9, [sp, #31]
    a73c:	ldrb	w8, [sp, #31]
    a740:	and	w0, w8, #0x1
    a744:	add	sp, sp, #0x20
    a748:	ret
    a74c:	sub	sp, sp, #0x10
    a750:	str	x0, [sp, #8]
    a754:	str	w1, [sp, #4]
    a758:	ldr	w8, [sp, #4]
    a75c:	ldr	x9, [sp, #8]
    a760:	strb	w8, [x9]
    a764:	ldr	w8, [sp, #4]
    a768:	lsr	w8, w8, #8
    a76c:	ldr	x9, [sp, #8]
    a770:	strb	w8, [x9, #1]
    a774:	ldr	w8, [sp, #4]
    a778:	lsr	w8, w8, #16
    a77c:	ldr	x9, [sp, #8]
    a780:	strb	w8, [x9, #2]
    a784:	ldr	w8, [sp, #4]
    a788:	lsr	w8, w8, #24
    a78c:	ldr	x9, [sp, #8]
    a790:	strb	w8, [x9, #3]
    a794:	add	sp, sp, #0x10
    a798:	ret

000000000000a79c <lzma_stream_footer_encode@@XZ_5.0>:
    a79c:	sub	sp, sp, #0x30
    a7a0:	stp	x29, x30, [sp, #32]
    a7a4:	add	x29, sp, #0x20
    a7a8:	str	x0, [sp, #16]
    a7ac:	str	x1, [sp, #8]
    a7b0:	ldr	x8, [sp, #16]
    a7b4:	ldr	w9, [x8]
    a7b8:	cbz	w9, a7c8 <lzma_stream_footer_encode@@XZ_5.0+0x2c>
    a7bc:	mov	w8, #0x8                   	// #8
    a7c0:	stur	w8, [x29, #-4]
    a7c4:	b	a868 <lzma_stream_footer_encode@@XZ_5.0+0xcc>
    a7c8:	ldr	x0, [sp, #16]
    a7cc:	bl	a878 <lzma_stream_footer_encode@@XZ_5.0+0xdc>
    a7d0:	tbnz	w0, #0, a7e0 <lzma_stream_footer_encode@@XZ_5.0+0x44>
    a7d4:	mov	w8, #0xb                   	// #11
    a7d8:	stur	w8, [x29, #-4]
    a7dc:	b	a868 <lzma_stream_footer_encode@@XZ_5.0+0xcc>
    a7e0:	ldr	x8, [sp, #8]
    a7e4:	add	x0, x8, #0x4
    a7e8:	ldr	x8, [sp, #16]
    a7ec:	ldr	x8, [x8, #8]
    a7f0:	mov	x9, #0x4                   	// #4
    a7f4:	udiv	x8, x8, x9
    a7f8:	subs	x8, x8, #0x1
    a7fc:	mov	w1, w8
    a800:	bl	a74c <lzma_stream_header_encode@@XZ_5.0+0x110>
    a804:	ldr	x0, [sp, #16]
    a808:	ldr	x9, [sp, #8]
    a80c:	add	x1, x9, #0x8
    a810:	bl	a6e8 <lzma_stream_header_encode@@XZ_5.0+0xac>
    a814:	tbnz	w0, #0, a81c <lzma_stream_footer_encode@@XZ_5.0+0x80>
    a818:	b	a828 <lzma_stream_footer_encode@@XZ_5.0+0x8c>
    a81c:	mov	w8, #0xb                   	// #11
    a820:	stur	w8, [x29, #-4]
    a824:	b	a868 <lzma_stream_footer_encode@@XZ_5.0+0xcc>
    a828:	ldr	x8, [sp, #8]
    a82c:	add	x0, x8, #0x4
    a830:	mov	x1, #0x6                   	// #6
    a834:	mov	w9, wzr
    a838:	mov	w2, w9
    a83c:	bl	31c0 <lzma_crc32@plt>
    a840:	str	w0, [sp, #4]
    a844:	ldr	x0, [sp, #8]
    a848:	ldr	w1, [sp, #4]
    a84c:	bl	a74c <lzma_stream_header_encode@@XZ_5.0+0x110>
    a850:	ldr	x8, [sp, #8]
    a854:	adrp	x10, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    a858:	ldr	x10, [x10, #3976]
    a85c:	ldrh	w9, [x10]
    a860:	strh	w9, [x8, #10]
    a864:	stur	wzr, [x29, #-4]
    a868:	ldur	w0, [x29, #-4]
    a86c:	ldp	x29, x30, [sp, #32]
    a870:	add	sp, sp, #0x30
    a874:	ret
    a878:	sub	sp, sp, #0x10
    a87c:	str	x0, [sp, #8]
    a880:	ldr	x8, [sp, #8]
    a884:	ldr	x8, [x8, #8]
    a888:	mov	w9, #0x0                   	// #0
    a88c:	cmp	x8, #0x4
    a890:	str	w9, [sp, #4]
    a894:	b.cc	a8c8 <lzma_stream_footer_encode@@XZ_5.0+0x12c>  // b.lo, b.ul, b.last
    a898:	ldr	x8, [sp, #8]
    a89c:	ldr	x8, [x8, #8]
    a8a0:	mov	x9, #0x400000000           	// #17179869184
    a8a4:	mov	w10, #0x0                   	// #0
    a8a8:	cmp	x8, x9
    a8ac:	str	w10, [sp, #4]
    a8b0:	b.hi	a8c8 <lzma_stream_footer_encode@@XZ_5.0+0x12c>  // b.pmore
    a8b4:	ldr	x8, [sp, #8]
    a8b8:	ldr	x8, [x8, #8]
    a8bc:	tst	x8, #0x3
    a8c0:	cset	w9, eq  // eq = none
    a8c4:	str	w9, [sp, #4]
    a8c8:	ldr	w8, [sp, #4]
    a8cc:	and	w0, w8, #0x1
    a8d0:	add	sp, sp, #0x10
    a8d4:	ret

000000000000a8d8 <lzma_vli_encode@@XZ_5.0>:
    a8d8:	sub	sp, sp, #0x40
    a8dc:	str	x0, [sp, #48]
    a8e0:	str	x1, [sp, #40]
    a8e4:	str	x2, [sp, #32]
    a8e8:	str	x3, [sp, #24]
    a8ec:	str	x4, [sp, #16]
    a8f0:	str	xzr, [sp, #8]
    a8f4:	ldr	x8, [sp, #40]
    a8f8:	cbnz	x8, a928 <lzma_vli_encode@@XZ_5.0+0x50>
    a8fc:	add	x8, sp, #0x8
    a900:	str	x8, [sp, #40]
    a904:	ldr	x8, [sp, #24]
    a908:	ldr	x8, [x8]
    a90c:	ldr	x9, [sp, #16]
    a910:	cmp	x8, x9
    a914:	b.cc	a924 <lzma_vli_encode@@XZ_5.0+0x4c>  // b.lo, b.ul, b.last
    a918:	mov	w8, #0xb                   	// #11
    a91c:	str	w8, [sp, #60]
    a920:	b	aa6c <lzma_vli_encode@@XZ_5.0+0x194>
    a924:	b	a948 <lzma_vli_encode@@XZ_5.0+0x70>
    a928:	ldr	x8, [sp, #24]
    a92c:	ldr	x8, [x8]
    a930:	ldr	x9, [sp, #16]
    a934:	cmp	x8, x9
    a938:	b.cc	a948 <lzma_vli_encode@@XZ_5.0+0x70>  // b.lo, b.ul, b.last
    a93c:	mov	w8, #0xa                   	// #10
    a940:	str	w8, [sp, #60]
    a944:	b	aa6c <lzma_vli_encode@@XZ_5.0+0x194>
    a948:	ldr	x8, [sp, #40]
    a94c:	ldr	x8, [x8]
    a950:	cmp	x8, #0x9
    a954:	b.cs	a968 <lzma_vli_encode@@XZ_5.0+0x90>  // b.hs, b.nlast
    a958:	ldr	x8, [sp, #48]
    a95c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    a960:	cmp	x8, x9
    a964:	b.ls	a974 <lzma_vli_encode@@XZ_5.0+0x9c>  // b.plast
    a968:	mov	w8, #0xb                   	// #11
    a96c:	str	w8, [sp, #60]
    a970:	b	aa6c <lzma_vli_encode@@XZ_5.0+0x194>
    a974:	ldr	x8, [sp, #40]
    a978:	ldr	x8, [x8]
    a97c:	mov	x9, #0x7                   	// #7
    a980:	mul	x8, x8, x9
    a984:	ldr	x9, [sp, #48]
    a988:	lsr	x8, x9, x8
    a98c:	str	x8, [sp, #48]
    a990:	ldr	x8, [sp, #48]
    a994:	cmp	x8, #0x80
    a998:	b.cc	aa18 <lzma_vli_encode@@XZ_5.0+0x140>  // b.lo, b.ul, b.last
    a99c:	ldr	x8, [sp, #40]
    a9a0:	ldr	x9, [x8]
    a9a4:	add	x9, x9, #0x1
    a9a8:	str	x9, [x8]
    a9ac:	ldr	x8, [sp, #48]
    a9b0:	and	w8, w8, #0xff
    a9b4:	orr	w8, w8, #0x80
    a9b8:	ldr	x9, [sp, #32]
    a9bc:	ldr	x10, [sp, #24]
    a9c0:	ldr	x10, [x10]
    a9c4:	add	x9, x9, x10
    a9c8:	strb	w8, [x9]
    a9cc:	ldr	x9, [sp, #48]
    a9d0:	lsr	x9, x9, #7
    a9d4:	str	x9, [sp, #48]
    a9d8:	ldr	x9, [sp, #24]
    a9dc:	ldr	x10, [x9]
    a9e0:	add	x10, x10, #0x1
    a9e4:	str	x10, [x9]
    a9e8:	ldr	x9, [sp, #16]
    a9ec:	cmp	x10, x9
    a9f0:	b.ne	aa14 <lzma_vli_encode@@XZ_5.0+0x13c>  // b.any
    a9f4:	ldr	x8, [sp, #40]
    a9f8:	add	x9, sp, #0x8
    a9fc:	mov	w10, #0xb                   	// #11
    aa00:	mov	w11, wzr
    aa04:	cmp	x8, x9
    aa08:	csel	w10, w10, w11, eq  // eq = none
    aa0c:	str	w10, [sp, #60]
    aa10:	b	aa6c <lzma_vli_encode@@XZ_5.0+0x194>
    aa14:	b	a990 <lzma_vli_encode@@XZ_5.0+0xb8>
    aa18:	ldr	x8, [sp, #48]
    aa1c:	ldr	x9, [sp, #32]
    aa20:	ldr	x10, [sp, #24]
    aa24:	ldr	x10, [x10]
    aa28:	add	x9, x9, x10
    aa2c:	strb	w8, [x9]
    aa30:	ldr	x9, [sp, #24]
    aa34:	ldr	x10, [x9]
    aa38:	add	x10, x10, #0x1
    aa3c:	str	x10, [x9]
    aa40:	ldr	x9, [sp, #40]
    aa44:	ldr	x10, [x9]
    aa48:	add	x10, x10, #0x1
    aa4c:	str	x10, [x9]
    aa50:	ldr	x9, [sp, #40]
    aa54:	add	x10, sp, #0x8
    aa58:	mov	w8, #0x1                   	// #1
    aa5c:	mov	w11, wzr
    aa60:	cmp	x9, x10
    aa64:	csel	w8, w11, w8, eq  // eq = none
    aa68:	str	w8, [sp, #60]
    aa6c:	ldr	w0, [sp, #60]
    aa70:	add	sp, sp, #0x40
    aa74:	ret
    aa78:	sub	sp, sp, #0x40
    aa7c:	stp	x29, x30, [sp, #48]
    aa80:	add	x29, sp, #0x30
    aa84:	add	x8, sp, #0x10
    aa88:	add	x9, sp, #0xc
    aa8c:	stur	x0, [x29, #-16]
    aa90:	stur	w1, [x29, #-20]
    aa94:	ldur	x2, [x29, #-16]
    aa98:	ldur	w3, [x29, #-20]
    aa9c:	mov	x0, x8
    aaa0:	mov	x1, x9
    aaa4:	bl	aae8 <lzma_vli_encode@@XZ_5.0+0x210>
    aaa8:	cbz	w0, aab8 <lzma_vli_encode@@XZ_5.0+0x1e0>
    aaac:	mov	x8, #0xffffffffffffffff    	// #-1
    aab0:	stur	x8, [x29, #-8]
    aab4:	b	aad8 <lzma_vli_encode@@XZ_5.0+0x200>
    aab8:	ldr	w8, [sp, #12]
    aabc:	mov	w9, w8
    aac0:	mov	x10, #0x28                  	// #40
    aac4:	mul	x9, x9, x10
    aac8:	add	x9, x9, #0x30
    aacc:	ldr	x10, [sp, #16]
    aad0:	add	x9, x9, x10
    aad4:	stur	x9, [x29, #-8]
    aad8:	ldur	x0, [x29, #-8]
    aadc:	ldp	x29, x30, [sp, #48]
    aae0:	add	sp, sp, #0x40
    aae4:	ret
    aae8:	sub	sp, sp, #0x30
    aaec:	str	x0, [sp, #32]
    aaf0:	str	x1, [sp, #24]
    aaf4:	str	x2, [sp, #16]
    aaf8:	str	w3, [sp, #12]
    aafc:	ldr	w8, [sp, #12]
    ab00:	cmp	w8, #0x4, lsl #12
    ab04:	b.hi	ab18 <lzma_vli_encode@@XZ_5.0+0x240>  // b.pmore
    ab08:	ldr	x8, [sp, #16]
    ab0c:	mov	x9, #0xffffffffffff        	// #281474976710655
    ab10:	cmp	x8, x9
    ab14:	b.ls	ab24 <lzma_vli_encode@@XZ_5.0+0x24c>  // b.plast
    ab18:	mov	w8, #0x8                   	// #8
    ab1c:	str	w8, [sp, #44]
    ab20:	b	ab58 <lzma_vli_encode@@XZ_5.0+0x280>
    ab24:	ldr	w8, [sp, #12]
    ab28:	mov	w9, #0x2                   	// #2
    ab2c:	mul	w8, w8, w9
    ab30:	ldr	x10, [sp, #24]
    ab34:	str	w8, [x10]
    ab38:	ldr	x10, [sp, #24]
    ab3c:	ldr	w8, [x10]
    ab40:	mov	w10, w8
    ab44:	ldr	x11, [sp, #16]
    ab48:	mul	x10, x10, x11
    ab4c:	ldr	x11, [sp, #32]
    ab50:	str	x10, [x11]
    ab54:	str	wzr, [sp, #44]
    ab58:	ldr	w0, [sp, #44]
    ab5c:	add	sp, sp, #0x30
    ab60:	ret
    ab64:	sub	sp, sp, #0x50
    ab68:	stp	x29, x30, [sp, #64]
    ab6c:	add	x29, sp, #0x40
    ab70:	stur	x0, [x29, #-16]
    ab74:	stur	x1, [x29, #-24]
    ab78:	str	x2, [sp, #32]
    ab7c:	str	w3, [sp, #28]
    ab80:	ldr	x2, [sp, #32]
    ab84:	ldr	w3, [sp, #28]
    ab88:	add	x0, sp, #0x10
    ab8c:	add	x1, sp, #0xc
    ab90:	bl	aae8 <lzma_vli_encode@@XZ_5.0+0x210>
    ab94:	str	w0, [sp, #8]
    ab98:	ldr	w8, [sp, #8]
    ab9c:	cbz	w8, abac <lzma_vli_encode@@XZ_5.0+0x2d4>
    aba0:	ldr	w8, [sp, #8]
    aba4:	stur	w8, [x29, #-4]
    aba8:	b	ac78 <lzma_vli_encode@@XZ_5.0+0x3a0>
    abac:	ldur	x8, [x29, #-16]
    abb0:	ldr	x8, [x8, #16]
    abb4:	ldr	x9, [sp, #32]
    abb8:	cmp	x8, x9
    abbc:	b.ne	abd4 <lzma_vli_encode@@XZ_5.0+0x2fc>  // b.any
    abc0:	ldur	x8, [x29, #-16]
    abc4:	ldr	w9, [x8, #24]
    abc8:	ldr	w10, [sp, #12]
    abcc:	cmp	w9, w10
    abd0:	b.eq	ac44 <lzma_vli_encode@@XZ_5.0+0x36c>  // b.none
    abd4:	ldur	x0, [x29, #-16]
    abd8:	ldur	x1, [x29, #-24]
    abdc:	bl	ac88 <lzma_vli_encode@@XZ_5.0+0x3b0>
    abe0:	ldr	w8, [sp, #12]
    abe4:	mov	w9, w8
    abe8:	mov	x10, #0x28                  	// #40
    abec:	mul	x0, x9, x10
    abf0:	ldur	x1, [x29, #-24]
    abf4:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    abf8:	ldur	x9, [x29, #-16]
    abfc:	str	x0, [x9]
    ac00:	ldr	x0, [sp, #16]
    ac04:	ldur	x1, [x29, #-24]
    ac08:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    ac0c:	ldur	x9, [x29, #-16]
    ac10:	str	x0, [x9, #8]
    ac14:	ldur	x9, [x29, #-16]
    ac18:	ldr	x9, [x9]
    ac1c:	cbz	x9, ac2c <lzma_vli_encode@@XZ_5.0+0x354>
    ac20:	ldur	x8, [x29, #-16]
    ac24:	ldr	x8, [x8, #8]
    ac28:	cbnz	x8, ac44 <lzma_vli_encode@@XZ_5.0+0x36c>
    ac2c:	ldur	x0, [x29, #-16]
    ac30:	ldur	x1, [x29, #-24]
    ac34:	bl	ac88 <lzma_vli_encode@@XZ_5.0+0x3b0>
    ac38:	mov	w8, #0x5                   	// #5
    ac3c:	stur	w8, [x29, #-4]
    ac40:	b	ac78 <lzma_vli_encode@@XZ_5.0+0x3a0>
    ac44:	ldr	x8, [sp, #32]
    ac48:	ldur	x9, [x29, #-16]
    ac4c:	str	x8, [x9, #16]
    ac50:	ldr	w10, [sp, #12]
    ac54:	ldur	x8, [x29, #-16]
    ac58:	str	w10, [x8, #24]
    ac5c:	ldur	x8, [x29, #-16]
    ac60:	str	wzr, [x8, #28]
    ac64:	ldur	x8, [x29, #-16]
    ac68:	str	wzr, [x8, #32]
    ac6c:	ldur	x8, [x29, #-16]
    ac70:	str	xzr, [x8, #40]
    ac74:	stur	wzr, [x29, #-4]
    ac78:	ldur	w0, [x29, #-4]
    ac7c:	ldp	x29, x30, [sp, #64]
    ac80:	add	sp, sp, #0x50
    ac84:	ret
    ac88:	sub	sp, sp, #0x30
    ac8c:	stp	x29, x30, [sp, #32]
    ac90:	add	x29, sp, #0x20
    ac94:	mov	x8, xzr
    ac98:	stur	x0, [x29, #-8]
    ac9c:	str	x1, [sp, #16]
    aca0:	ldur	x9, [x29, #-8]
    aca4:	ldr	x0, [x9]
    aca8:	ldr	x1, [sp, #16]
    acac:	str	x8, [sp, #8]
    acb0:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    acb4:	ldur	x8, [x29, #-8]
    acb8:	ldr	x9, [sp, #8]
    acbc:	str	x9, [x8]
    acc0:	ldur	x8, [x29, #-8]
    acc4:	ldr	x0, [x8, #8]
    acc8:	ldr	x1, [sp, #16]
    accc:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    acd0:	ldur	x8, [x29, #-8]
    acd4:	ldr	x9, [sp, #8]
    acd8:	str	x9, [x8, #8]
    acdc:	ldp	x29, x30, [sp, #32]
    ace0:	add	sp, sp, #0x30
    ace4:	ret
    ace8:	sub	sp, sp, #0x10
    acec:	mov	w8, #0x0                   	// #0
    acf0:	str	x0, [sp, #8]
    acf4:	ldr	x9, [sp, #8]
    acf8:	ldr	x9, [x9]
    acfc:	ldr	x10, [sp, #8]
    ad00:	ldr	w11, [x10, #28]
    ad04:	mov	w10, w11
    ad08:	mov	x12, #0x28                  	// #40
    ad0c:	mul	x10, x12, x10
    ad10:	add	x9, x9, x10
    ad14:	str	x9, [sp]
    ad18:	ldr	x9, [sp, #8]
    ad1c:	ldr	x9, [x9, #8]
    ad20:	ldr	x10, [sp, #8]
    ad24:	ldr	w11, [x10, #28]
    ad28:	mov	w10, w11
    ad2c:	ldr	x12, [sp, #8]
    ad30:	ldr	x12, [x12, #16]
    ad34:	mul	x10, x10, x12
    ad38:	add	x9, x9, x10
    ad3c:	ldr	x10, [sp]
    ad40:	str	x9, [x10]
    ad44:	ldr	x9, [sp]
    ad48:	str	xzr, [x9, #8]
    ad4c:	ldr	x9, [sp]
    ad50:	strb	w8, [x9, #32]
    ad54:	ldr	x9, [sp, #8]
    ad58:	ldr	w8, [x9, #28]
    ad5c:	add	w8, w8, #0x1
    ad60:	str	w8, [x9, #28]
    ad64:	ldr	x9, [sp, #8]
    ad68:	ldr	w11, [x9, #24]
    ad6c:	cmp	w8, w11
    ad70:	b.ne	ad7c <lzma_vli_encode@@XZ_5.0+0x4a4>  // b.any
    ad74:	ldr	x8, [sp, #8]
    ad78:	str	wzr, [x8, #28]
    ad7c:	ldr	x8, [sp, #8]
    ad80:	ldr	w9, [x8, #32]
    ad84:	add	w9, w9, #0x1
    ad88:	str	w9, [x8, #32]
    ad8c:	ldr	x0, [sp]
    ad90:	add	sp, sp, #0x10
    ad94:	ret
    ad98:	sub	sp, sp, #0x10
    ad9c:	str	x0, [sp, #8]
    ada0:	ldr	x8, [sp, #8]
    ada4:	ldr	w9, [x8, #28]
    ada8:	ldr	x8, [sp, #8]
    adac:	ldr	w10, [x8, #32]
    adb0:	subs	w9, w9, w10
    adb4:	str	w9, [sp, #4]
    adb8:	ldr	x8, [sp, #8]
    adbc:	ldr	w9, [x8, #28]
    adc0:	ldr	x8, [sp, #8]
    adc4:	ldr	w10, [x8, #32]
    adc8:	cmp	w9, w10
    adcc:	b.cs	ade4 <lzma_vli_encode@@XZ_5.0+0x50c>  // b.hs, b.nlast
    add0:	ldr	x8, [sp, #8]
    add4:	ldr	w9, [x8, #24]
    add8:	ldr	w10, [sp, #4]
    addc:	add	w9, w10, w9
    ade0:	str	w9, [sp, #4]
    ade4:	ldr	x8, [sp, #8]
    ade8:	ldr	x8, [x8]
    adec:	ldr	w9, [sp, #4]
    adf0:	mov	w10, w9
    adf4:	mov	x11, #0x28                  	// #40
    adf8:	mul	x10, x11, x10
    adfc:	add	x8, x8, x10
    ae00:	ldrb	w9, [x8, #32]
    ae04:	and	w0, w9, #0x1
    ae08:	add	sp, sp, #0x10
    ae0c:	ret
    ae10:	sub	sp, sp, #0x60
    ae14:	stp	x29, x30, [sp, #80]
    ae18:	add	x29, sp, #0x50
    ae1c:	stur	x0, [x29, #-16]
    ae20:	stur	x1, [x29, #-24]
    ae24:	stur	x2, [x29, #-32]
    ae28:	str	x3, [sp, #40]
    ae2c:	str	x4, [sp, #32]
    ae30:	str	x5, [sp, #24]
    ae34:	ldur	x8, [x29, #-16]
    ae38:	ldr	w9, [x8, #32]
    ae3c:	cbnz	w9, ae48 <lzma_vli_encode@@XZ_5.0+0x570>
    ae40:	stur	wzr, [x29, #-4]
    ae44:	b	af48 <lzma_vli_encode@@XZ_5.0+0x670>
    ae48:	ldur	x8, [x29, #-16]
    ae4c:	ldr	w9, [x8, #28]
    ae50:	ldur	x8, [x29, #-16]
    ae54:	ldr	w10, [x8, #32]
    ae58:	subs	w9, w9, w10
    ae5c:	str	w9, [sp, #20]
    ae60:	ldur	x8, [x29, #-16]
    ae64:	ldr	w9, [x8, #28]
    ae68:	ldur	x8, [x29, #-16]
    ae6c:	ldr	w10, [x8, #32]
    ae70:	cmp	w9, w10
    ae74:	b.cs	ae8c <lzma_vli_encode@@XZ_5.0+0x5b4>  // b.hs, b.nlast
    ae78:	ldur	x8, [x29, #-16]
    ae7c:	ldr	w9, [x8, #24]
    ae80:	ldr	w10, [sp, #20]
    ae84:	add	w9, w10, w9
    ae88:	str	w9, [sp, #20]
    ae8c:	ldur	x8, [x29, #-16]
    ae90:	ldr	x8, [x8]
    ae94:	ldr	w9, [sp, #20]
    ae98:	mov	w10, w9
    ae9c:	mov	x11, #0x28                  	// #40
    aea0:	mul	x10, x11, x10
    aea4:	add	x8, x8, x10
    aea8:	str	x8, [sp, #8]
    aeac:	ldr	x8, [sp, #8]
    aeb0:	ldrb	w9, [x8, #32]
    aeb4:	tbnz	w9, #0, aec0 <lzma_vli_encode@@XZ_5.0+0x5e8>
    aeb8:	stur	wzr, [x29, #-4]
    aebc:	b	af48 <lzma_vli_encode@@XZ_5.0+0x670>
    aec0:	ldr	x8, [sp, #8]
    aec4:	ldr	x0, [x8]
    aec8:	ldur	x8, [x29, #-16]
    aecc:	add	x1, x8, #0x28
    aed0:	ldr	x8, [sp, #8]
    aed4:	ldr	x2, [x8, #8]
    aed8:	ldur	x3, [x29, #-24]
    aedc:	ldur	x4, [x29, #-32]
    aee0:	ldr	x5, [sp, #40]
    aee4:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    aee8:	ldur	x8, [x29, #-16]
    aeec:	ldr	x8, [x8, #40]
    aef0:	ldr	x9, [sp, #8]
    aef4:	ldr	x9, [x9, #8]
    aef8:	cmp	x8, x9
    aefc:	b.cs	af08 <lzma_vli_encode@@XZ_5.0+0x630>  // b.hs, b.nlast
    af00:	stur	wzr, [x29, #-4]
    af04:	b	af48 <lzma_vli_encode@@XZ_5.0+0x670>
    af08:	ldr	x8, [sp, #8]
    af0c:	ldr	x8, [x8, #16]
    af10:	ldr	x9, [sp, #32]
    af14:	str	x8, [x9]
    af18:	ldr	x8, [sp, #8]
    af1c:	ldr	x8, [x8, #24]
    af20:	ldr	x9, [sp, #24]
    af24:	str	x8, [x9]
    af28:	ldur	x8, [x29, #-16]
    af2c:	ldr	w10, [x8, #32]
    af30:	subs	w10, w10, #0x1
    af34:	str	w10, [x8, #32]
    af38:	ldur	x8, [x29, #-16]
    af3c:	str	xzr, [x8, #40]
    af40:	mov	w10, #0x1                   	// #1
    af44:	stur	w10, [x29, #-4]
    af48:	ldur	w0, [x29, #-4]
    af4c:	ldp	x29, x30, [sp, #80]
    af50:	add	sp, sp, #0x60
    af54:	ret

000000000000af58 <lzma_stream_encoder_mt@@XZ_5.2>:
    af58:	sub	sp, sp, #0x30
    af5c:	stp	x29, x30, [sp, #32]
    af60:	add	x29, sp, #0x20
    af64:	str	x0, [sp, #16]
    af68:	str	x1, [sp, #8]
    af6c:	ldr	x0, [sp, #16]
    af70:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    af74:	str	w0, [sp, #4]
    af78:	ldr	w8, [sp, #4]
    af7c:	cbz	w8, af8c <lzma_stream_encoder_mt@@XZ_5.2+0x34>
    af80:	ldr	w8, [sp, #4]
    af84:	stur	w8, [x29, #-4]
    af88:	b	affc <lzma_stream_encoder_mt@@XZ_5.2+0xa4>
    af8c:	ldr	x8, [sp, #16]
    af90:	ldr	x0, [x8, #56]
    af94:	ldr	x8, [sp, #16]
    af98:	ldr	x1, [x8, #48]
    af9c:	ldr	x2, [sp, #8]
    afa0:	bl	b00c <lzma_stream_encoder_mt@@XZ_5.2+0xb4>
    afa4:	str	w0, [sp]
    afa8:	ldr	w9, [sp]
    afac:	cbz	w9, afc4 <lzma_stream_encoder_mt@@XZ_5.2+0x6c>
    afb0:	ldr	x0, [sp, #16]
    afb4:	bl	3320 <lzma_end@plt>
    afb8:	ldr	w8, [sp]
    afbc:	stur	w8, [x29, #-4]
    afc0:	b	affc <lzma_stream_encoder_mt@@XZ_5.2+0xa4>
    afc4:	ldr	x8, [sp, #16]
    afc8:	ldr	x8, [x8, #56]
    afcc:	mov	w9, #0x1                   	// #1
    afd0:	strb	w9, [x8, #88]
    afd4:	ldr	x8, [sp, #16]
    afd8:	ldr	x8, [x8, #56]
    afdc:	strb	w9, [x8, #90]
    afe0:	ldr	x8, [sp, #16]
    afe4:	ldr	x8, [x8, #56]
    afe8:	strb	w9, [x8, #92]
    afec:	ldr	x8, [sp, #16]
    aff0:	ldr	x8, [x8, #56]
    aff4:	strb	w9, [x8, #91]
    aff8:	stur	wzr, [x29, #-4]
    affc:	ldur	w0, [x29, #-4]
    b000:	ldp	x29, x30, [sp, #32]
    b004:	add	sp, sp, #0x30
    b008:	ret
    b00c:	sub	sp, sp, #0x1c0
    b010:	stp	x29, x30, [sp, #416]
    b014:	str	x28, [sp, #432]
    b018:	add	x29, sp, #0x1a0
    b01c:	adrp	x8, b000 <lzma_stream_encoder_mt@@XZ_5.2+0xa8>
    b020:	add	x8, x8, #0xc
    b024:	stur	x0, [x29, #-16]
    b028:	stur	x1, [x29, #-24]
    b02c:	stur	x2, [x29, #-32]
    b030:	str	x8, [sp, #48]
    b034:	ldur	x8, [x29, #-16]
    b038:	ldr	x8, [x8, #16]
    b03c:	ldr	x9, [sp, #48]
    b040:	cmp	x9, x8
    b044:	b.eq	b054 <lzma_stream_encoder_mt@@XZ_5.2+0xfc>  // b.none
    b048:	ldur	x0, [x29, #-16]
    b04c:	ldur	x1, [x29, #-24]
    b050:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    b054:	ldur	x8, [x29, #-16]
    b058:	ldr	x9, [sp, #48]
    b05c:	str	x9, [x8, #16]
    b060:	ldur	x0, [x29, #-32]
    b064:	add	x1, sp, #0xc0
    b068:	add	x2, sp, #0xb8
    b06c:	add	x3, sp, #0xb0
    b070:	add	x4, sp, #0xa8
    b074:	bl	b65c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x194>
    b078:	str	w0, [sp, #164]
    b07c:	ldr	w8, [sp, #164]
    b080:	cbz	w8, b090 <lzma_stream_encoder_mt@@XZ_5.2+0x138>
    b084:	ldr	w8, [sp, #164]
    b088:	stur	w8, [x29, #-4]
    b08c:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b090:	ldr	x0, [sp, #184]
    b094:	bl	3220 <lzma_raw_encoder_memusage@plt>
    b098:	mov	x8, #0xffffffffffffffff    	// #-1
    b09c:	cmp	x0, x8
    b0a0:	b.ne	b0b0 <lzma_stream_encoder_mt@@XZ_5.2+0x158>  // b.any
    b0a4:	mov	w8, #0x8                   	// #8
    b0a8:	stur	w8, [x29, #-4]
    b0ac:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b0b0:	ldur	x8, [x29, #-32]
    b0b4:	ldr	w9, [x8, #32]
    b0b8:	cmp	w9, #0xf
    b0bc:	b.ls	b0cc <lzma_stream_encoder_mt@@XZ_5.2+0x174>  // b.plast
    b0c0:	mov	w8, #0xb                   	// #11
    b0c4:	stur	w8, [x29, #-4]
    b0c8:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b0cc:	ldur	x8, [x29, #-32]
    b0d0:	ldr	w0, [x8, #32]
    b0d4:	bl	30e0 <lzma_check_is_supported@plt>
    b0d8:	and	w9, w0, #0xff
    b0dc:	cbnz	w9, b0ec <lzma_stream_encoder_mt@@XZ_5.2+0x194>
    b0e0:	mov	w8, #0x3                   	// #3
    b0e4:	stur	w8, [x29, #-4]
    b0e8:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b0ec:	ldur	x8, [x29, #-16]
    b0f0:	ldr	x8, [x8]
    b0f4:	str	x8, [sp, #152]
    b0f8:	ldr	x8, [sp, #152]
    b0fc:	cbnz	x8, b27c <lzma_stream_encoder_mt@@XZ_5.2+0x324>
    b100:	ldur	x1, [x29, #-24]
    b104:	mov	x0, #0x1d0                 	// #464
    b108:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    b10c:	str	x0, [sp, #152]
    b110:	ldr	x8, [sp, #152]
    b114:	cbnz	x8, b124 <lzma_stream_encoder_mt@@XZ_5.2+0x1cc>
    b118:	mov	w8, #0x5                   	// #5
    b11c:	stur	w8, [x29, #-4]
    b120:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b124:	ldr	x8, [sp, #152]
    b128:	ldur	x9, [x29, #-16]
    b12c:	str	x8, [x9]
    b130:	ldr	x8, [sp, #152]
    b134:	add	x0, x8, #0x168
    b138:	bl	b7c8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x300>
    b13c:	cbz	w0, b164 <lzma_stream_encoder_mt@@XZ_5.2+0x20c>
    b140:	ldr	x0, [sp, #152]
    b144:	ldur	x1, [x29, #-24]
    b148:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    b14c:	ldur	x8, [x29, #-16]
    b150:	mov	x9, xzr
    b154:	str	x9, [x8]
    b158:	mov	w10, #0x5                   	// #5
    b15c:	stur	w10, [x29, #-4]
    b160:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b164:	ldr	x8, [sp, #152]
    b168:	add	x0, x8, #0x198
    b16c:	bl	b7f4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x32c>
    b170:	cbz	w0, b1a4 <lzma_stream_encoder_mt@@XZ_5.2+0x24c>
    b174:	ldr	x8, [sp, #152]
    b178:	add	x0, x8, #0x168
    b17c:	bl	b89c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3d4>
    b180:	ldr	x0, [sp, #152]
    b184:	ldur	x1, [x29, #-24]
    b188:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    b18c:	ldur	x8, [x29, #-16]
    b190:	mov	x9, xzr
    b194:	str	x9, [x8]
    b198:	mov	w10, #0x5                   	// #5
    b19c:	stur	w10, [x29, #-4]
    b1a0:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b1a4:	ldur	x8, [x29, #-16]
    b1a8:	adrp	x9, b000 <lzma_stream_encoder_mt@@XZ_5.2+0xa8>
    b1ac:	add	x9, x9, #0x8c4
    b1b0:	str	x9, [x8, #24]
    b1b4:	ldur	x8, [x29, #-16]
    b1b8:	adrp	x9, b000 <lzma_stream_encoder_mt@@XZ_5.2+0xa8>
    b1bc:	add	x9, x9, #0xd2c
    b1c0:	str	x9, [x8, #32]
    b1c4:	ldur	x8, [x29, #-16]
    b1c8:	adrp	x9, b000 <lzma_stream_encoder_mt@@XZ_5.2+0xa8>
    b1cc:	add	x9, x9, #0xe10
    b1d0:	str	x9, [x8, #40]
    b1d4:	ldr	x8, [sp, #152]
    b1d8:	mov	x9, #0xffffffffffffffff    	// #-1
    b1dc:	str	x9, [x8, #16]
    b1e0:	ldr	x8, [sp, #152]
    b1e4:	add	x0, x8, #0x68
    b1e8:	add	x8, sp, #0x50
    b1ec:	str	x0, [sp, #40]
    b1f0:	mov	x0, x8
    b1f4:	mov	w10, wzr
    b1f8:	mov	w1, w10
    b1fc:	mov	x11, #0x48                  	// #72
    b200:	mov	x2, x11
    b204:	str	x9, [sp, #32]
    b208:	str	x8, [sp, #24]
    b20c:	str	w10, [sp, #20]
    b210:	str	x11, [sp, #8]
    b214:	bl	3230 <memset@plt>
    b218:	ldr	x8, [sp, #32]
    b21c:	str	x8, [sp, #88]
    b220:	mov	x9, xzr
    b224:	str	xzr, [sp, #96]
    b228:	ldr	x0, [sp, #40]
    b22c:	ldr	x1, [sp, #24]
    b230:	ldr	x2, [sp, #8]
    b234:	str	x9, [sp]
    b238:	bl	3090 <memcpy@plt>
    b23c:	ldr	x8, [sp, #152]
    b240:	ldr	x9, [sp]
    b244:	str	x9, [x8, #96]
    b248:	ldr	x8, [sp, #152]
    b24c:	add	x0, x8, #0x100
    b250:	ldr	w10, [sp, #20]
    b254:	mov	w1, w10
    b258:	mov	x2, #0x30                  	// #48
    b25c:	bl	3230 <memset@plt>
    b260:	ldr	x8, [sp, #152]
    b264:	ldr	x9, [sp]
    b268:	str	x9, [x8, #312]
    b26c:	ldr	x8, [sp, #152]
    b270:	str	wzr, [x8, #320]
    b274:	ldr	x8, [sp, #152]
    b278:	str	wzr, [x8, #324]
    b27c:	ldr	x8, [sp, #152]
    b280:	str	wzr, [x8]
    b284:	ldr	x8, [sp, #176]
    b288:	ldr	x9, [sp, #152]
    b28c:	str	x8, [x9, #8]
    b290:	ldr	x8, [sp, #152]
    b294:	str	wzr, [x8, #308]
    b298:	ldr	x8, [sp, #152]
    b29c:	mov	x9, xzr
    b2a0:	str	x9, [x8, #336]
    b2a4:	ldr	x8, [sp, #152]
    b2a8:	ldr	w10, [x8, #320]
    b2ac:	ldur	x8, [x29, #-32]
    b2b0:	ldr	w11, [x8, #4]
    b2b4:	cmp	w10, w11
    b2b8:	b.eq	b33c <lzma_stream_encoder_mt@@XZ_5.2+0x3e4>  // b.none
    b2bc:	ldr	x0, [sp, #152]
    b2c0:	ldur	x1, [x29, #-24]
    b2c4:	bl	c00c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb44>
    b2c8:	ldr	x8, [sp, #152]
    b2cc:	mov	x9, xzr
    b2d0:	str	x9, [x8, #312]
    b2d4:	ldr	x8, [sp, #152]
    b2d8:	str	wzr, [x8, #320]
    b2dc:	ldr	x8, [sp, #152]
    b2e0:	str	wzr, [x8, #324]
    b2e4:	ldr	x8, [sp, #152]
    b2e8:	str	x9, [x8, #328]
    b2ec:	ldur	x8, [x29, #-32]
    b2f0:	ldr	w10, [x8, #4]
    b2f4:	mov	w8, w10
    b2f8:	mov	x9, #0x1d0                 	// #464
    b2fc:	mul	x0, x8, x9
    b300:	ldur	x1, [x29, #-24]
    b304:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    b308:	ldr	x8, [sp, #152]
    b30c:	str	x0, [x8, #312]
    b310:	ldr	x8, [sp, #152]
    b314:	ldr	x8, [x8, #312]
    b318:	cbnz	x8, b328 <lzma_stream_encoder_mt@@XZ_5.2+0x3d0>
    b31c:	mov	w8, #0x5                   	// #5
    b320:	stur	w8, [x29, #-4]
    b324:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b328:	ldur	x8, [x29, #-32]
    b32c:	ldr	w9, [x8, #4]
    b330:	ldr	x8, [sp, #152]
    b334:	str	w9, [x8, #320]
    b338:	b	b34c <lzma_stream_encoder_mt@@XZ_5.2+0x3f4>
    b33c:	ldr	x0, [sp, #152]
    b340:	mov	w8, #0x1                   	// #1
    b344:	and	w1, w8, #0x1
    b348:	bl	c1a8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xce0>
    b34c:	ldr	x8, [sp, #152]
    b350:	add	x0, x8, #0x100
    b354:	ldur	x1, [x29, #-24]
    b358:	ldr	x2, [sp, #168]
    b35c:	ldur	x8, [x29, #-32]
    b360:	ldr	w3, [x8, #4]
    b364:	bl	ab64 <lzma_vli_encode@@XZ_5.0+0x28c>
    b368:	str	w0, [sp, #76]
    b36c:	ldr	w9, [sp, #76]
    b370:	cbz	w9, b380 <lzma_stream_encoder_mt@@XZ_5.2+0x428>
    b374:	ldr	w8, [sp, #76]
    b378:	stur	w8, [x29, #-4]
    b37c:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b380:	ldur	x8, [x29, #-32]
    b384:	ldr	w9, [x8, #16]
    b388:	ldr	x8, [sp, #152]
    b38c:	str	w9, [x8, #304]
    b390:	str	xzr, [sp, #64]
    b394:	ldr	x8, [sp, #152]
    b398:	mov	x9, #0x10                  	// #16
    b39c:	add	x8, x8, #0x10
    b3a0:	ldr	x10, [sp, #64]
    b3a4:	mul	x9, x9, x10
    b3a8:	ldr	x8, [x8, x9]
    b3ac:	mov	x9, #0xffffffffffffffff    	// #-1
    b3b0:	cmp	x8, x9
    b3b4:	b.eq	b3ec <lzma_stream_encoder_mt@@XZ_5.2+0x494>  // b.none
    b3b8:	ldr	x8, [sp, #152]
    b3bc:	mov	x9, #0x10                  	// #16
    b3c0:	add	x8, x8, #0x10
    b3c4:	ldr	x10, [sp, #64]
    b3c8:	mul	x9, x9, x10
    b3cc:	add	x8, x8, x9
    b3d0:	ldr	x0, [x8, #8]
    b3d4:	ldur	x1, [x29, #-24]
    b3d8:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    b3dc:	ldr	x8, [sp, #64]
    b3e0:	add	x8, x8, #0x1
    b3e4:	str	x8, [sp, #64]
    b3e8:	b	b394 <lzma_stream_encoder_mt@@XZ_5.2+0x43c>
    b3ec:	ldr	x0, [sp, #184]
    b3f0:	ldr	x8, [sp, #152]
    b3f4:	add	x1, x8, #0x10
    b3f8:	ldur	x2, [x29, #-24]
    b3fc:	bl	3240 <lzma_filters_copy@plt>
    b400:	str	w0, [sp, #60]
    b404:	ldr	w9, [sp, #60]
    b408:	cbz	w9, b418 <lzma_stream_encoder_mt@@XZ_5.2+0x4c0>
    b40c:	ldr	w8, [sp, #60]
    b410:	stur	w8, [x29, #-4]
    b414:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b418:	ldr	x8, [sp, #152]
    b41c:	ldr	x0, [x8, #96]
    b420:	ldur	x1, [x29, #-24]
    b424:	bl	33e0 <lzma_index_end@plt>
    b428:	ldur	x0, [x29, #-24]
    b42c:	bl	33b0 <lzma_index_init@plt>
    b430:	ldr	x8, [sp, #152]
    b434:	str	x0, [x8, #96]
    b438:	ldr	x8, [sp, #152]
    b43c:	ldr	x8, [x8, #96]
    b440:	cbnz	x8, b450 <lzma_stream_encoder_mt@@XZ_5.2+0x4f8>
    b444:	mov	w8, #0x5                   	// #5
    b448:	stur	w8, [x29, #-4]
    b44c:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b450:	ldr	x8, [sp, #152]
    b454:	str	wzr, [x8, #176]
    b458:	ldur	x8, [x29, #-32]
    b45c:	ldr	w9, [x8, #32]
    b460:	ldr	x8, [sp, #152]
    b464:	str	w9, [x8, #192]
    b468:	ldr	x8, [sp, #152]
    b46c:	add	x0, x8, #0xb0
    b470:	ldr	x8, [sp, #152]
    b474:	add	x1, x8, #0xe8
    b478:	bl	3390 <lzma_stream_header_encode@plt>
    b47c:	str	w0, [sp, #56]
    b480:	ldr	w9, [sp, #56]
    b484:	cbz	w9, b494 <lzma_stream_encoder_mt@@XZ_5.2+0x53c>
    b488:	ldr	w8, [sp, #56]
    b48c:	stur	w8, [x29, #-4]
    b490:	b	b4b4 <lzma_stream_encoder_mt@@XZ_5.2+0x55c>
    b494:	ldr	x8, [sp, #152]
    b498:	str	xzr, [x8, #248]
    b49c:	ldr	x8, [sp, #152]
    b4a0:	str	xzr, [x8, #344]
    b4a4:	ldr	x8, [sp, #152]
    b4a8:	mov	x9, #0xc                   	// #12
    b4ac:	str	x9, [x8, #352]
    b4b0:	stur	wzr, [x29, #-4]
    b4b4:	ldur	w0, [x29, #-4]
    b4b8:	ldr	x28, [sp, #432]
    b4bc:	ldp	x29, x30, [sp, #416]
    b4c0:	add	sp, sp, #0x1c0
    b4c4:	ret

000000000000b4c8 <lzma_stream_encoder_mt_memusage@@XZ_5.2>:
    b4c8:	sub	sp, sp, #0x130
    b4cc:	stp	x29, x30, [sp, #272]
    b4d0:	str	x28, [sp, #288]
    b4d4:	add	x29, sp, #0x110
    b4d8:	add	x1, sp, #0x40
    b4dc:	add	x2, sp, #0x38
    b4e0:	add	x3, sp, #0x30
    b4e4:	add	x4, sp, #0x28
    b4e8:	stur	x0, [x29, #-16]
    b4ec:	ldur	x0, [x29, #-16]
    b4f0:	bl	b65c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x194>
    b4f4:	cbz	w0, b504 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3c>
    b4f8:	mov	x8, #0xffffffffffffffff    	// #-1
    b4fc:	stur	x8, [x29, #-8]
    b500:	b	b648 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x180>
    b504:	ldur	x8, [x29, #-16]
    b508:	ldr	w9, [x8, #4]
    b50c:	mov	w8, w9
    b510:	ldr	x10, [sp, #48]
    b514:	mul	x8, x8, x10
    b518:	str	x8, [sp, #32]
    b51c:	ldr	x0, [sp, #56]
    b520:	bl	3220 <lzma_raw_encoder_memusage@plt>
    b524:	str	x0, [sp, #24]
    b528:	ldr	x8, [sp, #24]
    b52c:	mov	x10, #0xffffffffffffffff    	// #-1
    b530:	cmp	x8, x10
    b534:	b.ne	b544 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x7c>  // b.any
    b538:	mov	x8, #0xffffffffffffffff    	// #-1
    b53c:	stur	x8, [x29, #-8]
    b540:	b	b648 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x180>
    b544:	ldur	x8, [x29, #-16]
    b548:	ldr	w9, [x8, #4]
    b54c:	mov	w8, w9
    b550:	ldr	x10, [sp, #24]
    b554:	mul	x8, x10, x8
    b558:	str	x8, [sp, #24]
    b55c:	ldr	x0, [sp, #40]
    b560:	ldur	x8, [x29, #-16]
    b564:	ldr	w1, [x8, #4]
    b568:	bl	aa78 <lzma_vli_encode@@XZ_5.0+0x1a0>
    b56c:	str	x0, [sp, #16]
    b570:	ldr	x8, [sp, #16]
    b574:	mov	x10, #0xffffffffffffffff    	// #-1
    b578:	cmp	x8, x10
    b57c:	b.ne	b58c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xc4>  // b.any
    b580:	mov	x8, #0xffffffffffffffff    	// #-1
    b584:	stur	x8, [x29, #-8]
    b588:	b	b648 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x180>
    b58c:	ldur	x8, [x29, #-16]
    b590:	ldr	w9, [x8, #4]
    b594:	mov	w8, w9
    b598:	mov	x10, #0x1d0                 	// #464
    b59c:	mul	x8, x8, x10
    b5a0:	mov	x10, #0x81d0                	// #33232
    b5a4:	add	x8, x10, x8
    b5a8:	str	x8, [sp, #8]
    b5ac:	ldr	x8, [sp, #8]
    b5b0:	mov	x10, #0xffffffffffffffff    	// #-1
    b5b4:	subs	x8, x10, x8
    b5b8:	ldr	x10, [sp, #32]
    b5bc:	cmp	x8, x10
    b5c0:	b.cs	b5d0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x108>  // b.hs, b.nlast
    b5c4:	mov	x8, #0xffffffffffffffff    	// #-1
    b5c8:	stur	x8, [x29, #-8]
    b5cc:	b	b648 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x180>
    b5d0:	ldr	x8, [sp, #32]
    b5d4:	ldr	x9, [sp, #8]
    b5d8:	add	x8, x9, x8
    b5dc:	str	x8, [sp, #8]
    b5e0:	ldr	x8, [sp, #8]
    b5e4:	mov	x9, #0xffffffffffffffff    	// #-1
    b5e8:	subs	x8, x9, x8
    b5ec:	ldr	x9, [sp, #24]
    b5f0:	cmp	x8, x9
    b5f4:	b.cs	b604 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x13c>  // b.hs, b.nlast
    b5f8:	mov	x8, #0xffffffffffffffff    	// #-1
    b5fc:	stur	x8, [x29, #-8]
    b600:	b	b648 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x180>
    b604:	ldr	x8, [sp, #24]
    b608:	ldr	x9, [sp, #8]
    b60c:	add	x8, x9, x8
    b610:	str	x8, [sp, #8]
    b614:	ldr	x8, [sp, #8]
    b618:	mov	x9, #0xffffffffffffffff    	// #-1
    b61c:	subs	x8, x9, x8
    b620:	ldr	x9, [sp, #16]
    b624:	cmp	x8, x9
    b628:	b.cs	b638 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x170>  // b.hs, b.nlast
    b62c:	mov	x8, #0xffffffffffffffff    	// #-1
    b630:	stur	x8, [x29, #-8]
    b634:	b	b648 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x180>
    b638:	ldr	x8, [sp, #8]
    b63c:	ldr	x9, [sp, #16]
    b640:	add	x8, x8, x9
    b644:	stur	x8, [x29, #-8]
    b648:	ldur	x0, [x29, #-8]
    b64c:	ldr	x28, [sp, #288]
    b650:	ldp	x29, x30, [sp, #272]
    b654:	add	sp, sp, #0x130
    b658:	ret
    b65c:	sub	sp, sp, #0x40
    b660:	stp	x29, x30, [sp, #48]
    b664:	add	x29, sp, #0x30
    b668:	stur	x0, [x29, #-16]
    b66c:	str	x1, [sp, #24]
    b670:	str	x2, [sp, #16]
    b674:	str	x3, [sp, #8]
    b678:	str	x4, [sp]
    b67c:	ldur	x8, [x29, #-16]
    b680:	cbnz	x8, b690 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1c8>
    b684:	mov	w8, #0xb                   	// #11
    b688:	stur	w8, [x29, #-4]
    b68c:	b	b7b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2f0>
    b690:	ldur	x8, [x29, #-16]
    b694:	ldr	w9, [x8]
    b698:	cbnz	w9, b6b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f0>
    b69c:	ldur	x8, [x29, #-16]
    b6a0:	ldr	w9, [x8, #4]
    b6a4:	cbz	w9, b6b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f0>
    b6a8:	ldur	x8, [x29, #-16]
    b6ac:	ldr	w9, [x8, #4]
    b6b0:	cmp	w9, #0x4, lsl #12
    b6b4:	b.ls	b6c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1fc>  // b.plast
    b6b8:	mov	w8, #0x8                   	// #8
    b6bc:	stur	w8, [x29, #-4]
    b6c0:	b	b7b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2f0>
    b6c4:	ldur	x8, [x29, #-16]
    b6c8:	ldr	x8, [x8, #24]
    b6cc:	cbz	x8, b6e4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x21c>
    b6d0:	ldur	x8, [x29, #-16]
    b6d4:	ldr	x8, [x8, #24]
    b6d8:	ldr	x9, [sp, #16]
    b6dc:	str	x8, [x9]
    b6e0:	b	b714 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x24c>
    b6e4:	ldr	x0, [sp, #24]
    b6e8:	ldur	x8, [x29, #-16]
    b6ec:	ldr	w1, [x8, #20]
    b6f0:	bl	467c <lzma_block_total_size@@XZ_5.0+0x6c>
    b6f4:	tbnz	w0, #0, b6fc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x234>
    b6f8:	b	b708 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x240>
    b6fc:	mov	w8, #0x8                   	// #8
    b700:	stur	w8, [x29, #-4]
    b704:	b	b7b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2f0>
    b708:	ldr	x8, [sp, #24]
    b70c:	ldr	x9, [sp, #16]
    b710:	str	x8, [x9]
    b714:	ldur	x8, [x29, #-16]
    b718:	ldr	x8, [x8, #8]
    b71c:	cmp	x8, #0x0
    b720:	cset	w9, ls  // ls = plast
    b724:	tbnz	w9, #0, b75c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x294>
    b728:	ldur	x8, [x29, #-16]
    b72c:	ldr	x8, [x8, #8]
    b730:	mov	x9, #0x3ffffffffffff       	// #1125899906842623
    b734:	cmp	x8, x9
    b738:	b.ls	b748 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x280>  // b.plast
    b73c:	mov	w8, #0x8                   	// #8
    b740:	stur	w8, [x29, #-4]
    b744:	b	b7b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2f0>
    b748:	ldur	x8, [x29, #-16]
    b74c:	ldr	x8, [x8, #8]
    b750:	ldr	x9, [sp, #8]
    b754:	str	x8, [x9]
    b758:	b	b788 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2c0>
    b75c:	ldr	x8, [sp, #16]
    b760:	ldr	x0, [x8]
    b764:	bl	8e18 <lzma_raw_encoder@@XZ_5.0+0xb8>
    b768:	ldr	x8, [sp, #8]
    b76c:	str	x0, [x8]
    b770:	ldr	x8, [sp, #8]
    b774:	ldr	x8, [x8]
    b778:	cbnz	x8, b788 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2c0>
    b77c:	mov	w8, #0x8                   	// #8
    b780:	stur	w8, [x29, #-4]
    b784:	b	b7b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2f0>
    b788:	ldr	x8, [sp, #8]
    b78c:	ldr	x0, [x8]
    b790:	bl	73e4 <lzma_alone_encoder@@XZ_5.0+0x484>
    b794:	ldr	x8, [sp]
    b798:	str	x0, [x8]
    b79c:	ldr	x8, [sp]
    b7a0:	ldr	x8, [x8]
    b7a4:	cbnz	x8, b7b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2ec>
    b7a8:	mov	w8, #0x5                   	// #5
    b7ac:	stur	w8, [x29, #-4]
    b7b0:	b	b7b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2f0>
    b7b4:	stur	wzr, [x29, #-4]
    b7b8:	ldur	w0, [x29, #-4]
    b7bc:	ldp	x29, x30, [sp, #48]
    b7c0:	add	sp, sp, #0x40
    b7c4:	ret
    b7c8:	sub	sp, sp, #0x20
    b7cc:	stp	x29, x30, [sp, #16]
    b7d0:	add	x29, sp, #0x10
    b7d4:	mov	x8, xzr
    b7d8:	str	x0, [sp, #8]
    b7dc:	ldr	x0, [sp, #8]
    b7e0:	mov	x1, x8
    b7e4:	bl	32a0 <pthread_mutex_init@plt>
    b7e8:	ldp	x29, x30, [sp, #16]
    b7ec:	add	sp, sp, #0x20
    b7f0:	ret
    b7f4:	sub	sp, sp, #0x40
    b7f8:	stp	x29, x30, [sp, #48]
    b7fc:	add	x29, sp, #0x30
    b800:	mov	w8, #0x1                   	// #1
    b804:	add	x1, sp, #0x10
    b808:	stur	x0, [x29, #-16]
    b80c:	mov	w0, w8
    b810:	bl	3150 <clock_gettime@plt>
    b814:	cbnz	w0, b870 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3a8>
    b818:	add	x0, sp, #0x8
    b81c:	bl	33d0 <pthread_condattr_init@plt>
    b820:	cbnz	w0, b870 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3a8>
    b824:	add	x0, sp, #0x8
    b828:	mov	w1, #0x1                   	// #1
    b82c:	bl	3490 <pthread_condattr_setclock@plt>
    b830:	str	w0, [sp, #4]
    b834:	ldr	w8, [sp, #4]
    b838:	cbnz	w8, b84c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x384>
    b83c:	ldur	x0, [x29, #-16]
    b840:	add	x1, sp, #0x8
    b844:	bl	3420 <pthread_cond_init@plt>
    b848:	str	w0, [sp, #4]
    b84c:	add	x0, sp, #0x8
    b850:	bl	31e0 <pthread_condattr_destroy@plt>
    b854:	ldr	w8, [sp, #4]
    b858:	cbnz	w8, b870 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3a8>
    b85c:	ldur	x8, [x29, #-16]
    b860:	mov	w9, #0x1                   	// #1
    b864:	str	w9, [x8, #48]
    b868:	stur	wzr, [x29, #-4]
    b86c:	b	b88c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3c4>
    b870:	ldur	x8, [x29, #-16]
    b874:	str	wzr, [x8, #48]
    b878:	ldur	x0, [x29, #-16]
    b87c:	mov	x8, xzr
    b880:	mov	x1, x8
    b884:	bl	3420 <pthread_cond_init@plt>
    b888:	stur	w0, [x29, #-4]
    b88c:	ldur	w0, [x29, #-4]
    b890:	ldp	x29, x30, [sp, #48]
    b894:	add	sp, sp, #0x40
    b898:	ret
    b89c:	sub	sp, sp, #0x20
    b8a0:	stp	x29, x30, [sp, #16]
    b8a4:	add	x29, sp, #0x10
    b8a8:	str	x0, [sp, #8]
    b8ac:	ldr	x0, [sp, #8]
    b8b0:	bl	3410 <pthread_mutex_destroy@plt>
    b8b4:	str	w0, [sp, #4]
    b8b8:	ldp	x29, x30, [sp, #16]
    b8bc:	add	sp, sp, #0x20
    b8c0:	ret
    b8c4:	sub	sp, sp, #0xc0
    b8c8:	stp	x29, x30, [sp, #176]
    b8cc:	add	x29, sp, #0xb0
    b8d0:	ldr	w8, [x29, #16]
    b8d4:	stur	x0, [x29, #-16]
    b8d8:	stur	x1, [x29, #-24]
    b8dc:	stur	x2, [x29, #-32]
    b8e0:	stur	x3, [x29, #-40]
    b8e4:	stur	x4, [x29, #-48]
    b8e8:	stur	x5, [x29, #-56]
    b8ec:	stur	x6, [x29, #-64]
    b8f0:	stur	x7, [x29, #-72]
    b8f4:	stur	w8, [x29, #-76]
    b8f8:	ldur	x9, [x29, #-16]
    b8fc:	str	x9, [sp, #88]
    b900:	ldr	x9, [sp, #88]
    b904:	ldr	w8, [x9]
    b908:	subs	w8, w8, #0x0
    b90c:	mov	w9, w8
    b910:	ubfx	x9, x9, #0, #32
    b914:	cmp	x9, #0x3
    b918:	str	x9, [sp, #24]
    b91c:	b.hi	bd14 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x84c>  // b.pmore
    b920:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    b924:	add	x8, x8, #0xa40
    b928:	ldr	x11, [sp, #24]
    b92c:	ldrsw	x10, [x8, x11, lsl #2]
    b930:	add	x9, x8, x10
    b934:	br	x9
    b938:	ldr	x8, [sp, #88]
    b93c:	add	x0, x8, #0xe8
    b940:	ldr	x8, [sp, #88]
    b944:	add	x1, x8, #0xf8
    b948:	ldur	x3, [x29, #-56]
    b94c:	ldur	x4, [x29, #-64]
    b950:	ldur	x5, [x29, #-72]
    b954:	mov	x2, #0xc                   	// #12
    b958:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    b95c:	ldr	x8, [sp, #88]
    b960:	ldr	x8, [x8, #248]
    b964:	cmp	x8, #0xc
    b968:	b.cs	b974 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x4ac>  // b.hs, b.nlast
    b96c:	stur	wzr, [x29, #-4]
    b970:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    b974:	ldr	x8, [sp, #88]
    b978:	str	xzr, [x8, #248]
    b97c:	ldr	x8, [sp, #88]
    b980:	mov	w9, #0x1                   	// #1
    b984:	str	w9, [x8]
    b988:	str	xzr, [sp, #80]
    b98c:	str	xzr, [sp, #72]
    b990:	str	wzr, [sp, #68]
    b994:	mov	w8, #0x0                   	// #0
    b998:	strb	w8, [sp, #67]
    b99c:	str	wzr, [sp, #44]
    b9a0:	ldr	w8, [sp, #44]
    b9a4:	cbz	w8, b9c8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x500>
    b9a8:	mov	w8, wzr
    b9ac:	ldr	x9, [sp, #88]
    b9b0:	add	x0, x9, #0x168
    b9b4:	str	w8, [sp, #20]
    b9b8:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    b9bc:	ldr	w8, [sp, #20]
    b9c0:	str	w8, [sp, #16]
    b9c4:	b	b9e4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x51c>
    b9c8:	mov	w8, #0x1                   	// #1
    b9cc:	ldr	x9, [sp, #88]
    b9d0:	add	x0, x9, #0x168
    b9d4:	str	w8, [sp, #12]
    b9d8:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    b9dc:	ldr	w8, [sp, #12]
    b9e0:	str	w8, [sp, #16]
    b9e4:	ldr	w8, [sp, #16]
    b9e8:	cbz	w8, ba5c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x594>
    b9ec:	str	wzr, [sp, #40]
    b9f0:	ldr	w8, [sp, #40]
    b9f4:	cmp	w8, #0x0
    b9f8:	cset	w8, ne  // ne = any
    b9fc:	eor	w8, w8, #0x1
    ba00:	tbnz	w8, #0, ba08 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x540>
    ba04:	b	ba50 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x588>
    ba08:	ldr	x8, [sp, #88]
    ba0c:	ldr	w9, [x8, #308]
    ba10:	str	w9, [sp, #68]
    ba14:	ldr	w9, [sp, #68]
    ba18:	cbz	w9, ba20 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x558>
    ba1c:	b	ba50 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x588>
    ba20:	ldr	x8, [sp, #88]
    ba24:	add	x0, x8, #0x100
    ba28:	ldur	x1, [x29, #-56]
    ba2c:	ldur	x2, [x29, #-64]
    ba30:	ldur	x3, [x29, #-72]
    ba34:	add	x4, sp, #0x50
    ba38:	add	x5, sp, #0x48
    ba3c:	bl	ae10 <lzma_vli_encode@@XZ_5.0+0x538>
    ba40:	str	w0, [sp, #68]
    ba44:	mov	w8, #0x1                   	// #1
    ba48:	str	w8, [sp, #40]
    ba4c:	b	b9f0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x528>
    ba50:	mov	w8, #0x1                   	// #1
    ba54:	str	w8, [sp, #44]
    ba58:	b	b9a0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x4d8>
    ba5c:	ldr	w8, [sp, #68]
    ba60:	cmp	w8, #0x1
    ba64:	b.ne	ba9c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5d4>  // b.any
    ba68:	ldr	x8, [sp, #88]
    ba6c:	ldr	x0, [x8, #96]
    ba70:	ldur	x1, [x29, #-24]
    ba74:	ldr	x2, [sp, #80]
    ba78:	ldr	x3, [sp, #72]
    ba7c:	bl	3300 <lzma_index_append@plt>
    ba80:	str	w0, [sp, #68]
    ba84:	ldur	x8, [x29, #-64]
    ba88:	ldr	x8, [x8]
    ba8c:	ldur	x9, [x29, #-72]
    ba90:	cmp	x8, x9
    ba94:	b.cs	ba9c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5d4>  // b.hs, b.nlast
    ba98:	b	b99c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x4d4>
    ba9c:	ldr	w8, [sp, #68]
    baa0:	cbz	w8, bac0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5f8>
    baa4:	ldr	x0, [sp, #88]
    baa8:	mov	w8, wzr
    baac:	and	w1, w8, #0x1
    bab0:	bl	c1a8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xce0>
    bab4:	ldr	w8, [sp, #68]
    bab8:	stur	w8, [x29, #-4]
    babc:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bac0:	ldr	x0, [sp, #88]
    bac4:	ldur	x1, [x29, #-24]
    bac8:	ldur	x2, [x29, #-32]
    bacc:	ldur	x3, [x29, #-40]
    bad0:	ldur	x4, [x29, #-48]
    bad4:	ldur	w5, [x29, #-76]
    bad8:	bl	c488 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xfc0>
    badc:	str	w0, [sp, #68]
    bae0:	ldr	w8, [sp, #68]
    bae4:	cbz	w8, bb04 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x63c>
    bae8:	ldr	x0, [sp, #88]
    baec:	mov	w8, wzr
    baf0:	and	w1, w8, #0x1
    baf4:	bl	c1a8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xce0>
    baf8:	ldr	w8, [sp, #68]
    bafc:	stur	w8, [x29, #-4]
    bb00:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bb04:	ldur	x8, [x29, #-40]
    bb08:	ldr	x8, [x8]
    bb0c:	ldur	x9, [x29, #-48]
    bb10:	cmp	x8, x9
    bb14:	b.ne	bb7c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x6b4>  // b.any
    bb18:	ldur	w8, [x29, #-76]
    bb1c:	cbnz	w8, bb28 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x660>
    bb20:	stur	wzr, [x29, #-4]
    bb24:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bb28:	ldur	w8, [x29, #-76]
    bb2c:	cmp	w8, #0x4
    bb30:	b.ne	bb40 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x678>  // b.any
    bb34:	mov	w8, #0x1                   	// #1
    bb38:	stur	w8, [x29, #-4]
    bb3c:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bb40:	ldr	x8, [sp, #88]
    bb44:	add	x0, x8, #0x100
    bb48:	bl	c78c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x12c4>
    bb4c:	tbnz	w0, #0, bb54 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x68c>
    bb50:	b	bb7c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x6b4>
    bb54:	ldur	w8, [x29, #-76]
    bb58:	cmp	w8, #0x3
    bb5c:	b.ne	bb64 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x69c>  // b.any
    bb60:	b	bbd8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x710>
    bb64:	ldur	w8, [x29, #-76]
    bb68:	cmp	w8, #0x2
    bb6c:	b.ne	bb7c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x6b4>  // b.any
    bb70:	mov	w8, #0x1                   	// #1
    bb74:	stur	w8, [x29, #-4]
    bb78:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bb7c:	ldur	x8, [x29, #-64]
    bb80:	ldr	x8, [x8]
    bb84:	ldur	x9, [x29, #-72]
    bb88:	cmp	x8, x9
    bb8c:	b.ne	bb98 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x6d0>  // b.any
    bb90:	stur	wzr, [x29, #-4]
    bb94:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bb98:	ldr	x0, [sp, #88]
    bb9c:	ldur	x8, [x29, #-40]
    bba0:	ldr	x8, [x8]
    bba4:	ldur	x9, [x29, #-48]
    bba8:	cmp	x8, x9
    bbac:	cset	w10, cc  // cc = lo, ul, last
    bbb0:	add	x1, sp, #0x30
    bbb4:	add	x2, sp, #0x43
    bbb8:	and	w3, w10, #0x1
    bbbc:	bl	c7b0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x12e8>
    bbc0:	tbnz	w0, #0, bbc8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x700>
    bbc4:	b	bbd4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x70c>
    bbc8:	mov	w8, #0x20                  	// #32
    bbcc:	stur	w8, [x29, #-4]
    bbd0:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bbd4:	b	b99c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x4d4>
    bbd8:	ldr	x8, [sp, #88]
    bbdc:	add	x0, x8, #0x68
    bbe0:	ldur	x1, [x29, #-24]
    bbe4:	ldr	x8, [sp, #88]
    bbe8:	ldr	x2, [x8, #96]
    bbec:	bl	9208 <lzma_filter_flags_encode@@XZ_5.0+0x158>
    bbf0:	str	w0, [sp, #36]
    bbf4:	ldr	w9, [sp, #36]
    bbf8:	cbz	w9, bc08 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x740>
    bbfc:	ldr	w8, [sp, #36]
    bc00:	stur	w8, [x29, #-4]
    bc04:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bc08:	ldr	x8, [sp, #88]
    bc0c:	mov	w9, #0x2                   	// #2
    bc10:	str	w9, [x8]
    bc14:	ldr	x8, [sp, #88]
    bc18:	ldr	x0, [x8, #96]
    bc1c:	bl	3510 <lzma_index_size@plt>
    bc20:	add	x8, x0, #0xc
    bc24:	ldr	x10, [sp, #88]
    bc28:	ldr	x11, [x10, #352]
    bc2c:	add	x8, x11, x8
    bc30:	str	x8, [x10, #352]
    bc34:	ldr	x8, [sp, #88]
    bc38:	ldr	x8, [x8, #128]
    bc3c:	ldr	x9, [sp, #88]
    bc40:	ldr	x0, [x9, #104]
    bc44:	ldur	x1, [x29, #-24]
    bc48:	ldur	x5, [x29, #-56]
    bc4c:	ldur	x6, [x29, #-64]
    bc50:	ldur	x7, [x29, #-72]
    bc54:	mov	x9, xzr
    bc58:	mov	x2, x9
    bc5c:	mov	x3, x9
    bc60:	mov	x4, x9
    bc64:	mov	x9, sp
    bc68:	str	wzr, [x9]
    bc6c:	blr	x8
    bc70:	str	w0, [sp, #32]
    bc74:	ldr	w10, [sp, #32]
    bc78:	cmp	w10, #0x1
    bc7c:	b.eq	bc8c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x7c4>  // b.none
    bc80:	ldr	w8, [sp, #32]
    bc84:	stur	w8, [x29, #-4]
    bc88:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bc8c:	ldr	x8, [sp, #88]
    bc90:	ldr	x0, [x8, #96]
    bc94:	bl	3510 <lzma_index_size@plt>
    bc98:	ldr	x8, [sp, #88]
    bc9c:	str	x0, [x8, #184]
    bca0:	ldr	x8, [sp, #88]
    bca4:	add	x0, x8, #0xb0
    bca8:	ldr	x8, [sp, #88]
    bcac:	add	x1, x8, #0xe8
    bcb0:	bl	3210 <lzma_stream_footer_encode@plt>
    bcb4:	cbz	w0, bcc4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x7fc>
    bcb8:	mov	w8, #0xb                   	// #11
    bcbc:	stur	w8, [x29, #-4]
    bcc0:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bcc4:	ldr	x8, [sp, #88]
    bcc8:	mov	w9, #0x3                   	// #3
    bccc:	str	w9, [x8]
    bcd0:	ldr	x8, [sp, #88]
    bcd4:	add	x0, x8, #0xe8
    bcd8:	ldr	x8, [sp, #88]
    bcdc:	add	x1, x8, #0xf8
    bce0:	ldur	x3, [x29, #-56]
    bce4:	ldur	x4, [x29, #-64]
    bce8:	ldur	x5, [x29, #-72]
    bcec:	mov	x2, #0xc                   	// #12
    bcf0:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    bcf4:	ldr	x8, [sp, #88]
    bcf8:	ldr	x8, [x8, #248]
    bcfc:	mov	w9, wzr
    bd00:	mov	w10, #0x1                   	// #1
    bd04:	cmp	x8, #0xc
    bd08:	csel	w9, w9, w10, cc  // cc = lo, ul, last
    bd0c:	stur	w9, [x29, #-4]
    bd10:	b	bd1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x854>
    bd14:	mov	w8, #0xb                   	// #11
    bd18:	stur	w8, [x29, #-4]
    bd1c:	ldur	w0, [x29, #-4]
    bd20:	ldp	x29, x30, [sp, #176]
    bd24:	add	sp, sp, #0xc0
    bd28:	ret
    bd2c:	sub	sp, sp, #0x30
    bd30:	stp	x29, x30, [sp, #32]
    bd34:	add	x29, sp, #0x20
    bd38:	stur	x0, [x29, #-8]
    bd3c:	str	x1, [sp, #16]
    bd40:	ldur	x8, [x29, #-8]
    bd44:	str	x8, [sp, #8]
    bd48:	ldr	x0, [sp, #8]
    bd4c:	ldr	x1, [sp, #16]
    bd50:	bl	c00c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb44>
    bd54:	ldr	x8, [sp, #8]
    bd58:	add	x0, x8, #0x100
    bd5c:	ldr	x1, [sp, #16]
    bd60:	bl	ac88 <lzma_vli_encode@@XZ_5.0+0x3b0>
    bd64:	str	xzr, [sp]
    bd68:	ldr	x8, [sp, #8]
    bd6c:	mov	x9, #0x10                  	// #16
    bd70:	add	x8, x8, #0x10
    bd74:	ldr	x10, [sp]
    bd78:	mul	x9, x9, x10
    bd7c:	ldr	x8, [x8, x9]
    bd80:	mov	x9, #0xffffffffffffffff    	// #-1
    bd84:	cmp	x8, x9
    bd88:	b.eq	bdc0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x8f8>  // b.none
    bd8c:	ldr	x8, [sp, #8]
    bd90:	mov	x9, #0x10                  	// #16
    bd94:	add	x8, x8, #0x10
    bd98:	ldr	x10, [sp]
    bd9c:	mul	x9, x9, x10
    bda0:	add	x8, x8, x9
    bda4:	ldr	x0, [x8, #8]
    bda8:	ldr	x1, [sp, #16]
    bdac:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    bdb0:	ldr	x8, [sp]
    bdb4:	add	x8, x8, #0x1
    bdb8:	str	x8, [sp]
    bdbc:	b	bd68 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x8a0>
    bdc0:	ldr	x8, [sp, #8]
    bdc4:	add	x0, x8, #0x68
    bdc8:	ldr	x1, [sp, #16]
    bdcc:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    bdd0:	ldr	x8, [sp, #8]
    bdd4:	ldr	x0, [x8, #96]
    bdd8:	ldr	x1, [sp, #16]
    bddc:	bl	33e0 <lzma_index_end@plt>
    bde0:	ldr	x8, [sp, #8]
    bde4:	add	x0, x8, #0x198
    bde8:	bl	d160 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1c98>
    bdec:	ldr	x8, [sp, #8]
    bdf0:	add	x0, x8, #0x168
    bdf4:	bl	b89c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3d4>
    bdf8:	ldr	x0, [sp, #8]
    bdfc:	ldr	x1, [sp, #16]
    be00:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    be04:	ldp	x29, x30, [sp, #32]
    be08:	add	sp, sp, #0x30
    be0c:	ret
    be10:	sub	sp, sp, #0x60
    be14:	stp	x29, x30, [sp, #80]
    be18:	add	x29, sp, #0x50
    be1c:	stur	x0, [x29, #-8]
    be20:	stur	x1, [x29, #-16]
    be24:	stur	x2, [x29, #-24]
    be28:	ldur	x8, [x29, #-8]
    be2c:	stur	x8, [x29, #-32]
    be30:	stur	wzr, [x29, #-36]
    be34:	ldur	w8, [x29, #-36]
    be38:	cbz	w8, be5c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x994>
    be3c:	mov	w8, wzr
    be40:	ldur	x9, [x29, #-32]
    be44:	add	x0, x9, #0x168
    be48:	str	w8, [sp, #20]
    be4c:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    be50:	ldr	w8, [sp, #20]
    be54:	str	w8, [sp, #16]
    be58:	b	be78 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x9b0>
    be5c:	mov	w8, #0x1                   	// #1
    be60:	ldur	x9, [x29, #-32]
    be64:	add	x0, x9, #0x168
    be68:	str	w8, [sp, #12]
    be6c:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    be70:	ldr	w8, [sp, #12]
    be74:	str	w8, [sp, #16]
    be78:	ldr	w8, [sp, #16]
    be7c:	cbz	w8, c000 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb38>
    be80:	str	wzr, [sp, #40]
    be84:	ldr	w8, [sp, #40]
    be88:	cmp	w8, #0x0
    be8c:	cset	w8, ne  // ne = any
    be90:	eor	w8, w8, #0x1
    be94:	tbnz	w8, #0, be9c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x9d4>
    be98:	b	bff4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb2c>
    be9c:	ldur	x8, [x29, #-32]
    bea0:	ldr	x8, [x8, #344]
    bea4:	ldur	x9, [x29, #-16]
    bea8:	str	x8, [x9]
    beac:	ldur	x8, [x29, #-32]
    beb0:	ldr	x8, [x8, #352]
    beb4:	ldur	x9, [x29, #-24]
    beb8:	str	x8, [x9]
    bebc:	str	xzr, [sp, #32]
    bec0:	ldr	x8, [sp, #32]
    bec4:	ldur	x9, [x29, #-32]
    bec8:	ldr	w10, [x9, #324]
    becc:	mov	w9, w10
    bed0:	cmp	x8, x9
    bed4:	b.cs	bfe8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb20>  // b.hs, b.nlast
    bed8:	str	wzr, [sp, #28]
    bedc:	ldr	w8, [sp, #28]
    bee0:	cbz	w8, bf18 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xa50>
    bee4:	mov	w8, wzr
    bee8:	ldur	x9, [x29, #-32]
    beec:	ldr	x9, [x9, #312]
    bef0:	ldr	x10, [sp, #32]
    bef4:	mov	x11, #0x1d0                 	// #464
    bef8:	mul	x10, x11, x10
    befc:	add	x9, x9, x10
    bf00:	add	x0, x9, #0x160
    bf04:	str	w8, [sp, #8]
    bf08:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    bf0c:	ldr	w8, [sp, #8]
    bf10:	str	w8, [sp, #4]
    bf14:	b	bf48 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xa80>
    bf18:	mov	w8, #0x1                   	// #1
    bf1c:	ldur	x9, [x29, #-32]
    bf20:	ldr	x9, [x9, #312]
    bf24:	ldr	x10, [sp, #32]
    bf28:	mov	x11, #0x1d0                 	// #464
    bf2c:	mul	x10, x11, x10
    bf30:	add	x9, x9, x10
    bf34:	add	x0, x9, #0x160
    bf38:	str	w8, [sp]
    bf3c:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    bf40:	ldr	w8, [sp]
    bf44:	str	w8, [sp, #4]
    bf48:	ldr	w8, [sp, #4]
    bf4c:	cbz	w8, bfd8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb10>
    bf50:	str	wzr, [sp, #24]
    bf54:	ldr	w8, [sp, #24]
    bf58:	cmp	w8, #0x0
    bf5c:	cset	w8, ne  // ne = any
    bf60:	eor	w8, w8, #0x1
    bf64:	tbnz	w8, #0, bf6c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xaa4>
    bf68:	b	bfcc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb04>
    bf6c:	ldur	x8, [x29, #-32]
    bf70:	ldr	x8, [x8, #312]
    bf74:	ldr	x9, [sp, #32]
    bf78:	mov	x10, #0x1d0                 	// #464
    bf7c:	mul	x9, x10, x9
    bf80:	add	x8, x8, x9
    bf84:	ldr	x8, [x8, #48]
    bf88:	ldur	x9, [x29, #-16]
    bf8c:	ldr	x11, [x9]
    bf90:	add	x8, x11, x8
    bf94:	str	x8, [x9]
    bf98:	ldur	x8, [x29, #-32]
    bf9c:	ldr	x8, [x8, #312]
    bfa0:	ldr	x9, [sp, #32]
    bfa4:	mul	x9, x10, x9
    bfa8:	add	x8, x8, x9
    bfac:	ldr	x8, [x8, #56]
    bfb0:	ldur	x9, [x29, #-24]
    bfb4:	ldr	x10, [x9]
    bfb8:	add	x8, x10, x8
    bfbc:	str	x8, [x9]
    bfc0:	mov	w8, #0x1                   	// #1
    bfc4:	str	w8, [sp, #24]
    bfc8:	b	bf54 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xa8c>
    bfcc:	mov	w8, #0x1                   	// #1
    bfd0:	str	w8, [sp, #28]
    bfd4:	b	bedc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xa14>
    bfd8:	ldr	x8, [sp, #32]
    bfdc:	add	x8, x8, #0x1
    bfe0:	str	x8, [sp, #32]
    bfe4:	b	bec0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x9f8>
    bfe8:	mov	w8, #0x1                   	// #1
    bfec:	str	w8, [sp, #40]
    bff0:	b	be84 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x9bc>
    bff4:	mov	w8, #0x1                   	// #1
    bff8:	stur	w8, [x29, #-36]
    bffc:	b	be34 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x96c>
    c000:	ldp	x29, x30, [sp, #80]
    c004:	add	sp, sp, #0x60
    c008:	ret
    c00c:	sub	sp, sp, #0x40
    c010:	stp	x29, x30, [sp, #48]
    c014:	add	x29, sp, #0x30
    c018:	stur	x0, [x29, #-8]
    c01c:	stur	x1, [x29, #-16]
    c020:	stur	wzr, [x29, #-20]
    c024:	ldur	w8, [x29, #-20]
    c028:	ldur	x9, [x29, #-8]
    c02c:	ldr	w10, [x9, #324]
    c030:	cmp	w8, w10
    c034:	b.cs	c13c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xc74>  // b.hs, b.nlast
    c038:	str	wzr, [sp, #24]
    c03c:	ldr	w8, [sp, #24]
    c040:	cbz	w8, c07c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xbb4>
    c044:	mov	w8, wzr
    c048:	ldur	x9, [x29, #-8]
    c04c:	ldr	x9, [x9, #312]
    c050:	ldur	w10, [x29, #-20]
    c054:	mov	w11, w10
    c058:	mov	x12, #0x1d0                 	// #464
    c05c:	mul	x11, x12, x11
    c060:	add	x9, x9, x11
    c064:	add	x0, x9, #0x160
    c068:	str	w8, [sp, #8]
    c06c:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    c070:	ldr	w8, [sp, #8]
    c074:	str	w8, [sp, #4]
    c078:	b	c0b0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xbe8>
    c07c:	mov	w8, #0x1                   	// #1
    c080:	ldur	x9, [x29, #-8]
    c084:	ldr	x9, [x9, #312]
    c088:	ldur	w10, [x29, #-20]
    c08c:	mov	w11, w10
    c090:	mov	x12, #0x1d0                 	// #464
    c094:	mul	x11, x12, x11
    c098:	add	x9, x9, x11
    c09c:	add	x0, x9, #0x160
    c0a0:	str	w8, [sp]
    c0a4:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    c0a8:	ldr	w8, [sp]
    c0ac:	str	w8, [sp, #4]
    c0b0:	ldr	w8, [sp, #4]
    c0b4:	cbz	w8, c12c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xc64>
    c0b8:	str	wzr, [sp, #20]
    c0bc:	ldr	w8, [sp, #20]
    c0c0:	cmp	w8, #0x0
    c0c4:	cset	w8, ne  // ne = any
    c0c8:	eor	w8, w8, #0x1
    c0cc:	tbnz	w8, #0, c0d4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xc0c>
    c0d0:	b	c120 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xc58>
    c0d4:	ldur	x8, [x29, #-8]
    c0d8:	ldr	x8, [x8, #312]
    c0dc:	ldur	w9, [x29, #-20]
    c0e0:	mov	w10, w9
    c0e4:	mov	x11, #0x1d0                 	// #464
    c0e8:	mul	x10, x11, x10
    c0ec:	mov	w9, #0x4                   	// #4
    c0f0:	str	w9, [x8, x10]
    c0f4:	ldur	x8, [x29, #-8]
    c0f8:	ldr	x8, [x8, #312]
    c0fc:	ldur	w9, [x29, #-20]
    c100:	mov	w10, w9
    c104:	mul	x10, x11, x10
    c108:	add	x8, x8, x10
    c10c:	add	x0, x8, #0x190
    c110:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    c114:	mov	w8, #0x1                   	// #1
    c118:	str	w8, [sp, #20]
    c11c:	b	c0bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xbf4>
    c120:	mov	w8, #0x1                   	// #1
    c124:	str	w8, [sp, #24]
    c128:	b	c03c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb74>
    c12c:	ldur	w8, [x29, #-20]
    c130:	add	w8, w8, #0x1
    c134:	stur	w8, [x29, #-20]
    c138:	b	c024 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb5c>
    c13c:	str	wzr, [sp, #16]
    c140:	ldr	w8, [sp, #16]
    c144:	ldur	x9, [x29, #-8]
    c148:	ldr	w10, [x9, #324]
    c14c:	cmp	w8, w10
    c150:	b.cs	c18c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xcc4>  // b.hs, b.nlast
    c154:	ldur	x8, [x29, #-8]
    c158:	ldr	x8, [x8, #312]
    c15c:	ldr	w9, [sp, #16]
    c160:	mov	w10, w9
    c164:	mov	x11, #0x1d0                 	// #464
    c168:	mul	x10, x11, x10
    c16c:	add	x8, x8, x10
    c170:	ldr	x0, [x8, #456]
    c174:	bl	d940 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2478>
    c178:	str	w0, [sp, #12]
    c17c:	ldr	w8, [sp, #16]
    c180:	add	w8, w8, #0x1
    c184:	str	w8, [sp, #16]
    c188:	b	c140 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xc78>
    c18c:	ldur	x8, [x29, #-8]
    c190:	ldr	x0, [x8, #312]
    c194:	ldur	x1, [x29, #-16]
    c198:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    c19c:	ldp	x29, x30, [sp, #48]
    c1a0:	add	sp, sp, #0x40
    c1a4:	ret
    c1a8:	sub	sp, sp, #0x50
    c1ac:	stp	x29, x30, [sp, #64]
    c1b0:	add	x29, sp, #0x40
    c1b4:	mov	w8, #0x1                   	// #1
    c1b8:	stur	x0, [x29, #-8]
    c1bc:	and	w8, w1, w8
    c1c0:	sturb	w8, [x29, #-9]
    c1c4:	stur	wzr, [x29, #-16]
    c1c8:	ldur	w8, [x29, #-16]
    c1cc:	ldur	x9, [x29, #-8]
    c1d0:	ldr	w10, [x9, #324]
    c1d4:	cmp	w8, w10
    c1d8:	b.cs	c2e0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xe18>  // b.hs, b.nlast
    c1dc:	stur	wzr, [x29, #-20]
    c1e0:	ldur	w8, [x29, #-20]
    c1e4:	cbz	w8, c220 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xd58>
    c1e8:	mov	w8, wzr
    c1ec:	ldur	x9, [x29, #-8]
    c1f0:	ldr	x9, [x9, #312]
    c1f4:	ldur	w10, [x29, #-16]
    c1f8:	mov	w11, w10
    c1fc:	mov	x12, #0x1d0                 	// #464
    c200:	mul	x11, x12, x11
    c204:	add	x9, x9, x11
    c208:	add	x0, x9, #0x160
    c20c:	str	w8, [sp, #24]
    c210:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    c214:	ldr	w8, [sp, #24]
    c218:	str	w8, [sp, #20]
    c21c:	b	c254 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xd8c>
    c220:	mov	w8, #0x1                   	// #1
    c224:	ldur	x9, [x29, #-8]
    c228:	ldr	x9, [x9, #312]
    c22c:	ldur	w10, [x29, #-16]
    c230:	mov	w11, w10
    c234:	mov	x12, #0x1d0                 	// #464
    c238:	mul	x11, x12, x11
    c23c:	add	x9, x9, x11
    c240:	add	x0, x9, #0x160
    c244:	str	w8, [sp, #16]
    c248:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    c24c:	ldr	w8, [sp, #16]
    c250:	str	w8, [sp, #20]
    c254:	ldr	w8, [sp, #20]
    c258:	cbz	w8, c2d0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xe08>
    c25c:	stur	wzr, [x29, #-24]
    c260:	ldur	w8, [x29, #-24]
    c264:	cmp	w8, #0x0
    c268:	cset	w8, ne  // ne = any
    c26c:	eor	w8, w8, #0x1
    c270:	tbnz	w8, #0, c278 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xdb0>
    c274:	b	c2c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xdfc>
    c278:	ldur	x8, [x29, #-8]
    c27c:	ldr	x8, [x8, #312]
    c280:	ldur	w9, [x29, #-16]
    c284:	mov	w10, w9
    c288:	mov	x11, #0x1d0                 	// #464
    c28c:	mul	x10, x11, x10
    c290:	mov	w9, #0x3                   	// #3
    c294:	str	w9, [x8, x10]
    c298:	ldur	x8, [x29, #-8]
    c29c:	ldr	x8, [x8, #312]
    c2a0:	ldur	w9, [x29, #-16]
    c2a4:	mov	w10, w9
    c2a8:	mul	x10, x11, x10
    c2ac:	add	x8, x8, x10
    c2b0:	add	x0, x8, #0x190
    c2b4:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    c2b8:	mov	w8, #0x1                   	// #1
    c2bc:	stur	w8, [x29, #-24]
    c2c0:	b	c260 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xd98>
    c2c4:	mov	w8, #0x1                   	// #1
    c2c8:	stur	w8, [x29, #-20]
    c2cc:	b	c1e0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xd18>
    c2d0:	ldur	w8, [x29, #-16]
    c2d4:	add	w8, w8, #0x1
    c2d8:	stur	w8, [x29, #-16]
    c2dc:	b	c1c8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xd00>
    c2e0:	ldurb	w8, [x29, #-9]
    c2e4:	tbnz	w8, #0, c2ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xe24>
    c2e8:	b	c42c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf64>
    c2ec:	stur	wzr, [x29, #-28]
    c2f0:	ldur	w8, [x29, #-28]
    c2f4:	ldur	x9, [x29, #-8]
    c2f8:	ldr	w10, [x9, #324]
    c2fc:	cmp	w8, w10
    c300:	b.cs	c42c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf64>  // b.hs, b.nlast
    c304:	str	wzr, [sp, #32]
    c308:	ldr	w8, [sp, #32]
    c30c:	cbz	w8, c348 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xe80>
    c310:	mov	w8, wzr
    c314:	ldur	x9, [x29, #-8]
    c318:	ldr	x9, [x9, #312]
    c31c:	ldur	w10, [x29, #-28]
    c320:	mov	w11, w10
    c324:	mov	x12, #0x1d0                 	// #464
    c328:	mul	x11, x12, x11
    c32c:	add	x9, x9, x11
    c330:	add	x0, x9, #0x160
    c334:	str	w8, [sp, #12]
    c338:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    c33c:	ldr	w8, [sp, #12]
    c340:	str	w8, [sp, #8]
    c344:	b	c37c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xeb4>
    c348:	mov	w8, #0x1                   	// #1
    c34c:	ldur	x9, [x29, #-8]
    c350:	ldr	x9, [x9, #312]
    c354:	ldur	w10, [x29, #-28]
    c358:	mov	w11, w10
    c35c:	mov	x12, #0x1d0                 	// #464
    c360:	mul	x11, x12, x11
    c364:	add	x9, x9, x11
    c368:	add	x0, x9, #0x160
    c36c:	str	w8, [sp, #4]
    c370:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    c374:	ldr	w8, [sp, #4]
    c378:	str	w8, [sp, #8]
    c37c:	ldr	w8, [sp, #8]
    c380:	cbz	w8, c41c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf54>
    c384:	str	wzr, [sp, #28]
    c388:	ldr	w8, [sp, #28]
    c38c:	cmp	w8, #0x0
    c390:	cset	w8, ne  // ne = any
    c394:	eor	w8, w8, #0x1
    c398:	tbnz	w8, #0, c3a0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xed8>
    c39c:	b	c410 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf48>
    c3a0:	ldur	x8, [x29, #-8]
    c3a4:	ldr	x8, [x8, #312]
    c3a8:	ldur	w9, [x29, #-28]
    c3ac:	mov	w10, w9
    c3b0:	mov	x11, #0x1d0                 	// #464
    c3b4:	mul	x10, x11, x10
    c3b8:	ldr	w9, [x8, x10]
    c3bc:	cbz	w9, c404 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf3c>
    c3c0:	ldur	x8, [x29, #-8]
    c3c4:	ldr	x8, [x8, #312]
    c3c8:	ldur	w9, [x29, #-28]
    c3cc:	mov	w10, w9
    c3d0:	mov	x11, #0x1d0                 	// #464
    c3d4:	mul	x10, x11, x10
    c3d8:	add	x8, x8, x10
    c3dc:	add	x0, x8, #0x190
    c3e0:	ldur	x8, [x29, #-8]
    c3e4:	ldr	x8, [x8, #312]
    c3e8:	ldur	w9, [x29, #-28]
    c3ec:	mov	w10, w9
    c3f0:	mul	x10, x11, x10
    c3f4:	add	x8, x8, x10
    c3f8:	add	x1, x8, #0x160
    c3fc:	bl	d1c0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1cf8>
    c400:	b	c3a0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xed8>
    c404:	mov	w8, #0x1                   	// #1
    c408:	str	w8, [sp, #28]
    c40c:	b	c388 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xec0>
    c410:	mov	w8, #0x1                   	// #1
    c414:	str	w8, [sp, #32]
    c418:	b	c308 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xe40>
    c41c:	ldur	w8, [x29, #-28]
    c420:	add	w8, w8, #0x1
    c424:	stur	w8, [x29, #-28]
    c428:	b	c2f0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xe28>
    c42c:	ldp	x29, x30, [sp, #64]
    c430:	add	sp, sp, #0x50
    c434:	ret
    c438:	sub	sp, sp, #0x20
    c43c:	stp	x29, x30, [sp, #16]
    c440:	add	x29, sp, #0x10
    c444:	str	x0, [sp, #8]
    c448:	ldr	x0, [sp, #8]
    c44c:	bl	3550 <pthread_mutex_unlock@plt>
    c450:	str	w0, [sp, #4]
    c454:	ldp	x29, x30, [sp, #16]
    c458:	add	sp, sp, #0x20
    c45c:	ret
    c460:	sub	sp, sp, #0x20
    c464:	stp	x29, x30, [sp, #16]
    c468:	add	x29, sp, #0x10
    c46c:	str	x0, [sp, #8]
    c470:	ldr	x0, [sp, #8]
    c474:	bl	3530 <pthread_mutex_lock@plt>
    c478:	str	w0, [sp, #4]
    c47c:	ldp	x29, x30, [sp, #16]
    c480:	add	sp, sp, #0x20
    c484:	ret
    c488:	sub	sp, sp, #0x90
    c48c:	stp	x29, x30, [sp, #128]
    c490:	add	x29, sp, #0x80
    c494:	stur	x0, [x29, #-16]
    c498:	stur	x1, [x29, #-24]
    c49c:	stur	x2, [x29, #-32]
    c4a0:	stur	x3, [x29, #-40]
    c4a4:	stur	x4, [x29, #-48]
    c4a8:	stur	w5, [x29, #-52]
    c4ac:	ldur	x8, [x29, #-40]
    c4b0:	ldr	x8, [x8]
    c4b4:	ldur	x9, [x29, #-48]
    c4b8:	mov	w10, #0x1                   	// #1
    c4bc:	cmp	x8, x9
    c4c0:	str	w10, [sp, #36]
    c4c4:	b.cc	c4f4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x102c>  // b.lo, b.ul, b.last
    c4c8:	ldur	x8, [x29, #-16]
    c4cc:	ldr	x8, [x8, #336]
    c4d0:	mov	w9, #0x0                   	// #0
    c4d4:	str	w9, [sp, #32]
    c4d8:	cbz	x8, c4ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1024>
    c4dc:	ldur	w8, [x29, #-52]
    c4e0:	cmp	w8, #0x0
    c4e4:	cset	w8, ne  // ne = any
    c4e8:	str	w8, [sp, #32]
    c4ec:	ldr	w8, [sp, #32]
    c4f0:	str	w8, [sp, #36]
    c4f4:	ldr	w8, [sp, #36]
    c4f8:	tbnz	w8, #0, c500 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1038>
    c4fc:	b	c778 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x12b0>
    c500:	ldur	x8, [x29, #-16]
    c504:	ldr	x8, [x8, #336]
    c508:	cbnz	x8, c534 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x106c>
    c50c:	ldur	x0, [x29, #-16]
    c510:	ldur	x1, [x29, #-24]
    c514:	bl	c974 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x14ac>
    c518:	stur	w0, [x29, #-56]
    c51c:	ldur	x8, [x29, #-16]
    c520:	ldr	x8, [x8, #336]
    c524:	cbnz	x8, c534 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x106c>
    c528:	ldur	w8, [x29, #-56]
    c52c:	stur	w8, [x29, #-4]
    c530:	b	c77c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x12b4>
    c534:	ldur	x8, [x29, #-16]
    c538:	ldr	x8, [x8, #336]
    c53c:	ldr	x8, [x8, #16]
    c540:	add	x4, sp, #0x40
    c544:	str	x8, [sp, #64]
    c548:	ldur	x0, [x29, #-32]
    c54c:	ldur	x1, [x29, #-40]
    c550:	ldur	x2, [x29, #-48]
    c554:	ldur	x8, [x29, #-16]
    c558:	ldr	x8, [x8, #336]
    c55c:	ldr	x3, [x8, #8]
    c560:	ldur	x8, [x29, #-16]
    c564:	ldr	x5, [x8, #8]
    c568:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    c56c:	ldr	x8, [sp, #64]
    c570:	ldur	x9, [x29, #-16]
    c574:	ldr	x9, [x9, #8]
    c578:	mov	w10, #0x1                   	// #1
    c57c:	cmp	x8, x9
    c580:	str	w10, [sp, #28]
    c584:	b.eq	c5bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x10f4>  // b.none
    c588:	ldur	x8, [x29, #-40]
    c58c:	ldr	x8, [x8]
    c590:	ldur	x9, [x29, #-48]
    c594:	mov	w10, #0x0                   	// #0
    c598:	cmp	x8, x9
    c59c:	str	w10, [sp, #24]
    c5a0:	b.ne	c5b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x10ec>  // b.any
    c5a4:	ldur	w8, [x29, #-52]
    c5a8:	cmp	w8, #0x0
    c5ac:	cset	w8, ne  // ne = any
    c5b0:	str	w8, [sp, #24]
    c5b4:	ldr	w8, [sp, #24]
    c5b8:	str	w8, [sp, #28]
    c5bc:	ldr	w8, [sp, #28]
    c5c0:	and	w8, w8, #0x1
    c5c4:	strb	w8, [sp, #63]
    c5c8:	mov	w8, #0x0                   	// #0
    c5cc:	strb	w8, [sp, #62]
    c5d0:	str	wzr, [sp, #56]
    c5d4:	ldr	w8, [sp, #56]
    c5d8:	cbz	w8, c600 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1138>
    c5dc:	mov	w8, wzr
    c5e0:	ldur	x9, [x29, #-16]
    c5e4:	ldr	x9, [x9, #336]
    c5e8:	add	x0, x9, #0x160
    c5ec:	str	w8, [sp, #20]
    c5f0:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    c5f4:	ldr	w8, [sp, #20]
    c5f8:	str	w8, [sp, #16]
    c5fc:	b	c620 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1158>
    c600:	mov	w8, #0x1                   	// #1
    c604:	ldur	x9, [x29, #-16]
    c608:	ldr	x9, [x9, #336]
    c60c:	add	x0, x9, #0x160
    c610:	str	w8, [sp, #12]
    c614:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    c618:	ldr	w8, [sp, #12]
    c61c:	str	w8, [sp, #16]
    c620:	ldr	w8, [sp, #16]
    c624:	cbz	w8, c6b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x11ec>
    c628:	str	wzr, [sp, #52]
    c62c:	ldr	w8, [sp, #52]
    c630:	cmp	w8, #0x0
    c634:	cset	w8, ne  // ne = any
    c638:	eor	w8, w8, #0x1
    c63c:	tbnz	w8, #0, c644 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x117c>
    c640:	b	c6a8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x11e0>
    c644:	ldur	x8, [x29, #-16]
    c648:	ldr	x8, [x8, #336]
    c64c:	ldr	w9, [x8]
    c650:	cbnz	w9, c660 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1198>
    c654:	mov	w8, #0x1                   	// #1
    c658:	strb	w8, [sp, #62]
    c65c:	b	c69c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x11d4>
    c660:	ldr	x8, [sp, #64]
    c664:	ldur	x9, [x29, #-16]
    c668:	ldr	x9, [x9, #336]
    c66c:	str	x8, [x9, #16]
    c670:	ldrb	w10, [sp, #63]
    c674:	tbnz	w10, #0, c67c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x11b4>
    c678:	b	c68c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x11c4>
    c67c:	ldur	x8, [x29, #-16]
    c680:	ldr	x8, [x8, #336]
    c684:	mov	w9, #0x2                   	// #2
    c688:	str	w9, [x8]
    c68c:	ldur	x8, [x29, #-16]
    c690:	ldr	x8, [x8, #336]
    c694:	add	x0, x8, #0x190
    c698:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    c69c:	mov	w8, #0x1                   	// #1
    c6a0:	str	w8, [sp, #52]
    c6a4:	b	c62c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1164>
    c6a8:	mov	w8, #0x1                   	// #1
    c6ac:	str	w8, [sp, #56]
    c6b0:	b	c5d4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x110c>
    c6b4:	ldrb	w8, [sp, #62]
    c6b8:	tbnz	w8, #0, c6c0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x11f8>
    c6bc:	b	c75c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1294>
    c6c0:	str	wzr, [sp, #44]
    c6c4:	ldr	w8, [sp, #44]
    c6c8:	cbz	w8, c6ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1224>
    c6cc:	mov	w8, wzr
    c6d0:	ldur	x9, [x29, #-16]
    c6d4:	add	x0, x9, #0x168
    c6d8:	str	w8, [sp, #8]
    c6dc:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    c6e0:	ldr	w8, [sp, #8]
    c6e4:	str	w8, [sp, #4]
    c6e8:	b	c708 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1240>
    c6ec:	mov	w8, #0x1                   	// #1
    c6f0:	ldur	x9, [x29, #-16]
    c6f4:	add	x0, x9, #0x168
    c6f8:	str	w8, [sp]
    c6fc:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    c700:	ldr	w8, [sp]
    c704:	str	w8, [sp, #4]
    c708:	ldr	w8, [sp, #4]
    c70c:	cbz	w8, c750 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1288>
    c710:	str	wzr, [sp, #40]
    c714:	ldr	w8, [sp, #40]
    c718:	cmp	w8, #0x0
    c71c:	cset	w8, ne  // ne = any
    c720:	eor	w8, w8, #0x1
    c724:	tbnz	w8, #0, c72c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1264>
    c728:	b	c744 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x127c>
    c72c:	ldur	x8, [x29, #-16]
    c730:	ldr	w9, [x8, #308]
    c734:	str	w9, [sp, #48]
    c738:	mov	w8, #0x1                   	// #1
    c73c:	str	w8, [sp, #40]
    c740:	b	c714 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x124c>
    c744:	mov	w8, #0x1                   	// #1
    c748:	str	w8, [sp, #44]
    c74c:	b	c6c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x11fc>
    c750:	ldr	w8, [sp, #48]
    c754:	stur	w8, [x29, #-4]
    c758:	b	c77c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x12b4>
    c75c:	ldrb	w8, [sp, #63]
    c760:	tbnz	w8, #0, c768 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x12a0>
    c764:	b	c774 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x12ac>
    c768:	ldur	x8, [x29, #-16]
    c76c:	mov	x9, xzr
    c770:	str	x9, [x8, #336]
    c774:	b	c4ac <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xfe4>
    c778:	stur	wzr, [x29, #-4]
    c77c:	ldur	w0, [x29, #-4]
    c780:	ldp	x29, x30, [sp, #128]
    c784:	add	sp, sp, #0x90
    c788:	ret
    c78c:	sub	sp, sp, #0x10
    c790:	str	x0, [sp, #8]
    c794:	ldr	x8, [sp, #8]
    c798:	ldr	w9, [x8, #32]
    c79c:	cmp	w9, #0x0
    c7a0:	cset	w9, eq  // eq = none
    c7a4:	and	w0, w9, #0x1
    c7a8:	add	sp, sp, #0x10
    c7ac:	ret
    c7b0:	sub	sp, sp, #0x50
    c7b4:	stp	x29, x30, [sp, #64]
    c7b8:	add	x29, sp, #0x40
    c7bc:	mov	w8, #0x1                   	// #1
    c7c0:	stur	x0, [x29, #-8]
    c7c4:	stur	x1, [x29, #-16]
    c7c8:	stur	x2, [x29, #-24]
    c7cc:	and	w8, w3, w8
    c7d0:	sturb	w8, [x29, #-25]
    c7d4:	ldur	x9, [x29, #-8]
    c7d8:	ldr	w8, [x9, #304]
    c7dc:	cbz	w8, c810 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1348>
    c7e0:	ldur	x8, [x29, #-24]
    c7e4:	ldrb	w9, [x8]
    c7e8:	tbnz	w9, #0, c810 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1348>
    c7ec:	ldur	x8, [x29, #-24]
    c7f0:	mov	w9, #0x1                   	// #1
    c7f4:	strb	w9, [x8]
    c7f8:	ldur	x0, [x29, #-16]
    c7fc:	ldur	x8, [x29, #-8]
    c800:	add	x1, x8, #0x198
    c804:	ldur	x8, [x29, #-8]
    c808:	ldr	w2, [x8, #304]
    c80c:	bl	d810 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2348>
    c810:	mov	w8, #0x0                   	// #0
    c814:	sturb	w8, [x29, #-26]
    c818:	str	wzr, [sp, #32]
    c81c:	ldr	w8, [sp, #32]
    c820:	cbz	w8, c844 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x137c>
    c824:	mov	w8, wzr
    c828:	ldur	x9, [x29, #-8]
    c82c:	add	x0, x9, #0x168
    c830:	str	w8, [sp, #24]
    c834:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    c838:	ldr	w8, [sp, #24]
    c83c:	str	w8, [sp, #20]
    c840:	b	c860 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1398>
    c844:	mov	w8, #0x1                   	// #1
    c848:	ldur	x9, [x29, #-8]
    c84c:	add	x0, x9, #0x168
    c850:	str	w8, [sp, #16]
    c854:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    c858:	ldr	w8, [sp, #16]
    c85c:	str	w8, [sp, #20]
    c860:	ldr	w8, [sp, #20]
    c864:	cbz	w8, c960 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1498>
    c868:	str	wzr, [sp, #28]
    c86c:	ldr	w8, [sp, #28]
    c870:	cmp	w8, #0x0
    c874:	cset	w8, ne  // ne = any
    c878:	eor	w8, w8, #0x1
    c87c:	tbnz	w8, #0, c884 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x13bc>
    c880:	b	c954 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x148c>
    c884:	ldurb	w8, [x29, #-25]
    c888:	tbnz	w8, #0, c890 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x13c8>
    c88c:	b	c8b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x13ec>
    c890:	ldur	x8, [x29, #-8]
    c894:	ldr	x8, [x8, #328]
    c898:	cbz	x8, c8b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x13ec>
    c89c:	ldur	x8, [x29, #-8]
    c8a0:	add	x0, x8, #0x100
    c8a4:	bl	cbb0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16e8>
    c8a8:	mov	w9, #0x0                   	// #0
    c8ac:	str	w9, [sp, #12]
    c8b0:	tbnz	w0, #0, c8ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1424>
    c8b4:	ldur	x8, [x29, #-8]
    c8b8:	add	x0, x8, #0x100
    c8bc:	bl	ad98 <lzma_vli_encode@@XZ_5.0+0x4c0>
    c8c0:	mov	w9, #0x0                   	// #0
    c8c4:	str	w9, [sp, #12]
    c8c8:	tbnz	w0, #0, c8ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1424>
    c8cc:	ldur	x8, [x29, #-8]
    c8d0:	ldr	w9, [x8, #308]
    c8d4:	mov	w10, #0x0                   	// #0
    c8d8:	str	w10, [sp, #12]
    c8dc:	cbnz	w9, c8ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1424>
    c8e0:	ldurb	w8, [x29, #-26]
    c8e4:	eor	w8, w8, #0x1
    c8e8:	str	w8, [sp, #12]
    c8ec:	ldr	w8, [sp, #12]
    c8f0:	tbnz	w8, #0, c8f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1430>
    c8f4:	b	c948 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1480>
    c8f8:	ldur	x8, [x29, #-8]
    c8fc:	ldr	w9, [x8, #304]
    c900:	cbz	w9, c930 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1468>
    c904:	ldur	x8, [x29, #-8]
    c908:	add	x0, x8, #0x198
    c90c:	ldur	x8, [x29, #-8]
    c910:	add	x1, x8, #0x168
    c914:	ldur	x2, [x29, #-16]
    c918:	bl	d904 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x243c>
    c91c:	cmp	w0, #0x0
    c920:	cset	w9, ne  // ne = any
    c924:	and	w9, w9, #0x1
    c928:	sturb	w9, [x29, #-26]
    c92c:	b	c944 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x147c>
    c930:	ldur	x8, [x29, #-8]
    c934:	add	x0, x8, #0x198
    c938:	ldur	x8, [x29, #-8]
    c93c:	add	x1, x8, #0x168
    c940:	bl	d1c0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1cf8>
    c944:	b	c884 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x13bc>
    c948:	mov	w8, #0x1                   	// #1
    c94c:	str	w8, [sp, #28]
    c950:	b	c86c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x13a4>
    c954:	mov	w8, #0x1                   	// #1
    c958:	str	w8, [sp, #32]
    c95c:	b	c81c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1354>
    c960:	ldurb	w8, [x29, #-26]
    c964:	and	w0, w8, #0x1
    c968:	ldp	x29, x30, [sp, #64]
    c96c:	add	sp, sp, #0x50
    c970:	ret
    c974:	sub	sp, sp, #0x60
    c978:	stp	x29, x30, [sp, #80]
    c97c:	add	x29, sp, #0x50
    c980:	stur	x0, [x29, #-16]
    c984:	stur	x1, [x29, #-24]
    c988:	ldur	x8, [x29, #-16]
    c98c:	add	x0, x8, #0x100
    c990:	bl	cbb0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16e8>
    c994:	tbnz	w0, #0, c9a0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x14d8>
    c998:	stur	wzr, [x29, #-4]
    c99c:	b	cb78 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16b0>
    c9a0:	stur	wzr, [x29, #-28]
    c9a4:	ldur	w8, [x29, #-28]
    c9a8:	cbz	w8, c9cc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1504>
    c9ac:	mov	w8, wzr
    c9b0:	ldur	x9, [x29, #-16]
    c9b4:	add	x0, x9, #0x168
    c9b8:	str	w8, [sp, #32]
    c9bc:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    c9c0:	ldr	w8, [sp, #32]
    c9c4:	str	w8, [sp, #28]
    c9c8:	b	c9e8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1520>
    c9cc:	mov	w8, #0x1                   	// #1
    c9d0:	ldur	x9, [x29, #-16]
    c9d4:	add	x0, x9, #0x168
    c9d8:	str	w8, [sp, #24]
    c9dc:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    c9e0:	ldr	w8, [sp, #24]
    c9e4:	str	w8, [sp, #28]
    c9e8:	ldr	w8, [sp, #28]
    c9ec:	cbz	w8, ca54 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x158c>
    c9f0:	stur	wzr, [x29, #-32]
    c9f4:	ldur	w8, [x29, #-32]
    c9f8:	cmp	w8, #0x0
    c9fc:	cset	w8, ne  // ne = any
    ca00:	eor	w8, w8, #0x1
    ca04:	tbnz	w8, #0, ca0c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1544>
    ca08:	b	ca48 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1580>
    ca0c:	ldur	x8, [x29, #-16]
    ca10:	ldr	x8, [x8, #328]
    ca14:	cbz	x8, ca3c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1574>
    ca18:	ldur	x8, [x29, #-16]
    ca1c:	ldr	x8, [x8, #328]
    ca20:	ldur	x9, [x29, #-16]
    ca24:	str	x8, [x9, #336]
    ca28:	ldur	x8, [x29, #-16]
    ca2c:	ldr	x8, [x8, #328]
    ca30:	ldr	x8, [x8, #344]
    ca34:	ldur	x9, [x29, #-16]
    ca38:	str	x8, [x9, #328]
    ca3c:	mov	w8, #0x1                   	// #1
    ca40:	stur	w8, [x29, #-32]
    ca44:	b	c9f4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x152c>
    ca48:	mov	w8, #0x1                   	// #1
    ca4c:	stur	w8, [x29, #-28]
    ca50:	b	c9a4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x14dc>
    ca54:	ldur	x8, [x29, #-16]
    ca58:	ldr	x8, [x8, #336]
    ca5c:	cbnz	x8, caa4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x15dc>
    ca60:	ldur	x8, [x29, #-16]
    ca64:	ldr	w9, [x8, #324]
    ca68:	ldur	x8, [x29, #-16]
    ca6c:	ldr	w10, [x8, #320]
    ca70:	cmp	w9, w10
    ca74:	b.ne	ca80 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x15b8>  // b.any
    ca78:	stur	wzr, [x29, #-4]
    ca7c:	b	cb78 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16b0>
    ca80:	ldur	x0, [x29, #-16]
    ca84:	ldur	x1, [x29, #-24]
    ca88:	bl	cbdc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1714>
    ca8c:	stur	w0, [x29, #-36]
    ca90:	ldur	w8, [x29, #-36]
    ca94:	cbz	w8, caa4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x15dc>
    ca98:	ldur	w8, [x29, #-36]
    ca9c:	stur	w8, [x29, #-4]
    caa0:	b	cb78 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16b0>
    caa4:	str	wzr, [sp, #40]
    caa8:	ldr	w8, [sp, #40]
    caac:	cbz	w8, cad4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x160c>
    cab0:	mov	w8, wzr
    cab4:	ldur	x9, [x29, #-16]
    cab8:	ldr	x9, [x9, #336]
    cabc:	add	x0, x9, #0x160
    cac0:	str	w8, [sp, #20]
    cac4:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    cac8:	ldr	w8, [sp, #20]
    cacc:	str	w8, [sp, #16]
    cad0:	b	caf4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x162c>
    cad4:	mov	w8, #0x1                   	// #1
    cad8:	ldur	x9, [x29, #-16]
    cadc:	ldr	x9, [x9, #336]
    cae0:	add	x0, x9, #0x160
    cae4:	str	w8, [sp, #12]
    cae8:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    caec:	ldr	w8, [sp, #12]
    caf0:	str	w8, [sp, #16]
    caf4:	ldr	w8, [sp, #16]
    caf8:	cbz	w8, cb74 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16ac>
    cafc:	str	wzr, [sp, #36]
    cb00:	ldr	w8, [sp, #36]
    cb04:	cmp	w8, #0x0
    cb08:	cset	w8, ne  // ne = any
    cb0c:	eor	w8, w8, #0x1
    cb10:	tbnz	w8, #0, cb18 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1650>
    cb14:	b	cb68 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16a0>
    cb18:	ldur	x8, [x29, #-16]
    cb1c:	ldr	x8, [x8, #336]
    cb20:	mov	w9, #0x1                   	// #1
    cb24:	str	w9, [x8]
    cb28:	ldur	x8, [x29, #-16]
    cb2c:	ldr	x8, [x8, #336]
    cb30:	str	xzr, [x8, #16]
    cb34:	ldur	x8, [x29, #-16]
    cb38:	add	x0, x8, #0x100
    cb3c:	bl	ace8 <lzma_vli_encode@@XZ_5.0+0x410>
    cb40:	ldur	x8, [x29, #-16]
    cb44:	ldr	x8, [x8, #336]
    cb48:	str	x0, [x8, #24]
    cb4c:	ldur	x8, [x29, #-16]
    cb50:	ldr	x8, [x8, #336]
    cb54:	add	x0, x8, #0x190
    cb58:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    cb5c:	mov	w8, #0x1                   	// #1
    cb60:	str	w8, [sp, #36]
    cb64:	b	cb00 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1638>
    cb68:	mov	w8, #0x1                   	// #1
    cb6c:	str	w8, [sp, #40]
    cb70:	b	caa8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x15e0>
    cb74:	stur	wzr, [x29, #-4]
    cb78:	ldur	w0, [x29, #-4]
    cb7c:	ldp	x29, x30, [sp, #80]
    cb80:	add	sp, sp, #0x60
    cb84:	ret
    cb88:	sub	sp, sp, #0x20
    cb8c:	stp	x29, x30, [sp, #16]
    cb90:	add	x29, sp, #0x10
    cb94:	str	x0, [sp, #8]
    cb98:	ldr	x0, [sp, #8]
    cb9c:	bl	3200 <pthread_cond_signal@plt>
    cba0:	str	w0, [sp, #4]
    cba4:	ldp	x29, x30, [sp, #16]
    cba8:	add	sp, sp, #0x20
    cbac:	ret
    cbb0:	sub	sp, sp, #0x10
    cbb4:	str	x0, [sp, #8]
    cbb8:	ldr	x8, [sp, #8]
    cbbc:	ldr	w9, [x8, #32]
    cbc0:	ldr	x8, [sp, #8]
    cbc4:	ldr	w10, [x8, #24]
    cbc8:	cmp	w9, w10
    cbcc:	cset	w9, cc  // cc = lo, ul, last
    cbd0:	and	w0, w9, #0x1
    cbd4:	add	sp, sp, #0x10
    cbd8:	ret
    cbdc:	sub	sp, sp, #0x90
    cbe0:	stp	x29, x30, [sp, #128]
    cbe4:	add	x29, sp, #0x80
    cbe8:	stur	x0, [x29, #-16]
    cbec:	stur	x1, [x29, #-24]
    cbf0:	ldur	x8, [x29, #-16]
    cbf4:	ldr	x8, [x8, #312]
    cbf8:	ldur	x9, [x29, #-16]
    cbfc:	ldr	w10, [x9, #324]
    cc00:	mov	w9, w10
    cc04:	mov	x11, #0x1d0                 	// #464
    cc08:	mul	x9, x11, x9
    cc0c:	add	x8, x8, x9
    cc10:	stur	x8, [x29, #-32]
    cc14:	ldur	x8, [x29, #-16]
    cc18:	ldr	x0, [x8, #8]
    cc1c:	ldur	x1, [x29, #-24]
    cc20:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    cc24:	ldur	x8, [x29, #-32]
    cc28:	str	x0, [x8, #8]
    cc2c:	ldur	x8, [x29, #-32]
    cc30:	ldr	x8, [x8, #8]
    cc34:	cbnz	x8, cc44 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x177c>
    cc38:	mov	w8, #0x5                   	// #5
    cc3c:	stur	w8, [x29, #-4]
    cc40:	b	cd5c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1894>
    cc44:	ldur	x8, [x29, #-32]
    cc48:	add	x0, x8, #0x160
    cc4c:	bl	b7c8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x300>
    cc50:	cbz	w0, cc58 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1790>
    cc54:	b	cd44 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x187c>
    cc58:	ldur	x8, [x29, #-32]
    cc5c:	add	x0, x8, #0x190
    cc60:	bl	b7f4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x32c>
    cc64:	cbz	w0, cc6c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x17a4>
    cc68:	b	cd38 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1870>
    cc6c:	ldur	x8, [x29, #-32]
    cc70:	str	wzr, [x8]
    cc74:	ldur	x8, [x29, #-24]
    cc78:	ldur	x9, [x29, #-32]
    cc7c:	str	x8, [x9, #40]
    cc80:	ldur	x8, [x29, #-16]
    cc84:	ldur	x9, [x29, #-32]
    cc88:	str	x8, [x9, #32]
    cc8c:	ldur	x8, [x29, #-32]
    cc90:	str	xzr, [x8, #48]
    cc94:	ldur	x8, [x29, #-32]
    cc98:	str	xzr, [x8, #56]
    cc9c:	ldur	x8, [x29, #-32]
    cca0:	add	x0, x8, #0x40
    cca4:	add	x8, sp, #0x18
    cca8:	str	x0, [sp, #16]
    ccac:	mov	x0, x8
    ccb0:	mov	w10, wzr
    ccb4:	mov	w1, w10
    ccb8:	mov	x9, #0x48                  	// #72
    ccbc:	mov	x2, x9
    ccc0:	str	x8, [sp, #8]
    ccc4:	str	x9, [sp]
    ccc8:	bl	3230 <memset@plt>
    cccc:	mov	x8, #0xffffffffffffffff    	// #-1
    ccd0:	str	x8, [sp, #32]
    ccd4:	str	xzr, [sp, #40]
    ccd8:	ldr	x0, [sp, #16]
    ccdc:	ldr	x1, [sp, #8]
    cce0:	ldr	x2, [sp]
    cce4:	bl	3090 <memcpy@plt>
    cce8:	ldur	x8, [x29, #-32]
    ccec:	add	x0, x8, #0x1c8
    ccf0:	ldur	x2, [x29, #-32]
    ccf4:	adrp	x1, c000 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xb38>
    ccf8:	add	x1, x1, #0xe14
    ccfc:	bl	cd6c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x18a4>
    cd00:	cbz	w0, cd08 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1840>
    cd04:	b	cd2c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1864>
    cd08:	ldur	x8, [x29, #-16]
    cd0c:	ldr	w9, [x8, #324]
    cd10:	add	w9, w9, #0x1
    cd14:	str	w9, [x8, #324]
    cd18:	ldur	x8, [x29, #-32]
    cd1c:	ldur	x10, [x29, #-16]
    cd20:	str	x8, [x10, #336]
    cd24:	stur	wzr, [x29, #-4]
    cd28:	b	cd5c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1894>
    cd2c:	ldur	x8, [x29, #-32]
    cd30:	add	x0, x8, #0x190
    cd34:	bl	d160 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1c98>
    cd38:	ldur	x8, [x29, #-32]
    cd3c:	add	x0, x8, #0x160
    cd40:	bl	b89c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3d4>
    cd44:	ldur	x8, [x29, #-32]
    cd48:	ldr	x0, [x8, #8]
    cd4c:	ldur	x1, [x29, #-24]
    cd50:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    cd54:	mov	w9, #0x5                   	// #5
    cd58:	stur	w9, [x29, #-4]
    cd5c:	ldur	w0, [x29, #-4]
    cd60:	ldp	x29, x30, [sp, #128]
    cd64:	add	sp, sp, #0x90
    cd68:	ret
    cd6c:	sub	sp, sp, #0x170
    cd70:	stp	x29, x30, [sp, #336]
    cd74:	str	x28, [sp, #352]
    cd78:	add	x29, sp, #0x150
    cd7c:	sub	x8, x29, #0x18
    cd80:	mov	w9, #0x2                   	// #2
    cd84:	mov	x10, xzr
    cd88:	mov	x3, x10
    cd8c:	sub	x11, x29, #0x98
    cd90:	add	x12, sp, #0x38
    cd94:	str	x0, [x8, #16]
    cd98:	str	x1, [x8, #8]
    cd9c:	str	x2, [x8]
    cda0:	mov	x0, x12
    cda4:	str	x8, [sp, #40]
    cda8:	str	w9, [sp, #36]
    cdac:	str	x3, [sp, #24]
    cdb0:	str	x10, [sp, #16]
    cdb4:	str	x11, [sp, #8]
    cdb8:	str	x12, [sp]
    cdbc:	bl	3170 <sigfillset@plt>
    cdc0:	ldr	w9, [sp, #36]
    cdc4:	mov	w0, w9
    cdc8:	ldr	x1, [sp]
    cdcc:	ldr	x2, [sp, #8]
    cdd0:	bl	d188 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1cc0>
    cdd4:	ldr	x8, [sp, #40]
    cdd8:	ldr	x0, [x8, #16]
    cddc:	ldr	x2, [x8, #8]
    cde0:	ldr	x3, [x8]
    cde4:	ldr	x1, [sp, #24]
    cde8:	bl	32b0 <pthread_create@plt>
    cdec:	str	w0, [sp, #52]
    cdf0:	ldr	w0, [sp, #36]
    cdf4:	ldr	x1, [sp, #8]
    cdf8:	ldr	x2, [sp, #16]
    cdfc:	bl	d188 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1cc0>
    ce00:	ldr	w0, [sp, #52]
    ce04:	ldr	x28, [sp, #352]
    ce08:	ldp	x29, x30, [sp, #336]
    ce0c:	add	sp, sp, #0x170
    ce10:	ret
    ce14:	sub	sp, sp, #0x60
    ce18:	stp	x29, x30, [sp, #80]
    ce1c:	add	x29, sp, #0x50
    ce20:	stur	x0, [x29, #-8]
    ce24:	ldur	x8, [x29, #-8]
    ce28:	stur	x8, [x29, #-16]
    ce2c:	stur	wzr, [x29, #-20]
    ce30:	stur	wzr, [x29, #-24]
    ce34:	ldur	w8, [x29, #-24]
    ce38:	cbz	w8, ce5c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1994>
    ce3c:	mov	w8, wzr
    ce40:	ldur	x9, [x29, #-16]
    ce44:	add	x0, x9, #0x160
    ce48:	str	w8, [sp, #32]
    ce4c:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    ce50:	ldr	w8, [sp, #32]
    ce54:	str	w8, [sp, #28]
    ce58:	b	ce78 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x19b0>
    ce5c:	mov	w8, #0x1                   	// #1
    ce60:	ldur	x9, [x29, #-16]
    ce64:	add	x0, x9, #0x160
    ce68:	str	w8, [sp, #24]
    ce6c:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    ce70:	ldr	w8, [sp, #24]
    ce74:	str	w8, [sp, #28]
    ce78:	ldr	w8, [sp, #28]
    ce7c:	cbz	w8, cf08 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a40>
    ce80:	stur	wzr, [x29, #-28]
    ce84:	ldur	w8, [x29, #-28]
    ce88:	cmp	w8, #0x0
    ce8c:	cset	w8, ne  // ne = any
    ce90:	eor	w8, w8, #0x1
    ce94:	tbnz	w8, #0, ce9c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x19d4>
    ce98:	b	cefc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a34>
    ce9c:	ldur	x8, [x29, #-16]
    cea0:	ldr	w9, [x8]
    cea4:	cmp	w9, #0x3
    cea8:	b.ne	cec0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x19f8>  // b.any
    ceac:	ldur	x8, [x29, #-16]
    ceb0:	str	wzr, [x8]
    ceb4:	ldur	x8, [x29, #-16]
    ceb8:	add	x0, x8, #0x190
    cebc:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    cec0:	ldur	x8, [x29, #-16]
    cec4:	ldr	w9, [x8]
    cec8:	stur	w9, [x29, #-20]
    cecc:	ldur	w9, [x29, #-20]
    ced0:	cbz	w9, ced8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a10>
    ced4:	b	cef0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a28>
    ced8:	ldur	x8, [x29, #-16]
    cedc:	add	x0, x8, #0x190
    cee0:	ldur	x8, [x29, #-16]
    cee4:	add	x1, x8, #0x160
    cee8:	bl	d1c0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1cf8>
    ceec:	b	ce9c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x19d4>
    cef0:	mov	w8, #0x1                   	// #1
    cef4:	stur	w8, [x29, #-28]
    cef8:	b	ce84 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x19bc>
    cefc:	mov	w8, #0x1                   	// #1
    cf00:	stur	w8, [x29, #-24]
    cf04:	b	ce34 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x196c>
    cf08:	ldur	w8, [x29, #-20]
    cf0c:	cmp	w8, #0x2
    cf10:	b.hi	cf24 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a5c>  // b.pmore
    cf14:	ldur	x0, [x29, #-16]
    cf18:	ldur	w1, [x29, #-20]
    cf1c:	bl	d1f0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1d28>
    cf20:	stur	w0, [x29, #-20]
    cf24:	ldur	w8, [x29, #-20]
    cf28:	cmp	w8, #0x4
    cf2c:	b.ne	cf34 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a6c>  // b.any
    cf30:	b	d10c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1c44>
    cf34:	stur	wzr, [x29, #-32]
    cf38:	ldur	w8, [x29, #-32]
    cf3c:	cbz	w8, cf60 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a98>
    cf40:	mov	w8, wzr
    cf44:	ldur	x9, [x29, #-16]
    cf48:	add	x0, x9, #0x160
    cf4c:	str	w8, [sp, #20]
    cf50:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    cf54:	ldr	w8, [sp, #20]
    cf58:	str	w8, [sp, #16]
    cf5c:	b	cf7c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1ab4>
    cf60:	mov	w8, #0x1                   	// #1
    cf64:	ldur	x9, [x29, #-16]
    cf68:	add	x0, x9, #0x160
    cf6c:	str	w8, [sp, #12]
    cf70:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    cf74:	ldr	w8, [sp, #12]
    cf78:	str	w8, [sp, #16]
    cf7c:	ldr	w8, [sp, #16]
    cf80:	cbz	w8, cfdc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b14>
    cf84:	stur	wzr, [x29, #-36]
    cf88:	ldur	w8, [x29, #-36]
    cf8c:	cmp	w8, #0x0
    cf90:	cset	w8, ne  // ne = any
    cf94:	eor	w8, w8, #0x1
    cf98:	tbnz	w8, #0, cfa0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1ad8>
    cf9c:	b	cfd0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b08>
    cfa0:	ldur	x8, [x29, #-16]
    cfa4:	ldr	w9, [x8]
    cfa8:	cmp	w9, #0x4
    cfac:	b.eq	cfc4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1afc>  // b.none
    cfb0:	ldur	x8, [x29, #-16]
    cfb4:	str	wzr, [x8]
    cfb8:	ldur	x8, [x29, #-16]
    cfbc:	add	x0, x8, #0x190
    cfc0:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    cfc4:	mov	w8, #0x1                   	// #1
    cfc8:	stur	w8, [x29, #-36]
    cfcc:	b	cf88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1ac0>
    cfd0:	mov	w8, #0x1                   	// #1
    cfd4:	stur	w8, [x29, #-32]
    cfd8:	b	cf38 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1a70>
    cfdc:	str	wzr, [sp, #40]
    cfe0:	ldr	w8, [sp, #40]
    cfe4:	cbz	w8, d00c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b44>
    cfe8:	mov	w8, wzr
    cfec:	ldur	x9, [x29, #-16]
    cff0:	ldr	x9, [x9, #32]
    cff4:	add	x0, x9, #0x168
    cff8:	str	w8, [sp, #8]
    cffc:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    d000:	ldr	w8, [sp, #8]
    d004:	str	w8, [sp, #4]
    d008:	b	d02c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b64>
    d00c:	mov	w8, #0x1                   	// #1
    d010:	ldur	x9, [x29, #-16]
    d014:	ldr	x9, [x9, #32]
    d018:	add	x0, x9, #0x168
    d01c:	str	w8, [sp]
    d020:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    d024:	ldr	w8, [sp]
    d028:	str	w8, [sp, #4]
    d02c:	ldr	w8, [sp, #4]
    d030:	cbz	w8, d108 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1c40>
    d034:	str	wzr, [sp, #36]
    d038:	ldr	w8, [sp, #36]
    d03c:	cmp	w8, #0x0
    d040:	cset	w8, ne  // ne = any
    d044:	eor	w8, w8, #0x1
    d048:	tbnz	w8, #0, d050 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b88>
    d04c:	b	d0fc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1c34>
    d050:	ldur	w8, [x29, #-20]
    d054:	cmp	w8, #0x2
    d058:	cset	w8, eq  // eq = none
    d05c:	ldur	x9, [x29, #-16]
    d060:	ldr	x9, [x9, #24]
    d064:	and	w8, w8, #0x1
    d068:	strb	w8, [x9, #32]
    d06c:	ldur	x9, [x29, #-16]
    d070:	ldr	x9, [x9, #24]
    d074:	ldr	x9, [x9, #24]
    d078:	ldur	x10, [x29, #-16]
    d07c:	ldr	x10, [x10, #32]
    d080:	ldr	x11, [x10, #344]
    d084:	add	x9, x11, x9
    d088:	str	x9, [x10, #344]
    d08c:	ldur	x9, [x29, #-16]
    d090:	ldr	x9, [x9, #24]
    d094:	ldr	x9, [x9, #8]
    d098:	ldur	x10, [x29, #-16]
    d09c:	ldr	x10, [x10, #32]
    d0a0:	ldr	x11, [x10, #352]
    d0a4:	add	x9, x11, x9
    d0a8:	str	x9, [x10, #352]
    d0ac:	ldur	x9, [x29, #-16]
    d0b0:	str	xzr, [x9, #48]
    d0b4:	ldur	x9, [x29, #-16]
    d0b8:	str	xzr, [x9, #56]
    d0bc:	ldur	x9, [x29, #-16]
    d0c0:	ldr	x9, [x9, #32]
    d0c4:	ldr	x9, [x9, #328]
    d0c8:	ldur	x10, [x29, #-16]
    d0cc:	str	x9, [x10, #344]
    d0d0:	ldur	x9, [x29, #-16]
    d0d4:	ldur	x10, [x29, #-16]
    d0d8:	ldr	x10, [x10, #32]
    d0dc:	str	x9, [x10, #328]
    d0e0:	ldur	x9, [x29, #-16]
    d0e4:	ldr	x9, [x9, #32]
    d0e8:	add	x0, x9, #0x198
    d0ec:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    d0f0:	mov	w8, #0x1                   	// #1
    d0f4:	str	w8, [sp, #36]
    d0f8:	b	d038 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b70>
    d0fc:	mov	w8, #0x1                   	// #1
    d100:	str	w8, [sp, #40]
    d104:	b	cfe0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b18>
    d108:	b	ce30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1968>
    d10c:	ldur	x8, [x29, #-16]
    d110:	add	x0, x8, #0x160
    d114:	bl	b89c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3d4>
    d118:	ldur	x8, [x29, #-16]
    d11c:	add	x0, x8, #0x190
    d120:	bl	d160 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1c98>
    d124:	ldur	x8, [x29, #-16]
    d128:	add	x0, x8, #0x40
    d12c:	ldur	x8, [x29, #-16]
    d130:	ldr	x1, [x8, #40]
    d134:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    d138:	ldur	x8, [x29, #-16]
    d13c:	ldr	x0, [x8, #8]
    d140:	ldur	x8, [x29, #-16]
    d144:	ldr	x1, [x8, #40]
    d148:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    d14c:	mov	x8, xzr
    d150:	mov	x0, x8
    d154:	ldp	x29, x30, [sp, #80]
    d158:	add	sp, sp, #0x60
    d15c:	ret
    d160:	sub	sp, sp, #0x20
    d164:	stp	x29, x30, [sp, #16]
    d168:	add	x29, sp, #0x10
    d16c:	str	x0, [sp, #8]
    d170:	ldr	x0, [sp, #8]
    d174:	bl	3520 <pthread_cond_destroy@plt>
    d178:	str	w0, [sp, #4]
    d17c:	ldp	x29, x30, [sp, #16]
    d180:	add	sp, sp, #0x20
    d184:	ret
    d188:	sub	sp, sp, #0x30
    d18c:	stp	x29, x30, [sp, #32]
    d190:	add	x29, sp, #0x20
    d194:	stur	w0, [x29, #-4]
    d198:	str	x1, [sp, #16]
    d19c:	str	x2, [sp, #8]
    d1a0:	ldur	w0, [x29, #-4]
    d1a4:	ldr	x1, [sp, #16]
    d1a8:	ldr	x2, [sp, #8]
    d1ac:	bl	30c0 <pthread_sigmask@plt>
    d1b0:	str	w0, [sp, #4]
    d1b4:	ldp	x29, x30, [sp, #32]
    d1b8:	add	sp, sp, #0x30
    d1bc:	ret
    d1c0:	sub	sp, sp, #0x30
    d1c4:	stp	x29, x30, [sp, #32]
    d1c8:	add	x29, sp, #0x20
    d1cc:	stur	x0, [x29, #-8]
    d1d0:	str	x1, [sp, #16]
    d1d4:	ldur	x0, [x29, #-8]
    d1d8:	ldr	x1, [sp, #16]
    d1dc:	bl	33a0 <pthread_cond_wait@plt>
    d1e0:	str	w0, [sp, #12]
    d1e4:	ldp	x29, x30, [sp, #32]
    d1e8:	add	sp, sp, #0x30
    d1ec:	ret
    d1f0:	sub	sp, sp, #0x190
    d1f4:	stp	x29, x30, [sp, #368]
    d1f8:	str	x28, [sp, #384]
    d1fc:	add	x29, sp, #0x170
    d200:	mov	x8, #0xd0                  	// #208
    d204:	mov	w9, wzr
    d208:	add	x10, sp, #0x88
    d20c:	stur	x0, [x29, #-16]
    d210:	stur	w1, [x29, #-20]
    d214:	ldur	x11, [x29, #-16]
    d218:	add	x0, x11, #0x88
    d21c:	str	x0, [sp, #64]
    d220:	mov	x0, x10
    d224:	mov	w1, w9
    d228:	mov	x2, x8
    d22c:	str	x8, [sp, #56]
    d230:	str	x10, [sp, #48]
    d234:	bl	3230 <memset@plt>
    d238:	str	wzr, [sp, #136]
    d23c:	ldur	x8, [x29, #-16]
    d240:	ldr	x8, [x8, #32]
    d244:	ldr	w9, [x8, #192]
    d248:	str	w9, [sp, #144]
    d24c:	ldur	x8, [x29, #-16]
    d250:	ldr	x8, [x8, #32]
    d254:	ldr	x8, [x8, #272]
    d258:	str	x8, [sp, #152]
    d25c:	ldur	x8, [x29, #-16]
    d260:	ldr	x8, [x8, #32]
    d264:	ldr	x8, [x8, #8]
    d268:	str	x8, [sp, #160]
    d26c:	ldur	x8, [x29, #-16]
    d270:	ldr	x8, [x8, #32]
    d274:	add	x8, x8, #0x10
    d278:	ldr	x10, [sp, #48]
    d27c:	str	x8, [x10, #32]
    d280:	ldr	x0, [sp, #64]
    d284:	mov	x1, x10
    d288:	ldr	x2, [sp, #56]
    d28c:	bl	3090 <memcpy@plt>
    d290:	ldur	x8, [x29, #-16]
    d294:	add	x0, x8, #0x88
    d298:	bl	3160 <lzma_block_header_size@plt>
    d29c:	str	w0, [sp, #132]
    d2a0:	ldr	w9, [sp, #132]
    d2a4:	cbz	w9, d2c0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1df8>
    d2a8:	ldur	x0, [x29, #-16]
    d2ac:	ldr	w1, [sp, #132]
    d2b0:	bl	d734 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x226c>
    d2b4:	mov	w8, #0x3                   	// #3
    d2b8:	stur	w8, [x29, #-4]
    d2bc:	b	d720 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2258>
    d2c0:	ldur	x8, [x29, #-16]
    d2c4:	add	x0, x8, #0x40
    d2c8:	ldur	x8, [x29, #-16]
    d2cc:	ldr	x1, [x8, #40]
    d2d0:	ldur	x8, [x29, #-16]
    d2d4:	add	x2, x8, #0x88
    d2d8:	bl	7d70 <lzma_block_uncomp_encode@@XZ_5.2+0x518>
    d2dc:	str	w0, [sp, #132]
    d2e0:	ldr	w9, [sp, #132]
    d2e4:	cbz	w9, d300 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1e38>
    d2e8:	ldur	x0, [x29, #-16]
    d2ec:	ldr	w1, [sp, #132]
    d2f0:	bl	d734 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x226c>
    d2f4:	mov	w8, #0x3                   	// #3
    d2f8:	stur	w8, [x29, #-4]
    d2fc:	b	d720 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2258>
    d300:	str	xzr, [sp, #120]
    d304:	str	xzr, [sp, #112]
    d308:	ldur	x8, [x29, #-16]
    d30c:	ldr	w9, [x8, #140]
    d310:	mov	w8, w9
    d314:	ldur	x10, [x29, #-16]
    d318:	ldr	x10, [x10, #24]
    d31c:	str	x8, [x10, #8]
    d320:	ldur	x8, [x29, #-16]
    d324:	ldr	x8, [x8, #32]
    d328:	ldr	x8, [x8, #272]
    d32c:	str	x8, [sp, #104]
    d330:	str	wzr, [sp, #100]
    d334:	ldr	w8, [sp, #100]
    d338:	cbz	w8, d35c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1e94>
    d33c:	mov	w8, wzr
    d340:	ldur	x9, [x29, #-16]
    d344:	add	x0, x9, #0x160
    d348:	str	w8, [sp, #44]
    d34c:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    d350:	ldr	w8, [sp, #44]
    d354:	str	w8, [sp, #40]
    d358:	b	d378 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1eb0>
    d35c:	mov	w8, #0x1                   	// #1
    d360:	ldur	x9, [x29, #-16]
    d364:	add	x0, x9, #0x160
    d368:	str	w8, [sp, #36]
    d36c:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    d370:	ldr	w8, [sp, #36]
    d374:	str	w8, [sp, #40]
    d378:	ldr	w8, [sp, #40]
    d37c:	cbz	w8, d440 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f78>
    d380:	str	wzr, [sp, #96]
    d384:	ldr	w8, [sp, #96]
    d388:	cmp	w8, #0x0
    d38c:	cset	w8, ne  // ne = any
    d390:	eor	w8, w8, #0x1
    d394:	tbnz	w8, #0, d39c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1ed4>
    d398:	b	d434 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f6c>
    d39c:	ldr	x8, [sp, #120]
    d3a0:	ldur	x9, [x29, #-16]
    d3a4:	str	x8, [x9, #48]
    d3a8:	ldur	x8, [x29, #-16]
    d3ac:	ldr	x8, [x8, #24]
    d3b0:	ldr	x8, [x8, #8]
    d3b4:	ldur	x9, [x29, #-16]
    d3b8:	str	x8, [x9, #56]
    d3bc:	ldr	x8, [sp, #112]
    d3c0:	ldur	x9, [x29, #-16]
    d3c4:	ldr	x9, [x9, #16]
    d3c8:	mov	w10, #0x0                   	// #0
    d3cc:	cmp	x8, x9
    d3d0:	str	w10, [sp, #32]
    d3d4:	b.ne	d3ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f24>  // b.any
    d3d8:	ldur	x8, [x29, #-16]
    d3dc:	ldr	w9, [x8]
    d3e0:	cmp	w9, #0x1
    d3e4:	cset	w9, eq  // eq = none
    d3e8:	str	w9, [sp, #32]
    d3ec:	ldr	w8, [sp, #32]
    d3f0:	tbnz	w8, #0, d3f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f30>
    d3f4:	b	d410 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f48>
    d3f8:	ldur	x8, [x29, #-16]
    d3fc:	add	x0, x8, #0x190
    d400:	ldur	x8, [x29, #-16]
    d404:	add	x1, x8, #0x160
    d408:	bl	d1c0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1cf8>
    d40c:	b	d3bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1ef4>
    d410:	ldur	x8, [x29, #-16]
    d414:	ldr	w9, [x8]
    d418:	stur	w9, [x29, #-20]
    d41c:	ldur	x8, [x29, #-16]
    d420:	ldr	x8, [x8, #16]
    d424:	str	x8, [sp, #112]
    d428:	mov	w8, #0x1                   	// #1
    d42c:	str	w8, [sp, #96]
    d430:	b	d384 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1ebc>
    d434:	mov	w8, #0x1                   	// #1
    d438:	str	w8, [sp, #100]
    d43c:	b	d334 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1e6c>
    d440:	ldur	w8, [x29, #-20]
    d444:	cmp	w8, #0x3
    d448:	b.cc	d458 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1f90>  // b.lo, b.ul, b.last
    d44c:	ldur	w8, [x29, #-20]
    d450:	stur	w8, [x29, #-4]
    d454:	b	d720 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2258>
    d458:	ldur	w8, [x29, #-20]
    d45c:	mov	w9, #0x3                   	// #3
    d460:	mov	w10, wzr
    d464:	cmp	w8, #0x2
    d468:	csel	w8, w9, w10, eq  // eq = none
    d46c:	str	w8, [sp, #92]
    d470:	ldr	x11, [sp, #112]
    d474:	str	x11, [sp, #80]
    d478:	ldr	x11, [sp, #112]
    d47c:	ldr	x12, [sp, #120]
    d480:	subs	x11, x11, x12
    d484:	cmp	x11, #0x4, lsl #12
    d488:	b.ls	d49c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1fd4>  // b.plast
    d48c:	ldr	x8, [sp, #120]
    d490:	add	x8, x8, #0x4, lsl #12
    d494:	str	x8, [sp, #80]
    d498:	str	wzr, [sp, #92]
    d49c:	ldur	x8, [x29, #-16]
    d4a0:	ldr	x8, [x8, #88]
    d4a4:	ldur	x9, [x29, #-16]
    d4a8:	ldr	x0, [x9, #64]
    d4ac:	ldur	x9, [x29, #-16]
    d4b0:	ldr	x1, [x9, #40]
    d4b4:	ldur	x9, [x29, #-16]
    d4b8:	ldr	x2, [x9, #8]
    d4bc:	ldr	x4, [sp, #80]
    d4c0:	ldur	x9, [x29, #-16]
    d4c4:	ldr	x9, [x9, #24]
    d4c8:	ldr	x5, [x9]
    d4cc:	ldur	x9, [x29, #-16]
    d4d0:	ldr	x9, [x9, #24]
    d4d4:	add	x6, x9, #0x8
    d4d8:	ldr	x7, [sp, #104]
    d4dc:	ldr	w10, [sp, #92]
    d4e0:	add	x3, sp, #0x78
    d4e4:	mov	x9, sp
    d4e8:	str	w10, [x9]
    d4ec:	blr	x8
    d4f0:	str	w0, [sp, #132]
    d4f4:	ldr	w8, [sp, #132]
    d4f8:	mov	w9, #0x0                   	// #0
    d4fc:	str	w9, [sp, #28]
    d500:	cbnz	w8, d520 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2058>
    d504:	ldur	x8, [x29, #-16]
    d508:	ldr	x8, [x8, #24]
    d50c:	ldr	x8, [x8, #8]
    d510:	ldr	x9, [sp, #104]
    d514:	cmp	x8, x9
    d518:	cset	w10, cc  // cc = lo, ul, last
    d51c:	str	w10, [sp, #28]
    d520:	ldr	w8, [sp, #28]
    d524:	tbnz	w8, #0, d330 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1e68>
    d528:	ldr	w8, [sp, #132]
    d52c:	str	w8, [sp, #24]
    d530:	cbz	w8, d590 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x20c8>
    d534:	b	d538 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2070>
    d538:	ldr	w8, [sp, #24]
    d53c:	cmp	w8, #0x1
    d540:	cset	w9, eq  // eq = none
    d544:	eor	w9, w9, #0x1
    d548:	tbnz	w9, #0, d6d4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x220c>
    d54c:	b	d550 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2088>
    d550:	ldur	x8, [x29, #-16]
    d554:	add	x0, x8, #0x88
    d558:	ldur	x8, [x29, #-16]
    d55c:	ldr	x8, [x8, #24]
    d560:	ldr	x1, [x8]
    d564:	bl	3540 <lzma_block_header_encode@plt>
    d568:	str	w0, [sp, #132]
    d56c:	ldr	w9, [sp, #132]
    d570:	cbz	w9, d58c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x20c4>
    d574:	ldur	x0, [x29, #-16]
    d578:	ldr	w1, [sp, #132]
    d57c:	bl	d734 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x226c>
    d580:	mov	w8, #0x3                   	// #3
    d584:	stur	w8, [x29, #-4]
    d588:	b	d720 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2258>
    d58c:	b	d6ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2224>
    d590:	str	wzr, [sp, #76]
    d594:	ldr	w8, [sp, #76]
    d598:	cbz	w8, d5bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x20f4>
    d59c:	mov	w8, wzr
    d5a0:	ldur	x9, [x29, #-16]
    d5a4:	add	x0, x9, #0x160
    d5a8:	str	w8, [sp, #20]
    d5ac:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    d5b0:	ldr	w8, [sp, #20]
    d5b4:	str	w8, [sp, #16]
    d5b8:	b	d5d8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2110>
    d5bc:	mov	w8, #0x1                   	// #1
    d5c0:	ldur	x9, [x29, #-16]
    d5c4:	add	x0, x9, #0x160
    d5c8:	str	w8, [sp, #12]
    d5cc:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    d5d0:	ldr	w8, [sp, #12]
    d5d4:	str	w8, [sp, #16]
    d5d8:	ldr	w8, [sp, #16]
    d5dc:	cbz	w8, d654 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x218c>
    d5e0:	str	wzr, [sp, #72]
    d5e4:	ldr	w8, [sp, #72]
    d5e8:	cmp	w8, #0x0
    d5ec:	cset	w8, ne  // ne = any
    d5f0:	eor	w8, w8, #0x1
    d5f4:	tbnz	w8, #0, d5fc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2134>
    d5f8:	b	d648 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2180>
    d5fc:	ldur	x8, [x29, #-16]
    d600:	ldr	w9, [x8]
    d604:	cmp	w9, #0x1
    d608:	b.ne	d624 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x215c>  // b.any
    d60c:	ldur	x8, [x29, #-16]
    d610:	add	x0, x8, #0x190
    d614:	ldur	x8, [x29, #-16]
    d618:	add	x1, x8, #0x160
    d61c:	bl	d1c0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1cf8>
    d620:	b	d5fc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2134>
    d624:	ldur	x8, [x29, #-16]
    d628:	ldr	w9, [x8]
    d62c:	stur	w9, [x29, #-20]
    d630:	ldur	x8, [x29, #-16]
    d634:	ldr	x8, [x8, #16]
    d638:	str	x8, [sp, #112]
    d63c:	mov	w8, #0x1                   	// #1
    d640:	str	w8, [sp, #72]
    d644:	b	d5e4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x211c>
    d648:	mov	w8, #0x1                   	// #1
    d64c:	str	w8, [sp, #76]
    d650:	b	d594 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x20cc>
    d654:	ldur	w8, [x29, #-20]
    d658:	cmp	w8, #0x3
    d65c:	b.cc	d66c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x21a4>  // b.lo, b.ul, b.last
    d660:	ldur	w8, [x29, #-20]
    d664:	stur	w8, [x29, #-4]
    d668:	b	d720 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2258>
    d66c:	ldur	x8, [x29, #-16]
    d670:	ldr	x8, [x8, #24]
    d674:	str	xzr, [x8, #8]
    d678:	ldur	x8, [x29, #-16]
    d67c:	add	x0, x8, #0x88
    d680:	ldur	x8, [x29, #-16]
    d684:	ldr	x1, [x8, #8]
    d688:	ldr	x2, [sp, #112]
    d68c:	ldur	x8, [x29, #-16]
    d690:	ldr	x8, [x8, #24]
    d694:	ldr	x3, [x8]
    d698:	ldur	x8, [x29, #-16]
    d69c:	ldr	x8, [x8, #24]
    d6a0:	add	x4, x8, #0x8
    d6a4:	ldr	x5, [sp, #104]
    d6a8:	bl	34c0 <lzma_block_uncomp_encode@plt>
    d6ac:	str	w0, [sp, #132]
    d6b0:	ldr	w9, [sp, #132]
    d6b4:	cbz	w9, d6d0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2208>
    d6b8:	ldur	x0, [x29, #-16]
    d6bc:	mov	w1, #0xb                   	// #11
    d6c0:	bl	d734 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x226c>
    d6c4:	mov	w8, #0x3                   	// #3
    d6c8:	stur	w8, [x29, #-4]
    d6cc:	b	d720 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2258>
    d6d0:	b	d6ec <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2224>
    d6d4:	ldur	x0, [x29, #-16]
    d6d8:	ldr	w1, [sp, #132]
    d6dc:	bl	d734 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x226c>
    d6e0:	mov	w8, #0x3                   	// #3
    d6e4:	stur	w8, [x29, #-4]
    d6e8:	b	d720 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2258>
    d6ec:	ldur	x8, [x29, #-16]
    d6f0:	add	x0, x8, #0x88
    d6f4:	bl	3190 <lzma_block_unpadded_size@plt>
    d6f8:	ldur	x8, [x29, #-16]
    d6fc:	ldr	x8, [x8, #24]
    d700:	str	x0, [x8, #16]
    d704:	ldur	x8, [x29, #-16]
    d708:	ldr	x8, [x8, #160]
    d70c:	ldur	x9, [x29, #-16]
    d710:	ldr	x9, [x9, #24]
    d714:	str	x8, [x9, #24]
    d718:	mov	w10, #0x2                   	// #2
    d71c:	stur	w10, [x29, #-4]
    d720:	ldur	w0, [x29, #-4]
    d724:	ldr	x28, [sp, #384]
    d728:	ldp	x29, x30, [sp, #368]
    d72c:	add	sp, sp, #0x190
    d730:	ret
    d734:	sub	sp, sp, #0x30
    d738:	stp	x29, x30, [sp, #32]
    d73c:	add	x29, sp, #0x20
    d740:	stur	x0, [x29, #-8]
    d744:	stur	w1, [x29, #-12]
    d748:	str	wzr, [sp, #16]
    d74c:	ldr	w8, [sp, #16]
    d750:	cbz	w8, d778 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x22b0>
    d754:	mov	w8, wzr
    d758:	ldur	x9, [x29, #-8]
    d75c:	ldr	x9, [x9, #32]
    d760:	add	x0, x9, #0x168
    d764:	str	w8, [sp, #8]
    d768:	bl	c438 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf70>
    d76c:	ldr	w8, [sp, #8]
    d770:	str	w8, [sp, #4]
    d774:	b	d798 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x22d0>
    d778:	mov	w8, #0x1                   	// #1
    d77c:	ldur	x9, [x29, #-8]
    d780:	ldr	x9, [x9, #32]
    d784:	add	x0, x9, #0x168
    d788:	str	w8, [sp]
    d78c:	bl	c460 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xf98>
    d790:	ldr	w8, [sp]
    d794:	str	w8, [sp, #4]
    d798:	ldr	w8, [sp, #4]
    d79c:	cbz	w8, d804 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x233c>
    d7a0:	str	wzr, [sp, #12]
    d7a4:	ldr	w8, [sp, #12]
    d7a8:	cmp	w8, #0x0
    d7ac:	cset	w8, ne  // ne = any
    d7b0:	eor	w8, w8, #0x1
    d7b4:	tbnz	w8, #0, d7bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x22f4>
    d7b8:	b	d7f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2330>
    d7bc:	ldur	x8, [x29, #-8]
    d7c0:	ldr	x8, [x8, #32]
    d7c4:	ldr	w9, [x8, #308]
    d7c8:	cbnz	w9, d7dc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2314>
    d7cc:	ldur	w8, [x29, #-12]
    d7d0:	ldur	x9, [x29, #-8]
    d7d4:	ldr	x9, [x9, #32]
    d7d8:	str	w8, [x9, #308]
    d7dc:	ldur	x8, [x29, #-8]
    d7e0:	ldr	x8, [x8, #32]
    d7e4:	add	x0, x8, #0x198
    d7e8:	bl	cb88 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c0>
    d7ec:	mov	w8, #0x1                   	// #1
    d7f0:	str	w8, [sp, #12]
    d7f4:	b	d7a4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x22dc>
    d7f8:	mov	w8, #0x1                   	// #1
    d7fc:	str	w8, [sp, #16]
    d800:	b	d74c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2284>
    d804:	ldp	x29, x30, [sp, #32]
    d808:	add	sp, sp, #0x30
    d80c:	ret
    d810:	sub	sp, sp, #0x50
    d814:	stp	x29, x30, [sp, #64]
    d818:	add	x29, sp, #0x40
    d81c:	mov	w8, #0x3e8                 	// #1000
    d820:	mov	w9, #0x4240                	// #16960
    d824:	movk	w9, #0xf, lsl #16
    d828:	mov	x10, #0xca00                	// #51712
    d82c:	movk	x10, #0x3b9a, lsl #16
    d830:	add	x11, sp, #0x18
    d834:	stur	x0, [x29, #-8]
    d838:	stur	x1, [x29, #-16]
    d83c:	stur	w2, [x29, #-20]
    d840:	ldur	w12, [x29, #-20]
    d844:	udiv	w12, w12, w8
    d848:	mov	w13, w12
    d84c:	ubfx	x13, x13, #0, #32
    d850:	ldur	x14, [x29, #-8]
    d854:	str	x13, [x14]
    d858:	ldur	w12, [x29, #-20]
    d85c:	udiv	w15, w12, w8
    d860:	mul	w8, w15, w8
    d864:	subs	w8, w12, w8
    d868:	mul	w8, w8, w9
    d86c:	mov	w13, w8
    d870:	ubfx	x13, x13, #0, #32
    d874:	ldur	x14, [x29, #-8]
    d878:	str	x13, [x14, #8]
    d87c:	ldur	x13, [x29, #-16]
    d880:	ldr	w0, [x13, #48]
    d884:	mov	x1, x11
    d888:	str	x10, [sp, #8]
    d88c:	bl	3150 <clock_gettime@plt>
    d890:	str	w0, [sp, #20]
    d894:	ldr	x10, [sp, #24]
    d898:	ldur	x11, [x29, #-8]
    d89c:	ldr	x13, [x11]
    d8a0:	add	x10, x13, x10
    d8a4:	str	x10, [x11]
    d8a8:	ldr	x10, [sp, #32]
    d8ac:	ldur	x11, [x29, #-8]
    d8b0:	ldr	x13, [x11, #8]
    d8b4:	add	x10, x13, x10
    d8b8:	str	x10, [x11, #8]
    d8bc:	ldur	x10, [x29, #-8]
    d8c0:	ldr	x10, [x10, #8]
    d8c4:	ldr	x11, [sp, #8]
    d8c8:	cmp	x10, x11
    d8cc:	b.lt	d8f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2430>  // b.tstop
    d8d0:	ldur	x8, [x29, #-8]
    d8d4:	ldr	x9, [x8, #8]
    d8d8:	mov	x10, #0xca00                	// #51712
    d8dc:	movk	x10, #0x3b9a, lsl #16
    d8e0:	subs	x9, x9, x10
    d8e4:	str	x9, [x8, #8]
    d8e8:	ldur	x8, [x29, #-8]
    d8ec:	ldr	x9, [x8]
    d8f0:	add	x9, x9, #0x1
    d8f4:	str	x9, [x8]
    d8f8:	ldp	x29, x30, [sp, #64]
    d8fc:	add	sp, sp, #0x50
    d900:	ret
    d904:	sub	sp, sp, #0x30
    d908:	stp	x29, x30, [sp, #32]
    d90c:	add	x29, sp, #0x20
    d910:	stur	x0, [x29, #-8]
    d914:	str	x1, [sp, #16]
    d918:	str	x2, [sp, #8]
    d91c:	ldur	x0, [x29, #-8]
    d920:	ldr	x1, [sp, #16]
    d924:	ldr	x2, [sp, #8]
    d928:	bl	3560 <pthread_cond_timedwait@plt>
    d92c:	str	w0, [sp, #4]
    d930:	ldr	w0, [sp, #4]
    d934:	ldp	x29, x30, [sp, #32]
    d938:	add	sp, sp, #0x30
    d93c:	ret
    d940:	sub	sp, sp, #0x20
    d944:	stp	x29, x30, [sp, #16]
    d948:	add	x29, sp, #0x10
    d94c:	mov	x8, xzr
    d950:	str	x0, [sp, #8]
    d954:	ldr	x0, [sp, #8]
    d958:	mov	x1, x8
    d95c:	bl	32d0 <pthread_join@plt>
    d960:	ldp	x29, x30, [sp, #16]
    d964:	add	sp, sp, #0x20
    d968:	ret
    d96c:	sub	sp, sp, #0xb0
    d970:	stp	x29, x30, [sp, #160]
    d974:	add	x29, sp, #0xa0
    d978:	adrp	x8, d000 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b38>
    d97c:	add	x8, x8, #0x96c
    d980:	stur	x0, [x29, #-16]
    d984:	stur	x1, [x29, #-24]
    d988:	stur	x2, [x29, #-32]
    d98c:	and	w9, w3, #0x1
    d990:	sturb	w9, [x29, #-33]
    d994:	str	x8, [sp, #32]
    d998:	ldur	x8, [x29, #-16]
    d99c:	ldr	x8, [x8, #16]
    d9a0:	ldr	x9, [sp, #32]
    d9a4:	cmp	x9, x8
    d9a8:	b.eq	d9b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x24f0>  // b.none
    d9ac:	ldur	x0, [x29, #-16]
    d9b0:	ldur	x1, [x29, #-24]
    d9b4:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    d9b8:	ldur	x8, [x29, #-16]
    d9bc:	ldr	x9, [sp, #32]
    d9c0:	str	x9, [x8, #16]
    d9c4:	ldur	x8, [x29, #-16]
    d9c8:	ldr	x8, [x8]
    d9cc:	stur	x8, [x29, #-48]
    d9d0:	ldur	x8, [x29, #-48]
    d9d4:	cbnz	x8, da80 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x25b8>
    d9d8:	ldur	x1, [x29, #-24]
    d9dc:	mov	x0, #0xe0                  	// #224
    d9e0:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    d9e4:	stur	x0, [x29, #-48]
    d9e8:	ldur	x8, [x29, #-48]
    d9ec:	cbnz	x8, d9fc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2534>
    d9f0:	mov	w8, #0x5                   	// #5
    d9f4:	stur	w8, [x29, #-4]
    d9f8:	b	db04 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x263c>
    d9fc:	ldur	x8, [x29, #-48]
    da00:	ldur	x9, [x29, #-16]
    da04:	str	x8, [x9]
    da08:	ldur	x8, [x29, #-16]
    da0c:	adrp	x9, d000 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b38>
    da10:	add	x9, x9, #0xb14
    da14:	str	x9, [x8, #24]
    da18:	ldur	x8, [x29, #-16]
    da1c:	adrp	x9, d000 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b38>
    da20:	add	x9, x9, #0xf40
    da24:	str	x9, [x8, #32]
    da28:	ldur	x8, [x29, #-16]
    da2c:	adrp	x9, d000 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b38>
    da30:	add	x9, x9, #0xf80
    da34:	str	x9, [x8, #56]
    da38:	ldur	x0, [x29, #-48]
    da3c:	add	x8, sp, #0x28
    da40:	str	x0, [sp, #24]
    da44:	mov	x0, x8
    da48:	mov	w10, wzr
    da4c:	mov	w1, w10
    da50:	mov	x9, #0x48                  	// #72
    da54:	mov	x2, x9
    da58:	str	x8, [sp, #16]
    da5c:	str	x9, [sp, #8]
    da60:	bl	3230 <memset@plt>
    da64:	mov	x8, #0xffffffffffffffff    	// #-1
    da68:	str	x8, [sp, #48]
    da6c:	str	xzr, [sp, #56]
    da70:	ldr	x0, [sp, #24]
    da74:	ldr	x1, [sp, #16]
    da78:	ldr	x2, [sp, #8]
    da7c:	bl	3090 <memcpy@plt>
    da80:	ldur	x8, [x29, #-48]
    da84:	str	wzr, [x8, #72]
    da88:	ldurb	w9, [x29, #-33]
    da8c:	ldur	x8, [x29, #-48]
    da90:	and	w9, w9, #0x1
    da94:	strb	w9, [x8, #76]
    da98:	ldur	x8, [x29, #-48]
    da9c:	mov	x10, xzr
    daa0:	str	xzr, [x8, #80]
    daa4:	ldur	x8, [x29, #-48]
    daa8:	str	wzr, [x8, #112]
    daac:	ldur	x8, [x29, #-48]
    dab0:	str	x10, [x8, #120]
    dab4:	ldur	x8, [x29, #-48]
    dab8:	str	wzr, [x8, #128]
    dabc:	ldur	x8, [x29, #-48]
    dac0:	str	xzr, [x8, #88]
    dac4:	ldur	x8, [x29, #-32]
    dac8:	mov	x10, #0x1                   	// #1
    dacc:	cmp	x10, x8
    dad0:	b.ls	dae0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2618>  // b.plast
    dad4:	mov	x8, #0x1                   	// #1
    dad8:	str	x8, [sp]
    dadc:	b	dae8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2620>
    dae0:	ldur	x8, [x29, #-32]
    dae4:	str	x8, [sp]
    dae8:	ldr	x8, [sp]
    daec:	ldur	x9, [x29, #-48]
    daf0:	str	x8, [x9, #96]
    daf4:	ldur	x8, [x29, #-48]
    daf8:	mov	x9, #0x8000                	// #32768
    dafc:	str	x9, [x8, #104]
    db00:	stur	wzr, [x29, #-4]
    db04:	ldur	w0, [x29, #-4]
    db08:	ldp	x29, x30, [sp, #160]
    db0c:	add	sp, sp, #0xb0
    db10:	ret
    db14:	sub	sp, sp, #0xc0
    db18:	stp	x29, x30, [sp, #176]
    db1c:	add	x29, sp, #0xb0
    db20:	sub	x8, x29, #0x10
    db24:	ldr	w9, [x29, #16]
    db28:	str	x0, [x8]
    db2c:	stur	x1, [x29, #-24]
    db30:	stur	x2, [x29, #-32]
    db34:	stur	x3, [x29, #-40]
    db38:	stur	x4, [x29, #-48]
    db3c:	stur	x5, [x29, #-56]
    db40:	stur	x6, [x29, #-64]
    db44:	stur	x7, [x29, #-72]
    db48:	stur	w9, [x29, #-76]
    db4c:	ldr	x8, [x8]
    db50:	str	x8, [sp, #88]
    db54:	ldur	x8, [x29, #-64]
    db58:	ldr	x8, [x8]
    db5c:	ldur	x9, [x29, #-72]
    db60:	mov	w10, #0x0                   	// #0
    db64:	cmp	x8, x9
    db68:	str	w10, [sp, #24]
    db6c:	b.cs	dba8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x26e0>  // b.hs, b.nlast
    db70:	ldr	x8, [sp, #88]
    db74:	ldr	w9, [x8, #72]
    db78:	mov	w10, #0x1                   	// #1
    db7c:	cmp	w9, #0x4
    db80:	str	w10, [sp, #20]
    db84:	b.eq	dba0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x26d8>  // b.none
    db88:	ldur	x8, [x29, #-40]
    db8c:	ldr	x8, [x8]
    db90:	ldur	x9, [x29, #-48]
    db94:	cmp	x8, x9
    db98:	cset	w10, cc  // cc = lo, ul, last
    db9c:	str	w10, [sp, #20]
    dba0:	ldr	w8, [sp, #20]
    dba4:	str	w8, [sp, #24]
    dba8:	ldr	w8, [sp, #24]
    dbac:	tbnz	w8, #0, dbb4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x26ec>
    dbb0:	b	df2c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a64>
    dbb4:	ldr	x8, [sp, #88]
    dbb8:	ldr	w9, [x8, #72]
    dbbc:	subs	w9, w9, #0x0
    dbc0:	mov	w8, w9
    dbc4:	ubfx	x8, x8, #0, #32
    dbc8:	cmp	x8, #0x4
    dbcc:	str	x8, [sp, #8]
    dbd0:	b.hi	df1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a54>  // b.pmore
    dbd4:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    dbd8:	add	x8, x8, #0xa58
    dbdc:	ldr	x11, [sp, #8]
    dbe0:	ldrsw	x10, [x8, x11, lsl #2]
    dbe4:	add	x9, x8, x10
    dbe8:	br	x9
    dbec:	ldr	x8, [sp, #88]
    dbf0:	add	x0, x8, #0x70
    dbf4:	ldur	x8, [x29, #-32]
    dbf8:	ldur	x9, [x29, #-40]
    dbfc:	ldr	x9, [x9]
    dc00:	ldrb	w1, [x8, x9]
    dc04:	bl	27450 <lzma_mode_is_supported@@XZ_5.0+0xcee8>
    dc08:	tbnz	w0, #0, dc10 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2748>
    dc0c:	b	dc1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2754>
    dc10:	mov	w8, #0x7                   	// #7
    dc14:	stur	w8, [x29, #-4]
    dc18:	b	df30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a68>
    dc1c:	ldr	x8, [sp, #88]
    dc20:	mov	w9, #0x1                   	// #1
    dc24:	str	w9, [x8, #72]
    dc28:	ldur	x8, [x29, #-40]
    dc2c:	ldr	x10, [x8]
    dc30:	add	x10, x10, #0x1
    dc34:	str	x10, [x8]
    dc38:	b	df28 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a60>
    dc3c:	ldur	x8, [x29, #-32]
    dc40:	ldur	x9, [x29, #-40]
    dc44:	ldr	x9, [x9]
    dc48:	ldrb	w10, [x8, x9]
    dc4c:	mov	w8, w10
    dc50:	ldr	x9, [sp, #88]
    dc54:	ldr	x9, [x9, #80]
    dc58:	mov	x11, #0x8                   	// #8
    dc5c:	mul	x9, x9, x11
    dc60:	lsl	x8, x8, x9
    dc64:	ldr	x9, [sp, #88]
    dc68:	ldr	w10, [x9, #112]
    dc6c:	mov	w11, w10
    dc70:	orr	x8, x11, x8
    dc74:	str	w8, [x9, #112]
    dc78:	ldr	x9, [sp, #88]
    dc7c:	ldr	x11, [x9, #80]
    dc80:	add	x11, x11, #0x1
    dc84:	str	x11, [x9, #80]
    dc88:	cmp	x11, #0x4
    dc8c:	b.ne	dd54 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x288c>  // b.any
    dc90:	ldr	x8, [sp, #88]
    dc94:	ldrb	w9, [x8, #76]
    dc98:	tbnz	w9, #0, dca0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x27d8>
    dc9c:	b	dd40 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2878>
    dca0:	ldr	x8, [sp, #88]
    dca4:	ldr	w9, [x8, #112]
    dca8:	mov	w10, #0xffffffff            	// #-1
    dcac:	cmp	w9, w10
    dcb0:	b.eq	dd40 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2878>  // b.none
    dcb4:	ldr	x8, [sp, #88]
    dcb8:	ldr	w9, [x8, #112]
    dcbc:	subs	w9, w9, #0x1
    dcc0:	str	w9, [sp, #84]
    dcc4:	ldr	w9, [sp, #84]
    dcc8:	ldr	w10, [sp, #84]
    dccc:	orr	w9, w10, w9, lsr #2
    dcd0:	str	w9, [sp, #84]
    dcd4:	ldr	w9, [sp, #84]
    dcd8:	ldr	w10, [sp, #84]
    dcdc:	orr	w9, w10, w9, lsr #3
    dce0:	str	w9, [sp, #84]
    dce4:	ldr	w9, [sp, #84]
    dce8:	ldr	w10, [sp, #84]
    dcec:	orr	w9, w10, w9, lsr #4
    dcf0:	str	w9, [sp, #84]
    dcf4:	ldr	w9, [sp, #84]
    dcf8:	ldr	w10, [sp, #84]
    dcfc:	orr	w9, w10, w9, lsr #8
    dd00:	str	w9, [sp, #84]
    dd04:	ldr	w9, [sp, #84]
    dd08:	ldr	w10, [sp, #84]
    dd0c:	orr	w9, w10, w9, lsr #16
    dd10:	str	w9, [sp, #84]
    dd14:	ldr	w9, [sp, #84]
    dd18:	add	w9, w9, #0x1
    dd1c:	str	w9, [sp, #84]
    dd20:	ldr	w9, [sp, #84]
    dd24:	ldr	x8, [sp, #88]
    dd28:	ldr	w10, [x8, #112]
    dd2c:	cmp	w9, w10
    dd30:	b.eq	dd40 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2878>  // b.none
    dd34:	mov	w8, #0x7                   	// #7
    dd38:	stur	w8, [x29, #-4]
    dd3c:	b	df30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a68>
    dd40:	ldr	x8, [sp, #88]
    dd44:	str	xzr, [x8, #80]
    dd48:	ldr	x8, [sp, #88]
    dd4c:	mov	w9, #0x2                   	// #2
    dd50:	str	w9, [x8, #72]
    dd54:	ldur	x8, [x29, #-40]
    dd58:	ldr	x9, [x8]
    dd5c:	add	x9, x9, #0x1
    dd60:	str	x9, [x8]
    dd64:	b	df28 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a60>
    dd68:	ldur	x8, [x29, #-32]
    dd6c:	ldur	x9, [x29, #-40]
    dd70:	ldr	x9, [x9]
    dd74:	ldrb	w10, [x8, x9]
    dd78:	mov	w8, w10
    dd7c:	ldr	x9, [sp, #88]
    dd80:	ldr	x9, [x9, #80]
    dd84:	mov	x11, #0x8                   	// #8
    dd88:	mul	x9, x9, x11
    dd8c:	lsl	x8, x8, x9
    dd90:	ldr	x9, [sp, #88]
    dd94:	ldr	x11, [x9, #88]
    dd98:	orr	x8, x11, x8
    dd9c:	str	x8, [x9, #88]
    dda0:	ldur	x8, [x29, #-40]
    dda4:	ldr	x9, [x8]
    dda8:	add	x9, x9, #0x1
    ddac:	str	x9, [x8]
    ddb0:	ldr	x8, [sp, #88]
    ddb4:	ldr	x9, [x8, #80]
    ddb8:	add	x9, x9, #0x1
    ddbc:	str	x9, [x8, #80]
    ddc0:	cmp	x9, #0x8
    ddc4:	b.cs	ddcc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2904>  // b.hs, b.nlast
    ddc8:	b	df28 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a60>
    ddcc:	ldr	x8, [sp, #88]
    ddd0:	ldrb	w9, [x8, #76]
    ddd4:	tbnz	w9, #0, dddc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2914>
    ddd8:	b	de10 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2948>
    dddc:	ldr	x8, [sp, #88]
    dde0:	ldr	x8, [x8, #88]
    dde4:	mov	x9, #0xffffffffffffffff    	// #-1
    dde8:	cmp	x8, x9
    ddec:	b.eq	de10 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2948>  // b.none
    ddf0:	ldr	x8, [sp, #88]
    ddf4:	ldr	x8, [x8, #88]
    ddf8:	mov	x9, #0x4000000000          	// #274877906944
    ddfc:	cmp	x8, x9
    de00:	b.cc	de10 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2948>  // b.lo, b.ul, b.last
    de04:	mov	w8, #0x7                   	// #7
    de08:	stur	w8, [x29, #-4]
    de0c:	b	df30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a68>
    de10:	ldr	x8, [sp, #88]
    de14:	add	x0, x8, #0x70
    de18:	bl	27554 <lzma_mode_is_supported@@XZ_5.0+0xcfec>
    de1c:	add	x8, x0, #0x8, lsl #12
    de20:	ldr	x9, [sp, #88]
    de24:	str	x8, [x9, #104]
    de28:	ldr	x8, [sp, #88]
    de2c:	str	xzr, [x8, #80]
    de30:	ldr	x8, [sp, #88]
    de34:	mov	w10, #0x3                   	// #3
    de38:	str	w10, [x8, #72]
    de3c:	ldr	x8, [sp, #88]
    de40:	ldr	x8, [x8, #104]
    de44:	ldr	x9, [sp, #88]
    de48:	ldr	x9, [x9, #96]
    de4c:	cmp	x8, x9
    de50:	b.ls	de60 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2998>  // b.plast
    de54:	mov	w8, #0x6                   	// #6
    de58:	stur	w8, [x29, #-4]
    de5c:	b	df30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a68>
    de60:	add	x8, sp, #0x20
    de64:	str	xzr, [sp, #32]
    de68:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    de6c:	ldr	x9, [x9, #3944]
    de70:	str	x9, [x8, #8]
    de74:	ldr	x9, [sp, #88]
    de78:	add	x9, x9, #0x70
    de7c:	str	x9, [x8, #16]
    de80:	str	xzr, [sp, #56]
    de84:	str	xzr, [sp, #64]
    de88:	str	xzr, [sp, #72]
    de8c:	ldr	x0, [sp, #88]
    de90:	ldur	x1, [x29, #-24]
    de94:	mov	x2, x8
    de98:	bl	395c <lzma_version_string@@XZ_5.0+0x24c>
    de9c:	str	w0, [sp, #28]
    dea0:	ldr	w10, [sp, #28]
    dea4:	cbz	w10, deb4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x29ec>
    dea8:	ldr	w8, [sp, #28]
    deac:	stur	w8, [x29, #-4]
    deb0:	b	df30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a68>
    deb4:	ldr	x8, [sp, #88]
    deb8:	ldr	x0, [x8]
    debc:	ldr	x8, [sp, #88]
    dec0:	ldr	x1, [x8, #88]
    dec4:	bl	18c94 <lzma_mf_is_supported@@XZ_5.0+0x2db0>
    dec8:	ldr	x8, [sp, #88]
    decc:	mov	w9, #0x4                   	// #4
    ded0:	str	w9, [x8, #72]
    ded4:	b	df28 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a60>
    ded8:	ldr	x8, [sp, #88]
    dedc:	ldr	x8, [x8, #24]
    dee0:	ldr	x9, [sp, #88]
    dee4:	ldr	x0, [x9]
    dee8:	ldur	x1, [x29, #-24]
    deec:	ldur	x2, [x29, #-32]
    def0:	ldur	x3, [x29, #-40]
    def4:	ldur	x4, [x29, #-48]
    def8:	ldur	x5, [x29, #-56]
    defc:	ldur	x6, [x29, #-64]
    df00:	ldur	x7, [x29, #-72]
    df04:	ldur	w10, [x29, #-76]
    df08:	mov	x9, sp
    df0c:	str	w10, [x9]
    df10:	blr	x8
    df14:	stur	w0, [x29, #-4]
    df18:	b	df30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a68>
    df1c:	mov	w8, #0xb                   	// #11
    df20:	stur	w8, [x29, #-4]
    df24:	b	df30 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2a68>
    df28:	b	db54 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x268c>
    df2c:	stur	wzr, [x29, #-4]
    df30:	ldur	w0, [x29, #-4]
    df34:	ldp	x29, x30, [sp, #176]
    df38:	add	sp, sp, #0xc0
    df3c:	ret
    df40:	sub	sp, sp, #0x30
    df44:	stp	x29, x30, [sp, #32]
    df48:	add	x29, sp, #0x20
    df4c:	stur	x0, [x29, #-8]
    df50:	str	x1, [sp, #16]
    df54:	ldur	x8, [x29, #-8]
    df58:	str	x8, [sp, #8]
    df5c:	ldr	x0, [sp, #8]
    df60:	ldr	x1, [sp, #16]
    df64:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    df68:	ldr	x0, [sp, #8]
    df6c:	ldr	x1, [sp, #16]
    df70:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    df74:	ldp	x29, x30, [sp, #32]
    df78:	add	sp, sp, #0x30
    df7c:	ret
    df80:	sub	sp, sp, #0x30
    df84:	str	x0, [sp, #32]
    df88:	str	x1, [sp, #24]
    df8c:	str	x2, [sp, #16]
    df90:	str	x3, [sp, #8]
    df94:	ldr	x8, [sp, #32]
    df98:	str	x8, [sp]
    df9c:	ldr	x8, [sp]
    dfa0:	ldr	x8, [x8, #104]
    dfa4:	ldr	x9, [sp, #24]
    dfa8:	str	x8, [x9]
    dfac:	ldr	x8, [sp]
    dfb0:	ldr	x8, [x8, #96]
    dfb4:	ldr	x9, [sp, #16]
    dfb8:	str	x8, [x9]
    dfbc:	ldr	x8, [sp, #8]
    dfc0:	cbz	x8, dff0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2b28>
    dfc4:	ldr	x8, [sp, #8]
    dfc8:	ldr	x9, [sp]
    dfcc:	ldr	x9, [x9, #104]
    dfd0:	cmp	x8, x9
    dfd4:	b.cs	dfe4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2b1c>  // b.hs, b.nlast
    dfd8:	mov	w8, #0x6                   	// #6
    dfdc:	str	w8, [sp, #44]
    dfe0:	b	dff4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x2b2c>
    dfe4:	ldr	x8, [sp, #8]
    dfe8:	ldr	x9, [sp]
    dfec:	str	x8, [x9, #96]
    dff0:	str	wzr, [sp, #44]
    dff4:	ldr	w0, [sp, #44]
    dff8:	add	sp, sp, #0x30
    dffc:	ret

000000000000e000 <lzma_alone_decoder@@XZ_5.0>:
    e000:	sub	sp, sp, #0x30
    e004:	stp	x29, x30, [sp, #32]
    e008:	add	x29, sp, #0x20
    e00c:	str	x0, [sp, #16]
    e010:	str	x1, [sp, #8]
    e014:	ldr	x0, [sp, #16]
    e018:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    e01c:	str	w0, [sp, #4]
    e020:	ldr	w8, [sp, #4]
    e024:	cbz	w8, e034 <lzma_alone_decoder@@XZ_5.0+0x34>
    e028:	ldr	w8, [sp, #4]
    e02c:	stur	w8, [x29, #-4]
    e030:	b	e094 <lzma_alone_decoder@@XZ_5.0+0x94>
    e034:	ldr	x8, [sp, #16]
    e038:	ldr	x0, [x8, #56]
    e03c:	ldr	x8, [sp, #16]
    e040:	ldr	x1, [x8, #48]
    e044:	ldr	x2, [sp, #8]
    e048:	mov	w9, wzr
    e04c:	and	w3, w9, #0x1
    e050:	bl	d96c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x24a4>
    e054:	str	w0, [sp]
    e058:	ldr	w9, [sp]
    e05c:	cbz	w9, e074 <lzma_alone_decoder@@XZ_5.0+0x74>
    e060:	ldr	x0, [sp, #16]
    e064:	bl	3320 <lzma_end@plt>
    e068:	ldr	w8, [sp]
    e06c:	stur	w8, [x29, #-4]
    e070:	b	e094 <lzma_alone_decoder@@XZ_5.0+0x94>
    e074:	ldr	x8, [sp, #16]
    e078:	ldr	x8, [x8, #56]
    e07c:	mov	w9, #0x1                   	// #1
    e080:	strb	w9, [x8, #88]
    e084:	ldr	x8, [sp, #16]
    e088:	ldr	x8, [x8, #56]
    e08c:	strb	w9, [x8, #91]
    e090:	stur	wzr, [x29, #-4]
    e094:	ldur	w0, [x29, #-4]
    e098:	ldp	x29, x30, [sp, #32]
    e09c:	add	sp, sp, #0x30
    e0a0:	ret

000000000000e0a4 <lzma_auto_decoder@@XZ_5.0>:
    e0a4:	sub	sp, sp, #0x40
    e0a8:	stp	x29, x30, [sp, #48]
    e0ac:	add	x29, sp, #0x30
    e0b0:	stur	x0, [x29, #-16]
    e0b4:	str	x1, [sp, #24]
    e0b8:	str	w2, [sp, #20]
    e0bc:	ldur	x0, [x29, #-16]
    e0c0:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    e0c4:	str	w0, [sp, #16]
    e0c8:	ldr	w8, [sp, #16]
    e0cc:	cbz	w8, e0dc <lzma_auto_decoder@@XZ_5.0+0x38>
    e0d0:	ldr	w8, [sp, #16]
    e0d4:	stur	w8, [x29, #-4]
    e0d8:	b	e138 <lzma_auto_decoder@@XZ_5.0+0x94>
    e0dc:	ldur	x8, [x29, #-16]
    e0e0:	ldr	x0, [x8, #56]
    e0e4:	ldur	x8, [x29, #-16]
    e0e8:	ldr	x1, [x8, #48]
    e0ec:	ldr	x2, [sp, #24]
    e0f0:	ldr	w3, [sp, #20]
    e0f4:	bl	e148 <lzma_auto_decoder@@XZ_5.0+0xa4>
    e0f8:	str	w0, [sp, #12]
    e0fc:	ldr	w9, [sp, #12]
    e100:	cbz	w9, e118 <lzma_auto_decoder@@XZ_5.0+0x74>
    e104:	ldur	x0, [x29, #-16]
    e108:	bl	3320 <lzma_end@plt>
    e10c:	ldr	w8, [sp, #12]
    e110:	stur	w8, [x29, #-4]
    e114:	b	e138 <lzma_auto_decoder@@XZ_5.0+0x94>
    e118:	ldur	x8, [x29, #-16]
    e11c:	ldr	x8, [x8, #56]
    e120:	mov	w9, #0x1                   	// #1
    e124:	strb	w9, [x8, #88]
    e128:	ldur	x8, [x29, #-16]
    e12c:	ldr	x8, [x8, #56]
    e130:	strb	w9, [x8, #91]
    e134:	stur	wzr, [x29, #-4]
    e138:	ldur	w0, [x29, #-4]
    e13c:	ldp	x29, x30, [sp, #48]
    e140:	add	sp, sp, #0x40
    e144:	ret
    e148:	sub	sp, sp, #0xb0
    e14c:	stp	x29, x30, [sp, #160]
    e150:	add	x29, sp, #0xa0
    e154:	adrp	x8, e000 <lzma_alone_decoder@@XZ_5.0>
    e158:	add	x8, x8, #0x148
    e15c:	stur	x0, [x29, #-16]
    e160:	stur	x1, [x29, #-24]
    e164:	stur	x2, [x29, #-32]
    e168:	stur	w3, [x29, #-36]
    e16c:	str	x8, [sp, #32]
    e170:	ldur	x8, [x29, #-16]
    e174:	ldr	x8, [x8, #16]
    e178:	ldr	x9, [sp, #32]
    e17c:	cmp	x9, x8
    e180:	b.eq	e190 <lzma_auto_decoder@@XZ_5.0+0xec>  // b.none
    e184:	ldur	x0, [x29, #-16]
    e188:	ldur	x1, [x29, #-24]
    e18c:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    e190:	ldur	x8, [x29, #-16]
    e194:	ldr	x9, [sp, #32]
    e198:	str	x9, [x8, #16]
    e19c:	ldur	w8, [x29, #-36]
    e1a0:	and	w8, w8, #0xffffffe0
    e1a4:	cbz	w8, e1b4 <lzma_auto_decoder@@XZ_5.0+0x110>
    e1a8:	mov	w8, #0x8                   	// #8
    e1ac:	stur	w8, [x29, #-4]
    e1b0:	b	e2c8 <lzma_auto_decoder@@XZ_5.0+0x224>
    e1b4:	ldur	x8, [x29, #-16]
    e1b8:	ldr	x8, [x8]
    e1bc:	stur	x8, [x29, #-48]
    e1c0:	ldur	x8, [x29, #-48]
    e1c4:	cbnz	x8, e280 <lzma_auto_decoder@@XZ_5.0+0x1dc>
    e1c8:	ldur	x1, [x29, #-24]
    e1cc:	mov	x0, #0x58                  	// #88
    e1d0:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    e1d4:	stur	x0, [x29, #-48]
    e1d8:	ldur	x8, [x29, #-48]
    e1dc:	cbnz	x8, e1ec <lzma_auto_decoder@@XZ_5.0+0x148>
    e1e0:	mov	w8, #0x5                   	// #5
    e1e4:	stur	w8, [x29, #-4]
    e1e8:	b	e2c8 <lzma_auto_decoder@@XZ_5.0+0x224>
    e1ec:	ldur	x8, [x29, #-48]
    e1f0:	ldur	x9, [x29, #-16]
    e1f4:	str	x8, [x9]
    e1f8:	ldur	x8, [x29, #-16]
    e1fc:	adrp	x9, e000 <lzma_alone_decoder@@XZ_5.0>
    e200:	add	x9, x9, #0x2d8
    e204:	str	x9, [x8, #24]
    e208:	ldur	x8, [x29, #-16]
    e20c:	adrp	x9, e000 <lzma_alone_decoder@@XZ_5.0>
    e210:	add	x9, x9, #0x4f4
    e214:	str	x9, [x8, #32]
    e218:	ldur	x8, [x29, #-16]
    e21c:	adrp	x9, e000 <lzma_alone_decoder@@XZ_5.0>
    e220:	add	x9, x9, #0x534
    e224:	str	x9, [x8, #48]
    e228:	ldur	x8, [x29, #-16]
    e22c:	adrp	x9, e000 <lzma_alone_decoder@@XZ_5.0>
    e230:	add	x9, x9, #0x590
    e234:	str	x9, [x8, #56]
    e238:	ldur	x0, [x29, #-48]
    e23c:	add	x8, sp, #0x28
    e240:	str	x0, [sp, #24]
    e244:	mov	x0, x8
    e248:	mov	w10, wzr
    e24c:	mov	w1, w10
    e250:	mov	x9, #0x48                  	// #72
    e254:	mov	x2, x9
    e258:	str	x8, [sp, #16]
    e25c:	str	x9, [sp, #8]
    e260:	bl	3230 <memset@plt>
    e264:	mov	x8, #0xffffffffffffffff    	// #-1
    e268:	str	x8, [sp, #48]
    e26c:	str	xzr, [sp, #56]
    e270:	ldr	x0, [sp, #24]
    e274:	ldr	x1, [sp, #16]
    e278:	ldr	x2, [sp, #8]
    e27c:	bl	3090 <memcpy@plt>
    e280:	ldur	x8, [x29, #-32]
    e284:	mov	x9, #0x1                   	// #1
    e288:	cmp	x9, x8
    e28c:	b.ls	e29c <lzma_auto_decoder@@XZ_5.0+0x1f8>  // b.plast
    e290:	mov	x8, #0x1                   	// #1
    e294:	str	x8, [sp]
    e298:	b	e2a4 <lzma_auto_decoder@@XZ_5.0+0x200>
    e29c:	ldur	x8, [x29, #-32]
    e2a0:	str	x8, [sp]
    e2a4:	ldr	x8, [sp]
    e2a8:	ldur	x9, [x29, #-48]
    e2ac:	str	x8, [x9, #72]
    e2b0:	ldur	w10, [x29, #-36]
    e2b4:	ldur	x8, [x29, #-48]
    e2b8:	str	w10, [x8, #80]
    e2bc:	ldur	x8, [x29, #-48]
    e2c0:	str	wzr, [x8, #84]
    e2c4:	stur	wzr, [x29, #-4]
    e2c8:	ldur	w0, [x29, #-4]
    e2cc:	ldp	x29, x30, [sp, #160]
    e2d0:	add	sp, sp, #0xb0
    e2d4:	ret
    e2d8:	sub	sp, sp, #0x80
    e2dc:	stp	x29, x30, [sp, #112]
    e2e0:	add	x29, sp, #0x70
    e2e4:	ldr	w8, [x29, #16]
    e2e8:	stur	x0, [x29, #-16]
    e2ec:	stur	x1, [x29, #-24]
    e2f0:	stur	x2, [x29, #-32]
    e2f4:	stur	x3, [x29, #-40]
    e2f8:	stur	x4, [x29, #-48]
    e2fc:	str	x5, [sp, #56]
    e300:	str	x6, [sp, #48]
    e304:	str	x7, [sp, #40]
    e308:	str	w8, [sp, #36]
    e30c:	ldur	x9, [x29, #-16]
    e310:	str	x9, [sp, #24]
    e314:	ldr	x9, [sp, #24]
    e318:	ldr	w8, [x9, #84]
    e31c:	str	w8, [sp, #8]
    e320:	cbz	w8, e348 <lzma_auto_decoder@@XZ_5.0+0x2a4>
    e324:	b	e328 <lzma_auto_decoder@@XZ_5.0+0x284>
    e328:	ldr	w8, [sp, #8]
    e32c:	cmp	w8, #0x1
    e330:	b.eq	e42c <lzma_auto_decoder@@XZ_5.0+0x388>  // b.none
    e334:	b	e338 <lzma_auto_decoder@@XZ_5.0+0x294>
    e338:	ldr	w8, [sp, #8]
    e33c:	cmp	w8, #0x2
    e340:	b.eq	e4a0 <lzma_auto_decoder@@XZ_5.0+0x3fc>  // b.none
    e344:	b	e4dc <lzma_auto_decoder@@XZ_5.0+0x438>
    e348:	ldur	x8, [x29, #-40]
    e34c:	ldr	x8, [x8]
    e350:	ldur	x9, [x29, #-48]
    e354:	cmp	x8, x9
    e358:	b.cc	e364 <lzma_auto_decoder@@XZ_5.0+0x2c0>  // b.lo, b.ul, b.last
    e35c:	stur	wzr, [x29, #-4]
    e360:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e364:	ldr	x8, [sp, #24]
    e368:	mov	w9, #0x1                   	// #1
    e36c:	str	w9, [x8, #84]
    e370:	ldur	x8, [x29, #-32]
    e374:	ldur	x10, [x29, #-40]
    e378:	ldr	x10, [x10]
    e37c:	ldrb	w9, [x8, x10]
    e380:	cmp	w9, #0xfd
    e384:	b.ne	e3c0 <lzma_auto_decoder@@XZ_5.0+0x31c>  // b.any
    e388:	ldr	x0, [sp, #24]
    e38c:	ldur	x1, [x29, #-24]
    e390:	ldr	x8, [sp, #24]
    e394:	ldr	x2, [x8, #72]
    e398:	ldr	x8, [sp, #24]
    e39c:	ldr	w3, [x8, #80]
    e3a0:	bl	10e1c <lzma_stream_buffer_decode@@XZ_5.0+0x214>
    e3a4:	str	w0, [sp, #20]
    e3a8:	ldr	w9, [sp, #20]
    e3ac:	cbz	w9, e3bc <lzma_auto_decoder@@XZ_5.0+0x318>
    e3b0:	ldr	w8, [sp, #20]
    e3b4:	stur	w8, [x29, #-4]
    e3b8:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e3bc:	b	e42c <lzma_auto_decoder@@XZ_5.0+0x388>
    e3c0:	ldr	x0, [sp, #24]
    e3c4:	ldur	x1, [x29, #-24]
    e3c8:	ldr	x8, [sp, #24]
    e3cc:	ldr	x2, [x8, #72]
    e3d0:	mov	w9, #0x1                   	// #1
    e3d4:	and	w3, w9, #0x1
    e3d8:	bl	d96c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x24a4>
    e3dc:	str	w0, [sp, #16]
    e3e0:	ldr	w9, [sp, #16]
    e3e4:	cbz	w9, e3f4 <lzma_auto_decoder@@XZ_5.0+0x350>
    e3e8:	ldr	w8, [sp, #16]
    e3ec:	stur	w8, [x29, #-4]
    e3f0:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e3f4:	ldr	x8, [sp, #24]
    e3f8:	ldr	w9, [x8, #80]
    e3fc:	and	w9, w9, #0x1
    e400:	cbz	w9, e410 <lzma_auto_decoder@@XZ_5.0+0x36c>
    e404:	mov	w8, #0x2                   	// #2
    e408:	stur	w8, [x29, #-4]
    e40c:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e410:	ldr	x8, [sp, #24]
    e414:	ldr	w9, [x8, #80]
    e418:	and	w9, w9, #0x4
    e41c:	cbz	w9, e42c <lzma_auto_decoder@@XZ_5.0+0x388>
    e420:	mov	w8, #0x4                   	// #4
    e424:	stur	w8, [x29, #-4]
    e428:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e42c:	ldr	x8, [sp, #24]
    e430:	ldr	x8, [x8, #24]
    e434:	ldr	x9, [sp, #24]
    e438:	ldr	x0, [x9]
    e43c:	ldur	x1, [x29, #-24]
    e440:	ldur	x2, [x29, #-32]
    e444:	ldur	x3, [x29, #-40]
    e448:	ldur	x4, [x29, #-48]
    e44c:	ldr	x5, [sp, #56]
    e450:	ldr	x6, [sp, #48]
    e454:	ldr	x7, [sp, #40]
    e458:	ldr	w10, [sp, #36]
    e45c:	mov	x9, sp
    e460:	str	w10, [x9]
    e464:	blr	x8
    e468:	str	w0, [sp, #12]
    e46c:	ldr	w10, [sp, #12]
    e470:	cmp	w10, #0x1
    e474:	b.ne	e488 <lzma_auto_decoder@@XZ_5.0+0x3e4>  // b.any
    e478:	ldr	x8, [sp, #24]
    e47c:	ldr	w9, [x8, #80]
    e480:	and	w9, w9, #0x8
    e484:	cbnz	w9, e494 <lzma_auto_decoder@@XZ_5.0+0x3f0>
    e488:	ldr	w8, [sp, #12]
    e48c:	stur	w8, [x29, #-4]
    e490:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e494:	ldr	x8, [sp, #24]
    e498:	mov	w9, #0x2                   	// #2
    e49c:	str	w9, [x8, #84]
    e4a0:	ldur	x8, [x29, #-40]
    e4a4:	ldr	x8, [x8]
    e4a8:	ldur	x9, [x29, #-48]
    e4ac:	cmp	x8, x9
    e4b0:	b.cs	e4c0 <lzma_auto_decoder@@XZ_5.0+0x41c>  // b.hs, b.nlast
    e4b4:	mov	w8, #0x9                   	// #9
    e4b8:	stur	w8, [x29, #-4]
    e4bc:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e4c0:	ldr	w8, [sp, #36]
    e4c4:	mov	w9, #0x1                   	// #1
    e4c8:	mov	w10, wzr
    e4cc:	cmp	w8, #0x3
    e4d0:	csel	w8, w9, w10, eq  // eq = none
    e4d4:	stur	w8, [x29, #-4]
    e4d8:	b	e4e4 <lzma_auto_decoder@@XZ_5.0+0x440>
    e4dc:	mov	w8, #0xb                   	// #11
    e4e0:	stur	w8, [x29, #-4]
    e4e4:	ldur	w0, [x29, #-4]
    e4e8:	ldp	x29, x30, [sp, #112]
    e4ec:	add	sp, sp, #0x80
    e4f0:	ret
    e4f4:	sub	sp, sp, #0x30
    e4f8:	stp	x29, x30, [sp, #32]
    e4fc:	add	x29, sp, #0x20
    e500:	stur	x0, [x29, #-8]
    e504:	str	x1, [sp, #16]
    e508:	ldur	x8, [x29, #-8]
    e50c:	str	x8, [sp, #8]
    e510:	ldr	x0, [sp, #8]
    e514:	ldr	x1, [sp, #16]
    e518:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    e51c:	ldr	x0, [sp, #8]
    e520:	ldr	x1, [sp, #16]
    e524:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    e528:	ldp	x29, x30, [sp, #32]
    e52c:	add	sp, sp, #0x30
    e530:	ret
    e534:	sub	sp, sp, #0x30
    e538:	stp	x29, x30, [sp, #32]
    e53c:	add	x29, sp, #0x20
    e540:	stur	x0, [x29, #-8]
    e544:	ldur	x8, [x29, #-8]
    e548:	str	x8, [sp, #16]
    e54c:	ldr	x8, [sp, #16]
    e550:	ldr	x8, [x8, #48]
    e554:	cbnz	x8, e564 <lzma_auto_decoder@@XZ_5.0+0x4c0>
    e558:	mov	w8, wzr
    e55c:	str	w8, [sp, #12]
    e560:	b	e57c <lzma_auto_decoder@@XZ_5.0+0x4d8>
    e564:	ldr	x8, [sp, #16]
    e568:	ldr	x8, [x8, #48]
    e56c:	ldr	x9, [sp, #16]
    e570:	ldr	x0, [x9]
    e574:	blr	x8
    e578:	str	w0, [sp, #12]
    e57c:	ldr	w8, [sp, #12]
    e580:	mov	w0, w8
    e584:	ldp	x29, x30, [sp, #32]
    e588:	add	sp, sp, #0x30
    e58c:	ret
    e590:	sub	sp, sp, #0x40
    e594:	stp	x29, x30, [sp, #48]
    e598:	add	x29, sp, #0x30
    e59c:	stur	x0, [x29, #-8]
    e5a0:	stur	x1, [x29, #-16]
    e5a4:	str	x2, [sp, #24]
    e5a8:	str	x3, [sp, #16]
    e5ac:	ldur	x8, [x29, #-8]
    e5b0:	str	x8, [sp, #8]
    e5b4:	ldr	x8, [sp, #8]
    e5b8:	ldr	x8, [x8, #56]
    e5bc:	cbz	x8, e5e8 <lzma_auto_decoder@@XZ_5.0+0x544>
    e5c0:	ldr	x8, [sp, #8]
    e5c4:	ldr	x8, [x8, #56]
    e5c8:	ldr	x9, [sp, #8]
    e5cc:	ldr	x0, [x9]
    e5d0:	ldur	x1, [x29, #-16]
    e5d4:	ldr	x2, [sp, #24]
    e5d8:	ldr	x3, [sp, #16]
    e5dc:	blr	x8
    e5e0:	str	w0, [sp, #4]
    e5e4:	b	e62c <lzma_auto_decoder@@XZ_5.0+0x588>
    e5e8:	ldur	x8, [x29, #-16]
    e5ec:	mov	x9, #0x8000                	// #32768
    e5f0:	str	x9, [x8]
    e5f4:	ldr	x8, [sp, #8]
    e5f8:	ldr	x8, [x8, #72]
    e5fc:	ldr	x9, [sp, #24]
    e600:	str	x8, [x9]
    e604:	str	wzr, [sp, #4]
    e608:	ldr	x8, [sp, #16]
    e60c:	cbz	x8, e62c <lzma_auto_decoder@@XZ_5.0+0x588>
    e610:	ldr	x8, [sp, #16]
    e614:	ldur	x9, [x29, #-16]
    e618:	ldr	x9, [x9]
    e61c:	cmp	x8, x9
    e620:	b.cs	e62c <lzma_auto_decoder@@XZ_5.0+0x588>  // b.hs, b.nlast
    e624:	mov	w8, #0x6                   	// #6
    e628:	str	w8, [sp, #4]
    e62c:	ldr	w8, [sp, #4]
    e630:	cbnz	w8, e648 <lzma_auto_decoder@@XZ_5.0+0x5a4>
    e634:	ldr	x8, [sp, #16]
    e638:	cbz	x8, e648 <lzma_auto_decoder@@XZ_5.0+0x5a4>
    e63c:	ldr	x8, [sp, #16]
    e640:	ldr	x9, [sp, #8]
    e644:	str	x8, [x9, #72]
    e648:	ldr	w0, [sp, #4]
    e64c:	ldp	x29, x30, [sp, #48]
    e650:	add	sp, sp, #0x40
    e654:	ret

000000000000e658 <lzma_block_buffer_decode@@XZ_5.0>:
    e658:	sub	sp, sp, #0xd0
    e65c:	stp	x29, x30, [sp, #192]
    e660:	add	x29, sp, #0xc0
    e664:	stur	x0, [x29, #-16]
    e668:	stur	x1, [x29, #-24]
    e66c:	stur	x2, [x29, #-32]
    e670:	stur	x3, [x29, #-40]
    e674:	stur	x4, [x29, #-48]
    e678:	stur	x5, [x29, #-56]
    e67c:	stur	x6, [x29, #-64]
    e680:	stur	x7, [x29, #-72]
    e684:	ldur	x8, [x29, #-40]
    e688:	cbz	x8, e6f4 <lzma_block_buffer_decode@@XZ_5.0+0x9c>
    e68c:	ldur	x8, [x29, #-32]
    e690:	cbnz	x8, e6a8 <lzma_block_buffer_decode@@XZ_5.0+0x50>
    e694:	ldur	x8, [x29, #-40]
    e698:	ldr	x8, [x8]
    e69c:	ldur	x9, [x29, #-48]
    e6a0:	cmp	x8, x9
    e6a4:	b.ne	e6f4 <lzma_block_buffer_decode@@XZ_5.0+0x9c>  // b.any
    e6a8:	ldur	x8, [x29, #-40]
    e6ac:	ldr	x8, [x8]
    e6b0:	ldur	x9, [x29, #-48]
    e6b4:	cmp	x8, x9
    e6b8:	b.hi	e6f4 <lzma_block_buffer_decode@@XZ_5.0+0x9c>  // b.pmore
    e6bc:	ldur	x8, [x29, #-64]
    e6c0:	cbz	x8, e6f4 <lzma_block_buffer_decode@@XZ_5.0+0x9c>
    e6c4:	ldur	x8, [x29, #-56]
    e6c8:	cbnz	x8, e6e0 <lzma_block_buffer_decode@@XZ_5.0+0x88>
    e6cc:	ldur	x8, [x29, #-64]
    e6d0:	ldr	x8, [x8]
    e6d4:	ldur	x9, [x29, #-72]
    e6d8:	cmp	x8, x9
    e6dc:	b.ne	e6f4 <lzma_block_buffer_decode@@XZ_5.0+0x9c>  // b.any
    e6e0:	ldur	x8, [x29, #-64]
    e6e4:	ldr	x8, [x8]
    e6e8:	ldur	x9, [x29, #-72]
    e6ec:	cmp	x8, x9
    e6f0:	b.ls	e700 <lzma_block_buffer_decode@@XZ_5.0+0xa8>  // b.plast
    e6f4:	mov	w8, #0xb                   	// #11
    e6f8:	stur	w8, [x29, #-4]
    e6fc:	b	e804 <lzma_block_buffer_decode@@XZ_5.0+0x1ac>
    e700:	add	x8, sp, #0x30
    e704:	mov	x0, x8
    e708:	mov	w9, wzr
    e70c:	mov	w1, w9
    e710:	mov	x2, #0x48                  	// #72
    e714:	str	x8, [sp, #16]
    e718:	bl	3230 <memset@plt>
    e71c:	mov	x8, #0xffffffffffffffff    	// #-1
    e720:	str	x8, [sp, #56]
    e724:	ldur	x1, [x29, #-24]
    e728:	ldur	x2, [x29, #-16]
    e72c:	ldr	x0, [sp, #16]
    e730:	bl	e814 <lzma_block_buffer_decode@@XZ_5.0+0x1bc>
    e734:	str	w0, [sp, #44]
    e738:	ldr	w9, [sp, #44]
    e73c:	cbnz	w9, e7f0 <lzma_block_buffer_decode@@XZ_5.0+0x198>
    e740:	ldur	x8, [x29, #-40]
    e744:	ldr	x8, [x8]
    e748:	str	x8, [sp, #32]
    e74c:	ldur	x8, [x29, #-64]
    e750:	ldr	x8, [x8]
    e754:	str	x8, [sp, #24]
    e758:	add	x8, sp, #0x30
    e75c:	ldr	x8, [x8, #24]
    e760:	ldr	x0, [sp, #48]
    e764:	ldur	x1, [x29, #-24]
    e768:	ldur	x2, [x29, #-32]
    e76c:	ldur	x3, [x29, #-40]
    e770:	ldur	x4, [x29, #-48]
    e774:	ldur	x5, [x29, #-56]
    e778:	ldur	x6, [x29, #-64]
    e77c:	ldur	x7, [x29, #-72]
    e780:	mov	x9, sp
    e784:	mov	w10, #0x3                   	// #3
    e788:	str	w10, [x9]
    e78c:	blr	x8
    e790:	str	w0, [sp, #44]
    e794:	ldr	w10, [sp, #44]
    e798:	cmp	w10, #0x1
    e79c:	b.ne	e7a8 <lzma_block_buffer_decode@@XZ_5.0+0x150>  // b.any
    e7a0:	str	wzr, [sp, #44]
    e7a4:	b	e7f0 <lzma_block_buffer_decode@@XZ_5.0+0x198>
    e7a8:	ldr	w8, [sp, #44]
    e7ac:	cbnz	w8, e7d8 <lzma_block_buffer_decode@@XZ_5.0+0x180>
    e7b0:	ldur	x8, [x29, #-40]
    e7b4:	ldr	x8, [x8]
    e7b8:	ldur	x9, [x29, #-48]
    e7bc:	cmp	x8, x9
    e7c0:	b.ne	e7d0 <lzma_block_buffer_decode@@XZ_5.0+0x178>  // b.any
    e7c4:	mov	w8, #0x9                   	// #9
    e7c8:	str	w8, [sp, #44]
    e7cc:	b	e7d8 <lzma_block_buffer_decode@@XZ_5.0+0x180>
    e7d0:	mov	w8, #0xa                   	// #10
    e7d4:	str	w8, [sp, #44]
    e7d8:	ldr	x8, [sp, #32]
    e7dc:	ldur	x9, [x29, #-40]
    e7e0:	str	x8, [x9]
    e7e4:	ldr	x8, [sp, #24]
    e7e8:	ldur	x9, [x29, #-64]
    e7ec:	str	x8, [x9]
    e7f0:	ldur	x1, [x29, #-24]
    e7f4:	add	x0, sp, #0x30
    e7f8:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    e7fc:	ldr	w8, [sp, #44]
    e800:	stur	w8, [x29, #-4]
    e804:	ldur	w0, [x29, #-4]
    e808:	ldp	x29, x30, [sp, #192]
    e80c:	add	sp, sp, #0xd0
    e810:	ret
    e814:	sub	sp, sp, #0xc0
    e818:	stp	x29, x30, [sp, #176]
    e81c:	add	x29, sp, #0xb0
    e820:	adrp	x8, e000 <lzma_alone_decoder@@XZ_5.0>
    e824:	add	x8, x8, #0x814
    e828:	stur	x0, [x29, #-16]
    e82c:	stur	x1, [x29, #-24]
    e830:	stur	x2, [x29, #-32]
    e834:	str	x8, [sp, #56]
    e838:	ldur	x8, [x29, #-16]
    e83c:	ldr	x8, [x8, #16]
    e840:	ldr	x9, [sp, #56]
    e844:	cmp	x9, x8
    e848:	b.eq	e858 <lzma_block_buffer_decode@@XZ_5.0+0x200>  // b.none
    e84c:	ldur	x0, [x29, #-16]
    e850:	ldur	x1, [x29, #-24]
    e854:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    e858:	ldur	x8, [x29, #-16]
    e85c:	ldr	x9, [sp, #56]
    e860:	str	x9, [x8, #16]
    e864:	ldur	x0, [x29, #-32]
    e868:	bl	3190 <lzma_block_unpadded_size@plt>
    e86c:	cbz	x0, e898 <lzma_block_buffer_decode@@XZ_5.0+0x240>
    e870:	ldur	x8, [x29, #-32]
    e874:	ldr	x8, [x8, #24]
    e878:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    e87c:	cmp	x8, x9
    e880:	b.ls	e8a4 <lzma_block_buffer_decode@@XZ_5.0+0x24c>  // b.plast
    e884:	ldur	x8, [x29, #-32]
    e888:	ldr	x8, [x8, #24]
    e88c:	mov	x9, #0xffffffffffffffff    	// #-1
    e890:	cmp	x8, x9
    e894:	b.eq	e8a4 <lzma_block_buffer_decode@@XZ_5.0+0x24c>  // b.none
    e898:	mov	w8, #0xb                   	// #11
    e89c:	stur	w8, [x29, #-4]
    e8a0:	b	ea50 <lzma_block_buffer_decode@@XZ_5.0+0x3f8>
    e8a4:	ldur	x8, [x29, #-16]
    e8a8:	ldr	x8, [x8]
    e8ac:	stur	x8, [x29, #-40]
    e8b0:	ldur	x8, [x29, #-40]
    e8b4:	cbnz	x8, e954 <lzma_block_buffer_decode@@XZ_5.0+0x2fc>
    e8b8:	ldur	x1, [x29, #-24]
    e8bc:	mov	x0, #0xe8                  	// #232
    e8c0:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    e8c4:	stur	x0, [x29, #-40]
    e8c8:	ldur	x8, [x29, #-40]
    e8cc:	cbnz	x8, e8dc <lzma_block_buffer_decode@@XZ_5.0+0x284>
    e8d0:	mov	w8, #0x5                   	// #5
    e8d4:	stur	w8, [x29, #-4]
    e8d8:	b	ea50 <lzma_block_buffer_decode@@XZ_5.0+0x3f8>
    e8dc:	ldur	x8, [x29, #-40]
    e8e0:	ldur	x9, [x29, #-16]
    e8e4:	str	x8, [x9]
    e8e8:	ldur	x8, [x29, #-16]
    e8ec:	adrp	x9, e000 <lzma_alone_decoder@@XZ_5.0>
    e8f0:	add	x9, x9, #0xa60
    e8f4:	str	x9, [x8, #24]
    e8f8:	ldur	x8, [x29, #-16]
    e8fc:	adrp	x9, e000 <lzma_alone_decoder@@XZ_5.0>
    e900:	add	x9, x9, #0xdec
    e904:	str	x9, [x8, #32]
    e908:	ldur	x8, [x29, #-40]
    e90c:	add	x0, x8, #0x8
    e910:	add	x8, sp, #0x40
    e914:	str	x0, [sp, #48]
    e918:	mov	x0, x8
    e91c:	mov	w10, wzr
    e920:	mov	w1, w10
    e924:	mov	x9, #0x48                  	// #72
    e928:	mov	x2, x9
    e92c:	str	x8, [sp, #40]
    e930:	str	x9, [sp, #32]
    e934:	bl	3230 <memset@plt>
    e938:	mov	x8, #0xffffffffffffffff    	// #-1
    e93c:	str	x8, [sp, #72]
    e940:	str	xzr, [sp, #80]
    e944:	ldr	x0, [sp, #48]
    e948:	ldr	x1, [sp, #40]
    e94c:	ldr	x2, [sp, #32]
    e950:	bl	3090 <memcpy@plt>
    e954:	ldur	x8, [x29, #-40]
    e958:	str	wzr, [x8]
    e95c:	ldur	x8, [x29, #-32]
    e960:	ldur	x9, [x29, #-40]
    e964:	str	x8, [x9, #80]
    e968:	ldur	x8, [x29, #-40]
    e96c:	str	xzr, [x8, #88]
    e970:	ldur	x8, [x29, #-40]
    e974:	str	xzr, [x8, #96]
    e978:	ldur	x8, [x29, #-32]
    e97c:	ldr	x8, [x8, #16]
    e980:	mov	x9, #0xffffffffffffffff    	// #-1
    e984:	cmp	x8, x9
    e988:	b.ne	e9c0 <lzma_block_buffer_decode@@XZ_5.0+0x368>  // b.any
    e98c:	ldur	x8, [x29, #-32]
    e990:	ldr	w9, [x8, #4]
    e994:	mov	w8, w9
    e998:	mov	x10, #0x7ffffffffffffffc    	// #9223372036854775804
    e99c:	subs	x8, x10, x8
    e9a0:	ldur	x10, [x29, #-32]
    e9a4:	ldr	w0, [x10, #8]
    e9a8:	str	x8, [sp, #24]
    e9ac:	bl	3270 <lzma_check_size@plt>
    e9b0:	ldr	x8, [sp, #24]
    e9b4:	subs	x10, x8, w0, uxtw
    e9b8:	str	x10, [sp, #16]
    e9bc:	b	e9cc <lzma_block_buffer_decode@@XZ_5.0+0x374>
    e9c0:	ldur	x8, [x29, #-32]
    e9c4:	ldr	x8, [x8, #16]
    e9c8:	str	x8, [sp, #16]
    e9cc:	ldr	x8, [sp, #16]
    e9d0:	ldur	x9, [x29, #-40]
    e9d4:	str	x8, [x9, #104]
    e9d8:	ldur	x8, [x29, #-40]
    e9dc:	str	xzr, [x8, #112]
    e9e0:	ldur	x8, [x29, #-40]
    e9e4:	add	x0, x8, #0x78
    e9e8:	ldur	x8, [x29, #-32]
    e9ec:	ldr	w1, [x8, #8]
    e9f0:	bl	11ec0 <lzma_check_size@@XZ_5.0+0x44>
    e9f4:	ldur	x8, [x29, #-32]
    e9f8:	ldr	w10, [x8]
    e9fc:	cmp	w10, #0x1
    ea00:	b.cc	ea14 <lzma_block_buffer_decode@@XZ_5.0+0x3bc>  // b.lo, b.ul, b.last
    ea04:	ldur	x8, [x29, #-32]
    ea08:	ldrb	w9, [x8, #200]
    ea0c:	str	w9, [sp, #12]
    ea10:	b	ea1c <lzma_block_buffer_decode@@XZ_5.0+0x3c4>
    ea14:	mov	w8, wzr
    ea18:	str	w8, [sp, #12]
    ea1c:	ldr	w8, [sp, #12]
    ea20:	cmp	w8, #0x0
    ea24:	cset	w8, ne  // ne = any
    ea28:	ldur	x9, [x29, #-40]
    ea2c:	and	w8, w8, #0x1
    ea30:	strb	w8, [x9, #224]
    ea34:	ldur	x9, [x29, #-40]
    ea38:	add	x0, x9, #0x8
    ea3c:	ldur	x1, [x29, #-24]
    ea40:	ldur	x9, [x29, #-32]
    ea44:	ldr	x2, [x9, #32]
    ea48:	bl	f6c0 <lzma_filter_decoder_is_supported@@XZ_5.0+0xb4>
    ea4c:	stur	w0, [x29, #-4]
    ea50:	ldur	w0, [x29, #-4]
    ea54:	ldp	x29, x30, [sp, #176]
    ea58:	add	sp, sp, #0xc0
    ea5c:	ret
    ea60:	sub	sp, sp, #0xb0
    ea64:	stp	x29, x30, [sp, #160]
    ea68:	add	x29, sp, #0xa0
    ea6c:	ldr	w8, [x29, #16]
    ea70:	stur	x0, [x29, #-16]
    ea74:	stur	x1, [x29, #-24]
    ea78:	stur	x2, [x29, #-32]
    ea7c:	stur	x3, [x29, #-40]
    ea80:	stur	x4, [x29, #-48]
    ea84:	stur	x5, [x29, #-56]
    ea88:	stur	x6, [x29, #-64]
    ea8c:	stur	x7, [x29, #-72]
    ea90:	stur	w8, [x29, #-76]
    ea94:	ldur	x9, [x29, #-16]
    ea98:	str	x9, [sp, #72]
    ea9c:	ldr	x9, [sp, #72]
    eaa0:	ldr	w8, [x9]
    eaa4:	str	w8, [sp, #20]
    eaa8:	cbz	w8, ead0 <lzma_block_buffer_decode@@XZ_5.0+0x478>
    eaac:	b	eab0 <lzma_block_buffer_decode@@XZ_5.0+0x458>
    eab0:	ldr	w8, [sp, #20]
    eab4:	cmp	w8, #0x1
    eab8:	b.eq	ec64 <lzma_block_buffer_decode@@XZ_5.0+0x60c>  // b.none
    eabc:	b	eac0 <lzma_block_buffer_decode@@XZ_5.0+0x468>
    eac0:	ldr	w8, [sp, #20]
    eac4:	cmp	w8, #0x2
    eac8:	b.eq	ed18 <lzma_block_buffer_decode@@XZ_5.0+0x6c0>  // b.none
    eacc:	b	edd4 <lzma_block_buffer_decode@@XZ_5.0+0x77c>
    ead0:	ldur	x8, [x29, #-40]
    ead4:	ldr	x8, [x8]
    ead8:	str	x8, [sp, #64]
    eadc:	ldur	x8, [x29, #-64]
    eae0:	ldr	x8, [x8]
    eae4:	str	x8, [sp, #56]
    eae8:	ldr	x8, [sp, #72]
    eaec:	ldr	x8, [x8, #32]
    eaf0:	ldr	x9, [sp, #72]
    eaf4:	ldr	x0, [x9, #8]
    eaf8:	ldur	x1, [x29, #-24]
    eafc:	ldur	x2, [x29, #-32]
    eb00:	ldur	x3, [x29, #-40]
    eb04:	ldur	x4, [x29, #-48]
    eb08:	ldur	x5, [x29, #-56]
    eb0c:	ldur	x6, [x29, #-64]
    eb10:	ldur	x7, [x29, #-72]
    eb14:	ldur	w10, [x29, #-76]
    eb18:	mov	x9, sp
    eb1c:	str	w10, [x9]
    eb20:	blr	x8
    eb24:	str	w0, [sp, #52]
    eb28:	ldur	x8, [x29, #-40]
    eb2c:	ldr	x8, [x8]
    eb30:	ldr	x9, [sp, #64]
    eb34:	subs	x8, x8, x9
    eb38:	str	x8, [sp, #40]
    eb3c:	ldur	x8, [x29, #-64]
    eb40:	ldr	x8, [x8]
    eb44:	ldr	x9, [sp, #56]
    eb48:	subs	x8, x8, x9
    eb4c:	str	x8, [sp, #32]
    eb50:	ldr	x8, [sp, #72]
    eb54:	add	x0, x8, #0x58
    eb58:	ldr	x1, [sp, #40]
    eb5c:	ldr	x8, [sp, #72]
    eb60:	ldr	x2, [x8, #104]
    eb64:	bl	eecc <lzma_block_decoder@@XZ_5.0+0x9c>
    eb68:	tbnz	w0, #0, eb90 <lzma_block_buffer_decode@@XZ_5.0+0x538>
    eb6c:	ldr	x8, [sp, #72]
    eb70:	add	x0, x8, #0x60
    eb74:	ldr	x1, [sp, #32]
    eb78:	ldr	x8, [sp, #72]
    eb7c:	ldr	x8, [x8, #80]
    eb80:	ldr	x2, [x8, #24]
    eb84:	bl	eecc <lzma_block_decoder@@XZ_5.0+0x9c>
    eb88:	tbnz	w0, #0, eb90 <lzma_block_buffer_decode@@XZ_5.0+0x538>
    eb8c:	b	eb9c <lzma_block_buffer_decode@@XZ_5.0+0x544>
    eb90:	mov	w8, #0x9                   	// #9
    eb94:	stur	w8, [x29, #-4]
    eb98:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    eb9c:	ldr	x8, [sp, #72]
    eba0:	ldrb	w9, [x8, #224]
    eba4:	tbnz	w9, #0, ebd0 <lzma_block_buffer_decode@@XZ_5.0+0x578>
    eba8:	ldr	x8, [sp, #72]
    ebac:	add	x0, x8, #0x78
    ebb0:	ldr	x8, [sp, #72]
    ebb4:	ldr	x8, [x8, #80]
    ebb8:	ldr	w1, [x8, #8]
    ebbc:	ldur	x8, [x29, #-56]
    ebc0:	ldr	x9, [sp, #56]
    ebc4:	add	x2, x8, x9
    ebc8:	ldr	x3, [sp, #32]
    ebcc:	bl	11f3c <lzma_check_size@@XZ_5.0+0xc0>
    ebd0:	ldr	w8, [sp, #52]
    ebd4:	cmp	w8, #0x1
    ebd8:	b.eq	ebe8 <lzma_block_buffer_decode@@XZ_5.0+0x590>  // b.none
    ebdc:	ldr	w8, [sp, #52]
    ebe0:	stur	w8, [x29, #-4]
    ebe4:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    ebe8:	ldr	x8, [sp, #72]
    ebec:	ldr	x0, [x8, #88]
    ebf0:	ldr	x8, [sp, #72]
    ebf4:	ldr	x8, [x8, #80]
    ebf8:	ldr	x1, [x8, #16]
    ebfc:	bl	ef64 <lzma_block_decoder@@XZ_5.0+0x134>
    ec00:	tbnz	w0, #0, ec08 <lzma_block_buffer_decode@@XZ_5.0+0x5b0>
    ec04:	b	ec24 <lzma_block_buffer_decode@@XZ_5.0+0x5cc>
    ec08:	ldr	x8, [sp, #72]
    ec0c:	ldr	x0, [x8, #96]
    ec10:	ldr	x8, [sp, #72]
    ec14:	ldr	x8, [x8, #80]
    ec18:	ldr	x1, [x8, #24]
    ec1c:	bl	ef64 <lzma_block_decoder@@XZ_5.0+0x134>
    ec20:	tbnz	w0, #0, ec30 <lzma_block_buffer_decode@@XZ_5.0+0x5d8>
    ec24:	mov	w8, #0x9                   	// #9
    ec28:	stur	w8, [x29, #-4]
    ec2c:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    ec30:	ldr	x8, [sp, #72]
    ec34:	ldr	x8, [x8, #88]
    ec38:	ldr	x9, [sp, #72]
    ec3c:	ldr	x9, [x9, #80]
    ec40:	str	x8, [x9, #16]
    ec44:	ldr	x8, [sp, #72]
    ec48:	ldr	x8, [x8, #96]
    ec4c:	ldr	x9, [sp, #72]
    ec50:	ldr	x9, [x9, #80]
    ec54:	str	x8, [x9, #24]
    ec58:	ldr	x8, [sp, #72]
    ec5c:	mov	w10, #0x1                   	// #1
    ec60:	str	w10, [x8]
    ec64:	ldr	x8, [sp, #72]
    ec68:	ldr	x8, [x8, #88]
    ec6c:	and	x8, x8, #0x3
    ec70:	cbz	x8, eccc <lzma_block_buffer_decode@@XZ_5.0+0x674>
    ec74:	ldur	x8, [x29, #-40]
    ec78:	ldr	x8, [x8]
    ec7c:	ldur	x9, [x29, #-48]
    ec80:	cmp	x8, x9
    ec84:	b.cc	ec90 <lzma_block_buffer_decode@@XZ_5.0+0x638>  // b.lo, b.ul, b.last
    ec88:	stur	wzr, [x29, #-4]
    ec8c:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    ec90:	ldr	x8, [sp, #72]
    ec94:	ldr	x9, [x8, #88]
    ec98:	add	x9, x9, #0x1
    ec9c:	str	x9, [x8, #88]
    eca0:	ldur	x8, [x29, #-32]
    eca4:	ldur	x9, [x29, #-40]
    eca8:	ldr	x10, [x9]
    ecac:	add	x11, x10, #0x1
    ecb0:	str	x11, [x9]
    ecb4:	ldrb	w12, [x8, x10]
    ecb8:	cbz	w12, ecc8 <lzma_block_buffer_decode@@XZ_5.0+0x670>
    ecbc:	mov	w8, #0x9                   	// #9
    ecc0:	stur	w8, [x29, #-4]
    ecc4:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    ecc8:	b	ec64 <lzma_block_buffer_decode@@XZ_5.0+0x60c>
    eccc:	ldr	x8, [sp, #72]
    ecd0:	ldr	x8, [x8, #80]
    ecd4:	ldr	w9, [x8, #8]
    ecd8:	cbnz	w9, ece8 <lzma_block_buffer_decode@@XZ_5.0+0x690>
    ecdc:	mov	w8, #0x1                   	// #1
    ece0:	stur	w8, [x29, #-4]
    ece4:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    ece8:	ldr	x8, [sp, #72]
    ecec:	ldrb	w9, [x8, #224]
    ecf0:	tbnz	w9, #0, ed0c <lzma_block_buffer_decode@@XZ_5.0+0x6b4>
    ecf4:	ldr	x8, [sp, #72]
    ecf8:	add	x0, x8, #0x78
    ecfc:	ldr	x8, [sp, #72]
    ed00:	ldr	x8, [x8, #80]
    ed04:	ldr	w1, [x8, #8]
    ed08:	bl	11fec <lzma_check_size@@XZ_5.0+0x170>
    ed0c:	ldr	x8, [sp, #72]
    ed10:	mov	w9, #0x2                   	// #2
    ed14:	str	w9, [x8]
    ed18:	ldr	x8, [sp, #72]
    ed1c:	ldr	x8, [x8, #80]
    ed20:	ldr	w0, [x8, #8]
    ed24:	bl	3270 <lzma_check_size@plt>
    ed28:	mov	w8, w0
    ed2c:	ubfx	x8, x8, #0, #32
    ed30:	str	x8, [sp, #24]
    ed34:	ldur	x0, [x29, #-32]
    ed38:	ldur	x1, [x29, #-40]
    ed3c:	ldur	x2, [x29, #-48]
    ed40:	ldr	x8, [sp, #72]
    ed44:	ldr	x8, [x8, #80]
    ed48:	add	x3, x8, #0x28
    ed4c:	ldr	x8, [sp, #72]
    ed50:	add	x4, x8, #0x70
    ed54:	ldr	x5, [sp, #24]
    ed58:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
    ed5c:	ldr	x8, [sp, #72]
    ed60:	ldr	x8, [x8, #112]
    ed64:	ldr	x9, [sp, #24]
    ed68:	cmp	x8, x9
    ed6c:	b.cs	ed78 <lzma_block_buffer_decode@@XZ_5.0+0x720>  // b.hs, b.nlast
    ed70:	stur	wzr, [x29, #-4]
    ed74:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    ed78:	ldr	x8, [sp, #72]
    ed7c:	ldrb	w9, [x8, #224]
    ed80:	tbnz	w9, #0, edc8 <lzma_block_buffer_decode@@XZ_5.0+0x770>
    ed84:	ldr	x8, [sp, #72]
    ed88:	ldr	x8, [x8, #80]
    ed8c:	ldr	w0, [x8, #8]
    ed90:	bl	30e0 <lzma_check_is_supported@plt>
    ed94:	and	w9, w0, #0xff
    ed98:	cbz	w9, edc8 <lzma_block_buffer_decode@@XZ_5.0+0x770>
    ed9c:	ldr	x8, [sp, #72]
    eda0:	ldr	x8, [x8, #80]
    eda4:	add	x0, x8, #0x28
    eda8:	ldr	x8, [sp, #72]
    edac:	add	x1, x8, #0x78
    edb0:	ldr	x2, [sp, #24]
    edb4:	bl	3330 <memcmp@plt>
    edb8:	cbz	w0, edc8 <lzma_block_buffer_decode@@XZ_5.0+0x770>
    edbc:	mov	w8, #0x9                   	// #9
    edc0:	stur	w8, [x29, #-4]
    edc4:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    edc8:	mov	w8, #0x1                   	// #1
    edcc:	stur	w8, [x29, #-4]
    edd0:	b	eddc <lzma_block_buffer_decode@@XZ_5.0+0x784>
    edd4:	mov	w8, #0xb                   	// #11
    edd8:	stur	w8, [x29, #-4]
    eddc:	ldur	w0, [x29, #-4]
    ede0:	ldp	x29, x30, [sp, #160]
    ede4:	add	sp, sp, #0xb0
    ede8:	ret
    edec:	sub	sp, sp, #0x30
    edf0:	stp	x29, x30, [sp, #32]
    edf4:	add	x29, sp, #0x20
    edf8:	stur	x0, [x29, #-8]
    edfc:	str	x1, [sp, #16]
    ee00:	ldur	x8, [x29, #-8]
    ee04:	str	x8, [sp, #8]
    ee08:	ldr	x8, [sp, #8]
    ee0c:	add	x0, x8, #0x8
    ee10:	ldr	x1, [sp, #16]
    ee14:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    ee18:	ldr	x0, [sp, #8]
    ee1c:	ldr	x1, [sp, #16]
    ee20:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    ee24:	ldp	x29, x30, [sp, #32]
    ee28:	add	sp, sp, #0x30
    ee2c:	ret

000000000000ee30 <lzma_block_decoder@@XZ_5.0>:
    ee30:	sub	sp, sp, #0x30
    ee34:	stp	x29, x30, [sp, #32]
    ee38:	add	x29, sp, #0x20
    ee3c:	str	x0, [sp, #16]
    ee40:	str	x1, [sp, #8]
    ee44:	ldr	x0, [sp, #16]
    ee48:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    ee4c:	str	w0, [sp, #4]
    ee50:	ldr	w8, [sp, #4]
    ee54:	cbz	w8, ee64 <lzma_block_decoder@@XZ_5.0+0x34>
    ee58:	ldr	w8, [sp, #4]
    ee5c:	stur	w8, [x29, #-4]
    ee60:	b	eebc <lzma_block_decoder@@XZ_5.0+0x8c>
    ee64:	ldr	x8, [sp, #16]
    ee68:	ldr	x0, [x8, #56]
    ee6c:	ldr	x8, [sp, #16]
    ee70:	ldr	x1, [x8, #48]
    ee74:	ldr	x2, [sp, #8]
    ee78:	bl	e814 <lzma_block_buffer_decode@@XZ_5.0+0x1bc>
    ee7c:	str	w0, [sp]
    ee80:	ldr	w9, [sp]
    ee84:	cbz	w9, ee9c <lzma_block_decoder@@XZ_5.0+0x6c>
    ee88:	ldr	x0, [sp, #16]
    ee8c:	bl	3320 <lzma_end@plt>
    ee90:	ldr	w8, [sp]
    ee94:	stur	w8, [x29, #-4]
    ee98:	b	eebc <lzma_block_decoder@@XZ_5.0+0x8c>
    ee9c:	ldr	x8, [sp, #16]
    eea0:	ldr	x8, [x8, #56]
    eea4:	mov	w9, #0x1                   	// #1
    eea8:	strb	w9, [x8, #88]
    eeac:	ldr	x8, [sp, #16]
    eeb0:	ldr	x8, [x8, #56]
    eeb4:	strb	w9, [x8, #91]
    eeb8:	stur	wzr, [x29, #-4]
    eebc:	ldur	w0, [x29, #-4]
    eec0:	ldp	x29, x30, [sp, #32]
    eec4:	add	sp, sp, #0x30
    eec8:	ret
    eecc:	sub	sp, sp, #0x20
    eed0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    eed4:	str	x0, [sp, #16]
    eed8:	str	x1, [sp, #8]
    eedc:	str	x2, [sp]
    eee0:	ldr	x9, [sp]
    eee4:	cmp	x9, x8
    eee8:	b.ls	eef4 <lzma_block_decoder@@XZ_5.0+0xc4>  // b.plast
    eeec:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    eef0:	str	x8, [sp]
    eef4:	ldr	x8, [sp]
    eef8:	ldr	x9, [sp, #16]
    eefc:	ldr	x9, [x9]
    ef00:	cmp	x8, x9
    ef04:	b.cc	ef24 <lzma_block_decoder@@XZ_5.0+0xf4>  // b.lo, b.ul, b.last
    ef08:	ldr	x8, [sp]
    ef0c:	ldr	x9, [sp, #16]
    ef10:	ldr	x9, [x9]
    ef14:	subs	x8, x8, x9
    ef18:	ldr	x9, [sp, #8]
    ef1c:	cmp	x8, x9
    ef20:	b.cs	ef34 <lzma_block_decoder@@XZ_5.0+0x104>  // b.hs, b.nlast
    ef24:	mov	w8, #0x1                   	// #1
    ef28:	and	w8, w8, #0x1
    ef2c:	strb	w8, [sp, #31]
    ef30:	b	ef54 <lzma_block_decoder@@XZ_5.0+0x124>
    ef34:	ldr	x8, [sp, #8]
    ef38:	ldr	x9, [sp, #16]
    ef3c:	ldr	x10, [x9]
    ef40:	add	x8, x10, x8
    ef44:	str	x8, [x9]
    ef48:	mov	w11, wzr
    ef4c:	and	w11, w11, #0x1
    ef50:	strb	w11, [sp, #31]
    ef54:	ldrb	w8, [sp, #31]
    ef58:	and	w0, w8, #0x1
    ef5c:	add	sp, sp, #0x20
    ef60:	ret
    ef64:	sub	sp, sp, #0x20
    ef68:	mov	x8, #0xffffffffffffffff    	// #-1
    ef6c:	str	x0, [sp, #24]
    ef70:	str	x1, [sp, #16]
    ef74:	ldr	x9, [sp, #16]
    ef78:	mov	w10, #0x1                   	// #1
    ef7c:	cmp	x9, x8
    ef80:	str	w10, [sp, #12]
    ef84:	b.eq	ef9c <lzma_block_decoder@@XZ_5.0+0x16c>  // b.none
    ef88:	ldr	x8, [sp, #16]
    ef8c:	ldr	x9, [sp, #24]
    ef90:	cmp	x8, x9
    ef94:	cset	w10, eq  // eq = none
    ef98:	str	w10, [sp, #12]
    ef9c:	ldr	w8, [sp, #12]
    efa0:	and	w0, w8, #0x1
    efa4:	add	sp, sp, #0x20
    efa8:	ret

000000000000efac <lzma_block_header_decode@@XZ_5.0>:
    efac:	sub	sp, sp, #0x70
    efb0:	stp	x29, x30, [sp, #96]
    efb4:	add	x29, sp, #0x60
    efb8:	stur	x0, [x29, #-16]
    efbc:	stur	x1, [x29, #-24]
    efc0:	stur	x2, [x29, #-32]
    efc4:	stur	xzr, [x29, #-40]
    efc8:	ldur	x8, [x29, #-40]
    efcc:	cmp	x8, #0x4
    efd0:	b.hi	f01c <lzma_block_header_decode@@XZ_5.0+0x70>  // b.pmore
    efd4:	ldur	x8, [x29, #-16]
    efd8:	ldr	x8, [x8, #32]
    efdc:	ldur	x9, [x29, #-40]
    efe0:	mov	x10, #0x10                  	// #16
    efe4:	mul	x9, x10, x9
    efe8:	mov	x11, #0xffffffffffffffff    	// #-1
    efec:	str	x11, [x8, x9]
    eff0:	ldur	x8, [x29, #-16]
    eff4:	ldr	x8, [x8, #32]
    eff8:	ldur	x9, [x29, #-40]
    effc:	mul	x9, x10, x9
    f000:	add	x8, x8, x9
    f004:	mov	x9, xzr
    f008:	str	x9, [x8, #8]
    f00c:	ldur	x8, [x29, #-40]
    f010:	add	x8, x8, #0x1
    f014:	stur	x8, [x29, #-40]
    f018:	b	efc8 <lzma_block_header_decode@@XZ_5.0+0x1c>
    f01c:	ldur	x8, [x29, #-16]
    f020:	ldr	w9, [x8]
    f024:	cmp	w9, #0x1
    f028:	b.ls	f038 <lzma_block_header_decode@@XZ_5.0+0x8c>  // b.plast
    f02c:	ldur	x8, [x29, #-16]
    f030:	mov	w9, #0x1                   	// #1
    f034:	str	w9, [x8]
    f038:	ldur	x8, [x29, #-16]
    f03c:	mov	w9, #0x0                   	// #0
    f040:	strb	w9, [x8, #200]
    f044:	ldur	x8, [x29, #-32]
    f048:	ldrb	w9, [x8]
    f04c:	add	w9, w9, #0x1
    f050:	mov	w10, #0x4                   	// #4
    f054:	mul	w9, w9, w10
    f058:	ldur	x8, [x29, #-16]
    f05c:	ldr	w10, [x8, #4]
    f060:	cmp	w9, w10
    f064:	b.ne	f078 <lzma_block_header_decode@@XZ_5.0+0xcc>  // b.any
    f068:	ldur	x8, [x29, #-16]
    f06c:	ldr	w9, [x8, #8]
    f070:	cmp	w9, #0xf
    f074:	b.ls	f084 <lzma_block_header_decode@@XZ_5.0+0xd8>  // b.plast
    f078:	mov	w8, #0xb                   	// #11
    f07c:	stur	w8, [x29, #-4]
    f080:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f084:	ldur	x8, [x29, #-16]
    f088:	ldr	w9, [x8, #4]
    f08c:	subs	w9, w9, #0x4
    f090:	mov	w8, w9
    f094:	ubfx	x8, x8, #0, #32
    f098:	str	x8, [sp, #48]
    f09c:	ldur	x0, [x29, #-32]
    f0a0:	ldr	x1, [sp, #48]
    f0a4:	mov	w9, wzr
    f0a8:	mov	w2, w9
    f0ac:	bl	31c0 <lzma_crc32@plt>
    f0b0:	ldur	x8, [x29, #-32]
    f0b4:	ldr	x10, [sp, #48]
    f0b8:	add	x8, x8, x10
    f0bc:	str	w0, [sp, #8]
    f0c0:	mov	x0, x8
    f0c4:	bl	f2b4 <lzma_block_header_decode@@XZ_5.0+0x308>
    f0c8:	ldr	w9, [sp, #8]
    f0cc:	cmp	w9, w0
    f0d0:	b.eq	f0e0 <lzma_block_header_decode@@XZ_5.0+0x134>  // b.none
    f0d4:	mov	w8, #0x9                   	// #9
    f0d8:	stur	w8, [x29, #-4]
    f0dc:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f0e0:	ldur	x8, [x29, #-32]
    f0e4:	ldrb	w9, [x8, #1]
    f0e8:	and	w9, w9, #0x3c
    f0ec:	cbz	w9, f0fc <lzma_block_header_decode@@XZ_5.0+0x150>
    f0f0:	mov	w8, #0x8                   	// #8
    f0f4:	stur	w8, [x29, #-4]
    f0f8:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f0fc:	mov	x8, #0x2                   	// #2
    f100:	str	x8, [sp, #40]
    f104:	ldur	x8, [x29, #-32]
    f108:	ldrb	w9, [x8, #1]
    f10c:	and	w9, w9, #0x40
    f110:	cbz	w9, f168 <lzma_block_header_decode@@XZ_5.0+0x1bc>
    f114:	ldur	x8, [x29, #-16]
    f118:	add	x0, x8, #0x10
    f11c:	ldur	x2, [x29, #-32]
    f120:	ldr	x4, [sp, #48]
    f124:	mov	x8, xzr
    f128:	mov	x1, x8
    f12c:	add	x3, sp, #0x28
    f130:	bl	33c0 <lzma_vli_decode@plt>
    f134:	str	w0, [sp, #36]
    f138:	ldr	w9, [sp, #36]
    f13c:	cbz	w9, f14c <lzma_block_header_decode@@XZ_5.0+0x1a0>
    f140:	ldr	w8, [sp, #36]
    f144:	stur	w8, [x29, #-4]
    f148:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f14c:	ldur	x0, [x29, #-16]
    f150:	bl	3190 <lzma_block_unpadded_size@plt>
    f154:	cbnz	x0, f164 <lzma_block_header_decode@@XZ_5.0+0x1b8>
    f158:	mov	w8, #0x9                   	// #9
    f15c:	stur	w8, [x29, #-4]
    f160:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f164:	b	f174 <lzma_block_header_decode@@XZ_5.0+0x1c8>
    f168:	ldur	x8, [x29, #-16]
    f16c:	mov	x9, #0xffffffffffffffff    	// #-1
    f170:	str	x9, [x8, #16]
    f174:	ldur	x8, [x29, #-32]
    f178:	ldrb	w9, [x8, #1]
    f17c:	and	w9, w9, #0x80
    f180:	cbz	w9, f1c0 <lzma_block_header_decode@@XZ_5.0+0x214>
    f184:	ldur	x8, [x29, #-16]
    f188:	add	x0, x8, #0x18
    f18c:	ldur	x2, [x29, #-32]
    f190:	ldr	x4, [sp, #48]
    f194:	mov	x8, xzr
    f198:	mov	x1, x8
    f19c:	add	x3, sp, #0x28
    f1a0:	bl	33c0 <lzma_vli_decode@plt>
    f1a4:	str	w0, [sp, #32]
    f1a8:	ldr	w9, [sp, #32]
    f1ac:	cbz	w9, f1bc <lzma_block_header_decode@@XZ_5.0+0x210>
    f1b0:	ldr	w8, [sp, #32]
    f1b4:	stur	w8, [x29, #-4]
    f1b8:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f1bc:	b	f1cc <lzma_block_header_decode@@XZ_5.0+0x220>
    f1c0:	ldur	x8, [x29, #-16]
    f1c4:	mov	x9, #0xffffffffffffffff    	// #-1
    f1c8:	str	x9, [x8, #24]
    f1cc:	ldur	x8, [x29, #-32]
    f1d0:	ldrb	w9, [x8, #1]
    f1d4:	and	w9, w9, #0x3
    f1d8:	add	w9, w9, #0x1
    f1dc:	mov	w0, w9
    f1e0:	sxtw	x8, w0
    f1e4:	str	x8, [sp, #24]
    f1e8:	str	xzr, [sp, #16]
    f1ec:	ldr	x8, [sp, #16]
    f1f0:	ldr	x9, [sp, #24]
    f1f4:	cmp	x8, x9
    f1f8:	b.cs	f25c <lzma_block_header_decode@@XZ_5.0+0x2b0>  // b.hs, b.nlast
    f1fc:	ldur	x8, [x29, #-16]
    f200:	ldr	x8, [x8, #32]
    f204:	ldr	x9, [sp, #16]
    f208:	mov	x10, #0x10                  	// #16
    f20c:	mul	x9, x10, x9
    f210:	add	x0, x8, x9
    f214:	ldur	x1, [x29, #-24]
    f218:	ldur	x2, [x29, #-32]
    f21c:	ldr	x4, [sp, #48]
    f220:	add	x3, sp, #0x28
    f224:	bl	3500 <lzma_filter_flags_decode@plt>
    f228:	str	w0, [sp, #12]
    f22c:	ldr	w11, [sp, #12]
    f230:	cbz	w11, f24c <lzma_block_header_decode@@XZ_5.0+0x2a0>
    f234:	ldur	x0, [x29, #-16]
    f238:	ldur	x1, [x29, #-24]
    f23c:	bl	f310 <lzma_block_header_decode@@XZ_5.0+0x364>
    f240:	ldr	w8, [sp, #12]
    f244:	stur	w8, [x29, #-4]
    f248:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f24c:	ldr	x8, [sp, #16]
    f250:	add	x8, x8, #0x1
    f254:	str	x8, [sp, #16]
    f258:	b	f1ec <lzma_block_header_decode@@XZ_5.0+0x240>
    f25c:	ldr	x8, [sp, #40]
    f260:	ldr	x9, [sp, #48]
    f264:	cmp	x8, x9
    f268:	b.cs	f2a0 <lzma_block_header_decode@@XZ_5.0+0x2f4>  // b.hs, b.nlast
    f26c:	ldur	x8, [x29, #-32]
    f270:	ldr	x9, [sp, #40]
    f274:	add	x10, x9, #0x1
    f278:	str	x10, [sp, #40]
    f27c:	ldrb	w11, [x8, x9]
    f280:	cbz	w11, f29c <lzma_block_header_decode@@XZ_5.0+0x2f0>
    f284:	ldur	x0, [x29, #-16]
    f288:	ldur	x1, [x29, #-24]
    f28c:	bl	f310 <lzma_block_header_decode@@XZ_5.0+0x364>
    f290:	mov	w8, #0x8                   	// #8
    f294:	stur	w8, [x29, #-4]
    f298:	b	f2a4 <lzma_block_header_decode@@XZ_5.0+0x2f8>
    f29c:	b	f25c <lzma_block_header_decode@@XZ_5.0+0x2b0>
    f2a0:	stur	wzr, [x29, #-4]
    f2a4:	ldur	w0, [x29, #-4]
    f2a8:	ldp	x29, x30, [sp, #96]
    f2ac:	add	sp, sp, #0x70
    f2b0:	ret
    f2b4:	sub	sp, sp, #0x10
    f2b8:	str	x0, [sp, #8]
    f2bc:	ldr	x8, [sp, #8]
    f2c0:	ldrb	w9, [x8]
    f2c4:	str	w9, [sp, #4]
    f2c8:	ldr	x8, [sp, #8]
    f2cc:	ldrb	w9, [x8, #1]
    f2d0:	ldr	w10, [sp, #4]
    f2d4:	orr	w9, w10, w9, lsl #8
    f2d8:	str	w9, [sp, #4]
    f2dc:	ldr	x8, [sp, #8]
    f2e0:	ldrb	w9, [x8, #2]
    f2e4:	ldr	w10, [sp, #4]
    f2e8:	orr	w9, w10, w9, lsl #16
    f2ec:	str	w9, [sp, #4]
    f2f0:	ldr	x8, [sp, #8]
    f2f4:	ldrb	w9, [x8, #3]
    f2f8:	ldr	w10, [sp, #4]
    f2fc:	orr	w9, w10, w9, lsl #24
    f300:	str	w9, [sp, #4]
    f304:	ldr	w0, [sp, #4]
    f308:	add	sp, sp, #0x10
    f30c:	ret
    f310:	sub	sp, sp, #0x30
    f314:	stp	x29, x30, [sp, #32]
    f318:	add	x29, sp, #0x20
    f31c:	stur	x0, [x29, #-8]
    f320:	str	x1, [sp, #16]
    f324:	str	xzr, [sp, #8]
    f328:	ldr	x8, [sp, #8]
    f32c:	cmp	x8, #0x4
    f330:	b.cs	f3a4 <lzma_block_header_decode@@XZ_5.0+0x3f8>  // b.hs, b.nlast
    f334:	ldur	x8, [x29, #-8]
    f338:	ldr	x8, [x8, #32]
    f33c:	ldr	x9, [sp, #8]
    f340:	mov	x10, #0x10                  	// #16
    f344:	mul	x9, x10, x9
    f348:	add	x8, x8, x9
    f34c:	ldr	x0, [x8, #8]
    f350:	ldr	x1, [sp, #16]
    f354:	str	x10, [sp]
    f358:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
    f35c:	ldur	x8, [x29, #-8]
    f360:	ldr	x8, [x8, #32]
    f364:	ldr	x9, [sp, #8]
    f368:	ldr	x10, [sp]
    f36c:	mul	x9, x10, x9
    f370:	mov	x11, #0xffffffffffffffff    	// #-1
    f374:	str	x11, [x8, x9]
    f378:	ldur	x8, [x29, #-8]
    f37c:	ldr	x8, [x8, #32]
    f380:	ldr	x9, [sp, #8]
    f384:	mul	x9, x10, x9
    f388:	add	x8, x8, x9
    f38c:	mov	x9, xzr
    f390:	str	x9, [x8, #8]
    f394:	ldr	x8, [sp, #8]
    f398:	add	x8, x8, #0x1
    f39c:	str	x8, [sp, #8]
    f3a0:	b	f328 <lzma_block_header_decode@@XZ_5.0+0x37c>
    f3a4:	ldp	x29, x30, [sp, #32]
    f3a8:	add	sp, sp, #0x30
    f3ac:	ret

000000000000f3b0 <lzma_easy_decoder_memusage@@XZ_5.0>:
    f3b0:	sub	sp, sp, #0xe0
    f3b4:	stp	x29, x30, [sp, #208]
    f3b8:	add	x29, sp, #0xd0
    f3bc:	mov	x8, sp
    f3c0:	stur	w0, [x29, #-12]
    f3c4:	ldur	w1, [x29, #-12]
    f3c8:	mov	x0, x8
    f3cc:	bl	467c <lzma_block_total_size@@XZ_5.0+0x6c>
    f3d0:	tbnz	w0, #0, f3d8 <lzma_easy_decoder_memusage@@XZ_5.0+0x28>
    f3d4:	b	f3e4 <lzma_easy_decoder_memusage@@XZ_5.0+0x34>
    f3d8:	mov	x8, #0xffffffff            	// #4294967295
    f3dc:	stur	x8, [x29, #-8]
    f3e0:	b	f3f0 <lzma_easy_decoder_memusage@@XZ_5.0+0x40>
    f3e4:	mov	x0, sp
    f3e8:	bl	32e0 <lzma_raw_decoder_memusage@plt>
    f3ec:	stur	x0, [x29, #-8]
    f3f0:	ldur	x0, [x29, #-8]
    f3f4:	ldp	x29, x30, [sp, #208]
    f3f8:	add	sp, sp, #0xe0
    f3fc:	ret

000000000000f400 <lzma_raw_buffer_decode@@XZ_5.0>:
    f400:	sub	sp, sp, #0xd0
    f404:	stp	x29, x30, [sp, #192]
    f408:	add	x29, sp, #0xc0
    f40c:	stur	x0, [x29, #-16]
    f410:	stur	x1, [x29, #-24]
    f414:	stur	x2, [x29, #-32]
    f418:	stur	x3, [x29, #-40]
    f41c:	stur	x4, [x29, #-48]
    f420:	stur	x5, [x29, #-56]
    f424:	stur	x6, [x29, #-64]
    f428:	stur	x7, [x29, #-72]
    f42c:	ldur	x8, [x29, #-32]
    f430:	cbz	x8, f474 <lzma_raw_buffer_decode@@XZ_5.0+0x74>
    f434:	ldur	x8, [x29, #-40]
    f438:	cbz	x8, f474 <lzma_raw_buffer_decode@@XZ_5.0+0x74>
    f43c:	ldur	x8, [x29, #-40]
    f440:	ldr	x8, [x8]
    f444:	ldur	x9, [x29, #-48]
    f448:	cmp	x8, x9
    f44c:	b.hi	f474 <lzma_raw_buffer_decode@@XZ_5.0+0x74>  // b.pmore
    f450:	ldur	x8, [x29, #-56]
    f454:	cbz	x8, f474 <lzma_raw_buffer_decode@@XZ_5.0+0x74>
    f458:	ldur	x8, [x29, #-64]
    f45c:	cbz	x8, f474 <lzma_raw_buffer_decode@@XZ_5.0+0x74>
    f460:	ldur	x8, [x29, #-64]
    f464:	ldr	x8, [x8]
    f468:	ldur	x9, [x29, #-72]
    f46c:	cmp	x8, x9
    f470:	b.ls	f480 <lzma_raw_buffer_decode@@XZ_5.0+0x80>  // b.plast
    f474:	mov	w8, #0xb                   	// #11
    f478:	stur	w8, [x29, #-4]
    f47c:	b	f5fc <lzma_raw_buffer_decode@@XZ_5.0+0x1fc>
    f480:	add	x0, sp, #0x30
    f484:	mov	w8, wzr
    f488:	mov	w1, w8
    f48c:	mov	x2, #0x48                  	// #72
    f490:	bl	3230 <memset@plt>
    f494:	mov	x9, #0xffffffffffffffff    	// #-1
    f498:	str	x9, [sp, #56]
    f49c:	ldur	x1, [x29, #-24]
    f4a0:	ldur	x2, [x29, #-16]
    f4a4:	add	x0, sp, #0x30
    f4a8:	bl	f6c0 <lzma_filter_decoder_is_supported@@XZ_5.0+0xb4>
    f4ac:	str	w0, [sp, #44]
    f4b0:	ldr	w8, [sp, #44]
    f4b4:	cbz	w8, f4c4 <lzma_raw_buffer_decode@@XZ_5.0+0xc4>
    f4b8:	ldr	w8, [sp, #44]
    f4bc:	stur	w8, [x29, #-4]
    f4c0:	b	f5fc <lzma_raw_buffer_decode@@XZ_5.0+0x1fc>
    f4c4:	ldur	x8, [x29, #-40]
    f4c8:	ldr	x8, [x8]
    f4cc:	str	x8, [sp, #32]
    f4d0:	ldur	x8, [x29, #-64]
    f4d4:	ldr	x8, [x8]
    f4d8:	str	x8, [sp, #24]
    f4dc:	add	x8, sp, #0x30
    f4e0:	ldr	x8, [x8, #24]
    f4e4:	ldr	x0, [sp, #48]
    f4e8:	ldur	x1, [x29, #-24]
    f4ec:	ldur	x2, [x29, #-32]
    f4f0:	ldur	x3, [x29, #-40]
    f4f4:	ldur	x4, [x29, #-48]
    f4f8:	ldur	x5, [x29, #-56]
    f4fc:	ldur	x6, [x29, #-64]
    f500:	ldur	x7, [x29, #-72]
    f504:	mov	x9, sp
    f508:	mov	w10, #0x3                   	// #3
    f50c:	str	w10, [x9]
    f510:	blr	x8
    f514:	str	w0, [sp, #20]
    f518:	ldr	w10, [sp, #20]
    f51c:	cmp	w10, #0x1
    f520:	b.ne	f52c <lzma_raw_buffer_decode@@XZ_5.0+0x12c>  // b.any
    f524:	str	wzr, [sp, #20]
    f528:	b	f5e8 <lzma_raw_buffer_decode@@XZ_5.0+0x1e8>
    f52c:	ldr	w8, [sp, #20]
    f530:	cbnz	w8, f5d0 <lzma_raw_buffer_decode@@XZ_5.0+0x1d0>
    f534:	ldur	x8, [x29, #-40]
    f538:	ldr	x8, [x8]
    f53c:	ldur	x9, [x29, #-48]
    f540:	cmp	x8, x9
    f544:	b.eq	f554 <lzma_raw_buffer_decode@@XZ_5.0+0x154>  // b.none
    f548:	mov	w8, #0xa                   	// #10
    f54c:	str	w8, [sp, #20]
    f550:	b	f5d0 <lzma_raw_buffer_decode@@XZ_5.0+0x1d0>
    f554:	ldur	x8, [x29, #-64]
    f558:	ldr	x8, [x8]
    f55c:	ldur	x9, [x29, #-72]
    f560:	cmp	x8, x9
    f564:	b.eq	f574 <lzma_raw_buffer_decode@@XZ_5.0+0x174>  // b.none
    f568:	mov	w8, #0x9                   	// #9
    f56c:	str	w8, [sp, #20]
    f570:	b	f5d0 <lzma_raw_buffer_decode@@XZ_5.0+0x1d0>
    f574:	add	x6, sp, #0x8
    f578:	str	xzr, [sp, #8]
    f57c:	add	x8, sp, #0x30
    f580:	ldr	x8, [x8, #24]
    f584:	ldr	x0, [sp, #48]
    f588:	ldur	x1, [x29, #-24]
    f58c:	ldur	x2, [x29, #-32]
    f590:	ldur	x3, [x29, #-40]
    f594:	ldur	x4, [x29, #-48]
    f598:	add	x5, sp, #0x13
    f59c:	mov	x7, #0x1                   	// #1
    f5a0:	mov	x9, sp
    f5a4:	mov	w10, #0x3                   	// #3
    f5a8:	str	w10, [x9]
    f5ac:	blr	x8
    f5b0:	ldr	x8, [sp, #8]
    f5b4:	cmp	x8, #0x1
    f5b8:	b.ne	f5c8 <lzma_raw_buffer_decode@@XZ_5.0+0x1c8>  // b.any
    f5bc:	mov	w8, #0xa                   	// #10
    f5c0:	str	w8, [sp, #20]
    f5c4:	b	f5d0 <lzma_raw_buffer_decode@@XZ_5.0+0x1d0>
    f5c8:	mov	w8, #0x9                   	// #9
    f5cc:	str	w8, [sp, #20]
    f5d0:	ldr	x8, [sp, #32]
    f5d4:	ldur	x9, [x29, #-40]
    f5d8:	str	x8, [x9]
    f5dc:	ldr	x8, [sp, #24]
    f5e0:	ldur	x9, [x29, #-64]
    f5e4:	str	x8, [x9]
    f5e8:	ldur	x1, [x29, #-24]
    f5ec:	add	x0, sp, #0x30
    f5f0:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    f5f4:	ldr	w8, [sp, #20]
    f5f8:	stur	w8, [x29, #-4]
    f5fc:	ldur	w0, [x29, #-4]
    f600:	ldp	x29, x30, [sp, #192]
    f604:	add	sp, sp, #0xd0
    f608:	ret

000000000000f60c <lzma_filter_decoder_is_supported@@XZ_5.0>:
    f60c:	sub	sp, sp, #0x20
    f610:	stp	x29, x30, [sp, #16]
    f614:	add	x29, sp, #0x10
    f618:	str	x0, [sp, #8]
    f61c:	ldr	x0, [sp, #8]
    f620:	bl	f640 <lzma_filter_decoder_is_supported@@XZ_5.0+0x34>
    f624:	cmp	x0, #0x0
    f628:	cset	w8, ne  // ne = any
    f62c:	and	w8, w8, #0x1
    f630:	mov	w0, w8
    f634:	ldp	x29, x30, [sp, #16]
    f638:	add	sp, sp, #0x20
    f63c:	ret
    f640:	sub	sp, sp, #0x20
    f644:	str	x0, [sp, #16]
    f648:	str	xzr, [sp, #8]
    f64c:	ldr	x8, [sp, #8]
    f650:	cmp	x8, #0x9
    f654:	b.cs	f6ac <lzma_filter_decoder_is_supported@@XZ_5.0+0xa0>  // b.hs, b.nlast
    f658:	ldr	x8, [sp, #8]
    f65c:	mov	x9, #0x20                  	// #32
    f660:	mul	x8, x9, x8
    f664:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    f668:	add	x9, x9, #0xbf8
    f66c:	ldr	x8, [x9, x8]
    f670:	ldr	x9, [sp, #16]
    f674:	cmp	x8, x9
    f678:	b.ne	f69c <lzma_filter_decoder_is_supported@@XZ_5.0+0x90>  // b.any
    f67c:	ldr	x8, [sp, #8]
    f680:	mov	x9, #0x20                  	// #32
    f684:	mul	x8, x9, x8
    f688:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
    f68c:	add	x9, x9, #0xbf8
    f690:	add	x8, x9, x8
    f694:	str	x8, [sp, #24]
    f698:	b	f6b4 <lzma_filter_decoder_is_supported@@XZ_5.0+0xa8>
    f69c:	ldr	x8, [sp, #8]
    f6a0:	add	x8, x8, #0x1
    f6a4:	str	x8, [sp, #8]
    f6a8:	b	f64c <lzma_filter_decoder_is_supported@@XZ_5.0+0x40>
    f6ac:	mov	x8, xzr
    f6b0:	str	x8, [sp, #24]
    f6b4:	ldr	x0, [sp, #24]
    f6b8:	add	sp, sp, #0x20
    f6bc:	ret
    f6c0:	sub	sp, sp, #0x30
    f6c4:	stp	x29, x30, [sp, #32]
    f6c8:	add	x29, sp, #0x20
    f6cc:	adrp	x3, f000 <lzma_block_header_decode@@XZ_5.0+0x54>
    f6d0:	add	x3, x3, #0x640
    f6d4:	stur	x0, [x29, #-8]
    f6d8:	str	x1, [sp, #16]
    f6dc:	str	x2, [sp, #8]
    f6e0:	ldur	x0, [x29, #-8]
    f6e4:	ldr	x1, [sp, #16]
    f6e8:	ldr	x2, [sp, #8]
    f6ec:	mov	w8, wzr
    f6f0:	and	w4, w8, #0x1
    f6f4:	bl	49a8 <lzma_filters_copy@@XZ_5.0+0x2a8>
    f6f8:	ldp	x29, x30, [sp, #32]
    f6fc:	add	sp, sp, #0x30
    f700:	ret

000000000000f704 <lzma_raw_decoder@@XZ_5.0>:
    f704:	sub	sp, sp, #0x30
    f708:	stp	x29, x30, [sp, #32]
    f70c:	add	x29, sp, #0x20
    f710:	str	x0, [sp, #16]
    f714:	str	x1, [sp, #8]
    f718:	ldr	x0, [sp, #16]
    f71c:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    f720:	str	w0, [sp, #4]
    f724:	ldr	w8, [sp, #4]
    f728:	cbz	w8, f738 <lzma_raw_decoder@@XZ_5.0+0x34>
    f72c:	ldr	w8, [sp, #4]
    f730:	stur	w8, [x29, #-4]
    f734:	b	f790 <lzma_raw_decoder@@XZ_5.0+0x8c>
    f738:	ldr	x8, [sp, #16]
    f73c:	ldr	x0, [x8, #56]
    f740:	ldr	x8, [sp, #16]
    f744:	ldr	x1, [x8, #48]
    f748:	ldr	x2, [sp, #8]
    f74c:	bl	f6c0 <lzma_filter_decoder_is_supported@@XZ_5.0+0xb4>
    f750:	str	w0, [sp]
    f754:	ldr	w9, [sp]
    f758:	cbz	w9, f770 <lzma_raw_decoder@@XZ_5.0+0x6c>
    f75c:	ldr	x0, [sp, #16]
    f760:	bl	3320 <lzma_end@plt>
    f764:	ldr	w8, [sp]
    f768:	stur	w8, [x29, #-4]
    f76c:	b	f790 <lzma_raw_decoder@@XZ_5.0+0x8c>
    f770:	ldr	x8, [sp, #16]
    f774:	ldr	x8, [x8, #56]
    f778:	mov	w9, #0x1                   	// #1
    f77c:	strb	w9, [x8, #88]
    f780:	ldr	x8, [sp, #16]
    f784:	ldr	x8, [x8, #56]
    f788:	strb	w9, [x8, #91]
    f78c:	stur	wzr, [x29, #-4]
    f790:	ldur	w0, [x29, #-4]
    f794:	ldp	x29, x30, [sp, #32]
    f798:	add	sp, sp, #0x30
    f79c:	ret

000000000000f7a0 <lzma_raw_decoder_memusage@@XZ_5.0>:
    f7a0:	sub	sp, sp, #0x20
    f7a4:	stp	x29, x30, [sp, #16]
    f7a8:	add	x29, sp, #0x10
    f7ac:	adrp	x8, f000 <lzma_block_header_decode@@XZ_5.0+0x54>
    f7b0:	add	x8, x8, #0x640
    f7b4:	str	x0, [sp, #8]
    f7b8:	ldr	x1, [sp, #8]
    f7bc:	mov	x0, x8
    f7c0:	bl	4dec <lzma_filters_copy@@XZ_5.0+0x6ec>
    f7c4:	ldp	x29, x30, [sp, #16]
    f7c8:	add	sp, sp, #0x20
    f7cc:	ret

000000000000f7d0 <lzma_properties_decode@@XZ_5.0>:
    f7d0:	sub	sp, sp, #0x40
    f7d4:	stp	x29, x30, [sp, #48]
    f7d8:	add	x29, sp, #0x30
    f7dc:	mov	x8, xzr
    f7e0:	stur	x0, [x29, #-16]
    f7e4:	str	x1, [sp, #24]
    f7e8:	str	x2, [sp, #16]
    f7ec:	str	x3, [sp, #8]
    f7f0:	ldur	x9, [x29, #-16]
    f7f4:	str	x8, [x9, #8]
    f7f8:	ldur	x8, [x29, #-16]
    f7fc:	ldr	x0, [x8]
    f800:	bl	f640 <lzma_filter_decoder_is_supported@@XZ_5.0+0x34>
    f804:	str	x0, [sp]
    f808:	ldr	x8, [sp]
    f80c:	cbnz	x8, f81c <lzma_properties_decode@@XZ_5.0+0x4c>
    f810:	mov	w8, #0x8                   	// #8
    f814:	stur	w8, [x29, #-4]
    f818:	b	f868 <lzma_properties_decode@@XZ_5.0+0x98>
    f81c:	ldr	x8, [sp]
    f820:	ldr	x8, [x8, #24]
    f824:	cbnz	x8, f844 <lzma_properties_decode@@XZ_5.0+0x74>
    f828:	ldr	x8, [sp, #8]
    f82c:	mov	w9, #0x8                   	// #8
    f830:	mov	w10, wzr
    f834:	cmp	x8, #0x0
    f838:	csel	w9, w10, w9, eq  // eq = none
    f83c:	stur	w9, [x29, #-4]
    f840:	b	f868 <lzma_properties_decode@@XZ_5.0+0x98>
    f844:	ldr	x8, [sp]
    f848:	ldr	x8, [x8, #24]
    f84c:	ldur	x9, [x29, #-16]
    f850:	add	x0, x9, #0x8
    f854:	ldr	x1, [sp, #24]
    f858:	ldr	x2, [sp, #16]
    f85c:	ldr	x3, [sp, #8]
    f860:	blr	x8
    f864:	stur	w0, [x29, #-4]
    f868:	ldur	w0, [x29, #-4]
    f86c:	ldp	x29, x30, [sp, #48]
    f870:	add	sp, sp, #0x40
    f874:	ret

000000000000f878 <lzma_filter_flags_decode@@XZ_5.0>:
    f878:	sub	sp, sp, #0x60
    f87c:	stp	x29, x30, [sp, #80]
    f880:	add	x29, sp, #0x50
    f884:	mov	x8, xzr
    f888:	stur	x0, [x29, #-16]
    f88c:	stur	x1, [x29, #-24]
    f890:	stur	x2, [x29, #-32]
    f894:	str	x3, [sp, #40]
    f898:	str	x4, [sp, #32]
    f89c:	ldur	x9, [x29, #-16]
    f8a0:	str	x8, [x9, #8]
    f8a4:	ldur	x0, [x29, #-16]
    f8a8:	ldur	x2, [x29, #-32]
    f8ac:	ldr	x3, [sp, #40]
    f8b0:	ldr	x4, [sp, #32]
    f8b4:	mov	x8, xzr
    f8b8:	mov	x1, x8
    f8bc:	bl	33c0 <lzma_vli_decode@plt>
    f8c0:	str	w0, [sp, #28]
    f8c4:	ldr	w9, [sp, #28]
    f8c8:	cbz	w9, f8d8 <lzma_filter_flags_decode@@XZ_5.0+0x60>
    f8cc:	ldr	w8, [sp, #28]
    f8d0:	stur	w8, [x29, #-4]
    f8d4:	b	f994 <lzma_filter_flags_decode@@XZ_5.0+0x11c>
    f8d8:	ldur	x8, [x29, #-16]
    f8dc:	ldr	x8, [x8]
    f8e0:	mov	x9, #0x4000000000000000    	// #4611686018427387904
    f8e4:	cmp	x8, x9
    f8e8:	b.cc	f8f8 <lzma_filter_flags_decode@@XZ_5.0+0x80>  // b.lo, b.ul, b.last
    f8ec:	mov	w8, #0x9                   	// #9
    f8f0:	stur	w8, [x29, #-4]
    f8f4:	b	f994 <lzma_filter_flags_decode@@XZ_5.0+0x11c>
    f8f8:	ldur	x2, [x29, #-32]
    f8fc:	ldr	x3, [sp, #40]
    f900:	ldr	x4, [sp, #32]
    f904:	add	x0, sp, #0x10
    f908:	mov	x8, xzr
    f90c:	mov	x1, x8
    f910:	bl	33c0 <lzma_vli_decode@plt>
    f914:	str	w0, [sp, #12]
    f918:	ldr	w9, [sp, #12]
    f91c:	cbz	w9, f92c <lzma_filter_flags_decode@@XZ_5.0+0xb4>
    f920:	ldr	w8, [sp, #12]
    f924:	stur	w8, [x29, #-4]
    f928:	b	f994 <lzma_filter_flags_decode@@XZ_5.0+0x11c>
    f92c:	ldr	x8, [sp, #32]
    f930:	ldr	x9, [sp, #40]
    f934:	ldr	x9, [x9]
    f938:	subs	x8, x8, x9
    f93c:	ldr	x9, [sp, #16]
    f940:	cmp	x8, x9
    f944:	b.cs	f954 <lzma_filter_flags_decode@@XZ_5.0+0xdc>  // b.hs, b.nlast
    f948:	mov	w8, #0x9                   	// #9
    f94c:	stur	w8, [x29, #-4]
    f950:	b	f994 <lzma_filter_flags_decode@@XZ_5.0+0x11c>
    f954:	ldur	x0, [x29, #-16]
    f958:	ldur	x1, [x29, #-24]
    f95c:	ldur	x8, [x29, #-32]
    f960:	ldr	x9, [sp, #40]
    f964:	ldr	x9, [x9]
    f968:	add	x2, x8, x9
    f96c:	ldr	x3, [sp, #16]
    f970:	bl	3250 <lzma_properties_decode@plt>
    f974:	str	w0, [sp, #8]
    f978:	ldr	x8, [sp, #16]
    f97c:	ldr	x9, [sp, #40]
    f980:	ldr	x10, [x9]
    f984:	add	x8, x10, x8
    f988:	str	x8, [x9]
    f98c:	ldr	w11, [sp, #8]
    f990:	stur	w11, [x29, #-4]
    f994:	ldur	w0, [x29, #-4]
    f998:	ldp	x29, x30, [sp, #80]
    f99c:	add	sp, sp, #0x60
    f9a0:	ret

000000000000f9a4 <lzma_index_decoder@@XZ_5.0>:
    f9a4:	sub	sp, sp, #0x40
    f9a8:	stp	x29, x30, [sp, #48]
    f9ac:	add	x29, sp, #0x30
    f9b0:	stur	x0, [x29, #-16]
    f9b4:	str	x1, [sp, #24]
    f9b8:	str	x2, [sp, #16]
    f9bc:	ldur	x0, [x29, #-16]
    f9c0:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
    f9c4:	str	w0, [sp, #12]
    f9c8:	ldr	w8, [sp, #12]
    f9cc:	cbz	w8, f9dc <lzma_index_decoder@@XZ_5.0+0x38>
    f9d0:	ldr	w8, [sp, #12]
    f9d4:	stur	w8, [x29, #-4]
    f9d8:	b	fa38 <lzma_index_decoder@@XZ_5.0+0x94>
    f9dc:	ldur	x8, [x29, #-16]
    f9e0:	ldr	x0, [x8, #56]
    f9e4:	ldur	x8, [x29, #-16]
    f9e8:	ldr	x1, [x8, #48]
    f9ec:	ldr	x2, [sp, #24]
    f9f0:	ldr	x3, [sp, #16]
    f9f4:	bl	fa48 <lzma_index_decoder@@XZ_5.0+0xa4>
    f9f8:	str	w0, [sp, #8]
    f9fc:	ldr	w9, [sp, #8]
    fa00:	cbz	w9, fa18 <lzma_index_decoder@@XZ_5.0+0x74>
    fa04:	ldur	x0, [x29, #-16]
    fa08:	bl	3320 <lzma_end@plt>
    fa0c:	ldr	w8, [sp, #8]
    fa10:	stur	w8, [x29, #-4]
    fa14:	b	fa38 <lzma_index_decoder@@XZ_5.0+0x94>
    fa18:	ldur	x8, [x29, #-16]
    fa1c:	ldr	x8, [x8, #56]
    fa20:	mov	w9, #0x1                   	// #1
    fa24:	strb	w9, [x8, #88]
    fa28:	ldur	x8, [x29, #-16]
    fa2c:	ldr	x8, [x8, #56]
    fa30:	strb	w9, [x8, #91]
    fa34:	stur	wzr, [x29, #-4]
    fa38:	ldur	w0, [x29, #-4]
    fa3c:	ldp	x29, x30, [sp, #48]
    fa40:	add	sp, sp, #0x40
    fa44:	ret
    fa48:	sub	sp, sp, #0x50
    fa4c:	stp	x29, x30, [sp, #64]
    fa50:	add	x29, sp, #0x40
    fa54:	adrp	x8, f000 <lzma_block_header_decode@@XZ_5.0+0x54>
    fa58:	add	x8, x8, #0xa48
    fa5c:	stur	x0, [x29, #-16]
    fa60:	stur	x1, [x29, #-24]
    fa64:	str	x2, [sp, #32]
    fa68:	str	x3, [sp, #24]
    fa6c:	str	x8, [sp, #8]
    fa70:	ldur	x8, [x29, #-16]
    fa74:	ldr	x8, [x8, #16]
    fa78:	ldr	x9, [sp, #8]
    fa7c:	cmp	x9, x8
    fa80:	b.eq	fa90 <lzma_index_decoder@@XZ_5.0+0xec>  // b.none
    fa84:	ldur	x0, [x29, #-16]
    fa88:	ldur	x1, [x29, #-24]
    fa8c:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
    fa90:	ldur	x8, [x29, #-16]
    fa94:	ldr	x9, [sp, #8]
    fa98:	str	x9, [x8, #16]
    fa9c:	ldr	x8, [sp, #32]
    faa0:	cbnz	x8, fab0 <lzma_index_decoder@@XZ_5.0+0x10c>
    faa4:	mov	w8, #0xb                   	// #11
    faa8:	stur	w8, [x29, #-4]
    faac:	b	fb5c <lzma_index_decoder@@XZ_5.0+0x1b8>
    fab0:	ldur	x8, [x29, #-16]
    fab4:	ldr	x8, [x8]
    fab8:	str	x8, [sp, #16]
    fabc:	ldr	x8, [sp, #16]
    fac0:	cbnz	x8, fb34 <lzma_index_decoder@@XZ_5.0+0x190>
    fac4:	ldur	x1, [x29, #-24]
    fac8:	mov	x0, #0x48                  	// #72
    facc:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
    fad0:	str	x0, [sp, #16]
    fad4:	ldr	x8, [sp, #16]
    fad8:	cbnz	x8, fae8 <lzma_index_decoder@@XZ_5.0+0x144>
    fadc:	mov	w8, #0x5                   	// #5
    fae0:	stur	w8, [x29, #-4]
    fae4:	b	fb5c <lzma_index_decoder@@XZ_5.0+0x1b8>
    fae8:	ldr	x8, [sp, #16]
    faec:	ldur	x9, [x29, #-16]
    faf0:	str	x8, [x9]
    faf4:	ldur	x8, [x29, #-16]
    faf8:	adrp	x9, f000 <lzma_block_header_decode@@XZ_5.0+0x54>
    fafc:	add	x9, x9, #0xd88
    fb00:	str	x9, [x8, #24]
    fb04:	ldur	x8, [x29, #-16]
    fb08:	adrp	x9, 10000 <lzma_index_buffer_decode@@XZ_5.0+0x494>
    fb0c:	add	x9, x9, #0x1e4
    fb10:	str	x9, [x8, #32]
    fb14:	ldur	x8, [x29, #-16]
    fb18:	adrp	x9, 10000 <lzma_index_buffer_decode@@XZ_5.0+0x494>
    fb1c:	add	x9, x9, #0x228
    fb20:	str	x9, [x8, #56]
    fb24:	ldr	x8, [sp, #16]
    fb28:	mov	x9, xzr
    fb2c:	str	x9, [x8, #16]
    fb30:	b	fb44 <lzma_index_decoder@@XZ_5.0+0x1a0>
    fb34:	ldr	x8, [sp, #16]
    fb38:	ldr	x0, [x8, #16]
    fb3c:	ldur	x1, [x29, #-24]
    fb40:	bl	33e0 <lzma_index_end@plt>
    fb44:	ldr	x0, [sp, #16]
    fb48:	ldur	x1, [x29, #-24]
    fb4c:	ldr	x2, [sp, #32]
    fb50:	ldr	x3, [sp, #24]
    fb54:	bl	fcc8 <lzma_index_buffer_decode@@XZ_5.0+0x15c>
    fb58:	stur	w0, [x29, #-4]
    fb5c:	ldur	w0, [x29, #-4]
    fb60:	ldp	x29, x30, [sp, #64]
    fb64:	add	sp, sp, #0x50
    fb68:	ret

000000000000fb6c <lzma_index_buffer_decode@@XZ_5.0>:
    fb6c:	sub	sp, sp, #0xc0
    fb70:	stp	x29, x30, [sp, #176]
    fb74:	add	x29, sp, #0xb0
    fb78:	sub	x8, x29, #0x10
    fb7c:	str	x0, [x8]
    fb80:	stur	x1, [x29, #-24]
    fb84:	stur	x2, [x29, #-32]
    fb88:	stur	x3, [x29, #-40]
    fb8c:	stur	x4, [x29, #-48]
    fb90:	stur	x5, [x29, #-56]
    fb94:	ldr	x9, [x8]
    fb98:	str	x8, [sp, #16]
    fb9c:	cbz	x9, fbcc <lzma_index_buffer_decode@@XZ_5.0+0x60>
    fba0:	ldur	x8, [x29, #-24]
    fba4:	cbz	x8, fbcc <lzma_index_buffer_decode@@XZ_5.0+0x60>
    fba8:	ldur	x8, [x29, #-40]
    fbac:	cbz	x8, fbcc <lzma_index_buffer_decode@@XZ_5.0+0x60>
    fbb0:	ldur	x8, [x29, #-48]
    fbb4:	cbz	x8, fbcc <lzma_index_buffer_decode@@XZ_5.0+0x60>
    fbb8:	ldur	x8, [x29, #-48]
    fbbc:	ldr	x8, [x8]
    fbc0:	ldur	x9, [x29, #-56]
    fbc4:	cmp	x8, x9
    fbc8:	b.ls	fbd8 <lzma_index_buffer_decode@@XZ_5.0+0x6c>  // b.plast
    fbcc:	mov	w8, #0xb                   	// #11
    fbd0:	stur	w8, [x29, #-4]
    fbd4:	b	fcb8 <lzma_index_buffer_decode@@XZ_5.0+0x14c>
    fbd8:	ldur	x1, [x29, #-32]
    fbdc:	ldr	x8, [sp, #16]
    fbe0:	ldr	x2, [x8]
    fbe4:	ldur	x9, [x29, #-24]
    fbe8:	ldr	x3, [x9]
    fbec:	add	x0, sp, #0x30
    fbf0:	bl	fcc8 <lzma_index_buffer_decode@@XZ_5.0+0x15c>
    fbf4:	str	w0, [sp, #44]
    fbf8:	ldr	w10, [sp, #44]
    fbfc:	cbz	w10, fc0c <lzma_index_buffer_decode@@XZ_5.0+0xa0>
    fc00:	ldr	w8, [sp, #44]
    fc04:	stur	w8, [x29, #-4]
    fc08:	b	fcb8 <lzma_index_buffer_decode@@XZ_5.0+0x14c>
    fc0c:	ldur	x8, [x29, #-48]
    fc10:	ldr	x8, [x8]
    fc14:	str	x8, [sp, #32]
    fc18:	ldur	x1, [x29, #-32]
    fc1c:	ldur	x2, [x29, #-40]
    fc20:	ldur	x3, [x29, #-48]
    fc24:	ldur	x4, [x29, #-56]
    fc28:	add	x0, sp, #0x30
    fc2c:	mov	x8, xzr
    fc30:	mov	x5, x8
    fc34:	mov	x6, x8
    fc38:	mov	x7, x8
    fc3c:	mov	x8, sp
    fc40:	str	wzr, [x8]
    fc44:	bl	fd88 <lzma_index_buffer_decode@@XZ_5.0+0x21c>
    fc48:	str	w0, [sp, #28]
    fc4c:	ldr	w9, [sp, #28]
    fc50:	cmp	w9, #0x1
    fc54:	b.ne	fc60 <lzma_index_buffer_decode@@XZ_5.0+0xf4>  // b.any
    fc58:	str	wzr, [sp, #28]
    fc5c:	b	fcb0 <lzma_index_buffer_decode@@XZ_5.0+0x144>
    fc60:	add	x8, sp, #0x30
    fc64:	ldr	x0, [x8, #16]
    fc68:	ldur	x1, [x29, #-32]
    fc6c:	bl	33e0 <lzma_index_end@plt>
    fc70:	ldr	x8, [sp, #32]
    fc74:	ldur	x9, [x29, #-48]
    fc78:	str	x8, [x9]
    fc7c:	ldr	w10, [sp, #28]
    fc80:	cbnz	w10, fc90 <lzma_index_buffer_decode@@XZ_5.0+0x124>
    fc84:	mov	w8, #0x9                   	// #9
    fc88:	str	w8, [sp, #28]
    fc8c:	b	fcb0 <lzma_index_buffer_decode@@XZ_5.0+0x144>
    fc90:	ldr	w8, [sp, #28]
    fc94:	cmp	w8, #0x6
    fc98:	b.ne	fcb0 <lzma_index_buffer_decode@@XZ_5.0+0x144>  // b.any
    fc9c:	ldr	x1, [sp, #80]
    fca0:	mov	x0, #0x1                   	// #1
    fca4:	bl	3180 <lzma_index_memusage@plt>
    fca8:	ldur	x8, [x29, #-24]
    fcac:	str	x0, [x8]
    fcb0:	ldr	w8, [sp, #28]
    fcb4:	stur	w8, [x29, #-4]
    fcb8:	ldur	w0, [x29, #-4]
    fcbc:	ldp	x29, x30, [sp, #176]
    fcc0:	add	sp, sp, #0xc0
    fcc4:	ret
    fcc8:	sub	sp, sp, #0x40
    fccc:	stp	x29, x30, [sp, #48]
    fcd0:	add	x29, sp, #0x30
    fcd4:	mov	x8, xzr
    fcd8:	stur	x0, [x29, #-16]
    fcdc:	str	x1, [sp, #24]
    fce0:	str	x2, [sp, #16]
    fce4:	str	x3, [sp, #8]
    fce8:	ldr	x9, [sp, #16]
    fcec:	ldur	x10, [x29, #-16]
    fcf0:	str	x9, [x10, #24]
    fcf4:	ldr	x9, [sp, #16]
    fcf8:	str	x8, [x9]
    fcfc:	ldr	x0, [sp, #24]
    fd00:	bl	33b0 <lzma_index_init@plt>
    fd04:	ldur	x8, [x29, #-16]
    fd08:	str	x0, [x8, #16]
    fd0c:	ldur	x8, [x29, #-16]
    fd10:	ldr	x8, [x8, #16]
    fd14:	cbnz	x8, fd24 <lzma_index_buffer_decode@@XZ_5.0+0x1b8>
    fd18:	mov	w8, #0x5                   	// #5
    fd1c:	stur	w8, [x29, #-4]
    fd20:	b	fd78 <lzma_index_buffer_decode@@XZ_5.0+0x20c>
    fd24:	ldur	x8, [x29, #-16]
    fd28:	str	wzr, [x8]
    fd2c:	ldr	x8, [sp, #8]
    fd30:	mov	x9, #0x1                   	// #1
    fd34:	cmp	x9, x8
    fd38:	b.ls	fd48 <lzma_index_buffer_decode@@XZ_5.0+0x1dc>  // b.plast
    fd3c:	mov	x8, #0x1                   	// #1
    fd40:	str	x8, [sp]
    fd44:	b	fd50 <lzma_index_buffer_decode@@XZ_5.0+0x1e4>
    fd48:	ldr	x8, [sp, #8]
    fd4c:	str	x8, [sp]
    fd50:	ldr	x8, [sp]
    fd54:	ldur	x9, [x29, #-16]
    fd58:	str	x8, [x9, #8]
    fd5c:	ldur	x8, [x29, #-16]
    fd60:	str	xzr, [x8, #32]
    fd64:	ldur	x8, [x29, #-16]
    fd68:	str	xzr, [x8, #56]
    fd6c:	ldur	x8, [x29, #-16]
    fd70:	str	wzr, [x8, #64]
    fd74:	stur	wzr, [x29, #-4]
    fd78:	ldur	w0, [x29, #-4]
    fd7c:	ldp	x29, x30, [sp, #48]
    fd80:	add	sp, sp, #0x40
    fd84:	ret
    fd88:	sub	sp, sp, #0xa0
    fd8c:	stp	x29, x30, [sp, #144]
    fd90:	add	x29, sp, #0x90
    fd94:	ldr	w8, [x29, #16]
    fd98:	stur	x0, [x29, #-16]
    fd9c:	stur	x1, [x29, #-24]
    fda0:	stur	x2, [x29, #-32]
    fda4:	stur	x3, [x29, #-40]
    fda8:	stur	x4, [x29, #-48]
    fdac:	stur	x5, [x29, #-56]
    fdb0:	stur	x6, [x29, #-64]
    fdb4:	str	x7, [sp, #72]
    fdb8:	str	w8, [sp, #68]
    fdbc:	ldur	x9, [x29, #-16]
    fdc0:	str	x9, [sp, #56]
    fdc4:	ldur	x9, [x29, #-40]
    fdc8:	ldr	x9, [x9]
    fdcc:	str	x9, [sp, #48]
    fdd0:	str	wzr, [sp, #44]
    fdd4:	ldur	x8, [x29, #-40]
    fdd8:	ldr	x8, [x8]
    fddc:	ldur	x9, [x29, #-48]
    fde0:	cmp	x8, x9
    fde4:	b.cs	1019c <lzma_index_buffer_decode@@XZ_5.0+0x630>  // b.hs, b.nlast
    fde8:	ldr	x8, [sp, #56]
    fdec:	ldr	w9, [x8]
    fdf0:	subs	w9, w9, #0x0
    fdf4:	mov	w8, w9
    fdf8:	ubfx	x8, x8, #0, #32
    fdfc:	cmp	x8, #0x7
    fe00:	str	x8, [sp, #16]
    fe04:	b.hi	1018c <lzma_index_buffer_decode@@XZ_5.0+0x620>  // b.pmore
    fe08:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
    fe0c:	add	x8, x8, #0xa6c
    fe10:	ldr	x11, [sp, #16]
    fe14:	ldrsw	x10, [x8, x11, lsl #2]
    fe18:	add	x9, x8, x10
    fe1c:	br	x9
    fe20:	ldur	x8, [x29, #-32]
    fe24:	ldur	x9, [x29, #-40]
    fe28:	ldr	x10, [x9]
    fe2c:	add	x11, x10, #0x1
    fe30:	str	x11, [x9]
    fe34:	ldrb	w12, [x8, x10]
    fe38:	cbz	w12, fe48 <lzma_index_buffer_decode@@XZ_5.0+0x2dc>
    fe3c:	mov	w8, #0x9                   	// #9
    fe40:	stur	w8, [x29, #-4]
    fe44:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
    fe48:	ldr	x8, [sp, #56]
    fe4c:	mov	w9, #0x1                   	// #1
    fe50:	str	w9, [x8]
    fe54:	b	10198 <lzma_index_buffer_decode@@XZ_5.0+0x62c>
    fe58:	ldr	x8, [sp, #56]
    fe5c:	add	x0, x8, #0x20
    fe60:	ldr	x8, [sp, #56]
    fe64:	add	x1, x8, #0x38
    fe68:	ldur	x2, [x29, #-32]
    fe6c:	ldur	x3, [x29, #-40]
    fe70:	ldur	x4, [x29, #-48]
    fe74:	bl	33c0 <lzma_vli_decode@plt>
    fe78:	str	w0, [sp, #44]
    fe7c:	ldr	w9, [sp, #44]
    fe80:	cmp	w9, #0x1
    fe84:	b.eq	fe8c <lzma_index_buffer_decode@@XZ_5.0+0x320>  // b.none
    fe88:	b	1019c <lzma_index_buffer_decode@@XZ_5.0+0x630>
    fe8c:	ldr	x8, [sp, #56]
    fe90:	str	xzr, [x8, #56]
    fe94:	ldr	x8, [sp, #56]
    fe98:	mov	w9, #0x2                   	// #2
    fe9c:	str	w9, [x8]
    fea0:	ldr	x8, [sp, #56]
    fea4:	ldr	x1, [x8, #32]
    fea8:	mov	x0, #0x1                   	// #1
    feac:	bl	3180 <lzma_index_memusage@plt>
    feb0:	ldr	x8, [sp, #56]
    feb4:	ldr	x8, [x8, #8]
    feb8:	cmp	x0, x8
    febc:	b.ls	fecc <lzma_index_buffer_decode@@XZ_5.0+0x360>  // b.plast
    fec0:	mov	w8, #0x6                   	// #6
    fec4:	str	w8, [sp, #44]
    fec8:	b	1019c <lzma_index_buffer_decode@@XZ_5.0+0x630>
    fecc:	ldr	x8, [sp, #56]
    fed0:	ldr	x0, [x8, #16]
    fed4:	ldr	x8, [sp, #56]
    fed8:	ldr	x1, [x8, #32]
    fedc:	bl	5380 <lzma_index_end@@XZ_5.0+0xd8>
    fee0:	str	wzr, [sp, #44]
    fee4:	ldr	x8, [sp, #56]
    fee8:	ldr	x8, [x8, #32]
    feec:	mov	w9, #0x5                   	// #5
    fef0:	mov	w10, #0x3                   	// #3
    fef4:	cmp	x8, #0x0
    fef8:	csel	w9, w9, w10, eq  // eq = none
    fefc:	ldr	x8, [sp, #56]
    ff00:	str	w9, [x8]
    ff04:	b	10198 <lzma_index_buffer_decode@@XZ_5.0+0x62c>
    ff08:	ldr	x8, [sp, #56]
    ff0c:	ldr	w9, [x8]
    ff10:	cmp	w9, #0x3
    ff14:	b.ne	ff28 <lzma_index_buffer_decode@@XZ_5.0+0x3bc>  // b.any
    ff18:	ldr	x8, [sp, #56]
    ff1c:	add	x8, x8, #0x28
    ff20:	str	x8, [sp, #8]
    ff24:	b	ff34 <lzma_index_buffer_decode@@XZ_5.0+0x3c8>
    ff28:	ldr	x8, [sp, #56]
    ff2c:	add	x8, x8, #0x30
    ff30:	str	x8, [sp, #8]
    ff34:	ldr	x8, [sp, #8]
    ff38:	str	x8, [sp, #32]
    ff3c:	ldr	x0, [sp, #32]
    ff40:	ldr	x8, [sp, #56]
    ff44:	add	x1, x8, #0x38
    ff48:	ldur	x2, [x29, #-32]
    ff4c:	ldur	x3, [x29, #-40]
    ff50:	ldur	x4, [x29, #-48]
    ff54:	bl	33c0 <lzma_vli_decode@plt>
    ff58:	str	w0, [sp, #44]
    ff5c:	ldr	w9, [sp, #44]
    ff60:	cmp	w9, #0x1
    ff64:	b.eq	ff6c <lzma_index_buffer_decode@@XZ_5.0+0x400>  // b.none
    ff68:	b	1019c <lzma_index_buffer_decode@@XZ_5.0+0x630>
    ff6c:	str	wzr, [sp, #44]
    ff70:	ldr	x8, [sp, #56]
    ff74:	str	xzr, [x8, #56]
    ff78:	ldr	x8, [sp, #56]
    ff7c:	ldr	w9, [x8]
    ff80:	cmp	w9, #0x3
    ff84:	b.ne	ffc8 <lzma_index_buffer_decode@@XZ_5.0+0x45c>  // b.any
    ff88:	ldr	x8, [sp, #56]
    ff8c:	ldr	x8, [x8, #40]
    ff90:	cmp	x8, #0x5
    ff94:	b.cc	ffac <lzma_index_buffer_decode@@XZ_5.0+0x440>  // b.lo, b.ul, b.last
    ff98:	ldr	x8, [sp, #56]
    ff9c:	ldr	x8, [x8, #40]
    ffa0:	mov	x9, #0x7ffffffffffffffc    	// #9223372036854775804
    ffa4:	cmp	x8, x9
    ffa8:	b.ls	ffb8 <lzma_index_buffer_decode@@XZ_5.0+0x44c>  // b.plast
    ffac:	mov	w8, #0x9                   	// #9
    ffb0:	stur	w8, [x29, #-4]
    ffb4:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
    ffb8:	ldr	x8, [sp, #56]
    ffbc:	mov	w9, #0x4                   	// #4
    ffc0:	str	w9, [x8]
    ffc4:	b	10028 <lzma_index_buffer_decode@@XZ_5.0+0x4bc>
    ffc8:	ldr	x8, [sp, #56]
    ffcc:	ldr	x0, [x8, #16]
    ffd0:	ldur	x1, [x29, #-24]
    ffd4:	ldr	x8, [sp, #56]
    ffd8:	ldr	x2, [x8, #40]
    ffdc:	ldr	x8, [sp, #56]
    ffe0:	ldr	x3, [x8, #48]
    ffe4:	bl	3300 <lzma_index_append@plt>
    ffe8:	str	w0, [sp, #28]
    ffec:	ldr	w9, [sp, #28]
    fff0:	cbz	w9, 10000 <lzma_index_buffer_decode@@XZ_5.0+0x494>
    fff4:	ldr	w8, [sp, #28]
    fff8:	stur	w8, [x29, #-4]
    fffc:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
   10000:	ldr	x8, [sp, #56]
   10004:	ldr	x9, [x8, #32]
   10008:	subs	x9, x9, #0x1
   1000c:	str	x9, [x8, #32]
   10010:	mov	w10, #0x5                   	// #5
   10014:	mov	w11, #0x3                   	// #3
   10018:	cmp	x9, #0x0
   1001c:	csel	w10, w10, w11, eq  // eq = none
   10020:	ldr	x8, [sp, #56]
   10024:	str	w10, [x8]
   10028:	b	10198 <lzma_index_buffer_decode@@XZ_5.0+0x62c>
   1002c:	ldr	x8, [sp, #56]
   10030:	ldr	x0, [x8, #16]
   10034:	bl	57c0 <lzma_index_checks@@XZ_5.0+0x5c>
   10038:	mov	w8, w0
   1003c:	ubfx	x8, x8, #0, #32
   10040:	ldr	x9, [sp, #56]
   10044:	str	x8, [x9, #56]
   10048:	ldr	x8, [sp, #56]
   1004c:	mov	w10, #0x6                   	// #6
   10050:	str	w10, [x8]
   10054:	ldr	x8, [sp, #56]
   10058:	ldr	x8, [x8, #56]
   1005c:	cmp	x8, #0x0
   10060:	cset	w9, ls  // ls = plast
   10064:	tbnz	w9, #0, 100a4 <lzma_index_buffer_decode@@XZ_5.0+0x538>
   10068:	ldr	x8, [sp, #56]
   1006c:	ldr	x9, [x8, #56]
   10070:	subs	x9, x9, #0x1
   10074:	str	x9, [x8, #56]
   10078:	ldur	x8, [x29, #-32]
   1007c:	ldur	x9, [x29, #-40]
   10080:	ldr	x10, [x9]
   10084:	add	x11, x10, #0x1
   10088:	str	x11, [x9]
   1008c:	ldrb	w12, [x8, x10]
   10090:	cbz	w12, 100a0 <lzma_index_buffer_decode@@XZ_5.0+0x534>
   10094:	mov	w8, #0x9                   	// #9
   10098:	stur	w8, [x29, #-4]
   1009c:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
   100a0:	b	10198 <lzma_index_buffer_decode@@XZ_5.0+0x62c>
   100a4:	ldur	x8, [x29, #-32]
   100a8:	ldr	x9, [sp, #48]
   100ac:	add	x0, x8, x9
   100b0:	ldur	x8, [x29, #-40]
   100b4:	ldr	x8, [x8]
   100b8:	ldr	x9, [sp, #48]
   100bc:	subs	x1, x8, x9
   100c0:	ldr	x8, [sp, #56]
   100c4:	ldr	w2, [x8, #64]
   100c8:	bl	31c0 <lzma_crc32@plt>
   100cc:	ldr	x8, [sp, #56]
   100d0:	str	w0, [x8, #64]
   100d4:	ldr	x8, [sp, #56]
   100d8:	mov	w10, #0x7                   	// #7
   100dc:	str	w10, [x8]
   100e0:	ldur	x8, [x29, #-40]
   100e4:	ldr	x8, [x8]
   100e8:	ldur	x9, [x29, #-48]
   100ec:	cmp	x8, x9
   100f0:	b.ne	100fc <lzma_index_buffer_decode@@XZ_5.0+0x590>  // b.any
   100f4:	stur	wzr, [x29, #-4]
   100f8:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
   100fc:	ldr	x8, [sp, #56]
   10100:	ldr	w9, [x8, #64]
   10104:	ldr	x8, [sp, #56]
   10108:	ldr	x8, [x8, #56]
   1010c:	mov	x10, #0x8                   	// #8
   10110:	mul	x8, x8, x10
   10114:	lsr	w8, w9, w8
   10118:	and	w8, w8, #0xff
   1011c:	ldur	x10, [x29, #-32]
   10120:	ldur	x11, [x29, #-40]
   10124:	ldr	x12, [x11]
   10128:	add	x13, x12, #0x1
   1012c:	str	x13, [x11]
   10130:	ldrb	w9, [x10, x12]
   10134:	cmp	w8, w9
   10138:	b.eq	10148 <lzma_index_buffer_decode@@XZ_5.0+0x5dc>  // b.none
   1013c:	mov	w8, #0x9                   	// #9
   10140:	stur	w8, [x29, #-4]
   10144:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
   10148:	ldr	x8, [sp, #56]
   1014c:	ldr	x9, [x8, #56]
   10150:	add	x9, x9, #0x1
   10154:	str	x9, [x8, #56]
   10158:	cmp	x9, #0x4
   1015c:	b.cc	100e0 <lzma_index_buffer_decode@@XZ_5.0+0x574>  // b.lo, b.ul, b.last
   10160:	ldr	x8, [sp, #56]
   10164:	ldr	x8, [x8, #16]
   10168:	ldr	x9, [sp, #56]
   1016c:	ldr	x9, [x9, #24]
   10170:	str	x8, [x9]
   10174:	ldr	x8, [sp, #56]
   10178:	mov	x9, xzr
   1017c:	str	x9, [x8, #16]
   10180:	mov	w10, #0x1                   	// #1
   10184:	stur	w10, [x29, #-4]
   10188:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
   1018c:	mov	w8, #0xb                   	// #11
   10190:	stur	w8, [x29, #-4]
   10194:	b	101d4 <lzma_index_buffer_decode@@XZ_5.0+0x668>
   10198:	b	fdd4 <lzma_index_buffer_decode@@XZ_5.0+0x268>
   1019c:	ldur	x8, [x29, #-32]
   101a0:	ldr	x9, [sp, #48]
   101a4:	add	x0, x8, x9
   101a8:	ldur	x8, [x29, #-40]
   101ac:	ldr	x8, [x8]
   101b0:	ldr	x9, [sp, #48]
   101b4:	subs	x1, x8, x9
   101b8:	ldr	x8, [sp, #56]
   101bc:	ldr	w2, [x8, #64]
   101c0:	bl	31c0 <lzma_crc32@plt>
   101c4:	ldr	x8, [sp, #56]
   101c8:	str	w0, [x8, #64]
   101cc:	ldr	w10, [sp, #44]
   101d0:	stur	w10, [x29, #-4]
   101d4:	ldur	w0, [x29, #-4]
   101d8:	ldp	x29, x30, [sp, #144]
   101dc:	add	sp, sp, #0xa0
   101e0:	ret
   101e4:	sub	sp, sp, #0x30
   101e8:	stp	x29, x30, [sp, #32]
   101ec:	add	x29, sp, #0x20
   101f0:	stur	x0, [x29, #-8]
   101f4:	str	x1, [sp, #16]
   101f8:	ldur	x8, [x29, #-8]
   101fc:	str	x8, [sp, #8]
   10200:	ldr	x8, [sp, #8]
   10204:	ldr	x0, [x8, #16]
   10208:	ldr	x1, [sp, #16]
   1020c:	bl	33e0 <lzma_index_end@plt>
   10210:	ldr	x0, [sp, #8]
   10214:	ldr	x1, [sp, #16]
   10218:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   1021c:	ldp	x29, x30, [sp, #32]
   10220:	add	sp, sp, #0x30
   10224:	ret
   10228:	sub	sp, sp, #0x40
   1022c:	stp	x29, x30, [sp, #48]
   10230:	add	x29, sp, #0x30
   10234:	mov	x8, #0x1                   	// #1
   10238:	stur	x0, [x29, #-16]
   1023c:	str	x1, [sp, #24]
   10240:	str	x2, [sp, #16]
   10244:	str	x3, [sp, #8]
   10248:	ldur	x9, [x29, #-16]
   1024c:	str	x9, [sp]
   10250:	ldr	x9, [sp]
   10254:	ldr	x1, [x9, #32]
   10258:	mov	x0, x8
   1025c:	bl	3180 <lzma_index_memusage@plt>
   10260:	ldr	x8, [sp, #24]
   10264:	str	x0, [x8]
   10268:	ldr	x8, [sp]
   1026c:	ldr	x8, [x8, #8]
   10270:	ldr	x9, [sp, #16]
   10274:	str	x8, [x9]
   10278:	ldr	x8, [sp, #8]
   1027c:	cbz	x8, 102ac <lzma_index_buffer_decode@@XZ_5.0+0x740>
   10280:	ldr	x8, [sp, #8]
   10284:	ldr	x9, [sp, #24]
   10288:	ldr	x9, [x9]
   1028c:	cmp	x8, x9
   10290:	b.cs	102a0 <lzma_index_buffer_decode@@XZ_5.0+0x734>  // b.hs, b.nlast
   10294:	mov	w8, #0x6                   	// #6
   10298:	stur	w8, [x29, #-4]
   1029c:	b	102b0 <lzma_index_buffer_decode@@XZ_5.0+0x744>
   102a0:	ldr	x8, [sp, #8]
   102a4:	ldr	x9, [sp]
   102a8:	str	x8, [x9, #8]
   102ac:	stur	wzr, [x29, #-4]
   102b0:	ldur	w0, [x29, #-4]
   102b4:	ldp	x29, x30, [sp, #48]
   102b8:	add	sp, sp, #0x40
   102bc:	ret

00000000000102c0 <lzma_index_hash_init@@XZ_5.0>:
   102c0:	sub	sp, sp, #0x30
   102c4:	stp	x29, x30, [sp, #32]
   102c8:	add	x29, sp, #0x20
   102cc:	str	x0, [sp, #16]
   102d0:	str	x1, [sp, #8]
   102d4:	ldr	x8, [sp, #16]
   102d8:	cbnz	x8, 10300 <lzma_index_hash_init@@XZ_5.0+0x40>
   102dc:	ldr	x1, [sp, #8]
   102e0:	mov	x0, #0x140                 	// #320
   102e4:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   102e8:	str	x0, [sp, #16]
   102ec:	ldr	x8, [sp, #16]
   102f0:	cbnz	x8, 10300 <lzma_index_hash_init@@XZ_5.0+0x40>
   102f4:	mov	x8, xzr
   102f8:	stur	x8, [x29, #-8]
   102fc:	b	10398 <lzma_index_hash_init@@XZ_5.0+0xd8>
   10300:	ldr	x8, [sp, #16]
   10304:	str	wzr, [x8]
   10308:	ldr	x8, [sp, #16]
   1030c:	str	xzr, [x8, #8]
   10310:	ldr	x8, [sp, #16]
   10314:	str	xzr, [x8, #16]
   10318:	ldr	x8, [sp, #16]
   1031c:	str	xzr, [x8, #24]
   10320:	ldr	x8, [sp, #16]
   10324:	str	xzr, [x8, #32]
   10328:	ldr	x8, [sp, #16]
   1032c:	str	xzr, [x8, #144]
   10330:	ldr	x8, [sp, #16]
   10334:	str	xzr, [x8, #152]
   10338:	ldr	x8, [sp, #16]
   1033c:	str	xzr, [x8, #160]
   10340:	ldr	x8, [sp, #16]
   10344:	str	xzr, [x8, #168]
   10348:	ldr	x8, [sp, #16]
   1034c:	str	xzr, [x8, #288]
   10350:	ldr	x8, [sp, #16]
   10354:	str	xzr, [x8, #296]
   10358:	ldr	x8, [sp, #16]
   1035c:	str	xzr, [x8, #304]
   10360:	ldr	x8, [sp, #16]
   10364:	str	wzr, [x8, #312]
   10368:	ldr	x8, [sp, #16]
   1036c:	add	x0, x8, #0x28
   10370:	mov	w9, #0xa                   	// #10
   10374:	mov	w1, w9
   10378:	str	w9, [sp, #4]
   1037c:	bl	11ec0 <lzma_check_size@@XZ_5.0+0x44>
   10380:	ldr	x8, [sp, #16]
   10384:	add	x0, x8, #0xb0
   10388:	ldr	w1, [sp, #4]
   1038c:	bl	11ec0 <lzma_check_size@@XZ_5.0+0x44>
   10390:	ldr	x8, [sp, #16]
   10394:	stur	x8, [x29, #-8]
   10398:	ldur	x0, [x29, #-8]
   1039c:	ldp	x29, x30, [sp, #32]
   103a0:	add	sp, sp, #0x30
   103a4:	ret

00000000000103a8 <lzma_index_hash_end@@XZ_5.0>:
   103a8:	sub	sp, sp, #0x20
   103ac:	stp	x29, x30, [sp, #16]
   103b0:	add	x29, sp, #0x10
   103b4:	str	x0, [sp, #8]
   103b8:	str	x1, [sp]
   103bc:	ldr	x0, [sp, #8]
   103c0:	ldr	x1, [sp]
   103c4:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   103c8:	ldp	x29, x30, [sp, #16]
   103cc:	add	sp, sp, #0x20
   103d0:	ret

00000000000103d4 <lzma_index_hash_size@@XZ_5.0>:
   103d4:	sub	sp, sp, #0x20
   103d8:	stp	x29, x30, [sp, #16]
   103dc:	add	x29, sp, #0x10
   103e0:	str	x0, [sp, #8]
   103e4:	ldr	x8, [sp, #8]
   103e8:	ldr	x0, [x8, #24]
   103ec:	ldr	x8, [sp, #8]
   103f0:	ldr	x1, [x8, #32]
   103f4:	bl	10404 <lzma_index_hash_size@@XZ_5.0+0x30>
   103f8:	ldp	x29, x30, [sp, #16]
   103fc:	add	sp, sp, #0x20
   10400:	ret
   10404:	sub	sp, sp, #0x20
   10408:	stp	x29, x30, [sp, #16]
   1040c:	add	x29, sp, #0x10
   10410:	str	x0, [sp, #8]
   10414:	str	x1, [sp]
   10418:	ldr	x0, [sp, #8]
   1041c:	ldr	x1, [sp]
   10420:	bl	10bac <lzma_index_hash_decode@@XZ_5.0+0x534>
   10424:	bl	10bec <lzma_index_hash_decode@@XZ_5.0+0x574>
   10428:	ldp	x29, x30, [sp, #16]
   1042c:	add	sp, sp, #0x20
   10430:	ret

0000000000010434 <lzma_index_hash_append@@XZ_5.0>:
   10434:	sub	sp, sp, #0x40
   10438:	stp	x29, x30, [sp, #48]
   1043c:	add	x29, sp, #0x30
   10440:	stur	x0, [x29, #-16]
   10444:	str	x1, [sp, #24]
   10448:	str	x2, [sp, #16]
   1044c:	ldur	x8, [x29, #-16]
   10450:	ldr	w9, [x8]
   10454:	cbnz	w9, 10484 <lzma_index_hash_append@@XZ_5.0+0x50>
   10458:	ldr	x8, [sp, #24]
   1045c:	cmp	x8, #0x5
   10460:	b.cc	10484 <lzma_index_hash_append@@XZ_5.0+0x50>  // b.lo, b.ul, b.last
   10464:	ldr	x8, [sp, #24]
   10468:	mov	x9, #0x7ffffffffffffffc    	// #9223372036854775804
   1046c:	cmp	x8, x9
   10470:	b.hi	10484 <lzma_index_hash_append@@XZ_5.0+0x50>  // b.pmore
   10474:	ldr	x8, [sp, #16]
   10478:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   1047c:	cmp	x8, x9
   10480:	b.ls	10490 <lzma_index_hash_append@@XZ_5.0+0x5c>  // b.plast
   10484:	mov	w8, #0xb                   	// #11
   10488:	stur	w8, [x29, #-4]
   1048c:	b	1053c <lzma_index_hash_append@@XZ_5.0+0x108>
   10490:	ldur	x8, [x29, #-16]
   10494:	add	x0, x8, #0x8
   10498:	ldr	x1, [sp, #24]
   1049c:	ldr	x2, [sp, #16]
   104a0:	bl	1054c <lzma_index_hash_append@@XZ_5.0+0x118>
   104a4:	str	w0, [sp, #12]
   104a8:	ldr	w9, [sp, #12]
   104ac:	cbz	w9, 104bc <lzma_index_hash_append@@XZ_5.0+0x88>
   104b0:	ldr	w8, [sp, #12]
   104b4:	stur	w8, [x29, #-4]
   104b8:	b	1053c <lzma_index_hash_append@@XZ_5.0+0x108>
   104bc:	ldur	x8, [x29, #-16]
   104c0:	ldr	x8, [x8, #8]
   104c4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   104c8:	cmp	x8, x9
   104cc:	b.hi	1052c <lzma_index_hash_append@@XZ_5.0+0xf8>  // b.pmore
   104d0:	ldur	x8, [x29, #-16]
   104d4:	ldr	x8, [x8, #16]
   104d8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   104dc:	cmp	x8, x9
   104e0:	b.hi	1052c <lzma_index_hash_append@@XZ_5.0+0xf8>  // b.pmore
   104e4:	ldur	x8, [x29, #-16]
   104e8:	ldr	x0, [x8, #24]
   104ec:	ldur	x8, [x29, #-16]
   104f0:	ldr	x1, [x8, #32]
   104f4:	bl	10404 <lzma_index_hash_size@@XZ_5.0+0x30>
   104f8:	mov	x8, #0x400000000           	// #17179869184
   104fc:	cmp	x0, x8
   10500:	b.hi	1052c <lzma_index_hash_append@@XZ_5.0+0xf8>  // b.pmore
   10504:	ldur	x8, [x29, #-16]
   10508:	ldr	x0, [x8, #8]
   1050c:	ldur	x8, [x29, #-16]
   10510:	ldr	x1, [x8, #24]
   10514:	ldur	x8, [x29, #-16]
   10518:	ldr	x2, [x8, #32]
   1051c:	bl	10630 <lzma_index_hash_append@@XZ_5.0+0x1fc>
   10520:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   10524:	cmp	x0, x8
   10528:	b.ls	10538 <lzma_index_hash_append@@XZ_5.0+0x104>  // b.plast
   1052c:	mov	w8, #0x9                   	// #9
   10530:	stur	w8, [x29, #-4]
   10534:	b	1053c <lzma_index_hash_append@@XZ_5.0+0x108>
   10538:	stur	wzr, [x29, #-4]
   1053c:	ldur	w0, [x29, #-4]
   10540:	ldp	x29, x30, [sp, #48]
   10544:	add	sp, sp, #0x40
   10548:	ret
   1054c:	sub	sp, sp, #0x60
   10550:	stp	x29, x30, [sp, #80]
   10554:	add	x29, sp, #0x50
   10558:	mov	w8, #0xa                   	// #10
   1055c:	mov	x3, #0x10                  	// #16
   10560:	mov	w9, wzr
   10564:	add	x10, sp, #0x28
   10568:	stur	x0, [x29, #-8]
   1056c:	stur	x1, [x29, #-16]
   10570:	stur	x2, [x29, #-24]
   10574:	ldur	x0, [x29, #-16]
   10578:	str	w8, [sp, #36]
   1057c:	str	x3, [sp, #24]
   10580:	str	w9, [sp, #20]
   10584:	str	x10, [sp, #8]
   10588:	bl	10bec <lzma_index_hash_decode@@XZ_5.0+0x574>
   1058c:	ldur	x10, [x29, #-8]
   10590:	ldr	x11, [x10]
   10594:	add	x11, x11, x0
   10598:	str	x11, [x10]
   1059c:	ldur	x10, [x29, #-24]
   105a0:	ldur	x11, [x29, #-8]
   105a4:	ldr	x12, [x11, #8]
   105a8:	add	x10, x12, x10
   105ac:	str	x10, [x11, #8]
   105b0:	ldur	x0, [x29, #-16]
   105b4:	bl	3480 <lzma_vli_size@plt>
   105b8:	ldur	x10, [x29, #-24]
   105bc:	str	w0, [sp, #4]
   105c0:	mov	x0, x10
   105c4:	bl	3480 <lzma_vli_size@plt>
   105c8:	ldr	w8, [sp, #4]
   105cc:	add	w9, w8, w0
   105d0:	mov	w10, w9
   105d4:	ubfx	x10, x10, #0, #32
   105d8:	ldur	x11, [x29, #-8]
   105dc:	ldr	x12, [x11, #24]
   105e0:	add	x10, x12, x10
   105e4:	str	x10, [x11, #24]
   105e8:	ldur	x10, [x29, #-8]
   105ec:	ldr	x11, [x10, #16]
   105f0:	add	x11, x11, #0x1
   105f4:	str	x11, [x10, #16]
   105f8:	ldur	x10, [x29, #-16]
   105fc:	str	x10, [sp, #40]
   10600:	ldur	x10, [x29, #-24]
   10604:	str	x10, [sp, #48]
   10608:	ldur	x10, [x29, #-8]
   1060c:	add	x0, x10, #0x20
   10610:	ldr	w1, [sp, #36]
   10614:	ldr	x2, [sp, #8]
   10618:	ldr	x3, [sp, #24]
   1061c:	bl	11f3c <lzma_check_size@@XZ_5.0+0xc0>
   10620:	ldr	w0, [sp, #20]
   10624:	ldp	x29, x30, [sp, #80]
   10628:	add	sp, sp, #0x60
   1062c:	ret
   10630:	sub	sp, sp, #0x30
   10634:	stp	x29, x30, [sp, #32]
   10638:	add	x29, sp, #0x20
   1063c:	stur	x0, [x29, #-8]
   10640:	str	x1, [sp, #16]
   10644:	str	x2, [sp, #8]
   10648:	ldur	x8, [x29, #-8]
   1064c:	add	x8, x8, #0xc
   10650:	ldr	x0, [sp, #16]
   10654:	ldr	x1, [sp, #8]
   10658:	str	x8, [sp]
   1065c:	bl	10404 <lzma_index_hash_size@@XZ_5.0+0x30>
   10660:	ldr	x8, [sp]
   10664:	add	x9, x8, x0
   10668:	add	x0, x9, #0xc
   1066c:	ldp	x29, x30, [sp, #32]
   10670:	add	sp, sp, #0x30
   10674:	ret

0000000000010678 <lzma_index_hash_decode@@XZ_5.0>:
   10678:	sub	sp, sp, #0x80
   1067c:	stp	x29, x30, [sp, #112]
   10680:	add	x29, sp, #0x70
   10684:	stur	x0, [x29, #-16]
   10688:	stur	x1, [x29, #-24]
   1068c:	stur	x2, [x29, #-32]
   10690:	stur	x3, [x29, #-40]
   10694:	ldur	x8, [x29, #-32]
   10698:	ldr	x8, [x8]
   1069c:	ldur	x9, [x29, #-40]
   106a0:	cmp	x8, x9
   106a4:	b.cc	106b4 <lzma_index_hash_decode@@XZ_5.0+0x3c>  // b.lo, b.ul, b.last
   106a8:	mov	w8, #0xa                   	// #10
   106ac:	stur	w8, [x29, #-4]
   106b0:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   106b4:	ldur	x8, [x29, #-32]
   106b8:	ldr	x8, [x8]
   106bc:	stur	x8, [x29, #-48]
   106c0:	stur	wzr, [x29, #-52]
   106c4:	ldur	x8, [x29, #-32]
   106c8:	ldr	x8, [x8]
   106cc:	ldur	x9, [x29, #-40]
   106d0:	cmp	x8, x9
   106d4:	b.cs	10b64 <lzma_index_hash_decode@@XZ_5.0+0x4ec>  // b.hs, b.nlast
   106d8:	ldur	x8, [x29, #-16]
   106dc:	ldr	w9, [x8]
   106e0:	subs	w9, w9, #0x0
   106e4:	mov	w8, w9
   106e8:	ubfx	x8, x8, #0, #32
   106ec:	cmp	x8, #0x6
   106f0:	str	x8, [sp, #32]
   106f4:	b.hi	10b54 <lzma_index_hash_decode@@XZ_5.0+0x4dc>  // b.pmore
   106f8:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   106fc:	add	x8, x8, #0xa8c
   10700:	ldr	x11, [sp, #32]
   10704:	ldrsw	x10, [x8, x11, lsl #2]
   10708:	add	x9, x8, x10
   1070c:	br	x9
   10710:	ldur	x8, [x29, #-24]
   10714:	ldur	x9, [x29, #-32]
   10718:	ldr	x10, [x9]
   1071c:	add	x11, x10, #0x1
   10720:	str	x11, [x9]
   10724:	ldrb	w12, [x8, x10]
   10728:	cbz	w12, 10738 <lzma_index_hash_decode@@XZ_5.0+0xc0>
   1072c:	mov	w8, #0x9                   	// #9
   10730:	stur	w8, [x29, #-4]
   10734:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10738:	ldur	x8, [x29, #-16]
   1073c:	mov	w9, #0x1                   	// #1
   10740:	str	w9, [x8]
   10744:	b	10b60 <lzma_index_hash_decode@@XZ_5.0+0x4e8>
   10748:	ldur	x8, [x29, #-16]
   1074c:	add	x0, x8, #0x118
   10750:	ldur	x8, [x29, #-16]
   10754:	add	x1, x8, #0x130
   10758:	ldur	x2, [x29, #-24]
   1075c:	ldur	x3, [x29, #-32]
   10760:	ldur	x4, [x29, #-40]
   10764:	bl	33c0 <lzma_vli_decode@plt>
   10768:	stur	w0, [x29, #-52]
   1076c:	ldur	w9, [x29, #-52]
   10770:	cmp	w9, #0x1
   10774:	b.eq	1077c <lzma_index_hash_decode@@XZ_5.0+0x104>  // b.none
   10778:	b	10b64 <lzma_index_hash_decode@@XZ_5.0+0x4ec>
   1077c:	ldur	x8, [x29, #-16]
   10780:	ldr	x8, [x8, #280]
   10784:	ldur	x9, [x29, #-16]
   10788:	ldr	x9, [x9, #24]
   1078c:	cmp	x8, x9
   10790:	b.eq	107a0 <lzma_index_hash_decode@@XZ_5.0+0x128>  // b.none
   10794:	mov	w8, #0x9                   	// #9
   10798:	stur	w8, [x29, #-4]
   1079c:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   107a0:	stur	wzr, [x29, #-52]
   107a4:	ldur	x8, [x29, #-16]
   107a8:	str	xzr, [x8, #304]
   107ac:	ldur	x8, [x29, #-16]
   107b0:	ldr	x8, [x8, #280]
   107b4:	mov	w9, #0x4                   	// #4
   107b8:	mov	w10, #0x2                   	// #2
   107bc:	cmp	x8, #0x0
   107c0:	csel	w9, w9, w10, eq  // eq = none
   107c4:	ldur	x8, [x29, #-16]
   107c8:	str	w9, [x8]
   107cc:	b	10b60 <lzma_index_hash_decode@@XZ_5.0+0x4e8>
   107d0:	ldur	x8, [x29, #-16]
   107d4:	ldr	w9, [x8]
   107d8:	cmp	w9, #0x2
   107dc:	b.ne	107f0 <lzma_index_hash_decode@@XZ_5.0+0x178>  // b.any
   107e0:	ldur	x8, [x29, #-16]
   107e4:	add	x8, x8, #0x120
   107e8:	str	x8, [sp, #24]
   107ec:	b	107fc <lzma_index_hash_decode@@XZ_5.0+0x184>
   107f0:	ldur	x8, [x29, #-16]
   107f4:	add	x8, x8, #0x128
   107f8:	str	x8, [sp, #24]
   107fc:	ldr	x8, [sp, #24]
   10800:	str	x8, [sp, #48]
   10804:	ldr	x0, [sp, #48]
   10808:	ldur	x8, [x29, #-16]
   1080c:	add	x1, x8, #0x130
   10810:	ldur	x2, [x29, #-24]
   10814:	ldur	x3, [x29, #-32]
   10818:	ldur	x4, [x29, #-40]
   1081c:	bl	33c0 <lzma_vli_decode@plt>
   10820:	stur	w0, [x29, #-52]
   10824:	ldur	w9, [x29, #-52]
   10828:	cmp	w9, #0x1
   1082c:	b.eq	10834 <lzma_index_hash_decode@@XZ_5.0+0x1bc>  // b.none
   10830:	b	10b64 <lzma_index_hash_decode@@XZ_5.0+0x4ec>
   10834:	stur	wzr, [x29, #-52]
   10838:	ldur	x8, [x29, #-16]
   1083c:	str	xzr, [x8, #304]
   10840:	ldur	x8, [x29, #-16]
   10844:	ldr	w9, [x8]
   10848:	cmp	w9, #0x2
   1084c:	b.ne	10890 <lzma_index_hash_decode@@XZ_5.0+0x218>  // b.any
   10850:	ldur	x8, [x29, #-16]
   10854:	ldr	x8, [x8, #288]
   10858:	cmp	x8, #0x5
   1085c:	b.cc	10874 <lzma_index_hash_decode@@XZ_5.0+0x1fc>  // b.lo, b.ul, b.last
   10860:	ldur	x8, [x29, #-16]
   10864:	ldr	x8, [x8, #288]
   10868:	mov	x9, #0x7ffffffffffffffc    	// #9223372036854775804
   1086c:	cmp	x8, x9
   10870:	b.ls	10880 <lzma_index_hash_decode@@XZ_5.0+0x208>  // b.plast
   10874:	mov	w8, #0x9                   	// #9
   10878:	stur	w8, [x29, #-4]
   1087c:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10880:	ldur	x8, [x29, #-16]
   10884:	mov	w9, #0x3                   	// #3
   10888:	str	w9, [x8]
   1088c:	b	10940 <lzma_index_hash_decode@@XZ_5.0+0x2c8>
   10890:	ldur	x8, [x29, #-16]
   10894:	add	x0, x8, #0x90
   10898:	ldur	x8, [x29, #-16]
   1089c:	ldr	x1, [x8, #288]
   108a0:	ldur	x8, [x29, #-16]
   108a4:	ldr	x2, [x8, #296]
   108a8:	bl	1054c <lzma_index_hash_append@@XZ_5.0+0x118>
   108ac:	str	w0, [sp, #44]
   108b0:	ldr	w9, [sp, #44]
   108b4:	cbz	w9, 108c4 <lzma_index_hash_decode@@XZ_5.0+0x24c>
   108b8:	ldr	w8, [sp, #44]
   108bc:	stur	w8, [x29, #-4]
   108c0:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   108c4:	ldur	x8, [x29, #-16]
   108c8:	ldr	x8, [x8, #8]
   108cc:	ldur	x9, [x29, #-16]
   108d0:	ldr	x9, [x9, #144]
   108d4:	cmp	x8, x9
   108d8:	b.cc	1090c <lzma_index_hash_decode@@XZ_5.0+0x294>  // b.lo, b.ul, b.last
   108dc:	ldur	x8, [x29, #-16]
   108e0:	ldr	x8, [x8, #16]
   108e4:	ldur	x9, [x29, #-16]
   108e8:	ldr	x9, [x9, #152]
   108ec:	cmp	x8, x9
   108f0:	b.cc	1090c <lzma_index_hash_decode@@XZ_5.0+0x294>  // b.lo, b.ul, b.last
   108f4:	ldur	x8, [x29, #-16]
   108f8:	ldr	x8, [x8, #32]
   108fc:	ldur	x9, [x29, #-16]
   10900:	ldr	x9, [x9, #168]
   10904:	cmp	x8, x9
   10908:	b.cs	10918 <lzma_index_hash_decode@@XZ_5.0+0x2a0>  // b.hs, b.nlast
   1090c:	mov	w8, #0x9                   	// #9
   10910:	stur	w8, [x29, #-4]
   10914:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10918:	ldur	x8, [x29, #-16]
   1091c:	ldr	x9, [x8, #280]
   10920:	subs	x9, x9, #0x1
   10924:	str	x9, [x8, #280]
   10928:	mov	w10, #0x4                   	// #4
   1092c:	mov	w11, #0x2                   	// #2
   10930:	cmp	x9, #0x0
   10934:	csel	w10, w10, w11, eq  // eq = none
   10938:	ldur	x8, [x29, #-16]
   1093c:	str	w10, [x8]
   10940:	b	10b60 <lzma_index_hash_decode@@XZ_5.0+0x4e8>
   10944:	ldur	x8, [x29, #-16]
   10948:	ldr	x0, [x8, #160]
   1094c:	ldur	x8, [x29, #-16]
   10950:	ldr	x1, [x8, #168]
   10954:	bl	10bac <lzma_index_hash_decode@@XZ_5.0+0x534>
   10958:	mov	x8, #0x4                   	// #4
   1095c:	subs	x8, x8, x0
   10960:	and	x8, x8, #0x3
   10964:	ldur	x9, [x29, #-16]
   10968:	str	x8, [x9, #304]
   1096c:	ldur	x8, [x29, #-16]
   10970:	mov	w10, #0x5                   	// #5
   10974:	str	w10, [x8]
   10978:	ldur	x8, [x29, #-16]
   1097c:	ldr	x8, [x8, #304]
   10980:	cmp	x8, #0x0
   10984:	cset	w9, ls  // ls = plast
   10988:	tbnz	w9, #0, 109c8 <lzma_index_hash_decode@@XZ_5.0+0x350>
   1098c:	ldur	x8, [x29, #-16]
   10990:	ldr	x9, [x8, #304]
   10994:	subs	x9, x9, #0x1
   10998:	str	x9, [x8, #304]
   1099c:	ldur	x8, [x29, #-24]
   109a0:	ldur	x9, [x29, #-32]
   109a4:	ldr	x10, [x9]
   109a8:	add	x11, x10, #0x1
   109ac:	str	x11, [x9]
   109b0:	ldrb	w12, [x8, x10]
   109b4:	cbz	w12, 109c4 <lzma_index_hash_decode@@XZ_5.0+0x34c>
   109b8:	mov	w8, #0x9                   	// #9
   109bc:	stur	w8, [x29, #-4]
   109c0:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   109c4:	b	10b60 <lzma_index_hash_decode@@XZ_5.0+0x4e8>
   109c8:	ldur	x8, [x29, #-16]
   109cc:	ldr	x8, [x8, #8]
   109d0:	ldur	x9, [x29, #-16]
   109d4:	ldr	x9, [x9, #144]
   109d8:	cmp	x8, x9
   109dc:	b.ne	10a10 <lzma_index_hash_decode@@XZ_5.0+0x398>  // b.any
   109e0:	ldur	x8, [x29, #-16]
   109e4:	ldr	x8, [x8, #16]
   109e8:	ldur	x9, [x29, #-16]
   109ec:	ldr	x9, [x9, #152]
   109f0:	cmp	x8, x9
   109f4:	b.ne	10a10 <lzma_index_hash_decode@@XZ_5.0+0x398>  // b.any
   109f8:	ldur	x8, [x29, #-16]
   109fc:	ldr	x8, [x8, #32]
   10a00:	ldur	x9, [x29, #-16]
   10a04:	ldr	x9, [x9, #168]
   10a08:	cmp	x8, x9
   10a0c:	b.eq	10a1c <lzma_index_hash_decode@@XZ_5.0+0x3a4>  // b.none
   10a10:	mov	w8, #0x9                   	// #9
   10a14:	stur	w8, [x29, #-4]
   10a18:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10a1c:	ldur	x8, [x29, #-16]
   10a20:	add	x0, x8, #0x28
   10a24:	mov	w9, #0xa                   	// #10
   10a28:	mov	w1, w9
   10a2c:	str	w9, [sp, #20]
   10a30:	bl	11fec <lzma_check_size@@XZ_5.0+0x170>
   10a34:	ldur	x8, [x29, #-16]
   10a38:	add	x0, x8, #0xb0
   10a3c:	ldr	w1, [sp, #20]
   10a40:	bl	11fec <lzma_check_size@@XZ_5.0+0x170>
   10a44:	ldur	x8, [x29, #-16]
   10a48:	add	x0, x8, #0x28
   10a4c:	ldur	x8, [x29, #-16]
   10a50:	add	x1, x8, #0xb0
   10a54:	ldr	w9, [sp, #20]
   10a58:	str	x0, [sp, #8]
   10a5c:	mov	w0, w9
   10a60:	str	x1, [sp]
   10a64:	bl	3270 <lzma_check_size@plt>
   10a68:	mov	w8, w0
   10a6c:	ubfx	x2, x8, #0, #32
   10a70:	ldr	x0, [sp, #8]
   10a74:	ldr	x1, [sp]
   10a78:	bl	3330 <memcmp@plt>
   10a7c:	cbz	w0, 10a8c <lzma_index_hash_decode@@XZ_5.0+0x414>
   10a80:	mov	w8, #0x9                   	// #9
   10a84:	stur	w8, [x29, #-4]
   10a88:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10a8c:	ldur	x8, [x29, #-24]
   10a90:	ldur	x9, [x29, #-48]
   10a94:	add	x0, x8, x9
   10a98:	ldur	x8, [x29, #-32]
   10a9c:	ldr	x8, [x8]
   10aa0:	ldur	x9, [x29, #-48]
   10aa4:	subs	x1, x8, x9
   10aa8:	ldur	x8, [x29, #-16]
   10aac:	ldr	w2, [x8, #312]
   10ab0:	bl	31c0 <lzma_crc32@plt>
   10ab4:	ldur	x8, [x29, #-16]
   10ab8:	str	w0, [x8, #312]
   10abc:	ldur	x8, [x29, #-16]
   10ac0:	mov	w10, #0x6                   	// #6
   10ac4:	str	w10, [x8]
   10ac8:	ldur	x8, [x29, #-32]
   10acc:	ldr	x8, [x8]
   10ad0:	ldur	x9, [x29, #-40]
   10ad4:	cmp	x8, x9
   10ad8:	b.ne	10ae4 <lzma_index_hash_decode@@XZ_5.0+0x46c>  // b.any
   10adc:	stur	wzr, [x29, #-4]
   10ae0:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10ae4:	ldur	x8, [x29, #-16]
   10ae8:	ldr	w9, [x8, #312]
   10aec:	ldur	x8, [x29, #-16]
   10af0:	ldr	x8, [x8, #304]
   10af4:	mov	x10, #0x8                   	// #8
   10af8:	mul	x8, x8, x10
   10afc:	lsr	w8, w9, w8
   10b00:	and	w8, w8, #0xff
   10b04:	ldur	x10, [x29, #-24]
   10b08:	ldur	x11, [x29, #-32]
   10b0c:	ldr	x12, [x11]
   10b10:	add	x13, x12, #0x1
   10b14:	str	x13, [x11]
   10b18:	ldrb	w9, [x10, x12]
   10b1c:	cmp	w8, w9
   10b20:	b.eq	10b30 <lzma_index_hash_decode@@XZ_5.0+0x4b8>  // b.none
   10b24:	mov	w8, #0x9                   	// #9
   10b28:	stur	w8, [x29, #-4]
   10b2c:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10b30:	ldur	x8, [x29, #-16]
   10b34:	ldr	x9, [x8, #304]
   10b38:	add	x9, x9, #0x1
   10b3c:	str	x9, [x8, #304]
   10b40:	cmp	x9, #0x4
   10b44:	b.cc	10ac8 <lzma_index_hash_decode@@XZ_5.0+0x450>  // b.lo, b.ul, b.last
   10b48:	mov	w8, #0x1                   	// #1
   10b4c:	stur	w8, [x29, #-4]
   10b50:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10b54:	mov	w8, #0xb                   	// #11
   10b58:	stur	w8, [x29, #-4]
   10b5c:	b	10b9c <lzma_index_hash_decode@@XZ_5.0+0x524>
   10b60:	b	106c4 <lzma_index_hash_decode@@XZ_5.0+0x4c>
   10b64:	ldur	x8, [x29, #-24]
   10b68:	ldur	x9, [x29, #-48]
   10b6c:	add	x0, x8, x9
   10b70:	ldur	x8, [x29, #-32]
   10b74:	ldr	x8, [x8]
   10b78:	ldur	x9, [x29, #-48]
   10b7c:	subs	x1, x8, x9
   10b80:	ldur	x8, [x29, #-16]
   10b84:	ldr	w2, [x8, #312]
   10b88:	bl	31c0 <lzma_crc32@plt>
   10b8c:	ldur	x8, [x29, #-16]
   10b90:	str	w0, [x8, #312]
   10b94:	ldur	w10, [x29, #-52]
   10b98:	stur	w10, [x29, #-4]
   10b9c:	ldur	w0, [x29, #-4]
   10ba0:	ldp	x29, x30, [sp, #112]
   10ba4:	add	sp, sp, #0x80
   10ba8:	ret
   10bac:	sub	sp, sp, #0x20
   10bb0:	stp	x29, x30, [sp, #16]
   10bb4:	add	x29, sp, #0x10
   10bb8:	str	x0, [sp, #8]
   10bbc:	str	x1, [sp]
   10bc0:	ldr	x0, [sp, #8]
   10bc4:	bl	3480 <lzma_vli_size@plt>
   10bc8:	add	w8, w0, #0x1
   10bcc:	mov	w9, w8
   10bd0:	ubfx	x9, x9, #0, #32
   10bd4:	ldr	x10, [sp]
   10bd8:	add	x9, x9, x10
   10bdc:	add	x0, x9, #0x4
   10be0:	ldp	x29, x30, [sp, #16]
   10be4:	add	sp, sp, #0x20
   10be8:	ret
   10bec:	sub	sp, sp, #0x10
   10bf0:	str	x0, [sp, #8]
   10bf4:	ldr	x8, [sp, #8]
   10bf8:	add	x8, x8, #0x3
   10bfc:	and	x0, x8, #0xfffffffffffffffc
   10c00:	add	sp, sp, #0x10
   10c04:	ret

0000000000010c08 <lzma_stream_buffer_decode@@XZ_5.0>:
   10c08:	sub	sp, sp, #0xe0
   10c0c:	stp	x29, x30, [sp, #208]
   10c10:	add	x29, sp, #0xd0
   10c14:	ldr	x8, [x29, #16]
   10c18:	stur	x0, [x29, #-16]
   10c1c:	stur	w1, [x29, #-20]
   10c20:	stur	x2, [x29, #-32]
   10c24:	stur	x3, [x29, #-40]
   10c28:	stur	x4, [x29, #-48]
   10c2c:	stur	x5, [x29, #-56]
   10c30:	stur	x6, [x29, #-64]
   10c34:	stur	x7, [x29, #-72]
   10c38:	stur	x8, [x29, #-80]
   10c3c:	ldur	x8, [x29, #-48]
   10c40:	cbz	x8, 10cac <lzma_stream_buffer_decode@@XZ_5.0+0xa4>
   10c44:	ldur	x8, [x29, #-40]
   10c48:	cbnz	x8, 10c60 <lzma_stream_buffer_decode@@XZ_5.0+0x58>
   10c4c:	ldur	x8, [x29, #-48]
   10c50:	ldr	x8, [x8]
   10c54:	ldur	x9, [x29, #-56]
   10c58:	cmp	x8, x9
   10c5c:	b.ne	10cac <lzma_stream_buffer_decode@@XZ_5.0+0xa4>  // b.any
   10c60:	ldur	x8, [x29, #-48]
   10c64:	ldr	x8, [x8]
   10c68:	ldur	x9, [x29, #-56]
   10c6c:	cmp	x8, x9
   10c70:	b.hi	10cac <lzma_stream_buffer_decode@@XZ_5.0+0xa4>  // b.pmore
   10c74:	ldur	x8, [x29, #-72]
   10c78:	cbz	x8, 10cac <lzma_stream_buffer_decode@@XZ_5.0+0xa4>
   10c7c:	ldur	x8, [x29, #-64]
   10c80:	cbnz	x8, 10c98 <lzma_stream_buffer_decode@@XZ_5.0+0x90>
   10c84:	ldur	x8, [x29, #-72]
   10c88:	ldr	x8, [x8]
   10c8c:	ldur	x9, [x29, #-80]
   10c90:	cmp	x8, x9
   10c94:	b.ne	10cac <lzma_stream_buffer_decode@@XZ_5.0+0xa4>  // b.any
   10c98:	ldur	x8, [x29, #-72]
   10c9c:	ldr	x8, [x8]
   10ca0:	ldur	x9, [x29, #-80]
   10ca4:	cmp	x8, x9
   10ca8:	b.ls	10cb8 <lzma_stream_buffer_decode@@XZ_5.0+0xb0>  // b.plast
   10cac:	mov	w8, #0xb                   	// #11
   10cb0:	stur	w8, [x29, #-4]
   10cb4:	b	10e0c <lzma_stream_buffer_decode@@XZ_5.0+0x204>
   10cb8:	ldur	w8, [x29, #-20]
   10cbc:	and	w8, w8, #0x4
   10cc0:	cbz	w8, 10cd0 <lzma_stream_buffer_decode@@XZ_5.0+0xc8>
   10cc4:	mov	w8, #0xb                   	// #11
   10cc8:	stur	w8, [x29, #-4]
   10ccc:	b	10e0c <lzma_stream_buffer_decode@@XZ_5.0+0x204>
   10cd0:	add	x8, sp, #0x38
   10cd4:	mov	x0, x8
   10cd8:	mov	w9, wzr
   10cdc:	mov	w1, w9
   10ce0:	mov	x2, #0x48                  	// #72
   10ce4:	str	x8, [sp, #16]
   10ce8:	bl	3230 <memset@plt>
   10cec:	mov	x8, #0xffffffffffffffff    	// #-1
   10cf0:	str	x8, [sp, #64]
   10cf4:	ldur	x1, [x29, #-32]
   10cf8:	ldur	x8, [x29, #-16]
   10cfc:	ldr	x2, [x8]
   10d00:	ldur	w3, [x29, #-20]
   10d04:	ldr	x0, [sp, #16]
   10d08:	bl	10e1c <lzma_stream_buffer_decode@@XZ_5.0+0x214>
   10d0c:	str	w0, [sp, #52]
   10d10:	ldr	w9, [sp, #52]
   10d14:	cbnz	w9, 10df8 <lzma_stream_buffer_decode@@XZ_5.0+0x1f0>
   10d18:	ldur	x8, [x29, #-48]
   10d1c:	ldr	x8, [x8]
   10d20:	str	x8, [sp, #40]
   10d24:	ldur	x8, [x29, #-72]
   10d28:	ldr	x8, [x8]
   10d2c:	str	x8, [sp, #32]
   10d30:	add	x8, sp, #0x38
   10d34:	ldr	x8, [x8, #24]
   10d38:	ldr	x0, [sp, #56]
   10d3c:	ldur	x1, [x29, #-32]
   10d40:	ldur	x2, [x29, #-40]
   10d44:	ldur	x3, [x29, #-48]
   10d48:	ldur	x4, [x29, #-56]
   10d4c:	ldur	x5, [x29, #-64]
   10d50:	ldur	x6, [x29, #-72]
   10d54:	ldur	x7, [x29, #-80]
   10d58:	mov	x9, sp
   10d5c:	mov	w10, #0x3                   	// #3
   10d60:	str	w10, [x9]
   10d64:	blr	x8
   10d68:	str	w0, [sp, #52]
   10d6c:	ldr	w10, [sp, #52]
   10d70:	cmp	w10, #0x1
   10d74:	b.ne	10d80 <lzma_stream_buffer_decode@@XZ_5.0+0x178>  // b.any
   10d78:	str	wzr, [sp, #52]
   10d7c:	b	10df8 <lzma_stream_buffer_decode@@XZ_5.0+0x1f0>
   10d80:	ldr	x8, [sp, #40]
   10d84:	ldur	x9, [x29, #-48]
   10d88:	str	x8, [x9]
   10d8c:	ldr	x8, [sp, #32]
   10d90:	ldur	x9, [x29, #-72]
   10d94:	str	x8, [x9]
   10d98:	ldr	w10, [sp, #52]
   10d9c:	cbnz	w10, 10dcc <lzma_stream_buffer_decode@@XZ_5.0+0x1c4>
   10da0:	ldur	x8, [x29, #-48]
   10da4:	ldr	x8, [x8]
   10da8:	ldur	x9, [x29, #-56]
   10dac:	cmp	x8, x9
   10db0:	b.ne	10dc0 <lzma_stream_buffer_decode@@XZ_5.0+0x1b8>  // b.any
   10db4:	mov	w8, #0x9                   	// #9
   10db8:	str	w8, [sp, #52]
   10dbc:	b	10dc8 <lzma_stream_buffer_decode@@XZ_5.0+0x1c0>
   10dc0:	mov	w8, #0xa                   	// #10
   10dc4:	str	w8, [sp, #52]
   10dc8:	b	10df8 <lzma_stream_buffer_decode@@XZ_5.0+0x1f0>
   10dcc:	ldr	w8, [sp, #52]
   10dd0:	cmp	w8, #0x6
   10dd4:	b.ne	10df8 <lzma_stream_buffer_decode@@XZ_5.0+0x1f0>  // b.any
   10dd8:	add	x8, sp, #0x38
   10ddc:	ldr	x8, [x8, #56]
   10de0:	ldr	x0, [sp, #56]
   10de4:	ldur	x1, [x29, #-16]
   10de8:	add	x2, sp, #0x18
   10dec:	mov	x9, xzr
   10df0:	mov	x3, x9
   10df4:	blr	x8
   10df8:	ldur	x1, [x29, #-32]
   10dfc:	add	x0, sp, #0x38
   10e00:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
   10e04:	ldr	w8, [sp, #52]
   10e08:	stur	w8, [x29, #-4]
   10e0c:	ldur	w0, [x29, #-4]
   10e10:	ldp	x29, x30, [sp, #208]
   10e14:	add	sp, sp, #0xe0
   10e18:	ret
   10e1c:	sub	sp, sp, #0xc0
   10e20:	stp	x29, x30, [sp, #176]
   10e24:	add	x29, sp, #0xb0
   10e28:	adrp	x8, 10000 <lzma_index_buffer_decode@@XZ_5.0+0x494>
   10e2c:	add	x8, x8, #0xe1c
   10e30:	stur	x0, [x29, #-16]
   10e34:	stur	x1, [x29, #-24]
   10e38:	stur	x2, [x29, #-32]
   10e3c:	stur	w3, [x29, #-36]
   10e40:	str	x8, [sp, #48]
   10e44:	ldur	x8, [x29, #-16]
   10e48:	ldr	x8, [x8, #16]
   10e4c:	ldr	x9, [sp, #48]
   10e50:	cmp	x9, x8
   10e54:	b.eq	10e64 <lzma_stream_buffer_decode@@XZ_5.0+0x25c>  // b.none
   10e58:	ldur	x0, [x29, #-16]
   10e5c:	ldur	x1, [x29, #-24]
   10e60:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
   10e64:	ldur	x8, [x29, #-16]
   10e68:	ldr	x9, [sp, #48]
   10e6c:	str	x9, [x8, #16]
   10e70:	ldur	w8, [x29, #-36]
   10e74:	and	w8, w8, #0xffffffe0
   10e78:	cbz	w8, 10e88 <lzma_stream_buffer_decode@@XZ_5.0+0x280>
   10e7c:	mov	w8, #0x8                   	// #8
   10e80:	stur	w8, [x29, #-4]
   10e84:	b	11040 <lzma_stream_buffer_decode@@XZ_5.0+0x438>
   10e88:	ldur	x8, [x29, #-16]
   10e8c:	ldr	x8, [x8]
   10e90:	stur	x8, [x29, #-48]
   10e94:	ldur	x8, [x29, #-48]
   10e98:	cbnz	x8, 10f6c <lzma_stream_buffer_decode@@XZ_5.0+0x364>
   10e9c:	ldur	x1, [x29, #-24]
   10ea0:	mov	x0, #0x580                 	// #1408
   10ea4:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   10ea8:	stur	x0, [x29, #-48]
   10eac:	ldur	x8, [x29, #-48]
   10eb0:	cbnz	x8, 10ec0 <lzma_stream_buffer_decode@@XZ_5.0+0x2b8>
   10eb4:	mov	w8, #0x5                   	// #5
   10eb8:	stur	w8, [x29, #-4]
   10ebc:	b	11040 <lzma_stream_buffer_decode@@XZ_5.0+0x438>
   10ec0:	ldur	x8, [x29, #-48]
   10ec4:	ldur	x9, [x29, #-16]
   10ec8:	str	x8, [x9]
   10ecc:	ldur	x8, [x29, #-16]
   10ed0:	adrp	x9, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x3f8>
   10ed4:	add	x9, x9, #0x50
   10ed8:	str	x9, [x8, #24]
   10edc:	ldur	x8, [x29, #-16]
   10ee0:	adrp	x9, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x3f8>
   10ee4:	add	x9, x9, #0x7d0
   10ee8:	str	x9, [x8, #32]
   10eec:	ldur	x8, [x29, #-16]
   10ef0:	adrp	x9, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x3f8>
   10ef4:	add	x9, x9, #0x824
   10ef8:	str	x9, [x8, #48]
   10efc:	ldur	x8, [x29, #-16]
   10f00:	adrp	x9, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x3f8>
   10f04:	add	x9, x9, #0x844
   10f08:	str	x9, [x8, #56]
   10f0c:	ldur	x8, [x29, #-48]
   10f10:	add	x0, x8, #0x8
   10f14:	add	x8, sp, #0x38
   10f18:	str	x0, [sp, #40]
   10f1c:	mov	x0, x8
   10f20:	mov	w10, wzr
   10f24:	mov	w1, w10
   10f28:	mov	x9, #0x48                  	// #72
   10f2c:	mov	x2, x9
   10f30:	str	x8, [sp, #32]
   10f34:	str	x9, [sp, #24]
   10f38:	bl	3230 <memset@plt>
   10f3c:	mov	x8, #0xffffffffffffffff    	// #-1
   10f40:	str	x8, [sp, #64]
   10f44:	mov	x8, xzr
   10f48:	str	xzr, [sp, #72]
   10f4c:	ldr	x0, [sp, #40]
   10f50:	ldr	x1, [sp, #32]
   10f54:	ldr	x2, [sp, #24]
   10f58:	str	x8, [sp, #16]
   10f5c:	bl	3090 <memcpy@plt>
   10f60:	ldur	x8, [x29, #-48]
   10f64:	ldr	x9, [sp, #16]
   10f68:	str	x9, [x8, #344]
   10f6c:	ldur	x8, [x29, #-32]
   10f70:	mov	x9, #0x1                   	// #1
   10f74:	cmp	x9, x8
   10f78:	b.ls	10f88 <lzma_stream_buffer_decode@@XZ_5.0+0x380>  // b.plast
   10f7c:	mov	x8, #0x1                   	// #1
   10f80:	str	x8, [sp, #8]
   10f84:	b	10f90 <lzma_stream_buffer_decode@@XZ_5.0+0x388>
   10f88:	ldur	x8, [x29, #-32]
   10f8c:	str	x8, [sp, #8]
   10f90:	ldr	x8, [sp, #8]
   10f94:	ldur	x9, [x29, #-48]
   10f98:	str	x8, [x9, #352]
   10f9c:	ldur	x8, [x29, #-48]
   10fa0:	mov	x9, #0x8000                	// #32768
   10fa4:	str	x9, [x8, #360]
   10fa8:	ldur	w10, [x29, #-36]
   10fac:	tst	w10, #0x1
   10fb0:	cset	w10, ne  // ne = any
   10fb4:	ldur	x8, [x29, #-48]
   10fb8:	mov	w11, #0x1                   	// #1
   10fbc:	and	w10, w10, w11
   10fc0:	strb	w10, [x8, #368]
   10fc4:	ldur	w10, [x29, #-36]
   10fc8:	tst	w10, #0x2
   10fcc:	cset	w10, ne  // ne = any
   10fd0:	ldur	x8, [x29, #-48]
   10fd4:	and	w10, w10, w11
   10fd8:	strb	w10, [x8, #369]
   10fdc:	ldur	w10, [x29, #-36]
   10fe0:	tst	w10, #0x4
   10fe4:	cset	w10, ne  // ne = any
   10fe8:	ldur	x8, [x29, #-48]
   10fec:	and	w10, w10, w11
   10ff0:	strb	w10, [x8, #370]
   10ff4:	ldur	w10, [x29, #-36]
   10ff8:	tst	w10, #0x10
   10ffc:	cset	w10, ne  // ne = any
   11000:	ldur	x8, [x29, #-48]
   11004:	and	w10, w10, w11
   11008:	strb	w10, [x8, #371]
   1100c:	ldur	w10, [x29, #-36]
   11010:	tst	w10, #0x8
   11014:	cset	w10, ne  // ne = any
   11018:	ldur	x8, [x29, #-48]
   1101c:	and	w10, w10, #0x1
   11020:	strb	w10, [x8, #372]
   11024:	ldur	x8, [x29, #-48]
   11028:	mov	w10, #0x1                   	// #1
   1102c:	strb	w10, [x8, #373]
   11030:	ldur	x0, [x29, #-48]
   11034:	ldur	x1, [x29, #-24]
   11038:	bl	118c4 <lzma_stream_buffer_decode@@XZ_5.0+0xcbc>
   1103c:	stur	w0, [x29, #-4]
   11040:	ldur	w0, [x29, #-4]
   11044:	ldp	x29, x30, [sp, #176]
   11048:	add	sp, sp, #0xc0
   1104c:	ret
   11050:	sub	sp, sp, #0x180
   11054:	stp	x29, x30, [sp, #352]
   11058:	str	x28, [sp, #368]
   1105c:	add	x29, sp, #0x160
   11060:	sub	x8, x29, #0x58
   11064:	ldr	w9, [x29, #32]
   11068:	str	x0, [x8, #72]
   1106c:	str	x1, [x8, #64]
   11070:	str	x2, [x8, #56]
   11074:	str	x3, [x8, #48]
   11078:	str	x4, [x8, #40]
   1107c:	str	x5, [x8, #32]
   11080:	str	x6, [x8, #24]
   11084:	str	x7, [x8, #16]
   11088:	stur	w9, [x29, #-76]
   1108c:	ldr	x10, [x8, #72]
   11090:	str	x10, [x8]
   11094:	str	x8, [sp, #48]
   11098:	ldr	x8, [sp, #48]
   1109c:	ldr	x9, [x8]
   110a0:	ldr	w10, [x9]
   110a4:	subs	w10, w10, #0x0
   110a8:	mov	w9, w10
   110ac:	ubfx	x9, x9, #0, #32
   110b0:	cmp	x9, #0x5
   110b4:	str	x9, [sp, #40]
   110b8:	b.hi	117ac <lzma_stream_buffer_decode@@XZ_5.0+0xba4>  // b.pmore
   110bc:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   110c0:	add	x8, x8, #0xaa8
   110c4:	ldr	x11, [sp, #40]
   110c8:	ldrsw	x10, [x8, x11, lsl #2]
   110cc:	add	x9, x8, x10
   110d0:	br	x9
   110d4:	ldr	x8, [sp, #48]
   110d8:	ldr	x0, [x8, #56]
   110dc:	ldr	x1, [x8, #48]
   110e0:	ldr	x2, [x8, #40]
   110e4:	ldr	x9, [x8]
   110e8:	add	x3, x9, #0x180
   110ec:	ldr	x9, [x8]
   110f0:	add	x4, x9, #0x178
   110f4:	mov	x5, #0xc                   	// #12
   110f8:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   110fc:	ldr	x8, [sp, #48]
   11100:	ldr	x9, [x8]
   11104:	ldr	x9, [x9, #376]
   11108:	cmp	x9, #0xc
   1110c:	b.cs	11118 <lzma_stream_buffer_decode@@XZ_5.0+0x510>  // b.hs, b.nlast
   11110:	stur	wzr, [x29, #-4]
   11114:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11118:	ldr	x8, [sp, #48]
   1111c:	ldr	x9, [x8]
   11120:	str	xzr, [x9, #376]
   11124:	ldr	x9, [x8]
   11128:	add	x0, x9, #0x120
   1112c:	ldr	x9, [x8]
   11130:	add	x1, x9, #0x180
   11134:	bl	34f0 <lzma_stream_header_decode@plt>
   11138:	stur	w0, [x29, #-92]
   1113c:	ldur	w10, [x29, #-92]
   11140:	cbz	w10, 11180 <lzma_stream_buffer_decode@@XZ_5.0+0x578>
   11144:	ldur	w8, [x29, #-92]
   11148:	cmp	w8, #0x7
   1114c:	b.ne	1116c <lzma_stream_buffer_decode@@XZ_5.0+0x564>  // b.any
   11150:	ldr	x8, [sp, #48]
   11154:	ldr	x9, [x8]
   11158:	ldrb	w10, [x9, #373]
   1115c:	tbnz	w10, #0, 1116c <lzma_stream_buffer_decode@@XZ_5.0+0x564>
   11160:	mov	w8, #0x9                   	// #9
   11164:	str	w8, [sp, #36]
   11168:	b	11174 <lzma_stream_buffer_decode@@XZ_5.0+0x56c>
   1116c:	ldur	w8, [x29, #-92]
   11170:	str	w8, [sp, #36]
   11174:	ldr	w8, [sp, #36]
   11178:	stur	w8, [x29, #-4]
   1117c:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11180:	ldr	x8, [sp, #48]
   11184:	ldr	x9, [x8]
   11188:	mov	w10, #0x0                   	// #0
   1118c:	strb	w10, [x9, #373]
   11190:	ldr	x9, [x8]
   11194:	ldr	w10, [x9, #304]
   11198:	ldr	x9, [x8]
   1119c:	str	w10, [x9, #88]
   111a0:	ldr	x9, [x8]
   111a4:	mov	w10, #0x1                   	// #1
   111a8:	str	w10, [x9]
   111ac:	ldr	x9, [x8]
   111b0:	ldrb	w10, [x9, #368]
   111b4:	tbnz	w10, #0, 111bc <lzma_stream_buffer_decode@@XZ_5.0+0x5b4>
   111b8:	b	111d8 <lzma_stream_buffer_decode@@XZ_5.0+0x5d0>
   111bc:	ldr	x8, [sp, #48]
   111c0:	ldr	x9, [x8]
   111c4:	ldr	w10, [x9, #304]
   111c8:	cbnz	w10, 111d8 <lzma_stream_buffer_decode@@XZ_5.0+0x5d0>
   111cc:	mov	w8, #0x2                   	// #2
   111d0:	stur	w8, [x29, #-4]
   111d4:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   111d8:	ldr	x8, [sp, #48]
   111dc:	ldr	x9, [x8]
   111e0:	ldrb	w10, [x9, #369]
   111e4:	tbnz	w10, #0, 111ec <lzma_stream_buffer_decode@@XZ_5.0+0x5e4>
   111e8:	b	11210 <lzma_stream_buffer_decode@@XZ_5.0+0x608>
   111ec:	ldr	x8, [sp, #48]
   111f0:	ldr	x9, [x8]
   111f4:	ldr	w0, [x9, #304]
   111f8:	bl	30e0 <lzma_check_is_supported@plt>
   111fc:	and	w10, w0, #0xff
   11200:	cbnz	w10, 11210 <lzma_stream_buffer_decode@@XZ_5.0+0x608>
   11204:	mov	w8, #0x3                   	// #3
   11208:	stur	w8, [x29, #-4]
   1120c:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11210:	ldr	x8, [sp, #48]
   11214:	ldr	x9, [x8]
   11218:	ldrb	w10, [x9, #370]
   1121c:	tbnz	w10, #0, 11224 <lzma_stream_buffer_decode@@XZ_5.0+0x61c>
   11220:	b	11230 <lzma_stream_buffer_decode@@XZ_5.0+0x628>
   11224:	mov	w8, #0x4                   	// #4
   11228:	stur	w8, [x29, #-4]
   1122c:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11230:	ldr	x8, [sp, #48]
   11234:	ldr	x9, [x8, #48]
   11238:	ldr	x9, [x9]
   1123c:	ldr	x10, [x8, #40]
   11240:	cmp	x9, x10
   11244:	b.cc	11250 <lzma_stream_buffer_decode@@XZ_5.0+0x648>  // b.lo, b.ul, b.last
   11248:	stur	wzr, [x29, #-4]
   1124c:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11250:	ldr	x8, [sp, #48]
   11254:	ldr	x9, [x8]
   11258:	ldr	x9, [x9, #376]
   1125c:	cbnz	x9, 112b4 <lzma_stream_buffer_decode@@XZ_5.0+0x6ac>
   11260:	ldr	x8, [sp, #48]
   11264:	ldr	x9, [x8, #56]
   11268:	ldr	x10, [x8, #48]
   1126c:	ldr	x10, [x10]
   11270:	ldrb	w11, [x9, x10]
   11274:	cbnz	w11, 1128c <lzma_stream_buffer_decode@@XZ_5.0+0x684>
   11278:	ldr	x8, [sp, #48]
   1127c:	ldr	x9, [x8]
   11280:	mov	w10, #0x3                   	// #3
   11284:	str	w10, [x9]
   11288:	b	117b8 <lzma_stream_buffer_decode@@XZ_5.0+0xbb0>
   1128c:	ldr	x8, [sp, #48]
   11290:	ldr	x9, [x8, #56]
   11294:	ldr	x10, [x8, #48]
   11298:	ldr	x10, [x10]
   1129c:	ldrb	w11, [x9, x10]
   112a0:	add	w11, w11, #0x1
   112a4:	mov	w12, #0x4                   	// #4
   112a8:	mul	w11, w11, w12
   112ac:	ldr	x9, [x8]
   112b0:	str	w11, [x9, #84]
   112b4:	ldr	x8, [sp, #48]
   112b8:	ldr	x0, [x8, #56]
   112bc:	ldr	x1, [x8, #48]
   112c0:	ldr	x2, [x8, #40]
   112c4:	ldr	x9, [x8]
   112c8:	add	x3, x9, #0x180
   112cc:	ldr	x9, [x8]
   112d0:	add	x4, x9, #0x178
   112d4:	ldr	x9, [x8]
   112d8:	ldr	w10, [x9, #84]
   112dc:	mov	w5, w10
   112e0:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   112e4:	ldr	x8, [sp, #48]
   112e8:	ldr	x9, [x8]
   112ec:	ldr	x9, [x9, #376]
   112f0:	ldr	x11, [x8]
   112f4:	ldr	w10, [x11, #84]
   112f8:	mov	w11, w10
   112fc:	cmp	x9, x11
   11300:	b.cs	1130c <lzma_stream_buffer_decode@@XZ_5.0+0x704>  // b.hs, b.nlast
   11304:	stur	wzr, [x29, #-4]
   11308:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   1130c:	ldr	x8, [sp, #48]
   11310:	ldr	x9, [x8]
   11314:	str	xzr, [x9, #376]
   11318:	ldr	x9, [x8]
   1131c:	mov	w10, #0x1                   	// #1
   11320:	str	w10, [x9, #80]
   11324:	ldr	x9, [x8]
   11328:	add	x11, sp, #0xb0
   1132c:	str	x11, [x9, #112]
   11330:	ldr	x8, [sp, #48]
   11334:	ldr	x9, [x8]
   11338:	add	x0, x9, #0x50
   1133c:	ldr	x1, [x8, #64]
   11340:	ldr	x9, [x8]
   11344:	add	x2, x9, #0x180
   11348:	bl	3340 <lzma_block_header_decode@plt>
   1134c:	str	w0, [sp, #172]
   11350:	ldr	w10, [sp, #172]
   11354:	cbz	w10, 11364 <lzma_stream_buffer_decode@@XZ_5.0+0x75c>
   11358:	ldr	w8, [sp, #172]
   1135c:	stur	w8, [x29, #-4]
   11360:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11364:	ldr	x8, [sp, #48]
   11368:	ldr	x9, [x8]
   1136c:	ldrb	w10, [x9, #371]
   11370:	and	w10, w10, #0x1
   11374:	ldr	x9, [x8]
   11378:	strb	w10, [x9, #280]
   1137c:	add	x0, sp, #0xb0
   11380:	bl	32e0 <lzma_raw_decoder_memusage@plt>
   11384:	str	x0, [sp, #160]
   11388:	ldr	x8, [sp, #160]
   1138c:	mov	x9, #0xffffffffffffffff    	// #-1
   11390:	cmp	x8, x9
   11394:	b.ne	113a4 <lzma_stream_buffer_decode@@XZ_5.0+0x79c>  // b.any
   11398:	mov	w8, #0x8                   	// #8
   1139c:	str	w8, [sp, #156]
   113a0:	b	113f4 <lzma_stream_buffer_decode@@XZ_5.0+0x7ec>
   113a4:	ldr	x8, [sp, #160]
   113a8:	ldr	x9, [sp, #48]
   113ac:	ldr	x10, [x9]
   113b0:	str	x8, [x10, #360]
   113b4:	ldr	x8, [sp, #160]
   113b8:	ldr	x10, [x9]
   113bc:	ldr	x10, [x10, #352]
   113c0:	cmp	x8, x10
   113c4:	b.ls	113d4 <lzma_stream_buffer_decode@@XZ_5.0+0x7cc>  // b.plast
   113c8:	mov	w8, #0x6                   	// #6
   113cc:	str	w8, [sp, #156]
   113d0:	b	113f4 <lzma_stream_buffer_decode@@XZ_5.0+0x7ec>
   113d4:	ldr	x8, [sp, #48]
   113d8:	ldr	x9, [x8]
   113dc:	add	x0, x9, #0x8
   113e0:	ldr	x1, [x8, #64]
   113e4:	ldr	x9, [x8]
   113e8:	add	x2, x9, #0x50
   113ec:	bl	e814 <lzma_block_buffer_decode@@XZ_5.0+0x1bc>
   113f0:	str	w0, [sp, #156]
   113f4:	str	xzr, [sp, #144]
   113f8:	ldr	x8, [sp, #144]
   113fc:	cmp	x8, #0x4
   11400:	b.cs	11438 <lzma_stream_buffer_decode@@XZ_5.0+0x830>  // b.hs, b.nlast
   11404:	ldr	x8, [sp, #144]
   11408:	mov	x9, #0x10                  	// #16
   1140c:	mul	x8, x9, x8
   11410:	add	x9, sp, #0xb0
   11414:	add	x8, x9, x8
   11418:	ldr	x0, [x8, #8]
   1141c:	ldr	x8, [sp, #48]
   11420:	ldr	x1, [x8, #64]
   11424:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   11428:	ldr	x8, [sp, #144]
   1142c:	add	x8, x8, #0x1
   11430:	str	x8, [sp, #144]
   11434:	b	113f8 <lzma_stream_buffer_decode@@XZ_5.0+0x7f0>
   11438:	ldr	x8, [sp, #48]
   1143c:	ldr	x9, [x8]
   11440:	mov	x10, xzr
   11444:	str	x10, [x9, #112]
   11448:	ldr	w11, [sp, #156]
   1144c:	cbz	w11, 1145c <lzma_stream_buffer_decode@@XZ_5.0+0x854>
   11450:	ldr	w8, [sp, #156]
   11454:	stur	w8, [x29, #-4]
   11458:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   1145c:	ldr	x8, [sp, #48]
   11460:	ldr	x9, [x8]
   11464:	mov	w10, #0x2                   	// #2
   11468:	str	w10, [x9]
   1146c:	ldr	x8, [sp, #48]
   11470:	ldr	x9, [x8]
   11474:	ldr	x9, [x9, #32]
   11478:	ldr	x10, [x8]
   1147c:	ldr	x0, [x10, #8]
   11480:	ldr	x1, [x8, #64]
   11484:	ldr	x2, [x8, #56]
   11488:	ldr	x3, [x8, #48]
   1148c:	ldr	x4, [x8, #40]
   11490:	ldr	x5, [x8, #32]
   11494:	ldr	x6, [x8, #24]
   11498:	ldr	x7, [x8, #16]
   1149c:	ldur	w11, [x29, #-76]
   114a0:	mov	x10, sp
   114a4:	str	w11, [x10]
   114a8:	blr	x9
   114ac:	str	w0, [sp, #140]
   114b0:	ldr	w11, [sp, #140]
   114b4:	cmp	w11, #0x1
   114b8:	b.eq	114c8 <lzma_stream_buffer_decode@@XZ_5.0+0x8c0>  // b.none
   114bc:	ldr	w8, [sp, #140]
   114c0:	stur	w8, [x29, #-4]
   114c4:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   114c8:	ldr	x8, [sp, #48]
   114cc:	ldr	x9, [x8]
   114d0:	ldr	x0, [x9, #344]
   114d4:	ldr	x9, [x8]
   114d8:	add	x9, x9, #0x50
   114dc:	str	x0, [sp, #24]
   114e0:	mov	x0, x9
   114e4:	bl	3190 <lzma_block_unpadded_size@plt>
   114e8:	ldr	x8, [sp, #48]
   114ec:	ldr	x9, [x8]
   114f0:	ldr	x2, [x9, #104]
   114f4:	ldr	x9, [sp, #24]
   114f8:	str	x0, [sp, #16]
   114fc:	mov	x0, x9
   11500:	ldr	x1, [sp, #16]
   11504:	bl	31b0 <lzma_index_hash_append@plt>
   11508:	str	w0, [sp, #136]
   1150c:	ldr	w10, [sp, #136]
   11510:	cbz	w10, 11520 <lzma_stream_buffer_decode@@XZ_5.0+0x918>
   11514:	ldr	w8, [sp, #136]
   11518:	stur	w8, [x29, #-4]
   1151c:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11520:	ldr	x8, [sp, #48]
   11524:	ldr	x9, [x8]
   11528:	mov	w10, #0x1                   	// #1
   1152c:	str	w10, [x9]
   11530:	b	117b8 <lzma_stream_buffer_decode@@XZ_5.0+0xbb0>
   11534:	ldr	x8, [sp, #48]
   11538:	ldr	x9, [x8, #48]
   1153c:	ldr	x9, [x9]
   11540:	ldr	x10, [x8, #40]
   11544:	cmp	x9, x10
   11548:	b.cc	11554 <lzma_stream_buffer_decode@@XZ_5.0+0x94c>  // b.lo, b.ul, b.last
   1154c:	stur	wzr, [x29, #-4]
   11550:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11554:	ldr	x8, [sp, #48]
   11558:	ldr	x9, [x8]
   1155c:	ldr	x0, [x9, #344]
   11560:	ldr	x1, [x8, #56]
   11564:	ldr	x2, [x8, #48]
   11568:	ldr	x3, [x8, #40]
   1156c:	bl	3130 <lzma_index_hash_decode@plt>
   11570:	str	w0, [sp, #132]
   11574:	ldr	w10, [sp, #132]
   11578:	cmp	w10, #0x1
   1157c:	b.eq	1158c <lzma_stream_buffer_decode@@XZ_5.0+0x984>  // b.none
   11580:	ldr	w8, [sp, #132]
   11584:	stur	w8, [x29, #-4]
   11588:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   1158c:	ldr	x8, [sp, #48]
   11590:	ldr	x9, [x8]
   11594:	mov	w10, #0x4                   	// #4
   11598:	str	w10, [x9]
   1159c:	ldr	x8, [sp, #48]
   115a0:	ldr	x0, [x8, #56]
   115a4:	ldr	x1, [x8, #48]
   115a8:	ldr	x2, [x8, #40]
   115ac:	ldr	x9, [x8]
   115b0:	add	x3, x9, #0x180
   115b4:	ldr	x9, [x8]
   115b8:	add	x4, x9, #0x178
   115bc:	mov	x5, #0xc                   	// #12
   115c0:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   115c4:	ldr	x8, [sp, #48]
   115c8:	ldr	x9, [x8]
   115cc:	ldr	x9, [x9, #376]
   115d0:	cmp	x9, #0xc
   115d4:	b.cs	115e0 <lzma_stream_buffer_decode@@XZ_5.0+0x9d8>  // b.hs, b.nlast
   115d8:	stur	wzr, [x29, #-4]
   115dc:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   115e0:	ldr	x8, [sp, #48]
   115e4:	ldr	x9, [x8]
   115e8:	str	xzr, [x9, #376]
   115ec:	ldr	x9, [x8]
   115f0:	add	x1, x9, #0x180
   115f4:	add	x0, sp, #0x48
   115f8:	bl	3430 <lzma_stream_footer_decode@plt>
   115fc:	str	w0, [sp, #68]
   11600:	ldr	w10, [sp, #68]
   11604:	cbz	w10, 11634 <lzma_stream_buffer_decode@@XZ_5.0+0xa2c>
   11608:	ldr	w8, [sp, #68]
   1160c:	cmp	w8, #0x7
   11610:	b.ne	11620 <lzma_stream_buffer_decode@@XZ_5.0+0xa18>  // b.any
   11614:	mov	w8, #0x9                   	// #9
   11618:	str	w8, [sp, #12]
   1161c:	b	11628 <lzma_stream_buffer_decode@@XZ_5.0+0xa20>
   11620:	ldr	w8, [sp, #68]
   11624:	str	w8, [sp, #12]
   11628:	ldr	w8, [sp, #12]
   1162c:	stur	w8, [x29, #-4]
   11630:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11634:	ldr	x8, [sp, #48]
   11638:	ldr	x9, [x8]
   1163c:	ldr	x0, [x9, #344]
   11640:	bl	34d0 <lzma_index_hash_size@plt>
   11644:	ldr	x8, [sp, #80]
   11648:	cmp	x0, x8
   1164c:	b.eq	1165c <lzma_stream_buffer_decode@@XZ_5.0+0xa54>  // b.none
   11650:	mov	w8, #0x9                   	// #9
   11654:	stur	w8, [x29, #-4]
   11658:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   1165c:	ldr	x8, [sp, #48]
   11660:	ldr	x9, [x8]
   11664:	add	x0, x9, #0x120
   11668:	add	x1, sp, #0x48
   1166c:	bl	3110 <lzma_stream_flags_compare@plt>
   11670:	str	w0, [sp, #64]
   11674:	ldr	w10, [sp, #64]
   11678:	cbz	w10, 11688 <lzma_stream_buffer_decode@@XZ_5.0+0xa80>
   1167c:	ldr	w8, [sp, #64]
   11680:	stur	w8, [x29, #-4]
   11684:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11688:	ldr	x8, [sp, #48]
   1168c:	ldr	x9, [x8]
   11690:	ldrb	w10, [x9, #372]
   11694:	tbnz	w10, #0, 116a4 <lzma_stream_buffer_decode@@XZ_5.0+0xa9c>
   11698:	mov	w8, #0x1                   	// #1
   1169c:	stur	w8, [x29, #-4]
   116a0:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   116a4:	ldr	x8, [sp, #48]
   116a8:	ldr	x9, [x8]
   116ac:	mov	w10, #0x5                   	// #5
   116b0:	str	w10, [x9]
   116b4:	ldr	x8, [sp, #48]
   116b8:	ldr	x9, [x8, #48]
   116bc:	ldr	x9, [x9]
   116c0:	ldr	x10, [x8, #40]
   116c4:	cmp	x9, x10
   116c8:	b.cc	11704 <lzma_stream_buffer_decode@@XZ_5.0+0xafc>  // b.lo, b.ul, b.last
   116cc:	ldur	w8, [x29, #-76]
   116d0:	cmp	w8, #0x3
   116d4:	b.eq	116e0 <lzma_stream_buffer_decode@@XZ_5.0+0xad8>  // b.none
   116d8:	stur	wzr, [x29, #-4]
   116dc:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   116e0:	ldr	x8, [sp, #48]
   116e4:	ldr	x9, [x8]
   116e8:	ldr	x9, [x9, #376]
   116ec:	mov	w10, #0x9                   	// #9
   116f0:	mov	w11, #0x1                   	// #1
   116f4:	cmp	x9, #0x0
   116f8:	csel	w10, w11, w10, eq  // eq = none
   116fc:	stur	w10, [x29, #-4]
   11700:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11704:	ldr	x8, [sp, #48]
   11708:	ldr	x9, [x8, #56]
   1170c:	ldr	x10, [x8, #48]
   11710:	ldr	x10, [x10]
   11714:	ldrb	w11, [x9, x10]
   11718:	cbz	w11, 11720 <lzma_stream_buffer_decode@@XZ_5.0+0xb18>
   1171c:	b	11750 <lzma_stream_buffer_decode@@XZ_5.0+0xb48>
   11720:	ldr	x8, [sp, #48]
   11724:	ldr	x9, [x8, #48]
   11728:	ldr	x10, [x9]
   1172c:	add	x10, x10, #0x1
   11730:	str	x10, [x9]
   11734:	ldr	x9, [x8]
   11738:	ldr	x9, [x9, #376]
   1173c:	add	x9, x9, #0x1
   11740:	and	x9, x9, #0x3
   11744:	ldr	x10, [x8]
   11748:	str	x9, [x10, #376]
   1174c:	b	116b4 <lzma_stream_buffer_decode@@XZ_5.0+0xaac>
   11750:	ldr	x8, [sp, #48]
   11754:	ldr	x9, [x8]
   11758:	ldr	x9, [x9, #376]
   1175c:	cbz	x9, 11780 <lzma_stream_buffer_decode@@XZ_5.0+0xb78>
   11760:	ldr	x8, [sp, #48]
   11764:	ldr	x9, [x8, #48]
   11768:	ldr	x10, [x9]
   1176c:	add	x10, x10, #0x1
   11770:	str	x10, [x9]
   11774:	mov	w11, #0x9                   	// #9
   11778:	stur	w11, [x29, #-4]
   1177c:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   11780:	ldr	x8, [sp, #48]
   11784:	ldr	x0, [x8]
   11788:	ldr	x1, [x8, #64]
   1178c:	bl	118c4 <lzma_stream_buffer_decode@@XZ_5.0+0xcbc>
   11790:	str	w0, [sp, #60]
   11794:	ldr	w9, [sp, #60]
   11798:	cbz	w9, 117a8 <lzma_stream_buffer_decode@@XZ_5.0+0xba0>
   1179c:	ldr	w8, [sp, #60]
   117a0:	stur	w8, [x29, #-4]
   117a4:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   117a8:	b	117b8 <lzma_stream_buffer_decode@@XZ_5.0+0xbb0>
   117ac:	mov	w8, #0xb                   	// #11
   117b0:	stur	w8, [x29, #-4]
   117b4:	b	117bc <lzma_stream_buffer_decode@@XZ_5.0+0xbb4>
   117b8:	b	11098 <lzma_stream_buffer_decode@@XZ_5.0+0x490>
   117bc:	ldur	w0, [x29, #-4]
   117c0:	ldr	x28, [sp, #368]
   117c4:	ldp	x29, x30, [sp, #352]
   117c8:	add	sp, sp, #0x180
   117cc:	ret
   117d0:	sub	sp, sp, #0x30
   117d4:	stp	x29, x30, [sp, #32]
   117d8:	add	x29, sp, #0x20
   117dc:	stur	x0, [x29, #-8]
   117e0:	str	x1, [sp, #16]
   117e4:	ldur	x8, [x29, #-8]
   117e8:	str	x8, [sp, #8]
   117ec:	ldr	x8, [sp, #8]
   117f0:	add	x0, x8, #0x8
   117f4:	ldr	x1, [sp, #16]
   117f8:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
   117fc:	ldr	x8, [sp, #8]
   11800:	ldr	x0, [x8, #344]
   11804:	ldr	x1, [sp, #16]
   11808:	bl	3310 <lzma_index_hash_end@plt>
   1180c:	ldr	x0, [sp, #8]
   11810:	ldr	x1, [sp, #16]
   11814:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   11818:	ldp	x29, x30, [sp, #32]
   1181c:	add	sp, sp, #0x30
   11820:	ret
   11824:	sub	sp, sp, #0x10
   11828:	str	x0, [sp, #8]
   1182c:	ldr	x8, [sp, #8]
   11830:	str	x8, [sp]
   11834:	ldr	x8, [sp]
   11838:	ldr	w0, [x8, #304]
   1183c:	add	sp, sp, #0x10
   11840:	ret
   11844:	sub	sp, sp, #0x30
   11848:	str	x0, [sp, #32]
   1184c:	str	x1, [sp, #24]
   11850:	str	x2, [sp, #16]
   11854:	str	x3, [sp, #8]
   11858:	ldr	x8, [sp, #32]
   1185c:	str	x8, [sp]
   11860:	ldr	x8, [sp]
   11864:	ldr	x8, [x8, #360]
   11868:	ldr	x9, [sp, #24]
   1186c:	str	x8, [x9]
   11870:	ldr	x8, [sp]
   11874:	ldr	x8, [x8, #352]
   11878:	ldr	x9, [sp, #16]
   1187c:	str	x8, [x9]
   11880:	ldr	x8, [sp, #8]
   11884:	cbz	x8, 118b4 <lzma_stream_buffer_decode@@XZ_5.0+0xcac>
   11888:	ldr	x8, [sp, #8]
   1188c:	ldr	x9, [sp]
   11890:	ldr	x9, [x9, #360]
   11894:	cmp	x8, x9
   11898:	b.cs	118a8 <lzma_stream_buffer_decode@@XZ_5.0+0xca0>  // b.hs, b.nlast
   1189c:	mov	w8, #0x6                   	// #6
   118a0:	str	w8, [sp, #44]
   118a4:	b	118b8 <lzma_stream_buffer_decode@@XZ_5.0+0xcb0>
   118a8:	ldr	x8, [sp, #8]
   118ac:	ldr	x9, [sp]
   118b0:	str	x8, [x9, #352]
   118b4:	str	wzr, [sp, #44]
   118b8:	ldr	w0, [sp, #44]
   118bc:	add	sp, sp, #0x30
   118c0:	ret
   118c4:	sub	sp, sp, #0x30
   118c8:	stp	x29, x30, [sp, #32]
   118cc:	add	x29, sp, #0x20
   118d0:	str	x0, [sp, #16]
   118d4:	str	x1, [sp, #8]
   118d8:	ldr	x8, [sp, #16]
   118dc:	ldr	x0, [x8, #344]
   118e0:	ldr	x1, [sp, #8]
   118e4:	bl	3280 <lzma_index_hash_init@plt>
   118e8:	ldr	x8, [sp, #16]
   118ec:	str	x0, [x8, #344]
   118f0:	ldr	x8, [sp, #16]
   118f4:	ldr	x8, [x8, #344]
   118f8:	cbnz	x8, 11908 <lzma_stream_buffer_decode@@XZ_5.0+0xd00>
   118fc:	mov	w8, #0x5                   	// #5
   11900:	stur	w8, [x29, #-4]
   11904:	b	1191c <lzma_stream_buffer_decode@@XZ_5.0+0xd14>
   11908:	ldr	x8, [sp, #16]
   1190c:	str	wzr, [x8]
   11910:	ldr	x8, [sp, #16]
   11914:	str	xzr, [x8, #376]
   11918:	stur	wzr, [x29, #-4]
   1191c:	ldur	w0, [x29, #-4]
   11920:	ldp	x29, x30, [sp, #32]
   11924:	add	sp, sp, #0x30
   11928:	ret

000000000001192c <lzma_stream_decoder@@XZ_5.0>:
   1192c:	sub	sp, sp, #0x40
   11930:	stp	x29, x30, [sp, #48]
   11934:	add	x29, sp, #0x30
   11938:	stur	x0, [x29, #-16]
   1193c:	str	x1, [sp, #24]
   11940:	str	w2, [sp, #20]
   11944:	ldur	x0, [x29, #-16]
   11948:	bl	3b3c <lzma_version_string@@XZ_5.0+0x42c>
   1194c:	str	w0, [sp, #16]
   11950:	ldr	w8, [sp, #16]
   11954:	cbz	w8, 11964 <lzma_stream_decoder@@XZ_5.0+0x38>
   11958:	ldr	w8, [sp, #16]
   1195c:	stur	w8, [x29, #-4]
   11960:	b	119c0 <lzma_stream_decoder@@XZ_5.0+0x94>
   11964:	ldur	x8, [x29, #-16]
   11968:	ldr	x0, [x8, #56]
   1196c:	ldur	x8, [x29, #-16]
   11970:	ldr	x1, [x8, #48]
   11974:	ldr	x2, [sp, #24]
   11978:	ldr	w3, [sp, #20]
   1197c:	bl	10e1c <lzma_stream_buffer_decode@@XZ_5.0+0x214>
   11980:	str	w0, [sp, #12]
   11984:	ldr	w9, [sp, #12]
   11988:	cbz	w9, 119a0 <lzma_stream_decoder@@XZ_5.0+0x74>
   1198c:	ldur	x0, [x29, #-16]
   11990:	bl	3320 <lzma_end@plt>
   11994:	ldr	w8, [sp, #12]
   11998:	stur	w8, [x29, #-4]
   1199c:	b	119c0 <lzma_stream_decoder@@XZ_5.0+0x94>
   119a0:	ldur	x8, [x29, #-16]
   119a4:	ldr	x8, [x8, #56]
   119a8:	mov	w9, #0x1                   	// #1
   119ac:	strb	w9, [x8, #88]
   119b0:	ldur	x8, [x29, #-16]
   119b4:	ldr	x8, [x8, #56]
   119b8:	strb	w9, [x8, #91]
   119bc:	stur	wzr, [x29, #-4]
   119c0:	ldur	w0, [x29, #-4]
   119c4:	ldp	x29, x30, [sp, #48]
   119c8:	add	sp, sp, #0x40
   119cc:	ret

00000000000119d0 <lzma_stream_header_decode@@XZ_5.0>:
   119d0:	sub	sp, sp, #0x30
   119d4:	stp	x29, x30, [sp, #32]
   119d8:	add	x29, sp, #0x20
   119dc:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   119e0:	ldr	x8, [x8, #3936]
   119e4:	mov	x2, #0x6                   	// #6
   119e8:	str	x0, [sp, #16]
   119ec:	str	x1, [sp, #8]
   119f0:	ldr	x0, [sp, #8]
   119f4:	mov	x1, x8
   119f8:	bl	3330 <memcmp@plt>
   119fc:	cbz	w0, 11a0c <lzma_stream_header_decode@@XZ_5.0+0x3c>
   11a00:	mov	w8, #0x7                   	// #7
   11a04:	stur	w8, [x29, #-4]
   11a08:	b	11a88 <lzma_stream_header_decode@@XZ_5.0+0xb8>
   11a0c:	ldr	x8, [sp, #8]
   11a10:	add	x0, x8, #0x6
   11a14:	mov	x1, #0x2                   	// #2
   11a18:	mov	w9, wzr
   11a1c:	mov	w2, w9
   11a20:	bl	31c0 <lzma_crc32@plt>
   11a24:	str	w0, [sp, #4]
   11a28:	ldr	w9, [sp, #4]
   11a2c:	ldr	x8, [sp, #8]
   11a30:	add	x0, x8, #0x8
   11a34:	str	w9, [sp]
   11a38:	bl	11a98 <lzma_stream_header_decode@@XZ_5.0+0xc8>
   11a3c:	ldr	w9, [sp]
   11a40:	cmp	w9, w0
   11a44:	b.eq	11a54 <lzma_stream_header_decode@@XZ_5.0+0x84>  // b.none
   11a48:	mov	w8, #0x9                   	// #9
   11a4c:	stur	w8, [x29, #-4]
   11a50:	b	11a88 <lzma_stream_header_decode@@XZ_5.0+0xb8>
   11a54:	ldr	x0, [sp, #16]
   11a58:	ldr	x8, [sp, #8]
   11a5c:	add	x1, x8, #0x6
   11a60:	bl	11af4 <lzma_stream_header_decode@@XZ_5.0+0x124>
   11a64:	tbnz	w0, #0, 11a6c <lzma_stream_header_decode@@XZ_5.0+0x9c>
   11a68:	b	11a78 <lzma_stream_header_decode@@XZ_5.0+0xa8>
   11a6c:	mov	w8, #0x8                   	// #8
   11a70:	stur	w8, [x29, #-4]
   11a74:	b	11a88 <lzma_stream_header_decode@@XZ_5.0+0xb8>
   11a78:	ldr	x8, [sp, #16]
   11a7c:	mov	x9, #0xffffffffffffffff    	// #-1
   11a80:	str	x9, [x8, #8]
   11a84:	stur	wzr, [x29, #-4]
   11a88:	ldur	w0, [x29, #-4]
   11a8c:	ldp	x29, x30, [sp, #32]
   11a90:	add	sp, sp, #0x30
   11a94:	ret
   11a98:	sub	sp, sp, #0x10
   11a9c:	str	x0, [sp, #8]
   11aa0:	ldr	x8, [sp, #8]
   11aa4:	ldrb	w9, [x8]
   11aa8:	str	w9, [sp, #4]
   11aac:	ldr	x8, [sp, #8]
   11ab0:	ldrb	w9, [x8, #1]
   11ab4:	ldr	w10, [sp, #4]
   11ab8:	orr	w9, w10, w9, lsl #8
   11abc:	str	w9, [sp, #4]
   11ac0:	ldr	x8, [sp, #8]
   11ac4:	ldrb	w9, [x8, #2]
   11ac8:	ldr	w10, [sp, #4]
   11acc:	orr	w9, w10, w9, lsl #16
   11ad0:	str	w9, [sp, #4]
   11ad4:	ldr	x8, [sp, #8]
   11ad8:	ldrb	w9, [x8, #3]
   11adc:	ldr	w10, [sp, #4]
   11ae0:	orr	w9, w10, w9, lsl #24
   11ae4:	str	w9, [sp, #4]
   11ae8:	ldr	w0, [sp, #4]
   11aec:	add	sp, sp, #0x10
   11af0:	ret
   11af4:	sub	sp, sp, #0x20
   11af8:	str	x0, [sp, #16]
   11afc:	str	x1, [sp, #8]
   11b00:	ldr	x8, [sp, #8]
   11b04:	ldrb	w9, [x8]
   11b08:	cbnz	w9, 11b1c <lzma_stream_header_decode@@XZ_5.0+0x14c>
   11b0c:	ldr	x8, [sp, #8]
   11b10:	ldrb	w9, [x8, #1]
   11b14:	and	w9, w9, #0xf0
   11b18:	cbz	w9, 11b2c <lzma_stream_header_decode@@XZ_5.0+0x15c>
   11b1c:	mov	w8, #0x1                   	// #1
   11b20:	and	w8, w8, #0x1
   11b24:	strb	w8, [sp, #31]
   11b28:	b	11b54 <lzma_stream_header_decode@@XZ_5.0+0x184>
   11b2c:	ldr	x8, [sp, #16]
   11b30:	str	wzr, [x8]
   11b34:	ldr	x8, [sp, #8]
   11b38:	ldrb	w9, [x8, #1]
   11b3c:	and	w9, w9, #0xf
   11b40:	ldr	x8, [sp, #16]
   11b44:	str	w9, [x8, #16]
   11b48:	mov	w9, wzr
   11b4c:	and	w9, w9, #0x1
   11b50:	strb	w9, [sp, #31]
   11b54:	ldrb	w8, [sp, #31]
   11b58:	and	w0, w8, #0x1
   11b5c:	add	sp, sp, #0x20
   11b60:	ret

0000000000011b64 <lzma_stream_footer_decode@@XZ_5.0>:
   11b64:	sub	sp, sp, #0x30
   11b68:	stp	x29, x30, [sp, #32]
   11b6c:	add	x29, sp, #0x20
   11b70:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   11b74:	ldr	x8, [x8, #3976]
   11b78:	mov	x2, #0x2                   	// #2
   11b7c:	str	x0, [sp, #16]
   11b80:	str	x1, [sp, #8]
   11b84:	ldr	x9, [sp, #8]
   11b88:	add	x0, x9, #0xa
   11b8c:	mov	x1, x8
   11b90:	bl	3330 <memcmp@plt>
   11b94:	cbz	w0, 11ba4 <lzma_stream_footer_decode@@XZ_5.0+0x40>
   11b98:	mov	w8, #0x7                   	// #7
   11b9c:	stur	w8, [x29, #-4]
   11ba0:	b	11c48 <lzma_stream_footer_decode@@XZ_5.0+0xe4>
   11ba4:	ldr	x8, [sp, #8]
   11ba8:	add	x0, x8, #0x4
   11bac:	mov	x1, #0x6                   	// #6
   11bb0:	mov	w9, wzr
   11bb4:	mov	w2, w9
   11bb8:	bl	31c0 <lzma_crc32@plt>
   11bbc:	str	w0, [sp, #4]
   11bc0:	ldr	w9, [sp, #4]
   11bc4:	ldr	x0, [sp, #8]
   11bc8:	str	w9, [sp]
   11bcc:	bl	11a98 <lzma_stream_header_decode@@XZ_5.0+0xc8>
   11bd0:	ldr	w9, [sp]
   11bd4:	cmp	w9, w0
   11bd8:	b.eq	11be8 <lzma_stream_footer_decode@@XZ_5.0+0x84>  // b.none
   11bdc:	mov	w8, #0x9                   	// #9
   11be0:	stur	w8, [x29, #-4]
   11be4:	b	11c48 <lzma_stream_footer_decode@@XZ_5.0+0xe4>
   11be8:	ldr	x0, [sp, #16]
   11bec:	ldr	x8, [sp, #8]
   11bf0:	add	x1, x8, #0x8
   11bf4:	bl	11af4 <lzma_stream_header_decode@@XZ_5.0+0x124>
   11bf8:	tbnz	w0, #0, 11c00 <lzma_stream_footer_decode@@XZ_5.0+0x9c>
   11bfc:	b	11c0c <lzma_stream_footer_decode@@XZ_5.0+0xa8>
   11c00:	mov	w8, #0x8                   	// #8
   11c04:	stur	w8, [x29, #-4]
   11c08:	b	11c48 <lzma_stream_footer_decode@@XZ_5.0+0xe4>
   11c0c:	ldr	x8, [sp, #8]
   11c10:	add	x0, x8, #0x4
   11c14:	bl	11a98 <lzma_stream_header_decode@@XZ_5.0+0xc8>
   11c18:	mov	w8, w0
   11c1c:	ubfx	x8, x8, #0, #32
   11c20:	ldr	x9, [sp, #16]
   11c24:	str	x8, [x9, #8]
   11c28:	ldr	x8, [sp, #16]
   11c2c:	ldr	x8, [x8, #8]
   11c30:	add	x8, x8, #0x1
   11c34:	mov	x9, #0x4                   	// #4
   11c38:	mul	x8, x8, x9
   11c3c:	ldr	x9, [sp, #16]
   11c40:	str	x8, [x9, #8]
   11c44:	stur	wzr, [x29, #-4]
   11c48:	ldur	w0, [x29, #-4]
   11c4c:	ldp	x29, x30, [sp, #32]
   11c50:	add	sp, sp, #0x30
   11c54:	ret

0000000000011c58 <lzma_vli_decode@@XZ_5.0>:
   11c58:	sub	sp, sp, #0x40
   11c5c:	str	x0, [sp, #48]
   11c60:	str	x1, [sp, #40]
   11c64:	str	x2, [sp, #32]
   11c68:	str	x3, [sp, #24]
   11c6c:	str	x4, [sp, #16]
   11c70:	str	xzr, [sp, #8]
   11c74:	ldr	x8, [sp, #40]
   11c78:	cbnz	x8, 11cb0 <lzma_vli_decode@@XZ_5.0+0x58>
   11c7c:	add	x8, sp, #0x8
   11c80:	str	x8, [sp, #40]
   11c84:	ldr	x8, [sp, #48]
   11c88:	str	xzr, [x8]
   11c8c:	ldr	x8, [sp, #24]
   11c90:	ldr	x8, [x8]
   11c94:	ldr	x9, [sp, #16]
   11c98:	cmp	x8, x9
   11c9c:	b.cc	11cac <lzma_vli_decode@@XZ_5.0+0x54>  // b.lo, b.ul, b.last
   11ca0:	mov	w8, #0x9                   	// #9
   11ca4:	str	w8, [sp, #60]
   11ca8:	b	11e28 <lzma_vli_decode@@XZ_5.0+0x1d0>
   11cac:	b	11d20 <lzma_vli_decode@@XZ_5.0+0xc8>
   11cb0:	ldr	x8, [sp, #40]
   11cb4:	ldr	x8, [x8]
   11cb8:	cbnz	x8, 11cc4 <lzma_vli_decode@@XZ_5.0+0x6c>
   11cbc:	ldr	x8, [sp, #48]
   11cc0:	str	xzr, [x8]
   11cc4:	ldr	x8, [sp, #40]
   11cc8:	ldr	x8, [x8]
   11ccc:	cmp	x8, #0x9
   11cd0:	b.cs	11cf4 <lzma_vli_decode@@XZ_5.0+0x9c>  // b.hs, b.nlast
   11cd4:	ldr	x8, [sp, #48]
   11cd8:	ldr	x8, [x8]
   11cdc:	ldr	x9, [sp, #40]
   11ce0:	ldr	x9, [x9]
   11ce4:	mov	x10, #0x7                   	// #7
   11ce8:	mul	x9, x9, x10
   11cec:	lsr	x8, x8, x9
   11cf0:	cbz	x8, 11d00 <lzma_vli_decode@@XZ_5.0+0xa8>
   11cf4:	mov	w8, #0xb                   	// #11
   11cf8:	str	w8, [sp, #60]
   11cfc:	b	11e28 <lzma_vli_decode@@XZ_5.0+0x1d0>
   11d00:	ldr	x8, [sp, #24]
   11d04:	ldr	x8, [x8]
   11d08:	ldr	x9, [sp, #16]
   11d0c:	cmp	x8, x9
   11d10:	b.cc	11d20 <lzma_vli_decode@@XZ_5.0+0xc8>  // b.lo, b.ul, b.last
   11d14:	mov	w8, #0xa                   	// #10
   11d18:	str	w8, [sp, #60]
   11d1c:	b	11e28 <lzma_vli_decode@@XZ_5.0+0x1d0>
   11d20:	ldr	x8, [sp, #32]
   11d24:	ldr	x9, [sp, #24]
   11d28:	ldr	x9, [x9]
   11d2c:	add	x8, x8, x9
   11d30:	ldrb	w10, [x8]
   11d34:	strb	w10, [sp, #7]
   11d38:	ldr	x8, [sp, #24]
   11d3c:	ldr	x9, [x8]
   11d40:	add	x9, x9, #0x1
   11d44:	str	x9, [x8]
   11d48:	ldrb	w10, [sp, #7]
   11d4c:	and	w10, w10, #0x7f
   11d50:	mov	w0, w10
   11d54:	sxtw	x8, w0
   11d58:	ldr	x9, [sp, #40]
   11d5c:	ldr	x9, [x9]
   11d60:	mov	x11, #0x7                   	// #7
   11d64:	mul	x9, x9, x11
   11d68:	lsl	x8, x8, x9
   11d6c:	ldr	x9, [sp, #48]
   11d70:	ldr	x11, [x9]
   11d74:	add	x8, x11, x8
   11d78:	str	x8, [x9]
   11d7c:	ldr	x8, [sp, #40]
   11d80:	ldr	x9, [x8]
   11d84:	add	x9, x9, #0x1
   11d88:	str	x9, [x8]
   11d8c:	ldrb	w10, [sp, #7]
   11d90:	and	w10, w10, #0x80
   11d94:	cbnz	w10, 11ddc <lzma_vli_decode@@XZ_5.0+0x184>
   11d98:	ldrb	w8, [sp, #7]
   11d9c:	cbnz	w8, 11dbc <lzma_vli_decode@@XZ_5.0+0x164>
   11da0:	ldr	x8, [sp, #40]
   11da4:	ldr	x8, [x8]
   11da8:	cmp	x8, #0x1
   11dac:	b.ls	11dbc <lzma_vli_decode@@XZ_5.0+0x164>  // b.plast
   11db0:	mov	w8, #0x9                   	// #9
   11db4:	str	w8, [sp, #60]
   11db8:	b	11e28 <lzma_vli_decode@@XZ_5.0+0x1d0>
   11dbc:	ldr	x8, [sp, #40]
   11dc0:	add	x9, sp, #0x8
   11dc4:	mov	w10, #0x1                   	// #1
   11dc8:	mov	w11, wzr
   11dcc:	cmp	x8, x9
   11dd0:	csel	w10, w11, w10, eq  // eq = none
   11dd4:	str	w10, [sp, #60]
   11dd8:	b	11e28 <lzma_vli_decode@@XZ_5.0+0x1d0>
   11ddc:	ldr	x8, [sp, #40]
   11de0:	ldr	x8, [x8]
   11de4:	cmp	x8, #0x9
   11de8:	b.ne	11df8 <lzma_vli_decode@@XZ_5.0+0x1a0>  // b.any
   11dec:	mov	w8, #0x9                   	// #9
   11df0:	str	w8, [sp, #60]
   11df4:	b	11e28 <lzma_vli_decode@@XZ_5.0+0x1d0>
   11df8:	ldr	x8, [sp, #24]
   11dfc:	ldr	x8, [x8]
   11e00:	ldr	x9, [sp, #16]
   11e04:	cmp	x8, x9
   11e08:	b.cc	11d20 <lzma_vli_decode@@XZ_5.0+0xc8>  // b.lo, b.ul, b.last
   11e0c:	ldr	x8, [sp, #40]
   11e10:	add	x9, sp, #0x8
   11e14:	mov	w10, #0x9                   	// #9
   11e18:	mov	w11, wzr
   11e1c:	cmp	x8, x9
   11e20:	csel	w10, w10, w11, eq  // eq = none
   11e24:	str	w10, [sp, #60]
   11e28:	ldr	w0, [sp, #60]
   11e2c:	add	sp, sp, #0x40
   11e30:	ret

0000000000011e34 <lzma_check_is_supported@@XZ_5.0>:
   11e34:	sub	sp, sp, #0x10
   11e38:	str	w0, [sp, #8]
   11e3c:	ldr	w8, [sp, #8]
   11e40:	cmp	w8, #0xf
   11e44:	b.ls	11e54 <lzma_check_is_supported@@XZ_5.0+0x20>  // b.plast
   11e48:	mov	w8, #0x0                   	// #0
   11e4c:	strb	w8, [sp, #15]
   11e50:	b	11e70 <lzma_check_is_supported@@XZ_5.0+0x3c>
   11e54:	ldr	w8, [sp, #8]
   11e58:	mov	w9, w8
   11e5c:	adrp	x10, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   11e60:	add	x10, x10, #0xaec
   11e64:	add	x9, x10, x9
   11e68:	ldrb	w8, [x9]
   11e6c:	strb	w8, [sp, #15]
   11e70:	ldrb	w0, [sp, #15]
   11e74:	add	sp, sp, #0x10
   11e78:	ret

0000000000011e7c <lzma_check_size@@XZ_5.0>:
   11e7c:	sub	sp, sp, #0x10
   11e80:	str	w0, [sp, #8]
   11e84:	ldr	w8, [sp, #8]
   11e88:	cmp	w8, #0xf
   11e8c:	b.ls	11e9c <lzma_check_size@@XZ_5.0+0x20>  // b.plast
   11e90:	mov	w8, #0xffffffff            	// #-1
   11e94:	str	w8, [sp, #12]
   11e98:	b	11eb4 <lzma_check_size@@XZ_5.0+0x38>
   11e9c:	ldr	w8, [sp, #8]
   11ea0:	mov	w9, w8
   11ea4:	adrp	x10, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   11ea8:	add	x10, x10, #0xafc
   11eac:	ldrb	w8, [x10, x9]
   11eb0:	str	w8, [sp, #12]
   11eb4:	ldr	w0, [sp, #12]
   11eb8:	add	sp, sp, #0x10
   11ebc:	ret
   11ec0:	sub	sp, sp, #0x30
   11ec4:	stp	x29, x30, [sp, #32]
   11ec8:	add	x29, sp, #0x20
   11ecc:	stur	x0, [x29, #-8]
   11ed0:	stur	w1, [x29, #-12]
   11ed4:	ldur	w8, [x29, #-12]
   11ed8:	subs	w8, w8, #0x0
   11edc:	mov	w9, w8
   11ee0:	ubfx	x9, x9, #0, #32
   11ee4:	cmp	x9, #0xa
   11ee8:	str	x9, [sp, #8]
   11eec:	b.hi	11f30 <lzma_check_size@@XZ_5.0+0xb4>  // b.pmore
   11ef0:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   11ef4:	add	x8, x8, #0xac0
   11ef8:	ldr	x11, [sp, #8]
   11efc:	ldrsw	x10, [x8, x11, lsl #2]
   11f00:	add	x9, x8, x10
   11f04:	br	x9
   11f08:	b	11f30 <lzma_check_size@@XZ_5.0+0xb4>
   11f0c:	ldur	x8, [x29, #-8]
   11f10:	str	wzr, [x8, #64]
   11f14:	b	11f30 <lzma_check_size@@XZ_5.0+0xb4>
   11f18:	ldur	x8, [x29, #-8]
   11f1c:	str	xzr, [x8, #64]
   11f20:	b	11f30 <lzma_check_size@@XZ_5.0+0xb4>
   11f24:	ldur	x0, [x29, #-8]
   11f28:	bl	12470 <lzma_crc64@@XZ_5.0+0x1b4>
   11f2c:	b	11f30 <lzma_check_size@@XZ_5.0+0xb4>
   11f30:	ldp	x29, x30, [sp, #32]
   11f34:	add	sp, sp, #0x30
   11f38:	ret
   11f3c:	sub	sp, sp, #0x40
   11f40:	stp	x29, x30, [sp, #48]
   11f44:	add	x29, sp, #0x30
   11f48:	stur	x0, [x29, #-8]
   11f4c:	stur	w1, [x29, #-12]
   11f50:	str	x2, [sp, #24]
   11f54:	str	x3, [sp, #16]
   11f58:	ldur	w8, [x29, #-12]
   11f5c:	cmp	w8, #0x1
   11f60:	str	w8, [sp, #12]
   11f64:	b.eq	11f8c <lzma_check_size@@XZ_5.0+0x110>  // b.none
   11f68:	b	11f6c <lzma_check_size@@XZ_5.0+0xf0>
   11f6c:	ldr	w8, [sp, #12]
   11f70:	cmp	w8, #0x4
   11f74:	b.eq	11fac <lzma_check_size@@XZ_5.0+0x130>  // b.none
   11f78:	b	11f7c <lzma_check_size@@XZ_5.0+0x100>
   11f7c:	ldr	w8, [sp, #12]
   11f80:	cmp	w8, #0xa
   11f84:	b.eq	11fcc <lzma_check_size@@XZ_5.0+0x150>  // b.none
   11f88:	b	11fe0 <lzma_check_size@@XZ_5.0+0x164>
   11f8c:	ldr	x0, [sp, #24]
   11f90:	ldr	x1, [sp, #16]
   11f94:	ldur	x8, [x29, #-8]
   11f98:	ldr	w2, [x8, #64]
   11f9c:	bl	31c0 <lzma_crc32@plt>
   11fa0:	ldur	x8, [x29, #-8]
   11fa4:	str	w0, [x8, #64]
   11fa8:	b	11fe0 <lzma_check_size@@XZ_5.0+0x164>
   11fac:	ldr	x0, [sp, #24]
   11fb0:	ldr	x1, [sp, #16]
   11fb4:	ldur	x8, [x29, #-8]
   11fb8:	ldr	x2, [x8, #64]
   11fbc:	bl	3290 <lzma_crc64@plt>
   11fc0:	ldur	x8, [x29, #-8]
   11fc4:	str	x0, [x8, #64]
   11fc8:	b	11fe0 <lzma_check_size@@XZ_5.0+0x164>
   11fcc:	ldr	x0, [sp, #24]
   11fd0:	ldr	x1, [sp, #16]
   11fd4:	ldur	x2, [x29, #-8]
   11fd8:	bl	124a4 <lzma_crc64@@XZ_5.0+0x1e8>
   11fdc:	b	11fe0 <lzma_check_size@@XZ_5.0+0x164>
   11fe0:	ldp	x29, x30, [sp, #48]
   11fe4:	add	sp, sp, #0x40
   11fe8:	ret
   11fec:	sub	sp, sp, #0x20
   11ff0:	stp	x29, x30, [sp, #16]
   11ff4:	add	x29, sp, #0x10
   11ff8:	str	x0, [sp, #8]
   11ffc:	str	w1, [sp, #4]
   12000:	ldr	w8, [sp, #4]
   12004:	cmp	w8, #0x1
   12008:	str	w8, [sp]
   1200c:	b.eq	12034 <lzma_check_size@@XZ_5.0+0x1b8>  // b.none
   12010:	b	12014 <lzma_check_size@@XZ_5.0+0x198>
   12014:	ldr	w8, [sp]
   12018:	cmp	w8, #0x4
   1201c:	b.eq	12048 <lzma_check_size@@XZ_5.0+0x1cc>  // b.none
   12020:	b	12024 <lzma_check_size@@XZ_5.0+0x1a8>
   12024:	ldr	w8, [sp]
   12028:	cmp	w8, #0xa
   1202c:	b.eq	1205c <lzma_check_size@@XZ_5.0+0x1e0>  // b.none
   12030:	b	12068 <lzma_check_size@@XZ_5.0+0x1ec>
   12034:	ldr	x8, [sp, #8]
   12038:	ldr	w9, [x8, #64]
   1203c:	ldr	x8, [sp, #8]
   12040:	str	w9, [x8]
   12044:	b	12068 <lzma_check_size@@XZ_5.0+0x1ec>
   12048:	ldr	x8, [sp, #8]
   1204c:	ldr	x8, [x8, #64]
   12050:	ldr	x9, [sp, #8]
   12054:	str	x8, [x9]
   12058:	b	12068 <lzma_check_size@@XZ_5.0+0x1ec>
   1205c:	ldr	x0, [sp, #8]
   12060:	bl	125a4 <lzma_crc64@@XZ_5.0+0x2e8>
   12064:	b	12068 <lzma_check_size@@XZ_5.0+0x1ec>
   12068:	ldp	x29, x30, [sp, #16]
   1206c:	add	sp, sp, #0x20
   12070:	ret

0000000000012074 <lzma_crc32@@XZ_5.0>:
   12074:	sub	sp, sp, #0x70
   12078:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1207c:	ldr	x8, [x8, #3952]
   12080:	mov	x9, #0x1c00                	// #7168
   12084:	add	x9, x8, x9
   12088:	mov	x10, #0x1800                	// #6144
   1208c:	add	x10, x8, x10
   12090:	mov	x11, #0x1400                	// #5120
   12094:	add	x11, x8, x11
   12098:	add	x12, x8, #0x1, lsl #12
   1209c:	add	x13, x8, #0xc00
   120a0:	add	x14, x8, #0x800
   120a4:	add	x15, x8, #0x400
   120a8:	str	x0, [sp, #104]
   120ac:	str	x1, [sp, #96]
   120b0:	str	w2, [sp, #92]
   120b4:	ldr	w16, [sp, #92]
   120b8:	mvn	w16, w16
   120bc:	str	w16, [sp, #92]
   120c0:	ldr	x17, [sp, #96]
   120c4:	cmp	x17, #0x8
   120c8:	str	x8, [sp, #64]
   120cc:	str	x9, [sp, #56]
   120d0:	str	x10, [sp, #48]
   120d4:	str	x11, [sp, #40]
   120d8:	str	x12, [sp, #32]
   120dc:	str	x13, [sp, #24]
   120e0:	str	x14, [sp, #16]
   120e4:	str	x15, [sp, #8]
   120e8:	b.ls	12268 <lzma_crc32@@XZ_5.0+0x1f4>  // b.plast
   120ec:	ldr	x8, [sp, #104]
   120f0:	and	x8, x8, #0x7
   120f4:	cbz	x8, 12138 <lzma_crc32@@XZ_5.0+0xc4>
   120f8:	ldr	x8, [sp, #104]
   120fc:	add	x9, x8, #0x1
   12100:	str	x9, [sp, #104]
   12104:	ldrb	w10, [x8]
   12108:	ldr	w11, [sp, #92]
   1210c:	and	w11, w11, #0xff
   12110:	eor	w10, w10, w11
   12114:	ldr	x8, [sp, #64]
   12118:	ldr	w10, [x8, w10, uxtw #2]
   1211c:	ldr	w11, [sp, #92]
   12120:	eor	w10, w10, w11, lsr #8
   12124:	str	w10, [sp, #92]
   12128:	ldr	x9, [sp, #96]
   1212c:	subs	x9, x9, #0x1
   12130:	str	x9, [sp, #96]
   12134:	b	120ec <lzma_crc32@@XZ_5.0+0x78>
   12138:	ldr	x8, [sp, #104]
   1213c:	ldr	x9, [sp, #96]
   12140:	and	x9, x9, #0xfffffffffffffff8
   12144:	add	x8, x8, x9
   12148:	str	x8, [sp, #80]
   1214c:	ldr	x8, [sp, #96]
   12150:	and	x8, x8, #0x7
   12154:	str	x8, [sp, #96]
   12158:	ldr	x8, [sp, #104]
   1215c:	ldr	x9, [sp, #80]
   12160:	cmp	x8, x9
   12164:	b.cs	12268 <lzma_crc32@@XZ_5.0+0x1f4>  // b.hs, b.nlast
   12168:	ldr	x8, [sp, #104]
   1216c:	ldr	w9, [x8]
   12170:	ldr	w10, [sp, #92]
   12174:	eor	w9, w10, w9
   12178:	str	w9, [sp, #92]
   1217c:	ldr	x8, [sp, #104]
   12180:	add	x8, x8, #0x4
   12184:	str	x8, [sp, #104]
   12188:	ldr	w9, [sp, #92]
   1218c:	and	w9, w9, #0xff
   12190:	ldr	x8, [sp, #56]
   12194:	ldr	w9, [x8, w9, uxtw #2]
   12198:	ldr	w10, [sp, #92]
   1219c:	mov	x11, #0x8                   	// #8
   121a0:	lsr	w10, w10, #8
   121a4:	and	w10, w10, #0xff
   121a8:	ldr	x12, [sp, #48]
   121ac:	ldr	w10, [x12, w10, uxtw #2]
   121b0:	eor	w9, w9, w10
   121b4:	ldr	w10, [sp, #92]
   121b8:	mov	x13, #0x10                  	// #16
   121bc:	lsr	w10, w10, #16
   121c0:	and	w10, w10, #0xff
   121c4:	ldr	x14, [sp, #40]
   121c8:	ldr	w10, [x14, w10, uxtw #2]
   121cc:	eor	w9, w9, w10
   121d0:	ldr	w10, [sp, #92]
   121d4:	mov	x15, #0x18                  	// #24
   121d8:	lsr	w10, w10, #24
   121dc:	ldr	x16, [sp, #32]
   121e0:	ldr	w10, [x16, w10, uxtw #2]
   121e4:	eor	w9, w9, w10
   121e8:	str	w9, [sp, #92]
   121ec:	ldr	x17, [sp, #104]
   121f0:	ldr	w9, [x17]
   121f4:	str	w9, [sp, #76]
   121f8:	ldr	x17, [sp, #104]
   121fc:	add	x17, x17, #0x4
   12200:	str	x17, [sp, #104]
   12204:	ldr	w9, [sp, #76]
   12208:	and	w9, w9, #0xff
   1220c:	ldr	x17, [sp, #24]
   12210:	ldr	w9, [x17, w9, uxtw #2]
   12214:	ldr	w10, [sp, #76]
   12218:	lsr	w10, w10, w11
   1221c:	and	w10, w10, #0xff
   12220:	ldr	x18, [sp, #16]
   12224:	ldr	w10, [x18, w10, uxtw #2]
   12228:	eor	w9, w9, w10
   1222c:	ldr	w10, [sp, #92]
   12230:	eor	w9, w9, w10
   12234:	ldr	w10, [sp, #76]
   12238:	lsr	w10, w10, w13
   1223c:	and	w10, w10, #0xff
   12240:	ldr	x0, [sp, #8]
   12244:	ldr	w10, [x0, w10, uxtw #2]
   12248:	eor	w9, w9, w10
   1224c:	ldr	w10, [sp, #76]
   12250:	lsr	w10, w10, w15
   12254:	ldr	x1, [sp, #64]
   12258:	ldr	w10, [x1, w10, uxtw #2]
   1225c:	eor	w9, w9, w10
   12260:	str	w9, [sp, #92]
   12264:	b	12158 <lzma_crc32@@XZ_5.0+0xe4>
   12268:	ldr	x8, [sp, #96]
   1226c:	subs	x9, x8, #0x1
   12270:	str	x9, [sp, #96]
   12274:	cbz	x8, 122ac <lzma_crc32@@XZ_5.0+0x238>
   12278:	ldr	x8, [sp, #104]
   1227c:	add	x9, x8, #0x1
   12280:	str	x9, [sp, #104]
   12284:	ldrb	w10, [x8]
   12288:	ldr	w11, [sp, #92]
   1228c:	and	w11, w11, #0xff
   12290:	eor	w10, w10, w11
   12294:	ldr	x8, [sp, #64]
   12298:	ldr	w10, [x8, w10, uxtw #2]
   1229c:	ldr	w11, [sp, #92]
   122a0:	eor	w10, w10, w11, lsr #8
   122a4:	str	w10, [sp, #92]
   122a8:	b	12268 <lzma_crc32@@XZ_5.0+0x1f4>
   122ac:	ldr	w8, [sp, #92]
   122b0:	mvn	w0, w8
   122b4:	add	sp, sp, #0x70
   122b8:	ret

00000000000122bc <lzma_crc64@@XZ_5.0>:
   122bc:	sub	sp, sp, #0x50
   122c0:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   122c4:	ldr	x8, [x8, #3984]
   122c8:	mov	x9, #0x1800                	// #6144
   122cc:	add	x9, x8, x9
   122d0:	add	x10, x8, #0x1, lsl #12
   122d4:	add	x11, x8, #0x800
   122d8:	str	x0, [sp, #72]
   122dc:	str	x1, [sp, #64]
   122e0:	str	x2, [sp, #56]
   122e4:	ldr	x12, [sp, #56]
   122e8:	mvn	x12, x12
   122ec:	str	x12, [sp, #56]
   122f0:	ldr	x12, [sp, #64]
   122f4:	cmp	x12, #0x4
   122f8:	str	x8, [sp, #32]
   122fc:	str	x9, [sp, #24]
   12300:	str	x10, [sp, #16]
   12304:	str	x11, [sp, #8]
   12308:	b.ls	12418 <lzma_crc64@@XZ_5.0+0x15c>  // b.plast
   1230c:	ldr	x8, [sp, #72]
   12310:	and	x8, x8, #0x3
   12314:	cbz	x8, 1235c <lzma_crc64@@XZ_5.0+0xa0>
   12318:	ldr	x8, [sp, #72]
   1231c:	add	x9, x8, #0x1
   12320:	str	x9, [sp, #72]
   12324:	ldrb	w10, [x8]
   12328:	mov	w8, w10
   1232c:	ldr	x9, [sp, #56]
   12330:	and	x9, x9, #0xff
   12334:	eor	x8, x8, x9
   12338:	ldr	x9, [sp, #32]
   1233c:	ldr	x8, [x9, x8, lsl #3]
   12340:	ldr	x11, [sp, #56]
   12344:	eor	x8, x8, x11, lsr #8
   12348:	str	x8, [sp, #56]
   1234c:	ldr	x8, [sp, #64]
   12350:	subs	x8, x8, #0x1
   12354:	str	x8, [sp, #64]
   12358:	b	1230c <lzma_crc64@@XZ_5.0+0x50>
   1235c:	ldr	x8, [sp, #72]
   12360:	ldr	x9, [sp, #64]
   12364:	and	x9, x9, #0xfffffffffffffffc
   12368:	add	x8, x8, x9
   1236c:	str	x8, [sp, #48]
   12370:	ldr	x8, [sp, #64]
   12374:	and	x8, x8, #0x3
   12378:	str	x8, [sp, #64]
   1237c:	ldr	x8, [sp, #72]
   12380:	ldr	x9, [sp, #48]
   12384:	cmp	x8, x9
   12388:	b.cs	12418 <lzma_crc64@@XZ_5.0+0x15c>  // b.hs, b.nlast
   1238c:	ldr	x8, [sp, #56]
   12390:	ldr	x9, [sp, #72]
   12394:	ldr	w10, [x9]
   12398:	mov	w9, w10
   1239c:	eor	x8, x8, x9
   123a0:	str	w8, [sp, #44]
   123a4:	ldr	x9, [sp, #72]
   123a8:	add	x9, x9, #0x4
   123ac:	str	x9, [sp, #72]
   123b0:	ldr	w8, [sp, #44]
   123b4:	and	w8, w8, #0xff
   123b8:	mov	x9, #0x8                   	// #8
   123bc:	ldr	x11, [sp, #24]
   123c0:	ldr	x12, [x11, w8, uxtw #3]
   123c4:	ldr	w8, [sp, #44]
   123c8:	lsr	w8, w8, w9
   123cc:	and	w8, w8, #0xff
   123d0:	ldr	x13, [sp, #16]
   123d4:	ldr	x14, [x13, w8, uxtw #3]
   123d8:	eor	x12, x12, x14
   123dc:	ldr	x14, [sp, #56]
   123e0:	eor	x12, x12, x14, lsr #32
   123e4:	ldr	w8, [sp, #44]
   123e8:	lsr	w8, w8, #16
   123ec:	and	w8, w8, #0xff
   123f0:	ldr	x14, [sp, #8]
   123f4:	ldr	x15, [x14, w8, uxtw #3]
   123f8:	eor	x12, x12, x15
   123fc:	ldr	w8, [sp, #44]
   12400:	lsr	w8, w8, #24
   12404:	ldr	x15, [sp, #32]
   12408:	ldr	x16, [x15, w8, uxtw #3]
   1240c:	eor	x12, x12, x16
   12410:	str	x12, [sp, #56]
   12414:	b	1237c <lzma_crc64@@XZ_5.0+0xc0>
   12418:	ldr	x8, [sp, #64]
   1241c:	subs	x9, x8, #0x1
   12420:	str	x9, [sp, #64]
   12424:	cbz	x8, 12460 <lzma_crc64@@XZ_5.0+0x1a4>
   12428:	ldr	x8, [sp, #72]
   1242c:	add	x9, x8, #0x1
   12430:	str	x9, [sp, #72]
   12434:	ldrb	w10, [x8]
   12438:	mov	w8, w10
   1243c:	ldr	x9, [sp, #56]
   12440:	and	x9, x9, #0xff
   12444:	eor	x8, x8, x9
   12448:	ldr	x9, [sp, #32]
   1244c:	ldr	x8, [x9, x8, lsl #3]
   12450:	ldr	x11, [sp, #56]
   12454:	eor	x8, x8, x11, lsr #8
   12458:	str	x8, [sp, #56]
   1245c:	b	12418 <lzma_crc64@@XZ_5.0+0x15c>
   12460:	ldr	x8, [sp, #56]
   12464:	mvn	x0, x8
   12468:	add	sp, sp, #0x50
   1246c:	ret
   12470:	sub	sp, sp, #0x10
   12474:	adrp	x8, 2f000 <lzma_mode_is_supported@@XZ_5.0+0x14a98>
   12478:	add	x8, x8, #0xb10
   1247c:	str	x0, [sp, #8]
   12480:	ldr	x9, [sp, #8]
   12484:	ldr	q0, [x8]
   12488:	str	q0, [x9, #64]
   1248c:	ldr	q0, [x8, #16]
   12490:	str	q0, [x9, #80]
   12494:	ldr	x8, [sp, #8]
   12498:	str	xzr, [x8, #96]
   1249c:	add	sp, sp, #0x10
   124a0:	ret
   124a4:	sub	sp, sp, #0x40
   124a8:	stp	x29, x30, [sp, #48]
   124ac:	add	x29, sp, #0x30
   124b0:	stur	x0, [x29, #-8]
   124b4:	stur	x1, [x29, #-16]
   124b8:	str	x2, [sp, #24]
   124bc:	ldur	x8, [x29, #-16]
   124c0:	cmp	x8, #0x0
   124c4:	cset	w9, ls  // ls = plast
   124c8:	tbnz	w9, #0, 1256c <lzma_crc64@@XZ_5.0+0x2b0>
   124cc:	ldr	x8, [sp, #24]
   124d0:	ldr	x8, [x8, #96]
   124d4:	and	x8, x8, #0x3f
   124d8:	str	x8, [sp, #16]
   124dc:	ldr	x8, [sp, #16]
   124e0:	mov	x9, #0x40                  	// #64
   124e4:	subs	x8, x9, x8
   124e8:	str	x8, [sp, #8]
   124ec:	ldr	x8, [sp, #8]
   124f0:	ldur	x9, [x29, #-16]
   124f4:	cmp	x8, x9
   124f8:	b.ls	12504 <lzma_crc64@@XZ_5.0+0x248>  // b.plast
   124fc:	ldur	x8, [x29, #-16]
   12500:	str	x8, [sp, #8]
   12504:	ldr	x8, [sp, #24]
   12508:	ldr	x9, [sp, #16]
   1250c:	add	x0, x8, x9
   12510:	ldur	x1, [x29, #-8]
   12514:	ldr	x2, [sp, #8]
   12518:	bl	3090 <memcpy@plt>
   1251c:	ldr	x8, [sp, #8]
   12520:	ldur	x9, [x29, #-8]
   12524:	add	x8, x9, x8
   12528:	stur	x8, [x29, #-8]
   1252c:	ldr	x8, [sp, #8]
   12530:	ldur	x9, [x29, #-16]
   12534:	subs	x8, x9, x8
   12538:	stur	x8, [x29, #-16]
   1253c:	ldr	x8, [sp, #8]
   12540:	ldr	x9, [sp, #24]
   12544:	ldr	x10, [x9, #96]
   12548:	add	x8, x10, x8
   1254c:	str	x8, [x9, #96]
   12550:	ldr	x8, [sp, #24]
   12554:	ldr	x8, [x8, #96]
   12558:	and	x8, x8, #0x3f
   1255c:	cbnz	x8, 12568 <lzma_crc64@@XZ_5.0+0x2ac>
   12560:	ldr	x0, [sp, #24]
   12564:	bl	12578 <lzma_crc64@@XZ_5.0+0x2bc>
   12568:	b	124bc <lzma_crc64@@XZ_5.0+0x200>
   1256c:	ldp	x29, x30, [sp, #48]
   12570:	add	sp, sp, #0x40
   12574:	ret
   12578:	sub	sp, sp, #0x20
   1257c:	stp	x29, x30, [sp, #16]
   12580:	add	x29, sp, #0x10
   12584:	str	x0, [sp, #8]
   12588:	ldr	x8, [sp, #8]
   1258c:	add	x0, x8, #0x40
   12590:	ldr	x1, [sp, #8]
   12594:	bl	12750 <lzma_crc64@@XZ_5.0+0x494>
   12598:	ldp	x29, x30, [sp, #16]
   1259c:	add	sp, sp, #0x20
   125a0:	ret
   125a4:	sub	sp, sp, #0x30
   125a8:	stp	x29, x30, [sp, #32]
   125ac:	add	x29, sp, #0x20
   125b0:	mov	w8, #0x80                  	// #128
   125b4:	stur	x0, [x29, #-8]
   125b8:	ldur	x9, [x29, #-8]
   125bc:	ldr	x9, [x9, #96]
   125c0:	and	x9, x9, #0x3f
   125c4:	str	x9, [sp, #16]
   125c8:	ldur	x9, [x29, #-8]
   125cc:	ldr	x10, [sp, #16]
   125d0:	add	x11, x10, #0x1
   125d4:	str	x11, [sp, #16]
   125d8:	add	x9, x9, x10
   125dc:	strb	w8, [x9]
   125e0:	ldr	x8, [sp, #16]
   125e4:	cmp	x8, #0x38
   125e8:	b.eq	12624 <lzma_crc64@@XZ_5.0+0x368>  // b.none
   125ec:	ldr	x8, [sp, #16]
   125f0:	cmp	x8, #0x40
   125f4:	b.ne	12604 <lzma_crc64@@XZ_5.0+0x348>  // b.any
   125f8:	ldur	x0, [x29, #-8]
   125fc:	bl	12578 <lzma_crc64@@XZ_5.0+0x2bc>
   12600:	str	xzr, [sp, #16]
   12604:	ldur	x8, [x29, #-8]
   12608:	ldr	x9, [sp, #16]
   1260c:	add	x10, x9, #0x1
   12610:	str	x10, [sp, #16]
   12614:	add	x8, x8, x9
   12618:	mov	w11, #0x0                   	// #0
   1261c:	strb	w11, [x8]
   12620:	b	125e0 <lzma_crc64@@XZ_5.0+0x324>
   12624:	ldur	x8, [x29, #-8]
   12628:	ldr	x9, [x8, #96]
   1262c:	mov	x10, #0x8                   	// #8
   12630:	mul	x9, x9, x10
   12634:	str	x9, [x8, #96]
   12638:	ldur	x8, [x29, #-8]
   1263c:	ldr	x0, [x8, #96]
   12640:	bl	126a0 <lzma_crc64@@XZ_5.0+0x3e4>
   12644:	ldur	x8, [x29, #-8]
   12648:	str	x0, [x8, #56]
   1264c:	ldur	x0, [x29, #-8]
   12650:	bl	12578 <lzma_crc64@@XZ_5.0+0x2bc>
   12654:	str	xzr, [sp, #8]
   12658:	ldr	x8, [sp, #8]
   1265c:	cmp	x8, #0x8
   12660:	b.cs	12694 <lzma_crc64@@XZ_5.0+0x3d8>  // b.hs, b.nlast
   12664:	ldur	x8, [x29, #-8]
   12668:	add	x8, x8, #0x40
   1266c:	ldr	x9, [sp, #8]
   12670:	ldr	w0, [x8, x9, lsl #2]
   12674:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12678:	ldur	x8, [x29, #-8]
   1267c:	ldr	x9, [sp, #8]
   12680:	str	w0, [x8, x9, lsl #2]
   12684:	ldr	x8, [sp, #8]
   12688:	add	x8, x8, #0x1
   1268c:	str	x8, [sp, #8]
   12690:	b	12658 <lzma_crc64@@XZ_5.0+0x39c>
   12694:	ldp	x29, x30, [sp, #32]
   12698:	add	sp, sp, #0x30
   1269c:	ret
   126a0:	sub	sp, sp, #0x10
   126a4:	str	x0, [sp, #8]
   126a8:	ldr	x8, [sp, #8]
   126ac:	and	x8, x8, #0xff00000000000000
   126b0:	ldr	x9, [sp, #8]
   126b4:	and	x9, x9, #0xff000000000000
   126b8:	lsr	x9, x9, #40
   126bc:	orr	x8, x9, x8, lsr #56
   126c0:	ldr	x9, [sp, #8]
   126c4:	and	x9, x9, #0xff0000000000
   126c8:	orr	x8, x8, x9, lsr #24
   126cc:	ldr	x9, [sp, #8]
   126d0:	and	x9, x9, #0xff00000000
   126d4:	orr	x8, x8, x9, lsr #8
   126d8:	ldr	x9, [sp, #8]
   126dc:	and	x9, x9, #0xff000000
   126e0:	orr	x8, x8, x9, lsl #8
   126e4:	ldr	x9, [sp, #8]
   126e8:	and	x9, x9, #0xff0000
   126ec:	orr	x8, x8, x9, lsl #24
   126f0:	ldr	x9, [sp, #8]
   126f4:	and	x9, x9, #0xff00
   126f8:	orr	x8, x8, x9, lsl #40
   126fc:	ldr	x9, [sp, #8]
   12700:	and	x9, x9, #0xff
   12704:	orr	x0, x8, x9, lsl #56
   12708:	add	sp, sp, #0x10
   1270c:	ret
   12710:	sub	sp, sp, #0x10
   12714:	str	w0, [sp, #12]
   12718:	ldr	w8, [sp, #12]
   1271c:	and	w8, w8, #0xff000000
   12720:	ldr	w9, [sp, #12]
   12724:	and	w9, w9, #0xff0000
   12728:	lsr	w9, w9, #8
   1272c:	orr	w8, w9, w8, lsr #24
   12730:	ldr	w9, [sp, #12]
   12734:	and	w9, w9, #0xff00
   12738:	orr	w8, w8, w9, lsl #8
   1273c:	ldr	w9, [sp, #12]
   12740:	and	w9, w9, #0xff
   12744:	orr	w0, w8, w9, lsl #24
   12748:	add	sp, sp, #0x10
   1274c:	ret
   12750:	stp	x29, x30, [sp, #-32]!
   12754:	str	x28, [sp, #16]
   12758:	mov	x29, sp
   1275c:	sub	sp, sp, #0x400
   12760:	mov	w8, #0xe                   	// #14
   12764:	mov	w9, #0x5                   	// #5
   12768:	mov	w10, #0x6                   	// #6
   1276c:	adrp	x11, 2f000 <lzma_mode_is_supported@@XZ_5.0+0x14a98>
   12770:	add	x11, x11, #0xb30
   12774:	mov	w12, #0x9                   	// #9
   12778:	mov	w13, #0xb                   	// #11
   1277c:	mov	w14, #0x2                   	// #2
   12780:	mov	w15, #0x10                  	// #16
   12784:	stur	x0, [x29, #-8]
   12788:	stur	x1, [x29, #-16]
   1278c:	ldur	x16, [x29, #-8]
   12790:	ldr	q0, [x16]
   12794:	stur	q0, [x29, #-112]
   12798:	ldr	q0, [x16, #16]
   1279c:	stur	q0, [x29, #-96]
   127a0:	ldur	w17, [x29, #-96]
   127a4:	ldur	w18, [x29, #-96]
   127a8:	ldur	w0, [x29, #-96]
   127ac:	mov	w1, w8
   127b0:	stur	w8, [x29, #-120]
   127b4:	stur	w9, [x29, #-124]
   127b8:	stur	w10, [x29, #-128]
   127bc:	stur	x11, [x29, #-136]
   127c0:	stur	w12, [x29, #-140]
   127c4:	stur	w13, [x29, #-144]
   127c8:	stur	w14, [x29, #-148]
   127cc:	stur	w15, [x29, #-152]
   127d0:	stur	w17, [x29, #-156]
   127d4:	stur	w18, [x29, #-160]
   127d8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   127dc:	ldur	w8, [x29, #-160]
   127e0:	eor	w0, w8, w0
   127e4:	ldur	w1, [x29, #-124]
   127e8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   127ec:	ldur	w8, [x29, #-156]
   127f0:	eor	w0, w8, w0
   127f4:	ldur	w1, [x29, #-128]
   127f8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   127fc:	ldur	w8, [x29, #-88]
   12800:	ldur	w9, [x29, #-96]
   12804:	ldur	w10, [x29, #-92]
   12808:	ldur	w12, [x29, #-88]
   1280c:	eor	w10, w10, w12
   12810:	and	w9, w9, w10
   12814:	eor	w8, w8, w9
   12818:	add	w8, w0, w8
   1281c:	ldur	x11, [x29, #-136]
   12820:	ldr	w9, [x11]
   12824:	add	w8, w8, w9
   12828:	ldur	x16, [x29, #-16]
   1282c:	ldr	w0, [x16]
   12830:	stur	w8, [x29, #-164]
   12834:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12838:	stur	w0, [x29, #-80]
   1283c:	ldur	w8, [x29, #-164]
   12840:	add	w9, w8, w0
   12844:	ldur	w10, [x29, #-84]
   12848:	add	w9, w10, w9
   1284c:	stur	w9, [x29, #-84]
   12850:	ldur	w9, [x29, #-84]
   12854:	ldur	w10, [x29, #-100]
   12858:	add	w9, w10, w9
   1285c:	stur	w9, [x29, #-100]
   12860:	ldur	w9, [x29, #-112]
   12864:	ldur	w10, [x29, #-112]
   12868:	ldur	w0, [x29, #-112]
   1286c:	ldur	w1, [x29, #-140]
   12870:	stur	w9, [x29, #-168]
   12874:	stur	w10, [x29, #-172]
   12878:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1287c:	ldur	w8, [x29, #-172]
   12880:	eor	w0, w8, w0
   12884:	ldur	w1, [x29, #-144]
   12888:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1288c:	ldur	w8, [x29, #-168]
   12890:	eor	w0, w8, w0
   12894:	ldur	w1, [x29, #-148]
   12898:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1289c:	ldur	w8, [x29, #-112]
   128a0:	ldur	w9, [x29, #-108]
   128a4:	ldur	w10, [x29, #-104]
   128a8:	eor	w9, w9, w10
   128ac:	and	w8, w8, w9
   128b0:	ldur	w9, [x29, #-108]
   128b4:	ldur	w10, [x29, #-104]
   128b8:	and	w9, w9, w10
   128bc:	add	w8, w8, w9
   128c0:	add	w8, w0, w8
   128c4:	ldur	w9, [x29, #-84]
   128c8:	add	w8, w9, w8
   128cc:	stur	w8, [x29, #-84]
   128d0:	ldur	w8, [x29, #-100]
   128d4:	ldur	w9, [x29, #-100]
   128d8:	ldur	w0, [x29, #-100]
   128dc:	ldur	w1, [x29, #-120]
   128e0:	stur	w8, [x29, #-176]
   128e4:	stur	w9, [x29, #-180]
   128e8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   128ec:	ldur	w8, [x29, #-180]
   128f0:	eor	w0, w8, w0
   128f4:	ldur	w1, [x29, #-124]
   128f8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   128fc:	ldur	w8, [x29, #-176]
   12900:	eor	w0, w8, w0
   12904:	ldur	w1, [x29, #-128]
   12908:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1290c:	ldur	w8, [x29, #-92]
   12910:	ldur	w9, [x29, #-100]
   12914:	ldur	w10, [x29, #-96]
   12918:	ldur	w12, [x29, #-92]
   1291c:	eor	w10, w10, w12
   12920:	and	w9, w9, w10
   12924:	eor	w8, w8, w9
   12928:	add	w8, w0, w8
   1292c:	ldur	x11, [x29, #-136]
   12930:	ldr	w9, [x11, #4]
   12934:	add	w8, w8, w9
   12938:	ldur	x16, [x29, #-16]
   1293c:	ldr	w0, [x16, #4]
   12940:	stur	w8, [x29, #-184]
   12944:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12948:	stur	w0, [x29, #-76]
   1294c:	ldur	w8, [x29, #-184]
   12950:	add	w9, w8, w0
   12954:	ldur	w10, [x29, #-88]
   12958:	add	w9, w10, w9
   1295c:	stur	w9, [x29, #-88]
   12960:	ldur	w9, [x29, #-88]
   12964:	ldur	w10, [x29, #-104]
   12968:	add	w9, w10, w9
   1296c:	stur	w9, [x29, #-104]
   12970:	ldur	w9, [x29, #-84]
   12974:	ldur	w10, [x29, #-84]
   12978:	ldur	w0, [x29, #-84]
   1297c:	ldur	w1, [x29, #-140]
   12980:	stur	w9, [x29, #-188]
   12984:	stur	w10, [x29, #-192]
   12988:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1298c:	ldur	w8, [x29, #-192]
   12990:	eor	w0, w8, w0
   12994:	ldur	w1, [x29, #-144]
   12998:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1299c:	ldur	w8, [x29, #-188]
   129a0:	eor	w0, w8, w0
   129a4:	ldur	w1, [x29, #-148]
   129a8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   129ac:	ldur	w8, [x29, #-84]
   129b0:	ldur	w9, [x29, #-112]
   129b4:	ldur	w10, [x29, #-108]
   129b8:	eor	w9, w9, w10
   129bc:	and	w8, w8, w9
   129c0:	ldur	w9, [x29, #-112]
   129c4:	ldur	w10, [x29, #-108]
   129c8:	and	w9, w9, w10
   129cc:	add	w8, w8, w9
   129d0:	add	w8, w0, w8
   129d4:	ldur	w9, [x29, #-88]
   129d8:	add	w8, w9, w8
   129dc:	stur	w8, [x29, #-88]
   129e0:	ldur	w8, [x29, #-104]
   129e4:	ldur	w9, [x29, #-104]
   129e8:	ldur	w0, [x29, #-104]
   129ec:	ldur	w1, [x29, #-120]
   129f0:	stur	w8, [x29, #-196]
   129f4:	stur	w9, [x29, #-200]
   129f8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   129fc:	ldur	w8, [x29, #-200]
   12a00:	eor	w0, w8, w0
   12a04:	ldur	w1, [x29, #-124]
   12a08:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12a0c:	ldur	w8, [x29, #-196]
   12a10:	eor	w0, w8, w0
   12a14:	ldur	w1, [x29, #-128]
   12a18:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12a1c:	ldur	w8, [x29, #-96]
   12a20:	ldur	w9, [x29, #-104]
   12a24:	ldur	w10, [x29, #-100]
   12a28:	ldur	w12, [x29, #-96]
   12a2c:	eor	w10, w10, w12
   12a30:	and	w9, w9, w10
   12a34:	eor	w8, w8, w9
   12a38:	add	w8, w0, w8
   12a3c:	ldur	x11, [x29, #-136]
   12a40:	ldr	w9, [x11, #8]
   12a44:	add	w8, w8, w9
   12a48:	ldur	x16, [x29, #-16]
   12a4c:	ldr	w0, [x16, #8]
   12a50:	stur	w8, [x29, #-204]
   12a54:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12a58:	stur	w0, [x29, #-72]
   12a5c:	ldur	w8, [x29, #-204]
   12a60:	add	w9, w8, w0
   12a64:	ldur	w10, [x29, #-92]
   12a68:	add	w9, w10, w9
   12a6c:	stur	w9, [x29, #-92]
   12a70:	ldur	w9, [x29, #-92]
   12a74:	ldur	w10, [x29, #-108]
   12a78:	add	w9, w10, w9
   12a7c:	stur	w9, [x29, #-108]
   12a80:	ldur	w9, [x29, #-88]
   12a84:	ldur	w10, [x29, #-88]
   12a88:	ldur	w0, [x29, #-88]
   12a8c:	ldur	w1, [x29, #-140]
   12a90:	stur	w9, [x29, #-208]
   12a94:	stur	w10, [x29, #-212]
   12a98:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12a9c:	ldur	w8, [x29, #-212]
   12aa0:	eor	w0, w8, w0
   12aa4:	ldur	w1, [x29, #-144]
   12aa8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12aac:	ldur	w8, [x29, #-208]
   12ab0:	eor	w0, w8, w0
   12ab4:	ldur	w1, [x29, #-148]
   12ab8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12abc:	ldur	w8, [x29, #-88]
   12ac0:	ldur	w9, [x29, #-84]
   12ac4:	ldur	w10, [x29, #-112]
   12ac8:	eor	w9, w9, w10
   12acc:	and	w8, w8, w9
   12ad0:	ldur	w9, [x29, #-84]
   12ad4:	ldur	w10, [x29, #-112]
   12ad8:	and	w9, w9, w10
   12adc:	add	w8, w8, w9
   12ae0:	add	w8, w0, w8
   12ae4:	ldur	w9, [x29, #-92]
   12ae8:	add	w8, w9, w8
   12aec:	stur	w8, [x29, #-92]
   12af0:	ldur	w8, [x29, #-108]
   12af4:	ldur	w9, [x29, #-108]
   12af8:	ldur	w0, [x29, #-108]
   12afc:	ldur	w1, [x29, #-120]
   12b00:	stur	w8, [x29, #-216]
   12b04:	stur	w9, [x29, #-220]
   12b08:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12b0c:	ldur	w8, [x29, #-220]
   12b10:	eor	w0, w8, w0
   12b14:	ldur	w1, [x29, #-124]
   12b18:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12b1c:	ldur	w8, [x29, #-216]
   12b20:	eor	w0, w8, w0
   12b24:	ldur	w1, [x29, #-128]
   12b28:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12b2c:	ldur	w8, [x29, #-100]
   12b30:	ldur	w9, [x29, #-108]
   12b34:	ldur	w10, [x29, #-104]
   12b38:	ldur	w12, [x29, #-100]
   12b3c:	eor	w10, w10, w12
   12b40:	and	w9, w9, w10
   12b44:	eor	w8, w8, w9
   12b48:	add	w8, w0, w8
   12b4c:	ldur	x11, [x29, #-136]
   12b50:	ldr	w9, [x11, #12]
   12b54:	add	w8, w8, w9
   12b58:	ldur	x16, [x29, #-16]
   12b5c:	ldr	w0, [x16, #12]
   12b60:	stur	w8, [x29, #-224]
   12b64:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12b68:	stur	w0, [x29, #-68]
   12b6c:	ldur	w8, [x29, #-224]
   12b70:	add	w9, w8, w0
   12b74:	ldur	w10, [x29, #-96]
   12b78:	add	w9, w10, w9
   12b7c:	stur	w9, [x29, #-96]
   12b80:	ldur	w9, [x29, #-96]
   12b84:	ldur	w10, [x29, #-112]
   12b88:	add	w9, w10, w9
   12b8c:	stur	w9, [x29, #-112]
   12b90:	ldur	w9, [x29, #-92]
   12b94:	ldur	w10, [x29, #-92]
   12b98:	ldur	w0, [x29, #-92]
   12b9c:	ldur	w1, [x29, #-140]
   12ba0:	stur	w9, [x29, #-228]
   12ba4:	stur	w10, [x29, #-232]
   12ba8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12bac:	ldur	w8, [x29, #-232]
   12bb0:	eor	w0, w8, w0
   12bb4:	ldur	w1, [x29, #-144]
   12bb8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12bbc:	ldur	w8, [x29, #-228]
   12bc0:	eor	w0, w8, w0
   12bc4:	ldur	w1, [x29, #-148]
   12bc8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12bcc:	ldur	w8, [x29, #-92]
   12bd0:	ldur	w9, [x29, #-88]
   12bd4:	ldur	w10, [x29, #-84]
   12bd8:	eor	w9, w9, w10
   12bdc:	and	w8, w8, w9
   12be0:	ldur	w9, [x29, #-88]
   12be4:	ldur	w10, [x29, #-84]
   12be8:	and	w9, w9, w10
   12bec:	add	w8, w8, w9
   12bf0:	add	w8, w0, w8
   12bf4:	ldur	w9, [x29, #-96]
   12bf8:	add	w8, w9, w8
   12bfc:	stur	w8, [x29, #-96]
   12c00:	ldur	w8, [x29, #-112]
   12c04:	ldur	w9, [x29, #-112]
   12c08:	ldur	w0, [x29, #-112]
   12c0c:	ldur	w1, [x29, #-120]
   12c10:	stur	w8, [x29, #-236]
   12c14:	stur	w9, [x29, #-240]
   12c18:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12c1c:	ldur	w8, [x29, #-240]
   12c20:	eor	w0, w8, w0
   12c24:	ldur	w1, [x29, #-124]
   12c28:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12c2c:	ldur	w8, [x29, #-236]
   12c30:	eor	w0, w8, w0
   12c34:	ldur	w1, [x29, #-128]
   12c38:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12c3c:	ldur	w8, [x29, #-104]
   12c40:	ldur	w9, [x29, #-112]
   12c44:	ldur	w10, [x29, #-108]
   12c48:	ldur	w12, [x29, #-104]
   12c4c:	eor	w10, w10, w12
   12c50:	and	w9, w9, w10
   12c54:	eor	w8, w8, w9
   12c58:	add	w8, w0, w8
   12c5c:	ldur	x11, [x29, #-136]
   12c60:	ldr	w9, [x11, #16]
   12c64:	add	w8, w8, w9
   12c68:	ldur	x16, [x29, #-16]
   12c6c:	ldr	w0, [x16, #16]
   12c70:	stur	w8, [x29, #-244]
   12c74:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12c78:	stur	w0, [x29, #-64]
   12c7c:	ldur	w8, [x29, #-244]
   12c80:	add	w9, w8, w0
   12c84:	ldur	w10, [x29, #-100]
   12c88:	add	w9, w10, w9
   12c8c:	stur	w9, [x29, #-100]
   12c90:	ldur	w9, [x29, #-100]
   12c94:	ldur	w10, [x29, #-84]
   12c98:	add	w9, w10, w9
   12c9c:	stur	w9, [x29, #-84]
   12ca0:	ldur	w9, [x29, #-96]
   12ca4:	ldur	w10, [x29, #-96]
   12ca8:	ldur	w0, [x29, #-96]
   12cac:	ldur	w1, [x29, #-140]
   12cb0:	stur	w9, [x29, #-248]
   12cb4:	stur	w10, [x29, #-252]
   12cb8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12cbc:	ldur	w8, [x29, #-252]
   12cc0:	eor	w0, w8, w0
   12cc4:	ldur	w1, [x29, #-144]
   12cc8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12ccc:	ldur	w8, [x29, #-248]
   12cd0:	eor	w0, w8, w0
   12cd4:	ldur	w1, [x29, #-148]
   12cd8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12cdc:	ldur	w8, [x29, #-96]
   12ce0:	ldur	w9, [x29, #-92]
   12ce4:	ldur	w10, [x29, #-88]
   12ce8:	eor	w9, w9, w10
   12cec:	and	w8, w8, w9
   12cf0:	ldur	w9, [x29, #-92]
   12cf4:	ldur	w10, [x29, #-88]
   12cf8:	and	w9, w9, w10
   12cfc:	add	w8, w8, w9
   12d00:	add	w8, w0, w8
   12d04:	ldur	w9, [x29, #-100]
   12d08:	add	w8, w9, w8
   12d0c:	stur	w8, [x29, #-100]
   12d10:	ldur	w8, [x29, #-84]
   12d14:	ldur	w9, [x29, #-84]
   12d18:	ldur	w0, [x29, #-84]
   12d1c:	ldur	w1, [x29, #-120]
   12d20:	stur	w8, [x29, #-256]
   12d24:	str	w9, [sp, #764]
   12d28:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12d2c:	ldr	w8, [sp, #764]
   12d30:	eor	w0, w8, w0
   12d34:	ldur	w1, [x29, #-124]
   12d38:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12d3c:	ldur	w8, [x29, #-256]
   12d40:	eor	w0, w8, w0
   12d44:	ldur	w1, [x29, #-128]
   12d48:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12d4c:	ldur	w8, [x29, #-108]
   12d50:	ldur	w9, [x29, #-84]
   12d54:	ldur	w10, [x29, #-112]
   12d58:	ldur	w12, [x29, #-108]
   12d5c:	eor	w10, w10, w12
   12d60:	and	w9, w9, w10
   12d64:	eor	w8, w8, w9
   12d68:	add	w8, w0, w8
   12d6c:	ldur	x11, [x29, #-136]
   12d70:	ldr	w9, [x11, #20]
   12d74:	add	w8, w8, w9
   12d78:	ldur	x16, [x29, #-16]
   12d7c:	ldr	w0, [x16, #20]
   12d80:	str	w8, [sp, #760]
   12d84:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12d88:	stur	w0, [x29, #-60]
   12d8c:	ldr	w8, [sp, #760]
   12d90:	add	w9, w8, w0
   12d94:	ldur	w10, [x29, #-104]
   12d98:	add	w9, w10, w9
   12d9c:	stur	w9, [x29, #-104]
   12da0:	ldur	w9, [x29, #-104]
   12da4:	ldur	w10, [x29, #-88]
   12da8:	add	w9, w10, w9
   12dac:	stur	w9, [x29, #-88]
   12db0:	ldur	w9, [x29, #-100]
   12db4:	ldur	w10, [x29, #-100]
   12db8:	ldur	w0, [x29, #-100]
   12dbc:	ldur	w1, [x29, #-140]
   12dc0:	str	w9, [sp, #756]
   12dc4:	str	w10, [sp, #752]
   12dc8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12dcc:	ldr	w8, [sp, #752]
   12dd0:	eor	w0, w8, w0
   12dd4:	ldur	w1, [x29, #-144]
   12dd8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12ddc:	ldr	w8, [sp, #756]
   12de0:	eor	w0, w8, w0
   12de4:	ldur	w1, [x29, #-148]
   12de8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12dec:	ldur	w8, [x29, #-100]
   12df0:	ldur	w9, [x29, #-96]
   12df4:	ldur	w10, [x29, #-92]
   12df8:	eor	w9, w9, w10
   12dfc:	and	w8, w8, w9
   12e00:	ldur	w9, [x29, #-96]
   12e04:	ldur	w10, [x29, #-92]
   12e08:	and	w9, w9, w10
   12e0c:	add	w8, w8, w9
   12e10:	add	w8, w0, w8
   12e14:	ldur	w9, [x29, #-104]
   12e18:	add	w8, w9, w8
   12e1c:	stur	w8, [x29, #-104]
   12e20:	ldur	w8, [x29, #-88]
   12e24:	ldur	w9, [x29, #-88]
   12e28:	ldur	w0, [x29, #-88]
   12e2c:	ldur	w1, [x29, #-120]
   12e30:	str	w8, [sp, #748]
   12e34:	str	w9, [sp, #744]
   12e38:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12e3c:	ldr	w8, [sp, #744]
   12e40:	eor	w0, w8, w0
   12e44:	ldur	w1, [x29, #-124]
   12e48:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12e4c:	ldr	w8, [sp, #748]
   12e50:	eor	w0, w8, w0
   12e54:	ldur	w1, [x29, #-128]
   12e58:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12e5c:	ldur	w8, [x29, #-112]
   12e60:	ldur	w9, [x29, #-88]
   12e64:	ldur	w10, [x29, #-84]
   12e68:	ldur	w12, [x29, #-112]
   12e6c:	eor	w10, w10, w12
   12e70:	and	w9, w9, w10
   12e74:	eor	w8, w8, w9
   12e78:	add	w8, w0, w8
   12e7c:	ldur	x11, [x29, #-136]
   12e80:	ldr	w9, [x11, #24]
   12e84:	add	w8, w8, w9
   12e88:	ldur	x16, [x29, #-16]
   12e8c:	ldr	w0, [x16, #24]
   12e90:	str	w8, [sp, #740]
   12e94:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12e98:	stur	w0, [x29, #-56]
   12e9c:	ldr	w8, [sp, #740]
   12ea0:	add	w9, w8, w0
   12ea4:	ldur	w10, [x29, #-108]
   12ea8:	add	w9, w10, w9
   12eac:	stur	w9, [x29, #-108]
   12eb0:	ldur	w9, [x29, #-108]
   12eb4:	ldur	w10, [x29, #-92]
   12eb8:	add	w9, w10, w9
   12ebc:	stur	w9, [x29, #-92]
   12ec0:	ldur	w9, [x29, #-104]
   12ec4:	ldur	w10, [x29, #-104]
   12ec8:	ldur	w0, [x29, #-104]
   12ecc:	ldur	w1, [x29, #-140]
   12ed0:	str	w9, [sp, #736]
   12ed4:	str	w10, [sp, #732]
   12ed8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12edc:	ldr	w8, [sp, #732]
   12ee0:	eor	w0, w8, w0
   12ee4:	ldur	w1, [x29, #-144]
   12ee8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12eec:	ldr	w8, [sp, #736]
   12ef0:	eor	w0, w8, w0
   12ef4:	ldur	w1, [x29, #-148]
   12ef8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12efc:	ldur	w8, [x29, #-104]
   12f00:	ldur	w9, [x29, #-100]
   12f04:	ldur	w10, [x29, #-96]
   12f08:	eor	w9, w9, w10
   12f0c:	and	w8, w8, w9
   12f10:	ldur	w9, [x29, #-100]
   12f14:	ldur	w10, [x29, #-96]
   12f18:	and	w9, w9, w10
   12f1c:	add	w8, w8, w9
   12f20:	add	w8, w0, w8
   12f24:	ldur	w9, [x29, #-108]
   12f28:	add	w8, w9, w8
   12f2c:	stur	w8, [x29, #-108]
   12f30:	ldur	w8, [x29, #-92]
   12f34:	ldur	w9, [x29, #-92]
   12f38:	ldur	w0, [x29, #-92]
   12f3c:	ldur	w1, [x29, #-120]
   12f40:	str	w8, [sp, #728]
   12f44:	str	w9, [sp, #724]
   12f48:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12f4c:	ldr	w8, [sp, #724]
   12f50:	eor	w0, w8, w0
   12f54:	ldur	w1, [x29, #-124]
   12f58:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12f5c:	ldr	w8, [sp, #728]
   12f60:	eor	w0, w8, w0
   12f64:	ldur	w1, [x29, #-128]
   12f68:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12f6c:	ldur	w8, [x29, #-84]
   12f70:	ldur	w9, [x29, #-92]
   12f74:	ldur	w10, [x29, #-88]
   12f78:	ldur	w12, [x29, #-84]
   12f7c:	eor	w10, w10, w12
   12f80:	and	w9, w9, w10
   12f84:	eor	w8, w8, w9
   12f88:	add	w8, w0, w8
   12f8c:	ldur	x11, [x29, #-136]
   12f90:	ldr	w9, [x11, #28]
   12f94:	add	w8, w8, w9
   12f98:	ldur	x16, [x29, #-16]
   12f9c:	ldr	w0, [x16, #28]
   12fa0:	str	w8, [sp, #720]
   12fa4:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   12fa8:	stur	w0, [x29, #-52]
   12fac:	ldr	w8, [sp, #720]
   12fb0:	add	w9, w8, w0
   12fb4:	ldur	w10, [x29, #-112]
   12fb8:	add	w9, w10, w9
   12fbc:	stur	w9, [x29, #-112]
   12fc0:	ldur	w9, [x29, #-112]
   12fc4:	ldur	w10, [x29, #-96]
   12fc8:	add	w9, w10, w9
   12fcc:	stur	w9, [x29, #-96]
   12fd0:	ldur	w9, [x29, #-108]
   12fd4:	ldur	w10, [x29, #-108]
   12fd8:	ldur	w0, [x29, #-108]
   12fdc:	ldur	w1, [x29, #-140]
   12fe0:	str	w9, [sp, #716]
   12fe4:	str	w10, [sp, #712]
   12fe8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12fec:	ldr	w8, [sp, #712]
   12ff0:	eor	w0, w8, w0
   12ff4:	ldur	w1, [x29, #-144]
   12ff8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   12ffc:	ldr	w8, [sp, #716]
   13000:	eor	w0, w8, w0
   13004:	ldur	w1, [x29, #-148]
   13008:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1300c:	ldur	w8, [x29, #-108]
   13010:	ldur	w9, [x29, #-104]
   13014:	ldur	w10, [x29, #-100]
   13018:	eor	w9, w9, w10
   1301c:	and	w8, w8, w9
   13020:	ldur	w9, [x29, #-104]
   13024:	ldur	w10, [x29, #-100]
   13028:	and	w9, w9, w10
   1302c:	add	w8, w8, w9
   13030:	add	w8, w0, w8
   13034:	ldur	w9, [x29, #-112]
   13038:	add	w8, w9, w8
   1303c:	stur	w8, [x29, #-112]
   13040:	ldur	w8, [x29, #-96]
   13044:	ldur	w9, [x29, #-96]
   13048:	ldur	w0, [x29, #-96]
   1304c:	ldur	w1, [x29, #-120]
   13050:	str	w8, [sp, #708]
   13054:	str	w9, [sp, #704]
   13058:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1305c:	ldr	w8, [sp, #704]
   13060:	eor	w0, w8, w0
   13064:	ldur	w1, [x29, #-124]
   13068:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1306c:	ldr	w8, [sp, #708]
   13070:	eor	w0, w8, w0
   13074:	ldur	w1, [x29, #-128]
   13078:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1307c:	ldur	w8, [x29, #-88]
   13080:	ldur	w9, [x29, #-96]
   13084:	ldur	w10, [x29, #-92]
   13088:	ldur	w12, [x29, #-88]
   1308c:	eor	w10, w10, w12
   13090:	and	w9, w9, w10
   13094:	eor	w8, w8, w9
   13098:	add	w8, w0, w8
   1309c:	ldur	x11, [x29, #-136]
   130a0:	ldr	w9, [x11, #32]
   130a4:	add	w8, w8, w9
   130a8:	ldur	x16, [x29, #-16]
   130ac:	ldr	w0, [x16, #32]
   130b0:	str	w8, [sp, #700]
   130b4:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   130b8:	stur	w0, [x29, #-48]
   130bc:	ldr	w8, [sp, #700]
   130c0:	add	w9, w8, w0
   130c4:	ldur	w10, [x29, #-84]
   130c8:	add	w9, w10, w9
   130cc:	stur	w9, [x29, #-84]
   130d0:	ldur	w9, [x29, #-84]
   130d4:	ldur	w10, [x29, #-100]
   130d8:	add	w9, w10, w9
   130dc:	stur	w9, [x29, #-100]
   130e0:	ldur	w9, [x29, #-112]
   130e4:	ldur	w10, [x29, #-112]
   130e8:	ldur	w0, [x29, #-112]
   130ec:	ldur	w1, [x29, #-140]
   130f0:	str	w9, [sp, #696]
   130f4:	str	w10, [sp, #692]
   130f8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   130fc:	ldr	w8, [sp, #692]
   13100:	eor	w0, w8, w0
   13104:	ldur	w1, [x29, #-144]
   13108:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1310c:	ldr	w8, [sp, #696]
   13110:	eor	w0, w8, w0
   13114:	ldur	w1, [x29, #-148]
   13118:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1311c:	ldur	w8, [x29, #-112]
   13120:	ldur	w9, [x29, #-108]
   13124:	ldur	w10, [x29, #-104]
   13128:	eor	w9, w9, w10
   1312c:	and	w8, w8, w9
   13130:	ldur	w9, [x29, #-108]
   13134:	ldur	w10, [x29, #-104]
   13138:	and	w9, w9, w10
   1313c:	add	w8, w8, w9
   13140:	add	w8, w0, w8
   13144:	ldur	w9, [x29, #-84]
   13148:	add	w8, w9, w8
   1314c:	stur	w8, [x29, #-84]
   13150:	ldur	w8, [x29, #-100]
   13154:	ldur	w9, [x29, #-100]
   13158:	ldur	w0, [x29, #-100]
   1315c:	ldur	w1, [x29, #-120]
   13160:	str	w8, [sp, #688]
   13164:	str	w9, [sp, #684]
   13168:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1316c:	ldr	w8, [sp, #684]
   13170:	eor	w0, w8, w0
   13174:	ldur	w1, [x29, #-124]
   13178:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1317c:	ldr	w8, [sp, #688]
   13180:	eor	w0, w8, w0
   13184:	ldur	w1, [x29, #-128]
   13188:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1318c:	ldur	w8, [x29, #-92]
   13190:	ldur	w9, [x29, #-100]
   13194:	ldur	w10, [x29, #-96]
   13198:	ldur	w12, [x29, #-92]
   1319c:	eor	w10, w10, w12
   131a0:	and	w9, w9, w10
   131a4:	eor	w8, w8, w9
   131a8:	add	w8, w0, w8
   131ac:	ldur	x11, [x29, #-136]
   131b0:	ldr	w9, [x11, #36]
   131b4:	add	w8, w8, w9
   131b8:	ldur	x16, [x29, #-16]
   131bc:	ldr	w0, [x16, #36]
   131c0:	str	w8, [sp, #680]
   131c4:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   131c8:	stur	w0, [x29, #-44]
   131cc:	ldr	w8, [sp, #680]
   131d0:	add	w9, w8, w0
   131d4:	ldur	w10, [x29, #-88]
   131d8:	add	w9, w10, w9
   131dc:	stur	w9, [x29, #-88]
   131e0:	ldur	w9, [x29, #-88]
   131e4:	ldur	w10, [x29, #-104]
   131e8:	add	w9, w10, w9
   131ec:	stur	w9, [x29, #-104]
   131f0:	ldur	w9, [x29, #-84]
   131f4:	ldur	w10, [x29, #-84]
   131f8:	ldur	w0, [x29, #-84]
   131fc:	ldur	w1, [x29, #-140]
   13200:	str	w9, [sp, #676]
   13204:	str	w10, [sp, #672]
   13208:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1320c:	ldr	w8, [sp, #672]
   13210:	eor	w0, w8, w0
   13214:	ldur	w1, [x29, #-144]
   13218:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1321c:	ldr	w8, [sp, #676]
   13220:	eor	w0, w8, w0
   13224:	ldur	w1, [x29, #-148]
   13228:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1322c:	ldur	w8, [x29, #-84]
   13230:	ldur	w9, [x29, #-112]
   13234:	ldur	w10, [x29, #-108]
   13238:	eor	w9, w9, w10
   1323c:	and	w8, w8, w9
   13240:	ldur	w9, [x29, #-112]
   13244:	ldur	w10, [x29, #-108]
   13248:	and	w9, w9, w10
   1324c:	add	w8, w8, w9
   13250:	add	w8, w0, w8
   13254:	ldur	w9, [x29, #-88]
   13258:	add	w8, w9, w8
   1325c:	stur	w8, [x29, #-88]
   13260:	ldur	w8, [x29, #-104]
   13264:	ldur	w9, [x29, #-104]
   13268:	ldur	w0, [x29, #-104]
   1326c:	ldur	w1, [x29, #-120]
   13270:	str	w8, [sp, #668]
   13274:	str	w9, [sp, #664]
   13278:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1327c:	ldr	w8, [sp, #664]
   13280:	eor	w0, w8, w0
   13284:	ldur	w1, [x29, #-124]
   13288:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1328c:	ldr	w8, [sp, #668]
   13290:	eor	w0, w8, w0
   13294:	ldur	w1, [x29, #-128]
   13298:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1329c:	ldur	w8, [x29, #-96]
   132a0:	ldur	w9, [x29, #-104]
   132a4:	ldur	w10, [x29, #-100]
   132a8:	ldur	w12, [x29, #-96]
   132ac:	eor	w10, w10, w12
   132b0:	and	w9, w9, w10
   132b4:	eor	w8, w8, w9
   132b8:	add	w8, w0, w8
   132bc:	ldur	x11, [x29, #-136]
   132c0:	ldr	w9, [x11, #40]
   132c4:	add	w8, w8, w9
   132c8:	ldur	x16, [x29, #-16]
   132cc:	ldr	w0, [x16, #40]
   132d0:	str	w8, [sp, #660]
   132d4:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   132d8:	stur	w0, [x29, #-40]
   132dc:	ldr	w8, [sp, #660]
   132e0:	add	w9, w8, w0
   132e4:	ldur	w10, [x29, #-92]
   132e8:	add	w9, w10, w9
   132ec:	stur	w9, [x29, #-92]
   132f0:	ldur	w9, [x29, #-92]
   132f4:	ldur	w10, [x29, #-108]
   132f8:	add	w9, w10, w9
   132fc:	stur	w9, [x29, #-108]
   13300:	ldur	w9, [x29, #-88]
   13304:	ldur	w10, [x29, #-88]
   13308:	ldur	w0, [x29, #-88]
   1330c:	ldur	w1, [x29, #-140]
   13310:	str	w9, [sp, #656]
   13314:	str	w10, [sp, #652]
   13318:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1331c:	ldr	w8, [sp, #652]
   13320:	eor	w0, w8, w0
   13324:	ldur	w1, [x29, #-144]
   13328:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1332c:	ldr	w8, [sp, #656]
   13330:	eor	w0, w8, w0
   13334:	ldur	w1, [x29, #-148]
   13338:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1333c:	ldur	w8, [x29, #-88]
   13340:	ldur	w9, [x29, #-84]
   13344:	ldur	w10, [x29, #-112]
   13348:	eor	w9, w9, w10
   1334c:	and	w8, w8, w9
   13350:	ldur	w9, [x29, #-84]
   13354:	ldur	w10, [x29, #-112]
   13358:	and	w9, w9, w10
   1335c:	add	w8, w8, w9
   13360:	add	w8, w0, w8
   13364:	ldur	w9, [x29, #-92]
   13368:	add	w8, w9, w8
   1336c:	stur	w8, [x29, #-92]
   13370:	ldur	w8, [x29, #-108]
   13374:	ldur	w9, [x29, #-108]
   13378:	ldur	w0, [x29, #-108]
   1337c:	ldur	w1, [x29, #-120]
   13380:	str	w8, [sp, #648]
   13384:	str	w9, [sp, #644]
   13388:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1338c:	ldr	w8, [sp, #644]
   13390:	eor	w0, w8, w0
   13394:	ldur	w1, [x29, #-124]
   13398:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1339c:	ldr	w8, [sp, #648]
   133a0:	eor	w0, w8, w0
   133a4:	ldur	w1, [x29, #-128]
   133a8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   133ac:	ldur	w8, [x29, #-100]
   133b0:	ldur	w9, [x29, #-108]
   133b4:	ldur	w10, [x29, #-104]
   133b8:	ldur	w12, [x29, #-100]
   133bc:	eor	w10, w10, w12
   133c0:	and	w9, w9, w10
   133c4:	eor	w8, w8, w9
   133c8:	add	w8, w0, w8
   133cc:	ldur	x11, [x29, #-136]
   133d0:	ldr	w9, [x11, #44]
   133d4:	add	w8, w8, w9
   133d8:	ldur	x16, [x29, #-16]
   133dc:	ldr	w0, [x16, #44]
   133e0:	str	w8, [sp, #640]
   133e4:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   133e8:	stur	w0, [x29, #-36]
   133ec:	ldr	w8, [sp, #640]
   133f0:	add	w9, w8, w0
   133f4:	ldur	w10, [x29, #-96]
   133f8:	add	w9, w10, w9
   133fc:	stur	w9, [x29, #-96]
   13400:	ldur	w9, [x29, #-96]
   13404:	ldur	w10, [x29, #-112]
   13408:	add	w9, w10, w9
   1340c:	stur	w9, [x29, #-112]
   13410:	ldur	w9, [x29, #-92]
   13414:	ldur	w10, [x29, #-92]
   13418:	ldur	w0, [x29, #-92]
   1341c:	ldur	w1, [x29, #-140]
   13420:	str	w9, [sp, #636]
   13424:	str	w10, [sp, #632]
   13428:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1342c:	ldr	w8, [sp, #632]
   13430:	eor	w0, w8, w0
   13434:	ldur	w1, [x29, #-144]
   13438:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1343c:	ldr	w8, [sp, #636]
   13440:	eor	w0, w8, w0
   13444:	ldur	w1, [x29, #-148]
   13448:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1344c:	ldur	w8, [x29, #-92]
   13450:	ldur	w9, [x29, #-88]
   13454:	ldur	w10, [x29, #-84]
   13458:	eor	w9, w9, w10
   1345c:	and	w8, w8, w9
   13460:	ldur	w9, [x29, #-88]
   13464:	ldur	w10, [x29, #-84]
   13468:	and	w9, w9, w10
   1346c:	add	w8, w8, w9
   13470:	add	w8, w0, w8
   13474:	ldur	w9, [x29, #-96]
   13478:	add	w8, w9, w8
   1347c:	stur	w8, [x29, #-96]
   13480:	ldur	w8, [x29, #-112]
   13484:	ldur	w9, [x29, #-112]
   13488:	ldur	w0, [x29, #-112]
   1348c:	ldur	w1, [x29, #-120]
   13490:	str	w8, [sp, #628]
   13494:	str	w9, [sp, #624]
   13498:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1349c:	ldr	w8, [sp, #624]
   134a0:	eor	w0, w8, w0
   134a4:	ldur	w1, [x29, #-124]
   134a8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   134ac:	ldr	w8, [sp, #628]
   134b0:	eor	w0, w8, w0
   134b4:	ldur	w1, [x29, #-128]
   134b8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   134bc:	ldur	w8, [x29, #-104]
   134c0:	ldur	w9, [x29, #-112]
   134c4:	ldur	w10, [x29, #-108]
   134c8:	ldur	w12, [x29, #-104]
   134cc:	eor	w10, w10, w12
   134d0:	and	w9, w9, w10
   134d4:	eor	w8, w8, w9
   134d8:	add	w8, w0, w8
   134dc:	ldur	x11, [x29, #-136]
   134e0:	ldr	w9, [x11, #48]
   134e4:	add	w8, w8, w9
   134e8:	ldur	x16, [x29, #-16]
   134ec:	ldr	w0, [x16, #48]
   134f0:	str	w8, [sp, #620]
   134f4:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   134f8:	stur	w0, [x29, #-32]
   134fc:	ldr	w8, [sp, #620]
   13500:	add	w9, w8, w0
   13504:	ldur	w10, [x29, #-100]
   13508:	add	w9, w10, w9
   1350c:	stur	w9, [x29, #-100]
   13510:	ldur	w9, [x29, #-100]
   13514:	ldur	w10, [x29, #-84]
   13518:	add	w9, w10, w9
   1351c:	stur	w9, [x29, #-84]
   13520:	ldur	w9, [x29, #-96]
   13524:	ldur	w10, [x29, #-96]
   13528:	ldur	w0, [x29, #-96]
   1352c:	ldur	w1, [x29, #-140]
   13530:	str	w9, [sp, #616]
   13534:	str	w10, [sp, #612]
   13538:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1353c:	ldr	w8, [sp, #612]
   13540:	eor	w0, w8, w0
   13544:	ldur	w1, [x29, #-144]
   13548:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1354c:	ldr	w8, [sp, #616]
   13550:	eor	w0, w8, w0
   13554:	ldur	w1, [x29, #-148]
   13558:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1355c:	ldur	w8, [x29, #-96]
   13560:	ldur	w9, [x29, #-92]
   13564:	ldur	w10, [x29, #-88]
   13568:	eor	w9, w9, w10
   1356c:	and	w8, w8, w9
   13570:	ldur	w9, [x29, #-92]
   13574:	ldur	w10, [x29, #-88]
   13578:	and	w9, w9, w10
   1357c:	add	w8, w8, w9
   13580:	add	w8, w0, w8
   13584:	ldur	w9, [x29, #-100]
   13588:	add	w8, w9, w8
   1358c:	stur	w8, [x29, #-100]
   13590:	ldur	w8, [x29, #-84]
   13594:	ldur	w9, [x29, #-84]
   13598:	ldur	w0, [x29, #-84]
   1359c:	ldur	w1, [x29, #-120]
   135a0:	str	w8, [sp, #608]
   135a4:	str	w9, [sp, #604]
   135a8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   135ac:	ldr	w8, [sp, #604]
   135b0:	eor	w0, w8, w0
   135b4:	ldur	w1, [x29, #-124]
   135b8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   135bc:	ldr	w8, [sp, #608]
   135c0:	eor	w0, w8, w0
   135c4:	ldur	w1, [x29, #-128]
   135c8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   135cc:	ldur	w8, [x29, #-108]
   135d0:	ldur	w9, [x29, #-84]
   135d4:	ldur	w10, [x29, #-112]
   135d8:	ldur	w12, [x29, #-108]
   135dc:	eor	w10, w10, w12
   135e0:	and	w9, w9, w10
   135e4:	eor	w8, w8, w9
   135e8:	add	w8, w0, w8
   135ec:	ldur	x11, [x29, #-136]
   135f0:	ldr	w9, [x11, #52]
   135f4:	add	w8, w8, w9
   135f8:	ldur	x16, [x29, #-16]
   135fc:	ldr	w0, [x16, #52]
   13600:	str	w8, [sp, #600]
   13604:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   13608:	stur	w0, [x29, #-28]
   1360c:	ldr	w8, [sp, #600]
   13610:	add	w9, w8, w0
   13614:	ldur	w10, [x29, #-104]
   13618:	add	w9, w10, w9
   1361c:	stur	w9, [x29, #-104]
   13620:	ldur	w9, [x29, #-104]
   13624:	ldur	w10, [x29, #-88]
   13628:	add	w9, w10, w9
   1362c:	stur	w9, [x29, #-88]
   13630:	ldur	w9, [x29, #-100]
   13634:	ldur	w10, [x29, #-100]
   13638:	ldur	w0, [x29, #-100]
   1363c:	ldur	w1, [x29, #-140]
   13640:	str	w9, [sp, #596]
   13644:	str	w10, [sp, #592]
   13648:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1364c:	ldr	w8, [sp, #592]
   13650:	eor	w0, w8, w0
   13654:	ldur	w1, [x29, #-144]
   13658:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1365c:	ldr	w8, [sp, #596]
   13660:	eor	w0, w8, w0
   13664:	ldur	w1, [x29, #-148]
   13668:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1366c:	ldur	w8, [x29, #-100]
   13670:	ldur	w9, [x29, #-96]
   13674:	ldur	w10, [x29, #-92]
   13678:	eor	w9, w9, w10
   1367c:	and	w8, w8, w9
   13680:	ldur	w9, [x29, #-96]
   13684:	ldur	w10, [x29, #-92]
   13688:	and	w9, w9, w10
   1368c:	add	w8, w8, w9
   13690:	add	w8, w0, w8
   13694:	ldur	w9, [x29, #-104]
   13698:	add	w8, w9, w8
   1369c:	stur	w8, [x29, #-104]
   136a0:	ldur	w8, [x29, #-88]
   136a4:	ldur	w9, [x29, #-88]
   136a8:	ldur	w0, [x29, #-88]
   136ac:	ldur	w1, [x29, #-120]
   136b0:	str	w8, [sp, #588]
   136b4:	str	w9, [sp, #584]
   136b8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   136bc:	ldr	w8, [sp, #584]
   136c0:	eor	w0, w8, w0
   136c4:	ldur	w1, [x29, #-124]
   136c8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   136cc:	ldr	w8, [sp, #588]
   136d0:	eor	w0, w8, w0
   136d4:	ldur	w1, [x29, #-128]
   136d8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   136dc:	ldur	w8, [x29, #-112]
   136e0:	ldur	w9, [x29, #-88]
   136e4:	ldur	w10, [x29, #-84]
   136e8:	ldur	w12, [x29, #-112]
   136ec:	eor	w10, w10, w12
   136f0:	and	w9, w9, w10
   136f4:	eor	w8, w8, w9
   136f8:	add	w8, w0, w8
   136fc:	ldur	x11, [x29, #-136]
   13700:	ldr	w9, [x11, #56]
   13704:	add	w8, w8, w9
   13708:	ldur	x16, [x29, #-16]
   1370c:	ldr	w0, [x16, #56]
   13710:	str	w8, [sp, #580]
   13714:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   13718:	stur	w0, [x29, #-24]
   1371c:	ldr	w8, [sp, #580]
   13720:	add	w9, w8, w0
   13724:	ldur	w10, [x29, #-108]
   13728:	add	w9, w10, w9
   1372c:	stur	w9, [x29, #-108]
   13730:	ldur	w9, [x29, #-108]
   13734:	ldur	w10, [x29, #-92]
   13738:	add	w9, w10, w9
   1373c:	stur	w9, [x29, #-92]
   13740:	ldur	w9, [x29, #-104]
   13744:	ldur	w10, [x29, #-104]
   13748:	ldur	w0, [x29, #-104]
   1374c:	ldur	w1, [x29, #-140]
   13750:	str	w9, [sp, #576]
   13754:	str	w10, [sp, #572]
   13758:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1375c:	ldr	w8, [sp, #572]
   13760:	eor	w0, w8, w0
   13764:	ldur	w1, [x29, #-144]
   13768:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1376c:	ldr	w8, [sp, #576]
   13770:	eor	w0, w8, w0
   13774:	ldur	w1, [x29, #-148]
   13778:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1377c:	ldur	w8, [x29, #-104]
   13780:	ldur	w9, [x29, #-100]
   13784:	ldur	w10, [x29, #-96]
   13788:	eor	w9, w9, w10
   1378c:	and	w8, w8, w9
   13790:	ldur	w9, [x29, #-100]
   13794:	ldur	w10, [x29, #-96]
   13798:	and	w9, w9, w10
   1379c:	add	w8, w8, w9
   137a0:	add	w8, w0, w8
   137a4:	ldur	w9, [x29, #-108]
   137a8:	add	w8, w9, w8
   137ac:	stur	w8, [x29, #-108]
   137b0:	ldur	w8, [x29, #-92]
   137b4:	ldur	w9, [x29, #-92]
   137b8:	ldur	w0, [x29, #-92]
   137bc:	ldur	w1, [x29, #-120]
   137c0:	str	w8, [sp, #568]
   137c4:	str	w9, [sp, #564]
   137c8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   137cc:	ldr	w8, [sp, #564]
   137d0:	eor	w0, w8, w0
   137d4:	ldur	w1, [x29, #-124]
   137d8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   137dc:	ldr	w8, [sp, #568]
   137e0:	eor	w0, w8, w0
   137e4:	ldur	w1, [x29, #-128]
   137e8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   137ec:	ldur	w8, [x29, #-84]
   137f0:	ldur	w9, [x29, #-92]
   137f4:	ldur	w10, [x29, #-88]
   137f8:	ldur	w12, [x29, #-84]
   137fc:	eor	w10, w10, w12
   13800:	and	w9, w9, w10
   13804:	eor	w8, w8, w9
   13808:	add	w8, w0, w8
   1380c:	ldur	x11, [x29, #-136]
   13810:	ldr	w9, [x11, #60]
   13814:	add	w8, w8, w9
   13818:	ldur	x16, [x29, #-16]
   1381c:	ldr	w0, [x16, #60]
   13820:	str	w8, [sp, #560]
   13824:	bl	12710 <lzma_crc64@@XZ_5.0+0x454>
   13828:	stur	w0, [x29, #-20]
   1382c:	ldr	w8, [sp, #560]
   13830:	add	w9, w8, w0
   13834:	ldur	w10, [x29, #-112]
   13838:	add	w9, w10, w9
   1383c:	stur	w9, [x29, #-112]
   13840:	ldur	w9, [x29, #-112]
   13844:	ldur	w10, [x29, #-96]
   13848:	add	w9, w10, w9
   1384c:	stur	w9, [x29, #-96]
   13850:	ldur	w9, [x29, #-108]
   13854:	ldur	w10, [x29, #-108]
   13858:	ldur	w0, [x29, #-108]
   1385c:	ldur	w1, [x29, #-140]
   13860:	str	w9, [sp, #556]
   13864:	str	w10, [sp, #552]
   13868:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1386c:	ldr	w8, [sp, #552]
   13870:	eor	w0, w8, w0
   13874:	ldur	w1, [x29, #-144]
   13878:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1387c:	ldr	w8, [sp, #556]
   13880:	eor	w0, w8, w0
   13884:	ldur	w1, [x29, #-148]
   13888:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1388c:	ldur	w8, [x29, #-108]
   13890:	ldur	w9, [x29, #-104]
   13894:	ldur	w10, [x29, #-100]
   13898:	eor	w9, w9, w10
   1389c:	and	w8, w8, w9
   138a0:	ldur	w9, [x29, #-104]
   138a4:	ldur	w10, [x29, #-100]
   138a8:	and	w9, w9, w10
   138ac:	add	w8, w8, w9
   138b0:	add	w8, w0, w8
   138b4:	ldur	w9, [x29, #-112]
   138b8:	add	w8, w9, w8
   138bc:	stur	w8, [x29, #-112]
   138c0:	ldur	w8, [x29, #-152]
   138c4:	stur	w8, [x29, #-116]
   138c8:	ldur	w8, [x29, #-116]
   138cc:	cmp	w8, #0x40
   138d0:	b.cs	15124 <lzma_crc64@@XZ_5.0+0x2e68>  // b.hs, b.nlast
   138d4:	ldur	w8, [x29, #-96]
   138d8:	ldur	w9, [x29, #-96]
   138dc:	ldur	w0, [x29, #-96]
   138e0:	mov	w10, #0xe                   	// #14
   138e4:	mov	w1, w10
   138e8:	str	w8, [sp, #548]
   138ec:	str	w9, [sp, #544]
   138f0:	str	w10, [sp, #540]
   138f4:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   138f8:	ldr	w8, [sp, #544]
   138fc:	eor	w0, w8, w0
   13900:	mov	w9, #0x5                   	// #5
   13904:	mov	w1, w9
   13908:	str	w9, [sp, #536]
   1390c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13910:	ldr	w8, [sp, #548]
   13914:	eor	w0, w8, w0
   13918:	mov	w9, #0x6                   	// #6
   1391c:	mov	w1, w9
   13920:	str	w9, [sp, #532]
   13924:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13928:	ldur	w8, [x29, #-88]
   1392c:	ldur	w9, [x29, #-96]
   13930:	ldur	w10, [x29, #-92]
   13934:	ldur	w11, [x29, #-88]
   13938:	eor	w10, w10, w11
   1393c:	and	w9, w9, w10
   13940:	eor	w8, w8, w9
   13944:	add	w8, w0, w8
   13948:	ldur	w9, [x29, #-116]
   1394c:	add	w9, w9, #0x0
   13950:	ldur	x12, [x29, #-136]
   13954:	ldr	w9, [x12, w9, uxtw #2]
   13958:	add	w8, w8, w9
   1395c:	ldur	w9, [x29, #-24]
   13960:	ldur	w0, [x29, #-24]
   13964:	mov	w10, #0x2                   	// #2
   13968:	mov	w1, w10
   1396c:	str	w8, [sp, #528]
   13970:	str	w9, [sp, #524]
   13974:	str	w10, [sp, #520]
   13978:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1397c:	ldr	w8, [sp, #524]
   13980:	eor	w0, w8, w0
   13984:	mov	w9, #0x11                  	// #17
   13988:	mov	w1, w9
   1398c:	str	w9, [sp, #516]
   13990:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13994:	ldur	w8, [x29, #-24]
   13998:	eor	w8, w0, w8, lsr #10
   1399c:	ldur	w9, [x29, #-44]
   139a0:	add	w8, w8, w9
   139a4:	ldur	w9, [x29, #-76]
   139a8:	ldur	w0, [x29, #-76]
   139ac:	mov	w10, #0xb                   	// #11
   139b0:	mov	w1, w10
   139b4:	str	w8, [sp, #512]
   139b8:	str	w9, [sp, #508]
   139bc:	str	w10, [sp, #504]
   139c0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   139c4:	ldr	w8, [sp, #508]
   139c8:	eor	w0, w8, w0
   139cc:	mov	w9, #0x7                   	// #7
   139d0:	mov	w1, w9
   139d4:	str	w9, [sp, #500]
   139d8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   139dc:	ldur	w8, [x29, #-76]
   139e0:	eor	w8, w0, w8, lsr #3
   139e4:	ldr	w9, [sp, #512]
   139e8:	add	w8, w9, w8
   139ec:	ldur	w10, [x29, #-80]
   139f0:	add	w8, w10, w8
   139f4:	stur	w8, [x29, #-80]
   139f8:	ldr	w10, [sp, #528]
   139fc:	add	w8, w10, w8
   13a00:	ldur	w11, [x29, #-84]
   13a04:	add	w8, w11, w8
   13a08:	stur	w8, [x29, #-84]
   13a0c:	ldur	w8, [x29, #-84]
   13a10:	ldur	w11, [x29, #-100]
   13a14:	add	w8, w11, w8
   13a18:	stur	w8, [x29, #-100]
   13a1c:	ldur	w8, [x29, #-112]
   13a20:	ldur	w11, [x29, #-112]
   13a24:	ldur	w0, [x29, #-112]
   13a28:	mov	w13, #0x9                   	// #9
   13a2c:	mov	w1, w13
   13a30:	str	w8, [sp, #496]
   13a34:	str	w11, [sp, #492]
   13a38:	str	w13, [sp, #488]
   13a3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13a40:	ldr	w8, [sp, #492]
   13a44:	eor	w0, w8, w0
   13a48:	ldr	w1, [sp, #504]
   13a4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13a50:	ldr	w8, [sp, #496]
   13a54:	eor	w0, w8, w0
   13a58:	ldr	w1, [sp, #520]
   13a5c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13a60:	ldur	w8, [x29, #-112]
   13a64:	ldur	w9, [x29, #-108]
   13a68:	ldur	w10, [x29, #-104]
   13a6c:	eor	w9, w9, w10
   13a70:	and	w8, w8, w9
   13a74:	ldur	w9, [x29, #-108]
   13a78:	ldur	w10, [x29, #-104]
   13a7c:	and	w9, w9, w10
   13a80:	add	w8, w8, w9
   13a84:	add	w8, w0, w8
   13a88:	ldur	w9, [x29, #-84]
   13a8c:	add	w8, w9, w8
   13a90:	stur	w8, [x29, #-84]
   13a94:	ldur	w8, [x29, #-100]
   13a98:	ldur	w9, [x29, #-100]
   13a9c:	ldur	w0, [x29, #-100]
   13aa0:	ldr	w1, [sp, #540]
   13aa4:	str	w8, [sp, #484]
   13aa8:	str	w9, [sp, #480]
   13aac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13ab0:	ldr	w8, [sp, #480]
   13ab4:	eor	w0, w8, w0
   13ab8:	ldr	w1, [sp, #536]
   13abc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13ac0:	ldr	w8, [sp, #484]
   13ac4:	eor	w0, w8, w0
   13ac8:	ldr	w1, [sp, #532]
   13acc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13ad0:	ldur	w8, [x29, #-92]
   13ad4:	ldur	w9, [x29, #-100]
   13ad8:	ldur	w10, [x29, #-96]
   13adc:	ldur	w11, [x29, #-92]
   13ae0:	eor	w10, w10, w11
   13ae4:	and	w9, w9, w10
   13ae8:	eor	w8, w8, w9
   13aec:	add	w8, w0, w8
   13af0:	ldur	w9, [x29, #-116]
   13af4:	add	w9, w9, #0x1
   13af8:	ldur	x12, [x29, #-136]
   13afc:	ldr	w9, [x12, w9, uxtw #2]
   13b00:	add	w8, w8, w9
   13b04:	ldur	w9, [x29, #-20]
   13b08:	ldur	w0, [x29, #-20]
   13b0c:	ldr	w1, [sp, #520]
   13b10:	str	w8, [sp, #476]
   13b14:	str	w9, [sp, #472]
   13b18:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13b1c:	ldr	w8, [sp, #472]
   13b20:	eor	w0, w8, w0
   13b24:	ldr	w1, [sp, #516]
   13b28:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13b2c:	ldur	w8, [x29, #-20]
   13b30:	eor	w8, w0, w8, lsr #10
   13b34:	ldur	w9, [x29, #-40]
   13b38:	add	w8, w8, w9
   13b3c:	ldur	w9, [x29, #-72]
   13b40:	ldur	w0, [x29, #-72]
   13b44:	ldr	w1, [sp, #504]
   13b48:	str	w8, [sp, #468]
   13b4c:	str	w9, [sp, #464]
   13b50:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13b54:	ldr	w8, [sp, #464]
   13b58:	eor	w0, w8, w0
   13b5c:	ldr	w1, [sp, #500]
   13b60:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13b64:	ldur	w8, [x29, #-72]
   13b68:	eor	w8, w0, w8, lsr #3
   13b6c:	ldr	w9, [sp, #468]
   13b70:	add	w8, w9, w8
   13b74:	ldur	w10, [x29, #-76]
   13b78:	add	w8, w10, w8
   13b7c:	stur	w8, [x29, #-76]
   13b80:	ldr	w10, [sp, #476]
   13b84:	add	w8, w10, w8
   13b88:	ldur	w11, [x29, #-88]
   13b8c:	add	w8, w11, w8
   13b90:	stur	w8, [x29, #-88]
   13b94:	ldur	w8, [x29, #-88]
   13b98:	ldur	w11, [x29, #-104]
   13b9c:	add	w8, w11, w8
   13ba0:	stur	w8, [x29, #-104]
   13ba4:	ldur	w8, [x29, #-84]
   13ba8:	ldur	w11, [x29, #-84]
   13bac:	ldur	w0, [x29, #-84]
   13bb0:	ldr	w1, [sp, #488]
   13bb4:	str	w8, [sp, #460]
   13bb8:	str	w11, [sp, #456]
   13bbc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13bc0:	ldr	w8, [sp, #456]
   13bc4:	eor	w0, w8, w0
   13bc8:	ldr	w1, [sp, #504]
   13bcc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13bd0:	ldr	w8, [sp, #460]
   13bd4:	eor	w0, w8, w0
   13bd8:	ldr	w1, [sp, #520]
   13bdc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13be0:	ldur	w8, [x29, #-84]
   13be4:	ldur	w9, [x29, #-112]
   13be8:	ldur	w10, [x29, #-108]
   13bec:	eor	w9, w9, w10
   13bf0:	and	w8, w8, w9
   13bf4:	ldur	w9, [x29, #-112]
   13bf8:	ldur	w10, [x29, #-108]
   13bfc:	and	w9, w9, w10
   13c00:	add	w8, w8, w9
   13c04:	add	w8, w0, w8
   13c08:	ldur	w9, [x29, #-88]
   13c0c:	add	w8, w9, w8
   13c10:	stur	w8, [x29, #-88]
   13c14:	ldur	w8, [x29, #-104]
   13c18:	ldur	w9, [x29, #-104]
   13c1c:	ldur	w0, [x29, #-104]
   13c20:	ldr	w1, [sp, #540]
   13c24:	str	w8, [sp, #452]
   13c28:	str	w9, [sp, #448]
   13c2c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13c30:	ldr	w8, [sp, #448]
   13c34:	eor	w0, w8, w0
   13c38:	ldr	w1, [sp, #536]
   13c3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13c40:	ldr	w8, [sp, #452]
   13c44:	eor	w0, w8, w0
   13c48:	ldr	w1, [sp, #532]
   13c4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13c50:	ldur	w8, [x29, #-96]
   13c54:	ldur	w9, [x29, #-104]
   13c58:	ldur	w10, [x29, #-100]
   13c5c:	ldur	w11, [x29, #-96]
   13c60:	eor	w10, w10, w11
   13c64:	and	w9, w9, w10
   13c68:	eor	w8, w8, w9
   13c6c:	add	w8, w0, w8
   13c70:	ldur	w9, [x29, #-116]
   13c74:	add	w9, w9, #0x2
   13c78:	ldur	x12, [x29, #-136]
   13c7c:	ldr	w9, [x12, w9, uxtw #2]
   13c80:	add	w8, w8, w9
   13c84:	ldur	w9, [x29, #-80]
   13c88:	ldur	w0, [x29, #-80]
   13c8c:	ldr	w1, [sp, #520]
   13c90:	str	w8, [sp, #444]
   13c94:	str	w9, [sp, #440]
   13c98:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13c9c:	ldr	w8, [sp, #440]
   13ca0:	eor	w0, w8, w0
   13ca4:	ldr	w1, [sp, #516]
   13ca8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13cac:	ldur	w8, [x29, #-80]
   13cb0:	eor	w8, w0, w8, lsr #10
   13cb4:	ldur	w9, [x29, #-36]
   13cb8:	add	w8, w8, w9
   13cbc:	ldur	w9, [x29, #-68]
   13cc0:	ldur	w0, [x29, #-68]
   13cc4:	ldr	w1, [sp, #504]
   13cc8:	str	w8, [sp, #436]
   13ccc:	str	w9, [sp, #432]
   13cd0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13cd4:	ldr	w8, [sp, #432]
   13cd8:	eor	w0, w8, w0
   13cdc:	ldr	w1, [sp, #500]
   13ce0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13ce4:	ldur	w8, [x29, #-68]
   13ce8:	eor	w8, w0, w8, lsr #3
   13cec:	ldr	w9, [sp, #436]
   13cf0:	add	w8, w9, w8
   13cf4:	ldur	w10, [x29, #-72]
   13cf8:	add	w8, w10, w8
   13cfc:	stur	w8, [x29, #-72]
   13d00:	ldr	w10, [sp, #444]
   13d04:	add	w8, w10, w8
   13d08:	ldur	w11, [x29, #-92]
   13d0c:	add	w8, w11, w8
   13d10:	stur	w8, [x29, #-92]
   13d14:	ldur	w8, [x29, #-92]
   13d18:	ldur	w11, [x29, #-108]
   13d1c:	add	w8, w11, w8
   13d20:	stur	w8, [x29, #-108]
   13d24:	ldur	w8, [x29, #-88]
   13d28:	ldur	w11, [x29, #-88]
   13d2c:	ldur	w0, [x29, #-88]
   13d30:	ldr	w1, [sp, #488]
   13d34:	str	w8, [sp, #428]
   13d38:	str	w11, [sp, #424]
   13d3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13d40:	ldr	w8, [sp, #424]
   13d44:	eor	w0, w8, w0
   13d48:	ldr	w1, [sp, #504]
   13d4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13d50:	ldr	w8, [sp, #428]
   13d54:	eor	w0, w8, w0
   13d58:	ldr	w1, [sp, #520]
   13d5c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13d60:	ldur	w8, [x29, #-88]
   13d64:	ldur	w9, [x29, #-84]
   13d68:	ldur	w10, [x29, #-112]
   13d6c:	eor	w9, w9, w10
   13d70:	and	w8, w8, w9
   13d74:	ldur	w9, [x29, #-84]
   13d78:	ldur	w10, [x29, #-112]
   13d7c:	and	w9, w9, w10
   13d80:	add	w8, w8, w9
   13d84:	add	w8, w0, w8
   13d88:	ldur	w9, [x29, #-92]
   13d8c:	add	w8, w9, w8
   13d90:	stur	w8, [x29, #-92]
   13d94:	ldur	w8, [x29, #-108]
   13d98:	ldur	w9, [x29, #-108]
   13d9c:	ldur	w0, [x29, #-108]
   13da0:	ldr	w1, [sp, #540]
   13da4:	str	w8, [sp, #420]
   13da8:	str	w9, [sp, #416]
   13dac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13db0:	ldr	w8, [sp, #416]
   13db4:	eor	w0, w8, w0
   13db8:	ldr	w1, [sp, #536]
   13dbc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13dc0:	ldr	w8, [sp, #420]
   13dc4:	eor	w0, w8, w0
   13dc8:	ldr	w1, [sp, #532]
   13dcc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13dd0:	ldur	w8, [x29, #-100]
   13dd4:	ldur	w9, [x29, #-108]
   13dd8:	ldur	w10, [x29, #-104]
   13ddc:	ldur	w11, [x29, #-100]
   13de0:	eor	w10, w10, w11
   13de4:	and	w9, w9, w10
   13de8:	eor	w8, w8, w9
   13dec:	add	w8, w0, w8
   13df0:	ldur	w9, [x29, #-116]
   13df4:	add	w9, w9, #0x3
   13df8:	ldur	x12, [x29, #-136]
   13dfc:	ldr	w9, [x12, w9, uxtw #2]
   13e00:	add	w8, w8, w9
   13e04:	ldur	w9, [x29, #-76]
   13e08:	ldur	w0, [x29, #-76]
   13e0c:	ldr	w1, [sp, #520]
   13e10:	str	w8, [sp, #412]
   13e14:	str	w9, [sp, #408]
   13e18:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13e1c:	ldr	w8, [sp, #408]
   13e20:	eor	w0, w8, w0
   13e24:	ldr	w1, [sp, #516]
   13e28:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13e2c:	ldur	w8, [x29, #-76]
   13e30:	eor	w8, w0, w8, lsr #10
   13e34:	ldur	w9, [x29, #-32]
   13e38:	add	w8, w8, w9
   13e3c:	ldur	w9, [x29, #-64]
   13e40:	ldur	w0, [x29, #-64]
   13e44:	ldr	w1, [sp, #504]
   13e48:	str	w8, [sp, #404]
   13e4c:	str	w9, [sp, #400]
   13e50:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13e54:	ldr	w8, [sp, #400]
   13e58:	eor	w0, w8, w0
   13e5c:	ldr	w1, [sp, #500]
   13e60:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13e64:	ldur	w8, [x29, #-64]
   13e68:	eor	w8, w0, w8, lsr #3
   13e6c:	ldr	w9, [sp, #404]
   13e70:	add	w8, w9, w8
   13e74:	ldur	w10, [x29, #-68]
   13e78:	add	w8, w10, w8
   13e7c:	stur	w8, [x29, #-68]
   13e80:	ldr	w10, [sp, #412]
   13e84:	add	w8, w10, w8
   13e88:	ldur	w11, [x29, #-96]
   13e8c:	add	w8, w11, w8
   13e90:	stur	w8, [x29, #-96]
   13e94:	ldur	w8, [x29, #-96]
   13e98:	ldur	w11, [x29, #-112]
   13e9c:	add	w8, w11, w8
   13ea0:	stur	w8, [x29, #-112]
   13ea4:	ldur	w8, [x29, #-92]
   13ea8:	ldur	w11, [x29, #-92]
   13eac:	ldur	w0, [x29, #-92]
   13eb0:	ldr	w1, [sp, #488]
   13eb4:	str	w8, [sp, #396]
   13eb8:	str	w11, [sp, #392]
   13ebc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13ec0:	ldr	w8, [sp, #392]
   13ec4:	eor	w0, w8, w0
   13ec8:	ldr	w1, [sp, #504]
   13ecc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13ed0:	ldr	w8, [sp, #396]
   13ed4:	eor	w0, w8, w0
   13ed8:	ldr	w1, [sp, #520]
   13edc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13ee0:	ldur	w8, [x29, #-92]
   13ee4:	ldur	w9, [x29, #-88]
   13ee8:	ldur	w10, [x29, #-84]
   13eec:	eor	w9, w9, w10
   13ef0:	and	w8, w8, w9
   13ef4:	ldur	w9, [x29, #-88]
   13ef8:	ldur	w10, [x29, #-84]
   13efc:	and	w9, w9, w10
   13f00:	add	w8, w8, w9
   13f04:	add	w8, w0, w8
   13f08:	ldur	w9, [x29, #-96]
   13f0c:	add	w8, w9, w8
   13f10:	stur	w8, [x29, #-96]
   13f14:	ldur	w8, [x29, #-112]
   13f18:	ldur	w9, [x29, #-112]
   13f1c:	ldur	w0, [x29, #-112]
   13f20:	ldr	w1, [sp, #540]
   13f24:	str	w8, [sp, #388]
   13f28:	str	w9, [sp, #384]
   13f2c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13f30:	ldr	w8, [sp, #384]
   13f34:	eor	w0, w8, w0
   13f38:	ldr	w1, [sp, #536]
   13f3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13f40:	ldr	w8, [sp, #388]
   13f44:	eor	w0, w8, w0
   13f48:	ldr	w1, [sp, #532]
   13f4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13f50:	ldur	w8, [x29, #-104]
   13f54:	ldur	w9, [x29, #-112]
   13f58:	ldur	w10, [x29, #-108]
   13f5c:	ldur	w11, [x29, #-104]
   13f60:	eor	w10, w10, w11
   13f64:	and	w9, w9, w10
   13f68:	eor	w8, w8, w9
   13f6c:	add	w8, w0, w8
   13f70:	ldur	w9, [x29, #-116]
   13f74:	add	w9, w9, #0x4
   13f78:	ldur	x12, [x29, #-136]
   13f7c:	ldr	w9, [x12, w9, uxtw #2]
   13f80:	add	w8, w8, w9
   13f84:	ldur	w9, [x29, #-72]
   13f88:	ldur	w0, [x29, #-72]
   13f8c:	ldr	w1, [sp, #520]
   13f90:	str	w8, [sp, #380]
   13f94:	str	w9, [sp, #376]
   13f98:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13f9c:	ldr	w8, [sp, #376]
   13fa0:	eor	w0, w8, w0
   13fa4:	ldr	w1, [sp, #516]
   13fa8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13fac:	ldur	w8, [x29, #-72]
   13fb0:	eor	w8, w0, w8, lsr #10
   13fb4:	ldur	w9, [x29, #-28]
   13fb8:	add	w8, w8, w9
   13fbc:	ldur	w9, [x29, #-60]
   13fc0:	ldur	w0, [x29, #-60]
   13fc4:	ldr	w1, [sp, #504]
   13fc8:	str	w8, [sp, #372]
   13fcc:	str	w9, [sp, #368]
   13fd0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13fd4:	ldr	w8, [sp, #368]
   13fd8:	eor	w0, w8, w0
   13fdc:	ldr	w1, [sp, #500]
   13fe0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   13fe4:	ldur	w8, [x29, #-60]
   13fe8:	eor	w8, w0, w8, lsr #3
   13fec:	ldr	w9, [sp, #372]
   13ff0:	add	w8, w9, w8
   13ff4:	ldur	w10, [x29, #-64]
   13ff8:	add	w8, w10, w8
   13ffc:	stur	w8, [x29, #-64]
   14000:	ldr	w10, [sp, #380]
   14004:	add	w8, w10, w8
   14008:	ldur	w11, [x29, #-100]
   1400c:	add	w8, w11, w8
   14010:	stur	w8, [x29, #-100]
   14014:	ldur	w8, [x29, #-100]
   14018:	ldur	w11, [x29, #-84]
   1401c:	add	w8, w11, w8
   14020:	stur	w8, [x29, #-84]
   14024:	ldur	w8, [x29, #-96]
   14028:	ldur	w11, [x29, #-96]
   1402c:	ldur	w0, [x29, #-96]
   14030:	ldr	w1, [sp, #488]
   14034:	str	w8, [sp, #364]
   14038:	str	w11, [sp, #360]
   1403c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14040:	ldr	w8, [sp, #360]
   14044:	eor	w0, w8, w0
   14048:	ldr	w1, [sp, #504]
   1404c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14050:	ldr	w8, [sp, #364]
   14054:	eor	w0, w8, w0
   14058:	ldr	w1, [sp, #520]
   1405c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14060:	ldur	w8, [x29, #-96]
   14064:	ldur	w9, [x29, #-92]
   14068:	ldur	w10, [x29, #-88]
   1406c:	eor	w9, w9, w10
   14070:	and	w8, w8, w9
   14074:	ldur	w9, [x29, #-92]
   14078:	ldur	w10, [x29, #-88]
   1407c:	and	w9, w9, w10
   14080:	add	w8, w8, w9
   14084:	add	w8, w0, w8
   14088:	ldur	w9, [x29, #-100]
   1408c:	add	w8, w9, w8
   14090:	stur	w8, [x29, #-100]
   14094:	ldur	w8, [x29, #-84]
   14098:	ldur	w9, [x29, #-84]
   1409c:	ldur	w0, [x29, #-84]
   140a0:	ldr	w1, [sp, #540]
   140a4:	str	w8, [sp, #356]
   140a8:	str	w9, [sp, #352]
   140ac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   140b0:	ldr	w8, [sp, #352]
   140b4:	eor	w0, w8, w0
   140b8:	ldr	w1, [sp, #536]
   140bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   140c0:	ldr	w8, [sp, #356]
   140c4:	eor	w0, w8, w0
   140c8:	ldr	w1, [sp, #532]
   140cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   140d0:	ldur	w8, [x29, #-108]
   140d4:	ldur	w9, [x29, #-84]
   140d8:	ldur	w10, [x29, #-112]
   140dc:	ldur	w11, [x29, #-108]
   140e0:	eor	w10, w10, w11
   140e4:	and	w9, w9, w10
   140e8:	eor	w8, w8, w9
   140ec:	add	w8, w0, w8
   140f0:	ldur	w9, [x29, #-116]
   140f4:	add	w9, w9, #0x5
   140f8:	ldur	x12, [x29, #-136]
   140fc:	ldr	w9, [x12, w9, uxtw #2]
   14100:	add	w8, w8, w9
   14104:	ldur	w9, [x29, #-68]
   14108:	ldur	w0, [x29, #-68]
   1410c:	ldr	w1, [sp, #520]
   14110:	str	w8, [sp, #348]
   14114:	str	w9, [sp, #344]
   14118:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1411c:	ldr	w8, [sp, #344]
   14120:	eor	w0, w8, w0
   14124:	ldr	w1, [sp, #516]
   14128:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1412c:	ldur	w8, [x29, #-68]
   14130:	eor	w8, w0, w8, lsr #10
   14134:	ldur	w9, [x29, #-24]
   14138:	add	w8, w8, w9
   1413c:	ldur	w9, [x29, #-56]
   14140:	ldur	w0, [x29, #-56]
   14144:	ldr	w1, [sp, #504]
   14148:	str	w8, [sp, #340]
   1414c:	str	w9, [sp, #336]
   14150:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14154:	ldr	w8, [sp, #336]
   14158:	eor	w0, w8, w0
   1415c:	ldr	w1, [sp, #500]
   14160:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14164:	ldur	w8, [x29, #-56]
   14168:	eor	w8, w0, w8, lsr #3
   1416c:	ldr	w9, [sp, #340]
   14170:	add	w8, w9, w8
   14174:	ldur	w10, [x29, #-60]
   14178:	add	w8, w10, w8
   1417c:	stur	w8, [x29, #-60]
   14180:	ldr	w10, [sp, #348]
   14184:	add	w8, w10, w8
   14188:	ldur	w11, [x29, #-104]
   1418c:	add	w8, w11, w8
   14190:	stur	w8, [x29, #-104]
   14194:	ldur	w8, [x29, #-104]
   14198:	ldur	w11, [x29, #-88]
   1419c:	add	w8, w11, w8
   141a0:	stur	w8, [x29, #-88]
   141a4:	ldur	w8, [x29, #-100]
   141a8:	ldur	w11, [x29, #-100]
   141ac:	ldur	w0, [x29, #-100]
   141b0:	ldr	w1, [sp, #488]
   141b4:	str	w8, [sp, #332]
   141b8:	str	w11, [sp, #328]
   141bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   141c0:	ldr	w8, [sp, #328]
   141c4:	eor	w0, w8, w0
   141c8:	ldr	w1, [sp, #504]
   141cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   141d0:	ldr	w8, [sp, #332]
   141d4:	eor	w0, w8, w0
   141d8:	ldr	w1, [sp, #520]
   141dc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   141e0:	ldur	w8, [x29, #-100]
   141e4:	ldur	w9, [x29, #-96]
   141e8:	ldur	w10, [x29, #-92]
   141ec:	eor	w9, w9, w10
   141f0:	and	w8, w8, w9
   141f4:	ldur	w9, [x29, #-96]
   141f8:	ldur	w10, [x29, #-92]
   141fc:	and	w9, w9, w10
   14200:	add	w8, w8, w9
   14204:	add	w8, w0, w8
   14208:	ldur	w9, [x29, #-104]
   1420c:	add	w8, w9, w8
   14210:	stur	w8, [x29, #-104]
   14214:	ldur	w8, [x29, #-88]
   14218:	ldur	w9, [x29, #-88]
   1421c:	ldur	w0, [x29, #-88]
   14220:	ldr	w1, [sp, #540]
   14224:	str	w8, [sp, #324]
   14228:	str	w9, [sp, #320]
   1422c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14230:	ldr	w8, [sp, #320]
   14234:	eor	w0, w8, w0
   14238:	ldr	w1, [sp, #536]
   1423c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14240:	ldr	w8, [sp, #324]
   14244:	eor	w0, w8, w0
   14248:	ldr	w1, [sp, #532]
   1424c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14250:	ldur	w8, [x29, #-112]
   14254:	ldur	w9, [x29, #-88]
   14258:	ldur	w10, [x29, #-84]
   1425c:	ldur	w11, [x29, #-112]
   14260:	eor	w10, w10, w11
   14264:	and	w9, w9, w10
   14268:	eor	w8, w8, w9
   1426c:	add	w8, w0, w8
   14270:	ldur	w9, [x29, #-116]
   14274:	add	w9, w9, #0x6
   14278:	ldur	x12, [x29, #-136]
   1427c:	ldr	w9, [x12, w9, uxtw #2]
   14280:	add	w8, w8, w9
   14284:	ldur	w9, [x29, #-64]
   14288:	ldur	w0, [x29, #-64]
   1428c:	ldr	w1, [sp, #520]
   14290:	str	w8, [sp, #316]
   14294:	str	w9, [sp, #312]
   14298:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1429c:	ldr	w8, [sp, #312]
   142a0:	eor	w0, w8, w0
   142a4:	ldr	w1, [sp, #516]
   142a8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   142ac:	ldur	w8, [x29, #-64]
   142b0:	eor	w8, w0, w8, lsr #10
   142b4:	ldur	w9, [x29, #-20]
   142b8:	add	w8, w8, w9
   142bc:	ldur	w9, [x29, #-52]
   142c0:	ldur	w0, [x29, #-52]
   142c4:	ldr	w1, [sp, #504]
   142c8:	str	w8, [sp, #308]
   142cc:	str	w9, [sp, #304]
   142d0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   142d4:	ldr	w8, [sp, #304]
   142d8:	eor	w0, w8, w0
   142dc:	ldr	w1, [sp, #500]
   142e0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   142e4:	ldur	w8, [x29, #-52]
   142e8:	eor	w8, w0, w8, lsr #3
   142ec:	ldr	w9, [sp, #308]
   142f0:	add	w8, w9, w8
   142f4:	ldur	w10, [x29, #-56]
   142f8:	add	w8, w10, w8
   142fc:	stur	w8, [x29, #-56]
   14300:	ldr	w10, [sp, #316]
   14304:	add	w8, w10, w8
   14308:	ldur	w11, [x29, #-108]
   1430c:	add	w8, w11, w8
   14310:	stur	w8, [x29, #-108]
   14314:	ldur	w8, [x29, #-108]
   14318:	ldur	w11, [x29, #-92]
   1431c:	add	w8, w11, w8
   14320:	stur	w8, [x29, #-92]
   14324:	ldur	w8, [x29, #-104]
   14328:	ldur	w11, [x29, #-104]
   1432c:	ldur	w0, [x29, #-104]
   14330:	ldr	w1, [sp, #488]
   14334:	str	w8, [sp, #300]
   14338:	str	w11, [sp, #296]
   1433c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14340:	ldr	w8, [sp, #296]
   14344:	eor	w0, w8, w0
   14348:	ldr	w1, [sp, #504]
   1434c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14350:	ldr	w8, [sp, #300]
   14354:	eor	w0, w8, w0
   14358:	ldr	w1, [sp, #520]
   1435c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14360:	ldur	w8, [x29, #-104]
   14364:	ldur	w9, [x29, #-100]
   14368:	ldur	w10, [x29, #-96]
   1436c:	eor	w9, w9, w10
   14370:	and	w8, w8, w9
   14374:	ldur	w9, [x29, #-100]
   14378:	ldur	w10, [x29, #-96]
   1437c:	and	w9, w9, w10
   14380:	add	w8, w8, w9
   14384:	add	w8, w0, w8
   14388:	ldur	w9, [x29, #-108]
   1438c:	add	w8, w9, w8
   14390:	stur	w8, [x29, #-108]
   14394:	ldur	w8, [x29, #-92]
   14398:	ldur	w9, [x29, #-92]
   1439c:	ldur	w0, [x29, #-92]
   143a0:	ldr	w1, [sp, #540]
   143a4:	str	w8, [sp, #292]
   143a8:	str	w9, [sp, #288]
   143ac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   143b0:	ldr	w8, [sp, #288]
   143b4:	eor	w0, w8, w0
   143b8:	ldr	w1, [sp, #536]
   143bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   143c0:	ldr	w8, [sp, #292]
   143c4:	eor	w0, w8, w0
   143c8:	ldr	w1, [sp, #532]
   143cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   143d0:	ldur	w8, [x29, #-84]
   143d4:	ldur	w9, [x29, #-92]
   143d8:	ldur	w10, [x29, #-88]
   143dc:	ldur	w11, [x29, #-84]
   143e0:	eor	w10, w10, w11
   143e4:	and	w9, w9, w10
   143e8:	eor	w8, w8, w9
   143ec:	add	w8, w0, w8
   143f0:	ldur	w9, [x29, #-116]
   143f4:	add	w9, w9, #0x7
   143f8:	ldur	x12, [x29, #-136]
   143fc:	ldr	w9, [x12, w9, uxtw #2]
   14400:	add	w8, w8, w9
   14404:	ldur	w9, [x29, #-60]
   14408:	ldur	w0, [x29, #-60]
   1440c:	ldr	w1, [sp, #520]
   14410:	str	w8, [sp, #284]
   14414:	str	w9, [sp, #280]
   14418:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1441c:	ldr	w8, [sp, #280]
   14420:	eor	w0, w8, w0
   14424:	ldr	w1, [sp, #516]
   14428:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1442c:	ldur	w8, [x29, #-60]
   14430:	eor	w8, w0, w8, lsr #10
   14434:	ldur	w9, [x29, #-80]
   14438:	add	w8, w8, w9
   1443c:	ldur	w9, [x29, #-48]
   14440:	ldur	w0, [x29, #-48]
   14444:	ldr	w1, [sp, #504]
   14448:	str	w8, [sp, #276]
   1444c:	str	w9, [sp, #272]
   14450:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14454:	ldr	w8, [sp, #272]
   14458:	eor	w0, w8, w0
   1445c:	ldr	w1, [sp, #500]
   14460:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14464:	ldur	w8, [x29, #-48]
   14468:	eor	w8, w0, w8, lsr #3
   1446c:	ldr	w9, [sp, #276]
   14470:	add	w8, w9, w8
   14474:	ldur	w10, [x29, #-52]
   14478:	add	w8, w10, w8
   1447c:	stur	w8, [x29, #-52]
   14480:	ldr	w10, [sp, #284]
   14484:	add	w8, w10, w8
   14488:	ldur	w11, [x29, #-112]
   1448c:	add	w8, w11, w8
   14490:	stur	w8, [x29, #-112]
   14494:	ldur	w8, [x29, #-112]
   14498:	ldur	w11, [x29, #-96]
   1449c:	add	w8, w11, w8
   144a0:	stur	w8, [x29, #-96]
   144a4:	ldur	w8, [x29, #-108]
   144a8:	ldur	w11, [x29, #-108]
   144ac:	ldur	w0, [x29, #-108]
   144b0:	ldr	w1, [sp, #488]
   144b4:	str	w8, [sp, #268]
   144b8:	str	w11, [sp, #264]
   144bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   144c0:	ldr	w8, [sp, #264]
   144c4:	eor	w0, w8, w0
   144c8:	ldr	w1, [sp, #504]
   144cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   144d0:	ldr	w8, [sp, #268]
   144d4:	eor	w0, w8, w0
   144d8:	ldr	w1, [sp, #520]
   144dc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   144e0:	ldur	w8, [x29, #-108]
   144e4:	ldur	w9, [x29, #-104]
   144e8:	ldur	w10, [x29, #-100]
   144ec:	eor	w9, w9, w10
   144f0:	and	w8, w8, w9
   144f4:	ldur	w9, [x29, #-104]
   144f8:	ldur	w10, [x29, #-100]
   144fc:	and	w9, w9, w10
   14500:	add	w8, w8, w9
   14504:	add	w8, w0, w8
   14508:	ldur	w9, [x29, #-112]
   1450c:	add	w8, w9, w8
   14510:	stur	w8, [x29, #-112]
   14514:	ldur	w8, [x29, #-96]
   14518:	ldur	w9, [x29, #-96]
   1451c:	ldur	w0, [x29, #-96]
   14520:	ldr	w1, [sp, #540]
   14524:	str	w8, [sp, #260]
   14528:	str	w9, [sp, #256]
   1452c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14530:	ldr	w8, [sp, #256]
   14534:	eor	w0, w8, w0
   14538:	ldr	w1, [sp, #536]
   1453c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14540:	ldr	w8, [sp, #260]
   14544:	eor	w0, w8, w0
   14548:	ldr	w1, [sp, #532]
   1454c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14550:	ldur	w8, [x29, #-88]
   14554:	ldur	w9, [x29, #-96]
   14558:	ldur	w10, [x29, #-92]
   1455c:	ldur	w11, [x29, #-88]
   14560:	eor	w10, w10, w11
   14564:	and	w9, w9, w10
   14568:	eor	w8, w8, w9
   1456c:	add	w8, w0, w8
   14570:	ldur	w9, [x29, #-116]
   14574:	add	w9, w9, #0x8
   14578:	ldur	x12, [x29, #-136]
   1457c:	ldr	w9, [x12, w9, uxtw #2]
   14580:	add	w8, w8, w9
   14584:	ldur	w9, [x29, #-56]
   14588:	ldur	w0, [x29, #-56]
   1458c:	ldr	w1, [sp, #520]
   14590:	str	w8, [sp, #252]
   14594:	str	w9, [sp, #248]
   14598:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1459c:	ldr	w8, [sp, #248]
   145a0:	eor	w0, w8, w0
   145a4:	ldr	w1, [sp, #516]
   145a8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   145ac:	ldur	w8, [x29, #-56]
   145b0:	eor	w8, w0, w8, lsr #10
   145b4:	ldur	w9, [x29, #-76]
   145b8:	add	w8, w8, w9
   145bc:	ldur	w9, [x29, #-44]
   145c0:	ldur	w0, [x29, #-44]
   145c4:	ldr	w1, [sp, #504]
   145c8:	str	w8, [sp, #244]
   145cc:	str	w9, [sp, #240]
   145d0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   145d4:	ldr	w8, [sp, #240]
   145d8:	eor	w0, w8, w0
   145dc:	ldr	w1, [sp, #500]
   145e0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   145e4:	ldur	w8, [x29, #-44]
   145e8:	eor	w8, w0, w8, lsr #3
   145ec:	ldr	w9, [sp, #244]
   145f0:	add	w8, w9, w8
   145f4:	ldur	w10, [x29, #-48]
   145f8:	add	w8, w10, w8
   145fc:	stur	w8, [x29, #-48]
   14600:	ldr	w10, [sp, #252]
   14604:	add	w8, w10, w8
   14608:	ldur	w11, [x29, #-84]
   1460c:	add	w8, w11, w8
   14610:	stur	w8, [x29, #-84]
   14614:	ldur	w8, [x29, #-84]
   14618:	ldur	w11, [x29, #-100]
   1461c:	add	w8, w11, w8
   14620:	stur	w8, [x29, #-100]
   14624:	ldur	w8, [x29, #-112]
   14628:	ldur	w11, [x29, #-112]
   1462c:	ldur	w0, [x29, #-112]
   14630:	ldr	w1, [sp, #488]
   14634:	str	w8, [sp, #236]
   14638:	str	w11, [sp, #232]
   1463c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14640:	ldr	w8, [sp, #232]
   14644:	eor	w0, w8, w0
   14648:	ldr	w1, [sp, #504]
   1464c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14650:	ldr	w8, [sp, #236]
   14654:	eor	w0, w8, w0
   14658:	ldr	w1, [sp, #520]
   1465c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14660:	ldur	w8, [x29, #-112]
   14664:	ldur	w9, [x29, #-108]
   14668:	ldur	w10, [x29, #-104]
   1466c:	eor	w9, w9, w10
   14670:	and	w8, w8, w9
   14674:	ldur	w9, [x29, #-108]
   14678:	ldur	w10, [x29, #-104]
   1467c:	and	w9, w9, w10
   14680:	add	w8, w8, w9
   14684:	add	w8, w0, w8
   14688:	ldur	w9, [x29, #-84]
   1468c:	add	w8, w9, w8
   14690:	stur	w8, [x29, #-84]
   14694:	ldur	w8, [x29, #-100]
   14698:	ldur	w9, [x29, #-100]
   1469c:	ldur	w0, [x29, #-100]
   146a0:	ldr	w1, [sp, #540]
   146a4:	str	w8, [sp, #228]
   146a8:	str	w9, [sp, #224]
   146ac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   146b0:	ldr	w8, [sp, #224]
   146b4:	eor	w0, w8, w0
   146b8:	ldr	w1, [sp, #536]
   146bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   146c0:	ldr	w8, [sp, #228]
   146c4:	eor	w0, w8, w0
   146c8:	ldr	w1, [sp, #532]
   146cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   146d0:	ldur	w8, [x29, #-92]
   146d4:	ldur	w9, [x29, #-100]
   146d8:	ldur	w10, [x29, #-96]
   146dc:	ldur	w11, [x29, #-92]
   146e0:	eor	w10, w10, w11
   146e4:	and	w9, w9, w10
   146e8:	eor	w8, w8, w9
   146ec:	add	w8, w0, w8
   146f0:	ldur	w9, [x29, #-116]
   146f4:	add	w9, w9, #0x9
   146f8:	ldur	x12, [x29, #-136]
   146fc:	ldr	w9, [x12, w9, uxtw #2]
   14700:	add	w8, w8, w9
   14704:	ldur	w9, [x29, #-52]
   14708:	ldur	w0, [x29, #-52]
   1470c:	ldr	w1, [sp, #520]
   14710:	str	w8, [sp, #220]
   14714:	str	w9, [sp, #216]
   14718:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1471c:	ldr	w8, [sp, #216]
   14720:	eor	w0, w8, w0
   14724:	ldr	w1, [sp, #516]
   14728:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1472c:	ldur	w8, [x29, #-52]
   14730:	eor	w8, w0, w8, lsr #10
   14734:	ldur	w9, [x29, #-72]
   14738:	add	w8, w8, w9
   1473c:	ldur	w9, [x29, #-40]
   14740:	ldur	w0, [x29, #-40]
   14744:	ldr	w1, [sp, #504]
   14748:	str	w8, [sp, #212]
   1474c:	str	w9, [sp, #208]
   14750:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14754:	ldr	w8, [sp, #208]
   14758:	eor	w0, w8, w0
   1475c:	ldr	w1, [sp, #500]
   14760:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14764:	ldur	w8, [x29, #-40]
   14768:	eor	w8, w0, w8, lsr #3
   1476c:	ldr	w9, [sp, #212]
   14770:	add	w8, w9, w8
   14774:	ldur	w10, [x29, #-44]
   14778:	add	w8, w10, w8
   1477c:	stur	w8, [x29, #-44]
   14780:	ldr	w10, [sp, #220]
   14784:	add	w8, w10, w8
   14788:	ldur	w11, [x29, #-88]
   1478c:	add	w8, w11, w8
   14790:	stur	w8, [x29, #-88]
   14794:	ldur	w8, [x29, #-88]
   14798:	ldur	w11, [x29, #-104]
   1479c:	add	w8, w11, w8
   147a0:	stur	w8, [x29, #-104]
   147a4:	ldur	w8, [x29, #-84]
   147a8:	ldur	w11, [x29, #-84]
   147ac:	ldur	w0, [x29, #-84]
   147b0:	ldr	w1, [sp, #488]
   147b4:	str	w8, [sp, #204]
   147b8:	str	w11, [sp, #200]
   147bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   147c0:	ldr	w8, [sp, #200]
   147c4:	eor	w0, w8, w0
   147c8:	ldr	w1, [sp, #504]
   147cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   147d0:	ldr	w8, [sp, #204]
   147d4:	eor	w0, w8, w0
   147d8:	ldr	w1, [sp, #520]
   147dc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   147e0:	ldur	w8, [x29, #-84]
   147e4:	ldur	w9, [x29, #-112]
   147e8:	ldur	w10, [x29, #-108]
   147ec:	eor	w9, w9, w10
   147f0:	and	w8, w8, w9
   147f4:	ldur	w9, [x29, #-112]
   147f8:	ldur	w10, [x29, #-108]
   147fc:	and	w9, w9, w10
   14800:	add	w8, w8, w9
   14804:	add	w8, w0, w8
   14808:	ldur	w9, [x29, #-88]
   1480c:	add	w8, w9, w8
   14810:	stur	w8, [x29, #-88]
   14814:	ldur	w8, [x29, #-104]
   14818:	ldur	w9, [x29, #-104]
   1481c:	ldur	w0, [x29, #-104]
   14820:	ldr	w1, [sp, #540]
   14824:	str	w8, [sp, #196]
   14828:	str	w9, [sp, #192]
   1482c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14830:	ldr	w8, [sp, #192]
   14834:	eor	w0, w8, w0
   14838:	ldr	w1, [sp, #536]
   1483c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14840:	ldr	w8, [sp, #196]
   14844:	eor	w0, w8, w0
   14848:	ldr	w1, [sp, #532]
   1484c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14850:	ldur	w8, [x29, #-96]
   14854:	ldur	w9, [x29, #-104]
   14858:	ldur	w10, [x29, #-100]
   1485c:	ldur	w11, [x29, #-96]
   14860:	eor	w10, w10, w11
   14864:	and	w9, w9, w10
   14868:	eor	w8, w8, w9
   1486c:	add	w8, w0, w8
   14870:	ldur	w9, [x29, #-116]
   14874:	add	w9, w9, #0xa
   14878:	ldur	x12, [x29, #-136]
   1487c:	ldr	w9, [x12, w9, uxtw #2]
   14880:	add	w8, w8, w9
   14884:	ldur	w9, [x29, #-48]
   14888:	ldur	w0, [x29, #-48]
   1488c:	ldr	w1, [sp, #520]
   14890:	str	w8, [sp, #188]
   14894:	str	w9, [sp, #184]
   14898:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1489c:	ldr	w8, [sp, #184]
   148a0:	eor	w0, w8, w0
   148a4:	ldr	w1, [sp, #516]
   148a8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   148ac:	ldur	w8, [x29, #-48]
   148b0:	eor	w8, w0, w8, lsr #10
   148b4:	ldur	w9, [x29, #-68]
   148b8:	add	w8, w8, w9
   148bc:	ldur	w9, [x29, #-36]
   148c0:	ldur	w0, [x29, #-36]
   148c4:	ldr	w1, [sp, #504]
   148c8:	str	w8, [sp, #180]
   148cc:	str	w9, [sp, #176]
   148d0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   148d4:	ldr	w8, [sp, #176]
   148d8:	eor	w0, w8, w0
   148dc:	ldr	w1, [sp, #500]
   148e0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   148e4:	ldur	w8, [x29, #-36]
   148e8:	eor	w8, w0, w8, lsr #3
   148ec:	ldr	w9, [sp, #180]
   148f0:	add	w8, w9, w8
   148f4:	ldur	w10, [x29, #-40]
   148f8:	add	w8, w10, w8
   148fc:	stur	w8, [x29, #-40]
   14900:	ldr	w10, [sp, #188]
   14904:	add	w8, w10, w8
   14908:	ldur	w11, [x29, #-92]
   1490c:	add	w8, w11, w8
   14910:	stur	w8, [x29, #-92]
   14914:	ldur	w8, [x29, #-92]
   14918:	ldur	w11, [x29, #-108]
   1491c:	add	w8, w11, w8
   14920:	stur	w8, [x29, #-108]
   14924:	ldur	w8, [x29, #-88]
   14928:	ldur	w11, [x29, #-88]
   1492c:	ldur	w0, [x29, #-88]
   14930:	ldr	w1, [sp, #488]
   14934:	str	w8, [sp, #172]
   14938:	str	w11, [sp, #168]
   1493c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14940:	ldr	w8, [sp, #168]
   14944:	eor	w0, w8, w0
   14948:	ldr	w1, [sp, #504]
   1494c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14950:	ldr	w8, [sp, #172]
   14954:	eor	w0, w8, w0
   14958:	ldr	w1, [sp, #520]
   1495c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14960:	ldur	w8, [x29, #-88]
   14964:	ldur	w9, [x29, #-84]
   14968:	ldur	w10, [x29, #-112]
   1496c:	eor	w9, w9, w10
   14970:	and	w8, w8, w9
   14974:	ldur	w9, [x29, #-84]
   14978:	ldur	w10, [x29, #-112]
   1497c:	and	w9, w9, w10
   14980:	add	w8, w8, w9
   14984:	add	w8, w0, w8
   14988:	ldur	w9, [x29, #-92]
   1498c:	add	w8, w9, w8
   14990:	stur	w8, [x29, #-92]
   14994:	ldur	w8, [x29, #-108]
   14998:	ldur	w9, [x29, #-108]
   1499c:	ldur	w0, [x29, #-108]
   149a0:	ldr	w1, [sp, #540]
   149a4:	str	w8, [sp, #164]
   149a8:	str	w9, [sp, #160]
   149ac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   149b0:	ldr	w8, [sp, #160]
   149b4:	eor	w0, w8, w0
   149b8:	ldr	w1, [sp, #536]
   149bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   149c0:	ldr	w8, [sp, #164]
   149c4:	eor	w0, w8, w0
   149c8:	ldr	w1, [sp, #532]
   149cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   149d0:	ldur	w8, [x29, #-100]
   149d4:	ldur	w9, [x29, #-108]
   149d8:	ldur	w10, [x29, #-104]
   149dc:	ldur	w11, [x29, #-100]
   149e0:	eor	w10, w10, w11
   149e4:	and	w9, w9, w10
   149e8:	eor	w8, w8, w9
   149ec:	add	w8, w0, w8
   149f0:	ldur	w9, [x29, #-116]
   149f4:	add	w9, w9, #0xb
   149f8:	ldur	x12, [x29, #-136]
   149fc:	ldr	w9, [x12, w9, uxtw #2]
   14a00:	add	w8, w8, w9
   14a04:	ldur	w9, [x29, #-44]
   14a08:	ldur	w0, [x29, #-44]
   14a0c:	ldr	w1, [sp, #520]
   14a10:	str	w8, [sp, #156]
   14a14:	str	w9, [sp, #152]
   14a18:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14a1c:	ldr	w8, [sp, #152]
   14a20:	eor	w0, w8, w0
   14a24:	ldr	w1, [sp, #516]
   14a28:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14a2c:	ldur	w8, [x29, #-44]
   14a30:	eor	w8, w0, w8, lsr #10
   14a34:	ldur	w9, [x29, #-64]
   14a38:	add	w8, w8, w9
   14a3c:	ldur	w9, [x29, #-32]
   14a40:	ldur	w0, [x29, #-32]
   14a44:	ldr	w1, [sp, #504]
   14a48:	str	w8, [sp, #148]
   14a4c:	str	w9, [sp, #144]
   14a50:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14a54:	ldr	w8, [sp, #144]
   14a58:	eor	w0, w8, w0
   14a5c:	ldr	w1, [sp, #500]
   14a60:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14a64:	ldur	w8, [x29, #-32]
   14a68:	eor	w8, w0, w8, lsr #3
   14a6c:	ldr	w9, [sp, #148]
   14a70:	add	w8, w9, w8
   14a74:	ldur	w10, [x29, #-36]
   14a78:	add	w8, w10, w8
   14a7c:	stur	w8, [x29, #-36]
   14a80:	ldr	w10, [sp, #156]
   14a84:	add	w8, w10, w8
   14a88:	ldur	w11, [x29, #-96]
   14a8c:	add	w8, w11, w8
   14a90:	stur	w8, [x29, #-96]
   14a94:	ldur	w8, [x29, #-96]
   14a98:	ldur	w11, [x29, #-112]
   14a9c:	add	w8, w11, w8
   14aa0:	stur	w8, [x29, #-112]
   14aa4:	ldur	w8, [x29, #-92]
   14aa8:	ldur	w11, [x29, #-92]
   14aac:	ldur	w0, [x29, #-92]
   14ab0:	ldr	w1, [sp, #488]
   14ab4:	str	w8, [sp, #140]
   14ab8:	str	w11, [sp, #136]
   14abc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14ac0:	ldr	w8, [sp, #136]
   14ac4:	eor	w0, w8, w0
   14ac8:	ldr	w1, [sp, #504]
   14acc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14ad0:	ldr	w8, [sp, #140]
   14ad4:	eor	w0, w8, w0
   14ad8:	ldr	w1, [sp, #520]
   14adc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14ae0:	ldur	w8, [x29, #-92]
   14ae4:	ldur	w9, [x29, #-88]
   14ae8:	ldur	w10, [x29, #-84]
   14aec:	eor	w9, w9, w10
   14af0:	and	w8, w8, w9
   14af4:	ldur	w9, [x29, #-88]
   14af8:	ldur	w10, [x29, #-84]
   14afc:	and	w9, w9, w10
   14b00:	add	w8, w8, w9
   14b04:	add	w8, w0, w8
   14b08:	ldur	w9, [x29, #-96]
   14b0c:	add	w8, w9, w8
   14b10:	stur	w8, [x29, #-96]
   14b14:	ldur	w8, [x29, #-112]
   14b18:	ldur	w9, [x29, #-112]
   14b1c:	ldur	w0, [x29, #-112]
   14b20:	ldr	w1, [sp, #540]
   14b24:	str	w8, [sp, #132]
   14b28:	str	w9, [sp, #128]
   14b2c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14b30:	ldr	w8, [sp, #128]
   14b34:	eor	w0, w8, w0
   14b38:	ldr	w1, [sp, #536]
   14b3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14b40:	ldr	w8, [sp, #132]
   14b44:	eor	w0, w8, w0
   14b48:	ldr	w1, [sp, #532]
   14b4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14b50:	ldur	w8, [x29, #-104]
   14b54:	ldur	w9, [x29, #-112]
   14b58:	ldur	w10, [x29, #-108]
   14b5c:	ldur	w11, [x29, #-104]
   14b60:	eor	w10, w10, w11
   14b64:	and	w9, w9, w10
   14b68:	eor	w8, w8, w9
   14b6c:	add	w8, w0, w8
   14b70:	ldur	w9, [x29, #-116]
   14b74:	add	w9, w9, #0xc
   14b78:	ldur	x12, [x29, #-136]
   14b7c:	ldr	w9, [x12, w9, uxtw #2]
   14b80:	add	w8, w8, w9
   14b84:	ldur	w9, [x29, #-40]
   14b88:	ldur	w0, [x29, #-40]
   14b8c:	ldr	w1, [sp, #520]
   14b90:	str	w8, [sp, #124]
   14b94:	str	w9, [sp, #120]
   14b98:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14b9c:	ldr	w8, [sp, #120]
   14ba0:	eor	w0, w8, w0
   14ba4:	ldr	w1, [sp, #516]
   14ba8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14bac:	ldur	w8, [x29, #-40]
   14bb0:	eor	w8, w0, w8, lsr #10
   14bb4:	ldur	w9, [x29, #-60]
   14bb8:	add	w8, w8, w9
   14bbc:	ldur	w9, [x29, #-28]
   14bc0:	ldur	w0, [x29, #-28]
   14bc4:	ldr	w1, [sp, #504]
   14bc8:	str	w8, [sp, #116]
   14bcc:	str	w9, [sp, #112]
   14bd0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14bd4:	ldr	w8, [sp, #112]
   14bd8:	eor	w0, w8, w0
   14bdc:	ldr	w1, [sp, #500]
   14be0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14be4:	ldur	w8, [x29, #-28]
   14be8:	eor	w8, w0, w8, lsr #3
   14bec:	ldr	w9, [sp, #116]
   14bf0:	add	w8, w9, w8
   14bf4:	ldur	w10, [x29, #-32]
   14bf8:	add	w8, w10, w8
   14bfc:	stur	w8, [x29, #-32]
   14c00:	ldr	w10, [sp, #124]
   14c04:	add	w8, w10, w8
   14c08:	ldur	w11, [x29, #-100]
   14c0c:	add	w8, w11, w8
   14c10:	stur	w8, [x29, #-100]
   14c14:	ldur	w8, [x29, #-100]
   14c18:	ldur	w11, [x29, #-84]
   14c1c:	add	w8, w11, w8
   14c20:	stur	w8, [x29, #-84]
   14c24:	ldur	w8, [x29, #-96]
   14c28:	ldur	w11, [x29, #-96]
   14c2c:	ldur	w0, [x29, #-96]
   14c30:	ldr	w1, [sp, #488]
   14c34:	str	w8, [sp, #108]
   14c38:	str	w11, [sp, #104]
   14c3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14c40:	ldr	w8, [sp, #104]
   14c44:	eor	w0, w8, w0
   14c48:	ldr	w1, [sp, #504]
   14c4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14c50:	ldr	w8, [sp, #108]
   14c54:	eor	w0, w8, w0
   14c58:	ldr	w1, [sp, #520]
   14c5c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14c60:	ldur	w8, [x29, #-96]
   14c64:	ldur	w9, [x29, #-92]
   14c68:	ldur	w10, [x29, #-88]
   14c6c:	eor	w9, w9, w10
   14c70:	and	w8, w8, w9
   14c74:	ldur	w9, [x29, #-92]
   14c78:	ldur	w10, [x29, #-88]
   14c7c:	and	w9, w9, w10
   14c80:	add	w8, w8, w9
   14c84:	add	w8, w0, w8
   14c88:	ldur	w9, [x29, #-100]
   14c8c:	add	w8, w9, w8
   14c90:	stur	w8, [x29, #-100]
   14c94:	ldur	w8, [x29, #-84]
   14c98:	ldur	w9, [x29, #-84]
   14c9c:	ldur	w0, [x29, #-84]
   14ca0:	ldr	w1, [sp, #540]
   14ca4:	str	w8, [sp, #100]
   14ca8:	str	w9, [sp, #96]
   14cac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14cb0:	ldr	w8, [sp, #96]
   14cb4:	eor	w0, w8, w0
   14cb8:	ldr	w1, [sp, #536]
   14cbc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14cc0:	ldr	w8, [sp, #100]
   14cc4:	eor	w0, w8, w0
   14cc8:	ldr	w1, [sp, #532]
   14ccc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14cd0:	ldur	w8, [x29, #-108]
   14cd4:	ldur	w9, [x29, #-84]
   14cd8:	ldur	w10, [x29, #-112]
   14cdc:	ldur	w11, [x29, #-108]
   14ce0:	eor	w10, w10, w11
   14ce4:	and	w9, w9, w10
   14ce8:	eor	w8, w8, w9
   14cec:	add	w8, w0, w8
   14cf0:	ldur	w9, [x29, #-116]
   14cf4:	add	w9, w9, #0xd
   14cf8:	ldur	x12, [x29, #-136]
   14cfc:	ldr	w9, [x12, w9, uxtw #2]
   14d00:	add	w8, w8, w9
   14d04:	ldur	w9, [x29, #-36]
   14d08:	ldur	w0, [x29, #-36]
   14d0c:	ldr	w1, [sp, #520]
   14d10:	str	w8, [sp, #92]
   14d14:	str	w9, [sp, #88]
   14d18:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14d1c:	ldr	w8, [sp, #88]
   14d20:	eor	w0, w8, w0
   14d24:	ldr	w1, [sp, #516]
   14d28:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14d2c:	ldur	w8, [x29, #-36]
   14d30:	eor	w8, w0, w8, lsr #10
   14d34:	ldur	w9, [x29, #-56]
   14d38:	add	w8, w8, w9
   14d3c:	ldur	w9, [x29, #-24]
   14d40:	ldur	w0, [x29, #-24]
   14d44:	ldr	w1, [sp, #504]
   14d48:	str	w8, [sp, #84]
   14d4c:	str	w9, [sp, #80]
   14d50:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14d54:	ldr	w8, [sp, #80]
   14d58:	eor	w0, w8, w0
   14d5c:	ldr	w1, [sp, #500]
   14d60:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14d64:	ldur	w8, [x29, #-24]
   14d68:	eor	w8, w0, w8, lsr #3
   14d6c:	ldr	w9, [sp, #84]
   14d70:	add	w8, w9, w8
   14d74:	ldur	w10, [x29, #-28]
   14d78:	add	w8, w10, w8
   14d7c:	stur	w8, [x29, #-28]
   14d80:	ldr	w10, [sp, #92]
   14d84:	add	w8, w10, w8
   14d88:	ldur	w11, [x29, #-104]
   14d8c:	add	w8, w11, w8
   14d90:	stur	w8, [x29, #-104]
   14d94:	ldur	w8, [x29, #-104]
   14d98:	ldur	w11, [x29, #-88]
   14d9c:	add	w8, w11, w8
   14da0:	stur	w8, [x29, #-88]
   14da4:	ldur	w8, [x29, #-100]
   14da8:	ldur	w11, [x29, #-100]
   14dac:	ldur	w0, [x29, #-100]
   14db0:	ldr	w1, [sp, #488]
   14db4:	str	w8, [sp, #76]
   14db8:	str	w11, [sp, #72]
   14dbc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14dc0:	ldr	w8, [sp, #72]
   14dc4:	eor	w0, w8, w0
   14dc8:	ldr	w1, [sp, #504]
   14dcc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14dd0:	ldr	w8, [sp, #76]
   14dd4:	eor	w0, w8, w0
   14dd8:	ldr	w1, [sp, #520]
   14ddc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14de0:	ldur	w8, [x29, #-100]
   14de4:	ldur	w9, [x29, #-96]
   14de8:	ldur	w10, [x29, #-92]
   14dec:	eor	w9, w9, w10
   14df0:	and	w8, w8, w9
   14df4:	ldur	w9, [x29, #-96]
   14df8:	ldur	w10, [x29, #-92]
   14dfc:	and	w9, w9, w10
   14e00:	add	w8, w8, w9
   14e04:	add	w8, w0, w8
   14e08:	ldur	w9, [x29, #-104]
   14e0c:	add	w8, w9, w8
   14e10:	stur	w8, [x29, #-104]
   14e14:	ldur	w8, [x29, #-88]
   14e18:	ldur	w9, [x29, #-88]
   14e1c:	ldur	w0, [x29, #-88]
   14e20:	ldr	w1, [sp, #540]
   14e24:	str	w8, [sp, #68]
   14e28:	str	w9, [sp, #64]
   14e2c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14e30:	ldr	w8, [sp, #64]
   14e34:	eor	w0, w8, w0
   14e38:	ldr	w1, [sp, #536]
   14e3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14e40:	ldr	w8, [sp, #68]
   14e44:	eor	w0, w8, w0
   14e48:	ldr	w1, [sp, #532]
   14e4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14e50:	ldur	w8, [x29, #-112]
   14e54:	ldur	w9, [x29, #-88]
   14e58:	ldur	w10, [x29, #-84]
   14e5c:	ldur	w11, [x29, #-112]
   14e60:	eor	w10, w10, w11
   14e64:	and	w9, w9, w10
   14e68:	eor	w8, w8, w9
   14e6c:	add	w8, w0, w8
   14e70:	ldur	w9, [x29, #-116]
   14e74:	add	w9, w9, #0xe
   14e78:	ldur	x12, [x29, #-136]
   14e7c:	ldr	w9, [x12, w9, uxtw #2]
   14e80:	add	w8, w8, w9
   14e84:	ldur	w9, [x29, #-32]
   14e88:	ldur	w0, [x29, #-32]
   14e8c:	ldr	w1, [sp, #520]
   14e90:	str	w8, [sp, #60]
   14e94:	str	w9, [sp, #56]
   14e98:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14e9c:	ldr	w8, [sp, #56]
   14ea0:	eor	w0, w8, w0
   14ea4:	ldr	w1, [sp, #516]
   14ea8:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14eac:	ldur	w8, [x29, #-32]
   14eb0:	eor	w8, w0, w8, lsr #10
   14eb4:	ldur	w9, [x29, #-52]
   14eb8:	add	w8, w8, w9
   14ebc:	ldur	w9, [x29, #-20]
   14ec0:	ldur	w0, [x29, #-20]
   14ec4:	ldr	w1, [sp, #504]
   14ec8:	str	w8, [sp, #52]
   14ecc:	str	w9, [sp, #48]
   14ed0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14ed4:	ldr	w8, [sp, #48]
   14ed8:	eor	w0, w8, w0
   14edc:	ldr	w1, [sp, #500]
   14ee0:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14ee4:	ldur	w8, [x29, #-20]
   14ee8:	eor	w8, w0, w8, lsr #3
   14eec:	ldr	w9, [sp, #52]
   14ef0:	add	w8, w9, w8
   14ef4:	ldur	w10, [x29, #-24]
   14ef8:	add	w8, w10, w8
   14efc:	stur	w8, [x29, #-24]
   14f00:	ldr	w10, [sp, #60]
   14f04:	add	w8, w10, w8
   14f08:	ldur	w11, [x29, #-108]
   14f0c:	add	w8, w11, w8
   14f10:	stur	w8, [x29, #-108]
   14f14:	ldur	w8, [x29, #-108]
   14f18:	ldur	w11, [x29, #-92]
   14f1c:	add	w8, w11, w8
   14f20:	stur	w8, [x29, #-92]
   14f24:	ldur	w8, [x29, #-104]
   14f28:	ldur	w11, [x29, #-104]
   14f2c:	ldur	w0, [x29, #-104]
   14f30:	ldr	w1, [sp, #488]
   14f34:	str	w8, [sp, #44]
   14f38:	str	w11, [sp, #40]
   14f3c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14f40:	ldr	w8, [sp, #40]
   14f44:	eor	w0, w8, w0
   14f48:	ldr	w1, [sp, #504]
   14f4c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14f50:	ldr	w8, [sp, #44]
   14f54:	eor	w0, w8, w0
   14f58:	ldr	w1, [sp, #520]
   14f5c:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14f60:	ldur	w8, [x29, #-104]
   14f64:	ldur	w9, [x29, #-100]
   14f68:	ldur	w10, [x29, #-96]
   14f6c:	eor	w9, w9, w10
   14f70:	and	w8, w8, w9
   14f74:	ldur	w9, [x29, #-100]
   14f78:	ldur	w10, [x29, #-96]
   14f7c:	and	w9, w9, w10
   14f80:	add	w8, w8, w9
   14f84:	add	w8, w0, w8
   14f88:	ldur	w9, [x29, #-108]
   14f8c:	add	w8, w9, w8
   14f90:	stur	w8, [x29, #-108]
   14f94:	ldur	w8, [x29, #-92]
   14f98:	ldur	w9, [x29, #-92]
   14f9c:	ldur	w0, [x29, #-92]
   14fa0:	ldr	w1, [sp, #540]
   14fa4:	str	w8, [sp, #36]
   14fa8:	str	w9, [sp, #32]
   14fac:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14fb0:	ldr	w8, [sp, #32]
   14fb4:	eor	w0, w8, w0
   14fb8:	ldr	w1, [sp, #536]
   14fbc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14fc0:	ldr	w8, [sp, #36]
   14fc4:	eor	w0, w8, w0
   14fc8:	ldr	w1, [sp, #532]
   14fcc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   14fd0:	ldur	w8, [x29, #-84]
   14fd4:	ldur	w9, [x29, #-92]
   14fd8:	ldur	w10, [x29, #-88]
   14fdc:	ldur	w11, [x29, #-84]
   14fe0:	eor	w10, w10, w11
   14fe4:	and	w9, w9, w10
   14fe8:	eor	w8, w8, w9
   14fec:	add	w8, w0, w8
   14ff0:	ldur	w9, [x29, #-116]
   14ff4:	add	w9, w9, #0xf
   14ff8:	ldur	x12, [x29, #-136]
   14ffc:	ldr	w9, [x12, w9, uxtw #2]
   15000:	add	w8, w8, w9
   15004:	ldur	w9, [x29, #-28]
   15008:	ldur	w0, [x29, #-28]
   1500c:	ldr	w1, [sp, #520]
   15010:	str	w8, [sp, #28]
   15014:	str	w9, [sp, #24]
   15018:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1501c:	ldr	w8, [sp, #24]
   15020:	eor	w0, w8, w0
   15024:	ldr	w1, [sp, #516]
   15028:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   1502c:	ldur	w8, [x29, #-28]
   15030:	eor	w8, w0, w8, lsr #10
   15034:	ldur	w9, [x29, #-48]
   15038:	add	w8, w8, w9
   1503c:	ldur	w9, [x29, #-80]
   15040:	ldur	w0, [x29, #-80]
   15044:	ldr	w1, [sp, #504]
   15048:	str	w8, [sp, #20]
   1504c:	str	w9, [sp, #16]
   15050:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   15054:	ldr	w8, [sp, #16]
   15058:	eor	w0, w8, w0
   1505c:	ldr	w1, [sp, #500]
   15060:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   15064:	ldur	w8, [x29, #-80]
   15068:	eor	w8, w0, w8, lsr #3
   1506c:	ldr	w9, [sp, #20]
   15070:	add	w8, w9, w8
   15074:	ldur	w10, [x29, #-20]
   15078:	add	w8, w10, w8
   1507c:	stur	w8, [x29, #-20]
   15080:	ldr	w10, [sp, #28]
   15084:	add	w8, w10, w8
   15088:	ldur	w11, [x29, #-112]
   1508c:	add	w8, w11, w8
   15090:	stur	w8, [x29, #-112]
   15094:	ldur	w8, [x29, #-112]
   15098:	ldur	w11, [x29, #-96]
   1509c:	add	w8, w11, w8
   150a0:	stur	w8, [x29, #-96]
   150a4:	ldur	w8, [x29, #-108]
   150a8:	ldur	w11, [x29, #-108]
   150ac:	ldur	w0, [x29, #-108]
   150b0:	ldr	w1, [sp, #488]
   150b4:	str	w8, [sp, #12]
   150b8:	str	w11, [sp, #8]
   150bc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   150c0:	ldr	w8, [sp, #8]
   150c4:	eor	w0, w8, w0
   150c8:	ldr	w1, [sp, #504]
   150cc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   150d0:	ldr	w8, [sp, #12]
   150d4:	eor	w0, w8, w0
   150d8:	ldr	w1, [sp, #520]
   150dc:	bl	151d4 <lzma_crc64@@XZ_5.0+0x2f18>
   150e0:	ldur	w8, [x29, #-108]
   150e4:	ldur	w9, [x29, #-104]
   150e8:	ldur	w10, [x29, #-100]
   150ec:	eor	w9, w9, w10
   150f0:	and	w8, w8, w9
   150f4:	ldur	w9, [x29, #-104]
   150f8:	ldur	w10, [x29, #-100]
   150fc:	and	w9, w9, w10
   15100:	add	w8, w8, w9
   15104:	add	w8, w0, w8
   15108:	ldur	w9, [x29, #-112]
   1510c:	add	w8, w9, w8
   15110:	stur	w8, [x29, #-112]
   15114:	ldur	w8, [x29, #-116]
   15118:	add	w8, w8, #0x10
   1511c:	stur	w8, [x29, #-116]
   15120:	b	138c8 <lzma_crc64@@XZ_5.0+0x160c>
   15124:	ldur	w8, [x29, #-112]
   15128:	ldur	x9, [x29, #-8]
   1512c:	ldr	w10, [x9]
   15130:	add	w8, w10, w8
   15134:	str	w8, [x9]
   15138:	ldur	w8, [x29, #-108]
   1513c:	ldur	x9, [x29, #-8]
   15140:	ldr	w10, [x9, #4]
   15144:	add	w8, w10, w8
   15148:	str	w8, [x9, #4]
   1514c:	ldur	w8, [x29, #-104]
   15150:	ldur	x9, [x29, #-8]
   15154:	ldr	w10, [x9, #8]
   15158:	add	w8, w10, w8
   1515c:	str	w8, [x9, #8]
   15160:	ldur	w8, [x29, #-100]
   15164:	ldur	x9, [x29, #-8]
   15168:	ldr	w10, [x9, #12]
   1516c:	add	w8, w10, w8
   15170:	str	w8, [x9, #12]
   15174:	ldur	w8, [x29, #-96]
   15178:	ldur	x9, [x29, #-8]
   1517c:	ldr	w10, [x9, #16]
   15180:	add	w8, w10, w8
   15184:	str	w8, [x9, #16]
   15188:	ldur	w8, [x29, #-92]
   1518c:	ldur	x9, [x29, #-8]
   15190:	ldr	w10, [x9, #20]
   15194:	add	w8, w10, w8
   15198:	str	w8, [x9, #20]
   1519c:	ldur	w8, [x29, #-88]
   151a0:	ldur	x9, [x29, #-8]
   151a4:	ldr	w10, [x9, #24]
   151a8:	add	w8, w10, w8
   151ac:	str	w8, [x9, #24]
   151b0:	ldur	w8, [x29, #-84]
   151b4:	ldur	x9, [x29, #-8]
   151b8:	ldr	w10, [x9, #28]
   151bc:	add	w8, w10, w8
   151c0:	str	w8, [x9, #28]
   151c4:	add	sp, sp, #0x400
   151c8:	ldr	x28, [sp, #16]
   151cc:	ldp	x29, x30, [sp], #32
   151d0:	ret
   151d4:	sub	sp, sp, #0x10
   151d8:	mov	w8, #0x20                  	// #32
   151dc:	str	w0, [sp, #12]
   151e0:	str	w1, [sp, #8]
   151e4:	ldr	w9, [sp, #12]
   151e8:	ldr	w10, [sp, #8]
   151ec:	lsr	w9, w9, w10
   151f0:	ldr	w10, [sp, #12]
   151f4:	ldr	w11, [sp, #8]
   151f8:	subs	w8, w8, w11
   151fc:	lsl	w8, w10, w8
   15200:	orr	w0, w9, w8
   15204:	add	sp, sp, #0x10
   15208:	ret
   1520c:	sub	sp, sp, #0xb0
   15210:	stp	x29, x30, [sp, #160]
   15214:	add	x29, sp, #0xa0
   15218:	mov	x2, #0x78                  	// #120
   1521c:	mov	x8, xzr
   15220:	add	x9, sp, #0x18
   15224:	stur	x0, [x29, #-16]
   15228:	mov	x0, x9
   1522c:	mov	w10, wzr
   15230:	mov	w1, w10
   15234:	str	x8, [sp, #16]
   15238:	str	x9, [sp, #8]
   1523c:	bl	3230 <memset@plt>
   15240:	ldur	x2, [x29, #-16]
   15244:	ldr	x0, [sp, #8]
   15248:	ldr	x1, [sp, #16]
   1524c:	bl	152a4 <lzma_crc64@@XZ_5.0+0x2fe8>
   15250:	tbnz	w0, #0, 15258 <lzma_crc64@@XZ_5.0+0x2f9c>
   15254:	b	15264 <lzma_crc64@@XZ_5.0+0x2fa8>
   15258:	mov	x8, #0xffffffffffffffff    	// #-1
   1525c:	stur	x8, [x29, #-8]
   15260:	b	15294 <lzma_crc64@@XZ_5.0+0x2fd8>
   15264:	ldr	w8, [sp, #132]
   15268:	mov	w9, w8
   1526c:	ldr	w8, [sp, #136]
   15270:	mov	w10, w8
   15274:	add	x9, x9, x10
   15278:	mov	x10, #0x4                   	// #4
   1527c:	mul	x9, x9, x10
   15280:	ldr	w8, [sp, #32]
   15284:	mov	w10, w8
   15288:	add	x9, x9, x10
   1528c:	add	x9, x9, #0xe0
   15290:	stur	x9, [x29, #-8]
   15294:	ldur	x0, [x29, #-8]
   15298:	ldp	x29, x30, [sp, #160]
   1529c:	add	sp, sp, #0xb0
   152a0:	ret
   152a4:	sub	sp, sp, #0x60
   152a8:	stp	x29, x30, [sp, #80]
   152ac:	add	x29, sp, #0x50
   152b0:	stur	x0, [x29, #-16]
   152b4:	stur	x1, [x29, #-24]
   152b8:	stur	x2, [x29, #-32]
   152bc:	ldur	x8, [x29, #-32]
   152c0:	ldr	x8, [x8, #8]
   152c4:	cmp	x8, #0x1, lsl #12
   152c8:	b.cc	152f8 <lzma_crc64@@XZ_5.0+0x303c>  // b.lo, b.ul, b.last
   152cc:	ldur	x8, [x29, #-32]
   152d0:	ldr	x8, [x8, #8]
   152d4:	mov	x9, #0x60000000            	// #1610612736
   152d8:	cmp	x8, x9
   152dc:	b.hi	152f8 <lzma_crc64@@XZ_5.0+0x303c>  // b.pmore
   152e0:	ldur	x8, [x29, #-32]
   152e4:	ldr	x8, [x8, #32]
   152e8:	ldur	x9, [x29, #-32]
   152ec:	ldr	x9, [x9, #24]
   152f0:	cmp	x8, x9
   152f4:	b.ls	15308 <lzma_crc64@@XZ_5.0+0x304c>  // b.plast
   152f8:	mov	w8, #0x1                   	// #1
   152fc:	and	w8, w8, #0x1
   15300:	sturb	w8, [x29, #-1]
   15304:	b	157c0 <lzma_crc64@@XZ_5.0+0x3504>
   15308:	ldur	x8, [x29, #-32]
   1530c:	ldr	x8, [x8]
   15310:	ldur	x9, [x29, #-32]
   15314:	ldr	x9, [x9, #8]
   15318:	add	x8, x8, x9
   1531c:	ldur	x9, [x29, #-16]
   15320:	str	w8, [x9, #12]
   15324:	ldur	x9, [x29, #-32]
   15328:	ldr	x9, [x9, #16]
   1532c:	ldur	x10, [x29, #-32]
   15330:	ldr	x10, [x10, #24]
   15334:	add	x9, x9, x10
   15338:	ldur	x10, [x29, #-16]
   1533c:	str	w9, [x10, #16]
   15340:	ldur	x10, [x29, #-32]
   15344:	ldr	x10, [x10, #8]
   15348:	mov	x11, #0x2                   	// #2
   1534c:	udiv	x10, x10, x11
   15350:	stur	w10, [x29, #-36]
   15354:	ldur	w8, [x29, #-36]
   15358:	mov	w9, #0x40000000            	// #1073741824
   1535c:	cmp	w8, w9
   15360:	b.ls	15374 <lzma_crc64@@XZ_5.0+0x30b8>  // b.plast
   15364:	ldur	w8, [x29, #-36]
   15368:	mov	w9, #0x2                   	// #2
   1536c:	udiv	w8, w8, w9
   15370:	stur	w8, [x29, #-36]
   15374:	ldur	x8, [x29, #-32]
   15378:	ldr	x8, [x8]
   1537c:	ldur	x9, [x29, #-32]
   15380:	ldr	x9, [x9, #24]
   15384:	add	x8, x8, x9
   15388:	ldur	x9, [x29, #-32]
   1538c:	ldr	x9, [x9, #16]
   15390:	add	x8, x8, x9
   15394:	mov	x9, #0x2                   	// #2
   15398:	udiv	x8, x8, x9
   1539c:	add	x8, x8, #0x80, lsl #12
   153a0:	ldur	w10, [x29, #-36]
   153a4:	mov	w9, w10
   153a8:	add	x8, x9, x8
   153ac:	stur	w8, [x29, #-36]
   153b0:	ldur	x9, [x29, #-16]
   153b4:	ldr	w8, [x9, #8]
   153b8:	str	w8, [sp, #40]
   153bc:	ldur	x9, [x29, #-16]
   153c0:	ldr	w8, [x9, #12]
   153c4:	ldur	w10, [x29, #-36]
   153c8:	add	w8, w8, w10
   153cc:	ldur	x9, [x29, #-16]
   153d0:	ldr	w10, [x9, #16]
   153d4:	add	w8, w8, w10
   153d8:	ldur	x9, [x29, #-16]
   153dc:	str	w8, [x9, #8]
   153e0:	ldur	x9, [x29, #-16]
   153e4:	ldr	x9, [x9]
   153e8:	cbz	x9, 1541c <lzma_crc64@@XZ_5.0+0x3160>
   153ec:	ldr	w8, [sp, #40]
   153f0:	ldur	x9, [x29, #-16]
   153f4:	ldr	w10, [x9, #8]
   153f8:	cmp	w8, w10
   153fc:	b.eq	1541c <lzma_crc64@@XZ_5.0+0x3160>  // b.none
   15400:	ldur	x8, [x29, #-16]
   15404:	ldr	x0, [x8]
   15408:	ldur	x1, [x29, #-24]
   1540c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15410:	ldur	x8, [x29, #-16]
   15414:	mov	x9, xzr
   15418:	str	x9, [x8]
   1541c:	ldur	x8, [x29, #-32]
   15420:	ldr	x8, [x8, #24]
   15424:	ldur	x9, [x29, #-16]
   15428:	str	w8, [x9, #100]
   1542c:	ldur	x9, [x29, #-32]
   15430:	ldr	x9, [x9, #32]
   15434:	ldur	x10, [x29, #-16]
   15438:	str	w9, [x10, #96]
   1543c:	ldur	x10, [x29, #-32]
   15440:	ldr	x10, [x10, #8]
   15444:	add	x10, x10, #0x1
   15448:	ldur	x11, [x29, #-16]
   1544c:	str	w10, [x11, #84]
   15450:	ldur	x11, [x29, #-32]
   15454:	ldr	w8, [x11, #40]
   15458:	subs	w8, w8, #0x3
   1545c:	mov	w11, w8
   15460:	ubfx	x11, x11, #0, #32
   15464:	cmp	x11, #0x11
   15468:	str	x11, [sp, #8]
   1546c:	b.hi	1553c <lzma_crc64@@XZ_5.0+0x3280>  // b.pmore
   15470:	adrp	x8, 2f000 <lzma_mode_is_supported@@XZ_5.0+0x14a98>
   15474:	add	x8, x8, #0xc30
   15478:	ldr	x11, [sp, #8]
   1547c:	ldrsw	x10, [x8, x11, lsl #2]
   15480:	add	x9, x8, x10
   15484:	br	x9
   15488:	ldur	x8, [x29, #-16]
   1548c:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   15490:	ldr	x9, [x9, #3896]
   15494:	str	x9, [x8, #48]
   15498:	ldur	x8, [x29, #-16]
   1549c:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   154a0:	ldr	x9, [x9, #3912]
   154a4:	str	x9, [x8, #56]
   154a8:	b	1554c <lzma_crc64@@XZ_5.0+0x3290>
   154ac:	ldur	x8, [x29, #-16]
   154b0:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   154b4:	ldr	x9, [x9, #4064]
   154b8:	str	x9, [x8, #48]
   154bc:	ldur	x8, [x29, #-16]
   154c0:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   154c4:	ldr	x9, [x9, #4024]
   154c8:	str	x9, [x8, #56]
   154cc:	b	1554c <lzma_crc64@@XZ_5.0+0x3290>
   154d0:	ldur	x8, [x29, #-16]
   154d4:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   154d8:	ldr	x9, [x9, #4048]
   154dc:	str	x9, [x8, #48]
   154e0:	ldur	x8, [x29, #-16]
   154e4:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   154e8:	ldr	x9, [x9, #4032]
   154ec:	str	x9, [x8, #56]
   154f0:	b	1554c <lzma_crc64@@XZ_5.0+0x3290>
   154f4:	ldur	x8, [x29, #-16]
   154f8:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   154fc:	ldr	x9, [x9, #3888]
   15500:	str	x9, [x8, #48]
   15504:	ldur	x8, [x29, #-16]
   15508:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1550c:	ldr	x9, [x9, #3928]
   15510:	str	x9, [x8, #56]
   15514:	b	1554c <lzma_crc64@@XZ_5.0+0x3290>
   15518:	ldur	x8, [x29, #-16]
   1551c:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   15520:	ldr	x9, [x9, #4016]
   15524:	str	x9, [x8, #48]
   15528:	ldur	x8, [x29, #-16]
   1552c:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   15530:	ldr	x9, [x9, #4000]
   15534:	str	x9, [x8, #56]
   15538:	b	1554c <lzma_crc64@@XZ_5.0+0x3290>
   1553c:	mov	w8, #0x1                   	// #1
   15540:	and	w8, w8, #0x1
   15544:	sturb	w8, [x29, #-1]
   15548:	b	157c0 <lzma_crc64@@XZ_5.0+0x3504>
   1554c:	ldur	x8, [x29, #-32]
   15550:	ldr	w9, [x8, #40]
   15554:	and	w9, w9, #0xf
   15558:	str	w9, [sp, #36]
   1555c:	ldr	w9, [sp, #36]
   15560:	ldur	x8, [x29, #-16]
   15564:	ldr	w10, [x8, #96]
   15568:	cmp	w9, w10
   1556c:	b.ls	15580 <lzma_crc64@@XZ_5.0+0x32c4>  // b.plast
   15570:	mov	w8, #0x1                   	// #1
   15574:	and	w8, w8, #0x1
   15578:	sturb	w8, [x29, #-1]
   1557c:	b	157c0 <lzma_crc64@@XZ_5.0+0x3504>
   15580:	ldur	x8, [x29, #-32]
   15584:	ldr	w9, [x8, #40]
   15588:	tst	w9, #0x10
   1558c:	cset	w9, ne  // ne = any
   15590:	and	w9, w9, #0x1
   15594:	strb	w9, [sp, #35]
   15598:	ldr	w9, [sp, #36]
   1559c:	cmp	w9, #0x2
   155a0:	b.ne	155b0 <lzma_crc64@@XZ_5.0+0x32f4>  // b.any
   155a4:	mov	w8, #0xffff                	// #65535
   155a8:	str	w8, [sp, #28]
   155ac:	b	15650 <lzma_crc64@@XZ_5.0+0x3394>
   155b0:	ldur	x8, [x29, #-32]
   155b4:	ldr	x8, [x8, #8]
   155b8:	subs	x8, x8, #0x1
   155bc:	str	w8, [sp, #28]
   155c0:	ldr	w8, [sp, #28]
   155c4:	mov	x9, #0x1                   	// #1
   155c8:	ldr	w10, [sp, #28]
   155cc:	orr	w8, w10, w8, lsr #1
   155d0:	str	w8, [sp, #28]
   155d4:	ldr	w8, [sp, #28]
   155d8:	ldr	w10, [sp, #28]
   155dc:	orr	w8, w10, w8, lsr #2
   155e0:	str	w8, [sp, #28]
   155e4:	ldr	w8, [sp, #28]
   155e8:	ldr	w10, [sp, #28]
   155ec:	orr	w8, w10, w8, lsr #4
   155f0:	str	w8, [sp, #28]
   155f4:	ldr	w8, [sp, #28]
   155f8:	ldr	w10, [sp, #28]
   155fc:	orr	w8, w10, w8, lsr #8
   15600:	str	w8, [sp, #28]
   15604:	ldr	w8, [sp, #28]
   15608:	lsr	w8, w8, w9
   1560c:	str	w8, [sp, #28]
   15610:	ldr	w8, [sp, #28]
   15614:	orr	w8, w8, #0xffff
   15618:	str	w8, [sp, #28]
   1561c:	ldr	w8, [sp, #28]
   15620:	mov	w9, #0x1000000             	// #16777216
   15624:	cmp	w8, w9
   15628:	b.ls	15650 <lzma_crc64@@XZ_5.0+0x3394>  // b.plast
   1562c:	ldr	w8, [sp, #36]
   15630:	cmp	w8, #0x3
   15634:	b.ne	15644 <lzma_crc64@@XZ_5.0+0x3388>  // b.any
   15638:	mov	w8, #0xffffff              	// #16777215
   1563c:	str	w8, [sp, #28]
   15640:	b	15650 <lzma_crc64@@XZ_5.0+0x3394>
   15644:	ldr	w8, [sp, #28]
   15648:	lsr	w8, w8, #1
   1564c:	str	w8, [sp, #28]
   15650:	ldr	w8, [sp, #28]
   15654:	ldur	x9, [x29, #-16]
   15658:	str	w8, [x9, #88]
   1565c:	ldr	w8, [sp, #28]
   15660:	add	w8, w8, #0x1
   15664:	str	w8, [sp, #28]
   15668:	ldr	w8, [sp, #36]
   1566c:	cmp	w8, #0x2
   15670:	b.ls	15680 <lzma_crc64@@XZ_5.0+0x33c4>  // b.plast
   15674:	ldr	w8, [sp, #28]
   15678:	add	w8, w8, #0x400
   1567c:	str	w8, [sp, #28]
   15680:	ldr	w8, [sp, #36]
   15684:	cmp	w8, #0x3
   15688:	b.ls	15698 <lzma_crc64@@XZ_5.0+0x33dc>  // b.plast
   1568c:	ldr	w8, [sp, #28]
   15690:	add	w8, w8, #0x10, lsl #12
   15694:	str	w8, [sp, #28]
   15698:	ldur	x8, [x29, #-16]
   1569c:	ldr	w9, [x8, #108]
   156a0:	str	w9, [sp, #24]
   156a4:	ldur	x8, [x29, #-16]
   156a8:	ldr	w9, [x8, #112]
   156ac:	str	w9, [sp, #20]
   156b0:	ldr	w9, [sp, #28]
   156b4:	ldur	x8, [x29, #-16]
   156b8:	str	w9, [x8, #108]
   156bc:	ldur	x8, [x29, #-16]
   156c0:	ldr	w9, [x8, #84]
   156c4:	ldur	x8, [x29, #-16]
   156c8:	str	w9, [x8, #112]
   156cc:	ldrb	w9, [sp, #35]
   156d0:	tbnz	w9, #0, 156d8 <lzma_crc64@@XZ_5.0+0x341c>
   156d4:	b	156ec <lzma_crc64@@XZ_5.0+0x3430>
   156d8:	ldur	x8, [x29, #-16]
   156dc:	ldr	w9, [x8, #112]
   156e0:	mov	w10, #0x2                   	// #2
   156e4:	mul	w9, w9, w10
   156e8:	str	w9, [x8, #112]
   156ec:	ldr	w8, [sp, #24]
   156f0:	ldur	x9, [x29, #-16]
   156f4:	ldr	w10, [x9, #108]
   156f8:	cmp	w8, w10
   156fc:	b.ne	15714 <lzma_crc64@@XZ_5.0+0x3458>  // b.any
   15700:	ldr	w8, [sp, #20]
   15704:	ldur	x9, [x29, #-16]
   15708:	ldr	w10, [x9, #112]
   1570c:	cmp	w8, w10
   15710:	b.eq	15750 <lzma_crc64@@XZ_5.0+0x3494>  // b.none
   15714:	ldur	x8, [x29, #-16]
   15718:	ldr	x0, [x8, #64]
   1571c:	ldur	x1, [x29, #-24]
   15720:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15724:	ldur	x8, [x29, #-16]
   15728:	mov	x9, xzr
   1572c:	str	x9, [x8, #64]
   15730:	ldur	x8, [x29, #-16]
   15734:	ldr	x0, [x8, #72]
   15738:	ldur	x1, [x29, #-24]
   1573c:	str	x9, [sp]
   15740:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15744:	ldur	x8, [x29, #-16]
   15748:	ldr	x9, [sp]
   1574c:	str	x9, [x8, #72]
   15750:	ldur	x8, [x29, #-32]
   15754:	ldr	w9, [x8, #44]
   15758:	ldur	x8, [x29, #-16]
   1575c:	str	w9, [x8, #92]
   15760:	ldur	x8, [x29, #-16]
   15764:	ldr	w9, [x8, #92]
   15768:	cbnz	w9, 157b4 <lzma_crc64@@XZ_5.0+0x34f8>
   1576c:	ldrb	w8, [sp, #35]
   15770:	tbnz	w8, #0, 15778 <lzma_crc64@@XZ_5.0+0x34bc>
   15774:	b	15798 <lzma_crc64@@XZ_5.0+0x34dc>
   15778:	ldur	x8, [x29, #-16]
   1577c:	ldr	w9, [x8, #96]
   15780:	mov	w10, #0x2                   	// #2
   15784:	udiv	w9, w9, w10
   15788:	add	w9, w9, #0x10
   1578c:	ldur	x8, [x29, #-16]
   15790:	str	w9, [x8, #92]
   15794:	b	157b4 <lzma_crc64@@XZ_5.0+0x34f8>
   15798:	ldur	x8, [x29, #-16]
   1579c:	ldr	w9, [x8, #96]
   157a0:	mov	w10, #0x4                   	// #4
   157a4:	udiv	w9, w9, w10
   157a8:	add	w9, w9, #0x4
   157ac:	ldur	x8, [x29, #-16]
   157b0:	str	w9, [x8, #92]
   157b4:	mov	w8, wzr
   157b8:	and	w8, w8, #0x1
   157bc:	sturb	w8, [x29, #-1]
   157c0:	ldurb	w8, [x29, #-1]
   157c4:	and	w0, w8, #0x1
   157c8:	ldp	x29, x30, [sp, #80]
   157cc:	add	sp, sp, #0x60
   157d0:	ret
   157d4:	sub	sp, sp, #0xf0
   157d8:	stp	x29, x30, [sp, #224]
   157dc:	add	x29, sp, #0xe0
   157e0:	sub	x8, x29, #0x30
   157e4:	str	x0, [x8, #32]
   157e8:	str	x1, [x8, #24]
   157ec:	str	x2, [x8, #16]
   157f0:	str	x3, [x8, #8]
   157f4:	ldr	x9, [x8, #32]
   157f8:	ldr	x9, [x9]
   157fc:	str	x9, [x8]
   15800:	ldr	x9, [x8]
   15804:	str	x8, [sp, #24]
   15808:	cbnz	x9, 15910 <lzma_crc64@@XZ_5.0+0x3654>
   1580c:	ldr	x8, [sp, #24]
   15810:	ldr	x1, [x8, #24]
   15814:	mov	x0, #0xe0                  	// #224
   15818:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   1581c:	ldr	x8, [sp, #24]
   15820:	str	x0, [x8]
   15824:	ldr	x9, [x8]
   15828:	cbnz	x9, 15838 <lzma_crc64@@XZ_5.0+0x357c>
   1582c:	mov	w8, #0x5                   	// #5
   15830:	stur	w8, [x29, #-4]
   15834:	b	159c0 <lzma_crc64@@XZ_5.0+0x3704>
   15838:	ldr	x8, [sp, #24]
   1583c:	ldr	x9, [x8]
   15840:	ldr	x10, [x8, #32]
   15844:	str	x9, [x10]
   15848:	ldr	x9, [x8, #32]
   1584c:	adrp	x10, 15000 <lzma_crc64@@XZ_5.0+0x2d44>
   15850:	add	x10, x10, #0x9d0
   15854:	str	x10, [x9, #24]
   15858:	ldr	x9, [x8, #32]
   1585c:	adrp	x10, 15000 <lzma_crc64@@XZ_5.0+0x2d44>
   15860:	add	x10, x10, #0xb20
   15864:	str	x10, [x9, #32]
   15868:	ldr	x9, [x8, #32]
   1586c:	adrp	x10, 15000 <lzma_crc64@@XZ_5.0+0x2d44>
   15870:	add	x10, x10, #0xbcc
   15874:	str	x10, [x9, #64]
   15878:	ldr	x9, [x8]
   1587c:	mov	x10, xzr
   15880:	str	x10, [x9]
   15884:	ldr	x9, [x8]
   15888:	str	x10, [x9, #8]
   1588c:	ldr	x9, [x8]
   15890:	str	x10, [x9, #16]
   15894:	ldr	x9, [x8]
   15898:	str	x10, [x9, #32]
   1589c:	ldr	x9, [x8]
   158a0:	str	wzr, [x9, #40]
   158a4:	ldr	x9, [x8]
   158a8:	str	x10, [x9, #96]
   158ac:	ldr	x9, [x8]
   158b0:	str	x10, [x9, #104]
   158b4:	ldr	x9, [x8]
   158b8:	str	wzr, [x9, #140]
   158bc:	ldr	x9, [x8]
   158c0:	str	wzr, [x9, #144]
   158c4:	ldr	x9, [x8]
   158c8:	add	x0, x9, #0x98
   158cc:	add	x9, sp, #0x68
   158d0:	str	x0, [sp, #16]
   158d4:	mov	x0, x9
   158d8:	mov	w11, wzr
   158dc:	mov	w1, w11
   158e0:	mov	x10, #0x48                  	// #72
   158e4:	mov	x2, x10
   158e8:	str	x9, [sp, #8]
   158ec:	str	x10, [sp]
   158f0:	bl	3230 <memset@plt>
   158f4:	mov	x8, #0xffffffffffffffff    	// #-1
   158f8:	str	x8, [sp, #112]
   158fc:	str	xzr, [sp, #120]
   15900:	ldr	x0, [sp, #16]
   15904:	ldr	x1, [sp, #8]
   15908:	ldr	x2, [sp]
   1590c:	bl	3090 <memcpy@plt>
   15910:	ldr	x8, [sp, #24]
   15914:	ldr	x9, [x8, #8]
   15918:	ldr	x0, [x8]
   1591c:	ldr	x1, [x8, #24]
   15920:	ldr	x10, [x8, #16]
   15924:	ldr	x2, [x10, #16]
   15928:	add	x3, sp, #0x28
   1592c:	blr	x9
   15930:	str	w0, [sp, #36]
   15934:	ldr	w11, [sp, #36]
   15938:	cbz	w11, 15948 <lzma_crc64@@XZ_5.0+0x368c>
   1593c:	ldr	w8, [sp, #36]
   15940:	stur	w8, [x29, #-4]
   15944:	b	159c0 <lzma_crc64@@XZ_5.0+0x3704>
   15948:	ldr	x8, [sp, #24]
   1594c:	ldr	x9, [x8]
   15950:	add	x0, x9, #0x20
   15954:	ldr	x1, [x8, #24]
   15958:	add	x2, sp, #0x28
   1595c:	bl	152a4 <lzma_crc64@@XZ_5.0+0x2fe8>
   15960:	tbnz	w0, #0, 15968 <lzma_crc64@@XZ_5.0+0x36ac>
   15964:	b	15974 <lzma_crc64@@XZ_5.0+0x36b8>
   15968:	mov	w8, #0x8                   	// #8
   1596c:	stur	w8, [x29, #-4]
   15970:	b	159c0 <lzma_crc64@@XZ_5.0+0x3704>
   15974:	ldr	x8, [sp, #24]
   15978:	ldr	x9, [x8]
   1597c:	add	x0, x9, #0x20
   15980:	ldr	x1, [x8, #24]
   15984:	add	x2, sp, #0x28
   15988:	bl	15c64 <lzma_crc64@@XZ_5.0+0x39a8>
   1598c:	tbnz	w0, #0, 15994 <lzma_crc64@@XZ_5.0+0x36d8>
   15990:	b	159a0 <lzma_crc64@@XZ_5.0+0x36e4>
   15994:	mov	w8, #0x5                   	// #5
   15998:	stur	w8, [x29, #-4]
   1599c:	b	159c0 <lzma_crc64@@XZ_5.0+0x3704>
   159a0:	ldr	x8, [sp, #24]
   159a4:	ldr	x9, [x8]
   159a8:	add	x0, x9, #0x98
   159ac:	ldr	x1, [x8, #24]
   159b0:	ldr	x9, [x8, #16]
   159b4:	add	x2, x9, #0x18
   159b8:	bl	395c <lzma_version_string@@XZ_5.0+0x24c>
   159bc:	stur	w0, [x29, #-4]
   159c0:	ldur	w0, [x29, #-4]
   159c4:	ldp	x29, x30, [sp, #224]
   159c8:	add	sp, sp, #0xf0
   159cc:	ret
   159d0:	sub	sp, sp, #0x80
   159d4:	stp	x29, x30, [sp, #112]
   159d8:	add	x29, sp, #0x70
   159dc:	ldr	w8, [x29, #16]
   159e0:	stur	x0, [x29, #-16]
   159e4:	stur	x1, [x29, #-24]
   159e8:	stur	x2, [x29, #-32]
   159ec:	stur	x3, [x29, #-40]
   159f0:	stur	x4, [x29, #-48]
   159f4:	str	x5, [sp, #56]
   159f8:	str	x6, [sp, #48]
   159fc:	str	x7, [sp, #40]
   15a00:	str	w8, [sp, #36]
   15a04:	ldur	x9, [x29, #-16]
   15a08:	str	x9, [sp, #24]
   15a0c:	ldr	x8, [sp, #48]
   15a10:	ldr	x8, [x8]
   15a14:	ldr	x9, [sp, #40]
   15a18:	mov	w10, #0x0                   	// #0
   15a1c:	cmp	x8, x9
   15a20:	str	w10, [sp, #12]
   15a24:	b.cs	15a5c <lzma_crc64@@XZ_5.0+0x37a0>  // b.hs, b.nlast
   15a28:	ldur	x8, [x29, #-40]
   15a2c:	ldr	x8, [x8]
   15a30:	ldur	x9, [x29, #-48]
   15a34:	mov	w10, #0x1                   	// #1
   15a38:	cmp	x8, x9
   15a3c:	str	w10, [sp, #8]
   15a40:	b.cc	15a54 <lzma_crc64@@XZ_5.0+0x3798>  // b.lo, b.ul, b.last
   15a44:	ldr	w8, [sp, #36]
   15a48:	cmp	w8, #0x0
   15a4c:	cset	w8, ne  // ne = any
   15a50:	str	w8, [sp, #8]
   15a54:	ldr	w8, [sp, #8]
   15a58:	str	w8, [sp, #12]
   15a5c:	ldr	w8, [sp, #12]
   15a60:	tbnz	w8, #0, 15a68 <lzma_crc64@@XZ_5.0+0x37ac>
   15a64:	b	15b0c <lzma_crc64@@XZ_5.0+0x3850>
   15a68:	ldr	x8, [sp, #24]
   15a6c:	ldr	w9, [x8, #136]
   15a70:	cbnz	w9, 15ac0 <lzma_crc64@@XZ_5.0+0x3804>
   15a74:	ldr	x8, [sp, #24]
   15a78:	ldr	w9, [x8, #56]
   15a7c:	ldr	x8, [sp, #24]
   15a80:	ldr	w10, [x8, #64]
   15a84:	cmp	w9, w10
   15a88:	b.cc	15ac0 <lzma_crc64@@XZ_5.0+0x3804>  // b.lo, b.ul, b.last
   15a8c:	ldr	x0, [sp, #24]
   15a90:	ldur	x1, [x29, #-24]
   15a94:	ldur	x2, [x29, #-32]
   15a98:	ldur	x3, [x29, #-40]
   15a9c:	ldur	x4, [x29, #-48]
   15aa0:	ldr	w5, [sp, #36]
   15aa4:	bl	15f68 <lzma_mf_is_supported@@XZ_5.0+0x84>
   15aa8:	str	w0, [sp, #20]
   15aac:	ldr	w8, [sp, #20]
   15ab0:	cbz	w8, 15ac0 <lzma_crc64@@XZ_5.0+0x3804>
   15ab4:	ldr	w8, [sp, #20]
   15ab8:	stur	w8, [x29, #-4]
   15abc:	b	15b10 <lzma_crc64@@XZ_5.0+0x3854>
   15ac0:	ldr	x8, [sp, #24]
   15ac4:	ldr	x8, [x8, #8]
   15ac8:	ldr	x9, [sp, #24]
   15acc:	ldr	x0, [x9]
   15ad0:	ldr	x9, [sp, #24]
   15ad4:	add	x1, x9, #0x20
   15ad8:	ldr	x2, [sp, #56]
   15adc:	ldr	x3, [sp, #48]
   15ae0:	ldr	x4, [sp, #40]
   15ae4:	blr	x8
   15ae8:	str	w0, [sp, #16]
   15aec:	ldr	w10, [sp, #16]
   15af0:	cbz	w10, 15b08 <lzma_crc64@@XZ_5.0+0x384c>
   15af4:	ldr	x8, [sp, #24]
   15af8:	str	wzr, [x8, #136]
   15afc:	ldr	w9, [sp, #16]
   15b00:	stur	w9, [x29, #-4]
   15b04:	b	15b10 <lzma_crc64@@XZ_5.0+0x3854>
   15b08:	b	15a0c <lzma_crc64@@XZ_5.0+0x3750>
   15b0c:	stur	wzr, [x29, #-4]
   15b10:	ldur	w0, [x29, #-4]
   15b14:	ldp	x29, x30, [sp, #112]
   15b18:	add	sp, sp, #0x80
   15b1c:	ret
   15b20:	sub	sp, sp, #0x30
   15b24:	stp	x29, x30, [sp, #32]
   15b28:	add	x29, sp, #0x20
   15b2c:	stur	x0, [x29, #-8]
   15b30:	str	x1, [sp, #16]
   15b34:	ldur	x8, [x29, #-8]
   15b38:	str	x8, [sp, #8]
   15b3c:	ldr	x8, [sp, #8]
   15b40:	add	x0, x8, #0x98
   15b44:	ldr	x1, [sp, #16]
   15b48:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
   15b4c:	ldr	x8, [sp, #8]
   15b50:	ldr	x0, [x8, #104]
   15b54:	ldr	x1, [sp, #16]
   15b58:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15b5c:	ldr	x8, [sp, #8]
   15b60:	ldr	x0, [x8, #96]
   15b64:	ldr	x1, [sp, #16]
   15b68:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15b6c:	ldr	x8, [sp, #8]
   15b70:	ldr	x0, [x8, #32]
   15b74:	ldr	x1, [sp, #16]
   15b78:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15b7c:	ldr	x8, [sp, #8]
   15b80:	ldr	x8, [x8, #16]
   15b84:	cbz	x8, 15ba4 <lzma_crc64@@XZ_5.0+0x38e8>
   15b88:	ldr	x8, [sp, #8]
   15b8c:	ldr	x8, [x8, #16]
   15b90:	ldr	x9, [sp, #8]
   15b94:	ldr	x0, [x9]
   15b98:	ldr	x1, [sp, #16]
   15b9c:	blr	x8
   15ba0:	b	15bb4 <lzma_crc64@@XZ_5.0+0x38f8>
   15ba4:	ldr	x8, [sp, #8]
   15ba8:	ldr	x0, [x8]
   15bac:	ldr	x1, [sp, #16]
   15bb0:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15bb4:	ldr	x0, [sp, #8]
   15bb8:	ldr	x1, [sp, #16]
   15bbc:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15bc0:	ldp	x29, x30, [sp, #32]
   15bc4:	add	sp, sp, #0x30
   15bc8:	ret
   15bcc:	sub	sp, sp, #0x50
   15bd0:	stp	x29, x30, [sp, #64]
   15bd4:	add	x29, sp, #0x40
   15bd8:	stur	x0, [x29, #-16]
   15bdc:	stur	x1, [x29, #-24]
   15be0:	str	x2, [sp, #32]
   15be4:	str	x3, [sp, #24]
   15be8:	ldur	x8, [x29, #-16]
   15bec:	str	x8, [sp, #16]
   15bf0:	ldr	x8, [sp, #16]
   15bf4:	ldr	x8, [x8, #24]
   15bf8:	cbnz	x8, 15c08 <lzma_crc64@@XZ_5.0+0x394c>
   15bfc:	mov	w8, #0xb                   	// #11
   15c00:	stur	w8, [x29, #-4]
   15c04:	b	15c54 <lzma_crc64@@XZ_5.0+0x3998>
   15c08:	ldr	x8, [sp, #16]
   15c0c:	ldr	x8, [x8, #24]
   15c10:	ldr	x9, [sp, #16]
   15c14:	ldr	x0, [x9]
   15c18:	ldr	x1, [sp, #24]
   15c1c:	blr	x8
   15c20:	str	w0, [sp, #12]
   15c24:	ldr	w10, [sp, #12]
   15c28:	cbz	w10, 15c38 <lzma_crc64@@XZ_5.0+0x397c>
   15c2c:	ldr	w8, [sp, #12]
   15c30:	stur	w8, [x29, #-4]
   15c34:	b	15c54 <lzma_crc64@@XZ_5.0+0x3998>
   15c38:	ldr	x8, [sp, #16]
   15c3c:	add	x0, x8, #0x98
   15c40:	ldur	x1, [x29, #-24]
   15c44:	ldr	x8, [sp, #24]
   15c48:	add	x2, x8, #0x10
   15c4c:	bl	3aac <lzma_version_string@@XZ_5.0+0x39c>
   15c50:	stur	w0, [x29, #-4]
   15c54:	ldur	w0, [x29, #-4]
   15c58:	ldp	x29, x30, [sp, #64]
   15c5c:	add	sp, sp, #0x50
   15c60:	ret
   15c64:	sub	sp, sp, #0x50
   15c68:	stp	x29, x30, [sp, #64]
   15c6c:	add	x29, sp, #0x40
   15c70:	stur	x0, [x29, #-16]
   15c74:	stur	x1, [x29, #-24]
   15c78:	str	x2, [sp, #32]
   15c7c:	ldur	x8, [x29, #-16]
   15c80:	ldr	x8, [x8]
   15c84:	cbnz	x8, 15cc8 <lzma_crc64@@XZ_5.0+0x3a0c>
   15c88:	ldur	x8, [x29, #-16]
   15c8c:	ldr	w9, [x8, #8]
   15c90:	add	w9, w9, #0x0
   15c94:	mov	w8, w9
   15c98:	ubfx	x0, x8, #0, #32
   15c9c:	ldur	x1, [x29, #-24]
   15ca0:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   15ca4:	ldur	x8, [x29, #-16]
   15ca8:	str	x0, [x8]
   15cac:	ldur	x8, [x29, #-16]
   15cb0:	ldr	x8, [x8]
   15cb4:	cbnz	x8, 15cc8 <lzma_crc64@@XZ_5.0+0x3a0c>
   15cb8:	mov	w8, #0x1                   	// #1
   15cbc:	and	w8, w8, #0x1
   15cc0:	sturb	w8, [x29, #-1]
   15cc4:	b	15ed0 <lzma_crc64@@XZ_5.0+0x3c14>
   15cc8:	ldur	x8, [x29, #-16]
   15ccc:	ldr	w9, [x8, #84]
   15cd0:	ldur	x8, [x29, #-16]
   15cd4:	str	w9, [x8, #20]
   15cd8:	ldur	x8, [x29, #-16]
   15cdc:	str	wzr, [x8, #24]
   15ce0:	ldur	x8, [x29, #-16]
   15ce4:	str	wzr, [x8, #28]
   15ce8:	ldur	x8, [x29, #-16]
   15cec:	str	wzr, [x8, #32]
   15cf0:	ldur	x8, [x29, #-16]
   15cf4:	str	wzr, [x8, #36]
   15cf8:	ldur	x8, [x29, #-16]
   15cfc:	str	wzr, [x8, #40]
   15d00:	ldur	x8, [x29, #-16]
   15d04:	ldr	x8, [x8, #64]
   15d08:	cbnz	x8, 15dc0 <lzma_crc64@@XZ_5.0+0x3b04>
   15d0c:	ldur	x8, [x29, #-16]
   15d10:	ldr	w9, [x8, #108]
   15d14:	mov	w8, w9
   15d18:	mov	x10, #0x4                   	// #4
   15d1c:	mul	x0, x8, x10
   15d20:	ldur	x1, [x29, #-24]
   15d24:	str	x10, [sp, #24]
   15d28:	bl	3794 <lzma_version_string@@XZ_5.0+0x84>
   15d2c:	ldur	x8, [x29, #-16]
   15d30:	str	x0, [x8, #64]
   15d34:	ldur	x8, [x29, #-16]
   15d38:	ldr	w9, [x8, #112]
   15d3c:	mov	w8, w9
   15d40:	ldr	x10, [sp, #24]
   15d44:	mul	x0, x8, x10
   15d48:	ldur	x1, [x29, #-24]
   15d4c:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   15d50:	ldur	x8, [x29, #-16]
   15d54:	str	x0, [x8, #72]
   15d58:	ldur	x8, [x29, #-16]
   15d5c:	ldr	x8, [x8, #64]
   15d60:	cbz	x8, 15d70 <lzma_crc64@@XZ_5.0+0x3ab4>
   15d64:	ldur	x8, [x29, #-16]
   15d68:	ldr	x8, [x8, #72]
   15d6c:	cbnz	x8, 15dbc <lzma_crc64@@XZ_5.0+0x3b00>
   15d70:	ldur	x8, [x29, #-16]
   15d74:	ldr	x0, [x8, #64]
   15d78:	ldur	x1, [x29, #-24]
   15d7c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15d80:	ldur	x8, [x29, #-16]
   15d84:	mov	x9, xzr
   15d88:	str	x9, [x8, #64]
   15d8c:	ldur	x8, [x29, #-16]
   15d90:	ldr	x0, [x8, #72]
   15d94:	ldur	x1, [x29, #-24]
   15d98:	str	x9, [sp, #16]
   15d9c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   15da0:	ldur	x8, [x29, #-16]
   15da4:	ldr	x9, [sp, #16]
   15da8:	str	x9, [x8, #72]
   15dac:	mov	w10, #0x1                   	// #1
   15db0:	and	w10, w10, #0x1
   15db4:	sturb	w10, [x29, #-1]
   15db8:	b	15ed0 <lzma_crc64@@XZ_5.0+0x3c14>
   15dbc:	b	15de8 <lzma_crc64@@XZ_5.0+0x3b2c>
   15dc0:	ldur	x8, [x29, #-16]
   15dc4:	ldr	x0, [x8, #64]
   15dc8:	ldur	x8, [x29, #-16]
   15dcc:	ldr	w9, [x8, #108]
   15dd0:	mov	w8, w9
   15dd4:	mov	x10, #0x4                   	// #4
   15dd8:	mul	x2, x8, x10
   15ddc:	mov	w9, wzr
   15de0:	mov	w1, w9
   15de4:	bl	3230 <memset@plt>
   15de8:	ldur	x8, [x29, #-16]
   15dec:	str	wzr, [x8, #80]
   15df0:	ldr	x8, [sp, #32]
   15df4:	ldr	x8, [x8, #48]
   15df8:	cbz	x8, 15ebc <lzma_crc64@@XZ_5.0+0x3c00>
   15dfc:	ldr	x8, [sp, #32]
   15e00:	ldr	w9, [x8, #56]
   15e04:	cmp	w9, #0x0
   15e08:	cset	w9, ls  // ls = plast
   15e0c:	tbnz	w9, #0, 15ebc <lzma_crc64@@XZ_5.0+0x3c00>
   15e10:	ldr	x8, [sp, #32]
   15e14:	ldr	w9, [x8, #56]
   15e18:	ldur	x8, [x29, #-16]
   15e1c:	ldr	w10, [x8, #8]
   15e20:	cmp	w9, w10
   15e24:	b.cs	15e38 <lzma_crc64@@XZ_5.0+0x3b7c>  // b.hs, b.nlast
   15e28:	ldr	x8, [sp, #32]
   15e2c:	ldr	w9, [x8, #56]
   15e30:	str	w9, [sp, #12]
   15e34:	b	15e44 <lzma_crc64@@XZ_5.0+0x3b88>
   15e38:	ldur	x8, [x29, #-16]
   15e3c:	ldr	w9, [x8, #8]
   15e40:	str	w9, [sp, #12]
   15e44:	ldr	w8, [sp, #12]
   15e48:	ldur	x9, [x29, #-16]
   15e4c:	str	w8, [x9, #36]
   15e50:	ldur	x9, [x29, #-16]
   15e54:	ldr	x0, [x9]
   15e58:	ldr	x9, [sp, #32]
   15e5c:	ldr	x9, [x9, #48]
   15e60:	ldr	x10, [sp, #32]
   15e64:	ldr	w8, [x10, #56]
   15e68:	mov	w10, w8
   15e6c:	add	x9, x9, x10
   15e70:	ldur	x10, [x29, #-16]
   15e74:	ldr	w8, [x10, #36]
   15e78:	mov	w10, w8
   15e7c:	mov	x11, xzr
   15e80:	subs	x10, x11, x10
   15e84:	add	x1, x9, x10
   15e88:	ldur	x9, [x29, #-16]
   15e8c:	ldr	w8, [x9, #36]
   15e90:	mov	w2, w8
   15e94:	bl	3090 <memcpy@plt>
   15e98:	ldur	x9, [x29, #-16]
   15e9c:	mov	w8, #0x1                   	// #1
   15ea0:	str	w8, [x9, #104]
   15ea4:	ldur	x9, [x29, #-16]
   15ea8:	ldr	x9, [x9, #56]
   15eac:	ldur	x0, [x29, #-16]
   15eb0:	ldur	x10, [x29, #-16]
   15eb4:	ldr	w1, [x10, #36]
   15eb8:	blr	x9
   15ebc:	ldur	x8, [x29, #-16]
   15ec0:	str	wzr, [x8, #104]
   15ec4:	mov	w9, wzr
   15ec8:	and	w9, w9, #0x1
   15ecc:	sturb	w9, [x29, #-1]
   15ed0:	ldurb	w8, [x29, #-1]
   15ed4:	and	w0, w8, #0x1
   15ed8:	ldp	x29, x30, [sp, #64]
   15edc:	add	sp, sp, #0x50
   15ee0:	ret

0000000000015ee4 <lzma_mf_is_supported@@XZ_5.0>:
   15ee4:	sub	sp, sp, #0x10
   15ee8:	mov	w8, #0x0                   	// #0
   15eec:	str	w0, [sp, #12]
   15ef0:	strb	w8, [sp, #11]
   15ef4:	ldr	w8, [sp, #12]
   15ef8:	cmp	w8, #0x3
   15efc:	b.ne	15f08 <lzma_mf_is_supported@@XZ_5.0+0x24>  // b.any
   15f00:	mov	w8, #0x1                   	// #1
   15f04:	strb	w8, [sp, #11]
   15f08:	ldr	w8, [sp, #12]
   15f0c:	cmp	w8, #0x4
   15f10:	b.ne	15f1c <lzma_mf_is_supported@@XZ_5.0+0x38>  // b.any
   15f14:	mov	w8, #0x1                   	// #1
   15f18:	strb	w8, [sp, #11]
   15f1c:	ldr	w8, [sp, #12]
   15f20:	cmp	w8, #0x12
   15f24:	b.ne	15f30 <lzma_mf_is_supported@@XZ_5.0+0x4c>  // b.any
   15f28:	mov	w8, #0x1                   	// #1
   15f2c:	strb	w8, [sp, #11]
   15f30:	ldr	w8, [sp, #12]
   15f34:	cmp	w8, #0x13
   15f38:	b.ne	15f44 <lzma_mf_is_supported@@XZ_5.0+0x60>  // b.any
   15f3c:	mov	w8, #0x1                   	// #1
   15f40:	strb	w8, [sp, #11]
   15f44:	ldr	w8, [sp, #12]
   15f48:	cmp	w8, #0x14
   15f4c:	b.ne	15f58 <lzma_mf_is_supported@@XZ_5.0+0x74>  // b.any
   15f50:	mov	w8, #0x1                   	// #1
   15f54:	strb	w8, [sp, #11]
   15f58:	ldrb	w8, [sp, #11]
   15f5c:	and	w0, w8, #0x1
   15f60:	add	sp, sp, #0x10
   15f64:	ret
   15f68:	sub	sp, sp, #0x60
   15f6c:	stp	x29, x30, [sp, #80]
   15f70:	add	x29, sp, #0x50
   15f74:	stur	x0, [x29, #-8]
   15f78:	stur	x1, [x29, #-16]
   15f7c:	stur	x2, [x29, #-24]
   15f80:	stur	x3, [x29, #-32]
   15f84:	str	x4, [sp, #40]
   15f88:	str	w5, [sp, #36]
   15f8c:	ldur	x8, [x29, #-8]
   15f90:	ldr	w9, [x8, #56]
   15f94:	ldur	x8, [x29, #-8]
   15f98:	ldr	w10, [x8, #40]
   15f9c:	ldur	x8, [x29, #-8]
   15fa0:	ldr	w11, [x8, #48]
   15fa4:	subs	w10, w10, w11
   15fa8:	cmp	w9, w10
   15fac:	b.cc	15fbc <lzma_mf_is_supported@@XZ_5.0+0xd8>  // b.lo, b.ul, b.last
   15fb0:	ldur	x8, [x29, #-8]
   15fb4:	add	x0, x8, #0x20
   15fb8:	bl	1617c <lzma_mf_is_supported@@XZ_5.0+0x298>
   15fbc:	ldur	x8, [x29, #-8]
   15fc0:	ldr	w9, [x8, #68]
   15fc4:	mov	w8, w9
   15fc8:	str	x8, [sp, #24]
   15fcc:	ldur	x8, [x29, #-8]
   15fd0:	ldr	x8, [x8, #176]
   15fd4:	cbnz	x8, 16044 <lzma_mf_is_supported@@XZ_5.0+0x160>
   15fd8:	ldur	x0, [x29, #-24]
   15fdc:	ldur	x1, [x29, #-32]
   15fe0:	ldr	x2, [sp, #40]
   15fe4:	ldur	x8, [x29, #-8]
   15fe8:	ldr	x3, [x8, #32]
   15fec:	ldur	x8, [x29, #-8]
   15ff0:	ldr	w9, [x8, #40]
   15ff4:	mov	w5, w9
   15ff8:	add	x4, sp, #0x18
   15ffc:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   16000:	ldr	w9, [sp, #36]
   16004:	mov	w10, #0x0                   	// #0
   16008:	str	w10, [sp, #12]
   1600c:	cbz	w9, 16028 <lzma_mf_is_supported@@XZ_5.0+0x144>
   16010:	ldur	x8, [x29, #-32]
   16014:	ldr	x8, [x8]
   16018:	ldr	x9, [sp, #40]
   1601c:	cmp	x8, x9
   16020:	cset	w10, eq  // eq = none
   16024:	str	w10, [sp, #12]
   16028:	ldr	w8, [sp, #12]
   1602c:	mov	w9, #0x1                   	// #1
   16030:	mov	w10, wzr
   16034:	tst	w8, #0x1
   16038:	csel	w8, w9, w10, ne  // ne = any
   1603c:	str	w8, [sp, #20]
   16040:	b	16090 <lzma_mf_is_supported@@XZ_5.0+0x1ac>
   16044:	ldur	x8, [x29, #-8]
   16048:	ldr	x8, [x8, #176]
   1604c:	ldur	x9, [x29, #-8]
   16050:	ldr	x0, [x9, #152]
   16054:	ldur	x1, [x29, #-16]
   16058:	ldur	x2, [x29, #-24]
   1605c:	ldur	x3, [x29, #-32]
   16060:	ldr	x4, [sp, #40]
   16064:	ldur	x9, [x29, #-8]
   16068:	ldr	x5, [x9, #32]
   1606c:	ldur	x9, [x29, #-8]
   16070:	ldr	w10, [x9, #40]
   16074:	mov	w7, w10
   16078:	ldr	w10, [sp, #36]
   1607c:	add	x6, sp, #0x18
   16080:	mov	x9, sp
   16084:	str	w10, [x9]
   16088:	blr	x8
   1608c:	str	w0, [sp, #20]
   16090:	ldr	x8, [sp, #24]
   16094:	ldur	x9, [x29, #-8]
   16098:	str	w8, [x9, #68]
   1609c:	ldr	w8, [sp, #20]
   160a0:	cmp	w8, #0x1
   160a4:	b.ne	160cc <lzma_mf_is_supported@@XZ_5.0+0x1e8>  // b.any
   160a8:	str	wzr, [sp, #20]
   160ac:	ldr	w8, [sp, #36]
   160b0:	ldur	x9, [x29, #-8]
   160b4:	str	w8, [x9, #136]
   160b8:	ldur	x9, [x29, #-8]
   160bc:	ldr	w8, [x9, #68]
   160c0:	ldur	x9, [x29, #-8]
   160c4:	str	w8, [x9, #64]
   160c8:	b	16100 <lzma_mf_is_supported@@XZ_5.0+0x21c>
   160cc:	ldur	x8, [x29, #-8]
   160d0:	ldr	w9, [x8, #68]
   160d4:	ldur	x8, [x29, #-8]
   160d8:	ldr	w10, [x8, #48]
   160dc:	cmp	w9, w10
   160e0:	b.ls	16100 <lzma_mf_is_supported@@XZ_5.0+0x21c>  // b.plast
   160e4:	ldur	x8, [x29, #-8]
   160e8:	ldr	w9, [x8, #68]
   160ec:	ldur	x8, [x29, #-8]
   160f0:	ldr	w10, [x8, #48]
   160f4:	subs	w9, w9, w10
   160f8:	ldur	x8, [x29, #-8]
   160fc:	str	w9, [x8, #64]
   16100:	ldur	x8, [x29, #-8]
   16104:	ldr	w9, [x8, #72]
   16108:	cmp	w9, #0x0
   1610c:	cset	w9, ls  // ls = plast
   16110:	tbnz	w9, #0, 1616c <lzma_mf_is_supported@@XZ_5.0+0x288>
   16114:	ldur	x8, [x29, #-8]
   16118:	ldr	w9, [x8, #56]
   1611c:	ldur	x8, [x29, #-8]
   16120:	ldr	w10, [x8, #64]
   16124:	cmp	w9, w10
   16128:	b.cs	1616c <lzma_mf_is_supported@@XZ_5.0+0x288>  // b.hs, b.nlast
   1612c:	ldur	x8, [x29, #-8]
   16130:	ldr	w9, [x8, #72]
   16134:	str	w9, [sp, #16]
   16138:	ldur	x8, [x29, #-8]
   1613c:	str	wzr, [x8, #72]
   16140:	ldr	w9, [sp, #16]
   16144:	ldur	x8, [x29, #-8]
   16148:	ldr	w10, [x8, #56]
   1614c:	subs	w9, w10, w9
   16150:	str	w9, [x8, #56]
   16154:	ldur	x8, [x29, #-8]
   16158:	ldr	x8, [x8, #88]
   1615c:	ldur	x11, [x29, #-8]
   16160:	add	x0, x11, #0x20
   16164:	ldr	w1, [sp, #16]
   16168:	blr	x8
   1616c:	ldr	w0, [sp, #20]
   16170:	ldp	x29, x30, [sp, #80]
   16174:	add	sp, sp, #0x60
   16178:	ret
   1617c:	sub	sp, sp, #0x30
   16180:	stp	x29, x30, [sp, #32]
   16184:	add	x29, sp, #0x20
   16188:	stur	x0, [x29, #-8]
   1618c:	ldur	x8, [x29, #-8]
   16190:	ldr	w9, [x8, #24]
   16194:	ldur	x8, [x29, #-8]
   16198:	ldr	w10, [x8, #12]
   1619c:	subs	w9, w9, w10
   161a0:	and	w9, w9, #0xfffffff0
   161a4:	stur	w9, [x29, #-12]
   161a8:	ldur	x8, [x29, #-8]
   161ac:	ldr	w9, [x8, #36]
   161b0:	ldur	w10, [x29, #-12]
   161b4:	subs	w9, w9, w10
   161b8:	mov	w8, w9
   161bc:	ubfx	x8, x8, #0, #32
   161c0:	str	x8, [sp, #8]
   161c4:	ldur	x8, [x29, #-8]
   161c8:	ldr	x0, [x8]
   161cc:	ldur	x8, [x29, #-8]
   161d0:	ldr	x8, [x8]
   161d4:	ldur	w9, [x29, #-12]
   161d8:	mov	w11, w9
   161dc:	add	x1, x8, x11
   161e0:	ldr	x2, [sp, #8]
   161e4:	bl	30b0 <memmove@plt>
   161e8:	ldur	w9, [x29, #-12]
   161ec:	ldur	x8, [x29, #-8]
   161f0:	ldr	w10, [x8, #20]
   161f4:	add	w9, w10, w9
   161f8:	str	w9, [x8, #20]
   161fc:	ldur	w9, [x29, #-12]
   16200:	ldur	x8, [x29, #-8]
   16204:	ldr	w10, [x8, #24]
   16208:	subs	w9, w10, w9
   1620c:	str	w9, [x8, #24]
   16210:	ldur	w9, [x29, #-12]
   16214:	ldur	x8, [x29, #-8]
   16218:	ldr	w10, [x8, #32]
   1621c:	subs	w9, w10, w9
   16220:	str	w9, [x8, #32]
   16224:	ldur	w9, [x29, #-12]
   16228:	ldur	x8, [x29, #-8]
   1622c:	ldr	w10, [x8, #36]
   16230:	subs	w9, w10, w9
   16234:	str	w9, [x8, #36]
   16238:	ldp	x29, x30, [sp, #32]
   1623c:	add	sp, sp, #0x30
   16240:	ret
   16244:	sub	sp, sp, #0x70
   16248:	stp	x29, x30, [sp, #96]
   1624c:	add	x29, sp, #0x60
   16250:	stur	x0, [x29, #-32]
   16254:	stur	x1, [x29, #-40]
   16258:	str	x2, [sp, #48]
   1625c:	ldur	x8, [x29, #-32]
   16260:	ldr	x8, [x8, #48]
   16264:	ldur	x0, [x29, #-32]
   16268:	ldr	x1, [sp, #48]
   1626c:	blr	x8
   16270:	str	w0, [sp, #44]
   16274:	str	wzr, [sp, #40]
   16278:	ldr	w9, [sp, #44]
   1627c:	cmp	w9, #0x0
   16280:	cset	w9, ls  // ls = plast
   16284:	tbnz	w9, #0, 163cc <lzma_mf_is_supported@@XZ_5.0+0x4e8>
   16288:	ldr	x8, [sp, #48]
   1628c:	ldr	w9, [sp, #44]
   16290:	subs	w9, w9, #0x1
   16294:	mov	w10, w9
   16298:	ubfx	x10, x10, #0, #32
   1629c:	mov	x11, #0x8                   	// #8
   162a0:	mul	x10, x11, x10
   162a4:	ldr	w9, [x8, x10]
   162a8:	str	w9, [sp, #40]
   162ac:	ldr	w9, [sp, #40]
   162b0:	ldur	x8, [x29, #-32]
   162b4:	ldr	w12, [x8, #96]
   162b8:	cmp	w9, w12
   162bc:	b.ne	163cc <lzma_mf_is_supported@@XZ_5.0+0x4e8>  // b.any
   162c0:	ldur	x0, [x29, #-32]
   162c4:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   162c8:	add	w8, w0, #0x1
   162cc:	str	w8, [sp, #36]
   162d0:	ldr	w8, [sp, #36]
   162d4:	ldur	x9, [x29, #-32]
   162d8:	ldr	w10, [x9, #100]
   162dc:	cmp	w8, w10
   162e0:	b.ls	162f0 <lzma_mf_is_supported@@XZ_5.0+0x40c>  // b.plast
   162e4:	ldur	x8, [x29, #-32]
   162e8:	ldr	w9, [x8, #100]
   162ec:	str	w9, [sp, #36]
   162f0:	ldur	x0, [x29, #-32]
   162f4:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   162f8:	mov	x8, #0xffffffffffffffff    	// #-1
   162fc:	add	x9, x0, x8
   16300:	str	x9, [sp, #24]
   16304:	ldr	x9, [sp, #24]
   16308:	ldr	x10, [sp, #48]
   1630c:	ldr	w11, [sp, #44]
   16310:	subs	w11, w11, #0x1
   16314:	mov	w12, w11
   16318:	ubfx	x12, x12, #0, #32
   1631c:	mov	x13, #0x8                   	// #8
   16320:	mul	x12, x13, x12
   16324:	add	x10, x10, x12
   16328:	ldr	w11, [x10, #4]
   1632c:	mov	w10, w11
   16330:	mov	x12, xzr
   16334:	subs	x10, x12, x10
   16338:	add	x9, x9, x10
   1633c:	add	x8, x9, x8
   16340:	str	x8, [sp, #16]
   16344:	ldr	x8, [sp, #24]
   16348:	ldr	x9, [sp, #16]
   1634c:	ldr	w11, [sp, #40]
   16350:	ldr	w14, [sp, #36]
   16354:	stur	x8, [x29, #-8]
   16358:	stur	x9, [x29, #-16]
   1635c:	stur	w11, [x29, #-20]
   16360:	stur	w14, [x29, #-24]
   16364:	ldur	w8, [x29, #-20]
   16368:	ldur	w9, [x29, #-24]
   1636c:	mov	w10, #0x0                   	// #0
   16370:	cmp	w8, w9
   16374:	str	w10, [sp, #12]
   16378:	b.cs	163a8 <lzma_mf_is_supported@@XZ_5.0+0x4c4>  // b.hs, b.nlast
   1637c:	ldur	x8, [x29, #-8]
   16380:	ldur	w9, [x29, #-20]
   16384:	mov	w10, w9
   16388:	ldrb	w9, [x8, x10]
   1638c:	ldur	x8, [x29, #-16]
   16390:	ldur	w11, [x29, #-20]
   16394:	mov	w10, w11
   16398:	ldrb	w11, [x8, x10]
   1639c:	cmp	w9, w11
   163a0:	cset	w9, eq  // eq = none
   163a4:	str	w9, [sp, #12]
   163a8:	ldr	w8, [sp, #12]
   163ac:	tbnz	w8, #0, 163b4 <lzma_mf_is_supported@@XZ_5.0+0x4d0>
   163b0:	b	163c4 <lzma_mf_is_supported@@XZ_5.0+0x4e0>
   163b4:	ldur	w8, [x29, #-20]
   163b8:	add	w8, w8, #0x1
   163bc:	stur	w8, [x29, #-20]
   163c0:	b	16364 <lzma_mf_is_supported@@XZ_5.0+0x480>
   163c4:	ldur	w8, [x29, #-20]
   163c8:	str	w8, [sp, #40]
   163cc:	ldr	w8, [sp, #44]
   163d0:	ldur	x9, [x29, #-40]
   163d4:	str	w8, [x9]
   163d8:	ldur	x9, [x29, #-32]
   163dc:	ldr	w8, [x9, #28]
   163e0:	add	w8, w8, #0x1
   163e4:	str	w8, [x9, #28]
   163e8:	ldr	w0, [sp, #40]
   163ec:	ldp	x29, x30, [sp, #96]
   163f0:	add	sp, sp, #0x70
   163f4:	ret
   163f8:	sub	sp, sp, #0x10
   163fc:	str	x0, [sp, #8]
   16400:	ldr	x8, [sp, #8]
   16404:	ldr	w9, [x8, #36]
   16408:	ldr	x8, [sp, #8]
   1640c:	ldr	w10, [x8, #24]
   16410:	subs	w0, w9, w10
   16414:	add	sp, sp, #0x10
   16418:	ret
   1641c:	sub	sp, sp, #0x10
   16420:	str	x0, [sp, #8]
   16424:	ldr	x8, [sp, #8]
   16428:	ldr	x8, [x8]
   1642c:	ldr	x9, [sp, #8]
   16430:	ldr	w10, [x9, #24]
   16434:	mov	w9, w10
   16438:	add	x0, x8, x9
   1643c:	add	sp, sp, #0x10
   16440:	ret
   16444:	sub	sp, sp, #0x90
   16448:	stp	x29, x30, [sp, #128]
   1644c:	add	x29, sp, #0x80
   16450:	stur	x0, [x29, #-40]
   16454:	stur	x1, [x29, #-48]
   16458:	ldur	x0, [x29, #-40]
   1645c:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   16460:	stur	w0, [x29, #-52]
   16464:	ldur	x8, [x29, #-40]
   16468:	ldr	w9, [x8, #96]
   1646c:	ldur	w10, [x29, #-52]
   16470:	cmp	w9, w10
   16474:	b.hi	16488 <lzma_mf_is_supported@@XZ_5.0+0x5a4>  // b.pmore
   16478:	ldur	x8, [x29, #-40]
   1647c:	ldr	w9, [x8, #96]
   16480:	stur	w9, [x29, #-52]
   16484:	b	164a4 <lzma_mf_is_supported@@XZ_5.0+0x5c0>
   16488:	ldur	w8, [x29, #-52]
   1648c:	cmp	w8, #0x3
   16490:	b.cs	164a4 <lzma_mf_is_supported@@XZ_5.0+0x5c0>  // b.hs, b.nlast
   16494:	ldur	x0, [x29, #-40]
   16498:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   1649c:	stur	wzr, [x29, #-28]
   164a0:	b	16750 <lzma_mf_is_supported@@XZ_5.0+0x86c>
   164a4:	ldur	x0, [x29, #-40]
   164a8:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   164ac:	str	x0, [sp, #64]
   164b0:	ldur	x8, [x29, #-40]
   164b4:	ldr	w9, [x8, #24]
   164b8:	ldur	x8, [x29, #-40]
   164bc:	ldr	w10, [x8, #20]
   164c0:	add	w9, w9, w10
   164c4:	str	w9, [sp, #60]
   164c8:	str	wzr, [sp, #56]
   164cc:	ldr	x8, [sp, #64]
   164d0:	ldrb	w9, [x8]
   164d4:	mov	w8, w9
   164d8:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   164dc:	ldr	x11, [x11, #3952]
   164e0:	ldr	w9, [x11, x8, lsl #2]
   164e4:	ldr	x8, [sp, #64]
   164e8:	ldrb	w10, [x8, #1]
   164ec:	eor	w9, w9, w10
   164f0:	str	w9, [sp, #52]
   164f4:	ldr	w9, [sp, #52]
   164f8:	and	w9, w9, #0x3ff
   164fc:	str	w9, [sp, #48]
   16500:	ldr	w9, [sp, #52]
   16504:	ldr	x8, [sp, #64]
   16508:	ldrb	w10, [x8, #2]
   1650c:	eor	w9, w9, w10, lsl #8
   16510:	ldur	x8, [x29, #-40]
   16514:	ldr	w10, [x8, #88]
   16518:	and	w9, w9, w10
   1651c:	str	w9, [sp, #44]
   16520:	ldr	w9, [sp, #60]
   16524:	ldur	x8, [x29, #-40]
   16528:	ldr	x8, [x8, #64]
   1652c:	ldr	w10, [sp, #48]
   16530:	mov	w11, w10
   16534:	ldr	w10, [x8, x11, lsl #2]
   16538:	subs	w9, w9, w10
   1653c:	str	w9, [sp, #40]
   16540:	ldur	x8, [x29, #-40]
   16544:	ldr	x8, [x8, #64]
   16548:	ldr	w9, [sp, #44]
   1654c:	add	w9, w9, #0x400
   16550:	ldr	w9, [x8, w9, uxtw #2]
   16554:	str	w9, [sp, #36]
   16558:	ldr	w9, [sp, #60]
   1655c:	ldur	x8, [x29, #-40]
   16560:	ldr	x8, [x8, #64]
   16564:	ldr	w10, [sp, #48]
   16568:	mov	w11, w10
   1656c:	str	w9, [x8, x11, lsl #2]
   16570:	ldr	w9, [sp, #60]
   16574:	ldur	x8, [x29, #-40]
   16578:	ldr	x8, [x8, #64]
   1657c:	ldr	w10, [sp, #44]
   16580:	add	w10, w10, #0x400
   16584:	str	w9, [x8, w10, uxtw #2]
   16588:	mov	w9, #0x2                   	// #2
   1658c:	str	w9, [sp, #32]
   16590:	ldr	w9, [sp, #40]
   16594:	ldur	x8, [x29, #-40]
   16598:	ldr	w10, [x8, #84]
   1659c:	cmp	w9, w10
   165a0:	b.cs	166cc <lzma_mf_is_supported@@XZ_5.0+0x7e8>  // b.hs, b.nlast
   165a4:	ldr	x8, [sp, #64]
   165a8:	ldr	w9, [sp, #40]
   165ac:	mov	w10, w9
   165b0:	mov	x11, xzr
   165b4:	subs	x10, x11, x10
   165b8:	ldrb	w9, [x8, x10]
   165bc:	ldr	x8, [sp, #64]
   165c0:	ldrb	w12, [x8]
   165c4:	cmp	w9, w12
   165c8:	b.ne	166cc <lzma_mf_is_supported@@XZ_5.0+0x7e8>  // b.any
   165cc:	ldr	x8, [sp, #64]
   165d0:	ldr	w9, [sp, #40]
   165d4:	mov	w10, w9
   165d8:	mov	x11, xzr
   165dc:	subs	x10, x11, x10
   165e0:	add	x8, x8, x10
   165e4:	ldr	x10, [sp, #64]
   165e8:	ldr	w9, [sp, #32]
   165ec:	ldur	w12, [x29, #-52]
   165f0:	stur	x8, [x29, #-8]
   165f4:	stur	x10, [x29, #-16]
   165f8:	stur	w9, [x29, #-20]
   165fc:	stur	w12, [x29, #-24]
   16600:	ldur	w8, [x29, #-20]
   16604:	ldur	w9, [x29, #-24]
   16608:	mov	w10, #0x0                   	// #0
   1660c:	cmp	w8, w9
   16610:	str	w10, [sp, #28]
   16614:	b.cs	16644 <lzma_mf_is_supported@@XZ_5.0+0x760>  // b.hs, b.nlast
   16618:	ldur	x8, [x29, #-8]
   1661c:	ldur	w9, [x29, #-20]
   16620:	mov	w10, w9
   16624:	ldrb	w9, [x8, x10]
   16628:	ldur	x8, [x29, #-16]
   1662c:	ldur	w11, [x29, #-20]
   16630:	mov	w10, w11
   16634:	ldrb	w11, [x8, x10]
   16638:	cmp	w9, w11
   1663c:	cset	w9, eq  // eq = none
   16640:	str	w9, [sp, #28]
   16644:	ldr	w8, [sp, #28]
   16648:	tbnz	w8, #0, 16650 <lzma_mf_is_supported@@XZ_5.0+0x76c>
   1664c:	b	16660 <lzma_mf_is_supported@@XZ_5.0+0x77c>
   16650:	ldur	w8, [x29, #-20]
   16654:	add	w8, w8, #0x1
   16658:	stur	w8, [x29, #-20]
   1665c:	b	16600 <lzma_mf_is_supported@@XZ_5.0+0x71c>
   16660:	ldur	w8, [x29, #-20]
   16664:	str	w8, [sp, #32]
   16668:	ldr	w8, [sp, #32]
   1666c:	ldur	x9, [x29, #-48]
   16670:	str	w8, [x9]
   16674:	ldr	w8, [sp, #40]
   16678:	mov	w10, #0x1                   	// #1
   1667c:	subs	w8, w8, #0x1
   16680:	ldur	x9, [x29, #-48]
   16684:	str	w8, [x9, #4]
   16688:	str	w10, [sp, #56]
   1668c:	ldr	w8, [sp, #32]
   16690:	ldur	w10, [x29, #-52]
   16694:	cmp	w8, w10
   16698:	b.ne	166cc <lzma_mf_is_supported@@XZ_5.0+0x7e8>  // b.any
   1669c:	ldr	w8, [sp, #36]
   166a0:	ldur	x9, [x29, #-40]
   166a4:	ldr	x9, [x9, #72]
   166a8:	ldur	x10, [x29, #-40]
   166ac:	ldr	w11, [x10, #80]
   166b0:	mov	w10, w11
   166b4:	str	w8, [x9, x10, lsl #2]
   166b8:	ldur	x0, [x29, #-40]
   166bc:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   166c0:	mov	w8, #0x1                   	// #1
   166c4:	stur	w8, [x29, #-28]
   166c8:	b	16750 <lzma_mf_is_supported@@XZ_5.0+0x86c>
   166cc:	ldur	w0, [x29, #-52]
   166d0:	ldr	w1, [sp, #60]
   166d4:	ldr	x2, [sp, #64]
   166d8:	ldr	w3, [sp, #36]
   166dc:	ldur	x8, [x29, #-40]
   166e0:	ldr	w4, [x8, #92]
   166e4:	ldur	x8, [x29, #-40]
   166e8:	ldr	x5, [x8, #72]
   166ec:	ldur	x8, [x29, #-40]
   166f0:	ldr	w6, [x8, #80]
   166f4:	ldur	x8, [x29, #-40]
   166f8:	ldr	w7, [x8, #84]
   166fc:	ldur	x8, [x29, #-48]
   16700:	ldr	w9, [sp, #56]
   16704:	mov	w10, w9
   16708:	mov	x11, #0x8                   	// #8
   1670c:	mul	x10, x11, x10
   16710:	add	x8, x8, x10
   16714:	ldr	w9, [sp, #32]
   16718:	mov	x10, sp
   1671c:	str	x8, [x10]
   16720:	mov	x8, sp
   16724:	str	w9, [x8, #8]
   16728:	bl	1681c <lzma_mf_is_supported@@XZ_5.0+0x938>
   1672c:	ldur	x8, [x29, #-48]
   16730:	subs	x8, x0, x8
   16734:	mov	x10, #0x8                   	// #8
   16738:	sdiv	x8, x8, x10
   1673c:	str	w8, [sp, #56]
   16740:	ldur	x0, [x29, #-40]
   16744:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   16748:	ldr	w8, [sp, #56]
   1674c:	stur	w8, [x29, #-28]
   16750:	ldur	w0, [x29, #-28]
   16754:	ldp	x29, x30, [sp, #128]
   16758:	add	sp, sp, #0x90
   1675c:	ret
   16760:	sub	sp, sp, #0x10
   16764:	str	x0, [sp, #8]
   16768:	ldr	x8, [sp, #8]
   1676c:	ldr	w9, [x8, #24]
   16770:	add	w9, w9, #0x1
   16774:	str	w9, [x8, #24]
   16778:	ldr	x8, [sp, #8]
   1677c:	ldr	w9, [x8, #40]
   16780:	add	w9, w9, #0x1
   16784:	str	w9, [x8, #40]
   16788:	add	sp, sp, #0x10
   1678c:	ret
   16790:	sub	sp, sp, #0x20
   16794:	stp	x29, x30, [sp, #16]
   16798:	add	x29, sp, #0x10
   1679c:	str	x0, [sp, #8]
   167a0:	ldr	x8, [sp, #8]
   167a4:	ldr	w9, [x8, #80]
   167a8:	add	w9, w9, #0x1
   167ac:	str	w9, [x8, #80]
   167b0:	ldr	x8, [sp, #8]
   167b4:	ldr	w10, [x8, #84]
   167b8:	cmp	w9, w10
   167bc:	b.ne	167c8 <lzma_mf_is_supported@@XZ_5.0+0x8e4>  // b.any
   167c0:	ldr	x8, [sp, #8]
   167c4:	str	wzr, [x8, #80]
   167c8:	ldr	x8, [sp, #8]
   167cc:	ldr	w9, [x8, #24]
   167d0:	add	w9, w9, #0x1
   167d4:	str	w9, [x8, #24]
   167d8:	ldr	x8, [sp, #8]
   167dc:	ldr	w9, [x8, #24]
   167e0:	ldr	x8, [sp, #8]
   167e4:	ldr	w10, [x8, #20]
   167e8:	add	w9, w9, w10
   167ec:	mov	w10, #0xffffffff            	// #-1
   167f0:	cmp	w9, w10
   167f4:	cset	w9, eq  // eq = none
   167f8:	and	w9, w9, #0x1
   167fc:	mov	w0, w9
   16800:	sxtw	x8, w0
   16804:	cbz	x8, 16810 <lzma_mf_is_supported@@XZ_5.0+0x92c>
   16808:	ldr	x0, [sp, #8]
   1680c:	bl	18530 <lzma_mf_is_supported@@XZ_5.0+0x264c>
   16810:	ldp	x29, x30, [sp, #16]
   16814:	add	sp, sp, #0x20
   16818:	ret
   1681c:	sub	sp, sp, #0x80
   16820:	ldr	x8, [sp, #128]
   16824:	ldr	w9, [sp, #136]
   16828:	str	w0, [sp, #92]
   1682c:	str	w1, [sp, #88]
   16830:	str	x2, [sp, #80]
   16834:	str	w3, [sp, #76]
   16838:	str	w4, [sp, #72]
   1683c:	str	x5, [sp, #64]
   16840:	str	w6, [sp, #60]
   16844:	str	w7, [sp, #56]
   16848:	str	x8, [sp, #48]
   1684c:	str	w9, [sp, #44]
   16850:	ldr	w9, [sp, #76]
   16854:	ldr	x8, [sp, #64]
   16858:	ldr	w10, [sp, #60]
   1685c:	mov	w11, w10
   16860:	str	w9, [x8, x11, lsl #2]
   16864:	ldr	w8, [sp, #88]
   16868:	ldr	w9, [sp, #76]
   1686c:	subs	w8, w8, w9
   16870:	str	w8, [sp, #40]
   16874:	ldr	w8, [sp, #72]
   16878:	subs	w9, w8, #0x1
   1687c:	str	w9, [sp, #72]
   16880:	cbz	w8, 16894 <lzma_mf_is_supported@@XZ_5.0+0x9b0>
   16884:	ldr	w8, [sp, #40]
   16888:	ldr	w9, [sp, #56]
   1688c:	cmp	w8, w9
   16890:	b.cc	168a0 <lzma_mf_is_supported@@XZ_5.0+0x9bc>  // b.lo, b.ul, b.last
   16894:	ldr	x8, [sp, #48]
   16898:	str	x8, [sp, #96]
   1689c:	b	16a38 <lzma_mf_is_supported@@XZ_5.0+0xb54>
   168a0:	ldr	x8, [sp, #80]
   168a4:	ldr	w9, [sp, #40]
   168a8:	mov	w10, w9
   168ac:	mov	x11, xzr
   168b0:	subs	x10, x11, x10
   168b4:	add	x8, x8, x10
   168b8:	str	x8, [sp, #32]
   168bc:	ldr	x8, [sp, #64]
   168c0:	ldr	w9, [sp, #60]
   168c4:	ldr	w12, [sp, #40]
   168c8:	subs	w9, w9, w12
   168cc:	ldr	w12, [sp, #40]
   168d0:	ldr	w13, [sp, #60]
   168d4:	cmp	w12, w13
   168d8:	str	x8, [sp, #16]
   168dc:	str	w9, [sp, #12]
   168e0:	b.ls	168f0 <lzma_mf_is_supported@@XZ_5.0+0xa0c>  // b.plast
   168e4:	ldr	w8, [sp, #56]
   168e8:	str	w8, [sp, #8]
   168ec:	b	168f8 <lzma_mf_is_supported@@XZ_5.0+0xa14>
   168f0:	mov	w8, wzr
   168f4:	str	w8, [sp, #8]
   168f8:	ldr	w8, [sp, #8]
   168fc:	ldr	w9, [sp, #12]
   16900:	add	w8, w9, w8
   16904:	ldr	x10, [sp, #16]
   16908:	ldr	w8, [x10, w8, uxtw #2]
   1690c:	str	w8, [sp, #76]
   16910:	ldr	x11, [sp, #32]
   16914:	ldr	w8, [sp, #44]
   16918:	mov	w12, w8
   1691c:	ldrb	w8, [x11, x12]
   16920:	ldr	x11, [sp, #80]
   16924:	ldr	w13, [sp, #44]
   16928:	mov	w12, w13
   1692c:	ldrb	w13, [x11, x12]
   16930:	cmp	w8, w13
   16934:	b.ne	16a34 <lzma_mf_is_supported@@XZ_5.0+0xb50>  // b.any
   16938:	ldr	x8, [sp, #32]
   1693c:	ldrb	w9, [x8]
   16940:	ldr	x8, [sp, #80]
   16944:	ldrb	w10, [x8]
   16948:	cmp	w9, w10
   1694c:	b.ne	16a34 <lzma_mf_is_supported@@XZ_5.0+0xb50>  // b.any
   16950:	ldr	x8, [sp, #32]
   16954:	ldr	x9, [sp, #80]
   16958:	ldr	w10, [sp, #92]
   1695c:	str	x8, [sp, #120]
   16960:	str	x9, [sp, #112]
   16964:	mov	w11, #0x1                   	// #1
   16968:	str	w11, [sp, #108]
   1696c:	str	w10, [sp, #104]
   16970:	ldr	w8, [sp, #108]
   16974:	ldr	w9, [sp, #104]
   16978:	mov	w10, #0x0                   	// #0
   1697c:	cmp	w8, w9
   16980:	str	w10, [sp, #4]
   16984:	b.cs	169b4 <lzma_mf_is_supported@@XZ_5.0+0xad0>  // b.hs, b.nlast
   16988:	ldr	x8, [sp, #120]
   1698c:	ldr	w9, [sp, #108]
   16990:	mov	w10, w9
   16994:	ldrb	w9, [x8, x10]
   16998:	ldr	x8, [sp, #112]
   1699c:	ldr	w11, [sp, #108]
   169a0:	mov	w10, w11
   169a4:	ldrb	w11, [x8, x10]
   169a8:	cmp	w9, w11
   169ac:	cset	w9, eq  // eq = none
   169b0:	str	w9, [sp, #4]
   169b4:	ldr	w8, [sp, #4]
   169b8:	tbnz	w8, #0, 169c0 <lzma_mf_is_supported@@XZ_5.0+0xadc>
   169bc:	b	169d0 <lzma_mf_is_supported@@XZ_5.0+0xaec>
   169c0:	ldr	w8, [sp, #108]
   169c4:	add	w8, w8, #0x1
   169c8:	str	w8, [sp, #108]
   169cc:	b	16970 <lzma_mf_is_supported@@XZ_5.0+0xa8c>
   169d0:	ldr	w8, [sp, #108]
   169d4:	str	w8, [sp, #28]
   169d8:	ldr	w8, [sp, #44]
   169dc:	ldr	w9, [sp, #28]
   169e0:	cmp	w8, w9
   169e4:	b.cs	16a34 <lzma_mf_is_supported@@XZ_5.0+0xb50>  // b.hs, b.nlast
   169e8:	ldr	w8, [sp, #28]
   169ec:	str	w8, [sp, #44]
   169f0:	ldr	w8, [sp, #28]
   169f4:	ldr	x9, [sp, #48]
   169f8:	str	w8, [x9]
   169fc:	ldr	w8, [sp, #40]
   16a00:	subs	w8, w8, #0x1
   16a04:	ldr	x9, [sp, #48]
   16a08:	str	w8, [x9, #4]
   16a0c:	ldr	x9, [sp, #48]
   16a10:	add	x9, x9, #0x8
   16a14:	str	x9, [sp, #48]
   16a18:	ldr	w8, [sp, #28]
   16a1c:	ldr	w10, [sp, #92]
   16a20:	cmp	w8, w10
   16a24:	b.ne	16a34 <lzma_mf_is_supported@@XZ_5.0+0xb50>  // b.any
   16a28:	ldr	x8, [sp, #48]
   16a2c:	str	x8, [sp, #96]
   16a30:	b	16a38 <lzma_mf_is_supported@@XZ_5.0+0xb54>
   16a34:	b	16864 <lzma_mf_is_supported@@XZ_5.0+0x980>
   16a38:	ldr	x0, [sp, #96]
   16a3c:	add	sp, sp, #0x80
   16a40:	ret
   16a44:	sub	sp, sp, #0x40
   16a48:	stp	x29, x30, [sp, #48]
   16a4c:	add	x29, sp, #0x30
   16a50:	stur	x0, [x29, #-8]
   16a54:	stur	w1, [x29, #-12]
   16a58:	ldur	x0, [x29, #-8]
   16a5c:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   16a60:	cmp	w0, #0x3
   16a64:	b.cs	16a74 <lzma_mf_is_supported@@XZ_5.0+0xb90>  // b.hs, b.nlast
   16a68:	ldur	x0, [x29, #-8]
   16a6c:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   16a70:	b	16b58 <lzma_mf_is_supported@@XZ_5.0+0xc74>
   16a74:	ldur	x0, [x29, #-8]
   16a78:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   16a7c:	str	x0, [sp, #24]
   16a80:	ldur	x8, [x29, #-8]
   16a84:	ldr	w9, [x8, #24]
   16a88:	ldur	x8, [x29, #-8]
   16a8c:	ldr	w10, [x8, #20]
   16a90:	add	w9, w9, w10
   16a94:	str	w9, [sp, #20]
   16a98:	ldr	x8, [sp, #24]
   16a9c:	ldrb	w9, [x8]
   16aa0:	mov	w8, w9
   16aa4:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   16aa8:	ldr	x11, [x11, #3952]
   16aac:	ldr	w9, [x11, x8, lsl #2]
   16ab0:	ldr	x8, [sp, #24]
   16ab4:	ldrb	w10, [x8, #1]
   16ab8:	eor	w9, w9, w10
   16abc:	str	w9, [sp, #16]
   16ac0:	ldr	w9, [sp, #16]
   16ac4:	and	w9, w9, #0x3ff
   16ac8:	str	w9, [sp, #12]
   16acc:	ldr	w9, [sp, #16]
   16ad0:	ldr	x8, [sp, #24]
   16ad4:	ldrb	w10, [x8, #2]
   16ad8:	eor	w9, w9, w10, lsl #8
   16adc:	ldur	x8, [x29, #-8]
   16ae0:	ldr	w10, [x8, #88]
   16ae4:	and	w9, w9, w10
   16ae8:	str	w9, [sp, #8]
   16aec:	ldur	x8, [x29, #-8]
   16af0:	ldr	x8, [x8, #64]
   16af4:	ldr	w9, [sp, #8]
   16af8:	add	w9, w9, #0x400
   16afc:	ldr	w9, [x8, w9, uxtw #2]
   16b00:	str	w9, [sp, #4]
   16b04:	ldr	w9, [sp, #20]
   16b08:	ldur	x8, [x29, #-8]
   16b0c:	ldr	x8, [x8, #64]
   16b10:	ldr	w10, [sp, #12]
   16b14:	mov	w11, w10
   16b18:	str	w9, [x8, x11, lsl #2]
   16b1c:	ldr	w9, [sp, #20]
   16b20:	ldur	x8, [x29, #-8]
   16b24:	ldr	x8, [x8, #64]
   16b28:	ldr	w10, [sp, #8]
   16b2c:	add	w10, w10, #0x400
   16b30:	str	w9, [x8, w10, uxtw #2]
   16b34:	ldr	w8, [sp, #4]
   16b38:	ldur	x9, [x29, #-8]
   16b3c:	ldr	x9, [x9, #72]
   16b40:	ldur	x10, [x29, #-8]
   16b44:	ldr	w11, [x10, #80]
   16b48:	mov	w10, w11
   16b4c:	str	w8, [x9, x10, lsl #2]
   16b50:	ldur	x0, [x29, #-8]
   16b54:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   16b58:	ldur	w8, [x29, #-12]
   16b5c:	subs	w8, w8, #0x1
   16b60:	stur	w8, [x29, #-12]
   16b64:	cbnz	w8, 16a58 <lzma_mf_is_supported@@XZ_5.0+0xb74>
   16b68:	ldp	x29, x30, [sp, #48]
   16b6c:	add	sp, sp, #0x40
   16b70:	ret
   16b74:	sub	sp, sp, #0x90
   16b78:	stp	x29, x30, [sp, #128]
   16b7c:	add	x29, sp, #0x80
   16b80:	stur	x0, [x29, #-40]
   16b84:	stur	x1, [x29, #-48]
   16b88:	ldur	x0, [x29, #-40]
   16b8c:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   16b90:	stur	w0, [x29, #-52]
   16b94:	ldur	x8, [x29, #-40]
   16b98:	ldr	w9, [x8, #96]
   16b9c:	ldur	w10, [x29, #-52]
   16ba0:	cmp	w9, w10
   16ba4:	b.hi	16bb8 <lzma_mf_is_supported@@XZ_5.0+0xcd4>  // b.pmore
   16ba8:	ldur	x8, [x29, #-40]
   16bac:	ldr	w9, [x8, #96]
   16bb0:	stur	w9, [x29, #-52]
   16bb4:	b	16bd4 <lzma_mf_is_supported@@XZ_5.0+0xcf0>
   16bb8:	ldur	w8, [x29, #-52]
   16bbc:	cmp	w8, #0x4
   16bc0:	b.cs	16bd4 <lzma_mf_is_supported@@XZ_5.0+0xcf0>  // b.hs, b.nlast
   16bc4:	ldur	x0, [x29, #-40]
   16bc8:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   16bcc:	stur	wzr, [x29, #-28]
   16bd0:	b	16fbc <lzma_mf_is_supported@@XZ_5.0+0x10d8>
   16bd4:	ldur	x0, [x29, #-40]
   16bd8:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   16bdc:	str	x0, [sp, #64]
   16be0:	ldur	x8, [x29, #-40]
   16be4:	ldr	w9, [x8, #24]
   16be8:	ldur	x8, [x29, #-40]
   16bec:	ldr	w10, [x8, #20]
   16bf0:	add	w9, w9, w10
   16bf4:	str	w9, [sp, #60]
   16bf8:	str	wzr, [sp, #56]
   16bfc:	ldr	x8, [sp, #64]
   16c00:	ldrb	w9, [x8]
   16c04:	mov	w8, w9
   16c08:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   16c0c:	ldr	x11, [x11, #3952]
   16c10:	ldr	w9, [x11, x8, lsl #2]
   16c14:	ldr	x8, [sp, #64]
   16c18:	ldrb	w10, [x8, #1]
   16c1c:	eor	w9, w9, w10
   16c20:	str	w9, [sp, #52]
   16c24:	ldr	w9, [sp, #52]
   16c28:	and	w9, w9, #0x3ff
   16c2c:	str	w9, [sp, #48]
   16c30:	ldr	w9, [sp, #52]
   16c34:	ldr	x8, [sp, #64]
   16c38:	ldrb	w10, [x8, #2]
   16c3c:	eor	w9, w9, w10, lsl #8
   16c40:	and	w9, w9, #0xffff
   16c44:	str	w9, [sp, #44]
   16c48:	ldr	w9, [sp, #52]
   16c4c:	ldr	x8, [sp, #64]
   16c50:	ldrb	w10, [x8, #2]
   16c54:	eor	w9, w9, w10, lsl #8
   16c58:	ldr	x8, [sp, #64]
   16c5c:	ldrb	w10, [x8, #3]
   16c60:	mov	w8, w10
   16c64:	ldr	w10, [x11, x8, lsl #2]
   16c68:	eor	w9, w9, w10, lsl #5
   16c6c:	ldur	x8, [x29, #-40]
   16c70:	ldr	w10, [x8, #88]
   16c74:	and	w9, w9, w10
   16c78:	str	w9, [sp, #40]
   16c7c:	ldr	w9, [sp, #60]
   16c80:	ldur	x8, [x29, #-40]
   16c84:	ldr	x8, [x8, #64]
   16c88:	ldr	w10, [sp, #48]
   16c8c:	mov	w11, w10
   16c90:	ldr	w10, [x8, x11, lsl #2]
   16c94:	subs	w9, w9, w10
   16c98:	str	w9, [sp, #36]
   16c9c:	ldr	w9, [sp, #60]
   16ca0:	ldur	x8, [x29, #-40]
   16ca4:	ldr	x8, [x8, #64]
   16ca8:	ldr	w10, [sp, #44]
   16cac:	add	w10, w10, #0x400
   16cb0:	ldr	w10, [x8, w10, uxtw #2]
   16cb4:	subs	w9, w9, w10
   16cb8:	str	w9, [sp, #32]
   16cbc:	ldur	x8, [x29, #-40]
   16cc0:	ldr	x8, [x8, #64]
   16cc4:	ldr	w9, [sp, #40]
   16cc8:	mov	w10, #0x400                 	// #1024
   16ccc:	movk	w10, #0x1, lsl #16
   16cd0:	add	w9, w10, w9
   16cd4:	ldr	w9, [x8, w9, uxtw #2]
   16cd8:	str	w9, [sp, #28]
   16cdc:	ldr	w9, [sp, #60]
   16ce0:	ldur	x8, [x29, #-40]
   16ce4:	ldr	x8, [x8, #64]
   16ce8:	ldr	w12, [sp, #48]
   16cec:	mov	w11, w12
   16cf0:	str	w9, [x8, x11, lsl #2]
   16cf4:	ldr	w9, [sp, #60]
   16cf8:	ldur	x8, [x29, #-40]
   16cfc:	ldr	x8, [x8, #64]
   16d00:	ldr	w12, [sp, #44]
   16d04:	add	w12, w12, #0x400
   16d08:	str	w9, [x8, w12, uxtw #2]
   16d0c:	ldr	w9, [sp, #60]
   16d10:	ldur	x8, [x29, #-40]
   16d14:	ldr	x8, [x8, #64]
   16d18:	ldr	w12, [sp, #40]
   16d1c:	add	w10, w10, w12
   16d20:	str	w9, [x8, w10, uxtw #2]
   16d24:	mov	w9, #0x1                   	// #1
   16d28:	str	w9, [sp, #24]
   16d2c:	ldr	w9, [sp, #36]
   16d30:	ldur	x8, [x29, #-40]
   16d34:	ldr	w10, [x8, #84]
   16d38:	cmp	w9, w10
   16d3c:	b.cs	16d90 <lzma_mf_is_supported@@XZ_5.0+0xeac>  // b.hs, b.nlast
   16d40:	ldr	x8, [sp, #64]
   16d44:	ldr	w9, [sp, #36]
   16d48:	mov	w10, w9
   16d4c:	mov	x11, xzr
   16d50:	subs	x10, x11, x10
   16d54:	ldrb	w9, [x8, x10]
   16d58:	ldr	x8, [sp, #64]
   16d5c:	ldrb	w12, [x8]
   16d60:	cmp	w9, w12
   16d64:	b.ne	16d90 <lzma_mf_is_supported@@XZ_5.0+0xeac>  // b.any
   16d68:	mov	w8, #0x2                   	// #2
   16d6c:	str	w8, [sp, #24]
   16d70:	ldur	x9, [x29, #-48]
   16d74:	str	w8, [x9]
   16d78:	ldr	w8, [sp, #36]
   16d7c:	mov	w10, #0x1                   	// #1
   16d80:	subs	w8, w8, #0x1
   16d84:	ldur	x9, [x29, #-48]
   16d88:	str	w8, [x9, #4]
   16d8c:	str	w10, [sp, #56]
   16d90:	ldr	w8, [sp, #36]
   16d94:	ldr	w9, [sp, #32]
   16d98:	cmp	w8, w9
   16d9c:	b.eq	16e1c <lzma_mf_is_supported@@XZ_5.0+0xf38>  // b.none
   16da0:	ldr	w8, [sp, #32]
   16da4:	ldur	x9, [x29, #-40]
   16da8:	ldr	w10, [x9, #84]
   16dac:	cmp	w8, w10
   16db0:	b.cs	16e1c <lzma_mf_is_supported@@XZ_5.0+0xf38>  // b.hs, b.nlast
   16db4:	ldr	x8, [sp, #64]
   16db8:	ldr	w9, [sp, #32]
   16dbc:	mov	w10, w9
   16dc0:	mov	x11, xzr
   16dc4:	subs	x10, x11, x10
   16dc8:	ldrb	w9, [x8, x10]
   16dcc:	ldr	x8, [sp, #64]
   16dd0:	ldrb	w12, [x8]
   16dd4:	cmp	w9, w12
   16dd8:	b.ne	16e1c <lzma_mf_is_supported@@XZ_5.0+0xf38>  // b.any
   16ddc:	mov	w8, #0x3                   	// #3
   16de0:	str	w8, [sp, #24]
   16de4:	ldr	w8, [sp, #32]
   16de8:	subs	w8, w8, #0x1
   16dec:	ldur	x9, [x29, #-48]
   16df0:	ldr	w10, [sp, #56]
   16df4:	mov	w11, w10
   16df8:	mov	w10, w11
   16dfc:	add	w10, w10, #0x1
   16e00:	str	w10, [sp, #56]
   16e04:	mov	x12, #0x8                   	// #8
   16e08:	mul	x11, x12, x11
   16e0c:	add	x9, x9, x11
   16e10:	str	w8, [x9, #4]
   16e14:	ldr	w8, [sp, #32]
   16e18:	str	w8, [sp, #36]
   16e1c:	ldr	w8, [sp, #56]
   16e20:	cbz	w8, 16f24 <lzma_mf_is_supported@@XZ_5.0+0x1040>
   16e24:	ldr	x8, [sp, #64]
   16e28:	ldr	w9, [sp, #36]
   16e2c:	mov	w10, w9
   16e30:	mov	x11, xzr
   16e34:	subs	x10, x11, x10
   16e38:	add	x8, x8, x10
   16e3c:	ldr	x10, [sp, #64]
   16e40:	ldr	w9, [sp, #24]
   16e44:	ldur	w12, [x29, #-52]
   16e48:	stur	x8, [x29, #-8]
   16e4c:	stur	x10, [x29, #-16]
   16e50:	stur	w9, [x29, #-20]
   16e54:	stur	w12, [x29, #-24]
   16e58:	ldur	w8, [x29, #-20]
   16e5c:	ldur	w9, [x29, #-24]
   16e60:	mov	w10, #0x0                   	// #0
   16e64:	cmp	w8, w9
   16e68:	str	w10, [sp, #20]
   16e6c:	b.cs	16e9c <lzma_mf_is_supported@@XZ_5.0+0xfb8>  // b.hs, b.nlast
   16e70:	ldur	x8, [x29, #-8]
   16e74:	ldur	w9, [x29, #-20]
   16e78:	mov	w10, w9
   16e7c:	ldrb	w9, [x8, x10]
   16e80:	ldur	x8, [x29, #-16]
   16e84:	ldur	w11, [x29, #-20]
   16e88:	mov	w10, w11
   16e8c:	ldrb	w11, [x8, x10]
   16e90:	cmp	w9, w11
   16e94:	cset	w9, eq  // eq = none
   16e98:	str	w9, [sp, #20]
   16e9c:	ldr	w8, [sp, #20]
   16ea0:	tbnz	w8, #0, 16ea8 <lzma_mf_is_supported@@XZ_5.0+0xfc4>
   16ea4:	b	16eb8 <lzma_mf_is_supported@@XZ_5.0+0xfd4>
   16ea8:	ldur	w8, [x29, #-20]
   16eac:	add	w8, w8, #0x1
   16eb0:	stur	w8, [x29, #-20]
   16eb4:	b	16e58 <lzma_mf_is_supported@@XZ_5.0+0xf74>
   16eb8:	ldur	w8, [x29, #-20]
   16ebc:	str	w8, [sp, #24]
   16ec0:	ldr	w8, [sp, #24]
   16ec4:	ldur	x9, [x29, #-48]
   16ec8:	ldr	w10, [sp, #56]
   16ecc:	subs	w10, w10, #0x1
   16ed0:	mov	w11, w10
   16ed4:	ubfx	x11, x11, #0, #32
   16ed8:	mov	x12, #0x8                   	// #8
   16edc:	mul	x11, x12, x11
   16ee0:	str	w8, [x9, x11]
   16ee4:	ldr	w8, [sp, #24]
   16ee8:	ldur	w10, [x29, #-52]
   16eec:	cmp	w8, w10
   16ef0:	b.ne	16f24 <lzma_mf_is_supported@@XZ_5.0+0x1040>  // b.any
   16ef4:	ldr	w8, [sp, #28]
   16ef8:	ldur	x9, [x29, #-40]
   16efc:	ldr	x9, [x9, #72]
   16f00:	ldur	x10, [x29, #-40]
   16f04:	ldr	w11, [x10, #80]
   16f08:	mov	w10, w11
   16f0c:	str	w8, [x9, x10, lsl #2]
   16f10:	ldur	x0, [x29, #-40]
   16f14:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   16f18:	ldr	w8, [sp, #56]
   16f1c:	stur	w8, [x29, #-28]
   16f20:	b	16fbc <lzma_mf_is_supported@@XZ_5.0+0x10d8>
   16f24:	ldr	w8, [sp, #24]
   16f28:	cmp	w8, #0x3
   16f2c:	b.cs	16f38 <lzma_mf_is_supported@@XZ_5.0+0x1054>  // b.hs, b.nlast
   16f30:	mov	w8, #0x3                   	// #3
   16f34:	str	w8, [sp, #24]
   16f38:	ldur	w0, [x29, #-52]
   16f3c:	ldr	w1, [sp, #60]
   16f40:	ldr	x2, [sp, #64]
   16f44:	ldr	w3, [sp, #28]
   16f48:	ldur	x8, [x29, #-40]
   16f4c:	ldr	w4, [x8, #92]
   16f50:	ldur	x8, [x29, #-40]
   16f54:	ldr	x5, [x8, #72]
   16f58:	ldur	x8, [x29, #-40]
   16f5c:	ldr	w6, [x8, #80]
   16f60:	ldur	x8, [x29, #-40]
   16f64:	ldr	w7, [x8, #84]
   16f68:	ldur	x8, [x29, #-48]
   16f6c:	ldr	w9, [sp, #56]
   16f70:	mov	w10, w9
   16f74:	mov	x11, #0x8                   	// #8
   16f78:	mul	x10, x11, x10
   16f7c:	add	x8, x8, x10
   16f80:	ldr	w9, [sp, #24]
   16f84:	mov	x10, sp
   16f88:	str	x8, [x10]
   16f8c:	mov	x8, sp
   16f90:	str	w9, [x8, #8]
   16f94:	bl	1681c <lzma_mf_is_supported@@XZ_5.0+0x938>
   16f98:	ldur	x8, [x29, #-48]
   16f9c:	subs	x8, x0, x8
   16fa0:	mov	x10, #0x8                   	// #8
   16fa4:	sdiv	x8, x8, x10
   16fa8:	str	w8, [sp, #56]
   16fac:	ldur	x0, [x29, #-40]
   16fb0:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   16fb4:	ldr	w8, [sp, #56]
   16fb8:	stur	w8, [x29, #-28]
   16fbc:	ldur	w0, [x29, #-28]
   16fc0:	ldp	x29, x30, [sp, #128]
   16fc4:	add	sp, sp, #0x90
   16fc8:	ret
   16fcc:	sub	sp, sp, #0x40
   16fd0:	stp	x29, x30, [sp, #48]
   16fd4:	add	x29, sp, #0x30
   16fd8:	stur	x0, [x29, #-8]
   16fdc:	stur	w1, [x29, #-12]
   16fe0:	ldur	x0, [x29, #-8]
   16fe4:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   16fe8:	cmp	w0, #0x4
   16fec:	b.cs	16ffc <lzma_mf_is_supported@@XZ_5.0+0x1118>  // b.hs, b.nlast
   16ff0:	ldur	x0, [x29, #-8]
   16ff4:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   16ff8:	b	1712c <lzma_mf_is_supported@@XZ_5.0+0x1248>
   16ffc:	ldur	x0, [x29, #-8]
   17000:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   17004:	str	x0, [sp, #24]
   17008:	ldur	x8, [x29, #-8]
   1700c:	ldr	w9, [x8, #24]
   17010:	ldur	x8, [x29, #-8]
   17014:	ldr	w10, [x8, #20]
   17018:	add	w9, w9, w10
   1701c:	str	w9, [sp, #20]
   17020:	ldr	x8, [sp, #24]
   17024:	ldrb	w9, [x8]
   17028:	mov	w8, w9
   1702c:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   17030:	ldr	x11, [x11, #3952]
   17034:	ldr	w9, [x11, x8, lsl #2]
   17038:	ldr	x8, [sp, #24]
   1703c:	ldrb	w10, [x8, #1]
   17040:	eor	w9, w9, w10
   17044:	str	w9, [sp, #16]
   17048:	ldr	w9, [sp, #16]
   1704c:	and	w9, w9, #0x3ff
   17050:	str	w9, [sp, #12]
   17054:	ldr	w9, [sp, #16]
   17058:	ldr	x8, [sp, #24]
   1705c:	ldrb	w10, [x8, #2]
   17060:	eor	w9, w9, w10, lsl #8
   17064:	and	w9, w9, #0xffff
   17068:	str	w9, [sp, #8]
   1706c:	ldr	w9, [sp, #16]
   17070:	ldr	x8, [sp, #24]
   17074:	ldrb	w10, [x8, #2]
   17078:	eor	w9, w9, w10, lsl #8
   1707c:	ldr	x8, [sp, #24]
   17080:	ldrb	w10, [x8, #3]
   17084:	mov	w8, w10
   17088:	ldr	w10, [x11, x8, lsl #2]
   1708c:	eor	w9, w9, w10, lsl #5
   17090:	ldur	x8, [x29, #-8]
   17094:	ldr	w10, [x8, #88]
   17098:	and	w9, w9, w10
   1709c:	str	w9, [sp, #4]
   170a0:	ldur	x8, [x29, #-8]
   170a4:	ldr	x8, [x8, #64]
   170a8:	ldr	w9, [sp, #4]
   170ac:	mov	w10, #0x400                 	// #1024
   170b0:	movk	w10, #0x1, lsl #16
   170b4:	add	w9, w10, w9
   170b8:	ldr	w9, [x8, w9, uxtw #2]
   170bc:	str	w9, [sp]
   170c0:	ldr	w9, [sp, #20]
   170c4:	ldur	x8, [x29, #-8]
   170c8:	ldr	x8, [x8, #64]
   170cc:	ldr	w12, [sp, #12]
   170d0:	mov	w11, w12
   170d4:	str	w9, [x8, x11, lsl #2]
   170d8:	ldr	w9, [sp, #20]
   170dc:	ldur	x8, [x29, #-8]
   170e0:	ldr	x8, [x8, #64]
   170e4:	ldr	w12, [sp, #8]
   170e8:	add	w12, w12, #0x400
   170ec:	str	w9, [x8, w12, uxtw #2]
   170f0:	ldr	w9, [sp, #20]
   170f4:	ldur	x8, [x29, #-8]
   170f8:	ldr	x8, [x8, #64]
   170fc:	ldr	w12, [sp, #4]
   17100:	add	w10, w10, w12
   17104:	str	w9, [x8, w10, uxtw #2]
   17108:	ldr	w8, [sp]
   1710c:	ldur	x9, [x29, #-8]
   17110:	ldr	x9, [x9, #72]
   17114:	ldur	x10, [x29, #-8]
   17118:	ldr	w11, [x10, #80]
   1711c:	mov	w10, w11
   17120:	str	w8, [x9, x10, lsl #2]
   17124:	ldur	x0, [x29, #-8]
   17128:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   1712c:	ldur	w8, [x29, #-12]
   17130:	subs	w8, w8, #0x1
   17134:	stur	w8, [x29, #-12]
   17138:	cbnz	w8, 16fe0 <lzma_mf_is_supported@@XZ_5.0+0x10fc>
   1713c:	ldp	x29, x30, [sp, #48]
   17140:	add	sp, sp, #0x40
   17144:	ret
   17148:	sub	sp, sp, #0x60
   1714c:	stp	x29, x30, [sp, #80]
   17150:	add	x29, sp, #0x50
   17154:	stur	x0, [x29, #-16]
   17158:	stur	x1, [x29, #-24]
   1715c:	ldur	x0, [x29, #-16]
   17160:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   17164:	stur	w0, [x29, #-28]
   17168:	ldur	x8, [x29, #-16]
   1716c:	ldr	w9, [x8, #96]
   17170:	ldur	w10, [x29, #-28]
   17174:	cmp	w9, w10
   17178:	b.hi	1718c <lzma_mf_is_supported@@XZ_5.0+0x12a8>  // b.pmore
   1717c:	ldur	x8, [x29, #-16]
   17180:	ldr	w9, [x8, #96]
   17184:	stur	w9, [x29, #-28]
   17188:	b	171b8 <lzma_mf_is_supported@@XZ_5.0+0x12d4>
   1718c:	ldur	w8, [x29, #-28]
   17190:	cmp	w8, #0x2
   17194:	b.cc	171a8 <lzma_mf_is_supported@@XZ_5.0+0x12c4>  // b.lo, b.ul, b.last
   17198:	ldur	x8, [x29, #-16]
   1719c:	ldr	w9, [x8, #104]
   171a0:	cmp	w9, #0x1
   171a4:	b.ne	171b8 <lzma_mf_is_supported@@XZ_5.0+0x12d4>  // b.any
   171a8:	ldur	x0, [x29, #-16]
   171ac:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   171b0:	stur	wzr, [x29, #-4]
   171b4:	b	172ac <lzma_mf_is_supported@@XZ_5.0+0x13c8>
   171b8:	ldur	x0, [x29, #-16]
   171bc:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   171c0:	str	x0, [sp, #40]
   171c4:	ldur	x8, [x29, #-16]
   171c8:	ldr	w9, [x8, #24]
   171cc:	ldur	x8, [x29, #-16]
   171d0:	ldr	w10, [x8, #20]
   171d4:	add	w9, w9, w10
   171d8:	str	w9, [sp, #36]
   171dc:	str	wzr, [sp, #32]
   171e0:	ldr	x8, [sp, #40]
   171e4:	ldrb	w9, [x8]
   171e8:	ldr	x8, [sp, #40]
   171ec:	ldrb	w10, [x8, #1]
   171f0:	orr	w9, w9, w10, lsl #8
   171f4:	str	w9, [sp, #28]
   171f8:	ldur	x8, [x29, #-16]
   171fc:	ldr	x8, [x8, #64]
   17200:	ldr	w9, [sp, #28]
   17204:	mov	w11, w9
   17208:	ldr	w9, [x8, x11, lsl #2]
   1720c:	str	w9, [sp, #24]
   17210:	ldr	w9, [sp, #36]
   17214:	ldur	x8, [x29, #-16]
   17218:	ldr	x8, [x8, #64]
   1721c:	ldr	w10, [sp, #28]
   17220:	mov	w11, w10
   17224:	str	w9, [x8, x11, lsl #2]
   17228:	ldur	w0, [x29, #-28]
   1722c:	ldr	w1, [sp, #36]
   17230:	ldr	x2, [sp, #40]
   17234:	ldr	w3, [sp, #24]
   17238:	ldur	x8, [x29, #-16]
   1723c:	ldr	w4, [x8, #92]
   17240:	ldur	x8, [x29, #-16]
   17244:	ldr	x5, [x8, #72]
   17248:	ldur	x8, [x29, #-16]
   1724c:	ldr	w6, [x8, #80]
   17250:	ldur	x8, [x29, #-16]
   17254:	ldr	w7, [x8, #84]
   17258:	ldur	x8, [x29, #-24]
   1725c:	ldr	w9, [sp, #32]
   17260:	mov	w10, w9
   17264:	mov	x11, #0x8                   	// #8
   17268:	mul	x10, x11, x10
   1726c:	add	x8, x8, x10
   17270:	mov	x10, sp
   17274:	str	x8, [x10]
   17278:	mov	x8, sp
   1727c:	mov	w9, #0x1                   	// #1
   17280:	str	w9, [x8, #8]
   17284:	bl	172bc <lzma_mf_is_supported@@XZ_5.0+0x13d8>
   17288:	ldur	x8, [x29, #-24]
   1728c:	subs	x8, x0, x8
   17290:	mov	x10, #0x8                   	// #8
   17294:	sdiv	x8, x8, x10
   17298:	str	w8, [sp, #32]
   1729c:	ldur	x0, [x29, #-16]
   172a0:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   172a4:	ldr	w8, [sp, #32]
   172a8:	stur	w8, [x29, #-4]
   172ac:	ldur	w0, [x29, #-4]
   172b0:	ldp	x29, x30, [sp, #80]
   172b4:	add	sp, sp, #0x60
   172b8:	ret
   172bc:	sub	sp, sp, #0xb0
   172c0:	add	x8, sp, #0xa8
   172c4:	ldr	x9, [sp, #176]
   172c8:	ldr	w10, [sp, #184]
   172cc:	str	w0, [sp, #140]
   172d0:	str	w1, [sp, #136]
   172d4:	str	x2, [sp, #128]
   172d8:	str	w3, [sp, #124]
   172dc:	str	w4, [sp, #120]
   172e0:	str	x5, [sp, #112]
   172e4:	str	w6, [sp, #108]
   172e8:	str	w7, [sp, #104]
   172ec:	str	x9, [sp, #96]
   172f0:	str	w10, [sp, #92]
   172f4:	ldr	x9, [sp, #112]
   172f8:	ldr	w10, [sp, #108]
   172fc:	lsl	w10, w10, #1
   17300:	mov	w11, w10
   17304:	ubfx	x11, x11, #0, #32
   17308:	mov	x12, #0x4                   	// #4
   1730c:	mul	x11, x12, x11
   17310:	add	x9, x9, x11
   17314:	add	x9, x9, #0x4
   17318:	str	x9, [sp, #80]
   1731c:	ldr	x9, [sp, #112]
   17320:	ldr	w10, [sp, #108]
   17324:	lsl	w10, w10, #1
   17328:	mov	w11, w10
   1732c:	ubfx	x11, x11, #0, #32
   17330:	mul	x11, x12, x11
   17334:	add	x9, x9, x11
   17338:	str	x9, [sp, #72]
   1733c:	str	wzr, [sp, #68]
   17340:	str	wzr, [sp, #64]
   17344:	str	x8, [sp, #24]
   17348:	ldr	w8, [sp, #136]
   1734c:	ldr	w9, [sp, #124]
   17350:	subs	w8, w8, w9
   17354:	str	w8, [sp, #60]
   17358:	ldr	w8, [sp, #120]
   1735c:	subs	w9, w8, #0x1
   17360:	str	w9, [sp, #120]
   17364:	cbz	w8, 17378 <lzma_mf_is_supported@@XZ_5.0+0x1494>
   17368:	ldr	w8, [sp, #60]
   1736c:	ldr	w9, [sp, #104]
   17370:	cmp	w8, w9
   17374:	b.cc	17394 <lzma_mf_is_supported@@XZ_5.0+0x14b0>  // b.lo, b.ul, b.last
   17378:	ldr	x8, [sp, #80]
   1737c:	str	wzr, [x8]
   17380:	ldr	x8, [sp, #72]
   17384:	str	wzr, [x8]
   17388:	ldr	x8, [sp, #96]
   1738c:	str	x8, [sp, #144]
   17390:	b	17600 <lzma_mf_is_supported@@XZ_5.0+0x171c>
   17394:	ldr	x8, [sp, #112]
   17398:	ldr	w9, [sp, #108]
   1739c:	ldr	w10, [sp, #60]
   173a0:	subs	w9, w9, w10
   173a4:	ldr	w10, [sp, #60]
   173a8:	ldr	w11, [sp, #108]
   173ac:	cmp	w10, w11
   173b0:	str	x8, [sp, #16]
   173b4:	str	w9, [sp, #12]
   173b8:	b.ls	173c8 <lzma_mf_is_supported@@XZ_5.0+0x14e4>  // b.plast
   173bc:	ldr	w8, [sp, #104]
   173c0:	str	w8, [sp, #8]
   173c4:	b	173d0 <lzma_mf_is_supported@@XZ_5.0+0x14ec>
   173c8:	mov	w8, wzr
   173cc:	str	w8, [sp, #8]
   173d0:	ldr	w8, [sp, #8]
   173d4:	ldr	w9, [sp, #12]
   173d8:	add	w8, w9, w8
   173dc:	lsl	w8, w8, #1
   173e0:	mov	w10, w8
   173e4:	ubfx	x10, x10, #0, #32
   173e8:	mov	x11, #0x4                   	// #4
   173ec:	mul	x10, x11, x10
   173f0:	ldr	x11, [sp, #16]
   173f4:	add	x10, x11, x10
   173f8:	str	x10, [sp, #48]
   173fc:	ldr	x10, [sp, #128]
   17400:	ldr	w8, [sp, #60]
   17404:	mov	w12, w8
   17408:	mov	x13, xzr
   1740c:	subs	x12, x13, x12
   17410:	add	x10, x10, x12
   17414:	str	x10, [sp, #40]
   17418:	ldr	w8, [sp, #68]
   1741c:	ldr	w14, [sp, #64]
   17420:	cmp	w8, w14
   17424:	b.cs	17434 <lzma_mf_is_supported@@XZ_5.0+0x1550>  // b.hs, b.nlast
   17428:	ldr	w8, [sp, #68]
   1742c:	str	w8, [sp, #4]
   17430:	b	1743c <lzma_mf_is_supported@@XZ_5.0+0x1558>
   17434:	ldr	w8, [sp, #64]
   17438:	str	w8, [sp, #4]
   1743c:	ldr	w8, [sp, #4]
   17440:	str	w8, [sp, #36]
   17444:	ldr	x9, [sp, #40]
   17448:	ldr	w8, [sp, #36]
   1744c:	mov	w10, w8
   17450:	ldrb	w8, [x9, x10]
   17454:	ldr	x9, [sp, #128]
   17458:	ldr	w11, [sp, #36]
   1745c:	mov	w10, w11
   17460:	ldrb	w11, [x9, x10]
   17464:	cmp	w8, w11
   17468:	b.ne	1757c <lzma_mf_is_supported@@XZ_5.0+0x1698>  // b.any
   1746c:	ldr	x8, [sp, #40]
   17470:	ldr	x9, [sp, #128]
   17474:	ldr	w10, [sp, #36]
   17478:	add	w10, w10, #0x1
   1747c:	ldr	w11, [sp, #140]
   17480:	ldr	x12, [sp, #24]
   17484:	str	x8, [x12]
   17488:	str	x9, [sp, #160]
   1748c:	str	w10, [sp, #156]
   17490:	str	w11, [sp, #152]
   17494:	ldr	w8, [sp, #156]
   17498:	ldr	w9, [sp, #152]
   1749c:	mov	w10, #0x0                   	// #0
   174a0:	cmp	w8, w9
   174a4:	str	w10, [sp]
   174a8:	b.cs	174dc <lzma_mf_is_supported@@XZ_5.0+0x15f8>  // b.hs, b.nlast
   174ac:	ldr	x8, [sp, #24]
   174b0:	ldr	x9, [x8]
   174b4:	ldr	w10, [sp, #156]
   174b8:	mov	w11, w10
   174bc:	ldrb	w10, [x9, x11]
   174c0:	ldr	x9, [sp, #160]
   174c4:	ldr	w12, [sp, #156]
   174c8:	mov	w11, w12
   174cc:	ldrb	w12, [x9, x11]
   174d0:	cmp	w10, w12
   174d4:	cset	w10, eq  // eq = none
   174d8:	str	w10, [sp]
   174dc:	ldr	w8, [sp]
   174e0:	tbnz	w8, #0, 174e8 <lzma_mf_is_supported@@XZ_5.0+0x1604>
   174e4:	b	174f8 <lzma_mf_is_supported@@XZ_5.0+0x1614>
   174e8:	ldr	w8, [sp, #156]
   174ec:	add	w8, w8, #0x1
   174f0:	str	w8, [sp, #156]
   174f4:	b	17494 <lzma_mf_is_supported@@XZ_5.0+0x15b0>
   174f8:	ldr	w8, [sp, #156]
   174fc:	str	w8, [sp, #36]
   17500:	ldr	w8, [sp, #92]
   17504:	ldr	w9, [sp, #36]
   17508:	cmp	w8, w9
   1750c:	b.cs	1757c <lzma_mf_is_supported@@XZ_5.0+0x1698>  // b.hs, b.nlast
   17510:	ldr	w8, [sp, #36]
   17514:	str	w8, [sp, #92]
   17518:	ldr	w8, [sp, #36]
   1751c:	ldr	x9, [sp, #96]
   17520:	str	w8, [x9]
   17524:	ldr	w8, [sp, #60]
   17528:	subs	w8, w8, #0x1
   1752c:	ldr	x9, [sp, #96]
   17530:	str	w8, [x9, #4]
   17534:	ldr	x9, [sp, #96]
   17538:	add	x9, x9, #0x8
   1753c:	str	x9, [sp, #96]
   17540:	ldr	w8, [sp, #36]
   17544:	ldr	w10, [sp, #140]
   17548:	cmp	w8, w10
   1754c:	b.ne	1757c <lzma_mf_is_supported@@XZ_5.0+0x1698>  // b.any
   17550:	ldr	x8, [sp, #48]
   17554:	ldr	w9, [x8]
   17558:	ldr	x8, [sp, #72]
   1755c:	str	w9, [x8]
   17560:	ldr	x8, [sp, #48]
   17564:	ldr	w9, [x8, #4]
   17568:	ldr	x8, [sp, #80]
   1756c:	str	w9, [x8]
   17570:	ldr	x8, [sp, #96]
   17574:	str	x8, [sp, #144]
   17578:	b	17600 <lzma_mf_is_supported@@XZ_5.0+0x171c>
   1757c:	ldr	x8, [sp, #40]
   17580:	ldr	w9, [sp, #36]
   17584:	mov	w10, w9
   17588:	ldrb	w9, [x8, x10]
   1758c:	ldr	x8, [sp, #128]
   17590:	ldr	w11, [sp, #36]
   17594:	mov	w10, w11
   17598:	ldrb	w11, [x8, x10]
   1759c:	cmp	w9, w11
   175a0:	b.ge	175d4 <lzma_mf_is_supported@@XZ_5.0+0x16f0>  // b.tcont
   175a4:	ldr	w8, [sp, #124]
   175a8:	ldr	x9, [sp, #72]
   175ac:	str	w8, [x9]
   175b0:	ldr	x9, [sp, #48]
   175b4:	add	x9, x9, #0x4
   175b8:	str	x9, [sp, #72]
   175bc:	ldr	x9, [sp, #72]
   175c0:	ldr	w8, [x9]
   175c4:	str	w8, [sp, #124]
   175c8:	ldr	w8, [sp, #36]
   175cc:	str	w8, [sp, #64]
   175d0:	b	175fc <lzma_mf_is_supported@@XZ_5.0+0x1718>
   175d4:	ldr	w8, [sp, #124]
   175d8:	ldr	x9, [sp, #80]
   175dc:	str	w8, [x9]
   175e0:	ldr	x9, [sp, #48]
   175e4:	str	x9, [sp, #80]
   175e8:	ldr	x9, [sp, #80]
   175ec:	ldr	w8, [x9]
   175f0:	str	w8, [sp, #124]
   175f4:	ldr	w8, [sp, #36]
   175f8:	str	w8, [sp, #68]
   175fc:	b	17348 <lzma_mf_is_supported@@XZ_5.0+0x1464>
   17600:	ldr	x0, [sp, #144]
   17604:	add	sp, sp, #0xb0
   17608:	ret
   1760c:	sub	sp, sp, #0x40
   17610:	stp	x29, x30, [sp, #48]
   17614:	add	x29, sp, #0x30
   17618:	stur	x0, [x29, #-8]
   1761c:	stur	w1, [x29, #-12]
   17620:	ldur	x0, [x29, #-8]
   17624:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   17628:	stur	w0, [x29, #-16]
   1762c:	ldur	x8, [x29, #-8]
   17630:	ldr	w9, [x8, #96]
   17634:	ldur	w10, [x29, #-16]
   17638:	cmp	w9, w10
   1763c:	b.hi	17650 <lzma_mf_is_supported@@XZ_5.0+0x176c>  // b.pmore
   17640:	ldur	x8, [x29, #-8]
   17644:	ldr	w9, [x8, #96]
   17648:	stur	w9, [x29, #-16]
   1764c:	b	17678 <lzma_mf_is_supported@@XZ_5.0+0x1794>
   17650:	ldur	w8, [x29, #-16]
   17654:	cmp	w8, #0x2
   17658:	b.cc	1766c <lzma_mf_is_supported@@XZ_5.0+0x1788>  // b.lo, b.ul, b.last
   1765c:	ldur	x8, [x29, #-8]
   17660:	ldr	w9, [x8, #104]
   17664:	cmp	w9, #0x1
   17668:	b.ne	17678 <lzma_mf_is_supported@@XZ_5.0+0x1794>  // b.any
   1766c:	ldur	x0, [x29, #-8]
   17670:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   17674:	b	17720 <lzma_mf_is_supported@@XZ_5.0+0x183c>
   17678:	ldur	x0, [x29, #-8]
   1767c:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   17680:	str	x0, [sp, #24]
   17684:	ldur	x8, [x29, #-8]
   17688:	ldr	w9, [x8, #24]
   1768c:	ldur	x8, [x29, #-8]
   17690:	ldr	w10, [x8, #20]
   17694:	add	w9, w9, w10
   17698:	str	w9, [sp, #20]
   1769c:	ldr	x8, [sp, #24]
   176a0:	ldrb	w9, [x8]
   176a4:	ldr	x8, [sp, #24]
   176a8:	ldrb	w10, [x8, #1]
   176ac:	orr	w9, w9, w10, lsl #8
   176b0:	str	w9, [sp, #16]
   176b4:	ldur	x8, [x29, #-8]
   176b8:	ldr	x8, [x8, #64]
   176bc:	ldr	w9, [sp, #16]
   176c0:	mov	w11, w9
   176c4:	ldr	w9, [x8, x11, lsl #2]
   176c8:	str	w9, [sp, #12]
   176cc:	ldr	w9, [sp, #20]
   176d0:	ldur	x8, [x29, #-8]
   176d4:	ldr	x8, [x8, #64]
   176d8:	ldr	w10, [sp, #16]
   176dc:	mov	w11, w10
   176e0:	str	w9, [x8, x11, lsl #2]
   176e4:	ldur	w0, [x29, #-16]
   176e8:	ldr	w1, [sp, #20]
   176ec:	ldr	x2, [sp, #24]
   176f0:	ldr	w3, [sp, #12]
   176f4:	ldur	x8, [x29, #-8]
   176f8:	ldr	w4, [x8, #92]
   176fc:	ldur	x8, [x29, #-8]
   17700:	ldr	x5, [x8, #72]
   17704:	ldur	x8, [x29, #-8]
   17708:	ldr	w6, [x8, #80]
   1770c:	ldur	x8, [x29, #-8]
   17710:	ldr	w7, [x8, #84]
   17714:	bl	1773c <lzma_mf_is_supported@@XZ_5.0+0x1858>
   17718:	ldur	x0, [x29, #-8]
   1771c:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   17720:	ldur	w8, [x29, #-12]
   17724:	subs	w8, w8, #0x1
   17728:	stur	w8, [x29, #-12]
   1772c:	cbnz	w8, 17620 <lzma_mf_is_supported@@XZ_5.0+0x173c>
   17730:	ldp	x29, x30, [sp, #48]
   17734:	add	sp, sp, #0x40
   17738:	ret
   1773c:	sub	sp, sp, #0x90
   17740:	str	w0, [sp, #116]
   17744:	str	w1, [sp, #112]
   17748:	str	x2, [sp, #104]
   1774c:	str	w3, [sp, #100]
   17750:	str	w4, [sp, #96]
   17754:	str	x5, [sp, #88]
   17758:	str	w6, [sp, #84]
   1775c:	str	w7, [sp, #80]
   17760:	ldr	x8, [sp, #88]
   17764:	ldr	w9, [sp, #84]
   17768:	lsl	w9, w9, #1
   1776c:	mov	w10, w9
   17770:	ubfx	x10, x10, #0, #32
   17774:	mov	x11, #0x4                   	// #4
   17778:	mul	x10, x11, x10
   1777c:	add	x8, x8, x10
   17780:	add	x8, x8, #0x4
   17784:	str	x8, [sp, #72]
   17788:	ldr	x8, [sp, #88]
   1778c:	ldr	w9, [sp, #84]
   17790:	lsl	w9, w9, #1
   17794:	mov	w10, w9
   17798:	ubfx	x10, x10, #0, #32
   1779c:	mul	x10, x11, x10
   177a0:	add	x8, x8, x10
   177a4:	str	x8, [sp, #64]
   177a8:	str	wzr, [sp, #60]
   177ac:	str	wzr, [sp, #56]
   177b0:	ldr	w8, [sp, #112]
   177b4:	ldr	w9, [sp, #100]
   177b8:	subs	w8, w8, w9
   177bc:	str	w8, [sp, #52]
   177c0:	ldr	w8, [sp, #96]
   177c4:	subs	w9, w8, #0x1
   177c8:	str	w9, [sp, #96]
   177cc:	cbz	w8, 177e0 <lzma_mf_is_supported@@XZ_5.0+0x18fc>
   177d0:	ldr	w8, [sp, #52]
   177d4:	ldr	w9, [sp, #80]
   177d8:	cmp	w8, w9
   177dc:	b.cc	177f4 <lzma_mf_is_supported@@XZ_5.0+0x1910>  // b.lo, b.ul, b.last
   177e0:	ldr	x8, [sp, #72]
   177e4:	str	wzr, [x8]
   177e8:	ldr	x8, [sp, #64]
   177ec:	str	wzr, [x8]
   177f0:	b	17a10 <lzma_mf_is_supported@@XZ_5.0+0x1b2c>
   177f4:	ldr	x8, [sp, #88]
   177f8:	ldr	w9, [sp, #84]
   177fc:	ldr	w10, [sp, #52]
   17800:	subs	w9, w9, w10
   17804:	ldr	w10, [sp, #52]
   17808:	ldr	w11, [sp, #84]
   1780c:	cmp	w10, w11
   17810:	str	x8, [sp, #16]
   17814:	str	w9, [sp, #12]
   17818:	b.ls	17828 <lzma_mf_is_supported@@XZ_5.0+0x1944>  // b.plast
   1781c:	ldr	w8, [sp, #80]
   17820:	str	w8, [sp, #8]
   17824:	b	17830 <lzma_mf_is_supported@@XZ_5.0+0x194c>
   17828:	mov	w8, wzr
   1782c:	str	w8, [sp, #8]
   17830:	ldr	w8, [sp, #8]
   17834:	ldr	w9, [sp, #12]
   17838:	add	w8, w9, w8
   1783c:	lsl	w8, w8, #1
   17840:	mov	w10, w8
   17844:	ubfx	x10, x10, #0, #32
   17848:	mov	x11, #0x4                   	// #4
   1784c:	mul	x10, x11, x10
   17850:	ldr	x11, [sp, #16]
   17854:	add	x10, x11, x10
   17858:	str	x10, [sp, #40]
   1785c:	ldr	x10, [sp, #104]
   17860:	ldr	w8, [sp, #52]
   17864:	mov	w12, w8
   17868:	mov	x13, xzr
   1786c:	subs	x12, x13, x12
   17870:	add	x10, x10, x12
   17874:	str	x10, [sp, #32]
   17878:	ldr	w8, [sp, #60]
   1787c:	ldr	w14, [sp, #56]
   17880:	cmp	w8, w14
   17884:	b.cs	17894 <lzma_mf_is_supported@@XZ_5.0+0x19b0>  // b.hs, b.nlast
   17888:	ldr	w8, [sp, #60]
   1788c:	str	w8, [sp, #4]
   17890:	b	1789c <lzma_mf_is_supported@@XZ_5.0+0x19b8>
   17894:	ldr	w8, [sp, #56]
   17898:	str	w8, [sp, #4]
   1789c:	ldr	w8, [sp, #4]
   178a0:	str	w8, [sp, #28]
   178a4:	ldr	x9, [sp, #32]
   178a8:	ldr	w8, [sp, #28]
   178ac:	mov	w10, w8
   178b0:	ldrb	w8, [x9, x10]
   178b4:	ldr	x9, [sp, #104]
   178b8:	ldr	w11, [sp, #28]
   178bc:	mov	w10, w11
   178c0:	ldrb	w11, [x9, x10]
   178c4:	cmp	w8, w11
   178c8:	b.ne	1798c <lzma_mf_is_supported@@XZ_5.0+0x1aa8>  // b.any
   178cc:	ldr	x8, [sp, #32]
   178d0:	ldr	x9, [sp, #104]
   178d4:	ldr	w10, [sp, #28]
   178d8:	add	w10, w10, #0x1
   178dc:	ldr	w11, [sp, #116]
   178e0:	str	x8, [sp, #136]
   178e4:	str	x9, [sp, #128]
   178e8:	str	w10, [sp, #124]
   178ec:	str	w11, [sp, #120]
   178f0:	ldr	w8, [sp, #124]
   178f4:	ldr	w9, [sp, #120]
   178f8:	mov	w10, #0x0                   	// #0
   178fc:	cmp	w8, w9
   17900:	str	w10, [sp]
   17904:	b.cs	17934 <lzma_mf_is_supported@@XZ_5.0+0x1a50>  // b.hs, b.nlast
   17908:	ldr	x8, [sp, #136]
   1790c:	ldr	w9, [sp, #124]
   17910:	mov	w10, w9
   17914:	ldrb	w9, [x8, x10]
   17918:	ldr	x8, [sp, #128]
   1791c:	ldr	w11, [sp, #124]
   17920:	mov	w10, w11
   17924:	ldrb	w11, [x8, x10]
   17928:	cmp	w9, w11
   1792c:	cset	w9, eq  // eq = none
   17930:	str	w9, [sp]
   17934:	ldr	w8, [sp]
   17938:	tbnz	w8, #0, 17940 <lzma_mf_is_supported@@XZ_5.0+0x1a5c>
   1793c:	b	17950 <lzma_mf_is_supported@@XZ_5.0+0x1a6c>
   17940:	ldr	w8, [sp, #124]
   17944:	add	w8, w8, #0x1
   17948:	str	w8, [sp, #124]
   1794c:	b	178f0 <lzma_mf_is_supported@@XZ_5.0+0x1a0c>
   17950:	ldr	w8, [sp, #124]
   17954:	str	w8, [sp, #28]
   17958:	ldr	w8, [sp, #28]
   1795c:	ldr	w9, [sp, #116]
   17960:	cmp	w8, w9
   17964:	b.ne	1798c <lzma_mf_is_supported@@XZ_5.0+0x1aa8>  // b.any
   17968:	ldr	x8, [sp, #40]
   1796c:	ldr	w9, [x8]
   17970:	ldr	x8, [sp, #64]
   17974:	str	w9, [x8]
   17978:	ldr	x8, [sp, #40]
   1797c:	ldr	w9, [x8, #4]
   17980:	ldr	x8, [sp, #72]
   17984:	str	w9, [x8]
   17988:	b	17a10 <lzma_mf_is_supported@@XZ_5.0+0x1b2c>
   1798c:	ldr	x8, [sp, #32]
   17990:	ldr	w9, [sp, #28]
   17994:	mov	w10, w9
   17998:	ldrb	w9, [x8, x10]
   1799c:	ldr	x8, [sp, #104]
   179a0:	ldr	w11, [sp, #28]
   179a4:	mov	w10, w11
   179a8:	ldrb	w11, [x8, x10]
   179ac:	cmp	w9, w11
   179b0:	b.ge	179e4 <lzma_mf_is_supported@@XZ_5.0+0x1b00>  // b.tcont
   179b4:	ldr	w8, [sp, #100]
   179b8:	ldr	x9, [sp, #64]
   179bc:	str	w8, [x9]
   179c0:	ldr	x9, [sp, #40]
   179c4:	add	x9, x9, #0x4
   179c8:	str	x9, [sp, #64]
   179cc:	ldr	x9, [sp, #64]
   179d0:	ldr	w8, [x9]
   179d4:	str	w8, [sp, #100]
   179d8:	ldr	w8, [sp, #28]
   179dc:	str	w8, [sp, #56]
   179e0:	b	17a0c <lzma_mf_is_supported@@XZ_5.0+0x1b28>
   179e4:	ldr	w8, [sp, #100]
   179e8:	ldr	x9, [sp, #72]
   179ec:	str	w8, [x9]
   179f0:	ldr	x9, [sp, #40]
   179f4:	str	x9, [sp, #72]
   179f8:	ldr	x9, [sp, #72]
   179fc:	ldr	w8, [x9]
   17a00:	str	w8, [sp, #100]
   17a04:	ldr	w8, [sp, #28]
   17a08:	str	w8, [sp, #60]
   17a0c:	b	177b0 <lzma_mf_is_supported@@XZ_5.0+0x18cc>
   17a10:	add	sp, sp, #0x90
   17a14:	ret
   17a18:	sub	sp, sp, #0x90
   17a1c:	stp	x29, x30, [sp, #128]
   17a20:	add	x29, sp, #0x80
   17a24:	stur	x0, [x29, #-40]
   17a28:	stur	x1, [x29, #-48]
   17a2c:	ldur	x0, [x29, #-40]
   17a30:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   17a34:	stur	w0, [x29, #-52]
   17a38:	ldur	x8, [x29, #-40]
   17a3c:	ldr	w9, [x8, #96]
   17a40:	ldur	w10, [x29, #-52]
   17a44:	cmp	w9, w10
   17a48:	b.hi	17a5c <lzma_mf_is_supported@@XZ_5.0+0x1b78>  // b.pmore
   17a4c:	ldur	x8, [x29, #-40]
   17a50:	ldr	w9, [x8, #96]
   17a54:	stur	w9, [x29, #-52]
   17a58:	b	17a88 <lzma_mf_is_supported@@XZ_5.0+0x1ba4>
   17a5c:	ldur	w8, [x29, #-52]
   17a60:	cmp	w8, #0x3
   17a64:	b.cc	17a78 <lzma_mf_is_supported@@XZ_5.0+0x1b94>  // b.lo, b.ul, b.last
   17a68:	ldur	x8, [x29, #-40]
   17a6c:	ldr	w9, [x8, #104]
   17a70:	cmp	w9, #0x1
   17a74:	b.ne	17a88 <lzma_mf_is_supported@@XZ_5.0+0x1ba4>  // b.any
   17a78:	ldur	x0, [x29, #-40]
   17a7c:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   17a80:	stur	wzr, [x29, #-28]
   17a84:	b	17d4c <lzma_mf_is_supported@@XZ_5.0+0x1e68>
   17a88:	ldur	x0, [x29, #-40]
   17a8c:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   17a90:	str	x0, [sp, #64]
   17a94:	ldur	x8, [x29, #-40]
   17a98:	ldr	w9, [x8, #24]
   17a9c:	ldur	x8, [x29, #-40]
   17aa0:	ldr	w10, [x8, #20]
   17aa4:	add	w9, w9, w10
   17aa8:	str	w9, [sp, #60]
   17aac:	str	wzr, [sp, #56]
   17ab0:	ldr	x8, [sp, #64]
   17ab4:	ldrb	w9, [x8]
   17ab8:	mov	w8, w9
   17abc:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   17ac0:	ldr	x11, [x11, #3952]
   17ac4:	ldr	w9, [x11, x8, lsl #2]
   17ac8:	ldr	x8, [sp, #64]
   17acc:	ldrb	w10, [x8, #1]
   17ad0:	eor	w9, w9, w10
   17ad4:	str	w9, [sp, #52]
   17ad8:	ldr	w9, [sp, #52]
   17adc:	and	w9, w9, #0x3ff
   17ae0:	str	w9, [sp, #48]
   17ae4:	ldr	w9, [sp, #52]
   17ae8:	ldr	x8, [sp, #64]
   17aec:	ldrb	w10, [x8, #2]
   17af0:	eor	w9, w9, w10, lsl #8
   17af4:	ldur	x8, [x29, #-40]
   17af8:	ldr	w10, [x8, #88]
   17afc:	and	w9, w9, w10
   17b00:	str	w9, [sp, #44]
   17b04:	ldr	w9, [sp, #60]
   17b08:	ldur	x8, [x29, #-40]
   17b0c:	ldr	x8, [x8, #64]
   17b10:	ldr	w10, [sp, #48]
   17b14:	mov	w11, w10
   17b18:	ldr	w10, [x8, x11, lsl #2]
   17b1c:	subs	w9, w9, w10
   17b20:	str	w9, [sp, #40]
   17b24:	ldur	x8, [x29, #-40]
   17b28:	ldr	x8, [x8, #64]
   17b2c:	ldr	w9, [sp, #44]
   17b30:	add	w9, w9, #0x400
   17b34:	ldr	w9, [x8, w9, uxtw #2]
   17b38:	str	w9, [sp, #36]
   17b3c:	ldr	w9, [sp, #60]
   17b40:	ldur	x8, [x29, #-40]
   17b44:	ldr	x8, [x8, #64]
   17b48:	ldr	w10, [sp, #48]
   17b4c:	mov	w11, w10
   17b50:	str	w9, [x8, x11, lsl #2]
   17b54:	ldr	w9, [sp, #60]
   17b58:	ldur	x8, [x29, #-40]
   17b5c:	ldr	x8, [x8, #64]
   17b60:	ldr	w10, [sp, #44]
   17b64:	add	w10, w10, #0x400
   17b68:	str	w9, [x8, w10, uxtw #2]
   17b6c:	mov	w9, #0x2                   	// #2
   17b70:	str	w9, [sp, #32]
   17b74:	ldr	w9, [sp, #40]
   17b78:	ldur	x8, [x29, #-40]
   17b7c:	ldr	w10, [x8, #84]
   17b80:	cmp	w9, w10
   17b84:	b.cs	17cc8 <lzma_mf_is_supported@@XZ_5.0+0x1de4>  // b.hs, b.nlast
   17b88:	ldr	x8, [sp, #64]
   17b8c:	ldr	w9, [sp, #40]
   17b90:	mov	w10, w9
   17b94:	mov	x11, xzr
   17b98:	subs	x10, x11, x10
   17b9c:	ldrb	w9, [x8, x10]
   17ba0:	ldr	x8, [sp, #64]
   17ba4:	ldrb	w12, [x8]
   17ba8:	cmp	w9, w12
   17bac:	b.ne	17cc8 <lzma_mf_is_supported@@XZ_5.0+0x1de4>  // b.any
   17bb0:	ldr	x8, [sp, #64]
   17bb4:	ldr	x9, [sp, #64]
   17bb8:	ldr	w10, [sp, #40]
   17bbc:	mov	w11, w10
   17bc0:	mov	x12, xzr
   17bc4:	subs	x11, x12, x11
   17bc8:	add	x9, x9, x11
   17bcc:	ldr	w10, [sp, #32]
   17bd0:	ldur	w13, [x29, #-52]
   17bd4:	stur	x8, [x29, #-8]
   17bd8:	stur	x9, [x29, #-16]
   17bdc:	stur	w10, [x29, #-20]
   17be0:	stur	w13, [x29, #-24]
   17be4:	ldur	w8, [x29, #-20]
   17be8:	ldur	w9, [x29, #-24]
   17bec:	mov	w10, #0x0                   	// #0
   17bf0:	cmp	w8, w9
   17bf4:	str	w10, [sp, #28]
   17bf8:	b.cs	17c28 <lzma_mf_is_supported@@XZ_5.0+0x1d44>  // b.hs, b.nlast
   17bfc:	ldur	x8, [x29, #-8]
   17c00:	ldur	w9, [x29, #-20]
   17c04:	mov	w10, w9
   17c08:	ldrb	w9, [x8, x10]
   17c0c:	ldur	x8, [x29, #-16]
   17c10:	ldur	w11, [x29, #-20]
   17c14:	mov	w10, w11
   17c18:	ldrb	w11, [x8, x10]
   17c1c:	cmp	w9, w11
   17c20:	cset	w9, eq  // eq = none
   17c24:	str	w9, [sp, #28]
   17c28:	ldr	w8, [sp, #28]
   17c2c:	tbnz	w8, #0, 17c34 <lzma_mf_is_supported@@XZ_5.0+0x1d50>
   17c30:	b	17c44 <lzma_mf_is_supported@@XZ_5.0+0x1d60>
   17c34:	ldur	w8, [x29, #-20]
   17c38:	add	w8, w8, #0x1
   17c3c:	stur	w8, [x29, #-20]
   17c40:	b	17be4 <lzma_mf_is_supported@@XZ_5.0+0x1d00>
   17c44:	ldur	w8, [x29, #-20]
   17c48:	str	w8, [sp, #32]
   17c4c:	ldr	w8, [sp, #32]
   17c50:	ldur	x9, [x29, #-48]
   17c54:	str	w8, [x9]
   17c58:	ldr	w8, [sp, #40]
   17c5c:	mov	w10, #0x1                   	// #1
   17c60:	subs	w8, w8, #0x1
   17c64:	ldur	x9, [x29, #-48]
   17c68:	str	w8, [x9, #4]
   17c6c:	str	w10, [sp, #56]
   17c70:	ldr	w8, [sp, #32]
   17c74:	ldur	w10, [x29, #-52]
   17c78:	cmp	w8, w10
   17c7c:	b.ne	17cc8 <lzma_mf_is_supported@@XZ_5.0+0x1de4>  // b.any
   17c80:	ldur	w0, [x29, #-52]
   17c84:	ldr	w1, [sp, #60]
   17c88:	ldr	x2, [sp, #64]
   17c8c:	ldr	w3, [sp, #36]
   17c90:	ldur	x8, [x29, #-40]
   17c94:	ldr	w4, [x8, #92]
   17c98:	ldur	x8, [x29, #-40]
   17c9c:	ldr	x5, [x8, #72]
   17ca0:	ldur	x8, [x29, #-40]
   17ca4:	ldr	w6, [x8, #80]
   17ca8:	ldur	x8, [x29, #-40]
   17cac:	ldr	w7, [x8, #84]
   17cb0:	bl	1773c <lzma_mf_is_supported@@XZ_5.0+0x1858>
   17cb4:	ldur	x0, [x29, #-40]
   17cb8:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   17cbc:	mov	w8, #0x1                   	// #1
   17cc0:	stur	w8, [x29, #-28]
   17cc4:	b	17d4c <lzma_mf_is_supported@@XZ_5.0+0x1e68>
   17cc8:	ldur	w0, [x29, #-52]
   17ccc:	ldr	w1, [sp, #60]
   17cd0:	ldr	x2, [sp, #64]
   17cd4:	ldr	w3, [sp, #36]
   17cd8:	ldur	x8, [x29, #-40]
   17cdc:	ldr	w4, [x8, #92]
   17ce0:	ldur	x8, [x29, #-40]
   17ce4:	ldr	x5, [x8, #72]
   17ce8:	ldur	x8, [x29, #-40]
   17cec:	ldr	w6, [x8, #80]
   17cf0:	ldur	x8, [x29, #-40]
   17cf4:	ldr	w7, [x8, #84]
   17cf8:	ldur	x8, [x29, #-48]
   17cfc:	ldr	w9, [sp, #56]
   17d00:	mov	w10, w9
   17d04:	mov	x11, #0x8                   	// #8
   17d08:	mul	x10, x11, x10
   17d0c:	add	x8, x8, x10
   17d10:	ldr	w9, [sp, #32]
   17d14:	mov	x10, sp
   17d18:	str	x8, [x10]
   17d1c:	mov	x8, sp
   17d20:	str	w9, [x8, #8]
   17d24:	bl	172bc <lzma_mf_is_supported@@XZ_5.0+0x13d8>
   17d28:	ldur	x8, [x29, #-48]
   17d2c:	subs	x8, x0, x8
   17d30:	mov	x10, #0x8                   	// #8
   17d34:	sdiv	x8, x8, x10
   17d38:	str	w8, [sp, #56]
   17d3c:	ldur	x0, [x29, #-40]
   17d40:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   17d44:	ldr	w8, [sp, #56]
   17d48:	stur	w8, [x29, #-28]
   17d4c:	ldur	w0, [x29, #-28]
   17d50:	ldp	x29, x30, [sp, #128]
   17d54:	add	sp, sp, #0x90
   17d58:	ret
   17d5c:	sub	sp, sp, #0x40
   17d60:	stp	x29, x30, [sp, #48]
   17d64:	add	x29, sp, #0x30
   17d68:	stur	x0, [x29, #-8]
   17d6c:	stur	w1, [x29, #-12]
   17d70:	ldur	x0, [x29, #-8]
   17d74:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   17d78:	stur	w0, [x29, #-16]
   17d7c:	ldur	x8, [x29, #-8]
   17d80:	ldr	w9, [x8, #96]
   17d84:	ldur	w10, [x29, #-16]
   17d88:	cmp	w9, w10
   17d8c:	b.hi	17da0 <lzma_mf_is_supported@@XZ_5.0+0x1ebc>  // b.pmore
   17d90:	ldur	x8, [x29, #-8]
   17d94:	ldr	w9, [x8, #96]
   17d98:	stur	w9, [x29, #-16]
   17d9c:	b	17dc8 <lzma_mf_is_supported@@XZ_5.0+0x1ee4>
   17da0:	ldur	w8, [x29, #-16]
   17da4:	cmp	w8, #0x3
   17da8:	b.cc	17dbc <lzma_mf_is_supported@@XZ_5.0+0x1ed8>  // b.lo, b.ul, b.last
   17dac:	ldur	x8, [x29, #-8]
   17db0:	ldr	w9, [x8, #104]
   17db4:	cmp	w9, #0x1
   17db8:	b.ne	17dc8 <lzma_mf_is_supported@@XZ_5.0+0x1ee4>  // b.any
   17dbc:	ldur	x0, [x29, #-8]
   17dc0:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   17dc4:	b	17ec4 <lzma_mf_is_supported@@XZ_5.0+0x1fe0>
   17dc8:	ldur	x0, [x29, #-8]
   17dcc:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   17dd0:	str	x0, [sp, #24]
   17dd4:	ldur	x8, [x29, #-8]
   17dd8:	ldr	w9, [x8, #24]
   17ddc:	ldur	x8, [x29, #-8]
   17de0:	ldr	w10, [x8, #20]
   17de4:	add	w9, w9, w10
   17de8:	str	w9, [sp, #20]
   17dec:	ldr	x8, [sp, #24]
   17df0:	ldrb	w9, [x8]
   17df4:	mov	w8, w9
   17df8:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   17dfc:	ldr	x11, [x11, #3952]
   17e00:	ldr	w9, [x11, x8, lsl #2]
   17e04:	ldr	x8, [sp, #24]
   17e08:	ldrb	w10, [x8, #1]
   17e0c:	eor	w9, w9, w10
   17e10:	str	w9, [sp, #16]
   17e14:	ldr	w9, [sp, #16]
   17e18:	and	w9, w9, #0x3ff
   17e1c:	str	w9, [sp, #12]
   17e20:	ldr	w9, [sp, #16]
   17e24:	ldr	x8, [sp, #24]
   17e28:	ldrb	w10, [x8, #2]
   17e2c:	eor	w9, w9, w10, lsl #8
   17e30:	ldur	x8, [x29, #-8]
   17e34:	ldr	w10, [x8, #88]
   17e38:	and	w9, w9, w10
   17e3c:	str	w9, [sp, #8]
   17e40:	ldur	x8, [x29, #-8]
   17e44:	ldr	x8, [x8, #64]
   17e48:	ldr	w9, [sp, #8]
   17e4c:	add	w9, w9, #0x400
   17e50:	ldr	w9, [x8, w9, uxtw #2]
   17e54:	str	w9, [sp, #4]
   17e58:	ldr	w9, [sp, #20]
   17e5c:	ldur	x8, [x29, #-8]
   17e60:	ldr	x8, [x8, #64]
   17e64:	ldr	w10, [sp, #12]
   17e68:	mov	w11, w10
   17e6c:	str	w9, [x8, x11, lsl #2]
   17e70:	ldr	w9, [sp, #20]
   17e74:	ldur	x8, [x29, #-8]
   17e78:	ldr	x8, [x8, #64]
   17e7c:	ldr	w10, [sp, #8]
   17e80:	add	w10, w10, #0x400
   17e84:	str	w9, [x8, w10, uxtw #2]
   17e88:	ldur	w0, [x29, #-16]
   17e8c:	ldr	w1, [sp, #20]
   17e90:	ldr	x2, [sp, #24]
   17e94:	ldr	w3, [sp, #4]
   17e98:	ldur	x8, [x29, #-8]
   17e9c:	ldr	w4, [x8, #92]
   17ea0:	ldur	x8, [x29, #-8]
   17ea4:	ldr	x5, [x8, #72]
   17ea8:	ldur	x8, [x29, #-8]
   17eac:	ldr	w6, [x8, #80]
   17eb0:	ldur	x8, [x29, #-8]
   17eb4:	ldr	w7, [x8, #84]
   17eb8:	bl	1773c <lzma_mf_is_supported@@XZ_5.0+0x1858>
   17ebc:	ldur	x0, [x29, #-8]
   17ec0:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   17ec4:	ldur	w8, [x29, #-12]
   17ec8:	subs	w8, w8, #0x1
   17ecc:	stur	w8, [x29, #-12]
   17ed0:	cbnz	w8, 17d70 <lzma_mf_is_supported@@XZ_5.0+0x1e8c>
   17ed4:	ldp	x29, x30, [sp, #48]
   17ed8:	add	sp, sp, #0x40
   17edc:	ret
   17ee0:	sub	sp, sp, #0x90
   17ee4:	stp	x29, x30, [sp, #128]
   17ee8:	add	x29, sp, #0x80
   17eec:	stur	x0, [x29, #-40]
   17ef0:	stur	x1, [x29, #-48]
   17ef4:	ldur	x0, [x29, #-40]
   17ef8:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   17efc:	stur	w0, [x29, #-52]
   17f00:	ldur	x8, [x29, #-40]
   17f04:	ldr	w9, [x8, #96]
   17f08:	ldur	w10, [x29, #-52]
   17f0c:	cmp	w9, w10
   17f10:	b.hi	17f24 <lzma_mf_is_supported@@XZ_5.0+0x2040>  // b.pmore
   17f14:	ldur	x8, [x29, #-40]
   17f18:	ldr	w9, [x8, #96]
   17f1c:	stur	w9, [x29, #-52]
   17f20:	b	17f50 <lzma_mf_is_supported@@XZ_5.0+0x206c>
   17f24:	ldur	w8, [x29, #-52]
   17f28:	cmp	w8, #0x4
   17f2c:	b.cc	17f40 <lzma_mf_is_supported@@XZ_5.0+0x205c>  // b.lo, b.ul, b.last
   17f30:	ldur	x8, [x29, #-40]
   17f34:	ldr	w9, [x8, #104]
   17f38:	cmp	w9, #0x1
   17f3c:	b.ne	17f50 <lzma_mf_is_supported@@XZ_5.0+0x206c>  // b.any
   17f40:	ldur	x0, [x29, #-40]
   17f44:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   17f48:	stur	wzr, [x29, #-28]
   17f4c:	b	18350 <lzma_mf_is_supported@@XZ_5.0+0x246c>
   17f50:	ldur	x0, [x29, #-40]
   17f54:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   17f58:	str	x0, [sp, #64]
   17f5c:	ldur	x8, [x29, #-40]
   17f60:	ldr	w9, [x8, #24]
   17f64:	ldur	x8, [x29, #-40]
   17f68:	ldr	w10, [x8, #20]
   17f6c:	add	w9, w9, w10
   17f70:	str	w9, [sp, #60]
   17f74:	str	wzr, [sp, #56]
   17f78:	ldr	x8, [sp, #64]
   17f7c:	ldrb	w9, [x8]
   17f80:	mov	w8, w9
   17f84:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   17f88:	ldr	x11, [x11, #3952]
   17f8c:	ldr	w9, [x11, x8, lsl #2]
   17f90:	ldr	x8, [sp, #64]
   17f94:	ldrb	w10, [x8, #1]
   17f98:	eor	w9, w9, w10
   17f9c:	str	w9, [sp, #52]
   17fa0:	ldr	w9, [sp, #52]
   17fa4:	and	w9, w9, #0x3ff
   17fa8:	str	w9, [sp, #48]
   17fac:	ldr	w9, [sp, #52]
   17fb0:	ldr	x8, [sp, #64]
   17fb4:	ldrb	w10, [x8, #2]
   17fb8:	eor	w9, w9, w10, lsl #8
   17fbc:	and	w9, w9, #0xffff
   17fc0:	str	w9, [sp, #44]
   17fc4:	ldr	w9, [sp, #52]
   17fc8:	ldr	x8, [sp, #64]
   17fcc:	ldrb	w10, [x8, #2]
   17fd0:	eor	w9, w9, w10, lsl #8
   17fd4:	ldr	x8, [sp, #64]
   17fd8:	ldrb	w10, [x8, #3]
   17fdc:	mov	w8, w10
   17fe0:	ldr	w10, [x11, x8, lsl #2]
   17fe4:	eor	w9, w9, w10, lsl #5
   17fe8:	ldur	x8, [x29, #-40]
   17fec:	ldr	w10, [x8, #88]
   17ff0:	and	w9, w9, w10
   17ff4:	str	w9, [sp, #40]
   17ff8:	ldr	w9, [sp, #60]
   17ffc:	ldur	x8, [x29, #-40]
   18000:	ldr	x8, [x8, #64]
   18004:	ldr	w10, [sp, #48]
   18008:	mov	w11, w10
   1800c:	ldr	w10, [x8, x11, lsl #2]
   18010:	subs	w9, w9, w10
   18014:	str	w9, [sp, #36]
   18018:	ldr	w9, [sp, #60]
   1801c:	ldur	x8, [x29, #-40]
   18020:	ldr	x8, [x8, #64]
   18024:	ldr	w10, [sp, #44]
   18028:	add	w10, w10, #0x400
   1802c:	ldr	w10, [x8, w10, uxtw #2]
   18030:	subs	w9, w9, w10
   18034:	str	w9, [sp, #32]
   18038:	ldur	x8, [x29, #-40]
   1803c:	ldr	x8, [x8, #64]
   18040:	ldr	w9, [sp, #40]
   18044:	mov	w10, #0x400                 	// #1024
   18048:	movk	w10, #0x1, lsl #16
   1804c:	add	w9, w10, w9
   18050:	ldr	w9, [x8, w9, uxtw #2]
   18054:	str	w9, [sp, #28]
   18058:	ldr	w9, [sp, #60]
   1805c:	ldur	x8, [x29, #-40]
   18060:	ldr	x8, [x8, #64]
   18064:	ldr	w12, [sp, #48]
   18068:	mov	w11, w12
   1806c:	str	w9, [x8, x11, lsl #2]
   18070:	ldr	w9, [sp, #60]
   18074:	ldur	x8, [x29, #-40]
   18078:	ldr	x8, [x8, #64]
   1807c:	ldr	w12, [sp, #44]
   18080:	add	w12, w12, #0x400
   18084:	str	w9, [x8, w12, uxtw #2]
   18088:	ldr	w9, [sp, #60]
   1808c:	ldur	x8, [x29, #-40]
   18090:	ldr	x8, [x8, #64]
   18094:	ldr	w12, [sp, #40]
   18098:	add	w10, w10, w12
   1809c:	str	w9, [x8, w10, uxtw #2]
   180a0:	mov	w9, #0x1                   	// #1
   180a4:	str	w9, [sp, #24]
   180a8:	ldr	w9, [sp, #36]
   180ac:	ldur	x8, [x29, #-40]
   180b0:	ldr	w10, [x8, #84]
   180b4:	cmp	w9, w10
   180b8:	b.cs	1810c <lzma_mf_is_supported@@XZ_5.0+0x2228>  // b.hs, b.nlast
   180bc:	ldr	x8, [sp, #64]
   180c0:	ldr	w9, [sp, #36]
   180c4:	mov	w10, w9
   180c8:	mov	x11, xzr
   180cc:	subs	x10, x11, x10
   180d0:	ldrb	w9, [x8, x10]
   180d4:	ldr	x8, [sp, #64]
   180d8:	ldrb	w12, [x8]
   180dc:	cmp	w9, w12
   180e0:	b.ne	1810c <lzma_mf_is_supported@@XZ_5.0+0x2228>  // b.any
   180e4:	mov	w8, #0x2                   	// #2
   180e8:	str	w8, [sp, #24]
   180ec:	ldur	x9, [x29, #-48]
   180f0:	str	w8, [x9]
   180f4:	ldr	w8, [sp, #36]
   180f8:	mov	w10, #0x1                   	// #1
   180fc:	subs	w8, w8, #0x1
   18100:	ldur	x9, [x29, #-48]
   18104:	str	w8, [x9, #4]
   18108:	str	w10, [sp, #56]
   1810c:	ldr	w8, [sp, #36]
   18110:	ldr	w9, [sp, #32]
   18114:	cmp	w8, w9
   18118:	b.eq	18198 <lzma_mf_is_supported@@XZ_5.0+0x22b4>  // b.none
   1811c:	ldr	w8, [sp, #32]
   18120:	ldur	x9, [x29, #-40]
   18124:	ldr	w10, [x9, #84]
   18128:	cmp	w8, w10
   1812c:	b.cs	18198 <lzma_mf_is_supported@@XZ_5.0+0x22b4>  // b.hs, b.nlast
   18130:	ldr	x8, [sp, #64]
   18134:	ldr	w9, [sp, #32]
   18138:	mov	w10, w9
   1813c:	mov	x11, xzr
   18140:	subs	x10, x11, x10
   18144:	ldrb	w9, [x8, x10]
   18148:	ldr	x8, [sp, #64]
   1814c:	ldrb	w12, [x8]
   18150:	cmp	w9, w12
   18154:	b.ne	18198 <lzma_mf_is_supported@@XZ_5.0+0x22b4>  // b.any
   18158:	mov	w8, #0x3                   	// #3
   1815c:	str	w8, [sp, #24]
   18160:	ldr	w8, [sp, #32]
   18164:	subs	w8, w8, #0x1
   18168:	ldur	x9, [x29, #-48]
   1816c:	ldr	w10, [sp, #56]
   18170:	mov	w11, w10
   18174:	mov	w10, w11
   18178:	add	w10, w10, #0x1
   1817c:	str	w10, [sp, #56]
   18180:	mov	x12, #0x8                   	// #8
   18184:	mul	x11, x12, x11
   18188:	add	x9, x9, x11
   1818c:	str	w8, [x9, #4]
   18190:	ldr	w8, [sp, #32]
   18194:	str	w8, [sp, #36]
   18198:	ldr	w8, [sp, #56]
   1819c:	cbz	w8, 182b8 <lzma_mf_is_supported@@XZ_5.0+0x23d4>
   181a0:	ldr	x8, [sp, #64]
   181a4:	ldr	x9, [sp, #64]
   181a8:	ldr	w10, [sp, #36]
   181ac:	mov	w11, w10
   181b0:	mov	x12, xzr
   181b4:	subs	x11, x12, x11
   181b8:	add	x9, x9, x11
   181bc:	ldr	w10, [sp, #24]
   181c0:	ldur	w13, [x29, #-52]
   181c4:	stur	x8, [x29, #-8]
   181c8:	stur	x9, [x29, #-16]
   181cc:	stur	w10, [x29, #-20]
   181d0:	stur	w13, [x29, #-24]
   181d4:	ldur	w8, [x29, #-20]
   181d8:	ldur	w9, [x29, #-24]
   181dc:	mov	w10, #0x0                   	// #0
   181e0:	cmp	w8, w9
   181e4:	str	w10, [sp, #20]
   181e8:	b.cs	18218 <lzma_mf_is_supported@@XZ_5.0+0x2334>  // b.hs, b.nlast
   181ec:	ldur	x8, [x29, #-8]
   181f0:	ldur	w9, [x29, #-20]
   181f4:	mov	w10, w9
   181f8:	ldrb	w9, [x8, x10]
   181fc:	ldur	x8, [x29, #-16]
   18200:	ldur	w11, [x29, #-20]
   18204:	mov	w10, w11
   18208:	ldrb	w11, [x8, x10]
   1820c:	cmp	w9, w11
   18210:	cset	w9, eq  // eq = none
   18214:	str	w9, [sp, #20]
   18218:	ldr	w8, [sp, #20]
   1821c:	tbnz	w8, #0, 18224 <lzma_mf_is_supported@@XZ_5.0+0x2340>
   18220:	b	18234 <lzma_mf_is_supported@@XZ_5.0+0x2350>
   18224:	ldur	w8, [x29, #-20]
   18228:	add	w8, w8, #0x1
   1822c:	stur	w8, [x29, #-20]
   18230:	b	181d4 <lzma_mf_is_supported@@XZ_5.0+0x22f0>
   18234:	ldur	w8, [x29, #-20]
   18238:	str	w8, [sp, #24]
   1823c:	ldr	w8, [sp, #24]
   18240:	ldur	x9, [x29, #-48]
   18244:	ldr	w10, [sp, #56]
   18248:	subs	w10, w10, #0x1
   1824c:	mov	w11, w10
   18250:	ubfx	x11, x11, #0, #32
   18254:	mov	x12, #0x8                   	// #8
   18258:	mul	x11, x12, x11
   1825c:	str	w8, [x9, x11]
   18260:	ldr	w8, [sp, #24]
   18264:	ldur	w10, [x29, #-52]
   18268:	cmp	w8, w10
   1826c:	b.ne	182b8 <lzma_mf_is_supported@@XZ_5.0+0x23d4>  // b.any
   18270:	ldur	w0, [x29, #-52]
   18274:	ldr	w1, [sp, #60]
   18278:	ldr	x2, [sp, #64]
   1827c:	ldr	w3, [sp, #28]
   18280:	ldur	x8, [x29, #-40]
   18284:	ldr	w4, [x8, #92]
   18288:	ldur	x8, [x29, #-40]
   1828c:	ldr	x5, [x8, #72]
   18290:	ldur	x8, [x29, #-40]
   18294:	ldr	w6, [x8, #80]
   18298:	ldur	x8, [x29, #-40]
   1829c:	ldr	w7, [x8, #84]
   182a0:	bl	1773c <lzma_mf_is_supported@@XZ_5.0+0x1858>
   182a4:	ldur	x0, [x29, #-40]
   182a8:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   182ac:	ldr	w8, [sp, #56]
   182b0:	stur	w8, [x29, #-28]
   182b4:	b	18350 <lzma_mf_is_supported@@XZ_5.0+0x246c>
   182b8:	ldr	w8, [sp, #24]
   182bc:	cmp	w8, #0x3
   182c0:	b.cs	182cc <lzma_mf_is_supported@@XZ_5.0+0x23e8>  // b.hs, b.nlast
   182c4:	mov	w8, #0x3                   	// #3
   182c8:	str	w8, [sp, #24]
   182cc:	ldur	w0, [x29, #-52]
   182d0:	ldr	w1, [sp, #60]
   182d4:	ldr	x2, [sp, #64]
   182d8:	ldr	w3, [sp, #28]
   182dc:	ldur	x8, [x29, #-40]
   182e0:	ldr	w4, [x8, #92]
   182e4:	ldur	x8, [x29, #-40]
   182e8:	ldr	x5, [x8, #72]
   182ec:	ldur	x8, [x29, #-40]
   182f0:	ldr	w6, [x8, #80]
   182f4:	ldur	x8, [x29, #-40]
   182f8:	ldr	w7, [x8, #84]
   182fc:	ldur	x8, [x29, #-48]
   18300:	ldr	w9, [sp, #56]
   18304:	mov	w10, w9
   18308:	mov	x11, #0x8                   	// #8
   1830c:	mul	x10, x11, x10
   18310:	add	x8, x8, x10
   18314:	ldr	w9, [sp, #24]
   18318:	mov	x10, sp
   1831c:	str	x8, [x10]
   18320:	mov	x8, sp
   18324:	str	w9, [x8, #8]
   18328:	bl	172bc <lzma_mf_is_supported@@XZ_5.0+0x13d8>
   1832c:	ldur	x8, [x29, #-48]
   18330:	subs	x8, x0, x8
   18334:	mov	x10, #0x8                   	// #8
   18338:	sdiv	x8, x8, x10
   1833c:	str	w8, [sp, #56]
   18340:	ldur	x0, [x29, #-40]
   18344:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   18348:	ldr	w8, [sp, #56]
   1834c:	stur	w8, [x29, #-28]
   18350:	ldur	w0, [x29, #-28]
   18354:	ldp	x29, x30, [sp, #128]
   18358:	add	sp, sp, #0x90
   1835c:	ret
   18360:	sub	sp, sp, #0x40
   18364:	stp	x29, x30, [sp, #48]
   18368:	add	x29, sp, #0x30
   1836c:	stur	x0, [x29, #-8]
   18370:	stur	w1, [x29, #-12]
   18374:	ldur	x0, [x29, #-8]
   18378:	bl	163f8 <lzma_mf_is_supported@@XZ_5.0+0x514>
   1837c:	stur	w0, [x29, #-16]
   18380:	ldur	x8, [x29, #-8]
   18384:	ldr	w9, [x8, #96]
   18388:	ldur	w10, [x29, #-16]
   1838c:	cmp	w9, w10
   18390:	b.hi	183a4 <lzma_mf_is_supported@@XZ_5.0+0x24c0>  // b.pmore
   18394:	ldur	x8, [x29, #-8]
   18398:	ldr	w9, [x8, #96]
   1839c:	stur	w9, [x29, #-16]
   183a0:	b	183cc <lzma_mf_is_supported@@XZ_5.0+0x24e8>
   183a4:	ldur	w8, [x29, #-16]
   183a8:	cmp	w8, #0x4
   183ac:	b.cc	183c0 <lzma_mf_is_supported@@XZ_5.0+0x24dc>  // b.lo, b.ul, b.last
   183b0:	ldur	x8, [x29, #-8]
   183b4:	ldr	w9, [x8, #104]
   183b8:	cmp	w9, #0x1
   183bc:	b.ne	183cc <lzma_mf_is_supported@@XZ_5.0+0x24e8>  // b.any
   183c0:	ldur	x0, [x29, #-8]
   183c4:	bl	16760 <lzma_mf_is_supported@@XZ_5.0+0x87c>
   183c8:	b	18514 <lzma_mf_is_supported@@XZ_5.0+0x2630>
   183cc:	ldur	x0, [x29, #-8]
   183d0:	bl	1641c <lzma_mf_is_supported@@XZ_5.0+0x538>
   183d4:	str	x0, [sp, #24]
   183d8:	ldur	x8, [x29, #-8]
   183dc:	ldr	w9, [x8, #24]
   183e0:	ldur	x8, [x29, #-8]
   183e4:	ldr	w10, [x8, #20]
   183e8:	add	w9, w9, w10
   183ec:	str	w9, [sp, #20]
   183f0:	ldr	x8, [sp, #24]
   183f4:	ldrb	w9, [x8]
   183f8:	mov	w8, w9
   183fc:	adrp	x11, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   18400:	ldr	x11, [x11, #3952]
   18404:	ldr	w9, [x11, x8, lsl #2]
   18408:	ldr	x8, [sp, #24]
   1840c:	ldrb	w10, [x8, #1]
   18410:	eor	w9, w9, w10
   18414:	str	w9, [sp, #16]
   18418:	ldr	w9, [sp, #16]
   1841c:	and	w9, w9, #0x3ff
   18420:	str	w9, [sp, #12]
   18424:	ldr	w9, [sp, #16]
   18428:	ldr	x8, [sp, #24]
   1842c:	ldrb	w10, [x8, #2]
   18430:	eor	w9, w9, w10, lsl #8
   18434:	and	w9, w9, #0xffff
   18438:	str	w9, [sp, #8]
   1843c:	ldr	w9, [sp, #16]
   18440:	ldr	x8, [sp, #24]
   18444:	ldrb	w10, [x8, #2]
   18448:	eor	w9, w9, w10, lsl #8
   1844c:	ldr	x8, [sp, #24]
   18450:	ldrb	w10, [x8, #3]
   18454:	mov	w8, w10
   18458:	ldr	w10, [x11, x8, lsl #2]
   1845c:	eor	w9, w9, w10, lsl #5
   18460:	ldur	x8, [x29, #-8]
   18464:	ldr	w10, [x8, #88]
   18468:	and	w9, w9, w10
   1846c:	str	w9, [sp, #4]
   18470:	ldur	x8, [x29, #-8]
   18474:	ldr	x8, [x8, #64]
   18478:	ldr	w9, [sp, #4]
   1847c:	mov	w10, #0x400                 	// #1024
   18480:	movk	w10, #0x1, lsl #16
   18484:	add	w9, w10, w9
   18488:	ldr	w9, [x8, w9, uxtw #2]
   1848c:	str	w9, [sp]
   18490:	ldr	w9, [sp, #20]
   18494:	ldur	x8, [x29, #-8]
   18498:	ldr	x8, [x8, #64]
   1849c:	ldr	w12, [sp, #12]
   184a0:	mov	w11, w12
   184a4:	str	w9, [x8, x11, lsl #2]
   184a8:	ldr	w9, [sp, #20]
   184ac:	ldur	x8, [x29, #-8]
   184b0:	ldr	x8, [x8, #64]
   184b4:	ldr	w12, [sp, #8]
   184b8:	add	w12, w12, #0x400
   184bc:	str	w9, [x8, w12, uxtw #2]
   184c0:	ldr	w9, [sp, #20]
   184c4:	ldur	x8, [x29, #-8]
   184c8:	ldr	x8, [x8, #64]
   184cc:	ldr	w12, [sp, #4]
   184d0:	add	w10, w10, w12
   184d4:	str	w9, [x8, w10, uxtw #2]
   184d8:	ldur	w0, [x29, #-16]
   184dc:	ldr	w1, [sp, #20]
   184e0:	ldr	x2, [sp, #24]
   184e4:	ldr	w3, [sp]
   184e8:	ldur	x8, [x29, #-8]
   184ec:	ldr	w4, [x8, #92]
   184f0:	ldur	x8, [x29, #-8]
   184f4:	ldr	x5, [x8, #72]
   184f8:	ldur	x8, [x29, #-8]
   184fc:	ldr	w6, [x8, #80]
   18500:	ldur	x8, [x29, #-8]
   18504:	ldr	w7, [x8, #84]
   18508:	bl	1773c <lzma_mf_is_supported@@XZ_5.0+0x1858>
   1850c:	ldur	x0, [x29, #-8]
   18510:	bl	16790 <lzma_mf_is_supported@@XZ_5.0+0x8ac>
   18514:	ldur	w8, [x29, #-12]
   18518:	subs	w8, w8, #0x1
   1851c:	stur	w8, [x29, #-12]
   18520:	cbnz	w8, 18374 <lzma_mf_is_supported@@XZ_5.0+0x2490>
   18524:	ldp	x29, x30, [sp, #48]
   18528:	add	sp, sp, #0x40
   1852c:	ret
   18530:	sub	sp, sp, #0x20
   18534:	mov	w8, #0xffffffff            	// #-1
   18538:	str	x0, [sp, #24]
   1853c:	ldr	x9, [sp, #24]
   18540:	ldr	w10, [x9, #84]
   18544:	subs	w8, w8, w10
   18548:	str	w8, [sp, #20]
   1854c:	str	wzr, [sp, #16]
   18550:	ldr	w8, [sp, #16]
   18554:	ldr	x9, [sp, #24]
   18558:	ldr	w10, [x9, #108]
   1855c:	cmp	w8, w10
   18560:	b.cs	185dc <lzma_mf_is_supported@@XZ_5.0+0x26f8>  // b.hs, b.nlast
   18564:	ldr	x8, [sp, #24]
   18568:	ldr	x8, [x8, #64]
   1856c:	ldr	w9, [sp, #16]
   18570:	mov	w10, w9
   18574:	ldr	w9, [x8, x10, lsl #2]
   18578:	ldr	w11, [sp, #20]
   1857c:	cmp	w9, w11
   18580:	b.hi	185a0 <lzma_mf_is_supported@@XZ_5.0+0x26bc>  // b.pmore
   18584:	ldr	x8, [sp, #24]
   18588:	ldr	x8, [x8, #64]
   1858c:	ldr	w9, [sp, #16]
   18590:	mov	w10, w9
   18594:	mov	w9, wzr
   18598:	str	w9, [x8, x10, lsl #2]
   1859c:	b	185cc <lzma_mf_is_supported@@XZ_5.0+0x26e8>
   185a0:	ldr	w8, [sp, #20]
   185a4:	ldr	x9, [sp, #24]
   185a8:	ldr	x9, [x9, #64]
   185ac:	ldr	w10, [sp, #16]
   185b0:	mov	w11, w10
   185b4:	mov	x12, #0x4                   	// #4
   185b8:	mul	x11, x12, x11
   185bc:	add	x9, x9, x11
   185c0:	ldr	w10, [x9]
   185c4:	subs	w8, w10, w8
   185c8:	str	w8, [x9]
   185cc:	ldr	w8, [sp, #16]
   185d0:	add	w8, w8, #0x1
   185d4:	str	w8, [sp, #16]
   185d8:	b	18550 <lzma_mf_is_supported@@XZ_5.0+0x266c>
   185dc:	str	wzr, [sp, #12]
   185e0:	ldr	w8, [sp, #12]
   185e4:	ldr	x9, [sp, #24]
   185e8:	ldr	w10, [x9, #112]
   185ec:	cmp	w8, w10
   185f0:	b.cs	1866c <lzma_mf_is_supported@@XZ_5.0+0x2788>  // b.hs, b.nlast
   185f4:	ldr	x8, [sp, #24]
   185f8:	ldr	x8, [x8, #72]
   185fc:	ldr	w9, [sp, #12]
   18600:	mov	w10, w9
   18604:	ldr	w9, [x8, x10, lsl #2]
   18608:	ldr	w11, [sp, #20]
   1860c:	cmp	w9, w11
   18610:	b.hi	18630 <lzma_mf_is_supported@@XZ_5.0+0x274c>  // b.pmore
   18614:	ldr	x8, [sp, #24]
   18618:	ldr	x8, [x8, #72]
   1861c:	ldr	w9, [sp, #12]
   18620:	mov	w10, w9
   18624:	mov	w9, wzr
   18628:	str	w9, [x8, x10, lsl #2]
   1862c:	b	1865c <lzma_mf_is_supported@@XZ_5.0+0x2778>
   18630:	ldr	w8, [sp, #20]
   18634:	ldr	x9, [sp, #24]
   18638:	ldr	x9, [x9, #72]
   1863c:	ldr	w10, [sp, #12]
   18640:	mov	w11, w10
   18644:	mov	x12, #0x4                   	// #4
   18648:	mul	x11, x12, x11
   1864c:	add	x9, x9, x11
   18650:	ldr	w10, [x9]
   18654:	subs	w8, w10, w8
   18658:	str	w8, [x9]
   1865c:	ldr	w8, [sp, #12]
   18660:	add	w8, w8, #0x1
   18664:	str	w8, [sp, #12]
   18668:	b	185e0 <lzma_mf_is_supported@@XZ_5.0+0x26fc>
   1866c:	ldr	w8, [sp, #20]
   18670:	ldr	x9, [sp, #24]
   18674:	ldr	w10, [x9, #20]
   18678:	subs	w8, w10, w8
   1867c:	str	w8, [x9, #20]
   18680:	add	sp, sp, #0x20
   18684:	ret
   18688:	sub	sp, sp, #0x130
   1868c:	stp	x29, x30, [sp, #272]
   18690:	str	x28, [sp, #288]
   18694:	add	x29, sp, #0x110
   18698:	stur	x0, [x29, #-16]
   1869c:	stur	x1, [x29, #-24]
   186a0:	stur	x2, [x29, #-32]
   186a4:	stur	x3, [x29, #-40]
   186a8:	ldur	x8, [x29, #-16]
   186ac:	ldr	x8, [x8]
   186b0:	stur	x8, [x29, #-48]
   186b4:	ldur	x8, [x29, #-48]
   186b8:	cbnz	x8, 187b0 <lzma_mf_is_supported@@XZ_5.0+0x28cc>
   186bc:	ldur	x1, [x29, #-24]
   186c0:	mov	x0, #0x10b8                	// #4280
   186c4:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   186c8:	stur	x0, [x29, #-48]
   186cc:	ldur	x8, [x29, #-48]
   186d0:	cbnz	x8, 186e0 <lzma_mf_is_supported@@XZ_5.0+0x27fc>
   186d4:	mov	w8, #0x5                   	// #5
   186d8:	stur	w8, [x29, #-4]
   186dc:	b	18960 <lzma_mf_is_supported@@XZ_5.0+0x2a7c>
   186e0:	ldur	x8, [x29, #-48]
   186e4:	ldur	x9, [x29, #-16]
   186e8:	str	x8, [x9]
   186ec:	ldur	x8, [x29, #-16]
   186f0:	adrp	x9, 18000 <lzma_mf_is_supported@@XZ_5.0+0x211c>
   186f4:	add	x9, x9, #0x974
   186f8:	str	x9, [x8, #24]
   186fc:	ldur	x8, [x29, #-16]
   18700:	adrp	x9, 18000 <lzma_mf_is_supported@@XZ_5.0+0x211c>
   18704:	add	x9, x9, #0xba4
   18708:	str	x9, [x8, #32]
   1870c:	ldur	x8, [x29, #-48]
   18710:	mov	x9, xzr
   18714:	str	x9, [x8]
   18718:	ldur	x8, [x29, #-48]
   1871c:	str	xzr, [x8, #32]
   18720:	ldur	x8, [x29, #-48]
   18724:	add	x0, x8, #0x30
   18728:	sub	x8, x29, #0x58
   1872c:	str	x0, [sp, #56]
   18730:	mov	x0, x8
   18734:	mov	w10, wzr
   18738:	mov	w1, w10
   1873c:	mov	x9, #0x28                  	// #40
   18740:	mov	x2, x9
   18744:	str	x8, [sp, #48]
   18748:	str	w10, [sp, #44]
   1874c:	str	x9, [sp, #32]
   18750:	bl	3230 <memset@plt>
   18754:	ldr	x0, [sp, #56]
   18758:	ldr	x1, [sp, #48]
   1875c:	ldr	x2, [sp, #32]
   18760:	bl	3090 <memcpy@plt>
   18764:	ldur	x8, [x29, #-48]
   18768:	add	x0, x8, #0x58
   1876c:	add	x8, sp, #0x70
   18770:	str	x0, [sp, #24]
   18774:	mov	x0, x8
   18778:	ldr	w10, [sp, #44]
   1877c:	mov	w1, w10
   18780:	mov	x9, #0x48                  	// #72
   18784:	mov	x2, x9
   18788:	str	x8, [sp, #16]
   1878c:	str	x9, [sp, #8]
   18790:	bl	3230 <memset@plt>
   18794:	mov	x8, #0xffffffffffffffff    	// #-1
   18798:	str	x8, [sp, #120]
   1879c:	str	xzr, [sp, #128]
   187a0:	ldr	x0, [sp, #24]
   187a4:	ldr	x1, [sp, #16]
   187a8:	ldr	x2, [sp, #8]
   187ac:	bl	3090 <memcpy@plt>
   187b0:	ldur	x8, [x29, #-40]
   187b4:	ldur	x9, [x29, #-48]
   187b8:	add	x0, x9, #0x30
   187bc:	ldur	x1, [x29, #-24]
   187c0:	ldur	x9, [x29, #-32]
   187c4:	ldr	x2, [x9, #16]
   187c8:	add	x3, sp, #0x58
   187cc:	blr	x8
   187d0:	str	w0, [sp, #84]
   187d4:	ldr	w10, [sp, #84]
   187d8:	cbz	w10, 187e8 <lzma_mf_is_supported@@XZ_5.0+0x2904>
   187dc:	ldr	w8, [sp, #84]
   187e0:	stur	w8, [x29, #-4]
   187e4:	b	18960 <lzma_mf_is_supported@@XZ_5.0+0x2a7c>
   187e8:	ldr	x8, [sp, #88]
   187ec:	cmp	x8, #0x1, lsl #12
   187f0:	b.cs	187fc <lzma_mf_is_supported@@XZ_5.0+0x2918>  // b.hs, b.nlast
   187f4:	mov	x8, #0x1000                	// #4096
   187f8:	str	x8, [sp, #88]
   187fc:	ldr	x8, [sp, #88]
   18800:	mov	x9, #0xfffffffffffffff0    	// #-16
   18804:	cmp	x8, x9
   18808:	b.ls	18818 <lzma_mf_is_supported@@XZ_5.0+0x2934>  // b.plast
   1880c:	mov	w8, #0x5                   	// #5
   18810:	stur	w8, [x29, #-4]
   18814:	b	18960 <lzma_mf_is_supported@@XZ_5.0+0x2a7c>
   18818:	ldr	x8, [sp, #88]
   1881c:	add	x8, x8, #0xf
   18820:	and	x8, x8, #0xfffffffffffffff0
   18824:	str	x8, [sp, #88]
   18828:	ldur	x8, [x29, #-48]
   1882c:	ldr	x8, [x8, #32]
   18830:	ldr	x9, [sp, #88]
   18834:	cmp	x8, x9
   18838:	b.eq	18884 <lzma_mf_is_supported@@XZ_5.0+0x29a0>  // b.none
   1883c:	ldur	x8, [x29, #-48]
   18840:	ldr	x0, [x8]
   18844:	ldur	x1, [x29, #-24]
   18848:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   1884c:	ldr	x0, [sp, #88]
   18850:	ldur	x1, [x29, #-24]
   18854:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   18858:	ldur	x8, [x29, #-48]
   1885c:	str	x0, [x8]
   18860:	ldur	x8, [x29, #-48]
   18864:	ldr	x8, [x8]
   18868:	cbnz	x8, 18878 <lzma_mf_is_supported@@XZ_5.0+0x2994>
   1886c:	mov	w8, #0x5                   	// #5
   18870:	stur	w8, [x29, #-4]
   18874:	b	18960 <lzma_mf_is_supported@@XZ_5.0+0x2a7c>
   18878:	ldr	x8, [sp, #88]
   1887c:	ldur	x9, [x29, #-48]
   18880:	str	x8, [x9, #32]
   18884:	ldur	x8, [x29, #-16]
   18888:	ldr	x0, [x8]
   1888c:	bl	18c30 <lzma_mf_is_supported@@XZ_5.0+0x2d4c>
   18890:	add	x8, sp, #0x58
   18894:	ldr	x8, [x8, #8]
   18898:	cbz	x8, 18920 <lzma_mf_is_supported@@XZ_5.0+0x2a3c>
   1889c:	ldr	x8, [sp, #104]
   188a0:	cmp	x8, #0x0
   188a4:	cset	w9, ls  // ls = plast
   188a8:	tbnz	w9, #0, 18920 <lzma_mf_is_supported@@XZ_5.0+0x2a3c>
   188ac:	ldr	x8, [sp, #104]
   188b0:	ldr	x9, [sp, #88]
   188b4:	cmp	x8, x9
   188b8:	b.cs	188c8 <lzma_mf_is_supported@@XZ_5.0+0x29e4>  // b.hs, b.nlast
   188bc:	ldr	x8, [sp, #104]
   188c0:	str	x8, [sp]
   188c4:	b	188d0 <lzma_mf_is_supported@@XZ_5.0+0x29ec>
   188c8:	ldr	x8, [sp, #88]
   188cc:	str	x8, [sp]
   188d0:	ldr	x8, [sp]
   188d4:	str	x8, [sp, #72]
   188d8:	add	x8, sp, #0x58
   188dc:	ldr	x9, [sp, #104]
   188e0:	ldr	x10, [sp, #72]
   188e4:	subs	x9, x9, x10
   188e8:	str	x9, [sp, #64]
   188ec:	ldur	x9, [x29, #-48]
   188f0:	ldr	x0, [x9]
   188f4:	ldr	x8, [x8, #8]
   188f8:	ldr	x9, [sp, #64]
   188fc:	add	x1, x8, x9
   18900:	ldr	x2, [sp, #72]
   18904:	bl	3090 <memcpy@plt>
   18908:	ldr	x8, [sp, #72]
   1890c:	ldur	x9, [x29, #-48]
   18910:	str	x8, [x9, #8]
   18914:	ldr	x8, [sp, #72]
   18918:	ldur	x9, [x29, #-48]
   1891c:	str	x8, [x9, #16]
   18920:	ldur	x8, [x29, #-48]
   18924:	mov	w9, #0x0                   	// #0
   18928:	strb	w9, [x8, #160]
   1892c:	ldur	x8, [x29, #-48]
   18930:	strb	w9, [x8, #161]
   18934:	ldur	x8, [x29, #-48]
   18938:	str	xzr, [x8, #168]
   1893c:	ldur	x8, [x29, #-48]
   18940:	str	xzr, [x8, #176]
   18944:	ldur	x8, [x29, #-48]
   18948:	add	x0, x8, #0x58
   1894c:	ldur	x1, [x29, #-24]
   18950:	ldur	x8, [x29, #-32]
   18954:	add	x2, x8, #0x18
   18958:	bl	395c <lzma_version_string@@XZ_5.0+0x24c>
   1895c:	stur	w0, [x29, #-4]
   18960:	ldur	w0, [x29, #-4]
   18964:	ldr	x28, [sp, #288]
   18968:	ldp	x29, x30, [sp, #272]
   1896c:	add	sp, sp, #0x130
   18970:	ret
   18974:	sub	sp, sp, #0x80
   18978:	stp	x29, x30, [sp, #112]
   1897c:	add	x29, sp, #0x70
   18980:	ldr	w8, [x29, #16]
   18984:	stur	x0, [x29, #-16]
   18988:	stur	x1, [x29, #-24]
   1898c:	stur	x2, [x29, #-32]
   18990:	stur	x3, [x29, #-40]
   18994:	stur	x4, [x29, #-48]
   18998:	str	x5, [sp, #56]
   1899c:	str	x6, [sp, #48]
   189a0:	str	x7, [sp, #40]
   189a4:	str	w8, [sp, #36]
   189a8:	ldur	x9, [x29, #-16]
   189ac:	str	x9, [sp, #24]
   189b0:	ldr	x9, [sp, #24]
   189b4:	ldr	x9, [x9, #112]
   189b8:	cbnz	x9, 189e4 <lzma_mf_is_supported@@XZ_5.0+0x2b00>
   189bc:	ldr	x0, [sp, #24]
   189c0:	ldur	x1, [x29, #-32]
   189c4:	ldur	x2, [x29, #-40]
   189c8:	ldur	x3, [x29, #-48]
   189cc:	ldr	x4, [sp, #56]
   189d0:	ldr	x5, [sp, #48]
   189d4:	ldr	x6, [sp, #40]
   189d8:	bl	18cd4 <lzma_mf_is_supported@@XZ_5.0+0x2df0>
   189dc:	stur	w0, [x29, #-4]
   189e0:	b	18b94 <lzma_mf_is_supported@@XZ_5.0+0x2cb0>
   189e4:	ldr	x8, [sp, #48]
   189e8:	ldr	x8, [x8]
   189ec:	ldr	x9, [sp, #40]
   189f0:	cmp	x8, x9
   189f4:	b.cs	18b90 <lzma_mf_is_supported@@XZ_5.0+0x2cac>  // b.hs, b.nlast
   189f8:	ldr	x8, [sp, #24]
   189fc:	ldrb	w9, [x8, #160]
   18a00:	tbnz	w9, #0, 18ab0 <lzma_mf_is_supported@@XZ_5.0+0x2bcc>
   18a04:	ldr	x8, [sp, #24]
   18a08:	ldr	x8, [x8, #168]
   18a0c:	ldr	x9, [sp, #24]
   18a10:	ldr	x9, [x9, #176]
   18a14:	cmp	x8, x9
   18a18:	b.ne	18ab0 <lzma_mf_is_supported@@XZ_5.0+0x2bcc>  // b.any
   18a1c:	ldr	x8, [sp, #24]
   18a20:	str	xzr, [x8, #168]
   18a24:	ldr	x8, [sp, #24]
   18a28:	str	xzr, [x8, #176]
   18a2c:	ldr	x8, [sp, #24]
   18a30:	ldr	x8, [x8, #112]
   18a34:	ldr	x9, [sp, #24]
   18a38:	ldr	x0, [x9, #88]
   18a3c:	ldur	x1, [x29, #-24]
   18a40:	ldur	x2, [x29, #-32]
   18a44:	ldur	x3, [x29, #-40]
   18a48:	ldur	x4, [x29, #-48]
   18a4c:	ldr	x9, [sp, #24]
   18a50:	add	x5, x9, #0xb8
   18a54:	ldr	x9, [sp, #24]
   18a58:	add	x6, x9, #0xb0
   18a5c:	ldr	w10, [sp, #36]
   18a60:	mov	x7, #0x1000                	// #4096
   18a64:	mov	x9, sp
   18a68:	str	w10, [x9]
   18a6c:	blr	x8
   18a70:	str	w0, [sp, #20]
   18a74:	ldr	w10, [sp, #20]
   18a78:	cmp	w10, #0x1
   18a7c:	b.ne	18a90 <lzma_mf_is_supported@@XZ_5.0+0x2bac>  // b.any
   18a80:	ldr	x8, [sp, #24]
   18a84:	mov	w9, #0x1                   	// #1
   18a88:	strb	w9, [x8, #160]
   18a8c:	b	18ab0 <lzma_mf_is_supported@@XZ_5.0+0x2bcc>
   18a90:	ldr	w8, [sp, #20]
   18a94:	cbnz	w8, 18aa4 <lzma_mf_is_supported@@XZ_5.0+0x2bc0>
   18a98:	ldr	x8, [sp, #24]
   18a9c:	ldr	x8, [x8, #176]
   18aa0:	cbnz	x8, 18ab0 <lzma_mf_is_supported@@XZ_5.0+0x2bcc>
   18aa4:	ldr	w8, [sp, #20]
   18aa8:	stur	w8, [x29, #-4]
   18aac:	b	18b94 <lzma_mf_is_supported@@XZ_5.0+0x2cb0>
   18ab0:	ldr	x8, [sp, #24]
   18ab4:	ldrb	w9, [x8, #161]
   18ab8:	tbnz	w9, #0, 18ac0 <lzma_mf_is_supported@@XZ_5.0+0x2bdc>
   18abc:	b	18afc <lzma_mf_is_supported@@XZ_5.0+0x2c18>
   18ac0:	ldr	x8, [sp, #24]
   18ac4:	ldr	x8, [x8, #176]
   18ac8:	cbz	x8, 18ad8 <lzma_mf_is_supported@@XZ_5.0+0x2bf4>
   18acc:	mov	w8, #0x9                   	// #9
   18ad0:	stur	w8, [x29, #-4]
   18ad4:	b	18b94 <lzma_mf_is_supported@@XZ_5.0+0x2cb0>
   18ad8:	ldr	x8, [sp, #24]
   18adc:	ldrb	w9, [x8, #160]
   18ae0:	tbnz	w9, #0, 18ae8 <lzma_mf_is_supported@@XZ_5.0+0x2c04>
   18ae4:	b	18af4 <lzma_mf_is_supported@@XZ_5.0+0x2c10>
   18ae8:	mov	w8, #0x1                   	// #1
   18aec:	stur	w8, [x29, #-4]
   18af0:	b	18b94 <lzma_mf_is_supported@@XZ_5.0+0x2cb0>
   18af4:	stur	wzr, [x29, #-4]
   18af8:	b	18b94 <lzma_mf_is_supported@@XZ_5.0+0x2cb0>
   18afc:	ldr	x0, [sp, #24]
   18b00:	ldr	x8, [sp, #24]
   18b04:	add	x1, x8, #0xb8
   18b08:	ldr	x8, [sp, #24]
   18b0c:	add	x2, x8, #0xa8
   18b10:	ldr	x8, [sp, #24]
   18b14:	ldr	x3, [x8, #176]
   18b18:	ldr	x4, [sp, #56]
   18b1c:	ldr	x5, [sp, #48]
   18b20:	ldr	x6, [sp, #40]
   18b24:	bl	18cd4 <lzma_mf_is_supported@@XZ_5.0+0x2df0>
   18b28:	str	w0, [sp, #16]
   18b2c:	ldr	w9, [sp, #16]
   18b30:	cmp	w9, #0x1
   18b34:	b.ne	18b48 <lzma_mf_is_supported@@XZ_5.0+0x2c64>  // b.any
   18b38:	ldr	x8, [sp, #24]
   18b3c:	mov	w9, #0x1                   	// #1
   18b40:	strb	w9, [x8, #161]
   18b44:	b	18b8c <lzma_mf_is_supported@@XZ_5.0+0x2ca8>
   18b48:	ldr	w8, [sp, #16]
   18b4c:	cbz	w8, 18b5c <lzma_mf_is_supported@@XZ_5.0+0x2c78>
   18b50:	ldr	w8, [sp, #16]
   18b54:	stur	w8, [x29, #-4]
   18b58:	b	18b94 <lzma_mf_is_supported@@XZ_5.0+0x2cb0>
   18b5c:	ldr	x8, [sp, #24]
   18b60:	ldrb	w9, [x8, #160]
   18b64:	tbnz	w9, #0, 18b6c <lzma_mf_is_supported@@XZ_5.0+0x2c88>
   18b68:	b	18b8c <lzma_mf_is_supported@@XZ_5.0+0x2ca8>
   18b6c:	ldr	x8, [sp, #48]
   18b70:	ldr	x8, [x8]
   18b74:	ldr	x9, [sp, #40]
   18b78:	cmp	x8, x9
   18b7c:	b.cs	18b8c <lzma_mf_is_supported@@XZ_5.0+0x2ca8>  // b.hs, b.nlast
   18b80:	mov	w8, #0x9                   	// #9
   18b84:	stur	w8, [x29, #-4]
   18b88:	b	18b94 <lzma_mf_is_supported@@XZ_5.0+0x2cb0>
   18b8c:	b	189e4 <lzma_mf_is_supported@@XZ_5.0+0x2b00>
   18b90:	stur	wzr, [x29, #-4]
   18b94:	ldur	w0, [x29, #-4]
   18b98:	ldp	x29, x30, [sp, #112]
   18b9c:	add	sp, sp, #0x80
   18ba0:	ret
   18ba4:	sub	sp, sp, #0x30
   18ba8:	stp	x29, x30, [sp, #32]
   18bac:	add	x29, sp, #0x20
   18bb0:	stur	x0, [x29, #-8]
   18bb4:	str	x1, [sp, #16]
   18bb8:	ldur	x8, [x29, #-8]
   18bbc:	str	x8, [sp, #8]
   18bc0:	ldr	x8, [sp, #8]
   18bc4:	add	x0, x8, #0x58
   18bc8:	ldr	x1, [sp, #16]
   18bcc:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
   18bd0:	ldr	x8, [sp, #8]
   18bd4:	ldr	x0, [x8]
   18bd8:	ldr	x1, [sp, #16]
   18bdc:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   18be0:	ldr	x8, [sp, #8]
   18be4:	ldr	x8, [x8, #80]
   18be8:	cbz	x8, 18c08 <lzma_mf_is_supported@@XZ_5.0+0x2d24>
   18bec:	ldr	x8, [sp, #8]
   18bf0:	ldr	x8, [x8, #80]
   18bf4:	ldr	x9, [sp, #8]
   18bf8:	ldr	x0, [x9, #48]
   18bfc:	ldr	x1, [sp, #16]
   18c00:	blr	x8
   18c04:	b	18c18 <lzma_mf_is_supported@@XZ_5.0+0x2d34>
   18c08:	ldr	x8, [sp, #8]
   18c0c:	ldr	x0, [x8, #48]
   18c10:	ldr	x1, [sp, #16]
   18c14:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   18c18:	ldr	x0, [sp, #8]
   18c1c:	ldr	x1, [sp, #16]
   18c20:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   18c24:	ldp	x29, x30, [sp, #32]
   18c28:	add	sp, sp, #0x30
   18c2c:	ret
   18c30:	sub	sp, sp, #0x10
   18c34:	mov	w8, #0x0                   	// #0
   18c38:	str	x0, [sp, #8]
   18c3c:	ldr	x9, [sp, #8]
   18c40:	str	xzr, [x9, #8]
   18c44:	ldr	x9, [sp, #8]
   18c48:	str	xzr, [x9, #16]
   18c4c:	ldr	x9, [sp, #8]
   18c50:	ldr	x9, [x9]
   18c54:	ldr	x10, [sp, #8]
   18c58:	ldr	x10, [x10, #32]
   18c5c:	subs	x10, x10, #0x1
   18c60:	add	x9, x9, x10
   18c64:	strb	w8, [x9]
   18c68:	ldr	x9, [sp, #8]
   18c6c:	strb	w8, [x9, #40]
   18c70:	add	sp, sp, #0x10
   18c74:	ret
   18c78:	sub	sp, sp, #0x10
   18c7c:	mov	x8, #0x10b8                	// #4280
   18c80:	str	x0, [sp, #8]
   18c84:	ldr	x9, [sp, #8]
   18c88:	add	x0, x8, x9
   18c8c:	add	sp, sp, #0x10
   18c90:	ret
   18c94:	sub	sp, sp, #0x30
   18c98:	stp	x29, x30, [sp, #32]
   18c9c:	add	x29, sp, #0x20
   18ca0:	stur	x0, [x29, #-8]
   18ca4:	str	x1, [sp, #16]
   18ca8:	ldur	x8, [x29, #-8]
   18cac:	str	x8, [sp, #8]
   18cb0:	ldr	x8, [sp, #8]
   18cb4:	ldr	x8, [x8, #72]
   18cb8:	ldr	x9, [sp, #8]
   18cbc:	ldr	x0, [x9, #48]
   18cc0:	ldr	x1, [sp, #16]
   18cc4:	blr	x8
   18cc8:	ldp	x29, x30, [sp, #32]
   18ccc:	add	sp, sp, #0x30
   18cd0:	ret
   18cd4:	sub	sp, sp, #0x80
   18cd8:	stp	x29, x30, [sp, #112]
   18cdc:	add	x29, sp, #0x70
   18ce0:	stur	x0, [x29, #-16]
   18ce4:	stur	x1, [x29, #-24]
   18ce8:	stur	x2, [x29, #-32]
   18cec:	stur	x3, [x29, #-40]
   18cf0:	stur	x4, [x29, #-48]
   18cf4:	str	x5, [sp, #56]
   18cf8:	str	x6, [sp, #48]
   18cfc:	ldur	x8, [x29, #-16]
   18d00:	ldr	x8, [x8, #8]
   18d04:	ldur	x9, [x29, #-16]
   18d08:	ldr	x9, [x9, #32]
   18d0c:	cmp	x8, x9
   18d10:	b.ne	18d1c <lzma_mf_is_supported@@XZ_5.0+0x2e38>  // b.any
   18d14:	ldur	x8, [x29, #-16]
   18d18:	str	xzr, [x8, #8]
   18d1c:	ldur	x8, [x29, #-16]
   18d20:	ldr	x8, [x8, #8]
   18d24:	str	x8, [sp, #40]
   18d28:	ldur	x8, [x29, #-16]
   18d2c:	ldr	x8, [x8, #8]
   18d30:	ldr	x9, [sp, #48]
   18d34:	ldr	x10, [sp, #56]
   18d38:	ldr	x10, [x10]
   18d3c:	subs	x9, x9, x10
   18d40:	ldur	x10, [x29, #-16]
   18d44:	ldr	x10, [x10, #32]
   18d48:	ldur	x11, [x29, #-16]
   18d4c:	ldr	x11, [x11, #8]
   18d50:	subs	x10, x10, x11
   18d54:	cmp	x9, x10
   18d58:	str	x8, [sp, #16]
   18d5c:	b.cs	18d78 <lzma_mf_is_supported@@XZ_5.0+0x2e94>  // b.hs, b.nlast
   18d60:	ldr	x8, [sp, #48]
   18d64:	ldr	x9, [sp, #56]
   18d68:	ldr	x9, [x9]
   18d6c:	subs	x8, x8, x9
   18d70:	str	x8, [sp, #8]
   18d74:	b	18d90 <lzma_mf_is_supported@@XZ_5.0+0x2eac>
   18d78:	ldur	x8, [x29, #-16]
   18d7c:	ldr	x8, [x8, #32]
   18d80:	ldur	x9, [x29, #-16]
   18d84:	ldr	x9, [x9, #8]
   18d88:	subs	x8, x8, x9
   18d8c:	str	x8, [sp, #8]
   18d90:	ldr	x8, [sp, #8]
   18d94:	ldr	x9, [sp, #16]
   18d98:	add	x8, x9, x8
   18d9c:	ldur	x10, [x29, #-16]
   18da0:	str	x8, [x10, #24]
   18da4:	ldur	x8, [x29, #-16]
   18da8:	ldr	x8, [x8, #56]
   18dac:	ldur	x10, [x29, #-16]
   18db0:	ldr	x0, [x10, #48]
   18db4:	ldur	x1, [x29, #-16]
   18db8:	ldur	x2, [x29, #-24]
   18dbc:	ldur	x3, [x29, #-32]
   18dc0:	ldur	x4, [x29, #-40]
   18dc4:	blr	x8
   18dc8:	str	w0, [sp, #36]
   18dcc:	ldur	x8, [x29, #-16]
   18dd0:	ldr	x8, [x8, #8]
   18dd4:	ldr	x9, [sp, #40]
   18dd8:	subs	x8, x8, x9
   18ddc:	str	x8, [sp, #24]
   18de0:	ldur	x8, [x29, #-48]
   18de4:	ldr	x9, [sp, #56]
   18de8:	ldr	x9, [x9]
   18dec:	add	x0, x8, x9
   18df0:	ldur	x8, [x29, #-16]
   18df4:	ldr	x8, [x8]
   18df8:	ldr	x9, [sp, #40]
   18dfc:	add	x1, x8, x9
   18e00:	ldr	x2, [sp, #24]
   18e04:	bl	3090 <memcpy@plt>
   18e08:	ldr	x8, [sp, #24]
   18e0c:	ldr	x9, [sp, #56]
   18e10:	ldr	x10, [x9]
   18e14:	add	x8, x10, x8
   18e18:	str	x8, [x9]
   18e1c:	ldur	x8, [x29, #-16]
   18e20:	ldrb	w11, [x8, #40]
   18e24:	tbnz	w11, #0, 18e2c <lzma_mf_is_supported@@XZ_5.0+0x2f48>
   18e28:	b	18e60 <lzma_mf_is_supported@@XZ_5.0+0x2f7c>
   18e2c:	ldur	x0, [x29, #-16]
   18e30:	bl	18c30 <lzma_mf_is_supported@@XZ_5.0+0x2d4c>
   18e34:	ldr	w8, [sp, #36]
   18e38:	cbnz	w8, 18e50 <lzma_mf_is_supported@@XZ_5.0+0x2f6c>
   18e3c:	ldr	x8, [sp, #56]
   18e40:	ldr	x8, [x8]
   18e44:	ldr	x9, [sp, #48]
   18e48:	cmp	x8, x9
   18e4c:	b.ne	18e5c <lzma_mf_is_supported@@XZ_5.0+0x2f78>  // b.any
   18e50:	ldr	w8, [sp, #36]
   18e54:	stur	w8, [x29, #-4]
   18e58:	b	18ea4 <lzma_mf_is_supported@@XZ_5.0+0x2fc0>
   18e5c:	b	18ea0 <lzma_mf_is_supported@@XZ_5.0+0x2fbc>
   18e60:	ldr	w8, [sp, #36]
   18e64:	cbnz	w8, 18e94 <lzma_mf_is_supported@@XZ_5.0+0x2fb0>
   18e68:	ldr	x8, [sp, #56]
   18e6c:	ldr	x8, [x8]
   18e70:	ldr	x9, [sp, #48]
   18e74:	cmp	x8, x9
   18e78:	b.eq	18e94 <lzma_mf_is_supported@@XZ_5.0+0x2fb0>  // b.none
   18e7c:	ldur	x8, [x29, #-16]
   18e80:	ldr	x8, [x8, #8]
   18e84:	ldur	x9, [x29, #-16]
   18e88:	ldr	x9, [x9, #32]
   18e8c:	cmp	x8, x9
   18e90:	b.cs	18ea0 <lzma_mf_is_supported@@XZ_5.0+0x2fbc>  // b.hs, b.nlast
   18e94:	ldr	w8, [sp, #36]
   18e98:	stur	w8, [x29, #-4]
   18e9c:	b	18ea4 <lzma_mf_is_supported@@XZ_5.0+0x2fc0>
   18ea0:	b	18cfc <lzma_mf_is_supported@@XZ_5.0+0x2e18>
   18ea4:	ldur	w0, [x29, #-4]
   18ea8:	ldp	x29, x30, [sp, #112]
   18eac:	add	sp, sp, #0x80
   18eb0:	ret

0000000000018eb4 <lzma_lzma_preset@@XZ_5.0>:
   18eb4:	sub	sp, sp, #0x30
   18eb8:	mov	w8, #0x80000000            	// #-2147483648
   18ebc:	str	x0, [sp, #32]
   18ec0:	str	w1, [sp, #28]
   18ec4:	ldr	w9, [sp, #28]
   18ec8:	and	w9, w9, #0x1f
   18ecc:	str	w9, [sp, #24]
   18ed0:	ldr	w9, [sp, #28]
   18ed4:	and	w9, w9, #0xffffffe0
   18ed8:	str	w9, [sp, #20]
   18edc:	str	w8, [sp, #16]
   18ee0:	ldr	w8, [sp, #24]
   18ee4:	cmp	w8, #0x9
   18ee8:	b.hi	18ef8 <lzma_lzma_preset@@XZ_5.0+0x44>  // b.pmore
   18eec:	ldr	w8, [sp, #20]
   18ef0:	and	w8, w8, #0x7fffffff
   18ef4:	cbz	w8, 18f04 <lzma_lzma_preset@@XZ_5.0+0x50>
   18ef8:	mov	w8, #0x1                   	// #1
   18efc:	strb	w8, [sp, #47]
   18f00:	b	1909c <lzma_lzma_preset@@XZ_5.0+0x1e8>
   18f04:	ldr	x8, [sp, #32]
   18f08:	mov	x9, xzr
   18f0c:	str	x9, [x8, #8]
   18f10:	ldr	x8, [sp, #32]
   18f14:	str	wzr, [x8, #16]
   18f18:	ldr	x8, [sp, #32]
   18f1c:	mov	w10, #0x3                   	// #3
   18f20:	str	w10, [x8, #20]
   18f24:	ldr	x8, [sp, #32]
   18f28:	str	wzr, [x8, #24]
   18f2c:	ldr	x8, [sp, #32]
   18f30:	mov	w10, #0x2                   	// #2
   18f34:	str	w10, [x8, #28]
   18f38:	ldr	w10, [sp, #24]
   18f3c:	mov	w8, w10
   18f40:	adrp	x9, 2f000 <lzma_mode_is_supported@@XZ_5.0+0x14a98>
   18f44:	add	x9, x9, #0xc78
   18f48:	ldrb	w10, [x9, x8]
   18f4c:	mov	w11, #0x1                   	// #1
   18f50:	lsl	w10, w11, w10
   18f54:	ldr	x8, [sp, #32]
   18f58:	str	w10, [x8]
   18f5c:	ldr	w10, [sp, #24]
   18f60:	cmp	w10, #0x3
   18f64:	b.hi	18fcc <lzma_lzma_preset@@XZ_5.0+0x118>  // b.pmore
   18f68:	ldr	x8, [sp, #32]
   18f6c:	mov	w9, #0x1                   	// #1
   18f70:	str	w9, [x8, #32]
   18f74:	ldr	w9, [sp, #24]
   18f78:	mov	w10, #0x4                   	// #4
   18f7c:	mov	w11, #0x3                   	// #3
   18f80:	cmp	w9, #0x0
   18f84:	csel	w9, w11, w10, eq  // eq = none
   18f88:	ldr	x8, [sp, #32]
   18f8c:	str	w9, [x8, #40]
   18f90:	ldr	w9, [sp, #24]
   18f94:	mov	w10, #0x111                 	// #273
   18f98:	mov	w11, #0x80                  	// #128
   18f9c:	cmp	w9, #0x1
   18fa0:	csel	w9, w11, w10, ls  // ls = plast
   18fa4:	ldr	x8, [sp, #32]
   18fa8:	str	w9, [x8, #36]
   18fac:	ldr	w9, [sp, #24]
   18fb0:	mov	w8, w9
   18fb4:	adrp	x12, 2f000 <lzma_mode_is_supported@@XZ_5.0+0x14a98>
   18fb8:	add	x12, x12, #0xc82
   18fbc:	ldrb	w9, [x12, x8]
   18fc0:	ldr	x8, [sp, #32]
   18fc4:	str	w9, [x8, #44]
   18fc8:	b	19028 <lzma_lzma_preset@@XZ_5.0+0x174>
   18fcc:	ldr	x8, [sp, #32]
   18fd0:	mov	w9, #0x2                   	// #2
   18fd4:	str	w9, [x8, #32]
   18fd8:	ldr	x8, [sp, #32]
   18fdc:	mov	w9, #0x14                  	// #20
   18fe0:	str	w9, [x8, #40]
   18fe4:	ldr	w9, [sp, #24]
   18fe8:	cmp	w9, #0x4
   18fec:	b.ne	18ffc <lzma_lzma_preset@@XZ_5.0+0x148>  // b.any
   18ff0:	mov	w8, #0x10                  	// #16
   18ff4:	str	w8, [sp, #12]
   18ff8:	b	19014 <lzma_lzma_preset@@XZ_5.0+0x160>
   18ffc:	ldr	w8, [sp, #24]
   19000:	mov	w9, #0x40                  	// #64
   19004:	mov	w10, #0x20                  	// #32
   19008:	cmp	w8, #0x5
   1900c:	csel	w8, w10, w9, eq  // eq = none
   19010:	str	w8, [sp, #12]
   19014:	ldr	w8, [sp, #12]
   19018:	ldr	x9, [sp, #32]
   1901c:	str	w8, [x9, #36]
   19020:	ldr	x9, [sp, #32]
   19024:	str	wzr, [x9, #44]
   19028:	ldr	w8, [sp, #20]
   1902c:	and	w8, w8, #0x80000000
   19030:	cbz	w8, 19094 <lzma_lzma_preset@@XZ_5.0+0x1e0>
   19034:	ldr	x8, [sp, #32]
   19038:	mov	w9, #0x2                   	// #2
   1903c:	str	w9, [x8, #32]
   19040:	ldr	x8, [sp, #32]
   19044:	mov	w9, #0x14                  	// #20
   19048:	str	w9, [x8, #40]
   1904c:	ldr	w9, [sp, #24]
   19050:	cmp	w9, #0x3
   19054:	b.eq	19064 <lzma_lzma_preset@@XZ_5.0+0x1b0>  // b.none
   19058:	ldr	w8, [sp, #24]
   1905c:	cmp	w8, #0x5
   19060:	b.ne	1907c <lzma_lzma_preset@@XZ_5.0+0x1c8>  // b.any
   19064:	ldr	x8, [sp, #32]
   19068:	mov	w9, #0xc0                  	// #192
   1906c:	str	w9, [x8, #36]
   19070:	ldr	x8, [sp, #32]
   19074:	str	wzr, [x8, #44]
   19078:	b	19094 <lzma_lzma_preset@@XZ_5.0+0x1e0>
   1907c:	ldr	x8, [sp, #32]
   19080:	mov	w9, #0x111                 	// #273
   19084:	str	w9, [x8, #36]
   19088:	ldr	x8, [sp, #32]
   1908c:	mov	w9, #0x200                 	// #512
   19090:	str	w9, [x8, #44]
   19094:	mov	w8, #0x0                   	// #0
   19098:	strb	w8, [sp, #47]
   1909c:	ldrb	w0, [sp, #47]
   190a0:	add	sp, sp, #0x30
   190a4:	ret
   190a8:	sub	sp, sp, #0x60
   190ac:	stp	x29, x30, [sp, #80]
   190b0:	add	x29, sp, #0x50
   190b4:	stur	x0, [x29, #-16]
   190b8:	stur	x1, [x29, #-24]
   190bc:	stur	x2, [x29, #-32]
   190c0:	str	x3, [sp, #40]
   190c4:	str	x4, [sp, #32]
   190c8:	str	w5, [sp, #28]
   190cc:	ldur	x8, [x29, #-16]
   190d0:	ldrb	w9, [x8, #2957]
   190d4:	tbnz	w9, #0, 190f0 <lzma_lzma_preset@@XZ_5.0+0x23c>
   190d8:	ldur	x0, [x29, #-16]
   190dc:	ldur	x1, [x29, #-24]
   190e0:	bl	192a8 <lzma_lzma_preset@@XZ_5.0+0x3f4>
   190e4:	tbnz	w0, #0, 190f0 <lzma_lzma_preset@@XZ_5.0+0x23c>
   190e8:	stur	wzr, [x29, #-4]
   190ec:	b	19298 <lzma_lzma_preset@@XZ_5.0+0x3e4>
   190f0:	ldur	x0, [x29, #-24]
   190f4:	bl	19370 <lzma_lzma_preset@@XZ_5.0+0x4bc>
   190f8:	str	w0, [sp, #24]
   190fc:	ldur	x0, [x29, #-16]
   19100:	ldur	x1, [x29, #-32]
   19104:	ldr	x2, [sp, #40]
   19108:	ldr	x3, [sp, #32]
   1910c:	bl	19394 <lzma_lzma_preset@@XZ_5.0+0x4e0>
   19110:	tbnz	w0, #0, 19118 <lzma_lzma_preset@@XZ_5.0+0x264>
   19114:	b	19120 <lzma_lzma_preset@@XZ_5.0+0x26c>
   19118:	stur	wzr, [x29, #-4]
   1911c:	b	19298 <lzma_lzma_preset@@XZ_5.0+0x3e4>
   19120:	ldr	w8, [sp, #28]
   19124:	mov	w9, #0xffffffff            	// #-1
   19128:	cmp	w8, w9
   1912c:	b.eq	1917c <lzma_lzma_preset@@XZ_5.0+0x2c8>  // b.none
   19130:	ldur	x8, [x29, #-24]
   19134:	ldr	w9, [x8, #24]
   19138:	ldur	x8, [x29, #-24]
   1913c:	ldr	w10, [x8, #28]
   19140:	subs	w9, w9, w10
   19144:	ldr	w10, [sp, #28]
   19148:	cmp	w9, w10
   1914c:	b.cs	19178 <lzma_lzma_preset@@XZ_5.0+0x2c4>  // b.hs, b.nlast
   19150:	ldr	x8, [sp, #40]
   19154:	ldr	x8, [x8]
   19158:	ldur	x0, [x29, #-16]
   1915c:	str	x8, [sp, #8]
   19160:	bl	1967c <lzma_lzma_preset@@XZ_5.0+0x7c8>
   19164:	ldr	x8, [sp, #8]
   19168:	add	x9, x8, x0
   1916c:	mov	x10, #0xefff                	// #61439
   19170:	cmp	x9, x10
   19174:	b.cc	1917c <lzma_lzma_preset@@XZ_5.0+0x2c8>  // b.lo, b.ul, b.last
   19178:	b	19224 <lzma_lzma_preset@@XZ_5.0+0x370>
   1917c:	ldur	x8, [x29, #-24]
   19180:	ldr	w9, [x8, #24]
   19184:	ldur	x8, [x29, #-24]
   19188:	ldr	w10, [x8, #32]
   1918c:	cmp	w9, w10
   19190:	b.cc	191b8 <lzma_lzma_preset@@XZ_5.0+0x304>  // b.lo, b.ul, b.last
   19194:	ldur	x8, [x29, #-24]
   19198:	ldr	w9, [x8, #104]
   1919c:	cbnz	w9, 191a8 <lzma_lzma_preset@@XZ_5.0+0x2f4>
   191a0:	stur	wzr, [x29, #-4]
   191a4:	b	19298 <lzma_lzma_preset@@XZ_5.0+0x3e4>
   191a8:	ldur	x8, [x29, #-24]
   191ac:	ldr	w9, [x8, #28]
   191b0:	cbnz	w9, 191b8 <lzma_lzma_preset@@XZ_5.0+0x304>
   191b4:	b	19224 <lzma_lzma_preset@@XZ_5.0+0x370>
   191b8:	ldur	x8, [x29, #-16]
   191bc:	ldrb	w9, [x8, #2956]
   191c0:	tbnz	w9, #0, 191c8 <lzma_lzma_preset@@XZ_5.0+0x314>
   191c4:	b	191e0 <lzma_lzma_preset@@XZ_5.0+0x32c>
   191c8:	ldur	x0, [x29, #-16]
   191cc:	ldur	x1, [x29, #-24]
   191d0:	add	x2, sp, #0x10
   191d4:	add	x3, sp, #0x14
   191d8:	bl	1b5dc <lzma_mode_is_supported@@XZ_5.0+0x1074>
   191dc:	b	191f8 <lzma_lzma_preset@@XZ_5.0+0x344>
   191e0:	ldur	x0, [x29, #-16]
   191e4:	ldur	x1, [x29, #-24]
   191e8:	ldr	w4, [sp, #24]
   191ec:	add	x2, sp, #0x10
   191f0:	add	x3, sp, #0x14
   191f4:	bl	1bd50 <lzma_mode_is_supported@@XZ_5.0+0x17e8>
   191f8:	ldur	x0, [x29, #-16]
   191fc:	ldur	x1, [x29, #-24]
   19200:	ldr	w2, [sp, #16]
   19204:	ldr	w3, [sp, #20]
   19208:	ldr	w4, [sp, #24]
   1920c:	bl	1969c <lzma_lzma_preset@@XZ_5.0+0x7e8>
   19210:	ldr	w8, [sp, #20]
   19214:	ldr	w9, [sp, #24]
   19218:	add	w8, w9, w8
   1921c:	str	w8, [sp, #24]
   19220:	b	190fc <lzma_lzma_preset@@XZ_5.0+0x248>
   19224:	ldur	x8, [x29, #-16]
   19228:	ldrb	w9, [x8, #2958]
   1922c:	tbnz	w9, #0, 19284 <lzma_lzma_preset@@XZ_5.0+0x3d0>
   19230:	ldur	x8, [x29, #-16]
   19234:	mov	w9, #0x1                   	// #1
   19238:	strb	w9, [x8, #2958]
   1923c:	ldr	w9, [sp, #28]
   19240:	mov	w10, #0xffffffff            	// #-1
   19244:	cmp	w9, w10
   19248:	b.ne	19258 <lzma_lzma_preset@@XZ_5.0+0x3a4>  // b.any
   1924c:	ldur	x0, [x29, #-16]
   19250:	ldr	w1, [sp, #24]
   19254:	bl	19840 <lzma_lzma_preset@@XZ_5.0+0x98c>
   19258:	ldur	x0, [x29, #-16]
   1925c:	bl	19918 <lzma_lzma_preset@@XZ_5.0+0xa64>
   19260:	ldur	x0, [x29, #-16]
   19264:	ldur	x1, [x29, #-32]
   19268:	ldr	x2, [sp, #40]
   1926c:	ldr	x3, [sp, #32]
   19270:	bl	19394 <lzma_lzma_preset@@XZ_5.0+0x4e0>
   19274:	tbnz	w0, #0, 1927c <lzma_lzma_preset@@XZ_5.0+0x3c8>
   19278:	b	19284 <lzma_lzma_preset@@XZ_5.0+0x3d0>
   1927c:	stur	wzr, [x29, #-4]
   19280:	b	19298 <lzma_lzma_preset@@XZ_5.0+0x3e4>
   19284:	ldur	x8, [x29, #-16]
   19288:	mov	w9, #0x0                   	// #0
   1928c:	strb	w9, [x8, #2958]
   19290:	mov	w9, #0x1                   	// #1
   19294:	stur	w9, [x29, #-4]
   19298:	ldur	w0, [x29, #-4]
   1929c:	ldp	x29, x30, [sp, #80]
   192a0:	add	sp, sp, #0x60
   192a4:	ret
   192a8:	sub	sp, sp, #0x30
   192ac:	stp	x29, x30, [sp, #32]
   192b0:	add	x29, sp, #0x20
   192b4:	str	x0, [sp, #16]
   192b8:	str	x1, [sp, #8]
   192bc:	ldr	x8, [sp, #8]
   192c0:	ldr	w9, [x8, #24]
   192c4:	ldr	x8, [sp, #8]
   192c8:	ldr	w10, [x8, #32]
   192cc:	cmp	w9, w10
   192d0:	b.ne	192f4 <lzma_lzma_preset@@XZ_5.0+0x440>  // b.any
   192d4:	ldr	x8, [sp, #8]
   192d8:	ldr	w9, [x8, #104]
   192dc:	cbnz	w9, 192f0 <lzma_lzma_preset@@XZ_5.0+0x43c>
   192e0:	mov	w8, wzr
   192e4:	and	w8, w8, #0x1
   192e8:	sturb	w8, [x29, #-1]
   192ec:	b	1935c <lzma_lzma_preset@@XZ_5.0+0x4a8>
   192f0:	b	19344 <lzma_lzma_preset@@XZ_5.0+0x490>
   192f4:	ldr	x0, [sp, #8]
   192f8:	mov	w1, #0x1                   	// #1
   192fc:	bl	1a5a8 <lzma_mode_is_supported@@XZ_5.0+0x40>
   19300:	ldr	x8, [sp, #8]
   19304:	mov	w9, wzr
   19308:	str	wzr, [x8, #28]
   1930c:	ldr	x0, [sp, #16]
   19310:	ldr	x8, [sp, #16]
   19314:	mov	x10, #0x6b9c                	// #27548
   19318:	add	x1, x8, x10
   1931c:	mov	w2, w9
   19320:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   19324:	ldr	x0, [sp, #16]
   19328:	ldr	x8, [sp, #16]
   1932c:	add	x1, x8, #0xb9c
   19330:	ldr	x8, [sp, #8]
   19334:	ldr	x8, [x8]
   19338:	ldrb	w3, [x8]
   1933c:	mov	w2, #0x8                   	// #8
   19340:	bl	1a65c <lzma_mode_is_supported@@XZ_5.0+0xf4>
   19344:	ldr	x8, [sp, #16]
   19348:	mov	w9, #0x1                   	// #1
   1934c:	strb	w9, [x8, #2957]
   19350:	mov	w9, #0x1                   	// #1
   19354:	and	w9, w9, #0x1
   19358:	sturb	w9, [x29, #-1]
   1935c:	ldurb	w8, [x29, #-1]
   19360:	and	w0, w8, #0x1
   19364:	ldp	x29, x30, [sp, #32]
   19368:	add	sp, sp, #0x30
   1936c:	ret
   19370:	sub	sp, sp, #0x10
   19374:	str	x0, [sp, #8]
   19378:	ldr	x8, [sp, #8]
   1937c:	ldr	w9, [x8, #24]
   19380:	ldr	x8, [sp, #8]
   19384:	ldr	w10, [x8, #28]
   19388:	subs	w0, w9, w10
   1938c:	add	sp, sp, #0x10
   19390:	ret
   19394:	sub	sp, sp, #0x50
   19398:	stp	x29, x30, [sp, #64]
   1939c:	add	x29, sp, #0x40
   193a0:	stur	x0, [x29, #-16]
   193a4:	stur	x1, [x29, #-24]
   193a8:	str	x2, [sp, #32]
   193ac:	str	x3, [sp, #24]
   193b0:	ldur	x8, [x29, #-16]
   193b4:	ldr	x8, [x8, #32]
   193b8:	ldur	x9, [x29, #-16]
   193bc:	ldr	x9, [x9, #24]
   193c0:	cmp	x8, x9
   193c4:	b.cs	1964c <lzma_lzma_preset@@XZ_5.0+0x798>  // b.hs, b.nlast
   193c8:	ldur	x8, [x29, #-16]
   193cc:	ldr	w9, [x8, #16]
   193d0:	mov	w10, #0x1000000             	// #16777216
   193d4:	cmp	w9, w10
   193d8:	b.cs	19418 <lzma_lzma_preset@@XZ_5.0+0x564>  // b.hs, b.nlast
   193dc:	ldur	x0, [x29, #-16]
   193e0:	ldur	x1, [x29, #-24]
   193e4:	ldr	x2, [sp, #32]
   193e8:	ldr	x3, [sp, #24]
   193ec:	bl	1a6e4 <lzma_mode_is_supported@@XZ_5.0+0x17c>
   193f0:	tbnz	w0, #0, 193f8 <lzma_lzma_preset@@XZ_5.0+0x544>
   193f4:	b	19408 <lzma_lzma_preset@@XZ_5.0+0x554>
   193f8:	mov	w8, #0x1                   	// #1
   193fc:	and	w8, w8, #0x1
   19400:	sturb	w8, [x29, #-1]
   19404:	b	19668 <lzma_lzma_preset@@XZ_5.0+0x7b4>
   19408:	ldur	x8, [x29, #-16]
   1940c:	ldr	w9, [x8, #16]
   19410:	lsl	w9, w9, #8
   19414:	str	w9, [x8, #16]
   19418:	ldur	x8, [x29, #-16]
   1941c:	add	x8, x8, #0x28
   19420:	ldur	x9, [x29, #-16]
   19424:	ldr	x9, [x9, #32]
   19428:	ldr	w10, [x8, x9, lsl #2]
   1942c:	subs	w10, w10, #0x0
   19430:	mov	w8, w10
   19434:	ubfx	x8, x8, #0, #32
   19438:	cmp	x8, #0x4
   1943c:	str	x8, [sp, #8]
   19440:	b.hi	19638 <lzma_lzma_preset@@XZ_5.0+0x784>  // b.pmore
   19444:	adrp	x8, 2f000 <lzma_mode_is_supported@@XZ_5.0+0x14a98>
   19448:	add	x8, x8, #0xc88
   1944c:	ldr	x11, [sp, #8]
   19450:	ldrsw	x10, [x8, x11, lsl #2]
   19454:	add	x9, x8, x10
   19458:	br	x9
   1945c:	ldur	x8, [x29, #-16]
   19460:	add	x8, x8, #0x110
   19464:	ldur	x9, [x29, #-16]
   19468:	ldr	x9, [x9, #32]
   1946c:	mov	x10, #0x8                   	// #8
   19470:	mul	x9, x10, x9
   19474:	add	x8, x8, x9
   19478:	ldr	x8, [x8]
   1947c:	ldrh	w11, [x8]
   19480:	strh	w11, [sp, #22]
   19484:	ldur	x8, [x29, #-16]
   19488:	ldr	w11, [x8, #16]
   1948c:	lsr	w11, w11, #11
   19490:	ldrh	w12, [sp, #22]
   19494:	mul	w11, w11, w12
   19498:	ldur	x8, [x29, #-16]
   1949c:	str	w11, [x8, #16]
   194a0:	ldrh	w11, [sp, #22]
   194a4:	mov	w12, #0x800                 	// #2048
   194a8:	subs	w11, w12, w11
   194ac:	ldrh	w12, [sp, #22]
   194b0:	add	w11, w12, w11, lsr #5
   194b4:	strh	w11, [sp, #22]
   194b8:	ldrh	w11, [sp, #22]
   194bc:	ldur	x8, [x29, #-16]
   194c0:	add	x8, x8, #0x110
   194c4:	ldur	x9, [x29, #-16]
   194c8:	ldr	x9, [x9, #32]
   194cc:	mul	x9, x10, x9
   194d0:	add	x8, x8, x9
   194d4:	ldr	x8, [x8]
   194d8:	strh	w11, [x8]
   194dc:	b	19638 <lzma_lzma_preset@@XZ_5.0+0x784>
   194e0:	ldur	x8, [x29, #-16]
   194e4:	add	x8, x8, #0x110
   194e8:	ldur	x9, [x29, #-16]
   194ec:	ldr	x9, [x9, #32]
   194f0:	mov	x10, #0x8                   	// #8
   194f4:	mul	x9, x10, x9
   194f8:	add	x8, x8, x9
   194fc:	ldr	x8, [x8]
   19500:	ldrh	w11, [x8]
   19504:	strh	w11, [sp, #20]
   19508:	ldrh	w11, [sp, #20]
   1950c:	ldur	x8, [x29, #-16]
   19510:	ldr	w12, [x8, #16]
   19514:	lsr	w12, w12, #11
   19518:	mul	w11, w11, w12
   1951c:	str	w11, [sp, #16]
   19520:	ldr	w11, [sp, #16]
   19524:	mov	w8, w11
   19528:	ldur	x9, [x29, #-16]
   1952c:	ldr	x13, [x9]
   19530:	add	x8, x13, x8
   19534:	str	x8, [x9]
   19538:	ldr	w11, [sp, #16]
   1953c:	ldur	x8, [x29, #-16]
   19540:	ldr	w12, [x8, #16]
   19544:	subs	w11, w12, w11
   19548:	str	w11, [x8, #16]
   1954c:	ldrh	w11, [sp, #20]
   19550:	ldrh	w12, [sp, #20]
   19554:	subs	w11, w12, w11, asr #5
   19558:	strh	w11, [sp, #20]
   1955c:	ldrh	w11, [sp, #20]
   19560:	ldur	x8, [x29, #-16]
   19564:	add	x8, x8, #0x110
   19568:	ldur	x9, [x29, #-16]
   1956c:	ldr	x9, [x9, #32]
   19570:	mul	x9, x10, x9
   19574:	add	x8, x8, x9
   19578:	ldr	x8, [x8]
   1957c:	strh	w11, [x8]
   19580:	b	19638 <lzma_lzma_preset@@XZ_5.0+0x784>
   19584:	ldur	x8, [x29, #-16]
   19588:	ldr	w9, [x8, #16]
   1958c:	lsr	w9, w9, #1
   19590:	str	w9, [x8, #16]
   19594:	b	19638 <lzma_lzma_preset@@XZ_5.0+0x784>
   19598:	ldur	x8, [x29, #-16]
   1959c:	ldr	w9, [x8, #16]
   195a0:	lsr	w9, w9, #1
   195a4:	str	w9, [x8, #16]
   195a8:	ldur	x8, [x29, #-16]
   195ac:	ldr	w9, [x8, #16]
   195b0:	mov	w8, w9
   195b4:	ldur	x10, [x29, #-16]
   195b8:	ldr	x11, [x10]
   195bc:	add	x8, x11, x8
   195c0:	str	x8, [x10]
   195c4:	b	19638 <lzma_lzma_preset@@XZ_5.0+0x784>
   195c8:	ldur	x8, [x29, #-16]
   195cc:	mov	w9, #0xffffffff            	// #-1
   195d0:	str	w9, [x8, #16]
   195d4:	ldur	x0, [x29, #-16]
   195d8:	ldur	x1, [x29, #-24]
   195dc:	ldr	x2, [sp, #32]
   195e0:	ldr	x3, [sp, #24]
   195e4:	bl	1a6e4 <lzma_mode_is_supported@@XZ_5.0+0x17c>
   195e8:	tbnz	w0, #0, 195f0 <lzma_lzma_preset@@XZ_5.0+0x73c>
   195ec:	b	19600 <lzma_lzma_preset@@XZ_5.0+0x74c>
   195f0:	mov	w8, #0x1                   	// #1
   195f4:	and	w8, w8, #0x1
   195f8:	sturb	w8, [x29, #-1]
   195fc:	b	19668 <lzma_lzma_preset@@XZ_5.0+0x7b4>
   19600:	ldur	x8, [x29, #-16]
   19604:	ldr	x9, [x8, #32]
   19608:	add	x9, x9, #0x1
   1960c:	str	x9, [x8, #32]
   19610:	ldur	x8, [x29, #-16]
   19614:	ldr	x8, [x8, #24]
   19618:	cmp	x9, x8
   1961c:	b.cc	195d4 <lzma_lzma_preset@@XZ_5.0+0x720>  // b.lo, b.ul, b.last
   19620:	ldur	x0, [x29, #-16]
   19624:	bl	19dc0 <lzma_lzma_preset@@XZ_5.0+0xf0c>
   19628:	mov	w8, wzr
   1962c:	and	w8, w8, #0x1
   19630:	sturb	w8, [x29, #-1]
   19634:	b	19668 <lzma_lzma_preset@@XZ_5.0+0x7b4>
   19638:	ldur	x8, [x29, #-16]
   1963c:	ldr	x9, [x8, #32]
   19640:	add	x9, x9, #0x1
   19644:	str	x9, [x8, #32]
   19648:	b	193b0 <lzma_lzma_preset@@XZ_5.0+0x4fc>
   1964c:	ldur	x8, [x29, #-16]
   19650:	str	xzr, [x8, #24]
   19654:	ldur	x8, [x29, #-16]
   19658:	str	xzr, [x8, #32]
   1965c:	mov	w9, wzr
   19660:	and	w9, w9, #0x1
   19664:	sturb	w9, [x29, #-1]
   19668:	ldurb	w8, [x29, #-1]
   1966c:	and	w0, w8, #0x1
   19670:	ldp	x29, x30, [sp, #64]
   19674:	add	sp, sp, #0x50
   19678:	ret
   1967c:	sub	sp, sp, #0x10
   19680:	str	x0, [sp, #8]
   19684:	ldr	x8, [sp, #8]
   19688:	ldr	x8, [x8, #8]
   1968c:	add	x8, x8, #0x5
   19690:	subs	x0, x8, #0x1
   19694:	add	sp, sp, #0x10
   19698:	ret
   1969c:	sub	sp, sp, #0x30
   196a0:	stp	x29, x30, [sp, #32]
   196a4:	add	x29, sp, #0x20
   196a8:	mov	w8, #0xffffffff            	// #-1
   196ac:	stur	x0, [x29, #-8]
   196b0:	str	x1, [sp, #16]
   196b4:	str	w2, [sp, #12]
   196b8:	str	w3, [sp, #8]
   196bc:	str	w4, [sp, #4]
   196c0:	ldr	w9, [sp, #4]
   196c4:	ldur	x10, [x29, #-8]
   196c8:	ldr	w11, [x10, #2960]
   196cc:	and	w9, w9, w11
   196d0:	str	w9, [sp]
   196d4:	ldr	w9, [sp, #12]
   196d8:	cmp	w9, w8
   196dc:	b.ne	1973c <lzma_lzma_preset@@XZ_5.0+0x888>  // b.any
   196e0:	ldur	x0, [x29, #-8]
   196e4:	ldur	x8, [x29, #-8]
   196e8:	mov	x9, #0x6b9c                	// #27548
   196ec:	add	x8, x8, x9
   196f0:	ldur	x9, [x29, #-8]
   196f4:	ldr	w10, [x9, #736]
   196f8:	mov	w9, w10
   196fc:	mov	x11, #0x20                  	// #32
   19700:	mul	x9, x11, x9
   19704:	add	x8, x8, x9
   19708:	ldr	w10, [sp]
   1970c:	mov	w9, w10
   19710:	mov	x11, #0x2                   	// #2
   19714:	mul	x9, x11, x9
   19718:	add	x1, x8, x9
   1971c:	mov	w10, wzr
   19720:	mov	w2, w10
   19724:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   19728:	ldur	x0, [x29, #-8]
   1972c:	ldr	x1, [sp, #16]
   19730:	ldr	w2, [sp, #4]
   19734:	bl	1a7f8 <lzma_mode_is_supported@@XZ_5.0+0x290>
   19738:	b	19820 <lzma_lzma_preset@@XZ_5.0+0x96c>
   1973c:	ldur	x0, [x29, #-8]
   19740:	ldur	x8, [x29, #-8]
   19744:	mov	x9, #0x6b9c                	// #27548
   19748:	add	x8, x8, x9
   1974c:	ldur	x9, [x29, #-8]
   19750:	ldr	w10, [x9, #736]
   19754:	mov	w9, w10
   19758:	mov	x11, #0x20                  	// #32
   1975c:	mul	x9, x11, x9
   19760:	add	x8, x8, x9
   19764:	ldr	w10, [sp]
   19768:	mov	w9, w10
   1976c:	mov	x11, #0x2                   	// #2
   19770:	mul	x9, x11, x9
   19774:	add	x1, x8, x9
   19778:	mov	w2, #0x1                   	// #1
   1977c:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   19780:	ldr	w10, [sp, #12]
   19784:	cmp	w10, #0x4
   19788:	b.cs	197d4 <lzma_lzma_preset@@XZ_5.0+0x920>  // b.hs, b.nlast
   1978c:	ldur	x0, [x29, #-8]
   19790:	ldur	x8, [x29, #-8]
   19794:	mov	x9, #0x6d1c                	// #27932
   19798:	add	x8, x8, x9
   1979c:	ldur	x9, [x29, #-8]
   197a0:	ldr	w10, [x9, #736]
   197a4:	mov	w9, w10
   197a8:	mov	x11, #0x2                   	// #2
   197ac:	mul	x9, x11, x9
   197b0:	add	x1, x8, x9
   197b4:	mov	w2, #0x1                   	// #1
   197b8:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   197bc:	ldur	x0, [x29, #-8]
   197c0:	ldr	w1, [sp]
   197c4:	ldr	w2, [sp, #12]
   197c8:	ldr	w3, [sp, #8]
   197cc:	bl	1a9a4 <lzma_mode_is_supported@@XZ_5.0+0x43c>
   197d0:	b	19820 <lzma_lzma_preset@@XZ_5.0+0x96c>
   197d4:	ldur	x0, [x29, #-8]
   197d8:	ldur	x8, [x29, #-8]
   197dc:	mov	x9, #0x6d1c                	// #27932
   197e0:	add	x8, x8, x9
   197e4:	ldur	x9, [x29, #-8]
   197e8:	ldr	w10, [x9, #736]
   197ec:	mov	w9, w10
   197f0:	mov	x11, #0x2                   	// #2
   197f4:	mul	x9, x11, x9
   197f8:	add	x1, x8, x9
   197fc:	mov	w10, wzr
   19800:	mov	w2, w10
   19804:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   19808:	ldur	x0, [x29, #-8]
   1980c:	ldr	w1, [sp]
   19810:	ldr	w10, [sp, #12]
   19814:	subs	w2, w10, #0x4
   19818:	ldr	w3, [sp, #8]
   1981c:	bl	1ac14 <lzma_mode_is_supported@@XZ_5.0+0x6ac>
   19820:	ldr	w8, [sp, #8]
   19824:	ldr	x9, [sp, #16]
   19828:	ldr	w10, [x9, #28]
   1982c:	subs	w8, w10, w8
   19830:	str	w8, [x9, #28]
   19834:	ldp	x29, x30, [sp, #32]
   19838:	add	sp, sp, #0x30
   1983c:	ret
   19840:	sub	sp, sp, #0x40
   19844:	stp	x29, x30, [sp, #48]
   19848:	add	x29, sp, #0x30
   1984c:	mov	w2, #0x1                   	// #1
   19850:	mov	w8, wzr
   19854:	mov	w9, #0xffffffff            	// #-1
   19858:	mov	w3, #0x2                   	// #2
   1985c:	stur	x0, [x29, #-8]
   19860:	stur	w1, [x29, #-12]
   19864:	ldur	w10, [x29, #-12]
   19868:	ldur	x11, [x29, #-8]
   1986c:	ldr	w12, [x11, #2960]
   19870:	and	w10, w10, w12
   19874:	stur	w10, [x29, #-16]
   19878:	ldur	x0, [x29, #-8]
   1987c:	ldur	x11, [x29, #-8]
   19880:	mov	x13, #0x6b9c                	// #27548
   19884:	add	x11, x11, x13
   19888:	ldur	x13, [x29, #-8]
   1988c:	ldr	w10, [x13, #736]
   19890:	mov	w13, w10
   19894:	mov	x14, #0x20                  	// #32
   19898:	mul	x13, x14, x13
   1989c:	add	x11, x11, x13
   198a0:	ldur	w10, [x29, #-16]
   198a4:	mov	w13, w10
   198a8:	mov	x14, #0x2                   	// #2
   198ac:	mul	x13, x14, x13
   198b0:	add	x1, x11, x13
   198b4:	stur	w8, [x29, #-20]
   198b8:	str	w9, [sp, #24]
   198bc:	str	w3, [sp, #20]
   198c0:	str	x14, [sp, #8]
   198c4:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   198c8:	ldur	x0, [x29, #-8]
   198cc:	ldur	x11, [x29, #-8]
   198d0:	mov	x13, #0x6d1c                	// #27932
   198d4:	add	x11, x11, x13
   198d8:	ldur	x13, [x29, #-8]
   198dc:	ldr	w8, [x13, #736]
   198e0:	mov	w13, w8
   198e4:	ldr	x14, [sp, #8]
   198e8:	mul	x13, x14, x13
   198ec:	add	x1, x11, x13
   198f0:	ldur	w2, [x29, #-20]
   198f4:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   198f8:	ldur	x0, [x29, #-8]
   198fc:	ldur	w1, [x29, #-16]
   19900:	ldr	w2, [sp, #24]
   19904:	ldr	w3, [sp, #20]
   19908:	bl	1ac14 <lzma_mode_is_supported@@XZ_5.0+0x6ac>
   1990c:	ldp	x29, x30, [sp, #48]
   19910:	add	sp, sp, #0x40
   19914:	ret
   19918:	sub	sp, sp, #0x10
   1991c:	str	x0, [sp, #8]
   19920:	str	xzr, [sp]
   19924:	ldr	x8, [sp]
   19928:	cmp	x8, #0x5
   1992c:	b.cs	19960 <lzma_lzma_preset@@XZ_5.0+0xaac>  // b.hs, b.nlast
   19930:	ldr	x8, [sp, #8]
   19934:	add	x8, x8, #0x28
   19938:	ldr	x9, [sp, #8]
   1993c:	ldr	x10, [x9, #24]
   19940:	add	x11, x10, #0x1
   19944:	str	x11, [x9, #24]
   19948:	mov	w12, #0x4                   	// #4
   1994c:	str	w12, [x8, x10, lsl #2]
   19950:	ldr	x8, [sp]
   19954:	add	x8, x8, #0x1
   19958:	str	x8, [sp]
   1995c:	b	19924 <lzma_lzma_preset@@XZ_5.0+0xa70>
   19960:	add	sp, sp, #0x10
   19964:	ret
   19968:	sub	sp, sp, #0x60
   1996c:	stp	x29, x30, [sp, #80]
   19970:	add	x29, sp, #0x50
   19974:	stur	x0, [x29, #-16]
   19978:	stur	x1, [x29, #-24]
   1997c:	ldur	x0, [x29, #-24]
   19980:	bl	19d20 <lzma_lzma_preset@@XZ_5.0+0xe6c>
   19984:	tbnz	w0, #0, 19994 <lzma_lzma_preset@@XZ_5.0+0xae0>
   19988:	mov	w8, #0x8                   	// #8
   1998c:	stur	w8, [x29, #-4]
   19990:	b	19d10 <lzma_lzma_preset@@XZ_5.0+0xe5c>
   19994:	ldur	x8, [x29, #-24]
   19998:	ldr	w9, [x8, #28]
   1999c:	mov	w10, #0x1                   	// #1
   199a0:	lsl	w9, w10, w9
   199a4:	subs	w9, w9, #0x1
   199a8:	ldur	x8, [x29, #-16]
   199ac:	str	w9, [x8, #2960]
   199b0:	ldur	x8, [x29, #-24]
   199b4:	ldr	w9, [x8, #20]
   199b8:	ldur	x8, [x29, #-16]
   199bc:	str	w9, [x8, #2964]
   199c0:	ldur	x8, [x29, #-24]
   199c4:	ldr	w9, [x8, #24]
   199c8:	lsl	w9, w10, w9
   199cc:	subs	w9, w9, #0x1
   199d0:	ldur	x8, [x29, #-16]
   199d4:	str	w9, [x8, #2968]
   199d8:	ldur	x0, [x29, #-16]
   199dc:	bl	19dc0 <lzma_lzma_preset@@XZ_5.0+0xf0c>
   199e0:	ldur	x8, [x29, #-16]
   199e4:	str	wzr, [x8, #736]
   199e8:	stur	xzr, [x29, #-32]
   199ec:	ldur	x8, [x29, #-32]
   199f0:	cmp	x8, #0x4
   199f4:	b.cs	19a1c <lzma_lzma_preset@@XZ_5.0+0xb68>  // b.hs, b.nlast
   199f8:	ldur	x8, [x29, #-16]
   199fc:	add	x8, x8, #0x2e4
   19a00:	ldur	x9, [x29, #-32]
   19a04:	mov	w10, wzr
   19a08:	str	w10, [x8, x9, lsl #2]
   19a0c:	ldur	x8, [x29, #-32]
   19a10:	add	x8, x8, #0x1
   19a14:	stur	x8, [x29, #-32]
   19a18:	b	199ec <lzma_lzma_preset@@XZ_5.0+0xb38>
   19a1c:	ldur	x8, [x29, #-16]
   19a20:	add	x0, x8, #0xb9c
   19a24:	ldur	x8, [x29, #-24]
   19a28:	ldr	w1, [x8, #20]
   19a2c:	ldur	x8, [x29, #-24]
   19a30:	ldr	w2, [x8, #24]
   19a34:	bl	19e0c <lzma_lzma_preset@@XZ_5.0+0xf58>
   19a38:	str	xzr, [sp, #40]
   19a3c:	ldr	x8, [sp, #40]
   19a40:	cmp	x8, #0xc
   19a44:	b.cs	19b58 <lzma_lzma_preset@@XZ_5.0+0xca4>  // b.hs, b.nlast
   19a48:	str	xzr, [sp, #32]
   19a4c:	ldr	x8, [sp, #32]
   19a50:	ldur	x9, [x29, #-16]
   19a54:	ldr	w10, [x9, #2960]
   19a58:	mov	w9, w10
   19a5c:	cmp	x8, x9
   19a60:	b.hi	19ad0 <lzma_lzma_preset@@XZ_5.0+0xc1c>  // b.pmore
   19a64:	ldur	x8, [x29, #-16]
   19a68:	mov	x9, #0x6b9c                	// #27548
   19a6c:	add	x8, x8, x9
   19a70:	ldr	x9, [sp, #40]
   19a74:	mov	x10, #0x20                  	// #32
   19a78:	mul	x9, x10, x9
   19a7c:	add	x8, x8, x9
   19a80:	ldr	x9, [sp, #32]
   19a84:	mov	x11, #0x2                   	// #2
   19a88:	mul	x9, x11, x9
   19a8c:	add	x8, x8, x9
   19a90:	mov	w12, #0x400                 	// #1024
   19a94:	strh	w12, [x8]
   19a98:	ldur	x8, [x29, #-16]
   19a9c:	mov	x9, #0x6d7c                	// #28028
   19aa0:	add	x8, x8, x9
   19aa4:	ldr	x9, [sp, #40]
   19aa8:	mul	x9, x10, x9
   19aac:	add	x8, x8, x9
   19ab0:	ldr	x9, [sp, #32]
   19ab4:	mul	x9, x11, x9
   19ab8:	add	x8, x8, x9
   19abc:	strh	w12, [x8]
   19ac0:	ldr	x8, [sp, #32]
   19ac4:	add	x8, x8, #0x1
   19ac8:	str	x8, [sp, #32]
   19acc:	b	19a4c <lzma_lzma_preset@@XZ_5.0+0xb98>
   19ad0:	ldur	x8, [x29, #-16]
   19ad4:	mov	x9, #0x6d1c                	// #27932
   19ad8:	add	x8, x8, x9
   19adc:	ldr	x9, [sp, #40]
   19ae0:	mov	x10, #0x2                   	// #2
   19ae4:	mul	x9, x10, x9
   19ae8:	add	x8, x8, x9
   19aec:	mov	w11, #0x400                 	// #1024
   19af0:	strh	w11, [x8]
   19af4:	ldur	x8, [x29, #-16]
   19af8:	mov	x9, #0x6d34                	// #27956
   19afc:	add	x8, x8, x9
   19b00:	ldr	x9, [sp, #40]
   19b04:	mul	x9, x10, x9
   19b08:	add	x8, x8, x9
   19b0c:	strh	w11, [x8]
   19b10:	ldur	x8, [x29, #-16]
   19b14:	mov	x9, #0x6d4c                	// #27980
   19b18:	add	x8, x8, x9
   19b1c:	ldr	x9, [sp, #40]
   19b20:	mul	x9, x10, x9
   19b24:	add	x8, x8, x9
   19b28:	strh	w11, [x8]
   19b2c:	ldur	x8, [x29, #-16]
   19b30:	mov	x9, #0x6d64                	// #28004
   19b34:	add	x8, x8, x9
   19b38:	ldr	x9, [sp, #40]
   19b3c:	mul	x9, x10, x9
   19b40:	add	x8, x8, x9
   19b44:	strh	w11, [x8]
   19b48:	ldr	x8, [sp, #40]
   19b4c:	add	x8, x8, #0x1
   19b50:	str	x8, [sp, #40]
   19b54:	b	19a3c <lzma_lzma_preset@@XZ_5.0+0xb88>
   19b58:	str	xzr, [sp, #24]
   19b5c:	ldr	x8, [sp, #24]
   19b60:	cmp	x8, #0x72
   19b64:	b.cs	19b9c <lzma_lzma_preset@@XZ_5.0+0xce8>  // b.hs, b.nlast
   19b68:	ldur	x8, [x29, #-16]
   19b6c:	mov	x9, #0x70fc                	// #28924
   19b70:	add	x8, x8, x9
   19b74:	ldr	x9, [sp, #24]
   19b78:	mov	x10, #0x2                   	// #2
   19b7c:	mul	x9, x10, x9
   19b80:	add	x8, x8, x9
   19b84:	mov	w11, #0x400                 	// #1024
   19b88:	strh	w11, [x8]
   19b8c:	ldr	x8, [sp, #24]
   19b90:	add	x8, x8, #0x1
   19b94:	str	x8, [sp, #24]
   19b98:	b	19b5c <lzma_lzma_preset@@XZ_5.0+0xca8>
   19b9c:	str	xzr, [sp, #16]
   19ba0:	ldr	x8, [sp, #16]
   19ba4:	cmp	x8, #0x4
   19ba8:	b.cs	19c14 <lzma_lzma_preset@@XZ_5.0+0xd60>  // b.hs, b.nlast
   19bac:	str	wzr, [sp, #12]
   19bb0:	ldr	w8, [sp, #12]
   19bb4:	cmp	w8, #0x40
   19bb8:	b.cs	19c04 <lzma_lzma_preset@@XZ_5.0+0xd50>  // b.hs, b.nlast
   19bbc:	ldur	x8, [x29, #-16]
   19bc0:	mov	x9, #0x6efc                	// #28412
   19bc4:	add	x8, x8, x9
   19bc8:	ldr	x9, [sp, #16]
   19bcc:	mov	x10, #0x80                  	// #128
   19bd0:	mul	x9, x10, x9
   19bd4:	add	x8, x8, x9
   19bd8:	ldr	w11, [sp, #12]
   19bdc:	mov	w9, w11
   19be0:	mov	x10, #0x2                   	// #2
   19be4:	mul	x9, x10, x9
   19be8:	add	x8, x8, x9
   19bec:	mov	w11, #0x400                 	// #1024
   19bf0:	strh	w11, [x8]
   19bf4:	ldr	w8, [sp, #12]
   19bf8:	add	w8, w8, #0x1
   19bfc:	str	w8, [sp, #12]
   19c00:	b	19bb0 <lzma_lzma_preset@@XZ_5.0+0xcfc>
   19c04:	ldr	x8, [sp, #16]
   19c08:	add	x8, x8, #0x1
   19c0c:	str	x8, [sp, #16]
   19c10:	b	19ba0 <lzma_lzma_preset@@XZ_5.0+0xcec>
   19c14:	str	wzr, [sp, #8]
   19c18:	ldr	w8, [sp, #8]
   19c1c:	cmp	w8, #0x10
   19c20:	b.cs	19c5c <lzma_lzma_preset@@XZ_5.0+0xda8>  // b.hs, b.nlast
   19c24:	ldur	x8, [x29, #-16]
   19c28:	mov	x9, #0x71e0                	// #29152
   19c2c:	add	x8, x8, x9
   19c30:	ldr	w10, [sp, #8]
   19c34:	mov	w9, w10
   19c38:	mov	x11, #0x2                   	// #2
   19c3c:	mul	x9, x11, x9
   19c40:	add	x8, x8, x9
   19c44:	mov	w10, #0x400                 	// #1024
   19c48:	strh	w10, [x8]
   19c4c:	ldr	w8, [sp, #8]
   19c50:	add	w8, w8, #0x1
   19c54:	str	w8, [sp, #8]
   19c58:	b	19c18 <lzma_lzma_preset@@XZ_5.0+0xd64>
   19c5c:	ldur	x8, [x29, #-16]
   19c60:	mov	x9, #0x7200                	// #29184
   19c64:	add	x0, x8, x9
   19c68:	ldur	x8, [x29, #-24]
   19c6c:	ldr	w10, [x8, #28]
   19c70:	mov	w11, #0x1                   	// #1
   19c74:	lsl	w1, w11, w10
   19c78:	ldur	x8, [x29, #-16]
   19c7c:	ldrb	w10, [x8, #2956]
   19c80:	and	w2, w10, #0x1
   19c84:	str	w11, [sp, #4]
   19c88:	bl	19eb4 <lzma_lzma_preset@@XZ_5.0+0x1000>
   19c8c:	ldur	x8, [x29, #-16]
   19c90:	mov	x9, #0xba48                	// #47688
   19c94:	add	x0, x8, x9
   19c98:	ldur	x8, [x29, #-24]
   19c9c:	ldr	w10, [x8, #28]
   19ca0:	ldr	w11, [sp, #4]
   19ca4:	lsl	w1, w11, w10
   19ca8:	ldur	x8, [x29, #-16]
   19cac:	ldrb	w10, [x8, #2956]
   19cb0:	and	w2, w10, #0x1
   19cb4:	bl	19eb4 <lzma_lzma_preset@@XZ_5.0+0x1000>
   19cb8:	ldur	x8, [x29, #-16]
   19cbc:	mov	x9, #0xe94                 	// #3732
   19cc0:	movk	x9, #0x1, lsl #16
   19cc4:	add	x8, x8, x9
   19cc8:	mov	w10, #0x7fffffff            	// #2147483647
   19ccc:	str	w10, [x8]
   19cd0:	ldur	x8, [x29, #-16]
   19cd4:	mov	x9, #0xed8                 	// #3800
   19cd8:	movk	x9, #0x1, lsl #16
   19cdc:	add	x8, x8, x9
   19ce0:	str	w10, [x8]
   19ce4:	ldur	x8, [x29, #-16]
   19ce8:	mov	x9, #0xedc                 	// #3804
   19cec:	movk	x9, #0x1, lsl #16
   19cf0:	add	x8, x8, x9
   19cf4:	str	wzr, [x8]
   19cf8:	ldur	x8, [x29, #-16]
   19cfc:	mov	x9, #0xee0                 	// #3808
   19d00:	movk	x9, #0x1, lsl #16
   19d04:	add	x8, x8, x9
   19d08:	str	wzr, [x8]
   19d0c:	stur	wzr, [x29, #-4]
   19d10:	ldur	w0, [x29, #-4]
   19d14:	ldp	x29, x30, [sp, #80]
   19d18:	add	sp, sp, #0x60
   19d1c:	ret
   19d20:	sub	sp, sp, #0x20
   19d24:	stp	x29, x30, [sp, #16]
   19d28:	add	x29, sp, #0x10
   19d2c:	str	x0, [sp, #8]
   19d30:	ldr	x0, [sp, #8]
   19d34:	bl	1a434 <lzma_lzma_preset@@XZ_5.0+0x1580>
   19d38:	mov	w8, #0x0                   	// #0
   19d3c:	str	w8, [sp, #4]
   19d40:	tbnz	w0, #0, 19d48 <lzma_lzma_preset@@XZ_5.0+0xe94>
   19d44:	b	19dac <lzma_lzma_preset@@XZ_5.0+0xef8>
   19d48:	ldr	x8, [sp, #8]
   19d4c:	ldr	w9, [x8, #36]
   19d50:	mov	w10, #0x0                   	// #0
   19d54:	cmp	w9, #0x2
   19d58:	str	w10, [sp, #4]
   19d5c:	b.cc	19dac <lzma_lzma_preset@@XZ_5.0+0xef8>  // b.lo, b.ul, b.last
   19d60:	ldr	x8, [sp, #8]
   19d64:	ldr	w9, [x8, #36]
   19d68:	mov	w10, #0x0                   	// #0
   19d6c:	cmp	w9, #0x111
   19d70:	str	w10, [sp, #4]
   19d74:	b.hi	19dac <lzma_lzma_preset@@XZ_5.0+0xef8>  // b.pmore
   19d78:	ldr	x8, [sp, #8]
   19d7c:	ldr	w9, [x8, #32]
   19d80:	mov	w10, #0x1                   	// #1
   19d84:	cmp	w9, #0x1
   19d88:	str	w10, [sp]
   19d8c:	b.eq	19da4 <lzma_lzma_preset@@XZ_5.0+0xef0>  // b.none
   19d90:	ldr	x8, [sp, #8]
   19d94:	ldr	w9, [x8, #32]
   19d98:	cmp	w9, #0x2
   19d9c:	cset	w9, eq  // eq = none
   19da0:	str	w9, [sp]
   19da4:	ldr	w8, [sp]
   19da8:	str	w8, [sp, #4]
   19dac:	ldr	w8, [sp, #4]
   19db0:	and	w0, w8, #0x1
   19db4:	ldp	x29, x30, [sp, #16]
   19db8:	add	sp, sp, #0x20
   19dbc:	ret
   19dc0:	sub	sp, sp, #0x10
   19dc4:	mov	x8, #0x1                   	// #1
   19dc8:	mov	w9, #0xffffffff            	// #-1
   19dcc:	mov	w10, #0x0                   	// #0
   19dd0:	str	x0, [sp, #8]
   19dd4:	ldr	x11, [sp, #8]
   19dd8:	str	xzr, [x11]
   19ddc:	ldr	x11, [sp, #8]
   19de0:	str	x8, [x11, #8]
   19de4:	ldr	x8, [sp, #8]
   19de8:	str	w9, [x8, #16]
   19dec:	ldr	x8, [sp, #8]
   19df0:	strb	w10, [x8, #20]
   19df4:	ldr	x8, [sp, #8]
   19df8:	str	xzr, [x8, #24]
   19dfc:	ldr	x8, [sp, #8]
   19e00:	str	xzr, [x8, #32]
   19e04:	add	sp, sp, #0x10
   19e08:	ret
   19e0c:	sub	sp, sp, #0x20
   19e10:	mov	w8, #0x1                   	// #1
   19e14:	str	x0, [sp, #24]
   19e18:	str	w1, [sp, #20]
   19e1c:	str	w2, [sp, #16]
   19e20:	ldr	w9, [sp, #20]
   19e24:	ldr	w10, [sp, #16]
   19e28:	add	w9, w9, w10
   19e2c:	lsl	w8, w8, w9
   19e30:	str	w8, [sp, #12]
   19e34:	str	wzr, [sp, #8]
   19e38:	ldr	w8, [sp, #8]
   19e3c:	ldr	w9, [sp, #12]
   19e40:	cmp	w8, w9
   19e44:	b.cs	19eac <lzma_lzma_preset@@XZ_5.0+0xff8>  // b.hs, b.nlast
   19e48:	str	wzr, [sp, #4]
   19e4c:	ldr	w8, [sp, #4]
   19e50:	cmp	w8, #0x300
   19e54:	b.cs	19e9c <lzma_lzma_preset@@XZ_5.0+0xfe8>  // b.hs, b.nlast
   19e58:	ldr	x8, [sp, #24]
   19e5c:	ldr	w9, [sp, #8]
   19e60:	mov	w10, w9
   19e64:	mov	x11, #0x600                 	// #1536
   19e68:	mul	x10, x11, x10
   19e6c:	add	x8, x8, x10
   19e70:	ldr	w9, [sp, #4]
   19e74:	mov	w10, w9
   19e78:	mov	x11, #0x2                   	// #2
   19e7c:	mul	x10, x11, x10
   19e80:	add	x8, x8, x10
   19e84:	mov	w9, #0x400                 	// #1024
   19e88:	strh	w9, [x8]
   19e8c:	ldr	w8, [sp, #4]
   19e90:	add	w8, w8, #0x1
   19e94:	str	w8, [sp, #4]
   19e98:	b	19e4c <lzma_lzma_preset@@XZ_5.0+0xf98>
   19e9c:	ldr	w8, [sp, #8]
   19ea0:	add	w8, w8, #0x1
   19ea4:	str	w8, [sp, #8]
   19ea8:	b	19e38 <lzma_lzma_preset@@XZ_5.0+0xf84>
   19eac:	add	sp, sp, #0x20
   19eb0:	ret
   19eb4:	sub	sp, sp, #0x40
   19eb8:	stp	x29, x30, [sp, #48]
   19ebc:	add	x29, sp, #0x30
   19ec0:	mov	w8, #0x400                 	// #1024
   19ec4:	mov	w9, #0x1                   	// #1
   19ec8:	stur	x0, [x29, #-8]
   19ecc:	stur	w1, [x29, #-12]
   19ed0:	and	w9, w2, w9
   19ed4:	sturb	w9, [x29, #-13]
   19ed8:	ldur	x10, [x29, #-8]
   19edc:	strh	w8, [x10]
   19ee0:	ldur	x10, [x29, #-8]
   19ee4:	strh	w8, [x10, #2]
   19ee8:	str	xzr, [sp, #24]
   19eec:	ldr	x8, [sp, #24]
   19ef0:	ldur	w9, [x29, #-12]
   19ef4:	mov	w10, w9
   19ef8:	cmp	x8, x10
   19efc:	b.cs	19fb8 <lzma_lzma_preset@@XZ_5.0+0x1104>  // b.hs, b.nlast
   19f00:	str	wzr, [sp, #20]
   19f04:	ldr	w8, [sp, #20]
   19f08:	cmp	w8, #0x8
   19f0c:	b.cs	19f54 <lzma_lzma_preset@@XZ_5.0+0x10a0>  // b.hs, b.nlast
   19f10:	ldur	x8, [x29, #-8]
   19f14:	add	x8, x8, #0x4
   19f18:	ldr	x9, [sp, #24]
   19f1c:	mov	x10, #0x10                  	// #16
   19f20:	mul	x9, x10, x9
   19f24:	add	x8, x8, x9
   19f28:	ldr	w11, [sp, #20]
   19f2c:	mov	w9, w11
   19f30:	mov	x10, #0x2                   	// #2
   19f34:	mul	x9, x10, x9
   19f38:	add	x8, x8, x9
   19f3c:	mov	w11, #0x400                 	// #1024
   19f40:	strh	w11, [x8]
   19f44:	ldr	w8, [sp, #20]
   19f48:	add	w8, w8, #0x1
   19f4c:	str	w8, [sp, #20]
   19f50:	b	19f04 <lzma_lzma_preset@@XZ_5.0+0x1050>
   19f54:	str	wzr, [sp, #16]
   19f58:	ldr	w8, [sp, #16]
   19f5c:	cmp	w8, #0x8
   19f60:	b.cs	19fa8 <lzma_lzma_preset@@XZ_5.0+0x10f4>  // b.hs, b.nlast
   19f64:	ldur	x8, [x29, #-8]
   19f68:	add	x8, x8, #0x104
   19f6c:	ldr	x9, [sp, #24]
   19f70:	mov	x10, #0x10                  	// #16
   19f74:	mul	x9, x10, x9
   19f78:	add	x8, x8, x9
   19f7c:	ldr	w11, [sp, #16]
   19f80:	mov	w9, w11
   19f84:	mov	x10, #0x2                   	// #2
   19f88:	mul	x9, x10, x9
   19f8c:	add	x8, x8, x9
   19f90:	mov	w11, #0x400                 	// #1024
   19f94:	strh	w11, [x8]
   19f98:	ldr	w8, [sp, #16]
   19f9c:	add	w8, w8, #0x1
   19fa0:	str	w8, [sp, #16]
   19fa4:	b	19f58 <lzma_lzma_preset@@XZ_5.0+0x10a4>
   19fa8:	ldr	x8, [sp, #24]
   19fac:	add	x8, x8, #0x1
   19fb0:	str	x8, [sp, #24]
   19fb4:	b	19eec <lzma_lzma_preset@@XZ_5.0+0x1038>
   19fb8:	str	wzr, [sp, #12]
   19fbc:	ldr	w8, [sp, #12]
   19fc0:	cmp	w8, #0x100
   19fc4:	b.cs	19ffc <lzma_lzma_preset@@XZ_5.0+0x1148>  // b.hs, b.nlast
   19fc8:	ldur	x8, [x29, #-8]
   19fcc:	add	x8, x8, #0x204
   19fd0:	ldr	w9, [sp, #12]
   19fd4:	mov	w10, w9
   19fd8:	mov	x11, #0x2                   	// #2
   19fdc:	mul	x10, x11, x10
   19fe0:	add	x8, x8, x10
   19fe4:	mov	w9, #0x400                 	// #1024
   19fe8:	strh	w9, [x8]
   19fec:	ldr	w8, [sp, #12]
   19ff0:	add	w8, w8, #0x1
   19ff4:	str	w8, [sp, #12]
   19ff8:	b	19fbc <lzma_lzma_preset@@XZ_5.0+0x1108>
   19ffc:	ldurb	w8, [x29, #-13]
   1a000:	tbnz	w8, #0, 1a034 <lzma_lzma_preset@@XZ_5.0+0x1180>
   1a004:	str	wzr, [sp, #8]
   1a008:	ldr	w8, [sp, #8]
   1a00c:	ldur	w9, [x29, #-12]
   1a010:	cmp	w8, w9
   1a014:	b.cs	1a034 <lzma_lzma_preset@@XZ_5.0+0x1180>  // b.hs, b.nlast
   1a018:	ldur	x0, [x29, #-8]
   1a01c:	ldr	w1, [sp, #8]
   1a020:	bl	1b094 <lzma_mode_is_supported@@XZ_5.0+0xb2c>
   1a024:	ldr	w8, [sp, #8]
   1a028:	add	w8, w8, #0x1
   1a02c:	str	w8, [sp, #8]
   1a030:	b	1a008 <lzma_lzma_preset@@XZ_5.0+0x1154>
   1a034:	ldp	x29, x30, [sp, #48]
   1a038:	add	sp, sp, #0x40
   1a03c:	ret
   1a040:	sub	sp, sp, #0x50
   1a044:	stp	x29, x30, [sp, #64]
   1a048:	add	x29, sp, #0x40
   1a04c:	stur	x0, [x29, #-16]
   1a050:	stur	x1, [x29, #-24]
   1a054:	str	x2, [sp, #32]
   1a058:	str	x3, [sp, #24]
   1a05c:	ldur	x8, [x29, #-16]
   1a060:	ldr	x8, [x8]
   1a064:	cbnz	x8, 1a098 <lzma_lzma_preset@@XZ_5.0+0x11e4>
   1a068:	ldur	x1, [x29, #-24]
   1a06c:	mov	x0, #0xcee8                	// #52968
   1a070:	movk	x0, #0x3, lsl #16
   1a074:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   1a078:	ldur	x8, [x29, #-16]
   1a07c:	str	x0, [x8]
   1a080:	ldur	x8, [x29, #-16]
   1a084:	ldr	x8, [x8]
   1a088:	cbnz	x8, 1a098 <lzma_lzma_preset@@XZ_5.0+0x11e4>
   1a08c:	mov	w8, #0x5                   	// #5
   1a090:	stur	w8, [x29, #-4]
   1a094:	b	1a1ec <lzma_lzma_preset@@XZ_5.0+0x1338>
   1a098:	ldur	x8, [x29, #-16]
   1a09c:	ldr	x8, [x8]
   1a0a0:	str	x8, [sp, #16]
   1a0a4:	ldr	x8, [sp, #32]
   1a0a8:	ldr	w9, [x8, #32]
   1a0ac:	cmp	w9, #0x1
   1a0b0:	str	w9, [sp, #8]
   1a0b4:	b.eq	1a0cc <lzma_lzma_preset@@XZ_5.0+0x1218>  // b.none
   1a0b8:	b	1a0bc <lzma_lzma_preset@@XZ_5.0+0x1208>
   1a0bc:	ldr	w8, [sp, #8]
   1a0c0:	cmp	w8, #0x2
   1a0c4:	b.eq	1a0dc <lzma_lzma_preset@@XZ_5.0+0x1228>  // b.none
   1a0c8:	b	1a180 <lzma_lzma_preset@@XZ_5.0+0x12cc>
   1a0cc:	ldr	x8, [sp, #16]
   1a0d0:	mov	w9, #0x1                   	// #1
   1a0d4:	strb	w9, [x8, #2956]
   1a0d8:	b	1a18c <lzma_lzma_preset@@XZ_5.0+0x12d8>
   1a0dc:	ldr	x8, [sp, #16]
   1a0e0:	mov	w9, #0x0                   	// #0
   1a0e4:	strb	w9, [x8, #2956]
   1a0e8:	str	wzr, [sp, #12]
   1a0ec:	ldr	w8, [sp, #12]
   1a0f0:	mov	w9, #0x1                   	// #1
   1a0f4:	lsl	w8, w9, w8
   1a0f8:	ldr	x10, [sp, #32]
   1a0fc:	ldr	w9, [x10]
   1a100:	cmp	w8, w9
   1a104:	b.cs	1a118 <lzma_lzma_preset@@XZ_5.0+0x1264>  // b.hs, b.nlast
   1a108:	ldr	w8, [sp, #12]
   1a10c:	add	w8, w8, #0x1
   1a110:	str	w8, [sp, #12]
   1a114:	b	1a0ec <lzma_lzma_preset@@XZ_5.0+0x1238>
   1a118:	ldr	w8, [sp, #12]
   1a11c:	mov	w9, #0x2                   	// #2
   1a120:	mul	w8, w8, w9
   1a124:	ldr	x10, [sp, #16]
   1a128:	mov	x11, #0xe90                 	// #3728
   1a12c:	movk	x11, #0x1, lsl #16
   1a130:	add	x10, x10, x11
   1a134:	str	w8, [x10]
   1a138:	ldr	x10, [sp, #32]
   1a13c:	ldr	w8, [x10, #36]
   1a140:	add	w8, w8, #0x1
   1a144:	subs	w8, w8, #0x2
   1a148:	ldr	x10, [sp, #16]
   1a14c:	mov	x11, #0xba04                	// #47620
   1a150:	add	x10, x10, x11
   1a154:	str	w8, [x10]
   1a158:	ldr	x10, [sp, #32]
   1a15c:	ldr	w8, [x10, #36]
   1a160:	add	w8, w8, #0x1
   1a164:	subs	w8, w8, #0x2
   1a168:	ldr	x10, [sp, #16]
   1a16c:	mov	x11, #0x24c                 	// #588
   1a170:	movk	x11, #0x1, lsl #16
   1a174:	add	x10, x10, x11
   1a178:	str	w8, [x10]
   1a17c:	b	1a18c <lzma_lzma_preset@@XZ_5.0+0x12d8>
   1a180:	mov	w8, #0x8                   	// #8
   1a184:	stur	w8, [x29, #-4]
   1a188:	b	1a1ec <lzma_lzma_preset@@XZ_5.0+0x1338>
   1a18c:	ldr	x8, [sp, #32]
   1a190:	ldr	x8, [x8, #8]
   1a194:	mov	w9, #0x0                   	// #0
   1a198:	str	w9, [sp, #4]
   1a19c:	cbz	x8, 1a1b4 <lzma_lzma_preset@@XZ_5.0+0x1300>
   1a1a0:	ldr	x8, [sp, #32]
   1a1a4:	ldr	w9, [x8, #16]
   1a1a8:	cmp	w9, #0x0
   1a1ac:	cset	w9, hi  // hi = pmore
   1a1b0:	str	w9, [sp, #4]
   1a1b4:	ldr	w8, [sp, #4]
   1a1b8:	ldr	x9, [sp, #16]
   1a1bc:	and	w8, w8, #0x1
   1a1c0:	strb	w8, [x9, #2957]
   1a1c4:	ldr	x9, [sp, #16]
   1a1c8:	mov	w8, #0x0                   	// #0
   1a1cc:	strb	w8, [x9, #2958]
   1a1d0:	ldr	x0, [sp, #24]
   1a1d4:	ldr	x1, [sp, #32]
   1a1d8:	bl	1a1fc <lzma_lzma_preset@@XZ_5.0+0x1348>
   1a1dc:	ldr	x0, [sp, #16]
   1a1e0:	ldr	x1, [sp, #32]
   1a1e4:	bl	19968 <lzma_lzma_preset@@XZ_5.0+0xab4>
   1a1e8:	stur	w0, [x29, #-4]
   1a1ec:	ldur	w0, [x29, #-4]
   1a1f0:	ldp	x29, x30, [sp, #64]
   1a1f4:	add	sp, sp, #0x50
   1a1f8:	ret
   1a1fc:	sub	sp, sp, #0x10
   1a200:	mov	x8, #0x1000                	// #4096
   1a204:	mov	x9, #0x1001                	// #4097
   1a208:	mov	x10, #0x111                 	// #273
   1a20c:	str	x0, [sp, #8]
   1a210:	str	x1, [sp]
   1a214:	ldr	x11, [sp, #8]
   1a218:	str	x8, [x11]
   1a21c:	ldr	x8, [sp]
   1a220:	ldr	w12, [x8]
   1a224:	mov	w8, w12
   1a228:	ldr	x11, [sp, #8]
   1a22c:	str	x8, [x11, #8]
   1a230:	ldr	x8, [sp, #8]
   1a234:	str	x9, [x8, #16]
   1a238:	ldr	x8, [sp, #8]
   1a23c:	str	x10, [x8, #24]
   1a240:	ldr	x8, [sp]
   1a244:	ldr	w12, [x8, #36]
   1a248:	mov	w8, w12
   1a24c:	ldr	x9, [sp, #8]
   1a250:	str	x8, [x9, #32]
   1a254:	ldr	x8, [sp]
   1a258:	ldr	w12, [x8, #40]
   1a25c:	ldr	x8, [sp, #8]
   1a260:	str	w12, [x8, #40]
   1a264:	ldr	x8, [sp]
   1a268:	ldr	w12, [x8, #44]
   1a26c:	ldr	x8, [sp, #8]
   1a270:	str	w12, [x8, #44]
   1a274:	ldr	x8, [sp]
   1a278:	ldr	x8, [x8, #8]
   1a27c:	ldr	x9, [sp, #8]
   1a280:	str	x8, [x9, #48]
   1a284:	ldr	x8, [sp]
   1a288:	ldr	w12, [x8, #16]
   1a28c:	ldr	x8, [sp, #8]
   1a290:	str	w12, [x8, #56]
   1a294:	add	sp, sp, #0x10
   1a298:	ret
   1a29c:	sub	sp, sp, #0x30
   1a2a0:	stp	x29, x30, [sp, #32]
   1a2a4:	add	x29, sp, #0x20
   1a2a8:	adrp	x3, 1a000 <lzma_lzma_preset@@XZ_5.0+0x114c>
   1a2ac:	add	x3, x3, #0x2d8
   1a2b0:	stur	x0, [x29, #-8]
   1a2b4:	str	x1, [sp, #16]
   1a2b8:	str	x2, [sp, #8]
   1a2bc:	ldur	x0, [x29, #-8]
   1a2c0:	ldr	x1, [sp, #16]
   1a2c4:	ldr	x2, [sp, #8]
   1a2c8:	bl	157d4 <lzma_crc64@@XZ_5.0+0x3518>
   1a2cc:	ldp	x29, x30, [sp, #32]
   1a2d0:	add	sp, sp, #0x30
   1a2d4:	ret
   1a2d8:	sub	sp, sp, #0x30
   1a2dc:	stp	x29, x30, [sp, #32]
   1a2e0:	add	x29, sp, #0x20
   1a2e4:	adrp	x8, 1b000 <lzma_mode_is_supported@@XZ_5.0+0xa98>
   1a2e8:	add	x8, x8, #0x560
   1a2ec:	stur	x0, [x29, #-8]
   1a2f0:	str	x1, [sp, #16]
   1a2f4:	str	x2, [sp, #8]
   1a2f8:	str	x3, [sp]
   1a2fc:	ldur	x9, [x29, #-8]
   1a300:	str	x8, [x9, #8]
   1a304:	ldur	x0, [x29, #-8]
   1a308:	ldr	x1, [sp, #16]
   1a30c:	ldr	x2, [sp, #8]
   1a310:	ldr	x3, [sp]
   1a314:	bl	1a040 <lzma_lzma_preset@@XZ_5.0+0x118c>
   1a318:	ldp	x29, x30, [sp, #32]
   1a31c:	add	sp, sp, #0x30
   1a320:	ret
   1a324:	sub	sp, sp, #0x70
   1a328:	stp	x29, x30, [sp, #96]
   1a32c:	add	x29, sp, #0x60
   1a330:	stur	x0, [x29, #-16]
   1a334:	ldur	x0, [x29, #-16]
   1a338:	bl	19d20 <lzma_lzma_preset@@XZ_5.0+0xe6c>
   1a33c:	tbnz	w0, #0, 1a34c <lzma_lzma_preset@@XZ_5.0+0x1498>
   1a340:	mov	x8, #0xffffffffffffffff    	// #-1
   1a344:	stur	x8, [x29, #-8]
   1a348:	b	1a39c <lzma_lzma_preset@@XZ_5.0+0x14e8>
   1a34c:	ldur	x1, [x29, #-16]
   1a350:	add	x8, sp, #0x10
   1a354:	mov	x0, x8
   1a358:	str	x8, [sp]
   1a35c:	bl	1a1fc <lzma_lzma_preset@@XZ_5.0+0x1348>
   1a360:	ldr	x0, [sp]
   1a364:	bl	1520c <lzma_crc64@@XZ_5.0+0x2f50>
   1a368:	str	x0, [sp, #8]
   1a36c:	ldr	x8, [sp, #8]
   1a370:	mov	x9, #0xffffffffffffffff    	// #-1
   1a374:	cmp	x8, x9
   1a378:	b.ne	1a388 <lzma_lzma_preset@@XZ_5.0+0x14d4>  // b.any
   1a37c:	mov	x8, #0xffffffffffffffff    	// #-1
   1a380:	stur	x8, [x29, #-8]
   1a384:	b	1a39c <lzma_lzma_preset@@XZ_5.0+0x14e8>
   1a388:	ldr	x8, [sp, #8]
   1a38c:	mov	x9, #0xcee8                	// #52968
   1a390:	movk	x9, #0x3, lsl #16
   1a394:	add	x8, x9, x8
   1a398:	stur	x8, [x29, #-8]
   1a39c:	ldur	x0, [x29, #-8]
   1a3a0:	ldp	x29, x30, [sp, #96]
   1a3a4:	add	sp, sp, #0x70
   1a3a8:	ret
   1a3ac:	sub	sp, sp, #0x30
   1a3b0:	stp	x29, x30, [sp, #32]
   1a3b4:	add	x29, sp, #0x20
   1a3b8:	str	x0, [sp, #16]
   1a3bc:	str	x1, [sp, #8]
   1a3c0:	ldr	x0, [sp, #16]
   1a3c4:	bl	1a434 <lzma_lzma_preset@@XZ_5.0+0x1580>
   1a3c8:	tbnz	w0, #0, 1a3dc <lzma_lzma_preset@@XZ_5.0+0x1528>
   1a3cc:	mov	w8, #0x1                   	// #1
   1a3d0:	and	w8, w8, #0x1
   1a3d4:	sturb	w8, [x29, #-1]
   1a3d8:	b	1a420 <lzma_lzma_preset@@XZ_5.0+0x156c>
   1a3dc:	ldr	x8, [sp, #16]
   1a3e0:	ldr	w9, [x8, #28]
   1a3e4:	mov	w10, #0x5                   	// #5
   1a3e8:	mul	w9, w9, w10
   1a3ec:	ldr	x8, [sp, #16]
   1a3f0:	ldr	w10, [x8, #24]
   1a3f4:	add	w9, w9, w10
   1a3f8:	mov	w10, #0x9                   	// #9
   1a3fc:	mul	w9, w9, w10
   1a400:	ldr	x8, [sp, #16]
   1a404:	ldr	w10, [x8, #20]
   1a408:	add	w9, w9, w10
   1a40c:	ldr	x8, [sp, #8]
   1a410:	strb	w9, [x8]
   1a414:	mov	w9, wzr
   1a418:	and	w9, w9, #0x1
   1a41c:	sturb	w9, [x29, #-1]
   1a420:	ldurb	w8, [x29, #-1]
   1a424:	and	w0, w8, #0x1
   1a428:	ldp	x29, x30, [sp, #32]
   1a42c:	add	sp, sp, #0x30
   1a430:	ret
   1a434:	sub	sp, sp, #0x10
   1a438:	str	x0, [sp, #8]
   1a43c:	ldr	x8, [sp, #8]
   1a440:	ldr	w9, [x8, #20]
   1a444:	mov	w10, #0x0                   	// #0
   1a448:	cmp	w9, #0x4
   1a44c:	str	w10, [sp, #4]
   1a450:	b.hi	1a4a4 <lzma_lzma_preset@@XZ_5.0+0x15f0>  // b.pmore
   1a454:	ldr	x8, [sp, #8]
   1a458:	ldr	w9, [x8, #24]
   1a45c:	mov	w10, #0x0                   	// #0
   1a460:	cmp	w9, #0x4
   1a464:	str	w10, [sp, #4]
   1a468:	b.hi	1a4a4 <lzma_lzma_preset@@XZ_5.0+0x15f0>  // b.pmore
   1a46c:	ldr	x8, [sp, #8]
   1a470:	ldr	w9, [x8, #20]
   1a474:	ldr	x8, [sp, #8]
   1a478:	ldr	w10, [x8, #24]
   1a47c:	add	w9, w9, w10
   1a480:	mov	w10, #0x0                   	// #0
   1a484:	cmp	w9, #0x4
   1a488:	str	w10, [sp, #4]
   1a48c:	b.hi	1a4a4 <lzma_lzma_preset@@XZ_5.0+0x15f0>  // b.pmore
   1a490:	ldr	x8, [sp, #8]
   1a494:	ldr	w9, [x8, #28]
   1a498:	cmp	w9, #0x4
   1a49c:	cset	w9, ls  // ls = plast
   1a4a0:	str	w9, [sp, #4]
   1a4a4:	ldr	w8, [sp, #4]
   1a4a8:	and	w0, w8, #0x1
   1a4ac:	add	sp, sp, #0x10
   1a4b0:	ret
   1a4b4:	sub	sp, sp, #0x30
   1a4b8:	stp	x29, x30, [sp, #32]
   1a4bc:	add	x29, sp, #0x20
   1a4c0:	str	x0, [sp, #16]
   1a4c4:	str	x1, [sp, #8]
   1a4c8:	ldr	x8, [sp, #16]
   1a4cc:	str	x8, [sp]
   1a4d0:	ldr	x0, [sp]
   1a4d4:	ldr	x1, [sp, #8]
   1a4d8:	bl	1a3ac <lzma_lzma_preset@@XZ_5.0+0x14f8>
   1a4dc:	tbnz	w0, #0, 1a4e4 <lzma_lzma_preset@@XZ_5.0+0x1630>
   1a4e0:	b	1a4f0 <lzma_lzma_preset@@XZ_5.0+0x163c>
   1a4e4:	mov	w8, #0xb                   	// #11
   1a4e8:	stur	w8, [x29, #-4]
   1a4ec:	b	1a508 <lzma_lzma_preset@@XZ_5.0+0x1654>
   1a4f0:	ldr	x8, [sp, #8]
   1a4f4:	add	x0, x8, #0x1
   1a4f8:	ldr	x8, [sp]
   1a4fc:	ldr	w1, [x8]
   1a500:	bl	1a518 <lzma_lzma_preset@@XZ_5.0+0x1664>
   1a504:	stur	wzr, [x29, #-4]
   1a508:	ldur	w0, [x29, #-4]
   1a50c:	ldp	x29, x30, [sp, #32]
   1a510:	add	sp, sp, #0x30
   1a514:	ret
   1a518:	sub	sp, sp, #0x10
   1a51c:	str	x0, [sp, #8]
   1a520:	str	w1, [sp, #4]
   1a524:	ldr	w8, [sp, #4]
   1a528:	ldr	x9, [sp, #8]
   1a52c:	strb	w8, [x9]
   1a530:	ldr	w8, [sp, #4]
   1a534:	lsr	w8, w8, #8
   1a538:	ldr	x9, [sp, #8]
   1a53c:	strb	w8, [x9, #1]
   1a540:	ldr	w8, [sp, #4]
   1a544:	lsr	w8, w8, #16
   1a548:	ldr	x9, [sp, #8]
   1a54c:	strb	w8, [x9, #2]
   1a550:	ldr	w8, [sp, #4]
   1a554:	lsr	w8, w8, #24
   1a558:	ldr	x9, [sp, #8]
   1a55c:	strb	w8, [x9, #3]
   1a560:	add	sp, sp, #0x10
   1a564:	ret

000000000001a568 <lzma_mode_is_supported@@XZ_5.0>:
   1a568:	sub	sp, sp, #0x10
   1a56c:	str	w0, [sp, #12]
   1a570:	ldr	w8, [sp, #12]
   1a574:	mov	w9, #0x1                   	// #1
   1a578:	cmp	w8, #0x1
   1a57c:	str	w9, [sp, #8]
   1a580:	b.eq	1a594 <lzma_mode_is_supported@@XZ_5.0+0x2c>  // b.none
   1a584:	ldr	w8, [sp, #12]
   1a588:	cmp	w8, #0x2
   1a58c:	cset	w8, eq  // eq = none
   1a590:	str	w8, [sp, #8]
   1a594:	ldr	w8, [sp, #8]
   1a598:	and	w8, w8, #0x1
   1a59c:	mov	w0, w8
   1a5a0:	add	sp, sp, #0x10
   1a5a4:	ret
   1a5a8:	sub	sp, sp, #0x20
   1a5ac:	stp	x29, x30, [sp, #16]
   1a5b0:	add	x29, sp, #0x10
   1a5b4:	str	x0, [sp, #8]
   1a5b8:	str	w1, [sp, #4]
   1a5bc:	ldr	w8, [sp, #4]
   1a5c0:	cbz	w8, 1a5ec <lzma_mode_is_supported@@XZ_5.0+0x84>
   1a5c4:	ldr	x8, [sp, #8]
   1a5c8:	ldr	x8, [x8, #56]
   1a5cc:	ldr	x0, [sp, #8]
   1a5d0:	ldr	w1, [sp, #4]
   1a5d4:	blr	x8
   1a5d8:	ldr	w9, [sp, #4]
   1a5dc:	ldr	x8, [sp, #8]
   1a5e0:	ldr	w10, [x8, #28]
   1a5e4:	add	w9, w10, w9
   1a5e8:	str	w9, [x8, #28]
   1a5ec:	ldp	x29, x30, [sp, #16]
   1a5f0:	add	sp, sp, #0x20
   1a5f4:	ret
   1a5f8:	sub	sp, sp, #0x20
   1a5fc:	str	x0, [sp, #24]
   1a600:	str	x1, [sp, #16]
   1a604:	str	w2, [sp, #12]
   1a608:	ldr	w8, [sp, #12]
   1a60c:	ldr	x9, [sp, #24]
   1a610:	add	x9, x9, #0x28
   1a614:	ldr	x10, [sp, #24]
   1a618:	ldr	x10, [x10, #24]
   1a61c:	str	w8, [x9, x10, lsl #2]
   1a620:	ldr	x9, [sp, #16]
   1a624:	ldr	x10, [sp, #24]
   1a628:	add	x10, x10, #0x110
   1a62c:	ldr	x11, [sp, #24]
   1a630:	ldr	x11, [x11, #24]
   1a634:	mov	x12, #0x8                   	// #8
   1a638:	mul	x11, x12, x11
   1a63c:	add	x10, x10, x11
   1a640:	str	x9, [x10]
   1a644:	ldr	x9, [sp, #24]
   1a648:	ldr	x10, [x9, #24]
   1a64c:	add	x10, x10, #0x1
   1a650:	str	x10, [x9, #24]
   1a654:	add	sp, sp, #0x20
   1a658:	ret
   1a65c:	sub	sp, sp, #0x30
   1a660:	stp	x29, x30, [sp, #32]
   1a664:	add	x29, sp, #0x20
   1a668:	mov	w8, #0x1                   	// #1
   1a66c:	stur	x0, [x29, #-8]
   1a670:	str	x1, [sp, #16]
   1a674:	str	w2, [sp, #12]
   1a678:	str	w3, [sp, #8]
   1a67c:	str	w8, [sp, #4]
   1a680:	ldr	w8, [sp, #8]
   1a684:	ldr	w9, [sp, #12]
   1a688:	subs	w9, w9, #0x1
   1a68c:	str	w9, [sp, #12]
   1a690:	lsr	w8, w8, w9
   1a694:	and	w8, w8, #0x1
   1a698:	str	w8, [sp]
   1a69c:	ldur	x0, [x29, #-8]
   1a6a0:	ldr	x10, [sp, #16]
   1a6a4:	ldr	w8, [sp, #4]
   1a6a8:	mov	w11, w8
   1a6ac:	mov	x12, #0x2                   	// #2
   1a6b0:	mul	x11, x12, x11
   1a6b4:	add	x1, x10, x11
   1a6b8:	ldr	w2, [sp]
   1a6bc:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1a6c0:	ldr	w8, [sp, #4]
   1a6c4:	ldr	w9, [sp]
   1a6c8:	add	w8, w9, w8, lsl #1
   1a6cc:	str	w8, [sp, #4]
   1a6d0:	ldr	w8, [sp, #12]
   1a6d4:	cbnz	w8, 1a680 <lzma_mode_is_supported@@XZ_5.0+0x118>
   1a6d8:	ldp	x29, x30, [sp, #32]
   1a6dc:	add	sp, sp, #0x30
   1a6e0:	ret
   1a6e4:	sub	sp, sp, #0x30
   1a6e8:	mov	w8, #0xff000000            	// #-16777216
   1a6ec:	str	x0, [sp, #32]
   1a6f0:	str	x1, [sp, #24]
   1a6f4:	str	x2, [sp, #16]
   1a6f8:	str	x3, [sp, #8]
   1a6fc:	ldr	x9, [sp, #32]
   1a700:	ldr	x9, [x9]
   1a704:	cmp	w9, w8
   1a708:	b.cc	1a71c <lzma_mode_is_supported@@XZ_5.0+0x1b4>  // b.lo, b.ul, b.last
   1a70c:	ldr	x8, [sp, #32]
   1a710:	ldr	x8, [x8]
   1a714:	lsr	x8, x8, #32
   1a718:	cbz	w8, 1a7b4 <lzma_mode_is_supported@@XZ_5.0+0x24c>
   1a71c:	ldr	x8, [sp, #16]
   1a720:	ldr	x8, [x8]
   1a724:	ldr	x9, [sp, #8]
   1a728:	cmp	x8, x9
   1a72c:	b.ne	1a740 <lzma_mode_is_supported@@XZ_5.0+0x1d8>  // b.any
   1a730:	mov	w8, #0x1                   	// #1
   1a734:	and	w8, w8, #0x1
   1a738:	strb	w8, [sp, #47]
   1a73c:	b	1a7e8 <lzma_mode_is_supported@@XZ_5.0+0x280>
   1a740:	ldr	x8, [sp, #32]
   1a744:	ldrb	w9, [x8, #20]
   1a748:	ldr	x8, [sp, #32]
   1a74c:	ldr	x8, [x8]
   1a750:	lsr	x8, x8, #32
   1a754:	add	w8, w9, w8, uxtb
   1a758:	ldr	x10, [sp, #24]
   1a75c:	ldr	x11, [sp, #16]
   1a760:	ldr	x11, [x11]
   1a764:	add	x10, x10, x11
   1a768:	strb	w8, [x10]
   1a76c:	ldr	x10, [sp, #16]
   1a770:	ldr	x11, [x10]
   1a774:	add	x11, x11, #0x1
   1a778:	str	x11, [x10]
   1a77c:	ldr	x10, [sp, #32]
   1a780:	mov	w8, #0xff                  	// #255
   1a784:	strb	w8, [x10, #20]
   1a788:	ldr	x8, [sp, #32]
   1a78c:	ldr	x9, [x8, #8]
   1a790:	subs	x9, x9, #0x1
   1a794:	str	x9, [x8, #8]
   1a798:	cbnz	x9, 1a71c <lzma_mode_is_supported@@XZ_5.0+0x1b4>
   1a79c:	ldr	x8, [sp, #32]
   1a7a0:	ldr	x8, [x8]
   1a7a4:	lsr	x8, x8, #24
   1a7a8:	and	x8, x8, #0xff
   1a7ac:	ldr	x9, [sp, #32]
   1a7b0:	strb	w8, [x9, #20]
   1a7b4:	ldr	x8, [sp, #32]
   1a7b8:	ldr	x9, [x8, #8]
   1a7bc:	add	x9, x9, #0x1
   1a7c0:	str	x9, [x8, #8]
   1a7c4:	ldr	x8, [sp, #32]
   1a7c8:	ldr	x8, [x8]
   1a7cc:	and	x8, x8, #0xffffff
   1a7d0:	lsl	x8, x8, #8
   1a7d4:	ldr	x9, [sp, #32]
   1a7d8:	str	x8, [x9]
   1a7dc:	mov	w10, wzr
   1a7e0:	and	w10, w10, #0x1
   1a7e4:	strb	w10, [sp, #47]
   1a7e8:	ldrb	w8, [sp, #47]
   1a7ec:	and	w0, w8, #0x1
   1a7f0:	add	sp, sp, #0x30
   1a7f4:	ret
   1a7f8:	sub	sp, sp, #0x40
   1a7fc:	stp	x29, x30, [sp, #48]
   1a800:	add	x29, sp, #0x30
   1a804:	mov	w8, #0x8                   	// #8
   1a808:	stur	x0, [x29, #-8]
   1a80c:	stur	x1, [x29, #-16]
   1a810:	stur	w2, [x29, #-20]
   1a814:	ldur	x9, [x29, #-16]
   1a818:	ldr	x9, [x9]
   1a81c:	ldur	x10, [x29, #-16]
   1a820:	ldr	w11, [x10, #24]
   1a824:	ldur	x10, [x29, #-16]
   1a828:	ldr	w12, [x10, #28]
   1a82c:	subs	w11, w11, w12
   1a830:	mov	w10, w11
   1a834:	ubfx	x10, x10, #0, #32
   1a838:	add	x9, x9, x10
   1a83c:	ldrb	w11, [x9]
   1a840:	sturb	w11, [x29, #-21]
   1a844:	ldur	x9, [x29, #-8]
   1a848:	add	x9, x9, #0xb9c
   1a84c:	ldur	w11, [x29, #-20]
   1a850:	ldur	x10, [x29, #-8]
   1a854:	ldr	w12, [x10, #2968]
   1a858:	and	w11, w11, w12
   1a85c:	ldur	x10, [x29, #-8]
   1a860:	ldr	w12, [x10, #2964]
   1a864:	lsl	w11, w11, w12
   1a868:	ldur	x10, [x29, #-16]
   1a86c:	ldr	x10, [x10]
   1a870:	ldur	x13, [x29, #-16]
   1a874:	ldr	w12, [x13, #24]
   1a878:	ldur	x13, [x29, #-16]
   1a87c:	ldr	w14, [x13, #28]
   1a880:	subs	w12, w12, w14
   1a884:	subs	w12, w12, #0x1
   1a888:	ldrb	w12, [x10, w12, uxtw]
   1a88c:	ldur	x10, [x29, #-8]
   1a890:	ldr	w14, [x10, #2964]
   1a894:	subs	w8, w8, w14
   1a898:	asr	w8, w12, w8
   1a89c:	add	w8, w11, w8
   1a8a0:	mov	w10, w8
   1a8a4:	ubfx	x10, x10, #0, #32
   1a8a8:	mov	x13, #0x600                 	// #1536
   1a8ac:	mul	x10, x13, x10
   1a8b0:	add	x9, x9, x10
   1a8b4:	str	x9, [sp, #16]
   1a8b8:	ldur	x9, [x29, #-8]
   1a8bc:	ldr	w8, [x9, #736]
   1a8c0:	cmp	w8, #0x7
   1a8c4:	b.cs	1a8e0 <lzma_mode_is_supported@@XZ_5.0+0x378>  // b.hs, b.nlast
   1a8c8:	ldur	x0, [x29, #-8]
   1a8cc:	ldr	x1, [sp, #16]
   1a8d0:	ldurb	w3, [x29, #-21]
   1a8d4:	mov	w2, #0x8                   	// #8
   1a8d8:	bl	1a65c <lzma_mode_is_supported@@XZ_5.0+0xf4>
   1a8dc:	b	1a934 <lzma_mode_is_supported@@XZ_5.0+0x3cc>
   1a8e0:	ldur	x8, [x29, #-16]
   1a8e4:	ldr	x8, [x8]
   1a8e8:	ldur	x9, [x29, #-16]
   1a8ec:	ldr	w10, [x9, #24]
   1a8f0:	ldur	x9, [x29, #-8]
   1a8f4:	ldr	w11, [x9, #740]
   1a8f8:	subs	w10, w10, w11
   1a8fc:	subs	w10, w10, #0x1
   1a900:	ldur	x9, [x29, #-16]
   1a904:	ldr	w11, [x9, #28]
   1a908:	subs	w10, w10, w11
   1a90c:	mov	w9, w10
   1a910:	ubfx	x9, x9, #0, #32
   1a914:	add	x8, x8, x9
   1a918:	ldrb	w10, [x8]
   1a91c:	strb	w10, [sp, #15]
   1a920:	ldur	x0, [x29, #-8]
   1a924:	ldr	x1, [sp, #16]
   1a928:	ldrb	w2, [sp, #15]
   1a92c:	ldurb	w3, [x29, #-21]
   1a930:	bl	1ae44 <lzma_mode_is_supported@@XZ_5.0+0x8dc>
   1a934:	ldur	x8, [x29, #-8]
   1a938:	ldr	w9, [x8, #736]
   1a93c:	cmp	w9, #0x3
   1a940:	b.hi	1a950 <lzma_mode_is_supported@@XZ_5.0+0x3e8>  // b.pmore
   1a944:	mov	w8, wzr
   1a948:	str	w8, [sp, #8]
   1a94c:	b	1a98c <lzma_mode_is_supported@@XZ_5.0+0x424>
   1a950:	ldur	x8, [x29, #-8]
   1a954:	ldr	w9, [x8, #736]
   1a958:	cmp	w9, #0x9
   1a95c:	b.hi	1a974 <lzma_mode_is_supported@@XZ_5.0+0x40c>  // b.pmore
   1a960:	ldur	x8, [x29, #-8]
   1a964:	ldr	w9, [x8, #736]
   1a968:	subs	w9, w9, #0x3
   1a96c:	str	w9, [sp, #4]
   1a970:	b	1a984 <lzma_mode_is_supported@@XZ_5.0+0x41c>
   1a974:	ldur	x8, [x29, #-8]
   1a978:	ldr	w9, [x8, #736]
   1a97c:	subs	w9, w9, #0x6
   1a980:	str	w9, [sp, #4]
   1a984:	ldr	w8, [sp, #4]
   1a988:	str	w8, [sp, #8]
   1a98c:	ldr	w8, [sp, #8]
   1a990:	ldur	x9, [x29, #-8]
   1a994:	str	w8, [x9, #736]
   1a998:	ldp	x29, x30, [sp, #48]
   1a99c:	add	sp, sp, #0x40
   1a9a0:	ret
   1a9a4:	sub	sp, sp, #0x40
   1a9a8:	stp	x29, x30, [sp, #48]
   1a9ac:	add	x29, sp, #0x30
   1a9b0:	stur	x0, [x29, #-8]
   1a9b4:	stur	w1, [x29, #-12]
   1a9b8:	stur	w2, [x29, #-16]
   1a9bc:	stur	w3, [x29, #-20]
   1a9c0:	ldur	w8, [x29, #-16]
   1a9c4:	cbnz	w8, 1aa54 <lzma_mode_is_supported@@XZ_5.0+0x4ec>
   1a9c8:	ldur	x0, [x29, #-8]
   1a9cc:	ldur	x8, [x29, #-8]
   1a9d0:	mov	x9, #0x6d34                	// #27956
   1a9d4:	add	x8, x8, x9
   1a9d8:	ldur	x9, [x29, #-8]
   1a9dc:	ldr	w10, [x9, #736]
   1a9e0:	mov	w9, w10
   1a9e4:	mov	x11, #0x2                   	// #2
   1a9e8:	mul	x9, x11, x9
   1a9ec:	add	x1, x8, x9
   1a9f0:	mov	w10, wzr
   1a9f4:	mov	w2, w10
   1a9f8:	str	x11, [sp, #16]
   1a9fc:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1aa00:	ldur	x0, [x29, #-8]
   1aa04:	ldur	x8, [x29, #-8]
   1aa08:	mov	x9, #0x6d7c                	// #28028
   1aa0c:	add	x8, x8, x9
   1aa10:	ldur	x9, [x29, #-8]
   1aa14:	ldr	w10, [x9, #736]
   1aa18:	mov	w9, w10
   1aa1c:	mov	x11, #0x20                  	// #32
   1aa20:	mul	x9, x11, x9
   1aa24:	add	x8, x8, x9
   1aa28:	ldur	w10, [x29, #-12]
   1aa2c:	mov	w9, w10
   1aa30:	ldr	x11, [sp, #16]
   1aa34:	mul	x9, x11, x9
   1aa38:	add	x1, x8, x9
   1aa3c:	ldur	w10, [x29, #-20]
   1aa40:	cmp	w10, #0x1
   1aa44:	cset	w10, ne  // ne = any
   1aa48:	and	w2, w10, #0x1
   1aa4c:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1aa50:	b	1ab90 <lzma_mode_is_supported@@XZ_5.0+0x628>
   1aa54:	ldur	x8, [x29, #-8]
   1aa58:	add	x8, x8, #0x2e4
   1aa5c:	ldur	w9, [x29, #-16]
   1aa60:	mov	w10, w9
   1aa64:	ldr	w9, [x8, x10, lsl #2]
   1aa68:	str	w9, [sp, #24]
   1aa6c:	ldur	x0, [x29, #-8]
   1aa70:	ldur	x8, [x29, #-8]
   1aa74:	mov	x10, #0x6d34                	// #27956
   1aa78:	add	x8, x8, x10
   1aa7c:	ldur	x10, [x29, #-8]
   1aa80:	ldr	w9, [x10, #736]
   1aa84:	mov	w10, w9
   1aa88:	mov	x11, #0x2                   	// #2
   1aa8c:	mul	x10, x11, x10
   1aa90:	add	x1, x8, x10
   1aa94:	mov	w2, #0x1                   	// #1
   1aa98:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1aa9c:	ldur	w9, [x29, #-16]
   1aaa0:	cmp	w9, #0x1
   1aaa4:	b.ne	1aae0 <lzma_mode_is_supported@@XZ_5.0+0x578>  // b.any
   1aaa8:	ldur	x0, [x29, #-8]
   1aaac:	ldur	x8, [x29, #-8]
   1aab0:	mov	x9, #0x6d4c                	// #27980
   1aab4:	add	x8, x8, x9
   1aab8:	ldur	x9, [x29, #-8]
   1aabc:	ldr	w10, [x9, #736]
   1aac0:	mov	w9, w10
   1aac4:	mov	x11, #0x2                   	// #2
   1aac8:	mul	x9, x11, x9
   1aacc:	add	x1, x8, x9
   1aad0:	mov	w10, wzr
   1aad4:	mov	w2, w10
   1aad8:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1aadc:	b	1ab74 <lzma_mode_is_supported@@XZ_5.0+0x60c>
   1aae0:	ldur	x0, [x29, #-8]
   1aae4:	ldur	x8, [x29, #-8]
   1aae8:	mov	x9, #0x6d4c                	// #27980
   1aaec:	add	x8, x8, x9
   1aaf0:	ldur	x9, [x29, #-8]
   1aaf4:	ldr	w10, [x9, #736]
   1aaf8:	mov	w9, w10
   1aafc:	mov	x11, #0x2                   	// #2
   1ab00:	mul	x9, x11, x9
   1ab04:	add	x1, x8, x9
   1ab08:	mov	w2, #0x1                   	// #1
   1ab0c:	str	x11, [sp, #8]
   1ab10:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1ab14:	ldur	x0, [x29, #-8]
   1ab18:	ldur	x8, [x29, #-8]
   1ab1c:	mov	x9, #0x6d64                	// #28004
   1ab20:	add	x8, x8, x9
   1ab24:	ldur	x9, [x29, #-8]
   1ab28:	ldr	w10, [x9, #736]
   1ab2c:	mov	w9, w10
   1ab30:	ldr	x11, [sp, #8]
   1ab34:	mul	x9, x11, x9
   1ab38:	add	x1, x8, x9
   1ab3c:	ldur	w10, [x29, #-16]
   1ab40:	subs	w2, w10, #0x2
   1ab44:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1ab48:	ldur	w10, [x29, #-16]
   1ab4c:	cmp	w10, #0x3
   1ab50:	b.ne	1ab64 <lzma_mode_is_supported@@XZ_5.0+0x5fc>  // b.any
   1ab54:	ldur	x8, [x29, #-8]
   1ab58:	ldr	w9, [x8, #748]
   1ab5c:	ldur	x8, [x29, #-8]
   1ab60:	str	w9, [x8, #752]
   1ab64:	ldur	x8, [x29, #-8]
   1ab68:	ldr	w9, [x8, #744]
   1ab6c:	ldur	x8, [x29, #-8]
   1ab70:	str	w9, [x8, #748]
   1ab74:	ldur	x8, [x29, #-8]
   1ab78:	ldr	w9, [x8, #740]
   1ab7c:	ldur	x8, [x29, #-8]
   1ab80:	str	w9, [x8, #744]
   1ab84:	ldr	w9, [sp, #24]
   1ab88:	ldur	x8, [x29, #-8]
   1ab8c:	str	w9, [x8, #740]
   1ab90:	ldur	w8, [x29, #-20]
   1ab94:	cmp	w8, #0x1
   1ab98:	b.ne	1abc0 <lzma_mode_is_supported@@XZ_5.0+0x658>  // b.any
   1ab9c:	ldur	x8, [x29, #-8]
   1aba0:	ldr	w9, [x8, #736]
   1aba4:	mov	w10, #0x9                   	// #9
   1aba8:	mov	w11, #0xb                   	// #11
   1abac:	cmp	w9, #0x7
   1abb0:	csel	w9, w10, w11, cc  // cc = lo, ul, last
   1abb4:	ldur	x8, [x29, #-8]
   1abb8:	str	w9, [x8, #736]
   1abbc:	b	1ac08 <lzma_mode_is_supported@@XZ_5.0+0x6a0>
   1abc0:	ldur	x0, [x29, #-8]
   1abc4:	ldur	x8, [x29, #-8]
   1abc8:	mov	x9, #0xba48                	// #47688
   1abcc:	add	x1, x8, x9
   1abd0:	ldur	w2, [x29, #-12]
   1abd4:	ldur	w3, [x29, #-20]
   1abd8:	ldur	x8, [x29, #-8]
   1abdc:	ldrb	w10, [x8, #2956]
   1abe0:	and	w4, w10, #0x1
   1abe4:	bl	1af18 <lzma_mode_is_supported@@XZ_5.0+0x9b0>
   1abe8:	ldur	x8, [x29, #-8]
   1abec:	ldr	w10, [x8, #736]
   1abf0:	mov	w11, #0xb                   	// #11
   1abf4:	mov	w12, #0x8                   	// #8
   1abf8:	cmp	w10, #0x7
   1abfc:	csel	w10, w12, w11, cc  // cc = lo, ul, last
   1ac00:	ldur	x8, [x29, #-8]
   1ac04:	str	w10, [x8, #736]
   1ac08:	ldp	x29, x30, [sp, #48]
   1ac0c:	add	sp, sp, #0x40
   1ac10:	ret
   1ac14:	sub	sp, sp, #0x40
   1ac18:	stp	x29, x30, [sp, #48]
   1ac1c:	add	x29, sp, #0x30
   1ac20:	mov	w8, #0x7                   	// #7
   1ac24:	mov	w9, #0xa                   	// #10
   1ac28:	stur	x0, [x29, #-8]
   1ac2c:	stur	w1, [x29, #-12]
   1ac30:	stur	w2, [x29, #-16]
   1ac34:	stur	w3, [x29, #-20]
   1ac38:	ldur	x10, [x29, #-8]
   1ac3c:	ldr	w11, [x10, #736]
   1ac40:	cmp	w11, #0x7
   1ac44:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   1ac48:	ldur	x10, [x29, #-8]
   1ac4c:	str	w8, [x10, #736]
   1ac50:	ldur	x0, [x29, #-8]
   1ac54:	ldur	x10, [x29, #-8]
   1ac58:	mov	x12, #0x7200                	// #29184
   1ac5c:	add	x1, x10, x12
   1ac60:	ldur	w2, [x29, #-12]
   1ac64:	ldur	w3, [x29, #-20]
   1ac68:	ldur	x10, [x29, #-8]
   1ac6c:	ldrb	w8, [x10, #2956]
   1ac70:	and	w4, w8, #0x1
   1ac74:	bl	1af18 <lzma_mode_is_supported@@XZ_5.0+0x9b0>
   1ac78:	ldur	w0, [x29, #-16]
   1ac7c:	bl	1b3f4 <lzma_mode_is_supported@@XZ_5.0+0xe8c>
   1ac80:	str	w0, [sp, #24]
   1ac84:	ldur	w8, [x29, #-20]
   1ac88:	cmp	w8, #0x6
   1ac8c:	b.cs	1aca0 <lzma_mode_is_supported@@XZ_5.0+0x738>  // b.hs, b.nlast
   1ac90:	ldur	w8, [x29, #-20]
   1ac94:	subs	w8, w8, #0x2
   1ac98:	str	w8, [sp, #4]
   1ac9c:	b	1aca8 <lzma_mode_is_supported@@XZ_5.0+0x740>
   1aca0:	mov	w8, #0x3                   	// #3
   1aca4:	str	w8, [sp, #4]
   1aca8:	ldr	w8, [sp, #4]
   1acac:	str	w8, [sp, #20]
   1acb0:	ldur	x0, [x29, #-8]
   1acb4:	ldur	x9, [x29, #-8]
   1acb8:	mov	x10, #0x6efc                	// #28412
   1acbc:	add	x9, x9, x10
   1acc0:	ldr	w8, [sp, #20]
   1acc4:	mov	w10, w8
   1acc8:	mov	x11, #0x80                  	// #128
   1accc:	mul	x10, x11, x10
   1acd0:	add	x1, x9, x10
   1acd4:	ldr	w3, [sp, #24]
   1acd8:	mov	w2, #0x6                   	// #6
   1acdc:	bl	1a65c <lzma_mode_is_supported@@XZ_5.0+0xf4>
   1ace0:	ldr	w8, [sp, #24]
   1ace4:	cmp	w8, #0x4
   1ace8:	b.cc	1ade0 <lzma_mode_is_supported@@XZ_5.0+0x878>  // b.lo, b.ul, b.last
   1acec:	ldr	w8, [sp, #24]
   1acf0:	lsr	w8, w8, #1
   1acf4:	subs	w8, w8, #0x1
   1acf8:	str	w8, [sp, #16]
   1acfc:	ldr	w8, [sp, #24]
   1ad00:	and	w8, w8, #0x1
   1ad04:	mov	w9, #0x2                   	// #2
   1ad08:	orr	w8, w9, w8
   1ad0c:	ldr	w9, [sp, #16]
   1ad10:	lsl	w8, w8, w9
   1ad14:	str	w8, [sp, #12]
   1ad18:	ldur	w8, [x29, #-16]
   1ad1c:	ldr	w9, [sp, #12]
   1ad20:	subs	w8, w8, w9
   1ad24:	str	w8, [sp, #8]
   1ad28:	ldr	w8, [sp, #24]
   1ad2c:	cmp	w8, #0xe
   1ad30:	b.cs	1ad80 <lzma_mode_is_supported@@XZ_5.0+0x818>  // b.hs, b.nlast
   1ad34:	ldur	x0, [x29, #-8]
   1ad38:	ldur	x8, [x29, #-8]
   1ad3c:	mov	x9, #0x70fc                	// #28924
   1ad40:	add	x8, x8, x9
   1ad44:	ldr	w10, [sp, #12]
   1ad48:	mov	w9, w10
   1ad4c:	mov	x11, #0x2                   	// #2
   1ad50:	mul	x9, x11, x9
   1ad54:	add	x8, x8, x9
   1ad58:	ldr	w10, [sp, #24]
   1ad5c:	mov	w9, w10
   1ad60:	mneg	x9, x9, x11
   1ad64:	add	x8, x8, x9
   1ad68:	mov	x9, #0xfffffffffffffffe    	// #-2
   1ad6c:	add	x1, x8, x9
   1ad70:	ldr	w2, [sp, #16]
   1ad74:	ldr	w3, [sp, #8]
   1ad78:	bl	1b47c <lzma_mode_is_supported@@XZ_5.0+0xf14>
   1ad7c:	b	1ade0 <lzma_mode_is_supported@@XZ_5.0+0x878>
   1ad80:	ldur	x0, [x29, #-8]
   1ad84:	ldr	w8, [sp, #8]
   1ad88:	lsr	w1, w8, #4
   1ad8c:	ldr	w8, [sp, #16]
   1ad90:	mov	w2, #0x4                   	// #4
   1ad94:	subs	w8, w8, #0x4
   1ad98:	str	w2, [sp]
   1ad9c:	mov	w2, w8
   1ada0:	bl	1b508 <lzma_mode_is_supported@@XZ_5.0+0xfa0>
   1ada4:	ldur	x0, [x29, #-8]
   1ada8:	ldur	x9, [x29, #-8]
   1adac:	mov	x10, #0x71e0                	// #29152
   1adb0:	add	x1, x9, x10
   1adb4:	ldr	w8, [sp, #8]
   1adb8:	and	w3, w8, #0xf
   1adbc:	ldr	w2, [sp]
   1adc0:	bl	1b47c <lzma_mode_is_supported@@XZ_5.0+0xf14>
   1adc4:	ldur	x9, [x29, #-8]
   1adc8:	mov	x10, #0xed8                 	// #3800
   1adcc:	movk	x10, #0x1, lsl #16
   1add0:	add	x9, x9, x10
   1add4:	ldr	w8, [x9]
   1add8:	add	w8, w8, #0x1
   1addc:	str	w8, [x9]
   1ade0:	ldur	x8, [x29, #-8]
   1ade4:	ldr	w9, [x8, #748]
   1ade8:	ldur	x8, [x29, #-8]
   1adec:	str	w9, [x8, #752]
   1adf0:	ldur	x8, [x29, #-8]
   1adf4:	ldr	w9, [x8, #744]
   1adf8:	ldur	x8, [x29, #-8]
   1adfc:	str	w9, [x8, #748]
   1ae00:	ldur	x8, [x29, #-8]
   1ae04:	ldr	w9, [x8, #740]
   1ae08:	ldur	x8, [x29, #-8]
   1ae0c:	str	w9, [x8, #744]
   1ae10:	ldur	w9, [x29, #-16]
   1ae14:	ldur	x8, [x29, #-8]
   1ae18:	str	w9, [x8, #740]
   1ae1c:	ldur	x8, [x29, #-8]
   1ae20:	mov	x10, #0xe94                 	// #3732
   1ae24:	movk	x10, #0x1, lsl #16
   1ae28:	add	x8, x8, x10
   1ae2c:	ldr	w9, [x8]
   1ae30:	add	w9, w9, #0x1
   1ae34:	str	w9, [x8]
   1ae38:	ldp	x29, x30, [sp, #48]
   1ae3c:	add	sp, sp, #0x40
   1ae40:	ret
   1ae44:	sub	sp, sp, #0x40
   1ae48:	stp	x29, x30, [sp, #48]
   1ae4c:	add	x29, sp, #0x30
   1ae50:	mov	w8, #0x100                 	// #256
   1ae54:	stur	x0, [x29, #-8]
   1ae58:	stur	x1, [x29, #-16]
   1ae5c:	stur	w2, [x29, #-20]
   1ae60:	str	w3, [sp, #24]
   1ae64:	str	w8, [sp, #20]
   1ae68:	ldr	w8, [sp, #24]
   1ae6c:	add	w8, w8, #0x100
   1ae70:	str	w8, [sp, #24]
   1ae74:	ldur	w8, [x29, #-20]
   1ae78:	lsl	w8, w8, #1
   1ae7c:	stur	w8, [x29, #-20]
   1ae80:	ldur	w8, [x29, #-20]
   1ae84:	ldr	w9, [sp, #20]
   1ae88:	and	w8, w8, w9
   1ae8c:	str	w8, [sp, #16]
   1ae90:	ldr	w8, [sp, #20]
   1ae94:	ldr	w9, [sp, #16]
   1ae98:	add	w8, w8, w9
   1ae9c:	ldr	w9, [sp, #24]
   1aea0:	add	w8, w8, w9, lsr #8
   1aea4:	str	w8, [sp, #12]
   1aea8:	ldr	w8, [sp, #24]
   1aeac:	lsr	w8, w8, #7
   1aeb0:	and	w8, w8, #0x1
   1aeb4:	str	w8, [sp, #8]
   1aeb8:	ldur	x0, [x29, #-8]
   1aebc:	ldur	x10, [x29, #-16]
   1aec0:	ldr	w8, [sp, #12]
   1aec4:	mov	w11, w8
   1aec8:	mov	x12, #0x2                   	// #2
   1aecc:	mul	x11, x12, x11
   1aed0:	add	x1, x10, x11
   1aed4:	ldr	w2, [sp, #8]
   1aed8:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1aedc:	ldr	w8, [sp, #24]
   1aee0:	lsl	w8, w8, #1
   1aee4:	str	w8, [sp, #24]
   1aee8:	ldur	w8, [x29, #-20]
   1aeec:	ldr	w9, [sp, #24]
   1aef0:	eor	w8, w8, w9
   1aef4:	ldr	w9, [sp, #20]
   1aef8:	bic	w8, w9, w8
   1aefc:	str	w8, [sp, #20]
   1af00:	ldr	w8, [sp, #24]
   1af04:	cmp	w8, #0x10, lsl #12
   1af08:	b.cc	1ae74 <lzma_mode_is_supported@@XZ_5.0+0x90c>  // b.lo, b.ul, b.last
   1af0c:	ldp	x29, x30, [sp, #48]
   1af10:	add	sp, sp, #0x40
   1af14:	ret
   1af18:	sub	sp, sp, #0x30
   1af1c:	stp	x29, x30, [sp, #32]
   1af20:	add	x29, sp, #0x20
   1af24:	mov	w8, #0x1                   	// #1
   1af28:	stur	x0, [x29, #-8]
   1af2c:	str	x1, [sp, #16]
   1af30:	str	w2, [sp, #12]
   1af34:	str	w3, [sp, #8]
   1af38:	and	w8, w4, w8
   1af3c:	strb	w8, [sp, #7]
   1af40:	ldr	w8, [sp, #8]
   1af44:	subs	w8, w8, #0x2
   1af48:	str	w8, [sp, #8]
   1af4c:	ldr	w8, [sp, #8]
   1af50:	cmp	w8, #0x8
   1af54:	b.cs	1af9c <lzma_mode_is_supported@@XZ_5.0+0xa34>  // b.hs, b.nlast
   1af58:	ldur	x0, [x29, #-8]
   1af5c:	ldr	x1, [sp, #16]
   1af60:	mov	w8, wzr
   1af64:	mov	w2, w8
   1af68:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1af6c:	ldur	x0, [x29, #-8]
   1af70:	ldr	x9, [sp, #16]
   1af74:	add	x9, x9, #0x4
   1af78:	ldr	w8, [sp, #12]
   1af7c:	mov	w10, w8
   1af80:	mov	x11, #0x10                  	// #16
   1af84:	mul	x10, x11, x10
   1af88:	add	x1, x9, x10
   1af8c:	ldr	w3, [sp, #8]
   1af90:	mov	w2, #0x3                   	// #3
   1af94:	bl	1a65c <lzma_mode_is_supported@@XZ_5.0+0xf4>
   1af98:	b	1b044 <lzma_mode_is_supported@@XZ_5.0+0xadc>
   1af9c:	ldur	x0, [x29, #-8]
   1afa0:	ldr	x1, [sp, #16]
   1afa4:	mov	w2, #0x1                   	// #1
   1afa8:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1afac:	ldr	w8, [sp, #8]
   1afb0:	subs	w8, w8, #0x8
   1afb4:	str	w8, [sp, #8]
   1afb8:	ldr	w8, [sp, #8]
   1afbc:	cmp	w8, #0x8
   1afc0:	b.cs	1b00c <lzma_mode_is_supported@@XZ_5.0+0xaa4>  // b.hs, b.nlast
   1afc4:	ldur	x0, [x29, #-8]
   1afc8:	ldr	x8, [sp, #16]
   1afcc:	add	x1, x8, #0x2
   1afd0:	mov	w9, wzr
   1afd4:	mov	w2, w9
   1afd8:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1afdc:	ldur	x0, [x29, #-8]
   1afe0:	ldr	x8, [sp, #16]
   1afe4:	add	x8, x8, #0x104
   1afe8:	ldr	w9, [sp, #12]
   1afec:	mov	w10, w9
   1aff0:	mov	x11, #0x10                  	// #16
   1aff4:	mul	x10, x11, x10
   1aff8:	add	x1, x8, x10
   1affc:	ldr	w3, [sp, #8]
   1b000:	mov	w2, #0x3                   	// #3
   1b004:	bl	1a65c <lzma_mode_is_supported@@XZ_5.0+0xf4>
   1b008:	b	1b044 <lzma_mode_is_supported@@XZ_5.0+0xadc>
   1b00c:	ldur	x0, [x29, #-8]
   1b010:	ldr	x8, [sp, #16]
   1b014:	add	x1, x8, #0x2
   1b018:	mov	w2, #0x1                   	// #1
   1b01c:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1b020:	ldr	w9, [sp, #8]
   1b024:	mov	w2, #0x8                   	// #8
   1b028:	subs	w9, w9, #0x8
   1b02c:	str	w9, [sp, #8]
   1b030:	ldur	x0, [x29, #-8]
   1b034:	ldr	x8, [sp, #16]
   1b038:	add	x1, x8, #0x204
   1b03c:	ldr	w3, [sp, #8]
   1b040:	bl	1a65c <lzma_mode_is_supported@@XZ_5.0+0xf4>
   1b044:	ldrb	w8, [sp, #7]
   1b048:	tbnz	w8, #0, 1b088 <lzma_mode_is_supported@@XZ_5.0+0xb20>
   1b04c:	ldr	x8, [sp, #16]
   1b050:	mov	x9, #0x4808                	// #18440
   1b054:	add	x8, x8, x9
   1b058:	ldr	w10, [sp, #12]
   1b05c:	mov	w9, w10
   1b060:	mov	x11, #0x4                   	// #4
   1b064:	mul	x9, x11, x9
   1b068:	add	x8, x8, x9
   1b06c:	ldr	w10, [x8]
   1b070:	subs	w10, w10, #0x1
   1b074:	str	w10, [x8]
   1b078:	cbnz	w10, 1b088 <lzma_mode_is_supported@@XZ_5.0+0xb20>
   1b07c:	ldr	x0, [sp, #16]
   1b080:	ldr	w1, [sp, #12]
   1b084:	bl	1b094 <lzma_mode_is_supported@@XZ_5.0+0xb2c>
   1b088:	ldp	x29, x30, [sp, #32]
   1b08c:	add	sp, sp, #0x30
   1b090:	ret
   1b094:	sub	sp, sp, #0x60
   1b098:	stp	x29, x30, [sp, #80]
   1b09c:	add	x29, sp, #0x50
   1b0a0:	stur	x0, [x29, #-8]
   1b0a4:	stur	w1, [x29, #-12]
   1b0a8:	ldur	x8, [x29, #-8]
   1b0ac:	mov	x9, #0x4804                	// #18436
   1b0b0:	add	x8, x8, x9
   1b0b4:	ldr	w10, [x8]
   1b0b8:	stur	w10, [x29, #-16]
   1b0bc:	ldur	w10, [x29, #-16]
   1b0c0:	ldur	x8, [x29, #-8]
   1b0c4:	mov	x9, #0x4808                	// #18440
   1b0c8:	add	x8, x8, x9
   1b0cc:	ldur	w11, [x29, #-12]
   1b0d0:	mov	w9, w11
   1b0d4:	str	w10, [x8, x9, lsl #2]
   1b0d8:	ldur	x8, [x29, #-8]
   1b0dc:	ldrh	w0, [x8]
   1b0e0:	bl	1b2e0 <lzma_mode_is_supported@@XZ_5.0+0xd78>
   1b0e4:	stur	w0, [x29, #-20]
   1b0e8:	ldur	x8, [x29, #-8]
   1b0ec:	ldrh	w0, [x8]
   1b0f0:	bl	1b304 <lzma_mode_is_supported@@XZ_5.0+0xd9c>
   1b0f4:	stur	w0, [x29, #-24]
   1b0f8:	ldur	w10, [x29, #-24]
   1b0fc:	ldur	x8, [x29, #-8]
   1b100:	ldrh	w0, [x8, #2]
   1b104:	str	w10, [sp, #32]
   1b108:	bl	1b2e0 <lzma_mode_is_supported@@XZ_5.0+0xd78>
   1b10c:	ldr	w10, [sp, #32]
   1b110:	add	w11, w10, w0
   1b114:	stur	w11, [x29, #-28]
   1b118:	ldur	w11, [x29, #-24]
   1b11c:	ldur	x8, [x29, #-8]
   1b120:	ldrh	w0, [x8, #2]
   1b124:	str	w11, [sp, #28]
   1b128:	bl	1b304 <lzma_mode_is_supported@@XZ_5.0+0xd9c>
   1b12c:	ldr	w10, [sp, #28]
   1b130:	add	w11, w10, w0
   1b134:	stur	w11, [x29, #-32]
   1b138:	ldur	x8, [x29, #-8]
   1b13c:	add	x8, x8, #0x404
   1b140:	ldur	w11, [x29, #-12]
   1b144:	mov	w9, w11
   1b148:	mov	x12, #0x440                 	// #1088
   1b14c:	mul	x9, x12, x9
   1b150:	add	x8, x8, x9
   1b154:	str	x8, [sp, #40]
   1b158:	str	wzr, [sp, #36]
   1b15c:	ldr	w8, [sp, #36]
   1b160:	ldur	w9, [x29, #-16]
   1b164:	mov	w10, #0x0                   	// #0
   1b168:	cmp	w8, w9
   1b16c:	str	w10, [sp, #24]
   1b170:	b.cs	1b184 <lzma_mode_is_supported@@XZ_5.0+0xc1c>  // b.hs, b.nlast
   1b174:	ldr	w8, [sp, #36]
   1b178:	cmp	w8, #0x8
   1b17c:	cset	w8, cc  // cc = lo, ul, last
   1b180:	str	w8, [sp, #24]
   1b184:	ldr	w8, [sp, #24]
   1b188:	tbnz	w8, #0, 1b190 <lzma_mode_is_supported@@XZ_5.0+0xc28>
   1b18c:	b	1b1e8 <lzma_mode_is_supported@@XZ_5.0+0xc80>
   1b190:	ldur	w8, [x29, #-20]
   1b194:	ldur	x9, [x29, #-8]
   1b198:	add	x9, x9, #0x4
   1b19c:	ldur	w10, [x29, #-12]
   1b1a0:	mov	w11, w10
   1b1a4:	mov	x12, #0x10                  	// #16
   1b1a8:	mul	x11, x12, x11
   1b1ac:	add	x0, x9, x11
   1b1b0:	ldr	w2, [sp, #36]
   1b1b4:	mov	w1, #0x3                   	// #3
   1b1b8:	str	w8, [sp, #20]
   1b1bc:	bl	1b32c <lzma_mode_is_supported@@XZ_5.0+0xdc4>
   1b1c0:	ldr	w8, [sp, #20]
   1b1c4:	add	w10, w8, w0
   1b1c8:	ldr	x9, [sp, #40]
   1b1cc:	ldr	w13, [sp, #36]
   1b1d0:	mov	w11, w13
   1b1d4:	str	w10, [x9, x11, lsl #2]
   1b1d8:	ldr	w8, [sp, #36]
   1b1dc:	add	w8, w8, #0x1
   1b1e0:	str	w8, [sp, #36]
   1b1e4:	b	1b15c <lzma_mode_is_supported@@XZ_5.0+0xbf4>
   1b1e8:	ldr	w8, [sp, #36]
   1b1ec:	ldur	w9, [x29, #-16]
   1b1f0:	mov	w10, #0x0                   	// #0
   1b1f4:	cmp	w8, w9
   1b1f8:	str	w10, [sp, #16]
   1b1fc:	b.cs	1b210 <lzma_mode_is_supported@@XZ_5.0+0xca8>  // b.hs, b.nlast
   1b200:	ldr	w8, [sp, #36]
   1b204:	cmp	w8, #0x10
   1b208:	cset	w8, cc  // cc = lo, ul, last
   1b20c:	str	w8, [sp, #16]
   1b210:	ldr	w8, [sp, #16]
   1b214:	tbnz	w8, #0, 1b21c <lzma_mode_is_supported@@XZ_5.0+0xcb4>
   1b218:	b	1b278 <lzma_mode_is_supported@@XZ_5.0+0xd10>
   1b21c:	ldur	w8, [x29, #-28]
   1b220:	ldur	x9, [x29, #-8]
   1b224:	add	x9, x9, #0x104
   1b228:	ldur	w10, [x29, #-12]
   1b22c:	mov	w11, w10
   1b230:	mov	x12, #0x10                  	// #16
   1b234:	mul	x11, x12, x11
   1b238:	add	x0, x9, x11
   1b23c:	ldr	w10, [sp, #36]
   1b240:	subs	w2, w10, #0x8
   1b244:	mov	w1, #0x3                   	// #3
   1b248:	str	w8, [sp, #12]
   1b24c:	bl	1b32c <lzma_mode_is_supported@@XZ_5.0+0xdc4>
   1b250:	ldr	w8, [sp, #12]
   1b254:	add	w10, w8, w0
   1b258:	ldr	x9, [sp, #40]
   1b25c:	ldr	w13, [sp, #36]
   1b260:	mov	w11, w13
   1b264:	str	w10, [x9, x11, lsl #2]
   1b268:	ldr	w8, [sp, #36]
   1b26c:	add	w8, w8, #0x1
   1b270:	str	w8, [sp, #36]
   1b274:	b	1b1e8 <lzma_mode_is_supported@@XZ_5.0+0xc80>
   1b278:	ldr	w8, [sp, #36]
   1b27c:	ldur	w9, [x29, #-16]
   1b280:	cmp	w8, w9
   1b284:	b.cs	1b2d4 <lzma_mode_is_supported@@XZ_5.0+0xd6c>  // b.hs, b.nlast
   1b288:	ldur	w8, [x29, #-32]
   1b28c:	ldur	x9, [x29, #-8]
   1b290:	add	x0, x9, #0x204
   1b294:	ldr	w10, [sp, #36]
   1b298:	mov	w1, #0x8                   	// #8
   1b29c:	subs	w10, w10, #0x8
   1b2a0:	subs	w2, w10, #0x8
   1b2a4:	str	w8, [sp, #8]
   1b2a8:	bl	1b32c <lzma_mode_is_supported@@XZ_5.0+0xdc4>
   1b2ac:	ldr	w8, [sp, #8]
   1b2b0:	add	w10, w8, w0
   1b2b4:	ldr	x9, [sp, #40]
   1b2b8:	ldr	w11, [sp, #36]
   1b2bc:	mov	w12, w11
   1b2c0:	str	w10, [x9, x12, lsl #2]
   1b2c4:	ldr	w8, [sp, #36]
   1b2c8:	add	w8, w8, #0x1
   1b2cc:	str	w8, [sp, #36]
   1b2d0:	b	1b278 <lzma_mode_is_supported@@XZ_5.0+0xd10>
   1b2d4:	ldp	x29, x30, [sp, #80]
   1b2d8:	add	sp, sp, #0x60
   1b2dc:	ret
   1b2e0:	sub	sp, sp, #0x10
   1b2e4:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1b2e8:	ldr	x8, [x8, #3960]
   1b2ec:	strh	w0, [sp, #14]
   1b2f0:	ldrh	w9, [sp, #14]
   1b2f4:	asr	w9, w9, #4
   1b2f8:	ldrb	w0, [x8, w9, sxtw]
   1b2fc:	add	sp, sp, #0x10
   1b300:	ret
   1b304:	sub	sp, sp, #0x10
   1b308:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1b30c:	ldr	x8, [x8, #3960]
   1b310:	strh	w0, [sp, #14]
   1b314:	ldrh	w9, [sp, #14]
   1b318:	eor	w9, w9, #0x7ff
   1b31c:	lsr	w9, w9, #4
   1b320:	ldrb	w0, [x8, w9, uxtw]
   1b324:	add	sp, sp, #0x10
   1b328:	ret
   1b32c:	sub	sp, sp, #0x30
   1b330:	stp	x29, x30, [sp, #32]
   1b334:	add	x29, sp, #0x20
   1b338:	mov	w8, #0x1                   	// #1
   1b33c:	stur	x0, [x29, #-8]
   1b340:	stur	w1, [x29, #-12]
   1b344:	str	w2, [sp, #16]
   1b348:	str	wzr, [sp, #12]
   1b34c:	ldur	w9, [x29, #-12]
   1b350:	lsl	w8, w8, w9
   1b354:	ldr	w9, [sp, #16]
   1b358:	add	w8, w9, w8
   1b35c:	str	w8, [sp, #16]
   1b360:	ldr	w8, [sp, #16]
   1b364:	and	w8, w8, #0x1
   1b368:	str	w8, [sp, #8]
   1b36c:	ldr	w8, [sp, #16]
   1b370:	lsr	w8, w8, #1
   1b374:	str	w8, [sp, #16]
   1b378:	ldur	x9, [x29, #-8]
   1b37c:	ldr	w8, [sp, #16]
   1b380:	mov	w10, w8
   1b384:	ldrh	w0, [x9, x10, lsl #1]
   1b388:	ldr	w1, [sp, #8]
   1b38c:	bl	1b3b8 <lzma_mode_is_supported@@XZ_5.0+0xe50>
   1b390:	ldr	w8, [sp, #12]
   1b394:	add	w8, w8, w0
   1b398:	str	w8, [sp, #12]
   1b39c:	ldr	w8, [sp, #16]
   1b3a0:	cmp	w8, #0x1
   1b3a4:	b.ne	1b360 <lzma_mode_is_supported@@XZ_5.0+0xdf8>  // b.any
   1b3a8:	ldr	w0, [sp, #12]
   1b3ac:	ldp	x29, x30, [sp, #32]
   1b3b0:	add	sp, sp, #0x30
   1b3b4:	ret
   1b3b8:	sub	sp, sp, #0x10
   1b3bc:	mov	w8, wzr
   1b3c0:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1b3c4:	ldr	x9, [x9, #3960]
   1b3c8:	strh	w0, [sp, #14]
   1b3cc:	str	w1, [sp, #8]
   1b3d0:	ldrh	w10, [sp, #14]
   1b3d4:	ldr	w11, [sp, #8]
   1b3d8:	subs	w8, w8, w11
   1b3dc:	and	w8, w8, #0x7ff
   1b3e0:	eor	w8, w10, w8
   1b3e4:	lsr	w8, w8, #4
   1b3e8:	ldrb	w0, [x9, w8, uxtw]
   1b3ec:	add	sp, sp, #0x10
   1b3f0:	ret
   1b3f4:	sub	sp, sp, #0x10
   1b3f8:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1b3fc:	ldr	x8, [x8, #4008]
   1b400:	str	w0, [sp, #8]
   1b404:	ldr	w9, [sp, #8]
   1b408:	cmp	w9, #0x2, lsl #12
   1b40c:	str	x8, [sp]
   1b410:	b.cs	1b42c <lzma_mode_is_supported@@XZ_5.0+0xec4>  // b.hs, b.nlast
   1b414:	ldr	w8, [sp, #8]
   1b418:	mov	w9, w8
   1b41c:	ldr	x10, [sp]
   1b420:	ldrb	w8, [x10, x9]
   1b424:	str	w8, [sp, #12]
   1b428:	b	1b470 <lzma_mode_is_supported@@XZ_5.0+0xf08>
   1b42c:	ldr	w8, [sp, #8]
   1b430:	mov	w9, #0x2000000             	// #33554432
   1b434:	cmp	w8, w9
   1b438:	b.cs	1b458 <lzma_mode_is_supported@@XZ_5.0+0xef0>  // b.hs, b.nlast
   1b43c:	ldr	w8, [sp, #8]
   1b440:	lsr	w8, w8, #12
   1b444:	ldr	x9, [sp]
   1b448:	ldrb	w8, [x9, w8, uxtw]
   1b44c:	add	w8, w8, #0x18
   1b450:	str	w8, [sp, #12]
   1b454:	b	1b470 <lzma_mode_is_supported@@XZ_5.0+0xf08>
   1b458:	ldr	w8, [sp, #8]
   1b45c:	lsr	w8, w8, #24
   1b460:	ldr	x9, [sp]
   1b464:	ldrb	w8, [x9, w8, uxtw]
   1b468:	add	w8, w8, #0x30
   1b46c:	str	w8, [sp, #12]
   1b470:	ldr	w0, [sp, #12]
   1b474:	add	sp, sp, #0x10
   1b478:	ret
   1b47c:	sub	sp, sp, #0x30
   1b480:	stp	x29, x30, [sp, #32]
   1b484:	add	x29, sp, #0x20
   1b488:	mov	w8, #0x1                   	// #1
   1b48c:	stur	x0, [x29, #-8]
   1b490:	str	x1, [sp, #16]
   1b494:	str	w2, [sp, #12]
   1b498:	str	w3, [sp, #8]
   1b49c:	str	w8, [sp, #4]
   1b4a0:	ldr	w8, [sp, #8]
   1b4a4:	and	w8, w8, #0x1
   1b4a8:	str	w8, [sp]
   1b4ac:	ldr	w8, [sp, #8]
   1b4b0:	lsr	w8, w8, #1
   1b4b4:	str	w8, [sp, #8]
   1b4b8:	ldur	x0, [x29, #-8]
   1b4bc:	ldr	x9, [sp, #16]
   1b4c0:	ldr	w8, [sp, #4]
   1b4c4:	mov	w10, w8
   1b4c8:	mov	x11, #0x2                   	// #2
   1b4cc:	mul	x10, x11, x10
   1b4d0:	add	x1, x9, x10
   1b4d4:	ldr	w2, [sp]
   1b4d8:	bl	1a5f8 <lzma_mode_is_supported@@XZ_5.0+0x90>
   1b4dc:	ldr	w8, [sp, #4]
   1b4e0:	ldr	w12, [sp]
   1b4e4:	add	w8, w12, w8, lsl #1
   1b4e8:	str	w8, [sp, #4]
   1b4ec:	ldr	w8, [sp, #12]
   1b4f0:	subs	w8, w8, #0x1
   1b4f4:	str	w8, [sp, #12]
   1b4f8:	cbnz	w8, 1b4a0 <lzma_mode_is_supported@@XZ_5.0+0xf38>
   1b4fc:	ldp	x29, x30, [sp, #32]
   1b500:	add	sp, sp, #0x30
   1b504:	ret
   1b508:	sub	sp, sp, #0x10
   1b50c:	str	x0, [sp, #8]
   1b510:	str	w1, [sp, #4]
   1b514:	str	w2, [sp]
   1b518:	ldr	w8, [sp, #4]
   1b51c:	ldr	w9, [sp]
   1b520:	subs	w9, w9, #0x1
   1b524:	str	w9, [sp]
   1b528:	lsr	w8, w8, w9
   1b52c:	and	w8, w8, #0x1
   1b530:	add	w8, w8, #0x2
   1b534:	ldr	x10, [sp, #8]
   1b538:	add	x10, x10, #0x28
   1b53c:	ldr	x11, [sp, #8]
   1b540:	ldr	x12, [x11, #24]
   1b544:	add	x13, x12, #0x1
   1b548:	str	x13, [x11, #24]
   1b54c:	str	w8, [x10, x12, lsl #2]
   1b550:	ldr	w8, [sp]
   1b554:	cbnz	w8, 1b518 <lzma_mode_is_supported@@XZ_5.0+0xfb0>
   1b558:	add	sp, sp, #0x10
   1b55c:	ret
   1b560:	sub	sp, sp, #0x40
   1b564:	stp	x29, x30, [sp, #48]
   1b568:	add	x29, sp, #0x30
   1b56c:	stur	x0, [x29, #-16]
   1b570:	str	x1, [sp, #24]
   1b574:	str	x2, [sp, #16]
   1b578:	str	x3, [sp, #8]
   1b57c:	str	x4, [sp]
   1b580:	ldr	x8, [sp, #24]
   1b584:	ldr	w9, [x8, #104]
   1b588:	cmp	w9, #0x1
   1b58c:	cset	w9, eq  // eq = none
   1b590:	and	w9, w9, #0x1
   1b594:	mov	w0, w9
   1b598:	sxtw	x8, w0
   1b59c:	cbz	x8, 1b5ac <lzma_mode_is_supported@@XZ_5.0+0x1044>
   1b5a0:	mov	w8, #0x8                   	// #8
   1b5a4:	stur	w8, [x29, #-4]
   1b5a8:	b	1b5cc <lzma_mode_is_supported@@XZ_5.0+0x1064>
   1b5ac:	ldur	x0, [x29, #-16]
   1b5b0:	ldr	x1, [sp, #24]
   1b5b4:	ldr	x2, [sp, #16]
   1b5b8:	ldr	x3, [sp, #8]
   1b5bc:	ldr	x4, [sp]
   1b5c0:	mov	w5, #0xffffffff            	// #-1
   1b5c4:	bl	190a8 <lzma_lzma_preset@@XZ_5.0+0x1f4>
   1b5c8:	stur	w0, [x29, #-4]
   1b5cc:	ldur	w0, [x29, #-4]
   1b5d0:	ldp	x29, x30, [sp, #48]
   1b5d4:	add	sp, sp, #0x40
   1b5d8:	ret
   1b5dc:	sub	sp, sp, #0xa0
   1b5e0:	stp	x29, x30, [sp, #144]
   1b5e4:	add	x29, sp, #0x90
   1b5e8:	stur	x0, [x29, #-32]
   1b5ec:	stur	x1, [x29, #-40]
   1b5f0:	stur	x2, [x29, #-48]
   1b5f4:	stur	x3, [x29, #-56]
   1b5f8:	ldur	x8, [x29, #-40]
   1b5fc:	ldr	w9, [x8, #96]
   1b600:	stur	w9, [x29, #-60]
   1b604:	ldur	x8, [x29, #-40]
   1b608:	ldr	w9, [x8, #28]
   1b60c:	cbnz	w9, 1b62c <lzma_mode_is_supported@@XZ_5.0+0x10c4>
   1b610:	ldur	x0, [x29, #-40]
   1b614:	ldur	x8, [x29, #-32]
   1b618:	add	x2, x8, #0x2f4
   1b61c:	sub	x1, x29, #0x44
   1b620:	bl	16244 <lzma_mf_is_supported@@XZ_5.0+0x360>
   1b624:	stur	w0, [x29, #-64]
   1b628:	b	1b644 <lzma_mode_is_supported@@XZ_5.0+0x10dc>
   1b62c:	ldur	x8, [x29, #-32]
   1b630:	ldr	w9, [x8, #2952]
   1b634:	stur	w9, [x29, #-64]
   1b638:	ldur	x8, [x29, #-32]
   1b63c:	ldr	w9, [x8, #2948]
   1b640:	stur	w9, [x29, #-68]
   1b644:	ldur	x0, [x29, #-40]
   1b648:	bl	1bcb4 <lzma_mode_is_supported@@XZ_5.0+0x174c>
   1b64c:	mov	x8, #0xffffffffffffffff    	// #-1
   1b650:	add	x8, x0, x8
   1b654:	str	x8, [sp, #64]
   1b658:	ldur	x0, [x29, #-40]
   1b65c:	bl	1bcdc <lzma_mode_is_supported@@XZ_5.0+0x1774>
   1b660:	add	w9, w0, #0x1
   1b664:	cmp	w9, #0x111
   1b668:	b.cs	1b680 <lzma_mode_is_supported@@XZ_5.0+0x1118>  // b.hs, b.nlast
   1b66c:	ldur	x0, [x29, #-40]
   1b670:	bl	1bcdc <lzma_mode_is_supported@@XZ_5.0+0x1774>
   1b674:	add	w8, w0, #0x1
   1b678:	str	w8, [sp, #16]
   1b67c:	b	1b688 <lzma_mode_is_supported@@XZ_5.0+0x1120>
   1b680:	mov	w8, #0x111                 	// #273
   1b684:	str	w8, [sp, #16]
   1b688:	ldr	w8, [sp, #16]
   1b68c:	str	w8, [sp, #60]
   1b690:	ldr	w8, [sp, #60]
   1b694:	cmp	w8, #0x2
   1b698:	b.cs	1b6b8 <lzma_mode_is_supported@@XZ_5.0+0x1150>  // b.hs, b.nlast
   1b69c:	ldur	x8, [x29, #-48]
   1b6a0:	mov	w9, #0xffffffff            	// #-1
   1b6a4:	str	w9, [x8]
   1b6a8:	ldur	x8, [x29, #-56]
   1b6ac:	mov	w9, #0x1                   	// #1
   1b6b0:	str	w9, [x8]
   1b6b4:	b	1bca8 <lzma_mode_is_supported@@XZ_5.0+0x1740>
   1b6b8:	str	wzr, [sp, #56]
   1b6bc:	str	wzr, [sp, #52]
   1b6c0:	str	wzr, [sp, #48]
   1b6c4:	ldr	w8, [sp, #48]
   1b6c8:	cmp	w8, #0x4
   1b6cc:	b.cs	1b82c <lzma_mode_is_supported@@XZ_5.0+0x12c4>  // b.hs, b.nlast
   1b6d0:	ldr	x8, [sp, #64]
   1b6d4:	ldur	x9, [x29, #-32]
   1b6d8:	add	x9, x9, #0x2e4
   1b6dc:	ldr	w10, [sp, #48]
   1b6e0:	mov	w11, w10
   1b6e4:	ldr	w10, [x9, x11, lsl #2]
   1b6e8:	mov	w9, w10
   1b6ec:	mov	x11, xzr
   1b6f0:	subs	x9, x11, x9
   1b6f4:	add	x8, x8, x9
   1b6f8:	mov	x9, #0xffffffffffffffff    	// #-1
   1b6fc:	add	x8, x8, x9
   1b700:	str	x8, [sp, #40]
   1b704:	ldr	x8, [sp, #64]
   1b708:	ldrb	w10, [x8]
   1b70c:	ldr	x8, [sp, #40]
   1b710:	ldrb	w12, [x8]
   1b714:	cmp	w10, w12
   1b718:	b.ne	1b734 <lzma_mode_is_supported@@XZ_5.0+0x11cc>  // b.any
   1b71c:	ldr	x8, [sp, #64]
   1b720:	ldrb	w9, [x8, #1]
   1b724:	ldr	x8, [sp, #40]
   1b728:	ldrb	w10, [x8, #1]
   1b72c:	cmp	w9, w10
   1b730:	b.eq	1b738 <lzma_mode_is_supported@@XZ_5.0+0x11d0>  // b.none
   1b734:	b	1b81c <lzma_mode_is_supported@@XZ_5.0+0x12b4>
   1b738:	ldr	x8, [sp, #64]
   1b73c:	ldr	x9, [sp, #40]
   1b740:	ldr	w10, [sp, #60]
   1b744:	stur	x8, [x29, #-8]
   1b748:	stur	x9, [x29, #-16]
   1b74c:	mov	w11, #0x2                   	// #2
   1b750:	stur	w11, [x29, #-20]
   1b754:	stur	w10, [x29, #-24]
   1b758:	ldur	w8, [x29, #-20]
   1b75c:	ldur	w9, [x29, #-24]
   1b760:	mov	w10, #0x0                   	// #0
   1b764:	cmp	w8, w9
   1b768:	str	w10, [sp, #12]
   1b76c:	b.cs	1b79c <lzma_mode_is_supported@@XZ_5.0+0x1234>  // b.hs, b.nlast
   1b770:	ldur	x8, [x29, #-8]
   1b774:	ldur	w9, [x29, #-20]
   1b778:	mov	w10, w9
   1b77c:	ldrb	w9, [x8, x10]
   1b780:	ldur	x8, [x29, #-16]
   1b784:	ldur	w11, [x29, #-20]
   1b788:	mov	w10, w11
   1b78c:	ldrb	w11, [x8, x10]
   1b790:	cmp	w9, w11
   1b794:	cset	w9, eq  // eq = none
   1b798:	str	w9, [sp, #12]
   1b79c:	ldr	w8, [sp, #12]
   1b7a0:	tbnz	w8, #0, 1b7a8 <lzma_mode_is_supported@@XZ_5.0+0x1240>
   1b7a4:	b	1b7b8 <lzma_mode_is_supported@@XZ_5.0+0x1250>
   1b7a8:	ldur	w8, [x29, #-20]
   1b7ac:	add	w8, w8, #0x1
   1b7b0:	stur	w8, [x29, #-20]
   1b7b4:	b	1b758 <lzma_mode_is_supported@@XZ_5.0+0x11f0>
   1b7b8:	ldur	w8, [x29, #-20]
   1b7bc:	str	w8, [sp, #36]
   1b7c0:	ldr	w8, [sp, #36]
   1b7c4:	ldur	w9, [x29, #-60]
   1b7c8:	cmp	w8, w9
   1b7cc:	b.cc	1b7fc <lzma_mode_is_supported@@XZ_5.0+0x1294>  // b.lo, b.ul, b.last
   1b7d0:	ldr	w8, [sp, #48]
   1b7d4:	ldur	x9, [x29, #-48]
   1b7d8:	str	w8, [x9]
   1b7dc:	ldr	w8, [sp, #36]
   1b7e0:	ldur	x9, [x29, #-56]
   1b7e4:	str	w8, [x9]
   1b7e8:	ldur	x0, [x29, #-40]
   1b7ec:	ldr	w8, [sp, #36]
   1b7f0:	subs	w1, w8, #0x1
   1b7f4:	bl	1bd00 <lzma_mode_is_supported@@XZ_5.0+0x1798>
   1b7f8:	b	1bca8 <lzma_mode_is_supported@@XZ_5.0+0x1740>
   1b7fc:	ldr	w8, [sp, #36]
   1b800:	ldr	w9, [sp, #56]
   1b804:	cmp	w8, w9
   1b808:	b.ls	1b81c <lzma_mode_is_supported@@XZ_5.0+0x12b4>  // b.plast
   1b80c:	ldr	w8, [sp, #48]
   1b810:	str	w8, [sp, #52]
   1b814:	ldr	w8, [sp, #36]
   1b818:	str	w8, [sp, #56]
   1b81c:	ldr	w8, [sp, #48]
   1b820:	add	w8, w8, #0x1
   1b824:	str	w8, [sp, #48]
   1b828:	b	1b6c4 <lzma_mode_is_supported@@XZ_5.0+0x115c>
   1b82c:	ldur	w8, [x29, #-64]
   1b830:	ldur	w9, [x29, #-60]
   1b834:	cmp	w8, w9
   1b838:	b.cc	1b890 <lzma_mode_is_supported@@XZ_5.0+0x1328>  // b.lo, b.ul, b.last
   1b83c:	ldur	x8, [x29, #-32]
   1b840:	add	x8, x8, #0x2f4
   1b844:	ldur	w9, [x29, #-68]
   1b848:	subs	w9, w9, #0x1
   1b84c:	mov	w10, w9
   1b850:	ubfx	x10, x10, #0, #32
   1b854:	mov	x11, #0x8                   	// #8
   1b858:	mul	x10, x11, x10
   1b85c:	add	x8, x8, x10
   1b860:	ldr	w9, [x8, #4]
   1b864:	add	w9, w9, #0x4
   1b868:	ldur	x8, [x29, #-48]
   1b86c:	str	w9, [x8]
   1b870:	ldur	w9, [x29, #-64]
   1b874:	ldur	x8, [x29, #-56]
   1b878:	str	w9, [x8]
   1b87c:	ldur	x0, [x29, #-40]
   1b880:	ldur	w9, [x29, #-64]
   1b884:	subs	w1, w9, #0x1
   1b888:	bl	1bd00 <lzma_mode_is_supported@@XZ_5.0+0x1798>
   1b88c:	b	1bca8 <lzma_mode_is_supported@@XZ_5.0+0x1740>
   1b890:	str	wzr, [sp, #32]
   1b894:	ldur	w8, [x29, #-64]
   1b898:	cmp	w8, #0x2
   1b89c:	b.cc	1b9e0 <lzma_mode_is_supported@@XZ_5.0+0x1478>  // b.lo, b.ul, b.last
   1b8a0:	ldur	x8, [x29, #-32]
   1b8a4:	add	x8, x8, #0x2f4
   1b8a8:	ldur	w9, [x29, #-68]
   1b8ac:	subs	w9, w9, #0x1
   1b8b0:	mov	w10, w9
   1b8b4:	ubfx	x10, x10, #0, #32
   1b8b8:	mov	x11, #0x8                   	// #8
   1b8bc:	mul	x10, x11, x10
   1b8c0:	add	x8, x8, x10
   1b8c4:	ldr	w9, [x8, #4]
   1b8c8:	str	w9, [sp, #32]
   1b8cc:	ldur	w8, [x29, #-68]
   1b8d0:	mov	w9, #0x0                   	// #0
   1b8d4:	cmp	w8, #0x1
   1b8d8:	str	w9, [sp, #8]
   1b8dc:	b.ls	1b918 <lzma_mode_is_supported@@XZ_5.0+0x13b0>  // b.plast
   1b8e0:	ldur	w8, [x29, #-64]
   1b8e4:	ldur	x9, [x29, #-32]
   1b8e8:	add	x9, x9, #0x2f4
   1b8ec:	ldur	w10, [x29, #-68]
   1b8f0:	subs	w10, w10, #0x2
   1b8f4:	mov	w11, w10
   1b8f8:	ubfx	x11, x11, #0, #32
   1b8fc:	mov	x12, #0x8                   	// #8
   1b900:	mul	x11, x12, x11
   1b904:	ldr	w10, [x9, x11]
   1b908:	add	w10, w10, #0x1
   1b90c:	cmp	w8, w10
   1b910:	cset	w8, eq  // eq = none
   1b914:	str	w8, [sp, #8]
   1b918:	ldr	w8, [sp, #8]
   1b91c:	tbnz	w8, #0, 1b924 <lzma_mode_is_supported@@XZ_5.0+0x13bc>
   1b920:	b	1b9c0 <lzma_mode_is_supported@@XZ_5.0+0x1458>
   1b924:	ldr	w8, [sp, #32]
   1b928:	lsr	w8, w8, #7
   1b92c:	ldur	x9, [x29, #-32]
   1b930:	add	x9, x9, #0x2f4
   1b934:	ldur	w10, [x29, #-68]
   1b938:	subs	w10, w10, #0x2
   1b93c:	mov	w11, w10
   1b940:	ubfx	x11, x11, #0, #32
   1b944:	mov	x12, #0x8                   	// #8
   1b948:	mul	x11, x12, x11
   1b94c:	add	x9, x9, x11
   1b950:	ldr	w10, [x9, #4]
   1b954:	cmp	w8, w10
   1b958:	b.hi	1b960 <lzma_mode_is_supported@@XZ_5.0+0x13f8>  // b.pmore
   1b95c:	b	1b9c0 <lzma_mode_is_supported@@XZ_5.0+0x1458>
   1b960:	ldur	w8, [x29, #-68]
   1b964:	subs	w8, w8, #0x1
   1b968:	stur	w8, [x29, #-68]
   1b96c:	ldur	x9, [x29, #-32]
   1b970:	add	x9, x9, #0x2f4
   1b974:	ldur	w8, [x29, #-68]
   1b978:	subs	w8, w8, #0x1
   1b97c:	mov	w10, w8
   1b980:	ubfx	x10, x10, #0, #32
   1b984:	mov	x11, #0x8                   	// #8
   1b988:	mul	x10, x11, x10
   1b98c:	ldr	w8, [x9, x10]
   1b990:	stur	w8, [x29, #-64]
   1b994:	ldur	x9, [x29, #-32]
   1b998:	add	x9, x9, #0x2f4
   1b99c:	ldur	w8, [x29, #-68]
   1b9a0:	subs	w8, w8, #0x1
   1b9a4:	mov	w10, w8
   1b9a8:	ubfx	x10, x10, #0, #32
   1b9ac:	mul	x10, x11, x10
   1b9b0:	add	x9, x9, x10
   1b9b4:	ldr	w8, [x9, #4]
   1b9b8:	str	w8, [sp, #32]
   1b9bc:	b	1b8cc <lzma_mode_is_supported@@XZ_5.0+0x1364>
   1b9c0:	ldur	w8, [x29, #-64]
   1b9c4:	cmp	w8, #0x2
   1b9c8:	b.ne	1b9e0 <lzma_mode_is_supported@@XZ_5.0+0x1478>  // b.any
   1b9cc:	ldr	w8, [sp, #32]
   1b9d0:	cmp	w8, #0x80
   1b9d4:	b.cc	1b9e0 <lzma_mode_is_supported@@XZ_5.0+0x1478>  // b.lo, b.ul, b.last
   1b9d8:	mov	w8, #0x1                   	// #1
   1b9dc:	stur	w8, [x29, #-64]
   1b9e0:	ldr	w8, [sp, #56]
   1b9e4:	cmp	w8, #0x2
   1b9e8:	b.cc	1ba6c <lzma_mode_is_supported@@XZ_5.0+0x1504>  // b.lo, b.ul, b.last
   1b9ec:	ldr	w8, [sp, #56]
   1b9f0:	add	w8, w8, #0x1
   1b9f4:	ldur	w9, [x29, #-64]
   1b9f8:	cmp	w8, w9
   1b9fc:	b.cs	1ba40 <lzma_mode_is_supported@@XZ_5.0+0x14d8>  // b.hs, b.nlast
   1ba00:	ldr	w8, [sp, #56]
   1ba04:	add	w8, w8, #0x2
   1ba08:	ldur	w9, [x29, #-64]
   1ba0c:	cmp	w8, w9
   1ba10:	b.cc	1ba20 <lzma_mode_is_supported@@XZ_5.0+0x14b8>  // b.lo, b.ul, b.last
   1ba14:	ldr	w8, [sp, #32]
   1ba18:	cmp	w8, #0x200
   1ba1c:	b.hi	1ba40 <lzma_mode_is_supported@@XZ_5.0+0x14d8>  // b.pmore
   1ba20:	ldr	w8, [sp, #56]
   1ba24:	add	w8, w8, #0x3
   1ba28:	ldur	w9, [x29, #-64]
   1ba2c:	cmp	w8, w9
   1ba30:	b.cc	1ba6c <lzma_mode_is_supported@@XZ_5.0+0x1504>  // b.lo, b.ul, b.last
   1ba34:	ldr	w8, [sp, #32]
   1ba38:	cmp	w8, #0x8, lsl #12
   1ba3c:	b.ls	1ba6c <lzma_mode_is_supported@@XZ_5.0+0x1504>  // b.plast
   1ba40:	ldr	w8, [sp, #52]
   1ba44:	ldur	x9, [x29, #-48]
   1ba48:	str	w8, [x9]
   1ba4c:	ldr	w8, [sp, #56]
   1ba50:	ldur	x9, [x29, #-56]
   1ba54:	str	w8, [x9]
   1ba58:	ldur	x0, [x29, #-40]
   1ba5c:	ldr	w8, [sp, #56]
   1ba60:	subs	w1, w8, #0x1
   1ba64:	bl	1bd00 <lzma_mode_is_supported@@XZ_5.0+0x1798>
   1ba68:	b	1bca8 <lzma_mode_is_supported@@XZ_5.0+0x1740>
   1ba6c:	ldur	w8, [x29, #-64]
   1ba70:	cmp	w8, #0x2
   1ba74:	b.cc	1ba84 <lzma_mode_is_supported@@XZ_5.0+0x151c>  // b.lo, b.ul, b.last
   1ba78:	ldr	w8, [sp, #60]
   1ba7c:	cmp	w8, #0x2
   1ba80:	b.hi	1baa0 <lzma_mode_is_supported@@XZ_5.0+0x1538>  // b.pmore
   1ba84:	ldur	x8, [x29, #-48]
   1ba88:	mov	w9, #0xffffffff            	// #-1
   1ba8c:	str	w9, [x8]
   1ba90:	ldur	x8, [x29, #-56]
   1ba94:	mov	w9, #0x1                   	// #1
   1ba98:	str	w9, [x8]
   1ba9c:	b	1bca8 <lzma_mode_is_supported@@XZ_5.0+0x1740>
   1baa0:	ldur	x0, [x29, #-40]
   1baa4:	ldur	x8, [x29, #-32]
   1baa8:	add	x1, x8, #0xb84
   1baac:	ldur	x8, [x29, #-32]
   1bab0:	add	x2, x8, #0x2f4
   1bab4:	bl	16244 <lzma_mf_is_supported@@XZ_5.0+0x360>
   1bab8:	ldur	x8, [x29, #-32]
   1babc:	str	w0, [x8, #2952]
   1bac0:	ldur	x8, [x29, #-32]
   1bac4:	ldr	w9, [x8, #2952]
   1bac8:	cmp	w9, #0x2
   1bacc:	b.cc	1bbbc <lzma_mode_is_supported@@XZ_5.0+0x1654>  // b.lo, b.ul, b.last
   1bad0:	ldur	x8, [x29, #-32]
   1bad4:	add	x8, x8, #0x2f4
   1bad8:	ldur	x9, [x29, #-32]
   1badc:	ldr	w10, [x9, #2948]
   1bae0:	subs	w10, w10, #0x1
   1bae4:	mov	w9, w10
   1bae8:	ubfx	x9, x9, #0, #32
   1baec:	mov	x11, #0x8                   	// #8
   1baf0:	mul	x9, x11, x9
   1baf4:	add	x8, x8, x9
   1baf8:	ldr	w10, [x8, #4]
   1bafc:	str	w10, [sp, #28]
   1bb00:	ldur	x8, [x29, #-32]
   1bb04:	ldr	w10, [x8, #2952]
   1bb08:	ldur	w12, [x29, #-64]
   1bb0c:	cmp	w10, w12
   1bb10:	b.cc	1bb24 <lzma_mode_is_supported@@XZ_5.0+0x15bc>  // b.lo, b.ul, b.last
   1bb14:	ldr	w8, [sp, #28]
   1bb18:	ldr	w9, [sp, #32]
   1bb1c:	cmp	w8, w9
   1bb20:	b.cc	1bba0 <lzma_mode_is_supported@@XZ_5.0+0x1638>  // b.lo, b.ul, b.last
   1bb24:	ldur	x8, [x29, #-32]
   1bb28:	ldr	w9, [x8, #2952]
   1bb2c:	ldur	w10, [x29, #-64]
   1bb30:	add	w10, w10, #0x1
   1bb34:	cmp	w9, w10
   1bb38:	b.ne	1bb50 <lzma_mode_is_supported@@XZ_5.0+0x15e8>  // b.any
   1bb3c:	ldr	w8, [sp, #28]
   1bb40:	lsr	w8, w8, #7
   1bb44:	ldr	w9, [sp, #32]
   1bb48:	cmp	w8, w9
   1bb4c:	b.ls	1bba0 <lzma_mode_is_supported@@XZ_5.0+0x1638>  // b.plast
   1bb50:	ldur	x8, [x29, #-32]
   1bb54:	ldr	w9, [x8, #2952]
   1bb58:	ldur	w10, [x29, #-64]
   1bb5c:	add	w10, w10, #0x1
   1bb60:	cmp	w9, w10
   1bb64:	b.hi	1bba0 <lzma_mode_is_supported@@XZ_5.0+0x1638>  // b.pmore
   1bb68:	ldur	x8, [x29, #-32]
   1bb6c:	ldr	w9, [x8, #2952]
   1bb70:	add	w9, w9, #0x1
   1bb74:	ldur	w10, [x29, #-64]
   1bb78:	cmp	w9, w10
   1bb7c:	b.cc	1bbbc <lzma_mode_is_supported@@XZ_5.0+0x1654>  // b.lo, b.ul, b.last
   1bb80:	ldur	w8, [x29, #-64]
   1bb84:	cmp	w8, #0x3
   1bb88:	b.cc	1bbbc <lzma_mode_is_supported@@XZ_5.0+0x1654>  // b.lo, b.ul, b.last
   1bb8c:	ldr	w8, [sp, #32]
   1bb90:	lsr	w8, w8, #7
   1bb94:	ldr	w9, [sp, #28]
   1bb98:	cmp	w8, w9
   1bb9c:	b.ls	1bbbc <lzma_mode_is_supported@@XZ_5.0+0x1654>  // b.plast
   1bba0:	ldur	x8, [x29, #-48]
   1bba4:	mov	w9, #0xffffffff            	// #-1
   1bba8:	str	w9, [x8]
   1bbac:	ldur	x8, [x29, #-56]
   1bbb0:	mov	w9, #0x1                   	// #1
   1bbb4:	str	w9, [x8]
   1bbb8:	b	1bca8 <lzma_mode_is_supported@@XZ_5.0+0x1740>
   1bbbc:	ldr	x8, [sp, #64]
   1bbc0:	add	x8, x8, #0x1
   1bbc4:	str	x8, [sp, #64]
   1bbc8:	ldur	w9, [x29, #-64]
   1bbcc:	subs	w9, w9, #0x1
   1bbd0:	mov	w10, #0x2                   	// #2
   1bbd4:	cmp	w10, w9
   1bbd8:	b.ls	1bbe8 <lzma_mode_is_supported@@XZ_5.0+0x1680>  // b.plast
   1bbdc:	mov	w8, #0x2                   	// #2
   1bbe0:	str	w8, [sp, #4]
   1bbe4:	b	1bbf4 <lzma_mode_is_supported@@XZ_5.0+0x168c>
   1bbe8:	ldur	w8, [x29, #-64]
   1bbec:	subs	w8, w8, #0x1
   1bbf0:	str	w8, [sp, #4]
   1bbf4:	ldr	w8, [sp, #4]
   1bbf8:	str	w8, [sp, #24]
   1bbfc:	str	wzr, [sp, #20]
   1bc00:	ldr	w8, [sp, #20]
   1bc04:	cmp	w8, #0x4
   1bc08:	b.cs	1bc7c <lzma_mode_is_supported@@XZ_5.0+0x1714>  // b.hs, b.nlast
   1bc0c:	ldr	x0, [sp, #64]
   1bc10:	ldr	x8, [sp, #64]
   1bc14:	ldur	x9, [x29, #-32]
   1bc18:	add	x9, x9, #0x2e4
   1bc1c:	ldr	w10, [sp, #20]
   1bc20:	mov	w11, w10
   1bc24:	ldr	w10, [x9, x11, lsl #2]
   1bc28:	mov	w9, w10
   1bc2c:	mov	x11, xzr
   1bc30:	subs	x9, x11, x9
   1bc34:	add	x8, x8, x9
   1bc38:	mov	x9, #0xffffffffffffffff    	// #-1
   1bc3c:	add	x1, x8, x9
   1bc40:	ldr	w10, [sp, #24]
   1bc44:	mov	w2, w10
   1bc48:	bl	3330 <memcmp@plt>
   1bc4c:	cbnz	w0, 1bc6c <lzma_mode_is_supported@@XZ_5.0+0x1704>
   1bc50:	ldur	x8, [x29, #-48]
   1bc54:	mov	w9, #0xffffffff            	// #-1
   1bc58:	str	w9, [x8]
   1bc5c:	ldur	x8, [x29, #-56]
   1bc60:	mov	w9, #0x1                   	// #1
   1bc64:	str	w9, [x8]
   1bc68:	b	1bca8 <lzma_mode_is_supported@@XZ_5.0+0x1740>
   1bc6c:	ldr	w8, [sp, #20]
   1bc70:	add	w8, w8, #0x1
   1bc74:	str	w8, [sp, #20]
   1bc78:	b	1bc00 <lzma_mode_is_supported@@XZ_5.0+0x1698>
   1bc7c:	ldr	w8, [sp, #32]
   1bc80:	add	w8, w8, #0x4
   1bc84:	ldur	x9, [x29, #-48]
   1bc88:	str	w8, [x9]
   1bc8c:	ldur	w8, [x29, #-64]
   1bc90:	ldur	x9, [x29, #-56]
   1bc94:	str	w8, [x9]
   1bc98:	ldur	x0, [x29, #-40]
   1bc9c:	ldur	w8, [x29, #-64]
   1bca0:	subs	w1, w8, #0x2
   1bca4:	bl	1bd00 <lzma_mode_is_supported@@XZ_5.0+0x1798>
   1bca8:	ldp	x29, x30, [sp, #144]
   1bcac:	add	sp, sp, #0xa0
   1bcb0:	ret
   1bcb4:	sub	sp, sp, #0x10
   1bcb8:	str	x0, [sp, #8]
   1bcbc:	ldr	x8, [sp, #8]
   1bcc0:	ldr	x8, [x8]
   1bcc4:	ldr	x9, [sp, #8]
   1bcc8:	ldr	w10, [x9, #24]
   1bccc:	mov	w9, w10
   1bcd0:	add	x0, x8, x9
   1bcd4:	add	sp, sp, #0x10
   1bcd8:	ret
   1bcdc:	sub	sp, sp, #0x10
   1bce0:	str	x0, [sp, #8]
   1bce4:	ldr	x8, [sp, #8]
   1bce8:	ldr	w9, [x8, #36]
   1bcec:	ldr	x8, [sp, #8]
   1bcf0:	ldr	w10, [x8, #24]
   1bcf4:	subs	w0, w9, w10
   1bcf8:	add	sp, sp, #0x10
   1bcfc:	ret
   1bd00:	sub	sp, sp, #0x20
   1bd04:	stp	x29, x30, [sp, #16]
   1bd08:	add	x29, sp, #0x10
   1bd0c:	str	x0, [sp, #8]
   1bd10:	str	w1, [sp, #4]
   1bd14:	ldr	w8, [sp, #4]
   1bd18:	cbz	w8, 1bd44 <lzma_mode_is_supported@@XZ_5.0+0x17dc>
   1bd1c:	ldr	x8, [sp, #8]
   1bd20:	ldr	x8, [x8, #56]
   1bd24:	ldr	x0, [sp, #8]
   1bd28:	ldr	w1, [sp, #4]
   1bd2c:	blr	x8
   1bd30:	ldr	w9, [sp, #4]
   1bd34:	ldr	x8, [sp, #8]
   1bd38:	ldr	w10, [x8, #28]
   1bd3c:	add	w9, w10, w9
   1bd40:	str	w9, [x8, #28]
   1bd44:	ldp	x29, x30, [sp, #16]
   1bd48:	add	sp, sp, #0x20
   1bd4c:	ret
   1bd50:	sub	sp, sp, #0x80
   1bd54:	stp	x29, x30, [sp, #112]
   1bd58:	add	x29, sp, #0x70
   1bd5c:	stur	x0, [x29, #-8]
   1bd60:	stur	x1, [x29, #-16]
   1bd64:	stur	x2, [x29, #-24]
   1bd68:	stur	x3, [x29, #-32]
   1bd6c:	stur	w4, [x29, #-36]
   1bd70:	ldur	x8, [x29, #-8]
   1bd74:	mov	x9, #0xedc                 	// #3804
   1bd78:	movk	x9, #0x1, lsl #16
   1bd7c:	add	x8, x8, x9
   1bd80:	ldr	w10, [x8]
   1bd84:	ldur	x8, [x29, #-8]
   1bd88:	mov	x9, #0xee0                 	// #3808
   1bd8c:	movk	x9, #0x1, lsl #16
   1bd90:	add	x8, x8, x9
   1bd94:	ldr	w11, [x8]
   1bd98:	cmp	w10, w11
   1bd9c:	b.eq	1be50 <lzma_mode_is_supported@@XZ_5.0+0x18e8>  // b.none
   1bda0:	ldur	x8, [x29, #-8]
   1bda4:	mov	x9, #0xee4                 	// #3812
   1bda8:	movk	x9, #0x1, lsl #16
   1bdac:	add	x8, x8, x9
   1bdb0:	ldur	x10, [x29, #-8]
   1bdb4:	mov	x11, #0xee0                 	// #3808
   1bdb8:	movk	x11, #0x1, lsl #16
   1bdbc:	add	x10, x10, x11
   1bdc0:	ldr	w12, [x10]
   1bdc4:	mov	w10, w12
   1bdc8:	mov	x13, #0x2c                  	// #44
   1bdcc:	mul	x10, x13, x10
   1bdd0:	add	x8, x8, x10
   1bdd4:	ldr	w12, [x8, #20]
   1bdd8:	ldur	x8, [x29, #-8]
   1bddc:	add	x8, x8, x11
   1bde0:	ldr	w14, [x8]
   1bde4:	subs	w12, w12, w14
   1bde8:	ldur	x8, [x29, #-32]
   1bdec:	str	w12, [x8]
   1bdf0:	ldur	x8, [x29, #-8]
   1bdf4:	add	x8, x8, x9
   1bdf8:	ldur	x10, [x29, #-8]
   1bdfc:	add	x10, x10, x11
   1be00:	ldr	w12, [x10]
   1be04:	mov	w10, w12
   1be08:	mul	x10, x13, x10
   1be0c:	add	x8, x8, x10
   1be10:	ldr	w12, [x8, #24]
   1be14:	ldur	x8, [x29, #-24]
   1be18:	str	w12, [x8]
   1be1c:	ldur	x8, [x29, #-8]
   1be20:	add	x8, x8, x9
   1be24:	ldur	x9, [x29, #-8]
   1be28:	add	x9, x9, x11
   1be2c:	ldr	w12, [x9]
   1be30:	mov	w9, w12
   1be34:	mul	x9, x13, x9
   1be38:	add	x8, x8, x9
   1be3c:	ldr	w12, [x8, #20]
   1be40:	ldur	x8, [x29, #-8]
   1be44:	add	x8, x8, x11
   1be48:	str	w12, [x8]
   1be4c:	b	1c018 <lzma_mode_is_supported@@XZ_5.0+0x1ab0>
   1be50:	ldur	x8, [x29, #-16]
   1be54:	ldr	w9, [x8, #28]
   1be58:	cbnz	w9, 1bea4 <lzma_mode_is_supported@@XZ_5.0+0x193c>
   1be5c:	ldur	x8, [x29, #-8]
   1be60:	mov	x9, #0xe94                 	// #3732
   1be64:	movk	x9, #0x1, lsl #16
   1be68:	add	x8, x8, x9
   1be6c:	ldr	w10, [x8]
   1be70:	cmp	w10, #0x80
   1be74:	b.cc	1be80 <lzma_mode_is_supported@@XZ_5.0+0x1918>  // b.lo, b.ul, b.last
   1be78:	ldur	x0, [x29, #-8]
   1be7c:	bl	1c024 <lzma_mode_is_supported@@XZ_5.0+0x1abc>
   1be80:	ldur	x8, [x29, #-8]
   1be84:	mov	x9, #0xed8                 	// #3800
   1be88:	movk	x9, #0x1, lsl #16
   1be8c:	add	x8, x8, x9
   1be90:	ldr	w10, [x8]
   1be94:	cmp	w10, #0x10
   1be98:	b.cc	1bea4 <lzma_mode_is_supported@@XZ_5.0+0x193c>  // b.lo, b.ul, b.last
   1be9c:	ldur	x0, [x29, #-8]
   1bea0:	bl	1c310 <lzma_mode_is_supported@@XZ_5.0+0x1da8>
   1bea4:	ldur	x0, [x29, #-8]
   1bea8:	ldur	x1, [x29, #-16]
   1beac:	ldur	x2, [x29, #-24]
   1beb0:	ldur	x3, [x29, #-32]
   1beb4:	ldur	w4, [x29, #-36]
   1beb8:	bl	1c394 <lzma_mode_is_supported@@XZ_5.0+0x1e2c>
   1bebc:	stur	w0, [x29, #-40]
   1bec0:	ldur	w8, [x29, #-40]
   1bec4:	mov	w9, #0xffffffff            	// #-1
   1bec8:	cmp	w8, w9
   1becc:	b.ne	1bed4 <lzma_mode_is_supported@@XZ_5.0+0x196c>  // b.any
   1bed0:	b	1c018 <lzma_mode_is_supported@@XZ_5.0+0x1ab0>
   1bed4:	ldur	x8, [x29, #-8]
   1bed8:	add	x8, x8, #0x2e4
   1bedc:	ldr	q0, [x8]
   1bee0:	str	q0, [sp, #48]
   1bee4:	mov	w9, #0x1                   	// #1
   1bee8:	str	w9, [sp, #44]
   1beec:	ldr	w8, [sp, #44]
   1bef0:	ldur	w9, [x29, #-40]
   1bef4:	cmp	w8, w9
   1bef8:	b.cs	1c004 <lzma_mode_is_supported@@XZ_5.0+0x1a9c>  // b.hs, b.nlast
   1befc:	ldur	x0, [x29, #-16]
   1bf00:	ldur	x8, [x29, #-8]
   1bf04:	add	x1, x8, #0xb84
   1bf08:	ldur	x8, [x29, #-8]
   1bf0c:	add	x2, x8, #0x2f4
   1bf10:	bl	16244 <lzma_mf_is_supported@@XZ_5.0+0x360>
   1bf14:	ldur	x8, [x29, #-8]
   1bf18:	str	w0, [x8, #2952]
   1bf1c:	ldur	x8, [x29, #-8]
   1bf20:	ldr	w9, [x8, #2952]
   1bf24:	ldur	x8, [x29, #-16]
   1bf28:	ldr	w10, [x8, #96]
   1bf2c:	cmp	w9, w10
   1bf30:	b.cc	1bf38 <lzma_mode_is_supported@@XZ_5.0+0x19d0>  // b.lo, b.ul, b.last
   1bf34:	b	1c004 <lzma_mode_is_supported@@XZ_5.0+0x1a9c>
   1bf38:	ldur	x0, [x29, #-8]
   1bf3c:	ldur	x8, [x29, #-16]
   1bf40:	str	x0, [sp, #32]
   1bf44:	mov	x0, x8
   1bf48:	bl	1eaf8 <lzma_mode_is_supported@@XZ_5.0+0x4590>
   1bf4c:	mov	x8, #0xffffffffffffffff    	// #-1
   1bf50:	add	x2, x0, x8
   1bf54:	ldur	w3, [x29, #-40]
   1bf58:	ldur	w9, [x29, #-36]
   1bf5c:	ldr	w10, [sp, #44]
   1bf60:	add	w4, w9, w10
   1bf64:	ldr	w5, [sp, #44]
   1bf68:	ldur	x8, [x29, #-16]
   1bf6c:	ldr	w6, [x8, #96]
   1bf70:	ldur	x0, [x29, #-16]
   1bf74:	str	x2, [sp, #24]
   1bf78:	str	w3, [sp, #20]
   1bf7c:	str	w4, [sp, #16]
   1bf80:	str	w5, [sp, #12]
   1bf84:	str	w6, [sp, #8]
   1bf88:	bl	1eb20 <lzma_mode_is_supported@@XZ_5.0+0x45b8>
   1bf8c:	add	w9, w0, #0x1
   1bf90:	ldr	w10, [sp, #44]
   1bf94:	mov	w11, #0xfff                 	// #4095
   1bf98:	subs	w10, w11, w10
   1bf9c:	cmp	w9, w10
   1bfa0:	b.cs	1bfb8 <lzma_mode_is_supported@@XZ_5.0+0x1a50>  // b.hs, b.nlast
   1bfa4:	ldur	x0, [x29, #-16]
   1bfa8:	bl	1eb20 <lzma_mode_is_supported@@XZ_5.0+0x45b8>
   1bfac:	add	w8, w0, #0x1
   1bfb0:	str	w8, [sp, #4]
   1bfb4:	b	1bfc8 <lzma_mode_is_supported@@XZ_5.0+0x1a60>
   1bfb8:	ldr	w8, [sp, #44]
   1bfbc:	mov	w9, #0xfff                 	// #4095
   1bfc0:	subs	w8, w9, w8
   1bfc4:	str	w8, [sp, #4]
   1bfc8:	ldr	w8, [sp, #4]
   1bfcc:	ldr	x0, [sp, #32]
   1bfd0:	add	x1, sp, #0x30
   1bfd4:	ldr	x2, [sp, #24]
   1bfd8:	ldr	w3, [sp, #20]
   1bfdc:	ldr	w4, [sp, #16]
   1bfe0:	ldr	w5, [sp, #12]
   1bfe4:	ldr	w6, [sp, #8]
   1bfe8:	mov	w7, w8
   1bfec:	bl	1cdbc <lzma_mode_is_supported@@XZ_5.0+0x2854>
   1bff0:	stur	w0, [x29, #-40]
   1bff4:	ldr	w8, [sp, #44]
   1bff8:	add	w8, w8, #0x1
   1bffc:	str	w8, [sp, #44]
   1c000:	b	1beec <lzma_mode_is_supported@@XZ_5.0+0x1984>
   1c004:	ldur	x0, [x29, #-8]
   1c008:	ldur	x1, [x29, #-32]
   1c00c:	ldur	x2, [x29, #-24]
   1c010:	ldr	w3, [sp, #44]
   1c014:	bl	1eb44 <lzma_mode_is_supported@@XZ_5.0+0x45dc>
   1c018:	ldp	x29, x30, [sp, #112]
   1c01c:	add	sp, sp, #0x80
   1c020:	ret
   1c024:	sub	sp, sp, #0x50
   1c028:	stp	x29, x30, [sp, #64]
   1c02c:	add	x29, sp, #0x40
   1c030:	stur	x0, [x29, #-8]
   1c034:	stur	wzr, [x29, #-12]
   1c038:	ldur	w8, [x29, #-12]
   1c03c:	cmp	w8, #0x4
   1c040:	b.cs	1c1bc <lzma_mode_is_supported@@XZ_5.0+0x1c54>  // b.hs, b.nlast
   1c044:	ldur	x8, [x29, #-8]
   1c048:	mov	x9, #0x290                 	// #656
   1c04c:	movk	x9, #0x1, lsl #16
   1c050:	add	x8, x8, x9
   1c054:	ldur	w10, [x29, #-12]
   1c058:	mov	w9, w10
   1c05c:	mov	x11, #0x100                 	// #256
   1c060:	mul	x9, x11, x9
   1c064:	add	x8, x8, x9
   1c068:	stur	x8, [x29, #-24]
   1c06c:	stur	wzr, [x29, #-28]
   1c070:	ldur	w8, [x29, #-28]
   1c074:	ldur	x9, [x29, #-8]
   1c078:	mov	x10, #0xe90                 	// #3728
   1c07c:	movk	x10, #0x1, lsl #16
   1c080:	add	x9, x9, x10
   1c084:	ldr	w11, [x9]
   1c088:	cmp	w8, w11
   1c08c:	b.cs	1c0dc <lzma_mode_is_supported@@XZ_5.0+0x1b74>  // b.hs, b.nlast
   1c090:	ldur	x8, [x29, #-8]
   1c094:	mov	x9, #0x6efc                	// #28412
   1c098:	add	x8, x8, x9
   1c09c:	ldur	w10, [x29, #-12]
   1c0a0:	mov	w9, w10
   1c0a4:	mov	x11, #0x80                  	// #128
   1c0a8:	mul	x9, x11, x9
   1c0ac:	add	x0, x8, x9
   1c0b0:	ldur	w2, [x29, #-28]
   1c0b4:	mov	w1, #0x6                   	// #6
   1c0b8:	bl	1ee40 <lzma_mode_is_supported@@XZ_5.0+0x48d8>
   1c0bc:	ldur	x8, [x29, #-24]
   1c0c0:	ldur	w10, [x29, #-28]
   1c0c4:	mov	w9, w10
   1c0c8:	str	w0, [x8, x9, lsl #2]
   1c0cc:	ldur	w8, [x29, #-28]
   1c0d0:	add	w8, w8, #0x1
   1c0d4:	stur	w8, [x29, #-28]
   1c0d8:	b	1c070 <lzma_mode_is_supported@@XZ_5.0+0x1b08>
   1c0dc:	mov	w8, #0xe                   	// #14
   1c0e0:	str	w8, [sp, #32]
   1c0e4:	ldr	w8, [sp, #32]
   1c0e8:	ldur	x9, [x29, #-8]
   1c0ec:	mov	x10, #0xe90                 	// #3728
   1c0f0:	movk	x10, #0x1, lsl #16
   1c0f4:	add	x9, x9, x10
   1c0f8:	ldr	w11, [x9]
   1c0fc:	cmp	w8, w11
   1c100:	b.cs	1c14c <lzma_mode_is_supported@@XZ_5.0+0x1be4>  // b.hs, b.nlast
   1c104:	ldr	w8, [sp, #32]
   1c108:	lsr	w8, w8, #1
   1c10c:	subs	w8, w8, #0x1
   1c110:	subs	w0, w8, #0x4
   1c114:	bl	1eecc <lzma_mode_is_supported@@XZ_5.0+0x4964>
   1c118:	ldur	x9, [x29, #-24]
   1c11c:	ldr	w8, [sp, #32]
   1c120:	mov	w10, w8
   1c124:	mov	x11, #0x4                   	// #4
   1c128:	mul	x10, x11, x10
   1c12c:	add	x9, x9, x10
   1c130:	ldr	w8, [x9]
   1c134:	add	w8, w8, w0
   1c138:	str	w8, [x9]
   1c13c:	ldr	w8, [sp, #32]
   1c140:	add	w8, w8, #0x1
   1c144:	str	w8, [sp, #32]
   1c148:	b	1c0e4 <lzma_mode_is_supported@@XZ_5.0+0x1b7c>
   1c14c:	str	wzr, [sp, #28]
   1c150:	ldr	w8, [sp, #28]
   1c154:	cmp	w8, #0x4
   1c158:	b.cs	1c1ac <lzma_mode_is_supported@@XZ_5.0+0x1c44>  // b.hs, b.nlast
   1c15c:	ldur	x8, [x29, #-24]
   1c160:	ldr	w9, [sp, #28]
   1c164:	mov	w10, w9
   1c168:	ldr	w9, [x8, x10, lsl #2]
   1c16c:	ldur	x8, [x29, #-8]
   1c170:	mov	x10, #0x690                 	// #1680
   1c174:	movk	x10, #0x1, lsl #16
   1c178:	add	x8, x8, x10
   1c17c:	ldur	w11, [x29, #-12]
   1c180:	mov	w10, w11
   1c184:	mov	x12, #0x200                 	// #512
   1c188:	mul	x10, x12, x10
   1c18c:	add	x8, x8, x10
   1c190:	ldr	w11, [sp, #28]
   1c194:	mov	w10, w11
   1c198:	str	w9, [x8, x10, lsl #2]
   1c19c:	ldr	w8, [sp, #28]
   1c1a0:	add	w8, w8, #0x1
   1c1a4:	str	w8, [sp, #28]
   1c1a8:	b	1c150 <lzma_mode_is_supported@@XZ_5.0+0x1be8>
   1c1ac:	ldur	w8, [x29, #-12]
   1c1b0:	add	w8, w8, #0x1
   1c1b4:	stur	w8, [x29, #-12]
   1c1b8:	b	1c038 <lzma_mode_is_supported@@XZ_5.0+0x1ad0>
   1c1bc:	mov	w8, #0x4                   	// #4
   1c1c0:	str	w8, [sp, #24]
   1c1c4:	ldr	w8, [sp, #24]
   1c1c8:	cmp	w8, #0x80
   1c1cc:	b.cs	1c2f0 <lzma_mode_is_supported@@XZ_5.0+0x1d88>  // b.hs, b.nlast
   1c1d0:	ldr	w0, [sp, #24]
   1c1d4:	bl	1eee4 <lzma_mode_is_supported@@XZ_5.0+0x497c>
   1c1d8:	str	w0, [sp, #20]
   1c1dc:	ldr	w8, [sp, #20]
   1c1e0:	lsr	w8, w8, #1
   1c1e4:	subs	w8, w8, #0x1
   1c1e8:	str	w8, [sp, #16]
   1c1ec:	ldr	w8, [sp, #20]
   1c1f0:	and	w8, w8, #0x1
   1c1f4:	mov	w9, #0x2                   	// #2
   1c1f8:	orr	w8, w9, w8
   1c1fc:	ldr	w9, [sp, #16]
   1c200:	lsl	w8, w8, w9
   1c204:	str	w8, [sp, #12]
   1c208:	ldur	x10, [x29, #-8]
   1c20c:	mov	x11, #0x70fc                	// #28924
   1c210:	add	x10, x10, x11
   1c214:	ldr	w8, [sp, #12]
   1c218:	mov	w11, w8
   1c21c:	mov	x12, #0x2                   	// #2
   1c220:	mul	x11, x12, x11
   1c224:	add	x10, x10, x11
   1c228:	ldr	w8, [sp, #20]
   1c22c:	mov	w11, w8
   1c230:	mneg	x11, x11, x12
   1c234:	add	x10, x10, x11
   1c238:	mov	x11, #0xfffffffffffffffe    	// #-2
   1c23c:	add	x0, x10, x11
   1c240:	ldr	w1, [sp, #16]
   1c244:	ldr	w8, [sp, #24]
   1c248:	ldr	w9, [sp, #12]
   1c24c:	subs	w2, w8, w9
   1c250:	bl	1ef6c <lzma_mode_is_supported@@XZ_5.0+0x4a04>
   1c254:	str	w0, [sp, #8]
   1c258:	str	wzr, [sp, #4]
   1c25c:	ldr	w8, [sp, #4]
   1c260:	cmp	w8, #0x4
   1c264:	b.cs	1c2e0 <lzma_mode_is_supported@@XZ_5.0+0x1d78>  // b.hs, b.nlast
   1c268:	ldr	w8, [sp, #8]
   1c26c:	ldur	x9, [x29, #-8]
   1c270:	mov	x10, #0x290                 	// #656
   1c274:	movk	x10, #0x1, lsl #16
   1c278:	add	x9, x9, x10
   1c27c:	ldr	w11, [sp, #4]
   1c280:	mov	w10, w11
   1c284:	mov	x12, #0x100                 	// #256
   1c288:	mul	x10, x12, x10
   1c28c:	add	x9, x9, x10
   1c290:	ldr	w11, [sp, #20]
   1c294:	mov	w10, w11
   1c298:	ldr	w11, [x9, x10, lsl #2]
   1c29c:	add	w8, w8, w11
   1c2a0:	ldur	x9, [x29, #-8]
   1c2a4:	mov	x10, #0x690                 	// #1680
   1c2a8:	movk	x10, #0x1, lsl #16
   1c2ac:	add	x9, x9, x10
   1c2b0:	ldr	w11, [sp, #4]
   1c2b4:	mov	w10, w11
   1c2b8:	mov	x12, #0x200                 	// #512
   1c2bc:	mul	x10, x12, x10
   1c2c0:	add	x9, x9, x10
   1c2c4:	ldr	w11, [sp, #24]
   1c2c8:	mov	w10, w11
   1c2cc:	str	w8, [x9, x10, lsl #2]
   1c2d0:	ldr	w8, [sp, #4]
   1c2d4:	add	w8, w8, #0x1
   1c2d8:	str	w8, [sp, #4]
   1c2dc:	b	1c25c <lzma_mode_is_supported@@XZ_5.0+0x1cf4>
   1c2e0:	ldr	w8, [sp, #24]
   1c2e4:	add	w8, w8, #0x1
   1c2e8:	str	w8, [sp, #24]
   1c2ec:	b	1c1c4 <lzma_mode_is_supported@@XZ_5.0+0x1c5c>
   1c2f0:	ldur	x8, [x29, #-8]
   1c2f4:	mov	x9, #0xe94                 	// #3732
   1c2f8:	movk	x9, #0x1, lsl #16
   1c2fc:	add	x8, x8, x9
   1c300:	str	wzr, [x8]
   1c304:	ldp	x29, x30, [sp, #64]
   1c308:	add	sp, sp, #0x50
   1c30c:	ret
   1c310:	sub	sp, sp, #0x20
   1c314:	stp	x29, x30, [sp, #16]
   1c318:	add	x29, sp, #0x10
   1c31c:	str	x0, [sp, #8]
   1c320:	str	wzr, [sp, #4]
   1c324:	ldr	w8, [sp, #4]
   1c328:	cmp	w8, #0x10
   1c32c:	b.cs	1c374 <lzma_mode_is_supported@@XZ_5.0+0x1e0c>  // b.hs, b.nlast
   1c330:	ldr	x8, [sp, #8]
   1c334:	mov	x9, #0x71e0                	// #29152
   1c338:	add	x0, x8, x9
   1c33c:	ldr	w2, [sp, #4]
   1c340:	mov	w1, #0x4                   	// #4
   1c344:	bl	1ef6c <lzma_mode_is_supported@@XZ_5.0+0x4a04>
   1c348:	ldr	x8, [sp, #8]
   1c34c:	mov	x9, #0xe98                 	// #3736
   1c350:	movk	x9, #0x1, lsl #16
   1c354:	add	x8, x8, x9
   1c358:	ldr	w10, [sp, #4]
   1c35c:	mov	w9, w10
   1c360:	str	w0, [x8, x9, lsl #2]
   1c364:	ldr	w8, [sp, #4]
   1c368:	add	w8, w8, #0x1
   1c36c:	str	w8, [sp, #4]
   1c370:	b	1c324 <lzma_mode_is_supported@@XZ_5.0+0x1dbc>
   1c374:	ldr	x8, [sp, #8]
   1c378:	mov	x9, #0xed8                 	// #3800
   1c37c:	movk	x9, #0x1, lsl #16
   1c380:	add	x8, x8, x9
   1c384:	str	wzr, [x8]
   1c388:	ldp	x29, x30, [sp, #16]
   1c38c:	add	sp, sp, #0x20
   1c390:	ret
   1c394:	sub	sp, sp, #0x120
   1c398:	stp	x29, x30, [sp, #256]
   1c39c:	str	x28, [sp, #272]
   1c3a0:	add	x29, sp, #0x100
   1c3a4:	stur	x0, [x29, #-40]
   1c3a8:	stur	x1, [x29, #-48]
   1c3ac:	stur	x2, [x29, #-56]
   1c3b0:	stur	x3, [x29, #-64]
   1c3b4:	stur	w4, [x29, #-68]
   1c3b8:	ldur	x8, [x29, #-48]
   1c3bc:	ldr	w9, [x8, #96]
   1c3c0:	stur	w9, [x29, #-72]
   1c3c4:	ldur	x8, [x29, #-48]
   1c3c8:	ldr	w9, [x8, #28]
   1c3cc:	cbnz	w9, 1c3ec <lzma_mode_is_supported@@XZ_5.0+0x1e84>
   1c3d0:	ldur	x0, [x29, #-48]
   1c3d4:	ldur	x8, [x29, #-40]
   1c3d8:	add	x2, x8, #0x2f4
   1c3dc:	sub	x1, x29, #0x50
   1c3e0:	bl	16244 <lzma_mf_is_supported@@XZ_5.0+0x360>
   1c3e4:	stur	w0, [x29, #-76]
   1c3e8:	b	1c404 <lzma_mode_is_supported@@XZ_5.0+0x1e9c>
   1c3ec:	ldur	x8, [x29, #-40]
   1c3f0:	ldr	w9, [x8, #2952]
   1c3f4:	stur	w9, [x29, #-76]
   1c3f8:	ldur	x8, [x29, #-40]
   1c3fc:	ldr	w9, [x8, #2948]
   1c400:	stur	w9, [x29, #-80]
   1c404:	ldur	x0, [x29, #-48]
   1c408:	bl	1eb20 <lzma_mode_is_supported@@XZ_5.0+0x45b8>
   1c40c:	add	w8, w0, #0x1
   1c410:	cmp	w8, #0x111
   1c414:	b.cs	1c42c <lzma_mode_is_supported@@XZ_5.0+0x1ec4>  // b.hs, b.nlast
   1c418:	ldur	x0, [x29, #-48]
   1c41c:	bl	1eb20 <lzma_mode_is_supported@@XZ_5.0+0x45b8>
   1c420:	add	w8, w0, #0x1
   1c424:	str	w8, [sp, #60]
   1c428:	b	1c434 <lzma_mode_is_supported@@XZ_5.0+0x1ecc>
   1c42c:	mov	w8, #0x111                 	// #273
   1c430:	str	w8, [sp, #60]
   1c434:	ldr	w8, [sp, #60]
   1c438:	stur	w8, [x29, #-84]
   1c43c:	ldur	w8, [x29, #-84]
   1c440:	cmp	w8, #0x2
   1c444:	b.cs	1c468 <lzma_mode_is_supported@@XZ_5.0+0x1f00>  // b.hs, b.nlast
   1c448:	ldur	x8, [x29, #-56]
   1c44c:	mov	w9, #0xffffffff            	// #-1
   1c450:	str	w9, [x8]
   1c454:	ldur	x8, [x29, #-64]
   1c458:	mov	w10, #0x1                   	// #1
   1c45c:	str	w10, [x8]
   1c460:	stur	w9, [x29, #-28]
   1c464:	b	1cda8 <lzma_mode_is_supported@@XZ_5.0+0x2840>
   1c468:	ldur	x0, [x29, #-48]
   1c46c:	bl	1eaf8 <lzma_mode_is_supported@@XZ_5.0+0x4590>
   1c470:	mov	x8, #0xffffffffffffffff    	// #-1
   1c474:	add	x8, x0, x8
   1c478:	stur	x8, [x29, #-96]
   1c47c:	stur	wzr, [x29, #-116]
   1c480:	stur	wzr, [x29, #-120]
   1c484:	ldur	w8, [x29, #-120]
   1c488:	cmp	w8, #0x4
   1c48c:	b.cs	1c5d8 <lzma_mode_is_supported@@XZ_5.0+0x2070>  // b.hs, b.nlast
   1c490:	ldur	x8, [x29, #-96]
   1c494:	ldur	x9, [x29, #-40]
   1c498:	add	x9, x9, #0x2e4
   1c49c:	ldur	w10, [x29, #-120]
   1c4a0:	mov	w11, w10
   1c4a4:	ldr	w10, [x9, x11, lsl #2]
   1c4a8:	mov	w9, w10
   1c4ac:	mov	x11, xzr
   1c4b0:	subs	x9, x11, x9
   1c4b4:	add	x8, x8, x9
   1c4b8:	mov	x9, #0xffffffffffffffff    	// #-1
   1c4bc:	add	x8, x8, x9
   1c4c0:	str	x8, [sp, #128]
   1c4c4:	ldur	x8, [x29, #-96]
   1c4c8:	ldrb	w10, [x8]
   1c4cc:	ldr	x8, [sp, #128]
   1c4d0:	ldrb	w12, [x8]
   1c4d4:	cmp	w10, w12
   1c4d8:	b.ne	1c4f4 <lzma_mode_is_supported@@XZ_5.0+0x1f8c>  // b.any
   1c4dc:	ldur	x8, [x29, #-96]
   1c4e0:	ldrb	w9, [x8, #1]
   1c4e4:	ldr	x8, [sp, #128]
   1c4e8:	ldrb	w10, [x8, #1]
   1c4ec:	cmp	w9, w10
   1c4f0:	b.eq	1c50c <lzma_mode_is_supported@@XZ_5.0+0x1fa4>  // b.none
   1c4f4:	ldur	w8, [x29, #-120]
   1c4f8:	mov	w9, w8
   1c4fc:	sub	x10, x29, #0x70
   1c500:	mov	w8, wzr
   1c504:	str	w8, [x10, x9, lsl #2]
   1c508:	b	1c5c8 <lzma_mode_is_supported@@XZ_5.0+0x2060>
   1c50c:	ldur	x8, [x29, #-96]
   1c510:	ldr	x9, [sp, #128]
   1c514:	ldur	w10, [x29, #-84]
   1c518:	stur	x8, [x29, #-8]
   1c51c:	stur	x9, [x29, #-16]
   1c520:	mov	w11, #0x2                   	// #2
   1c524:	stur	w11, [x29, #-20]
   1c528:	stur	w10, [x29, #-24]
   1c52c:	ldur	w8, [x29, #-20]
   1c530:	ldur	w9, [x29, #-24]
   1c534:	mov	w10, #0x0                   	// #0
   1c538:	cmp	w8, w9
   1c53c:	str	w10, [sp, #56]
   1c540:	b.cs	1c570 <lzma_mode_is_supported@@XZ_5.0+0x2008>  // b.hs, b.nlast
   1c544:	ldur	x8, [x29, #-8]
   1c548:	ldur	w9, [x29, #-20]
   1c54c:	mov	w10, w9
   1c550:	ldrb	w9, [x8, x10]
   1c554:	ldur	x8, [x29, #-16]
   1c558:	ldur	w11, [x29, #-20]
   1c55c:	mov	w10, w11
   1c560:	ldrb	w11, [x8, x10]
   1c564:	cmp	w9, w11
   1c568:	cset	w9, eq  // eq = none
   1c56c:	str	w9, [sp, #56]
   1c570:	ldr	w8, [sp, #56]
   1c574:	tbnz	w8, #0, 1c57c <lzma_mode_is_supported@@XZ_5.0+0x2014>
   1c578:	b	1c58c <lzma_mode_is_supported@@XZ_5.0+0x2024>
   1c57c:	ldur	w8, [x29, #-20]
   1c580:	add	w8, w8, #0x1
   1c584:	stur	w8, [x29, #-20]
   1c588:	b	1c52c <lzma_mode_is_supported@@XZ_5.0+0x1fc4>
   1c58c:	ldur	w8, [x29, #-20]
   1c590:	ldur	w9, [x29, #-120]
   1c594:	mov	w10, w9
   1c598:	sub	x11, x29, #0x70
   1c59c:	str	w8, [x11, x10, lsl #2]
   1c5a0:	ldur	w8, [x29, #-120]
   1c5a4:	mov	w10, w8
   1c5a8:	ldr	w8, [x11, x10, lsl #2]
   1c5ac:	ldur	w9, [x29, #-116]
   1c5b0:	mov	w10, w9
   1c5b4:	ldr	w9, [x11, x10, lsl #2]
   1c5b8:	cmp	w8, w9
   1c5bc:	b.ls	1c5c8 <lzma_mode_is_supported@@XZ_5.0+0x2060>  // b.plast
   1c5c0:	ldur	w8, [x29, #-120]
   1c5c4:	stur	w8, [x29, #-116]
   1c5c8:	ldur	w8, [x29, #-120]
   1c5cc:	add	w8, w8, #0x1
   1c5d0:	stur	w8, [x29, #-120]
   1c5d4:	b	1c484 <lzma_mode_is_supported@@XZ_5.0+0x1f1c>
   1c5d8:	ldur	w8, [x29, #-116]
   1c5dc:	mov	w9, w8
   1c5e0:	sub	x10, x29, #0x70
   1c5e4:	ldr	w8, [x10, x9, lsl #2]
   1c5e8:	ldur	w11, [x29, #-72]
   1c5ec:	cmp	w8, w11
   1c5f0:	b.cc	1c638 <lzma_mode_is_supported@@XZ_5.0+0x20d0>  // b.lo, b.ul, b.last
   1c5f4:	ldur	w8, [x29, #-116]
   1c5f8:	ldur	x9, [x29, #-56]
   1c5fc:	str	w8, [x9]
   1c600:	ldur	w8, [x29, #-116]
   1c604:	mov	w9, w8
   1c608:	sub	x10, x29, #0x70
   1c60c:	ldr	w8, [x10, x9, lsl #2]
   1c610:	ldur	x9, [x29, #-64]
   1c614:	str	w8, [x9]
   1c618:	ldur	x0, [x29, #-48]
   1c61c:	ldur	x9, [x29, #-64]
   1c620:	ldr	w8, [x9]
   1c624:	subs	w1, w8, #0x1
   1c628:	bl	1f038 <lzma_mode_is_supported@@XZ_5.0+0x4ad0>
   1c62c:	mov	w8, #0xffffffff            	// #-1
   1c630:	stur	w8, [x29, #-28]
   1c634:	b	1cda8 <lzma_mode_is_supported@@XZ_5.0+0x2840>
   1c638:	ldur	w8, [x29, #-76]
   1c63c:	ldur	w9, [x29, #-72]
   1c640:	cmp	w8, w9
   1c644:	b.cc	1c6a4 <lzma_mode_is_supported@@XZ_5.0+0x213c>  // b.lo, b.ul, b.last
   1c648:	ldur	x8, [x29, #-40]
   1c64c:	add	x8, x8, #0x2f4
   1c650:	ldur	w9, [x29, #-80]
   1c654:	subs	w9, w9, #0x1
   1c658:	mov	w10, w9
   1c65c:	ubfx	x10, x10, #0, #32
   1c660:	mov	x11, #0x8                   	// #8
   1c664:	mul	x10, x11, x10
   1c668:	add	x8, x8, x10
   1c66c:	ldr	w9, [x8, #4]
   1c670:	add	w9, w9, #0x4
   1c674:	ldur	x8, [x29, #-56]
   1c678:	str	w9, [x8]
   1c67c:	ldur	w9, [x29, #-76]
   1c680:	ldur	x8, [x29, #-64]
   1c684:	str	w9, [x8]
   1c688:	ldur	x0, [x29, #-48]
   1c68c:	ldur	w9, [x29, #-76]
   1c690:	subs	w1, w9, #0x1
   1c694:	bl	1f038 <lzma_mode_is_supported@@XZ_5.0+0x4ad0>
   1c698:	mov	w9, #0xffffffff            	// #-1
   1c69c:	stur	w9, [x29, #-28]
   1c6a0:	b	1cda8 <lzma_mode_is_supported@@XZ_5.0+0x2840>
   1c6a4:	ldur	x8, [x29, #-96]
   1c6a8:	ldrb	w9, [x8]
   1c6ac:	strb	w9, [sp, #127]
   1c6b0:	ldur	x8, [x29, #-96]
   1c6b4:	ldur	x10, [x29, #-40]
   1c6b8:	ldr	w9, [x10, #740]
   1c6bc:	mov	w10, w9
   1c6c0:	mov	x11, xzr
   1c6c4:	subs	x10, x11, x10
   1c6c8:	add	x8, x8, x10
   1c6cc:	mov	x10, #0xffffffffffffffff    	// #-1
   1c6d0:	add	x8, x8, x10
   1c6d4:	ldrb	w9, [x8]
   1c6d8:	strb	w9, [sp, #126]
   1c6dc:	ldur	w9, [x29, #-76]
   1c6e0:	cmp	w9, #0x2
   1c6e4:	b.cs	1c730 <lzma_mode_is_supported@@XZ_5.0+0x21c8>  // b.hs, b.nlast
   1c6e8:	ldrb	w8, [sp, #127]
   1c6ec:	ldrb	w9, [sp, #126]
   1c6f0:	cmp	w8, w9
   1c6f4:	b.eq	1c730 <lzma_mode_is_supported@@XZ_5.0+0x21c8>  // b.none
   1c6f8:	ldur	w8, [x29, #-116]
   1c6fc:	mov	w9, w8
   1c700:	sub	x10, x29, #0x70
   1c704:	ldr	w8, [x10, x9, lsl #2]
   1c708:	cmp	w8, #0x2
   1c70c:	b.cs	1c730 <lzma_mode_is_supported@@XZ_5.0+0x21c8>  // b.hs, b.nlast
   1c710:	ldur	x8, [x29, #-56]
   1c714:	mov	w9, #0xffffffff            	// #-1
   1c718:	str	w9, [x8]
   1c71c:	ldur	x8, [x29, #-64]
   1c720:	mov	w10, #0x1                   	// #1
   1c724:	str	w10, [x8]
   1c728:	stur	w9, [x29, #-28]
   1c72c:	b	1cda8 <lzma_mode_is_supported@@XZ_5.0+0x2840>
   1c730:	ldur	x8, [x29, #-40]
   1c734:	ldr	w9, [x8, #736]
   1c738:	ldur	x8, [x29, #-40]
   1c73c:	mov	x10, #0xee4                 	// #3812
   1c740:	movk	x10, #0x1, lsl #16
   1c744:	add	x8, x8, x10
   1c748:	str	w9, [x8]
   1c74c:	ldur	w9, [x29, #-68]
   1c750:	ldur	x8, [x29, #-40]
   1c754:	ldr	w11, [x8, #2960]
   1c758:	and	w9, w9, w11
   1c75c:	str	w9, [sp, #120]
   1c760:	ldur	x8, [x29, #-40]
   1c764:	mov	x10, #0x6b9c                	// #27548
   1c768:	add	x8, x8, x10
   1c76c:	ldur	x12, [x29, #-40]
   1c770:	ldr	w9, [x12, #736]
   1c774:	mov	w12, w9
   1c778:	mov	x13, #0x20                  	// #32
   1c77c:	mul	x12, x13, x12
   1c780:	add	x8, x8, x12
   1c784:	ldr	w9, [sp, #120]
   1c788:	mov	w12, w9
   1c78c:	ldrh	w0, [x8, x12, lsl #1]
   1c790:	str	x10, [sp, #48]
   1c794:	str	x13, [sp, #40]
   1c798:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1c79c:	ldur	x8, [x29, #-40]
   1c7a0:	ldur	w1, [x29, #-68]
   1c7a4:	ldur	x10, [x29, #-96]
   1c7a8:	ldurb	w2, [x10, #-1]
   1c7ac:	ldur	x10, [x29, #-40]
   1c7b0:	ldr	w9, [x10, #736]
   1c7b4:	cmp	w9, #0x7
   1c7b8:	cset	w9, cc  // cc = lo, ul, last
   1c7bc:	eor	w9, w9, #0x1
   1c7c0:	ldrb	w4, [sp, #126]
   1c7c4:	ldrb	w5, [sp, #127]
   1c7c8:	str	w0, [sp, #36]
   1c7cc:	mov	x0, x8
   1c7d0:	and	w3, w9, #0x1
   1c7d4:	bl	1f0ac <lzma_mode_is_supported@@XZ_5.0+0x4b44>
   1c7d8:	ldr	w9, [sp, #36]
   1c7dc:	add	w11, w9, w0
   1c7e0:	ldur	x8, [x29, #-40]
   1c7e4:	mov	x10, #0xf20                 	// #3872
   1c7e8:	movk	x10, #0x1, lsl #16
   1c7ec:	add	x8, x8, x10
   1c7f0:	str	w11, [x8]
   1c7f4:	ldur	x8, [x29, #-40]
   1c7f8:	mov	x10, #0xf10                 	// #3856
   1c7fc:	movk	x10, #0x1, lsl #16
   1c800:	add	x0, x8, x10
   1c804:	bl	1f210 <lzma_mode_is_supported@@XZ_5.0+0x4ca8>
   1c808:	ldur	x8, [x29, #-40]
   1c80c:	ldr	x10, [sp, #48]
   1c810:	add	x8, x8, x10
   1c814:	ldur	x12, [x29, #-40]
   1c818:	ldr	w9, [x12, #736]
   1c81c:	mov	w12, w9
   1c820:	ldr	x13, [sp, #40]
   1c824:	mul	x12, x13, x12
   1c828:	add	x8, x8, x12
   1c82c:	ldr	w9, [sp, #120]
   1c830:	mov	w12, w9
   1c834:	ldrh	w0, [x8, x12, lsl #1]
   1c838:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1c83c:	str	w0, [sp, #116]
   1c840:	ldr	w9, [sp, #116]
   1c844:	ldur	x8, [x29, #-40]
   1c848:	mov	x10, #0x6d1c                	// #27932
   1c84c:	add	x8, x8, x10
   1c850:	ldur	x10, [x29, #-40]
   1c854:	ldr	w11, [x10, #736]
   1c858:	mov	w10, w11
   1c85c:	ldrh	w0, [x8, x10, lsl #1]
   1c860:	str	w9, [sp, #32]
   1c864:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1c868:	ldr	w9, [sp, #32]
   1c86c:	add	w11, w9, w0
   1c870:	str	w11, [sp, #112]
   1c874:	ldrb	w11, [sp, #126]
   1c878:	ldrb	w14, [sp, #127]
   1c87c:	cmp	w11, w14
   1c880:	b.ne	1c8f8 <lzma_mode_is_supported@@XZ_5.0+0x2390>  // b.any
   1c884:	ldr	w8, [sp, #112]
   1c888:	ldur	x0, [x29, #-40]
   1c88c:	ldur	x9, [x29, #-40]
   1c890:	ldr	w1, [x9, #736]
   1c894:	ldr	w2, [sp, #120]
   1c898:	str	w8, [sp, #28]
   1c89c:	bl	1f260 <lzma_mode_is_supported@@XZ_5.0+0x4cf8>
   1c8a0:	ldr	w8, [sp, #28]
   1c8a4:	add	w10, w8, w0
   1c8a8:	str	w10, [sp, #108]
   1c8ac:	ldr	w10, [sp, #108]
   1c8b0:	ldur	x9, [x29, #-40]
   1c8b4:	mov	x11, #0xf20                 	// #3872
   1c8b8:	movk	x11, #0x1, lsl #16
   1c8bc:	add	x9, x9, x11
   1c8c0:	ldr	w12, [x9]
   1c8c4:	cmp	w10, w12
   1c8c8:	b.cs	1c8f8 <lzma_mode_is_supported@@XZ_5.0+0x2390>  // b.hs, b.nlast
   1c8cc:	ldr	w8, [sp, #108]
   1c8d0:	ldur	x9, [x29, #-40]
   1c8d4:	mov	x10, #0xf20                 	// #3872
   1c8d8:	movk	x10, #0x1, lsl #16
   1c8dc:	add	x9, x9, x10
   1c8e0:	str	w8, [x9]
   1c8e4:	ldur	x9, [x29, #-40]
   1c8e8:	mov	x10, #0xf10                 	// #3856
   1c8ec:	movk	x10, #0x1, lsl #16
   1c8f0:	add	x0, x9, x10
   1c8f4:	bl	1f2e0 <lzma_mode_is_supported@@XZ_5.0+0x4d78>
   1c8f8:	ldur	w8, [x29, #-76]
   1c8fc:	ldur	w9, [x29, #-116]
   1c900:	mov	w10, w9
   1c904:	sub	x11, x29, #0x70
   1c908:	ldr	w9, [x11, x10, lsl #2]
   1c90c:	cmp	w8, w9
   1c910:	b.ls	1c920 <lzma_mode_is_supported@@XZ_5.0+0x23b8>  // b.plast
   1c914:	ldur	w8, [x29, #-76]
   1c918:	str	w8, [sp, #24]
   1c91c:	b	1c934 <lzma_mode_is_supported@@XZ_5.0+0x23cc>
   1c920:	ldur	w8, [x29, #-116]
   1c924:	mov	w9, w8
   1c928:	sub	x10, x29, #0x70
   1c92c:	ldr	w8, [x10, x9, lsl #2]
   1c930:	str	w8, [sp, #24]
   1c934:	ldr	w8, [sp, #24]
   1c938:	str	w8, [sp, #104]
   1c93c:	ldr	w8, [sp, #104]
   1c940:	cmp	w8, #0x2
   1c944:	b.cs	1c97c <lzma_mode_is_supported@@XZ_5.0+0x2414>  // b.hs, b.nlast
   1c948:	ldur	x8, [x29, #-40]
   1c94c:	mov	x9, #0xf28                 	// #3880
   1c950:	movk	x9, #0x1, lsl #16
   1c954:	add	x8, x8, x9
   1c958:	ldr	w10, [x8]
   1c95c:	ldur	x8, [x29, #-56]
   1c960:	str	w10, [x8]
   1c964:	ldur	x8, [x29, #-64]
   1c968:	mov	w10, #0x1                   	// #1
   1c96c:	str	w10, [x8]
   1c970:	mov	w10, #0xffffffff            	// #-1
   1c974:	stur	w10, [x29, #-28]
   1c978:	b	1cda8 <lzma_mode_is_supported@@XZ_5.0+0x2840>
   1c97c:	ldur	x8, [x29, #-40]
   1c980:	mov	x9, #0xf24                 	// #3876
   1c984:	movk	x9, #0x1, lsl #16
   1c988:	add	x8, x8, x9
   1c98c:	str	wzr, [x8]
   1c990:	str	wzr, [sp, #100]
   1c994:	ldr	w8, [sp, #100]
   1c998:	cmp	w8, #0x4
   1c99c:	b.cs	1c9e0 <lzma_mode_is_supported@@XZ_5.0+0x2478>  // b.hs, b.nlast
   1c9a0:	ldur	x8, [x29, #-40]
   1c9a4:	add	x8, x8, #0x2e4
   1c9a8:	ldr	w9, [sp, #100]
   1c9ac:	mov	w10, w9
   1c9b0:	ldr	w9, [x8, x10, lsl #2]
   1c9b4:	ldur	x8, [x29, #-40]
   1c9b8:	mov	x10, #0xf00                 	// #3840
   1c9bc:	movk	x10, #0x1, lsl #16
   1c9c0:	add	x8, x8, x10
   1c9c4:	ldr	w11, [sp, #100]
   1c9c8:	mov	w10, w11
   1c9cc:	str	w9, [x8, x10, lsl #2]
   1c9d0:	ldr	w8, [sp, #100]
   1c9d4:	add	w8, w8, #0x1
   1c9d8:	str	w8, [sp, #100]
   1c9dc:	b	1c994 <lzma_mode_is_supported@@XZ_5.0+0x242c>
   1c9e0:	ldr	w8, [sp, #104]
   1c9e4:	str	w8, [sp, #96]
   1c9e8:	ldur	x8, [x29, #-40]
   1c9ec:	mov	x9, #0xee4                 	// #3812
   1c9f0:	movk	x9, #0x1, lsl #16
   1c9f4:	add	x8, x8, x9
   1c9f8:	ldr	w10, [sp, #96]
   1c9fc:	mov	w9, w10
   1ca00:	mov	x11, #0x2c                  	// #44
   1ca04:	mul	x9, x11, x9
   1ca08:	add	x8, x8, x9
   1ca0c:	mov	w10, #0x40000000            	// #1073741824
   1ca10:	str	w10, [x8, #16]
   1ca14:	ldr	w8, [sp, #96]
   1ca18:	subs	w8, w8, #0x1
   1ca1c:	str	w8, [sp, #96]
   1ca20:	cmp	w8, #0x2
   1ca24:	b.cs	1c9e8 <lzma_mode_is_supported@@XZ_5.0+0x2480>  // b.hs, b.nlast
   1ca28:	str	wzr, [sp, #92]
   1ca2c:	ldr	w8, [sp, #92]
   1ca30:	cmp	w8, #0x4
   1ca34:	b.cs	1cb94 <lzma_mode_is_supported@@XZ_5.0+0x262c>  // b.hs, b.nlast
   1ca38:	ldr	w8, [sp, #92]
   1ca3c:	mov	w9, w8
   1ca40:	sub	x10, x29, #0x70
   1ca44:	ldr	w8, [x10, x9, lsl #2]
   1ca48:	str	w8, [sp, #88]
   1ca4c:	ldr	w8, [sp, #88]
   1ca50:	cmp	w8, #0x2
   1ca54:	b.cs	1ca5c <lzma_mode_is_supported@@XZ_5.0+0x24f4>  // b.hs, b.nlast
   1ca58:	b	1cb84 <lzma_mode_is_supported@@XZ_5.0+0x261c>
   1ca5c:	ldr	w8, [sp, #112]
   1ca60:	ldur	x0, [x29, #-40]
   1ca64:	ldr	w1, [sp, #92]
   1ca68:	ldur	x9, [x29, #-40]
   1ca6c:	ldr	w2, [x9, #736]
   1ca70:	ldr	w3, [sp, #120]
   1ca74:	str	w8, [sp, #20]
   1ca78:	bl	1f304 <lzma_mode_is_supported@@XZ_5.0+0x4d9c>
   1ca7c:	ldr	w8, [sp, #20]
   1ca80:	add	w10, w8, w0
   1ca84:	str	w10, [sp, #84]
   1ca88:	ldr	w8, [sp, #84]
   1ca8c:	ldur	x9, [x29, #-40]
   1ca90:	mov	x10, #0xba48                	// #47688
   1ca94:	add	x0, x9, x10
   1ca98:	ldr	w1, [sp, #88]
   1ca9c:	ldr	w2, [sp, #120]
   1caa0:	str	w8, [sp, #16]
   1caa4:	bl	1f448 <lzma_mode_is_supported@@XZ_5.0+0x4ee0>
   1caa8:	ldr	w8, [sp, #16]
   1caac:	add	w11, w8, w0
   1cab0:	str	w11, [sp, #80]
   1cab4:	ldr	w11, [sp, #80]
   1cab8:	ldur	x9, [x29, #-40]
   1cabc:	mov	x10, #0xee4                 	// #3812
   1cac0:	movk	x10, #0x1, lsl #16
   1cac4:	add	x9, x9, x10
   1cac8:	ldr	w12, [sp, #88]
   1cacc:	mov	w10, w12
   1cad0:	mov	x13, #0x2c                  	// #44
   1cad4:	mul	x10, x13, x10
   1cad8:	add	x9, x9, x10
   1cadc:	ldr	w12, [x9, #16]
   1cae0:	cmp	w11, w12
   1cae4:	b.cs	1cb70 <lzma_mode_is_supported@@XZ_5.0+0x2608>  // b.hs, b.nlast
   1cae8:	ldr	w8, [sp, #80]
   1caec:	ldur	x9, [x29, #-40]
   1caf0:	mov	x10, #0xee4                 	// #3812
   1caf4:	movk	x10, #0x1, lsl #16
   1caf8:	add	x9, x9, x10
   1cafc:	ldr	w11, [sp, #88]
   1cb00:	mov	w12, w11
   1cb04:	mov	x13, #0x2c                  	// #44
   1cb08:	mul	x12, x13, x12
   1cb0c:	add	x9, x9, x12
   1cb10:	str	w8, [x9, #16]
   1cb14:	ldur	x9, [x29, #-40]
   1cb18:	add	x9, x9, x10
   1cb1c:	ldr	w8, [sp, #88]
   1cb20:	mov	w12, w8
   1cb24:	mul	x12, x13, x12
   1cb28:	add	x9, x9, x12
   1cb2c:	str	wzr, [x9, #20]
   1cb30:	ldr	w8, [sp, #92]
   1cb34:	ldur	x9, [x29, #-40]
   1cb38:	add	x9, x9, x10
   1cb3c:	ldr	w11, [sp, #88]
   1cb40:	mov	w12, w11
   1cb44:	mul	x12, x13, x12
   1cb48:	add	x9, x9, x12
   1cb4c:	str	w8, [x9, #24]
   1cb50:	ldur	x9, [x29, #-40]
   1cb54:	add	x9, x9, x10
   1cb58:	ldr	w8, [sp, #88]
   1cb5c:	mov	w10, w8
   1cb60:	mul	x10, x13, x10
   1cb64:	add	x9, x9, x10
   1cb68:	mov	w8, #0x0                   	// #0
   1cb6c:	strb	w8, [x9, #4]
   1cb70:	ldr	w8, [sp, #88]
   1cb74:	subs	w8, w8, #0x1
   1cb78:	str	w8, [sp, #88]
   1cb7c:	cmp	w8, #0x2
   1cb80:	b.cs	1ca88 <lzma_mode_is_supported@@XZ_5.0+0x2520>  // b.hs, b.nlast
   1cb84:	ldr	w8, [sp, #92]
   1cb88:	add	w8, w8, #0x1
   1cb8c:	str	w8, [sp, #92]
   1cb90:	b	1ca2c <lzma_mode_is_supported@@XZ_5.0+0x24c4>
   1cb94:	ldr	w8, [sp, #116]
   1cb98:	ldur	x9, [x29, #-40]
   1cb9c:	mov	x10, #0x6d1c                	// #27932
   1cba0:	add	x9, x9, x10
   1cba4:	ldur	x10, [x29, #-40]
   1cba8:	ldr	w11, [x10, #736]
   1cbac:	mov	w10, w11
   1cbb0:	ldrh	w0, [x9, x10, lsl #1]
   1cbb4:	str	w8, [sp, #12]
   1cbb8:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1cbbc:	ldr	w8, [sp, #12]
   1cbc0:	add	w11, w8, w0
   1cbc4:	str	w11, [sp, #76]
   1cbc8:	ldur	w11, [x29, #-112]
   1cbcc:	cmp	w11, #0x2
   1cbd0:	b.cc	1cbe4 <lzma_mode_is_supported@@XZ_5.0+0x267c>  // b.lo, b.ul, b.last
   1cbd4:	ldur	w8, [x29, #-112]
   1cbd8:	add	w8, w8, #0x1
   1cbdc:	str	w8, [sp, #8]
   1cbe0:	b	1cbec <lzma_mode_is_supported@@XZ_5.0+0x2684>
   1cbe4:	mov	w8, #0x2                   	// #2
   1cbe8:	str	w8, [sp, #8]
   1cbec:	ldr	w8, [sp, #8]
   1cbf0:	str	w8, [sp, #96]
   1cbf4:	ldr	w8, [sp, #96]
   1cbf8:	ldur	w9, [x29, #-76]
   1cbfc:	cmp	w8, w9
   1cc00:	b.hi	1cda0 <lzma_mode_is_supported@@XZ_5.0+0x2838>  // b.pmore
   1cc04:	str	wzr, [sp, #72]
   1cc08:	ldr	w8, [sp, #96]
   1cc0c:	ldur	x9, [x29, #-40]
   1cc10:	add	x9, x9, #0x2f4
   1cc14:	ldr	w10, [sp, #72]
   1cc18:	mov	w11, w10
   1cc1c:	mov	x12, #0x8                   	// #8
   1cc20:	mul	x11, x12, x11
   1cc24:	ldr	w10, [x9, x11]
   1cc28:	cmp	w8, w10
   1cc2c:	b.ls	1cc40 <lzma_mode_is_supported@@XZ_5.0+0x26d8>  // b.plast
   1cc30:	ldr	w8, [sp, #72]
   1cc34:	add	w8, w8, #0x1
   1cc38:	str	w8, [sp, #72]
   1cc3c:	b	1cc08 <lzma_mode_is_supported@@XZ_5.0+0x26a0>
   1cc40:	ldur	x8, [x29, #-40]
   1cc44:	add	x8, x8, #0x2f4
   1cc48:	ldr	w9, [sp, #72]
   1cc4c:	mov	w10, w9
   1cc50:	mov	x11, #0x8                   	// #8
   1cc54:	mul	x10, x11, x10
   1cc58:	add	x8, x8, x10
   1cc5c:	ldr	w9, [x8, #4]
   1cc60:	str	w9, [sp, #68]
   1cc64:	ldr	w9, [sp, #76]
   1cc68:	ldur	x0, [x29, #-40]
   1cc6c:	ldr	w1, [sp, #68]
   1cc70:	ldr	w2, [sp, #96]
   1cc74:	ldr	w3, [sp, #120]
   1cc78:	str	w9, [sp, #4]
   1cc7c:	bl	1f488 <lzma_mode_is_supported@@XZ_5.0+0x4f20>
   1cc80:	ldr	w9, [sp, #4]
   1cc84:	add	w12, w9, w0
   1cc88:	str	w12, [sp, #64]
   1cc8c:	ldr	w12, [sp, #64]
   1cc90:	ldur	x8, [x29, #-40]
   1cc94:	mov	x10, #0xee4                 	// #3812
   1cc98:	movk	x10, #0x1, lsl #16
   1cc9c:	add	x8, x8, x10
   1cca0:	ldr	w13, [sp, #96]
   1cca4:	mov	w10, w13
   1cca8:	mov	x11, #0x2c                  	// #44
   1ccac:	mul	x10, x11, x10
   1ccb0:	add	x8, x8, x10
   1ccb4:	ldr	w13, [x8, #16]
   1ccb8:	cmp	w12, w13
   1ccbc:	b.cs	1cd4c <lzma_mode_is_supported@@XZ_5.0+0x27e4>  // b.hs, b.nlast
   1ccc0:	ldr	w8, [sp, #64]
   1ccc4:	ldur	x9, [x29, #-40]
   1ccc8:	mov	x10, #0xee4                 	// #3812
   1cccc:	movk	x10, #0x1, lsl #16
   1ccd0:	add	x9, x9, x10
   1ccd4:	ldr	w11, [sp, #96]
   1ccd8:	mov	w12, w11
   1ccdc:	mov	x13, #0x2c                  	// #44
   1cce0:	mul	x12, x13, x12
   1cce4:	add	x9, x9, x12
   1cce8:	str	w8, [x9, #16]
   1ccec:	ldur	x9, [x29, #-40]
   1ccf0:	add	x9, x9, x10
   1ccf4:	ldr	w8, [sp, #96]
   1ccf8:	mov	w12, w8
   1ccfc:	mul	x12, x13, x12
   1cd00:	add	x9, x9, x12
   1cd04:	str	wzr, [x9, #20]
   1cd08:	ldr	w8, [sp, #68]
   1cd0c:	add	w8, w8, #0x4
   1cd10:	ldur	x9, [x29, #-40]
   1cd14:	add	x9, x9, x10
   1cd18:	ldr	w11, [sp, #96]
   1cd1c:	mov	w12, w11
   1cd20:	mul	x12, x13, x12
   1cd24:	add	x9, x9, x12
   1cd28:	str	w8, [x9, #24]
   1cd2c:	ldur	x9, [x29, #-40]
   1cd30:	add	x9, x9, x10
   1cd34:	ldr	w8, [sp, #96]
   1cd38:	mov	w10, w8
   1cd3c:	mul	x10, x13, x10
   1cd40:	add	x9, x9, x10
   1cd44:	mov	w8, #0x0                   	// #0
   1cd48:	strb	w8, [x9, #4]
   1cd4c:	ldr	w8, [sp, #96]
   1cd50:	ldur	x9, [x29, #-40]
   1cd54:	add	x9, x9, #0x2f4
   1cd58:	ldr	w10, [sp, #72]
   1cd5c:	mov	w11, w10
   1cd60:	mov	x12, #0x8                   	// #8
   1cd64:	mul	x11, x12, x11
   1cd68:	ldr	w10, [x9, x11]
   1cd6c:	cmp	w8, w10
   1cd70:	b.ne	1cd90 <lzma_mode_is_supported@@XZ_5.0+0x2828>  // b.any
   1cd74:	ldr	w8, [sp, #72]
   1cd78:	add	w8, w8, #0x1
   1cd7c:	str	w8, [sp, #72]
   1cd80:	ldur	w9, [x29, #-80]
   1cd84:	cmp	w8, w9
   1cd88:	b.ne	1cd90 <lzma_mode_is_supported@@XZ_5.0+0x2828>  // b.any
   1cd8c:	b	1cda0 <lzma_mode_is_supported@@XZ_5.0+0x2838>
   1cd90:	ldr	w8, [sp, #96]
   1cd94:	add	w8, w8, #0x1
   1cd98:	str	w8, [sp, #96]
   1cd9c:	b	1cc40 <lzma_mode_is_supported@@XZ_5.0+0x26d8>
   1cda0:	ldr	w8, [sp, #104]
   1cda4:	stur	w8, [x29, #-28]
   1cda8:	ldur	w0, [x29, #-28]
   1cdac:	ldr	x28, [sp, #272]
   1cdb0:	ldp	x29, x30, [sp, #256]
   1cdb4:	add	sp, sp, #0x120
   1cdb8:	ret
   1cdbc:	stp	x29, x30, [sp, #-32]!
   1cdc0:	str	x28, [sp, #16]
   1cdc4:	mov	x29, sp
   1cdc8:	sub	sp, sp, #0x210
   1cdcc:	sub	x8, x29, #0xb0
   1cdd0:	str	x0, [x8, #112]
   1cdd4:	str	x1, [x8, #104]
   1cdd8:	str	x2, [x8, #96]
   1cddc:	stur	w3, [x29, #-84]
   1cde0:	stur	w4, [x29, #-88]
   1cde4:	stur	w5, [x29, #-92]
   1cde8:	stur	w6, [x29, #-96]
   1cdec:	stur	w7, [x29, #-100]
   1cdf0:	ldr	x9, [x8, #112]
   1cdf4:	ldr	w10, [x9, #2948]
   1cdf8:	stur	w10, [x29, #-104]
   1cdfc:	ldr	x9, [x8, #112]
   1ce00:	ldr	w10, [x9, #2952]
   1ce04:	stur	w10, [x29, #-108]
   1ce08:	ldr	x9, [x8, #112]
   1ce0c:	mov	x11, #0xee4                 	// #3812
   1ce10:	movk	x11, #0x1, lsl #16
   1ce14:	add	x9, x9, x11
   1ce18:	ldur	w10, [x29, #-92]
   1ce1c:	mov	w12, w10
   1ce20:	mov	x13, #0x2c                  	// #44
   1ce24:	mul	x12, x13, x12
   1ce28:	add	x9, x9, x12
   1ce2c:	ldr	w10, [x9, #20]
   1ce30:	stur	w10, [x29, #-112]
   1ce34:	ldr	x9, [x8, #112]
   1ce38:	add	x9, x9, x11
   1ce3c:	ldur	w10, [x29, #-92]
   1ce40:	mov	w11, w10
   1ce44:	mul	x11, x13, x11
   1ce48:	add	x9, x9, x11
   1ce4c:	ldrb	w10, [x9, #4]
   1ce50:	str	x8, [sp, #184]
   1ce54:	tbnz	w10, #0, 1ce5c <lzma_mode_is_supported@@XZ_5.0+0x28f4>
   1ce58:	b	1cfbc <lzma_mode_is_supported@@XZ_5.0+0x2a54>
   1ce5c:	ldur	w8, [x29, #-112]
   1ce60:	subs	w8, w8, #0x1
   1ce64:	stur	w8, [x29, #-112]
   1ce68:	ldr	x9, [sp, #184]
   1ce6c:	ldr	x10, [x9, #112]
   1ce70:	mov	x11, #0xee4                 	// #3812
   1ce74:	movk	x11, #0x1, lsl #16
   1ce78:	add	x10, x10, x11
   1ce7c:	ldur	w8, [x29, #-92]
   1ce80:	mov	w11, w8
   1ce84:	mov	x12, #0x2c                  	// #44
   1ce88:	mul	x11, x12, x11
   1ce8c:	add	x10, x10, x11
   1ce90:	ldrb	w8, [x10, #5]
   1ce94:	tbnz	w8, #0, 1ce9c <lzma_mode_is_supported@@XZ_5.0+0x2934>
   1ce98:	b	1cf3c <lzma_mode_is_supported@@XZ_5.0+0x29d4>
   1ce9c:	ldr	x8, [sp, #184]
   1cea0:	ldr	x9, [x8, #112]
   1cea4:	mov	x10, #0xee4                 	// #3812
   1cea8:	movk	x10, #0x1, lsl #16
   1ceac:	add	x9, x9, x10
   1ceb0:	ldr	x11, [x8, #112]
   1ceb4:	add	x11, x11, x10
   1ceb8:	ldur	w12, [x29, #-92]
   1cebc:	mov	w13, w12
   1cec0:	mov	x14, #0x2c                  	// #44
   1cec4:	mul	x13, x14, x13
   1cec8:	add	x11, x11, x13
   1cecc:	ldr	w12, [x11, #8]
   1ced0:	mov	w11, w12
   1ced4:	mul	x11, x14, x11
   1ced8:	ldr	w12, [x9, x11]
   1cedc:	stur	w12, [x29, #-116]
   1cee0:	ldr	x9, [x8, #112]
   1cee4:	add	x9, x9, x10
   1cee8:	ldur	w12, [x29, #-92]
   1ceec:	mov	w10, w12
   1cef0:	mul	x10, x14, x10
   1cef4:	add	x9, x9, x10
   1cef8:	ldr	w12, [x9, #12]
   1cefc:	cmp	w12, #0x4
   1cf00:	b.cs	1cf20 <lzma_mode_is_supported@@XZ_5.0+0x29b8>  // b.hs, b.nlast
   1cf04:	ldur	w8, [x29, #-116]
   1cf08:	mov	w9, #0xb                   	// #11
   1cf0c:	mov	w10, #0x8                   	// #8
   1cf10:	cmp	w8, #0x7
   1cf14:	csel	w8, w10, w9, cc  // cc = lo, ul, last
   1cf18:	stur	w8, [x29, #-116]
   1cf1c:	b	1cf38 <lzma_mode_is_supported@@XZ_5.0+0x29d0>
   1cf20:	ldur	w8, [x29, #-116]
   1cf24:	mov	w9, #0x7                   	// #7
   1cf28:	mov	w10, #0xa                   	// #10
   1cf2c:	cmp	w8, #0x7
   1cf30:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   1cf34:	stur	w8, [x29, #-116]
   1cf38:	b	1cf68 <lzma_mode_is_supported@@XZ_5.0+0x2a00>
   1cf3c:	ldr	x8, [sp, #184]
   1cf40:	ldr	x9, [x8, #112]
   1cf44:	mov	x10, #0xee4                 	// #3812
   1cf48:	movk	x10, #0x1, lsl #16
   1cf4c:	add	x9, x9, x10
   1cf50:	ldur	w11, [x29, #-112]
   1cf54:	mov	w10, w11
   1cf58:	mov	x12, #0x2c                  	// #44
   1cf5c:	mul	x10, x12, x10
   1cf60:	ldr	w11, [x9, x10]
   1cf64:	stur	w11, [x29, #-116]
   1cf68:	ldur	w8, [x29, #-116]
   1cf6c:	cmp	w8, #0x3
   1cf70:	b.hi	1cf80 <lzma_mode_is_supported@@XZ_5.0+0x2a18>  // b.pmore
   1cf74:	mov	w8, wzr
   1cf78:	str	w8, [sp, #180]
   1cf7c:	b	1cfb0 <lzma_mode_is_supported@@XZ_5.0+0x2a48>
   1cf80:	ldur	w8, [x29, #-116]
   1cf84:	cmp	w8, #0x9
   1cf88:	b.hi	1cf9c <lzma_mode_is_supported@@XZ_5.0+0x2a34>  // b.pmore
   1cf8c:	ldur	w8, [x29, #-116]
   1cf90:	subs	w8, w8, #0x3
   1cf94:	str	w8, [sp, #176]
   1cf98:	b	1cfa8 <lzma_mode_is_supported@@XZ_5.0+0x2a40>
   1cf9c:	ldur	w8, [x29, #-116]
   1cfa0:	subs	w8, w8, #0x6
   1cfa4:	str	w8, [sp, #176]
   1cfa8:	ldr	w8, [sp, #176]
   1cfac:	str	w8, [sp, #180]
   1cfb0:	ldr	w8, [sp, #180]
   1cfb4:	stur	w8, [x29, #-116]
   1cfb8:	b	1cfe8 <lzma_mode_is_supported@@XZ_5.0+0x2a80>
   1cfbc:	ldr	x8, [sp, #184]
   1cfc0:	ldr	x9, [x8, #112]
   1cfc4:	mov	x10, #0xee4                 	// #3812
   1cfc8:	movk	x10, #0x1, lsl #16
   1cfcc:	add	x9, x9, x10
   1cfd0:	ldur	w11, [x29, #-112]
   1cfd4:	mov	w10, w11
   1cfd8:	mov	x12, #0x2c                  	// #44
   1cfdc:	mul	x10, x12, x10
   1cfe0:	ldr	w11, [x9, x10]
   1cfe4:	stur	w11, [x29, #-116]
   1cfe8:	ldur	w8, [x29, #-112]
   1cfec:	ldur	w9, [x29, #-92]
   1cff0:	subs	w9, w9, #0x1
   1cff4:	cmp	w8, w9
   1cff8:	b.ne	1d09c <lzma_mode_is_supported@@XZ_5.0+0x2b34>  // b.any
   1cffc:	ldr	x8, [sp, #184]
   1d000:	ldr	x9, [x8, #112]
   1d004:	mov	x10, #0xee4                 	// #3812
   1d008:	movk	x10, #0x1, lsl #16
   1d00c:	add	x9, x9, x10
   1d010:	ldur	w11, [x29, #-92]
   1d014:	mov	w10, w11
   1d018:	mov	x12, #0x2c                  	// #44
   1d01c:	mul	x10, x12, x10
   1d020:	add	x9, x9, x10
   1d024:	ldr	w11, [x9, #24]
   1d028:	cbnz	w11, 1d048 <lzma_mode_is_supported@@XZ_5.0+0x2ae0>
   1d02c:	ldur	w8, [x29, #-116]
   1d030:	mov	w9, #0x9                   	// #9
   1d034:	mov	w10, #0xb                   	// #11
   1d038:	cmp	w8, #0x7
   1d03c:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   1d040:	stur	w8, [x29, #-116]
   1d044:	b	1d098 <lzma_mode_is_supported@@XZ_5.0+0x2b30>
   1d048:	ldur	w8, [x29, #-116]
   1d04c:	cmp	w8, #0x3
   1d050:	b.hi	1d060 <lzma_mode_is_supported@@XZ_5.0+0x2af8>  // b.pmore
   1d054:	mov	w8, wzr
   1d058:	str	w8, [sp, #172]
   1d05c:	b	1d090 <lzma_mode_is_supported@@XZ_5.0+0x2b28>
   1d060:	ldur	w8, [x29, #-116]
   1d064:	cmp	w8, #0x9
   1d068:	b.hi	1d07c <lzma_mode_is_supported@@XZ_5.0+0x2b14>  // b.pmore
   1d06c:	ldur	w8, [x29, #-116]
   1d070:	subs	w8, w8, #0x3
   1d074:	str	w8, [sp, #168]
   1d078:	b	1d088 <lzma_mode_is_supported@@XZ_5.0+0x2b20>
   1d07c:	ldur	w8, [x29, #-116]
   1d080:	subs	w8, w8, #0x6
   1d084:	str	w8, [sp, #168]
   1d088:	ldr	w8, [sp, #168]
   1d08c:	str	w8, [sp, #172]
   1d090:	ldr	w8, [sp, #172]
   1d094:	stur	w8, [x29, #-116]
   1d098:	b	1d384 <lzma_mode_is_supported@@XZ_5.0+0x2e1c>
   1d09c:	ldr	x8, [sp, #184]
   1d0a0:	ldr	x9, [x8, #112]
   1d0a4:	mov	x10, #0xee4                 	// #3812
   1d0a8:	movk	x10, #0x1, lsl #16
   1d0ac:	add	x9, x9, x10
   1d0b0:	ldur	w11, [x29, #-92]
   1d0b4:	mov	w10, w11
   1d0b8:	mov	x12, #0x2c                  	// #44
   1d0bc:	mul	x10, x12, x10
   1d0c0:	add	x9, x9, x10
   1d0c4:	ldrb	w11, [x9, #4]
   1d0c8:	tbnz	w11, #0, 1d0d0 <lzma_mode_is_supported@@XZ_5.0+0x2b68>
   1d0cc:	b	1d170 <lzma_mode_is_supported@@XZ_5.0+0x2c08>
   1d0d0:	ldr	x8, [sp, #184]
   1d0d4:	ldr	x9, [x8, #112]
   1d0d8:	mov	x10, #0xee4                 	// #3812
   1d0dc:	movk	x10, #0x1, lsl #16
   1d0e0:	add	x9, x9, x10
   1d0e4:	ldur	w11, [x29, #-92]
   1d0e8:	mov	w10, w11
   1d0ec:	mov	x12, #0x2c                  	// #44
   1d0f0:	mul	x10, x12, x10
   1d0f4:	add	x9, x9, x10
   1d0f8:	ldrb	w11, [x9, #5]
   1d0fc:	tbnz	w11, #0, 1d104 <lzma_mode_is_supported@@XZ_5.0+0x2b9c>
   1d100:	b	1d170 <lzma_mode_is_supported@@XZ_5.0+0x2c08>
   1d104:	ldr	x8, [sp, #184]
   1d108:	ldr	x9, [x8, #112]
   1d10c:	mov	x10, #0xee4                 	// #3812
   1d110:	movk	x10, #0x1, lsl #16
   1d114:	add	x9, x9, x10
   1d118:	ldur	w11, [x29, #-92]
   1d11c:	mov	w12, w11
   1d120:	mov	x13, #0x2c                  	// #44
   1d124:	mul	x12, x13, x12
   1d128:	add	x9, x9, x12
   1d12c:	ldr	w11, [x9, #8]
   1d130:	stur	w11, [x29, #-112]
   1d134:	ldr	x9, [x8, #112]
   1d138:	add	x9, x9, x10
   1d13c:	ldur	w11, [x29, #-92]
   1d140:	mov	w10, w11
   1d144:	mul	x10, x13, x10
   1d148:	add	x9, x9, x10
   1d14c:	ldr	w11, [x9, #12]
   1d150:	stur	w11, [x29, #-120]
   1d154:	ldur	w11, [x29, #-116]
   1d158:	mov	w14, #0xb                   	// #11
   1d15c:	mov	w15, #0x8                   	// #8
   1d160:	cmp	w11, #0x7
   1d164:	csel	w11, w15, w14, cc  // cc = lo, ul, last
   1d168:	stur	w11, [x29, #-116]
   1d16c:	b	1d1e0 <lzma_mode_is_supported@@XZ_5.0+0x2c78>
   1d170:	ldr	x8, [sp, #184]
   1d174:	ldr	x9, [x8, #112]
   1d178:	mov	x10, #0xee4                 	// #3812
   1d17c:	movk	x10, #0x1, lsl #16
   1d180:	add	x9, x9, x10
   1d184:	ldur	w11, [x29, #-92]
   1d188:	mov	w10, w11
   1d18c:	mov	x12, #0x2c                  	// #44
   1d190:	mul	x10, x12, x10
   1d194:	add	x9, x9, x10
   1d198:	ldr	w11, [x9, #24]
   1d19c:	stur	w11, [x29, #-120]
   1d1a0:	ldur	w11, [x29, #-120]
   1d1a4:	cmp	w11, #0x4
   1d1a8:	b.cs	1d1c8 <lzma_mode_is_supported@@XZ_5.0+0x2c60>  // b.hs, b.nlast
   1d1ac:	ldur	w8, [x29, #-116]
   1d1b0:	mov	w9, #0xb                   	// #11
   1d1b4:	mov	w10, #0x8                   	// #8
   1d1b8:	cmp	w8, #0x7
   1d1bc:	csel	w8, w10, w9, cc  // cc = lo, ul, last
   1d1c0:	stur	w8, [x29, #-116]
   1d1c4:	b	1d1e0 <lzma_mode_is_supported@@XZ_5.0+0x2c78>
   1d1c8:	ldur	w8, [x29, #-116]
   1d1cc:	mov	w9, #0x7                   	// #7
   1d1d0:	mov	w10, #0xa                   	// #10
   1d1d4:	cmp	w8, #0x7
   1d1d8:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   1d1dc:	stur	w8, [x29, #-116]
   1d1e0:	ldur	w8, [x29, #-120]
   1d1e4:	cmp	w8, #0x4
   1d1e8:	b.cs	1d304 <lzma_mode_is_supported@@XZ_5.0+0x2d9c>  // b.hs, b.nlast
   1d1ec:	ldr	x8, [sp, #184]
   1d1f0:	ldr	x9, [x8, #112]
   1d1f4:	mov	x10, #0xee4                 	// #3812
   1d1f8:	movk	x10, #0x1, lsl #16
   1d1fc:	add	x9, x9, x10
   1d200:	ldur	w11, [x29, #-112]
   1d204:	mov	w10, w11
   1d208:	mov	x12, #0x2c                  	// #44
   1d20c:	mul	x10, x12, x10
   1d210:	add	x9, x9, x10
   1d214:	add	x9, x9, #0x1c
   1d218:	ldur	w11, [x29, #-120]
   1d21c:	mov	w10, w11
   1d220:	ldr	w11, [x9, x10, lsl #2]
   1d224:	ldr	x9, [x8, #104]
   1d228:	str	w11, [x9]
   1d22c:	mov	w11, #0x1                   	// #1
   1d230:	stur	w11, [x29, #-124]
   1d234:	ldur	w8, [x29, #-124]
   1d238:	ldur	w9, [x29, #-120]
   1d23c:	cmp	w8, w9
   1d240:	b.hi	1d29c <lzma_mode_is_supported@@XZ_5.0+0x2d34>  // b.pmore
   1d244:	ldr	x8, [sp, #184]
   1d248:	ldr	x9, [x8, #112]
   1d24c:	mov	x10, #0xee4                 	// #3812
   1d250:	movk	x10, #0x1, lsl #16
   1d254:	add	x9, x9, x10
   1d258:	ldur	w11, [x29, #-112]
   1d25c:	mov	w10, w11
   1d260:	mov	x12, #0x2c                  	// #44
   1d264:	mul	x10, x12, x10
   1d268:	add	x9, x9, x10
   1d26c:	add	x9, x9, #0x1c
   1d270:	ldur	w11, [x29, #-124]
   1d274:	subs	w11, w11, #0x1
   1d278:	ldr	w11, [x9, w11, uxtw #2]
   1d27c:	ldr	x9, [x8, #104]
   1d280:	ldur	w13, [x29, #-124]
   1d284:	mov	w10, w13
   1d288:	str	w11, [x9, x10, lsl #2]
   1d28c:	ldur	w8, [x29, #-124]
   1d290:	add	w8, w8, #0x1
   1d294:	stur	w8, [x29, #-124]
   1d298:	b	1d234 <lzma_mode_is_supported@@XZ_5.0+0x2ccc>
   1d29c:	ldur	w8, [x29, #-124]
   1d2a0:	cmp	w8, #0x4
   1d2a4:	b.cs	1d300 <lzma_mode_is_supported@@XZ_5.0+0x2d98>  // b.hs, b.nlast
   1d2a8:	ldr	x8, [sp, #184]
   1d2ac:	ldr	x9, [x8, #112]
   1d2b0:	mov	x10, #0xee4                 	// #3812
   1d2b4:	movk	x10, #0x1, lsl #16
   1d2b8:	add	x9, x9, x10
   1d2bc:	ldur	w11, [x29, #-112]
   1d2c0:	mov	w10, w11
   1d2c4:	mov	x12, #0x2c                  	// #44
   1d2c8:	mul	x10, x12, x10
   1d2cc:	add	x9, x9, x10
   1d2d0:	add	x9, x9, #0x1c
   1d2d4:	ldur	w11, [x29, #-124]
   1d2d8:	mov	w10, w11
   1d2dc:	ldr	w11, [x9, x10, lsl #2]
   1d2e0:	ldr	x9, [x8, #104]
   1d2e4:	ldur	w13, [x29, #-124]
   1d2e8:	mov	w10, w13
   1d2ec:	str	w11, [x9, x10, lsl #2]
   1d2f0:	ldur	w8, [x29, #-124]
   1d2f4:	add	w8, w8, #0x1
   1d2f8:	stur	w8, [x29, #-124]
   1d2fc:	b	1d29c <lzma_mode_is_supported@@XZ_5.0+0x2d34>
   1d300:	b	1d384 <lzma_mode_is_supported@@XZ_5.0+0x2e1c>
   1d304:	ldur	w8, [x29, #-120]
   1d308:	subs	w8, w8, #0x4
   1d30c:	ldr	x9, [sp, #184]
   1d310:	ldr	x10, [x9, #104]
   1d314:	str	w8, [x10]
   1d318:	mov	w8, #0x1                   	// #1
   1d31c:	stur	w8, [x29, #-128]
   1d320:	ldur	w8, [x29, #-128]
   1d324:	cmp	w8, #0x4
   1d328:	b.cs	1d384 <lzma_mode_is_supported@@XZ_5.0+0x2e1c>  // b.hs, b.nlast
   1d32c:	ldr	x8, [sp, #184]
   1d330:	ldr	x9, [x8, #112]
   1d334:	mov	x10, #0xee4                 	// #3812
   1d338:	movk	x10, #0x1, lsl #16
   1d33c:	add	x9, x9, x10
   1d340:	ldur	w11, [x29, #-112]
   1d344:	mov	w10, w11
   1d348:	mov	x12, #0x2c                  	// #44
   1d34c:	mul	x10, x12, x10
   1d350:	add	x9, x9, x10
   1d354:	add	x9, x9, #0x1c
   1d358:	ldur	w11, [x29, #-128]
   1d35c:	subs	w11, w11, #0x1
   1d360:	ldr	w11, [x9, w11, uxtw #2]
   1d364:	ldr	x9, [x8, #104]
   1d368:	ldur	w13, [x29, #-128]
   1d36c:	mov	w10, w13
   1d370:	str	w11, [x9, x10, lsl #2]
   1d374:	ldur	w8, [x29, #-128]
   1d378:	add	w8, w8, #0x1
   1d37c:	stur	w8, [x29, #-128]
   1d380:	b	1d320 <lzma_mode_is_supported@@XZ_5.0+0x2db8>
   1d384:	ldur	w8, [x29, #-116]
   1d388:	ldr	x9, [sp, #184]
   1d38c:	ldr	x10, [x9, #112]
   1d390:	mov	x11, #0xee4                 	// #3812
   1d394:	movk	x11, #0x1, lsl #16
   1d398:	add	x10, x10, x11
   1d39c:	ldur	w12, [x29, #-92]
   1d3a0:	mov	w11, w12
   1d3a4:	mov	x13, #0x2c                  	// #44
   1d3a8:	mul	x11, x13, x11
   1d3ac:	str	w8, [x10, x11]
   1d3b0:	stur	wzr, [x29, #-132]
   1d3b4:	ldur	w8, [x29, #-132]
   1d3b8:	cmp	w8, #0x4
   1d3bc:	b.cs	1d418 <lzma_mode_is_supported@@XZ_5.0+0x2eb0>  // b.hs, b.nlast
   1d3c0:	ldr	x8, [sp, #184]
   1d3c4:	ldr	x9, [x8, #104]
   1d3c8:	ldur	w10, [x29, #-132]
   1d3cc:	mov	w11, w10
   1d3d0:	ldr	w10, [x9, x11, lsl #2]
   1d3d4:	ldr	x9, [x8, #112]
   1d3d8:	mov	x11, #0xee4                 	// #3812
   1d3dc:	movk	x11, #0x1, lsl #16
   1d3e0:	add	x9, x9, x11
   1d3e4:	ldur	w12, [x29, #-92]
   1d3e8:	mov	w11, w12
   1d3ec:	mov	x13, #0x2c                  	// #44
   1d3f0:	mul	x11, x13, x11
   1d3f4:	add	x9, x9, x11
   1d3f8:	add	x9, x9, #0x1c
   1d3fc:	ldur	w12, [x29, #-132]
   1d400:	mov	w11, w12
   1d404:	str	w10, [x9, x11, lsl #2]
   1d408:	ldur	w8, [x29, #-132]
   1d40c:	add	w8, w8, #0x1
   1d410:	stur	w8, [x29, #-132]
   1d414:	b	1d3b4 <lzma_mode_is_supported@@XZ_5.0+0x2e4c>
   1d418:	ldr	x8, [sp, #184]
   1d41c:	ldr	x9, [x8, #112]
   1d420:	mov	x10, #0xee4                 	// #3812
   1d424:	movk	x10, #0x1, lsl #16
   1d428:	add	x9, x9, x10
   1d42c:	ldur	w11, [x29, #-92]
   1d430:	mov	w12, w11
   1d434:	mov	x13, #0x2c                  	// #44
   1d438:	mul	x12, x13, x12
   1d43c:	add	x9, x9, x12
   1d440:	ldr	w11, [x9, #16]
   1d444:	stur	w11, [x29, #-136]
   1d448:	ldr	x9, [x8, #96]
   1d44c:	ldrb	w11, [x9]
   1d450:	sturb	w11, [x29, #-137]
   1d454:	ldr	x9, [x8, #96]
   1d458:	ldr	x12, [x8, #104]
   1d45c:	ldr	w11, [x12]
   1d460:	mov	w12, w11
   1d464:	mov	x14, xzr
   1d468:	subs	x12, x14, x12
   1d46c:	add	x9, x9, x12
   1d470:	mov	x12, #0xffffffffffffffff    	// #-1
   1d474:	add	x9, x9, x12
   1d478:	ldrb	w11, [x9]
   1d47c:	sturb	w11, [x29, #-138]
   1d480:	ldur	w11, [x29, #-88]
   1d484:	ldr	x9, [x8, #112]
   1d488:	ldr	w15, [x9, #2960]
   1d48c:	and	w11, w11, w15
   1d490:	stur	w11, [x29, #-144]
   1d494:	ldur	w11, [x29, #-136]
   1d498:	ldr	x9, [x8, #112]
   1d49c:	mov	x12, #0x6b9c                	// #27548
   1d4a0:	add	x9, x9, x12
   1d4a4:	ldur	w15, [x29, #-116]
   1d4a8:	mov	w12, w15
   1d4ac:	mov	x14, #0x20                  	// #32
   1d4b0:	mul	x12, x14, x12
   1d4b4:	add	x9, x9, x12
   1d4b8:	ldur	w15, [x29, #-144]
   1d4bc:	mov	w12, w15
   1d4c0:	ldrh	w0, [x9, x12, lsl #1]
   1d4c4:	str	x10, [sp, #160]
   1d4c8:	str	x13, [sp, #152]
   1d4cc:	str	w11, [sp, #148]
   1d4d0:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1d4d4:	ldr	w11, [sp, #148]
   1d4d8:	add	w15, w11, w0
   1d4dc:	ldr	x8, [sp, #184]
   1d4e0:	ldr	x0, [x8, #112]
   1d4e4:	ldur	w1, [x29, #-88]
   1d4e8:	ldr	x9, [x8, #96]
   1d4ec:	ldurb	w2, [x9, #-1]
   1d4f0:	ldur	w16, [x29, #-116]
   1d4f4:	cmp	w16, #0x7
   1d4f8:	cset	w16, cc  // cc = lo, ul, last
   1d4fc:	eor	w16, w16, #0x1
   1d500:	ldurb	w4, [x29, #-138]
   1d504:	ldurb	w5, [x29, #-137]
   1d508:	and	w3, w16, #0x1
   1d50c:	str	w15, [sp, #144]
   1d510:	bl	1f0ac <lzma_mode_is_supported@@XZ_5.0+0x4b44>
   1d514:	ldr	w11, [sp, #144]
   1d518:	add	w15, w11, w0
   1d51c:	stur	w15, [x29, #-148]
   1d520:	mov	w15, #0x0                   	// #0
   1d524:	sturb	w15, [x29, #-149]
   1d528:	ldur	w15, [x29, #-148]
   1d52c:	ldr	x8, [sp, #184]
   1d530:	ldr	x9, [x8, #112]
   1d534:	ldr	x10, [sp, #160]
   1d538:	add	x9, x9, x10
   1d53c:	ldur	w16, [x29, #-92]
   1d540:	add	w16, w16, #0x1
   1d544:	mov	w12, w16
   1d548:	ubfx	x12, x12, #0, #32
   1d54c:	ldr	x13, [sp, #152]
   1d550:	mul	x12, x13, x12
   1d554:	add	x9, x9, x12
   1d558:	ldr	w16, [x9, #16]
   1d55c:	cmp	w15, w16
   1d560:	b.cs	1d5f0 <lzma_mode_is_supported@@XZ_5.0+0x3088>  // b.hs, b.nlast
   1d564:	ldur	w8, [x29, #-148]
   1d568:	ldr	x9, [sp, #184]
   1d56c:	ldr	x10, [x9, #112]
   1d570:	mov	x11, #0xee4                 	// #3812
   1d574:	movk	x11, #0x1, lsl #16
   1d578:	add	x10, x10, x11
   1d57c:	ldur	w12, [x29, #-92]
   1d580:	add	w12, w12, #0x1
   1d584:	mov	w13, w12
   1d588:	ubfx	x13, x13, #0, #32
   1d58c:	mov	x14, #0x2c                  	// #44
   1d590:	mul	x13, x14, x13
   1d594:	add	x10, x10, x13
   1d598:	str	w8, [x10, #16]
   1d59c:	ldur	w8, [x29, #-92]
   1d5a0:	ldr	x10, [x9, #112]
   1d5a4:	add	x10, x10, x11
   1d5a8:	ldur	w12, [x29, #-92]
   1d5ac:	add	w12, w12, #0x1
   1d5b0:	mov	w13, w12
   1d5b4:	ubfx	x13, x13, #0, #32
   1d5b8:	mul	x13, x14, x13
   1d5bc:	add	x10, x10, x13
   1d5c0:	str	w8, [x10, #20]
   1d5c4:	ldr	x10, [x9, #112]
   1d5c8:	add	x10, x10, x11
   1d5cc:	ldur	w8, [x29, #-92]
   1d5d0:	add	w8, w8, #0x1
   1d5d4:	mov	w11, w8
   1d5d8:	ubfx	x11, x11, #0, #32
   1d5dc:	mul	x11, x14, x11
   1d5e0:	add	x0, x10, x11
   1d5e4:	bl	1f210 <lzma_mode_is_supported@@XZ_5.0+0x4ca8>
   1d5e8:	mov	w8, #0x1                   	// #1
   1d5ec:	sturb	w8, [x29, #-149]
   1d5f0:	ldur	w8, [x29, #-136]
   1d5f4:	ldr	x9, [sp, #184]
   1d5f8:	ldr	x10, [x9, #112]
   1d5fc:	mov	x11, #0x6b9c                	// #27548
   1d600:	add	x10, x10, x11
   1d604:	ldur	w12, [x29, #-116]
   1d608:	mov	w11, w12
   1d60c:	mov	x13, #0x20                  	// #32
   1d610:	mul	x11, x13, x11
   1d614:	add	x10, x10, x11
   1d618:	ldur	w12, [x29, #-144]
   1d61c:	mov	w11, w12
   1d620:	ldrh	w0, [x10, x11, lsl #1]
   1d624:	str	w8, [sp, #140]
   1d628:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1d62c:	ldr	w8, [sp, #140]
   1d630:	add	w12, w8, w0
   1d634:	stur	w12, [x29, #-156]
   1d638:	ldur	w12, [x29, #-156]
   1d63c:	ldr	x9, [sp, #184]
   1d640:	ldr	x10, [x9, #112]
   1d644:	mov	x11, #0x6d1c                	// #27932
   1d648:	add	x10, x10, x11
   1d64c:	ldur	w14, [x29, #-116]
   1d650:	mov	w11, w14
   1d654:	ldrh	w0, [x10, x11, lsl #1]
   1d658:	str	w12, [sp, #136]
   1d65c:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1d660:	ldr	w8, [sp, #136]
   1d664:	add	w12, w8, w0
   1d668:	stur	w12, [x29, #-160]
   1d66c:	ldurb	w12, [x29, #-138]
   1d670:	ldurb	w14, [x29, #-137]
   1d674:	cmp	w12, w14
   1d678:	b.ne	1d7e8 <lzma_mode_is_supported@@XZ_5.0+0x3280>  // b.any
   1d67c:	ldr	x8, [sp, #184]
   1d680:	ldr	x9, [x8, #112]
   1d684:	mov	x10, #0xee4                 	// #3812
   1d688:	movk	x10, #0x1, lsl #16
   1d68c:	add	x9, x9, x10
   1d690:	ldur	w11, [x29, #-92]
   1d694:	add	w11, w11, #0x1
   1d698:	mov	w10, w11
   1d69c:	ubfx	x10, x10, #0, #32
   1d6a0:	mov	x12, #0x2c                  	// #44
   1d6a4:	mul	x10, x12, x10
   1d6a8:	add	x9, x9, x10
   1d6ac:	ldr	w11, [x9, #20]
   1d6b0:	ldur	w13, [x29, #-92]
   1d6b4:	cmp	w11, w13
   1d6b8:	b.cs	1d6f4 <lzma_mode_is_supported@@XZ_5.0+0x318c>  // b.hs, b.nlast
   1d6bc:	ldr	x8, [sp, #184]
   1d6c0:	ldr	x9, [x8, #112]
   1d6c4:	mov	x10, #0xee4                 	// #3812
   1d6c8:	movk	x10, #0x1, lsl #16
   1d6cc:	add	x9, x9, x10
   1d6d0:	ldur	w11, [x29, #-92]
   1d6d4:	add	w11, w11, #0x1
   1d6d8:	mov	w10, w11
   1d6dc:	ubfx	x10, x10, #0, #32
   1d6e0:	mov	x12, #0x2c                  	// #44
   1d6e4:	mul	x10, x12, x10
   1d6e8:	add	x9, x9, x10
   1d6ec:	ldr	w11, [x9, #24]
   1d6f0:	cbz	w11, 1d7e8 <lzma_mode_is_supported@@XZ_5.0+0x3280>
   1d6f4:	ldur	w8, [x29, #-160]
   1d6f8:	ldr	x9, [sp, #184]
   1d6fc:	ldr	x0, [x9, #112]
   1d700:	ldur	w1, [x29, #-116]
   1d704:	ldur	w2, [x29, #-144]
   1d708:	str	w8, [sp, #132]
   1d70c:	bl	1f260 <lzma_mode_is_supported@@XZ_5.0+0x4cf8>
   1d710:	ldr	w8, [sp, #132]
   1d714:	add	w10, w8, w0
   1d718:	stur	w10, [x29, #-164]
   1d71c:	ldur	w10, [x29, #-164]
   1d720:	ldr	x9, [sp, #184]
   1d724:	ldr	x11, [x9, #112]
   1d728:	mov	x12, #0xee4                 	// #3812
   1d72c:	movk	x12, #0x1, lsl #16
   1d730:	add	x11, x11, x12
   1d734:	ldur	w13, [x29, #-92]
   1d738:	add	w13, w13, #0x1
   1d73c:	mov	w12, w13
   1d740:	ubfx	x12, x12, #0, #32
   1d744:	mov	x14, #0x2c                  	// #44
   1d748:	mul	x12, x14, x12
   1d74c:	add	x11, x11, x12
   1d750:	ldr	w13, [x11, #16]
   1d754:	cmp	w10, w13
   1d758:	b.hi	1d7e8 <lzma_mode_is_supported@@XZ_5.0+0x3280>  // b.pmore
   1d75c:	ldur	w8, [x29, #-164]
   1d760:	ldr	x9, [sp, #184]
   1d764:	ldr	x10, [x9, #112]
   1d768:	mov	x11, #0xee4                 	// #3812
   1d76c:	movk	x11, #0x1, lsl #16
   1d770:	add	x10, x10, x11
   1d774:	ldur	w12, [x29, #-92]
   1d778:	add	w12, w12, #0x1
   1d77c:	mov	w13, w12
   1d780:	ubfx	x13, x13, #0, #32
   1d784:	mov	x14, #0x2c                  	// #44
   1d788:	mul	x13, x14, x13
   1d78c:	add	x10, x10, x13
   1d790:	str	w8, [x10, #16]
   1d794:	ldur	w8, [x29, #-92]
   1d798:	ldr	x10, [x9, #112]
   1d79c:	add	x10, x10, x11
   1d7a0:	ldur	w12, [x29, #-92]
   1d7a4:	add	w12, w12, #0x1
   1d7a8:	mov	w13, w12
   1d7ac:	ubfx	x13, x13, #0, #32
   1d7b0:	mul	x13, x14, x13
   1d7b4:	add	x10, x10, x13
   1d7b8:	str	w8, [x10, #20]
   1d7bc:	ldr	x10, [x9, #112]
   1d7c0:	add	x10, x10, x11
   1d7c4:	ldur	w8, [x29, #-92]
   1d7c8:	add	w8, w8, #0x1
   1d7cc:	mov	w11, w8
   1d7d0:	ubfx	x11, x11, #0, #32
   1d7d4:	mul	x11, x14, x11
   1d7d8:	add	x0, x10, x11
   1d7dc:	bl	1f2e0 <lzma_mode_is_supported@@XZ_5.0+0x4d78>
   1d7e0:	mov	w8, #0x1                   	// #1
   1d7e4:	sturb	w8, [x29, #-149]
   1d7e8:	ldur	w8, [x29, #-100]
   1d7ec:	cmp	w8, #0x2
   1d7f0:	b.cs	1d800 <lzma_mode_is_supported@@XZ_5.0+0x3298>  // b.hs, b.nlast
   1d7f4:	ldur	w8, [x29, #-84]
   1d7f8:	stur	w8, [x29, #-52]
   1d7fc:	b	1eae4 <lzma_mode_is_supported@@XZ_5.0+0x457c>
   1d800:	ldur	w8, [x29, #-100]
   1d804:	ldur	w9, [x29, #-96]
   1d808:	cmp	w8, w9
   1d80c:	b.cs	1d81c <lzma_mode_is_supported@@XZ_5.0+0x32b4>  // b.hs, b.nlast
   1d810:	ldur	w8, [x29, #-100]
   1d814:	str	w8, [sp, #128]
   1d818:	b	1d824 <lzma_mode_is_supported@@XZ_5.0+0x32bc>
   1d81c:	ldur	w8, [x29, #-96]
   1d820:	str	w8, [sp, #128]
   1d824:	ldr	w8, [sp, #128]
   1d828:	stur	w8, [x29, #-168]
   1d82c:	ldurb	w8, [x29, #-149]
   1d830:	tbnz	w8, #0, 1dba8 <lzma_mode_is_supported@@XZ_5.0+0x3640>
   1d834:	ldurb	w8, [x29, #-138]
   1d838:	ldurb	w9, [x29, #-137]
   1d83c:	cmp	w8, w9
   1d840:	b.eq	1dba8 <lzma_mode_is_supported@@XZ_5.0+0x3640>  // b.none
   1d844:	ldr	x8, [sp, #184]
   1d848:	ldr	x9, [x8, #96]
   1d84c:	ldr	x10, [x8, #104]
   1d850:	ldr	w11, [x10]
   1d854:	mov	w10, w11
   1d858:	mov	x12, xzr
   1d85c:	subs	x10, x12, x10
   1d860:	add	x9, x9, x10
   1d864:	mov	x10, #0xffffffffffffffff    	// #-1
   1d868:	add	x9, x9, x10
   1d86c:	str	x9, [x8]
   1d870:	ldur	w11, [x29, #-100]
   1d874:	ldur	w13, [x29, #-96]
   1d878:	add	w13, w13, #0x1
   1d87c:	cmp	w11, w13
   1d880:	b.cs	1d890 <lzma_mode_is_supported@@XZ_5.0+0x3328>  // b.hs, b.nlast
   1d884:	ldur	w8, [x29, #-100]
   1d888:	str	w8, [sp, #124]
   1d88c:	b	1d89c <lzma_mode_is_supported@@XZ_5.0+0x3334>
   1d890:	ldur	w8, [x29, #-96]
   1d894:	add	w8, w8, #0x1
   1d898:	str	w8, [sp, #124]
   1d89c:	ldr	w8, [sp, #124]
   1d8a0:	stur	w8, [x29, #-180]
   1d8a4:	ldr	x9, [sp, #184]
   1d8a8:	ldr	x10, [x9, #96]
   1d8ac:	ldr	x11, [x9]
   1d8b0:	ldur	w8, [x29, #-180]
   1d8b4:	str	x10, [x9, #144]
   1d8b8:	str	x11, [x9, #136]
   1d8bc:	mov	w12, #0x1                   	// #1
   1d8c0:	stur	w12, [x29, #-44]
   1d8c4:	stur	w8, [x29, #-48]
   1d8c8:	ldur	w8, [x29, #-44]
   1d8cc:	ldur	w9, [x29, #-48]
   1d8d0:	mov	w10, #0x0                   	// #0
   1d8d4:	cmp	w8, w9
   1d8d8:	str	w10, [sp, #120]
   1d8dc:	b.cs	1d910 <lzma_mode_is_supported@@XZ_5.0+0x33a8>  // b.hs, b.nlast
   1d8e0:	ldr	x8, [sp, #184]
   1d8e4:	ldr	x9, [x8, #144]
   1d8e8:	ldur	w10, [x29, #-44]
   1d8ec:	mov	w11, w10
   1d8f0:	ldrb	w10, [x9, x11]
   1d8f4:	ldr	x9, [x8, #136]
   1d8f8:	ldur	w12, [x29, #-44]
   1d8fc:	mov	w11, w12
   1d900:	ldrb	w12, [x9, x11]
   1d904:	cmp	w10, w12
   1d908:	cset	w10, eq  // eq = none
   1d90c:	str	w10, [sp, #120]
   1d910:	ldr	w8, [sp, #120]
   1d914:	tbnz	w8, #0, 1d91c <lzma_mode_is_supported@@XZ_5.0+0x33b4>
   1d918:	b	1d92c <lzma_mode_is_supported@@XZ_5.0+0x33c4>
   1d91c:	ldur	w8, [x29, #-44]
   1d920:	add	w8, w8, #0x1
   1d924:	stur	w8, [x29, #-44]
   1d928:	b	1d8c8 <lzma_mode_is_supported@@XZ_5.0+0x3360>
   1d92c:	ldur	w8, [x29, #-44]
   1d930:	subs	w8, w8, #0x1
   1d934:	stur	w8, [x29, #-184]
   1d938:	ldur	w8, [x29, #-184]
   1d93c:	cmp	w8, #0x2
   1d940:	b.cc	1dba8 <lzma_mode_is_supported@@XZ_5.0+0x3640>  // b.lo, b.ul, b.last
   1d944:	ldur	w8, [x29, #-116]
   1d948:	stur	w8, [x29, #-188]
   1d94c:	ldur	w8, [x29, #-188]
   1d950:	cmp	w8, #0x3
   1d954:	b.hi	1d964 <lzma_mode_is_supported@@XZ_5.0+0x33fc>  // b.pmore
   1d958:	mov	w8, wzr
   1d95c:	str	w8, [sp, #116]
   1d960:	b	1d994 <lzma_mode_is_supported@@XZ_5.0+0x342c>
   1d964:	ldur	w8, [x29, #-188]
   1d968:	cmp	w8, #0x9
   1d96c:	b.hi	1d980 <lzma_mode_is_supported@@XZ_5.0+0x3418>  // b.pmore
   1d970:	ldur	w8, [x29, #-188]
   1d974:	subs	w8, w8, #0x3
   1d978:	str	w8, [sp, #112]
   1d97c:	b	1d98c <lzma_mode_is_supported@@XZ_5.0+0x3424>
   1d980:	ldur	w8, [x29, #-188]
   1d984:	subs	w8, w8, #0x6
   1d988:	str	w8, [sp, #112]
   1d98c:	ldr	w8, [sp, #112]
   1d990:	str	w8, [sp, #116]
   1d994:	ldr	w8, [sp, #116]
   1d998:	stur	w8, [x29, #-188]
   1d99c:	ldur	w8, [x29, #-88]
   1d9a0:	add	w8, w8, #0x1
   1d9a4:	ldr	x9, [sp, #184]
   1d9a8:	ldr	x10, [x9, #112]
   1d9ac:	ldr	w11, [x10, #2960]
   1d9b0:	and	w8, w8, w11
   1d9b4:	stur	w8, [x29, #-192]
   1d9b8:	ldur	w8, [x29, #-148]
   1d9bc:	ldr	x10, [x9, #112]
   1d9c0:	mov	x12, #0x6b9c                	// #27548
   1d9c4:	add	x10, x10, x12
   1d9c8:	ldur	w11, [x29, #-188]
   1d9cc:	mov	w12, w11
   1d9d0:	mov	x13, #0x20                  	// #32
   1d9d4:	mul	x12, x13, x12
   1d9d8:	add	x10, x10, x12
   1d9dc:	ldur	w11, [x29, #-192]
   1d9e0:	mov	w12, w11
   1d9e4:	ldrh	w0, [x10, x12, lsl #1]
   1d9e8:	str	w8, [sp, #108]
   1d9ec:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1d9f0:	ldr	w8, [sp, #108]
   1d9f4:	add	w11, w8, w0
   1d9f8:	ldr	x9, [sp, #184]
   1d9fc:	ldr	x10, [x9, #112]
   1da00:	mov	x12, #0x6d1c                	// #27932
   1da04:	add	x10, x10, x12
   1da08:	ldur	w14, [x29, #-188]
   1da0c:	mov	w12, w14
   1da10:	ldrh	w0, [x10, x12, lsl #1]
   1da14:	str	w11, [sp, #104]
   1da18:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1da1c:	ldr	w8, [sp, #104]
   1da20:	add	w11, w8, w0
   1da24:	stur	w11, [x29, #-196]
   1da28:	ldur	w11, [x29, #-92]
   1da2c:	add	w11, w11, #0x1
   1da30:	ldur	w14, [x29, #-184]
   1da34:	add	w11, w11, w14
   1da38:	stur	w11, [x29, #-200]
   1da3c:	ldur	w8, [x29, #-84]
   1da40:	ldur	w9, [x29, #-200]
   1da44:	cmp	w8, w9
   1da48:	b.cs	1da8c <lzma_mode_is_supported@@XZ_5.0+0x3524>  // b.hs, b.nlast
   1da4c:	ldr	x8, [sp, #184]
   1da50:	ldr	x9, [x8, #112]
   1da54:	mov	x10, #0xee4                 	// #3812
   1da58:	movk	x10, #0x1, lsl #16
   1da5c:	add	x9, x9, x10
   1da60:	ldur	w11, [x29, #-84]
   1da64:	add	w11, w11, #0x1
   1da68:	stur	w11, [x29, #-84]
   1da6c:	mov	w10, w11
   1da70:	ubfx	x10, x10, #0, #32
   1da74:	mov	x12, #0x2c                  	// #44
   1da78:	mul	x10, x12, x10
   1da7c:	add	x9, x9, x10
   1da80:	mov	w11, #0x40000000            	// #1073741824
   1da84:	str	w11, [x9, #16]
   1da88:	b	1da3c <lzma_mode_is_supported@@XZ_5.0+0x34d4>
   1da8c:	ldur	w8, [x29, #-196]
   1da90:	ldr	x9, [sp, #184]
   1da94:	ldr	x0, [x9, #112]
   1da98:	ldur	w2, [x29, #-184]
   1da9c:	ldur	w3, [x29, #-188]
   1daa0:	ldur	w4, [x29, #-192]
   1daa4:	mov	w10, wzr
   1daa8:	mov	w1, w10
   1daac:	str	w8, [sp, #100]
   1dab0:	bl	1f634 <lzma_mode_is_supported@@XZ_5.0+0x50cc>
   1dab4:	ldr	w8, [sp, #100]
   1dab8:	add	w10, w8, w0
   1dabc:	stur	w10, [x29, #-204]
   1dac0:	ldur	w10, [x29, #-204]
   1dac4:	ldr	x9, [sp, #184]
   1dac8:	ldr	x11, [x9, #112]
   1dacc:	mov	x12, #0xee4                 	// #3812
   1dad0:	movk	x12, #0x1, lsl #16
   1dad4:	add	x11, x11, x12
   1dad8:	ldur	w13, [x29, #-200]
   1dadc:	mov	w12, w13
   1dae0:	mov	x14, #0x2c                  	// #44
   1dae4:	mul	x12, x14, x12
   1dae8:	add	x11, x11, x12
   1daec:	ldr	w13, [x11, #16]
   1daf0:	cmp	w10, w13
   1daf4:	b.cs	1dba8 <lzma_mode_is_supported@@XZ_5.0+0x3640>  // b.hs, b.nlast
   1daf8:	ldur	w8, [x29, #-204]
   1dafc:	ldr	x9, [sp, #184]
   1db00:	ldr	x10, [x9, #112]
   1db04:	mov	x11, #0xee4                 	// #3812
   1db08:	movk	x11, #0x1, lsl #16
   1db0c:	add	x10, x10, x11
   1db10:	ldur	w12, [x29, #-200]
   1db14:	mov	w13, w12
   1db18:	mov	x14, #0x2c                  	// #44
   1db1c:	mul	x13, x14, x13
   1db20:	add	x10, x10, x13
   1db24:	str	w8, [x10, #16]
   1db28:	ldur	w8, [x29, #-92]
   1db2c:	add	w8, w8, #0x1
   1db30:	ldr	x10, [x9, #112]
   1db34:	add	x10, x10, x11
   1db38:	ldur	w12, [x29, #-200]
   1db3c:	mov	w13, w12
   1db40:	mul	x13, x14, x13
   1db44:	add	x10, x10, x13
   1db48:	str	w8, [x10, #20]
   1db4c:	ldr	x10, [x9, #112]
   1db50:	add	x10, x10, x11
   1db54:	ldur	w8, [x29, #-200]
   1db58:	mov	w13, w8
   1db5c:	mul	x13, x14, x13
   1db60:	add	x10, x10, x13
   1db64:	str	wzr, [x10, #24]
   1db68:	ldr	x10, [x9, #112]
   1db6c:	add	x10, x10, x11
   1db70:	ldur	w8, [x29, #-200]
   1db74:	mov	w13, w8
   1db78:	mul	x13, x14, x13
   1db7c:	add	x10, x10, x13
   1db80:	mov	w8, #0x1                   	// #1
   1db84:	strb	w8, [x10, #4]
   1db88:	ldr	x10, [x9, #112]
   1db8c:	add	x10, x10, x11
   1db90:	ldur	w8, [x29, #-200]
   1db94:	mov	w11, w8
   1db98:	mul	x11, x14, x11
   1db9c:	add	x10, x10, x11
   1dba0:	mov	w8, #0x0                   	// #0
   1dba4:	strb	w8, [x10, #5]
   1dba8:	mov	w8, #0x2                   	// #2
   1dbac:	stur	w8, [x29, #-208]
   1dbb0:	stur	wzr, [x29, #-212]
   1dbb4:	ldur	w8, [x29, #-212]
   1dbb8:	cmp	w8, #0x4
   1dbbc:	b.cs	1e340 <lzma_mode_is_supported@@XZ_5.0+0x3dd8>  // b.hs, b.nlast
   1dbc0:	ldr	x8, [sp, #184]
   1dbc4:	ldr	x9, [x8, #96]
   1dbc8:	ldr	x10, [x8, #104]
   1dbcc:	ldur	w11, [x29, #-212]
   1dbd0:	mov	w12, w11
   1dbd4:	ldr	w11, [x10, x12, lsl #2]
   1dbd8:	mov	w10, w11
   1dbdc:	mov	x12, xzr
   1dbe0:	subs	x10, x12, x10
   1dbe4:	add	x9, x9, x10
   1dbe8:	mov	x10, #0xffffffffffffffff    	// #-1
   1dbec:	add	x9, x9, x10
   1dbf0:	stur	x9, [x29, #-224]
   1dbf4:	ldr	x9, [x8, #96]
   1dbf8:	ldrb	w11, [x9]
   1dbfc:	ldur	x9, [x29, #-224]
   1dc00:	ldrb	w13, [x9]
   1dc04:	cmp	w11, w13
   1dc08:	b.ne	1dc28 <lzma_mode_is_supported@@XZ_5.0+0x36c0>  // b.any
   1dc0c:	ldr	x8, [sp, #184]
   1dc10:	ldr	x9, [x8, #96]
   1dc14:	ldrb	w10, [x9, #1]
   1dc18:	ldur	x9, [x29, #-224]
   1dc1c:	ldrb	w11, [x9, #1]
   1dc20:	cmp	w10, w11
   1dc24:	b.eq	1dc2c <lzma_mode_is_supported@@XZ_5.0+0x36c4>  // b.none
   1dc28:	b	1e330 <lzma_mode_is_supported@@XZ_5.0+0x3dc8>
   1dc2c:	ldr	x8, [sp, #184]
   1dc30:	ldr	x9, [x8, #96]
   1dc34:	ldur	x10, [x29, #-224]
   1dc38:	ldur	w11, [x29, #-168]
   1dc3c:	str	x9, [x8, #168]
   1dc40:	str	x10, [x8, #160]
   1dc44:	mov	w12, #0x2                   	// #2
   1dc48:	stur	w12, [x29, #-20]
   1dc4c:	stur	w11, [x29, #-24]
   1dc50:	ldur	w8, [x29, #-20]
   1dc54:	ldur	w9, [x29, #-24]
   1dc58:	mov	w10, #0x0                   	// #0
   1dc5c:	cmp	w8, w9
   1dc60:	str	w10, [sp, #96]
   1dc64:	b.cs	1dc98 <lzma_mode_is_supported@@XZ_5.0+0x3730>  // b.hs, b.nlast
   1dc68:	ldr	x8, [sp, #184]
   1dc6c:	ldr	x9, [x8, #168]
   1dc70:	ldur	w10, [x29, #-20]
   1dc74:	mov	w11, w10
   1dc78:	ldrb	w10, [x9, x11]
   1dc7c:	ldr	x9, [x8, #160]
   1dc80:	ldur	w12, [x29, #-20]
   1dc84:	mov	w11, w12
   1dc88:	ldrb	w12, [x9, x11]
   1dc8c:	cmp	w10, w12
   1dc90:	cset	w10, eq  // eq = none
   1dc94:	str	w10, [sp, #96]
   1dc98:	ldr	w8, [sp, #96]
   1dc9c:	tbnz	w8, #0, 1dca4 <lzma_mode_is_supported@@XZ_5.0+0x373c>
   1dca0:	b	1dcb4 <lzma_mode_is_supported@@XZ_5.0+0x374c>
   1dca4:	ldur	w8, [x29, #-20]
   1dca8:	add	w8, w8, #0x1
   1dcac:	stur	w8, [x29, #-20]
   1dcb0:	b	1dc50 <lzma_mode_is_supported@@XZ_5.0+0x36e8>
   1dcb4:	ldur	w8, [x29, #-20]
   1dcb8:	stur	w8, [x29, #-228]
   1dcbc:	ldur	w8, [x29, #-84]
   1dcc0:	ldur	w9, [x29, #-92]
   1dcc4:	ldur	w10, [x29, #-228]
   1dcc8:	add	w9, w9, w10
   1dccc:	cmp	w8, w9
   1dcd0:	b.cs	1dd14 <lzma_mode_is_supported@@XZ_5.0+0x37ac>  // b.hs, b.nlast
   1dcd4:	ldr	x8, [sp, #184]
   1dcd8:	ldr	x9, [x8, #112]
   1dcdc:	mov	x10, #0xee4                 	// #3812
   1dce0:	movk	x10, #0x1, lsl #16
   1dce4:	add	x9, x9, x10
   1dce8:	ldur	w11, [x29, #-84]
   1dcec:	add	w11, w11, #0x1
   1dcf0:	stur	w11, [x29, #-84]
   1dcf4:	mov	w10, w11
   1dcf8:	ubfx	x10, x10, #0, #32
   1dcfc:	mov	x12, #0x2c                  	// #44
   1dd00:	mul	x10, x12, x10
   1dd04:	add	x9, x9, x10
   1dd08:	mov	w11, #0x40000000            	// #1073741824
   1dd0c:	str	w11, [x9, #16]
   1dd10:	b	1dcbc <lzma_mode_is_supported@@XZ_5.0+0x3754>
   1dd14:	ldur	w8, [x29, #-228]
   1dd18:	stur	w8, [x29, #-232]
   1dd1c:	ldur	w8, [x29, #-160]
   1dd20:	ldr	x9, [sp, #184]
   1dd24:	ldr	x0, [x9, #112]
   1dd28:	ldur	w1, [x29, #-212]
   1dd2c:	ldur	w2, [x29, #-116]
   1dd30:	ldur	w3, [x29, #-144]
   1dd34:	str	w8, [sp, #92]
   1dd38:	bl	1f304 <lzma_mode_is_supported@@XZ_5.0+0x4d9c>
   1dd3c:	ldr	w8, [sp, #92]
   1dd40:	add	w10, w8, w0
   1dd44:	stur	w10, [x29, #-236]
   1dd48:	ldur	w8, [x29, #-236]
   1dd4c:	ldr	x9, [sp, #184]
   1dd50:	ldr	x10, [x9, #112]
   1dd54:	mov	x11, #0xba48                	// #47688
   1dd58:	add	x0, x10, x11
   1dd5c:	ldur	w1, [x29, #-228]
   1dd60:	ldur	w2, [x29, #-144]
   1dd64:	str	w8, [sp, #88]
   1dd68:	bl	1f448 <lzma_mode_is_supported@@XZ_5.0+0x4ee0>
   1dd6c:	ldr	w8, [sp, #88]
   1dd70:	add	w12, w8, w0
   1dd74:	stur	w12, [x29, #-240]
   1dd78:	ldur	w12, [x29, #-240]
   1dd7c:	ldr	x9, [sp, #184]
   1dd80:	ldr	x10, [x9, #112]
   1dd84:	mov	x11, #0xee4                 	// #3812
   1dd88:	movk	x11, #0x1, lsl #16
   1dd8c:	add	x10, x10, x11
   1dd90:	ldur	w13, [x29, #-92]
   1dd94:	ldur	w14, [x29, #-228]
   1dd98:	add	w13, w13, w14
   1dd9c:	mov	w11, w13
   1dda0:	ubfx	x11, x11, #0, #32
   1dda4:	mov	x15, #0x2c                  	// #44
   1dda8:	mul	x11, x15, x11
   1ddac:	add	x10, x10, x11
   1ddb0:	ldr	w13, [x10, #16]
   1ddb4:	cmp	w12, w13
   1ddb8:	b.cs	1de7c <lzma_mode_is_supported@@XZ_5.0+0x3914>  // b.hs, b.nlast
   1ddbc:	ldur	w8, [x29, #-240]
   1ddc0:	ldr	x9, [sp, #184]
   1ddc4:	ldr	x10, [x9, #112]
   1ddc8:	mov	x11, #0xee4                 	// #3812
   1ddcc:	movk	x11, #0x1, lsl #16
   1ddd0:	add	x10, x10, x11
   1ddd4:	ldur	w12, [x29, #-92]
   1ddd8:	ldur	w13, [x29, #-228]
   1dddc:	add	w12, w12, w13
   1dde0:	mov	w14, w12
   1dde4:	ubfx	x14, x14, #0, #32
   1dde8:	mov	x15, #0x2c                  	// #44
   1ddec:	mul	x14, x15, x14
   1ddf0:	add	x10, x10, x14
   1ddf4:	str	w8, [x10, #16]
   1ddf8:	ldur	w8, [x29, #-92]
   1ddfc:	ldr	x10, [x9, #112]
   1de00:	add	x10, x10, x11
   1de04:	ldur	w12, [x29, #-92]
   1de08:	ldur	w13, [x29, #-228]
   1de0c:	add	w12, w12, w13
   1de10:	mov	w14, w12
   1de14:	ubfx	x14, x14, #0, #32
   1de18:	mul	x14, x15, x14
   1de1c:	add	x10, x10, x14
   1de20:	str	w8, [x10, #20]
   1de24:	ldur	w8, [x29, #-212]
   1de28:	ldr	x10, [x9, #112]
   1de2c:	add	x10, x10, x11
   1de30:	ldur	w12, [x29, #-92]
   1de34:	ldur	w13, [x29, #-228]
   1de38:	add	w12, w12, w13
   1de3c:	mov	w14, w12
   1de40:	ubfx	x14, x14, #0, #32
   1de44:	mul	x14, x15, x14
   1de48:	add	x10, x10, x14
   1de4c:	str	w8, [x10, #24]
   1de50:	ldr	x10, [x9, #112]
   1de54:	add	x10, x10, x11
   1de58:	ldur	w8, [x29, #-92]
   1de5c:	ldur	w12, [x29, #-228]
   1de60:	add	w8, w8, w12
   1de64:	mov	w11, w8
   1de68:	ubfx	x11, x11, #0, #32
   1de6c:	mul	x11, x15, x11
   1de70:	add	x10, x10, x11
   1de74:	mov	w8, #0x0                   	// #0
   1de78:	strb	w8, [x10, #4]
   1de7c:	ldur	w8, [x29, #-228]
   1de80:	subs	w8, w8, #0x1
   1de84:	stur	w8, [x29, #-228]
   1de88:	cmp	w8, #0x2
   1de8c:	b.cs	1dd48 <lzma_mode_is_supported@@XZ_5.0+0x37e0>  // b.hs, b.nlast
   1de90:	ldur	w8, [x29, #-232]
   1de94:	stur	w8, [x29, #-228]
   1de98:	ldur	w8, [x29, #-212]
   1de9c:	cbnz	w8, 1deac <lzma_mode_is_supported@@XZ_5.0+0x3944>
   1dea0:	ldur	w8, [x29, #-228]
   1dea4:	add	w8, w8, #0x1
   1dea8:	stur	w8, [x29, #-208]
   1deac:	ldur	w8, [x29, #-228]
   1deb0:	add	w8, w8, #0x1
   1deb4:	stur	w8, [x29, #-244]
   1deb8:	ldur	w8, [x29, #-100]
   1debc:	ldur	w9, [x29, #-244]
   1dec0:	ldur	w10, [x29, #-96]
   1dec4:	add	w9, w9, w10
   1dec8:	cmp	w8, w9
   1decc:	b.cs	1dedc <lzma_mode_is_supported@@XZ_5.0+0x3974>  // b.hs, b.nlast
   1ded0:	ldur	w8, [x29, #-100]
   1ded4:	str	w8, [sp, #84]
   1ded8:	b	1deec <lzma_mode_is_supported@@XZ_5.0+0x3984>
   1dedc:	ldur	w8, [x29, #-244]
   1dee0:	ldur	w9, [x29, #-96]
   1dee4:	add	w8, w8, w9
   1dee8:	str	w8, [sp, #84]
   1deec:	ldr	w8, [sp, #84]
   1def0:	stur	w8, [x29, #-248]
   1def4:	ldur	w8, [x29, #-244]
   1def8:	ldur	w9, [x29, #-248]
   1defc:	mov	w10, #0x0                   	// #0
   1df00:	cmp	w8, w9
   1df04:	str	w10, [sp, #80]
   1df08:	b.cs	1df3c <lzma_mode_is_supported@@XZ_5.0+0x39d4>  // b.hs, b.nlast
   1df0c:	ldr	x8, [sp, #184]
   1df10:	ldr	x9, [x8, #96]
   1df14:	ldur	w10, [x29, #-244]
   1df18:	mov	w11, w10
   1df1c:	ldrb	w10, [x9, x11]
   1df20:	ldur	x9, [x29, #-224]
   1df24:	ldur	w12, [x29, #-244]
   1df28:	mov	w11, w12
   1df2c:	ldrb	w12, [x9, x11]
   1df30:	cmp	w10, w12
   1df34:	cset	w10, eq  // eq = none
   1df38:	str	w10, [sp, #80]
   1df3c:	ldr	w8, [sp, #80]
   1df40:	tbnz	w8, #0, 1df48 <lzma_mode_is_supported@@XZ_5.0+0x39e0>
   1df44:	b	1df58 <lzma_mode_is_supported@@XZ_5.0+0x39f0>
   1df48:	ldur	w8, [x29, #-244]
   1df4c:	add	w8, w8, #0x1
   1df50:	stur	w8, [x29, #-244]
   1df54:	b	1def4 <lzma_mode_is_supported@@XZ_5.0+0x398c>
   1df58:	ldur	w8, [x29, #-228]
   1df5c:	add	w8, w8, #0x1
   1df60:	ldur	w9, [x29, #-244]
   1df64:	subs	w8, w9, w8
   1df68:	stur	w8, [x29, #-244]
   1df6c:	ldur	w8, [x29, #-244]
   1df70:	cmp	w8, #0x2
   1df74:	b.cc	1e330 <lzma_mode_is_supported@@XZ_5.0+0x3dc8>  // b.lo, b.ul, b.last
   1df78:	ldur	w8, [x29, #-116]
   1df7c:	stur	w8, [x29, #-252]
   1df80:	ldur	w8, [x29, #-252]
   1df84:	mov	w9, #0xb                   	// #11
   1df88:	mov	w10, #0x8                   	// #8
   1df8c:	cmp	w8, #0x7
   1df90:	csel	w8, w10, w9, cc  // cc = lo, ul, last
   1df94:	stur	w8, [x29, #-252]
   1df98:	ldur	w8, [x29, #-88]
   1df9c:	ldur	w9, [x29, #-228]
   1dfa0:	add	w8, w8, w9
   1dfa4:	ldr	x11, [sp, #184]
   1dfa8:	ldr	x12, [x11, #112]
   1dfac:	ldr	w9, [x12, #2960]
   1dfb0:	and	w8, w8, w9
   1dfb4:	stur	w8, [x29, #-256]
   1dfb8:	ldur	w8, [x29, #-236]
   1dfbc:	ldr	x12, [x11, #112]
   1dfc0:	mov	x13, #0xba48                	// #47688
   1dfc4:	add	x0, x12, x13
   1dfc8:	ldur	w1, [x29, #-228]
   1dfcc:	ldur	w2, [x29, #-144]
   1dfd0:	str	w8, [sp, #76]
   1dfd4:	bl	1f448 <lzma_mode_is_supported@@XZ_5.0+0x4ee0>
   1dfd8:	ldr	w8, [sp, #76]
   1dfdc:	add	w9, w8, w0
   1dfe0:	ldr	x11, [sp, #184]
   1dfe4:	ldr	x12, [x11, #112]
   1dfe8:	mov	x13, #0x6b9c                	// #27548
   1dfec:	add	x12, x12, x13
   1dff0:	ldur	w10, [x29, #-252]
   1dff4:	mov	w13, w10
   1dff8:	mov	x14, #0x20                  	// #32
   1dffc:	mul	x13, x14, x13
   1e000:	add	x12, x12, x13
   1e004:	ldur	w10, [x29, #-256]
   1e008:	mov	w13, w10
   1e00c:	ldrh	w0, [x12, x13, lsl #1]
   1e010:	str	w9, [sp, #72]
   1e014:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1e018:	ldr	w8, [sp, #72]
   1e01c:	add	w9, w8, w0
   1e020:	ldr	x11, [sp, #184]
   1e024:	ldr	x0, [x11, #112]
   1e028:	ldur	w10, [x29, #-88]
   1e02c:	ldur	w15, [x29, #-228]
   1e030:	add	w1, w10, w15
   1e034:	ldr	x12, [x11, #96]
   1e038:	ldur	w10, [x29, #-228]
   1e03c:	subs	w10, w10, #0x1
   1e040:	ldrb	w2, [x12, w10, uxtw]
   1e044:	ldur	x12, [x29, #-224]
   1e048:	ldur	w10, [x29, #-228]
   1e04c:	mov	w13, w10
   1e050:	ldrb	w4, [x12, x13]
   1e054:	ldr	x12, [x11, #96]
   1e058:	ldur	w10, [x29, #-228]
   1e05c:	mov	w13, w10
   1e060:	ldrb	w5, [x12, x13]
   1e064:	mov	w10, #0x1                   	// #1
   1e068:	and	w3, w10, #0x1
   1e06c:	str	w9, [sp, #68]
   1e070:	bl	1f0ac <lzma_mode_is_supported@@XZ_5.0+0x4b44>
   1e074:	ldr	w8, [sp, #68]
   1e078:	add	w9, w8, w0
   1e07c:	str	w9, [sp, #268]
   1e080:	ldur	w9, [x29, #-252]
   1e084:	cmp	w9, #0x3
   1e088:	b.hi	1e098 <lzma_mode_is_supported@@XZ_5.0+0x3b30>  // b.pmore
   1e08c:	mov	w8, wzr
   1e090:	str	w8, [sp, #64]
   1e094:	b	1e0c8 <lzma_mode_is_supported@@XZ_5.0+0x3b60>
   1e098:	ldur	w8, [x29, #-252]
   1e09c:	cmp	w8, #0x9
   1e0a0:	b.hi	1e0b4 <lzma_mode_is_supported@@XZ_5.0+0x3b4c>  // b.pmore
   1e0a4:	ldur	w8, [x29, #-252]
   1e0a8:	subs	w8, w8, #0x3
   1e0ac:	str	w8, [sp, #60]
   1e0b0:	b	1e0c0 <lzma_mode_is_supported@@XZ_5.0+0x3b58>
   1e0b4:	ldur	w8, [x29, #-252]
   1e0b8:	subs	w8, w8, #0x6
   1e0bc:	str	w8, [sp, #60]
   1e0c0:	ldr	w8, [sp, #60]
   1e0c4:	str	w8, [sp, #64]
   1e0c8:	ldr	w8, [sp, #64]
   1e0cc:	stur	w8, [x29, #-252]
   1e0d0:	ldur	w8, [x29, #-88]
   1e0d4:	ldur	w9, [x29, #-228]
   1e0d8:	add	w8, w8, w9
   1e0dc:	add	w8, w8, #0x1
   1e0e0:	ldr	x10, [sp, #184]
   1e0e4:	ldr	x11, [x10, #112]
   1e0e8:	ldr	w9, [x11, #2960]
   1e0ec:	and	w8, w8, w9
   1e0f0:	stur	w8, [x29, #-256]
   1e0f4:	ldr	w8, [sp, #268]
   1e0f8:	ldr	x11, [x10, #112]
   1e0fc:	mov	x12, #0x6b9c                	// #27548
   1e100:	add	x11, x11, x12
   1e104:	ldur	w9, [x29, #-252]
   1e108:	mov	w12, w9
   1e10c:	mov	x13, #0x20                  	// #32
   1e110:	mul	x12, x13, x12
   1e114:	add	x11, x11, x12
   1e118:	ldur	w9, [x29, #-256]
   1e11c:	mov	w12, w9
   1e120:	ldrh	w0, [x11, x12, lsl #1]
   1e124:	str	w8, [sp, #56]
   1e128:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1e12c:	ldr	w8, [sp, #56]
   1e130:	add	w9, w8, w0
   1e134:	ldr	x10, [sp, #184]
   1e138:	ldr	x11, [x10, #112]
   1e13c:	mov	x12, #0x6d1c                	// #27932
   1e140:	add	x11, x11, x12
   1e144:	ldur	w14, [x29, #-252]
   1e148:	mov	w12, w14
   1e14c:	ldrh	w0, [x11, x12, lsl #1]
   1e150:	str	w9, [sp, #52]
   1e154:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1e158:	ldr	w8, [sp, #52]
   1e15c:	add	w9, w8, w0
   1e160:	str	w9, [sp, #264]
   1e164:	ldur	w9, [x29, #-92]
   1e168:	ldur	w14, [x29, #-228]
   1e16c:	add	w9, w9, w14
   1e170:	add	w9, w9, #0x1
   1e174:	ldur	w14, [x29, #-244]
   1e178:	add	w9, w9, w14
   1e17c:	str	w9, [sp, #260]
   1e180:	ldur	w8, [x29, #-84]
   1e184:	ldr	w9, [sp, #260]
   1e188:	cmp	w8, w9
   1e18c:	b.cs	1e1d0 <lzma_mode_is_supported@@XZ_5.0+0x3c68>  // b.hs, b.nlast
   1e190:	ldr	x8, [sp, #184]
   1e194:	ldr	x9, [x8, #112]
   1e198:	mov	x10, #0xee4                 	// #3812
   1e19c:	movk	x10, #0x1, lsl #16
   1e1a0:	add	x9, x9, x10
   1e1a4:	ldur	w11, [x29, #-84]
   1e1a8:	add	w11, w11, #0x1
   1e1ac:	stur	w11, [x29, #-84]
   1e1b0:	mov	w10, w11
   1e1b4:	ubfx	x10, x10, #0, #32
   1e1b8:	mov	x12, #0x2c                  	// #44
   1e1bc:	mul	x10, x12, x10
   1e1c0:	add	x9, x9, x10
   1e1c4:	mov	w11, #0x40000000            	// #1073741824
   1e1c8:	str	w11, [x9, #16]
   1e1cc:	b	1e180 <lzma_mode_is_supported@@XZ_5.0+0x3c18>
   1e1d0:	ldr	w8, [sp, #264]
   1e1d4:	ldr	x9, [sp, #184]
   1e1d8:	ldr	x0, [x9, #112]
   1e1dc:	ldur	w2, [x29, #-244]
   1e1e0:	ldur	w3, [x29, #-252]
   1e1e4:	ldur	w4, [x29, #-256]
   1e1e8:	mov	w10, wzr
   1e1ec:	mov	w1, w10
   1e1f0:	str	w8, [sp, #48]
   1e1f4:	bl	1f634 <lzma_mode_is_supported@@XZ_5.0+0x50cc>
   1e1f8:	ldr	w8, [sp, #48]
   1e1fc:	add	w10, w8, w0
   1e200:	str	w10, [sp, #256]
   1e204:	ldr	w10, [sp, #256]
   1e208:	ldr	x9, [sp, #184]
   1e20c:	ldr	x11, [x9, #112]
   1e210:	mov	x12, #0xee4                 	// #3812
   1e214:	movk	x12, #0x1, lsl #16
   1e218:	add	x11, x11, x12
   1e21c:	ldr	w13, [sp, #260]
   1e220:	mov	w12, w13
   1e224:	mov	x14, #0x2c                  	// #44
   1e228:	mul	x12, x14, x12
   1e22c:	add	x11, x11, x12
   1e230:	ldr	w13, [x11, #16]
   1e234:	cmp	w10, w13
   1e238:	b.cs	1e330 <lzma_mode_is_supported@@XZ_5.0+0x3dc8>  // b.hs, b.nlast
   1e23c:	ldr	w8, [sp, #256]
   1e240:	ldr	x9, [sp, #184]
   1e244:	ldr	x10, [x9, #112]
   1e248:	mov	x11, #0xee4                 	// #3812
   1e24c:	movk	x11, #0x1, lsl #16
   1e250:	add	x10, x10, x11
   1e254:	ldr	w12, [sp, #260]
   1e258:	mov	w13, w12
   1e25c:	mov	x14, #0x2c                  	// #44
   1e260:	mul	x13, x14, x13
   1e264:	add	x10, x10, x13
   1e268:	str	w8, [x10, #16]
   1e26c:	ldur	w8, [x29, #-92]
   1e270:	ldur	w12, [x29, #-228]
   1e274:	add	w8, w8, w12
   1e278:	add	w8, w8, #0x1
   1e27c:	ldr	x10, [x9, #112]
   1e280:	add	x10, x10, x11
   1e284:	ldr	w12, [sp, #260]
   1e288:	mov	w13, w12
   1e28c:	mul	x13, x14, x13
   1e290:	add	x10, x10, x13
   1e294:	str	w8, [x10, #20]
   1e298:	ldr	x10, [x9, #112]
   1e29c:	add	x10, x10, x11
   1e2a0:	ldr	w8, [sp, #260]
   1e2a4:	mov	w13, w8
   1e2a8:	mul	x13, x14, x13
   1e2ac:	add	x10, x10, x13
   1e2b0:	str	wzr, [x10, #24]
   1e2b4:	ldr	x10, [x9, #112]
   1e2b8:	add	x10, x10, x11
   1e2bc:	ldr	w8, [sp, #260]
   1e2c0:	mov	w13, w8
   1e2c4:	mul	x13, x14, x13
   1e2c8:	add	x10, x10, x13
   1e2cc:	mov	w8, #0x1                   	// #1
   1e2d0:	strb	w8, [x10, #4]
   1e2d4:	ldr	x10, [x9, #112]
   1e2d8:	add	x10, x10, x11
   1e2dc:	ldr	w12, [sp, #260]
   1e2e0:	mov	w13, w12
   1e2e4:	mul	x13, x14, x13
   1e2e8:	add	x10, x10, x13
   1e2ec:	strb	w8, [x10, #5]
   1e2f0:	ldur	w8, [x29, #-92]
   1e2f4:	ldr	x10, [x9, #112]
   1e2f8:	add	x10, x10, x11
   1e2fc:	ldr	w12, [sp, #260]
   1e300:	mov	w13, w12
   1e304:	mul	x13, x14, x13
   1e308:	add	x10, x10, x13
   1e30c:	str	w8, [x10, #8]
   1e310:	ldur	w8, [x29, #-212]
   1e314:	ldr	x10, [x9, #112]
   1e318:	add	x10, x10, x11
   1e31c:	ldr	w12, [sp, #260]
   1e320:	mov	w11, w12
   1e324:	mul	x11, x14, x11
   1e328:	add	x10, x10, x11
   1e32c:	str	w8, [x10, #12]
   1e330:	ldur	w8, [x29, #-212]
   1e334:	add	w8, w8, #0x1
   1e338:	stur	w8, [x29, #-212]
   1e33c:	b	1dbb4 <lzma_mode_is_supported@@XZ_5.0+0x364c>
   1e340:	ldur	w8, [x29, #-108]
   1e344:	ldur	w9, [x29, #-168]
   1e348:	cmp	w8, w9
   1e34c:	b.ls	1e3c8 <lzma_mode_is_supported@@XZ_5.0+0x3e60>  // b.plast
   1e350:	ldur	w8, [x29, #-168]
   1e354:	stur	w8, [x29, #-108]
   1e358:	stur	wzr, [x29, #-104]
   1e35c:	ldur	w8, [x29, #-108]
   1e360:	ldr	x9, [sp, #184]
   1e364:	ldr	x10, [x9, #112]
   1e368:	add	x10, x10, #0x2f4
   1e36c:	ldur	w11, [x29, #-104]
   1e370:	mov	w12, w11
   1e374:	mov	x13, #0x8                   	// #8
   1e378:	mul	x12, x13, x12
   1e37c:	ldr	w11, [x10, x12]
   1e380:	cmp	w8, w11
   1e384:	b.ls	1e398 <lzma_mode_is_supported@@XZ_5.0+0x3e30>  // b.plast
   1e388:	ldur	w8, [x29, #-104]
   1e38c:	add	w8, w8, #0x1
   1e390:	stur	w8, [x29, #-104]
   1e394:	b	1e35c <lzma_mode_is_supported@@XZ_5.0+0x3df4>
   1e398:	ldur	w8, [x29, #-108]
   1e39c:	ldr	x9, [sp, #184]
   1e3a0:	ldr	x10, [x9, #112]
   1e3a4:	add	x10, x10, #0x2f4
   1e3a8:	ldur	w11, [x29, #-104]
   1e3ac:	mov	w12, w11
   1e3b0:	mov	w11, w12
   1e3b4:	add	w11, w11, #0x1
   1e3b8:	stur	w11, [x29, #-104]
   1e3bc:	mov	x13, #0x8                   	// #8
   1e3c0:	mul	x12, x13, x12
   1e3c4:	str	w8, [x10, x12]
   1e3c8:	ldur	w8, [x29, #-108]
   1e3cc:	ldur	w9, [x29, #-208]
   1e3d0:	cmp	w8, w9
   1e3d4:	b.cc	1eadc <lzma_mode_is_supported@@XZ_5.0+0x4574>  // b.lo, b.ul, b.last
   1e3d8:	ldur	w8, [x29, #-156]
   1e3dc:	ldr	x9, [sp, #184]
   1e3e0:	ldr	x10, [x9, #112]
   1e3e4:	mov	x11, #0x6d1c                	// #27932
   1e3e8:	add	x10, x10, x11
   1e3ec:	ldur	w12, [x29, #-116]
   1e3f0:	mov	w11, w12
   1e3f4:	ldrh	w0, [x10, x11, lsl #1]
   1e3f8:	str	w8, [sp, #44]
   1e3fc:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1e400:	ldr	w8, [sp, #44]
   1e404:	add	w12, w8, w0
   1e408:	str	w12, [sp, #252]
   1e40c:	ldur	w8, [x29, #-84]
   1e410:	ldur	w9, [x29, #-92]
   1e414:	ldur	w10, [x29, #-108]
   1e418:	add	w9, w9, w10
   1e41c:	cmp	w8, w9
   1e420:	b.cs	1e464 <lzma_mode_is_supported@@XZ_5.0+0x3efc>  // b.hs, b.nlast
   1e424:	ldr	x8, [sp, #184]
   1e428:	ldr	x9, [x8, #112]
   1e42c:	mov	x10, #0xee4                 	// #3812
   1e430:	movk	x10, #0x1, lsl #16
   1e434:	add	x9, x9, x10
   1e438:	ldur	w11, [x29, #-84]
   1e43c:	add	w11, w11, #0x1
   1e440:	stur	w11, [x29, #-84]
   1e444:	mov	w10, w11
   1e448:	ubfx	x10, x10, #0, #32
   1e44c:	mov	x12, #0x2c                  	// #44
   1e450:	mul	x10, x12, x10
   1e454:	add	x9, x9, x10
   1e458:	mov	w11, #0x40000000            	// #1073741824
   1e45c:	str	w11, [x9, #16]
   1e460:	b	1e40c <lzma_mode_is_supported@@XZ_5.0+0x3ea4>
   1e464:	str	wzr, [sp, #248]
   1e468:	ldur	w8, [x29, #-208]
   1e46c:	ldr	x9, [sp, #184]
   1e470:	ldr	x10, [x9, #112]
   1e474:	add	x10, x10, #0x2f4
   1e478:	ldr	w11, [sp, #248]
   1e47c:	mov	w12, w11
   1e480:	mov	x13, #0x8                   	// #8
   1e484:	mul	x12, x13, x12
   1e488:	ldr	w11, [x10, x12]
   1e48c:	cmp	w8, w11
   1e490:	b.ls	1e4a4 <lzma_mode_is_supported@@XZ_5.0+0x3f3c>  // b.plast
   1e494:	ldr	w8, [sp, #248]
   1e498:	add	w8, w8, #0x1
   1e49c:	str	w8, [sp, #248]
   1e4a0:	b	1e468 <lzma_mode_is_supported@@XZ_5.0+0x3f00>
   1e4a4:	ldur	w8, [x29, #-208]
   1e4a8:	str	w8, [sp, #244]
   1e4ac:	ldr	x8, [sp, #184]
   1e4b0:	ldr	x9, [x8, #112]
   1e4b4:	add	x9, x9, #0x2f4
   1e4b8:	ldr	w10, [sp, #248]
   1e4bc:	mov	w11, w10
   1e4c0:	mov	x12, #0x8                   	// #8
   1e4c4:	mul	x11, x12, x11
   1e4c8:	add	x9, x9, x11
   1e4cc:	ldr	w10, [x9, #4]
   1e4d0:	str	w10, [sp, #240]
   1e4d4:	ldr	w10, [sp, #252]
   1e4d8:	ldr	x0, [x8, #112]
   1e4dc:	ldr	w1, [sp, #240]
   1e4e0:	ldr	w2, [sp, #244]
   1e4e4:	ldur	w3, [x29, #-144]
   1e4e8:	str	w10, [sp, #40]
   1e4ec:	bl	1f488 <lzma_mode_is_supported@@XZ_5.0+0x4f20>
   1e4f0:	ldr	w10, [sp, #40]
   1e4f4:	add	w13, w10, w0
   1e4f8:	str	w13, [sp, #236]
   1e4fc:	ldr	w13, [sp, #236]
   1e500:	ldr	x8, [sp, #184]
   1e504:	ldr	x9, [x8, #112]
   1e508:	mov	x11, #0xee4                 	// #3812
   1e50c:	movk	x11, #0x1, lsl #16
   1e510:	add	x9, x9, x11
   1e514:	ldur	w14, [x29, #-92]
   1e518:	ldr	w15, [sp, #244]
   1e51c:	add	w14, w14, w15
   1e520:	mov	w11, w14
   1e524:	ubfx	x11, x11, #0, #32
   1e528:	mov	x12, #0x2c                  	// #44
   1e52c:	mul	x11, x12, x11
   1e530:	add	x9, x9, x11
   1e534:	ldr	w14, [x9, #16]
   1e538:	cmp	w13, w14
   1e53c:	b.cs	1e604 <lzma_mode_is_supported@@XZ_5.0+0x409c>  // b.hs, b.nlast
   1e540:	ldr	w8, [sp, #236]
   1e544:	ldr	x9, [sp, #184]
   1e548:	ldr	x10, [x9, #112]
   1e54c:	mov	x11, #0xee4                 	// #3812
   1e550:	movk	x11, #0x1, lsl #16
   1e554:	add	x10, x10, x11
   1e558:	ldur	w12, [x29, #-92]
   1e55c:	ldr	w13, [sp, #244]
   1e560:	add	w12, w12, w13
   1e564:	mov	w14, w12
   1e568:	ubfx	x14, x14, #0, #32
   1e56c:	mov	x15, #0x2c                  	// #44
   1e570:	mul	x14, x15, x14
   1e574:	add	x10, x10, x14
   1e578:	str	w8, [x10, #16]
   1e57c:	ldur	w8, [x29, #-92]
   1e580:	ldr	x10, [x9, #112]
   1e584:	add	x10, x10, x11
   1e588:	ldur	w12, [x29, #-92]
   1e58c:	ldr	w13, [sp, #244]
   1e590:	add	w12, w12, w13
   1e594:	mov	w14, w12
   1e598:	ubfx	x14, x14, #0, #32
   1e59c:	mul	x14, x15, x14
   1e5a0:	add	x10, x10, x14
   1e5a4:	str	w8, [x10, #20]
   1e5a8:	ldr	w8, [sp, #240]
   1e5ac:	add	w8, w8, #0x4
   1e5b0:	ldr	x10, [x9, #112]
   1e5b4:	add	x10, x10, x11
   1e5b8:	ldur	w12, [x29, #-92]
   1e5bc:	ldr	w13, [sp, #244]
   1e5c0:	add	w12, w12, w13
   1e5c4:	mov	w14, w12
   1e5c8:	ubfx	x14, x14, #0, #32
   1e5cc:	mul	x14, x15, x14
   1e5d0:	add	x10, x10, x14
   1e5d4:	str	w8, [x10, #24]
   1e5d8:	ldr	x10, [x9, #112]
   1e5dc:	add	x10, x10, x11
   1e5e0:	ldur	w8, [x29, #-92]
   1e5e4:	ldr	w12, [sp, #244]
   1e5e8:	add	w8, w8, w12
   1e5ec:	mov	w11, w8
   1e5f0:	ubfx	x11, x11, #0, #32
   1e5f4:	mul	x11, x15, x11
   1e5f8:	add	x10, x10, x11
   1e5fc:	mov	w8, #0x0                   	// #0
   1e600:	strb	w8, [x10, #4]
   1e604:	ldr	w8, [sp, #244]
   1e608:	ldr	x9, [sp, #184]
   1e60c:	ldr	x10, [x9, #112]
   1e610:	add	x10, x10, #0x2f4
   1e614:	ldr	w11, [sp, #248]
   1e618:	mov	w12, w11
   1e61c:	mov	x13, #0x8                   	// #8
   1e620:	mul	x12, x13, x12
   1e624:	ldr	w11, [x10, x12]
   1e628:	cmp	w8, w11
   1e62c:	b.ne	1eacc <lzma_mode_is_supported@@XZ_5.0+0x4564>  // b.any
   1e630:	ldr	x8, [sp, #184]
   1e634:	ldr	x9, [x8, #96]
   1e638:	ldr	w10, [sp, #240]
   1e63c:	mov	w11, w10
   1e640:	mov	x12, xzr
   1e644:	subs	x11, x12, x11
   1e648:	add	x9, x9, x11
   1e64c:	mov	x11, #0xffffffffffffffff    	// #-1
   1e650:	add	x9, x9, x11
   1e654:	str	x9, [sp, #224]
   1e658:	ldr	w10, [sp, #244]
   1e65c:	add	w10, w10, #0x1
   1e660:	str	w10, [sp, #220]
   1e664:	ldur	w10, [x29, #-100]
   1e668:	ldr	w13, [sp, #220]
   1e66c:	ldur	w14, [x29, #-96]
   1e670:	add	w13, w13, w14
   1e674:	cmp	w10, w13
   1e678:	b.cs	1e688 <lzma_mode_is_supported@@XZ_5.0+0x4120>  // b.hs, b.nlast
   1e67c:	ldur	w8, [x29, #-100]
   1e680:	str	w8, [sp, #36]
   1e684:	b	1e698 <lzma_mode_is_supported@@XZ_5.0+0x4130>
   1e688:	ldr	w8, [sp, #220]
   1e68c:	ldur	w9, [x29, #-96]
   1e690:	add	w8, w8, w9
   1e694:	str	w8, [sp, #36]
   1e698:	ldr	w8, [sp, #36]
   1e69c:	str	w8, [sp, #216]
   1e6a0:	ldr	w8, [sp, #220]
   1e6a4:	ldr	w9, [sp, #216]
   1e6a8:	mov	w10, #0x0                   	// #0
   1e6ac:	cmp	w8, w9
   1e6b0:	str	w10, [sp, #32]
   1e6b4:	b.cs	1e6e8 <lzma_mode_is_supported@@XZ_5.0+0x4180>  // b.hs, b.nlast
   1e6b8:	ldr	x8, [sp, #184]
   1e6bc:	ldr	x9, [x8, #96]
   1e6c0:	ldr	w10, [sp, #220]
   1e6c4:	mov	w11, w10
   1e6c8:	ldrb	w10, [x9, x11]
   1e6cc:	ldr	x9, [sp, #224]
   1e6d0:	ldr	w12, [sp, #220]
   1e6d4:	mov	w11, w12
   1e6d8:	ldrb	w12, [x9, x11]
   1e6dc:	cmp	w10, w12
   1e6e0:	cset	w10, eq  // eq = none
   1e6e4:	str	w10, [sp, #32]
   1e6e8:	ldr	w8, [sp, #32]
   1e6ec:	tbnz	w8, #0, 1e6f4 <lzma_mode_is_supported@@XZ_5.0+0x418c>
   1e6f0:	b	1e704 <lzma_mode_is_supported@@XZ_5.0+0x419c>
   1e6f4:	ldr	w8, [sp, #220]
   1e6f8:	add	w8, w8, #0x1
   1e6fc:	str	w8, [sp, #220]
   1e700:	b	1e6a0 <lzma_mode_is_supported@@XZ_5.0+0x4138>
   1e704:	ldr	w8, [sp, #244]
   1e708:	add	w8, w8, #0x1
   1e70c:	ldr	w9, [sp, #220]
   1e710:	subs	w8, w9, w8
   1e714:	str	w8, [sp, #220]
   1e718:	ldr	w8, [sp, #220]
   1e71c:	cmp	w8, #0x2
   1e720:	b.cc	1eab0 <lzma_mode_is_supported@@XZ_5.0+0x4548>  // b.lo, b.ul, b.last
   1e724:	ldur	w8, [x29, #-116]
   1e728:	str	w8, [sp, #212]
   1e72c:	ldr	w8, [sp, #212]
   1e730:	mov	w9, #0x7                   	// #7
   1e734:	mov	w10, #0xa                   	// #10
   1e738:	cmp	w8, #0x7
   1e73c:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   1e740:	str	w8, [sp, #212]
   1e744:	ldur	w8, [x29, #-88]
   1e748:	ldr	w9, [sp, #244]
   1e74c:	add	w8, w8, w9
   1e750:	ldr	x11, [sp, #184]
   1e754:	ldr	x12, [x11, #112]
   1e758:	ldr	w9, [x12, #2960]
   1e75c:	and	w8, w8, w9
   1e760:	str	w8, [sp, #208]
   1e764:	ldr	w8, [sp, #236]
   1e768:	ldr	x12, [x11, #112]
   1e76c:	mov	x13, #0x6b9c                	// #27548
   1e770:	add	x12, x12, x13
   1e774:	ldr	w9, [sp, #212]
   1e778:	mov	w13, w9
   1e77c:	mov	x14, #0x20                  	// #32
   1e780:	mul	x13, x14, x13
   1e784:	add	x12, x12, x13
   1e788:	ldr	w9, [sp, #208]
   1e78c:	mov	w13, w9
   1e790:	ldrh	w0, [x12, x13, lsl #1]
   1e794:	str	w8, [sp, #28]
   1e798:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1e79c:	ldr	w8, [sp, #28]
   1e7a0:	add	w9, w8, w0
   1e7a4:	ldr	x11, [sp, #184]
   1e7a8:	ldr	x0, [x11, #112]
   1e7ac:	ldur	w10, [x29, #-88]
   1e7b0:	ldr	w15, [sp, #244]
   1e7b4:	add	w1, w10, w15
   1e7b8:	ldr	x12, [x11, #96]
   1e7bc:	ldr	w10, [sp, #244]
   1e7c0:	subs	w10, w10, #0x1
   1e7c4:	ldrb	w2, [x12, w10, uxtw]
   1e7c8:	ldr	x12, [sp, #224]
   1e7cc:	ldr	w10, [sp, #244]
   1e7d0:	mov	w13, w10
   1e7d4:	ldrb	w4, [x12, x13]
   1e7d8:	ldr	x12, [x11, #96]
   1e7dc:	ldr	w10, [sp, #244]
   1e7e0:	mov	w13, w10
   1e7e4:	ldrb	w5, [x12, x13]
   1e7e8:	mov	w10, #0x1                   	// #1
   1e7ec:	and	w3, w10, #0x1
   1e7f0:	str	w9, [sp, #24]
   1e7f4:	bl	1f0ac <lzma_mode_is_supported@@XZ_5.0+0x4b44>
   1e7f8:	ldr	w8, [sp, #24]
   1e7fc:	add	w9, w8, w0
   1e800:	str	w9, [sp, #204]
   1e804:	ldr	w9, [sp, #212]
   1e808:	cmp	w9, #0x3
   1e80c:	b.hi	1e81c <lzma_mode_is_supported@@XZ_5.0+0x42b4>  // b.pmore
   1e810:	mov	w8, wzr
   1e814:	str	w8, [sp, #20]
   1e818:	b	1e84c <lzma_mode_is_supported@@XZ_5.0+0x42e4>
   1e81c:	ldr	w8, [sp, #212]
   1e820:	cmp	w8, #0x9
   1e824:	b.hi	1e838 <lzma_mode_is_supported@@XZ_5.0+0x42d0>  // b.pmore
   1e828:	ldr	w8, [sp, #212]
   1e82c:	subs	w8, w8, #0x3
   1e830:	str	w8, [sp, #16]
   1e834:	b	1e844 <lzma_mode_is_supported@@XZ_5.0+0x42dc>
   1e838:	ldr	w8, [sp, #212]
   1e83c:	subs	w8, w8, #0x6
   1e840:	str	w8, [sp, #16]
   1e844:	ldr	w8, [sp, #16]
   1e848:	str	w8, [sp, #20]
   1e84c:	ldr	w8, [sp, #20]
   1e850:	str	w8, [sp, #212]
   1e854:	ldr	w8, [sp, #208]
   1e858:	add	w8, w8, #0x1
   1e85c:	ldr	x9, [sp, #184]
   1e860:	ldr	x10, [x9, #112]
   1e864:	ldr	w11, [x10, #2960]
   1e868:	and	w8, w8, w11
   1e86c:	str	w8, [sp, #208]
   1e870:	ldr	w8, [sp, #204]
   1e874:	ldr	x10, [x9, #112]
   1e878:	mov	x12, #0x6b9c                	// #27548
   1e87c:	add	x10, x10, x12
   1e880:	ldr	w11, [sp, #212]
   1e884:	mov	w12, w11
   1e888:	mov	x13, #0x20                  	// #32
   1e88c:	mul	x12, x13, x12
   1e890:	add	x10, x10, x12
   1e894:	ldr	w11, [sp, #208]
   1e898:	mov	w12, w11
   1e89c:	ldrh	w0, [x10, x12, lsl #1]
   1e8a0:	str	w8, [sp, #12]
   1e8a4:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1e8a8:	ldr	w8, [sp, #12]
   1e8ac:	add	w11, w8, w0
   1e8b0:	ldr	x9, [sp, #184]
   1e8b4:	ldr	x10, [x9, #112]
   1e8b8:	mov	x12, #0x6d1c                	// #27932
   1e8bc:	add	x10, x10, x12
   1e8c0:	ldr	w14, [sp, #212]
   1e8c4:	mov	w12, w14
   1e8c8:	ldrh	w0, [x10, x12, lsl #1]
   1e8cc:	str	w11, [sp, #8]
   1e8d0:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1e8d4:	ldr	w8, [sp, #8]
   1e8d8:	add	w11, w8, w0
   1e8dc:	str	w11, [sp, #200]
   1e8e0:	ldur	w11, [x29, #-92]
   1e8e4:	ldr	w14, [sp, #244]
   1e8e8:	add	w11, w11, w14
   1e8ec:	add	w11, w11, #0x1
   1e8f0:	ldr	w14, [sp, #220]
   1e8f4:	add	w11, w11, w14
   1e8f8:	str	w11, [sp, #196]
   1e8fc:	ldur	w8, [x29, #-84]
   1e900:	ldr	w9, [sp, #196]
   1e904:	cmp	w8, w9
   1e908:	b.cs	1e94c <lzma_mode_is_supported@@XZ_5.0+0x43e4>  // b.hs, b.nlast
   1e90c:	ldr	x8, [sp, #184]
   1e910:	ldr	x9, [x8, #112]
   1e914:	mov	x10, #0xee4                 	// #3812
   1e918:	movk	x10, #0x1, lsl #16
   1e91c:	add	x9, x9, x10
   1e920:	ldur	w11, [x29, #-84]
   1e924:	add	w11, w11, #0x1
   1e928:	stur	w11, [x29, #-84]
   1e92c:	mov	w10, w11
   1e930:	ubfx	x10, x10, #0, #32
   1e934:	mov	x12, #0x2c                  	// #44
   1e938:	mul	x10, x12, x10
   1e93c:	add	x9, x9, x10
   1e940:	mov	w11, #0x40000000            	// #1073741824
   1e944:	str	w11, [x9, #16]
   1e948:	b	1e8fc <lzma_mode_is_supported@@XZ_5.0+0x4394>
   1e94c:	ldr	w8, [sp, #200]
   1e950:	ldr	x9, [sp, #184]
   1e954:	ldr	x0, [x9, #112]
   1e958:	ldr	w2, [sp, #220]
   1e95c:	ldr	w3, [sp, #212]
   1e960:	ldr	w4, [sp, #208]
   1e964:	mov	w10, wzr
   1e968:	mov	w1, w10
   1e96c:	str	w8, [sp, #4]
   1e970:	bl	1f634 <lzma_mode_is_supported@@XZ_5.0+0x50cc>
   1e974:	ldr	w8, [sp, #4]
   1e978:	add	w10, w8, w0
   1e97c:	str	w10, [sp, #236]
   1e980:	ldr	w10, [sp, #236]
   1e984:	ldr	x9, [sp, #184]
   1e988:	ldr	x11, [x9, #112]
   1e98c:	mov	x12, #0xee4                 	// #3812
   1e990:	movk	x12, #0x1, lsl #16
   1e994:	add	x11, x11, x12
   1e998:	ldr	w13, [sp, #196]
   1e99c:	mov	w12, w13
   1e9a0:	mov	x14, #0x2c                  	// #44
   1e9a4:	mul	x12, x14, x12
   1e9a8:	add	x11, x11, x12
   1e9ac:	ldr	w13, [x11, #16]
   1e9b0:	cmp	w10, w13
   1e9b4:	b.cs	1eab0 <lzma_mode_is_supported@@XZ_5.0+0x4548>  // b.hs, b.nlast
   1e9b8:	ldr	w8, [sp, #236]
   1e9bc:	ldr	x9, [sp, #184]
   1e9c0:	ldr	x10, [x9, #112]
   1e9c4:	mov	x11, #0xee4                 	// #3812
   1e9c8:	movk	x11, #0x1, lsl #16
   1e9cc:	add	x10, x10, x11
   1e9d0:	ldr	w12, [sp, #196]
   1e9d4:	mov	w13, w12
   1e9d8:	mov	x14, #0x2c                  	// #44
   1e9dc:	mul	x13, x14, x13
   1e9e0:	add	x10, x10, x13
   1e9e4:	str	w8, [x10, #16]
   1e9e8:	ldur	w8, [x29, #-92]
   1e9ec:	ldr	w12, [sp, #244]
   1e9f0:	add	w8, w8, w12
   1e9f4:	add	w8, w8, #0x1
   1e9f8:	ldr	x10, [x9, #112]
   1e9fc:	add	x10, x10, x11
   1ea00:	ldr	w12, [sp, #196]
   1ea04:	mov	w13, w12
   1ea08:	mul	x13, x14, x13
   1ea0c:	add	x10, x10, x13
   1ea10:	str	w8, [x10, #20]
   1ea14:	ldr	x10, [x9, #112]
   1ea18:	add	x10, x10, x11
   1ea1c:	ldr	w8, [sp, #196]
   1ea20:	mov	w13, w8
   1ea24:	mul	x13, x14, x13
   1ea28:	add	x10, x10, x13
   1ea2c:	str	wzr, [x10, #24]
   1ea30:	ldr	x10, [x9, #112]
   1ea34:	add	x10, x10, x11
   1ea38:	ldr	w8, [sp, #196]
   1ea3c:	mov	w13, w8
   1ea40:	mul	x13, x14, x13
   1ea44:	add	x10, x10, x13
   1ea48:	mov	w8, #0x1                   	// #1
   1ea4c:	strb	w8, [x10, #4]
   1ea50:	ldr	x10, [x9, #112]
   1ea54:	add	x10, x10, x11
   1ea58:	ldr	w12, [sp, #196]
   1ea5c:	mov	w13, w12
   1ea60:	mul	x13, x14, x13
   1ea64:	add	x10, x10, x13
   1ea68:	strb	w8, [x10, #5]
   1ea6c:	ldur	w8, [x29, #-92]
   1ea70:	ldr	x10, [x9, #112]
   1ea74:	add	x10, x10, x11
   1ea78:	ldr	w12, [sp, #196]
   1ea7c:	mov	w13, w12
   1ea80:	mul	x13, x14, x13
   1ea84:	add	x10, x10, x13
   1ea88:	str	w8, [x10, #8]
   1ea8c:	ldr	w8, [sp, #240]
   1ea90:	add	w8, w8, #0x4
   1ea94:	ldr	x10, [x9, #112]
   1ea98:	add	x10, x10, x11
   1ea9c:	ldr	w12, [sp, #196]
   1eaa0:	mov	w11, w12
   1eaa4:	mul	x11, x14, x11
   1eaa8:	add	x10, x10, x11
   1eaac:	str	w8, [x10, #12]
   1eab0:	ldr	w8, [sp, #248]
   1eab4:	add	w8, w8, #0x1
   1eab8:	str	w8, [sp, #248]
   1eabc:	ldur	w9, [x29, #-104]
   1eac0:	cmp	w8, w9
   1eac4:	b.ne	1eacc <lzma_mode_is_supported@@XZ_5.0+0x4564>  // b.any
   1eac8:	b	1eadc <lzma_mode_is_supported@@XZ_5.0+0x4574>
   1eacc:	ldr	w8, [sp, #244]
   1ead0:	add	w8, w8, #0x1
   1ead4:	str	w8, [sp, #244]
   1ead8:	b	1e4ac <lzma_mode_is_supported@@XZ_5.0+0x3f44>
   1eadc:	ldur	w8, [x29, #-84]
   1eae0:	stur	w8, [x29, #-52]
   1eae4:	ldur	w0, [x29, #-52]
   1eae8:	add	sp, sp, #0x210
   1eaec:	ldr	x28, [sp, #16]
   1eaf0:	ldp	x29, x30, [sp], #32
   1eaf4:	ret
   1eaf8:	sub	sp, sp, #0x10
   1eafc:	str	x0, [sp, #8]
   1eb00:	ldr	x8, [sp, #8]
   1eb04:	ldr	x8, [x8]
   1eb08:	ldr	x9, [sp, #8]
   1eb0c:	ldr	w10, [x9, #24]
   1eb10:	mov	w9, w10
   1eb14:	add	x0, x8, x9
   1eb18:	add	sp, sp, #0x10
   1eb1c:	ret
   1eb20:	sub	sp, sp, #0x10
   1eb24:	str	x0, [sp, #8]
   1eb28:	ldr	x8, [sp, #8]
   1eb2c:	ldr	w9, [x8, #36]
   1eb30:	ldr	x8, [sp, #8]
   1eb34:	ldr	w10, [x8, #24]
   1eb38:	subs	w0, w9, w10
   1eb3c:	add	sp, sp, #0x10
   1eb40:	ret
   1eb44:	sub	sp, sp, #0x50
   1eb48:	stp	x29, x30, [sp, #64]
   1eb4c:	add	x29, sp, #0x40
   1eb50:	stur	x0, [x29, #-8]
   1eb54:	stur	x1, [x29, #-16]
   1eb58:	stur	x2, [x29, #-24]
   1eb5c:	stur	w3, [x29, #-28]
   1eb60:	ldur	w8, [x29, #-28]
   1eb64:	ldur	x9, [x29, #-8]
   1eb68:	mov	x10, #0xedc                 	// #3804
   1eb6c:	movk	x10, #0x1, lsl #16
   1eb70:	add	x9, x9, x10
   1eb74:	str	w8, [x9]
   1eb78:	ldur	x9, [x29, #-8]
   1eb7c:	mov	x10, #0xee4                 	// #3812
   1eb80:	movk	x10, #0x1, lsl #16
   1eb84:	add	x9, x9, x10
   1eb88:	ldur	w8, [x29, #-28]
   1eb8c:	mov	w11, w8
   1eb90:	mov	x12, #0x2c                  	// #44
   1eb94:	mul	x11, x12, x11
   1eb98:	add	x9, x9, x11
   1eb9c:	ldr	w8, [x9, #20]
   1eba0:	str	w8, [sp, #32]
   1eba4:	ldur	x9, [x29, #-8]
   1eba8:	add	x9, x9, x10
   1ebac:	ldur	w8, [x29, #-28]
   1ebb0:	mov	w10, w8
   1ebb4:	mul	x10, x12, x10
   1ebb8:	add	x9, x9, x10
   1ebbc:	ldr	w8, [x9, #24]
   1ebc0:	str	w8, [sp, #28]
   1ebc4:	ldur	x8, [x29, #-8]
   1ebc8:	mov	x9, #0xee4                 	// #3812
   1ebcc:	movk	x9, #0x1, lsl #16
   1ebd0:	add	x8, x8, x9
   1ebd4:	ldur	w10, [x29, #-28]
   1ebd8:	mov	w9, w10
   1ebdc:	mov	x11, #0x2c                  	// #44
   1ebe0:	mul	x9, x11, x9
   1ebe4:	add	x8, x8, x9
   1ebe8:	ldrb	w10, [x8, #4]
   1ebec:	tbnz	w10, #0, 1ebf4 <lzma_mode_is_supported@@XZ_5.0+0x468c>
   1ebf0:	b	1ed28 <lzma_mode_is_supported@@XZ_5.0+0x47c0>
   1ebf4:	ldur	x8, [x29, #-8]
   1ebf8:	mov	x9, #0xee4                 	// #3812
   1ebfc:	movk	x9, #0x1, lsl #16
   1ec00:	add	x8, x8, x9
   1ec04:	ldr	w10, [sp, #32]
   1ec08:	mov	w11, w10
   1ec0c:	mov	x12, #0x2c                  	// #44
   1ec10:	mul	x11, x12, x11
   1ec14:	add	x0, x8, x11
   1ec18:	str	x9, [sp, #8]
   1ec1c:	str	x12, [sp]
   1ec20:	bl	1f210 <lzma_mode_is_supported@@XZ_5.0+0x4ca8>
   1ec24:	ldr	w10, [sp, #32]
   1ec28:	subs	w10, w10, #0x1
   1ec2c:	ldur	x8, [x29, #-8]
   1ec30:	ldr	x9, [sp, #8]
   1ec34:	add	x8, x8, x9
   1ec38:	ldr	w13, [sp, #32]
   1ec3c:	mov	w11, w13
   1ec40:	ldr	x12, [sp]
   1ec44:	mul	x11, x12, x11
   1ec48:	add	x8, x8, x11
   1ec4c:	str	w10, [x8, #20]
   1ec50:	ldur	x8, [x29, #-8]
   1ec54:	add	x8, x8, x9
   1ec58:	ldur	w10, [x29, #-28]
   1ec5c:	mov	w11, w10
   1ec60:	mul	x11, x12, x11
   1ec64:	add	x8, x8, x11
   1ec68:	ldrb	w10, [x8, #5]
   1ec6c:	tbnz	w10, #0, 1ec74 <lzma_mode_is_supported@@XZ_5.0+0x470c>
   1ec70:	b	1ed28 <lzma_mode_is_supported@@XZ_5.0+0x47c0>
   1ec74:	ldur	x8, [x29, #-8]
   1ec78:	mov	x9, #0xee4                 	// #3812
   1ec7c:	movk	x9, #0x1, lsl #16
   1ec80:	add	x8, x8, x9
   1ec84:	ldr	w10, [sp, #32]
   1ec88:	subs	w10, w10, #0x1
   1ec8c:	mov	w11, w10
   1ec90:	ubfx	x11, x11, #0, #32
   1ec94:	mov	x12, #0x2c                  	// #44
   1ec98:	mul	x11, x12, x11
   1ec9c:	add	x8, x8, x11
   1eca0:	mov	w10, #0x0                   	// #0
   1eca4:	strb	w10, [x8, #4]
   1eca8:	ldur	x8, [x29, #-8]
   1ecac:	add	x8, x8, x9
   1ecb0:	ldur	w10, [x29, #-28]
   1ecb4:	mov	w11, w10
   1ecb8:	mul	x11, x12, x11
   1ecbc:	add	x8, x8, x11
   1ecc0:	ldr	w10, [x8, #8]
   1ecc4:	ldur	x8, [x29, #-8]
   1ecc8:	add	x8, x8, x9
   1eccc:	ldr	w13, [sp, #32]
   1ecd0:	subs	w13, w13, #0x1
   1ecd4:	mov	w11, w13
   1ecd8:	ubfx	x11, x11, #0, #32
   1ecdc:	mul	x11, x12, x11
   1ece0:	add	x8, x8, x11
   1ece4:	str	w10, [x8, #20]
   1ece8:	ldur	x8, [x29, #-8]
   1ecec:	add	x8, x8, x9
   1ecf0:	ldur	w10, [x29, #-28]
   1ecf4:	mov	w11, w10
   1ecf8:	mul	x11, x12, x11
   1ecfc:	add	x8, x8, x11
   1ed00:	ldr	w10, [x8, #12]
   1ed04:	ldur	x8, [x29, #-8]
   1ed08:	add	x8, x8, x9
   1ed0c:	ldr	w13, [sp, #32]
   1ed10:	subs	w13, w13, #0x1
   1ed14:	mov	w9, w13
   1ed18:	ubfx	x9, x9, #0, #32
   1ed1c:	mul	x9, x12, x9
   1ed20:	add	x8, x8, x9
   1ed24:	str	w10, [x8, #24]
   1ed28:	ldr	w8, [sp, #32]
   1ed2c:	str	w8, [sp, #24]
   1ed30:	ldr	w8, [sp, #28]
   1ed34:	str	w8, [sp, #20]
   1ed38:	ldur	x9, [x29, #-8]
   1ed3c:	mov	x10, #0xee4                 	// #3812
   1ed40:	movk	x10, #0x1, lsl #16
   1ed44:	add	x9, x9, x10
   1ed48:	ldr	w8, [sp, #24]
   1ed4c:	mov	w11, w8
   1ed50:	mov	x12, #0x2c                  	// #44
   1ed54:	mul	x11, x12, x11
   1ed58:	add	x9, x9, x11
   1ed5c:	ldr	w8, [x9, #24]
   1ed60:	str	w8, [sp, #28]
   1ed64:	ldur	x9, [x29, #-8]
   1ed68:	add	x9, x9, x10
   1ed6c:	ldr	w8, [sp, #24]
   1ed70:	mov	w11, w8
   1ed74:	mul	x11, x12, x11
   1ed78:	add	x9, x9, x11
   1ed7c:	ldr	w8, [x9, #20]
   1ed80:	str	w8, [sp, #32]
   1ed84:	ldr	w8, [sp, #20]
   1ed88:	ldur	x9, [x29, #-8]
   1ed8c:	add	x9, x9, x10
   1ed90:	ldr	w13, [sp, #24]
   1ed94:	mov	w11, w13
   1ed98:	mul	x11, x12, x11
   1ed9c:	add	x9, x9, x11
   1eda0:	str	w8, [x9, #24]
   1eda4:	ldur	w8, [x29, #-28]
   1eda8:	ldur	x9, [x29, #-8]
   1edac:	add	x9, x9, x10
   1edb0:	ldr	w13, [sp, #24]
   1edb4:	mov	w10, w13
   1edb8:	mul	x10, x12, x10
   1edbc:	add	x9, x9, x10
   1edc0:	str	w8, [x9, #20]
   1edc4:	ldr	w8, [sp, #24]
   1edc8:	stur	w8, [x29, #-28]
   1edcc:	ldur	w8, [x29, #-28]
   1edd0:	cbnz	w8, 1ebc4 <lzma_mode_is_supported@@XZ_5.0+0x465c>
   1edd4:	ldur	x8, [x29, #-8]
   1edd8:	mov	x9, #0xef8                 	// #3832
   1eddc:	movk	x9, #0x1, lsl #16
   1ede0:	add	x8, x8, x9
   1ede4:	ldr	w10, [x8]
   1ede8:	ldur	x8, [x29, #-8]
   1edec:	mov	x9, #0xee0                 	// #3808
   1edf0:	movk	x9, #0x1, lsl #16
   1edf4:	add	x8, x8, x9
   1edf8:	str	w10, [x8]
   1edfc:	ldur	x8, [x29, #-8]
   1ee00:	mov	x9, #0xef8                 	// #3832
   1ee04:	movk	x9, #0x1, lsl #16
   1ee08:	add	x8, x8, x9
   1ee0c:	ldr	w10, [x8]
   1ee10:	ldur	x8, [x29, #-16]
   1ee14:	str	w10, [x8]
   1ee18:	ldur	x8, [x29, #-8]
   1ee1c:	mov	x9, #0xefc                 	// #3836
   1ee20:	movk	x9, #0x1, lsl #16
   1ee24:	add	x8, x8, x9
   1ee28:	ldr	w10, [x8]
   1ee2c:	ldur	x8, [x29, #-24]
   1ee30:	str	w10, [x8]
   1ee34:	ldp	x29, x30, [sp, #64]
   1ee38:	add	sp, sp, #0x50
   1ee3c:	ret
   1ee40:	sub	sp, sp, #0x30
   1ee44:	stp	x29, x30, [sp, #32]
   1ee48:	add	x29, sp, #0x20
   1ee4c:	mov	w8, #0x1                   	// #1
   1ee50:	stur	x0, [x29, #-8]
   1ee54:	stur	w1, [x29, #-12]
   1ee58:	str	w2, [sp, #16]
   1ee5c:	str	wzr, [sp, #12]
   1ee60:	ldur	w9, [x29, #-12]
   1ee64:	lsl	w8, w8, w9
   1ee68:	ldr	w9, [sp, #16]
   1ee6c:	add	w8, w9, w8
   1ee70:	str	w8, [sp, #16]
   1ee74:	ldr	w8, [sp, #16]
   1ee78:	and	w8, w8, #0x1
   1ee7c:	str	w8, [sp, #8]
   1ee80:	ldr	w8, [sp, #16]
   1ee84:	lsr	w8, w8, #1
   1ee88:	str	w8, [sp, #16]
   1ee8c:	ldur	x9, [x29, #-8]
   1ee90:	ldr	w8, [sp, #16]
   1ee94:	mov	w10, w8
   1ee98:	ldrh	w0, [x9, x10, lsl #1]
   1ee9c:	ldr	w1, [sp, #8]
   1eea0:	bl	1effc <lzma_mode_is_supported@@XZ_5.0+0x4a94>
   1eea4:	ldr	w8, [sp, #12]
   1eea8:	add	w8, w8, w0
   1eeac:	str	w8, [sp, #12]
   1eeb0:	ldr	w8, [sp, #16]
   1eeb4:	cmp	w8, #0x1
   1eeb8:	b.ne	1ee74 <lzma_mode_is_supported@@XZ_5.0+0x490c>  // b.any
   1eebc:	ldr	w0, [sp, #12]
   1eec0:	ldp	x29, x30, [sp, #32]
   1eec4:	add	sp, sp, #0x30
   1eec8:	ret
   1eecc:	sub	sp, sp, #0x10
   1eed0:	str	w0, [sp, #12]
   1eed4:	ldr	w8, [sp, #12]
   1eed8:	lsl	w0, w8, #4
   1eedc:	add	sp, sp, #0x10
   1eee0:	ret
   1eee4:	sub	sp, sp, #0x10
   1eee8:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1eeec:	ldr	x8, [x8, #4008]
   1eef0:	str	w0, [sp, #8]
   1eef4:	ldr	w9, [sp, #8]
   1eef8:	cmp	w9, #0x2, lsl #12
   1eefc:	str	x8, [sp]
   1ef00:	b.cs	1ef1c <lzma_mode_is_supported@@XZ_5.0+0x49b4>  // b.hs, b.nlast
   1ef04:	ldr	w8, [sp, #8]
   1ef08:	mov	w9, w8
   1ef0c:	ldr	x10, [sp]
   1ef10:	ldrb	w8, [x10, x9]
   1ef14:	str	w8, [sp, #12]
   1ef18:	b	1ef60 <lzma_mode_is_supported@@XZ_5.0+0x49f8>
   1ef1c:	ldr	w8, [sp, #8]
   1ef20:	mov	w9, #0x2000000             	// #33554432
   1ef24:	cmp	w8, w9
   1ef28:	b.cs	1ef48 <lzma_mode_is_supported@@XZ_5.0+0x49e0>  // b.hs, b.nlast
   1ef2c:	ldr	w8, [sp, #8]
   1ef30:	lsr	w8, w8, #12
   1ef34:	ldr	x9, [sp]
   1ef38:	ldrb	w8, [x9, w8, uxtw]
   1ef3c:	add	w8, w8, #0x18
   1ef40:	str	w8, [sp, #12]
   1ef44:	b	1ef60 <lzma_mode_is_supported@@XZ_5.0+0x49f8>
   1ef48:	ldr	w8, [sp, #8]
   1ef4c:	lsr	w8, w8, #24
   1ef50:	ldr	x9, [sp]
   1ef54:	ldrb	w8, [x9, w8, uxtw]
   1ef58:	add	w8, w8, #0x30
   1ef5c:	str	w8, [sp, #12]
   1ef60:	ldr	w0, [sp, #12]
   1ef64:	add	sp, sp, #0x10
   1ef68:	ret
   1ef6c:	sub	sp, sp, #0x30
   1ef70:	stp	x29, x30, [sp, #32]
   1ef74:	add	x29, sp, #0x20
   1ef78:	mov	w8, #0x1                   	// #1
   1ef7c:	stur	x0, [x29, #-8]
   1ef80:	stur	w1, [x29, #-12]
   1ef84:	str	w2, [sp, #16]
   1ef88:	str	wzr, [sp, #12]
   1ef8c:	str	w8, [sp, #8]
   1ef90:	ldr	w8, [sp, #16]
   1ef94:	and	w8, w8, #0x1
   1ef98:	str	w8, [sp, #4]
   1ef9c:	ldr	w8, [sp, #16]
   1efa0:	lsr	w8, w8, #1
   1efa4:	str	w8, [sp, #16]
   1efa8:	ldur	x9, [x29, #-8]
   1efac:	ldr	w8, [sp, #8]
   1efb0:	mov	w10, w8
   1efb4:	ldrh	w0, [x9, x10, lsl #1]
   1efb8:	ldr	w1, [sp, #4]
   1efbc:	bl	1effc <lzma_mode_is_supported@@XZ_5.0+0x4a94>
   1efc0:	ldr	w8, [sp, #12]
   1efc4:	add	w8, w8, w0
   1efc8:	str	w8, [sp, #12]
   1efcc:	ldr	w8, [sp, #8]
   1efd0:	ldr	w11, [sp, #4]
   1efd4:	add	w8, w11, w8, lsl #1
   1efd8:	str	w8, [sp, #8]
   1efdc:	ldur	w8, [x29, #-12]
   1efe0:	subs	w8, w8, #0x1
   1efe4:	stur	w8, [x29, #-12]
   1efe8:	cbnz	w8, 1ef90 <lzma_mode_is_supported@@XZ_5.0+0x4a28>
   1efec:	ldr	w0, [sp, #12]
   1eff0:	ldp	x29, x30, [sp, #32]
   1eff4:	add	sp, sp, #0x30
   1eff8:	ret
   1effc:	sub	sp, sp, #0x10
   1f000:	mov	w8, wzr
   1f004:	adrp	x9, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1f008:	ldr	x9, [x9, #3960]
   1f00c:	strh	w0, [sp, #14]
   1f010:	str	w1, [sp, #8]
   1f014:	ldrh	w10, [sp, #14]
   1f018:	ldr	w11, [sp, #8]
   1f01c:	subs	w8, w8, w11
   1f020:	and	w8, w8, #0x7ff
   1f024:	eor	w8, w10, w8
   1f028:	lsr	w8, w8, #4
   1f02c:	ldrb	w0, [x9, w8, uxtw]
   1f030:	add	sp, sp, #0x10
   1f034:	ret
   1f038:	sub	sp, sp, #0x20
   1f03c:	stp	x29, x30, [sp, #16]
   1f040:	add	x29, sp, #0x10
   1f044:	str	x0, [sp, #8]
   1f048:	str	w1, [sp, #4]
   1f04c:	ldr	w8, [sp, #4]
   1f050:	cbz	w8, 1f07c <lzma_mode_is_supported@@XZ_5.0+0x4b14>
   1f054:	ldr	x8, [sp, #8]
   1f058:	ldr	x8, [x8, #56]
   1f05c:	ldr	x0, [sp, #8]
   1f060:	ldr	w1, [sp, #4]
   1f064:	blr	x8
   1f068:	ldr	w9, [sp, #4]
   1f06c:	ldr	x8, [sp, #8]
   1f070:	ldr	w10, [x8, #28]
   1f074:	add	w9, w10, w9
   1f078:	str	w9, [x8, #28]
   1f07c:	ldp	x29, x30, [sp, #16]
   1f080:	add	sp, sp, #0x20
   1f084:	ret
   1f088:	sub	sp, sp, #0x10
   1f08c:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1f090:	ldr	x8, [x8, #3960]
   1f094:	strh	w0, [sp, #14]
   1f098:	ldrh	w9, [sp, #14]
   1f09c:	asr	w9, w9, #4
   1f0a0:	ldrb	w0, [x8, w9, sxtw]
   1f0a4:	add	sp, sp, #0x10
   1f0a8:	ret
   1f0ac:	sub	sp, sp, #0x50
   1f0b0:	stp	x29, x30, [sp, #64]
   1f0b4:	add	x29, sp, #0x40
   1f0b8:	mov	w8, #0x8                   	// #8
   1f0bc:	mov	w9, #0x1                   	// #1
   1f0c0:	stur	x0, [x29, #-8]
   1f0c4:	stur	w1, [x29, #-12]
   1f0c8:	stur	w2, [x29, #-16]
   1f0cc:	and	w9, w3, w9
   1f0d0:	sturb	w9, [x29, #-17]
   1f0d4:	stur	w4, [x29, #-24]
   1f0d8:	stur	w5, [x29, #-28]
   1f0dc:	ldur	x10, [x29, #-8]
   1f0e0:	add	x10, x10, #0xb9c
   1f0e4:	ldur	w9, [x29, #-12]
   1f0e8:	ldur	x11, [x29, #-8]
   1f0ec:	ldr	w12, [x11, #2968]
   1f0f0:	and	w9, w9, w12
   1f0f4:	ldur	x11, [x29, #-8]
   1f0f8:	ldr	w12, [x11, #2964]
   1f0fc:	lsl	w9, w9, w12
   1f100:	ldur	w12, [x29, #-16]
   1f104:	ldur	x11, [x29, #-8]
   1f108:	ldr	w13, [x11, #2964]
   1f10c:	subs	w8, w8, w13
   1f110:	lsr	w8, w12, w8
   1f114:	add	w8, w9, w8
   1f118:	mov	w11, w8
   1f11c:	ubfx	x11, x11, #0, #32
   1f120:	mov	x14, #0x600                 	// #1536
   1f124:	mul	x11, x14, x11
   1f128:	add	x10, x10, x11
   1f12c:	str	x10, [sp, #24]
   1f130:	str	wzr, [sp, #20]
   1f134:	ldurb	w8, [x29, #-17]
   1f138:	tbnz	w8, #0, 1f154 <lzma_mode_is_supported@@XZ_5.0+0x4bec>
   1f13c:	ldr	x0, [sp, #24]
   1f140:	ldur	w2, [x29, #-28]
   1f144:	mov	w1, #0x8                   	// #8
   1f148:	bl	1ee40 <lzma_mode_is_supported@@XZ_5.0+0x48d8>
   1f14c:	str	w0, [sp, #20]
   1f150:	b	1f200 <lzma_mode_is_supported@@XZ_5.0+0x4c98>
   1f154:	mov	w8, #0x100                 	// #256
   1f158:	str	w8, [sp, #16]
   1f15c:	ldur	w8, [x29, #-28]
   1f160:	add	w8, w8, #0x100
   1f164:	stur	w8, [x29, #-28]
   1f168:	ldur	w8, [x29, #-24]
   1f16c:	lsl	w8, w8, #1
   1f170:	stur	w8, [x29, #-24]
   1f174:	ldur	w8, [x29, #-24]
   1f178:	ldr	w9, [sp, #16]
   1f17c:	and	w8, w8, w9
   1f180:	str	w8, [sp, #12]
   1f184:	ldr	w8, [sp, #16]
   1f188:	ldr	w9, [sp, #12]
   1f18c:	add	w8, w8, w9
   1f190:	ldur	w9, [x29, #-28]
   1f194:	add	w8, w8, w9, lsr #8
   1f198:	str	w8, [sp, #8]
   1f19c:	ldur	w8, [x29, #-28]
   1f1a0:	lsr	w8, w8, #7
   1f1a4:	and	w8, w8, #0x1
   1f1a8:	str	w8, [sp, #4]
   1f1ac:	ldr	x10, [sp, #24]
   1f1b0:	ldr	w8, [sp, #8]
   1f1b4:	mov	w11, w8
   1f1b8:	ldrh	w0, [x10, x11, lsl #1]
   1f1bc:	ldr	w1, [sp, #4]
   1f1c0:	bl	1effc <lzma_mode_is_supported@@XZ_5.0+0x4a94>
   1f1c4:	ldr	w8, [sp, #20]
   1f1c8:	add	w8, w8, w0
   1f1cc:	str	w8, [sp, #20]
   1f1d0:	ldur	w8, [x29, #-28]
   1f1d4:	lsl	w8, w8, #1
   1f1d8:	stur	w8, [x29, #-28]
   1f1dc:	ldur	w8, [x29, #-24]
   1f1e0:	ldur	w9, [x29, #-28]
   1f1e4:	eor	w8, w8, w9
   1f1e8:	ldr	w9, [sp, #16]
   1f1ec:	bic	w8, w9, w8
   1f1f0:	str	w8, [sp, #16]
   1f1f4:	ldur	w8, [x29, #-28]
   1f1f8:	cmp	w8, #0x10, lsl #12
   1f1fc:	b.cc	1f168 <lzma_mode_is_supported@@XZ_5.0+0x4c00>  // b.lo, b.ul, b.last
   1f200:	ldr	w0, [sp, #20]
   1f204:	ldp	x29, x30, [sp, #64]
   1f208:	add	sp, sp, #0x50
   1f20c:	ret
   1f210:	sub	sp, sp, #0x10
   1f214:	mov	w8, #0xffffffff            	// #-1
   1f218:	mov	w9, #0x0                   	// #0
   1f21c:	str	x0, [sp, #8]
   1f220:	ldr	x10, [sp, #8]
   1f224:	str	w8, [x10, #24]
   1f228:	ldr	x10, [sp, #8]
   1f22c:	strb	w9, [x10, #4]
   1f230:	add	sp, sp, #0x10
   1f234:	ret
   1f238:	sub	sp, sp, #0x10
   1f23c:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1f240:	ldr	x8, [x8, #3960]
   1f244:	strh	w0, [sp, #14]
   1f248:	ldrh	w9, [sp, #14]
   1f24c:	eor	w9, w9, #0x7ff
   1f250:	lsr	w9, w9, #4
   1f254:	ldrb	w0, [x8, w9, uxtw]
   1f258:	add	sp, sp, #0x10
   1f25c:	ret
   1f260:	sub	sp, sp, #0x30
   1f264:	stp	x29, x30, [sp, #32]
   1f268:	add	x29, sp, #0x20
   1f26c:	stur	x0, [x29, #-8]
   1f270:	stur	w1, [x29, #-12]
   1f274:	str	w2, [sp, #16]
   1f278:	ldur	x8, [x29, #-8]
   1f27c:	mov	x9, #0x6d34                	// #27956
   1f280:	add	x8, x8, x9
   1f284:	ldur	w10, [x29, #-12]
   1f288:	mov	w9, w10
   1f28c:	ldrh	w0, [x8, x9, lsl #1]
   1f290:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1f294:	ldur	x8, [x29, #-8]
   1f298:	mov	x9, #0x6d7c                	// #28028
   1f29c:	add	x8, x8, x9
   1f2a0:	ldur	w10, [x29, #-12]
   1f2a4:	mov	w9, w10
   1f2a8:	mov	x11, #0x20                  	// #32
   1f2ac:	mul	x9, x11, x9
   1f2b0:	add	x8, x8, x9
   1f2b4:	ldr	w10, [sp, #16]
   1f2b8:	mov	w9, w10
   1f2bc:	ldrh	w10, [x8, x9, lsl #1]
   1f2c0:	str	w0, [sp, #12]
   1f2c4:	mov	w0, w10
   1f2c8:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1f2cc:	ldr	w10, [sp, #12]
   1f2d0:	add	w0, w10, w0
   1f2d4:	ldp	x29, x30, [sp, #32]
   1f2d8:	add	sp, sp, #0x30
   1f2dc:	ret
   1f2e0:	sub	sp, sp, #0x10
   1f2e4:	mov	w8, #0x0                   	// #0
   1f2e8:	str	x0, [sp, #8]
   1f2ec:	ldr	x9, [sp, #8]
   1f2f0:	str	wzr, [x9, #24]
   1f2f4:	ldr	x9, [sp, #8]
   1f2f8:	strb	w8, [x9, #4]
   1f2fc:	add	sp, sp, #0x10
   1f300:	ret
   1f304:	sub	sp, sp, #0x30
   1f308:	stp	x29, x30, [sp, #32]
   1f30c:	add	x29, sp, #0x20
   1f310:	stur	x0, [x29, #-8]
   1f314:	stur	w1, [x29, #-12]
   1f318:	str	w2, [sp, #16]
   1f31c:	str	w3, [sp, #12]
   1f320:	ldur	w8, [x29, #-12]
   1f324:	cbnz	w8, 1f388 <lzma_mode_is_supported@@XZ_5.0+0x4e20>
   1f328:	ldur	x8, [x29, #-8]
   1f32c:	mov	x9, #0x6d34                	// #27956
   1f330:	add	x8, x8, x9
   1f334:	ldr	w10, [sp, #16]
   1f338:	mov	w9, w10
   1f33c:	ldrh	w0, [x8, x9, lsl #1]
   1f340:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1f344:	str	w0, [sp, #8]
   1f348:	ldur	x8, [x29, #-8]
   1f34c:	mov	x9, #0x6d7c                	// #28028
   1f350:	add	x8, x8, x9
   1f354:	ldr	w10, [sp, #16]
   1f358:	mov	w9, w10
   1f35c:	mov	x11, #0x20                  	// #32
   1f360:	mul	x9, x11, x9
   1f364:	add	x8, x8, x9
   1f368:	ldr	w10, [sp, #12]
   1f36c:	mov	w9, w10
   1f370:	ldrh	w0, [x8, x9, lsl #1]
   1f374:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1f378:	ldr	w10, [sp, #8]
   1f37c:	add	w10, w10, w0
   1f380:	str	w10, [sp, #8]
   1f384:	b	1f438 <lzma_mode_is_supported@@XZ_5.0+0x4ed0>
   1f388:	ldur	x8, [x29, #-8]
   1f38c:	mov	x9, #0x6d34                	// #27956
   1f390:	add	x8, x8, x9
   1f394:	ldr	w10, [sp, #16]
   1f398:	mov	w9, w10
   1f39c:	ldrh	w0, [x8, x9, lsl #1]
   1f3a0:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1f3a4:	str	w0, [sp, #8]
   1f3a8:	ldur	w10, [x29, #-12]
   1f3ac:	cmp	w10, #0x1
   1f3b0:	b.ne	1f3e0 <lzma_mode_is_supported@@XZ_5.0+0x4e78>  // b.any
   1f3b4:	ldur	x8, [x29, #-8]
   1f3b8:	mov	x9, #0x6d4c                	// #27980
   1f3bc:	add	x8, x8, x9
   1f3c0:	ldr	w10, [sp, #16]
   1f3c4:	mov	w9, w10
   1f3c8:	ldrh	w0, [x8, x9, lsl #1]
   1f3cc:	bl	1f088 <lzma_mode_is_supported@@XZ_5.0+0x4b20>
   1f3d0:	ldr	w10, [sp, #8]
   1f3d4:	add	w10, w10, w0
   1f3d8:	str	w10, [sp, #8]
   1f3dc:	b	1f438 <lzma_mode_is_supported@@XZ_5.0+0x4ed0>
   1f3e0:	ldur	x8, [x29, #-8]
   1f3e4:	mov	x9, #0x6d4c                	// #27980
   1f3e8:	add	x8, x8, x9
   1f3ec:	ldr	w10, [sp, #16]
   1f3f0:	mov	w9, w10
   1f3f4:	ldrh	w0, [x8, x9, lsl #1]
   1f3f8:	bl	1f238 <lzma_mode_is_supported@@XZ_5.0+0x4cd0>
   1f3fc:	ldr	w10, [sp, #8]
   1f400:	add	w10, w10, w0
   1f404:	str	w10, [sp, #8]
   1f408:	ldur	x8, [x29, #-8]
   1f40c:	mov	x9, #0x6d64                	// #28004
   1f410:	add	x8, x8, x9
   1f414:	ldr	w10, [sp, #16]
   1f418:	mov	w9, w10
   1f41c:	ldrh	w0, [x8, x9, lsl #1]
   1f420:	ldur	w10, [x29, #-12]
   1f424:	subs	w1, w10, #0x2
   1f428:	bl	1effc <lzma_mode_is_supported@@XZ_5.0+0x4a94>
   1f42c:	ldr	w10, [sp, #8]
   1f430:	add	w10, w10, w0
   1f434:	str	w10, [sp, #8]
   1f438:	ldr	w0, [sp, #8]
   1f43c:	ldp	x29, x30, [sp, #32]
   1f440:	add	sp, sp, #0x30
   1f444:	ret
   1f448:	sub	sp, sp, #0x10
   1f44c:	str	x0, [sp, #8]
   1f450:	str	w1, [sp, #4]
   1f454:	str	w2, [sp]
   1f458:	ldr	x8, [sp, #8]
   1f45c:	add	x8, x8, #0x404
   1f460:	ldr	w9, [sp]
   1f464:	mov	w10, w9
   1f468:	mov	x11, #0x440                 	// #1088
   1f46c:	mul	x10, x11, x10
   1f470:	add	x8, x8, x10
   1f474:	ldr	w9, [sp, #4]
   1f478:	subs	w9, w9, #0x2
   1f47c:	ldr	w0, [x8, w9, uxtw #2]
   1f480:	add	sp, sp, #0x10
   1f484:	ret
   1f488:	sub	sp, sp, #0x40
   1f48c:	stp	x29, x30, [sp, #48]
   1f490:	add	x29, sp, #0x30
   1f494:	stur	x0, [x29, #-8]
   1f498:	stur	w1, [x29, #-12]
   1f49c:	stur	w2, [x29, #-16]
   1f4a0:	stur	w3, [x29, #-20]
   1f4a4:	ldur	w8, [x29, #-16]
   1f4a8:	cmp	w8, #0x6
   1f4ac:	b.cs	1f4c0 <lzma_mode_is_supported@@XZ_5.0+0x4f58>  // b.hs, b.nlast
   1f4b0:	ldur	w8, [x29, #-16]
   1f4b4:	subs	w8, w8, #0x2
   1f4b8:	str	w8, [sp, #12]
   1f4bc:	b	1f4c8 <lzma_mode_is_supported@@XZ_5.0+0x4f60>
   1f4c0:	mov	w8, #0x3                   	// #3
   1f4c4:	str	w8, [sp, #12]
   1f4c8:	ldr	w8, [sp, #12]
   1f4cc:	str	w8, [sp, #24]
   1f4d0:	ldur	w8, [x29, #-12]
   1f4d4:	cmp	w8, #0x80
   1f4d8:	b.cs	1f514 <lzma_mode_is_supported@@XZ_5.0+0x4fac>  // b.hs, b.nlast
   1f4dc:	ldur	x8, [x29, #-8]
   1f4e0:	mov	x9, #0x690                 	// #1680
   1f4e4:	movk	x9, #0x1, lsl #16
   1f4e8:	add	x8, x8, x9
   1f4ec:	ldr	w10, [sp, #24]
   1f4f0:	mov	w9, w10
   1f4f4:	mov	x11, #0x200                 	// #512
   1f4f8:	mul	x9, x11, x9
   1f4fc:	add	x8, x8, x9
   1f500:	ldur	w10, [x29, #-12]
   1f504:	mov	w9, w10
   1f508:	ldr	w10, [x8, x9, lsl #2]
   1f50c:	str	w10, [sp, #20]
   1f510:	b	1f574 <lzma_mode_is_supported@@XZ_5.0+0x500c>
   1f514:	ldur	w0, [x29, #-12]
   1f518:	bl	1f5a8 <lzma_mode_is_supported@@XZ_5.0+0x5040>
   1f51c:	str	w0, [sp, #16]
   1f520:	ldur	x8, [x29, #-8]
   1f524:	mov	x9, #0x290                 	// #656
   1f528:	movk	x9, #0x1, lsl #16
   1f52c:	add	x8, x8, x9
   1f530:	ldr	w10, [sp, #24]
   1f534:	mov	w9, w10
   1f538:	mov	x11, #0x100                 	// #256
   1f53c:	mul	x9, x11, x9
   1f540:	add	x8, x8, x9
   1f544:	ldr	w10, [sp, #16]
   1f548:	mov	w9, w10
   1f54c:	ldr	w10, [x8, x9, lsl #2]
   1f550:	ldur	x8, [x29, #-8]
   1f554:	mov	x9, #0xe98                 	// #3736
   1f558:	movk	x9, #0x1, lsl #16
   1f55c:	add	x8, x8, x9
   1f560:	ldur	w12, [x29, #-12]
   1f564:	and	w12, w12, #0xf
   1f568:	ldr	w12, [x8, w12, uxtw #2]
   1f56c:	add	w10, w10, w12
   1f570:	str	w10, [sp, #20]
   1f574:	ldur	x8, [x29, #-8]
   1f578:	mov	x9, #0x7200                	// #29184
   1f57c:	add	x0, x8, x9
   1f580:	ldur	w1, [x29, #-16]
   1f584:	ldur	w2, [x29, #-20]
   1f588:	bl	1f448 <lzma_mode_is_supported@@XZ_5.0+0x4ee0>
   1f58c:	ldr	w10, [sp, #20]
   1f590:	add	w10, w10, w0
   1f594:	str	w10, [sp, #20]
   1f598:	ldr	w0, [sp, #20]
   1f59c:	ldp	x29, x30, [sp, #48]
   1f5a0:	add	sp, sp, #0x40
   1f5a4:	ret
   1f5a8:	sub	sp, sp, #0x10
   1f5ac:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   1f5b0:	ldr	x8, [x8, #4008]
   1f5b4:	str	w0, [sp, #8]
   1f5b8:	ldr	w9, [sp, #8]
   1f5bc:	cmp	w9, #0x80, lsl #12
   1f5c0:	str	x8, [sp]
   1f5c4:	b.cs	1f5e4 <lzma_mode_is_supported@@XZ_5.0+0x507c>  // b.hs, b.nlast
   1f5c8:	ldr	w8, [sp, #8]
   1f5cc:	lsr	w8, w8, #6
   1f5d0:	ldr	x9, [sp]
   1f5d4:	ldrb	w8, [x9, w8, uxtw]
   1f5d8:	add	w8, w8, #0xc
   1f5dc:	str	w8, [sp, #12]
   1f5e0:	b	1f628 <lzma_mode_is_supported@@XZ_5.0+0x50c0>
   1f5e4:	ldr	w8, [sp, #8]
   1f5e8:	mov	w9, #0x80000000            	// #-2147483648
   1f5ec:	cmp	w8, w9
   1f5f0:	b.cs	1f610 <lzma_mode_is_supported@@XZ_5.0+0x50a8>  // b.hs, b.nlast
   1f5f4:	ldr	w8, [sp, #8]
   1f5f8:	lsr	w8, w8, #18
   1f5fc:	ldr	x9, [sp]
   1f600:	ldrb	w8, [x9, w8, uxtw]
   1f604:	add	w8, w8, #0x24
   1f608:	str	w8, [sp, #12]
   1f60c:	b	1f628 <lzma_mode_is_supported@@XZ_5.0+0x50c0>
   1f610:	ldr	w8, [sp, #8]
   1f614:	lsr	w8, w8, #30
   1f618:	ldr	x9, [sp]
   1f61c:	ldrb	w8, [x9, w8, uxtw]
   1f620:	add	w8, w8, #0x3c
   1f624:	str	w8, [sp, #12]
   1f628:	ldr	w0, [sp, #12]
   1f62c:	add	sp, sp, #0x10
   1f630:	ret
   1f634:	sub	sp, sp, #0x30
   1f638:	stp	x29, x30, [sp, #32]
   1f63c:	add	x29, sp, #0x20
   1f640:	stur	x0, [x29, #-8]
   1f644:	stur	w1, [x29, #-12]
   1f648:	str	w2, [sp, #16]
   1f64c:	str	w3, [sp, #12]
   1f650:	str	w4, [sp, #8]
   1f654:	ldur	x8, [x29, #-8]
   1f658:	mov	x9, #0xba48                	// #47688
   1f65c:	add	x0, x8, x9
   1f660:	ldr	w1, [sp, #16]
   1f664:	ldr	w2, [sp, #8]
   1f668:	bl	1f448 <lzma_mode_is_supported@@XZ_5.0+0x4ee0>
   1f66c:	ldur	x8, [x29, #-8]
   1f670:	ldur	w1, [x29, #-12]
   1f674:	ldr	w2, [sp, #12]
   1f678:	ldr	w3, [sp, #8]
   1f67c:	str	w0, [sp, #4]
   1f680:	mov	x0, x8
   1f684:	bl	1f304 <lzma_mode_is_supported@@XZ_5.0+0x4d9c>
   1f688:	ldr	w10, [sp, #4]
   1f68c:	add	w0, w10, w0
   1f690:	ldp	x29, x30, [sp, #32]
   1f694:	add	sp, sp, #0x30
   1f698:	ret
   1f69c:	sub	sp, sp, #0x40
   1f6a0:	stp	x29, x30, [sp, #48]
   1f6a4:	add	x29, sp, #0x30
   1f6a8:	stur	x0, [x29, #-16]
   1f6ac:	str	x1, [sp, #24]
   1f6b0:	str	x2, [sp, #16]
   1f6b4:	str	x3, [sp, #8]
   1f6b8:	ldur	x8, [x29, #-16]
   1f6bc:	ldr	x8, [x8]
   1f6c0:	cbnz	x8, 1f720 <lzma_mode_is_supported@@XZ_5.0+0x51b8>
   1f6c4:	ldr	x1, [sp, #24]
   1f6c8:	mov	x0, #0x6ec0                	// #28352
   1f6cc:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   1f6d0:	ldur	x8, [x29, #-16]
   1f6d4:	str	x0, [x8]
   1f6d8:	ldur	x8, [x29, #-16]
   1f6dc:	ldr	x8, [x8]
   1f6e0:	cbnz	x8, 1f6f0 <lzma_mode_is_supported@@XZ_5.0+0x5188>
   1f6e4:	mov	w8, #0x5                   	// #5
   1f6e8:	stur	w8, [x29, #-4]
   1f6ec:	b	1f764 <lzma_mode_is_supported@@XZ_5.0+0x51fc>
   1f6f0:	ldur	x8, [x29, #-16]
   1f6f4:	adrp	x9, 1f000 <lzma_mode_is_supported@@XZ_5.0+0x4a98>
   1f6f8:	add	x9, x9, #0x774
   1f6fc:	str	x9, [x8, #8]
   1f700:	ldur	x8, [x29, #-16]
   1f704:	adrp	x9, 26000 <lzma_mode_is_supported@@XZ_5.0+0xba98>
   1f708:	add	x9, x9, #0xcd8
   1f70c:	str	x9, [x8, #16]
   1f710:	ldur	x8, [x29, #-16]
   1f714:	adrp	x9, 27000 <lzma_mode_is_supported@@XZ_5.0+0xca98>
   1f718:	add	x9, x9, #0x358
   1f71c:	str	x9, [x8, #24]
   1f720:	ldr	x8, [sp, #16]
   1f724:	str	x8, [sp]
   1f728:	ldr	x8, [sp]
   1f72c:	ldr	w9, [x8]
   1f730:	mov	w8, w9
   1f734:	ldr	x10, [sp, #8]
   1f738:	str	x8, [x10]
   1f73c:	ldr	x8, [sp]
   1f740:	ldr	x8, [x8, #8]
   1f744:	ldr	x10, [sp, #8]
   1f748:	str	x8, [x10, #8]
   1f74c:	ldr	x8, [sp]
   1f750:	ldr	w9, [x8, #16]
   1f754:	mov	w8, w9
   1f758:	ldr	x10, [sp, #8]
   1f75c:	str	x8, [x10, #16]
   1f760:	stur	wzr, [x29, #-4]
   1f764:	ldur	w0, [x29, #-4]
   1f768:	ldp	x29, x30, [sp, #48]
   1f76c:	add	sp, sp, #0x40
   1f770:	ret
   1f774:	sub	sp, sp, #0x160
   1f778:	stp	x29, x30, [sp, #320]
   1f77c:	str	x28, [sp, #336]
   1f780:	add	x29, sp, #0x140
   1f784:	stur	x0, [x29, #-16]
   1f788:	stur	x1, [x29, #-24]
   1f78c:	stur	x2, [x29, #-32]
   1f790:	stur	x3, [x29, #-40]
   1f794:	stur	x4, [x29, #-48]
   1f798:	ldur	x8, [x29, #-16]
   1f79c:	stur	x8, [x29, #-56]
   1f7a0:	ldur	x8, [x29, #-56]
   1f7a4:	mov	x9, #0x6e6c                	// #28268
   1f7a8:	add	x0, x8, x9
   1f7ac:	ldur	x1, [x29, #-32]
   1f7b0:	ldur	x2, [x29, #-40]
   1f7b4:	ldur	x3, [x29, #-48]
   1f7b8:	bl	27748 <lzma_mode_is_supported@@XZ_5.0+0xd1e0>
   1f7bc:	stur	w0, [x29, #-60]
   1f7c0:	ldur	w10, [x29, #-60]
   1f7c4:	cmp	w10, #0x1
   1f7c8:	b.eq	1f7d8 <lzma_mode_is_supported@@XZ_5.0+0x5270>  // b.none
   1f7cc:	ldur	w8, [x29, #-60]
   1f7d0:	stur	w8, [x29, #-4]
   1f7d4:	b	26cc4 <lzma_mode_is_supported@@XZ_5.0+0xc75c>
   1f7d8:	ldur	x1, [x29, #-24]
   1f7dc:	sub	x0, x29, #0x70
   1f7e0:	mov	x2, #0x30                  	// #48
   1f7e4:	bl	3090 <memcpy@plt>
   1f7e8:	ldur	x8, [x29, #-104]
   1f7ec:	stur	x8, [x29, #-120]
   1f7f0:	ldur	x8, [x29, #-56]
   1f7f4:	mov	x9, #0x6e6c                	// #28268
   1f7f8:	add	x9, x8, x9
   1f7fc:	ldr	x9, [x9]
   1f800:	stur	x9, [x29, #-136]
   1f804:	mov	x9, #0x6e74                	// #28276
   1f808:	add	x8, x8, x9
   1f80c:	ldr	w10, [x8]
   1f810:	stur	w10, [x29, #-128]
   1f814:	ldur	x8, [x29, #-40]
   1f818:	ldr	x8, [x8]
   1f81c:	stur	x8, [x29, #-144]
   1f820:	ldur	x8, [x29, #-56]
   1f824:	mov	x9, #0x6e78                	// #28280
   1f828:	add	x8, x8, x9
   1f82c:	ldr	w10, [x8]
   1f830:	stur	w10, [x29, #-152]
   1f834:	ldur	x8, [x29, #-56]
   1f838:	mov	x9, #0x6e7c                	// #28284
   1f83c:	add	x8, x8, x9
   1f840:	ldr	w10, [x8]
   1f844:	stur	w10, [x29, #-156]
   1f848:	ldur	x8, [x29, #-56]
   1f84c:	mov	x9, #0x6e80                	// #28288
   1f850:	add	x8, x8, x9
   1f854:	ldr	w10, [x8]
   1f858:	str	w10, [sp, #160]
   1f85c:	ldur	x8, [x29, #-56]
   1f860:	mov	x9, #0x6e84                	// #28292
   1f864:	add	x8, x8, x9
   1f868:	ldr	w10, [x8]
   1f86c:	str	w10, [sp, #156]
   1f870:	ldur	x8, [x29, #-56]
   1f874:	mov	x9, #0x6e88                	// #28296
   1f878:	add	x8, x8, x9
   1f87c:	ldr	w10, [x8]
   1f880:	str	w10, [sp, #152]
   1f884:	ldur	x8, [x29, #-56]
   1f888:	mov	x9, #0x6e8c                	// #28300
   1f88c:	add	x8, x8, x9
   1f890:	ldr	w10, [x8]
   1f894:	str	w10, [sp, #148]
   1f898:	ldur	x8, [x29, #-56]
   1f89c:	ldr	x8, [x8, #28328]
   1f8a0:	str	x8, [sp, #136]
   1f8a4:	ldur	x8, [x29, #-56]
   1f8a8:	mov	x9, #0x6eb0                	// #28336
   1f8ac:	add	x8, x8, x9
   1f8b0:	ldr	w10, [x8]
   1f8b4:	str	w10, [sp, #132]
   1f8b8:	ldur	x8, [x29, #-56]
   1f8bc:	mov	x9, #0x6eb4                	// #28340
   1f8c0:	add	x8, x8, x9
   1f8c4:	ldr	w10, [x8]
   1f8c8:	str	w10, [sp, #128]
   1f8cc:	ldur	x8, [x29, #-56]
   1f8d0:	mov	x9, #0x6eb8                	// #28344
   1f8d4:	add	x8, x8, x9
   1f8d8:	ldr	w10, [x8]
   1f8dc:	str	w10, [sp, #124]
   1f8e0:	ldur	x8, [x29, #-56]
   1f8e4:	mov	x9, #0x6ebc                	// #28348
   1f8e8:	add	x8, x8, x9
   1f8ec:	ldr	w10, [x8]
   1f8f0:	str	w10, [sp, #120]
   1f8f4:	ldur	x8, [x29, #-56]
   1f8f8:	mov	x9, #0x6e94                	// #28308
   1f8fc:	add	x8, x8, x9
   1f900:	ldr	w10, [x8]
   1f904:	str	w10, [sp, #116]
   1f908:	ldur	x8, [x29, #-56]
   1f90c:	mov	x9, #0x6e90                	// #28304
   1f910:	add	x8, x8, x9
   1f914:	ldr	w10, [x8]
   1f918:	str	w10, [sp, #112]
   1f91c:	ldur	x8, [x29, #-104]
   1f920:	ldr	w10, [sp, #148]
   1f924:	mov	w9, w10
   1f928:	and	x8, x8, x9
   1f92c:	str	w8, [sp, #108]
   1f930:	str	wzr, [sp, #104]
   1f934:	ldur	x9, [x29, #-56]
   1f938:	ldr	x9, [x9, #28312]
   1f93c:	mov	x11, #0xffffffffffffffff    	// #-1
   1f940:	cmp	x9, x11
   1f944:	cset	w8, ne  // ne = any
   1f948:	and	w8, w8, #0x1
   1f94c:	strb	w8, [sp, #103]
   1f950:	ldrb	w8, [sp, #103]
   1f954:	tbnz	w8, #0, 1f95c <lzma_mode_is_supported@@XZ_5.0+0x53f4>
   1f958:	b	1f98c <lzma_mode_is_supported@@XZ_5.0+0x5424>
   1f95c:	ldur	x8, [x29, #-56]
   1f960:	ldr	x8, [x8, #28312]
   1f964:	ldur	x9, [x29, #-88]
   1f968:	ldur	x10, [x29, #-104]
   1f96c:	subs	x9, x9, x10
   1f970:	cmp	x8, x9
   1f974:	b.cs	1f98c <lzma_mode_is_supported@@XZ_5.0+0x5424>  // b.hs, b.nlast
   1f978:	ldur	x8, [x29, #-104]
   1f97c:	ldur	x9, [x29, #-56]
   1f980:	ldr	x9, [x9, #28312]
   1f984:	add	x8, x8, x9
   1f988:	stur	x8, [x29, #-88]
   1f98c:	ldur	x8, [x29, #-56]
   1f990:	mov	x9, #0x6ea0                	// #28320
   1f994:	add	x8, x8, x9
   1f998:	ldr	w10, [x8]
   1f99c:	subs	w10, w10, #0x0
   1f9a0:	mov	w8, w10
   1f9a4:	ubfx	x8, x8, #0, #32
   1f9a8:	cmp	x8, #0x46
   1f9ac:	str	x8, [sp, #72]
   1f9b0:	b.hi	26a54 <lzma_mode_is_supported@@XZ_5.0+0xc4ec>  // b.pmore
   1f9b4:	adrp	x8, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   1f9b8:	add	x8, x8, #0xc9c
   1f9bc:	ldr	x11, [sp, #72]
   1f9c0:	ldrsw	x10, [x8, x11, lsl #2]
   1f9c4:	add	x9, x8, x10
   1f9c8:	br	x9
   1f9cc:	ldur	x8, [x29, #-104]
   1f9d0:	ldr	w9, [sp, #148]
   1f9d4:	mov	w10, w9
   1f9d8:	and	x8, x8, x10
   1f9dc:	str	w8, [sp, #108]
   1f9e0:	ldrb	w8, [sp, #103]
   1f9e4:	mov	w9, #0x0                   	// #0
   1f9e8:	str	w9, [sp, #68]
   1f9ec:	tbnz	w8, #0, 1f9f4 <lzma_mode_is_supported@@XZ_5.0+0x548c>
   1f9f0:	b	1fa08 <lzma_mode_is_supported@@XZ_5.0+0x54a0>
   1f9f4:	ldur	x8, [x29, #-104]
   1f9f8:	ldur	x9, [x29, #-88]
   1f9fc:	cmp	x8, x9
   1fa00:	cset	w10, eq  // eq = none
   1fa04:	str	w10, [sp, #68]
   1fa08:	ldr	w8, [sp, #68]
   1fa0c:	and	w8, w8, #0x1
   1fa10:	mov	w0, w8
   1fa14:	sxtw	x9, w0
   1fa18:	cbz	x9, 1fa20 <lzma_mode_is_supported@@XZ_5.0+0x54b8>
   1fa1c:	b	26a54 <lzma_mode_is_supported@@XZ_5.0+0xc4ec>
   1fa20:	ldur	w8, [x29, #-136]
   1fa24:	mov	w9, #0x1000000             	// #16777216
   1fa28:	cmp	w8, w9
   1fa2c:	b.cs	1fa94 <lzma_mode_is_supported@@XZ_5.0+0x552c>  // b.hs, b.nlast
   1fa30:	ldur	x8, [x29, #-144]
   1fa34:	ldur	x9, [x29, #-48]
   1fa38:	cmp	x8, x9
   1fa3c:	cset	w10, eq  // eq = none
   1fa40:	and	w10, w10, #0x1
   1fa44:	mov	w0, w10
   1fa48:	sxtw	x8, w0
   1fa4c:	cbz	x8, 1fa68 <lzma_mode_is_supported@@XZ_5.0+0x5500>
   1fa50:	ldur	x8, [x29, #-56]
   1fa54:	mov	x9, #0x6ea0                	// #28320
   1fa58:	add	x8, x8, x9
   1fa5c:	mov	w10, #0x1                   	// #1
   1fa60:	str	w10, [x8]
   1fa64:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   1fa68:	ldur	w8, [x29, #-136]
   1fa6c:	lsl	w8, w8, #8
   1fa70:	stur	w8, [x29, #-136]
   1fa74:	ldur	w8, [x29, #-132]
   1fa78:	ldur	x9, [x29, #-32]
   1fa7c:	ldur	x10, [x29, #-144]
   1fa80:	add	x11, x10, #0x1
   1fa84:	stur	x11, [x29, #-144]
   1fa88:	ldrb	w12, [x9, x10]
   1fa8c:	orr	w8, w12, w8, lsl #8
   1fa90:	stur	w8, [x29, #-132]
   1fa94:	ldur	w8, [x29, #-136]
   1fa98:	lsr	w8, w8, #11
   1fa9c:	ldur	x9, [x29, #-56]
   1faa0:	add	x9, x9, #0x6, lsl #12
   1faa4:	ldur	w10, [x29, #-152]
   1faa8:	mov	w11, w10
   1faac:	mov	x12, #0x20                  	// #32
   1fab0:	mul	x11, x12, x11
   1fab4:	add	x9, x9, x11
   1fab8:	ldr	w10, [sp, #108]
   1fabc:	mov	w11, w10
   1fac0:	ldrh	w10, [x9, x11, lsl #1]
   1fac4:	mul	w8, w8, w10
   1fac8:	stur	w8, [x29, #-148]
   1facc:	ldur	w8, [x29, #-132]
   1fad0:	ldur	w10, [x29, #-148]
   1fad4:	cmp	w8, w10
   1fad8:	b.cs	2148c <lzma_mode_is_supported@@XZ_5.0+0x6f24>  // b.hs, b.nlast
   1fadc:	ldur	w8, [x29, #-148]
   1fae0:	stur	w8, [x29, #-136]
   1fae4:	ldur	x9, [x29, #-56]
   1fae8:	add	x9, x9, #0x6, lsl #12
   1faec:	ldur	w8, [x29, #-152]
   1faf0:	mov	w10, w8
   1faf4:	mov	x11, #0x20                  	// #32
   1faf8:	mul	x10, x11, x10
   1fafc:	add	x9, x9, x10
   1fb00:	ldr	w8, [sp, #108]
   1fb04:	mov	w10, w8
   1fb08:	mov	x12, #0x2                   	// #2
   1fb0c:	ldrh	w8, [x9, x10, lsl #1]
   1fb10:	mov	w13, #0x800                 	// #2048
   1fb14:	subs	w8, w13, w8
   1fb18:	ldur	x9, [x29, #-56]
   1fb1c:	add	x9, x9, #0x6, lsl #12
   1fb20:	ldur	w13, [x29, #-152]
   1fb24:	mov	w10, w13
   1fb28:	mul	x10, x11, x10
   1fb2c:	add	x9, x9, x10
   1fb30:	ldr	w13, [sp, #108]
   1fb34:	mov	w10, w13
   1fb38:	mul	x10, x12, x10
   1fb3c:	add	x9, x9, x10
   1fb40:	ldrh	w13, [x9]
   1fb44:	add	w8, w13, w8, lsr #5
   1fb48:	strh	w8, [x9]
   1fb4c:	ldur	x8, [x29, #-56]
   1fb50:	sub	x0, x29, #0x70
   1fb54:	ldur	x9, [x29, #-104]
   1fb58:	ldr	w10, [sp, #116]
   1fb5c:	mov	w11, w10
   1fb60:	and	x9, x9, x11
   1fb64:	ldr	w10, [sp, #112]
   1fb68:	mov	w11, w10
   1fb6c:	lsl	x9, x9, x11
   1fb70:	mov	w10, wzr
   1fb74:	mov	w1, w10
   1fb78:	str	x8, [sp, #56]
   1fb7c:	str	x9, [sp, #48]
   1fb80:	bl	27818 <lzma_mode_is_supported@@XZ_5.0+0xd2b0>
   1fb84:	and	w10, w0, #0xff
   1fb88:	ldr	w12, [sp, #112]
   1fb8c:	mov	w13, #0x8                   	// #8
   1fb90:	subs	w12, w13, w12
   1fb94:	asr	w10, w10, w12
   1fb98:	ldr	x8, [sp, #48]
   1fb9c:	add	x9, x8, w10, sxtw
   1fba0:	mov	x11, #0x600                 	// #1536
   1fba4:	mul	x9, x11, x9
   1fba8:	ldr	x11, [sp, #56]
   1fbac:	add	x9, x11, x9
   1fbb0:	str	x9, [sp, #136]
   1fbb4:	mov	w10, #0x1                   	// #1
   1fbb8:	str	w10, [sp, #132]
   1fbbc:	ldur	w10, [x29, #-152]
   1fbc0:	cmp	w10, #0x7
   1fbc4:	b.cs	206ac <lzma_mode_is_supported@@XZ_5.0+0x6144>  // b.hs, b.nlast
   1fbc8:	ldur	w8, [x29, #-136]
   1fbcc:	mov	w9, #0x1000000             	// #16777216
   1fbd0:	cmp	w8, w9
   1fbd4:	b.cs	1fc3c <lzma_mode_is_supported@@XZ_5.0+0x56d4>  // b.hs, b.nlast
   1fbd8:	ldur	x8, [x29, #-144]
   1fbdc:	ldur	x9, [x29, #-48]
   1fbe0:	cmp	x8, x9
   1fbe4:	cset	w10, eq  // eq = none
   1fbe8:	and	w10, w10, #0x1
   1fbec:	mov	w0, w10
   1fbf0:	sxtw	x8, w0
   1fbf4:	cbz	x8, 1fc10 <lzma_mode_is_supported@@XZ_5.0+0x56a8>
   1fbf8:	ldur	x8, [x29, #-56]
   1fbfc:	mov	x9, #0x6ea0                	// #28320
   1fc00:	add	x8, x8, x9
   1fc04:	mov	w10, #0x2                   	// #2
   1fc08:	str	w10, [x8]
   1fc0c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   1fc10:	ldur	w8, [x29, #-136]
   1fc14:	lsl	w8, w8, #8
   1fc18:	stur	w8, [x29, #-136]
   1fc1c:	ldur	w8, [x29, #-132]
   1fc20:	ldur	x9, [x29, #-32]
   1fc24:	ldur	x10, [x29, #-144]
   1fc28:	add	x11, x10, #0x1
   1fc2c:	stur	x11, [x29, #-144]
   1fc30:	ldrb	w12, [x9, x10]
   1fc34:	orr	w8, w12, w8, lsl #8
   1fc38:	stur	w8, [x29, #-132]
   1fc3c:	ldur	w8, [x29, #-136]
   1fc40:	lsr	w8, w8, #11
   1fc44:	ldr	x9, [sp, #136]
   1fc48:	ldr	w10, [sp, #132]
   1fc4c:	mov	w11, w10
   1fc50:	ldrh	w10, [x9, x11, lsl #1]
   1fc54:	mul	w8, w8, w10
   1fc58:	stur	w8, [x29, #-148]
   1fc5c:	ldur	w8, [x29, #-132]
   1fc60:	ldur	w10, [x29, #-148]
   1fc64:	cmp	w8, w10
   1fc68:	b.cs	1fcc0 <lzma_mode_is_supported@@XZ_5.0+0x5758>  // b.hs, b.nlast
   1fc6c:	ldur	w8, [x29, #-148]
   1fc70:	stur	w8, [x29, #-136]
   1fc74:	ldr	x9, [sp, #136]
   1fc78:	ldr	w8, [sp, #132]
   1fc7c:	mov	w10, w8
   1fc80:	mov	x11, #0x2                   	// #2
   1fc84:	ldrh	w8, [x9, x10, lsl #1]
   1fc88:	mov	w12, #0x800                 	// #2048
   1fc8c:	subs	w8, w12, w8
   1fc90:	ldr	x9, [sp, #136]
   1fc94:	ldr	w12, [sp, #132]
   1fc98:	mov	w10, w12
   1fc9c:	mul	x10, x11, x10
   1fca0:	add	x9, x9, x10
   1fca4:	ldrh	w12, [x9]
   1fca8:	add	w8, w12, w8, lsr #5
   1fcac:	strh	w8, [x9]
   1fcb0:	ldr	w8, [sp, #132]
   1fcb4:	lsl	w8, w8, #1
   1fcb8:	str	w8, [sp, #132]
   1fcbc:	b	1fd24 <lzma_mode_is_supported@@XZ_5.0+0x57bc>
   1fcc0:	ldur	w8, [x29, #-148]
   1fcc4:	ldur	w9, [x29, #-136]
   1fcc8:	subs	w8, w9, w8
   1fccc:	stur	w8, [x29, #-136]
   1fcd0:	ldur	w8, [x29, #-148]
   1fcd4:	ldur	w9, [x29, #-132]
   1fcd8:	subs	w8, w9, w8
   1fcdc:	stur	w8, [x29, #-132]
   1fce0:	ldr	x10, [sp, #136]
   1fce4:	ldr	w8, [sp, #132]
   1fce8:	mov	w11, w8
   1fcec:	mov	x12, #0x2                   	// #2
   1fcf0:	ldrh	w8, [x10, x11, lsl #1]
   1fcf4:	ldr	x10, [sp, #136]
   1fcf8:	ldr	w9, [sp, #132]
   1fcfc:	mov	w11, w9
   1fd00:	mul	x11, x12, x11
   1fd04:	add	x10, x10, x11
   1fd08:	ldrh	w9, [x10]
   1fd0c:	subs	w8, w9, w8, asr #5
   1fd10:	strh	w8, [x10]
   1fd14:	ldr	w8, [sp, #132]
   1fd18:	lsl	w8, w8, #1
   1fd1c:	add	w8, w8, #0x1
   1fd20:	str	w8, [sp, #132]
   1fd24:	ldur	w8, [x29, #-136]
   1fd28:	mov	w9, #0x1000000             	// #16777216
   1fd2c:	cmp	w8, w9
   1fd30:	b.cs	1fd98 <lzma_mode_is_supported@@XZ_5.0+0x5830>  // b.hs, b.nlast
   1fd34:	ldur	x8, [x29, #-144]
   1fd38:	ldur	x9, [x29, #-48]
   1fd3c:	cmp	x8, x9
   1fd40:	cset	w10, eq  // eq = none
   1fd44:	and	w10, w10, #0x1
   1fd48:	mov	w0, w10
   1fd4c:	sxtw	x8, w0
   1fd50:	cbz	x8, 1fd6c <lzma_mode_is_supported@@XZ_5.0+0x5804>
   1fd54:	ldur	x8, [x29, #-56]
   1fd58:	mov	x9, #0x6ea0                	// #28320
   1fd5c:	add	x8, x8, x9
   1fd60:	mov	w10, #0x3                   	// #3
   1fd64:	str	w10, [x8]
   1fd68:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   1fd6c:	ldur	w8, [x29, #-136]
   1fd70:	lsl	w8, w8, #8
   1fd74:	stur	w8, [x29, #-136]
   1fd78:	ldur	w8, [x29, #-132]
   1fd7c:	ldur	x9, [x29, #-32]
   1fd80:	ldur	x10, [x29, #-144]
   1fd84:	add	x11, x10, #0x1
   1fd88:	stur	x11, [x29, #-144]
   1fd8c:	ldrb	w12, [x9, x10]
   1fd90:	orr	w8, w12, w8, lsl #8
   1fd94:	stur	w8, [x29, #-132]
   1fd98:	ldur	w8, [x29, #-136]
   1fd9c:	lsr	w8, w8, #11
   1fda0:	ldr	x9, [sp, #136]
   1fda4:	ldr	w10, [sp, #132]
   1fda8:	mov	w11, w10
   1fdac:	ldrh	w10, [x9, x11, lsl #1]
   1fdb0:	mul	w8, w8, w10
   1fdb4:	stur	w8, [x29, #-148]
   1fdb8:	ldur	w8, [x29, #-132]
   1fdbc:	ldur	w10, [x29, #-148]
   1fdc0:	cmp	w8, w10
   1fdc4:	b.cs	1fe1c <lzma_mode_is_supported@@XZ_5.0+0x58b4>  // b.hs, b.nlast
   1fdc8:	ldur	w8, [x29, #-148]
   1fdcc:	stur	w8, [x29, #-136]
   1fdd0:	ldr	x9, [sp, #136]
   1fdd4:	ldr	w8, [sp, #132]
   1fdd8:	mov	w10, w8
   1fddc:	mov	x11, #0x2                   	// #2
   1fde0:	ldrh	w8, [x9, x10, lsl #1]
   1fde4:	mov	w12, #0x800                 	// #2048
   1fde8:	subs	w8, w12, w8
   1fdec:	ldr	x9, [sp, #136]
   1fdf0:	ldr	w12, [sp, #132]
   1fdf4:	mov	w10, w12
   1fdf8:	mul	x10, x11, x10
   1fdfc:	add	x9, x9, x10
   1fe00:	ldrh	w12, [x9]
   1fe04:	add	w8, w12, w8, lsr #5
   1fe08:	strh	w8, [x9]
   1fe0c:	ldr	w8, [sp, #132]
   1fe10:	lsl	w8, w8, #1
   1fe14:	str	w8, [sp, #132]
   1fe18:	b	1fe80 <lzma_mode_is_supported@@XZ_5.0+0x5918>
   1fe1c:	ldur	w8, [x29, #-148]
   1fe20:	ldur	w9, [x29, #-136]
   1fe24:	subs	w8, w9, w8
   1fe28:	stur	w8, [x29, #-136]
   1fe2c:	ldur	w8, [x29, #-148]
   1fe30:	ldur	w9, [x29, #-132]
   1fe34:	subs	w8, w9, w8
   1fe38:	stur	w8, [x29, #-132]
   1fe3c:	ldr	x10, [sp, #136]
   1fe40:	ldr	w8, [sp, #132]
   1fe44:	mov	w11, w8
   1fe48:	mov	x12, #0x2                   	// #2
   1fe4c:	ldrh	w8, [x10, x11, lsl #1]
   1fe50:	ldr	x10, [sp, #136]
   1fe54:	ldr	w9, [sp, #132]
   1fe58:	mov	w11, w9
   1fe5c:	mul	x11, x12, x11
   1fe60:	add	x10, x10, x11
   1fe64:	ldrh	w9, [x10]
   1fe68:	subs	w8, w9, w8, asr #5
   1fe6c:	strh	w8, [x10]
   1fe70:	ldr	w8, [sp, #132]
   1fe74:	lsl	w8, w8, #1
   1fe78:	add	w8, w8, #0x1
   1fe7c:	str	w8, [sp, #132]
   1fe80:	ldur	w8, [x29, #-136]
   1fe84:	mov	w9, #0x1000000             	// #16777216
   1fe88:	cmp	w8, w9
   1fe8c:	b.cs	1fef4 <lzma_mode_is_supported@@XZ_5.0+0x598c>  // b.hs, b.nlast
   1fe90:	ldur	x8, [x29, #-144]
   1fe94:	ldur	x9, [x29, #-48]
   1fe98:	cmp	x8, x9
   1fe9c:	cset	w10, eq  // eq = none
   1fea0:	and	w10, w10, #0x1
   1fea4:	mov	w0, w10
   1fea8:	sxtw	x8, w0
   1feac:	cbz	x8, 1fec8 <lzma_mode_is_supported@@XZ_5.0+0x5960>
   1feb0:	ldur	x8, [x29, #-56]
   1feb4:	mov	x9, #0x6ea0                	// #28320
   1feb8:	add	x8, x8, x9
   1febc:	mov	w10, #0x4                   	// #4
   1fec0:	str	w10, [x8]
   1fec4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   1fec8:	ldur	w8, [x29, #-136]
   1fecc:	lsl	w8, w8, #8
   1fed0:	stur	w8, [x29, #-136]
   1fed4:	ldur	w8, [x29, #-132]
   1fed8:	ldur	x9, [x29, #-32]
   1fedc:	ldur	x10, [x29, #-144]
   1fee0:	add	x11, x10, #0x1
   1fee4:	stur	x11, [x29, #-144]
   1fee8:	ldrb	w12, [x9, x10]
   1feec:	orr	w8, w12, w8, lsl #8
   1fef0:	stur	w8, [x29, #-132]
   1fef4:	ldur	w8, [x29, #-136]
   1fef8:	lsr	w8, w8, #11
   1fefc:	ldr	x9, [sp, #136]
   1ff00:	ldr	w10, [sp, #132]
   1ff04:	mov	w11, w10
   1ff08:	ldrh	w10, [x9, x11, lsl #1]
   1ff0c:	mul	w8, w8, w10
   1ff10:	stur	w8, [x29, #-148]
   1ff14:	ldur	w8, [x29, #-132]
   1ff18:	ldur	w10, [x29, #-148]
   1ff1c:	cmp	w8, w10
   1ff20:	b.cs	1ff78 <lzma_mode_is_supported@@XZ_5.0+0x5a10>  // b.hs, b.nlast
   1ff24:	ldur	w8, [x29, #-148]
   1ff28:	stur	w8, [x29, #-136]
   1ff2c:	ldr	x9, [sp, #136]
   1ff30:	ldr	w8, [sp, #132]
   1ff34:	mov	w10, w8
   1ff38:	mov	x11, #0x2                   	// #2
   1ff3c:	ldrh	w8, [x9, x10, lsl #1]
   1ff40:	mov	w12, #0x800                 	// #2048
   1ff44:	subs	w8, w12, w8
   1ff48:	ldr	x9, [sp, #136]
   1ff4c:	ldr	w12, [sp, #132]
   1ff50:	mov	w10, w12
   1ff54:	mul	x10, x11, x10
   1ff58:	add	x9, x9, x10
   1ff5c:	ldrh	w12, [x9]
   1ff60:	add	w8, w12, w8, lsr #5
   1ff64:	strh	w8, [x9]
   1ff68:	ldr	w8, [sp, #132]
   1ff6c:	lsl	w8, w8, #1
   1ff70:	str	w8, [sp, #132]
   1ff74:	b	1ffdc <lzma_mode_is_supported@@XZ_5.0+0x5a74>
   1ff78:	ldur	w8, [x29, #-148]
   1ff7c:	ldur	w9, [x29, #-136]
   1ff80:	subs	w8, w9, w8
   1ff84:	stur	w8, [x29, #-136]
   1ff88:	ldur	w8, [x29, #-148]
   1ff8c:	ldur	w9, [x29, #-132]
   1ff90:	subs	w8, w9, w8
   1ff94:	stur	w8, [x29, #-132]
   1ff98:	ldr	x10, [sp, #136]
   1ff9c:	ldr	w8, [sp, #132]
   1ffa0:	mov	w11, w8
   1ffa4:	mov	x12, #0x2                   	// #2
   1ffa8:	ldrh	w8, [x10, x11, lsl #1]
   1ffac:	ldr	x10, [sp, #136]
   1ffb0:	ldr	w9, [sp, #132]
   1ffb4:	mov	w11, w9
   1ffb8:	mul	x11, x12, x11
   1ffbc:	add	x10, x10, x11
   1ffc0:	ldrh	w9, [x10]
   1ffc4:	subs	w8, w9, w8, asr #5
   1ffc8:	strh	w8, [x10]
   1ffcc:	ldr	w8, [sp, #132]
   1ffd0:	lsl	w8, w8, #1
   1ffd4:	add	w8, w8, #0x1
   1ffd8:	str	w8, [sp, #132]
   1ffdc:	ldur	w8, [x29, #-136]
   1ffe0:	mov	w9, #0x1000000             	// #16777216
   1ffe4:	cmp	w8, w9
   1ffe8:	b.cs	20050 <lzma_mode_is_supported@@XZ_5.0+0x5ae8>  // b.hs, b.nlast
   1ffec:	ldur	x8, [x29, #-144]
   1fff0:	ldur	x9, [x29, #-48]
   1fff4:	cmp	x8, x9
   1fff8:	cset	w10, eq  // eq = none
   1fffc:	and	w10, w10, #0x1
   20000:	mov	w0, w10
   20004:	sxtw	x8, w0
   20008:	cbz	x8, 20024 <lzma_mode_is_supported@@XZ_5.0+0x5abc>
   2000c:	ldur	x8, [x29, #-56]
   20010:	mov	x9, #0x6ea0                	// #28320
   20014:	add	x8, x8, x9
   20018:	mov	w10, #0x5                   	// #5
   2001c:	str	w10, [x8]
   20020:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20024:	ldur	w8, [x29, #-136]
   20028:	lsl	w8, w8, #8
   2002c:	stur	w8, [x29, #-136]
   20030:	ldur	w8, [x29, #-132]
   20034:	ldur	x9, [x29, #-32]
   20038:	ldur	x10, [x29, #-144]
   2003c:	add	x11, x10, #0x1
   20040:	stur	x11, [x29, #-144]
   20044:	ldrb	w12, [x9, x10]
   20048:	orr	w8, w12, w8, lsl #8
   2004c:	stur	w8, [x29, #-132]
   20050:	ldur	w8, [x29, #-136]
   20054:	lsr	w8, w8, #11
   20058:	ldr	x9, [sp, #136]
   2005c:	ldr	w10, [sp, #132]
   20060:	mov	w11, w10
   20064:	ldrh	w10, [x9, x11, lsl #1]
   20068:	mul	w8, w8, w10
   2006c:	stur	w8, [x29, #-148]
   20070:	ldur	w8, [x29, #-132]
   20074:	ldur	w10, [x29, #-148]
   20078:	cmp	w8, w10
   2007c:	b.cs	200d4 <lzma_mode_is_supported@@XZ_5.0+0x5b6c>  // b.hs, b.nlast
   20080:	ldur	w8, [x29, #-148]
   20084:	stur	w8, [x29, #-136]
   20088:	ldr	x9, [sp, #136]
   2008c:	ldr	w8, [sp, #132]
   20090:	mov	w10, w8
   20094:	mov	x11, #0x2                   	// #2
   20098:	ldrh	w8, [x9, x10, lsl #1]
   2009c:	mov	w12, #0x800                 	// #2048
   200a0:	subs	w8, w12, w8
   200a4:	ldr	x9, [sp, #136]
   200a8:	ldr	w12, [sp, #132]
   200ac:	mov	w10, w12
   200b0:	mul	x10, x11, x10
   200b4:	add	x9, x9, x10
   200b8:	ldrh	w12, [x9]
   200bc:	add	w8, w12, w8, lsr #5
   200c0:	strh	w8, [x9]
   200c4:	ldr	w8, [sp, #132]
   200c8:	lsl	w8, w8, #1
   200cc:	str	w8, [sp, #132]
   200d0:	b	20138 <lzma_mode_is_supported@@XZ_5.0+0x5bd0>
   200d4:	ldur	w8, [x29, #-148]
   200d8:	ldur	w9, [x29, #-136]
   200dc:	subs	w8, w9, w8
   200e0:	stur	w8, [x29, #-136]
   200e4:	ldur	w8, [x29, #-148]
   200e8:	ldur	w9, [x29, #-132]
   200ec:	subs	w8, w9, w8
   200f0:	stur	w8, [x29, #-132]
   200f4:	ldr	x10, [sp, #136]
   200f8:	ldr	w8, [sp, #132]
   200fc:	mov	w11, w8
   20100:	mov	x12, #0x2                   	// #2
   20104:	ldrh	w8, [x10, x11, lsl #1]
   20108:	ldr	x10, [sp, #136]
   2010c:	ldr	w9, [sp, #132]
   20110:	mov	w11, w9
   20114:	mul	x11, x12, x11
   20118:	add	x10, x10, x11
   2011c:	ldrh	w9, [x10]
   20120:	subs	w8, w9, w8, asr #5
   20124:	strh	w8, [x10]
   20128:	ldr	w8, [sp, #132]
   2012c:	lsl	w8, w8, #1
   20130:	add	w8, w8, #0x1
   20134:	str	w8, [sp, #132]
   20138:	ldur	w8, [x29, #-136]
   2013c:	mov	w9, #0x1000000             	// #16777216
   20140:	cmp	w8, w9
   20144:	b.cs	201ac <lzma_mode_is_supported@@XZ_5.0+0x5c44>  // b.hs, b.nlast
   20148:	ldur	x8, [x29, #-144]
   2014c:	ldur	x9, [x29, #-48]
   20150:	cmp	x8, x9
   20154:	cset	w10, eq  // eq = none
   20158:	and	w10, w10, #0x1
   2015c:	mov	w0, w10
   20160:	sxtw	x8, w0
   20164:	cbz	x8, 20180 <lzma_mode_is_supported@@XZ_5.0+0x5c18>
   20168:	ldur	x8, [x29, #-56]
   2016c:	mov	x9, #0x6ea0                	// #28320
   20170:	add	x8, x8, x9
   20174:	mov	w10, #0x6                   	// #6
   20178:	str	w10, [x8]
   2017c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20180:	ldur	w8, [x29, #-136]
   20184:	lsl	w8, w8, #8
   20188:	stur	w8, [x29, #-136]
   2018c:	ldur	w8, [x29, #-132]
   20190:	ldur	x9, [x29, #-32]
   20194:	ldur	x10, [x29, #-144]
   20198:	add	x11, x10, #0x1
   2019c:	stur	x11, [x29, #-144]
   201a0:	ldrb	w12, [x9, x10]
   201a4:	orr	w8, w12, w8, lsl #8
   201a8:	stur	w8, [x29, #-132]
   201ac:	ldur	w8, [x29, #-136]
   201b0:	lsr	w8, w8, #11
   201b4:	ldr	x9, [sp, #136]
   201b8:	ldr	w10, [sp, #132]
   201bc:	mov	w11, w10
   201c0:	ldrh	w10, [x9, x11, lsl #1]
   201c4:	mul	w8, w8, w10
   201c8:	stur	w8, [x29, #-148]
   201cc:	ldur	w8, [x29, #-132]
   201d0:	ldur	w10, [x29, #-148]
   201d4:	cmp	w8, w10
   201d8:	b.cs	20230 <lzma_mode_is_supported@@XZ_5.0+0x5cc8>  // b.hs, b.nlast
   201dc:	ldur	w8, [x29, #-148]
   201e0:	stur	w8, [x29, #-136]
   201e4:	ldr	x9, [sp, #136]
   201e8:	ldr	w8, [sp, #132]
   201ec:	mov	w10, w8
   201f0:	mov	x11, #0x2                   	// #2
   201f4:	ldrh	w8, [x9, x10, lsl #1]
   201f8:	mov	w12, #0x800                 	// #2048
   201fc:	subs	w8, w12, w8
   20200:	ldr	x9, [sp, #136]
   20204:	ldr	w12, [sp, #132]
   20208:	mov	w10, w12
   2020c:	mul	x10, x11, x10
   20210:	add	x9, x9, x10
   20214:	ldrh	w12, [x9]
   20218:	add	w8, w12, w8, lsr #5
   2021c:	strh	w8, [x9]
   20220:	ldr	w8, [sp, #132]
   20224:	lsl	w8, w8, #1
   20228:	str	w8, [sp, #132]
   2022c:	b	20294 <lzma_mode_is_supported@@XZ_5.0+0x5d2c>
   20230:	ldur	w8, [x29, #-148]
   20234:	ldur	w9, [x29, #-136]
   20238:	subs	w8, w9, w8
   2023c:	stur	w8, [x29, #-136]
   20240:	ldur	w8, [x29, #-148]
   20244:	ldur	w9, [x29, #-132]
   20248:	subs	w8, w9, w8
   2024c:	stur	w8, [x29, #-132]
   20250:	ldr	x10, [sp, #136]
   20254:	ldr	w8, [sp, #132]
   20258:	mov	w11, w8
   2025c:	mov	x12, #0x2                   	// #2
   20260:	ldrh	w8, [x10, x11, lsl #1]
   20264:	ldr	x10, [sp, #136]
   20268:	ldr	w9, [sp, #132]
   2026c:	mov	w11, w9
   20270:	mul	x11, x12, x11
   20274:	add	x10, x10, x11
   20278:	ldrh	w9, [x10]
   2027c:	subs	w8, w9, w8, asr #5
   20280:	strh	w8, [x10]
   20284:	ldr	w8, [sp, #132]
   20288:	lsl	w8, w8, #1
   2028c:	add	w8, w8, #0x1
   20290:	str	w8, [sp, #132]
   20294:	ldur	w8, [x29, #-136]
   20298:	mov	w9, #0x1000000             	// #16777216
   2029c:	cmp	w8, w9
   202a0:	b.cs	20308 <lzma_mode_is_supported@@XZ_5.0+0x5da0>  // b.hs, b.nlast
   202a4:	ldur	x8, [x29, #-144]
   202a8:	ldur	x9, [x29, #-48]
   202ac:	cmp	x8, x9
   202b0:	cset	w10, eq  // eq = none
   202b4:	and	w10, w10, #0x1
   202b8:	mov	w0, w10
   202bc:	sxtw	x8, w0
   202c0:	cbz	x8, 202dc <lzma_mode_is_supported@@XZ_5.0+0x5d74>
   202c4:	ldur	x8, [x29, #-56]
   202c8:	mov	x9, #0x6ea0                	// #28320
   202cc:	add	x8, x8, x9
   202d0:	mov	w10, #0x7                   	// #7
   202d4:	str	w10, [x8]
   202d8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   202dc:	ldur	w8, [x29, #-136]
   202e0:	lsl	w8, w8, #8
   202e4:	stur	w8, [x29, #-136]
   202e8:	ldur	w8, [x29, #-132]
   202ec:	ldur	x9, [x29, #-32]
   202f0:	ldur	x10, [x29, #-144]
   202f4:	add	x11, x10, #0x1
   202f8:	stur	x11, [x29, #-144]
   202fc:	ldrb	w12, [x9, x10]
   20300:	orr	w8, w12, w8, lsl #8
   20304:	stur	w8, [x29, #-132]
   20308:	ldur	w8, [x29, #-136]
   2030c:	lsr	w8, w8, #11
   20310:	ldr	x9, [sp, #136]
   20314:	ldr	w10, [sp, #132]
   20318:	mov	w11, w10
   2031c:	ldrh	w10, [x9, x11, lsl #1]
   20320:	mul	w8, w8, w10
   20324:	stur	w8, [x29, #-148]
   20328:	ldur	w8, [x29, #-132]
   2032c:	ldur	w10, [x29, #-148]
   20330:	cmp	w8, w10
   20334:	b.cs	2038c <lzma_mode_is_supported@@XZ_5.0+0x5e24>  // b.hs, b.nlast
   20338:	ldur	w8, [x29, #-148]
   2033c:	stur	w8, [x29, #-136]
   20340:	ldr	x9, [sp, #136]
   20344:	ldr	w8, [sp, #132]
   20348:	mov	w10, w8
   2034c:	mov	x11, #0x2                   	// #2
   20350:	ldrh	w8, [x9, x10, lsl #1]
   20354:	mov	w12, #0x800                 	// #2048
   20358:	subs	w8, w12, w8
   2035c:	ldr	x9, [sp, #136]
   20360:	ldr	w12, [sp, #132]
   20364:	mov	w10, w12
   20368:	mul	x10, x11, x10
   2036c:	add	x9, x9, x10
   20370:	ldrh	w12, [x9]
   20374:	add	w8, w12, w8, lsr #5
   20378:	strh	w8, [x9]
   2037c:	ldr	w8, [sp, #132]
   20380:	lsl	w8, w8, #1
   20384:	str	w8, [sp, #132]
   20388:	b	203f0 <lzma_mode_is_supported@@XZ_5.0+0x5e88>
   2038c:	ldur	w8, [x29, #-148]
   20390:	ldur	w9, [x29, #-136]
   20394:	subs	w8, w9, w8
   20398:	stur	w8, [x29, #-136]
   2039c:	ldur	w8, [x29, #-148]
   203a0:	ldur	w9, [x29, #-132]
   203a4:	subs	w8, w9, w8
   203a8:	stur	w8, [x29, #-132]
   203ac:	ldr	x10, [sp, #136]
   203b0:	ldr	w8, [sp, #132]
   203b4:	mov	w11, w8
   203b8:	mov	x12, #0x2                   	// #2
   203bc:	ldrh	w8, [x10, x11, lsl #1]
   203c0:	ldr	x10, [sp, #136]
   203c4:	ldr	w9, [sp, #132]
   203c8:	mov	w11, w9
   203cc:	mul	x11, x12, x11
   203d0:	add	x10, x10, x11
   203d4:	ldrh	w9, [x10]
   203d8:	subs	w8, w9, w8, asr #5
   203dc:	strh	w8, [x10]
   203e0:	ldr	w8, [sp, #132]
   203e4:	lsl	w8, w8, #1
   203e8:	add	w8, w8, #0x1
   203ec:	str	w8, [sp, #132]
   203f0:	ldur	w8, [x29, #-136]
   203f4:	mov	w9, #0x1000000             	// #16777216
   203f8:	cmp	w8, w9
   203fc:	b.cs	20464 <lzma_mode_is_supported@@XZ_5.0+0x5efc>  // b.hs, b.nlast
   20400:	ldur	x8, [x29, #-144]
   20404:	ldur	x9, [x29, #-48]
   20408:	cmp	x8, x9
   2040c:	cset	w10, eq  // eq = none
   20410:	and	w10, w10, #0x1
   20414:	mov	w0, w10
   20418:	sxtw	x8, w0
   2041c:	cbz	x8, 20438 <lzma_mode_is_supported@@XZ_5.0+0x5ed0>
   20420:	ldur	x8, [x29, #-56]
   20424:	mov	x9, #0x6ea0                	// #28320
   20428:	add	x8, x8, x9
   2042c:	mov	w10, #0x8                   	// #8
   20430:	str	w10, [x8]
   20434:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20438:	ldur	w8, [x29, #-136]
   2043c:	lsl	w8, w8, #8
   20440:	stur	w8, [x29, #-136]
   20444:	ldur	w8, [x29, #-132]
   20448:	ldur	x9, [x29, #-32]
   2044c:	ldur	x10, [x29, #-144]
   20450:	add	x11, x10, #0x1
   20454:	stur	x11, [x29, #-144]
   20458:	ldrb	w12, [x9, x10]
   2045c:	orr	w8, w12, w8, lsl #8
   20460:	stur	w8, [x29, #-132]
   20464:	ldur	w8, [x29, #-136]
   20468:	lsr	w8, w8, #11
   2046c:	ldr	x9, [sp, #136]
   20470:	ldr	w10, [sp, #132]
   20474:	mov	w11, w10
   20478:	ldrh	w10, [x9, x11, lsl #1]
   2047c:	mul	w8, w8, w10
   20480:	stur	w8, [x29, #-148]
   20484:	ldur	w8, [x29, #-132]
   20488:	ldur	w10, [x29, #-148]
   2048c:	cmp	w8, w10
   20490:	b.cs	204e8 <lzma_mode_is_supported@@XZ_5.0+0x5f80>  // b.hs, b.nlast
   20494:	ldur	w8, [x29, #-148]
   20498:	stur	w8, [x29, #-136]
   2049c:	ldr	x9, [sp, #136]
   204a0:	ldr	w8, [sp, #132]
   204a4:	mov	w10, w8
   204a8:	mov	x11, #0x2                   	// #2
   204ac:	ldrh	w8, [x9, x10, lsl #1]
   204b0:	mov	w12, #0x800                 	// #2048
   204b4:	subs	w8, w12, w8
   204b8:	ldr	x9, [sp, #136]
   204bc:	ldr	w12, [sp, #132]
   204c0:	mov	w10, w12
   204c4:	mul	x10, x11, x10
   204c8:	add	x9, x9, x10
   204cc:	ldrh	w12, [x9]
   204d0:	add	w8, w12, w8, lsr #5
   204d4:	strh	w8, [x9]
   204d8:	ldr	w8, [sp, #132]
   204dc:	lsl	w8, w8, #1
   204e0:	str	w8, [sp, #132]
   204e4:	b	2054c <lzma_mode_is_supported@@XZ_5.0+0x5fe4>
   204e8:	ldur	w8, [x29, #-148]
   204ec:	ldur	w9, [x29, #-136]
   204f0:	subs	w8, w9, w8
   204f4:	stur	w8, [x29, #-136]
   204f8:	ldur	w8, [x29, #-148]
   204fc:	ldur	w9, [x29, #-132]
   20500:	subs	w8, w9, w8
   20504:	stur	w8, [x29, #-132]
   20508:	ldr	x10, [sp, #136]
   2050c:	ldr	w8, [sp, #132]
   20510:	mov	w11, w8
   20514:	mov	x12, #0x2                   	// #2
   20518:	ldrh	w8, [x10, x11, lsl #1]
   2051c:	ldr	x10, [sp, #136]
   20520:	ldr	w9, [sp, #132]
   20524:	mov	w11, w9
   20528:	mul	x11, x12, x11
   2052c:	add	x10, x10, x11
   20530:	ldrh	w9, [x10]
   20534:	subs	w8, w9, w8, asr #5
   20538:	strh	w8, [x10]
   2053c:	ldr	w8, [sp, #132]
   20540:	lsl	w8, w8, #1
   20544:	add	w8, w8, #0x1
   20548:	str	w8, [sp, #132]
   2054c:	ldur	w8, [x29, #-136]
   20550:	mov	w9, #0x1000000             	// #16777216
   20554:	cmp	w8, w9
   20558:	b.cs	205c0 <lzma_mode_is_supported@@XZ_5.0+0x6058>  // b.hs, b.nlast
   2055c:	ldur	x8, [x29, #-144]
   20560:	ldur	x9, [x29, #-48]
   20564:	cmp	x8, x9
   20568:	cset	w10, eq  // eq = none
   2056c:	and	w10, w10, #0x1
   20570:	mov	w0, w10
   20574:	sxtw	x8, w0
   20578:	cbz	x8, 20594 <lzma_mode_is_supported@@XZ_5.0+0x602c>
   2057c:	ldur	x8, [x29, #-56]
   20580:	mov	x9, #0x6ea0                	// #28320
   20584:	add	x8, x8, x9
   20588:	mov	w10, #0x9                   	// #9
   2058c:	str	w10, [x8]
   20590:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20594:	ldur	w8, [x29, #-136]
   20598:	lsl	w8, w8, #8
   2059c:	stur	w8, [x29, #-136]
   205a0:	ldur	w8, [x29, #-132]
   205a4:	ldur	x9, [x29, #-32]
   205a8:	ldur	x10, [x29, #-144]
   205ac:	add	x11, x10, #0x1
   205b0:	stur	x11, [x29, #-144]
   205b4:	ldrb	w12, [x9, x10]
   205b8:	orr	w8, w12, w8, lsl #8
   205bc:	stur	w8, [x29, #-132]
   205c0:	ldur	w8, [x29, #-136]
   205c4:	lsr	w8, w8, #11
   205c8:	ldr	x9, [sp, #136]
   205cc:	ldr	w10, [sp, #132]
   205d0:	mov	w11, w10
   205d4:	ldrh	w10, [x9, x11, lsl #1]
   205d8:	mul	w8, w8, w10
   205dc:	stur	w8, [x29, #-148]
   205e0:	ldur	w8, [x29, #-132]
   205e4:	ldur	w10, [x29, #-148]
   205e8:	cmp	w8, w10
   205ec:	b.cs	20644 <lzma_mode_is_supported@@XZ_5.0+0x60dc>  // b.hs, b.nlast
   205f0:	ldur	w8, [x29, #-148]
   205f4:	stur	w8, [x29, #-136]
   205f8:	ldr	x9, [sp, #136]
   205fc:	ldr	w8, [sp, #132]
   20600:	mov	w10, w8
   20604:	mov	x11, #0x2                   	// #2
   20608:	ldrh	w8, [x9, x10, lsl #1]
   2060c:	mov	w12, #0x800                 	// #2048
   20610:	subs	w8, w12, w8
   20614:	ldr	x9, [sp, #136]
   20618:	ldr	w12, [sp, #132]
   2061c:	mov	w10, w12
   20620:	mul	x10, x11, x10
   20624:	add	x9, x9, x10
   20628:	ldrh	w12, [x9]
   2062c:	add	w8, w12, w8, lsr #5
   20630:	strh	w8, [x9]
   20634:	ldr	w8, [sp, #132]
   20638:	lsl	w8, w8, #1
   2063c:	str	w8, [sp, #132]
   20640:	b	206a8 <lzma_mode_is_supported@@XZ_5.0+0x6140>
   20644:	ldur	w8, [x29, #-148]
   20648:	ldur	w9, [x29, #-136]
   2064c:	subs	w8, w9, w8
   20650:	stur	w8, [x29, #-136]
   20654:	ldur	w8, [x29, #-148]
   20658:	ldur	w9, [x29, #-132]
   2065c:	subs	w8, w9, w8
   20660:	stur	w8, [x29, #-132]
   20664:	ldr	x10, [sp, #136]
   20668:	ldr	w8, [sp, #132]
   2066c:	mov	w11, w8
   20670:	mov	x12, #0x2                   	// #2
   20674:	ldrh	w8, [x10, x11, lsl #1]
   20678:	ldr	x10, [sp, #136]
   2067c:	ldr	w9, [sp, #132]
   20680:	mov	w11, w9
   20684:	mul	x11, x12, x11
   20688:	add	x10, x10, x11
   2068c:	ldrh	w9, [x10]
   20690:	subs	w8, w9, w8, asr #5
   20694:	strh	w8, [x10]
   20698:	ldr	w8, [sp, #132]
   2069c:	lsl	w8, w8, #1
   206a0:	add	w8, w8, #0x1
   206a4:	str	w8, [sp, #132]
   206a8:	b	21440 <lzma_mode_is_supported@@XZ_5.0+0x6ed8>
   206ac:	ldur	w1, [x29, #-156]
   206b0:	sub	x0, x29, #0x70
   206b4:	bl	27818 <lzma_mode_is_supported@@XZ_5.0+0xd2b0>
   206b8:	and	w8, w0, #0xff
   206bc:	lsl	w8, w8, #1
   206c0:	str	w8, [sp, #120]
   206c4:	mov	w8, #0x100                 	// #256
   206c8:	str	w8, [sp, #124]
   206cc:	ldr	w8, [sp, #120]
   206d0:	ldr	w9, [sp, #124]
   206d4:	and	w8, w8, w9
   206d8:	str	w8, [sp, #96]
   206dc:	ldr	w8, [sp, #124]
   206e0:	ldr	w9, [sp, #96]
   206e4:	add	w8, w8, w9
   206e8:	ldr	w9, [sp, #132]
   206ec:	add	w8, w8, w9
   206f0:	str	w8, [sp, #92]
   206f4:	ldur	w8, [x29, #-136]
   206f8:	mov	w9, #0x1000000             	// #16777216
   206fc:	cmp	w8, w9
   20700:	b.cs	20768 <lzma_mode_is_supported@@XZ_5.0+0x6200>  // b.hs, b.nlast
   20704:	ldur	x8, [x29, #-144]
   20708:	ldur	x9, [x29, #-48]
   2070c:	cmp	x8, x9
   20710:	cset	w10, eq  // eq = none
   20714:	and	w10, w10, #0x1
   20718:	mov	w0, w10
   2071c:	sxtw	x8, w0
   20720:	cbz	x8, 2073c <lzma_mode_is_supported@@XZ_5.0+0x61d4>
   20724:	ldur	x8, [x29, #-56]
   20728:	mov	x9, #0x6ea0                	// #28320
   2072c:	add	x8, x8, x9
   20730:	mov	w10, #0xa                   	// #10
   20734:	str	w10, [x8]
   20738:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2073c:	ldur	w8, [x29, #-136]
   20740:	lsl	w8, w8, #8
   20744:	stur	w8, [x29, #-136]
   20748:	ldur	w8, [x29, #-132]
   2074c:	ldur	x9, [x29, #-32]
   20750:	ldur	x10, [x29, #-144]
   20754:	add	x11, x10, #0x1
   20758:	stur	x11, [x29, #-144]
   2075c:	ldrb	w12, [x9, x10]
   20760:	orr	w8, w12, w8, lsl #8
   20764:	stur	w8, [x29, #-132]
   20768:	ldur	w8, [x29, #-136]
   2076c:	lsr	w8, w8, #11
   20770:	ldr	x9, [sp, #136]
   20774:	ldr	w10, [sp, #92]
   20778:	mov	w11, w10
   2077c:	ldrh	w10, [x9, x11, lsl #1]
   20780:	mul	w8, w8, w10
   20784:	stur	w8, [x29, #-148]
   20788:	ldur	w8, [x29, #-132]
   2078c:	ldur	w10, [x29, #-148]
   20790:	cmp	w8, w10
   20794:	b.cs	207fc <lzma_mode_is_supported@@XZ_5.0+0x6294>  // b.hs, b.nlast
   20798:	ldur	w8, [x29, #-148]
   2079c:	stur	w8, [x29, #-136]
   207a0:	ldr	x9, [sp, #136]
   207a4:	ldr	w8, [sp, #92]
   207a8:	mov	w10, w8
   207ac:	mov	x11, #0x2                   	// #2
   207b0:	ldrh	w8, [x9, x10, lsl #1]
   207b4:	mov	w12, #0x800                 	// #2048
   207b8:	subs	w8, w12, w8
   207bc:	ldr	x9, [sp, #136]
   207c0:	ldr	w12, [sp, #92]
   207c4:	mov	w10, w12
   207c8:	mul	x10, x11, x10
   207cc:	add	x9, x9, x10
   207d0:	ldrh	w12, [x9]
   207d4:	add	w8, w12, w8, lsr #5
   207d8:	strh	w8, [x9]
   207dc:	ldr	w8, [sp, #132]
   207e0:	lsl	w8, w8, #1
   207e4:	str	w8, [sp, #132]
   207e8:	ldr	w8, [sp, #96]
   207ec:	ldr	w9, [sp, #124]
   207f0:	bic	w8, w9, w8
   207f4:	str	w8, [sp, #124]
   207f8:	b	20870 <lzma_mode_is_supported@@XZ_5.0+0x6308>
   207fc:	ldur	w8, [x29, #-148]
   20800:	ldur	w9, [x29, #-136]
   20804:	subs	w8, w9, w8
   20808:	stur	w8, [x29, #-136]
   2080c:	ldur	w8, [x29, #-148]
   20810:	ldur	w9, [x29, #-132]
   20814:	subs	w8, w9, w8
   20818:	stur	w8, [x29, #-132]
   2081c:	ldr	x10, [sp, #136]
   20820:	ldr	w8, [sp, #92]
   20824:	mov	w11, w8
   20828:	mov	x12, #0x2                   	// #2
   2082c:	ldrh	w8, [x10, x11, lsl #1]
   20830:	ldr	x10, [sp, #136]
   20834:	ldr	w9, [sp, #92]
   20838:	mov	w11, w9
   2083c:	mul	x11, x12, x11
   20840:	add	x10, x10, x11
   20844:	ldrh	w9, [x10]
   20848:	subs	w8, w9, w8, asr #5
   2084c:	strh	w8, [x10]
   20850:	ldr	w8, [sp, #132]
   20854:	lsl	w8, w8, #1
   20858:	add	w8, w8, #0x1
   2085c:	str	w8, [sp, #132]
   20860:	ldr	w8, [sp, #96]
   20864:	ldr	w9, [sp, #124]
   20868:	and	w8, w9, w8
   2086c:	str	w8, [sp, #124]
   20870:	ldr	w8, [sp, #120]
   20874:	lsl	w8, w8, #1
   20878:	str	w8, [sp, #120]
   2087c:	ldr	w8, [sp, #120]
   20880:	ldr	w9, [sp, #124]
   20884:	and	w8, w8, w9
   20888:	str	w8, [sp, #96]
   2088c:	ldr	w8, [sp, #124]
   20890:	ldr	w9, [sp, #96]
   20894:	add	w8, w8, w9
   20898:	ldr	w9, [sp, #132]
   2089c:	add	w8, w8, w9
   208a0:	str	w8, [sp, #92]
   208a4:	ldur	w8, [x29, #-136]
   208a8:	mov	w9, #0x1000000             	// #16777216
   208ac:	cmp	w8, w9
   208b0:	b.cs	20918 <lzma_mode_is_supported@@XZ_5.0+0x63b0>  // b.hs, b.nlast
   208b4:	ldur	x8, [x29, #-144]
   208b8:	ldur	x9, [x29, #-48]
   208bc:	cmp	x8, x9
   208c0:	cset	w10, eq  // eq = none
   208c4:	and	w10, w10, #0x1
   208c8:	mov	w0, w10
   208cc:	sxtw	x8, w0
   208d0:	cbz	x8, 208ec <lzma_mode_is_supported@@XZ_5.0+0x6384>
   208d4:	ldur	x8, [x29, #-56]
   208d8:	mov	x9, #0x6ea0                	// #28320
   208dc:	add	x8, x8, x9
   208e0:	mov	w10, #0xb                   	// #11
   208e4:	str	w10, [x8]
   208e8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   208ec:	ldur	w8, [x29, #-136]
   208f0:	lsl	w8, w8, #8
   208f4:	stur	w8, [x29, #-136]
   208f8:	ldur	w8, [x29, #-132]
   208fc:	ldur	x9, [x29, #-32]
   20900:	ldur	x10, [x29, #-144]
   20904:	add	x11, x10, #0x1
   20908:	stur	x11, [x29, #-144]
   2090c:	ldrb	w12, [x9, x10]
   20910:	orr	w8, w12, w8, lsl #8
   20914:	stur	w8, [x29, #-132]
   20918:	ldur	w8, [x29, #-136]
   2091c:	lsr	w8, w8, #11
   20920:	ldr	x9, [sp, #136]
   20924:	ldr	w10, [sp, #92]
   20928:	mov	w11, w10
   2092c:	ldrh	w10, [x9, x11, lsl #1]
   20930:	mul	w8, w8, w10
   20934:	stur	w8, [x29, #-148]
   20938:	ldur	w8, [x29, #-132]
   2093c:	ldur	w10, [x29, #-148]
   20940:	cmp	w8, w10
   20944:	b.cs	209ac <lzma_mode_is_supported@@XZ_5.0+0x6444>  // b.hs, b.nlast
   20948:	ldur	w8, [x29, #-148]
   2094c:	stur	w8, [x29, #-136]
   20950:	ldr	x9, [sp, #136]
   20954:	ldr	w8, [sp, #92]
   20958:	mov	w10, w8
   2095c:	mov	x11, #0x2                   	// #2
   20960:	ldrh	w8, [x9, x10, lsl #1]
   20964:	mov	w12, #0x800                 	// #2048
   20968:	subs	w8, w12, w8
   2096c:	ldr	x9, [sp, #136]
   20970:	ldr	w12, [sp, #92]
   20974:	mov	w10, w12
   20978:	mul	x10, x11, x10
   2097c:	add	x9, x9, x10
   20980:	ldrh	w12, [x9]
   20984:	add	w8, w12, w8, lsr #5
   20988:	strh	w8, [x9]
   2098c:	ldr	w8, [sp, #132]
   20990:	lsl	w8, w8, #1
   20994:	str	w8, [sp, #132]
   20998:	ldr	w8, [sp, #96]
   2099c:	ldr	w9, [sp, #124]
   209a0:	bic	w8, w9, w8
   209a4:	str	w8, [sp, #124]
   209a8:	b	20a20 <lzma_mode_is_supported@@XZ_5.0+0x64b8>
   209ac:	ldur	w8, [x29, #-148]
   209b0:	ldur	w9, [x29, #-136]
   209b4:	subs	w8, w9, w8
   209b8:	stur	w8, [x29, #-136]
   209bc:	ldur	w8, [x29, #-148]
   209c0:	ldur	w9, [x29, #-132]
   209c4:	subs	w8, w9, w8
   209c8:	stur	w8, [x29, #-132]
   209cc:	ldr	x10, [sp, #136]
   209d0:	ldr	w8, [sp, #92]
   209d4:	mov	w11, w8
   209d8:	mov	x12, #0x2                   	// #2
   209dc:	ldrh	w8, [x10, x11, lsl #1]
   209e0:	ldr	x10, [sp, #136]
   209e4:	ldr	w9, [sp, #92]
   209e8:	mov	w11, w9
   209ec:	mul	x11, x12, x11
   209f0:	add	x10, x10, x11
   209f4:	ldrh	w9, [x10]
   209f8:	subs	w8, w9, w8, asr #5
   209fc:	strh	w8, [x10]
   20a00:	ldr	w8, [sp, #132]
   20a04:	lsl	w8, w8, #1
   20a08:	add	w8, w8, #0x1
   20a0c:	str	w8, [sp, #132]
   20a10:	ldr	w8, [sp, #96]
   20a14:	ldr	w9, [sp, #124]
   20a18:	and	w8, w9, w8
   20a1c:	str	w8, [sp, #124]
   20a20:	ldr	w8, [sp, #120]
   20a24:	lsl	w8, w8, #1
   20a28:	str	w8, [sp, #120]
   20a2c:	ldr	w8, [sp, #120]
   20a30:	ldr	w9, [sp, #124]
   20a34:	and	w8, w8, w9
   20a38:	str	w8, [sp, #96]
   20a3c:	ldr	w8, [sp, #124]
   20a40:	ldr	w9, [sp, #96]
   20a44:	add	w8, w8, w9
   20a48:	ldr	w9, [sp, #132]
   20a4c:	add	w8, w8, w9
   20a50:	str	w8, [sp, #92]
   20a54:	ldur	w8, [x29, #-136]
   20a58:	mov	w9, #0x1000000             	// #16777216
   20a5c:	cmp	w8, w9
   20a60:	b.cs	20ac8 <lzma_mode_is_supported@@XZ_5.0+0x6560>  // b.hs, b.nlast
   20a64:	ldur	x8, [x29, #-144]
   20a68:	ldur	x9, [x29, #-48]
   20a6c:	cmp	x8, x9
   20a70:	cset	w10, eq  // eq = none
   20a74:	and	w10, w10, #0x1
   20a78:	mov	w0, w10
   20a7c:	sxtw	x8, w0
   20a80:	cbz	x8, 20a9c <lzma_mode_is_supported@@XZ_5.0+0x6534>
   20a84:	ldur	x8, [x29, #-56]
   20a88:	mov	x9, #0x6ea0                	// #28320
   20a8c:	add	x8, x8, x9
   20a90:	mov	w10, #0xc                   	// #12
   20a94:	str	w10, [x8]
   20a98:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20a9c:	ldur	w8, [x29, #-136]
   20aa0:	lsl	w8, w8, #8
   20aa4:	stur	w8, [x29, #-136]
   20aa8:	ldur	w8, [x29, #-132]
   20aac:	ldur	x9, [x29, #-32]
   20ab0:	ldur	x10, [x29, #-144]
   20ab4:	add	x11, x10, #0x1
   20ab8:	stur	x11, [x29, #-144]
   20abc:	ldrb	w12, [x9, x10]
   20ac0:	orr	w8, w12, w8, lsl #8
   20ac4:	stur	w8, [x29, #-132]
   20ac8:	ldur	w8, [x29, #-136]
   20acc:	lsr	w8, w8, #11
   20ad0:	ldr	x9, [sp, #136]
   20ad4:	ldr	w10, [sp, #92]
   20ad8:	mov	w11, w10
   20adc:	ldrh	w10, [x9, x11, lsl #1]
   20ae0:	mul	w8, w8, w10
   20ae4:	stur	w8, [x29, #-148]
   20ae8:	ldur	w8, [x29, #-132]
   20aec:	ldur	w10, [x29, #-148]
   20af0:	cmp	w8, w10
   20af4:	b.cs	20b5c <lzma_mode_is_supported@@XZ_5.0+0x65f4>  // b.hs, b.nlast
   20af8:	ldur	w8, [x29, #-148]
   20afc:	stur	w8, [x29, #-136]
   20b00:	ldr	x9, [sp, #136]
   20b04:	ldr	w8, [sp, #92]
   20b08:	mov	w10, w8
   20b0c:	mov	x11, #0x2                   	// #2
   20b10:	ldrh	w8, [x9, x10, lsl #1]
   20b14:	mov	w12, #0x800                 	// #2048
   20b18:	subs	w8, w12, w8
   20b1c:	ldr	x9, [sp, #136]
   20b20:	ldr	w12, [sp, #92]
   20b24:	mov	w10, w12
   20b28:	mul	x10, x11, x10
   20b2c:	add	x9, x9, x10
   20b30:	ldrh	w12, [x9]
   20b34:	add	w8, w12, w8, lsr #5
   20b38:	strh	w8, [x9]
   20b3c:	ldr	w8, [sp, #132]
   20b40:	lsl	w8, w8, #1
   20b44:	str	w8, [sp, #132]
   20b48:	ldr	w8, [sp, #96]
   20b4c:	ldr	w9, [sp, #124]
   20b50:	bic	w8, w9, w8
   20b54:	str	w8, [sp, #124]
   20b58:	b	20bd0 <lzma_mode_is_supported@@XZ_5.0+0x6668>
   20b5c:	ldur	w8, [x29, #-148]
   20b60:	ldur	w9, [x29, #-136]
   20b64:	subs	w8, w9, w8
   20b68:	stur	w8, [x29, #-136]
   20b6c:	ldur	w8, [x29, #-148]
   20b70:	ldur	w9, [x29, #-132]
   20b74:	subs	w8, w9, w8
   20b78:	stur	w8, [x29, #-132]
   20b7c:	ldr	x10, [sp, #136]
   20b80:	ldr	w8, [sp, #92]
   20b84:	mov	w11, w8
   20b88:	mov	x12, #0x2                   	// #2
   20b8c:	ldrh	w8, [x10, x11, lsl #1]
   20b90:	ldr	x10, [sp, #136]
   20b94:	ldr	w9, [sp, #92]
   20b98:	mov	w11, w9
   20b9c:	mul	x11, x12, x11
   20ba0:	add	x10, x10, x11
   20ba4:	ldrh	w9, [x10]
   20ba8:	subs	w8, w9, w8, asr #5
   20bac:	strh	w8, [x10]
   20bb0:	ldr	w8, [sp, #132]
   20bb4:	lsl	w8, w8, #1
   20bb8:	add	w8, w8, #0x1
   20bbc:	str	w8, [sp, #132]
   20bc0:	ldr	w8, [sp, #96]
   20bc4:	ldr	w9, [sp, #124]
   20bc8:	and	w8, w9, w8
   20bcc:	str	w8, [sp, #124]
   20bd0:	ldr	w8, [sp, #120]
   20bd4:	lsl	w8, w8, #1
   20bd8:	str	w8, [sp, #120]
   20bdc:	ldr	w8, [sp, #120]
   20be0:	ldr	w9, [sp, #124]
   20be4:	and	w8, w8, w9
   20be8:	str	w8, [sp, #96]
   20bec:	ldr	w8, [sp, #124]
   20bf0:	ldr	w9, [sp, #96]
   20bf4:	add	w8, w8, w9
   20bf8:	ldr	w9, [sp, #132]
   20bfc:	add	w8, w8, w9
   20c00:	str	w8, [sp, #92]
   20c04:	ldur	w8, [x29, #-136]
   20c08:	mov	w9, #0x1000000             	// #16777216
   20c0c:	cmp	w8, w9
   20c10:	b.cs	20c78 <lzma_mode_is_supported@@XZ_5.0+0x6710>  // b.hs, b.nlast
   20c14:	ldur	x8, [x29, #-144]
   20c18:	ldur	x9, [x29, #-48]
   20c1c:	cmp	x8, x9
   20c20:	cset	w10, eq  // eq = none
   20c24:	and	w10, w10, #0x1
   20c28:	mov	w0, w10
   20c2c:	sxtw	x8, w0
   20c30:	cbz	x8, 20c4c <lzma_mode_is_supported@@XZ_5.0+0x66e4>
   20c34:	ldur	x8, [x29, #-56]
   20c38:	mov	x9, #0x6ea0                	// #28320
   20c3c:	add	x8, x8, x9
   20c40:	mov	w10, #0xd                   	// #13
   20c44:	str	w10, [x8]
   20c48:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20c4c:	ldur	w8, [x29, #-136]
   20c50:	lsl	w8, w8, #8
   20c54:	stur	w8, [x29, #-136]
   20c58:	ldur	w8, [x29, #-132]
   20c5c:	ldur	x9, [x29, #-32]
   20c60:	ldur	x10, [x29, #-144]
   20c64:	add	x11, x10, #0x1
   20c68:	stur	x11, [x29, #-144]
   20c6c:	ldrb	w12, [x9, x10]
   20c70:	orr	w8, w12, w8, lsl #8
   20c74:	stur	w8, [x29, #-132]
   20c78:	ldur	w8, [x29, #-136]
   20c7c:	lsr	w8, w8, #11
   20c80:	ldr	x9, [sp, #136]
   20c84:	ldr	w10, [sp, #92]
   20c88:	mov	w11, w10
   20c8c:	ldrh	w10, [x9, x11, lsl #1]
   20c90:	mul	w8, w8, w10
   20c94:	stur	w8, [x29, #-148]
   20c98:	ldur	w8, [x29, #-132]
   20c9c:	ldur	w10, [x29, #-148]
   20ca0:	cmp	w8, w10
   20ca4:	b.cs	20d0c <lzma_mode_is_supported@@XZ_5.0+0x67a4>  // b.hs, b.nlast
   20ca8:	ldur	w8, [x29, #-148]
   20cac:	stur	w8, [x29, #-136]
   20cb0:	ldr	x9, [sp, #136]
   20cb4:	ldr	w8, [sp, #92]
   20cb8:	mov	w10, w8
   20cbc:	mov	x11, #0x2                   	// #2
   20cc0:	ldrh	w8, [x9, x10, lsl #1]
   20cc4:	mov	w12, #0x800                 	// #2048
   20cc8:	subs	w8, w12, w8
   20ccc:	ldr	x9, [sp, #136]
   20cd0:	ldr	w12, [sp, #92]
   20cd4:	mov	w10, w12
   20cd8:	mul	x10, x11, x10
   20cdc:	add	x9, x9, x10
   20ce0:	ldrh	w12, [x9]
   20ce4:	add	w8, w12, w8, lsr #5
   20ce8:	strh	w8, [x9]
   20cec:	ldr	w8, [sp, #132]
   20cf0:	lsl	w8, w8, #1
   20cf4:	str	w8, [sp, #132]
   20cf8:	ldr	w8, [sp, #96]
   20cfc:	ldr	w9, [sp, #124]
   20d00:	bic	w8, w9, w8
   20d04:	str	w8, [sp, #124]
   20d08:	b	20d80 <lzma_mode_is_supported@@XZ_5.0+0x6818>
   20d0c:	ldur	w8, [x29, #-148]
   20d10:	ldur	w9, [x29, #-136]
   20d14:	subs	w8, w9, w8
   20d18:	stur	w8, [x29, #-136]
   20d1c:	ldur	w8, [x29, #-148]
   20d20:	ldur	w9, [x29, #-132]
   20d24:	subs	w8, w9, w8
   20d28:	stur	w8, [x29, #-132]
   20d2c:	ldr	x10, [sp, #136]
   20d30:	ldr	w8, [sp, #92]
   20d34:	mov	w11, w8
   20d38:	mov	x12, #0x2                   	// #2
   20d3c:	ldrh	w8, [x10, x11, lsl #1]
   20d40:	ldr	x10, [sp, #136]
   20d44:	ldr	w9, [sp, #92]
   20d48:	mov	w11, w9
   20d4c:	mul	x11, x12, x11
   20d50:	add	x10, x10, x11
   20d54:	ldrh	w9, [x10]
   20d58:	subs	w8, w9, w8, asr #5
   20d5c:	strh	w8, [x10]
   20d60:	ldr	w8, [sp, #132]
   20d64:	lsl	w8, w8, #1
   20d68:	add	w8, w8, #0x1
   20d6c:	str	w8, [sp, #132]
   20d70:	ldr	w8, [sp, #96]
   20d74:	ldr	w9, [sp, #124]
   20d78:	and	w8, w9, w8
   20d7c:	str	w8, [sp, #124]
   20d80:	ldr	w8, [sp, #120]
   20d84:	lsl	w8, w8, #1
   20d88:	str	w8, [sp, #120]
   20d8c:	ldr	w8, [sp, #120]
   20d90:	ldr	w9, [sp, #124]
   20d94:	and	w8, w8, w9
   20d98:	str	w8, [sp, #96]
   20d9c:	ldr	w8, [sp, #124]
   20da0:	ldr	w9, [sp, #96]
   20da4:	add	w8, w8, w9
   20da8:	ldr	w9, [sp, #132]
   20dac:	add	w8, w8, w9
   20db0:	str	w8, [sp, #92]
   20db4:	ldur	w8, [x29, #-136]
   20db8:	mov	w9, #0x1000000             	// #16777216
   20dbc:	cmp	w8, w9
   20dc0:	b.cs	20e28 <lzma_mode_is_supported@@XZ_5.0+0x68c0>  // b.hs, b.nlast
   20dc4:	ldur	x8, [x29, #-144]
   20dc8:	ldur	x9, [x29, #-48]
   20dcc:	cmp	x8, x9
   20dd0:	cset	w10, eq  // eq = none
   20dd4:	and	w10, w10, #0x1
   20dd8:	mov	w0, w10
   20ddc:	sxtw	x8, w0
   20de0:	cbz	x8, 20dfc <lzma_mode_is_supported@@XZ_5.0+0x6894>
   20de4:	ldur	x8, [x29, #-56]
   20de8:	mov	x9, #0x6ea0                	// #28320
   20dec:	add	x8, x8, x9
   20df0:	mov	w10, #0xe                   	// #14
   20df4:	str	w10, [x8]
   20df8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20dfc:	ldur	w8, [x29, #-136]
   20e00:	lsl	w8, w8, #8
   20e04:	stur	w8, [x29, #-136]
   20e08:	ldur	w8, [x29, #-132]
   20e0c:	ldur	x9, [x29, #-32]
   20e10:	ldur	x10, [x29, #-144]
   20e14:	add	x11, x10, #0x1
   20e18:	stur	x11, [x29, #-144]
   20e1c:	ldrb	w12, [x9, x10]
   20e20:	orr	w8, w12, w8, lsl #8
   20e24:	stur	w8, [x29, #-132]
   20e28:	ldur	w8, [x29, #-136]
   20e2c:	lsr	w8, w8, #11
   20e30:	ldr	x9, [sp, #136]
   20e34:	ldr	w10, [sp, #92]
   20e38:	mov	w11, w10
   20e3c:	ldrh	w10, [x9, x11, lsl #1]
   20e40:	mul	w8, w8, w10
   20e44:	stur	w8, [x29, #-148]
   20e48:	ldur	w8, [x29, #-132]
   20e4c:	ldur	w10, [x29, #-148]
   20e50:	cmp	w8, w10
   20e54:	b.cs	20ebc <lzma_mode_is_supported@@XZ_5.0+0x6954>  // b.hs, b.nlast
   20e58:	ldur	w8, [x29, #-148]
   20e5c:	stur	w8, [x29, #-136]
   20e60:	ldr	x9, [sp, #136]
   20e64:	ldr	w8, [sp, #92]
   20e68:	mov	w10, w8
   20e6c:	mov	x11, #0x2                   	// #2
   20e70:	ldrh	w8, [x9, x10, lsl #1]
   20e74:	mov	w12, #0x800                 	// #2048
   20e78:	subs	w8, w12, w8
   20e7c:	ldr	x9, [sp, #136]
   20e80:	ldr	w12, [sp, #92]
   20e84:	mov	w10, w12
   20e88:	mul	x10, x11, x10
   20e8c:	add	x9, x9, x10
   20e90:	ldrh	w12, [x9]
   20e94:	add	w8, w12, w8, lsr #5
   20e98:	strh	w8, [x9]
   20e9c:	ldr	w8, [sp, #132]
   20ea0:	lsl	w8, w8, #1
   20ea4:	str	w8, [sp, #132]
   20ea8:	ldr	w8, [sp, #96]
   20eac:	ldr	w9, [sp, #124]
   20eb0:	bic	w8, w9, w8
   20eb4:	str	w8, [sp, #124]
   20eb8:	b	20f30 <lzma_mode_is_supported@@XZ_5.0+0x69c8>
   20ebc:	ldur	w8, [x29, #-148]
   20ec0:	ldur	w9, [x29, #-136]
   20ec4:	subs	w8, w9, w8
   20ec8:	stur	w8, [x29, #-136]
   20ecc:	ldur	w8, [x29, #-148]
   20ed0:	ldur	w9, [x29, #-132]
   20ed4:	subs	w8, w9, w8
   20ed8:	stur	w8, [x29, #-132]
   20edc:	ldr	x10, [sp, #136]
   20ee0:	ldr	w8, [sp, #92]
   20ee4:	mov	w11, w8
   20ee8:	mov	x12, #0x2                   	// #2
   20eec:	ldrh	w8, [x10, x11, lsl #1]
   20ef0:	ldr	x10, [sp, #136]
   20ef4:	ldr	w9, [sp, #92]
   20ef8:	mov	w11, w9
   20efc:	mul	x11, x12, x11
   20f00:	add	x10, x10, x11
   20f04:	ldrh	w9, [x10]
   20f08:	subs	w8, w9, w8, asr #5
   20f0c:	strh	w8, [x10]
   20f10:	ldr	w8, [sp, #132]
   20f14:	lsl	w8, w8, #1
   20f18:	add	w8, w8, #0x1
   20f1c:	str	w8, [sp, #132]
   20f20:	ldr	w8, [sp, #96]
   20f24:	ldr	w9, [sp, #124]
   20f28:	and	w8, w9, w8
   20f2c:	str	w8, [sp, #124]
   20f30:	ldr	w8, [sp, #120]
   20f34:	lsl	w8, w8, #1
   20f38:	str	w8, [sp, #120]
   20f3c:	ldr	w8, [sp, #120]
   20f40:	ldr	w9, [sp, #124]
   20f44:	and	w8, w8, w9
   20f48:	str	w8, [sp, #96]
   20f4c:	ldr	w8, [sp, #124]
   20f50:	ldr	w9, [sp, #96]
   20f54:	add	w8, w8, w9
   20f58:	ldr	w9, [sp, #132]
   20f5c:	add	w8, w8, w9
   20f60:	str	w8, [sp, #92]
   20f64:	ldur	w8, [x29, #-136]
   20f68:	mov	w9, #0x1000000             	// #16777216
   20f6c:	cmp	w8, w9
   20f70:	b.cs	20fd8 <lzma_mode_is_supported@@XZ_5.0+0x6a70>  // b.hs, b.nlast
   20f74:	ldur	x8, [x29, #-144]
   20f78:	ldur	x9, [x29, #-48]
   20f7c:	cmp	x8, x9
   20f80:	cset	w10, eq  // eq = none
   20f84:	and	w10, w10, #0x1
   20f88:	mov	w0, w10
   20f8c:	sxtw	x8, w0
   20f90:	cbz	x8, 20fac <lzma_mode_is_supported@@XZ_5.0+0x6a44>
   20f94:	ldur	x8, [x29, #-56]
   20f98:	mov	x9, #0x6ea0                	// #28320
   20f9c:	add	x8, x8, x9
   20fa0:	mov	w10, #0xf                   	// #15
   20fa4:	str	w10, [x8]
   20fa8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   20fac:	ldur	w8, [x29, #-136]
   20fb0:	lsl	w8, w8, #8
   20fb4:	stur	w8, [x29, #-136]
   20fb8:	ldur	w8, [x29, #-132]
   20fbc:	ldur	x9, [x29, #-32]
   20fc0:	ldur	x10, [x29, #-144]
   20fc4:	add	x11, x10, #0x1
   20fc8:	stur	x11, [x29, #-144]
   20fcc:	ldrb	w12, [x9, x10]
   20fd0:	orr	w8, w12, w8, lsl #8
   20fd4:	stur	w8, [x29, #-132]
   20fd8:	ldur	w8, [x29, #-136]
   20fdc:	lsr	w8, w8, #11
   20fe0:	ldr	x9, [sp, #136]
   20fe4:	ldr	w10, [sp, #92]
   20fe8:	mov	w11, w10
   20fec:	ldrh	w10, [x9, x11, lsl #1]
   20ff0:	mul	w8, w8, w10
   20ff4:	stur	w8, [x29, #-148]
   20ff8:	ldur	w8, [x29, #-132]
   20ffc:	ldur	w10, [x29, #-148]
   21000:	cmp	w8, w10
   21004:	b.cs	2106c <lzma_mode_is_supported@@XZ_5.0+0x6b04>  // b.hs, b.nlast
   21008:	ldur	w8, [x29, #-148]
   2100c:	stur	w8, [x29, #-136]
   21010:	ldr	x9, [sp, #136]
   21014:	ldr	w8, [sp, #92]
   21018:	mov	w10, w8
   2101c:	mov	x11, #0x2                   	// #2
   21020:	ldrh	w8, [x9, x10, lsl #1]
   21024:	mov	w12, #0x800                 	// #2048
   21028:	subs	w8, w12, w8
   2102c:	ldr	x9, [sp, #136]
   21030:	ldr	w12, [sp, #92]
   21034:	mov	w10, w12
   21038:	mul	x10, x11, x10
   2103c:	add	x9, x9, x10
   21040:	ldrh	w12, [x9]
   21044:	add	w8, w12, w8, lsr #5
   21048:	strh	w8, [x9]
   2104c:	ldr	w8, [sp, #132]
   21050:	lsl	w8, w8, #1
   21054:	str	w8, [sp, #132]
   21058:	ldr	w8, [sp, #96]
   2105c:	ldr	w9, [sp, #124]
   21060:	bic	w8, w9, w8
   21064:	str	w8, [sp, #124]
   21068:	b	210e0 <lzma_mode_is_supported@@XZ_5.0+0x6b78>
   2106c:	ldur	w8, [x29, #-148]
   21070:	ldur	w9, [x29, #-136]
   21074:	subs	w8, w9, w8
   21078:	stur	w8, [x29, #-136]
   2107c:	ldur	w8, [x29, #-148]
   21080:	ldur	w9, [x29, #-132]
   21084:	subs	w8, w9, w8
   21088:	stur	w8, [x29, #-132]
   2108c:	ldr	x10, [sp, #136]
   21090:	ldr	w8, [sp, #92]
   21094:	mov	w11, w8
   21098:	mov	x12, #0x2                   	// #2
   2109c:	ldrh	w8, [x10, x11, lsl #1]
   210a0:	ldr	x10, [sp, #136]
   210a4:	ldr	w9, [sp, #92]
   210a8:	mov	w11, w9
   210ac:	mul	x11, x12, x11
   210b0:	add	x10, x10, x11
   210b4:	ldrh	w9, [x10]
   210b8:	subs	w8, w9, w8, asr #5
   210bc:	strh	w8, [x10]
   210c0:	ldr	w8, [sp, #132]
   210c4:	lsl	w8, w8, #1
   210c8:	add	w8, w8, #0x1
   210cc:	str	w8, [sp, #132]
   210d0:	ldr	w8, [sp, #96]
   210d4:	ldr	w9, [sp, #124]
   210d8:	and	w8, w9, w8
   210dc:	str	w8, [sp, #124]
   210e0:	ldr	w8, [sp, #120]
   210e4:	lsl	w8, w8, #1
   210e8:	str	w8, [sp, #120]
   210ec:	ldr	w8, [sp, #120]
   210f0:	ldr	w9, [sp, #124]
   210f4:	and	w8, w8, w9
   210f8:	str	w8, [sp, #96]
   210fc:	ldr	w8, [sp, #124]
   21100:	ldr	w9, [sp, #96]
   21104:	add	w8, w8, w9
   21108:	ldr	w9, [sp, #132]
   2110c:	add	w8, w8, w9
   21110:	str	w8, [sp, #92]
   21114:	ldur	w8, [x29, #-136]
   21118:	mov	w9, #0x1000000             	// #16777216
   2111c:	cmp	w8, w9
   21120:	b.cs	21188 <lzma_mode_is_supported@@XZ_5.0+0x6c20>  // b.hs, b.nlast
   21124:	ldur	x8, [x29, #-144]
   21128:	ldur	x9, [x29, #-48]
   2112c:	cmp	x8, x9
   21130:	cset	w10, eq  // eq = none
   21134:	and	w10, w10, #0x1
   21138:	mov	w0, w10
   2113c:	sxtw	x8, w0
   21140:	cbz	x8, 2115c <lzma_mode_is_supported@@XZ_5.0+0x6bf4>
   21144:	ldur	x8, [x29, #-56]
   21148:	mov	x9, #0x6ea0                	// #28320
   2114c:	add	x8, x8, x9
   21150:	mov	w10, #0x10                  	// #16
   21154:	str	w10, [x8]
   21158:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2115c:	ldur	w8, [x29, #-136]
   21160:	lsl	w8, w8, #8
   21164:	stur	w8, [x29, #-136]
   21168:	ldur	w8, [x29, #-132]
   2116c:	ldur	x9, [x29, #-32]
   21170:	ldur	x10, [x29, #-144]
   21174:	add	x11, x10, #0x1
   21178:	stur	x11, [x29, #-144]
   2117c:	ldrb	w12, [x9, x10]
   21180:	orr	w8, w12, w8, lsl #8
   21184:	stur	w8, [x29, #-132]
   21188:	ldur	w8, [x29, #-136]
   2118c:	lsr	w8, w8, #11
   21190:	ldr	x9, [sp, #136]
   21194:	ldr	w10, [sp, #92]
   21198:	mov	w11, w10
   2119c:	ldrh	w10, [x9, x11, lsl #1]
   211a0:	mul	w8, w8, w10
   211a4:	stur	w8, [x29, #-148]
   211a8:	ldur	w8, [x29, #-132]
   211ac:	ldur	w10, [x29, #-148]
   211b0:	cmp	w8, w10
   211b4:	b.cs	2121c <lzma_mode_is_supported@@XZ_5.0+0x6cb4>  // b.hs, b.nlast
   211b8:	ldur	w8, [x29, #-148]
   211bc:	stur	w8, [x29, #-136]
   211c0:	ldr	x9, [sp, #136]
   211c4:	ldr	w8, [sp, #92]
   211c8:	mov	w10, w8
   211cc:	mov	x11, #0x2                   	// #2
   211d0:	ldrh	w8, [x9, x10, lsl #1]
   211d4:	mov	w12, #0x800                 	// #2048
   211d8:	subs	w8, w12, w8
   211dc:	ldr	x9, [sp, #136]
   211e0:	ldr	w12, [sp, #92]
   211e4:	mov	w10, w12
   211e8:	mul	x10, x11, x10
   211ec:	add	x9, x9, x10
   211f0:	ldrh	w12, [x9]
   211f4:	add	w8, w12, w8, lsr #5
   211f8:	strh	w8, [x9]
   211fc:	ldr	w8, [sp, #132]
   21200:	lsl	w8, w8, #1
   21204:	str	w8, [sp, #132]
   21208:	ldr	w8, [sp, #96]
   2120c:	ldr	w9, [sp, #124]
   21210:	bic	w8, w9, w8
   21214:	str	w8, [sp, #124]
   21218:	b	21290 <lzma_mode_is_supported@@XZ_5.0+0x6d28>
   2121c:	ldur	w8, [x29, #-148]
   21220:	ldur	w9, [x29, #-136]
   21224:	subs	w8, w9, w8
   21228:	stur	w8, [x29, #-136]
   2122c:	ldur	w8, [x29, #-148]
   21230:	ldur	w9, [x29, #-132]
   21234:	subs	w8, w9, w8
   21238:	stur	w8, [x29, #-132]
   2123c:	ldr	x10, [sp, #136]
   21240:	ldr	w8, [sp, #92]
   21244:	mov	w11, w8
   21248:	mov	x12, #0x2                   	// #2
   2124c:	ldrh	w8, [x10, x11, lsl #1]
   21250:	ldr	x10, [sp, #136]
   21254:	ldr	w9, [sp, #92]
   21258:	mov	w11, w9
   2125c:	mul	x11, x12, x11
   21260:	add	x10, x10, x11
   21264:	ldrh	w9, [x10]
   21268:	subs	w8, w9, w8, asr #5
   2126c:	strh	w8, [x10]
   21270:	ldr	w8, [sp, #132]
   21274:	lsl	w8, w8, #1
   21278:	add	w8, w8, #0x1
   2127c:	str	w8, [sp, #132]
   21280:	ldr	w8, [sp, #96]
   21284:	ldr	w9, [sp, #124]
   21288:	and	w8, w9, w8
   2128c:	str	w8, [sp, #124]
   21290:	ldr	w8, [sp, #120]
   21294:	lsl	w8, w8, #1
   21298:	str	w8, [sp, #120]
   2129c:	ldr	w8, [sp, #120]
   212a0:	ldr	w9, [sp, #124]
   212a4:	and	w8, w8, w9
   212a8:	str	w8, [sp, #96]
   212ac:	ldr	w8, [sp, #124]
   212b0:	ldr	w9, [sp, #96]
   212b4:	add	w8, w8, w9
   212b8:	ldr	w9, [sp, #132]
   212bc:	add	w8, w8, w9
   212c0:	str	w8, [sp, #92]
   212c4:	ldur	w8, [x29, #-136]
   212c8:	mov	w9, #0x1000000             	// #16777216
   212cc:	cmp	w8, w9
   212d0:	b.cs	21338 <lzma_mode_is_supported@@XZ_5.0+0x6dd0>  // b.hs, b.nlast
   212d4:	ldur	x8, [x29, #-144]
   212d8:	ldur	x9, [x29, #-48]
   212dc:	cmp	x8, x9
   212e0:	cset	w10, eq  // eq = none
   212e4:	and	w10, w10, #0x1
   212e8:	mov	w0, w10
   212ec:	sxtw	x8, w0
   212f0:	cbz	x8, 2130c <lzma_mode_is_supported@@XZ_5.0+0x6da4>
   212f4:	ldur	x8, [x29, #-56]
   212f8:	mov	x9, #0x6ea0                	// #28320
   212fc:	add	x8, x8, x9
   21300:	mov	w10, #0x11                  	// #17
   21304:	str	w10, [x8]
   21308:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2130c:	ldur	w8, [x29, #-136]
   21310:	lsl	w8, w8, #8
   21314:	stur	w8, [x29, #-136]
   21318:	ldur	w8, [x29, #-132]
   2131c:	ldur	x9, [x29, #-32]
   21320:	ldur	x10, [x29, #-144]
   21324:	add	x11, x10, #0x1
   21328:	stur	x11, [x29, #-144]
   2132c:	ldrb	w12, [x9, x10]
   21330:	orr	w8, w12, w8, lsl #8
   21334:	stur	w8, [x29, #-132]
   21338:	ldur	w8, [x29, #-136]
   2133c:	lsr	w8, w8, #11
   21340:	ldr	x9, [sp, #136]
   21344:	ldr	w10, [sp, #92]
   21348:	mov	w11, w10
   2134c:	ldrh	w10, [x9, x11, lsl #1]
   21350:	mul	w8, w8, w10
   21354:	stur	w8, [x29, #-148]
   21358:	ldur	w8, [x29, #-132]
   2135c:	ldur	w10, [x29, #-148]
   21360:	cmp	w8, w10
   21364:	b.cs	213cc <lzma_mode_is_supported@@XZ_5.0+0x6e64>  // b.hs, b.nlast
   21368:	ldur	w8, [x29, #-148]
   2136c:	stur	w8, [x29, #-136]
   21370:	ldr	x9, [sp, #136]
   21374:	ldr	w8, [sp, #92]
   21378:	mov	w10, w8
   2137c:	mov	x11, #0x2                   	// #2
   21380:	ldrh	w8, [x9, x10, lsl #1]
   21384:	mov	w12, #0x800                 	// #2048
   21388:	subs	w8, w12, w8
   2138c:	ldr	x9, [sp, #136]
   21390:	ldr	w12, [sp, #92]
   21394:	mov	w10, w12
   21398:	mul	x10, x11, x10
   2139c:	add	x9, x9, x10
   213a0:	ldrh	w12, [x9]
   213a4:	add	w8, w12, w8, lsr #5
   213a8:	strh	w8, [x9]
   213ac:	ldr	w8, [sp, #132]
   213b0:	lsl	w8, w8, #1
   213b4:	str	w8, [sp, #132]
   213b8:	ldr	w8, [sp, #96]
   213bc:	ldr	w9, [sp, #124]
   213c0:	bic	w8, w9, w8
   213c4:	str	w8, [sp, #124]
   213c8:	b	21440 <lzma_mode_is_supported@@XZ_5.0+0x6ed8>
   213cc:	ldur	w8, [x29, #-148]
   213d0:	ldur	w9, [x29, #-136]
   213d4:	subs	w8, w9, w8
   213d8:	stur	w8, [x29, #-136]
   213dc:	ldur	w8, [x29, #-148]
   213e0:	ldur	w9, [x29, #-132]
   213e4:	subs	w8, w9, w8
   213e8:	stur	w8, [x29, #-132]
   213ec:	ldr	x10, [sp, #136]
   213f0:	ldr	w8, [sp, #92]
   213f4:	mov	w11, w8
   213f8:	mov	x12, #0x2                   	// #2
   213fc:	ldrh	w8, [x10, x11, lsl #1]
   21400:	ldr	x10, [sp, #136]
   21404:	ldr	w9, [sp, #92]
   21408:	mov	w11, w9
   2140c:	mul	x11, x12, x11
   21410:	add	x10, x10, x11
   21414:	ldrh	w9, [x10]
   21418:	subs	w8, w9, w8, asr #5
   2141c:	strh	w8, [x10]
   21420:	ldr	w8, [sp, #132]
   21424:	lsl	w8, w8, #1
   21428:	add	w8, w8, #0x1
   2142c:	str	w8, [sp, #132]
   21430:	ldr	w8, [sp, #96]
   21434:	ldr	w9, [sp, #124]
   21438:	and	w8, w9, w8
   2143c:	str	w8, [sp, #124]
   21440:	ldur	w8, [x29, #-152]
   21444:	mov	w9, w8
   21448:	adrp	x10, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   2144c:	add	x10, x10, #0xdcc
   21450:	ldr	w8, [x10, x9, lsl #2]
   21454:	stur	w8, [x29, #-152]
   21458:	ldr	w8, [sp, #132]
   2145c:	sub	x0, x29, #0x70
   21460:	mov	w1, w8
   21464:	bl	27898 <lzma_mode_is_supported@@XZ_5.0+0xd330>
   21468:	tbnz	w0, #0, 21470 <lzma_mode_is_supported@@XZ_5.0+0x6f08>
   2146c:	b	21488 <lzma_mode_is_supported@@XZ_5.0+0x6f20>
   21470:	ldur	x8, [x29, #-56]
   21474:	mov	x9, #0x6ea0                	// #28320
   21478:	add	x8, x8, x9
   2147c:	mov	w10, #0x12                  	// #18
   21480:	str	w10, [x8]
   21484:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21488:	b	1f9cc <lzma_mode_is_supported@@XZ_5.0+0x5464>
   2148c:	ldur	w8, [x29, #-148]
   21490:	ldur	w9, [x29, #-136]
   21494:	subs	w8, w9, w8
   21498:	stur	w8, [x29, #-136]
   2149c:	ldur	w8, [x29, #-148]
   214a0:	ldur	w9, [x29, #-132]
   214a4:	subs	w8, w9, w8
   214a8:	stur	w8, [x29, #-132]
   214ac:	ldur	x10, [x29, #-56]
   214b0:	add	x10, x10, #0x6, lsl #12
   214b4:	ldur	w8, [x29, #-152]
   214b8:	mov	w11, w8
   214bc:	mov	x12, #0x20                  	// #32
   214c0:	mul	x11, x12, x11
   214c4:	add	x10, x10, x11
   214c8:	ldr	w8, [sp, #108]
   214cc:	mov	w11, w8
   214d0:	mov	x13, #0x2                   	// #2
   214d4:	ldrh	w8, [x10, x11, lsl #1]
   214d8:	ldur	x10, [x29, #-56]
   214dc:	add	x10, x10, #0x6, lsl #12
   214e0:	ldur	w9, [x29, #-152]
   214e4:	mov	w11, w9
   214e8:	mul	x11, x12, x11
   214ec:	add	x10, x10, x11
   214f0:	ldr	w9, [sp, #108]
   214f4:	mov	w11, w9
   214f8:	mul	x11, x13, x11
   214fc:	add	x10, x10, x11
   21500:	ldrh	w9, [x10]
   21504:	subs	w8, w9, w8, asr #5
   21508:	strh	w8, [x10]
   2150c:	ldur	w8, [x29, #-136]
   21510:	mov	w9, #0x1000000             	// #16777216
   21514:	cmp	w8, w9
   21518:	b.cs	21580 <lzma_mode_is_supported@@XZ_5.0+0x7018>  // b.hs, b.nlast
   2151c:	ldur	x8, [x29, #-144]
   21520:	ldur	x9, [x29, #-48]
   21524:	cmp	x8, x9
   21528:	cset	w10, eq  // eq = none
   2152c:	and	w10, w10, #0x1
   21530:	mov	w0, w10
   21534:	sxtw	x8, w0
   21538:	cbz	x8, 21554 <lzma_mode_is_supported@@XZ_5.0+0x6fec>
   2153c:	ldur	x8, [x29, #-56]
   21540:	mov	x9, #0x6ea0                	// #28320
   21544:	add	x8, x8, x9
   21548:	mov	w10, #0x13                  	// #19
   2154c:	str	w10, [x8]
   21550:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21554:	ldur	w8, [x29, #-136]
   21558:	lsl	w8, w8, #8
   2155c:	stur	w8, [x29, #-136]
   21560:	ldur	w8, [x29, #-132]
   21564:	ldur	x9, [x29, #-32]
   21568:	ldur	x10, [x29, #-144]
   2156c:	add	x11, x10, #0x1
   21570:	stur	x11, [x29, #-144]
   21574:	ldrb	w12, [x9, x10]
   21578:	orr	w8, w12, w8, lsl #8
   2157c:	stur	w8, [x29, #-132]
   21580:	ldur	w8, [x29, #-136]
   21584:	lsr	w8, w8, #11
   21588:	ldur	x9, [x29, #-56]
   2158c:	mov	x10, #0x6180                	// #24960
   21590:	add	x9, x9, x10
   21594:	ldur	w11, [x29, #-152]
   21598:	mov	w10, w11
   2159c:	ldrh	w11, [x9, x10, lsl #1]
   215a0:	mul	w8, w8, w11
   215a4:	stur	w8, [x29, #-148]
   215a8:	ldur	w8, [x29, #-132]
   215ac:	ldur	w11, [x29, #-148]
   215b0:	cmp	w8, w11
   215b4:	b.cs	248f0 <lzma_mode_is_supported@@XZ_5.0+0xa388>  // b.hs, b.nlast
   215b8:	ldur	w8, [x29, #-148]
   215bc:	stur	w8, [x29, #-136]
   215c0:	ldur	x9, [x29, #-56]
   215c4:	mov	x10, #0x6180                	// #24960
   215c8:	add	x9, x9, x10
   215cc:	ldur	w8, [x29, #-152]
   215d0:	mov	w11, w8
   215d4:	mov	x12, #0x2                   	// #2
   215d8:	ldrh	w8, [x9, x11, lsl #1]
   215dc:	mov	w13, #0x800                 	// #2048
   215e0:	subs	w8, w13, w8
   215e4:	ldur	x9, [x29, #-56]
   215e8:	add	x9, x9, x10
   215ec:	ldur	w13, [x29, #-152]
   215f0:	mov	w10, w13
   215f4:	mul	x10, x12, x10
   215f8:	add	x9, x9, x10
   215fc:	ldrh	w13, [x9]
   21600:	add	w8, w13, w8, lsr #5
   21604:	strh	w8, [x9]
   21608:	ldur	w8, [x29, #-152]
   2160c:	mov	w9, #0x7                   	// #7
   21610:	mov	w10, #0xa                   	// #10
   21614:	cmp	w8, #0x7
   21618:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   2161c:	stur	w8, [x29, #-152]
   21620:	ldr	w8, [sp, #156]
   21624:	str	w8, [sp, #152]
   21628:	ldr	w8, [sp, #160]
   2162c:	str	w8, [sp, #156]
   21630:	ldur	w8, [x29, #-156]
   21634:	str	w8, [sp, #160]
   21638:	mov	w8, #0x1                   	// #1
   2163c:	str	w8, [sp, #132]
   21640:	ldur	w8, [x29, #-136]
   21644:	mov	w9, #0x1000000             	// #16777216
   21648:	cmp	w8, w9
   2164c:	b.cs	216b4 <lzma_mode_is_supported@@XZ_5.0+0x714c>  // b.hs, b.nlast
   21650:	ldur	x8, [x29, #-144]
   21654:	ldur	x9, [x29, #-48]
   21658:	cmp	x8, x9
   2165c:	cset	w10, eq  // eq = none
   21660:	and	w10, w10, #0x1
   21664:	mov	w0, w10
   21668:	sxtw	x8, w0
   2166c:	cbz	x8, 21688 <lzma_mode_is_supported@@XZ_5.0+0x7120>
   21670:	ldur	x8, [x29, #-56]
   21674:	mov	x9, #0x6ea0                	// #28320
   21678:	add	x8, x8, x9
   2167c:	mov	w10, #0x14                  	// #20
   21680:	str	w10, [x8]
   21684:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21688:	ldur	w8, [x29, #-136]
   2168c:	lsl	w8, w8, #8
   21690:	stur	w8, [x29, #-136]
   21694:	ldur	w8, [x29, #-132]
   21698:	ldur	x9, [x29, #-32]
   2169c:	ldur	x10, [x29, #-144]
   216a0:	add	x11, x10, #0x1
   216a4:	stur	x11, [x29, #-144]
   216a8:	ldrb	w12, [x9, x10]
   216ac:	orr	w8, w12, w8, lsl #8
   216b0:	stur	w8, [x29, #-132]
   216b4:	ldur	w8, [x29, #-136]
   216b8:	lsr	w8, w8, #11
   216bc:	ldur	x9, [x29, #-56]
   216c0:	mov	x10, #0x6664                	// #26212
   216c4:	add	x9, x9, x10
   216c8:	ldrh	w11, [x9]
   216cc:	mul	w8, w8, w11
   216d0:	stur	w8, [x29, #-148]
   216d4:	ldur	w8, [x29, #-132]
   216d8:	ldur	w11, [x29, #-148]
   216dc:	cmp	w8, w11
   216e0:	b.cs	21ccc <lzma_mode_is_supported@@XZ_5.0+0x7764>  // b.hs, b.nlast
   216e4:	ldur	w8, [x29, #-148]
   216e8:	stur	w8, [x29, #-136]
   216ec:	ldur	x9, [x29, #-56]
   216f0:	mov	x10, #0x6664                	// #26212
   216f4:	add	x9, x9, x10
   216f8:	ldrh	w8, [x9]
   216fc:	mov	w11, #0x800                 	// #2048
   21700:	subs	w8, w11, w8
   21704:	ldur	x9, [x29, #-56]
   21708:	add	x9, x9, x10
   2170c:	ldrh	w11, [x9]
   21710:	add	w8, w11, w8, lsr #5
   21714:	strh	w8, [x9]
   21718:	ldur	w8, [x29, #-136]
   2171c:	mov	w9, #0x1000000             	// #16777216
   21720:	cmp	w8, w9
   21724:	b.cs	2178c <lzma_mode_is_supported@@XZ_5.0+0x7224>  // b.hs, b.nlast
   21728:	ldur	x8, [x29, #-144]
   2172c:	ldur	x9, [x29, #-48]
   21730:	cmp	x8, x9
   21734:	cset	w10, eq  // eq = none
   21738:	and	w10, w10, #0x1
   2173c:	mov	w0, w10
   21740:	sxtw	x8, w0
   21744:	cbz	x8, 21760 <lzma_mode_is_supported@@XZ_5.0+0x71f8>
   21748:	ldur	x8, [x29, #-56]
   2174c:	mov	x9, #0x6ea0                	// #28320
   21750:	add	x8, x8, x9
   21754:	mov	w10, #0x15                  	// #21
   21758:	str	w10, [x8]
   2175c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21760:	ldur	w8, [x29, #-136]
   21764:	lsl	w8, w8, #8
   21768:	stur	w8, [x29, #-136]
   2176c:	ldur	w8, [x29, #-132]
   21770:	ldur	x9, [x29, #-32]
   21774:	ldur	x10, [x29, #-144]
   21778:	add	x11, x10, #0x1
   2177c:	stur	x11, [x29, #-144]
   21780:	ldrb	w12, [x9, x10]
   21784:	orr	w8, w12, w8, lsl #8
   21788:	stur	w8, [x29, #-132]
   2178c:	ldur	w8, [x29, #-136]
   21790:	lsr	w8, w8, #11
   21794:	ldur	x9, [x29, #-56]
   21798:	mov	x10, #0x6668                	// #26216
   2179c:	add	x9, x9, x10
   217a0:	ldr	w11, [sp, #108]
   217a4:	mov	w10, w11
   217a8:	mov	x12, #0x10                  	// #16
   217ac:	mul	x10, x12, x10
   217b0:	add	x9, x9, x10
   217b4:	ldr	w11, [sp, #132]
   217b8:	mov	w10, w11
   217bc:	ldrh	w11, [x9, x10, lsl #1]
   217c0:	mul	w8, w8, w11
   217c4:	stur	w8, [x29, #-148]
   217c8:	ldur	w8, [x29, #-132]
   217cc:	ldur	w11, [x29, #-148]
   217d0:	cmp	w8, w11
   217d4:	b.cs	21860 <lzma_mode_is_supported@@XZ_5.0+0x72f8>  // b.hs, b.nlast
   217d8:	ldur	w8, [x29, #-148]
   217dc:	stur	w8, [x29, #-136]
   217e0:	ldur	x9, [x29, #-56]
   217e4:	mov	x10, #0x6668                	// #26216
   217e8:	add	x9, x9, x10
   217ec:	ldr	w8, [sp, #108]
   217f0:	mov	w10, w8
   217f4:	mov	x11, #0x10                  	// #16
   217f8:	mul	x10, x11, x10
   217fc:	add	x9, x9, x10
   21800:	ldr	w8, [sp, #132]
   21804:	mov	w10, w8
   21808:	mov	x12, #0x2                   	// #2
   2180c:	ldrh	w8, [x9, x10, lsl #1]
   21810:	mov	w13, #0x800                 	// #2048
   21814:	subs	w8, w13, w8
   21818:	ldur	x9, [x29, #-56]
   2181c:	mov	x10, #0x6668                	// #26216
   21820:	add	x9, x9, x10
   21824:	ldr	w13, [sp, #108]
   21828:	mov	w10, w13
   2182c:	mul	x10, x11, x10
   21830:	add	x9, x9, x10
   21834:	ldr	w13, [sp, #132]
   21838:	mov	w10, w13
   2183c:	mul	x10, x12, x10
   21840:	add	x9, x9, x10
   21844:	ldrh	w13, [x9]
   21848:	add	w8, w13, w8, lsr #5
   2184c:	strh	w8, [x9]
   21850:	ldr	w8, [sp, #132]
   21854:	lsl	w8, w8, #1
   21858:	str	w8, [sp, #132]
   2185c:	b	218f8 <lzma_mode_is_supported@@XZ_5.0+0x7390>
   21860:	ldur	w8, [x29, #-148]
   21864:	ldur	w9, [x29, #-136]
   21868:	subs	w8, w9, w8
   2186c:	stur	w8, [x29, #-136]
   21870:	ldur	w8, [x29, #-148]
   21874:	ldur	w9, [x29, #-132]
   21878:	subs	w8, w9, w8
   2187c:	stur	w8, [x29, #-132]
   21880:	ldur	x10, [x29, #-56]
   21884:	mov	x11, #0x6668                	// #26216
   21888:	add	x10, x10, x11
   2188c:	ldr	w8, [sp, #108]
   21890:	mov	w11, w8
   21894:	mov	x12, #0x10                  	// #16
   21898:	mul	x11, x12, x11
   2189c:	add	x10, x10, x11
   218a0:	ldr	w8, [sp, #132]
   218a4:	mov	w11, w8
   218a8:	mov	x13, #0x2                   	// #2
   218ac:	ldrh	w8, [x10, x11, lsl #1]
   218b0:	ldur	x10, [x29, #-56]
   218b4:	mov	x11, #0x6668                	// #26216
   218b8:	add	x10, x10, x11
   218bc:	ldr	w9, [sp, #108]
   218c0:	mov	w11, w9
   218c4:	mul	x11, x12, x11
   218c8:	add	x10, x10, x11
   218cc:	ldr	w9, [sp, #132]
   218d0:	mov	w11, w9
   218d4:	mul	x11, x13, x11
   218d8:	add	x10, x10, x11
   218dc:	ldrh	w9, [x10]
   218e0:	subs	w8, w9, w8, asr #5
   218e4:	strh	w8, [x10]
   218e8:	ldr	w8, [sp, #132]
   218ec:	lsl	w8, w8, #1
   218f0:	add	w8, w8, #0x1
   218f4:	str	w8, [sp, #132]
   218f8:	ldur	w8, [x29, #-136]
   218fc:	mov	w9, #0x1000000             	// #16777216
   21900:	cmp	w8, w9
   21904:	b.cs	2196c <lzma_mode_is_supported@@XZ_5.0+0x7404>  // b.hs, b.nlast
   21908:	ldur	x8, [x29, #-144]
   2190c:	ldur	x9, [x29, #-48]
   21910:	cmp	x8, x9
   21914:	cset	w10, eq  // eq = none
   21918:	and	w10, w10, #0x1
   2191c:	mov	w0, w10
   21920:	sxtw	x8, w0
   21924:	cbz	x8, 21940 <lzma_mode_is_supported@@XZ_5.0+0x73d8>
   21928:	ldur	x8, [x29, #-56]
   2192c:	mov	x9, #0x6ea0                	// #28320
   21930:	add	x8, x8, x9
   21934:	mov	w10, #0x16                  	// #22
   21938:	str	w10, [x8]
   2193c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21940:	ldur	w8, [x29, #-136]
   21944:	lsl	w8, w8, #8
   21948:	stur	w8, [x29, #-136]
   2194c:	ldur	w8, [x29, #-132]
   21950:	ldur	x9, [x29, #-32]
   21954:	ldur	x10, [x29, #-144]
   21958:	add	x11, x10, #0x1
   2195c:	stur	x11, [x29, #-144]
   21960:	ldrb	w12, [x9, x10]
   21964:	orr	w8, w12, w8, lsl #8
   21968:	stur	w8, [x29, #-132]
   2196c:	ldur	w8, [x29, #-136]
   21970:	lsr	w8, w8, #11
   21974:	ldur	x9, [x29, #-56]
   21978:	mov	x10, #0x6668                	// #26216
   2197c:	add	x9, x9, x10
   21980:	ldr	w11, [sp, #108]
   21984:	mov	w10, w11
   21988:	mov	x12, #0x10                  	// #16
   2198c:	mul	x10, x12, x10
   21990:	add	x9, x9, x10
   21994:	ldr	w11, [sp, #132]
   21998:	mov	w10, w11
   2199c:	ldrh	w11, [x9, x10, lsl #1]
   219a0:	mul	w8, w8, w11
   219a4:	stur	w8, [x29, #-148]
   219a8:	ldur	w8, [x29, #-132]
   219ac:	ldur	w11, [x29, #-148]
   219b0:	cmp	w8, w11
   219b4:	b.cs	21a40 <lzma_mode_is_supported@@XZ_5.0+0x74d8>  // b.hs, b.nlast
   219b8:	ldur	w8, [x29, #-148]
   219bc:	stur	w8, [x29, #-136]
   219c0:	ldur	x9, [x29, #-56]
   219c4:	mov	x10, #0x6668                	// #26216
   219c8:	add	x9, x9, x10
   219cc:	ldr	w8, [sp, #108]
   219d0:	mov	w10, w8
   219d4:	mov	x11, #0x10                  	// #16
   219d8:	mul	x10, x11, x10
   219dc:	add	x9, x9, x10
   219e0:	ldr	w8, [sp, #132]
   219e4:	mov	w10, w8
   219e8:	mov	x12, #0x2                   	// #2
   219ec:	ldrh	w8, [x9, x10, lsl #1]
   219f0:	mov	w13, #0x800                 	// #2048
   219f4:	subs	w8, w13, w8
   219f8:	ldur	x9, [x29, #-56]
   219fc:	mov	x10, #0x6668                	// #26216
   21a00:	add	x9, x9, x10
   21a04:	ldr	w13, [sp, #108]
   21a08:	mov	w10, w13
   21a0c:	mul	x10, x11, x10
   21a10:	add	x9, x9, x10
   21a14:	ldr	w13, [sp, #132]
   21a18:	mov	w10, w13
   21a1c:	mul	x10, x12, x10
   21a20:	add	x9, x9, x10
   21a24:	ldrh	w13, [x9]
   21a28:	add	w8, w13, w8, lsr #5
   21a2c:	strh	w8, [x9]
   21a30:	ldr	w8, [sp, #132]
   21a34:	lsl	w8, w8, #1
   21a38:	str	w8, [sp, #132]
   21a3c:	b	21ad8 <lzma_mode_is_supported@@XZ_5.0+0x7570>
   21a40:	ldur	w8, [x29, #-148]
   21a44:	ldur	w9, [x29, #-136]
   21a48:	subs	w8, w9, w8
   21a4c:	stur	w8, [x29, #-136]
   21a50:	ldur	w8, [x29, #-148]
   21a54:	ldur	w9, [x29, #-132]
   21a58:	subs	w8, w9, w8
   21a5c:	stur	w8, [x29, #-132]
   21a60:	ldur	x10, [x29, #-56]
   21a64:	mov	x11, #0x6668                	// #26216
   21a68:	add	x10, x10, x11
   21a6c:	ldr	w8, [sp, #108]
   21a70:	mov	w11, w8
   21a74:	mov	x12, #0x10                  	// #16
   21a78:	mul	x11, x12, x11
   21a7c:	add	x10, x10, x11
   21a80:	ldr	w8, [sp, #132]
   21a84:	mov	w11, w8
   21a88:	mov	x13, #0x2                   	// #2
   21a8c:	ldrh	w8, [x10, x11, lsl #1]
   21a90:	ldur	x10, [x29, #-56]
   21a94:	mov	x11, #0x6668                	// #26216
   21a98:	add	x10, x10, x11
   21a9c:	ldr	w9, [sp, #108]
   21aa0:	mov	w11, w9
   21aa4:	mul	x11, x12, x11
   21aa8:	add	x10, x10, x11
   21aac:	ldr	w9, [sp, #132]
   21ab0:	mov	w11, w9
   21ab4:	mul	x11, x13, x11
   21ab8:	add	x10, x10, x11
   21abc:	ldrh	w9, [x10]
   21ac0:	subs	w8, w9, w8, asr #5
   21ac4:	strh	w8, [x10]
   21ac8:	ldr	w8, [sp, #132]
   21acc:	lsl	w8, w8, #1
   21ad0:	add	w8, w8, #0x1
   21ad4:	str	w8, [sp, #132]
   21ad8:	ldur	w8, [x29, #-136]
   21adc:	mov	w9, #0x1000000             	// #16777216
   21ae0:	cmp	w8, w9
   21ae4:	b.cs	21b4c <lzma_mode_is_supported@@XZ_5.0+0x75e4>  // b.hs, b.nlast
   21ae8:	ldur	x8, [x29, #-144]
   21aec:	ldur	x9, [x29, #-48]
   21af0:	cmp	x8, x9
   21af4:	cset	w10, eq  // eq = none
   21af8:	and	w10, w10, #0x1
   21afc:	mov	w0, w10
   21b00:	sxtw	x8, w0
   21b04:	cbz	x8, 21b20 <lzma_mode_is_supported@@XZ_5.0+0x75b8>
   21b08:	ldur	x8, [x29, #-56]
   21b0c:	mov	x9, #0x6ea0                	// #28320
   21b10:	add	x8, x8, x9
   21b14:	mov	w10, #0x17                  	// #23
   21b18:	str	w10, [x8]
   21b1c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21b20:	ldur	w8, [x29, #-136]
   21b24:	lsl	w8, w8, #8
   21b28:	stur	w8, [x29, #-136]
   21b2c:	ldur	w8, [x29, #-132]
   21b30:	ldur	x9, [x29, #-32]
   21b34:	ldur	x10, [x29, #-144]
   21b38:	add	x11, x10, #0x1
   21b3c:	stur	x11, [x29, #-144]
   21b40:	ldrb	w12, [x9, x10]
   21b44:	orr	w8, w12, w8, lsl #8
   21b48:	stur	w8, [x29, #-132]
   21b4c:	ldur	w8, [x29, #-136]
   21b50:	lsr	w8, w8, #11
   21b54:	ldur	x9, [x29, #-56]
   21b58:	mov	x10, #0x6668                	// #26216
   21b5c:	add	x9, x9, x10
   21b60:	ldr	w11, [sp, #108]
   21b64:	mov	w10, w11
   21b68:	mov	x12, #0x10                  	// #16
   21b6c:	mul	x10, x12, x10
   21b70:	add	x9, x9, x10
   21b74:	ldr	w11, [sp, #132]
   21b78:	mov	w10, w11
   21b7c:	ldrh	w11, [x9, x10, lsl #1]
   21b80:	mul	w8, w8, w11
   21b84:	stur	w8, [x29, #-148]
   21b88:	ldur	w8, [x29, #-132]
   21b8c:	ldur	w11, [x29, #-148]
   21b90:	cmp	w8, w11
   21b94:	b.cs	21c20 <lzma_mode_is_supported@@XZ_5.0+0x76b8>  // b.hs, b.nlast
   21b98:	ldur	w8, [x29, #-148]
   21b9c:	stur	w8, [x29, #-136]
   21ba0:	ldur	x9, [x29, #-56]
   21ba4:	mov	x10, #0x6668                	// #26216
   21ba8:	add	x9, x9, x10
   21bac:	ldr	w8, [sp, #108]
   21bb0:	mov	w10, w8
   21bb4:	mov	x11, #0x10                  	// #16
   21bb8:	mul	x10, x11, x10
   21bbc:	add	x9, x9, x10
   21bc0:	ldr	w8, [sp, #132]
   21bc4:	mov	w10, w8
   21bc8:	mov	x12, #0x2                   	// #2
   21bcc:	ldrh	w8, [x9, x10, lsl #1]
   21bd0:	mov	w13, #0x800                 	// #2048
   21bd4:	subs	w8, w13, w8
   21bd8:	ldur	x9, [x29, #-56]
   21bdc:	mov	x10, #0x6668                	// #26216
   21be0:	add	x9, x9, x10
   21be4:	ldr	w13, [sp, #108]
   21be8:	mov	w10, w13
   21bec:	mul	x10, x11, x10
   21bf0:	add	x9, x9, x10
   21bf4:	ldr	w13, [sp, #132]
   21bf8:	mov	w10, w13
   21bfc:	mul	x10, x12, x10
   21c00:	add	x9, x9, x10
   21c04:	ldrh	w13, [x9]
   21c08:	add	w8, w13, w8, lsr #5
   21c0c:	strh	w8, [x9]
   21c10:	ldr	w8, [sp, #132]
   21c14:	lsl	w8, w8, #1
   21c18:	str	w8, [sp, #132]
   21c1c:	b	21cb8 <lzma_mode_is_supported@@XZ_5.0+0x7750>
   21c20:	ldur	w8, [x29, #-148]
   21c24:	ldur	w9, [x29, #-136]
   21c28:	subs	w8, w9, w8
   21c2c:	stur	w8, [x29, #-136]
   21c30:	ldur	w8, [x29, #-148]
   21c34:	ldur	w9, [x29, #-132]
   21c38:	subs	w8, w9, w8
   21c3c:	stur	w8, [x29, #-132]
   21c40:	ldur	x10, [x29, #-56]
   21c44:	mov	x11, #0x6668                	// #26216
   21c48:	add	x10, x10, x11
   21c4c:	ldr	w8, [sp, #108]
   21c50:	mov	w11, w8
   21c54:	mov	x12, #0x10                  	// #16
   21c58:	mul	x11, x12, x11
   21c5c:	add	x10, x10, x11
   21c60:	ldr	w8, [sp, #132]
   21c64:	mov	w11, w8
   21c68:	mov	x13, #0x2                   	// #2
   21c6c:	ldrh	w8, [x10, x11, lsl #1]
   21c70:	ldur	x10, [x29, #-56]
   21c74:	mov	x11, #0x6668                	// #26216
   21c78:	add	x10, x10, x11
   21c7c:	ldr	w9, [sp, #108]
   21c80:	mov	w11, w9
   21c84:	mul	x11, x12, x11
   21c88:	add	x10, x10, x11
   21c8c:	ldr	w9, [sp, #132]
   21c90:	mov	w11, w9
   21c94:	mul	x11, x13, x11
   21c98:	add	x10, x10, x11
   21c9c:	ldrh	w9, [x10]
   21ca0:	subs	w8, w9, w8, asr #5
   21ca4:	strh	w8, [x10]
   21ca8:	ldr	w8, [sp, #132]
   21cac:	lsl	w8, w8, #1
   21cb0:	add	w8, w8, #0x1
   21cb4:	str	w8, [sp, #132]
   21cb8:	ldr	w8, [sp, #132]
   21cbc:	subs	w8, w8, #0x8
   21cc0:	add	w8, w8, #0x2
   21cc4:	str	w8, [sp, #120]
   21cc8:	b	23024 <lzma_mode_is_supported@@XZ_5.0+0x8abc>
   21ccc:	ldur	w8, [x29, #-148]
   21cd0:	ldur	w9, [x29, #-136]
   21cd4:	subs	w8, w9, w8
   21cd8:	stur	w8, [x29, #-136]
   21cdc:	ldur	w8, [x29, #-148]
   21ce0:	ldur	w9, [x29, #-132]
   21ce4:	subs	w8, w9, w8
   21ce8:	stur	w8, [x29, #-132]
   21cec:	ldur	x10, [x29, #-56]
   21cf0:	mov	x11, #0x6664                	// #26212
   21cf4:	add	x10, x10, x11
   21cf8:	ldrh	w8, [x10]
   21cfc:	ldur	x10, [x29, #-56]
   21d00:	add	x10, x10, x11
   21d04:	ldrh	w9, [x10]
   21d08:	subs	w8, w9, w8, asr #5
   21d0c:	strh	w8, [x10]
   21d10:	ldur	w8, [x29, #-136]
   21d14:	mov	w9, #0x1000000             	// #16777216
   21d18:	cmp	w8, w9
   21d1c:	b.cs	21d84 <lzma_mode_is_supported@@XZ_5.0+0x781c>  // b.hs, b.nlast
   21d20:	ldur	x8, [x29, #-144]
   21d24:	ldur	x9, [x29, #-48]
   21d28:	cmp	x8, x9
   21d2c:	cset	w10, eq  // eq = none
   21d30:	and	w10, w10, #0x1
   21d34:	mov	w0, w10
   21d38:	sxtw	x8, w0
   21d3c:	cbz	x8, 21d58 <lzma_mode_is_supported@@XZ_5.0+0x77f0>
   21d40:	ldur	x8, [x29, #-56]
   21d44:	mov	x9, #0x6ea0                	// #28320
   21d48:	add	x8, x8, x9
   21d4c:	mov	w10, #0x18                  	// #24
   21d50:	str	w10, [x8]
   21d54:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21d58:	ldur	w8, [x29, #-136]
   21d5c:	lsl	w8, w8, #8
   21d60:	stur	w8, [x29, #-136]
   21d64:	ldur	w8, [x29, #-132]
   21d68:	ldur	x9, [x29, #-32]
   21d6c:	ldur	x10, [x29, #-144]
   21d70:	add	x11, x10, #0x1
   21d74:	stur	x11, [x29, #-144]
   21d78:	ldrb	w12, [x9, x10]
   21d7c:	orr	w8, w12, w8, lsl #8
   21d80:	stur	w8, [x29, #-132]
   21d84:	ldur	w8, [x29, #-136]
   21d88:	lsr	w8, w8, #11
   21d8c:	ldur	x9, [x29, #-56]
   21d90:	mov	x10, #0x6666                	// #26214
   21d94:	add	x9, x9, x10
   21d98:	ldrh	w11, [x9]
   21d9c:	mul	w8, w8, w11
   21da0:	stur	w8, [x29, #-148]
   21da4:	ldur	w8, [x29, #-132]
   21da8:	ldur	w11, [x29, #-148]
   21dac:	cmp	w8, w11
   21db0:	b.cs	223a4 <lzma_mode_is_supported@@XZ_5.0+0x7e3c>  // b.hs, b.nlast
   21db4:	ldur	w8, [x29, #-148]
   21db8:	stur	w8, [x29, #-136]
   21dbc:	ldur	x9, [x29, #-56]
   21dc0:	mov	x10, #0x6666                	// #26214
   21dc4:	add	x9, x9, x10
   21dc8:	ldrh	w8, [x9]
   21dcc:	mov	w11, #0x800                 	// #2048
   21dd0:	subs	w8, w11, w8
   21dd4:	ldur	x9, [x29, #-56]
   21dd8:	mov	x10, #0x6666                	// #26214
   21ddc:	add	x9, x9, x10
   21de0:	ldrh	w11, [x9]
   21de4:	add	w8, w11, w8, lsr #5
   21de8:	strh	w8, [x9]
   21dec:	ldur	w8, [x29, #-136]
   21df0:	mov	w9, #0x1000000             	// #16777216
   21df4:	cmp	w8, w9
   21df8:	b.cs	21e60 <lzma_mode_is_supported@@XZ_5.0+0x78f8>  // b.hs, b.nlast
   21dfc:	ldur	x8, [x29, #-144]
   21e00:	ldur	x9, [x29, #-48]
   21e04:	cmp	x8, x9
   21e08:	cset	w10, eq  // eq = none
   21e0c:	and	w10, w10, #0x1
   21e10:	mov	w0, w10
   21e14:	sxtw	x8, w0
   21e18:	cbz	x8, 21e34 <lzma_mode_is_supported@@XZ_5.0+0x78cc>
   21e1c:	ldur	x8, [x29, #-56]
   21e20:	mov	x9, #0x6ea0                	// #28320
   21e24:	add	x8, x8, x9
   21e28:	mov	w10, #0x19                  	// #25
   21e2c:	str	w10, [x8]
   21e30:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   21e34:	ldur	w8, [x29, #-136]
   21e38:	lsl	w8, w8, #8
   21e3c:	stur	w8, [x29, #-136]
   21e40:	ldur	w8, [x29, #-132]
   21e44:	ldur	x9, [x29, #-32]
   21e48:	ldur	x10, [x29, #-144]
   21e4c:	add	x11, x10, #0x1
   21e50:	stur	x11, [x29, #-144]
   21e54:	ldrb	w12, [x9, x10]
   21e58:	orr	w8, w12, w8, lsl #8
   21e5c:	stur	w8, [x29, #-132]
   21e60:	ldur	w8, [x29, #-136]
   21e64:	lsr	w8, w8, #11
   21e68:	ldur	x9, [x29, #-56]
   21e6c:	mov	x10, #0x6768                	// #26472
   21e70:	add	x9, x9, x10
   21e74:	ldr	w11, [sp, #108]
   21e78:	mov	w10, w11
   21e7c:	mov	x12, #0x10                  	// #16
   21e80:	mul	x10, x12, x10
   21e84:	add	x9, x9, x10
   21e88:	ldr	w11, [sp, #132]
   21e8c:	mov	w10, w11
   21e90:	ldrh	w11, [x9, x10, lsl #1]
   21e94:	mul	w8, w8, w11
   21e98:	stur	w8, [x29, #-148]
   21e9c:	ldur	w8, [x29, #-132]
   21ea0:	ldur	w11, [x29, #-148]
   21ea4:	cmp	w8, w11
   21ea8:	b.cs	21f34 <lzma_mode_is_supported@@XZ_5.0+0x79cc>  // b.hs, b.nlast
   21eac:	ldur	w8, [x29, #-148]
   21eb0:	stur	w8, [x29, #-136]
   21eb4:	ldur	x9, [x29, #-56]
   21eb8:	mov	x10, #0x6768                	// #26472
   21ebc:	add	x9, x9, x10
   21ec0:	ldr	w8, [sp, #108]
   21ec4:	mov	w10, w8
   21ec8:	mov	x11, #0x10                  	// #16
   21ecc:	mul	x10, x11, x10
   21ed0:	add	x9, x9, x10
   21ed4:	ldr	w8, [sp, #132]
   21ed8:	mov	w10, w8
   21edc:	mov	x12, #0x2                   	// #2
   21ee0:	ldrh	w8, [x9, x10, lsl #1]
   21ee4:	mov	w13, #0x800                 	// #2048
   21ee8:	subs	w8, w13, w8
   21eec:	ldur	x9, [x29, #-56]
   21ef0:	mov	x10, #0x6768                	// #26472
   21ef4:	add	x9, x9, x10
   21ef8:	ldr	w13, [sp, #108]
   21efc:	mov	w10, w13
   21f00:	mul	x10, x11, x10
   21f04:	add	x9, x9, x10
   21f08:	ldr	w13, [sp, #132]
   21f0c:	mov	w10, w13
   21f10:	mul	x10, x12, x10
   21f14:	add	x9, x9, x10
   21f18:	ldrh	w13, [x9]
   21f1c:	add	w8, w13, w8, lsr #5
   21f20:	strh	w8, [x9]
   21f24:	ldr	w8, [sp, #132]
   21f28:	lsl	w8, w8, #1
   21f2c:	str	w8, [sp, #132]
   21f30:	b	21fcc <lzma_mode_is_supported@@XZ_5.0+0x7a64>
   21f34:	ldur	w8, [x29, #-148]
   21f38:	ldur	w9, [x29, #-136]
   21f3c:	subs	w8, w9, w8
   21f40:	stur	w8, [x29, #-136]
   21f44:	ldur	w8, [x29, #-148]
   21f48:	ldur	w9, [x29, #-132]
   21f4c:	subs	w8, w9, w8
   21f50:	stur	w8, [x29, #-132]
   21f54:	ldur	x10, [x29, #-56]
   21f58:	mov	x11, #0x6768                	// #26472
   21f5c:	add	x10, x10, x11
   21f60:	ldr	w8, [sp, #108]
   21f64:	mov	w11, w8
   21f68:	mov	x12, #0x10                  	// #16
   21f6c:	mul	x11, x12, x11
   21f70:	add	x10, x10, x11
   21f74:	ldr	w8, [sp, #132]
   21f78:	mov	w11, w8
   21f7c:	mov	x13, #0x2                   	// #2
   21f80:	ldrh	w8, [x10, x11, lsl #1]
   21f84:	ldur	x10, [x29, #-56]
   21f88:	mov	x11, #0x6768                	// #26472
   21f8c:	add	x10, x10, x11
   21f90:	ldr	w9, [sp, #108]
   21f94:	mov	w11, w9
   21f98:	mul	x11, x12, x11
   21f9c:	add	x10, x10, x11
   21fa0:	ldr	w9, [sp, #132]
   21fa4:	mov	w11, w9
   21fa8:	mul	x11, x13, x11
   21fac:	add	x10, x10, x11
   21fb0:	ldrh	w9, [x10]
   21fb4:	subs	w8, w9, w8, asr #5
   21fb8:	strh	w8, [x10]
   21fbc:	ldr	w8, [sp, #132]
   21fc0:	lsl	w8, w8, #1
   21fc4:	add	w8, w8, #0x1
   21fc8:	str	w8, [sp, #132]
   21fcc:	ldur	w8, [x29, #-136]
   21fd0:	mov	w9, #0x1000000             	// #16777216
   21fd4:	cmp	w8, w9
   21fd8:	b.cs	22040 <lzma_mode_is_supported@@XZ_5.0+0x7ad8>  // b.hs, b.nlast
   21fdc:	ldur	x8, [x29, #-144]
   21fe0:	ldur	x9, [x29, #-48]
   21fe4:	cmp	x8, x9
   21fe8:	cset	w10, eq  // eq = none
   21fec:	and	w10, w10, #0x1
   21ff0:	mov	w0, w10
   21ff4:	sxtw	x8, w0
   21ff8:	cbz	x8, 22014 <lzma_mode_is_supported@@XZ_5.0+0x7aac>
   21ffc:	ldur	x8, [x29, #-56]
   22000:	mov	x9, #0x6ea0                	// #28320
   22004:	add	x8, x8, x9
   22008:	mov	w10, #0x1a                  	// #26
   2200c:	str	w10, [x8]
   22010:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   22014:	ldur	w8, [x29, #-136]
   22018:	lsl	w8, w8, #8
   2201c:	stur	w8, [x29, #-136]
   22020:	ldur	w8, [x29, #-132]
   22024:	ldur	x9, [x29, #-32]
   22028:	ldur	x10, [x29, #-144]
   2202c:	add	x11, x10, #0x1
   22030:	stur	x11, [x29, #-144]
   22034:	ldrb	w12, [x9, x10]
   22038:	orr	w8, w12, w8, lsl #8
   2203c:	stur	w8, [x29, #-132]
   22040:	ldur	w8, [x29, #-136]
   22044:	lsr	w8, w8, #11
   22048:	ldur	x9, [x29, #-56]
   2204c:	mov	x10, #0x6768                	// #26472
   22050:	add	x9, x9, x10
   22054:	ldr	w11, [sp, #108]
   22058:	mov	w10, w11
   2205c:	mov	x12, #0x10                  	// #16
   22060:	mul	x10, x12, x10
   22064:	add	x9, x9, x10
   22068:	ldr	w11, [sp, #132]
   2206c:	mov	w10, w11
   22070:	ldrh	w11, [x9, x10, lsl #1]
   22074:	mul	w8, w8, w11
   22078:	stur	w8, [x29, #-148]
   2207c:	ldur	w8, [x29, #-132]
   22080:	ldur	w11, [x29, #-148]
   22084:	cmp	w8, w11
   22088:	b.cs	22114 <lzma_mode_is_supported@@XZ_5.0+0x7bac>  // b.hs, b.nlast
   2208c:	ldur	w8, [x29, #-148]
   22090:	stur	w8, [x29, #-136]
   22094:	ldur	x9, [x29, #-56]
   22098:	mov	x10, #0x6768                	// #26472
   2209c:	add	x9, x9, x10
   220a0:	ldr	w8, [sp, #108]
   220a4:	mov	w10, w8
   220a8:	mov	x11, #0x10                  	// #16
   220ac:	mul	x10, x11, x10
   220b0:	add	x9, x9, x10
   220b4:	ldr	w8, [sp, #132]
   220b8:	mov	w10, w8
   220bc:	mov	x12, #0x2                   	// #2
   220c0:	ldrh	w8, [x9, x10, lsl #1]
   220c4:	mov	w13, #0x800                 	// #2048
   220c8:	subs	w8, w13, w8
   220cc:	ldur	x9, [x29, #-56]
   220d0:	mov	x10, #0x6768                	// #26472
   220d4:	add	x9, x9, x10
   220d8:	ldr	w13, [sp, #108]
   220dc:	mov	w10, w13
   220e0:	mul	x10, x11, x10
   220e4:	add	x9, x9, x10
   220e8:	ldr	w13, [sp, #132]
   220ec:	mov	w10, w13
   220f0:	mul	x10, x12, x10
   220f4:	add	x9, x9, x10
   220f8:	ldrh	w13, [x9]
   220fc:	add	w8, w13, w8, lsr #5
   22100:	strh	w8, [x9]
   22104:	ldr	w8, [sp, #132]
   22108:	lsl	w8, w8, #1
   2210c:	str	w8, [sp, #132]
   22110:	b	221ac <lzma_mode_is_supported@@XZ_5.0+0x7c44>
   22114:	ldur	w8, [x29, #-148]
   22118:	ldur	w9, [x29, #-136]
   2211c:	subs	w8, w9, w8
   22120:	stur	w8, [x29, #-136]
   22124:	ldur	w8, [x29, #-148]
   22128:	ldur	w9, [x29, #-132]
   2212c:	subs	w8, w9, w8
   22130:	stur	w8, [x29, #-132]
   22134:	ldur	x10, [x29, #-56]
   22138:	mov	x11, #0x6768                	// #26472
   2213c:	add	x10, x10, x11
   22140:	ldr	w8, [sp, #108]
   22144:	mov	w11, w8
   22148:	mov	x12, #0x10                  	// #16
   2214c:	mul	x11, x12, x11
   22150:	add	x10, x10, x11
   22154:	ldr	w8, [sp, #132]
   22158:	mov	w11, w8
   2215c:	mov	x13, #0x2                   	// #2
   22160:	ldrh	w8, [x10, x11, lsl #1]
   22164:	ldur	x10, [x29, #-56]
   22168:	mov	x11, #0x6768                	// #26472
   2216c:	add	x10, x10, x11
   22170:	ldr	w9, [sp, #108]
   22174:	mov	w11, w9
   22178:	mul	x11, x12, x11
   2217c:	add	x10, x10, x11
   22180:	ldr	w9, [sp, #132]
   22184:	mov	w11, w9
   22188:	mul	x11, x13, x11
   2218c:	add	x10, x10, x11
   22190:	ldrh	w9, [x10]
   22194:	subs	w8, w9, w8, asr #5
   22198:	strh	w8, [x10]
   2219c:	ldr	w8, [sp, #132]
   221a0:	lsl	w8, w8, #1
   221a4:	add	w8, w8, #0x1
   221a8:	str	w8, [sp, #132]
   221ac:	ldur	w8, [x29, #-136]
   221b0:	mov	w9, #0x1000000             	// #16777216
   221b4:	cmp	w8, w9
   221b8:	b.cs	22220 <lzma_mode_is_supported@@XZ_5.0+0x7cb8>  // b.hs, b.nlast
   221bc:	ldur	x8, [x29, #-144]
   221c0:	ldur	x9, [x29, #-48]
   221c4:	cmp	x8, x9
   221c8:	cset	w10, eq  // eq = none
   221cc:	and	w10, w10, #0x1
   221d0:	mov	w0, w10
   221d4:	sxtw	x8, w0
   221d8:	cbz	x8, 221f4 <lzma_mode_is_supported@@XZ_5.0+0x7c8c>
   221dc:	ldur	x8, [x29, #-56]
   221e0:	mov	x9, #0x6ea0                	// #28320
   221e4:	add	x8, x8, x9
   221e8:	mov	w10, #0x1b                  	// #27
   221ec:	str	w10, [x8]
   221f0:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   221f4:	ldur	w8, [x29, #-136]
   221f8:	lsl	w8, w8, #8
   221fc:	stur	w8, [x29, #-136]
   22200:	ldur	w8, [x29, #-132]
   22204:	ldur	x9, [x29, #-32]
   22208:	ldur	x10, [x29, #-144]
   2220c:	add	x11, x10, #0x1
   22210:	stur	x11, [x29, #-144]
   22214:	ldrb	w12, [x9, x10]
   22218:	orr	w8, w12, w8, lsl #8
   2221c:	stur	w8, [x29, #-132]
   22220:	ldur	w8, [x29, #-136]
   22224:	lsr	w8, w8, #11
   22228:	ldur	x9, [x29, #-56]
   2222c:	mov	x10, #0x6768                	// #26472
   22230:	add	x9, x9, x10
   22234:	ldr	w11, [sp, #108]
   22238:	mov	w10, w11
   2223c:	mov	x12, #0x10                  	// #16
   22240:	mul	x10, x12, x10
   22244:	add	x9, x9, x10
   22248:	ldr	w11, [sp, #132]
   2224c:	mov	w10, w11
   22250:	ldrh	w11, [x9, x10, lsl #1]
   22254:	mul	w8, w8, w11
   22258:	stur	w8, [x29, #-148]
   2225c:	ldur	w8, [x29, #-132]
   22260:	ldur	w11, [x29, #-148]
   22264:	cmp	w8, w11
   22268:	b.cs	222f4 <lzma_mode_is_supported@@XZ_5.0+0x7d8c>  // b.hs, b.nlast
   2226c:	ldur	w8, [x29, #-148]
   22270:	stur	w8, [x29, #-136]
   22274:	ldur	x9, [x29, #-56]
   22278:	mov	x10, #0x6768                	// #26472
   2227c:	add	x9, x9, x10
   22280:	ldr	w8, [sp, #108]
   22284:	mov	w10, w8
   22288:	mov	x11, #0x10                  	// #16
   2228c:	mul	x10, x11, x10
   22290:	add	x9, x9, x10
   22294:	ldr	w8, [sp, #132]
   22298:	mov	w10, w8
   2229c:	mov	x12, #0x2                   	// #2
   222a0:	ldrh	w8, [x9, x10, lsl #1]
   222a4:	mov	w13, #0x800                 	// #2048
   222a8:	subs	w8, w13, w8
   222ac:	ldur	x9, [x29, #-56]
   222b0:	mov	x10, #0x6768                	// #26472
   222b4:	add	x9, x9, x10
   222b8:	ldr	w13, [sp, #108]
   222bc:	mov	w10, w13
   222c0:	mul	x10, x11, x10
   222c4:	add	x9, x9, x10
   222c8:	ldr	w13, [sp, #132]
   222cc:	mov	w10, w13
   222d0:	mul	x10, x12, x10
   222d4:	add	x9, x9, x10
   222d8:	ldrh	w13, [x9]
   222dc:	add	w8, w13, w8, lsr #5
   222e0:	strh	w8, [x9]
   222e4:	ldr	w8, [sp, #132]
   222e8:	lsl	w8, w8, #1
   222ec:	str	w8, [sp, #132]
   222f0:	b	2238c <lzma_mode_is_supported@@XZ_5.0+0x7e24>
   222f4:	ldur	w8, [x29, #-148]
   222f8:	ldur	w9, [x29, #-136]
   222fc:	subs	w8, w9, w8
   22300:	stur	w8, [x29, #-136]
   22304:	ldur	w8, [x29, #-148]
   22308:	ldur	w9, [x29, #-132]
   2230c:	subs	w8, w9, w8
   22310:	stur	w8, [x29, #-132]
   22314:	ldur	x10, [x29, #-56]
   22318:	mov	x11, #0x6768                	// #26472
   2231c:	add	x10, x10, x11
   22320:	ldr	w8, [sp, #108]
   22324:	mov	w11, w8
   22328:	mov	x12, #0x10                  	// #16
   2232c:	mul	x11, x12, x11
   22330:	add	x10, x10, x11
   22334:	ldr	w8, [sp, #132]
   22338:	mov	w11, w8
   2233c:	mov	x13, #0x2                   	// #2
   22340:	ldrh	w8, [x10, x11, lsl #1]
   22344:	ldur	x10, [x29, #-56]
   22348:	mov	x11, #0x6768                	// #26472
   2234c:	add	x10, x10, x11
   22350:	ldr	w9, [sp, #108]
   22354:	mov	w11, w9
   22358:	mul	x11, x12, x11
   2235c:	add	x10, x10, x11
   22360:	ldr	w9, [sp, #132]
   22364:	mov	w11, w9
   22368:	mul	x11, x13, x11
   2236c:	add	x10, x10, x11
   22370:	ldrh	w9, [x10]
   22374:	subs	w8, w9, w8, asr #5
   22378:	strh	w8, [x10]
   2237c:	ldr	w8, [sp, #132]
   22380:	lsl	w8, w8, #1
   22384:	add	w8, w8, #0x1
   22388:	str	w8, [sp, #132]
   2238c:	ldr	w8, [sp, #132]
   22390:	subs	w8, w8, #0x8
   22394:	add	w8, w8, #0x2
   22398:	add	w8, w8, #0x8
   2239c:	str	w8, [sp, #120]
   223a0:	b	23024 <lzma_mode_is_supported@@XZ_5.0+0x8abc>
   223a4:	ldur	w8, [x29, #-148]
   223a8:	ldur	w9, [x29, #-136]
   223ac:	subs	w8, w9, w8
   223b0:	stur	w8, [x29, #-136]
   223b4:	ldur	w8, [x29, #-148]
   223b8:	ldur	w9, [x29, #-132]
   223bc:	subs	w8, w9, w8
   223c0:	stur	w8, [x29, #-132]
   223c4:	ldur	x10, [x29, #-56]
   223c8:	mov	x11, #0x6666                	// #26214
   223cc:	add	x10, x10, x11
   223d0:	ldrh	w8, [x10]
   223d4:	ldur	x10, [x29, #-56]
   223d8:	mov	x11, #0x6666                	// #26214
   223dc:	add	x10, x10, x11
   223e0:	ldrh	w9, [x10]
   223e4:	subs	w8, w9, w8, asr #5
   223e8:	strh	w8, [x10]
   223ec:	ldur	w8, [x29, #-136]
   223f0:	mov	w9, #0x1000000             	// #16777216
   223f4:	cmp	w8, w9
   223f8:	b.cs	22460 <lzma_mode_is_supported@@XZ_5.0+0x7ef8>  // b.hs, b.nlast
   223fc:	ldur	x8, [x29, #-144]
   22400:	ldur	x9, [x29, #-48]
   22404:	cmp	x8, x9
   22408:	cset	w10, eq  // eq = none
   2240c:	and	w10, w10, #0x1
   22410:	mov	w0, w10
   22414:	sxtw	x8, w0
   22418:	cbz	x8, 22434 <lzma_mode_is_supported@@XZ_5.0+0x7ecc>
   2241c:	ldur	x8, [x29, #-56]
   22420:	mov	x9, #0x6ea0                	// #28320
   22424:	add	x8, x8, x9
   22428:	mov	w10, #0x1c                  	// #28
   2242c:	str	w10, [x8]
   22430:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   22434:	ldur	w8, [x29, #-136]
   22438:	lsl	w8, w8, #8
   2243c:	stur	w8, [x29, #-136]
   22440:	ldur	w8, [x29, #-132]
   22444:	ldur	x9, [x29, #-32]
   22448:	ldur	x10, [x29, #-144]
   2244c:	add	x11, x10, #0x1
   22450:	stur	x11, [x29, #-144]
   22454:	ldrb	w12, [x9, x10]
   22458:	orr	w8, w12, w8, lsl #8
   2245c:	stur	w8, [x29, #-132]
   22460:	ldur	w8, [x29, #-136]
   22464:	lsr	w8, w8, #11
   22468:	ldur	x9, [x29, #-56]
   2246c:	mov	x10, #0x6868                	// #26728
   22470:	add	x9, x9, x10
   22474:	ldr	w11, [sp, #132]
   22478:	mov	w10, w11
   2247c:	ldrh	w11, [x9, x10, lsl #1]
   22480:	mul	w8, w8, w11
   22484:	stur	w8, [x29, #-148]
   22488:	ldur	w8, [x29, #-132]
   2248c:	ldur	w11, [x29, #-148]
   22490:	cmp	w8, w11
   22494:	b.cs	224fc <lzma_mode_is_supported@@XZ_5.0+0x7f94>  // b.hs, b.nlast
   22498:	ldur	w8, [x29, #-148]
   2249c:	stur	w8, [x29, #-136]
   224a0:	ldur	x9, [x29, #-56]
   224a4:	mov	x10, #0x6868                	// #26728
   224a8:	add	x9, x9, x10
   224ac:	ldr	w8, [sp, #132]
   224b0:	mov	w10, w8
   224b4:	mov	x11, #0x2                   	// #2
   224b8:	ldrh	w8, [x9, x10, lsl #1]
   224bc:	mov	w12, #0x800                 	// #2048
   224c0:	subs	w8, w12, w8
   224c4:	ldur	x9, [x29, #-56]
   224c8:	mov	x10, #0x6868                	// #26728
   224cc:	add	x9, x9, x10
   224d0:	ldr	w12, [sp, #132]
   224d4:	mov	w10, w12
   224d8:	mul	x10, x11, x10
   224dc:	add	x9, x9, x10
   224e0:	ldrh	w12, [x9]
   224e4:	add	w8, w12, w8, lsr #5
   224e8:	strh	w8, [x9]
   224ec:	ldr	w8, [sp, #132]
   224f0:	lsl	w8, w8, #1
   224f4:	str	w8, [sp, #132]
   224f8:	b	22570 <lzma_mode_is_supported@@XZ_5.0+0x8008>
   224fc:	ldur	w8, [x29, #-148]
   22500:	ldur	w9, [x29, #-136]
   22504:	subs	w8, w9, w8
   22508:	stur	w8, [x29, #-136]
   2250c:	ldur	w8, [x29, #-148]
   22510:	ldur	w9, [x29, #-132]
   22514:	subs	w8, w9, w8
   22518:	stur	w8, [x29, #-132]
   2251c:	ldur	x10, [x29, #-56]
   22520:	mov	x11, #0x6868                	// #26728
   22524:	add	x10, x10, x11
   22528:	ldr	w8, [sp, #132]
   2252c:	mov	w11, w8
   22530:	mov	x12, #0x2                   	// #2
   22534:	ldrh	w8, [x10, x11, lsl #1]
   22538:	ldur	x10, [x29, #-56]
   2253c:	mov	x11, #0x6868                	// #26728
   22540:	add	x10, x10, x11
   22544:	ldr	w9, [sp, #132]
   22548:	mov	w11, w9
   2254c:	mul	x11, x12, x11
   22550:	add	x10, x10, x11
   22554:	ldrh	w9, [x10]
   22558:	subs	w8, w9, w8, asr #5
   2255c:	strh	w8, [x10]
   22560:	ldr	w8, [sp, #132]
   22564:	lsl	w8, w8, #1
   22568:	add	w8, w8, #0x1
   2256c:	str	w8, [sp, #132]
   22570:	ldur	w8, [x29, #-136]
   22574:	mov	w9, #0x1000000             	// #16777216
   22578:	cmp	w8, w9
   2257c:	b.cs	225e4 <lzma_mode_is_supported@@XZ_5.0+0x807c>  // b.hs, b.nlast
   22580:	ldur	x8, [x29, #-144]
   22584:	ldur	x9, [x29, #-48]
   22588:	cmp	x8, x9
   2258c:	cset	w10, eq  // eq = none
   22590:	and	w10, w10, #0x1
   22594:	mov	w0, w10
   22598:	sxtw	x8, w0
   2259c:	cbz	x8, 225b8 <lzma_mode_is_supported@@XZ_5.0+0x8050>
   225a0:	ldur	x8, [x29, #-56]
   225a4:	mov	x9, #0x6ea0                	// #28320
   225a8:	add	x8, x8, x9
   225ac:	mov	w10, #0x1d                  	// #29
   225b0:	str	w10, [x8]
   225b4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   225b8:	ldur	w8, [x29, #-136]
   225bc:	lsl	w8, w8, #8
   225c0:	stur	w8, [x29, #-136]
   225c4:	ldur	w8, [x29, #-132]
   225c8:	ldur	x9, [x29, #-32]
   225cc:	ldur	x10, [x29, #-144]
   225d0:	add	x11, x10, #0x1
   225d4:	stur	x11, [x29, #-144]
   225d8:	ldrb	w12, [x9, x10]
   225dc:	orr	w8, w12, w8, lsl #8
   225e0:	stur	w8, [x29, #-132]
   225e4:	ldur	w8, [x29, #-136]
   225e8:	lsr	w8, w8, #11
   225ec:	ldur	x9, [x29, #-56]
   225f0:	mov	x10, #0x6868                	// #26728
   225f4:	add	x9, x9, x10
   225f8:	ldr	w11, [sp, #132]
   225fc:	mov	w10, w11
   22600:	ldrh	w11, [x9, x10, lsl #1]
   22604:	mul	w8, w8, w11
   22608:	stur	w8, [x29, #-148]
   2260c:	ldur	w8, [x29, #-132]
   22610:	ldur	w11, [x29, #-148]
   22614:	cmp	w8, w11
   22618:	b.cs	22680 <lzma_mode_is_supported@@XZ_5.0+0x8118>  // b.hs, b.nlast
   2261c:	ldur	w8, [x29, #-148]
   22620:	stur	w8, [x29, #-136]
   22624:	ldur	x9, [x29, #-56]
   22628:	mov	x10, #0x6868                	// #26728
   2262c:	add	x9, x9, x10
   22630:	ldr	w8, [sp, #132]
   22634:	mov	w10, w8
   22638:	mov	x11, #0x2                   	// #2
   2263c:	ldrh	w8, [x9, x10, lsl #1]
   22640:	mov	w12, #0x800                 	// #2048
   22644:	subs	w8, w12, w8
   22648:	ldur	x9, [x29, #-56]
   2264c:	mov	x10, #0x6868                	// #26728
   22650:	add	x9, x9, x10
   22654:	ldr	w12, [sp, #132]
   22658:	mov	w10, w12
   2265c:	mul	x10, x11, x10
   22660:	add	x9, x9, x10
   22664:	ldrh	w12, [x9]
   22668:	add	w8, w12, w8, lsr #5
   2266c:	strh	w8, [x9]
   22670:	ldr	w8, [sp, #132]
   22674:	lsl	w8, w8, #1
   22678:	str	w8, [sp, #132]
   2267c:	b	226f4 <lzma_mode_is_supported@@XZ_5.0+0x818c>
   22680:	ldur	w8, [x29, #-148]
   22684:	ldur	w9, [x29, #-136]
   22688:	subs	w8, w9, w8
   2268c:	stur	w8, [x29, #-136]
   22690:	ldur	w8, [x29, #-148]
   22694:	ldur	w9, [x29, #-132]
   22698:	subs	w8, w9, w8
   2269c:	stur	w8, [x29, #-132]
   226a0:	ldur	x10, [x29, #-56]
   226a4:	mov	x11, #0x6868                	// #26728
   226a8:	add	x10, x10, x11
   226ac:	ldr	w8, [sp, #132]
   226b0:	mov	w11, w8
   226b4:	mov	x12, #0x2                   	// #2
   226b8:	ldrh	w8, [x10, x11, lsl #1]
   226bc:	ldur	x10, [x29, #-56]
   226c0:	mov	x11, #0x6868                	// #26728
   226c4:	add	x10, x10, x11
   226c8:	ldr	w9, [sp, #132]
   226cc:	mov	w11, w9
   226d0:	mul	x11, x12, x11
   226d4:	add	x10, x10, x11
   226d8:	ldrh	w9, [x10]
   226dc:	subs	w8, w9, w8, asr #5
   226e0:	strh	w8, [x10]
   226e4:	ldr	w8, [sp, #132]
   226e8:	lsl	w8, w8, #1
   226ec:	add	w8, w8, #0x1
   226f0:	str	w8, [sp, #132]
   226f4:	ldur	w8, [x29, #-136]
   226f8:	mov	w9, #0x1000000             	// #16777216
   226fc:	cmp	w8, w9
   22700:	b.cs	22768 <lzma_mode_is_supported@@XZ_5.0+0x8200>  // b.hs, b.nlast
   22704:	ldur	x8, [x29, #-144]
   22708:	ldur	x9, [x29, #-48]
   2270c:	cmp	x8, x9
   22710:	cset	w10, eq  // eq = none
   22714:	and	w10, w10, #0x1
   22718:	mov	w0, w10
   2271c:	sxtw	x8, w0
   22720:	cbz	x8, 2273c <lzma_mode_is_supported@@XZ_5.0+0x81d4>
   22724:	ldur	x8, [x29, #-56]
   22728:	mov	x9, #0x6ea0                	// #28320
   2272c:	add	x8, x8, x9
   22730:	mov	w10, #0x1e                  	// #30
   22734:	str	w10, [x8]
   22738:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2273c:	ldur	w8, [x29, #-136]
   22740:	lsl	w8, w8, #8
   22744:	stur	w8, [x29, #-136]
   22748:	ldur	w8, [x29, #-132]
   2274c:	ldur	x9, [x29, #-32]
   22750:	ldur	x10, [x29, #-144]
   22754:	add	x11, x10, #0x1
   22758:	stur	x11, [x29, #-144]
   2275c:	ldrb	w12, [x9, x10]
   22760:	orr	w8, w12, w8, lsl #8
   22764:	stur	w8, [x29, #-132]
   22768:	ldur	w8, [x29, #-136]
   2276c:	lsr	w8, w8, #11
   22770:	ldur	x9, [x29, #-56]
   22774:	mov	x10, #0x6868                	// #26728
   22778:	add	x9, x9, x10
   2277c:	ldr	w11, [sp, #132]
   22780:	mov	w10, w11
   22784:	ldrh	w11, [x9, x10, lsl #1]
   22788:	mul	w8, w8, w11
   2278c:	stur	w8, [x29, #-148]
   22790:	ldur	w8, [x29, #-132]
   22794:	ldur	w11, [x29, #-148]
   22798:	cmp	w8, w11
   2279c:	b.cs	22804 <lzma_mode_is_supported@@XZ_5.0+0x829c>  // b.hs, b.nlast
   227a0:	ldur	w8, [x29, #-148]
   227a4:	stur	w8, [x29, #-136]
   227a8:	ldur	x9, [x29, #-56]
   227ac:	mov	x10, #0x6868                	// #26728
   227b0:	add	x9, x9, x10
   227b4:	ldr	w8, [sp, #132]
   227b8:	mov	w10, w8
   227bc:	mov	x11, #0x2                   	// #2
   227c0:	ldrh	w8, [x9, x10, lsl #1]
   227c4:	mov	w12, #0x800                 	// #2048
   227c8:	subs	w8, w12, w8
   227cc:	ldur	x9, [x29, #-56]
   227d0:	mov	x10, #0x6868                	// #26728
   227d4:	add	x9, x9, x10
   227d8:	ldr	w12, [sp, #132]
   227dc:	mov	w10, w12
   227e0:	mul	x10, x11, x10
   227e4:	add	x9, x9, x10
   227e8:	ldrh	w12, [x9]
   227ec:	add	w8, w12, w8, lsr #5
   227f0:	strh	w8, [x9]
   227f4:	ldr	w8, [sp, #132]
   227f8:	lsl	w8, w8, #1
   227fc:	str	w8, [sp, #132]
   22800:	b	22878 <lzma_mode_is_supported@@XZ_5.0+0x8310>
   22804:	ldur	w8, [x29, #-148]
   22808:	ldur	w9, [x29, #-136]
   2280c:	subs	w8, w9, w8
   22810:	stur	w8, [x29, #-136]
   22814:	ldur	w8, [x29, #-148]
   22818:	ldur	w9, [x29, #-132]
   2281c:	subs	w8, w9, w8
   22820:	stur	w8, [x29, #-132]
   22824:	ldur	x10, [x29, #-56]
   22828:	mov	x11, #0x6868                	// #26728
   2282c:	add	x10, x10, x11
   22830:	ldr	w8, [sp, #132]
   22834:	mov	w11, w8
   22838:	mov	x12, #0x2                   	// #2
   2283c:	ldrh	w8, [x10, x11, lsl #1]
   22840:	ldur	x10, [x29, #-56]
   22844:	mov	x11, #0x6868                	// #26728
   22848:	add	x10, x10, x11
   2284c:	ldr	w9, [sp, #132]
   22850:	mov	w11, w9
   22854:	mul	x11, x12, x11
   22858:	add	x10, x10, x11
   2285c:	ldrh	w9, [x10]
   22860:	subs	w8, w9, w8, asr #5
   22864:	strh	w8, [x10]
   22868:	ldr	w8, [sp, #132]
   2286c:	lsl	w8, w8, #1
   22870:	add	w8, w8, #0x1
   22874:	str	w8, [sp, #132]
   22878:	ldur	w8, [x29, #-136]
   2287c:	mov	w9, #0x1000000             	// #16777216
   22880:	cmp	w8, w9
   22884:	b.cs	228ec <lzma_mode_is_supported@@XZ_5.0+0x8384>  // b.hs, b.nlast
   22888:	ldur	x8, [x29, #-144]
   2288c:	ldur	x9, [x29, #-48]
   22890:	cmp	x8, x9
   22894:	cset	w10, eq  // eq = none
   22898:	and	w10, w10, #0x1
   2289c:	mov	w0, w10
   228a0:	sxtw	x8, w0
   228a4:	cbz	x8, 228c0 <lzma_mode_is_supported@@XZ_5.0+0x8358>
   228a8:	ldur	x8, [x29, #-56]
   228ac:	mov	x9, #0x6ea0                	// #28320
   228b0:	add	x8, x8, x9
   228b4:	mov	w10, #0x1f                  	// #31
   228b8:	str	w10, [x8]
   228bc:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   228c0:	ldur	w8, [x29, #-136]
   228c4:	lsl	w8, w8, #8
   228c8:	stur	w8, [x29, #-136]
   228cc:	ldur	w8, [x29, #-132]
   228d0:	ldur	x9, [x29, #-32]
   228d4:	ldur	x10, [x29, #-144]
   228d8:	add	x11, x10, #0x1
   228dc:	stur	x11, [x29, #-144]
   228e0:	ldrb	w12, [x9, x10]
   228e4:	orr	w8, w12, w8, lsl #8
   228e8:	stur	w8, [x29, #-132]
   228ec:	ldur	w8, [x29, #-136]
   228f0:	lsr	w8, w8, #11
   228f4:	ldur	x9, [x29, #-56]
   228f8:	mov	x10, #0x6868                	// #26728
   228fc:	add	x9, x9, x10
   22900:	ldr	w11, [sp, #132]
   22904:	mov	w10, w11
   22908:	ldrh	w11, [x9, x10, lsl #1]
   2290c:	mul	w8, w8, w11
   22910:	stur	w8, [x29, #-148]
   22914:	ldur	w8, [x29, #-132]
   22918:	ldur	w11, [x29, #-148]
   2291c:	cmp	w8, w11
   22920:	b.cs	22988 <lzma_mode_is_supported@@XZ_5.0+0x8420>  // b.hs, b.nlast
   22924:	ldur	w8, [x29, #-148]
   22928:	stur	w8, [x29, #-136]
   2292c:	ldur	x9, [x29, #-56]
   22930:	mov	x10, #0x6868                	// #26728
   22934:	add	x9, x9, x10
   22938:	ldr	w8, [sp, #132]
   2293c:	mov	w10, w8
   22940:	mov	x11, #0x2                   	// #2
   22944:	ldrh	w8, [x9, x10, lsl #1]
   22948:	mov	w12, #0x800                 	// #2048
   2294c:	subs	w8, w12, w8
   22950:	ldur	x9, [x29, #-56]
   22954:	mov	x10, #0x6868                	// #26728
   22958:	add	x9, x9, x10
   2295c:	ldr	w12, [sp, #132]
   22960:	mov	w10, w12
   22964:	mul	x10, x11, x10
   22968:	add	x9, x9, x10
   2296c:	ldrh	w12, [x9]
   22970:	add	w8, w12, w8, lsr #5
   22974:	strh	w8, [x9]
   22978:	ldr	w8, [sp, #132]
   2297c:	lsl	w8, w8, #1
   22980:	str	w8, [sp, #132]
   22984:	b	229fc <lzma_mode_is_supported@@XZ_5.0+0x8494>
   22988:	ldur	w8, [x29, #-148]
   2298c:	ldur	w9, [x29, #-136]
   22990:	subs	w8, w9, w8
   22994:	stur	w8, [x29, #-136]
   22998:	ldur	w8, [x29, #-148]
   2299c:	ldur	w9, [x29, #-132]
   229a0:	subs	w8, w9, w8
   229a4:	stur	w8, [x29, #-132]
   229a8:	ldur	x10, [x29, #-56]
   229ac:	mov	x11, #0x6868                	// #26728
   229b0:	add	x10, x10, x11
   229b4:	ldr	w8, [sp, #132]
   229b8:	mov	w11, w8
   229bc:	mov	x12, #0x2                   	// #2
   229c0:	ldrh	w8, [x10, x11, lsl #1]
   229c4:	ldur	x10, [x29, #-56]
   229c8:	mov	x11, #0x6868                	// #26728
   229cc:	add	x10, x10, x11
   229d0:	ldr	w9, [sp, #132]
   229d4:	mov	w11, w9
   229d8:	mul	x11, x12, x11
   229dc:	add	x10, x10, x11
   229e0:	ldrh	w9, [x10]
   229e4:	subs	w8, w9, w8, asr #5
   229e8:	strh	w8, [x10]
   229ec:	ldr	w8, [sp, #132]
   229f0:	lsl	w8, w8, #1
   229f4:	add	w8, w8, #0x1
   229f8:	str	w8, [sp, #132]
   229fc:	ldur	w8, [x29, #-136]
   22a00:	mov	w9, #0x1000000             	// #16777216
   22a04:	cmp	w8, w9
   22a08:	b.cs	22a70 <lzma_mode_is_supported@@XZ_5.0+0x8508>  // b.hs, b.nlast
   22a0c:	ldur	x8, [x29, #-144]
   22a10:	ldur	x9, [x29, #-48]
   22a14:	cmp	x8, x9
   22a18:	cset	w10, eq  // eq = none
   22a1c:	and	w10, w10, #0x1
   22a20:	mov	w0, w10
   22a24:	sxtw	x8, w0
   22a28:	cbz	x8, 22a44 <lzma_mode_is_supported@@XZ_5.0+0x84dc>
   22a2c:	ldur	x8, [x29, #-56]
   22a30:	mov	x9, #0x6ea0                	// #28320
   22a34:	add	x8, x8, x9
   22a38:	mov	w10, #0x20                  	// #32
   22a3c:	str	w10, [x8]
   22a40:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   22a44:	ldur	w8, [x29, #-136]
   22a48:	lsl	w8, w8, #8
   22a4c:	stur	w8, [x29, #-136]
   22a50:	ldur	w8, [x29, #-132]
   22a54:	ldur	x9, [x29, #-32]
   22a58:	ldur	x10, [x29, #-144]
   22a5c:	add	x11, x10, #0x1
   22a60:	stur	x11, [x29, #-144]
   22a64:	ldrb	w12, [x9, x10]
   22a68:	orr	w8, w12, w8, lsl #8
   22a6c:	stur	w8, [x29, #-132]
   22a70:	ldur	w8, [x29, #-136]
   22a74:	lsr	w8, w8, #11
   22a78:	ldur	x9, [x29, #-56]
   22a7c:	mov	x10, #0x6868                	// #26728
   22a80:	add	x9, x9, x10
   22a84:	ldr	w11, [sp, #132]
   22a88:	mov	w10, w11
   22a8c:	ldrh	w11, [x9, x10, lsl #1]
   22a90:	mul	w8, w8, w11
   22a94:	stur	w8, [x29, #-148]
   22a98:	ldur	w8, [x29, #-132]
   22a9c:	ldur	w11, [x29, #-148]
   22aa0:	cmp	w8, w11
   22aa4:	b.cs	22b0c <lzma_mode_is_supported@@XZ_5.0+0x85a4>  // b.hs, b.nlast
   22aa8:	ldur	w8, [x29, #-148]
   22aac:	stur	w8, [x29, #-136]
   22ab0:	ldur	x9, [x29, #-56]
   22ab4:	mov	x10, #0x6868                	// #26728
   22ab8:	add	x9, x9, x10
   22abc:	ldr	w8, [sp, #132]
   22ac0:	mov	w10, w8
   22ac4:	mov	x11, #0x2                   	// #2
   22ac8:	ldrh	w8, [x9, x10, lsl #1]
   22acc:	mov	w12, #0x800                 	// #2048
   22ad0:	subs	w8, w12, w8
   22ad4:	ldur	x9, [x29, #-56]
   22ad8:	mov	x10, #0x6868                	// #26728
   22adc:	add	x9, x9, x10
   22ae0:	ldr	w12, [sp, #132]
   22ae4:	mov	w10, w12
   22ae8:	mul	x10, x11, x10
   22aec:	add	x9, x9, x10
   22af0:	ldrh	w12, [x9]
   22af4:	add	w8, w12, w8, lsr #5
   22af8:	strh	w8, [x9]
   22afc:	ldr	w8, [sp, #132]
   22b00:	lsl	w8, w8, #1
   22b04:	str	w8, [sp, #132]
   22b08:	b	22b80 <lzma_mode_is_supported@@XZ_5.0+0x8618>
   22b0c:	ldur	w8, [x29, #-148]
   22b10:	ldur	w9, [x29, #-136]
   22b14:	subs	w8, w9, w8
   22b18:	stur	w8, [x29, #-136]
   22b1c:	ldur	w8, [x29, #-148]
   22b20:	ldur	w9, [x29, #-132]
   22b24:	subs	w8, w9, w8
   22b28:	stur	w8, [x29, #-132]
   22b2c:	ldur	x10, [x29, #-56]
   22b30:	mov	x11, #0x6868                	// #26728
   22b34:	add	x10, x10, x11
   22b38:	ldr	w8, [sp, #132]
   22b3c:	mov	w11, w8
   22b40:	mov	x12, #0x2                   	// #2
   22b44:	ldrh	w8, [x10, x11, lsl #1]
   22b48:	ldur	x10, [x29, #-56]
   22b4c:	mov	x11, #0x6868                	// #26728
   22b50:	add	x10, x10, x11
   22b54:	ldr	w9, [sp, #132]
   22b58:	mov	w11, w9
   22b5c:	mul	x11, x12, x11
   22b60:	add	x10, x10, x11
   22b64:	ldrh	w9, [x10]
   22b68:	subs	w8, w9, w8, asr #5
   22b6c:	strh	w8, [x10]
   22b70:	ldr	w8, [sp, #132]
   22b74:	lsl	w8, w8, #1
   22b78:	add	w8, w8, #0x1
   22b7c:	str	w8, [sp, #132]
   22b80:	ldur	w8, [x29, #-136]
   22b84:	mov	w9, #0x1000000             	// #16777216
   22b88:	cmp	w8, w9
   22b8c:	b.cs	22bf4 <lzma_mode_is_supported@@XZ_5.0+0x868c>  // b.hs, b.nlast
   22b90:	ldur	x8, [x29, #-144]
   22b94:	ldur	x9, [x29, #-48]
   22b98:	cmp	x8, x9
   22b9c:	cset	w10, eq  // eq = none
   22ba0:	and	w10, w10, #0x1
   22ba4:	mov	w0, w10
   22ba8:	sxtw	x8, w0
   22bac:	cbz	x8, 22bc8 <lzma_mode_is_supported@@XZ_5.0+0x8660>
   22bb0:	ldur	x8, [x29, #-56]
   22bb4:	mov	x9, #0x6ea0                	// #28320
   22bb8:	add	x8, x8, x9
   22bbc:	mov	w10, #0x21                  	// #33
   22bc0:	str	w10, [x8]
   22bc4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   22bc8:	ldur	w8, [x29, #-136]
   22bcc:	lsl	w8, w8, #8
   22bd0:	stur	w8, [x29, #-136]
   22bd4:	ldur	w8, [x29, #-132]
   22bd8:	ldur	x9, [x29, #-32]
   22bdc:	ldur	x10, [x29, #-144]
   22be0:	add	x11, x10, #0x1
   22be4:	stur	x11, [x29, #-144]
   22be8:	ldrb	w12, [x9, x10]
   22bec:	orr	w8, w12, w8, lsl #8
   22bf0:	stur	w8, [x29, #-132]
   22bf4:	ldur	w8, [x29, #-136]
   22bf8:	lsr	w8, w8, #11
   22bfc:	ldur	x9, [x29, #-56]
   22c00:	mov	x10, #0x6868                	// #26728
   22c04:	add	x9, x9, x10
   22c08:	ldr	w11, [sp, #132]
   22c0c:	mov	w10, w11
   22c10:	ldrh	w11, [x9, x10, lsl #1]
   22c14:	mul	w8, w8, w11
   22c18:	stur	w8, [x29, #-148]
   22c1c:	ldur	w8, [x29, #-132]
   22c20:	ldur	w11, [x29, #-148]
   22c24:	cmp	w8, w11
   22c28:	b.cs	22c90 <lzma_mode_is_supported@@XZ_5.0+0x8728>  // b.hs, b.nlast
   22c2c:	ldur	w8, [x29, #-148]
   22c30:	stur	w8, [x29, #-136]
   22c34:	ldur	x9, [x29, #-56]
   22c38:	mov	x10, #0x6868                	// #26728
   22c3c:	add	x9, x9, x10
   22c40:	ldr	w8, [sp, #132]
   22c44:	mov	w10, w8
   22c48:	mov	x11, #0x2                   	// #2
   22c4c:	ldrh	w8, [x9, x10, lsl #1]
   22c50:	mov	w12, #0x800                 	// #2048
   22c54:	subs	w8, w12, w8
   22c58:	ldur	x9, [x29, #-56]
   22c5c:	mov	x10, #0x6868                	// #26728
   22c60:	add	x9, x9, x10
   22c64:	ldr	w12, [sp, #132]
   22c68:	mov	w10, w12
   22c6c:	mul	x10, x11, x10
   22c70:	add	x9, x9, x10
   22c74:	ldrh	w12, [x9]
   22c78:	add	w8, w12, w8, lsr #5
   22c7c:	strh	w8, [x9]
   22c80:	ldr	w8, [sp, #132]
   22c84:	lsl	w8, w8, #1
   22c88:	str	w8, [sp, #132]
   22c8c:	b	22d04 <lzma_mode_is_supported@@XZ_5.0+0x879c>
   22c90:	ldur	w8, [x29, #-148]
   22c94:	ldur	w9, [x29, #-136]
   22c98:	subs	w8, w9, w8
   22c9c:	stur	w8, [x29, #-136]
   22ca0:	ldur	w8, [x29, #-148]
   22ca4:	ldur	w9, [x29, #-132]
   22ca8:	subs	w8, w9, w8
   22cac:	stur	w8, [x29, #-132]
   22cb0:	ldur	x10, [x29, #-56]
   22cb4:	mov	x11, #0x6868                	// #26728
   22cb8:	add	x10, x10, x11
   22cbc:	ldr	w8, [sp, #132]
   22cc0:	mov	w11, w8
   22cc4:	mov	x12, #0x2                   	// #2
   22cc8:	ldrh	w8, [x10, x11, lsl #1]
   22ccc:	ldur	x10, [x29, #-56]
   22cd0:	mov	x11, #0x6868                	// #26728
   22cd4:	add	x10, x10, x11
   22cd8:	ldr	w9, [sp, #132]
   22cdc:	mov	w11, w9
   22ce0:	mul	x11, x12, x11
   22ce4:	add	x10, x10, x11
   22ce8:	ldrh	w9, [x10]
   22cec:	subs	w8, w9, w8, asr #5
   22cf0:	strh	w8, [x10]
   22cf4:	ldr	w8, [sp, #132]
   22cf8:	lsl	w8, w8, #1
   22cfc:	add	w8, w8, #0x1
   22d00:	str	w8, [sp, #132]
   22d04:	ldur	w8, [x29, #-136]
   22d08:	mov	w9, #0x1000000             	// #16777216
   22d0c:	cmp	w8, w9
   22d10:	b.cs	22d78 <lzma_mode_is_supported@@XZ_5.0+0x8810>  // b.hs, b.nlast
   22d14:	ldur	x8, [x29, #-144]
   22d18:	ldur	x9, [x29, #-48]
   22d1c:	cmp	x8, x9
   22d20:	cset	w10, eq  // eq = none
   22d24:	and	w10, w10, #0x1
   22d28:	mov	w0, w10
   22d2c:	sxtw	x8, w0
   22d30:	cbz	x8, 22d4c <lzma_mode_is_supported@@XZ_5.0+0x87e4>
   22d34:	ldur	x8, [x29, #-56]
   22d38:	mov	x9, #0x6ea0                	// #28320
   22d3c:	add	x8, x8, x9
   22d40:	mov	w10, #0x22                  	// #34
   22d44:	str	w10, [x8]
   22d48:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   22d4c:	ldur	w8, [x29, #-136]
   22d50:	lsl	w8, w8, #8
   22d54:	stur	w8, [x29, #-136]
   22d58:	ldur	w8, [x29, #-132]
   22d5c:	ldur	x9, [x29, #-32]
   22d60:	ldur	x10, [x29, #-144]
   22d64:	add	x11, x10, #0x1
   22d68:	stur	x11, [x29, #-144]
   22d6c:	ldrb	w12, [x9, x10]
   22d70:	orr	w8, w12, w8, lsl #8
   22d74:	stur	w8, [x29, #-132]
   22d78:	ldur	w8, [x29, #-136]
   22d7c:	lsr	w8, w8, #11
   22d80:	ldur	x9, [x29, #-56]
   22d84:	mov	x10, #0x6868                	// #26728
   22d88:	add	x9, x9, x10
   22d8c:	ldr	w11, [sp, #132]
   22d90:	mov	w10, w11
   22d94:	ldrh	w11, [x9, x10, lsl #1]
   22d98:	mul	w8, w8, w11
   22d9c:	stur	w8, [x29, #-148]
   22da0:	ldur	w8, [x29, #-132]
   22da4:	ldur	w11, [x29, #-148]
   22da8:	cmp	w8, w11
   22dac:	b.cs	22e14 <lzma_mode_is_supported@@XZ_5.0+0x88ac>  // b.hs, b.nlast
   22db0:	ldur	w8, [x29, #-148]
   22db4:	stur	w8, [x29, #-136]
   22db8:	ldur	x9, [x29, #-56]
   22dbc:	mov	x10, #0x6868                	// #26728
   22dc0:	add	x9, x9, x10
   22dc4:	ldr	w8, [sp, #132]
   22dc8:	mov	w10, w8
   22dcc:	mov	x11, #0x2                   	// #2
   22dd0:	ldrh	w8, [x9, x10, lsl #1]
   22dd4:	mov	w12, #0x800                 	// #2048
   22dd8:	subs	w8, w12, w8
   22ddc:	ldur	x9, [x29, #-56]
   22de0:	mov	x10, #0x6868                	// #26728
   22de4:	add	x9, x9, x10
   22de8:	ldr	w12, [sp, #132]
   22dec:	mov	w10, w12
   22df0:	mul	x10, x11, x10
   22df4:	add	x9, x9, x10
   22df8:	ldrh	w12, [x9]
   22dfc:	add	w8, w12, w8, lsr #5
   22e00:	strh	w8, [x9]
   22e04:	ldr	w8, [sp, #132]
   22e08:	lsl	w8, w8, #1
   22e0c:	str	w8, [sp, #132]
   22e10:	b	22e88 <lzma_mode_is_supported@@XZ_5.0+0x8920>
   22e14:	ldur	w8, [x29, #-148]
   22e18:	ldur	w9, [x29, #-136]
   22e1c:	subs	w8, w9, w8
   22e20:	stur	w8, [x29, #-136]
   22e24:	ldur	w8, [x29, #-148]
   22e28:	ldur	w9, [x29, #-132]
   22e2c:	subs	w8, w9, w8
   22e30:	stur	w8, [x29, #-132]
   22e34:	ldur	x10, [x29, #-56]
   22e38:	mov	x11, #0x6868                	// #26728
   22e3c:	add	x10, x10, x11
   22e40:	ldr	w8, [sp, #132]
   22e44:	mov	w11, w8
   22e48:	mov	x12, #0x2                   	// #2
   22e4c:	ldrh	w8, [x10, x11, lsl #1]
   22e50:	ldur	x10, [x29, #-56]
   22e54:	mov	x11, #0x6868                	// #26728
   22e58:	add	x10, x10, x11
   22e5c:	ldr	w9, [sp, #132]
   22e60:	mov	w11, w9
   22e64:	mul	x11, x12, x11
   22e68:	add	x10, x10, x11
   22e6c:	ldrh	w9, [x10]
   22e70:	subs	w8, w9, w8, asr #5
   22e74:	strh	w8, [x10]
   22e78:	ldr	w8, [sp, #132]
   22e7c:	lsl	w8, w8, #1
   22e80:	add	w8, w8, #0x1
   22e84:	str	w8, [sp, #132]
   22e88:	ldur	w8, [x29, #-136]
   22e8c:	mov	w9, #0x1000000             	// #16777216
   22e90:	cmp	w8, w9
   22e94:	b.cs	22efc <lzma_mode_is_supported@@XZ_5.0+0x8994>  // b.hs, b.nlast
   22e98:	ldur	x8, [x29, #-144]
   22e9c:	ldur	x9, [x29, #-48]
   22ea0:	cmp	x8, x9
   22ea4:	cset	w10, eq  // eq = none
   22ea8:	and	w10, w10, #0x1
   22eac:	mov	w0, w10
   22eb0:	sxtw	x8, w0
   22eb4:	cbz	x8, 22ed0 <lzma_mode_is_supported@@XZ_5.0+0x8968>
   22eb8:	ldur	x8, [x29, #-56]
   22ebc:	mov	x9, #0x6ea0                	// #28320
   22ec0:	add	x8, x8, x9
   22ec4:	mov	w10, #0x23                  	// #35
   22ec8:	str	w10, [x8]
   22ecc:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   22ed0:	ldur	w8, [x29, #-136]
   22ed4:	lsl	w8, w8, #8
   22ed8:	stur	w8, [x29, #-136]
   22edc:	ldur	w8, [x29, #-132]
   22ee0:	ldur	x9, [x29, #-32]
   22ee4:	ldur	x10, [x29, #-144]
   22ee8:	add	x11, x10, #0x1
   22eec:	stur	x11, [x29, #-144]
   22ef0:	ldrb	w12, [x9, x10]
   22ef4:	orr	w8, w12, w8, lsl #8
   22ef8:	stur	w8, [x29, #-132]
   22efc:	ldur	w8, [x29, #-136]
   22f00:	lsr	w8, w8, #11
   22f04:	ldur	x9, [x29, #-56]
   22f08:	mov	x10, #0x6868                	// #26728
   22f0c:	add	x9, x9, x10
   22f10:	ldr	w11, [sp, #132]
   22f14:	mov	w10, w11
   22f18:	ldrh	w11, [x9, x10, lsl #1]
   22f1c:	mul	w8, w8, w11
   22f20:	stur	w8, [x29, #-148]
   22f24:	ldur	w8, [x29, #-132]
   22f28:	ldur	w11, [x29, #-148]
   22f2c:	cmp	w8, w11
   22f30:	b.cs	22f98 <lzma_mode_is_supported@@XZ_5.0+0x8a30>  // b.hs, b.nlast
   22f34:	ldur	w8, [x29, #-148]
   22f38:	stur	w8, [x29, #-136]
   22f3c:	ldur	x9, [x29, #-56]
   22f40:	mov	x10, #0x6868                	// #26728
   22f44:	add	x9, x9, x10
   22f48:	ldr	w8, [sp, #132]
   22f4c:	mov	w10, w8
   22f50:	mov	x11, #0x2                   	// #2
   22f54:	ldrh	w8, [x9, x10, lsl #1]
   22f58:	mov	w12, #0x800                 	// #2048
   22f5c:	subs	w8, w12, w8
   22f60:	ldur	x9, [x29, #-56]
   22f64:	mov	x10, #0x6868                	// #26728
   22f68:	add	x9, x9, x10
   22f6c:	ldr	w12, [sp, #132]
   22f70:	mov	w10, w12
   22f74:	mul	x10, x11, x10
   22f78:	add	x9, x9, x10
   22f7c:	ldrh	w12, [x9]
   22f80:	add	w8, w12, w8, lsr #5
   22f84:	strh	w8, [x9]
   22f88:	ldr	w8, [sp, #132]
   22f8c:	lsl	w8, w8, #1
   22f90:	str	w8, [sp, #132]
   22f94:	b	2300c <lzma_mode_is_supported@@XZ_5.0+0x8aa4>
   22f98:	ldur	w8, [x29, #-148]
   22f9c:	ldur	w9, [x29, #-136]
   22fa0:	subs	w8, w9, w8
   22fa4:	stur	w8, [x29, #-136]
   22fa8:	ldur	w8, [x29, #-148]
   22fac:	ldur	w9, [x29, #-132]
   22fb0:	subs	w8, w9, w8
   22fb4:	stur	w8, [x29, #-132]
   22fb8:	ldur	x10, [x29, #-56]
   22fbc:	mov	x11, #0x6868                	// #26728
   22fc0:	add	x10, x10, x11
   22fc4:	ldr	w8, [sp, #132]
   22fc8:	mov	w11, w8
   22fcc:	mov	x12, #0x2                   	// #2
   22fd0:	ldrh	w8, [x10, x11, lsl #1]
   22fd4:	ldur	x10, [x29, #-56]
   22fd8:	mov	x11, #0x6868                	// #26728
   22fdc:	add	x10, x10, x11
   22fe0:	ldr	w9, [sp, #132]
   22fe4:	mov	w11, w9
   22fe8:	mul	x11, x12, x11
   22fec:	add	x10, x10, x11
   22ff0:	ldrh	w9, [x10]
   22ff4:	subs	w8, w9, w8, asr #5
   22ff8:	strh	w8, [x10]
   22ffc:	ldr	w8, [sp, #132]
   23000:	lsl	w8, w8, #1
   23004:	add	w8, w8, #0x1
   23008:	str	w8, [sp, #132]
   2300c:	ldr	w8, [sp, #132]
   23010:	subs	w8, w8, #0x100
   23014:	add	w8, w8, #0x2
   23018:	add	w8, w8, #0x8
   2301c:	add	w8, w8, #0x8
   23020:	str	w8, [sp, #120]
   23024:	ldur	x8, [x29, #-56]
   23028:	mov	x9, #0x6360                	// #25440
   2302c:	add	x8, x8, x9
   23030:	ldr	w10, [sp, #120]
   23034:	cmp	w10, #0x6
   23038:	str	x8, [sp, #40]
   2303c:	b.cs	23050 <lzma_mode_is_supported@@XZ_5.0+0x8ae8>  // b.hs, b.nlast
   23040:	ldr	w8, [sp, #120]
   23044:	subs	w8, w8, #0x2
   23048:	str	w8, [sp, #36]
   2304c:	b	23058 <lzma_mode_is_supported@@XZ_5.0+0x8af0>
   23050:	mov	w8, #0x3                   	// #3
   23054:	str	w8, [sp, #36]
   23058:	ldr	w8, [sp, #36]
   2305c:	mov	w9, w8
   23060:	ubfx	x9, x9, #0, #32
   23064:	mov	x10, #0x80                  	// #128
   23068:	mul	x9, x10, x9
   2306c:	ldr	x10, [sp, #40]
   23070:	add	x9, x10, x9
   23074:	str	x9, [sp, #136]
   23078:	mov	w8, #0x1                   	// #1
   2307c:	str	w8, [sp, #132]
   23080:	ldur	w8, [x29, #-136]
   23084:	mov	w9, #0x1000000             	// #16777216
   23088:	cmp	w8, w9
   2308c:	b.cs	230f4 <lzma_mode_is_supported@@XZ_5.0+0x8b8c>  // b.hs, b.nlast
   23090:	ldur	x8, [x29, #-144]
   23094:	ldur	x9, [x29, #-48]
   23098:	cmp	x8, x9
   2309c:	cset	w10, eq  // eq = none
   230a0:	and	w10, w10, #0x1
   230a4:	mov	w0, w10
   230a8:	sxtw	x8, w0
   230ac:	cbz	x8, 230c8 <lzma_mode_is_supported@@XZ_5.0+0x8b60>
   230b0:	ldur	x8, [x29, #-56]
   230b4:	mov	x9, #0x6ea0                	// #28320
   230b8:	add	x8, x8, x9
   230bc:	mov	w10, #0x24                  	// #36
   230c0:	str	w10, [x8]
   230c4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   230c8:	ldur	w8, [x29, #-136]
   230cc:	lsl	w8, w8, #8
   230d0:	stur	w8, [x29, #-136]
   230d4:	ldur	w8, [x29, #-132]
   230d8:	ldur	x9, [x29, #-32]
   230dc:	ldur	x10, [x29, #-144]
   230e0:	add	x11, x10, #0x1
   230e4:	stur	x11, [x29, #-144]
   230e8:	ldrb	w12, [x9, x10]
   230ec:	orr	w8, w12, w8, lsl #8
   230f0:	stur	w8, [x29, #-132]
   230f4:	ldur	w8, [x29, #-136]
   230f8:	lsr	w8, w8, #11
   230fc:	ldr	x9, [sp, #136]
   23100:	ldr	w10, [sp, #132]
   23104:	mov	w11, w10
   23108:	ldrh	w10, [x9, x11, lsl #1]
   2310c:	mul	w8, w8, w10
   23110:	stur	w8, [x29, #-148]
   23114:	ldur	w8, [x29, #-132]
   23118:	ldur	w10, [x29, #-148]
   2311c:	cmp	w8, w10
   23120:	b.cs	23178 <lzma_mode_is_supported@@XZ_5.0+0x8c10>  // b.hs, b.nlast
   23124:	ldur	w8, [x29, #-148]
   23128:	stur	w8, [x29, #-136]
   2312c:	ldr	x9, [sp, #136]
   23130:	ldr	w8, [sp, #132]
   23134:	mov	w10, w8
   23138:	mov	x11, #0x2                   	// #2
   2313c:	ldrh	w8, [x9, x10, lsl #1]
   23140:	mov	w12, #0x800                 	// #2048
   23144:	subs	w8, w12, w8
   23148:	ldr	x9, [sp, #136]
   2314c:	ldr	w12, [sp, #132]
   23150:	mov	w10, w12
   23154:	mul	x10, x11, x10
   23158:	add	x9, x9, x10
   2315c:	ldrh	w12, [x9]
   23160:	add	w8, w12, w8, lsr #5
   23164:	strh	w8, [x9]
   23168:	ldr	w8, [sp, #132]
   2316c:	lsl	w8, w8, #1
   23170:	str	w8, [sp, #132]
   23174:	b	231dc <lzma_mode_is_supported@@XZ_5.0+0x8c74>
   23178:	ldur	w8, [x29, #-148]
   2317c:	ldur	w9, [x29, #-136]
   23180:	subs	w8, w9, w8
   23184:	stur	w8, [x29, #-136]
   23188:	ldur	w8, [x29, #-148]
   2318c:	ldur	w9, [x29, #-132]
   23190:	subs	w8, w9, w8
   23194:	stur	w8, [x29, #-132]
   23198:	ldr	x10, [sp, #136]
   2319c:	ldr	w8, [sp, #132]
   231a0:	mov	w11, w8
   231a4:	mov	x12, #0x2                   	// #2
   231a8:	ldrh	w8, [x10, x11, lsl #1]
   231ac:	ldr	x10, [sp, #136]
   231b0:	ldr	w9, [sp, #132]
   231b4:	mov	w11, w9
   231b8:	mul	x11, x12, x11
   231bc:	add	x10, x10, x11
   231c0:	ldrh	w9, [x10]
   231c4:	subs	w8, w9, w8, asr #5
   231c8:	strh	w8, [x10]
   231cc:	ldr	w8, [sp, #132]
   231d0:	lsl	w8, w8, #1
   231d4:	add	w8, w8, #0x1
   231d8:	str	w8, [sp, #132]
   231dc:	ldur	w8, [x29, #-136]
   231e0:	mov	w9, #0x1000000             	// #16777216
   231e4:	cmp	w8, w9
   231e8:	b.cs	23250 <lzma_mode_is_supported@@XZ_5.0+0x8ce8>  // b.hs, b.nlast
   231ec:	ldur	x8, [x29, #-144]
   231f0:	ldur	x9, [x29, #-48]
   231f4:	cmp	x8, x9
   231f8:	cset	w10, eq  // eq = none
   231fc:	and	w10, w10, #0x1
   23200:	mov	w0, w10
   23204:	sxtw	x8, w0
   23208:	cbz	x8, 23224 <lzma_mode_is_supported@@XZ_5.0+0x8cbc>
   2320c:	ldur	x8, [x29, #-56]
   23210:	mov	x9, #0x6ea0                	// #28320
   23214:	add	x8, x8, x9
   23218:	mov	w10, #0x25                  	// #37
   2321c:	str	w10, [x8]
   23220:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23224:	ldur	w8, [x29, #-136]
   23228:	lsl	w8, w8, #8
   2322c:	stur	w8, [x29, #-136]
   23230:	ldur	w8, [x29, #-132]
   23234:	ldur	x9, [x29, #-32]
   23238:	ldur	x10, [x29, #-144]
   2323c:	add	x11, x10, #0x1
   23240:	stur	x11, [x29, #-144]
   23244:	ldrb	w12, [x9, x10]
   23248:	orr	w8, w12, w8, lsl #8
   2324c:	stur	w8, [x29, #-132]
   23250:	ldur	w8, [x29, #-136]
   23254:	lsr	w8, w8, #11
   23258:	ldr	x9, [sp, #136]
   2325c:	ldr	w10, [sp, #132]
   23260:	mov	w11, w10
   23264:	ldrh	w10, [x9, x11, lsl #1]
   23268:	mul	w8, w8, w10
   2326c:	stur	w8, [x29, #-148]
   23270:	ldur	w8, [x29, #-132]
   23274:	ldur	w10, [x29, #-148]
   23278:	cmp	w8, w10
   2327c:	b.cs	232d4 <lzma_mode_is_supported@@XZ_5.0+0x8d6c>  // b.hs, b.nlast
   23280:	ldur	w8, [x29, #-148]
   23284:	stur	w8, [x29, #-136]
   23288:	ldr	x9, [sp, #136]
   2328c:	ldr	w8, [sp, #132]
   23290:	mov	w10, w8
   23294:	mov	x11, #0x2                   	// #2
   23298:	ldrh	w8, [x9, x10, lsl #1]
   2329c:	mov	w12, #0x800                 	// #2048
   232a0:	subs	w8, w12, w8
   232a4:	ldr	x9, [sp, #136]
   232a8:	ldr	w12, [sp, #132]
   232ac:	mov	w10, w12
   232b0:	mul	x10, x11, x10
   232b4:	add	x9, x9, x10
   232b8:	ldrh	w12, [x9]
   232bc:	add	w8, w12, w8, lsr #5
   232c0:	strh	w8, [x9]
   232c4:	ldr	w8, [sp, #132]
   232c8:	lsl	w8, w8, #1
   232cc:	str	w8, [sp, #132]
   232d0:	b	23338 <lzma_mode_is_supported@@XZ_5.0+0x8dd0>
   232d4:	ldur	w8, [x29, #-148]
   232d8:	ldur	w9, [x29, #-136]
   232dc:	subs	w8, w9, w8
   232e0:	stur	w8, [x29, #-136]
   232e4:	ldur	w8, [x29, #-148]
   232e8:	ldur	w9, [x29, #-132]
   232ec:	subs	w8, w9, w8
   232f0:	stur	w8, [x29, #-132]
   232f4:	ldr	x10, [sp, #136]
   232f8:	ldr	w8, [sp, #132]
   232fc:	mov	w11, w8
   23300:	mov	x12, #0x2                   	// #2
   23304:	ldrh	w8, [x10, x11, lsl #1]
   23308:	ldr	x10, [sp, #136]
   2330c:	ldr	w9, [sp, #132]
   23310:	mov	w11, w9
   23314:	mul	x11, x12, x11
   23318:	add	x10, x10, x11
   2331c:	ldrh	w9, [x10]
   23320:	subs	w8, w9, w8, asr #5
   23324:	strh	w8, [x10]
   23328:	ldr	w8, [sp, #132]
   2332c:	lsl	w8, w8, #1
   23330:	add	w8, w8, #0x1
   23334:	str	w8, [sp, #132]
   23338:	ldur	w8, [x29, #-136]
   2333c:	mov	w9, #0x1000000             	// #16777216
   23340:	cmp	w8, w9
   23344:	b.cs	233ac <lzma_mode_is_supported@@XZ_5.0+0x8e44>  // b.hs, b.nlast
   23348:	ldur	x8, [x29, #-144]
   2334c:	ldur	x9, [x29, #-48]
   23350:	cmp	x8, x9
   23354:	cset	w10, eq  // eq = none
   23358:	and	w10, w10, #0x1
   2335c:	mov	w0, w10
   23360:	sxtw	x8, w0
   23364:	cbz	x8, 23380 <lzma_mode_is_supported@@XZ_5.0+0x8e18>
   23368:	ldur	x8, [x29, #-56]
   2336c:	mov	x9, #0x6ea0                	// #28320
   23370:	add	x8, x8, x9
   23374:	mov	w10, #0x26                  	// #38
   23378:	str	w10, [x8]
   2337c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23380:	ldur	w8, [x29, #-136]
   23384:	lsl	w8, w8, #8
   23388:	stur	w8, [x29, #-136]
   2338c:	ldur	w8, [x29, #-132]
   23390:	ldur	x9, [x29, #-32]
   23394:	ldur	x10, [x29, #-144]
   23398:	add	x11, x10, #0x1
   2339c:	stur	x11, [x29, #-144]
   233a0:	ldrb	w12, [x9, x10]
   233a4:	orr	w8, w12, w8, lsl #8
   233a8:	stur	w8, [x29, #-132]
   233ac:	ldur	w8, [x29, #-136]
   233b0:	lsr	w8, w8, #11
   233b4:	ldr	x9, [sp, #136]
   233b8:	ldr	w10, [sp, #132]
   233bc:	mov	w11, w10
   233c0:	ldrh	w10, [x9, x11, lsl #1]
   233c4:	mul	w8, w8, w10
   233c8:	stur	w8, [x29, #-148]
   233cc:	ldur	w8, [x29, #-132]
   233d0:	ldur	w10, [x29, #-148]
   233d4:	cmp	w8, w10
   233d8:	b.cs	23430 <lzma_mode_is_supported@@XZ_5.0+0x8ec8>  // b.hs, b.nlast
   233dc:	ldur	w8, [x29, #-148]
   233e0:	stur	w8, [x29, #-136]
   233e4:	ldr	x9, [sp, #136]
   233e8:	ldr	w8, [sp, #132]
   233ec:	mov	w10, w8
   233f0:	mov	x11, #0x2                   	// #2
   233f4:	ldrh	w8, [x9, x10, lsl #1]
   233f8:	mov	w12, #0x800                 	// #2048
   233fc:	subs	w8, w12, w8
   23400:	ldr	x9, [sp, #136]
   23404:	ldr	w12, [sp, #132]
   23408:	mov	w10, w12
   2340c:	mul	x10, x11, x10
   23410:	add	x9, x9, x10
   23414:	ldrh	w12, [x9]
   23418:	add	w8, w12, w8, lsr #5
   2341c:	strh	w8, [x9]
   23420:	ldr	w8, [sp, #132]
   23424:	lsl	w8, w8, #1
   23428:	str	w8, [sp, #132]
   2342c:	b	23494 <lzma_mode_is_supported@@XZ_5.0+0x8f2c>
   23430:	ldur	w8, [x29, #-148]
   23434:	ldur	w9, [x29, #-136]
   23438:	subs	w8, w9, w8
   2343c:	stur	w8, [x29, #-136]
   23440:	ldur	w8, [x29, #-148]
   23444:	ldur	w9, [x29, #-132]
   23448:	subs	w8, w9, w8
   2344c:	stur	w8, [x29, #-132]
   23450:	ldr	x10, [sp, #136]
   23454:	ldr	w8, [sp, #132]
   23458:	mov	w11, w8
   2345c:	mov	x12, #0x2                   	// #2
   23460:	ldrh	w8, [x10, x11, lsl #1]
   23464:	ldr	x10, [sp, #136]
   23468:	ldr	w9, [sp, #132]
   2346c:	mov	w11, w9
   23470:	mul	x11, x12, x11
   23474:	add	x10, x10, x11
   23478:	ldrh	w9, [x10]
   2347c:	subs	w8, w9, w8, asr #5
   23480:	strh	w8, [x10]
   23484:	ldr	w8, [sp, #132]
   23488:	lsl	w8, w8, #1
   2348c:	add	w8, w8, #0x1
   23490:	str	w8, [sp, #132]
   23494:	ldur	w8, [x29, #-136]
   23498:	mov	w9, #0x1000000             	// #16777216
   2349c:	cmp	w8, w9
   234a0:	b.cs	23508 <lzma_mode_is_supported@@XZ_5.0+0x8fa0>  // b.hs, b.nlast
   234a4:	ldur	x8, [x29, #-144]
   234a8:	ldur	x9, [x29, #-48]
   234ac:	cmp	x8, x9
   234b0:	cset	w10, eq  // eq = none
   234b4:	and	w10, w10, #0x1
   234b8:	mov	w0, w10
   234bc:	sxtw	x8, w0
   234c0:	cbz	x8, 234dc <lzma_mode_is_supported@@XZ_5.0+0x8f74>
   234c4:	ldur	x8, [x29, #-56]
   234c8:	mov	x9, #0x6ea0                	// #28320
   234cc:	add	x8, x8, x9
   234d0:	mov	w10, #0x27                  	// #39
   234d4:	str	w10, [x8]
   234d8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   234dc:	ldur	w8, [x29, #-136]
   234e0:	lsl	w8, w8, #8
   234e4:	stur	w8, [x29, #-136]
   234e8:	ldur	w8, [x29, #-132]
   234ec:	ldur	x9, [x29, #-32]
   234f0:	ldur	x10, [x29, #-144]
   234f4:	add	x11, x10, #0x1
   234f8:	stur	x11, [x29, #-144]
   234fc:	ldrb	w12, [x9, x10]
   23500:	orr	w8, w12, w8, lsl #8
   23504:	stur	w8, [x29, #-132]
   23508:	ldur	w8, [x29, #-136]
   2350c:	lsr	w8, w8, #11
   23510:	ldr	x9, [sp, #136]
   23514:	ldr	w10, [sp, #132]
   23518:	mov	w11, w10
   2351c:	ldrh	w10, [x9, x11, lsl #1]
   23520:	mul	w8, w8, w10
   23524:	stur	w8, [x29, #-148]
   23528:	ldur	w8, [x29, #-132]
   2352c:	ldur	w10, [x29, #-148]
   23530:	cmp	w8, w10
   23534:	b.cs	2358c <lzma_mode_is_supported@@XZ_5.0+0x9024>  // b.hs, b.nlast
   23538:	ldur	w8, [x29, #-148]
   2353c:	stur	w8, [x29, #-136]
   23540:	ldr	x9, [sp, #136]
   23544:	ldr	w8, [sp, #132]
   23548:	mov	w10, w8
   2354c:	mov	x11, #0x2                   	// #2
   23550:	ldrh	w8, [x9, x10, lsl #1]
   23554:	mov	w12, #0x800                 	// #2048
   23558:	subs	w8, w12, w8
   2355c:	ldr	x9, [sp, #136]
   23560:	ldr	w12, [sp, #132]
   23564:	mov	w10, w12
   23568:	mul	x10, x11, x10
   2356c:	add	x9, x9, x10
   23570:	ldrh	w12, [x9]
   23574:	add	w8, w12, w8, lsr #5
   23578:	strh	w8, [x9]
   2357c:	ldr	w8, [sp, #132]
   23580:	lsl	w8, w8, #1
   23584:	str	w8, [sp, #132]
   23588:	b	235f0 <lzma_mode_is_supported@@XZ_5.0+0x9088>
   2358c:	ldur	w8, [x29, #-148]
   23590:	ldur	w9, [x29, #-136]
   23594:	subs	w8, w9, w8
   23598:	stur	w8, [x29, #-136]
   2359c:	ldur	w8, [x29, #-148]
   235a0:	ldur	w9, [x29, #-132]
   235a4:	subs	w8, w9, w8
   235a8:	stur	w8, [x29, #-132]
   235ac:	ldr	x10, [sp, #136]
   235b0:	ldr	w8, [sp, #132]
   235b4:	mov	w11, w8
   235b8:	mov	x12, #0x2                   	// #2
   235bc:	ldrh	w8, [x10, x11, lsl #1]
   235c0:	ldr	x10, [sp, #136]
   235c4:	ldr	w9, [sp, #132]
   235c8:	mov	w11, w9
   235cc:	mul	x11, x12, x11
   235d0:	add	x10, x10, x11
   235d4:	ldrh	w9, [x10]
   235d8:	subs	w8, w9, w8, asr #5
   235dc:	strh	w8, [x10]
   235e0:	ldr	w8, [sp, #132]
   235e4:	lsl	w8, w8, #1
   235e8:	add	w8, w8, #0x1
   235ec:	str	w8, [sp, #132]
   235f0:	ldur	w8, [x29, #-136]
   235f4:	mov	w9, #0x1000000             	// #16777216
   235f8:	cmp	w8, w9
   235fc:	b.cs	23664 <lzma_mode_is_supported@@XZ_5.0+0x90fc>  // b.hs, b.nlast
   23600:	ldur	x8, [x29, #-144]
   23604:	ldur	x9, [x29, #-48]
   23608:	cmp	x8, x9
   2360c:	cset	w10, eq  // eq = none
   23610:	and	w10, w10, #0x1
   23614:	mov	w0, w10
   23618:	sxtw	x8, w0
   2361c:	cbz	x8, 23638 <lzma_mode_is_supported@@XZ_5.0+0x90d0>
   23620:	ldur	x8, [x29, #-56]
   23624:	mov	x9, #0x6ea0                	// #28320
   23628:	add	x8, x8, x9
   2362c:	mov	w10, #0x28                  	// #40
   23630:	str	w10, [x8]
   23634:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23638:	ldur	w8, [x29, #-136]
   2363c:	lsl	w8, w8, #8
   23640:	stur	w8, [x29, #-136]
   23644:	ldur	w8, [x29, #-132]
   23648:	ldur	x9, [x29, #-32]
   2364c:	ldur	x10, [x29, #-144]
   23650:	add	x11, x10, #0x1
   23654:	stur	x11, [x29, #-144]
   23658:	ldrb	w12, [x9, x10]
   2365c:	orr	w8, w12, w8, lsl #8
   23660:	stur	w8, [x29, #-132]
   23664:	ldur	w8, [x29, #-136]
   23668:	lsr	w8, w8, #11
   2366c:	ldr	x9, [sp, #136]
   23670:	ldr	w10, [sp, #132]
   23674:	mov	w11, w10
   23678:	ldrh	w10, [x9, x11, lsl #1]
   2367c:	mul	w8, w8, w10
   23680:	stur	w8, [x29, #-148]
   23684:	ldur	w8, [x29, #-132]
   23688:	ldur	w10, [x29, #-148]
   2368c:	cmp	w8, w10
   23690:	b.cs	236e8 <lzma_mode_is_supported@@XZ_5.0+0x9180>  // b.hs, b.nlast
   23694:	ldur	w8, [x29, #-148]
   23698:	stur	w8, [x29, #-136]
   2369c:	ldr	x9, [sp, #136]
   236a0:	ldr	w8, [sp, #132]
   236a4:	mov	w10, w8
   236a8:	mov	x11, #0x2                   	// #2
   236ac:	ldrh	w8, [x9, x10, lsl #1]
   236b0:	mov	w12, #0x800                 	// #2048
   236b4:	subs	w8, w12, w8
   236b8:	ldr	x9, [sp, #136]
   236bc:	ldr	w12, [sp, #132]
   236c0:	mov	w10, w12
   236c4:	mul	x10, x11, x10
   236c8:	add	x9, x9, x10
   236cc:	ldrh	w12, [x9]
   236d0:	add	w8, w12, w8, lsr #5
   236d4:	strh	w8, [x9]
   236d8:	ldr	w8, [sp, #132]
   236dc:	lsl	w8, w8, #1
   236e0:	str	w8, [sp, #132]
   236e4:	b	2374c <lzma_mode_is_supported@@XZ_5.0+0x91e4>
   236e8:	ldur	w8, [x29, #-148]
   236ec:	ldur	w9, [x29, #-136]
   236f0:	subs	w8, w9, w8
   236f4:	stur	w8, [x29, #-136]
   236f8:	ldur	w8, [x29, #-148]
   236fc:	ldur	w9, [x29, #-132]
   23700:	subs	w8, w9, w8
   23704:	stur	w8, [x29, #-132]
   23708:	ldr	x10, [sp, #136]
   2370c:	ldr	w8, [sp, #132]
   23710:	mov	w11, w8
   23714:	mov	x12, #0x2                   	// #2
   23718:	ldrh	w8, [x10, x11, lsl #1]
   2371c:	ldr	x10, [sp, #136]
   23720:	ldr	w9, [sp, #132]
   23724:	mov	w11, w9
   23728:	mul	x11, x12, x11
   2372c:	add	x10, x10, x11
   23730:	ldrh	w9, [x10]
   23734:	subs	w8, w9, w8, asr #5
   23738:	strh	w8, [x10]
   2373c:	ldr	w8, [sp, #132]
   23740:	lsl	w8, w8, #1
   23744:	add	w8, w8, #0x1
   23748:	str	w8, [sp, #132]
   2374c:	ldur	w8, [x29, #-136]
   23750:	mov	w9, #0x1000000             	// #16777216
   23754:	cmp	w8, w9
   23758:	b.cs	237c0 <lzma_mode_is_supported@@XZ_5.0+0x9258>  // b.hs, b.nlast
   2375c:	ldur	x8, [x29, #-144]
   23760:	ldur	x9, [x29, #-48]
   23764:	cmp	x8, x9
   23768:	cset	w10, eq  // eq = none
   2376c:	and	w10, w10, #0x1
   23770:	mov	w0, w10
   23774:	sxtw	x8, w0
   23778:	cbz	x8, 23794 <lzma_mode_is_supported@@XZ_5.0+0x922c>
   2377c:	ldur	x8, [x29, #-56]
   23780:	mov	x9, #0x6ea0                	// #28320
   23784:	add	x8, x8, x9
   23788:	mov	w10, #0x29                  	// #41
   2378c:	str	w10, [x8]
   23790:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23794:	ldur	w8, [x29, #-136]
   23798:	lsl	w8, w8, #8
   2379c:	stur	w8, [x29, #-136]
   237a0:	ldur	w8, [x29, #-132]
   237a4:	ldur	x9, [x29, #-32]
   237a8:	ldur	x10, [x29, #-144]
   237ac:	add	x11, x10, #0x1
   237b0:	stur	x11, [x29, #-144]
   237b4:	ldrb	w12, [x9, x10]
   237b8:	orr	w8, w12, w8, lsl #8
   237bc:	stur	w8, [x29, #-132]
   237c0:	ldur	w8, [x29, #-136]
   237c4:	lsr	w8, w8, #11
   237c8:	ldr	x9, [sp, #136]
   237cc:	ldr	w10, [sp, #132]
   237d0:	mov	w11, w10
   237d4:	ldrh	w10, [x9, x11, lsl #1]
   237d8:	mul	w8, w8, w10
   237dc:	stur	w8, [x29, #-148]
   237e0:	ldur	w8, [x29, #-132]
   237e4:	ldur	w10, [x29, #-148]
   237e8:	cmp	w8, w10
   237ec:	b.cs	23844 <lzma_mode_is_supported@@XZ_5.0+0x92dc>  // b.hs, b.nlast
   237f0:	ldur	w8, [x29, #-148]
   237f4:	stur	w8, [x29, #-136]
   237f8:	ldr	x9, [sp, #136]
   237fc:	ldr	w8, [sp, #132]
   23800:	mov	w10, w8
   23804:	mov	x11, #0x2                   	// #2
   23808:	ldrh	w8, [x9, x10, lsl #1]
   2380c:	mov	w12, #0x800                 	// #2048
   23810:	subs	w8, w12, w8
   23814:	ldr	x9, [sp, #136]
   23818:	ldr	w12, [sp, #132]
   2381c:	mov	w10, w12
   23820:	mul	x10, x11, x10
   23824:	add	x9, x9, x10
   23828:	ldrh	w12, [x9]
   2382c:	add	w8, w12, w8, lsr #5
   23830:	strh	w8, [x9]
   23834:	ldr	w8, [sp, #132]
   23838:	lsl	w8, w8, #1
   2383c:	str	w8, [sp, #132]
   23840:	b	238a8 <lzma_mode_is_supported@@XZ_5.0+0x9340>
   23844:	ldur	w8, [x29, #-148]
   23848:	ldur	w9, [x29, #-136]
   2384c:	subs	w8, w9, w8
   23850:	stur	w8, [x29, #-136]
   23854:	ldur	w8, [x29, #-148]
   23858:	ldur	w9, [x29, #-132]
   2385c:	subs	w8, w9, w8
   23860:	stur	w8, [x29, #-132]
   23864:	ldr	x10, [sp, #136]
   23868:	ldr	w8, [sp, #132]
   2386c:	mov	w11, w8
   23870:	mov	x12, #0x2                   	// #2
   23874:	ldrh	w8, [x10, x11, lsl #1]
   23878:	ldr	x10, [sp, #136]
   2387c:	ldr	w9, [sp, #132]
   23880:	mov	w11, w9
   23884:	mul	x11, x12, x11
   23888:	add	x10, x10, x11
   2388c:	ldrh	w9, [x10]
   23890:	subs	w8, w9, w8, asr #5
   23894:	strh	w8, [x10]
   23898:	ldr	w8, [sp, #132]
   2389c:	lsl	w8, w8, #1
   238a0:	add	w8, w8, #0x1
   238a4:	str	w8, [sp, #132]
   238a8:	ldr	w8, [sp, #132]
   238ac:	subs	w8, w8, #0x40
   238b0:	str	w8, [sp, #132]
   238b4:	ldr	w8, [sp, #132]
   238b8:	cmp	w8, #0x4
   238bc:	b.cs	238cc <lzma_mode_is_supported@@XZ_5.0+0x9364>  // b.hs, b.nlast
   238c0:	ldr	w8, [sp, #132]
   238c4:	stur	w8, [x29, #-156]
   238c8:	b	248bc <lzma_mode_is_supported@@XZ_5.0+0xa354>
   238cc:	ldr	w8, [sp, #132]
   238d0:	lsr	w8, w8, #1
   238d4:	subs	w8, w8, #0x1
   238d8:	str	w8, [sp, #128]
   238dc:	ldr	w8, [sp, #132]
   238e0:	and	w8, w8, #0x1
   238e4:	add	w8, w8, #0x2
   238e8:	stur	w8, [x29, #-156]
   238ec:	ldr	w8, [sp, #132]
   238f0:	cmp	w8, #0xe
   238f4:	b.cs	24104 <lzma_mode_is_supported@@XZ_5.0+0x9b9c>  // b.hs, b.nlast
   238f8:	ldr	w8, [sp, #128]
   238fc:	ldur	w9, [x29, #-156]
   23900:	lsl	w8, w9, w8
   23904:	stur	w8, [x29, #-156]
   23908:	ldur	x10, [x29, #-56]
   2390c:	mov	x11, #0x6560                	// #25952
   23910:	add	x10, x10, x11
   23914:	ldur	w8, [x29, #-156]
   23918:	mov	w11, w8
   2391c:	mov	x12, #0x2                   	// #2
   23920:	mul	x11, x12, x11
   23924:	add	x10, x10, x11
   23928:	ldr	w8, [sp, #132]
   2392c:	mov	w11, w8
   23930:	mneg	x11, x11, x12
   23934:	add	x10, x10, x11
   23938:	mov	x11, #0xfffffffffffffffe    	// #-2
   2393c:	add	x10, x10, x11
   23940:	str	x10, [sp, #136]
   23944:	mov	w8, #0x1                   	// #1
   23948:	str	w8, [sp, #132]
   2394c:	str	wzr, [sp, #124]
   23950:	ldr	w8, [sp, #128]
   23954:	subs	w8, w8, #0x1
   23958:	mov	w9, w8
   2395c:	ubfx	x9, x9, #0, #32
   23960:	cmp	x9, #0x4
   23964:	str	x9, [sp, #24]
   23968:	b.hi	24100 <lzma_mode_is_supported@@XZ_5.0+0x9b98>  // b.pmore
   2396c:	adrp	x8, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   23970:	add	x8, x8, #0xdb8
   23974:	ldr	x11, [sp, #24]
   23978:	ldrsw	x10, [x8, x11, lsl #2]
   2397c:	add	x9, x8, x10
   23980:	br	x9
   23984:	ldur	w8, [x29, #-136]
   23988:	mov	w9, #0x1000000             	// #16777216
   2398c:	cmp	w8, w9
   23990:	b.cs	239f8 <lzma_mode_is_supported@@XZ_5.0+0x9490>  // b.hs, b.nlast
   23994:	ldur	x8, [x29, #-144]
   23998:	ldur	x9, [x29, #-48]
   2399c:	cmp	x8, x9
   239a0:	cset	w10, eq  // eq = none
   239a4:	and	w10, w10, #0x1
   239a8:	mov	w0, w10
   239ac:	sxtw	x8, w0
   239b0:	cbz	x8, 239cc <lzma_mode_is_supported@@XZ_5.0+0x9464>
   239b4:	ldur	x8, [x29, #-56]
   239b8:	mov	x9, #0x6ea0                	// #28320
   239bc:	add	x8, x8, x9
   239c0:	mov	w10, #0x2a                  	// #42
   239c4:	str	w10, [x8]
   239c8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   239cc:	ldur	w8, [x29, #-136]
   239d0:	lsl	w8, w8, #8
   239d4:	stur	w8, [x29, #-136]
   239d8:	ldur	w8, [x29, #-132]
   239dc:	ldur	x9, [x29, #-32]
   239e0:	ldur	x10, [x29, #-144]
   239e4:	add	x11, x10, #0x1
   239e8:	stur	x11, [x29, #-144]
   239ec:	ldrb	w12, [x9, x10]
   239f0:	orr	w8, w12, w8, lsl #8
   239f4:	stur	w8, [x29, #-132]
   239f8:	ldur	w8, [x29, #-136]
   239fc:	lsr	w8, w8, #11
   23a00:	ldr	x9, [sp, #136]
   23a04:	ldr	w10, [sp, #132]
   23a08:	mov	w11, w10
   23a0c:	ldrh	w10, [x9, x11, lsl #1]
   23a10:	mul	w8, w8, w10
   23a14:	stur	w8, [x29, #-148]
   23a18:	ldur	w8, [x29, #-132]
   23a1c:	ldur	w10, [x29, #-148]
   23a20:	cmp	w8, w10
   23a24:	b.cs	23a7c <lzma_mode_is_supported@@XZ_5.0+0x9514>  // b.hs, b.nlast
   23a28:	ldur	w8, [x29, #-148]
   23a2c:	stur	w8, [x29, #-136]
   23a30:	ldr	x9, [sp, #136]
   23a34:	ldr	w8, [sp, #132]
   23a38:	mov	w10, w8
   23a3c:	mov	x11, #0x2                   	// #2
   23a40:	ldrh	w8, [x9, x10, lsl #1]
   23a44:	mov	w12, #0x800                 	// #2048
   23a48:	subs	w8, w12, w8
   23a4c:	ldr	x9, [sp, #136]
   23a50:	ldr	w12, [sp, #132]
   23a54:	mov	w10, w12
   23a58:	mul	x10, x11, x10
   23a5c:	add	x9, x9, x10
   23a60:	ldrh	w12, [x9]
   23a64:	add	w8, w12, w8, lsr #5
   23a68:	strh	w8, [x9]
   23a6c:	ldr	w8, [sp, #132]
   23a70:	lsl	w8, w8, #1
   23a74:	str	w8, [sp, #132]
   23a78:	b	23aec <lzma_mode_is_supported@@XZ_5.0+0x9584>
   23a7c:	ldur	w8, [x29, #-148]
   23a80:	ldur	w9, [x29, #-136]
   23a84:	subs	w8, w9, w8
   23a88:	stur	w8, [x29, #-136]
   23a8c:	ldur	w8, [x29, #-148]
   23a90:	ldur	w9, [x29, #-132]
   23a94:	subs	w8, w9, w8
   23a98:	stur	w8, [x29, #-132]
   23a9c:	ldr	x10, [sp, #136]
   23aa0:	ldr	w8, [sp, #132]
   23aa4:	mov	w11, w8
   23aa8:	mov	x12, #0x2                   	// #2
   23aac:	ldrh	w8, [x10, x11, lsl #1]
   23ab0:	ldr	x10, [sp, #136]
   23ab4:	ldr	w9, [sp, #132]
   23ab8:	mov	w11, w9
   23abc:	mul	x11, x12, x11
   23ac0:	add	x10, x10, x11
   23ac4:	ldrh	w9, [x10]
   23ac8:	subs	w8, w9, w8, asr #5
   23acc:	strh	w8, [x10]
   23ad0:	ldr	w8, [sp, #132]
   23ad4:	lsl	w8, w8, #1
   23ad8:	add	w8, w8, #0x1
   23adc:	str	w8, [sp, #132]
   23ae0:	ldur	w8, [x29, #-156]
   23ae4:	add	w8, w8, #0x1
   23ae8:	stur	w8, [x29, #-156]
   23aec:	ldr	w8, [sp, #124]
   23af0:	add	w8, w8, #0x1
   23af4:	str	w8, [sp, #124]
   23af8:	ldr	w8, [sp, #128]
   23afc:	subs	w8, w8, #0x1
   23b00:	str	w8, [sp, #128]
   23b04:	ldur	w8, [x29, #-136]
   23b08:	mov	w9, #0x1000000             	// #16777216
   23b0c:	cmp	w8, w9
   23b10:	b.cs	23b78 <lzma_mode_is_supported@@XZ_5.0+0x9610>  // b.hs, b.nlast
   23b14:	ldur	x8, [x29, #-144]
   23b18:	ldur	x9, [x29, #-48]
   23b1c:	cmp	x8, x9
   23b20:	cset	w10, eq  // eq = none
   23b24:	and	w10, w10, #0x1
   23b28:	mov	w0, w10
   23b2c:	sxtw	x8, w0
   23b30:	cbz	x8, 23b4c <lzma_mode_is_supported@@XZ_5.0+0x95e4>
   23b34:	ldur	x8, [x29, #-56]
   23b38:	mov	x9, #0x6ea0                	// #28320
   23b3c:	add	x8, x8, x9
   23b40:	mov	w10, #0x2a                  	// #42
   23b44:	str	w10, [x8]
   23b48:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23b4c:	ldur	w8, [x29, #-136]
   23b50:	lsl	w8, w8, #8
   23b54:	stur	w8, [x29, #-136]
   23b58:	ldur	w8, [x29, #-132]
   23b5c:	ldur	x9, [x29, #-32]
   23b60:	ldur	x10, [x29, #-144]
   23b64:	add	x11, x10, #0x1
   23b68:	stur	x11, [x29, #-144]
   23b6c:	ldrb	w12, [x9, x10]
   23b70:	orr	w8, w12, w8, lsl #8
   23b74:	stur	w8, [x29, #-132]
   23b78:	ldur	w8, [x29, #-136]
   23b7c:	lsr	w8, w8, #11
   23b80:	ldr	x9, [sp, #136]
   23b84:	ldr	w10, [sp, #132]
   23b88:	mov	w11, w10
   23b8c:	ldrh	w10, [x9, x11, lsl #1]
   23b90:	mul	w8, w8, w10
   23b94:	stur	w8, [x29, #-148]
   23b98:	ldur	w8, [x29, #-132]
   23b9c:	ldur	w10, [x29, #-148]
   23ba0:	cmp	w8, w10
   23ba4:	b.cs	23bfc <lzma_mode_is_supported@@XZ_5.0+0x9694>  // b.hs, b.nlast
   23ba8:	ldur	w8, [x29, #-148]
   23bac:	stur	w8, [x29, #-136]
   23bb0:	ldr	x9, [sp, #136]
   23bb4:	ldr	w8, [sp, #132]
   23bb8:	mov	w10, w8
   23bbc:	mov	x11, #0x2                   	// #2
   23bc0:	ldrh	w8, [x9, x10, lsl #1]
   23bc4:	mov	w12, #0x800                 	// #2048
   23bc8:	subs	w8, w12, w8
   23bcc:	ldr	x9, [sp, #136]
   23bd0:	ldr	w12, [sp, #132]
   23bd4:	mov	w10, w12
   23bd8:	mul	x10, x11, x10
   23bdc:	add	x9, x9, x10
   23be0:	ldrh	w12, [x9]
   23be4:	add	w8, w12, w8, lsr #5
   23be8:	strh	w8, [x9]
   23bec:	ldr	w8, [sp, #132]
   23bf0:	lsl	w8, w8, #1
   23bf4:	str	w8, [sp, #132]
   23bf8:	b	23c78 <lzma_mode_is_supported@@XZ_5.0+0x9710>
   23bfc:	ldur	w8, [x29, #-148]
   23c00:	ldur	w9, [x29, #-136]
   23c04:	subs	w8, w9, w8
   23c08:	stur	w8, [x29, #-136]
   23c0c:	ldur	w8, [x29, #-148]
   23c10:	ldur	w9, [x29, #-132]
   23c14:	subs	w8, w9, w8
   23c18:	stur	w8, [x29, #-132]
   23c1c:	ldr	x10, [sp, #136]
   23c20:	ldr	w8, [sp, #132]
   23c24:	mov	w11, w8
   23c28:	mov	x12, #0x2                   	// #2
   23c2c:	ldrh	w8, [x10, x11, lsl #1]
   23c30:	ldr	x10, [sp, #136]
   23c34:	ldr	w9, [sp, #132]
   23c38:	mov	w11, w9
   23c3c:	mul	x11, x12, x11
   23c40:	add	x10, x10, x11
   23c44:	ldrh	w9, [x10]
   23c48:	subs	w8, w9, w8, asr #5
   23c4c:	strh	w8, [x10]
   23c50:	ldr	w8, [sp, #132]
   23c54:	mov	w9, #0x1                   	// #1
   23c58:	lsl	w8, w8, #1
   23c5c:	add	w8, w8, #0x1
   23c60:	str	w8, [sp, #132]
   23c64:	ldr	w8, [sp, #124]
   23c68:	lsl	w8, w9, w8
   23c6c:	ldur	w9, [x29, #-156]
   23c70:	add	w8, w9, w8
   23c74:	stur	w8, [x29, #-156]
   23c78:	ldr	w8, [sp, #124]
   23c7c:	add	w8, w8, #0x1
   23c80:	str	w8, [sp, #124]
   23c84:	ldr	w8, [sp, #128]
   23c88:	subs	w8, w8, #0x1
   23c8c:	str	w8, [sp, #128]
   23c90:	ldur	w8, [x29, #-136]
   23c94:	mov	w9, #0x1000000             	// #16777216
   23c98:	cmp	w8, w9
   23c9c:	b.cs	23d04 <lzma_mode_is_supported@@XZ_5.0+0x979c>  // b.hs, b.nlast
   23ca0:	ldur	x8, [x29, #-144]
   23ca4:	ldur	x9, [x29, #-48]
   23ca8:	cmp	x8, x9
   23cac:	cset	w10, eq  // eq = none
   23cb0:	and	w10, w10, #0x1
   23cb4:	mov	w0, w10
   23cb8:	sxtw	x8, w0
   23cbc:	cbz	x8, 23cd8 <lzma_mode_is_supported@@XZ_5.0+0x9770>
   23cc0:	ldur	x8, [x29, #-56]
   23cc4:	mov	x9, #0x6ea0                	// #28320
   23cc8:	add	x8, x8, x9
   23ccc:	mov	w10, #0x2a                  	// #42
   23cd0:	str	w10, [x8]
   23cd4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23cd8:	ldur	w8, [x29, #-136]
   23cdc:	lsl	w8, w8, #8
   23ce0:	stur	w8, [x29, #-136]
   23ce4:	ldur	w8, [x29, #-132]
   23ce8:	ldur	x9, [x29, #-32]
   23cec:	ldur	x10, [x29, #-144]
   23cf0:	add	x11, x10, #0x1
   23cf4:	stur	x11, [x29, #-144]
   23cf8:	ldrb	w12, [x9, x10]
   23cfc:	orr	w8, w12, w8, lsl #8
   23d00:	stur	w8, [x29, #-132]
   23d04:	ldur	w8, [x29, #-136]
   23d08:	lsr	w8, w8, #11
   23d0c:	ldr	x9, [sp, #136]
   23d10:	ldr	w10, [sp, #132]
   23d14:	mov	w11, w10
   23d18:	ldrh	w10, [x9, x11, lsl #1]
   23d1c:	mul	w8, w8, w10
   23d20:	stur	w8, [x29, #-148]
   23d24:	ldur	w8, [x29, #-132]
   23d28:	ldur	w10, [x29, #-148]
   23d2c:	cmp	w8, w10
   23d30:	b.cs	23d88 <lzma_mode_is_supported@@XZ_5.0+0x9820>  // b.hs, b.nlast
   23d34:	ldur	w8, [x29, #-148]
   23d38:	stur	w8, [x29, #-136]
   23d3c:	ldr	x9, [sp, #136]
   23d40:	ldr	w8, [sp, #132]
   23d44:	mov	w10, w8
   23d48:	mov	x11, #0x2                   	// #2
   23d4c:	ldrh	w8, [x9, x10, lsl #1]
   23d50:	mov	w12, #0x800                 	// #2048
   23d54:	subs	w8, w12, w8
   23d58:	ldr	x9, [sp, #136]
   23d5c:	ldr	w12, [sp, #132]
   23d60:	mov	w10, w12
   23d64:	mul	x10, x11, x10
   23d68:	add	x9, x9, x10
   23d6c:	ldrh	w12, [x9]
   23d70:	add	w8, w12, w8, lsr #5
   23d74:	strh	w8, [x9]
   23d78:	ldr	w8, [sp, #132]
   23d7c:	lsl	w8, w8, #1
   23d80:	str	w8, [sp, #132]
   23d84:	b	23e04 <lzma_mode_is_supported@@XZ_5.0+0x989c>
   23d88:	ldur	w8, [x29, #-148]
   23d8c:	ldur	w9, [x29, #-136]
   23d90:	subs	w8, w9, w8
   23d94:	stur	w8, [x29, #-136]
   23d98:	ldur	w8, [x29, #-148]
   23d9c:	ldur	w9, [x29, #-132]
   23da0:	subs	w8, w9, w8
   23da4:	stur	w8, [x29, #-132]
   23da8:	ldr	x10, [sp, #136]
   23dac:	ldr	w8, [sp, #132]
   23db0:	mov	w11, w8
   23db4:	mov	x12, #0x2                   	// #2
   23db8:	ldrh	w8, [x10, x11, lsl #1]
   23dbc:	ldr	x10, [sp, #136]
   23dc0:	ldr	w9, [sp, #132]
   23dc4:	mov	w11, w9
   23dc8:	mul	x11, x12, x11
   23dcc:	add	x10, x10, x11
   23dd0:	ldrh	w9, [x10]
   23dd4:	subs	w8, w9, w8, asr #5
   23dd8:	strh	w8, [x10]
   23ddc:	ldr	w8, [sp, #132]
   23de0:	mov	w9, #0x1                   	// #1
   23de4:	lsl	w8, w8, #1
   23de8:	add	w8, w8, #0x1
   23dec:	str	w8, [sp, #132]
   23df0:	ldr	w8, [sp, #124]
   23df4:	lsl	w8, w9, w8
   23df8:	ldur	w9, [x29, #-156]
   23dfc:	add	w8, w9, w8
   23e00:	stur	w8, [x29, #-156]
   23e04:	ldr	w8, [sp, #124]
   23e08:	add	w8, w8, #0x1
   23e0c:	str	w8, [sp, #124]
   23e10:	ldr	w8, [sp, #128]
   23e14:	subs	w8, w8, #0x1
   23e18:	str	w8, [sp, #128]
   23e1c:	ldur	w8, [x29, #-136]
   23e20:	mov	w9, #0x1000000             	// #16777216
   23e24:	cmp	w8, w9
   23e28:	b.cs	23e90 <lzma_mode_is_supported@@XZ_5.0+0x9928>  // b.hs, b.nlast
   23e2c:	ldur	x8, [x29, #-144]
   23e30:	ldur	x9, [x29, #-48]
   23e34:	cmp	x8, x9
   23e38:	cset	w10, eq  // eq = none
   23e3c:	and	w10, w10, #0x1
   23e40:	mov	w0, w10
   23e44:	sxtw	x8, w0
   23e48:	cbz	x8, 23e64 <lzma_mode_is_supported@@XZ_5.0+0x98fc>
   23e4c:	ldur	x8, [x29, #-56]
   23e50:	mov	x9, #0x6ea0                	// #28320
   23e54:	add	x8, x8, x9
   23e58:	mov	w10, #0x2a                  	// #42
   23e5c:	str	w10, [x8]
   23e60:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23e64:	ldur	w8, [x29, #-136]
   23e68:	lsl	w8, w8, #8
   23e6c:	stur	w8, [x29, #-136]
   23e70:	ldur	w8, [x29, #-132]
   23e74:	ldur	x9, [x29, #-32]
   23e78:	ldur	x10, [x29, #-144]
   23e7c:	add	x11, x10, #0x1
   23e80:	stur	x11, [x29, #-144]
   23e84:	ldrb	w12, [x9, x10]
   23e88:	orr	w8, w12, w8, lsl #8
   23e8c:	stur	w8, [x29, #-132]
   23e90:	ldur	w8, [x29, #-136]
   23e94:	lsr	w8, w8, #11
   23e98:	ldr	x9, [sp, #136]
   23e9c:	ldr	w10, [sp, #132]
   23ea0:	mov	w11, w10
   23ea4:	ldrh	w10, [x9, x11, lsl #1]
   23ea8:	mul	w8, w8, w10
   23eac:	stur	w8, [x29, #-148]
   23eb0:	ldur	w8, [x29, #-132]
   23eb4:	ldur	w10, [x29, #-148]
   23eb8:	cmp	w8, w10
   23ebc:	b.cs	23f14 <lzma_mode_is_supported@@XZ_5.0+0x99ac>  // b.hs, b.nlast
   23ec0:	ldur	w8, [x29, #-148]
   23ec4:	stur	w8, [x29, #-136]
   23ec8:	ldr	x9, [sp, #136]
   23ecc:	ldr	w8, [sp, #132]
   23ed0:	mov	w10, w8
   23ed4:	mov	x11, #0x2                   	// #2
   23ed8:	ldrh	w8, [x9, x10, lsl #1]
   23edc:	mov	w12, #0x800                 	// #2048
   23ee0:	subs	w8, w12, w8
   23ee4:	ldr	x9, [sp, #136]
   23ee8:	ldr	w12, [sp, #132]
   23eec:	mov	w10, w12
   23ef0:	mul	x10, x11, x10
   23ef4:	add	x9, x9, x10
   23ef8:	ldrh	w12, [x9]
   23efc:	add	w8, w12, w8, lsr #5
   23f00:	strh	w8, [x9]
   23f04:	ldr	w8, [sp, #132]
   23f08:	lsl	w8, w8, #1
   23f0c:	str	w8, [sp, #132]
   23f10:	b	23f90 <lzma_mode_is_supported@@XZ_5.0+0x9a28>
   23f14:	ldur	w8, [x29, #-148]
   23f18:	ldur	w9, [x29, #-136]
   23f1c:	subs	w8, w9, w8
   23f20:	stur	w8, [x29, #-136]
   23f24:	ldur	w8, [x29, #-148]
   23f28:	ldur	w9, [x29, #-132]
   23f2c:	subs	w8, w9, w8
   23f30:	stur	w8, [x29, #-132]
   23f34:	ldr	x10, [sp, #136]
   23f38:	ldr	w8, [sp, #132]
   23f3c:	mov	w11, w8
   23f40:	mov	x12, #0x2                   	// #2
   23f44:	ldrh	w8, [x10, x11, lsl #1]
   23f48:	ldr	x10, [sp, #136]
   23f4c:	ldr	w9, [sp, #132]
   23f50:	mov	w11, w9
   23f54:	mul	x11, x12, x11
   23f58:	add	x10, x10, x11
   23f5c:	ldrh	w9, [x10]
   23f60:	subs	w8, w9, w8, asr #5
   23f64:	strh	w8, [x10]
   23f68:	ldr	w8, [sp, #132]
   23f6c:	mov	w9, #0x1                   	// #1
   23f70:	lsl	w8, w8, #1
   23f74:	add	w8, w8, #0x1
   23f78:	str	w8, [sp, #132]
   23f7c:	ldr	w8, [sp, #124]
   23f80:	lsl	w8, w9, w8
   23f84:	ldur	w9, [x29, #-156]
   23f88:	add	w8, w9, w8
   23f8c:	stur	w8, [x29, #-156]
   23f90:	ldr	w8, [sp, #124]
   23f94:	add	w8, w8, #0x1
   23f98:	str	w8, [sp, #124]
   23f9c:	ldr	w8, [sp, #128]
   23fa0:	subs	w8, w8, #0x1
   23fa4:	str	w8, [sp, #128]
   23fa8:	ldur	w8, [x29, #-136]
   23fac:	mov	w9, #0x1000000             	// #16777216
   23fb0:	cmp	w8, w9
   23fb4:	b.cs	2401c <lzma_mode_is_supported@@XZ_5.0+0x9ab4>  // b.hs, b.nlast
   23fb8:	ldur	x8, [x29, #-144]
   23fbc:	ldur	x9, [x29, #-48]
   23fc0:	cmp	x8, x9
   23fc4:	cset	w10, eq  // eq = none
   23fc8:	and	w10, w10, #0x1
   23fcc:	mov	w0, w10
   23fd0:	sxtw	x8, w0
   23fd4:	cbz	x8, 23ff0 <lzma_mode_is_supported@@XZ_5.0+0x9a88>
   23fd8:	ldur	x8, [x29, #-56]
   23fdc:	mov	x9, #0x6ea0                	// #28320
   23fe0:	add	x8, x8, x9
   23fe4:	mov	w10, #0x2a                  	// #42
   23fe8:	str	w10, [x8]
   23fec:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   23ff0:	ldur	w8, [x29, #-136]
   23ff4:	lsl	w8, w8, #8
   23ff8:	stur	w8, [x29, #-136]
   23ffc:	ldur	w8, [x29, #-132]
   24000:	ldur	x9, [x29, #-32]
   24004:	ldur	x10, [x29, #-144]
   24008:	add	x11, x10, #0x1
   2400c:	stur	x11, [x29, #-144]
   24010:	ldrb	w12, [x9, x10]
   24014:	orr	w8, w12, w8, lsl #8
   24018:	stur	w8, [x29, #-132]
   2401c:	ldur	w8, [x29, #-136]
   24020:	lsr	w8, w8, #11
   24024:	ldr	x9, [sp, #136]
   24028:	ldr	w10, [sp, #132]
   2402c:	mov	w11, w10
   24030:	ldrh	w10, [x9, x11, lsl #1]
   24034:	mul	w8, w8, w10
   24038:	stur	w8, [x29, #-148]
   2403c:	ldur	w8, [x29, #-132]
   24040:	ldur	w10, [x29, #-148]
   24044:	cmp	w8, w10
   24048:	b.cs	24094 <lzma_mode_is_supported@@XZ_5.0+0x9b2c>  // b.hs, b.nlast
   2404c:	ldur	w8, [x29, #-148]
   24050:	stur	w8, [x29, #-136]
   24054:	ldr	x9, [sp, #136]
   24058:	ldr	w8, [sp, #132]
   2405c:	mov	w10, w8
   24060:	mov	x11, #0x2                   	// #2
   24064:	ldrh	w8, [x9, x10, lsl #1]
   24068:	mov	w12, #0x800                 	// #2048
   2406c:	subs	w8, w12, w8
   24070:	ldr	x9, [sp, #136]
   24074:	ldr	w12, [sp, #132]
   24078:	mov	w10, w12
   2407c:	mul	x10, x11, x10
   24080:	add	x9, x9, x10
   24084:	ldrh	w12, [x9]
   24088:	add	w8, w12, w8, lsr #5
   2408c:	strh	w8, [x9]
   24090:	b	24100 <lzma_mode_is_supported@@XZ_5.0+0x9b98>
   24094:	ldur	w8, [x29, #-148]
   24098:	ldur	w9, [x29, #-136]
   2409c:	subs	w8, w9, w8
   240a0:	stur	w8, [x29, #-136]
   240a4:	ldur	w8, [x29, #-148]
   240a8:	ldur	w9, [x29, #-132]
   240ac:	subs	w8, w9, w8
   240b0:	stur	w8, [x29, #-132]
   240b4:	ldr	x10, [sp, #136]
   240b8:	ldr	w8, [sp, #132]
   240bc:	mov	w11, w8
   240c0:	mov	x12, #0x2                   	// #2
   240c4:	ldrh	w8, [x10, x11, lsl #1]
   240c8:	ldr	x10, [sp, #136]
   240cc:	ldr	w9, [sp, #132]
   240d0:	mov	w11, w9
   240d4:	mul	x11, x12, x11
   240d8:	add	x10, x10, x11
   240dc:	ldrh	w9, [x10]
   240e0:	subs	w8, w9, w8, asr #5
   240e4:	strh	w8, [x10]
   240e8:	ldr	w8, [sp, #124]
   240ec:	mov	w9, #0x1                   	// #1
   240f0:	lsl	w8, w9, w8
   240f4:	ldur	w9, [x29, #-156]
   240f8:	add	w8, w9, w8
   240fc:	stur	w8, [x29, #-156]
   24100:	b	248bc <lzma_mode_is_supported@@XZ_5.0+0xa354>
   24104:	ldr	w8, [sp, #128]
   24108:	subs	w8, w8, #0x4
   2410c:	str	w8, [sp, #128]
   24110:	ldur	w8, [x29, #-136]
   24114:	mov	w9, #0x1000000             	// #16777216
   24118:	cmp	w8, w9
   2411c:	b.cs	24184 <lzma_mode_is_supported@@XZ_5.0+0x9c1c>  // b.hs, b.nlast
   24120:	ldur	x8, [x29, #-144]
   24124:	ldur	x9, [x29, #-48]
   24128:	cmp	x8, x9
   2412c:	cset	w10, eq  // eq = none
   24130:	and	w10, w10, #0x1
   24134:	mov	w0, w10
   24138:	sxtw	x8, w0
   2413c:	cbz	x8, 24158 <lzma_mode_is_supported@@XZ_5.0+0x9bf0>
   24140:	ldur	x8, [x29, #-56]
   24144:	mov	x9, #0x6ea0                	// #28320
   24148:	add	x8, x8, x9
   2414c:	mov	w10, #0x2b                  	// #43
   24150:	str	w10, [x8]
   24154:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24158:	ldur	w8, [x29, #-136]
   2415c:	lsl	w8, w8, #8
   24160:	stur	w8, [x29, #-136]
   24164:	ldur	w8, [x29, #-132]
   24168:	ldur	x9, [x29, #-32]
   2416c:	ldur	x10, [x29, #-144]
   24170:	add	x11, x10, #0x1
   24174:	stur	x11, [x29, #-144]
   24178:	ldrb	w12, [x9, x10]
   2417c:	orr	w8, w12, w8, lsl #8
   24180:	stur	w8, [x29, #-132]
   24184:	ldur	w8, [x29, #-136]
   24188:	lsr	w8, w8, #1
   2418c:	stur	w8, [x29, #-136]
   24190:	ldur	w8, [x29, #-136]
   24194:	ldur	w9, [x29, #-132]
   24198:	subs	w8, w9, w8
   2419c:	stur	w8, [x29, #-132]
   241a0:	ldur	w8, [x29, #-132]
   241a4:	mov	w9, wzr
   241a8:	subs	w8, w9, w8, lsr #31
   241ac:	stur	w8, [x29, #-148]
   241b0:	ldur	w8, [x29, #-136]
   241b4:	ldur	w9, [x29, #-148]
   241b8:	and	w8, w8, w9
   241bc:	ldur	w9, [x29, #-132]
   241c0:	add	w8, w9, w8
   241c4:	stur	w8, [x29, #-132]
   241c8:	ldur	w8, [x29, #-156]
   241cc:	ldur	w9, [x29, #-148]
   241d0:	add	w9, w9, #0x1
   241d4:	add	w8, w9, w8, lsl #1
   241d8:	stur	w8, [x29, #-156]
   241dc:	ldr	w8, [sp, #128]
   241e0:	subs	w8, w8, #0x1
   241e4:	str	w8, [sp, #128]
   241e8:	cmp	w8, #0x0
   241ec:	cset	w8, hi  // hi = pmore
   241f0:	tbnz	w8, #0, 24110 <lzma_mode_is_supported@@XZ_5.0+0x9ba8>
   241f4:	ldur	w8, [x29, #-156]
   241f8:	lsl	w8, w8, #4
   241fc:	stur	w8, [x29, #-156]
   24200:	mov	w8, #0x1                   	// #1
   24204:	str	w8, [sp, #132]
   24208:	ldur	w8, [x29, #-136]
   2420c:	mov	w9, #0x1000000             	// #16777216
   24210:	cmp	w8, w9
   24214:	b.cs	2427c <lzma_mode_is_supported@@XZ_5.0+0x9d14>  // b.hs, b.nlast
   24218:	ldur	x8, [x29, #-144]
   2421c:	ldur	x9, [x29, #-48]
   24220:	cmp	x8, x9
   24224:	cset	w10, eq  // eq = none
   24228:	and	w10, w10, #0x1
   2422c:	mov	w0, w10
   24230:	sxtw	x8, w0
   24234:	cbz	x8, 24250 <lzma_mode_is_supported@@XZ_5.0+0x9ce8>
   24238:	ldur	x8, [x29, #-56]
   2423c:	mov	x9, #0x6ea0                	// #28320
   24240:	add	x8, x8, x9
   24244:	mov	w10, #0x2c                  	// #44
   24248:	str	w10, [x8]
   2424c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24250:	ldur	w8, [x29, #-136]
   24254:	lsl	w8, w8, #8
   24258:	stur	w8, [x29, #-136]
   2425c:	ldur	w8, [x29, #-132]
   24260:	ldur	x9, [x29, #-32]
   24264:	ldur	x10, [x29, #-144]
   24268:	add	x11, x10, #0x1
   2426c:	stur	x11, [x29, #-144]
   24270:	ldrb	w12, [x9, x10]
   24274:	orr	w8, w12, w8, lsl #8
   24278:	stur	w8, [x29, #-132]
   2427c:	ldur	w8, [x29, #-136]
   24280:	lsr	w8, w8, #11
   24284:	ldur	x9, [x29, #-56]
   24288:	mov	x10, #0x6644                	// #26180
   2428c:	add	x9, x9, x10
   24290:	ldr	w11, [sp, #132]
   24294:	mov	w10, w11
   24298:	ldrh	w11, [x9, x10, lsl #1]
   2429c:	mul	w8, w8, w11
   242a0:	stur	w8, [x29, #-148]
   242a4:	ldur	w8, [x29, #-132]
   242a8:	ldur	w11, [x29, #-148]
   242ac:	cmp	w8, w11
   242b0:	b.cs	24314 <lzma_mode_is_supported@@XZ_5.0+0x9dac>  // b.hs, b.nlast
   242b4:	ldur	w8, [x29, #-148]
   242b8:	stur	w8, [x29, #-136]
   242bc:	ldur	x9, [x29, #-56]
   242c0:	mov	x10, #0x6644                	// #26180
   242c4:	add	x9, x9, x10
   242c8:	ldr	w8, [sp, #132]
   242cc:	mov	w11, w8
   242d0:	mov	x12, #0x2                   	// #2
   242d4:	ldrh	w8, [x9, x11, lsl #1]
   242d8:	mov	w13, #0x800                 	// #2048
   242dc:	subs	w8, w13, w8
   242e0:	ldur	x9, [x29, #-56]
   242e4:	add	x9, x9, x10
   242e8:	ldr	w13, [sp, #132]
   242ec:	mov	w10, w13
   242f0:	mul	x10, x12, x10
   242f4:	add	x9, x9, x10
   242f8:	ldrh	w13, [x9]
   242fc:	add	w8, w13, w8, lsr #5
   24300:	strh	w8, [x9]
   24304:	ldr	w8, [sp, #132]
   24308:	lsl	w8, w8, #1
   2430c:	str	w8, [sp, #132]
   24310:	b	24390 <lzma_mode_is_supported@@XZ_5.0+0x9e28>
   24314:	ldur	w8, [x29, #-148]
   24318:	ldur	w9, [x29, #-136]
   2431c:	subs	w8, w9, w8
   24320:	stur	w8, [x29, #-136]
   24324:	ldur	w8, [x29, #-148]
   24328:	ldur	w9, [x29, #-132]
   2432c:	subs	w8, w9, w8
   24330:	stur	w8, [x29, #-132]
   24334:	ldur	x10, [x29, #-56]
   24338:	mov	x11, #0x6644                	// #26180
   2433c:	add	x10, x10, x11
   24340:	ldr	w8, [sp, #132]
   24344:	mov	w12, w8
   24348:	mov	x13, #0x2                   	// #2
   2434c:	ldrh	w8, [x10, x12, lsl #1]
   24350:	ldur	x10, [x29, #-56]
   24354:	add	x10, x10, x11
   24358:	ldr	w9, [sp, #132]
   2435c:	mov	w11, w9
   24360:	mul	x11, x13, x11
   24364:	add	x10, x10, x11
   24368:	ldrh	w9, [x10]
   2436c:	subs	w8, w9, w8, asr #5
   24370:	strh	w8, [x10]
   24374:	ldr	w8, [sp, #132]
   24378:	lsl	w8, w8, #1
   2437c:	add	w8, w8, #0x1
   24380:	str	w8, [sp, #132]
   24384:	ldur	w8, [x29, #-156]
   24388:	add	w8, w8, #0x1
   2438c:	stur	w8, [x29, #-156]
   24390:	ldur	w8, [x29, #-136]
   24394:	mov	w9, #0x1000000             	// #16777216
   24398:	cmp	w8, w9
   2439c:	b.cs	24404 <lzma_mode_is_supported@@XZ_5.0+0x9e9c>  // b.hs, b.nlast
   243a0:	ldur	x8, [x29, #-144]
   243a4:	ldur	x9, [x29, #-48]
   243a8:	cmp	x8, x9
   243ac:	cset	w10, eq  // eq = none
   243b0:	and	w10, w10, #0x1
   243b4:	mov	w0, w10
   243b8:	sxtw	x8, w0
   243bc:	cbz	x8, 243d8 <lzma_mode_is_supported@@XZ_5.0+0x9e70>
   243c0:	ldur	x8, [x29, #-56]
   243c4:	mov	x9, #0x6ea0                	// #28320
   243c8:	add	x8, x8, x9
   243cc:	mov	w10, #0x2d                  	// #45
   243d0:	str	w10, [x8]
   243d4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   243d8:	ldur	w8, [x29, #-136]
   243dc:	lsl	w8, w8, #8
   243e0:	stur	w8, [x29, #-136]
   243e4:	ldur	w8, [x29, #-132]
   243e8:	ldur	x9, [x29, #-32]
   243ec:	ldur	x10, [x29, #-144]
   243f0:	add	x11, x10, #0x1
   243f4:	stur	x11, [x29, #-144]
   243f8:	ldrb	w12, [x9, x10]
   243fc:	orr	w8, w12, w8, lsl #8
   24400:	stur	w8, [x29, #-132]
   24404:	ldur	w8, [x29, #-136]
   24408:	lsr	w8, w8, #11
   2440c:	ldur	x9, [x29, #-56]
   24410:	mov	x10, #0x6644                	// #26180
   24414:	add	x9, x9, x10
   24418:	ldr	w11, [sp, #132]
   2441c:	mov	w10, w11
   24420:	ldrh	w11, [x9, x10, lsl #1]
   24424:	mul	w8, w8, w11
   24428:	stur	w8, [x29, #-148]
   2442c:	ldur	w8, [x29, #-132]
   24430:	ldur	w11, [x29, #-148]
   24434:	cmp	w8, w11
   24438:	b.cs	2449c <lzma_mode_is_supported@@XZ_5.0+0x9f34>  // b.hs, b.nlast
   2443c:	ldur	w8, [x29, #-148]
   24440:	stur	w8, [x29, #-136]
   24444:	ldur	x9, [x29, #-56]
   24448:	mov	x10, #0x6644                	// #26180
   2444c:	add	x9, x9, x10
   24450:	ldr	w8, [sp, #132]
   24454:	mov	w11, w8
   24458:	mov	x12, #0x2                   	// #2
   2445c:	ldrh	w8, [x9, x11, lsl #1]
   24460:	mov	w13, #0x800                 	// #2048
   24464:	subs	w8, w13, w8
   24468:	ldur	x9, [x29, #-56]
   2446c:	add	x9, x9, x10
   24470:	ldr	w13, [sp, #132]
   24474:	mov	w10, w13
   24478:	mul	x10, x12, x10
   2447c:	add	x9, x9, x10
   24480:	ldrh	w13, [x9]
   24484:	add	w8, w13, w8, lsr #5
   24488:	strh	w8, [x9]
   2448c:	ldr	w8, [sp, #132]
   24490:	lsl	w8, w8, #1
   24494:	str	w8, [sp, #132]
   24498:	b	24518 <lzma_mode_is_supported@@XZ_5.0+0x9fb0>
   2449c:	ldur	w8, [x29, #-148]
   244a0:	ldur	w9, [x29, #-136]
   244a4:	subs	w8, w9, w8
   244a8:	stur	w8, [x29, #-136]
   244ac:	ldur	w8, [x29, #-148]
   244b0:	ldur	w9, [x29, #-132]
   244b4:	subs	w8, w9, w8
   244b8:	stur	w8, [x29, #-132]
   244bc:	ldur	x10, [x29, #-56]
   244c0:	mov	x11, #0x6644                	// #26180
   244c4:	add	x10, x10, x11
   244c8:	ldr	w8, [sp, #132]
   244cc:	mov	w12, w8
   244d0:	mov	x13, #0x2                   	// #2
   244d4:	ldrh	w8, [x10, x12, lsl #1]
   244d8:	ldur	x10, [x29, #-56]
   244dc:	add	x10, x10, x11
   244e0:	ldr	w9, [sp, #132]
   244e4:	mov	w11, w9
   244e8:	mul	x11, x13, x11
   244ec:	add	x10, x10, x11
   244f0:	ldrh	w9, [x10]
   244f4:	subs	w8, w9, w8, asr #5
   244f8:	strh	w8, [x10]
   244fc:	ldr	w8, [sp, #132]
   24500:	lsl	w8, w8, #1
   24504:	add	w8, w8, #0x1
   24508:	str	w8, [sp, #132]
   2450c:	ldur	w8, [x29, #-156]
   24510:	add	w8, w8, #0x2
   24514:	stur	w8, [x29, #-156]
   24518:	ldur	w8, [x29, #-136]
   2451c:	mov	w9, #0x1000000             	// #16777216
   24520:	cmp	w8, w9
   24524:	b.cs	2458c <lzma_mode_is_supported@@XZ_5.0+0xa024>  // b.hs, b.nlast
   24528:	ldur	x8, [x29, #-144]
   2452c:	ldur	x9, [x29, #-48]
   24530:	cmp	x8, x9
   24534:	cset	w10, eq  // eq = none
   24538:	and	w10, w10, #0x1
   2453c:	mov	w0, w10
   24540:	sxtw	x8, w0
   24544:	cbz	x8, 24560 <lzma_mode_is_supported@@XZ_5.0+0x9ff8>
   24548:	ldur	x8, [x29, #-56]
   2454c:	mov	x9, #0x6ea0                	// #28320
   24550:	add	x8, x8, x9
   24554:	mov	w10, #0x2e                  	// #46
   24558:	str	w10, [x8]
   2455c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24560:	ldur	w8, [x29, #-136]
   24564:	lsl	w8, w8, #8
   24568:	stur	w8, [x29, #-136]
   2456c:	ldur	w8, [x29, #-132]
   24570:	ldur	x9, [x29, #-32]
   24574:	ldur	x10, [x29, #-144]
   24578:	add	x11, x10, #0x1
   2457c:	stur	x11, [x29, #-144]
   24580:	ldrb	w12, [x9, x10]
   24584:	orr	w8, w12, w8, lsl #8
   24588:	stur	w8, [x29, #-132]
   2458c:	ldur	w8, [x29, #-136]
   24590:	lsr	w8, w8, #11
   24594:	ldur	x9, [x29, #-56]
   24598:	mov	x10, #0x6644                	// #26180
   2459c:	add	x9, x9, x10
   245a0:	ldr	w11, [sp, #132]
   245a4:	mov	w10, w11
   245a8:	ldrh	w11, [x9, x10, lsl #1]
   245ac:	mul	w8, w8, w11
   245b0:	stur	w8, [x29, #-148]
   245b4:	ldur	w8, [x29, #-132]
   245b8:	ldur	w11, [x29, #-148]
   245bc:	cmp	w8, w11
   245c0:	b.cs	24624 <lzma_mode_is_supported@@XZ_5.0+0xa0bc>  // b.hs, b.nlast
   245c4:	ldur	w8, [x29, #-148]
   245c8:	stur	w8, [x29, #-136]
   245cc:	ldur	x9, [x29, #-56]
   245d0:	mov	x10, #0x6644                	// #26180
   245d4:	add	x9, x9, x10
   245d8:	ldr	w8, [sp, #132]
   245dc:	mov	w11, w8
   245e0:	mov	x12, #0x2                   	// #2
   245e4:	ldrh	w8, [x9, x11, lsl #1]
   245e8:	mov	w13, #0x800                 	// #2048
   245ec:	subs	w8, w13, w8
   245f0:	ldur	x9, [x29, #-56]
   245f4:	add	x9, x9, x10
   245f8:	ldr	w13, [sp, #132]
   245fc:	mov	w10, w13
   24600:	mul	x10, x12, x10
   24604:	add	x9, x9, x10
   24608:	ldrh	w13, [x9]
   2460c:	add	w8, w13, w8, lsr #5
   24610:	strh	w8, [x9]
   24614:	ldr	w8, [sp, #132]
   24618:	lsl	w8, w8, #1
   2461c:	str	w8, [sp, #132]
   24620:	b	246a0 <lzma_mode_is_supported@@XZ_5.0+0xa138>
   24624:	ldur	w8, [x29, #-148]
   24628:	ldur	w9, [x29, #-136]
   2462c:	subs	w8, w9, w8
   24630:	stur	w8, [x29, #-136]
   24634:	ldur	w8, [x29, #-148]
   24638:	ldur	w9, [x29, #-132]
   2463c:	subs	w8, w9, w8
   24640:	stur	w8, [x29, #-132]
   24644:	ldur	x10, [x29, #-56]
   24648:	mov	x11, #0x6644                	// #26180
   2464c:	add	x10, x10, x11
   24650:	ldr	w8, [sp, #132]
   24654:	mov	w12, w8
   24658:	mov	x13, #0x2                   	// #2
   2465c:	ldrh	w8, [x10, x12, lsl #1]
   24660:	ldur	x10, [x29, #-56]
   24664:	add	x10, x10, x11
   24668:	ldr	w9, [sp, #132]
   2466c:	mov	w11, w9
   24670:	mul	x11, x13, x11
   24674:	add	x10, x10, x11
   24678:	ldrh	w9, [x10]
   2467c:	subs	w8, w9, w8, asr #5
   24680:	strh	w8, [x10]
   24684:	ldr	w8, [sp, #132]
   24688:	lsl	w8, w8, #1
   2468c:	add	w8, w8, #0x1
   24690:	str	w8, [sp, #132]
   24694:	ldur	w8, [x29, #-156]
   24698:	add	w8, w8, #0x4
   2469c:	stur	w8, [x29, #-156]
   246a0:	ldur	w8, [x29, #-136]
   246a4:	mov	w9, #0x1000000             	// #16777216
   246a8:	cmp	w8, w9
   246ac:	b.cs	24714 <lzma_mode_is_supported@@XZ_5.0+0xa1ac>  // b.hs, b.nlast
   246b0:	ldur	x8, [x29, #-144]
   246b4:	ldur	x9, [x29, #-48]
   246b8:	cmp	x8, x9
   246bc:	cset	w10, eq  // eq = none
   246c0:	and	w10, w10, #0x1
   246c4:	mov	w0, w10
   246c8:	sxtw	x8, w0
   246cc:	cbz	x8, 246e8 <lzma_mode_is_supported@@XZ_5.0+0xa180>
   246d0:	ldur	x8, [x29, #-56]
   246d4:	mov	x9, #0x6ea0                	// #28320
   246d8:	add	x8, x8, x9
   246dc:	mov	w10, #0x2f                  	// #47
   246e0:	str	w10, [x8]
   246e4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   246e8:	ldur	w8, [x29, #-136]
   246ec:	lsl	w8, w8, #8
   246f0:	stur	w8, [x29, #-136]
   246f4:	ldur	w8, [x29, #-132]
   246f8:	ldur	x9, [x29, #-32]
   246fc:	ldur	x10, [x29, #-144]
   24700:	add	x11, x10, #0x1
   24704:	stur	x11, [x29, #-144]
   24708:	ldrb	w12, [x9, x10]
   2470c:	orr	w8, w12, w8, lsl #8
   24710:	stur	w8, [x29, #-132]
   24714:	ldur	w8, [x29, #-136]
   24718:	lsr	w8, w8, #11
   2471c:	ldur	x9, [x29, #-56]
   24720:	mov	x10, #0x6644                	// #26180
   24724:	add	x9, x9, x10
   24728:	ldr	w11, [sp, #132]
   2472c:	mov	w10, w11
   24730:	ldrh	w11, [x9, x10, lsl #1]
   24734:	mul	w8, w8, w11
   24738:	stur	w8, [x29, #-148]
   2473c:	ldur	w8, [x29, #-132]
   24740:	ldur	w11, [x29, #-148]
   24744:	cmp	w8, w11
   24748:	b.cs	247a0 <lzma_mode_is_supported@@XZ_5.0+0xa238>  // b.hs, b.nlast
   2474c:	ldur	w8, [x29, #-148]
   24750:	stur	w8, [x29, #-136]
   24754:	ldur	x9, [x29, #-56]
   24758:	mov	x10, #0x6644                	// #26180
   2475c:	add	x9, x9, x10
   24760:	ldr	w8, [sp, #132]
   24764:	mov	w11, w8
   24768:	mov	x12, #0x2                   	// #2
   2476c:	ldrh	w8, [x9, x11, lsl #1]
   24770:	mov	w13, #0x800                 	// #2048
   24774:	subs	w8, w13, w8
   24778:	ldur	x9, [x29, #-56]
   2477c:	add	x9, x9, x10
   24780:	ldr	w13, [sp, #132]
   24784:	mov	w10, w13
   24788:	mul	x10, x12, x10
   2478c:	add	x9, x9, x10
   24790:	ldrh	w13, [x9]
   24794:	add	w8, w13, w8, lsr #5
   24798:	strh	w8, [x9]
   2479c:	b	2480c <lzma_mode_is_supported@@XZ_5.0+0xa2a4>
   247a0:	ldur	w8, [x29, #-148]
   247a4:	ldur	w9, [x29, #-136]
   247a8:	subs	w8, w9, w8
   247ac:	stur	w8, [x29, #-136]
   247b0:	ldur	w8, [x29, #-148]
   247b4:	ldur	w9, [x29, #-132]
   247b8:	subs	w8, w9, w8
   247bc:	stur	w8, [x29, #-132]
   247c0:	ldur	x10, [x29, #-56]
   247c4:	mov	x11, #0x6644                	// #26180
   247c8:	add	x10, x10, x11
   247cc:	ldr	w8, [sp, #132]
   247d0:	mov	w12, w8
   247d4:	mov	x13, #0x2                   	// #2
   247d8:	ldrh	w8, [x10, x12, lsl #1]
   247dc:	ldur	x10, [x29, #-56]
   247e0:	add	x10, x10, x11
   247e4:	ldr	w9, [sp, #132]
   247e8:	mov	w11, w9
   247ec:	mul	x11, x13, x11
   247f0:	add	x10, x10, x11
   247f4:	ldrh	w9, [x10]
   247f8:	subs	w8, w9, w8, asr #5
   247fc:	strh	w8, [x10]
   24800:	ldur	w8, [x29, #-156]
   24804:	add	w8, w8, #0x8
   24808:	stur	w8, [x29, #-156]
   2480c:	ldur	w8, [x29, #-156]
   24810:	mov	w9, #0xffffffff            	// #-1
   24814:	cmp	w8, w9
   24818:	b.ne	248bc <lzma_mode_is_supported@@XZ_5.0+0xa354>  // b.any
   2481c:	ldur	x8, [x29, #-56]
   24820:	ldr	x8, [x8, #28312]
   24824:	mov	x9, #0xffffffffffffffff    	// #-1
   24828:	cmp	x8, x9
   2482c:	b.eq	2483c <lzma_mode_is_supported@@XZ_5.0+0xa2d4>  // b.none
   24830:	mov	w8, #0x9                   	// #9
   24834:	str	w8, [sp, #104]
   24838:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2483c:	ldur	w8, [x29, #-136]
   24840:	mov	w9, #0x1000000             	// #16777216
   24844:	cmp	w8, w9
   24848:	b.cs	248b0 <lzma_mode_is_supported@@XZ_5.0+0xa348>  // b.hs, b.nlast
   2484c:	ldur	x8, [x29, #-144]
   24850:	ldur	x9, [x29, #-48]
   24854:	cmp	x8, x9
   24858:	cset	w10, eq  // eq = none
   2485c:	and	w10, w10, #0x1
   24860:	mov	w0, w10
   24864:	sxtw	x8, w0
   24868:	cbz	x8, 24884 <lzma_mode_is_supported@@XZ_5.0+0xa31c>
   2486c:	ldur	x8, [x29, #-56]
   24870:	mov	x9, #0x6ea0                	// #28320
   24874:	add	x8, x8, x9
   24878:	mov	w10, #0x30                  	// #48
   2487c:	str	w10, [x8]
   24880:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24884:	ldur	w8, [x29, #-136]
   24888:	lsl	w8, w8, #8
   2488c:	stur	w8, [x29, #-136]
   24890:	ldur	w8, [x29, #-132]
   24894:	ldur	x9, [x29, #-32]
   24898:	ldur	x10, [x29, #-144]
   2489c:	add	x11, x10, #0x1
   248a0:	stur	x11, [x29, #-144]
   248a4:	ldrb	w12, [x9, x10]
   248a8:	orr	w8, w12, w8, lsl #8
   248ac:	stur	w8, [x29, #-132]
   248b0:	mov	w8, #0x1                   	// #1
   248b4:	str	w8, [sp, #104]
   248b8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   248bc:	ldur	w8, [x29, #-156]
   248c0:	mov	w1, w8
   248c4:	sub	x0, x29, #0x70
   248c8:	bl	27944 <lzma_mode_is_supported@@XZ_5.0+0xd3dc>
   248cc:	eor	w8, w0, #0x1
   248d0:	and	w8, w8, #0x1
   248d4:	mov	w1, w8
   248d8:	sxtw	x9, w1
   248dc:	cbz	x9, 248ec <lzma_mode_is_supported@@XZ_5.0+0xa384>
   248e0:	mov	w8, #0x9                   	// #9
   248e4:	str	w8, [sp, #104]
   248e8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   248ec:	b	26a20 <lzma_mode_is_supported@@XZ_5.0+0xc4b8>
   248f0:	ldur	w8, [x29, #-148]
   248f4:	ldur	w9, [x29, #-136]
   248f8:	subs	w8, w9, w8
   248fc:	stur	w8, [x29, #-136]
   24900:	ldur	w8, [x29, #-148]
   24904:	ldur	w9, [x29, #-132]
   24908:	subs	w8, w9, w8
   2490c:	stur	w8, [x29, #-132]
   24910:	ldur	x10, [x29, #-56]
   24914:	mov	x11, #0x6180                	// #24960
   24918:	add	x10, x10, x11
   2491c:	ldur	w8, [x29, #-152]
   24920:	mov	w12, w8
   24924:	mov	x13, #0x2                   	// #2
   24928:	ldrh	w8, [x10, x12, lsl #1]
   2492c:	ldur	x10, [x29, #-56]
   24930:	add	x10, x10, x11
   24934:	ldur	w9, [x29, #-152]
   24938:	mov	w11, w9
   2493c:	mul	x11, x13, x11
   24940:	add	x10, x10, x11
   24944:	ldrh	w9, [x10]
   24948:	subs	w8, w9, w8, asr #5
   2494c:	strh	w8, [x10]
   24950:	sub	x0, x29, #0x70
   24954:	mov	x8, xzr
   24958:	mov	x1, x8
   2495c:	bl	27944 <lzma_mode_is_supported@@XZ_5.0+0xd3dc>
   24960:	eor	w9, w0, #0x1
   24964:	and	w9, w9, #0x1
   24968:	mov	w1, w9
   2496c:	sxtw	x8, w1
   24970:	cbz	x8, 24980 <lzma_mode_is_supported@@XZ_5.0+0xa418>
   24974:	mov	w8, #0x9                   	// #9
   24978:	str	w8, [sp, #104]
   2497c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24980:	ldur	w8, [x29, #-136]
   24984:	mov	w9, #0x1000000             	// #16777216
   24988:	cmp	w8, w9
   2498c:	b.cs	249f4 <lzma_mode_is_supported@@XZ_5.0+0xa48c>  // b.hs, b.nlast
   24990:	ldur	x8, [x29, #-144]
   24994:	ldur	x9, [x29, #-48]
   24998:	cmp	x8, x9
   2499c:	cset	w10, eq  // eq = none
   249a0:	and	w10, w10, #0x1
   249a4:	mov	w0, w10
   249a8:	sxtw	x8, w0
   249ac:	cbz	x8, 249c8 <lzma_mode_is_supported@@XZ_5.0+0xa460>
   249b0:	ldur	x8, [x29, #-56]
   249b4:	mov	x9, #0x6ea0                	// #28320
   249b8:	add	x8, x8, x9
   249bc:	mov	w10, #0x31                  	// #49
   249c0:	str	w10, [x8]
   249c4:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   249c8:	ldur	w8, [x29, #-136]
   249cc:	lsl	w8, w8, #8
   249d0:	stur	w8, [x29, #-136]
   249d4:	ldur	w8, [x29, #-132]
   249d8:	ldur	x9, [x29, #-32]
   249dc:	ldur	x10, [x29, #-144]
   249e0:	add	x11, x10, #0x1
   249e4:	stur	x11, [x29, #-144]
   249e8:	ldrb	w12, [x9, x10]
   249ec:	orr	w8, w12, w8, lsl #8
   249f0:	stur	w8, [x29, #-132]
   249f4:	ldur	w8, [x29, #-136]
   249f8:	lsr	w8, w8, #11
   249fc:	ldur	x9, [x29, #-56]
   24a00:	mov	x10, #0x6198                	// #24984
   24a04:	add	x9, x9, x10
   24a08:	ldur	w11, [x29, #-152]
   24a0c:	mov	w10, w11
   24a10:	ldrh	w11, [x9, x10, lsl #1]
   24a14:	mul	w8, w8, w11
   24a18:	stur	w8, [x29, #-148]
   24a1c:	ldur	w8, [x29, #-132]
   24a20:	ldur	w11, [x29, #-148]
   24a24:	cmp	w8, w11
   24a28:	b.cs	24c9c <lzma_mode_is_supported@@XZ_5.0+0xa734>  // b.hs, b.nlast
   24a2c:	ldur	w8, [x29, #-148]
   24a30:	stur	w8, [x29, #-136]
   24a34:	ldur	x9, [x29, #-56]
   24a38:	mov	x10, #0x6198                	// #24984
   24a3c:	add	x9, x9, x10
   24a40:	ldur	w8, [x29, #-152]
   24a44:	mov	w11, w8
   24a48:	mov	x12, #0x2                   	// #2
   24a4c:	ldrh	w8, [x9, x11, lsl #1]
   24a50:	mov	w13, #0x800                 	// #2048
   24a54:	subs	w8, w13, w8
   24a58:	ldur	x9, [x29, #-56]
   24a5c:	add	x9, x9, x10
   24a60:	ldur	w13, [x29, #-152]
   24a64:	mov	w10, w13
   24a68:	mul	x10, x12, x10
   24a6c:	add	x9, x9, x10
   24a70:	ldrh	w13, [x9]
   24a74:	add	w8, w13, w8, lsr #5
   24a78:	strh	w8, [x9]
   24a7c:	ldur	w8, [x29, #-136]
   24a80:	mov	w9, #0x1000000             	// #16777216
   24a84:	cmp	w8, w9
   24a88:	b.cs	24af0 <lzma_mode_is_supported@@XZ_5.0+0xa588>  // b.hs, b.nlast
   24a8c:	ldur	x8, [x29, #-144]
   24a90:	ldur	x9, [x29, #-48]
   24a94:	cmp	x8, x9
   24a98:	cset	w10, eq  // eq = none
   24a9c:	and	w10, w10, #0x1
   24aa0:	mov	w0, w10
   24aa4:	sxtw	x8, w0
   24aa8:	cbz	x8, 24ac4 <lzma_mode_is_supported@@XZ_5.0+0xa55c>
   24aac:	ldur	x8, [x29, #-56]
   24ab0:	mov	x9, #0x6ea0                	// #28320
   24ab4:	add	x8, x8, x9
   24ab8:	mov	w10, #0x33                  	// #51
   24abc:	str	w10, [x8]
   24ac0:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24ac4:	ldur	w8, [x29, #-136]
   24ac8:	lsl	w8, w8, #8
   24acc:	stur	w8, [x29, #-136]
   24ad0:	ldur	w8, [x29, #-132]
   24ad4:	ldur	x9, [x29, #-32]
   24ad8:	ldur	x10, [x29, #-144]
   24adc:	add	x11, x10, #0x1
   24ae0:	stur	x11, [x29, #-144]
   24ae4:	ldrb	w12, [x9, x10]
   24ae8:	orr	w8, w12, w8, lsl #8
   24aec:	stur	w8, [x29, #-132]
   24af0:	ldur	w8, [x29, #-136]
   24af4:	lsr	w8, w8, #11
   24af8:	ldur	x9, [x29, #-56]
   24afc:	mov	x10, #0x61e0                	// #25056
   24b00:	add	x9, x9, x10
   24b04:	ldur	w11, [x29, #-152]
   24b08:	mov	w10, w11
   24b0c:	mov	x12, #0x20                  	// #32
   24b10:	mul	x10, x12, x10
   24b14:	add	x9, x9, x10
   24b18:	ldr	w11, [sp, #108]
   24b1c:	mov	w10, w11
   24b20:	ldrh	w11, [x9, x10, lsl #1]
   24b24:	mul	w8, w8, w11
   24b28:	stur	w8, [x29, #-148]
   24b2c:	ldur	w8, [x29, #-132]
   24b30:	ldur	w11, [x29, #-148]
   24b34:	cmp	w8, w11
   24b38:	b.cs	24c14 <lzma_mode_is_supported@@XZ_5.0+0xa6ac>  // b.hs, b.nlast
   24b3c:	ldur	w8, [x29, #-148]
   24b40:	stur	w8, [x29, #-136]
   24b44:	ldur	x9, [x29, #-56]
   24b48:	mov	x10, #0x61e0                	// #25056
   24b4c:	add	x9, x9, x10
   24b50:	ldur	w8, [x29, #-152]
   24b54:	mov	w11, w8
   24b58:	mov	x12, #0x20                  	// #32
   24b5c:	mul	x11, x12, x11
   24b60:	add	x9, x9, x11
   24b64:	ldr	w8, [sp, #108]
   24b68:	mov	w11, w8
   24b6c:	mov	x13, #0x2                   	// #2
   24b70:	ldrh	w8, [x9, x11, lsl #1]
   24b74:	mov	w14, #0x800                 	// #2048
   24b78:	subs	w8, w14, w8
   24b7c:	ldur	x9, [x29, #-56]
   24b80:	add	x9, x9, x10
   24b84:	ldur	w14, [x29, #-152]
   24b88:	mov	w10, w14
   24b8c:	mul	x10, x12, x10
   24b90:	add	x9, x9, x10
   24b94:	ldr	w14, [sp, #108]
   24b98:	mov	w10, w14
   24b9c:	mul	x10, x13, x10
   24ba0:	add	x9, x9, x10
   24ba4:	ldrh	w14, [x9]
   24ba8:	add	w8, w14, w8, lsr #5
   24bac:	strh	w8, [x9]
   24bb0:	ldur	w8, [x29, #-152]
   24bb4:	mov	w9, #0x9                   	// #9
   24bb8:	mov	w10, #0xb                   	// #11
   24bbc:	cmp	w8, #0x7
   24bc0:	csel	w8, w9, w10, cc  // cc = lo, ul, last
   24bc4:	stur	w8, [x29, #-152]
   24bc8:	ldur	w1, [x29, #-156]
   24bcc:	sub	x8, x29, #0x70
   24bd0:	mov	x0, x8
   24bd4:	str	x8, [sp, #16]
   24bd8:	bl	27818 <lzma_mode_is_supported@@XZ_5.0+0xd2b0>
   24bdc:	ldr	x8, [sp, #16]
   24be0:	str	w0, [sp, #12]
   24be4:	mov	x0, x8
   24be8:	ldr	w1, [sp, #12]
   24bec:	bl	27898 <lzma_mode_is_supported@@XZ_5.0+0xd330>
   24bf0:	tbnz	w0, #0, 24bf8 <lzma_mode_is_supported@@XZ_5.0+0xa690>
   24bf4:	b	24c10 <lzma_mode_is_supported@@XZ_5.0+0xa6a8>
   24bf8:	ldur	x8, [x29, #-56]
   24bfc:	mov	x9, #0x6ea0                	// #28320
   24c00:	add	x8, x8, x9
   24c04:	mov	w10, #0x32                  	// #50
   24c08:	str	w10, [x8]
   24c0c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24c10:	b	1f9cc <lzma_mode_is_supported@@XZ_5.0+0x5464>
   24c14:	ldur	w8, [x29, #-148]
   24c18:	ldur	w9, [x29, #-136]
   24c1c:	subs	w8, w9, w8
   24c20:	stur	w8, [x29, #-136]
   24c24:	ldur	w8, [x29, #-148]
   24c28:	ldur	w9, [x29, #-132]
   24c2c:	subs	w8, w9, w8
   24c30:	stur	w8, [x29, #-132]
   24c34:	ldur	x10, [x29, #-56]
   24c38:	mov	x11, #0x61e0                	// #25056
   24c3c:	add	x10, x10, x11
   24c40:	ldur	w8, [x29, #-152]
   24c44:	mov	w12, w8
   24c48:	mov	x13, #0x20                  	// #32
   24c4c:	mul	x12, x13, x12
   24c50:	add	x10, x10, x12
   24c54:	ldr	w8, [sp, #108]
   24c58:	mov	w12, w8
   24c5c:	mov	x14, #0x2                   	// #2
   24c60:	ldrh	w8, [x10, x12, lsl #1]
   24c64:	ldur	x10, [x29, #-56]
   24c68:	add	x10, x10, x11
   24c6c:	ldur	w9, [x29, #-152]
   24c70:	mov	w11, w9
   24c74:	mul	x11, x13, x11
   24c78:	add	x10, x10, x11
   24c7c:	ldr	w9, [sp, #108]
   24c80:	mov	w11, w9
   24c84:	mul	x11, x14, x11
   24c88:	add	x10, x10, x11
   24c8c:	ldrh	w9, [x10]
   24c90:	subs	w8, w9, w8, asr #5
   24c94:	strh	w8, [x10]
   24c98:	b	2501c <lzma_mode_is_supported@@XZ_5.0+0xaab4>
   24c9c:	ldur	w8, [x29, #-148]
   24ca0:	ldur	w9, [x29, #-136]
   24ca4:	subs	w8, w9, w8
   24ca8:	stur	w8, [x29, #-136]
   24cac:	ldur	w8, [x29, #-148]
   24cb0:	ldur	w9, [x29, #-132]
   24cb4:	subs	w8, w9, w8
   24cb8:	stur	w8, [x29, #-132]
   24cbc:	ldur	x10, [x29, #-56]
   24cc0:	mov	x11, #0x6198                	// #24984
   24cc4:	add	x10, x10, x11
   24cc8:	ldur	w8, [x29, #-152]
   24ccc:	mov	w12, w8
   24cd0:	mov	x13, #0x2                   	// #2
   24cd4:	ldrh	w8, [x10, x12, lsl #1]
   24cd8:	ldur	x10, [x29, #-56]
   24cdc:	add	x10, x10, x11
   24ce0:	ldur	w9, [x29, #-152]
   24ce4:	mov	w11, w9
   24ce8:	mul	x11, x13, x11
   24cec:	add	x10, x10, x11
   24cf0:	ldrh	w9, [x10]
   24cf4:	subs	w8, w9, w8, asr #5
   24cf8:	strh	w8, [x10]
   24cfc:	ldur	w8, [x29, #-136]
   24d00:	mov	w9, #0x1000000             	// #16777216
   24d04:	cmp	w8, w9
   24d08:	b.cs	24d70 <lzma_mode_is_supported@@XZ_5.0+0xa808>  // b.hs, b.nlast
   24d0c:	ldur	x8, [x29, #-144]
   24d10:	ldur	x9, [x29, #-48]
   24d14:	cmp	x8, x9
   24d18:	cset	w10, eq  // eq = none
   24d1c:	and	w10, w10, #0x1
   24d20:	mov	w0, w10
   24d24:	sxtw	x8, w0
   24d28:	cbz	x8, 24d44 <lzma_mode_is_supported@@XZ_5.0+0xa7dc>
   24d2c:	ldur	x8, [x29, #-56]
   24d30:	mov	x9, #0x6ea0                	// #28320
   24d34:	add	x8, x8, x9
   24d38:	mov	w10, #0x34                  	// #52
   24d3c:	str	w10, [x8]
   24d40:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24d44:	ldur	w8, [x29, #-136]
   24d48:	lsl	w8, w8, #8
   24d4c:	stur	w8, [x29, #-136]
   24d50:	ldur	w8, [x29, #-132]
   24d54:	ldur	x9, [x29, #-32]
   24d58:	ldur	x10, [x29, #-144]
   24d5c:	add	x11, x10, #0x1
   24d60:	stur	x11, [x29, #-144]
   24d64:	ldrb	w12, [x9, x10]
   24d68:	orr	w8, w12, w8, lsl #8
   24d6c:	stur	w8, [x29, #-132]
   24d70:	ldur	w8, [x29, #-136]
   24d74:	lsr	w8, w8, #11
   24d78:	ldur	x9, [x29, #-56]
   24d7c:	mov	x10, #0x61b0                	// #25008
   24d80:	add	x9, x9, x10
   24d84:	ldur	w11, [x29, #-152]
   24d88:	mov	w10, w11
   24d8c:	ldrh	w11, [x9, x10, lsl #1]
   24d90:	mul	w8, w8, w11
   24d94:	stur	w8, [x29, #-148]
   24d98:	ldur	w8, [x29, #-132]
   24d9c:	ldur	w11, [x29, #-148]
   24da0:	cmp	w8, w11
   24da4:	b.cs	24e14 <lzma_mode_is_supported@@XZ_5.0+0xa8ac>  // b.hs, b.nlast
   24da8:	ldur	w8, [x29, #-148]
   24dac:	stur	w8, [x29, #-136]
   24db0:	ldur	x9, [x29, #-56]
   24db4:	mov	x10, #0x61b0                	// #25008
   24db8:	add	x9, x9, x10
   24dbc:	ldur	w8, [x29, #-152]
   24dc0:	mov	w11, w8
   24dc4:	mov	x12, #0x2                   	// #2
   24dc8:	ldrh	w8, [x9, x11, lsl #1]
   24dcc:	mov	w13, #0x800                 	// #2048
   24dd0:	subs	w8, w13, w8
   24dd4:	ldur	x9, [x29, #-56]
   24dd8:	add	x9, x9, x10
   24ddc:	ldur	w13, [x29, #-152]
   24de0:	mov	w10, w13
   24de4:	mul	x10, x12, x10
   24de8:	add	x9, x9, x10
   24dec:	ldrh	w13, [x9]
   24df0:	add	w8, w13, w8, lsr #5
   24df4:	strh	w8, [x9]
   24df8:	ldr	w8, [sp, #160]
   24dfc:	str	w8, [sp, #88]
   24e00:	ldur	w8, [x29, #-156]
   24e04:	str	w8, [sp, #160]
   24e08:	ldr	w8, [sp, #88]
   24e0c:	stur	w8, [x29, #-156]
   24e10:	b	2501c <lzma_mode_is_supported@@XZ_5.0+0xaab4>
   24e14:	ldur	w8, [x29, #-148]
   24e18:	ldur	w9, [x29, #-136]
   24e1c:	subs	w8, w9, w8
   24e20:	stur	w8, [x29, #-136]
   24e24:	ldur	w8, [x29, #-148]
   24e28:	ldur	w9, [x29, #-132]
   24e2c:	subs	w8, w9, w8
   24e30:	stur	w8, [x29, #-132]
   24e34:	ldur	x10, [x29, #-56]
   24e38:	mov	x11, #0x61b0                	// #25008
   24e3c:	add	x10, x10, x11
   24e40:	ldur	w8, [x29, #-152]
   24e44:	mov	w12, w8
   24e48:	mov	x13, #0x2                   	// #2
   24e4c:	ldrh	w8, [x10, x12, lsl #1]
   24e50:	ldur	x10, [x29, #-56]
   24e54:	add	x10, x10, x11
   24e58:	ldur	w9, [x29, #-152]
   24e5c:	mov	w11, w9
   24e60:	mul	x11, x13, x11
   24e64:	add	x10, x10, x11
   24e68:	ldrh	w9, [x10]
   24e6c:	subs	w8, w9, w8, asr #5
   24e70:	strh	w8, [x10]
   24e74:	ldur	w8, [x29, #-136]
   24e78:	mov	w9, #0x1000000             	// #16777216
   24e7c:	cmp	w8, w9
   24e80:	b.cs	24ee8 <lzma_mode_is_supported@@XZ_5.0+0xa980>  // b.hs, b.nlast
   24e84:	ldur	x8, [x29, #-144]
   24e88:	ldur	x9, [x29, #-48]
   24e8c:	cmp	x8, x9
   24e90:	cset	w10, eq  // eq = none
   24e94:	and	w10, w10, #0x1
   24e98:	mov	w0, w10
   24e9c:	sxtw	x8, w0
   24ea0:	cbz	x8, 24ebc <lzma_mode_is_supported@@XZ_5.0+0xa954>
   24ea4:	ldur	x8, [x29, #-56]
   24ea8:	mov	x9, #0x6ea0                	// #28320
   24eac:	add	x8, x8, x9
   24eb0:	mov	w10, #0x35                  	// #53
   24eb4:	str	w10, [x8]
   24eb8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   24ebc:	ldur	w8, [x29, #-136]
   24ec0:	lsl	w8, w8, #8
   24ec4:	stur	w8, [x29, #-136]
   24ec8:	ldur	w8, [x29, #-132]
   24ecc:	ldur	x9, [x29, #-32]
   24ed0:	ldur	x10, [x29, #-144]
   24ed4:	add	x11, x10, #0x1
   24ed8:	stur	x11, [x29, #-144]
   24edc:	ldrb	w12, [x9, x10]
   24ee0:	orr	w8, w12, w8, lsl #8
   24ee4:	stur	w8, [x29, #-132]
   24ee8:	ldur	w8, [x29, #-136]
   24eec:	lsr	w8, w8, #11
   24ef0:	ldur	x9, [x29, #-56]
   24ef4:	mov	x10, #0x61c8                	// #25032
   24ef8:	add	x9, x9, x10
   24efc:	ldur	w11, [x29, #-152]
   24f00:	mov	w10, w11
   24f04:	ldrh	w11, [x9, x10, lsl #1]
   24f08:	mul	w8, w8, w11
   24f0c:	stur	w8, [x29, #-148]
   24f10:	ldur	w8, [x29, #-132]
   24f14:	ldur	w11, [x29, #-148]
   24f18:	cmp	w8, w11
   24f1c:	b.cs	24f94 <lzma_mode_is_supported@@XZ_5.0+0xaa2c>  // b.hs, b.nlast
   24f20:	ldur	w8, [x29, #-148]
   24f24:	stur	w8, [x29, #-136]
   24f28:	ldur	x9, [x29, #-56]
   24f2c:	mov	x10, #0x61c8                	// #25032
   24f30:	add	x9, x9, x10
   24f34:	ldur	w8, [x29, #-152]
   24f38:	mov	w11, w8
   24f3c:	mov	x12, #0x2                   	// #2
   24f40:	ldrh	w8, [x9, x11, lsl #1]
   24f44:	mov	w13, #0x800                 	// #2048
   24f48:	subs	w8, w13, w8
   24f4c:	ldur	x9, [x29, #-56]
   24f50:	add	x9, x9, x10
   24f54:	ldur	w13, [x29, #-152]
   24f58:	mov	w10, w13
   24f5c:	mul	x10, x12, x10
   24f60:	add	x9, x9, x10
   24f64:	ldrh	w13, [x9]
   24f68:	add	w8, w13, w8, lsr #5
   24f6c:	strh	w8, [x9]
   24f70:	ldr	w8, [sp, #156]
   24f74:	str	w8, [sp, #84]
   24f78:	ldr	w8, [sp, #160]
   24f7c:	str	w8, [sp, #156]
   24f80:	ldur	w8, [x29, #-156]
   24f84:	str	w8, [sp, #160]
   24f88:	ldr	w8, [sp, #84]
   24f8c:	stur	w8, [x29, #-156]
   24f90:	b	2501c <lzma_mode_is_supported@@XZ_5.0+0xaab4>
   24f94:	ldur	w8, [x29, #-148]
   24f98:	ldur	w9, [x29, #-136]
   24f9c:	subs	w8, w9, w8
   24fa0:	stur	w8, [x29, #-136]
   24fa4:	ldur	w8, [x29, #-148]
   24fa8:	ldur	w9, [x29, #-132]
   24fac:	subs	w8, w9, w8
   24fb0:	stur	w8, [x29, #-132]
   24fb4:	ldur	x10, [x29, #-56]
   24fb8:	mov	x11, #0x61c8                	// #25032
   24fbc:	add	x10, x10, x11
   24fc0:	ldur	w8, [x29, #-152]
   24fc4:	mov	w12, w8
   24fc8:	mov	x13, #0x2                   	// #2
   24fcc:	ldrh	w8, [x10, x12, lsl #1]
   24fd0:	ldur	x10, [x29, #-56]
   24fd4:	add	x10, x10, x11
   24fd8:	ldur	w9, [x29, #-152]
   24fdc:	mov	w11, w9
   24fe0:	mul	x11, x13, x11
   24fe4:	add	x10, x10, x11
   24fe8:	ldrh	w9, [x10]
   24fec:	subs	w8, w9, w8, asr #5
   24ff0:	strh	w8, [x10]
   24ff4:	ldr	w8, [sp, #152]
   24ff8:	str	w8, [sp, #80]
   24ffc:	ldr	w8, [sp, #156]
   25000:	str	w8, [sp, #152]
   25004:	ldr	w8, [sp, #160]
   25008:	str	w8, [sp, #156]
   2500c:	ldur	w8, [x29, #-156]
   25010:	str	w8, [sp, #160]
   25014:	ldr	w8, [sp, #80]
   25018:	stur	w8, [x29, #-156]
   2501c:	ldur	w8, [x29, #-152]
   25020:	mov	w9, #0xb                   	// #11
   25024:	mov	w10, #0x8                   	// #8
   25028:	cmp	w8, #0x7
   2502c:	csel	w8, w10, w9, cc  // cc = lo, ul, last
   25030:	stur	w8, [x29, #-152]
   25034:	mov	w8, #0x1                   	// #1
   25038:	str	w8, [sp, #132]
   2503c:	ldur	w8, [x29, #-136]
   25040:	mov	w9, #0x1000000             	// #16777216
   25044:	cmp	w8, w9
   25048:	b.cs	250b0 <lzma_mode_is_supported@@XZ_5.0+0xab48>  // b.hs, b.nlast
   2504c:	ldur	x8, [x29, #-144]
   25050:	ldur	x9, [x29, #-48]
   25054:	cmp	x8, x9
   25058:	cset	w10, eq  // eq = none
   2505c:	and	w10, w10, #0x1
   25060:	mov	w0, w10
   25064:	sxtw	x8, w0
   25068:	cbz	x8, 25084 <lzma_mode_is_supported@@XZ_5.0+0xab1c>
   2506c:	ldur	x8, [x29, #-56]
   25070:	mov	x9, #0x6ea0                	// #28320
   25074:	add	x8, x8, x9
   25078:	mov	w10, #0x36                  	// #54
   2507c:	str	w10, [x8]
   25080:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   25084:	ldur	w8, [x29, #-136]
   25088:	lsl	w8, w8, #8
   2508c:	stur	w8, [x29, #-136]
   25090:	ldur	w8, [x29, #-132]
   25094:	ldur	x9, [x29, #-32]
   25098:	ldur	x10, [x29, #-144]
   2509c:	add	x11, x10, #0x1
   250a0:	stur	x11, [x29, #-144]
   250a4:	ldrb	w12, [x9, x10]
   250a8:	orr	w8, w12, w8, lsl #8
   250ac:	stur	w8, [x29, #-132]
   250b0:	ldur	w8, [x29, #-136]
   250b4:	lsr	w8, w8, #11
   250b8:	ldur	x9, [x29, #-56]
   250bc:	mov	x10, #0x6a68                	// #27240
   250c0:	add	x9, x9, x10
   250c4:	ldrh	w11, [x9]
   250c8:	mul	w8, w8, w11
   250cc:	stur	w8, [x29, #-148]
   250d0:	ldur	w8, [x29, #-132]
   250d4:	ldur	w11, [x29, #-148]
   250d8:	cmp	w8, w11
   250dc:	b.cs	256c8 <lzma_mode_is_supported@@XZ_5.0+0xb160>  // b.hs, b.nlast
   250e0:	ldur	w8, [x29, #-148]
   250e4:	stur	w8, [x29, #-136]
   250e8:	ldur	x9, [x29, #-56]
   250ec:	mov	x10, #0x6a68                	// #27240
   250f0:	add	x9, x9, x10
   250f4:	ldrh	w8, [x9]
   250f8:	mov	w11, #0x800                 	// #2048
   250fc:	subs	w8, w11, w8
   25100:	ldur	x9, [x29, #-56]
   25104:	add	x9, x9, x10
   25108:	ldrh	w11, [x9]
   2510c:	add	w8, w11, w8, lsr #5
   25110:	strh	w8, [x9]
   25114:	ldur	w8, [x29, #-136]
   25118:	mov	w9, #0x1000000             	// #16777216
   2511c:	cmp	w8, w9
   25120:	b.cs	25188 <lzma_mode_is_supported@@XZ_5.0+0xac20>  // b.hs, b.nlast
   25124:	ldur	x8, [x29, #-144]
   25128:	ldur	x9, [x29, #-48]
   2512c:	cmp	x8, x9
   25130:	cset	w10, eq  // eq = none
   25134:	and	w10, w10, #0x1
   25138:	mov	w0, w10
   2513c:	sxtw	x8, w0
   25140:	cbz	x8, 2515c <lzma_mode_is_supported@@XZ_5.0+0xabf4>
   25144:	ldur	x8, [x29, #-56]
   25148:	mov	x9, #0x6ea0                	// #28320
   2514c:	add	x8, x8, x9
   25150:	mov	w10, #0x37                  	// #55
   25154:	str	w10, [x8]
   25158:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2515c:	ldur	w8, [x29, #-136]
   25160:	lsl	w8, w8, #8
   25164:	stur	w8, [x29, #-136]
   25168:	ldur	w8, [x29, #-132]
   2516c:	ldur	x9, [x29, #-32]
   25170:	ldur	x10, [x29, #-144]
   25174:	add	x11, x10, #0x1
   25178:	stur	x11, [x29, #-144]
   2517c:	ldrb	w12, [x9, x10]
   25180:	orr	w8, w12, w8, lsl #8
   25184:	stur	w8, [x29, #-132]
   25188:	ldur	w8, [x29, #-136]
   2518c:	lsr	w8, w8, #11
   25190:	ldur	x9, [x29, #-56]
   25194:	mov	x10, #0x6a6c                	// #27244
   25198:	add	x9, x9, x10
   2519c:	ldr	w11, [sp, #108]
   251a0:	mov	w10, w11
   251a4:	mov	x12, #0x10                  	// #16
   251a8:	mul	x10, x12, x10
   251ac:	add	x9, x9, x10
   251b0:	ldr	w11, [sp, #132]
   251b4:	mov	w10, w11
   251b8:	ldrh	w11, [x9, x10, lsl #1]
   251bc:	mul	w8, w8, w11
   251c0:	stur	w8, [x29, #-148]
   251c4:	ldur	w8, [x29, #-132]
   251c8:	ldur	w11, [x29, #-148]
   251cc:	cmp	w8, w11
   251d0:	b.cs	2525c <lzma_mode_is_supported@@XZ_5.0+0xacf4>  // b.hs, b.nlast
   251d4:	ldur	w8, [x29, #-148]
   251d8:	stur	w8, [x29, #-136]
   251dc:	ldur	x9, [x29, #-56]
   251e0:	mov	x10, #0x6a6c                	// #27244
   251e4:	add	x9, x9, x10
   251e8:	ldr	w8, [sp, #108]
   251ec:	mov	w10, w8
   251f0:	mov	x11, #0x10                  	// #16
   251f4:	mul	x10, x11, x10
   251f8:	add	x9, x9, x10
   251fc:	ldr	w8, [sp, #132]
   25200:	mov	w10, w8
   25204:	mov	x12, #0x2                   	// #2
   25208:	ldrh	w8, [x9, x10, lsl #1]
   2520c:	mov	w13, #0x800                 	// #2048
   25210:	subs	w8, w13, w8
   25214:	ldur	x9, [x29, #-56]
   25218:	mov	x10, #0x6a6c                	// #27244
   2521c:	add	x9, x9, x10
   25220:	ldr	w13, [sp, #108]
   25224:	mov	w10, w13
   25228:	mul	x10, x11, x10
   2522c:	add	x9, x9, x10
   25230:	ldr	w13, [sp, #132]
   25234:	mov	w10, w13
   25238:	mul	x10, x12, x10
   2523c:	add	x9, x9, x10
   25240:	ldrh	w13, [x9]
   25244:	add	w8, w13, w8, lsr #5
   25248:	strh	w8, [x9]
   2524c:	ldr	w8, [sp, #132]
   25250:	lsl	w8, w8, #1
   25254:	str	w8, [sp, #132]
   25258:	b	252f4 <lzma_mode_is_supported@@XZ_5.0+0xad8c>
   2525c:	ldur	w8, [x29, #-148]
   25260:	ldur	w9, [x29, #-136]
   25264:	subs	w8, w9, w8
   25268:	stur	w8, [x29, #-136]
   2526c:	ldur	w8, [x29, #-148]
   25270:	ldur	w9, [x29, #-132]
   25274:	subs	w8, w9, w8
   25278:	stur	w8, [x29, #-132]
   2527c:	ldur	x10, [x29, #-56]
   25280:	mov	x11, #0x6a6c                	// #27244
   25284:	add	x10, x10, x11
   25288:	ldr	w8, [sp, #108]
   2528c:	mov	w11, w8
   25290:	mov	x12, #0x10                  	// #16
   25294:	mul	x11, x12, x11
   25298:	add	x10, x10, x11
   2529c:	ldr	w8, [sp, #132]
   252a0:	mov	w11, w8
   252a4:	mov	x13, #0x2                   	// #2
   252a8:	ldrh	w8, [x10, x11, lsl #1]
   252ac:	ldur	x10, [x29, #-56]
   252b0:	mov	x11, #0x6a6c                	// #27244
   252b4:	add	x10, x10, x11
   252b8:	ldr	w9, [sp, #108]
   252bc:	mov	w11, w9
   252c0:	mul	x11, x12, x11
   252c4:	add	x10, x10, x11
   252c8:	ldr	w9, [sp, #132]
   252cc:	mov	w11, w9
   252d0:	mul	x11, x13, x11
   252d4:	add	x10, x10, x11
   252d8:	ldrh	w9, [x10]
   252dc:	subs	w8, w9, w8, asr #5
   252e0:	strh	w8, [x10]
   252e4:	ldr	w8, [sp, #132]
   252e8:	lsl	w8, w8, #1
   252ec:	add	w8, w8, #0x1
   252f0:	str	w8, [sp, #132]
   252f4:	ldur	w8, [x29, #-136]
   252f8:	mov	w9, #0x1000000             	// #16777216
   252fc:	cmp	w8, w9
   25300:	b.cs	25368 <lzma_mode_is_supported@@XZ_5.0+0xae00>  // b.hs, b.nlast
   25304:	ldur	x8, [x29, #-144]
   25308:	ldur	x9, [x29, #-48]
   2530c:	cmp	x8, x9
   25310:	cset	w10, eq  // eq = none
   25314:	and	w10, w10, #0x1
   25318:	mov	w0, w10
   2531c:	sxtw	x8, w0
   25320:	cbz	x8, 2533c <lzma_mode_is_supported@@XZ_5.0+0xadd4>
   25324:	ldur	x8, [x29, #-56]
   25328:	mov	x9, #0x6ea0                	// #28320
   2532c:	add	x8, x8, x9
   25330:	mov	w10, #0x38                  	// #56
   25334:	str	w10, [x8]
   25338:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2533c:	ldur	w8, [x29, #-136]
   25340:	lsl	w8, w8, #8
   25344:	stur	w8, [x29, #-136]
   25348:	ldur	w8, [x29, #-132]
   2534c:	ldur	x9, [x29, #-32]
   25350:	ldur	x10, [x29, #-144]
   25354:	add	x11, x10, #0x1
   25358:	stur	x11, [x29, #-144]
   2535c:	ldrb	w12, [x9, x10]
   25360:	orr	w8, w12, w8, lsl #8
   25364:	stur	w8, [x29, #-132]
   25368:	ldur	w8, [x29, #-136]
   2536c:	lsr	w8, w8, #11
   25370:	ldur	x9, [x29, #-56]
   25374:	mov	x10, #0x6a6c                	// #27244
   25378:	add	x9, x9, x10
   2537c:	ldr	w11, [sp, #108]
   25380:	mov	w10, w11
   25384:	mov	x12, #0x10                  	// #16
   25388:	mul	x10, x12, x10
   2538c:	add	x9, x9, x10
   25390:	ldr	w11, [sp, #132]
   25394:	mov	w10, w11
   25398:	ldrh	w11, [x9, x10, lsl #1]
   2539c:	mul	w8, w8, w11
   253a0:	stur	w8, [x29, #-148]
   253a4:	ldur	w8, [x29, #-132]
   253a8:	ldur	w11, [x29, #-148]
   253ac:	cmp	w8, w11
   253b0:	b.cs	2543c <lzma_mode_is_supported@@XZ_5.0+0xaed4>  // b.hs, b.nlast
   253b4:	ldur	w8, [x29, #-148]
   253b8:	stur	w8, [x29, #-136]
   253bc:	ldur	x9, [x29, #-56]
   253c0:	mov	x10, #0x6a6c                	// #27244
   253c4:	add	x9, x9, x10
   253c8:	ldr	w8, [sp, #108]
   253cc:	mov	w10, w8
   253d0:	mov	x11, #0x10                  	// #16
   253d4:	mul	x10, x11, x10
   253d8:	add	x9, x9, x10
   253dc:	ldr	w8, [sp, #132]
   253e0:	mov	w10, w8
   253e4:	mov	x12, #0x2                   	// #2
   253e8:	ldrh	w8, [x9, x10, lsl #1]
   253ec:	mov	w13, #0x800                 	// #2048
   253f0:	subs	w8, w13, w8
   253f4:	ldur	x9, [x29, #-56]
   253f8:	mov	x10, #0x6a6c                	// #27244
   253fc:	add	x9, x9, x10
   25400:	ldr	w13, [sp, #108]
   25404:	mov	w10, w13
   25408:	mul	x10, x11, x10
   2540c:	add	x9, x9, x10
   25410:	ldr	w13, [sp, #132]
   25414:	mov	w10, w13
   25418:	mul	x10, x12, x10
   2541c:	add	x9, x9, x10
   25420:	ldrh	w13, [x9]
   25424:	add	w8, w13, w8, lsr #5
   25428:	strh	w8, [x9]
   2542c:	ldr	w8, [sp, #132]
   25430:	lsl	w8, w8, #1
   25434:	str	w8, [sp, #132]
   25438:	b	254d4 <lzma_mode_is_supported@@XZ_5.0+0xaf6c>
   2543c:	ldur	w8, [x29, #-148]
   25440:	ldur	w9, [x29, #-136]
   25444:	subs	w8, w9, w8
   25448:	stur	w8, [x29, #-136]
   2544c:	ldur	w8, [x29, #-148]
   25450:	ldur	w9, [x29, #-132]
   25454:	subs	w8, w9, w8
   25458:	stur	w8, [x29, #-132]
   2545c:	ldur	x10, [x29, #-56]
   25460:	mov	x11, #0x6a6c                	// #27244
   25464:	add	x10, x10, x11
   25468:	ldr	w8, [sp, #108]
   2546c:	mov	w11, w8
   25470:	mov	x12, #0x10                  	// #16
   25474:	mul	x11, x12, x11
   25478:	add	x10, x10, x11
   2547c:	ldr	w8, [sp, #132]
   25480:	mov	w11, w8
   25484:	mov	x13, #0x2                   	// #2
   25488:	ldrh	w8, [x10, x11, lsl #1]
   2548c:	ldur	x10, [x29, #-56]
   25490:	mov	x11, #0x6a6c                	// #27244
   25494:	add	x10, x10, x11
   25498:	ldr	w9, [sp, #108]
   2549c:	mov	w11, w9
   254a0:	mul	x11, x12, x11
   254a4:	add	x10, x10, x11
   254a8:	ldr	w9, [sp, #132]
   254ac:	mov	w11, w9
   254b0:	mul	x11, x13, x11
   254b4:	add	x10, x10, x11
   254b8:	ldrh	w9, [x10]
   254bc:	subs	w8, w9, w8, asr #5
   254c0:	strh	w8, [x10]
   254c4:	ldr	w8, [sp, #132]
   254c8:	lsl	w8, w8, #1
   254cc:	add	w8, w8, #0x1
   254d0:	str	w8, [sp, #132]
   254d4:	ldur	w8, [x29, #-136]
   254d8:	mov	w9, #0x1000000             	// #16777216
   254dc:	cmp	w8, w9
   254e0:	b.cs	25548 <lzma_mode_is_supported@@XZ_5.0+0xafe0>  // b.hs, b.nlast
   254e4:	ldur	x8, [x29, #-144]
   254e8:	ldur	x9, [x29, #-48]
   254ec:	cmp	x8, x9
   254f0:	cset	w10, eq  // eq = none
   254f4:	and	w10, w10, #0x1
   254f8:	mov	w0, w10
   254fc:	sxtw	x8, w0
   25500:	cbz	x8, 2551c <lzma_mode_is_supported@@XZ_5.0+0xafb4>
   25504:	ldur	x8, [x29, #-56]
   25508:	mov	x9, #0x6ea0                	// #28320
   2550c:	add	x8, x8, x9
   25510:	mov	w10, #0x39                  	// #57
   25514:	str	w10, [x8]
   25518:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   2551c:	ldur	w8, [x29, #-136]
   25520:	lsl	w8, w8, #8
   25524:	stur	w8, [x29, #-136]
   25528:	ldur	w8, [x29, #-132]
   2552c:	ldur	x9, [x29, #-32]
   25530:	ldur	x10, [x29, #-144]
   25534:	add	x11, x10, #0x1
   25538:	stur	x11, [x29, #-144]
   2553c:	ldrb	w12, [x9, x10]
   25540:	orr	w8, w12, w8, lsl #8
   25544:	stur	w8, [x29, #-132]
   25548:	ldur	w8, [x29, #-136]
   2554c:	lsr	w8, w8, #11
   25550:	ldur	x9, [x29, #-56]
   25554:	mov	x10, #0x6a6c                	// #27244
   25558:	add	x9, x9, x10
   2555c:	ldr	w11, [sp, #108]
   25560:	mov	w10, w11
   25564:	mov	x12, #0x10                  	// #16
   25568:	mul	x10, x12, x10
   2556c:	add	x9, x9, x10
   25570:	ldr	w11, [sp, #132]
   25574:	mov	w10, w11
   25578:	ldrh	w11, [x9, x10, lsl #1]
   2557c:	mul	w8, w8, w11
   25580:	stur	w8, [x29, #-148]
   25584:	ldur	w8, [x29, #-132]
   25588:	ldur	w11, [x29, #-148]
   2558c:	cmp	w8, w11
   25590:	b.cs	2561c <lzma_mode_is_supported@@XZ_5.0+0xb0b4>  // b.hs, b.nlast
   25594:	ldur	w8, [x29, #-148]
   25598:	stur	w8, [x29, #-136]
   2559c:	ldur	x9, [x29, #-56]
   255a0:	mov	x10, #0x6a6c                	// #27244
   255a4:	add	x9, x9, x10
   255a8:	ldr	w8, [sp, #108]
   255ac:	mov	w10, w8
   255b0:	mov	x11, #0x10                  	// #16
   255b4:	mul	x10, x11, x10
   255b8:	add	x9, x9, x10
   255bc:	ldr	w8, [sp, #132]
   255c0:	mov	w10, w8
   255c4:	mov	x12, #0x2                   	// #2
   255c8:	ldrh	w8, [x9, x10, lsl #1]
   255cc:	mov	w13, #0x800                 	// #2048
   255d0:	subs	w8, w13, w8
   255d4:	ldur	x9, [x29, #-56]
   255d8:	mov	x10, #0x6a6c                	// #27244
   255dc:	add	x9, x9, x10
   255e0:	ldr	w13, [sp, #108]
   255e4:	mov	w10, w13
   255e8:	mul	x10, x11, x10
   255ec:	add	x9, x9, x10
   255f0:	ldr	w13, [sp, #132]
   255f4:	mov	w10, w13
   255f8:	mul	x10, x12, x10
   255fc:	add	x9, x9, x10
   25600:	ldrh	w13, [x9]
   25604:	add	w8, w13, w8, lsr #5
   25608:	strh	w8, [x9]
   2560c:	ldr	w8, [sp, #132]
   25610:	lsl	w8, w8, #1
   25614:	str	w8, [sp, #132]
   25618:	b	256b4 <lzma_mode_is_supported@@XZ_5.0+0xb14c>
   2561c:	ldur	w8, [x29, #-148]
   25620:	ldur	w9, [x29, #-136]
   25624:	subs	w8, w9, w8
   25628:	stur	w8, [x29, #-136]
   2562c:	ldur	w8, [x29, #-148]
   25630:	ldur	w9, [x29, #-132]
   25634:	subs	w8, w9, w8
   25638:	stur	w8, [x29, #-132]
   2563c:	ldur	x10, [x29, #-56]
   25640:	mov	x11, #0x6a6c                	// #27244
   25644:	add	x10, x10, x11
   25648:	ldr	w8, [sp, #108]
   2564c:	mov	w11, w8
   25650:	mov	x12, #0x10                  	// #16
   25654:	mul	x11, x12, x11
   25658:	add	x10, x10, x11
   2565c:	ldr	w8, [sp, #132]
   25660:	mov	w11, w8
   25664:	mov	x13, #0x2                   	// #2
   25668:	ldrh	w8, [x10, x11, lsl #1]
   2566c:	ldur	x10, [x29, #-56]
   25670:	mov	x11, #0x6a6c                	// #27244
   25674:	add	x10, x10, x11
   25678:	ldr	w9, [sp, #108]
   2567c:	mov	w11, w9
   25680:	mul	x11, x12, x11
   25684:	add	x10, x10, x11
   25688:	ldr	w9, [sp, #132]
   2568c:	mov	w11, w9
   25690:	mul	x11, x13, x11
   25694:	add	x10, x10, x11
   25698:	ldrh	w9, [x10]
   2569c:	subs	w8, w9, w8, asr #5
   256a0:	strh	w8, [x10]
   256a4:	ldr	w8, [sp, #132]
   256a8:	lsl	w8, w8, #1
   256ac:	add	w8, w8, #0x1
   256b0:	str	w8, [sp, #132]
   256b4:	ldr	w8, [sp, #132]
   256b8:	subs	w8, w8, #0x8
   256bc:	add	w8, w8, #0x2
   256c0:	str	w8, [sp, #120]
   256c4:	b	26a20 <lzma_mode_is_supported@@XZ_5.0+0xc4b8>
   256c8:	ldur	w8, [x29, #-148]
   256cc:	ldur	w9, [x29, #-136]
   256d0:	subs	w8, w9, w8
   256d4:	stur	w8, [x29, #-136]
   256d8:	ldur	w8, [x29, #-148]
   256dc:	ldur	w9, [x29, #-132]
   256e0:	subs	w8, w9, w8
   256e4:	stur	w8, [x29, #-132]
   256e8:	ldur	x10, [x29, #-56]
   256ec:	mov	x11, #0x6a68                	// #27240
   256f0:	add	x10, x10, x11
   256f4:	ldrh	w8, [x10]
   256f8:	ldur	x10, [x29, #-56]
   256fc:	add	x10, x10, x11
   25700:	ldrh	w9, [x10]
   25704:	subs	w8, w9, w8, asr #5
   25708:	strh	w8, [x10]
   2570c:	ldur	w8, [x29, #-136]
   25710:	mov	w9, #0x1000000             	// #16777216
   25714:	cmp	w8, w9
   25718:	b.cs	25780 <lzma_mode_is_supported@@XZ_5.0+0xb218>  // b.hs, b.nlast
   2571c:	ldur	x8, [x29, #-144]
   25720:	ldur	x9, [x29, #-48]
   25724:	cmp	x8, x9
   25728:	cset	w10, eq  // eq = none
   2572c:	and	w10, w10, #0x1
   25730:	mov	w0, w10
   25734:	sxtw	x8, w0
   25738:	cbz	x8, 25754 <lzma_mode_is_supported@@XZ_5.0+0xb1ec>
   2573c:	ldur	x8, [x29, #-56]
   25740:	mov	x9, #0x6ea0                	// #28320
   25744:	add	x8, x8, x9
   25748:	mov	w10, #0x3a                  	// #58
   2574c:	str	w10, [x8]
   25750:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   25754:	ldur	w8, [x29, #-136]
   25758:	lsl	w8, w8, #8
   2575c:	stur	w8, [x29, #-136]
   25760:	ldur	w8, [x29, #-132]
   25764:	ldur	x9, [x29, #-32]
   25768:	ldur	x10, [x29, #-144]
   2576c:	add	x11, x10, #0x1
   25770:	stur	x11, [x29, #-144]
   25774:	ldrb	w12, [x9, x10]
   25778:	orr	w8, w12, w8, lsl #8
   2577c:	stur	w8, [x29, #-132]
   25780:	ldur	w8, [x29, #-136]
   25784:	lsr	w8, w8, #11
   25788:	ldur	x9, [x29, #-56]
   2578c:	mov	x10, #0x6a6a                	// #27242
   25790:	add	x9, x9, x10
   25794:	ldrh	w11, [x9]
   25798:	mul	w8, w8, w11
   2579c:	stur	w8, [x29, #-148]
   257a0:	ldur	w8, [x29, #-132]
   257a4:	ldur	w11, [x29, #-148]
   257a8:	cmp	w8, w11
   257ac:	b.cs	25da0 <lzma_mode_is_supported@@XZ_5.0+0xb838>  // b.hs, b.nlast
   257b0:	ldur	w8, [x29, #-148]
   257b4:	stur	w8, [x29, #-136]
   257b8:	ldur	x9, [x29, #-56]
   257bc:	mov	x10, #0x6a6a                	// #27242
   257c0:	add	x9, x9, x10
   257c4:	ldrh	w8, [x9]
   257c8:	mov	w11, #0x800                 	// #2048
   257cc:	subs	w8, w11, w8
   257d0:	ldur	x9, [x29, #-56]
   257d4:	mov	x10, #0x6a6a                	// #27242
   257d8:	add	x9, x9, x10
   257dc:	ldrh	w11, [x9]
   257e0:	add	w8, w11, w8, lsr #5
   257e4:	strh	w8, [x9]
   257e8:	ldur	w8, [x29, #-136]
   257ec:	mov	w9, #0x1000000             	// #16777216
   257f0:	cmp	w8, w9
   257f4:	b.cs	2585c <lzma_mode_is_supported@@XZ_5.0+0xb2f4>  // b.hs, b.nlast
   257f8:	ldur	x8, [x29, #-144]
   257fc:	ldur	x9, [x29, #-48]
   25800:	cmp	x8, x9
   25804:	cset	w10, eq  // eq = none
   25808:	and	w10, w10, #0x1
   2580c:	mov	w0, w10
   25810:	sxtw	x8, w0
   25814:	cbz	x8, 25830 <lzma_mode_is_supported@@XZ_5.0+0xb2c8>
   25818:	ldur	x8, [x29, #-56]
   2581c:	mov	x9, #0x6ea0                	// #28320
   25820:	add	x8, x8, x9
   25824:	mov	w10, #0x3b                  	// #59
   25828:	str	w10, [x8]
   2582c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   25830:	ldur	w8, [x29, #-136]
   25834:	lsl	w8, w8, #8
   25838:	stur	w8, [x29, #-136]
   2583c:	ldur	w8, [x29, #-132]
   25840:	ldur	x9, [x29, #-32]
   25844:	ldur	x10, [x29, #-144]
   25848:	add	x11, x10, #0x1
   2584c:	stur	x11, [x29, #-144]
   25850:	ldrb	w12, [x9, x10]
   25854:	orr	w8, w12, w8, lsl #8
   25858:	stur	w8, [x29, #-132]
   2585c:	ldur	w8, [x29, #-136]
   25860:	lsr	w8, w8, #11
   25864:	ldur	x9, [x29, #-56]
   25868:	mov	x10, #0x6b6c                	// #27500
   2586c:	add	x9, x9, x10
   25870:	ldr	w11, [sp, #108]
   25874:	mov	w10, w11
   25878:	mov	x12, #0x10                  	// #16
   2587c:	mul	x10, x12, x10
   25880:	add	x9, x9, x10
   25884:	ldr	w11, [sp, #132]
   25888:	mov	w10, w11
   2588c:	ldrh	w11, [x9, x10, lsl #1]
   25890:	mul	w8, w8, w11
   25894:	stur	w8, [x29, #-148]
   25898:	ldur	w8, [x29, #-132]
   2589c:	ldur	w11, [x29, #-148]
   258a0:	cmp	w8, w11
   258a4:	b.cs	25930 <lzma_mode_is_supported@@XZ_5.0+0xb3c8>  // b.hs, b.nlast
   258a8:	ldur	w8, [x29, #-148]
   258ac:	stur	w8, [x29, #-136]
   258b0:	ldur	x9, [x29, #-56]
   258b4:	mov	x10, #0x6b6c                	// #27500
   258b8:	add	x9, x9, x10
   258bc:	ldr	w8, [sp, #108]
   258c0:	mov	w10, w8
   258c4:	mov	x11, #0x10                  	// #16
   258c8:	mul	x10, x11, x10
   258cc:	add	x9, x9, x10
   258d0:	ldr	w8, [sp, #132]
   258d4:	mov	w10, w8
   258d8:	mov	x12, #0x2                   	// #2
   258dc:	ldrh	w8, [x9, x10, lsl #1]
   258e0:	mov	w13, #0x800                 	// #2048
   258e4:	subs	w8, w13, w8
   258e8:	ldur	x9, [x29, #-56]
   258ec:	mov	x10, #0x6b6c                	// #27500
   258f0:	add	x9, x9, x10
   258f4:	ldr	w13, [sp, #108]
   258f8:	mov	w10, w13
   258fc:	mul	x10, x11, x10
   25900:	add	x9, x9, x10
   25904:	ldr	w13, [sp, #132]
   25908:	mov	w10, w13
   2590c:	mul	x10, x12, x10
   25910:	add	x9, x9, x10
   25914:	ldrh	w13, [x9]
   25918:	add	w8, w13, w8, lsr #5
   2591c:	strh	w8, [x9]
   25920:	ldr	w8, [sp, #132]
   25924:	lsl	w8, w8, #1
   25928:	str	w8, [sp, #132]
   2592c:	b	259c8 <lzma_mode_is_supported@@XZ_5.0+0xb460>
   25930:	ldur	w8, [x29, #-148]
   25934:	ldur	w9, [x29, #-136]
   25938:	subs	w8, w9, w8
   2593c:	stur	w8, [x29, #-136]
   25940:	ldur	w8, [x29, #-148]
   25944:	ldur	w9, [x29, #-132]
   25948:	subs	w8, w9, w8
   2594c:	stur	w8, [x29, #-132]
   25950:	ldur	x10, [x29, #-56]
   25954:	mov	x11, #0x6b6c                	// #27500
   25958:	add	x10, x10, x11
   2595c:	ldr	w8, [sp, #108]
   25960:	mov	w11, w8
   25964:	mov	x12, #0x10                  	// #16
   25968:	mul	x11, x12, x11
   2596c:	add	x10, x10, x11
   25970:	ldr	w8, [sp, #132]
   25974:	mov	w11, w8
   25978:	mov	x13, #0x2                   	// #2
   2597c:	ldrh	w8, [x10, x11, lsl #1]
   25980:	ldur	x10, [x29, #-56]
   25984:	mov	x11, #0x6b6c                	// #27500
   25988:	add	x10, x10, x11
   2598c:	ldr	w9, [sp, #108]
   25990:	mov	w11, w9
   25994:	mul	x11, x12, x11
   25998:	add	x10, x10, x11
   2599c:	ldr	w9, [sp, #132]
   259a0:	mov	w11, w9
   259a4:	mul	x11, x13, x11
   259a8:	add	x10, x10, x11
   259ac:	ldrh	w9, [x10]
   259b0:	subs	w8, w9, w8, asr #5
   259b4:	strh	w8, [x10]
   259b8:	ldr	w8, [sp, #132]
   259bc:	lsl	w8, w8, #1
   259c0:	add	w8, w8, #0x1
   259c4:	str	w8, [sp, #132]
   259c8:	ldur	w8, [x29, #-136]
   259cc:	mov	w9, #0x1000000             	// #16777216
   259d0:	cmp	w8, w9
   259d4:	b.cs	25a3c <lzma_mode_is_supported@@XZ_5.0+0xb4d4>  // b.hs, b.nlast
   259d8:	ldur	x8, [x29, #-144]
   259dc:	ldur	x9, [x29, #-48]
   259e0:	cmp	x8, x9
   259e4:	cset	w10, eq  // eq = none
   259e8:	and	w10, w10, #0x1
   259ec:	mov	w0, w10
   259f0:	sxtw	x8, w0
   259f4:	cbz	x8, 25a10 <lzma_mode_is_supported@@XZ_5.0+0xb4a8>
   259f8:	ldur	x8, [x29, #-56]
   259fc:	mov	x9, #0x6ea0                	// #28320
   25a00:	add	x8, x8, x9
   25a04:	mov	w10, #0x3c                  	// #60
   25a08:	str	w10, [x8]
   25a0c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   25a10:	ldur	w8, [x29, #-136]
   25a14:	lsl	w8, w8, #8
   25a18:	stur	w8, [x29, #-136]
   25a1c:	ldur	w8, [x29, #-132]
   25a20:	ldur	x9, [x29, #-32]
   25a24:	ldur	x10, [x29, #-144]
   25a28:	add	x11, x10, #0x1
   25a2c:	stur	x11, [x29, #-144]
   25a30:	ldrb	w12, [x9, x10]
   25a34:	orr	w8, w12, w8, lsl #8
   25a38:	stur	w8, [x29, #-132]
   25a3c:	ldur	w8, [x29, #-136]
   25a40:	lsr	w8, w8, #11
   25a44:	ldur	x9, [x29, #-56]
   25a48:	mov	x10, #0x6b6c                	// #27500
   25a4c:	add	x9, x9, x10
   25a50:	ldr	w11, [sp, #108]
   25a54:	mov	w10, w11
   25a58:	mov	x12, #0x10                  	// #16
   25a5c:	mul	x10, x12, x10
   25a60:	add	x9, x9, x10
   25a64:	ldr	w11, [sp, #132]
   25a68:	mov	w10, w11
   25a6c:	ldrh	w11, [x9, x10, lsl #1]
   25a70:	mul	w8, w8, w11
   25a74:	stur	w8, [x29, #-148]
   25a78:	ldur	w8, [x29, #-132]
   25a7c:	ldur	w11, [x29, #-148]
   25a80:	cmp	w8, w11
   25a84:	b.cs	25b10 <lzma_mode_is_supported@@XZ_5.0+0xb5a8>  // b.hs, b.nlast
   25a88:	ldur	w8, [x29, #-148]
   25a8c:	stur	w8, [x29, #-136]
   25a90:	ldur	x9, [x29, #-56]
   25a94:	mov	x10, #0x6b6c                	// #27500
   25a98:	add	x9, x9, x10
   25a9c:	ldr	w8, [sp, #108]
   25aa0:	mov	w10, w8
   25aa4:	mov	x11, #0x10                  	// #16
   25aa8:	mul	x10, x11, x10
   25aac:	add	x9, x9, x10
   25ab0:	ldr	w8, [sp, #132]
   25ab4:	mov	w10, w8
   25ab8:	mov	x12, #0x2                   	// #2
   25abc:	ldrh	w8, [x9, x10, lsl #1]
   25ac0:	mov	w13, #0x800                 	// #2048
   25ac4:	subs	w8, w13, w8
   25ac8:	ldur	x9, [x29, #-56]
   25acc:	mov	x10, #0x6b6c                	// #27500
   25ad0:	add	x9, x9, x10
   25ad4:	ldr	w13, [sp, #108]
   25ad8:	mov	w10, w13
   25adc:	mul	x10, x11, x10
   25ae0:	add	x9, x9, x10
   25ae4:	ldr	w13, [sp, #132]
   25ae8:	mov	w10, w13
   25aec:	mul	x10, x12, x10
   25af0:	add	x9, x9, x10
   25af4:	ldrh	w13, [x9]
   25af8:	add	w8, w13, w8, lsr #5
   25afc:	strh	w8, [x9]
   25b00:	ldr	w8, [sp, #132]
   25b04:	lsl	w8, w8, #1
   25b08:	str	w8, [sp, #132]
   25b0c:	b	25ba8 <lzma_mode_is_supported@@XZ_5.0+0xb640>
   25b10:	ldur	w8, [x29, #-148]
   25b14:	ldur	w9, [x29, #-136]
   25b18:	subs	w8, w9, w8
   25b1c:	stur	w8, [x29, #-136]
   25b20:	ldur	w8, [x29, #-148]
   25b24:	ldur	w9, [x29, #-132]
   25b28:	subs	w8, w9, w8
   25b2c:	stur	w8, [x29, #-132]
   25b30:	ldur	x10, [x29, #-56]
   25b34:	mov	x11, #0x6b6c                	// #27500
   25b38:	add	x10, x10, x11
   25b3c:	ldr	w8, [sp, #108]
   25b40:	mov	w11, w8
   25b44:	mov	x12, #0x10                  	// #16
   25b48:	mul	x11, x12, x11
   25b4c:	add	x10, x10, x11
   25b50:	ldr	w8, [sp, #132]
   25b54:	mov	w11, w8
   25b58:	mov	x13, #0x2                   	// #2
   25b5c:	ldrh	w8, [x10, x11, lsl #1]
   25b60:	ldur	x10, [x29, #-56]
   25b64:	mov	x11, #0x6b6c                	// #27500
   25b68:	add	x10, x10, x11
   25b6c:	ldr	w9, [sp, #108]
   25b70:	mov	w11, w9
   25b74:	mul	x11, x12, x11
   25b78:	add	x10, x10, x11
   25b7c:	ldr	w9, [sp, #132]
   25b80:	mov	w11, w9
   25b84:	mul	x11, x13, x11
   25b88:	add	x10, x10, x11
   25b8c:	ldrh	w9, [x10]
   25b90:	subs	w8, w9, w8, asr #5
   25b94:	strh	w8, [x10]
   25b98:	ldr	w8, [sp, #132]
   25b9c:	lsl	w8, w8, #1
   25ba0:	add	w8, w8, #0x1
   25ba4:	str	w8, [sp, #132]
   25ba8:	ldur	w8, [x29, #-136]
   25bac:	mov	w9, #0x1000000             	// #16777216
   25bb0:	cmp	w8, w9
   25bb4:	b.cs	25c1c <lzma_mode_is_supported@@XZ_5.0+0xb6b4>  // b.hs, b.nlast
   25bb8:	ldur	x8, [x29, #-144]
   25bbc:	ldur	x9, [x29, #-48]
   25bc0:	cmp	x8, x9
   25bc4:	cset	w10, eq  // eq = none
   25bc8:	and	w10, w10, #0x1
   25bcc:	mov	w0, w10
   25bd0:	sxtw	x8, w0
   25bd4:	cbz	x8, 25bf0 <lzma_mode_is_supported@@XZ_5.0+0xb688>
   25bd8:	ldur	x8, [x29, #-56]
   25bdc:	mov	x9, #0x6ea0                	// #28320
   25be0:	add	x8, x8, x9
   25be4:	mov	w10, #0x3d                  	// #61
   25be8:	str	w10, [x8]
   25bec:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   25bf0:	ldur	w8, [x29, #-136]
   25bf4:	lsl	w8, w8, #8
   25bf8:	stur	w8, [x29, #-136]
   25bfc:	ldur	w8, [x29, #-132]
   25c00:	ldur	x9, [x29, #-32]
   25c04:	ldur	x10, [x29, #-144]
   25c08:	add	x11, x10, #0x1
   25c0c:	stur	x11, [x29, #-144]
   25c10:	ldrb	w12, [x9, x10]
   25c14:	orr	w8, w12, w8, lsl #8
   25c18:	stur	w8, [x29, #-132]
   25c1c:	ldur	w8, [x29, #-136]
   25c20:	lsr	w8, w8, #11
   25c24:	ldur	x9, [x29, #-56]
   25c28:	mov	x10, #0x6b6c                	// #27500
   25c2c:	add	x9, x9, x10
   25c30:	ldr	w11, [sp, #108]
   25c34:	mov	w10, w11
   25c38:	mov	x12, #0x10                  	// #16
   25c3c:	mul	x10, x12, x10
   25c40:	add	x9, x9, x10
   25c44:	ldr	w11, [sp, #132]
   25c48:	mov	w10, w11
   25c4c:	ldrh	w11, [x9, x10, lsl #1]
   25c50:	mul	w8, w8, w11
   25c54:	stur	w8, [x29, #-148]
   25c58:	ldur	w8, [x29, #-132]
   25c5c:	ldur	w11, [x29, #-148]
   25c60:	cmp	w8, w11
   25c64:	b.cs	25cf0 <lzma_mode_is_supported@@XZ_5.0+0xb788>  // b.hs, b.nlast
   25c68:	ldur	w8, [x29, #-148]
   25c6c:	stur	w8, [x29, #-136]
   25c70:	ldur	x9, [x29, #-56]
   25c74:	mov	x10, #0x6b6c                	// #27500
   25c78:	add	x9, x9, x10
   25c7c:	ldr	w8, [sp, #108]
   25c80:	mov	w10, w8
   25c84:	mov	x11, #0x10                  	// #16
   25c88:	mul	x10, x11, x10
   25c8c:	add	x9, x9, x10
   25c90:	ldr	w8, [sp, #132]
   25c94:	mov	w10, w8
   25c98:	mov	x12, #0x2                   	// #2
   25c9c:	ldrh	w8, [x9, x10, lsl #1]
   25ca0:	mov	w13, #0x800                 	// #2048
   25ca4:	subs	w8, w13, w8
   25ca8:	ldur	x9, [x29, #-56]
   25cac:	mov	x10, #0x6b6c                	// #27500
   25cb0:	add	x9, x9, x10
   25cb4:	ldr	w13, [sp, #108]
   25cb8:	mov	w10, w13
   25cbc:	mul	x10, x11, x10
   25cc0:	add	x9, x9, x10
   25cc4:	ldr	w13, [sp, #132]
   25cc8:	mov	w10, w13
   25ccc:	mul	x10, x12, x10
   25cd0:	add	x9, x9, x10
   25cd4:	ldrh	w13, [x9]
   25cd8:	add	w8, w13, w8, lsr #5
   25cdc:	strh	w8, [x9]
   25ce0:	ldr	w8, [sp, #132]
   25ce4:	lsl	w8, w8, #1
   25ce8:	str	w8, [sp, #132]
   25cec:	b	25d88 <lzma_mode_is_supported@@XZ_5.0+0xb820>
   25cf0:	ldur	w8, [x29, #-148]
   25cf4:	ldur	w9, [x29, #-136]
   25cf8:	subs	w8, w9, w8
   25cfc:	stur	w8, [x29, #-136]
   25d00:	ldur	w8, [x29, #-148]
   25d04:	ldur	w9, [x29, #-132]
   25d08:	subs	w8, w9, w8
   25d0c:	stur	w8, [x29, #-132]
   25d10:	ldur	x10, [x29, #-56]
   25d14:	mov	x11, #0x6b6c                	// #27500
   25d18:	add	x10, x10, x11
   25d1c:	ldr	w8, [sp, #108]
   25d20:	mov	w11, w8
   25d24:	mov	x12, #0x10                  	// #16
   25d28:	mul	x11, x12, x11
   25d2c:	add	x10, x10, x11
   25d30:	ldr	w8, [sp, #132]
   25d34:	mov	w11, w8
   25d38:	mov	x13, #0x2                   	// #2
   25d3c:	ldrh	w8, [x10, x11, lsl #1]
   25d40:	ldur	x10, [x29, #-56]
   25d44:	mov	x11, #0x6b6c                	// #27500
   25d48:	add	x10, x10, x11
   25d4c:	ldr	w9, [sp, #108]
   25d50:	mov	w11, w9
   25d54:	mul	x11, x12, x11
   25d58:	add	x10, x10, x11
   25d5c:	ldr	w9, [sp, #132]
   25d60:	mov	w11, w9
   25d64:	mul	x11, x13, x11
   25d68:	add	x10, x10, x11
   25d6c:	ldrh	w9, [x10]
   25d70:	subs	w8, w9, w8, asr #5
   25d74:	strh	w8, [x10]
   25d78:	ldr	w8, [sp, #132]
   25d7c:	lsl	w8, w8, #1
   25d80:	add	w8, w8, #0x1
   25d84:	str	w8, [sp, #132]
   25d88:	ldr	w8, [sp, #132]
   25d8c:	subs	w8, w8, #0x8
   25d90:	add	w8, w8, #0x2
   25d94:	add	w8, w8, #0x8
   25d98:	str	w8, [sp, #120]
   25d9c:	b	26a20 <lzma_mode_is_supported@@XZ_5.0+0xc4b8>
   25da0:	ldur	w8, [x29, #-148]
   25da4:	ldur	w9, [x29, #-136]
   25da8:	subs	w8, w9, w8
   25dac:	stur	w8, [x29, #-136]
   25db0:	ldur	w8, [x29, #-148]
   25db4:	ldur	w9, [x29, #-132]
   25db8:	subs	w8, w9, w8
   25dbc:	stur	w8, [x29, #-132]
   25dc0:	ldur	x10, [x29, #-56]
   25dc4:	mov	x11, #0x6a6a                	// #27242
   25dc8:	add	x10, x10, x11
   25dcc:	ldrh	w8, [x10]
   25dd0:	ldur	x10, [x29, #-56]
   25dd4:	mov	x11, #0x6a6a                	// #27242
   25dd8:	add	x10, x10, x11
   25ddc:	ldrh	w9, [x10]
   25de0:	subs	w8, w9, w8, asr #5
   25de4:	strh	w8, [x10]
   25de8:	ldur	w8, [x29, #-136]
   25dec:	mov	w9, #0x1000000             	// #16777216
   25df0:	cmp	w8, w9
   25df4:	b.cs	25e5c <lzma_mode_is_supported@@XZ_5.0+0xb8f4>  // b.hs, b.nlast
   25df8:	ldur	x8, [x29, #-144]
   25dfc:	ldur	x9, [x29, #-48]
   25e00:	cmp	x8, x9
   25e04:	cset	w10, eq  // eq = none
   25e08:	and	w10, w10, #0x1
   25e0c:	mov	w0, w10
   25e10:	sxtw	x8, w0
   25e14:	cbz	x8, 25e30 <lzma_mode_is_supported@@XZ_5.0+0xb8c8>
   25e18:	ldur	x8, [x29, #-56]
   25e1c:	mov	x9, #0x6ea0                	// #28320
   25e20:	add	x8, x8, x9
   25e24:	mov	w10, #0x3e                  	// #62
   25e28:	str	w10, [x8]
   25e2c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   25e30:	ldur	w8, [x29, #-136]
   25e34:	lsl	w8, w8, #8
   25e38:	stur	w8, [x29, #-136]
   25e3c:	ldur	w8, [x29, #-132]
   25e40:	ldur	x9, [x29, #-32]
   25e44:	ldur	x10, [x29, #-144]
   25e48:	add	x11, x10, #0x1
   25e4c:	stur	x11, [x29, #-144]
   25e50:	ldrb	w12, [x9, x10]
   25e54:	orr	w8, w12, w8, lsl #8
   25e58:	stur	w8, [x29, #-132]
   25e5c:	ldur	w8, [x29, #-136]
   25e60:	lsr	w8, w8, #11
   25e64:	ldur	x9, [x29, #-56]
   25e68:	mov	x10, #0x6c6c                	// #27756
   25e6c:	add	x9, x9, x10
   25e70:	ldr	w11, [sp, #132]
   25e74:	mov	w10, w11
   25e78:	ldrh	w11, [x9, x10, lsl #1]
   25e7c:	mul	w8, w8, w11
   25e80:	stur	w8, [x29, #-148]
   25e84:	ldur	w8, [x29, #-132]
   25e88:	ldur	w11, [x29, #-148]
   25e8c:	cmp	w8, w11
   25e90:	b.cs	25ef8 <lzma_mode_is_supported@@XZ_5.0+0xb990>  // b.hs, b.nlast
   25e94:	ldur	w8, [x29, #-148]
   25e98:	stur	w8, [x29, #-136]
   25e9c:	ldur	x9, [x29, #-56]
   25ea0:	mov	x10, #0x6c6c                	// #27756
   25ea4:	add	x9, x9, x10
   25ea8:	ldr	w8, [sp, #132]
   25eac:	mov	w10, w8
   25eb0:	mov	x11, #0x2                   	// #2
   25eb4:	ldrh	w8, [x9, x10, lsl #1]
   25eb8:	mov	w12, #0x800                 	// #2048
   25ebc:	subs	w8, w12, w8
   25ec0:	ldur	x9, [x29, #-56]
   25ec4:	mov	x10, #0x6c6c                	// #27756
   25ec8:	add	x9, x9, x10
   25ecc:	ldr	w12, [sp, #132]
   25ed0:	mov	w10, w12
   25ed4:	mul	x10, x11, x10
   25ed8:	add	x9, x9, x10
   25edc:	ldrh	w12, [x9]
   25ee0:	add	w8, w12, w8, lsr #5
   25ee4:	strh	w8, [x9]
   25ee8:	ldr	w8, [sp, #132]
   25eec:	lsl	w8, w8, #1
   25ef0:	str	w8, [sp, #132]
   25ef4:	b	25f6c <lzma_mode_is_supported@@XZ_5.0+0xba04>
   25ef8:	ldur	w8, [x29, #-148]
   25efc:	ldur	w9, [x29, #-136]
   25f00:	subs	w8, w9, w8
   25f04:	stur	w8, [x29, #-136]
   25f08:	ldur	w8, [x29, #-148]
   25f0c:	ldur	w9, [x29, #-132]
   25f10:	subs	w8, w9, w8
   25f14:	stur	w8, [x29, #-132]
   25f18:	ldur	x10, [x29, #-56]
   25f1c:	mov	x11, #0x6c6c                	// #27756
   25f20:	add	x10, x10, x11
   25f24:	ldr	w8, [sp, #132]
   25f28:	mov	w11, w8
   25f2c:	mov	x12, #0x2                   	// #2
   25f30:	ldrh	w8, [x10, x11, lsl #1]
   25f34:	ldur	x10, [x29, #-56]
   25f38:	mov	x11, #0x6c6c                	// #27756
   25f3c:	add	x10, x10, x11
   25f40:	ldr	w9, [sp, #132]
   25f44:	mov	w11, w9
   25f48:	mul	x11, x12, x11
   25f4c:	add	x10, x10, x11
   25f50:	ldrh	w9, [x10]
   25f54:	subs	w8, w9, w8, asr #5
   25f58:	strh	w8, [x10]
   25f5c:	ldr	w8, [sp, #132]
   25f60:	lsl	w8, w8, #1
   25f64:	add	w8, w8, #0x1
   25f68:	str	w8, [sp, #132]
   25f6c:	ldur	w8, [x29, #-136]
   25f70:	mov	w9, #0x1000000             	// #16777216
   25f74:	cmp	w8, w9
   25f78:	b.cs	25fe0 <lzma_mode_is_supported@@XZ_5.0+0xba78>  // b.hs, b.nlast
   25f7c:	ldur	x8, [x29, #-144]
   25f80:	ldur	x9, [x29, #-48]
   25f84:	cmp	x8, x9
   25f88:	cset	w10, eq  // eq = none
   25f8c:	and	w10, w10, #0x1
   25f90:	mov	w0, w10
   25f94:	sxtw	x8, w0
   25f98:	cbz	x8, 25fb4 <lzma_mode_is_supported@@XZ_5.0+0xba4c>
   25f9c:	ldur	x8, [x29, #-56]
   25fa0:	mov	x9, #0x6ea0                	// #28320
   25fa4:	add	x8, x8, x9
   25fa8:	mov	w10, #0x3f                  	// #63
   25fac:	str	w10, [x8]
   25fb0:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   25fb4:	ldur	w8, [x29, #-136]
   25fb8:	lsl	w8, w8, #8
   25fbc:	stur	w8, [x29, #-136]
   25fc0:	ldur	w8, [x29, #-132]
   25fc4:	ldur	x9, [x29, #-32]
   25fc8:	ldur	x10, [x29, #-144]
   25fcc:	add	x11, x10, #0x1
   25fd0:	stur	x11, [x29, #-144]
   25fd4:	ldrb	w12, [x9, x10]
   25fd8:	orr	w8, w12, w8, lsl #8
   25fdc:	stur	w8, [x29, #-132]
   25fe0:	ldur	w8, [x29, #-136]
   25fe4:	lsr	w8, w8, #11
   25fe8:	ldur	x9, [x29, #-56]
   25fec:	mov	x10, #0x6c6c                	// #27756
   25ff0:	add	x9, x9, x10
   25ff4:	ldr	w11, [sp, #132]
   25ff8:	mov	w10, w11
   25ffc:	ldrh	w11, [x9, x10, lsl #1]
   26000:	mul	w8, w8, w11
   26004:	stur	w8, [x29, #-148]
   26008:	ldur	w8, [x29, #-132]
   2600c:	ldur	w11, [x29, #-148]
   26010:	cmp	w8, w11
   26014:	b.cs	2607c <lzma_mode_is_supported@@XZ_5.0+0xbb14>  // b.hs, b.nlast
   26018:	ldur	w8, [x29, #-148]
   2601c:	stur	w8, [x29, #-136]
   26020:	ldur	x9, [x29, #-56]
   26024:	mov	x10, #0x6c6c                	// #27756
   26028:	add	x9, x9, x10
   2602c:	ldr	w8, [sp, #132]
   26030:	mov	w10, w8
   26034:	mov	x11, #0x2                   	// #2
   26038:	ldrh	w8, [x9, x10, lsl #1]
   2603c:	mov	w12, #0x800                 	// #2048
   26040:	subs	w8, w12, w8
   26044:	ldur	x9, [x29, #-56]
   26048:	mov	x10, #0x6c6c                	// #27756
   2604c:	add	x9, x9, x10
   26050:	ldr	w12, [sp, #132]
   26054:	mov	w10, w12
   26058:	mul	x10, x11, x10
   2605c:	add	x9, x9, x10
   26060:	ldrh	w12, [x9]
   26064:	add	w8, w12, w8, lsr #5
   26068:	strh	w8, [x9]
   2606c:	ldr	w8, [sp, #132]
   26070:	lsl	w8, w8, #1
   26074:	str	w8, [sp, #132]
   26078:	b	260f0 <lzma_mode_is_supported@@XZ_5.0+0xbb88>
   2607c:	ldur	w8, [x29, #-148]
   26080:	ldur	w9, [x29, #-136]
   26084:	subs	w8, w9, w8
   26088:	stur	w8, [x29, #-136]
   2608c:	ldur	w8, [x29, #-148]
   26090:	ldur	w9, [x29, #-132]
   26094:	subs	w8, w9, w8
   26098:	stur	w8, [x29, #-132]
   2609c:	ldur	x10, [x29, #-56]
   260a0:	mov	x11, #0x6c6c                	// #27756
   260a4:	add	x10, x10, x11
   260a8:	ldr	w8, [sp, #132]
   260ac:	mov	w11, w8
   260b0:	mov	x12, #0x2                   	// #2
   260b4:	ldrh	w8, [x10, x11, lsl #1]
   260b8:	ldur	x10, [x29, #-56]
   260bc:	mov	x11, #0x6c6c                	// #27756
   260c0:	add	x10, x10, x11
   260c4:	ldr	w9, [sp, #132]
   260c8:	mov	w11, w9
   260cc:	mul	x11, x12, x11
   260d0:	add	x10, x10, x11
   260d4:	ldrh	w9, [x10]
   260d8:	subs	w8, w9, w8, asr #5
   260dc:	strh	w8, [x10]
   260e0:	ldr	w8, [sp, #132]
   260e4:	lsl	w8, w8, #1
   260e8:	add	w8, w8, #0x1
   260ec:	str	w8, [sp, #132]
   260f0:	ldur	w8, [x29, #-136]
   260f4:	mov	w9, #0x1000000             	// #16777216
   260f8:	cmp	w8, w9
   260fc:	b.cs	26164 <lzma_mode_is_supported@@XZ_5.0+0xbbfc>  // b.hs, b.nlast
   26100:	ldur	x8, [x29, #-144]
   26104:	ldur	x9, [x29, #-48]
   26108:	cmp	x8, x9
   2610c:	cset	w10, eq  // eq = none
   26110:	and	w10, w10, #0x1
   26114:	mov	w0, w10
   26118:	sxtw	x8, w0
   2611c:	cbz	x8, 26138 <lzma_mode_is_supported@@XZ_5.0+0xbbd0>
   26120:	ldur	x8, [x29, #-56]
   26124:	mov	x9, #0x6ea0                	// #28320
   26128:	add	x8, x8, x9
   2612c:	mov	w10, #0x40                  	// #64
   26130:	str	w10, [x8]
   26134:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   26138:	ldur	w8, [x29, #-136]
   2613c:	lsl	w8, w8, #8
   26140:	stur	w8, [x29, #-136]
   26144:	ldur	w8, [x29, #-132]
   26148:	ldur	x9, [x29, #-32]
   2614c:	ldur	x10, [x29, #-144]
   26150:	add	x11, x10, #0x1
   26154:	stur	x11, [x29, #-144]
   26158:	ldrb	w12, [x9, x10]
   2615c:	orr	w8, w12, w8, lsl #8
   26160:	stur	w8, [x29, #-132]
   26164:	ldur	w8, [x29, #-136]
   26168:	lsr	w8, w8, #11
   2616c:	ldur	x9, [x29, #-56]
   26170:	mov	x10, #0x6c6c                	// #27756
   26174:	add	x9, x9, x10
   26178:	ldr	w11, [sp, #132]
   2617c:	mov	w10, w11
   26180:	ldrh	w11, [x9, x10, lsl #1]
   26184:	mul	w8, w8, w11
   26188:	stur	w8, [x29, #-148]
   2618c:	ldur	w8, [x29, #-132]
   26190:	ldur	w11, [x29, #-148]
   26194:	cmp	w8, w11
   26198:	b.cs	26200 <lzma_mode_is_supported@@XZ_5.0+0xbc98>  // b.hs, b.nlast
   2619c:	ldur	w8, [x29, #-148]
   261a0:	stur	w8, [x29, #-136]
   261a4:	ldur	x9, [x29, #-56]
   261a8:	mov	x10, #0x6c6c                	// #27756
   261ac:	add	x9, x9, x10
   261b0:	ldr	w8, [sp, #132]
   261b4:	mov	w10, w8
   261b8:	mov	x11, #0x2                   	// #2
   261bc:	ldrh	w8, [x9, x10, lsl #1]
   261c0:	mov	w12, #0x800                 	// #2048
   261c4:	subs	w8, w12, w8
   261c8:	ldur	x9, [x29, #-56]
   261cc:	mov	x10, #0x6c6c                	// #27756
   261d0:	add	x9, x9, x10
   261d4:	ldr	w12, [sp, #132]
   261d8:	mov	w10, w12
   261dc:	mul	x10, x11, x10
   261e0:	add	x9, x9, x10
   261e4:	ldrh	w12, [x9]
   261e8:	add	w8, w12, w8, lsr #5
   261ec:	strh	w8, [x9]
   261f0:	ldr	w8, [sp, #132]
   261f4:	lsl	w8, w8, #1
   261f8:	str	w8, [sp, #132]
   261fc:	b	26274 <lzma_mode_is_supported@@XZ_5.0+0xbd0c>
   26200:	ldur	w8, [x29, #-148]
   26204:	ldur	w9, [x29, #-136]
   26208:	subs	w8, w9, w8
   2620c:	stur	w8, [x29, #-136]
   26210:	ldur	w8, [x29, #-148]
   26214:	ldur	w9, [x29, #-132]
   26218:	subs	w8, w9, w8
   2621c:	stur	w8, [x29, #-132]
   26220:	ldur	x10, [x29, #-56]
   26224:	mov	x11, #0x6c6c                	// #27756
   26228:	add	x10, x10, x11
   2622c:	ldr	w8, [sp, #132]
   26230:	mov	w11, w8
   26234:	mov	x12, #0x2                   	// #2
   26238:	ldrh	w8, [x10, x11, lsl #1]
   2623c:	ldur	x10, [x29, #-56]
   26240:	mov	x11, #0x6c6c                	// #27756
   26244:	add	x10, x10, x11
   26248:	ldr	w9, [sp, #132]
   2624c:	mov	w11, w9
   26250:	mul	x11, x12, x11
   26254:	add	x10, x10, x11
   26258:	ldrh	w9, [x10]
   2625c:	subs	w8, w9, w8, asr #5
   26260:	strh	w8, [x10]
   26264:	ldr	w8, [sp, #132]
   26268:	lsl	w8, w8, #1
   2626c:	add	w8, w8, #0x1
   26270:	str	w8, [sp, #132]
   26274:	ldur	w8, [x29, #-136]
   26278:	mov	w9, #0x1000000             	// #16777216
   2627c:	cmp	w8, w9
   26280:	b.cs	262e8 <lzma_mode_is_supported@@XZ_5.0+0xbd80>  // b.hs, b.nlast
   26284:	ldur	x8, [x29, #-144]
   26288:	ldur	x9, [x29, #-48]
   2628c:	cmp	x8, x9
   26290:	cset	w10, eq  // eq = none
   26294:	and	w10, w10, #0x1
   26298:	mov	w0, w10
   2629c:	sxtw	x8, w0
   262a0:	cbz	x8, 262bc <lzma_mode_is_supported@@XZ_5.0+0xbd54>
   262a4:	ldur	x8, [x29, #-56]
   262a8:	mov	x9, #0x6ea0                	// #28320
   262ac:	add	x8, x8, x9
   262b0:	mov	w10, #0x41                  	// #65
   262b4:	str	w10, [x8]
   262b8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   262bc:	ldur	w8, [x29, #-136]
   262c0:	lsl	w8, w8, #8
   262c4:	stur	w8, [x29, #-136]
   262c8:	ldur	w8, [x29, #-132]
   262cc:	ldur	x9, [x29, #-32]
   262d0:	ldur	x10, [x29, #-144]
   262d4:	add	x11, x10, #0x1
   262d8:	stur	x11, [x29, #-144]
   262dc:	ldrb	w12, [x9, x10]
   262e0:	orr	w8, w12, w8, lsl #8
   262e4:	stur	w8, [x29, #-132]
   262e8:	ldur	w8, [x29, #-136]
   262ec:	lsr	w8, w8, #11
   262f0:	ldur	x9, [x29, #-56]
   262f4:	mov	x10, #0x6c6c                	// #27756
   262f8:	add	x9, x9, x10
   262fc:	ldr	w11, [sp, #132]
   26300:	mov	w10, w11
   26304:	ldrh	w11, [x9, x10, lsl #1]
   26308:	mul	w8, w8, w11
   2630c:	stur	w8, [x29, #-148]
   26310:	ldur	w8, [x29, #-132]
   26314:	ldur	w11, [x29, #-148]
   26318:	cmp	w8, w11
   2631c:	b.cs	26384 <lzma_mode_is_supported@@XZ_5.0+0xbe1c>  // b.hs, b.nlast
   26320:	ldur	w8, [x29, #-148]
   26324:	stur	w8, [x29, #-136]
   26328:	ldur	x9, [x29, #-56]
   2632c:	mov	x10, #0x6c6c                	// #27756
   26330:	add	x9, x9, x10
   26334:	ldr	w8, [sp, #132]
   26338:	mov	w10, w8
   2633c:	mov	x11, #0x2                   	// #2
   26340:	ldrh	w8, [x9, x10, lsl #1]
   26344:	mov	w12, #0x800                 	// #2048
   26348:	subs	w8, w12, w8
   2634c:	ldur	x9, [x29, #-56]
   26350:	mov	x10, #0x6c6c                	// #27756
   26354:	add	x9, x9, x10
   26358:	ldr	w12, [sp, #132]
   2635c:	mov	w10, w12
   26360:	mul	x10, x11, x10
   26364:	add	x9, x9, x10
   26368:	ldrh	w12, [x9]
   2636c:	add	w8, w12, w8, lsr #5
   26370:	strh	w8, [x9]
   26374:	ldr	w8, [sp, #132]
   26378:	lsl	w8, w8, #1
   2637c:	str	w8, [sp, #132]
   26380:	b	263f8 <lzma_mode_is_supported@@XZ_5.0+0xbe90>
   26384:	ldur	w8, [x29, #-148]
   26388:	ldur	w9, [x29, #-136]
   2638c:	subs	w8, w9, w8
   26390:	stur	w8, [x29, #-136]
   26394:	ldur	w8, [x29, #-148]
   26398:	ldur	w9, [x29, #-132]
   2639c:	subs	w8, w9, w8
   263a0:	stur	w8, [x29, #-132]
   263a4:	ldur	x10, [x29, #-56]
   263a8:	mov	x11, #0x6c6c                	// #27756
   263ac:	add	x10, x10, x11
   263b0:	ldr	w8, [sp, #132]
   263b4:	mov	w11, w8
   263b8:	mov	x12, #0x2                   	// #2
   263bc:	ldrh	w8, [x10, x11, lsl #1]
   263c0:	ldur	x10, [x29, #-56]
   263c4:	mov	x11, #0x6c6c                	// #27756
   263c8:	add	x10, x10, x11
   263cc:	ldr	w9, [sp, #132]
   263d0:	mov	w11, w9
   263d4:	mul	x11, x12, x11
   263d8:	add	x10, x10, x11
   263dc:	ldrh	w9, [x10]
   263e0:	subs	w8, w9, w8, asr #5
   263e4:	strh	w8, [x10]
   263e8:	ldr	w8, [sp, #132]
   263ec:	lsl	w8, w8, #1
   263f0:	add	w8, w8, #0x1
   263f4:	str	w8, [sp, #132]
   263f8:	ldur	w8, [x29, #-136]
   263fc:	mov	w9, #0x1000000             	// #16777216
   26400:	cmp	w8, w9
   26404:	b.cs	2646c <lzma_mode_is_supported@@XZ_5.0+0xbf04>  // b.hs, b.nlast
   26408:	ldur	x8, [x29, #-144]
   2640c:	ldur	x9, [x29, #-48]
   26410:	cmp	x8, x9
   26414:	cset	w10, eq  // eq = none
   26418:	and	w10, w10, #0x1
   2641c:	mov	w0, w10
   26420:	sxtw	x8, w0
   26424:	cbz	x8, 26440 <lzma_mode_is_supported@@XZ_5.0+0xbed8>
   26428:	ldur	x8, [x29, #-56]
   2642c:	mov	x9, #0x6ea0                	// #28320
   26430:	add	x8, x8, x9
   26434:	mov	w10, #0x42                  	// #66
   26438:	str	w10, [x8]
   2643c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   26440:	ldur	w8, [x29, #-136]
   26444:	lsl	w8, w8, #8
   26448:	stur	w8, [x29, #-136]
   2644c:	ldur	w8, [x29, #-132]
   26450:	ldur	x9, [x29, #-32]
   26454:	ldur	x10, [x29, #-144]
   26458:	add	x11, x10, #0x1
   2645c:	stur	x11, [x29, #-144]
   26460:	ldrb	w12, [x9, x10]
   26464:	orr	w8, w12, w8, lsl #8
   26468:	stur	w8, [x29, #-132]
   2646c:	ldur	w8, [x29, #-136]
   26470:	lsr	w8, w8, #11
   26474:	ldur	x9, [x29, #-56]
   26478:	mov	x10, #0x6c6c                	// #27756
   2647c:	add	x9, x9, x10
   26480:	ldr	w11, [sp, #132]
   26484:	mov	w10, w11
   26488:	ldrh	w11, [x9, x10, lsl #1]
   2648c:	mul	w8, w8, w11
   26490:	stur	w8, [x29, #-148]
   26494:	ldur	w8, [x29, #-132]
   26498:	ldur	w11, [x29, #-148]
   2649c:	cmp	w8, w11
   264a0:	b.cs	26508 <lzma_mode_is_supported@@XZ_5.0+0xbfa0>  // b.hs, b.nlast
   264a4:	ldur	w8, [x29, #-148]
   264a8:	stur	w8, [x29, #-136]
   264ac:	ldur	x9, [x29, #-56]
   264b0:	mov	x10, #0x6c6c                	// #27756
   264b4:	add	x9, x9, x10
   264b8:	ldr	w8, [sp, #132]
   264bc:	mov	w10, w8
   264c0:	mov	x11, #0x2                   	// #2
   264c4:	ldrh	w8, [x9, x10, lsl #1]
   264c8:	mov	w12, #0x800                 	// #2048
   264cc:	subs	w8, w12, w8
   264d0:	ldur	x9, [x29, #-56]
   264d4:	mov	x10, #0x6c6c                	// #27756
   264d8:	add	x9, x9, x10
   264dc:	ldr	w12, [sp, #132]
   264e0:	mov	w10, w12
   264e4:	mul	x10, x11, x10
   264e8:	add	x9, x9, x10
   264ec:	ldrh	w12, [x9]
   264f0:	add	w8, w12, w8, lsr #5
   264f4:	strh	w8, [x9]
   264f8:	ldr	w8, [sp, #132]
   264fc:	lsl	w8, w8, #1
   26500:	str	w8, [sp, #132]
   26504:	b	2657c <lzma_mode_is_supported@@XZ_5.0+0xc014>
   26508:	ldur	w8, [x29, #-148]
   2650c:	ldur	w9, [x29, #-136]
   26510:	subs	w8, w9, w8
   26514:	stur	w8, [x29, #-136]
   26518:	ldur	w8, [x29, #-148]
   2651c:	ldur	w9, [x29, #-132]
   26520:	subs	w8, w9, w8
   26524:	stur	w8, [x29, #-132]
   26528:	ldur	x10, [x29, #-56]
   2652c:	mov	x11, #0x6c6c                	// #27756
   26530:	add	x10, x10, x11
   26534:	ldr	w8, [sp, #132]
   26538:	mov	w11, w8
   2653c:	mov	x12, #0x2                   	// #2
   26540:	ldrh	w8, [x10, x11, lsl #1]
   26544:	ldur	x10, [x29, #-56]
   26548:	mov	x11, #0x6c6c                	// #27756
   2654c:	add	x10, x10, x11
   26550:	ldr	w9, [sp, #132]
   26554:	mov	w11, w9
   26558:	mul	x11, x12, x11
   2655c:	add	x10, x10, x11
   26560:	ldrh	w9, [x10]
   26564:	subs	w8, w9, w8, asr #5
   26568:	strh	w8, [x10]
   2656c:	ldr	w8, [sp, #132]
   26570:	lsl	w8, w8, #1
   26574:	add	w8, w8, #0x1
   26578:	str	w8, [sp, #132]
   2657c:	ldur	w8, [x29, #-136]
   26580:	mov	w9, #0x1000000             	// #16777216
   26584:	cmp	w8, w9
   26588:	b.cs	265f0 <lzma_mode_is_supported@@XZ_5.0+0xc088>  // b.hs, b.nlast
   2658c:	ldur	x8, [x29, #-144]
   26590:	ldur	x9, [x29, #-48]
   26594:	cmp	x8, x9
   26598:	cset	w10, eq  // eq = none
   2659c:	and	w10, w10, #0x1
   265a0:	mov	w0, w10
   265a4:	sxtw	x8, w0
   265a8:	cbz	x8, 265c4 <lzma_mode_is_supported@@XZ_5.0+0xc05c>
   265ac:	ldur	x8, [x29, #-56]
   265b0:	mov	x9, #0x6ea0                	// #28320
   265b4:	add	x8, x8, x9
   265b8:	mov	w10, #0x43                  	// #67
   265bc:	str	w10, [x8]
   265c0:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   265c4:	ldur	w8, [x29, #-136]
   265c8:	lsl	w8, w8, #8
   265cc:	stur	w8, [x29, #-136]
   265d0:	ldur	w8, [x29, #-132]
   265d4:	ldur	x9, [x29, #-32]
   265d8:	ldur	x10, [x29, #-144]
   265dc:	add	x11, x10, #0x1
   265e0:	stur	x11, [x29, #-144]
   265e4:	ldrb	w12, [x9, x10]
   265e8:	orr	w8, w12, w8, lsl #8
   265ec:	stur	w8, [x29, #-132]
   265f0:	ldur	w8, [x29, #-136]
   265f4:	lsr	w8, w8, #11
   265f8:	ldur	x9, [x29, #-56]
   265fc:	mov	x10, #0x6c6c                	// #27756
   26600:	add	x9, x9, x10
   26604:	ldr	w11, [sp, #132]
   26608:	mov	w10, w11
   2660c:	ldrh	w11, [x9, x10, lsl #1]
   26610:	mul	w8, w8, w11
   26614:	stur	w8, [x29, #-148]
   26618:	ldur	w8, [x29, #-132]
   2661c:	ldur	w11, [x29, #-148]
   26620:	cmp	w8, w11
   26624:	b.cs	2668c <lzma_mode_is_supported@@XZ_5.0+0xc124>  // b.hs, b.nlast
   26628:	ldur	w8, [x29, #-148]
   2662c:	stur	w8, [x29, #-136]
   26630:	ldur	x9, [x29, #-56]
   26634:	mov	x10, #0x6c6c                	// #27756
   26638:	add	x9, x9, x10
   2663c:	ldr	w8, [sp, #132]
   26640:	mov	w10, w8
   26644:	mov	x11, #0x2                   	// #2
   26648:	ldrh	w8, [x9, x10, lsl #1]
   2664c:	mov	w12, #0x800                 	// #2048
   26650:	subs	w8, w12, w8
   26654:	ldur	x9, [x29, #-56]
   26658:	mov	x10, #0x6c6c                	// #27756
   2665c:	add	x9, x9, x10
   26660:	ldr	w12, [sp, #132]
   26664:	mov	w10, w12
   26668:	mul	x10, x11, x10
   2666c:	add	x9, x9, x10
   26670:	ldrh	w12, [x9]
   26674:	add	w8, w12, w8, lsr #5
   26678:	strh	w8, [x9]
   2667c:	ldr	w8, [sp, #132]
   26680:	lsl	w8, w8, #1
   26684:	str	w8, [sp, #132]
   26688:	b	26700 <lzma_mode_is_supported@@XZ_5.0+0xc198>
   2668c:	ldur	w8, [x29, #-148]
   26690:	ldur	w9, [x29, #-136]
   26694:	subs	w8, w9, w8
   26698:	stur	w8, [x29, #-136]
   2669c:	ldur	w8, [x29, #-148]
   266a0:	ldur	w9, [x29, #-132]
   266a4:	subs	w8, w9, w8
   266a8:	stur	w8, [x29, #-132]
   266ac:	ldur	x10, [x29, #-56]
   266b0:	mov	x11, #0x6c6c                	// #27756
   266b4:	add	x10, x10, x11
   266b8:	ldr	w8, [sp, #132]
   266bc:	mov	w11, w8
   266c0:	mov	x12, #0x2                   	// #2
   266c4:	ldrh	w8, [x10, x11, lsl #1]
   266c8:	ldur	x10, [x29, #-56]
   266cc:	mov	x11, #0x6c6c                	// #27756
   266d0:	add	x10, x10, x11
   266d4:	ldr	w9, [sp, #132]
   266d8:	mov	w11, w9
   266dc:	mul	x11, x12, x11
   266e0:	add	x10, x10, x11
   266e4:	ldrh	w9, [x10]
   266e8:	subs	w8, w9, w8, asr #5
   266ec:	strh	w8, [x10]
   266f0:	ldr	w8, [sp, #132]
   266f4:	lsl	w8, w8, #1
   266f8:	add	w8, w8, #0x1
   266fc:	str	w8, [sp, #132]
   26700:	ldur	w8, [x29, #-136]
   26704:	mov	w9, #0x1000000             	// #16777216
   26708:	cmp	w8, w9
   2670c:	b.cs	26774 <lzma_mode_is_supported@@XZ_5.0+0xc20c>  // b.hs, b.nlast
   26710:	ldur	x8, [x29, #-144]
   26714:	ldur	x9, [x29, #-48]
   26718:	cmp	x8, x9
   2671c:	cset	w10, eq  // eq = none
   26720:	and	w10, w10, #0x1
   26724:	mov	w0, w10
   26728:	sxtw	x8, w0
   2672c:	cbz	x8, 26748 <lzma_mode_is_supported@@XZ_5.0+0xc1e0>
   26730:	ldur	x8, [x29, #-56]
   26734:	mov	x9, #0x6ea0                	// #28320
   26738:	add	x8, x8, x9
   2673c:	mov	w10, #0x44                  	// #68
   26740:	str	w10, [x8]
   26744:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   26748:	ldur	w8, [x29, #-136]
   2674c:	lsl	w8, w8, #8
   26750:	stur	w8, [x29, #-136]
   26754:	ldur	w8, [x29, #-132]
   26758:	ldur	x9, [x29, #-32]
   2675c:	ldur	x10, [x29, #-144]
   26760:	add	x11, x10, #0x1
   26764:	stur	x11, [x29, #-144]
   26768:	ldrb	w12, [x9, x10]
   2676c:	orr	w8, w12, w8, lsl #8
   26770:	stur	w8, [x29, #-132]
   26774:	ldur	w8, [x29, #-136]
   26778:	lsr	w8, w8, #11
   2677c:	ldur	x9, [x29, #-56]
   26780:	mov	x10, #0x6c6c                	// #27756
   26784:	add	x9, x9, x10
   26788:	ldr	w11, [sp, #132]
   2678c:	mov	w10, w11
   26790:	ldrh	w11, [x9, x10, lsl #1]
   26794:	mul	w8, w8, w11
   26798:	stur	w8, [x29, #-148]
   2679c:	ldur	w8, [x29, #-132]
   267a0:	ldur	w11, [x29, #-148]
   267a4:	cmp	w8, w11
   267a8:	b.cs	26810 <lzma_mode_is_supported@@XZ_5.0+0xc2a8>  // b.hs, b.nlast
   267ac:	ldur	w8, [x29, #-148]
   267b0:	stur	w8, [x29, #-136]
   267b4:	ldur	x9, [x29, #-56]
   267b8:	mov	x10, #0x6c6c                	// #27756
   267bc:	add	x9, x9, x10
   267c0:	ldr	w8, [sp, #132]
   267c4:	mov	w10, w8
   267c8:	mov	x11, #0x2                   	// #2
   267cc:	ldrh	w8, [x9, x10, lsl #1]
   267d0:	mov	w12, #0x800                 	// #2048
   267d4:	subs	w8, w12, w8
   267d8:	ldur	x9, [x29, #-56]
   267dc:	mov	x10, #0x6c6c                	// #27756
   267e0:	add	x9, x9, x10
   267e4:	ldr	w12, [sp, #132]
   267e8:	mov	w10, w12
   267ec:	mul	x10, x11, x10
   267f0:	add	x9, x9, x10
   267f4:	ldrh	w12, [x9]
   267f8:	add	w8, w12, w8, lsr #5
   267fc:	strh	w8, [x9]
   26800:	ldr	w8, [sp, #132]
   26804:	lsl	w8, w8, #1
   26808:	str	w8, [sp, #132]
   2680c:	b	26884 <lzma_mode_is_supported@@XZ_5.0+0xc31c>
   26810:	ldur	w8, [x29, #-148]
   26814:	ldur	w9, [x29, #-136]
   26818:	subs	w8, w9, w8
   2681c:	stur	w8, [x29, #-136]
   26820:	ldur	w8, [x29, #-148]
   26824:	ldur	w9, [x29, #-132]
   26828:	subs	w8, w9, w8
   2682c:	stur	w8, [x29, #-132]
   26830:	ldur	x10, [x29, #-56]
   26834:	mov	x11, #0x6c6c                	// #27756
   26838:	add	x10, x10, x11
   2683c:	ldr	w8, [sp, #132]
   26840:	mov	w11, w8
   26844:	mov	x12, #0x2                   	// #2
   26848:	ldrh	w8, [x10, x11, lsl #1]
   2684c:	ldur	x10, [x29, #-56]
   26850:	mov	x11, #0x6c6c                	// #27756
   26854:	add	x10, x10, x11
   26858:	ldr	w9, [sp, #132]
   2685c:	mov	w11, w9
   26860:	mul	x11, x12, x11
   26864:	add	x10, x10, x11
   26868:	ldrh	w9, [x10]
   2686c:	subs	w8, w9, w8, asr #5
   26870:	strh	w8, [x10]
   26874:	ldr	w8, [sp, #132]
   26878:	lsl	w8, w8, #1
   2687c:	add	w8, w8, #0x1
   26880:	str	w8, [sp, #132]
   26884:	ldur	w8, [x29, #-136]
   26888:	mov	w9, #0x1000000             	// #16777216
   2688c:	cmp	w8, w9
   26890:	b.cs	268f8 <lzma_mode_is_supported@@XZ_5.0+0xc390>  // b.hs, b.nlast
   26894:	ldur	x8, [x29, #-144]
   26898:	ldur	x9, [x29, #-48]
   2689c:	cmp	x8, x9
   268a0:	cset	w10, eq  // eq = none
   268a4:	and	w10, w10, #0x1
   268a8:	mov	w0, w10
   268ac:	sxtw	x8, w0
   268b0:	cbz	x8, 268cc <lzma_mode_is_supported@@XZ_5.0+0xc364>
   268b4:	ldur	x8, [x29, #-56]
   268b8:	mov	x9, #0x6ea0                	// #28320
   268bc:	add	x8, x8, x9
   268c0:	mov	w10, #0x45                  	// #69
   268c4:	str	w10, [x8]
   268c8:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   268cc:	ldur	w8, [x29, #-136]
   268d0:	lsl	w8, w8, #8
   268d4:	stur	w8, [x29, #-136]
   268d8:	ldur	w8, [x29, #-132]
   268dc:	ldur	x9, [x29, #-32]
   268e0:	ldur	x10, [x29, #-144]
   268e4:	add	x11, x10, #0x1
   268e8:	stur	x11, [x29, #-144]
   268ec:	ldrb	w12, [x9, x10]
   268f0:	orr	w8, w12, w8, lsl #8
   268f4:	stur	w8, [x29, #-132]
   268f8:	ldur	w8, [x29, #-136]
   268fc:	lsr	w8, w8, #11
   26900:	ldur	x9, [x29, #-56]
   26904:	mov	x10, #0x6c6c                	// #27756
   26908:	add	x9, x9, x10
   2690c:	ldr	w11, [sp, #132]
   26910:	mov	w10, w11
   26914:	ldrh	w11, [x9, x10, lsl #1]
   26918:	mul	w8, w8, w11
   2691c:	stur	w8, [x29, #-148]
   26920:	ldur	w8, [x29, #-132]
   26924:	ldur	w11, [x29, #-148]
   26928:	cmp	w8, w11
   2692c:	b.cs	26994 <lzma_mode_is_supported@@XZ_5.0+0xc42c>  // b.hs, b.nlast
   26930:	ldur	w8, [x29, #-148]
   26934:	stur	w8, [x29, #-136]
   26938:	ldur	x9, [x29, #-56]
   2693c:	mov	x10, #0x6c6c                	// #27756
   26940:	add	x9, x9, x10
   26944:	ldr	w8, [sp, #132]
   26948:	mov	w10, w8
   2694c:	mov	x11, #0x2                   	// #2
   26950:	ldrh	w8, [x9, x10, lsl #1]
   26954:	mov	w12, #0x800                 	// #2048
   26958:	subs	w8, w12, w8
   2695c:	ldur	x9, [x29, #-56]
   26960:	mov	x10, #0x6c6c                	// #27756
   26964:	add	x9, x9, x10
   26968:	ldr	w12, [sp, #132]
   2696c:	mov	w10, w12
   26970:	mul	x10, x11, x10
   26974:	add	x9, x9, x10
   26978:	ldrh	w12, [x9]
   2697c:	add	w8, w12, w8, lsr #5
   26980:	strh	w8, [x9]
   26984:	ldr	w8, [sp, #132]
   26988:	lsl	w8, w8, #1
   2698c:	str	w8, [sp, #132]
   26990:	b	26a08 <lzma_mode_is_supported@@XZ_5.0+0xc4a0>
   26994:	ldur	w8, [x29, #-148]
   26998:	ldur	w9, [x29, #-136]
   2699c:	subs	w8, w9, w8
   269a0:	stur	w8, [x29, #-136]
   269a4:	ldur	w8, [x29, #-148]
   269a8:	ldur	w9, [x29, #-132]
   269ac:	subs	w8, w9, w8
   269b0:	stur	w8, [x29, #-132]
   269b4:	ldur	x10, [x29, #-56]
   269b8:	mov	x11, #0x6c6c                	// #27756
   269bc:	add	x10, x10, x11
   269c0:	ldr	w8, [sp, #132]
   269c4:	mov	w11, w8
   269c8:	mov	x12, #0x2                   	// #2
   269cc:	ldrh	w8, [x10, x11, lsl #1]
   269d0:	ldur	x10, [x29, #-56]
   269d4:	mov	x11, #0x6c6c                	// #27756
   269d8:	add	x10, x10, x11
   269dc:	ldr	w9, [sp, #132]
   269e0:	mov	w11, w9
   269e4:	mul	x11, x12, x11
   269e8:	add	x10, x10, x11
   269ec:	ldrh	w9, [x10]
   269f0:	subs	w8, w9, w8, asr #5
   269f4:	strh	w8, [x10]
   269f8:	ldr	w8, [sp, #132]
   269fc:	lsl	w8, w8, #1
   26a00:	add	w8, w8, #0x1
   26a04:	str	w8, [sp, #132]
   26a08:	ldr	w8, [sp, #132]
   26a0c:	subs	w8, w8, #0x100
   26a10:	add	w8, w8, #0x2
   26a14:	add	w8, w8, #0x8
   26a18:	add	w8, w8, #0x8
   26a1c:	str	w8, [sp, #120]
   26a20:	ldur	w1, [x29, #-156]
   26a24:	sub	x0, x29, #0x70
   26a28:	add	x2, sp, #0x78
   26a2c:	bl	27970 <lzma_mode_is_supported@@XZ_5.0+0xd408>
   26a30:	tbnz	w0, #0, 26a38 <lzma_mode_is_supported@@XZ_5.0+0xc4d0>
   26a34:	b	26a50 <lzma_mode_is_supported@@XZ_5.0+0xc4e8>
   26a38:	ldur	x8, [x29, #-56]
   26a3c:	mov	x9, #0x6ea0                	// #28320
   26a40:	add	x8, x8, x9
   26a44:	mov	w10, #0x46                  	// #70
   26a48:	str	w10, [x8]
   26a4c:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   26a50:	b	1f9cc <lzma_mode_is_supported@@XZ_5.0+0x5464>
   26a54:	ldur	w8, [x29, #-136]
   26a58:	mov	w9, #0x1000000             	// #16777216
   26a5c:	cmp	w8, w9
   26a60:	b.cs	26ac4 <lzma_mode_is_supported@@XZ_5.0+0xc55c>  // b.hs, b.nlast
   26a64:	ldur	x8, [x29, #-144]
   26a68:	ldur	x9, [x29, #-48]
   26a6c:	cmp	x8, x9
   26a70:	cset	w10, eq  // eq = none
   26a74:	and	w10, w10, #0x1
   26a78:	mov	w0, w10
   26a7c:	sxtw	x8, w0
   26a80:	cbz	x8, 26a98 <lzma_mode_is_supported@@XZ_5.0+0xc530>
   26a84:	ldur	x8, [x29, #-56]
   26a88:	mov	x9, #0x6ea0                	// #28320
   26a8c:	add	x8, x8, x9
   26a90:	str	wzr, [x8]
   26a94:	b	26ad8 <lzma_mode_is_supported@@XZ_5.0+0xc570>
   26a98:	ldur	w8, [x29, #-136]
   26a9c:	lsl	w8, w8, #8
   26aa0:	stur	w8, [x29, #-136]
   26aa4:	ldur	w8, [x29, #-132]
   26aa8:	ldur	x9, [x29, #-32]
   26aac:	ldur	x10, [x29, #-144]
   26ab0:	add	x11, x10, #0x1
   26ab4:	stur	x11, [x29, #-144]
   26ab8:	ldrb	w12, [x9, x10]
   26abc:	orr	w8, w12, w8, lsl #8
   26ac0:	stur	w8, [x29, #-132]
   26ac4:	ldur	x8, [x29, #-56]
   26ac8:	mov	x9, #0x6ea0                	// #28320
   26acc:	add	x8, x8, x9
   26ad0:	mov	w10, #0x1                   	// #1
   26ad4:	str	w10, [x8]
   26ad8:	ldur	x8, [x29, #-104]
   26adc:	ldur	x9, [x29, #-24]
   26ae0:	str	x8, [x9, #8]
   26ae4:	ldur	x8, [x29, #-96]
   26ae8:	ldur	x9, [x29, #-24]
   26aec:	str	x8, [x9, #16]
   26af0:	ldur	x8, [x29, #-56]
   26af4:	mov	x9, #0x6e6c                	// #28268
   26af8:	add	x9, x8, x9
   26afc:	ldur	x10, [x29, #-136]
   26b00:	str	x10, [x9]
   26b04:	ldur	w11, [x29, #-128]
   26b08:	mov	x9, #0x6e74                	// #28276
   26b0c:	add	x8, x8, x9
   26b10:	str	w11, [x8]
   26b14:	ldur	x8, [x29, #-144]
   26b18:	ldur	x9, [x29, #-40]
   26b1c:	str	x8, [x9]
   26b20:	ldur	w8, [x29, #-152]
   26b24:	ldur	x9, [x29, #-56]
   26b28:	mov	x10, #0x6e78                	// #28280
   26b2c:	add	x9, x9, x10
   26b30:	str	w8, [x9]
   26b34:	ldur	w8, [x29, #-156]
   26b38:	ldur	x9, [x29, #-56]
   26b3c:	mov	x10, #0x6e7c                	// #28284
   26b40:	add	x9, x9, x10
   26b44:	str	w8, [x9]
   26b48:	ldr	w8, [sp, #160]
   26b4c:	ldur	x9, [x29, #-56]
   26b50:	mov	x10, #0x6e80                	// #28288
   26b54:	add	x9, x9, x10
   26b58:	str	w8, [x9]
   26b5c:	ldr	w8, [sp, #156]
   26b60:	ldur	x9, [x29, #-56]
   26b64:	mov	x10, #0x6e84                	// #28292
   26b68:	add	x9, x9, x10
   26b6c:	str	w8, [x9]
   26b70:	ldr	w8, [sp, #152]
   26b74:	ldur	x9, [x29, #-56]
   26b78:	mov	x10, #0x6e88                	// #28296
   26b7c:	add	x9, x9, x10
   26b80:	str	w8, [x9]
   26b84:	ldr	x9, [sp, #136]
   26b88:	ldur	x10, [x29, #-56]
   26b8c:	str	x9, [x10, #28328]
   26b90:	ldr	w8, [sp, #132]
   26b94:	ldur	x9, [x29, #-56]
   26b98:	mov	x10, #0x6eb0                	// #28336
   26b9c:	add	x9, x9, x10
   26ba0:	str	w8, [x9]
   26ba4:	ldr	w8, [sp, #128]
   26ba8:	ldur	x9, [x29, #-56]
   26bac:	mov	x10, #0x6eb4                	// #28340
   26bb0:	add	x9, x9, x10
   26bb4:	str	w8, [x9]
   26bb8:	ldr	w8, [sp, #124]
   26bbc:	ldur	x9, [x29, #-56]
   26bc0:	mov	x10, #0x6eb8                	// #28344
   26bc4:	add	x9, x9, x10
   26bc8:	str	w8, [x9]
   26bcc:	ldr	w8, [sp, #120]
   26bd0:	ldur	x9, [x29, #-56]
   26bd4:	mov	x10, #0x6ebc                	// #28348
   26bd8:	add	x9, x9, x10
   26bdc:	str	w8, [x9]
   26be0:	ldur	x9, [x29, #-56]
   26be4:	ldr	x9, [x9, #28312]
   26be8:	mov	x10, #0xffffffffffffffff    	// #-1
   26bec:	cmp	x9, x10
   26bf0:	b.eq	26c5c <lzma_mode_is_supported@@XZ_5.0+0xc6f4>  // b.none
   26bf4:	ldur	x8, [x29, #-104]
   26bf8:	ldur	x9, [x29, #-120]
   26bfc:	subs	x8, x8, x9
   26c00:	ldur	x9, [x29, #-56]
   26c04:	ldr	x10, [x9, #28312]
   26c08:	subs	x8, x10, x8
   26c0c:	str	x8, [x9, #28312]
   26c10:	ldur	x8, [x29, #-56]
   26c14:	ldr	x8, [x8, #28312]
   26c18:	cbnz	x8, 26c5c <lzma_mode_is_supported@@XZ_5.0+0xc6f4>
   26c1c:	ldr	w8, [sp, #104]
   26c20:	cbnz	w8, 26c5c <lzma_mode_is_supported@@XZ_5.0+0xc6f4>
   26c24:	ldur	x8, [x29, #-56]
   26c28:	mov	x9, #0x6ea0                	// #28320
   26c2c:	add	x8, x8, x9
   26c30:	ldr	w10, [x8]
   26c34:	cbz	w10, 26c5c <lzma_mode_is_supported@@XZ_5.0+0xc6f4>
   26c38:	ldur	x8, [x29, #-56]
   26c3c:	mov	x9, #0x6ea0                	// #28320
   26c40:	add	x8, x8, x9
   26c44:	ldr	w10, [x8]
   26c48:	mov	w11, #0x1                   	// #1
   26c4c:	mov	w12, #0x9                   	// #9
   26c50:	cmp	w10, #0x1
   26c54:	csel	w10, w11, w12, eq  // eq = none
   26c58:	str	w10, [sp, #104]
   26c5c:	ldr	w8, [sp, #104]
   26c60:	cmp	w8, #0x1
   26c64:	b.ne	26cbc <lzma_mode_is_supported@@XZ_5.0+0xc754>  // b.any
   26c68:	ldur	x8, [x29, #-56]
   26c6c:	mov	x9, #0x6e70                	// #28272
   26c70:	add	x8, x8, x9
   26c74:	ldr	w10, [x8]
   26c78:	cbz	w10, 26c84 <lzma_mode_is_supported@@XZ_5.0+0xc71c>
   26c7c:	mov	w8, #0x9                   	// #9
   26c80:	str	w8, [sp, #104]
   26c84:	ldur	x8, [x29, #-56]
   26c88:	mov	x9, #0x6e6c                	// #28268
   26c8c:	add	x8, x8, x9
   26c90:	mov	w10, #0xffffffff            	// #-1
   26c94:	str	w10, [x8]
   26c98:	ldur	x8, [x29, #-56]
   26c9c:	mov	x9, #0x6e70                	// #28272
   26ca0:	add	x8, x8, x9
   26ca4:	str	wzr, [x8]
   26ca8:	ldur	x8, [x29, #-56]
   26cac:	mov	x9, #0x6e74                	// #28276
   26cb0:	add	x8, x8, x9
   26cb4:	mov	w10, #0x5                   	// #5
   26cb8:	str	w10, [x8]
   26cbc:	ldr	w8, [sp, #104]
   26cc0:	stur	w8, [x29, #-4]
   26cc4:	ldur	w0, [x29, #-4]
   26cc8:	ldr	x28, [sp, #336]
   26ccc:	ldp	x29, x30, [sp, #320]
   26cd0:	add	sp, sp, #0x160
   26cd4:	ret
   26cd8:	sub	sp, sp, #0x80
   26cdc:	stp	x29, x30, [sp, #112]
   26ce0:	add	x29, sp, #0x70
   26ce4:	mov	w8, #0x1                   	// #1
   26ce8:	stur	x0, [x29, #-8]
   26cec:	stur	x1, [x29, #-16]
   26cf0:	ldur	x9, [x29, #-8]
   26cf4:	stur	x9, [x29, #-24]
   26cf8:	ldur	x9, [x29, #-16]
   26cfc:	stur	x9, [x29, #-32]
   26d00:	ldur	x9, [x29, #-32]
   26d04:	ldr	w10, [x9, #28]
   26d08:	lsl	w10, w8, w10
   26d0c:	subs	w10, w10, #0x1
   26d10:	ldur	x9, [x29, #-24]
   26d14:	mov	x11, #0x6e8c                	// #28300
   26d18:	add	x9, x9, x11
   26d1c:	str	w10, [x9]
   26d20:	ldur	x0, [x29, #-24]
   26d24:	ldur	x9, [x29, #-32]
   26d28:	ldr	w1, [x9, #20]
   26d2c:	ldur	x9, [x29, #-32]
   26d30:	ldr	w2, [x9, #24]
   26d34:	str	w8, [sp, #20]
   26d38:	str	x11, [sp, #8]
   26d3c:	bl	27c6c <lzma_mode_is_supported@@XZ_5.0+0xd704>
   26d40:	ldur	x9, [x29, #-32]
   26d44:	ldr	w8, [x9, #20]
   26d48:	ldur	x9, [x29, #-24]
   26d4c:	mov	x11, #0x6e90                	// #28304
   26d50:	add	x9, x9, x11
   26d54:	str	w8, [x9]
   26d58:	ldur	x9, [x29, #-32]
   26d5c:	ldr	w8, [x9, #24]
   26d60:	ldr	w10, [sp, #20]
   26d64:	lsl	w8, w10, w8
   26d68:	subs	w8, w8, #0x1
   26d6c:	ldur	x9, [x29, #-24]
   26d70:	mov	x11, #0x6e94                	// #28308
   26d74:	add	x9, x9, x11
   26d78:	str	w8, [x9]
   26d7c:	ldur	x9, [x29, #-24]
   26d80:	mov	x11, #0x6e78                	// #28280
   26d84:	add	x9, x9, x11
   26d88:	str	wzr, [x9]
   26d8c:	ldur	x9, [x29, #-24]
   26d90:	mov	x11, #0x6e7c                	// #28284
   26d94:	add	x9, x9, x11
   26d98:	str	wzr, [x9]
   26d9c:	ldur	x9, [x29, #-24]
   26da0:	mov	x11, #0x6e80                	// #28288
   26da4:	add	x9, x9, x11
   26da8:	str	wzr, [x9]
   26dac:	ldur	x9, [x29, #-24]
   26db0:	mov	x11, #0x6e84                	// #28292
   26db4:	add	x9, x9, x11
   26db8:	str	wzr, [x9]
   26dbc:	ldur	x9, [x29, #-24]
   26dc0:	mov	x11, #0x6e88                	// #28296
   26dc4:	add	x9, x9, x11
   26dc8:	str	wzr, [x9]
   26dcc:	ldur	x9, [x29, #-32]
   26dd0:	ldr	w8, [x9, #28]
   26dd4:	lsl	w8, w10, w8
   26dd8:	subs	w8, w8, #0x1
   26ddc:	ldur	x9, [x29, #-24]
   26de0:	ldr	x11, [sp, #8]
   26de4:	add	x9, x9, x11
   26de8:	str	w8, [x9]
   26dec:	ldur	x8, [x29, #-24]
   26df0:	mov	x9, #0x6e6c                	// #28268
   26df4:	add	x8, x8, x9
   26df8:	mov	w10, #0xffffffff            	// #-1
   26dfc:	str	w10, [x8]
   26e00:	ldur	x8, [x29, #-24]
   26e04:	mov	x9, #0x6e70                	// #28272
   26e08:	add	x8, x8, x9
   26e0c:	str	wzr, [x8]
   26e10:	ldur	x8, [x29, #-24]
   26e14:	mov	x9, #0x6e74                	// #28276
   26e18:	add	x8, x8, x9
   26e1c:	mov	w10, #0x5                   	// #5
   26e20:	str	w10, [x8]
   26e24:	stur	wzr, [x29, #-36]
   26e28:	ldur	w8, [x29, #-36]
   26e2c:	cmp	w8, #0xc
   26e30:	b.cs	26f64 <lzma_mode_is_supported@@XZ_5.0+0xc9fc>  // b.hs, b.nlast
   26e34:	stur	wzr, [x29, #-40]
   26e38:	ldur	w8, [x29, #-40]
   26e3c:	ldur	x9, [x29, #-24]
   26e40:	mov	x10, #0x6e8c                	// #28300
   26e44:	add	x9, x9, x10
   26e48:	ldr	w11, [x9]
   26e4c:	cmp	w8, w11
   26e50:	b.hi	26ecc <lzma_mode_is_supported@@XZ_5.0+0xc964>  // b.pmore
   26e54:	ldur	x8, [x29, #-24]
   26e58:	add	x8, x8, #0x6, lsl #12
   26e5c:	ldur	w9, [x29, #-36]
   26e60:	mov	w10, w9
   26e64:	mov	x11, #0x20                  	// #32
   26e68:	mul	x10, x11, x10
   26e6c:	add	x8, x8, x10
   26e70:	ldur	w9, [x29, #-40]
   26e74:	mov	w10, w9
   26e78:	mov	x12, #0x2                   	// #2
   26e7c:	mul	x10, x12, x10
   26e80:	add	x8, x8, x10
   26e84:	mov	w9, #0x400                 	// #1024
   26e88:	strh	w9, [x8]
   26e8c:	ldur	x8, [x29, #-24]
   26e90:	mov	x10, #0x61e0                	// #25056
   26e94:	add	x8, x8, x10
   26e98:	ldur	w13, [x29, #-36]
   26e9c:	mov	w10, w13
   26ea0:	mul	x10, x11, x10
   26ea4:	add	x8, x8, x10
   26ea8:	ldur	w13, [x29, #-40]
   26eac:	mov	w10, w13
   26eb0:	mul	x10, x12, x10
   26eb4:	add	x8, x8, x10
   26eb8:	strh	w9, [x8]
   26ebc:	ldur	w8, [x29, #-40]
   26ec0:	add	w8, w8, #0x1
   26ec4:	stur	w8, [x29, #-40]
   26ec8:	b	26e38 <lzma_mode_is_supported@@XZ_5.0+0xc8d0>
   26ecc:	ldur	x8, [x29, #-24]
   26ed0:	mov	x9, #0x6180                	// #24960
   26ed4:	add	x8, x8, x9
   26ed8:	ldur	w10, [x29, #-36]
   26edc:	mov	w9, w10
   26ee0:	mov	x11, #0x2                   	// #2
   26ee4:	mul	x9, x11, x9
   26ee8:	add	x8, x8, x9
   26eec:	mov	w10, #0x400                 	// #1024
   26ef0:	strh	w10, [x8]
   26ef4:	ldur	x8, [x29, #-24]
   26ef8:	mov	x9, #0x6198                	// #24984
   26efc:	add	x8, x8, x9
   26f00:	ldur	w12, [x29, #-36]
   26f04:	mov	w9, w12
   26f08:	mul	x9, x11, x9
   26f0c:	add	x8, x8, x9
   26f10:	strh	w10, [x8]
   26f14:	ldur	x8, [x29, #-24]
   26f18:	mov	x9, #0x61b0                	// #25008
   26f1c:	add	x8, x8, x9
   26f20:	ldur	w12, [x29, #-36]
   26f24:	mov	w9, w12
   26f28:	mul	x9, x11, x9
   26f2c:	add	x8, x8, x9
   26f30:	strh	w10, [x8]
   26f34:	ldur	x8, [x29, #-24]
   26f38:	mov	x9, #0x61c8                	// #25032
   26f3c:	add	x8, x8, x9
   26f40:	ldur	w12, [x29, #-36]
   26f44:	mov	w9, w12
   26f48:	mul	x9, x11, x9
   26f4c:	add	x8, x8, x9
   26f50:	strh	w10, [x8]
   26f54:	ldur	w8, [x29, #-36]
   26f58:	add	w8, w8, #0x1
   26f5c:	stur	w8, [x29, #-36]
   26f60:	b	26e28 <lzma_mode_is_supported@@XZ_5.0+0xc8c0>
   26f64:	stur	wzr, [x29, #-44]
   26f68:	ldur	w8, [x29, #-44]
   26f6c:	cmp	w8, #0x4
   26f70:	b.cs	26fe0 <lzma_mode_is_supported@@XZ_5.0+0xca78>  // b.hs, b.nlast
   26f74:	stur	wzr, [x29, #-48]
   26f78:	ldur	w8, [x29, #-48]
   26f7c:	cmp	w8, #0x40
   26f80:	b.cs	26fd0 <lzma_mode_is_supported@@XZ_5.0+0xca68>  // b.hs, b.nlast
   26f84:	ldur	x8, [x29, #-24]
   26f88:	mov	x9, #0x6360                	// #25440
   26f8c:	add	x8, x8, x9
   26f90:	ldur	w10, [x29, #-44]
   26f94:	mov	w9, w10
   26f98:	mov	x11, #0x80                  	// #128
   26f9c:	mul	x9, x11, x9
   26fa0:	add	x8, x8, x9
   26fa4:	ldur	w10, [x29, #-48]
   26fa8:	mov	w9, w10
   26fac:	mov	x11, #0x2                   	// #2
   26fb0:	mul	x9, x11, x9
   26fb4:	add	x8, x8, x9
   26fb8:	mov	w10, #0x400                 	// #1024
   26fbc:	strh	w10, [x8]
   26fc0:	ldur	w8, [x29, #-48]
   26fc4:	add	w8, w8, #0x1
   26fc8:	stur	w8, [x29, #-48]
   26fcc:	b	26f78 <lzma_mode_is_supported@@XZ_5.0+0xca10>
   26fd0:	ldur	w8, [x29, #-44]
   26fd4:	add	w8, w8, #0x1
   26fd8:	stur	w8, [x29, #-44]
   26fdc:	b	26f68 <lzma_mode_is_supported@@XZ_5.0+0xca00>
   26fe0:	stur	wzr, [x29, #-52]
   26fe4:	ldur	w8, [x29, #-52]
   26fe8:	cmp	w8, #0x72
   26fec:	b.cs	27028 <lzma_mode_is_supported@@XZ_5.0+0xcac0>  // b.hs, b.nlast
   26ff0:	ldur	x8, [x29, #-24]
   26ff4:	mov	x9, #0x6560                	// #25952
   26ff8:	add	x8, x8, x9
   26ffc:	ldur	w10, [x29, #-52]
   27000:	mov	w9, w10
   27004:	mov	x11, #0x2                   	// #2
   27008:	mul	x9, x11, x9
   2700c:	add	x8, x8, x9
   27010:	mov	w10, #0x400                 	// #1024
   27014:	strh	w10, [x8]
   27018:	ldur	w8, [x29, #-52]
   2701c:	add	w8, w8, #0x1
   27020:	stur	w8, [x29, #-52]
   27024:	b	26fe4 <lzma_mode_is_supported@@XZ_5.0+0xca7c>
   27028:	str	wzr, [sp, #56]
   2702c:	ldr	w8, [sp, #56]
   27030:	cmp	w8, #0x10
   27034:	b.cs	27070 <lzma_mode_is_supported@@XZ_5.0+0xcb08>  // b.hs, b.nlast
   27038:	ldur	x8, [x29, #-24]
   2703c:	mov	x9, #0x6644                	// #26180
   27040:	add	x8, x8, x9
   27044:	ldr	w10, [sp, #56]
   27048:	mov	w9, w10
   2704c:	mov	x11, #0x2                   	// #2
   27050:	mul	x9, x11, x9
   27054:	add	x8, x8, x9
   27058:	mov	w10, #0x400                 	// #1024
   2705c:	strh	w10, [x8]
   27060:	ldr	w8, [sp, #56]
   27064:	add	w8, w8, #0x1
   27068:	str	w8, [sp, #56]
   2706c:	b	2702c <lzma_mode_is_supported@@XZ_5.0+0xcac4>
   27070:	ldur	x8, [x29, #-32]
   27074:	ldr	w9, [x8, #28]
   27078:	mov	w10, #0x1                   	// #1
   2707c:	lsl	w9, w10, w9
   27080:	str	w9, [sp, #52]
   27084:	ldur	x8, [x29, #-24]
   27088:	mov	x11, #0x6664                	// #26212
   2708c:	add	x8, x8, x11
   27090:	mov	w9, #0x400                 	// #1024
   27094:	strh	w9, [x8]
   27098:	ldur	x8, [x29, #-24]
   2709c:	mov	x11, #0x6666                	// #26214
   270a0:	add	x8, x8, x11
   270a4:	strh	w9, [x8]
   270a8:	ldur	x8, [x29, #-24]
   270ac:	mov	x11, #0x6a68                	// #27240
   270b0:	add	x8, x8, x11
   270b4:	strh	w9, [x8]
   270b8:	ldur	x8, [x29, #-24]
   270bc:	mov	x11, #0x6a6a                	// #27242
   270c0:	add	x8, x8, x11
   270c4:	strh	w9, [x8]
   270c8:	str	wzr, [sp, #48]
   270cc:	ldr	w8, [sp, #48]
   270d0:	ldr	w9, [sp, #52]
   270d4:	cmp	w8, w9
   270d8:	b.cs	2725c <lzma_mode_is_supported@@XZ_5.0+0xccf4>  // b.hs, b.nlast
   270dc:	str	wzr, [sp, #44]
   270e0:	ldr	w8, [sp, #44]
   270e4:	cmp	w8, #0x8
   270e8:	b.cs	27138 <lzma_mode_is_supported@@XZ_5.0+0xcbd0>  // b.hs, b.nlast
   270ec:	ldur	x8, [x29, #-24]
   270f0:	mov	x9, #0x6668                	// #26216
   270f4:	add	x8, x8, x9
   270f8:	ldr	w10, [sp, #48]
   270fc:	mov	w9, w10
   27100:	mov	x11, #0x10                  	// #16
   27104:	mul	x9, x11, x9
   27108:	add	x8, x8, x9
   2710c:	ldr	w10, [sp, #44]
   27110:	mov	w9, w10
   27114:	mov	x11, #0x2                   	// #2
   27118:	mul	x9, x11, x9
   2711c:	add	x8, x8, x9
   27120:	mov	w10, #0x400                 	// #1024
   27124:	strh	w10, [x8]
   27128:	ldr	w8, [sp, #44]
   2712c:	add	w8, w8, #0x1
   27130:	str	w8, [sp, #44]
   27134:	b	270e0 <lzma_mode_is_supported@@XZ_5.0+0xcb78>
   27138:	str	wzr, [sp, #40]
   2713c:	ldr	w8, [sp, #40]
   27140:	cmp	w8, #0x8
   27144:	b.cs	27194 <lzma_mode_is_supported@@XZ_5.0+0xcc2c>  // b.hs, b.nlast
   27148:	ldur	x8, [x29, #-24]
   2714c:	mov	x9, #0x6768                	// #26472
   27150:	add	x8, x8, x9
   27154:	ldr	w10, [sp, #48]
   27158:	mov	w9, w10
   2715c:	mov	x11, #0x10                  	// #16
   27160:	mul	x9, x11, x9
   27164:	add	x8, x8, x9
   27168:	ldr	w10, [sp, #40]
   2716c:	mov	w9, w10
   27170:	mov	x11, #0x2                   	// #2
   27174:	mul	x9, x11, x9
   27178:	add	x8, x8, x9
   2717c:	mov	w10, #0x400                 	// #1024
   27180:	strh	w10, [x8]
   27184:	ldr	w8, [sp, #40]
   27188:	add	w8, w8, #0x1
   2718c:	str	w8, [sp, #40]
   27190:	b	2713c <lzma_mode_is_supported@@XZ_5.0+0xcbd4>
   27194:	str	wzr, [sp, #36]
   27198:	ldr	w8, [sp, #36]
   2719c:	cmp	w8, #0x8
   271a0:	b.cs	271f0 <lzma_mode_is_supported@@XZ_5.0+0xcc88>  // b.hs, b.nlast
   271a4:	ldur	x8, [x29, #-24]
   271a8:	mov	x9, #0x6a6c                	// #27244
   271ac:	add	x8, x8, x9
   271b0:	ldr	w10, [sp, #48]
   271b4:	mov	w9, w10
   271b8:	mov	x11, #0x10                  	// #16
   271bc:	mul	x9, x11, x9
   271c0:	add	x8, x8, x9
   271c4:	ldr	w10, [sp, #36]
   271c8:	mov	w9, w10
   271cc:	mov	x11, #0x2                   	// #2
   271d0:	mul	x9, x11, x9
   271d4:	add	x8, x8, x9
   271d8:	mov	w10, #0x400                 	// #1024
   271dc:	strh	w10, [x8]
   271e0:	ldr	w8, [sp, #36]
   271e4:	add	w8, w8, #0x1
   271e8:	str	w8, [sp, #36]
   271ec:	b	27198 <lzma_mode_is_supported@@XZ_5.0+0xcc30>
   271f0:	str	wzr, [sp, #32]
   271f4:	ldr	w8, [sp, #32]
   271f8:	cmp	w8, #0x8
   271fc:	b.cs	2724c <lzma_mode_is_supported@@XZ_5.0+0xcce4>  // b.hs, b.nlast
   27200:	ldur	x8, [x29, #-24]
   27204:	mov	x9, #0x6b6c                	// #27500
   27208:	add	x8, x8, x9
   2720c:	ldr	w10, [sp, #48]
   27210:	mov	w9, w10
   27214:	mov	x11, #0x10                  	// #16
   27218:	mul	x9, x11, x9
   2721c:	add	x8, x8, x9
   27220:	ldr	w10, [sp, #32]
   27224:	mov	w9, w10
   27228:	mov	x11, #0x2                   	// #2
   2722c:	mul	x9, x11, x9
   27230:	add	x8, x8, x9
   27234:	mov	w10, #0x400                 	// #1024
   27238:	strh	w10, [x8]
   2723c:	ldr	w8, [sp, #32]
   27240:	add	w8, w8, #0x1
   27244:	str	w8, [sp, #32]
   27248:	b	271f4 <lzma_mode_is_supported@@XZ_5.0+0xcc8c>
   2724c:	ldr	w8, [sp, #48]
   27250:	add	w8, w8, #0x1
   27254:	str	w8, [sp, #48]
   27258:	b	270cc <lzma_mode_is_supported@@XZ_5.0+0xcb64>
   2725c:	str	wzr, [sp, #28]
   27260:	ldr	w8, [sp, #28]
   27264:	cmp	w8, #0x100
   27268:	b.cs	272a4 <lzma_mode_is_supported@@XZ_5.0+0xcd3c>  // b.hs, b.nlast
   2726c:	ldur	x8, [x29, #-24]
   27270:	mov	x9, #0x6868                	// #26728
   27274:	add	x8, x8, x9
   27278:	ldr	w10, [sp, #28]
   2727c:	mov	w9, w10
   27280:	mov	x11, #0x2                   	// #2
   27284:	mul	x9, x11, x9
   27288:	add	x8, x8, x9
   2728c:	mov	w10, #0x400                 	// #1024
   27290:	strh	w10, [x8]
   27294:	ldr	w8, [sp, #28]
   27298:	add	w8, w8, #0x1
   2729c:	str	w8, [sp, #28]
   272a0:	b	27260 <lzma_mode_is_supported@@XZ_5.0+0xccf8>
   272a4:	str	wzr, [sp, #24]
   272a8:	ldr	w8, [sp, #24]
   272ac:	cmp	w8, #0x100
   272b0:	b.cs	272ec <lzma_mode_is_supported@@XZ_5.0+0xcd84>  // b.hs, b.nlast
   272b4:	ldur	x8, [x29, #-24]
   272b8:	mov	x9, #0x6c6c                	// #27756
   272bc:	add	x8, x8, x9
   272c0:	ldr	w10, [sp, #24]
   272c4:	mov	w9, w10
   272c8:	mov	x11, #0x2                   	// #2
   272cc:	mul	x9, x11, x9
   272d0:	add	x8, x8, x9
   272d4:	mov	w10, #0x400                 	// #1024
   272d8:	strh	w10, [x8]
   272dc:	ldr	w8, [sp, #24]
   272e0:	add	w8, w8, #0x1
   272e4:	str	w8, [sp, #24]
   272e8:	b	272a8 <lzma_mode_is_supported@@XZ_5.0+0xcd40>
   272ec:	ldur	x8, [x29, #-24]
   272f0:	mov	x9, #0x6ea0                	// #28320
   272f4:	add	x8, x8, x9
   272f8:	mov	w10, #0x1                   	// #1
   272fc:	str	w10, [x8]
   27300:	ldur	x8, [x29, #-24]
   27304:	mov	x9, xzr
   27308:	str	x9, [x8, #28328]
   2730c:	ldur	x8, [x29, #-24]
   27310:	mov	x9, #0x6eb0                	// #28336
   27314:	add	x8, x8, x9
   27318:	str	wzr, [x8]
   2731c:	ldur	x8, [x29, #-24]
   27320:	mov	x9, #0x6eb4                	// #28340
   27324:	add	x8, x8, x9
   27328:	str	wzr, [x8]
   2732c:	ldur	x8, [x29, #-24]
   27330:	mov	x9, #0x6eb8                	// #28344
   27334:	add	x8, x8, x9
   27338:	str	wzr, [x8]
   2733c:	ldur	x8, [x29, #-24]
   27340:	mov	x9, #0x6ebc                	// #28348
   27344:	add	x8, x8, x9
   27348:	str	wzr, [x8]
   2734c:	ldp	x29, x30, [sp, #112]
   27350:	add	sp, sp, #0x80
   27354:	ret
   27358:	sub	sp, sp, #0x20
   2735c:	str	x0, [sp, #24]
   27360:	str	x1, [sp, #16]
   27364:	ldr	x8, [sp, #24]
   27368:	str	x8, [sp, #8]
   2736c:	ldr	x8, [sp, #16]
   27370:	ldr	x9, [sp, #8]
   27374:	str	x8, [x9, #28312]
   27378:	add	sp, sp, #0x20
   2737c:	ret
   27380:	sub	sp, sp, #0x30
   27384:	stp	x29, x30, [sp, #32]
   27388:	add	x29, sp, #0x20
   2738c:	adrp	x3, 27000 <lzma_mode_is_supported@@XZ_5.0+0xca98>
   27390:	add	x3, x3, #0x3bc
   27394:	stur	x0, [x29, #-8]
   27398:	str	x1, [sp, #16]
   2739c:	str	x2, [sp, #8]
   273a0:	ldur	x0, [x29, #-8]
   273a4:	ldr	x1, [sp, #16]
   273a8:	ldr	x2, [sp, #8]
   273ac:	bl	18688 <lzma_mf_is_supported@@XZ_5.0+0x27a4>
   273b0:	ldp	x29, x30, [sp, #32]
   273b4:	add	sp, sp, #0x30
   273b8:	ret
   273bc:	sub	sp, sp, #0x40
   273c0:	stp	x29, x30, [sp, #48]
   273c4:	add	x29, sp, #0x30
   273c8:	stur	x0, [x29, #-16]
   273cc:	str	x1, [sp, #24]
   273d0:	str	x2, [sp, #16]
   273d4:	str	x3, [sp, #8]
   273d8:	ldr	x0, [sp, #16]
   273dc:	bl	27598 <lzma_mode_is_supported@@XZ_5.0+0xd030>
   273e0:	tbnz	w0, #0, 273f0 <lzma_mode_is_supported@@XZ_5.0+0xce88>
   273e4:	mov	w8, #0xb                   	// #11
   273e8:	stur	w8, [x29, #-4]
   273ec:	b	27440 <lzma_mode_is_supported@@XZ_5.0+0xced8>
   273f0:	ldur	x0, [x29, #-16]
   273f4:	ldr	x1, [sp, #24]
   273f8:	ldr	x2, [sp, #16]
   273fc:	ldr	x3, [sp, #8]
   27400:	bl	1f69c <lzma_mode_is_supported@@XZ_5.0+0x5134>
   27404:	str	w0, [sp, #4]
   27408:	ldr	w8, [sp, #4]
   2740c:	cbz	w8, 2741c <lzma_mode_is_supported@@XZ_5.0+0xceb4>
   27410:	ldr	w8, [sp, #4]
   27414:	stur	w8, [x29, #-4]
   27418:	b	27440 <lzma_mode_is_supported@@XZ_5.0+0xced8>
   2741c:	ldur	x8, [x29, #-16]
   27420:	ldr	x0, [x8]
   27424:	ldr	x1, [sp, #16]
   27428:	bl	26cd8 <lzma_mode_is_supported@@XZ_5.0+0xc770>
   2742c:	ldur	x8, [x29, #-16]
   27430:	ldr	x0, [x8]
   27434:	mov	x1, #0xffffffffffffffff    	// #-1
   27438:	bl	27358 <lzma_mode_is_supported@@XZ_5.0+0xcdf0>
   2743c:	stur	wzr, [x29, #-4]
   27440:	ldur	w0, [x29, #-4]
   27444:	ldp	x29, x30, [sp, #48]
   27448:	add	sp, sp, #0x40
   2744c:	ret
   27450:	sub	sp, sp, #0x20
   27454:	str	x0, [sp, #16]
   27458:	strb	w1, [sp, #15]
   2745c:	ldrb	w8, [sp, #15]
   27460:	cmp	w8, #0xe0
   27464:	b.le	27478 <lzma_mode_is_supported@@XZ_5.0+0xcf10>
   27468:	mov	w8, #0x1                   	// #1
   2746c:	and	w8, w8, #0x1
   27470:	strb	w8, [sp, #31]
   27474:	b	27500 <lzma_mode_is_supported@@XZ_5.0+0xcf98>
   27478:	ldrb	w8, [sp, #15]
   2747c:	mov	w9, #0x2d                  	// #45
   27480:	sdiv	w8, w8, w9
   27484:	ldr	x10, [sp, #16]
   27488:	str	w8, [x10, #28]
   2748c:	ldr	x10, [sp, #16]
   27490:	ldr	w8, [x10, #28]
   27494:	mov	w9, #0x9                   	// #9
   27498:	mul	w8, w8, w9
   2749c:	mov	w11, #0x5                   	// #5
   274a0:	mul	w8, w8, w11
   274a4:	ldrb	w11, [sp, #15]
   274a8:	subs	w8, w11, w8
   274ac:	strb	w8, [sp, #15]
   274b0:	ldrb	w8, [sp, #15]
   274b4:	sdiv	w8, w8, w9
   274b8:	ldr	x10, [sp, #16]
   274bc:	str	w8, [x10, #24]
   274c0:	ldrb	w8, [sp, #15]
   274c4:	ldr	x10, [sp, #16]
   274c8:	ldr	w11, [x10, #24]
   274cc:	mul	w9, w11, w9
   274d0:	subs	w8, w8, w9
   274d4:	ldr	x10, [sp, #16]
   274d8:	str	w8, [x10, #20]
   274dc:	ldr	x10, [sp, #16]
   274e0:	ldr	w8, [x10, #20]
   274e4:	ldr	x10, [sp, #16]
   274e8:	ldr	w9, [x10, #24]
   274ec:	add	w8, w8, w9
   274f0:	cmp	w8, #0x4
   274f4:	cset	w8, hi  // hi = pmore
   274f8:	and	w8, w8, #0x1
   274fc:	strb	w8, [sp, #31]
   27500:	ldrb	w8, [sp, #31]
   27504:	and	w0, w8, #0x1
   27508:	add	sp, sp, #0x20
   2750c:	ret
   27510:	sub	sp, sp, #0x30
   27514:	stp	x29, x30, [sp, #32]
   27518:	add	x29, sp, #0x20
   2751c:	mov	x8, #0x6ec0                	// #28352
   27520:	stur	x0, [x29, #-8]
   27524:	ldur	x9, [x29, #-8]
   27528:	str	x9, [sp, #16]
   2752c:	ldr	x9, [sp, #16]
   27530:	ldr	w10, [x9]
   27534:	mov	w0, w10
   27538:	str	x8, [sp, #8]
   2753c:	bl	18c78 <lzma_mf_is_supported@@XZ_5.0+0x2d94>
   27540:	ldr	x8, [sp, #8]
   27544:	add	x0, x8, x0
   27548:	ldp	x29, x30, [sp, #32]
   2754c:	add	sp, sp, #0x30
   27550:	ret
   27554:	sub	sp, sp, #0x20
   27558:	stp	x29, x30, [sp, #16]
   2755c:	add	x29, sp, #0x10
   27560:	str	x0, [sp]
   27564:	ldr	x0, [sp]
   27568:	bl	27598 <lzma_mode_is_supported@@XZ_5.0+0xd030>
   2756c:	tbnz	w0, #0, 2757c <lzma_mode_is_supported@@XZ_5.0+0xd014>
   27570:	mov	x8, #0xffffffffffffffff    	// #-1
   27574:	str	x8, [sp, #8]
   27578:	b	27588 <lzma_mode_is_supported@@XZ_5.0+0xd020>
   2757c:	ldr	x0, [sp]
   27580:	bl	27510 <lzma_mode_is_supported@@XZ_5.0+0xcfa8>
   27584:	str	x0, [sp, #8]
   27588:	ldr	x0, [sp, #8]
   2758c:	ldp	x29, x30, [sp, #16]
   27590:	add	sp, sp, #0x20
   27594:	ret
   27598:	sub	sp, sp, #0x10
   2759c:	str	x0, [sp, #8]
   275a0:	ldr	x8, [sp, #8]
   275a4:	ldr	w9, [x8, #20]
   275a8:	mov	w10, #0x0                   	// #0
   275ac:	cmp	w9, #0x4
   275b0:	str	w10, [sp, #4]
   275b4:	b.hi	27608 <lzma_mode_is_supported@@XZ_5.0+0xd0a0>  // b.pmore
   275b8:	ldr	x8, [sp, #8]
   275bc:	ldr	w9, [x8, #24]
   275c0:	mov	w10, #0x0                   	// #0
   275c4:	cmp	w9, #0x4
   275c8:	str	w10, [sp, #4]
   275cc:	b.hi	27608 <lzma_mode_is_supported@@XZ_5.0+0xd0a0>  // b.pmore
   275d0:	ldr	x8, [sp, #8]
   275d4:	ldr	w9, [x8, #20]
   275d8:	ldr	x8, [sp, #8]
   275dc:	ldr	w10, [x8, #24]
   275e0:	add	w9, w9, w10
   275e4:	mov	w10, #0x0                   	// #0
   275e8:	cmp	w9, #0x4
   275ec:	str	w10, [sp, #4]
   275f0:	b.hi	27608 <lzma_mode_is_supported@@XZ_5.0+0xd0a0>  // b.pmore
   275f4:	ldr	x8, [sp, #8]
   275f8:	ldr	w9, [x8, #28]
   275fc:	cmp	w9, #0x4
   27600:	cset	w9, ls  // ls = plast
   27604:	str	w9, [sp, #4]
   27608:	ldr	w8, [sp, #4]
   2760c:	and	w0, w8, #0x1
   27610:	add	sp, sp, #0x10
   27614:	ret
   27618:	sub	sp, sp, #0x40
   2761c:	stp	x29, x30, [sp, #48]
   27620:	add	x29, sp, #0x30
   27624:	stur	x0, [x29, #-16]
   27628:	str	x1, [sp, #24]
   2762c:	str	x2, [sp, #16]
   27630:	str	x3, [sp, #8]
   27634:	ldr	x8, [sp, #8]
   27638:	cmp	x8, #0x5
   2763c:	b.eq	2764c <lzma_mode_is_supported@@XZ_5.0+0xd0e4>  // b.none
   27640:	mov	w8, #0x8                   	// #8
   27644:	stur	w8, [x29, #-4]
   27648:	b	276dc <lzma_mode_is_supported@@XZ_5.0+0xd174>
   2764c:	ldr	x1, [sp, #24]
   27650:	mov	x0, #0x70                  	// #112
   27654:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   27658:	str	x0, [sp]
   2765c:	ldr	x8, [sp]
   27660:	cbnz	x8, 27670 <lzma_mode_is_supported@@XZ_5.0+0xd108>
   27664:	mov	w8, #0x5                   	// #5
   27668:	stur	w8, [x29, #-4]
   2766c:	b	276dc <lzma_mode_is_supported@@XZ_5.0+0xd174>
   27670:	ldr	x0, [sp]
   27674:	ldr	x8, [sp, #16]
   27678:	ldrb	w1, [x8]
   2767c:	bl	27450 <lzma_mode_is_supported@@XZ_5.0+0xcee8>
   27680:	tbnz	w0, #0, 27688 <lzma_mode_is_supported@@XZ_5.0+0xd120>
   27684:	b	2768c <lzma_mode_is_supported@@XZ_5.0+0xd124>
   27688:	b	276c8 <lzma_mode_is_supported@@XZ_5.0+0xd160>
   2768c:	ldr	x8, [sp, #16]
   27690:	add	x0, x8, #0x1
   27694:	bl	276ec <lzma_mode_is_supported@@XZ_5.0+0xd184>
   27698:	ldr	x8, [sp]
   2769c:	str	w0, [x8]
   276a0:	ldr	x8, [sp]
   276a4:	mov	x9, xzr
   276a8:	str	x9, [x8, #8]
   276ac:	ldr	x8, [sp]
   276b0:	str	wzr, [x8, #16]
   276b4:	ldr	x8, [sp]
   276b8:	ldur	x9, [x29, #-16]
   276bc:	str	x8, [x9]
   276c0:	stur	wzr, [x29, #-4]
   276c4:	b	276dc <lzma_mode_is_supported@@XZ_5.0+0xd174>
   276c8:	ldr	x0, [sp]
   276cc:	ldr	x1, [sp, #24]
   276d0:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   276d4:	mov	w8, #0x8                   	// #8
   276d8:	stur	w8, [x29, #-4]
   276dc:	ldur	w0, [x29, #-4]
   276e0:	ldp	x29, x30, [sp, #48]
   276e4:	add	sp, sp, #0x40
   276e8:	ret
   276ec:	sub	sp, sp, #0x10
   276f0:	str	x0, [sp, #8]
   276f4:	ldr	x8, [sp, #8]
   276f8:	ldrb	w9, [x8]
   276fc:	str	w9, [sp, #4]
   27700:	ldr	x8, [sp, #8]
   27704:	ldrb	w9, [x8, #1]
   27708:	ldr	w10, [sp, #4]
   2770c:	orr	w9, w10, w9, lsl #8
   27710:	str	w9, [sp, #4]
   27714:	ldr	x8, [sp, #8]
   27718:	ldrb	w9, [x8, #2]
   2771c:	ldr	w10, [sp, #4]
   27720:	orr	w9, w10, w9, lsl #16
   27724:	str	w9, [sp, #4]
   27728:	ldr	x8, [sp, #8]
   2772c:	ldrb	w9, [x8, #3]
   27730:	ldr	w10, [sp, #4]
   27734:	orr	w9, w10, w9, lsl #24
   27738:	str	w9, [sp, #4]
   2773c:	ldr	w0, [sp, #4]
   27740:	add	sp, sp, #0x10
   27744:	ret
   27748:	sub	sp, sp, #0x30
   2774c:	str	x0, [sp, #32]
   27750:	str	x1, [sp, #24]
   27754:	str	x2, [sp, #16]
   27758:	str	x3, [sp, #8]
   2775c:	ldr	x8, [sp, #32]
   27760:	ldr	w9, [x8, #8]
   27764:	cmp	w9, #0x0
   27768:	cset	w9, ls  // ls = plast
   2776c:	tbnz	w9, #0, 27804 <lzma_mode_is_supported@@XZ_5.0+0xd29c>
   27770:	ldr	x8, [sp, #16]
   27774:	ldr	x8, [x8]
   27778:	ldr	x9, [sp, #8]
   2777c:	cmp	x8, x9
   27780:	b.ne	2778c <lzma_mode_is_supported@@XZ_5.0+0xd224>  // b.any
   27784:	str	wzr, [sp, #44]
   27788:	b	2780c <lzma_mode_is_supported@@XZ_5.0+0xd2a4>
   2778c:	ldr	x8, [sp, #32]
   27790:	ldr	w9, [x8, #8]
   27794:	cmp	w9, #0x5
   27798:	b.ne	277bc <lzma_mode_is_supported@@XZ_5.0+0xd254>  // b.any
   2779c:	ldr	x8, [sp, #24]
   277a0:	ldr	x9, [sp, #16]
   277a4:	ldr	x9, [x9]
   277a8:	ldrb	w10, [x8, x9]
   277ac:	cbz	w10, 277bc <lzma_mode_is_supported@@XZ_5.0+0xd254>
   277b0:	mov	w8, #0x9                   	// #9
   277b4:	str	w8, [sp, #44]
   277b8:	b	2780c <lzma_mode_is_supported@@XZ_5.0+0xd2a4>
   277bc:	ldr	x8, [sp, #32]
   277c0:	ldr	w9, [x8, #4]
   277c4:	ldr	x8, [sp, #24]
   277c8:	ldr	x10, [sp, #16]
   277cc:	ldr	x10, [x10]
   277d0:	ldrb	w11, [x8, x10]
   277d4:	orr	w9, w11, w9, lsl #8
   277d8:	ldr	x8, [sp, #32]
   277dc:	str	w9, [x8, #4]
   277e0:	ldr	x8, [sp, #16]
   277e4:	ldr	x10, [x8]
   277e8:	add	x10, x10, #0x1
   277ec:	str	x10, [x8]
   277f0:	ldr	x8, [sp, #32]
   277f4:	ldr	w9, [x8, #8]
   277f8:	subs	w9, w9, #0x1
   277fc:	str	w9, [x8, #8]
   27800:	b	2775c <lzma_mode_is_supported@@XZ_5.0+0xd1f4>
   27804:	mov	w8, #0x1                   	// #1
   27808:	str	w8, [sp, #44]
   2780c:	ldr	w0, [sp, #44]
   27810:	add	sp, sp, #0x30
   27814:	ret
   27818:	sub	sp, sp, #0x30
   2781c:	str	x0, [sp, #40]
   27820:	str	w1, [sp, #36]
   27824:	ldr	x8, [sp, #40]
   27828:	ldr	x8, [x8]
   2782c:	ldr	x9, [sp, #40]
   27830:	ldr	x9, [x9, #8]
   27834:	ldr	w10, [sp, #36]
   27838:	mov	w11, w10
   2783c:	subs	x9, x9, x11
   27840:	subs	x9, x9, #0x1
   27844:	ldr	w10, [sp, #36]
   27848:	mov	w11, w10
   2784c:	ldr	x12, [sp, #40]
   27850:	ldr	x12, [x12, #8]
   27854:	cmp	x11, x12
   27858:	str	x8, [sp, #24]
   2785c:	str	x9, [sp, #16]
   27860:	b.cs	27870 <lzma_mode_is_supported@@XZ_5.0+0xd308>  // b.hs, b.nlast
   27864:	mov	x8, xzr
   27868:	str	x8, [sp, #8]
   2786c:	b	2787c <lzma_mode_is_supported@@XZ_5.0+0xd314>
   27870:	ldr	x8, [sp, #40]
   27874:	ldr	x8, [x8, #32]
   27878:	str	x8, [sp, #8]
   2787c:	ldr	x8, [sp, #8]
   27880:	ldr	x9, [sp, #16]
   27884:	add	x8, x9, x8
   27888:	ldr	x10, [sp, #24]
   2788c:	ldrb	w0, [x10, x8]
   27890:	add	sp, sp, #0x30
   27894:	ret
   27898:	sub	sp, sp, #0x20
   2789c:	str	x0, [sp, #16]
   278a0:	strb	w1, [sp, #15]
   278a4:	ldr	x8, [sp, #16]
   278a8:	ldr	x8, [x8, #8]
   278ac:	ldr	x9, [sp, #16]
   278b0:	ldr	x9, [x9, #24]
   278b4:	cmp	x8, x9
   278b8:	cset	w10, eq  // eq = none
   278bc:	and	w10, w10, #0x1
   278c0:	mov	w0, w10
   278c4:	sxtw	x8, w0
   278c8:	cbz	x8, 278dc <lzma_mode_is_supported@@XZ_5.0+0xd374>
   278cc:	mov	w8, #0x1                   	// #1
   278d0:	and	w8, w8, #0x1
   278d4:	strb	w8, [sp, #31]
   278d8:	b	27934 <lzma_mode_is_supported@@XZ_5.0+0xd3cc>
   278dc:	ldrb	w8, [sp, #15]
   278e0:	ldr	x9, [sp, #16]
   278e4:	ldr	x9, [x9]
   278e8:	ldr	x10, [sp, #16]
   278ec:	ldr	x11, [x10, #8]
   278f0:	add	x12, x11, #0x1
   278f4:	str	x12, [x10, #8]
   278f8:	add	x9, x9, x11
   278fc:	strb	w8, [x9]
   27900:	ldr	x9, [sp, #16]
   27904:	ldr	x9, [x9, #8]
   27908:	ldr	x10, [sp, #16]
   2790c:	ldr	x10, [x10, #16]
   27910:	cmp	x9, x10
   27914:	b.ls	27928 <lzma_mode_is_supported@@XZ_5.0+0xd3c0>  // b.plast
   27918:	ldr	x8, [sp, #16]
   2791c:	ldr	x8, [x8, #8]
   27920:	ldr	x9, [sp, #16]
   27924:	str	x8, [x9, #16]
   27928:	mov	w8, wzr
   2792c:	and	w8, w8, #0x1
   27930:	strb	w8, [sp, #31]
   27934:	ldrb	w8, [sp, #31]
   27938:	and	w0, w8, #0x1
   2793c:	add	sp, sp, #0x20
   27940:	ret
   27944:	sub	sp, sp, #0x10
   27948:	str	x0, [sp, #8]
   2794c:	str	x1, [sp]
   27950:	ldr	x8, [sp, #8]
   27954:	ldr	x8, [x8, #16]
   27958:	ldr	x9, [sp]
   2795c:	cmp	x8, x9
   27960:	cset	w10, hi  // hi = pmore
   27964:	and	w0, w10, #0x1
   27968:	add	sp, sp, #0x10
   2796c:	ret
   27970:	sub	sp, sp, #0x50
   27974:	stp	x29, x30, [sp, #64]
   27978:	add	x29, sp, #0x40
   2797c:	stur	x0, [x29, #-8]
   27980:	stur	w1, [x29, #-12]
   27984:	stur	x2, [x29, #-24]
   27988:	ldur	x8, [x29, #-8]
   2798c:	ldr	x8, [x8, #24]
   27990:	ldur	x9, [x29, #-8]
   27994:	ldr	x9, [x9, #8]
   27998:	subs	x8, x8, x9
   2799c:	str	x8, [sp, #32]
   279a0:	ldr	x8, [sp, #32]
   279a4:	ldur	x9, [x29, #-24]
   279a8:	ldr	w10, [x9]
   279ac:	mov	w9, w10
   279b0:	cmp	x8, x9
   279b4:	b.cs	279c4 <lzma_mode_is_supported@@XZ_5.0+0xd45c>  // b.hs, b.nlast
   279b8:	ldr	x8, [sp, #32]
   279bc:	str	x8, [sp, #8]
   279c0:	b	279d4 <lzma_mode_is_supported@@XZ_5.0+0xd46c>
   279c4:	ldur	x8, [x29, #-24]
   279c8:	ldr	w9, [x8]
   279cc:	mov	w0, w9
   279d0:	str	x0, [sp, #8]
   279d4:	ldr	x8, [sp, #8]
   279d8:	str	w8, [sp, #28]
   279dc:	ldr	w8, [sp, #28]
   279e0:	ldur	x9, [x29, #-24]
   279e4:	ldr	w10, [x9]
   279e8:	subs	w8, w10, w8
   279ec:	str	w8, [x9]
   279f0:	ldur	w8, [x29, #-12]
   279f4:	ldr	w10, [sp, #28]
   279f8:	cmp	w8, w10
   279fc:	b.cs	27a50 <lzma_mode_is_supported@@XZ_5.0+0xd4e8>  // b.hs, b.nlast
   27a00:	ldur	x0, [x29, #-8]
   27a04:	ldur	w1, [x29, #-12]
   27a08:	bl	27818 <lzma_mode_is_supported@@XZ_5.0+0xd2b0>
   27a0c:	ldur	x8, [x29, #-8]
   27a10:	ldr	x8, [x8]
   27a14:	ldur	x9, [x29, #-8]
   27a18:	ldr	x9, [x9, #8]
   27a1c:	add	x8, x8, x9
   27a20:	strb	w0, [x8]
   27a24:	ldur	x8, [x29, #-8]
   27a28:	ldr	x9, [x8, #8]
   27a2c:	add	x9, x9, #0x1
   27a30:	str	x9, [x8, #8]
   27a34:	ldr	w8, [sp, #28]
   27a38:	subs	w8, w8, #0x1
   27a3c:	str	w8, [sp, #28]
   27a40:	cmp	w8, #0x0
   27a44:	cset	w8, hi  // hi = pmore
   27a48:	tbnz	w8, #0, 27a00 <lzma_mode_is_supported@@XZ_5.0+0xd498>
   27a4c:	b	27c10 <lzma_mode_is_supported@@XZ_5.0+0xd6a8>
   27a50:	ldur	w8, [x29, #-12]
   27a54:	mov	w9, w8
   27a58:	ldur	x10, [x29, #-8]
   27a5c:	ldr	x10, [x10, #8]
   27a60:	cmp	x9, x10
   27a64:	b.cs	27ad4 <lzma_mode_is_supported@@XZ_5.0+0xd56c>  // b.hs, b.nlast
   27a68:	ldur	x8, [x29, #-8]
   27a6c:	ldr	x8, [x8]
   27a70:	ldur	x9, [x29, #-8]
   27a74:	ldr	x9, [x9, #8]
   27a78:	add	x0, x8, x9
   27a7c:	ldur	x8, [x29, #-8]
   27a80:	ldr	x8, [x8]
   27a84:	ldur	x9, [x29, #-8]
   27a88:	ldr	x9, [x9, #8]
   27a8c:	add	x8, x8, x9
   27a90:	ldur	w10, [x29, #-12]
   27a94:	mov	w9, w10
   27a98:	mov	x11, xzr
   27a9c:	subs	x9, x11, x9
   27aa0:	add	x8, x8, x9
   27aa4:	mov	x9, #0xffffffffffffffff    	// #-1
   27aa8:	add	x1, x8, x9
   27aac:	ldr	w10, [sp, #28]
   27ab0:	mov	w2, w10
   27ab4:	bl	3090 <memcpy@plt>
   27ab8:	ldr	w10, [sp, #28]
   27abc:	mov	w8, w10
   27ac0:	ldur	x9, [x29, #-8]
   27ac4:	ldr	x11, [x9, #8]
   27ac8:	add	x8, x11, x8
   27acc:	str	x8, [x9, #8]
   27ad0:	b	27c10 <lzma_mode_is_supported@@XZ_5.0+0xd6a8>
   27ad4:	ldur	x8, [x29, #-8]
   27ad8:	ldr	x8, [x8, #8]
   27adc:	ldur	w9, [x29, #-12]
   27ae0:	mov	w10, w9
   27ae4:	subs	x8, x8, x10
   27ae8:	subs	x8, x8, #0x1
   27aec:	ldur	x10, [x29, #-8]
   27af0:	ldr	x10, [x10, #32]
   27af4:	add	x8, x8, x10
   27af8:	str	w8, [sp, #24]
   27afc:	ldur	x10, [x29, #-8]
   27b00:	ldr	x10, [x10, #32]
   27b04:	ldr	w8, [sp, #24]
   27b08:	mov	w11, w8
   27b0c:	subs	x10, x10, x11
   27b10:	str	w10, [sp, #20]
   27b14:	ldr	w8, [sp, #20]
   27b18:	ldr	w9, [sp, #28]
   27b1c:	cmp	w8, w9
   27b20:	b.cs	27bc4 <lzma_mode_is_supported@@XZ_5.0+0xd65c>  // b.hs, b.nlast
   27b24:	ldur	x8, [x29, #-8]
   27b28:	ldr	x8, [x8]
   27b2c:	ldur	x9, [x29, #-8]
   27b30:	ldr	x9, [x9, #8]
   27b34:	add	x0, x8, x9
   27b38:	ldur	x8, [x29, #-8]
   27b3c:	ldr	x8, [x8]
   27b40:	ldr	w10, [sp, #24]
   27b44:	mov	w9, w10
   27b48:	add	x1, x8, x9
   27b4c:	ldr	w10, [sp, #20]
   27b50:	mov	w2, w10
   27b54:	bl	30b0 <memmove@plt>
   27b58:	ldr	w10, [sp, #20]
   27b5c:	mov	w8, w10
   27b60:	ldur	x9, [x29, #-8]
   27b64:	ldr	x11, [x9, #8]
   27b68:	add	x8, x11, x8
   27b6c:	str	x8, [x9, #8]
   27b70:	ldr	w10, [sp, #28]
   27b74:	ldr	w12, [sp, #20]
   27b78:	subs	w10, w10, w12
   27b7c:	str	w10, [sp, #20]
   27b80:	ldur	x8, [x29, #-8]
   27b84:	ldr	x8, [x8]
   27b88:	ldur	x9, [x29, #-8]
   27b8c:	ldr	x9, [x9, #8]
   27b90:	add	x0, x8, x9
   27b94:	ldur	x8, [x29, #-8]
   27b98:	ldr	x1, [x8]
   27b9c:	ldr	w10, [sp, #20]
   27ba0:	mov	w2, w10
   27ba4:	bl	3090 <memcpy@plt>
   27ba8:	ldr	w10, [sp, #20]
   27bac:	mov	w8, w10
   27bb0:	ldur	x9, [x29, #-8]
   27bb4:	ldr	x11, [x9, #8]
   27bb8:	add	x8, x11, x8
   27bbc:	str	x8, [x9, #8]
   27bc0:	b	27c10 <lzma_mode_is_supported@@XZ_5.0+0xd6a8>
   27bc4:	ldur	x8, [x29, #-8]
   27bc8:	ldr	x8, [x8]
   27bcc:	ldur	x9, [x29, #-8]
   27bd0:	ldr	x9, [x9, #8]
   27bd4:	add	x0, x8, x9
   27bd8:	ldur	x8, [x29, #-8]
   27bdc:	ldr	x8, [x8]
   27be0:	ldr	w10, [sp, #24]
   27be4:	mov	w9, w10
   27be8:	add	x1, x8, x9
   27bec:	ldr	w10, [sp, #28]
   27bf0:	mov	w2, w10
   27bf4:	bl	30b0 <memmove@plt>
   27bf8:	ldr	w10, [sp, #28]
   27bfc:	mov	w8, w10
   27c00:	ldur	x9, [x29, #-8]
   27c04:	ldr	x11, [x9, #8]
   27c08:	add	x8, x11, x8
   27c0c:	str	x8, [x9, #8]
   27c10:	ldur	x8, [x29, #-8]
   27c14:	ldr	x8, [x8, #16]
   27c18:	ldur	x9, [x29, #-8]
   27c1c:	ldr	x9, [x9, #8]
   27c20:	cmp	x8, x9
   27c24:	b.cs	27c38 <lzma_mode_is_supported@@XZ_5.0+0xd6d0>  // b.hs, b.nlast
   27c28:	ldur	x8, [x29, #-8]
   27c2c:	ldr	x8, [x8, #8]
   27c30:	ldur	x9, [x29, #-8]
   27c34:	str	x8, [x9, #16]
   27c38:	ldur	x8, [x29, #-24]
   27c3c:	ldr	w9, [x8]
   27c40:	cmp	w9, #0x0
   27c44:	cset	w9, ne  // ne = any
   27c48:	and	w9, w9, #0x1
   27c4c:	mov	w0, w9
   27c50:	sxtw	x8, w0
   27c54:	cmp	x8, #0x0
   27c58:	cset	w9, ne  // ne = any
   27c5c:	and	w0, w9, #0x1
   27c60:	ldp	x29, x30, [sp, #64]
   27c64:	add	sp, sp, #0x50
   27c68:	ret
   27c6c:	sub	sp, sp, #0x20
   27c70:	mov	w8, #0x1                   	// #1
   27c74:	str	x0, [sp, #24]
   27c78:	str	w1, [sp, #20]
   27c7c:	str	w2, [sp, #16]
   27c80:	ldr	w9, [sp, #20]
   27c84:	ldr	w10, [sp, #16]
   27c88:	add	w9, w9, w10
   27c8c:	lsl	w8, w8, w9
   27c90:	str	w8, [sp, #12]
   27c94:	str	wzr, [sp, #8]
   27c98:	ldr	w8, [sp, #8]
   27c9c:	ldr	w9, [sp, #12]
   27ca0:	cmp	w8, w9
   27ca4:	b.cs	27d0c <lzma_mode_is_supported@@XZ_5.0+0xd7a4>  // b.hs, b.nlast
   27ca8:	str	wzr, [sp, #4]
   27cac:	ldr	w8, [sp, #4]
   27cb0:	cmp	w8, #0x300
   27cb4:	b.cs	27cfc <lzma_mode_is_supported@@XZ_5.0+0xd794>  // b.hs, b.nlast
   27cb8:	ldr	x8, [sp, #24]
   27cbc:	ldr	w9, [sp, #8]
   27cc0:	mov	w10, w9
   27cc4:	mov	x11, #0x600                 	// #1536
   27cc8:	mul	x10, x11, x10
   27ccc:	add	x8, x8, x10
   27cd0:	ldr	w9, [sp, #4]
   27cd4:	mov	w10, w9
   27cd8:	mov	x11, #0x2                   	// #2
   27cdc:	mul	x10, x11, x10
   27ce0:	add	x8, x8, x10
   27ce4:	mov	w9, #0x400                 	// #1024
   27ce8:	strh	w9, [x8]
   27cec:	ldr	w8, [sp, #4]
   27cf0:	add	w8, w8, #0x1
   27cf4:	str	w8, [sp, #4]
   27cf8:	b	27cac <lzma_mode_is_supported@@XZ_5.0+0xd744>
   27cfc:	ldr	w8, [sp, #8]
   27d00:	add	w8, w8, #0x1
   27d04:	str	w8, [sp, #8]
   27d08:	b	27c98 <lzma_mode_is_supported@@XZ_5.0+0xd730>
   27d0c:	add	sp, sp, #0x20
   27d10:	ret
   27d14:	sub	sp, sp, #0x30
   27d18:	stp	x29, x30, [sp, #32]
   27d1c:	add	x29, sp, #0x20
   27d20:	adrp	x3, 27000 <lzma_mode_is_supported@@XZ_5.0+0xca98>
   27d24:	add	x3, x3, #0xd50
   27d28:	stur	x0, [x29, #-8]
   27d2c:	str	x1, [sp, #16]
   27d30:	str	x2, [sp, #8]
   27d34:	ldur	x0, [x29, #-8]
   27d38:	ldr	x1, [sp, #16]
   27d3c:	ldr	x2, [sp, #8]
   27d40:	bl	157d4 <lzma_crc64@@XZ_5.0+0x3518>
   27d44:	ldp	x29, x30, [sp, #32]
   27d48:	add	sp, sp, #0x30
   27d4c:	ret
   27d50:	sub	sp, sp, #0x50
   27d54:	stp	x29, x30, [sp, #64]
   27d58:	add	x29, sp, #0x40
   27d5c:	stur	x0, [x29, #-16]
   27d60:	stur	x1, [x29, #-24]
   27d64:	str	x2, [sp, #32]
   27d68:	str	x3, [sp, #24]
   27d6c:	ldr	x8, [sp, #32]
   27d70:	cbnz	x8, 27d80 <lzma_mode_is_supported@@XZ_5.0+0xd818>
   27d74:	mov	w8, #0xb                   	// #11
   27d78:	stur	w8, [x29, #-4]
   27d7c:	b	27edc <lzma_mode_is_supported@@XZ_5.0+0xd974>
   27d80:	ldur	x8, [x29, #-16]
   27d84:	ldr	x8, [x8]
   27d88:	str	x8, [sp, #16]
   27d8c:	ldr	x8, [sp, #16]
   27d90:	cbnz	x8, 27e04 <lzma_mode_is_supported@@XZ_5.0+0xd89c>
   27d94:	ldur	x1, [x29, #-24]
   27d98:	mov	x0, #0xa8                  	// #168
   27d9c:	movk	x0, #0x1, lsl #16
   27da0:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   27da4:	str	x0, [sp, #16]
   27da8:	ldr	x8, [sp, #16]
   27dac:	cbnz	x8, 27dbc <lzma_mode_is_supported@@XZ_5.0+0xd854>
   27db0:	mov	w8, #0x5                   	// #5
   27db4:	stur	w8, [x29, #-4]
   27db8:	b	27edc <lzma_mode_is_supported@@XZ_5.0+0xd974>
   27dbc:	ldr	x8, [sp, #16]
   27dc0:	ldur	x9, [x29, #-16]
   27dc4:	str	x8, [x9]
   27dc8:	ldur	x8, [x29, #-16]
   27dcc:	adrp	x9, 28000 <lzma_mode_is_supported@@XZ_5.0+0xda98>
   27dd0:	add	x9, x9, #0x12c
   27dd4:	str	x9, [x8, #8]
   27dd8:	ldur	x8, [x29, #-16]
   27ddc:	adrp	x9, 28000 <lzma_mode_is_supported@@XZ_5.0+0xda98>
   27de0:	add	x9, x9, #0x49c
   27de4:	str	x9, [x8, #16]
   27de8:	ldur	x8, [x29, #-16]
   27dec:	adrp	x9, 28000 <lzma_mode_is_supported@@XZ_5.0+0xda98>
   27df0:	add	x9, x9, #0x4e0
   27df4:	str	x9, [x8, #24]
   27df8:	ldr	x8, [sp, #16]
   27dfc:	mov	x9, xzr
   27e00:	str	x9, [x8, #8]
   27e04:	ldr	x8, [sp, #16]
   27e08:	add	x0, x8, #0x10
   27e0c:	ldr	x1, [sp, #32]
   27e10:	mov	x2, #0x70                  	// #112
   27e14:	bl	3090 <memcpy@plt>
   27e18:	ldr	x8, [sp, #16]
   27e1c:	str	wzr, [x8]
   27e20:	ldr	x8, [sp, #16]
   27e24:	mov	w9, #0x1                   	// #1
   27e28:	strb	w9, [x8, #128]
   27e2c:	ldr	x8, [sp, #16]
   27e30:	mov	w9, #0x0                   	// #0
   27e34:	strb	w9, [x8, #129]
   27e38:	ldr	x8, [sp, #16]
   27e3c:	ldr	x8, [x8, #24]
   27e40:	mov	w9, #0x1                   	// #1
   27e44:	str	w9, [sp, #8]
   27e48:	cbz	x8, 27e60 <lzma_mode_is_supported@@XZ_5.0+0xd8f8>
   27e4c:	ldr	x8, [sp, #16]
   27e50:	ldr	w9, [x8, #32]
   27e54:	cmp	w9, #0x0
   27e58:	cset	w9, eq  // eq = none
   27e5c:	str	w9, [sp, #8]
   27e60:	ldr	w8, [sp, #8]
   27e64:	ldr	x9, [sp, #16]
   27e68:	and	w8, w8, #0x1
   27e6c:	strb	w8, [x9, #130]
   27e70:	ldr	x8, [sp, #16]
   27e74:	add	x0, x8, #0x8
   27e78:	ldur	x1, [x29, #-24]
   27e7c:	ldr	x8, [sp, #16]
   27e80:	add	x2, x8, #0x10
   27e84:	ldr	x3, [sp, #24]
   27e88:	bl	1a040 <lzma_lzma_preset@@XZ_5.0+0x118c>
   27e8c:	str	w0, [sp, #12]
   27e90:	ldr	w9, [sp, #12]
   27e94:	cbz	w9, 27ea4 <lzma_mode_is_supported@@XZ_5.0+0xd93c>
   27e98:	ldr	w8, [sp, #12]
   27e9c:	stur	w8, [x29, #-4]
   27ea0:	b	27edc <lzma_mode_is_supported@@XZ_5.0+0xd974>
   27ea4:	ldr	x8, [sp, #24]
   27ea8:	ldr	x8, [x8]
   27eac:	ldr	x9, [sp, #24]
   27eb0:	ldr	x9, [x9, #8]
   27eb4:	add	x8, x8, x9
   27eb8:	cmp	x8, #0x10, lsl #12
   27ebc:	b.cs	27ed8 <lzma_mode_is_supported@@XZ_5.0+0xd970>  // b.hs, b.nlast
   27ec0:	ldr	x8, [sp, #24]
   27ec4:	ldr	x8, [x8, #8]
   27ec8:	mov	x9, #0x10000               	// #65536
   27ecc:	subs	x8, x9, x8
   27ed0:	ldr	x9, [sp, #24]
   27ed4:	str	x8, [x9]
   27ed8:	stur	wzr, [x29, #-4]
   27edc:	ldur	w0, [x29, #-4]
   27ee0:	ldp	x29, x30, [sp, #64]
   27ee4:	add	sp, sp, #0x50
   27ee8:	ret
   27eec:	sub	sp, sp, #0x30
   27ef0:	stp	x29, x30, [sp, #32]
   27ef4:	add	x29, sp, #0x20
   27ef8:	mov	x8, #0xffffffffffffffff    	// #-1
   27efc:	str	x0, [sp, #16]
   27f00:	ldr	x0, [sp, #16]
   27f04:	str	x8, [sp]
   27f08:	bl	1a324 <lzma_lzma_preset@@XZ_5.0+0x1470>
   27f0c:	str	x0, [sp, #8]
   27f10:	ldr	x8, [sp, #8]
   27f14:	ldr	x9, [sp]
   27f18:	cmp	x8, x9
   27f1c:	b.ne	27f2c <lzma_mode_is_supported@@XZ_5.0+0xd9c4>  // b.any
   27f20:	mov	x8, #0xffffffffffffffff    	// #-1
   27f24:	stur	x8, [x29, #-8]
   27f28:	b	27f40 <lzma_mode_is_supported@@XZ_5.0+0xd9d8>
   27f2c:	ldr	x8, [sp, #8]
   27f30:	mov	x9, #0xa8                  	// #168
   27f34:	movk	x9, #0x1, lsl #16
   27f38:	add	x8, x9, x8
   27f3c:	stur	x8, [x29, #-8]
   27f40:	ldur	x0, [x29, #-8]
   27f44:	ldp	x29, x30, [sp, #32]
   27f48:	add	sp, sp, #0x30
   27f4c:	ret
   27f50:	sub	sp, sp, #0x30
   27f54:	stp	x29, x30, [sp, #32]
   27f58:	add	x29, sp, #0x20
   27f5c:	stur	x0, [x29, #-8]
   27f60:	str	x1, [sp, #16]
   27f64:	ldur	x8, [x29, #-8]
   27f68:	str	x8, [sp, #8]
   27f6c:	ldr	x8, [sp, #8]
   27f70:	ldr	w9, [x8]
   27f74:	cmp	w9, #0x1, lsl #12
   27f78:	b.ls	27f8c <lzma_mode_is_supported@@XZ_5.0+0xda24>  // b.plast
   27f7c:	ldr	x8, [sp, #8]
   27f80:	ldr	w9, [x8]
   27f84:	str	w9, [sp]
   27f88:	b	27f94 <lzma_mode_is_supported@@XZ_5.0+0xda2c>
   27f8c:	mov	w8, #0x1000                	// #4096
   27f90:	str	w8, [sp]
   27f94:	ldr	w8, [sp]
   27f98:	str	w8, [sp, #4]
   27f9c:	ldr	w8, [sp, #4]
   27fa0:	mov	w9, #0xffffffff            	// #-1
   27fa4:	subs	w8, w8, #0x1
   27fa8:	str	w8, [sp, #4]
   27fac:	ldr	w8, [sp, #4]
   27fb0:	ldr	w10, [sp, #4]
   27fb4:	orr	w8, w10, w8, lsr #2
   27fb8:	str	w8, [sp, #4]
   27fbc:	ldr	w8, [sp, #4]
   27fc0:	ldr	w10, [sp, #4]
   27fc4:	orr	w8, w10, w8, lsr #3
   27fc8:	str	w8, [sp, #4]
   27fcc:	ldr	w8, [sp, #4]
   27fd0:	ldr	w10, [sp, #4]
   27fd4:	orr	w8, w10, w8, lsr #4
   27fd8:	str	w8, [sp, #4]
   27fdc:	ldr	w8, [sp, #4]
   27fe0:	ldr	w10, [sp, #4]
   27fe4:	orr	w8, w10, w8, lsr #8
   27fe8:	str	w8, [sp, #4]
   27fec:	ldr	w8, [sp, #4]
   27ff0:	ldr	w10, [sp, #4]
   27ff4:	orr	w8, w10, w8, lsr #16
   27ff8:	str	w8, [sp, #4]
   27ffc:	ldr	w8, [sp, #4]
   28000:	cmp	w8, w9
   28004:	b.ne	28018 <lzma_mode_is_supported@@XZ_5.0+0xdab0>  // b.any
   28008:	ldr	x8, [sp, #16]
   2800c:	mov	w9, #0x28                  	// #40
   28010:	strb	w9, [x8]
   28014:	b	28030 <lzma_mode_is_supported@@XZ_5.0+0xdac8>
   28018:	ldr	w8, [sp, #4]
   2801c:	add	w0, w8, #0x1
   28020:	bl	28044 <lzma_mode_is_supported@@XZ_5.0+0xdadc>
   28024:	subs	w8, w0, #0x18
   28028:	ldr	x9, [sp, #16]
   2802c:	strb	w8, [x9]
   28030:	mov	w8, wzr
   28034:	mov	w0, w8
   28038:	ldp	x29, x30, [sp, #32]
   2803c:	add	sp, sp, #0x30
   28040:	ret
   28044:	sub	sp, sp, #0x10
   28048:	adrp	x8, 42000 <lzma_mode_is_supported@@XZ_5.0+0x27a98>
   2804c:	ldr	x8, [x8, #4008]
   28050:	str	w0, [sp, #8]
   28054:	ldr	w9, [sp, #8]
   28058:	cmp	w9, #0x2, lsl #12
   2805c:	str	x8, [sp]
   28060:	b.cs	2807c <lzma_mode_is_supported@@XZ_5.0+0xdb14>  // b.hs, b.nlast
   28064:	ldr	w8, [sp, #8]
   28068:	mov	w9, w8
   2806c:	ldr	x10, [sp]
   28070:	ldrb	w8, [x10, x9]
   28074:	str	w8, [sp, #12]
   28078:	b	280c0 <lzma_mode_is_supported@@XZ_5.0+0xdb58>
   2807c:	ldr	w8, [sp, #8]
   28080:	mov	w9, #0x2000000             	// #33554432
   28084:	cmp	w8, w9
   28088:	b.cs	280a8 <lzma_mode_is_supported@@XZ_5.0+0xdb40>  // b.hs, b.nlast
   2808c:	ldr	w8, [sp, #8]
   28090:	lsr	w8, w8, #12
   28094:	ldr	x9, [sp]
   28098:	ldrb	w8, [x9, w8, uxtw]
   2809c:	add	w8, w8, #0x18
   280a0:	str	w8, [sp, #12]
   280a4:	b	280c0 <lzma_mode_is_supported@@XZ_5.0+0xdb58>
   280a8:	ldr	w8, [sp, #8]
   280ac:	lsr	w8, w8, #24
   280b0:	ldr	x9, [sp]
   280b4:	ldrb	w8, [x9, w8, uxtw]
   280b8:	add	w8, w8, #0x30
   280bc:	str	w8, [sp, #12]
   280c0:	ldr	w0, [sp, #12]
   280c4:	add	sp, sp, #0x10
   280c8:	ret
   280cc:	sub	sp, sp, #0x20
   280d0:	mov	x8, #0x3                   	// #3
   280d4:	str	x0, [sp, #24]
   280d8:	ldr	x9, [sp, #24]
   280dc:	str	x9, [sp, #16]
   280e0:	ldr	x9, [sp, #16]
   280e4:	ldr	w10, [x9]
   280e8:	mov	w9, w10
   280ec:	mul	x8, x9, x8
   280f0:	cmp	x8, #0x100, lsl #12
   280f4:	b.ls	28114 <lzma_mode_is_supported@@XZ_5.0+0xdbac>  // b.plast
   280f8:	ldr	x8, [sp, #16]
   280fc:	ldr	w9, [x8]
   28100:	mov	w8, w9
   28104:	mov	x10, #0x3                   	// #3
   28108:	mul	x8, x8, x10
   2810c:	str	x8, [sp, #8]
   28110:	b	2811c <lzma_mode_is_supported@@XZ_5.0+0xdbb4>
   28114:	mov	x8, #0x100000              	// #1048576
   28118:	str	x8, [sp, #8]
   2811c:	ldr	x8, [sp, #8]
   28120:	mov	x0, x8
   28124:	add	sp, sp, #0x20
   28128:	ret
   2812c:	sub	sp, sp, #0x70
   28130:	stp	x29, x30, [sp, #96]
   28134:	add	x29, sp, #0x60
   28138:	stur	x0, [x29, #-16]
   2813c:	stur	x1, [x29, #-24]
   28140:	stur	x2, [x29, #-32]
   28144:	stur	x3, [x29, #-40]
   28148:	str	x4, [sp, #48]
   2814c:	ldur	x8, [x29, #-16]
   28150:	str	x8, [sp, #40]
   28154:	ldur	x8, [x29, #-40]
   28158:	ldr	x8, [x8]
   2815c:	ldr	x9, [sp, #48]
   28160:	cmp	x8, x9
   28164:	b.cs	28488 <lzma_mode_is_supported@@XZ_5.0+0xdf20>  // b.hs, b.nlast
   28168:	ldr	x8, [sp, #40]
   2816c:	ldr	w9, [x8]
   28170:	subs	w9, w9, #0x0
   28174:	mov	w8, w9
   28178:	ubfx	x8, x8, #0, #32
   2817c:	cmp	x8, #0x4
   28180:	str	x8, [sp, #8]
   28184:	b.hi	28484 <lzma_mode_is_supported@@XZ_5.0+0xdf1c>  // b.pmore
   28188:	adrp	x8, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   2818c:	add	x8, x8, #0xdfc
   28190:	ldr	x11, [sp, #8]
   28194:	ldrsw	x10, [x8, x11, lsl #2]
   28198:	add	x9, x8, x10
   2819c:	br	x9
   281a0:	ldur	x0, [x29, #-24]
   281a4:	bl	28618 <lzma_mode_is_supported@@XZ_5.0+0xe0b0>
   281a8:	cbnz	w0, 281fc <lzma_mode_is_supported@@XZ_5.0+0xdc94>
   281ac:	ldur	x8, [x29, #-24]
   281b0:	ldr	w9, [x8, #104]
   281b4:	cmp	w9, #0x3
   281b8:	b.ne	281dc <lzma_mode_is_supported@@XZ_5.0+0xdc74>  // b.any
   281bc:	ldur	x8, [x29, #-32]
   281c0:	ldur	x9, [x29, #-40]
   281c4:	ldr	x10, [x9]
   281c8:	add	x11, x10, #0x1
   281cc:	str	x11, [x9]
   281d0:	add	x8, x8, x10
   281d4:	mov	w12, #0x0                   	// #0
   281d8:	strb	w12, [x8]
   281dc:	ldur	x8, [x29, #-24]
   281e0:	ldr	w9, [x8, #104]
   281e4:	mov	w10, wzr
   281e8:	mov	w11, #0x1                   	// #1
   281ec:	cmp	w9, #0x0
   281f0:	csel	w9, w10, w11, eq  // eq = none
   281f4:	stur	w9, [x29, #-4]
   281f8:	b	2848c <lzma_mode_is_supported@@XZ_5.0+0xdf24>
   281fc:	ldr	x8, [sp, #40]
   28200:	ldrb	w9, [x8, #129]
   28204:	tbnz	w9, #0, 2820c <lzma_mode_is_supported@@XZ_5.0+0xdca4>
   28208:	b	28238 <lzma_mode_is_supported@@XZ_5.0+0xdcd0>
   2820c:	ldr	x8, [sp, #40]
   28210:	ldr	x0, [x8, #8]
   28214:	ldr	x8, [sp, #40]
   28218:	add	x1, x8, #0x10
   2821c:	bl	19968 <lzma_lzma_preset@@XZ_5.0+0xab4>
   28220:	str	w0, [sp, #36]
   28224:	ldr	w9, [sp, #36]
   28228:	cbz	w9, 28238 <lzma_mode_is_supported@@XZ_5.0+0xdcd0>
   2822c:	ldr	w8, [sp, #36]
   28230:	stur	w8, [x29, #-4]
   28234:	b	2848c <lzma_mode_is_supported@@XZ_5.0+0xdf24>
   28238:	ldr	x8, [sp, #40]
   2823c:	str	xzr, [x8, #136]
   28240:	ldr	x8, [sp, #40]
   28244:	str	xzr, [x8, #144]
   28248:	ldr	x8, [sp, #40]
   2824c:	mov	w9, #0x1                   	// #1
   28250:	str	w9, [x8]
   28254:	ldr	x8, [sp, #40]
   28258:	ldr	x8, [x8, #136]
   2825c:	mov	x9, #0x200000              	// #2097152
   28260:	subs	x8, x9, x8
   28264:	str	w8, [sp, #32]
   28268:	ldr	w8, [sp, #32]
   2826c:	ldur	x9, [x29, #-24]
   28270:	ldr	w10, [x9, #100]
   28274:	cmp	w8, w10
   28278:	b.cs	28284 <lzma_mode_is_supported@@XZ_5.0+0xdd1c>  // b.hs, b.nlast
   2827c:	str	wzr, [sp, #28]
   28280:	b	282b0 <lzma_mode_is_supported@@XZ_5.0+0xdd48>
   28284:	ldur	x8, [x29, #-24]
   28288:	ldr	w9, [x8, #24]
   2828c:	ldur	x8, [x29, #-24]
   28290:	ldr	w10, [x8, #28]
   28294:	subs	w9, w9, w10
   28298:	ldr	w10, [sp, #32]
   2829c:	add	w9, w9, w10
   282a0:	ldur	x8, [x29, #-24]
   282a4:	ldr	w10, [x8, #100]
   282a8:	subs	w9, w9, w10
   282ac:	str	w9, [sp, #28]
   282b0:	ldur	x8, [x29, #-24]
   282b4:	ldr	w9, [x8, #24]
   282b8:	ldur	x8, [x29, #-24]
   282bc:	ldr	w10, [x8, #28]
   282c0:	subs	w9, w9, w10
   282c4:	str	w9, [sp, #24]
   282c8:	ldr	x8, [sp, #40]
   282cc:	ldr	x0, [x8, #8]
   282d0:	ldur	x1, [x29, #-24]
   282d4:	ldr	x8, [sp, #40]
   282d8:	add	x2, x8, #0xa6
   282dc:	ldr	x8, [sp, #40]
   282e0:	add	x3, x8, #0x90
   282e4:	ldr	w5, [sp, #28]
   282e8:	mov	x4, #0x10000               	// #65536
   282ec:	bl	190a8 <lzma_lzma_preset@@XZ_5.0+0x1f4>
   282f0:	str	w0, [sp, #20]
   282f4:	ldur	x8, [x29, #-24]
   282f8:	ldr	w9, [x8, #24]
   282fc:	ldur	x8, [x29, #-24]
   28300:	ldr	w10, [x8, #28]
   28304:	subs	w9, w9, w10
   28308:	ldr	w10, [sp, #24]
   2830c:	subs	w9, w9, w10
   28310:	mov	w8, w9
   28314:	ubfx	x8, x8, #0, #32
   28318:	ldr	x11, [sp, #40]
   2831c:	ldr	x12, [x11, #136]
   28320:	add	x8, x12, x8
   28324:	str	x8, [x11, #136]
   28328:	ldr	w9, [sp, #20]
   2832c:	cmp	w9, #0x1
   28330:	b.eq	2833c <lzma_mode_is_supported@@XZ_5.0+0xddd4>  // b.none
   28334:	stur	wzr, [x29, #-4]
   28338:	b	2848c <lzma_mode_is_supported@@XZ_5.0+0xdf24>
   2833c:	ldr	x8, [sp, #40]
   28340:	ldr	x8, [x8, #144]
   28344:	ldr	x9, [sp, #40]
   28348:	ldr	x9, [x9, #136]
   2834c:	cmp	x8, x9
   28350:	b.cc	2839c <lzma_mode_is_supported@@XZ_5.0+0xde34>  // b.lo, b.ul, b.last
   28354:	ldur	x8, [x29, #-24]
   28358:	ldr	w9, [x8, #28]
   2835c:	mov	w8, w9
   28360:	ldr	x10, [sp, #40]
   28364:	ldr	x11, [x10, #136]
   28368:	add	x8, x11, x8
   2836c:	str	x8, [x10, #136]
   28370:	ldur	x8, [x29, #-24]
   28374:	str	wzr, [x8, #28]
   28378:	ldr	x0, [sp, #40]
   2837c:	bl	28648 <lzma_mode_is_supported@@XZ_5.0+0xe0e0>
   28380:	ldr	x8, [sp, #40]
   28384:	mov	w9, #0x1                   	// #1
   28388:	strb	w9, [x8, #129]
   2838c:	ldr	x8, [sp, #40]
   28390:	mov	w9, #0x3                   	// #3
   28394:	str	w9, [x8]
   28398:	b	28484 <lzma_mode_is_supported@@XZ_5.0+0xdf1c>
   2839c:	ldr	x0, [sp, #40]
   283a0:	bl	286c8 <lzma_mode_is_supported@@XZ_5.0+0xe160>
   283a4:	ldr	x8, [sp, #40]
   283a8:	mov	w9, #0x2                   	// #2
   283ac:	str	w9, [x8]
   283b0:	ldr	x8, [sp, #40]
   283b4:	add	x0, x8, #0xa0
   283b8:	ldr	x8, [sp, #40]
   283bc:	add	x1, x8, #0x98
   283c0:	ldr	x8, [sp, #40]
   283c4:	ldr	x2, [x8, #144]
   283c8:	ldur	x3, [x29, #-32]
   283cc:	ldur	x4, [x29, #-40]
   283d0:	ldr	x5, [sp, #48]
   283d4:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   283d8:	ldr	x8, [sp, #40]
   283dc:	ldr	x8, [x8, #152]
   283e0:	ldr	x9, [sp, #40]
   283e4:	ldr	x9, [x9, #144]
   283e8:	cmp	x8, x9
   283ec:	b.eq	283f8 <lzma_mode_is_supported@@XZ_5.0+0xde90>  // b.none
   283f0:	stur	wzr, [x29, #-4]
   283f4:	b	2848c <lzma_mode_is_supported@@XZ_5.0+0xdf24>
   283f8:	ldr	x8, [sp, #40]
   283fc:	str	wzr, [x8]
   28400:	b	28484 <lzma_mode_is_supported@@XZ_5.0+0xdf1c>
   28404:	ldr	x8, [sp, #40]
   28408:	add	x0, x8, #0xa0
   2840c:	ldr	x8, [sp, #40]
   28410:	add	x1, x8, #0x98
   28414:	ldur	x3, [x29, #-32]
   28418:	ldur	x4, [x29, #-40]
   2841c:	ldr	x5, [sp, #48]
   28420:	mov	x2, #0x3                   	// #3
   28424:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   28428:	ldr	x8, [sp, #40]
   2842c:	ldr	x8, [x8, #152]
   28430:	cmp	x8, #0x3
   28434:	b.eq	28440 <lzma_mode_is_supported@@XZ_5.0+0xded8>  // b.none
   28438:	stur	wzr, [x29, #-4]
   2843c:	b	2848c <lzma_mode_is_supported@@XZ_5.0+0xdf24>
   28440:	ldr	x8, [sp, #40]
   28444:	mov	w9, #0x4                   	// #4
   28448:	str	w9, [x8]
   2844c:	ldur	x0, [x29, #-24]
   28450:	ldur	x1, [x29, #-32]
   28454:	ldur	x2, [x29, #-40]
   28458:	ldr	x3, [sp, #48]
   2845c:	ldr	x8, [sp, #40]
   28460:	add	x4, x8, #0x88
   28464:	bl	288d0 <lzma_mode_is_supported@@XZ_5.0+0xe368>
   28468:	ldr	x8, [sp, #40]
   2846c:	ldr	x8, [x8, #136]
   28470:	cbz	x8, 2847c <lzma_mode_is_supported@@XZ_5.0+0xdf14>
   28474:	stur	wzr, [x29, #-4]
   28478:	b	2848c <lzma_mode_is_supported@@XZ_5.0+0xdf24>
   2847c:	ldr	x8, [sp, #40]
   28480:	str	wzr, [x8]
   28484:	b	28154 <lzma_mode_is_supported@@XZ_5.0+0xdbec>
   28488:	stur	wzr, [x29, #-4]
   2848c:	ldur	w0, [x29, #-4]
   28490:	ldp	x29, x30, [sp, #96]
   28494:	add	sp, sp, #0x70
   28498:	ret
   2849c:	sub	sp, sp, #0x30
   284a0:	stp	x29, x30, [sp, #32]
   284a4:	add	x29, sp, #0x20
   284a8:	stur	x0, [x29, #-8]
   284ac:	str	x1, [sp, #16]
   284b0:	ldur	x8, [x29, #-8]
   284b4:	str	x8, [sp, #8]
   284b8:	ldr	x8, [sp, #8]
   284bc:	ldr	x0, [x8, #8]
   284c0:	ldr	x1, [sp, #16]
   284c4:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   284c8:	ldr	x0, [sp, #8]
   284cc:	ldr	x1, [sp, #16]
   284d0:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   284d4:	ldp	x29, x30, [sp, #32]
   284d8:	add	sp, sp, #0x30
   284dc:	ret
   284e0:	sub	sp, sp, #0x30
   284e4:	str	x0, [sp, #32]
   284e8:	str	x1, [sp, #24]
   284ec:	ldr	x8, [sp, #32]
   284f0:	str	x8, [sp, #16]
   284f4:	ldr	x8, [sp, #24]
   284f8:	ldr	x8, [x8, #8]
   284fc:	cbz	x8, 2850c <lzma_mode_is_supported@@XZ_5.0+0xdfa4>
   28500:	ldr	x8, [sp, #16]
   28504:	ldr	w9, [x8]
   28508:	cbz	w9, 28518 <lzma_mode_is_supported@@XZ_5.0+0xdfb0>
   2850c:	mov	w8, #0xb                   	// #11
   28510:	str	w8, [sp, #44]
   28514:	b	2860c <lzma_mode_is_supported@@XZ_5.0+0xe0a4>
   28518:	ldr	x8, [sp, #24]
   2851c:	ldr	x8, [x8, #8]
   28520:	str	x8, [sp, #8]
   28524:	ldr	x8, [sp, #16]
   28528:	ldr	w9, [x8, #36]
   2852c:	ldr	x8, [sp, #8]
   28530:	ldr	w10, [x8, #20]
   28534:	cmp	w9, w10
   28538:	b.ne	2856c <lzma_mode_is_supported@@XZ_5.0+0xe004>  // b.any
   2853c:	ldr	x8, [sp, #16]
   28540:	ldr	w9, [x8, #40]
   28544:	ldr	x8, [sp, #8]
   28548:	ldr	w10, [x8, #24]
   2854c:	cmp	w9, w10
   28550:	b.ne	2856c <lzma_mode_is_supported@@XZ_5.0+0xe004>  // b.any
   28554:	ldr	x8, [sp, #16]
   28558:	ldr	w9, [x8, #44]
   2855c:	ldr	x8, [sp, #8]
   28560:	ldr	w10, [x8, #28]
   28564:	cmp	w9, w10
   28568:	b.eq	28608 <lzma_mode_is_supported@@XZ_5.0+0xe0a0>  // b.none
   2856c:	ldr	x8, [sp, #8]
   28570:	ldr	w9, [x8, #20]
   28574:	cmp	w9, #0x4
   28578:	b.hi	285b8 <lzma_mode_is_supported@@XZ_5.0+0xe050>  // b.pmore
   2857c:	ldr	x8, [sp, #8]
   28580:	ldr	w9, [x8, #24]
   28584:	cmp	w9, #0x4
   28588:	b.hi	285b8 <lzma_mode_is_supported@@XZ_5.0+0xe050>  // b.pmore
   2858c:	ldr	x8, [sp, #8]
   28590:	ldr	w9, [x8, #20]
   28594:	ldr	x8, [sp, #8]
   28598:	ldr	w10, [x8, #24]
   2859c:	add	w9, w9, w10
   285a0:	cmp	w9, #0x4
   285a4:	b.hi	285b8 <lzma_mode_is_supported@@XZ_5.0+0xe050>  // b.pmore
   285a8:	ldr	x8, [sp, #8]
   285ac:	ldr	w9, [x8, #28]
   285b0:	cmp	w9, #0x4
   285b4:	b.ls	285c4 <lzma_mode_is_supported@@XZ_5.0+0xe05c>  // b.plast
   285b8:	mov	w8, #0x8                   	// #8
   285bc:	str	w8, [sp, #44]
   285c0:	b	2860c <lzma_mode_is_supported@@XZ_5.0+0xe0a4>
   285c4:	ldr	x8, [sp, #8]
   285c8:	ldr	w9, [x8, #20]
   285cc:	ldr	x8, [sp, #16]
   285d0:	str	w9, [x8, #36]
   285d4:	ldr	x8, [sp, #8]
   285d8:	ldr	w9, [x8, #24]
   285dc:	ldr	x8, [sp, #16]
   285e0:	str	w9, [x8, #40]
   285e4:	ldr	x8, [sp, #8]
   285e8:	ldr	w9, [x8, #28]
   285ec:	ldr	x8, [sp, #16]
   285f0:	str	w9, [x8, #44]
   285f4:	ldr	x8, [sp, #16]
   285f8:	mov	w9, #0x1                   	// #1
   285fc:	strb	w9, [x8, #128]
   28600:	ldr	x8, [sp, #16]
   28604:	strb	w9, [x8, #129]
   28608:	str	wzr, [sp, #44]
   2860c:	ldr	w0, [sp, #44]
   28610:	add	sp, sp, #0x30
   28614:	ret
   28618:	sub	sp, sp, #0x10
   2861c:	str	x0, [sp, #8]
   28620:	ldr	x8, [sp, #8]
   28624:	ldr	w9, [x8, #36]
   28628:	ldr	x8, [sp, #8]
   2862c:	ldr	w10, [x8, #24]
   28630:	subs	w9, w9, w10
   28634:	ldr	x8, [sp, #8]
   28638:	ldr	w10, [x8, #28]
   2863c:	add	w0, w9, w10
   28640:	add	sp, sp, #0x10
   28644:	ret
   28648:	sub	sp, sp, #0x10
   2864c:	str	x0, [sp, #8]
   28650:	ldr	x8, [sp, #8]
   28654:	ldrb	w9, [x8, #130]
   28658:	tbnz	w9, #0, 28660 <lzma_mode_is_supported@@XZ_5.0+0xe0f8>
   2865c:	b	28670 <lzma_mode_is_supported@@XZ_5.0+0xe108>
   28660:	ldr	x8, [sp, #8]
   28664:	mov	w9, #0x1                   	// #1
   28668:	strb	w9, [x8, #160]
   2866c:	b	2867c <lzma_mode_is_supported@@XZ_5.0+0xe114>
   28670:	ldr	x8, [sp, #8]
   28674:	mov	w9, #0x2                   	// #2
   28678:	strb	w9, [x8, #160]
   2867c:	ldr	x8, [sp, #8]
   28680:	mov	w9, #0x0                   	// #0
   28684:	strb	w9, [x8, #130]
   28688:	ldr	x8, [sp, #8]
   2868c:	ldr	x8, [x8, #136]
   28690:	subs	x8, x8, #0x1
   28694:	lsr	x8, x8, #8
   28698:	ldr	x10, [sp, #8]
   2869c:	strb	w8, [x10, #161]
   286a0:	ldr	x10, [sp, #8]
   286a4:	ldr	x10, [x10, #136]
   286a8:	subs	x10, x10, #0x1
   286ac:	and	x10, x10, #0xff
   286b0:	ldr	x11, [sp, #8]
   286b4:	strb	w10, [x11, #162]
   286b8:	ldr	x11, [sp, #8]
   286bc:	str	xzr, [x11, #152]
   286c0:	add	sp, sp, #0x10
   286c4:	ret
   286c8:	sub	sp, sp, #0x30
   286cc:	stp	x29, x30, [sp, #32]
   286d0:	add	x29, sp, #0x20
   286d4:	stur	x0, [x29, #-8]
   286d8:	ldur	x8, [x29, #-8]
   286dc:	ldrb	w9, [x8, #128]
   286e0:	tbnz	w9, #0, 286e8 <lzma_mode_is_supported@@XZ_5.0+0xe180>
   286e4:	b	28734 <lzma_mode_is_supported@@XZ_5.0+0xe1cc>
   286e8:	str	xzr, [sp, #16]
   286ec:	ldur	x8, [x29, #-8]
   286f0:	ldrb	w9, [x8, #130]
   286f4:	tbnz	w9, #0, 286fc <lzma_mode_is_supported@@XZ_5.0+0xe194>
   286f8:	b	28718 <lzma_mode_is_supported@@XZ_5.0+0xe1b0>
   286fc:	ldur	x8, [x29, #-8]
   28700:	add	x8, x8, #0xa0
   28704:	ldr	x9, [sp, #16]
   28708:	add	x8, x8, x9
   2870c:	mov	w10, #0xe0                  	// #224
   28710:	strb	w10, [x8]
   28714:	b	28730 <lzma_mode_is_supported@@XZ_5.0+0xe1c8>
   28718:	ldur	x8, [x29, #-8]
   2871c:	add	x8, x8, #0xa0
   28720:	ldr	x9, [sp, #16]
   28724:	add	x8, x8, x9
   28728:	mov	w10, #0xc0                  	// #192
   2872c:	strb	w10, [x8]
   28730:	b	28780 <lzma_mode_is_supported@@XZ_5.0+0xe218>
   28734:	mov	x8, #0x1                   	// #1
   28738:	str	x8, [sp, #16]
   2873c:	ldur	x8, [x29, #-8]
   28740:	ldrb	w9, [x8, #129]
   28744:	tbnz	w9, #0, 2874c <lzma_mode_is_supported@@XZ_5.0+0xe1e4>
   28748:	b	28768 <lzma_mode_is_supported@@XZ_5.0+0xe200>
   2874c:	ldur	x8, [x29, #-8]
   28750:	add	x8, x8, #0xa0
   28754:	ldr	x9, [sp, #16]
   28758:	add	x8, x8, x9
   2875c:	mov	w10, #0xa0                  	// #160
   28760:	strb	w10, [x8]
   28764:	b	28780 <lzma_mode_is_supported@@XZ_5.0+0xe218>
   28768:	ldur	x8, [x29, #-8]
   2876c:	add	x8, x8, #0xa0
   28770:	ldr	x9, [sp, #16]
   28774:	add	x8, x8, x9
   28778:	mov	w10, #0x80                  	// #128
   2877c:	strb	w10, [x8]
   28780:	ldr	x8, [sp, #16]
   28784:	ldur	x9, [x29, #-8]
   28788:	str	x8, [x9, #152]
   2878c:	ldur	x8, [x29, #-8]
   28790:	ldr	x8, [x8, #136]
   28794:	subs	x8, x8, #0x1
   28798:	str	x8, [sp, #8]
   2879c:	ldr	x8, [sp, #8]
   287a0:	ldur	x9, [x29, #-8]
   287a4:	add	x9, x9, #0xa0
   287a8:	ldr	x10, [sp, #16]
   287ac:	add	x11, x10, #0x1
   287b0:	str	x11, [sp, #16]
   287b4:	add	x9, x9, x10
   287b8:	ldrb	w12, [x9]
   287bc:	mov	w10, w12
   287c0:	add	x8, x10, x8, lsr #16
   287c4:	strb	w8, [x9]
   287c8:	ldr	x9, [sp, #8]
   287cc:	lsr	x9, x9, #8
   287d0:	and	x9, x9, #0xff
   287d4:	ldur	x10, [x29, #-8]
   287d8:	add	x10, x10, #0xa0
   287dc:	ldr	x11, [sp, #16]
   287e0:	add	x13, x11, #0x1
   287e4:	str	x13, [sp, #16]
   287e8:	add	x10, x10, x11
   287ec:	strb	w9, [x10]
   287f0:	ldr	x10, [sp, #8]
   287f4:	and	x10, x10, #0xff
   287f8:	ldur	x11, [x29, #-8]
   287fc:	add	x11, x11, #0xa0
   28800:	ldr	x13, [sp, #16]
   28804:	add	x14, x13, #0x1
   28808:	str	x14, [sp, #16]
   2880c:	add	x11, x11, x13
   28810:	strb	w10, [x11]
   28814:	ldur	x11, [x29, #-8]
   28818:	ldr	x11, [x11, #144]
   2881c:	subs	x11, x11, #0x1
   28820:	str	x11, [sp, #8]
   28824:	ldr	x11, [sp, #8]
   28828:	lsr	x11, x11, #8
   2882c:	ldur	x13, [x29, #-8]
   28830:	add	x13, x13, #0xa0
   28834:	ldr	x14, [sp, #16]
   28838:	add	x15, x14, #0x1
   2883c:	str	x15, [sp, #16]
   28840:	add	x13, x13, x14
   28844:	strb	w11, [x13]
   28848:	ldr	x13, [sp, #8]
   2884c:	and	x13, x13, #0xff
   28850:	ldur	x14, [x29, #-8]
   28854:	add	x14, x14, #0xa0
   28858:	ldr	x15, [sp, #16]
   2885c:	add	x16, x15, #0x1
   28860:	str	x16, [sp, #16]
   28864:	add	x14, x14, x15
   28868:	strb	w13, [x14]
   2886c:	ldur	x14, [x29, #-8]
   28870:	ldrb	w8, [x14, #128]
   28874:	tbnz	w8, #0, 2887c <lzma_mode_is_supported@@XZ_5.0+0xe314>
   28878:	b	28898 <lzma_mode_is_supported@@XZ_5.0+0xe330>
   2887c:	ldur	x8, [x29, #-8]
   28880:	add	x0, x8, #0x10
   28884:	ldur	x8, [x29, #-8]
   28888:	add	x8, x8, #0xa0
   2888c:	ldr	x9, [sp, #16]
   28890:	add	x1, x8, x9
   28894:	bl	1a3ac <lzma_lzma_preset@@XZ_5.0+0x14f8>
   28898:	ldur	x8, [x29, #-8]
   2889c:	mov	w9, #0x0                   	// #0
   288a0:	strb	w9, [x8, #128]
   288a4:	ldur	x8, [x29, #-8]
   288a8:	strb	w9, [x8, #129]
   288ac:	ldur	x8, [x29, #-8]
   288b0:	strb	w9, [x8, #130]
   288b4:	ldur	x8, [x29, #-8]
   288b8:	ldr	x10, [x8, #144]
   288bc:	add	x10, x10, #0x6
   288c0:	str	x10, [x8, #144]
   288c4:	ldp	x29, x30, [sp, #32]
   288c8:	add	sp, sp, #0x30
   288cc:	ret
   288d0:	sub	sp, sp, #0x50
   288d4:	stp	x29, x30, [sp, #64]
   288d8:	add	x29, sp, #0x40
   288dc:	stur	x0, [x29, #-8]
   288e0:	stur	x1, [x29, #-16]
   288e4:	stur	x2, [x29, #-24]
   288e8:	str	x3, [sp, #32]
   288ec:	str	x4, [sp, #24]
   288f0:	ldr	x8, [sp, #32]
   288f4:	ldur	x9, [x29, #-24]
   288f8:	ldr	x9, [x9]
   288fc:	subs	x8, x8, x9
   28900:	str	x8, [sp, #16]
   28904:	ldr	x8, [sp, #16]
   28908:	ldr	x9, [sp, #24]
   2890c:	ldr	x9, [x9]
   28910:	cmp	x8, x9
   28914:	b.cs	28924 <lzma_mode_is_supported@@XZ_5.0+0xe3bc>  // b.hs, b.nlast
   28918:	ldr	x8, [sp, #16]
   2891c:	str	x8, [sp]
   28920:	b	28930 <lzma_mode_is_supported@@XZ_5.0+0xe3c8>
   28924:	ldr	x8, [sp, #24]
   28928:	ldr	x8, [x8]
   2892c:	str	x8, [sp]
   28930:	ldr	x8, [sp]
   28934:	str	x8, [sp, #8]
   28938:	ldur	x8, [x29, #-16]
   2893c:	ldur	x9, [x29, #-24]
   28940:	ldr	x9, [x9]
   28944:	add	x0, x8, x9
   28948:	ldur	x8, [x29, #-8]
   2894c:	ldr	x8, [x8]
   28950:	ldur	x9, [x29, #-8]
   28954:	ldr	w10, [x9, #24]
   28958:	mov	w9, w10
   2895c:	add	x8, x8, x9
   28960:	ldr	x9, [sp, #24]
   28964:	ldr	x9, [x9]
   28968:	mov	x11, xzr
   2896c:	subs	x9, x11, x9
   28970:	add	x1, x8, x9
   28974:	ldr	x2, [sp, #8]
   28978:	bl	3090 <memcpy@plt>
   2897c:	ldr	x8, [sp, #8]
   28980:	ldur	x9, [x29, #-24]
   28984:	ldr	x11, [x9]
   28988:	add	x8, x11, x8
   2898c:	str	x8, [x9]
   28990:	ldr	x8, [sp, #8]
   28994:	ldr	x9, [sp, #24]
   28998:	ldr	x11, [x9]
   2899c:	subs	x8, x11, x8
   289a0:	str	x8, [x9]
   289a4:	ldp	x29, x30, [sp, #64]
   289a8:	add	sp, sp, #0x50
   289ac:	ret
   289b0:	sub	sp, sp, #0x30
   289b4:	stp	x29, x30, [sp, #32]
   289b8:	add	x29, sp, #0x20
   289bc:	adrp	x3, 28000 <lzma_mode_is_supported@@XZ_5.0+0xda98>
   289c0:	add	x3, x3, #0x9ec
   289c4:	stur	x0, [x29, #-8]
   289c8:	str	x1, [sp, #16]
   289cc:	str	x2, [sp, #8]
   289d0:	ldur	x0, [x29, #-8]
   289d4:	ldr	x1, [sp, #16]
   289d8:	ldr	x2, [sp, #8]
   289dc:	bl	18688 <lzma_mf_is_supported@@XZ_5.0+0x27a4>
   289e0:	ldp	x29, x30, [sp, #32]
   289e4:	add	sp, sp, #0x30
   289e8:	ret
   289ec:	sub	sp, sp, #0x90
   289f0:	stp	x29, x30, [sp, #128]
   289f4:	add	x29, sp, #0x80
   289f8:	stur	x0, [x29, #-16]
   289fc:	stur	x1, [x29, #-24]
   28a00:	stur	x2, [x29, #-32]
   28a04:	stur	x3, [x29, #-40]
   28a08:	ldur	x8, [x29, #-16]
   28a0c:	ldr	x8, [x8]
   28a10:	stur	x8, [x29, #-48]
   28a14:	ldur	x8, [x29, #-48]
   28a18:	cbnz	x8, 28aac <lzma_mode_is_supported@@XZ_5.0+0xe544>
   28a1c:	ldur	x1, [x29, #-24]
   28a20:	mov	x0, #0xb8                  	// #184
   28a24:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   28a28:	stur	x0, [x29, #-48]
   28a2c:	ldur	x8, [x29, #-48]
   28a30:	cbnz	x8, 28a40 <lzma_mode_is_supported@@XZ_5.0+0xe4d8>
   28a34:	mov	w8, #0x5                   	// #5
   28a38:	stur	w8, [x29, #-4]
   28a3c:	b	28b1c <lzma_mode_is_supported@@XZ_5.0+0xe5b4>
   28a40:	ldur	x8, [x29, #-48]
   28a44:	ldur	x9, [x29, #-16]
   28a48:	str	x8, [x9]
   28a4c:	ldur	x8, [x29, #-16]
   28a50:	adrp	x9, 28000 <lzma_mode_is_supported@@XZ_5.0+0xda98>
   28a54:	add	x9, x9, #0xc74
   28a58:	str	x9, [x8, #8]
   28a5c:	ldur	x8, [x29, #-16]
   28a60:	adrp	x9, 29000 <lzma_mode_is_supported@@XZ_5.0+0xea98>
   28a64:	add	x9, x9, #0x138
   28a68:	str	x9, [x8, #32]
   28a6c:	ldur	x8, [x29, #-48]
   28a70:	add	x0, x8, #0x8
   28a74:	add	x8, sp, #0x28
   28a78:	str	x0, [sp, #24]
   28a7c:	mov	x0, x8
   28a80:	mov	w10, wzr
   28a84:	mov	w1, w10
   28a88:	mov	x9, #0x28                  	// #40
   28a8c:	mov	x2, x9
   28a90:	str	x8, [sp, #16]
   28a94:	str	x9, [sp, #8]
   28a98:	bl	3230 <memset@plt>
   28a9c:	ldr	x0, [sp, #24]
   28aa0:	ldr	x1, [sp, #16]
   28aa4:	ldr	x2, [sp, #8]
   28aa8:	bl	3090 <memcpy@plt>
   28aac:	ldur	x8, [x29, #-32]
   28ab0:	str	x8, [sp, #32]
   28ab4:	ldur	x8, [x29, #-48]
   28ab8:	str	wzr, [x8]
   28abc:	ldur	x8, [x29, #-48]
   28ac0:	mov	w9, #0x1                   	// #1
   28ac4:	strb	w9, [x8, #64]
   28ac8:	ldr	x8, [sp, #32]
   28acc:	ldr	x8, [x8, #8]
   28ad0:	mov	w9, #0x1                   	// #1
   28ad4:	str	w9, [sp, #4]
   28ad8:	cbz	x8, 28af0 <lzma_mode_is_supported@@XZ_5.0+0xe588>
   28adc:	ldr	x8, [sp, #32]
   28ae0:	ldr	w9, [x8, #16]
   28ae4:	cmp	w9, #0x0
   28ae8:	cset	w9, eq  // eq = none
   28aec:	str	w9, [sp, #4]
   28af0:	ldr	w8, [sp, #4]
   28af4:	ldur	x9, [x29, #-48]
   28af8:	and	w8, w8, #0x1
   28afc:	strb	w8, [x9, #65]
   28b00:	ldur	x9, [x29, #-48]
   28b04:	add	x0, x9, #0x8
   28b08:	ldur	x1, [x29, #-24]
   28b0c:	ldr	x2, [sp, #32]
   28b10:	ldur	x3, [x29, #-40]
   28b14:	bl	1f69c <lzma_mode_is_supported@@XZ_5.0+0x5134>
   28b18:	stur	w0, [x29, #-4]
   28b1c:	ldur	w0, [x29, #-4]
   28b20:	ldp	x29, x30, [sp, #128]
   28b24:	add	sp, sp, #0x90
   28b28:	ret
   28b2c:	sub	sp, sp, #0x20
   28b30:	stp	x29, x30, [sp, #16]
   28b34:	add	x29, sp, #0x10
   28b38:	str	x0, [sp, #8]
   28b3c:	ldr	x0, [sp, #8]
   28b40:	bl	27510 <lzma_mode_is_supported@@XZ_5.0+0xcfa8>
   28b44:	add	x0, x0, #0xb8
   28b48:	ldp	x29, x30, [sp, #16]
   28b4c:	add	sp, sp, #0x20
   28b50:	ret
   28b54:	sub	sp, sp, #0x40
   28b58:	stp	x29, x30, [sp, #48]
   28b5c:	add	x29, sp, #0x30
   28b60:	stur	x0, [x29, #-16]
   28b64:	str	x1, [sp, #24]
   28b68:	str	x2, [sp, #16]
   28b6c:	str	x3, [sp, #8]
   28b70:	ldr	x8, [sp, #8]
   28b74:	cmp	x8, #0x1
   28b78:	b.eq	28b88 <lzma_mode_is_supported@@XZ_5.0+0xe620>  // b.none
   28b7c:	mov	w8, #0x8                   	// #8
   28b80:	stur	w8, [x29, #-4]
   28b84:	b	28c64 <lzma_mode_is_supported@@XZ_5.0+0xe6fc>
   28b88:	ldr	x8, [sp, #16]
   28b8c:	ldrb	w9, [x8]
   28b90:	and	w9, w9, #0xc0
   28b94:	cbz	w9, 28ba4 <lzma_mode_is_supported@@XZ_5.0+0xe63c>
   28b98:	mov	w8, #0x8                   	// #8
   28b9c:	stur	w8, [x29, #-4]
   28ba0:	b	28c64 <lzma_mode_is_supported@@XZ_5.0+0xe6fc>
   28ba4:	ldr	x8, [sp, #16]
   28ba8:	ldrb	w9, [x8]
   28bac:	cmp	w9, #0x28
   28bb0:	b.le	28bc0 <lzma_mode_is_supported@@XZ_5.0+0xe658>
   28bb4:	mov	w8, #0x8                   	// #8
   28bb8:	stur	w8, [x29, #-4]
   28bbc:	b	28c64 <lzma_mode_is_supported@@XZ_5.0+0xe6fc>
   28bc0:	ldr	x1, [sp, #24]
   28bc4:	mov	x0, #0x70                  	// #112
   28bc8:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   28bcc:	str	x0, [sp]
   28bd0:	ldr	x8, [sp]
   28bd4:	cbnz	x8, 28be4 <lzma_mode_is_supported@@XZ_5.0+0xe67c>
   28bd8:	mov	w8, #0x5                   	// #5
   28bdc:	stur	w8, [x29, #-4]
   28be0:	b	28c64 <lzma_mode_is_supported@@XZ_5.0+0xe6fc>
   28be4:	ldr	x8, [sp, #16]
   28be8:	ldrb	w9, [x8]
   28bec:	cmp	w9, #0x28
   28bf0:	b.ne	28c04 <lzma_mode_is_supported@@XZ_5.0+0xe69c>  // b.any
   28bf4:	ldr	x8, [sp]
   28bf8:	mov	w9, #0xffffffff            	// #-1
   28bfc:	str	w9, [x8]
   28c00:	b	28c40 <lzma_mode_is_supported@@XZ_5.0+0xe6d8>
   28c04:	ldr	x8, [sp, #16]
   28c08:	ldrb	w9, [x8]
   28c0c:	and	w9, w9, #0x1
   28c10:	mov	w10, #0x2                   	// #2
   28c14:	orr	w9, w10, w9
   28c18:	ldr	x8, [sp]
   28c1c:	str	w9, [x8]
   28c20:	ldr	x8, [sp, #16]
   28c24:	ldrb	w9, [x8]
   28c28:	sdiv	w9, w9, w10
   28c2c:	add	w9, w9, #0xb
   28c30:	ldr	x8, [sp]
   28c34:	ldr	w10, [x8]
   28c38:	lsl	w9, w10, w9
   28c3c:	str	w9, [x8]
   28c40:	ldr	x8, [sp]
   28c44:	mov	x9, xzr
   28c48:	str	x9, [x8, #8]
   28c4c:	ldr	x8, [sp]
   28c50:	str	wzr, [x8, #16]
   28c54:	ldr	x8, [sp]
   28c58:	ldur	x9, [x29, #-16]
   28c5c:	str	x8, [x9]
   28c60:	stur	wzr, [x29, #-4]
   28c64:	ldur	w0, [x29, #-4]
   28c68:	ldp	x29, x30, [sp, #48]
   28c6c:	add	sp, sp, #0x40
   28c70:	ret
   28c74:	sub	sp, sp, #0x80
   28c78:	stp	x29, x30, [sp, #112]
   28c7c:	add	x29, sp, #0x70
   28c80:	stur	x0, [x29, #-16]
   28c84:	stur	x1, [x29, #-24]
   28c88:	stur	x2, [x29, #-32]
   28c8c:	stur	x3, [x29, #-40]
   28c90:	stur	x4, [x29, #-48]
   28c94:	ldur	x8, [x29, #-16]
   28c98:	str	x8, [sp, #56]
   28c9c:	ldur	x8, [x29, #-40]
   28ca0:	ldr	x8, [x8]
   28ca4:	ldur	x9, [x29, #-48]
   28ca8:	mov	w10, #0x1                   	// #1
   28cac:	cmp	x8, x9
   28cb0:	str	w10, [sp, #20]
   28cb4:	b.cc	28ccc <lzma_mode_is_supported@@XZ_5.0+0xe764>  // b.lo, b.ul, b.last
   28cb8:	ldr	x8, [sp, #56]
   28cbc:	ldr	w9, [x8]
   28cc0:	cmp	w9, #0x6
   28cc4:	cset	w9, eq  // eq = none
   28cc8:	str	w9, [sp, #20]
   28ccc:	ldr	w8, [sp, #20]
   28cd0:	tbnz	w8, #0, 28cd8 <lzma_mode_is_supported@@XZ_5.0+0xe770>
   28cd4:	b	29124 <lzma_mode_is_supported@@XZ_5.0+0xebbc>
   28cd8:	ldr	x8, [sp, #56]
   28cdc:	ldr	w9, [x8]
   28ce0:	subs	w9, w9, #0x0
   28ce4:	mov	w8, w9
   28ce8:	ubfx	x8, x8, #0, #32
   28cec:	cmp	x8, #0x7
   28cf0:	str	x8, [sp, #8]
   28cf4:	b.hi	29114 <lzma_mode_is_supported@@XZ_5.0+0xebac>  // b.pmore
   28cf8:	adrp	x8, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   28cfc:	add	x8, x8, #0xe10
   28d00:	ldr	x11, [sp, #8]
   28d04:	ldrsw	x10, [x8, x11, lsl #2]
   28d08:	add	x9, x8, x10
   28d0c:	br	x9
   28d10:	ldur	x8, [x29, #-32]
   28d14:	ldur	x9, [x29, #-40]
   28d18:	ldr	x9, [x9]
   28d1c:	ldrb	w10, [x8, x9]
   28d20:	str	w10, [sp, #52]
   28d24:	ldur	x8, [x29, #-40]
   28d28:	ldr	x9, [x8]
   28d2c:	add	x9, x9, #0x1
   28d30:	str	x9, [x8]
   28d34:	ldr	w10, [sp, #52]
   28d38:	cbnz	w10, 28d48 <lzma_mode_is_supported@@XZ_5.0+0xe7e0>
   28d3c:	mov	w8, #0x1                   	// #1
   28d40:	stur	w8, [x29, #-4]
   28d44:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   28d48:	ldr	w8, [sp, #52]
   28d4c:	cmp	w8, #0xe0
   28d50:	b.cs	28d60 <lzma_mode_is_supported@@XZ_5.0+0xe7f8>  // b.hs, b.nlast
   28d54:	ldr	w8, [sp, #52]
   28d58:	cmp	w8, #0x1
   28d5c:	b.ne	28d78 <lzma_mode_is_supported@@XZ_5.0+0xe810>  // b.any
   28d60:	ldr	x8, [sp, #56]
   28d64:	mov	w9, #0x1                   	// #1
   28d68:	strb	w9, [x8, #64]
   28d6c:	ldr	x8, [sp, #56]
   28d70:	strb	w9, [x8, #65]
   28d74:	b	28d94 <lzma_mode_is_supported@@XZ_5.0+0xe82c>
   28d78:	ldr	x8, [sp, #56]
   28d7c:	ldrb	w9, [x8, #65]
   28d80:	tbnz	w9, #0, 28d88 <lzma_mode_is_supported@@XZ_5.0+0xe820>
   28d84:	b	28d94 <lzma_mode_is_supported@@XZ_5.0+0xe82c>
   28d88:	mov	w8, #0x9                   	// #9
   28d8c:	stur	w8, [x29, #-4]
   28d90:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   28d94:	ldr	w8, [sp, #52]
   28d98:	cmp	w8, #0x80
   28d9c:	b.cc	28e44 <lzma_mode_is_supported@@XZ_5.0+0xe8dc>  // b.lo, b.ul, b.last
   28da0:	ldr	w8, [sp, #52]
   28da4:	and	w8, w8, #0x1f
   28da8:	lsl	w8, w8, #16
   28dac:	mov	w9, w8
   28db0:	ubfx	x9, x9, #0, #32
   28db4:	ldr	x10, [sp, #56]
   28db8:	str	x9, [x10, #48]
   28dbc:	ldr	x9, [sp, #56]
   28dc0:	mov	w8, #0x1                   	// #1
   28dc4:	str	w8, [x9]
   28dc8:	ldr	w8, [sp, #52]
   28dcc:	cmp	w8, #0xc0
   28dd0:	b.cc	28df0 <lzma_mode_is_supported@@XZ_5.0+0xe888>  // b.lo, b.ul, b.last
   28dd4:	ldr	x8, [sp, #56]
   28dd8:	mov	w9, #0x0                   	// #0
   28ddc:	strb	w9, [x8, #64]
   28de0:	ldr	x8, [sp, #56]
   28de4:	mov	w9, #0x5                   	// #5
   28de8:	str	w9, [x8, #4]
   28dec:	b	28e40 <lzma_mode_is_supported@@XZ_5.0+0xe8d8>
   28df0:	ldr	x8, [sp, #56]
   28df4:	ldrb	w9, [x8, #64]
   28df8:	tbnz	w9, #0, 28e00 <lzma_mode_is_supported@@XZ_5.0+0xe898>
   28dfc:	b	28e0c <lzma_mode_is_supported@@XZ_5.0+0xe8a4>
   28e00:	mov	w8, #0x9                   	// #9
   28e04:	stur	w8, [x29, #-4]
   28e08:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   28e0c:	ldr	x8, [sp, #56]
   28e10:	mov	w9, #0x6                   	// #6
   28e14:	str	w9, [x8, #4]
   28e18:	ldr	w9, [sp, #52]
   28e1c:	cmp	w9, #0xa0
   28e20:	b.cc	28e40 <lzma_mode_is_supported@@XZ_5.0+0xe8d8>  // b.lo, b.ul, b.last
   28e24:	ldr	x8, [sp, #56]
   28e28:	ldr	x8, [x8, #24]
   28e2c:	ldr	x9, [sp, #56]
   28e30:	ldr	x0, [x9, #8]
   28e34:	ldr	x9, [sp, #56]
   28e38:	add	x1, x9, #0x48
   28e3c:	blr	x8
   28e40:	b	28e74 <lzma_mode_is_supported@@XZ_5.0+0xe90c>
   28e44:	ldr	w8, [sp, #52]
   28e48:	cmp	w8, #0x2
   28e4c:	b.ls	28e5c <lzma_mode_is_supported@@XZ_5.0+0xe8f4>  // b.plast
   28e50:	mov	w8, #0x9                   	// #9
   28e54:	stur	w8, [x29, #-4]
   28e58:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   28e5c:	ldr	x8, [sp, #56]
   28e60:	mov	w9, #0x3                   	// #3
   28e64:	str	w9, [x8]
   28e68:	ldr	x8, [sp, #56]
   28e6c:	mov	w9, #0x7                   	// #7
   28e70:	str	w9, [x8, #4]
   28e74:	ldr	x8, [sp, #56]
   28e78:	ldrb	w9, [x8, #65]
   28e7c:	tbnz	w9, #0, 28e84 <lzma_mode_is_supported@@XZ_5.0+0xe91c>
   28e80:	b	28ea0 <lzma_mode_is_supported@@XZ_5.0+0xe938>
   28e84:	ldr	x8, [sp, #56]
   28e88:	mov	w9, #0x0                   	// #0
   28e8c:	strb	w9, [x8, #65]
   28e90:	ldur	x0, [x29, #-24]
   28e94:	bl	2917c <lzma_mode_is_supported@@XZ_5.0+0xec14>
   28e98:	stur	wzr, [x29, #-4]
   28e9c:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   28ea0:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   28ea4:	ldur	x8, [x29, #-32]
   28ea8:	ldur	x9, [x29, #-40]
   28eac:	ldr	x10, [x9]
   28eb0:	add	x11, x10, #0x1
   28eb4:	str	x11, [x9]
   28eb8:	ldrb	w12, [x8, x10]
   28ebc:	lsl	w12, w12, #8
   28ec0:	mov	w8, w12
   28ec4:	ubfx	x8, x8, #0, #32
   28ec8:	ldr	x9, [sp, #56]
   28ecc:	ldr	x10, [x9, #48]
   28ed0:	add	x8, x10, x8
   28ed4:	str	x8, [x9, #48]
   28ed8:	ldr	x8, [sp, #56]
   28edc:	mov	w12, #0x2                   	// #2
   28ee0:	str	w12, [x8]
   28ee4:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   28ee8:	ldur	x8, [x29, #-32]
   28eec:	ldur	x9, [x29, #-40]
   28ef0:	ldr	x10, [x9]
   28ef4:	add	x11, x10, #0x1
   28ef8:	str	x11, [x9]
   28efc:	ldrb	w12, [x8, x10]
   28f00:	add	w12, w12, #0x1
   28f04:	ldr	x8, [sp, #56]
   28f08:	ldr	x9, [x8, #48]
   28f0c:	add	x9, x9, w12, sxtw
   28f10:	str	x9, [x8, #48]
   28f14:	ldr	x8, [sp, #56]
   28f18:	mov	w12, #0x3                   	// #3
   28f1c:	str	w12, [x8]
   28f20:	ldr	x8, [sp, #56]
   28f24:	ldr	x8, [x8, #32]
   28f28:	ldr	x9, [sp, #56]
   28f2c:	ldr	x0, [x9, #8]
   28f30:	ldr	x9, [sp, #56]
   28f34:	ldr	x1, [x9, #48]
   28f38:	blr	x8
   28f3c:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   28f40:	ldur	x8, [x29, #-32]
   28f44:	ldur	x9, [x29, #-40]
   28f48:	ldr	x10, [x9]
   28f4c:	add	x11, x10, #0x1
   28f50:	str	x11, [x9]
   28f54:	ldrb	w12, [x8, x10]
   28f58:	lsl	w12, w12, #8
   28f5c:	mov	w8, w12
   28f60:	ubfx	x8, x8, #0, #32
   28f64:	ldr	x9, [sp, #56]
   28f68:	str	x8, [x9, #56]
   28f6c:	ldr	x8, [sp, #56]
   28f70:	mov	w12, #0x4                   	// #4
   28f74:	str	w12, [x8]
   28f78:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   28f7c:	ldur	x8, [x29, #-32]
   28f80:	ldur	x9, [x29, #-40]
   28f84:	ldr	x10, [x9]
   28f88:	add	x11, x10, #0x1
   28f8c:	str	x11, [x9]
   28f90:	ldrb	w12, [x8, x10]
   28f94:	add	w12, w12, #0x1
   28f98:	ldr	x8, [sp, #56]
   28f9c:	ldr	x9, [x8, #56]
   28fa0:	add	x9, x9, w12, sxtw
   28fa4:	str	x9, [x8, #56]
   28fa8:	ldr	x8, [sp, #56]
   28fac:	ldr	w12, [x8, #4]
   28fb0:	ldr	x8, [sp, #56]
   28fb4:	str	w12, [x8]
   28fb8:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   28fbc:	ldr	x8, [sp, #56]
   28fc0:	add	x0, x8, #0x48
   28fc4:	ldur	x8, [x29, #-32]
   28fc8:	ldur	x9, [x29, #-40]
   28fcc:	ldr	x10, [x9]
   28fd0:	add	x11, x10, #0x1
   28fd4:	str	x11, [x9]
   28fd8:	ldrb	w1, [x8, x10]
   28fdc:	bl	27450 <lzma_mode_is_supported@@XZ_5.0+0xcee8>
   28fe0:	tbnz	w0, #0, 28fe8 <lzma_mode_is_supported@@XZ_5.0+0xea80>
   28fe4:	b	28ff4 <lzma_mode_is_supported@@XZ_5.0+0xea8c>
   28fe8:	mov	w8, #0x9                   	// #9
   28fec:	stur	w8, [x29, #-4]
   28ff0:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   28ff4:	ldr	x8, [sp, #56]
   28ff8:	ldr	x8, [x8, #24]
   28ffc:	ldr	x9, [sp, #56]
   29000:	ldr	x0, [x9, #8]
   29004:	ldr	x9, [sp, #56]
   29008:	add	x1, x9, #0x48
   2900c:	blr	x8
   29010:	ldr	x8, [sp, #56]
   29014:	mov	w10, #0x6                   	// #6
   29018:	str	w10, [x8]
   2901c:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   29020:	ldur	x8, [x29, #-40]
   29024:	ldr	x8, [x8]
   29028:	str	x8, [sp, #40]
   2902c:	ldr	x8, [sp, #56]
   29030:	ldr	x8, [x8, #16]
   29034:	ldr	x9, [sp, #56]
   29038:	ldr	x0, [x9, #8]
   2903c:	ldur	x1, [x29, #-24]
   29040:	ldur	x2, [x29, #-32]
   29044:	ldur	x3, [x29, #-40]
   29048:	ldur	x4, [x29, #-48]
   2904c:	blr	x8
   29050:	str	w0, [sp, #36]
   29054:	ldur	x8, [x29, #-40]
   29058:	ldr	x8, [x8]
   2905c:	ldr	x9, [sp, #40]
   29060:	subs	x8, x8, x9
   29064:	str	x8, [sp, #24]
   29068:	ldr	x8, [sp, #24]
   2906c:	ldr	x9, [sp, #56]
   29070:	ldr	x9, [x9, #56]
   29074:	cmp	x8, x9
   29078:	b.ls	29088 <lzma_mode_is_supported@@XZ_5.0+0xeb20>  // b.plast
   2907c:	mov	w8, #0x9                   	// #9
   29080:	stur	w8, [x29, #-4]
   29084:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   29088:	ldr	x8, [sp, #24]
   2908c:	ldr	x9, [sp, #56]
   29090:	ldr	x10, [x9, #56]
   29094:	subs	x8, x10, x8
   29098:	str	x8, [x9, #56]
   2909c:	ldr	w11, [sp, #36]
   290a0:	cmp	w11, #0x1
   290a4:	b.eq	290b4 <lzma_mode_is_supported@@XZ_5.0+0xeb4c>  // b.none
   290a8:	ldr	w8, [sp, #36]
   290ac:	stur	w8, [x29, #-4]
   290b0:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   290b4:	ldr	x8, [sp, #56]
   290b8:	ldr	x8, [x8, #56]
   290bc:	cbz	x8, 290cc <lzma_mode_is_supported@@XZ_5.0+0xeb64>
   290c0:	mov	w8, #0x9                   	// #9
   290c4:	stur	w8, [x29, #-4]
   290c8:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   290cc:	ldr	x8, [sp, #56]
   290d0:	str	wzr, [x8]
   290d4:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   290d8:	ldur	x0, [x29, #-24]
   290dc:	ldur	x1, [x29, #-32]
   290e0:	ldur	x2, [x29, #-40]
   290e4:	ldur	x3, [x29, #-48]
   290e8:	ldr	x8, [sp, #56]
   290ec:	add	x4, x8, #0x38
   290f0:	bl	29198 <lzma_mode_is_supported@@XZ_5.0+0xec30>
   290f4:	ldr	x8, [sp, #56]
   290f8:	ldr	x8, [x8, #56]
   290fc:	cbz	x8, 29108 <lzma_mode_is_supported@@XZ_5.0+0xeba0>
   29100:	stur	wzr, [x29, #-4]
   29104:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   29108:	ldr	x8, [sp, #56]
   2910c:	str	wzr, [x8]
   29110:	b	29120 <lzma_mode_is_supported@@XZ_5.0+0xebb8>
   29114:	mov	w8, #0xb                   	// #11
   29118:	stur	w8, [x29, #-4]
   2911c:	b	29128 <lzma_mode_is_supported@@XZ_5.0+0xebc0>
   29120:	b	28c9c <lzma_mode_is_supported@@XZ_5.0+0xe734>
   29124:	stur	wzr, [x29, #-4]
   29128:	ldur	w0, [x29, #-4]
   2912c:	ldp	x29, x30, [sp, #112]
   29130:	add	sp, sp, #0x80
   29134:	ret
   29138:	sub	sp, sp, #0x30
   2913c:	stp	x29, x30, [sp, #32]
   29140:	add	x29, sp, #0x20
   29144:	stur	x0, [x29, #-8]
   29148:	str	x1, [sp, #16]
   2914c:	ldur	x8, [x29, #-8]
   29150:	str	x8, [sp, #8]
   29154:	ldr	x8, [sp, #8]
   29158:	ldr	x0, [x8, #8]
   2915c:	ldr	x1, [sp, #16]
   29160:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   29164:	ldr	x0, [sp, #8]
   29168:	ldr	x1, [sp, #16]
   2916c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   29170:	ldp	x29, x30, [sp, #32]
   29174:	add	sp, sp, #0x30
   29178:	ret
   2917c:	sub	sp, sp, #0x10
   29180:	mov	w8, #0x1                   	// #1
   29184:	str	x0, [sp, #8]
   29188:	ldr	x9, [sp, #8]
   2918c:	strb	w8, [x9, #40]
   29190:	add	sp, sp, #0x10
   29194:	ret
   29198:	sub	sp, sp, #0x40
   2919c:	stp	x29, x30, [sp, #48]
   291a0:	add	x29, sp, #0x30
   291a4:	stur	x0, [x29, #-8]
   291a8:	stur	x1, [x29, #-16]
   291ac:	str	x2, [sp, #24]
   291b0:	str	x3, [sp, #16]
   291b4:	str	x4, [sp, #8]
   291b8:	ldr	x8, [sp, #16]
   291bc:	ldr	x9, [sp, #24]
   291c0:	ldr	x9, [x9]
   291c4:	subs	x8, x8, x9
   291c8:	ldr	x9, [sp, #8]
   291cc:	ldr	x9, [x9]
   291d0:	cmp	x8, x9
   291d4:	b.ls	291f0 <lzma_mode_is_supported@@XZ_5.0+0xec88>  // b.plast
   291d8:	ldr	x8, [sp, #24]
   291dc:	ldr	x8, [x8]
   291e0:	ldr	x9, [sp, #8]
   291e4:	ldr	x9, [x9]
   291e8:	add	x8, x8, x9
   291ec:	str	x8, [sp, #16]
   291f0:	ldur	x0, [x29, #-16]
   291f4:	ldr	x1, [sp, #24]
   291f8:	ldr	x2, [sp, #16]
   291fc:	ldur	x8, [x29, #-8]
   29200:	ldr	x3, [x8]
   29204:	ldur	x8, [x29, #-8]
   29208:	add	x4, x8, #0x8
   2920c:	ldur	x8, [x29, #-8]
   29210:	ldr	x5, [x8, #24]
   29214:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   29218:	ldr	x8, [sp, #8]
   2921c:	ldr	x9, [x8]
   29220:	subs	x9, x9, x0
   29224:	str	x9, [x8]
   29228:	ldur	x8, [x29, #-8]
   2922c:	ldr	x8, [x8, #8]
   29230:	ldur	x9, [x29, #-8]
   29234:	ldr	x9, [x9, #16]
   29238:	cmp	x8, x9
   2923c:	b.ls	29250 <lzma_mode_is_supported@@XZ_5.0+0xece8>  // b.plast
   29240:	ldur	x8, [x29, #-8]
   29244:	ldr	x8, [x8, #8]
   29248:	ldur	x9, [x29, #-8]
   2924c:	str	x8, [x9, #16]
   29250:	ldp	x29, x30, [sp, #48]
   29254:	add	sp, sp, #0x40
   29258:	ret
   2925c:	sub	sp, sp, #0xa0
   29260:	stp	x29, x30, [sp, #144]
   29264:	add	x29, sp, #0x90
   29268:	stur	x0, [x29, #-16]
   2926c:	stur	x1, [x29, #-24]
   29270:	stur	x2, [x29, #-32]
   29274:	ldur	x8, [x29, #-16]
   29278:	ldr	x8, [x8]
   2927c:	stur	x8, [x29, #-40]
   29280:	ldur	x8, [x29, #-40]
   29284:	cbnz	x8, 29310 <lzma_mode_is_supported@@XZ_5.0+0xeda8>
   29288:	ldur	x1, [x29, #-24]
   2928c:	mov	x0, #0x158                 	// #344
   29290:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   29294:	stur	x0, [x29, #-40]
   29298:	ldur	x8, [x29, #-40]
   2929c:	cbnz	x8, 292ac <lzma_mode_is_supported@@XZ_5.0+0xed44>
   292a0:	mov	w8, #0x5                   	// #5
   292a4:	stur	w8, [x29, #-4]
   292a8:	b	29390 <lzma_mode_is_supported@@XZ_5.0+0xee28>
   292ac:	ldur	x8, [x29, #-40]
   292b0:	ldur	x9, [x29, #-16]
   292b4:	str	x8, [x9]
   292b8:	ldur	x8, [x29, #-16]
   292bc:	adrp	x9, 29000 <lzma_mode_is_supported@@XZ_5.0+0xea98>
   292c0:	add	x9, x9, #0x3a0
   292c4:	str	x9, [x8, #32]
   292c8:	ldur	x0, [x29, #-40]
   292cc:	add	x8, sp, #0x20
   292d0:	str	x0, [sp, #16]
   292d4:	mov	x0, x8
   292d8:	mov	w10, wzr
   292dc:	mov	w1, w10
   292e0:	mov	x9, #0x48                  	// #72
   292e4:	mov	x2, x9
   292e8:	str	x8, [sp, #8]
   292ec:	str	x9, [sp]
   292f0:	bl	3230 <memset@plt>
   292f4:	mov	x8, #0xffffffffffffffff    	// #-1
   292f8:	str	x8, [sp, #40]
   292fc:	str	xzr, [sp, #48]
   29300:	ldr	x0, [sp, #16]
   29304:	ldr	x1, [sp, #8]
   29308:	ldr	x2, [sp]
   2930c:	bl	3090 <memcpy@plt>
   29310:	ldur	x8, [x29, #-32]
   29314:	ldr	x0, [x8, #16]
   29318:	bl	293e0 <lzma_mode_is_supported@@XZ_5.0+0xee78>
   2931c:	mov	x8, #0xffffffffffffffff    	// #-1
   29320:	cmp	x0, x8
   29324:	b.ne	29334 <lzma_mode_is_supported@@XZ_5.0+0xedcc>  // b.any
   29328:	mov	w8, #0x8                   	// #8
   2932c:	stur	w8, [x29, #-4]
   29330:	b	29390 <lzma_mode_is_supported@@XZ_5.0+0xee28>
   29334:	ldur	x8, [x29, #-32]
   29338:	ldr	x8, [x8, #16]
   2933c:	str	x8, [sp, #24]
   29340:	ldr	x8, [sp, #24]
   29344:	ldr	w9, [x8, #4]
   29348:	mov	w8, w9
   2934c:	ldur	x10, [x29, #-40]
   29350:	str	x8, [x10, #72]
   29354:	ldur	x8, [x29, #-40]
   29358:	mov	w9, #0x0                   	// #0
   2935c:	strb	w9, [x8, #80]
   29360:	ldur	x8, [x29, #-40]
   29364:	add	x0, x8, #0x51
   29368:	mov	w9, wzr
   2936c:	mov	w1, w9
   29370:	mov	x2, #0x100                 	// #256
   29374:	bl	3230 <memset@plt>
   29378:	ldur	x0, [x29, #-40]
   2937c:	ldur	x1, [x29, #-24]
   29380:	ldur	x8, [x29, #-32]
   29384:	add	x2, x8, #0x18
   29388:	bl	395c <lzma_version_string@@XZ_5.0+0x24c>
   2938c:	stur	w0, [x29, #-4]
   29390:	ldur	w0, [x29, #-4]
   29394:	ldp	x29, x30, [sp, #144]
   29398:	add	sp, sp, #0xa0
   2939c:	ret
   293a0:	sub	sp, sp, #0x30
   293a4:	stp	x29, x30, [sp, #32]
   293a8:	add	x29, sp, #0x20
   293ac:	stur	x0, [x29, #-8]
   293b0:	str	x1, [sp, #16]
   293b4:	ldur	x8, [x29, #-8]
   293b8:	str	x8, [sp, #8]
   293bc:	ldr	x0, [sp, #8]
   293c0:	ldr	x1, [sp, #16]
   293c4:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
   293c8:	ldr	x0, [sp, #8]
   293cc:	ldr	x1, [sp, #16]
   293d0:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   293d4:	ldp	x29, x30, [sp, #32]
   293d8:	add	sp, sp, #0x30
   293dc:	ret
   293e0:	sub	sp, sp, #0x20
   293e4:	str	x0, [sp, #16]
   293e8:	ldr	x8, [sp, #16]
   293ec:	str	x8, [sp, #8]
   293f0:	ldr	x8, [sp, #8]
   293f4:	cbz	x8, 29424 <lzma_mode_is_supported@@XZ_5.0+0xeebc>
   293f8:	ldr	x8, [sp, #8]
   293fc:	ldr	w9, [x8]
   29400:	cbnz	w9, 29424 <lzma_mode_is_supported@@XZ_5.0+0xeebc>
   29404:	ldr	x8, [sp, #8]
   29408:	ldr	w9, [x8, #4]
   2940c:	cmp	w9, #0x1
   29410:	b.cc	29424 <lzma_mode_is_supported@@XZ_5.0+0xeebc>  // b.lo, b.ul, b.last
   29414:	ldr	x8, [sp, #8]
   29418:	ldr	w9, [x8, #4]
   2941c:	cmp	w9, #0x100
   29420:	b.ls	29430 <lzma_mode_is_supported@@XZ_5.0+0xeec8>  // b.plast
   29424:	mov	x8, #0xffffffffffffffff    	// #-1
   29428:	str	x8, [sp, #24]
   2942c:	b	29438 <lzma_mode_is_supported@@XZ_5.0+0xeed0>
   29430:	mov	x8, #0x158                 	// #344
   29434:	str	x8, [sp, #24]
   29438:	ldr	x0, [sp, #24]
   2943c:	add	sp, sp, #0x20
   29440:	ret
   29444:	sub	sp, sp, #0x30
   29448:	stp	x29, x30, [sp, #32]
   2944c:	add	x29, sp, #0x20
   29450:	adrp	x8, 29000 <lzma_mode_is_supported@@XZ_5.0+0xea98>
   29454:	add	x8, x8, #0x498
   29458:	adrp	x9, 29000 <lzma_mode_is_supported@@XZ_5.0+0xea98>
   2945c:	add	x9, x9, #0x64c
   29460:	stur	x0, [x29, #-8]
   29464:	str	x1, [sp, #16]
   29468:	str	x2, [sp, #8]
   2946c:	ldur	x10, [x29, #-8]
   29470:	str	x8, [x10, #24]
   29474:	ldur	x8, [x29, #-8]
   29478:	str	x9, [x8, #64]
   2947c:	ldur	x0, [x29, #-8]
   29480:	ldr	x1, [sp, #16]
   29484:	ldr	x2, [sp, #8]
   29488:	bl	2925c <lzma_mode_is_supported@@XZ_5.0+0xecf4>
   2948c:	ldp	x29, x30, [sp, #32]
   29490:	add	sp, sp, #0x30
   29494:	ret
   29498:	sub	sp, sp, #0xa0
   2949c:	stp	x29, x30, [sp, #144]
   294a0:	add	x29, sp, #0x90
   294a4:	ldr	w8, [x29, #16]
   294a8:	stur	x0, [x29, #-8]
   294ac:	stur	x1, [x29, #-16]
   294b0:	stur	x2, [x29, #-24]
   294b4:	stur	x3, [x29, #-32]
   294b8:	stur	x4, [x29, #-40]
   294bc:	stur	x5, [x29, #-48]
   294c0:	stur	x6, [x29, #-56]
   294c4:	stur	x7, [x29, #-64]
   294c8:	stur	w8, [x29, #-68]
   294cc:	ldur	x9, [x29, #-8]
   294d0:	str	x9, [sp, #64]
   294d4:	ldr	x9, [sp, #64]
   294d8:	ldr	x9, [x9, #24]
   294dc:	cbnz	x9, 295cc <lzma_mode_is_supported@@XZ_5.0+0xf064>
   294e0:	ldur	x8, [x29, #-40]
   294e4:	ldur	x9, [x29, #-32]
   294e8:	ldr	x9, [x9]
   294ec:	subs	x8, x8, x9
   294f0:	str	x8, [sp, #48]
   294f4:	ldur	x8, [x29, #-64]
   294f8:	ldur	x9, [x29, #-56]
   294fc:	ldr	x9, [x9]
   29500:	subs	x8, x8, x9
   29504:	str	x8, [sp, #40]
   29508:	ldr	x8, [sp, #48]
   2950c:	ldr	x9, [sp, #40]
   29510:	cmp	x8, x9
   29514:	b.cs	29524 <lzma_mode_is_supported@@XZ_5.0+0xefbc>  // b.hs, b.nlast
   29518:	ldr	x8, [sp, #48]
   2951c:	str	x8, [sp, #16]
   29520:	b	2952c <lzma_mode_is_supported@@XZ_5.0+0xefc4>
   29524:	ldr	x8, [sp, #40]
   29528:	str	x8, [sp, #16]
   2952c:	ldr	x8, [sp, #16]
   29530:	str	x8, [sp, #32]
   29534:	ldr	x0, [sp, #64]
   29538:	ldur	x8, [x29, #-24]
   2953c:	ldur	x9, [x29, #-32]
   29540:	ldr	x9, [x9]
   29544:	add	x1, x8, x9
   29548:	ldur	x8, [x29, #-48]
   2954c:	ldur	x9, [x29, #-56]
   29550:	ldr	x9, [x9]
   29554:	add	x2, x8, x9
   29558:	ldr	x3, [sp, #32]
   2955c:	bl	296fc <lzma_mode_is_supported@@XZ_5.0+0xf194>
   29560:	ldr	x8, [sp, #32]
   29564:	ldur	x9, [x29, #-32]
   29568:	ldr	x10, [x9]
   2956c:	add	x8, x10, x8
   29570:	str	x8, [x9]
   29574:	ldr	x8, [sp, #32]
   29578:	ldur	x9, [x29, #-56]
   2957c:	ldr	x10, [x9]
   29580:	add	x8, x10, x8
   29584:	str	x8, [x9]
   29588:	ldur	w11, [x29, #-68]
   2958c:	mov	w12, #0x0                   	// #0
   29590:	str	w12, [sp, #12]
   29594:	cbz	w11, 295b0 <lzma_mode_is_supported@@XZ_5.0+0xf048>
   29598:	ldur	x8, [x29, #-32]
   2959c:	ldr	x8, [x8]
   295a0:	ldur	x9, [x29, #-40]
   295a4:	cmp	x8, x9
   295a8:	cset	w10, eq  // eq = none
   295ac:	str	w10, [sp, #12]
   295b0:	ldr	w8, [sp, #12]
   295b4:	mov	w9, #0x1                   	// #1
   295b8:	mov	w10, wzr
   295bc:	tst	w8, #0x1
   295c0:	csel	w8, w9, w10, ne  // ne = any
   295c4:	str	w8, [sp, #60]
   295c8:	b	2963c <lzma_mode_is_supported@@XZ_5.0+0xf0d4>
   295cc:	ldur	x8, [x29, #-56]
   295d0:	ldr	x8, [x8]
   295d4:	str	x8, [sp, #24]
   295d8:	ldr	x8, [sp, #64]
   295dc:	ldr	x8, [x8, #24]
   295e0:	ldr	x9, [sp, #64]
   295e4:	ldr	x0, [x9]
   295e8:	ldur	x1, [x29, #-16]
   295ec:	ldur	x2, [x29, #-24]
   295f0:	ldur	x3, [x29, #-32]
   295f4:	ldur	x4, [x29, #-40]
   295f8:	ldur	x5, [x29, #-48]
   295fc:	ldur	x6, [x29, #-56]
   29600:	ldur	x7, [x29, #-64]
   29604:	ldur	w10, [x29, #-68]
   29608:	mov	x9, sp
   2960c:	str	w10, [x9]
   29610:	blr	x8
   29614:	str	w0, [sp, #60]
   29618:	ldr	x0, [sp, #64]
   2961c:	ldur	x8, [x29, #-48]
   29620:	ldr	x9, [sp, #24]
   29624:	add	x1, x8, x9
   29628:	ldur	x8, [x29, #-56]
   2962c:	ldr	x8, [x8]
   29630:	ldr	x9, [sp, #24]
   29634:	subs	x2, x8, x9
   29638:	bl	297d8 <lzma_mode_is_supported@@XZ_5.0+0xf270>
   2963c:	ldr	w0, [sp, #60]
   29640:	ldp	x29, x30, [sp, #144]
   29644:	add	sp, sp, #0xa0
   29648:	ret
   2964c:	sub	sp, sp, #0x40
   29650:	stp	x29, x30, [sp, #48]
   29654:	add	x29, sp, #0x30
   29658:	stur	x0, [x29, #-8]
   2965c:	stur	x1, [x29, #-16]
   29660:	str	x2, [sp, #24]
   29664:	str	x3, [sp, #16]
   29668:	ldur	x8, [x29, #-8]
   2966c:	str	x8, [sp, #8]
   29670:	ldr	x0, [sp, #8]
   29674:	ldur	x1, [x29, #-16]
   29678:	ldr	x8, [sp, #16]
   2967c:	add	x2, x8, #0x10
   29680:	bl	3aac <lzma_version_string@@XZ_5.0+0x39c>
   29684:	ldp	x29, x30, [sp, #48]
   29688:	add	sp, sp, #0x40
   2968c:	ret
   29690:	sub	sp, sp, #0x40
   29694:	stp	x29, x30, [sp, #48]
   29698:	add	x29, sp, #0x30
   2969c:	mov	x8, #0xffffffffffffffff    	// #-1
   296a0:	stur	x0, [x29, #-16]
   296a4:	str	x1, [sp, #24]
   296a8:	ldur	x0, [x29, #-16]
   296ac:	str	x8, [sp, #8]
   296b0:	bl	293e0 <lzma_mode_is_supported@@XZ_5.0+0xee78>
   296b4:	ldr	x8, [sp, #8]
   296b8:	cmp	x0, x8
   296bc:	b.ne	296cc <lzma_mode_is_supported@@XZ_5.0+0xf164>  // b.any
   296c0:	mov	w8, #0xb                   	// #11
   296c4:	stur	w8, [x29, #-4]
   296c8:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xf184>
   296cc:	ldur	x8, [x29, #-16]
   296d0:	str	x8, [sp, #16]
   296d4:	ldr	x8, [sp, #16]
   296d8:	ldr	w9, [x8, #4]
   296dc:	subs	w9, w9, #0x1
   296e0:	ldr	x8, [sp, #24]
   296e4:	strb	w9, [x8]
   296e8:	stur	wzr, [x29, #-4]
   296ec:	ldur	w0, [x29, #-4]
   296f0:	ldp	x29, x30, [sp, #48]
   296f4:	add	sp, sp, #0x40
   296f8:	ret
   296fc:	sub	sp, sp, #0x40
   29700:	str	x0, [sp, #56]
   29704:	str	x1, [sp, #48]
   29708:	str	x2, [sp, #40]
   2970c:	str	x3, [sp, #32]
   29710:	ldr	x8, [sp, #56]
   29714:	ldr	x8, [x8, #72]
   29718:	str	x8, [sp, #24]
   2971c:	str	xzr, [sp, #16]
   29720:	ldr	x8, [sp, #16]
   29724:	ldr	x9, [sp, #32]
   29728:	cmp	x8, x9
   2972c:	b.cs	297d0 <lzma_mode_is_supported@@XZ_5.0+0xf268>  // b.hs, b.nlast
   29730:	ldr	x8, [sp, #56]
   29734:	add	x8, x8, #0x51
   29738:	ldr	x9, [sp, #24]
   2973c:	ldr	x10, [sp, #56]
   29740:	ldrb	w11, [x10, #80]
   29744:	mov	w10, w11
   29748:	add	x9, x9, x10
   2974c:	and	x9, x9, #0xff
   29750:	add	x8, x8, x9
   29754:	ldrb	w11, [x8]
   29758:	strb	w11, [sp, #15]
   2975c:	ldr	x8, [sp, #48]
   29760:	ldr	x9, [sp, #16]
   29764:	add	x8, x8, x9
   29768:	ldrb	w11, [x8]
   2976c:	ldr	x8, [sp, #56]
   29770:	add	x8, x8, #0x51
   29774:	ldr	x9, [sp, #56]
   29778:	ldrb	w12, [x9, #80]
   2977c:	mov	w13, w12
   29780:	subs	w13, w13, #0x1
   29784:	strb	w13, [x9, #80]
   29788:	and	w12, w12, #0xff
   2978c:	mov	w0, w12
   29790:	sxtw	x9, w0
   29794:	add	x8, x8, x9
   29798:	strb	w11, [x8]
   2979c:	ldr	x8, [sp, #48]
   297a0:	ldr	x9, [sp, #16]
   297a4:	ldrb	w11, [x8, x9]
   297a8:	ldrb	w12, [sp, #15]
   297ac:	subs	w11, w11, w12
   297b0:	ldr	x8, [sp, #40]
   297b4:	ldr	x9, [sp, #16]
   297b8:	add	x8, x8, x9
   297bc:	strb	w11, [x8]
   297c0:	ldr	x8, [sp, #16]
   297c4:	add	x8, x8, #0x1
   297c8:	str	x8, [sp, #16]
   297cc:	b	29720 <lzma_mode_is_supported@@XZ_5.0+0xf1b8>
   297d0:	add	sp, sp, #0x40
   297d4:	ret
   297d8:	sub	sp, sp, #0x30
   297dc:	str	x0, [sp, #40]
   297e0:	str	x1, [sp, #32]
   297e4:	str	x2, [sp, #24]
   297e8:	ldr	x8, [sp, #40]
   297ec:	ldr	x8, [x8, #72]
   297f0:	str	x8, [sp, #16]
   297f4:	str	xzr, [sp, #8]
   297f8:	ldr	x8, [sp, #8]
   297fc:	ldr	x9, [sp, #24]
   29800:	cmp	x8, x9
   29804:	b.cs	298a0 <lzma_mode_is_supported@@XZ_5.0+0xf338>  // b.hs, b.nlast
   29808:	ldr	x8, [sp, #40]
   2980c:	add	x8, x8, #0x51
   29810:	ldr	x9, [sp, #16]
   29814:	ldr	x10, [sp, #40]
   29818:	ldrb	w11, [x10, #80]
   2981c:	mov	w10, w11
   29820:	add	x9, x9, x10
   29824:	and	x9, x9, #0xff
   29828:	add	x8, x8, x9
   2982c:	ldrb	w11, [x8]
   29830:	strb	w11, [sp, #7]
   29834:	ldr	x8, [sp, #32]
   29838:	ldr	x9, [sp, #8]
   2983c:	add	x8, x8, x9
   29840:	ldrb	w11, [x8]
   29844:	ldr	x8, [sp, #40]
   29848:	add	x8, x8, #0x51
   2984c:	ldr	x9, [sp, #40]
   29850:	ldrb	w12, [x9, #80]
   29854:	mov	w13, w12
   29858:	subs	w13, w13, #0x1
   2985c:	strb	w13, [x9, #80]
   29860:	and	w12, w12, #0xff
   29864:	mov	w0, w12
   29868:	sxtw	x9, w0
   2986c:	add	x8, x8, x9
   29870:	strb	w11, [x8]
   29874:	ldrb	w11, [sp, #7]
   29878:	ldr	x8, [sp, #32]
   2987c:	ldr	x9, [sp, #8]
   29880:	add	x8, x8, x9
   29884:	ldrb	w12, [x8]
   29888:	subs	w11, w12, w11
   2988c:	strb	w11, [x8]
   29890:	ldr	x8, [sp, #8]
   29894:	add	x8, x8, #0x1
   29898:	str	x8, [sp, #8]
   2989c:	b	297f8 <lzma_mode_is_supported@@XZ_5.0+0xf290>
   298a0:	add	sp, sp, #0x30
   298a4:	ret
   298a8:	sub	sp, sp, #0x30
   298ac:	stp	x29, x30, [sp, #32]
   298b0:	add	x29, sp, #0x20
   298b4:	adrp	x8, 29000 <lzma_mode_is_supported@@XZ_5.0+0xea98>
   298b8:	add	x8, x8, #0x8ec
   298bc:	stur	x0, [x29, #-8]
   298c0:	str	x1, [sp, #16]
   298c4:	str	x2, [sp, #8]
   298c8:	ldur	x9, [x29, #-8]
   298cc:	str	x8, [x9, #24]
   298d0:	ldur	x0, [x29, #-8]
   298d4:	ldr	x1, [sp, #16]
   298d8:	ldr	x2, [sp, #8]
   298dc:	bl	2925c <lzma_mode_is_supported@@XZ_5.0+0xecf4>
   298e0:	ldp	x29, x30, [sp, #32]
   298e4:	add	sp, sp, #0x30
   298e8:	ret
   298ec:	sub	sp, sp, #0x80
   298f0:	stp	x29, x30, [sp, #112]
   298f4:	add	x29, sp, #0x70
   298f8:	ldr	w8, [x29, #16]
   298fc:	stur	x0, [x29, #-8]
   29900:	stur	x1, [x29, #-16]
   29904:	stur	x2, [x29, #-24]
   29908:	stur	x3, [x29, #-32]
   2990c:	stur	x4, [x29, #-40]
   29910:	stur	x5, [x29, #-48]
   29914:	str	x6, [sp, #56]
   29918:	str	x7, [sp, #48]
   2991c:	str	w8, [sp, #44]
   29920:	ldur	x9, [x29, #-8]
   29924:	str	x9, [sp, #32]
   29928:	ldr	x9, [sp, #56]
   2992c:	ldr	x9, [x9]
   29930:	str	x9, [sp, #24]
   29934:	ldr	x9, [sp, #32]
   29938:	ldr	x9, [x9, #24]
   2993c:	ldr	x10, [sp, #32]
   29940:	ldr	x0, [x10]
   29944:	ldur	x1, [x29, #-16]
   29948:	ldur	x2, [x29, #-24]
   2994c:	ldur	x3, [x29, #-32]
   29950:	ldur	x4, [x29, #-40]
   29954:	ldur	x5, [x29, #-48]
   29958:	ldr	x6, [sp, #56]
   2995c:	ldr	x7, [sp, #48]
   29960:	ldr	w8, [sp, #44]
   29964:	mov	x10, sp
   29968:	str	w8, [x10]
   2996c:	blr	x9
   29970:	str	w0, [sp, #20]
   29974:	ldr	x0, [sp, #32]
   29978:	ldur	x9, [x29, #-48]
   2997c:	ldr	x10, [sp, #24]
   29980:	add	x1, x9, x10
   29984:	ldr	x9, [sp, #56]
   29988:	ldr	x9, [x9]
   2998c:	ldr	x10, [sp, #24]
   29990:	subs	x2, x9, x10
   29994:	bl	29a3c <lzma_mode_is_supported@@XZ_5.0+0xf4d4>
   29998:	ldr	w0, [sp, #20]
   2999c:	ldp	x29, x30, [sp, #112]
   299a0:	add	sp, sp, #0x80
   299a4:	ret
   299a8:	sub	sp, sp, #0x40
   299ac:	stp	x29, x30, [sp, #48]
   299b0:	add	x29, sp, #0x30
   299b4:	stur	x0, [x29, #-16]
   299b8:	str	x1, [sp, #24]
   299bc:	str	x2, [sp, #16]
   299c0:	str	x3, [sp, #8]
   299c4:	ldr	x8, [sp, #8]
   299c8:	cmp	x8, #0x1
   299cc:	b.eq	299dc <lzma_mode_is_supported@@XZ_5.0+0xf474>  // b.none
   299d0:	mov	w8, #0x8                   	// #8
   299d4:	stur	w8, [x29, #-4]
   299d8:	b	29a2c <lzma_mode_is_supported@@XZ_5.0+0xf4c4>
   299dc:	ldr	x1, [sp, #24]
   299e0:	mov	x0, #0x28                  	// #40
   299e4:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   299e8:	str	x0, [sp]
   299ec:	ldr	x8, [sp]
   299f0:	cbnz	x8, 29a00 <lzma_mode_is_supported@@XZ_5.0+0xf498>
   299f4:	mov	w8, #0x5                   	// #5
   299f8:	stur	w8, [x29, #-4]
   299fc:	b	29a2c <lzma_mode_is_supported@@XZ_5.0+0xf4c4>
   29a00:	ldr	x8, [sp]
   29a04:	str	wzr, [x8]
   29a08:	ldr	x8, [sp, #16]
   29a0c:	ldrb	w9, [x8]
   29a10:	add	w9, w9, #0x1
   29a14:	ldr	x8, [sp]
   29a18:	str	w9, [x8, #4]
   29a1c:	ldr	x8, [sp]
   29a20:	ldur	x10, [x29, #-16]
   29a24:	str	x8, [x10]
   29a28:	stur	wzr, [x29, #-4]
   29a2c:	ldur	w0, [x29, #-4]
   29a30:	ldp	x29, x30, [sp, #48]
   29a34:	add	sp, sp, #0x40
   29a38:	ret
   29a3c:	sub	sp, sp, #0x30
   29a40:	str	x0, [sp, #40]
   29a44:	str	x1, [sp, #32]
   29a48:	str	x2, [sp, #24]
   29a4c:	ldr	x8, [sp, #40]
   29a50:	ldr	x8, [x8, #72]
   29a54:	str	x8, [sp, #16]
   29a58:	str	xzr, [sp, #8]
   29a5c:	ldr	x8, [sp, #8]
   29a60:	ldr	x9, [sp, #24]
   29a64:	cmp	x8, x9
   29a68:	b.cs	29af8 <lzma_mode_is_supported@@XZ_5.0+0xf590>  // b.hs, b.nlast
   29a6c:	ldr	x8, [sp, #40]
   29a70:	add	x8, x8, #0x51
   29a74:	ldr	x9, [sp, #16]
   29a78:	ldr	x10, [sp, #40]
   29a7c:	ldrb	w11, [x10, #80]
   29a80:	mov	w10, w11
   29a84:	add	x9, x9, x10
   29a88:	and	x9, x9, #0xff
   29a8c:	ldrb	w11, [x8, x9]
   29a90:	ldr	x8, [sp, #32]
   29a94:	ldr	x9, [sp, #8]
   29a98:	add	x8, x8, x9
   29a9c:	ldrb	w12, [x8]
   29aa0:	add	w11, w12, w11
   29aa4:	strb	w11, [x8]
   29aa8:	ldr	x8, [sp, #32]
   29aac:	ldr	x9, [sp, #8]
   29ab0:	add	x8, x8, x9
   29ab4:	ldrb	w11, [x8]
   29ab8:	ldr	x8, [sp, #40]
   29abc:	add	x8, x8, #0x51
   29ac0:	ldr	x9, [sp, #40]
   29ac4:	ldrb	w12, [x9, #80]
   29ac8:	mov	w13, w12
   29acc:	subs	w13, w13, #0x1
   29ad0:	strb	w13, [x9, #80]
   29ad4:	and	w12, w12, #0xff
   29ad8:	mov	w0, w12
   29adc:	sxtw	x9, w0
   29ae0:	add	x8, x8, x9
   29ae4:	strb	w11, [x8]
   29ae8:	ldr	x8, [sp, #8]
   29aec:	add	x8, x8, #0x1
   29af0:	str	x8, [sp, #8]
   29af4:	b	29a5c <lzma_mode_is_supported@@XZ_5.0+0xf4f4>
   29af8:	add	sp, sp, #0x30
   29afc:	ret
   29b00:	sub	sp, sp, #0xc0
   29b04:	stp	x29, x30, [sp, #176]
   29b08:	add	x29, sp, #0xb0
   29b0c:	mov	w8, #0x1                   	// #1
   29b10:	stur	x0, [x29, #-16]
   29b14:	stur	x1, [x29, #-24]
   29b18:	stur	x2, [x29, #-32]
   29b1c:	stur	x3, [x29, #-40]
   29b20:	stur	x4, [x29, #-48]
   29b24:	stur	x5, [x29, #-56]
   29b28:	stur	w6, [x29, #-60]
   29b2c:	and	w8, w7, w8
   29b30:	sturb	w8, [x29, #-61]
   29b34:	ldur	x9, [x29, #-16]
   29b38:	ldr	x9, [x9]
   29b3c:	stur	x9, [x29, #-72]
   29b40:	ldur	x9, [x29, #-72]
   29b44:	cbnz	x9, 29c68 <lzma_mode_is_supported@@XZ_5.0+0xf700>
   29b48:	ldur	x8, [x29, #-56]
   29b4c:	mov	x9, #0x2                   	// #2
   29b50:	mul	x8, x9, x8
   29b54:	add	x0, x8, #0x88
   29b58:	ldur	x1, [x29, #-24]
   29b5c:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   29b60:	stur	x0, [x29, #-72]
   29b64:	ldur	x8, [x29, #-72]
   29b68:	cbnz	x8, 29b78 <lzma_mode_is_supported@@XZ_5.0+0xf610>
   29b6c:	mov	w8, #0x5                   	// #5
   29b70:	stur	w8, [x29, #-4]
   29b74:	b	29d0c <lzma_mode_is_supported@@XZ_5.0+0xf7a4>
   29b78:	ldur	x8, [x29, #-72]
   29b7c:	ldur	x9, [x29, #-16]
   29b80:	str	x8, [x9]
   29b84:	ldur	x8, [x29, #-16]
   29b88:	adrp	x9, 29000 <lzma_mode_is_supported@@XZ_5.0+0xea98>
   29b8c:	add	x9, x9, #0xd1c
   29b90:	str	x9, [x8, #24]
   29b94:	ldur	x8, [x29, #-16]
   29b98:	adrp	x9, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xfa98>
   29b9c:	add	x9, x9, #0xf8
   29ba0:	str	x9, [x8, #32]
   29ba4:	ldur	x8, [x29, #-16]
   29ba8:	adrp	x9, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xfa98>
   29bac:	add	x9, x9, #0x148
   29bb0:	str	x9, [x8, #64]
   29bb4:	ldur	x0, [x29, #-72]
   29bb8:	add	x8, sp, #0x20
   29bbc:	str	x0, [sp, #16]
   29bc0:	mov	x0, x8
   29bc4:	mov	w10, wzr
   29bc8:	mov	w1, w10
   29bcc:	mov	x9, #0x48                  	// #72
   29bd0:	mov	x2, x9
   29bd4:	str	x8, [sp, #8]
   29bd8:	str	x9, [sp]
   29bdc:	bl	3230 <memset@plt>
   29be0:	mov	x8, #0xffffffffffffffff    	// #-1
   29be4:	str	x8, [sp, #40]
   29be8:	str	xzr, [sp, #48]
   29bec:	ldr	x0, [sp, #16]
   29bf0:	ldr	x1, [sp, #8]
   29bf4:	ldr	x2, [sp]
   29bf8:	bl	3090 <memcpy@plt>
   29bfc:	ldur	x8, [x29, #-40]
   29c00:	ldur	x9, [x29, #-72]
   29c04:	str	x8, [x9, #80]
   29c08:	ldur	x8, [x29, #-56]
   29c0c:	mov	x9, #0x2                   	// #2
   29c10:	mul	x8, x9, x8
   29c14:	ldur	x9, [x29, #-72]
   29c18:	str	x8, [x9, #104]
   29c1c:	ldur	x8, [x29, #-48]
   29c20:	cmp	x8, #0x0
   29c24:	cset	w10, ls  // ls = plast
   29c28:	tbnz	w10, #0, 29c5c <lzma_mode_is_supported@@XZ_5.0+0xf6f4>
   29c2c:	ldur	x0, [x29, #-48]
   29c30:	ldur	x1, [x29, #-24]
   29c34:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   29c38:	ldur	x8, [x29, #-72]
   29c3c:	str	x0, [x8, #88]
   29c40:	ldur	x8, [x29, #-72]
   29c44:	ldr	x8, [x8, #88]
   29c48:	cbnz	x8, 29c58 <lzma_mode_is_supported@@XZ_5.0+0xf6f0>
   29c4c:	mov	w8, #0x5                   	// #5
   29c50:	stur	w8, [x29, #-4]
   29c54:	b	29d0c <lzma_mode_is_supported@@XZ_5.0+0xf7a4>
   29c58:	b	29c68 <lzma_mode_is_supported@@XZ_5.0+0xf700>
   29c5c:	ldur	x8, [x29, #-72]
   29c60:	mov	x9, xzr
   29c64:	str	x9, [x8, #88]
   29c68:	ldur	x8, [x29, #-32]
   29c6c:	ldr	x8, [x8, #16]
   29c70:	cbz	x8, 29cb8 <lzma_mode_is_supported@@XZ_5.0+0xf750>
   29c74:	ldur	x8, [x29, #-32]
   29c78:	ldr	x8, [x8, #16]
   29c7c:	str	x8, [sp, #24]
   29c80:	ldr	x8, [sp, #24]
   29c84:	ldr	w9, [x8]
   29c88:	ldur	x8, [x29, #-72]
   29c8c:	str	w9, [x8, #96]
   29c90:	ldur	x8, [x29, #-72]
   29c94:	ldr	w9, [x8, #96]
   29c98:	ldur	w10, [x29, #-60]
   29c9c:	subs	w10, w10, #0x1
   29ca0:	and	w9, w9, w10
   29ca4:	cbz	w9, 29cb4 <lzma_mode_is_supported@@XZ_5.0+0xf74c>
   29ca8:	mov	w8, #0x8                   	// #8
   29cac:	stur	w8, [x29, #-4]
   29cb0:	b	29d0c <lzma_mode_is_supported@@XZ_5.0+0xf7a4>
   29cb4:	b	29cc0 <lzma_mode_is_supported@@XZ_5.0+0xf758>
   29cb8:	ldur	x8, [x29, #-72]
   29cbc:	str	wzr, [x8, #96]
   29cc0:	ldurb	w8, [x29, #-61]
   29cc4:	ldur	x9, [x29, #-72]
   29cc8:	and	w8, w8, #0x1
   29ccc:	strb	w8, [x9, #73]
   29cd0:	ldur	x9, [x29, #-72]
   29cd4:	mov	w8, #0x0                   	// #0
   29cd8:	strb	w8, [x9, #72]
   29cdc:	ldur	x9, [x29, #-72]
   29ce0:	str	xzr, [x9, #112]
   29ce4:	ldur	x9, [x29, #-72]
   29ce8:	str	xzr, [x9, #120]
   29cec:	ldur	x9, [x29, #-72]
   29cf0:	str	xzr, [x9, #128]
   29cf4:	ldur	x0, [x29, #-72]
   29cf8:	ldur	x1, [x29, #-24]
   29cfc:	ldur	x9, [x29, #-32]
   29d00:	add	x2, x9, #0x18
   29d04:	bl	395c <lzma_version_string@@XZ_5.0+0x24c>
   29d08:	stur	w0, [x29, #-4]
   29d0c:	ldur	w0, [x29, #-4]
   29d10:	ldp	x29, x30, [sp, #176]
   29d14:	add	sp, sp, #0xc0
   29d18:	ret
   29d1c:	sub	sp, sp, #0xb0
   29d20:	stp	x29, x30, [sp, #160]
   29d24:	add	x29, sp, #0xa0
   29d28:	sub	x8, x29, #0x10
   29d2c:	ldr	w9, [x29, #16]
   29d30:	str	x0, [x8]
   29d34:	stur	x1, [x29, #-24]
   29d38:	stur	x2, [x29, #-32]
   29d3c:	stur	x3, [x29, #-40]
   29d40:	stur	x4, [x29, #-48]
   29d44:	stur	x5, [x29, #-56]
   29d48:	stur	x6, [x29, #-64]
   29d4c:	stur	x7, [x29, #-72]
   29d50:	stur	w9, [x29, #-76]
   29d54:	ldr	x8, [x8]
   29d58:	str	x8, [sp, #72]
   29d5c:	ldur	w9, [x29, #-76]
   29d60:	cmp	w9, #0x1
   29d64:	b.ne	29d74 <lzma_mode_is_supported@@XZ_5.0+0xf80c>  // b.any
   29d68:	mov	w8, #0x8                   	// #8
   29d6c:	stur	w8, [x29, #-4]
   29d70:	b	2a0e8 <lzma_mode_is_supported@@XZ_5.0+0xfb80>
   29d74:	ldr	x8, [sp, #72]
   29d78:	ldr	x8, [x8, #112]
   29d7c:	ldr	x9, [sp, #72]
   29d80:	ldr	x9, [x9, #120]
   29d84:	cmp	x8, x9
   29d88:	b.cs	29df0 <lzma_mode_is_supported@@XZ_5.0+0xf888>  // b.hs, b.nlast
   29d8c:	ldr	x8, [sp, #72]
   29d90:	add	x0, x8, #0x88
   29d94:	ldr	x8, [sp, #72]
   29d98:	add	x1, x8, #0x70
   29d9c:	ldr	x8, [sp, #72]
   29da0:	ldr	x2, [x8, #120]
   29da4:	ldur	x3, [x29, #-56]
   29da8:	ldur	x4, [x29, #-64]
   29dac:	ldur	x5, [x29, #-72]
   29db0:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   29db4:	ldr	x8, [sp, #72]
   29db8:	ldr	x8, [x8, #112]
   29dbc:	ldr	x9, [sp, #72]
   29dc0:	ldr	x9, [x9, #120]
   29dc4:	cmp	x8, x9
   29dc8:	b.cs	29dd4 <lzma_mode_is_supported@@XZ_5.0+0xf86c>  // b.hs, b.nlast
   29dcc:	stur	wzr, [x29, #-4]
   29dd0:	b	2a0e8 <lzma_mode_is_supported@@XZ_5.0+0xfb80>
   29dd4:	ldr	x8, [sp, #72]
   29dd8:	ldrb	w9, [x8, #72]
   29ddc:	tbnz	w9, #0, 29de4 <lzma_mode_is_supported@@XZ_5.0+0xf87c>
   29de0:	b	29df0 <lzma_mode_is_supported@@XZ_5.0+0xf888>
   29de4:	mov	w8, #0x1                   	// #1
   29de8:	stur	w8, [x29, #-4]
   29dec:	b	2a0e8 <lzma_mode_is_supported@@XZ_5.0+0xfb80>
   29df0:	ldr	x8, [sp, #72]
   29df4:	str	xzr, [x8, #120]
   29df8:	ldur	x8, [x29, #-72]
   29dfc:	ldur	x9, [x29, #-64]
   29e00:	ldr	x9, [x9]
   29e04:	subs	x8, x8, x9
   29e08:	str	x8, [sp, #64]
   29e0c:	ldr	x8, [sp, #72]
   29e10:	ldr	x8, [x8, #128]
   29e14:	ldr	x9, [sp, #72]
   29e18:	ldr	x9, [x9, #112]
   29e1c:	subs	x8, x8, x9
   29e20:	str	x8, [sp, #56]
   29e24:	ldr	x8, [sp, #64]
   29e28:	ldr	x9, [sp, #56]
   29e2c:	cmp	x8, x9
   29e30:	b.hi	29e3c <lzma_mode_is_supported@@XZ_5.0+0xf8d4>  // b.pmore
   29e34:	ldr	x8, [sp, #56]
   29e38:	cbnz	x8, 29f88 <lzma_mode_is_supported@@XZ_5.0+0xfa20>
   29e3c:	ldur	x8, [x29, #-64]
   29e40:	ldr	x8, [x8]
   29e44:	str	x8, [sp, #48]
   29e48:	ldur	x8, [x29, #-56]
   29e4c:	ldur	x9, [x29, #-64]
   29e50:	ldr	x9, [x9]
   29e54:	add	x0, x8, x9
   29e58:	ldr	x8, [sp, #72]
   29e5c:	add	x8, x8, #0x88
   29e60:	ldr	x9, [sp, #72]
   29e64:	ldr	x9, [x9, #112]
   29e68:	add	x1, x8, x9
   29e6c:	ldr	x2, [sp, #56]
   29e70:	bl	3090 <memcpy@plt>
   29e74:	ldr	x8, [sp, #56]
   29e78:	ldur	x9, [x29, #-64]
   29e7c:	ldr	x10, [x9]
   29e80:	add	x8, x10, x8
   29e84:	str	x8, [x9]
   29e88:	ldr	x0, [sp, #72]
   29e8c:	ldur	x1, [x29, #-24]
   29e90:	ldur	x2, [x29, #-32]
   29e94:	ldur	x3, [x29, #-40]
   29e98:	ldur	x4, [x29, #-48]
   29e9c:	ldur	x5, [x29, #-56]
   29ea0:	ldur	x6, [x29, #-64]
   29ea4:	ldur	x7, [x29, #-72]
   29ea8:	ldur	w11, [x29, #-76]
   29eac:	mov	x8, sp
   29eb0:	str	w11, [x8]
   29eb4:	bl	2a18c <lzma_mode_is_supported@@XZ_5.0+0xfc24>
   29eb8:	str	w0, [sp, #44]
   29ebc:	ldr	w11, [sp, #44]
   29ec0:	cbz	w11, 29ed0 <lzma_mode_is_supported@@XZ_5.0+0xf968>
   29ec4:	ldr	w8, [sp, #44]
   29ec8:	stur	w8, [x29, #-4]
   29ecc:	b	2a0e8 <lzma_mode_is_supported@@XZ_5.0+0xfb80>
   29ed0:	ldur	x8, [x29, #-64]
   29ed4:	ldr	x8, [x8]
   29ed8:	ldr	x9, [sp, #48]
   29edc:	subs	x8, x8, x9
   29ee0:	str	x8, [sp, #32]
   29ee4:	ldr	x0, [sp, #72]
   29ee8:	ldur	x8, [x29, #-56]
   29eec:	ldr	x9, [sp, #48]
   29ef0:	add	x1, x8, x9
   29ef4:	ldr	x2, [sp, #32]
   29ef8:	bl	2a2ac <lzma_mode_is_supported@@XZ_5.0+0xfd44>
   29efc:	str	x0, [sp, #24]
   29f00:	ldr	x8, [sp, #32]
   29f04:	ldr	x9, [sp, #24]
   29f08:	subs	x8, x8, x9
   29f0c:	str	x8, [sp, #16]
   29f10:	ldr	x8, [sp, #72]
   29f14:	str	xzr, [x8, #112]
   29f18:	ldr	x8, [sp, #16]
   29f1c:	ldr	x9, [sp, #72]
   29f20:	str	x8, [x9, #128]
   29f24:	ldr	x8, [sp, #72]
   29f28:	ldrb	w10, [x8, #72]
   29f2c:	tbnz	w10, #0, 29f34 <lzma_mode_is_supported@@XZ_5.0+0xf9cc>
   29f30:	b	29f40 <lzma_mode_is_supported@@XZ_5.0+0xf9d8>
   29f34:	ldr	x8, [sp, #72]
   29f38:	str	xzr, [x8, #128]
   29f3c:	b	29f84 <lzma_mode_is_supported@@XZ_5.0+0xfa1c>
   29f40:	ldr	x8, [sp, #16]
   29f44:	cmp	x8, #0x0
   29f48:	cset	w9, ls  // ls = plast
   29f4c:	tbnz	w9, #0, 29f84 <lzma_mode_is_supported@@XZ_5.0+0xfa1c>
   29f50:	ldr	x8, [sp, #16]
   29f54:	ldur	x9, [x29, #-64]
   29f58:	ldr	x10, [x9]
   29f5c:	subs	x8, x10, x8
   29f60:	str	x8, [x9]
   29f64:	ldr	x8, [sp, #72]
   29f68:	add	x0, x8, #0x88
   29f6c:	ldur	x8, [x29, #-56]
   29f70:	ldur	x9, [x29, #-64]
   29f74:	ldr	x9, [x9]
   29f78:	add	x1, x8, x9
   29f7c:	ldr	x2, [sp, #16]
   29f80:	bl	3090 <memcpy@plt>
   29f84:	b	29fe0 <lzma_mode_is_supported@@XZ_5.0+0xfa78>
   29f88:	ldr	x8, [sp, #72]
   29f8c:	ldr	x8, [x8, #112]
   29f90:	cmp	x8, #0x0
   29f94:	cset	w9, ls  // ls = plast
   29f98:	tbnz	w9, #0, 29fe0 <lzma_mode_is_supported@@XZ_5.0+0xfa78>
   29f9c:	ldr	x8, [sp, #72]
   29fa0:	add	x0, x8, #0x88
   29fa4:	ldr	x8, [sp, #72]
   29fa8:	add	x8, x8, #0x88
   29fac:	ldr	x9, [sp, #72]
   29fb0:	ldr	x9, [x9, #112]
   29fb4:	add	x1, x8, x9
   29fb8:	ldr	x2, [sp, #56]
   29fbc:	bl	30b0 <memmove@plt>
   29fc0:	ldr	x8, [sp, #72]
   29fc4:	ldr	x8, [x8, #112]
   29fc8:	ldr	x9, [sp, #72]
   29fcc:	ldr	x10, [x9, #128]
   29fd0:	subs	x8, x10, x8
   29fd4:	str	x8, [x9, #128]
   29fd8:	ldr	x8, [sp, #72]
   29fdc:	str	xzr, [x8, #112]
   29fe0:	ldr	x8, [sp, #72]
   29fe4:	ldr	x8, [x8, #128]
   29fe8:	cmp	x8, #0x0
   29fec:	cset	w9, ls  // ls = plast
   29ff0:	tbnz	w9, #0, 2a0b0 <lzma_mode_is_supported@@XZ_5.0+0xfb48>
   29ff4:	ldr	x0, [sp, #72]
   29ff8:	ldur	x1, [x29, #-24]
   29ffc:	ldur	x2, [x29, #-32]
   2a000:	ldur	x3, [x29, #-40]
   2a004:	ldur	x4, [x29, #-48]
   2a008:	ldr	x8, [sp, #72]
   2a00c:	add	x5, x8, #0x88
   2a010:	ldr	x8, [sp, #72]
   2a014:	add	x6, x8, #0x80
   2a018:	ldr	x8, [sp, #72]
   2a01c:	ldr	x7, [x8, #104]
   2a020:	ldur	w9, [x29, #-76]
   2a024:	mov	x8, sp
   2a028:	str	w9, [x8]
   2a02c:	bl	2a18c <lzma_mode_is_supported@@XZ_5.0+0xfc24>
   2a030:	str	w0, [sp, #12]
   2a034:	ldr	w9, [sp, #12]
   2a038:	cbz	w9, 2a048 <lzma_mode_is_supported@@XZ_5.0+0xfae0>
   2a03c:	ldr	w8, [sp, #12]
   2a040:	stur	w8, [x29, #-4]
   2a044:	b	2a0e8 <lzma_mode_is_supported@@XZ_5.0+0xfb80>
   2a048:	ldr	x0, [sp, #72]
   2a04c:	ldr	x8, [sp, #72]
   2a050:	add	x1, x8, #0x88
   2a054:	ldr	x8, [sp, #72]
   2a058:	ldr	x2, [x8, #128]
   2a05c:	bl	2a2ac <lzma_mode_is_supported@@XZ_5.0+0xfd44>
   2a060:	ldr	x8, [sp, #72]
   2a064:	str	x0, [x8, #120]
   2a068:	ldr	x8, [sp, #72]
   2a06c:	ldrb	w9, [x8, #72]
   2a070:	tbnz	w9, #0, 2a078 <lzma_mode_is_supported@@XZ_5.0+0xfb10>
   2a074:	b	2a088 <lzma_mode_is_supported@@XZ_5.0+0xfb20>
   2a078:	ldr	x8, [sp, #72]
   2a07c:	ldr	x8, [x8, #128]
   2a080:	ldr	x9, [sp, #72]
   2a084:	str	x8, [x9, #120]
   2a088:	ldr	x8, [sp, #72]
   2a08c:	add	x0, x8, #0x88
   2a090:	ldr	x8, [sp, #72]
   2a094:	add	x1, x8, #0x70
   2a098:	ldr	x8, [sp, #72]
   2a09c:	ldr	x2, [x8, #120]
   2a0a0:	ldur	x3, [x29, #-56]
   2a0a4:	ldur	x4, [x29, #-64]
   2a0a8:	ldur	x5, [x29, #-72]
   2a0ac:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   2a0b0:	ldr	x8, [sp, #72]
   2a0b4:	ldrb	w9, [x8, #72]
   2a0b8:	tbnz	w9, #0, 2a0c0 <lzma_mode_is_supported@@XZ_5.0+0xfb58>
   2a0bc:	b	2a0e4 <lzma_mode_is_supported@@XZ_5.0+0xfb7c>
   2a0c0:	ldr	x8, [sp, #72]
   2a0c4:	ldr	x8, [x8, #112]
   2a0c8:	ldr	x9, [sp, #72]
   2a0cc:	ldr	x9, [x9, #128]
   2a0d0:	cmp	x8, x9
   2a0d4:	b.ne	2a0e4 <lzma_mode_is_supported@@XZ_5.0+0xfb7c>  // b.any
   2a0d8:	mov	w8, #0x1                   	// #1
   2a0dc:	stur	w8, [x29, #-4]
   2a0e0:	b	2a0e8 <lzma_mode_is_supported@@XZ_5.0+0xfb80>
   2a0e4:	stur	wzr, [x29, #-4]
   2a0e8:	ldur	w0, [x29, #-4]
   2a0ec:	ldp	x29, x30, [sp, #160]
   2a0f0:	add	sp, sp, #0xb0
   2a0f4:	ret
   2a0f8:	sub	sp, sp, #0x30
   2a0fc:	stp	x29, x30, [sp, #32]
   2a100:	add	x29, sp, #0x20
   2a104:	stur	x0, [x29, #-8]
   2a108:	str	x1, [sp, #16]
   2a10c:	ldur	x8, [x29, #-8]
   2a110:	str	x8, [sp, #8]
   2a114:	ldr	x0, [sp, #8]
   2a118:	ldr	x1, [sp, #16]
   2a11c:	bl	3a00 <lzma_version_string@@XZ_5.0+0x2f0>
   2a120:	ldr	x8, [sp, #8]
   2a124:	ldr	x0, [x8, #88]
   2a128:	ldr	x1, [sp, #16]
   2a12c:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   2a130:	ldr	x0, [sp, #8]
   2a134:	ldr	x1, [sp, #16]
   2a138:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   2a13c:	ldp	x29, x30, [sp, #32]
   2a140:	add	sp, sp, #0x30
   2a144:	ret
   2a148:	sub	sp, sp, #0x40
   2a14c:	stp	x29, x30, [sp, #48]
   2a150:	add	x29, sp, #0x30
   2a154:	stur	x0, [x29, #-8]
   2a158:	stur	x1, [x29, #-16]
   2a15c:	str	x2, [sp, #24]
   2a160:	str	x3, [sp, #16]
   2a164:	ldur	x8, [x29, #-8]
   2a168:	str	x8, [sp, #8]
   2a16c:	ldr	x0, [sp, #8]
   2a170:	ldur	x1, [x29, #-16]
   2a174:	ldr	x8, [sp, #16]
   2a178:	add	x2, x8, #0x10
   2a17c:	bl	3aac <lzma_version_string@@XZ_5.0+0x39c>
   2a180:	ldp	x29, x30, [sp, #48]
   2a184:	add	sp, sp, #0x40
   2a188:	ret
   2a18c:	sub	sp, sp, #0x70
   2a190:	stp	x29, x30, [sp, #96]
   2a194:	add	x29, sp, #0x60
   2a198:	ldr	w8, [x29, #16]
   2a19c:	stur	x0, [x29, #-16]
   2a1a0:	stur	x1, [x29, #-24]
   2a1a4:	stur	x2, [x29, #-32]
   2a1a8:	stur	x3, [x29, #-40]
   2a1ac:	str	x4, [sp, #48]
   2a1b0:	str	x5, [sp, #40]
   2a1b4:	str	x6, [sp, #32]
   2a1b8:	str	x7, [sp, #24]
   2a1bc:	str	w8, [sp, #20]
   2a1c0:	ldur	x9, [x29, #-16]
   2a1c4:	ldr	x9, [x9, #24]
   2a1c8:	cbnz	x9, 2a228 <lzma_mode_is_supported@@XZ_5.0+0xfcc0>
   2a1cc:	ldur	x0, [x29, #-32]
   2a1d0:	ldur	x1, [x29, #-40]
   2a1d4:	ldr	x2, [sp, #48]
   2a1d8:	ldr	x3, [sp, #40]
   2a1dc:	ldr	x4, [sp, #32]
   2a1e0:	ldr	x5, [sp, #24]
   2a1e4:	bl	3884 <lzma_version_string@@XZ_5.0+0x174>
   2a1e8:	ldur	x8, [x29, #-16]
   2a1ec:	ldrb	w9, [x8, #73]
   2a1f0:	tbnz	w9, #0, 2a1f8 <lzma_mode_is_supported@@XZ_5.0+0xfc90>
   2a1f4:	b	2a224 <lzma_mode_is_supported@@XZ_5.0+0xfcbc>
   2a1f8:	ldr	w8, [sp, #20]
   2a1fc:	cmp	w8, #0x3
   2a200:	b.ne	2a224 <lzma_mode_is_supported@@XZ_5.0+0xfcbc>  // b.any
   2a204:	ldur	x8, [x29, #-40]
   2a208:	ldr	x8, [x8]
   2a20c:	ldr	x9, [sp, #48]
   2a210:	cmp	x8, x9
   2a214:	b.ne	2a224 <lzma_mode_is_supported@@XZ_5.0+0xfcbc>  // b.any
   2a218:	ldur	x8, [x29, #-16]
   2a21c:	mov	w9, #0x1                   	// #1
   2a220:	strb	w9, [x8, #72]
   2a224:	b	2a298 <lzma_mode_is_supported@@XZ_5.0+0xfd30>
   2a228:	ldur	x8, [x29, #-16]
   2a22c:	ldr	x8, [x8, #24]
   2a230:	ldur	x9, [x29, #-16]
   2a234:	ldr	x0, [x9]
   2a238:	ldur	x1, [x29, #-24]
   2a23c:	ldur	x2, [x29, #-32]
   2a240:	ldur	x3, [x29, #-40]
   2a244:	ldr	x4, [sp, #48]
   2a248:	ldr	x5, [sp, #40]
   2a24c:	ldr	x6, [sp, #32]
   2a250:	ldr	x7, [sp, #24]
   2a254:	ldr	w10, [sp, #20]
   2a258:	mov	x9, sp
   2a25c:	str	w10, [x9]
   2a260:	blr	x8
   2a264:	str	w0, [sp, #16]
   2a268:	ldr	w10, [sp, #16]
   2a26c:	cmp	w10, #0x1
   2a270:	b.ne	2a284 <lzma_mode_is_supported@@XZ_5.0+0xfd1c>  // b.any
   2a274:	ldur	x8, [x29, #-16]
   2a278:	mov	w9, #0x1                   	// #1
   2a27c:	strb	w9, [x8, #72]
   2a280:	b	2a298 <lzma_mode_is_supported@@XZ_5.0+0xfd30>
   2a284:	ldr	w8, [sp, #16]
   2a288:	cbz	w8, 2a298 <lzma_mode_is_supported@@XZ_5.0+0xfd30>
   2a28c:	ldr	w8, [sp, #16]
   2a290:	stur	w8, [x29, #-4]
   2a294:	b	2a29c <lzma_mode_is_supported@@XZ_5.0+0xfd34>
   2a298:	stur	wzr, [x29, #-4]
   2a29c:	ldur	w0, [x29, #-4]
   2a2a0:	ldp	x29, x30, [sp, #96]
   2a2a4:	add	sp, sp, #0x70
   2a2a8:	ret
   2a2ac:	sub	sp, sp, #0x30
   2a2b0:	stp	x29, x30, [sp, #32]
   2a2b4:	add	x29, sp, #0x20
   2a2b8:	stur	x0, [x29, #-8]
   2a2bc:	str	x1, [sp, #16]
   2a2c0:	str	x2, [sp, #8]
   2a2c4:	ldur	x8, [x29, #-8]
   2a2c8:	ldr	x8, [x8, #80]
   2a2cc:	ldur	x9, [x29, #-8]
   2a2d0:	ldr	x0, [x9, #88]
   2a2d4:	ldur	x9, [x29, #-8]
   2a2d8:	ldr	w1, [x9, #96]
   2a2dc:	ldur	x9, [x29, #-8]
   2a2e0:	ldrb	w10, [x9, #73]
   2a2e4:	ldr	x3, [sp, #16]
   2a2e8:	ldr	x4, [sp, #8]
   2a2ec:	and	w2, w10, #0x1
   2a2f0:	blr	x8
   2a2f4:	str	x0, [sp]
   2a2f8:	ldr	x8, [sp]
   2a2fc:	ldur	x9, [x29, #-8]
   2a300:	ldr	w10, [x9, #96]
   2a304:	mov	w11, w10
   2a308:	add	x8, x11, x8
   2a30c:	str	w8, [x9, #96]
   2a310:	ldr	x0, [sp]
   2a314:	ldp	x29, x30, [sp, #32]
   2a318:	add	sp, sp, #0x30
   2a31c:	ret
   2a320:	sub	sp, sp, #0x20
   2a324:	str	x0, [sp, #24]
   2a328:	str	x1, [sp, #16]
   2a32c:	ldr	x8, [sp, #16]
   2a330:	str	x8, [sp, #8]
   2a334:	ldr	x8, [sp, #8]
   2a338:	mov	w9, #0x1                   	// #1
   2a33c:	str	w9, [sp, #4]
   2a340:	cbz	x8, 2a358 <lzma_mode_is_supported@@XZ_5.0+0xfdf0>
   2a344:	ldr	x8, [sp, #8]
   2a348:	ldr	w9, [x8]
   2a34c:	cmp	w9, #0x0
   2a350:	cset	w9, eq  // eq = none
   2a354:	str	w9, [sp, #4]
   2a358:	ldr	w8, [sp, #4]
   2a35c:	mov	w9, #0x4                   	// #4
   2a360:	mov	w10, wzr
   2a364:	tst	w8, #0x1
   2a368:	csel	w8, w10, w9, ne  // ne = any
   2a36c:	ldr	x11, [sp, #24]
   2a370:	str	w8, [x11]
   2a374:	mov	w0, w10
   2a378:	add	sp, sp, #0x20
   2a37c:	ret
   2a380:	sub	sp, sp, #0x30
   2a384:	stp	x29, x30, [sp, #32]
   2a388:	add	x29, sp, #0x20
   2a38c:	str	x0, [sp, #16]
   2a390:	str	x1, [sp, #8]
   2a394:	ldr	x8, [sp, #16]
   2a398:	str	x8, [sp]
   2a39c:	ldr	x8, [sp]
   2a3a0:	cbz	x8, 2a3b0 <lzma_mode_is_supported@@XZ_5.0+0xfe48>
   2a3a4:	ldr	x8, [sp]
   2a3a8:	ldr	w9, [x8]
   2a3ac:	cbnz	w9, 2a3b8 <lzma_mode_is_supported@@XZ_5.0+0xfe50>
   2a3b0:	stur	wzr, [x29, #-4]
   2a3b4:	b	2a3cc <lzma_mode_is_supported@@XZ_5.0+0xfe64>
   2a3b8:	ldr	x0, [sp, #8]
   2a3bc:	ldr	x8, [sp]
   2a3c0:	ldr	w1, [x8]
   2a3c4:	bl	2a3dc <lzma_mode_is_supported@@XZ_5.0+0xfe74>
   2a3c8:	stur	wzr, [x29, #-4]
   2a3cc:	ldur	w0, [x29, #-4]
   2a3d0:	ldp	x29, x30, [sp, #32]
   2a3d4:	add	sp, sp, #0x30
   2a3d8:	ret
   2a3dc:	sub	sp, sp, #0x10
   2a3e0:	str	x0, [sp, #8]
   2a3e4:	str	w1, [sp, #4]
   2a3e8:	ldr	w8, [sp, #4]
   2a3ec:	ldr	x9, [sp, #8]
   2a3f0:	strb	w8, [x9]
   2a3f4:	ldr	w8, [sp, #4]
   2a3f8:	lsr	w8, w8, #8
   2a3fc:	ldr	x9, [sp, #8]
   2a400:	strb	w8, [x9, #1]
   2a404:	ldr	w8, [sp, #4]
   2a408:	lsr	w8, w8, #16
   2a40c:	ldr	x9, [sp, #8]
   2a410:	strb	w8, [x9, #2]
   2a414:	ldr	w8, [sp, #4]
   2a418:	lsr	w8, w8, #24
   2a41c:	ldr	x9, [sp, #8]
   2a420:	strb	w8, [x9, #3]
   2a424:	add	sp, sp, #0x10
   2a428:	ret
   2a42c:	sub	sp, sp, #0x40
   2a430:	stp	x29, x30, [sp, #48]
   2a434:	add	x29, sp, #0x30
   2a438:	stur	x0, [x29, #-16]
   2a43c:	str	x1, [sp, #24]
   2a440:	str	x2, [sp, #16]
   2a444:	str	x3, [sp, #8]
   2a448:	ldr	x8, [sp, #8]
   2a44c:	cbnz	x8, 2a458 <lzma_mode_is_supported@@XZ_5.0+0xfef0>
   2a450:	stur	wzr, [x29, #-4]
   2a454:	b	2a4d0 <lzma_mode_is_supported@@XZ_5.0+0xff68>
   2a458:	ldr	x8, [sp, #8]
   2a45c:	cmp	x8, #0x4
   2a460:	b.eq	2a470 <lzma_mode_is_supported@@XZ_5.0+0xff08>  // b.none
   2a464:	mov	w8, #0x8                   	// #8
   2a468:	stur	w8, [x29, #-4]
   2a46c:	b	2a4d0 <lzma_mode_is_supported@@XZ_5.0+0xff68>
   2a470:	ldr	x1, [sp, #24]
   2a474:	mov	x0, #0x4                   	// #4
   2a478:	bl	371c <lzma_version_string@@XZ_5.0+0xc>
   2a47c:	str	x0, [sp]
   2a480:	ldr	x8, [sp]
   2a484:	cbnz	x8, 2a494 <lzma_mode_is_supported@@XZ_5.0+0xff2c>
   2a488:	mov	w8, #0x5                   	// #5
   2a48c:	stur	w8, [x29, #-4]
   2a490:	b	2a4d0 <lzma_mode_is_supported@@XZ_5.0+0xff68>
   2a494:	ldr	x0, [sp, #16]
   2a498:	bl	2a4e0 <lzma_mode_is_supported@@XZ_5.0+0xff78>
   2a49c:	ldr	x8, [sp]
   2a4a0:	str	w0, [x8]
   2a4a4:	ldr	x8, [sp]
   2a4a8:	ldr	w9, [x8]
   2a4ac:	cbnz	w9, 2a4c0 <lzma_mode_is_supported@@XZ_5.0+0xff58>
   2a4b0:	ldr	x0, [sp]
   2a4b4:	ldr	x1, [sp, #24]
   2a4b8:	bl	382c <lzma_version_string@@XZ_5.0+0x11c>
   2a4bc:	b	2a4cc <lzma_mode_is_supported@@XZ_5.0+0xff64>
   2a4c0:	ldr	x8, [sp]
   2a4c4:	ldur	x9, [x29, #-16]
   2a4c8:	str	x8, [x9]
   2a4cc:	stur	wzr, [x29, #-4]
   2a4d0:	ldur	w0, [x29, #-4]
   2a4d4:	ldp	x29, x30, [sp, #48]
   2a4d8:	add	sp, sp, #0x40
   2a4dc:	ret
   2a4e0:	sub	sp, sp, #0x10
   2a4e4:	str	x0, [sp, #8]
   2a4e8:	ldr	x8, [sp, #8]
   2a4ec:	ldrb	w9, [x8]
   2a4f0:	str	w9, [sp, #4]
   2a4f4:	ldr	x8, [sp, #8]
   2a4f8:	ldrb	w9, [x8, #1]
   2a4fc:	ldr	w10, [sp, #4]
   2a500:	orr	w9, w10, w9, lsl #8
   2a504:	str	w9, [sp, #4]
   2a508:	ldr	x8, [sp, #8]
   2a50c:	ldrb	w9, [x8, #2]
   2a510:	ldr	w10, [sp, #4]
   2a514:	orr	w9, w10, w9, lsl #16
   2a518:	str	w9, [sp, #4]
   2a51c:	ldr	x8, [sp, #8]
   2a520:	ldrb	w9, [x8, #3]
   2a524:	ldr	w10, [sp, #4]
   2a528:	orr	w9, w10, w9, lsl #24
   2a52c:	str	w9, [sp, #4]
   2a530:	ldr	w0, [sp, #4]
   2a534:	add	sp, sp, #0x10
   2a538:	ret
   2a53c:	sub	sp, sp, #0x30
   2a540:	stp	x29, x30, [sp, #32]
   2a544:	add	x29, sp, #0x20
   2a548:	stur	x0, [x29, #-8]
   2a54c:	str	x1, [sp, #16]
   2a550:	str	x2, [sp, #8]
   2a554:	ldur	x0, [x29, #-8]
   2a558:	ldr	x1, [sp, #16]
   2a55c:	ldr	x2, [sp, #8]
   2a560:	mov	w8, #0x1                   	// #1
   2a564:	and	w3, w8, #0x1
   2a568:	bl	2a578 <lzma_mode_is_supported@@XZ_5.0+0x10010>
   2a56c:	ldp	x29, x30, [sp, #32]
   2a570:	add	sp, sp, #0x30
   2a574:	ret
   2a578:	sub	sp, sp, #0x40
   2a57c:	stp	x29, x30, [sp, #48]
   2a580:	add	x29, sp, #0x30
   2a584:	adrp	x8, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xfa98>
   2a588:	add	x8, x8, #0x650
   2a58c:	mov	x4, #0x8                   	// #8
   2a590:	mov	x5, #0x5                   	// #5
   2a594:	mov	w9, #0x1                   	// #1
   2a598:	stur	x0, [x29, #-8]
   2a59c:	stur	x1, [x29, #-16]
   2a5a0:	str	x2, [sp, #24]
   2a5a4:	and	w10, w3, w9
   2a5a8:	strb	w10, [sp, #23]
   2a5ac:	ldur	x0, [x29, #-8]
   2a5b0:	ldur	x1, [x29, #-16]
   2a5b4:	ldr	x2, [sp, #24]
   2a5b8:	ldrb	w10, [sp, #23]
   2a5bc:	mov	x3, x8
   2a5c0:	mov	w6, w9
   2a5c4:	and	w7, w10, #0x1
   2a5c8:	bl	29b00 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2a5cc:	str	w0, [sp, #16]
   2a5d0:	ldr	w9, [sp, #16]
   2a5d4:	cbnz	w9, 2a604 <lzma_mode_is_supported@@XZ_5.0+0x1009c>
   2a5d8:	ldur	x8, [x29, #-8]
   2a5dc:	ldr	x8, [x8]
   2a5e0:	str	x8, [sp, #8]
   2a5e4:	ldr	x8, [sp, #8]
   2a5e8:	ldr	x8, [x8, #88]
   2a5ec:	str	x8, [sp]
   2a5f0:	ldr	x8, [sp]
   2a5f4:	str	wzr, [x8]
   2a5f8:	ldr	x8, [sp]
   2a5fc:	mov	w9, #0xfffffffb            	// #-5
   2a600:	str	w9, [x8, #4]
   2a604:	ldr	w0, [sp, #16]
   2a608:	ldp	x29, x30, [sp, #48]
   2a60c:	add	sp, sp, #0x40
   2a610:	ret
   2a614:	sub	sp, sp, #0x30
   2a618:	stp	x29, x30, [sp, #32]
   2a61c:	add	x29, sp, #0x20
   2a620:	stur	x0, [x29, #-8]
   2a624:	str	x1, [sp, #16]
   2a628:	str	x2, [sp, #8]
   2a62c:	ldur	x0, [x29, #-8]
   2a630:	ldr	x1, [sp, #16]
   2a634:	ldr	x2, [sp, #8]
   2a638:	mov	w8, wzr
   2a63c:	and	w3, w8, #0x1
   2a640:	bl	2a578 <lzma_mode_is_supported@@XZ_5.0+0x10010>
   2a644:	ldp	x29, x30, [sp, #32]
   2a648:	add	sp, sp, #0x30
   2a64c:	ret
   2a650:	sub	sp, sp, #0x60
   2a654:	mov	w8, #0x1                   	// #1
   2a658:	str	x0, [sp, #80]
   2a65c:	str	w1, [sp, #76]
   2a660:	and	w8, w2, w8
   2a664:	strb	w8, [sp, #75]
   2a668:	str	x3, [sp, #64]
   2a66c:	str	x4, [sp, #56]
   2a670:	ldr	x9, [sp, #80]
   2a674:	str	x9, [sp, #48]
   2a678:	ldr	x9, [sp, #48]
   2a67c:	ldr	w8, [x9]
   2a680:	str	w8, [sp, #44]
   2a684:	ldr	x9, [sp, #48]
   2a688:	ldr	w8, [x9, #4]
   2a68c:	str	w8, [sp, #40]
   2a690:	ldr	x9, [sp, #56]
   2a694:	cmp	x9, #0x5
   2a698:	b.cs	2a6a4 <lzma_mode_is_supported@@XZ_5.0+0x1013c>  // b.hs, b.nlast
   2a69c:	str	xzr, [sp, #88]
   2a6a0:	b	2aa08 <lzma_mode_is_supported@@XZ_5.0+0x104a0>
   2a6a4:	ldr	w8, [sp, #76]
   2a6a8:	ldr	w9, [sp, #40]
   2a6ac:	subs	w8, w8, w9
   2a6b0:	cmp	w8, #0x5
   2a6b4:	b.ls	2a6c4 <lzma_mode_is_supported@@XZ_5.0+0x1015c>  // b.plast
   2a6b8:	ldr	w8, [sp, #76]
   2a6bc:	subs	w8, w8, #0x5
   2a6c0:	str	w8, [sp, #40]
   2a6c4:	ldr	x8, [sp, #56]
   2a6c8:	subs	x8, x8, #0x5
   2a6cc:	str	x8, [sp, #32]
   2a6d0:	str	xzr, [sp, #24]
   2a6d4:	ldr	x8, [sp, #24]
   2a6d8:	ldr	x9, [sp, #32]
   2a6dc:	cmp	x8, x9
   2a6e0:	b.hi	2a9e8 <lzma_mode_is_supported@@XZ_5.0+0x10480>  // b.pmore
   2a6e4:	ldr	x8, [sp, #64]
   2a6e8:	ldr	x9, [sp, #24]
   2a6ec:	add	x8, x8, x9
   2a6f0:	ldrb	w10, [x8]
   2a6f4:	strb	w10, [sp, #23]
   2a6f8:	ldrb	w10, [sp, #23]
   2a6fc:	cmp	w10, #0xe8
   2a700:	b.eq	2a720 <lzma_mode_is_supported@@XZ_5.0+0x101b8>  // b.none
   2a704:	ldrb	w8, [sp, #23]
   2a708:	cmp	w8, #0xe9
   2a70c:	b.eq	2a720 <lzma_mode_is_supported@@XZ_5.0+0x101b8>  // b.none
   2a710:	ldr	x8, [sp, #24]
   2a714:	add	x8, x8, #0x1
   2a718:	str	x8, [sp, #24]
   2a71c:	b	2a6d4 <lzma_mode_is_supported@@XZ_5.0+0x1016c>
   2a720:	ldr	w8, [sp, #76]
   2a724:	ldr	x9, [sp, #24]
   2a728:	add	w8, w8, w9
   2a72c:	ldr	w9, [sp, #40]
   2a730:	subs	w8, w8, w9
   2a734:	str	w8, [sp, #16]
   2a738:	ldr	w8, [sp, #76]
   2a73c:	ldr	x10, [sp, #24]
   2a740:	add	w8, w8, w10
   2a744:	str	w8, [sp, #40]
   2a748:	ldr	w8, [sp, #16]
   2a74c:	cmp	w8, #0x5
   2a750:	b.ls	2a75c <lzma_mode_is_supported@@XZ_5.0+0x101f4>  // b.plast
   2a754:	str	wzr, [sp, #44]
   2a758:	b	2a79c <lzma_mode_is_supported@@XZ_5.0+0x10234>
   2a75c:	str	wzr, [sp, #12]
   2a760:	ldr	w8, [sp, #12]
   2a764:	ldr	w9, [sp, #16]
   2a768:	cmp	w8, w9
   2a76c:	b.cs	2a79c <lzma_mode_is_supported@@XZ_5.0+0x10234>  // b.hs, b.nlast
   2a770:	ldr	w8, [sp, #44]
   2a774:	mov	w9, #0x77                  	// #119
   2a778:	and	w8, w8, w9
   2a77c:	str	w8, [sp, #44]
   2a780:	ldr	w8, [sp, #44]
   2a784:	lsl	w8, w8, #1
   2a788:	str	w8, [sp, #44]
   2a78c:	ldr	w8, [sp, #12]
   2a790:	add	w8, w8, #0x1
   2a794:	str	w8, [sp, #12]
   2a798:	b	2a760 <lzma_mode_is_supported@@XZ_5.0+0x101f8>
   2a79c:	ldr	x8, [sp, #64]
   2a7a0:	ldr	x9, [sp, #24]
   2a7a4:	add	x9, x9, #0x4
   2a7a8:	add	x8, x8, x9
   2a7ac:	ldrb	w10, [x8]
   2a7b0:	strb	w10, [sp, #23]
   2a7b4:	ldrb	w10, [sp, #23]
   2a7b8:	cbz	w10, 2a7c8 <lzma_mode_is_supported@@XZ_5.0+0x10260>
   2a7bc:	ldrb	w8, [sp, #23]
   2a7c0:	cmp	w8, #0xff
   2a7c4:	b.ne	2a9ac <lzma_mode_is_supported@@XZ_5.0+0x10444>  // b.any
   2a7c8:	ldr	w8, [sp, #44]
   2a7cc:	lsr	w8, w8, #1
   2a7d0:	and	w8, w8, #0x7
   2a7d4:	mov	w9, w8
   2a7d8:	ubfx	x9, x9, #0, #32
   2a7dc:	adrp	x10, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   2a7e0:	add	x10, x10, #0xeb0
   2a7e4:	add	x9, x10, x9
   2a7e8:	ldrb	w8, [x9]
   2a7ec:	tbnz	w8, #0, 2a7f4 <lzma_mode_is_supported@@XZ_5.0+0x1028c>
   2a7f0:	b	2a9ac <lzma_mode_is_supported@@XZ_5.0+0x10444>
   2a7f4:	ldr	w8, [sp, #44]
   2a7f8:	lsr	w8, w8, #1
   2a7fc:	cmp	w8, #0x10
   2a800:	b.cs	2a9ac <lzma_mode_is_supported@@XZ_5.0+0x10444>  // b.hs, b.nlast
   2a804:	ldrb	w8, [sp, #23]
   2a808:	ldr	x9, [sp, #64]
   2a80c:	ldr	x10, [sp, #24]
   2a810:	add	x10, x10, #0x3
   2a814:	ldrb	w11, [x9, x10]
   2a818:	lsl	w11, w11, #16
   2a81c:	orr	w8, w11, w8, lsl #24
   2a820:	ldr	x9, [sp, #64]
   2a824:	ldr	x10, [sp, #24]
   2a828:	add	x10, x10, #0x2
   2a82c:	ldrb	w11, [x9, x10]
   2a830:	orr	w8, w8, w11, lsl #8
   2a834:	ldr	x9, [sp, #64]
   2a838:	ldr	x10, [sp, #24]
   2a83c:	add	x10, x10, #0x1
   2a840:	ldrb	w11, [x9, x10]
   2a844:	orr	w8, w8, w11
   2a848:	str	w8, [sp, #8]
   2a84c:	ldrb	w8, [sp, #75]
   2a850:	tbnz	w8, #0, 2a858 <lzma_mode_is_supported@@XZ_5.0+0x102f0>
   2a854:	b	2a878 <lzma_mode_is_supported@@XZ_5.0+0x10310>
   2a858:	ldr	w8, [sp, #8]
   2a85c:	ldr	w9, [sp, #76]
   2a860:	ldr	x10, [sp, #24]
   2a864:	add	w9, w9, w10
   2a868:	add	w9, w9, #0x5
   2a86c:	add	w8, w8, w9
   2a870:	str	w8, [sp, #4]
   2a874:	b	2a894 <lzma_mode_is_supported@@XZ_5.0+0x1032c>
   2a878:	ldr	w8, [sp, #8]
   2a87c:	ldr	w9, [sp, #76]
   2a880:	ldr	x10, [sp, #24]
   2a884:	add	w9, w9, w10
   2a888:	add	w9, w9, #0x5
   2a88c:	subs	w8, w8, w9
   2a890:	str	w8, [sp, #4]
   2a894:	ldr	w8, [sp, #44]
   2a898:	cbnz	w8, 2a8a0 <lzma_mode_is_supported@@XZ_5.0+0x10338>
   2a89c:	b	2a920 <lzma_mode_is_supported@@XZ_5.0+0x103b8>
   2a8a0:	ldr	w8, [sp, #44]
   2a8a4:	lsr	w8, w8, #1
   2a8a8:	adrp	x9, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   2a8ac:	add	x9, x9, #0xeb8
   2a8b0:	ldr	w8, [x9, w8, uxtw #2]
   2a8b4:	str	w8, [sp]
   2a8b8:	ldr	w8, [sp, #4]
   2a8bc:	ldr	w10, [sp]
   2a8c0:	mov	w11, #0x8                   	// #8
   2a8c4:	mul	w10, w10, w11
   2a8c8:	mov	w11, #0x18                  	// #24
   2a8cc:	subs	w10, w11, w10
   2a8d0:	lsr	w8, w8, w10
   2a8d4:	strb	w8, [sp, #23]
   2a8d8:	ldrb	w8, [sp, #23]
   2a8dc:	cbz	w8, 2a8f0 <lzma_mode_is_supported@@XZ_5.0+0x10388>
   2a8e0:	ldrb	w8, [sp, #23]
   2a8e4:	cmp	w8, #0xff
   2a8e8:	b.eq	2a8f0 <lzma_mode_is_supported@@XZ_5.0+0x10388>  // b.none
   2a8ec:	b	2a920 <lzma_mode_is_supported@@XZ_5.0+0x103b8>
   2a8f0:	ldr	w8, [sp, #4]
   2a8f4:	ldr	w9, [sp]
   2a8f8:	mov	w10, #0x8                   	// #8
   2a8fc:	mul	w9, w9, w10
   2a900:	mov	w10, #0x20                  	// #32
   2a904:	subs	w9, w10, w9
   2a908:	mov	w10, #0x1                   	// #1
   2a90c:	lsl	w9, w10, w9
   2a910:	subs	w9, w9, #0x1
   2a914:	eor	w8, w8, w9
   2a918:	str	w8, [sp, #8]
   2a91c:	b	2a84c <lzma_mode_is_supported@@XZ_5.0+0x102e4>
   2a920:	ldr	w8, [sp, #4]
   2a924:	lsr	w8, w8, #24
   2a928:	and	w8, w8, #0x1
   2a92c:	subs	w8, w8, #0x1
   2a930:	mvn	w8, w8
   2a934:	ldr	x9, [sp, #64]
   2a938:	ldr	x10, [sp, #24]
   2a93c:	add	x10, x10, #0x4
   2a940:	add	x9, x9, x10
   2a944:	strb	w8, [x9]
   2a948:	ldr	w8, [sp, #4]
   2a94c:	lsr	w8, w8, #16
   2a950:	ldr	x9, [sp, #64]
   2a954:	ldr	x10, [sp, #24]
   2a958:	add	x10, x10, #0x3
   2a95c:	add	x9, x9, x10
   2a960:	strb	w8, [x9]
   2a964:	ldr	w8, [sp, #4]
   2a968:	lsr	w8, w8, #8
   2a96c:	ldr	x9, [sp, #64]
   2a970:	ldr	x10, [sp, #24]
   2a974:	add	x10, x10, #0x2
   2a978:	add	x9, x9, x10
   2a97c:	strb	w8, [x9]
   2a980:	ldr	w8, [sp, #4]
   2a984:	ldr	x9, [sp, #64]
   2a988:	ldr	x10, [sp, #24]
   2a98c:	add	x10, x10, #0x1
   2a990:	add	x9, x9, x10
   2a994:	strb	w8, [x9]
   2a998:	ldr	x9, [sp, #24]
   2a99c:	add	x9, x9, #0x5
   2a9a0:	str	x9, [sp, #24]
   2a9a4:	str	wzr, [sp, #44]
   2a9a8:	b	2a9e4 <lzma_mode_is_supported@@XZ_5.0+0x1047c>
   2a9ac:	ldr	x8, [sp, #24]
   2a9b0:	add	x8, x8, #0x1
   2a9b4:	str	x8, [sp, #24]
   2a9b8:	ldr	w9, [sp, #44]
   2a9bc:	orr	w9, w9, #0x1
   2a9c0:	str	w9, [sp, #44]
   2a9c4:	ldrb	w9, [sp, #23]
   2a9c8:	cbz	w9, 2a9d8 <lzma_mode_is_supported@@XZ_5.0+0x10470>
   2a9cc:	ldrb	w8, [sp, #23]
   2a9d0:	cmp	w8, #0xff
   2a9d4:	b.ne	2a9e4 <lzma_mode_is_supported@@XZ_5.0+0x1047c>  // b.any
   2a9d8:	ldr	w8, [sp, #44]
   2a9dc:	orr	w8, w8, #0x10
   2a9e0:	str	w8, [sp, #44]
   2a9e4:	b	2a6d4 <lzma_mode_is_supported@@XZ_5.0+0x1016c>
   2a9e8:	ldr	w8, [sp, #44]
   2a9ec:	ldr	x9, [sp, #48]
   2a9f0:	str	w8, [x9]
   2a9f4:	ldr	w8, [sp, #40]
   2a9f8:	ldr	x9, [sp, #48]
   2a9fc:	str	w8, [x9, #4]
   2aa00:	ldr	x9, [sp, #24]
   2aa04:	str	x9, [sp, #88]
   2aa08:	ldr	x0, [sp, #88]
   2aa0c:	add	sp, sp, #0x60
   2aa10:	ret
   2aa14:	sub	sp, sp, #0x30
   2aa18:	stp	x29, x30, [sp, #32]
   2aa1c:	add	x29, sp, #0x20
   2aa20:	stur	x0, [x29, #-8]
   2aa24:	str	x1, [sp, #16]
   2aa28:	str	x2, [sp, #8]
   2aa2c:	ldur	x0, [x29, #-8]
   2aa30:	ldr	x1, [sp, #16]
   2aa34:	ldr	x2, [sp, #8]
   2aa38:	mov	w8, #0x1                   	// #1
   2aa3c:	and	w3, w8, #0x1
   2aa40:	bl	2aa50 <lzma_mode_is_supported@@XZ_5.0+0x104e8>
   2aa44:	ldp	x29, x30, [sp, #32]
   2aa48:	add	sp, sp, #0x30
   2aa4c:	ret
   2aa50:	sub	sp, sp, #0x30
   2aa54:	stp	x29, x30, [sp, #32]
   2aa58:	add	x29, sp, #0x20
   2aa5c:	adrp	x8, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xfa98>
   2aa60:	add	x8, x8, #0xaf0
   2aa64:	mov	x9, xzr
   2aa68:	mov	x5, #0x4                   	// #4
   2aa6c:	mov	w6, #0x4                   	// #4
   2aa70:	stur	x0, [x29, #-8]
   2aa74:	str	x1, [sp, #16]
   2aa78:	str	x2, [sp, #8]
   2aa7c:	mov	w10, #0x1                   	// #1
   2aa80:	and	w10, w3, w10
   2aa84:	strb	w10, [sp, #7]
   2aa88:	ldur	x0, [x29, #-8]
   2aa8c:	ldr	x1, [sp, #16]
   2aa90:	ldr	x2, [sp, #8]
   2aa94:	ldrb	w10, [sp, #7]
   2aa98:	mov	x3, x8
   2aa9c:	mov	x4, x9
   2aaa0:	and	w7, w10, #0x1
   2aaa4:	bl	29b00 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2aaa8:	ldp	x29, x30, [sp, #32]
   2aaac:	add	sp, sp, #0x30
   2aab0:	ret
   2aab4:	sub	sp, sp, #0x30
   2aab8:	stp	x29, x30, [sp, #32]
   2aabc:	add	x29, sp, #0x20
   2aac0:	stur	x0, [x29, #-8]
   2aac4:	str	x1, [sp, #16]
   2aac8:	str	x2, [sp, #8]
   2aacc:	ldur	x0, [x29, #-8]
   2aad0:	ldr	x1, [sp, #16]
   2aad4:	ldr	x2, [sp, #8]
   2aad8:	mov	w8, wzr
   2aadc:	and	w3, w8, #0x1
   2aae0:	bl	2aa50 <lzma_mode_is_supported@@XZ_5.0+0x104e8>
   2aae4:	ldp	x29, x30, [sp, #32]
   2aae8:	add	sp, sp, #0x30
   2aaec:	ret
   2aaf0:	sub	sp, sp, #0x30
   2aaf4:	mov	w8, #0x1                   	// #1
   2aaf8:	str	x0, [sp, #40]
   2aafc:	str	w1, [sp, #36]
   2ab00:	and	w8, w2, w8
   2ab04:	strb	w8, [sp, #35]
   2ab08:	str	x3, [sp, #24]
   2ab0c:	str	x4, [sp, #16]
   2ab10:	str	xzr, [sp, #8]
   2ab14:	ldr	x8, [sp, #8]
   2ab18:	add	x8, x8, #0x4
   2ab1c:	ldr	x9, [sp, #16]
   2ab20:	cmp	x8, x9
   2ab24:	b.hi	2aca4 <lzma_mode_is_supported@@XZ_5.0+0x1073c>  // b.pmore
   2ab28:	ldr	x8, [sp, #24]
   2ab2c:	ldr	x9, [sp, #8]
   2ab30:	ldrb	w10, [x8, x9]
   2ab34:	asr	w10, w10, #2
   2ab38:	cmp	w10, #0x12
   2ab3c:	b.ne	2ac94 <lzma_mode_is_supported@@XZ_5.0+0x1072c>  // b.any
   2ab40:	ldr	x8, [sp, #24]
   2ab44:	ldr	x9, [sp, #8]
   2ab48:	add	x9, x9, #0x3
   2ab4c:	ldrb	w10, [x8, x9]
   2ab50:	and	w10, w10, #0x3
   2ab54:	cmp	w10, #0x1
   2ab58:	b.ne	2ac94 <lzma_mode_is_supported@@XZ_5.0+0x1072c>  // b.any
   2ab5c:	ldr	x8, [sp, #24]
   2ab60:	ldr	x9, [sp, #8]
   2ab64:	add	x9, x9, #0x0
   2ab68:	ldrb	w10, [x8, x9]
   2ab6c:	and	w10, w10, #0x3
   2ab70:	ldr	x8, [sp, #24]
   2ab74:	ldr	x9, [sp, #8]
   2ab78:	add	x9, x9, #0x1
   2ab7c:	ldrb	w11, [x8, x9]
   2ab80:	lsl	w11, w11, #16
   2ab84:	orr	w10, w11, w10, lsl #24
   2ab88:	ldr	x8, [sp, #24]
   2ab8c:	ldr	x9, [sp, #8]
   2ab90:	add	x9, x9, #0x2
   2ab94:	ldrb	w11, [x8, x9]
   2ab98:	orr	w10, w10, w11, lsl #8
   2ab9c:	ldr	x8, [sp, #24]
   2aba0:	ldr	x9, [sp, #8]
   2aba4:	add	x9, x9, #0x3
   2aba8:	ldrb	w11, [x8, x9]
   2abac:	and	w11, w11, #0xfffffffc
   2abb0:	orr	w10, w10, w11
   2abb4:	str	w10, [sp, #4]
   2abb8:	ldrb	w10, [sp, #35]
   2abbc:	tbnz	w10, #0, 2abc4 <lzma_mode_is_supported@@XZ_5.0+0x1065c>
   2abc0:	b	2abe0 <lzma_mode_is_supported@@XZ_5.0+0x10678>
   2abc4:	ldr	w8, [sp, #36]
   2abc8:	ldr	x9, [sp, #8]
   2abcc:	add	w8, w8, w9
   2abd0:	ldr	w9, [sp, #4]
   2abd4:	add	w8, w8, w9
   2abd8:	str	w8, [sp]
   2abdc:	b	2abf8 <lzma_mode_is_supported@@XZ_5.0+0x10690>
   2abe0:	ldr	w8, [sp, #4]
   2abe4:	ldr	w9, [sp, #36]
   2abe8:	ldr	x10, [sp, #8]
   2abec:	add	w9, w9, w10
   2abf0:	subs	w8, w8, w9
   2abf4:	str	w8, [sp]
   2abf8:	ldr	w8, [sp]
   2abfc:	lsr	w8, w8, #24
   2ac00:	and	w8, w8, #0x3
   2ac04:	mov	w9, #0x48                  	// #72
   2ac08:	orr	w8, w9, w8
   2ac0c:	ldr	x10, [sp, #24]
   2ac10:	ldr	x11, [sp, #8]
   2ac14:	add	x11, x11, #0x0
   2ac18:	add	x10, x10, x11
   2ac1c:	strb	w8, [x10]
   2ac20:	ldr	w8, [sp]
   2ac24:	lsr	w8, w8, #16
   2ac28:	ldr	x10, [sp, #24]
   2ac2c:	ldr	x11, [sp, #8]
   2ac30:	add	x11, x11, #0x1
   2ac34:	add	x10, x10, x11
   2ac38:	strb	w8, [x10]
   2ac3c:	ldr	w8, [sp]
   2ac40:	lsr	w8, w8, #8
   2ac44:	ldr	x10, [sp, #24]
   2ac48:	ldr	x11, [sp, #8]
   2ac4c:	add	x11, x11, #0x2
   2ac50:	add	x10, x10, x11
   2ac54:	strb	w8, [x10]
   2ac58:	ldr	x10, [sp, #24]
   2ac5c:	ldr	x11, [sp, #8]
   2ac60:	add	x11, x11, #0x3
   2ac64:	add	x10, x10, x11
   2ac68:	ldrb	w8, [x10]
   2ac6c:	and	w8, w8, #0x3
   2ac70:	strb	w8, [x10]
   2ac74:	ldr	w8, [sp]
   2ac78:	ldr	x10, [sp, #24]
   2ac7c:	ldr	x11, [sp, #8]
   2ac80:	add	x11, x11, #0x3
   2ac84:	add	x10, x10, x11
   2ac88:	ldrb	w9, [x10]
   2ac8c:	orr	w8, w9, w8
   2ac90:	strb	w8, [x10]
   2ac94:	ldr	x8, [sp, #8]
   2ac98:	add	x8, x8, #0x4
   2ac9c:	str	x8, [sp, #8]
   2aca0:	b	2ab14 <lzma_mode_is_supported@@XZ_5.0+0x105ac>
   2aca4:	ldr	x0, [sp, #8]
   2aca8:	add	sp, sp, #0x30
   2acac:	ret
   2acb0:	sub	sp, sp, #0x30
   2acb4:	stp	x29, x30, [sp, #32]
   2acb8:	add	x29, sp, #0x20
   2acbc:	stur	x0, [x29, #-8]
   2acc0:	str	x1, [sp, #16]
   2acc4:	str	x2, [sp, #8]
   2acc8:	ldur	x0, [x29, #-8]
   2accc:	ldr	x1, [sp, #16]
   2acd0:	ldr	x2, [sp, #8]
   2acd4:	mov	w8, #0x1                   	// #1
   2acd8:	and	w3, w8, #0x1
   2acdc:	bl	2acec <lzma_mode_is_supported@@XZ_5.0+0x10784>
   2ace0:	ldp	x29, x30, [sp, #32]
   2ace4:	add	sp, sp, #0x30
   2ace8:	ret
   2acec:	sub	sp, sp, #0x30
   2acf0:	stp	x29, x30, [sp, #32]
   2acf4:	add	x29, sp, #0x20
   2acf8:	adrp	x8, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xfa98>
   2acfc:	add	x8, x8, #0xd8c
   2ad00:	mov	x9, xzr
   2ad04:	mov	x5, #0x10                  	// #16
   2ad08:	mov	w6, #0x10                  	// #16
   2ad0c:	stur	x0, [x29, #-8]
   2ad10:	str	x1, [sp, #16]
   2ad14:	str	x2, [sp, #8]
   2ad18:	mov	w10, #0x1                   	// #1
   2ad1c:	and	w10, w3, w10
   2ad20:	strb	w10, [sp, #7]
   2ad24:	ldur	x0, [x29, #-8]
   2ad28:	ldr	x1, [sp, #16]
   2ad2c:	ldr	x2, [sp, #8]
   2ad30:	ldrb	w10, [sp, #7]
   2ad34:	mov	x3, x8
   2ad38:	mov	x4, x9
   2ad3c:	and	w7, w10, #0x1
   2ad40:	bl	29b00 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2ad44:	ldp	x29, x30, [sp, #32]
   2ad48:	add	sp, sp, #0x30
   2ad4c:	ret
   2ad50:	sub	sp, sp, #0x30
   2ad54:	stp	x29, x30, [sp, #32]
   2ad58:	add	x29, sp, #0x20
   2ad5c:	stur	x0, [x29, #-8]
   2ad60:	str	x1, [sp, #16]
   2ad64:	str	x2, [sp, #8]
   2ad68:	ldur	x0, [x29, #-8]
   2ad6c:	ldr	x1, [sp, #16]
   2ad70:	ldr	x2, [sp, #8]
   2ad74:	mov	w8, wzr
   2ad78:	and	w3, w8, #0x1
   2ad7c:	bl	2acec <lzma_mode_is_supported@@XZ_5.0+0x10784>
   2ad80:	ldp	x29, x30, [sp, #32]
   2ad84:	add	sp, sp, #0x30
   2ad88:	ret
   2ad8c:	sub	sp, sp, #0x80
   2ad90:	mov	w8, #0x1                   	// #1
   2ad94:	str	x0, [sp, #120]
   2ad98:	str	w1, [sp, #116]
   2ad9c:	and	w8, w2, w8
   2ada0:	strb	w8, [sp, #115]
   2ada4:	str	x3, [sp, #104]
   2ada8:	str	x4, [sp, #96]
   2adac:	str	xzr, [sp, #88]
   2adb0:	ldr	x8, [sp, #88]
   2adb4:	add	x8, x8, #0x10
   2adb8:	ldr	x9, [sp, #96]
   2adbc:	cmp	x8, x9
   2adc0:	b.hi	2b068 <lzma_mode_is_supported@@XZ_5.0+0x10b00>  // b.pmore
   2adc4:	ldr	x8, [sp, #104]
   2adc8:	ldr	x9, [sp, #88]
   2adcc:	ldrb	w10, [x8, x9]
   2add0:	and	w10, w10, #0x1f
   2add4:	str	w10, [sp, #84]
   2add8:	ldr	w10, [sp, #84]
   2addc:	mov	w8, w10
   2ade0:	adrp	x9, 31000 <lzma_mode_is_supported@@XZ_5.0+0x16a98>
   2ade4:	add	x9, x9, #0xed8
   2ade8:	ldr	w10, [x9, x8, lsl #2]
   2adec:	str	w10, [sp, #80]
   2adf0:	mov	w10, #0x5                   	// #5
   2adf4:	str	w10, [sp, #76]
   2adf8:	str	xzr, [sp, #64]
   2adfc:	ldr	x8, [sp, #64]
   2ae00:	cmp	x8, #0x3
   2ae04:	b.cs	2b058 <lzma_mode_is_supported@@XZ_5.0+0x10af0>  // b.hs, b.nlast
   2ae08:	ldr	w8, [sp, #80]
   2ae0c:	ldr	x9, [sp, #64]
   2ae10:	lsr	w8, w8, w9
   2ae14:	and	w8, w8, #0x1
   2ae18:	cbnz	w8, 2ae20 <lzma_mode_is_supported@@XZ_5.0+0x108b8>
   2ae1c:	b	2b03c <lzma_mode_is_supported@@XZ_5.0+0x10ad4>
   2ae20:	ldr	w8, [sp, #76]
   2ae24:	lsr	w8, w8, #3
   2ae28:	mov	w9, w8
   2ae2c:	ubfx	x9, x9, #0, #32
   2ae30:	str	x9, [sp, #56]
   2ae34:	ldr	w8, [sp, #76]
   2ae38:	and	w8, w8, #0x7
   2ae3c:	str	w8, [sp, #52]
   2ae40:	str	xzr, [sp, #40]
   2ae44:	str	xzr, [sp, #32]
   2ae48:	ldr	x8, [sp, #32]
   2ae4c:	cmp	x8, #0x6
   2ae50:	b.cs	2aea0 <lzma_mode_is_supported@@XZ_5.0+0x10938>  // b.hs, b.nlast
   2ae54:	ldr	x8, [sp, #104]
   2ae58:	ldr	x9, [sp, #88]
   2ae5c:	ldr	x10, [sp, #32]
   2ae60:	add	x9, x9, x10
   2ae64:	ldr	x10, [sp, #56]
   2ae68:	add	x9, x9, x10
   2ae6c:	ldrb	w11, [x8, x9]
   2ae70:	mov	w8, w11
   2ae74:	ldr	x9, [sp, #32]
   2ae78:	mov	x10, #0x8                   	// #8
   2ae7c:	mul	x9, x10, x9
   2ae80:	lsl	x8, x8, x9
   2ae84:	ldr	x9, [sp, #40]
   2ae88:	add	x8, x9, x8
   2ae8c:	str	x8, [sp, #40]
   2ae90:	ldr	x8, [sp, #32]
   2ae94:	add	x8, x8, #0x1
   2ae98:	str	x8, [sp, #32]
   2ae9c:	b	2ae48 <lzma_mode_is_supported@@XZ_5.0+0x108e0>
   2aea0:	ldr	x8, [sp, #40]
   2aea4:	ldr	w9, [sp, #52]
   2aea8:	mov	w10, w9
   2aeac:	lsr	x8, x8, x10
   2aeb0:	str	x8, [sp, #24]
   2aeb4:	ldr	x8, [sp, #24]
   2aeb8:	lsr	x8, x8, #37
   2aebc:	and	x8, x8, #0xf
   2aec0:	cmp	x8, #0x5
   2aec4:	b.ne	2b03c <lzma_mode_is_supported@@XZ_5.0+0x10ad4>  // b.any
   2aec8:	ldr	x8, [sp, #24]
   2aecc:	lsr	x8, x8, #9
   2aed0:	and	x8, x8, #0x7
   2aed4:	cbnz	x8, 2b03c <lzma_mode_is_supported@@XZ_5.0+0x10ad4>
   2aed8:	ldr	x8, [sp, #24]
   2aedc:	lsr	x8, x8, #13
   2aee0:	and	x8, x8, #0xfffff
   2aee4:	str	w8, [sp, #20]
   2aee8:	ldr	x9, [sp, #24]
   2aeec:	lsr	x9, x9, #36
   2aef0:	and	x9, x9, #0x1
   2aef4:	ldr	w8, [sp, #20]
   2aef8:	mov	w10, w8
   2aefc:	orr	x9, x10, x9, lsl #20
   2af00:	str	w9, [sp, #20]
   2af04:	ldr	w8, [sp, #20]
   2af08:	lsl	w8, w8, #4
   2af0c:	str	w8, [sp, #20]
   2af10:	ldrb	w8, [sp, #115]
   2af14:	tbnz	w8, #0, 2af1c <lzma_mode_is_supported@@XZ_5.0+0x109b4>
   2af18:	b	2af38 <lzma_mode_is_supported@@XZ_5.0+0x109d0>
   2af1c:	ldr	w8, [sp, #116]
   2af20:	ldr	x9, [sp, #88]
   2af24:	add	w8, w8, w9
   2af28:	ldr	w9, [sp, #20]
   2af2c:	add	w8, w8, w9
   2af30:	str	w8, [sp, #16]
   2af34:	b	2af50 <lzma_mode_is_supported@@XZ_5.0+0x109e8>
   2af38:	ldr	w8, [sp, #20]
   2af3c:	ldr	w9, [sp, #116]
   2af40:	ldr	x10, [sp, #88]
   2af44:	add	w9, w9, w10
   2af48:	subs	w8, w8, w9
   2af4c:	str	w8, [sp, #16]
   2af50:	ldr	w8, [sp, #16]
   2af54:	lsr	w8, w8, #4
   2af58:	str	w8, [sp, #16]
   2af5c:	ldr	x9, [sp, #24]
   2af60:	mov	x10, #0xffff000000001fff    	// #-281474976702465
   2af64:	movk	x10, #0xffee, lsl #32
   2af68:	and	x9, x9, x10
   2af6c:	str	x9, [sp, #24]
   2af70:	ldr	w8, [sp, #16]
   2af74:	and	w8, w8, #0xfffff
   2af78:	mov	w9, w8
   2af7c:	ubfx	x9, x9, #0, #32
   2af80:	ldr	x10, [sp, #24]
   2af84:	orr	x9, x10, x9, lsl #13
   2af88:	str	x9, [sp, #24]
   2af8c:	ldr	w8, [sp, #16]
   2af90:	and	w8, w8, #0x100000
   2af94:	mov	w9, w8
   2af98:	ubfx	x9, x9, #0, #32
   2af9c:	ldr	x10, [sp, #24]
   2afa0:	orr	x9, x10, x9, lsl #16
   2afa4:	str	x9, [sp, #24]
   2afa8:	ldr	w8, [sp, #52]
   2afac:	mov	w11, #0x1                   	// #1
   2afb0:	lsl	w8, w11, w8
   2afb4:	subs	w8, w8, #0x1
   2afb8:	mov	w0, w8
   2afbc:	sxtw	x9, w0
   2afc0:	ldr	x10, [sp, #40]
   2afc4:	and	x9, x10, x9
   2afc8:	str	x9, [sp, #40]
   2afcc:	ldr	x9, [sp, #24]
   2afd0:	ldr	w8, [sp, #52]
   2afd4:	mov	w10, w8
   2afd8:	lsl	x9, x9, x10
   2afdc:	ldr	x10, [sp, #40]
   2afe0:	orr	x9, x10, x9
   2afe4:	str	x9, [sp, #40]
   2afe8:	str	xzr, [sp, #8]
   2afec:	ldr	x8, [sp, #8]
   2aff0:	cmp	x8, #0x6
   2aff4:	b.cs	2b03c <lzma_mode_is_supported@@XZ_5.0+0x10ad4>  // b.hs, b.nlast
   2aff8:	ldr	x8, [sp, #40]
   2affc:	ldr	x9, [sp, #8]
   2b000:	mov	x10, #0x8                   	// #8
   2b004:	mul	x9, x10, x9
   2b008:	lsr	x8, x8, x9
   2b00c:	ldr	x9, [sp, #104]
   2b010:	ldr	x10, [sp, #88]
   2b014:	ldr	x11, [sp, #8]
   2b018:	add	x10, x10, x11
   2b01c:	ldr	x11, [sp, #56]
   2b020:	add	x10, x10, x11
   2b024:	add	x9, x9, x10
   2b028:	strb	w8, [x9]
   2b02c:	ldr	x8, [sp, #8]
   2b030:	add	x8, x8, #0x1
   2b034:	str	x8, [sp, #8]
   2b038:	b	2afec <lzma_mode_is_supported@@XZ_5.0+0x10a84>
   2b03c:	ldr	x8, [sp, #64]
   2b040:	add	x8, x8, #0x1
   2b044:	str	x8, [sp, #64]
   2b048:	ldr	w9, [sp, #76]
   2b04c:	add	w9, w9, #0x29
   2b050:	str	w9, [sp, #76]
   2b054:	b	2adfc <lzma_mode_is_supported@@XZ_5.0+0x10894>
   2b058:	ldr	x8, [sp, #88]
   2b05c:	add	x8, x8, #0x10
   2b060:	str	x8, [sp, #88]
   2b064:	b	2adb0 <lzma_mode_is_supported@@XZ_5.0+0x10848>
   2b068:	ldr	x0, [sp, #88]
   2b06c:	add	sp, sp, #0x80
   2b070:	ret
   2b074:	sub	sp, sp, #0x30
   2b078:	stp	x29, x30, [sp, #32]
   2b07c:	add	x29, sp, #0x20
   2b080:	stur	x0, [x29, #-8]
   2b084:	str	x1, [sp, #16]
   2b088:	str	x2, [sp, #8]
   2b08c:	ldur	x0, [x29, #-8]
   2b090:	ldr	x1, [sp, #16]
   2b094:	ldr	x2, [sp, #8]
   2b098:	mov	w8, #0x1                   	// #1
   2b09c:	and	w3, w8, #0x1
   2b0a0:	bl	2b0b0 <lzma_mode_is_supported@@XZ_5.0+0x10b48>
   2b0a4:	ldp	x29, x30, [sp, #32]
   2b0a8:	add	sp, sp, #0x30
   2b0ac:	ret
   2b0b0:	sub	sp, sp, #0x30
   2b0b4:	stp	x29, x30, [sp, #32]
   2b0b8:	add	x29, sp, #0x20
   2b0bc:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   2b0c0:	add	x8, x8, #0x150
   2b0c4:	mov	x9, xzr
   2b0c8:	mov	x5, #0x4                   	// #4
   2b0cc:	mov	w6, #0x4                   	// #4
   2b0d0:	stur	x0, [x29, #-8]
   2b0d4:	str	x1, [sp, #16]
   2b0d8:	str	x2, [sp, #8]
   2b0dc:	mov	w10, #0x1                   	// #1
   2b0e0:	and	w10, w3, w10
   2b0e4:	strb	w10, [sp, #7]
   2b0e8:	ldur	x0, [x29, #-8]
   2b0ec:	ldr	x1, [sp, #16]
   2b0f0:	ldr	x2, [sp, #8]
   2b0f4:	ldrb	w10, [sp, #7]
   2b0f8:	mov	x3, x8
   2b0fc:	mov	x4, x9
   2b100:	and	w7, w10, #0x1
   2b104:	bl	29b00 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2b108:	ldp	x29, x30, [sp, #32]
   2b10c:	add	sp, sp, #0x30
   2b110:	ret
   2b114:	sub	sp, sp, #0x30
   2b118:	stp	x29, x30, [sp, #32]
   2b11c:	add	x29, sp, #0x20
   2b120:	stur	x0, [x29, #-8]
   2b124:	str	x1, [sp, #16]
   2b128:	str	x2, [sp, #8]
   2b12c:	ldur	x0, [x29, #-8]
   2b130:	ldr	x1, [sp, #16]
   2b134:	ldr	x2, [sp, #8]
   2b138:	mov	w8, wzr
   2b13c:	and	w3, w8, #0x1
   2b140:	bl	2b0b0 <lzma_mode_is_supported@@XZ_5.0+0x10b48>
   2b144:	ldp	x29, x30, [sp, #32]
   2b148:	add	sp, sp, #0x30
   2b14c:	ret
   2b150:	sub	sp, sp, #0x30
   2b154:	str	x0, [sp, #40]
   2b158:	str	w1, [sp, #36]
   2b15c:	and	w8, w2, #0x1
   2b160:	strb	w8, [sp, #35]
   2b164:	str	x3, [sp, #24]
   2b168:	str	x4, [sp, #16]
   2b16c:	str	xzr, [sp, #8]
   2b170:	ldr	x8, [sp, #8]
   2b174:	add	x8, x8, #0x4
   2b178:	ldr	x9, [sp, #16]
   2b17c:	cmp	x8, x9
   2b180:	b.hi	2b29c <lzma_mode_is_supported@@XZ_5.0+0x10d34>  // b.pmore
   2b184:	ldr	x8, [sp, #24]
   2b188:	ldr	x9, [sp, #8]
   2b18c:	add	x9, x9, #0x3
   2b190:	ldrb	w10, [x8, x9]
   2b194:	cmp	w10, #0xeb
   2b198:	b.ne	2b28c <lzma_mode_is_supported@@XZ_5.0+0x10d24>  // b.any
   2b19c:	ldr	x8, [sp, #24]
   2b1a0:	ldr	x9, [sp, #8]
   2b1a4:	add	x9, x9, #0x2
   2b1a8:	ldrb	w10, [x8, x9]
   2b1ac:	ldr	x8, [sp, #24]
   2b1b0:	ldr	x9, [sp, #8]
   2b1b4:	add	x9, x9, #0x1
   2b1b8:	ldrb	w11, [x8, x9]
   2b1bc:	lsl	w11, w11, #8
   2b1c0:	orr	w10, w11, w10, lsl #16
   2b1c4:	ldr	x8, [sp, #24]
   2b1c8:	ldr	x9, [sp, #8]
   2b1cc:	add	x9, x9, #0x0
   2b1d0:	ldrb	w11, [x8, x9]
   2b1d4:	orr	w10, w10, w11
   2b1d8:	str	w10, [sp, #4]
   2b1dc:	ldr	w10, [sp, #4]
   2b1e0:	lsl	w10, w10, #2
   2b1e4:	str	w10, [sp, #4]
   2b1e8:	ldrb	w10, [sp, #35]
   2b1ec:	tbnz	w10, #0, 2b1f4 <lzma_mode_is_supported@@XZ_5.0+0x10c8c>
   2b1f0:	b	2b214 <lzma_mode_is_supported@@XZ_5.0+0x10cac>
   2b1f4:	ldr	w8, [sp, #36]
   2b1f8:	ldr	x9, [sp, #8]
   2b1fc:	add	w8, w8, w9
   2b200:	add	w8, w8, #0x8
   2b204:	ldr	w9, [sp, #4]
   2b208:	add	w8, w8, w9
   2b20c:	str	w8, [sp]
   2b210:	b	2b230 <lzma_mode_is_supported@@XZ_5.0+0x10cc8>
   2b214:	ldr	w8, [sp, #4]
   2b218:	ldr	w9, [sp, #36]
   2b21c:	ldr	x10, [sp, #8]
   2b220:	add	w9, w9, w10
   2b224:	add	w9, w9, #0x8
   2b228:	subs	w8, w8, w9
   2b22c:	str	w8, [sp]
   2b230:	ldr	w8, [sp]
   2b234:	lsr	w8, w8, #2
   2b238:	str	w8, [sp]
   2b23c:	ldr	w8, [sp]
   2b240:	lsr	w8, w8, #16
   2b244:	ldr	x9, [sp, #24]
   2b248:	ldr	x10, [sp, #8]
   2b24c:	add	x10, x10, #0x2
   2b250:	add	x9, x9, x10
   2b254:	strb	w8, [x9]
   2b258:	ldr	w8, [sp]
   2b25c:	lsr	w8, w8, #8
   2b260:	ldr	x9, [sp, #24]
   2b264:	ldr	x10, [sp, #8]
   2b268:	add	x10, x10, #0x1
   2b26c:	add	x9, x9, x10
   2b270:	strb	w8, [x9]
   2b274:	ldr	w8, [sp]
   2b278:	ldr	x9, [sp, #24]
   2b27c:	ldr	x10, [sp, #8]
   2b280:	add	x10, x10, #0x0
   2b284:	add	x9, x9, x10
   2b288:	strb	w8, [x9]
   2b28c:	ldr	x8, [sp, #8]
   2b290:	add	x8, x8, #0x4
   2b294:	str	x8, [sp, #8]
   2b298:	b	2b170 <lzma_mode_is_supported@@XZ_5.0+0x10c08>
   2b29c:	ldr	x0, [sp, #8]
   2b2a0:	add	sp, sp, #0x30
   2b2a4:	ret
   2b2a8:	sub	sp, sp, #0x30
   2b2ac:	stp	x29, x30, [sp, #32]
   2b2b0:	add	x29, sp, #0x20
   2b2b4:	stur	x0, [x29, #-8]
   2b2b8:	str	x1, [sp, #16]
   2b2bc:	str	x2, [sp, #8]
   2b2c0:	ldur	x0, [x29, #-8]
   2b2c4:	ldr	x1, [sp, #16]
   2b2c8:	ldr	x2, [sp, #8]
   2b2cc:	mov	w8, #0x1                   	// #1
   2b2d0:	and	w3, w8, #0x1
   2b2d4:	bl	2b2e4 <lzma_mode_is_supported@@XZ_5.0+0x10d7c>
   2b2d8:	ldp	x29, x30, [sp, #32]
   2b2dc:	add	sp, sp, #0x30
   2b2e0:	ret
   2b2e4:	sub	sp, sp, #0x30
   2b2e8:	stp	x29, x30, [sp, #32]
   2b2ec:	add	x29, sp, #0x20
   2b2f0:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   2b2f4:	add	x8, x8, #0x384
   2b2f8:	mov	x9, xzr
   2b2fc:	mov	x5, #0x4                   	// #4
   2b300:	mov	w6, #0x2                   	// #2
   2b304:	stur	x0, [x29, #-8]
   2b308:	str	x1, [sp, #16]
   2b30c:	str	x2, [sp, #8]
   2b310:	mov	w10, #0x1                   	// #1
   2b314:	and	w10, w3, w10
   2b318:	strb	w10, [sp, #7]
   2b31c:	ldur	x0, [x29, #-8]
   2b320:	ldr	x1, [sp, #16]
   2b324:	ldr	x2, [sp, #8]
   2b328:	ldrb	w10, [sp, #7]
   2b32c:	mov	x3, x8
   2b330:	mov	x4, x9
   2b334:	and	w7, w10, #0x1
   2b338:	bl	29b00 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2b33c:	ldp	x29, x30, [sp, #32]
   2b340:	add	sp, sp, #0x30
   2b344:	ret
   2b348:	sub	sp, sp, #0x30
   2b34c:	stp	x29, x30, [sp, #32]
   2b350:	add	x29, sp, #0x20
   2b354:	stur	x0, [x29, #-8]
   2b358:	str	x1, [sp, #16]
   2b35c:	str	x2, [sp, #8]
   2b360:	ldur	x0, [x29, #-8]
   2b364:	ldr	x1, [sp, #16]
   2b368:	ldr	x2, [sp, #8]
   2b36c:	mov	w8, wzr
   2b370:	and	w3, w8, #0x1
   2b374:	bl	2b2e4 <lzma_mode_is_supported@@XZ_5.0+0x10d7c>
   2b378:	ldp	x29, x30, [sp, #32]
   2b37c:	add	sp, sp, #0x30
   2b380:	ret
   2b384:	sub	sp, sp, #0x30
   2b388:	mov	w8, #0x1                   	// #1
   2b38c:	str	x0, [sp, #40]
   2b390:	str	w1, [sp, #36]
   2b394:	and	w8, w2, w8
   2b398:	strb	w8, [sp, #35]
   2b39c:	str	x3, [sp, #24]
   2b3a0:	str	x4, [sp, #16]
   2b3a4:	str	xzr, [sp, #8]
   2b3a8:	ldr	x8, [sp, #8]
   2b3ac:	add	x8, x8, #0x4
   2b3b0:	ldr	x9, [sp, #16]
   2b3b4:	cmp	x8, x9
   2b3b8:	b.hi	2b550 <lzma_mode_is_supported@@XZ_5.0+0x10fe8>  // b.pmore
   2b3bc:	ldr	x8, [sp, #24]
   2b3c0:	ldr	x9, [sp, #8]
   2b3c4:	add	x9, x9, #0x1
   2b3c8:	ldrb	w10, [x8, x9]
   2b3cc:	and	w10, w10, #0xf8
   2b3d0:	cmp	w10, #0xf0
   2b3d4:	b.ne	2b540 <lzma_mode_is_supported@@XZ_5.0+0x10fd8>  // b.any
   2b3d8:	ldr	x8, [sp, #24]
   2b3dc:	ldr	x9, [sp, #8]
   2b3e0:	add	x9, x9, #0x3
   2b3e4:	ldrb	w10, [x8, x9]
   2b3e8:	and	w10, w10, #0xf8
   2b3ec:	cmp	w10, #0xf8
   2b3f0:	b.ne	2b540 <lzma_mode_is_supported@@XZ_5.0+0x10fd8>  // b.any
   2b3f4:	ldr	x8, [sp, #24]
   2b3f8:	ldr	x9, [sp, #8]
   2b3fc:	add	x9, x9, #0x1
   2b400:	ldrb	w10, [x8, x9]
   2b404:	and	w10, w10, #0x7
   2b408:	ldr	x8, [sp, #24]
   2b40c:	ldr	x9, [sp, #8]
   2b410:	add	x9, x9, #0x0
   2b414:	ldrb	w11, [x8, x9]
   2b418:	lsl	w11, w11, #11
   2b41c:	orr	w10, w11, w10, lsl #19
   2b420:	ldr	x8, [sp, #24]
   2b424:	ldr	x9, [sp, #8]
   2b428:	add	x9, x9, #0x3
   2b42c:	ldrb	w11, [x8, x9]
   2b430:	and	w11, w11, #0x7
   2b434:	orr	w10, w10, w11, lsl #8
   2b438:	ldr	x8, [sp, #24]
   2b43c:	ldr	x9, [sp, #8]
   2b440:	add	x9, x9, #0x2
   2b444:	ldrb	w11, [x8, x9]
   2b448:	orr	w10, w10, w11
   2b44c:	str	w10, [sp, #4]
   2b450:	ldr	w10, [sp, #4]
   2b454:	lsl	w10, w10, #1
   2b458:	str	w10, [sp, #4]
   2b45c:	ldrb	w10, [sp, #35]
   2b460:	tbnz	w10, #0, 2b468 <lzma_mode_is_supported@@XZ_5.0+0x10f00>
   2b464:	b	2b488 <lzma_mode_is_supported@@XZ_5.0+0x10f20>
   2b468:	ldr	w8, [sp, #36]
   2b46c:	ldr	x9, [sp, #8]
   2b470:	add	w8, w8, w9
   2b474:	add	w8, w8, #0x4
   2b478:	ldr	w9, [sp, #4]
   2b47c:	add	w8, w8, w9
   2b480:	str	w8, [sp]
   2b484:	b	2b4a4 <lzma_mode_is_supported@@XZ_5.0+0x10f3c>
   2b488:	ldr	w8, [sp, #4]
   2b48c:	ldr	w9, [sp, #36]
   2b490:	ldr	x10, [sp, #8]
   2b494:	add	w9, w9, w10
   2b498:	add	w9, w9, #0x4
   2b49c:	subs	w8, w8, w9
   2b4a0:	str	w8, [sp]
   2b4a4:	ldr	w8, [sp]
   2b4a8:	lsr	w8, w8, #1
   2b4ac:	str	w8, [sp]
   2b4b0:	ldr	w8, [sp]
   2b4b4:	lsr	w8, w8, #19
   2b4b8:	and	w8, w8, #0x7
   2b4bc:	mov	w9, #0xf0                  	// #240
   2b4c0:	orr	w8, w9, w8
   2b4c4:	ldr	x10, [sp, #24]
   2b4c8:	ldr	x11, [sp, #8]
   2b4cc:	add	x11, x11, #0x1
   2b4d0:	add	x10, x10, x11
   2b4d4:	strb	w8, [x10]
   2b4d8:	ldr	w8, [sp]
   2b4dc:	lsr	w8, w8, #11
   2b4e0:	ldr	x10, [sp, #24]
   2b4e4:	ldr	x11, [sp, #8]
   2b4e8:	add	x11, x11, #0x0
   2b4ec:	add	x10, x10, x11
   2b4f0:	strb	w8, [x10]
   2b4f4:	ldr	w8, [sp]
   2b4f8:	lsr	w8, w8, #8
   2b4fc:	and	w8, w8, #0x7
   2b500:	mov	w9, #0xf8                  	// #248
   2b504:	orr	w8, w9, w8
   2b508:	ldr	x10, [sp, #24]
   2b50c:	ldr	x11, [sp, #8]
   2b510:	add	x11, x11, #0x3
   2b514:	add	x10, x10, x11
   2b518:	strb	w8, [x10]
   2b51c:	ldr	w8, [sp]
   2b520:	ldr	x10, [sp, #24]
   2b524:	ldr	x11, [sp, #8]
   2b528:	add	x11, x11, #0x2
   2b52c:	add	x10, x10, x11
   2b530:	strb	w8, [x10]
   2b534:	ldr	x10, [sp, #8]
   2b538:	add	x10, x10, #0x2
   2b53c:	str	x10, [sp, #8]
   2b540:	ldr	x8, [sp, #8]
   2b544:	add	x8, x8, #0x2
   2b548:	str	x8, [sp, #8]
   2b54c:	b	2b3a8 <lzma_mode_is_supported@@XZ_5.0+0x10e40>
   2b550:	ldr	x0, [sp, #8]
   2b554:	add	sp, sp, #0x30
   2b558:	ret
   2b55c:	sub	sp, sp, #0x30
   2b560:	stp	x29, x30, [sp, #32]
   2b564:	add	x29, sp, #0x20
   2b568:	stur	x0, [x29, #-8]
   2b56c:	str	x1, [sp, #16]
   2b570:	str	x2, [sp, #8]
   2b574:	ldur	x0, [x29, #-8]
   2b578:	ldr	x1, [sp, #16]
   2b57c:	ldr	x2, [sp, #8]
   2b580:	mov	w8, #0x1                   	// #1
   2b584:	and	w3, w8, #0x1
   2b588:	bl	2b598 <lzma_mode_is_supported@@XZ_5.0+0x11030>
   2b58c:	ldp	x29, x30, [sp, #32]
   2b590:	add	sp, sp, #0x30
   2b594:	ret
   2b598:	sub	sp, sp, #0x30
   2b59c:	stp	x29, x30, [sp, #32]
   2b5a0:	add	x29, sp, #0x20
   2b5a4:	adrp	x8, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10a98>
   2b5a8:	add	x8, x8, #0x638
   2b5ac:	mov	x9, xzr
   2b5b0:	mov	x5, #0x4                   	// #4
   2b5b4:	mov	w6, #0x4                   	// #4
   2b5b8:	stur	x0, [x29, #-8]
   2b5bc:	str	x1, [sp, #16]
   2b5c0:	str	x2, [sp, #8]
   2b5c4:	mov	w10, #0x1                   	// #1
   2b5c8:	and	w10, w3, w10
   2b5cc:	strb	w10, [sp, #7]
   2b5d0:	ldur	x0, [x29, #-8]
   2b5d4:	ldr	x1, [sp, #16]
   2b5d8:	ldr	x2, [sp, #8]
   2b5dc:	ldrb	w10, [sp, #7]
   2b5e0:	mov	x3, x8
   2b5e4:	mov	x4, x9
   2b5e8:	and	w7, w10, #0x1
   2b5ec:	bl	29b00 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2b5f0:	ldp	x29, x30, [sp, #32]
   2b5f4:	add	sp, sp, #0x30
   2b5f8:	ret
   2b5fc:	sub	sp, sp, #0x30
   2b600:	stp	x29, x30, [sp, #32]
   2b604:	add	x29, sp, #0x20
   2b608:	stur	x0, [x29, #-8]
   2b60c:	str	x1, [sp, #16]
   2b610:	str	x2, [sp, #8]
   2b614:	ldur	x0, [x29, #-8]
   2b618:	ldr	x1, [sp, #16]
   2b61c:	ldr	x2, [sp, #8]
   2b620:	mov	w8, wzr
   2b624:	and	w3, w8, #0x1
   2b628:	bl	2b598 <lzma_mode_is_supported@@XZ_5.0+0x11030>
   2b62c:	ldp	x29, x30, [sp, #32]
   2b630:	add	sp, sp, #0x30
   2b634:	ret
   2b638:	sub	sp, sp, #0x30
   2b63c:	mov	w8, #0x1                   	// #1
   2b640:	str	x0, [sp, #40]
   2b644:	str	w1, [sp, #36]
   2b648:	and	w8, w2, w8
   2b64c:	strb	w8, [sp, #35]
   2b650:	str	x3, [sp, #24]
   2b654:	str	x4, [sp, #16]
   2b658:	str	xzr, [sp, #8]
   2b65c:	ldr	x8, [sp, #8]
   2b660:	add	x8, x8, #0x4
   2b664:	ldr	x9, [sp, #16]
   2b668:	cmp	x8, x9
   2b66c:	b.hi	2b824 <lzma_mode_is_supported@@XZ_5.0+0x112bc>  // b.pmore
   2b670:	ldr	x8, [sp, #24]
   2b674:	ldr	x9, [sp, #8]
   2b678:	ldrb	w10, [x8, x9]
   2b67c:	cmp	w10, #0x40
   2b680:	b.ne	2b69c <lzma_mode_is_supported@@XZ_5.0+0x11134>  // b.any
   2b684:	ldr	x8, [sp, #24]
   2b688:	ldr	x9, [sp, #8]
   2b68c:	add	x9, x9, #0x1
   2b690:	ldrb	w10, [x8, x9]
   2b694:	and	w10, w10, #0xc0
   2b698:	cbz	w10, 2b6cc <lzma_mode_is_supported@@XZ_5.0+0x11164>
   2b69c:	ldr	x8, [sp, #24]
   2b6a0:	ldr	x9, [sp, #8]
   2b6a4:	ldrb	w10, [x8, x9]
   2b6a8:	cmp	w10, #0x7f
   2b6ac:	b.ne	2b814 <lzma_mode_is_supported@@XZ_5.0+0x112ac>  // b.any
   2b6b0:	ldr	x8, [sp, #24]
   2b6b4:	ldr	x9, [sp, #8]
   2b6b8:	add	x9, x9, #0x1
   2b6bc:	ldrb	w10, [x8, x9]
   2b6c0:	and	w10, w10, #0xc0
   2b6c4:	cmp	w10, #0xc0
   2b6c8:	b.ne	2b814 <lzma_mode_is_supported@@XZ_5.0+0x112ac>  // b.any
   2b6cc:	ldr	x8, [sp, #24]
   2b6d0:	ldr	x9, [sp, #8]
   2b6d4:	add	x9, x9, #0x0
   2b6d8:	ldrb	w10, [x8, x9]
   2b6dc:	ldr	x8, [sp, #24]
   2b6e0:	ldr	x9, [sp, #8]
   2b6e4:	add	x9, x9, #0x1
   2b6e8:	ldrb	w11, [x8, x9]
   2b6ec:	lsl	w11, w11, #16
   2b6f0:	orr	w10, w11, w10, lsl #24
   2b6f4:	ldr	x8, [sp, #24]
   2b6f8:	ldr	x9, [sp, #8]
   2b6fc:	add	x9, x9, #0x2
   2b700:	ldrb	w11, [x8, x9]
   2b704:	orr	w10, w10, w11, lsl #8
   2b708:	ldr	x8, [sp, #24]
   2b70c:	ldr	x9, [sp, #8]
   2b710:	add	x9, x9, #0x3
   2b714:	ldrb	w11, [x8, x9]
   2b718:	orr	w10, w10, w11
   2b71c:	str	w10, [sp, #4]
   2b720:	ldr	w10, [sp, #4]
   2b724:	lsl	w10, w10, #2
   2b728:	str	w10, [sp, #4]
   2b72c:	ldrb	w10, [sp, #35]
   2b730:	tbnz	w10, #0, 2b738 <lzma_mode_is_supported@@XZ_5.0+0x111d0>
   2b734:	b	2b754 <lzma_mode_is_supported@@XZ_5.0+0x111ec>
   2b738:	ldr	w8, [sp, #36]
   2b73c:	ldr	x9, [sp, #8]
   2b740:	add	w8, w8, w9
   2b744:	ldr	w9, [sp, #4]
   2b748:	add	w8, w8, w9
   2b74c:	str	w8, [sp]
   2b750:	b	2b76c <lzma_mode_is_supported@@XZ_5.0+0x11204>
   2b754:	ldr	w8, [sp, #4]
   2b758:	ldr	w9, [sp, #36]
   2b75c:	ldr	x10, [sp, #8]
   2b760:	add	w9, w9, w10
   2b764:	subs	w8, w8, w9
   2b768:	str	w8, [sp]
   2b76c:	ldr	w8, [sp]
   2b770:	lsr	w8, w8, #2
   2b774:	str	w8, [sp]
   2b778:	ldr	w8, [sp]
   2b77c:	lsr	w8, w8, #22
   2b780:	and	w8, w8, #0x1
   2b784:	mov	w9, wzr
   2b788:	subs	w8, w9, w8
   2b78c:	lsl	w8, w8, #22
   2b790:	and	w8, w8, #0x3fffffff
   2b794:	ldr	w9, [sp]
   2b798:	and	w9, w9, #0x3fffff
   2b79c:	orr	w8, w8, w9
   2b7a0:	orr	w8, w8, #0x40000000
   2b7a4:	str	w8, [sp]
   2b7a8:	ldr	w8, [sp]
   2b7ac:	lsr	w8, w8, #24
   2b7b0:	ldr	x10, [sp, #24]
   2b7b4:	ldr	x11, [sp, #8]
   2b7b8:	add	x11, x11, #0x0
   2b7bc:	add	x10, x10, x11
   2b7c0:	strb	w8, [x10]
   2b7c4:	ldr	w8, [sp]
   2b7c8:	lsr	w8, w8, #16
   2b7cc:	ldr	x10, [sp, #24]
   2b7d0:	ldr	x11, [sp, #8]
   2b7d4:	add	x11, x11, #0x1
   2b7d8:	add	x10, x10, x11
   2b7dc:	strb	w8, [x10]
   2b7e0:	ldr	w8, [sp]
   2b7e4:	lsr	w8, w8, #8
   2b7e8:	ldr	x10, [sp, #24]
   2b7ec:	ldr	x11, [sp, #8]
   2b7f0:	add	x11, x11, #0x2
   2b7f4:	add	x10, x10, x11
   2b7f8:	strb	w8, [x10]
   2b7fc:	ldr	w8, [sp]
   2b800:	ldr	x10, [sp, #24]
   2b804:	ldr	x11, [sp, #8]
   2b808:	add	x11, x11, #0x3
   2b80c:	add	x10, x10, x11
   2b810:	strb	w8, [x10]
   2b814:	ldr	x8, [sp, #8]
   2b818:	add	x8, x8, #0x4
   2b81c:	str	x8, [sp, #8]
   2b820:	b	2b65c <lzma_mode_is_supported@@XZ_5.0+0x110f4>
   2b824:	ldr	x0, [sp, #8]
   2b828:	add	sp, sp, #0x30
   2b82c:	ret

Disassembly of section .fini:

000000000002b830 <.fini>:
   2b830:	stp	x29, x30, [sp, #-16]!
   2b834:	mov	x29, sp
   2b838:	ldp	x29, x30, [sp], #16
   2b83c:	ret
