
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__sha1@@Base+0x1110c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__sha1@@Base-0xd4>:
     e20:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 13000 <PyInit__sha1@@Base+0x1210c>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 13000 <PyInit__sha1@@Base+0x1210c>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 12000 <PyInit__sha1@@Base+0x1110c>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 13000 <PyInit__sha1@@Base+0x1210c>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 13000 <PyInit__sha1@@Base+0x1210c>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 12000 <PyInit__sha1@@Base+0x1110c>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 13000 <PyInit__sha1@@Base+0x1210c>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 13000 <PyInit__sha1@@Base+0x1210c>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>

0000000000000ef4 <PyInit__sha1@@Base>:
     ef4:	sub	sp, sp, #0x30
     ef8:	stp	x29, x30, [sp, #32]
     efc:	add	x29, sp, #0x20
     f00:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
     f04:	ldr	x8, [x8, #4048]
     f08:	adrp	x9, 13000 <PyInit__sha1@@Base+0x1210c>
     f0c:	add	x9, x9, #0x98
     f10:	str	x8, [x9, #8]
     f14:	mov	x0, x9
     f18:	str	x9, [sp, #8]
     f1c:	bl	d80 <PyType_Ready@plt>
     f20:	cmp	w0, #0x0
     f24:	cset	w10, ge  // ge = tcont
     f28:	tbnz	w10, #0, f38 <PyInit__sha1@@Base+0x44>
     f2c:	mov	x8, xzr
     f30:	stur	x8, [x29, #-8]
     f34:	b	f84 <PyInit__sha1@@Base+0x90>
     f38:	adrp	x0, 13000 <PyInit__sha1@@Base+0x1210c>
     f3c:	add	x0, x0, #0x238
     f40:	mov	w1, #0x3f5                 	// #1013
     f44:	bl	dc0 <PyModule_Create2@plt>
     f48:	str	x0, [sp, #16]
     f4c:	ldr	x8, [sp, #16]
     f50:	cbnz	x8, f60 <PyInit__sha1@@Base+0x6c>
     f54:	mov	x8, xzr
     f58:	stur	x8, [x29, #-8]
     f5c:	b	f84 <PyInit__sha1@@Base+0x90>
     f60:	ldr	x0, [sp, #8]
     f64:	bl	f94 <PyInit__sha1@@Base+0xa0>
     f68:	ldr	x0, [sp, #16]
     f6c:	adrp	x1, 2000 <PyInit__sha1@@Base+0x110c>
     f70:	add	x1, x1, #0xa48
     f74:	ldr	x2, [sp, #8]
     f78:	bl	df0 <PyModule_AddObject@plt>
     f7c:	ldr	x8, [sp, #16]
     f80:	stur	x8, [x29, #-8]
     f84:	ldur	x0, [x29, #-8]
     f88:	ldp	x29, x30, [sp, #32]
     f8c:	add	sp, sp, #0x30
     f90:	ret
     f94:	sub	sp, sp, #0x10
     f98:	str	x0, [sp, #8]
     f9c:	ldr	x8, [sp, #8]
     fa0:	ldr	x9, [x8]
     fa4:	add	x9, x9, #0x1
     fa8:	str	x9, [x8]
     fac:	add	sp, sp, #0x10
     fb0:	ret
     fb4:	sub	sp, sp, #0x20
     fb8:	stp	x29, x30, [sp, #16]
     fbc:	add	x29, sp, #0x10
     fc0:	str	x0, [sp, #8]
     fc4:	ldr	x0, [sp, #8]
     fc8:	bl	d70 <PyObject_Free@plt>
     fcc:	ldp	x29, x30, [sp, #16]
     fd0:	add	sp, sp, #0x20
     fd4:	ret
     fd8:	sub	sp, sp, #0x20
     fdc:	stp	x29, x30, [sp, #16]
     fe0:	add	x29, sp, #0x10
     fe4:	str	x0, [sp, #8]
     fe8:	str	x1, [sp]
     fec:	ldr	x0, [sp, #8]
     ff0:	bl	1198 <PyInit__sha1@@Base+0x2a4>
     ff4:	ldp	x29, x30, [sp, #16]
     ff8:	add	sp, sp, #0x20
     ffc:	ret
    1000:	sub	sp, sp, #0x20
    1004:	stp	x29, x30, [sp, #16]
    1008:	add	x29, sp, #0x10
    100c:	str	x0, [sp, #8]
    1010:	str	x1, [sp]
    1014:	ldr	x0, [sp, #8]
    1018:	bl	120c <PyInit__sha1@@Base+0x318>
    101c:	ldp	x29, x30, [sp, #16]
    1020:	add	sp, sp, #0x20
    1024:	ret
    1028:	sub	sp, sp, #0x20
    102c:	stp	x29, x30, [sp, #16]
    1030:	add	x29, sp, #0x10
    1034:	str	x0, [sp, #8]
    1038:	str	x1, [sp]
    103c:	ldr	x0, [sp, #8]
    1040:	bl	2444 <PyInit__sha1@@Base+0x1550>
    1044:	ldp	x29, x30, [sp, #16]
    1048:	add	sp, sp, #0x20
    104c:	ret
    1050:	sub	sp, sp, #0x90
    1054:	stp	x29, x30, [sp, #128]
    1058:	add	x29, sp, #0x80
    105c:	stur	x0, [x29, #-16]
    1060:	stur	x1, [x29, #-24]
    1064:	ldur	x8, [x29, #-24]
    1068:	ldr	x8, [x8, #8]
    106c:	ldr	x8, [x8, #168]
    1070:	and	x8, x8, #0x10000000
    1074:	cbz	x8, 109c <PyInit__sha1@@Base+0x1a8>
    1078:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
    107c:	ldr	x8, [x8, #4032]
    1080:	ldr	x0, [x8]
    1084:	adrp	x1, 2000 <PyInit__sha1@@Base+0x110c>
    1088:	add	x1, x1, #0xa72
    108c:	bl	d60 <PyErr_SetString@plt>
    1090:	mov	x8, xzr
    1094:	stur	x8, [x29, #-8]
    1098:	b	1188 <PyInit__sha1@@Base+0x294>
    109c:	ldur	x8, [x29, #-24]
    10a0:	ldr	x8, [x8, #8]
    10a4:	ldr	x8, [x8, #160]
    10a8:	cbz	x8, 10c0 <PyInit__sha1@@Base+0x1cc>
    10ac:	ldur	x8, [x29, #-24]
    10b0:	ldr	x8, [x8, #8]
    10b4:	ldr	x8, [x8, #160]
    10b8:	ldr	x8, [x8]
    10bc:	cbnz	x8, 10e4 <PyInit__sha1@@Base+0x1f0>
    10c0:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
    10c4:	ldr	x8, [x8, #4032]
    10c8:	ldr	x0, [x8]
    10cc:	adrp	x1, 2000 <PyInit__sha1@@Base+0x110c>
    10d0:	add	x1, x1, #0xaa1
    10d4:	bl	d60 <PyErr_SetString@plt>
    10d8:	mov	x8, xzr
    10dc:	stur	x8, [x29, #-8]
    10e0:	b	1188 <PyInit__sha1@@Base+0x294>
    10e4:	ldur	x0, [x29, #-24]
    10e8:	add	x1, sp, #0x18
    10ec:	mov	w8, wzr
    10f0:	mov	w2, w8
    10f4:	bl	dd0 <PyObject_GetBuffer@plt>
    10f8:	mov	w8, #0xffffffff            	// #-1
    10fc:	cmp	w0, w8
    1100:	b.ne	1110 <PyInit__sha1@@Base+0x21c>  // b.any
    1104:	mov	x8, xzr
    1108:	stur	x8, [x29, #-8]
    110c:	b	1188 <PyInit__sha1@@Base+0x294>
    1110:	ldr	w8, [sp, #60]
    1114:	cmp	w8, #0x1
    1118:	b.le	1148 <PyInit__sha1@@Base+0x254>
    111c:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
    1120:	ldr	x8, [x8, #4024]
    1124:	ldr	x0, [x8]
    1128:	adrp	x1, 2000 <PyInit__sha1@@Base+0x110c>
    112c:	add	x1, x1, #0xacb
    1130:	bl	d60 <PyErr_SetString@plt>
    1134:	add	x0, sp, #0x18
    1138:	bl	d10 <PyBuffer_Release@plt>
    113c:	mov	x8, xzr
    1140:	stur	x8, [x29, #-8]
    1144:	b	1188 <PyInit__sha1@@Base+0x294>
    1148:	ldur	x8, [x29, #-16]
    114c:	add	x0, x8, #0x10
    1150:	add	x8, sp, #0x18
    1154:	ldr	x1, [sp, #24]
    1158:	ldr	x2, [sp, #40]
    115c:	str	x8, [sp, #16]
    1160:	bl	24a8 <PyInit__sha1@@Base+0x15b4>
    1164:	ldr	x0, [sp, #16]
    1168:	bl	d10 <PyBuffer_Release@plt>
    116c:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
    1170:	ldr	x8, [x8, #4056]
    1174:	mov	x0, x8
    1178:	str	x8, [sp, #8]
    117c:	bl	f94 <PyInit__sha1@@Base+0xa0>
    1180:	ldr	x8, [sp, #8]
    1184:	stur	x8, [x29, #-8]
    1188:	ldur	x0, [x29, #-8]
    118c:	ldp	x29, x30, [sp, #128]
    1190:	add	sp, sp, #0x90
    1194:	ret
    1198:	sub	sp, sp, #0x30
    119c:	stp	x29, x30, [sp, #32]
    11a0:	add	x29, sp, #0x20
    11a4:	str	x0, [sp, #16]
    11a8:	bl	11f0 <PyInit__sha1@@Base+0x2fc>
    11ac:	str	x0, [sp, #8]
    11b0:	cbnz	x0, 11c0 <PyInit__sha1@@Base+0x2cc>
    11b4:	mov	x8, xzr
    11b8:	stur	x8, [x29, #-8]
    11bc:	b	11e0 <PyInit__sha1@@Base+0x2ec>
    11c0:	ldr	x8, [sp, #8]
    11c4:	add	x0, x8, #0x10
    11c8:	ldr	x8, [sp, #16]
    11cc:	add	x1, x8, #0x10
    11d0:	mov	x2, #0x60                  	// #96
    11d4:	bl	d00 <memcpy@plt>
    11d8:	ldr	x8, [sp, #8]
    11dc:	stur	x8, [x29, #-8]
    11e0:	ldur	x0, [x29, #-8]
    11e4:	ldp	x29, x30, [sp, #32]
    11e8:	add	sp, sp, #0x30
    11ec:	ret
    11f0:	stp	x29, x30, [sp, #-16]!
    11f4:	mov	x29, sp
    11f8:	adrp	x0, 13000 <PyInit__sha1@@Base+0x1210c>
    11fc:	add	x0, x0, #0x98
    1200:	bl	de0 <_PyObject_New@plt>
    1204:	ldp	x29, x30, [sp], #16
    1208:	ret
    120c:	sub	sp, sp, #0xb0
    1210:	stp	x29, x30, [sp, #160]
    1214:	add	x29, sp, #0xa0
    1218:	mov	x2, #0x60                  	// #96
    121c:	mov	x1, #0x14                  	// #20
    1220:	sub	x8, x29, #0x1c
    1224:	add	x9, sp, #0x20
    1228:	stur	x0, [x29, #-8]
    122c:	ldur	x10, [x29, #-8]
    1230:	add	x10, x10, #0x10
    1234:	mov	x0, x9
    1238:	str	x1, [sp, #24]
    123c:	mov	x1, x10
    1240:	str	x8, [sp, #16]
    1244:	str	x9, [sp, #8]
    1248:	bl	d00 <memcpy@plt>
    124c:	ldr	x0, [sp, #8]
    1250:	ldr	x1, [sp, #16]
    1254:	bl	1270 <PyInit__sha1@@Base+0x37c>
    1258:	ldr	x0, [sp, #16]
    125c:	ldr	x1, [sp, #24]
    1260:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1264:	ldp	x29, x30, [sp, #160]
    1268:	add	sp, sp, #0xb0
    126c:	ret
    1270:	sub	sp, sp, #0x30
    1274:	stp	x29, x30, [sp, #32]
    1278:	add	x29, sp, #0x20
    127c:	mov	w8, #0x8                   	// #8
    1280:	mov	w9, #0x80                  	// #128
    1284:	stur	x0, [x29, #-8]
    1288:	str	x1, [sp, #16]
    128c:	ldur	x10, [x29, #-8]
    1290:	ldr	w11, [x10, #28]
    1294:	mul	w8, w11, w8
    1298:	mov	w10, w8
    129c:	ubfx	x10, x10, #0, #32
    12a0:	ldur	x12, [x29, #-8]
    12a4:	ldr	x13, [x12]
    12a8:	add	x10, x13, x10
    12ac:	str	x10, [x12]
    12b0:	ldur	x10, [x29, #-8]
    12b4:	add	x10, x10, #0x20
    12b8:	ldur	x12, [x29, #-8]
    12bc:	ldr	w8, [x12, #28]
    12c0:	mov	w13, w8
    12c4:	mov	w8, w13
    12c8:	add	w8, w8, #0x1
    12cc:	str	w8, [x12, #28]
    12d0:	add	x10, x10, x13
    12d4:	strb	w9, [x10]
    12d8:	ldur	x10, [x29, #-8]
    12dc:	ldr	w8, [x10, #28]
    12e0:	cmp	w8, #0x38
    12e4:	b.ls	1340 <PyInit__sha1@@Base+0x44c>  // b.plast
    12e8:	ldur	x8, [x29, #-8]
    12ec:	ldr	w9, [x8, #28]
    12f0:	cmp	w9, #0x40
    12f4:	b.cs	1328 <PyInit__sha1@@Base+0x434>  // b.hs, b.nlast
    12f8:	ldur	x8, [x29, #-8]
    12fc:	add	x8, x8, #0x20
    1300:	ldur	x9, [x29, #-8]
    1304:	ldr	w10, [x9, #28]
    1308:	mov	w11, w10
    130c:	mov	w10, w11
    1310:	add	w10, w10, #0x1
    1314:	str	w10, [x9, #28]
    1318:	add	x8, x8, x11
    131c:	mov	w10, #0x0                   	// #0
    1320:	strb	w10, [x8]
    1324:	b	12e8 <PyInit__sha1@@Base+0x3f4>
    1328:	ldur	x0, [x29, #-8]
    132c:	ldur	x8, [x29, #-8]
    1330:	add	x1, x8, #0x20
    1334:	bl	154c <PyInit__sha1@@Base+0x658>
    1338:	ldur	x8, [x29, #-8]
    133c:	str	wzr, [x8, #28]
    1340:	ldur	x8, [x29, #-8]
    1344:	ldr	w9, [x8, #28]
    1348:	cmp	w9, #0x38
    134c:	b.cs	1380 <PyInit__sha1@@Base+0x48c>  // b.hs, b.nlast
    1350:	ldur	x8, [x29, #-8]
    1354:	add	x8, x8, #0x20
    1358:	ldur	x9, [x29, #-8]
    135c:	ldr	w10, [x9, #28]
    1360:	mov	w11, w10
    1364:	mov	w10, w11
    1368:	add	w10, w10, #0x1
    136c:	str	w10, [x9, #28]
    1370:	add	x8, x8, x11
    1374:	mov	w10, #0x0                   	// #0
    1378:	strb	w10, [x8]
    137c:	b	1340 <PyInit__sha1@@Base+0x44c>
    1380:	ldur	x8, [x29, #-8]
    1384:	ldr	x8, [x8]
    1388:	asr	x8, x8, #56
    138c:	and	x8, x8, #0xff
    1390:	ldur	x9, [x29, #-8]
    1394:	strb	w8, [x9, #88]
    1398:	ldur	x9, [x29, #-8]
    139c:	ldr	x9, [x9]
    13a0:	asr	x9, x9, #48
    13a4:	and	x9, x9, #0xff
    13a8:	ldur	x10, [x29, #-8]
    13ac:	strb	w9, [x10, #89]
    13b0:	ldur	x10, [x29, #-8]
    13b4:	ldr	x10, [x10]
    13b8:	asr	x10, x10, #40
    13bc:	and	x10, x10, #0xff
    13c0:	ldur	x11, [x29, #-8]
    13c4:	strb	w10, [x11, #90]
    13c8:	ldur	x11, [x29, #-8]
    13cc:	ldr	x11, [x11]
    13d0:	asr	x11, x11, #32
    13d4:	and	x11, x11, #0xff
    13d8:	ldur	x12, [x29, #-8]
    13dc:	strb	w11, [x12, #91]
    13e0:	ldur	x12, [x29, #-8]
    13e4:	ldr	x12, [x12]
    13e8:	asr	x12, x12, #24
    13ec:	and	x12, x12, #0xff
    13f0:	ldur	x13, [x29, #-8]
    13f4:	strb	w12, [x13, #92]
    13f8:	ldur	x13, [x29, #-8]
    13fc:	ldr	x13, [x13]
    1400:	asr	x13, x13, #16
    1404:	and	x13, x13, #0xff
    1408:	ldur	x14, [x29, #-8]
    140c:	strb	w13, [x14, #93]
    1410:	ldur	x14, [x29, #-8]
    1414:	ldr	x14, [x14]
    1418:	asr	x14, x14, #8
    141c:	and	x14, x14, #0xff
    1420:	ldur	x15, [x29, #-8]
    1424:	strb	w14, [x15, #94]
    1428:	ldur	x15, [x29, #-8]
    142c:	ldr	x15, [x15]
    1430:	and	x15, x15, #0xff
    1434:	ldur	x16, [x29, #-8]
    1438:	strb	w15, [x16, #95]
    143c:	ldur	x0, [x29, #-8]
    1440:	ldur	x16, [x29, #-8]
    1444:	add	x1, x16, #0x20
    1448:	bl	154c <PyInit__sha1@@Base+0x658>
    144c:	str	wzr, [sp, #12]
    1450:	ldr	w8, [sp, #12]
    1454:	cmp	w8, #0x5
    1458:	b.ge	1540 <PyInit__sha1@@Base+0x64c>  // b.tcont
    145c:	ldur	x8, [x29, #-8]
    1460:	mov	x9, #0x8                   	// #8
    1464:	add	x8, x8, #0x8
    1468:	ldrsw	x10, [sp, #12]
    146c:	ldr	w11, [x8, x10, lsl #2]
    1470:	lsr	w11, w11, #24
    1474:	and	w11, w11, #0xff
    1478:	ldr	x8, [sp, #16]
    147c:	ldr	w12, [sp, #12]
    1480:	mov	w13, #0x4                   	// #4
    1484:	mul	w12, w13, w12
    1488:	mov	w0, w12
    148c:	sxtw	x10, w0
    1490:	add	x8, x8, x10
    1494:	strb	w11, [x8]
    1498:	ldur	x8, [x29, #-8]
    149c:	add	x8, x8, #0x8
    14a0:	ldrsw	x10, [sp, #12]
    14a4:	ldr	w11, [x8, x10, lsl #2]
    14a8:	lsr	w11, w11, #16
    14ac:	and	w11, w11, #0xff
    14b0:	ldr	x8, [sp, #16]
    14b4:	ldr	w12, [sp, #12]
    14b8:	mul	w12, w13, w12
    14bc:	mov	w0, w12
    14c0:	sxtw	x10, w0
    14c4:	add	x8, x8, x10
    14c8:	strb	w11, [x8, #1]
    14cc:	ldur	x8, [x29, #-8]
    14d0:	add	x8, x8, #0x8
    14d4:	ldrsw	x10, [sp, #12]
    14d8:	ldr	w11, [x8, x10, lsl #2]
    14dc:	lsr	w9, w11, w9
    14e0:	and	w9, w9, #0xff
    14e4:	ldr	x8, [sp, #16]
    14e8:	ldr	w11, [sp, #12]
    14ec:	mul	w11, w13, w11
    14f0:	mov	w0, w11
    14f4:	sxtw	x10, w0
    14f8:	add	x8, x8, x10
    14fc:	strb	w9, [x8, #2]
    1500:	ldur	x8, [x29, #-8]
    1504:	add	x8, x8, #0x8
    1508:	ldrsw	x10, [sp, #12]
    150c:	ldr	w9, [x8, x10, lsl #2]
    1510:	and	w9, w9, #0xff
    1514:	ldr	x8, [sp, #16]
    1518:	ldr	w11, [sp, #12]
    151c:	mul	w11, w13, w11
    1520:	mov	w0, w11
    1524:	sxtw	x10, w0
    1528:	add	x8, x8, x10
    152c:	strb	w9, [x8, #3]
    1530:	ldr	w8, [sp, #12]
    1534:	add	w8, w8, #0x1
    1538:	str	w8, [sp, #12]
    153c:	b	1450 <PyInit__sha1@@Base+0x55c>
    1540:	ldp	x29, x30, [sp, #32]
    1544:	add	sp, sp, #0x30
    1548:	ret
    154c:	sub	sp, sp, #0x190
    1550:	str	x29, [sp, #368]
    1554:	stp	x20, x19, [sp, #384]
    1558:	str	x0, [sp, #360]
    155c:	str	x1, [sp, #352]
    1560:	str	wzr, [sp, #8]
    1564:	ldr	w8, [sp, #8]
    1568:	cmp	w8, #0x10
    156c:	b.cs	1638 <PyInit__sha1@@Base+0x744>  // b.hs, b.nlast
    1570:	ldr	x8, [sp, #352]
    1574:	ldr	w9, [sp, #8]
    1578:	mov	w10, #0x4                   	// #4
    157c:	mul	w9, w10, w9
    1580:	ldrb	w9, [x8, w9, uxtw]
    1584:	and	w9, w9, #0xff
    1588:	mov	w0, w9
    158c:	sxtw	x8, w0
    1590:	ldr	x11, [sp, #352]
    1594:	ldr	w9, [sp, #8]
    1598:	mul	w9, w10, w9
    159c:	mov	w12, w9
    15a0:	ubfx	x12, x12, #0, #32
    15a4:	add	x11, x11, x12
    15a8:	ldrb	w9, [x11, #1]
    15ac:	and	w9, w9, #0xff
    15b0:	mov	w0, w9
    15b4:	sxtw	x11, w0
    15b8:	lsl	x11, x11, #16
    15bc:	orr	x8, x11, x8, lsl #24
    15c0:	ldr	x11, [sp, #352]
    15c4:	ldr	w9, [sp, #8]
    15c8:	mul	w9, w10, w9
    15cc:	mov	w12, w9
    15d0:	ubfx	x12, x12, #0, #32
    15d4:	add	x11, x11, x12
    15d8:	ldrb	w9, [x11, #2]
    15dc:	and	w9, w9, #0xff
    15e0:	mov	w0, w9
    15e4:	sxtw	x11, w0
    15e8:	orr	x8, x8, x11, lsl #8
    15ec:	ldr	x11, [sp, #352]
    15f0:	ldr	w9, [sp, #8]
    15f4:	mul	w9, w10, w9
    15f8:	mov	w12, w9
    15fc:	ubfx	x12, x12, #0, #32
    1600:	add	x11, x11, x12
    1604:	ldrb	w9, [x11, #3]
    1608:	and	w9, w9, #0xff
    160c:	mov	w0, w9
    1610:	sxtw	x11, w0
    1614:	orr	x8, x8, x11
    1618:	ldr	w9, [sp, #8]
    161c:	mov	w11, w9
    1620:	add	x12, sp, #0xc
    1624:	str	w8, [x12, x11, lsl #2]
    1628:	ldr	w8, [sp, #8]
    162c:	add	w8, w8, #0x1
    1630:	str	w8, [sp, #8]
    1634:	b	1564 <PyInit__sha1@@Base+0x670>
    1638:	ldr	x8, [sp, #360]
    163c:	ldr	w9, [x8, #8]
    1640:	str	w9, [sp, #348]
    1644:	ldr	x8, [sp, #360]
    1648:	ldr	w9, [x8, #12]
    164c:	str	w9, [sp, #344]
    1650:	ldr	x8, [sp, #360]
    1654:	ldr	w9, [x8, #16]
    1658:	str	w9, [sp, #340]
    165c:	ldr	x8, [sp, #360]
    1660:	ldr	w9, [x8, #20]
    1664:	str	w9, [sp, #336]
    1668:	ldr	x8, [sp, #360]
    166c:	ldr	w9, [x8, #24]
    1670:	str	w9, [sp, #332]
    1674:	mov	w9, #0x10                  	// #16
    1678:	str	w9, [sp, #8]
    167c:	ldr	w8, [sp, #8]
    1680:	cmp	w8, #0x50
    1684:	b.cs	1740 <PyInit__sha1@@Base+0x84c>  // b.hs, b.nlast
    1688:	ldr	w8, [sp, #8]
    168c:	subs	w8, w8, #0x3
    1690:	add	x9, sp, #0xc
    1694:	ldr	w8, [x9, w8, uxtw #2]
    1698:	ldr	w10, [sp, #8]
    169c:	subs	w10, w10, #0x8
    16a0:	ldr	w10, [x9, w10, uxtw #2]
    16a4:	eor	w8, w8, w10
    16a8:	ldr	w10, [sp, #8]
    16ac:	subs	w10, w10, #0xe
    16b0:	ldr	w10, [x9, w10, uxtw #2]
    16b4:	eor	w8, w8, w10
    16b8:	ldr	w10, [sp, #8]
    16bc:	subs	w10, w10, #0x10
    16c0:	ldr	w10, [x9, w10, uxtw #2]
    16c4:	eor	w8, w8, w10
    16c8:	mov	w11, w8
    16cc:	ubfx	x11, x11, #0, #32
    16d0:	ldr	w8, [sp, #8]
    16d4:	subs	w8, w8, #0x3
    16d8:	ldr	w8, [x9, w8, uxtw #2]
    16dc:	ldr	w10, [sp, #8]
    16e0:	subs	w10, w10, #0x8
    16e4:	ldr	w10, [x9, w10, uxtw #2]
    16e8:	eor	w8, w8, w10
    16ec:	ldr	w10, [sp, #8]
    16f0:	subs	w10, w10, #0xe
    16f4:	ldr	w10, [x9, w10, uxtw #2]
    16f8:	eor	w8, w8, w10
    16fc:	ldr	w10, [sp, #8]
    1700:	subs	w10, w10, #0x10
    1704:	ldr	w10, [x9, w10, uxtw #2]
    1708:	eor	w8, w8, w10
    170c:	mov	w12, w8
    1710:	ubfx	x12, x12, #0, #32
    1714:	and	x12, x12, #0xffffffff
    1718:	lsr	x12, x12, #31
    171c:	orr	x11, x12, x11, lsl #1
    1720:	and	x11, x11, #0xffffffff
    1724:	ldr	w8, [sp, #8]
    1728:	mov	w12, w8
    172c:	str	w11, [x9, x12, lsl #2]
    1730:	ldr	w8, [sp, #8]
    1734:	add	w8, w8, #0x1
    1738:	str	w8, [sp, #8]
    173c:	b	167c <PyInit__sha1@@Base+0x788>
    1740:	str	wzr, [sp, #8]
    1744:	ldr	w8, [sp, #8]
    1748:	cmp	w8, #0x14
    174c:	b.cs	1a6c <PyInit__sha1@@Base+0xb78>  // b.hs, b.nlast
    1750:	ldr	w8, [sp, #348]
    1754:	mov	w9, w8
    1758:	ldr	w8, [sp, #348]
    175c:	mov	w10, w8
    1760:	and	x10, x10, #0xffffffff
    1764:	lsr	x10, x10, #27
    1768:	orr	x9, x10, x9, lsl #5
    176c:	ldr	w8, [sp, #336]
    1770:	ldr	w11, [sp, #344]
    1774:	ldr	w12, [sp, #340]
    1778:	ldr	w13, [sp, #336]
    177c:	eor	w12, w12, w13
    1780:	and	w11, w11, w12
    1784:	eor	w8, w8, w11
    1788:	mov	w10, w8
    178c:	ubfx	x10, x10, #0, #32
    1790:	add	x10, x10, w9, uxtw
    1794:	ldr	w8, [sp, #332]
    1798:	mov	w14, w8
    179c:	add	x10, x10, x14
    17a0:	ldr	w8, [sp, #8]
    17a4:	mov	w14, w8
    17a8:	mov	w8, w14
    17ac:	add	w8, w8, #0x1
    17b0:	str	w8, [sp, #8]
    17b4:	add	x15, sp, #0xc
    17b8:	ldr	w8, [x15, x14, lsl #2]
    17bc:	mov	w14, w8
    17c0:	add	x10, x10, x14
    17c4:	mov	x14, #0x7999                	// #31129
    17c8:	movk	x14, #0x5a82, lsl #16
    17cc:	add	x10, x10, x14
    17d0:	str	w10, [sp, #332]
    17d4:	ldr	w8, [sp, #344]
    17d8:	mov	w16, w8
    17dc:	ldr	w8, [sp, #344]
    17e0:	mov	w17, w8
    17e4:	and	x17, x17, #0xffffffff
    17e8:	lsr	x17, x17, #2
    17ec:	orr	x16, x17, x16, lsl #30
    17f0:	and	x16, x16, #0xffffffff
    17f4:	str	w16, [sp, #344]
    17f8:	ldr	w8, [sp, #332]
    17fc:	mov	w17, w8
    1800:	ldr	w8, [sp, #332]
    1804:	mov	w18, w8
    1808:	and	x18, x18, #0xffffffff
    180c:	lsr	x18, x18, #27
    1810:	orr	x17, x18, x17, lsl #5
    1814:	ldr	w8, [sp, #340]
    1818:	ldr	w9, [sp, #348]
    181c:	ldr	w10, [sp, #344]
    1820:	ldr	w11, [sp, #340]
    1824:	eor	w10, w10, w11
    1828:	and	w9, w9, w10
    182c:	eor	w8, w8, w9
    1830:	mov	w18, w8
    1834:	ubfx	x18, x18, #0, #32
    1838:	add	x18, x18, w17, uxtw
    183c:	ldr	w8, [sp, #336]
    1840:	mov	w0, w8
    1844:	add	x18, x18, x0
    1848:	ldr	w8, [sp, #8]
    184c:	mov	w0, w8
    1850:	mov	w8, w0
    1854:	add	w8, w8, #0x1
    1858:	str	w8, [sp, #8]
    185c:	ldr	w8, [x15, x0, lsl #2]
    1860:	mov	w0, w8
    1864:	add	x18, x18, x0
    1868:	add	x18, x18, x14
    186c:	str	w18, [sp, #336]
    1870:	ldr	w8, [sp, #348]
    1874:	mov	w0, w8
    1878:	ldr	w8, [sp, #348]
    187c:	mov	w1, w8
    1880:	and	x1, x1, #0xffffffff
    1884:	lsr	x1, x1, #2
    1888:	orr	x0, x1, x0, lsl #30
    188c:	and	x0, x0, #0xffffffff
    1890:	str	w0, [sp, #348]
    1894:	ldr	w8, [sp, #336]
    1898:	mov	w1, w8
    189c:	ldr	w8, [sp, #336]
    18a0:	mov	w2, w8
    18a4:	and	x2, x2, #0xffffffff
    18a8:	lsr	x2, x2, #27
    18ac:	orr	x1, x2, x1, lsl #5
    18b0:	ldr	w8, [sp, #344]
    18b4:	ldr	w9, [sp, #332]
    18b8:	ldr	w10, [sp, #348]
    18bc:	ldr	w11, [sp, #344]
    18c0:	eor	w10, w10, w11
    18c4:	and	w9, w9, w10
    18c8:	eor	w8, w8, w9
    18cc:	mov	w2, w8
    18d0:	ubfx	x2, x2, #0, #32
    18d4:	add	x2, x2, w1, uxtw
    18d8:	ldr	w8, [sp, #340]
    18dc:	mov	w3, w8
    18e0:	add	x2, x2, x3
    18e4:	ldr	w8, [sp, #8]
    18e8:	mov	w3, w8
    18ec:	mov	w8, w3
    18f0:	add	w8, w8, #0x1
    18f4:	str	w8, [sp, #8]
    18f8:	ldr	w8, [x15, x3, lsl #2]
    18fc:	mov	w3, w8
    1900:	add	x2, x2, x3
    1904:	add	x2, x2, x14
    1908:	str	w2, [sp, #340]
    190c:	ldr	w8, [sp, #332]
    1910:	mov	w3, w8
    1914:	ldr	w8, [sp, #332]
    1918:	mov	w4, w8
    191c:	and	x4, x4, #0xffffffff
    1920:	lsr	x4, x4, #2
    1924:	orr	x3, x4, x3, lsl #30
    1928:	and	x3, x3, #0xffffffff
    192c:	str	w3, [sp, #332]
    1930:	ldr	w8, [sp, #340]
    1934:	mov	w4, w8
    1938:	ldr	w8, [sp, #340]
    193c:	mov	w5, w8
    1940:	and	x5, x5, #0xffffffff
    1944:	lsr	x5, x5, #27
    1948:	orr	x4, x5, x4, lsl #5
    194c:	ldr	w8, [sp, #348]
    1950:	ldr	w9, [sp, #336]
    1954:	ldr	w10, [sp, #332]
    1958:	ldr	w11, [sp, #348]
    195c:	eor	w10, w10, w11
    1960:	and	w9, w9, w10
    1964:	eor	w8, w8, w9
    1968:	mov	w5, w8
    196c:	ubfx	x5, x5, #0, #32
    1970:	add	x5, x5, w4, uxtw
    1974:	ldr	w8, [sp, #344]
    1978:	mov	w6, w8
    197c:	add	x5, x5, x6
    1980:	ldr	w8, [sp, #8]
    1984:	mov	w6, w8
    1988:	mov	w8, w6
    198c:	add	w8, w8, #0x1
    1990:	str	w8, [sp, #8]
    1994:	ldr	w8, [x15, x6, lsl #2]
    1998:	mov	w6, w8
    199c:	add	x5, x5, x6
    19a0:	add	x5, x5, x14
    19a4:	str	w5, [sp, #344]
    19a8:	ldr	w8, [sp, #336]
    19ac:	mov	w6, w8
    19b0:	ldr	w8, [sp, #336]
    19b4:	mov	w7, w8
    19b8:	and	x7, x7, #0xffffffff
    19bc:	lsr	x7, x7, #2
    19c0:	orr	x6, x7, x6, lsl #30
    19c4:	and	x6, x6, #0xffffffff
    19c8:	str	w6, [sp, #336]
    19cc:	ldr	w8, [sp, #344]
    19d0:	mov	w7, w8
    19d4:	ldr	w8, [sp, #344]
    19d8:	mov	w19, w8
    19dc:	and	x19, x19, #0xffffffff
    19e0:	lsr	x19, x19, #27
    19e4:	orr	x7, x19, x7, lsl #5
    19e8:	ldr	w8, [sp, #332]
    19ec:	ldr	w9, [sp, #340]
    19f0:	ldr	w10, [sp, #336]
    19f4:	ldr	w11, [sp, #332]
    19f8:	eor	w10, w10, w11
    19fc:	and	w9, w9, w10
    1a00:	eor	w8, w8, w9
    1a04:	mov	w19, w8
    1a08:	ubfx	x19, x19, #0, #32
    1a0c:	add	x19, x19, w7, uxtw
    1a10:	ldr	w8, [sp, #348]
    1a14:	mov	w20, w8
    1a18:	add	x19, x19, x20
    1a1c:	ldr	w8, [sp, #8]
    1a20:	mov	w20, w8
    1a24:	mov	w8, w20
    1a28:	add	w8, w8, #0x1
    1a2c:	str	w8, [sp, #8]
    1a30:	ldr	w8, [x15, x20, lsl #2]
    1a34:	mov	w15, w8
    1a38:	add	x15, x19, x15
    1a3c:	add	x14, x15, x14
    1a40:	str	w14, [sp, #348]
    1a44:	ldr	w8, [sp, #340]
    1a48:	mov	w15, w8
    1a4c:	ldr	w8, [sp, #340]
    1a50:	mov	w19, w8
    1a54:	and	x19, x19, #0xffffffff
    1a58:	lsr	x19, x19, #2
    1a5c:	orr	x15, x19, x15, lsl #30
    1a60:	and	x15, x15, #0xffffffff
    1a64:	str	w15, [sp, #340]
    1a68:	b	1744 <PyInit__sha1@@Base+0x850>
    1a6c:	ldr	w8, [sp, #8]
    1a70:	cmp	w8, #0x28
    1a74:	b.cs	1d6c <PyInit__sha1@@Base+0xe78>  // b.hs, b.nlast
    1a78:	ldr	w8, [sp, #348]
    1a7c:	mov	w9, w8
    1a80:	ldr	w8, [sp, #348]
    1a84:	mov	w10, w8
    1a88:	and	x10, x10, #0xffffffff
    1a8c:	lsr	x10, x10, #27
    1a90:	orr	x9, x10, x9, lsl #5
    1a94:	ldr	w8, [sp, #344]
    1a98:	ldr	w11, [sp, #340]
    1a9c:	eor	w8, w8, w11
    1aa0:	ldr	w11, [sp, #336]
    1aa4:	eor	w8, w8, w11
    1aa8:	mov	w10, w8
    1aac:	ubfx	x10, x10, #0, #32
    1ab0:	add	x10, x10, w9, uxtw
    1ab4:	ldr	w8, [sp, #332]
    1ab8:	mov	w12, w8
    1abc:	add	x10, x10, x12
    1ac0:	ldr	w8, [sp, #8]
    1ac4:	mov	w12, w8
    1ac8:	mov	w8, w12
    1acc:	add	w8, w8, #0x1
    1ad0:	str	w8, [sp, #8]
    1ad4:	add	x13, sp, #0xc
    1ad8:	ldr	w8, [x13, x12, lsl #2]
    1adc:	mov	w12, w8
    1ae0:	add	x10, x10, x12
    1ae4:	mov	x12, #0xeba1                	// #60321
    1ae8:	movk	x12, #0x6ed9, lsl #16
    1aec:	add	x10, x10, x12
    1af0:	str	w10, [sp, #332]
    1af4:	ldr	w8, [sp, #344]
    1af8:	mov	w14, w8
    1afc:	ldr	w8, [sp, #344]
    1b00:	mov	w15, w8
    1b04:	and	x15, x15, #0xffffffff
    1b08:	lsr	x15, x15, #2
    1b0c:	orr	x14, x15, x14, lsl #30
    1b10:	and	x14, x14, #0xffffffff
    1b14:	str	w14, [sp, #344]
    1b18:	ldr	w8, [sp, #332]
    1b1c:	mov	w15, w8
    1b20:	ldr	w8, [sp, #332]
    1b24:	mov	w16, w8
    1b28:	and	x16, x16, #0xffffffff
    1b2c:	lsr	x16, x16, #27
    1b30:	orr	x15, x16, x15, lsl #5
    1b34:	ldr	w8, [sp, #348]
    1b38:	ldr	w9, [sp, #344]
    1b3c:	eor	w8, w8, w9
    1b40:	ldr	w9, [sp, #340]
    1b44:	eor	w8, w8, w9
    1b48:	mov	w16, w8
    1b4c:	ubfx	x16, x16, #0, #32
    1b50:	add	x16, x16, w15, uxtw
    1b54:	ldr	w8, [sp, #336]
    1b58:	mov	w17, w8
    1b5c:	add	x16, x16, x17
    1b60:	ldr	w8, [sp, #8]
    1b64:	mov	w17, w8
    1b68:	mov	w8, w17
    1b6c:	add	w8, w8, #0x1
    1b70:	str	w8, [sp, #8]
    1b74:	ldr	w8, [x13, x17, lsl #2]
    1b78:	mov	w17, w8
    1b7c:	add	x16, x16, x17
    1b80:	add	x16, x16, x12
    1b84:	str	w16, [sp, #336]
    1b88:	ldr	w8, [sp, #348]
    1b8c:	mov	w17, w8
    1b90:	ldr	w8, [sp, #348]
    1b94:	mov	w18, w8
    1b98:	and	x18, x18, #0xffffffff
    1b9c:	lsr	x18, x18, #2
    1ba0:	orr	x17, x18, x17, lsl #30
    1ba4:	and	x17, x17, #0xffffffff
    1ba8:	str	w17, [sp, #348]
    1bac:	ldr	w8, [sp, #336]
    1bb0:	mov	w18, w8
    1bb4:	ldr	w8, [sp, #336]
    1bb8:	mov	w0, w8
    1bbc:	and	x0, x0, #0xffffffff
    1bc0:	lsr	x0, x0, #27
    1bc4:	orr	x18, x0, x18, lsl #5
    1bc8:	ldr	w8, [sp, #332]
    1bcc:	ldr	w9, [sp, #348]
    1bd0:	eor	w8, w8, w9
    1bd4:	ldr	w9, [sp, #344]
    1bd8:	eor	w8, w8, w9
    1bdc:	mov	w0, w8
    1be0:	ubfx	x0, x0, #0, #32
    1be4:	add	x0, x0, w18, uxtw
    1be8:	ldr	w8, [sp, #340]
    1bec:	mov	w1, w8
    1bf0:	add	x0, x0, x1
    1bf4:	ldr	w8, [sp, #8]
    1bf8:	mov	w1, w8
    1bfc:	mov	w8, w1
    1c00:	add	w8, w8, #0x1
    1c04:	str	w8, [sp, #8]
    1c08:	ldr	w8, [x13, x1, lsl #2]
    1c0c:	mov	w1, w8
    1c10:	add	x0, x0, x1
    1c14:	add	x0, x0, x12
    1c18:	str	w0, [sp, #340]
    1c1c:	ldr	w8, [sp, #332]
    1c20:	mov	w1, w8
    1c24:	ldr	w8, [sp, #332]
    1c28:	mov	w2, w8
    1c2c:	and	x2, x2, #0xffffffff
    1c30:	lsr	x2, x2, #2
    1c34:	orr	x1, x2, x1, lsl #30
    1c38:	and	x1, x1, #0xffffffff
    1c3c:	str	w1, [sp, #332]
    1c40:	ldr	w8, [sp, #340]
    1c44:	mov	w2, w8
    1c48:	ldr	w8, [sp, #340]
    1c4c:	mov	w3, w8
    1c50:	and	x3, x3, #0xffffffff
    1c54:	lsr	x3, x3, #27
    1c58:	orr	x2, x3, x2, lsl #5
    1c5c:	ldr	w8, [sp, #336]
    1c60:	ldr	w9, [sp, #332]
    1c64:	eor	w8, w8, w9
    1c68:	ldr	w9, [sp, #348]
    1c6c:	eor	w8, w8, w9
    1c70:	mov	w3, w8
    1c74:	ubfx	x3, x3, #0, #32
    1c78:	add	x3, x3, w2, uxtw
    1c7c:	ldr	w8, [sp, #344]
    1c80:	mov	w4, w8
    1c84:	add	x3, x3, x4
    1c88:	ldr	w8, [sp, #8]
    1c8c:	mov	w4, w8
    1c90:	mov	w8, w4
    1c94:	add	w8, w8, #0x1
    1c98:	str	w8, [sp, #8]
    1c9c:	ldr	w8, [x13, x4, lsl #2]
    1ca0:	mov	w4, w8
    1ca4:	add	x3, x3, x4
    1ca8:	add	x3, x3, x12
    1cac:	str	w3, [sp, #344]
    1cb0:	ldr	w8, [sp, #336]
    1cb4:	mov	w4, w8
    1cb8:	ldr	w8, [sp, #336]
    1cbc:	mov	w5, w8
    1cc0:	and	x5, x5, #0xffffffff
    1cc4:	lsr	x5, x5, #2
    1cc8:	orr	x4, x5, x4, lsl #30
    1ccc:	and	x4, x4, #0xffffffff
    1cd0:	str	w4, [sp, #336]
    1cd4:	ldr	w8, [sp, #344]
    1cd8:	mov	w5, w8
    1cdc:	ldr	w8, [sp, #344]
    1ce0:	mov	w6, w8
    1ce4:	and	x6, x6, #0xffffffff
    1ce8:	lsr	x6, x6, #27
    1cec:	orr	x5, x6, x5, lsl #5
    1cf0:	ldr	w8, [sp, #340]
    1cf4:	ldr	w9, [sp, #336]
    1cf8:	eor	w8, w8, w9
    1cfc:	ldr	w9, [sp, #332]
    1d00:	eor	w8, w8, w9
    1d04:	mov	w6, w8
    1d08:	ubfx	x6, x6, #0, #32
    1d0c:	add	x6, x6, w5, uxtw
    1d10:	ldr	w8, [sp, #348]
    1d14:	mov	w7, w8
    1d18:	add	x6, x6, x7
    1d1c:	ldr	w8, [sp, #8]
    1d20:	mov	w7, w8
    1d24:	mov	w8, w7
    1d28:	add	w8, w8, #0x1
    1d2c:	str	w8, [sp, #8]
    1d30:	ldr	w8, [x13, x7, lsl #2]
    1d34:	mov	w13, w8
    1d38:	add	x13, x6, x13
    1d3c:	add	x12, x13, x12
    1d40:	str	w12, [sp, #348]
    1d44:	ldr	w8, [sp, #340]
    1d48:	mov	w13, w8
    1d4c:	ldr	w8, [sp, #340]
    1d50:	mov	w6, w8
    1d54:	and	x6, x6, #0xffffffff
    1d58:	lsr	x6, x6, #2
    1d5c:	orr	x13, x6, x13, lsl #30
    1d60:	and	x13, x13, #0xffffffff
    1d64:	str	w13, [sp, #340]
    1d68:	b	1a6c <PyInit__sha1@@Base+0xb78>
    1d6c:	ldr	w8, [sp, #8]
    1d70:	cmp	w8, #0x3c
    1d74:	b.cs	20bc <PyInit__sha1@@Base+0x11c8>  // b.hs, b.nlast
    1d78:	ldr	w8, [sp, #348]
    1d7c:	mov	w9, w8
    1d80:	ldr	w8, [sp, #348]
    1d84:	mov	w10, w8
    1d88:	and	x10, x10, #0xffffffff
    1d8c:	lsr	x10, x10, #27
    1d90:	orr	x9, x10, x9, lsl #5
    1d94:	ldr	w8, [sp, #344]
    1d98:	ldr	w11, [sp, #340]
    1d9c:	and	w8, w8, w11
    1da0:	ldr	w11, [sp, #336]
    1da4:	ldr	w12, [sp, #344]
    1da8:	ldr	w13, [sp, #340]
    1dac:	orr	w12, w12, w13
    1db0:	and	w11, w11, w12
    1db4:	orr	w8, w8, w11
    1db8:	mov	w10, w8
    1dbc:	ubfx	x10, x10, #0, #32
    1dc0:	add	x10, x10, w9, uxtw
    1dc4:	ldr	w8, [sp, #332]
    1dc8:	mov	w14, w8
    1dcc:	add	x10, x10, x14
    1dd0:	ldr	w8, [sp, #8]
    1dd4:	mov	w14, w8
    1dd8:	mov	w8, w14
    1ddc:	add	w8, w8, #0x1
    1de0:	str	w8, [sp, #8]
    1de4:	add	x15, sp, #0xc
    1de8:	ldr	w8, [x15, x14, lsl #2]
    1dec:	mov	w14, w8
    1df0:	add	x10, x10, x14
    1df4:	mov	x14, #0xbcdc                	// #48348
    1df8:	movk	x14, #0x8f1b, lsl #16
    1dfc:	add	x10, x10, x14
    1e00:	str	w10, [sp, #332]
    1e04:	ldr	w8, [sp, #344]
    1e08:	mov	w16, w8
    1e0c:	ldr	w8, [sp, #344]
    1e10:	mov	w17, w8
    1e14:	and	x17, x17, #0xffffffff
    1e18:	lsr	x17, x17, #2
    1e1c:	orr	x16, x17, x16, lsl #30
    1e20:	and	x16, x16, #0xffffffff
    1e24:	str	w16, [sp, #344]
    1e28:	ldr	w8, [sp, #332]
    1e2c:	mov	w17, w8
    1e30:	ldr	w8, [sp, #332]
    1e34:	mov	w18, w8
    1e38:	and	x18, x18, #0xffffffff
    1e3c:	lsr	x18, x18, #27
    1e40:	orr	x17, x18, x17, lsl #5
    1e44:	ldr	w8, [sp, #348]
    1e48:	ldr	w9, [sp, #344]
    1e4c:	and	w8, w8, w9
    1e50:	ldr	w9, [sp, #340]
    1e54:	ldr	w10, [sp, #348]
    1e58:	ldr	w11, [sp, #344]
    1e5c:	orr	w10, w10, w11
    1e60:	and	w9, w9, w10
    1e64:	orr	w8, w8, w9
    1e68:	mov	w18, w8
    1e6c:	ubfx	x18, x18, #0, #32
    1e70:	add	x18, x18, w17, uxtw
    1e74:	ldr	w8, [sp, #336]
    1e78:	mov	w0, w8
    1e7c:	add	x18, x18, x0
    1e80:	ldr	w8, [sp, #8]
    1e84:	mov	w0, w8
    1e88:	mov	w8, w0
    1e8c:	add	w8, w8, #0x1
    1e90:	str	w8, [sp, #8]
    1e94:	ldr	w8, [x15, x0, lsl #2]
    1e98:	mov	w0, w8
    1e9c:	add	x18, x18, x0
    1ea0:	add	x18, x18, x14
    1ea4:	str	w18, [sp, #336]
    1ea8:	ldr	w8, [sp, #348]
    1eac:	mov	w0, w8
    1eb0:	ldr	w8, [sp, #348]
    1eb4:	mov	w1, w8
    1eb8:	and	x1, x1, #0xffffffff
    1ebc:	lsr	x1, x1, #2
    1ec0:	orr	x0, x1, x0, lsl #30
    1ec4:	and	x0, x0, #0xffffffff
    1ec8:	str	w0, [sp, #348]
    1ecc:	ldr	w8, [sp, #336]
    1ed0:	mov	w1, w8
    1ed4:	ldr	w8, [sp, #336]
    1ed8:	mov	w2, w8
    1edc:	and	x2, x2, #0xffffffff
    1ee0:	lsr	x2, x2, #27
    1ee4:	orr	x1, x2, x1, lsl #5
    1ee8:	ldr	w8, [sp, #332]
    1eec:	ldr	w9, [sp, #348]
    1ef0:	and	w8, w8, w9
    1ef4:	ldr	w9, [sp, #344]
    1ef8:	ldr	w10, [sp, #332]
    1efc:	ldr	w11, [sp, #348]
    1f00:	orr	w10, w10, w11
    1f04:	and	w9, w9, w10
    1f08:	orr	w8, w8, w9
    1f0c:	mov	w2, w8
    1f10:	ubfx	x2, x2, #0, #32
    1f14:	add	x2, x2, w1, uxtw
    1f18:	ldr	w8, [sp, #340]
    1f1c:	mov	w3, w8
    1f20:	add	x2, x2, x3
    1f24:	ldr	w8, [sp, #8]
    1f28:	mov	w3, w8
    1f2c:	mov	w8, w3
    1f30:	add	w8, w8, #0x1
    1f34:	str	w8, [sp, #8]
    1f38:	ldr	w8, [x15, x3, lsl #2]
    1f3c:	mov	w3, w8
    1f40:	add	x2, x2, x3
    1f44:	add	x2, x2, x14
    1f48:	str	w2, [sp, #340]
    1f4c:	ldr	w8, [sp, #332]
    1f50:	mov	w3, w8
    1f54:	ldr	w8, [sp, #332]
    1f58:	mov	w4, w8
    1f5c:	and	x4, x4, #0xffffffff
    1f60:	lsr	x4, x4, #2
    1f64:	orr	x3, x4, x3, lsl #30
    1f68:	and	x3, x3, #0xffffffff
    1f6c:	str	w3, [sp, #332]
    1f70:	ldr	w8, [sp, #340]
    1f74:	mov	w4, w8
    1f78:	ldr	w8, [sp, #340]
    1f7c:	mov	w5, w8
    1f80:	and	x5, x5, #0xffffffff
    1f84:	lsr	x5, x5, #27
    1f88:	orr	x4, x5, x4, lsl #5
    1f8c:	ldr	w8, [sp, #336]
    1f90:	ldr	w9, [sp, #332]
    1f94:	and	w8, w8, w9
    1f98:	ldr	w9, [sp, #348]
    1f9c:	ldr	w10, [sp, #336]
    1fa0:	ldr	w11, [sp, #332]
    1fa4:	orr	w10, w10, w11
    1fa8:	and	w9, w9, w10
    1fac:	orr	w8, w8, w9
    1fb0:	mov	w5, w8
    1fb4:	ubfx	x5, x5, #0, #32
    1fb8:	add	x5, x5, w4, uxtw
    1fbc:	ldr	w8, [sp, #344]
    1fc0:	mov	w6, w8
    1fc4:	add	x5, x5, x6
    1fc8:	ldr	w8, [sp, #8]
    1fcc:	mov	w6, w8
    1fd0:	mov	w8, w6
    1fd4:	add	w8, w8, #0x1
    1fd8:	str	w8, [sp, #8]
    1fdc:	ldr	w8, [x15, x6, lsl #2]
    1fe0:	mov	w6, w8
    1fe4:	add	x5, x5, x6
    1fe8:	add	x5, x5, x14
    1fec:	str	w5, [sp, #344]
    1ff0:	ldr	w8, [sp, #336]
    1ff4:	mov	w6, w8
    1ff8:	ldr	w8, [sp, #336]
    1ffc:	mov	w7, w8
    2000:	and	x7, x7, #0xffffffff
    2004:	lsr	x7, x7, #2
    2008:	orr	x6, x7, x6, lsl #30
    200c:	and	x6, x6, #0xffffffff
    2010:	str	w6, [sp, #336]
    2014:	ldr	w8, [sp, #344]
    2018:	mov	w7, w8
    201c:	ldr	w8, [sp, #344]
    2020:	mov	w19, w8
    2024:	and	x19, x19, #0xffffffff
    2028:	lsr	x19, x19, #27
    202c:	orr	x7, x19, x7, lsl #5
    2030:	ldr	w8, [sp, #340]
    2034:	ldr	w9, [sp, #336]
    2038:	and	w8, w8, w9
    203c:	ldr	w9, [sp, #332]
    2040:	ldr	w10, [sp, #340]
    2044:	ldr	w11, [sp, #336]
    2048:	orr	w10, w10, w11
    204c:	and	w9, w9, w10
    2050:	orr	w8, w8, w9
    2054:	mov	w19, w8
    2058:	ubfx	x19, x19, #0, #32
    205c:	add	x19, x19, w7, uxtw
    2060:	ldr	w8, [sp, #348]
    2064:	mov	w20, w8
    2068:	add	x19, x19, x20
    206c:	ldr	w8, [sp, #8]
    2070:	mov	w20, w8
    2074:	mov	w8, w20
    2078:	add	w8, w8, #0x1
    207c:	str	w8, [sp, #8]
    2080:	ldr	w8, [x15, x20, lsl #2]
    2084:	mov	w15, w8
    2088:	add	x15, x19, x15
    208c:	add	x14, x15, x14
    2090:	str	w14, [sp, #348]
    2094:	ldr	w8, [sp, #340]
    2098:	mov	w15, w8
    209c:	ldr	w8, [sp, #340]
    20a0:	mov	w19, w8
    20a4:	and	x19, x19, #0xffffffff
    20a8:	lsr	x19, x19, #2
    20ac:	orr	x15, x19, x15, lsl #30
    20b0:	and	x15, x15, #0xffffffff
    20b4:	str	w15, [sp, #340]
    20b8:	b	1d6c <PyInit__sha1@@Base+0xe78>
    20bc:	ldr	w8, [sp, #8]
    20c0:	cmp	w8, #0x50
    20c4:	b.cs	23bc <PyInit__sha1@@Base+0x14c8>  // b.hs, b.nlast
    20c8:	ldr	w8, [sp, #348]
    20cc:	mov	w9, w8
    20d0:	ldr	w8, [sp, #348]
    20d4:	mov	w10, w8
    20d8:	and	x10, x10, #0xffffffff
    20dc:	lsr	x10, x10, #27
    20e0:	orr	x9, x10, x9, lsl #5
    20e4:	ldr	w8, [sp, #344]
    20e8:	ldr	w11, [sp, #340]
    20ec:	eor	w8, w8, w11
    20f0:	ldr	w11, [sp, #336]
    20f4:	eor	w8, w8, w11
    20f8:	mov	w10, w8
    20fc:	ubfx	x10, x10, #0, #32
    2100:	add	x10, x10, w9, uxtw
    2104:	ldr	w8, [sp, #332]
    2108:	mov	w12, w8
    210c:	add	x10, x10, x12
    2110:	ldr	w8, [sp, #8]
    2114:	mov	w12, w8
    2118:	mov	w8, w12
    211c:	add	w8, w8, #0x1
    2120:	str	w8, [sp, #8]
    2124:	add	x13, sp, #0xc
    2128:	ldr	w8, [x13, x12, lsl #2]
    212c:	mov	w12, w8
    2130:	add	x10, x10, x12
    2134:	mov	x12, #0xc1d6                	// #49622
    2138:	movk	x12, #0xca62, lsl #16
    213c:	add	x10, x10, x12
    2140:	str	w10, [sp, #332]
    2144:	ldr	w8, [sp, #344]
    2148:	mov	w14, w8
    214c:	ldr	w8, [sp, #344]
    2150:	mov	w15, w8
    2154:	and	x15, x15, #0xffffffff
    2158:	lsr	x15, x15, #2
    215c:	orr	x14, x15, x14, lsl #30
    2160:	and	x14, x14, #0xffffffff
    2164:	str	w14, [sp, #344]
    2168:	ldr	w8, [sp, #332]
    216c:	mov	w15, w8
    2170:	ldr	w8, [sp, #332]
    2174:	mov	w16, w8
    2178:	and	x16, x16, #0xffffffff
    217c:	lsr	x16, x16, #27
    2180:	orr	x15, x16, x15, lsl #5
    2184:	ldr	w8, [sp, #348]
    2188:	ldr	w9, [sp, #344]
    218c:	eor	w8, w8, w9
    2190:	ldr	w9, [sp, #340]
    2194:	eor	w8, w8, w9
    2198:	mov	w16, w8
    219c:	ubfx	x16, x16, #0, #32
    21a0:	add	x16, x16, w15, uxtw
    21a4:	ldr	w8, [sp, #336]
    21a8:	mov	w17, w8
    21ac:	add	x16, x16, x17
    21b0:	ldr	w8, [sp, #8]
    21b4:	mov	w17, w8
    21b8:	mov	w8, w17
    21bc:	add	w8, w8, #0x1
    21c0:	str	w8, [sp, #8]
    21c4:	ldr	w8, [x13, x17, lsl #2]
    21c8:	mov	w17, w8
    21cc:	add	x16, x16, x17
    21d0:	add	x16, x16, x12
    21d4:	str	w16, [sp, #336]
    21d8:	ldr	w8, [sp, #348]
    21dc:	mov	w17, w8
    21e0:	ldr	w8, [sp, #348]
    21e4:	mov	w18, w8
    21e8:	and	x18, x18, #0xffffffff
    21ec:	lsr	x18, x18, #2
    21f0:	orr	x17, x18, x17, lsl #30
    21f4:	and	x17, x17, #0xffffffff
    21f8:	str	w17, [sp, #348]
    21fc:	ldr	w8, [sp, #336]
    2200:	mov	w18, w8
    2204:	ldr	w8, [sp, #336]
    2208:	mov	w0, w8
    220c:	and	x0, x0, #0xffffffff
    2210:	lsr	x0, x0, #27
    2214:	orr	x18, x0, x18, lsl #5
    2218:	ldr	w8, [sp, #332]
    221c:	ldr	w9, [sp, #348]
    2220:	eor	w8, w8, w9
    2224:	ldr	w9, [sp, #344]
    2228:	eor	w8, w8, w9
    222c:	mov	w0, w8
    2230:	ubfx	x0, x0, #0, #32
    2234:	add	x0, x0, w18, uxtw
    2238:	ldr	w8, [sp, #340]
    223c:	mov	w1, w8
    2240:	add	x0, x0, x1
    2244:	ldr	w8, [sp, #8]
    2248:	mov	w1, w8
    224c:	mov	w8, w1
    2250:	add	w8, w8, #0x1
    2254:	str	w8, [sp, #8]
    2258:	ldr	w8, [x13, x1, lsl #2]
    225c:	mov	w1, w8
    2260:	add	x0, x0, x1
    2264:	add	x0, x0, x12
    2268:	str	w0, [sp, #340]
    226c:	ldr	w8, [sp, #332]
    2270:	mov	w1, w8
    2274:	ldr	w8, [sp, #332]
    2278:	mov	w2, w8
    227c:	and	x2, x2, #0xffffffff
    2280:	lsr	x2, x2, #2
    2284:	orr	x1, x2, x1, lsl #30
    2288:	and	x1, x1, #0xffffffff
    228c:	str	w1, [sp, #332]
    2290:	ldr	w8, [sp, #340]
    2294:	mov	w2, w8
    2298:	ldr	w8, [sp, #340]
    229c:	mov	w3, w8
    22a0:	and	x3, x3, #0xffffffff
    22a4:	lsr	x3, x3, #27
    22a8:	orr	x2, x3, x2, lsl #5
    22ac:	ldr	w8, [sp, #336]
    22b0:	ldr	w9, [sp, #332]
    22b4:	eor	w8, w8, w9
    22b8:	ldr	w9, [sp, #348]
    22bc:	eor	w8, w8, w9
    22c0:	mov	w3, w8
    22c4:	ubfx	x3, x3, #0, #32
    22c8:	add	x3, x3, w2, uxtw
    22cc:	ldr	w8, [sp, #344]
    22d0:	mov	w4, w8
    22d4:	add	x3, x3, x4
    22d8:	ldr	w8, [sp, #8]
    22dc:	mov	w4, w8
    22e0:	mov	w8, w4
    22e4:	add	w8, w8, #0x1
    22e8:	str	w8, [sp, #8]
    22ec:	ldr	w8, [x13, x4, lsl #2]
    22f0:	mov	w4, w8
    22f4:	add	x3, x3, x4
    22f8:	add	x3, x3, x12
    22fc:	str	w3, [sp, #344]
    2300:	ldr	w8, [sp, #336]
    2304:	mov	w4, w8
    2308:	ldr	w8, [sp, #336]
    230c:	mov	w5, w8
    2310:	and	x5, x5, #0xffffffff
    2314:	lsr	x5, x5, #2
    2318:	orr	x4, x5, x4, lsl #30
    231c:	and	x4, x4, #0xffffffff
    2320:	str	w4, [sp, #336]
    2324:	ldr	w8, [sp, #344]
    2328:	mov	w5, w8
    232c:	ldr	w8, [sp, #344]
    2330:	mov	w6, w8
    2334:	and	x6, x6, #0xffffffff
    2338:	lsr	x6, x6, #27
    233c:	orr	x5, x6, x5, lsl #5
    2340:	ldr	w8, [sp, #340]
    2344:	ldr	w9, [sp, #336]
    2348:	eor	w8, w8, w9
    234c:	ldr	w9, [sp, #332]
    2350:	eor	w8, w8, w9
    2354:	mov	w6, w8
    2358:	ubfx	x6, x6, #0, #32
    235c:	add	x6, x6, w5, uxtw
    2360:	ldr	w8, [sp, #348]
    2364:	mov	w7, w8
    2368:	add	x6, x6, x7
    236c:	ldr	w8, [sp, #8]
    2370:	mov	w7, w8
    2374:	mov	w8, w7
    2378:	add	w8, w8, #0x1
    237c:	str	w8, [sp, #8]
    2380:	ldr	w8, [x13, x7, lsl #2]
    2384:	mov	w13, w8
    2388:	add	x13, x6, x13
    238c:	add	x12, x13, x12
    2390:	str	w12, [sp, #348]
    2394:	ldr	w8, [sp, #340]
    2398:	mov	w13, w8
    239c:	ldr	w8, [sp, #340]
    23a0:	mov	w6, w8
    23a4:	and	x6, x6, #0xffffffff
    23a8:	lsr	x6, x6, #2
    23ac:	orr	x13, x6, x13, lsl #30
    23b0:	and	x13, x13, #0xffffffff
    23b4:	str	w13, [sp, #340]
    23b8:	b	20bc <PyInit__sha1@@Base+0x11c8>
    23bc:	ldr	x8, [sp, #360]
    23c0:	ldr	w9, [x8, #8]
    23c4:	ldr	w10, [sp, #348]
    23c8:	add	w9, w9, w10
    23cc:	ldr	x8, [sp, #360]
    23d0:	str	w9, [x8, #8]
    23d4:	ldr	x8, [sp, #360]
    23d8:	ldr	w9, [x8, #12]
    23dc:	ldr	w10, [sp, #344]
    23e0:	add	w9, w9, w10
    23e4:	ldr	x8, [sp, #360]
    23e8:	str	w9, [x8, #12]
    23ec:	ldr	x8, [sp, #360]
    23f0:	ldr	w9, [x8, #16]
    23f4:	ldr	w10, [sp, #340]
    23f8:	add	w9, w9, w10
    23fc:	ldr	x8, [sp, #360]
    2400:	str	w9, [x8, #16]
    2404:	ldr	x8, [sp, #360]
    2408:	ldr	w9, [x8, #20]
    240c:	ldr	w10, [sp, #336]
    2410:	add	w9, w9, w10
    2414:	ldr	x8, [sp, #360]
    2418:	str	w9, [x8, #20]
    241c:	ldr	x8, [sp, #360]
    2420:	ldr	w9, [x8, #24]
    2424:	ldr	w10, [sp, #332]
    2428:	add	w9, w9, w10
    242c:	ldr	x8, [sp, #360]
    2430:	str	w9, [x8, #24]
    2434:	ldp	x20, x19, [sp, #384]
    2438:	ldr	x29, [sp, #368]
    243c:	add	sp, sp, #0x190
    2440:	ret
    2444:	sub	sp, sp, #0xb0
    2448:	stp	x29, x30, [sp, #160]
    244c:	add	x29, sp, #0xa0
    2450:	mov	x2, #0x60                  	// #96
    2454:	mov	x1, #0x14                  	// #20
    2458:	sub	x8, x29, #0x1c
    245c:	add	x9, sp, #0x20
    2460:	stur	x0, [x29, #-8]
    2464:	ldur	x10, [x29, #-8]
    2468:	add	x10, x10, #0x10
    246c:	mov	x0, x9
    2470:	str	x1, [sp, #24]
    2474:	mov	x1, x10
    2478:	str	x8, [sp, #16]
    247c:	str	x9, [sp, #8]
    2480:	bl	d00 <memcpy@plt>
    2484:	ldr	x0, [sp, #8]
    2488:	ldr	x1, [sp, #16]
    248c:	bl	1270 <PyInit__sha1@@Base+0x37c>
    2490:	ldr	x0, [sp, #16]
    2494:	ldr	x1, [sp, #24]
    2498:	bl	e10 <_Py_strhex@plt>
    249c:	ldp	x29, x30, [sp, #160]
    24a0:	add	sp, sp, #0xb0
    24a4:	ret
    24a8:	sub	sp, sp, #0x40
    24ac:	stp	x29, x30, [sp, #48]
    24b0:	add	x29, sp, #0x30
    24b4:	stur	x0, [x29, #-8]
    24b8:	stur	x1, [x29, #-16]
    24bc:	str	x2, [sp, #24]
    24c0:	ldr	x8, [sp, #24]
    24c4:	cmp	x8, #0x0
    24c8:	cset	w9, le
    24cc:	tbnz	w9, #0, 2608 <PyInit__sha1@@Base+0x1714>
    24d0:	ldur	x8, [x29, #-8]
    24d4:	ldr	w9, [x8, #28]
    24d8:	cbnz	w9, 2520 <PyInit__sha1@@Base+0x162c>
    24dc:	ldr	x8, [sp, #24]
    24e0:	cmp	x8, #0x40
    24e4:	b.lt	2520 <PyInit__sha1@@Base+0x162c>  // b.tstop
    24e8:	ldur	x0, [x29, #-8]
    24ec:	ldur	x1, [x29, #-16]
    24f0:	bl	154c <PyInit__sha1@@Base+0x658>
    24f4:	ldur	x8, [x29, #-8]
    24f8:	ldr	x9, [x8]
    24fc:	add	x9, x9, #0x200
    2500:	str	x9, [x8]
    2504:	ldur	x8, [x29, #-16]
    2508:	add	x8, x8, #0x40
    250c:	stur	x8, [x29, #-16]
    2510:	ldr	x8, [sp, #24]
    2514:	subs	x8, x8, #0x40
    2518:	str	x8, [sp, #24]
    251c:	b	2604 <PyInit__sha1@@Base+0x1710>
    2520:	ldr	x8, [sp, #24]
    2524:	ldur	x9, [x29, #-8]
    2528:	ldr	w10, [x9, #28]
    252c:	mov	w11, #0x40                  	// #64
    2530:	subs	w10, w11, w10
    2534:	mov	w9, w10
    2538:	ubfx	x9, x9, #0, #32
    253c:	cmp	x8, x9
    2540:	b.le	2564 <PyInit__sha1@@Base+0x1670>
    2544:	ldur	x8, [x29, #-8]
    2548:	ldr	w9, [x8, #28]
    254c:	mov	w10, #0x40                  	// #64
    2550:	subs	w9, w10, w9
    2554:	mov	w8, w9
    2558:	ubfx	x8, x8, #0, #32
    255c:	str	x8, [sp, #8]
    2560:	b	256c <PyInit__sha1@@Base+0x1678>
    2564:	ldr	x8, [sp, #24]
    2568:	str	x8, [sp, #8]
    256c:	ldr	x8, [sp, #8]
    2570:	str	x8, [sp, #16]
    2574:	ldur	x8, [x29, #-8]
    2578:	add	x8, x8, #0x20
    257c:	ldur	x9, [x29, #-8]
    2580:	ldr	w10, [x9, #28]
    2584:	mov	w9, w10
    2588:	add	x0, x8, x9
    258c:	ldur	x1, [x29, #-16]
    2590:	ldr	x2, [sp, #16]
    2594:	bl	d00 <memcpy@plt>
    2598:	ldr	x8, [sp, #16]
    259c:	ldur	x9, [x29, #-8]
    25a0:	ldr	w10, [x9, #28]
    25a4:	add	w8, w10, w8
    25a8:	str	w8, [x9, #28]
    25ac:	ldr	x9, [sp, #16]
    25b0:	ldur	x11, [x29, #-16]
    25b4:	add	x9, x11, x9
    25b8:	stur	x9, [x29, #-16]
    25bc:	ldr	x9, [sp, #16]
    25c0:	ldr	x11, [sp, #24]
    25c4:	subs	x9, x11, x9
    25c8:	str	x9, [sp, #24]
    25cc:	ldur	x9, [x29, #-8]
    25d0:	ldr	w8, [x9, #28]
    25d4:	cmp	w8, #0x40
    25d8:	b.ne	2604 <PyInit__sha1@@Base+0x1710>  // b.any
    25dc:	ldur	x0, [x29, #-8]
    25e0:	ldur	x8, [x29, #-8]
    25e4:	add	x1, x8, #0x20
    25e8:	bl	154c <PyInit__sha1@@Base+0x658>
    25ec:	ldur	x8, [x29, #-8]
    25f0:	ldr	x9, [x8]
    25f4:	add	x9, x9, #0x200
    25f8:	str	x9, [x8]
    25fc:	ldur	x8, [x29, #-8]
    2600:	str	wzr, [x8, #28]
    2604:	b	24c0 <PyInit__sha1@@Base+0x15cc>
    2608:	ldp	x29, x30, [sp, #48]
    260c:	add	sp, sp, #0x40
    2610:	ret
    2614:	sub	sp, sp, #0x20
    2618:	stp	x29, x30, [sp, #16]
    261c:	add	x29, sp, #0x10
    2620:	mov	x8, #0x40                  	// #64
    2624:	str	x0, [sp, #8]
    2628:	str	x1, [sp]
    262c:	mov	x0, x8
    2630:	bl	d90 <PyLong_FromLong@plt>
    2634:	ldp	x29, x30, [sp, #16]
    2638:	add	sp, sp, #0x20
    263c:	ret
    2640:	sub	sp, sp, #0x20
    2644:	stp	x29, x30, [sp, #16]
    2648:	add	x29, sp, #0x10
    264c:	adrp	x8, 2000 <PyInit__sha1@@Base+0x110c>
    2650:	add	x8, x8, #0xa57
    2654:	mov	x9, #0x4                   	// #4
    2658:	str	x0, [sp, #8]
    265c:	str	x1, [sp]
    2660:	mov	x0, x8
    2664:	mov	x1, x9
    2668:	bl	e00 <PyUnicode_FromStringAndSize@plt>
    266c:	ldp	x29, x30, [sp, #16]
    2670:	add	sp, sp, #0x20
    2674:	ret
    2678:	sub	sp, sp, #0x20
    267c:	stp	x29, x30, [sp, #16]
    2680:	add	x29, sp, #0x10
    2684:	mov	x8, #0x14                  	// #20
    2688:	str	x0, [sp, #8]
    268c:	str	x1, [sp]
    2690:	mov	x0, x8
    2694:	bl	d90 <PyLong_FromLong@plt>
    2698:	ldp	x29, x30, [sp, #16]
    269c:	add	sp, sp, #0x20
    26a0:	ret
    26a4:	sub	sp, sp, #0x70
    26a8:	stp	x29, x30, [sp, #96]
    26ac:	add	x29, sp, #0x60
    26b0:	mov	x8, xzr
    26b4:	stur	x0, [x29, #-8]
    26b8:	stur	x1, [x29, #-16]
    26bc:	stur	x2, [x29, #-24]
    26c0:	stur	x3, [x29, #-32]
    26c4:	stur	x8, [x29, #-40]
    26c8:	ldur	x8, [x29, #-24]
    26cc:	ldur	x9, [x29, #-32]
    26d0:	str	x8, [sp, #24]
    26d4:	cbz	x9, 26e8 <PyInit__sha1@@Base+0x17f4>
    26d8:	ldur	x8, [x29, #-32]
    26dc:	ldr	x8, [x8, #16]
    26e0:	str	x8, [sp, #16]
    26e4:	b	26f0 <PyInit__sha1@@Base+0x17fc>
    26e8:	mov	x8, xzr
    26ec:	str	x8, [sp, #16]
    26f0:	ldr	x8, [sp, #16]
    26f4:	ldr	x9, [sp, #24]
    26f8:	add	x8, x9, x8
    26fc:	mov	x10, xzr
    2700:	subs	x8, x8, #0x0
    2704:	str	x8, [sp, #40]
    2708:	str	x10, [sp, #32]
    270c:	ldur	x8, [x29, #-32]
    2710:	cbnz	x8, 2748 <PyInit__sha1@@Base+0x1854>
    2714:	ldur	x8, [x29, #-24]
    2718:	mov	x9, xzr
    271c:	cmp	x9, x8
    2720:	cset	w10, gt
    2724:	tbnz	w10, #0, 2748 <PyInit__sha1@@Base+0x1854>
    2728:	ldur	x8, [x29, #-24]
    272c:	cmp	x8, #0x1
    2730:	b.gt	2748 <PyInit__sha1@@Base+0x1854>
    2734:	ldur	x8, [x29, #-16]
    2738:	cbz	x8, 2748 <PyInit__sha1@@Base+0x1854>
    273c:	ldur	x8, [x29, #-16]
    2740:	str	x8, [sp, #8]
    2744:	b	2788 <PyInit__sha1@@Base+0x1894>
    2748:	ldur	x0, [x29, #-16]
    274c:	ldur	x1, [x29, #-24]
    2750:	ldur	x3, [x29, #-32]
    2754:	mov	x8, xzr
    2758:	mov	x2, x8
    275c:	adrp	x4, 13000 <PyInit__sha1@@Base+0x1210c>
    2760:	add	x4, x4, #0x420
    2764:	mov	w9, wzr
    2768:	mov	w5, w9
    276c:	mov	w6, #0x1                   	// #1
    2770:	mov	w7, w9
    2774:	mov	x8, sp
    2778:	add	x10, sp, #0x30
    277c:	str	x10, [x8]
    2780:	bl	d50 <_PyArg_UnpackKeywords@plt>
    2784:	str	x0, [sp, #8]
    2788:	ldr	x8, [sp, #8]
    278c:	stur	x8, [x29, #-16]
    2790:	ldur	x8, [x29, #-16]
    2794:	cbnz	x8, 279c <PyInit__sha1@@Base+0x18a8>
    2798:	b	27c4 <PyInit__sha1@@Base+0x18d0>
    279c:	ldr	x8, [sp, #40]
    27a0:	cbnz	x8, 27a8 <PyInit__sha1@@Base+0x18b4>
    27a4:	b	27b4 <PyInit__sha1@@Base+0x18c0>
    27a8:	ldur	x8, [x29, #-16]
    27ac:	ldr	x8, [x8]
    27b0:	str	x8, [sp, #32]
    27b4:	ldur	x0, [x29, #-8]
    27b8:	ldr	x1, [sp, #32]
    27bc:	bl	27d4 <PyInit__sha1@@Base+0x18e0>
    27c0:	stur	x0, [x29, #-40]
    27c4:	ldur	x0, [x29, #-40]
    27c8:	ldp	x29, x30, [sp, #96]
    27cc:	add	sp, sp, #0x70
    27d0:	ret
    27d4:	sub	sp, sp, #0x90
    27d8:	stp	x29, x30, [sp, #128]
    27dc:	add	x29, sp, #0x80
    27e0:	stur	x0, [x29, #-16]
    27e4:	stur	x1, [x29, #-24]
    27e8:	ldur	x8, [x29, #-24]
    27ec:	cbz	x8, 28d4 <PyInit__sha1@@Base+0x19e0>
    27f0:	ldur	x8, [x29, #-24]
    27f4:	ldr	x8, [x8, #8]
    27f8:	ldr	x8, [x8, #168]
    27fc:	and	x8, x8, #0x10000000
    2800:	cbz	x8, 2828 <PyInit__sha1@@Base+0x1934>
    2804:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
    2808:	ldr	x8, [x8, #4032]
    280c:	ldr	x0, [x8]
    2810:	adrp	x1, 2000 <PyInit__sha1@@Base+0x110c>
    2814:	add	x1, x1, #0xa72
    2818:	bl	d60 <PyErr_SetString@plt>
    281c:	mov	x8, xzr
    2820:	stur	x8, [x29, #-8]
    2824:	b	2974 <PyInit__sha1@@Base+0x1a80>
    2828:	ldur	x8, [x29, #-24]
    282c:	ldr	x8, [x8, #8]
    2830:	ldr	x8, [x8, #160]
    2834:	cbz	x8, 284c <PyInit__sha1@@Base+0x1958>
    2838:	ldur	x8, [x29, #-24]
    283c:	ldr	x8, [x8, #8]
    2840:	ldr	x8, [x8, #160]
    2844:	ldr	x8, [x8]
    2848:	cbnz	x8, 2870 <PyInit__sha1@@Base+0x197c>
    284c:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
    2850:	ldr	x8, [x8, #4032]
    2854:	ldr	x0, [x8]
    2858:	adrp	x1, 2000 <PyInit__sha1@@Base+0x110c>
    285c:	add	x1, x1, #0xaa1
    2860:	bl	d60 <PyErr_SetString@plt>
    2864:	mov	x8, xzr
    2868:	stur	x8, [x29, #-8]
    286c:	b	2974 <PyInit__sha1@@Base+0x1a80>
    2870:	ldur	x0, [x29, #-24]
    2874:	add	x1, sp, #0x10
    2878:	mov	w8, wzr
    287c:	mov	w2, w8
    2880:	bl	dd0 <PyObject_GetBuffer@plt>
    2884:	mov	w8, #0xffffffff            	// #-1
    2888:	cmp	w0, w8
    288c:	b.ne	289c <PyInit__sha1@@Base+0x19a8>  // b.any
    2890:	mov	x8, xzr
    2894:	stur	x8, [x29, #-8]
    2898:	b	2974 <PyInit__sha1@@Base+0x1a80>
    289c:	ldr	w8, [sp, #52]
    28a0:	cmp	w8, #0x1
    28a4:	b.le	28d4 <PyInit__sha1@@Base+0x19e0>
    28a8:	adrp	x8, 12000 <PyInit__sha1@@Base+0x1110c>
    28ac:	ldr	x8, [x8, #4024]
    28b0:	ldr	x0, [x8]
    28b4:	adrp	x1, 2000 <PyInit__sha1@@Base+0x110c>
    28b8:	add	x1, x1, #0xacb
    28bc:	bl	d60 <PyErr_SetString@plt>
    28c0:	add	x0, sp, #0x10
    28c4:	bl	d10 <PyBuffer_Release@plt>
    28c8:	mov	x8, xzr
    28cc:	stur	x8, [x29, #-8]
    28d0:	b	2974 <PyInit__sha1@@Base+0x1a80>
    28d4:	bl	11f0 <PyInit__sha1@@Base+0x2fc>
    28d8:	stur	x0, [x29, #-32]
    28dc:	cbnz	x0, 28fc <PyInit__sha1@@Base+0x1a08>
    28e0:	ldur	x8, [x29, #-24]
    28e4:	cbz	x8, 28f0 <PyInit__sha1@@Base+0x19fc>
    28e8:	add	x0, sp, #0x10
    28ec:	bl	d10 <PyBuffer_Release@plt>
    28f0:	mov	x8, xzr
    28f4:	stur	x8, [x29, #-8]
    28f8:	b	2974 <PyInit__sha1@@Base+0x1a80>
    28fc:	ldur	x8, [x29, #-32]
    2900:	add	x0, x8, #0x10
    2904:	bl	2984 <PyInit__sha1@@Base+0x1a90>
    2908:	bl	db0 <PyErr_Occurred@plt>
    290c:	cbz	x0, 2940 <PyInit__sha1@@Base+0x1a4c>
    2910:	ldur	x2, [x29, #-32]
    2914:	adrp	x0, 2000 <PyInit__sha1@@Base+0x110c>
    2918:	add	x0, x0, #0xb14
    291c:	mov	w1, #0x1fa                 	// #506
    2920:	bl	29f4 <PyInit__sha1@@Base+0x1b00>
    2924:	ldur	x8, [x29, #-24]
    2928:	cbz	x8, 2934 <PyInit__sha1@@Base+0x1a40>
    292c:	add	x0, sp, #0x10
    2930:	bl	d10 <PyBuffer_Release@plt>
    2934:	mov	x8, xzr
    2938:	stur	x8, [x29, #-8]
    293c:	b	2974 <PyInit__sha1@@Base+0x1a80>
    2940:	ldur	x8, [x29, #-24]
    2944:	cbz	x8, 296c <PyInit__sha1@@Base+0x1a78>
    2948:	ldur	x8, [x29, #-32]
    294c:	add	x0, x8, #0x10
    2950:	add	x8, sp, #0x10
    2954:	ldr	x1, [sp, #16]
    2958:	ldr	x2, [sp, #32]
    295c:	str	x8, [sp, #8]
    2960:	bl	24a8 <PyInit__sha1@@Base+0x15b4>
    2964:	ldr	x0, [sp, #8]
    2968:	bl	d10 <PyBuffer_Release@plt>
    296c:	ldur	x8, [x29, #-32]
    2970:	stur	x8, [x29, #-8]
    2974:	ldur	x0, [x29, #-8]
    2978:	ldp	x29, x30, [sp, #128]
    297c:	add	sp, sp, #0x90
    2980:	ret
    2984:	sub	sp, sp, #0x10
    2988:	mov	w8, #0x2301                	// #8961
    298c:	movk	w8, #0x6745, lsl #16
    2990:	mov	w9, #0xab89                	// #43913
    2994:	movk	w9, #0xefcd, lsl #16
    2998:	mov	w10, #0xdcfe                	// #56574
    299c:	movk	w10, #0x98ba, lsl #16
    29a0:	mov	w11, #0x5476                	// #21622
    29a4:	movk	w11, #0x1032, lsl #16
    29a8:	mov	w12, #0xe1f0                	// #57840
    29ac:	movk	w12, #0xc3d2, lsl #16
    29b0:	str	x0, [sp, #8]
    29b4:	ldr	x13, [sp, #8]
    29b8:	str	w8, [x13, #8]
    29bc:	ldr	x13, [sp, #8]
    29c0:	str	w9, [x13, #12]
    29c4:	ldr	x13, [sp, #8]
    29c8:	str	w10, [x13, #16]
    29cc:	ldr	x13, [sp, #8]
    29d0:	str	w11, [x13, #20]
    29d4:	ldr	x13, [sp, #8]
    29d8:	str	w12, [x13, #24]
    29dc:	ldr	x13, [sp, #8]
    29e0:	str	wzr, [x13, #28]
    29e4:	ldr	x13, [sp, #8]
    29e8:	str	xzr, [x13]
    29ec:	add	sp, sp, #0x10
    29f0:	ret
    29f4:	sub	sp, sp, #0x30
    29f8:	stp	x29, x30, [sp, #32]
    29fc:	add	x29, sp, #0x20
    2a00:	stur	x0, [x29, #-8]
    2a04:	stur	w1, [x29, #-12]
    2a08:	str	x2, [sp, #8]
    2a0c:	ldr	x8, [sp, #8]
    2a10:	ldr	x9, [x8]
    2a14:	subs	x9, x9, #0x1
    2a18:	str	x9, [x8]
    2a1c:	cbz	x9, 2a24 <PyInit__sha1@@Base+0x1b30>
    2a20:	b	2a2c <PyInit__sha1@@Base+0x1b38>
    2a24:	ldr	x0, [sp, #8]
    2a28:	bl	d40 <_Py_Dealloc@plt>
    2a2c:	ldp	x29, x30, [sp, #32]
    2a30:	add	sp, sp, #0x30
    2a34:	ret

Disassembly of section .fini:

0000000000002a38 <.fini>:
    2a38:	stp	x29, x30, [sp, #-16]!
    2a3c:	mov	x29, sp
    2a40:	ldp	x29, x30, [sp], #16
    2a44:	ret
