
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//videotest_checksum.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x2f8>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <grub_mod_init-0x2f8>
  10:	add	x0, x0, #0x0
  14:	ldr	x0, [x0]
  18:	ldr	x0, [x0]
  1c:	ldr	x1, [sp, #24]
  20:	bl	0 <grub_named_list_find>
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	nop
	...
  38:	stp	x29, x30, [sp, #-64]!
  3c:	mov	x29, sp
  40:	str	x0, [sp, #40]
  44:	str	w1, [sp, #36]
  48:	str	x2, [sp, #24]
  4c:	ldr	x0, [sp, #40]
  50:	bl	0 <grub_mod_init-0x2f8>
  54:	str	x0, [sp, #56]
  58:	ldr	x0, [sp, #56]
  5c:	cmp	x0, #0x0
  60:	b.eq	80 <grub_mod_init-0x278>  // b.none
  64:	ldr	x0, [sp, #56]
  68:	ldr	x3, [x0, #32]
  6c:	ldr	x2, [sp, #24]
  70:	ldr	w1, [sp, #36]
  74:	ldr	x0, [sp, #56]
  78:	blr	x3
  7c:	b	84 <grub_mod_init-0x274>
  80:	mov	w0, #0x5                   	// #5
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	stp	x29, x30, [sp, #-48]!
  90:	mov	x29, sp
  94:	adrp	x0, 0 <grub_mod_init-0x2f8>
  98:	add	x0, x0, #0x0
  9c:	ldr	x0, [x0]
  a0:	bl	0 <grub_font_get>
  a4:	str	x0, [sp, #32]
  a8:	ldr	x0, [sp, #32]
  ac:	cmp	x0, #0x0
  b0:	b.eq	dc <grub_mod_init-0x21c>  // b.none
  b4:	ldr	x0, [sp, #32]
  b8:	ldr	x2, [x0]
  bc:	adrp	x0, 0 <grub_mod_init-0x2f8>
  c0:	add	x0, x0, #0x0
  c4:	ldr	x1, [x0]
  c8:	mov	x0, x2
  cc:	bl	0 <grub_strcmp>
  d0:	cmp	w0, #0x0
  d4:	b.eq	dc <grub_mod_init-0x21c>  // b.none
  d8:	str	xzr, [sp, #32]
  dc:	ldr	x0, [sp, #32]
  e0:	cmp	x0, #0x0
  e4:	b.ne	fc <grub_mod_init-0x1fc>  // b.any
  e8:	adrp	x0, 0 <grub_mod_init-0x2f8>
  ec:	add	x0, x0, #0x0
  f0:	ldr	x0, [x0]
  f4:	bl	0 <grub_font_load>
  f8:	str	x0, [sp, #32]
  fc:	ldr	x0, [sp, #32]
 100:	cmp	x0, #0x0
 104:	b.ne	154 <grub_mod_init-0x1a4>  // b.any
 108:	adrp	x0, 0 <grub_mod_init-0x2f8>
 10c:	add	x0, x0, #0x0
 110:	ldr	x6, [x0]
 114:	adrp	x0, 0 <grub_mod_init-0x2f8>
 118:	add	x0, x0, #0x0
 11c:	ldr	x5, [x0]
 120:	adrp	x0, 0 <grub_mod_init-0x2f8>
 124:	add	x0, x0, #0x0
 128:	ldr	x4, [x0]
 12c:	mov	w3, #0x2e                  	// #46
 130:	adrp	x0, 0 <grub_mod_init-0x2f8>
 134:	add	x0, x0, #0x0
 138:	ldr	x2, [x0]
 13c:	adrp	x0, 0 <grub_mod_init-0x2f8>
 140:	add	x0, x0, #0x0
 144:	ldr	x1, [x0]
 148:	mov	w0, #0x0                   	// #0
 14c:	bl	0 <grub_test_assert_helper>
 150:	b	298 <grub_mod_init-0x60>
 154:	str	wzr, [sp, #44]
 158:	b	28c <grub_mod_init-0x6c>
 15c:	ldr	w1, [sp, #44]
 160:	mov	x0, x1
 164:	lsl	x0, x0, #2
 168:	add	x0, x0, x1
 16c:	lsl	x0, x0, #2
 170:	sub	x0, x0, x1
 174:	lsl	x0, x0, #2
 178:	adrp	x1, 0 <grub_mod_init-0x2f8>
 17c:	add	x1, x1, #0x0
 180:	ldr	x1, [x1]
 184:	add	x3, x0, x1
 188:	adrp	x0, 0 <grub_mod_init-0x2f8>
 18c:	add	x0, x0, #0x0
 190:	ldr	x2, [x0]
 194:	ldr	w1, [sp, #44]
 198:	mov	x0, x1
 19c:	lsl	x0, x0, #2
 1a0:	add	x0, x0, x1
 1a4:	lsl	x0, x0, #2
 1a8:	sub	x0, x0, x1
 1ac:	lsl	x0, x0, #2
 1b0:	add	x0, x2, x0
 1b4:	ldr	w0, [x0, #24]
 1b8:	mov	w2, w0
 1bc:	adrp	x0, 0 <grub_mod_init-0x2f8>
 1c0:	add	x0, x0, #0x0
 1c4:	ldr	x1, [x0]
 1c8:	mov	x0, x3
 1cc:	bl	0 <grub_video_capture_start>
 1d0:	str	w0, [sp, #28]
 1d4:	ldr	w0, [sp, #28]
 1d8:	cmp	w0, #0x0
 1dc:	b.eq	230 <grub_mod_init-0xc8>  // b.none
 1e0:	adrp	x0, 0 <grub_mod_init-0x2f8>
 1e4:	add	x0, x0, #0x0
 1e8:	ldr	x6, [x0]
 1ec:	adrp	x0, 0 <grub_mod_init-0x2f8>
 1f0:	add	x0, x0, #0x0
 1f4:	ldr	x5, [x0]
 1f8:	adrp	x0, 0 <grub_mod_init-0x2f8>
 1fc:	add	x0, x0, #0x0
 200:	ldr	x4, [x0]
 204:	mov	w3, #0x3e                  	// #62
 208:	adrp	x0, 0 <grub_mod_init-0x2f8>
 20c:	add	x0, x0, #0x0
 210:	ldr	x2, [x0]
 214:	adrp	x0, 0 <grub_mod_init-0x2f8>
 218:	add	x0, x0, #0x0
 21c:	ldr	x1, [x0]
 220:	mov	w0, #0x0                   	// #0
 224:	bl	0 <grub_test_assert_helper>
 228:	bl	0 <grub_print_error>
 22c:	b	280 <grub_mod_init-0x78>
 230:	mov	w0, #0xa                   	// #10
 234:	str	w0, [sp, #24]
 238:	add	x0, sp, #0x18
 23c:	mov	w1, #0x1                   	// #1
 240:	bl	0 <grub_terminal_input_fake_sequence>
 244:	adrp	x0, 0 <grub_mod_init-0x2f8>
 248:	add	x0, x0, #0x0
 24c:	ldr	x0, [x0]
 250:	bl	0 <grub_video_checksum>
 254:	str	xzr, [sp, #16]
 258:	add	x0, sp, #0x10
 25c:	mov	x2, x0
 260:	mov	w1, #0x0                   	// #0
 264:	adrp	x0, 0 <grub_mod_init-0x2f8>
 268:	add	x0, x0, #0x0
 26c:	ldr	x0, [x0]
 270:	bl	38 <grub_mod_init-0x2c0>
 274:	bl	0 <grub_terminal_input_fake_sequence_end>
 278:	bl	0 <grub_video_checksum_end>
 27c:	bl	0 <grub_video_capture_end>
 280:	ldr	w0, [sp, #44]
 284:	add	w0, w0, #0x1
 288:	str	w0, [sp, #44]
 28c:	ldr	w0, [sp, #44]
 290:	cmp	w0, #0x1e
 294:	b.ls	15c <grub_mod_init-0x19c>  // b.plast
 298:	ldp	x29, x30, [sp], #48
 29c:	ret
	...

00000000000002f8 <grub_mod_init>:
 2f8:	stp	x29, x30, [sp, #-32]!
 2fc:	mov	x29, sp
 300:	str	x0, [sp, #24]
 304:	adrp	x0, 0 <grub_mod_init-0x2f8>
 308:	add	x0, x0, #0x0
 30c:	ldr	x1, [x0]
 310:	adrp	x0, 0 <grub_mod_init-0x2f8>
 314:	add	x0, x0, #0x0
 318:	ldr	x0, [x0]
 31c:	bl	0 <grub_test_register>
 320:	nop
 324:	ldp	x29, x30, [sp], #32
 328:	ret
 32c:	nop
	...

0000000000000340 <grub_mod_fini>:
 340:	stp	x29, x30, [sp, #-16]!
 344:	mov	x29, sp
 348:	adrp	x0, 0 <grub_mod_init-0x2f8>
 34c:	add	x0, x0, #0x0
 350:	ldr	x0, [x0]
 354:	bl	0 <grub_test_unregister>
 358:	nop
 35c:	ldp	x29, x30, [sp], #16
 360:	ret
 364:	nop
	...
