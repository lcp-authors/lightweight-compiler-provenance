
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//genl_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404ce0 <.init>:
  404ce0:	stp	x29, x30, [sp, #-16]!
  404ce4:	mov	x29, sp
  404ce8:	bl	4052e0 <_start@@Base+0x50>
  404cec:	ldp	x29, x30, [sp], #16
  404cf0:	ret

Disassembly of section .plt:

0000000000404d00 <memcpy@plt-0x20>:
  404d00:	stp	x16, x30, [sp, #-16]!
  404d04:	adrp	x16, 421000 <_IO_stdin_used@@Base+0x139b8>
  404d08:	ldr	x17, [x16, #4088]
  404d0c:	add	x16, x16, #0xff8
  404d10:	br	x17
  404d14:	nop
  404d18:	nop
  404d1c:	nop

0000000000404d20 <memcpy@plt>:
  404d20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16]
  404d28:	add	x16, x16, #0x0
  404d2c:	br	x17

0000000000404d30 <recvmsg@plt>:
  404d30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #8]
  404d38:	add	x16, x16, #0x8
  404d3c:	br	x17

0000000000404d40 <strtoul@plt>:
  404d40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #16]
  404d48:	add	x16, x16, #0x10
  404d4c:	br	x17

0000000000404d50 <strlen@plt>:
  404d50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #24]
  404d58:	add	x16, x16, #0x18
  404d5c:	br	x17

0000000000404d60 <exit@plt>:
  404d60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #32]
  404d68:	add	x16, x16, #0x20
  404d6c:	br	x17

0000000000404d70 <perror@plt>:
  404d70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #40]
  404d78:	add	x16, x16, #0x28
  404d7c:	br	x17

0000000000404d80 <strtoll@plt>:
  404d80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #48]
  404d88:	add	x16, x16, #0x30
  404d8c:	br	x17

0000000000404d90 <strtod@plt>:
  404d90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #56]
  404d98:	add	x16, x16, #0x38
  404d9c:	br	x17

0000000000404da0 <geteuid@plt>:
  404da0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #64]
  404da8:	add	x16, x16, #0x40
  404dac:	br	x17

0000000000404db0 <sethostent@plt>:
  404db0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #72]
  404db8:	add	x16, x16, #0x48
  404dbc:	br	x17

0000000000404dc0 <bind@plt>:
  404dc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #80]
  404dc8:	add	x16, x16, #0x50
  404dcc:	br	x17

0000000000404dd0 <ftell@plt>:
  404dd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #88]
  404dd8:	add	x16, x16, #0x58
  404ddc:	br	x17

0000000000404de0 <sprintf@plt>:
  404de0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #96]
  404de8:	add	x16, x16, #0x60
  404dec:	br	x17

0000000000404df0 <getuid@plt>:
  404df0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #104]
  404df8:	add	x16, x16, #0x68
  404dfc:	br	x17

0000000000404e00 <putc@plt>:
  404e00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #112]
  404e08:	add	x16, x16, #0x70
  404e0c:	br	x17

0000000000404e10 <strftime@plt>:
  404e10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #120]
  404e18:	add	x16, x16, #0x78
  404e1c:	br	x17

0000000000404e20 <fputc@plt>:
  404e20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #128]
  404e28:	add	x16, x16, #0x80
  404e2c:	br	x17

0000000000404e30 <dlopen@plt>:
  404e30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #136]
  404e38:	add	x16, x16, #0x88
  404e3c:	br	x17

0000000000404e40 <snprintf@plt>:
  404e40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #144]
  404e48:	add	x16, x16, #0x90
  404e4c:	br	x17

0000000000404e50 <fileno@plt>:
  404e50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #152]
  404e58:	add	x16, x16, #0x98
  404e5c:	br	x17

0000000000404e60 <localtime@plt>:
  404e60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #160]
  404e68:	add	x16, x16, #0xa0
  404e6c:	br	x17

0000000000404e70 <fclose@plt>:
  404e70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #168]
  404e78:	add	x16, x16, #0xa8
  404e7c:	br	x17

0000000000404e80 <time@plt>:
  404e80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #176]
  404e88:	add	x16, x16, #0xb0
  404e8c:	br	x17

0000000000404e90 <malloc@plt>:
  404e90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #184]
  404e98:	add	x16, x16, #0xb8
  404e9c:	br	x17

0000000000404ea0 <setsockopt@plt>:
  404ea0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #192]
  404ea8:	add	x16, x16, #0xc0
  404eac:	br	x17

0000000000404eb0 <dlsym@plt>:
  404eb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #200]
  404eb8:	add	x16, x16, #0xc8
  404ebc:	br	x17

0000000000404ec0 <__isoc99_fscanf@plt>:
  404ec0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #208]
  404ec8:	add	x16, x16, #0xd0
  404ecc:	br	x17

0000000000404ed0 <__libc_start_main@plt>:
  404ed0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #216]
  404ed8:	add	x16, x16, #0xd8
  404edc:	br	x17

0000000000404ee0 <strcat@plt>:
  404ee0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #224]
  404ee8:	add	x16, x16, #0xe0
  404eec:	br	x17

0000000000404ef0 <if_indextoname@plt>:
  404ef0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #232]
  404ef8:	add	x16, x16, #0xe8
  404efc:	br	x17

0000000000404f00 <memset@plt>:
  404f00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #240]
  404f08:	add	x16, x16, #0xf0
  404f0c:	br	x17

0000000000404f10 <gettimeofday@plt>:
  404f10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #248]
  404f18:	add	x16, x16, #0xf8
  404f1c:	br	x17

0000000000404f20 <sendmsg@plt>:
  404f20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #256]
  404f28:	add	x16, x16, #0x100
  404f2c:	br	x17

0000000000404f30 <calloc@plt>:
  404f30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #264]
  404f38:	add	x16, x16, #0x108
  404f3c:	br	x17

0000000000404f40 <cap_get_flag@plt>:
  404f40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #272]
  404f48:	add	x16, x16, #0x110
  404f4c:	br	x17

0000000000404f50 <strcasecmp@plt>:
  404f50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #280]
  404f58:	add	x16, x16, #0x118
  404f5c:	br	x17

0000000000404f60 <realloc@plt>:
  404f60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #288]
  404f68:	add	x16, x16, #0x120
  404f6c:	br	x17

0000000000404f70 <cap_set_proc@plt>:
  404f70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #296]
  404f78:	add	x16, x16, #0x128
  404f7c:	br	x17

0000000000404f80 <strdup@plt>:
  404f80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #304]
  404f88:	add	x16, x16, #0x130
  404f8c:	br	x17

0000000000404f90 <strerror@plt>:
  404f90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #312]
  404f98:	add	x16, x16, #0x138
  404f9c:	br	x17

0000000000404fa0 <close@plt>:
  404fa0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #320]
  404fa8:	add	x16, x16, #0x140
  404fac:	br	x17

0000000000404fb0 <strrchr@plt>:
  404fb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #328]
  404fb8:	add	x16, x16, #0x148
  404fbc:	br	x17

0000000000404fc0 <recv@plt>:
  404fc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #336]
  404fc8:	add	x16, x16, #0x150
  404fcc:	br	x17

0000000000404fd0 <__gmon_start__@plt>:
  404fd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #344]
  404fd8:	add	x16, x16, #0x158
  404fdc:	br	x17

0000000000404fe0 <abort@plt>:
  404fe0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #352]
  404fe8:	add	x16, x16, #0x160
  404fec:	br	x17

0000000000404ff0 <feof@plt>:
  404ff0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #360]
  404ff8:	add	x16, x16, #0x168
  404ffc:	br	x17

0000000000405000 <memcmp@plt>:
  405000:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #368]
  405008:	add	x16, x16, #0x170
  40500c:	br	x17

0000000000405010 <strcmp@plt>:
  405010:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #376]
  405018:	add	x16, x16, #0x178
  40501c:	br	x17

0000000000405020 <__ctype_b_loc@plt>:
  405020:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #384]
  405028:	add	x16, x16, #0x180
  40502c:	br	x17

0000000000405030 <strtol@plt>:
  405030:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #392]
  405038:	add	x16, x16, #0x188
  40503c:	br	x17

0000000000405040 <cap_get_proc@plt>:
  405040:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #400]
  405048:	add	x16, x16, #0x190
  40504c:	br	x17

0000000000405050 <fread@plt>:
  405050:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #408]
  405058:	add	x16, x16, #0x198
  40505c:	br	x17

0000000000405060 <gethostbyaddr@plt>:
  405060:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #416]
  405068:	add	x16, x16, #0x1a0
  40506c:	br	x17

0000000000405070 <free@plt>:
  405070:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #424]
  405078:	add	x16, x16, #0x1a8
  40507c:	br	x17

0000000000405080 <inet_pton@plt>:
  405080:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #432]
  405088:	add	x16, x16, #0x1b0
  40508c:	br	x17

0000000000405090 <send@plt>:
  405090:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #440]
  405098:	add	x16, x16, #0x1b8
  40509c:	br	x17

00000000004050a0 <strspn@plt>:
  4050a0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #448]
  4050a8:	add	x16, x16, #0x1c0
  4050ac:	br	x17

00000000004050b0 <strchr@plt>:
  4050b0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #456]
  4050b8:	add	x16, x16, #0x1c8
  4050bc:	br	x17

00000000004050c0 <strtoull@plt>:
  4050c0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #464]
  4050c8:	add	x16, x16, #0x1d0
  4050cc:	br	x17

00000000004050d0 <fwrite@plt>:
  4050d0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #472]
  4050d8:	add	x16, x16, #0x1d8
  4050dc:	br	x17

00000000004050e0 <socket@plt>:
  4050e0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #480]
  4050e8:	add	x16, x16, #0x1e0
  4050ec:	br	x17

00000000004050f0 <fflush@plt>:
  4050f0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #488]
  4050f8:	add	x16, x16, #0x1e8
  4050fc:	br	x17

0000000000405100 <strcpy@plt>:
  405100:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #496]
  405108:	add	x16, x16, #0x1f0
  40510c:	br	x17

0000000000405110 <fopen64@plt>:
  405110:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #504]
  405118:	add	x16, x16, #0x1f8
  40511c:	br	x17

0000000000405120 <cap_clear@plt>:
  405120:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #512]
  405128:	add	x16, x16, #0x200
  40512c:	br	x17

0000000000405130 <isatty@plt>:
  405130:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #520]
  405138:	add	x16, x16, #0x208
  40513c:	br	x17

0000000000405140 <sysconf@plt>:
  405140:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #528]
  405148:	add	x16, x16, #0x210
  40514c:	br	x17

0000000000405150 <asctime@plt>:
  405150:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #536]
  405158:	add	x16, x16, #0x218
  40515c:	br	x17

0000000000405160 <cap_free@plt>:
  405160:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #544]
  405168:	add	x16, x16, #0x220
  40516c:	br	x17

0000000000405170 <if_nametoindex@plt>:
  405170:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #552]
  405178:	add	x16, x16, #0x228
  40517c:	br	x17

0000000000405180 <strchrnul@plt>:
  405180:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #560]
  405188:	add	x16, x16, #0x230
  40518c:	br	x17

0000000000405190 <strstr@plt>:
  405190:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #568]
  405198:	add	x16, x16, #0x238
  40519c:	br	x17

00000000004051a0 <__isoc99_sscanf@plt>:
  4051a0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #576]
  4051a8:	add	x16, x16, #0x240
  4051ac:	br	x17

00000000004051b0 <strncpy@plt>:
  4051b0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #584]
  4051b8:	add	x16, x16, #0x248
  4051bc:	br	x17

00000000004051c0 <strcspn@plt>:
  4051c0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #592]
  4051c8:	add	x16, x16, #0x250
  4051cc:	br	x17

00000000004051d0 <vfprintf@plt>:
  4051d0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #600]
  4051d8:	add	x16, x16, #0x258
  4051dc:	br	x17

00000000004051e0 <printf@plt>:
  4051e0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #608]
  4051e8:	add	x16, x16, #0x260
  4051ec:	br	x17

00000000004051f0 <__assert_fail@plt>:
  4051f0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #616]
  4051f8:	add	x16, x16, #0x268
  4051fc:	br	x17

0000000000405200 <__errno_location@plt>:
  405200:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #624]
  405208:	add	x16, x16, #0x270
  40520c:	br	x17

0000000000405210 <getenv@plt>:
  405210:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #632]
  405218:	add	x16, x16, #0x278
  40521c:	br	x17

0000000000405220 <putchar@plt>:
  405220:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #640]
  405228:	add	x16, x16, #0x280
  40522c:	br	x17

0000000000405230 <__getdelim@plt>:
  405230:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #648]
  405238:	add	x16, x16, #0x288
  40523c:	br	x17

0000000000405240 <getsockname@plt>:
  405240:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405244:	ldr	x17, [x16, #656]
  405248:	add	x16, x16, #0x290
  40524c:	br	x17

0000000000405250 <fprintf@plt>:
  405250:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405254:	ldr	x17, [x16, #664]
  405258:	add	x16, x16, #0x298
  40525c:	br	x17

0000000000405260 <fgets@plt>:
  405260:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405264:	ldr	x17, [x16, #672]
  405268:	add	x16, x16, #0x2a0
  40526c:	br	x17

0000000000405270 <inet_ntop@plt>:
  405270:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405274:	ldr	x17, [x16, #680]
  405278:	add	x16, x16, #0x2a8
  40527c:	br	x17

0000000000405280 <ferror@plt>:
  405280:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405284:	ldr	x17, [x16, #688]
  405288:	add	x16, x16, #0x2b0
  40528c:	br	x17

Disassembly of section .text:

0000000000405290 <_start@@Base>:
  405290:	mov	x29, #0x0                   	// #0
  405294:	mov	x30, #0x0                   	// #0
  405298:	mov	x5, x0
  40529c:	ldr	x1, [sp]
  4052a0:	add	x2, sp, #0x8
  4052a4:	mov	x6, sp
  4052a8:	movz	x0, #0x0, lsl #48
  4052ac:	movk	x0, #0x0, lsl #32
  4052b0:	movk	x0, #0x40, lsl #16
  4052b4:	movk	x0, #0x5478
  4052b8:	movz	x3, #0x0, lsl #48
  4052bc:	movk	x3, #0x0, lsl #32
  4052c0:	movk	x3, #0x40, lsl #16
  4052c4:	movk	x3, #0xd5b0
  4052c8:	movz	x4, #0x0, lsl #48
  4052cc:	movk	x4, #0x0, lsl #32
  4052d0:	movk	x4, #0x40, lsl #16
  4052d4:	movk	x4, #0xd630
  4052d8:	bl	404ed0 <__libc_start_main@plt>
  4052dc:	bl	404fe0 <abort@plt>
  4052e0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4052e4:	ldr	x0, [x0, #4040]
  4052e8:	cbz	x0, 4052f0 <_start@@Base+0x60>
  4052ec:	b	404fd0 <__gmon_start__@plt>
  4052f0:	ret
  4052f4:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4052f8:	add	x0, x0, #0x300
  4052fc:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405300:	add	x1, x1, #0x300
  405304:	cmp	x0, x1
  405308:	b.eq	40533c <_start@@Base+0xac>  // b.none
  40530c:	stp	x29, x30, [sp, #-32]!
  405310:	mov	x29, sp
  405314:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405318:	ldr	x0, [x0, #1616]
  40531c:	str	x0, [sp, #24]
  405320:	mov	x1, x0
  405324:	cbz	x1, 405334 <_start@@Base+0xa4>
  405328:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40532c:	add	x0, x0, #0x300
  405330:	blr	x1
  405334:	ldp	x29, x30, [sp], #32
  405338:	ret
  40533c:	ret
  405340:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405344:	add	x0, x0, #0x300
  405348:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  40534c:	add	x1, x1, #0x300
  405350:	sub	x0, x0, x1
  405354:	lsr	x1, x0, #63
  405358:	add	x0, x1, x0, asr #3
  40535c:	cmp	xzr, x0, asr #1
  405360:	b.eq	405398 <_start@@Base+0x108>  // b.none
  405364:	stp	x29, x30, [sp, #-32]!
  405368:	mov	x29, sp
  40536c:	asr	x1, x0, #1
  405370:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405374:	ldr	x0, [x0, #1624]
  405378:	str	x0, [sp, #24]
  40537c:	mov	x2, x0
  405380:	cbz	x2, 405390 <_start@@Base+0x100>
  405384:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405388:	add	x0, x0, #0x300
  40538c:	blr	x2
  405390:	ldp	x29, x30, [sp], #32
  405394:	ret
  405398:	ret
  40539c:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4053a0:	ldrb	w0, [x0, #784]
  4053a4:	cbnz	w0, 4053c8 <_start@@Base+0x138>
  4053a8:	stp	x29, x30, [sp, #-16]!
  4053ac:	mov	x29, sp
  4053b0:	bl	4052f4 <_start@@Base+0x64>
  4053b4:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4053b8:	mov	w1, #0x1                   	// #1
  4053bc:	strb	w1, [x0, #784]
  4053c0:	ldp	x29, x30, [sp], #16
  4053c4:	ret
  4053c8:	ret
  4053cc:	stp	x29, x30, [sp, #-16]!
  4053d0:	mov	x29, sp
  4053d4:	bl	405340 <_start@@Base+0xb0>
  4053d8:	ldp	x29, x30, [sp], #16
  4053dc:	ret
  4053e0:	mov	x4, x0
  4053e4:	mov	w0, w1
  4053e8:	cbnz	w1, 4053f0 <_start@@Base+0x160>
  4053ec:	ret
  4053f0:	stp	x29, x30, [sp, #-16]!
  4053f4:	mov	x29, sp
  4053f8:	ldr	x3, [x2]
  4053fc:	add	x2, x4, #0x8
  405400:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405404:	add	x1, x1, #0x660
  405408:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40540c:	ldr	x0, [x0, #768]
  405410:	bl	405250 <fprintf@plt>
  405414:	mov	w0, #0xffffffff            	// #-1
  405418:	ldp	x29, x30, [sp], #16
  40541c:	ret
  405420:	stp	x29, x30, [sp, #-16]!
  405424:	mov	x29, sp
  405428:	mov	x3, x1
  40542c:	mov	x2, #0x15                  	// #21
  405430:	mov	x1, #0x1                   	// #1
  405434:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405438:	add	x0, x0, #0x698
  40543c:	bl	4050d0 <fwrite@plt>
  405440:	mov	w0, #0x0                   	// #0
  405444:	ldp	x29, x30, [sp], #16
  405448:	ret
  40544c:	stp	x29, x30, [sp, #-16]!
  405450:	mov	x29, sp
  405454:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405458:	ldr	x3, [x0, #768]
  40545c:	mov	x2, #0x97                  	// #151
  405460:	mov	x1, #0x1                   	// #1
  405464:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405468:	add	x0, x0, #0x6b0
  40546c:	bl	4050d0 <fwrite@plt>
  405470:	mov	w0, #0xffffffff            	// #-1
  405474:	bl	404d60 <exit@plt>

0000000000405478 <main@@Base>:
  405478:	stp	x29, x30, [sp, #-320]!
  40547c:	mov	x29, sp
  405480:	stp	x19, x20, [sp, #16]
  405484:	stp	x21, x22, [sp, #32]
  405488:	str	x23, [sp, #48]
  40548c:	cmp	w0, #0x1
  405490:	b.le	405718 <main@@Base+0x2a0>
  405494:	mov	w20, w0
  405498:	mov	x19, x1
  40549c:	adrp	x22, 40d000 <addattrstrz@@Base+0x1c>
  4054a0:	add	x22, x22, #0x748
  4054a4:	adrp	x21, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4054a8:	add	x21, x21, #0xd74
  4054ac:	adrp	x23, 40d000 <addattrstrz@@Base+0x1c>
  4054b0:	b	4054d0 <main@@Base+0x58>
  4054b4:	ldr	w1, [x21]
  4054b8:	add	w1, w1, #0x1
  4054bc:	str	w1, [x21]
  4054c0:	sub	w20, w20, #0x1
  4054c4:	add	x19, x19, #0x8
  4054c8:	cmp	w20, #0x1
  4054cc:	b.eq	405718 <main@@Base+0x2a0>  // b.none
  4054d0:	ldr	x0, [x19, #8]
  4054d4:	ldrb	w1, [x0]
  4054d8:	cmp	w1, #0x2d
  4054dc:	b.ne	4055cc <main@@Base+0x154>  // b.any
  4054e0:	mov	x1, x22
  4054e4:	bl	407348 <matches@@Base>
  4054e8:	and	w0, w0, #0xff
  4054ec:	cbz	w0, 4054b4 <main@@Base+0x3c>
  4054f0:	add	x1, x23, #0x750
  4054f4:	ldr	x0, [x19, #8]
  4054f8:	bl	407348 <matches@@Base>
  4054fc:	and	w0, w0, #0xff
  405500:	cbz	w0, 4054b4 <main@@Base+0x3c>
  405504:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405508:	add	x1, x1, #0x760
  40550c:	ldr	x0, [x19, #8]
  405510:	bl	407348 <matches@@Base>
  405514:	and	w0, w0, #0xff
  405518:	cbnz	w0, 405530 <main@@Base+0xb8>
  40551c:	adrp	x1, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  405520:	ldr	w0, [x1, #3440]
  405524:	add	w0, w0, #0x1
  405528:	str	w0, [x1, #3440]
  40552c:	b	4054c0 <main@@Base+0x48>
  405530:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405534:	add	x1, x1, #0x770
  405538:	ldr	x0, [x19, #8]
  40553c:	bl	407348 <matches@@Base>
  405540:	and	w0, w0, #0xff
  405544:	cbnz	w0, 40555c <main@@Base+0xe4>
  405548:	adrp	x1, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40554c:	ldr	w0, [x1, #3448]
  405550:	add	w0, w0, #0x1
  405554:	str	w0, [x1, #3448]
  405558:	b	4054c0 <main@@Base+0x48>
  40555c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405560:	add	x1, x1, #0x778
  405564:	ldr	x0, [x19, #8]
  405568:	bl	407348 <matches@@Base>
  40556c:	and	w0, w0, #0xff
  405570:	cbnz	w0, 405590 <main@@Base+0x118>
  405574:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405578:	add	x1, x1, #0x808
  40557c:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405580:	add	x0, x0, #0x788
  405584:	bl	4051e0 <printf@plt>
  405588:	mov	w0, #0x0                   	// #0
  40558c:	bl	404d60 <exit@plt>
  405590:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405594:	add	x1, x1, #0x7a8
  405598:	ldr	x0, [x19, #8]
  40559c:	bl	407348 <matches@@Base>
  4055a0:	and	w0, w0, #0xff
  4055a4:	cbnz	w0, 4055ac <main@@Base+0x134>
  4055a8:	bl	40544c <_start@@Base+0x1bc>
  4055ac:	ldr	x2, [x19, #8]
  4055b0:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4055b4:	add	x1, x1, #0x7b0
  4055b8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4055bc:	ldr	x0, [x0, #768]
  4055c0:	bl	405250 <fprintf@plt>
  4055c4:	mov	w0, #0xffffffff            	// #-1
  4055c8:	bl	404d60 <exit@plt>
  4055cc:	cmp	w20, #0x1
  4055d0:	b.le	405718 <main@@Base+0x2a0>
  4055d4:	ldr	x22, [x19, #8]
  4055d8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4055dc:	ldr	x21, [x0, #792]
  4055e0:	cbz	x21, 4055fc <main@@Base+0x184>
  4055e4:	mov	x1, x22
  4055e8:	add	x0, x21, #0x8
  4055ec:	bl	405010 <strcmp@plt>
  4055f0:	cbz	w0, 4056f4 <main@@Base+0x27c>
  4055f4:	ldr	x21, [x21]
  4055f8:	cbnz	x21, 4055e4 <main@@Base+0x16c>
  4055fc:	mov	x3, x22
  405600:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  405604:	add	x2, x2, #0x7e0
  405608:	mov	x1, #0x100                 	// #256
  40560c:	add	x0, sp, #0x40
  405610:	bl	404e40 <snprintf@plt>
  405614:	mov	w1, #0x1                   	// #1
  405618:	add	x0, sp, #0x40
  40561c:	bl	404e30 <dlopen@plt>
  405620:	mov	x21, x0
  405624:	cbz	x0, 40568c <main@@Base+0x214>
  405628:	mov	x3, x22
  40562c:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  405630:	add	x2, x2, #0x7e8
  405634:	mov	x1, #0x100                 	// #256
  405638:	add	x0, sp, #0x40
  40563c:	bl	404e40 <snprintf@plt>
  405640:	add	x1, sp, #0x40
  405644:	mov	x0, x21
  405648:	bl	404eb0 <dlsym@plt>
  40564c:	mov	x21, x0
  405650:	cbz	x0, 4056b4 <main@@Base+0x23c>
  405654:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405658:	ldr	x1, [x0, #792]
  40565c:	str	x1, [x21]
  405660:	str	x21, [x0, #792]
  405664:	ldr	x3, [x21, #24]
  405668:	add	x2, x19, #0x8
  40566c:	sub	w1, w20, #0x1
  405670:	mov	x0, x21
  405674:	blr	x3
  405678:	ldp	x19, x20, [sp, #16]
  40567c:	ldp	x21, x22, [sp, #32]
  405680:	ldr	x23, [sp, #48]
  405684:	ldp	x29, x30, [sp], #320
  405688:	ret
  40568c:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405690:	ldr	x21, [x0, #800]
  405694:	cbnz	x21, 405628 <main@@Base+0x1b0>
  405698:	mov	w1, #0x1                   	// #1
  40569c:	mov	x0, #0x0                   	// #0
  4056a0:	bl	404e30 <dlopen@plt>
  4056a4:	mov	x21, x0
  4056a8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4056ac:	str	x21, [x0, #800]
  4056b0:	cbnz	x21, 405628 <main@@Base+0x1b0>
  4056b4:	mov	x1, #0x28                  	// #40
  4056b8:	mov	x0, #0x1                   	// #1
  4056bc:	bl	404f30 <calloc@plt>
  4056c0:	mov	x21, x0
  4056c4:	cbz	x0, 4056f8 <main@@Base+0x280>
  4056c8:	mov	x2, #0xf                   	// #15
  4056cc:	mov	x1, x22
  4056d0:	add	x0, x0, #0x8
  4056d4:	bl	4051b0 <strncpy@plt>
  4056d8:	adrp	x0, 405000 <memcmp@plt>
  4056dc:	add	x0, x0, #0x3e0
  4056e0:	str	x0, [x21, #24]
  4056e4:	adrp	x0, 405000 <memcmp@plt>
  4056e8:	add	x0, x0, #0x420
  4056ec:	str	x0, [x21, #32]
  4056f0:	b	405654 <main@@Base+0x1dc>
  4056f4:	cbnz	x21, 405664 <main@@Base+0x1ec>
  4056f8:	ldr	x2, [x19, #8]
  4056fc:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405700:	add	x1, x1, #0x7f8
  405704:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405708:	ldr	x0, [x0, #768]
  40570c:	bl	405250 <fprintf@plt>
  405710:	mov	w0, #0xffffffff            	// #-1
  405714:	bl	404d60 <exit@plt>
  405718:	bl	40544c <_start@@Base+0x1bc>
  40571c:	sub	sp, sp, #0x8b0
  405720:	stp	x29, x30, [sp]
  405724:	mov	x29, sp
  405728:	stp	x19, x20, [sp, #16]
  40572c:	mov	x19, x2
  405730:	ldr	w2, [x1]
  405734:	ldrh	w3, [x1, #4]
  405738:	cmp	w3, #0x10
  40573c:	b.ne	405874 <main@@Base+0x3fc>  // b.any
  405740:	ldrb	w4, [x1, #16]
  405744:	sub	w3, w4, #0x1
  405748:	and	w3, w3, #0xff
  40574c:	sub	w0, w4, #0x7
  405750:	and	w0, w0, #0xff
  405754:	cmp	w3, #0x2
  405758:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  40575c:	b.hi	405890 <main@@Base+0x418>  // b.pmore
  405760:	subs	w3, w2, #0x14
  405764:	b.mi	4058b0 <main@@Base+0x438>  // b.first
  405768:	stp	x21, x22, [sp, #32]
  40576c:	stp	x23, x24, [sp, #48]
  405770:	add	x2, x1, #0x14
  405774:	mov	w1, #0x7                   	// #7
  405778:	add	x0, sp, #0x870
  40577c:	bl	40d4ac <parse_rtattr@@Base>
  405780:	ldr	x2, [sp, #2176]
  405784:	cbz	x2, 40579c <main@@Base+0x324>
  405788:	add	x2, x2, #0x4
  40578c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405790:	add	x1, x1, #0x890
  405794:	mov	x0, x19
  405798:	bl	405250 <fprintf@plt>
  40579c:	ldr	x0, [sp, #2168]
  4057a0:	cbz	x0, 4057b8 <main@@Base+0x340>
  4057a4:	ldrh	w2, [x0, #4]
  4057a8:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4057ac:	add	x1, x1, #0x8a0
  4057b0:	mov	x0, x19
  4057b4:	bl	405250 <fprintf@plt>
  4057b8:	ldr	x20, [sp, #2184]
  4057bc:	mov	w23, #0x1                   	// #1
  4057c0:	cbz	x20, 4057dc <main@@Base+0x364>
  4057c4:	ldr	w2, [x20, #4]
  4057c8:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4057cc:	add	x1, x1, #0x8b0
  4057d0:	mov	x0, x19
  4057d4:	bl	405250 <fprintf@plt>
  4057d8:	ldr	w23, [x20, #4]
  4057dc:	ldr	x0, [sp, #2192]
  4057e0:	cbz	x0, 4057f8 <main@@Base+0x380>
  4057e4:	ldr	w2, [x0, #4]
  4057e8:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4057ec:	add	x1, x1, #0x8c0
  4057f0:	mov	x0, x19
  4057f4:	bl	405250 <fprintf@plt>
  4057f8:	ldr	x0, [sp, #2200]
  4057fc:	cbz	x0, 405814 <main@@Base+0x39c>
  405800:	ldr	w2, [x0, #4]
  405804:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405808:	add	x1, x1, #0x8d8
  40580c:	mov	x0, x19
  405810:	bl	405250 <fprintf@plt>
  405814:	mov	x1, x19
  405818:	mov	w0, #0xa                   	// #10
  40581c:	bl	404e20 <fputc@plt>
  405820:	ldr	x2, [sp, #2208]
  405824:	cbz	x2, 405a34 <main@@Base+0x5bc>
  405828:	str	x25, [sp, #64]
  40582c:	ldrh	w3, [x2], #4
  405830:	sub	w3, w3, #0x4
  405834:	mov	w1, #0x100                 	// #256
  405838:	add	x0, sp, #0x68
  40583c:	bl	40d4ac <parse_rtattr@@Base>
  405840:	mov	x3, x19
  405844:	mov	x2, #0x16                  	// #22
  405848:	mov	x1, #0x1                   	// #1
  40584c:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405850:	add	x0, x0, #0x8f0
  405854:	bl	4050d0 <fwrite@plt>
  405858:	add	x20, sp, #0x68
  40585c:	mov	w21, #0x0                   	// #0
  405860:	adrp	x22, 40d000 <addattrstrz@@Base+0x1c>
  405864:	add	x22, x22, #0x908
  405868:	adrp	x24, 40d000 <addattrstrz@@Base+0x1c>
  40586c:	add	x24, x24, #0x9d8
  405870:	b	405910 <main@@Base+0x498>
  405874:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405878:	add	x1, x1, #0x810
  40587c:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405880:	ldr	x0, [x0, #768]
  405884:	bl	405250 <fprintf@plt>
  405888:	mov	w0, #0x0                   	// #0
  40588c:	b	405b30 <main@@Base+0x6b8>
  405890:	mov	w2, w4
  405894:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405898:	add	x1, x1, #0x848
  40589c:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4058a0:	ldr	x0, [x0, #768]
  4058a4:	bl	405250 <fprintf@plt>
  4058a8:	mov	w0, #0x0                   	// #0
  4058ac:	b	405b30 <main@@Base+0x6b8>
  4058b0:	mov	w2, w3
  4058b4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4058b8:	add	x1, x1, #0x868
  4058bc:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4058c0:	ldr	x0, [x0, #768]
  4058c4:	bl	405250 <fprintf@plt>
  4058c8:	mov	w0, #0xffffffff            	// #-1
  4058cc:	b	405b30 <main@@Base+0x6b8>
  4058d0:	ldr	w2, [x0, #4]
  4058d4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4058d8:	add	x1, x1, #0x910
  4058dc:	mov	x0, x19
  4058e0:	bl	405250 <fprintf@plt>
  4058e4:	ldr	x0, [sp, #96]
  4058e8:	cmp	x0, #0x0
  4058ec:	ccmp	w23, #0x1, #0x0, ne  // ne = any
  4058f0:	b.hi	405950 <main@@Base+0x4d8>  // b.pmore
  4058f4:	mov	x1, x19
  4058f8:	mov	w0, #0xa                   	// #10
  4058fc:	bl	404e20 <fputc@plt>
  405900:	add	w21, w21, #0x1
  405904:	add	x20, x20, #0x8
  405908:	cmp	w21, #0x100
  40590c:	b.eq	405a24 <main@@Base+0x5ac>  // b.none
  405910:	ldr	x0, [x20]
  405914:	cbz	x0, 405900 <main@@Base+0x488>
  405918:	mov	w2, w21
  40591c:	mov	x1, x22
  405920:	mov	x0, x19
  405924:	bl	405250 <fprintf@plt>
  405928:	ldr	x2, [x20]
  40592c:	cbz	x2, 405b58 <main@@Base+0x6e0>
  405930:	ldrh	w3, [x2], #4
  405934:	sub	w3, w3, #0x4
  405938:	mov	w1, #0x2                   	// #2
  40593c:	add	x0, sp, #0x50
  405940:	bl	40d4ac <parse_rtattr@@Base>
  405944:	ldr	x0, [sp, #88]
  405948:	cbnz	x0, 4058d0 <main@@Base+0x458>
  40594c:	b	4058e4 <main@@Base+0x46c>
  405950:	ldr	w25, [x0, #4]
  405954:	mov	w2, w25
  405958:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  40595c:	add	x1, x1, #0x920
  405960:	mov	x0, x19
  405964:	bl	405250 <fprintf@plt>
  405968:	cbz	w25, 4059a4 <main@@Base+0x52c>
  40596c:	mov	x3, x19
  405970:	mov	x2, #0x3                   	// #3
  405974:	mov	x1, #0x1                   	// #1
  405978:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  40597c:	add	x0, x0, #0x940
  405980:	bl	4050d0 <fwrite@plt>
  405984:	tbnz	w25, #0, 4059b4 <main@@Base+0x53c>
  405988:	tbnz	w25, #1, 4059d0 <main@@Base+0x558>
  40598c:	tbnz	w25, #2, 4059ec <main@@Base+0x574>
  405990:	tbnz	w25, #3, 405a08 <main@@Base+0x590>
  405994:	mov	x1, x19
  405998:	mov	w0, #0xa                   	// #10
  40599c:	bl	404e20 <fputc@plt>
  4059a0:	b	4058f4 <main@@Base+0x47c>
  4059a4:	mov	x1, x19
  4059a8:	mov	w0, #0xa                   	// #10
  4059ac:	bl	404e20 <fputc@plt>
  4059b0:	b	4058f4 <main@@Base+0x47c>
  4059b4:	mov	x3, x19
  4059b8:	mov	x2, #0x1b                  	// #27
  4059bc:	mov	x1, #0x1                   	// #1
  4059c0:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4059c4:	add	x0, x0, #0x948
  4059c8:	bl	4050d0 <fwrite@plt>
  4059cc:	b	405988 <main@@Base+0x510>
  4059d0:	mov	x3, x19
  4059d4:	mov	x2, #0xa                   	// #10
  4059d8:	mov	x1, #0x1                   	// #1
  4059dc:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4059e0:	add	x0, x0, #0x968
  4059e4:	bl	4050d0 <fwrite@plt>
  4059e8:	b	40598c <main@@Base+0x514>
  4059ec:	mov	x3, x19
  4059f0:	mov	x2, #0xc                   	// #12
  4059f4:	mov	x1, #0x1                   	// #1
  4059f8:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4059fc:	add	x0, x0, #0x978
  405a00:	bl	4050d0 <fwrite@plt>
  405a04:	b	405990 <main@@Base+0x518>
  405a08:	mov	x3, x19
  405a0c:	mov	x2, #0xb                   	// #11
  405a10:	mov	x1, #0x1                   	// #1
  405a14:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405a18:	add	x0, x0, #0x988
  405a1c:	bl	4050d0 <fwrite@plt>
  405a20:	b	405994 <main@@Base+0x51c>
  405a24:	mov	x1, x19
  405a28:	mov	w0, #0xa                   	// #10
  405a2c:	bl	404e20 <fputc@plt>
  405a30:	ldr	x25, [sp, #64]
  405a34:	ldr	x2, [sp, #2216]
  405a38:	cbz	x2, 405b1c <main@@Base+0x6a4>
  405a3c:	ldrh	w3, [x2], #4
  405a40:	sub	w3, w3, #0x4
  405a44:	mov	w1, #0x100                 	// #256
  405a48:	add	x0, sp, #0x68
  405a4c:	bl	40d4ac <parse_rtattr@@Base>
  405a50:	mov	x3, x19
  405a54:	mov	x2, #0x13                  	// #19
  405a58:	mov	x1, #0x1                   	// #1
  405a5c:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405a60:	add	x0, x0, #0x998
  405a64:	bl	4050d0 <fwrite@plt>
  405a68:	add	x20, sp, #0x68
  405a6c:	mov	w21, #0x0                   	// #0
  405a70:	adrp	x22, 40d000 <addattrstrz@@Base+0x1c>
  405a74:	add	x22, x22, #0x908
  405a78:	adrp	x23, 40d000 <addattrstrz@@Base+0x1c>
  405a7c:	add	x23, x23, #0x9c0
  405a80:	b	405ab4 <main@@Base+0x63c>
  405a84:	add	x2, x2, #0x4
  405a88:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405a8c:	add	x1, x1, #0x9b0
  405a90:	mov	x0, x19
  405a94:	bl	405250 <fprintf@plt>
  405a98:	mov	x1, x19
  405a9c:	mov	w0, #0xa                   	// #10
  405aa0:	bl	404e20 <fputc@plt>
  405aa4:	add	w21, w21, #0x1
  405aa8:	add	x20, x20, #0x8
  405aac:	cmp	w21, #0x100
  405ab0:	b.eq	405b10 <main@@Base+0x698>  // b.none
  405ab4:	ldr	x0, [x20]
  405ab8:	cbz	x0, 405aa4 <main@@Base+0x62c>
  405abc:	mov	w2, w21
  405ac0:	mov	x1, x22
  405ac4:	mov	x0, x19
  405ac8:	bl	405250 <fprintf@plt>
  405acc:	ldr	x2, [x20]
  405ad0:	cbz	x2, 405b40 <main@@Base+0x6c8>
  405ad4:	ldrh	w3, [x2], #4
  405ad8:	sub	w3, w3, #0x4
  405adc:	mov	w1, #0x2                   	// #2
  405ae0:	add	x0, sp, #0x50
  405ae4:	bl	40d4ac <parse_rtattr@@Base>
  405ae8:	ldr	x0, [sp, #96]
  405aec:	cbz	x0, 405b04 <main@@Base+0x68c>
  405af0:	ldr	w2, [x0, #4]
  405af4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405af8:	add	x1, x1, #0x910
  405afc:	mov	x0, x19
  405b00:	bl	405250 <fprintf@plt>
  405b04:	ldr	x2, [sp, #88]
  405b08:	cbnz	x2, 405a84 <main@@Base+0x60c>
  405b0c:	b	405a98 <main@@Base+0x620>
  405b10:	mov	x1, x19
  405b14:	mov	w0, #0xa                   	// #10
  405b18:	bl	404e20 <fputc@plt>
  405b1c:	mov	x0, x19
  405b20:	bl	4050f0 <fflush@plt>
  405b24:	mov	w0, #0x0                   	// #0
  405b28:	ldp	x21, x22, [sp, #32]
  405b2c:	ldp	x23, x24, [sp, #48]
  405b30:	ldp	x19, x20, [sp, #16]
  405b34:	ldp	x29, x30, [sp]
  405b38:	add	sp, sp, #0x8b0
  405b3c:	ret
  405b40:	mov	x3, x19
  405b44:	mov	x2, #0x15                  	// #21
  405b48:	mov	x1, #0x1                   	// #1
  405b4c:	mov	x0, x23
  405b50:	bl	4050d0 <fwrite@plt>
  405b54:	b	405a98 <main@@Base+0x620>
  405b58:	mov	x3, x19
  405b5c:	mov	x2, #0x17                  	// #23
  405b60:	mov	x1, #0x1                   	// #1
  405b64:	mov	x0, x24
  405b68:	bl	4050d0 <fwrite@plt>
  405b6c:	b	4058f4 <main@@Base+0x47c>
  405b70:	stp	x29, x30, [sp, #-16]!
  405b74:	mov	x29, sp
  405b78:	mov	x2, x1
  405b7c:	mov	x1, x0
  405b80:	mov	x0, #0x0                   	// #0
  405b84:	bl	40571c <main@@Base+0x2a4>
  405b88:	ldp	x29, x30, [sp], #16
  405b8c:	ret
  405b90:	mov	x12, #0x10a0                	// #4256
  405b94:	sub	sp, sp, x12
  405b98:	stp	x29, x30, [sp]
  405b9c:	mov	x29, sp
  405ba0:	stp	x19, x20, [sp, #16]
  405ba4:	str	x21, [sp, #32]
  405ba8:	mov	w19, w0
  405bac:	mov	w20, w1
  405bb0:	mov	x21, x2
  405bb4:	mov	x2, #0x1014                	// #4116
  405bb8:	mov	w1, #0x0                   	// #0
  405bbc:	add	x0, sp, #0x40
  405bc0:	bl	404f00 <memset@plt>
  405bc4:	mov	w0, #0x14                  	// #20
  405bc8:	str	w0, [sp, #64]
  405bcc:	mov	w0, #0x10                  	// #16
  405bd0:	strh	w0, [sp, #68]
  405bd4:	mov	w0, #0x5                   	// #5
  405bd8:	strh	w0, [sp, #70]
  405bdc:	mov	w0, #0x3                   	// #3
  405be0:	strb	w0, [sp, #80]
  405be4:	str	xzr, [sp, #56]
  405be8:	mov	w2, #0x10                  	// #16
  405bec:	mov	w1, #0x0                   	// #0
  405bf0:	add	x0, sp, #0x1, lsl #12
  405bf4:	add	x0, x0, #0x68
  405bf8:	bl	40b944 <rtnl_open_byproto@@Base>
  405bfc:	tbnz	w0, #31, 405c40 <main@@Base+0x7c8>
  405c00:	cmp	w19, #0x3
  405c04:	b.eq	405c64 <main@@Base+0x7ec>  // b.none
  405c08:	mov	w20, #0x0                   	// #0
  405c0c:	cbz	w19, 405dec <main@@Base+0x974>
  405c10:	ldr	x0, [sp, #56]
  405c14:	bl	405070 <free@plt>
  405c18:	add	x0, sp, #0x1, lsl #12
  405c1c:	add	x0, x0, #0x68
  405c20:	bl	40b910 <rtnl_close@@Base>
  405c24:	mov	w0, w20
  405c28:	ldp	x19, x20, [sp, #16]
  405c2c:	ldr	x21, [sp, #32]
  405c30:	ldp	x29, x30, [sp]
  405c34:	mov	x12, #0x10a0                	// #4256
  405c38:	add	sp, sp, x12
  405c3c:	ret
  405c40:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405c44:	ldr	x3, [x0, #768]
  405c48:	mov	x2, #0x23                  	// #35
  405c4c:	mov	x1, #0x1                   	// #1
  405c50:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405c54:	add	x0, x0, #0x9f0
  405c58:	bl	4050d0 <fwrite@plt>
  405c5c:	mov	w0, #0x1                   	// #1
  405c60:	bl	404d60 <exit@plt>
  405c64:	cmp	w20, #0x2
  405c68:	b.ne	405d14 <main@@Base+0x89c>  // b.any
  405c6c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405c70:	add	x1, x1, #0xa30
  405c74:	ldr	x0, [x21]
  405c78:	bl	407348 <matches@@Base>
  405c7c:	and	w0, w0, #0xff
  405c80:	cbnz	w0, 405d38 <main@@Base+0x8c0>
  405c84:	mov	x2, #0x10                  	// #16
  405c88:	ldr	x1, [x21, #8]
  405c8c:	add	x0, sp, #0x1, lsl #12
  405c90:	add	x0, x0, #0x58
  405c94:	bl	408730 <strlcpy@@Base>
  405c98:	add	x0, sp, #0x1, lsl #12
  405c9c:	add	x0, x0, #0x58
  405ca0:	bl	404d50 <strlen@plt>
  405ca4:	add	w4, w0, #0x1
  405ca8:	add	x3, sp, #0x1, lsl #12
  405cac:	add	x3, x3, #0x58
  405cb0:	mov	w2, #0x2                   	// #2
  405cb4:	mov	w1, #0x80                  	// #128
  405cb8:	add	x0, sp, #0x40
  405cbc:	bl	40cea8 <addattr_l@@Base>
  405cc0:	add	x2, sp, #0x38
  405cc4:	add	x1, sp, #0x40
  405cc8:	add	x0, sp, #0x1, lsl #12
  405ccc:	add	x0, x0, #0x68
  405cd0:	bl	40c880 <rtnl_talk@@Base>
  405cd4:	tbnz	w0, #31, 405dc8 <main@@Base+0x950>
  405cd8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405cdc:	ldr	x1, [x0, #776]
  405ce0:	ldr	x0, [sp, #56]
  405ce4:	bl	405b70 <main@@Base+0x6f8>
  405ce8:	mov	w20, #0x0                   	// #0
  405cec:	tbz	w0, #31, 405c10 <main@@Base+0x798>
  405cf0:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405cf4:	ldr	x3, [x0, #768]
  405cf8:	mov	x2, #0x10                  	// #16
  405cfc:	mov	x1, #0x1                   	// #1
  405d00:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405d04:	add	x0, x0, #0xa80
  405d08:	bl	4050d0 <fwrite@plt>
  405d0c:	mov	w20, #0xffffffff            	// #-1
  405d10:	b	405c10 <main@@Base+0x798>
  405d14:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405d18:	ldr	x3, [x0, #768]
  405d1c:	mov	x2, #0x17                  	// #23
  405d20:	mov	x1, #0x1                   	// #1
  405d24:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405d28:	add	x0, x0, #0xa18
  405d2c:	bl	4050d0 <fwrite@plt>
  405d30:	mov	w20, #0xffffffff            	// #-1
  405d34:	b	405c24 <main@@Base+0x7ac>
  405d38:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405d3c:	add	x1, x1, #0xa38
  405d40:	ldr	x0, [x21]
  405d44:	bl	407348 <matches@@Base>
  405d48:	and	w0, w0, #0xff
  405d4c:	cbnz	w0, 405da4 <main@@Base+0x92c>
  405d50:	mov	w2, #0x0                   	// #0
  405d54:	ldr	x1, [x21, #8]
  405d58:	add	x0, sp, #0x36
  405d5c:	bl	4067d0 <get_u16@@Base>
  405d60:	cbnz	w0, 405d80 <main@@Base+0x908>
  405d64:	mov	w4, #0x2                   	// #2
  405d68:	add	x3, sp, #0x36
  405d6c:	mov	w2, #0x1                   	// #1
  405d70:	mov	w1, #0x80                  	// #128
  405d74:	add	x0, sp, #0x40
  405d78:	bl	40cea8 <addattr_l@@Base>
  405d7c:	b	405cc0 <main@@Base+0x848>
  405d80:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405d84:	ldr	x3, [x0, #768]
  405d88:	mov	x2, #0xd                   	// #13
  405d8c:	mov	x1, #0x1                   	// #1
  405d90:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405d94:	add	x0, x0, #0xa40
  405d98:	bl	4050d0 <fwrite@plt>
  405d9c:	mov	w20, #0xffffffff            	// #-1
  405da0:	b	405c10 <main@@Base+0x798>
  405da4:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405da8:	ldr	x3, [x0, #768]
  405dac:	mov	x2, #0xd                   	// #13
  405db0:	mov	x1, #0x1                   	// #1
  405db4:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405db8:	add	x0, x0, #0xa50
  405dbc:	bl	4050d0 <fwrite@plt>
  405dc0:	mov	w20, #0xffffffff            	// #-1
  405dc4:	b	405c10 <main@@Base+0x798>
  405dc8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405dcc:	ldr	x3, [x0, #768]
  405dd0:	mov	x2, #0x1c                  	// #28
  405dd4:	mov	x1, #0x1                   	// #1
  405dd8:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405ddc:	add	x0, x0, #0xa60
  405de0:	bl	4050d0 <fwrite@plt>
  405de4:	mov	w20, #0xffffffff            	// #-1
  405de8:	b	405c10 <main@@Base+0x798>
  405dec:	mov	w0, #0x301                 	// #769
  405df0:	strh	w0, [sp, #70]
  405df4:	ldr	w0, [sp, #4228]
  405df8:	add	w0, w0, #0x1
  405dfc:	str	w0, [sp, #4228]
  405e00:	str	w0, [sp, #4232]
  405e04:	str	w0, [sp, #72]
  405e08:	ldr	w2, [sp, #64]
  405e0c:	add	x1, sp, #0x40
  405e10:	add	x0, sp, #0x1, lsl #12
  405e14:	add	x0, x0, #0x68
  405e18:	bl	40c258 <rtnl_send@@Base>
  405e1c:	tbnz	w0, #31, 405e48 <main@@Base+0x9d0>
  405e20:	mov	w3, #0x0                   	// #0
  405e24:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405e28:	ldr	x2, [x0, #776]
  405e2c:	adrp	x1, 405000 <memcmp@plt>
  405e30:	add	x1, x1, #0xb70
  405e34:	add	x0, sp, #0x1, lsl #12
  405e38:	add	x0, x0, #0x68
  405e3c:	bl	40c4b8 <rtnl_dump_filter_nc@@Base>
  405e40:	mov	w20, w19
  405e44:	b	405c10 <main@@Base+0x798>
  405e48:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405e4c:	add	x0, x0, #0xa98
  405e50:	bl	404d70 <perror@plt>
  405e54:	mov	w20, #0xffffffff            	// #-1
  405e58:	b	405c10 <main@@Base+0x798>
  405e5c:	stp	x29, x30, [sp, #-96]!
  405e60:	mov	x29, sp
  405e64:	cmp	w1, #0x1
  405e68:	b.le	405ef4 <main@@Base+0xa7c>
  405e6c:	stp	x19, x20, [sp, #16]
  405e70:	mov	w20, w1
  405e74:	mov	x19, x2
  405e78:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405e7c:	add	x1, x1, #0xad8
  405e80:	ldr	x0, [x2, #8]
  405e84:	bl	407348 <matches@@Base>
  405e88:	and	w0, w0, #0xff
  405e8c:	cbz	w0, 405f18 <main@@Base+0xaa0>
  405e90:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405e94:	add	x1, x1, #0xb08
  405e98:	ldr	x0, [x19, #8]
  405e9c:	bl	407348 <matches@@Base>
  405ea0:	and	w0, w0, #0xff
  405ea4:	cbz	w0, 405f78 <main@@Base+0xb00>
  405ea8:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405eac:	add	x1, x1, #0xb10
  405eb0:	ldr	x0, [x19, #8]
  405eb4:	bl	407348 <matches@@Base>
  405eb8:	and	w0, w0, #0xff
  405ebc:	cbz	w0, 405ed8 <main@@Base+0xa60>
  405ec0:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405ec4:	add	x1, x1, #0xb18
  405ec8:	ldr	x0, [x19, #8]
  405ecc:	bl	407348 <matches@@Base>
  405ed0:	and	w0, w0, #0xff
  405ed4:	cbnz	w0, 405f90 <main@@Base+0xb18>
  405ed8:	add	x2, x19, #0x10
  405edc:	sub	w1, w20, #0x2
  405ee0:	mov	w0, #0x0                   	// #0
  405ee4:	bl	405b90 <main@@Base+0x718>
  405ee8:	ldp	x19, x20, [sp, #16]
  405eec:	ldp	x29, x30, [sp], #96
  405ef0:	ret
  405ef4:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405ef8:	ldr	x3, [x0, #768]
  405efc:	mov	x2, #0x18                  	// #24
  405f00:	mov	x1, #0x1                   	// #1
  405f04:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405f08:	add	x0, x0, #0xab8
  405f0c:	bl	4050d0 <fwrite@plt>
  405f10:	mov	w0, #0xffffffff            	// #-1
  405f14:	b	405eec <main@@Base+0xa74>
  405f18:	mov	w2, #0x10                  	// #16
  405f1c:	mov	w1, #0x8000                	// #32768
  405f20:	add	x0, sp, #0x28
  405f24:	bl	40b944 <rtnl_open_byproto@@Base>
  405f28:	tbnz	w0, #31, 405f50 <main@@Base+0xad8>
  405f2c:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405f30:	ldr	x2, [x0, #776]
  405f34:	adrp	x1, 405000 <memcmp@plt>
  405f38:	add	x1, x1, #0x71c
  405f3c:	add	x0, sp, #0x28
  405f40:	bl	40c968 <rtnl_listen@@Base>
  405f44:	asr	w0, w0, #31
  405f48:	ldp	x19, x20, [sp, #16]
  405f4c:	b	405eec <main@@Base+0xa74>
  405f50:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405f54:	ldr	x3, [x0, #768]
  405f58:	mov	x2, #0x22                  	// #34
  405f5c:	mov	x1, #0x1                   	// #1
  405f60:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405f64:	add	x0, x0, #0xae0
  405f68:	bl	4050d0 <fwrite@plt>
  405f6c:	mov	w0, #0xffffffff            	// #-1
  405f70:	ldp	x19, x20, [sp, #16]
  405f74:	b	405eec <main@@Base+0xa74>
  405f78:	add	x2, x19, #0x10
  405f7c:	sub	w1, w20, #0x2
  405f80:	mov	w0, #0x3                   	// #3
  405f84:	bl	405b90 <main@@Base+0x718>
  405f88:	ldp	x19, x20, [sp, #16]
  405f8c:	b	405eec <main@@Base+0xa74>
  405f90:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405f94:	add	x1, x1, #0xb20
  405f98:	ldr	x0, [x19, #8]
  405f9c:	bl	407348 <matches@@Base>
  405fa0:	and	w0, w0, #0xff
  405fa4:	cbz	w0, 405ed8 <main@@Base+0xa60>
  405fa8:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405fac:	add	x1, x1, #0xb28
  405fb0:	ldr	x0, [x19, #8]
  405fb4:	bl	407348 <matches@@Base>
  405fb8:	and	w0, w0, #0xff
  405fbc:	cbnz	w0, 405fe8 <main@@Base+0xb70>
  405fc0:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405fc4:	ldr	x3, [x0, #768]
  405fc8:	mov	x2, #0x9f                  	// #159
  405fcc:	mov	x1, #0x1                   	// #1
  405fd0:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  405fd4:	add	x0, x0, #0xb30
  405fd8:	bl	4050d0 <fwrite@plt>
  405fdc:	mov	w0, #0xffffffff            	// #-1
  405fe0:	ldp	x19, x20, [sp, #16]
  405fe4:	b	405eec <main@@Base+0xa74>
  405fe8:	ldr	x2, [x19, #8]
  405fec:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  405ff0:	add	x1, x1, #0xbd0
  405ff4:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405ff8:	ldr	x0, [x0, #768]
  405ffc:	bl	405250 <fprintf@plt>
  406000:	mov	w0, #0xffffffff            	// #-1
  406004:	ldp	x19, x20, [sp, #16]
  406008:	b	405eec <main@@Base+0xa74>
  40600c:	ldrh	w1, [x0, #6]
  406010:	cmp	w1, #0x2
  406014:	b.eq	406024 <main@@Base+0xbac>  // b.none
  406018:	cmp	w1, #0xa
  40601c:	b.eq	406074 <main@@Base+0xbfc>  // b.none
  406020:	ret
  406024:	ldr	w1, [x0, #8]
  406028:	cbnz	w1, 40603c <main@@Base+0xbc4>
  40602c:	ldrh	w1, [x0]
  406030:	orr	w1, w1, #0x6
  406034:	strh	w1, [x0]
  406038:	b	406020 <main@@Base+0xba8>
  40603c:	rev	w1, w1
  406040:	and	w1, w1, #0xf0000000
  406044:	mov	w2, #0xe0000000            	// #-536870912
  406048:	cmp	w1, w2
  40604c:	b.eq	406060 <main@@Base+0xbe8>  // b.none
  406050:	ldrh	w1, [x0]
  406054:	orr	w1, w1, #0x2
  406058:	strh	w1, [x0]
  40605c:	b	406020 <main@@Base+0xba8>
  406060:	ldrh	w1, [x0]
  406064:	mov	w2, #0xa                   	// #10
  406068:	orr	w1, w1, w2
  40606c:	strh	w1, [x0]
  406070:	b	406020 <main@@Base+0xba8>
  406074:	ldr	w1, [x0, #8]
  406078:	cbnz	w1, 4060a4 <main@@Base+0xc2c>
  40607c:	ldr	w1, [x0, #12]
  406080:	cbnz	w1, 4060a4 <main@@Base+0xc2c>
  406084:	ldr	w1, [x0, #16]
  406088:	cbnz	w1, 4060a4 <main@@Base+0xc2c>
  40608c:	ldr	w1, [x0, #20]
  406090:	cbnz	w1, 4060a4 <main@@Base+0xc2c>
  406094:	ldrh	w1, [x0]
  406098:	orr	w1, w1, #0x6
  40609c:	strh	w1, [x0]
  4060a0:	b	406020 <main@@Base+0xba8>
  4060a4:	ldrb	w1, [x0, #8]
  4060a8:	cmp	w1, #0xff
  4060ac:	b.eq	4060c0 <main@@Base+0xc48>  // b.none
  4060b0:	ldrh	w1, [x0]
  4060b4:	orr	w1, w1, #0x2
  4060b8:	strh	w1, [x0]
  4060bc:	b	406020 <main@@Base+0xba8>
  4060c0:	ldrh	w1, [x0]
  4060c4:	mov	w2, #0xa                   	// #10
  4060c8:	orr	w1, w1, w2
  4060cc:	strh	w1, [x0]
  4060d0:	b	406020 <main@@Base+0xba8>
  4060d4:	stp	x29, x30, [sp, #-32]!
  4060d8:	mov	x29, sp
  4060dc:	stp	x19, x20, [sp, #16]
  4060e0:	mov	x20, x0
  4060e4:	ldrb	w19, [x0]
  4060e8:	cbz	w19, 406118 <main@@Base+0xca0>
  4060ec:	cmp	w19, #0x2f
  4060f0:	b.eq	406120 <main@@Base+0xca8>  // b.none
  4060f4:	bl	405020 <__ctype_b_loc@plt>
  4060f8:	and	x19, x19, #0xff
  4060fc:	ldr	x0, [x0]
  406100:	ldrh	w0, [x0, x19, lsl #1]
  406104:	tbnz	w0, #13, 406130 <main@@Base+0xcb8>
  406108:	ldrb	w19, [x20, #1]!
  40610c:	cbnz	w19, 4060ec <main@@Base+0xc74>
  406110:	mov	w0, #0x0                   	// #0
  406114:	b	406124 <main@@Base+0xcac>
  406118:	mov	w0, #0xffffffff            	// #-1
  40611c:	b	406124 <main@@Base+0xcac>
  406120:	mov	w0, #0xffffffff            	// #-1
  406124:	ldp	x19, x20, [sp, #16]
  406128:	ldp	x29, x30, [sp], #32
  40612c:	ret
  406130:	mov	w0, #0xffffffff            	// #-1
  406134:	b	406124 <main@@Base+0xcac>

0000000000406138 <read_prop@@Base>:
  406138:	stp	x29, x30, [sp, #-272]!
  40613c:	mov	x29, sp
  406140:	stp	x19, x20, [sp, #16]
  406144:	str	x21, [sp, #32]
  406148:	mov	x20, x1
  40614c:	mov	x21, x2
  406150:	mov	x4, x1
  406154:	mov	x3, x0
  406158:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  40615c:	add	x2, x2, #0xc00
  406160:	mov	x1, #0x80                  	// #128
  406164:	add	x0, sp, #0x90
  406168:	bl	404e40 <snprintf@plt>
  40616c:	sub	w0, w0, #0x1
  406170:	cmp	w0, #0x7e
  406174:	b.hi	406224 <read_prop@@Base+0xec>  // b.pmore
  406178:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  40617c:	add	x1, x1, #0xc40
  406180:	add	x0, sp, #0x90
  406184:	bl	405110 <fopen64@plt>
  406188:	mov	x19, x0
  40618c:	cbz	x0, 40624c <read_prop@@Base+0x114>
  406190:	mov	x2, x0
  406194:	mov	w1, #0x50                  	// #80
  406198:	add	x0, sp, #0x40
  40619c:	bl	405260 <fgets@plt>
  4061a0:	cbz	x0, 406284 <read_prop@@Base+0x14c>
  4061a4:	mov	w1, #0xa                   	// #10
  4061a8:	add	x0, sp, #0x40
  4061ac:	bl	4050b0 <strchr@plt>
  4061b0:	cbz	x0, 4061b8 <read_prop@@Base+0x80>
  4061b4:	strb	wzr, [x0]
  4061b8:	mov	x0, x19
  4061bc:	bl	404e70 <fclose@plt>
  4061c0:	add	x19, sp, #0x40
  4061c4:	mov	w2, #0x0                   	// #0
  4061c8:	add	x1, sp, #0x38
  4061cc:	mov	x0, x19
  4061d0:	bl	405030 <strtol@plt>
  4061d4:	mov	x20, x0
  4061d8:	ldr	x0, [sp, #56]
  4061dc:	ldrb	w1, [x0]
  4061e0:	cmp	w1, #0x0
  4061e4:	ccmp	x19, x0, #0x4, eq  // eq = none
  4061e8:	b.eq	4062b0 <read_prop@@Base+0x178>  // b.none
  4061ec:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4061f0:	add	x0, x20, x0
  4061f4:	cmn	x0, #0x3
  4061f8:	b.ls	40620c <read_prop@@Base+0xd4>  // b.plast
  4061fc:	bl	405200 <__errno_location@plt>
  406200:	ldr	w0, [x0]
  406204:	cmp	w0, #0x22
  406208:	b.eq	4062f4 <read_prop@@Base+0x1bc>  // b.none
  40620c:	str	x20, [x21]
  406210:	mov	w0, #0x0                   	// #0
  406214:	ldp	x19, x20, [sp, #16]
  406218:	ldr	x21, [sp, #32]
  40621c:	ldp	x29, x30, [sp], #272
  406220:	ret
  406224:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  406228:	ldr	x0, [x0, #3992]
  40622c:	ldr	x3, [x0]
  406230:	mov	x2, #0x26                  	// #38
  406234:	mov	x1, #0x1                   	// #1
  406238:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  40623c:	add	x0, x0, #0xc18
  406240:	bl	4050d0 <fwrite@plt>
  406244:	mov	w0, #0xffffffff            	// #-1
  406248:	b	406214 <read_prop@@Base+0xdc>
  40624c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  406250:	ldr	x0, [x0, #3992]
  406254:	ldr	x19, [x0]
  406258:	bl	405200 <__errno_location@plt>
  40625c:	ldr	w0, [x0]
  406260:	bl	404f90 <strerror@plt>
  406264:	mov	x3, x0
  406268:	add	x2, sp, #0x90
  40626c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406270:	add	x1, x1, #0xc48
  406274:	mov	x0, x19
  406278:	bl	405250 <fprintf@plt>
  40627c:	mov	w0, #0xffffffff            	// #-1
  406280:	b	406214 <read_prop@@Base+0xdc>
  406284:	add	x3, sp, #0x90
  406288:	mov	x2, x20
  40628c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406290:	add	x1, x1, #0xc58
  406294:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  406298:	ldr	x0, [x0, #3992]
  40629c:	ldr	x0, [x0]
  4062a0:	bl	405250 <fprintf@plt>
  4062a4:	mov	x0, x19
  4062a8:	bl	404e70 <fclose@plt>
  4062ac:	b	4062d0 <read_prop@@Base+0x198>
  4062b0:	add	x3, sp, #0x90
  4062b4:	add	x2, sp, #0x40
  4062b8:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4062bc:	add	x1, x1, #0xc88
  4062c0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4062c4:	ldr	x0, [x0, #3992]
  4062c8:	ldr	x0, [x0]
  4062cc:	bl	405250 <fprintf@plt>
  4062d0:	add	x2, sp, #0x90
  4062d4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4062d8:	add	x1, x1, #0xcc0
  4062dc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4062e0:	ldr	x0, [x0, #3992]
  4062e4:	ldr	x0, [x0]
  4062e8:	bl	405250 <fprintf@plt>
  4062ec:	mov	w0, #0xffffffff            	// #-1
  4062f0:	b	406214 <read_prop@@Base+0xdc>
  4062f4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4062f8:	ldr	x0, [x0, #3992]
  4062fc:	ldr	x19, [x0]
  406300:	mov	w0, #0x22                  	// #34
  406304:	bl	404f90 <strerror@plt>
  406308:	mov	x3, x0
  40630c:	add	x2, sp, #0x90
  406310:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406314:	add	x1, x1, #0xcb0
  406318:	mov	x0, x19
  40631c:	bl	405250 <fprintf@plt>
  406320:	b	4062d0 <read_prop@@Base+0x198>

0000000000406324 <get_hex@@Base>:
  406324:	and	w0, w0, #0xff
  406328:	sub	w1, w0, #0x41
  40632c:	and	w1, w1, #0xff
  406330:	cmp	w1, #0x5
  406334:	b.ls	406360 <get_hex@@Base+0x3c>  // b.plast
  406338:	sub	w1, w0, #0x61
  40633c:	and	w1, w1, #0xff
  406340:	cmp	w1, #0x5
  406344:	b.ls	406368 <get_hex@@Base+0x44>  // b.plast
  406348:	sub	w1, w0, #0x30
  40634c:	and	w1, w1, #0xff
  406350:	sub	w0, w0, #0x30
  406354:	cmp	w1, #0xa
  406358:	csinv	w0, w0, wzr, cc  // cc = lo, ul, last
  40635c:	ret
  406360:	sub	w0, w0, #0x37
  406364:	b	40635c <get_hex@@Base+0x38>
  406368:	sub	w0, w0, #0x57
  40636c:	b	40635c <get_hex@@Base+0x38>

0000000000406370 <get_integer@@Base>:
  406370:	cbz	x1, 4063dc <get_integer@@Base+0x6c>
  406374:	stp	x29, x30, [sp, #-48]!
  406378:	mov	x29, sp
  40637c:	stp	x19, x20, [sp, #16]
  406380:	mov	x20, x0
  406384:	mov	x19, x1
  406388:	ldrb	w0, [x1]
  40638c:	cbz	w0, 4063e4 <get_integer@@Base+0x74>
  406390:	add	x1, sp, #0x28
  406394:	mov	x0, x19
  406398:	bl	405030 <strtol@plt>
  40639c:	ldr	x1, [sp, #40]
  4063a0:	cmp	x1, #0x0
  4063a4:	ccmp	x1, x19, #0x4, ne  // ne = any
  4063a8:	b.eq	4063ec <get_integer@@Base+0x7c>  // b.none
  4063ac:	ldrb	w1, [x1]
  4063b0:	cbnz	w1, 4063f4 <get_integer@@Base+0x84>
  4063b4:	mov	x1, #0xffffffff80000000    	// #-2147483648
  4063b8:	add	x1, x0, x1
  4063bc:	mov	x2, #0xfffffffeffffffff    	// #-4294967297
  4063c0:	cmp	x1, x2
  4063c4:	b.ls	4063fc <get_integer@@Base+0x8c>  // b.plast
  4063c8:	str	w0, [x20]
  4063cc:	mov	w0, #0x0                   	// #0
  4063d0:	ldp	x19, x20, [sp, #16]
  4063d4:	ldp	x29, x30, [sp], #48
  4063d8:	ret
  4063dc:	mov	w0, #0xffffffff            	// #-1
  4063e0:	ret
  4063e4:	mov	w0, #0xffffffff            	// #-1
  4063e8:	b	4063d0 <get_integer@@Base+0x60>
  4063ec:	mov	w0, #0xffffffff            	// #-1
  4063f0:	b	4063d0 <get_integer@@Base+0x60>
  4063f4:	mov	w0, #0xffffffff            	// #-1
  4063f8:	b	4063d0 <get_integer@@Base+0x60>
  4063fc:	mov	w0, #0xffffffff            	// #-1
  406400:	b	4063d0 <get_integer@@Base+0x60>

0000000000406404 <mask2bits@@Base>:
  406404:	rev	w1, w0
  406408:	neg	w0, w1
  40640c:	bics	w0, w0, w1
  406410:	b.ne	406430 <mask2bits@@Base+0x2c>  // b.any
  406414:	cbz	w1, 406428 <mask2bits@@Base+0x24>
  406418:	add	w0, w0, #0x1
  40641c:	lsl	w1, w1, #1
  406420:	cbnz	w1, 406418 <mask2bits@@Base+0x14>
  406424:	ret
  406428:	mov	w0, w1
  40642c:	b	406424 <mask2bits@@Base+0x20>
  406430:	mov	w0, #0xffffffff            	// #-1
  406434:	b	406424 <mask2bits@@Base+0x20>

0000000000406438 <get_unsigned@@Base>:
  406438:	cbz	x1, 40649c <get_unsigned@@Base+0x64>
  40643c:	stp	x29, x30, [sp, #-48]!
  406440:	mov	x29, sp
  406444:	stp	x19, x20, [sp, #16]
  406448:	mov	x20, x0
  40644c:	mov	x19, x1
  406450:	ldrb	w0, [x1]
  406454:	cbz	w0, 4064a4 <get_unsigned@@Base+0x6c>
  406458:	add	x1, sp, #0x28
  40645c:	mov	x0, x19
  406460:	bl	404d40 <strtoul@plt>
  406464:	ldr	x1, [sp, #40]
  406468:	cmp	x1, #0x0
  40646c:	ccmp	x1, x19, #0x4, ne  // ne = any
  406470:	b.eq	4064ac <get_unsigned@@Base+0x74>  // b.none
  406474:	ldrb	w1, [x1]
  406478:	cbnz	w1, 4064b4 <get_unsigned@@Base+0x7c>
  40647c:	mov	x1, #0xffffffff            	// #4294967295
  406480:	cmp	x0, x1
  406484:	b.hi	4064bc <get_unsigned@@Base+0x84>  // b.pmore
  406488:	str	w0, [x20]
  40648c:	mov	w0, #0x0                   	// #0
  406490:	ldp	x19, x20, [sp, #16]
  406494:	ldp	x29, x30, [sp], #48
  406498:	ret
  40649c:	mov	w0, #0xffffffff            	// #-1
  4064a0:	ret
  4064a4:	mov	w0, #0xffffffff            	// #-1
  4064a8:	b	406490 <get_unsigned@@Base+0x58>
  4064ac:	mov	w0, #0xffffffff            	// #-1
  4064b0:	b	406490 <get_unsigned@@Base+0x58>
  4064b4:	mov	w0, #0xffffffff            	// #-1
  4064b8:	b	406490 <get_unsigned@@Base+0x58>
  4064bc:	mov	w0, #0xffffffff            	// #-1
  4064c0:	b	406490 <get_unsigned@@Base+0x58>

00000000004064c4 <get_time_rtt@@Base>:
  4064c4:	stp	x29, x30, [sp, #-80]!
  4064c8:	mov	x29, sp
  4064cc:	stp	x19, x20, [sp, #16]
  4064d0:	stp	x21, x22, [sp, #32]
  4064d4:	str	d8, [sp, #48]
  4064d8:	mov	x22, x0
  4064dc:	mov	x20, x1
  4064e0:	mov	x21, x2
  4064e4:	mov	w1, #0x2e                  	// #46
  4064e8:	mov	x0, x20
  4064ec:	bl	4050b0 <strchr@plt>
  4064f0:	cbz	x0, 406564 <get_time_rtt@@Base+0xa0>
  4064f4:	add	x1, sp, #0x48
  4064f8:	mov	x0, x20
  4064fc:	bl	404d90 <strtod@plt>
  406500:	fmov	d8, d0
  406504:	fcmpe	d0, #0.0
  406508:	b.mi	406680 <get_time_rtt@@Base+0x1bc>  // b.first
  40650c:	ldr	x0, [sp, #72]
  406510:	cmp	x0, #0x0
  406514:	ccmp	x0, x20, #0x4, ne  // ne = any
  406518:	b.eq	406688 <get_time_rtt@@Base+0x1c4>  // b.none
  40651c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  406520:	fmov	d0, x0
  406524:	fcmp	d8, d0
  406528:	b.ne	406594 <get_time_rtt@@Base+0xd0>  // b.any
  40652c:	bl	405200 <__errno_location@plt>
  406530:	ldr	w0, [x0]
  406534:	cmp	w0, #0x22
  406538:	b.eq	406690 <get_time_rtt@@Base+0x1cc>  // b.none
  40653c:	ldr	x19, [sp, #72]
  406540:	mov	w0, #0x1                   	// #1
  406544:	str	w0, [x21]
  406548:	ldrb	w0, [x19]
  40654c:	cbnz	w0, 4065a8 <get_time_rtt@@Base+0xe4>
  406550:	mov	w0, #0xffffffff            	// #-1
  406554:	add	w0, w0, #0x1
  406558:	str	w0, [x22]
  40655c:	mov	w0, #0x0                   	// #0
  406560:	b	406610 <get_time_rtt@@Base+0x14c>
  406564:	mov	w2, #0x0                   	// #0
  406568:	add	x1, sp, #0x48
  40656c:	mov	x0, x20
  406570:	bl	404d40 <strtoul@plt>
  406574:	mov	x19, x0
  406578:	ldr	x0, [sp, #72]
  40657c:	cmp	x0, #0x0
  406580:	ccmp	x0, x20, #0x4, ne  // ne = any
  406584:	b.eq	406698 <get_time_rtt@@Base+0x1d4>  // b.none
  406588:	cmn	x19, #0x1
  40658c:	b.eq	406624 <get_time_rtt@@Base+0x160>  // b.none
  406590:	ucvtf	d8, x19
  406594:	ldr	x19, [sp, #72]
  406598:	mov	w0, #0x1                   	// #1
  40659c:	str	w0, [x21]
  4065a0:	ldrb	w0, [x19]
  4065a4:	cbz	w0, 4065f8 <get_time_rtt@@Base+0x134>
  4065a8:	str	wzr, [x21]
  4065ac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4065b0:	add	x1, x1, #0x660
  4065b4:	mov	x0, x19
  4065b8:	bl	404f50 <strcasecmp@plt>
  4065bc:	cbz	w0, 4065e8 <get_time_rtt@@Base+0x124>
  4065c0:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4065c4:	add	x1, x1, #0xcd8
  4065c8:	mov	x0, x19
  4065cc:	bl	404f50 <strcasecmp@plt>
  4065d0:	cbz	w0, 4065e8 <get_time_rtt@@Base+0x124>
  4065d4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4065d8:	add	x1, x1, #0xce0
  4065dc:	mov	x0, x19
  4065e0:	bl	404f50 <strcasecmp@plt>
  4065e4:	cbnz	w0, 40663c <get_time_rtt@@Base+0x178>
  4065e8:	mov	x0, #0x400000000000        	// #70368744177664
  4065ec:	movk	x0, #0x408f, lsl #48
  4065f0:	fmov	d0, x0
  4065f4:	fmul	d8, d8, d0
  4065f8:	fcvtzu	w0, d8
  4065fc:	ucvtf	d0, w0
  406600:	fcmpe	d0, d8
  406604:	b.mi	406554 <get_time_rtt@@Base+0x90>  // b.first
  406608:	str	w0, [x22]
  40660c:	mov	w0, #0x0                   	// #0
  406610:	ldp	x19, x20, [sp, #16]
  406614:	ldp	x21, x22, [sp, #32]
  406618:	ldr	d8, [sp, #48]
  40661c:	ldp	x29, x30, [sp], #80
  406620:	ret
  406624:	bl	405200 <__errno_location@plt>
  406628:	ldr	w0, [x0]
  40662c:	cmp	w0, #0x22
  406630:	b.ne	406590 <get_time_rtt@@Base+0xcc>  // b.any
  406634:	mov	w0, #0xffffffff            	// #-1
  406638:	b	406610 <get_time_rtt@@Base+0x14c>
  40663c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406640:	add	x1, x1, #0xce8
  406644:	mov	x0, x19
  406648:	bl	404f50 <strcasecmp@plt>
  40664c:	cbz	w0, 4065f8 <get_time_rtt@@Base+0x134>
  406650:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406654:	add	x1, x1, #0xcf0
  406658:	mov	x0, x19
  40665c:	bl	404f50 <strcasecmp@plt>
  406660:	cbz	w0, 4065f8 <get_time_rtt@@Base+0x134>
  406664:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406668:	add	x1, x1, #0xcf8
  40666c:	mov	x0, x19
  406670:	bl	404f50 <strcasecmp@plt>
  406674:	cbz	w0, 4065f8 <get_time_rtt@@Base+0x134>
  406678:	mov	w0, #0xffffffff            	// #-1
  40667c:	b	406610 <get_time_rtt@@Base+0x14c>
  406680:	mov	w0, #0xffffffff            	// #-1
  406684:	b	406610 <get_time_rtt@@Base+0x14c>
  406688:	mov	w0, #0xffffffff            	// #-1
  40668c:	b	406610 <get_time_rtt@@Base+0x14c>
  406690:	mov	w0, #0xffffffff            	// #-1
  406694:	b	406610 <get_time_rtt@@Base+0x14c>
  406698:	mov	w0, #0xffffffff            	// #-1
  40669c:	b	406610 <get_time_rtt@@Base+0x14c>

00000000004066a0 <get_u64@@Base>:
  4066a0:	cbz	x1, 406724 <get_u64@@Base+0x84>
  4066a4:	stp	x29, x30, [sp, #-64]!
  4066a8:	mov	x29, sp
  4066ac:	stp	x19, x20, [sp, #16]
  4066b0:	str	x21, [sp, #32]
  4066b4:	mov	x21, x0
  4066b8:	mov	x19, x1
  4066bc:	ldrb	w0, [x1]
  4066c0:	cbz	w0, 40672c <get_u64@@Base+0x8c>
  4066c4:	add	x1, sp, #0x38
  4066c8:	mov	x0, x19
  4066cc:	bl	4050c0 <strtoull@plt>
  4066d0:	mov	x20, x0
  4066d4:	ldr	x1, [sp, #56]
  4066d8:	cmp	x1, #0x0
  4066dc:	ccmp	x1, x19, #0x4, ne  // ne = any
  4066e0:	b.eq	406734 <get_u64@@Base+0x94>  // b.none
  4066e4:	ldrb	w0, [x1]
  4066e8:	cbnz	w0, 40673c <get_u64@@Base+0x9c>
  4066ec:	cmn	x20, #0x1
  4066f0:	b.eq	40670c <get_u64@@Base+0x6c>  // b.none
  4066f4:	str	x20, [x21]
  4066f8:	mov	w0, #0x0                   	// #0
  4066fc:	ldp	x19, x20, [sp, #16]
  406700:	ldr	x21, [sp, #32]
  406704:	ldp	x29, x30, [sp], #64
  406708:	ret
  40670c:	bl	405200 <__errno_location@plt>
  406710:	ldr	w0, [x0]
  406714:	cmp	w0, #0x22
  406718:	b.ne	4066f4 <get_u64@@Base+0x54>  // b.any
  40671c:	mov	w0, #0xffffffff            	// #-1
  406720:	b	4066fc <get_u64@@Base+0x5c>
  406724:	mov	w0, #0xffffffff            	// #-1
  406728:	ret
  40672c:	mov	w0, #0xffffffff            	// #-1
  406730:	b	4066fc <get_u64@@Base+0x5c>
  406734:	mov	w0, #0xffffffff            	// #-1
  406738:	b	4066fc <get_u64@@Base+0x5c>
  40673c:	mov	w0, #0xffffffff            	// #-1
  406740:	b	4066fc <get_u64@@Base+0x5c>

0000000000406744 <get_u32@@Base>:
  406744:	cbz	x1, 4067a8 <get_u32@@Base+0x64>
  406748:	stp	x29, x30, [sp, #-48]!
  40674c:	mov	x29, sp
  406750:	stp	x19, x20, [sp, #16]
  406754:	mov	x20, x0
  406758:	mov	x19, x1
  40675c:	ldrb	w0, [x1]
  406760:	cbz	w0, 4067b0 <get_u32@@Base+0x6c>
  406764:	add	x1, sp, #0x28
  406768:	mov	x0, x19
  40676c:	bl	404d40 <strtoul@plt>
  406770:	ldr	x1, [sp, #40]
  406774:	cmp	x1, #0x0
  406778:	ccmp	x1, x19, #0x4, ne  // ne = any
  40677c:	b.eq	4067b8 <get_u32@@Base+0x74>  // b.none
  406780:	ldrb	w1, [x1]
  406784:	cbnz	w1, 4067c0 <get_u32@@Base+0x7c>
  406788:	mov	x1, #0xffffffff            	// #4294967295
  40678c:	cmp	x0, x1
  406790:	b.hi	4067c8 <get_u32@@Base+0x84>  // b.pmore
  406794:	str	w0, [x20]
  406798:	mov	w0, #0x0                   	// #0
  40679c:	ldp	x19, x20, [sp, #16]
  4067a0:	ldp	x29, x30, [sp], #48
  4067a4:	ret
  4067a8:	mov	w0, #0xffffffff            	// #-1
  4067ac:	ret
  4067b0:	mov	w0, #0xffffffff            	// #-1
  4067b4:	b	40679c <get_u32@@Base+0x58>
  4067b8:	mov	w0, #0xffffffff            	// #-1
  4067bc:	b	40679c <get_u32@@Base+0x58>
  4067c0:	mov	w0, #0xffffffff            	// #-1
  4067c4:	b	40679c <get_u32@@Base+0x58>
  4067c8:	mov	w0, #0xffffffff            	// #-1
  4067cc:	b	40679c <get_u32@@Base+0x58>

00000000004067d0 <get_u16@@Base>:
  4067d0:	cbz	x1, 406834 <get_u16@@Base+0x64>
  4067d4:	stp	x29, x30, [sp, #-48]!
  4067d8:	mov	x29, sp
  4067dc:	stp	x19, x20, [sp, #16]
  4067e0:	mov	x20, x0
  4067e4:	mov	x19, x1
  4067e8:	ldrb	w0, [x1]
  4067ec:	cbz	w0, 40683c <get_u16@@Base+0x6c>
  4067f0:	add	x1, sp, #0x28
  4067f4:	mov	x0, x19
  4067f8:	bl	404d40 <strtoul@plt>
  4067fc:	ldr	x1, [sp, #40]
  406800:	cmp	x1, #0x0
  406804:	ccmp	x1, x19, #0x4, ne  // ne = any
  406808:	b.eq	406844 <get_u16@@Base+0x74>  // b.none
  40680c:	ldrb	w1, [x1]
  406810:	cbnz	w1, 40684c <get_u16@@Base+0x7c>
  406814:	mov	x1, #0xffff                	// #65535
  406818:	cmp	x0, x1
  40681c:	b.hi	406854 <get_u16@@Base+0x84>  // b.pmore
  406820:	strh	w0, [x20]
  406824:	mov	w0, #0x0                   	// #0
  406828:	ldp	x19, x20, [sp, #16]
  40682c:	ldp	x29, x30, [sp], #48
  406830:	ret
  406834:	mov	w0, #0xffffffff            	// #-1
  406838:	ret
  40683c:	mov	w0, #0xffffffff            	// #-1
  406840:	b	406828 <get_u16@@Base+0x58>
  406844:	mov	w0, #0xffffffff            	// #-1
  406848:	b	406828 <get_u16@@Base+0x58>
  40684c:	mov	w0, #0xffffffff            	// #-1
  406850:	b	406828 <get_u16@@Base+0x58>
  406854:	mov	w0, #0xffffffff            	// #-1
  406858:	b	406828 <get_u16@@Base+0x58>

000000000040685c <get_u8@@Base>:
  40685c:	cbz	x1, 4068bc <get_u8@@Base+0x60>
  406860:	stp	x29, x30, [sp, #-48]!
  406864:	mov	x29, sp
  406868:	stp	x19, x20, [sp, #16]
  40686c:	mov	x20, x0
  406870:	mov	x19, x1
  406874:	ldrb	w0, [x1]
  406878:	cbz	w0, 4068c4 <get_u8@@Base+0x68>
  40687c:	add	x1, sp, #0x28
  406880:	mov	x0, x19
  406884:	bl	404d40 <strtoul@plt>
  406888:	ldr	x1, [sp, #40]
  40688c:	cmp	x1, #0x0
  406890:	ccmp	x1, x19, #0x4, ne  // ne = any
  406894:	b.eq	4068cc <get_u8@@Base+0x70>  // b.none
  406898:	ldrb	w1, [x1]
  40689c:	cbnz	w1, 4068d4 <get_u8@@Base+0x78>
  4068a0:	cmp	x0, #0xff
  4068a4:	b.hi	4068dc <get_u8@@Base+0x80>  // b.pmore
  4068a8:	strb	w0, [x20]
  4068ac:	mov	w0, #0x0                   	// #0
  4068b0:	ldp	x19, x20, [sp, #16]
  4068b4:	ldp	x29, x30, [sp], #48
  4068b8:	ret
  4068bc:	mov	w0, #0xffffffff            	// #-1
  4068c0:	ret
  4068c4:	mov	w0, #0xffffffff            	// #-1
  4068c8:	b	4068b0 <get_u8@@Base+0x54>
  4068cc:	mov	w0, #0xffffffff            	// #-1
  4068d0:	b	4068b0 <get_u8@@Base+0x54>
  4068d4:	mov	w0, #0xffffffff            	// #-1
  4068d8:	b	4068b0 <get_u8@@Base+0x54>
  4068dc:	mov	w0, #0xffffffff            	// #-1
  4068e0:	b	4068b0 <get_u8@@Base+0x54>

00000000004068e4 <get_s64@@Base>:
  4068e4:	stp	x29, x30, [sp, #-64]!
  4068e8:	mov	x29, sp
  4068ec:	stp	x19, x20, [sp, #16]
  4068f0:	stp	x21, x22, [sp, #32]
  4068f4:	mov	x22, x0
  4068f8:	mov	x19, x1
  4068fc:	mov	w21, w2
  406900:	bl	405200 <__errno_location@plt>
  406904:	str	wzr, [x0]
  406908:	cbz	x19, 406978 <get_s64@@Base+0x94>
  40690c:	mov	x20, x0
  406910:	ldrb	w0, [x19]
  406914:	cbz	w0, 406980 <get_s64@@Base+0x9c>
  406918:	mov	w2, w21
  40691c:	add	x1, sp, #0x38
  406920:	mov	x0, x19
  406924:	bl	404d80 <strtoll@plt>
  406928:	mov	x1, x0
  40692c:	ldr	x0, [sp, #56]
  406930:	cmp	x0, #0x0
  406934:	ccmp	x0, x19, #0x4, ne  // ne = any
  406938:	b.eq	406988 <get_s64@@Base+0xa4>  // b.none
  40693c:	ldrb	w0, [x0]
  406940:	cbnz	w0, 406990 <get_s64@@Base+0xac>
  406944:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  406948:	add	x0, x1, x0
  40694c:	cmn	x0, #0x3
  406950:	b.ls	406960 <get_s64@@Base+0x7c>  // b.plast
  406954:	ldr	w0, [x20]
  406958:	cmp	w0, #0x22
  40695c:	b.eq	406998 <get_s64@@Base+0xb4>  // b.none
  406960:	str	x1, [x22]
  406964:	mov	w0, #0x0                   	// #0
  406968:	ldp	x19, x20, [sp, #16]
  40696c:	ldp	x21, x22, [sp, #32]
  406970:	ldp	x29, x30, [sp], #64
  406974:	ret
  406978:	mov	w0, #0xffffffff            	// #-1
  40697c:	b	406968 <get_s64@@Base+0x84>
  406980:	mov	w0, #0xffffffff            	// #-1
  406984:	b	406968 <get_s64@@Base+0x84>
  406988:	mov	w0, #0xffffffff            	// #-1
  40698c:	b	406968 <get_s64@@Base+0x84>
  406990:	mov	w0, #0xffffffff            	// #-1
  406994:	b	406968 <get_s64@@Base+0x84>
  406998:	mov	w0, #0xffffffff            	// #-1
  40699c:	b	406968 <get_s64@@Base+0x84>

00000000004069a0 <get_s32@@Base>:
  4069a0:	stp	x29, x30, [sp, #-64]!
  4069a4:	mov	x29, sp
  4069a8:	stp	x19, x20, [sp, #16]
  4069ac:	str	x21, [sp, #32]
  4069b0:	mov	x21, x0
  4069b4:	mov	x19, x1
  4069b8:	mov	w20, w2
  4069bc:	bl	405200 <__errno_location@plt>
  4069c0:	str	wzr, [x0]
  4069c4:	cbz	x19, 406a24 <get_s32@@Base+0x84>
  4069c8:	ldrb	w0, [x19]
  4069cc:	cbz	w0, 406a2c <get_s32@@Base+0x8c>
  4069d0:	mov	w2, w20
  4069d4:	add	x1, sp, #0x38
  4069d8:	mov	x0, x19
  4069dc:	bl	405030 <strtol@plt>
  4069e0:	ldr	x1, [sp, #56]
  4069e4:	cmp	x1, #0x0
  4069e8:	ccmp	x1, x19, #0x4, ne  // ne = any
  4069ec:	b.eq	406a34 <get_s32@@Base+0x94>  // b.none
  4069f0:	ldrb	w1, [x1]
  4069f4:	cbnz	w1, 406a3c <get_s32@@Base+0x9c>
  4069f8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  4069fc:	add	x1, x0, x1
  406a00:	mov	x2, #0xfffffffeffffffff    	// #-4294967297
  406a04:	cmp	x1, x2
  406a08:	b.ls	406a44 <get_s32@@Base+0xa4>  // b.plast
  406a0c:	str	w0, [x21]
  406a10:	mov	w0, #0x0                   	// #0
  406a14:	ldp	x19, x20, [sp, #16]
  406a18:	ldr	x21, [sp, #32]
  406a1c:	ldp	x29, x30, [sp], #64
  406a20:	ret
  406a24:	mov	w0, #0xffffffff            	// #-1
  406a28:	b	406a14 <get_s32@@Base+0x74>
  406a2c:	mov	w0, #0xffffffff            	// #-1
  406a30:	b	406a14 <get_s32@@Base+0x74>
  406a34:	mov	w0, #0xffffffff            	// #-1
  406a38:	b	406a14 <get_s32@@Base+0x74>
  406a3c:	mov	w0, #0xffffffff            	// #-1
  406a40:	b	406a14 <get_s32@@Base+0x74>
  406a44:	mov	w0, #0xffffffff            	// #-1
  406a48:	b	406a14 <get_s32@@Base+0x74>

0000000000406a4c <get_be64@@Base>:
  406a4c:	stp	x29, x30, [sp, #-48]!
  406a50:	mov	x29, sp
  406a54:	str	x19, [sp, #16]
  406a58:	mov	x19, x0
  406a5c:	add	x0, sp, #0x28
  406a60:	bl	4066a0 <get_u64@@Base>
  406a64:	cbnz	w0, 406a80 <get_be64@@Base+0x34>
  406a68:	ldr	x1, [sp, #40]
  406a6c:	lsr	x2, x1, #32
  406a70:	rev	w1, w1
  406a74:	rev	w2, w2
  406a78:	orr	x1, x2, x1, lsl #32
  406a7c:	str	x1, [x19]
  406a80:	ldr	x19, [sp, #16]
  406a84:	ldp	x29, x30, [sp], #48
  406a88:	ret

0000000000406a8c <get_be32@@Base>:
  406a8c:	stp	x29, x30, [sp, #-48]!
  406a90:	mov	x29, sp
  406a94:	str	x19, [sp, #16]
  406a98:	mov	x19, x0
  406a9c:	add	x0, sp, #0x2c
  406aa0:	bl	406744 <get_u32@@Base>
  406aa4:	cbnz	w0, 406ab4 <get_be32@@Base+0x28>
  406aa8:	ldr	w1, [sp, #44]
  406aac:	rev	w1, w1
  406ab0:	str	w1, [x19]
  406ab4:	ldr	x19, [sp, #16]
  406ab8:	ldp	x29, x30, [sp], #48
  406abc:	ret

0000000000406ac0 <get_be16@@Base>:
  406ac0:	stp	x29, x30, [sp, #-48]!
  406ac4:	mov	x29, sp
  406ac8:	str	x19, [sp, #16]
  406acc:	mov	x19, x0
  406ad0:	add	x0, sp, #0x2e
  406ad4:	bl	4067d0 <get_u16@@Base>
  406ad8:	cbnz	w0, 406ae8 <get_be16@@Base+0x28>
  406adc:	ldrh	w1, [sp, #46]
  406ae0:	rev16	w1, w1
  406ae4:	strh	w1, [x19]
  406ae8:	ldr	x19, [sp, #16]
  406aec:	ldp	x29, x30, [sp], #48
  406af0:	ret

0000000000406af4 <get_addr64@@Base>:
  406af4:	stp	x29, x30, [sp, #-96]!
  406af8:	mov	x29, sp
  406afc:	stp	x19, x20, [sp, #16]
  406b00:	stp	x21, x22, [sp, #32]
  406b04:	stp	x23, x24, [sp, #48]
  406b08:	str	x25, [sp, #64]
  406b0c:	mov	x22, x0
  406b10:	mov	x19, x1
  406b14:	add	x21, sp, #0x58
  406b18:	mov	w20, #0x0                   	// #0
  406b1c:	add	x25, sp, #0x50
  406b20:	mov	w24, #0x10                  	// #16
  406b24:	mov	x23, #0xffff                	// #65535
  406b28:	mov	w2, w24
  406b2c:	mov	x1, x25
  406b30:	mov	x0, x19
  406b34:	bl	404d40 <strtoul@plt>
  406b38:	cmp	x0, x23
  406b3c:	b.hi	406b8c <get_addr64@@Base+0x98>  // b.pmore
  406b40:	ldr	x1, [sp, #80]
  406b44:	cmp	x1, x19
  406b48:	b.eq	406b8c <get_addr64@@Base+0x98>  // b.none
  406b4c:	rev16	w0, w0
  406b50:	strh	w0, [x21]
  406b54:	ldrb	w0, [x1]
  406b58:	cbz	w0, 406b7c <get_addr64@@Base+0x88>
  406b5c:	cmp	w0, #0x3a
  406b60:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  406b64:	b.eq	406b8c <get_addr64@@Base+0x98>  // b.none
  406b68:	add	x19, x1, #0x1
  406b6c:	add	w20, w20, #0x1
  406b70:	add	x21, x21, #0x2
  406b74:	cmp	w20, #0x4
  406b78:	b.ne	406b28 <get_addr64@@Base+0x34>  // b.any
  406b7c:	ldr	x0, [sp, #88]
  406b80:	str	x0, [x22]
  406b84:	mov	w0, #0x1                   	// #1
  406b88:	b	406b90 <get_addr64@@Base+0x9c>
  406b8c:	mov	w0, #0xffffffff            	// #-1
  406b90:	ldp	x19, x20, [sp, #16]
  406b94:	ldp	x21, x22, [sp, #32]
  406b98:	ldp	x23, x24, [sp, #48]
  406b9c:	ldr	x25, [sp, #64]
  406ba0:	ldp	x29, x30, [sp], #96
  406ba4:	ret

0000000000406ba8 <af_bit_len@@Base>:
  406ba8:	mov	w1, w0
  406bac:	cmp	w0, #0xa
  406bb0:	b.eq	406bf0 <af_bit_len@@Base+0x48>  // b.none
  406bb4:	b.le	406bd4 <af_bit_len@@Base+0x2c>
  406bb8:	mov	w0, #0x10                  	// #16
  406bbc:	cmp	w1, #0xc
  406bc0:	b.eq	406bec <af_bit_len@@Base+0x44>  // b.none
  406bc4:	cmp	w1, #0x1c
  406bc8:	mov	w0, #0x14                  	// #20
  406bcc:	csel	w0, w0, wzr, eq  // eq = none
  406bd0:	b	406bec <af_bit_len@@Base+0x44>
  406bd4:	mov	w0, #0x20                  	// #32
  406bd8:	cmp	w1, #0x2
  406bdc:	b.eq	406bec <af_bit_len@@Base+0x44>  // b.none
  406be0:	cmp	w1, #0x4
  406be4:	mov	w0, #0x50                  	// #80
  406be8:	csel	w0, w0, wzr, eq  // eq = none
  406bec:	ret
  406bf0:	mov	w0, #0x80                  	// #128
  406bf4:	b	406bec <af_bit_len@@Base+0x44>

0000000000406bf8 <get_addr_1@@Base>:
  406bf8:	stp	x29, x30, [sp, #-80]!
  406bfc:	mov	x29, sp
  406c00:	stp	x19, x20, [sp, #16]
  406c04:	stp	x21, x22, [sp, #32]
  406c08:	mov	x19, x0
  406c0c:	mov	x21, x1
  406c10:	mov	w20, w2
  406c14:	mov	x2, #0x108                 	// #264
  406c18:	mov	w1, #0x0                   	// #0
  406c1c:	bl	404f00 <memset@plt>
  406c20:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406c24:	add	x1, x1, #0xd00
  406c28:	mov	x0, x21
  406c2c:	bl	405010 <strcmp@plt>
  406c30:	cbnz	w0, 406c90 <get_addr_1@@Base+0x98>
  406c34:	and	w0, w20, #0xffffffef
  406c38:	cmp	w0, #0xc
  406c3c:	b.eq	406e64 <get_addr_1@@Base+0x26c>  // b.none
  406c40:	strh	w20, [x19, #6]
  406c44:	and	w0, w20, #0xffff
  406c48:	bl	406ba8 <af_bit_len@@Base>
  406c4c:	add	w1, w0, #0x7
  406c50:	cmp	w0, #0x0
  406c54:	csel	w0, w1, w0, lt  // lt = tstop
  406c58:	asr	w0, w0, #3
  406c5c:	strh	w0, [x19, #2]
  406c60:	mov	w0, #0xfffffffe            	// #-2
  406c64:	strh	w0, [x19, #4]
  406c68:	ldrh	w0, [x19]
  406c6c:	orr	w0, w0, #0x1
  406c70:	strh	w0, [x19]
  406c74:	mov	x0, x19
  406c78:	bl	40600c <main@@Base+0xb94>
  406c7c:	mov	w0, #0x0                   	// #0
  406c80:	ldp	x19, x20, [sp, #16]
  406c84:	ldp	x21, x22, [sp, #32]
  406c88:	ldp	x29, x30, [sp], #80
  406c8c:	ret
  406c90:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406c94:	add	x1, x1, #0xd08
  406c98:	mov	x0, x21
  406c9c:	bl	405010 <strcmp@plt>
  406ca0:	cbz	w0, 406cb8 <get_addr_1@@Base+0xc0>
  406ca4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  406ca8:	add	x1, x1, #0xd10
  406cac:	mov	x0, x21
  406cb0:	bl	405010 <strcmp@plt>
  406cb4:	cbnz	w0, 406cd4 <get_addr_1@@Base+0xdc>
  406cb8:	and	w0, w20, #0xffffffef
  406cbc:	cmp	w0, #0xc
  406cc0:	b.eq	406e64 <get_addr_1@@Base+0x26c>  // b.none
  406cc4:	strh	w20, [x19, #6]
  406cc8:	mov	w0, #0xfffffffe            	// #-2
  406ccc:	strh	w0, [x19, #4]
  406cd0:	b	406c74 <get_addr_1@@Base+0x7c>
  406cd4:	cmp	w20, #0x11
  406cd8:	b.eq	406d2c <get_addr_1@@Base+0x134>  // b.none
  406cdc:	mov	w1, #0x3a                  	// #58
  406ce0:	mov	x0, x21
  406ce4:	bl	4050b0 <strchr@plt>
  406ce8:	cbz	x0, 406d5c <get_addr_1@@Base+0x164>
  406cec:	mov	w0, #0xa                   	// #10
  406cf0:	strh	w0, [x19, #6]
  406cf4:	cmp	w20, #0x0
  406cf8:	ccmp	w20, #0xa, #0x4, ne  // ne = any
  406cfc:	b.ne	406e64 <get_addr_1@@Base+0x26c>  // b.any
  406d00:	add	x2, x19, #0x8
  406d04:	mov	x1, x21
  406d08:	mov	w0, #0xa                   	// #10
  406d0c:	bl	405080 <inet_pton@plt>
  406d10:	cmp	w0, #0x0
  406d14:	b.le	406e64 <get_addr_1@@Base+0x26c>
  406d18:	mov	w0, #0x10                  	// #16
  406d1c:	strh	w0, [x19, #2]
  406d20:	mov	w0, #0xffffffff            	// #-1
  406d24:	strh	w0, [x19, #4]
  406d28:	b	406c74 <get_addr_1@@Base+0x7c>
  406d2c:	mov	x2, x21
  406d30:	mov	w1, #0x100                 	// #256
  406d34:	add	x0, x19, #0x8
  406d38:	bl	409714 <ll_addr_a2n@@Base>
  406d3c:	tbnz	w0, #31, 406e64 <get_addr_1@@Base+0x26c>
  406d40:	mov	w1, #0x11                  	// #17
  406d44:	strh	w1, [x19, #6]
  406d48:	and	w0, w0, #0xffff
  406d4c:	strh	w0, [x19, #2]
  406d50:	ubfiz	w0, w0, #3, #13
  406d54:	strh	w0, [x19, #4]
  406d58:	b	406c74 <get_addr_1@@Base+0x7c>
  406d5c:	cmp	w20, #0x1c
  406d60:	b.eq	406de8 <get_addr_1@@Base+0x1f0>  // b.none
  406d64:	mov	w0, #0x2                   	// #2
  406d68:	strh	w0, [x19, #6]
  406d6c:	tst	w20, #0xfffffffd
  406d70:	b.ne	406e64 <get_addr_1@@Base+0x26c>  // b.any
  406d74:	str	x23, [sp, #48]
  406d78:	mov	x20, #0x0                   	// #0
  406d7c:	add	x22, sp, #0x48
  406d80:	add	x23, x19, #0x8
  406d84:	mov	w2, #0x0                   	// #0
  406d88:	mov	x1, x22
  406d8c:	mov	x0, x21
  406d90:	bl	404d40 <strtoul@plt>
  406d94:	cmp	x0, #0xff
  406d98:	b.hi	406e50 <get_addr_1@@Base+0x258>  // b.pmore
  406d9c:	ldr	x1, [sp, #72]
  406da0:	cmp	x1, x21
  406da4:	b.eq	406e58 <get_addr_1@@Base+0x260>  // b.none
  406da8:	strb	w0, [x23, x20]
  406dac:	ldrb	w0, [x1]
  406db0:	cbz	w0, 406dd0 <get_addr_1@@Base+0x1d8>
  406db4:	cmp	w0, #0x2e
  406db8:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  406dbc:	b.eq	406e60 <get_addr_1@@Base+0x268>  // b.none
  406dc0:	add	x21, x1, #0x1
  406dc4:	add	x20, x20, #0x1
  406dc8:	cmp	x20, #0x4
  406dcc:	b.ne	406d84 <get_addr_1@@Base+0x18c>  // b.any
  406dd0:	mov	w0, #0x4                   	// #4
  406dd4:	strh	w0, [x19, #2]
  406dd8:	mov	w0, #0xffffffff            	// #-1
  406ddc:	strh	w0, [x19, #4]
  406de0:	ldr	x23, [sp, #48]
  406de4:	b	406c74 <get_addr_1@@Base+0x7c>
  406de8:	mov	w0, #0x1c                  	// #28
  406dec:	strh	w0, [x19, #6]
  406df0:	mov	x3, #0x100                 	// #256
  406df4:	add	x2, x19, #0x8
  406df8:	mov	x1, x21
  406dfc:	mov	w0, #0x1c                  	// #28
  406e00:	bl	40a78c <mpls_pton@@Base>
  406e04:	cmp	w0, #0x0
  406e08:	b.le	406e64 <get_addr_1@@Base+0x26c>
  406e0c:	mov	w0, #0x4                   	// #4
  406e10:	strh	w0, [x19, #2]
  406e14:	mov	w0, #0x14                  	// #20
  406e18:	strh	w0, [x19, #4]
  406e1c:	mov	x0, #0x0                   	// #0
  406e20:	add	x3, x19, #0x8
  406e24:	ldr	w1, [x3, x0, lsl #2]
  406e28:	rev	w1, w1
  406e2c:	tbnz	w1, #8, 406e40 <get_addr_1@@Base+0x248>
  406e30:	add	x0, x0, #0x1
  406e34:	cmp	x0, #0x40
  406e38:	b.ne	406e24 <get_addr_1@@Base+0x22c>  // b.any
  406e3c:	b	406c74 <get_addr_1@@Base+0x7c>
  406e40:	add	w0, w0, #0x1
  406e44:	ubfiz	w0, w0, #2, #14
  406e48:	strh	w0, [x19, #2]
  406e4c:	b	406c74 <get_addr_1@@Base+0x7c>
  406e50:	ldr	x23, [sp, #48]
  406e54:	b	406e64 <get_addr_1@@Base+0x26c>
  406e58:	ldr	x23, [sp, #48]
  406e5c:	b	406e64 <get_addr_1@@Base+0x26c>
  406e60:	ldr	x23, [sp, #48]
  406e64:	mov	w0, #0xffffffff            	// #-1
  406e68:	b	406c80 <get_addr_1@@Base+0x88>
  406e6c:	stp	x29, x30, [sp, #-320]!
  406e70:	mov	x29, sp
  406e74:	stp	x19, x20, [sp, #16]
  406e78:	str	x21, [sp, #32]
  406e7c:	mov	x21, x0
  406e80:	mov	x20, x1
  406e84:	bl	406438 <get_unsigned@@Base>
  406e88:	mov	w19, w0
  406e8c:	cbnz	w0, 406ea4 <get_addr_1@@Base+0x2ac>
  406e90:	mov	w0, w19
  406e94:	ldp	x19, x20, [sp, #16]
  406e98:	ldr	x21, [sp, #32]
  406e9c:	ldp	x29, x30, [sp], #320
  406ea0:	ret
  406ea4:	mov	w2, #0x2                   	// #2
  406ea8:	mov	x1, x20
  406eac:	add	x0, sp, #0x38
  406eb0:	bl	406bf8 <get_addr_1@@Base>
  406eb4:	mov	w19, w0
  406eb8:	cbnz	w0, 406edc <get_addr_1@@Base+0x2e4>
  406ebc:	ldrh	w0, [sp, #62]
  406ec0:	cmp	w0, #0x2
  406ec4:	b.ne	406ee4 <get_addr_1@@Base+0x2ec>  // b.any
  406ec8:	ldr	w0, [sp, #64]
  406ecc:	bl	406404 <mask2bits@@Base>
  406ed0:	tbnz	w0, #31, 406eec <get_addr_1@@Base+0x2f4>
  406ed4:	str	w0, [x21]
  406ed8:	b	406e90 <get_addr_1@@Base+0x298>
  406edc:	mov	w19, #0xffffffff            	// #-1
  406ee0:	b	406e90 <get_addr_1@@Base+0x298>
  406ee4:	mov	w19, #0xffffffff            	// #-1
  406ee8:	b	406e90 <get_addr_1@@Base+0x298>
  406eec:	mov	w19, #0xffffffff            	// #-1
  406ef0:	b	406e90 <get_addr_1@@Base+0x298>

0000000000406ef4 <get_prefix_1@@Base>:
  406ef4:	stp	x29, x30, [sp, #-64]!
  406ef8:	mov	x29, sp
  406efc:	stp	x19, x20, [sp, #16]
  406f00:	stp	x21, x22, [sp, #32]
  406f04:	mov	x20, x0
  406f08:	mov	x19, x1
  406f0c:	mov	w22, w2
  406f10:	mov	w1, #0x2f                  	// #47
  406f14:	mov	x0, x19
  406f18:	bl	4050b0 <strchr@plt>
  406f1c:	cbz	x0, 406fb4 <get_prefix_1@@Base+0xc0>
  406f20:	mov	x21, x0
  406f24:	strb	wzr, [x0]
  406f28:	mov	w2, w22
  406f2c:	mov	x1, x19
  406f30:	mov	x0, x20
  406f34:	bl	406bf8 <get_addr_1@@Base>
  406f38:	mov	w19, w0
  406f3c:	mov	w0, #0x2f                  	// #47
  406f40:	strb	w0, [x21]
  406f44:	cbnz	w19, 406f98 <get_prefix_1@@Base+0xa4>
  406f48:	ldrh	w0, [x20, #6]
  406f4c:	bl	406ba8 <af_bit_len@@Base>
  406f50:	mov	w19, w0
  406f54:	ldrsh	w0, [x20, #4]
  406f58:	cmn	w0, #0x2
  406f5c:	b.eq	406fac <get_prefix_1@@Base+0xb8>  // b.none
  406f60:	mov	w2, #0x0                   	// #0
  406f64:	add	x1, x21, #0x1
  406f68:	add	x0, sp, #0x3c
  406f6c:	bl	406e6c <get_addr_1@@Base+0x274>
  406f70:	cbnz	w0, 406fac <get_prefix_1@@Base+0xb8>
  406f74:	ldr	w1, [sp, #60]
  406f78:	cmp	w1, w19
  406f7c:	b.hi	406fac <get_prefix_1@@Base+0xb8>  // b.pmore
  406f80:	mov	w19, #0x1                   	// #1
  406f84:	ldrh	w0, [x20]
  406f88:	orr	w19, w19, w0
  406f8c:	strh	w19, [x20]
  406f90:	strh	w1, [x20, #4]
  406f94:	mov	w19, #0x0                   	// #0
  406f98:	mov	w0, w19
  406f9c:	ldp	x19, x20, [sp, #16]
  406fa0:	ldp	x21, x22, [sp, #32]
  406fa4:	ldp	x29, x30, [sp], #64
  406fa8:	ret
  406fac:	mov	w19, #0xffffffff            	// #-1
  406fb0:	b	406f98 <get_prefix_1@@Base+0xa4>
  406fb4:	mov	w2, w22
  406fb8:	mov	x1, x19
  406fbc:	mov	x0, x20
  406fc0:	bl	406bf8 <get_addr_1@@Base>
  406fc4:	mov	w19, w0
  406fc8:	cbnz	w0, 406f98 <get_prefix_1@@Base+0xa4>
  406fcc:	ldrh	w0, [x20, #6]
  406fd0:	bl	406ba8 <af_bit_len@@Base>
  406fd4:	ldrsh	w1, [x20, #4]
  406fd8:	cmn	w1, #0x2
  406fdc:	csel	w1, w0, w19, ne  // ne = any
  406fe0:	b	406f84 <get_prefix_1@@Base+0x90>

0000000000406fe4 <get_addr_rta@@Base>:
  406fe4:	ldrh	w4, [x1]
  406fe8:	cmp	w4, #0xe
  406fec:	b.eq	4070ac <get_addr_rta@@Base+0xc8>  // b.none
  406ff0:	sub	w3, w4, #0x4
  406ff4:	cmp	w3, #0xa
  406ff8:	b.hi	407060 <get_addr_rta@@Base+0x7c>  // b.pmore
  406ffc:	cmp	w3, #0x2
  407000:	b.eq	407090 <get_addr_rta@@Base+0xac>  // b.none
  407004:	cmp	w3, #0x4
  407008:	b.ne	407058 <get_addr_rta@@Base+0x74>  // b.any
  40700c:	mov	w3, #0x2                   	// #2
  407010:	strh	w3, [x0, #6]
  407014:	mov	w3, #0x4                   	// #4
  407018:	strh	w3, [x0, #2]
  40701c:	ldr	w1, [x1, #4]
  407020:	str	w1, [x0, #8]
  407024:	cbz	w2, 407034 <get_addr_rta@@Base+0x50>
  407028:	ldrh	w1, [x0, #6]
  40702c:	cmp	w1, w2
  407030:	b.ne	4070d0 <get_addr_rta@@Base+0xec>  // b.any
  407034:	stp	x29, x30, [sp, #-16]!
  407038:	mov	x29, sp
  40703c:	mov	w1, #0xffffffff            	// #-1
  407040:	strh	w1, [x0, #4]
  407044:	strh	wzr, [x0]
  407048:	bl	40600c <main@@Base+0xb94>
  40704c:	mov	w0, #0x0                   	// #0
  407050:	ldp	x29, x30, [sp], #16
  407054:	ret
  407058:	mov	w0, #0xffffffff            	// #-1
  40705c:	ret
  407060:	cmp	w3, #0x10
  407064:	b.ne	407088 <get_addr_rta@@Base+0xa4>  // b.any
  407068:	mov	w3, #0xa                   	// #10
  40706c:	strh	w3, [x0, #6]
  407070:	mov	w3, #0x10                  	// #16
  407074:	strh	w3, [x0, #2]
  407078:	add	x1, x1, #0x4
  40707c:	ldp	x4, x5, [x1]
  407080:	stp	x4, x5, [x0, #8]
  407084:	b	407024 <get_addr_rta@@Base+0x40>
  407088:	mov	w0, #0xffffffff            	// #-1
  40708c:	ret
  407090:	mov	w3, #0xc                   	// #12
  407094:	strh	w3, [x0, #6]
  407098:	mov	w3, #0x2                   	// #2
  40709c:	strh	w3, [x0, #2]
  4070a0:	ldrh	w1, [x1, #4]
  4070a4:	strh	w1, [x0, #8]
  4070a8:	b	407024 <get_addr_rta@@Base+0x40>
  4070ac:	mov	w3, #0x4                   	// #4
  4070b0:	strh	w3, [x0, #6]
  4070b4:	mov	w3, #0xa                   	// #10
  4070b8:	strh	w3, [x0, #2]
  4070bc:	ldur	x3, [x1, #4]
  4070c0:	str	x3, [x0, #8]
  4070c4:	ldrh	w1, [x1, #12]
  4070c8:	strh	w1, [x0, #16]
  4070cc:	b	407024 <get_addr_rta@@Base+0x40>
  4070d0:	mov	w0, #0xfffffffe            	// #-2
  4070d4:	ret

00000000004070d8 <get_addr32@@Base>:
  4070d8:	stp	x29, x30, [sp, #-304]!
  4070dc:	mov	x29, sp
  4070e0:	str	x19, [sp, #16]
  4070e4:	mov	x19, x0
  4070e8:	mov	w2, #0x2                   	// #2
  4070ec:	mov	x1, x0
  4070f0:	add	x0, sp, #0x28
  4070f4:	bl	406bf8 <get_addr_1@@Base>
  4070f8:	cbnz	w0, 40710c <get_addr32@@Base+0x34>
  4070fc:	ldr	w0, [sp, #48]
  407100:	ldr	x19, [sp, #16]
  407104:	ldp	x29, x30, [sp], #304
  407108:	ret
  40710c:	mov	x2, x19
  407110:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407114:	add	x1, x1, #0xd18
  407118:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40711c:	ldr	x0, [x0, #3992]
  407120:	ldr	x0, [x0]
  407124:	bl	405250 <fprintf@plt>
  407128:	mov	w0, #0x1                   	// #1
  40712c:	bl	404d60 <exit@plt>

0000000000407130 <incomplete_command@@Base>:
  407130:	stp	x29, x30, [sp, #-16]!
  407134:	mov	x29, sp
  407138:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40713c:	ldr	x0, [x0, #3992]
  407140:	ldr	x3, [x0]
  407144:	mov	x2, #0x30                  	// #48
  407148:	mov	x1, #0x1                   	// #1
  40714c:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  407150:	add	x0, x0, #0xd50
  407154:	bl	4050d0 <fwrite@plt>
  407158:	mov	w0, #0xffffffff            	// #-1
  40715c:	bl	404d60 <exit@plt>

0000000000407160 <missarg@@Base>:
  407160:	stp	x29, x30, [sp, #-16]!
  407164:	mov	x29, sp
  407168:	mov	x2, x0
  40716c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407170:	add	x1, x1, #0xd88
  407174:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  407178:	ldr	x0, [x0, #3992]
  40717c:	ldr	x0, [x0]
  407180:	bl	405250 <fprintf@plt>
  407184:	mov	w0, #0xffffffff            	// #-1
  407188:	bl	404d60 <exit@plt>

000000000040718c <invarg@@Base>:
  40718c:	stp	x29, x30, [sp, #-16]!
  407190:	mov	x29, sp
  407194:	mov	x3, x0
  407198:	mov	x2, x1
  40719c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4071a0:	add	x1, x1, #0xdb0
  4071a4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4071a8:	ldr	x0, [x0, #3992]
  4071ac:	ldr	x0, [x0]
  4071b0:	bl	405250 <fprintf@plt>
  4071b4:	mov	w0, #0xffffffff            	// #-1
  4071b8:	bl	404d60 <exit@plt>

00000000004071bc <duparg@@Base>:
  4071bc:	stp	x29, x30, [sp, #-16]!
  4071c0:	mov	x29, sp
  4071c4:	mov	x3, x1
  4071c8:	mov	x2, x0
  4071cc:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4071d0:	add	x1, x1, #0xdd8
  4071d4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4071d8:	ldr	x0, [x0, #3992]
  4071dc:	ldr	x0, [x0]
  4071e0:	bl	405250 <fprintf@plt>
  4071e4:	mov	w0, #0xffffffff            	// #-1
  4071e8:	bl	404d60 <exit@plt>

00000000004071ec <duparg2@@Base>:
  4071ec:	stp	x29, x30, [sp, #-16]!
  4071f0:	mov	x29, sp
  4071f4:	mov	x3, x1
  4071f8:	mov	x2, x0
  4071fc:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407200:	add	x1, x1, #0xe10
  407204:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  407208:	ldr	x0, [x0, #3992]
  40720c:	ldr	x0, [x0]
  407210:	bl	405250 <fprintf@plt>
  407214:	mov	w0, #0xffffffff            	// #-1
  407218:	bl	404d60 <exit@plt>

000000000040721c <nodev@@Base>:
  40721c:	stp	x29, x30, [sp, #-16]!
  407220:	mov	x29, sp
  407224:	mov	x2, x0
  407228:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  40722c:	add	x1, x1, #0xe48
  407230:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  407234:	ldr	x0, [x0, #3992]
  407238:	ldr	x0, [x0]
  40723c:	bl	405250 <fprintf@plt>
  407240:	mov	w0, #0xffffffff            	// #-1
  407244:	ldp	x29, x30, [sp], #16
  407248:	ret

000000000040724c <check_ifname@@Base>:
  40724c:	stp	x29, x30, [sp, #-32]!
  407250:	mov	x29, sp
  407254:	str	x19, [sp, #16]
  407258:	mov	x19, x0
  40725c:	bl	404d50 <strlen@plt>
  407260:	cmp	x0, #0xf
  407264:	b.hi	40727c <check_ifname@@Base+0x30>  // b.pmore
  407268:	mov	x0, x19
  40726c:	bl	4060d4 <main@@Base+0xc5c>
  407270:	ldr	x19, [sp, #16]
  407274:	ldp	x29, x30, [sp], #32
  407278:	ret
  40727c:	mov	w0, #0xffffffff            	// #-1
  407280:	b	407270 <check_ifname@@Base+0x24>

0000000000407284 <check_altifname@@Base>:
  407284:	stp	x29, x30, [sp, #-16]!
  407288:	mov	x29, sp
  40728c:	bl	4060d4 <main@@Base+0xc5c>
  407290:	ldp	x29, x30, [sp], #16
  407294:	ret

0000000000407298 <get_ifname@@Base>:
  407298:	stp	x29, x30, [sp, #-48]!
  40729c:	mov	x29, sp
  4072a0:	stp	x19, x20, [sp, #16]
  4072a4:	str	x21, [sp, #32]
  4072a8:	mov	x21, x0
  4072ac:	mov	x20, x1
  4072b0:	mov	x0, x1
  4072b4:	bl	40724c <check_ifname@@Base>
  4072b8:	mov	w19, w0
  4072bc:	cbz	w0, 4072d4 <get_ifname@@Base+0x3c>
  4072c0:	mov	w0, w19
  4072c4:	ldp	x19, x20, [sp, #16]
  4072c8:	ldr	x21, [sp, #32]
  4072cc:	ldp	x29, x30, [sp], #48
  4072d0:	ret
  4072d4:	mov	x2, #0x10                  	// #16
  4072d8:	mov	x1, x20
  4072dc:	mov	x0, x21
  4072e0:	bl	4051b0 <strncpy@plt>
  4072e4:	b	4072c0 <get_ifname@@Base+0x28>

00000000004072e8 <get_ifname_rta@@Base>:
  4072e8:	stp	x29, x30, [sp, #-32]!
  4072ec:	mov	x29, sp
  4072f0:	str	x19, [sp, #16]
  4072f4:	cbz	x1, 407318 <get_ifname_rta@@Base+0x30>
  4072f8:	add	x19, x1, #0x4
  4072fc:	mov	x0, x19
  407300:	bl	40724c <check_ifname@@Base>
  407304:	cmp	w0, #0x0
  407308:	csel	x0, x19, xzr, eq  // eq = none
  40730c:	ldr	x19, [sp, #16]
  407310:	ldp	x29, x30, [sp], #32
  407314:	ret
  407318:	mov	w19, w0
  40731c:	mov	w2, w0
  407320:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407324:	add	x1, x1, #0xe68
  407328:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40732c:	ldr	x0, [x0, #3992]
  407330:	ldr	x0, [x0]
  407334:	bl	405250 <fprintf@plt>
  407338:	mov	w0, w19
  40733c:	bl	40930c <ll_idx_n2a@@Base>
  407340:	mov	x19, x0
  407344:	b	4072fc <get_ifname_rta@@Base+0x14>

0000000000407348 <matches@@Base>:
  407348:	ldrb	w2, [x0]
  40734c:	cbz	w2, 407380 <matches@@Base+0x38>
  407350:	ldrb	w2, [x1]
  407354:	cbz	w2, 407370 <matches@@Base+0x28>
  407358:	ldrb	w3, [x0]
  40735c:	cmp	w3, w2
  407360:	b.ne	407370 <matches@@Base+0x28>  // b.any
  407364:	add	x0, x0, #0x1
  407368:	ldrb	w2, [x1, #1]!
  40736c:	cbnz	w2, 407358 <matches@@Base+0x10>
  407370:	ldrb	w0, [x0]
  407374:	cmp	w0, #0x0
  407378:	cset	w0, ne  // ne = any
  40737c:	ret
  407380:	mov	w0, #0x1                   	// #1
  407384:	b	40737c <matches@@Base+0x34>

0000000000407388 <inet_addr_match@@Base>:
  407388:	stp	x29, x30, [sp, #-48]!
  40738c:	mov	x29, sp
  407390:	stp	x19, x20, [sp, #16]
  407394:	stp	x21, x22, [sp, #32]
  407398:	add	x21, x0, #0x8
  40739c:	add	x22, x1, #0x8
  4073a0:	asr	w20, w2, #5
  4073a4:	and	w19, w2, #0x1f
  4073a8:	cmp	wzr, w2, asr #5
  4073ac:	b.eq	4073c8 <inet_addr_match@@Base+0x40>  // b.none
  4073b0:	lsl	w2, w20, #2
  4073b4:	sxtw	x2, w2
  4073b8:	mov	x1, x22
  4073bc:	mov	x0, x21
  4073c0:	bl	405000 <memcmp@plt>
  4073c4:	cbnz	w0, 407408 <inet_addr_match@@Base+0x80>
  4073c8:	cbz	w19, 4073f4 <inet_addr_match@@Base+0x6c>
  4073cc:	sxtw	x20, w20
  4073d0:	neg	w19, w19
  4073d4:	mov	w2, #0xffffffff            	// #-1
  4073d8:	lsl	w19, w2, w19
  4073dc:	rev	w19, w19
  4073e0:	ldr	w0, [x21, x20, lsl #2]
  4073e4:	ldr	w1, [x22, x20, lsl #2]
  4073e8:	eor	w0, w0, w1
  4073ec:	tst	w0, w19
  4073f0:	cset	w19, ne  // ne = any
  4073f4:	mov	w0, w19
  4073f8:	ldp	x19, x20, [sp, #16]
  4073fc:	ldp	x21, x22, [sp, #32]
  407400:	ldp	x29, x30, [sp], #48
  407404:	ret
  407408:	mov	w19, #0xffffffff            	// #-1
  40740c:	b	4073f4 <inet_addr_match@@Base+0x6c>

0000000000407410 <inet_addr_match_rta@@Base>:
  407410:	cbz	x1, 407464 <inet_addr_match_rta@@Base+0x54>
  407414:	stp	x29, x30, [sp, #-304]!
  407418:	mov	x29, sp
  40741c:	str	x19, [sp, #16]
  407420:	mov	x19, x0
  407424:	ldrh	w2, [x0, #6]
  407428:	mov	w0, #0x0                   	// #0
  40742c:	cbz	w2, 407458 <inet_addr_match_rta@@Base+0x48>
  407430:	ldrsh	w3, [x19, #4]
  407434:	cmp	w3, #0x0
  407438:	b.le	407458 <inet_addr_match_rta@@Base+0x48>
  40743c:	add	x0, sp, #0x28
  407440:	bl	406fe4 <get_addr_rta@@Base>
  407444:	cbnz	w0, 40746c <inet_addr_match_rta@@Base+0x5c>
  407448:	ldrsh	w2, [x19, #4]
  40744c:	mov	x1, x19
  407450:	add	x0, sp, #0x28
  407454:	bl	407388 <inet_addr_match@@Base>
  407458:	ldr	x19, [sp, #16]
  40745c:	ldp	x29, x30, [sp], #304
  407460:	ret
  407464:	mov	w0, #0x0                   	// #0
  407468:	ret
  40746c:	mov	w0, #0xffffffff            	// #-1
  407470:	b	407458 <inet_addr_match_rta@@Base+0x48>

0000000000407474 <__get_hz@@Base>:
  407474:	sub	sp, sp, #0x430
  407478:	stp	x29, x30, [sp]
  40747c:	mov	x29, sp
  407480:	stp	x19, x20, [sp, #16]
  407484:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  407488:	add	x0, x0, #0xe98
  40748c:	bl	405210 <getenv@plt>
  407490:	cbz	x0, 4074cc <__get_hz@@Base+0x58>
  407494:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  407498:	add	x0, x0, #0xe98
  40749c:	bl	405210 <getenv@plt>
  4074a0:	mov	w2, #0xa                   	// #10
  4074a4:	mov	x1, #0x0                   	// #0
  4074a8:	bl	405030 <strtol@plt>
  4074ac:	cmp	w0, #0x0
  4074b0:	mov	w19, #0x64                  	// #100
  4074b4:	csel	w19, w0, w19, ne  // ne = any
  4074b8:	mov	w0, w19
  4074bc:	ldp	x19, x20, [sp, #16]
  4074c0:	ldp	x29, x30, [sp]
  4074c4:	add	sp, sp, #0x430
  4074c8:	ret
  4074cc:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4074d0:	add	x0, x0, #0xea0
  4074d4:	bl	405210 <getenv@plt>
  4074d8:	cbz	x0, 407548 <__get_hz@@Base+0xd4>
  4074dc:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4074e0:	add	x0, x0, #0xea0
  4074e4:	bl	405210 <getenv@plt>
  4074e8:	mov	x3, x0
  4074ec:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  4074f0:	add	x2, x2, #0xeb0
  4074f4:	mov	x1, #0x3ff                 	// #1023
  4074f8:	add	x0, sp, #0x30
  4074fc:	bl	404e40 <snprintf@plt>
  407500:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407504:	add	x1, x1, #0xc40
  407508:	add	x0, sp, #0x30
  40750c:	bl	405110 <fopen64@plt>
  407510:	mov	x20, x0
  407514:	mov	w19, #0x64                  	// #100
  407518:	cbz	x0, 4074b8 <__get_hz@@Base+0x44>
  40751c:	add	x3, sp, #0x2c
  407520:	add	x2, sp, #0x28
  407524:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407528:	add	x1, x1, #0xef0
  40752c:	bl	404ec0 <__isoc99_fscanf@plt>
  407530:	cmp	w0, #0x2
  407534:	b.eq	40759c <__get_hz@@Base+0x128>  // b.none
  407538:	mov	x0, x20
  40753c:	bl	404e70 <fclose@plt>
  407540:	mov	w19, #0x64                  	// #100
  407544:	b	4074b8 <__get_hz@@Base+0x44>
  407548:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  40754c:	add	x0, x0, #0xeb8
  407550:	bl	405210 <getenv@plt>
  407554:	cbz	x0, 407580 <__get_hz@@Base+0x10c>
  407558:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  40755c:	add	x0, x0, #0xeb8
  407560:	bl	405210 <getenv@plt>
  407564:	mov	x3, x0
  407568:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  40756c:	add	x2, x2, #0xec8
  407570:	mov	x1, #0x3ff                 	// #1023
  407574:	add	x0, sp, #0x30
  407578:	bl	404e40 <snprintf@plt>
  40757c:	b	407500 <__get_hz@@Base+0x8c>
  407580:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  407584:	add	x0, x0, #0xed8
  407588:	ldp	x2, x3, [x0]
  40758c:	stp	x2, x3, [sp, #48]
  407590:	ldrb	w0, [x0, #16]
  407594:	strb	w0, [sp, #64]
  407598:	b	407500 <__get_hz@@Base+0x8c>
  40759c:	mov	w0, #0x4240                	// #16960
  4075a0:	movk	w0, #0xf, lsl #16
  4075a4:	ldr	w1, [sp, #40]
  4075a8:	cmp	w1, w0
  4075ac:	b.ne	407538 <__get_hz@@Base+0xc4>  // b.any
  4075b0:	ldr	w19, [sp, #44]
  4075b4:	mov	x0, x20
  4075b8:	bl	404e70 <fclose@plt>
  4075bc:	cmp	w19, #0x0
  4075c0:	mov	w0, #0x64                  	// #100
  4075c4:	csel	w19, w19, w0, ne  // ne = any
  4075c8:	b	4074b8 <__get_hz@@Base+0x44>

00000000004075cc <__get_user_hz@@Base>:
  4075cc:	stp	x29, x30, [sp, #-16]!
  4075d0:	mov	x29, sp
  4075d4:	mov	w0, #0x2                   	// #2
  4075d8:	bl	405140 <sysconf@plt>
  4075dc:	ldp	x29, x30, [sp], #16
  4075e0:	ret

00000000004075e4 <rt_addr_n2a_r@@Base>:
  4075e4:	stp	x29, x30, [sp, #-16]!
  4075e8:	mov	x29, sp
  4075ec:	mov	x5, x2
  4075f0:	mov	x2, x3
  4075f4:	cmp	w0, #0x11
  4075f8:	b.eq	40765c <rt_addr_n2a_r@@Base+0x78>  // b.none
  4075fc:	b.gt	407630 <rt_addr_n2a_r@@Base+0x4c>
  407600:	cmp	w0, #0x7
  407604:	b.eq	40766c <rt_addr_n2a_r@@Base+0x88>  // b.none
  407608:	and	w1, w0, #0xfffffff7
  40760c:	cmp	w1, #0x2
  407610:	b.ne	407624 <rt_addr_n2a_r@@Base+0x40>  // b.any
  407614:	mov	w3, w4
  407618:	mov	x1, x5
  40761c:	bl	405270 <inet_ntop@plt>
  407620:	b	407654 <rt_addr_n2a_r@@Base+0x70>
  407624:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  407628:	add	x0, x0, #0xf08
  40762c:	b	407654 <rt_addr_n2a_r@@Base+0x70>
  407630:	cmp	w0, #0x1c
  407634:	b.ne	40764c <rt_addr_n2a_r@@Base+0x68>  // b.any
  407638:	sxtw	x3, w4
  40763c:	mov	x1, x5
  407640:	mov	w0, #0x1c                  	// #28
  407644:	bl	40a6ac <mpls_ntop@@Base>
  407648:	b	407654 <rt_addr_n2a_r@@Base+0x70>
  40764c:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  407650:	add	x0, x0, #0xf08
  407654:	ldp	x29, x30, [sp], #16
  407658:	ret
  40765c:	mov	w2, #0xffff                	// #65535
  407660:	mov	x0, x5
  407664:	bl	4095e8 <ll_addr_n2a@@Base>
  407668:	b	407654 <rt_addr_n2a_r@@Base+0x70>
  40766c:	ldrh	w0, [x5]
  407670:	cmp	w0, #0x2
  407674:	b.eq	40768c <rt_addr_n2a_r@@Base+0xa8>  // b.none
  407678:	cmp	w0, #0xa
  40767c:	b.eq	4076a0 <rt_addr_n2a_r@@Base+0xbc>  // b.none
  407680:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  407684:	add	x0, x0, #0xf08
  407688:	b	407654 <rt_addr_n2a_r@@Base+0x70>
  40768c:	mov	w3, w4
  407690:	add	x1, x5, #0x4
  407694:	mov	w0, #0x2                   	// #2
  407698:	bl	405270 <inet_ntop@plt>
  40769c:	b	407654 <rt_addr_n2a_r@@Base+0x70>
  4076a0:	mov	w3, w4
  4076a4:	add	x1, x5, #0x8
  4076a8:	mov	w0, #0xa                   	// #10
  4076ac:	bl	405270 <inet_ntop@plt>
  4076b0:	b	407654 <rt_addr_n2a_r@@Base+0x70>

00000000004076b4 <rt_addr_n2a@@Base>:
  4076b4:	stp	x29, x30, [sp, #-16]!
  4076b8:	mov	x29, sp
  4076bc:	mov	w4, #0x100                 	// #256
  4076c0:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  4076c4:	add	x3, x3, #0x328
  4076c8:	bl	4075e4 <rt_addr_n2a_r@@Base>
  4076cc:	ldp	x29, x30, [sp], #16
  4076d0:	ret

00000000004076d4 <read_family@@Base>:
  4076d4:	stp	x29, x30, [sp, #-32]!
  4076d8:	mov	x29, sp
  4076dc:	str	x19, [sp, #16]
  4076e0:	mov	x19, x0
  4076e4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4076e8:	add	x1, x1, #0xf10
  4076ec:	bl	405010 <strcmp@plt>
  4076f0:	mov	w1, #0x2                   	// #2
  4076f4:	cbz	w0, 407774 <read_family@@Base+0xa0>
  4076f8:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4076fc:	add	x1, x1, #0xf18
  407700:	mov	x0, x19
  407704:	bl	405010 <strcmp@plt>
  407708:	mov	w1, #0xa                   	// #10
  40770c:	cbz	w0, 407774 <read_family@@Base+0xa0>
  407710:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407714:	add	x1, x1, #0xf20
  407718:	mov	x0, x19
  40771c:	bl	405010 <strcmp@plt>
  407720:	mov	w1, #0x11                  	// #17
  407724:	cbz	w0, 407774 <read_family@@Base+0xa0>
  407728:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  40772c:	add	x1, x1, #0xf28
  407730:	mov	x0, x19
  407734:	bl	405010 <strcmp@plt>
  407738:	mov	w1, #0x4                   	// #4
  40773c:	cbz	w0, 407774 <read_family@@Base+0xa0>
  407740:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407744:	add	x1, x1, #0xf30
  407748:	mov	x0, x19
  40774c:	bl	405010 <strcmp@plt>
  407750:	mov	w1, #0x1c                  	// #28
  407754:	cbz	w0, 407774 <read_family@@Base+0xa0>
  407758:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  40775c:	add	x1, x1, #0xf38
  407760:	mov	x0, x19
  407764:	bl	405010 <strcmp@plt>
  407768:	cmp	w0, #0x0
  40776c:	mov	w1, #0x7                   	// #7
  407770:	csel	w1, w1, wzr, eq  // eq = none
  407774:	mov	w0, w1
  407778:	ldr	x19, [sp, #16]
  40777c:	ldp	x29, x30, [sp], #32
  407780:	ret

0000000000407784 <family_name@@Base>:
  407784:	cmp	w0, #0x2
  407788:	b.eq	4077c8 <family_name@@Base+0x44>  // b.none
  40778c:	cmp	w0, #0xa
  407790:	b.eq	4077d4 <family_name@@Base+0x50>  // b.none
  407794:	cmp	w0, #0x11
  407798:	b.eq	4077e0 <family_name@@Base+0x5c>  // b.none
  40779c:	cmp	w0, #0x4
  4077a0:	b.eq	4077ec <family_name@@Base+0x68>  // b.none
  4077a4:	cmp	w0, #0x1c
  4077a8:	b.eq	4077f8 <family_name@@Base+0x74>  // b.none
  4077ac:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  4077b0:	add	x2, x2, #0xf38
  4077b4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4077b8:	add	x1, x1, #0xf08
  4077bc:	cmp	w0, #0x7
  4077c0:	csel	x0, x1, x2, ne  // ne = any
  4077c4:	ret
  4077c8:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4077cc:	add	x0, x0, #0xf10
  4077d0:	b	4077c4 <family_name@@Base+0x40>
  4077d4:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4077d8:	add	x0, x0, #0xf18
  4077dc:	b	4077c4 <family_name@@Base+0x40>
  4077e0:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4077e4:	add	x0, x0, #0xf20
  4077e8:	b	4077c4 <family_name@@Base+0x40>
  4077ec:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4077f0:	add	x0, x0, #0xf28
  4077f4:	b	4077c4 <family_name@@Base+0x40>
  4077f8:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4077fc:	add	x0, x0, #0xf30
  407800:	b	4077c4 <family_name@@Base+0x40>

0000000000407804 <get_addr@@Base>:
  407804:	stp	x29, x30, [sp, #-48]!
  407808:	mov	x29, sp
  40780c:	stp	x19, x20, [sp, #16]
  407810:	mov	x20, x1
  407814:	mov	w19, w2
  407818:	bl	406bf8 <get_addr_1@@Base>
  40781c:	cbnz	w0, 407830 <get_addr@@Base+0x2c>
  407820:	mov	w0, #0x0                   	// #0
  407824:	ldp	x19, x20, [sp, #16]
  407828:	ldp	x29, x30, [sp], #48
  40782c:	ret
  407830:	str	x21, [sp, #32]
  407834:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  407838:	ldr	x0, [x0, #3992]
  40783c:	ldr	x21, [x0]
  407840:	cbnz	w19, 407868 <get_addr@@Base+0x64>
  407844:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  407848:	add	x2, x2, #0xf40
  40784c:	mov	x3, x20
  407850:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  407854:	add	x1, x1, #0xf50
  407858:	mov	x0, x21
  40785c:	bl	405250 <fprintf@plt>
  407860:	mov	w0, #0x1                   	// #1
  407864:	bl	404d60 <exit@plt>
  407868:	mov	w0, w19
  40786c:	bl	407784 <family_name@@Base>
  407870:	mov	x2, x0
  407874:	b	40784c <get_addr@@Base+0x48>

0000000000407878 <get_prefix@@Base>:
  407878:	stp	x29, x30, [sp, #-48]!
  40787c:	mov	x29, sp
  407880:	stp	x19, x20, [sp, #16]
  407884:	mov	x20, x1
  407888:	cmp	w2, #0x11
  40788c:	b.eq	4078ac <get_prefix@@Base+0x34>  // b.none
  407890:	mov	w19, w2
  407894:	bl	406ef4 <get_prefix_1@@Base>
  407898:	cbnz	w0, 4078d4 <get_prefix@@Base+0x5c>
  40789c:	mov	w0, #0x0                   	// #0
  4078a0:	ldp	x19, x20, [sp, #16]
  4078a4:	ldp	x29, x30, [sp], #48
  4078a8:	ret
  4078ac:	str	x21, [sp, #32]
  4078b0:	mov	x2, x1
  4078b4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4078b8:	add	x1, x1, #0xf88
  4078bc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4078c0:	ldr	x0, [x0, #3992]
  4078c4:	ldr	x0, [x0]
  4078c8:	bl	405250 <fprintf@plt>
  4078cc:	mov	w0, #0x1                   	// #1
  4078d0:	bl	404d60 <exit@plt>
  4078d4:	str	x21, [sp, #32]
  4078d8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4078dc:	ldr	x0, [x0, #3992]
  4078e0:	ldr	x21, [x0]
  4078e4:	cbnz	w19, 40790c <get_prefix@@Base+0x94>
  4078e8:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  4078ec:	add	x2, x2, #0xf40
  4078f0:	mov	x3, x20
  4078f4:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4078f8:	add	x1, x1, #0xfd0
  4078fc:	mov	x0, x21
  407900:	bl	405250 <fprintf@plt>
  407904:	mov	w0, #0x1                   	// #1
  407908:	bl	404d60 <exit@plt>
  40790c:	mov	w0, w19
  407910:	bl	407784 <family_name@@Base>
  407914:	mov	x2, x0
  407918:	b	4078f0 <get_prefix@@Base+0x78>

000000000040791c <format_host_r@@Base>:
  40791c:	stp	x29, x30, [sp, #-112]!
  407920:	mov	x29, sp
  407924:	stp	x19, x20, [sp, #16]
  407928:	stp	x21, x22, [sp, #32]
  40792c:	stp	x23, x24, [sp, #48]
  407930:	mov	w21, w0
  407934:	mov	w19, w1
  407938:	mov	x22, x2
  40793c:	str	x3, [sp, #96]
  407940:	mov	w23, w4
  407944:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  407948:	ldr	x0, [x0, #4064]
  40794c:	ldr	w0, [x0]
  407950:	cbz	w0, 4079e0 <format_host_r@@Base+0xc4>
  407954:	cmp	w1, #0x0
  407958:	b.le	4079c0 <format_host_r@@Base+0xa4>
  40795c:	stp	x25, x26, [sp, #64]
  407960:	stp	x27, x28, [sp, #80]
  407964:	cmp	w21, #0xa
  407968:	b.eq	407a0c <format_host_r@@Base+0xf0>  // b.none
  40796c:	mov	w26, w21
  407970:	mov	w25, w19
  407974:	mov	x27, x22
  407978:	sxtw	x28, w25
  40797c:	add	x0, x27, x28
  407980:	ldur	w1, [x0, #-4]
  407984:	mov	w24, #0xff01                	// #65281
  407988:	movk	w24, #0xff00, lsl #16
  40798c:	umull	x24, w1, w24
  407990:	lsr	x24, x24, #40
  407994:	add	w2, w24, w24, lsl #8
  407998:	sub	w24, w1, w2
  40799c:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4079a0:	add	x0, x0, #0x328
  4079a4:	sub	w1, w1, w2
  4079a8:	add	x0, x0, #0x100
  4079ac:	ldr	x0, [x0, x1, lsl #3]
  4079b0:	str	x0, [sp, #104]
  4079b4:	cbz	x0, 407aa4 <format_host_r@@Base+0x188>
  4079b8:	mov	x20, x0
  4079bc:	b	407a70 <format_host_r@@Base+0x154>
  4079c0:	mov	w0, w21
  4079c4:	bl	406ba8 <af_bit_len@@Base>
  4079c8:	add	w19, w0, #0x7
  4079cc:	cmp	w0, #0x0
  4079d0:	csel	w19, w19, w0, lt  // lt = tstop
  4079d4:	asr	w19, w19, #3
  4079d8:	cmp	w0, #0x7
  4079dc:	b.gt	40795c <format_host_r@@Base+0x40>
  4079e0:	mov	w4, w23
  4079e4:	ldr	x3, [sp, #96]
  4079e8:	mov	x2, x22
  4079ec:	mov	w1, w19
  4079f0:	mov	w0, w21
  4079f4:	bl	4075e4 <rt_addr_n2a_r@@Base>
  4079f8:	ldp	x19, x20, [sp, #16]
  4079fc:	ldp	x21, x22, [sp, #32]
  407a00:	ldp	x23, x24, [sp, #48]
  407a04:	ldp	x29, x30, [sp], #112
  407a08:	ret
  407a0c:	ldr	w0, [x22]
  407a10:	cbnz	w0, 407a48 <format_host_r@@Base+0x12c>
  407a14:	ldr	w0, [x22, #4]
  407a18:	cbnz	w0, 407a58 <format_host_r@@Base+0x13c>
  407a1c:	ldr	w0, [x22, #8]
  407a20:	cmn	w0, #0x10, lsl #12
  407a24:	b.eq	407a38 <format_host_r@@Base+0x11c>  // b.none
  407a28:	mov	w26, w21
  407a2c:	mov	w25, w19
  407a30:	mov	x27, x22
  407a34:	b	407978 <format_host_r@@Base+0x5c>
  407a38:	add	x27, x22, #0xc
  407a3c:	mov	w26, #0x2                   	// #2
  407a40:	mov	w25, #0x4                   	// #4
  407a44:	b	407978 <format_host_r@@Base+0x5c>
  407a48:	mov	w26, w21
  407a4c:	mov	w25, w19
  407a50:	mov	x27, x22
  407a54:	b	407978 <format_host_r@@Base+0x5c>
  407a58:	mov	w26, w21
  407a5c:	mov	w25, w19
  407a60:	mov	x27, x22
  407a64:	b	407978 <format_host_r@@Base+0x5c>
  407a68:	ldr	x20, [x20]
  407a6c:	cbz	x20, 407aa4 <format_host_r@@Base+0x188>
  407a70:	ldrh	w0, [x20, #22]
  407a74:	cmp	w0, w26
  407a78:	b.ne	407a68 <format_host_r@@Base+0x14c>  // b.any
  407a7c:	ldrh	w0, [x20, #18]
  407a80:	cmp	w25, w0
  407a84:	b.ne	407a68 <format_host_r@@Base+0x14c>  // b.any
  407a88:	mov	x2, x28
  407a8c:	mov	x1, x27
  407a90:	add	x0, x20, #0x18
  407a94:	bl	405000 <memcmp@plt>
  407a98:	cbnz	w0, 407a68 <format_host_r@@Base+0x14c>
  407a9c:	ldr	x0, [x20, #8]
  407aa0:	b	407b30 <format_host_r@@Base+0x214>
  407aa4:	mov	x0, #0x118                 	// #280
  407aa8:	bl	404e90 <malloc@plt>
  407aac:	mov	x20, x0
  407ab0:	cbz	x0, 407b58 <format_host_r@@Base+0x23c>
  407ab4:	strh	w26, [x0, #22]
  407ab8:	strh	w25, [x0, #18]
  407abc:	str	xzr, [x0, #8]
  407ac0:	mov	x2, x28
  407ac4:	mov	x1, x27
  407ac8:	add	x0, x0, #0x18
  407acc:	bl	404d20 <memcpy@plt>
  407ad0:	ldr	x0, [sp, #104]
  407ad4:	str	x0, [x20]
  407ad8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  407adc:	add	x0, x0, #0x328
  407ae0:	add	x1, x0, #0x100
  407ae4:	str	x20, [x1, w24, uxtw #3]
  407ae8:	ldr	w1, [x0, #2312]
  407aec:	add	w1, w1, #0x1
  407af0:	str	w1, [x0, #2312]
  407af4:	cmp	w1, #0x1
  407af8:	b.eq	407b40 <format_host_r@@Base+0x224>  // b.none
  407afc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  407b00:	ldr	x0, [x0, #4016]
  407b04:	ldr	x0, [x0]
  407b08:	bl	4050f0 <fflush@plt>
  407b0c:	mov	w2, w26
  407b10:	mov	w1, w25
  407b14:	mov	x0, x27
  407b18:	bl	405060 <gethostbyaddr@plt>
  407b1c:	cbz	x0, 407b2c <format_host_r@@Base+0x210>
  407b20:	ldr	x0, [x0]
  407b24:	bl	404f80 <strdup@plt>
  407b28:	str	x0, [x20, #8]
  407b2c:	ldr	x0, [x20, #8]
  407b30:	cbz	x0, 407b4c <format_host_r@@Base+0x230>
  407b34:	ldp	x25, x26, [sp, #64]
  407b38:	ldp	x27, x28, [sp, #80]
  407b3c:	b	4079f8 <format_host_r@@Base+0xdc>
  407b40:	mov	w0, #0x1                   	// #1
  407b44:	bl	404db0 <sethostent@plt>
  407b48:	b	407afc <format_host_r@@Base+0x1e0>
  407b4c:	ldp	x25, x26, [sp, #64]
  407b50:	ldp	x27, x28, [sp, #80]
  407b54:	b	4079e0 <format_host_r@@Base+0xc4>
  407b58:	ldp	x25, x26, [sp, #64]
  407b5c:	ldp	x27, x28, [sp, #80]
  407b60:	b	4079e0 <format_host_r@@Base+0xc4>

0000000000407b64 <format_host@@Base>:
  407b64:	stp	x29, x30, [sp, #-16]!
  407b68:	mov	x29, sp
  407b6c:	mov	w4, #0x100                 	// #256
  407b70:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  407b74:	add	x3, x3, #0x328
  407b78:	add	x3, x3, #0x910
  407b7c:	bl	40791c <format_host_r@@Base>
  407b80:	ldp	x29, x30, [sp], #16
  407b84:	ret

0000000000407b88 <hexstring_n2a@@Base>:
  407b88:	stp	x29, x30, [sp, #-80]!
  407b8c:	mov	x29, sp
  407b90:	str	x25, [sp, #64]
  407b94:	mov	x25, x2
  407b98:	cmp	w1, #0x0
  407b9c:	ccmp	w3, #0x2, #0x4, gt
  407ba0:	b.le	407c0c <hexstring_n2a@@Base+0x84>
  407ba4:	stp	x19, x20, [sp, #16]
  407ba8:	stp	x21, x22, [sp, #32]
  407bac:	stp	x23, x24, [sp, #48]
  407bb0:	mov	w23, w1
  407bb4:	mov	x20, x2
  407bb8:	mov	x19, #0x1                   	// #1
  407bbc:	sub	x22, x0, #0x1
  407bc0:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407bc4:	add	x24, x24, #0x0
  407bc8:	add	w21, w3, w2
  407bcc:	ldrb	w2, [x22, x19]
  407bd0:	mov	x1, x24
  407bd4:	mov	x0, x20
  407bd8:	bl	404de0 <sprintf@plt>
  407bdc:	add	x20, x20, #0x2
  407be0:	sub	w0, w21, w20
  407be4:	cmp	w0, #0x2
  407be8:	cset	w0, le
  407bec:	cmp	w23, w19
  407bf0:	cset	w3, le
  407bf4:	orr	w0, w0, w3
  407bf8:	add	x19, x19, #0x1
  407bfc:	cbz	w0, 407bcc <hexstring_n2a@@Base+0x44>
  407c00:	ldp	x19, x20, [sp, #16]
  407c04:	ldp	x21, x22, [sp, #32]
  407c08:	ldp	x23, x24, [sp, #48]
  407c0c:	mov	x0, x25
  407c10:	ldr	x25, [sp, #64]
  407c14:	ldp	x29, x30, [sp], #80
  407c18:	ret

0000000000407c1c <hexstring_a2n@@Base>:
  407c1c:	stp	x29, x30, [sp, #-128]!
  407c20:	mov	x29, sp
  407c24:	stp	x19, x20, [sp, #16]
  407c28:	stp	x23, x24, [sp, #48]
  407c2c:	stp	x27, x28, [sp, #80]
  407c30:	mov	x20, x0
  407c34:	mov	x23, x1
  407c38:	str	x1, [sp, #104]
  407c3c:	mov	w19, w2
  407c40:	mov	x28, x3
  407c44:	bl	404d50 <strlen@plt>
  407c48:	tbnz	w0, #0, 407d2c <hexstring_a2n@@Base+0x110>
  407c4c:	mov	w27, w19
  407c50:	cbz	w19, 407d18 <hexstring_a2n@@Base+0xfc>
  407c54:	stp	x21, x22, [sp, #32]
  407c58:	stp	x25, x26, [sp, #64]
  407c5c:	mov	w21, #0x0                   	// #0
  407c60:	add	x22, sp, #0x70
  407c64:	mov	x26, #0x2                   	// #2
  407c68:	add	x25, sp, #0x78
  407c6c:	mov	w24, #0x10                  	// #16
  407c70:	mov	x0, x20
  407c74:	bl	404d50 <strlen@plt>
  407c78:	cmp	x0, #0x1
  407c7c:	b.ls	407d0c <hexstring_a2n@@Base+0xf0>  // b.plast
  407c80:	mov	x2, x26
  407c84:	mov	x1, x20
  407c88:	mov	x0, x22
  407c8c:	bl	4051b0 <strncpy@plt>
  407c90:	strb	wzr, [sp, #114]
  407c94:	bl	405200 <__errno_location@plt>
  407c98:	mov	x19, x0
  407c9c:	str	wzr, [x0]
  407ca0:	mov	w2, w24
  407ca4:	mov	x1, x25
  407ca8:	mov	x0, x22
  407cac:	bl	404d40 <strtoul@plt>
  407cb0:	ldr	w1, [x19]
  407cb4:	cmp	w0, #0xff
  407cb8:	ccmp	w1, #0x0, #0x0, ls  // ls = plast
  407cbc:	b.ne	407cec <hexstring_a2n@@Base+0xd0>  // b.any
  407cc0:	ldr	x1, [sp, #120]
  407cc4:	ldrb	w1, [x1]
  407cc8:	cbnz	w1, 407cec <hexstring_a2n@@Base+0xd0>
  407ccc:	add	w21, w21, #0x1
  407cd0:	strb	w0, [x23], #1
  407cd4:	add	x20, x20, #0x2
  407cd8:	cmp	w21, w27
  407cdc:	b.ne	407c70 <hexstring_a2n@@Base+0x54>  // b.any
  407ce0:	ldp	x21, x22, [sp, #32]
  407ce4:	ldp	x25, x26, [sp, #64]
  407ce8:	b	407d18 <hexstring_a2n@@Base+0xfc>
  407cec:	mov	x0, #0x0                   	// #0
  407cf0:	ldp	x21, x22, [sp, #32]
  407cf4:	ldp	x25, x26, [sp, #64]
  407cf8:	ldp	x19, x20, [sp, #16]
  407cfc:	ldp	x23, x24, [sp, #48]
  407d00:	ldp	x27, x28, [sp, #80]
  407d04:	ldp	x29, x30, [sp], #128
  407d08:	ret
  407d0c:	mov	w27, w21
  407d10:	ldp	x21, x22, [sp, #32]
  407d14:	ldp	x25, x26, [sp, #64]
  407d18:	ldr	x1, [sp, #104]
  407d1c:	mov	x0, x1
  407d20:	cbz	x28, 407cf8 <hexstring_a2n@@Base+0xdc>
  407d24:	str	w27, [x28]
  407d28:	b	407cf8 <hexstring_a2n@@Base+0xdc>
  407d2c:	mov	x0, #0x0                   	// #0
  407d30:	b	407cf8 <hexstring_a2n@@Base+0xdc>

0000000000407d34 <hex2mem@@Base>:
  407d34:	cmp	w2, #0x0
  407d38:	b.le	407da0 <hex2mem@@Base+0x6c>
  407d3c:	stp	x29, x30, [sp, #-48]!
  407d40:	mov	x29, sp
  407d44:	stp	x19, x20, [sp, #16]
  407d48:	str	x21, [sp, #32]
  407d4c:	mov	x19, x1
  407d50:	add	x20, x0, #0x1
  407d54:	add	x1, x1, #0x1
  407d58:	sub	w2, w2, #0x1
  407d5c:	add	x21, x1, x2
  407d60:	ldurb	w0, [x20, #-1]
  407d64:	bl	406324 <get_hex@@Base>
  407d68:	tbnz	w0, #31, 407da8 <hex2mem@@Base+0x74>
  407d6c:	ubfiz	w0, w0, #4, #4
  407d70:	strb	w0, [x19]
  407d74:	ldrb	w0, [x20]
  407d78:	bl	406324 <get_hex@@Base>
  407d7c:	tbnz	w0, #31, 407dbc <hex2mem@@Base+0x88>
  407d80:	ldrb	w1, [x19]
  407d84:	orr	w0, w0, w1
  407d88:	strb	w0, [x19], #1
  407d8c:	add	x20, x20, #0x2
  407d90:	cmp	x19, x21
  407d94:	b.ne	407d60 <hex2mem@@Base+0x2c>  // b.any
  407d98:	mov	w0, #0x0                   	// #0
  407d9c:	b	407dac <hex2mem@@Base+0x78>
  407da0:	mov	w0, #0x0                   	// #0
  407da4:	ret
  407da8:	mov	w0, #0xffffffff            	// #-1
  407dac:	ldp	x19, x20, [sp, #16]
  407db0:	ldr	x21, [sp, #32]
  407db4:	ldp	x29, x30, [sp], #48
  407db8:	ret
  407dbc:	mov	w0, #0xffffffff            	// #-1
  407dc0:	b	407dac <hex2mem@@Base+0x78>

0000000000407dc4 <addr64_n2a@@Base>:
  407dc4:	stp	x29, x30, [sp, #-96]!
  407dc8:	mov	x29, sp
  407dcc:	stp	x19, x20, [sp, #16]
  407dd0:	stp	x21, x22, [sp, #32]
  407dd4:	stp	x23, x24, [sp, #48]
  407dd8:	str	x25, [sp, #64]
  407ddc:	str	x0, [sp, #88]
  407de0:	mov	x21, x1
  407de4:	mov	x22, x2
  407de8:	rev16	w3, w0
  407dec:	and	w3, w3, #0xffff
  407df0:	add	x20, sp, #0x58
  407df4:	add	x25, x20, #0x6
  407df8:	mov	x19, #0x0                   	// #0
  407dfc:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407e00:	add	x24, x24, #0x8
  407e04:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407e08:	add	x23, x23, #0x10
  407e0c:	mov	x4, x24
  407e10:	mov	x2, x23
  407e14:	sub	x1, x22, x19
  407e18:	add	x0, x21, x19
  407e1c:	bl	404e40 <snprintf@plt>
  407e20:	tbnz	w0, #31, 407e64 <addr64_n2a@@Base+0xa0>
  407e24:	add	x19, x19, w0, sxtw
  407e28:	ldrh	w3, [x20, #2]!
  407e2c:	rev16	w3, w3
  407e30:	and	w3, w3, #0xffff
  407e34:	cmp	x25, x20
  407e38:	b.ne	407e0c <addr64_n2a@@Base+0x48>  // b.any
  407e3c:	adrp	x4, 40d000 <addattrstrz@@Base+0x1c>
  407e40:	add	x4, x4, #0xd80
  407e44:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407e48:	add	x2, x2, #0x10
  407e4c:	sub	x1, x22, x19
  407e50:	add	x0, x21, x19
  407e54:	bl	404e40 <snprintf@plt>
  407e58:	add	x19, x19, w0, sxtw
  407e5c:	cmp	w0, #0x0
  407e60:	csel	w0, w19, w0, ge  // ge = tcont
  407e64:	ldp	x19, x20, [sp, #16]
  407e68:	ldp	x21, x22, [sp, #32]
  407e6c:	ldp	x23, x24, [sp, #48]
  407e70:	ldr	x25, [sp, #64]
  407e74:	ldp	x29, x30, [sp], #96
  407e78:	ret

0000000000407e7c <print_escape_buf@@Base>:
  407e7c:	cbz	x1, 407f24 <print_escape_buf@@Base+0xa8>
  407e80:	stp	x29, x30, [sp, #-64]!
  407e84:	mov	x29, sp
  407e88:	stp	x19, x20, [sp, #16]
  407e8c:	stp	x21, x22, [sp, #32]
  407e90:	stp	x23, x24, [sp, #48]
  407e94:	mov	x21, x0
  407e98:	mov	x19, x1
  407e9c:	mov	x24, x2
  407ea0:	bl	405020 <__ctype_b_loc@plt>
  407ea4:	mov	x22, x0
  407ea8:	mov	x20, x21
  407eac:	add	x21, x21, x19
  407eb0:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407eb4:	add	x23, x23, #0x18
  407eb8:	b	407ed4 <print_escape_buf@@Base+0x58>
  407ebc:	mov	w1, w19
  407ec0:	mov	x0, x23
  407ec4:	bl	4051e0 <printf@plt>
  407ec8:	add	x20, x20, #0x1
  407ecc:	cmp	x20, x21
  407ed0:	b.eq	407f10 <print_escape_buf@@Base+0x94>  // b.none
  407ed4:	ldrb	w19, [x20]
  407ed8:	and	x3, x19, #0xff
  407edc:	ldr	x1, [x22]
  407ee0:	ldrh	w1, [x1, x3, lsl #1]
  407ee4:	and	w1, w1, #0x4000
  407ee8:	cmp	w19, #0x5c
  407eec:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  407ef0:	b.eq	407ebc <print_escape_buf@@Base+0x40>  // b.none
  407ef4:	mov	w1, w19
  407ef8:	mov	x0, x24
  407efc:	bl	4050b0 <strchr@plt>
  407f00:	cbnz	x0, 407ebc <print_escape_buf@@Base+0x40>
  407f04:	mov	w0, w19
  407f08:	bl	405220 <putchar@plt>
  407f0c:	b	407ec8 <print_escape_buf@@Base+0x4c>
  407f10:	ldp	x19, x20, [sp, #16]
  407f14:	ldp	x21, x22, [sp, #32]
  407f18:	ldp	x23, x24, [sp, #48]
  407f1c:	ldp	x29, x30, [sp], #64
  407f20:	ret
  407f24:	ret

0000000000407f28 <print_timestamp@@Base>:
  407f28:	stp	x29, x30, [sp, #-96]!
  407f2c:	mov	x29, sp
  407f30:	stp	x19, x20, [sp, #16]
  407f34:	mov	x20, x0
  407f38:	add	x19, sp, #0x50
  407f3c:	mov	x1, #0x0                   	// #0
  407f40:	mov	x0, x19
  407f44:	bl	404f10 <gettimeofday@plt>
  407f48:	mov	x0, x19
  407f4c:	bl	404e60 <localtime@plt>
  407f50:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x139b8>
  407f54:	ldr	x1, [x1, #4032]
  407f58:	ldr	w1, [x1]
  407f5c:	cbz	w1, 407fa4 <print_timestamp@@Base+0x7c>
  407f60:	add	x19, sp, #0x28
  407f64:	mov	x3, x0
  407f68:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407f6c:	add	x2, x2, #0x20
  407f70:	mov	x1, #0x28                  	// #40
  407f74:	mov	x0, x19
  407f78:	bl	404e10 <strftime@plt>
  407f7c:	ldr	x3, [sp, #88]
  407f80:	mov	x2, x19
  407f84:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407f88:	add	x1, x1, #0x38
  407f8c:	mov	x0, x20
  407f90:	bl	405250 <fprintf@plt>
  407f94:	mov	w0, #0x0                   	// #0
  407f98:	ldp	x19, x20, [sp, #16]
  407f9c:	ldp	x29, x30, [sp], #96
  407fa0:	ret
  407fa4:	bl	405150 <asctime@plt>
  407fa8:	mov	x19, x0
  407fac:	bl	404d50 <strlen@plt>
  407fb0:	add	x0, x19, x0
  407fb4:	sturb	wzr, [x0, #-1]
  407fb8:	ldr	x3, [sp, #88]
  407fbc:	mov	x2, x19
  407fc0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  407fc4:	add	x1, x1, #0x48
  407fc8:	mov	x0, x20
  407fcc:	bl	405250 <fprintf@plt>
  407fd0:	b	407f94 <print_timestamp@@Base+0x6c>

0000000000407fd4 <print_name_and_link@@Base>:
  407fd4:	stp	x29, x30, [sp, #-128]!
  407fd8:	mov	x29, sp
  407fdc:	stp	x19, x20, [sp, #16]
  407fe0:	stp	x21, x22, [sp, #32]
  407fe4:	mov	x20, x0
  407fe8:	mov	x19, x1
  407fec:	ldr	x0, [x2, #40]
  407ff0:	mov	w21, #0x0                   	// #0
  407ff4:	cbz	x0, 4080e4 <print_name_and_link@@Base+0x110>
  407ff8:	ldr	w21, [x0, #4]
  407ffc:	cbz	w21, 4080ac <print_name_and_link@@Base+0xd8>
  408000:	str	x23, [sp, #48]
  408004:	ldr	x23, [x2, #296]
  408008:	cbz	x23, 40805c <print_name_and_link@@Base+0x88>
  40800c:	bl	4099b8 <is_json_context@@Base>
  408010:	and	w0, w0, #0xff
  408014:	cbz	w0, 408040 <print_name_and_link@@Base+0x6c>
  408018:	mov	w4, w21
  40801c:	mov	x3, #0x0                   	// #0
  408020:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408024:	add	x2, x2, #0x68
  408028:	mov	w1, #0x6                   	// #6
  40802c:	mov	w0, #0x2                   	// #2
  408030:	bl	409af4 <print_color_int@@Base>
  408034:	mov	w21, #0x0                   	// #0
  408038:	ldr	x23, [sp, #48]
  40803c:	b	4080e4 <print_name_and_link@@Base+0x110>
  408040:	mov	w0, w21
  408044:	bl	40930c <ll_idx_n2a@@Base>
  408048:	mov	x22, x0
  40804c:	mov	w21, #0x0                   	// #0
  408050:	cbnz	x22, 408138 <print_name_and_link@@Base+0x164>
  408054:	ldr	x23, [sp, #48]
  408058:	b	4080e4 <print_name_and_link@@Base+0x110>
  40805c:	mov	w0, w21
  408060:	bl	409348 <ll_index_to_name@@Base>
  408064:	mov	x22, x0
  408068:	bl	4099b8 <is_json_context@@Base>
  40806c:	and	w0, w0, #0xff
  408070:	cbnz	w0, 408088 <print_name_and_link@@Base+0xb4>
  408074:	mov	w0, w21
  408078:	bl	409430 <ll_index_to_flags@@Base>
  40807c:	eor	w21, w0, #0x1
  408080:	and	w21, w21, #0x1
  408084:	b	408050 <print_name_and_link@@Base+0x7c>
  408088:	mov	x4, x22
  40808c:	mov	x3, #0x0                   	// #0
  408090:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  408094:	add	x2, x2, #0xf20
  408098:	mov	w1, #0x6                   	// #6
  40809c:	mov	w0, #0x2                   	// #2
  4080a0:	bl	409fc8 <print_color_string@@Base>
  4080a4:	mov	x22, x23
  4080a8:	b	408074 <print_name_and_link@@Base+0xa0>
  4080ac:	bl	4099b8 <is_json_context@@Base>
  4080b0:	and	w0, w0, #0xff
  4080b4:	cbnz	w0, 408114 <print_name_and_link@@Base+0x140>
  4080b8:	mov	w21, #0x0                   	// #0
  4080bc:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4080c0:	add	x22, x22, #0x60
  4080c4:	add	x0, sp, #0x40
  4080c8:	mov	x4, x22
  4080cc:	mov	x3, x19
  4080d0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4080d4:	add	x2, x2, #0x78
  4080d8:	mov	x1, #0x40                  	// #64
  4080dc:	mov	x19, x0
  4080e0:	bl	404e40 <snprintf@plt>
  4080e4:	mov	x4, x19
  4080e8:	mov	x3, x20
  4080ec:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4080f0:	add	x2, x2, #0x80
  4080f4:	mov	w1, #0x0                   	// #0
  4080f8:	mov	w0, #0x4                   	// #4
  4080fc:	bl	409fc8 <print_color_string@@Base>
  408100:	mov	w0, w21
  408104:	ldp	x19, x20, [sp, #16]
  408108:	ldp	x21, x22, [sp, #32]
  40810c:	ldp	x29, x30, [sp], #128
  408110:	ret
  408114:	mov	x4, #0x0                   	// #0
  408118:	mov	x3, #0x0                   	// #0
  40811c:	adrp	x2, 40d000 <addattrstrz@@Base+0x1c>
  408120:	add	x2, x2, #0xf20
  408124:	mov	w1, #0x6                   	// #6
  408128:	mov	w0, #0x2                   	// #2
  40812c:	bl	40a2a8 <print_color_null@@Base>
  408130:	mov	w21, #0x0                   	// #0
  408134:	b	4080e4 <print_name_and_link@@Base+0x110>
  408138:	ldr	x23, [sp, #48]
  40813c:	b	4080c4 <print_name_and_link@@Base+0xf0>

0000000000408140 <getcmdline@@Base>:
  408140:	stp	x29, x30, [sp, #-112]!
  408144:	mov	x29, sp
  408148:	stp	x19, x20, [sp, #16]
  40814c:	stp	x21, x22, [sp, #32]
  408150:	stp	x23, x24, [sp, #48]
  408154:	mov	x20, x0
  408158:	mov	x24, x1
  40815c:	mov	x23, x2
  408160:	mov	x3, x2
  408164:	mov	w2, #0xa                   	// #10
  408168:	bl	405230 <__getdelim@plt>
  40816c:	mov	x21, x0
  408170:	tbnz	x0, #63, 4082d4 <getcmdline@@Base+0x194>
  408174:	stp	x25, x26, [sp, #64]
  408178:	stp	x27, x28, [sp, #80]
  40817c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  408180:	ldr	x0, [x0, #4000]
  408184:	ldr	w1, [x0]
  408188:	add	w1, w1, #0x1
  40818c:	str	w1, [x0]
  408190:	mov	w1, #0x23                  	// #35
  408194:	ldr	x0, [x20]
  408198:	bl	4050b0 <strchr@plt>
  40819c:	cbz	x0, 4081a4 <getcmdline@@Base+0x64>
  4081a0:	strb	wzr, [x0]
  4081a4:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4081a8:	add	x25, x25, #0xb8
  4081ac:	add	x27, sp, #0x68
  4081b0:	add	x26, sp, #0x60
  4081b4:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x139b8>
  4081b8:	ldr	x22, [x22, #4000]
  4081bc:	b	408238 <getcmdline@@Base+0xf8>
  4081c0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4081c4:	ldr	x0, [x0, #3992]
  4081c8:	ldr	x3, [x0]
  4081cc:	mov	x2, #0x1a                  	// #26
  4081d0:	mov	x1, #0x1                   	// #1
  4081d4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4081d8:	add	x0, x0, #0x88
  4081dc:	bl	4050d0 <fwrite@plt>
  4081e0:	mov	x21, x19
  4081e4:	ldp	x25, x26, [sp, #64]
  4081e8:	ldp	x27, x28, [sp, #80]
  4081ec:	b	4082d4 <getcmdline@@Base+0x194>
  4081f0:	ldr	x0, [x20]
  4081f4:	bl	404d50 <strlen@plt>
  4081f8:	mov	x28, x0
  4081fc:	ldr	x0, [sp, #96]
  408200:	bl	404d50 <strlen@plt>
  408204:	add	x1, x28, x0
  408208:	add	x1, x1, #0x1
  40820c:	str	x1, [x24]
  408210:	ldr	x0, [x20]
  408214:	bl	404f60 <realloc@plt>
  408218:	str	x0, [x20]
  40821c:	cbz	x0, 408298 <getcmdline@@Base+0x158>
  408220:	sub	x19, x19, #0x2
  408224:	add	x21, x21, x19
  408228:	ldr	x1, [sp, #96]
  40822c:	bl	404ee0 <strcat@plt>
  408230:	ldr	x0, [sp, #96]
  408234:	bl	405070 <free@plt>
  408238:	mov	x1, x25
  40823c:	ldr	x0, [x20]
  408240:	bl	405190 <strstr@plt>
  408244:	mov	x28, x0
  408248:	cbz	x0, 4082cc <getcmdline@@Base+0x18c>
  40824c:	str	xzr, [sp, #96]
  408250:	str	xzr, [sp, #104]
  408254:	mov	x3, x23
  408258:	mov	w2, #0xa                   	// #10
  40825c:	mov	x1, x27
  408260:	mov	x0, x26
  408264:	bl	405230 <__getdelim@plt>
  408268:	mov	x19, x0
  40826c:	tbnz	x0, #63, 4081c0 <getcmdline@@Base+0x80>
  408270:	ldr	w0, [x22]
  408274:	add	w0, w0, #0x1
  408278:	str	w0, [x22]
  40827c:	strb	wzr, [x28]
  408280:	mov	w1, #0x23                  	// #35
  408284:	ldr	x0, [sp, #96]
  408288:	bl	4050b0 <strchr@plt>
  40828c:	cbz	x0, 4081f0 <getcmdline@@Base+0xb0>
  408290:	strb	wzr, [x0]
  408294:	b	4081f0 <getcmdline@@Base+0xb0>
  408298:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40829c:	ldr	x0, [x0, #3992]
  4082a0:	ldr	x3, [x0]
  4082a4:	mov	x2, #0xe                   	// #14
  4082a8:	mov	x1, #0x1                   	// #1
  4082ac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4082b0:	add	x0, x0, #0xa8
  4082b4:	bl	4050d0 <fwrite@plt>
  4082b8:	str	xzr, [x24]
  4082bc:	mov	x21, #0xffffffffffffffff    	// #-1
  4082c0:	ldp	x25, x26, [sp, #64]
  4082c4:	ldp	x27, x28, [sp, #80]
  4082c8:	b	4082d4 <getcmdline@@Base+0x194>
  4082cc:	ldp	x25, x26, [sp, #64]
  4082d0:	ldp	x27, x28, [sp, #80]
  4082d4:	mov	x0, x21
  4082d8:	ldp	x19, x20, [sp, #16]
  4082dc:	ldp	x21, x22, [sp, #32]
  4082e0:	ldp	x23, x24, [sp, #48]
  4082e4:	ldp	x29, x30, [sp], #112
  4082e8:	ret

00000000004082ec <makeargs@@Base>:
  4082ec:	stp	x29, x30, [sp, #-96]!
  4082f0:	mov	x29, sp
  4082f4:	stp	x19, x20, [sp, #16]
  4082f8:	stp	x21, x22, [sp, #32]
  4082fc:	stp	x25, x26, [sp, #64]
  408300:	mov	x19, x0
  408304:	mov	x25, x1
  408308:	ldrb	w0, [x0]
  40830c:	cbz	w0, 408408 <makeargs@@Base+0x11c>
  408310:	stp	x23, x24, [sp, #48]
  408314:	str	x27, [sp, #80]
  408318:	mov	x20, #0x0                   	// #0
  40831c:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408320:	add	x23, x23, #0x188
  408324:	sub	w24, w2, #0x1
  408328:	mov	w26, #0x22                  	// #34
  40832c:	b	408390 <makeargs@@Base+0xa4>
  408330:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  408334:	ldr	x0, [x0, #3992]
  408338:	ldr	x3, [x0]
  40833c:	mov	x2, #0x1e                  	// #30
  408340:	mov	x1, #0x1                   	// #1
  408344:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408348:	add	x0, x0, #0xc0
  40834c:	bl	4050d0 <fwrite@plt>
  408350:	mov	w0, #0x1                   	// #1
  408354:	bl	404d60 <exit@plt>
  408358:	add	w21, w20, #0x1
  40835c:	str	x27, [x25, x20, lsl #3]
  408360:	mov	x1, x23
  408364:	mov	x0, x27
  408368:	bl	4051c0 <strcspn@plt>
  40836c:	mov	x1, x0
  408370:	add	x0, x27, x0
  408374:	ldrb	w1, [x27, x1]
  408378:	cbz	w1, 408434 <makeargs@@Base+0x148>
  40837c:	mov	x19, x0
  408380:	strb	wzr, [x19], #1
  408384:	add	x20, x20, #0x1
  408388:	ldrb	w0, [x0, #1]
  40838c:	cbz	w0, 4083fc <makeargs@@Base+0x110>
  408390:	mov	w21, w20
  408394:	mov	x1, x23
  408398:	mov	x0, x19
  40839c:	bl	4050a0 <strspn@plt>
  4083a0:	add	x27, x19, x0
  4083a4:	ldrb	w1, [x19, x0]
  4083a8:	cbz	w1, 408410 <makeargs@@Base+0x124>
  4083ac:	cmp	w24, w20
  4083b0:	b.le	408330 <makeargs@@Base+0x44>
  4083b4:	cmp	w1, #0x27
  4083b8:	ccmp	w1, w26, #0x4, ne  // ne = any
  4083bc:	b.ne	408358 <makeargs@@Base+0x6c>  // b.any
  4083c0:	add	x0, x27, #0x1
  4083c4:	add	w21, w20, #0x1
  4083c8:	str	x0, [x25, x20, lsl #3]
  4083cc:	bl	4050b0 <strchr@plt>
  4083d0:	cbnz	x0, 40837c <makeargs@@Base+0x90>
  4083d4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4083d8:	ldr	x0, [x0, #3992]
  4083dc:	ldr	x3, [x0]
  4083e0:	mov	x2, #0x1b                  	// #27
  4083e4:	mov	x1, #0x1                   	// #1
  4083e8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4083ec:	add	x0, x0, #0xe0
  4083f0:	bl	4050d0 <fwrite@plt>
  4083f4:	mov	w0, #0x1                   	// #1
  4083f8:	bl	404d60 <exit@plt>
  4083fc:	ldp	x23, x24, [sp, #48]
  408400:	ldr	x27, [sp, #80]
  408404:	b	408418 <makeargs@@Base+0x12c>
  408408:	mov	w21, #0x0                   	// #0
  40840c:	b	408418 <makeargs@@Base+0x12c>
  408410:	ldp	x23, x24, [sp, #48]
  408414:	ldr	x27, [sp, #80]
  408418:	str	xzr, [x25, w21, sxtw #3]
  40841c:	mov	w0, w21
  408420:	ldp	x19, x20, [sp, #16]
  408424:	ldp	x21, x22, [sp, #32]
  408428:	ldp	x25, x26, [sp, #64]
  40842c:	ldp	x29, x30, [sp], #96
  408430:	ret
  408434:	ldp	x23, x24, [sp, #48]
  408438:	ldr	x27, [sp, #80]
  40843c:	b	408418 <makeargs@@Base+0x12c>

0000000000408440 <print_nlmsg_timestamp@@Base>:
  408440:	stp	x29, x30, [sp, #-64]!
  408444:	mov	x29, sp
  408448:	stp	x19, x20, [sp, #16]
  40844c:	str	x21, [sp, #32]
  408450:	mov	x20, x0
  408454:	ldr	w0, [x1, #16]
  408458:	str	x0, [sp, #56]
  40845c:	ldr	w21, [x1, #20]
  408460:	add	x0, sp, #0x38
  408464:	bl	404e60 <localtime@plt>
  408468:	bl	405150 <asctime@plt>
  40846c:	mov	x19, x0
  408470:	bl	404d50 <strlen@plt>
  408474:	add	x0, x19, x0
  408478:	sturb	wzr, [x0, #-1]
  40847c:	mov	x3, x21
  408480:	mov	x2, x19
  408484:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408488:	add	x1, x1, #0x100
  40848c:	mov	x0, x20
  408490:	bl	405250 <fprintf@plt>
  408494:	ldp	x19, x20, [sp, #16]
  408498:	ldr	x21, [sp, #32]
  40849c:	ldp	x29, x30, [sp], #64
  4084a0:	ret

00000000004084a4 <int_to_str@@Base>:
  4084a4:	stp	x29, x30, [sp, #-32]!
  4084a8:	mov	x29, sp
  4084ac:	str	x19, [sp, #16]
  4084b0:	mov	x19, x1
  4084b4:	mov	w2, w0
  4084b8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4084bc:	add	x1, x1, #0x118
  4084c0:	mov	x0, x19
  4084c4:	bl	404de0 <sprintf@plt>
  4084c8:	mov	x0, x19
  4084cc:	ldr	x19, [sp, #16]
  4084d0:	ldp	x29, x30, [sp], #32
  4084d4:	ret

00000000004084d8 <get_guid@@Base>:
  4084d8:	stp	x29, x30, [sp, #-80]!
  4084dc:	mov	x29, sp
  4084e0:	stp	x19, x20, [sp, #16]
  4084e4:	stp	x21, x22, [sp, #32]
  4084e8:	mov	x21, x0
  4084ec:	mov	x20, x1
  4084f0:	mov	x0, x1
  4084f4:	bl	404d50 <strlen@plt>
  4084f8:	cmp	x0, #0x17
  4084fc:	b.ne	408590 <get_guid@@Base+0xb8>  // b.any
  408500:	add	x19, x20, #0x2
  408504:	add	x1, x20, #0x17
  408508:	mov	x2, x19
  40850c:	ldrb	w0, [x2]
  408510:	cmp	w0, #0x3a
  408514:	b.ne	408598 <get_guid@@Base+0xc0>  // b.any
  408518:	add	x2, x2, #0x3
  40851c:	cmp	x2, x1
  408520:	b.ne	40850c <get_guid@@Base+0x34>  // b.any
  408524:	str	x23, [sp, #48]
  408528:	str	xzr, [x21]
  40852c:	mov	w20, #0x38                  	// #56
  408530:	add	x23, sp, #0x48
  408534:	mov	w22, #0x10                  	// #16
  408538:	mov	w2, w22
  40853c:	mov	x1, x23
  408540:	sub	x0, x19, #0x2
  408544:	bl	404d40 <strtoul@plt>
  408548:	cmp	x0, #0xff
  40854c:	ldr	x1, [sp, #72]
  408550:	ccmp	x1, x19, #0x0, ls  // ls = plast
  408554:	b.ne	4085a0 <get_guid@@Base+0xc8>  // b.any
  408558:	lsl	x0, x0, x20
  40855c:	ldr	x1, [x21]
  408560:	orr	x0, x1, x0
  408564:	str	x0, [x21]
  408568:	add	x19, x19, #0x3
  40856c:	sub	w20, w20, #0x8
  408570:	cmn	w20, #0x8
  408574:	b.ne	408538 <get_guid@@Base+0x60>  // b.any
  408578:	mov	w0, #0x0                   	// #0
  40857c:	ldr	x23, [sp, #48]
  408580:	ldp	x19, x20, [sp, #16]
  408584:	ldp	x21, x22, [sp, #32]
  408588:	ldp	x29, x30, [sp], #80
  40858c:	ret
  408590:	mov	w0, #0xffffffff            	// #-1
  408594:	b	408580 <get_guid@@Base+0xa8>
  408598:	mov	w0, #0xffffffff            	// #-1
  40859c:	b	408580 <get_guid@@Base+0xa8>
  4085a0:	mov	w0, #0xffffffff            	// #-1
  4085a4:	ldr	x23, [sp, #48]
  4085a8:	b	408580 <get_guid@@Base+0xa8>

00000000004085ac <get_real_family@@Base>:
  4085ac:	cmp	w0, #0x5
  4085b0:	b.ne	4085c8 <get_real_family@@Base+0x1c>  // b.any
  4085b4:	cmp	w1, #0x80
  4085b8:	b.eq	4085d0 <get_real_family@@Base+0x24>  // b.none
  4085bc:	cmp	w1, #0x81
  4085c0:	mov	w0, #0xa                   	// #10
  4085c4:	csel	w1, w1, w0, ne  // ne = any
  4085c8:	mov	w0, w1
  4085cc:	ret
  4085d0:	mov	w1, #0x2                   	// #2
  4085d4:	b	4085c8 <get_real_family@@Base+0x1c>

00000000004085d8 <get_rtnl_link_stats_rta@@Base>:
  4085d8:	sub	sp, sp, #0x9f0
  4085dc:	stp	x29, x30, [sp]
  4085e0:	mov	x29, sp
  4085e4:	stp	x19, x20, [sp, #16]
  4085e8:	stp	x21, x22, [sp, #32]
  4085ec:	str	x23, [sp, #48]
  4085f0:	mov	x19, x0
  4085f4:	ldr	x21, [x1, #184]
  4085f8:	mov	x22, x0
  4085fc:	mov	w23, #0xc0                  	// #192
  408600:	cbz	x21, 408664 <get_rtnl_link_stats_rta@@Base+0x8c>
  408604:	ldrh	w20, [x21]
  408608:	sub	w20, w20, #0x4
  40860c:	cmp	w23, w20
  408610:	b.gt	408710 <get_rtnl_link_stats_rta@@Base+0x138>
  408614:	mov	w20, w23
  408618:	sxtw	x2, w20
  40861c:	add	x1, x21, #0x4
  408620:	mov	x0, x22
  408624:	bl	404d20 <memcpy@plt>
  408628:	cmp	x22, x19
  40862c:	b.eq	408648 <get_rtnl_link_stats_rta@@Base+0x70>  // b.none
  408630:	mov	x0, #0x0                   	// #0
  408634:	ldr	w1, [x22, x0, lsl #2]
  408638:	str	x1, [x19, x0, lsl #3]
  40863c:	add	x0, x0, #0x1
  408640:	cmp	x0, #0x18
  408644:	b.ne	408634 <get_rtnl_link_stats_rta@@Base+0x5c>  // b.any
  408648:	mov	w0, w23
  40864c:	ldp	x19, x20, [sp, #16]
  408650:	ldp	x21, x22, [sp, #32]
  408654:	ldr	x23, [sp, #48]
  408658:	ldp	x29, x30, [sp]
  40865c:	add	sp, sp, #0x9f0
  408660:	ret
  408664:	ldr	x21, [x1, #56]
  408668:	mov	w23, #0x60                  	// #96
  40866c:	add	x22, sp, #0x990
  408670:	cbnz	x21, 408604 <get_rtnl_link_stats_rta@@Base+0x2c>
  408674:	ldr	x2, [x1, #96]
  408678:	cbz	x2, 408728 <get_rtnl_link_stats_rta@@Base+0x150>
  40867c:	ldrh	w3, [x2], #4
  408680:	sub	w3, w3, #0x4
  408684:	mov	w1, #0x128                 	// #296
  408688:	add	x0, sp, #0x48
  40868c:	bl	40d4ac <parse_rtattr@@Base>
  408690:	ldr	x0, [sp, #96]
  408694:	cbz	x0, 408708 <get_rtnl_link_stats_rta@@Base+0x130>
  408698:	stp	xzr, xzr, [x19]
  40869c:	stp	xzr, xzr, [x19, #16]
  4086a0:	stp	xzr, xzr, [x19, #32]
  4086a4:	stp	xzr, xzr, [x19, #48]
  4086a8:	stp	xzr, xzr, [x19, #64]
  4086ac:	stp	xzr, xzr, [x19, #80]
  4086b0:	stp	xzr, xzr, [x19, #96]
  4086b4:	stp	xzr, xzr, [x19, #112]
  4086b8:	stp	xzr, xzr, [x19, #128]
  4086bc:	stp	xzr, xzr, [x19, #144]
  4086c0:	stp	xzr, xzr, [x19, #160]
  4086c4:	stp	xzr, xzr, [x19, #176]
  4086c8:	ldur	x1, [x0, #12]
  4086cc:	str	x1, [x19]
  4086d0:	ldur	x1, [x0, #20]
  4086d4:	str	x1, [x19, #16]
  4086d8:	ldur	x1, [x0, #44]
  4086dc:	str	x1, [x19, #8]
  4086e0:	ldur	x1, [x0, #52]
  4086e4:	str	x1, [x19, #24]
  4086e8:	ldur	x1, [x0, #108]
  4086ec:	str	x1, [x19, #32]
  4086f0:	ldur	x1, [x0, #116]
  4086f4:	str	x1, [x19, #40]
  4086f8:	ldur	x1, [x0, #188]
  4086fc:	str	x1, [x19, #64]
  408700:	ldur	x0, [x0, #252]
  408704:	str	x0, [x19, #104]
  408708:	mov	w23, #0xc0                  	// #192
  40870c:	b	408648 <get_rtnl_link_stats_rta@@Base+0x70>
  408710:	sub	w2, w23, w20
  408714:	sxtw	x2, w2
  408718:	mov	w1, #0x0                   	// #0
  40871c:	add	x0, x22, w20, sxtw
  408720:	bl	404f00 <memset@plt>
  408724:	b	408618 <get_rtnl_link_stats_rta@@Base+0x40>
  408728:	mov	w23, #0xffffffff            	// #-1
  40872c:	b	408648 <get_rtnl_link_stats_rta@@Base+0x70>

0000000000408730 <strlcpy@@Base>:
  408730:	stp	x29, x30, [sp, #-48]!
  408734:	mov	x29, sp
  408738:	stp	x19, x20, [sp, #16]
  40873c:	stp	x21, x22, [sp, #32]
  408740:	mov	x22, x0
  408744:	mov	x21, x1
  408748:	mov	x19, x2
  40874c:	mov	x0, x1
  408750:	bl	404d50 <strlen@plt>
  408754:	mov	x20, x0
  408758:	cbnz	x19, 408770 <strlcpy@@Base+0x40>
  40875c:	mov	x0, x20
  408760:	ldp	x19, x20, [sp, #16]
  408764:	ldp	x21, x22, [sp, #32]
  408768:	ldp	x29, x30, [sp], #48
  40876c:	ret
  408770:	sub	x19, x19, #0x1
  408774:	cmp	x19, x0
  408778:	csel	x19, x19, x0, ls  // ls = plast
  40877c:	mov	x2, x19
  408780:	mov	x1, x21
  408784:	mov	x0, x22
  408788:	bl	404d20 <memcpy@plt>
  40878c:	strb	wzr, [x22, x19]
  408790:	b	40875c <strlcpy@@Base+0x2c>

0000000000408794 <strlcat@@Base>:
  408794:	stp	x29, x30, [sp, #-48]!
  408798:	mov	x29, sp
  40879c:	stp	x19, x20, [sp, #16]
  4087a0:	stp	x21, x22, [sp, #32]
  4087a4:	mov	x22, x0
  4087a8:	mov	x21, x1
  4087ac:	mov	x20, x2
  4087b0:	bl	404d50 <strlen@plt>
  4087b4:	mov	x19, x0
  4087b8:	cmp	x0, x20
  4087bc:	b.cc	4087dc <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  4087c0:	mov	x0, x21
  4087c4:	bl	404d50 <strlen@plt>
  4087c8:	add	x0, x0, x19
  4087cc:	ldp	x19, x20, [sp, #16]
  4087d0:	ldp	x21, x22, [sp, #32]
  4087d4:	ldp	x29, x30, [sp], #48
  4087d8:	ret
  4087dc:	sub	x2, x20, x0
  4087e0:	mov	x1, x21
  4087e4:	add	x0, x22, x0
  4087e8:	bl	408730 <strlcpy@@Base>
  4087ec:	add	x0, x0, x19
  4087f0:	b	4087cc <strlcat@@Base+0x38>

00000000004087f4 <drop_cap@@Base>:
  4087f4:	stp	x29, x30, [sp, #-48]!
  4087f8:	mov	x29, sp
  4087fc:	bl	404df0 <getuid@plt>
  408800:	cbnz	w0, 40880c <drop_cap@@Base+0x18>
  408804:	ldp	x29, x30, [sp], #48
  408808:	ret
  40880c:	bl	404da0 <geteuid@plt>
  408810:	cbz	w0, 408804 <drop_cap@@Base+0x10>
  408814:	str	x19, [sp, #16]
  408818:	bl	405040 <cap_get_proc@plt>
  40881c:	mov	x19, x0
  408820:	cbz	x0, 408868 <drop_cap@@Base+0x74>
  408824:	add	x3, sp, #0x2c
  408828:	mov	w2, #0x2                   	// #2
  40882c:	mov	w1, #0xc                   	// #12
  408830:	bl	404f40 <cap_get_flag@plt>
  408834:	cbnz	w0, 408870 <drop_cap@@Base+0x7c>
  408838:	ldr	w0, [sp, #44]
  40883c:	cbnz	w0, 408858 <drop_cap@@Base+0x64>
  408840:	mov	x0, x19
  408844:	bl	405120 <cap_clear@plt>
  408848:	cbnz	w0, 408878 <drop_cap@@Base+0x84>
  40884c:	mov	x0, x19
  408850:	bl	404f70 <cap_set_proc@plt>
  408854:	cbnz	w0, 408880 <drop_cap@@Base+0x8c>
  408858:	mov	x0, x19
  40885c:	bl	405160 <cap_free@plt>
  408860:	ldr	x19, [sp, #16]
  408864:	b	408804 <drop_cap@@Base+0x10>
  408868:	mov	w0, #0x1                   	// #1
  40886c:	bl	404d60 <exit@plt>
  408870:	mov	w0, #0x1                   	// #1
  408874:	bl	404d60 <exit@plt>
  408878:	mov	w0, #0x1                   	// #1
  40887c:	bl	404d60 <exit@plt>
  408880:	mov	w0, #0x1                   	// #1
  408884:	bl	404d60 <exit@plt>

0000000000408888 <get_time@@Base>:
  408888:	stp	x29, x30, [sp, #-64]!
  40888c:	mov	x29, sp
  408890:	stp	x19, x20, [sp, #16]
  408894:	str	x21, [sp, #32]
  408898:	mov	x21, x0
  40889c:	mov	x19, x1
  4088a0:	add	x1, sp, #0x38
  4088a4:	mov	x0, x19
  4088a8:	bl	404d90 <strtod@plt>
  4088ac:	ldr	x20, [sp, #56]
  4088b0:	cmp	x20, x19
  4088b4:	b.eq	4089cc <get_time@@Base+0x144>  // b.none
  4088b8:	str	d8, [sp, #40]
  4088bc:	fmov	d8, d0
  4088c0:	ldrb	w0, [x20]
  4088c4:	cbz	w0, 408914 <get_time@@Base+0x8c>
  4088c8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4088cc:	add	x1, x1, #0x660
  4088d0:	mov	x0, x20
  4088d4:	bl	404f50 <strcasecmp@plt>
  4088d8:	cbz	w0, 408904 <get_time@@Base+0x7c>
  4088dc:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4088e0:	add	x1, x1, #0xcd8
  4088e4:	mov	x0, x20
  4088e8:	bl	404f50 <strcasecmp@plt>
  4088ec:	cbz	w0, 408904 <get_time@@Base+0x7c>
  4088f0:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  4088f4:	add	x1, x1, #0xce0
  4088f8:	mov	x0, x20
  4088fc:	bl	404f50 <strcasecmp@plt>
  408900:	cbnz	w0, 408934 <get_time@@Base+0xac>
  408904:	mov	x0, #0x848000000000        	// #145685290680320
  408908:	movk	x0, #0x412e, lsl #48
  40890c:	fmov	d0, x0
  408910:	fmul	d8, d8, d0
  408914:	fcvtzu	w1, d8
  408918:	str	w1, [x21]
  40891c:	mov	w0, #0x0                   	// #0
  408920:	ldr	d8, [sp, #40]
  408924:	ldp	x19, x20, [sp, #16]
  408928:	ldr	x21, [sp, #32]
  40892c:	ldp	x29, x30, [sp], #64
  408930:	ret
  408934:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  408938:	add	x1, x1, #0xce8
  40893c:	mov	x0, x20
  408940:	bl	404f50 <strcasecmp@plt>
  408944:	cbz	w0, 408970 <get_time@@Base+0xe8>
  408948:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  40894c:	add	x1, x1, #0xcf0
  408950:	mov	x0, x20
  408954:	bl	404f50 <strcasecmp@plt>
  408958:	cbz	w0, 408970 <get_time@@Base+0xe8>
  40895c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  408960:	add	x1, x1, #0xcf8
  408964:	mov	x0, x20
  408968:	bl	404f50 <strcasecmp@plt>
  40896c:	cbnz	w0, 408984 <get_time@@Base+0xfc>
  408970:	mov	x0, #0x400000000000        	// #70368744177664
  408974:	movk	x0, #0x408f, lsl #48
  408978:	fmov	d0, x0
  40897c:	fmul	d8, d8, d0
  408980:	b	408914 <get_time@@Base+0x8c>
  408984:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408988:	add	x1, x1, #0x120
  40898c:	mov	x0, x20
  408990:	bl	404f50 <strcasecmp@plt>
  408994:	cbz	w0, 408914 <get_time@@Base+0x8c>
  408998:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40899c:	add	x1, x1, #0x128
  4089a0:	mov	x0, x20
  4089a4:	bl	404f50 <strcasecmp@plt>
  4089a8:	cbz	w0, 408914 <get_time@@Base+0x8c>
  4089ac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4089b0:	add	x1, x1, #0x130
  4089b4:	mov	x0, x20
  4089b8:	bl	404f50 <strcasecmp@plt>
  4089bc:	cbz	w0, 408914 <get_time@@Base+0x8c>
  4089c0:	mov	w0, #0xffffffff            	// #-1
  4089c4:	ldr	d8, [sp, #40]
  4089c8:	b	408924 <get_time@@Base+0x9c>
  4089cc:	mov	w0, #0xffffffff            	// #-1
  4089d0:	b	408924 <get_time@@Base+0x9c>

00000000004089d4 <sprint_time@@Base>:
  4089d4:	stp	x29, x30, [sp, #-32]!
  4089d8:	mov	x29, sp
  4089dc:	str	x19, [sp, #16]
  4089e0:	mov	w3, w0
  4089e4:	mov	x19, x1
  4089e8:	ucvtf	d0, w0
  4089ec:	mov	w0, #0x423f                	// #16959
  4089f0:	movk	w0, #0xf, lsl #16
  4089f4:	cmp	w3, w0
  4089f8:	b.hi	408a38 <sprint_time@@Base+0x64>  // b.pmore
  4089fc:	cmp	w3, #0x3e7
  408a00:	b.ls	408a60 <sprint_time@@Base+0x8c>  // b.plast
  408a04:	mov	x0, #0x400000000000        	// #70368744177664
  408a08:	movk	x0, #0x408f, lsl #48
  408a0c:	fmov	d1, x0
  408a10:	fdiv	d0, d0, d1
  408a14:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408a18:	add	x2, x2, #0x140
  408a1c:	mov	x1, #0x3f                  	// #63
  408a20:	mov	x0, x19
  408a24:	bl	404e40 <snprintf@plt>
  408a28:	mov	x0, x19
  408a2c:	ldr	x19, [sp, #16]
  408a30:	ldp	x29, x30, [sp], #32
  408a34:	ret
  408a38:	mov	x0, #0x848000000000        	// #145685290680320
  408a3c:	movk	x0, #0x412e, lsl #48
  408a40:	fmov	d1, x0
  408a44:	fdiv	d0, d0, d1
  408a48:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408a4c:	add	x2, x2, #0x138
  408a50:	mov	x1, #0x3f                  	// #63
  408a54:	mov	x0, x19
  408a58:	bl	404e40 <snprintf@plt>
  408a5c:	b	408a28 <sprint_time@@Base+0x54>
  408a60:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408a64:	add	x2, x2, #0x148
  408a68:	mov	x1, #0x3f                  	// #63
  408a6c:	mov	x0, x19
  408a70:	bl	404e40 <snprintf@plt>
  408a74:	b	408a28 <sprint_time@@Base+0x54>

0000000000408a78 <get_time64@@Base>:
  408a78:	stp	x29, x30, [sp, #-64]!
  408a7c:	mov	x29, sp
  408a80:	stp	x19, x20, [sp, #16]
  408a84:	str	x21, [sp, #32]
  408a88:	mov	x21, x0
  408a8c:	mov	x19, x1
  408a90:	add	x1, sp, #0x38
  408a94:	mov	x0, x19
  408a98:	bl	404d90 <strtod@plt>
  408a9c:	ldr	x20, [sp, #56]
  408aa0:	cmp	x20, x19
  408aa4:	b.eq	408c0c <get_time64@@Base+0x194>  // b.none
  408aa8:	str	d8, [sp, #40]
  408aac:	fmov	d8, d0
  408ab0:	ldrb	w0, [x20]
  408ab4:	cbz	w0, 408b04 <get_time64@@Base+0x8c>
  408ab8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408abc:	add	x1, x1, #0x660
  408ac0:	mov	x0, x20
  408ac4:	bl	404f50 <strcasecmp@plt>
  408ac8:	cbz	w0, 408af4 <get_time64@@Base+0x7c>
  408acc:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  408ad0:	add	x1, x1, #0xcd8
  408ad4:	mov	x0, x20
  408ad8:	bl	404f50 <strcasecmp@plt>
  408adc:	cbz	w0, 408af4 <get_time64@@Base+0x7c>
  408ae0:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  408ae4:	add	x1, x1, #0xce0
  408ae8:	mov	x0, x20
  408aec:	bl	404f50 <strcasecmp@plt>
  408af0:	cbnz	w0, 408b24 <get_time64@@Base+0xac>
  408af4:	mov	x0, #0xcd6500000000        	// #225833675390976
  408af8:	movk	x0, #0x41cd, lsl #48
  408afc:	fmov	d0, x0
  408b00:	fmul	d8, d8, d0
  408b04:	fcvtzs	d8, d8
  408b08:	str	d8, [x21]
  408b0c:	mov	w0, #0x0                   	// #0
  408b10:	ldr	d8, [sp, #40]
  408b14:	ldp	x19, x20, [sp, #16]
  408b18:	ldr	x21, [sp, #32]
  408b1c:	ldp	x29, x30, [sp], #64
  408b20:	ret
  408b24:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  408b28:	add	x1, x1, #0xce8
  408b2c:	mov	x0, x20
  408b30:	bl	404f50 <strcasecmp@plt>
  408b34:	cbz	w0, 408b60 <get_time64@@Base+0xe8>
  408b38:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  408b3c:	add	x1, x1, #0xcf0
  408b40:	mov	x0, x20
  408b44:	bl	404f50 <strcasecmp@plt>
  408b48:	cbz	w0, 408b60 <get_time64@@Base+0xe8>
  408b4c:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  408b50:	add	x1, x1, #0xcf8
  408b54:	mov	x0, x20
  408b58:	bl	404f50 <strcasecmp@plt>
  408b5c:	cbnz	w0, 408b74 <get_time64@@Base+0xfc>
  408b60:	mov	x0, #0x848000000000        	// #145685290680320
  408b64:	movk	x0, #0x412e, lsl #48
  408b68:	fmov	d0, x0
  408b6c:	fmul	d8, d8, d0
  408b70:	b	408b04 <get_time64@@Base+0x8c>
  408b74:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408b78:	add	x1, x1, #0x120
  408b7c:	mov	x0, x20
  408b80:	bl	404f50 <strcasecmp@plt>
  408b84:	cbz	w0, 408bb0 <get_time64@@Base+0x138>
  408b88:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408b8c:	add	x1, x1, #0x128
  408b90:	mov	x0, x20
  408b94:	bl	404f50 <strcasecmp@plt>
  408b98:	cbz	w0, 408bb0 <get_time64@@Base+0x138>
  408b9c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408ba0:	add	x1, x1, #0x130
  408ba4:	mov	x0, x20
  408ba8:	bl	404f50 <strcasecmp@plt>
  408bac:	cbnz	w0, 408bc4 <get_time64@@Base+0x14c>
  408bb0:	mov	x0, #0x400000000000        	// #70368744177664
  408bb4:	movk	x0, #0x408f, lsl #48
  408bb8:	fmov	d0, x0
  408bbc:	fmul	d8, d8, d0
  408bc0:	b	408b04 <get_time64@@Base+0x8c>
  408bc4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408bc8:	add	x1, x1, #0x150
  408bcc:	mov	x0, x20
  408bd0:	bl	404f50 <strcasecmp@plt>
  408bd4:	cbz	w0, 408b04 <get_time64@@Base+0x8c>
  408bd8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408bdc:	add	x1, x1, #0x158
  408be0:	mov	x0, x20
  408be4:	bl	404f50 <strcasecmp@plt>
  408be8:	cbz	w0, 408b04 <get_time64@@Base+0x8c>
  408bec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408bf0:	add	x1, x1, #0x160
  408bf4:	mov	x0, x20
  408bf8:	bl	404f50 <strcasecmp@plt>
  408bfc:	cbz	w0, 408b04 <get_time64@@Base+0x8c>
  408c00:	mov	w0, #0xffffffff            	// #-1
  408c04:	ldr	d8, [sp, #40]
  408c08:	b	408b14 <get_time64@@Base+0x9c>
  408c0c:	mov	w0, #0xffffffff            	// #-1
  408c10:	b	408b14 <get_time64@@Base+0x9c>

0000000000408c14 <sprint_time64@@Base>:
  408c14:	stp	x29, x30, [sp, #-32]!
  408c18:	mov	x29, sp
  408c1c:	str	x19, [sp, #16]
  408c20:	mov	x3, x0
  408c24:	mov	x19, x1
  408c28:	scvtf	d0, x0
  408c2c:	mov	x0, #0xc9ff                	// #51711
  408c30:	movk	x0, #0x3b9a, lsl #16
  408c34:	cmp	x3, x0
  408c38:	b.gt	408c7c <sprint_time64@@Base+0x68>
  408c3c:	mov	x0, #0x423f                	// #16959
  408c40:	movk	x0, #0xf, lsl #16
  408c44:	cmp	x3, x0
  408c48:	b.gt	408cb0 <sprint_time64@@Base+0x9c>
  408c4c:	cmp	x3, #0x3e7
  408c50:	b.le	408cd8 <sprint_time64@@Base+0xc4>
  408c54:	mov	x0, #0x400000000000        	// #70368744177664
  408c58:	movk	x0, #0x408f, lsl #48
  408c5c:	fmov	d1, x0
  408c60:	fdiv	d0, d0, d1
  408c64:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408c68:	add	x2, x2, #0x178
  408c6c:	mov	x1, #0x3f                  	// #63
  408c70:	mov	x0, x19
  408c74:	bl	404e40 <snprintf@plt>
  408c78:	b	408ca0 <sprint_time64@@Base+0x8c>
  408c7c:	mov	x0, #0xcd6500000000        	// #225833675390976
  408c80:	movk	x0, #0x41cd, lsl #48
  408c84:	fmov	d1, x0
  408c88:	fdiv	d0, d0, d1
  408c8c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408c90:	add	x2, x2, #0x168
  408c94:	mov	x1, #0x3f                  	// #63
  408c98:	mov	x0, x19
  408c9c:	bl	404e40 <snprintf@plt>
  408ca0:	mov	x0, x19
  408ca4:	ldr	x19, [sp, #16]
  408ca8:	ldp	x29, x30, [sp], #32
  408cac:	ret
  408cb0:	mov	x0, #0x848000000000        	// #145685290680320
  408cb4:	movk	x0, #0x412e, lsl #48
  408cb8:	fmov	d1, x0
  408cbc:	fdiv	d0, d0, d1
  408cc0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408cc4:	add	x2, x2, #0x170
  408cc8:	mov	x1, #0x3f                  	// #63
  408ccc:	mov	x0, x19
  408cd0:	bl	404e40 <snprintf@plt>
  408cd4:	b	408ca0 <sprint_time64@@Base+0x8c>
  408cd8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  408cdc:	add	x2, x2, #0x180
  408ce0:	mov	x1, #0x3f                  	// #63
  408ce4:	mov	x0, x19
  408ce8:	bl	404e40 <snprintf@plt>
  408cec:	b	408ca0 <sprint_time64@@Base+0x8c>
  408cf0:	mov	w2, w0
  408cf4:	and	x1, x2, #0x3ff
  408cf8:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  408cfc:	add	x0, x0, #0xd60
  408d00:	ldr	x0, [x0, x1, lsl #3]
  408d04:	cbz	x0, 408d1c <sprint_time64@@Base+0x108>
  408d08:	ldr	w1, [x0, #36]
  408d0c:	cmp	w1, w2
  408d10:	b.eq	408d1c <sprint_time64@@Base+0x108>  // b.none
  408d14:	ldr	x0, [x0]
  408d18:	cbnz	x0, 408d08 <sprint_time64@@Base+0xf4>
  408d1c:	ret
  408d20:	stp	x29, x30, [sp, #-32]!
  408d24:	mov	x29, sp
  408d28:	stp	x19, x20, [sp, #16]
  408d2c:	mov	x20, x0
  408d30:	ldr	x0, [x0, #48]
  408d34:	ldr	x19, [x0], #-48
  408d38:	sub	x19, x19, #0x30
  408d3c:	cmp	x20, x0
  408d40:	b.ne	408d7c <sprint_time64@@Base+0x168>  // b.any
  408d44:	ldp	x19, x20, [sp, #16]
  408d48:	ldp	x29, x30, [sp], #32
  408d4c:	ret
  408d50:	ldr	x1, [x0, #56]
  408d54:	ldr	x2, [x0, #48]
  408d58:	str	x1, [x2, #8]
  408d5c:	str	x2, [x1]
  408d60:	bl	405070 <free@plt>
  408d64:	ldr	x1, [x19, #48]
  408d68:	sub	x1, x1, #0x30
  408d6c:	mov	x0, x19
  408d70:	cmp	x20, x19
  408d74:	b.eq	408d44 <sprint_time64@@Base+0x130>  // b.none
  408d78:	mov	x19, x1
  408d7c:	ldr	x1, [x0, #16]
  408d80:	ldr	x2, [x0, #24]
  408d84:	str	x1, [x2]
  408d88:	cbz	x1, 408d50 <sprint_time64@@Base+0x13c>
  408d8c:	str	x2, [x1, #8]
  408d90:	b	408d50 <sprint_time64@@Base+0x13c>

0000000000408d94 <namehash@@Base>:
  408d94:	mov	x2, x0
  408d98:	ldrb	w1, [x0]
  408d9c:	cbz	w1, 408db8 <namehash@@Base+0x24>
  408da0:	mov	w0, #0x1505                	// #5381
  408da4:	add	w1, w1, w0, lsl #5
  408da8:	add	w0, w0, w1
  408dac:	ldrb	w1, [x2, #1]!
  408db0:	cbnz	w1, 408da4 <namehash@@Base+0x10>
  408db4:	ret
  408db8:	mov	w0, #0x1505                	// #5381
  408dbc:	b	408db4 <namehash@@Base+0x20>
  408dc0:	stp	x29, x30, [sp, #-64]!
  408dc4:	mov	x29, sp
  408dc8:	stp	x19, x20, [sp, #16]
  408dcc:	stp	x21, x22, [sp, #32]
  408dd0:	mov	x21, x0
  408dd4:	mov	x22, x1
  408dd8:	mov	x20, x2
  408ddc:	mov	x0, x1
  408de0:	bl	404d50 <strlen@plt>
  408de4:	add	x0, x0, #0x41
  408de8:	bl	404e90 <malloc@plt>
  408dec:	mov	x19, x0
  408df0:	cbz	x0, 408e84 <namehash@@Base+0xf0>
  408df4:	str	x23, [sp, #48]
  408df8:	ldr	w23, [x21, #4]
  408dfc:	str	w23, [x0, #36]
  408e00:	mov	x1, x22
  408e04:	add	x0, x0, #0x40
  408e08:	bl	405100 <strcpy@plt>
  408e0c:	ldrh	w0, [x21, #2]
  408e10:	strh	w0, [x19, #40]
  408e14:	ldr	w0, [x21, #8]
  408e18:	str	w0, [x19, #32]
  408e1c:	cbz	x20, 408e98 <namehash@@Base+0x104>
  408e20:	add	x0, x19, #0x30
  408e24:	ldr	x1, [x20, #56]
  408e28:	str	x0, [x20, #56]
  408e2c:	add	x20, x20, #0x30
  408e30:	str	x20, [x19, #48]
  408e34:	str	x1, [x19, #56]
  408e38:	str	x0, [x1]
  408e3c:	mov	x0, x22
  408e40:	bl	408d94 <namehash@@Base>
  408e44:	and	w1, w0, #0x3ff
  408e48:	add	x3, x19, #0x10
  408e4c:	and	x0, x0, #0x3ff
  408e50:	adrp	x2, 422000 <memcpy@GLIBC_2.17>
  408e54:	add	x2, x2, #0xd60
  408e58:	ldr	x0, [x2, x0, lsl #3]
  408e5c:	str	x0, [x19, #16]
  408e60:	cbz	x0, 408e68 <namehash@@Base+0xd4>
  408e64:	str	x3, [x0, #8]
  408e68:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  408e6c:	add	x2, x0, #0xd60
  408e70:	mov	w0, w1
  408e74:	str	x3, [x2, x0, lsl #3]
  408e78:	add	x0, x2, x0, lsl #3
  408e7c:	str	x0, [x19, #24]
  408e80:	ldr	x23, [sp, #48]
  408e84:	mov	x0, x19
  408e88:	ldp	x19, x20, [sp, #16]
  408e8c:	ldp	x21, x22, [sp, #32]
  408e90:	ldp	x29, x30, [sp], #64
  408e94:	ret
  408e98:	and	w1, w23, #0x3ff
  408e9c:	and	x23, x23, #0x3ff
  408ea0:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  408ea4:	add	x0, x0, #0xd60
  408ea8:	ldr	x0, [x0, x23, lsl #3]
  408eac:	str	x0, [x19]
  408eb0:	cbz	x0, 408eb8 <namehash@@Base+0x124>
  408eb4:	str	x19, [x0, #8]
  408eb8:	adrp	x0, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  408ebc:	add	x2, x0, #0xd60
  408ec0:	mov	w0, w1
  408ec4:	str	x19, [x2, x0, lsl #3]
  408ec8:	add	x0, x2, x0, lsl #3
  408ecc:	str	x0, [x19, #8]
  408ed0:	add	x0, x19, #0x30
  408ed4:	str	x0, [x19, #48]
  408ed8:	str	x0, [x19, #56]
  408edc:	b	408e3c <namehash@@Base+0xa8>
  408ee0:	stp	x29, x30, [sp, #-48]!
  408ee4:	mov	x29, sp
  408ee8:	stp	x19, x20, [sp, #16]
  408eec:	ldr	x19, [x2, #416]
  408ef0:	cbz	x19, 408f7c <namehash@@Base+0x1e8>
  408ef4:	stp	x21, x22, [sp, #32]
  408ef8:	mov	x21, x0
  408efc:	mov	x22, x1
  408f00:	ldrh	w20, [x19], #4
  408f04:	sub	w20, w20, #0x4
  408f08:	cmp	w20, #0x3
  408f0c:	b.gt	408f34 <namehash@@Base+0x1a0>
  408f10:	ldp	x21, x22, [sp, #32]
  408f14:	b	408f7c <namehash@@Base+0x1e8>
  408f18:	ldrh	w2, [x19]
  408f1c:	add	w2, w2, #0x3
  408f20:	and	w2, w2, #0xfffffffc
  408f24:	sub	w20, w20, w2
  408f28:	add	x19, x19, w2, uxtw
  408f2c:	cmp	w20, #0x3
  408f30:	b.le	408f70 <namehash@@Base+0x1dc>
  408f34:	ldrh	w2, [x19]
  408f38:	cmp	w2, #0x3
  408f3c:	b.ls	408f78 <namehash@@Base+0x1e4>  // b.plast
  408f40:	cmp	w2, w20
  408f44:	b.gt	408f68 <namehash@@Base+0x1d4>
  408f48:	ldrh	w0, [x19, #2]
  408f4c:	cmp	w0, #0x35
  408f50:	b.ne	408f18 <namehash@@Base+0x184>  // b.any
  408f54:	mov	x2, x21
  408f58:	add	x1, x19, #0x4
  408f5c:	mov	x0, x22
  408f60:	bl	408dc0 <namehash@@Base+0x2c>
  408f64:	b	408f18 <namehash@@Base+0x184>
  408f68:	ldp	x21, x22, [sp, #32]
  408f6c:	b	408f7c <namehash@@Base+0x1e8>
  408f70:	ldp	x21, x22, [sp, #32]
  408f74:	b	408f7c <namehash@@Base+0x1e8>
  408f78:	ldp	x21, x22, [sp, #32]
  408f7c:	ldp	x19, x20, [sp, #16]
  408f80:	ldp	x29, x30, [sp], #48
  408f84:	ret

0000000000408f88 <ll_remember_index@@Base>:
  408f88:	stp	x29, x30, [sp, #-496]!
  408f8c:	mov	x29, sp
  408f90:	stp	x19, x20, [sp, #16]
  408f94:	mov	x19, x0
  408f98:	ldrh	w20, [x0, #4]
  408f9c:	sub	w0, w20, #0x10
  408fa0:	and	w0, w0, #0xffff
  408fa4:	cmp	w0, #0x1
  408fa8:	b.hi	4091bc <ll_remember_index@@Base+0x234>  // b.pmore
  408fac:	stp	x21, x22, [sp, #32]
  408fb0:	ldr	w21, [x19]
  408fb4:	cmp	w21, #0x1f
  408fb8:	b.ls	4091cc <ll_remember_index@@Base+0x244>  // b.plast
  408fbc:	ldr	w0, [x19, #20]
  408fc0:	bl	408cf0 <sprint_time64@@Base+0xdc>
  408fc4:	mov	x22, x0
  408fc8:	cmp	w20, #0x11
  408fcc:	b.eq	4090b8 <ll_remember_index@@Base+0x130>  // b.none
  408fd0:	stp	x23, x24, [sp, #48]
  408fd4:	add	x23, x19, #0x10
  408fd8:	mov	w4, #0xffff8000            	// #-32768
  408fdc:	sub	w3, w21, #0x20
  408fe0:	add	x2, x19, #0x20
  408fe4:	mov	w1, #0x35                  	// #53
  408fe8:	add	x0, sp, #0x40
  408fec:	bl	40d3d0 <parse_rtattr_flags@@Base>
  408ff0:	cbz	x22, 409174 <ll_remember_index@@Base+0x1ec>
  408ff4:	ldr	x0, [sp, #88]
  408ff8:	cbz	x0, 409070 <ll_remember_index@@Base+0xe8>
  408ffc:	add	x20, x0, #0x4
  409000:	ldr	w0, [x19, #24]
  409004:	str	w0, [x22, #32]
  409008:	mov	x1, x20
  40900c:	add	x0, x22, #0x40
  409010:	bl	405010 <strcmp@plt>
  409014:	cbz	w0, 409070 <ll_remember_index@@Base+0xe8>
  409018:	ldr	x0, [x22, #16]
  40901c:	ldr	x1, [x22, #24]
  409020:	str	x0, [x1]
  409024:	cbz	x0, 40902c <ll_remember_index@@Base+0xa4>
  409028:	str	x1, [x0, #8]
  40902c:	mov	x0, x20
  409030:	bl	408d94 <namehash@@Base>
  409034:	and	w1, w0, #0x3ff
  409038:	add	x3, x22, #0x10
  40903c:	and	x0, x0, #0x3ff
  409040:	adrp	x2, 422000 <memcpy@GLIBC_2.17>
  409044:	add	x2, x2, #0xd60
  409048:	ldr	x0, [x2, x0, lsl #3]
  40904c:	str	x0, [x22, #16]
  409050:	cbz	x0, 409058 <ll_remember_index@@Base+0xd0>
  409054:	str	x3, [x0, #8]
  409058:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40905c:	add	x2, x0, #0xd60
  409060:	mov	w0, w1
  409064:	str	x3, [x2, x0, lsl #3]
  409068:	add	x0, x2, x0, lsl #3
  40906c:	str	x0, [x22, #24]
  409070:	ldr	x21, [sp, #480]
  409074:	cbz	x21, 409104 <ll_remember_index@@Base+0x17c>
  409078:	ldr	x20, [x22, #48]
  40907c:	sub	x20, x20, #0x30
  409080:	ldrh	w24, [x21], #4
  409084:	sub	w24, w24, #0x4
  409088:	cmp	w24, #0x3
  40908c:	b.gt	409134 <ll_remember_index@@Base+0x1ac>
  409090:	mov	x0, x22
  409094:	bl	408d20 <sprint_time64@@Base+0x10c>
  409098:	add	x2, sp, #0x40
  40909c:	mov	x1, x23
  4090a0:	mov	x0, x22
  4090a4:	bl	408ee0 <namehash@@Base+0x14c>
  4090a8:	mov	w0, #0x0                   	// #0
  4090ac:	ldp	x21, x22, [sp, #32]
  4090b0:	ldp	x23, x24, [sp, #48]
  4090b4:	b	4091c0 <ll_remember_index@@Base+0x238>
  4090b8:	mov	w0, #0x0                   	// #0
  4090bc:	cbz	x22, 4091d8 <ll_remember_index@@Base+0x250>
  4090c0:	mov	x0, x22
  4090c4:	bl	408d20 <sprint_time64@@Base+0x10c>
  4090c8:	ldr	x0, [x22, #16]
  4090cc:	ldr	x1, [x22, #24]
  4090d0:	str	x0, [x1]
  4090d4:	cbz	x0, 4090dc <ll_remember_index@@Base+0x154>
  4090d8:	str	x1, [x0, #8]
  4090dc:	ldr	x0, [x22]
  4090e0:	ldr	x1, [x22, #8]
  4090e4:	str	x0, [x1]
  4090e8:	cbz	x0, 4090f0 <ll_remember_index@@Base+0x168>
  4090ec:	str	x1, [x0, #8]
  4090f0:	mov	x0, x22
  4090f4:	bl	405070 <free@plt>
  4090f8:	mov	w0, #0x0                   	// #0
  4090fc:	ldp	x21, x22, [sp, #32]
  409100:	b	4091c0 <ll_remember_index@@Base+0x238>
  409104:	mov	x0, x22
  409108:	bl	408d20 <sprint_time64@@Base+0x10c>
  40910c:	mov	w0, #0x0                   	// #0
  409110:	ldp	x21, x22, [sp, #32]
  409114:	ldp	x23, x24, [sp, #48]
  409118:	b	4091c0 <ll_remember_index@@Base+0x238>
  40911c:	add	w19, w19, #0x3
  409120:	and	w19, w19, #0xfffffffc
  409124:	sub	w24, w24, w19
  409128:	add	x21, x21, w19, uxtw
  40912c:	cmp	w24, #0x3
  409130:	b.le	409090 <ll_remember_index@@Base+0x108>
  409134:	ldrh	w19, [x21]
  409138:	cmp	w19, #0x3
  40913c:	b.ls	409090 <ll_remember_index@@Base+0x108>  // b.plast
  409140:	cmp	w24, w19
  409144:	b.lt	409090 <ll_remember_index@@Base+0x108>  // b.tstop
  409148:	ldrh	w0, [x21, #2]
  40914c:	cmp	w0, #0x35
  409150:	b.ne	40911c <ll_remember_index@@Base+0x194>  // b.any
  409154:	cbz	x20, 409090 <ll_remember_index@@Base+0x108>
  409158:	add	x1, x20, #0x40
  40915c:	add	x0, x21, #0x4
  409160:	bl	405010 <strcmp@plt>
  409164:	cbnz	w0, 409090 <ll_remember_index@@Base+0x108>
  409168:	ldr	x20, [x20, #48]
  40916c:	sub	x20, x20, #0x30
  409170:	b	40911c <ll_remember_index@@Base+0x194>
  409174:	ldr	x1, [sp, #88]
  409178:	mov	w0, #0x0                   	// #0
  40917c:	cbz	x1, 4091e0 <ll_remember_index@@Base+0x258>
  409180:	mov	x2, #0x0                   	// #0
  409184:	add	x1, x1, #0x4
  409188:	mov	x0, x23
  40918c:	bl	408dc0 <namehash@@Base+0x2c>
  409190:	mov	x3, x0
  409194:	mov	w0, #0x0                   	// #0
  409198:	cbz	x3, 4091ec <ll_remember_index@@Base+0x264>
  40919c:	add	x2, sp, #0x40
  4091a0:	mov	x1, x23
  4091a4:	mov	x0, x3
  4091a8:	bl	408ee0 <namehash@@Base+0x14c>
  4091ac:	mov	w0, #0x0                   	// #0
  4091b0:	ldp	x21, x22, [sp, #32]
  4091b4:	ldp	x23, x24, [sp, #48]
  4091b8:	b	4091c0 <ll_remember_index@@Base+0x238>
  4091bc:	mov	w0, #0x0                   	// #0
  4091c0:	ldp	x19, x20, [sp, #16]
  4091c4:	ldp	x29, x30, [sp], #496
  4091c8:	ret
  4091cc:	mov	w0, #0xffffffff            	// #-1
  4091d0:	ldp	x21, x22, [sp, #32]
  4091d4:	b	4091c0 <ll_remember_index@@Base+0x238>
  4091d8:	ldp	x21, x22, [sp, #32]
  4091dc:	b	4091c0 <ll_remember_index@@Base+0x238>
  4091e0:	ldp	x21, x22, [sp, #32]
  4091e4:	ldp	x23, x24, [sp, #48]
  4091e8:	b	4091c0 <ll_remember_index@@Base+0x238>
  4091ec:	ldp	x21, x22, [sp, #32]
  4091f0:	ldp	x23, x24, [sp, #48]
  4091f4:	b	4091c0 <ll_remember_index@@Base+0x238>
  4091f8:	sub	sp, sp, #0x480
  4091fc:	stp	x29, x30, [sp]
  409200:	mov	x29, sp
  409204:	stp	x19, x20, [sp, #16]
  409208:	mov	x19, x0
  40920c:	mov	w20, w1
  409210:	mov	x2, #0x420                 	// #1056
  409214:	mov	w1, #0x0                   	// #0
  409218:	add	x0, sp, #0x60
  40921c:	bl	404f00 <memset@plt>
  409220:	mov	w0, #0x20                  	// #32
  409224:	str	w0, [sp, #96]
  409228:	mov	w0, #0x12                  	// #18
  40922c:	strh	w0, [sp, #100]
  409230:	mov	w0, #0x1                   	// #1
  409234:	strh	w0, [sp, #102]
  409238:	str	w20, [sp, #116]
  40923c:	stp	xzr, xzr, [sp, #40]
  409240:	stp	xzr, xzr, [sp, #56]
  409244:	stp	xzr, xzr, [sp, #72]
  409248:	str	xzr, [sp, #88]
  40924c:	mov	w1, #0x0                   	// #0
  409250:	add	x0, sp, #0x28
  409254:	bl	40bb0c <rtnl_open@@Base>
  409258:	tbnz	w0, #31, 409304 <ll_remember_index@@Base+0x37c>
  40925c:	mov	w3, #0x9                   	// #9
  409260:	mov	w2, #0x1d                  	// #29
  409264:	mov	w1, #0x420                 	// #1056
  409268:	add	x0, sp, #0x60
  40926c:	bl	40cfa4 <addattr32@@Base>
  409270:	cbz	x19, 4092ac <ll_remember_index@@Base+0x324>
  409274:	mov	x0, x19
  409278:	bl	40724c <check_ifname@@Base>
  40927c:	cmp	w0, #0x0
  409280:	mov	w20, #0x3                   	// #3
  409284:	mov	w0, #0x35                  	// #53
  409288:	csel	w20, w20, w0, eq  // eq = none
  40928c:	mov	x0, x19
  409290:	bl	404d50 <strlen@plt>
  409294:	add	w4, w0, #0x1
  409298:	mov	x3, x19
  40929c:	mov	w2, w20
  4092a0:	mov	w1, #0x420                 	// #1056
  4092a4:	add	x0, sp, #0x60
  4092a8:	bl	40cea8 <addattr_l@@Base>
  4092ac:	add	x2, sp, #0x20
  4092b0:	add	x1, sp, #0x60
  4092b4:	add	x0, sp, #0x28
  4092b8:	bl	40c8d0 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  4092bc:	mov	w19, #0x0                   	// #0
  4092c0:	tbnz	w0, #31, 4092e8 <ll_remember_index@@Base+0x360>
  4092c4:	mov	x1, #0x0                   	// #0
  4092c8:	ldr	x0, [sp, #32]
  4092cc:	bl	408f88 <ll_remember_index@@Base>
  4092d0:	mov	w19, w0
  4092d4:	cbnz	w0, 4092e0 <ll_remember_index@@Base+0x358>
  4092d8:	ldr	x0, [sp, #32]
  4092dc:	ldr	w19, [x0, #20]
  4092e0:	ldr	x0, [sp, #32]
  4092e4:	bl	405070 <free@plt>
  4092e8:	add	x0, sp, #0x28
  4092ec:	bl	40b910 <rtnl_close@@Base>
  4092f0:	mov	w0, w19
  4092f4:	ldp	x19, x20, [sp, #16]
  4092f8:	ldp	x29, x30, [sp]
  4092fc:	add	sp, sp, #0x480
  409300:	ret
  409304:	mov	w19, #0x0                   	// #0
  409308:	b	4092f0 <ll_remember_index@@Base+0x368>

000000000040930c <ll_idx_n2a@@Base>:
  40930c:	stp	x29, x30, [sp, #-32]!
  409310:	mov	x29, sp
  409314:	str	x19, [sp, #16]
  409318:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  40931c:	add	x19, x19, #0xd38
  409320:	mov	w3, w0
  409324:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409328:	add	x2, x2, #0x190
  40932c:	mov	x1, #0x10                  	// #16
  409330:	mov	x0, x19
  409334:	bl	404e40 <snprintf@plt>
  409338:	mov	x0, x19
  40933c:	ldr	x19, [sp, #16]
  409340:	ldp	x29, x30, [sp], #32
  409344:	ret

0000000000409348 <ll_index_to_name@@Base>:
  409348:	cbnz	w0, 409358 <ll_index_to_name@@Base+0x10>
  40934c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409350:	add	x0, x0, #0x198
  409354:	ret
  409358:	stp	x29, x30, [sp, #-32]!
  40935c:	mov	x29, sp
  409360:	stp	x19, x20, [sp, #16]
  409364:	mov	w20, w0
  409368:	bl	408cf0 <sprint_time64@@Base+0xdc>
  40936c:	cbz	x0, 409380 <ll_index_to_name@@Base+0x38>
  409370:	add	x0, x0, #0x40
  409374:	ldp	x19, x20, [sp, #16]
  409378:	ldp	x29, x30, [sp], #32
  40937c:	ret
  409380:	mov	w1, w20
  409384:	mov	x0, #0x0                   	// #0
  409388:	bl	4091f8 <ll_remember_index@@Base+0x270>
  40938c:	cmp	w0, w20
  409390:	b.eq	4093bc <ll_index_to_name@@Base+0x74>  // b.none
  409394:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  409398:	add	x1, x1, #0xd38
  40939c:	add	x1, x1, #0x10
  4093a0:	mov	w0, w20
  4093a4:	bl	404ef0 <if_indextoname@plt>
  4093a8:	cbz	x0, 4093d4 <ll_index_to_name@@Base+0x8c>
  4093ac:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4093b0:	add	x0, x0, #0xd38
  4093b4:	add	x0, x0, #0x10
  4093b8:	b	409374 <ll_index_to_name@@Base+0x2c>
  4093bc:	mov	w0, w20
  4093c0:	bl	408cf0 <sprint_time64@@Base+0xdc>
  4093c4:	mov	x1, x0
  4093c8:	add	x0, x0, #0x40
  4093cc:	cbnz	x1, 409374 <ll_index_to_name@@Base+0x2c>
  4093d0:	b	409394 <ll_index_to_name@@Base+0x4c>
  4093d4:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  4093d8:	add	x19, x19, #0xd38
  4093dc:	add	x19, x19, #0x10
  4093e0:	mov	w3, w20
  4093e4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4093e8:	add	x2, x2, #0x190
  4093ec:	mov	x1, #0x10                  	// #16
  4093f0:	mov	x0, x19
  4093f4:	bl	404e40 <snprintf@plt>
  4093f8:	mov	x0, x19
  4093fc:	b	409374 <ll_index_to_name@@Base+0x2c>

0000000000409400 <ll_index_to_type@@Base>:
  409400:	cbz	w0, 409420 <ll_index_to_type@@Base+0x20>
  409404:	stp	x29, x30, [sp, #-16]!
  409408:	mov	x29, sp
  40940c:	bl	408cf0 <sprint_time64@@Base+0xdc>
  409410:	cbz	x0, 409428 <ll_index_to_type@@Base+0x28>
  409414:	ldrh	w0, [x0, #40]
  409418:	ldp	x29, x30, [sp], #16
  40941c:	ret
  409420:	mov	w0, #0xffffffff            	// #-1
  409424:	ret
  409428:	mov	w0, #0xffffffff            	// #-1
  40942c:	b	409418 <ll_index_to_type@@Base+0x18>

0000000000409430 <ll_index_to_flags@@Base>:
  409430:	cbnz	w0, 40943c <ll_index_to_flags@@Base+0xc>
  409434:	mov	w0, #0x0                   	// #0
  409438:	ret
  40943c:	stp	x29, x30, [sp, #-16]!
  409440:	mov	x29, sp
  409444:	bl	408cf0 <sprint_time64@@Base+0xdc>
  409448:	cbz	x0, 409458 <ll_index_to_flags@@Base+0x28>
  40944c:	ldr	w0, [x0, #32]
  409450:	ldp	x29, x30, [sp], #16
  409454:	ret
  409458:	mov	w0, #0xffffffff            	// #-1
  40945c:	b	409450 <ll_index_to_flags@@Base+0x20>

0000000000409460 <ll_name_to_index@@Base>:
  409460:	stp	x29, x30, [sp, #-48]!
  409464:	mov	x29, sp
  409468:	stp	x19, x20, [sp, #16]
  40946c:	mov	w20, #0x0                   	// #0
  409470:	cbz	x0, 4094f4 <ll_name_to_index@@Base+0x94>
  409474:	mov	x19, x0
  409478:	bl	408d94 <namehash@@Base>
  40947c:	and	x0, x0, #0x3ff
  409480:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  409484:	add	x1, x1, #0xd60
  409488:	ldr	x20, [x1, x0, lsl #3]
  40948c:	cbz	x20, 4094a8 <ll_name_to_index@@Base+0x48>
  409490:	mov	x1, x19
  409494:	add	x0, x20, #0x30
  409498:	bl	405010 <strcmp@plt>
  40949c:	cbz	w0, 4094f0 <ll_name_to_index@@Base+0x90>
  4094a0:	ldr	x20, [x20]
  4094a4:	cbnz	x20, 409490 <ll_name_to_index@@Base+0x30>
  4094a8:	mov	w1, #0x0                   	// #0
  4094ac:	mov	x0, x19
  4094b0:	bl	4091f8 <ll_remember_index@@Base+0x270>
  4094b4:	mov	w20, w0
  4094b8:	cbnz	w0, 4094f4 <ll_name_to_index@@Base+0x94>
  4094bc:	mov	x0, x19
  4094c0:	bl	405170 <if_nametoindex@plt>
  4094c4:	mov	w20, w0
  4094c8:	cbnz	w0, 4094f4 <ll_name_to_index@@Base+0x94>
  4094cc:	add	x2, sp, #0x2c
  4094d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4094d4:	add	x1, x1, #0x190
  4094d8:	mov	x0, x19
  4094dc:	bl	4051a0 <__isoc99_sscanf@plt>
  4094e0:	cmp	w0, #0x1
  4094e4:	ldr	w0, [sp, #44]
  4094e8:	csel	w20, w0, w20, eq  // eq = none
  4094ec:	b	4094f4 <ll_name_to_index@@Base+0x94>
  4094f0:	ldr	w20, [x20, #20]
  4094f4:	mov	w0, w20
  4094f8:	ldp	x19, x20, [sp, #16]
  4094fc:	ldp	x29, x30, [sp], #48
  409500:	ret

0000000000409504 <ll_drop_by_index@@Base>:
  409504:	stp	x29, x30, [sp, #-16]!
  409508:	mov	x29, sp
  40950c:	bl	408cf0 <sprint_time64@@Base+0xdc>
  409510:	cbz	x0, 409540 <ll_drop_by_index@@Base+0x3c>
  409514:	ldr	x1, [x0]
  409518:	ldr	x2, [x0, #8]
  40951c:	str	x1, [x2]
  409520:	cbz	x1, 409528 <ll_drop_by_index@@Base+0x24>
  409524:	str	x2, [x1, #8]
  409528:	ldr	x1, [x0, #16]
  40952c:	ldr	x2, [x0, #24]
  409530:	str	x1, [x2]
  409534:	cbz	x1, 40953c <ll_drop_by_index@@Base+0x38>
  409538:	str	x2, [x1, #8]
  40953c:	bl	405070 <free@plt>
  409540:	ldp	x29, x30, [sp], #16
  409544:	ret

0000000000409548 <ll_init_map@@Base>:
  409548:	stp	x29, x30, [sp, #-32]!
  40954c:	mov	x29, sp
  409550:	str	x19, [sp, #16]
  409554:	mov	x19, x0
  409558:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40955c:	ldr	w0, [x0, #3416]
  409560:	cbz	w0, 409570 <ll_init_map@@Base+0x28>
  409564:	ldr	x19, [sp, #16]
  409568:	ldp	x29, x30, [sp], #32
  40956c:	ret
  409570:	mov	w1, #0x0                   	// #0
  409574:	mov	x0, x19
  409578:	bl	40c070 <rtnl_linkdump_req@@Base>
  40957c:	tbnz	w0, #31, 4095ac <ll_init_map@@Base+0x64>
  409580:	mov	w3, #0x0                   	// #0
  409584:	mov	x2, #0x0                   	// #0
  409588:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x139b8>
  40958c:	ldr	x1, [x1, #4008]
  409590:	mov	x0, x19
  409594:	bl	40c4b8 <rtnl_dump_filter_nc@@Base>
  409598:	tbnz	w0, #31, 4095c0 <ll_init_map@@Base+0x78>
  40959c:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4095a0:	mov	w1, #0x1                   	// #1
  4095a4:	str	w1, [x0, #3416]
  4095a8:	b	409564 <ll_init_map@@Base+0x1c>
  4095ac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  4095b0:	add	x0, x0, #0x1a0
  4095b4:	bl	404d70 <perror@plt>
  4095b8:	mov	w0, #0x1                   	// #1
  4095bc:	bl	404d60 <exit@plt>
  4095c0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4095c4:	ldr	x0, [x0, #3992]
  4095c8:	ldr	x3, [x0]
  4095cc:	mov	x2, #0x10                  	// #16
  4095d0:	mov	x1, #0x1                   	// #1
  4095d4:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  4095d8:	add	x0, x0, #0xa80
  4095dc:	bl	4050d0 <fwrite@plt>
  4095e0:	mov	w0, #0x1                   	// #1
  4095e4:	bl	404d60 <exit@plt>

00000000004095e8 <ll_addr_n2a@@Base>:
  4095e8:	stp	x29, x30, [sp, #-80]!
  4095ec:	mov	x29, sp
  4095f0:	stp	x21, x22, [sp, #32]
  4095f4:	stp	x23, x24, [sp, #48]
  4095f8:	stp	x25, x26, [sp, #64]
  4095fc:	mov	x22, x0
  409600:	mov	w21, w1
  409604:	mov	x26, x3
  409608:	mov	w23, w4
  40960c:	cmp	w1, #0x4
  409610:	b.eq	4096c8 <ll_addr_n2a@@Base+0xe0>  // b.none
  409614:	cmp	w1, #0x10
  409618:	b.ne	40962c <ll_addr_n2a@@Base+0x44>  // b.any
  40961c:	cmp	w2, #0x301
  409620:	mov	w0, #0x337                 	// #823
  409624:	ccmp	w2, w0, #0x4, ne  // ne = any
  409628:	b.eq	4096f8 <ll_addr_n2a@@Base+0x110>  // b.none
  40962c:	sxtw	x24, w23
  409630:	ldrb	w3, [x22]
  409634:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409638:	add	x2, x2, #0x0
  40963c:	mov	x1, x24
  409640:	mov	x0, x26
  409644:	bl	404e40 <snprintf@plt>
  409648:	cmp	w21, #0x1
  40964c:	ccmp	w23, #0x2, #0x4, gt
  409650:	b.le	4096b0 <ll_addr_n2a@@Base+0xc8>
  409654:	stp	x19, x20, [sp, #16]
  409658:	add	x20, x26, #0x2
  40965c:	mov	x19, #0x2                   	// #2
  409660:	sub	x22, x22, #0x1
  409664:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409668:	add	x25, x25, #0x1c0
  40966c:	add	x24, x26, x24
  409670:	ldrb	w3, [x22, x19]
  409674:	mov	x2, x25
  409678:	sub	x1, x24, x20
  40967c:	mov	x0, x20
  409680:	bl	404e40 <snprintf@plt>
  409684:	add	w2, w19, w19, lsl #1
  409688:	sub	w2, w2, #0x1
  40968c:	cmp	w23, w2
  409690:	cset	w1, gt
  409694:	cmp	w21, w19
  409698:	cset	w0, gt
  40969c:	add	x19, x19, #0x1
  4096a0:	add	x20, x20, #0x3
  4096a4:	tst	w1, w0
  4096a8:	b.ne	409670 <ll_addr_n2a@@Base+0x88>  // b.any
  4096ac:	ldp	x19, x20, [sp, #16]
  4096b0:	mov	x0, x26
  4096b4:	ldp	x21, x22, [sp, #32]
  4096b8:	ldp	x23, x24, [sp, #48]
  4096bc:	ldp	x25, x26, [sp, #64]
  4096c0:	ldp	x29, x30, [sp], #80
  4096c4:	ret
  4096c8:	and	w0, w2, #0xfffffff7
  4096cc:	cmp	w0, #0x300
  4096d0:	mov	w0, #0x30a                 	// #778
  4096d4:	ccmp	w2, w0, #0x4, ne  // ne = any
  4096d8:	b.ne	40962c <ll_addr_n2a@@Base+0x44>  // b.any
  4096dc:	mov	w3, w4
  4096e0:	mov	x2, x26
  4096e4:	mov	x1, x22
  4096e8:	mov	w0, #0x2                   	// #2
  4096ec:	bl	405270 <inet_ntop@plt>
  4096f0:	mov	x26, x0
  4096f4:	b	4096b0 <ll_addr_n2a@@Base+0xc8>
  4096f8:	mov	w3, w4
  4096fc:	mov	x2, x26
  409700:	mov	x1, x22
  409704:	mov	w0, #0xa                   	// #10
  409708:	bl	405270 <inet_ntop@plt>
  40970c:	mov	x26, x0
  409710:	b	4096b0 <ll_addr_n2a@@Base+0xc8>

0000000000409714 <ll_addr_a2n@@Base>:
  409714:	stp	x29, x30, [sp, #-368]!
  409718:	mov	x29, sp
  40971c:	stp	x21, x22, [sp, #32]
  409720:	stp	x23, x24, [sp, #48]
  409724:	stp	x25, x26, [sp, #64]
  409728:	mov	x25, x0
  40972c:	mov	w23, w1
  409730:	mov	x21, x2
  409734:	mov	w1, #0x2e                  	// #46
  409738:	mov	x0, x2
  40973c:	bl	4050b0 <strchr@plt>
  409740:	cbz	x0, 409858 <ll_addr_a2n@@Base+0x144>
  409744:	mov	w2, #0x2                   	// #2
  409748:	mov	x1, x21
  40974c:	add	x0, sp, #0x68
  409750:	bl	406bf8 <get_addr_1@@Base>
  409754:	cbnz	w0, 409774 <ll_addr_a2n@@Base+0x60>
  409758:	mov	w0, #0xffffffff            	// #-1
  40975c:	cmp	w23, #0x3
  409760:	b.le	409894 <ll_addr_a2n@@Base+0x180>
  409764:	ldr	w0, [sp, #112]
  409768:	str	w0, [x25]
  40976c:	mov	w0, #0x4                   	// #4
  409770:	b	409894 <ll_addr_a2n@@Base+0x180>
  409774:	mov	x2, x21
  409778:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40977c:	add	x1, x1, #0x1c8
  409780:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409784:	ldr	x0, [x0, #3992]
  409788:	ldr	x0, [x0]
  40978c:	bl	405250 <fprintf@plt>
  409790:	mov	w0, #0xffffffff            	// #-1
  409794:	b	409894 <ll_addr_a2n@@Base+0x180>
  409798:	mov	x2, x27
  40979c:	mov	x1, x26
  4097a0:	mov	x0, x21
  4097a4:	bl	4051a0 <__isoc99_sscanf@plt>
  4097a8:	cmp	w0, #0x1
  4097ac:	b.ne	409800 <ll_addr_a2n@@Base+0xec>  // b.any
  4097b0:	ldr	w0, [sp, #104]
  4097b4:	cmp	w0, #0xff
  4097b8:	b.hi	40982c <ll_addr_a2n@@Base+0x118>  // b.pmore
  4097bc:	strb	w0, [x25, x20]
  4097c0:	cbz	x19, 409888 <ll_addr_a2n@@Base+0x174>
  4097c4:	add	w22, w24, #0x1
  4097c8:	add	x0, x20, #0x1
  4097cc:	cmp	x20, x23
  4097d0:	b.eq	40984c <ll_addr_a2n@@Base+0x138>  // b.none
  4097d4:	mov	x20, x0
  4097d8:	mov	x21, x19
  4097dc:	mov	w24, w20
  4097e0:	mov	w22, w20
  4097e4:	mov	w1, w28
  4097e8:	mov	x0, x21
  4097ec:	bl	4050b0 <strchr@plt>
  4097f0:	mov	x19, x0
  4097f4:	cbz	x0, 409798 <ll_addr_a2n@@Base+0x84>
  4097f8:	strb	wzr, [x19], #1
  4097fc:	b	409798 <ll_addr_a2n@@Base+0x84>
  409800:	mov	x2, x21
  409804:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409808:	add	x1, x1, #0x1c8
  40980c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409810:	ldr	x0, [x0, #3992]
  409814:	ldr	x0, [x0]
  409818:	bl	405250 <fprintf@plt>
  40981c:	mov	w0, #0xffffffff            	// #-1
  409820:	ldp	x19, x20, [sp, #16]
  409824:	ldp	x27, x28, [sp, #80]
  409828:	b	409894 <ll_addr_a2n@@Base+0x180>
  40982c:	mov	x2, x21
  409830:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409834:	add	x1, x1, #0x1c8
  409838:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40983c:	ldr	x0, [x0, #3992]
  409840:	ldr	x0, [x0]
  409844:	bl	405250 <fprintf@plt>
  409848:	b	40981c <ll_addr_a2n@@Base+0x108>
  40984c:	ldp	x19, x20, [sp, #16]
  409850:	ldp	x27, x28, [sp, #80]
  409854:	b	409890 <ll_addr_a2n@@Base+0x17c>
  409858:	mov	w22, #0x0                   	// #0
  40985c:	cmp	w23, #0x0
  409860:	b.le	409890 <ll_addr_a2n@@Base+0x17c>
  409864:	stp	x19, x20, [sp, #16]
  409868:	stp	x27, x28, [sp, #80]
  40986c:	sub	w23, w23, #0x1
  409870:	mov	x20, #0x0                   	// #0
  409874:	mov	w28, #0x3a                  	// #58
  409878:	add	x27, sp, #0x68
  40987c:	adrp	x26, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409880:	add	x26, x26, #0x1e8
  409884:	b	4097dc <ll_addr_a2n@@Base+0xc8>
  409888:	ldp	x19, x20, [sp, #16]
  40988c:	ldp	x27, x28, [sp, #80]
  409890:	add	w0, w22, #0x1
  409894:	ldp	x21, x22, [sp, #32]
  409898:	ldp	x23, x24, [sp, #48]
  40989c:	ldp	x25, x26, [sp, #64]
  4098a0:	ldp	x29, x30, [sp], #368
  4098a4:	ret
  4098a8:	cbnz	w0, 4098b0 <ll_addr_a2n@@Base+0x19c>
  4098ac:	ret
  4098b0:	stp	x29, x30, [sp, #-32]!
  4098b4:	mov	x29, sp
  4098b8:	str	x19, [sp, #16]
  4098bc:	and	w19, w1, #0xff
  4098c0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  4098c4:	ldr	x0, [x0, #4016]
  4098c8:	ldr	x0, [x0]
  4098cc:	bl	40ab90 <jsonw_new@@Base>
  4098d0:	adrp	x1, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4098d4:	str	x0, [x1, #3424]
  4098d8:	cbz	x0, 4098fc <ll_addr_a2n@@Base+0x1e8>
  4098dc:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x139b8>
  4098e0:	ldr	x1, [x1, #4056]
  4098e4:	ldr	w1, [x1]
  4098e8:	cbnz	w1, 409910 <ll_addr_a2n@@Base+0x1fc>
  4098ec:	cbnz	w19, 40991c <ll_addr_a2n@@Base+0x208>
  4098f0:	ldr	x19, [sp, #16]
  4098f4:	ldp	x29, x30, [sp], #32
  4098f8:	ret
  4098fc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409900:	add	x0, x0, #0x1f0
  409904:	bl	404d70 <perror@plt>
  409908:	mov	w0, #0x1                   	// #1
  40990c:	bl	404d60 <exit@plt>
  409910:	mov	w1, #0x1                   	// #1
  409914:	bl	40ac34 <jsonw_pretty@@Base>
  409918:	b	4098ec <ll_addr_a2n@@Base+0x1d8>
  40991c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409920:	ldr	x0, [x0, #3424]
  409924:	bl	40ada8 <jsonw_start_array@@Base>
  409928:	b	4098f0 <ll_addr_a2n@@Base+0x1dc>

000000000040992c <new_json_obj@@Base>:
  40992c:	stp	x29, x30, [sp, #-16]!
  409930:	mov	x29, sp
  409934:	mov	w1, #0x1                   	// #1
  409938:	bl	4098a8 <ll_addr_a2n@@Base+0x194>
  40993c:	ldp	x29, x30, [sp], #16
  409940:	ret

0000000000409944 <delete_json_obj@@Base>:
  409944:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409948:	ldr	x0, [x0, #3424]
  40994c:	cbz	x0, 409970 <delete_json_obj@@Base+0x2c>
  409950:	stp	x29, x30, [sp, #-16]!
  409954:	mov	x29, sp
  409958:	bl	40adfc <jsonw_end_array@@Base>
  40995c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409960:	add	x0, x0, #0xd60
  409964:	bl	40abc8 <jsonw_destroy@@Base>
  409968:	ldp	x29, x30, [sp], #16
  40996c:	ret
  409970:	ret

0000000000409974 <new_json_obj_plain@@Base>:
  409974:	stp	x29, x30, [sp, #-16]!
  409978:	mov	x29, sp
  40997c:	mov	w1, #0x0                   	// #0
  409980:	bl	4098a8 <ll_addr_a2n@@Base+0x194>
  409984:	ldp	x29, x30, [sp], #16
  409988:	ret

000000000040998c <delete_json_obj_plain@@Base>:
  40998c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409990:	ldr	x0, [x0, #3424]
  409994:	cbz	x0, 4099b4 <delete_json_obj_plain@@Base+0x28>
  409998:	stp	x29, x30, [sp, #-16]!
  40999c:	mov	x29, sp
  4099a0:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4099a4:	add	x0, x0, #0xd60
  4099a8:	bl	40abc8 <jsonw_destroy@@Base>
  4099ac:	ldp	x29, x30, [sp], #16
  4099b0:	ret
  4099b4:	ret

00000000004099b8 <is_json_context@@Base>:
  4099b8:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4099bc:	ldr	x0, [x0, #3424]
  4099c0:	cmp	x0, #0x0
  4099c4:	cset	w0, ne  // ne = any
  4099c8:	ret

00000000004099cc <get_json_writer@@Base>:
  4099cc:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4099d0:	ldr	x0, [x0, #3424]
  4099d4:	ret

00000000004099d8 <open_json_object@@Base>:
  4099d8:	mov	x1, x0
  4099dc:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4099e0:	ldr	x0, [x0, #3424]
  4099e4:	cbz	x0, 409a0c <open_json_object@@Base+0x34>
  4099e8:	stp	x29, x30, [sp, #-16]!
  4099ec:	mov	x29, sp
  4099f0:	cbz	x1, 4099f8 <open_json_object@@Base+0x20>
  4099f4:	bl	40ac3c <jsonw_name@@Base>
  4099f8:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4099fc:	ldr	x0, [x0, #3424]
  409a00:	bl	40ad54 <jsonw_start_object@@Base>
  409a04:	ldp	x29, x30, [sp], #16
  409a08:	ret
  409a0c:	ret

0000000000409a10 <close_json_object@@Base>:
  409a10:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409a14:	ldr	x0, [x0, #3424]
  409a18:	cbz	x0, 409a30 <close_json_object@@Base+0x20>
  409a1c:	stp	x29, x30, [sp, #-16]!
  409a20:	mov	x29, sp
  409a24:	bl	40ad90 <jsonw_end_object@@Base>
  409a28:	ldp	x29, x30, [sp], #16
  409a2c:	ret
  409a30:	ret

0000000000409a34 <open_json_array@@Base>:
  409a34:	stp	x29, x30, [sp, #-16]!
  409a38:	mov	x29, sp
  409a3c:	tst	w0, #0x6
  409a40:	b.eq	409a6c <open_json_array@@Base+0x38>  // b.none
  409a44:	adrp	x2, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409a48:	ldr	x2, [x2, #3424]
  409a4c:	cbz	x2, 409a80 <open_json_array@@Base+0x4c>
  409a50:	cbz	x1, 409a5c <open_json_array@@Base+0x28>
  409a54:	mov	x0, x2
  409a58:	bl	40ac3c <jsonw_name@@Base>
  409a5c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409a60:	ldr	x0, [x0, #3424]
  409a64:	bl	40ada8 <jsonw_start_array@@Base>
  409a68:	b	409a78 <open_json_array@@Base+0x44>
  409a6c:	adrp	x2, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409a70:	ldr	x2, [x2, #3424]
  409a74:	cbz	x2, 409a80 <open_json_array@@Base+0x4c>
  409a78:	ldp	x29, x30, [sp], #16
  409a7c:	ret
  409a80:	mov	w2, #0x5                   	// #5
  409a84:	tst	w0, w2
  409a88:	b.eq	409a78 <open_json_array@@Base+0x44>  // b.none
  409a8c:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  409a90:	add	x0, x0, #0xeb0
  409a94:	bl	4051e0 <printf@plt>
  409a98:	b	409a78 <open_json_array@@Base+0x44>

0000000000409a9c <close_json_array@@Base>:
  409a9c:	stp	x29, x30, [sp, #-16]!
  409aa0:	mov	x29, sp
  409aa4:	mov	w2, w0
  409aa8:	tst	w0, #0x6
  409aac:	b.eq	409ac4 <close_json_array@@Base+0x28>  // b.none
  409ab0:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409ab4:	ldr	x0, [x0, #3424]
  409ab8:	cbz	x0, 409ad8 <close_json_array@@Base+0x3c>
  409abc:	bl	40adfc <jsonw_end_array@@Base>
  409ac0:	b	409ad0 <close_json_array@@Base+0x34>
  409ac4:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409ac8:	ldr	x0, [x0, #3424]
  409acc:	cbz	x0, 409ad8 <close_json_array@@Base+0x3c>
  409ad0:	ldp	x29, x30, [sp], #16
  409ad4:	ret
  409ad8:	mov	w0, #0x5                   	// #5
  409adc:	tst	w2, w0
  409ae0:	b.eq	409ad0 <close_json_array@@Base+0x34>  // b.none
  409ae4:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  409ae8:	add	x0, x0, #0xeb0
  409aec:	bl	4051e0 <printf@plt>
  409af0:	b	409ad0 <close_json_array@@Base+0x34>

0000000000409af4 <print_color_int@@Base>:
  409af4:	stp	x29, x30, [sp, #-16]!
  409af8:	mov	x29, sp
  409afc:	mov	w5, w0
  409b00:	mov	x6, x2
  409b04:	mov	x2, x3
  409b08:	tst	w0, #0x6
  409b0c:	b.eq	409b3c <print_color_int@@Base+0x48>  // b.none
  409b10:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409b14:	ldr	x0, [x0, #3424]
  409b18:	cbz	x0, 409b50 <print_color_int@@Base+0x5c>
  409b1c:	cbz	x6, 409b30 <print_color_int@@Base+0x3c>
  409b20:	mov	w2, w4
  409b24:	mov	x1, x6
  409b28:	bl	40b1ec <jsonw_int_field@@Base>
  409b2c:	b	409b48 <print_color_int@@Base+0x54>
  409b30:	mov	w1, w4
  409b34:	bl	40afc4 <jsonw_int@@Base>
  409b38:	b	409b48 <print_color_int@@Base+0x54>
  409b3c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409b40:	ldr	x0, [x0, #3424]
  409b44:	cbz	x0, 409b50 <print_color_int@@Base+0x5c>
  409b48:	ldp	x29, x30, [sp], #16
  409b4c:	ret
  409b50:	mov	w0, #0x5                   	// #5
  409b54:	tst	w5, w0
  409b58:	b.eq	409b48 <print_color_int@@Base+0x54>  // b.none
  409b5c:	mov	w3, w4
  409b60:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409b64:	ldr	x0, [x0, #4016]
  409b68:	ldr	x0, [x0]
  409b6c:	bl	40a518 <color_fprintf@@Base>
  409b70:	b	409b48 <print_color_int@@Base+0x54>

0000000000409b74 <print_color_s64@@Base>:
  409b74:	stp	x29, x30, [sp, #-16]!
  409b78:	mov	x29, sp
  409b7c:	mov	w5, w0
  409b80:	mov	x6, x2
  409b84:	mov	x2, x3
  409b88:	tst	w0, #0x6
  409b8c:	b.eq	409bbc <print_color_s64@@Base+0x48>  // b.none
  409b90:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409b94:	ldr	x0, [x0, #3424]
  409b98:	cbz	x0, 409bd0 <print_color_s64@@Base+0x5c>
  409b9c:	cbz	x6, 409bb0 <print_color_s64@@Base+0x3c>
  409ba0:	mov	x2, x4
  409ba4:	mov	x1, x6
  409ba8:	bl	40b21c <jsonw_s64_field@@Base>
  409bac:	b	409bc8 <print_color_s64@@Base+0x54>
  409bb0:	mov	x1, x4
  409bb4:	bl	40afe4 <jsonw_s64@@Base>
  409bb8:	b	409bc8 <print_color_s64@@Base+0x54>
  409bbc:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409bc0:	ldr	x0, [x0, #3424]
  409bc4:	cbz	x0, 409bd0 <print_color_s64@@Base+0x5c>
  409bc8:	ldp	x29, x30, [sp], #16
  409bcc:	ret
  409bd0:	mov	w0, #0x5                   	// #5
  409bd4:	tst	w5, w0
  409bd8:	b.eq	409bc8 <print_color_s64@@Base+0x54>  // b.none
  409bdc:	mov	x3, x4
  409be0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409be4:	ldr	x0, [x0, #4016]
  409be8:	ldr	x0, [x0]
  409bec:	bl	40a518 <color_fprintf@@Base>
  409bf0:	b	409bc8 <print_color_s64@@Base+0x54>

0000000000409bf4 <print_color_hhu@@Base>:
  409bf4:	stp	x29, x30, [sp, #-16]!
  409bf8:	mov	x29, sp
  409bfc:	mov	w5, w0
  409c00:	mov	w6, w1
  409c04:	mov	x1, x2
  409c08:	mov	x2, x3
  409c0c:	and	w3, w4, #0xff
  409c10:	tst	w0, #0x6
  409c14:	b.eq	409c40 <print_color_hhu@@Base+0x4c>  // b.none
  409c18:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409c1c:	ldr	x0, [x0, #3424]
  409c20:	cbz	x0, 409c54 <print_color_hhu@@Base+0x60>
  409c24:	cbz	x1, 409c34 <print_color_hhu@@Base+0x40>
  409c28:	mov	w2, w3
  409c2c:	bl	40b12c <jsonw_hhu_field@@Base>
  409c30:	b	409c4c <print_color_hhu@@Base+0x58>
  409c34:	mov	w1, w3
  409c38:	bl	40aee4 <jsonw_hhu@@Base>
  409c3c:	b	409c4c <print_color_hhu@@Base+0x58>
  409c40:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409c44:	ldr	x0, [x0, #3424]
  409c48:	cbz	x0, 409c54 <print_color_hhu@@Base+0x60>
  409c4c:	ldp	x29, x30, [sp], #16
  409c50:	ret
  409c54:	mov	w0, #0x5                   	// #5
  409c58:	tst	w5, w0
  409c5c:	b.eq	409c4c <print_color_hhu@@Base+0x58>  // b.none
  409c60:	mov	w1, w6
  409c64:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409c68:	ldr	x0, [x0, #4016]
  409c6c:	ldr	x0, [x0]
  409c70:	bl	40a518 <color_fprintf@@Base>
  409c74:	b	409c4c <print_color_hhu@@Base+0x58>

0000000000409c78 <print_color_hu@@Base>:
  409c78:	stp	x29, x30, [sp, #-16]!
  409c7c:	mov	x29, sp
  409c80:	mov	w5, w0
  409c84:	mov	w6, w1
  409c88:	mov	x1, x2
  409c8c:	mov	x2, x3
  409c90:	and	w3, w4, #0xffff
  409c94:	tst	w0, #0x6
  409c98:	b.eq	409cc4 <print_color_hu@@Base+0x4c>  // b.none
  409c9c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409ca0:	ldr	x0, [x0, #3424]
  409ca4:	cbz	x0, 409cd8 <print_color_hu@@Base+0x60>
  409ca8:	cbz	x1, 409cb8 <print_color_hu@@Base+0x40>
  409cac:	mov	w2, w3
  409cb0:	bl	40b15c <jsonw_hu_field@@Base>
  409cb4:	b	409cd0 <print_color_hu@@Base+0x58>
  409cb8:	mov	w1, w3
  409cbc:	bl	40af04 <jsonw_hu@@Base>
  409cc0:	b	409cd0 <print_color_hu@@Base+0x58>
  409cc4:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409cc8:	ldr	x0, [x0, #3424]
  409ccc:	cbz	x0, 409cd8 <print_color_hu@@Base+0x60>
  409cd0:	ldp	x29, x30, [sp], #16
  409cd4:	ret
  409cd8:	mov	w0, #0x5                   	// #5
  409cdc:	tst	w5, w0
  409ce0:	b.eq	409cd0 <print_color_hu@@Base+0x58>  // b.none
  409ce4:	mov	w1, w6
  409ce8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409cec:	ldr	x0, [x0, #4016]
  409cf0:	ldr	x0, [x0]
  409cf4:	bl	40a518 <color_fprintf@@Base>
  409cf8:	b	409cd0 <print_color_hu@@Base+0x58>

0000000000409cfc <print_color_uint@@Base>:
  409cfc:	stp	x29, x30, [sp, #-16]!
  409d00:	mov	x29, sp
  409d04:	mov	w5, w0
  409d08:	mov	x6, x2
  409d0c:	mov	x2, x3
  409d10:	tst	w0, #0x6
  409d14:	b.eq	409d44 <print_color_uint@@Base+0x48>  // b.none
  409d18:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409d1c:	ldr	x0, [x0, #3424]
  409d20:	cbz	x0, 409d58 <print_color_uint@@Base+0x5c>
  409d24:	cbz	x6, 409d38 <print_color_uint@@Base+0x3c>
  409d28:	mov	w2, w4
  409d2c:	mov	x1, x6
  409d30:	bl	40b09c <jsonw_uint_field@@Base>
  409d34:	b	409d50 <print_color_uint@@Base+0x54>
  409d38:	mov	w1, w4
  409d3c:	bl	40af24 <jsonw_uint@@Base>
  409d40:	b	409d50 <print_color_uint@@Base+0x54>
  409d44:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409d48:	ldr	x0, [x0, #3424]
  409d4c:	cbz	x0, 409d58 <print_color_uint@@Base+0x5c>
  409d50:	ldp	x29, x30, [sp], #16
  409d54:	ret
  409d58:	mov	w0, #0x5                   	// #5
  409d5c:	tst	w5, w0
  409d60:	b.eq	409d50 <print_color_uint@@Base+0x54>  // b.none
  409d64:	mov	w3, w4
  409d68:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409d6c:	ldr	x0, [x0, #4016]
  409d70:	ldr	x0, [x0]
  409d74:	bl	40a518 <color_fprintf@@Base>
  409d78:	b	409d50 <print_color_uint@@Base+0x54>

0000000000409d7c <print_color_u64@@Base>:
  409d7c:	stp	x29, x30, [sp, #-16]!
  409d80:	mov	x29, sp
  409d84:	mov	w5, w0
  409d88:	mov	x6, x2
  409d8c:	mov	x2, x3
  409d90:	tst	w0, #0x6
  409d94:	b.eq	409dc4 <print_color_u64@@Base+0x48>  // b.none
  409d98:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409d9c:	ldr	x0, [x0, #3424]
  409da0:	cbz	x0, 409dd8 <print_color_u64@@Base+0x5c>
  409da4:	cbz	x6, 409db8 <print_color_u64@@Base+0x3c>
  409da8:	mov	x2, x4
  409dac:	mov	x1, x6
  409db0:	bl	40b0cc <jsonw_u64_field@@Base>
  409db4:	b	409dd0 <print_color_u64@@Base+0x54>
  409db8:	mov	x1, x4
  409dbc:	bl	40af44 <jsonw_u64@@Base>
  409dc0:	b	409dd0 <print_color_u64@@Base+0x54>
  409dc4:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409dc8:	ldr	x0, [x0, #3424]
  409dcc:	cbz	x0, 409dd8 <print_color_u64@@Base+0x5c>
  409dd0:	ldp	x29, x30, [sp], #16
  409dd4:	ret
  409dd8:	mov	w0, #0x5                   	// #5
  409ddc:	tst	w5, w0
  409de0:	b.eq	409dd0 <print_color_u64@@Base+0x54>  // b.none
  409de4:	mov	x3, x4
  409de8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409dec:	ldr	x0, [x0, #4016]
  409df0:	ldr	x0, [x0]
  409df4:	bl	40a518 <color_fprintf@@Base>
  409df8:	b	409dd0 <print_color_u64@@Base+0x54>

0000000000409dfc <print_color_luint@@Base>:
  409dfc:	stp	x29, x30, [sp, #-16]!
  409e00:	mov	x29, sp
  409e04:	mov	w5, w0
  409e08:	mov	x6, x2
  409e0c:	mov	x2, x3
  409e10:	tst	w0, #0x6
  409e14:	b.eq	409e44 <print_color_luint@@Base+0x48>  // b.none
  409e18:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409e1c:	ldr	x0, [x0, #3424]
  409e20:	cbz	x0, 409e58 <print_color_luint@@Base+0x5c>
  409e24:	cbz	x6, 409e38 <print_color_luint@@Base+0x3c>
  409e28:	mov	x2, x4
  409e2c:	mov	x1, x6
  409e30:	bl	40b18c <jsonw_luint_field@@Base>
  409e34:	b	409e50 <print_color_luint@@Base+0x54>
  409e38:	mov	x1, x4
  409e3c:	bl	40af84 <jsonw_luint@@Base>
  409e40:	b	409e50 <print_color_luint@@Base+0x54>
  409e44:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409e48:	ldr	x0, [x0, #3424]
  409e4c:	cbz	x0, 409e58 <print_color_luint@@Base+0x5c>
  409e50:	ldp	x29, x30, [sp], #16
  409e54:	ret
  409e58:	mov	w0, #0x5                   	// #5
  409e5c:	tst	w5, w0
  409e60:	b.eq	409e50 <print_color_luint@@Base+0x54>  // b.none
  409e64:	mov	x3, x4
  409e68:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409e6c:	ldr	x0, [x0, #4016]
  409e70:	ldr	x0, [x0]
  409e74:	bl	40a518 <color_fprintf@@Base>
  409e78:	b	409e50 <print_color_luint@@Base+0x54>

0000000000409e7c <print_color_lluint@@Base>:
  409e7c:	stp	x29, x30, [sp, #-16]!
  409e80:	mov	x29, sp
  409e84:	mov	w5, w0
  409e88:	mov	x6, x2
  409e8c:	mov	x2, x3
  409e90:	tst	w0, #0x6
  409e94:	b.eq	409ec4 <print_color_lluint@@Base+0x48>  // b.none
  409e98:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409e9c:	ldr	x0, [x0, #3424]
  409ea0:	cbz	x0, 409ed8 <print_color_lluint@@Base+0x5c>
  409ea4:	cbz	x6, 409eb8 <print_color_lluint@@Base+0x3c>
  409ea8:	mov	x2, x4
  409eac:	mov	x1, x6
  409eb0:	bl	40b1bc <jsonw_lluint_field@@Base>
  409eb4:	b	409ed0 <print_color_lluint@@Base+0x54>
  409eb8:	mov	x1, x4
  409ebc:	bl	40afa4 <jsonw_lluint@@Base>
  409ec0:	b	409ed0 <print_color_lluint@@Base+0x54>
  409ec4:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409ec8:	ldr	x0, [x0, #3424]
  409ecc:	cbz	x0, 409ed8 <print_color_lluint@@Base+0x5c>
  409ed0:	ldp	x29, x30, [sp], #16
  409ed4:	ret
  409ed8:	mov	w0, #0x5                   	// #5
  409edc:	tst	w5, w0
  409ee0:	b.eq	409ed0 <print_color_lluint@@Base+0x54>  // b.none
  409ee4:	mov	x3, x4
  409ee8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409eec:	ldr	x0, [x0, #4016]
  409ef0:	ldr	x0, [x0]
  409ef4:	bl	40a518 <color_fprintf@@Base>
  409ef8:	b	409ed0 <print_color_lluint@@Base+0x54>

0000000000409efc <print_color_float@@Base>:
  409efc:	stp	x29, x30, [sp, #-16]!
  409f00:	mov	x29, sp
  409f04:	mov	w4, w0
  409f08:	tst	w0, #0x6
  409f0c:	b.eq	409f34 <print_color_float@@Base+0x38>  // b.none
  409f10:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409f14:	ldr	x0, [x0, #3424]
  409f18:	cbz	x0, 409f48 <print_color_float@@Base+0x4c>
  409f1c:	cbz	x2, 409f2c <print_color_float@@Base+0x30>
  409f20:	mov	x1, x2
  409f24:	bl	40b064 <jsonw_float_field@@Base>
  409f28:	b	409f40 <print_color_float@@Base+0x44>
  409f2c:	bl	40aec8 <jsonw_float@@Base>
  409f30:	b	409f40 <print_color_float@@Base+0x44>
  409f34:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409f38:	ldr	x0, [x0, #3424]
  409f3c:	cbz	x0, 409f48 <print_color_float@@Base+0x4c>
  409f40:	ldp	x29, x30, [sp], #16
  409f44:	ret
  409f48:	mov	w0, #0x5                   	// #5
  409f4c:	tst	w4, w0
  409f50:	b.eq	409f40 <print_color_float@@Base+0x44>  // b.none
  409f54:	mov	x2, x3
  409f58:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  409f5c:	ldr	x0, [x0, #4016]
  409f60:	ldr	x0, [x0]
  409f64:	bl	40a518 <color_fprintf@@Base>
  409f68:	b	409f40 <print_color_float@@Base+0x44>

0000000000409f6c <print_uint_name_value@@Base>:
  409f6c:	stp	x29, x30, [sp, #-112]!
  409f70:	mov	x29, sp
  409f74:	stp	x19, x20, [sp, #16]
  409f78:	str	x21, [sp, #32]
  409f7c:	mov	x19, x0
  409f80:	mov	w21, w1
  409f84:	add	x20, sp, #0x30
  409f88:	mov	x3, x0
  409f8c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  409f90:	add	x2, x2, #0x200
  409f94:	mov	x1, #0x40                  	// #64
  409f98:	mov	x0, x20
  409f9c:	bl	404e40 <snprintf@plt>
  409fa0:	mov	w4, w21
  409fa4:	mov	x3, x20
  409fa8:	mov	x2, x19
  409fac:	mov	w1, #0x6                   	// #6
  409fb0:	mov	w0, #0x4                   	// #4
  409fb4:	bl	409cfc <print_color_uint@@Base>
  409fb8:	ldp	x19, x20, [sp, #16]
  409fbc:	ldr	x21, [sp, #32]
  409fc0:	ldp	x29, x30, [sp], #112
  409fc4:	ret

0000000000409fc8 <print_color_string@@Base>:
  409fc8:	stp	x29, x30, [sp, #-16]!
  409fcc:	mov	x29, sp
  409fd0:	mov	w5, w0
  409fd4:	mov	w6, w1
  409fd8:	mov	x1, x2
  409fdc:	mov	x2, x3
  409fe0:	tst	w0, #0x6
  409fe4:	b.eq	40a02c <print_color_string@@Base+0x64>  // b.none
  409fe8:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409fec:	ldr	x0, [x0, #3424]
  409ff0:	cbz	x0, 40a040 <print_color_string@@Base+0x78>
  409ff4:	cmp	x1, #0x0
  409ff8:	ccmp	x4, #0x0, #0x0, ne  // ne = any
  409ffc:	b.eq	40a018 <print_color_string@@Base+0x50>  // b.none
  40a000:	cmp	x1, #0x0
  40a004:	ccmp	x4, #0x0, #0x4, eq  // eq = none
  40a008:	b.eq	40a020 <print_color_string@@Base+0x58>  // b.none
  40a00c:	mov	x1, x4
  40a010:	bl	40ae48 <jsonw_string@@Base>
  40a014:	b	40a038 <print_color_string@@Base+0x70>
  40a018:	bl	40ac3c <jsonw_name@@Base>
  40a01c:	b	40a038 <print_color_string@@Base+0x70>
  40a020:	mov	x2, x4
  40a024:	bl	40b004 <jsonw_string_field@@Base>
  40a028:	b	40a038 <print_color_string@@Base+0x70>
  40a02c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a030:	ldr	x0, [x0, #3424]
  40a034:	cbz	x0, 40a040 <print_color_string@@Base+0x78>
  40a038:	ldp	x29, x30, [sp], #16
  40a03c:	ret
  40a040:	mov	w0, #0x5                   	// #5
  40a044:	tst	w5, w0
  40a048:	b.eq	40a038 <print_color_string@@Base+0x70>  // b.none
  40a04c:	mov	x3, x4
  40a050:	mov	w1, w6
  40a054:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a058:	ldr	x0, [x0, #4016]
  40a05c:	ldr	x0, [x0]
  40a060:	bl	40a518 <color_fprintf@@Base>
  40a064:	b	40a038 <print_color_string@@Base+0x70>

000000000040a068 <print_string_name_value@@Base>:
  40a068:	stp	x29, x30, [sp, #-112]!
  40a06c:	mov	x29, sp
  40a070:	stp	x19, x20, [sp, #16]
  40a074:	str	x21, [sp, #32]
  40a078:	mov	x19, x0
  40a07c:	mov	x21, x1
  40a080:	add	x20, sp, #0x30
  40a084:	mov	x3, x0
  40a088:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a08c:	add	x2, x2, #0x208
  40a090:	mov	x1, #0x40                  	// #64
  40a094:	mov	x0, x20
  40a098:	bl	404e40 <snprintf@plt>
  40a09c:	mov	x4, x21
  40a0a0:	mov	x3, x20
  40a0a4:	mov	x2, x19
  40a0a8:	mov	w1, #0x6                   	// #6
  40a0ac:	mov	w0, #0x4                   	// #4
  40a0b0:	bl	409fc8 <print_color_string@@Base>
  40a0b4:	ldp	x19, x20, [sp, #16]
  40a0b8:	ldr	x21, [sp, #32]
  40a0bc:	ldp	x29, x30, [sp], #112
  40a0c0:	ret

000000000040a0c4 <print_color_bool@@Base>:
  40a0c4:	stp	x29, x30, [sp, #-16]!
  40a0c8:	mov	x29, sp
  40a0cc:	mov	w5, w0
  40a0d0:	mov	w6, w1
  40a0d4:	mov	x1, x2
  40a0d8:	mov	x2, x3
  40a0dc:	and	w4, w4, #0xff
  40a0e0:	tst	w0, #0x6
  40a0e4:	b.eq	40a110 <print_color_bool@@Base+0x4c>  // b.none
  40a0e8:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a0ec:	ldr	x0, [x0, #3424]
  40a0f0:	cbz	x0, 40a124 <print_color_bool@@Base+0x60>
  40a0f4:	cbz	x1, 40a104 <print_color_bool@@Base+0x40>
  40a0f8:	mov	w2, w4
  40a0fc:	bl	40b034 <jsonw_bool_field@@Base>
  40a100:	b	40a11c <print_color_bool@@Base+0x58>
  40a104:	mov	w1, w4
  40a108:	bl	40ae78 <jsonw_bool@@Base>
  40a10c:	b	40a11c <print_color_bool@@Base+0x58>
  40a110:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a114:	ldr	x0, [x0, #3424]
  40a118:	cbz	x0, 40a124 <print_color_bool@@Base+0x60>
  40a11c:	ldp	x29, x30, [sp], #16
  40a120:	ret
  40a124:	mov	w0, #0x5                   	// #5
  40a128:	tst	w5, w0
  40a12c:	b.eq	40a11c <print_color_bool@@Base+0x58>  // b.none
  40a130:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a134:	add	x0, x0, #0x218
  40a138:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a13c:	add	x3, x3, #0x210
  40a140:	cmp	w4, #0x0
  40a144:	csel	x3, x3, x0, ne  // ne = any
  40a148:	mov	w1, w6
  40a14c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a150:	ldr	x0, [x0, #4016]
  40a154:	ldr	x0, [x0]
  40a158:	bl	40a518 <color_fprintf@@Base>
  40a15c:	b	40a11c <print_color_bool@@Base+0x58>

000000000040a160 <print_color_0xhex@@Base>:
  40a160:	stp	x29, x30, [sp, #-96]!
  40a164:	mov	x29, sp
  40a168:	stp	x19, x20, [sp, #16]
  40a16c:	mov	x19, x2
  40a170:	mov	x2, x3
  40a174:	tst	w0, #0x6
  40a178:	b.eq	40a1c0 <print_color_0xhex@@Base+0x60>  // b.none
  40a17c:	adrp	x3, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a180:	ldr	x3, [x3, #3424]
  40a184:	cbz	x3, 40a1d8 <print_color_0xhex@@Base+0x78>
  40a188:	add	x20, sp, #0x20
  40a18c:	mov	x3, x4
  40a190:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a194:	add	x2, x2, #0x220
  40a198:	mov	x1, #0x40                  	// #64
  40a19c:	mov	x0, x20
  40a1a0:	bl	404e40 <snprintf@plt>
  40a1a4:	mov	x4, x20
  40a1a8:	mov	x3, #0x0                   	// #0
  40a1ac:	mov	x2, x19
  40a1b0:	mov	w1, #0x6                   	// #6
  40a1b4:	mov	w0, #0x2                   	// #2
  40a1b8:	bl	409fc8 <print_color_string@@Base>
  40a1bc:	b	40a1cc <print_color_0xhex@@Base+0x6c>
  40a1c0:	adrp	x3, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a1c4:	ldr	x3, [x3, #3424]
  40a1c8:	cbz	x3, 40a1d8 <print_color_0xhex@@Base+0x78>
  40a1cc:	ldp	x19, x20, [sp, #16]
  40a1d0:	ldp	x29, x30, [sp], #96
  40a1d4:	ret
  40a1d8:	mov	w3, #0x5                   	// #5
  40a1dc:	tst	w0, w3
  40a1e0:	b.eq	40a1cc <print_color_0xhex@@Base+0x6c>  // b.none
  40a1e4:	mov	x3, x4
  40a1e8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a1ec:	ldr	x0, [x0, #4016]
  40a1f0:	ldr	x0, [x0]
  40a1f4:	bl	40a518 <color_fprintf@@Base>
  40a1f8:	b	40a1cc <print_color_0xhex@@Base+0x6c>

000000000040a1fc <print_color_hex@@Base>:
  40a1fc:	stp	x29, x30, [sp, #-96]!
  40a200:	mov	x29, sp
  40a204:	str	x19, [sp, #16]
  40a208:	mov	x19, x2
  40a20c:	mov	x2, x3
  40a210:	tst	w0, #0x6
  40a214:	b.eq	40a26c <print_color_hex@@Base+0x70>  // b.none
  40a218:	adrp	x3, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a21c:	ldr	x3, [x3, #3424]
  40a220:	cbz	x3, 40a284 <print_color_hex@@Base+0x88>
  40a224:	mov	w3, w4
  40a228:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a22c:	add	x2, x2, #0x1e8
  40a230:	mov	x1, #0x40                  	// #64
  40a234:	add	x0, sp, #0x20
  40a238:	bl	404e40 <snprintf@plt>
  40a23c:	cbz	x19, 40a258 <print_color_hex@@Base+0x5c>
  40a240:	add	x2, sp, #0x20
  40a244:	mov	x1, x19
  40a248:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a24c:	ldr	x0, [x0, #3424]
  40a250:	bl	40b004 <jsonw_string_field@@Base>
  40a254:	b	40a278 <print_color_hex@@Base+0x7c>
  40a258:	add	x1, sp, #0x20
  40a25c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a260:	ldr	x0, [x0, #3424]
  40a264:	bl	40ae48 <jsonw_string@@Base>
  40a268:	b	40a278 <print_color_hex@@Base+0x7c>
  40a26c:	adrp	x3, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a270:	ldr	x3, [x3, #3424]
  40a274:	cbz	x3, 40a284 <print_color_hex@@Base+0x88>
  40a278:	ldr	x19, [sp, #16]
  40a27c:	ldp	x29, x30, [sp], #96
  40a280:	ret
  40a284:	mov	w3, #0x5                   	// #5
  40a288:	tst	w0, w3
  40a28c:	b.eq	40a278 <print_color_hex@@Base+0x7c>  // b.none
  40a290:	mov	w3, w4
  40a294:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a298:	ldr	x0, [x0, #4016]
  40a29c:	ldr	x0, [x0]
  40a2a0:	bl	40a518 <color_fprintf@@Base>
  40a2a4:	b	40a278 <print_color_hex@@Base+0x7c>

000000000040a2a8 <print_color_null@@Base>:
  40a2a8:	stp	x29, x30, [sp, #-16]!
  40a2ac:	mov	x29, sp
  40a2b0:	mov	w5, w0
  40a2b4:	mov	x6, x3
  40a2b8:	tst	w0, #0x6
  40a2bc:	b.eq	40a2e4 <print_color_null@@Base+0x3c>  // b.none
  40a2c0:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a2c4:	ldr	x0, [x0, #3424]
  40a2c8:	cbz	x0, 40a2f8 <print_color_null@@Base+0x50>
  40a2cc:	cbz	x2, 40a2dc <print_color_null@@Base+0x34>
  40a2d0:	mov	x1, x2
  40a2d4:	bl	40b24c <jsonw_null_field@@Base>
  40a2d8:	b	40a2f0 <print_color_null@@Base+0x48>
  40a2dc:	bl	40aeac <jsonw_null@@Base>
  40a2e0:	b	40a2f0 <print_color_null@@Base+0x48>
  40a2e4:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a2e8:	ldr	x0, [x0, #3424]
  40a2ec:	cbz	x0, 40a2f8 <print_color_null@@Base+0x50>
  40a2f0:	ldp	x29, x30, [sp], #16
  40a2f4:	ret
  40a2f8:	mov	w0, #0x5                   	// #5
  40a2fc:	tst	w5, w0
  40a300:	b.eq	40a2f0 <print_color_null@@Base+0x48>  // b.none
  40a304:	mov	x3, x4
  40a308:	mov	x2, x6
  40a30c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a310:	ldr	x0, [x0, #4016]
  40a314:	ldr	x0, [x0]
  40a318:	bl	40a518 <color_fprintf@@Base>
  40a31c:	b	40a2f0 <print_color_null@@Base+0x48>

000000000040a320 <print_nl@@Base>:
  40a320:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a324:	ldr	x0, [x0, #3424]
  40a328:	cbz	x0, 40a330 <print_nl@@Base+0x10>
  40a32c:	ret
  40a330:	stp	x29, x30, [sp, #-16]!
  40a334:	mov	x29, sp
  40a338:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a33c:	ldr	x0, [x0, #4048]
  40a340:	ldr	x1, [x0]
  40a344:	adrp	x0, 40d000 <addattrstrz@@Base+0x1c>
  40a348:	add	x0, x0, #0xeb0
  40a34c:	bl	4051e0 <printf@plt>
  40a350:	ldp	x29, x30, [sp], #16
  40a354:	ret

000000000040a358 <check_enable_color@@Base>:
  40a358:	stp	x29, x30, [sp, #-32]!
  40a35c:	mov	x29, sp
  40a360:	str	x19, [sp, #16]
  40a364:	cmp	w1, #0x0
  40a368:	cset	w19, ne  // ne = any
  40a36c:	cmp	w0, #0x0
  40a370:	csinc	w19, w19, wzr, ne  // ne = any
  40a374:	cbnz	w19, 40a40c <check_enable_color@@Base+0xb4>
  40a378:	cmp	w0, #0x2
  40a37c:	b.eq	40a3a8 <check_enable_color@@Base+0x50>  // b.none
  40a380:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a384:	ldr	x0, [x0, #4016]
  40a388:	ldr	x0, [x0]
  40a38c:	bl	404e50 <fileno@plt>
  40a390:	bl	405130 <isatty@plt>
  40a394:	cbnz	w0, 40a3a8 <check_enable_color@@Base+0x50>
  40a398:	mov	w0, w19
  40a39c:	ldr	x19, [sp, #16]
  40a3a0:	ldp	x29, x30, [sp], #32
  40a3a4:	ret
  40a3a8:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a3ac:	mov	w1, #0x1                   	// #1
  40a3b0:	str	w1, [x0, #3432]
  40a3b4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a3b8:	add	x0, x0, #0x228
  40a3bc:	bl	405210 <getenv@plt>
  40a3c0:	mov	w19, #0x1                   	// #1
  40a3c4:	cbz	x0, 40a398 <check_enable_color@@Base+0x40>
  40a3c8:	mov	w1, #0x3b                  	// #59
  40a3cc:	bl	404fb0 <strrchr@plt>
  40a3d0:	cbz	x0, 40a398 <check_enable_color@@Base+0x40>
  40a3d4:	ldrb	w2, [x0, #1]
  40a3d8:	sub	w1, w2, #0x30
  40a3dc:	and	w1, w1, #0xff
  40a3e0:	cmp	w1, #0x6
  40a3e4:	cset	w19, ls  // ls = plast
  40a3e8:	cmp	w2, #0x38
  40a3ec:	csinc	w19, w19, wzr, ne  // ne = any
  40a3f0:	cbz	w19, 40a414 <check_enable_color@@Base+0xbc>
  40a3f4:	ldrb	w0, [x0, #2]
  40a3f8:	cbnz	w0, 40a398 <check_enable_color@@Base+0x40>
  40a3fc:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a400:	mov	w1, #0x1                   	// #1
  40a404:	str	w1, [x0, #3436]
  40a408:	b	40a398 <check_enable_color@@Base+0x40>
  40a40c:	mov	w19, #0x0                   	// #0
  40a410:	b	40a398 <check_enable_color@@Base+0x40>
  40a414:	mov	w19, #0x1                   	// #1
  40a418:	b	40a398 <check_enable_color@@Base+0x40>

000000000040a41c <matches_color@@Base>:
  40a41c:	stp	x29, x30, [sp, #-48]!
  40a420:	mov	x29, sp
  40a424:	stp	x19, x20, [sp, #16]
  40a428:	str	x21, [sp, #32]
  40a42c:	mov	w20, #0x0                   	// #0
  40a430:	cbz	x1, 40a4b8 <matches_color@@Base+0x9c>
  40a434:	mov	x19, x0
  40a438:	mov	x21, x1
  40a43c:	bl	404d50 <strlen@plt>
  40a440:	add	x1, x0, #0x10
  40a444:	and	x1, x1, #0xfffffffffffffff0
  40a448:	sub	sp, sp, x1
  40a44c:	add	x2, x0, #0x1
  40a450:	mov	x1, x19
  40a454:	mov	x0, sp
  40a458:	bl	404d20 <memcpy@plt>
  40a45c:	mov	x20, x0
  40a460:	mov	w1, #0x3d                  	// #61
  40a464:	bl	405180 <strchrnul@plt>
  40a468:	mov	x19, x0
  40a46c:	ldrb	w0, [x0]
  40a470:	cbz	w0, 40a478 <matches_color@@Base+0x5c>
  40a474:	strb	wzr, [x19], #1
  40a478:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a47c:	add	x1, x1, #0x238
  40a480:	mov	x0, x20
  40a484:	bl	407348 <matches@@Base>
  40a488:	ands	w20, w0, #0xff
  40a48c:	b.ne	40a510 <matches_color@@Base+0xf4>  // b.any
  40a490:	ldrb	w0, [x19]
  40a494:	cbz	w0, 40a4ac <matches_color@@Base+0x90>
  40a498:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a49c:	add	x1, x1, #0x240
  40a4a0:	mov	x0, x19
  40a4a4:	bl	405010 <strcmp@plt>
  40a4a8:	cbnz	w0, 40a4d0 <matches_color@@Base+0xb4>
  40a4ac:	mov	w0, #0x2                   	// #2
  40a4b0:	str	w0, [x21]
  40a4b4:	mov	w20, #0x1                   	// #1
  40a4b8:	mov	w0, w20
  40a4bc:	mov	sp, x29
  40a4c0:	ldp	x19, x20, [sp, #16]
  40a4c4:	ldr	x21, [sp, #32]
  40a4c8:	ldp	x29, x30, [sp], #48
  40a4cc:	ret
  40a4d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a4d4:	add	x1, x1, #0x248
  40a4d8:	mov	x0, x19
  40a4dc:	bl	405010 <strcmp@plt>
  40a4e0:	cbnz	w0, 40a4f0 <matches_color@@Base+0xd4>
  40a4e4:	mov	w20, #0x1                   	// #1
  40a4e8:	str	w20, [x21]
  40a4ec:	b	40a4b8 <matches_color@@Base+0x9c>
  40a4f0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a4f4:	add	x1, x1, #0x250
  40a4f8:	mov	x0, x19
  40a4fc:	bl	405010 <strcmp@plt>
  40a500:	cbnz	w0, 40a4b8 <matches_color@@Base+0x9c>
  40a504:	str	wzr, [x21]
  40a508:	mov	w20, #0x1                   	// #1
  40a50c:	b	40a4b8 <matches_color@@Base+0x9c>
  40a510:	mov	w20, #0x0                   	// #0
  40a514:	b	40a4b8 <matches_color@@Base+0x9c>

000000000040a518 <color_fprintf@@Base>:
  40a518:	stp	x29, x30, [sp, #-288]!
  40a51c:	mov	x29, sp
  40a520:	stp	x19, x20, [sp, #16]
  40a524:	stp	x21, x22, [sp, #32]
  40a528:	mov	x20, x0
  40a52c:	mov	x21, x2
  40a530:	str	x3, [sp, #248]
  40a534:	str	x4, [sp, #256]
  40a538:	str	x5, [sp, #264]
  40a53c:	str	x6, [sp, #272]
  40a540:	str	x7, [sp, #280]
  40a544:	str	q0, [sp, #112]
  40a548:	str	q1, [sp, #128]
  40a54c:	str	q2, [sp, #144]
  40a550:	str	q3, [sp, #160]
  40a554:	str	q4, [sp, #176]
  40a558:	str	q5, [sp, #192]
  40a55c:	str	q6, [sp, #208]
  40a560:	str	q7, [sp, #224]
  40a564:	add	x0, sp, #0x120
  40a568:	str	x0, [sp, #80]
  40a56c:	str	x0, [sp, #88]
  40a570:	add	x0, sp, #0xf0
  40a574:	str	x0, [sp, #96]
  40a578:	mov	w0, #0xffffffd8            	// #-40
  40a57c:	str	w0, [sp, #104]
  40a580:	mov	w0, #0xffffff80            	// #-128
  40a584:	str	w0, [sp, #108]
  40a588:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a58c:	ldr	w0, [x0, #3432]
  40a590:	cmp	w0, #0x0
  40a594:	ccmp	w1, #0x6, #0x4, ne  // ne = any
  40a598:	b.eq	40a624 <color_fprintf@@Base+0x10c>  // b.none
  40a59c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a5a0:	ldr	w0, [x0, #3436]
  40a5a4:	cbz	w0, 40a648 <color_fprintf@@Base+0x130>
  40a5a8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a5ac:	add	x0, x0, #0x2d0
  40a5b0:	ldr	w1, [x0, w1, uxtw #2]
  40a5b4:	adrp	x22, 40d000 <addattrstrz@@Base+0x1c>
  40a5b8:	add	x22, x22, #0xeb0
  40a5bc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a5c0:	add	x0, x0, #0xcf0
  40a5c4:	ldr	x2, [x0, w1, uxtw #3]
  40a5c8:	mov	x1, x22
  40a5cc:	mov	x0, x20
  40a5d0:	bl	405250 <fprintf@plt>
  40a5d4:	mov	w19, w0
  40a5d8:	ldp	x0, x1, [sp, #80]
  40a5dc:	stp	x0, x1, [sp, #48]
  40a5e0:	ldp	x0, x1, [sp, #96]
  40a5e4:	stp	x0, x1, [sp, #64]
  40a5e8:	add	x2, sp, #0x30
  40a5ec:	mov	x1, x21
  40a5f0:	mov	x0, x20
  40a5f4:	bl	4051d0 <vfprintf@plt>
  40a5f8:	add	w19, w19, w0
  40a5fc:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a600:	add	x2, x2, #0x258
  40a604:	mov	x1, x22
  40a608:	mov	x0, x20
  40a60c:	bl	405250 <fprintf@plt>
  40a610:	add	w0, w19, w0
  40a614:	ldp	x19, x20, [sp, #16]
  40a618:	ldp	x21, x22, [sp, #32]
  40a61c:	ldp	x29, x30, [sp], #288
  40a620:	ret
  40a624:	ldp	x0, x1, [sp, #80]
  40a628:	stp	x0, x1, [sp, #48]
  40a62c:	ldp	x0, x1, [sp, #96]
  40a630:	stp	x0, x1, [sp, #64]
  40a634:	add	x2, sp, #0x30
  40a638:	mov	x1, x21
  40a63c:	mov	x0, x20
  40a640:	bl	4051d0 <vfprintf@plt>
  40a644:	b	40a614 <color_fprintf@@Base+0xfc>
  40a648:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a64c:	add	x0, x0, #0x2d0
  40a650:	add	x0, x0, #0x20
  40a654:	ldr	w1, [x0, w1, uxtw #2]
  40a658:	b	40a5b4 <color_fprintf@@Base+0x9c>

000000000040a65c <ifa_family_color@@Base>:
  40a65c:	and	w0, w0, #0xff
  40a660:	cmp	w0, #0x2
  40a664:	b.eq	40a67c <ifa_family_color@@Base+0x20>  // b.none
  40a668:	cmp	w0, #0xa
  40a66c:	mov	w0, #0x6                   	// #6
  40a670:	mov	w1, #0x3                   	// #3
  40a674:	csel	w0, w0, w1, ne  // ne = any
  40a678:	ret
  40a67c:	mov	w0, #0x2                   	// #2
  40a680:	b	40a678 <ifa_family_color@@Base+0x1c>

000000000040a684 <oper_state_color@@Base>:
  40a684:	and	w0, w0, #0xff
  40a688:	cmp	w0, #0x2
  40a68c:	b.eq	40a6a4 <oper_state_color@@Base+0x20>  // b.none
  40a690:	cmp	w0, #0x6
  40a694:	mov	w0, #0x6                   	// #6
  40a698:	mov	w1, #0x4                   	// #4
  40a69c:	csel	w0, w0, w1, ne  // ne = any
  40a6a0:	ret
  40a6a4:	mov	w0, #0x5                   	// #5
  40a6a8:	b	40a6a0 <oper_state_color@@Base+0x1c>

000000000040a6ac <mpls_ntop@@Base>:
  40a6ac:	stp	x29, x30, [sp, #-80]!
  40a6b0:	mov	x29, sp
  40a6b4:	cmp	w0, #0x1c
  40a6b8:	b.eq	40a6d4 <mpls_ntop@@Base+0x28>  // b.none
  40a6bc:	bl	405200 <__errno_location@plt>
  40a6c0:	mov	w1, #0x61                  	// #97
  40a6c4:	str	w1, [x0]
  40a6c8:	mov	x0, #0x0                   	// #0
  40a6cc:	ldp	x29, x30, [sp], #80
  40a6d0:	ret
  40a6d4:	stp	x19, x20, [sp, #16]
  40a6d8:	stp	x21, x22, [sp, #32]
  40a6dc:	stp	x23, x24, [sp, #48]
  40a6e0:	stp	x25, x26, [sp, #64]
  40a6e4:	mov	x20, x1
  40a6e8:	mov	x21, x2
  40a6ec:	mov	x19, x3
  40a6f0:	bl	405200 <__errno_location@plt>
  40a6f4:	mov	x25, x0
  40a6f8:	str	wzr, [x0]
  40a6fc:	mov	x23, x21
  40a700:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a704:	add	x24, x24, #0x310
  40a708:	mov	w26, #0x2f                  	// #47
  40a70c:	ldr	w22, [x20]
  40a710:	rev	w22, w22
  40a714:	lsr	w3, w22, #12
  40a718:	mov	x2, x24
  40a71c:	mov	x1, x19
  40a720:	mov	x0, x23
  40a724:	bl	404e40 <snprintf@plt>
  40a728:	sxtw	x1, w0
  40a72c:	cmp	x19, w0, sxtw
  40a730:	b.ls	40a754 <mpls_ntop@@Base+0xa8>  // b.plast
  40a734:	add	x20, x20, #0x4
  40a738:	tbnz	w22, #8, 40a774 <mpls_ntop@@Base+0xc8>
  40a73c:	add	x2, x23, x1
  40a740:	strb	w26, [x23, w0, sxtw]
  40a744:	add	x23, x2, #0x1
  40a748:	mvn	x1, x1
  40a74c:	add	x19, x19, x1
  40a750:	b	40a70c <mpls_ntop@@Base+0x60>
  40a754:	mov	w0, #0xfffffff9            	// #-7
  40a758:	str	w0, [x25]
  40a75c:	mov	x0, #0x0                   	// #0
  40a760:	ldp	x19, x20, [sp, #16]
  40a764:	ldp	x21, x22, [sp, #32]
  40a768:	ldp	x23, x24, [sp, #48]
  40a76c:	ldp	x25, x26, [sp, #64]
  40a770:	b	40a6cc <mpls_ntop@@Base+0x20>
  40a774:	mov	x0, x21
  40a778:	ldp	x19, x20, [sp, #16]
  40a77c:	ldp	x21, x22, [sp, #32]
  40a780:	ldp	x23, x24, [sp, #48]
  40a784:	ldp	x25, x26, [sp, #64]
  40a788:	b	40a6cc <mpls_ntop@@Base+0x20>

000000000040a78c <mpls_pton@@Base>:
  40a78c:	stp	x29, x30, [sp, #-80]!
  40a790:	mov	x29, sp
  40a794:	cmp	w0, #0x1c
  40a798:	b.ne	40a8b4 <mpls_pton@@Base+0x128>  // b.any
  40a79c:	stp	x19, x20, [sp, #16]
  40a7a0:	stp	x21, x22, [sp, #32]
  40a7a4:	mov	x21, x1
  40a7a8:	mov	x20, x2
  40a7ac:	lsr	x19, x3, #2
  40a7b0:	bl	405200 <__errno_location@plt>
  40a7b4:	str	wzr, [x0]
  40a7b8:	cbz	w19, 40a828 <mpls_pton@@Base+0x9c>
  40a7bc:	str	x23, [sp, #48]
  40a7c0:	sub	w19, w19, #0x1
  40a7c4:	add	x19, x19, #0x1
  40a7c8:	add	x19, x20, x19, lsl #2
  40a7cc:	add	x23, sp, #0x48
  40a7d0:	mov	x22, #0xfffff               	// #1048575
  40a7d4:	mov	w2, #0x0                   	// #0
  40a7d8:	mov	x1, x23
  40a7dc:	mov	x0, x21
  40a7e0:	bl	404d40 <strtoul@plt>
  40a7e4:	cmp	x0, x22
  40a7e8:	b.hi	40a878 <mpls_pton@@Base+0xec>  // b.pmore
  40a7ec:	ldr	x1, [sp, #72]
  40a7f0:	cmp	x1, x21
  40a7f4:	b.eq	40a88c <mpls_pton@@Base+0x100>  // b.none
  40a7f8:	lsl	w0, w0, #12
  40a7fc:	rev	w0, w0
  40a800:	str	w0, [x20]
  40a804:	ldrb	w2, [x1]
  40a808:	cbz	w2, 40a85c <mpls_pton@@Base+0xd0>
  40a80c:	cmp	w2, #0x2f
  40a810:	b.ne	40a8a0 <mpls_pton@@Base+0x114>  // b.any
  40a814:	add	x21, x1, #0x1
  40a818:	add	x20, x20, #0x4
  40a81c:	cmp	x19, x20
  40a820:	b.ne	40a7d4 <mpls_pton@@Base+0x48>  // b.any
  40a824:	ldr	x23, [sp, #48]
  40a828:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40a82c:	ldr	x0, [x0, #3992]
  40a830:	ldr	x3, [x0]
  40a834:	mov	x2, #0x18                  	// #24
  40a838:	mov	x1, #0x1                   	// #1
  40a83c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a840:	add	x0, x0, #0x318
  40a844:	bl	4050d0 <fwrite@plt>
  40a848:	mov	w0, #0x0                   	// #0
  40a84c:	ldp	x19, x20, [sp, #16]
  40a850:	ldp	x21, x22, [sp, #32]
  40a854:	ldp	x29, x30, [sp], #80
  40a858:	ret
  40a85c:	orr	w0, w0, #0x10000
  40a860:	str	w0, [x20]
  40a864:	mov	w0, #0x1                   	// #1
  40a868:	ldp	x19, x20, [sp, #16]
  40a86c:	ldp	x21, x22, [sp, #32]
  40a870:	ldr	x23, [sp, #48]
  40a874:	b	40a854 <mpls_pton@@Base+0xc8>
  40a878:	mov	w0, #0x0                   	// #0
  40a87c:	ldp	x19, x20, [sp, #16]
  40a880:	ldp	x21, x22, [sp, #32]
  40a884:	ldr	x23, [sp, #48]
  40a888:	b	40a854 <mpls_pton@@Base+0xc8>
  40a88c:	mov	w0, #0x0                   	// #0
  40a890:	ldp	x19, x20, [sp, #16]
  40a894:	ldp	x21, x22, [sp, #32]
  40a898:	ldr	x23, [sp, #48]
  40a89c:	b	40a854 <mpls_pton@@Base+0xc8>
  40a8a0:	mov	w0, #0x0                   	// #0
  40a8a4:	ldp	x19, x20, [sp, #16]
  40a8a8:	ldp	x21, x22, [sp, #32]
  40a8ac:	ldr	x23, [sp, #48]
  40a8b0:	b	40a854 <mpls_pton@@Base+0xc8>
  40a8b4:	bl	405200 <__errno_location@plt>
  40a8b8:	mov	w1, #0x61                  	// #97
  40a8bc:	str	w1, [x0]
  40a8c0:	mov	w0, #0xffffffff            	// #-1
  40a8c4:	b	40a854 <mpls_pton@@Base+0xc8>
  40a8c8:	stp	x29, x30, [sp, #-32]!
  40a8cc:	mov	x29, sp
  40a8d0:	str	x19, [sp, #16]
  40a8d4:	mov	x19, x0
  40a8d8:	ldrb	w0, [x0, #13]
  40a8dc:	cbnz	w0, 40a8f4 <mpls_pton@@Base+0x168>
  40a8e0:	mov	w0, #0x2c                  	// #44
  40a8e4:	strb	w0, [x19, #13]
  40a8e8:	ldr	x19, [sp, #16]
  40a8ec:	ldp	x29, x30, [sp], #32
  40a8f0:	ret
  40a8f4:	ldr	x1, [x19]
  40a8f8:	bl	404e00 <putc@plt>
  40a8fc:	b	40a8e0 <mpls_pton@@Base+0x154>
  40a900:	stp	x29, x30, [sp, #-64]!
  40a904:	mov	x29, sp
  40a908:	stp	x19, x20, [sp, #16]
  40a90c:	mov	x20, x0
  40a910:	ldr	w0, [x0, #8]
  40a914:	cbz	w0, 40a960 <mpls_pton@@Base+0x1d4>
  40a918:	stp	x21, x22, [sp, #32]
  40a91c:	str	x23, [sp, #48]
  40a920:	mov	w19, #0x0                   	// #0
  40a924:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a928:	add	x21, x21, #0x338
  40a92c:	mov	x23, #0x4                   	// #4
  40a930:	mov	x22, #0x1                   	// #1
  40a934:	ldr	x3, [x20]
  40a938:	mov	x2, x23
  40a93c:	mov	x1, x22
  40a940:	mov	x0, x21
  40a944:	bl	4050d0 <fwrite@plt>
  40a948:	add	w19, w19, #0x1
  40a94c:	ldr	w0, [x20, #8]
  40a950:	cmp	w0, w19
  40a954:	b.hi	40a934 <mpls_pton@@Base+0x1a8>  // b.pmore
  40a958:	ldp	x21, x22, [sp, #32]
  40a95c:	ldr	x23, [sp, #48]
  40a960:	ldp	x19, x20, [sp, #16]
  40a964:	ldp	x29, x30, [sp], #64
  40a968:	ret
  40a96c:	stp	x29, x30, [sp, #-32]!
  40a970:	mov	x29, sp
  40a974:	stp	x19, x20, [sp, #16]
  40a978:	mov	x19, x0
  40a97c:	ldr	w0, [x0, #8]
  40a980:	cbz	w0, 40a9b8 <mpls_pton@@Base+0x22c>
  40a984:	mov	w20, w1
  40a988:	sub	w0, w0, #0x1
  40a98c:	str	w0, [x19, #8]
  40a990:	ldrb	w0, [x19, #13]
  40a994:	cbnz	w0, 40a9d8 <mpls_pton@@Base+0x24c>
  40a998:	ldr	x1, [x19]
  40a99c:	mov	w0, w20
  40a9a0:	bl	404e00 <putc@plt>
  40a9a4:	mov	w0, #0x2c                  	// #44
  40a9a8:	strb	w0, [x19, #13]
  40a9ac:	ldp	x19, x20, [sp, #16]
  40a9b0:	ldp	x29, x30, [sp], #32
  40a9b4:	ret
  40a9b8:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a9bc:	add	x3, x3, #0x3f8
  40a9c0:	mov	w2, #0x85                  	// #133
  40a9c4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a9c8:	add	x1, x1, #0x340
  40a9cc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40a9d0:	add	x0, x0, #0x350
  40a9d4:	bl	4051f0 <__assert_fail@plt>
  40a9d8:	ldrb	w0, [x19, #12]
  40a9dc:	cbz	w0, 40a998 <mpls_pton@@Base+0x20c>
  40a9e0:	ldr	x1, [x19]
  40a9e4:	mov	w0, #0xa                   	// #10
  40a9e8:	bl	404e00 <putc@plt>
  40a9ec:	mov	x0, x19
  40a9f0:	bl	40a900 <mpls_pton@@Base+0x174>
  40a9f4:	b	40a998 <mpls_pton@@Base+0x20c>
  40a9f8:	stp	x29, x30, [sp, #-64]!
  40a9fc:	mov	x29, sp
  40aa00:	stp	x19, x20, [sp, #16]
  40aa04:	stp	x21, x22, [sp, #32]
  40aa08:	mov	x22, x0
  40aa0c:	mov	x19, x1
  40aa10:	ldr	x1, [x0]
  40aa14:	mov	w0, #0x22                  	// #34
  40aa18:	bl	404e00 <putc@plt>
  40aa1c:	ldrb	w0, [x19]
  40aa20:	cbz	w0, 40ab74 <mpls_pton@@Base+0x3e8>
  40aa24:	str	x23, [sp, #48]
  40aa28:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aa2c:	add	x23, x23, #0x370
  40aa30:	mov	x20, #0x2                   	// #2
  40aa34:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aa38:	add	x21, x21, #0x398
  40aa3c:	b	40aa70 <mpls_pton@@Base+0x2e4>
  40aa40:	cmp	w0, #0x8
  40aa44:	b.eq	40ab30 <mpls_pton@@Base+0x3a4>  // b.none
  40aa48:	cmp	w0, #0x9
  40aa4c:	b.ne	40ab64 <mpls_pton@@Base+0x3d8>  // b.any
  40aa50:	ldr	x3, [x22]
  40aa54:	mov	x2, x20
  40aa58:	mov	x1, #0x1                   	// #1
  40aa5c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aa60:	add	x0, x0, #0x360
  40aa64:	bl	4050d0 <fwrite@plt>
  40aa68:	ldrb	w0, [x19, #1]!
  40aa6c:	cbz	w0, 40ab70 <mpls_pton@@Base+0x3e4>
  40aa70:	cmp	w0, #0xd
  40aa74:	b.eq	40ab18 <mpls_pton@@Base+0x38c>  // b.none
  40aa78:	b.hi	40aaac <mpls_pton@@Base+0x320>  // b.pmore
  40aa7c:	cmp	w0, #0xa
  40aa80:	b.eq	40aafc <mpls_pton@@Base+0x370>  // b.none
  40aa84:	b.ls	40aa40 <mpls_pton@@Base+0x2b4>  // b.plast
  40aa88:	cmp	w0, #0xc
  40aa8c:	b.ne	40ab64 <mpls_pton@@Base+0x3d8>  // b.any
  40aa90:	ldr	x3, [x22]
  40aa94:	mov	x2, x20
  40aa98:	mov	x1, #0x1                   	// #1
  40aa9c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aaa0:	add	x0, x0, #0x378
  40aaa4:	bl	4050d0 <fwrite@plt>
  40aaa8:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40aaac:	cmp	w0, #0x27
  40aab0:	b.eq	40ab4c <mpls_pton@@Base+0x3c0>  // b.none
  40aab4:	cmp	w0, #0x5c
  40aab8:	b.ne	40aad8 <mpls_pton@@Base+0x34c>  // b.any
  40aabc:	ldr	x3, [x22]
  40aac0:	mov	x2, x20
  40aac4:	mov	x1, #0x1                   	// #1
  40aac8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aacc:	add	x0, x0, #0x388
  40aad0:	bl	4050d0 <fwrite@plt>
  40aad4:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40aad8:	cmp	w0, #0x22
  40aadc:	b.ne	40ab64 <mpls_pton@@Base+0x3d8>  // b.any
  40aae0:	ldr	x3, [x22]
  40aae4:	mov	x2, x20
  40aae8:	mov	x1, #0x1                   	// #1
  40aaec:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aaf0:	add	x0, x0, #0x390
  40aaf4:	bl	4050d0 <fwrite@plt>
  40aaf8:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40aafc:	ldr	x3, [x22]
  40ab00:	mov	x2, x20
  40ab04:	mov	x1, #0x1                   	// #1
  40ab08:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ab0c:	add	x0, x0, #0x368
  40ab10:	bl	4050d0 <fwrite@plt>
  40ab14:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40ab18:	ldr	x3, [x22]
  40ab1c:	mov	x2, x20
  40ab20:	mov	x1, #0x1                   	// #1
  40ab24:	mov	x0, x23
  40ab28:	bl	4050d0 <fwrite@plt>
  40ab2c:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40ab30:	ldr	x3, [x22]
  40ab34:	mov	x2, x20
  40ab38:	mov	x1, #0x1                   	// #1
  40ab3c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ab40:	add	x0, x0, #0x380
  40ab44:	bl	4050d0 <fwrite@plt>
  40ab48:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40ab4c:	ldr	x3, [x22]
  40ab50:	mov	x2, x20
  40ab54:	mov	x1, #0x1                   	// #1
  40ab58:	mov	x0, x21
  40ab5c:	bl	4050d0 <fwrite@plt>
  40ab60:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40ab64:	ldr	x1, [x22]
  40ab68:	bl	404e00 <putc@plt>
  40ab6c:	b	40aa68 <mpls_pton@@Base+0x2dc>
  40ab70:	ldr	x23, [sp, #48]
  40ab74:	ldr	x1, [x22]
  40ab78:	mov	w0, #0x22                  	// #34
  40ab7c:	bl	404e00 <putc@plt>
  40ab80:	ldp	x19, x20, [sp, #16]
  40ab84:	ldp	x21, x22, [sp, #32]
  40ab88:	ldp	x29, x30, [sp], #64
  40ab8c:	ret

000000000040ab90 <jsonw_new@@Base>:
  40ab90:	stp	x29, x30, [sp, #-32]!
  40ab94:	mov	x29, sp
  40ab98:	str	x19, [sp, #16]
  40ab9c:	mov	x19, x0
  40aba0:	mov	x0, #0x10                  	// #16
  40aba4:	bl	404e90 <malloc@plt>
  40aba8:	cbz	x0, 40abbc <jsonw_new@@Base+0x2c>
  40abac:	str	x19, [x0]
  40abb0:	str	wzr, [x0, #8]
  40abb4:	strb	wzr, [x0, #12]
  40abb8:	strb	wzr, [x0, #13]
  40abbc:	ldr	x19, [sp, #16]
  40abc0:	ldp	x29, x30, [sp], #32
  40abc4:	ret

000000000040abc8 <jsonw_destroy@@Base>:
  40abc8:	stp	x29, x30, [sp, #-32]!
  40abcc:	mov	x29, sp
  40abd0:	stp	x19, x20, [sp, #16]
  40abd4:	mov	x19, x0
  40abd8:	ldr	x20, [x0]
  40abdc:	ldr	w0, [x20, #8]
  40abe0:	cbnz	w0, 40ac10 <jsonw_destroy@@Base+0x48>
  40abe4:	ldr	x1, [x20]
  40abe8:	mov	w0, #0xa                   	// #10
  40abec:	bl	404e20 <fputc@plt>
  40abf0:	ldr	x0, [x20]
  40abf4:	bl	4050f0 <fflush@plt>
  40abf8:	mov	x0, x20
  40abfc:	bl	405070 <free@plt>
  40ac00:	str	xzr, [x19]
  40ac04:	ldp	x19, x20, [sp, #16]
  40ac08:	ldp	x29, x30, [sp], #32
  40ac0c:	ret
  40ac10:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ac14:	add	x3, x3, #0x3f8
  40ac18:	add	x3, x3, #0x10
  40ac1c:	mov	w2, #0x6e                  	// #110
  40ac20:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ac24:	add	x1, x1, #0x340
  40ac28:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ac2c:	add	x0, x0, #0x3a0
  40ac30:	bl	4051f0 <__assert_fail@plt>

000000000040ac34 <jsonw_pretty@@Base>:
  40ac34:	strb	w1, [x0, #12]
  40ac38:	ret

000000000040ac3c <jsonw_name@@Base>:
  40ac3c:	stp	x29, x30, [sp, #-32]!
  40ac40:	mov	x29, sp
  40ac44:	stp	x19, x20, [sp, #16]
  40ac48:	mov	x19, x0
  40ac4c:	mov	x20, x1
  40ac50:	bl	40a8c8 <mpls_pton@@Base+0x13c>
  40ac54:	ldrb	w0, [x19, #12]
  40ac58:	cbnz	w0, 40ac8c <jsonw_name@@Base+0x50>
  40ac5c:	strb	wzr, [x19, #13]
  40ac60:	mov	x1, x20
  40ac64:	mov	x0, x19
  40ac68:	bl	40a9f8 <mpls_pton@@Base+0x26c>
  40ac6c:	ldr	x1, [x19]
  40ac70:	mov	w0, #0x3a                  	// #58
  40ac74:	bl	404e00 <putc@plt>
  40ac78:	ldrb	w0, [x19, #12]
  40ac7c:	cbnz	w0, 40aca4 <jsonw_name@@Base+0x68>
  40ac80:	ldp	x19, x20, [sp, #16]
  40ac84:	ldp	x29, x30, [sp], #32
  40ac88:	ret
  40ac8c:	ldr	x1, [x19]
  40ac90:	mov	w0, #0xa                   	// #10
  40ac94:	bl	404e00 <putc@plt>
  40ac98:	mov	x0, x19
  40ac9c:	bl	40a900 <mpls_pton@@Base+0x174>
  40aca0:	b	40ac5c <jsonw_name@@Base+0x20>
  40aca4:	ldr	x1, [x19]
  40aca8:	mov	w0, #0x20                  	// #32
  40acac:	bl	404e00 <putc@plt>
  40acb0:	b	40ac80 <jsonw_name@@Base+0x44>

000000000040acb4 <jsonw_printf@@Base>:
  40acb4:	stp	x29, x30, [sp, #-272]!
  40acb8:	mov	x29, sp
  40acbc:	stp	x19, x20, [sp, #16]
  40acc0:	mov	x19, x0
  40acc4:	mov	x20, x1
  40acc8:	str	x2, [sp, #224]
  40accc:	str	x3, [sp, #232]
  40acd0:	str	x4, [sp, #240]
  40acd4:	str	x5, [sp, #248]
  40acd8:	str	x6, [sp, #256]
  40acdc:	str	x7, [sp, #264]
  40ace0:	str	q0, [sp, #96]
  40ace4:	str	q1, [sp, #112]
  40ace8:	str	q2, [sp, #128]
  40acec:	str	q3, [sp, #144]
  40acf0:	str	q4, [sp, #160]
  40acf4:	str	q5, [sp, #176]
  40acf8:	str	q6, [sp, #192]
  40acfc:	str	q7, [sp, #208]
  40ad00:	add	x1, sp, #0x110
  40ad04:	str	x1, [sp, #64]
  40ad08:	str	x1, [sp, #72]
  40ad0c:	add	x1, sp, #0xe0
  40ad10:	str	x1, [sp, #80]
  40ad14:	mov	w1, #0xffffffd0            	// #-48
  40ad18:	str	w1, [sp, #88]
  40ad1c:	mov	w1, #0xffffff80            	// #-128
  40ad20:	str	w1, [sp, #92]
  40ad24:	bl	40a8c8 <mpls_pton@@Base+0x13c>
  40ad28:	ldp	x0, x1, [sp, #64]
  40ad2c:	stp	x0, x1, [sp, #32]
  40ad30:	ldp	x0, x1, [sp, #80]
  40ad34:	stp	x0, x1, [sp, #48]
  40ad38:	add	x2, sp, #0x20
  40ad3c:	mov	x1, x20
  40ad40:	ldr	x0, [x19]
  40ad44:	bl	4051d0 <vfprintf@plt>
  40ad48:	ldp	x19, x20, [sp, #16]
  40ad4c:	ldp	x29, x30, [sp], #272
  40ad50:	ret

000000000040ad54 <jsonw_start_object@@Base>:
  40ad54:	stp	x29, x30, [sp, #-32]!
  40ad58:	mov	x29, sp
  40ad5c:	str	x19, [sp, #16]
  40ad60:	mov	x19, x0
  40ad64:	bl	40a8c8 <mpls_pton@@Base+0x13c>
  40ad68:	ldr	x1, [x19]
  40ad6c:	mov	w0, #0x7b                  	// #123
  40ad70:	bl	404e00 <putc@plt>
  40ad74:	ldr	w0, [x19, #8]
  40ad78:	add	w0, w0, #0x1
  40ad7c:	str	w0, [x19, #8]
  40ad80:	strb	wzr, [x19, #13]
  40ad84:	ldr	x19, [sp, #16]
  40ad88:	ldp	x29, x30, [sp], #32
  40ad8c:	ret

000000000040ad90 <jsonw_end_object@@Base>:
  40ad90:	stp	x29, x30, [sp, #-16]!
  40ad94:	mov	x29, sp
  40ad98:	mov	w1, #0x7d                  	// #125
  40ad9c:	bl	40a96c <mpls_pton@@Base+0x1e0>
  40ada0:	ldp	x29, x30, [sp], #16
  40ada4:	ret

000000000040ada8 <jsonw_start_array@@Base>:
  40ada8:	stp	x29, x30, [sp, #-32]!
  40adac:	mov	x29, sp
  40adb0:	str	x19, [sp, #16]
  40adb4:	mov	x19, x0
  40adb8:	bl	40a8c8 <mpls_pton@@Base+0x13c>
  40adbc:	ldr	x1, [x19]
  40adc0:	mov	w0, #0x5b                  	// #91
  40adc4:	bl	404e00 <putc@plt>
  40adc8:	ldr	w0, [x19, #8]
  40adcc:	add	w0, w0, #0x1
  40add0:	str	w0, [x19, #8]
  40add4:	strb	wzr, [x19, #13]
  40add8:	ldrb	w0, [x19, #12]
  40addc:	cbnz	w0, 40adec <jsonw_start_array@@Base+0x44>
  40ade0:	ldr	x19, [sp, #16]
  40ade4:	ldp	x29, x30, [sp], #32
  40ade8:	ret
  40adec:	ldr	x1, [x19]
  40adf0:	mov	w0, #0x20                  	// #32
  40adf4:	bl	404e00 <putc@plt>
  40adf8:	b	40ade0 <jsonw_start_array@@Base+0x38>

000000000040adfc <jsonw_end_array@@Base>:
  40adfc:	stp	x29, x30, [sp, #-32]!
  40ae00:	mov	x29, sp
  40ae04:	str	x19, [sp, #16]
  40ae08:	mov	x19, x0
  40ae0c:	ldrb	w0, [x0, #12]
  40ae10:	cbz	w0, 40ae1c <jsonw_end_array@@Base+0x20>
  40ae14:	ldrb	w0, [x19, #13]
  40ae18:	cbnz	w0, 40ae38 <jsonw_end_array@@Base+0x3c>
  40ae1c:	strb	wzr, [x19, #13]
  40ae20:	mov	w1, #0x5d                  	// #93
  40ae24:	mov	x0, x19
  40ae28:	bl	40a96c <mpls_pton@@Base+0x1e0>
  40ae2c:	ldr	x19, [sp, #16]
  40ae30:	ldp	x29, x30, [sp], #32
  40ae34:	ret
  40ae38:	ldr	x1, [x19]
  40ae3c:	mov	w0, #0x20                  	// #32
  40ae40:	bl	404e00 <putc@plt>
  40ae44:	b	40ae1c <jsonw_end_array@@Base+0x20>

000000000040ae48 <jsonw_string@@Base>:
  40ae48:	stp	x29, x30, [sp, #-32]!
  40ae4c:	mov	x29, sp
  40ae50:	stp	x19, x20, [sp, #16]
  40ae54:	mov	x19, x0
  40ae58:	mov	x20, x1
  40ae5c:	bl	40a8c8 <mpls_pton@@Base+0x13c>
  40ae60:	mov	x1, x20
  40ae64:	mov	x0, x19
  40ae68:	bl	40a9f8 <mpls_pton@@Base+0x26c>
  40ae6c:	ldp	x19, x20, [sp, #16]
  40ae70:	ldp	x29, x30, [sp], #32
  40ae74:	ret

000000000040ae78 <jsonw_bool@@Base>:
  40ae78:	stp	x29, x30, [sp, #-16]!
  40ae7c:	mov	x29, sp
  40ae80:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ae84:	add	x3, x3, #0x218
  40ae88:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ae8c:	add	x2, x2, #0x210
  40ae90:	tst	w1, #0xff
  40ae94:	csel	x2, x2, x3, ne  // ne = any
  40ae98:	adrp	x1, 40d000 <addattrstrz@@Base+0x1c>
  40ae9c:	add	x1, x1, #0xeb0
  40aea0:	bl	40acb4 <jsonw_printf@@Base>
  40aea4:	ldp	x29, x30, [sp], #16
  40aea8:	ret

000000000040aeac <jsonw_null@@Base>:
  40aeac:	stp	x29, x30, [sp, #-16]!
  40aeb0:	mov	x29, sp
  40aeb4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aeb8:	add	x1, x1, #0x3b8
  40aebc:	bl	40acb4 <jsonw_printf@@Base>
  40aec0:	ldp	x29, x30, [sp], #16
  40aec4:	ret

000000000040aec8 <jsonw_float@@Base>:
  40aec8:	stp	x29, x30, [sp, #-16]!
  40aecc:	mov	x29, sp
  40aed0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aed4:	add	x1, x1, #0x3c0
  40aed8:	bl	40acb4 <jsonw_printf@@Base>
  40aedc:	ldp	x29, x30, [sp], #16
  40aee0:	ret

000000000040aee4 <jsonw_hhu@@Base>:
  40aee4:	stp	x29, x30, [sp, #-16]!
  40aee8:	mov	x29, sp
  40aeec:	and	w2, w1, #0xff
  40aef0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aef4:	add	x1, x1, #0x3c8
  40aef8:	bl	40acb4 <jsonw_printf@@Base>
  40aefc:	ldp	x29, x30, [sp], #16
  40af00:	ret

000000000040af04 <jsonw_hu@@Base>:
  40af04:	stp	x29, x30, [sp, #-16]!
  40af08:	mov	x29, sp
  40af0c:	and	w2, w1, #0xffff
  40af10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40af14:	add	x1, x1, #0x3d0
  40af18:	bl	40acb4 <jsonw_printf@@Base>
  40af1c:	ldp	x29, x30, [sp], #16
  40af20:	ret

000000000040af24 <jsonw_uint@@Base>:
  40af24:	stp	x29, x30, [sp, #-16]!
  40af28:	mov	x29, sp
  40af2c:	mov	w2, w1
  40af30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40af34:	add	x1, x1, #0x310
  40af38:	bl	40acb4 <jsonw_printf@@Base>
  40af3c:	ldp	x29, x30, [sp], #16
  40af40:	ret

000000000040af44 <jsonw_u64@@Base>:
  40af44:	stp	x29, x30, [sp, #-16]!
  40af48:	mov	x29, sp
  40af4c:	mov	x2, x1
  40af50:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40af54:	add	x1, x1, #0x3d8
  40af58:	bl	40acb4 <jsonw_printf@@Base>
  40af5c:	ldp	x29, x30, [sp], #16
  40af60:	ret

000000000040af64 <jsonw_xint@@Base>:
  40af64:	stp	x29, x30, [sp, #-16]!
  40af68:	mov	x29, sp
  40af6c:	mov	x2, x1
  40af70:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40af74:	add	x1, x1, #0x3e0
  40af78:	bl	40acb4 <jsonw_printf@@Base>
  40af7c:	ldp	x29, x30, [sp], #16
  40af80:	ret

000000000040af84 <jsonw_luint@@Base>:
  40af84:	stp	x29, x30, [sp, #-16]!
  40af88:	mov	x29, sp
  40af8c:	mov	x2, x1
  40af90:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40af94:	add	x1, x1, #0x3d8
  40af98:	bl	40acb4 <jsonw_printf@@Base>
  40af9c:	ldp	x29, x30, [sp], #16
  40afa0:	ret

000000000040afa4 <jsonw_lluint@@Base>:
  40afa4:	stp	x29, x30, [sp, #-16]!
  40afa8:	mov	x29, sp
  40afac:	mov	x2, x1
  40afb0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40afb4:	add	x1, x1, #0x3e8
  40afb8:	bl	40acb4 <jsonw_printf@@Base>
  40afbc:	ldp	x29, x30, [sp], #16
  40afc0:	ret

000000000040afc4 <jsonw_int@@Base>:
  40afc4:	stp	x29, x30, [sp, #-16]!
  40afc8:	mov	x29, sp
  40afcc:	mov	w2, w1
  40afd0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40afd4:	add	x1, x1, #0x118
  40afd8:	bl	40acb4 <jsonw_printf@@Base>
  40afdc:	ldp	x29, x30, [sp], #16
  40afe0:	ret

000000000040afe4 <jsonw_s64@@Base>:
  40afe4:	stp	x29, x30, [sp, #-16]!
  40afe8:	mov	x29, sp
  40afec:	mov	x2, x1
  40aff0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40aff4:	add	x1, x1, #0x3f0
  40aff8:	bl	40acb4 <jsonw_printf@@Base>
  40affc:	ldp	x29, x30, [sp], #16
  40b000:	ret

000000000040b004 <jsonw_string_field@@Base>:
  40b004:	stp	x29, x30, [sp, #-32]!
  40b008:	mov	x29, sp
  40b00c:	stp	x19, x20, [sp, #16]
  40b010:	mov	x19, x0
  40b014:	mov	x20, x2
  40b018:	bl	40ac3c <jsonw_name@@Base>
  40b01c:	mov	x1, x20
  40b020:	mov	x0, x19
  40b024:	bl	40ae48 <jsonw_string@@Base>
  40b028:	ldp	x19, x20, [sp, #16]
  40b02c:	ldp	x29, x30, [sp], #32
  40b030:	ret

000000000040b034 <jsonw_bool_field@@Base>:
  40b034:	stp	x29, x30, [sp, #-32]!
  40b038:	mov	x29, sp
  40b03c:	stp	x19, x20, [sp, #16]
  40b040:	mov	x19, x0
  40b044:	and	w20, w2, #0xff
  40b048:	bl	40ac3c <jsonw_name@@Base>
  40b04c:	mov	w1, w20
  40b050:	mov	x0, x19
  40b054:	bl	40ae78 <jsonw_bool@@Base>
  40b058:	ldp	x19, x20, [sp, #16]
  40b05c:	ldp	x29, x30, [sp], #32
  40b060:	ret

000000000040b064 <jsonw_float_field@@Base>:
  40b064:	stp	x29, x30, [sp, #-32]!
  40b068:	mov	x29, sp
  40b06c:	str	x19, [sp, #16]
  40b070:	str	d8, [sp, #24]
  40b074:	mov	x19, x0
  40b078:	fmov	d8, d0
  40b07c:	bl	40ac3c <jsonw_name@@Base>
  40b080:	fmov	d0, d8
  40b084:	mov	x0, x19
  40b088:	bl	40aec8 <jsonw_float@@Base>
  40b08c:	ldr	x19, [sp, #16]
  40b090:	ldr	d8, [sp, #24]
  40b094:	ldp	x29, x30, [sp], #32
  40b098:	ret

000000000040b09c <jsonw_uint_field@@Base>:
  40b09c:	stp	x29, x30, [sp, #-32]!
  40b0a0:	mov	x29, sp
  40b0a4:	stp	x19, x20, [sp, #16]
  40b0a8:	mov	x19, x0
  40b0ac:	mov	w20, w2
  40b0b0:	bl	40ac3c <jsonw_name@@Base>
  40b0b4:	mov	w1, w20
  40b0b8:	mov	x0, x19
  40b0bc:	bl	40af24 <jsonw_uint@@Base>
  40b0c0:	ldp	x19, x20, [sp, #16]
  40b0c4:	ldp	x29, x30, [sp], #32
  40b0c8:	ret

000000000040b0cc <jsonw_u64_field@@Base>:
  40b0cc:	stp	x29, x30, [sp, #-32]!
  40b0d0:	mov	x29, sp
  40b0d4:	stp	x19, x20, [sp, #16]
  40b0d8:	mov	x19, x0
  40b0dc:	mov	x20, x2
  40b0e0:	bl	40ac3c <jsonw_name@@Base>
  40b0e4:	mov	x1, x20
  40b0e8:	mov	x0, x19
  40b0ec:	bl	40af44 <jsonw_u64@@Base>
  40b0f0:	ldp	x19, x20, [sp, #16]
  40b0f4:	ldp	x29, x30, [sp], #32
  40b0f8:	ret

000000000040b0fc <jsonw_xint_field@@Base>:
  40b0fc:	stp	x29, x30, [sp, #-32]!
  40b100:	mov	x29, sp
  40b104:	stp	x19, x20, [sp, #16]
  40b108:	mov	x19, x0
  40b10c:	mov	x20, x2
  40b110:	bl	40ac3c <jsonw_name@@Base>
  40b114:	mov	x1, x20
  40b118:	mov	x0, x19
  40b11c:	bl	40af64 <jsonw_xint@@Base>
  40b120:	ldp	x19, x20, [sp, #16]
  40b124:	ldp	x29, x30, [sp], #32
  40b128:	ret

000000000040b12c <jsonw_hhu_field@@Base>:
  40b12c:	stp	x29, x30, [sp, #-32]!
  40b130:	mov	x29, sp
  40b134:	stp	x19, x20, [sp, #16]
  40b138:	mov	x19, x0
  40b13c:	and	w20, w2, #0xff
  40b140:	bl	40ac3c <jsonw_name@@Base>
  40b144:	mov	w1, w20
  40b148:	mov	x0, x19
  40b14c:	bl	40aee4 <jsonw_hhu@@Base>
  40b150:	ldp	x19, x20, [sp, #16]
  40b154:	ldp	x29, x30, [sp], #32
  40b158:	ret

000000000040b15c <jsonw_hu_field@@Base>:
  40b15c:	stp	x29, x30, [sp, #-32]!
  40b160:	mov	x29, sp
  40b164:	stp	x19, x20, [sp, #16]
  40b168:	mov	x19, x0
  40b16c:	and	w20, w2, #0xffff
  40b170:	bl	40ac3c <jsonw_name@@Base>
  40b174:	mov	w1, w20
  40b178:	mov	x0, x19
  40b17c:	bl	40af04 <jsonw_hu@@Base>
  40b180:	ldp	x19, x20, [sp, #16]
  40b184:	ldp	x29, x30, [sp], #32
  40b188:	ret

000000000040b18c <jsonw_luint_field@@Base>:
  40b18c:	stp	x29, x30, [sp, #-32]!
  40b190:	mov	x29, sp
  40b194:	stp	x19, x20, [sp, #16]
  40b198:	mov	x19, x0
  40b19c:	mov	x20, x2
  40b1a0:	bl	40ac3c <jsonw_name@@Base>
  40b1a4:	mov	x1, x20
  40b1a8:	mov	x0, x19
  40b1ac:	bl	40af84 <jsonw_luint@@Base>
  40b1b0:	ldp	x19, x20, [sp, #16]
  40b1b4:	ldp	x29, x30, [sp], #32
  40b1b8:	ret

000000000040b1bc <jsonw_lluint_field@@Base>:
  40b1bc:	stp	x29, x30, [sp, #-32]!
  40b1c0:	mov	x29, sp
  40b1c4:	stp	x19, x20, [sp, #16]
  40b1c8:	mov	x19, x0
  40b1cc:	mov	x20, x2
  40b1d0:	bl	40ac3c <jsonw_name@@Base>
  40b1d4:	mov	x1, x20
  40b1d8:	mov	x0, x19
  40b1dc:	bl	40afa4 <jsonw_lluint@@Base>
  40b1e0:	ldp	x19, x20, [sp, #16]
  40b1e4:	ldp	x29, x30, [sp], #32
  40b1e8:	ret

000000000040b1ec <jsonw_int_field@@Base>:
  40b1ec:	stp	x29, x30, [sp, #-32]!
  40b1f0:	mov	x29, sp
  40b1f4:	stp	x19, x20, [sp, #16]
  40b1f8:	mov	x19, x0
  40b1fc:	mov	w20, w2
  40b200:	bl	40ac3c <jsonw_name@@Base>
  40b204:	mov	w1, w20
  40b208:	mov	x0, x19
  40b20c:	bl	40afc4 <jsonw_int@@Base>
  40b210:	ldp	x19, x20, [sp, #16]
  40b214:	ldp	x29, x30, [sp], #32
  40b218:	ret

000000000040b21c <jsonw_s64_field@@Base>:
  40b21c:	stp	x29, x30, [sp, #-32]!
  40b220:	mov	x29, sp
  40b224:	stp	x19, x20, [sp, #16]
  40b228:	mov	x19, x0
  40b22c:	mov	x20, x2
  40b230:	bl	40ac3c <jsonw_name@@Base>
  40b234:	mov	x1, x20
  40b238:	mov	x0, x19
  40b23c:	bl	40afe4 <jsonw_s64@@Base>
  40b240:	ldp	x19, x20, [sp, #16]
  40b244:	ldp	x29, x30, [sp], #32
  40b248:	ret

000000000040b24c <jsonw_null_field@@Base>:
  40b24c:	stp	x29, x30, [sp, #-32]!
  40b250:	mov	x29, sp
  40b254:	str	x19, [sp, #16]
  40b258:	mov	x19, x0
  40b25c:	bl	40ac3c <jsonw_name@@Base>
  40b260:	mov	x0, x19
  40b264:	bl	40aeac <jsonw_null@@Base>
  40b268:	ldr	x19, [sp, #16]
  40b26c:	ldp	x29, x30, [sp], #32
  40b270:	ret
  40b274:	stp	x29, x30, [sp, #-48]!
  40b278:	mov	x29, sp
  40b27c:	stp	xzr, xzr, [sp, #24]
  40b280:	str	xzr, [sp, #40]
  40b284:	mov	w2, #0x20                  	// #32
  40b288:	str	w2, [sp, #16]
  40b28c:	mov	w2, #0x12                  	// #18
  40b290:	strh	w2, [sp, #20]
  40b294:	mov	w2, #0x301                 	// #769
  40b298:	strh	w2, [sp, #22]
  40b29c:	ldr	w2, [x0, #28]
  40b2a0:	add	w2, w2, #0x1
  40b2a4:	str	w2, [x0, #28]
  40b2a8:	str	w2, [x0, #32]
  40b2ac:	str	w2, [sp, #24]
  40b2b0:	strb	w1, [sp, #32]
  40b2b4:	mov	w3, #0x0                   	// #0
  40b2b8:	mov	x2, #0x20                  	// #32
  40b2bc:	add	x1, sp, #0x10
  40b2c0:	ldr	w0, [x0]
  40b2c4:	bl	405090 <send@plt>
  40b2c8:	ldp	x29, x30, [sp], #48
  40b2cc:	ret
  40b2d0:	stp	x29, x30, [sp, #-48]!
  40b2d4:	mov	x29, sp
  40b2d8:	stp	x19, x20, [sp, #16]
  40b2dc:	stp	x21, x22, [sp, #32]
  40b2e0:	mov	w22, w0
  40b2e4:	mov	x21, x1
  40b2e8:	mov	w20, w2
  40b2ec:	mov	w2, w20
  40b2f0:	mov	x1, x21
  40b2f4:	mov	w0, w22
  40b2f8:	bl	404d30 <recvmsg@plt>
  40b2fc:	mov	w1, w0
  40b300:	tbz	w0, #31, 40b350 <jsonw_null_field@@Base+0x104>
  40b304:	bl	405200 <__errno_location@plt>
  40b308:	mov	x19, x0
  40b30c:	ldr	w0, [x0]
  40b310:	cmp	w0, #0x4
  40b314:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40b318:	b.eq	40b2ec <jsonw_null_field@@Base+0xa0>  // b.none
  40b31c:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b320:	ldr	x1, [x1, #3992]
  40b324:	ldr	x20, [x1]
  40b328:	bl	404f90 <strerror@plt>
  40b32c:	ldr	w3, [x19]
  40b330:	mov	x2, x0
  40b334:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b338:	add	x1, x1, #0x418
  40b33c:	mov	x0, x20
  40b340:	bl	405250 <fprintf@plt>
  40b344:	ldr	w1, [x19]
  40b348:	neg	w1, w1
  40b34c:	b	40b354 <jsonw_null_field@@Base+0x108>
  40b350:	cbz	w0, 40b368 <jsonw_null_field@@Base+0x11c>
  40b354:	mov	w0, w1
  40b358:	ldp	x19, x20, [sp, #16]
  40b35c:	ldp	x21, x22, [sp, #32]
  40b360:	ldp	x29, x30, [sp], #48
  40b364:	ret
  40b368:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b36c:	ldr	x0, [x0, #3992]
  40b370:	ldr	x3, [x0]
  40b374:	mov	x2, #0xf                   	// #15
  40b378:	mov	x1, #0x1                   	// #1
  40b37c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b380:	add	x0, x0, #0x438
  40b384:	bl	4050d0 <fwrite@plt>
  40b388:	mov	w1, #0xffffffc3            	// #-61
  40b38c:	b	40b354 <jsonw_null_field@@Base+0x108>
  40b390:	stp	x29, x30, [sp, #-64]!
  40b394:	mov	x29, sp
  40b398:	stp	x19, x20, [sp, #16]
  40b39c:	stp	x21, x22, [sp, #32]
  40b3a0:	stp	x23, x24, [sp, #48]
  40b3a4:	mov	w23, w0
  40b3a8:	mov	x20, x1
  40b3ac:	mov	x22, x2
  40b3b0:	ldr	x21, [x1, #16]
  40b3b4:	str	xzr, [x21]
  40b3b8:	str	xzr, [x21, #8]
  40b3bc:	mov	w2, #0x22                  	// #34
  40b3c0:	bl	40b2d0 <jsonw_null_field@@Base+0x84>
  40b3c4:	mov	w19, w0
  40b3c8:	tbnz	w0, #31, 40b414 <jsonw_null_field@@Base+0x1c8>
  40b3cc:	cmp	w0, #0x8, lsl #12
  40b3d0:	mov	w0, #0x8000                	// #32768
  40b3d4:	csel	w19, w19, w0, ge  // ge = tcont
  40b3d8:	sxtw	x19, w19
  40b3dc:	mov	x0, x19
  40b3e0:	bl	404e90 <malloc@plt>
  40b3e4:	mov	x24, x0
  40b3e8:	cbz	x0, 40b42c <jsonw_null_field@@Base+0x1e0>
  40b3ec:	str	x0, [x21]
  40b3f0:	str	x19, [x21, #8]
  40b3f4:	mov	w2, #0x0                   	// #0
  40b3f8:	mov	x1, x20
  40b3fc:	mov	w0, w23
  40b400:	bl	40b2d0 <jsonw_null_field@@Base+0x84>
  40b404:	mov	w19, w0
  40b408:	tbnz	w0, #31, 40b454 <jsonw_null_field@@Base+0x208>
  40b40c:	cbz	x22, 40b460 <jsonw_null_field@@Base+0x214>
  40b410:	str	x24, [x22]
  40b414:	mov	w0, w19
  40b418:	ldp	x19, x20, [sp, #16]
  40b41c:	ldp	x21, x22, [sp, #32]
  40b420:	ldp	x23, x24, [sp, #48]
  40b424:	ldp	x29, x30, [sp], #64
  40b428:	ret
  40b42c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b430:	ldr	x0, [x0, #3992]
  40b434:	ldr	x3, [x0]
  40b438:	mov	x2, #0x20                  	// #32
  40b43c:	mov	x1, #0x1                   	// #1
  40b440:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b444:	add	x0, x0, #0x448
  40b448:	bl	4050d0 <fwrite@plt>
  40b44c:	mov	w19, #0xfffffff4            	// #-12
  40b450:	b	40b414 <jsonw_null_field@@Base+0x1c8>
  40b454:	mov	x0, x24
  40b458:	bl	405070 <free@plt>
  40b45c:	b	40b414 <jsonw_null_field@@Base+0x1c8>
  40b460:	mov	x0, x24
  40b464:	bl	405070 <free@plt>
  40b468:	b	40b414 <jsonw_null_field@@Base+0x1c8>

000000000040b46c <nl_dump_ext_ack@@Base>:
  40b46c:	mov	w0, #0x0                   	// #0
  40b470:	ret
  40b474:	stp	x29, x30, [sp, #-240]!
  40b478:	mov	x29, sp
  40b47c:	stp	x19, x20, [sp, #16]
  40b480:	stp	x23, x24, [sp, #48]
  40b484:	stp	x25, x26, [sp, #64]
  40b488:	mov	x24, x0
  40b48c:	str	x2, [sp, #120]
  40b490:	mov	x25, x3
  40b494:	and	w0, w4, #0xff
  40b498:	str	w0, [sp, #132]
  40b49c:	str	x5, [sp, #136]
  40b4a0:	str	xzr, [sp, #224]
  40b4a4:	str	wzr, [sp, #232]
  40b4a8:	mov	w0, #0x10                  	// #16
  40b4ac:	strh	w0, [sp, #224]
  40b4b0:	stp	xzr, xzr, [sp, #160]
  40b4b4:	stp	xzr, xzr, [sp, #176]
  40b4b8:	stp	xzr, xzr, [sp, #192]
  40b4bc:	add	x0, sp, #0xe0
  40b4c0:	str	x0, [sp, #152]
  40b4c4:	mov	w0, #0xc                   	// #12
  40b4c8:	str	w0, [sp, #160]
  40b4cc:	str	x1, [sp, #168]
  40b4d0:	str	x2, [sp, #176]
  40b4d4:	cbz	x2, 40b518 <nl_dump_ext_ack@@Base+0xac>
  40b4d8:	mov	x0, x1
  40b4dc:	add	x2, x1, x2, lsl #4
  40b4e0:	b	40b4f0 <nl_dump_ext_ack@@Base+0x84>
  40b4e4:	add	x0, x0, #0x10
  40b4e8:	cmp	x0, x2
  40b4ec:	b.eq	40b51c <nl_dump_ext_ack@@Base+0xb0>  // b.none
  40b4f0:	ldr	x1, [x0]
  40b4f4:	ldr	w23, [x24, #28]
  40b4f8:	add	w23, w23, #0x1
  40b4fc:	str	w23, [x24, #28]
  40b500:	str	w23, [x1, #8]
  40b504:	cbnz	x25, 40b4e4 <nl_dump_ext_ack@@Base+0x78>
  40b508:	ldrh	w3, [x1, #6]
  40b50c:	orr	w3, w3, #0x4
  40b510:	strh	w3, [x1, #6]
  40b514:	b	40b4e4 <nl_dump_ext_ack@@Base+0x78>
  40b518:	mov	w23, #0x0                   	// #0
  40b51c:	mov	w2, #0x0                   	// #0
  40b520:	add	x1, sp, #0x98
  40b524:	ldr	w0, [x24]
  40b528:	bl	404f20 <sendmsg@plt>
  40b52c:	tbnz	w0, #31, 40b5c8 <nl_dump_ext_ack@@Base+0x15c>
  40b530:	stp	x21, x22, [sp, #32]
  40b534:	stp	x27, x28, [sp, #80]
  40b538:	add	x0, sp, #0xd0
  40b53c:	str	x0, [sp, #168]
  40b540:	mov	x0, #0x1                   	// #1
  40b544:	str	x0, [sp, #176]
  40b548:	str	xzr, [sp, #96]
  40b54c:	add	x0, sp, #0x90
  40b550:	str	x0, [sp, #104]
  40b554:	add	x0, sp, #0x98
  40b558:	str	x0, [sp, #112]
  40b55c:	mov	w26, w23
  40b560:	ldr	x0, [sp, #120]
  40b564:	sub	x26, x26, x0
  40b568:	ldr	w0, [sp, #96]
  40b56c:	str	w0, [sp, #128]
  40b570:	ldr	x2, [sp, #104]
  40b574:	ldr	x1, [sp, #112]
  40b578:	ldr	w0, [x24]
  40b57c:	bl	40b390 <jsonw_null_field@@Base+0x144>
  40b580:	mov	w20, w0
  40b584:	tbnz	w0, #31, 40b884 <nl_dump_ext_ack@@Base+0x418>
  40b588:	ldr	w2, [sp, #160]
  40b58c:	cmp	w2, #0xc
  40b590:	b.ne	40b5dc <nl_dump_ext_ack@@Base+0x170>  // b.any
  40b594:	ldr	x21, [sp, #144]
  40b598:	mov	w22, w0
  40b59c:	cmp	w0, #0xf
  40b5a0:	b.ls	40b818 <nl_dump_ext_ack@@Base+0x3ac>  // b.plast
  40b5a4:	ldr	w19, [x21]
  40b5a8:	mov	w2, w19
  40b5ac:	subs	w3, w19, #0x10
  40b5b0:	ccmp	w0, w19, #0x1, pl  // pl = nfrst
  40b5b4:	b.lt	40b5fc <nl_dump_ext_ack@@Base+0x190>  // b.tstop
  40b5b8:	adrp	x27, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b5bc:	ldr	x27, [x27, #3992]
  40b5c0:	adrp	x28, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b5c4:	b	40b6a0 <nl_dump_ext_ack@@Base+0x234>
  40b5c8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b5cc:	add	x0, x0, #0x470
  40b5d0:	bl	404d70 <perror@plt>
  40b5d4:	mov	w20, #0xffffffff            	// #-1
  40b5d8:	b	40b638 <nl_dump_ext_ack@@Base+0x1cc>
  40b5dc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b5e0:	add	x1, x1, #0x490
  40b5e4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b5e8:	ldr	x0, [x0, #3992]
  40b5ec:	ldr	x0, [x0]
  40b5f0:	bl	405250 <fprintf@plt>
  40b5f4:	mov	w0, #0x1                   	// #1
  40b5f8:	bl	404d60 <exit@plt>
  40b5fc:	ldr	w0, [sp, #200]
  40b600:	tbz	w0, #5, 40b650 <nl_dump_ext_ack@@Base+0x1e4>
  40b604:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b608:	ldr	x0, [x0, #3992]
  40b60c:	ldr	x3, [x0]
  40b610:	mov	x2, #0x12                  	// #18
  40b614:	mov	x1, #0x1                   	// #1
  40b618:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b61c:	add	x0, x0, #0x4b0
  40b620:	bl	4050d0 <fwrite@plt>
  40b624:	ldr	x0, [sp, #144]
  40b628:	bl	405070 <free@plt>
  40b62c:	mov	w20, #0xffffffff            	// #-1
  40b630:	ldp	x21, x22, [sp, #32]
  40b634:	ldp	x27, x28, [sp, #80]
  40b638:	mov	w0, w20
  40b63c:	ldp	x19, x20, [sp, #16]
  40b640:	ldp	x23, x24, [sp, #48]
  40b644:	ldp	x25, x26, [sp, #64]
  40b648:	ldp	x29, x30, [sp], #240
  40b64c:	ret
  40b650:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b654:	add	x1, x1, #0x4c8
  40b658:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b65c:	ldr	x0, [x0, #3992]
  40b660:	ldr	x0, [x0]
  40b664:	bl	405250 <fprintf@plt>
  40b668:	mov	w0, #0x1                   	// #1
  40b66c:	bl	404d60 <exit@plt>
  40b670:	add	w19, w19, #0x3
  40b674:	and	w19, w19, #0xfffffffc
  40b678:	sub	w20, w22, w19
  40b67c:	add	x21, x21, w19, uxtw
  40b680:	mov	w22, w20
  40b684:	cmp	w20, #0xf
  40b688:	b.ls	40b818 <nl_dump_ext_ack@@Base+0x3ac>  // b.plast
  40b68c:	ldr	w19, [x21]
  40b690:	mov	w2, w19
  40b694:	subs	w3, w19, #0x10
  40b698:	ccmp	w20, w19, #0x1, pl  // pl = nfrst
  40b69c:	b.lt	40b5fc <nl_dump_ext_ack@@Base+0x190>  // b.tstop
  40b6a0:	ldr	w0, [sp, #228]
  40b6a4:	cbnz	w0, 40b670 <nl_dump_ext_ack@@Base+0x204>
  40b6a8:	ldr	w1, [x21, #12]
  40b6ac:	ldr	w0, [x24, #8]
  40b6b0:	cmp	w1, w0
  40b6b4:	b.ne	40b670 <nl_dump_ext_ack@@Base+0x204>  // b.any
  40b6b8:	ldr	w0, [x21, #8]
  40b6bc:	cmp	w0, w23
  40b6c0:	b.hi	40b670 <nl_dump_ext_ack@@Base+0x204>  // b.pmore
  40b6c4:	cmp	x26, w0, uxtw
  40b6c8:	b.hi	40b670 <nl_dump_ext_ack@@Base+0x204>  // b.pmore
  40b6cc:	ldrh	w0, [x21, #4]
  40b6d0:	cmp	w0, #0x2
  40b6d4:	b.eq	40b704 <nl_dump_ext_ack@@Base+0x298>  // b.none
  40b6d8:	cbnz	x25, 40b800 <nl_dump_ext_ack@@Base+0x394>
  40b6dc:	ldr	x3, [x27]
  40b6e0:	mov	x2, #0x14                  	// #20
  40b6e4:	mov	x1, #0x1                   	// #1
  40b6e8:	add	x0, x28, #0x518
  40b6ec:	bl	4050d0 <fwrite@plt>
  40b6f0:	add	w19, w19, #0x3
  40b6f4:	and	w19, w19, #0xfffffffc
  40b6f8:	sub	w20, w22, w19
  40b6fc:	add	x21, x21, w19, uxtw
  40b700:	b	40b680 <nl_dump_ext_ack@@Base+0x214>
  40b704:	ldr	w20, [x21, #16]
  40b708:	cmp	w3, #0x13
  40b70c:	b.ls	40b76c <nl_dump_ext_ack@@Base+0x300>  // b.plast
  40b710:	cbz	w20, 40b7a4 <nl_dump_ext_ack@@Base+0x338>
  40b714:	bl	405200 <__errno_location@plt>
  40b718:	neg	w1, w20
  40b71c:	str	w1, [x0]
  40b720:	ldr	w0, [x24, #36]
  40b724:	ldr	w1, [sp, #132]
  40b728:	cmp	w1, #0x0
  40b72c:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  40b730:	b.ne	40b7b4 <nl_dump_ext_ack@@Base+0x348>  // b.any
  40b734:	cbz	x25, 40b7f4 <nl_dump_ext_ack@@Base+0x388>
  40b738:	ldr	x0, [sp, #144]
  40b73c:	str	x0, [x25]
  40b740:	ldr	x0, [sp, #96]
  40b744:	add	x0, x0, #0x1
  40b748:	ldr	x1, [sp, #120]
  40b74c:	cmp	x1, x0
  40b750:	b.hi	40b82c <nl_dump_ext_ack@@Base+0x3c0>  // b.pmore
  40b754:	cmp	w20, #0x0
  40b758:	ldr	w0, [sp, #128]
  40b75c:	csinv	w20, w20, w0, eq  // eq = none
  40b760:	ldp	x21, x22, [sp, #32]
  40b764:	ldp	x27, x28, [sp, #80]
  40b768:	b	40b638 <nl_dump_ext_ack@@Base+0x1cc>
  40b76c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b770:	ldr	x0, [x0, #3992]
  40b774:	ldr	x3, [x0]
  40b778:	mov	x2, #0x10                  	// #16
  40b77c:	mov	x1, #0x1                   	// #1
  40b780:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b784:	add	x0, x0, #0x4e8
  40b788:	bl	4050d0 <fwrite@plt>
  40b78c:	ldr	x0, [sp, #144]
  40b790:	bl	405070 <free@plt>
  40b794:	mov	w20, #0xffffffff            	// #-1
  40b798:	ldp	x21, x22, [sp, #32]
  40b79c:	ldp	x27, x28, [sp, #80]
  40b7a0:	b	40b638 <nl_dump_ext_ack@@Base+0x1cc>
  40b7a4:	ldr	x1, [sp, #136]
  40b7a8:	mov	x0, x21
  40b7ac:	bl	40b46c <nl_dump_ext_ack@@Base>
  40b7b0:	b	40b734 <nl_dump_ext_ack@@Base+0x2c8>
  40b7b4:	ldr	x1, [sp, #136]
  40b7b8:	mov	x0, x21
  40b7bc:	bl	40b46c <nl_dump_ext_ack@@Base>
  40b7c0:	cbnz	w0, 40b734 <nl_dump_ext_ack@@Base+0x2c8>
  40b7c4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b7c8:	ldr	x0, [x0, #3992]
  40b7cc:	ldr	x19, [x0]
  40b7d0:	ldr	w0, [x21, #16]
  40b7d4:	neg	w0, w0
  40b7d8:	bl	404f90 <strerror@plt>
  40b7dc:	mov	x2, x0
  40b7e0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b7e4:	add	x1, x1, #0x500
  40b7e8:	mov	x0, x19
  40b7ec:	bl	405250 <fprintf@plt>
  40b7f0:	b	40b734 <nl_dump_ext_ack@@Base+0x2c8>
  40b7f4:	ldr	x0, [sp, #144]
  40b7f8:	bl	405070 <free@plt>
  40b7fc:	b	40b740 <nl_dump_ext_ack@@Base+0x2d4>
  40b800:	ldr	x0, [sp, #144]
  40b804:	str	x0, [x25]
  40b808:	mov	w20, #0x0                   	// #0
  40b80c:	ldp	x21, x22, [sp, #32]
  40b810:	ldp	x27, x28, [sp, #80]
  40b814:	b	40b638 <nl_dump_ext_ack@@Base+0x1cc>
  40b818:	ldr	x0, [sp, #144]
  40b81c:	bl	405070 <free@plt>
  40b820:	ldr	w0, [sp, #200]
  40b824:	tbnz	w0, #5, 40b83c <nl_dump_ext_ack@@Base+0x3d0>
  40b828:	cbnz	w20, 40b860 <nl_dump_ext_ack@@Base+0x3f4>
  40b82c:	ldr	x0, [sp, #96]
  40b830:	add	x0, x0, #0x1
  40b834:	str	x0, [sp, #96]
  40b838:	b	40b568 <nl_dump_ext_ack@@Base+0xfc>
  40b83c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b840:	ldr	x0, [x0, #3992]
  40b844:	ldr	x3, [x0]
  40b848:	mov	x2, #0x12                  	// #18
  40b84c:	mov	x1, #0x1                   	// #1
  40b850:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b854:	add	x0, x0, #0x530
  40b858:	bl	4050d0 <fwrite@plt>
  40b85c:	b	40b82c <nl_dump_ext_ack@@Base+0x3c0>
  40b860:	mov	w2, w20
  40b864:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40b868:	add	x1, x1, #0x548
  40b86c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b870:	ldr	x0, [x0, #3992]
  40b874:	ldr	x0, [x0]
  40b878:	bl	405250 <fprintf@plt>
  40b87c:	mov	w0, #0x1                   	// #1
  40b880:	bl	404d60 <exit@plt>
  40b884:	ldp	x21, x22, [sp, #32]
  40b888:	ldp	x27, x28, [sp, #80]
  40b88c:	b	40b638 <nl_dump_ext_ack@@Base+0x1cc>

000000000040b890 <nl_dump_ext_ack_done@@Base>:
  40b890:	mov	w0, #0x0                   	// #0
  40b894:	ret

000000000040b898 <rtnl_set_strict_dump@@Base>:
  40b898:	stp	x29, x30, [sp, #-48]!
  40b89c:	mov	x29, sp
  40b8a0:	str	x19, [sp, #16]
  40b8a4:	mov	x19, x0
  40b8a8:	mov	w0, #0x1                   	// #1
  40b8ac:	str	w0, [sp, #44]
  40b8b0:	mov	w4, #0x4                   	// #4
  40b8b4:	add	x3, sp, #0x2c
  40b8b8:	mov	w2, #0xc                   	// #12
  40b8bc:	mov	w1, #0x10e                 	// #270
  40b8c0:	ldr	w0, [x19]
  40b8c4:	bl	404ea0 <setsockopt@plt>
  40b8c8:	tbnz	w0, #31, 40b8d8 <rtnl_set_strict_dump@@Base+0x40>
  40b8cc:	ldr	w0, [x19, #48]
  40b8d0:	orr	w0, w0, #0x4
  40b8d4:	str	w0, [x19, #48]
  40b8d8:	ldr	x19, [sp, #16]
  40b8dc:	ldp	x29, x30, [sp], #48
  40b8e0:	ret

000000000040b8e4 <rtnl_add_nl_group@@Base>:
  40b8e4:	stp	x29, x30, [sp, #-32]!
  40b8e8:	mov	x29, sp
  40b8ec:	str	w1, [sp, #28]
  40b8f0:	mov	w4, #0x4                   	// #4
  40b8f4:	add	x3, sp, #0x1c
  40b8f8:	mov	w2, #0x1                   	// #1
  40b8fc:	mov	w1, #0x10e                 	// #270
  40b900:	ldr	w0, [x0]
  40b904:	bl	404ea0 <setsockopt@plt>
  40b908:	ldp	x29, x30, [sp], #32
  40b90c:	ret

000000000040b910 <rtnl_close@@Base>:
  40b910:	stp	x29, x30, [sp, #-32]!
  40b914:	mov	x29, sp
  40b918:	str	x19, [sp, #16]
  40b91c:	mov	x19, x0
  40b920:	ldr	w0, [x0]
  40b924:	tbz	w0, #31, 40b934 <rtnl_close@@Base+0x24>
  40b928:	ldr	x19, [sp, #16]
  40b92c:	ldp	x29, x30, [sp], #32
  40b930:	ret
  40b934:	bl	404fa0 <close@plt>
  40b938:	mov	w0, #0xffffffff            	// #-1
  40b93c:	str	w0, [x19]
  40b940:	b	40b928 <rtnl_close@@Base+0x18>

000000000040b944 <rtnl_open_byproto@@Base>:
  40b944:	stp	x29, x30, [sp, #-64]!
  40b948:	mov	x29, sp
  40b94c:	stp	x19, x20, [sp, #16]
  40b950:	str	x21, [sp, #32]
  40b954:	mov	x19, x0
  40b958:	mov	w21, w1
  40b95c:	mov	w0, #0x8000                	// #32768
  40b960:	str	w0, [sp, #56]
  40b964:	mov	w0, #0x1                   	// #1
  40b968:	str	w0, [sp, #52]
  40b96c:	stp	xzr, xzr, [x19]
  40b970:	stp	xzr, xzr, [x19, #16]
  40b974:	stp	xzr, xzr, [x19, #32]
  40b978:	str	xzr, [x19, #48]
  40b97c:	str	w2, [x19, #36]
  40b980:	mov	w1, #0x3                   	// #3
  40b984:	movk	w1, #0x8, lsl #16
  40b988:	mov	w0, #0x10                  	// #16
  40b98c:	bl	4050e0 <socket@plt>
  40b990:	str	w0, [x19]
  40b994:	tbnz	w0, #31, 40ba68 <rtnl_open_byproto@@Base+0x124>
  40b998:	mov	w4, #0x4                   	// #4
  40b99c:	add	x3, sp, #0x38
  40b9a0:	mov	w2, #0x7                   	// #7
  40b9a4:	mov	w1, #0x1                   	// #1
  40b9a8:	bl	404ea0 <setsockopt@plt>
  40b9ac:	tbnz	w0, #31, 40ba7c <rtnl_open_byproto@@Base+0x138>
  40b9b0:	mov	w4, #0x4                   	// #4
  40b9b4:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x139b8>
  40b9b8:	ldr	x3, [x3, #4024]
  40b9bc:	mov	w2, #0x8                   	// #8
  40b9c0:	mov	w1, #0x1                   	// #1
  40b9c4:	ldr	w0, [x19]
  40b9c8:	bl	404ea0 <setsockopt@plt>
  40b9cc:	tbnz	w0, #31, 40ba90 <rtnl_open_byproto@@Base+0x14c>
  40b9d0:	mov	x20, x19
  40b9d4:	mov	w4, #0x4                   	// #4
  40b9d8:	add	x3, sp, #0x34
  40b9dc:	mov	w2, #0xb                   	// #11
  40b9e0:	mov	w1, #0x10e                 	// #270
  40b9e4:	ldr	w0, [x20], #4
  40b9e8:	bl	404ea0 <setsockopt@plt>
  40b9ec:	stur	wzr, [x19, #6]
  40b9f0:	strh	wzr, [x19, #10]
  40b9f4:	mov	w0, #0x10                  	// #16
  40b9f8:	strh	w0, [x19, #4]
  40b9fc:	str	w21, [x19, #12]
  40ba00:	mov	w2, #0xc                   	// #12
  40ba04:	mov	x1, x20
  40ba08:	ldr	w0, [x19]
  40ba0c:	bl	404dc0 <bind@plt>
  40ba10:	tbnz	w0, #31, 40baa4 <rtnl_open_byproto@@Base+0x160>
  40ba14:	mov	w0, #0xc                   	// #12
  40ba18:	str	w0, [sp, #60]
  40ba1c:	add	x2, sp, #0x3c
  40ba20:	mov	x1, x20
  40ba24:	ldr	w0, [x19]
  40ba28:	bl	405240 <getsockname@plt>
  40ba2c:	tbnz	w0, #31, 40bab8 <rtnl_open_byproto@@Base+0x174>
  40ba30:	ldr	w2, [sp, #60]
  40ba34:	cmp	w2, #0xc
  40ba38:	b.ne	40bacc <rtnl_open_byproto@@Base+0x188>  // b.any
  40ba3c:	ldrh	w2, [x19, #4]
  40ba40:	cmp	w2, #0x10
  40ba44:	b.ne	40baec <rtnl_open_byproto@@Base+0x1a8>  // b.any
  40ba48:	mov	x0, #0x0                   	// #0
  40ba4c:	bl	404e80 <time@plt>
  40ba50:	str	w0, [x19, #28]
  40ba54:	mov	w0, #0x0                   	// #0
  40ba58:	ldp	x19, x20, [sp, #16]
  40ba5c:	ldr	x21, [sp, #32]
  40ba60:	ldp	x29, x30, [sp], #64
  40ba64:	ret
  40ba68:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ba6c:	add	x0, x0, #0x560
  40ba70:	bl	404d70 <perror@plt>
  40ba74:	mov	w0, #0xffffffff            	// #-1
  40ba78:	b	40ba58 <rtnl_open_byproto@@Base+0x114>
  40ba7c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ba80:	add	x0, x0, #0x580
  40ba84:	bl	404d70 <perror@plt>
  40ba88:	mov	w0, #0xffffffff            	// #-1
  40ba8c:	b	40ba58 <rtnl_open_byproto@@Base+0x114>
  40ba90:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ba94:	add	x0, x0, #0x590
  40ba98:	bl	404d70 <perror@plt>
  40ba9c:	mov	w0, #0xffffffff            	// #-1
  40baa0:	b	40ba58 <rtnl_open_byproto@@Base+0x114>
  40baa4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40baa8:	add	x0, x0, #0x5a0
  40baac:	bl	404d70 <perror@plt>
  40bab0:	mov	w0, #0xffffffff            	// #-1
  40bab4:	b	40ba58 <rtnl_open_byproto@@Base+0x114>
  40bab8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40babc:	add	x0, x0, #0x5c0
  40bac0:	bl	404d70 <perror@plt>
  40bac4:	mov	w0, #0xffffffff            	// #-1
  40bac8:	b	40ba58 <rtnl_open_byproto@@Base+0x114>
  40bacc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40bad0:	add	x1, x1, #0x5d8
  40bad4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40bad8:	ldr	x0, [x0, #3992]
  40badc:	ldr	x0, [x0]
  40bae0:	bl	405250 <fprintf@plt>
  40bae4:	mov	w0, #0xffffffff            	// #-1
  40bae8:	b	40ba58 <rtnl_open_byproto@@Base+0x114>
  40baec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40baf0:	add	x1, x1, #0x5f8
  40baf4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40baf8:	ldr	x0, [x0, #3992]
  40bafc:	ldr	x0, [x0]
  40bb00:	bl	405250 <fprintf@plt>
  40bb04:	mov	w0, #0xffffffff            	// #-1
  40bb08:	b	40ba58 <rtnl_open_byproto@@Base+0x114>

000000000040bb0c <rtnl_open@@Base>:
  40bb0c:	stp	x29, x30, [sp, #-16]!
  40bb10:	mov	x29, sp
  40bb14:	mov	w2, #0x0                   	// #0
  40bb18:	bl	40b944 <rtnl_open_byproto@@Base>
  40bb1c:	ldp	x29, x30, [sp], #16
  40bb20:	ret

000000000040bb24 <rtnl_nexthopdump_req@@Base>:
  40bb24:	stp	x29, x30, [sp, #-192]!
  40bb28:	mov	x29, sp
  40bb2c:	str	x19, [sp, #16]
  40bb30:	mov	x19, x0
  40bb34:	stp	xzr, xzr, [sp, #48]
  40bb38:	stp	xzr, xzr, [sp, #64]
  40bb3c:	stp	xzr, xzr, [sp, #80]
  40bb40:	stp	xzr, xzr, [sp, #96]
  40bb44:	stp	xzr, xzr, [sp, #112]
  40bb48:	stp	xzr, xzr, [sp, #128]
  40bb4c:	stp	xzr, xzr, [sp, #144]
  40bb50:	stp	xzr, xzr, [sp, #160]
  40bb54:	stp	xzr, xzr, [sp, #176]
  40bb58:	mov	w0, #0x18                  	// #24
  40bb5c:	str	w0, [sp, #40]
  40bb60:	mov	w0, #0x6a                  	// #106
  40bb64:	strh	w0, [sp, #44]
  40bb68:	mov	w0, #0x301                 	// #769
  40bb6c:	strh	w0, [sp, #46]
  40bb70:	ldr	w0, [x19, #28]
  40bb74:	add	w0, w0, #0x1
  40bb78:	str	w0, [x19, #28]
  40bb7c:	str	w0, [x19, #32]
  40bb80:	str	w0, [sp, #48]
  40bb84:	strb	w1, [sp, #56]
  40bb88:	cbz	x2, 40bb9c <rtnl_nexthopdump_req@@Base+0x78>
  40bb8c:	mov	w1, #0x98                  	// #152
  40bb90:	add	x0, sp, #0x28
  40bb94:	blr	x2
  40bb98:	cbnz	w0, 40bbb0 <rtnl_nexthopdump_req@@Base+0x8c>
  40bb9c:	mov	w3, #0x0                   	// #0
  40bba0:	mov	x2, #0x98                  	// #152
  40bba4:	add	x1, sp, #0x28
  40bba8:	ldr	w0, [x19]
  40bbac:	bl	405090 <send@plt>
  40bbb0:	ldr	x19, [sp, #16]
  40bbb4:	ldp	x29, x30, [sp], #192
  40bbb8:	ret

000000000040bbbc <rtnl_addrdump_req@@Base>:
  40bbbc:	stp	x29, x30, [sp, #-192]!
  40bbc0:	mov	x29, sp
  40bbc4:	str	x19, [sp, #16]
  40bbc8:	mov	x19, x0
  40bbcc:	stp	xzr, xzr, [sp, #48]
  40bbd0:	stp	xzr, xzr, [sp, #64]
  40bbd4:	stp	xzr, xzr, [sp, #80]
  40bbd8:	stp	xzr, xzr, [sp, #96]
  40bbdc:	stp	xzr, xzr, [sp, #112]
  40bbe0:	stp	xzr, xzr, [sp, #128]
  40bbe4:	stp	xzr, xzr, [sp, #144]
  40bbe8:	stp	xzr, xzr, [sp, #160]
  40bbec:	stp	xzr, xzr, [sp, #176]
  40bbf0:	mov	w0, #0x18                  	// #24
  40bbf4:	str	w0, [sp, #40]
  40bbf8:	mov	w0, #0x16                  	// #22
  40bbfc:	strh	w0, [sp, #44]
  40bc00:	mov	w0, #0x301                 	// #769
  40bc04:	strh	w0, [sp, #46]
  40bc08:	ldr	w0, [x19, #28]
  40bc0c:	add	w0, w0, #0x1
  40bc10:	str	w0, [x19, #28]
  40bc14:	str	w0, [x19, #32]
  40bc18:	str	w0, [sp, #48]
  40bc1c:	strb	w1, [sp, #56]
  40bc20:	cbz	x2, 40bc34 <rtnl_addrdump_req@@Base+0x78>
  40bc24:	mov	w1, #0x98                  	// #152
  40bc28:	add	x0, sp, #0x28
  40bc2c:	blr	x2
  40bc30:	cbnz	w0, 40bc48 <rtnl_addrdump_req@@Base+0x8c>
  40bc34:	mov	w3, #0x0                   	// #0
  40bc38:	mov	x2, #0x98                  	// #152
  40bc3c:	add	x1, sp, #0x28
  40bc40:	ldr	w0, [x19]
  40bc44:	bl	405090 <send@plt>
  40bc48:	ldr	x19, [sp, #16]
  40bc4c:	ldp	x29, x30, [sp], #192
  40bc50:	ret

000000000040bc54 <rtnl_addrlbldump_req@@Base>:
  40bc54:	stp	x29, x30, [sp, #-48]!
  40bc58:	mov	x29, sp
  40bc5c:	stp	xzr, xzr, [sp, #24]
  40bc60:	str	wzr, [sp, #40]
  40bc64:	mov	w2, #0x1c                  	// #28
  40bc68:	str	w2, [sp, #16]
  40bc6c:	mov	w2, #0x4a                  	// #74
  40bc70:	strh	w2, [sp, #20]
  40bc74:	mov	w2, #0x301                 	// #769
  40bc78:	strh	w2, [sp, #22]
  40bc7c:	ldr	w2, [x0, #28]
  40bc80:	add	w2, w2, #0x1
  40bc84:	str	w2, [x0, #28]
  40bc88:	str	w2, [x0, #32]
  40bc8c:	str	w2, [sp, #24]
  40bc90:	strb	w1, [sp, #32]
  40bc94:	mov	w3, #0x0                   	// #0
  40bc98:	mov	x2, #0x1c                  	// #28
  40bc9c:	add	x1, sp, #0x10
  40bca0:	ldr	w0, [x0]
  40bca4:	bl	405090 <send@plt>
  40bca8:	ldp	x29, x30, [sp], #48
  40bcac:	ret

000000000040bcb0 <rtnl_routedump_req@@Base>:
  40bcb0:	stp	x29, x30, [sp, #-192]!
  40bcb4:	mov	x29, sp
  40bcb8:	str	x19, [sp, #16]
  40bcbc:	mov	x19, x0
  40bcc0:	stp	xzr, xzr, [sp, #40]
  40bcc4:	stp	xzr, xzr, [sp, #56]
  40bcc8:	stp	xzr, xzr, [sp, #72]
  40bccc:	stp	xzr, xzr, [sp, #88]
  40bcd0:	stp	xzr, xzr, [sp, #104]
  40bcd4:	stp	xzr, xzr, [sp, #120]
  40bcd8:	stp	xzr, xzr, [sp, #136]
  40bcdc:	stp	xzr, xzr, [sp, #152]
  40bce0:	stp	xzr, xzr, [sp, #168]
  40bce4:	str	wzr, [sp, #184]
  40bce8:	mov	w0, #0x1c                  	// #28
  40bcec:	str	w0, [sp, #32]
  40bcf0:	mov	w0, #0x1a                  	// #26
  40bcf4:	strh	w0, [sp, #36]
  40bcf8:	mov	w0, #0x301                 	// #769
  40bcfc:	strh	w0, [sp, #38]
  40bd00:	ldr	w0, [x19, #28]
  40bd04:	add	w0, w0, #0x1
  40bd08:	str	w0, [x19, #28]
  40bd0c:	str	w0, [x19, #32]
  40bd10:	str	w0, [sp, #40]
  40bd14:	strb	w1, [sp, #48]
  40bd18:	cbz	x2, 40bd2c <rtnl_routedump_req@@Base+0x7c>
  40bd1c:	mov	w1, #0x9c                  	// #156
  40bd20:	add	x0, sp, #0x20
  40bd24:	blr	x2
  40bd28:	cbnz	w0, 40bd40 <rtnl_routedump_req@@Base+0x90>
  40bd2c:	mov	w3, #0x0                   	// #0
  40bd30:	mov	x2, #0x9c                  	// #156
  40bd34:	add	x1, sp, #0x20
  40bd38:	ldr	w0, [x19]
  40bd3c:	bl	405090 <send@plt>
  40bd40:	ldr	x19, [sp, #16]
  40bd44:	ldp	x29, x30, [sp], #192
  40bd48:	ret

000000000040bd4c <rtnl_ruledump_req@@Base>:
  40bd4c:	stp	x29, x30, [sp, #-48]!
  40bd50:	mov	x29, sp
  40bd54:	stp	xzr, xzr, [sp, #24]
  40bd58:	str	wzr, [sp, #40]
  40bd5c:	mov	w2, #0x1c                  	// #28
  40bd60:	str	w2, [sp, #16]
  40bd64:	mov	w2, #0x22                  	// #34
  40bd68:	strh	w2, [sp, #20]
  40bd6c:	mov	w2, #0x301                 	// #769
  40bd70:	strh	w2, [sp, #22]
  40bd74:	ldr	w2, [x0, #28]
  40bd78:	add	w2, w2, #0x1
  40bd7c:	str	w2, [x0, #28]
  40bd80:	str	w2, [x0, #32]
  40bd84:	str	w2, [sp, #24]
  40bd88:	strb	w1, [sp, #32]
  40bd8c:	mov	w3, #0x0                   	// #0
  40bd90:	mov	x2, #0x1c                  	// #28
  40bd94:	add	x1, sp, #0x10
  40bd98:	ldr	w0, [x0]
  40bd9c:	bl	405090 <send@plt>
  40bda0:	ldp	x29, x30, [sp], #48
  40bda4:	ret

000000000040bda8 <rtnl_neighdump_req@@Base>:
  40bda8:	stp	x29, x30, [sp, #-336]!
  40bdac:	mov	x29, sp
  40bdb0:	stp	x19, x20, [sp, #16]
  40bdb4:	str	x21, [sp, #32]
  40bdb8:	mov	x19, x0
  40bdbc:	mov	w21, w1
  40bdc0:	mov	x20, x2
  40bdc4:	mov	x2, #0x11c                 	// #284
  40bdc8:	mov	w1, #0x0                   	// #0
  40bdcc:	add	x0, sp, #0x30
  40bdd0:	bl	404f00 <memset@plt>
  40bdd4:	mov	w0, #0x1c                  	// #28
  40bdd8:	str	w0, [sp, #48]
  40bddc:	mov	w0, #0x1e                  	// #30
  40bde0:	strh	w0, [sp, #52]
  40bde4:	mov	w0, #0x301                 	// #769
  40bde8:	strh	w0, [sp, #54]
  40bdec:	ldr	w0, [x19, #28]
  40bdf0:	add	w0, w0, #0x1
  40bdf4:	str	w0, [x19, #28]
  40bdf8:	str	w0, [x19, #32]
  40bdfc:	str	w0, [sp, #56]
  40be00:	strb	w21, [sp, #64]
  40be04:	cbz	x20, 40be18 <rtnl_neighdump_req@@Base+0x70>
  40be08:	mov	w1, #0x11c                 	// #284
  40be0c:	add	x0, sp, #0x30
  40be10:	blr	x20
  40be14:	cbnz	w0, 40be2c <rtnl_neighdump_req@@Base+0x84>
  40be18:	mov	w3, #0x0                   	// #0
  40be1c:	mov	x2, #0x11c                 	// #284
  40be20:	add	x1, sp, #0x30
  40be24:	ldr	w0, [x19]
  40be28:	bl	405090 <send@plt>
  40be2c:	ldp	x19, x20, [sp, #16]
  40be30:	ldr	x21, [sp, #32]
  40be34:	ldp	x29, x30, [sp], #336
  40be38:	ret

000000000040be3c <rtnl_neightbldump_req@@Base>:
  40be3c:	stp	x29, x30, [sp, #-48]!
  40be40:	mov	x29, sp
  40be44:	stur	xzr, [sp, #36]
  40be48:	mov	w2, #0x14                  	// #20
  40be4c:	str	w2, [sp, #24]
  40be50:	mov	w2, #0x42                  	// #66
  40be54:	strh	w2, [sp, #28]
  40be58:	mov	w2, #0x301                 	// #769
  40be5c:	strh	w2, [sp, #30]
  40be60:	ldr	w2, [x0, #28]
  40be64:	add	w2, w2, #0x1
  40be68:	str	w2, [x0, #28]
  40be6c:	str	w2, [x0, #32]
  40be70:	str	w2, [sp, #32]
  40be74:	strb	w1, [sp, #40]
  40be78:	mov	w3, #0x0                   	// #0
  40be7c:	mov	x2, #0x14                  	// #20
  40be80:	add	x1, sp, #0x18
  40be84:	ldr	w0, [x0]
  40be88:	bl	405090 <send@plt>
  40be8c:	ldp	x29, x30, [sp], #48
  40be90:	ret

000000000040be94 <rtnl_mdbdump_req@@Base>:
  40be94:	stp	x29, x30, [sp, #-48]!
  40be98:	mov	x29, sp
  40be9c:	stp	xzr, xzr, [sp, #32]
  40bea0:	mov	w2, #0x18                  	// #24
  40bea4:	str	w2, [sp, #24]
  40bea8:	mov	w2, #0x56                  	// #86
  40beac:	strh	w2, [sp, #28]
  40beb0:	mov	w2, #0x301                 	// #769
  40beb4:	strh	w2, [sp, #30]
  40beb8:	ldr	w2, [x0, #28]
  40bebc:	add	w2, w2, #0x1
  40bec0:	str	w2, [x0, #28]
  40bec4:	str	w2, [x0, #32]
  40bec8:	str	w2, [sp, #32]
  40becc:	strb	w1, [sp, #40]
  40bed0:	mov	w3, #0x0                   	// #0
  40bed4:	mov	x2, #0x18                  	// #24
  40bed8:	add	x1, sp, x2
  40bedc:	ldr	w0, [x0]
  40bee0:	bl	405090 <send@plt>
  40bee4:	ldp	x29, x30, [sp], #48
  40bee8:	ret

000000000040beec <rtnl_netconfdump_req@@Base>:
  40beec:	stp	x29, x30, [sp, #-48]!
  40bef0:	mov	x29, sp
  40bef4:	stur	xzr, [sp, #36]
  40bef8:	mov	w2, #0x14                  	// #20
  40befc:	str	w2, [sp, #24]
  40bf00:	mov	w2, #0x52                  	// #82
  40bf04:	strh	w2, [sp, #28]
  40bf08:	mov	w2, #0x301                 	// #769
  40bf0c:	strh	w2, [sp, #30]
  40bf10:	ldr	w2, [x0, #28]
  40bf14:	add	w2, w2, #0x1
  40bf18:	str	w2, [x0, #28]
  40bf1c:	str	w2, [x0, #32]
  40bf20:	str	w2, [sp, #32]
  40bf24:	strb	w1, [sp, #40]
  40bf28:	mov	w3, #0x0                   	// #0
  40bf2c:	mov	x2, #0x14                  	// #20
  40bf30:	add	x1, sp, #0x18
  40bf34:	ldr	w0, [x0]
  40bf38:	bl	405090 <send@plt>
  40bf3c:	ldp	x29, x30, [sp], #48
  40bf40:	ret

000000000040bf44 <rtnl_nsiddump_req_filter_fn@@Base>:
  40bf44:	sub	sp, sp, #0x450
  40bf48:	stp	x29, x30, [sp]
  40bf4c:	mov	x29, sp
  40bf50:	stp	x19, x20, [sp, #16]
  40bf54:	str	x21, [sp, #32]
  40bf58:	mov	x19, x0
  40bf5c:	mov	w21, w1
  40bf60:	mov	x20, x2
  40bf64:	mov	x2, #0x414                 	// #1044
  40bf68:	mov	w1, #0x0                   	// #0
  40bf6c:	add	x0, sp, #0x38
  40bf70:	bl	404f00 <memset@plt>
  40bf74:	mov	w0, #0x14                  	// #20
  40bf78:	str	w0, [sp, #56]
  40bf7c:	mov	w0, #0x5a                  	// #90
  40bf80:	strh	w0, [sp, #60]
  40bf84:	mov	w0, #0x301                 	// #769
  40bf88:	strh	w0, [sp, #62]
  40bf8c:	ldr	w0, [x19, #28]
  40bf90:	add	w0, w0, #0x1
  40bf94:	str	w0, [x19, #28]
  40bf98:	str	w0, [x19, #32]
  40bf9c:	str	w0, [sp, #64]
  40bfa0:	strb	w21, [sp, #72]
  40bfa4:	cbz	x20, 40bfe4 <rtnl_nsiddump_req_filter_fn@@Base+0xa0>
  40bfa8:	mov	w1, #0x414                 	// #1044
  40bfac:	add	x0, sp, #0x38
  40bfb0:	blr	x20
  40bfb4:	cbz	w0, 40bfcc <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40bfb8:	ldp	x19, x20, [sp, #16]
  40bfbc:	ldr	x21, [sp, #32]
  40bfc0:	ldp	x29, x30, [sp]
  40bfc4:	add	sp, sp, #0x450
  40bfc8:	ret
  40bfcc:	mov	w3, #0x0                   	// #0
  40bfd0:	ldr	w2, [sp, #56]
  40bfd4:	add	x1, sp, #0x38
  40bfd8:	ldr	w0, [x19]
  40bfdc:	bl	405090 <send@plt>
  40bfe0:	b	40bfb8 <rtnl_nsiddump_req_filter_fn@@Base+0x74>
  40bfe4:	mov	w0, #0xffffffea            	// #-22
  40bfe8:	b	40bfb8 <rtnl_nsiddump_req_filter_fn@@Base+0x74>

000000000040bfec <rtnl_linkdump_req_filter@@Base>:
  40bfec:	stp	x29, x30, [sp, #-64]!
  40bff0:	mov	x29, sp
  40bff4:	cmp	w1, #0x0
  40bff8:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  40bffc:	b.eq	40c00c <rtnl_linkdump_req_filter@@Base+0x20>  // b.none
  40c000:	bl	40b274 <jsonw_null_field@@Base+0x28>
  40c004:	ldp	x29, x30, [sp], #64
  40c008:	ret
  40c00c:	stp	xzr, xzr, [sp, #32]
  40c010:	str	xzr, [sp, #48]
  40c014:	mov	w3, #0x28                  	// #40
  40c018:	str	w3, [sp, #24]
  40c01c:	mov	w3, #0x12                  	// #18
  40c020:	strh	w3, [sp, #28]
  40c024:	mov	w3, #0x301                 	// #769
  40c028:	strh	w3, [sp, #30]
  40c02c:	ldr	w3, [x0, #28]
  40c030:	add	w3, w3, #0x1
  40c034:	str	w3, [x0, #28]
  40c038:	str	w3, [x0, #32]
  40c03c:	str	w3, [sp, #32]
  40c040:	strb	w1, [sp, #40]
  40c044:	mov	w1, #0x8                   	// #8
  40c048:	strh	w1, [sp, #56]
  40c04c:	mov	w1, #0x1d                  	// #29
  40c050:	strh	w1, [sp, #58]
  40c054:	str	w2, [sp, #60]
  40c058:	mov	w3, #0x0                   	// #0
  40c05c:	mov	x2, #0x28                  	// #40
  40c060:	add	x1, sp, #0x18
  40c064:	ldr	w0, [x0]
  40c068:	bl	405090 <send@plt>
  40c06c:	b	40c004 <rtnl_linkdump_req_filter@@Base+0x18>

000000000040c070 <rtnl_linkdump_req@@Base>:
  40c070:	stp	x29, x30, [sp, #-16]!
  40c074:	mov	x29, sp
  40c078:	cbz	w1, 40c088 <rtnl_linkdump_req@@Base+0x18>
  40c07c:	bl	40b274 <jsonw_null_field@@Base+0x28>
  40c080:	ldp	x29, x30, [sp], #16
  40c084:	ret
  40c088:	mov	w2, #0x1                   	// #1
  40c08c:	bl	40bfec <rtnl_linkdump_req_filter@@Base>
  40c090:	b	40c080 <rtnl_linkdump_req@@Base+0x10>

000000000040c094 <rtnl_linkdump_req_filter_fn@@Base>:
  40c094:	sub	sp, sp, #0x450
  40c098:	stp	x29, x30, [sp]
  40c09c:	mov	x29, sp
  40c0a0:	stp	x19, x20, [sp, #16]
  40c0a4:	mov	x20, x0
  40c0a8:	mov	w19, w1
  40c0ac:	cmp	w1, #0x0
  40c0b0:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  40c0b4:	b.ne	40c150 <rtnl_linkdump_req_filter_fn@@Base+0xbc>  // b.any
  40c0b8:	str	x21, [sp, #32]
  40c0bc:	mov	x21, x2
  40c0c0:	mov	x2, #0x420                 	// #1056
  40c0c4:	mov	w1, #0x0                   	// #0
  40c0c8:	add	x0, sp, #0x30
  40c0cc:	bl	404f00 <memset@plt>
  40c0d0:	mov	w0, #0x20                  	// #32
  40c0d4:	str	w0, [sp, #48]
  40c0d8:	mov	w0, #0x12                  	// #18
  40c0dc:	strh	w0, [sp, #52]
  40c0e0:	mov	w0, #0x301                 	// #769
  40c0e4:	strh	w0, [sp, #54]
  40c0e8:	ldr	w0, [x20, #28]
  40c0ec:	add	w0, w0, #0x1
  40c0f0:	str	w0, [x20, #28]
  40c0f4:	str	w0, [x20, #32]
  40c0f8:	str	w0, [sp, #56]
  40c0fc:	strb	w19, [sp, #64]
  40c100:	cbz	x21, 40c144 <rtnl_linkdump_req_filter_fn@@Base+0xb0>
  40c104:	mov	w1, #0x420                 	// #1056
  40c108:	add	x0, sp, #0x30
  40c10c:	blr	x21
  40c110:	cbz	w0, 40c128 <rtnl_linkdump_req_filter_fn@@Base+0x94>
  40c114:	ldr	x21, [sp, #32]
  40c118:	ldp	x19, x20, [sp, #16]
  40c11c:	ldp	x29, x30, [sp]
  40c120:	add	sp, sp, #0x450
  40c124:	ret
  40c128:	mov	w3, #0x0                   	// #0
  40c12c:	ldr	w2, [sp, #48]
  40c130:	add	x1, sp, #0x30
  40c134:	ldr	w0, [x20]
  40c138:	bl	405090 <send@plt>
  40c13c:	ldr	x21, [sp, #32]
  40c140:	b	40c118 <rtnl_linkdump_req_filter_fn@@Base+0x84>
  40c144:	mov	w0, #0xffffffea            	// #-22
  40c148:	ldr	x21, [sp, #32]
  40c14c:	b	40c118 <rtnl_linkdump_req_filter_fn@@Base+0x84>
  40c150:	bl	40b274 <jsonw_null_field@@Base+0x28>
  40c154:	b	40c118 <rtnl_linkdump_req_filter_fn@@Base+0x84>

000000000040c158 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40c158:	stp	x29, x30, [sp, #-192]!
  40c15c:	mov	x29, sp
  40c160:	str	x19, [sp, #16]
  40c164:	mov	x19, x0
  40c168:	mov	x2, x1
  40c16c:	stp	xzr, xzr, [sp, #40]
  40c170:	stp	xzr, xzr, [sp, #56]
  40c174:	stp	xzr, xzr, [sp, #72]
  40c178:	stp	xzr, xzr, [sp, #88]
  40c17c:	stp	xzr, xzr, [sp, #104]
  40c180:	stp	xzr, xzr, [sp, #120]
  40c184:	stp	xzr, xzr, [sp, #136]
  40c188:	stp	xzr, xzr, [sp, #152]
  40c18c:	stp	xzr, xzr, [sp, #168]
  40c190:	str	xzr, [sp, #184]
  40c194:	mov	w0, #0x20                  	// #32
  40c198:	str	w0, [sp, #32]
  40c19c:	mov	w0, #0x1e                  	// #30
  40c1a0:	strh	w0, [sp, #36]
  40c1a4:	mov	w0, #0x301                 	// #769
  40c1a8:	strh	w0, [sp, #38]
  40c1ac:	ldr	w0, [x19, #28]
  40c1b0:	add	w0, w0, #0x1
  40c1b4:	str	w0, [x19, #28]
  40c1b8:	str	w0, [x19, #32]
  40c1bc:	str	w0, [sp, #40]
  40c1c0:	mov	w0, #0x7                   	// #7
  40c1c4:	strb	w0, [sp, #48]
  40c1c8:	mov	w1, #0xa0                  	// #160
  40c1cc:	add	x0, sp, #0x20
  40c1d0:	blr	x2
  40c1d4:	cbz	w0, 40c1e4 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x8c>
  40c1d8:	ldr	x19, [sp, #16]
  40c1dc:	ldp	x29, x30, [sp], #192
  40c1e0:	ret
  40c1e4:	mov	w3, #0x0                   	// #0
  40c1e8:	mov	x2, #0xa0                  	// #160
  40c1ec:	add	x1, sp, #0x20
  40c1f0:	ldr	w0, [x19]
  40c1f4:	bl	405090 <send@plt>
  40c1f8:	b	40c1d8 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x80>

000000000040c1fc <rtnl_statsdump_req_filter@@Base>:
  40c1fc:	stp	x29, x30, [sp, #-48]!
  40c200:	mov	x29, sp
  40c204:	stp	xzr, xzr, [sp, #24]
  40c208:	mov	w3, #0x1c                  	// #28
  40c20c:	str	w3, [sp, #16]
  40c210:	mov	w3, #0x5e                  	// #94
  40c214:	strh	w3, [sp, #20]
  40c218:	mov	w3, #0x301                 	// #769
  40c21c:	strh	w3, [sp, #22]
  40c220:	ldr	w3, [x0, #28]
  40c224:	add	w3, w3, #0x1
  40c228:	str	w3, [x0, #28]
  40c22c:	str	w3, [x0, #32]
  40c230:	str	w3, [sp, #24]
  40c234:	strb	w1, [sp, #32]
  40c238:	str	w2, [sp, #40]
  40c23c:	mov	w3, #0x0                   	// #0
  40c240:	mov	x2, #0x1c                  	// #28
  40c244:	add	x1, sp, #0x10
  40c248:	ldr	w0, [x0]
  40c24c:	bl	405090 <send@plt>
  40c250:	ldp	x29, x30, [sp], #48
  40c254:	ret

000000000040c258 <rtnl_send@@Base>:
  40c258:	stp	x29, x30, [sp, #-16]!
  40c25c:	mov	x29, sp
  40c260:	mov	w3, #0x0                   	// #0
  40c264:	sxtw	x2, w2
  40c268:	ldr	w0, [x0]
  40c26c:	bl	405090 <send@plt>
  40c270:	ldp	x29, x30, [sp], #16
  40c274:	ret

000000000040c278 <rtnl_send_check@@Base>:
  40c278:	sub	sp, sp, #0x420
  40c27c:	stp	x29, x30, [sp]
  40c280:	mov	x29, sp
  40c284:	str	x19, [sp, #16]
  40c288:	mov	x19, x0
  40c28c:	mov	w3, #0x0                   	// #0
  40c290:	sxtw	x2, w2
  40c294:	ldr	w0, [x0]
  40c298:	bl	405090 <send@plt>
  40c29c:	tbnz	w0, #31, 40c324 <rtnl_send_check@@Base+0xac>
  40c2a0:	mov	w3, #0x42                  	// #66
  40c2a4:	mov	x2, #0x400                 	// #1024
  40c2a8:	add	x1, sp, #0x20
  40c2ac:	ldr	w0, [x19]
  40c2b0:	bl	404fc0 <recv@plt>
  40c2b4:	mov	w1, w0
  40c2b8:	tbnz	w0, #31, 40c314 <rtnl_send_check@@Base+0x9c>
  40c2bc:	add	x19, sp, #0x20
  40c2c0:	cmp	w0, #0xf
  40c2c4:	b.le	40c30c <rtnl_send_check@@Base+0x94>
  40c2c8:	ldr	w0, [x19]
  40c2cc:	cmp	w0, #0xf
  40c2d0:	b.ls	40c384 <rtnl_send_check@@Base+0x10c>  // b.plast
  40c2d4:	mov	w2, w1
  40c2d8:	cmp	w0, w1
  40c2dc:	b.hi	40c37c <rtnl_send_check@@Base+0x104>  // b.pmore
  40c2e0:	ldrh	w1, [x19, #4]
  40c2e4:	cmp	w1, #0x2
  40c2e8:	b.eq	40c334 <rtnl_send_check@@Base+0xbc>  // b.none
  40c2ec:	add	w0, w0, #0x3
  40c2f0:	and	w0, w0, #0xfffffffc
  40c2f4:	sub	w1, w2, w0
  40c2f8:	add	x19, x19, w0, uxtw
  40c2fc:	cmp	w1, #0xf
  40c300:	b.gt	40c2c8 <rtnl_send_check@@Base+0x50>
  40c304:	mov	w0, #0x0                   	// #0
  40c308:	b	40c324 <rtnl_send_check@@Base+0xac>
  40c30c:	mov	w0, #0x0                   	// #0
  40c310:	b	40c324 <rtnl_send_check@@Base+0xac>
  40c314:	bl	405200 <__errno_location@plt>
  40c318:	ldr	w0, [x0]
  40c31c:	cmp	w0, #0xb
  40c320:	csetm	w0, ne  // ne = any
  40c324:	ldr	x19, [sp, #16]
  40c328:	ldp	x29, x30, [sp]
  40c32c:	add	sp, sp, #0x420
  40c330:	ret
  40c334:	cmp	w0, #0x23
  40c338:	b.ls	40c354 <rtnl_send_check@@Base+0xdc>  // b.plast
  40c33c:	bl	405200 <__errno_location@plt>
  40c340:	ldr	w1, [x19, #16]
  40c344:	neg	w1, w1
  40c348:	str	w1, [x0]
  40c34c:	mov	w0, #0xffffffff            	// #-1
  40c350:	b	40c324 <rtnl_send_check@@Base+0xac>
  40c354:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40c358:	ldr	x0, [x0, #3992]
  40c35c:	ldr	x3, [x0]
  40c360:	mov	x2, #0x10                  	// #16
  40c364:	mov	x1, #0x1                   	// #1
  40c368:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c36c:	add	x0, x0, #0x4e8
  40c370:	bl	4050d0 <fwrite@plt>
  40c374:	mov	w0, #0xffffffff            	// #-1
  40c378:	b	40c324 <rtnl_send_check@@Base+0xac>
  40c37c:	mov	w0, #0x0                   	// #0
  40c380:	b	40c324 <rtnl_send_check@@Base+0xac>
  40c384:	mov	w0, #0x0                   	// #0
  40c388:	b	40c324 <rtnl_send_check@@Base+0xac>

000000000040c38c <rtnl_dump_request@@Base>:
  40c38c:	stp	x29, x30, [sp, #-144]!
  40c390:	mov	x29, sp
  40c394:	str	wzr, [sp, #140]
  40c398:	add	w4, w3, #0x10
  40c39c:	str	w4, [sp, #128]
  40c3a0:	strh	w1, [sp, #132]
  40c3a4:	mov	w1, #0x301                 	// #769
  40c3a8:	strh	w1, [sp, #134]
  40c3ac:	ldr	w1, [x0, #28]
  40c3b0:	add	w1, w1, #0x1
  40c3b4:	str	w1, [x0, #28]
  40c3b8:	str	w1, [x0, #32]
  40c3bc:	str	w1, [sp, #136]
  40c3c0:	str	xzr, [sp, #112]
  40c3c4:	str	wzr, [sp, #120]
  40c3c8:	mov	w1, #0x10                  	// #16
  40c3cc:	strh	w1, [sp, #112]
  40c3d0:	add	x1, sp, #0x80
  40c3d4:	str	x1, [sp, #80]
  40c3d8:	mov	x1, #0x10                  	// #16
  40c3dc:	str	x1, [sp, #88]
  40c3e0:	str	x2, [sp, #96]
  40c3e4:	sxtw	x3, w3
  40c3e8:	str	x3, [sp, #104]
  40c3ec:	stp	xzr, xzr, [sp, #32]
  40c3f0:	stp	xzr, xzr, [sp, #48]
  40c3f4:	stp	xzr, xzr, [sp, #64]
  40c3f8:	add	x1, sp, #0x70
  40c3fc:	str	x1, [sp, #24]
  40c400:	mov	w1, #0xc                   	// #12
  40c404:	str	w1, [sp, #32]
  40c408:	add	x1, sp, #0x50
  40c40c:	str	x1, [sp, #40]
  40c410:	mov	x1, #0x2                   	// #2
  40c414:	str	x1, [sp, #48]
  40c418:	mov	w2, #0x0                   	// #0
  40c41c:	add	x1, sp, #0x18
  40c420:	ldr	w0, [x0]
  40c424:	bl	404f20 <sendmsg@plt>
  40c428:	ldp	x29, x30, [sp], #144
  40c42c:	ret

000000000040c430 <rtnl_dump_request_n@@Base>:
  40c430:	stp	x29, x30, [sp, #-112]!
  40c434:	mov	x29, sp
  40c438:	str	xzr, [sp, #96]
  40c43c:	str	wzr, [sp, #104]
  40c440:	mov	w2, #0x10                  	// #16
  40c444:	strh	w2, [sp, #96]
  40c448:	str	x1, [sp, #80]
  40c44c:	ldr	w2, [x1]
  40c450:	str	x2, [sp, #88]
  40c454:	stp	xzr, xzr, [sp, #32]
  40c458:	stp	xzr, xzr, [sp, #48]
  40c45c:	stp	xzr, xzr, [sp, #64]
  40c460:	add	x2, sp, #0x60
  40c464:	str	x2, [sp, #24]
  40c468:	mov	w2, #0xc                   	// #12
  40c46c:	str	w2, [sp, #32]
  40c470:	add	x2, sp, #0x50
  40c474:	str	x2, [sp, #40]
  40c478:	mov	x2, #0x1                   	// #1
  40c47c:	str	x2, [sp, #48]
  40c480:	mov	w2, #0x301                 	// #769
  40c484:	strh	w2, [x1, #6]
  40c488:	str	wzr, [x1, #12]
  40c48c:	ldr	w2, [x0, #28]
  40c490:	add	w2, w2, #0x1
  40c494:	str	w2, [x0, #28]
  40c498:	str	w2, [x0, #32]
  40c49c:	str	w2, [x1, #8]
  40c4a0:	mov	w2, #0x0                   	// #0
  40c4a4:	add	x1, sp, #0x18
  40c4a8:	ldr	w0, [x0]
  40c4ac:	bl	404f20 <sendmsg@plt>
  40c4b0:	ldp	x29, x30, [sp], #112
  40c4b4:	ret

000000000040c4b8 <rtnl_dump_filter_nc@@Base>:
  40c4b8:	stp	x29, x30, [sp, #-272]!
  40c4bc:	mov	x29, sp
  40c4c0:	stp	x19, x20, [sp, #16]
  40c4c4:	stp	x21, x22, [sp, #32]
  40c4c8:	stp	x23, x24, [sp, #48]
  40c4cc:	stp	x25, x26, [sp, #64]
  40c4d0:	stp	x27, x28, [sp, #80]
  40c4d4:	mov	x20, x0
  40c4d8:	mov	x22, x1
  40c4dc:	str	x1, [sp, #224]
  40c4e0:	str	x2, [sp, #232]
  40c4e4:	strh	w3, [sp, #240]
  40c4e8:	str	xzr, [sp, #248]
  40c4ec:	str	xzr, [sp, #256]
  40c4f0:	strh	wzr, [sp, #264]
  40c4f4:	stp	xzr, xzr, [sp, #176]
  40c4f8:	stp	xzr, xzr, [sp, #192]
  40c4fc:	stp	xzr, xzr, [sp, #208]
  40c500:	add	x0, sp, #0x88
  40c504:	str	x0, [sp, #168]
  40c508:	mov	w0, #0xc                   	// #12
  40c50c:	str	w0, [sp, #176]
  40c510:	add	x0, sp, #0x98
  40c514:	str	x0, [sp, #184]
  40c518:	mov	x0, #0x1                   	// #1
  40c51c:	str	x0, [sp, #192]
  40c520:	mov	w26, #0x0                   	// #0
  40c524:	add	x28, sp, #0x80
  40c528:	add	x0, sp, #0xa8
  40c52c:	str	x0, [sp, #112]
  40c530:	mov	w27, #0x1                   	// #1
  40c534:	str	w27, [sp, #124]
  40c538:	mov	x2, x28
  40c53c:	ldr	x1, [sp, #112]
  40c540:	ldr	w0, [x20]
  40c544:	bl	40b390 <jsonw_null_field@@Base+0x144>
  40c548:	mov	w21, w0
  40c54c:	tbnz	w0, #31, 40c80c <rtnl_dump_filter_nc@@Base+0x354>
  40c550:	ldr	x3, [x20, #40]
  40c554:	cbz	x3, 40c56c <rtnl_dump_filter_nc@@Base+0xb4>
  40c558:	add	w2, w0, #0x3
  40c55c:	and	x2, x2, #0xfffffffc
  40c560:	mov	x1, #0x1                   	// #1
  40c564:	ldr	x0, [sp, #128]
  40c568:	bl	4050d0 <fwrite@plt>
  40c56c:	cbz	x22, 40c814 <rtnl_dump_filter_nc@@Base+0x35c>
  40c570:	add	x23, sp, #0xf8
  40c574:	mov	x25, x22
  40c578:	str	wzr, [sp, #108]
  40c57c:	str	w21, [sp, #104]
  40c580:	b	40c7ac <rtnl_dump_filter_nc@@Base+0x2f4>
  40c584:	ldr	w25, [x19, #16]
  40c588:	cmp	w1, #0x13
  40c58c:	b.ls	40c5b4 <rtnl_dump_filter_nc@@Base+0xfc>  // b.plast
  40c590:	tbnz	w25, #31, 40c5d8 <rtnl_dump_filter_nc@@Base+0x120>
  40c594:	mov	x1, #0x0                   	// #0
  40c598:	mov	x0, x19
  40c59c:	bl	40b46c <nl_dump_ext_ack@@Base>
  40c5a0:	ldr	x25, [x23]
  40c5a4:	cbz	x25, 40c848 <rtnl_dump_filter_nc@@Base+0x390>
  40c5a8:	ldr	w0, [sp, #124]
  40c5ac:	str	w0, [sp, #108]
  40c5b0:	b	40c7a8 <rtnl_dump_filter_nc@@Base+0x2f0>
  40c5b4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40c5b8:	ldr	x0, [x0, #3992]
  40c5bc:	ldr	x3, [x0]
  40c5c0:	mov	x2, #0xf                   	// #15
  40c5c4:	mov	x1, #0x1                   	// #1
  40c5c8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c5cc:	add	x0, x0, #0x618
  40c5d0:	bl	4050d0 <fwrite@plt>
  40c5d4:	b	40c63c <rtnl_dump_filter_nc@@Base+0x184>
  40c5d8:	mov	w1, w25
  40c5dc:	mov	x0, x19
  40c5e0:	bl	40b890 <nl_dump_ext_ack_done@@Base>
  40c5e4:	cbnz	w0, 40c63c <rtnl_dump_filter_nc@@Base+0x184>
  40c5e8:	bl	405200 <__errno_location@plt>
  40c5ec:	neg	w1, w25
  40c5f0:	str	w1, [x0]
  40c5f4:	cmn	w25, #0x5a
  40c5f8:	b.eq	40c61c <rtnl_dump_filter_nc@@Base+0x164>  // b.none
  40c5fc:	cmn	w25, #0x5f
  40c600:	b.eq	40c63c <rtnl_dump_filter_nc@@Base+0x184>  // b.none
  40c604:	cmn	w25, #0x2
  40c608:	b.eq	40c63c <rtnl_dump_filter_nc@@Base+0x184>  // b.none
  40c60c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c610:	add	x0, x0, #0x650
  40c614:	bl	404d70 <perror@plt>
  40c618:	b	40c63c <rtnl_dump_filter_nc@@Base+0x184>
  40c61c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40c620:	ldr	x0, [x0, #3992]
  40c624:	ldr	x3, [x0]
  40c628:	mov	x2, #0x24                  	// #36
  40c62c:	mov	x1, #0x1                   	// #1
  40c630:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c634:	add	x0, x0, #0x628
  40c638:	bl	4050d0 <fwrite@plt>
  40c63c:	ldr	x0, [sp, #128]
  40c640:	bl	405070 <free@plt>
  40c644:	mov	w24, #0xffffffff            	// #-1
  40c648:	b	40c684 <rtnl_dump_filter_nc@@Base+0x1cc>
  40c64c:	cmp	w1, #0x23
  40c650:	b.ls	40c6a4 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.plast
  40c654:	ldr	w19, [x19, #16]
  40c658:	bl	405200 <__errno_location@plt>
  40c65c:	neg	w1, w19
  40c660:	str	w1, [x0]
  40c664:	ldr	w0, [x20, #36]
  40c668:	cmp	w0, #0x4
  40c66c:	b.eq	40c6c8 <rtnl_dump_filter_nc@@Base+0x210>  // b.none
  40c670:	ldr	w0, [x20, #48]
  40c674:	tbz	w0, #1, 40c6d8 <rtnl_dump_filter_nc@@Base+0x220>
  40c678:	ldr	x0, [sp, #128]
  40c67c:	bl	405070 <free@plt>
  40c680:	mov	w24, #0xffffffff            	// #-1
  40c684:	mov	w0, w24
  40c688:	ldp	x19, x20, [sp, #16]
  40c68c:	ldp	x21, x22, [sp, #32]
  40c690:	ldp	x23, x24, [sp, #48]
  40c694:	ldp	x25, x26, [sp, #64]
  40c698:	ldp	x27, x28, [sp, #80]
  40c69c:	ldp	x29, x30, [sp], #272
  40c6a0:	ret
  40c6a4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40c6a8:	ldr	x0, [x0, #3992]
  40c6ac:	ldr	x3, [x0]
  40c6b0:	mov	x2, #0x10                  	// #16
  40c6b4:	mov	x1, #0x1                   	// #1
  40c6b8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c6bc:	add	x0, x0, #0x4e8
  40c6c0:	bl	4050d0 <fwrite@plt>
  40c6c4:	b	40c678 <rtnl_dump_filter_nc@@Base+0x1c0>
  40c6c8:	cmn	w19, #0x5f
  40c6cc:	ccmn	w19, #0x2, #0x4, ne  // ne = any
  40c6d0:	b.ne	40c670 <rtnl_dump_filter_nc@@Base+0x1b8>  // b.any
  40c6d4:	b	40c678 <rtnl_dump_filter_nc@@Base+0x1c0>
  40c6d8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c6dc:	add	x0, x0, #0x650
  40c6e0:	bl	404d70 <perror@plt>
  40c6e4:	b	40c678 <rtnl_dump_filter_nc@@Base+0x1c0>
  40c6e8:	ldr	w0, [x19]
  40c6ec:	add	w0, w0, #0x3
  40c6f0:	and	w0, w0, #0xfffffffc
  40c6f4:	ldr	w1, [sp, #120]
  40c6f8:	sub	w24, w1, w0
  40c6fc:	add	x19, x19, w0, uxtw
  40c700:	cmp	w24, #0xf
  40c704:	b.le	40c7a0 <rtnl_dump_filter_nc@@Base+0x2e8>
  40c708:	ldr	w1, [x19]
  40c70c:	cmp	w1, #0xf
  40c710:	b.ls	40c7a0 <rtnl_dump_filter_nc@@Base+0x2e8>  // b.plast
  40c714:	str	w24, [sp, #120]
  40c718:	cmp	w24, w1
  40c71c:	b.cc	40c7a0 <rtnl_dump_filter_nc@@Base+0x2e8>  // b.lo, b.ul, b.last
  40c720:	ldurh	w0, [x23, #-8]
  40c724:	ldrh	w2, [x19, #6]
  40c728:	bic	w0, w2, w0
  40c72c:	and	w0, w0, #0xffff
  40c730:	strh	w0, [x19, #6]
  40c734:	ldr	w2, [sp, #140]
  40c738:	cbnz	w2, 40c6e8 <rtnl_dump_filter_nc@@Base+0x230>
  40c73c:	ldr	w3, [x19, #12]
  40c740:	ldr	w2, [x20, #8]
  40c744:	cmp	w3, w2
  40c748:	b.ne	40c6e8 <rtnl_dump_filter_nc@@Base+0x230>  // b.any
  40c74c:	ldr	w3, [x19, #8]
  40c750:	ldr	w2, [x20, #32]
  40c754:	cmp	w3, w2
  40c758:	b.ne	40c6e8 <rtnl_dump_filter_nc@@Base+0x230>  // b.any
  40c75c:	tst	x0, #0x10
  40c760:	csel	w26, w26, w27, eq  // eq = none
  40c764:	ldrh	w0, [x19, #4]
  40c768:	cmp	w0, #0x3
  40c76c:	b.eq	40c584 <rtnl_dump_filter_nc@@Base+0xcc>  // b.none
  40c770:	cmp	w0, #0x2
  40c774:	b.eq	40c64c <rtnl_dump_filter_nc@@Base+0x194>  // b.none
  40c778:	ldr	x0, [x20, #40]
  40c77c:	cbnz	x0, 40c6e8 <rtnl_dump_filter_nc@@Base+0x230>
  40c780:	ldur	x1, [x23, #-16]
  40c784:	mov	x0, x19
  40c788:	blr	x25
  40c78c:	mov	w24, w0
  40c790:	tbz	w0, #31, 40c6e8 <rtnl_dump_filter_nc@@Base+0x230>
  40c794:	ldr	x0, [sp, #128]
  40c798:	bl	405070 <free@plt>
  40c79c:	b	40c684 <rtnl_dump_filter_nc@@Base+0x1cc>
  40c7a0:	ldr	x25, [x23]
  40c7a4:	cbz	x25, 40c7c4 <rtnl_dump_filter_nc@@Base+0x30c>
  40c7a8:	add	x23, x23, #0x18
  40c7ac:	ldr	x19, [sp, #128]
  40c7b0:	ldr	w24, [sp, #104]
  40c7b4:	cmp	w21, #0xf
  40c7b8:	b.gt	40c708 <rtnl_dump_filter_nc@@Base+0x250>
  40c7bc:	ldr	w24, [sp, #104]
  40c7c0:	b	40c7a0 <rtnl_dump_filter_nc@@Base+0x2e8>
  40c7c4:	ldr	x0, [sp, #128]
  40c7c8:	bl	405070 <free@plt>
  40c7cc:	ldr	w0, [sp, #108]
  40c7d0:	cbnz	w0, 40c804 <rtnl_dump_filter_nc@@Base+0x34c>
  40c7d4:	ldr	w0, [sp, #216]
  40c7d8:	tbnz	w0, #5, 40c824 <rtnl_dump_filter_nc@@Base+0x36c>
  40c7dc:	cbz	w24, 40c538 <rtnl_dump_filter_nc@@Base+0x80>
  40c7e0:	mov	w2, w24
  40c7e4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c7e8:	add	x1, x1, #0x548
  40c7ec:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40c7f0:	ldr	x0, [x0, #3992]
  40c7f4:	ldr	x0, [x0]
  40c7f8:	bl	405250 <fprintf@plt>
  40c7fc:	mov	w0, #0x1                   	// #1
  40c800:	bl	404d60 <exit@plt>
  40c804:	mov	w24, w26
  40c808:	b	40c854 <rtnl_dump_filter_nc@@Base+0x39c>
  40c80c:	mov	w24, w0
  40c810:	b	40c684 <rtnl_dump_filter_nc@@Base+0x1cc>
  40c814:	ldr	x0, [sp, #128]
  40c818:	bl	405070 <free@plt>
  40c81c:	ldr	w0, [sp, #216]
  40c820:	tbz	w0, #5, 40c538 <rtnl_dump_filter_nc@@Base+0x80>
  40c824:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40c828:	ldr	x0, [x0, #3992]
  40c82c:	ldr	x3, [x0]
  40c830:	mov	x2, #0x12                  	// #18
  40c834:	mov	x1, #0x1                   	// #1
  40c838:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c83c:	add	x0, x0, #0x530
  40c840:	bl	4050d0 <fwrite@plt>
  40c844:	b	40c538 <rtnl_dump_filter_nc@@Base+0x80>
  40c848:	ldr	x0, [sp, #128]
  40c84c:	bl	405070 <free@plt>
  40c850:	mov	w24, w26
  40c854:	cbz	w24, 40c684 <rtnl_dump_filter_nc@@Base+0x1cc>
  40c858:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40c85c:	ldr	x0, [x0, #3992]
  40c860:	ldr	x3, [x0]
  40c864:	mov	x2, #0x2e                  	// #46
  40c868:	mov	x1, #0x1                   	// #1
  40c86c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c870:	add	x0, x0, #0x668
  40c874:	bl	4050d0 <fwrite@plt>
  40c878:	mov	w24, #0x0                   	// #0
  40c87c:	b	40c684 <rtnl_dump_filter_nc@@Base+0x1cc>

000000000040c880 <rtnl_talk@@Base>:
  40c880:	stp	x29, x30, [sp, #-32]!
  40c884:	mov	x29, sp
  40c888:	str	x1, [sp, #16]
  40c88c:	ldr	w1, [x1]
  40c890:	str	x1, [sp, #24]
  40c894:	mov	x5, #0x0                   	// #0
  40c898:	mov	w4, #0x1                   	// #1
  40c89c:	mov	x3, x2
  40c8a0:	mov	x2, #0x1                   	// #1
  40c8a4:	add	x1, sp, #0x10
  40c8a8:	bl	40b474 <nl_dump_ext_ack@@Base+0x8>
  40c8ac:	ldp	x29, x30, [sp], #32
  40c8b0:	ret

000000000040c8b4 <rtnl_talk_iov@@Base>:
  40c8b4:	stp	x29, x30, [sp, #-16]!
  40c8b8:	mov	x29, sp
  40c8bc:	mov	x5, #0x0                   	// #0
  40c8c0:	mov	w4, #0x1                   	// #1
  40c8c4:	bl	40b474 <nl_dump_ext_ack@@Base+0x8>
  40c8c8:	ldp	x29, x30, [sp], #16
  40c8cc:	ret

000000000040c8d0 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40c8d0:	stp	x29, x30, [sp, #-32]!
  40c8d4:	mov	x29, sp
  40c8d8:	str	x1, [sp, #16]
  40c8dc:	ldr	w1, [x1]
  40c8e0:	str	x1, [sp, #24]
  40c8e4:	mov	x5, #0x0                   	// #0
  40c8e8:	mov	w4, #0x0                   	// #0
  40c8ec:	mov	x3, x2
  40c8f0:	mov	x2, #0x1                   	// #1
  40c8f4:	add	x1, sp, #0x10
  40c8f8:	bl	40b474 <nl_dump_ext_ack@@Base+0x8>
  40c8fc:	ldp	x29, x30, [sp], #32
  40c900:	ret

000000000040c904 <rtnl_listen_all_nsid@@Base>:
  40c904:	stp	x29, x30, [sp, #-48]!
  40c908:	mov	x29, sp
  40c90c:	str	x19, [sp, #16]
  40c910:	mov	x19, x0
  40c914:	mov	w0, #0x1                   	// #1
  40c918:	str	w0, [sp, #44]
  40c91c:	mov	w4, #0x4                   	// #4
  40c920:	add	x3, sp, #0x2c
  40c924:	mov	w2, #0x8                   	// #8
  40c928:	mov	w1, #0x10e                 	// #270
  40c92c:	ldr	w0, [x19]
  40c930:	bl	404ea0 <setsockopt@plt>
  40c934:	tbnz	w0, #31, 40c954 <rtnl_listen_all_nsid@@Base+0x50>
  40c938:	ldr	w0, [x19, #48]
  40c93c:	orr	w0, w0, #0x1
  40c940:	str	w0, [x19, #48]
  40c944:	mov	w0, #0x0                   	// #0
  40c948:	ldr	x19, [sp, #16]
  40c94c:	ldp	x29, x30, [sp], #48
  40c950:	ret
  40c954:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40c958:	add	x0, x0, #0x698
  40c95c:	bl	404d70 <perror@plt>
  40c960:	mov	w0, #0xffffffff            	// #-1
  40c964:	b	40c948 <rtnl_listen_all_nsid@@Base+0x44>

000000000040c968 <rtnl_listen@@Base>:
  40c968:	mov	x12, #0x60d0                	// #24784
  40c96c:	sub	sp, sp, x12
  40c970:	stp	x29, x30, [sp]
  40c974:	mov	x29, sp
  40c978:	stp	x19, x20, [sp, #16]
  40c97c:	stp	x21, x22, [sp, #32]
  40c980:	stp	x23, x24, [sp, #48]
  40c984:	stp	x25, x26, [sp, #64]
  40c988:	stp	x27, x28, [sp, #80]
  40c98c:	mov	x25, x0
  40c990:	mov	x22, x1
  40c994:	mov	x23, x2
  40c998:	str	xzr, [sp, #24768]
  40c99c:	add	x0, sp, #0x4, lsl #12
  40c9a0:	add	x0, x0, #0x10
  40c9a4:	str	wzr, [x0, #8376]
  40c9a8:	mov	w0, #0x10                  	// #16
  40c9ac:	add	x1, sp, #0x6, lsl #12
  40c9b0:	add	x1, x1, #0x10
  40c9b4:	strh	w0, [x1, #176]
  40c9b8:	stp	xzr, xzr, [x1, #112]
  40c9bc:	stp	xzr, xzr, [x1, #128]
  40c9c0:	stp	xzr, xzr, [x1, #144]
  40c9c4:	add	x0, sp, #0x6, lsl #12
  40c9c8:	add	x0, x0, #0xc0
  40c9cc:	str	x0, [sp, #24696]
  40c9d0:	mov	w0, #0xc                   	// #12
  40c9d4:	add	x1, sp, #0x4, lsl #12
  40c9d8:	add	x1, x1, #0x10
  40c9dc:	str	w0, [x1, #8304]
  40c9e0:	add	x0, sp, #0x6, lsl #12
  40c9e4:	add	x0, x0, #0xb0
  40c9e8:	str	x0, [sp, #24712]
  40c9ec:	mov	x0, #0x1                   	// #1
  40c9f0:	str	x0, [sp, #24720]
  40c9f4:	ldr	w0, [x25, #48]
  40c9f8:	tbz	w0, #0, 40ca0c <rtnl_listen@@Base+0xa4>
  40c9fc:	add	x0, sp, #0x78
  40ca00:	str	x0, [sp, #24728]
  40ca04:	mov	x0, #0x2000                	// #8192
  40ca08:	str	x0, [sp, #24736]
  40ca0c:	add	x0, sp, #0x2, lsl #12
  40ca10:	add	x0, x0, #0x78
  40ca14:	str	x0, [sp, #24752]
  40ca18:	add	x26, sp, #0x6, lsl #12
  40ca1c:	add	x26, x26, #0x78
  40ca20:	mov	x28, #0x10e                 	// #270
  40ca24:	movk	x28, #0x8, lsl #32
  40ca28:	adrp	x27, 421000 <_IO_stdin_used@@Base+0x139b8>
  40ca2c:	ldr	x0, [x27, #3992]
  40ca30:	str	x0, [sp, #104]
  40ca34:	mov	x0, #0x4000                	// #16384
  40ca38:	str	x0, [sp, #24760]
  40ca3c:	mov	w2, #0x0                   	// #0
  40ca40:	mov	x1, x26
  40ca44:	ldr	w0, [x25]
  40ca48:	bl	404d30 <recvmsg@plt>
  40ca4c:	mov	w1, w0
  40ca50:	tbz	w0, #31, 40caa4 <rtnl_listen@@Base+0x13c>
  40ca54:	bl	405200 <__errno_location@plt>
  40ca58:	mov	x19, x0
  40ca5c:	ldr	w0, [x0]
  40ca60:	cmp	w0, #0x4
  40ca64:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40ca68:	b.eq	40ca34 <rtnl_listen@@Base+0xcc>  // b.none
  40ca6c:	ldr	x1, [x27, #3992]
  40ca70:	ldr	x20, [x1]
  40ca74:	bl	404f90 <strerror@plt>
  40ca78:	ldr	w3, [x19]
  40ca7c:	mov	x2, x0
  40ca80:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ca84:	add	x1, x1, #0x418
  40ca88:	mov	x0, x20
  40ca8c:	bl	405250 <fprintf@plt>
  40ca90:	ldr	w0, [x19]
  40ca94:	cmp	w0, #0x69
  40ca98:	b.eq	40ca34 <rtnl_listen@@Base+0xcc>  // b.none
  40ca9c:	mov	w0, #0xffffffff            	// #-1
  40caa0:	b	40cb68 <rtnl_listen@@Base+0x200>
  40caa4:	cbz	w0, 40cb8c <rtnl_listen@@Base+0x224>
  40caa8:	add	x2, sp, #0x4, lsl #12
  40caac:	add	x2, x2, #0x10
  40cab0:	ldr	w2, [x2, #8304]
  40cab4:	cmp	w2, #0xc
  40cab8:	b.ne	40cbb4 <rtnl_listen@@Base+0x24c>  // b.any
  40cabc:	ldr	w2, [x25, #48]
  40cac0:	tbnz	w2, #0, 40cbd4 <rtnl_listen@@Base+0x26c>
  40cac4:	mov	w20, w0
  40cac8:	cmp	w0, #0xf
  40cacc:	b.ls	40ccb0 <rtnl_listen@@Base+0x348>  // b.plast
  40cad0:	ldr	w19, [sp, #8312]
  40cad4:	mov	w2, w19
  40cad8:	cmp	w19, #0x10
  40cadc:	ccmp	w0, w19, #0x1, pl  // pl = nfrst
  40cae0:	b.lt	40cb34 <rtnl_listen@@Base+0x1cc>  // b.tstop
  40cae4:	add	x21, sp, #0x2, lsl #12
  40cae8:	add	x21, x21, #0x78
  40caec:	add	x24, sp, #0x70
  40caf0:	mov	x2, x23
  40caf4:	mov	x1, x21
  40caf8:	mov	x0, x24
  40cafc:	blr	x22
  40cb00:	tbnz	w0, #31, 40cb68 <rtnl_listen@@Base+0x200>
  40cb04:	add	w19, w19, #0x3
  40cb08:	and	w19, w19, #0xfffffffc
  40cb0c:	sub	w20, w20, w19
  40cb10:	mov	w1, w20
  40cb14:	add	x21, x21, w19, uxtw
  40cb18:	cmp	w20, #0xf
  40cb1c:	b.ls	40cc78 <rtnl_listen@@Base+0x310>  // b.plast
  40cb20:	ldr	w19, [x21]
  40cb24:	mov	w2, w19
  40cb28:	cmp	w19, #0x10
  40cb2c:	ccmp	w19, w20, #0x0, pl  // pl = nfrst
  40cb30:	b.le	40caf0 <rtnl_listen@@Base+0x188>
  40cb34:	add	x0, sp, #0x4, lsl #12
  40cb38:	add	x0, x0, #0x10
  40cb3c:	ldr	w0, [x0, #8344]
  40cb40:	tbz	w0, #5, 40cc58 <rtnl_listen@@Base+0x2f0>
  40cb44:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cb48:	ldr	x0, [x0, #3992]
  40cb4c:	ldr	x3, [x0]
  40cb50:	mov	x2, #0x12                  	// #18
  40cb54:	mov	x1, #0x1                   	// #1
  40cb58:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cb5c:	add	x0, x0, #0x4b0
  40cb60:	bl	4050d0 <fwrite@plt>
  40cb64:	mov	w0, #0xffffffff            	// #-1
  40cb68:	ldp	x19, x20, [sp, #16]
  40cb6c:	ldp	x21, x22, [sp, #32]
  40cb70:	ldp	x23, x24, [sp, #48]
  40cb74:	ldp	x25, x26, [sp, #64]
  40cb78:	ldp	x27, x28, [sp, #80]
  40cb7c:	ldp	x29, x30, [sp]
  40cb80:	mov	x12, #0x60d0                	// #24784
  40cb84:	add	sp, sp, x12
  40cb88:	ret
  40cb8c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cb90:	ldr	x0, [x0, #3992]
  40cb94:	ldr	x3, [x0]
  40cb98:	mov	x2, #0xf                   	// #15
  40cb9c:	mov	x1, #0x1                   	// #1
  40cba0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cba4:	add	x0, x0, #0x438
  40cba8:	bl	4050d0 <fwrite@plt>
  40cbac:	mov	w0, #0xffffffff            	// #-1
  40cbb0:	b	40cb68 <rtnl_listen@@Base+0x200>
  40cbb4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cbb8:	add	x1, x1, #0x6b0
  40cbbc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cbc0:	ldr	x0, [x0, #3992]
  40cbc4:	ldr	x0, [x0]
  40cbc8:	bl	405250 <fprintf@plt>
  40cbcc:	mov	w0, #0x1                   	// #1
  40cbd0:	bl	404d60 <exit@plt>
  40cbd4:	mov	w2, #0xffffffff            	// #-1
  40cbd8:	str	w2, [sp, #112]
  40cbdc:	ldr	x4, [sp, #24736]
  40cbe0:	cmp	x4, #0xf
  40cbe4:	b.ls	40cac4 <rtnl_listen@@Base+0x15c>  // b.plast
  40cbe8:	ldr	x2, [sp, #24728]
  40cbec:	add	x4, x2, x4
  40cbf0:	cbz	x2, 40cac4 <rtnl_listen@@Base+0x15c>
  40cbf4:	ldr	x3, [x2, #8]
  40cbf8:	cmp	x3, x28
  40cbfc:	b.eq	40cc40 <rtnl_listen@@Base+0x2d8>  // b.none
  40cc00:	ldr	x3, [x2]
  40cc04:	cmp	x3, #0xf
  40cc08:	b.ls	40cac4 <rtnl_listen@@Base+0x15c>  // b.plast
  40cc0c:	add	x3, x3, #0x7
  40cc10:	and	x3, x3, #0xfffffffffffffff8
  40cc14:	add	x2, x2, x3
  40cc18:	add	x3, x2, #0x10
  40cc1c:	cmp	x4, x3
  40cc20:	b.cc	40cac4 <rtnl_listen@@Base+0x15c>  // b.lo, b.ul, b.last
  40cc24:	ldr	x3, [x2]
  40cc28:	add	x3, x3, #0x7
  40cc2c:	and	x3, x3, #0xfffffffffffffff8
  40cc30:	add	x3, x2, x3
  40cc34:	cmp	x4, x3
  40cc38:	b.cs	40cbf0 <rtnl_listen@@Base+0x288>  // b.hs, b.nlast
  40cc3c:	b	40cac4 <rtnl_listen@@Base+0x15c>
  40cc40:	ldr	x3, [x2]
  40cc44:	cmp	x3, #0x14
  40cc48:	b.ne	40cc00 <rtnl_listen@@Base+0x298>  // b.any
  40cc4c:	ldr	w3, [x2, #16]
  40cc50:	str	w3, [sp, #112]
  40cc54:	b	40cc00 <rtnl_listen@@Base+0x298>
  40cc58:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cc5c:	add	x1, x1, #0x4c8
  40cc60:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cc64:	ldr	x0, [x0, #3992]
  40cc68:	ldr	x0, [x0]
  40cc6c:	bl	405250 <fprintf@plt>
  40cc70:	mov	w0, #0x1                   	// #1
  40cc74:	bl	404d60 <exit@plt>
  40cc78:	add	x0, sp, #0x4, lsl #12
  40cc7c:	add	x0, x0, #0x10
  40cc80:	ldr	w0, [x0, #8344]
  40cc84:	tbnz	w0, #5, 40ccc0 <rtnl_listen@@Base+0x358>
  40cc88:	cbz	w20, 40ca34 <rtnl_listen@@Base+0xcc>
  40cc8c:	mov	w2, w1
  40cc90:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cc94:	add	x1, x1, #0x548
  40cc98:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cc9c:	ldr	x0, [x0, #3992]
  40cca0:	ldr	x0, [x0]
  40cca4:	bl	405250 <fprintf@plt>
  40cca8:	mov	w0, #0x1                   	// #1
  40ccac:	bl	404d60 <exit@plt>
  40ccb0:	add	x0, sp, #0x4, lsl #12
  40ccb4:	add	x0, x0, #0x10
  40ccb8:	ldr	w0, [x0, #8344]
  40ccbc:	tbz	w0, #5, 40cc8c <rtnl_listen@@Base+0x324>
  40ccc0:	ldr	x0, [sp, #104]
  40ccc4:	ldr	x3, [x0]
  40ccc8:	mov	x2, #0x12                  	// #18
  40cccc:	mov	x1, #0x1                   	// #1
  40ccd0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ccd4:	add	x0, x0, #0x530
  40ccd8:	bl	4050d0 <fwrite@plt>
  40ccdc:	b	40ca34 <rtnl_listen@@Base+0xcc>

000000000040cce0 <rtnl_from_file@@Base>:
  40cce0:	mov	x12, #0x4060                	// #16480
  40cce4:	sub	sp, sp, x12
  40cce8:	stp	x29, x30, [sp]
  40ccec:	mov	x29, sp
  40ccf0:	stp	x19, x20, [sp, #16]
  40ccf4:	stp	x21, x22, [sp, #32]
  40ccf8:	stp	x23, x24, [sp, #48]
  40ccfc:	stp	x25, x26, [sp, #64]
  40cd00:	str	x27, [sp, #80]
  40cd04:	mov	x20, x0
  40cd08:	mov	x24, x1
  40cd0c:	mov	x23, x2
  40cd10:	add	x21, sp, #0x60
  40cd14:	mov	x25, #0x10                  	// #16
  40cd18:	mov	x22, #0x1                   	// #1
  40cd1c:	mov	w26, #0x3ff0                	// #16368
  40cd20:	add	x27, x21, x25
  40cd24:	b	40cd78 <rtnl_from_file@@Base+0x98>
  40cd28:	cmp	x0, #0x10
  40cd2c:	b.ne	40cd9c <rtnl_from_file@@Base+0xbc>  // b.any
  40cd30:	ldr	w19, [sp, #96]
  40cd34:	sub	w0, w19, #0x10
  40cd38:	cmp	w0, w26
  40cd3c:	b.hi	40cdf4 <rtnl_from_file@@Base+0x114>  // b.pmore
  40cd40:	sub	w19, w19, #0xd
  40cd44:	and	x19, x19, #0xfffffffc
  40cd48:	mov	x3, x20
  40cd4c:	mov	x2, x19
  40cd50:	mov	x1, x22
  40cd54:	mov	x0, x27
  40cd58:	bl	405050 <fread@plt>
  40cd5c:	cmp	x19, x0
  40cd60:	b.ne	40ce48 <rtnl_from_file@@Base+0x168>  // b.any
  40cd64:	mov	x2, x23
  40cd68:	mov	x1, x21
  40cd6c:	mov	x0, #0x0                   	// #0
  40cd70:	blr	x24
  40cd74:	tbnz	w0, #31, 40ce24 <rtnl_from_file@@Base+0x144>
  40cd78:	mov	x3, x20
  40cd7c:	mov	x2, x25
  40cd80:	mov	x1, x22
  40cd84:	mov	x0, x21
  40cd88:	bl	405050 <fread@plt>
  40cd8c:	cbnz	x0, 40cd28 <rtnl_from_file@@Base+0x48>
  40cd90:	mov	x0, x20
  40cd94:	bl	404ff0 <feof@plt>
  40cd98:	cbnz	w0, 40cea0 <rtnl_from_file@@Base+0x1c0>
  40cd9c:	mov	x0, x20
  40cda0:	bl	405280 <ferror@plt>
  40cda4:	cbnz	w0, 40cde4 <rtnl_from_file@@Base+0x104>
  40cda8:	mov	x0, x20
  40cdac:	bl	404ff0 <feof@plt>
  40cdb0:	mov	w1, w0
  40cdb4:	mov	w0, #0xffffffff            	// #-1
  40cdb8:	cbz	w1, 40ce24 <rtnl_from_file@@Base+0x144>
  40cdbc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cdc0:	ldr	x0, [x0, #3992]
  40cdc4:	ldr	x3, [x0]
  40cdc8:	mov	x2, #0x22                  	// #34
  40cdcc:	mov	x1, #0x1                   	// #1
  40cdd0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cdd4:	add	x0, x0, #0x6e8
  40cdd8:	bl	4050d0 <fwrite@plt>
  40cddc:	mov	w0, #0xffffffff            	// #-1
  40cde0:	b	40ce24 <rtnl_from_file@@Base+0x144>
  40cde4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cde8:	add	x0, x0, #0x6d0
  40cdec:	bl	404d70 <perror@plt>
  40cdf0:	b	40cda8 <rtnl_from_file@@Base+0xc8>
  40cdf4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cdf8:	ldr	x0, [x0, #3992]
  40cdfc:	ldr	x21, [x0]
  40ce00:	mov	x0, x20
  40ce04:	bl	404dd0 <ftell@plt>
  40ce08:	mov	x3, x0
  40ce0c:	mov	w2, w19
  40ce10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ce14:	add	x1, x1, #0x710
  40ce18:	mov	x0, x21
  40ce1c:	bl	405250 <fprintf@plt>
  40ce20:	mov	w0, #0xffffffff            	// #-1
  40ce24:	ldp	x19, x20, [sp, #16]
  40ce28:	ldp	x21, x22, [sp, #32]
  40ce2c:	ldp	x23, x24, [sp, #48]
  40ce30:	ldp	x25, x26, [sp, #64]
  40ce34:	ldr	x27, [sp, #80]
  40ce38:	ldp	x29, x30, [sp]
  40ce3c:	mov	x12, #0x4060                	// #16480
  40ce40:	add	sp, sp, x12
  40ce44:	ret
  40ce48:	mov	x0, x20
  40ce4c:	bl	405280 <ferror@plt>
  40ce50:	cbnz	w0, 40ce90 <rtnl_from_file@@Base+0x1b0>
  40ce54:	mov	x0, x20
  40ce58:	bl	404ff0 <feof@plt>
  40ce5c:	mov	w1, w0
  40ce60:	mov	w0, #0xffffffff            	// #-1
  40ce64:	cbz	w1, 40ce24 <rtnl_from_file@@Base+0x144>
  40ce68:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40ce6c:	ldr	x0, [x0, #3992]
  40ce70:	ldr	x3, [x0]
  40ce74:	mov	x2, #0x22                  	// #34
  40ce78:	mov	x1, #0x1                   	// #1
  40ce7c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ce80:	add	x0, x0, #0x6e8
  40ce84:	bl	4050d0 <fwrite@plt>
  40ce88:	mov	w0, #0xffffffff            	// #-1
  40ce8c:	b	40ce24 <rtnl_from_file@@Base+0x144>
  40ce90:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40ce94:	add	x0, x0, #0x6d0
  40ce98:	bl	404d70 <perror@plt>
  40ce9c:	b	40ce54 <rtnl_from_file@@Base+0x174>
  40cea0:	mov	w0, #0x0                   	// #0
  40cea4:	b	40ce24 <rtnl_from_file@@Base+0x144>

000000000040cea8 <addattr_l@@Base>:
  40cea8:	stp	x29, x30, [sp, #-32]!
  40ceac:	mov	x29, sp
  40ceb0:	stp	x19, x20, [sp, #16]
  40ceb4:	mov	x19, x0
  40ceb8:	ldr	w5, [x0]
  40cebc:	add	w5, w5, #0x3
  40cec0:	and	w5, w5, #0xfffffffc
  40cec4:	add	w0, w4, #0x7
  40cec8:	and	w20, w0, #0xfffffffc
  40cecc:	add	w0, w5, w20
  40ced0:	cmp	w0, w1
  40ced4:	b.hi	40cf10 <addattr_l@@Base+0x68>  // b.pmore
  40ced8:	add	w1, w4, #0x4
  40cedc:	add	x0, x19, w5, uxtw
  40cee0:	strh	w2, [x0, #2]
  40cee4:	strh	w1, [x19, w5, uxtw]
  40cee8:	cbnz	w4, 40cf34 <addattr_l@@Base+0x8c>
  40ceec:	ldr	w0, [x19]
  40cef0:	add	w0, w0, #0x3
  40cef4:	and	w0, w0, #0xfffffffc
  40cef8:	add	w0, w0, w20
  40cefc:	str	w0, [x19]
  40cf00:	mov	w0, #0x0                   	// #0
  40cf04:	ldp	x19, x20, [sp, #16]
  40cf08:	ldp	x29, x30, [sp], #32
  40cf0c:	ret
  40cf10:	mov	w2, w1
  40cf14:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40cf18:	add	x1, x1, #0x738
  40cf1c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40cf20:	ldr	x0, [x0, #3992]
  40cf24:	ldr	x0, [x0]
  40cf28:	bl	405250 <fprintf@plt>
  40cf2c:	mov	w0, #0xffffffff            	// #-1
  40cf30:	b	40cf04 <addattr_l@@Base+0x5c>
  40cf34:	sxtw	x2, w4
  40cf38:	mov	x1, x3
  40cf3c:	add	x0, x0, #0x4
  40cf40:	bl	404d20 <memcpy@plt>
  40cf44:	b	40ceec <addattr_l@@Base+0x44>

000000000040cf48 <addattr@@Base>:
  40cf48:	stp	x29, x30, [sp, #-16]!
  40cf4c:	mov	x29, sp
  40cf50:	mov	w4, #0x0                   	// #0
  40cf54:	mov	x3, #0x0                   	// #0
  40cf58:	bl	40cea8 <addattr_l@@Base>
  40cf5c:	ldp	x29, x30, [sp], #16
  40cf60:	ret

000000000040cf64 <addattr8@@Base>:
  40cf64:	stp	x29, x30, [sp, #-32]!
  40cf68:	mov	x29, sp
  40cf6c:	strb	w3, [sp, #31]
  40cf70:	mov	w4, #0x1                   	// #1
  40cf74:	add	x3, sp, #0x1f
  40cf78:	bl	40cea8 <addattr_l@@Base>
  40cf7c:	ldp	x29, x30, [sp], #32
  40cf80:	ret

000000000040cf84 <addattr16@@Base>:
  40cf84:	stp	x29, x30, [sp, #-32]!
  40cf88:	mov	x29, sp
  40cf8c:	strh	w3, [sp, #30]
  40cf90:	mov	w4, #0x2                   	// #2
  40cf94:	add	x3, sp, #0x1e
  40cf98:	bl	40cea8 <addattr_l@@Base>
  40cf9c:	ldp	x29, x30, [sp], #32
  40cfa0:	ret

000000000040cfa4 <addattr32@@Base>:
  40cfa4:	stp	x29, x30, [sp, #-32]!
  40cfa8:	mov	x29, sp
  40cfac:	str	w3, [sp, #28]
  40cfb0:	mov	w4, #0x4                   	// #4
  40cfb4:	add	x3, sp, #0x1c
  40cfb8:	bl	40cea8 <addattr_l@@Base>
  40cfbc:	ldp	x29, x30, [sp], #32
  40cfc0:	ret

000000000040cfc4 <addattr64@@Base>:
  40cfc4:	stp	x29, x30, [sp, #-32]!
  40cfc8:	mov	x29, sp
  40cfcc:	str	x3, [sp, #24]
  40cfd0:	mov	w4, #0x8                   	// #8
  40cfd4:	add	x3, sp, #0x18
  40cfd8:	bl	40cea8 <addattr_l@@Base>
  40cfdc:	ldp	x29, x30, [sp], #32
  40cfe0:	ret

000000000040cfe4 <addattrstrz@@Base>:
  40cfe4:	stp	x29, x30, [sp, #-48]!
  40cfe8:	mov	x29, sp
  40cfec:	stp	x19, x20, [sp, #16]
  40cff0:	stp	x21, x22, [sp, #32]
  40cff4:	mov	x20, x0
  40cff8:	mov	w21, w1
  40cffc:	mov	w22, w2
  40d000:	mov	x19, x3
  40d004:	mov	x0, x3
  40d008:	bl	404d50 <strlen@plt>
  40d00c:	add	w4, w0, #0x1
  40d010:	mov	x3, x19
  40d014:	mov	w2, w22
  40d018:	mov	w1, w21
  40d01c:	mov	x0, x20
  40d020:	bl	40cea8 <addattr_l@@Base>
  40d024:	ldp	x19, x20, [sp, #16]
  40d028:	ldp	x21, x22, [sp, #32]
  40d02c:	ldp	x29, x30, [sp], #48
  40d030:	ret

000000000040d034 <addraw_l@@Base>:
  40d034:	stp	x29, x30, [sp, #-48]!
  40d038:	mov	x29, sp
  40d03c:	stp	x19, x20, [sp, #16]
  40d040:	mov	x19, x0
  40d044:	mov	w4, w1
  40d048:	mov	x1, x2
  40d04c:	ldr	w0, [x0]
  40d050:	add	w0, w0, #0x3
  40d054:	and	w0, w0, #0xfffffffc
  40d058:	add	w20, w3, #0x3
  40d05c:	and	w20, w20, #0xfffffffc
  40d060:	add	w2, w0, w20
  40d064:	cmp	w2, w4
  40d068:	b.hi	40d0cc <addraw_l@@Base+0x98>  // b.pmore
  40d06c:	stp	x21, x22, [sp, #32]
  40d070:	mov	w21, w3
  40d074:	sxtw	x22, w3
  40d078:	mov	x2, x22
  40d07c:	add	x0, x19, w0, uxtw
  40d080:	bl	404d20 <memcpy@plt>
  40d084:	ldr	w0, [x19]
  40d088:	add	w0, w0, #0x3
  40d08c:	and	x0, x0, #0xfffffffc
  40d090:	add	x0, x0, x22
  40d094:	sub	w2, w20, w21
  40d098:	mov	w1, #0x0                   	// #0
  40d09c:	add	x0, x19, x0
  40d0a0:	bl	404f00 <memset@plt>
  40d0a4:	ldr	w0, [x19]
  40d0a8:	add	w0, w0, #0x3
  40d0ac:	and	w0, w0, #0xfffffffc
  40d0b0:	add	w0, w0, w20
  40d0b4:	str	w0, [x19]
  40d0b8:	mov	w0, #0x0                   	// #0
  40d0bc:	ldp	x21, x22, [sp, #32]
  40d0c0:	ldp	x19, x20, [sp, #16]
  40d0c4:	ldp	x29, x30, [sp], #48
  40d0c8:	ret
  40d0cc:	mov	w2, w4
  40d0d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40d0d4:	add	x1, x1, #0x768
  40d0d8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40d0dc:	ldr	x0, [x0, #3992]
  40d0e0:	ldr	x0, [x0]
  40d0e4:	bl	405250 <fprintf@plt>
  40d0e8:	mov	w0, #0xffffffff            	// #-1
  40d0ec:	b	40d0c0 <addraw_l@@Base+0x8c>

000000000040d0f0 <addattr_nest@@Base>:
  40d0f0:	stp	x29, x30, [sp, #-32]!
  40d0f4:	mov	x29, sp
  40d0f8:	str	x19, [sp, #16]
  40d0fc:	ldr	w19, [x0]
  40d100:	add	w19, w19, #0x3
  40d104:	and	x19, x19, #0xfffffffc
  40d108:	add	x19, x0, x19
  40d10c:	mov	w4, #0x0                   	// #0
  40d110:	mov	x3, #0x0                   	// #0
  40d114:	bl	40cea8 <addattr_l@@Base>
  40d118:	mov	x0, x19
  40d11c:	ldr	x19, [sp, #16]
  40d120:	ldp	x29, x30, [sp], #32
  40d124:	ret

000000000040d128 <addattr_nest_end@@Base>:
  40d128:	ldr	w2, [x0]
  40d12c:	add	w2, w2, #0x3
  40d130:	and	x2, x2, #0xfffffffc
  40d134:	add	x2, x0, x2
  40d138:	sub	x2, x2, x1
  40d13c:	strh	w2, [x1]
  40d140:	ldr	w0, [x0]
  40d144:	ret

000000000040d148 <addattr_nest_compat@@Base>:
  40d148:	stp	x29, x30, [sp, #-48]!
  40d14c:	mov	x29, sp
  40d150:	stp	x19, x20, [sp, #16]
  40d154:	stp	x21, x22, [sp, #32]
  40d158:	mov	x20, x0
  40d15c:	mov	w21, w1
  40d160:	mov	w22, w2
  40d164:	ldr	w19, [x0]
  40d168:	add	w19, w19, #0x3
  40d16c:	and	x19, x19, #0xfffffffc
  40d170:	add	x19, x0, x19
  40d174:	bl	40cea8 <addattr_l@@Base>
  40d178:	mov	w2, w22
  40d17c:	mov	w1, w21
  40d180:	mov	x0, x20
  40d184:	bl	40d0f0 <addattr_nest@@Base>
  40d188:	mov	x0, x19
  40d18c:	ldp	x19, x20, [sp, #16]
  40d190:	ldp	x21, x22, [sp, #32]
  40d194:	ldp	x29, x30, [sp], #48
  40d198:	ret

000000000040d19c <addattr_nest_compat_end@@Base>:
  40d19c:	stp	x29, x30, [sp, #-32]!
  40d1a0:	mov	x29, sp
  40d1a4:	str	x19, [sp, #16]
  40d1a8:	mov	x19, x0
  40d1ac:	ldrh	w3, [x1]
  40d1b0:	add	w3, w3, #0x3
  40d1b4:	and	x3, x3, #0x1fffc
  40d1b8:	ldr	w2, [x0]
  40d1bc:	add	w2, w2, #0x3
  40d1c0:	and	x2, x2, #0xfffffffc
  40d1c4:	add	x2, x0, x2
  40d1c8:	sub	x2, x2, x1
  40d1cc:	strh	w2, [x1]
  40d1d0:	add	x1, x1, x3
  40d1d4:	bl	40d128 <addattr_nest_end@@Base>
  40d1d8:	ldr	w0, [x19]
  40d1dc:	ldr	x19, [sp, #16]
  40d1e0:	ldp	x29, x30, [sp], #32
  40d1e4:	ret

000000000040d1e8 <rta_addattr32@@Base>:
  40d1e8:	ldrh	w4, [x0]
  40d1ec:	add	w4, w4, #0x3
  40d1f0:	and	w4, w4, #0xfffffffc
  40d1f4:	add	w5, w4, #0x8
  40d1f8:	cmp	w5, w1
  40d1fc:	b.hi	40d230 <rta_addattr32@@Base+0x48>  // b.pmore
  40d200:	add	x1, x0, w4, uxtw
  40d204:	strh	w2, [x1, #2]
  40d208:	mov	w2, #0x8                   	// #8
  40d20c:	strh	w2, [x0, w4, uxtw]
  40d210:	str	w3, [x1, #4]
  40d214:	ldrh	w1, [x0]
  40d218:	add	w1, w1, #0x3
  40d21c:	and	w1, w1, #0xfffffffc
  40d220:	add	w1, w1, #0x8
  40d224:	strh	w1, [x0]
  40d228:	mov	w0, #0x0                   	// #0
  40d22c:	ret
  40d230:	stp	x29, x30, [sp, #-16]!
  40d234:	mov	x29, sp
  40d238:	mov	w2, w1
  40d23c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40d240:	add	x1, x1, #0x798
  40d244:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40d248:	ldr	x0, [x0, #3992]
  40d24c:	ldr	x0, [x0]
  40d250:	bl	405250 <fprintf@plt>
  40d254:	mov	w0, #0xffffffff            	// #-1
  40d258:	ldp	x29, x30, [sp], #16
  40d25c:	ret

000000000040d260 <rta_addattr_l@@Base>:
  40d260:	stp	x29, x30, [sp, #-32]!
  40d264:	mov	x29, sp
  40d268:	stp	x19, x20, [sp, #16]
  40d26c:	mov	x20, x0
  40d270:	ldrh	w5, [x0]
  40d274:	add	w5, w5, #0x3
  40d278:	and	w5, w5, #0xfffffffc
  40d27c:	add	w0, w4, #0x7
  40d280:	and	w0, w0, #0xfffffffc
  40d284:	add	w0, w0, w5
  40d288:	cmp	w0, w1
  40d28c:	b.hi	40d2d4 <rta_addattr_l@@Base+0x74>  // b.pmore
  40d290:	add	w19, w4, #0x4
  40d294:	add	x0, x20, w5, uxtw
  40d298:	strh	w2, [x0, #2]
  40d29c:	and	w19, w19, #0xffff
  40d2a0:	strh	w19, [x20, w5, uxtw]
  40d2a4:	cbnz	w4, 40d2f8 <rta_addattr_l@@Base+0x98>
  40d2a8:	ldrh	w0, [x20]
  40d2ac:	add	w0, w0, #0x3
  40d2b0:	and	w0, w0, #0xfffffffc
  40d2b4:	add	w19, w19, #0x3
  40d2b8:	and	w19, w19, #0xfffffffc
  40d2bc:	add	w19, w0, w19
  40d2c0:	strh	w19, [x20]
  40d2c4:	mov	w0, #0x0                   	// #0
  40d2c8:	ldp	x19, x20, [sp, #16]
  40d2cc:	ldp	x29, x30, [sp], #32
  40d2d0:	ret
  40d2d4:	mov	w2, w1
  40d2d8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40d2dc:	add	x1, x1, #0x7d0
  40d2e0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40d2e4:	ldr	x0, [x0, #3992]
  40d2e8:	ldr	x0, [x0]
  40d2ec:	bl	405250 <fprintf@plt>
  40d2f0:	mov	w0, #0xffffffff            	// #-1
  40d2f4:	b	40d2c8 <rta_addattr_l@@Base+0x68>
  40d2f8:	sxtw	x2, w4
  40d2fc:	mov	x1, x3
  40d300:	add	x0, x0, #0x4
  40d304:	bl	404d20 <memcpy@plt>
  40d308:	b	40d2a8 <rta_addattr_l@@Base+0x48>

000000000040d30c <rta_addattr8@@Base>:
  40d30c:	stp	x29, x30, [sp, #-32]!
  40d310:	mov	x29, sp
  40d314:	strb	w3, [sp, #31]
  40d318:	mov	w4, #0x1                   	// #1
  40d31c:	add	x3, sp, #0x1f
  40d320:	bl	40d260 <rta_addattr_l@@Base>
  40d324:	ldp	x29, x30, [sp], #32
  40d328:	ret

000000000040d32c <rta_addattr16@@Base>:
  40d32c:	stp	x29, x30, [sp, #-32]!
  40d330:	mov	x29, sp
  40d334:	strh	w3, [sp, #30]
  40d338:	mov	w4, #0x2                   	// #2
  40d33c:	add	x3, sp, #0x1e
  40d340:	bl	40d260 <rta_addattr_l@@Base>
  40d344:	ldp	x29, x30, [sp], #32
  40d348:	ret

000000000040d34c <rta_addattr64@@Base>:
  40d34c:	stp	x29, x30, [sp, #-32]!
  40d350:	mov	x29, sp
  40d354:	str	x3, [sp, #24]
  40d358:	mov	w4, #0x8                   	// #8
  40d35c:	add	x3, sp, #0x18
  40d360:	bl	40d260 <rta_addattr_l@@Base>
  40d364:	ldp	x29, x30, [sp], #32
  40d368:	ret

000000000040d36c <rta_nest@@Base>:
  40d36c:	stp	x29, x30, [sp, #-32]!
  40d370:	mov	x29, sp
  40d374:	str	x19, [sp, #16]
  40d378:	ldrh	w3, [x0]
  40d37c:	add	w3, w3, #0x3
  40d380:	and	x3, x3, #0x1fffc
  40d384:	add	x19, x0, x3
  40d388:	mov	w4, #0x0                   	// #0
  40d38c:	mov	x3, #0x0                   	// #0
  40d390:	bl	40d260 <rta_addattr_l@@Base>
  40d394:	ldrh	w0, [x19, #2]
  40d398:	orr	w0, w0, #0xffff8000
  40d39c:	strh	w0, [x19, #2]
  40d3a0:	mov	x0, x19
  40d3a4:	ldr	x19, [sp, #16]
  40d3a8:	ldp	x29, x30, [sp], #32
  40d3ac:	ret

000000000040d3b0 <rta_nest_end@@Base>:
  40d3b0:	ldrh	w2, [x0]
  40d3b4:	add	w2, w2, #0x3
  40d3b8:	and	x2, x2, #0x1fffc
  40d3bc:	add	x2, x0, x2
  40d3c0:	sub	x2, x2, x1
  40d3c4:	strh	w2, [x1]
  40d3c8:	ldrh	w0, [x0]
  40d3cc:	ret

000000000040d3d0 <parse_rtattr_flags@@Base>:
  40d3d0:	stp	x29, x30, [sp, #-64]!
  40d3d4:	mov	x29, sp
  40d3d8:	stp	x19, x20, [sp, #16]
  40d3dc:	stp	x21, x22, [sp, #32]
  40d3e0:	str	x23, [sp, #48]
  40d3e4:	mov	x22, x0
  40d3e8:	mov	w21, w1
  40d3ec:	mov	x19, x2
  40d3f0:	mov	w20, w3
  40d3f4:	and	w23, w4, #0xffff
  40d3f8:	add	w2, w1, #0x1
  40d3fc:	sbfiz	x2, x2, #3, #32
  40d400:	mov	w1, #0x0                   	// #0
  40d404:	bl	404f00 <memset@plt>
  40d408:	mvn	w1, w23
  40d40c:	cmp	w20, #0x3
  40d410:	b.gt	40d450 <parse_rtattr_flags@@Base+0x80>
  40d414:	cbnz	w20, 40d488 <parse_rtattr_flags@@Base+0xb8>
  40d418:	mov	w0, #0x0                   	// #0
  40d41c:	ldp	x19, x20, [sp, #16]
  40d420:	ldp	x21, x22, [sp, #32]
  40d424:	ldr	x23, [sp, #48]
  40d428:	ldp	x29, x30, [sp], #64
  40d42c:	ret
  40d430:	str	x19, [x22, x0, lsl #3]
  40d434:	ldrh	w4, [x19]
  40d438:	add	w4, w4, #0x3
  40d43c:	and	w4, w4, #0xfffffffc
  40d440:	sub	w20, w20, w4
  40d444:	add	x19, x19, w4, uxtw
  40d448:	cmp	w20, #0x3
  40d44c:	b.le	40d414 <parse_rtattr_flags@@Base+0x44>
  40d450:	ldrh	w2, [x19]
  40d454:	cmp	w2, #0x3
  40d458:	b.ls	40d414 <parse_rtattr_flags@@Base+0x44>  // b.plast
  40d45c:	cmp	w2, w20
  40d460:	b.gt	40d414 <parse_rtattr_flags@@Base+0x44>
  40d464:	ldrh	w2, [x19, #2]
  40d468:	and	w2, w1, w2
  40d46c:	and	w0, w2, #0xffff
  40d470:	cmp	w21, w2, uxth
  40d474:	b.lt	40d434 <parse_rtattr_flags@@Base+0x64>  // b.tstop
  40d478:	and	x0, x0, #0xffff
  40d47c:	ldr	x2, [x22, x0, lsl #3]
  40d480:	cbnz	x2, 40d434 <parse_rtattr_flags@@Base+0x64>
  40d484:	b	40d430 <parse_rtattr_flags@@Base+0x60>
  40d488:	ldrh	w3, [x19]
  40d48c:	mov	w2, w20
  40d490:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40d494:	add	x1, x1, #0x808
  40d498:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40d49c:	ldr	x0, [x0, #3992]
  40d4a0:	ldr	x0, [x0]
  40d4a4:	bl	405250 <fprintf@plt>
  40d4a8:	b	40d418 <parse_rtattr_flags@@Base+0x48>

000000000040d4ac <parse_rtattr@@Base>:
  40d4ac:	stp	x29, x30, [sp, #-16]!
  40d4b0:	mov	x29, sp
  40d4b4:	mov	w4, #0x0                   	// #0
  40d4b8:	bl	40d3d0 <parse_rtattr_flags@@Base>
  40d4bc:	ldp	x29, x30, [sp], #16
  40d4c0:	ret

000000000040d4c4 <parse_rtattr_one@@Base>:
  40d4c4:	cmp	w2, #0x3
  40d4c8:	b.le	40d504 <parse_rtattr_one@@Base+0x40>
  40d4cc:	ldrh	w3, [x1]
  40d4d0:	cmp	w3, #0x3
  40d4d4:	b.ls	40d504 <parse_rtattr_one@@Base+0x40>  // b.plast
  40d4d8:	cmp	w3, w2
  40d4dc:	b.gt	40d504 <parse_rtattr_one@@Base+0x40>
  40d4e0:	ldrh	w4, [x1, #2]
  40d4e4:	cmp	w4, w0
  40d4e8:	b.eq	40d540 <parse_rtattr_one@@Base+0x7c>  // b.none
  40d4ec:	add	w3, w3, #0x3
  40d4f0:	and	w3, w3, #0xfffffffc
  40d4f4:	sub	w2, w2, w3
  40d4f8:	add	x1, x1, w3, uxtw
  40d4fc:	cmp	w2, #0x3
  40d500:	b.gt	40d4cc <parse_rtattr_one@@Base+0x8>
  40d504:	mov	x0, #0x0                   	// #0
  40d508:	cbnz	w2, 40d510 <parse_rtattr_one@@Base+0x4c>
  40d50c:	ret
  40d510:	stp	x29, x30, [sp, #-16]!
  40d514:	mov	x29, sp
  40d518:	ldrh	w3, [x1]
  40d51c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9b8>
  40d520:	add	x1, x1, #0x808
  40d524:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x139b8>
  40d528:	ldr	x0, [x0, #3992]
  40d52c:	ldr	x0, [x0]
  40d530:	bl	405250 <fprintf@plt>
  40d534:	mov	x0, #0x0                   	// #0
  40d538:	ldp	x29, x30, [sp], #16
  40d53c:	ret
  40d540:	mov	x0, x1
  40d544:	ret

000000000040d548 <__parse_rtattr_nested_compat@@Base>:
  40d548:	ldrh	w4, [x2]
  40d54c:	sub	x4, x4, #0x4
  40d550:	cmp	x4, w3, sxtw
  40d554:	b.cc	40d5a8 <__parse_rtattr_nested_compat@@Base+0x60>  // b.lo, b.ul, b.last
  40d558:	stp	x29, x30, [sp, #-16]!
  40d55c:	mov	x29, sp
  40d560:	add	w3, w3, #0x3
  40d564:	and	x3, x3, #0xfffffffc
  40d568:	add	x3, x3, #0x4
  40d56c:	cmp	x4, x3
  40d570:	b.cs	40d590 <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  40d574:	add	w1, w1, #0x1
  40d578:	sbfiz	x2, x1, #3, #32
  40d57c:	mov	w1, #0x0                   	// #0
  40d580:	bl	404f00 <memset@plt>
  40d584:	mov	w0, #0x0                   	// #0
  40d588:	ldp	x29, x30, [sp], #16
  40d58c:	ret
  40d590:	add	x4, x2, x3
  40d594:	ldrh	w3, [x2, x3]
  40d598:	sub	w3, w3, #0x4
  40d59c:	add	x2, x4, #0x4
  40d5a0:	bl	40d4ac <parse_rtattr@@Base>
  40d5a4:	b	40d588 <__parse_rtattr_nested_compat@@Base+0x40>
  40d5a8:	mov	w0, #0xffffffff            	// #-1
  40d5ac:	ret

000000000040d5b0 <__libc_csu_init@@Base>:
  40d5b0:	stp	x29, x30, [sp, #-64]!
  40d5b4:	mov	x29, sp
  40d5b8:	stp	x19, x20, [sp, #16]
  40d5bc:	adrp	x20, 421000 <_IO_stdin_used@@Base+0x139b8>
  40d5c0:	add	x20, x20, #0xce8
  40d5c4:	stp	x21, x22, [sp, #32]
  40d5c8:	adrp	x21, 421000 <_IO_stdin_used@@Base+0x139b8>
  40d5cc:	add	x21, x21, #0xce0
  40d5d0:	sub	x20, x20, x21
  40d5d4:	mov	w22, w0
  40d5d8:	stp	x23, x24, [sp, #48]
  40d5dc:	mov	x23, x1
  40d5e0:	mov	x24, x2
  40d5e4:	bl	404ce0 <memcpy@plt-0x40>
  40d5e8:	cmp	xzr, x20, asr #3
  40d5ec:	b.eq	40d618 <__libc_csu_init@@Base+0x68>  // b.none
  40d5f0:	asr	x20, x20, #3
  40d5f4:	mov	x19, #0x0                   	// #0
  40d5f8:	ldr	x3, [x21, x19, lsl #3]
  40d5fc:	mov	x2, x24
  40d600:	add	x19, x19, #0x1
  40d604:	mov	x1, x23
  40d608:	mov	w0, w22
  40d60c:	blr	x3
  40d610:	cmp	x20, x19
  40d614:	b.ne	40d5f8 <__libc_csu_init@@Base+0x48>  // b.any
  40d618:	ldp	x19, x20, [sp, #16]
  40d61c:	ldp	x21, x22, [sp, #32]
  40d620:	ldp	x23, x24, [sp, #48]
  40d624:	ldp	x29, x30, [sp], #64
  40d628:	ret
  40d62c:	nop

000000000040d630 <__libc_csu_fini@@Base>:
  40d630:	ret

Disassembly of section .fini:

000000000040d634 <.fini>:
  40d634:	stp	x29, x30, [sp, #-16]!
  40d638:	mov	x29, sp
  40d63c:	ldp	x29, x30, [sp], #16
  40d640:	ret
