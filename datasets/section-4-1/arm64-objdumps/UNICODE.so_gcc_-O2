
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//UNICODE.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000748 <.init>:
 748:	stp	x29, x30, [sp, #-16]!
 74c:	mov	x29, sp
 750:	bl	810 <__assert_fail@plt+0x10>
 754:	ldp	x29, x30, [sp], #16
 758:	ret

Disassembly of section .plt:

0000000000000760 <__cxa_finalize@plt-0x20>:
 760:	stp	x16, x30, [sp, #-16]!
 764:	adrp	x16, 11000 <gconv@@Base+0x10680>
 768:	ldr	x17, [x16, #4088]
 76c:	add	x16, x16, #0xff8
 770:	br	x17
 774:	nop
 778:	nop
 77c:	nop

0000000000000780 <__cxa_finalize@plt>:
 780:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 784:	ldr	x17, [x16]
 788:	add	x16, x16, #0x0
 78c:	br	x17

0000000000000790 <malloc@plt>:
 790:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 794:	ldr	x17, [x16, #8]
 798:	add	x16, x16, #0x8
 79c:	br	x17

00000000000007a0 <__gconv_transliterate@plt>:
 7a0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #16]
 7a8:	add	x16, x16, #0x10
 7ac:	br	x17

00000000000007b0 <__stack_chk_fail@plt>:
 7b0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #24]
 7b8:	add	x16, x16, #0x18
 7bc:	br	x17

00000000000007c0 <__gmon_start__@plt>:
 7c0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #32]
 7c8:	add	x16, x16, #0x20
 7cc:	br	x17

00000000000007d0 <strcmp@plt>:
 7d0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #40]
 7d8:	add	x16, x16, #0x28
 7dc:	br	x17

00000000000007e0 <free@plt>:
 7e0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #48]
 7e8:	add	x16, x16, #0x30
 7ec:	br	x17

00000000000007f0 <_dl_mcount_wrapper_check@plt>:
 7f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #56]
 7f8:	add	x16, x16, #0x38
 7fc:	br	x17

0000000000000800 <__assert_fail@plt>:
 800:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 804:	ldr	x17, [x16, #64]
 808:	add	x16, x16, #0x40
 80c:	br	x17

Disassembly of section .text:

0000000000000810 <gconv_init@@Base-0xd8>:
     810:	adrp	x0, 11000 <gconv@@Base+0x10680>
     814:	ldr	x0, [x0, #4048]
     818:	cbz	x0, 820 <__assert_fail@plt+0x20>
     81c:	b	7c0 <__gmon_start__@plt>
     820:	ret
     824:	nop
     828:	adrp	x0, 12000 <gconv@@Base+0x11680>
     82c:	add	x0, x0, #0x50
     830:	adrp	x1, 12000 <gconv@@Base+0x11680>
     834:	add	x1, x1, #0x50
     838:	cmp	x1, x0
     83c:	b.eq	854 <__assert_fail@plt+0x54>  // b.none
     840:	adrp	x1, 11000 <gconv@@Base+0x10680>
     844:	ldr	x1, [x1, #4024]
     848:	cbz	x1, 854 <__assert_fail@plt+0x54>
     84c:	mov	x16, x1
     850:	br	x16
     854:	ret
     858:	adrp	x0, 12000 <gconv@@Base+0x11680>
     85c:	add	x0, x0, #0x50
     860:	adrp	x1, 12000 <gconv@@Base+0x11680>
     864:	add	x1, x1, #0x50
     868:	sub	x1, x1, x0
     86c:	lsr	x2, x1, #63
     870:	add	x1, x2, x1, asr #3
     874:	cmp	xzr, x1, asr #1
     878:	asr	x1, x1, #1
     87c:	b.eq	894 <__assert_fail@plt+0x94>  // b.none
     880:	adrp	x2, 11000 <gconv@@Base+0x10680>
     884:	ldr	x2, [x2, #4064]
     888:	cbz	x2, 894 <__assert_fail@plt+0x94>
     88c:	mov	x16, x2
     890:	br	x16
     894:	ret
     898:	stp	x29, x30, [sp, #-32]!
     89c:	mov	x29, sp
     8a0:	str	x19, [sp, #16]
     8a4:	adrp	x19, 12000 <gconv@@Base+0x11680>
     8a8:	ldrb	w0, [x19, #80]
     8ac:	cbnz	w0, 8d4 <__assert_fail@plt+0xd4>
     8b0:	adrp	x0, 11000 <gconv@@Base+0x10680>
     8b4:	ldr	x0, [x0, #4032]
     8b8:	cbz	x0, 8c8 <__assert_fail@plt+0xc8>
     8bc:	adrp	x0, 12000 <gconv@@Base+0x11680>
     8c0:	ldr	x0, [x0, #72]
     8c4:	bl	780 <__cxa_finalize@plt>
     8c8:	bl	828 <__assert_fail@plt+0x28>
     8cc:	mov	w0, #0x1                   	// #1
     8d0:	strb	w0, [x19, #80]
     8d4:	ldr	x19, [sp, #16]
     8d8:	ldp	x29, x30, [sp], #32
     8dc:	ret
     8e0:	b	858 <__assert_fail@plt+0x58>
     8e4:	nop

00000000000008e8 <gconv_init@@Base>:
     8e8:	stp	x29, x30, [sp, #-32]!
     8ec:	adrp	x1, 1000 <gconv@@Base+0x680>
     8f0:	add	x1, x1, #0x830
     8f4:	mov	x29, sp
     8f8:	str	x19, [sp, #16]
     8fc:	mov	x19, x0
     900:	ldr	x0, [x0, #24]
     904:	bl	7d0 <strcmp@plt>
     908:	cbnz	w0, 934 <gconv_init@@Base+0x4c>
     90c:	mov	x0, #0x4                   	// #4
     910:	bl	790 <malloc@plt>
     914:	cbz	x0, 96c <gconv_init@@Base+0x84>
     918:	mov	w3, #0x2                   	// #2
     91c:	str	w3, [x0]
     920:	mov	x2, #0x200000002           	// #8589934594
     924:	mov	x1, #0x400000004           	// #17179869188
     928:	stp	x2, x1, [x19, #72]
     92c:	str	x0, [x19, #96]
     930:	b	958 <gconv_init@@Base+0x70>
     934:	mov	x0, #0x4                   	// #4
     938:	bl	790 <malloc@plt>
     93c:	cbz	x0, 96c <gconv_init@@Base+0x84>
     940:	mov	w3, #0x1                   	// #1
     944:	str	w3, [x0]
     948:	mov	x2, #0x400000004           	// #17179869188
     94c:	mov	x1, #0x200000002           	// #8589934594
     950:	stp	x2, x1, [x19, #72]
     954:	str	x0, [x19, #96]
     958:	mov	w0, #0x0                   	// #0
     95c:	str	wzr, [x19, #88]
     960:	ldr	x19, [sp, #16]
     964:	ldp	x29, x30, [sp], #32
     968:	ret
     96c:	mov	w0, #0x3                   	// #3
     970:	b	960 <gconv_init@@Base+0x78>
     974:	nop

0000000000000978 <gconv_end@@Base>:
     978:	ldr	x0, [x0, #96]
     97c:	b	7e0 <free@plt>

0000000000000980 <gconv@@Base>:
     980:	stp	x29, x30, [sp, #-240]!
     984:	mov	x15, x4
     988:	mov	x29, sp
     98c:	stp	x21, x22, [sp, #32]
     990:	mov	x21, x1
     994:	adrp	x1, 11000 <gconv@@Base+0x10680>
     998:	stp	x19, x20, [sp, #16]
     99c:	mov	x20, x3
     9a0:	ldr	w19, [x21, #16]
     9a4:	ldr	x1, [x1, #4056]
     9a8:	stp	x23, x24, [sp, #48]
     9ac:	mov	w24, w7
     9b0:	ldr	x8, [x1]
     9b4:	str	x8, [sp, #232]
     9b8:	mov	x8, #0x0                   	// #0
     9bc:	add	x1, x0, #0x68
     9c0:	stp	x25, x26, [sp, #64]
     9c4:	mov	x25, x2
     9c8:	add	x2, x21, #0x30
     9cc:	stp	x1, x2, [sp, #120]
     9d0:	mov	x26, x5
     9d4:	mov	x23, #0x0                   	// #0
     9d8:	str	x0, [sp, #152]
     9dc:	tbnz	w19, #0, 9fc <gconv@@Base+0x7c>
     9e0:	ldr	x0, [x0, #104]
     9e4:	ldr	x23, [x1, #40]
     9e8:	cbz	x0, 9fc <gconv@@Base+0x7c>
     9ec:	adrp	x0, 11000 <gconv@@Base+0x10680>
     9f0:	ldr	x0, [x0, #4040]
     9f4:	ldr	x0, [x0]
     9f8:	eor	x23, x23, x0
     9fc:	cbnz	w6, 1130 <gconv@@Base+0x7b0>
     a00:	ldr	x1, [sp, #152]
     a04:	cmp	x15, #0x0
     a08:	csel	x2, x21, x15, eq  // eq = none
     a0c:	add	x0, sp, #0xc0
     a10:	cmp	x26, #0x0
     a14:	stp	x27, x28, [sp, #80]
     a18:	csel	x0, x0, xzr, ne  // ne = any
     a1c:	ldr	x1, [x1, #96]
     a20:	ldr	x8, [x2]
     a24:	str	x0, [sp, #144]
     a28:	ldr	w0, [x1]
     a2c:	str	xzr, [sp, #192]
     a30:	mov	w1, w0
     a34:	str	w1, [sp, #160]
     a38:	cmp	w0, #0x2
     a3c:	ldr	x0, [x25]
     a40:	ldr	x27, [x21, #8]
     a44:	b.eq	b98 <gconv@@Base+0x218>  // b.none
     a48:	ldr	w0, [x21, #24]
     a4c:	cbnz	w0, bc8 <gconv@@Base+0x248>
     a50:	ldr	w0, [x21, #20]
     a54:	cbnz	w0, bc8 <gconv@@Base+0x248>
     a58:	add	x0, x8, #0x2
     a5c:	cmp	x0, x27
     a60:	b.hi	1190 <gconv@@Base+0x810>  // b.pmore
     a64:	and	w2, w19, #0x4
     a68:	mov	w1, #0xfffffeff            	// #-257
     a6c:	strh	w1, [x8]
     a70:	mov	x8, x0
     a74:	str	w2, [sp, #164]
     a78:	cbz	w24, bd4 <gconv@@Base+0x254>
     a7c:	nop
     a80:	ldr	x28, [x21, #32]
     a84:	ldr	w0, [x28]
     a88:	ands	w1, w0, #0x7
     a8c:	b.eq	bd4 <gconv@@Base+0x254>  // b.none
     a90:	cbnz	x15, 1794 <gconv@@Base+0xe14>
     a94:	ldr	w2, [sp, #160]
     a98:	cmp	w2, #0x2
     a9c:	ldr	x2, [x25]
     aa0:	b.eq	ff4 <gconv@@Base+0x674>  // b.none
     aa4:	stp	x2, x8, [sp, #208]
     aa8:	cmp	w1, #0x4
     aac:	b.hi	1810 <gconv@@Base+0xe90>  // b.pmore
     ab0:	mov	w22, w1
     ab4:	cbz	w1, 13d4 <gconv@@Base+0xa54>
     ab8:	add	x7, sp, #0xe0
     abc:	add	x5, x28, #0x3
     ac0:	mov	x0, #0x1                   	// #1
     ac4:	nop
     ac8:	add	x1, x7, x0
     acc:	ldrb	w4, [x5, x0]
     ad0:	cmp	x22, x0
     ad4:	add	x0, x0, #0x1
     ad8:	sturb	w4, [x1, #-1]
     adc:	b.ne	ac8 <gconv@@Base+0x148>  // b.any
     ae0:	mov	x0, #0x4                   	// #4
     ae4:	sub	x0, x0, x22
     ae8:	add	x0, x2, x0
     aec:	cmp	x20, x0
     af0:	b.cc	1444 <gconv@@Base+0xac4>  // b.lo, b.ul, b.last
     af4:	add	x5, x8, #0x2
     af8:	add	x0, x2, #0x1
     afc:	add	x7, sp, #0xe0
     b00:	cmp	x27, x5
     b04:	b.cc	1190 <gconv@@Base+0x810>  // b.lo, b.ul, b.last
     b08:	add	x22, x22, #0x1
     b0c:	str	x0, [sp, #208]
     b10:	add	x4, x7, x22
     b14:	cmp	x22, #0x3
     b18:	ldurb	w1, [x0, #-1]
     b1c:	ccmp	x20, x0, #0x0, ls  // ls = plast
     b20:	add	x0, x0, #0x1
     b24:	sturb	w1, [x4, #-1]
     b28:	b.hi	b08 <gconv@@Base+0x188>  // b.pmore
     b2c:	ldr	w0, [sp, #224]
     b30:	mov	w1, #0xffff                	// #65535
     b34:	str	x7, [sp, #208]
     b38:	cmp	w0, w1
     b3c:	b.hi	1488 <gconv@@Base+0xb08>  // b.pmore
     b40:	mov	w1, #0xffff2800            	// #-55296
     b44:	add	w1, w0, w1
     b48:	cmp	w1, #0x7ff
     b4c:	b.ls	14b0 <gconv@@Base+0xb30>  // b.plast
     b50:	strh	w0, [x8]
     b54:	add	x7, x7, #0x4
     b58:	mov	x2, #0x4                   	// #4
     b5c:	stp	x7, x5, [sp, #208]
     b60:	ldr	w0, [x28]
     b64:	and	x1, x0, #0x7
     b68:	cmp	x1, x2
     b6c:	b.ge	1700 <gconv@@Base+0xd80>  // b.tcont
     b70:	ldr	x22, [x25]
     b74:	sub	x1, x2, x1
     b78:	ldr	w19, [x21, #16]
     b7c:	and	w0, w0, #0xfffffff8
     b80:	add	x22, x22, x1
     b84:	str	x22, [x25]
     b88:	ldr	x14, [sp, #192]
     b8c:	ldr	x8, [sp, #216]
     b90:	str	w0, [x28]
     b94:	b	bdc <gconv@@Base+0x25c>
     b98:	ldr	w1, [x21, #20]
     b9c:	cbnz	w1, bc8 <gconv@@Base+0x248>
     ba0:	add	x1, x0, #0x2
     ba4:	cmp	x1, x20
     ba8:	b.hi	11ac <gconv@@Base+0x82c>  // b.pmore
     bac:	ldrh	w0, [x0]
     bb0:	mov	w2, #0xfeff                	// #65279
     bb4:	cmp	w0, w2
     bb8:	b.eq	1360 <gconv@@Base+0x9e0>  // b.none
     bbc:	mov	w2, #0xfffe                	// #65534
     bc0:	cmp	w0, w2
     bc4:	b.eq	125c <gconv@@Base+0x8dc>  // b.none
     bc8:	and	w0, w19, #0x4
     bcc:	str	w0, [sp, #164]
     bd0:	cbnz	w24, a80 <gconv@@Base+0x100>
     bd4:	ldr	x22, [x25]
     bd8:	mov	x14, #0x0                   	// #0
     bdc:	add	x28, sp, #0xc8
     be0:	add	x0, sp, #0xd8
     be4:	str	w24, [sp, #112]
     be8:	mov	x24, x26
     bec:	mov	x26, x14
     bf0:	str	x28, [sp, #136]
     bf4:	mov	x28, x22
     bf8:	mov	x22, x27
     bfc:	mov	x27, x8
     c00:	str	x15, [sp, #104]
     c04:	str	x0, [sp, #168]
     c08:	add	x0, sp, #0xd0
     c0c:	str	x0, [sp, #176]
     c10:	cbz	x24, c1c <gconv@@Base+0x29c>
     c14:	ldr	x0, [x24]
     c18:	add	x26, x26, x0
     c1c:	ldr	w0, [sp, #160]
     c20:	cmp	w0, #0x2
     c24:	b.eq	d24 <gconv@@Base+0x3a4>  // b.none
     c28:	stp	x28, x27, [sp, #208]
     c2c:	cmp	x20, x28
     c30:	b.eq	119c <gconv@@Base+0x81c>  // b.none
     c34:	and	w7, w19, #0x2
     c38:	mov	x0, x28
     c3c:	mov	x19, x27
     c40:	mov	w12, #0x4                   	// #4
     c44:	mov	w11, #0xffff                	// #65535
     c48:	mov	w18, #0xffff2800            	// #-55296
     c4c:	add	x2, x0, #0x4
     c50:	cmp	x20, x2
     c54:	b.cc	e1c <gconv@@Base+0x49c>  // b.lo, b.ul, b.last
     c58:	add	x3, x19, #0x2
     c5c:	cmp	x22, x3
     c60:	b.cc	e28 <gconv@@Base+0x4a8>  // b.lo, b.ul, b.last
     c64:	ldr	w5, [x0]
     c68:	cmp	w5, w11
     c6c:	b.hi	e34 <gconv@@Base+0x4b4>  // b.pmore
     c70:	add	w4, w5, w18
     c74:	cmp	w4, #0x7ff
     c78:	b.ls	e60 <gconv@@Base+0x4e0>  // b.plast
     c7c:	mov	x0, x2
     c80:	strh	w5, [x19]
     c84:	mov	x19, x3
     c88:	stp	x2, x3, [sp, #208]
     c8c:	cmp	x20, x0
     c90:	b.ne	c4c <gconv@@Base+0x2cc>  // b.any
     c94:	nop
     c98:	str	x0, [x25]
     c9c:	ldr	x0, [sp, #104]
     ca0:	cbnz	x0, dd0 <gconv@@Base+0x450>
     ca4:	ldp	w1, w0, [x21, #16]
     ca8:	add	w0, w0, #0x1
     cac:	str	w0, [x21, #20]
     cb0:	tbnz	w1, #0, ea4 <gconv@@Base+0x524>
     cb4:	cmp	x27, x19
     cb8:	b.cs	ee0 <gconv@@Base+0x560>  // b.hs, b.nlast
     cbc:	ldr	x1, [x21]
     cc0:	mov	x0, x23
     cc4:	str	w12, [sp, #96]
     cc8:	str	x1, [sp, #200]
     ccc:	bl	7f0 <_dl_mcount_wrapper_check@plt>
     cd0:	ldp	x0, x1, [sp, #120]
     cd4:	mov	x5, x24
     cd8:	ldr	w7, [sp, #112]
     cdc:	mov	x3, x19
     ce0:	ldr	x2, [sp, #136]
     ce4:	mov	w6, #0x0                   	// #0
     ce8:	mov	x4, #0x0                   	// #0
     cec:	blr	x23
     cf0:	mov	w7, w0
     cf4:	ldr	w12, [sp, #96]
     cf8:	cmp	w0, #0x4
     cfc:	b.eq	e0c <gconv@@Base+0x48c>  // b.none
     d00:	ldr	x12, [sp, #200]
     d04:	cmp	x12, x19
     d08:	b.ne	f2c <gconv@@Base+0x5ac>  // b.any
     d0c:	cbnz	w7, 1184 <gconv@@Base+0x804>
     d10:	ldr	w19, [x21, #16]
     d14:	ldr	x27, [x21]
     d18:	ldr	x28, [x25]
     d1c:	ldr	x26, [sp, #192]
     d20:	b	c10 <gconv@@Base+0x290>
     d24:	cmp	x20, x28
     d28:	b.eq	1388 <gconv@@Base+0xa08>  // b.none
     d2c:	add	x1, x28, #0x2
     d30:	cmp	x1, x20
     d34:	b.hi	1108 <gconv@@Base+0x788>  // b.pmore
     d38:	add	x3, x27, #0x4
     d3c:	cmp	x3, x22
     d40:	b.hi	111c <gconv@@Base+0x79c>  // b.pmore
     d44:	ldr	w6, [sp, #164]
     d48:	and	w7, w19, #0x2
     d4c:	mov	x19, x27
     d50:	mov	w12, #0x4                   	// #4
     d54:	mov	w4, #0x2800                	// #10240
     d58:	ldurh	w0, [x1, #-2]
     d5c:	cmp	w6, #0x0
     d60:	sub	x5, x1, #0x2
     d64:	rev16	w2, w0
     d68:	and	w2, w2, #0xffff
     d6c:	csel	w0, w2, w0, ne  // ne = any
     d70:	add	w2, w0, w4
     d74:	and	w2, w2, #0xffff
     d78:	cmp	w2, #0x7ff
     d7c:	b.ls	db0 <gconv@@Base+0x430>  // b.plast
     d80:	str	w0, [x19]
     d84:	mov	x19, x3
     d88:	cmp	x20, x1
     d8c:	b.eq	dc4 <gconv@@Base+0x444>  // b.none
     d90:	add	x0, x1, #0x2
     d94:	cmp	x20, x0
     d98:	b.cc	e98 <gconv@@Base+0x518>  // b.lo, b.ul, b.last
     d9c:	add	x3, x19, #0x4
     da0:	cmp	x22, x3
     da4:	b.cc	ed4 <gconv@@Base+0x554>  // b.lo, b.ul, b.last
     da8:	mov	x1, x0
     dac:	b	d58 <gconv@@Base+0x3d8>
     db0:	ldr	x2, [sp, #144]
     db4:	cbz	x2, dbc <gconv@@Base+0x43c>
     db8:	cbnz	w7, 10c8 <gconv@@Base+0x748>
     dbc:	mov	x1, x5
     dc0:	mov	w12, #0x6                   	// #6
     dc4:	str	x1, [x25]
     dc8:	ldr	x0, [sp, #104]
     dcc:	cbz	x0, ca4 <gconv@@Base+0x324>
     dd0:	ldp	x27, x28, [sp, #80]
     dd4:	str	x19, [x0]
     dd8:	adrp	x0, 11000 <gconv@@Base+0x10680>
     ddc:	ldr	x0, [x0, #4056]
     de0:	ldr	x1, [sp, #232]
     de4:	ldr	x0, [x0]
     de8:	eor	x0, x1, x0
     dec:	cbnz	x0, 1808 <gconv@@Base+0xe88>
     df0:	mov	w0, w12
     df4:	ldp	x19, x20, [sp, #16]
     df8:	ldp	x21, x22, [sp, #32]
     dfc:	ldp	x23, x24, [sp, #48]
     e00:	ldp	x25, x26, [sp, #64]
     e04:	ldp	x29, x30, [sp], #240
     e08:	ret
     e0c:	mov	w7, w12
     e10:	cmp	w12, #0x5
     e14:	b.ne	d0c <gconv@@Base+0x38c>  // b.any
     e18:	b	d10 <gconv@@Base+0x390>
     e1c:	mov	w12, #0x7                   	// #7
     e20:	ldr	x0, [sp, #208]
     e24:	b	c98 <gconv@@Base+0x318>
     e28:	mov	w12, #0x5                   	// #5
     e2c:	ldr	x0, [sp, #208]
     e30:	b	c98 <gconv@@Base+0x318>
     e34:	mov	w3, #0x1c00                	// #7168
     e38:	cmp	w3, w5, lsr #7
     e3c:	b.eq	10dc <gconv@@Base+0x75c>  // b.none
     e40:	ldr	x0, [sp, #144]
     e44:	cbz	x0, e6c <gconv@@Base+0x4ec>
     e48:	ldr	w0, [x21, #16]
     e4c:	tbnz	w0, #3, ee8 <gconv@@Base+0x568>
     e50:	ldr	x0, [sp, #208]
     e54:	cbnz	w7, 10e8 <gconv@@Base+0x768>
     e58:	mov	w12, #0x6                   	// #6
     e5c:	b	c98 <gconv@@Base+0x318>
     e60:	ldr	x0, [sp, #144]
     e64:	cbz	x0, e6c <gconv@@Base+0x4ec>
     e68:	cbnz	w7, e78 <gconv@@Base+0x4f8>
     e6c:	mov	w12, #0x6                   	// #6
     e70:	ldr	x0, [sp, #208]
     e74:	b	c98 <gconv@@Base+0x318>
     e78:	ldr	x3, [sp, #144]
     e7c:	mov	x0, x2
     e80:	mov	w12, #0x6                   	// #6
     e84:	str	x2, [sp, #208]
     e88:	ldr	x1, [x3]
     e8c:	add	x1, x1, #0x1
     e90:	str	x1, [x3]
     e94:	b	c8c <gconv@@Base+0x30c>
     e98:	mov	w12, #0x7                   	// #7
     e9c:	str	x1, [x25]
     ea0:	b	dc8 <gconv@@Base+0x448>
     ea4:	mov	x26, x24
     ea8:	ldr	w24, [sp, #112]
     eac:	ldr	x1, [sp, #192]
     eb0:	ldr	x0, [x26]
     eb4:	str	x19, [x21]
     eb8:	add	x0, x0, x1
     ebc:	str	x0, [x26]
     ec0:	cmp	w24, #0x0
     ec4:	ccmp	w12, #0x7, #0x0, ne  // ne = any
     ec8:	b.eq	1278 <gconv@@Base+0x8f8>  // b.none
     ecc:	ldp	x27, x28, [sp, #80]
     ed0:	b	dd8 <gconv@@Base+0x458>
     ed4:	mov	w12, #0x5                   	// #5
     ed8:	str	x1, [x25]
     edc:	b	dc8 <gconv@@Base+0x448>
     ee0:	mov	w7, w12
     ee4:	b	d0c <gconv@@Base+0x38c>
     ee8:	ldp	x6, x0, [sp, #144]
     eec:	mov	x4, x20
     ef0:	ldp	x5, x3, [sp, #168]
     ef4:	mov	x1, x21
     ef8:	ldr	x2, [x25]
     efc:	str	w7, [sp, #96]
     f00:	bl	7a0 <__gconv_transliterate@plt>
     f04:	mov	w12, w0
     f08:	ldr	w7, [sp, #96]
     f0c:	cmp	w0, #0x6
     f10:	mov	w11, #0xffff                	// #65535
     f14:	mov	w18, #0xffff2800            	// #-55296
     f18:	b.eq	117c <gconv@@Base+0x7fc>  // b.none
     f1c:	cmp	w0, #0x5
     f20:	ldp	x0, x19, [sp, #208]
     f24:	b.ne	c8c <gconv@@Base+0x30c>  // b.any
     f28:	b	c98 <gconv@@Base+0x318>
     f2c:	mov	x0, #0x0                   	// #0
     f30:	cbz	x24, f38 <gconv@@Base+0x5b8>
     f34:	ldr	x0, [x24]
     f38:	ldr	x1, [sp, #192]
     f3c:	add	x0, x0, x1
     f40:	cmp	x0, x26
     f44:	b.eq	1338 <gconv@@Base+0x9b8>  // b.none
     f48:	ldr	w14, [x21, #16]
     f4c:	ldr	w0, [sp, #160]
     f50:	str	x28, [x25]
     f54:	cmp	w0, #0x2
     f58:	b.eq	11c4 <gconv@@Base+0x844>  // b.none
     f5c:	stp	x28, x27, [sp, #208]
     f60:	cmp	x20, x28
     f64:	b.eq	12d0 <gconv@@Base+0x950>  // b.none
     f68:	and	w14, w14, #0x2
     f6c:	mov	x0, x27
     f70:	mov	x5, #0x4                   	// #4
     f74:	mov	w19, #0xffff                	// #65535
     f78:	mov	w26, #0xffff2800            	// #-55296
     f7c:	add	x2, x28, #0x4
     f80:	cmp	x20, x2
     f84:	b.cc	12f8 <gconv@@Base+0x978>  // b.lo, b.ul, b.last
     f88:	add	x3, x0, #0x2
     f8c:	cmp	x12, x3
     f90:	b.cc	1374 <gconv@@Base+0x9f4>  // b.lo, b.ul, b.last
     f94:	ldr	w6, [x28]
     f98:	cmp	w6, w19
     f9c:	b.hi	139c <gconv@@Base+0xa1c>  // b.pmore
     fa0:	add	w4, w6, w26
     fa4:	cmp	w4, #0x7ff
     fa8:	b.ls	13e0 <gconv@@Base+0xa60>  // b.plast
     fac:	mov	x28, x2
     fb0:	strh	w6, [x0]
     fb4:	mov	x0, x3
     fb8:	stp	x2, x3, [sp, #208]
     fbc:	cmp	x28, x20
     fc0:	b.ne	f7c <gconv@@Base+0x5fc>  // b.any
     fc4:	ldr	x12, [sp, #200]
     fc8:	str	x20, [x25]
     fcc:	cmp	x0, x12
     fd0:	b.ne	1308 <gconv@@Base+0x988>  // b.any
     fd4:	cmp	x5, #0x5
     fd8:	b.ne	12d8 <gconv@@Base+0x958>  // b.any
     fdc:	cmp	x27, x0
     fe0:	b.ne	d0c <gconv@@Base+0x38c>  // b.any
     fe4:	ldr	w0, [x21, #20]
     fe8:	sub	w0, w0, #0x1
     fec:	str	w0, [x21, #20]
     ff0:	b	d0c <gconv@@Base+0x38c>
     ff4:	cmp	w1, #0x4
     ff8:	b.hi	17e8 <gconv@@Base+0xe68>  // b.pmore
     ffc:	cbz	w1, 1250 <gconv@@Base+0x8d0>
    1000:	ldrb	w1, [x28, #4]
    1004:	tst	w0, #0x6
    1008:	strb	w1, [sp, #224]
    100c:	b.eq	142c <gconv@@Base+0xaac>  // b.none
    1010:	ldrb	w0, [x28, #5]
    1014:	mov	x1, x2
    1018:	strb	w0, [sp, #225]
    101c:	mov	x0, #0x2                   	// #2
    1020:	cmp	x20, x1
    1024:	b.cc	14dc <gconv@@Base+0xb5c>  // b.lo, b.ul, b.last
    1028:	add	x5, x8, #0x4
    102c:	cmp	x27, x5
    1030:	b.cc	1190 <gconv@@Base+0x810>  // b.lo, b.ul, b.last
    1034:	mov	x1, x2
    1038:	add	x7, sp, #0xe0
    103c:	ldrb	w3, [x1], #1
    1040:	add	x4, x0, #0x1
    1044:	cmp	x4, #0x1
    1048:	strb	w3, [x7, x0]
    104c:	cset	w4, ls  // ls = plast
    1050:	cmp	x20, x1
    1054:	cset	w3, hi  // hi = pmore
    1058:	mov	x0, #0x1                   	// #1
    105c:	tst	w4, w3
    1060:	b.ne	103c <gconv@@Base+0x6bc>  // b.any
    1064:	ldrh	w0, [sp, #224]
    1068:	mov	w3, #0x2800                	// #10240
    106c:	ldr	w1, [sp, #164]
    1070:	cmp	w1, #0x0
    1074:	rev16	w1, w0
    1078:	and	w1, w1, #0xffff
    107c:	csel	w0, w0, w1, eq  // eq = none
    1080:	add	w1, w0, w3
    1084:	and	w1, w1, #0xffff
    1088:	cmp	w1, #0x7ff
    108c:	b.ls	1590 <gconv@@Base+0xc10>  // b.plast
    1090:	str	w0, [x8]
    1094:	mov	x8, x5
    1098:	ldr	w0, [x28]
    109c:	tst	w0, #0x6
    10a0:	and	x1, x0, #0x7
    10a4:	b.ne	17d8 <gconv@@Base+0xe58>  // b.any
    10a8:	sub	x1, x2, x1
    10ac:	ldr	w19, [x21, #16]
    10b0:	add	x22, x1, #0x2
    10b4:	str	x22, [x25]
    10b8:	and	w0, w0, #0xfffffff8
    10bc:	ldr	x14, [sp, #192]
    10c0:	str	w0, [x28]
    10c4:	b	bdc <gconv@@Base+0x25c>
    10c8:	ldr	x0, [x2]
    10cc:	mov	w12, #0x6                   	// #6
    10d0:	add	x0, x0, #0x1
    10d4:	str	x0, [x2]
    10d8:	b	d88 <gconv@@Base+0x408>
    10dc:	mov	x0, x2
    10e0:	str	x2, [sp, #208]
    10e4:	b	c8c <gconv@@Base+0x30c>
    10e8:	ldr	x2, [sp, #144]
    10ec:	add	x0, x0, #0x4
    10f0:	mov	w12, #0x6                   	// #6
    10f4:	str	x0, [sp, #208]
    10f8:	ldr	x1, [x2]
    10fc:	add	x1, x1, #0x1
    1100:	str	x1, [x2]
    1104:	b	c8c <gconv@@Base+0x30c>
    1108:	mov	x1, x28
    110c:	mov	x19, x27
    1110:	mov	w12, #0x7                   	// #7
    1114:	str	x1, [x25]
    1118:	b	dc8 <gconv@@Base+0x448>
    111c:	mov	x1, x28
    1120:	mov	x19, x27
    1124:	mov	w12, #0x5                   	// #5
    1128:	str	x1, [x25]
    112c:	b	dc8 <gconv@@Base+0x448>
    1130:	cbnz	x15, 17b4 <gconv@@Base+0xe34>
    1134:	ldr	x0, [x21, #32]
    1138:	mov	w12, #0x0                   	// #0
    113c:	str	xzr, [x0]
    1140:	ldr	w0, [x21, #16]
    1144:	tbnz	w0, #0, dd8 <gconv@@Base+0x458>
    1148:	mov	x0, x23
    114c:	str	w6, [sp, #96]
    1150:	bl	7f0 <_dl_mcount_wrapper_check@plt>
    1154:	ldp	x0, x1, [sp, #120]
    1158:	mov	w7, w24
    115c:	ldr	w6, [sp, #96]
    1160:	mov	x5, x26
    1164:	mov	x4, #0x0                   	// #0
    1168:	mov	x3, #0x0                   	// #0
    116c:	mov	x2, #0x0                   	// #0
    1170:	blr	x23
    1174:	mov	w12, w0
    1178:	b	dd8 <gconv@@Base+0x458>
    117c:	ldr	x19, [sp, #216]
    1180:	b	e50 <gconv@@Base+0x4d0>
    1184:	ldr	w24, [sp, #112]
    1188:	mov	w12, w7
    118c:	b	ec0 <gconv@@Base+0x540>
    1190:	mov	w12, #0x5                   	// #5
    1194:	ldp	x27, x28, [sp, #80]
    1198:	b	dd8 <gconv@@Base+0x458>
    119c:	mov	x19, x27
    11a0:	mov	x0, x20
    11a4:	mov	w12, #0x4                   	// #4
    11a8:	b	c98 <gconv@@Base+0x318>
    11ac:	cmp	x0, x20
    11b0:	mov	w12, #0x4                   	// #4
    11b4:	mov	w0, #0x7                   	// #7
    11b8:	csel	w12, w12, w0, eq  // eq = none
    11bc:	ldp	x27, x28, [sp, #80]
    11c0:	b	dd8 <gconv@@Base+0x458>
    11c4:	cmp	x20, x28
    11c8:	b.eq	12d0 <gconv@@Base+0x950>  // b.none
    11cc:	add	x9, x28, #0x2
    11d0:	cmp	x20, x9
    11d4:	b.cc	12d0 <gconv@@Base+0x950>  // b.lo, b.ul, b.last
    11d8:	add	x3, x27, #0x4
    11dc:	and	w14, w14, #0x2
    11e0:	cmp	x12, x3
    11e4:	mov	x0, x27
    11e8:	mov	x5, #0x4                   	// #4
    11ec:	mov	w4, #0x2800                	// #10240
    11f0:	b.cc	15b0 <gconv@@Base+0xc30>  // b.lo, b.ul, b.last
    11f4:	ldr	w8, [sp, #164]
    11f8:	ldurh	w1, [x9, #-2]
    11fc:	cmp	w8, #0x0
    1200:	sub	x6, x9, #0x2
    1204:	rev16	w2, w1
    1208:	and	w2, w2, #0xffff
    120c:	csel	w1, w2, w1, ne  // ne = any
    1210:	add	w2, w1, w4
    1214:	and	w2, w2, #0xffff
    1218:	cmp	w2, #0x7ff
    121c:	b.ls	140c <gconv@@Base+0xa8c>  // b.plast
    1220:	str	w1, [x0]
    1224:	mov	x0, x3
    1228:	cmp	x20, x9
    122c:	b.eq	1330 <gconv@@Base+0x9b0>  // b.none
    1230:	add	x1, x9, #0x2
    1234:	cmp	x20, x1
    1238:	b.cc	1438 <gconv@@Base+0xab8>  // b.lo, b.ul, b.last
    123c:	add	x3, x0, #0x4
    1240:	cmp	x12, x3
    1244:	b.cc	147c <gconv@@Base+0xafc>  // b.lo, b.ul, b.last
    1248:	mov	x9, x1
    124c:	b	11f8 <gconv@@Base+0x878>
    1250:	add	x1, x2, #0x2
    1254:	mov	x0, #0x0                   	// #0
    1258:	b	1020 <gconv@@Base+0x6a0>
    125c:	orr	w19, w19, #0x4
    1260:	str	w19, [x21, #16]
    1264:	mov	w0, #0x4                   	// #4
    1268:	str	x1, [x25]
    126c:	str	w0, [sp, #164]
    1270:	cbnz	w24, a80 <gconv@@Base+0x100>
    1274:	b	bd4 <gconv@@Base+0x254>
    1278:	ldr	x0, [x25]
    127c:	sub	x3, x20, x0
    1280:	cmp	x3, #0x3
    1284:	b.gt	1774 <gconv@@Base+0xdf4>
    1288:	ldr	x4, [x21, #32]
    128c:	cmp	x0, x20
    1290:	add	x0, x0, #0x1
    1294:	add	x1, x4, #0x4
    1298:	b.cs	15c4 <gconv@@Base+0xc44>  // b.hs, b.nlast
    129c:	str	x0, [x25]
    12a0:	cmp	x20, x0
    12a4:	add	x0, x0, #0x1
    12a8:	ldurb	w2, [x0, #-2]
    12ac:	strb	w2, [x1], #1
    12b0:	b.ne	129c <gconv@@Base+0x91c>  // b.any
    12b4:	mov	w1, w3
    12b8:	ldr	w0, [x4]
    12bc:	ldp	x27, x28, [sp, #80]
    12c0:	and	w0, w0, #0xfffffff8
    12c4:	orr	w0, w0, w1
    12c8:	str	w0, [x4]
    12cc:	b	dd8 <gconv@@Base+0x458>
    12d0:	cmp	x12, x27
    12d4:	b.ne	1308 <gconv@@Base+0x988>  // b.any
    12d8:	adrp	x3, 1000 <gconv@@Base+0x680>
    12dc:	adrp	x1, 1000 <gconv@@Base+0x680>
    12e0:	adrp	x0, 1000 <gconv@@Base+0x680>
    12e4:	add	x3, x3, #0x9e0
    12e8:	add	x1, x1, #0x840
    12ec:	add	x0, x0, #0x970
    12f0:	mov	w2, #0x2eb                 	// #747
    12f4:	bl	800 <__assert_fail@plt>
    12f8:	ldp	x1, x2, [sp, #200]
    12fc:	str	x2, [x25]
    1300:	cmp	x0, x1
    1304:	b.eq	12d8 <gconv@@Base+0x958>  // b.none
    1308:	adrp	x3, 1000 <gconv@@Base+0x680>
    130c:	adrp	x1, 1000 <gconv@@Base+0x680>
    1310:	adrp	x0, 1000 <gconv@@Base+0x680>
    1314:	add	x3, x3, #0x9e0
    1318:	add	x1, x1, #0x840
    131c:	add	x0, x0, #0x958
    1320:	mov	w2, #0x2ea                 	// #746
    1324:	bl	800 <__assert_fail@plt>
    1328:	mov	x9, x6
    132c:	mov	x5, #0x6                   	// #6
    1330:	str	x9, [x25]
    1334:	b	fcc <gconv@@Base+0x64c>
    1338:	ldr	w0, [sp, #160]
    133c:	sub	x12, x19, x12
    1340:	ldr	x1, [x25]
    1344:	cmp	w0, #0x2
    1348:	add	x0, x12, x12, lsr #63
    134c:	sub	x12, x1, x12, lsl #1
    1350:	sub	x0, x1, x0, asr #1
    1354:	csel	x0, x0, x12, eq  // eq = none
    1358:	str	x0, [x25]
    135c:	b	d0c <gconv@@Base+0x38c>
    1360:	and	w0, w19, #0x4
    1364:	str	x1, [x25]
    1368:	str	w0, [sp, #164]
    136c:	cbnz	w24, a80 <gconv@@Base+0x100>
    1370:	b	bd4 <gconv@@Base+0x254>
    1374:	ldp	x1, x2, [sp, #200]
    1378:	str	x2, [x25]
    137c:	cmp	x0, x1
    1380:	b.eq	fdc <gconv@@Base+0x65c>  // b.none
    1384:	b	1308 <gconv@@Base+0x988>
    1388:	mov	x1, x20
    138c:	mov	x19, x27
    1390:	mov	w12, #0x4                   	// #4
    1394:	str	x1, [x25]
    1398:	b	dc8 <gconv@@Base+0x448>
    139c:	mov	w1, #0x1c00                	// #7168
    13a0:	cmp	w1, w6, lsr #7
    13a4:	b.eq	1584 <gconv@@Base+0xc04>  // b.none
    13a8:	ldr	x1, [sp, #144]
    13ac:	cbz	x1, 1760 <gconv@@Base+0xde0>
    13b0:	ldr	w1, [x21, #16]
    13b4:	tbnz	w1, #3, 1510 <gconv@@Base+0xb90>
    13b8:	ldr	x9, [sp, #208]
    13bc:	cbnz	w14, 1564 <gconv@@Base+0xbe4>
    13c0:	ldr	x1, [sp, #200]
    13c4:	str	x9, [x25]
    13c8:	cmp	x0, x1
    13cc:	b.eq	12d8 <gconv@@Base+0x958>  // b.none
    13d0:	b	1308 <gconv@@Base+0x988>
    13d4:	mov	x0, #0x4                   	// #4
    13d8:	mov	x22, #0x0                   	// #0
    13dc:	b	ae8 <gconv@@Base+0x168>
    13e0:	ldr	x1, [sp, #144]
    13e4:	cbz	x1, 12f8 <gconv@@Base+0x978>
    13e8:	cbz	w14, 12f8 <gconv@@Base+0x978>
    13ec:	ldr	x3, [sp, #144]
    13f0:	mov	x28, x2
    13f4:	mov	x5, #0x6                   	// #6
    13f8:	str	x2, [sp, #208]
    13fc:	ldr	x1, [x3]
    1400:	add	x1, x1, #0x1
    1404:	str	x1, [x3]
    1408:	b	fbc <gconv@@Base+0x63c>
    140c:	ldr	x2, [sp, #144]
    1410:	cbz	x2, 1328 <gconv@@Base+0x9a8>
    1414:	cbz	w14, 1328 <gconv@@Base+0x9a8>
    1418:	ldr	x1, [x2]
    141c:	mov	x5, #0x6                   	// #6
    1420:	add	x1, x1, #0x1
    1424:	str	x1, [x2]
    1428:	b	1228 <gconv@@Base+0x8a8>
    142c:	add	x1, x2, #0x1
    1430:	mov	x0, #0x1                   	// #1
    1434:	b	1020 <gconv@@Base+0x6a0>
    1438:	mov	x5, #0x7                   	// #7
    143c:	str	x9, [x25]
    1440:	b	fcc <gconv@@Base+0x64c>
    1444:	str	x20, [x25]
    1448:	cmp	x20, x2
    144c:	b.ls	1470 <gconv@@Base+0xaf0>  // b.plast
    1450:	add	x22, x28, x22
    1454:	add	x2, x2, #0x1
    1458:	str	x2, [sp, #208]
    145c:	cmp	x20, x2
    1460:	add	x22, x22, #0x1
    1464:	ldurb	w0, [x2, #-1]
    1468:	strb	w0, [x22, #3]
    146c:	b.ne	1454 <gconv@@Base+0xad4>  // b.any
    1470:	mov	w12, #0x7                   	// #7
    1474:	ldp	x27, x28, [sp, #80]
    1478:	b	dd8 <gconv@@Base+0x458>
    147c:	mov	x5, #0x5                   	// #5
    1480:	str	x9, [x25]
    1484:	b	fcc <gconv@@Base+0x64c>
    1488:	mov	w1, #0x1c00                	// #7168
    148c:	cmp	w1, w0, lsr #7
    1490:	b.eq	15cc <gconv@@Base+0xc4c>  // b.none
    1494:	ldr	x0, [sp, #144]
    1498:	cbz	x0, 14a4 <gconv@@Base+0xb24>
    149c:	tbnz	w19, #3, 15dc <gconv@@Base+0xc5c>
    14a0:	tbnz	w19, #1, 16c0 <gconv@@Base+0xd40>
    14a4:	mov	w12, #0x6                   	// #6
    14a8:	ldp	x27, x28, [sp, #80]
    14ac:	b	dd8 <gconv@@Base+0x458>
    14b0:	ldr	x0, [sp, #144]
    14b4:	cbz	x0, 14a4 <gconv@@Base+0xb24>
    14b8:	tbz	w19, #1, 14a4 <gconv@@Base+0xb24>
    14bc:	mov	x1, x0
    14c0:	add	x7, x7, #0x4
    14c4:	ldr	x0, [x0]
    14c8:	mov	x2, #0x4                   	// #4
    14cc:	str	x7, [sp, #208]
    14d0:	add	x0, x0, #0x1
    14d4:	str	x0, [x1]
    14d8:	b	b60 <gconv@@Base+0x1e0>
    14dc:	str	x20, [x25]
    14e0:	cmp	x20, x2
    14e4:	b.ls	1470 <gconv@@Base+0xaf0>  // b.plast
    14e8:	add	x0, x0, #0x4
    14ec:	sub	x20, x20, x2
    14f0:	add	x28, x28, x0
    14f4:	mov	x0, #0x0                   	// #0
    14f8:	ldrb	w1, [x2, x0]
    14fc:	strb	w1, [x28, x0]
    1500:	add	x0, x0, #0x1
    1504:	cmp	x20, x0
    1508:	b.ne	14f8 <gconv@@Base+0xb78>  // b.any
    150c:	b	1470 <gconv@@Base+0xaf0>
    1510:	ldp	x6, x0, [sp, #144]
    1514:	mov	x4, x20
    1518:	ldp	x5, x3, [sp, #168]
    151c:	mov	x1, x21
    1520:	ldr	x2, [x25]
    1524:	str	x12, [sp, #96]
    1528:	stp	w7, w14, [sp, #184]
    152c:	bl	7a0 <__gconv_transliterate@plt>
    1530:	sxtw	x5, w0
    1534:	ldp	w7, w14, [sp, #184]
    1538:	cmp	w5, #0x6
    153c:	ldr	x12, [sp, #96]
    1540:	b.eq	15bc <gconv@@Base+0xc3c>  // b.none
    1544:	cmp	w5, #0x5
    1548:	ldp	x28, x0, [sp, #208]
    154c:	b.ne	fbc <gconv@@Base+0x63c>  // b.any
    1550:	ldr	x1, [sp, #200]
    1554:	str	x28, [x25]
    1558:	cmp	x0, x1
    155c:	b.eq	fdc <gconv@@Base+0x65c>  // b.none
    1560:	b	1308 <gconv@@Base+0x988>
    1564:	ldr	x2, [sp, #144]
    1568:	add	x28, x9, #0x4
    156c:	mov	x5, #0x6                   	// #6
    1570:	str	x28, [sp, #208]
    1574:	ldr	x1, [x2]
    1578:	add	x1, x1, #0x1
    157c:	str	x1, [x2]
    1580:	b	fbc <gconv@@Base+0x63c>
    1584:	mov	x28, x2
    1588:	str	x2, [sp, #208]
    158c:	b	fbc <gconv@@Base+0x63c>
    1590:	ldr	x0, [sp, #144]
    1594:	cbz	x0, 14a4 <gconv@@Base+0xb24>
    1598:	tbz	w19, #1, 14a4 <gconv@@Base+0xb24>
    159c:	mov	x1, x0
    15a0:	ldr	x0, [x0]
    15a4:	add	x0, x0, #0x1
    15a8:	str	x0, [x1]
    15ac:	b	1098 <gconv@@Base+0x718>
    15b0:	cmp	x12, x27
    15b4:	b.eq	fe4 <gconv@@Base+0x664>  // b.none
    15b8:	b	1308 <gconv@@Base+0x988>
    15bc:	ldr	x0, [sp, #216]
    15c0:	b	13b8 <gconv@@Base+0xa38>
    15c4:	mov	w1, #0x0                   	// #0
    15c8:	b	12b8 <gconv@@Base+0x938>
    15cc:	add	x7, x7, #0x4
    15d0:	mov	x2, #0x4                   	// #4
    15d4:	str	x7, [sp, #208]
    15d8:	b	b60 <gconv@@Base+0x1e0>
    15dc:	mov	x6, x0
    15e0:	mov	x1, x21
    15e4:	ldr	x0, [sp, #152]
    15e8:	add	x5, sp, #0xd8
    15ec:	add	x3, sp, #0xd0
    15f0:	stp	x4, x8, [sp, #96]
    15f4:	str	x15, [sp, #112]
    15f8:	str	x7, [sp, #136]
    15fc:	bl	7a0 <__gconv_transliterate@plt>
    1600:	mov	w12, w0
    1604:	cmp	w0, #0x6
    1608:	ldr	x15, [sp, #112]
    160c:	ldr	x7, [sp, #136]
    1610:	ldr	x1, [sp, #208]
    1614:	b.eq	16ac <gconv@@Base+0xd2c>  // b.none
    1618:	subs	x2, x1, x7
    161c:	ldp	x4, x8, [sp, #96]
    1620:	b.ne	b60 <gconv@@Base+0x1e0>  // b.any
    1624:	cmp	w0, #0x7
    1628:	b.ne	1698 <gconv@@Base+0xd18>  // b.any
    162c:	add	x0, x7, #0x4
    1630:	cmp	x4, x0
    1634:	b.eq	1740 <gconv@@Base+0xdc0>  // b.none
    1638:	ldr	w0, [x28]
    163c:	ldr	x1, [x25]
    1640:	and	x2, x0, #0x7
    1644:	sub	x2, x22, x2
    1648:	and	w0, w0, #0xfffffff8
    164c:	add	x1, x1, x2
    1650:	str	x1, [x25]
    1654:	cmp	x22, w0, sxtw
    1658:	b.le	1720 <gconv@@Base+0xda0>
    165c:	cmp	x22, #0x4
    1660:	b.hi	16e0 <gconv@@Base+0xd60>  // b.pmore
    1664:	orr	w0, w0, w22
    1668:	str	w0, [x28]
    166c:	cmp	x4, x7
    1670:	b.ls	1470 <gconv@@Base+0xaf0>  // b.plast
    1674:	add	x7, x7, #0x1
    1678:	add	x28, x28, #0x4
    167c:	str	x7, [sp, #208]
    1680:	cmp	x4, x7
    1684:	add	x7, x7, #0x1
    1688:	ldurb	w0, [x7, #-2]
    168c:	strb	w0, [x28], #1
    1690:	b.ne	167c <gconv@@Base+0xcfc>  // b.any
    1694:	b	1470 <gconv@@Base+0xaf0>
    1698:	cbnz	w0, ecc <gconv@@Base+0x54c>
    169c:	ldr	w19, [x21, #16]
    16a0:	ldr	x22, [x25]
    16a4:	ldr	x14, [sp, #192]
    16a8:	b	bdc <gconv@@Base+0x25c>
    16ac:	tbnz	w19, #1, 16c4 <gconv@@Base+0xd44>
    16b0:	cmp	x1, x7
    16b4:	b.eq	14a4 <gconv@@Base+0xb24>  // b.none
    16b8:	sub	x2, x1, x7
    16bc:	b	b60 <gconv@@Base+0x1e0>
    16c0:	mov	x1, x7
    16c4:	ldr	x2, [sp, #144]
    16c8:	add	x1, x1, #0x4
    16cc:	str	x1, [sp, #208]
    16d0:	ldr	x0, [x2]
    16d4:	add	x0, x0, #0x1
    16d8:	str	x0, [x2]
    16dc:	b	16b0 <gconv@@Base+0xd30>
    16e0:	adrp	x3, 1000 <gconv@@Base+0x680>
    16e4:	adrp	x1, 1000 <gconv@@Base+0x680>
    16e8:	adrp	x0, 1000 <gconv@@Base+0x680>
    16ec:	add	x3, x3, #0x9a8
    16f0:	add	x1, x1, #0x870
    16f4:	add	x0, x0, #0x928
    16f8:	mov	w2, #0x1e6                 	// #486
    16fc:	bl	800 <__assert_fail@plt>
    1700:	adrp	x3, 1000 <gconv@@Base+0x680>
    1704:	add	x3, x3, #0x9a8
    1708:	adrp	x1, 1000 <gconv@@Base+0x680>
    170c:	adrp	x0, 1000 <gconv@@Base+0x680>
    1710:	add	x1, x1, #0x870
    1714:	add	x0, x0, #0x8b0
    1718:	mov	w2, #0x1c9                 	// #457
    171c:	bl	800 <__assert_fail@plt>
    1720:	adrp	x3, 1000 <gconv@@Base+0x680>
    1724:	adrp	x1, 1000 <gconv@@Base+0x680>
    1728:	adrp	x0, 1000 <gconv@@Base+0x680>
    172c:	add	x3, x3, #0x9a8
    1730:	add	x1, x1, #0x870
    1734:	add	x0, x0, #0x900
    1738:	mov	w2, #0x1e5                 	// #485
    173c:	bl	800 <__assert_fail@plt>
    1740:	adrp	x3, 1000 <gconv@@Base+0x680>
    1744:	adrp	x1, 1000 <gconv@@Base+0x680>
    1748:	adrp	x0, 1000 <gconv@@Base+0x680>
    174c:	add	x3, x3, #0x9a8
    1750:	add	x1, x1, #0x870
    1754:	add	x0, x0, #0x8d8
    1758:	mov	w2, #0x1db                 	// #475
    175c:	bl	800 <__assert_fail@plt>
    1760:	ldp	x1, x2, [sp, #200]
    1764:	str	x2, [x25]
    1768:	cmp	x1, x0
    176c:	b.eq	12d8 <gconv@@Base+0x958>  // b.none
    1770:	b	1308 <gconv@@Base+0x988>
    1774:	adrp	x3, 1000 <gconv@@Base+0x680>
    1778:	adrp	x1, 1000 <gconv@@Base+0x680>
    177c:	adrp	x0, 1000 <gconv@@Base+0x680>
    1780:	add	x3, x3, #0x9e0
    1784:	add	x1, x1, #0x840
    1788:	add	x0, x0, #0x990
    178c:	mov	w2, #0x31e                 	// #798
    1790:	bl	800 <__assert_fail@plt>
    1794:	adrp	x3, 1000 <gconv@@Base+0x680>
    1798:	adrp	x1, 1000 <gconv@@Base+0x680>
    179c:	adrp	x0, 1000 <gconv@@Base+0x680>
    17a0:	add	x3, x3, #0x9e0
    17a4:	add	x1, x1, #0x840
    17a8:	add	x0, x0, #0x858
    17ac:	mov	w2, #0x234                 	// #564
    17b0:	bl	800 <__assert_fail@plt>
    17b4:	adrp	x3, 1000 <gconv@@Base+0x680>
    17b8:	adrp	x1, 1000 <gconv@@Base+0x680>
    17bc:	adrp	x0, 1000 <gconv@@Base+0x680>
    17c0:	add	x3, x3, #0x9e0
    17c4:	add	x1, x1, #0x840
    17c8:	add	x0, x0, #0x858
    17cc:	mov	w2, #0x1a4                 	// #420
    17d0:	stp	x27, x28, [sp, #80]
    17d4:	bl	800 <__assert_fail@plt>
    17d8:	adrp	x3, 1000 <gconv@@Base+0x680>
    17dc:	adrp	x1, 1000 <gconv@@Base+0x680>
    17e0:	add	x3, x3, #0x9c0
    17e4:	b	170c <gconv@@Base+0xd8c>
    17e8:	adrp	x3, 1000 <gconv@@Base+0x680>
    17ec:	add	x3, x3, #0x9c0
    17f0:	adrp	x1, 1000 <gconv@@Base+0x680>
    17f4:	adrp	x0, 1000 <gconv@@Base+0x680>
    17f8:	add	x1, x1, #0x870
    17fc:	add	x0, x0, #0x880
    1800:	mov	w2, #0x18b                 	// #395
    1804:	bl	800 <__assert_fail@plt>
    1808:	stp	x27, x28, [sp, #80]
    180c:	bl	7b0 <__stack_chk_fail@plt>
    1810:	adrp	x3, 1000 <gconv@@Base+0x680>
    1814:	adrp	x1, 1000 <gconv@@Base+0x680>
    1818:	add	x3, x3, #0x9a8
    181c:	b	17f4 <gconv@@Base+0xe74>

Disassembly of section .fini:

0000000000001820 <.fini>:
    1820:	stp	x29, x30, [sp, #-16]!
    1824:	mov	x29, sp
    1828:	ldp	x29, x30, [sp], #16
    182c:	ret
