
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lssal.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_register_command>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	x3, [sp, #16]
  18:	mov	w4, #0x0                   	// #0
  1c:	ldr	x3, [sp, #16]
  20:	ldr	x2, [sp, #24]
  24:	ldr	x1, [sp, #32]
  28:	ldr	x0, [sp, #40]
  2c:	bl	0 <grub_register_command_prio>
  30:	ldp	x29, x30, [sp], #48
  34:	ret

0000000000000038 <disp_sal>:
  38:	stp	x29, x30, [sp, #-112]!
  3c:	mov	x29, sp
  40:	str	x0, [sp, #24]
  44:	ldr	x0, [sp, #24]
  48:	str	x0, [sp, #80]
  4c:	ldr	x0, [sp, #80]
  50:	ldrh	w0, [x0, #8]
  54:	mov	w4, w0
  58:	ldr	x0, [sp, #80]
  5c:	ldr	w1, [x0]
  60:	ldr	x0, [sp, #80]
  64:	ldr	w0, [x0, #4]
  68:	mov	w3, w0
  6c:	mov	w2, w1
  70:	mov	w1, w4
  74:	adrp	x0, 0 <grub_register_command>
  78:	add	x0, x0, #0x0
  7c:	ldr	x0, [x0]
  80:	bl	0 <grub_printf>
  84:	ldr	x0, [sp, #80]
  88:	ldrh	w0, [x0, #10]
  8c:	mov	w1, w0
  90:	ldr	x0, [sp, #80]
  94:	ldrb	w0, [x0, #12]
  98:	mov	w2, w0
  9c:	ldr	x0, [sp, #80]
  a0:	ldrh	w0, [x0, #20]
  a4:	mov	w3, w0
  a8:	ldr	x0, [sp, #80]
  ac:	ldrh	w0, [x0, #22]
  b0:	mov	w4, w0
  b4:	adrp	x0, 0 <grub_register_command>
  b8:	add	x0, x0, #0x0
  bc:	ldr	x0, [x0]
  c0:	bl	0 <grub_printf>
  c4:	ldr	x0, [sp, #80]
  c8:	add	x0, x0, #0x18
  cc:	mov	x1, x0
  d0:	adrp	x0, 0 <grub_register_command>
  d4:	add	x0, x0, #0x0
  d8:	ldr	x0, [x0]
  dc:	bl	0 <grub_printf>
  e0:	ldr	x0, [sp, #80]
  e4:	add	x0, x0, #0x38
  e8:	mov	x1, x0
  ec:	adrp	x0, 0 <grub_register_command>
  f0:	add	x0, x0, #0x0
  f4:	ldr	x0, [x0]
  f8:	bl	0 <grub_printf>
  fc:	ldr	x0, [sp, #80]
 100:	add	x0, x0, #0x60
 104:	str	x0, [sp, #104]
 108:	ldr	x0, [sp, #80]
 10c:	ldr	w0, [x0, #4]
 110:	sub	w0, w0, #0x60
 114:	str	w0, [sp, #100]
 118:	ldr	x0, [sp, #80]
 11c:	ldr	w0, [x0, #4]
 120:	cmp	w0, #0x60
 124:	b.ls	474 <disp_sal+0x43c>  // b.plast
 128:	str	wzr, [sp, #92]
 12c:	b	458 <disp_sal+0x420>
 130:	ldr	x0, [sp, #104]
 134:	ldrb	w0, [x0]
 138:	cmp	w0, #0x5
 13c:	b.eq	3c0 <disp_sal+0x388>  // b.none
 140:	cmp	w0, #0x5
 144:	b.gt	3fc <disp_sal+0x3c4>
 148:	cmp	w0, #0x4
 14c:	b.eq	388 <disp_sal+0x350>  // b.none
 150:	cmp	w0, #0x4
 154:	b.gt	3fc <disp_sal+0x3c4>
 158:	cmp	w0, #0x3
 15c:	b.eq	330 <disp_sal+0x2f8>  // b.none
 160:	cmp	w0, #0x3
 164:	b.gt	3fc <disp_sal+0x3c4>
 168:	cmp	w0, #0x2
 16c:	b.eq	260 <disp_sal+0x228>  // b.none
 170:	cmp	w0, #0x2
 174:	b.gt	3fc <disp_sal+0x3c4>
 178:	cmp	w0, #0x0
 17c:	b.eq	18c <disp_sal+0x154>  // b.none
 180:	cmp	w0, #0x1
 184:	b.eq	1cc <disp_sal+0x194>  // b.none
 188:	b	3fc <disp_sal+0x3c4>
 18c:	ldr	x0, [sp, #104]
 190:	str	x0, [sp, #32]
 194:	mov	w0, #0x30                  	// #48
 198:	str	w0, [sp, #96]
 19c:	ldr	x0, [sp, #32]
 1a0:	ldr	x1, [x0, #8]
 1a4:	ldr	x0, [sp, #32]
 1a8:	ldr	x2, [x0, #16]
 1ac:	ldr	x0, [sp, #32]
 1b0:	ldr	x0, [x0, #24]
 1b4:	mov	x3, x0
 1b8:	adrp	x0, 0 <grub_register_command>
 1bc:	add	x0, x0, #0x0
 1c0:	ldr	x0, [x0]
 1c4:	bl	0 <grub_printf>
 1c8:	b	41c <disp_sal+0x3e4>
 1cc:	ldr	x0, [sp, #104]
 1d0:	str	x0, [sp, #40]
 1d4:	mov	w0, #0x20                  	// #32
 1d8:	str	w0, [sp, #96]
 1dc:	ldr	x0, [sp, #40]
 1e0:	ldr	x1, [x0, #8]
 1e4:	ldr	x0, [sp, #40]
 1e8:	ldr	x0, [x0, #16]
 1ec:	lsl	x0, x0, #2
 1f0:	mov	x2, x0
 1f4:	adrp	x0, 0 <grub_register_command>
 1f8:	add	x0, x0, #0x0
 1fc:	ldr	x0, [x0]
 200:	bl	0 <grub_printf>
 204:	ldr	x0, [sp, #40]
 208:	ldrb	w0, [x0, #1]
 20c:	mov	w1, w0
 210:	ldr	x0, [sp, #40]
 214:	ldrb	w0, [x0, #2]
 218:	mov	w2, w0
 21c:	ldr	x0, [sp, #40]
 220:	ldrb	w0, [x0, #3]
 224:	mov	w3, w0
 228:	ldr	x0, [sp, #40]
 22c:	ldrb	w0, [x0, #4]
 230:	mov	w4, w0
 234:	ldr	x0, [sp, #40]
 238:	ldrb	w0, [x0, #5]
 23c:	mov	w5, w0
 240:	ldr	x0, [sp, #40]
 244:	ldrb	w0, [x0, #6]
 248:	mov	w6, w0
 24c:	adrp	x0, 0 <grub_register_command>
 250:	add	x0, x0, #0x0
 254:	ldr	x0, [x0]
 258:	bl	0 <grub_printf>
 25c:	b	41c <disp_sal+0x3e4>
 260:	ldr	x0, [sp, #104]
 264:	str	x0, [sp, #48]
 268:	mov	w0, #0x10                  	// #16
 26c:	str	w0, [sp, #96]
 270:	ldr	x0, [sp, #48]
 274:	ldrb	w0, [x0, #1]
 278:	mov	w1, w0
 27c:	adrp	x0, 0 <grub_register_command>
 280:	add	x0, x0, #0x0
 284:	ldr	x0, [x0]
 288:	bl	0 <grub_printf>
 28c:	ldr	x0, [sp, #48]
 290:	ldrb	w0, [x0, #1]
 294:	and	w0, w0, #0x1
 298:	cmp	w0, #0x0
 29c:	b.eq	2b0 <disp_sal+0x278>  // b.none
 2a0:	adrp	x0, 0 <grub_register_command>
 2a4:	add	x0, x0, #0x0
 2a8:	ldr	x0, [x0]
 2ac:	bl	0 <grub_printf>
 2b0:	ldr	x0, [sp, #48]
 2b4:	ldrb	w0, [x0, #1]
 2b8:	and	w0, w0, #0x2
 2bc:	cmp	w0, #0x0
 2c0:	b.eq	2d4 <disp_sal+0x29c>  // b.none
 2c4:	adrp	x0, 0 <grub_register_command>
 2c8:	add	x0, x0, #0x0
 2cc:	ldr	x0, [x0]
 2d0:	bl	0 <grub_printf>
 2d4:	ldr	x0, [sp, #48]
 2d8:	ldrb	w0, [x0, #1]
 2dc:	and	w0, w0, #0x4
 2e0:	cmp	w0, #0x0
 2e4:	b.eq	2f8 <disp_sal+0x2c0>  // b.none
 2e8:	adrp	x0, 0 <grub_register_command>
 2ec:	add	x0, x0, #0x0
 2f0:	ldr	x0, [x0]
 2f4:	bl	0 <grub_printf>
 2f8:	ldr	x0, [sp, #48]
 2fc:	ldrb	w0, [x0, #1]
 300:	and	w0, w0, #0x8
 304:	cmp	w0, #0x0
 308:	b.eq	31c <disp_sal+0x2e4>  // b.none
 30c:	adrp	x0, 0 <grub_register_command>
 310:	add	x0, x0, #0x0
 314:	ldr	x0, [x0]
 318:	bl	0 <grub_printf>
 31c:	adrp	x0, 0 <grub_register_command>
 320:	add	x0, x0, #0x0
 324:	ldr	x0, [x0]
 328:	bl	0 <grub_printf>
 32c:	b	41c <disp_sal+0x3e4>
 330:	ldr	x0, [sp, #104]
 334:	str	x0, [sp, #56]
 338:	mov	w0, #0x20                  	// #32
 33c:	str	w0, [sp, #96]
 340:	ldr	x0, [sp, #56]
 344:	ldrb	w0, [x0, #1]
 348:	mov	w5, w0
 34c:	ldr	x0, [sp, #56]
 350:	ldrb	w0, [x0, #2]
 354:	mov	w2, w0
 358:	ldr	x0, [sp, #56]
 35c:	ldr	x1, [x0, #8]
 360:	ldr	x0, [sp, #56]
 364:	ldr	x0, [x0, #16]
 368:	mov	x4, x0
 36c:	mov	x3, x1
 370:	mov	w1, w5
 374:	adrp	x0, 0 <grub_register_command>
 378:	add	x0, x0, #0x0
 37c:	ldr	x0, [x0]
 380:	bl	0 <grub_printf>
 384:	b	41c <disp_sal+0x3e4>
 388:	ldr	x0, [sp, #104]
 38c:	str	x0, [sp, #64]
 390:	mov	w0, #0x10                  	// #16
 394:	str	w0, [sp, #96]
 398:	ldr	x0, [sp, #64]
 39c:	ldr	w1, [x0, #4]
 3a0:	ldr	x0, [sp, #64]
 3a4:	ldr	x0, [x0, #8]
 3a8:	mov	x2, x0
 3ac:	adrp	x0, 0 <grub_register_command>
 3b0:	add	x0, x0, #0x0
 3b4:	ldr	x0, [x0]
 3b8:	bl	0 <grub_printf>
 3bc:	b	41c <disp_sal+0x3e4>
 3c0:	ldr	x0, [sp, #104]
 3c4:	str	x0, [sp, #72]
 3c8:	mov	w0, #0x10                  	// #16
 3cc:	str	w0, [sp, #96]
 3d0:	ldr	x0, [sp, #72]
 3d4:	ldrb	w0, [x0, #1]
 3d8:	mov	w1, w0
 3dc:	ldr	x0, [sp, #72]
 3e0:	ldr	x0, [x0, #8]
 3e4:	mov	x2, x0
 3e8:	adrp	x0, 0 <grub_register_command>
 3ec:	add	x0, x0, #0x0
 3f0:	ldr	x0, [x0]
 3f4:	bl	0 <grub_printf>
 3f8:	b	41c <disp_sal+0x3e4>
 3fc:	ldr	x0, [sp, #104]
 400:	ldrb	w0, [x0]
 404:	mov	w1, w0
 408:	adrp	x0, 0 <grub_register_command>
 40c:	add	x0, x0, #0x0
 410:	ldr	x0, [x0]
 414:	bl	0 <grub_printf>
 418:	b	480 <disp_sal+0x448>
 41c:	ldr	w0, [sp, #96]
 420:	ldr	x1, [sp, #104]
 424:	add	x0, x1, x0
 428:	str	x0, [sp, #104]
 42c:	ldr	w1, [sp, #100]
 430:	ldr	w0, [sp, #96]
 434:	cmp	w1, w0
 438:	b.ls	47c <disp_sal+0x444>  // b.plast
 43c:	ldr	w1, [sp, #100]
 440:	ldr	w0, [sp, #96]
 444:	sub	w0, w1, w0
 448:	str	w0, [sp, #100]
 44c:	ldr	w0, [sp, #92]
 450:	add	w0, w0, #0x1
 454:	str	w0, [sp, #92]
 458:	ldr	x0, [sp, #80]
 45c:	ldrh	w0, [x0, #10]
 460:	mov	w1, w0
 464:	ldr	w0, [sp, #92]
 468:	cmp	w0, w1
 46c:	b.cc	130 <disp_sal+0xf8>  // b.lo, b.ul, b.last
 470:	b	480 <disp_sal+0x448>
 474:	nop
 478:	b	480 <disp_sal+0x448>
 47c:	nop
 480:	ldp	x29, x30, [sp], #112
 484:	ret
	...

0000000000000510 <grub_cmd_lssal>:
 510:	stp	x29, x30, [sp, #-96]!
 514:	mov	x29, sp
 518:	str	x0, [sp, #40]
 51c:	str	w1, [sp, #36]
 520:	str	x2, [sp, #24]
 524:	adrp	x0, 0 <grub_register_command>
 528:	add	x0, x0, #0x0
 52c:	ldr	x0, [x0]
 530:	ldr	x0, [x0]
 534:	str	x0, [sp, #72]
 538:	ldr	x0, [sp, #72]
 53c:	ldr	x0, [x0, #112]
 540:	str	x0, [sp, #88]
 544:	mov	w0, #0x2d32                	// #11570
 548:	movk	w0, #0xeb9d, lsl #16
 54c:	str	w0, [sp, #56]
 550:	mov	w0, #0x2d88                	// #11656
 554:	strh	w0, [sp, #60]
 558:	mov	w0, #0x11d3                	// #4563
 55c:	strh	w0, [sp, #62]
 560:	mov	x0, #0x169a                	// #5786
 564:	movk	x0, #0x9000, lsl #16
 568:	movk	x0, #0x3f27, lsl #32
 56c:	movk	x0, #0x4dc1, lsl #48
 570:	str	x0, [sp, #64]
 574:	str	wzr, [sp, #84]
 578:	b	5c0 <grub_cmd_lssal+0xb0>
 57c:	ldr	x1, [sp, #88]
 580:	add	x0, sp, #0x38
 584:	mov	x2, #0x10                  	// #16
 588:	bl	0 <grub_memcmp>
 58c:	cmp	w0, #0x0
 590:	b.ne	5a8 <grub_cmd_lssal+0x98>  // b.any
 594:	ldr	x0, [sp, #88]
 598:	ldr	x0, [x0, #16]
 59c:	bl	38 <disp_sal>
 5a0:	mov	w0, #0x0                   	// #0
 5a4:	b	5e8 <grub_cmd_lssal+0xd8>
 5a8:	ldr	x0, [sp, #88]
 5ac:	add	x0, x0, #0x18
 5b0:	str	x0, [sp, #88]
 5b4:	ldr	w0, [sp, #84]
 5b8:	add	w0, w0, #0x1
 5bc:	str	w0, [sp, #84]
 5c0:	ldr	w1, [sp, #84]
 5c4:	ldr	x0, [sp, #72]
 5c8:	ldr	x0, [x0, #104]
 5cc:	cmp	x1, x0
 5d0:	b.cc	57c <grub_cmd_lssal+0x6c>  // b.lo, b.ul, b.last
 5d4:	adrp	x0, 0 <grub_register_command>
 5d8:	add	x0, x0, #0x0
 5dc:	ldr	x0, [x0]
 5e0:	bl	0 <grub_printf>
 5e4:	mov	w0, #0x0                   	// #0
 5e8:	ldp	x29, x30, [sp], #96
 5ec:	ret
	...

0000000000000600 <grub_mod_init>:
 600:	stp	x29, x30, [sp, #-32]!
 604:	mov	x29, sp
 608:	str	x0, [sp, #24]
 60c:	adrp	x0, 0 <grub_register_command>
 610:	add	x0, x0, #0x0
 614:	ldr	x3, [x0]
 618:	adrp	x0, 0 <grub_register_command>
 61c:	add	x0, x0, #0x0
 620:	ldr	x2, [x0]
 624:	adrp	x0, 0 <grub_register_command>
 628:	add	x0, x0, #0x0
 62c:	ldr	x1, [x0]
 630:	adrp	x0, 0 <grub_register_command>
 634:	add	x0, x0, #0x0
 638:	ldr	x0, [x0]
 63c:	bl	0 <grub_register_command>
 640:	mov	x1, x0
 644:	adrp	x0, 0 <grub_register_command>
 648:	add	x0, x0, #0x0
 64c:	ldr	x0, [x0]
 650:	str	x1, [x0]
 654:	nop
 658:	ldp	x29, x30, [sp], #32
 65c:	ret
	...

0000000000000688 <grub_mod_fini>:
 688:	stp	x29, x30, [sp, #-16]!
 68c:	mov	x29, sp
 690:	adrp	x0, 0 <grub_register_command>
 694:	add	x0, x0, #0x0
 698:	ldr	x0, [x0]
 69c:	ldr	x0, [x0]
 6a0:	bl	0 <grub_unregister_command>
 6a4:	nop
 6a8:	ldp	x29, x30, [sp], #16
 6ac:	ret
	...
