
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-socket-activate_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401450 <.init>:
  401450:	stp	x29, x30, [sp, #-16]!
  401454:	mov	x29, sp
  401458:	bl	401838 <safe_fork_full@plt+0x60>
  40145c:	ldp	x29, x30, [sp], #16
  401460:	ret

Disassembly of section .plt:

0000000000401468 <__libc_start_main@plt-0x20>:
  401468:	stp	x16, x30, [sp, #-16]!
  40146c:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  401470:	ldr	x17, [x16, #3656]
  401474:	add	x16, x16, #0xe48
  401478:	br	x17
  40147c:	nop
  401480:	nop
  401484:	nop

0000000000401488 <__libc_start_main@plt>:
  401488:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40148c:	ldr	x17, [x16, #3664]
  401490:	add	x16, x16, #0xe50
  401494:	br	x17

0000000000401498 <abort@plt>:
  401498:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40149c:	ldr	x17, [x16, #3672]
  4014a0:	add	x16, x16, #0xe58
  4014a4:	br	x17

00000000004014a8 <__gmon_start__@plt>:
  4014a8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4014ac:	ldr	x17, [x16, #3680]
  4014b0:	add	x16, x16, #0xe60
  4014b4:	br	x17

00000000004014b8 <log_show_color@plt>:
  4014b8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4014bc:	ldr	x17, [x16, #3688]
  4014c0:	add	x16, x16, #0xe68
  4014c4:	br	x17

00000000004014c8 <log_parse_environment_realm@plt>:
  4014c8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4014cc:	ldr	x17, [x16, #3696]
  4014d0:	add	x16, x16, #0xe70
  4014d4:	br	x17

00000000004014d8 <log_open@plt>:
  4014d8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4014dc:	ldr	x17, [x16, #3704]
  4014e0:	add	x16, x16, #0xe78
  4014e4:	br	x17

00000000004014e8 <log_get_max_level_realm@plt>:
  4014e8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4014ec:	ldr	x17, [x16, #3712]
  4014f0:	add	x16, x16, #0xe80
  4014f4:	br	x17

00000000004014f8 <log_internal_realm@plt>:
  4014f8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4014fc:	ldr	x17, [x16, #3720]
  401500:	add	x16, x16, #0xe88
  401504:	br	x17

0000000000401508 <abs@plt>:
  401508:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40150c:	ldr	x17, [x16, #3728]
  401510:	add	x16, x16, #0xe90
  401514:	br	x17

0000000000401518 <epoll_wait@plt>:
  401518:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40151c:	ldr	x17, [x16, #3736]
  401520:	add	x16, x16, #0xe98
  401524:	br	x17

0000000000401528 <__errno_location@plt>:
  401528:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40152c:	ldr	x17, [x16, #3744]
  401530:	add	x16, x16, #0xea0
  401534:	br	x17

0000000000401538 <log_assert_failed_realm@plt>:
  401538:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40153c:	ldr	x17, [x16, #3752]
  401540:	add	x16, x16, #0xea8
  401544:	br	x17

0000000000401548 <getopt_long@plt>:
  401548:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40154c:	ldr	x17, [x16, #3760]
  401550:	add	x16, x16, #0xeb0
  401554:	br	x17

0000000000401558 <version@plt>:
  401558:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40155c:	ldr	x17, [x16, #3768]
  401560:	add	x16, x16, #0xeb8
  401564:	br	x17

0000000000401568 <strv_extend@plt>:
  401568:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40156c:	ldr	x17, [x16, #3776]
  401570:	add	x16, x16, #0xec0
  401574:	br	x17

0000000000401578 <log_oom_internal@plt>:
  401578:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40157c:	ldr	x17, [x16, #3784]
  401580:	add	x16, x16, #0xec8
  401584:	br	x17

0000000000401588 <fdname_is_valid@plt>:
  401588:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40158c:	ldr	x17, [x16, #3792]
  401590:	add	x16, x16, #0xed0
  401594:	br	x17

0000000000401598 <cescape@plt>:
  401598:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40159c:	ldr	x17, [x16, #3800]
  4015a0:	add	x16, x16, #0xed8
  4015a4:	br	x17

00000000004015a8 <strv_extend_strv@plt>:
  4015a8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4015ac:	ldr	x17, [x16, #3808]
  4015b0:	add	x16, x16, #0xee0
  4015b4:	br	x17

00000000004015b8 <log_assert_failed_unreachable_realm@plt>:
  4015b8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4015bc:	ldr	x17, [x16, #3816]
  4015c0:	add	x16, x16, #0xee8
  4015c4:	br	x17

00000000004015c8 <sigaction@plt>:
  4015c8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4015cc:	ldr	x17, [x16, #3824]
  4015d0:	add	x16, x16, #0xef0
  4015d4:	br	x17

00000000004015d8 <sd_listen_fds@plt>:
  4015d8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4015dc:	ldr	x17, [x16, #3832]
  4015e0:	add	x16, x16, #0xef8
  4015e4:	br	x17

00000000004015e8 <fd_cloexec@plt>:
  4015e8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4015ec:	ldr	x17, [x16, #3840]
  4015f0:	add	x16, x16, #0xf00
  4015f4:	br	x17

00000000004015f8 <log_close@plt>:
  4015f8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4015fc:	ldr	x17, [x16, #3848]
  401600:	add	x16, x16, #0xf08
  401604:	br	x17

0000000000401608 <close_all_fds@plt>:
  401608:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40160c:	ldr	x17, [x16, #3856]
  401610:	add	x16, x16, #0xf10
  401614:	br	x17

0000000000401618 <make_socket_fd@plt>:
  401618:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40161c:	ldr	x17, [x16, #3864]
  401620:	add	x16, x16, #0xf18
  401624:	br	x17

0000000000401628 <epoll_create1@plt>:
  401628:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40162c:	ldr	x17, [x16, #3872]
  401630:	add	x16, x16, #0xf20
  401634:	br	x17

0000000000401638 <getsockname_pretty@plt>:
  401638:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40163c:	ldr	x17, [x16, #3880]
  401640:	add	x16, x16, #0xf28
  401644:	br	x17

0000000000401648 <accept4@plt>:
  401648:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40164c:	ldr	x17, [x16, #3888]
  401650:	add	x16, x16, #0xf30
  401654:	br	x17

0000000000401658 <getpeername_pretty@plt>:
  401658:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40165c:	ldr	x17, [x16, #3896]
  401660:	add	x16, x16, #0xf38
  401664:	br	x17

0000000000401668 <strv_length@plt>:
  401668:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40166c:	ldr	x17, [x16, #3904]
  401670:	add	x16, x16, #0xf40
  401674:	br	x17

0000000000401678 <calloc@plt>:
  401678:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40167c:	ldr	x17, [x16, #3912]
  401680:	add	x16, x16, #0xf48
  401684:	br	x17

0000000000401688 <strchr@plt>:
  401688:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40168c:	ldr	x17, [x16, #3920]
  401690:	add	x16, x16, #0xf50
  401694:	br	x17

0000000000401698 <strdup@plt>:
  401698:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40169c:	ldr	x17, [x16, #3928]
  4016a0:	add	x16, x16, #0xf58
  4016a4:	br	x17

00000000004016a8 <strjoin_real@plt>:
  4016a8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4016ac:	ldr	x17, [x16, #3936]
  4016b0:	add	x16, x16, #0xf60
  4016b4:	br	x17

00000000004016b8 <strv_find_prefix@plt>:
  4016b8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4016bc:	ldr	x17, [x16, #3944]
  4016c0:	add	x16, x16, #0xf68
  4016c4:	br	x17

00000000004016c8 <rearrange_stdio@plt>:
  4016c8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4016cc:	ldr	x17, [x16, #3952]
  4016d0:	add	x16, x16, #0xf70
  4016d4:	br	x17

00000000004016d8 <dup2@plt>:
  4016d8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4016dc:	ldr	x17, [x16, #3960]
  4016e0:	add	x16, x16, #0xf78
  4016e4:	br	x17

00000000004016e8 <safe_close@plt>:
  4016e8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4016ec:	ldr	x17, [x16, #3968]
  4016f0:	add	x16, x16, #0xf80
  4016f4:	br	x17

00000000004016f8 <asprintf@plt>:
  4016f8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4016fc:	ldr	x17, [x16, #3976]
  401700:	add	x16, x16, #0xf88
  401704:	br	x17

0000000000401708 <getpid_cached@plt>:
  401708:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40170c:	ldr	x17, [x16, #3984]
  401710:	add	x16, x16, #0xf90
  401714:	br	x17

0000000000401718 <execvpe@plt>:
  401718:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40171c:	ldr	x17, [x16, #3992]
  401720:	add	x16, x16, #0xf98
  401724:	br	x17

0000000000401728 <terminal_urlify_man@plt>:
  401728:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40172c:	ldr	x17, [x16, #4000]
  401730:	add	x16, x16, #0xfa0
  401734:	br	x17

0000000000401738 <printf@plt>:
  401738:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40173c:	ldr	x17, [x16, #4008]
  401740:	add	x16, x16, #0xfa8
  401744:	br	x17

0000000000401748 <strv_free@plt>:
  401748:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40174c:	ldr	x17, [x16, #4016]
  401750:	add	x16, x16, #0xfb0
  401754:	br	x17

0000000000401758 <strv_split_full@plt>:
  401758:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40175c:	ldr	x17, [x16, #4024]
  401760:	add	x16, x16, #0xfb8
  401764:	br	x17

0000000000401768 <free@plt>:
  401768:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40176c:	ldr	x17, [x16, #4032]
  401770:	add	x16, x16, #0xfc0
  401774:	br	x17

0000000000401778 <colors_enabled@plt>:
  401778:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40177c:	ldr	x17, [x16, #4040]
  401780:	add	x16, x16, #0xfc8
  401784:	br	x17

0000000000401788 <waitid@plt>:
  401788:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40178c:	ldr	x17, [x16, #4048]
  401790:	add	x16, x16, #0xfd0
  401794:	br	x17

0000000000401798 <malloc@plt>:
  401798:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  40179c:	ldr	x17, [x16, #4056]
  4017a0:	add	x16, x16, #0xfd8
  4017a4:	br	x17

00000000004017a8 <epoll_ctl@plt>:
  4017a8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4017ac:	ldr	x17, [x16, #4064]
  4017b0:	add	x16, x16, #0xfe0
  4017b4:	br	x17

00000000004017b8 <_exit@plt>:
  4017b8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4017bc:	ldr	x17, [x16, #4072]
  4017c0:	add	x16, x16, #0xfe8
  4017c4:	br	x17

00000000004017c8 <strv_join_prefix@plt>:
  4017c8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4017cc:	ldr	x17, [x16, #4080]
  4017d0:	add	x16, x16, #0xff0
  4017d4:	br	x17

00000000004017d8 <safe_fork_full@plt>:
  4017d8:	adrp	x16, 41f000 <safe_fork_full@plt+0x1d828>
  4017dc:	ldr	x17, [x16, #4088]
  4017e0:	add	x16, x16, #0xff8
  4017e4:	br	x17

Disassembly of section .text:

00000000004017e8 <.text>:
  4017e8:	mov	x29, #0x0                   	// #0
  4017ec:	mov	x30, #0x0                   	// #0
  4017f0:	mov	x5, x0
  4017f4:	ldr	x1, [sp]
  4017f8:	add	x2, sp, #0x8
  4017fc:	mov	x6, sp
  401800:	movz	x0, #0x0, lsl #48
  401804:	movk	x0, #0x0, lsl #32
  401808:	movk	x0, #0x40, lsl #16
  40180c:	movk	x0, #0x19b0
  401810:	movz	x3, #0x0, lsl #48
  401814:	movk	x3, #0x0, lsl #32
  401818:	movk	x3, #0x40, lsl #16
  40181c:	movk	x3, #0x44d8
  401820:	movz	x4, #0x0, lsl #48
  401824:	movk	x4, #0x0, lsl #32
  401828:	movk	x4, #0x40, lsl #16
  40182c:	movk	x4, #0x4558
  401830:	bl	401488 <__libc_start_main@plt>
  401834:	bl	401498 <abort@plt>
  401838:	adrp	x0, 41f000 <safe_fork_full@plt+0x1d828>
  40183c:	ldr	x0, [x0, #3632]
  401840:	cbz	x0, 401848 <safe_fork_full@plt+0x70>
  401844:	b	4014a8 <__gmon_start__@plt>
  401848:	ret
  40184c:	stp	x29, x30, [sp, #-32]!
  401850:	mov	x29, sp
  401854:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  401858:	add	x0, x0, #0x0
  40185c:	str	x0, [sp, #24]
  401860:	ldr	x0, [sp, #24]
  401864:	str	x0, [sp, #24]
  401868:	ldr	x1, [sp, #24]
  40186c:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  401870:	add	x0, x0, #0x0
  401874:	cmp	x1, x0
  401878:	b.eq	4018b4 <safe_fork_full@plt+0xdc>  // b.none
  40187c:	adrp	x0, 404000 <safe_fork_full@plt+0x2828>
  401880:	add	x0, x0, #0x570
  401884:	ldr	x0, [x0]
  401888:	str	x0, [sp, #16]
  40188c:	ldr	x0, [sp, #16]
  401890:	str	x0, [sp, #16]
  401894:	ldr	x0, [sp, #16]
  401898:	cmp	x0, #0x0
  40189c:	b.eq	4018b8 <safe_fork_full@plt+0xe0>  // b.none
  4018a0:	ldr	x1, [sp, #16]
  4018a4:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  4018a8:	add	x0, x0, #0x0
  4018ac:	blr	x1
  4018b0:	b	4018b8 <safe_fork_full@plt+0xe0>
  4018b4:	nop
  4018b8:	ldp	x29, x30, [sp], #32
  4018bc:	ret
  4018c0:	stp	x29, x30, [sp, #-48]!
  4018c4:	mov	x29, sp
  4018c8:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  4018cc:	add	x0, x0, #0x0
  4018d0:	str	x0, [sp, #40]
  4018d4:	ldr	x0, [sp, #40]
  4018d8:	str	x0, [sp, #40]
  4018dc:	ldr	x1, [sp, #40]
  4018e0:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  4018e4:	add	x0, x0, #0x0
  4018e8:	sub	x0, x1, x0
  4018ec:	asr	x0, x0, #3
  4018f0:	lsr	x1, x0, #63
  4018f4:	add	x0, x1, x0
  4018f8:	asr	x0, x0, #1
  4018fc:	str	x0, [sp, #32]
  401900:	ldr	x0, [sp, #32]
  401904:	cmp	x0, #0x0
  401908:	b.eq	401948 <safe_fork_full@plt+0x170>  // b.none
  40190c:	adrp	x0, 404000 <safe_fork_full@plt+0x2828>
  401910:	add	x0, x0, #0x578
  401914:	ldr	x0, [x0]
  401918:	str	x0, [sp, #24]
  40191c:	ldr	x0, [sp, #24]
  401920:	str	x0, [sp, #24]
  401924:	ldr	x0, [sp, #24]
  401928:	cmp	x0, #0x0
  40192c:	b.eq	40194c <safe_fork_full@plt+0x174>  // b.none
  401930:	ldr	x2, [sp, #24]
  401934:	ldr	x1, [sp, #32]
  401938:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  40193c:	add	x0, x0, #0x0
  401940:	blr	x2
  401944:	b	40194c <safe_fork_full@plt+0x174>
  401948:	nop
  40194c:	ldp	x29, x30, [sp], #48
  401950:	ret
  401954:	stp	x29, x30, [sp, #-16]!
  401958:	mov	x29, sp
  40195c:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  401960:	add	x0, x0, #0x8
  401964:	ldrb	w0, [x0]
  401968:	and	x0, x0, #0xff
  40196c:	cmp	x0, #0x0
  401970:	b.ne	40198c <safe_fork_full@plt+0x1b4>  // b.any
  401974:	bl	40184c <safe_fork_full@plt+0x74>
  401978:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  40197c:	add	x0, x0, #0x8
  401980:	mov	w1, #0x1                   	// #1
  401984:	strb	w1, [x0]
  401988:	b	401990 <safe_fork_full@plt+0x1b8>
  40198c:	nop
  401990:	ldp	x29, x30, [sp], #16
  401994:	ret
  401998:	stp	x29, x30, [sp, #-16]!
  40199c:	mov	x29, sp
  4019a0:	bl	4018c0 <safe_fork_full@plt+0xe8>
  4019a4:	nop
  4019a8:	ldp	x29, x30, [sp], #16
  4019ac:	ret
  4019b0:	sub	sp, sp, #0xb0
  4019b4:	stp	x29, x30, [sp, #160]
  4019b8:	add	x29, sp, #0xa0
  4019bc:	mov	w8, wzr
  4019c0:	mov	w9, #0xffffffff            	// #-1
  4019c4:	mov	w10, #0x1                   	// #1
  4019c8:	adrp	x11, 404000 <safe_fork_full@plt+0x2828>
  4019cc:	add	x11, x11, #0x9d0
  4019d0:	add	x11, x11, #0x3
  4019d4:	adrp	x12, 404000 <safe_fork_full@plt+0x2828>
  4019d8:	add	x12, x12, #0x9eb
  4019dc:	adrp	x13, 420000 <safe_fork_full@plt+0x1e828>
  4019e0:	add	x13, x13, #0x40
  4019e4:	stur	wzr, [x29, #-4]
  4019e8:	stur	w0, [x29, #-8]
  4019ec:	stur	x1, [x29, #-16]
  4019f0:	stur	x2, [x29, #-24]
  4019f4:	stur	w9, [x29, #-36]
  4019f8:	and	w0, w10, #0x1
  4019fc:	str	w8, [sp, #52]
  401a00:	str	x11, [sp, #40]
  401a04:	str	x12, [sp, #32]
  401a08:	str	x13, [sp, #24]
  401a0c:	bl	4014b8 <log_show_color@plt>
  401a10:	ldr	w0, [sp, #52]
  401a14:	bl	4014c8 <log_parse_environment_realm@plt>
  401a18:	bl	4014d8 <log_open@plt>
  401a1c:	ldur	w8, [x29, #-8]
  401a20:	ldur	x1, [x29, #-16]
  401a24:	mov	w0, w8
  401a28:	bl	401d3c <safe_fork_full@plt+0x564>
  401a2c:	stur	w0, [x29, #-28]
  401a30:	ldur	w8, [x29, #-28]
  401a34:	cmp	w8, #0x0
  401a38:	cset	w8, gt
  401a3c:	tbnz	w8, #0, 401a5c <safe_fork_full@plt+0x284>
  401a40:	ldur	w8, [x29, #-28]
  401a44:	mov	w9, wzr
  401a48:	mov	w10, #0x1                   	// #1
  401a4c:	cmp	w8, #0x0
  401a50:	csel	w8, w9, w10, eq  // eq = none
  401a54:	stur	w8, [x29, #-4]
  401a58:	b	401d2c <safe_fork_full@plt+0x554>
  401a5c:	bl	402540 <safe_fork_full@plt+0xd68>
  401a60:	stur	w0, [x29, #-28]
  401a64:	ldur	w8, [x29, #-28]
  401a68:	cmp	w8, #0x0
  401a6c:	cset	w8, ge  // ge = tcont
  401a70:	tbnz	w8, #0, 401a80 <safe_fork_full@plt+0x2a8>
  401a74:	mov	w8, #0x1                   	// #1
  401a78:	stur	w8, [x29, #-4]
  401a7c:	b	401d2c <safe_fork_full@plt+0x554>
  401a80:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  401a84:	add	x8, x8, #0x10
  401a88:	ldrb	w9, [x8]
  401a8c:	sub	x0, x29, #0x24
  401a90:	and	w1, w9, #0x1
  401a94:	bl	402620 <safe_fork_full@plt+0xe48>
  401a98:	stur	w0, [x29, #-32]
  401a9c:	ldur	w9, [x29, #-32]
  401aa0:	cmp	w9, #0x0
  401aa4:	cset	w9, ge  // ge = tcont
  401aa8:	tbnz	w9, #0, 401ab8 <safe_fork_full@plt+0x2e0>
  401aac:	mov	w8, #0x1                   	// #1
  401ab0:	stur	w8, [x29, #-4]
  401ab4:	b	401d2c <safe_fork_full@plt+0x554>
  401ab8:	ldur	w8, [x29, #-32]
  401abc:	cbnz	w8, 401b40 <safe_fork_full@plt+0x368>
  401ac0:	mov	w8, #0x3                   	// #3
  401ac4:	stur	w8, [x29, #-40]
  401ac8:	stur	wzr, [x29, #-44]
  401acc:	stur	wzr, [x29, #-48]
  401ad0:	ldur	w0, [x29, #-48]
  401ad4:	bl	4014e8 <log_get_max_level_realm@plt>
  401ad8:	ldur	w8, [x29, #-40]
  401adc:	and	w8, w8, #0x7
  401ae0:	cmp	w0, w8
  401ae4:	b.lt	401b18 <safe_fork_full@plt+0x340>  // b.tstop
  401ae8:	ldur	w8, [x29, #-48]
  401aec:	ldur	w9, [x29, #-40]
  401af0:	orr	w0, w9, w8, lsl #10
  401af4:	ldur	w1, [x29, #-44]
  401af8:	ldr	x2, [sp, #40]
  401afc:	mov	w3, #0x1f1                 	// #497
  401b00:	ldr	x4, [sp, #32]
  401b04:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  401b08:	add	x5, x5, #0x9f0
  401b0c:	bl	4014f8 <log_internal_realm@plt>
  401b10:	str	w0, [sp, #20]
  401b14:	b	401b2c <safe_fork_full@plt+0x354>
  401b18:	ldur	w0, [x29, #-44]
  401b1c:	bl	401508 <abs@plt>
  401b20:	mov	w8, wzr
  401b24:	subs	w8, w8, w0, uxtb
  401b28:	str	w8, [sp, #20]
  401b2c:	ldr	w8, [sp, #20]
  401b30:	stur	w8, [x29, #-52]
  401b34:	mov	w8, #0x1                   	// #1
  401b38:	stur	w8, [x29, #-4]
  401b3c:	b	401d2c <safe_fork_full@plt+0x554>
  401b40:	ldur	w0, [x29, #-36]
  401b44:	sub	x1, x29, #0x48
  401b48:	mov	w2, #0x1                   	// #1
  401b4c:	mov	w3, #0xffffffff            	// #-1
  401b50:	bl	401518 <epoll_wait@plt>
  401b54:	cmp	w0, #0x0
  401b58:	cset	w8, ge  // ge = tcont
  401b5c:	tbnz	w8, #0, 401bfc <safe_fork_full@plt+0x424>
  401b60:	bl	401528 <__errno_location@plt>
  401b64:	ldr	w8, [x0]
  401b68:	cmp	w8, #0x4
  401b6c:	b.ne	401b74 <safe_fork_full@plt+0x39c>  // b.any
  401b70:	b	401b40 <safe_fork_full@plt+0x368>
  401b74:	mov	w8, #0x3                   	// #3
  401b78:	stur	w8, [x29, #-76]
  401b7c:	bl	401528 <__errno_location@plt>
  401b80:	ldr	w8, [x0]
  401b84:	str	w8, [sp, #80]
  401b88:	str	wzr, [sp, #76]
  401b8c:	ldr	w0, [sp, #76]
  401b90:	bl	4014e8 <log_get_max_level_realm@plt>
  401b94:	ldur	w8, [x29, #-76]
  401b98:	and	w8, w8, #0x7
  401b9c:	cmp	w0, w8
  401ba0:	b.lt	401bd4 <safe_fork_full@plt+0x3fc>  // b.tstop
  401ba4:	ldr	w8, [sp, #76]
  401ba8:	ldur	w9, [x29, #-76]
  401bac:	orr	w0, w9, w8, lsl #10
  401bb0:	ldr	w1, [sp, #80]
  401bb4:	ldr	x2, [sp, #40]
  401bb8:	mov	w3, #0x1fc                 	// #508
  401bbc:	ldr	x4, [sp, #32]
  401bc0:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  401bc4:	add	x5, x5, #0xa20
  401bc8:	bl	4014f8 <log_internal_realm@plt>
  401bcc:	str	w0, [sp, #16]
  401bd0:	b	401be8 <safe_fork_full@plt+0x410>
  401bd4:	ldr	w0, [sp, #80]
  401bd8:	bl	401508 <abs@plt>
  401bdc:	mov	w8, wzr
  401be0:	subs	w8, w8, w0, uxtb
  401be4:	str	w8, [sp, #16]
  401be8:	ldr	w8, [sp, #16]
  401bec:	str	w8, [sp, #72]
  401bf0:	mov	w8, #0x1                   	// #1
  401bf4:	stur	w8, [x29, #-4]
  401bf8:	b	401d2c <safe_fork_full@plt+0x554>
  401bfc:	mov	w8, #0x6                   	// #6
  401c00:	str	w8, [sp, #68]
  401c04:	str	wzr, [sp, #64]
  401c08:	str	wzr, [sp, #60]
  401c0c:	ldr	w0, [sp, #60]
  401c10:	bl	4014e8 <log_get_max_level_realm@plt>
  401c14:	ldr	w8, [sp, #68]
  401c18:	and	w8, w8, #0x7
  401c1c:	cmp	w0, w8
  401c20:	b.lt	401c58 <safe_fork_full@plt+0x480>  // b.tstop
  401c24:	ldr	w8, [sp, #60]
  401c28:	ldr	w9, [sp, #68]
  401c2c:	orr	w0, w9, w8, lsl #10
  401c30:	ldr	w1, [sp, #64]
  401c34:	ldur	w6, [x29, #-64]
  401c38:	ldr	x2, [sp, #40]
  401c3c:	mov	w3, #0x200                 	// #512
  401c40:	ldr	x4, [sp, #32]
  401c44:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  401c48:	add	x5, x5, #0xa38
  401c4c:	bl	4014f8 <log_internal_realm@plt>
  401c50:	str	w0, [sp, #12]
  401c54:	b	401c6c <safe_fork_full@plt+0x494>
  401c58:	ldr	w0, [sp, #64]
  401c5c:	bl	401508 <abs@plt>
  401c60:	mov	w8, wzr
  401c64:	subs	w8, w8, w0, uxtb
  401c68:	str	w8, [sp, #12]
  401c6c:	ldr	w8, [sp, #12]
  401c70:	str	w8, [sp, #56]
  401c74:	adrp	x9, 420000 <safe_fork_full@plt+0x1e828>
  401c78:	add	x9, x9, #0x10
  401c7c:	ldrb	w8, [x9]
  401c80:	tbnz	w8, #0, 401c88 <safe_fork_full@plt+0x4b0>
  401c84:	b	401ce4 <safe_fork_full@plt+0x50c>
  401c88:	ldur	x8, [x29, #-16]
  401c8c:	ldr	x9, [sp, #24]
  401c90:	ldrsw	x10, [x9]
  401c94:	mov	x11, #0x8                   	// #8
  401c98:	mul	x10, x11, x10
  401c9c:	add	x8, x8, x10
  401ca0:	ldr	x0, [x8]
  401ca4:	ldur	x8, [x29, #-16]
  401ca8:	ldrsw	x10, [x9]
  401cac:	mul	x10, x11, x10
  401cb0:	add	x1, x8, x10
  401cb4:	ldur	x2, [x29, #-24]
  401cb8:	ldur	w3, [x29, #-64]
  401cbc:	bl	402cf0 <safe_fork_full@plt+0x1518>
  401cc0:	stur	w0, [x29, #-28]
  401cc4:	ldur	w12, [x29, #-28]
  401cc8:	cmp	w12, #0x0
  401ccc:	cset	w12, ge  // ge = tcont
  401cd0:	tbnz	w12, #0, 401ce0 <safe_fork_full@plt+0x508>
  401cd4:	mov	w8, #0x1                   	// #1
  401cd8:	stur	w8, [x29, #-4]
  401cdc:	b	401d2c <safe_fork_full@plt+0x554>
  401ce0:	b	401ce8 <safe_fork_full@plt+0x510>
  401ce4:	b	401cec <safe_fork_full@plt+0x514>
  401ce8:	b	401b40 <safe_fork_full@plt+0x368>
  401cec:	ldur	x8, [x29, #-16]
  401cf0:	ldr	x9, [sp, #24]
  401cf4:	ldrsw	x10, [x9]
  401cf8:	mov	x11, #0x8                   	// #8
  401cfc:	mul	x10, x11, x10
  401d00:	add	x8, x8, x10
  401d04:	ldr	x0, [x8]
  401d08:	ldur	x8, [x29, #-16]
  401d0c:	ldrsw	x10, [x9]
  401d10:	mul	x10, x11, x10
  401d14:	add	x1, x8, x10
  401d18:	ldur	x2, [x29, #-24]
  401d1c:	ldursw	x4, [x29, #-32]
  401d20:	mov	w3, #0x3                   	// #3
  401d24:	bl	402f44 <safe_fork_full@plt+0x176c>
  401d28:	stur	wzr, [x29, #-4]
  401d2c:	ldur	w0, [x29, #-4]
  401d30:	ldp	x29, x30, [sp, #160]
  401d34:	add	sp, sp, #0xb0
  401d38:	ret
  401d3c:	sub	sp, sp, #0x120
  401d40:	stp	x29, x30, [sp, #256]
  401d44:	str	x28, [sp, #272]
  401d48:	add	x29, sp, #0x100
  401d4c:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  401d50:	add	x8, x8, #0x0
  401d54:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  401d58:	add	x9, x9, #0x9d0
  401d5c:	add	x9, x9, #0x3
  401d60:	adrp	x10, 404000 <safe_fork_full@plt+0x2828>
  401d64:	add	x10, x10, #0xadb
  401d68:	adrp	x11, 420000 <safe_fork_full@plt+0x1e828>
  401d6c:	add	x11, x11, #0x48
  401d70:	adrp	x12, 404000 <safe_fork_full@plt+0x2828>
  401d74:	add	x12, x12, #0xab0
  401d78:	stur	w0, [x29, #-8]
  401d7c:	stur	x1, [x29, #-16]
  401d80:	str	x8, [sp, #80]
  401d84:	str	x9, [sp, #72]
  401d88:	str	x10, [sp, #64]
  401d8c:	str	x11, [sp, #56]
  401d90:	str	x12, [sp, #48]
  401d94:	ldur	w8, [x29, #-8]
  401d98:	cmp	w8, #0x0
  401d9c:	cset	w8, ge  // ge = tcont
  401da0:	mov	w9, #0x1                   	// #1
  401da4:	eor	w8, w8, #0x1
  401da8:	eor	w8, w8, w9
  401dac:	eor	w8, w8, w9
  401db0:	and	w8, w8, #0x1
  401db4:	mov	w0, w8
  401db8:	sxtw	x10, w0
  401dbc:	cbz	x10, 401de0 <safe_fork_full@plt+0x608>
  401dc0:	mov	w8, wzr
  401dc4:	mov	w0, w8
  401dc8:	adrp	x1, 404000 <safe_fork_full@plt+0x2828>
  401dcc:	add	x1, x1, #0xaa6
  401dd0:	ldr	x2, [sp, #72]
  401dd4:	mov	w3, #0x17d                 	// #381
  401dd8:	ldr	x4, [sp, #48]
  401ddc:	bl	401538 <log_assert_failed_realm@plt>
  401de0:	ldur	x8, [x29, #-16]
  401de4:	cmp	x8, #0x0
  401de8:	cset	w9, ne  // ne = any
  401dec:	mov	w10, #0x1                   	// #1
  401df0:	eor	w9, w9, #0x1
  401df4:	eor	w9, w9, w10
  401df8:	eor	w9, w9, w10
  401dfc:	and	w9, w9, #0x1
  401e00:	mov	w0, w9
  401e04:	sxtw	x8, w0
  401e08:	cbz	x8, 401e2c <safe_fork_full@plt+0x654>
  401e0c:	mov	w8, wzr
  401e10:	mov	w0, w8
  401e14:	adrp	x1, 404000 <safe_fork_full@plt+0x2828>
  401e18:	add	x1, x1, #0xacd
  401e1c:	ldr	x2, [sp, #72]
  401e20:	mov	w3, #0x17e                 	// #382
  401e24:	ldr	x4, [sp, #48]
  401e28:	bl	401538 <log_assert_failed_realm@plt>
  401e2c:	ldur	w0, [x29, #-8]
  401e30:	ldur	x1, [x29, #-16]
  401e34:	adrp	x2, 404000 <safe_fork_full@plt+0x2828>
  401e38:	add	x2, x2, #0xad2
  401e3c:	adrp	x3, 404000 <safe_fork_full@plt+0x2828>
  401e40:	add	x3, x3, #0x6c8
  401e44:	mov	x8, xzr
  401e48:	mov	x4, x8
  401e4c:	bl	401548 <getopt_long@plt>
  401e50:	stur	w0, [x29, #-20]
  401e54:	cmp	w0, #0x0
  401e58:	cset	w9, lt  // lt = tstop
  401e5c:	tbnz	w9, #0, 4023a4 <safe_fork_full@plt+0xbcc>
  401e60:	ldur	w8, [x29, #-20]
  401e64:	cmp	w8, #0x3f
  401e68:	str	w8, [sp, #44]
  401e6c:	b.eq	402374 <safe_fork_full@plt+0xb9c>  // b.none
  401e70:	b	401e74 <safe_fork_full@plt+0x69c>
  401e74:	ldr	w8, [sp, #44]
  401e78:	cmp	w8, #0x45
  401e7c:	b.eq	4020cc <safe_fork_full@plt+0x8f4>  // b.none
  401e80:	b	401e84 <safe_fork_full@plt+0x6ac>
  401e84:	ldr	w8, [sp, #44]
  401e88:	cmp	w8, #0x61
  401e8c:	b.eq	4020b8 <safe_fork_full@plt+0x8e0>  // b.none
  401e90:	b	401e94 <safe_fork_full@plt+0x6bc>
  401e94:	ldr	w8, [sp, #44]
  401e98:	cmp	w8, #0x64
  401e9c:	b.eq	401f68 <safe_fork_full@plt+0x790>  // b.none
  401ea0:	b	401ea4 <safe_fork_full@plt+0x6cc>
  401ea4:	ldr	w8, [sp, #44]
  401ea8:	cmp	w8, #0x68
  401eac:	b.eq	401f04 <safe_fork_full@plt+0x72c>  // b.none
  401eb0:	b	401eb4 <safe_fork_full@plt+0x6dc>
  401eb4:	ldr	w8, [sp, #44]
  401eb8:	cmp	w8, #0x6c
  401ebc:	b.eq	401f1c <safe_fork_full@plt+0x744>  // b.none
  401ec0:	b	401ec4 <safe_fork_full@plt+0x6ec>
  401ec4:	ldr	w8, [sp, #44]
  401ec8:	cmp	w8, #0x100
  401ecc:	b.eq	401f10 <safe_fork_full@plt+0x738>  // b.none
  401ed0:	b	401ed4 <safe_fork_full@plt+0x6fc>
  401ed4:	ldr	w8, [sp, #44]
  401ed8:	cmp	w8, #0x101
  401edc:	b.eq	402118 <safe_fork_full@plt+0x940>  // b.none
  401ee0:	b	401ee4 <safe_fork_full@plt+0x70c>
  401ee4:	ldr	w8, [sp, #44]
  401ee8:	cmp	w8, #0x102
  401eec:	b.eq	402010 <safe_fork_full@plt+0x838>  // b.none
  401ef0:	b	401ef4 <safe_fork_full@plt+0x71c>
  401ef4:	ldr	w8, [sp, #44]
  401ef8:	cmp	w8, #0x103
  401efc:	b.eq	402360 <safe_fork_full@plt+0xb88>  // b.none
  401f00:	b	402380 <safe_fork_full@plt+0xba8>
  401f04:	bl	403a98 <safe_fork_full@plt+0x22c0>
  401f08:	stur	w0, [x29, #-4]
  401f0c:	b	40252c <safe_fork_full@plt+0xd54>
  401f10:	bl	401558 <version@plt>
  401f14:	stur	w0, [x29, #-4]
  401f18:	b	40252c <safe_fork_full@plt+0xd54>
  401f1c:	ldr	x8, [sp, #56]
  401f20:	ldr	x1, [x8]
  401f24:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  401f28:	add	x0, x0, #0x18
  401f2c:	bl	401568 <strv_extend@plt>
  401f30:	stur	w0, [x29, #-24]
  401f34:	ldur	w9, [x29, #-24]
  401f38:	cmp	w9, #0x0
  401f3c:	cset	w9, ge  // ge = tcont
  401f40:	tbnz	w9, #0, 401f64 <safe_fork_full@plt+0x78c>
  401f44:	mov	w8, wzr
  401f48:	mov	w0, w8
  401f4c:	ldr	x1, [sp, #72]
  401f50:	mov	w2, #0x18b                 	// #395
  401f54:	ldr	x3, [sp, #64]
  401f58:	bl	401578 <log_oom_internal@plt>
  401f5c:	stur	w0, [x29, #-4]
  401f60:	b	40252c <safe_fork_full@plt+0xd54>
  401f64:	b	4023a0 <safe_fork_full@plt+0xbc8>
  401f68:	ldr	x8, [sp, #80]
  401f6c:	ldr	w9, [x8]
  401f70:	cmp	w9, #0x5
  401f74:	b.ne	402000 <safe_fork_full@plt+0x828>  // b.any
  401f78:	mov	w8, #0x3                   	// #3
  401f7c:	stur	w8, [x29, #-28]
  401f80:	mov	w8, #0x16                  	// #22
  401f84:	movk	w8, #0x4000, lsl #16
  401f88:	stur	w8, [x29, #-32]
  401f8c:	stur	wzr, [x29, #-36]
  401f90:	ldur	w0, [x29, #-36]
  401f94:	bl	4014e8 <log_get_max_level_realm@plt>
  401f98:	ldur	w8, [x29, #-28]
  401f9c:	and	w8, w8, #0x7
  401fa0:	cmp	w0, w8
  401fa4:	b.lt	401fd8 <safe_fork_full@plt+0x800>  // b.tstop
  401fa8:	ldur	w8, [x29, #-36]
  401fac:	ldur	w9, [x29, #-28]
  401fb0:	orr	w0, w9, w8, lsl #10
  401fb4:	ldur	w1, [x29, #-32]
  401fb8:	ldr	x2, [sp, #72]
  401fbc:	mov	w3, #0x192                 	// #402
  401fc0:	ldr	x4, [sp, #64]
  401fc4:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  401fc8:	add	x5, x5, #0xae6
  401fcc:	bl	4014f8 <log_internal_realm@plt>
  401fd0:	str	w0, [sp, #40]
  401fd4:	b	401fec <safe_fork_full@plt+0x814>
  401fd8:	ldur	w0, [x29, #-32]
  401fdc:	bl	401508 <abs@plt>
  401fe0:	mov	w8, wzr
  401fe4:	subs	w8, w8, w0, uxtb
  401fe8:	str	w8, [sp, #40]
  401fec:	ldr	w8, [sp, #40]
  401ff0:	stur	w8, [x29, #-40]
  401ff4:	ldur	w8, [x29, #-40]
  401ff8:	stur	w8, [x29, #-4]
  401ffc:	b	40252c <safe_fork_full@plt+0xd54>
  402000:	mov	w8, #0x2                   	// #2
  402004:	ldr	x9, [sp, #80]
  402008:	str	w8, [x9]
  40200c:	b	4023a0 <safe_fork_full@plt+0xbc8>
  402010:	ldr	x8, [sp, #80]
  402014:	ldr	w9, [x8]
  402018:	cmp	w9, #0x2
  40201c:	b.ne	4020a8 <safe_fork_full@plt+0x8d0>  // b.any
  402020:	mov	w8, #0x3                   	// #3
  402024:	stur	w8, [x29, #-44]
  402028:	mov	w8, #0x16                  	// #22
  40202c:	movk	w8, #0x4000, lsl #16
  402030:	stur	w8, [x29, #-48]
  402034:	stur	wzr, [x29, #-52]
  402038:	ldur	w0, [x29, #-52]
  40203c:	bl	4014e8 <log_get_max_level_realm@plt>
  402040:	ldur	w8, [x29, #-44]
  402044:	and	w8, w8, #0x7
  402048:	cmp	w0, w8
  40204c:	b.lt	402080 <safe_fork_full@plt+0x8a8>  // b.tstop
  402050:	ldur	w8, [x29, #-52]
  402054:	ldur	w9, [x29, #-44]
  402058:	orr	w0, w9, w8, lsl #10
  40205c:	ldur	w1, [x29, #-48]
  402060:	ldr	x2, [sp, #72]
  402064:	mov	w3, #0x19a                 	// #410
  402068:	ldr	x4, [sp, #64]
  40206c:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  402070:	add	x5, x5, #0xb17
  402074:	bl	4014f8 <log_internal_realm@plt>
  402078:	str	w0, [sp, #36]
  40207c:	b	402094 <safe_fork_full@plt+0x8bc>
  402080:	ldur	w0, [x29, #-48]
  402084:	bl	401508 <abs@plt>
  402088:	mov	w8, wzr
  40208c:	subs	w8, w8, w0, uxtb
  402090:	str	w8, [sp, #36]
  402094:	ldr	w8, [sp, #36]
  402098:	stur	w8, [x29, #-56]
  40209c:	ldur	w8, [x29, #-56]
  4020a0:	stur	w8, [x29, #-4]
  4020a4:	b	40252c <safe_fork_full@plt+0xd54>
  4020a8:	mov	w8, #0x5                   	// #5
  4020ac:	ldr	x9, [sp, #80]
  4020b0:	str	w8, [x9]
  4020b4:	b	4023a0 <safe_fork_full@plt+0xbc8>
  4020b8:	mov	w8, #0x1                   	// #1
  4020bc:	adrp	x9, 420000 <safe_fork_full@plt+0x1e828>
  4020c0:	add	x9, x9, #0x10
  4020c4:	strb	w8, [x9]
  4020c8:	b	4023a0 <safe_fork_full@plt+0xbc8>
  4020cc:	ldr	x8, [sp, #56]
  4020d0:	ldr	x1, [x8]
  4020d4:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  4020d8:	add	x0, x0, #0x20
  4020dc:	bl	401568 <strv_extend@plt>
  4020e0:	stur	w0, [x29, #-24]
  4020e4:	ldur	w9, [x29, #-24]
  4020e8:	cmp	w9, #0x0
  4020ec:	cset	w9, ge  // ge = tcont
  4020f0:	tbnz	w9, #0, 402114 <safe_fork_full@plt+0x93c>
  4020f4:	mov	w8, wzr
  4020f8:	mov	w0, w8
  4020fc:	ldr	x1, [sp, #72]
  402100:	mov	w2, #0x1a6                 	// #422
  402104:	ldr	x3, [sp, #64]
  402108:	bl	401578 <log_oom_internal@plt>
  40210c:	stur	w0, [x29, #-4]
  402110:	b	40252c <safe_fork_full@plt+0xd54>
  402114:	b	4023a0 <safe_fork_full@plt+0xbc8>
  402118:	ldr	x8, [sp, #56]
  40211c:	ldr	x0, [x8]
  402120:	adrp	x1, 404000 <safe_fork_full@plt+0x2828>
  402124:	add	x1, x1, #0xb48
  402128:	bl	403bac <safe_fork_full@plt+0x23d4>
  40212c:	stur	x0, [x29, #-64]
  402130:	ldur	x8, [x29, #-64]
  402134:	cbnz	x8, 402160 <safe_fork_full@plt+0x988>
  402138:	mov	w8, wzr
  40213c:	mov	w0, w8
  402140:	ldr	x1, [sp, #72]
  402144:	mov	w2, #0x1b0                 	// #432
  402148:	ldr	x3, [sp, #64]
  40214c:	bl	401578 <log_oom_internal@plt>
  402150:	stur	w0, [x29, #-4]
  402154:	mov	w8, #0x1                   	// #1
  402158:	stur	w8, [x29, #-76]
  40215c:	b	402344 <safe_fork_full@plt+0xb6c>
  402160:	ldur	x8, [x29, #-64]
  402164:	stur	x8, [x29, #-72]
  402168:	ldur	x8, [x29, #-72]
  40216c:	mov	w9, #0x0                   	// #0
  402170:	str	w9, [sp, #32]
  402174:	cbz	x8, 40218c <safe_fork_full@plt+0x9b4>
  402178:	ldur	x8, [x29, #-72]
  40217c:	ldr	x8, [x8]
  402180:	cmp	x8, #0x0
  402184:	cset	w9, ne  // ne = any
  402188:	str	w9, [sp, #32]
  40218c:	ldr	w8, [sp, #32]
  402190:	tbnz	w8, #0, 402198 <safe_fork_full@plt+0x9c0>
  402194:	b	402248 <safe_fork_full@plt+0xa70>
  402198:	ldur	x8, [x29, #-72]
  40219c:	ldr	x0, [x8]
  4021a0:	bl	401588 <fdname_is_valid@plt>
  4021a4:	tbnz	w0, #0, 402238 <safe_fork_full@plt+0xa60>
  4021a8:	ldur	x8, [x29, #-72]
  4021ac:	ldr	x0, [x8]
  4021b0:	bl	401598 <cescape@plt>
  4021b4:	stur	x0, [x29, #-88]
  4021b8:	mov	w9, #0x4                   	// #4
  4021bc:	stur	w9, [x29, #-92]
  4021c0:	stur	wzr, [x29, #-96]
  4021c4:	stur	wzr, [x29, #-100]
  4021c8:	ldur	w0, [x29, #-100]
  4021cc:	bl	4014e8 <log_get_max_level_realm@plt>
  4021d0:	ldur	w9, [x29, #-92]
  4021d4:	and	w9, w9, #0x7
  4021d8:	cmp	w0, w9
  4021dc:	b.lt	402214 <safe_fork_full@plt+0xa3c>  // b.tstop
  4021e0:	ldur	w8, [x29, #-100]
  4021e4:	ldur	w9, [x29, #-92]
  4021e8:	orr	w0, w9, w8, lsl #10
  4021ec:	ldur	w1, [x29, #-96]
  4021f0:	ldur	x6, [x29, #-88]
  4021f4:	ldr	x2, [sp, #72]
  4021f8:	mov	w3, #0x1b7                 	// #439
  4021fc:	ldr	x4, [sp, #64]
  402200:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  402204:	add	x5, x5, #0xb4a
  402208:	bl	4014f8 <log_internal_realm@plt>
  40220c:	str	w0, [sp, #28]
  402210:	b	402228 <safe_fork_full@plt+0xa50>
  402214:	ldur	w0, [x29, #-96]
  402218:	bl	401508 <abs@plt>
  40221c:	mov	w8, wzr
  402220:	subs	w8, w8, w0, uxtb
  402224:	str	w8, [sp, #28]
  402228:	ldr	w8, [sp, #28]
  40222c:	stur	w8, [x29, #-104]
  402230:	sub	x0, x29, #0x58
  402234:	bl	403be0 <safe_fork_full@plt+0x2408>
  402238:	ldur	x8, [x29, #-72]
  40223c:	add	x8, x8, #0x8
  402240:	stur	x8, [x29, #-72]
  402244:	b	402168 <safe_fork_full@plt+0x990>
  402248:	ldur	x0, [x29, #-64]
  40224c:	bl	403c08 <safe_fork_full@plt+0x2430>
  402250:	tbnz	w0, #0, 402258 <safe_fork_full@plt+0xa80>
  402254:	b	402278 <safe_fork_full@plt+0xaa0>
  402258:	sub	x8, x29, #0x78
  40225c:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  402260:	add	x9, x9, #0xb72
  402264:	stur	x9, [x29, #-120]
  402268:	mov	x9, xzr
  40226c:	str	x9, [x8, #8]
  402270:	str	x8, [sp, #16]
  402274:	b	402280 <safe_fork_full@plt+0xaa8>
  402278:	ldur	x8, [x29, #-64]
  40227c:	str	x8, [sp, #16]
  402280:	ldr	x8, [sp, #16]
  402284:	adrp	x0, 420000 <safe_fork_full@plt+0x1e828>
  402288:	add	x0, x0, #0x28
  40228c:	mov	x1, x8
  402290:	mov	w9, wzr
  402294:	and	w2, w9, #0x1
  402298:	bl	4015a8 <strv_extend_strv@plt>
  40229c:	stur	w0, [x29, #-24]
  4022a0:	ldur	w9, [x29, #-24]
  4022a4:	cmp	w9, #0x0
  4022a8:	cset	w9, ge  // ge = tcont
  4022ac:	tbnz	w9, #0, 40233c <safe_fork_full@plt+0xb64>
  4022b0:	mov	w8, #0x3                   	// #3
  4022b4:	stur	w8, [x29, #-124]
  4022b8:	ldur	w8, [x29, #-24]
  4022bc:	str	w8, [sp, #128]
  4022c0:	str	wzr, [sp, #124]
  4022c4:	ldr	w0, [sp, #124]
  4022c8:	bl	4014e8 <log_get_max_level_realm@plt>
  4022cc:	ldur	w8, [x29, #-124]
  4022d0:	and	w8, w8, #0x7
  4022d4:	cmp	w0, w8
  4022d8:	b.lt	40230c <safe_fork_full@plt+0xb34>  // b.tstop
  4022dc:	ldr	w8, [sp, #124]
  4022e0:	ldur	w9, [x29, #-124]
  4022e4:	orr	w0, w9, w8, lsl #10
  4022e8:	ldr	w1, [sp, #128]
  4022ec:	ldr	x2, [sp, #72]
  4022f0:	mov	w3, #0x1bf                 	// #447
  4022f4:	ldr	x4, [sp, #64]
  4022f8:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  4022fc:	add	x5, x5, #0xb73
  402300:	bl	4014f8 <log_internal_realm@plt>
  402304:	str	w0, [sp, #12]
  402308:	b	402320 <safe_fork_full@plt+0xb48>
  40230c:	ldr	w0, [sp, #128]
  402310:	bl	401508 <abs@plt>
  402314:	mov	w8, wzr
  402318:	subs	w8, w8, w0, uxtb
  40231c:	str	w8, [sp, #12]
  402320:	ldr	w8, [sp, #12]
  402324:	str	w8, [sp, #120]
  402328:	ldr	w8, [sp, #120]
  40232c:	stur	w8, [x29, #-4]
  402330:	mov	w8, #0x1                   	// #1
  402334:	stur	w8, [x29, #-76]
  402338:	b	402344 <safe_fork_full@plt+0xb6c>
  40233c:	mov	w8, #0x8                   	// #8
  402340:	stur	w8, [x29, #-76]
  402344:	sub	x0, x29, #0x40
  402348:	bl	403b78 <safe_fork_full@plt+0x23a0>
  40234c:	ldur	w8, [x29, #-76]
  402350:	cmp	w8, #0x1
  402354:	b.eq	40252c <safe_fork_full@plt+0xd54>  // b.none
  402358:	b	40235c <safe_fork_full@plt+0xb84>
  40235c:	b	4023a0 <safe_fork_full@plt+0xbc8>
  402360:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  402364:	add	x8, x8, #0x30
  402368:	mov	w9, #0x1                   	// #1
  40236c:	strb	w9, [x8]
  402370:	b	4023a0 <safe_fork_full@plt+0xbc8>
  402374:	mov	w8, #0xffffffea            	// #-22
  402378:	stur	w8, [x29, #-4]
  40237c:	b	40252c <safe_fork_full@plt+0xd54>
  402380:	mov	w8, wzr
  402384:	mov	w0, w8
  402388:	adrp	x1, 404000 <safe_fork_full@plt+0x2828>
  40238c:	add	x1, x1, #0xb88
  402390:	ldr	x2, [sp, #72]
  402394:	mov	w3, #0x1cb                 	// #459
  402398:	ldr	x4, [sp, #48]
  40239c:	bl	4015b8 <log_assert_failed_unreachable_realm@plt>
  4023a0:	b	401e2c <safe_fork_full@plt+0x654>
  4023a4:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  4023a8:	add	x8, x8, #0x40
  4023ac:	ldr	w9, [x8]
  4023b0:	ldur	w10, [x29, #-8]
  4023b4:	cmp	w9, w10
  4023b8:	b.ne	402450 <safe_fork_full@plt+0xc78>  // b.any
  4023bc:	mov	w8, #0x3                   	// #3
  4023c0:	str	w8, [sp, #116]
  4023c4:	mov	w8, #0x16                  	// #22
  4023c8:	movk	w8, #0x4000, lsl #16
  4023cc:	str	w8, [sp, #112]
  4023d0:	str	wzr, [sp, #108]
  4023d4:	ldr	w0, [sp, #108]
  4023d8:	bl	4014e8 <log_get_max_level_realm@plt>
  4023dc:	ldr	w8, [sp, #116]
  4023e0:	and	w8, w8, #0x7
  4023e4:	cmp	w0, w8
  4023e8:	b.lt	402428 <safe_fork_full@plt+0xc50>  // b.tstop
  4023ec:	ldr	w8, [sp, #108]
  4023f0:	ldr	w9, [sp, #116]
  4023f4:	orr	w0, w9, w8, lsl #10
  4023f8:	ldr	w1, [sp, #112]
  4023fc:	adrp	x10, 420000 <safe_fork_full@plt+0x1e828>
  402400:	add	x10, x10, #0x50
  402404:	ldr	x6, [x10]
  402408:	ldr	x2, [sp, #72]
  40240c:	mov	w3, #0x1d1                 	// #465
  402410:	ldr	x4, [sp, #64]
  402414:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  402418:	add	x5, x5, #0xb99
  40241c:	bl	4014f8 <log_internal_realm@plt>
  402420:	str	w0, [sp, #8]
  402424:	b	40243c <safe_fork_full@plt+0xc64>
  402428:	ldr	w0, [sp, #112]
  40242c:	bl	401508 <abs@plt>
  402430:	mov	w8, wzr
  402434:	subs	w8, w8, w0, uxtb
  402438:	str	w8, [sp, #8]
  40243c:	ldr	w8, [sp, #8]
  402440:	str	w8, [sp, #104]
  402444:	ldr	w8, [sp, #104]
  402448:	stur	w8, [x29, #-4]
  40244c:	b	40252c <safe_fork_full@plt+0xd54>
  402450:	ldr	x8, [sp, #80]
  402454:	ldr	w9, [x8]
  402458:	cmp	w9, #0x2
  40245c:	b.ne	4024fc <safe_fork_full@plt+0xd24>  // b.any
  402460:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  402464:	add	x8, x8, #0x10
  402468:	ldrb	w9, [x8]
  40246c:	tbnz	w9, #0, 402474 <safe_fork_full@plt+0xc9c>
  402470:	b	4024fc <safe_fork_full@plt+0xd24>
  402474:	mov	w8, #0x3                   	// #3
  402478:	str	w8, [sp, #100]
  40247c:	mov	w8, #0x16                  	// #22
  402480:	movk	w8, #0x4000, lsl #16
  402484:	str	w8, [sp, #96]
  402488:	str	wzr, [sp, #92]
  40248c:	ldr	w0, [sp, #92]
  402490:	bl	4014e8 <log_get_max_level_realm@plt>
  402494:	ldr	w8, [sp, #100]
  402498:	and	w8, w8, #0x7
  40249c:	cmp	w0, w8
  4024a0:	b.lt	4024d4 <safe_fork_full@plt+0xcfc>  // b.tstop
  4024a4:	ldr	w8, [sp, #92]
  4024a8:	ldr	w9, [sp, #100]
  4024ac:	orr	w0, w9, w8, lsl #10
  4024b0:	ldr	w1, [sp, #96]
  4024b4:	ldr	x2, [sp, #72]
  4024b8:	mov	w3, #0x1d6                 	// #470
  4024bc:	ldr	x4, [sp, #64]
  4024c0:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  4024c4:	add	x5, x5, #0xbbc
  4024c8:	bl	4014f8 <log_internal_realm@plt>
  4024cc:	str	w0, [sp, #4]
  4024d0:	b	4024e8 <safe_fork_full@plt+0xd10>
  4024d4:	ldr	w0, [sp, #96]
  4024d8:	bl	401508 <abs@plt>
  4024dc:	mov	w8, wzr
  4024e0:	subs	w8, w8, w0, uxtb
  4024e4:	str	w8, [sp, #4]
  4024e8:	ldr	w8, [sp, #4]
  4024ec:	str	w8, [sp, #88]
  4024f0:	ldr	w8, [sp, #88]
  4024f4:	stur	w8, [x29, #-4]
  4024f8:	b	40252c <safe_fork_full@plt+0xd54>
  4024fc:	ldur	x8, [x29, #-16]
  402500:	adrp	x9, 420000 <safe_fork_full@plt+0x1e828>
  402504:	add	x9, x9, #0x40
  402508:	ldrsw	x9, [x9]
  40250c:	mov	x10, #0x8                   	// #8
  402510:	mul	x9, x10, x9
  402514:	add	x8, x8, x9
  402518:	adrp	x9, 420000 <safe_fork_full@plt+0x1e828>
  40251c:	add	x9, x9, #0x38
  402520:	str	x8, [x9]
  402524:	mov	w11, #0x1                   	// #1
  402528:	stur	w11, [x29, #-4]
  40252c:	ldur	w0, [x29, #-4]
  402530:	ldr	x28, [sp, #272]
  402534:	ldp	x29, x30, [sp, #256]
  402538:	add	sp, sp, #0x120
  40253c:	ret
  402540:	sub	sp, sp, #0x40
  402544:	stp	x29, x30, [sp, #48]
  402548:	add	x29, sp, #0x30
  40254c:	mov	w0, #0x11                  	// #17
  402550:	adrp	x1, 404000 <safe_fork_full@plt+0x2828>
  402554:	add	x1, x1, #0x828
  402558:	mov	x8, xzr
  40255c:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  402560:	add	x9, x9, #0x9d0
  402564:	add	x2, x9, #0x3
  402568:	str	x2, [sp, #16]
  40256c:	mov	x2, x8
  402570:	bl	4015c8 <sigaction@plt>
  402574:	cmp	w0, #0x0
  402578:	cset	w10, ge  // ge = tcont
  40257c:	tbnz	w10, #0, 40260c <safe_fork_full@plt+0xe34>
  402580:	mov	w8, #0x3                   	// #3
  402584:	stur	w8, [x29, #-8]
  402588:	bl	401528 <__errno_location@plt>
  40258c:	ldr	w8, [x0]
  402590:	stur	w8, [x29, #-12]
  402594:	stur	wzr, [x29, #-16]
  402598:	ldur	w0, [x29, #-16]
  40259c:	bl	4014e8 <log_get_max_level_realm@plt>
  4025a0:	ldur	w8, [x29, #-8]
  4025a4:	and	w8, w8, #0x7
  4025a8:	cmp	w0, w8
  4025ac:	b.lt	4025e4 <safe_fork_full@plt+0xe0c>  // b.tstop
  4025b0:	ldur	w8, [x29, #-16]
  4025b4:	ldur	w9, [x29, #-8]
  4025b8:	orr	w0, w9, w8, lsl #10
  4025bc:	ldur	w1, [x29, #-12]
  4025c0:	ldr	x2, [sp, #16]
  4025c4:	mov	w3, #0x142                 	// #322
  4025c8:	adrp	x4, 404000 <safe_fork_full@plt+0x2828>
  4025cc:	add	x4, x4, #0xf59
  4025d0:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  4025d4:	add	x5, x5, #0xf6e
  4025d8:	bl	4014f8 <log_internal_realm@plt>
  4025dc:	str	w0, [sp, #12]
  4025e0:	b	4025f8 <safe_fork_full@plt+0xe20>
  4025e4:	ldur	w0, [x29, #-12]
  4025e8:	bl	401508 <abs@plt>
  4025ec:	mov	w8, wzr
  4025f0:	subs	w8, w8, w0, uxtb
  4025f4:	str	w8, [sp, #12]
  4025f8:	ldr	w8, [sp, #12]
  4025fc:	stur	w8, [x29, #-20]
  402600:	ldur	w8, [x29, #-20]
  402604:	stur	w8, [x29, #-4]
  402608:	b	402610 <safe_fork_full@plt+0xe38>
  40260c:	stur	wzr, [x29, #-4]
  402610:	ldur	w0, [x29, #-4]
  402614:	ldp	x29, x30, [sp, #48]
  402618:	add	sp, sp, #0x40
  40261c:	ret
  402620:	sub	sp, sp, #0x100
  402624:	stp	x29, x30, [sp, #240]
  402628:	add	x29, sp, #0xf0
  40262c:	mov	w8, #0x1                   	// #1
  402630:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  402634:	add	x9, x9, #0x9d0
  402638:	add	x9, x9, #0x3
  40263c:	adrp	x10, 404000 <safe_fork_full@plt+0x2828>
  402640:	add	x10, x10, #0xfd7
  402644:	adrp	x11, 420000 <safe_fork_full@plt+0x1e828>
  402648:	add	x11, x11, #0x18
  40264c:	stur	x0, [x29, #-16]
  402650:	and	w12, w1, w8
  402654:	sturb	w12, [x29, #-17]
  402658:	stur	wzr, [x29, #-48]
  40265c:	mov	w0, w8
  402660:	str	x9, [sp, #64]
  402664:	str	x10, [sp, #56]
  402668:	str	x11, [sp, #48]
  40266c:	bl	4015d8 <sd_listen_fds@plt>
  402670:	stur	w0, [x29, #-36]
  402674:	ldur	w8, [x29, #-36]
  402678:	cmp	w8, #0x0
  40267c:	cset	w8, ge  // ge = tcont
  402680:	tbnz	w8, #0, 402708 <safe_fork_full@plt+0xf30>
  402684:	mov	w8, #0x3                   	// #3
  402688:	stur	w8, [x29, #-52]
  40268c:	ldur	w8, [x29, #-36]
  402690:	stur	w8, [x29, #-56]
  402694:	stur	wzr, [x29, #-60]
  402698:	ldur	w0, [x29, #-60]
  40269c:	bl	4014e8 <log_get_max_level_realm@plt>
  4026a0:	ldur	w8, [x29, #-52]
  4026a4:	and	w8, w8, #0x7
  4026a8:	cmp	w0, w8
  4026ac:	b.lt	4026e0 <safe_fork_full@plt+0xf08>  // b.tstop
  4026b0:	ldur	w8, [x29, #-60]
  4026b4:	ldur	w9, [x29, #-52]
  4026b8:	orr	w0, w9, w8, lsl #10
  4026bc:	ldur	w1, [x29, #-56]
  4026c0:	ldr	x2, [sp, #64]
  4026c4:	mov	w3, #0x37                  	// #55
  4026c8:	ldr	x4, [sp, #56]
  4026cc:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  4026d0:	add	x5, x5, #0xfe4
  4026d4:	bl	4014f8 <log_internal_realm@plt>
  4026d8:	str	w0, [sp, #44]
  4026dc:	b	4026f4 <safe_fork_full@plt+0xf1c>
  4026e0:	ldur	w0, [x29, #-56]
  4026e4:	bl	401508 <abs@plt>
  4026e8:	mov	w8, wzr
  4026ec:	subs	w8, w8, w0, uxtb
  4026f0:	str	w8, [sp, #44]
  4026f4:	ldr	w8, [sp, #44]
  4026f8:	stur	w8, [x29, #-64]
  4026fc:	ldur	w8, [x29, #-64]
  402700:	stur	w8, [x29, #-4]
  402704:	b	402ce0 <safe_fork_full@plt+0x1508>
  402708:	ldur	w8, [x29, #-36]
  40270c:	cmp	w8, #0x0
  402710:	cset	w8, le
  402714:	tbnz	w8, #0, 402800 <safe_fork_full@plt+0x1028>
  402718:	mov	w8, #0x6                   	// #6
  40271c:	stur	w8, [x29, #-68]
  402720:	stur	wzr, [x29, #-72]
  402724:	stur	wzr, [x29, #-76]
  402728:	ldur	w0, [x29, #-76]
  40272c:	bl	4014e8 <log_get_max_level_realm@plt>
  402730:	ldur	w8, [x29, #-68]
  402734:	and	w8, w8, #0x7
  402738:	cmp	w0, w8
  40273c:	b.lt	402774 <safe_fork_full@plt+0xf9c>  // b.tstop
  402740:	ldur	w8, [x29, #-76]
  402744:	ldur	w9, [x29, #-68]
  402748:	orr	w0, w9, w8, lsl #10
  40274c:	ldur	w1, [x29, #-72]
  402750:	ldur	w6, [x29, #-36]
  402754:	ldr	x2, [sp, #64]
  402758:	mov	w3, #0x39                  	// #57
  40275c:	ldr	x4, [sp, #56]
  402760:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  402764:	add	x5, x5, #0x23
  402768:	bl	4014f8 <log_internal_realm@plt>
  40276c:	str	w0, [sp, #40]
  402770:	b	402788 <safe_fork_full@plt+0xfb0>
  402774:	ldur	w0, [x29, #-72]
  402778:	bl	401508 <abs@plt>
  40277c:	mov	w8, wzr
  402780:	subs	w8, w8, w0, uxtb
  402784:	str	w8, [sp, #40]
  402788:	ldr	w8, [sp, #40]
  40278c:	stur	w8, [x29, #-80]
  402790:	mov	w8, #0x3                   	// #3
  402794:	stur	w8, [x29, #-40]
  402798:	ldur	w8, [x29, #-40]
  40279c:	ldur	w9, [x29, #-36]
  4027a0:	add	w9, w9, #0x3
  4027a4:	cmp	w8, w9
  4027a8:	b.ge	402800 <safe_fork_full@plt+0x1028>  // b.tcont
  4027ac:	ldur	w0, [x29, #-40]
  4027b0:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  4027b4:	add	x8, x8, #0x10
  4027b8:	ldrb	w9, [x8]
  4027bc:	and	w1, w9, #0x1
  4027c0:	bl	4015e8 <fd_cloexec@plt>
  4027c4:	stur	w0, [x29, #-44]
  4027c8:	ldur	w9, [x29, #-44]
  4027cc:	cmp	w9, #0x0
  4027d0:	cset	w9, ge  // ge = tcont
  4027d4:	tbnz	w9, #0, 4027e4 <safe_fork_full@plt+0x100c>
  4027d8:	ldur	w8, [x29, #-44]
  4027dc:	stur	w8, [x29, #-4]
  4027e0:	b	402ce0 <safe_fork_full@plt+0x1508>
  4027e4:	ldur	w8, [x29, #-48]
  4027e8:	add	w8, w8, #0x1
  4027ec:	stur	w8, [x29, #-48]
  4027f0:	ldur	w8, [x29, #-40]
  4027f4:	add	w8, w8, #0x1
  4027f8:	stur	w8, [x29, #-40]
  4027fc:	b	402798 <safe_fork_full@plt+0xfc0>
  402800:	ldr	x8, [sp, #48]
  402804:	ldr	x9, [x8]
  402808:	cbz	x9, 402958 <safe_fork_full@plt+0x1180>
  40280c:	mov	x8, xzr
  402810:	stur	x8, [x29, #-88]
  402814:	ldursw	x1, [x29, #-36]
  402818:	mov	x0, #0x4                   	// #4
  40281c:	bl	403ec0 <safe_fork_full@plt+0x26e8>
  402820:	stur	x0, [x29, #-88]
  402824:	ldur	x8, [x29, #-88]
  402828:	cbnz	x8, 402854 <safe_fork_full@plt+0x107c>
  40282c:	mov	w8, wzr
  402830:	mov	w0, w8
  402834:	ldr	x1, [sp, #64]
  402838:	mov	w2, #0x4b                  	// #75
  40283c:	ldr	x3, [sp, #56]
  402840:	bl	401578 <log_oom_internal@plt>
  402844:	stur	w0, [x29, #-4]
  402848:	mov	w8, #0x1                   	// #1
  40284c:	stur	w8, [x29, #-96]
  402850:	b	402940 <safe_fork_full@plt+0x1168>
  402854:	stur	wzr, [x29, #-92]
  402858:	ldur	w8, [x29, #-92]
  40285c:	ldur	w9, [x29, #-36]
  402860:	cmp	w8, w9
  402864:	b.ge	40288c <safe_fork_full@plt+0x10b4>  // b.tcont
  402868:	ldur	w8, [x29, #-92]
  40286c:	add	w8, w8, #0x3
  402870:	ldur	x9, [x29, #-88]
  402874:	ldursw	x10, [x29, #-92]
  402878:	str	w8, [x9, x10, lsl #2]
  40287c:	ldur	w8, [x29, #-92]
  402880:	add	w8, w8, #0x1
  402884:	stur	w8, [x29, #-92]
  402888:	b	402858 <safe_fork_full@plt+0x1080>
  40288c:	bl	4015f8 <log_close@plt>
  402890:	ldur	x0, [x29, #-88]
  402894:	ldursw	x1, [x29, #-36]
  402898:	bl	401608 <close_all_fds@plt>
  40289c:	stur	w0, [x29, #-44]
  4028a0:	ldur	w8, [x29, #-44]
  4028a4:	cmp	w8, #0x0
  4028a8:	cset	w8, ge  // ge = tcont
  4028ac:	tbnz	w8, #0, 40293c <safe_fork_full@plt+0x1164>
  4028b0:	mov	w8, #0x3                   	// #3
  4028b4:	stur	w8, [x29, #-100]
  4028b8:	ldur	w8, [x29, #-44]
  4028bc:	stur	w8, [x29, #-104]
  4028c0:	stur	wzr, [x29, #-108]
  4028c4:	ldur	w0, [x29, #-108]
  4028c8:	bl	4014e8 <log_get_max_level_realm@plt>
  4028cc:	ldur	w8, [x29, #-100]
  4028d0:	and	w8, w8, #0x7
  4028d4:	cmp	w0, w8
  4028d8:	b.lt	40290c <safe_fork_full@plt+0x1134>  // b.tstop
  4028dc:	ldur	w8, [x29, #-108]
  4028e0:	ldur	w9, [x29, #-100]
  4028e4:	orr	w0, w9, w8, lsl #10
  4028e8:	ldur	w1, [x29, #-104]
  4028ec:	ldr	x2, [sp, #64]
  4028f0:	mov	w3, #0x53                  	// #83
  4028f4:	ldr	x4, [sp, #56]
  4028f8:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  4028fc:	add	x5, x5, #0x50
  402900:	bl	4014f8 <log_internal_realm@plt>
  402904:	str	w0, [sp, #36]
  402908:	b	402920 <safe_fork_full@plt+0x1148>
  40290c:	ldur	w0, [x29, #-104]
  402910:	bl	401508 <abs@plt>
  402914:	mov	w8, wzr
  402918:	subs	w8, w8, w0, uxtb
  40291c:	str	w8, [sp, #36]
  402920:	ldr	w8, [sp, #36]
  402924:	stur	w8, [x29, #-112]
  402928:	ldur	w8, [x29, #-112]
  40292c:	stur	w8, [x29, #-4]
  402930:	mov	w8, #0x1                   	// #1
  402934:	stur	w8, [x29, #-96]
  402938:	b	402940 <safe_fork_full@plt+0x1168>
  40293c:	stur	wzr, [x29, #-96]
  402940:	sub	x0, x29, #0x58
  402944:	bl	403be0 <safe_fork_full@plt+0x2408>
  402948:	ldur	w8, [x29, #-96]
  40294c:	cbz	w8, 402958 <safe_fork_full@plt+0x1180>
  402950:	b	402954 <safe_fork_full@plt+0x117c>
  402954:	b	402ce0 <safe_fork_full@plt+0x1508>
  402958:	ldr	x8, [sp, #48]
  40295c:	ldr	x9, [x8]
  402960:	stur	x9, [x29, #-32]
  402964:	ldur	x8, [x29, #-32]
  402968:	mov	w9, #0x0                   	// #0
  40296c:	str	w9, [sp, #32]
  402970:	cbz	x8, 402988 <safe_fork_full@plt+0x11b0>
  402974:	ldur	x8, [x29, #-32]
  402978:	ldr	x8, [x8]
  40297c:	cmp	x8, #0x0
  402980:	cset	w9, ne  // ne = any
  402984:	str	w9, [sp, #32]
  402988:	ldr	w8, [sp, #32]
  40298c:	tbnz	w8, #0, 402994 <safe_fork_full@plt+0x11bc>
  402990:	b	402ae4 <safe_fork_full@plt+0x130c>
  402994:	ldur	x8, [x29, #-32]
  402998:	ldr	x1, [x8]
  40299c:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  4029a0:	add	x8, x8, #0x0
  4029a4:	ldr	w2, [x8]
  4029a8:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  4029ac:	add	x8, x8, #0x10
  4029b0:	ldrb	w9, [x8]
  4029b4:	and	w9, w9, #0x1
  4029b8:	mov	w10, #0x80000               	// #524288
  4029bc:	mul	w3, w9, w10
  4029c0:	mov	w0, #0x7                   	// #7
  4029c4:	bl	401618 <make_socket_fd@plt>
  4029c8:	stur	w0, [x29, #-40]
  4029cc:	ldur	w9, [x29, #-40]
  4029d0:	cmp	w9, #0x0
  4029d4:	cset	w9, ge  // ge = tcont
  4029d8:	tbnz	w9, #0, 402a70 <safe_fork_full@plt+0x1298>
  4029dc:	bl	4014d8 <log_open@plt>
  4029e0:	mov	w8, #0x3                   	// #3
  4029e4:	stur	w8, [x29, #-116]
  4029e8:	ldur	w8, [x29, #-40]
  4029ec:	str	w8, [sp, #120]
  4029f0:	str	wzr, [sp, #116]
  4029f4:	ldr	w8, [sp, #116]
  4029f8:	mov	w0, w8
  4029fc:	bl	4014e8 <log_get_max_level_realm@plt>
  402a00:	ldur	w8, [x29, #-116]
  402a04:	and	w8, w8, #0x7
  402a08:	cmp	w0, w8
  402a0c:	b.lt	402a48 <safe_fork_full@plt+0x1270>  // b.tstop
  402a10:	ldr	w8, [sp, #116]
  402a14:	ldur	w9, [x29, #-116]
  402a18:	orr	w0, w9, w8, lsl #10
  402a1c:	ldr	w1, [sp, #120]
  402a20:	ldur	x10, [x29, #-32]
  402a24:	ldr	x6, [x10]
  402a28:	ldr	x2, [sp, #64]
  402a2c:	mov	w3, #0x5f                  	// #95
  402a30:	ldr	x4, [sp, #56]
  402a34:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  402a38:	add	x5, x5, #0x79
  402a3c:	bl	4014f8 <log_internal_realm@plt>
  402a40:	str	w0, [sp, #28]
  402a44:	b	402a5c <safe_fork_full@plt+0x1284>
  402a48:	ldr	w0, [sp, #120]
  402a4c:	bl	401508 <abs@plt>
  402a50:	mov	w8, wzr
  402a54:	subs	w8, w8, w0, uxtb
  402a58:	str	w8, [sp, #28]
  402a5c:	ldr	w8, [sp, #28]
  402a60:	str	w8, [sp, #112]
  402a64:	ldr	w8, [sp, #112]
  402a68:	stur	w8, [x29, #-4]
  402a6c:	b	402ce0 <safe_fork_full@plt+0x1508>
  402a70:	ldur	w8, [x29, #-40]
  402a74:	ldur	w9, [x29, #-48]
  402a78:	add	w9, w9, #0x3
  402a7c:	cmp	w8, w9
  402a80:	cset	w8, eq  // eq = none
  402a84:	mov	w9, #0x1                   	// #1
  402a88:	eor	w8, w8, #0x1
  402a8c:	eor	w8, w8, w9
  402a90:	eor	w8, w8, w9
  402a94:	and	w8, w8, #0x1
  402a98:	mov	w0, w8
  402a9c:	sxtw	x10, w0
  402aa0:	cbz	x10, 402ac8 <safe_fork_full@plt+0x12f0>
  402aa4:	mov	w8, wzr
  402aa8:	mov	w0, w8
  402aac:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  402ab0:	add	x1, x1, #0x91
  402ab4:	ldr	x2, [sp, #64]
  402ab8:	mov	w3, #0x62                  	// #98
  402abc:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  402ac0:	add	x4, x4, #0xb3
  402ac4:	bl	401538 <log_assert_failed_realm@plt>
  402ac8:	ldur	w8, [x29, #-48]
  402acc:	add	w8, w8, #0x1
  402ad0:	stur	w8, [x29, #-48]
  402ad4:	ldur	x8, [x29, #-32]
  402ad8:	add	x8, x8, #0x8
  402adc:	stur	x8, [x29, #-32]
  402ae0:	b	402964 <safe_fork_full@plt+0x118c>
  402ae4:	ldr	x8, [sp, #48]
  402ae8:	ldr	x9, [x8]
  402aec:	cbz	x9, 402af4 <safe_fork_full@plt+0x131c>
  402af0:	bl	4014d8 <log_open@plt>
  402af4:	mov	w0, #0x80000               	// #524288
  402af8:	bl	401628 <epoll_create1@plt>
  402afc:	ldur	x8, [x29, #-16]
  402b00:	str	w0, [x8]
  402b04:	ldur	x8, [x29, #-16]
  402b08:	ldr	w9, [x8]
  402b0c:	cmp	w9, #0x0
  402b10:	cset	w9, ge  // ge = tcont
  402b14:	tbnz	w9, #0, 402ba0 <safe_fork_full@plt+0x13c8>
  402b18:	mov	w8, #0x3                   	// #3
  402b1c:	str	w8, [sp, #108]
  402b20:	bl	401528 <__errno_location@plt>
  402b24:	ldr	w8, [x0]
  402b28:	str	w8, [sp, #104]
  402b2c:	str	wzr, [sp, #100]
  402b30:	ldr	w0, [sp, #100]
  402b34:	bl	4014e8 <log_get_max_level_realm@plt>
  402b38:	ldr	w8, [sp, #108]
  402b3c:	and	w8, w8, #0x7
  402b40:	cmp	w0, w8
  402b44:	b.lt	402b78 <safe_fork_full@plt+0x13a0>  // b.tstop
  402b48:	ldr	w8, [sp, #100]
  402b4c:	ldr	w9, [sp, #108]
  402b50:	orr	w0, w9, w8, lsl #10
  402b54:	ldr	w1, [sp, #104]
  402b58:	ldr	x2, [sp, #64]
  402b5c:	mov	w3, #0x6b                  	// #107
  402b60:	ldr	x4, [sp, #56]
  402b64:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  402b68:	add	x5, x5, #0xd2
  402b6c:	bl	4014f8 <log_internal_realm@plt>
  402b70:	str	w0, [sp, #24]
  402b74:	b	402b8c <safe_fork_full@plt+0x13b4>
  402b78:	ldr	w0, [sp, #104]
  402b7c:	bl	401508 <abs@plt>
  402b80:	mov	w8, wzr
  402b84:	subs	w8, w8, w0, uxtb
  402b88:	str	w8, [sp, #24]
  402b8c:	ldr	w8, [sp, #24]
  402b90:	str	w8, [sp, #96]
  402b94:	ldr	w8, [sp, #96]
  402b98:	stur	w8, [x29, #-4]
  402b9c:	b	402ce0 <safe_fork_full@plt+0x1508>
  402ba0:	mov	w8, #0x3                   	// #3
  402ba4:	stur	w8, [x29, #-40]
  402ba8:	ldur	w8, [x29, #-40]
  402bac:	ldur	w9, [x29, #-48]
  402bb0:	add	w9, w9, #0x3
  402bb4:	cmp	w8, w9
  402bb8:	b.ge	402cd8 <safe_fork_full@plt+0x1500>  // b.tcont
  402bbc:	add	x1, sp, #0x58
  402bc0:	mov	x8, xzr
  402bc4:	str	x8, [sp, #88]
  402bc8:	ldur	w0, [x29, #-40]
  402bcc:	bl	401638 <getsockname_pretty@plt>
  402bd0:	mov	w9, #0x6                   	// #6
  402bd4:	str	w9, [sp, #84]
  402bd8:	str	wzr, [sp, #80]
  402bdc:	str	wzr, [sp, #76]
  402be0:	ldr	w9, [sp, #76]
  402be4:	mov	w0, w9
  402be8:	bl	4014e8 <log_get_max_level_realm@plt>
  402bec:	ldr	w9, [sp, #84]
  402bf0:	and	w9, w9, #0x7
  402bf4:	cmp	w0, w9
  402bf8:	b.lt	402c58 <safe_fork_full@plt+0x1480>  // b.tstop
  402bfc:	ldr	w8, [sp, #76]
  402c00:	ldr	w9, [sp, #84]
  402c04:	orr	w0, w9, w8, lsl #10
  402c08:	ldr	w1, [sp, #80]
  402c0c:	ldr	x10, [sp, #88]
  402c10:	str	w0, [sp, #20]
  402c14:	mov	x0, x10
  402c18:	str	w1, [sp, #16]
  402c1c:	bl	403f3c <safe_fork_full@plt+0x2764>
  402c20:	ldur	w7, [x29, #-40]
  402c24:	ldr	w8, [sp, #20]
  402c28:	str	x0, [sp, #8]
  402c2c:	mov	w0, w8
  402c30:	ldr	w1, [sp, #16]
  402c34:	ldr	x2, [sp, #64]
  402c38:	mov	w3, #0x71                  	// #113
  402c3c:	ldr	x4, [sp, #56]
  402c40:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  402c44:	add	x5, x5, #0xf4
  402c48:	ldr	x6, [sp, #8]
  402c4c:	bl	4014f8 <log_internal_realm@plt>
  402c50:	str	w0, [sp, #4]
  402c54:	b	402c6c <safe_fork_full@plt+0x1494>
  402c58:	ldr	w0, [sp, #80]
  402c5c:	bl	401508 <abs@plt>
  402c60:	mov	w8, wzr
  402c64:	subs	w8, w8, w0, uxtb
  402c68:	str	w8, [sp, #4]
  402c6c:	ldr	w8, [sp, #4]
  402c70:	str	w8, [sp, #72]
  402c74:	ldur	x9, [x29, #-16]
  402c78:	ldr	w0, [x9]
  402c7c:	ldur	w1, [x29, #-40]
  402c80:	bl	403f78 <safe_fork_full@plt+0x27a0>
  402c84:	stur	w0, [x29, #-44]
  402c88:	ldur	w8, [x29, #-44]
  402c8c:	cmp	w8, #0x0
  402c90:	cset	w8, ge  // ge = tcont
  402c94:	tbnz	w8, #0, 402cac <safe_fork_full@plt+0x14d4>
  402c98:	ldur	w8, [x29, #-44]
  402c9c:	stur	w8, [x29, #-4]
  402ca0:	mov	w8, #0x1                   	// #1
  402ca4:	stur	w8, [x29, #-96]
  402ca8:	b	402cb0 <safe_fork_full@plt+0x14d8>
  402cac:	stur	wzr, [x29, #-96]
  402cb0:	add	x0, sp, #0x58
  402cb4:	bl	403be0 <safe_fork_full@plt+0x2408>
  402cb8:	ldur	w8, [x29, #-96]
  402cbc:	cbz	w8, 402cc8 <safe_fork_full@plt+0x14f0>
  402cc0:	b	402cc4 <safe_fork_full@plt+0x14ec>
  402cc4:	b	402ce0 <safe_fork_full@plt+0x1508>
  402cc8:	ldur	w8, [x29, #-40]
  402ccc:	add	w8, w8, #0x1
  402cd0:	stur	w8, [x29, #-40]
  402cd4:	b	402ba8 <safe_fork_full@plt+0x13d0>
  402cd8:	ldur	w8, [x29, #-48]
  402cdc:	stur	w8, [x29, #-4]
  402ce0:	ldur	w0, [x29, #-4]
  402ce4:	ldp	x29, x30, [sp, #240]
  402ce8:	add	sp, sp, #0x100
  402cec:	ret
  402cf0:	sub	sp, sp, #0xb0
  402cf4:	stp	x29, x30, [sp, #160]
  402cf8:	add	x29, sp, #0xa0
  402cfc:	mov	x8, xzr
  402d00:	mov	w9, #0xffffffff            	// #-1
  402d04:	mov	x4, x8
  402d08:	mov	w10, wzr
  402d0c:	adrp	x11, 404000 <safe_fork_full@plt+0x2828>
  402d10:	add	x11, x11, #0x9d0
  402d14:	add	x11, x11, #0x3
  402d18:	stur	x0, [x29, #-16]
  402d1c:	stur	x1, [x29, #-24]
  402d20:	stur	x2, [x29, #-32]
  402d24:	stur	w3, [x29, #-36]
  402d28:	stur	x8, [x29, #-48]
  402d2c:	stur	x8, [x29, #-56]
  402d30:	stur	w9, [x29, #-60]
  402d34:	ldur	w0, [x29, #-36]
  402d38:	stur	x8, [x29, #-72]
  402d3c:	ldur	x1, [x29, #-72]
  402d40:	mov	x2, x4
  402d44:	mov	w3, w10
  402d48:	str	x11, [sp, #40]
  402d4c:	bl	401648 <accept4@plt>
  402d50:	stur	w0, [x29, #-60]
  402d54:	ldur	w9, [x29, #-60]
  402d58:	cmp	w9, #0x0
  402d5c:	cset	w9, ge  // ge = tcont
  402d60:	tbnz	w9, #0, 402e20 <safe_fork_full@plt+0x1648>
  402d64:	bl	401528 <__errno_location@plt>
  402d68:	ldr	w0, [x0]
  402d6c:	bl	4041a4 <safe_fork_full@plt+0x29cc>
  402d70:	tbnz	w0, #0, 402d78 <safe_fork_full@plt+0x15a0>
  402d74:	b	402d88 <safe_fork_full@plt+0x15b0>
  402d78:	stur	wzr, [x29, #-4]
  402d7c:	mov	w8, #0x1                   	// #1
  402d80:	stur	w8, [x29, #-76]
  402d84:	b	402f1c <safe_fork_full@plt+0x1744>
  402d88:	mov	w8, #0x3                   	// #3
  402d8c:	str	w8, [sp, #80]
  402d90:	bl	401528 <__errno_location@plt>
  402d94:	ldr	w8, [x0]
  402d98:	str	w8, [sp, #76]
  402d9c:	str	wzr, [sp, #72]
  402da0:	ldr	w0, [sp, #72]
  402da4:	bl	4014e8 <log_get_max_level_realm@plt>
  402da8:	ldr	w8, [sp, #80]
  402dac:	and	w8, w8, #0x7
  402db0:	cmp	w0, w8
  402db4:	b.lt	402df0 <safe_fork_full@plt+0x1618>  // b.tstop
  402db8:	ldr	w8, [sp, #72]
  402dbc:	ldr	w9, [sp, #80]
  402dc0:	orr	w0, w9, w8, lsl #10
  402dc4:	ldr	w1, [sp, #76]
  402dc8:	ldur	w6, [x29, #-36]
  402dcc:	ldr	x2, [sp, #40]
  402dd0:	mov	w3, #0x11b                 	// #283
  402dd4:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  402dd8:	add	x4, x4, #0x178
  402ddc:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  402de0:	add	x5, x5, #0x182
  402de4:	bl	4014f8 <log_internal_realm@plt>
  402de8:	str	w0, [sp, #36]
  402dec:	b	402e04 <safe_fork_full@plt+0x162c>
  402df0:	ldr	w0, [sp, #76]
  402df4:	bl	401508 <abs@plt>
  402df8:	mov	w8, wzr
  402dfc:	subs	w8, w8, w0, uxtb
  402e00:	str	w8, [sp, #36]
  402e04:	ldr	w8, [sp, #36]
  402e08:	str	w8, [sp, #68]
  402e0c:	ldr	w8, [sp, #68]
  402e10:	stur	w8, [x29, #-4]
  402e14:	mov	w8, #0x1                   	// #1
  402e18:	stur	w8, [x29, #-76]
  402e1c:	b	402f1c <safe_fork_full@plt+0x1744>
  402e20:	ldur	w0, [x29, #-60]
  402e24:	sub	x1, x29, #0x30
  402e28:	bl	401638 <getsockname_pretty@plt>
  402e2c:	ldur	w8, [x29, #-60]
  402e30:	mov	w0, w8
  402e34:	mov	w8, #0x1                   	// #1
  402e38:	and	w1, w8, #0x1
  402e3c:	sub	x2, x29, #0x38
  402e40:	bl	401658 <getpeername_pretty@plt>
  402e44:	mov	w8, #0x6                   	// #6
  402e48:	str	w8, [sp, #64]
  402e4c:	str	wzr, [sp, #60]
  402e50:	str	wzr, [sp, #56]
  402e54:	ldr	w8, [sp, #56]
  402e58:	mov	w0, w8
  402e5c:	bl	4014e8 <log_get_max_level_realm@plt>
  402e60:	ldr	w8, [sp, #64]
  402e64:	and	w8, w8, #0x7
  402e68:	cmp	w0, w8
  402e6c:	b.lt	402ee0 <safe_fork_full@plt+0x1708>  // b.tstop
  402e70:	ldr	w8, [sp, #56]
  402e74:	ldr	w9, [sp, #64]
  402e78:	orr	w0, w9, w8, lsl #10
  402e7c:	ldr	w1, [sp, #60]
  402e80:	ldur	x10, [x29, #-56]
  402e84:	str	w0, [sp, #32]
  402e88:	mov	x0, x10
  402e8c:	str	w1, [sp, #28]
  402e90:	bl	403f3c <safe_fork_full@plt+0x2764>
  402e94:	ldur	x10, [x29, #-48]
  402e98:	str	x0, [sp, #16]
  402e9c:	mov	x0, x10
  402ea0:	bl	403f3c <safe_fork_full@plt+0x2764>
  402ea4:	ldr	w8, [sp, #32]
  402ea8:	str	x0, [sp, #8]
  402eac:	mov	w0, w8
  402eb0:	ldr	w1, [sp, #28]
  402eb4:	ldr	x2, [sp, #40]
  402eb8:	mov	w3, #0x120                 	// #288
  402ebc:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  402ec0:	add	x4, x4, #0x178
  402ec4:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  402ec8:	add	x5, x5, #0x1ab
  402ecc:	ldr	x6, [sp, #16]
  402ed0:	ldr	x7, [sp, #8]
  402ed4:	bl	4014f8 <log_internal_realm@plt>
  402ed8:	str	w0, [sp, #4]
  402edc:	b	402ef4 <safe_fork_full@plt+0x171c>
  402ee0:	ldr	w0, [sp, #60]
  402ee4:	bl	401508 <abs@plt>
  402ee8:	mov	w8, wzr
  402eec:	subs	w8, w8, w0, uxtb
  402ef0:	str	w8, [sp, #4]
  402ef4:	ldr	w8, [sp, #4]
  402ef8:	str	w8, [sp, #52]
  402efc:	ldur	x0, [x29, #-16]
  402f00:	ldur	x1, [x29, #-24]
  402f04:	ldur	x2, [x29, #-32]
  402f08:	ldur	w3, [x29, #-60]
  402f0c:	bl	404244 <safe_fork_full@plt+0x2a6c>
  402f10:	stur	w0, [x29, #-4]
  402f14:	mov	w8, #0x1                   	// #1
  402f18:	stur	w8, [x29, #-76]
  402f1c:	sub	x0, x29, #0x3c
  402f20:	bl	40417c <safe_fork_full@plt+0x29a4>
  402f24:	sub	x0, x29, #0x38
  402f28:	bl	403be0 <safe_fork_full@plt+0x2408>
  402f2c:	sub	x0, x29, #0x30
  402f30:	bl	403be0 <safe_fork_full@plt+0x2408>
  402f34:	ldur	w0, [x29, #-4]
  402f38:	ldp	x29, x30, [sp, #160]
  402f3c:	add	sp, sp, #0xb0
  402f40:	ret
  402f44:	sub	sp, sp, #0x1d0
  402f48:	stp	x29, x30, [sp, #432]
  402f4c:	str	x28, [sp, #448]
  402f50:	add	x29, sp, #0x1b0
  402f54:	mov	x8, xzr
  402f58:	adrp	x9, 420000 <safe_fork_full@plt+0x1e828>
  402f5c:	add	x9, x9, #0x30
  402f60:	adrp	x10, 404000 <safe_fork_full@plt+0x2828>
  402f64:	add	x10, x10, #0x9d0
  402f68:	add	x10, x10, #0x3
  402f6c:	adrp	x11, 405000 <safe_fork_full@plt+0x3828>
  402f70:	add	x11, x11, #0x202
  402f74:	adrp	x12, 420000 <safe_fork_full@plt+0x1e828>
  402f78:	add	x12, x12, #0x28
  402f7c:	stur	x0, [x29, #-16]
  402f80:	stur	x1, [x29, #-24]
  402f84:	stur	x2, [x29, #-32]
  402f88:	stur	w3, [x29, #-36]
  402f8c:	stur	x4, [x29, #-48]
  402f90:	stur	x8, [x29, #-56]
  402f94:	stur	x8, [x29, #-64]
  402f98:	stur	xzr, [x29, #-72]
  402f9c:	ldrb	w13, [x9]
  402fa0:	str	x10, [sp, #88]
  402fa4:	str	x11, [sp, #80]
  402fa8:	str	x12, [sp, #72]
  402fac:	tbnz	w13, #0, 402fb4 <safe_fork_full@plt+0x17dc>
  402fb0:	b	403050 <safe_fork_full@plt+0x1878>
  402fb4:	ldur	x8, [x29, #-48]
  402fb8:	cmp	x8, #0x1
  402fbc:	b.eq	403050 <safe_fork_full@plt+0x1878>  // b.none
  402fc0:	mov	w8, #0x3                   	// #3
  402fc4:	stur	w8, [x29, #-104]
  402fc8:	mov	w8, #0x16                  	// #22
  402fcc:	movk	w8, #0x4000, lsl #16
  402fd0:	stur	w8, [x29, #-108]
  402fd4:	stur	wzr, [x29, #-112]
  402fd8:	ldur	w0, [x29, #-112]
  402fdc:	bl	4014e8 <log_get_max_level_realm@plt>
  402fe0:	ldur	w8, [x29, #-104]
  402fe4:	and	w8, w8, #0x7
  402fe8:	cmp	w0, w8
  402fec:	b.lt	403020 <safe_fork_full@plt+0x1848>  // b.tstop
  402ff0:	ldur	w8, [x29, #-112]
  402ff4:	ldur	w9, [x29, #-104]
  402ff8:	orr	w0, w9, w8, lsl #10
  402ffc:	ldur	w1, [x29, #-108]
  403000:	ldr	x2, [sp, #88]
  403004:	mov	w3, #0x86                  	// #134
  403008:	ldr	x4, [sp, #80]
  40300c:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  403010:	add	x5, x5, #0x20f
  403014:	bl	4014f8 <log_internal_realm@plt>
  403018:	str	w0, [sp, #68]
  40301c:	b	403034 <safe_fork_full@plt+0x185c>
  403020:	ldur	w0, [x29, #-108]
  403024:	bl	401508 <abs@plt>
  403028:	mov	w8, wzr
  40302c:	subs	w8, w8, w0, uxtb
  403030:	str	w8, [sp, #68]
  403034:	ldr	w8, [sp, #68]
  403038:	stur	w8, [x29, #-116]
  40303c:	ldur	w8, [x29, #-116]
  403040:	stur	w8, [x29, #-4]
  403044:	mov	w8, #0x1                   	// #1
  403048:	stur	w8, [x29, #-120]
  40304c:	b	403a74 <safe_fork_full@plt+0x229c>
  403050:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  403054:	add	x8, x8, #0x20
  403058:	ldr	x0, [x8]
  40305c:	bl	401668 <strv_length@plt>
  403060:	stur	x0, [x29, #-80]
  403064:	ldur	x8, [x29, #-80]
  403068:	add	x8, x8, #0x8
  40306c:	str	x8, [sp, #56]
  403070:	cbz	x8, 403080 <safe_fork_full@plt+0x18a8>
  403074:	ldr	x8, [sp, #56]
  403078:	str	x8, [sp, #48]
  40307c:	b	403088 <safe_fork_full@plt+0x18b0>
  403080:	mov	x8, #0x1                   	// #1
  403084:	str	x8, [sp, #48]
  403088:	ldr	x8, [sp, #48]
  40308c:	mov	x0, x8
  403090:	mov	x1, #0x8                   	// #8
  403094:	bl	401678 <calloc@plt>
  403098:	stur	x0, [x29, #-56]
  40309c:	ldur	x8, [x29, #-56]
  4030a0:	cbnz	x8, 4030cc <safe_fork_full@plt+0x18f4>
  4030a4:	mov	w8, wzr
  4030a8:	mov	w0, w8
  4030ac:	ldr	x1, [sp, #88]
  4030b0:	mov	w2, #0x8d                  	// #141
  4030b4:	ldr	x3, [sp, #80]
  4030b8:	bl	401578 <log_oom_internal@plt>
  4030bc:	stur	w0, [x29, #-4]
  4030c0:	mov	w8, #0x1                   	// #1
  4030c4:	stur	w8, [x29, #-120]
  4030c8:	b	403a74 <safe_fork_full@plt+0x229c>
  4030cc:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  4030d0:	add	x8, x8, #0x20
  4030d4:	ldr	x8, [x8]
  4030d8:	stur	x8, [x29, #-96]
  4030dc:	ldur	x8, [x29, #-96]
  4030e0:	mov	w9, #0x0                   	// #0
  4030e4:	str	w9, [sp, #44]
  4030e8:	cbz	x8, 403100 <safe_fork_full@plt+0x1928>
  4030ec:	ldur	x8, [x29, #-96]
  4030f0:	ldr	x8, [x8]
  4030f4:	cmp	x8, #0x0
  4030f8:	cset	w9, ne  // ne = any
  4030fc:	str	w9, [sp, #44]
  403100:	ldr	w8, [sp, #44]
  403104:	tbnz	w8, #0, 40310c <safe_fork_full@plt+0x1934>
  403108:	b	4032a4 <safe_fork_full@plt+0x1acc>
  40310c:	ldur	x8, [x29, #-96]
  403110:	ldr	x0, [x8]
  403114:	mov	w1, #0x3d                  	// #61
  403118:	bl	401688 <strchr@plt>
  40311c:	cbz	x0, 403188 <safe_fork_full@plt+0x19b0>
  403120:	ldur	x8, [x29, #-96]
  403124:	ldr	x0, [x8]
  403128:	bl	401698 <strdup@plt>
  40312c:	stur	x0, [x29, #-128]
  403130:	ldur	x8, [x29, #-128]
  403134:	cbnz	x8, 403160 <safe_fork_full@plt+0x1988>
  403138:	mov	w8, wzr
  40313c:	mov	w0, w8
  403140:	ldr	x1, [sp, #88]
  403144:	mov	w2, #0x96                  	// #150
  403148:	ldr	x3, [sp, #80]
  40314c:	bl	401578 <log_oom_internal@plt>
  403150:	stur	w0, [x29, #-4]
  403154:	mov	w8, #0x1                   	// #1
  403158:	stur	w8, [x29, #-120]
  40315c:	b	403a74 <safe_fork_full@plt+0x229c>
  403160:	ldur	x8, [x29, #-128]
  403164:	ldur	x9, [x29, #-56]
  403168:	ldur	x10, [x29, #-72]
  40316c:	add	x11, x10, #0x1
  403170:	stur	x11, [x29, #-72]
  403174:	mov	x11, #0x8                   	// #8
  403178:	mul	x10, x11, x10
  40317c:	add	x9, x9, x10
  403180:	str	x8, [x9]
  403184:	b	403294 <safe_fork_full@plt+0x1abc>
  403188:	ldur	x8, [x29, #-96]
  40318c:	ldr	x0, [x8]
  403190:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  403194:	add	x1, x1, #0x243
  403198:	mov	x8, xzr
  40319c:	mov	x2, x8
  4031a0:	bl	4016a8 <strjoin_real@plt>
  4031a4:	stur	x0, [x29, #-136]
  4031a8:	ldur	x8, [x29, #-136]
  4031ac:	cbnz	x8, 4031d8 <safe_fork_full@plt+0x1a00>
  4031b0:	mov	w8, wzr
  4031b4:	mov	w0, w8
  4031b8:	ldr	x1, [sp, #88]
  4031bc:	mov	w2, #0x9f                  	// #159
  4031c0:	ldr	x3, [sp, #80]
  4031c4:	bl	401578 <log_oom_internal@plt>
  4031c8:	stur	w0, [x29, #-4]
  4031cc:	mov	w8, #0x1                   	// #1
  4031d0:	stur	w8, [x29, #-120]
  4031d4:	b	40326c <safe_fork_full@plt+0x1a94>
  4031d8:	ldur	x0, [x29, #-32]
  4031dc:	ldur	x1, [x29, #-136]
  4031e0:	bl	4016b8 <strv_find_prefix@plt>
  4031e4:	stur	x0, [x29, #-144]
  4031e8:	ldur	x8, [x29, #-144]
  4031ec:	cbnz	x8, 4031fc <safe_fork_full@plt+0x1a24>
  4031f0:	mov	w8, #0x4                   	// #4
  4031f4:	stur	w8, [x29, #-120]
  4031f8:	b	40326c <safe_fork_full@plt+0x1a94>
  4031fc:	ldur	x0, [x29, #-144]
  403200:	bl	401698 <strdup@plt>
  403204:	ldur	x8, [x29, #-56]
  403208:	ldur	x9, [x29, #-72]
  40320c:	mov	x10, #0x8                   	// #8
  403210:	mul	x9, x10, x9
  403214:	add	x8, x8, x9
  403218:	str	x0, [x8]
  40321c:	ldur	x8, [x29, #-56]
  403220:	ldur	x9, [x29, #-72]
  403224:	mul	x9, x10, x9
  403228:	add	x8, x8, x9
  40322c:	ldr	x8, [x8]
  403230:	cbnz	x8, 40325c <safe_fork_full@plt+0x1a84>
  403234:	mov	w8, wzr
  403238:	mov	w0, w8
  40323c:	ldr	x1, [sp, #88]
  403240:	mov	w2, #0xa7                  	// #167
  403244:	ldr	x3, [sp, #80]
  403248:	bl	401578 <log_oom_internal@plt>
  40324c:	stur	w0, [x29, #-4]
  403250:	mov	w8, #0x1                   	// #1
  403254:	stur	w8, [x29, #-120]
  403258:	b	40326c <safe_fork_full@plt+0x1a94>
  40325c:	ldur	x8, [x29, #-72]
  403260:	add	x8, x8, #0x1
  403264:	stur	x8, [x29, #-72]
  403268:	stur	wzr, [x29, #-120]
  40326c:	sub	x0, x29, #0x88
  403270:	bl	403be0 <safe_fork_full@plt+0x2408>
  403274:	ldur	w8, [x29, #-120]
  403278:	str	w8, [sp, #40]
  40327c:	cbz	w8, 403294 <safe_fork_full@plt+0x1abc>
  403280:	b	403284 <safe_fork_full@plt+0x1aac>
  403284:	ldr	w8, [sp, #40]
  403288:	cmp	w8, #0x4
  40328c:	b.eq	403294 <safe_fork_full@plt+0x1abc>  // b.none
  403290:	b	403a74 <safe_fork_full@plt+0x229c>
  403294:	ldur	x8, [x29, #-96]
  403298:	add	x8, x8, #0x8
  40329c:	stur	x8, [x29, #-96]
  4032a0:	b	4030dc <safe_fork_full@plt+0x1904>
  4032a4:	adrp	x8, 405000 <safe_fork_full@plt+0x3828>
  4032a8:	add	x8, x8, #0x245
  4032ac:	stur	x8, [x29, #-88]
  4032b0:	stur	x8, [x29, #-200]
  4032b4:	ldur	x8, [x29, #-200]
  4032b8:	sub	x9, x29, #0xc0
  4032bc:	stur	x8, [x29, #-192]
  4032c0:	adrp	x8, 405000 <safe_fork_full@plt+0x3828>
  4032c4:	add	x8, x8, #0x24b
  4032c8:	str	x8, [x9, #8]
  4032cc:	adrp	x8, 405000 <safe_fork_full@plt+0x3828>
  4032d0:	add	x8, x8, #0x251
  4032d4:	str	x8, [x9, #16]
  4032d8:	adrp	x8, 405000 <safe_fork_full@plt+0x3828>
  4032dc:	add	x8, x8, #0x257
  4032e0:	str	x8, [x9, #24]
  4032e4:	mov	x8, xzr
  4032e8:	str	x8, [x9, #32]
  4032ec:	stur	x9, [x29, #-152]
  4032f0:	ldur	x8, [x29, #-88]
  4032f4:	cbz	x8, 403398 <safe_fork_full@plt+0x1bc0>
  4032f8:	ldur	x0, [x29, #-32]
  4032fc:	ldur	x1, [x29, #-88]
  403300:	bl	4016b8 <strv_find_prefix@plt>
  403304:	stur	x0, [x29, #-208]
  403308:	ldur	x8, [x29, #-208]
  40330c:	cbnz	x8, 403314 <safe_fork_full@plt+0x1b3c>
  403310:	b	403380 <safe_fork_full@plt+0x1ba8>
  403314:	ldur	x0, [x29, #-208]
  403318:	bl	401698 <strdup@plt>
  40331c:	ldur	x8, [x29, #-56]
  403320:	ldur	x9, [x29, #-72]
  403324:	mov	x10, #0x8                   	// #8
  403328:	mul	x9, x10, x9
  40332c:	add	x8, x8, x9
  403330:	str	x0, [x8]
  403334:	ldur	x8, [x29, #-56]
  403338:	ldur	x9, [x29, #-72]
  40333c:	mul	x9, x10, x9
  403340:	add	x8, x8, x9
  403344:	ldr	x8, [x8]
  403348:	cbnz	x8, 403374 <safe_fork_full@plt+0x1b9c>
  40334c:	mov	w8, wzr
  403350:	mov	w0, w8
  403354:	ldr	x1, [sp, #88]
  403358:	mov	w2, #0xb6                  	// #182
  40335c:	ldr	x3, [sp, #80]
  403360:	bl	401578 <log_oom_internal@plt>
  403364:	stur	w0, [x29, #-4]
  403368:	mov	w8, #0x1                   	// #1
  40336c:	stur	w8, [x29, #-120]
  403370:	b	403a74 <safe_fork_full@plt+0x229c>
  403374:	ldur	x8, [x29, #-72]
  403378:	add	x8, x8, #0x1
  40337c:	stur	x8, [x29, #-72]
  403380:	ldur	x8, [x29, #-152]
  403384:	add	x9, x8, #0x8
  403388:	stur	x9, [x29, #-152]
  40338c:	ldr	x8, [x8, #8]
  403390:	stur	x8, [x29, #-88]
  403394:	b	4032f0 <safe_fork_full@plt+0x1b18>
  403398:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  40339c:	add	x8, x8, #0x30
  4033a0:	ldrb	w9, [x8]
  4033a4:	tbnz	w9, #0, 4033ac <safe_fork_full@plt+0x1bd4>
  4033a8:	b	4034b0 <safe_fork_full@plt+0x1cd8>
  4033ac:	ldur	x8, [x29, #-48]
  4033b0:	cmp	x8, #0x1
  4033b4:	cset	w9, eq  // eq = none
  4033b8:	mov	w10, #0x1                   	// #1
  4033bc:	eor	w9, w9, #0x1
  4033c0:	eor	w9, w9, w10
  4033c4:	eor	w9, w9, w10
  4033c8:	and	w9, w9, #0x1
  4033cc:	mov	w0, w9
  4033d0:	sxtw	x8, w0
  4033d4:	cbz	x8, 4033fc <safe_fork_full@plt+0x1c24>
  4033d8:	mov	w8, wzr
  4033dc:	mov	w0, w8
  4033e0:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  4033e4:	add	x1, x1, #0x25d
  4033e8:	ldr	x2, [sp, #88]
  4033ec:	mov	w3, #0xbc                  	// #188
  4033f0:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  4033f4:	add	x4, x4, #0x268
  4033f8:	bl	401538 <log_assert_failed_realm@plt>
  4033fc:	ldur	w0, [x29, #-36]
  403400:	ldur	w1, [x29, #-36]
  403404:	mov	w2, #0x2                   	// #2
  403408:	bl	4016c8 <rearrange_stdio@plt>
  40340c:	stur	w0, [x29, #-100]
  403410:	ldur	w8, [x29, #-100]
  403414:	cmp	w8, #0x0
  403418:	cset	w8, ge  // ge = tcont
  40341c:	tbnz	w8, #0, 4034ac <safe_fork_full@plt+0x1cd4>
  403420:	mov	w8, #0x3                   	// #3
  403424:	stur	w8, [x29, #-212]
  403428:	ldur	w8, [x29, #-100]
  40342c:	str	w8, [sp, #216]
  403430:	str	wzr, [sp, #212]
  403434:	ldr	w0, [sp, #212]
  403438:	bl	4014e8 <log_get_max_level_realm@plt>
  40343c:	ldur	w8, [x29, #-212]
  403440:	and	w8, w8, #0x7
  403444:	cmp	w0, w8
  403448:	b.lt	40347c <safe_fork_full@plt+0x1ca4>  // b.tstop
  40344c:	ldr	w8, [sp, #212]
  403450:	ldur	w9, [x29, #-212]
  403454:	orr	w0, w9, w8, lsl #10
  403458:	ldr	w1, [sp, #216]
  40345c:	ldr	x2, [sp, #88]
  403460:	mov	w3, #0xc0                  	// #192
  403464:	ldr	x4, [sp, #80]
  403468:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  40346c:	add	x5, x5, #0x2a6
  403470:	bl	4014f8 <log_internal_realm@plt>
  403474:	str	w0, [sp, #36]
  403478:	b	403490 <safe_fork_full@plt+0x1cb8>
  40347c:	ldr	w0, [sp, #216]
  403480:	bl	401508 <abs@plt>
  403484:	mov	w8, wzr
  403488:	subs	w8, w8, w0, uxtb
  40348c:	str	w8, [sp, #36]
  403490:	ldr	w8, [sp, #36]
  403494:	str	w8, [sp, #208]
  403498:	ldr	w8, [sp, #208]
  40349c:	stur	w8, [x29, #-4]
  4034a0:	mov	w8, #0x1                   	// #1
  4034a4:	stur	w8, [x29, #-120]
  4034a8:	b	403a74 <safe_fork_full@plt+0x229c>
  4034ac:	b	403910 <safe_fork_full@plt+0x2138>
  4034b0:	ldur	w8, [x29, #-36]
  4034b4:	cmp	w8, #0x3
  4034b8:	b.eq	4035c4 <safe_fork_full@plt+0x1dec>  // b.none
  4034bc:	ldur	x8, [x29, #-48]
  4034c0:	cmp	x8, #0x1
  4034c4:	cset	w9, eq  // eq = none
  4034c8:	mov	w10, #0x1                   	// #1
  4034cc:	eor	w9, w9, #0x1
  4034d0:	eor	w9, w9, w10
  4034d4:	eor	w9, w9, w10
  4034d8:	and	w9, w9, #0x1
  4034dc:	mov	w0, w9
  4034e0:	sxtw	x8, w0
  4034e4:	cbz	x8, 40350c <safe_fork_full@plt+0x1d34>
  4034e8:	mov	w8, wzr
  4034ec:	mov	w0, w8
  4034f0:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  4034f4:	add	x1, x1, #0x25d
  4034f8:	ldr	x2, [sp, #88]
  4034fc:	mov	w3, #0xc4                  	// #196
  403500:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  403504:	add	x4, x4, #0x268
  403508:	bl	401538 <log_assert_failed_realm@plt>
  40350c:	ldur	w0, [x29, #-36]
  403510:	mov	w1, #0x3                   	// #3
  403514:	bl	4016d8 <dup2@plt>
  403518:	cmp	w0, #0x0
  40351c:	cset	w8, ge  // ge = tcont
  403520:	tbnz	w8, #0, 4035b4 <safe_fork_full@plt+0x1ddc>
  403524:	mov	w8, #0x3                   	// #3
  403528:	str	w8, [sp, #204]
  40352c:	bl	401528 <__errno_location@plt>
  403530:	ldr	w8, [x0]
  403534:	str	w8, [sp, #200]
  403538:	str	wzr, [sp, #196]
  40353c:	ldr	w0, [sp, #196]
  403540:	bl	4014e8 <log_get_max_level_realm@plt>
  403544:	ldr	w8, [sp, #204]
  403548:	and	w8, w8, #0x7
  40354c:	cmp	w0, w8
  403550:	b.lt	403584 <safe_fork_full@plt+0x1dac>  // b.tstop
  403554:	ldr	w8, [sp, #196]
  403558:	ldr	w9, [sp, #204]
  40355c:	orr	w0, w9, w8, lsl #10
  403560:	ldr	w1, [sp, #200]
  403564:	ldr	x2, [sp, #88]
  403568:	mov	w3, #0xc7                  	// #199
  40356c:	ldr	x4, [sp, #80]
  403570:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  403574:	add	x5, x5, #0x2cc
  403578:	bl	4014f8 <log_internal_realm@plt>
  40357c:	str	w0, [sp, #32]
  403580:	b	403598 <safe_fork_full@plt+0x1dc0>
  403584:	ldr	w0, [sp, #200]
  403588:	bl	401508 <abs@plt>
  40358c:	mov	w8, wzr
  403590:	subs	w8, w8, w0, uxtb
  403594:	str	w8, [sp, #32]
  403598:	ldr	w8, [sp, #32]
  40359c:	str	w8, [sp, #192]
  4035a0:	ldr	w8, [sp, #192]
  4035a4:	stur	w8, [x29, #-4]
  4035a8:	mov	w8, #0x1                   	// #1
  4035ac:	stur	w8, [x29, #-120]
  4035b0:	b	403a74 <safe_fork_full@plt+0x229c>
  4035b4:	ldur	w0, [x29, #-36]
  4035b8:	bl	4016e8 <safe_close@plt>
  4035bc:	mov	w8, #0x3                   	// #3
  4035c0:	stur	w8, [x29, #-36]
  4035c4:	ldur	x8, [x29, #-56]
  4035c8:	ldur	x9, [x29, #-72]
  4035cc:	add	x10, x9, #0x1
  4035d0:	stur	x10, [x29, #-72]
  4035d4:	mov	x10, #0x8                   	// #8
  4035d8:	mul	x9, x10, x9
  4035dc:	add	x0, x8, x9
  4035e0:	ldur	x2, [x29, #-48]
  4035e4:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  4035e8:	add	x1, x1, #0x2e9
  4035ec:	bl	4016f8 <asprintf@plt>
  4035f0:	cmp	w0, #0x0
  4035f4:	cset	w11, ge  // ge = tcont
  4035f8:	tbnz	w11, #0, 403624 <safe_fork_full@plt+0x1e4c>
  4035fc:	mov	w8, wzr
  403600:	mov	w0, w8
  403604:	ldr	x1, [sp, #88]
  403608:	mov	w2, #0xce                  	// #206
  40360c:	ldr	x3, [sp, #80]
  403610:	bl	401578 <log_oom_internal@plt>
  403614:	stur	w0, [x29, #-4]
  403618:	mov	w8, #0x1                   	// #1
  40361c:	stur	w8, [x29, #-120]
  403620:	b	403a74 <safe_fork_full@plt+0x229c>
  403624:	ldur	x8, [x29, #-56]
  403628:	ldur	x9, [x29, #-72]
  40362c:	add	x10, x9, #0x1
  403630:	stur	x10, [x29, #-72]
  403634:	mov	x10, #0x8                   	// #8
  403638:	mul	x9, x10, x9
  40363c:	add	x0, x8, x9
  403640:	str	x0, [sp, #24]
  403644:	bl	401708 <getpid_cached@plt>
  403648:	ldr	x8, [sp, #24]
  40364c:	str	w0, [sp, #20]
  403650:	mov	x0, x8
  403654:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  403658:	add	x1, x1, #0x2f8
  40365c:	ldr	w2, [sp, #20]
  403660:	bl	4016f8 <asprintf@plt>
  403664:	cmp	w0, #0x0
  403668:	cset	w11, ge  // ge = tcont
  40366c:	tbnz	w11, #0, 403698 <safe_fork_full@plt+0x1ec0>
  403670:	mov	w8, wzr
  403674:	mov	w0, w8
  403678:	ldr	x1, [sp, #88]
  40367c:	mov	w2, #0xd1                  	// #209
  403680:	ldr	x3, [sp, #80]
  403684:	bl	401578 <log_oom_internal@plt>
  403688:	stur	w0, [x29, #-4]
  40368c:	mov	w8, #0x1                   	// #1
  403690:	stur	w8, [x29, #-120]
  403694:	b	403a74 <safe_fork_full@plt+0x229c>
  403698:	ldr	x8, [sp, #72]
  40369c:	ldr	x9, [x8]
  4036a0:	cbz	x9, 403910 <safe_fork_full@plt+0x2138>
  4036a4:	mov	x8, xzr
  4036a8:	str	x8, [sp, #184]
  4036ac:	ldr	x8, [sp, #72]
  4036b0:	ldr	x0, [x8]
  4036b4:	bl	401668 <strv_length@plt>
  4036b8:	str	x0, [sp, #176]
  4036bc:	ldr	x8, [sp, #176]
  4036c0:	cmp	x8, #0x1
  4036c4:	b.ne	4037a8 <safe_fork_full@plt+0x1fd0>  // b.any
  4036c8:	mov	x8, #0x1                   	// #1
  4036cc:	str	x8, [sp, #160]
  4036d0:	ldr	x8, [sp, #160]
  4036d4:	ldur	x9, [x29, #-48]
  4036d8:	cmp	x8, x9
  4036dc:	b.cs	4037a4 <safe_fork_full@plt+0x1fcc>  // b.hs, b.nlast
  4036e0:	ldr	x8, [sp, #72]
  4036e4:	ldr	x9, [x8]
  4036e8:	ldr	x1, [x9]
  4036ec:	mov	x0, x8
  4036f0:	bl	401568 <strv_extend@plt>
  4036f4:	stur	w0, [x29, #-100]
  4036f8:	ldur	w10, [x29, #-100]
  4036fc:	cmp	w10, #0x0
  403700:	cset	w10, ge  // ge = tcont
  403704:	tbnz	w10, #0, 403794 <safe_fork_full@plt+0x1fbc>
  403708:	mov	w8, #0x3                   	// #3
  40370c:	str	w8, [sp, #156]
  403710:	ldur	w8, [x29, #-100]
  403714:	str	w8, [sp, #152]
  403718:	str	wzr, [sp, #148]
  40371c:	ldr	w0, [sp, #148]
  403720:	bl	4014e8 <log_get_max_level_realm@plt>
  403724:	ldr	w8, [sp, #156]
  403728:	and	w8, w8, #0x7
  40372c:	cmp	w0, w8
  403730:	b.lt	403764 <safe_fork_full@plt+0x1f8c>  // b.tstop
  403734:	ldr	w8, [sp, #148]
  403738:	ldr	w9, [sp, #156]
  40373c:	orr	w0, w9, w8, lsl #10
  403740:	ldr	w1, [sp, #152]
  403744:	ldr	x2, [sp, #88]
  403748:	mov	w3, #0xdf                  	// #223
  40374c:	ldr	x4, [sp, #80]
  403750:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  403754:	add	x5, x5, #0x306
  403758:	bl	4014f8 <log_internal_realm@plt>
  40375c:	str	w0, [sp, #16]
  403760:	b	403778 <safe_fork_full@plt+0x1fa0>
  403764:	ldr	w0, [sp, #152]
  403768:	bl	401508 <abs@plt>
  40376c:	mov	w8, wzr
  403770:	subs	w8, w8, w0, uxtb
  403774:	str	w8, [sp, #16]
  403778:	ldr	w8, [sp, #16]
  40377c:	str	w8, [sp, #144]
  403780:	ldr	w8, [sp, #144]
  403784:	stur	w8, [x29, #-4]
  403788:	mov	w8, #0x1                   	// #1
  40378c:	stur	w8, [x29, #-120]
  403790:	b	4038f0 <safe_fork_full@plt+0x2118>
  403794:	ldr	x8, [sp, #160]
  403798:	add	x8, x8, #0x1
  40379c:	str	x8, [sp, #160]
  4037a0:	b	4036d0 <safe_fork_full@plt+0x1ef8>
  4037a4:	b	403834 <safe_fork_full@plt+0x205c>
  4037a8:	ldr	x8, [sp, #176]
  4037ac:	ldur	x9, [x29, #-48]
  4037b0:	cmp	x8, x9
  4037b4:	b.eq	403834 <safe_fork_full@plt+0x205c>  // b.none
  4037b8:	mov	w8, #0x4                   	// #4
  4037bc:	str	w8, [sp, #140]
  4037c0:	str	wzr, [sp, #136]
  4037c4:	str	wzr, [sp, #132]
  4037c8:	ldr	w0, [sp, #132]
  4037cc:	bl	4014e8 <log_get_max_level_realm@plt>
  4037d0:	ldr	w8, [sp, #140]
  4037d4:	and	w8, w8, #0x7
  4037d8:	cmp	w0, w8
  4037dc:	b.lt	403818 <safe_fork_full@plt+0x2040>  // b.tstop
  4037e0:	ldr	w8, [sp, #132]
  4037e4:	ldr	w9, [sp, #140]
  4037e8:	orr	w0, w9, w8, lsl #10
  4037ec:	ldr	w1, [sp, #136]
  4037f0:	ldr	x6, [sp, #176]
  4037f4:	ldur	x7, [x29, #-48]
  4037f8:	ldr	x2, [sp, #88]
  4037fc:	mov	w3, #0xe2                  	// #226
  403800:	ldr	x4, [sp, #80]
  403804:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  403808:	add	x5, x5, #0x320
  40380c:	bl	4014f8 <log_internal_realm@plt>
  403810:	str	w0, [sp, #12]
  403814:	b	40382c <safe_fork_full@plt+0x2054>
  403818:	ldr	w0, [sp, #136]
  40381c:	bl	401508 <abs@plt>
  403820:	mov	w8, wzr
  403824:	subs	w8, w8, w0, uxtb
  403828:	str	w8, [sp, #12]
  40382c:	ldr	w8, [sp, #12]
  403830:	str	w8, [sp, #128]
  403834:	ldr	x8, [sp, #72]
  403838:	ldr	x0, [x8]
  40383c:	adrp	x1, 404000 <safe_fork_full@plt+0x2828>
  403840:	add	x1, x1, #0xb48
  403844:	bl	40445c <safe_fork_full@plt+0x2c84>
  403848:	str	x0, [sp, #184]
  40384c:	ldr	x8, [sp, #184]
  403850:	cbnz	x8, 40387c <safe_fork_full@plt+0x20a4>
  403854:	mov	w8, wzr
  403858:	mov	w0, w8
  40385c:	ldr	x1, [sp, #88]
  403860:	mov	w2, #0xe6                  	// #230
  403864:	ldr	x3, [sp, #80]
  403868:	bl	401578 <log_oom_internal@plt>
  40386c:	stur	w0, [x29, #-4]
  403870:	mov	w8, #0x1                   	// #1
  403874:	stur	w8, [x29, #-120]
  403878:	b	4038f0 <safe_fork_full@plt+0x2118>
  40387c:	ldr	x1, [sp, #184]
  403880:	adrp	x0, 405000 <safe_fork_full@plt+0x3828>
  403884:	add	x0, x0, #0x363
  403888:	mov	x8, xzr
  40388c:	mov	x2, x8
  403890:	bl	4016a8 <strjoin_real@plt>
  403894:	str	x0, [sp, #168]
  403898:	ldr	x8, [sp, #168]
  40389c:	cbnz	x8, 4038c8 <safe_fork_full@plt+0x20f0>
  4038a0:	mov	w8, wzr
  4038a4:	mov	w0, w8
  4038a8:	ldr	x1, [sp, #88]
  4038ac:	mov	w2, #0xea                  	// #234
  4038b0:	ldr	x3, [sp, #80]
  4038b4:	bl	401578 <log_oom_internal@plt>
  4038b8:	stur	w0, [x29, #-4]
  4038bc:	mov	w8, #0x1                   	// #1
  4038c0:	stur	w8, [x29, #-120]
  4038c4:	b	4038f0 <safe_fork_full@plt+0x2118>
  4038c8:	ldr	x8, [sp, #168]
  4038cc:	ldur	x9, [x29, #-56]
  4038d0:	ldur	x10, [x29, #-72]
  4038d4:	add	x11, x10, #0x1
  4038d8:	stur	x11, [x29, #-72]
  4038dc:	mov	x11, #0x8                   	// #8
  4038e0:	mul	x10, x11, x10
  4038e4:	add	x9, x9, x10
  4038e8:	str	x8, [x9]
  4038ec:	stur	wzr, [x29, #-120]
  4038f0:	add	x0, sp, #0xb8
  4038f4:	bl	403be0 <safe_fork_full@plt+0x2408>
  4038f8:	ldur	w8, [x29, #-120]
  4038fc:	cmp	w8, #0x0
  403900:	cset	w8, eq  // eq = none
  403904:	eor	w8, w8, #0x1
  403908:	tbnz	w8, #0, 403a74 <safe_fork_full@plt+0x229c>
  40390c:	b	403910 <safe_fork_full@plt+0x2138>
  403910:	ldur	x0, [x29, #-24]
  403914:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  403918:	add	x1, x1, #0x1c4
  40391c:	bl	40445c <safe_fork_full@plt+0x2c84>
  403920:	stur	x0, [x29, #-64]
  403924:	ldur	x8, [x29, #-64]
  403928:	cbnz	x8, 403954 <safe_fork_full@plt+0x217c>
  40392c:	mov	w8, wzr
  403930:	mov	w0, w8
  403934:	ldr	x1, [sp, #88]
  403938:	mov	w2, #0xf2                  	// #242
  40393c:	ldr	x3, [sp, #80]
  403940:	bl	401578 <log_oom_internal@plt>
  403944:	stur	w0, [x29, #-4]
  403948:	mov	w8, #0x1                   	// #1
  40394c:	stur	w8, [x29, #-120]
  403950:	b	403a74 <safe_fork_full@plt+0x229c>
  403954:	mov	w8, #0x6                   	// #6
  403958:	str	w8, [sp, #124]
  40395c:	str	wzr, [sp, #120]
  403960:	str	wzr, [sp, #116]
  403964:	ldr	w0, [sp, #116]
  403968:	bl	4014e8 <log_get_max_level_realm@plt>
  40396c:	ldr	w8, [sp, #124]
  403970:	and	w8, w8, #0x7
  403974:	cmp	w0, w8
  403978:	b.lt	4039b4 <safe_fork_full@plt+0x21dc>  // b.tstop
  40397c:	ldr	w8, [sp, #116]
  403980:	ldr	w9, [sp, #124]
  403984:	orr	w0, w9, w8, lsl #10
  403988:	ldr	w1, [sp, #120]
  40398c:	ldur	x6, [x29, #-16]
  403990:	ldur	x7, [x29, #-64]
  403994:	ldr	x2, [sp, #88]
  403998:	mov	w3, #0xf4                  	// #244
  40399c:	ldr	x4, [sp, #80]
  4039a0:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  4039a4:	add	x5, x5, #0x373
  4039a8:	bl	4014f8 <log_internal_realm@plt>
  4039ac:	str	w0, [sp, #8]
  4039b0:	b	4039c8 <safe_fork_full@plt+0x21f0>
  4039b4:	ldr	w0, [sp, #120]
  4039b8:	bl	401508 <abs@plt>
  4039bc:	mov	w8, wzr
  4039c0:	subs	w8, w8, w0, uxtb
  4039c4:	str	w8, [sp, #8]
  4039c8:	ldr	w8, [sp, #8]
  4039cc:	str	w8, [sp, #112]
  4039d0:	ldur	x0, [x29, #-16]
  4039d4:	ldur	x1, [x29, #-24]
  4039d8:	ldur	x2, [x29, #-56]
  4039dc:	bl	401718 <execvpe@plt>
  4039e0:	mov	w8, #0x3                   	// #3
  4039e4:	str	w8, [sp, #108]
  4039e8:	bl	401528 <__errno_location@plt>
  4039ec:	ldr	w8, [x0]
  4039f0:	str	w8, [sp, #104]
  4039f4:	str	wzr, [sp, #100]
  4039f8:	ldr	w0, [sp, #100]
  4039fc:	bl	4014e8 <log_get_max_level_realm@plt>
  403a00:	ldr	w8, [sp, #108]
  403a04:	and	w8, w8, #0x7
  403a08:	cmp	w0, w8
  403a0c:	b.lt	403a48 <safe_fork_full@plt+0x2270>  // b.tstop
  403a10:	ldr	w8, [sp, #100]
  403a14:	ldr	w9, [sp, #108]
  403a18:	orr	w0, w9, w8, lsl #10
  403a1c:	ldr	w1, [sp, #104]
  403a20:	ldur	x6, [x29, #-16]
  403a24:	ldur	x7, [x29, #-64]
  403a28:	ldr	x2, [sp, #88]
  403a2c:	mov	w3, #0xf7                  	// #247
  403a30:	ldr	x4, [sp, #80]
  403a34:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  403a38:	add	x5, x5, #0x383
  403a3c:	bl	4014f8 <log_internal_realm@plt>
  403a40:	str	w0, [sp, #4]
  403a44:	b	403a5c <safe_fork_full@plt+0x2284>
  403a48:	ldr	w0, [sp, #104]
  403a4c:	bl	401508 <abs@plt>
  403a50:	mov	w8, wzr
  403a54:	subs	w8, w8, w0, uxtb
  403a58:	str	w8, [sp, #4]
  403a5c:	ldr	w8, [sp, #4]
  403a60:	str	w8, [sp, #96]
  403a64:	ldr	w8, [sp, #96]
  403a68:	stur	w8, [x29, #-4]
  403a6c:	mov	w8, #0x1                   	// #1
  403a70:	stur	w8, [x29, #-120]
  403a74:	sub	x0, x29, #0x40
  403a78:	bl	403be0 <safe_fork_full@plt+0x2408>
  403a7c:	sub	x0, x29, #0x38
  403a80:	bl	403b78 <safe_fork_full@plt+0x23a0>
  403a84:	ldur	w0, [x29, #-4]
  403a88:	ldr	x28, [sp, #448]
  403a8c:	ldp	x29, x30, [sp, #432]
  403a90:	add	sp, sp, #0x1d0
  403a94:	ret
  403a98:	sub	sp, sp, #0x50
  403a9c:	stp	x29, x30, [sp, #64]
  403aa0:	add	x29, sp, #0x40
  403aa4:	mov	x8, xzr
  403aa8:	adrp	x0, 404000 <safe_fork_full@plt+0x2828>
  403aac:	add	x0, x0, #0xc21
  403ab0:	adrp	x1, 404000 <safe_fork_full@plt+0x2828>
  403ab4:	add	x1, x1, #0xc39
  403ab8:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  403abc:	add	x9, x9, #0x9d0
  403ac0:	add	x9, x9, #0x3
  403ac4:	sub	x2, x29, #0x10
  403ac8:	stur	x8, [x29, #-16]
  403acc:	str	x9, [sp, #32]
  403ad0:	bl	401728 <terminal_urlify_man@plt>
  403ad4:	stur	w0, [x29, #-20]
  403ad8:	ldur	w10, [x29, #-20]
  403adc:	cmp	w10, #0x0
  403ae0:	cset	w10, ge  // ge = tcont
  403ae4:	tbnz	w10, #0, 403b14 <safe_fork_full@plt+0x233c>
  403ae8:	mov	w8, wzr
  403aec:	mov	w0, w8
  403af0:	ldr	x1, [sp, #32]
  403af4:	mov	w2, #0x14d                 	// #333
  403af8:	adrp	x3, 404000 <safe_fork_full@plt+0x2828>
  403afc:	add	x3, x3, #0xa58
  403b00:	bl	401578 <log_oom_internal@plt>
  403b04:	stur	w0, [x29, #-4]
  403b08:	mov	w8, #0x1                   	// #1
  403b0c:	stur	w8, [x29, #-24]
  403b10:	b	403b60 <safe_fork_full@plt+0x2388>
  403b14:	adrp	x8, 420000 <safe_fork_full@plt+0x1e828>
  403b18:	add	x8, x8, #0x50
  403b1c:	ldr	x1, [x8]
  403b20:	str	x1, [sp, #24]
  403b24:	bl	403c48 <safe_fork_full@plt+0x2470>
  403b28:	str	x0, [sp, #16]
  403b2c:	bl	403c8c <safe_fork_full@plt+0x24b4>
  403b30:	ldur	x4, [x29, #-16]
  403b34:	adrp	x8, 404000 <safe_fork_full@plt+0x2828>
  403b38:	add	x8, x8, #0xc3b
  403b3c:	str	x0, [sp, #8]
  403b40:	mov	x0, x8
  403b44:	ldr	x1, [sp, #24]
  403b48:	ldr	x2, [sp, #16]
  403b4c:	ldr	x3, [sp, #8]
  403b50:	bl	401738 <printf@plt>
  403b54:	stur	wzr, [x29, #-4]
  403b58:	mov	w9, #0x1                   	// #1
  403b5c:	stur	w9, [x29, #-24]
  403b60:	sub	x0, x29, #0x10
  403b64:	bl	403be0 <safe_fork_full@plt+0x2408>
  403b68:	ldur	w0, [x29, #-4]
  403b6c:	ldp	x29, x30, [sp, #64]
  403b70:	add	sp, sp, #0x50
  403b74:	ret
  403b78:	sub	sp, sp, #0x20
  403b7c:	stp	x29, x30, [sp, #16]
  403b80:	add	x29, sp, #0x10
  403b84:	str	x0, [sp, #8]
  403b88:	ldr	x8, [sp, #8]
  403b8c:	ldr	x8, [x8]
  403b90:	cbz	x8, 403ba0 <safe_fork_full@plt+0x23c8>
  403b94:	ldr	x8, [sp, #8]
  403b98:	ldr	x0, [x8]
  403b9c:	bl	401748 <strv_free@plt>
  403ba0:	ldp	x29, x30, [sp, #16]
  403ba4:	add	sp, sp, #0x20
  403ba8:	ret
  403bac:	sub	sp, sp, #0x20
  403bb0:	stp	x29, x30, [sp, #16]
  403bb4:	add	x29, sp, #0x10
  403bb8:	mov	w8, wzr
  403bbc:	str	x0, [sp, #8]
  403bc0:	str	x1, [sp]
  403bc4:	ldr	x0, [sp, #8]
  403bc8:	ldr	x1, [sp]
  403bcc:	mov	w2, w8
  403bd0:	bl	401758 <strv_split_full@plt>
  403bd4:	ldp	x29, x30, [sp, #16]
  403bd8:	add	sp, sp, #0x20
  403bdc:	ret
  403be0:	sub	sp, sp, #0x20
  403be4:	stp	x29, x30, [sp, #16]
  403be8:	add	x29, sp, #0x10
  403bec:	str	x0, [sp, #8]
  403bf0:	ldr	x8, [sp, #8]
  403bf4:	ldr	x0, [x8]
  403bf8:	bl	401768 <free@plt>
  403bfc:	ldp	x29, x30, [sp, #16]
  403c00:	add	sp, sp, #0x20
  403c04:	ret
  403c08:	sub	sp, sp, #0x10
  403c0c:	str	x0, [sp, #8]
  403c10:	ldr	x8, [sp, #8]
  403c14:	mov	w9, #0x1                   	// #1
  403c18:	str	w9, [sp, #4]
  403c1c:	cbz	x8, 403c38 <safe_fork_full@plt+0x2460>
  403c20:	ldr	x8, [sp, #8]
  403c24:	ldr	x8, [x8]
  403c28:	cmp	x8, #0x0
  403c2c:	cset	w9, ne  // ne = any
  403c30:	eor	w9, w9, #0x1
  403c34:	str	w9, [sp, #4]
  403c38:	ldr	w8, [sp, #4]
  403c3c:	and	w0, w8, #0x1
  403c40:	add	sp, sp, #0x10
  403c44:	ret
  403c48:	sub	sp, sp, #0x20
  403c4c:	stp	x29, x30, [sp, #16]
  403c50:	add	x29, sp, #0x10
  403c54:	adrp	x8, 404000 <safe_fork_full@plt+0x2828>
  403c58:	add	x8, x8, #0xf4a
  403c5c:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  403c60:	add	x9, x9, #0xb72
  403c64:	str	x8, [sp, #8]
  403c68:	str	x9, [sp]
  403c6c:	bl	401778 <colors_enabled@plt>
  403c70:	tst	w0, #0x1
  403c74:	ldr	x8, [sp, #8]
  403c78:	ldr	x9, [sp]
  403c7c:	csel	x0, x8, x9, ne  // ne = any
  403c80:	ldp	x29, x30, [sp, #16]
  403c84:	add	sp, sp, #0x20
  403c88:	ret
  403c8c:	sub	sp, sp, #0x20
  403c90:	stp	x29, x30, [sp, #16]
  403c94:	add	x29, sp, #0x10
  403c98:	adrp	x8, 404000 <safe_fork_full@plt+0x2828>
  403c9c:	add	x8, x8, #0xf54
  403ca0:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  403ca4:	add	x9, x9, #0xb72
  403ca8:	str	x8, [sp, #8]
  403cac:	str	x9, [sp]
  403cb0:	bl	401778 <colors_enabled@plt>
  403cb4:	tst	w0, #0x1
  403cb8:	ldr	x8, [sp, #8]
  403cbc:	ldr	x9, [sp]
  403cc0:	csel	x0, x8, x9, ne  // ne = any
  403cc4:	ldp	x29, x30, [sp, #16]
  403cc8:	add	sp, sp, #0x20
  403ccc:	ret
  403cd0:	sub	sp, sp, #0xd0
  403cd4:	stp	x29, x30, [sp, #192]
  403cd8:	add	x29, sp, #0xc0
  403cdc:	adrp	x8, 404000 <safe_fork_full@plt+0x2828>
  403ce0:	add	x8, x8, #0x9d0
  403ce4:	add	x8, x8, #0x3
  403ce8:	stur	w0, [x29, #-4]
  403cec:	str	x8, [sp, #8]
  403cf0:	bl	401528 <__errno_location@plt>
  403cf4:	ldr	w9, [x0]
  403cf8:	stur	w9, [x29, #-8]
  403cfc:	add	x2, sp, #0x38
  403d00:	mov	w8, wzr
  403d04:	str	wzr, [sp, #72]
  403d08:	mov	w0, w8
  403d0c:	mov	w1, w8
  403d10:	mov	w3, #0x5                   	// #5
  403d14:	bl	401788 <waitid@plt>
  403d18:	str	w0, [sp, #52]
  403d1c:	ldr	w8, [sp, #52]
  403d20:	cmp	w8, #0x0
  403d24:	cset	w8, ge  // ge = tcont
  403d28:	tbnz	w8, #0, 403dc8 <safe_fork_full@plt+0x25f0>
  403d2c:	bl	401528 <__errno_location@plt>
  403d30:	ldr	w8, [x0]
  403d34:	cmp	w8, #0xa
  403d38:	b.eq	403dbc <safe_fork_full@plt+0x25e4>  // b.none
  403d3c:	mov	w8, #0x3                   	// #3
  403d40:	str	w8, [sp, #48]
  403d44:	bl	401528 <__errno_location@plt>
  403d48:	ldr	w8, [x0]
  403d4c:	str	w8, [sp, #44]
  403d50:	str	wzr, [sp, #40]
  403d54:	ldr	w0, [sp, #40]
  403d58:	bl	4014e8 <log_get_max_level_realm@plt>
  403d5c:	ldr	w8, [sp, #48]
  403d60:	and	w8, w8, #0x7
  403d64:	cmp	w0, w8
  403d68:	b.lt	403da0 <safe_fork_full@plt+0x25c8>  // b.tstop
  403d6c:	ldr	w8, [sp, #40]
  403d70:	ldr	w9, [sp, #48]
  403d74:	orr	w0, w9, w8, lsl #10
  403d78:	ldr	w1, [sp, #44]
  403d7c:	ldr	x2, [sp, #8]
  403d80:	mov	w3, #0x131                 	// #305
  403d84:	adrp	x4, 404000 <safe_fork_full@plt+0x2828>
  403d88:	add	x4, x4, #0xf94
  403d8c:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  403d90:	add	x5, x5, #0xfa0
  403d94:	bl	4014f8 <log_internal_realm@plt>
  403d98:	str	w0, [sp, #4]
  403d9c:	b	403db4 <safe_fork_full@plt+0x25dc>
  403da0:	ldr	w0, [sp, #44]
  403da4:	bl	401508 <abs@plt>
  403da8:	mov	w8, wzr
  403dac:	subs	w8, w8, w0, uxtb
  403db0:	str	w8, [sp, #4]
  403db4:	ldr	w8, [sp, #4]
  403db8:	str	w8, [sp, #36]
  403dbc:	mov	w8, #0x1                   	// #1
  403dc0:	str	w8, [sp, #32]
  403dc4:	b	403e60 <safe_fork_full@plt+0x2688>
  403dc8:	ldr	w8, [sp, #72]
  403dcc:	cbnz	w8, 403ddc <safe_fork_full@plt+0x2604>
  403dd0:	mov	w8, #0x1                   	// #1
  403dd4:	str	w8, [sp, #32]
  403dd8:	b	403e60 <safe_fork_full@plt+0x2688>
  403ddc:	mov	w8, #0x6                   	// #6
  403de0:	str	w8, [sp, #28]
  403de4:	str	wzr, [sp, #24]
  403de8:	str	wzr, [sp, #20]
  403dec:	ldr	w0, [sp, #20]
  403df0:	bl	4014e8 <log_get_max_level_realm@plt>
  403df4:	ldr	w8, [sp, #28]
  403df8:	and	w8, w8, #0x7
  403dfc:	cmp	w0, w8
  403e00:	b.lt	403e40 <safe_fork_full@plt+0x2668>  // b.tstop
  403e04:	ldr	w8, [sp, #20]
  403e08:	ldr	w9, [sp, #28]
  403e0c:	orr	w0, w9, w8, lsl #10
  403e10:	ldr	w1, [sp, #24]
  403e14:	ldr	w6, [sp, #72]
  403e18:	ldr	w7, [sp, #80]
  403e1c:	ldr	x2, [sp, #8]
  403e20:	mov	w3, #0x137                 	// #311
  403e24:	adrp	x4, 404000 <safe_fork_full@plt+0x2828>
  403e28:	add	x4, x4, #0xf94
  403e2c:	adrp	x5, 404000 <safe_fork_full@plt+0x2828>
  403e30:	add	x5, x5, #0xfbc
  403e34:	bl	4014f8 <log_internal_realm@plt>
  403e38:	str	w0, [sp]
  403e3c:	b	403e54 <safe_fork_full@plt+0x267c>
  403e40:	ldr	w0, [sp, #24]
  403e44:	bl	401508 <abs@plt>
  403e48:	mov	w8, wzr
  403e4c:	subs	w8, w8, w0, uxtb
  403e50:	str	w8, [sp]
  403e54:	ldr	w8, [sp]
  403e58:	str	w8, [sp, #16]
  403e5c:	b	403cfc <safe_fork_full@plt+0x2524>
  403e60:	sub	x0, x29, #0x8
  403e64:	bl	403e74 <safe_fork_full@plt+0x269c>
  403e68:	ldp	x29, x30, [sp, #192]
  403e6c:	add	sp, sp, #0xd0
  403e70:	ret
  403e74:	sub	sp, sp, #0x20
  403e78:	stp	x29, x30, [sp, #16]
  403e7c:	add	x29, sp, #0x10
  403e80:	str	x0, [sp, #8]
  403e84:	ldr	x8, [sp, #8]
  403e88:	ldr	w9, [x8]
  403e8c:	cmp	w9, #0x0
  403e90:	cset	w9, ge  // ge = tcont
  403e94:	tbnz	w9, #0, 403e9c <safe_fork_full@plt+0x26c4>
  403e98:	b	403eb4 <safe_fork_full@plt+0x26dc>
  403e9c:	ldr	x8, [sp, #8]
  403ea0:	ldr	w9, [x8]
  403ea4:	str	w9, [sp, #4]
  403ea8:	bl	401528 <__errno_location@plt>
  403eac:	ldr	w9, [sp, #4]
  403eb0:	str	w9, [x0]
  403eb4:	ldp	x29, x30, [sp, #16]
  403eb8:	add	sp, sp, #0x20
  403ebc:	ret
  403ec0:	sub	sp, sp, #0x40
  403ec4:	stp	x29, x30, [sp, #48]
  403ec8:	add	x29, sp, #0x30
  403ecc:	stur	x0, [x29, #-16]
  403ed0:	str	x1, [sp, #24]
  403ed4:	ldur	x0, [x29, #-16]
  403ed8:	ldr	x1, [sp, #24]
  403edc:	bl	404114 <safe_fork_full@plt+0x293c>
  403ee0:	tbnz	w0, #0, 403ee8 <safe_fork_full@plt+0x2710>
  403ee4:	b	403ef4 <safe_fork_full@plt+0x271c>
  403ee8:	mov	x8, xzr
  403eec:	stur	x8, [x29, #-8]
  403ef0:	b	403f2c <safe_fork_full@plt+0x2754>
  403ef4:	ldur	x8, [x29, #-16]
  403ef8:	ldr	x9, [sp, #24]
  403efc:	mul	x8, x8, x9
  403f00:	str	x8, [sp, #16]
  403f04:	cbz	x8, 403f14 <safe_fork_full@plt+0x273c>
  403f08:	ldr	x8, [sp, #16]
  403f0c:	str	x8, [sp, #8]
  403f10:	b	403f1c <safe_fork_full@plt+0x2744>
  403f14:	mov	x8, #0x1                   	// #1
  403f18:	str	x8, [sp, #8]
  403f1c:	ldr	x8, [sp, #8]
  403f20:	mov	x0, x8
  403f24:	bl	401798 <malloc@plt>
  403f28:	stur	x0, [x29, #-8]
  403f2c:	ldur	x0, [x29, #-8]
  403f30:	ldp	x29, x30, [sp, #48]
  403f34:	add	sp, sp, #0x40
  403f38:	ret
  403f3c:	sub	sp, sp, #0x20
  403f40:	str	x0, [sp, #24]
  403f44:	ldr	x8, [sp, #24]
  403f48:	str	x8, [sp, #16]
  403f4c:	cbz	x8, 403f5c <safe_fork_full@plt+0x2784>
  403f50:	ldr	x8, [sp, #16]
  403f54:	str	x8, [sp, #8]
  403f58:	b	403f68 <safe_fork_full@plt+0x2790>
  403f5c:	adrp	x8, 405000 <safe_fork_full@plt+0x3828>
  403f60:	add	x8, x8, #0x10b
  403f64:	str	x8, [sp, #8]
  403f68:	ldr	x8, [sp, #8]
  403f6c:	mov	x0, x8
  403f70:	add	sp, sp, #0x20
  403f74:	ret
  403f78:	sub	sp, sp, #0x50
  403f7c:	stp	x29, x30, [sp, #64]
  403f80:	add	x29, sp, #0x40
  403f84:	mov	w8, #0x1                   	// #1
  403f88:	adrp	x9, 404000 <safe_fork_full@plt+0x2828>
  403f8c:	add	x9, x9, #0x9d0
  403f90:	add	x9, x9, #0x3
  403f94:	stur	w0, [x29, #-8]
  403f98:	stur	w1, [x29, #-12]
  403f9c:	str	w8, [sp, #32]
  403fa0:	ldur	w8, [x29, #-12]
  403fa4:	str	w8, [sp, #40]
  403fa8:	str	x9, [sp, #8]
  403fac:	ldur	w8, [x29, #-8]
  403fb0:	cmp	w8, #0x0
  403fb4:	cset	w8, ge  // ge = tcont
  403fb8:	mov	w9, #0x1                   	// #1
  403fbc:	eor	w8, w8, #0x1
  403fc0:	eor	w8, w8, w9
  403fc4:	eor	w8, w8, w9
  403fc8:	and	w8, w8, #0x1
  403fcc:	mov	w0, w8
  403fd0:	sxtw	x10, w0
  403fd4:	cbz	x10, 403ffc <safe_fork_full@plt+0x2824>
  403fd8:	mov	w8, wzr
  403fdc:	mov	w0, w8
  403fe0:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  403fe4:	add	x1, x1, #0x10f
  403fe8:	ldr	x2, [sp, #8]
  403fec:	mov	w3, #0x28                  	// #40
  403ff0:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  403ff4:	add	x4, x4, #0x11d
  403ff8:	bl	401538 <log_assert_failed_realm@plt>
  403ffc:	ldur	w8, [x29, #-12]
  404000:	cmp	w8, #0x0
  404004:	cset	w8, ge  // ge = tcont
  404008:	mov	w9, #0x1                   	// #1
  40400c:	eor	w8, w8, #0x1
  404010:	eor	w8, w8, w9
  404014:	eor	w8, w8, w9
  404018:	and	w8, w8, #0x1
  40401c:	mov	w0, w8
  404020:	sxtw	x10, w0
  404024:	cbz	x10, 40404c <safe_fork_full@plt+0x2874>
  404028:	mov	w8, wzr
  40402c:	mov	w0, w8
  404030:	adrp	x1, 405000 <safe_fork_full@plt+0x3828>
  404034:	add	x1, x1, #0x135
  404038:	ldr	x2, [sp, #8]
  40403c:	mov	w3, #0x29                  	// #41
  404040:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  404044:	add	x4, x4, #0x11d
  404048:	bl	401538 <log_assert_failed_realm@plt>
  40404c:	ldur	w0, [x29, #-8]
  404050:	ldur	w2, [x29, #-12]
  404054:	mov	w1, #0x1                   	// #1
  404058:	add	x3, sp, #0x20
  40405c:	bl	4017a8 <epoll_ctl@plt>
  404060:	cmp	w0, #0x0
  404064:	cset	w8, ge  // ge = tcont
  404068:	tbnz	w8, #0, 404100 <safe_fork_full@plt+0x2928>
  40406c:	mov	w8, #0x3                   	// #3
  404070:	str	w8, [sp, #28]
  404074:	bl	401528 <__errno_location@plt>
  404078:	ldr	w8, [x0]
  40407c:	str	w8, [sp, #24]
  404080:	str	wzr, [sp, #20]
  404084:	ldr	w0, [sp, #20]
  404088:	bl	4014e8 <log_get_max_level_realm@plt>
  40408c:	ldr	w8, [sp, #28]
  404090:	and	w8, w8, #0x7
  404094:	cmp	w0, w8
  404098:	b.lt	4040d8 <safe_fork_full@plt+0x2900>  // b.tstop
  40409c:	ldr	w8, [sp, #20]
  4040a0:	ldr	w9, [sp, #28]
  4040a4:	orr	w0, w9, w8, lsl #10
  4040a8:	ldr	w1, [sp, #24]
  4040ac:	ldur	w6, [x29, #-8]
  4040b0:	ldur	w7, [x29, #-12]
  4040b4:	ldr	x2, [sp, #8]
  4040b8:	mov	w3, #0x2c                  	// #44
  4040bc:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  4040c0:	add	x4, x4, #0x13d
  4040c4:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  4040c8:	add	x5, x5, #0x147
  4040cc:	bl	4014f8 <log_internal_realm@plt>
  4040d0:	str	w0, [sp, #4]
  4040d4:	b	4040ec <safe_fork_full@plt+0x2914>
  4040d8:	ldr	w0, [sp, #24]
  4040dc:	bl	401508 <abs@plt>
  4040e0:	mov	w8, wzr
  4040e4:	subs	w8, w8, w0, uxtb
  4040e8:	str	w8, [sp, #4]
  4040ec:	ldr	w8, [sp, #4]
  4040f0:	str	w8, [sp, #16]
  4040f4:	ldr	w8, [sp, #16]
  4040f8:	stur	w8, [x29, #-4]
  4040fc:	b	404104 <safe_fork_full@plt+0x292c>
  404100:	stur	wzr, [x29, #-4]
  404104:	ldur	w0, [x29, #-4]
  404108:	ldp	x29, x30, [sp, #64]
  40410c:	add	sp, sp, #0x50
  404110:	ret
  404114:	sub	sp, sp, #0x20
  404118:	str	x0, [sp, #24]
  40411c:	str	x1, [sp, #16]
  404120:	ldr	x8, [sp, #16]
  404124:	mov	w9, #0x0                   	// #0
  404128:	str	w9, [sp, #12]
  40412c:	cbz	x8, 40414c <safe_fork_full@plt+0x2974>
  404130:	ldr	x8, [sp, #24]
  404134:	ldr	x9, [sp, #16]
  404138:	mov	x10, #0xffffffffffffffff    	// #-1
  40413c:	udiv	x9, x10, x9
  404140:	cmp	x8, x9
  404144:	cset	w11, hi  // hi = pmore
  404148:	str	w11, [sp, #12]
  40414c:	ldr	w8, [sp, #12]
  404150:	mov	w9, #0x1                   	// #1
  404154:	eor	w8, w8, #0x1
  404158:	eor	w8, w8, w9
  40415c:	and	w8, w8, #0x1
  404160:	mov	w0, w8
  404164:	sxtw	x10, w0
  404168:	cmp	x10, #0x0
  40416c:	cset	w8, ne  // ne = any
  404170:	and	w0, w8, #0x1
  404174:	add	sp, sp, #0x20
  404178:	ret
  40417c:	sub	sp, sp, #0x20
  404180:	stp	x29, x30, [sp, #16]
  404184:	add	x29, sp, #0x10
  404188:	str	x0, [sp, #8]
  40418c:	ldr	x8, [sp, #8]
  404190:	ldr	w0, [x8]
  404194:	bl	4016e8 <safe_close@plt>
  404198:	ldp	x29, x30, [sp, #16]
  40419c:	add	sp, sp, #0x20
  4041a0:	ret
  4041a4:	sub	sp, sp, #0x20
  4041a8:	stp	x29, x30, [sp, #16]
  4041ac:	add	x29, sp, #0x10
  4041b0:	stur	w0, [x29, #-4]
  4041b4:	ldur	w0, [x29, #-4]
  4041b8:	bl	4043dc <safe_fork_full@plt+0x2c04>
  4041bc:	mov	w8, #0x1                   	// #1
  4041c0:	str	w8, [sp, #4]
  4041c4:	tbnz	w0, #0, 404230 <safe_fork_full@plt+0x2a58>
  4041c8:	mov	w8, #0x0                   	// #0
  4041cc:	sturb	w8, [x29, #-5]
  4041d0:	ldur	w0, [x29, #-4]
  4041d4:	bl	401508 <abs@plt>
  4041d8:	cmp	w0, #0x4
  4041dc:	str	w0, [sp]
  4041e0:	b.eq	404210 <safe_fork_full@plt+0x2a38>  // b.none
  4041e4:	b	4041e8 <safe_fork_full@plt+0x2a10>
  4041e8:	ldr	w8, [sp]
  4041ec:	cmp	w8, #0xb
  4041f0:	b.eq	404210 <safe_fork_full@plt+0x2a38>  // b.none
  4041f4:	b	4041f8 <safe_fork_full@plt+0x2a20>
  4041f8:	ldr	w8, [sp]
  4041fc:	cmp	w8, #0x5f
  404200:	cset	w9, eq  // eq = none
  404204:	eor	w9, w9, #0x1
  404208:	tbnz	w9, #0, 40421c <safe_fork_full@plt+0x2a44>
  40420c:	b	404210 <safe_fork_full@plt+0x2a38>
  404210:	mov	w8, #0x1                   	// #1
  404214:	sturb	w8, [x29, #-5]
  404218:	b	40421c <safe_fork_full@plt+0x2a44>
  40421c:	ldurb	w8, [x29, #-5]
  404220:	and	w8, w8, #0x1
  404224:	sturb	w8, [x29, #-6]
  404228:	ldurb	w8, [x29, #-6]
  40422c:	str	w8, [sp, #4]
  404230:	ldr	w8, [sp, #4]
  404234:	and	w0, w8, #0x1
  404238:	ldp	x29, x30, [sp, #16]
  40423c:	add	sp, sp, #0x20
  404240:	ret
  404244:	sub	sp, sp, #0x80
  404248:	stp	x29, x30, [sp, #112]
  40424c:	add	x29, sp, #0x70
  404250:	mov	x8, xzr
  404254:	adrp	x9, 405000 <safe_fork_full@plt+0x3828>
  404258:	add	x9, x9, #0x1c4
  40425c:	adrp	x10, 404000 <safe_fork_full@plt+0x2828>
  404260:	add	x10, x10, #0x9d0
  404264:	add	x10, x10, #0x3
  404268:	stur	x0, [x29, #-16]
  40426c:	stur	x1, [x29, #-24]
  404270:	stur	x2, [x29, #-32]
  404274:	stur	w3, [x29, #-36]
  404278:	stur	x8, [x29, #-48]
  40427c:	ldur	x0, [x29, #-24]
  404280:	mov	x1, x9
  404284:	str	x10, [sp, #24]
  404288:	bl	40445c <safe_fork_full@plt+0x2c84>
  40428c:	stur	x0, [x29, #-48]
  404290:	ldur	x8, [x29, #-48]
  404294:	cbnz	x8, 4042c4 <safe_fork_full@plt+0x2aec>
  404298:	mov	w8, wzr
  40429c:	mov	w0, w8
  4042a0:	ldr	x1, [sp, #24]
  4042a4:	mov	w2, #0x101                 	// #257
  4042a8:	adrp	x3, 405000 <safe_fork_full@plt+0x3828>
  4042ac:	add	x3, x3, #0x1c6
  4042b0:	bl	401578 <log_oom_internal@plt>
  4042b4:	stur	w0, [x29, #-4]
  4042b8:	mov	w8, #0x1                   	// #1
  4042bc:	str	w8, [sp, #52]
  4042c0:	b	4043c4 <safe_fork_full@plt+0x2bec>
  4042c4:	adrp	x0, 405000 <safe_fork_full@plt+0x3828>
  4042c8:	add	x0, x0, #0x1dc
  4042cc:	mov	w1, #0x225                 	// #549
  4042d0:	sub	x2, x29, #0x34
  4042d4:	bl	404490 <safe_fork_full@plt+0x2cb8>
  4042d8:	str	w0, [sp, #56]
  4042dc:	ldr	w8, [sp, #56]
  4042e0:	cmp	w8, #0x0
  4042e4:	cset	w8, ge  // ge = tcont
  4042e8:	tbnz	w8, #0, 404300 <safe_fork_full@plt+0x2b28>
  4042ec:	ldr	w8, [sp, #56]
  4042f0:	stur	w8, [x29, #-4]
  4042f4:	mov	w8, #0x1                   	// #1
  4042f8:	str	w8, [sp, #52]
  4042fc:	b	4043c4 <safe_fork_full@plt+0x2bec>
  404300:	ldr	w8, [sp, #56]
  404304:	cbnz	w8, 40432c <safe_fork_full@plt+0x2b54>
  404308:	ldur	x0, [x29, #-16]
  40430c:	ldur	x1, [x29, #-24]
  404310:	ldur	x2, [x29, #-32]
  404314:	ldur	w3, [x29, #-36]
  404318:	mov	x4, #0x1                   	// #1
  40431c:	bl	402f44 <safe_fork_full@plt+0x176c>
  404320:	mov	w8, #0x1                   	// #1
  404324:	mov	w0, w8
  404328:	bl	4017b8 <_exit@plt>
  40432c:	mov	w8, #0x6                   	// #6
  404330:	str	w8, [sp, #48]
  404334:	str	wzr, [sp, #44]
  404338:	str	wzr, [sp, #40]
  40433c:	ldr	w0, [sp, #40]
  404340:	bl	4014e8 <log_get_max_level_realm@plt>
  404344:	ldr	w8, [sp, #48]
  404348:	and	w8, w8, #0x7
  40434c:	cmp	w0, w8
  404350:	b.lt	40439c <safe_fork_full@plt+0x2bc4>  // b.tstop
  404354:	ldr	w8, [sp, #40]
  404358:	ldr	w9, [sp, #48]
  40435c:	orr	w0, w9, w8, lsl #10
  404360:	ldr	w1, [sp, #44]
  404364:	ldur	x6, [x29, #-16]
  404368:	ldur	x7, [x29, #-48]
  40436c:	ldur	w8, [x29, #-52]
  404370:	ldr	x2, [sp, #24]
  404374:	mov	w3, #0x10e                 	// #270
  404378:	adrp	x4, 405000 <safe_fork_full@plt+0x3828>
  40437c:	add	x4, x4, #0x1c6
  404380:	adrp	x5, 405000 <safe_fork_full@plt+0x3828>
  404384:	add	x5, x5, #0x1e7
  404388:	mov	x10, sp
  40438c:	str	w8, [x10]
  404390:	bl	4014f8 <log_internal_realm@plt>
  404394:	str	w0, [sp, #20]
  404398:	b	4043b0 <safe_fork_full@plt+0x2bd8>
  40439c:	ldr	w0, [sp, #44]
  4043a0:	bl	401508 <abs@plt>
  4043a4:	mov	w8, wzr
  4043a8:	subs	w8, w8, w0, uxtb
  4043ac:	str	w8, [sp, #20]
  4043b0:	ldr	w8, [sp, #20]
  4043b4:	str	w8, [sp, #36]
  4043b8:	stur	wzr, [x29, #-4]
  4043bc:	mov	w8, #0x1                   	// #1
  4043c0:	str	w8, [sp, #52]
  4043c4:	sub	x0, x29, #0x30
  4043c8:	bl	403be0 <safe_fork_full@plt+0x2408>
  4043cc:	ldur	w0, [x29, #-4]
  4043d0:	ldp	x29, x30, [sp, #112]
  4043d4:	add	sp, sp, #0x80
  4043d8:	ret
  4043dc:	sub	sp, sp, #0x20
  4043e0:	stp	x29, x30, [sp, #16]
  4043e4:	add	x29, sp, #0x10
  4043e8:	mov	w8, #0x0                   	// #0
  4043ec:	stur	w0, [x29, #-4]
  4043f0:	sturb	w8, [x29, #-5]
  4043f4:	ldur	w0, [x29, #-4]
  4043f8:	bl	401508 <abs@plt>
  4043fc:	subs	w8, w0, #0x20
  404400:	mov	w9, w8
  404404:	ubfx	x9, x9, #0, #32
  404408:	cmp	x9, #0x51
  40440c:	str	x9, [sp]
  404410:	b.hi	404438 <safe_fork_full@plt+0x2c60>  // b.pmore
  404414:	adrp	x8, 404000 <safe_fork_full@plt+0x2828>
  404418:	add	x8, x8, #0x580
  40441c:	ldr	x11, [sp]
  404420:	ldrsw	x10, [x8, x11, lsl #2]
  404424:	add	x9, x8, x10
  404428:	br	x9
  40442c:	mov	w8, #0x1                   	// #1
  404430:	sturb	w8, [x29, #-5]
  404434:	b	404438 <safe_fork_full@plt+0x2c60>
  404438:	ldurb	w8, [x29, #-5]
  40443c:	mov	w9, #0x1                   	// #1
  404440:	and	w8, w8, w9
  404444:	sturb	w8, [x29, #-6]
  404448:	ldurb	w8, [x29, #-6]
  40444c:	and	w0, w8, #0x1
  404450:	ldp	x29, x30, [sp, #16]
  404454:	add	sp, sp, #0x20
  404458:	ret
  40445c:	sub	sp, sp, #0x20
  404460:	stp	x29, x30, [sp, #16]
  404464:	add	x29, sp, #0x10
  404468:	mov	x8, xzr
  40446c:	str	x0, [sp, #8]
  404470:	str	x1, [sp]
  404474:	ldr	x0, [sp, #8]
  404478:	ldr	x1, [sp]
  40447c:	mov	x2, x8
  404480:	bl	4017c8 <strv_join_prefix@plt>
  404484:	ldp	x29, x30, [sp, #16]
  404488:	add	sp, sp, #0x20
  40448c:	ret
  404490:	sub	sp, sp, #0x30
  404494:	stp	x29, x30, [sp, #32]
  404498:	add	x29, sp, #0x20
  40449c:	mov	x8, xzr
  4044a0:	mov	x3, x8
  4044a4:	stur	x0, [x29, #-8]
  4044a8:	stur	w1, [x29, #-12]
  4044ac:	str	x2, [sp, #8]
  4044b0:	ldur	x0, [x29, #-8]
  4044b4:	ldur	w9, [x29, #-12]
  4044b8:	ldr	x4, [sp, #8]
  4044bc:	mov	x1, x3
  4044c0:	mov	x2, x8
  4044c4:	mov	w3, w9
  4044c8:	bl	4017d8 <safe_fork_full@plt>
  4044cc:	ldp	x29, x30, [sp, #32]
  4044d0:	add	sp, sp, #0x30
  4044d4:	ret
  4044d8:	stp	x29, x30, [sp, #-64]!
  4044dc:	mov	x29, sp
  4044e0:	stp	x19, x20, [sp, #16]
  4044e4:	adrp	x20, 41f000 <safe_fork_full@plt+0x1d828>
  4044e8:	add	x20, x20, #0xbf8
  4044ec:	stp	x21, x22, [sp, #32]
  4044f0:	adrp	x21, 41f000 <safe_fork_full@plt+0x1d828>
  4044f4:	add	x21, x21, #0xbf0
  4044f8:	sub	x20, x20, x21
  4044fc:	mov	w22, w0
  404500:	stp	x23, x24, [sp, #48]
  404504:	mov	x23, x1
  404508:	mov	x24, x2
  40450c:	bl	401450 <__libc_start_main@plt-0x38>
  404510:	cmp	xzr, x20, asr #3
  404514:	b.eq	404540 <safe_fork_full@plt+0x2d68>  // b.none
  404518:	asr	x20, x20, #3
  40451c:	mov	x19, #0x0                   	// #0
  404520:	ldr	x3, [x21, x19, lsl #3]
  404524:	mov	x2, x24
  404528:	add	x19, x19, #0x1
  40452c:	mov	x1, x23
  404530:	mov	w0, w22
  404534:	blr	x3
  404538:	cmp	x20, x19
  40453c:	b.ne	404520 <safe_fork_full@plt+0x2d48>  // b.any
  404540:	ldp	x19, x20, [sp, #16]
  404544:	ldp	x21, x22, [sp, #32]
  404548:	ldp	x23, x24, [sp, #48]
  40454c:	ldp	x29, x30, [sp], #64
  404550:	ret
  404554:	nop
  404558:	ret

Disassembly of section .fini:

000000000040455c <.fini>:
  40455c:	stp	x29, x30, [sp, #-16]!
  404560:	mov	x29, sp
  404564:	ldp	x29, x30, [sp], #16
  404568:	ret
