
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-time-wait-sync_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400f30 <_init>:
  400f30:	stp	x29, x30, [sp, #-16]!
  400f34:	mov	x29, sp
  400f38:	bl	4011d0 <call_weak_fn>
  400f3c:	ldp	x29, x30, [sp], #16
  400f40:	ret

Disassembly of section .plt:

0000000000400f50 <.plt>:
  400f50:	stp	x16, x30, [sp, #-16]!
  400f54:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400f58:	ldr	x17, [x16, #3808]
  400f5c:	add	x16, x16, #0xee0
  400f60:	br	x17
  400f64:	nop
  400f68:	nop
  400f6c:	nop

0000000000400f70 <inotify_add_watch_and_warn@plt>:
  400f70:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400f74:	ldr	x17, [x16, #3816]
  400f78:	add	x16, x16, #0xee8
  400f7c:	br	x17

0000000000400f80 <__libc_start_main@plt>:
  400f80:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400f84:	ldr	x17, [x16, #3824]
  400f88:	add	x16, x16, #0xef0
  400f8c:	br	x17

0000000000400f90 <sd_event_set_watchdog@plt>:
  400f90:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400f94:	ldr	x17, [x16, #3832]
  400f98:	add	x16, x16, #0xef8
  400f9c:	br	x17

0000000000400fa0 <__gmon_start__@plt>:
  400fa0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400fa4:	ldr	x17, [x16, #3840]
  400fa8:	add	x16, x16, #0xf00
  400fac:	br	x17

0000000000400fb0 <polkit_agent_close@plt>:
  400fb0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400fb4:	ldr	x17, [x16, #3848]
  400fb8:	add	x16, x16, #0xf08
  400fbc:	br	x17

0000000000400fc0 <sd_event_default@plt>:
  400fc0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400fc4:	ldr	x17, [x16, #3856]
  400fc8:	add	x16, x16, #0xf10
  400fcc:	br	x17

0000000000400fd0 <sd_event_source_get_event@plt>:
  400fd0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400fd4:	ldr	x17, [x16, #3864]
  400fd8:	add	x16, x16, #0xf18
  400fdc:	br	x17

0000000000400fe0 <inotify_rm_watch@plt>:
  400fe0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400fe4:	ldr	x17, [x16, #3872]
  400fe8:	add	x16, x16, #0xf20
  400fec:	br	x17

0000000000400ff0 <sd_event_source_unref@plt>:
  400ff0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  400ff4:	ldr	x17, [x16, #3880]
  400ff8:	add	x16, x16, #0xf28
  400ffc:	br	x17

0000000000401000 <adjtimex@plt>:
  401000:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401004:	ldr	x17, [x16, #3888]
  401008:	add	x16, x16, #0xf30
  40100c:	br	x17

0000000000401010 <safe_close@plt>:
  401010:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401014:	ldr	x17, [x16, #3896]
  401018:	add	x16, x16, #0xf38
  40101c:	br	x17

0000000000401020 <log_assert_failed_realm@plt>:
  401020:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401024:	ldr	x17, [x16, #3904]
  401028:	add	x16, x16, #0xf40
  40102c:	br	x17

0000000000401030 <time_change_fd@plt>:
  401030:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401034:	ldr	x17, [x16, #3912]
  401038:	add	x16, x16, #0xf48
  40103c:	br	x17

0000000000401040 <access@plt>:
  401040:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401044:	ldr	x17, [x16, #3920]
  401048:	add	x16, x16, #0xf50
  40104c:	br	x17

0000000000401050 <sigprocmask_many@plt>:
  401050:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401054:	ldr	x17, [x16, #3928]
  401058:	add	x16, x16, #0xf58
  40105c:	br	x17

0000000000401060 <abort@plt>:
  401060:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401064:	ldr	x17, [x16, #3936]
  401068:	add	x16, x16, #0xf60
  40106c:	br	x17

0000000000401070 <format_timestamp_us_utc@plt>:
  401070:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401074:	ldr	x17, [x16, #3944]
  401078:	add	x16, x16, #0xf68
  40107c:	br	x17

0000000000401080 <inotify_add_watch@plt>:
  401080:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401084:	ldr	x17, [x16, #3952]
  401088:	add	x16, x16, #0xf70
  40108c:	br	x17

0000000000401090 <__errno_location@plt>:
  401090:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401094:	ldr	x17, [x16, #3960]
  401098:	add	x16, x16, #0xf78
  40109c:	br	x17

00000000004010a0 <read@plt>:
  4010a0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  4010a4:	ldr	x17, [x16, #3968]
  4010a8:	add	x16, x16, #0xf80
  4010ac:	br	x17

00000000004010b0 <__stack_chk_fail@plt>:
  4010b0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  4010b4:	ldr	x17, [x16, #3976]
  4010b8:	add	x16, x16, #0xf88
  4010bc:	br	x17

00000000004010c0 <ask_password_agent_close@plt>:
  4010c0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  4010c4:	ldr	x17, [x16, #3984]
  4010c8:	add	x16, x16, #0xf90
  4010cc:	br	x17

00000000004010d0 <pager_close@plt>:
  4010d0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  4010d4:	ldr	x17, [x16, #3992]
  4010d8:	add	x16, x16, #0xf98
  4010dc:	br	x17

00000000004010e0 <log_internal_realm@plt>:
  4010e0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  4010e4:	ldr	x17, [x16, #4000]
  4010e8:	add	x16, x16, #0xfa0
  4010ec:	br	x17

00000000004010f0 <sd_event_add_io@plt>:
  4010f0:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  4010f4:	ldr	x17, [x16, #4008]
  4010f8:	add	x16, x16, #0xfa8
  4010fc:	br	x17

0000000000401100 <sd_event_loop@plt>:
  401100:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401104:	ldr	x17, [x16, #4016]
  401108:	add	x16, x16, #0xfb0
  40110c:	br	x17

0000000000401110 <timeval_load@plt>:
  401110:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401114:	ldr	x17, [x16, #4024]
  401118:	add	x16, x16, #0xfb8
  40111c:	br	x17

0000000000401120 <inotify_init1@plt>:
  401120:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401124:	ldr	x17, [x16, #4032]
  401128:	add	x16, x16, #0xfc0
  40112c:	br	x17

0000000000401130 <sd_event_exit@plt>:
  401130:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401134:	ldr	x17, [x16, #4040]
  401138:	add	x16, x16, #0xfc8
  40113c:	br	x17

0000000000401140 <sd_event_unref@plt>:
  401140:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401144:	ldr	x17, [x16, #4048]
  401148:	add	x16, x16, #0xfd0
  40114c:	br	x17

0000000000401150 <mac_selinux_finish@plt>:
  401150:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401154:	ldr	x17, [x16, #4056]
  401158:	add	x16, x16, #0xfd8
  40115c:	br	x17

0000000000401160 <sd_event_add_signal@plt>:
  401160:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401164:	ldr	x17, [x16, #4064]
  401168:	add	x16, x16, #0xfe0
  40116c:	br	x17

0000000000401170 <log_get_max_level_realm@plt>:
  401170:	adrp	x16, 412000 <__FRAME_END__+0xf4d8>
  401174:	ldr	x17, [x16, #4072]
  401178:	add	x16, x16, #0xfe8
  40117c:	br	x17

Disassembly of section .text:

0000000000401180 <_start>:
  401180:	mov	x29, #0x0                   	// #0
  401184:	mov	x30, #0x0                   	// #0
  401188:	mov	x5, x0
  40118c:	ldr	x1, [sp]
  401190:	add	x2, sp, #0x8
  401194:	mov	x6, sp
  401198:	movz	x0, #0x0, lsl #48
  40119c:	movk	x0, #0x0, lsl #32
  4011a0:	movk	x0, #0x40, lsl #16
  4011a4:	movk	x0, #0x23b0
  4011a8:	movz	x3, #0x0, lsl #48
  4011ac:	movk	x3, #0x0, lsl #32
  4011b0:	movk	x3, #0x40, lsl #16
  4011b4:	movk	x3, #0x2400
  4011b8:	movz	x4, #0x0, lsl #48
  4011bc:	movk	x4, #0x0, lsl #32
  4011c0:	movk	x4, #0x40, lsl #16
  4011c4:	movk	x4, #0x2480
  4011c8:	bl	400f80 <__libc_start_main@plt>
  4011cc:	bl	401060 <abort@plt>

00000000004011d0 <call_weak_fn>:
  4011d0:	adrp	x0, 412000 <__FRAME_END__+0xf4d8>
  4011d4:	ldr	x0, [x0, #4088]
  4011d8:	cbz	x0, 4011e0 <call_weak_fn+0x10>
  4011dc:	b	400fa0 <__gmon_start__@plt>
  4011e0:	ret

00000000004011e4 <deregister_tm_clones>:
  4011e4:	stp	x29, x30, [sp, #-32]!
  4011e8:	mov	x29, sp
  4011ec:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4011f0:	add	x0, x0, #0x0
  4011f4:	str	x0, [sp, #24]
  4011f8:	ldr	x0, [sp, #24]
  4011fc:	str	x0, [sp, #24]
  401200:	ldr	x1, [sp, #24]
  401204:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401208:	add	x0, x0, #0x0
  40120c:	cmp	x1, x0
  401210:	b.eq	40124c <deregister_tm_clones+0x68>  // b.none
  401214:	adrp	x0, 402000 <run+0x35c>
  401218:	add	x0, x0, #0x498
  40121c:	ldr	x0, [x0]
  401220:	str	x0, [sp, #16]
  401224:	ldr	x0, [sp, #16]
  401228:	str	x0, [sp, #16]
  40122c:	ldr	x0, [sp, #16]
  401230:	cmp	x0, #0x0
  401234:	b.eq	401250 <deregister_tm_clones+0x6c>  // b.none
  401238:	ldr	x1, [sp, #16]
  40123c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401240:	add	x0, x0, #0x0
  401244:	blr	x1
  401248:	b	401250 <deregister_tm_clones+0x6c>
  40124c:	nop
  401250:	ldp	x29, x30, [sp], #32
  401254:	ret

0000000000401258 <register_tm_clones>:
  401258:	stp	x29, x30, [sp, #-48]!
  40125c:	mov	x29, sp
  401260:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401264:	add	x0, x0, #0x0
  401268:	str	x0, [sp, #40]
  40126c:	ldr	x0, [sp, #40]
  401270:	str	x0, [sp, #40]
  401274:	ldr	x1, [sp, #40]
  401278:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40127c:	add	x0, x0, #0x0
  401280:	sub	x0, x1, x0
  401284:	asr	x0, x0, #3
  401288:	lsr	x1, x0, #63
  40128c:	add	x0, x1, x0
  401290:	asr	x0, x0, #1
  401294:	str	x0, [sp, #32]
  401298:	ldr	x0, [sp, #32]
  40129c:	cmp	x0, #0x0
  4012a0:	b.eq	4012e0 <register_tm_clones+0x88>  // b.none
  4012a4:	adrp	x0, 402000 <run+0x35c>
  4012a8:	add	x0, x0, #0x4a0
  4012ac:	ldr	x0, [x0]
  4012b0:	str	x0, [sp, #24]
  4012b4:	ldr	x0, [sp, #24]
  4012b8:	str	x0, [sp, #24]
  4012bc:	ldr	x0, [sp, #24]
  4012c0:	cmp	x0, #0x0
  4012c4:	b.eq	4012e4 <register_tm_clones+0x8c>  // b.none
  4012c8:	ldr	x2, [sp, #24]
  4012cc:	ldr	x1, [sp, #32]
  4012d0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4012d4:	add	x0, x0, #0x0
  4012d8:	blr	x2
  4012dc:	b	4012e4 <register_tm_clones+0x8c>
  4012e0:	nop
  4012e4:	ldp	x29, x30, [sp], #48
  4012e8:	ret

00000000004012ec <__do_global_dtors_aux>:
  4012ec:	stp	x29, x30, [sp, #-16]!
  4012f0:	mov	x29, sp
  4012f4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4012f8:	add	x0, x0, #0xc
  4012fc:	ldrb	w0, [x0]
  401300:	and	x0, x0, #0xff
  401304:	cmp	x0, #0x0
  401308:	b.ne	401324 <__do_global_dtors_aux+0x38>  // b.any
  40130c:	bl	4011e4 <deregister_tm_clones>
  401310:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401314:	add	x0, x0, #0xc
  401318:	mov	w1, #0x1                   	// #1
  40131c:	strb	w1, [x0]
  401320:	b	401328 <__do_global_dtors_aux+0x3c>
  401324:	nop
  401328:	ldp	x29, x30, [sp], #16
  40132c:	ret

0000000000401330 <frame_dummy>:
  401330:	stp	x29, x30, [sp, #-16]!
  401334:	mov	x29, sp
  401338:	bl	401258 <register_tm_clones>
  40133c:	nop
  401340:	ldp	x29, x30, [sp], #16
  401344:	ret

0000000000401348 <sd_event_unrefp>:
  401348:	stp	x29, x30, [sp, #-32]!
  40134c:	mov	x29, sp
  401350:	str	x0, [sp, #24]
  401354:	ldr	x0, [sp, #24]
  401358:	ldr	x0, [x0]
  40135c:	cmp	x0, #0x0
  401360:	b.eq	401370 <sd_event_unrefp+0x28>  // b.none
  401364:	ldr	x0, [sp, #24]
  401368:	ldr	x0, [x0]
  40136c:	bl	401140 <sd_event_unref@plt>
  401370:	nop
  401374:	ldp	x29, x30, [sp], #32
  401378:	ret

000000000040137c <ALIGN_TO>:
  40137c:	sub	sp, sp, #0x10
  401380:	str	x0, [sp, #8]
  401384:	str	x1, [sp]
  401388:	ldr	x1, [sp, #8]
  40138c:	ldr	x0, [sp]
  401390:	add	x0, x1, x0
  401394:	sub	x1, x0, #0x1
  401398:	ldr	x0, [sp]
  40139c:	neg	x0, x0
  4013a0:	and	x0, x1, x0
  4013a4:	add	sp, sp, #0x10
  4013a8:	ret

00000000004013ac <save_argc_argv>:
  4013ac:	sub	sp, sp, #0x10
  4013b0:	str	w0, [sp, #12]
  4013b4:	str	x1, [sp]
  4013b8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4013bc:	add	x0, x0, #0x8
  4013c0:	ldr	w1, [sp, #12]
  4013c4:	str	w1, [x0]
  4013c8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4013cc:	add	x0, x0, #0x0
  4013d0:	ldr	x1, [sp]
  4013d4:	str	x1, [x0]
  4013d8:	nop
  4013dc:	add	sp, sp, #0x10
  4013e0:	ret

00000000004013e4 <static_destruct>:
  4013e4:	stp	x29, x30, [sp, #-32]!
  4013e8:	mov	x29, sp
  4013ec:	adrp	x0, 402000 <run+0x35c>
  4013f0:	add	x0, x0, #0x7c0
  4013f4:	ldr	x0, [x0]
  4013f8:	cmp	x0, #0x0
  4013fc:	b.eq	401460 <static_destruct+0x7c>  // b.none
  401400:	adrp	x0, 402000 <run+0x35c>
  401404:	add	x0, x0, #0x7c0
  401408:	ldr	x0, [x0]
  40140c:	mov	x1, #0x8                   	// #8
  401410:	bl	40137c <ALIGN_TO>
  401414:	str	x0, [sp, #24]
  401418:	b	401444 <static_destruct+0x60>
  40141c:	ldr	x0, [sp, #24]
  401420:	ldr	x1, [x0, #8]
  401424:	ldr	x0, [sp, #24]
  401428:	ldr	x0, [x0]
  40142c:	blr	x1
  401430:	ldr	x0, [sp, #24]
  401434:	add	x0, x0, #0x10
  401438:	mov	x1, #0x8                   	// #8
  40143c:	bl	40137c <ALIGN_TO>
  401440:	str	x0, [sp, #24]
  401444:	ldr	x1, [sp, #24]
  401448:	adrp	x0, 402000 <run+0x35c>
  40144c:	add	x0, x0, #0x7c8
  401450:	ldr	x0, [x0]
  401454:	cmp	x1, x0
  401458:	b.cc	40141c <static_destruct+0x38>  // b.lo, b.ul, b.last
  40145c:	b	401464 <static_destruct+0x80>
  401460:	nop
  401464:	ldp	x29, x30, [sp], #32
  401468:	ret

000000000040146c <clock_state_release_timerfd>:
  40146c:	stp	x29, x30, [sp, #-32]!
  401470:	mov	x29, sp
  401474:	str	x0, [sp, #24]
  401478:	ldr	x0, [sp, #24]
  40147c:	ldr	x0, [x0, #8]
  401480:	bl	400ff0 <sd_event_source_unref@plt>
  401484:	mov	x1, x0
  401488:	ldr	x0, [sp, #24]
  40148c:	str	x1, [x0, #8]
  401490:	ldr	x0, [sp, #24]
  401494:	ldr	w0, [x0]
  401498:	bl	401010 <safe_close@plt>
  40149c:	mov	w1, w0
  4014a0:	ldr	x0, [sp, #24]
  4014a4:	str	w1, [x0]
  4014a8:	nop
  4014ac:	ldp	x29, x30, [sp], #32
  4014b0:	ret

00000000004014b4 <clock_state_release>:
  4014b4:	stp	x29, x30, [sp, #-32]!
  4014b8:	mov	x29, sp
  4014bc:	str	x0, [sp, #24]
  4014c0:	ldr	x0, [sp, #24]
  4014c4:	bl	40146c <clock_state_release_timerfd>
  4014c8:	ldr	x0, [sp, #24]
  4014cc:	ldr	x0, [x0, #24]
  4014d0:	bl	400ff0 <sd_event_source_unref@plt>
  4014d4:	mov	x1, x0
  4014d8:	ldr	x0, [sp, #24]
  4014dc:	str	x1, [x0, #24]
  4014e0:	ldr	x0, [sp, #24]
  4014e4:	ldr	w0, [x0, #16]
  4014e8:	bl	401010 <safe_close@plt>
  4014ec:	mov	w1, w0
  4014f0:	ldr	x0, [sp, #24]
  4014f4:	str	w1, [x0, #16]
  4014f8:	nop
  4014fc:	ldp	x29, x30, [sp], #32
  401500:	ret

0000000000401504 <update_notify_run_systemd_timesync>:
  401504:	stp	x29, x30, [sp, #-32]!
  401508:	mov	x29, sp
  40150c:	str	x0, [sp, #24]
  401510:	ldr	x0, [sp, #24]
  401514:	ldr	w3, [x0, #16]
  401518:	mov	w2, #0x500                 	// #1280
  40151c:	adrp	x0, 402000 <run+0x35c>
  401520:	add	x1, x0, #0x4a8
  401524:	mov	w0, w3
  401528:	bl	401080 <inotify_add_watch@plt>
  40152c:	mov	w1, w0
  401530:	ldr	x0, [sp, #24]
  401534:	str	w1, [x0, #36]
  401538:	ldr	x0, [sp, #24]
  40153c:	ldr	w0, [x0, #36]
  401540:	ldp	x29, x30, [sp], #32
  401544:	ret

0000000000401548 <timerfd_handler>:
  401548:	stp	x29, x30, [sp, #-64]!
  40154c:	mov	x29, sp
  401550:	str	x0, [sp, #40]
  401554:	str	w1, [sp, #36]
  401558:	str	w2, [sp, #32]
  40155c:	str	x3, [sp, #24]
  401560:	ldr	x0, [sp, #24]
  401564:	str	x0, [sp, #56]
  401568:	ldr	x0, [sp, #40]
  40156c:	bl	400fd0 <sd_event_source_get_event@plt>
  401570:	mov	x1, x0
  401574:	ldr	x0, [sp, #56]
  401578:	bl	4017ec <clock_state_update>
  40157c:	ldp	x29, x30, [sp], #64
  401580:	ret

0000000000401584 <process_inotify_event>:
  401584:	stp	x29, x30, [sp, #-48]!
  401588:	mov	x29, sp
  40158c:	str	x0, [sp, #40]
  401590:	str	x1, [sp, #32]
  401594:	str	x2, [sp, #24]
  401598:	ldr	x0, [sp, #24]
  40159c:	ldr	w1, [x0]
  4015a0:	ldr	x0, [sp, #32]
  4015a4:	ldr	w0, [x0, #32]
  4015a8:	cmp	w1, w0
  4015ac:	b.ne	4015cc <process_inotify_event+0x48>  // b.any
  4015b0:	ldr	x0, [sp, #32]
  4015b4:	ldr	w0, [x0, #36]
  4015b8:	cmp	w0, #0x0
  4015bc:	b.ge	401630 <process_inotify_event+0xac>  // b.tcont
  4015c0:	ldr	x0, [sp, #32]
  4015c4:	bl	401504 <update_notify_run_systemd_timesync>
  4015c8:	b	401630 <process_inotify_event+0xac>
  4015cc:	ldr	x0, [sp, #24]
  4015d0:	ldr	w1, [x0]
  4015d4:	ldr	x0, [sp, #32]
  4015d8:	ldr	w0, [x0, #36]
  4015dc:	cmp	w1, w0
  4015e0:	b.ne	401630 <process_inotify_event+0xac>  // b.any
  4015e4:	ldr	x0, [sp, #24]
  4015e8:	ldr	w0, [x0, #4]
  4015ec:	and	w0, w0, #0x400
  4015f0:	cmp	w0, #0x0
  4015f4:	b.eq	401624 <process_inotify_event+0xa0>  // b.none
  4015f8:	ldr	x0, [sp, #32]
  4015fc:	ldr	w2, [x0, #16]
  401600:	ldr	x0, [sp, #32]
  401604:	ldr	w0, [x0, #36]
  401608:	mov	w1, w0
  40160c:	mov	w0, w2
  401610:	bl	400fe0 <inotify_rm_watch@plt>
  401614:	ldr	x0, [sp, #32]
  401618:	mov	w1, #0xffffffff            	// #-1
  40161c:	str	w1, [x0, #36]
  401620:	b	401630 <process_inotify_event+0xac>
  401624:	ldr	x1, [sp, #40]
  401628:	ldr	x0, [sp, #32]
  40162c:	bl	4017ec <clock_state_update>
  401630:	nop
  401634:	ldp	x29, x30, [sp], #48
  401638:	ret

000000000040163c <inotify_handler>:
  40163c:	stp	x29, x30, [sp, #-384]!
  401640:	mov	x29, sp
  401644:	str	x0, [sp, #40]
  401648:	str	w1, [sp, #36]
  40164c:	str	w2, [sp, #32]
  401650:	str	x3, [sp, #24]
  401654:	adrp	x0, 412000 <__FRAME_END__+0xf4d8>
  401658:	add	x0, x0, #0xc98
  40165c:	ldr	x1, [x0]
  401660:	str	x1, [sp, #376]
  401664:	mov	x1, #0x0                   	// #0
  401668:	ldr	x0, [sp, #40]
  40166c:	bl	400fd0 <sd_event_source_get_event@plt>
  401670:	str	x0, [sp, #80]
  401674:	ldr	x0, [sp, #24]
  401678:	str	x0, [sp, #88]
  40167c:	add	x0, sp, #0x68
  401680:	mov	x2, #0x110                 	// #272
  401684:	mov	x1, x0
  401688:	ldr	w0, [sp, #36]
  40168c:	bl	4010a0 <read@plt>
  401690:	str	x0, [sp, #96]
  401694:	ldr	x0, [sp, #96]
  401698:	cmp	x0, #0x0
  40169c:	b.ge	401768 <inotify_handler+0x12c>  // b.tcont
  4016a0:	strb	wzr, [sp, #59]
  4016a4:	bl	401090 <__errno_location@plt>
  4016a8:	ldr	w0, [x0]
  4016ac:	cmp	w0, #0x4
  4016b0:	b.eq	4016bc <inotify_handler+0x80>  // b.none
  4016b4:	cmp	w0, #0xb
  4016b8:	b.ne	4016c4 <inotify_handler+0x88>  // b.any
  4016bc:	mov	w0, #0x1                   	// #1
  4016c0:	strb	w0, [sp, #59]
  4016c4:	nop
  4016c8:	ldrb	w0, [sp, #59]
  4016cc:	cmp	w0, #0x0
  4016d0:	b.eq	4016dc <inotify_handler+0xa0>  // b.none
  4016d4:	mov	w0, #0x0                   	// #0
  4016d8:	b	4017bc <inotify_handler+0x180>
  4016dc:	mov	w0, #0x4                   	// #4
  4016e0:	str	w0, [sp, #60]
  4016e4:	bl	401090 <__errno_location@plt>
  4016e8:	ldr	w0, [x0]
  4016ec:	str	w0, [sp, #64]
  4016f0:	str	wzr, [sp, #68]
  4016f4:	ldr	w0, [sp, #68]
  4016f8:	bl	401170 <log_get_max_level_realm@plt>
  4016fc:	mov	w1, w0
  401700:	ldr	w0, [sp, #60]
  401704:	and	w0, w0, #0x7
  401708:	cmp	w1, w0
  40170c:	b.lt	401750 <inotify_handler+0x114>  // b.tstop
  401710:	ldr	w0, [sp, #68]
  401714:	lsl	w1, w0, #10
  401718:	ldr	w0, [sp, #60]
  40171c:	orr	w6, w1, w0
  401720:	adrp	x0, 402000 <run+0x35c>
  401724:	add	x1, x0, #0x4c3
  401728:	adrp	x0, 402000 <run+0x35c>
  40172c:	add	x5, x0, #0x4e8
  401730:	adrp	x0, 402000 <run+0x35c>
  401734:	add	x4, x0, #0x7d0
  401738:	mov	w3, #0x61                  	// #97
  40173c:	mov	x2, x1
  401740:	ldr	w1, [sp, #64]
  401744:	mov	w0, w6
  401748:	bl	4010e0 <log_internal_realm@plt>
  40174c:	b	4017bc <inotify_handler+0x180>
  401750:	ldr	w0, [sp, #64]
  401754:	cmp	w0, #0x0
  401758:	cneg	w0, w0, lt  // lt = tstop
  40175c:	and	w0, w0, #0xff
  401760:	neg	w0, w0
  401764:	b	4017bc <inotify_handler+0x180>
  401768:	add	x0, sp, #0x68
  40176c:	str	x0, [sp, #72]
  401770:	b	4017a0 <inotify_handler+0x164>
  401774:	ldr	x2, [sp, #72]
  401778:	ldr	x1, [sp, #88]
  40177c:	ldr	x0, [sp, #80]
  401780:	bl	401584 <process_inotify_event>
  401784:	ldr	x0, [sp, #72]
  401788:	ldr	w0, [x0, #12]
  40178c:	mov	w0, w0
  401790:	add	x0, x0, #0x10
  401794:	ldr	x1, [sp, #72]
  401798:	add	x0, x1, x0
  40179c:	str	x0, [sp, #72]
  4017a0:	ldr	x0, [sp, #96]
  4017a4:	add	x1, sp, #0x68
  4017a8:	add	x0, x1, x0
  4017ac:	ldr	x1, [sp, #72]
  4017b0:	cmp	x1, x0
  4017b4:	b.cc	401774 <inotify_handler+0x138>  // b.lo, b.ul, b.last
  4017b8:	mov	w0, #0x0                   	// #0
  4017bc:	mov	w1, w0
  4017c0:	adrp	x0, 412000 <__FRAME_END__+0xf4d8>
  4017c4:	add	x0, x0, #0xc98
  4017c8:	ldr	x2, [sp, #376]
  4017cc:	ldr	x0, [x0]
  4017d0:	eor	x0, x2, x0
  4017d4:	cmp	x0, #0x0
  4017d8:	b.eq	4017e0 <inotify_handler+0x1a4>  // b.none
  4017dc:	bl	4010b0 <__stack_chk_fail@plt>
  4017e0:	mov	w0, w1
  4017e4:	ldp	x29, x30, [sp], #384
  4017e8:	ret

00000000004017ec <clock_state_update>:
  4017ec:	stp	x29, x30, [sp, #-368]!
  4017f0:	mov	x29, sp
  4017f4:	stp	x19, x20, [sp, #16]
  4017f8:	sub	sp, sp, #0x10
  4017fc:	str	x0, [x29, #40]
  401800:	str	x1, [x29, #32]
  401804:	adrp	x0, 412000 <__FRAME_END__+0xf4d8>
  401808:	add	x0, x0, #0xc98
  40180c:	ldr	x1, [x0]
  401810:	str	x1, [x29, #360]
  401814:	mov	x1, #0x0                   	// #0
  401818:	mov	x0, sp
  40181c:	mov	x20, x0
  401820:	mov	x0, #0x26                  	// #38
  401824:	str	x0, [x29, #104]
  401828:	mov	x0, #0xf                   	// #15
  40182c:	str	x0, [x29, #112]
  401830:	ldr	x0, [x29, #104]
  401834:	ldr	x10, [x29, #112]
  401838:	ldr	x1, [x29, #112]
  40183c:	cmp	x10, x0
  401840:	csel	x19, x1, x0, cs  // cs = hs, nlast
  401844:	mov	x0, x19
  401848:	sub	x0, x0, #0x1
  40184c:	str	x0, [x29, #120]
  401850:	mov	x8, x19
  401854:	mov	x9, #0x0                   	// #0
  401858:	lsr	x0, x8, #61
  40185c:	lsl	x5, x9, #3
  401860:	orr	x5, x0, x5
  401864:	lsl	x4, x8, #3
  401868:	mov	x6, x19
  40186c:	mov	x7, #0x0                   	// #0
  401870:	lsr	x0, x6, #61
  401874:	lsl	x3, x7, #3
  401878:	orr	x3, x0, x3
  40187c:	lsl	x2, x6, #3
  401880:	add	x0, x19, #0xf
  401884:	lsr	x0, x0, #4
  401888:	lsl	x0, x0, #4
  40188c:	sub	sp, sp, x0
  401890:	add	x0, sp, #0x10
  401894:	add	x0, x0, #0x0
  401898:	str	x0, [x29, #128]
  40189c:	stp	xzr, xzr, [x29, #152]
  4018a0:	stp	xzr, xzr, [x29, #168]
  4018a4:	stp	xzr, xzr, [x29, #184]
  4018a8:	stp	xzr, xzr, [x29, #200]
  4018ac:	stp	xzr, xzr, [x29, #216]
  4018b0:	stp	xzr, xzr, [x29, #232]
  4018b4:	stp	xzr, xzr, [x29, #248]
  4018b8:	add	x0, x29, #0x200
  4018bc:	stp	xzr, xzr, [x0, #-248]
  4018c0:	add	x0, x29, #0x200
  4018c4:	stp	xzr, xzr, [x0, #-232]
  4018c8:	add	x0, x29, #0x200
  4018cc:	stp	xzr, xzr, [x0, #-216]
  4018d0:	add	x0, x29, #0x200
  4018d4:	stp	xzr, xzr, [x0, #-200]
  4018d8:	add	x0, x29, #0x200
  4018dc:	stp	xzr, xzr, [x0, #-184]
  4018e0:	add	x0, x29, #0x200
  4018e4:	stp	xzr, xzr, [x0, #-168]
  4018e8:	ldr	x0, [x29, #40]
  4018ec:	bl	40146c <clock_state_release_timerfd>
  4018f0:	bl	401030 <time_change_fd@plt>
  4018f4:	str	w0, [x29, #52]
  4018f8:	ldr	w0, [x29, #52]
  4018fc:	cmp	w0, #0x0
  401900:	b.ge	401980 <clock_state_update+0x194>  // b.tcont
  401904:	mov	w0, #0x3                   	// #3
  401908:	str	w0, [x29, #92]
  40190c:	ldr	w0, [x29, #52]
  401910:	str	w0, [x29, #96]
  401914:	str	wzr, [x29, #100]
  401918:	ldr	w0, [x29, #100]
  40191c:	bl	401170 <log_get_max_level_realm@plt>
  401920:	mov	w1, w0
  401924:	ldr	w0, [x29, #92]
  401928:	and	w0, w0, #0x7
  40192c:	cmp	w1, w0
  401930:	b.lt	401974 <clock_state_update+0x188>  // b.tstop
  401934:	ldr	w0, [x29, #100]
  401938:	lsl	w1, w0, #10
  40193c:	ldr	w0, [x29, #92]
  401940:	orr	w6, w1, w0
  401944:	adrp	x0, 402000 <run+0x35c>
  401948:	add	x1, x0, #0x4c3
  40194c:	adrp	x0, 402000 <run+0x35c>
  401950:	add	x5, x0, #0x508
  401954:	adrp	x0, 402000 <run+0x35c>
  401958:	add	x4, x0, #0x7e0
  40195c:	mov	w3, #0x8f                  	// #143
  401960:	mov	x2, x1
  401964:	ldr	w1, [x29, #96]
  401968:	mov	w0, w6
  40196c:	bl	4010e0 <log_internal_realm@plt>
  401970:	b	401c4c <clock_state_update+0x460>
  401974:	ldr	w0, [x29, #96]
  401978:	cmp	w0, #0x0
  40197c:	b	401c4c <clock_state_update+0x460>
  401980:	ldr	x0, [x29, #40]
  401984:	ldr	w1, [x29, #52]
  401988:	str	w1, [x0]
  40198c:	add	x0, x29, #0x98
  401990:	bl	401000 <adjtimex@plt>
  401994:	str	w0, [x29, #52]
  401998:	ldr	w0, [x29, #52]
  40199c:	cmp	w0, #0x0
  4019a0:	b.ge	401a24 <clock_state_update+0x238>  // b.tcont
  4019a4:	mov	w0, #0x3                   	// #3
  4019a8:	str	w0, [x29, #80]
  4019ac:	bl	401090 <__errno_location@plt>
  4019b0:	ldr	w0, [x0]
  4019b4:	str	w0, [x29, #84]
  4019b8:	str	wzr, [x29, #88]
  4019bc:	ldr	w0, [x29, #88]
  4019c0:	bl	401170 <log_get_max_level_realm@plt>
  4019c4:	mov	w1, w0
  4019c8:	ldr	w0, [x29, #80]
  4019cc:	and	w0, w0, #0x7
  4019d0:	cmp	w1, w0
  4019d4:	b.lt	401a18 <clock_state_update+0x22c>  // b.tstop
  4019d8:	ldr	w0, [x29, #88]
  4019dc:	lsl	w1, w0, #10
  4019e0:	ldr	w0, [x29, #80]
  4019e4:	orr	w6, w1, w0
  4019e8:	adrp	x0, 402000 <run+0x35c>
  4019ec:	add	x1, x0, #0x4c3
  4019f0:	adrp	x0, 402000 <run+0x35c>
  4019f4:	add	x5, x0, #0x528
  4019f8:	adrp	x0, 402000 <run+0x35c>
  4019fc:	add	x4, x0, #0x7e0
  401a00:	mov	w3, #0x96                  	// #150
  401a04:	mov	x2, x1
  401a08:	ldr	w1, [x29, #84]
  401a0c:	mov	w0, w6
  401a10:	bl	4010e0 <log_internal_realm@plt>
  401a14:	b	401c4c <clock_state_update+0x460>
  401a18:	ldr	w0, [x29, #84]
  401a1c:	cmp	w0, #0x0
  401a20:	b	401c4c <clock_state_update+0x460>
  401a24:	ldr	x0, [x29, #40]
  401a28:	ldr	w1, [x29, #52]
  401a2c:	str	w1, [x0, #4]
  401a30:	ldr	w0, [x29, #192]
  401a34:	and	w0, w0, #0x2000
  401a38:	cmp	w0, #0x0
  401a3c:	b.eq	401a68 <clock_state_update+0x27c>  // b.none
  401a40:	ldr	x0, [x29, #232]
  401a44:	mov	x1, #0xf7cf                	// #63439
  401a48:	movk	x1, #0xe353, lsl #16
  401a4c:	movk	x1, #0x9ba5, lsl #32
  401a50:	movk	x1, #0x20c4, lsl #48
  401a54:	smulh	x1, x0, x1
  401a58:	asr	x1, x1, #7
  401a5c:	asr	x0, x0, #63
  401a60:	sub	x0, x1, x0
  401a64:	str	x0, [x29, #232]
  401a68:	add	x0, x29, #0x98
  401a6c:	add	x0, x0, #0x48
  401a70:	bl	401110 <timeval_load@plt>
  401a74:	str	x0, [x29, #136]
  401a78:	ldr	x0, [x29, #128]
  401a7c:	ldr	x2, [x29, #136]
  401a80:	mov	x1, x19
  401a84:	bl	401070 <format_timestamp_us_utc@plt>
  401a88:	str	x0, [x29, #144]
  401a8c:	ldr	x0, [x29, #144]
  401a90:	cmp	x0, #0x0
  401a94:	b.ne	401aac <clock_state_update+0x2c0>  // b.any
  401a98:	ldr	x2, [x29, #128]
  401a9c:	adrp	x0, 402000 <run+0x35c>
  401aa0:	add	x0, x0, #0x550
  401aa4:	ldp	x0, x1, [x0]
  401aa8:	stp	x0, x1, [x2]
  401aac:	mov	w0, #0x6                   	// #6
  401ab0:	str	w0, [x29, #56]
  401ab4:	str	wzr, [x29, #60]
  401ab8:	str	wzr, [x29, #64]
  401abc:	ldr	w0, [x29, #64]
  401ac0:	bl	401170 <log_get_max_level_realm@plt>
  401ac4:	mov	w1, w0
  401ac8:	ldr	w0, [x29, #56]
  401acc:	and	w0, w0, #0x7
  401ad0:	cmp	w1, w0
  401ad4:	b.lt	401b34 <clock_state_update+0x348>  // b.tstop
  401ad8:	ldr	w0, [x29, #64]
  401adc:	lsl	w1, w0, #10
  401ae0:	ldr	w0, [x29, #56]
  401ae4:	orr	w8, w1, w0
  401ae8:	adrp	x0, 402000 <run+0x35c>
  401aec:	add	x1, x0, #0x4c3
  401af0:	ldr	x0, [x29, #40]
  401af4:	ldr	w2, [x0, #4]
  401af8:	ldr	w3, [x29, #192]
  401afc:	ldr	x0, [x29, #144]
  401b00:	str	x0, [sp]
  401b04:	mov	w7, w3
  401b08:	mov	w6, w2
  401b0c:	adrp	x0, 402000 <run+0x35c>
  401b10:	add	x5, x0, #0x560
  401b14:	adrp	x0, 402000 <run+0x35c>
  401b18:	add	x4, x0, #0x7e0
  401b1c:	mov	w3, #0xa1                  	// #161
  401b20:	mov	x2, x1
  401b24:	ldr	w1, [x29, #60]
  401b28:	mov	w0, w8
  401b2c:	bl	4010e0 <log_internal_realm@plt>
  401b30:	b	401b3c <clock_state_update+0x350>
  401b34:	ldr	w0, [x29, #60]
  401b38:	cmp	w0, #0x0
  401b3c:	mov	w1, #0x0                   	// #0
  401b40:	adrp	x0, 402000 <run+0x35c>
  401b44:	add	x0, x0, #0x588
  401b48:	bl	401040 <access@plt>
  401b4c:	mvn	w0, w0
  401b50:	lsr	w0, w0, #31
  401b54:	and	w1, w0, #0xff
  401b58:	ldr	x0, [x29, #40]
  401b5c:	strb	w1, [x0, #40]
  401b60:	ldr	x0, [x29, #40]
  401b64:	ldrb	w0, [x0, #40]
  401b68:	cmp	w0, #0x0
  401b6c:	b.eq	401b78 <clock_state_update+0x38c>  // b.none
  401b70:	str	wzr, [x29, #52]
  401b74:	b	401c4c <clock_state_update+0x460>
  401b78:	ldr	x0, [x29, #40]
  401b7c:	ldr	w0, [x0, #4]
  401b80:	cmp	w0, #0x5
  401b84:	b.ne	401c48 <clock_state_update+0x45c>  // b.any
  401b88:	ldr	x0, [x29, #40]
  401b8c:	add	x1, x0, #0x8
  401b90:	ldr	x0, [x29, #40]
  401b94:	ldr	w2, [x0]
  401b98:	ldr	x5, [x29, #40]
  401b9c:	adrp	x0, 401000 <adjtimex@plt>
  401ba0:	add	x4, x0, #0x548
  401ba4:	mov	w3, #0x1                   	// #1
  401ba8:	ldr	x0, [x29, #32]
  401bac:	bl	4010f0 <sd_event_add_io@plt>
  401bb0:	str	w0, [x29, #52]
  401bb4:	ldr	w0, [x29, #52]
  401bb8:	cmp	w0, #0x0
  401bbc:	b.ge	401c3c <clock_state_update+0x450>  // b.tcont
  401bc0:	mov	w0, #0x3                   	// #3
  401bc4:	str	w0, [x29, #68]
  401bc8:	ldr	w0, [x29, #52]
  401bcc:	str	w0, [x29, #72]
  401bd0:	str	wzr, [x29, #76]
  401bd4:	ldr	w0, [x29, #76]
  401bd8:	bl	401170 <log_get_max_level_realm@plt>
  401bdc:	mov	w1, w0
  401be0:	ldr	w0, [x29, #68]
  401be4:	and	w0, w0, #0x7
  401be8:	cmp	w1, w0
  401bec:	b.lt	401c30 <clock_state_update+0x444>  // b.tstop
  401bf0:	ldr	w0, [x29, #76]
  401bf4:	lsl	w1, w0, #10
  401bf8:	ldr	w0, [x29, #68]
  401bfc:	orr	w6, w1, w0
  401c00:	adrp	x0, 402000 <run+0x35c>
  401c04:	add	x1, x0, #0x4c3
  401c08:	adrp	x0, 402000 <run+0x35c>
  401c0c:	add	x5, x0, #0x5b0
  401c10:	adrp	x0, 402000 <run+0x35c>
  401c14:	add	x4, x0, #0x7e0
  401c18:	mov	w3, #0xad                  	// #173
  401c1c:	mov	x2, x1
  401c20:	ldr	w1, [x29, #72]
  401c24:	mov	w0, w6
  401c28:	bl	4010e0 <log_internal_realm@plt>
  401c2c:	b	401c4c <clock_state_update+0x460>
  401c30:	ldr	w0, [x29, #72]
  401c34:	cmp	w0, #0x0
  401c38:	b	401c4c <clock_state_update+0x460>
  401c3c:	mov	w0, #0x1                   	// #1
  401c40:	str	w0, [x29, #52]
  401c44:	b	401c4c <clock_state_update+0x460>
  401c48:	str	wzr, [x29, #52]
  401c4c:	ldr	w0, [x29, #52]
  401c50:	cmp	w0, #0x0
  401c54:	b.gt	401c64 <clock_state_update+0x478>
  401c58:	ldr	w1, [x29, #52]
  401c5c:	ldr	x0, [x29, #32]
  401c60:	bl	401130 <sd_event_exit@plt>
  401c64:	ldr	w0, [x29, #52]
  401c68:	mov	sp, x20
  401c6c:	mov	w1, w0
  401c70:	adrp	x0, 412000 <__FRAME_END__+0xf4d8>
  401c74:	add	x0, x0, #0xc98
  401c78:	ldr	x2, [x29, #360]
  401c7c:	ldr	x0, [x0]
  401c80:	eor	x0, x2, x0
  401c84:	cmp	x0, #0x0
  401c88:	b.eq	401c90 <clock_state_update+0x4a4>  // b.none
  401c8c:	bl	4010b0 <__stack_chk_fail@plt>
  401c90:	mov	w0, w1
  401c94:	mov	sp, x29
  401c98:	ldp	x19, x20, [sp, #16]
  401c9c:	ldp	x29, x30, [sp], #368
  401ca0:	ret

0000000000401ca4 <run>:
  401ca4:	stp	x29, x30, [sp, #-224]!
  401ca8:	mov	x29, sp
  401cac:	str	x19, [sp, #16]
  401cb0:	str	w0, [sp, #44]
  401cb4:	str	x1, [sp, #32]
  401cb8:	adrp	x0, 412000 <__FRAME_END__+0xf4d8>
  401cbc:	add	x0, x0, #0xc98
  401cc0:	ldr	x1, [x0]
  401cc4:	str	x1, [sp, #216]
  401cc8:	mov	x1, #0x0                   	// #0
  401ccc:	stp	xzr, xzr, [sp, #168]
  401cd0:	stp	xzr, xzr, [sp, #184]
  401cd4:	stp	xzr, xzr, [sp, #200]
  401cd8:	mov	w0, #0xffffffff            	// #-1
  401cdc:	str	w0, [sp, #168]
  401ce0:	mov	w0, #0xffffffff            	// #-1
  401ce4:	str	w0, [sp, #184]
  401ce8:	mov	w0, #0xffffffff            	// #-1
  401cec:	str	w0, [sp, #200]
  401cf0:	mov	w0, #0xffffffff            	// #-1
  401cf4:	str	w0, [sp, #204]
  401cf8:	mov	w4, #0xffffffff            	// #-1
  401cfc:	mov	w3, #0x2                   	// #2
  401d00:	mov	w2, #0xf                   	// #15
  401d04:	mov	x1, #0x0                   	// #0
  401d08:	mov	w0, #0x0                   	// #0
  401d0c:	bl	401050 <sigprocmask_many@plt>
  401d10:	lsr	w0, w0, #31
  401d14:	and	w0, w0, #0xff
  401d18:	and	x0, x0, #0xff
  401d1c:	cmp	x0, #0x0
  401d20:	b.eq	401d4c <run+0xa8>  // b.none
  401d24:	adrp	x0, 402000 <run+0x35c>
  401d28:	add	x1, x0, #0x4c3
  401d2c:	adrp	x0, 402000 <run+0x35c>
  401d30:	add	x4, x0, #0x7f8
  401d34:	mov	w3, #0xc5                  	// #197
  401d38:	mov	x2, x1
  401d3c:	adrp	x0, 402000 <run+0x35c>
  401d40:	add	x1, x0, #0x5e0
  401d44:	mov	w0, #0x0                   	// #0
  401d48:	bl	401020 <log_assert_failed_realm@plt>
  401d4c:	add	x0, sp, #0xa0
  401d50:	bl	400fc0 <sd_event_default@plt>
  401d54:	str	w0, [sp, #48]
  401d58:	ldr	w0, [sp, #48]
  401d5c:	cmp	w0, #0x0
  401d60:	b.ge	401df0 <run+0x14c>  // b.tcont
  401d64:	mov	w0, #0x3                   	// #3
  401d68:	str	w0, [sp, #148]
  401d6c:	ldr	w0, [sp, #48]
  401d70:	str	w0, [sp, #152]
  401d74:	str	wzr, [sp, #156]
  401d78:	ldr	w0, [sp, #156]
  401d7c:	bl	401170 <log_get_max_level_realm@plt>
  401d80:	mov	w1, w0
  401d84:	ldr	w0, [sp, #148]
  401d88:	and	w0, w0, #0x7
  401d8c:	cmp	w1, w0
  401d90:	b.lt	401dd8 <run+0x134>  // b.tstop
  401d94:	ldr	w0, [sp, #156]
  401d98:	lsl	w1, w0, #10
  401d9c:	ldr	w0, [sp, #148]
  401da0:	orr	w6, w1, w0
  401da4:	adrp	x0, 402000 <run+0x35c>
  401da8:	add	x1, x0, #0x4c3
  401dac:	adrp	x0, 402000 <run+0x35c>
  401db0:	add	x5, x0, #0x620
  401db4:	adrp	x0, 402000 <run+0x35c>
  401db8:	add	x4, x0, #0x800
  401dbc:	mov	w3, #0xc9                  	// #201
  401dc0:	mov	x2, x1
  401dc4:	ldr	w1, [sp, #152]
  401dc8:	mov	w0, w6
  401dcc:	bl	4010e0 <log_internal_realm@plt>
  401dd0:	mov	w19, w0
  401dd4:	b	40236c <run+0x6c8>
  401dd8:	ldr	w0, [sp, #152]
  401ddc:	cmp	w0, #0x0
  401de0:	cneg	w0, w0, lt  // lt = tstop
  401de4:	and	w0, w0, #0xff
  401de8:	neg	w19, w0
  401dec:	b	40236c <run+0x6c8>
  401df0:	ldr	x0, [sp, #160]
  401df4:	mov	x4, #0x0                   	// #0
  401df8:	mov	x3, #0x0                   	// #0
  401dfc:	mov	w2, #0xf                   	// #15
  401e00:	mov	x1, #0x0                   	// #0
  401e04:	bl	401160 <sd_event_add_signal@plt>
  401e08:	str	w0, [sp, #48]
  401e0c:	ldr	w0, [sp, #48]
  401e10:	cmp	w0, #0x0
  401e14:	b.ge	401ea4 <run+0x200>  // b.tcont
  401e18:	mov	w0, #0x3                   	// #3
  401e1c:	str	w0, [sp, #136]
  401e20:	ldr	w0, [sp, #48]
  401e24:	str	w0, [sp, #140]
  401e28:	str	wzr, [sp, #144]
  401e2c:	ldr	w0, [sp, #144]
  401e30:	bl	401170 <log_get_max_level_realm@plt>
  401e34:	mov	w1, w0
  401e38:	ldr	w0, [sp, #136]
  401e3c:	and	w0, w0, #0x7
  401e40:	cmp	w1, w0
  401e44:	b.lt	401e8c <run+0x1e8>  // b.tstop
  401e48:	ldr	w0, [sp, #144]
  401e4c:	lsl	w1, w0, #10
  401e50:	ldr	w0, [sp, #136]
  401e54:	orr	w6, w1, w0
  401e58:	adrp	x0, 402000 <run+0x35c>
  401e5c:	add	x1, x0, #0x4c3
  401e60:	adrp	x0, 402000 <run+0x35c>
  401e64:	add	x5, x0, #0x648
  401e68:	adrp	x0, 402000 <run+0x35c>
  401e6c:	add	x4, x0, #0x800
  401e70:	mov	w3, #0xcd                  	// #205
  401e74:	mov	x2, x1
  401e78:	ldr	w1, [sp, #140]
  401e7c:	mov	w0, w6
  401e80:	bl	4010e0 <log_internal_realm@plt>
  401e84:	mov	w19, w0
  401e88:	b	40236c <run+0x6c8>
  401e8c:	ldr	w0, [sp, #140]
  401e90:	cmp	w0, #0x0
  401e94:	cneg	w0, w0, lt  // lt = tstop
  401e98:	and	w0, w0, #0xff
  401e9c:	neg	w19, w0
  401ea0:	b	40236c <run+0x6c8>
  401ea4:	ldr	x0, [sp, #160]
  401ea8:	mov	x4, #0x0                   	// #0
  401eac:	mov	x3, #0x0                   	// #0
  401eb0:	mov	w2, #0x2                   	// #2
  401eb4:	mov	x1, #0x0                   	// #0
  401eb8:	bl	401160 <sd_event_add_signal@plt>
  401ebc:	str	w0, [sp, #48]
  401ec0:	ldr	w0, [sp, #48]
  401ec4:	cmp	w0, #0x0
  401ec8:	b.ge	401f58 <run+0x2b4>  // b.tcont
  401ecc:	mov	w0, #0x3                   	// #3
  401ed0:	str	w0, [sp, #124]
  401ed4:	ldr	w0, [sp, #48]
  401ed8:	str	w0, [sp, #128]
  401edc:	str	wzr, [sp, #132]
  401ee0:	ldr	w0, [sp, #132]
  401ee4:	bl	401170 <log_get_max_level_realm@plt>
  401ee8:	mov	w1, w0
  401eec:	ldr	w0, [sp, #124]
  401ef0:	and	w0, w0, #0x7
  401ef4:	cmp	w1, w0
  401ef8:	b.lt	401f40 <run+0x29c>  // b.tstop
  401efc:	ldr	w0, [sp, #132]
  401f00:	lsl	w1, w0, #10
  401f04:	ldr	w0, [sp, #124]
  401f08:	orr	w6, w1, w0
  401f0c:	adrp	x0, 402000 <run+0x35c>
  401f10:	add	x1, x0, #0x4c3
  401f14:	adrp	x0, 402000 <run+0x35c>
  401f18:	add	x5, x0, #0x678
  401f1c:	adrp	x0, 402000 <run+0x35c>
  401f20:	add	x4, x0, #0x800
  401f24:	mov	w3, #0xd1                  	// #209
  401f28:	mov	x2, x1
  401f2c:	ldr	w1, [sp, #128]
  401f30:	mov	w0, w6
  401f34:	bl	4010e0 <log_internal_realm@plt>
  401f38:	mov	w19, w0
  401f3c:	b	40236c <run+0x6c8>
  401f40:	ldr	w0, [sp, #128]
  401f44:	cmp	w0, #0x0
  401f48:	cneg	w0, w0, lt  // lt = tstop
  401f4c:	and	w0, w0, #0xff
  401f50:	neg	w19, w0
  401f54:	b	40236c <run+0x6c8>
  401f58:	ldr	x0, [sp, #160]
  401f5c:	mov	w1, #0x1                   	// #1
  401f60:	bl	400f90 <sd_event_set_watchdog@plt>
  401f64:	str	w0, [sp, #48]
  401f68:	ldr	w0, [sp, #48]
  401f6c:	cmp	w0, #0x0
  401f70:	b.ge	402000 <run+0x35c>  // b.tcont
  401f74:	mov	w0, #0x3                   	// #3
  401f78:	str	w0, [sp, #112]
  401f7c:	ldr	w0, [sp, #48]
  401f80:	str	w0, [sp, #116]
  401f84:	str	wzr, [sp, #120]
  401f88:	ldr	w0, [sp, #120]
  401f8c:	bl	401170 <log_get_max_level_realm@plt>
  401f90:	mov	w1, w0
  401f94:	ldr	w0, [sp, #112]
  401f98:	and	w0, w0, #0x7
  401f9c:	cmp	w1, w0
  401fa0:	b.lt	401fe8 <run+0x344>  // b.tstop
  401fa4:	ldr	w0, [sp, #120]
  401fa8:	lsl	w1, w0, #10
  401fac:	ldr	w0, [sp, #112]
  401fb0:	orr	w6, w1, w0
  401fb4:	adrp	x0, 402000 <run+0x35c>
  401fb8:	add	x1, x0, #0x4c3
  401fbc:	adrp	x0, 402000 <run+0x35c>
  401fc0:	add	x5, x0, #0x6a8
  401fc4:	adrp	x0, 402000 <run+0x35c>
  401fc8:	add	x4, x0, #0x800
  401fcc:	mov	w3, #0xd5                  	// #213
  401fd0:	mov	x2, x1
  401fd4:	ldr	w1, [sp, #116]
  401fd8:	mov	w0, w6
  401fdc:	bl	4010e0 <log_internal_realm@plt>
  401fe0:	mov	w19, w0
  401fe4:	b	40236c <run+0x6c8>
  401fe8:	ldr	w0, [sp, #116]
  401fec:	cmp	w0, #0x0
  401ff0:	cneg	w0, w0, lt  // lt = tstop
  401ff4:	and	w0, w0, #0xff
  401ff8:	neg	w19, w0
  401ffc:	b	40236c <run+0x6c8>
  402000:	mov	w0, #0x800                 	// #2048
  402004:	movk	w0, #0x8, lsl #16
  402008:	bl	401120 <inotify_init1@plt>
  40200c:	str	w0, [sp, #48]
  402010:	ldr	w0, [sp, #48]
  402014:	cmp	w0, #0x0
  402018:	b.ge	4020ac <run+0x408>  // b.tcont
  40201c:	mov	w0, #0x3                   	// #3
  402020:	str	w0, [sp, #100]
  402024:	bl	401090 <__errno_location@plt>
  402028:	ldr	w0, [x0]
  40202c:	str	w0, [sp, #104]
  402030:	str	wzr, [sp, #108]
  402034:	ldr	w0, [sp, #108]
  402038:	bl	401170 <log_get_max_level_realm@plt>
  40203c:	mov	w1, w0
  402040:	ldr	w0, [sp, #100]
  402044:	and	w0, w0, #0x7
  402048:	cmp	w1, w0
  40204c:	b.lt	402094 <run+0x3f0>  // b.tstop
  402050:	ldr	w0, [sp, #108]
  402054:	lsl	w1, w0, #10
  402058:	ldr	w0, [sp, #100]
  40205c:	orr	w6, w1, w0
  402060:	adrp	x0, 402000 <run+0x35c>
  402064:	add	x1, x0, #0x4c3
  402068:	adrp	x0, 402000 <run+0x35c>
  40206c:	add	x5, x0, #0x6d8
  402070:	adrp	x0, 402000 <run+0x35c>
  402074:	add	x4, x0, #0x800
  402078:	mov	w3, #0xd9                  	// #217
  40207c:	mov	x2, x1
  402080:	ldr	w1, [sp, #104]
  402084:	mov	w0, w6
  402088:	bl	4010e0 <log_internal_realm@plt>
  40208c:	mov	w19, w0
  402090:	b	40236c <run+0x6c8>
  402094:	ldr	w0, [sp, #104]
  402098:	cmp	w0, #0x0
  40209c:	cneg	w0, w0, lt  // lt = tstop
  4020a0:	and	w0, w0, #0xff
  4020a4:	neg	w19, w0
  4020a8:	b	40236c <run+0x6c8>
  4020ac:	ldr	w0, [sp, #48]
  4020b0:	str	w0, [sp, #184]
  4020b4:	ldr	x6, [sp, #160]
  4020b8:	ldr	w2, [sp, #184]
  4020bc:	add	x3, sp, #0xa8
  4020c0:	add	x0, sp, #0xa8
  4020c4:	add	x1, x0, #0x18
  4020c8:	mov	x5, x3
  4020cc:	adrp	x0, 401000 <adjtimex@plt>
  4020d0:	add	x4, x0, #0x63c
  4020d4:	mov	w3, #0x1                   	// #1
  4020d8:	mov	x0, x6
  4020dc:	bl	4010f0 <sd_event_add_io@plt>
  4020e0:	str	w0, [sp, #48]
  4020e4:	ldr	w0, [sp, #48]
  4020e8:	cmp	w0, #0x0
  4020ec:	b.ge	40217c <run+0x4d8>  // b.tcont
  4020f0:	mov	w0, #0x3                   	// #3
  4020f4:	str	w0, [sp, #88]
  4020f8:	ldr	w0, [sp, #48]
  4020fc:	str	w0, [sp, #92]
  402100:	str	wzr, [sp, #96]
  402104:	ldr	w0, [sp, #96]
  402108:	bl	401170 <log_get_max_level_realm@plt>
  40210c:	mov	w1, w0
  402110:	ldr	w0, [sp, #88]
  402114:	and	w0, w0, #0x7
  402118:	cmp	w1, w0
  40211c:	b.lt	402164 <run+0x4c0>  // b.tstop
  402120:	ldr	w0, [sp, #96]
  402124:	lsl	w1, w0, #10
  402128:	ldr	w0, [sp, #88]
  40212c:	orr	w6, w1, w0
  402130:	adrp	x0, 402000 <run+0x35c>
  402134:	add	x1, x0, #0x4c3
  402138:	adrp	x0, 402000 <run+0x35c>
  40213c:	add	x5, x0, #0x700
  402140:	adrp	x0, 402000 <run+0x35c>
  402144:	add	x4, x0, #0x800
  402148:	mov	w3, #0xe0                  	// #224
  40214c:	mov	x2, x1
  402150:	ldr	w1, [sp, #92]
  402154:	mov	w0, w6
  402158:	bl	4010e0 <log_internal_realm@plt>
  40215c:	mov	w19, w0
  402160:	b	40236c <run+0x6c8>
  402164:	ldr	w0, [sp, #92]
  402168:	cmp	w0, #0x0
  40216c:	cneg	w0, w0, lt  // lt = tstop
  402170:	and	w0, w0, #0xff
  402174:	neg	w19, w0
  402178:	b	40236c <run+0x6c8>
  40217c:	ldr	w3, [sp, #184]
  402180:	mov	w2, #0x100                 	// #256
  402184:	adrp	x0, 402000 <run+0x35c>
  402188:	add	x1, x0, #0x730
  40218c:	mov	w0, w3
  402190:	bl	400f70 <inotify_add_watch_and_warn@plt>
  402194:	str	w0, [sp, #48]
  402198:	ldr	w0, [sp, #48]
  40219c:	cmp	w0, #0x0
  4021a0:	b.ge	4021ac <run+0x508>  // b.tcont
  4021a4:	ldr	w19, [sp, #48]
  4021a8:	b	40236c <run+0x6c8>
  4021ac:	ldr	w0, [sp, #48]
  4021b0:	str	w0, [sp, #200]
  4021b4:	add	x0, sp, #0xa8
  4021b8:	bl	401504 <update_notify_run_systemd_timesync>
  4021bc:	ldr	x1, [sp, #160]
  4021c0:	add	x0, sp, #0xa8
  4021c4:	bl	4017ec <clock_state_update>
  4021c8:	str	w0, [sp, #48]
  4021cc:	ldr	w0, [sp, #48]
  4021d0:	cmp	w0, #0x0
  4021d4:	b.le	402268 <run+0x5c4>
  4021d8:	ldr	x0, [sp, #160]
  4021dc:	bl	401100 <sd_event_loop@plt>
  4021e0:	str	w0, [sp, #48]
  4021e4:	ldr	w0, [sp, #48]
  4021e8:	cmp	w0, #0x0
  4021ec:	b.ge	402268 <run+0x5c4>  // b.tcont
  4021f0:	mov	w0, #0x3                   	// #3
  4021f4:	str	w0, [sp, #52]
  4021f8:	ldr	w0, [sp, #48]
  4021fc:	str	w0, [sp, #56]
  402200:	str	wzr, [sp, #60]
  402204:	ldr	w0, [sp, #60]
  402208:	bl	401170 <log_get_max_level_realm@plt>
  40220c:	mov	w1, w0
  402210:	ldr	w0, [sp, #52]
  402214:	and	w0, w0, #0x7
  402218:	cmp	w1, w0
  40221c:	b.lt	402260 <run+0x5bc>  // b.tstop
  402220:	ldr	w0, [sp, #60]
  402224:	lsl	w1, w0, #10
  402228:	ldr	w0, [sp, #52]
  40222c:	orr	w6, w1, w0
  402230:	adrp	x0, 402000 <run+0x35c>
  402234:	add	x1, x0, #0x4c3
  402238:	adrp	x0, 402000 <run+0x35c>
  40223c:	add	x5, x0, #0x740
  402240:	adrp	x0, 402000 <run+0x35c>
  402244:	add	x4, x0, #0x800
  402248:	mov	w3, #0xee                  	// #238
  40224c:	mov	x2, x1
  402250:	ldr	w1, [sp, #56]
  402254:	mov	w0, w6
  402258:	bl	4010e0 <log_internal_realm@plt>
  40225c:	b	402268 <run+0x5c4>
  402260:	ldr	w0, [sp, #56]
  402264:	cmp	w0, #0x0
  402268:	ldrb	w0, [sp, #208]
  40226c:	cmp	w0, #0x0
  402270:	b.eq	4022e8 <run+0x644>  // b.none
  402274:	mov	w0, #0x7                   	// #7
  402278:	str	w0, [sp, #64]
  40227c:	str	wzr, [sp, #68]
  402280:	str	wzr, [sp, #72]
  402284:	ldr	w0, [sp, #72]
  402288:	bl	401170 <log_get_max_level_realm@plt>
  40228c:	mov	w1, w0
  402290:	ldr	w0, [sp, #64]
  402294:	and	w0, w0, #0x7
  402298:	cmp	w1, w0
  40229c:	b.lt	4022e0 <run+0x63c>  // b.tstop
  4022a0:	ldr	w0, [sp, #72]
  4022a4:	lsl	w1, w0, #10
  4022a8:	ldr	w0, [sp, #64]
  4022ac:	orr	w6, w1, w0
  4022b0:	adrp	x0, 402000 <run+0x35c>
  4022b4:	add	x1, x0, #0x4c3
  4022b8:	adrp	x0, 402000 <run+0x35c>
  4022bc:	add	x5, x0, #0x760
  4022c0:	adrp	x0, 402000 <run+0x35c>
  4022c4:	add	x4, x0, #0x800
  4022c8:	mov	w3, #0xf2                  	// #242
  4022cc:	mov	x2, x1
  4022d0:	ldr	w1, [sp, #68]
  4022d4:	mov	w0, w6
  4022d8:	bl	4010e0 <log_internal_realm@plt>
  4022dc:	b	4022e8 <run+0x644>
  4022e0:	ldr	w0, [sp, #68]
  4022e4:	cmp	w0, #0x0
  4022e8:	ldr	w0, [sp, #172]
  4022ec:	cmp	w0, #0x5
  4022f0:	b.ne	402368 <run+0x6c4>  // b.any
  4022f4:	mov	w0, #0x6                   	// #6
  4022f8:	str	w0, [sp, #76]
  4022fc:	str	wzr, [sp, #80]
  402300:	str	wzr, [sp, #84]
  402304:	ldr	w0, [sp, #84]
  402308:	bl	401170 <log_get_max_level_realm@plt>
  40230c:	mov	w1, w0
  402310:	ldr	w0, [sp, #76]
  402314:	and	w0, w0, #0x7
  402318:	cmp	w1, w0
  40231c:	b.lt	402360 <run+0x6bc>  // b.tstop
  402320:	ldr	w0, [sp, #84]
  402324:	lsl	w1, w0, #10
  402328:	ldr	w0, [sp, #76]
  40232c:	orr	w6, w1, w0
  402330:	adrp	x0, 402000 <run+0x35c>
  402334:	add	x1, x0, #0x4c3
  402338:	adrp	x0, 402000 <run+0x35c>
  40233c:	add	x5, x0, #0x798
  402340:	adrp	x0, 402000 <run+0x35c>
  402344:	add	x4, x0, #0x800
  402348:	mov	w3, #0xf5                  	// #245
  40234c:	mov	x2, x1
  402350:	ldr	w1, [sp, #80]
  402354:	mov	w0, w6
  402358:	bl	4010e0 <log_internal_realm@plt>
  40235c:	b	402368 <run+0x6c4>
  402360:	ldr	w0, [sp, #80]
  402364:	cmp	w0, #0x0
  402368:	ldr	w19, [sp, #48]
  40236c:	add	x0, sp, #0xa8
  402370:	bl	4014b4 <clock_state_release>
  402374:	add	x0, sp, #0xa0
  402378:	bl	401348 <sd_event_unrefp>
  40237c:	mov	w1, w19
  402380:	adrp	x0, 412000 <__FRAME_END__+0xf4d8>
  402384:	add	x0, x0, #0xc98
  402388:	ldr	x2, [sp, #216]
  40238c:	ldr	x0, [x0]
  402390:	eor	x0, x2, x0
  402394:	cmp	x0, #0x0
  402398:	b.eq	4023a0 <run+0x6fc>  // b.none
  40239c:	bl	4010b0 <__stack_chk_fail@plt>
  4023a0:	mov	w0, w1
  4023a4:	ldr	x19, [sp, #16]
  4023a8:	ldp	x29, x30, [sp], #224
  4023ac:	ret

00000000004023b0 <main>:
  4023b0:	stp	x29, x30, [sp, #-48]!
  4023b4:	mov	x29, sp
  4023b8:	str	w0, [sp, #28]
  4023bc:	str	x1, [sp, #16]
  4023c0:	ldr	x1, [sp, #16]
  4023c4:	ldr	w0, [sp, #28]
  4023c8:	bl	4013ac <save_argc_argv>
  4023cc:	ldr	x1, [sp, #16]
  4023d0:	ldr	w0, [sp, #28]
  4023d4:	bl	401ca4 <run>
  4023d8:	str	w0, [sp, #44]
  4023dc:	bl	4010c0 <ask_password_agent_close@plt>
  4023e0:	bl	400fb0 <polkit_agent_close@plt>
  4023e4:	bl	4010d0 <pager_close@plt>
  4023e8:	bl	401150 <mac_selinux_finish@plt>
  4023ec:	bl	4013e4 <static_destruct>
  4023f0:	ldr	w0, [sp, #44]
  4023f4:	lsr	w0, w0, #31
  4023f8:	ldp	x29, x30, [sp], #48
  4023fc:	ret

0000000000402400 <__libc_csu_init>:
  402400:	stp	x29, x30, [sp, #-64]!
  402404:	mov	x29, sp
  402408:	stp	x19, x20, [sp, #16]
  40240c:	adrp	x20, 412000 <__FRAME_END__+0xf4d8>
  402410:	add	x20, x20, #0xc90
  402414:	stp	x21, x22, [sp, #32]
  402418:	adrp	x21, 412000 <__FRAME_END__+0xf4d8>
  40241c:	add	x21, x21, #0xc88
  402420:	sub	x20, x20, x21
  402424:	mov	w22, w0
  402428:	stp	x23, x24, [sp, #48]
  40242c:	mov	x23, x1
  402430:	mov	x24, x2
  402434:	bl	400f30 <_init>
  402438:	cmp	xzr, x20, asr #3
  40243c:	b.eq	402468 <__libc_csu_init+0x68>  // b.none
  402440:	asr	x20, x20, #3
  402444:	mov	x19, #0x0                   	// #0
  402448:	ldr	x3, [x21, x19, lsl #3]
  40244c:	mov	x2, x24
  402450:	add	x19, x19, #0x1
  402454:	mov	x1, x23
  402458:	mov	w0, w22
  40245c:	blr	x3
  402460:	cmp	x20, x19
  402464:	b.ne	402448 <__libc_csu_init+0x48>  // b.any
  402468:	ldp	x19, x20, [sp, #16]
  40246c:	ldp	x21, x22, [sp, #32]
  402470:	ldp	x23, x24, [sp, #48]
  402474:	ldp	x29, x30, [sp], #64
  402478:	ret
  40247c:	nop

0000000000402480 <__libc_csu_fini>:
  402480:	ret

Disassembly of section .fini:

0000000000402484 <_fini>:
  402484:	stp	x29, x30, [sp, #-16]!
  402488:	mov	x29, sp
  40248c:	ldp	x29, x30, [sp], #16
  402490:	ret
