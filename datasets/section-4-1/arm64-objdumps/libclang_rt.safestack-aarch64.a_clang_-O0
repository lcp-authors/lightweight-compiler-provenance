In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.safestack-aarch64.a_clang_-O0:

interception_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN14__interception17InterceptFunctionEPKcPmmm>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x22, x0
  10:	mov	x19, x1
  14:	mov	x0, #0xffffffffffffffff    	// #-1
  18:	mov	x1, x22
  1c:	mov	x20, x3
  20:	mov	x21, x2
  24:	bl	0 <dlsym>
  28:	cbnz	x0, 3c <_ZN14__interception17InterceptFunctionEPKcPmmm+0x3c>
  2c:	mov	x1, x22
  30:	bl	0 <dlsym>
  34:	cmp	x0, x20
  38:	csel	x0, xzr, x0, eq  // eq = none
  3c:	cmp	x0, #0x0
  40:	str	x0, [x19]
  44:	cset	w8, ne  // ne = any
  48:	cmp	x21, x20
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x22, x21, [sp, #16]
  54:	cset	w9, eq  // eq = none
  58:	and	w8, w9, w8
  5c:	mov	w0, w8
  60:	ldr	x30, [sp], #48
  64:	ret

0000000000000068 <_ZN14__interception17InterceptFunctionEPKcS1_Pmmm>:
  68:	stp	x30, x21, [sp, #-32]!
  6c:	stp	x20, x19, [sp, #16]
  70:	mov	x21, x2
  74:	mov	x2, x1
  78:	mov	x1, x0
  7c:	mov	x0, #0xffffffffffffffff    	// #-1
  80:	mov	x19, x4
  84:	mov	x20, x3
  88:	bl	0 <dlvsym>
  8c:	cmp	x0, #0x0
  90:	str	x0, [x21]
  94:	cset	w8, ne  // ne = any
  98:	cmp	x20, x19
  9c:	ldp	x20, x19, [sp, #16]
  a0:	cset	w9, eq  // eq = none
  a4:	and	w8, w9, w8
  a8:	mov	w0, w8
  ac:	ldp	x30, x21, [sp], #32
  b0:	ret

interception_mac.cpp.o:     file format elf64-littleaarch64


interception_win.cpp.o:     file format elf64-littleaarch64


interception_type_test.cpp.o:     file format elf64-littleaarch64


safestack.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__interceptor_pthread_create>:
   0:	sub	sp, sp, #0x90
   4:	str	x30, [sp, #80]
   8:	stp	x24, x23, [sp, #96]
   c:	stp	x22, x21, [sp, #112]
  10:	stp	x20, x19, [sp, #128]
  14:	adrp	x23, 0 <__interceptor_pthread_create>
  18:	add	x23, x23, #0x0
  1c:	mov	x20, x0
  20:	add	x0, x23, #0x18
  24:	mov	x21, x3
  28:	mov	x22, x2
  2c:	mov	x19, x1
  30:	bl	0 <pthread_mutex_lock>
  34:	ldrb	w8, [x23]
  38:	tbnz	w8, #0, 64 <__interceptor_pthread_create+0x64>
  3c:	adrp	x2, 0 <__interceptor_pthread_create>
  40:	adrp	x3, 0 <__interceptor_pthread_create>
  44:	ldr	x2, [x2]
  48:	ldr	x3, [x3]
  4c:	adrp	x0, 0 <__interceptor_pthread_create>
  50:	add	x1, x23, #0x8
  54:	add	x0, x0, #0x0
  58:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
  5c:	mov	w8, #0x1                   	// #1
  60:	strb	w8, [x23]
  64:	adrp	x0, 0 <__interceptor_pthread_create>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <pthread_mutex_unlock>
  70:	str	xzr, [sp, #88]
  74:	str	xzr, [sp, #72]
  78:	cbz	x19, 144 <__interceptor_pthread_create+0x144>
  7c:	add	x1, sp, #0x58
  80:	mov	x0, x19
  84:	bl	0 <pthread_attr_getstacksize>
  88:	add	x1, sp, #0x48
  8c:	mov	x0, x19
  90:	bl	0 <pthread_attr_getguardsize>
  94:	ldr	x8, [sp, #88]
  98:	cbz	x8, 174 <__interceptor_pthread_create+0x174>
  9c:	ldr	x23, [sp, #72]
  a0:	add	x8, x8, #0xf
  a4:	and	x8, x8, #0xfffffffffffffff0
  a8:	str	x8, [sp, #88]
  ac:	adds	x2, x23, x8
  b0:	b.cs	1a4 <__interceptor_pthread_create+0x1a4>  // b.hs, b.nlast
  b4:	mov	w0, #0xde                  	// #222
  b8:	mov	w3, #0x3                   	// #3
  bc:	mov	w4, #0x22                  	// #34
  c0:	mov	w5, #0xffffffff            	// #-1
  c4:	mov	x1, xzr
  c8:	mov	x6, xzr
  cc:	bl	0 <syscall>
  d0:	cmn	x0, #0x1
  d4:	b.eq	1d4 <__interceptor_pthread_create+0x1d4>  // b.none
  d8:	mov	x24, x0
  dc:	mov	w0, #0xe2                  	// #226
  e0:	mov	x1, x24
  e4:	mov	x2, x23
  e8:	mov	w3, wzr
  ec:	bl	0 <syscall>
  f0:	ldr	x8, [sp, #88]
  f4:	add	x9, x24, x23
  f8:	adrp	x2, 0 <__interceptor_pthread_create>
  fc:	add	x2, x2, #0x0
 100:	add	x3, x9, x8
 104:	str	x22, [x3, #-40]!
 108:	stp	x21, x9, [x3, #8]
 10c:	str	x8, [x3, #24]
 110:	ldr	x8, [sp, #72]
 114:	mov	x0, x20
 118:	mov	x1, x19
 11c:	str	x8, [x3, #32]
 120:	adrp	x8, 0 <__interceptor_pthread_create>
 124:	ldr	x8, [x8]
 128:	blr	x8
 12c:	ldp	x20, x19, [sp, #128]
 130:	ldp	x22, x21, [sp, #112]
 134:	ldp	x24, x23, [sp, #96]
 138:	ldr	x30, [sp, #80]
 13c:	add	sp, sp, #0x90
 140:	ret
 144:	add	x0, sp, #0x8
 148:	bl	0 <pthread_attr_init>
 14c:	add	x0, sp, #0x8
 150:	add	x1, sp, #0x58
 154:	bl	0 <pthread_attr_getstacksize>
 158:	add	x0, sp, #0x8
 15c:	add	x1, sp, #0x48
 160:	bl	0 <pthread_attr_getguardsize>
 164:	add	x0, sp, #0x8
 168:	bl	0 <pthread_attr_destroy>
 16c:	ldr	x8, [sp, #88]
 170:	cbnz	x8, 9c <__interceptor_pthread_create+0x9c>
 174:	adrp	x8, 0 <stderr>
 178:	ldr	x8, [x8]
 17c:	adrp	x1, 0 <__interceptor_pthread_create>
 180:	adrp	x2, 0 <__interceptor_pthread_create>
 184:	adrp	x4, 0 <__interceptor_pthread_create>
 188:	ldr	x0, [x8]
 18c:	add	x1, x1, #0x0
 190:	add	x2, x2, #0x0
 194:	add	x4, x4, #0x0
 198:	mov	w3, #0xe3                  	// #227
 19c:	bl	0 <fprintf>
 1a0:	bl	0 <abort>
 1a4:	adrp	x8, 0 <stderr>
 1a8:	ldr	x8, [x8]
 1ac:	adrp	x1, 0 <__interceptor_pthread_create>
 1b0:	adrp	x2, 0 <__interceptor_pthread_create>
 1b4:	adrp	x4, 0 <__interceptor_pthread_create>
 1b8:	ldr	x0, [x8]
 1bc:	add	x1, x1, #0x0
 1c0:	add	x2, x2, #0x0
 1c4:	add	x4, x4, #0x0
 1c8:	mov	w3, #0x5c                  	// #92
 1cc:	bl	0 <fprintf>
 1d0:	bl	0 <abort>
 1d4:	adrp	x8, 0 <stderr>
 1d8:	ldr	x8, [x8]
 1dc:	adrp	x1, 0 <__interceptor_pthread_create>
 1e0:	adrp	x2, 0 <__interceptor_pthread_create>
 1e4:	adrp	x4, 0 <__interceptor_pthread_create>
 1e8:	ldr	x0, [x8]
 1ec:	add	x1, x1, #0x0
 1f0:	add	x2, x2, #0x0
 1f4:	add	x4, x4, #0x0
 1f8:	mov	w3, #0x5f                  	// #95
 1fc:	bl	0 <fprintf>
 200:	bl	0 <abort>

0000000000000204 <_ZN12_GLOBAL__N_112thread_startEPv>:
 204:	sub	sp, sp, #0x20
 208:	stp	x30, x19, [sp, #16]
 20c:	ldr	x8, [x0, #24]
 210:	tbnz	x8, #63, 2b0 <_ZN12_GLOBAL__N_112thread_startEPv+0xac>
 214:	ldr	x9, [x0, #32]
 218:	tbnz	x9, #63, 2e0 <_ZN12_GLOBAL__N_112thread_startEPv+0xdc>
 21c:	ldr	x10, [x0, #16]
 220:	add	x11, x10, x8
 224:	tst	x11, #0xf
 228:	b.ne	310 <_ZN12_GLOBAL__N_112thread_startEPv+0x10c>  // b.any
 22c:	ldp	x1, x19, [x0]
 230:	str	x1, [sp, #8]
 234:	adrp	x0, 0 <__interceptor_pthread_create>
 238:	ldr	x1, [x0]
 23c:	add	x0, x0, #0x0
 240:	blr	x1
 244:	mrs	x12, tpidr_el0
 248:	str	x11, [x12, x0]
 24c:	adrp	x0, 8 <__interceptor_pthread_create+0x8>
 250:	ldr	x1, [x0]
 254:	add	x0, x0, #0x0
 258:	blr	x1
 25c:	str	x10, [x12, x0]
 260:	adrp	x0, 10 <__interceptor_pthread_create+0x10>
 264:	ldr	x1, [x0]
 268:	add	x0, x0, #0x0
 26c:	blr	x1
 270:	str	x8, [x12, x0]
 274:	adrp	x0, 18 <__interceptor_pthread_create+0x18>
 278:	ldr	x1, [x0]
 27c:	add	x0, x0, #0x0
 280:	blr	x1
 284:	adrp	x8, 0 <__interceptor_pthread_create>
 288:	ldr	w8, [x8]
 28c:	str	x9, [x12, x0]
 290:	mov	w1, #0x1                   	// #1
 294:	mov	w0, w8
 298:	bl	0 <pthread_setspecific>
 29c:	mov	x0, x19
 2a0:	ldr	x1, [sp, #8]
 2a4:	ldp	x30, x19, [sp, #16]
 2a8:	add	sp, sp, #0x20
 2ac:	br	x1
 2b0:	adrp	x8, 0 <stderr>
 2b4:	ldr	x8, [x8]
 2b8:	adrp	x1, 0 <__interceptor_pthread_create>
 2bc:	adrp	x2, 0 <__interceptor_pthread_create>
 2c0:	adrp	x4, 0 <__interceptor_pthread_create>
 2c4:	ldr	x0, [x8]
 2c8:	add	x1, x1, #0x0
 2cc:	add	x2, x2, #0x0
 2d0:	add	x4, x4, #0x0
 2d4:	mov	w3, #0x65                  	// #101
 2d8:	bl	0 <fprintf>
 2dc:	bl	0 <abort>
 2e0:	adrp	x8, 0 <stderr>
 2e4:	ldr	x8, [x8]
 2e8:	adrp	x1, 0 <__interceptor_pthread_create>
 2ec:	adrp	x2, 0 <__interceptor_pthread_create>
 2f0:	adrp	x4, 0 <__interceptor_pthread_create>
 2f4:	ldr	x0, [x8]
 2f8:	add	x1, x1, #0x0
 2fc:	add	x2, x2, #0x0
 300:	add	x4, x4, #0x0
 304:	mov	w3, #0x66                  	// #102
 308:	bl	0 <fprintf>
 30c:	bl	0 <abort>
 310:	adrp	x8, 0 <stderr>
 314:	ldr	x8, [x8]
 318:	adrp	x1, 0 <__interceptor_pthread_create>
 31c:	adrp	x2, 0 <__interceptor_pthread_create>
 320:	adrp	x4, 0 <__interceptor_pthread_create>
 324:	ldr	x0, [x8]
 328:	add	x1, x1, #0x0
 32c:	add	x2, x2, #0x0
 330:	add	x4, x4, #0x0
 334:	mov	w3, #0x68                  	// #104
 338:	bl	0 <fprintf>
 33c:	bl	0 <abort>

0000000000000340 <__safestack_init>:
 340:	sub	sp, sp, #0x30
 344:	str	x30, [sp, #16]
 348:	stp	x20, x19, [sp, #32]
 34c:	mov	x1, sp
 350:	mov	w0, #0x3                   	// #3
 354:	bl	0 <getrlimit>
 358:	ldr	x8, [sp]
 35c:	mov	w9, #0x2800000             	// #41943040
 360:	cmn	x8, #0x1
 364:	csel	x8, x9, x8, eq  // eq = none
 368:	cmp	w0, #0x0
 36c:	csel	x20, x8, x9, eq  // eq = none
 370:	cmn	x20, #0x1, lsl #12
 374:	b.cs	448 <__safestack_init+0x108>  // b.hs, b.nlast
 378:	add	x2, x20, #0x1, lsl #12
 37c:	mov	w0, #0xde                  	// #222
 380:	mov	w3, #0x3                   	// #3
 384:	mov	w4, #0x22                  	// #34
 388:	mov	w5, #0xffffffff            	// #-1
 38c:	mov	x1, xzr
 390:	mov	x6, xzr
 394:	bl	0 <syscall>
 398:	cmn	x0, #0x1
 39c:	b.eq	478 <__safestack_init+0x138>  // b.none
 3a0:	mov	x19, x0
 3a4:	mov	w0, #0xe2                  	// #226
 3a8:	mov	w2, #0x1000                	// #4096
 3ac:	mov	x1, x19
 3b0:	mov	w3, wzr
 3b4:	bl	0 <syscall>
 3b8:	tbnz	x20, #63, 4a8 <__safestack_init+0x168>
 3bc:	add	x8, x19, #0x1, lsl #12
 3c0:	add	x9, x8, x20
 3c4:	tst	x9, #0xf
 3c8:	b.ne	4d8 <__safestack_init+0x198>  // b.any
 3cc:	adrp	x0, 0 <__interceptor_pthread_create>
 3d0:	ldr	x1, [x0]
 3d4:	add	x0, x0, #0x0
 3d8:	blr	x1
 3dc:	mrs	x10, tpidr_el0
 3e0:	str	x9, [x10, x0]
 3e4:	adrp	x0, 8 <__interceptor_pthread_create+0x8>
 3e8:	ldr	x1, [x0]
 3ec:	add	x0, x0, #0x0
 3f0:	blr	x1
 3f4:	str	x8, [x10, x0]
 3f8:	adrp	x0, 10 <__interceptor_pthread_create+0x10>
 3fc:	ldr	x1, [x0]
 400:	add	x0, x0, #0x0
 404:	blr	x1
 408:	str	x20, [x10, x0]
 40c:	adrp	x0, 18 <__interceptor_pthread_create+0x18>
 410:	ldr	x1, [x0]
 414:	add	x0, x0, #0x0
 418:	blr	x1
 41c:	mov	w8, #0x1000                	// #4096
 420:	str	x8, [x10, x0]
 424:	adrp	x0, 0 <__interceptor_pthread_create>
 428:	adrp	x1, 0 <__interceptor_pthread_create>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	bl	0 <pthread_key_create>
 438:	ldp	x20, x19, [sp, #32]
 43c:	ldr	x30, [sp, #16]
 440:	add	sp, sp, #0x30
 444:	ret
 448:	adrp	x8, 0 <stderr>
 44c:	ldr	x8, [x8]
 450:	adrp	x1, 0 <__interceptor_pthread_create>
 454:	adrp	x2, 0 <__interceptor_pthread_create>
 458:	adrp	x4, 0 <__interceptor_pthread_create>
 45c:	ldr	x0, [x8]
 460:	add	x1, x1, #0x0
 464:	add	x2, x2, #0x0
 468:	add	x4, x4, #0x0
 46c:	mov	w3, #0x5c                  	// #92
 470:	bl	0 <fprintf>
 474:	bl	0 <abort>
 478:	adrp	x8, 0 <stderr>
 47c:	ldr	x8, [x8]
 480:	adrp	x1, 0 <__interceptor_pthread_create>
 484:	adrp	x2, 0 <__interceptor_pthread_create>
 488:	adrp	x4, 0 <__interceptor_pthread_create>
 48c:	ldr	x0, [x8]
 490:	add	x1, x1, #0x0
 494:	add	x2, x2, #0x0
 498:	add	x4, x4, #0x0
 49c:	mov	w3, #0x5f                  	// #95
 4a0:	bl	0 <fprintf>
 4a4:	bl	0 <abort>
 4a8:	adrp	x8, 0 <stderr>
 4ac:	ldr	x8, [x8]
 4b0:	adrp	x1, 0 <__interceptor_pthread_create>
 4b4:	adrp	x2, 0 <__interceptor_pthread_create>
 4b8:	adrp	x4, 0 <__interceptor_pthread_create>
 4bc:	ldr	x0, [x8]
 4c0:	add	x1, x1, #0x0
 4c4:	add	x2, x2, #0x0
 4c8:	add	x4, x4, #0x0
 4cc:	mov	w3, #0x65                  	// #101
 4d0:	bl	0 <fprintf>
 4d4:	bl	0 <abort>
 4d8:	adrp	x8, 0 <stderr>
 4dc:	ldr	x8, [x8]
 4e0:	adrp	x1, 0 <__interceptor_pthread_create>
 4e4:	adrp	x2, 0 <__interceptor_pthread_create>
 4e8:	adrp	x4, 0 <__interceptor_pthread_create>
 4ec:	ldr	x0, [x8]
 4f0:	add	x1, x1, #0x0
 4f4:	add	x2, x2, #0x0
 4f8:	add	x4, x4, #0x0
 4fc:	mov	w3, #0x68                  	// #104
 500:	bl	0 <fprintf>
 504:	bl	0 <abort>

0000000000000508 <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv>:
 508:	str	x30, [sp, #-64]!
 50c:	stp	x24, x23, [sp, #16]
 510:	stp	x22, x21, [sp, #32]
 514:	stp	x20, x19, [sp, #48]
 518:	adrp	x0, 8 <__interceptor_pthread_create+0x8>
 51c:	ldr	x1, [x0]
 520:	add	x0, x0, #0x0
 524:	blr	x1
 528:	mrs	x23, tpidr_el0
 52c:	ldr	x8, [x23, x0]
 530:	cbz	x8, 69c <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0x194>
 534:	adrp	x20, 0 <__interceptor_pthread_create>
 538:	add	x20, x20, #0x0
 53c:	ldr	w0, [x20]
 540:	mov	x1, xzr
 544:	bl	0 <pthread_setspecific>
 548:	add	x19, x20, #0x44
 54c:	mov	x0, x19
 550:	bl	0 <pthread_mutex_lock>
 554:	ldur	x21, [x20, #12]
 558:	mov	x0, x19
 55c:	stur	xzr, [x20, #12]
 560:	str	x21, [sp, #8]
 564:	bl	0 <pthread_mutex_unlock>
 568:	bl	0 <getpid>
 56c:	mov	w19, w0
 570:	mov	w0, #0xb2                  	// #178
 574:	bl	0 <syscall>
 578:	mov	x20, x0
 57c:	add	x24, sp, #0x8
 580:	cbnz	x21, 5ac <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0xa4>
 584:	b	5f0 <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0xe8>
 588:	ldp	x1, x2, [x21, #8]
 58c:	mov	w0, #0xd7                  	// #215
 590:	bl	0 <syscall>
 594:	ldr	x8, [x21]
 598:	mov	x0, x21
 59c:	str	x8, [x24]
 5a0:	bl	0 <free>
 5a4:	ldr	x21, [x24]
 5a8:	cbz	x21, 5f0 <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0xe8>
 5ac:	ldr	w8, [x21, #24]
 5b0:	cmp	w8, w19
 5b4:	b.ne	588 <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0x80>  // b.any
 5b8:	ldr	x2, [x21, #32]
 5bc:	mov	w0, #0x83                  	// #131
 5c0:	mov	w1, w19
 5c4:	mov	w3, wzr
 5c8:	bl	0 <syscall>
 5cc:	cmn	w0, #0x1
 5d0:	b.ne	5e4 <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0xdc>  // b.any
 5d4:	bl	0 <__errno_location>
 5d8:	ldr	w8, [x0]
 5dc:	cmp	w8, #0x3
 5e0:	b.eq	588 <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0x80>  // b.none
 5e4:	mov	x24, x21
 5e8:	ldr	x21, [x24]
 5ec:	cbnz	x21, 5ac <_ZN12_GLOBAL__N_122thread_cleanup_handlerEPv+0xa4>
 5f0:	mov	w0, #0x28                  	// #40
 5f4:	bl	0 <malloc>
 5f8:	mov	x21, x0
 5fc:	adrp	x0, 8 <__interceptor_pthread_create+0x8>
 600:	ldr	x1, [x0]
 604:	add	x0, x0, #0x0
 608:	blr	x1
 60c:	ldr	x8, [x23, x0]
 610:	mov	x22, x0
 614:	adrp	x0, 18 <__interceptor_pthread_create+0x18>
 618:	ldr	x1, [x0]
 61c:	add	x0, x0, #0x0
 620:	blr	x1
 624:	ldr	x9, [x23, x0]
 628:	sub	x8, x8, x9
 62c:	str	x8, [x21, #8]
 630:	adrp	x0, 10 <__interceptor_pthread_create+0x10>
 634:	ldr	x1, [x0]
 638:	add	x0, x0, #0x0
 63c:	blr	x1
 640:	ldr	x8, [x23, x0]
 644:	str	x20, [x21, #32]
 648:	adrp	x20, 0 <__interceptor_pthread_create>
 64c:	add	x20, x20, #0x0
 650:	str	w19, [x21, #24]
 654:	add	x19, x20, #0x38
 658:	add	x8, x8, x9
 65c:	mov	x0, x19
 660:	str	x8, [x21, #16]
 664:	bl	0 <pthread_mutex_lock>
 668:	ldr	x8, [x20]
 66c:	mov	x0, x19
 670:	str	x8, [x24]
 674:	ldr	x8, [sp, #8]
 678:	str	x21, [x20]
 67c:	str	x8, [x21]
 680:	bl	0 <pthread_mutex_unlock>
 684:	str	xzr, [x23, x22]
 688:	ldp	x20, x19, [sp, #48]
 68c:	ldp	x22, x21, [sp, #32]
 690:	ldp	x24, x23, [sp, #16]
 694:	ldr	x30, [sp], #64
 698:	ret
 69c:	adrp	x8, 0 <stderr>
 6a0:	ldr	x8, [x8]
 6a4:	adrp	x1, 0 <__interceptor_pthread_create>
 6a8:	adrp	x2, 0 <__interceptor_pthread_create>
 6ac:	adrp	x4, 0 <__interceptor_pthread_create>
 6b0:	ldr	x0, [x8]
 6b4:	add	x1, x1, #0x0
 6b8:	add	x2, x2, #0x0
 6bc:	add	x4, x4, #0x0
 6c0:	mov	w3, #0xa1                  	// #161
 6c4:	bl	0 <fprintf>
 6c8:	bl	0 <abort>

00000000000006cc <__get_unsafe_stack_bottom>:
 6cc:	str	x30, [sp, #-16]!
 6d0:	adrp	x0, 8 <__interceptor_pthread_create+0x8>
 6d4:	ldr	x1, [x0]
 6d8:	add	x0, x0, #0x0
 6dc:	blr	x1
 6e0:	mrs	x8, tpidr_el0
 6e4:	ldr	x0, [x8, x0]
 6e8:	ldr	x30, [sp], #16
 6ec:	ret

00000000000006f0 <__get_unsafe_stack_top>:
 6f0:	str	x30, [sp, #-16]!
 6f4:	adrp	x0, 8 <__interceptor_pthread_create+0x8>
 6f8:	ldr	x1, [x0]
 6fc:	add	x0, x0, #0x0
 700:	blr	x1
 704:	mrs	x8, tpidr_el0
 708:	ldr	x9, [x8, x0]
 70c:	adrp	x0, 10 <__interceptor_pthread_create+0x10>
 710:	ldr	x1, [x0]
 714:	add	x0, x0, #0x0
 718:	blr	x1
 71c:	ldr	x8, [x8, x0]
 720:	add	x0, x9, x8
 724:	ldr	x30, [sp], #16
 728:	ret

000000000000072c <__get_unsafe_stack_start>:
 72c:	str	x30, [sp, #-16]!
 730:	adrp	x0, 8 <__interceptor_pthread_create+0x8>
 734:	ldr	x1, [x0]
 738:	add	x0, x0, #0x0
 73c:	blr	x1
 740:	mrs	x8, tpidr_el0
 744:	ldr	x0, [x8, x0]
 748:	ldr	x30, [sp], #16
 74c:	ret

0000000000000750 <__get_unsafe_stack_ptr>:
 750:	str	x30, [sp, #-16]!
 754:	adrp	x0, 0 <__interceptor_pthread_create>
 758:	ldr	x1, [x0]
 75c:	add	x0, x0, #0x0
 760:	blr	x1
 764:	mrs	x8, tpidr_el0
 768:	ldr	x0, [x8, x0]
 76c:	ldr	x30, [sp], #16
 770:	ret
