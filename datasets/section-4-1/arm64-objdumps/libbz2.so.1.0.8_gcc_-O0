
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libbz2.so.1.0.8_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001470 <.init>:
    1470:	stp	x29, x30, [sp, #-16]!
    1474:	mov	x29, sp
    1478:	bl	1750 <ferror@plt+0x10>
    147c:	ldp	x29, x30, [sp], #16
    1480:	ret

Disassembly of section .plt:

0000000000001490 <strlen@plt-0x20>:
    1490:	stp	x16, x30, [sp, #-16]!
    1494:	adrp	x16, 28000 <BZ2_bzerror@@Base+0x11180>
    1498:	ldr	x17, [x16, #4088]
    149c:	add	x16, x16, #0xff8
    14a0:	br	x17
    14a4:	nop
    14a8:	nop
    14ac:	nop

00000000000014b0 <strlen@plt>:
    14b0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    14b4:	ldr	x17, [x16]
    14b8:	add	x16, x16, #0x0
    14bc:	br	x17

00000000000014c0 <BZ2_hbMakeCodeLengths@plt>:
    14c0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    14c4:	ldr	x17, [x16, #8]
    14c8:	add	x16, x16, #0x8
    14cc:	br	x17

00000000000014d0 <exit@plt>:
    14d0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    14d4:	ldr	x17, [x16, #16]
    14d8:	add	x16, x16, #0x10
    14dc:	br	x17

00000000000014e0 <__cxa_finalize@plt>:
    14e0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    14e4:	ldr	x17, [x16, #24]
    14e8:	add	x16, x16, #0x18
    14ec:	br	x17

00000000000014f0 <BZ2_bzlibVersion@plt>:
    14f0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    14f4:	ldr	x17, [x16, #32]
    14f8:	add	x16, x16, #0x20
    14fc:	br	x17

0000000000001500 <fputc@plt>:
    1500:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1504:	ldr	x17, [x16, #40]
    1508:	add	x16, x16, #0x28
    150c:	br	x17

0000000000001510 <fclose@plt>:
    1510:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1514:	ldr	x17, [x16, #48]
    1518:	add	x16, x16, #0x30
    151c:	br	x17

0000000000001520 <malloc@plt>:
    1520:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1524:	ldr	x17, [x16, #56]
    1528:	add	x16, x16, #0x38
    152c:	br	x17

0000000000001530 <BZ2_bzDecompressInit@plt>:
    1530:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1534:	ldr	x17, [x16, #64]
    1538:	add	x16, x16, #0x40
    153c:	br	x17

0000000000001540 <BZ2_bzDecompressEnd@plt>:
    1540:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1544:	ldr	x17, [x16, #72]
    1548:	add	x16, x16, #0x48
    154c:	br	x17

0000000000001550 <BZ2_bzReadClose@plt>:
    1550:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1554:	ldr	x17, [x16, #80]
    1558:	add	x16, x16, #0x50
    155c:	br	x17

0000000000001560 <strcat@plt>:
    1560:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1564:	ldr	x17, [x16, #88]
    1568:	add	x16, x16, #0x58
    156c:	br	x17

0000000000001570 <fgetc@plt>:
    1570:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1574:	ldr	x17, [x16, #96]
    1578:	add	x16, x16, #0x60
    157c:	br	x17

0000000000001580 <fdopen@plt>:
    1580:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1584:	ldr	x17, [x16, #104]
    1588:	add	x16, x16, #0x68
    158c:	br	x17

0000000000001590 <BZ2_bzWriteOpen@plt>:
    1590:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1594:	ldr	x17, [x16, #112]
    1598:	add	x16, x16, #0x70
    159c:	br	x17

00000000000015a0 <BZ2_bzCompressInit@plt>:
    15a0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    15a4:	ldr	x17, [x16, #120]
    15a8:	add	x16, x16, #0x78
    15ac:	br	x17

00000000000015b0 <BZ2_bzCompressEnd@plt>:
    15b0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    15b4:	ldr	x17, [x16, #128]
    15b8:	add	x16, x16, #0x80
    15bc:	br	x17

00000000000015c0 <BZ2_hbCreateDecodeTables@plt>:
    15c0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    15c4:	ldr	x17, [x16, #136]
    15c8:	add	x16, x16, #0x88
    15cc:	br	x17

00000000000015d0 <__gmon_start__@plt>:
    15d0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    15d4:	ldr	x17, [x16, #144]
    15d8:	add	x16, x16, #0x90
    15dc:	br	x17

00000000000015e0 <BZ2_decompress@plt>:
    15e0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    15e4:	ldr	x17, [x16, #152]
    15e8:	add	x16, x16, #0x98
    15ec:	br	x17

00000000000015f0 <BZ2_bzWriteClose@plt>:
    15f0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    15f4:	ldr	x17, [x16, #160]
    15f8:	add	x16, x16, #0xa0
    15fc:	br	x17

0000000000001600 <BZ2_bzCompress@plt>:
    1600:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1604:	ldr	x17, [x16, #168]
    1608:	add	x16, x16, #0xa8
    160c:	br	x17

0000000000001610 <BZ2_bzWrite@plt>:
    1610:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1614:	ldr	x17, [x16, #176]
    1618:	add	x16, x16, #0xb0
    161c:	br	x17

0000000000001620 <__ctype_b_loc@plt>:
    1620:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1624:	ldr	x17, [x16, #184]
    1628:	add	x16, x16, #0xb8
    162c:	br	x17

0000000000001630 <BZ2_compressBlock@plt>:
    1630:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1634:	ldr	x17, [x16, #192]
    1638:	add	x16, x16, #0xc0
    163c:	br	x17

0000000000001640 <fread@plt>:
    1640:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1644:	ldr	x17, [x16, #200]
    1648:	add	x16, x16, #0xc8
    164c:	br	x17

0000000000001650 <BZ2_bsInitWrite@plt>:
    1650:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1654:	ldr	x17, [x16, #208]
    1658:	add	x16, x16, #0xd0
    165c:	br	x17

0000000000001660 <free@plt>:
    1660:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1664:	ldr	x17, [x16, #216]
    1668:	add	x16, x16, #0xd8
    166c:	br	x17

0000000000001670 <ungetc@plt>:
    1670:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1674:	ldr	x17, [x16, #224]
    1678:	add	x16, x16, #0xe0
    167c:	br	x17

0000000000001680 <BZ2_bzDecompress@plt>:
    1680:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1684:	ldr	x17, [x16, #232]
    1688:	add	x16, x16, #0xe8
    168c:	br	x17

0000000000001690 <BZ2_blockSort@plt>:
    1690:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1694:	ldr	x17, [x16, #240]
    1698:	add	x16, x16, #0xf0
    169c:	br	x17

00000000000016a0 <BZ2_bzWriteClose64@plt>:
    16a0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    16a4:	ldr	x17, [x16, #248]
    16a8:	add	x16, x16, #0xf8
    16ac:	br	x17

00000000000016b0 <BZ2_indexIntoF@plt>:
    16b0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    16b4:	ldr	x17, [x16, #256]
    16b8:	add	x16, x16, #0x100
    16bc:	br	x17

00000000000016c0 <BZ2_hbAssignCodes@plt>:
    16c0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    16c4:	ldr	x17, [x16, #264]
    16c8:	add	x16, x16, #0x108
    16cc:	br	x17

00000000000016d0 <fwrite@plt>:
    16d0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #272]
    16d8:	add	x16, x16, #0x110
    16dc:	br	x17

00000000000016e0 <fflush@plt>:
    16e0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #280]
    16e8:	add	x16, x16, #0x118
    16ec:	br	x17

00000000000016f0 <fopen64@plt>:
    16f0:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #288]
    16f8:	add	x16, x16, #0x120
    16fc:	br	x17

0000000000001700 <BZ2_bzReadOpen@plt>:
    1700:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1704:	ldr	x17, [x16, #296]
    1708:	add	x16, x16, #0x128
    170c:	br	x17

0000000000001710 <BZ2_bzRead@plt>:
    1710:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1714:	ldr	x17, [x16, #304]
    1718:	add	x16, x16, #0x130
    171c:	br	x17

0000000000001720 <BZ2_bz__AssertH__fail@plt>:
    1720:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1724:	ldr	x17, [x16, #312]
    1728:	add	x16, x16, #0x138
    172c:	br	x17

0000000000001730 <fprintf@plt>:
    1730:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1734:	ldr	x17, [x16, #320]
    1738:	add	x16, x16, #0x140
    173c:	br	x17

0000000000001740 <ferror@plt>:
    1740:	adrp	x16, 29000 <strlen@GLIBC_2.17>
    1744:	ldr	x17, [x16, #328]
    1748:	add	x16, x16, #0x148
    174c:	br	x17

Disassembly of section .text:

0000000000001750 <BZ2_blockSort@@Base-0x3d18>:
    1750:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    1754:	ldr	x0, [x0, #4056]
    1758:	cbz	x0, 1760 <ferror@plt+0x20>
    175c:	b	15d0 <__gmon_start__@plt>
    1760:	ret
    1764:	nop
    1768:	adrp	x0, 29000 <BZ2_bzerror@@Base+0x12180>
    176c:	add	x0, x0, #0xe10
    1770:	adrp	x1, 29000 <BZ2_bzerror@@Base+0x12180>
    1774:	add	x1, x1, #0xe10
    1778:	cmp	x1, x0
    177c:	b.eq	1794 <ferror@plt+0x54>  // b.none
    1780:	adrp	x1, 28000 <BZ2_bzerror@@Base+0x11180>
    1784:	ldr	x1, [x1, #4000]
    1788:	cbz	x1, 1794 <ferror@plt+0x54>
    178c:	mov	x16, x1
    1790:	br	x16
    1794:	ret
    1798:	adrp	x0, 29000 <BZ2_bzerror@@Base+0x12180>
    179c:	add	x0, x0, #0xe10
    17a0:	adrp	x1, 29000 <BZ2_bzerror@@Base+0x12180>
    17a4:	add	x1, x1, #0xe10
    17a8:	sub	x1, x1, x0
    17ac:	lsr	x2, x1, #63
    17b0:	add	x1, x2, x1, asr #3
    17b4:	cmp	xzr, x1, asr #1
    17b8:	asr	x1, x1, #1
    17bc:	b.eq	17d4 <ferror@plt+0x94>  // b.none
    17c0:	adrp	x2, 28000 <BZ2_bzerror@@Base+0x11180>
    17c4:	ldr	x2, [x2, #4064]
    17c8:	cbz	x2, 17d4 <ferror@plt+0x94>
    17cc:	mov	x16, x2
    17d0:	br	x16
    17d4:	ret
    17d8:	stp	x29, x30, [sp, #-32]!
    17dc:	mov	x29, sp
    17e0:	str	x19, [sp, #16]
    17e4:	adrp	x19, 29000 <BZ2_bzerror@@Base+0x12180>
    17e8:	ldrb	w0, [x19, #3600]
    17ec:	cbnz	w0, 1814 <ferror@plt+0xd4>
    17f0:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    17f4:	ldr	x0, [x0, #4008]
    17f8:	cbz	x0, 1808 <ferror@plt+0xc8>
    17fc:	adrp	x0, 29000 <BZ2_bzerror@@Base+0x12180>
    1800:	ldr	x0, [x0, #336]
    1804:	bl	14e0 <__cxa_finalize@plt>
    1808:	bl	1768 <ferror@plt+0x28>
    180c:	mov	w0, #0x1                   	// #1
    1810:	strb	w0, [x19, #3600]
    1814:	ldr	x19, [sp, #16]
    1818:	ldp	x29, x30, [sp], #32
    181c:	ret
    1820:	b	1798 <ferror@plt+0x58>
    1824:	sub	sp, sp, #0x30
    1828:	str	x0, [sp, #24]
    182c:	str	x1, [sp, #16]
    1830:	str	w2, [sp, #12]
    1834:	str	w3, [sp, #8]
    1838:	ldr	w1, [sp, #12]
    183c:	ldr	w0, [sp, #8]
    1840:	cmp	w1, w0
    1844:	b.eq	1a68 <ferror@plt+0x328>  // b.none
    1848:	ldr	w1, [sp, #8]
    184c:	ldr	w0, [sp, #12]
    1850:	sub	w0, w1, w0
    1854:	cmp	w0, #0x3
    1858:	b.le	1960 <ferror@plt+0x220>
    185c:	ldr	w0, [sp, #8]
    1860:	sub	w0, w0, #0x4
    1864:	str	w0, [sp, #44]
    1868:	b	1950 <ferror@plt+0x210>
    186c:	ldrsw	x0, [sp, #44]
    1870:	lsl	x0, x0, #2
    1874:	ldr	x1, [sp, #24]
    1878:	add	x0, x1, x0
    187c:	ldr	w0, [x0]
    1880:	str	w0, [sp, #36]
    1884:	ldrsw	x0, [sp, #36]
    1888:	lsl	x0, x0, #2
    188c:	ldr	x1, [sp, #16]
    1890:	add	x0, x1, x0
    1894:	ldr	w0, [x0]
    1898:	str	w0, [sp, #32]
    189c:	ldr	w0, [sp, #44]
    18a0:	add	w0, w0, #0x4
    18a4:	str	w0, [sp, #40]
    18a8:	b	18e4 <ferror@plt+0x1a4>
    18ac:	ldrsw	x0, [sp, #40]
    18b0:	lsl	x0, x0, #2
    18b4:	ldr	x1, [sp, #24]
    18b8:	add	x1, x1, x0
    18bc:	ldrsw	x0, [sp, #40]
    18c0:	lsl	x0, x0, #2
    18c4:	sub	x0, x0, #0x10
    18c8:	ldr	x2, [sp, #24]
    18cc:	add	x0, x2, x0
    18d0:	ldr	w1, [x1]
    18d4:	str	w1, [x0]
    18d8:	ldr	w0, [sp, #40]
    18dc:	add	w0, w0, #0x4
    18e0:	str	w0, [sp, #40]
    18e4:	ldr	w1, [sp, #40]
    18e8:	ldr	w0, [sp, #8]
    18ec:	cmp	w1, w0
    18f0:	b.gt	1928 <ferror@plt+0x1e8>
    18f4:	ldrsw	x0, [sp, #40]
    18f8:	lsl	x0, x0, #2
    18fc:	ldr	x1, [sp, #24]
    1900:	add	x0, x1, x0
    1904:	ldr	w0, [x0]
    1908:	mov	w0, w0
    190c:	lsl	x0, x0, #2
    1910:	ldr	x1, [sp, #16]
    1914:	add	x0, x1, x0
    1918:	ldr	w0, [x0]
    191c:	ldr	w1, [sp, #32]
    1920:	cmp	w1, w0
    1924:	b.hi	18ac <ferror@plt+0x16c>  // b.pmore
    1928:	ldrsw	x0, [sp, #40]
    192c:	lsl	x0, x0, #2
    1930:	sub	x0, x0, #0x10
    1934:	ldr	x1, [sp, #24]
    1938:	add	x0, x1, x0
    193c:	ldr	w1, [sp, #36]
    1940:	str	w1, [x0]
    1944:	ldr	w0, [sp, #44]
    1948:	sub	w0, w0, #0x1
    194c:	str	w0, [sp, #44]
    1950:	ldr	w1, [sp, #44]
    1954:	ldr	w0, [sp, #12]
    1958:	cmp	w1, w0
    195c:	b.ge	186c <ferror@plt+0x12c>  // b.tcont
    1960:	ldr	w0, [sp, #8]
    1964:	sub	w0, w0, #0x1
    1968:	str	w0, [sp, #44]
    196c:	b	1a54 <ferror@plt+0x314>
    1970:	ldrsw	x0, [sp, #44]
    1974:	lsl	x0, x0, #2
    1978:	ldr	x1, [sp, #24]
    197c:	add	x0, x1, x0
    1980:	ldr	w0, [x0]
    1984:	str	w0, [sp, #36]
    1988:	ldrsw	x0, [sp, #36]
    198c:	lsl	x0, x0, #2
    1990:	ldr	x1, [sp, #16]
    1994:	add	x0, x1, x0
    1998:	ldr	w0, [x0]
    199c:	str	w0, [sp, #32]
    19a0:	ldr	w0, [sp, #44]
    19a4:	add	w0, w0, #0x1
    19a8:	str	w0, [sp, #40]
    19ac:	b	19e8 <ferror@plt+0x2a8>
    19b0:	ldrsw	x0, [sp, #40]
    19b4:	lsl	x0, x0, #2
    19b8:	ldr	x1, [sp, #24]
    19bc:	add	x1, x1, x0
    19c0:	ldrsw	x0, [sp, #40]
    19c4:	lsl	x0, x0, #2
    19c8:	sub	x0, x0, #0x4
    19cc:	ldr	x2, [sp, #24]
    19d0:	add	x0, x2, x0
    19d4:	ldr	w1, [x1]
    19d8:	str	w1, [x0]
    19dc:	ldr	w0, [sp, #40]
    19e0:	add	w0, w0, #0x1
    19e4:	str	w0, [sp, #40]
    19e8:	ldr	w1, [sp, #40]
    19ec:	ldr	w0, [sp, #8]
    19f0:	cmp	w1, w0
    19f4:	b.gt	1a2c <ferror@plt+0x2ec>
    19f8:	ldrsw	x0, [sp, #40]
    19fc:	lsl	x0, x0, #2
    1a00:	ldr	x1, [sp, #24]
    1a04:	add	x0, x1, x0
    1a08:	ldr	w0, [x0]
    1a0c:	mov	w0, w0
    1a10:	lsl	x0, x0, #2
    1a14:	ldr	x1, [sp, #16]
    1a18:	add	x0, x1, x0
    1a1c:	ldr	w0, [x0]
    1a20:	ldr	w1, [sp, #32]
    1a24:	cmp	w1, w0
    1a28:	b.hi	19b0 <ferror@plt+0x270>  // b.pmore
    1a2c:	ldrsw	x0, [sp, #40]
    1a30:	lsl	x0, x0, #2
    1a34:	sub	x0, x0, #0x4
    1a38:	ldr	x1, [sp, #24]
    1a3c:	add	x0, x1, x0
    1a40:	ldr	w1, [sp, #36]
    1a44:	str	w1, [x0]
    1a48:	ldr	w0, [sp, #44]
    1a4c:	sub	w0, w0, #0x1
    1a50:	str	w0, [sp, #44]
    1a54:	ldr	w1, [sp, #44]
    1a58:	ldr	w0, [sp, #12]
    1a5c:	cmp	w1, w0
    1a60:	b.ge	1970 <ferror@plt+0x230>  // b.tcont
    1a64:	b	1a6c <ferror@plt+0x32c>
    1a68:	nop
    1a6c:	add	sp, sp, #0x30
    1a70:	ret
    1a74:	sub	sp, sp, #0x3b0
    1a78:	stp	x29, x30, [sp]
    1a7c:	mov	x29, sp
    1a80:	str	x0, [sp, #40]
    1a84:	str	x1, [sp, #32]
    1a88:	str	w2, [sp, #28]
    1a8c:	str	w3, [sp, #24]
    1a90:	str	wzr, [sp, #916]
    1a94:	str	wzr, [sp, #924]
    1a98:	ldrsw	x0, [sp, #924]
    1a9c:	lsl	x0, x0, #2
    1aa0:	add	x1, sp, #0x1c0
    1aa4:	ldr	w2, [sp, #28]
    1aa8:	str	w2, [x1, x0]
    1aac:	ldrsw	x0, [sp, #924]
    1ab0:	lsl	x0, x0, #2
    1ab4:	add	x1, sp, #0x30
    1ab8:	ldr	w2, [sp, #24]
    1abc:	str	w2, [x1, x0]
    1ac0:	ldr	w0, [sp, #924]
    1ac4:	add	w0, w0, #0x1
    1ac8:	str	w0, [sp, #924]
    1acc:	b	21a8 <ferror@plt+0xa68>
    1ad0:	ldr	w0, [sp, #924]
    1ad4:	cmp	w0, #0x62
    1ad8:	b.le	1ae4 <ferror@plt+0x3a4>
    1adc:	mov	w0, #0x3ec                 	// #1004
    1ae0:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    1ae4:	ldr	w0, [sp, #924]
    1ae8:	sub	w0, w0, #0x1
    1aec:	str	w0, [sp, #924]
    1af0:	ldrsw	x0, [sp, #924]
    1af4:	lsl	x0, x0, #2
    1af8:	add	x1, sp, #0x1c0
    1afc:	ldr	w0, [x1, x0]
    1b00:	str	w0, [sp, #888]
    1b04:	ldrsw	x0, [sp, #924]
    1b08:	lsl	x0, x0, #2
    1b0c:	add	x1, sp, #0x30
    1b10:	ldr	w0, [x1, x0]
    1b14:	str	w0, [sp, #884]
    1b18:	ldr	w1, [sp, #884]
    1b1c:	ldr	w0, [sp, #888]
    1b20:	sub	w0, w1, w0
    1b24:	cmp	w0, #0x9
    1b28:	b.gt	1b44 <ferror@plt+0x404>
    1b2c:	ldr	w3, [sp, #884]
    1b30:	ldr	w2, [sp, #888]
    1b34:	ldr	x1, [sp, #32]
    1b38:	ldr	x0, [sp, #40]
    1b3c:	bl	1824 <ferror@plt+0xe4>
    1b40:	b	21a8 <ferror@plt+0xa68>
    1b44:	ldr	w1, [sp, #916]
    1b48:	mov	w0, #0x1dc5                	// #7621
    1b4c:	mul	w0, w1, w0
    1b50:	add	w0, w0, #0x1
    1b54:	and	w0, w0, #0x7fff
    1b58:	str	w0, [sp, #916]
    1b5c:	ldr	w1, [sp, #916]
    1b60:	mov	w0, #0xaaab                	// #43691
    1b64:	movk	w0, #0xaaaa, lsl #16
    1b68:	umull	x0, w1, w0
    1b6c:	lsr	x0, x0, #32
    1b70:	lsr	w2, w0, #1
    1b74:	mov	w0, w2
    1b78:	lsl	w0, w0, #1
    1b7c:	add	w0, w0, w2
    1b80:	sub	w0, w1, w0
    1b84:	str	w0, [sp, #880]
    1b88:	ldr	w0, [sp, #880]
    1b8c:	cmp	w0, #0x0
    1b90:	b.ne	1bc4 <ferror@plt+0x484>  // b.any
    1b94:	ldrsw	x0, [sp, #888]
    1b98:	lsl	x0, x0, #2
    1b9c:	ldr	x1, [sp, #40]
    1ba0:	add	x0, x1, x0
    1ba4:	ldr	w0, [x0]
    1ba8:	mov	w0, w0
    1bac:	lsl	x0, x0, #2
    1bb0:	ldr	x1, [sp, #32]
    1bb4:	add	x0, x1, x0
    1bb8:	ldr	w0, [x0]
    1bbc:	str	w0, [sp, #920]
    1bc0:	b	1c3c <ferror@plt+0x4fc>
    1bc4:	ldr	w0, [sp, #880]
    1bc8:	cmp	w0, #0x1
    1bcc:	b.ne	1c10 <ferror@plt+0x4d0>  // b.any
    1bd0:	ldr	w1, [sp, #888]
    1bd4:	ldr	w0, [sp, #884]
    1bd8:	add	w0, w1, w0
    1bdc:	asr	w0, w0, #1
    1be0:	sxtw	x0, w0
    1be4:	lsl	x0, x0, #2
    1be8:	ldr	x1, [sp, #40]
    1bec:	add	x0, x1, x0
    1bf0:	ldr	w0, [x0]
    1bf4:	mov	w0, w0
    1bf8:	lsl	x0, x0, #2
    1bfc:	ldr	x1, [sp, #32]
    1c00:	add	x0, x1, x0
    1c04:	ldr	w0, [x0]
    1c08:	str	w0, [sp, #920]
    1c0c:	b	1c3c <ferror@plt+0x4fc>
    1c10:	ldrsw	x0, [sp, #884]
    1c14:	lsl	x0, x0, #2
    1c18:	ldr	x1, [sp, #40]
    1c1c:	add	x0, x1, x0
    1c20:	ldr	w0, [x0]
    1c24:	mov	w0, w0
    1c28:	lsl	x0, x0, #2
    1c2c:	ldr	x1, [sp, #32]
    1c30:	add	x0, x1, x0
    1c34:	ldr	w0, [x0]
    1c38:	str	w0, [sp, #920]
    1c3c:	ldr	w0, [sp, #888]
    1c40:	str	w0, [sp, #932]
    1c44:	ldr	w0, [sp, #932]
    1c48:	str	w0, [sp, #940]
    1c4c:	ldr	w0, [sp, #884]
    1c50:	str	w0, [sp, #928]
    1c54:	ldr	w0, [sp, #928]
    1c58:	str	w0, [sp, #936]
    1c5c:	ldr	w1, [sp, #940]
    1c60:	ldr	w0, [sp, #936]
    1c64:	cmp	w1, w0
    1c68:	b.gt	1d40 <ferror@plt+0x600>
    1c6c:	ldrsw	x0, [sp, #940]
    1c70:	lsl	x0, x0, #2
    1c74:	ldr	x1, [sp, #40]
    1c78:	add	x0, x1, x0
    1c7c:	ldr	w0, [x0]
    1c80:	mov	w0, w0
    1c84:	lsl	x0, x0, #2
    1c88:	ldr	x1, [sp, #32]
    1c8c:	add	x0, x1, x0
    1c90:	ldr	w0, [x0]
    1c94:	mov	w1, w0
    1c98:	ldr	w0, [sp, #920]
    1c9c:	sub	w0, w1, w0
    1ca0:	str	w0, [sp, #876]
    1ca4:	ldr	w0, [sp, #876]
    1ca8:	cmp	w0, #0x0
    1cac:	b.ne	1d24 <ferror@plt+0x5e4>  // b.any
    1cb0:	ldrsw	x0, [sp, #940]
    1cb4:	lsl	x0, x0, #2
    1cb8:	ldr	x1, [sp, #40]
    1cbc:	add	x0, x1, x0
    1cc0:	ldr	w0, [x0]
    1cc4:	str	w0, [sp, #872]
    1cc8:	ldrsw	x0, [sp, #932]
    1ccc:	lsl	x0, x0, #2
    1cd0:	ldr	x1, [sp, #40]
    1cd4:	add	x1, x1, x0
    1cd8:	ldrsw	x0, [sp, #940]
    1cdc:	lsl	x0, x0, #2
    1ce0:	ldr	x2, [sp, #40]
    1ce4:	add	x0, x2, x0
    1ce8:	ldr	w1, [x1]
    1cec:	str	w1, [x0]
    1cf0:	ldrsw	x0, [sp, #932]
    1cf4:	lsl	x0, x0, #2
    1cf8:	ldr	x1, [sp, #40]
    1cfc:	add	x0, x1, x0
    1d00:	ldr	w1, [sp, #872]
    1d04:	str	w1, [x0]
    1d08:	ldr	w0, [sp, #932]
    1d0c:	add	w0, w0, #0x1
    1d10:	str	w0, [sp, #932]
    1d14:	ldr	w0, [sp, #940]
    1d18:	add	w0, w0, #0x1
    1d1c:	str	w0, [sp, #940]
    1d20:	b	1d3c <ferror@plt+0x5fc>
    1d24:	ldr	w0, [sp, #876]
    1d28:	cmp	w0, #0x0
    1d2c:	b.gt	1d48 <ferror@plt+0x608>
    1d30:	ldr	w0, [sp, #940]
    1d34:	add	w0, w0, #0x1
    1d38:	str	w0, [sp, #940]
    1d3c:	b	1c5c <ferror@plt+0x51c>
    1d40:	nop
    1d44:	b	1d4c <ferror@plt+0x60c>
    1d48:	nop
    1d4c:	ldr	w1, [sp, #940]
    1d50:	ldr	w0, [sp, #936]
    1d54:	cmp	w1, w0
    1d58:	b.gt	1e30 <ferror@plt+0x6f0>
    1d5c:	ldrsw	x0, [sp, #936]
    1d60:	lsl	x0, x0, #2
    1d64:	ldr	x1, [sp, #40]
    1d68:	add	x0, x1, x0
    1d6c:	ldr	w0, [x0]
    1d70:	mov	w0, w0
    1d74:	lsl	x0, x0, #2
    1d78:	ldr	x1, [sp, #32]
    1d7c:	add	x0, x1, x0
    1d80:	ldr	w0, [x0]
    1d84:	mov	w1, w0
    1d88:	ldr	w0, [sp, #920]
    1d8c:	sub	w0, w1, w0
    1d90:	str	w0, [sp, #876]
    1d94:	ldr	w0, [sp, #876]
    1d98:	cmp	w0, #0x0
    1d9c:	b.ne	1e14 <ferror@plt+0x6d4>  // b.any
    1da0:	ldrsw	x0, [sp, #936]
    1da4:	lsl	x0, x0, #2
    1da8:	ldr	x1, [sp, #40]
    1dac:	add	x0, x1, x0
    1db0:	ldr	w0, [x0]
    1db4:	str	w0, [sp, #868]
    1db8:	ldrsw	x0, [sp, #928]
    1dbc:	lsl	x0, x0, #2
    1dc0:	ldr	x1, [sp, #40]
    1dc4:	add	x1, x1, x0
    1dc8:	ldrsw	x0, [sp, #936]
    1dcc:	lsl	x0, x0, #2
    1dd0:	ldr	x2, [sp, #40]
    1dd4:	add	x0, x2, x0
    1dd8:	ldr	w1, [x1]
    1ddc:	str	w1, [x0]
    1de0:	ldrsw	x0, [sp, #928]
    1de4:	lsl	x0, x0, #2
    1de8:	ldr	x1, [sp, #40]
    1dec:	add	x0, x1, x0
    1df0:	ldr	w1, [sp, #868]
    1df4:	str	w1, [x0]
    1df8:	ldr	w0, [sp, #928]
    1dfc:	sub	w0, w0, #0x1
    1e00:	str	w0, [sp, #928]
    1e04:	ldr	w0, [sp, #936]
    1e08:	sub	w0, w0, #0x1
    1e0c:	str	w0, [sp, #936]
    1e10:	b	1e2c <ferror@plt+0x6ec>
    1e14:	ldr	w0, [sp, #876]
    1e18:	cmp	w0, #0x0
    1e1c:	b.lt	1e38 <ferror@plt+0x6f8>  // b.tstop
    1e20:	ldr	w0, [sp, #936]
    1e24:	sub	w0, w0, #0x1
    1e28:	str	w0, [sp, #936]
    1e2c:	b	1d4c <ferror@plt+0x60c>
    1e30:	nop
    1e34:	b	1e3c <ferror@plt+0x6fc>
    1e38:	nop
    1e3c:	ldr	w1, [sp, #940]
    1e40:	ldr	w0, [sp, #936]
    1e44:	cmp	w1, w0
    1e48:	b.gt	1ec0 <ferror@plt+0x780>
    1e4c:	ldrsw	x0, [sp, #940]
    1e50:	lsl	x0, x0, #2
    1e54:	ldr	x1, [sp, #40]
    1e58:	add	x0, x1, x0
    1e5c:	ldr	w0, [x0]
    1e60:	str	w0, [sp, #864]
    1e64:	ldrsw	x0, [sp, #936]
    1e68:	lsl	x0, x0, #2
    1e6c:	ldr	x1, [sp, #40]
    1e70:	add	x1, x1, x0
    1e74:	ldrsw	x0, [sp, #940]
    1e78:	lsl	x0, x0, #2
    1e7c:	ldr	x2, [sp, #40]
    1e80:	add	x0, x2, x0
    1e84:	ldr	w1, [x1]
    1e88:	str	w1, [x0]
    1e8c:	ldrsw	x0, [sp, #936]
    1e90:	lsl	x0, x0, #2
    1e94:	ldr	x1, [sp, #40]
    1e98:	add	x0, x1, x0
    1e9c:	ldr	w1, [sp, #864]
    1ea0:	str	w1, [x0]
    1ea4:	ldr	w0, [sp, #940]
    1ea8:	add	w0, w0, #0x1
    1eac:	str	w0, [sp, #940]
    1eb0:	ldr	w0, [sp, #936]
    1eb4:	sub	w0, w0, #0x1
    1eb8:	str	w0, [sp, #936]
    1ebc:	b	1c5c <ferror@plt+0x51c>
    1ec0:	nop
    1ec4:	ldr	w1, [sp, #928]
    1ec8:	ldr	w0, [sp, #932]
    1ecc:	cmp	w1, w0
    1ed0:	b.ge	1ed8 <ferror@plt+0x798>  // b.tcont
    1ed4:	b	21a8 <ferror@plt+0xa68>
    1ed8:	ldr	w1, [sp, #940]
    1edc:	ldr	w0, [sp, #932]
    1ee0:	sub	w1, w1, w0
    1ee4:	ldr	w2, [sp, #932]
    1ee8:	ldr	w0, [sp, #888]
    1eec:	sub	w0, w2, w0
    1ef0:	cmp	w1, w0
    1ef4:	csel	w0, w1, w0, le
    1ef8:	str	w0, [sp, #876]
    1efc:	ldr	w0, [sp, #888]
    1f00:	str	w0, [sp, #912]
    1f04:	ldr	w1, [sp, #940]
    1f08:	ldr	w0, [sp, #876]
    1f0c:	sub	w0, w1, w0
    1f10:	str	w0, [sp, #908]
    1f14:	ldr	w0, [sp, #876]
    1f18:	str	w0, [sp, #904]
    1f1c:	b	1f9c <ferror@plt+0x85c>
    1f20:	ldrsw	x0, [sp, #912]
    1f24:	lsl	x0, x0, #2
    1f28:	ldr	x1, [sp, #40]
    1f2c:	add	x0, x1, x0
    1f30:	ldr	w0, [x0]
    1f34:	str	w0, [sp, #852]
    1f38:	ldrsw	x0, [sp, #908]
    1f3c:	lsl	x0, x0, #2
    1f40:	ldr	x1, [sp, #40]
    1f44:	add	x1, x1, x0
    1f48:	ldrsw	x0, [sp, #912]
    1f4c:	lsl	x0, x0, #2
    1f50:	ldr	x2, [sp, #40]
    1f54:	add	x0, x2, x0
    1f58:	ldr	w1, [x1]
    1f5c:	str	w1, [x0]
    1f60:	ldrsw	x0, [sp, #908]
    1f64:	lsl	x0, x0, #2
    1f68:	ldr	x1, [sp, #40]
    1f6c:	add	x0, x1, x0
    1f70:	ldr	w1, [sp, #852]
    1f74:	str	w1, [x0]
    1f78:	ldr	w0, [sp, #912]
    1f7c:	add	w0, w0, #0x1
    1f80:	str	w0, [sp, #912]
    1f84:	ldr	w0, [sp, #908]
    1f88:	add	w0, w0, #0x1
    1f8c:	str	w0, [sp, #908]
    1f90:	ldr	w0, [sp, #904]
    1f94:	sub	w0, w0, #0x1
    1f98:	str	w0, [sp, #904]
    1f9c:	ldr	w0, [sp, #904]
    1fa0:	cmp	w0, #0x0
    1fa4:	b.gt	1f20 <ferror@plt+0x7e0>
    1fa8:	ldr	w1, [sp, #928]
    1fac:	ldr	w0, [sp, #936]
    1fb0:	sub	w1, w1, w0
    1fb4:	ldr	w2, [sp, #884]
    1fb8:	ldr	w0, [sp, #928]
    1fbc:	sub	w0, w2, w0
    1fc0:	cmp	w1, w0
    1fc4:	csel	w0, w1, w0, le
    1fc8:	str	w0, [sp, #860]
    1fcc:	ldr	w0, [sp, #940]
    1fd0:	str	w0, [sp, #900]
    1fd4:	ldr	w1, [sp, #884]
    1fd8:	ldr	w0, [sp, #860]
    1fdc:	sub	w0, w1, w0
    1fe0:	add	w0, w0, #0x1
    1fe4:	str	w0, [sp, #896]
    1fe8:	ldr	w0, [sp, #860]
    1fec:	str	w0, [sp, #892]
    1ff0:	b	2070 <ferror@plt+0x930>
    1ff4:	ldrsw	x0, [sp, #900]
    1ff8:	lsl	x0, x0, #2
    1ffc:	ldr	x1, [sp, #40]
    2000:	add	x0, x1, x0
    2004:	ldr	w0, [x0]
    2008:	str	w0, [sp, #856]
    200c:	ldrsw	x0, [sp, #896]
    2010:	lsl	x0, x0, #2
    2014:	ldr	x1, [sp, #40]
    2018:	add	x1, x1, x0
    201c:	ldrsw	x0, [sp, #900]
    2020:	lsl	x0, x0, #2
    2024:	ldr	x2, [sp, #40]
    2028:	add	x0, x2, x0
    202c:	ldr	w1, [x1]
    2030:	str	w1, [x0]
    2034:	ldrsw	x0, [sp, #896]
    2038:	lsl	x0, x0, #2
    203c:	ldr	x1, [sp, #40]
    2040:	add	x0, x1, x0
    2044:	ldr	w1, [sp, #856]
    2048:	str	w1, [x0]
    204c:	ldr	w0, [sp, #900]
    2050:	add	w0, w0, #0x1
    2054:	str	w0, [sp, #900]
    2058:	ldr	w0, [sp, #896]
    205c:	add	w0, w0, #0x1
    2060:	str	w0, [sp, #896]
    2064:	ldr	w0, [sp, #892]
    2068:	sub	w0, w0, #0x1
    206c:	str	w0, [sp, #892]
    2070:	ldr	w0, [sp, #892]
    2074:	cmp	w0, #0x0
    2078:	b.gt	1ff4 <ferror@plt+0x8b4>
    207c:	ldr	w1, [sp, #888]
    2080:	ldr	w0, [sp, #940]
    2084:	add	w1, w1, w0
    2088:	ldr	w0, [sp, #932]
    208c:	sub	w0, w1, w0
    2090:	sub	w0, w0, #0x1
    2094:	str	w0, [sp, #876]
    2098:	ldr	w1, [sp, #928]
    209c:	ldr	w0, [sp, #936]
    20a0:	sub	w0, w1, w0
    20a4:	ldr	w1, [sp, #884]
    20a8:	sub	w0, w1, w0
    20ac:	add	w0, w0, #0x1
    20b0:	str	w0, [sp, #860]
    20b4:	ldr	w1, [sp, #876]
    20b8:	ldr	w0, [sp, #888]
    20bc:	sub	w1, w1, w0
    20c0:	ldr	w2, [sp, #884]
    20c4:	ldr	w0, [sp, #860]
    20c8:	sub	w0, w2, w0
    20cc:	cmp	w1, w0
    20d0:	b.le	2140 <ferror@plt+0xa00>
    20d4:	ldrsw	x0, [sp, #924]
    20d8:	lsl	x0, x0, #2
    20dc:	add	x1, sp, #0x1c0
    20e0:	ldr	w2, [sp, #888]
    20e4:	str	w2, [x1, x0]
    20e8:	ldrsw	x0, [sp, #924]
    20ec:	lsl	x0, x0, #2
    20f0:	add	x1, sp, #0x30
    20f4:	ldr	w2, [sp, #876]
    20f8:	str	w2, [x1, x0]
    20fc:	ldr	w0, [sp, #924]
    2100:	add	w0, w0, #0x1
    2104:	str	w0, [sp, #924]
    2108:	ldrsw	x0, [sp, #924]
    210c:	lsl	x0, x0, #2
    2110:	add	x1, sp, #0x1c0
    2114:	ldr	w2, [sp, #860]
    2118:	str	w2, [x1, x0]
    211c:	ldrsw	x0, [sp, #924]
    2120:	lsl	x0, x0, #2
    2124:	add	x1, sp, #0x30
    2128:	ldr	w2, [sp, #884]
    212c:	str	w2, [x1, x0]
    2130:	ldr	w0, [sp, #924]
    2134:	add	w0, w0, #0x1
    2138:	str	w0, [sp, #924]
    213c:	b	21a8 <ferror@plt+0xa68>
    2140:	ldrsw	x0, [sp, #924]
    2144:	lsl	x0, x0, #2
    2148:	add	x1, sp, #0x1c0
    214c:	ldr	w2, [sp, #860]
    2150:	str	w2, [x1, x0]
    2154:	ldrsw	x0, [sp, #924]
    2158:	lsl	x0, x0, #2
    215c:	add	x1, sp, #0x30
    2160:	ldr	w2, [sp, #884]
    2164:	str	w2, [x1, x0]
    2168:	ldr	w0, [sp, #924]
    216c:	add	w0, w0, #0x1
    2170:	str	w0, [sp, #924]
    2174:	ldrsw	x0, [sp, #924]
    2178:	lsl	x0, x0, #2
    217c:	add	x1, sp, #0x1c0
    2180:	ldr	w2, [sp, #888]
    2184:	str	w2, [x1, x0]
    2188:	ldrsw	x0, [sp, #924]
    218c:	lsl	x0, x0, #2
    2190:	add	x1, sp, #0x30
    2194:	ldr	w2, [sp, #876]
    2198:	str	w2, [x1, x0]
    219c:	ldr	w0, [sp, #924]
    21a0:	add	w0, w0, #0x1
    21a4:	str	w0, [sp, #924]
    21a8:	ldr	w0, [sp, #924]
    21ac:	cmp	w0, #0x0
    21b0:	b.gt	1ad0 <ferror@plt+0x390>
    21b4:	nop
    21b8:	nop
    21bc:	ldp	x29, x30, [sp]
    21c0:	add	sp, sp, #0x3b0
    21c4:	ret
    21c8:	sub	sp, sp, #0x870
    21cc:	stp	x29, x30, [sp]
    21d0:	mov	x29, sp
    21d4:	str	x0, [sp, #40]
    21d8:	str	x1, [sp, #32]
    21dc:	str	x2, [sp, #24]
    21e0:	str	w3, [sp, #20]
    21e4:	str	w4, [sp, #16]
    21e8:	ldr	x0, [sp, #32]
    21ec:	str	x0, [sp, #2120]
    21f0:	ldr	w0, [sp, #16]
    21f4:	cmp	w0, #0x3
    21f8:	b.le	2220 <ferror@plt+0xae0>
    21fc:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    2200:	ldr	x0, [x0, #4016]
    2204:	ldr	x0, [x0]
    2208:	mov	x3, x0
    220c:	mov	x2, #0x1b                  	// #27
    2210:	mov	x1, #0x1                   	// #1
    2214:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    2218:	add	x0, x0, #0xee8
    221c:	bl	16d0 <fwrite@plt>
    2220:	str	wzr, [sp, #2152]
    2224:	b	2244 <ferror@plt+0xb04>
    2228:	ldrsw	x0, [sp, #2152]
    222c:	lsl	x0, x0, #2
    2230:	add	x1, sp, #0x438
    2234:	str	wzr, [x1, x0]
    2238:	ldr	w0, [sp, #2152]
    223c:	add	w0, w0, #0x1
    2240:	str	w0, [sp, #2152]
    2244:	ldr	w0, [sp, #2152]
    2248:	cmp	w0, #0x100
    224c:	b.le	2228 <ferror@plt+0xae8>
    2250:	str	wzr, [sp, #2152]
    2254:	b	229c <ferror@plt+0xb5c>
    2258:	ldrsw	x0, [sp, #2152]
    225c:	ldr	x1, [sp, #2120]
    2260:	add	x0, x1, x0
    2264:	ldrb	w0, [x0]
    2268:	mov	w3, w0
    226c:	sxtw	x0, w3
    2270:	lsl	x0, x0, #2
    2274:	add	x1, sp, #0x438
    2278:	ldr	w0, [x1, x0]
    227c:	add	w2, w0, #0x1
    2280:	sxtw	x0, w3
    2284:	lsl	x0, x0, #2
    2288:	add	x1, sp, #0x438
    228c:	str	w2, [x1, x0]
    2290:	ldr	w0, [sp, #2152]
    2294:	add	w0, w0, #0x1
    2298:	str	w0, [sp, #2152]
    229c:	ldr	w1, [sp, #2152]
    22a0:	ldr	w0, [sp, #20]
    22a4:	cmp	w1, w0
    22a8:	b.lt	2258 <ferror@plt+0xb18>  // b.tstop
    22ac:	str	wzr, [sp, #2152]
    22b0:	b	22e0 <ferror@plt+0xba0>
    22b4:	ldrsw	x0, [sp, #2152]
    22b8:	lsl	x0, x0, #2
    22bc:	add	x1, sp, #0x438
    22c0:	ldr	w2, [x1, x0]
    22c4:	ldrsw	x0, [sp, #2152]
    22c8:	lsl	x0, x0, #2
    22cc:	add	x1, sp, #0x38
    22d0:	str	w2, [x1, x0]
    22d4:	ldr	w0, [sp, #2152]
    22d8:	add	w0, w0, #0x1
    22dc:	str	w0, [sp, #2152]
    22e0:	ldr	w0, [sp, #2152]
    22e4:	cmp	w0, #0xff
    22e8:	b.le	22b4 <ferror@plt+0xb74>
    22ec:	mov	w0, #0x1                   	// #1
    22f0:	str	w0, [sp, #2152]
    22f4:	b	2340 <ferror@plt+0xc00>
    22f8:	ldrsw	x0, [sp, #2152]
    22fc:	lsl	x0, x0, #2
    2300:	add	x1, sp, #0x438
    2304:	ldr	w1, [x1, x0]
    2308:	ldr	w0, [sp, #2152]
    230c:	sub	w0, w0, #0x1
    2310:	sxtw	x0, w0
    2314:	lsl	x0, x0, #2
    2318:	add	x2, sp, #0x438
    231c:	ldr	w0, [x2, x0]
    2320:	add	w2, w1, w0
    2324:	ldrsw	x0, [sp, #2152]
    2328:	lsl	x0, x0, #2
    232c:	add	x1, sp, #0x438
    2330:	str	w2, [x1, x0]
    2334:	ldr	w0, [sp, #2152]
    2338:	add	w0, w0, #0x1
    233c:	str	w0, [sp, #2152]
    2340:	ldr	w0, [sp, #2152]
    2344:	cmp	w0, #0x100
    2348:	b.le	22f8 <ferror@plt+0xbb8>
    234c:	str	wzr, [sp, #2152]
    2350:	b	23b8 <ferror@plt+0xc78>
    2354:	ldrsw	x0, [sp, #2152]
    2358:	ldr	x1, [sp, #2120]
    235c:	add	x0, x1, x0
    2360:	ldrb	w0, [x0]
    2364:	str	w0, [sp, #2148]
    2368:	ldrsw	x0, [sp, #2148]
    236c:	lsl	x0, x0, #2
    2370:	add	x1, sp, #0x438
    2374:	ldr	w0, [x1, x0]
    2378:	sub	w0, w0, #0x1
    237c:	str	w0, [sp, #2144]
    2380:	ldrsw	x0, [sp, #2148]
    2384:	lsl	x0, x0, #2
    2388:	add	x1, sp, #0x438
    238c:	ldr	w2, [sp, #2144]
    2390:	str	w2, [x1, x0]
    2394:	ldrsw	x0, [sp, #2144]
    2398:	lsl	x0, x0, #2
    239c:	ldr	x1, [sp, #40]
    23a0:	add	x0, x1, x0
    23a4:	ldr	w1, [sp, #2152]
    23a8:	str	w1, [x0]
    23ac:	ldr	w0, [sp, #2152]
    23b0:	add	w0, w0, #0x1
    23b4:	str	w0, [sp, #2152]
    23b8:	ldr	w1, [sp, #2152]
    23bc:	ldr	w0, [sp, #20]
    23c0:	cmp	w1, w0
    23c4:	b.lt	2354 <ferror@plt+0xc14>  // b.tstop
    23c8:	ldr	w0, [sp, #20]
    23cc:	add	w1, w0, #0x1f
    23d0:	cmp	w0, #0x0
    23d4:	csel	w0, w1, w0, lt  // lt = tstop
    23d8:	asr	w0, w0, #5
    23dc:	add	w0, w0, #0x2
    23e0:	str	w0, [sp, #2116]
    23e4:	str	wzr, [sp, #2152]
    23e8:	b	240c <ferror@plt+0xccc>
    23ec:	ldrsw	x0, [sp, #2152]
    23f0:	lsl	x0, x0, #2
    23f4:	ldr	x1, [sp, #24]
    23f8:	add	x0, x1, x0
    23fc:	str	wzr, [x0]
    2400:	ldr	w0, [sp, #2152]
    2404:	add	w0, w0, #0x1
    2408:	str	w0, [sp, #2152]
    240c:	ldr	w1, [sp, #2152]
    2410:	ldr	w0, [sp, #2116]
    2414:	cmp	w1, w0
    2418:	b.lt	23ec <ferror@plt+0xcac>  // b.tstop
    241c:	str	wzr, [sp, #2152]
    2420:	b	24a0 <ferror@plt+0xd60>
    2424:	ldrsw	x0, [sp, #2152]
    2428:	lsl	x0, x0, #2
    242c:	add	x1, sp, #0x438
    2430:	ldr	w0, [x1, x0]
    2434:	asr	w0, w0, #5
    2438:	sxtw	x0, w0
    243c:	lsl	x0, x0, #2
    2440:	ldr	x1, [sp, #24]
    2444:	add	x0, x1, x0
    2448:	ldr	w2, [x0]
    244c:	ldrsw	x0, [sp, #2152]
    2450:	lsl	x0, x0, #2
    2454:	add	x1, sp, #0x438
    2458:	ldr	w0, [x1, x0]
    245c:	and	w0, w0, #0x1f
    2460:	mov	w1, #0x1                   	// #1
    2464:	lsl	w1, w1, w0
    2468:	ldrsw	x0, [sp, #2152]
    246c:	lsl	x0, x0, #2
    2470:	add	x3, sp, #0x438
    2474:	ldr	w0, [x3, x0]
    2478:	asr	w0, w0, #5
    247c:	sxtw	x0, w0
    2480:	lsl	x0, x0, #2
    2484:	ldr	x3, [sp, #24]
    2488:	add	x0, x3, x0
    248c:	orr	w1, w2, w1
    2490:	str	w1, [x0]
    2494:	ldr	w0, [sp, #2152]
    2498:	add	w0, w0, #0x1
    249c:	str	w0, [sp, #2152]
    24a0:	ldr	w0, [sp, #2152]
    24a4:	cmp	w0, #0xff
    24a8:	b.le	2424 <ferror@plt+0xce4>
    24ac:	str	wzr, [sp, #2152]
    24b0:	b	25b0 <ferror@plt+0xe70>
    24b4:	ldr	w0, [sp, #2152]
    24b8:	lsl	w1, w0, #1
    24bc:	ldr	w0, [sp, #20]
    24c0:	add	w0, w1, w0
    24c4:	asr	w0, w0, #5
    24c8:	sxtw	x0, w0
    24cc:	lsl	x0, x0, #2
    24d0:	ldr	x1, [sp, #24]
    24d4:	add	x0, x1, x0
    24d8:	ldr	w2, [x0]
    24dc:	ldr	w0, [sp, #2152]
    24e0:	lsl	w1, w0, #1
    24e4:	ldr	w0, [sp, #20]
    24e8:	add	w0, w1, w0
    24ec:	and	w0, w0, #0x1f
    24f0:	mov	w1, #0x1                   	// #1
    24f4:	lsl	w1, w1, w0
    24f8:	ldr	w0, [sp, #2152]
    24fc:	lsl	w3, w0, #1
    2500:	ldr	w0, [sp, #20]
    2504:	add	w0, w3, w0
    2508:	asr	w0, w0, #5
    250c:	sxtw	x0, w0
    2510:	lsl	x0, x0, #2
    2514:	ldr	x3, [sp, #24]
    2518:	add	x0, x3, x0
    251c:	orr	w1, w2, w1
    2520:	str	w1, [x0]
    2524:	ldr	w0, [sp, #2152]
    2528:	lsl	w1, w0, #1
    252c:	ldr	w0, [sp, #20]
    2530:	add	w0, w1, w0
    2534:	add	w0, w0, #0x1
    2538:	asr	w0, w0, #5
    253c:	sxtw	x0, w0
    2540:	lsl	x0, x0, #2
    2544:	ldr	x1, [sp, #24]
    2548:	add	x0, x1, x0
    254c:	ldr	w2, [x0]
    2550:	ldr	w0, [sp, #2152]
    2554:	lsl	w1, w0, #1
    2558:	ldr	w0, [sp, #20]
    255c:	add	w0, w1, w0
    2560:	add	w0, w0, #0x1
    2564:	and	w0, w0, #0x1f
    2568:	mov	w1, #0x1                   	// #1
    256c:	lsl	w0, w1, w0
    2570:	mvn	w1, w0
    2574:	ldr	w0, [sp, #2152]
    2578:	lsl	w3, w0, #1
    257c:	ldr	w0, [sp, #20]
    2580:	add	w0, w3, w0
    2584:	add	w0, w0, #0x1
    2588:	asr	w0, w0, #5
    258c:	sxtw	x0, w0
    2590:	lsl	x0, x0, #2
    2594:	ldr	x3, [sp, #24]
    2598:	add	x0, x3, x0
    259c:	and	w1, w2, w1
    25a0:	str	w1, [x0]
    25a4:	ldr	w0, [sp, #2152]
    25a8:	add	w0, w0, #0x1
    25ac:	str	w0, [sp, #2152]
    25b0:	ldr	w0, [sp, #2152]
    25b4:	cmp	w0, #0x1f
    25b8:	b.le	24b4 <ferror@plt+0xd74>
    25bc:	mov	w0, #0x1                   	// #1
    25c0:	str	w0, [sp, #2156]
    25c4:	ldr	w0, [sp, #16]
    25c8:	cmp	w0, #0x3
    25cc:	b.le	25f0 <ferror@plt+0xeb0>
    25d0:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    25d4:	ldr	x0, [x0, #4016]
    25d8:	ldr	x3, [x0]
    25dc:	ldr	w2, [sp, #2156]
    25e0:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    25e4:	add	x1, x0, #0xf08
    25e8:	mov	x0, x3
    25ec:	bl	1730 <fprintf@plt>
    25f0:	str	wzr, [sp, #2148]
    25f4:	str	wzr, [sp, #2152]
    25f8:	b	269c <ferror@plt+0xf5c>
    25fc:	ldr	w0, [sp, #2152]
    2600:	asr	w0, w0, #5
    2604:	sxtw	x0, w0
    2608:	lsl	x0, x0, #2
    260c:	ldr	x1, [sp, #24]
    2610:	add	x0, x1, x0
    2614:	ldr	w1, [x0]
    2618:	ldr	w0, [sp, #2152]
    261c:	and	w0, w0, #0x1f
    2620:	mov	w2, #0x1                   	// #1
    2624:	lsl	w0, w2, w0
    2628:	and	w0, w1, w0
    262c:	cmp	w0, #0x0
    2630:	b.eq	263c <ferror@plt+0xefc>  // b.none
    2634:	ldr	w0, [sp, #2152]
    2638:	str	w0, [sp, #2148]
    263c:	ldrsw	x0, [sp, #2152]
    2640:	lsl	x0, x0, #2
    2644:	ldr	x1, [sp, #40]
    2648:	add	x0, x1, x0
    264c:	ldr	w1, [x0]
    2650:	ldr	w0, [sp, #2156]
    2654:	sub	w0, w1, w0
    2658:	str	w0, [sp, #2144]
    265c:	ldr	w0, [sp, #2144]
    2660:	cmp	w0, #0x0
    2664:	b.ge	2678 <ferror@plt+0xf38>  // b.tcont
    2668:	ldr	w1, [sp, #2144]
    266c:	ldr	w0, [sp, #20]
    2670:	add	w0, w1, w0
    2674:	str	w0, [sp, #2144]
    2678:	ldrsw	x0, [sp, #2144]
    267c:	lsl	x0, x0, #2
    2680:	ldr	x1, [sp, #32]
    2684:	add	x0, x1, x0
    2688:	ldr	w1, [sp, #2148]
    268c:	str	w1, [x0]
    2690:	ldr	w0, [sp, #2152]
    2694:	add	w0, w0, #0x1
    2698:	str	w0, [sp, #2152]
    269c:	ldr	w1, [sp, #2152]
    26a0:	ldr	w0, [sp, #20]
    26a4:	cmp	w1, w0
    26a8:	b.lt	25fc <ferror@plt+0xebc>  // b.tstop
    26ac:	str	wzr, [sp, #2132]
    26b0:	mov	w0, #0xffffffff            	// #-1
    26b4:	str	w0, [sp, #2140]
    26b8:	ldr	w0, [sp, #2140]
    26bc:	add	w0, w0, #0x1
    26c0:	str	w0, [sp, #2144]
    26c4:	b	26d4 <ferror@plt+0xf94>
    26c8:	ldr	w0, [sp, #2144]
    26cc:	add	w0, w0, #0x1
    26d0:	str	w0, [sp, #2144]
    26d4:	ldr	w0, [sp, #2144]
    26d8:	asr	w0, w0, #5
    26dc:	sxtw	x0, w0
    26e0:	lsl	x0, x0, #2
    26e4:	ldr	x1, [sp, #24]
    26e8:	add	x0, x1, x0
    26ec:	ldr	w1, [x0]
    26f0:	ldr	w0, [sp, #2144]
    26f4:	and	w0, w0, #0x1f
    26f8:	mov	w2, #0x1                   	// #1
    26fc:	lsl	w0, w2, w0
    2700:	and	w0, w1, w0
    2704:	cmp	w0, #0x0
    2708:	b.eq	271c <ferror@plt+0xfdc>  // b.none
    270c:	ldr	w0, [sp, #2144]
    2710:	and	w0, w0, #0x1f
    2714:	cmp	w0, #0x0
    2718:	b.ne	26c8 <ferror@plt+0xf88>  // b.any
    271c:	ldr	w0, [sp, #2144]
    2720:	asr	w0, w0, #5
    2724:	sxtw	x0, w0
    2728:	lsl	x0, x0, #2
    272c:	ldr	x1, [sp, #24]
    2730:	add	x0, x1, x0
    2734:	ldr	w1, [x0]
    2738:	ldr	w0, [sp, #2144]
    273c:	and	w0, w0, #0x1f
    2740:	mov	w2, #0x1                   	// #1
    2744:	lsl	w0, w2, w0
    2748:	and	w0, w1, w0
    274c:	cmp	w0, #0x0
    2750:	b.eq	27d0 <ferror@plt+0x1090>  // b.none
    2754:	b	2764 <ferror@plt+0x1024>
    2758:	ldr	w0, [sp, #2144]
    275c:	add	w0, w0, #0x20
    2760:	str	w0, [sp, #2144]
    2764:	ldr	w0, [sp, #2144]
    2768:	asr	w0, w0, #5
    276c:	sxtw	x0, w0
    2770:	lsl	x0, x0, #2
    2774:	ldr	x1, [sp, #24]
    2778:	add	x0, x1, x0
    277c:	ldr	w0, [x0]
    2780:	cmn	w0, #0x1
    2784:	b.eq	2758 <ferror@plt+0x1018>  // b.none
    2788:	b	2798 <ferror@plt+0x1058>
    278c:	ldr	w0, [sp, #2144]
    2790:	add	w0, w0, #0x1
    2794:	str	w0, [sp, #2144]
    2798:	ldr	w0, [sp, #2144]
    279c:	asr	w0, w0, #5
    27a0:	sxtw	x0, w0
    27a4:	lsl	x0, x0, #2
    27a8:	ldr	x1, [sp, #24]
    27ac:	add	x0, x1, x0
    27b0:	ldr	w1, [x0]
    27b4:	ldr	w0, [sp, #2144]
    27b8:	and	w0, w0, #0x1f
    27bc:	mov	w2, #0x1                   	// #1
    27c0:	lsl	w0, w2, w0
    27c4:	and	w0, w1, w0
    27c8:	cmp	w0, #0x0
    27cc:	b.ne	278c <ferror@plt+0x104c>  // b.any
    27d0:	ldr	w0, [sp, #2144]
    27d4:	sub	w0, w0, #0x1
    27d8:	str	w0, [sp, #2112]
    27dc:	ldr	w1, [sp, #2112]
    27e0:	ldr	w0, [sp, #20]
    27e4:	cmp	w1, w0
    27e8:	b.ge	2a18 <ferror@plt+0x12d8>  // b.tcont
    27ec:	b	27fc <ferror@plt+0x10bc>
    27f0:	ldr	w0, [sp, #2144]
    27f4:	add	w0, w0, #0x1
    27f8:	str	w0, [sp, #2144]
    27fc:	ldr	w0, [sp, #2144]
    2800:	asr	w0, w0, #5
    2804:	sxtw	x0, w0
    2808:	lsl	x0, x0, #2
    280c:	ldr	x1, [sp, #24]
    2810:	add	x0, x1, x0
    2814:	ldr	w1, [x0]
    2818:	ldr	w0, [sp, #2144]
    281c:	and	w0, w0, #0x1f
    2820:	mov	w2, #0x1                   	// #1
    2824:	lsl	w0, w2, w0
    2828:	and	w0, w1, w0
    282c:	cmp	w0, #0x0
    2830:	b.ne	2844 <ferror@plt+0x1104>  // b.any
    2834:	ldr	w0, [sp, #2144]
    2838:	and	w0, w0, #0x1f
    283c:	cmp	w0, #0x0
    2840:	b.ne	27f0 <ferror@plt+0x10b0>  // b.any
    2844:	ldr	w0, [sp, #2144]
    2848:	asr	w0, w0, #5
    284c:	sxtw	x0, w0
    2850:	lsl	x0, x0, #2
    2854:	ldr	x1, [sp, #24]
    2858:	add	x0, x1, x0
    285c:	ldr	w1, [x0]
    2860:	ldr	w0, [sp, #2144]
    2864:	and	w0, w0, #0x1f
    2868:	mov	w2, #0x1                   	// #1
    286c:	lsl	w0, w2, w0
    2870:	and	w0, w1, w0
    2874:	cmp	w0, #0x0
    2878:	b.ne	28f8 <ferror@plt+0x11b8>  // b.any
    287c:	b	288c <ferror@plt+0x114c>
    2880:	ldr	w0, [sp, #2144]
    2884:	add	w0, w0, #0x20
    2888:	str	w0, [sp, #2144]
    288c:	ldr	w0, [sp, #2144]
    2890:	asr	w0, w0, #5
    2894:	sxtw	x0, w0
    2898:	lsl	x0, x0, #2
    289c:	ldr	x1, [sp, #24]
    28a0:	add	x0, x1, x0
    28a4:	ldr	w0, [x0]
    28a8:	cmp	w0, #0x0
    28ac:	b.eq	2880 <ferror@plt+0x1140>  // b.none
    28b0:	b	28c0 <ferror@plt+0x1180>
    28b4:	ldr	w0, [sp, #2144]
    28b8:	add	w0, w0, #0x1
    28bc:	str	w0, [sp, #2144]
    28c0:	ldr	w0, [sp, #2144]
    28c4:	asr	w0, w0, #5
    28c8:	sxtw	x0, w0
    28cc:	lsl	x0, x0, #2
    28d0:	ldr	x1, [sp, #24]
    28d4:	add	x0, x1, x0
    28d8:	ldr	w1, [x0]
    28dc:	ldr	w0, [sp, #2144]
    28e0:	and	w0, w0, #0x1f
    28e4:	mov	w2, #0x1                   	// #1
    28e8:	lsl	w0, w2, w0
    28ec:	and	w0, w1, w0
    28f0:	cmp	w0, #0x0
    28f4:	b.eq	28b4 <ferror@plt+0x1174>  // b.none
    28f8:	ldr	w0, [sp, #2144]
    28fc:	sub	w0, w0, #0x1
    2900:	str	w0, [sp, #2140]
    2904:	ldr	w1, [sp, #2140]
    2908:	ldr	w0, [sp, #20]
    290c:	cmp	w1, w0
    2910:	b.ge	2a20 <ferror@plt+0x12e0>  // b.tcont
    2914:	ldr	w1, [sp, #2140]
    2918:	ldr	w0, [sp, #2112]
    291c:	cmp	w1, w0
    2920:	b.le	26b8 <ferror@plt+0xf78>
    2924:	ldr	w1, [sp, #2140]
    2928:	ldr	w0, [sp, #2112]
    292c:	sub	w0, w1, w0
    2930:	add	w0, w0, #0x1
    2934:	ldr	w1, [sp, #2132]
    2938:	add	w0, w1, w0
    293c:	str	w0, [sp, #2132]
    2940:	ldr	w3, [sp, #2140]
    2944:	ldr	w2, [sp, #2112]
    2948:	ldr	x1, [sp, #32]
    294c:	ldr	x0, [sp, #40]
    2950:	bl	1a74 <ferror@plt+0x334>
    2954:	mov	w0, #0xffffffff            	// #-1
    2958:	str	w0, [sp, #2136]
    295c:	ldr	w0, [sp, #2112]
    2960:	str	w0, [sp, #2152]
    2964:	b	2a04 <ferror@plt+0x12c4>
    2968:	ldrsw	x0, [sp, #2152]
    296c:	lsl	x0, x0, #2
    2970:	ldr	x1, [sp, #40]
    2974:	add	x0, x1, x0
    2978:	ldr	w0, [x0]
    297c:	mov	w0, w0
    2980:	lsl	x0, x0, #2
    2984:	ldr	x1, [sp, #32]
    2988:	add	x0, x1, x0
    298c:	ldr	w0, [x0]
    2990:	str	w0, [sp, #2108]
    2994:	ldr	w1, [sp, #2136]
    2998:	ldr	w0, [sp, #2108]
    299c:	cmp	w1, w0
    29a0:	b.eq	29f8 <ferror@plt+0x12b8>  // b.none
    29a4:	ldr	w0, [sp, #2152]
    29a8:	asr	w0, w0, #5
    29ac:	sxtw	x0, w0
    29b0:	lsl	x0, x0, #2
    29b4:	ldr	x1, [sp, #24]
    29b8:	add	x0, x1, x0
    29bc:	ldr	w2, [x0]
    29c0:	ldr	w0, [sp, #2152]
    29c4:	and	w0, w0, #0x1f
    29c8:	mov	w1, #0x1                   	// #1
    29cc:	lsl	w1, w1, w0
    29d0:	ldr	w0, [sp, #2152]
    29d4:	asr	w0, w0, #5
    29d8:	sxtw	x0, w0
    29dc:	lsl	x0, x0, #2
    29e0:	ldr	x3, [sp, #24]
    29e4:	add	x0, x3, x0
    29e8:	orr	w1, w2, w1
    29ec:	str	w1, [x0]
    29f0:	ldr	w0, [sp, #2108]
    29f4:	str	w0, [sp, #2136]
    29f8:	ldr	w0, [sp, #2152]
    29fc:	add	w0, w0, #0x1
    2a00:	str	w0, [sp, #2152]
    2a04:	ldr	w1, [sp, #2152]
    2a08:	ldr	w0, [sp, #2140]
    2a0c:	cmp	w1, w0
    2a10:	b.le	2968 <ferror@plt+0x1228>
    2a14:	b	26b8 <ferror@plt+0xf78>
    2a18:	nop
    2a1c:	b	2a24 <ferror@plt+0x12e4>
    2a20:	nop
    2a24:	ldr	w0, [sp, #16]
    2a28:	cmp	w0, #0x3
    2a2c:	b.le	2a50 <ferror@plt+0x1310>
    2a30:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    2a34:	ldr	x0, [x0, #4016]
    2a38:	ldr	x3, [x0]
    2a3c:	ldr	w2, [sp, #2132]
    2a40:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    2a44:	add	x1, x0, #0xf20
    2a48:	mov	x0, x3
    2a4c:	bl	1730 <fprintf@plt>
    2a50:	ldr	w0, [sp, #2156]
    2a54:	lsl	w0, w0, #1
    2a58:	str	w0, [sp, #2156]
    2a5c:	ldr	w1, [sp, #2156]
    2a60:	ldr	w0, [sp, #20]
    2a64:	cmp	w1, w0
    2a68:	b.gt	2a7c <ferror@plt+0x133c>
    2a6c:	ldr	w0, [sp, #2132]
    2a70:	cmp	w0, #0x0
    2a74:	b.eq	2a7c <ferror@plt+0x133c>  // b.none
    2a78:	b	25c4 <ferror@plt+0xe84>
    2a7c:	ldr	w0, [sp, #16]
    2a80:	cmp	w0, #0x3
    2a84:	b.le	2aac <ferror@plt+0x136c>
    2a88:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    2a8c:	ldr	x0, [x0, #4016]
    2a90:	ldr	x0, [x0]
    2a94:	mov	x3, x0
    2a98:	mov	x2, #0x21                  	// #33
    2a9c:	mov	x1, #0x1                   	// #1
    2aa0:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    2aa4:	add	x0, x0, #0xf38
    2aa8:	bl	16d0 <fwrite@plt>
    2aac:	str	wzr, [sp, #2148]
    2ab0:	str	wzr, [sp, #2152]
    2ab4:	b	2b38 <ferror@plt+0x13f8>
    2ab8:	ldr	w0, [sp, #2148]
    2abc:	add	w0, w0, #0x1
    2ac0:	str	w0, [sp, #2148]
    2ac4:	ldrsw	x0, [sp, #2148]
    2ac8:	lsl	x0, x0, #2
    2acc:	add	x1, sp, #0x38
    2ad0:	ldr	w0, [x1, x0]
    2ad4:	cmp	w0, #0x0
    2ad8:	b.eq	2ab8 <ferror@plt+0x1378>  // b.none
    2adc:	ldrsw	x0, [sp, #2148]
    2ae0:	lsl	x0, x0, #2
    2ae4:	add	x1, sp, #0x38
    2ae8:	ldr	w0, [x1, x0]
    2aec:	sub	w2, w0, #0x1
    2af0:	ldrsw	x0, [sp, #2148]
    2af4:	lsl	x0, x0, #2
    2af8:	add	x1, sp, #0x38
    2afc:	str	w2, [x1, x0]
    2b00:	ldrsw	x0, [sp, #2152]
    2b04:	lsl	x0, x0, #2
    2b08:	ldr	x1, [sp, #40]
    2b0c:	add	x0, x1, x0
    2b10:	ldr	w0, [x0]
    2b14:	mov	w0, w0
    2b18:	ldr	x1, [sp, #2120]
    2b1c:	add	x0, x1, x0
    2b20:	ldr	w1, [sp, #2148]
    2b24:	and	w1, w1, #0xff
    2b28:	strb	w1, [x0]
    2b2c:	ldr	w0, [sp, #2152]
    2b30:	add	w0, w0, #0x1
    2b34:	str	w0, [sp, #2152]
    2b38:	ldr	w1, [sp, #2152]
    2b3c:	ldr	w0, [sp, #20]
    2b40:	cmp	w1, w0
    2b44:	b.lt	2ac4 <ferror@plt+0x1384>  // b.tstop
    2b48:	ldr	w0, [sp, #2148]
    2b4c:	cmp	w0, #0xff
    2b50:	b.le	2b5c <ferror@plt+0x141c>
    2b54:	mov	w0, #0x3ed                 	// #1005
    2b58:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    2b5c:	nop
    2b60:	ldp	x29, x30, [sp]
    2b64:	add	sp, sp, #0x870
    2b68:	ret
    2b6c:	sub	sp, sp, #0x40
    2b70:	str	w0, [sp, #44]
    2b74:	str	w1, [sp, #40]
    2b78:	str	x2, [sp, #32]
    2b7c:	str	x3, [sp, #24]
    2b80:	str	w4, [sp, #20]
    2b84:	str	x5, [sp, #8]
    2b88:	ldr	w0, [sp, #44]
    2b8c:	ldr	x1, [sp, #32]
    2b90:	add	x0, x1, x0
    2b94:	ldrb	w0, [x0]
    2b98:	strb	w0, [sp, #59]
    2b9c:	ldr	w0, [sp, #40]
    2ba0:	ldr	x1, [sp, #32]
    2ba4:	add	x0, x1, x0
    2ba8:	ldrb	w0, [x0]
    2bac:	strb	w0, [sp, #58]
    2bb0:	ldrb	w1, [sp, #59]
    2bb4:	ldrb	w0, [sp, #58]
    2bb8:	cmp	w1, w0
    2bbc:	b.eq	2bd8 <ferror@plt+0x1498>  // b.none
    2bc0:	ldrb	w1, [sp, #59]
    2bc4:	ldrb	w0, [sp, #58]
    2bc8:	cmp	w1, w0
    2bcc:	cset	w0, hi  // hi = pmore
    2bd0:	and	w0, w0, #0xff
    2bd4:	b	36e4 <ferror@plt+0x1fa4>
    2bd8:	ldr	w0, [sp, #44]
    2bdc:	add	w0, w0, #0x1
    2be0:	str	w0, [sp, #44]
    2be4:	ldr	w0, [sp, #40]
    2be8:	add	w0, w0, #0x1
    2bec:	str	w0, [sp, #40]
    2bf0:	ldr	w0, [sp, #44]
    2bf4:	ldr	x1, [sp, #32]
    2bf8:	add	x0, x1, x0
    2bfc:	ldrb	w0, [x0]
    2c00:	strb	w0, [sp, #59]
    2c04:	ldr	w0, [sp, #40]
    2c08:	ldr	x1, [sp, #32]
    2c0c:	add	x0, x1, x0
    2c10:	ldrb	w0, [x0]
    2c14:	strb	w0, [sp, #58]
    2c18:	ldrb	w1, [sp, #59]
    2c1c:	ldrb	w0, [sp, #58]
    2c20:	cmp	w1, w0
    2c24:	b.eq	2c40 <ferror@plt+0x1500>  // b.none
    2c28:	ldrb	w1, [sp, #59]
    2c2c:	ldrb	w0, [sp, #58]
    2c30:	cmp	w1, w0
    2c34:	cset	w0, hi  // hi = pmore
    2c38:	and	w0, w0, #0xff
    2c3c:	b	36e4 <ferror@plt+0x1fa4>
    2c40:	ldr	w0, [sp, #44]
    2c44:	add	w0, w0, #0x1
    2c48:	str	w0, [sp, #44]
    2c4c:	ldr	w0, [sp, #40]
    2c50:	add	w0, w0, #0x1
    2c54:	str	w0, [sp, #40]
    2c58:	ldr	w0, [sp, #44]
    2c5c:	ldr	x1, [sp, #32]
    2c60:	add	x0, x1, x0
    2c64:	ldrb	w0, [x0]
    2c68:	strb	w0, [sp, #59]
    2c6c:	ldr	w0, [sp, #40]
    2c70:	ldr	x1, [sp, #32]
    2c74:	add	x0, x1, x0
    2c78:	ldrb	w0, [x0]
    2c7c:	strb	w0, [sp, #58]
    2c80:	ldrb	w1, [sp, #59]
    2c84:	ldrb	w0, [sp, #58]
    2c88:	cmp	w1, w0
    2c8c:	b.eq	2ca8 <ferror@plt+0x1568>  // b.none
    2c90:	ldrb	w1, [sp, #59]
    2c94:	ldrb	w0, [sp, #58]
    2c98:	cmp	w1, w0
    2c9c:	cset	w0, hi  // hi = pmore
    2ca0:	and	w0, w0, #0xff
    2ca4:	b	36e4 <ferror@plt+0x1fa4>
    2ca8:	ldr	w0, [sp, #44]
    2cac:	add	w0, w0, #0x1
    2cb0:	str	w0, [sp, #44]
    2cb4:	ldr	w0, [sp, #40]
    2cb8:	add	w0, w0, #0x1
    2cbc:	str	w0, [sp, #40]
    2cc0:	ldr	w0, [sp, #44]
    2cc4:	ldr	x1, [sp, #32]
    2cc8:	add	x0, x1, x0
    2ccc:	ldrb	w0, [x0]
    2cd0:	strb	w0, [sp, #59]
    2cd4:	ldr	w0, [sp, #40]
    2cd8:	ldr	x1, [sp, #32]
    2cdc:	add	x0, x1, x0
    2ce0:	ldrb	w0, [x0]
    2ce4:	strb	w0, [sp, #58]
    2ce8:	ldrb	w1, [sp, #59]
    2cec:	ldrb	w0, [sp, #58]
    2cf0:	cmp	w1, w0
    2cf4:	b.eq	2d10 <ferror@plt+0x15d0>  // b.none
    2cf8:	ldrb	w1, [sp, #59]
    2cfc:	ldrb	w0, [sp, #58]
    2d00:	cmp	w1, w0
    2d04:	cset	w0, hi  // hi = pmore
    2d08:	and	w0, w0, #0xff
    2d0c:	b	36e4 <ferror@plt+0x1fa4>
    2d10:	ldr	w0, [sp, #44]
    2d14:	add	w0, w0, #0x1
    2d18:	str	w0, [sp, #44]
    2d1c:	ldr	w0, [sp, #40]
    2d20:	add	w0, w0, #0x1
    2d24:	str	w0, [sp, #40]
    2d28:	ldr	w0, [sp, #44]
    2d2c:	ldr	x1, [sp, #32]
    2d30:	add	x0, x1, x0
    2d34:	ldrb	w0, [x0]
    2d38:	strb	w0, [sp, #59]
    2d3c:	ldr	w0, [sp, #40]
    2d40:	ldr	x1, [sp, #32]
    2d44:	add	x0, x1, x0
    2d48:	ldrb	w0, [x0]
    2d4c:	strb	w0, [sp, #58]
    2d50:	ldrb	w1, [sp, #59]
    2d54:	ldrb	w0, [sp, #58]
    2d58:	cmp	w1, w0
    2d5c:	b.eq	2d78 <ferror@plt+0x1638>  // b.none
    2d60:	ldrb	w1, [sp, #59]
    2d64:	ldrb	w0, [sp, #58]
    2d68:	cmp	w1, w0
    2d6c:	cset	w0, hi  // hi = pmore
    2d70:	and	w0, w0, #0xff
    2d74:	b	36e4 <ferror@plt+0x1fa4>
    2d78:	ldr	w0, [sp, #44]
    2d7c:	add	w0, w0, #0x1
    2d80:	str	w0, [sp, #44]
    2d84:	ldr	w0, [sp, #40]
    2d88:	add	w0, w0, #0x1
    2d8c:	str	w0, [sp, #40]
    2d90:	ldr	w0, [sp, #44]
    2d94:	ldr	x1, [sp, #32]
    2d98:	add	x0, x1, x0
    2d9c:	ldrb	w0, [x0]
    2da0:	strb	w0, [sp, #59]
    2da4:	ldr	w0, [sp, #40]
    2da8:	ldr	x1, [sp, #32]
    2dac:	add	x0, x1, x0
    2db0:	ldrb	w0, [x0]
    2db4:	strb	w0, [sp, #58]
    2db8:	ldrb	w1, [sp, #59]
    2dbc:	ldrb	w0, [sp, #58]
    2dc0:	cmp	w1, w0
    2dc4:	b.eq	2de0 <ferror@plt+0x16a0>  // b.none
    2dc8:	ldrb	w1, [sp, #59]
    2dcc:	ldrb	w0, [sp, #58]
    2dd0:	cmp	w1, w0
    2dd4:	cset	w0, hi  // hi = pmore
    2dd8:	and	w0, w0, #0xff
    2ddc:	b	36e4 <ferror@plt+0x1fa4>
    2de0:	ldr	w0, [sp, #44]
    2de4:	add	w0, w0, #0x1
    2de8:	str	w0, [sp, #44]
    2dec:	ldr	w0, [sp, #40]
    2df0:	add	w0, w0, #0x1
    2df4:	str	w0, [sp, #40]
    2df8:	ldr	w0, [sp, #44]
    2dfc:	ldr	x1, [sp, #32]
    2e00:	add	x0, x1, x0
    2e04:	ldrb	w0, [x0]
    2e08:	strb	w0, [sp, #59]
    2e0c:	ldr	w0, [sp, #40]
    2e10:	ldr	x1, [sp, #32]
    2e14:	add	x0, x1, x0
    2e18:	ldrb	w0, [x0]
    2e1c:	strb	w0, [sp, #58]
    2e20:	ldrb	w1, [sp, #59]
    2e24:	ldrb	w0, [sp, #58]
    2e28:	cmp	w1, w0
    2e2c:	b.eq	2e48 <ferror@plt+0x1708>  // b.none
    2e30:	ldrb	w1, [sp, #59]
    2e34:	ldrb	w0, [sp, #58]
    2e38:	cmp	w1, w0
    2e3c:	cset	w0, hi  // hi = pmore
    2e40:	and	w0, w0, #0xff
    2e44:	b	36e4 <ferror@plt+0x1fa4>
    2e48:	ldr	w0, [sp, #44]
    2e4c:	add	w0, w0, #0x1
    2e50:	str	w0, [sp, #44]
    2e54:	ldr	w0, [sp, #40]
    2e58:	add	w0, w0, #0x1
    2e5c:	str	w0, [sp, #40]
    2e60:	ldr	w0, [sp, #44]
    2e64:	ldr	x1, [sp, #32]
    2e68:	add	x0, x1, x0
    2e6c:	ldrb	w0, [x0]
    2e70:	strb	w0, [sp, #59]
    2e74:	ldr	w0, [sp, #40]
    2e78:	ldr	x1, [sp, #32]
    2e7c:	add	x0, x1, x0
    2e80:	ldrb	w0, [x0]
    2e84:	strb	w0, [sp, #58]
    2e88:	ldrb	w1, [sp, #59]
    2e8c:	ldrb	w0, [sp, #58]
    2e90:	cmp	w1, w0
    2e94:	b.eq	2eb0 <ferror@plt+0x1770>  // b.none
    2e98:	ldrb	w1, [sp, #59]
    2e9c:	ldrb	w0, [sp, #58]
    2ea0:	cmp	w1, w0
    2ea4:	cset	w0, hi  // hi = pmore
    2ea8:	and	w0, w0, #0xff
    2eac:	b	36e4 <ferror@plt+0x1fa4>
    2eb0:	ldr	w0, [sp, #44]
    2eb4:	add	w0, w0, #0x1
    2eb8:	str	w0, [sp, #44]
    2ebc:	ldr	w0, [sp, #40]
    2ec0:	add	w0, w0, #0x1
    2ec4:	str	w0, [sp, #40]
    2ec8:	ldr	w0, [sp, #44]
    2ecc:	ldr	x1, [sp, #32]
    2ed0:	add	x0, x1, x0
    2ed4:	ldrb	w0, [x0]
    2ed8:	strb	w0, [sp, #59]
    2edc:	ldr	w0, [sp, #40]
    2ee0:	ldr	x1, [sp, #32]
    2ee4:	add	x0, x1, x0
    2ee8:	ldrb	w0, [x0]
    2eec:	strb	w0, [sp, #58]
    2ef0:	ldrb	w1, [sp, #59]
    2ef4:	ldrb	w0, [sp, #58]
    2ef8:	cmp	w1, w0
    2efc:	b.eq	2f18 <ferror@plt+0x17d8>  // b.none
    2f00:	ldrb	w1, [sp, #59]
    2f04:	ldrb	w0, [sp, #58]
    2f08:	cmp	w1, w0
    2f0c:	cset	w0, hi  // hi = pmore
    2f10:	and	w0, w0, #0xff
    2f14:	b	36e4 <ferror@plt+0x1fa4>
    2f18:	ldr	w0, [sp, #44]
    2f1c:	add	w0, w0, #0x1
    2f20:	str	w0, [sp, #44]
    2f24:	ldr	w0, [sp, #40]
    2f28:	add	w0, w0, #0x1
    2f2c:	str	w0, [sp, #40]
    2f30:	ldr	w0, [sp, #44]
    2f34:	ldr	x1, [sp, #32]
    2f38:	add	x0, x1, x0
    2f3c:	ldrb	w0, [x0]
    2f40:	strb	w0, [sp, #59]
    2f44:	ldr	w0, [sp, #40]
    2f48:	ldr	x1, [sp, #32]
    2f4c:	add	x0, x1, x0
    2f50:	ldrb	w0, [x0]
    2f54:	strb	w0, [sp, #58]
    2f58:	ldrb	w1, [sp, #59]
    2f5c:	ldrb	w0, [sp, #58]
    2f60:	cmp	w1, w0
    2f64:	b.eq	2f80 <ferror@plt+0x1840>  // b.none
    2f68:	ldrb	w1, [sp, #59]
    2f6c:	ldrb	w0, [sp, #58]
    2f70:	cmp	w1, w0
    2f74:	cset	w0, hi  // hi = pmore
    2f78:	and	w0, w0, #0xff
    2f7c:	b	36e4 <ferror@plt+0x1fa4>
    2f80:	ldr	w0, [sp, #44]
    2f84:	add	w0, w0, #0x1
    2f88:	str	w0, [sp, #44]
    2f8c:	ldr	w0, [sp, #40]
    2f90:	add	w0, w0, #0x1
    2f94:	str	w0, [sp, #40]
    2f98:	ldr	w0, [sp, #44]
    2f9c:	ldr	x1, [sp, #32]
    2fa0:	add	x0, x1, x0
    2fa4:	ldrb	w0, [x0]
    2fa8:	strb	w0, [sp, #59]
    2fac:	ldr	w0, [sp, #40]
    2fb0:	ldr	x1, [sp, #32]
    2fb4:	add	x0, x1, x0
    2fb8:	ldrb	w0, [x0]
    2fbc:	strb	w0, [sp, #58]
    2fc0:	ldrb	w1, [sp, #59]
    2fc4:	ldrb	w0, [sp, #58]
    2fc8:	cmp	w1, w0
    2fcc:	b.eq	2fe8 <ferror@plt+0x18a8>  // b.none
    2fd0:	ldrb	w1, [sp, #59]
    2fd4:	ldrb	w0, [sp, #58]
    2fd8:	cmp	w1, w0
    2fdc:	cset	w0, hi  // hi = pmore
    2fe0:	and	w0, w0, #0xff
    2fe4:	b	36e4 <ferror@plt+0x1fa4>
    2fe8:	ldr	w0, [sp, #44]
    2fec:	add	w0, w0, #0x1
    2ff0:	str	w0, [sp, #44]
    2ff4:	ldr	w0, [sp, #40]
    2ff8:	add	w0, w0, #0x1
    2ffc:	str	w0, [sp, #40]
    3000:	ldr	w0, [sp, #44]
    3004:	ldr	x1, [sp, #32]
    3008:	add	x0, x1, x0
    300c:	ldrb	w0, [x0]
    3010:	strb	w0, [sp, #59]
    3014:	ldr	w0, [sp, #40]
    3018:	ldr	x1, [sp, #32]
    301c:	add	x0, x1, x0
    3020:	ldrb	w0, [x0]
    3024:	strb	w0, [sp, #58]
    3028:	ldrb	w1, [sp, #59]
    302c:	ldrb	w0, [sp, #58]
    3030:	cmp	w1, w0
    3034:	b.eq	3050 <ferror@plt+0x1910>  // b.none
    3038:	ldrb	w1, [sp, #59]
    303c:	ldrb	w0, [sp, #58]
    3040:	cmp	w1, w0
    3044:	cset	w0, hi  // hi = pmore
    3048:	and	w0, w0, #0xff
    304c:	b	36e4 <ferror@plt+0x1fa4>
    3050:	ldr	w0, [sp, #44]
    3054:	add	w0, w0, #0x1
    3058:	str	w0, [sp, #44]
    305c:	ldr	w0, [sp, #40]
    3060:	add	w0, w0, #0x1
    3064:	str	w0, [sp, #40]
    3068:	ldr	w0, [sp, #20]
    306c:	add	w0, w0, #0x8
    3070:	str	w0, [sp, #60]
    3074:	ldr	w0, [sp, #44]
    3078:	ldr	x1, [sp, #32]
    307c:	add	x0, x1, x0
    3080:	ldrb	w0, [x0]
    3084:	strb	w0, [sp, #59]
    3088:	ldr	w0, [sp, #40]
    308c:	ldr	x1, [sp, #32]
    3090:	add	x0, x1, x0
    3094:	ldrb	w0, [x0]
    3098:	strb	w0, [sp, #58]
    309c:	ldrb	w1, [sp, #59]
    30a0:	ldrb	w0, [sp, #58]
    30a4:	cmp	w1, w0
    30a8:	b.eq	30c4 <ferror@plt+0x1984>  // b.none
    30ac:	ldrb	w1, [sp, #59]
    30b0:	ldrb	w0, [sp, #58]
    30b4:	cmp	w1, w0
    30b8:	cset	w0, hi  // hi = pmore
    30bc:	and	w0, w0, #0xff
    30c0:	b	36e4 <ferror@plt+0x1fa4>
    30c4:	ldr	w0, [sp, #44]
    30c8:	lsl	x0, x0, #1
    30cc:	ldr	x1, [sp, #24]
    30d0:	add	x0, x1, x0
    30d4:	ldrh	w0, [x0]
    30d8:	strh	w0, [sp, #56]
    30dc:	ldr	w0, [sp, #40]
    30e0:	lsl	x0, x0, #1
    30e4:	ldr	x1, [sp, #24]
    30e8:	add	x0, x1, x0
    30ec:	ldrh	w0, [x0]
    30f0:	strh	w0, [sp, #54]
    30f4:	ldrh	w1, [sp, #56]
    30f8:	ldrh	w0, [sp, #54]
    30fc:	cmp	w1, w0
    3100:	b.eq	311c <ferror@plt+0x19dc>  // b.none
    3104:	ldrh	w1, [sp, #56]
    3108:	ldrh	w0, [sp, #54]
    310c:	cmp	w1, w0
    3110:	cset	w0, hi  // hi = pmore
    3114:	and	w0, w0, #0xff
    3118:	b	36e4 <ferror@plt+0x1fa4>
    311c:	ldr	w0, [sp, #44]
    3120:	add	w0, w0, #0x1
    3124:	str	w0, [sp, #44]
    3128:	ldr	w0, [sp, #40]
    312c:	add	w0, w0, #0x1
    3130:	str	w0, [sp, #40]
    3134:	ldr	w0, [sp, #44]
    3138:	ldr	x1, [sp, #32]
    313c:	add	x0, x1, x0
    3140:	ldrb	w0, [x0]
    3144:	strb	w0, [sp, #59]
    3148:	ldr	w0, [sp, #40]
    314c:	ldr	x1, [sp, #32]
    3150:	add	x0, x1, x0
    3154:	ldrb	w0, [x0]
    3158:	strb	w0, [sp, #58]
    315c:	ldrb	w1, [sp, #59]
    3160:	ldrb	w0, [sp, #58]
    3164:	cmp	w1, w0
    3168:	b.eq	3184 <ferror@plt+0x1a44>  // b.none
    316c:	ldrb	w1, [sp, #59]
    3170:	ldrb	w0, [sp, #58]
    3174:	cmp	w1, w0
    3178:	cset	w0, hi  // hi = pmore
    317c:	and	w0, w0, #0xff
    3180:	b	36e4 <ferror@plt+0x1fa4>
    3184:	ldr	w0, [sp, #44]
    3188:	lsl	x0, x0, #1
    318c:	ldr	x1, [sp, #24]
    3190:	add	x0, x1, x0
    3194:	ldrh	w0, [x0]
    3198:	strh	w0, [sp, #56]
    319c:	ldr	w0, [sp, #40]
    31a0:	lsl	x0, x0, #1
    31a4:	ldr	x1, [sp, #24]
    31a8:	add	x0, x1, x0
    31ac:	ldrh	w0, [x0]
    31b0:	strh	w0, [sp, #54]
    31b4:	ldrh	w1, [sp, #56]
    31b8:	ldrh	w0, [sp, #54]
    31bc:	cmp	w1, w0
    31c0:	b.eq	31dc <ferror@plt+0x1a9c>  // b.none
    31c4:	ldrh	w1, [sp, #56]
    31c8:	ldrh	w0, [sp, #54]
    31cc:	cmp	w1, w0
    31d0:	cset	w0, hi  // hi = pmore
    31d4:	and	w0, w0, #0xff
    31d8:	b	36e4 <ferror@plt+0x1fa4>
    31dc:	ldr	w0, [sp, #44]
    31e0:	add	w0, w0, #0x1
    31e4:	str	w0, [sp, #44]
    31e8:	ldr	w0, [sp, #40]
    31ec:	add	w0, w0, #0x1
    31f0:	str	w0, [sp, #40]
    31f4:	ldr	w0, [sp, #44]
    31f8:	ldr	x1, [sp, #32]
    31fc:	add	x0, x1, x0
    3200:	ldrb	w0, [x0]
    3204:	strb	w0, [sp, #59]
    3208:	ldr	w0, [sp, #40]
    320c:	ldr	x1, [sp, #32]
    3210:	add	x0, x1, x0
    3214:	ldrb	w0, [x0]
    3218:	strb	w0, [sp, #58]
    321c:	ldrb	w1, [sp, #59]
    3220:	ldrb	w0, [sp, #58]
    3224:	cmp	w1, w0
    3228:	b.eq	3244 <ferror@plt+0x1b04>  // b.none
    322c:	ldrb	w1, [sp, #59]
    3230:	ldrb	w0, [sp, #58]
    3234:	cmp	w1, w0
    3238:	cset	w0, hi  // hi = pmore
    323c:	and	w0, w0, #0xff
    3240:	b	36e4 <ferror@plt+0x1fa4>
    3244:	ldr	w0, [sp, #44]
    3248:	lsl	x0, x0, #1
    324c:	ldr	x1, [sp, #24]
    3250:	add	x0, x1, x0
    3254:	ldrh	w0, [x0]
    3258:	strh	w0, [sp, #56]
    325c:	ldr	w0, [sp, #40]
    3260:	lsl	x0, x0, #1
    3264:	ldr	x1, [sp, #24]
    3268:	add	x0, x1, x0
    326c:	ldrh	w0, [x0]
    3270:	strh	w0, [sp, #54]
    3274:	ldrh	w1, [sp, #56]
    3278:	ldrh	w0, [sp, #54]
    327c:	cmp	w1, w0
    3280:	b.eq	329c <ferror@plt+0x1b5c>  // b.none
    3284:	ldrh	w1, [sp, #56]
    3288:	ldrh	w0, [sp, #54]
    328c:	cmp	w1, w0
    3290:	cset	w0, hi  // hi = pmore
    3294:	and	w0, w0, #0xff
    3298:	b	36e4 <ferror@plt+0x1fa4>
    329c:	ldr	w0, [sp, #44]
    32a0:	add	w0, w0, #0x1
    32a4:	str	w0, [sp, #44]
    32a8:	ldr	w0, [sp, #40]
    32ac:	add	w0, w0, #0x1
    32b0:	str	w0, [sp, #40]
    32b4:	ldr	w0, [sp, #44]
    32b8:	ldr	x1, [sp, #32]
    32bc:	add	x0, x1, x0
    32c0:	ldrb	w0, [x0]
    32c4:	strb	w0, [sp, #59]
    32c8:	ldr	w0, [sp, #40]
    32cc:	ldr	x1, [sp, #32]
    32d0:	add	x0, x1, x0
    32d4:	ldrb	w0, [x0]
    32d8:	strb	w0, [sp, #58]
    32dc:	ldrb	w1, [sp, #59]
    32e0:	ldrb	w0, [sp, #58]
    32e4:	cmp	w1, w0
    32e8:	b.eq	3304 <ferror@plt+0x1bc4>  // b.none
    32ec:	ldrb	w1, [sp, #59]
    32f0:	ldrb	w0, [sp, #58]
    32f4:	cmp	w1, w0
    32f8:	cset	w0, hi  // hi = pmore
    32fc:	and	w0, w0, #0xff
    3300:	b	36e4 <ferror@plt+0x1fa4>
    3304:	ldr	w0, [sp, #44]
    3308:	lsl	x0, x0, #1
    330c:	ldr	x1, [sp, #24]
    3310:	add	x0, x1, x0
    3314:	ldrh	w0, [x0]
    3318:	strh	w0, [sp, #56]
    331c:	ldr	w0, [sp, #40]
    3320:	lsl	x0, x0, #1
    3324:	ldr	x1, [sp, #24]
    3328:	add	x0, x1, x0
    332c:	ldrh	w0, [x0]
    3330:	strh	w0, [sp, #54]
    3334:	ldrh	w1, [sp, #56]
    3338:	ldrh	w0, [sp, #54]
    333c:	cmp	w1, w0
    3340:	b.eq	335c <ferror@plt+0x1c1c>  // b.none
    3344:	ldrh	w1, [sp, #56]
    3348:	ldrh	w0, [sp, #54]
    334c:	cmp	w1, w0
    3350:	cset	w0, hi  // hi = pmore
    3354:	and	w0, w0, #0xff
    3358:	b	36e4 <ferror@plt+0x1fa4>
    335c:	ldr	w0, [sp, #44]
    3360:	add	w0, w0, #0x1
    3364:	str	w0, [sp, #44]
    3368:	ldr	w0, [sp, #40]
    336c:	add	w0, w0, #0x1
    3370:	str	w0, [sp, #40]
    3374:	ldr	w0, [sp, #44]
    3378:	ldr	x1, [sp, #32]
    337c:	add	x0, x1, x0
    3380:	ldrb	w0, [x0]
    3384:	strb	w0, [sp, #59]
    3388:	ldr	w0, [sp, #40]
    338c:	ldr	x1, [sp, #32]
    3390:	add	x0, x1, x0
    3394:	ldrb	w0, [x0]
    3398:	strb	w0, [sp, #58]
    339c:	ldrb	w1, [sp, #59]
    33a0:	ldrb	w0, [sp, #58]
    33a4:	cmp	w1, w0
    33a8:	b.eq	33c4 <ferror@plt+0x1c84>  // b.none
    33ac:	ldrb	w1, [sp, #59]
    33b0:	ldrb	w0, [sp, #58]
    33b4:	cmp	w1, w0
    33b8:	cset	w0, hi  // hi = pmore
    33bc:	and	w0, w0, #0xff
    33c0:	b	36e4 <ferror@plt+0x1fa4>
    33c4:	ldr	w0, [sp, #44]
    33c8:	lsl	x0, x0, #1
    33cc:	ldr	x1, [sp, #24]
    33d0:	add	x0, x1, x0
    33d4:	ldrh	w0, [x0]
    33d8:	strh	w0, [sp, #56]
    33dc:	ldr	w0, [sp, #40]
    33e0:	lsl	x0, x0, #1
    33e4:	ldr	x1, [sp, #24]
    33e8:	add	x0, x1, x0
    33ec:	ldrh	w0, [x0]
    33f0:	strh	w0, [sp, #54]
    33f4:	ldrh	w1, [sp, #56]
    33f8:	ldrh	w0, [sp, #54]
    33fc:	cmp	w1, w0
    3400:	b.eq	341c <ferror@plt+0x1cdc>  // b.none
    3404:	ldrh	w1, [sp, #56]
    3408:	ldrh	w0, [sp, #54]
    340c:	cmp	w1, w0
    3410:	cset	w0, hi  // hi = pmore
    3414:	and	w0, w0, #0xff
    3418:	b	36e4 <ferror@plt+0x1fa4>
    341c:	ldr	w0, [sp, #44]
    3420:	add	w0, w0, #0x1
    3424:	str	w0, [sp, #44]
    3428:	ldr	w0, [sp, #40]
    342c:	add	w0, w0, #0x1
    3430:	str	w0, [sp, #40]
    3434:	ldr	w0, [sp, #44]
    3438:	ldr	x1, [sp, #32]
    343c:	add	x0, x1, x0
    3440:	ldrb	w0, [x0]
    3444:	strb	w0, [sp, #59]
    3448:	ldr	w0, [sp, #40]
    344c:	ldr	x1, [sp, #32]
    3450:	add	x0, x1, x0
    3454:	ldrb	w0, [x0]
    3458:	strb	w0, [sp, #58]
    345c:	ldrb	w1, [sp, #59]
    3460:	ldrb	w0, [sp, #58]
    3464:	cmp	w1, w0
    3468:	b.eq	3484 <ferror@plt+0x1d44>  // b.none
    346c:	ldrb	w1, [sp, #59]
    3470:	ldrb	w0, [sp, #58]
    3474:	cmp	w1, w0
    3478:	cset	w0, hi  // hi = pmore
    347c:	and	w0, w0, #0xff
    3480:	b	36e4 <ferror@plt+0x1fa4>
    3484:	ldr	w0, [sp, #44]
    3488:	lsl	x0, x0, #1
    348c:	ldr	x1, [sp, #24]
    3490:	add	x0, x1, x0
    3494:	ldrh	w0, [x0]
    3498:	strh	w0, [sp, #56]
    349c:	ldr	w0, [sp, #40]
    34a0:	lsl	x0, x0, #1
    34a4:	ldr	x1, [sp, #24]
    34a8:	add	x0, x1, x0
    34ac:	ldrh	w0, [x0]
    34b0:	strh	w0, [sp, #54]
    34b4:	ldrh	w1, [sp, #56]
    34b8:	ldrh	w0, [sp, #54]
    34bc:	cmp	w1, w0
    34c0:	b.eq	34dc <ferror@plt+0x1d9c>  // b.none
    34c4:	ldrh	w1, [sp, #56]
    34c8:	ldrh	w0, [sp, #54]
    34cc:	cmp	w1, w0
    34d0:	cset	w0, hi  // hi = pmore
    34d4:	and	w0, w0, #0xff
    34d8:	b	36e4 <ferror@plt+0x1fa4>
    34dc:	ldr	w0, [sp, #44]
    34e0:	add	w0, w0, #0x1
    34e4:	str	w0, [sp, #44]
    34e8:	ldr	w0, [sp, #40]
    34ec:	add	w0, w0, #0x1
    34f0:	str	w0, [sp, #40]
    34f4:	ldr	w0, [sp, #44]
    34f8:	ldr	x1, [sp, #32]
    34fc:	add	x0, x1, x0
    3500:	ldrb	w0, [x0]
    3504:	strb	w0, [sp, #59]
    3508:	ldr	w0, [sp, #40]
    350c:	ldr	x1, [sp, #32]
    3510:	add	x0, x1, x0
    3514:	ldrb	w0, [x0]
    3518:	strb	w0, [sp, #58]
    351c:	ldrb	w1, [sp, #59]
    3520:	ldrb	w0, [sp, #58]
    3524:	cmp	w1, w0
    3528:	b.eq	3544 <ferror@plt+0x1e04>  // b.none
    352c:	ldrb	w1, [sp, #59]
    3530:	ldrb	w0, [sp, #58]
    3534:	cmp	w1, w0
    3538:	cset	w0, hi  // hi = pmore
    353c:	and	w0, w0, #0xff
    3540:	b	36e4 <ferror@plt+0x1fa4>
    3544:	ldr	w0, [sp, #44]
    3548:	lsl	x0, x0, #1
    354c:	ldr	x1, [sp, #24]
    3550:	add	x0, x1, x0
    3554:	ldrh	w0, [x0]
    3558:	strh	w0, [sp, #56]
    355c:	ldr	w0, [sp, #40]
    3560:	lsl	x0, x0, #1
    3564:	ldr	x1, [sp, #24]
    3568:	add	x0, x1, x0
    356c:	ldrh	w0, [x0]
    3570:	strh	w0, [sp, #54]
    3574:	ldrh	w1, [sp, #56]
    3578:	ldrh	w0, [sp, #54]
    357c:	cmp	w1, w0
    3580:	b.eq	359c <ferror@plt+0x1e5c>  // b.none
    3584:	ldrh	w1, [sp, #56]
    3588:	ldrh	w0, [sp, #54]
    358c:	cmp	w1, w0
    3590:	cset	w0, hi  // hi = pmore
    3594:	and	w0, w0, #0xff
    3598:	b	36e4 <ferror@plt+0x1fa4>
    359c:	ldr	w0, [sp, #44]
    35a0:	add	w0, w0, #0x1
    35a4:	str	w0, [sp, #44]
    35a8:	ldr	w0, [sp, #40]
    35ac:	add	w0, w0, #0x1
    35b0:	str	w0, [sp, #40]
    35b4:	ldr	w0, [sp, #44]
    35b8:	ldr	x1, [sp, #32]
    35bc:	add	x0, x1, x0
    35c0:	ldrb	w0, [x0]
    35c4:	strb	w0, [sp, #59]
    35c8:	ldr	w0, [sp, #40]
    35cc:	ldr	x1, [sp, #32]
    35d0:	add	x0, x1, x0
    35d4:	ldrb	w0, [x0]
    35d8:	strb	w0, [sp, #58]
    35dc:	ldrb	w1, [sp, #59]
    35e0:	ldrb	w0, [sp, #58]
    35e4:	cmp	w1, w0
    35e8:	b.eq	3604 <ferror@plt+0x1ec4>  // b.none
    35ec:	ldrb	w1, [sp, #59]
    35f0:	ldrb	w0, [sp, #58]
    35f4:	cmp	w1, w0
    35f8:	cset	w0, hi  // hi = pmore
    35fc:	and	w0, w0, #0xff
    3600:	b	36e4 <ferror@plt+0x1fa4>
    3604:	ldr	w0, [sp, #44]
    3608:	lsl	x0, x0, #1
    360c:	ldr	x1, [sp, #24]
    3610:	add	x0, x1, x0
    3614:	ldrh	w0, [x0]
    3618:	strh	w0, [sp, #56]
    361c:	ldr	w0, [sp, #40]
    3620:	lsl	x0, x0, #1
    3624:	ldr	x1, [sp, #24]
    3628:	add	x0, x1, x0
    362c:	ldrh	w0, [x0]
    3630:	strh	w0, [sp, #54]
    3634:	ldrh	w1, [sp, #56]
    3638:	ldrh	w0, [sp, #54]
    363c:	cmp	w1, w0
    3640:	b.eq	365c <ferror@plt+0x1f1c>  // b.none
    3644:	ldrh	w1, [sp, #56]
    3648:	ldrh	w0, [sp, #54]
    364c:	cmp	w1, w0
    3650:	cset	w0, hi  // hi = pmore
    3654:	and	w0, w0, #0xff
    3658:	b	36e4 <ferror@plt+0x1fa4>
    365c:	ldr	w0, [sp, #44]
    3660:	add	w0, w0, #0x1
    3664:	str	w0, [sp, #44]
    3668:	ldr	w0, [sp, #40]
    366c:	add	w0, w0, #0x1
    3670:	str	w0, [sp, #40]
    3674:	ldr	w1, [sp, #44]
    3678:	ldr	w0, [sp, #20]
    367c:	cmp	w1, w0
    3680:	b.cc	3694 <ferror@plt+0x1f54>  // b.lo, b.ul, b.last
    3684:	ldr	w1, [sp, #44]
    3688:	ldr	w0, [sp, #20]
    368c:	sub	w0, w1, w0
    3690:	str	w0, [sp, #44]
    3694:	ldr	w1, [sp, #40]
    3698:	ldr	w0, [sp, #20]
    369c:	cmp	w1, w0
    36a0:	b.cc	36b4 <ferror@plt+0x1f74>  // b.lo, b.ul, b.last
    36a4:	ldr	w1, [sp, #40]
    36a8:	ldr	w0, [sp, #20]
    36ac:	sub	w0, w1, w0
    36b0:	str	w0, [sp, #40]
    36b4:	ldr	w0, [sp, #60]
    36b8:	sub	w0, w0, #0x8
    36bc:	str	w0, [sp, #60]
    36c0:	ldr	x0, [sp, #8]
    36c4:	ldr	w0, [x0]
    36c8:	sub	w1, w0, #0x1
    36cc:	ldr	x0, [sp, #8]
    36d0:	str	w1, [x0]
    36d4:	ldr	w0, [sp, #60]
    36d8:	cmp	w0, #0x0
    36dc:	b.ge	3074 <ferror@plt+0x1934>  // b.tcont
    36e0:	mov	w0, #0x0                   	// #0
    36e4:	add	sp, sp, #0x40
    36e8:	ret
    36ec:	stp	x29, x30, [sp, #-96]!
    36f0:	mov	x29, sp
    36f4:	str	x0, [sp, #56]
    36f8:	str	x1, [sp, #48]
    36fc:	str	x2, [sp, #40]
    3700:	str	w3, [sp, #36]
    3704:	str	w4, [sp, #32]
    3708:	str	w5, [sp, #28]
    370c:	str	w6, [sp, #24]
    3710:	str	x7, [sp, #16]
    3714:	ldr	w1, [sp, #28]
    3718:	ldr	w0, [sp, #32]
    371c:	sub	w0, w1, w0
    3720:	add	w0, w0, #0x1
    3724:	str	w0, [sp, #80]
    3728:	ldr	w0, [sp, #80]
    372c:	cmp	w0, #0x1
    3730:	b.le	3b30 <ferror@plt+0x23f0>
    3734:	str	wzr, [sp, #84]
    3738:	b	3748 <ferror@plt+0x2008>
    373c:	ldr	w0, [sp, #84]
    3740:	add	w0, w0, #0x1
    3744:	str	w0, [sp, #84]
    3748:	adrp	x0, 29000 <BZ2_bzerror@@Base+0x12180>
    374c:	add	x0, x0, #0x158
    3750:	ldrsw	x1, [sp, #84]
    3754:	ldr	w0, [x0, x1, lsl #2]
    3758:	ldr	w1, [sp, #80]
    375c:	cmp	w1, w0
    3760:	b.gt	373c <ferror@plt+0x1ffc>
    3764:	ldr	w0, [sp, #84]
    3768:	sub	w0, w0, #0x1
    376c:	str	w0, [sp, #84]
    3770:	b	3b20 <ferror@plt+0x23e0>
    3774:	adrp	x0, 29000 <BZ2_bzerror@@Base+0x12180>
    3778:	add	x0, x0, #0x158
    377c:	ldrsw	x1, [sp, #84]
    3780:	ldr	w0, [x0, x1, lsl #2]
    3784:	str	w0, [sp, #76]
    3788:	ldr	w1, [sp, #32]
    378c:	ldr	w0, [sp, #76]
    3790:	add	w0, w1, w0
    3794:	str	w0, [sp, #92]
    3798:	ldr	w1, [sp, #92]
    379c:	ldr	w0, [sp, #28]
    37a0:	cmp	w1, w0
    37a4:	b.gt	3b00 <ferror@plt+0x23c0>
    37a8:	ldrsw	x0, [sp, #92]
    37ac:	lsl	x0, x0, #2
    37b0:	ldr	x1, [sp, #56]
    37b4:	add	x0, x1, x0
    37b8:	ldr	w0, [x0]
    37bc:	str	w0, [sp, #72]
    37c0:	ldr	w0, [sp, #92]
    37c4:	str	w0, [sp, #88]
    37c8:	b	3828 <ferror@plt+0x20e8>
    37cc:	ldr	w1, [sp, #88]
    37d0:	ldr	w0, [sp, #76]
    37d4:	sub	w0, w1, w0
    37d8:	sxtw	x0, w0
    37dc:	lsl	x0, x0, #2
    37e0:	ldr	x1, [sp, #56]
    37e4:	add	x1, x1, x0
    37e8:	ldrsw	x0, [sp, #88]
    37ec:	lsl	x0, x0, #2
    37f0:	ldr	x2, [sp, #56]
    37f4:	add	x0, x2, x0
    37f8:	ldr	w1, [x1]
    37fc:	str	w1, [x0]
    3800:	ldr	w1, [sp, #88]
    3804:	ldr	w0, [sp, #76]
    3808:	sub	w0, w1, w0
    380c:	str	w0, [sp, #88]
    3810:	ldr	w1, [sp, #32]
    3814:	ldr	w0, [sp, #76]
    3818:	add	w0, w1, w0
    381c:	ldr	w1, [sp, #88]
    3820:	cmp	w1, w0
    3824:	b.lt	388c <ferror@plt+0x214c>  // b.tstop
    3828:	ldr	w1, [sp, #88]
    382c:	ldr	w0, [sp, #76]
    3830:	sub	w0, w1, w0
    3834:	sxtw	x0, w0
    3838:	lsl	x0, x0, #2
    383c:	ldr	x1, [sp, #56]
    3840:	add	x0, x1, x0
    3844:	ldr	w1, [x0]
    3848:	ldr	w0, [sp, #24]
    384c:	add	w6, w1, w0
    3850:	ldr	w1, [sp, #24]
    3854:	ldr	w0, [sp, #72]
    3858:	add	w0, w1, w0
    385c:	ldr	w1, [sp, #36]
    3860:	ldr	x5, [sp, #16]
    3864:	mov	w4, w1
    3868:	ldr	x3, [sp, #40]
    386c:	ldr	x2, [sp, #48]
    3870:	mov	w1, w0
    3874:	mov	w0, w6
    3878:	bl	2b6c <ferror@plt+0x142c>
    387c:	and	w0, w0, #0xff
    3880:	cmp	w0, #0x0
    3884:	b.ne	37cc <ferror@plt+0x208c>  // b.any
    3888:	b	3890 <ferror@plt+0x2150>
    388c:	nop
    3890:	ldrsw	x0, [sp, #88]
    3894:	lsl	x0, x0, #2
    3898:	ldr	x1, [sp, #56]
    389c:	add	x0, x1, x0
    38a0:	ldr	w1, [sp, #72]
    38a4:	str	w1, [x0]
    38a8:	ldr	w0, [sp, #92]
    38ac:	add	w0, w0, #0x1
    38b0:	str	w0, [sp, #92]
    38b4:	ldr	w1, [sp, #92]
    38b8:	ldr	w0, [sp, #28]
    38bc:	cmp	w1, w0
    38c0:	b.gt	3b08 <ferror@plt+0x23c8>
    38c4:	ldrsw	x0, [sp, #92]
    38c8:	lsl	x0, x0, #2
    38cc:	ldr	x1, [sp, #56]
    38d0:	add	x0, x1, x0
    38d4:	ldr	w0, [x0]
    38d8:	str	w0, [sp, #72]
    38dc:	ldr	w0, [sp, #92]
    38e0:	str	w0, [sp, #88]
    38e4:	b	3944 <ferror@plt+0x2204>
    38e8:	ldr	w1, [sp, #88]
    38ec:	ldr	w0, [sp, #76]
    38f0:	sub	w0, w1, w0
    38f4:	sxtw	x0, w0
    38f8:	lsl	x0, x0, #2
    38fc:	ldr	x1, [sp, #56]
    3900:	add	x1, x1, x0
    3904:	ldrsw	x0, [sp, #88]
    3908:	lsl	x0, x0, #2
    390c:	ldr	x2, [sp, #56]
    3910:	add	x0, x2, x0
    3914:	ldr	w1, [x1]
    3918:	str	w1, [x0]
    391c:	ldr	w1, [sp, #88]
    3920:	ldr	w0, [sp, #76]
    3924:	sub	w0, w1, w0
    3928:	str	w0, [sp, #88]
    392c:	ldr	w1, [sp, #32]
    3930:	ldr	w0, [sp, #76]
    3934:	add	w0, w1, w0
    3938:	ldr	w1, [sp, #88]
    393c:	cmp	w1, w0
    3940:	b.lt	39a8 <ferror@plt+0x2268>  // b.tstop
    3944:	ldr	w1, [sp, #88]
    3948:	ldr	w0, [sp, #76]
    394c:	sub	w0, w1, w0
    3950:	sxtw	x0, w0
    3954:	lsl	x0, x0, #2
    3958:	ldr	x1, [sp, #56]
    395c:	add	x0, x1, x0
    3960:	ldr	w1, [x0]
    3964:	ldr	w0, [sp, #24]
    3968:	add	w6, w1, w0
    396c:	ldr	w1, [sp, #24]
    3970:	ldr	w0, [sp, #72]
    3974:	add	w0, w1, w0
    3978:	ldr	w1, [sp, #36]
    397c:	ldr	x5, [sp, #16]
    3980:	mov	w4, w1
    3984:	ldr	x3, [sp, #40]
    3988:	ldr	x2, [sp, #48]
    398c:	mov	w1, w0
    3990:	mov	w0, w6
    3994:	bl	2b6c <ferror@plt+0x142c>
    3998:	and	w0, w0, #0xff
    399c:	cmp	w0, #0x0
    39a0:	b.ne	38e8 <ferror@plt+0x21a8>  // b.any
    39a4:	b	39ac <ferror@plt+0x226c>
    39a8:	nop
    39ac:	ldrsw	x0, [sp, #88]
    39b0:	lsl	x0, x0, #2
    39b4:	ldr	x1, [sp, #56]
    39b8:	add	x0, x1, x0
    39bc:	ldr	w1, [sp, #72]
    39c0:	str	w1, [x0]
    39c4:	ldr	w0, [sp, #92]
    39c8:	add	w0, w0, #0x1
    39cc:	str	w0, [sp, #92]
    39d0:	ldr	w1, [sp, #92]
    39d4:	ldr	w0, [sp, #28]
    39d8:	cmp	w1, w0
    39dc:	b.gt	3b10 <ferror@plt+0x23d0>
    39e0:	ldrsw	x0, [sp, #92]
    39e4:	lsl	x0, x0, #2
    39e8:	ldr	x1, [sp, #56]
    39ec:	add	x0, x1, x0
    39f0:	ldr	w0, [x0]
    39f4:	str	w0, [sp, #72]
    39f8:	ldr	w0, [sp, #92]
    39fc:	str	w0, [sp, #88]
    3a00:	b	3a60 <ferror@plt+0x2320>
    3a04:	ldr	w1, [sp, #88]
    3a08:	ldr	w0, [sp, #76]
    3a0c:	sub	w0, w1, w0
    3a10:	sxtw	x0, w0
    3a14:	lsl	x0, x0, #2
    3a18:	ldr	x1, [sp, #56]
    3a1c:	add	x1, x1, x0
    3a20:	ldrsw	x0, [sp, #88]
    3a24:	lsl	x0, x0, #2
    3a28:	ldr	x2, [sp, #56]
    3a2c:	add	x0, x2, x0
    3a30:	ldr	w1, [x1]
    3a34:	str	w1, [x0]
    3a38:	ldr	w1, [sp, #88]
    3a3c:	ldr	w0, [sp, #76]
    3a40:	sub	w0, w1, w0
    3a44:	str	w0, [sp, #88]
    3a48:	ldr	w1, [sp, #32]
    3a4c:	ldr	w0, [sp, #76]
    3a50:	add	w0, w1, w0
    3a54:	ldr	w1, [sp, #88]
    3a58:	cmp	w1, w0
    3a5c:	b.lt	3ac4 <ferror@plt+0x2384>  // b.tstop
    3a60:	ldr	w1, [sp, #88]
    3a64:	ldr	w0, [sp, #76]
    3a68:	sub	w0, w1, w0
    3a6c:	sxtw	x0, w0
    3a70:	lsl	x0, x0, #2
    3a74:	ldr	x1, [sp, #56]
    3a78:	add	x0, x1, x0
    3a7c:	ldr	w1, [x0]
    3a80:	ldr	w0, [sp, #24]
    3a84:	add	w6, w1, w0
    3a88:	ldr	w1, [sp, #24]
    3a8c:	ldr	w0, [sp, #72]
    3a90:	add	w0, w1, w0
    3a94:	ldr	w1, [sp, #36]
    3a98:	ldr	x5, [sp, #16]
    3a9c:	mov	w4, w1
    3aa0:	ldr	x3, [sp, #40]
    3aa4:	ldr	x2, [sp, #48]
    3aa8:	mov	w1, w0
    3aac:	mov	w0, w6
    3ab0:	bl	2b6c <ferror@plt+0x142c>
    3ab4:	and	w0, w0, #0xff
    3ab8:	cmp	w0, #0x0
    3abc:	b.ne	3a04 <ferror@plt+0x22c4>  // b.any
    3ac0:	b	3ac8 <ferror@plt+0x2388>
    3ac4:	nop
    3ac8:	ldrsw	x0, [sp, #88]
    3acc:	lsl	x0, x0, #2
    3ad0:	ldr	x1, [sp, #56]
    3ad4:	add	x0, x1, x0
    3ad8:	ldr	w1, [sp, #72]
    3adc:	str	w1, [x0]
    3ae0:	ldr	w0, [sp, #92]
    3ae4:	add	w0, w0, #0x1
    3ae8:	str	w0, [sp, #92]
    3aec:	ldr	x0, [sp, #16]
    3af0:	ldr	w0, [x0]
    3af4:	cmp	w0, #0x0
    3af8:	b.lt	3b38 <ferror@plt+0x23f8>  // b.tstop
    3afc:	b	3798 <ferror@plt+0x2058>
    3b00:	nop
    3b04:	b	3b14 <ferror@plt+0x23d4>
    3b08:	nop
    3b0c:	b	3b14 <ferror@plt+0x23d4>
    3b10:	nop
    3b14:	ldr	w0, [sp, #84]
    3b18:	sub	w0, w0, #0x1
    3b1c:	str	w0, [sp, #84]
    3b20:	ldr	w0, [sp, #84]
    3b24:	cmp	w0, #0x0
    3b28:	b.ge	3774 <ferror@plt+0x2034>  // b.tcont
    3b2c:	b	3b3c <ferror@plt+0x23fc>
    3b30:	nop
    3b34:	b	3b3c <ferror@plt+0x23fc>
    3b38:	nop
    3b3c:	ldp	x29, x30, [sp], #96
    3b40:	ret
    3b44:	sub	sp, sp, #0x20
    3b48:	strb	w0, [sp, #15]
    3b4c:	strb	w1, [sp, #14]
    3b50:	strb	w2, [sp, #13]
    3b54:	ldrb	w1, [sp, #15]
    3b58:	ldrb	w0, [sp, #14]
    3b5c:	cmp	w1, w0
    3b60:	b.ls	3b7c <ferror@plt+0x243c>  // b.plast
    3b64:	ldrb	w0, [sp, #15]
    3b68:	strb	w0, [sp, #31]
    3b6c:	ldrb	w0, [sp, #14]
    3b70:	strb	w0, [sp, #15]
    3b74:	ldrb	w0, [sp, #31]
    3b78:	strb	w0, [sp, #14]
    3b7c:	ldrb	w1, [sp, #14]
    3b80:	ldrb	w0, [sp, #13]
    3b84:	cmp	w1, w0
    3b88:	b.ls	3bac <ferror@plt+0x246c>  // b.plast
    3b8c:	ldrb	w0, [sp, #13]
    3b90:	strb	w0, [sp, #14]
    3b94:	ldrb	w1, [sp, #15]
    3b98:	ldrb	w0, [sp, #14]
    3b9c:	cmp	w1, w0
    3ba0:	b.ls	3bac <ferror@plt+0x246c>  // b.plast
    3ba4:	ldrb	w0, [sp, #15]
    3ba8:	strb	w0, [sp, #14]
    3bac:	ldrb	w0, [sp, #14]
    3bb0:	add	sp, sp, #0x20
    3bb4:	ret
    3bb8:	sub	sp, sp, #0x590
    3bbc:	stp	x29, x30, [sp]
    3bc0:	mov	x29, sp
    3bc4:	str	x0, [sp, #56]
    3bc8:	str	x1, [sp, #48]
    3bcc:	str	x2, [sp, #40]
    3bd0:	str	w3, [sp, #36]
    3bd4:	str	w4, [sp, #32]
    3bd8:	str	w5, [sp, #28]
    3bdc:	str	w6, [sp, #24]
    3be0:	str	x7, [sp, #16]
    3be4:	str	wzr, [sp, #1404]
    3be8:	ldrsw	x0, [sp, #1404]
    3bec:	lsl	x0, x0, #2
    3bf0:	add	x1, sp, #0x398
    3bf4:	ldr	w2, [sp, #32]
    3bf8:	str	w2, [x1, x0]
    3bfc:	ldrsw	x0, [sp, #1404]
    3c00:	lsl	x0, x0, #2
    3c04:	add	x1, sp, #0x208
    3c08:	ldr	w2, [sp, #28]
    3c0c:	str	w2, [x1, x0]
    3c10:	ldrsw	x0, [sp, #1404]
    3c14:	lsl	x0, x0, #2
    3c18:	add	x1, sp, #0x78
    3c1c:	ldr	w2, [sp, #24]
    3c20:	str	w2, [x1, x0]
    3c24:	ldr	w0, [sp, #1404]
    3c28:	add	w0, w0, #0x1
    3c2c:	str	w0, [sp, #1404]
    3c30:	b	44c4 <ferror@plt+0x2d84>
    3c34:	ldr	w0, [sp, #1404]
    3c38:	cmp	w0, #0x61
    3c3c:	b.le	3c48 <ferror@plt+0x2508>
    3c40:	mov	w0, #0x3e9                 	// #1001
    3c44:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    3c48:	ldr	w0, [sp, #1404]
    3c4c:	sub	w0, w0, #0x1
    3c50:	str	w0, [sp, #1404]
    3c54:	ldrsw	x0, [sp, #1404]
    3c58:	lsl	x0, x0, #2
    3c5c:	add	x1, sp, #0x398
    3c60:	ldr	w0, [x1, x0]
    3c64:	str	w0, [sp, #1376]
    3c68:	ldrsw	x0, [sp, #1404]
    3c6c:	lsl	x0, x0, #2
    3c70:	add	x1, sp, #0x208
    3c74:	ldr	w0, [x1, x0]
    3c78:	str	w0, [sp, #1372]
    3c7c:	ldrsw	x0, [sp, #1404]
    3c80:	lsl	x0, x0, #2
    3c84:	add	x1, sp, #0x78
    3c88:	ldr	w0, [x1, x0]
    3c8c:	str	w0, [sp, #1368]
    3c90:	ldr	w1, [sp, #1372]
    3c94:	ldr	w0, [sp, #1376]
    3c98:	sub	w0, w1, w0
    3c9c:	cmp	w0, #0x13
    3ca0:	b.le	3cb0 <ferror@plt+0x2570>
    3ca4:	ldr	w0, [sp, #1368]
    3ca8:	cmp	w0, #0xe
    3cac:	b.le	3ce8 <ferror@plt+0x25a8>
    3cb0:	ldr	x7, [sp, #16]
    3cb4:	ldr	w6, [sp, #1368]
    3cb8:	ldr	w5, [sp, #1372]
    3cbc:	ldr	w4, [sp, #1376]
    3cc0:	ldr	w3, [sp, #36]
    3cc4:	ldr	x2, [sp, #40]
    3cc8:	ldr	x1, [sp, #48]
    3ccc:	ldr	x0, [sp, #56]
    3cd0:	bl	36ec <ferror@plt+0x1fac>
    3cd4:	ldr	x0, [sp, #16]
    3cd8:	ldr	w0, [x0]
    3cdc:	cmp	w0, #0x0
    3ce0:	b.lt	44d4 <ferror@plt+0x2d94>  // b.tstop
    3ce4:	b	44c4 <ferror@plt+0x2d84>
    3ce8:	ldrsw	x0, [sp, #1376]
    3cec:	lsl	x0, x0, #2
    3cf0:	ldr	x1, [sp, #56]
    3cf4:	add	x0, x1, x0
    3cf8:	ldr	w1, [x0]
    3cfc:	ldr	w0, [sp, #1368]
    3d00:	add	w0, w1, w0
    3d04:	mov	w0, w0
    3d08:	ldr	x1, [sp, #48]
    3d0c:	add	x0, x1, x0
    3d10:	ldrb	w3, [x0]
    3d14:	ldrsw	x0, [sp, #1372]
    3d18:	lsl	x0, x0, #2
    3d1c:	ldr	x1, [sp, #56]
    3d20:	add	x0, x1, x0
    3d24:	ldr	w1, [x0]
    3d28:	ldr	w0, [sp, #1368]
    3d2c:	add	w0, w1, w0
    3d30:	mov	w0, w0
    3d34:	ldr	x1, [sp, #48]
    3d38:	add	x0, x1, x0
    3d3c:	ldrb	w4, [x0]
    3d40:	ldr	w1, [sp, #1376]
    3d44:	ldr	w0, [sp, #1372]
    3d48:	add	w0, w1, w0
    3d4c:	asr	w0, w0, #1
    3d50:	sxtw	x0, w0
    3d54:	lsl	x0, x0, #2
    3d58:	ldr	x1, [sp, #56]
    3d5c:	add	x0, x1, x0
    3d60:	ldr	w1, [x0]
    3d64:	ldr	w0, [sp, #1368]
    3d68:	add	w0, w1, w0
    3d6c:	mov	w0, w0
    3d70:	ldr	x1, [sp, #48]
    3d74:	add	x0, x1, x0
    3d78:	ldrb	w0, [x0]
    3d7c:	mov	w2, w0
    3d80:	mov	w1, w4
    3d84:	mov	w0, w3
    3d88:	bl	3b44 <ferror@plt+0x2404>
    3d8c:	and	w0, w0, #0xff
    3d90:	str	w0, [sp, #1364]
    3d94:	ldr	w0, [sp, #1376]
    3d98:	str	w0, [sp, #1412]
    3d9c:	ldr	w0, [sp, #1412]
    3da0:	str	w0, [sp, #1420]
    3da4:	ldr	w0, [sp, #1372]
    3da8:	str	w0, [sp, #1408]
    3dac:	ldr	w0, [sp, #1408]
    3db0:	str	w0, [sp, #1416]
    3db4:	ldr	w1, [sp, #1420]
    3db8:	ldr	w0, [sp, #1416]
    3dbc:	cmp	w1, w0
    3dc0:	b.gt	3e9c <ferror@plt+0x275c>
    3dc4:	ldrsw	x0, [sp, #1420]
    3dc8:	lsl	x0, x0, #2
    3dcc:	ldr	x1, [sp, #56]
    3dd0:	add	x0, x1, x0
    3dd4:	ldr	w1, [x0]
    3dd8:	ldr	w0, [sp, #1368]
    3ddc:	add	w0, w1, w0
    3de0:	mov	w0, w0
    3de4:	ldr	x1, [sp, #48]
    3de8:	add	x0, x1, x0
    3dec:	ldrb	w0, [x0]
    3df0:	mov	w1, w0
    3df4:	ldr	w0, [sp, #1364]
    3df8:	sub	w0, w1, w0
    3dfc:	str	w0, [sp, #1360]
    3e00:	ldr	w0, [sp, #1360]
    3e04:	cmp	w0, #0x0
    3e08:	b.ne	3e80 <ferror@plt+0x2740>  // b.any
    3e0c:	ldrsw	x0, [sp, #1420]
    3e10:	lsl	x0, x0, #2
    3e14:	ldr	x1, [sp, #56]
    3e18:	add	x0, x1, x0
    3e1c:	ldr	w0, [x0]
    3e20:	str	w0, [sp, #1356]
    3e24:	ldrsw	x0, [sp, #1412]
    3e28:	lsl	x0, x0, #2
    3e2c:	ldr	x1, [sp, #56]
    3e30:	add	x1, x1, x0
    3e34:	ldrsw	x0, [sp, #1420]
    3e38:	lsl	x0, x0, #2
    3e3c:	ldr	x2, [sp, #56]
    3e40:	add	x0, x2, x0
    3e44:	ldr	w1, [x1]
    3e48:	str	w1, [x0]
    3e4c:	ldrsw	x0, [sp, #1412]
    3e50:	lsl	x0, x0, #2
    3e54:	ldr	x1, [sp, #56]
    3e58:	add	x0, x1, x0
    3e5c:	ldr	w1, [sp, #1356]
    3e60:	str	w1, [x0]
    3e64:	ldr	w0, [sp, #1412]
    3e68:	add	w0, w0, #0x1
    3e6c:	str	w0, [sp, #1412]
    3e70:	ldr	w0, [sp, #1420]
    3e74:	add	w0, w0, #0x1
    3e78:	str	w0, [sp, #1420]
    3e7c:	b	3e98 <ferror@plt+0x2758>
    3e80:	ldr	w0, [sp, #1360]
    3e84:	cmp	w0, #0x0
    3e88:	b.gt	3ea4 <ferror@plt+0x2764>
    3e8c:	ldr	w0, [sp, #1420]
    3e90:	add	w0, w0, #0x1
    3e94:	str	w0, [sp, #1420]
    3e98:	b	3db4 <ferror@plt+0x2674>
    3e9c:	nop
    3ea0:	b	3ea8 <ferror@plt+0x2768>
    3ea4:	nop
    3ea8:	ldr	w1, [sp, #1420]
    3eac:	ldr	w0, [sp, #1416]
    3eb0:	cmp	w1, w0
    3eb4:	b.gt	3f90 <ferror@plt+0x2850>
    3eb8:	ldrsw	x0, [sp, #1416]
    3ebc:	lsl	x0, x0, #2
    3ec0:	ldr	x1, [sp, #56]
    3ec4:	add	x0, x1, x0
    3ec8:	ldr	w1, [x0]
    3ecc:	ldr	w0, [sp, #1368]
    3ed0:	add	w0, w1, w0
    3ed4:	mov	w0, w0
    3ed8:	ldr	x1, [sp, #48]
    3edc:	add	x0, x1, x0
    3ee0:	ldrb	w0, [x0]
    3ee4:	mov	w1, w0
    3ee8:	ldr	w0, [sp, #1364]
    3eec:	sub	w0, w1, w0
    3ef0:	str	w0, [sp, #1360]
    3ef4:	ldr	w0, [sp, #1360]
    3ef8:	cmp	w0, #0x0
    3efc:	b.ne	3f74 <ferror@plt+0x2834>  // b.any
    3f00:	ldrsw	x0, [sp, #1416]
    3f04:	lsl	x0, x0, #2
    3f08:	ldr	x1, [sp, #56]
    3f0c:	add	x0, x1, x0
    3f10:	ldr	w0, [x0]
    3f14:	str	w0, [sp, #1352]
    3f18:	ldrsw	x0, [sp, #1408]
    3f1c:	lsl	x0, x0, #2
    3f20:	ldr	x1, [sp, #56]
    3f24:	add	x1, x1, x0
    3f28:	ldrsw	x0, [sp, #1416]
    3f2c:	lsl	x0, x0, #2
    3f30:	ldr	x2, [sp, #56]
    3f34:	add	x0, x2, x0
    3f38:	ldr	w1, [x1]
    3f3c:	str	w1, [x0]
    3f40:	ldrsw	x0, [sp, #1408]
    3f44:	lsl	x0, x0, #2
    3f48:	ldr	x1, [sp, #56]
    3f4c:	add	x0, x1, x0
    3f50:	ldr	w1, [sp, #1352]
    3f54:	str	w1, [x0]
    3f58:	ldr	w0, [sp, #1408]
    3f5c:	sub	w0, w0, #0x1
    3f60:	str	w0, [sp, #1408]
    3f64:	ldr	w0, [sp, #1416]
    3f68:	sub	w0, w0, #0x1
    3f6c:	str	w0, [sp, #1416]
    3f70:	b	3f8c <ferror@plt+0x284c>
    3f74:	ldr	w0, [sp, #1360]
    3f78:	cmp	w0, #0x0
    3f7c:	b.lt	3f98 <ferror@plt+0x2858>  // b.tstop
    3f80:	ldr	w0, [sp, #1416]
    3f84:	sub	w0, w0, #0x1
    3f88:	str	w0, [sp, #1416]
    3f8c:	b	3ea8 <ferror@plt+0x2768>
    3f90:	nop
    3f94:	b	3f9c <ferror@plt+0x285c>
    3f98:	nop
    3f9c:	ldr	w1, [sp, #1420]
    3fa0:	ldr	w0, [sp, #1416]
    3fa4:	cmp	w1, w0
    3fa8:	b.gt	4020 <ferror@plt+0x28e0>
    3fac:	ldrsw	x0, [sp, #1420]
    3fb0:	lsl	x0, x0, #2
    3fb4:	ldr	x1, [sp, #56]
    3fb8:	add	x0, x1, x0
    3fbc:	ldr	w0, [x0]
    3fc0:	str	w0, [sp, #1348]
    3fc4:	ldrsw	x0, [sp, #1416]
    3fc8:	lsl	x0, x0, #2
    3fcc:	ldr	x1, [sp, #56]
    3fd0:	add	x1, x1, x0
    3fd4:	ldrsw	x0, [sp, #1420]
    3fd8:	lsl	x0, x0, #2
    3fdc:	ldr	x2, [sp, #56]
    3fe0:	add	x0, x2, x0
    3fe4:	ldr	w1, [x1]
    3fe8:	str	w1, [x0]
    3fec:	ldrsw	x0, [sp, #1416]
    3ff0:	lsl	x0, x0, #2
    3ff4:	ldr	x1, [sp, #56]
    3ff8:	add	x0, x1, x0
    3ffc:	ldr	w1, [sp, #1348]
    4000:	str	w1, [x0]
    4004:	ldr	w0, [sp, #1420]
    4008:	add	w0, w0, #0x1
    400c:	str	w0, [sp, #1420]
    4010:	ldr	w0, [sp, #1416]
    4014:	sub	w0, w0, #0x1
    4018:	str	w0, [sp, #1416]
    401c:	b	3db4 <ferror@plt+0x2674>
    4020:	nop
    4024:	ldr	w1, [sp, #1408]
    4028:	ldr	w0, [sp, #1412]
    402c:	cmp	w1, w0
    4030:	b.ge	4084 <ferror@plt+0x2944>  // b.tcont
    4034:	ldrsw	x0, [sp, #1404]
    4038:	lsl	x0, x0, #2
    403c:	add	x1, sp, #0x398
    4040:	ldr	w2, [sp, #1376]
    4044:	str	w2, [x1, x0]
    4048:	ldrsw	x0, [sp, #1404]
    404c:	lsl	x0, x0, #2
    4050:	add	x1, sp, #0x208
    4054:	ldr	w2, [sp, #1372]
    4058:	str	w2, [x1, x0]
    405c:	ldr	w0, [sp, #1368]
    4060:	add	w2, w0, #0x1
    4064:	ldrsw	x0, [sp, #1404]
    4068:	lsl	x0, x0, #2
    406c:	add	x1, sp, #0x78
    4070:	str	w2, [x1, x0]
    4074:	ldr	w0, [sp, #1404]
    4078:	add	w0, w0, #0x1
    407c:	str	w0, [sp, #1404]
    4080:	b	44c4 <ferror@plt+0x2d84>
    4084:	ldr	w1, [sp, #1420]
    4088:	ldr	w0, [sp, #1412]
    408c:	sub	w1, w1, w0
    4090:	ldr	w2, [sp, #1412]
    4094:	ldr	w0, [sp, #1376]
    4098:	sub	w0, w2, w0
    409c:	cmp	w1, w0
    40a0:	csel	w0, w1, w0, le
    40a4:	str	w0, [sp, #1360]
    40a8:	ldr	w0, [sp, #1376]
    40ac:	str	w0, [sp, #1400]
    40b0:	ldr	w1, [sp, #1420]
    40b4:	ldr	w0, [sp, #1360]
    40b8:	sub	w0, w1, w0
    40bc:	str	w0, [sp, #1396]
    40c0:	ldr	w0, [sp, #1360]
    40c4:	str	w0, [sp, #1392]
    40c8:	b	4148 <ferror@plt+0x2a08>
    40cc:	ldrsw	x0, [sp, #1400]
    40d0:	lsl	x0, x0, #2
    40d4:	ldr	x1, [sp, #56]
    40d8:	add	x0, x1, x0
    40dc:	ldr	w0, [x0]
    40e0:	str	w0, [sp, #1324]
    40e4:	ldrsw	x0, [sp, #1396]
    40e8:	lsl	x0, x0, #2
    40ec:	ldr	x1, [sp, #56]
    40f0:	add	x1, x1, x0
    40f4:	ldrsw	x0, [sp, #1400]
    40f8:	lsl	x0, x0, #2
    40fc:	ldr	x2, [sp, #56]
    4100:	add	x0, x2, x0
    4104:	ldr	w1, [x1]
    4108:	str	w1, [x0]
    410c:	ldrsw	x0, [sp, #1396]
    4110:	lsl	x0, x0, #2
    4114:	ldr	x1, [sp, #56]
    4118:	add	x0, x1, x0
    411c:	ldr	w1, [sp, #1324]
    4120:	str	w1, [x0]
    4124:	ldr	w0, [sp, #1400]
    4128:	add	w0, w0, #0x1
    412c:	str	w0, [sp, #1400]
    4130:	ldr	w0, [sp, #1396]
    4134:	add	w0, w0, #0x1
    4138:	str	w0, [sp, #1396]
    413c:	ldr	w0, [sp, #1392]
    4140:	sub	w0, w0, #0x1
    4144:	str	w0, [sp, #1392]
    4148:	ldr	w0, [sp, #1392]
    414c:	cmp	w0, #0x0
    4150:	b.gt	40cc <ferror@plt+0x298c>
    4154:	ldr	w1, [sp, #1408]
    4158:	ldr	w0, [sp, #1416]
    415c:	sub	w1, w1, w0
    4160:	ldr	w2, [sp, #1372]
    4164:	ldr	w0, [sp, #1408]
    4168:	sub	w0, w2, w0
    416c:	cmp	w1, w0
    4170:	csel	w0, w1, w0, le
    4174:	str	w0, [sp, #1344]
    4178:	ldr	w0, [sp, #1420]
    417c:	str	w0, [sp, #1388]
    4180:	ldr	w1, [sp, #1372]
    4184:	ldr	w0, [sp, #1344]
    4188:	sub	w0, w1, w0
    418c:	add	w0, w0, #0x1
    4190:	str	w0, [sp, #1384]
    4194:	ldr	w0, [sp, #1344]
    4198:	str	w0, [sp, #1380]
    419c:	b	421c <ferror@plt+0x2adc>
    41a0:	ldrsw	x0, [sp, #1388]
    41a4:	lsl	x0, x0, #2
    41a8:	ldr	x1, [sp, #56]
    41ac:	add	x0, x1, x0
    41b0:	ldr	w0, [x0]
    41b4:	str	w0, [sp, #1328]
    41b8:	ldrsw	x0, [sp, #1384]
    41bc:	lsl	x0, x0, #2
    41c0:	ldr	x1, [sp, #56]
    41c4:	add	x1, x1, x0
    41c8:	ldrsw	x0, [sp, #1388]
    41cc:	lsl	x0, x0, #2
    41d0:	ldr	x2, [sp, #56]
    41d4:	add	x0, x2, x0
    41d8:	ldr	w1, [x1]
    41dc:	str	w1, [x0]
    41e0:	ldrsw	x0, [sp, #1384]
    41e4:	lsl	x0, x0, #2
    41e8:	ldr	x1, [sp, #56]
    41ec:	add	x0, x1, x0
    41f0:	ldr	w1, [sp, #1328]
    41f4:	str	w1, [x0]
    41f8:	ldr	w0, [sp, #1388]
    41fc:	add	w0, w0, #0x1
    4200:	str	w0, [sp, #1388]
    4204:	ldr	w0, [sp, #1384]
    4208:	add	w0, w0, #0x1
    420c:	str	w0, [sp, #1384]
    4210:	ldr	w0, [sp, #1380]
    4214:	sub	w0, w0, #0x1
    4218:	str	w0, [sp, #1380]
    421c:	ldr	w0, [sp, #1380]
    4220:	cmp	w0, #0x0
    4224:	b.gt	41a0 <ferror@plt+0x2a60>
    4228:	ldr	w1, [sp, #1376]
    422c:	ldr	w0, [sp, #1420]
    4230:	add	w1, w1, w0
    4234:	ldr	w0, [sp, #1412]
    4238:	sub	w0, w1, w0
    423c:	sub	w0, w0, #0x1
    4240:	str	w0, [sp, #1360]
    4244:	ldr	w1, [sp, #1408]
    4248:	ldr	w0, [sp, #1416]
    424c:	sub	w0, w1, w0
    4250:	ldr	w1, [sp, #1372]
    4254:	sub	w0, w1, w0
    4258:	add	w0, w0, #0x1
    425c:	str	w0, [sp, #1344]
    4260:	ldr	w0, [sp, #1376]
    4264:	str	w0, [sp, #104]
    4268:	ldr	w0, [sp, #1360]
    426c:	str	w0, [sp, #88]
    4270:	ldr	w0, [sp, #1368]
    4274:	str	w0, [sp, #72]
    4278:	ldr	w0, [sp, #1344]
    427c:	str	w0, [sp, #108]
    4280:	ldr	w0, [sp, #1372]
    4284:	str	w0, [sp, #92]
    4288:	ldr	w0, [sp, #1368]
    428c:	str	w0, [sp, #76]
    4290:	ldr	w0, [sp, #1360]
    4294:	add	w0, w0, #0x1
    4298:	str	w0, [sp, #112]
    429c:	ldr	w0, [sp, #1344]
    42a0:	sub	w0, w0, #0x1
    42a4:	str	w0, [sp, #96]
    42a8:	ldr	w0, [sp, #1368]
    42ac:	add	w0, w0, #0x1
    42b0:	str	w0, [sp, #80]
    42b4:	ldr	w1, [sp, #88]
    42b8:	ldr	w0, [sp, #104]
    42bc:	sub	w1, w1, w0
    42c0:	ldr	w2, [sp, #92]
    42c4:	ldr	w0, [sp, #108]
    42c8:	sub	w0, w2, w0
    42cc:	cmp	w1, w0
    42d0:	b.ge	431c <ferror@plt+0x2bdc>  // b.tcont
    42d4:	ldr	w0, [sp, #104]
    42d8:	str	w0, [sp, #1340]
    42dc:	ldr	w0, [sp, #108]
    42e0:	str	w0, [sp, #104]
    42e4:	ldr	w0, [sp, #1340]
    42e8:	str	w0, [sp, #108]
    42ec:	ldr	w0, [sp, #88]
    42f0:	str	w0, [sp, #1340]
    42f4:	ldr	w0, [sp, #92]
    42f8:	str	w0, [sp, #88]
    42fc:	ldr	w0, [sp, #1340]
    4300:	str	w0, [sp, #92]
    4304:	ldr	w0, [sp, #72]
    4308:	str	w0, [sp, #1340]
    430c:	ldr	w0, [sp, #76]
    4310:	str	w0, [sp, #72]
    4314:	ldr	w0, [sp, #1340]
    4318:	str	w0, [sp, #76]
    431c:	ldr	w1, [sp, #92]
    4320:	ldr	w0, [sp, #108]
    4324:	sub	w1, w1, w0
    4328:	ldr	w2, [sp, #96]
    432c:	ldr	w0, [sp, #112]
    4330:	sub	w0, w2, w0
    4334:	cmp	w1, w0
    4338:	b.ge	4384 <ferror@plt+0x2c44>  // b.tcont
    433c:	ldr	w0, [sp, #108]
    4340:	str	w0, [sp, #1336]
    4344:	ldr	w0, [sp, #112]
    4348:	str	w0, [sp, #108]
    434c:	ldr	w0, [sp, #1336]
    4350:	str	w0, [sp, #112]
    4354:	ldr	w0, [sp, #92]
    4358:	str	w0, [sp, #1336]
    435c:	ldr	w0, [sp, #96]
    4360:	str	w0, [sp, #92]
    4364:	ldr	w0, [sp, #1336]
    4368:	str	w0, [sp, #96]
    436c:	ldr	w0, [sp, #76]
    4370:	str	w0, [sp, #1336]
    4374:	ldr	w0, [sp, #80]
    4378:	str	w0, [sp, #76]
    437c:	ldr	w0, [sp, #1336]
    4380:	str	w0, [sp, #80]
    4384:	ldr	w1, [sp, #88]
    4388:	ldr	w0, [sp, #104]
    438c:	sub	w1, w1, w0
    4390:	ldr	w2, [sp, #92]
    4394:	ldr	w0, [sp, #108]
    4398:	sub	w0, w2, w0
    439c:	cmp	w1, w0
    43a0:	b.ge	43ec <ferror@plt+0x2cac>  // b.tcont
    43a4:	ldr	w0, [sp, #104]
    43a8:	str	w0, [sp, #1332]
    43ac:	ldr	w0, [sp, #108]
    43b0:	str	w0, [sp, #104]
    43b4:	ldr	w0, [sp, #1332]
    43b8:	str	w0, [sp, #108]
    43bc:	ldr	w0, [sp, #88]
    43c0:	str	w0, [sp, #1332]
    43c4:	ldr	w0, [sp, #92]
    43c8:	str	w0, [sp, #88]
    43cc:	ldr	w0, [sp, #1332]
    43d0:	str	w0, [sp, #92]
    43d4:	ldr	w0, [sp, #72]
    43d8:	str	w0, [sp, #1332]
    43dc:	ldr	w0, [sp, #76]
    43e0:	str	w0, [sp, #72]
    43e4:	ldr	w0, [sp, #1332]
    43e8:	str	w0, [sp, #76]
    43ec:	ldr	w2, [sp, #104]
    43f0:	ldrsw	x0, [sp, #1404]
    43f4:	lsl	x0, x0, #2
    43f8:	add	x1, sp, #0x398
    43fc:	str	w2, [x1, x0]
    4400:	ldr	w2, [sp, #88]
    4404:	ldrsw	x0, [sp, #1404]
    4408:	lsl	x0, x0, #2
    440c:	add	x1, sp, #0x208
    4410:	str	w2, [x1, x0]
    4414:	ldr	w2, [sp, #72]
    4418:	ldrsw	x0, [sp, #1404]
    441c:	lsl	x0, x0, #2
    4420:	add	x1, sp, #0x78
    4424:	str	w2, [x1, x0]
    4428:	ldr	w0, [sp, #1404]
    442c:	add	w0, w0, #0x1
    4430:	str	w0, [sp, #1404]
    4434:	ldr	w2, [sp, #108]
    4438:	ldrsw	x0, [sp, #1404]
    443c:	lsl	x0, x0, #2
    4440:	add	x1, sp, #0x398
    4444:	str	w2, [x1, x0]
    4448:	ldr	w2, [sp, #92]
    444c:	ldrsw	x0, [sp, #1404]
    4450:	lsl	x0, x0, #2
    4454:	add	x1, sp, #0x208
    4458:	str	w2, [x1, x0]
    445c:	ldr	w2, [sp, #76]
    4460:	ldrsw	x0, [sp, #1404]
    4464:	lsl	x0, x0, #2
    4468:	add	x1, sp, #0x78
    446c:	str	w2, [x1, x0]
    4470:	ldr	w0, [sp, #1404]
    4474:	add	w0, w0, #0x1
    4478:	str	w0, [sp, #1404]
    447c:	ldr	w2, [sp, #112]
    4480:	ldrsw	x0, [sp, #1404]
    4484:	lsl	x0, x0, #2
    4488:	add	x1, sp, #0x398
    448c:	str	w2, [x1, x0]
    4490:	ldr	w2, [sp, #96]
    4494:	ldrsw	x0, [sp, #1404]
    4498:	lsl	x0, x0, #2
    449c:	add	x1, sp, #0x208
    44a0:	str	w2, [x1, x0]
    44a4:	ldr	w2, [sp, #80]
    44a8:	ldrsw	x0, [sp, #1404]
    44ac:	lsl	x0, x0, #2
    44b0:	add	x1, sp, #0x78
    44b4:	str	w2, [x1, x0]
    44b8:	ldr	w0, [sp, #1404]
    44bc:	add	w0, w0, #0x1
    44c0:	str	w0, [sp, #1404]
    44c4:	ldr	w0, [sp, #1404]
    44c8:	cmp	w0, #0x0
    44cc:	b.gt	3c34 <ferror@plt+0x24f4>
    44d0:	b	44d8 <ferror@plt+0x2d98>
    44d4:	nop
    44d8:	ldp	x29, x30, [sp]
    44dc:	add	sp, sp, #0x590
    44e0:	ret
    44e4:	sub	sp, sp, #0xd80
    44e8:	stp	x29, x30, [sp]
    44ec:	mov	x29, sp
    44f0:	str	x0, [sp, #56]
    44f4:	str	x1, [sp, #48]
    44f8:	str	x2, [sp, #40]
    44fc:	str	x3, [sp, #32]
    4500:	str	w4, [sp, #28]
    4504:	str	w5, [sp, #24]
    4508:	str	x6, [sp, #16]
    450c:	ldr	w0, [sp, #24]
    4510:	cmp	w0, #0x3
    4514:	b.le	453c <ferror@plt+0x2dfc>
    4518:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    451c:	ldr	x0, [x0, #4016]
    4520:	ldr	x0, [x0]
    4524:	mov	x3, x0
    4528:	mov	x2, #0x21                  	// #33
    452c:	mov	x1, #0x1                   	// #1
    4530:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    4534:	add	x0, x0, #0xf60
    4538:	bl	16d0 <fwrite@plt>
    453c:	mov	w0, #0x10000               	// #65536
    4540:	str	w0, [sp, #3452]
    4544:	b	4568 <ferror@plt+0x2e28>
    4548:	ldrsw	x0, [sp, #3452]
    454c:	lsl	x0, x0, #2
    4550:	ldr	x1, [sp, #32]
    4554:	add	x0, x1, x0
    4558:	str	wzr, [x0]
    455c:	ldr	w0, [sp, #3452]
    4560:	sub	w0, w0, #0x1
    4564:	str	w0, [sp, #3452]
    4568:	ldr	w0, [sp, #3452]
    456c:	cmp	w0, #0x0
    4570:	b.ge	4548 <ferror@plt+0x2e08>  // b.tcont
    4574:	ldr	x0, [sp, #48]
    4578:	ldrb	w0, [x0]
    457c:	lsl	w0, w0, #8
    4580:	str	w0, [sp, #3448]
    4584:	ldr	w0, [sp, #28]
    4588:	sub	w0, w0, #0x1
    458c:	str	w0, [sp, #3452]
    4590:	b	4708 <ferror@plt+0x2fc8>
    4594:	ldrsw	x0, [sp, #3452]
    4598:	lsl	x0, x0, #1
    459c:	ldr	x1, [sp, #40]
    45a0:	add	x0, x1, x0
    45a4:	strh	wzr, [x0]
    45a8:	ldr	w0, [sp, #3448]
    45ac:	asr	w1, w0, #8
    45b0:	ldrsw	x0, [sp, #3452]
    45b4:	ldr	x2, [sp, #48]
    45b8:	add	x0, x2, x0
    45bc:	ldrb	w0, [x0]
    45c0:	lsl	w0, w0, #8
    45c4:	orr	w0, w1, w0
    45c8:	str	w0, [sp, #3448]
    45cc:	ldrsw	x0, [sp, #3448]
    45d0:	lsl	x0, x0, #2
    45d4:	ldr	x1, [sp, #32]
    45d8:	add	x0, x1, x0
    45dc:	ldr	w1, [x0]
    45e0:	add	w1, w1, #0x1
    45e4:	str	w1, [x0]
    45e8:	ldrsw	x0, [sp, #3452]
    45ec:	lsl	x0, x0, #1
    45f0:	sub	x0, x0, #0x2
    45f4:	ldr	x1, [sp, #40]
    45f8:	add	x0, x1, x0
    45fc:	strh	wzr, [x0]
    4600:	ldr	w0, [sp, #3448]
    4604:	asr	w1, w0, #8
    4608:	ldrsw	x0, [sp, #3452]
    460c:	sub	x0, x0, #0x1
    4610:	ldr	x2, [sp, #48]
    4614:	add	x0, x2, x0
    4618:	ldrb	w0, [x0]
    461c:	lsl	w0, w0, #8
    4620:	orr	w0, w1, w0
    4624:	str	w0, [sp, #3448]
    4628:	ldrsw	x0, [sp, #3448]
    462c:	lsl	x0, x0, #2
    4630:	ldr	x1, [sp, #32]
    4634:	add	x0, x1, x0
    4638:	ldr	w1, [x0]
    463c:	add	w1, w1, #0x1
    4640:	str	w1, [x0]
    4644:	ldrsw	x0, [sp, #3452]
    4648:	lsl	x0, x0, #1
    464c:	sub	x0, x0, #0x4
    4650:	ldr	x1, [sp, #40]
    4654:	add	x0, x1, x0
    4658:	strh	wzr, [x0]
    465c:	ldr	w0, [sp, #3448]
    4660:	asr	w1, w0, #8
    4664:	ldrsw	x0, [sp, #3452]
    4668:	sub	x0, x0, #0x2
    466c:	ldr	x2, [sp, #48]
    4670:	add	x0, x2, x0
    4674:	ldrb	w0, [x0]
    4678:	lsl	w0, w0, #8
    467c:	orr	w0, w1, w0
    4680:	str	w0, [sp, #3448]
    4684:	ldrsw	x0, [sp, #3448]
    4688:	lsl	x0, x0, #2
    468c:	ldr	x1, [sp, #32]
    4690:	add	x0, x1, x0
    4694:	ldr	w1, [x0]
    4698:	add	w1, w1, #0x1
    469c:	str	w1, [x0]
    46a0:	ldrsw	x0, [sp, #3452]
    46a4:	lsl	x0, x0, #1
    46a8:	sub	x0, x0, #0x6
    46ac:	ldr	x1, [sp, #40]
    46b0:	add	x0, x1, x0
    46b4:	strh	wzr, [x0]
    46b8:	ldr	w0, [sp, #3448]
    46bc:	asr	w1, w0, #8
    46c0:	ldrsw	x0, [sp, #3452]
    46c4:	sub	x0, x0, #0x3
    46c8:	ldr	x2, [sp, #48]
    46cc:	add	x0, x2, x0
    46d0:	ldrb	w0, [x0]
    46d4:	lsl	w0, w0, #8
    46d8:	orr	w0, w1, w0
    46dc:	str	w0, [sp, #3448]
    46e0:	ldrsw	x0, [sp, #3448]
    46e4:	lsl	x0, x0, #2
    46e8:	ldr	x1, [sp, #32]
    46ec:	add	x0, x1, x0
    46f0:	ldr	w1, [x0]
    46f4:	add	w1, w1, #0x1
    46f8:	str	w1, [x0]
    46fc:	ldr	w0, [sp, #3452]
    4700:	sub	w0, w0, #0x4
    4704:	str	w0, [sp, #3452]
    4708:	ldr	w0, [sp, #3452]
    470c:	cmp	w0, #0x2
    4710:	b.gt	4594 <ferror@plt+0x2e54>
    4714:	b	4778 <ferror@plt+0x3038>
    4718:	ldrsw	x0, [sp, #3452]
    471c:	lsl	x0, x0, #1
    4720:	ldr	x1, [sp, #40]
    4724:	add	x0, x1, x0
    4728:	strh	wzr, [x0]
    472c:	ldr	w0, [sp, #3448]
    4730:	asr	w1, w0, #8
    4734:	ldrsw	x0, [sp, #3452]
    4738:	ldr	x2, [sp, #48]
    473c:	add	x0, x2, x0
    4740:	ldrb	w0, [x0]
    4744:	lsl	w0, w0, #8
    4748:	orr	w0, w1, w0
    474c:	str	w0, [sp, #3448]
    4750:	ldrsw	x0, [sp, #3448]
    4754:	lsl	x0, x0, #2
    4758:	ldr	x1, [sp, #32]
    475c:	add	x0, x1, x0
    4760:	ldr	w1, [x0]
    4764:	add	w1, w1, #0x1
    4768:	str	w1, [x0]
    476c:	ldr	w0, [sp, #3452]
    4770:	sub	w0, w0, #0x1
    4774:	str	w0, [sp, #3452]
    4778:	ldr	w0, [sp, #3452]
    477c:	cmp	w0, #0x0
    4780:	b.ge	4718 <ferror@plt+0x2fd8>  // b.tcont
    4784:	str	wzr, [sp, #3452]
    4788:	b	47e4 <ferror@plt+0x30a4>
    478c:	ldrsw	x0, [sp, #3452]
    4790:	ldr	x1, [sp, #48]
    4794:	add	x1, x1, x0
    4798:	ldr	w2, [sp, #28]
    479c:	ldr	w0, [sp, #3452]
    47a0:	add	w0, w2, w0
    47a4:	sxtw	x0, w0
    47a8:	ldr	x2, [sp, #48]
    47ac:	add	x0, x2, x0
    47b0:	ldrb	w1, [x1]
    47b4:	strb	w1, [x0]
    47b8:	ldr	w1, [sp, #28]
    47bc:	ldr	w0, [sp, #3452]
    47c0:	add	w0, w1, w0
    47c4:	sxtw	x0, w0
    47c8:	lsl	x0, x0, #1
    47cc:	ldr	x1, [sp, #40]
    47d0:	add	x0, x1, x0
    47d4:	strh	wzr, [x0]
    47d8:	ldr	w0, [sp, #3452]
    47dc:	add	w0, w0, #0x1
    47e0:	str	w0, [sp, #3452]
    47e4:	ldr	w0, [sp, #3452]
    47e8:	cmp	w0, #0x21
    47ec:	b.le	478c <ferror@plt+0x304c>
    47f0:	ldr	w0, [sp, #24]
    47f4:	cmp	w0, #0x3
    47f8:	b.le	4820 <ferror@plt+0x30e0>
    47fc:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    4800:	ldr	x0, [x0, #4016]
    4804:	ldr	x0, [x0]
    4808:	mov	x3, x0
    480c:	mov	x2, #0x1b                  	// #27
    4810:	mov	x1, #0x1                   	// #1
    4814:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    4818:	add	x0, x0, #0xee8
    481c:	bl	16d0 <fwrite@plt>
    4820:	mov	w0, #0x1                   	// #1
    4824:	str	w0, [sp, #3452]
    4828:	b	487c <ferror@plt+0x313c>
    482c:	ldrsw	x0, [sp, #3452]
    4830:	lsl	x0, x0, #2
    4834:	ldr	x1, [sp, #32]
    4838:	add	x0, x1, x0
    483c:	ldr	w2, [x0]
    4840:	ldrsw	x0, [sp, #3452]
    4844:	lsl	x0, x0, #2
    4848:	sub	x0, x0, #0x4
    484c:	ldr	x1, [sp, #32]
    4850:	add	x0, x1, x0
    4854:	ldr	w1, [x0]
    4858:	ldrsw	x0, [sp, #3452]
    485c:	lsl	x0, x0, #2
    4860:	ldr	x3, [sp, #32]
    4864:	add	x0, x3, x0
    4868:	add	w1, w2, w1
    486c:	str	w1, [x0]
    4870:	ldr	w0, [sp, #3452]
    4874:	add	w0, w0, #0x1
    4878:	str	w0, [sp, #3452]
    487c:	ldr	w0, [sp, #3452]
    4880:	cmp	w0, #0x10, lsl #12
    4884:	b.le	482c <ferror@plt+0x30ec>
    4888:	ldr	x0, [sp, #48]
    488c:	ldrb	w0, [x0]
    4890:	and	w0, w0, #0xffff
    4894:	ubfiz	w0, w0, #8, #8
    4898:	strh	w0, [sp, #3438]
    489c:	ldr	w0, [sp, #28]
    48a0:	sub	w0, w0, #0x1
    48a4:	str	w0, [sp, #3452]
    48a8:	b	4adc <ferror@plt+0x339c>
    48ac:	ldrh	w0, [sp, #3438]
    48b0:	lsr	w0, w0, #8
    48b4:	and	w0, w0, #0xffff
    48b8:	sxth	w1, w0
    48bc:	ldrsw	x0, [sp, #3452]
    48c0:	ldr	x2, [sp, #48]
    48c4:	add	x0, x2, x0
    48c8:	ldrb	w0, [x0]
    48cc:	lsl	w0, w0, #8
    48d0:	sxth	w0, w0
    48d4:	orr	w0, w1, w0
    48d8:	sxth	w0, w0
    48dc:	strh	w0, [sp, #3438]
    48e0:	ldrh	w0, [sp, #3438]
    48e4:	lsl	x0, x0, #2
    48e8:	ldr	x1, [sp, #32]
    48ec:	add	x0, x1, x0
    48f0:	ldr	w0, [x0]
    48f4:	sub	w0, w0, #0x1
    48f8:	str	w0, [sp, #3448]
    48fc:	ldrh	w0, [sp, #3438]
    4900:	lsl	x0, x0, #2
    4904:	ldr	x1, [sp, #32]
    4908:	add	x0, x1, x0
    490c:	ldr	w1, [sp, #3448]
    4910:	str	w1, [x0]
    4914:	ldrsw	x0, [sp, #3448]
    4918:	lsl	x0, x0, #2
    491c:	ldr	x1, [sp, #56]
    4920:	add	x0, x1, x0
    4924:	ldr	w1, [sp, #3452]
    4928:	str	w1, [x0]
    492c:	ldrh	w0, [sp, #3438]
    4930:	lsr	w0, w0, #8
    4934:	and	w0, w0, #0xffff
    4938:	sxth	w1, w0
    493c:	ldrsw	x0, [sp, #3452]
    4940:	sub	x0, x0, #0x1
    4944:	ldr	x2, [sp, #48]
    4948:	add	x0, x2, x0
    494c:	ldrb	w0, [x0]
    4950:	lsl	w0, w0, #8
    4954:	sxth	w0, w0
    4958:	orr	w0, w1, w0
    495c:	sxth	w0, w0
    4960:	strh	w0, [sp, #3438]
    4964:	ldrh	w0, [sp, #3438]
    4968:	lsl	x0, x0, #2
    496c:	ldr	x1, [sp, #32]
    4970:	add	x0, x1, x0
    4974:	ldr	w0, [x0]
    4978:	sub	w0, w0, #0x1
    497c:	str	w0, [sp, #3448]
    4980:	ldrh	w0, [sp, #3438]
    4984:	lsl	x0, x0, #2
    4988:	ldr	x1, [sp, #32]
    498c:	add	x0, x1, x0
    4990:	ldr	w1, [sp, #3448]
    4994:	str	w1, [x0]
    4998:	ldr	w0, [sp, #3452]
    499c:	sub	w2, w0, #0x1
    49a0:	ldrsw	x0, [sp, #3448]
    49a4:	lsl	x0, x0, #2
    49a8:	ldr	x1, [sp, #56]
    49ac:	add	x0, x1, x0
    49b0:	mov	w1, w2
    49b4:	str	w1, [x0]
    49b8:	ldrh	w0, [sp, #3438]
    49bc:	lsr	w0, w0, #8
    49c0:	and	w0, w0, #0xffff
    49c4:	sxth	w1, w0
    49c8:	ldrsw	x0, [sp, #3452]
    49cc:	sub	x0, x0, #0x2
    49d0:	ldr	x2, [sp, #48]
    49d4:	add	x0, x2, x0
    49d8:	ldrb	w0, [x0]
    49dc:	lsl	w0, w0, #8
    49e0:	sxth	w0, w0
    49e4:	orr	w0, w1, w0
    49e8:	sxth	w0, w0
    49ec:	strh	w0, [sp, #3438]
    49f0:	ldrh	w0, [sp, #3438]
    49f4:	lsl	x0, x0, #2
    49f8:	ldr	x1, [sp, #32]
    49fc:	add	x0, x1, x0
    4a00:	ldr	w0, [x0]
    4a04:	sub	w0, w0, #0x1
    4a08:	str	w0, [sp, #3448]
    4a0c:	ldrh	w0, [sp, #3438]
    4a10:	lsl	x0, x0, #2
    4a14:	ldr	x1, [sp, #32]
    4a18:	add	x0, x1, x0
    4a1c:	ldr	w1, [sp, #3448]
    4a20:	str	w1, [x0]
    4a24:	ldr	w0, [sp, #3452]
    4a28:	sub	w2, w0, #0x2
    4a2c:	ldrsw	x0, [sp, #3448]
    4a30:	lsl	x0, x0, #2
    4a34:	ldr	x1, [sp, #56]
    4a38:	add	x0, x1, x0
    4a3c:	mov	w1, w2
    4a40:	str	w1, [x0]
    4a44:	ldrh	w0, [sp, #3438]
    4a48:	lsr	w0, w0, #8
    4a4c:	and	w0, w0, #0xffff
    4a50:	sxth	w1, w0
    4a54:	ldrsw	x0, [sp, #3452]
    4a58:	sub	x0, x0, #0x3
    4a5c:	ldr	x2, [sp, #48]
    4a60:	add	x0, x2, x0
    4a64:	ldrb	w0, [x0]
    4a68:	lsl	w0, w0, #8
    4a6c:	sxth	w0, w0
    4a70:	orr	w0, w1, w0
    4a74:	sxth	w0, w0
    4a78:	strh	w0, [sp, #3438]
    4a7c:	ldrh	w0, [sp, #3438]
    4a80:	lsl	x0, x0, #2
    4a84:	ldr	x1, [sp, #32]
    4a88:	add	x0, x1, x0
    4a8c:	ldr	w0, [x0]
    4a90:	sub	w0, w0, #0x1
    4a94:	str	w0, [sp, #3448]
    4a98:	ldrh	w0, [sp, #3438]
    4a9c:	lsl	x0, x0, #2
    4aa0:	ldr	x1, [sp, #32]
    4aa4:	add	x0, x1, x0
    4aa8:	ldr	w1, [sp, #3448]
    4aac:	str	w1, [x0]
    4ab0:	ldr	w0, [sp, #3452]
    4ab4:	sub	w2, w0, #0x3
    4ab8:	ldrsw	x0, [sp, #3448]
    4abc:	lsl	x0, x0, #2
    4ac0:	ldr	x1, [sp, #56]
    4ac4:	add	x0, x1, x0
    4ac8:	mov	w1, w2
    4acc:	str	w1, [x0]
    4ad0:	ldr	w0, [sp, #3452]
    4ad4:	sub	w0, w0, #0x4
    4ad8:	str	w0, [sp, #3452]
    4adc:	ldr	w0, [sp, #3452]
    4ae0:	cmp	w0, #0x2
    4ae4:	b.gt	48ac <ferror@plt+0x316c>
    4ae8:	b	4b78 <ferror@plt+0x3438>
    4aec:	ldrh	w0, [sp, #3438]
    4af0:	lsr	w0, w0, #8
    4af4:	and	w0, w0, #0xffff
    4af8:	sxth	w1, w0
    4afc:	ldrsw	x0, [sp, #3452]
    4b00:	ldr	x2, [sp, #48]
    4b04:	add	x0, x2, x0
    4b08:	ldrb	w0, [x0]
    4b0c:	lsl	w0, w0, #8
    4b10:	sxth	w0, w0
    4b14:	orr	w0, w1, w0
    4b18:	sxth	w0, w0
    4b1c:	strh	w0, [sp, #3438]
    4b20:	ldrh	w0, [sp, #3438]
    4b24:	lsl	x0, x0, #2
    4b28:	ldr	x1, [sp, #32]
    4b2c:	add	x0, x1, x0
    4b30:	ldr	w0, [x0]
    4b34:	sub	w0, w0, #0x1
    4b38:	str	w0, [sp, #3448]
    4b3c:	ldrh	w0, [sp, #3438]
    4b40:	lsl	x0, x0, #2
    4b44:	ldr	x1, [sp, #32]
    4b48:	add	x0, x1, x0
    4b4c:	ldr	w1, [sp, #3448]
    4b50:	str	w1, [x0]
    4b54:	ldrsw	x0, [sp, #3448]
    4b58:	lsl	x0, x0, #2
    4b5c:	ldr	x1, [sp, #56]
    4b60:	add	x0, x1, x0
    4b64:	ldr	w1, [sp, #3452]
    4b68:	str	w1, [x0]
    4b6c:	ldr	w0, [sp, #3452]
    4b70:	sub	w0, w0, #0x1
    4b74:	str	w0, [sp, #3452]
    4b78:	ldr	w0, [sp, #3452]
    4b7c:	cmp	w0, #0x0
    4b80:	b.ge	4aec <ferror@plt+0x33ac>  // b.tcont
    4b84:	str	wzr, [sp, #3452]
    4b88:	b	4bb8 <ferror@plt+0x3478>
    4b8c:	ldrsw	x0, [sp, #3452]
    4b90:	add	x1, sp, #0x840
    4b94:	strb	wzr, [x1, x0]
    4b98:	ldrsw	x0, [sp, #3452]
    4b9c:	lsl	x0, x0, #2
    4ba0:	add	x1, sp, #0x940
    4ba4:	ldr	w2, [sp, #3452]
    4ba8:	str	w2, [x1, x0]
    4bac:	ldr	w0, [sp, #3452]
    4bb0:	add	w0, w0, #0x1
    4bb4:	str	w0, [sp, #3452]
    4bb8:	ldr	w0, [sp, #3452]
    4bbc:	cmp	w0, #0xff
    4bc0:	b.le	4b8c <ferror@plt+0x344c>
    4bc4:	mov	w0, #0x1                   	// #1
    4bc8:	str	w0, [sp, #3432]
    4bcc:	ldr	w1, [sp, #3432]
    4bd0:	mov	w0, w1
    4bd4:	lsl	w0, w0, #1
    4bd8:	add	w0, w0, w1
    4bdc:	add	w0, w0, #0x1
    4be0:	str	w0, [sp, #3432]
    4be4:	ldr	w0, [sp, #3432]
    4be8:	cmp	w0, #0x100
    4bec:	b.le	4bcc <ferror@plt+0x348c>
    4bf0:	ldr	w0, [sp, #3432]
    4bf4:	mov	w1, #0x5556                	// #21846
    4bf8:	movk	w1, #0x5555, lsl #16
    4bfc:	smull	x1, w0, w1
    4c00:	lsr	x1, x1, #32
    4c04:	asr	w0, w0, #31
    4c08:	sub	w0, w1, w0
    4c0c:	str	w0, [sp, #3432]
    4c10:	ldr	w0, [sp, #3432]
    4c14:	str	w0, [sp, #3452]
    4c18:	b	4d68 <ferror@plt+0x3628>
    4c1c:	ldrsw	x0, [sp, #3452]
    4c20:	lsl	x0, x0, #2
    4c24:	add	x1, sp, #0x940
    4c28:	ldr	w0, [x1, x0]
    4c2c:	str	w0, [sp, #3392]
    4c30:	ldr	w0, [sp, #3452]
    4c34:	str	w0, [sp, #3448]
    4c38:	b	4c88 <ferror@plt+0x3548>
    4c3c:	ldr	w1, [sp, #3448]
    4c40:	ldr	w0, [sp, #3432]
    4c44:	sub	w0, w1, w0
    4c48:	sxtw	x0, w0
    4c4c:	lsl	x0, x0, #2
    4c50:	add	x1, sp, #0x940
    4c54:	ldr	w2, [x1, x0]
    4c58:	ldrsw	x0, [sp, #3448]
    4c5c:	lsl	x0, x0, #2
    4c60:	add	x1, sp, #0x940
    4c64:	str	w2, [x1, x0]
    4c68:	ldr	w1, [sp, #3448]
    4c6c:	ldr	w0, [sp, #3432]
    4c70:	sub	w0, w1, w0
    4c74:	str	w0, [sp, #3448]
    4c78:	ldr	w1, [sp, #3432]
    4c7c:	ldr	w0, [sp, #3448]
    4c80:	cmp	w1, w0
    4c84:	b.gt	4d44 <ferror@plt+0x3604>
    4c88:	ldr	w1, [sp, #3448]
    4c8c:	ldr	w0, [sp, #3432]
    4c90:	sub	w0, w1, w0
    4c94:	sxtw	x0, w0
    4c98:	lsl	x0, x0, #2
    4c9c:	add	x1, sp, #0x940
    4ca0:	ldr	w0, [x1, x0]
    4ca4:	add	w0, w0, #0x1
    4ca8:	lsl	w0, w0, #8
    4cac:	sxtw	x0, w0
    4cb0:	lsl	x0, x0, #2
    4cb4:	ldr	x1, [sp, #32]
    4cb8:	add	x0, x1, x0
    4cbc:	ldr	w1, [x0]
    4cc0:	ldr	w2, [sp, #3448]
    4cc4:	ldr	w0, [sp, #3432]
    4cc8:	sub	w0, w2, w0
    4ccc:	sxtw	x0, w0
    4cd0:	lsl	x0, x0, #2
    4cd4:	add	x2, sp, #0x940
    4cd8:	ldr	w0, [x2, x0]
    4cdc:	lsl	w0, w0, #8
    4ce0:	sxtw	x0, w0
    4ce4:	lsl	x0, x0, #2
    4ce8:	ldr	x2, [sp, #32]
    4cec:	add	x0, x2, x0
    4cf0:	ldr	w0, [x0]
    4cf4:	sub	w1, w1, w0
    4cf8:	ldr	w0, [sp, #3392]
    4cfc:	add	w0, w0, #0x1
    4d00:	lsl	w0, w0, #8
    4d04:	sxtw	x0, w0
    4d08:	lsl	x0, x0, #2
    4d0c:	ldr	x2, [sp, #32]
    4d10:	add	x0, x2, x0
    4d14:	ldr	w2, [x0]
    4d18:	ldr	w0, [sp, #3392]
    4d1c:	lsl	w0, w0, #8
    4d20:	sxtw	x0, w0
    4d24:	lsl	x0, x0, #2
    4d28:	ldr	x3, [sp, #32]
    4d2c:	add	x0, x3, x0
    4d30:	ldr	w0, [x0]
    4d34:	sub	w0, w2, w0
    4d38:	cmp	w1, w0
    4d3c:	b.hi	4c3c <ferror@plt+0x34fc>  // b.pmore
    4d40:	b	4d48 <ferror@plt+0x3608>
    4d44:	nop
    4d48:	ldrsw	x0, [sp, #3448]
    4d4c:	lsl	x0, x0, #2
    4d50:	add	x1, sp, #0x940
    4d54:	ldr	w2, [sp, #3392]
    4d58:	str	w2, [x1, x0]
    4d5c:	ldr	w0, [sp, #3452]
    4d60:	add	w0, w0, #0x1
    4d64:	str	w0, [sp, #3452]
    4d68:	ldr	w0, [sp, #3452]
    4d6c:	cmp	w0, #0xff
    4d70:	b.le	4c1c <ferror@plt+0x34dc>
    4d74:	ldr	w0, [sp, #3432]
    4d78:	cmp	w0, #0x1
    4d7c:	b.ne	4bf0 <ferror@plt+0x34b0>  // b.any
    4d80:	str	wzr, [sp, #3440]
    4d84:	str	wzr, [sp, #3452]
    4d88:	b	5408 <ferror@plt+0x3cc8>
    4d8c:	ldrsw	x0, [sp, #3452]
    4d90:	lsl	x0, x0, #2
    4d94:	add	x1, sp, #0x940
    4d98:	ldr	w0, [x1, x0]
    4d9c:	str	w0, [sp, #3424]
    4da0:	str	wzr, [sp, #3448]
    4da4:	b	4f0c <ferror@plt+0x37cc>
    4da8:	ldr	w1, [sp, #3448]
    4dac:	ldr	w0, [sp, #3424]
    4db0:	cmp	w1, w0
    4db4:	b.eq	4f00 <ferror@plt+0x37c0>  // b.none
    4db8:	ldr	w0, [sp, #3424]
    4dbc:	lsl	w0, w0, #8
    4dc0:	ldr	w1, [sp, #3448]
    4dc4:	add	w0, w1, w0
    4dc8:	str	w0, [sp, #3404]
    4dcc:	ldrsw	x0, [sp, #3404]
    4dd0:	lsl	x0, x0, #2
    4dd4:	ldr	x1, [sp, #32]
    4dd8:	add	x0, x1, x0
    4ddc:	ldr	w0, [x0]
    4de0:	and	w0, w0, #0x200000
    4de4:	cmp	w0, #0x0
    4de8:	b.ne	4ed4 <ferror@plt+0x3794>  // b.any
    4dec:	ldrsw	x0, [sp, #3404]
    4df0:	lsl	x0, x0, #2
    4df4:	ldr	x1, [sp, #32]
    4df8:	add	x0, x1, x0
    4dfc:	ldr	w0, [x0]
    4e00:	and	w0, w0, #0xffdfffff
    4e04:	str	w0, [sp, #3400]
    4e08:	ldrsw	x0, [sp, #3404]
    4e0c:	add	x0, x0, #0x1
    4e10:	lsl	x0, x0, #2
    4e14:	ldr	x1, [sp, #32]
    4e18:	add	x0, x1, x0
    4e1c:	ldr	w0, [x0]
    4e20:	and	w0, w0, #0xffdfffff
    4e24:	sub	w0, w0, #0x1
    4e28:	str	w0, [sp, #3396]
    4e2c:	ldr	w1, [sp, #3396]
    4e30:	ldr	w0, [sp, #3400]
    4e34:	cmp	w1, w0
    4e38:	b.le	4ed4 <ferror@plt+0x3794>
    4e3c:	ldr	w0, [sp, #24]
    4e40:	cmp	w0, #0x3
    4e44:	b.le	4e84 <ferror@plt+0x3744>
    4e48:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    4e4c:	ldr	x0, [x0, #4016]
    4e50:	ldr	x6, [x0]
    4e54:	ldr	w1, [sp, #3396]
    4e58:	ldr	w0, [sp, #3400]
    4e5c:	sub	w0, w1, w0
    4e60:	add	w0, w0, #0x1
    4e64:	mov	w5, w0
    4e68:	ldr	w4, [sp, #3440]
    4e6c:	ldr	w3, [sp, #3448]
    4e70:	ldr	w2, [sp, #3424]
    4e74:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    4e78:	add	x1, x0, #0xf88
    4e7c:	mov	x0, x6
    4e80:	bl	1730 <fprintf@plt>
    4e84:	ldr	x7, [sp, #16]
    4e88:	mov	w6, #0x2                   	// #2
    4e8c:	ldr	w5, [sp, #3396]
    4e90:	ldr	w4, [sp, #3400]
    4e94:	ldr	w3, [sp, #28]
    4e98:	ldr	x2, [sp, #40]
    4e9c:	ldr	x1, [sp, #48]
    4ea0:	ldr	x0, [sp, #56]
    4ea4:	bl	3bb8 <ferror@plt+0x2478>
    4ea8:	ldr	w1, [sp, #3396]
    4eac:	ldr	w0, [sp, #3400]
    4eb0:	sub	w0, w1, w0
    4eb4:	add	w0, w0, #0x1
    4eb8:	ldr	w1, [sp, #3440]
    4ebc:	add	w0, w1, w0
    4ec0:	str	w0, [sp, #3440]
    4ec4:	ldr	x0, [sp, #16]
    4ec8:	ldr	w0, [x0]
    4ecc:	cmp	w0, #0x0
    4ed0:	b.lt	5458 <ferror@plt+0x3d18>  // b.tstop
    4ed4:	ldrsw	x0, [sp, #3404]
    4ed8:	lsl	x0, x0, #2
    4edc:	ldr	x1, [sp, #32]
    4ee0:	add	x0, x1, x0
    4ee4:	ldr	w1, [x0]
    4ee8:	ldrsw	x0, [sp, #3404]
    4eec:	lsl	x0, x0, #2
    4ef0:	ldr	x2, [sp, #32]
    4ef4:	add	x0, x2, x0
    4ef8:	orr	w1, w1, #0x200000
    4efc:	str	w1, [x0]
    4f00:	ldr	w0, [sp, #3448]
    4f04:	add	w0, w0, #0x1
    4f08:	str	w0, [sp, #3448]
    4f0c:	ldr	w0, [sp, #3448]
    4f10:	cmp	w0, #0xff
    4f14:	b.le	4da8 <ferror@plt+0x3668>
    4f18:	ldrsw	x0, [sp, #3424]
    4f1c:	add	x1, sp, #0x840
    4f20:	ldrb	w0, [x1, x0]
    4f24:	cmp	w0, #0x0
    4f28:	b.eq	4f34 <ferror@plt+0x37f4>  // b.none
    4f2c:	mov	w0, #0x3ee                 	// #1006
    4f30:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    4f34:	str	wzr, [sp, #3448]
    4f38:	b	4fc4 <ferror@plt+0x3884>
    4f3c:	ldr	w0, [sp, #3448]
    4f40:	lsl	w1, w0, #8
    4f44:	ldr	w0, [sp, #3424]
    4f48:	add	w0, w1, w0
    4f4c:	sxtw	x0, w0
    4f50:	lsl	x0, x0, #2
    4f54:	ldr	x1, [sp, #32]
    4f58:	add	x0, x1, x0
    4f5c:	ldr	w0, [x0]
    4f60:	and	w2, w0, #0xffdfffff
    4f64:	ldrsw	x0, [sp, #3448]
    4f68:	lsl	x0, x0, #2
    4f6c:	add	x1, sp, #0x440
    4f70:	str	w2, [x1, x0]
    4f74:	ldr	w0, [sp, #3448]
    4f78:	lsl	w1, w0, #8
    4f7c:	ldr	w0, [sp, #3424]
    4f80:	add	w0, w1, w0
    4f84:	sxtw	x0, w0
    4f88:	add	x0, x0, #0x1
    4f8c:	lsl	x0, x0, #2
    4f90:	ldr	x1, [sp, #32]
    4f94:	add	x0, x1, x0
    4f98:	ldr	w0, [x0]
    4f9c:	and	w0, w0, #0xffdfffff
    4fa0:	sub	w0, w0, #0x1
    4fa4:	mov	w2, w0
    4fa8:	ldrsw	x0, [sp, #3448]
    4fac:	lsl	x0, x0, #2
    4fb0:	add	x1, sp, #0x40
    4fb4:	str	w2, [x1, x0]
    4fb8:	ldr	w0, [sp, #3448]
    4fbc:	add	w0, w0, #0x1
    4fc0:	str	w0, [sp, #3448]
    4fc4:	ldr	w0, [sp, #3448]
    4fc8:	cmp	w0, #0xff
    4fcc:	b.le	4f3c <ferror@plt+0x37fc>
    4fd0:	ldr	w0, [sp, #3424]
    4fd4:	lsl	w0, w0, #8
    4fd8:	sxtw	x0, w0
    4fdc:	lsl	x0, x0, #2
    4fe0:	ldr	x1, [sp, #32]
    4fe4:	add	x0, x1, x0
    4fe8:	ldr	w0, [x0]
    4fec:	and	w0, w0, #0xffdfffff
    4ff0:	str	w0, [sp, #3448]
    4ff4:	b	50a8 <ferror@plt+0x3968>
    4ff8:	ldrsw	x0, [sp, #3448]
    4ffc:	lsl	x0, x0, #2
    5000:	ldr	x1, [sp, #56]
    5004:	add	x0, x1, x0
    5008:	ldr	w0, [x0]
    500c:	sub	w0, w0, #0x1
    5010:	str	w0, [sp, #3444]
    5014:	ldr	w0, [sp, #3444]
    5018:	cmp	w0, #0x0
    501c:	b.ge	5030 <ferror@plt+0x38f0>  // b.tcont
    5020:	ldr	w1, [sp, #3444]
    5024:	ldr	w0, [sp, #28]
    5028:	add	w0, w1, w0
    502c:	str	w0, [sp, #3444]
    5030:	ldrsw	x0, [sp, #3444]
    5034:	ldr	x1, [sp, #48]
    5038:	add	x0, x1, x0
    503c:	ldrb	w0, [x0]
    5040:	strb	w0, [sp, #3409]
    5044:	ldrb	w0, [sp, #3409]
    5048:	sxtw	x0, w0
    504c:	add	x1, sp, #0x840
    5050:	ldrb	w0, [x1, x0]
    5054:	cmp	w0, #0x0
    5058:	b.ne	509c <ferror@plt+0x395c>  // b.any
    505c:	ldrb	w2, [sp, #3409]
    5060:	sxtw	x0, w2
    5064:	lsl	x0, x0, #2
    5068:	add	x1, sp, #0x440
    506c:	ldr	w0, [x1, x0]
    5070:	add	w3, w0, #0x1
    5074:	sxtw	x1, w2
    5078:	lsl	x1, x1, #2
    507c:	add	x2, sp, #0x440
    5080:	str	w3, [x2, x1]
    5084:	sxtw	x0, w0
    5088:	lsl	x0, x0, #2
    508c:	ldr	x1, [sp, #56]
    5090:	add	x0, x1, x0
    5094:	ldr	w1, [sp, #3444]
    5098:	str	w1, [x0]
    509c:	ldr	w0, [sp, #3448]
    50a0:	add	w0, w0, #0x1
    50a4:	str	w0, [sp, #3448]
    50a8:	ldrsw	x0, [sp, #3424]
    50ac:	lsl	x0, x0, #2
    50b0:	add	x1, sp, #0x440
    50b4:	ldr	w0, [x1, x0]
    50b8:	ldr	w1, [sp, #3448]
    50bc:	cmp	w1, w0
    50c0:	b.lt	4ff8 <ferror@plt+0x38b8>  // b.tstop
    50c4:	ldr	w0, [sp, #3424]
    50c8:	add	w0, w0, #0x1
    50cc:	lsl	w0, w0, #8
    50d0:	sxtw	x0, w0
    50d4:	lsl	x0, x0, #2
    50d8:	ldr	x1, [sp, #32]
    50dc:	add	x0, x1, x0
    50e0:	ldr	w0, [x0]
    50e4:	and	w0, w0, #0xffdfffff
    50e8:	sub	w0, w0, #0x1
    50ec:	str	w0, [sp, #3448]
    50f0:	b	51a4 <ferror@plt+0x3a64>
    50f4:	ldrsw	x0, [sp, #3448]
    50f8:	lsl	x0, x0, #2
    50fc:	ldr	x1, [sp, #56]
    5100:	add	x0, x1, x0
    5104:	ldr	w0, [x0]
    5108:	sub	w0, w0, #0x1
    510c:	str	w0, [sp, #3444]
    5110:	ldr	w0, [sp, #3444]
    5114:	cmp	w0, #0x0
    5118:	b.ge	512c <ferror@plt+0x39ec>  // b.tcont
    511c:	ldr	w1, [sp, #3444]
    5120:	ldr	w0, [sp, #28]
    5124:	add	w0, w1, w0
    5128:	str	w0, [sp, #3444]
    512c:	ldrsw	x0, [sp, #3444]
    5130:	ldr	x1, [sp, #48]
    5134:	add	x0, x1, x0
    5138:	ldrb	w0, [x0]
    513c:	strb	w0, [sp, #3409]
    5140:	ldrb	w0, [sp, #3409]
    5144:	sxtw	x0, w0
    5148:	add	x1, sp, #0x840
    514c:	ldrb	w0, [x1, x0]
    5150:	cmp	w0, #0x0
    5154:	b.ne	5198 <ferror@plt+0x3a58>  // b.any
    5158:	ldrb	w2, [sp, #3409]
    515c:	sxtw	x0, w2
    5160:	lsl	x0, x0, #2
    5164:	add	x1, sp, #0x40
    5168:	ldr	w0, [x1, x0]
    516c:	sub	w3, w0, #0x1
    5170:	sxtw	x1, w2
    5174:	lsl	x1, x1, #2
    5178:	add	x2, sp, #0x40
    517c:	str	w3, [x2, x1]
    5180:	sxtw	x0, w0
    5184:	lsl	x0, x0, #2
    5188:	ldr	x1, [sp, #56]
    518c:	add	x0, x1, x0
    5190:	ldr	w1, [sp, #3444]
    5194:	str	w1, [x0]
    5198:	ldr	w0, [sp, #3448]
    519c:	sub	w0, w0, #0x1
    51a0:	str	w0, [sp, #3448]
    51a4:	ldrsw	x0, [sp, #3424]
    51a8:	lsl	x0, x0, #2
    51ac:	add	x1, sp, #0x40
    51b0:	ldr	w0, [x1, x0]
    51b4:	ldr	w1, [sp, #3448]
    51b8:	cmp	w1, w0
    51bc:	b.gt	50f4 <ferror@plt+0x39b4>
    51c0:	ldrsw	x0, [sp, #3424]
    51c4:	lsl	x0, x0, #2
    51c8:	add	x1, sp, #0x440
    51cc:	ldr	w0, [x1, x0]
    51d0:	sub	w1, w0, #0x1
    51d4:	ldrsw	x0, [sp, #3424]
    51d8:	lsl	x0, x0, #2
    51dc:	add	x2, sp, #0x40
    51e0:	ldr	w0, [x2, x0]
    51e4:	cmp	w1, w0
    51e8:	b.eq	522c <ferror@plt+0x3aec>  // b.none
    51ec:	ldrsw	x0, [sp, #3424]
    51f0:	lsl	x0, x0, #2
    51f4:	add	x1, sp, #0x440
    51f8:	ldr	w0, [x1, x0]
    51fc:	cmp	w0, #0x0
    5200:	b.ne	5224 <ferror@plt+0x3ae4>  // b.any
    5204:	ldrsw	x0, [sp, #3424]
    5208:	lsl	x0, x0, #2
    520c:	add	x1, sp, #0x40
    5210:	ldr	w1, [x1, x0]
    5214:	ldr	w0, [sp, #28]
    5218:	sub	w0, w0, #0x1
    521c:	cmp	w1, w0
    5220:	b.eq	522c <ferror@plt+0x3aec>  // b.none
    5224:	mov	w0, #0x3ef                 	// #1007
    5228:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    522c:	str	wzr, [sp, #3448]
    5230:	b	528c <ferror@plt+0x3b4c>
    5234:	ldr	w0, [sp, #3448]
    5238:	lsl	w1, w0, #8
    523c:	ldr	w0, [sp, #3424]
    5240:	add	w0, w1, w0
    5244:	sxtw	x0, w0
    5248:	lsl	x0, x0, #2
    524c:	ldr	x1, [sp, #32]
    5250:	add	x0, x1, x0
    5254:	ldr	w1, [x0]
    5258:	ldr	w0, [sp, #3448]
    525c:	lsl	w2, w0, #8
    5260:	ldr	w0, [sp, #3424]
    5264:	add	w0, w2, w0
    5268:	sxtw	x0, w0
    526c:	lsl	x0, x0, #2
    5270:	ldr	x2, [sp, #32]
    5274:	add	x0, x2, x0
    5278:	orr	w1, w1, #0x200000
    527c:	str	w1, [x0]
    5280:	ldr	w0, [sp, #3448]
    5284:	add	w0, w0, #0x1
    5288:	str	w0, [sp, #3448]
    528c:	ldr	w0, [sp, #3448]
    5290:	cmp	w0, #0xff
    5294:	b.le	5234 <ferror@plt+0x3af4>
    5298:	ldrsw	x0, [sp, #3424]
    529c:	add	x1, sp, #0x840
    52a0:	mov	w2, #0x1                   	// #1
    52a4:	strb	w2, [x1, x0]
    52a8:	ldr	w0, [sp, #3452]
    52ac:	cmp	w0, #0xfe
    52b0:	b.gt	53fc <ferror@plt+0x3cbc>
    52b4:	ldr	w0, [sp, #3424]
    52b8:	lsl	w0, w0, #8
    52bc:	sxtw	x0, w0
    52c0:	lsl	x0, x0, #2
    52c4:	ldr	x1, [sp, #32]
    52c8:	add	x0, x1, x0
    52cc:	ldr	w0, [x0]
    52d0:	and	w0, w0, #0xffdfffff
    52d4:	str	w0, [sp, #3420]
    52d8:	ldr	w0, [sp, #3424]
    52dc:	add	w0, w0, #0x1
    52e0:	lsl	w0, w0, #8
    52e4:	sxtw	x0, w0
    52e8:	lsl	x0, x0, #2
    52ec:	ldr	x1, [sp, #32]
    52f0:	add	x0, x1, x0
    52f4:	ldr	w0, [x0]
    52f8:	and	w1, w0, #0xffdfffff
    52fc:	ldr	w0, [sp, #3420]
    5300:	sub	w0, w1, w0
    5304:	str	w0, [sp, #3416]
    5308:	str	wzr, [sp, #3428]
    530c:	b	531c <ferror@plt+0x3bdc>
    5310:	ldr	w0, [sp, #3428]
    5314:	add	w0, w0, #0x1
    5318:	str	w0, [sp, #3428]
    531c:	ldr	w0, [sp, #3428]
    5320:	ldr	w1, [sp, #3416]
    5324:	asr	w1, w1, w0
    5328:	mov	w0, #0xfffe                	// #65534
    532c:	cmp	w1, w0
    5330:	b.gt	5310 <ferror@plt+0x3bd0>
    5334:	ldr	w0, [sp, #3416]
    5338:	sub	w0, w0, #0x1
    533c:	str	w0, [sp, #3448]
    5340:	b	53cc <ferror@plt+0x3c8c>
    5344:	ldr	w1, [sp, #3420]
    5348:	ldr	w0, [sp, #3448]
    534c:	add	w0, w1, w0
    5350:	sxtw	x0, w0
    5354:	lsl	x0, x0, #2
    5358:	ldr	x1, [sp, #56]
    535c:	add	x0, x1, x0
    5360:	ldr	w0, [x0]
    5364:	str	w0, [sp, #3412]
    5368:	ldr	w0, [sp, #3428]
    536c:	ldr	w1, [sp, #3448]
    5370:	asr	w0, w1, w0
    5374:	strh	w0, [sp, #3410]
    5378:	ldrsw	x0, [sp, #3412]
    537c:	lsl	x0, x0, #1
    5380:	ldr	x1, [sp, #40]
    5384:	add	x0, x1, x0
    5388:	ldrh	w1, [sp, #3410]
    538c:	strh	w1, [x0]
    5390:	ldr	w0, [sp, #3412]
    5394:	cmp	w0, #0x21
    5398:	b.gt	53c0 <ferror@plt+0x3c80>
    539c:	ldr	w1, [sp, #3412]
    53a0:	ldr	w0, [sp, #28]
    53a4:	add	w0, w1, w0
    53a8:	sxtw	x0, w0
    53ac:	lsl	x0, x0, #1
    53b0:	ldr	x1, [sp, #40]
    53b4:	add	x0, x1, x0
    53b8:	ldrh	w1, [sp, #3410]
    53bc:	strh	w1, [x0]
    53c0:	ldr	w0, [sp, #3448]
    53c4:	sub	w0, w0, #0x1
    53c8:	str	w0, [sp, #3448]
    53cc:	ldr	w0, [sp, #3448]
    53d0:	cmp	w0, #0x0
    53d4:	b.ge	5344 <ferror@plt+0x3c04>  // b.tcont
    53d8:	ldr	w0, [sp, #3416]
    53dc:	sub	w1, w0, #0x1
    53e0:	ldr	w0, [sp, #3428]
    53e4:	asr	w1, w1, w0
    53e8:	mov	w0, #0xffff                	// #65535
    53ec:	cmp	w1, w0
    53f0:	b.le	53fc <ferror@plt+0x3cbc>
    53f4:	mov	w0, #0x3ea                 	// #1002
    53f8:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    53fc:	ldr	w0, [sp, #3452]
    5400:	add	w0, w0, #0x1
    5404:	str	w0, [sp, #3452]
    5408:	ldr	w0, [sp, #3452]
    540c:	cmp	w0, #0xff
    5410:	b.le	4d8c <ferror@plt+0x364c>
    5414:	ldr	w0, [sp, #24]
    5418:	cmp	w0, #0x3
    541c:	b.le	545c <ferror@plt+0x3d1c>
    5420:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    5424:	ldr	x0, [x0, #4016]
    5428:	ldr	x5, [x0]
    542c:	ldr	w1, [sp, #28]
    5430:	ldr	w0, [sp, #3440]
    5434:	sub	w0, w1, w0
    5438:	mov	w4, w0
    543c:	ldr	w3, [sp, #3440]
    5440:	ldr	w2, [sp, #28]
    5444:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    5448:	add	x1, x0, #0xfb8
    544c:	mov	x0, x5
    5450:	bl	1730 <fprintf@plt>
    5454:	b	545c <ferror@plt+0x3d1c>
    5458:	nop
    545c:	ldp	x29, x30, [sp]
    5460:	add	sp, sp, #0xd80
    5464:	ret

0000000000005468 <BZ2_blockSort@@Base>:
    5468:	stp	x29, x30, [sp, #-96]!
    546c:	mov	x29, sp
    5470:	str	x0, [sp, #24]
    5474:	ldr	x0, [sp, #24]
    5478:	ldr	x0, [x0, #56]
    547c:	str	x0, [sp, #80]
    5480:	ldr	x0, [sp, #24]
    5484:	ldr	x0, [x0, #64]
    5488:	str	x0, [sp, #72]
    548c:	ldr	x0, [sp, #24]
    5490:	ldr	x0, [x0, #40]
    5494:	str	x0, [sp, #64]
    5498:	ldr	x0, [sp, #24]
    549c:	ldr	w0, [x0, #108]
    54a0:	str	w0, [sp, #60]
    54a4:	ldr	x0, [sp, #24]
    54a8:	ldr	w0, [x0, #656]
    54ac:	str	w0, [sp, #56]
    54b0:	ldr	x0, [sp, #24]
    54b4:	ldr	w0, [x0, #88]
    54b8:	str	w0, [sp, #92]
    54bc:	ldr	w1, [sp, #60]
    54c0:	mov	w0, #0x270f                	// #9999
    54c4:	cmp	w1, w0
    54c8:	b.gt	54f8 <BZ2_blockSort@@Base+0x90>
    54cc:	ldr	x0, [sp, #24]
    54d0:	ldr	x5, [x0, #24]
    54d4:	ldr	x0, [sp, #24]
    54d8:	ldr	x0, [x0, #32]
    54dc:	ldr	w4, [sp, #56]
    54e0:	ldr	w3, [sp, #60]
    54e4:	ldr	x2, [sp, #64]
    54e8:	mov	x1, x0
    54ec:	mov	x0, x5
    54f0:	bl	21c8 <ferror@plt+0xa88>
    54f4:	b	5680 <BZ2_blockSort@@Base+0x218>
    54f8:	ldr	w0, [sp, #60]
    54fc:	add	w0, w0, #0x22
    5500:	str	w0, [sp, #88]
    5504:	ldr	w0, [sp, #88]
    5508:	and	w0, w0, #0x1
    550c:	cmp	w0, #0x0
    5510:	b.eq	5520 <BZ2_blockSort@@Base+0xb8>  // b.none
    5514:	ldr	w0, [sp, #88]
    5518:	add	w0, w0, #0x1
    551c:	str	w0, [sp, #88]
    5520:	ldrsw	x0, [sp, #88]
    5524:	ldr	x1, [sp, #72]
    5528:	add	x0, x1, x0
    552c:	str	x0, [sp, #48]
    5530:	ldr	w0, [sp, #92]
    5534:	cmp	w0, #0x0
    5538:	b.gt	5544 <BZ2_blockSort@@Base+0xdc>
    553c:	mov	w0, #0x1                   	// #1
    5540:	str	w0, [sp, #92]
    5544:	ldr	w0, [sp, #92]
    5548:	cmp	w0, #0x64
    554c:	b.le	5558 <BZ2_blockSort@@Base+0xf0>
    5550:	mov	w0, #0x64                  	// #100
    5554:	str	w0, [sp, #92]
    5558:	ldr	w0, [sp, #92]
    555c:	sub	w0, w0, #0x1
    5560:	mov	w1, #0x5556                	// #21846
    5564:	movk	w1, #0x5555, lsl #16
    5568:	smull	x1, w0, w1
    556c:	lsr	x1, x1, #32
    5570:	asr	w0, w0, #31
    5574:	sub	w0, w1, w0
    5578:	ldr	w1, [sp, #60]
    557c:	mul	w0, w1, w0
    5580:	str	w0, [sp, #44]
    5584:	ldr	w0, [sp, #44]
    5588:	str	w0, [sp, #40]
    558c:	add	x0, sp, #0x28
    5590:	mov	x6, x0
    5594:	ldr	w5, [sp, #56]
    5598:	ldr	w4, [sp, #60]
    559c:	ldr	x3, [sp, #64]
    55a0:	ldr	x2, [sp, #48]
    55a4:	ldr	x1, [sp, #72]
    55a8:	ldr	x0, [sp, #80]
    55ac:	bl	44e4 <ferror@plt+0x2da4>
    55b0:	ldr	w0, [sp, #56]
    55b4:	cmp	w0, #0x2
    55b8:	b.le	561c <BZ2_blockSort@@Base+0x1b4>
    55bc:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    55c0:	ldr	x0, [x0, #4016]
    55c4:	ldr	x4, [x0]
    55c8:	ldr	w0, [sp, #40]
    55cc:	ldr	w1, [sp, #44]
    55d0:	sub	w2, w1, w0
    55d4:	ldr	w0, [sp, #40]
    55d8:	ldr	w1, [sp, #44]
    55dc:	sub	w0, w1, w0
    55e0:	scvtf	s1, w0
    55e4:	ldr	w0, [sp, #60]
    55e8:	cmp	w0, #0x0
    55ec:	b.eq	55fc <BZ2_blockSort@@Base+0x194>  // b.none
    55f0:	ldr	s0, [sp, #60]
    55f4:	scvtf	s0, s0
    55f8:	b	5600 <BZ2_blockSort@@Base+0x198>
    55fc:	fmov	s0, #1.000000000000000000e+00
    5600:	fdiv	s0, s1, s0
    5604:	fcvt	d0, s0
    5608:	ldr	w3, [sp, #60]
    560c:	adrp	x0, 16000 <BZ2_bzReadOpen@@Base+0x27c>
    5610:	add	x1, x0, #0xfe8
    5614:	mov	x0, x4
    5618:	bl	1730 <fprintf@plt>
    561c:	ldr	w0, [sp, #40]
    5620:	cmp	w0, #0x0
    5624:	b.ge	5680 <BZ2_blockSort@@Base+0x218>  // b.tcont
    5628:	ldr	w0, [sp, #56]
    562c:	cmp	w0, #0x1
    5630:	b.le	5658 <BZ2_blockSort@@Base+0x1f0>
    5634:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    5638:	ldr	x0, [x0, #4016]
    563c:	ldr	x0, [x0]
    5640:	mov	x3, x0
    5644:	mov	x2, #0x35                  	// #53
    5648:	mov	x1, #0x1                   	// #1
    564c:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    5650:	add	x0, x0, #0x10
    5654:	bl	16d0 <fwrite@plt>
    5658:	ldr	x0, [sp, #24]
    565c:	ldr	x5, [x0, #24]
    5660:	ldr	x0, [sp, #24]
    5664:	ldr	x0, [x0, #32]
    5668:	ldr	w4, [sp, #56]
    566c:	ldr	w3, [sp, #60]
    5670:	ldr	x2, [sp, #64]
    5674:	mov	x1, x0
    5678:	mov	x0, x5
    567c:	bl	21c8 <ferror@plt+0xa88>
    5680:	ldr	x0, [sp, #24]
    5684:	mov	w1, #0xffffffff            	// #-1
    5688:	str	w1, [x0, #48]
    568c:	str	wzr, [sp, #88]
    5690:	b	56cc <BZ2_blockSort@@Base+0x264>
    5694:	ldrsw	x0, [sp, #88]
    5698:	lsl	x0, x0, #2
    569c:	ldr	x1, [sp, #80]
    56a0:	add	x0, x1, x0
    56a4:	ldr	w0, [x0]
    56a8:	cmp	w0, #0x0
    56ac:	b.ne	56c0 <BZ2_blockSort@@Base+0x258>  // b.any
    56b0:	ldr	x0, [sp, #24]
    56b4:	ldr	w1, [sp, #88]
    56b8:	str	w1, [x0, #48]
    56bc:	b	56e0 <BZ2_blockSort@@Base+0x278>
    56c0:	ldr	w0, [sp, #88]
    56c4:	add	w0, w0, #0x1
    56c8:	str	w0, [sp, #88]
    56cc:	ldr	x0, [sp, #24]
    56d0:	ldr	w0, [x0, #108]
    56d4:	ldr	w1, [sp, #88]
    56d8:	cmp	w1, w0
    56dc:	b.lt	5694 <BZ2_blockSort@@Base+0x22c>  // b.tstop
    56e0:	ldr	x0, [sp, #24]
    56e4:	ldr	w0, [x0, #48]
    56e8:	cmn	w0, #0x1
    56ec:	b.ne	56f8 <BZ2_blockSort@@Base+0x290>  // b.any
    56f0:	mov	w0, #0x3eb                 	// #1003
    56f4:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    56f8:	nop
    56fc:	ldp	x29, x30, [sp], #96
    5700:	ret

0000000000005704 <BZ2_hbMakeCodeLengths@@Base>:
    5704:	mov	x12, #0x14b0                	// #5296
    5708:	sub	sp, sp, x12
    570c:	stp	x29, x30, [sp]
    5710:	mov	x29, sp
    5714:	str	x0, [sp, #40]
    5718:	str	x1, [sp, #32]
    571c:	str	w2, [sp, #28]
    5720:	str	w3, [sp, #24]
    5724:	str	wzr, [sp, #5284]
    5728:	b	578c <BZ2_hbMakeCodeLengths@@Base+0x88>
    572c:	ldrsw	x0, [sp, #5284]
    5730:	lsl	x0, x0, #2
    5734:	ldr	x1, [sp, #32]
    5738:	add	x0, x1, x0
    573c:	ldr	w0, [x0]
    5740:	cmp	w0, #0x0
    5744:	b.eq	5764 <BZ2_hbMakeCodeLengths@@Base+0x60>  // b.none
    5748:	ldrsw	x0, [sp, #5284]
    574c:	lsl	x0, x0, #2
    5750:	ldr	x1, [sp, #32]
    5754:	add	x0, x1, x0
    5758:	ldr	w0, [x0]
    575c:	lsl	w0, w0, #8
    5760:	b	5768 <BZ2_hbMakeCodeLengths@@Base+0x64>
    5764:	mov	w0, #0x100                 	// #256
    5768:	ldr	w1, [sp, #5284]
    576c:	add	w1, w1, #0x1
    5770:	sxtw	x1, w1
    5774:	lsl	x1, x1, #2
    5778:	add	x2, sp, #0x848
    577c:	str	w0, [x2, x1]
    5780:	ldr	w0, [sp, #5284]
    5784:	add	w0, w0, #0x1
    5788:	str	w0, [sp, #5284]
    578c:	ldr	w1, [sp, #5284]
    5790:	ldr	w0, [sp, #28]
    5794:	cmp	w1, w0
    5798:	b.lt	572c <BZ2_hbMakeCodeLengths@@Base+0x28>  // b.tstop
    579c:	ldr	w0, [sp, #28]
    57a0:	str	w0, [sp, #5292]
    57a4:	str	wzr, [sp, #5288]
    57a8:	str	wzr, [sp, #4184]
    57ac:	str	wzr, [sp, #2120]
    57b0:	mov	w0, #0xfffffffe            	// #-2
    57b4:	str	w0, [sp, #56]
    57b8:	mov	w0, #0x1                   	// #1
    57bc:	str	w0, [sp, #5284]
    57c0:	b	58c4 <BZ2_hbMakeCodeLengths@@Base+0x1c0>
    57c4:	ldrsw	x0, [sp, #5284]
    57c8:	lsl	x0, x0, #2
    57cc:	add	x1, sp, #0x38
    57d0:	mov	w2, #0xffffffff            	// #-1
    57d4:	str	w2, [x1, x0]
    57d8:	ldr	w0, [sp, #5288]
    57dc:	add	w0, w0, #0x1
    57e0:	str	w0, [sp, #5288]
    57e4:	ldrsw	x0, [sp, #5288]
    57e8:	lsl	x0, x0, #2
    57ec:	add	x1, sp, #0x1, lsl #12
    57f0:	add	x1, x1, #0x58
    57f4:	ldr	w2, [sp, #5284]
    57f8:	str	w2, [x1, x0]
    57fc:	ldr	w0, [sp, #5288]
    5800:	str	w0, [sp, #5268]
    5804:	ldrsw	x0, [sp, #5268]
    5808:	lsl	x0, x0, #2
    580c:	add	x1, sp, #0x1, lsl #12
    5810:	add	x1, x1, #0x58
    5814:	ldr	w0, [x1, x0]
    5818:	str	w0, [sp, #5224]
    581c:	b	585c <BZ2_hbMakeCodeLengths@@Base+0x158>
    5820:	ldr	w0, [sp, #5268]
    5824:	asr	w0, w0, #1
    5828:	sxtw	x0, w0
    582c:	lsl	x0, x0, #2
    5830:	add	x1, sp, #0x1, lsl #12
    5834:	add	x1, x1, #0x58
    5838:	ldr	w2, [x1, x0]
    583c:	ldrsw	x0, [sp, #5268]
    5840:	lsl	x0, x0, #2
    5844:	add	x1, sp, #0x1, lsl #12
    5848:	add	x1, x1, #0x58
    584c:	str	w2, [x1, x0]
    5850:	ldr	w0, [sp, #5268]
    5854:	asr	w0, w0, #1
    5858:	str	w0, [sp, #5268]
    585c:	ldrsw	x0, [sp, #5224]
    5860:	lsl	x0, x0, #2
    5864:	add	x1, sp, #0x848
    5868:	ldr	w1, [x1, x0]
    586c:	ldr	w0, [sp, #5268]
    5870:	asr	w0, w0, #1
    5874:	sxtw	x0, w0
    5878:	lsl	x0, x0, #2
    587c:	add	x2, sp, #0x1, lsl #12
    5880:	add	x2, x2, #0x58
    5884:	ldr	w0, [x2, x0]
    5888:	sxtw	x0, w0
    588c:	lsl	x0, x0, #2
    5890:	add	x2, sp, #0x848
    5894:	ldr	w0, [x2, x0]
    5898:	cmp	w1, w0
    589c:	b.lt	5820 <BZ2_hbMakeCodeLengths@@Base+0x11c>  // b.tstop
    58a0:	ldrsw	x0, [sp, #5268]
    58a4:	lsl	x0, x0, #2
    58a8:	add	x1, sp, #0x1, lsl #12
    58ac:	add	x1, x1, #0x58
    58b0:	ldr	w2, [sp, #5224]
    58b4:	str	w2, [x1, x0]
    58b8:	ldr	w0, [sp, #5284]
    58bc:	add	w0, w0, #0x1
    58c0:	str	w0, [sp, #5284]
    58c4:	ldr	w1, [sp, #5284]
    58c8:	ldr	w0, [sp, #28]
    58cc:	cmp	w1, w0
    58d0:	b.le	57c4 <BZ2_hbMakeCodeLengths@@Base+0xc0>
    58d4:	ldr	w0, [sp, #5288]
    58d8:	cmp	w0, #0x103
    58dc:	b.le	5d68 <BZ2_hbMakeCodeLengths@@Base+0x664>
    58e0:	mov	w0, #0x7d1                 	// #2001
    58e4:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    58e8:	b	5d68 <BZ2_hbMakeCodeLengths@@Base+0x664>
    58ec:	ldr	w0, [sp, #4188]
    58f0:	str	w0, [sp, #5244]
    58f4:	ldrsw	x0, [sp, #5288]
    58f8:	lsl	x0, x0, #2
    58fc:	add	x1, sp, #0x1, lsl #12
    5900:	add	x1, x1, #0x58
    5904:	ldr	w0, [x1, x0]
    5908:	str	w0, [sp, #4188]
    590c:	ldr	w0, [sp, #5288]
    5910:	sub	w0, w0, #0x1
    5914:	str	w0, [sp, #5288]
    5918:	mov	w0, #0x1                   	// #1
    591c:	str	w0, [sp, #5264]
    5920:	ldrsw	x0, [sp, #5264]
    5924:	lsl	x0, x0, #2
    5928:	add	x1, sp, #0x1, lsl #12
    592c:	add	x1, x1, #0x58
    5930:	ldr	w0, [x1, x0]
    5934:	str	w0, [sp, #5240]
    5938:	ldr	w0, [sp, #5264]
    593c:	lsl	w0, w0, #1
    5940:	str	w0, [sp, #5260]
    5944:	ldr	w1, [sp, #5260]
    5948:	ldr	w0, [sp, #5288]
    594c:	cmp	w1, w0
    5950:	b.gt	5a38 <BZ2_hbMakeCodeLengths@@Base+0x334>
    5954:	ldr	w1, [sp, #5260]
    5958:	ldr	w0, [sp, #5288]
    595c:	cmp	w1, w0
    5960:	b.ge	59c8 <BZ2_hbMakeCodeLengths@@Base+0x2c4>  // b.tcont
    5964:	ldr	w0, [sp, #5260]
    5968:	add	w0, w0, #0x1
    596c:	sxtw	x0, w0
    5970:	lsl	x0, x0, #2
    5974:	add	x1, sp, #0x1, lsl #12
    5978:	add	x1, x1, #0x58
    597c:	ldr	w0, [x1, x0]
    5980:	sxtw	x0, w0
    5984:	lsl	x0, x0, #2
    5988:	add	x1, sp, #0x848
    598c:	ldr	w1, [x1, x0]
    5990:	ldrsw	x0, [sp, #5260]
    5994:	lsl	x0, x0, #2
    5998:	add	x2, sp, #0x1, lsl #12
    599c:	add	x2, x2, #0x58
    59a0:	ldr	w0, [x2, x0]
    59a4:	sxtw	x0, w0
    59a8:	lsl	x0, x0, #2
    59ac:	add	x2, sp, #0x848
    59b0:	ldr	w0, [x2, x0]
    59b4:	cmp	w1, w0
    59b8:	b.ge	59c8 <BZ2_hbMakeCodeLengths@@Base+0x2c4>  // b.tcont
    59bc:	ldr	w0, [sp, #5260]
    59c0:	add	w0, w0, #0x1
    59c4:	str	w0, [sp, #5260]
    59c8:	ldrsw	x0, [sp, #5240]
    59cc:	lsl	x0, x0, #2
    59d0:	add	x1, sp, #0x848
    59d4:	ldr	w1, [x1, x0]
    59d8:	ldrsw	x0, [sp, #5260]
    59dc:	lsl	x0, x0, #2
    59e0:	add	x2, sp, #0x1, lsl #12
    59e4:	add	x2, x2, #0x58
    59e8:	ldr	w0, [x2, x0]
    59ec:	sxtw	x0, w0
    59f0:	lsl	x0, x0, #2
    59f4:	add	x2, sp, #0x848
    59f8:	ldr	w0, [x2, x0]
    59fc:	cmp	w1, w0
    5a00:	b.lt	5a38 <BZ2_hbMakeCodeLengths@@Base+0x334>  // b.tstop
    5a04:	ldrsw	x0, [sp, #5260]
    5a08:	lsl	x0, x0, #2
    5a0c:	add	x1, sp, #0x1, lsl #12
    5a10:	add	x1, x1, #0x58
    5a14:	ldr	w2, [x1, x0]
    5a18:	ldrsw	x0, [sp, #5264]
    5a1c:	lsl	x0, x0, #2
    5a20:	add	x1, sp, #0x1, lsl #12
    5a24:	add	x1, x1, #0x58
    5a28:	str	w2, [x1, x0]
    5a2c:	ldr	w0, [sp, #5260]
    5a30:	str	w0, [sp, #5264]
    5a34:	b	5938 <BZ2_hbMakeCodeLengths@@Base+0x234>
    5a38:	nop
    5a3c:	ldrsw	x0, [sp, #5264]
    5a40:	lsl	x0, x0, #2
    5a44:	add	x1, sp, #0x1, lsl #12
    5a48:	add	x1, x1, #0x58
    5a4c:	ldr	w2, [sp, #5240]
    5a50:	str	w2, [x1, x0]
    5a54:	ldr	w0, [sp, #4188]
    5a58:	str	w0, [sp, #5236]
    5a5c:	ldrsw	x0, [sp, #5288]
    5a60:	lsl	x0, x0, #2
    5a64:	add	x1, sp, #0x1, lsl #12
    5a68:	add	x1, x1, #0x58
    5a6c:	ldr	w0, [x1, x0]
    5a70:	str	w0, [sp, #4188]
    5a74:	ldr	w0, [sp, #5288]
    5a78:	sub	w0, w0, #0x1
    5a7c:	str	w0, [sp, #5288]
    5a80:	mov	w0, #0x1                   	// #1
    5a84:	str	w0, [sp, #5256]
    5a88:	ldrsw	x0, [sp, #5256]
    5a8c:	lsl	x0, x0, #2
    5a90:	add	x1, sp, #0x1, lsl #12
    5a94:	add	x1, x1, #0x58
    5a98:	ldr	w0, [x1, x0]
    5a9c:	str	w0, [sp, #5232]
    5aa0:	ldr	w0, [sp, #5256]
    5aa4:	lsl	w0, w0, #1
    5aa8:	str	w0, [sp, #5252]
    5aac:	ldr	w1, [sp, #5252]
    5ab0:	ldr	w0, [sp, #5288]
    5ab4:	cmp	w1, w0
    5ab8:	b.gt	5ba0 <BZ2_hbMakeCodeLengths@@Base+0x49c>
    5abc:	ldr	w1, [sp, #5252]
    5ac0:	ldr	w0, [sp, #5288]
    5ac4:	cmp	w1, w0
    5ac8:	b.ge	5b30 <BZ2_hbMakeCodeLengths@@Base+0x42c>  // b.tcont
    5acc:	ldr	w0, [sp, #5252]
    5ad0:	add	w0, w0, #0x1
    5ad4:	sxtw	x0, w0
    5ad8:	lsl	x0, x0, #2
    5adc:	add	x1, sp, #0x1, lsl #12
    5ae0:	add	x1, x1, #0x58
    5ae4:	ldr	w0, [x1, x0]
    5ae8:	sxtw	x0, w0
    5aec:	lsl	x0, x0, #2
    5af0:	add	x1, sp, #0x848
    5af4:	ldr	w1, [x1, x0]
    5af8:	ldrsw	x0, [sp, #5252]
    5afc:	lsl	x0, x0, #2
    5b00:	add	x2, sp, #0x1, lsl #12
    5b04:	add	x2, x2, #0x58
    5b08:	ldr	w0, [x2, x0]
    5b0c:	sxtw	x0, w0
    5b10:	lsl	x0, x0, #2
    5b14:	add	x2, sp, #0x848
    5b18:	ldr	w0, [x2, x0]
    5b1c:	cmp	w1, w0
    5b20:	b.ge	5b30 <BZ2_hbMakeCodeLengths@@Base+0x42c>  // b.tcont
    5b24:	ldr	w0, [sp, #5252]
    5b28:	add	w0, w0, #0x1
    5b2c:	str	w0, [sp, #5252]
    5b30:	ldrsw	x0, [sp, #5232]
    5b34:	lsl	x0, x0, #2
    5b38:	add	x1, sp, #0x848
    5b3c:	ldr	w1, [x1, x0]
    5b40:	ldrsw	x0, [sp, #5252]
    5b44:	lsl	x0, x0, #2
    5b48:	add	x2, sp, #0x1, lsl #12
    5b4c:	add	x2, x2, #0x58
    5b50:	ldr	w0, [x2, x0]
    5b54:	sxtw	x0, w0
    5b58:	lsl	x0, x0, #2
    5b5c:	add	x2, sp, #0x848
    5b60:	ldr	w0, [x2, x0]
    5b64:	cmp	w1, w0
    5b68:	b.lt	5ba0 <BZ2_hbMakeCodeLengths@@Base+0x49c>  // b.tstop
    5b6c:	ldrsw	x0, [sp, #5252]
    5b70:	lsl	x0, x0, #2
    5b74:	add	x1, sp, #0x1, lsl #12
    5b78:	add	x1, x1, #0x58
    5b7c:	ldr	w2, [x1, x0]
    5b80:	ldrsw	x0, [sp, #5256]
    5b84:	lsl	x0, x0, #2
    5b88:	add	x1, sp, #0x1, lsl #12
    5b8c:	add	x1, x1, #0x58
    5b90:	str	w2, [x1, x0]
    5b94:	ldr	w0, [sp, #5252]
    5b98:	str	w0, [sp, #5256]
    5b9c:	b	5aa0 <BZ2_hbMakeCodeLengths@@Base+0x39c>
    5ba0:	nop
    5ba4:	ldrsw	x0, [sp, #5256]
    5ba8:	lsl	x0, x0, #2
    5bac:	add	x1, sp, #0x1, lsl #12
    5bb0:	add	x1, x1, #0x58
    5bb4:	ldr	w2, [sp, #5232]
    5bb8:	str	w2, [x1, x0]
    5bbc:	ldr	w0, [sp, #5292]
    5bc0:	add	w0, w0, #0x1
    5bc4:	str	w0, [sp, #5292]
    5bc8:	ldrsw	x0, [sp, #5236]
    5bcc:	lsl	x0, x0, #2
    5bd0:	add	x1, sp, #0x38
    5bd4:	ldr	w2, [sp, #5292]
    5bd8:	str	w2, [x1, x0]
    5bdc:	ldrsw	x0, [sp, #5236]
    5be0:	lsl	x0, x0, #2
    5be4:	add	x1, sp, #0x38
    5be8:	ldr	w2, [x1, x0]
    5bec:	ldrsw	x0, [sp, #5244]
    5bf0:	lsl	x0, x0, #2
    5bf4:	add	x1, sp, #0x38
    5bf8:	str	w2, [x1, x0]
    5bfc:	ldrsw	x0, [sp, #5244]
    5c00:	lsl	x0, x0, #2
    5c04:	add	x1, sp, #0x848
    5c08:	ldr	w0, [x1, x0]
    5c0c:	and	w1, w0, #0xffffff00
    5c10:	ldrsw	x0, [sp, #5236]
    5c14:	lsl	x0, x0, #2
    5c18:	add	x2, sp, #0x848
    5c1c:	ldr	w0, [x2, x0]
    5c20:	and	w0, w0, #0xffffff00
    5c24:	add	w2, w1, w0
    5c28:	ldrsw	x0, [sp, #5236]
    5c2c:	lsl	x0, x0, #2
    5c30:	add	x1, sp, #0x848
    5c34:	ldr	w0, [x1, x0]
    5c38:	and	w1, w0, #0xff
    5c3c:	ldrsw	x0, [sp, #5244]
    5c40:	lsl	x0, x0, #2
    5c44:	add	x3, sp, #0x848
    5c48:	ldr	w0, [x3, x0]
    5c4c:	and	w0, w0, #0xff
    5c50:	cmp	w1, w0
    5c54:	csel	w0, w1, w0, ge  // ge = tcont
    5c58:	add	w0, w0, #0x1
    5c5c:	orr	w0, w2, w0
    5c60:	mov	w2, w0
    5c64:	ldrsw	x0, [sp, #5292]
    5c68:	lsl	x0, x0, #2
    5c6c:	add	x1, sp, #0x848
    5c70:	str	w2, [x1, x0]
    5c74:	ldrsw	x0, [sp, #5292]
    5c78:	lsl	x0, x0, #2
    5c7c:	add	x1, sp, #0x38
    5c80:	mov	w2, #0xffffffff            	// #-1
    5c84:	str	w2, [x1, x0]
    5c88:	ldr	w0, [sp, #5288]
    5c8c:	add	w0, w0, #0x1
    5c90:	str	w0, [sp, #5288]
    5c94:	ldrsw	x0, [sp, #5288]
    5c98:	lsl	x0, x0, #2
    5c9c:	add	x1, sp, #0x1, lsl #12
    5ca0:	add	x1, x1, #0x58
    5ca4:	ldr	w2, [sp, #5292]
    5ca8:	str	w2, [x1, x0]
    5cac:	ldr	w0, [sp, #5288]
    5cb0:	str	w0, [sp, #5248]
    5cb4:	ldrsw	x0, [sp, #5248]
    5cb8:	lsl	x0, x0, #2
    5cbc:	add	x1, sp, #0x1, lsl #12
    5cc0:	add	x1, x1, #0x58
    5cc4:	ldr	w0, [x1, x0]
    5cc8:	str	w0, [sp, #5228]
    5ccc:	b	5d0c <BZ2_hbMakeCodeLengths@@Base+0x608>
    5cd0:	ldr	w0, [sp, #5248]
    5cd4:	asr	w0, w0, #1
    5cd8:	sxtw	x0, w0
    5cdc:	lsl	x0, x0, #2
    5ce0:	add	x1, sp, #0x1, lsl #12
    5ce4:	add	x1, x1, #0x58
    5ce8:	ldr	w2, [x1, x0]
    5cec:	ldrsw	x0, [sp, #5248]
    5cf0:	lsl	x0, x0, #2
    5cf4:	add	x1, sp, #0x1, lsl #12
    5cf8:	add	x1, x1, #0x58
    5cfc:	str	w2, [x1, x0]
    5d00:	ldr	w0, [sp, #5248]
    5d04:	asr	w0, w0, #1
    5d08:	str	w0, [sp, #5248]
    5d0c:	ldrsw	x0, [sp, #5228]
    5d10:	lsl	x0, x0, #2
    5d14:	add	x1, sp, #0x848
    5d18:	ldr	w1, [x1, x0]
    5d1c:	ldr	w0, [sp, #5248]
    5d20:	asr	w0, w0, #1
    5d24:	sxtw	x0, w0
    5d28:	lsl	x0, x0, #2
    5d2c:	add	x2, sp, #0x1, lsl #12
    5d30:	add	x2, x2, #0x58
    5d34:	ldr	w0, [x2, x0]
    5d38:	sxtw	x0, w0
    5d3c:	lsl	x0, x0, #2
    5d40:	add	x2, sp, #0x848
    5d44:	ldr	w0, [x2, x0]
    5d48:	cmp	w1, w0
    5d4c:	b.lt	5cd0 <BZ2_hbMakeCodeLengths@@Base+0x5cc>  // b.tstop
    5d50:	ldrsw	x0, [sp, #5248]
    5d54:	lsl	x0, x0, #2
    5d58:	add	x1, sp, #0x1, lsl #12
    5d5c:	add	x1, x1, #0x58
    5d60:	ldr	w2, [sp, #5228]
    5d64:	str	w2, [x1, x0]
    5d68:	ldr	w0, [sp, #5288]
    5d6c:	cmp	w0, #0x1
    5d70:	b.gt	58ec <BZ2_hbMakeCodeLengths@@Base+0x1e8>
    5d74:	ldr	w0, [sp, #5292]
    5d78:	cmp	w0, #0x203
    5d7c:	b.le	5d88 <BZ2_hbMakeCodeLengths@@Base+0x684>
    5d80:	mov	w0, #0x7d2                 	// #2002
    5d84:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    5d88:	add	x0, sp, #0x1, lsl #12
    5d8c:	strb	wzr, [x0, #1179]
    5d90:	mov	w0, #0x1                   	// #1
    5d94:	str	w0, [sp, #5284]
    5d98:	b	5e28 <BZ2_hbMakeCodeLengths@@Base+0x724>
    5d9c:	str	wzr, [sp, #5280]
    5da0:	ldr	w0, [sp, #5284]
    5da4:	str	w0, [sp, #5276]
    5da8:	b	5dcc <BZ2_hbMakeCodeLengths@@Base+0x6c8>
    5dac:	ldrsw	x0, [sp, #5276]
    5db0:	lsl	x0, x0, #2
    5db4:	add	x1, sp, #0x38
    5db8:	ldr	w0, [x1, x0]
    5dbc:	str	w0, [sp, #5276]
    5dc0:	ldr	w0, [sp, #5280]
    5dc4:	add	w0, w0, #0x1
    5dc8:	str	w0, [sp, #5280]
    5dcc:	ldrsw	x0, [sp, #5276]
    5dd0:	lsl	x0, x0, #2
    5dd4:	add	x1, sp, #0x38
    5dd8:	ldr	w0, [x1, x0]
    5ddc:	cmp	w0, #0x0
    5de0:	b.ge	5dac <BZ2_hbMakeCodeLengths@@Base+0x6a8>  // b.tcont
    5de4:	ldrsw	x0, [sp, #5284]
    5de8:	sub	x0, x0, #0x1
    5dec:	ldr	x1, [sp, #40]
    5df0:	add	x0, x1, x0
    5df4:	ldr	w1, [sp, #5280]
    5df8:	and	w1, w1, #0xff
    5dfc:	strb	w1, [x0]
    5e00:	ldr	w1, [sp, #5280]
    5e04:	ldr	w0, [sp, #24]
    5e08:	cmp	w1, w0
    5e0c:	b.le	5e1c <BZ2_hbMakeCodeLengths@@Base+0x718>
    5e10:	mov	w0, #0x1                   	// #1
    5e14:	add	x1, sp, #0x1, lsl #12
    5e18:	strb	w0, [x1, #1179]
    5e1c:	ldr	w0, [sp, #5284]
    5e20:	add	w0, w0, #0x1
    5e24:	str	w0, [sp, #5284]
    5e28:	ldr	w1, [sp, #5284]
    5e2c:	ldr	w0, [sp, #28]
    5e30:	cmp	w1, w0
    5e34:	b.le	5d9c <BZ2_hbMakeCodeLengths@@Base+0x698>
    5e38:	add	x0, sp, #0x1, lsl #12
    5e3c:	ldrb	w0, [x0, #1179]
    5e40:	cmp	w0, #0x0
    5e44:	b.eq	5ebc <BZ2_hbMakeCodeLengths@@Base+0x7b8>  // b.none
    5e48:	mov	w0, #0x1                   	// #1
    5e4c:	str	w0, [sp, #5284]
    5e50:	b	5ea8 <BZ2_hbMakeCodeLengths@@Base+0x7a4>
    5e54:	ldrsw	x0, [sp, #5284]
    5e58:	lsl	x0, x0, #2
    5e5c:	add	x1, sp, #0x848
    5e60:	ldr	w0, [x1, x0]
    5e64:	asr	w0, w0, #8
    5e68:	str	w0, [sp, #5280]
    5e6c:	ldr	w0, [sp, #5280]
    5e70:	lsr	w1, w0, #31
    5e74:	add	w0, w1, w0
    5e78:	asr	w0, w0, #1
    5e7c:	add	w0, w0, #0x1
    5e80:	str	w0, [sp, #5280]
    5e84:	ldr	w0, [sp, #5280]
    5e88:	lsl	w2, w0, #8
    5e8c:	ldrsw	x0, [sp, #5284]
    5e90:	lsl	x0, x0, #2
    5e94:	add	x1, sp, #0x848
    5e98:	str	w2, [x1, x0]
    5e9c:	ldr	w0, [sp, #5284]
    5ea0:	add	w0, w0, #0x1
    5ea4:	str	w0, [sp, #5284]
    5ea8:	ldr	w1, [sp, #5284]
    5eac:	ldr	w0, [sp, #28]
    5eb0:	cmp	w1, w0
    5eb4:	b.le	5e54 <BZ2_hbMakeCodeLengths@@Base+0x750>
    5eb8:	b	579c <BZ2_hbMakeCodeLengths@@Base+0x98>
    5ebc:	nop
    5ec0:	nop
    5ec4:	ldp	x29, x30, [sp]
    5ec8:	mov	x12, #0x14b0                	// #5296
    5ecc:	add	sp, sp, x12
    5ed0:	ret

0000000000005ed4 <BZ2_hbAssignCodes@@Base>:
    5ed4:	sub	sp, sp, #0x30
    5ed8:	str	x0, [sp, #24]
    5edc:	str	x1, [sp, #16]
    5ee0:	str	w2, [sp, #12]
    5ee4:	str	w3, [sp, #8]
    5ee8:	str	w4, [sp, #4]
    5eec:	str	wzr, [sp, #40]
    5ef0:	ldr	w0, [sp, #12]
    5ef4:	str	w0, [sp, #44]
    5ef8:	b	5f7c <BZ2_hbAssignCodes@@Base+0xa8>
    5efc:	str	wzr, [sp, #36]
    5f00:	b	5f54 <BZ2_hbAssignCodes@@Base+0x80>
    5f04:	ldrsw	x0, [sp, #36]
    5f08:	ldr	x1, [sp, #16]
    5f0c:	add	x0, x1, x0
    5f10:	ldrb	w0, [x0]
    5f14:	mov	w1, w0
    5f18:	ldr	w0, [sp, #44]
    5f1c:	cmp	w0, w1
    5f20:	b.ne	5f48 <BZ2_hbAssignCodes@@Base+0x74>  // b.any
    5f24:	ldrsw	x0, [sp, #36]
    5f28:	lsl	x0, x0, #2
    5f2c:	ldr	x1, [sp, #24]
    5f30:	add	x0, x1, x0
    5f34:	ldr	w1, [sp, #40]
    5f38:	str	w1, [x0]
    5f3c:	ldr	w0, [sp, #40]
    5f40:	add	w0, w0, #0x1
    5f44:	str	w0, [sp, #40]
    5f48:	ldr	w0, [sp, #36]
    5f4c:	add	w0, w0, #0x1
    5f50:	str	w0, [sp, #36]
    5f54:	ldr	w1, [sp, #36]
    5f58:	ldr	w0, [sp, #4]
    5f5c:	cmp	w1, w0
    5f60:	b.lt	5f04 <BZ2_hbAssignCodes@@Base+0x30>  // b.tstop
    5f64:	ldr	w0, [sp, #40]
    5f68:	lsl	w0, w0, #1
    5f6c:	str	w0, [sp, #40]
    5f70:	ldr	w0, [sp, #44]
    5f74:	add	w0, w0, #0x1
    5f78:	str	w0, [sp, #44]
    5f7c:	ldr	w1, [sp, #44]
    5f80:	ldr	w0, [sp, #8]
    5f84:	cmp	w1, w0
    5f88:	b.le	5efc <BZ2_hbAssignCodes@@Base+0x28>
    5f8c:	nop
    5f90:	nop
    5f94:	add	sp, sp, #0x30
    5f98:	ret

0000000000005f9c <BZ2_hbCreateDecodeTables@@Base>:
    5f9c:	sub	sp, sp, #0x40
    5fa0:	str	x0, [sp, #40]
    5fa4:	str	x1, [sp, #32]
    5fa8:	str	x2, [sp, #24]
    5fac:	str	x3, [sp, #16]
    5fb0:	str	w4, [sp, #12]
    5fb4:	str	w5, [sp, #8]
    5fb8:	str	w6, [sp, #4]
    5fbc:	str	wzr, [sp, #60]
    5fc0:	ldr	w0, [sp, #12]
    5fc4:	str	w0, [sp, #56]
    5fc8:	b	6040 <BZ2_hbCreateDecodeTables@@Base+0xa4>
    5fcc:	str	wzr, [sp, #52]
    5fd0:	b	6024 <BZ2_hbCreateDecodeTables@@Base+0x88>
    5fd4:	ldrsw	x0, [sp, #52]
    5fd8:	ldr	x1, [sp, #16]
    5fdc:	add	x0, x1, x0
    5fe0:	ldrb	w0, [x0]
    5fe4:	mov	w1, w0
    5fe8:	ldr	w0, [sp, #56]
    5fec:	cmp	w0, w1
    5ff0:	b.ne	6018 <BZ2_hbCreateDecodeTables@@Base+0x7c>  // b.any
    5ff4:	ldrsw	x0, [sp, #60]
    5ff8:	lsl	x0, x0, #2
    5ffc:	ldr	x1, [sp, #24]
    6000:	add	x0, x1, x0
    6004:	ldr	w1, [sp, #52]
    6008:	str	w1, [x0]
    600c:	ldr	w0, [sp, #60]
    6010:	add	w0, w0, #0x1
    6014:	str	w0, [sp, #60]
    6018:	ldr	w0, [sp, #52]
    601c:	add	w0, w0, #0x1
    6020:	str	w0, [sp, #52]
    6024:	ldr	w1, [sp, #52]
    6028:	ldr	w0, [sp, #4]
    602c:	cmp	w1, w0
    6030:	b.lt	5fd4 <BZ2_hbCreateDecodeTables@@Base+0x38>  // b.tstop
    6034:	ldr	w0, [sp, #56]
    6038:	add	w0, w0, #0x1
    603c:	str	w0, [sp, #56]
    6040:	ldr	w1, [sp, #56]
    6044:	ldr	w0, [sp, #8]
    6048:	cmp	w1, w0
    604c:	b.le	5fcc <BZ2_hbCreateDecodeTables@@Base+0x30>
    6050:	str	wzr, [sp, #56]
    6054:	b	6078 <BZ2_hbCreateDecodeTables@@Base+0xdc>
    6058:	ldrsw	x0, [sp, #56]
    605c:	lsl	x0, x0, #2
    6060:	ldr	x1, [sp, #32]
    6064:	add	x0, x1, x0
    6068:	str	wzr, [x0]
    606c:	ldr	w0, [sp, #56]
    6070:	add	w0, w0, #0x1
    6074:	str	w0, [sp, #56]
    6078:	ldr	w0, [sp, #56]
    607c:	cmp	w0, #0x16
    6080:	b.le	6058 <BZ2_hbCreateDecodeTables@@Base+0xbc>
    6084:	str	wzr, [sp, #56]
    6088:	b	60c8 <BZ2_hbCreateDecodeTables@@Base+0x12c>
    608c:	ldrsw	x0, [sp, #56]
    6090:	ldr	x1, [sp, #16]
    6094:	add	x0, x1, x0
    6098:	ldrb	w0, [x0]
    609c:	and	x0, x0, #0xff
    60a0:	add	x0, x0, #0x1
    60a4:	lsl	x0, x0, #2
    60a8:	ldr	x1, [sp, #32]
    60ac:	add	x0, x1, x0
    60b0:	ldr	w1, [x0]
    60b4:	add	w1, w1, #0x1
    60b8:	str	w1, [x0]
    60bc:	ldr	w0, [sp, #56]
    60c0:	add	w0, w0, #0x1
    60c4:	str	w0, [sp, #56]
    60c8:	ldr	w1, [sp, #56]
    60cc:	ldr	w0, [sp, #4]
    60d0:	cmp	w1, w0
    60d4:	b.lt	608c <BZ2_hbCreateDecodeTables@@Base+0xf0>  // b.tstop
    60d8:	mov	w0, #0x1                   	// #1
    60dc:	str	w0, [sp, #56]
    60e0:	b	6134 <BZ2_hbCreateDecodeTables@@Base+0x198>
    60e4:	ldrsw	x0, [sp, #56]
    60e8:	lsl	x0, x0, #2
    60ec:	ldr	x1, [sp, #32]
    60f0:	add	x0, x1, x0
    60f4:	ldr	w2, [x0]
    60f8:	ldrsw	x0, [sp, #56]
    60fc:	lsl	x0, x0, #2
    6100:	sub	x0, x0, #0x4
    6104:	ldr	x1, [sp, #32]
    6108:	add	x0, x1, x0
    610c:	ldr	w1, [x0]
    6110:	ldrsw	x0, [sp, #56]
    6114:	lsl	x0, x0, #2
    6118:	ldr	x3, [sp, #32]
    611c:	add	x0, x3, x0
    6120:	add	w1, w2, w1
    6124:	str	w1, [x0]
    6128:	ldr	w0, [sp, #56]
    612c:	add	w0, w0, #0x1
    6130:	str	w0, [sp, #56]
    6134:	ldr	w0, [sp, #56]
    6138:	cmp	w0, #0x16
    613c:	b.le	60e4 <BZ2_hbCreateDecodeTables@@Base+0x148>
    6140:	str	wzr, [sp, #56]
    6144:	b	6168 <BZ2_hbCreateDecodeTables@@Base+0x1cc>
    6148:	ldrsw	x0, [sp, #56]
    614c:	lsl	x0, x0, #2
    6150:	ldr	x1, [sp, #40]
    6154:	add	x0, x1, x0
    6158:	str	wzr, [x0]
    615c:	ldr	w0, [sp, #56]
    6160:	add	w0, w0, #0x1
    6164:	str	w0, [sp, #56]
    6168:	ldr	w0, [sp, #56]
    616c:	cmp	w0, #0x16
    6170:	b.le	6148 <BZ2_hbCreateDecodeTables@@Base+0x1ac>
    6174:	str	wzr, [sp, #48]
    6178:	ldr	w0, [sp, #12]
    617c:	str	w0, [sp, #56]
    6180:	b	61f4 <BZ2_hbCreateDecodeTables@@Base+0x258>
    6184:	ldrsw	x0, [sp, #56]
    6188:	add	x0, x0, #0x1
    618c:	lsl	x0, x0, #2
    6190:	ldr	x1, [sp, #32]
    6194:	add	x0, x1, x0
    6198:	ldr	w1, [x0]
    619c:	ldrsw	x0, [sp, #56]
    61a0:	lsl	x0, x0, #2
    61a4:	ldr	x2, [sp, #32]
    61a8:	add	x0, x2, x0
    61ac:	ldr	w0, [x0]
    61b0:	sub	w0, w1, w0
    61b4:	ldr	w1, [sp, #48]
    61b8:	add	w0, w1, w0
    61bc:	str	w0, [sp, #48]
    61c0:	ldrsw	x0, [sp, #56]
    61c4:	lsl	x0, x0, #2
    61c8:	ldr	x1, [sp, #40]
    61cc:	add	x0, x1, x0
    61d0:	ldr	w1, [sp, #48]
    61d4:	sub	w1, w1, #0x1
    61d8:	str	w1, [x0]
    61dc:	ldr	w0, [sp, #48]
    61e0:	lsl	w0, w0, #1
    61e4:	str	w0, [sp, #48]
    61e8:	ldr	w0, [sp, #56]
    61ec:	add	w0, w0, #0x1
    61f0:	str	w0, [sp, #56]
    61f4:	ldr	w1, [sp, #56]
    61f8:	ldr	w0, [sp, #8]
    61fc:	cmp	w1, w0
    6200:	b.le	6184 <BZ2_hbCreateDecodeTables@@Base+0x1e8>
    6204:	ldr	w0, [sp, #12]
    6208:	add	w0, w0, #0x1
    620c:	str	w0, [sp, #56]
    6210:	b	626c <BZ2_hbCreateDecodeTables@@Base+0x2d0>
    6214:	ldrsw	x0, [sp, #56]
    6218:	lsl	x0, x0, #2
    621c:	sub	x0, x0, #0x4
    6220:	ldr	x1, [sp, #40]
    6224:	add	x0, x1, x0
    6228:	ldr	w0, [x0]
    622c:	add	w0, w0, #0x1
    6230:	lsl	w2, w0, #1
    6234:	ldrsw	x0, [sp, #56]
    6238:	lsl	x0, x0, #2
    623c:	ldr	x1, [sp, #32]
    6240:	add	x0, x1, x0
    6244:	ldr	w1, [x0]
    6248:	ldrsw	x0, [sp, #56]
    624c:	lsl	x0, x0, #2
    6250:	ldr	x3, [sp, #32]
    6254:	add	x0, x3, x0
    6258:	sub	w1, w2, w1
    625c:	str	w1, [x0]
    6260:	ldr	w0, [sp, #56]
    6264:	add	w0, w0, #0x1
    6268:	str	w0, [sp, #56]
    626c:	ldr	w1, [sp, #56]
    6270:	ldr	w0, [sp, #8]
    6274:	cmp	w1, w0
    6278:	b.le	6214 <BZ2_hbCreateDecodeTables@@Base+0x278>
    627c:	nop
    6280:	nop
    6284:	add	sp, sp, #0x40
    6288:	ret

000000000000628c <BZ2_bsInitWrite@@Base>:
    628c:	sub	sp, sp, #0x10
    6290:	str	x0, [sp, #8]
    6294:	ldr	x0, [sp, #8]
    6298:	str	wzr, [x0, #644]
    629c:	ldr	x0, [sp, #8]
    62a0:	str	wzr, [x0, #640]
    62a4:	nop
    62a8:	add	sp, sp, #0x10
    62ac:	ret
    62b0:	sub	sp, sp, #0x10
    62b4:	str	x0, [sp, #8]
    62b8:	b	6324 <BZ2_bsInitWrite@@Base+0x98>
    62bc:	ldr	x0, [sp, #8]
    62c0:	ldr	w0, [x0, #640]
    62c4:	lsr	w2, w0, #24
    62c8:	ldr	x0, [sp, #8]
    62cc:	ldr	x1, [x0, #80]
    62d0:	ldr	x0, [sp, #8]
    62d4:	ldr	w0, [x0, #116]
    62d8:	sxtw	x0, w0
    62dc:	add	x0, x1, x0
    62e0:	and	w1, w2, #0xff
    62e4:	strb	w1, [x0]
    62e8:	ldr	x0, [sp, #8]
    62ec:	ldr	w0, [x0, #116]
    62f0:	add	w1, w0, #0x1
    62f4:	ldr	x0, [sp, #8]
    62f8:	str	w1, [x0, #116]
    62fc:	ldr	x0, [sp, #8]
    6300:	ldr	w0, [x0, #640]
    6304:	lsl	w1, w0, #8
    6308:	ldr	x0, [sp, #8]
    630c:	str	w1, [x0, #640]
    6310:	ldr	x0, [sp, #8]
    6314:	ldr	w0, [x0, #644]
    6318:	sub	w1, w0, #0x8
    631c:	ldr	x0, [sp, #8]
    6320:	str	w1, [x0, #644]
    6324:	ldr	x0, [sp, #8]
    6328:	ldr	w0, [x0, #644]
    632c:	cmp	w0, #0x0
    6330:	b.gt	62bc <BZ2_bsInitWrite@@Base+0x30>
    6334:	nop
    6338:	nop
    633c:	add	sp, sp, #0x10
    6340:	ret
    6344:	sub	sp, sp, #0x10
    6348:	str	x0, [sp, #8]
    634c:	str	w1, [sp, #4]
    6350:	str	w2, [sp]
    6354:	b	63c0 <BZ2_bsInitWrite@@Base+0x134>
    6358:	ldr	x0, [sp, #8]
    635c:	ldr	w0, [x0, #640]
    6360:	lsr	w2, w0, #24
    6364:	ldr	x0, [sp, #8]
    6368:	ldr	x1, [x0, #80]
    636c:	ldr	x0, [sp, #8]
    6370:	ldr	w0, [x0, #116]
    6374:	sxtw	x0, w0
    6378:	add	x0, x1, x0
    637c:	and	w1, w2, #0xff
    6380:	strb	w1, [x0]
    6384:	ldr	x0, [sp, #8]
    6388:	ldr	w0, [x0, #116]
    638c:	add	w1, w0, #0x1
    6390:	ldr	x0, [sp, #8]
    6394:	str	w1, [x0, #116]
    6398:	ldr	x0, [sp, #8]
    639c:	ldr	w0, [x0, #640]
    63a0:	lsl	w1, w0, #8
    63a4:	ldr	x0, [sp, #8]
    63a8:	str	w1, [x0, #640]
    63ac:	ldr	x0, [sp, #8]
    63b0:	ldr	w0, [x0, #644]
    63b4:	sub	w1, w0, #0x8
    63b8:	ldr	x0, [sp, #8]
    63bc:	str	w1, [x0, #644]
    63c0:	ldr	x0, [sp, #8]
    63c4:	ldr	w0, [x0, #644]
    63c8:	cmp	w0, #0x7
    63cc:	b.gt	6358 <BZ2_bsInitWrite@@Base+0xcc>
    63d0:	ldr	x0, [sp, #8]
    63d4:	ldr	w1, [x0, #640]
    63d8:	ldr	x0, [sp, #8]
    63dc:	ldr	w0, [x0, #644]
    63e0:	mov	w2, #0x20                  	// #32
    63e4:	sub	w2, w2, w0
    63e8:	ldr	w0, [sp, #4]
    63ec:	sub	w0, w2, w0
    63f0:	ldr	w2, [sp]
    63f4:	lsl	w0, w2, w0
    63f8:	orr	w1, w1, w0
    63fc:	ldr	x0, [sp, #8]
    6400:	str	w1, [x0, #640]
    6404:	ldr	x0, [sp, #8]
    6408:	ldr	w1, [x0, #644]
    640c:	ldr	w0, [sp, #4]
    6410:	add	w1, w1, w0
    6414:	ldr	x0, [sp, #8]
    6418:	str	w1, [x0, #644]
    641c:	nop
    6420:	add	sp, sp, #0x10
    6424:	ret
    6428:	stp	x29, x30, [sp, #-32]!
    642c:	mov	x29, sp
    6430:	str	x0, [sp, #24]
    6434:	str	w1, [sp, #20]
    6438:	ldr	w0, [sp, #20]
    643c:	lsr	w0, w0, #24
    6440:	mov	w2, w0
    6444:	mov	w1, #0x8                   	// #8
    6448:	ldr	x0, [sp, #24]
    644c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    6450:	ldr	w0, [sp, #20]
    6454:	lsr	w0, w0, #16
    6458:	and	w0, w0, #0xff
    645c:	mov	w2, w0
    6460:	mov	w1, #0x8                   	// #8
    6464:	ldr	x0, [sp, #24]
    6468:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    646c:	ldr	w0, [sp, #20]
    6470:	lsr	w0, w0, #8
    6474:	and	w0, w0, #0xff
    6478:	mov	w2, w0
    647c:	mov	w1, #0x8                   	// #8
    6480:	ldr	x0, [sp, #24]
    6484:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    6488:	ldr	w0, [sp, #20]
    648c:	and	w0, w0, #0xff
    6490:	mov	w2, w0
    6494:	mov	w1, #0x8                   	// #8
    6498:	ldr	x0, [sp, #24]
    649c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    64a0:	nop
    64a4:	ldp	x29, x30, [sp], #32
    64a8:	ret
    64ac:	stp	x29, x30, [sp, #-32]!
    64b0:	mov	x29, sp
    64b4:	str	x0, [sp, #24]
    64b8:	strb	w1, [sp, #23]
    64bc:	ldrb	w0, [sp, #23]
    64c0:	mov	w2, w0
    64c4:	mov	w1, #0x8                   	// #8
    64c8:	ldr	x0, [sp, #24]
    64cc:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    64d0:	nop
    64d4:	ldp	x29, x30, [sp], #32
    64d8:	ret
    64dc:	sub	sp, sp, #0x20
    64e0:	str	x0, [sp, #8]
    64e4:	ldr	x0, [sp, #8]
    64e8:	str	wzr, [x0, #124]
    64ec:	str	wzr, [sp, #28]
    64f0:	b	654c <BZ2_bsInitWrite@@Base+0x2c0>
    64f4:	ldr	x1, [sp, #8]
    64f8:	ldrsw	x0, [sp, #28]
    64fc:	add	x0, x1, x0
    6500:	ldrb	w0, [x0, #128]
    6504:	cmp	w0, #0x0
    6508:	b.eq	6540 <BZ2_bsInitWrite@@Base+0x2b4>  // b.none
    650c:	ldr	x0, [sp, #8]
    6510:	ldr	w0, [x0, #124]
    6514:	and	w2, w0, #0xff
    6518:	ldr	x1, [sp, #8]
    651c:	ldrsw	x0, [sp, #28]
    6520:	add	x0, x1, x0
    6524:	mov	w1, w2
    6528:	strb	w1, [x0, #384]
    652c:	ldr	x0, [sp, #8]
    6530:	ldr	w0, [x0, #124]
    6534:	add	w1, w0, #0x1
    6538:	ldr	x0, [sp, #8]
    653c:	str	w1, [x0, #124]
    6540:	ldr	w0, [sp, #28]
    6544:	add	w0, w0, #0x1
    6548:	str	w0, [sp, #28]
    654c:	ldr	w0, [sp, #28]
    6550:	cmp	w0, #0xff
    6554:	b.le	64f4 <BZ2_bsInitWrite@@Base+0x268>
    6558:	nop
    655c:	nop
    6560:	add	sp, sp, #0x20
    6564:	ret
    6568:	stp	x29, x30, [sp, #-368]!
    656c:	mov	x29, sp
    6570:	stp	x19, x20, [sp, #16]
    6574:	stp	x21, x22, [sp, #32]
    6578:	str	x0, [sp, #56]
    657c:	ldr	x0, [sp, #56]
    6580:	ldr	x0, [x0, #56]
    6584:	str	x0, [sp, #344]
    6588:	ldr	x0, [sp, #56]
    658c:	ldr	x0, [x0, #64]
    6590:	str	x0, [sp, #336]
    6594:	ldr	x0, [sp, #56]
    6598:	ldr	x0, [x0, #72]
    659c:	str	x0, [sp, #328]
    65a0:	ldr	x0, [sp, #56]
    65a4:	bl	64dc <BZ2_bsInitWrite@@Base+0x250>
    65a8:	ldr	x0, [sp, #56]
    65ac:	ldr	w0, [x0, #124]
    65b0:	add	w0, w0, #0x1
    65b4:	str	w0, [sp, #324]
    65b8:	str	wzr, [sp, #364]
    65bc:	b	65dc <BZ2_bsInitWrite@@Base+0x350>
    65c0:	ldr	x0, [sp, #56]
    65c4:	ldrsw	x1, [sp, #364]
    65c8:	add	x1, x1, #0xa8
    65cc:	str	wzr, [x0, x1, lsl #2]
    65d0:	ldr	w0, [sp, #364]
    65d4:	add	w0, w0, #0x1
    65d8:	str	w0, [sp, #364]
    65dc:	ldr	w1, [sp, #364]
    65e0:	ldr	w0, [sp, #324]
    65e4:	cmp	w1, w0
    65e8:	b.le	65c0 <BZ2_bsInitWrite@@Base+0x334>
    65ec:	str	wzr, [sp, #352]
    65f0:	str	wzr, [sp, #356]
    65f4:	str	wzr, [sp, #364]
    65f8:	b	661c <BZ2_bsInitWrite@@Base+0x390>
    65fc:	ldr	w0, [sp, #364]
    6600:	and	w2, w0, #0xff
    6604:	ldrsw	x0, [sp, #364]
    6608:	add	x1, sp, #0x40
    660c:	strb	w2, [x1, x0]
    6610:	ldr	w0, [sp, #364]
    6614:	add	w0, w0, #0x1
    6618:	str	w0, [sp, #364]
    661c:	ldr	x0, [sp, #56]
    6620:	ldr	w0, [x0, #124]
    6624:	ldr	w1, [sp, #364]
    6628:	cmp	w1, w0
    662c:	b.lt	65fc <BZ2_bsInitWrite@@Base+0x370>  // b.tstop
    6630:	str	wzr, [sp, #364]
    6634:	b	6834 <BZ2_bsInitWrite@@Base+0x5a8>
    6638:	ldrsw	x0, [sp, #364]
    663c:	lsl	x0, x0, #2
    6640:	ldr	x1, [sp, #344]
    6644:	add	x0, x1, x0
    6648:	ldr	w0, [x0]
    664c:	sub	w0, w0, #0x1
    6650:	str	w0, [sp, #360]
    6654:	ldr	w0, [sp, #360]
    6658:	cmp	w0, #0x0
    665c:	b.ge	6674 <BZ2_bsInitWrite@@Base+0x3e8>  // b.tcont
    6660:	ldr	x0, [sp, #56]
    6664:	ldr	w0, [x0, #108]
    6668:	ldr	w1, [sp, #360]
    666c:	add	w0, w1, w0
    6670:	str	w0, [sp, #360]
    6674:	ldrsw	x0, [sp, #360]
    6678:	ldr	x1, [sp, #336]
    667c:	add	x0, x1, x0
    6680:	ldrb	w0, [x0]
    6684:	ldr	x1, [sp, #56]
    6688:	sxtw	x0, w0
    668c:	add	x0, x1, x0
    6690:	ldrb	w0, [x0, #384]
    6694:	strb	w0, [sp, #323]
    6698:	ldrb	w0, [sp, #64]
    669c:	ldrb	w1, [sp, #323]
    66a0:	cmp	w1, w0
    66a4:	b.ne	66b8 <BZ2_bsInitWrite@@Base+0x42c>  // b.any
    66a8:	ldr	w0, [sp, #356]
    66ac:	add	w0, w0, #0x1
    66b0:	str	w0, [sp, #356]
    66b4:	b	6828 <BZ2_bsInitWrite@@Base+0x59c>
    66b8:	ldr	w0, [sp, #356]
    66bc:	cmp	w0, #0x0
    66c0:	b.le	6780 <BZ2_bsInitWrite@@Base+0x4f4>
    66c4:	ldr	w0, [sp, #356]
    66c8:	sub	w0, w0, #0x1
    66cc:	str	w0, [sp, #356]
    66d0:	ldr	w0, [sp, #356]
    66d4:	and	w0, w0, #0x1
    66d8:	cmp	w0, #0x0
    66dc:	b.eq	671c <BZ2_bsInitWrite@@Base+0x490>  // b.none
    66e0:	ldrsw	x0, [sp, #352]
    66e4:	lsl	x0, x0, #1
    66e8:	ldr	x1, [sp, #328]
    66ec:	add	x0, x1, x0
    66f0:	mov	w1, #0x1                   	// #1
    66f4:	strh	w1, [x0]
    66f8:	ldr	w0, [sp, #352]
    66fc:	add	w0, w0, #0x1
    6700:	str	w0, [sp, #352]
    6704:	ldr	x0, [sp, #56]
    6708:	ldr	w0, [x0, #676]
    670c:	add	w1, w0, #0x1
    6710:	ldr	x0, [sp, #56]
    6714:	str	w1, [x0, #676]
    6718:	b	6750 <BZ2_bsInitWrite@@Base+0x4c4>
    671c:	ldrsw	x0, [sp, #352]
    6720:	lsl	x0, x0, #1
    6724:	ldr	x1, [sp, #328]
    6728:	add	x0, x1, x0
    672c:	strh	wzr, [x0]
    6730:	ldr	w0, [sp, #352]
    6734:	add	w0, w0, #0x1
    6738:	str	w0, [sp, #352]
    673c:	ldr	x0, [sp, #56]
    6740:	ldr	w0, [x0, #672]
    6744:	add	w1, w0, #0x1
    6748:	ldr	x0, [sp, #56]
    674c:	str	w1, [x0, #672]
    6750:	ldr	w0, [sp, #356]
    6754:	cmp	w0, #0x1
    6758:	b.le	6778 <BZ2_bsInitWrite@@Base+0x4ec>
    675c:	ldr	w0, [sp, #356]
    6760:	sub	w0, w0, #0x2
    6764:	lsr	w1, w0, #31
    6768:	add	w0, w1, w0
    676c:	asr	w0, w0, #1
    6770:	str	w0, [sp, #356]
    6774:	b	66d0 <BZ2_bsInitWrite@@Base+0x444>
    6778:	nop
    677c:	str	wzr, [sp, #356]
    6780:	ldrb	w20, [sp, #65]
    6784:	ldrb	w0, [sp, #64]
    6788:	strb	w0, [sp, #65]
    678c:	add	x0, sp, #0x40
    6790:	add	x19, x0, #0x1
    6794:	ldrb	w21, [sp, #323]
    6798:	b	67b0 <BZ2_bsInitWrite@@Base+0x524>
    679c:	add	x19, x19, #0x1
    67a0:	mov	w22, w20
    67a4:	ldrb	w20, [x19]
    67a8:	mov	w0, w22
    67ac:	strb	w0, [x19]
    67b0:	cmp	w21, w20
    67b4:	b.ne	679c <BZ2_bsInitWrite@@Base+0x510>  // b.any
    67b8:	mov	w0, w20
    67bc:	strb	w0, [sp, #64]
    67c0:	add	x0, sp, #0x40
    67c4:	sub	x0, x19, x0
    67c8:	str	w0, [sp, #360]
    67cc:	ldr	w0, [sp, #360]
    67d0:	and	w1, w0, #0xffff
    67d4:	ldrsw	x0, [sp, #352]
    67d8:	lsl	x0, x0, #1
    67dc:	ldr	x2, [sp, #328]
    67e0:	add	x0, x2, x0
    67e4:	add	w1, w1, #0x1
    67e8:	and	w1, w1, #0xffff
    67ec:	strh	w1, [x0]
    67f0:	ldr	w0, [sp, #352]
    67f4:	add	w0, w0, #0x1
    67f8:	str	w0, [sp, #352]
    67fc:	ldr	w0, [sp, #360]
    6800:	add	w3, w0, #0x1
    6804:	ldr	x0, [sp, #56]
    6808:	sxtw	x1, w3
    680c:	add	x1, x1, #0xa8
    6810:	ldr	w0, [x0, x1, lsl #2]
    6814:	add	w2, w0, #0x1
    6818:	ldr	x0, [sp, #56]
    681c:	sxtw	x1, w3
    6820:	add	x1, x1, #0xa8
    6824:	str	w2, [x0, x1, lsl #2]
    6828:	ldr	w0, [sp, #364]
    682c:	add	w0, w0, #0x1
    6830:	str	w0, [sp, #364]
    6834:	ldr	x0, [sp, #56]
    6838:	ldr	w0, [x0, #108]
    683c:	ldr	w1, [sp, #364]
    6840:	cmp	w1, w0
    6844:	b.lt	6638 <BZ2_bsInitWrite@@Base+0x3ac>  // b.tstop
    6848:	ldr	w0, [sp, #356]
    684c:	cmp	w0, #0x0
    6850:	b.le	6910 <BZ2_bsInitWrite@@Base+0x684>
    6854:	ldr	w0, [sp, #356]
    6858:	sub	w0, w0, #0x1
    685c:	str	w0, [sp, #356]
    6860:	ldr	w0, [sp, #356]
    6864:	and	w0, w0, #0x1
    6868:	cmp	w0, #0x0
    686c:	b.eq	68ac <BZ2_bsInitWrite@@Base+0x620>  // b.none
    6870:	ldrsw	x0, [sp, #352]
    6874:	lsl	x0, x0, #1
    6878:	ldr	x1, [sp, #328]
    687c:	add	x0, x1, x0
    6880:	mov	w1, #0x1                   	// #1
    6884:	strh	w1, [x0]
    6888:	ldr	w0, [sp, #352]
    688c:	add	w0, w0, #0x1
    6890:	str	w0, [sp, #352]
    6894:	ldr	x0, [sp, #56]
    6898:	ldr	w0, [x0, #676]
    689c:	add	w1, w0, #0x1
    68a0:	ldr	x0, [sp, #56]
    68a4:	str	w1, [x0, #676]
    68a8:	b	68e0 <BZ2_bsInitWrite@@Base+0x654>
    68ac:	ldrsw	x0, [sp, #352]
    68b0:	lsl	x0, x0, #1
    68b4:	ldr	x1, [sp, #328]
    68b8:	add	x0, x1, x0
    68bc:	strh	wzr, [x0]
    68c0:	ldr	w0, [sp, #352]
    68c4:	add	w0, w0, #0x1
    68c8:	str	w0, [sp, #352]
    68cc:	ldr	x0, [sp, #56]
    68d0:	ldr	w0, [x0, #672]
    68d4:	add	w1, w0, #0x1
    68d8:	ldr	x0, [sp, #56]
    68dc:	str	w1, [x0, #672]
    68e0:	ldr	w0, [sp, #356]
    68e4:	cmp	w0, #0x1
    68e8:	b.le	6908 <BZ2_bsInitWrite@@Base+0x67c>
    68ec:	ldr	w0, [sp, #356]
    68f0:	sub	w0, w0, #0x2
    68f4:	lsr	w1, w0, #31
    68f8:	add	w0, w1, w0
    68fc:	asr	w0, w0, #1
    6900:	str	w0, [sp, #356]
    6904:	b	6860 <BZ2_bsInitWrite@@Base+0x5d4>
    6908:	nop
    690c:	str	wzr, [sp, #356]
    6910:	ldrsw	x0, [sp, #352]
    6914:	lsl	x0, x0, #1
    6918:	ldr	x1, [sp, #328]
    691c:	add	x0, x1, x0
    6920:	ldr	w1, [sp, #324]
    6924:	and	w1, w1, #0xffff
    6928:	strh	w1, [x0]
    692c:	ldr	w0, [sp, #352]
    6930:	add	w0, w0, #0x1
    6934:	str	w0, [sp, #352]
    6938:	ldr	x0, [sp, #56]
    693c:	ldrsw	x1, [sp, #324]
    6940:	add	x1, x1, #0xa8
    6944:	ldr	w0, [x0, x1, lsl #2]
    6948:	add	w2, w0, #0x1
    694c:	ldr	x0, [sp, #56]
    6950:	ldrsw	x1, [sp, #324]
    6954:	add	x1, x1, #0xa8
    6958:	str	w2, [x0, x1, lsl #2]
    695c:	ldr	x0, [sp, #56]
    6960:	ldr	w1, [sp, #352]
    6964:	str	w1, [x0, #668]
    6968:	nop
    696c:	ldp	x19, x20, [sp, #16]
    6970:	ldp	x21, x22, [sp, #32]
    6974:	ldp	x29, x30, [sp], #368
    6978:	ret
    697c:	stp	x29, x30, [sp, #-256]!
    6980:	mov	x29, sp
    6984:	stp	x19, x20, [sp, #16]
    6988:	stp	x21, x22, [sp, #32]
    698c:	str	x0, [sp, #56]
    6990:	ldr	x0, [sp, #56]
    6994:	ldr	x0, [x0, #72]
    6998:	str	x0, [sp, #168]
    699c:	ldr	x0, [sp, #56]
    69a0:	ldr	w0, [x0, #656]
    69a4:	cmp	w0, #0x2
    69a8:	b.le	69ec <BZ2_bsInitWrite@@Base+0x760>
    69ac:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    69b0:	ldr	x0, [x0, #4016]
    69b4:	ldr	x5, [x0]
    69b8:	ldr	x0, [sp, #56]
    69bc:	ldr	w1, [x0, #108]
    69c0:	ldr	x0, [sp, #56]
    69c4:	ldr	w2, [x0, #668]
    69c8:	ldr	x0, [sp, #56]
    69cc:	ldr	w0, [x0, #124]
    69d0:	mov	w4, w0
    69d4:	mov	w3, w2
    69d8:	mov	w2, w1
    69dc:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    69e0:	add	x1, x0, #0x48
    69e4:	mov	x0, x5
    69e8:	bl	1730 <fprintf@plt>
    69ec:	ldr	x0, [sp, #56]
    69f0:	ldr	w0, [x0, #124]
    69f4:	add	w0, w0, #0x2
    69f8:	str	w0, [sp, #164]
    69fc:	str	wzr, [sp, #248]
    6a00:	b	6a64 <BZ2_bsInitWrite@@Base+0x7d8>
    6a04:	str	wzr, [sp, #252]
    6a08:	b	6a48 <BZ2_bsInitWrite@@Base+0x7bc>
    6a0c:	ldr	x3, [sp, #56]
    6a10:	ldrsw	x2, [sp, #252]
    6a14:	ldrsw	x1, [sp, #248]
    6a18:	mov	x0, x1
    6a1c:	lsl	x0, x0, #7
    6a20:	add	x0, x0, x1
    6a24:	lsl	x0, x0, #1
    6a28:	add	x0, x3, x0
    6a2c:	add	x0, x0, x2
    6a30:	add	x0, x0, #0x9, lsl #12
    6a34:	mov	w1, #0xf                   	// #15
    6a38:	strb	w1, [x0, #844]
    6a3c:	ldr	w0, [sp, #252]
    6a40:	add	w0, w0, #0x1
    6a44:	str	w0, [sp, #252]
    6a48:	ldr	w1, [sp, #252]
    6a4c:	ldr	w0, [sp, #164]
    6a50:	cmp	w1, w0
    6a54:	b.lt	6a0c <BZ2_bsInitWrite@@Base+0x780>  // b.tstop
    6a58:	ldr	w0, [sp, #248]
    6a5c:	add	w0, w0, #0x1
    6a60:	str	w0, [sp, #248]
    6a64:	ldr	w0, [sp, #248]
    6a68:	cmp	w0, #0x5
    6a6c:	b.le	6a04 <BZ2_bsInitWrite@@Base+0x778>
    6a70:	ldr	x0, [sp, #56]
    6a74:	ldr	w0, [x0, #668]
    6a78:	cmp	w0, #0x0
    6a7c:	b.gt	6a88 <BZ2_bsInitWrite@@Base+0x7fc>
    6a80:	mov	w0, #0xbb9                 	// #3001
    6a84:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    6a88:	ldr	x0, [sp, #56]
    6a8c:	ldr	w0, [x0, #668]
    6a90:	cmp	w0, #0xc7
    6a94:	b.gt	6aa4 <BZ2_bsInitWrite@@Base+0x818>
    6a98:	mov	w0, #0x2                   	// #2
    6a9c:	str	w0, [sp, #196]
    6aa0:	b	6b00 <BZ2_bsInitWrite@@Base+0x874>
    6aa4:	ldr	x0, [sp, #56]
    6aa8:	ldr	w0, [x0, #668]
    6aac:	cmp	w0, #0x257
    6ab0:	b.gt	6ac0 <BZ2_bsInitWrite@@Base+0x834>
    6ab4:	mov	w0, #0x3                   	// #3
    6ab8:	str	w0, [sp, #196]
    6abc:	b	6b00 <BZ2_bsInitWrite@@Base+0x874>
    6ac0:	ldr	x0, [sp, #56]
    6ac4:	ldr	w0, [x0, #668]
    6ac8:	cmp	w0, #0x4af
    6acc:	b.gt	6adc <BZ2_bsInitWrite@@Base+0x850>
    6ad0:	mov	w0, #0x4                   	// #4
    6ad4:	str	w0, [sp, #196]
    6ad8:	b	6b00 <BZ2_bsInitWrite@@Base+0x874>
    6adc:	ldr	x0, [sp, #56]
    6ae0:	ldr	w0, [x0, #668]
    6ae4:	cmp	w0, #0x95f
    6ae8:	b.gt	6af8 <BZ2_bsInitWrite@@Base+0x86c>
    6aec:	mov	w0, #0x5                   	// #5
    6af0:	str	w0, [sp, #196]
    6af4:	b	6b00 <BZ2_bsInitWrite@@Base+0x874>
    6af8:	mov	w0, #0x6                   	// #6
    6afc:	str	w0, [sp, #196]
    6b00:	ldr	w0, [sp, #196]
    6b04:	str	w0, [sp, #192]
    6b08:	ldr	x0, [sp, #56]
    6b0c:	ldr	w0, [x0, #668]
    6b10:	str	w0, [sp, #188]
    6b14:	str	wzr, [sp, #236]
    6b18:	b	6d44 <BZ2_bsInitWrite@@Base+0xab8>
    6b1c:	ldr	w1, [sp, #188]
    6b20:	ldr	w0, [sp, #192]
    6b24:	sdiv	w0, w1, w0
    6b28:	str	w0, [sp, #132]
    6b2c:	ldr	w0, [sp, #236]
    6b30:	sub	w0, w0, #0x1
    6b34:	str	w0, [sp, #232]
    6b38:	str	wzr, [sp, #184]
    6b3c:	b	6b68 <BZ2_bsInitWrite@@Base+0x8dc>
    6b40:	ldr	w0, [sp, #232]
    6b44:	add	w0, w0, #0x1
    6b48:	str	w0, [sp, #232]
    6b4c:	ldr	x0, [sp, #56]
    6b50:	ldrsw	x1, [sp, #232]
    6b54:	add	x1, x1, #0xa8
    6b58:	ldr	w0, [x0, x1, lsl #2]
    6b5c:	ldr	w1, [sp, #184]
    6b60:	add	w0, w1, w0
    6b64:	str	w0, [sp, #184]
    6b68:	ldr	w1, [sp, #184]
    6b6c:	ldr	w0, [sp, #132]
    6b70:	cmp	w1, w0
    6b74:	b.ge	6b8c <BZ2_bsInitWrite@@Base+0x900>  // b.tcont
    6b78:	ldr	w0, [sp, #164]
    6b7c:	sub	w0, w0, #0x1
    6b80:	ldr	w1, [sp, #232]
    6b84:	cmp	w1, w0
    6b88:	b.lt	6b40 <BZ2_bsInitWrite@@Base+0x8b4>  // b.tstop
    6b8c:	ldr	w1, [sp, #232]
    6b90:	ldr	w0, [sp, #236]
    6b94:	cmp	w1, w0
    6b98:	b.le	6c00 <BZ2_bsInitWrite@@Base+0x974>
    6b9c:	ldr	w1, [sp, #192]
    6ba0:	ldr	w0, [sp, #196]
    6ba4:	cmp	w1, w0
    6ba8:	b.eq	6c00 <BZ2_bsInitWrite@@Base+0x974>  // b.none
    6bac:	ldr	w0, [sp, #192]
    6bb0:	cmp	w0, #0x1
    6bb4:	b.eq	6c00 <BZ2_bsInitWrite@@Base+0x974>  // b.none
    6bb8:	ldr	w1, [sp, #196]
    6bbc:	ldr	w0, [sp, #192]
    6bc0:	sub	w0, w1, w0
    6bc4:	cmp	w0, #0x0
    6bc8:	and	w0, w0, #0x1
    6bcc:	cneg	w0, w0, lt  // lt = tstop
    6bd0:	cmp	w0, #0x1
    6bd4:	b.ne	6c00 <BZ2_bsInitWrite@@Base+0x974>  // b.any
    6bd8:	ldr	x0, [sp, #56]
    6bdc:	ldrsw	x1, [sp, #232]
    6be0:	add	x1, x1, #0xa8
    6be4:	ldr	w0, [x0, x1, lsl #2]
    6be8:	ldr	w1, [sp, #184]
    6bec:	sub	w0, w1, w0
    6bf0:	str	w0, [sp, #184]
    6bf4:	ldr	w0, [sp, #232]
    6bf8:	sub	w0, w0, #0x1
    6bfc:	str	w0, [sp, #232]
    6c00:	ldr	x0, [sp, #56]
    6c04:	ldr	w0, [x0, #656]
    6c08:	cmp	w0, #0x2
    6c0c:	b.le	6c68 <BZ2_bsInitWrite@@Base+0x9dc>
    6c10:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    6c14:	ldr	x0, [x0, #4016]
    6c18:	ldr	x6, [x0]
    6c1c:	ldr	s0, [sp, #184]
    6c20:	scvtf	s0, s0
    6c24:	fcvt	d0, s0
    6c28:	mov	x0, #0x4059000000000000    	// #4636737291354636288
    6c2c:	fmov	d1, x0
    6c30:	fmul	d1, d0, d1
    6c34:	ldr	x0, [sp, #56]
    6c38:	ldr	s0, [x0, #668]
    6c3c:	scvtf	s0, s0
    6c40:	fcvt	d0, s0
    6c44:	fdiv	d0, d1, d0
    6c48:	ldr	w5, [sp, #184]
    6c4c:	ldr	w4, [sp, #232]
    6c50:	ldr	w3, [sp, #236]
    6c54:	ldr	w2, [sp, #192]
    6c58:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    6c5c:	add	x1, x0, #0x88
    6c60:	mov	x0, x6
    6c64:	bl	1730 <fprintf@plt>
    6c68:	str	wzr, [sp, #252]
    6c6c:	b	6d0c <BZ2_bsInitWrite@@Base+0xa80>
    6c70:	ldr	w1, [sp, #252]
    6c74:	ldr	w0, [sp, #236]
    6c78:	cmp	w1, w0
    6c7c:	b.lt	6cc8 <BZ2_bsInitWrite@@Base+0xa3c>  // b.tstop
    6c80:	ldr	w1, [sp, #252]
    6c84:	ldr	w0, [sp, #232]
    6c88:	cmp	w1, w0
    6c8c:	b.gt	6cc8 <BZ2_bsInitWrite@@Base+0xa3c>
    6c90:	ldr	w0, [sp, #192]
    6c94:	sub	w0, w0, #0x1
    6c98:	ldr	x3, [sp, #56]
    6c9c:	ldrsw	x2, [sp, #252]
    6ca0:	sxtw	x1, w0
    6ca4:	mov	x0, x1
    6ca8:	lsl	x0, x0, #7
    6cac:	add	x0, x0, x1
    6cb0:	lsl	x0, x0, #1
    6cb4:	add	x0, x3, x0
    6cb8:	add	x0, x0, x2
    6cbc:	add	x0, x0, #0x9, lsl #12
    6cc0:	strb	wzr, [x0, #844]
    6cc4:	b	6d00 <BZ2_bsInitWrite@@Base+0xa74>
    6cc8:	ldr	w0, [sp, #192]
    6ccc:	sub	w0, w0, #0x1
    6cd0:	ldr	x3, [sp, #56]
    6cd4:	ldrsw	x2, [sp, #252]
    6cd8:	sxtw	x1, w0
    6cdc:	mov	x0, x1
    6ce0:	lsl	x0, x0, #7
    6ce4:	add	x0, x0, x1
    6ce8:	lsl	x0, x0, #1
    6cec:	add	x0, x3, x0
    6cf0:	add	x0, x0, x2
    6cf4:	add	x0, x0, #0x9, lsl #12
    6cf8:	mov	w1, #0xf                   	// #15
    6cfc:	strb	w1, [x0, #844]
    6d00:	ldr	w0, [sp, #252]
    6d04:	add	w0, w0, #0x1
    6d08:	str	w0, [sp, #252]
    6d0c:	ldr	w1, [sp, #252]
    6d10:	ldr	w0, [sp, #164]
    6d14:	cmp	w1, w0
    6d18:	b.lt	6c70 <BZ2_bsInitWrite@@Base+0x9e4>  // b.tstop
    6d1c:	ldr	w0, [sp, #192]
    6d20:	sub	w0, w0, #0x1
    6d24:	str	w0, [sp, #192]
    6d28:	ldr	w0, [sp, #232]
    6d2c:	add	w0, w0, #0x1
    6d30:	str	w0, [sp, #236]
    6d34:	ldr	w1, [sp, #188]
    6d38:	ldr	w0, [sp, #184]
    6d3c:	sub	w0, w1, w0
    6d40:	str	w0, [sp, #188]
    6d44:	ldr	w0, [sp, #192]
    6d48:	cmp	w0, #0x0
    6d4c:	b.gt	6b1c <BZ2_bsInitWrite@@Base+0x890>
    6d50:	str	wzr, [sp, #216]
    6d54:	b	a5c4 <BZ2_bsInitWrite@@Base+0x4338>
    6d58:	str	wzr, [sp, #248]
    6d5c:	b	6d7c <BZ2_bsInitWrite@@Base+0xaf0>
    6d60:	ldrsw	x0, [sp, #248]
    6d64:	lsl	x0, x0, #2
    6d68:	add	x1, sp, #0x60
    6d6c:	str	wzr, [x1, x0]
    6d70:	ldr	w0, [sp, #248]
    6d74:	add	w0, w0, #0x1
    6d78:	str	w0, [sp, #248]
    6d7c:	ldr	w1, [sp, #248]
    6d80:	ldr	w0, [sp, #196]
    6d84:	cmp	w1, w0
    6d88:	b.lt	6d60 <BZ2_bsInitWrite@@Base+0xad4>  // b.tstop
    6d8c:	str	wzr, [sp, #248]
    6d90:	b	6df8 <BZ2_bsInitWrite@@Base+0xb6c>
    6d94:	str	wzr, [sp, #252]
    6d98:	b	6ddc <BZ2_bsInitWrite@@Base+0xb50>
    6d9c:	ldr	x2, [sp, #56]
    6da0:	ldrsw	x3, [sp, #252]
    6da4:	ldrsw	x1, [sp, #248]
    6da8:	mov	x0, x1
    6dac:	lsl	x0, x0, #7
    6db0:	add	x0, x0, x1
    6db4:	lsl	x0, x0, #1
    6db8:	add	x1, x0, x3
    6dbc:	mov	x0, #0x2c60                	// #11360
    6dc0:	add	x0, x1, x0
    6dc4:	lsl	x0, x0, #2
    6dc8:	add	x0, x2, x0
    6dcc:	str	wzr, [x0, #8]
    6dd0:	ldr	w0, [sp, #252]
    6dd4:	add	w0, w0, #0x1
    6dd8:	str	w0, [sp, #252]
    6ddc:	ldr	w1, [sp, #252]
    6de0:	ldr	w0, [sp, #164]
    6de4:	cmp	w1, w0
    6de8:	b.lt	6d9c <BZ2_bsInitWrite@@Base+0xb10>  // b.tstop
    6dec:	ldr	w0, [sp, #248]
    6df0:	add	w0, w0, #0x1
    6df4:	str	w0, [sp, #248]
    6df8:	ldr	w1, [sp, #248]
    6dfc:	ldr	w0, [sp, #196]
    6e00:	cmp	w1, w0
    6e04:	b.lt	6d94 <BZ2_bsInitWrite@@Base+0xb08>  // b.tstop
    6e08:	ldr	w0, [sp, #196]
    6e0c:	cmp	w0, #0x6
    6e10:	b.ne	6f1c <BZ2_bsInitWrite@@Base+0xc90>  // b.any
    6e14:	str	wzr, [sp, #252]
    6e18:	b	6f0c <BZ2_bsInitWrite@@Base+0xc80>
    6e1c:	ldr	x1, [sp, #56]
    6e20:	ldrsw	x0, [sp, #252]
    6e24:	add	x0, x1, x0
    6e28:	add	x0, x0, #0x9, lsl #12
    6e2c:	ldrb	w0, [x0, #1102]
    6e30:	lsl	w0, w0, #16
    6e34:	ldr	x2, [sp, #56]
    6e38:	ldrsw	x1, [sp, #252]
    6e3c:	add	x1, x2, x1
    6e40:	add	x1, x1, #0x9, lsl #12
    6e44:	ldrb	w1, [x1, #844]
    6e48:	orr	w0, w0, w1
    6e4c:	mov	w2, w0
    6e50:	ldr	x1, [sp, #56]
    6e54:	ldrsw	x0, [sp, #252]
    6e58:	add	x0, x0, #0xc9b
    6e5c:	lsl	x0, x0, #4
    6e60:	add	x0, x1, x0
    6e64:	str	w2, [x0, #8]
    6e68:	ldr	x1, [sp, #56]
    6e6c:	ldrsw	x0, [sp, #252]
    6e70:	add	x0, x1, x0
    6e74:	add	x0, x0, #0x9, lsl #12
    6e78:	ldrb	w0, [x0, #1618]
    6e7c:	lsl	w0, w0, #16
    6e80:	ldr	x2, [sp, #56]
    6e84:	ldrsw	x1, [sp, #252]
    6e88:	add	x1, x2, x1
    6e8c:	add	x1, x1, #0x9, lsl #12
    6e90:	ldrb	w1, [x1, #1360]
    6e94:	orr	w0, w0, w1
    6e98:	mov	w2, w0
    6e9c:	ldr	x1, [sp, #56]
    6ea0:	ldrsw	x0, [sp, #252]
    6ea4:	lsl	x0, x0, #4
    6ea8:	add	x0, x1, x0
    6eac:	add	x0, x0, #0xc, lsl #12
    6eb0:	str	w2, [x0, #2492]
    6eb4:	ldr	x1, [sp, #56]
    6eb8:	ldrsw	x0, [sp, #252]
    6ebc:	add	x0, x1, x0
    6ec0:	add	x0, x0, #0x9, lsl #12
    6ec4:	ldrb	w0, [x0, #2134]
    6ec8:	lsl	w0, w0, #16
    6ecc:	ldr	x2, [sp, #56]
    6ed0:	ldrsw	x1, [sp, #252]
    6ed4:	add	x1, x2, x1
    6ed8:	add	x1, x1, #0x9, lsl #12
    6edc:	ldrb	w1, [x1, #1876]
    6ee0:	orr	w0, w0, w1
    6ee4:	mov	w2, w0
    6ee8:	ldr	x1, [sp, #56]
    6eec:	ldrsw	x0, [sp, #252]
    6ef0:	lsl	x0, x0, #4
    6ef4:	add	x0, x1, x0
    6ef8:	add	x0, x0, #0xc, lsl #12
    6efc:	str	w2, [x0, #2496]
    6f00:	ldr	w0, [sp, #252]
    6f04:	add	w0, w0, #0x1
    6f08:	str	w0, [sp, #252]
    6f0c:	ldr	w1, [sp, #252]
    6f10:	ldr	w0, [sp, #164]
    6f14:	cmp	w1, w0
    6f18:	b.lt	6e1c <BZ2_bsInitWrite@@Base+0xb90>  // b.tstop
    6f1c:	str	wzr, [sp, #212]
    6f20:	str	wzr, [sp, #228]
    6f24:	str	wzr, [sp, #236]
    6f28:	ldr	x0, [sp, #56]
    6f2c:	ldr	w0, [x0, #668]
    6f30:	ldr	w1, [sp, #236]
    6f34:	cmp	w1, w0
    6f38:	b.ge	a474 <BZ2_bsInitWrite@@Base+0x41e8>  // b.tcont
    6f3c:	ldr	w0, [sp, #236]
    6f40:	add	w0, w0, #0x31
    6f44:	str	w0, [sp, #232]
    6f48:	ldr	x0, [sp, #56]
    6f4c:	ldr	w0, [x0, #668]
    6f50:	ldr	w1, [sp, #232]
    6f54:	cmp	w1, w0
    6f58:	b.lt	6f6c <BZ2_bsInitWrite@@Base+0xce0>  // b.tstop
    6f5c:	ldr	x0, [sp, #56]
    6f60:	ldr	w0, [x0, #668]
    6f64:	sub	w0, w0, #0x1
    6f68:	str	w0, [sp, #232]
    6f6c:	str	wzr, [sp, #248]
    6f70:	b	6f90 <BZ2_bsInitWrite@@Base+0xd04>
    6f74:	ldrsw	x0, [sp, #248]
    6f78:	lsl	x0, x0, #1
    6f7c:	add	x1, sp, #0x78
    6f80:	strh	wzr, [x1, x0]
    6f84:	ldr	w0, [sp, #248]
    6f88:	add	w0, w0, #0x1
    6f8c:	str	w0, [sp, #248]
    6f90:	ldr	w1, [sp, #248]
    6f94:	ldr	w0, [sp, #196]
    6f98:	cmp	w1, w0
    6f9c:	b.lt	6f74 <BZ2_bsInitWrite@@Base+0xce8>  // b.tstop
    6fa0:	ldr	w0, [sp, #196]
    6fa4:	cmp	w0, #0x6
    6fa8:	b.ne	8778 <BZ2_bsInitWrite@@Base+0x24ec>  // b.any
    6fac:	ldr	w1, [sp, #232]
    6fb0:	ldr	w0, [sp, #236]
    6fb4:	sub	w0, w1, w0
    6fb8:	cmp	w0, #0x31
    6fbc:	b.ne	8778 <BZ2_bsInitWrite@@Base+0x24ec>  // b.any
    6fc0:	mov	w19, #0x0                   	// #0
    6fc4:	mov	w20, w19
    6fc8:	mov	w21, w20
    6fcc:	ldrsw	x0, [sp, #236]
    6fd0:	lsl	x0, x0, #1
    6fd4:	ldr	x1, [sp, #168]
    6fd8:	add	x0, x1, x0
    6fdc:	ldrh	w22, [x0]
    6fe0:	mov	w0, w22
    6fe4:	ldr	x1, [sp, #56]
    6fe8:	sxtw	x0, w0
    6fec:	add	x0, x0, #0xc9b
    6ff0:	lsl	x0, x0, #4
    6ff4:	add	x0, x1, x0
    6ff8:	ldr	w0, [x0, #8]
    6ffc:	add	w21, w21, w0
    7000:	mov	w0, w22
    7004:	ldr	x1, [sp, #56]
    7008:	sxtw	x0, w0
    700c:	lsl	x0, x0, #4
    7010:	add	x0, x1, x0
    7014:	add	x0, x0, #0xc, lsl #12
    7018:	ldr	w0, [x0, #2492]
    701c:	add	w20, w20, w0
    7020:	mov	w0, w22
    7024:	ldr	x1, [sp, #56]
    7028:	sxtw	x0, w0
    702c:	lsl	x0, x0, #4
    7030:	add	x0, x1, x0
    7034:	add	x0, x0, #0xc, lsl #12
    7038:	ldr	w0, [x0, #2496]
    703c:	add	w19, w19, w0
    7040:	ldrsw	x0, [sp, #236]
    7044:	add	x0, x0, #0x1
    7048:	lsl	x0, x0, #1
    704c:	ldr	x1, [sp, #168]
    7050:	add	x0, x1, x0
    7054:	ldrh	w22, [x0]
    7058:	mov	w0, w22
    705c:	ldr	x1, [sp, #56]
    7060:	sxtw	x0, w0
    7064:	add	x0, x0, #0xc9b
    7068:	lsl	x0, x0, #4
    706c:	add	x0, x1, x0
    7070:	ldr	w0, [x0, #8]
    7074:	add	w21, w21, w0
    7078:	mov	w0, w22
    707c:	ldr	x1, [sp, #56]
    7080:	sxtw	x0, w0
    7084:	lsl	x0, x0, #4
    7088:	add	x0, x1, x0
    708c:	add	x0, x0, #0xc, lsl #12
    7090:	ldr	w0, [x0, #2492]
    7094:	add	w20, w20, w0
    7098:	mov	w0, w22
    709c:	ldr	x1, [sp, #56]
    70a0:	sxtw	x0, w0
    70a4:	lsl	x0, x0, #4
    70a8:	add	x0, x1, x0
    70ac:	add	x0, x0, #0xc, lsl #12
    70b0:	ldr	w0, [x0, #2496]
    70b4:	add	w19, w19, w0
    70b8:	ldrsw	x0, [sp, #236]
    70bc:	add	x0, x0, #0x2
    70c0:	lsl	x0, x0, #1
    70c4:	ldr	x1, [sp, #168]
    70c8:	add	x0, x1, x0
    70cc:	ldrh	w22, [x0]
    70d0:	mov	w0, w22
    70d4:	ldr	x1, [sp, #56]
    70d8:	sxtw	x0, w0
    70dc:	add	x0, x0, #0xc9b
    70e0:	lsl	x0, x0, #4
    70e4:	add	x0, x1, x0
    70e8:	ldr	w0, [x0, #8]
    70ec:	add	w21, w21, w0
    70f0:	mov	w0, w22
    70f4:	ldr	x1, [sp, #56]
    70f8:	sxtw	x0, w0
    70fc:	lsl	x0, x0, #4
    7100:	add	x0, x1, x0
    7104:	add	x0, x0, #0xc, lsl #12
    7108:	ldr	w0, [x0, #2492]
    710c:	add	w20, w20, w0
    7110:	mov	w0, w22
    7114:	ldr	x1, [sp, #56]
    7118:	sxtw	x0, w0
    711c:	lsl	x0, x0, #4
    7120:	add	x0, x1, x0
    7124:	add	x0, x0, #0xc, lsl #12
    7128:	ldr	w0, [x0, #2496]
    712c:	add	w19, w19, w0
    7130:	ldrsw	x0, [sp, #236]
    7134:	add	x0, x0, #0x3
    7138:	lsl	x0, x0, #1
    713c:	ldr	x1, [sp, #168]
    7140:	add	x0, x1, x0
    7144:	ldrh	w22, [x0]
    7148:	mov	w0, w22
    714c:	ldr	x1, [sp, #56]
    7150:	sxtw	x0, w0
    7154:	add	x0, x0, #0xc9b
    7158:	lsl	x0, x0, #4
    715c:	add	x0, x1, x0
    7160:	ldr	w0, [x0, #8]
    7164:	add	w21, w21, w0
    7168:	mov	w0, w22
    716c:	ldr	x1, [sp, #56]
    7170:	sxtw	x0, w0
    7174:	lsl	x0, x0, #4
    7178:	add	x0, x1, x0
    717c:	add	x0, x0, #0xc, lsl #12
    7180:	ldr	w0, [x0, #2492]
    7184:	add	w20, w20, w0
    7188:	mov	w0, w22
    718c:	ldr	x1, [sp, #56]
    7190:	sxtw	x0, w0
    7194:	lsl	x0, x0, #4
    7198:	add	x0, x1, x0
    719c:	add	x0, x0, #0xc, lsl #12
    71a0:	ldr	w0, [x0, #2496]
    71a4:	add	w19, w19, w0
    71a8:	ldrsw	x0, [sp, #236]
    71ac:	add	x0, x0, #0x4
    71b0:	lsl	x0, x0, #1
    71b4:	ldr	x1, [sp, #168]
    71b8:	add	x0, x1, x0
    71bc:	ldrh	w22, [x0]
    71c0:	mov	w0, w22
    71c4:	ldr	x1, [sp, #56]
    71c8:	sxtw	x0, w0
    71cc:	add	x0, x0, #0xc9b
    71d0:	lsl	x0, x0, #4
    71d4:	add	x0, x1, x0
    71d8:	ldr	w0, [x0, #8]
    71dc:	add	w21, w21, w0
    71e0:	mov	w0, w22
    71e4:	ldr	x1, [sp, #56]
    71e8:	sxtw	x0, w0
    71ec:	lsl	x0, x0, #4
    71f0:	add	x0, x1, x0
    71f4:	add	x0, x0, #0xc, lsl #12
    71f8:	ldr	w0, [x0, #2492]
    71fc:	add	w20, w20, w0
    7200:	mov	w0, w22
    7204:	ldr	x1, [sp, #56]
    7208:	sxtw	x0, w0
    720c:	lsl	x0, x0, #4
    7210:	add	x0, x1, x0
    7214:	add	x0, x0, #0xc, lsl #12
    7218:	ldr	w0, [x0, #2496]
    721c:	add	w19, w19, w0
    7220:	ldrsw	x0, [sp, #236]
    7224:	add	x0, x0, #0x5
    7228:	lsl	x0, x0, #1
    722c:	ldr	x1, [sp, #168]
    7230:	add	x0, x1, x0
    7234:	ldrh	w22, [x0]
    7238:	mov	w0, w22
    723c:	ldr	x1, [sp, #56]
    7240:	sxtw	x0, w0
    7244:	add	x0, x0, #0xc9b
    7248:	lsl	x0, x0, #4
    724c:	add	x0, x1, x0
    7250:	ldr	w0, [x0, #8]
    7254:	add	w21, w21, w0
    7258:	mov	w0, w22
    725c:	ldr	x1, [sp, #56]
    7260:	sxtw	x0, w0
    7264:	lsl	x0, x0, #4
    7268:	add	x0, x1, x0
    726c:	add	x0, x0, #0xc, lsl #12
    7270:	ldr	w0, [x0, #2492]
    7274:	add	w20, w20, w0
    7278:	mov	w0, w22
    727c:	ldr	x1, [sp, #56]
    7280:	sxtw	x0, w0
    7284:	lsl	x0, x0, #4
    7288:	add	x0, x1, x0
    728c:	add	x0, x0, #0xc, lsl #12
    7290:	ldr	w0, [x0, #2496]
    7294:	add	w19, w19, w0
    7298:	ldrsw	x0, [sp, #236]
    729c:	add	x0, x0, #0x6
    72a0:	lsl	x0, x0, #1
    72a4:	ldr	x1, [sp, #168]
    72a8:	add	x0, x1, x0
    72ac:	ldrh	w22, [x0]
    72b0:	mov	w0, w22
    72b4:	ldr	x1, [sp, #56]
    72b8:	sxtw	x0, w0
    72bc:	add	x0, x0, #0xc9b
    72c0:	lsl	x0, x0, #4
    72c4:	add	x0, x1, x0
    72c8:	ldr	w0, [x0, #8]
    72cc:	add	w21, w21, w0
    72d0:	mov	w0, w22
    72d4:	ldr	x1, [sp, #56]
    72d8:	sxtw	x0, w0
    72dc:	lsl	x0, x0, #4
    72e0:	add	x0, x1, x0
    72e4:	add	x0, x0, #0xc, lsl #12
    72e8:	ldr	w0, [x0, #2492]
    72ec:	add	w20, w20, w0
    72f0:	mov	w0, w22
    72f4:	ldr	x1, [sp, #56]
    72f8:	sxtw	x0, w0
    72fc:	lsl	x0, x0, #4
    7300:	add	x0, x1, x0
    7304:	add	x0, x0, #0xc, lsl #12
    7308:	ldr	w0, [x0, #2496]
    730c:	add	w19, w19, w0
    7310:	ldrsw	x0, [sp, #236]
    7314:	add	x0, x0, #0x7
    7318:	lsl	x0, x0, #1
    731c:	ldr	x1, [sp, #168]
    7320:	add	x0, x1, x0
    7324:	ldrh	w22, [x0]
    7328:	mov	w0, w22
    732c:	ldr	x1, [sp, #56]
    7330:	sxtw	x0, w0
    7334:	add	x0, x0, #0xc9b
    7338:	lsl	x0, x0, #4
    733c:	add	x0, x1, x0
    7340:	ldr	w0, [x0, #8]
    7344:	add	w21, w21, w0
    7348:	mov	w0, w22
    734c:	ldr	x1, [sp, #56]
    7350:	sxtw	x0, w0
    7354:	lsl	x0, x0, #4
    7358:	add	x0, x1, x0
    735c:	add	x0, x0, #0xc, lsl #12
    7360:	ldr	w0, [x0, #2492]
    7364:	add	w20, w20, w0
    7368:	mov	w0, w22
    736c:	ldr	x1, [sp, #56]
    7370:	sxtw	x0, w0
    7374:	lsl	x0, x0, #4
    7378:	add	x0, x1, x0
    737c:	add	x0, x0, #0xc, lsl #12
    7380:	ldr	w0, [x0, #2496]
    7384:	add	w19, w19, w0
    7388:	ldrsw	x0, [sp, #236]
    738c:	add	x0, x0, #0x8
    7390:	lsl	x0, x0, #1
    7394:	ldr	x1, [sp, #168]
    7398:	add	x0, x1, x0
    739c:	ldrh	w22, [x0]
    73a0:	mov	w0, w22
    73a4:	ldr	x1, [sp, #56]
    73a8:	sxtw	x0, w0
    73ac:	add	x0, x0, #0xc9b
    73b0:	lsl	x0, x0, #4
    73b4:	add	x0, x1, x0
    73b8:	ldr	w0, [x0, #8]
    73bc:	add	w21, w21, w0
    73c0:	mov	w0, w22
    73c4:	ldr	x1, [sp, #56]
    73c8:	sxtw	x0, w0
    73cc:	lsl	x0, x0, #4
    73d0:	add	x0, x1, x0
    73d4:	add	x0, x0, #0xc, lsl #12
    73d8:	ldr	w0, [x0, #2492]
    73dc:	add	w20, w20, w0
    73e0:	mov	w0, w22
    73e4:	ldr	x1, [sp, #56]
    73e8:	sxtw	x0, w0
    73ec:	lsl	x0, x0, #4
    73f0:	add	x0, x1, x0
    73f4:	add	x0, x0, #0xc, lsl #12
    73f8:	ldr	w0, [x0, #2496]
    73fc:	add	w19, w19, w0
    7400:	ldrsw	x0, [sp, #236]
    7404:	add	x0, x0, #0x9
    7408:	lsl	x0, x0, #1
    740c:	ldr	x1, [sp, #168]
    7410:	add	x0, x1, x0
    7414:	ldrh	w22, [x0]
    7418:	mov	w0, w22
    741c:	ldr	x1, [sp, #56]
    7420:	sxtw	x0, w0
    7424:	add	x0, x0, #0xc9b
    7428:	lsl	x0, x0, #4
    742c:	add	x0, x1, x0
    7430:	ldr	w0, [x0, #8]
    7434:	add	w21, w21, w0
    7438:	mov	w0, w22
    743c:	ldr	x1, [sp, #56]
    7440:	sxtw	x0, w0
    7444:	lsl	x0, x0, #4
    7448:	add	x0, x1, x0
    744c:	add	x0, x0, #0xc, lsl #12
    7450:	ldr	w0, [x0, #2492]
    7454:	add	w20, w20, w0
    7458:	mov	w0, w22
    745c:	ldr	x1, [sp, #56]
    7460:	sxtw	x0, w0
    7464:	lsl	x0, x0, #4
    7468:	add	x0, x1, x0
    746c:	add	x0, x0, #0xc, lsl #12
    7470:	ldr	w0, [x0, #2496]
    7474:	add	w19, w19, w0
    7478:	ldrsw	x0, [sp, #236]
    747c:	add	x0, x0, #0xa
    7480:	lsl	x0, x0, #1
    7484:	ldr	x1, [sp, #168]
    7488:	add	x0, x1, x0
    748c:	ldrh	w22, [x0]
    7490:	mov	w0, w22
    7494:	ldr	x1, [sp, #56]
    7498:	sxtw	x0, w0
    749c:	add	x0, x0, #0xc9b
    74a0:	lsl	x0, x0, #4
    74a4:	add	x0, x1, x0
    74a8:	ldr	w0, [x0, #8]
    74ac:	add	w21, w21, w0
    74b0:	mov	w0, w22
    74b4:	ldr	x1, [sp, #56]
    74b8:	sxtw	x0, w0
    74bc:	lsl	x0, x0, #4
    74c0:	add	x0, x1, x0
    74c4:	add	x0, x0, #0xc, lsl #12
    74c8:	ldr	w0, [x0, #2492]
    74cc:	add	w20, w20, w0
    74d0:	mov	w0, w22
    74d4:	ldr	x1, [sp, #56]
    74d8:	sxtw	x0, w0
    74dc:	lsl	x0, x0, #4
    74e0:	add	x0, x1, x0
    74e4:	add	x0, x0, #0xc, lsl #12
    74e8:	ldr	w0, [x0, #2496]
    74ec:	add	w19, w19, w0
    74f0:	ldrsw	x0, [sp, #236]
    74f4:	add	x0, x0, #0xb
    74f8:	lsl	x0, x0, #1
    74fc:	ldr	x1, [sp, #168]
    7500:	add	x0, x1, x0
    7504:	ldrh	w22, [x0]
    7508:	mov	w0, w22
    750c:	ldr	x1, [sp, #56]
    7510:	sxtw	x0, w0
    7514:	add	x0, x0, #0xc9b
    7518:	lsl	x0, x0, #4
    751c:	add	x0, x1, x0
    7520:	ldr	w0, [x0, #8]
    7524:	add	w21, w21, w0
    7528:	mov	w0, w22
    752c:	ldr	x1, [sp, #56]
    7530:	sxtw	x0, w0
    7534:	lsl	x0, x0, #4
    7538:	add	x0, x1, x0
    753c:	add	x0, x0, #0xc, lsl #12
    7540:	ldr	w0, [x0, #2492]
    7544:	add	w20, w20, w0
    7548:	mov	w0, w22
    754c:	ldr	x1, [sp, #56]
    7550:	sxtw	x0, w0
    7554:	lsl	x0, x0, #4
    7558:	add	x0, x1, x0
    755c:	add	x0, x0, #0xc, lsl #12
    7560:	ldr	w0, [x0, #2496]
    7564:	add	w19, w19, w0
    7568:	ldrsw	x0, [sp, #236]
    756c:	add	x0, x0, #0xc
    7570:	lsl	x0, x0, #1
    7574:	ldr	x1, [sp, #168]
    7578:	add	x0, x1, x0
    757c:	ldrh	w22, [x0]
    7580:	mov	w0, w22
    7584:	ldr	x1, [sp, #56]
    7588:	sxtw	x0, w0
    758c:	add	x0, x0, #0xc9b
    7590:	lsl	x0, x0, #4
    7594:	add	x0, x1, x0
    7598:	ldr	w0, [x0, #8]
    759c:	add	w21, w21, w0
    75a0:	mov	w0, w22
    75a4:	ldr	x1, [sp, #56]
    75a8:	sxtw	x0, w0
    75ac:	lsl	x0, x0, #4
    75b0:	add	x0, x1, x0
    75b4:	add	x0, x0, #0xc, lsl #12
    75b8:	ldr	w0, [x0, #2492]
    75bc:	add	w20, w20, w0
    75c0:	mov	w0, w22
    75c4:	ldr	x1, [sp, #56]
    75c8:	sxtw	x0, w0
    75cc:	lsl	x0, x0, #4
    75d0:	add	x0, x1, x0
    75d4:	add	x0, x0, #0xc, lsl #12
    75d8:	ldr	w0, [x0, #2496]
    75dc:	add	w19, w19, w0
    75e0:	ldrsw	x0, [sp, #236]
    75e4:	add	x0, x0, #0xd
    75e8:	lsl	x0, x0, #1
    75ec:	ldr	x1, [sp, #168]
    75f0:	add	x0, x1, x0
    75f4:	ldrh	w22, [x0]
    75f8:	mov	w0, w22
    75fc:	ldr	x1, [sp, #56]
    7600:	sxtw	x0, w0
    7604:	add	x0, x0, #0xc9b
    7608:	lsl	x0, x0, #4
    760c:	add	x0, x1, x0
    7610:	ldr	w0, [x0, #8]
    7614:	add	w21, w21, w0
    7618:	mov	w0, w22
    761c:	ldr	x1, [sp, #56]
    7620:	sxtw	x0, w0
    7624:	lsl	x0, x0, #4
    7628:	add	x0, x1, x0
    762c:	add	x0, x0, #0xc, lsl #12
    7630:	ldr	w0, [x0, #2492]
    7634:	add	w20, w20, w0
    7638:	mov	w0, w22
    763c:	ldr	x1, [sp, #56]
    7640:	sxtw	x0, w0
    7644:	lsl	x0, x0, #4
    7648:	add	x0, x1, x0
    764c:	add	x0, x0, #0xc, lsl #12
    7650:	ldr	w0, [x0, #2496]
    7654:	add	w19, w19, w0
    7658:	ldrsw	x0, [sp, #236]
    765c:	add	x0, x0, #0xe
    7660:	lsl	x0, x0, #1
    7664:	ldr	x1, [sp, #168]
    7668:	add	x0, x1, x0
    766c:	ldrh	w22, [x0]
    7670:	mov	w0, w22
    7674:	ldr	x1, [sp, #56]
    7678:	sxtw	x0, w0
    767c:	add	x0, x0, #0xc9b
    7680:	lsl	x0, x0, #4
    7684:	add	x0, x1, x0
    7688:	ldr	w0, [x0, #8]
    768c:	add	w21, w21, w0
    7690:	mov	w0, w22
    7694:	ldr	x1, [sp, #56]
    7698:	sxtw	x0, w0
    769c:	lsl	x0, x0, #4
    76a0:	add	x0, x1, x0
    76a4:	add	x0, x0, #0xc, lsl #12
    76a8:	ldr	w0, [x0, #2492]
    76ac:	add	w20, w20, w0
    76b0:	mov	w0, w22
    76b4:	ldr	x1, [sp, #56]
    76b8:	sxtw	x0, w0
    76bc:	lsl	x0, x0, #4
    76c0:	add	x0, x1, x0
    76c4:	add	x0, x0, #0xc, lsl #12
    76c8:	ldr	w0, [x0, #2496]
    76cc:	add	w19, w19, w0
    76d0:	ldrsw	x0, [sp, #236]
    76d4:	add	x0, x0, #0xf
    76d8:	lsl	x0, x0, #1
    76dc:	ldr	x1, [sp, #168]
    76e0:	add	x0, x1, x0
    76e4:	ldrh	w22, [x0]
    76e8:	mov	w0, w22
    76ec:	ldr	x1, [sp, #56]
    76f0:	sxtw	x0, w0
    76f4:	add	x0, x0, #0xc9b
    76f8:	lsl	x0, x0, #4
    76fc:	add	x0, x1, x0
    7700:	ldr	w0, [x0, #8]
    7704:	add	w21, w21, w0
    7708:	mov	w0, w22
    770c:	ldr	x1, [sp, #56]
    7710:	sxtw	x0, w0
    7714:	lsl	x0, x0, #4
    7718:	add	x0, x1, x0
    771c:	add	x0, x0, #0xc, lsl #12
    7720:	ldr	w0, [x0, #2492]
    7724:	add	w20, w20, w0
    7728:	mov	w0, w22
    772c:	ldr	x1, [sp, #56]
    7730:	sxtw	x0, w0
    7734:	lsl	x0, x0, #4
    7738:	add	x0, x1, x0
    773c:	add	x0, x0, #0xc, lsl #12
    7740:	ldr	w0, [x0, #2496]
    7744:	add	w19, w19, w0
    7748:	ldrsw	x0, [sp, #236]
    774c:	add	x0, x0, #0x10
    7750:	lsl	x0, x0, #1
    7754:	ldr	x1, [sp, #168]
    7758:	add	x0, x1, x0
    775c:	ldrh	w22, [x0]
    7760:	mov	w0, w22
    7764:	ldr	x1, [sp, #56]
    7768:	sxtw	x0, w0
    776c:	add	x0, x0, #0xc9b
    7770:	lsl	x0, x0, #4
    7774:	add	x0, x1, x0
    7778:	ldr	w0, [x0, #8]
    777c:	add	w21, w21, w0
    7780:	mov	w0, w22
    7784:	ldr	x1, [sp, #56]
    7788:	sxtw	x0, w0
    778c:	lsl	x0, x0, #4
    7790:	add	x0, x1, x0
    7794:	add	x0, x0, #0xc, lsl #12
    7798:	ldr	w0, [x0, #2492]
    779c:	add	w20, w20, w0
    77a0:	mov	w0, w22
    77a4:	ldr	x1, [sp, #56]
    77a8:	sxtw	x0, w0
    77ac:	lsl	x0, x0, #4
    77b0:	add	x0, x1, x0
    77b4:	add	x0, x0, #0xc, lsl #12
    77b8:	ldr	w0, [x0, #2496]
    77bc:	add	w19, w19, w0
    77c0:	ldrsw	x0, [sp, #236]
    77c4:	add	x0, x0, #0x11
    77c8:	lsl	x0, x0, #1
    77cc:	ldr	x1, [sp, #168]
    77d0:	add	x0, x1, x0
    77d4:	ldrh	w22, [x0]
    77d8:	mov	w0, w22
    77dc:	ldr	x1, [sp, #56]
    77e0:	sxtw	x0, w0
    77e4:	add	x0, x0, #0xc9b
    77e8:	lsl	x0, x0, #4
    77ec:	add	x0, x1, x0
    77f0:	ldr	w0, [x0, #8]
    77f4:	add	w21, w21, w0
    77f8:	mov	w0, w22
    77fc:	ldr	x1, [sp, #56]
    7800:	sxtw	x0, w0
    7804:	lsl	x0, x0, #4
    7808:	add	x0, x1, x0
    780c:	add	x0, x0, #0xc, lsl #12
    7810:	ldr	w0, [x0, #2492]
    7814:	add	w20, w20, w0
    7818:	mov	w0, w22
    781c:	ldr	x1, [sp, #56]
    7820:	sxtw	x0, w0
    7824:	lsl	x0, x0, #4
    7828:	add	x0, x1, x0
    782c:	add	x0, x0, #0xc, lsl #12
    7830:	ldr	w0, [x0, #2496]
    7834:	add	w19, w19, w0
    7838:	ldrsw	x0, [sp, #236]
    783c:	add	x0, x0, #0x12
    7840:	lsl	x0, x0, #1
    7844:	ldr	x1, [sp, #168]
    7848:	add	x0, x1, x0
    784c:	ldrh	w22, [x0]
    7850:	mov	w0, w22
    7854:	ldr	x1, [sp, #56]
    7858:	sxtw	x0, w0
    785c:	add	x0, x0, #0xc9b
    7860:	lsl	x0, x0, #4
    7864:	add	x0, x1, x0
    7868:	ldr	w0, [x0, #8]
    786c:	add	w21, w21, w0
    7870:	mov	w0, w22
    7874:	ldr	x1, [sp, #56]
    7878:	sxtw	x0, w0
    787c:	lsl	x0, x0, #4
    7880:	add	x0, x1, x0
    7884:	add	x0, x0, #0xc, lsl #12
    7888:	ldr	w0, [x0, #2492]
    788c:	add	w20, w20, w0
    7890:	mov	w0, w22
    7894:	ldr	x1, [sp, #56]
    7898:	sxtw	x0, w0
    789c:	lsl	x0, x0, #4
    78a0:	add	x0, x1, x0
    78a4:	add	x0, x0, #0xc, lsl #12
    78a8:	ldr	w0, [x0, #2496]
    78ac:	add	w19, w19, w0
    78b0:	ldrsw	x0, [sp, #236]
    78b4:	add	x0, x0, #0x13
    78b8:	lsl	x0, x0, #1
    78bc:	ldr	x1, [sp, #168]
    78c0:	add	x0, x1, x0
    78c4:	ldrh	w22, [x0]
    78c8:	mov	w0, w22
    78cc:	ldr	x1, [sp, #56]
    78d0:	sxtw	x0, w0
    78d4:	add	x0, x0, #0xc9b
    78d8:	lsl	x0, x0, #4
    78dc:	add	x0, x1, x0
    78e0:	ldr	w0, [x0, #8]
    78e4:	add	w21, w21, w0
    78e8:	mov	w0, w22
    78ec:	ldr	x1, [sp, #56]
    78f0:	sxtw	x0, w0
    78f4:	lsl	x0, x0, #4
    78f8:	add	x0, x1, x0
    78fc:	add	x0, x0, #0xc, lsl #12
    7900:	ldr	w0, [x0, #2492]
    7904:	add	w20, w20, w0
    7908:	mov	w0, w22
    790c:	ldr	x1, [sp, #56]
    7910:	sxtw	x0, w0
    7914:	lsl	x0, x0, #4
    7918:	add	x0, x1, x0
    791c:	add	x0, x0, #0xc, lsl #12
    7920:	ldr	w0, [x0, #2496]
    7924:	add	w19, w19, w0
    7928:	ldrsw	x0, [sp, #236]
    792c:	add	x0, x0, #0x14
    7930:	lsl	x0, x0, #1
    7934:	ldr	x1, [sp, #168]
    7938:	add	x0, x1, x0
    793c:	ldrh	w22, [x0]
    7940:	mov	w0, w22
    7944:	ldr	x1, [sp, #56]
    7948:	sxtw	x0, w0
    794c:	add	x0, x0, #0xc9b
    7950:	lsl	x0, x0, #4
    7954:	add	x0, x1, x0
    7958:	ldr	w0, [x0, #8]
    795c:	add	w21, w21, w0
    7960:	mov	w0, w22
    7964:	ldr	x1, [sp, #56]
    7968:	sxtw	x0, w0
    796c:	lsl	x0, x0, #4
    7970:	add	x0, x1, x0
    7974:	add	x0, x0, #0xc, lsl #12
    7978:	ldr	w0, [x0, #2492]
    797c:	add	w20, w20, w0
    7980:	mov	w0, w22
    7984:	ldr	x1, [sp, #56]
    7988:	sxtw	x0, w0
    798c:	lsl	x0, x0, #4
    7990:	add	x0, x1, x0
    7994:	add	x0, x0, #0xc, lsl #12
    7998:	ldr	w0, [x0, #2496]
    799c:	add	w19, w19, w0
    79a0:	ldrsw	x0, [sp, #236]
    79a4:	add	x0, x0, #0x15
    79a8:	lsl	x0, x0, #1
    79ac:	ldr	x1, [sp, #168]
    79b0:	add	x0, x1, x0
    79b4:	ldrh	w22, [x0]
    79b8:	mov	w0, w22
    79bc:	ldr	x1, [sp, #56]
    79c0:	sxtw	x0, w0
    79c4:	add	x0, x0, #0xc9b
    79c8:	lsl	x0, x0, #4
    79cc:	add	x0, x1, x0
    79d0:	ldr	w0, [x0, #8]
    79d4:	add	w21, w21, w0
    79d8:	mov	w0, w22
    79dc:	ldr	x1, [sp, #56]
    79e0:	sxtw	x0, w0
    79e4:	lsl	x0, x0, #4
    79e8:	add	x0, x1, x0
    79ec:	add	x0, x0, #0xc, lsl #12
    79f0:	ldr	w0, [x0, #2492]
    79f4:	add	w20, w20, w0
    79f8:	mov	w0, w22
    79fc:	ldr	x1, [sp, #56]
    7a00:	sxtw	x0, w0
    7a04:	lsl	x0, x0, #4
    7a08:	add	x0, x1, x0
    7a0c:	add	x0, x0, #0xc, lsl #12
    7a10:	ldr	w0, [x0, #2496]
    7a14:	add	w19, w19, w0
    7a18:	ldrsw	x0, [sp, #236]
    7a1c:	add	x0, x0, #0x16
    7a20:	lsl	x0, x0, #1
    7a24:	ldr	x1, [sp, #168]
    7a28:	add	x0, x1, x0
    7a2c:	ldrh	w22, [x0]
    7a30:	mov	w0, w22
    7a34:	ldr	x1, [sp, #56]
    7a38:	sxtw	x0, w0
    7a3c:	add	x0, x0, #0xc9b
    7a40:	lsl	x0, x0, #4
    7a44:	add	x0, x1, x0
    7a48:	ldr	w0, [x0, #8]
    7a4c:	add	w21, w21, w0
    7a50:	mov	w0, w22
    7a54:	ldr	x1, [sp, #56]
    7a58:	sxtw	x0, w0
    7a5c:	lsl	x0, x0, #4
    7a60:	add	x0, x1, x0
    7a64:	add	x0, x0, #0xc, lsl #12
    7a68:	ldr	w0, [x0, #2492]
    7a6c:	add	w20, w20, w0
    7a70:	mov	w0, w22
    7a74:	ldr	x1, [sp, #56]
    7a78:	sxtw	x0, w0
    7a7c:	lsl	x0, x0, #4
    7a80:	add	x0, x1, x0
    7a84:	add	x0, x0, #0xc, lsl #12
    7a88:	ldr	w0, [x0, #2496]
    7a8c:	add	w19, w19, w0
    7a90:	ldrsw	x0, [sp, #236]
    7a94:	add	x0, x0, #0x17
    7a98:	lsl	x0, x0, #1
    7a9c:	ldr	x1, [sp, #168]
    7aa0:	add	x0, x1, x0
    7aa4:	ldrh	w22, [x0]
    7aa8:	mov	w0, w22
    7aac:	ldr	x1, [sp, #56]
    7ab0:	sxtw	x0, w0
    7ab4:	add	x0, x0, #0xc9b
    7ab8:	lsl	x0, x0, #4
    7abc:	add	x0, x1, x0
    7ac0:	ldr	w0, [x0, #8]
    7ac4:	add	w21, w21, w0
    7ac8:	mov	w0, w22
    7acc:	ldr	x1, [sp, #56]
    7ad0:	sxtw	x0, w0
    7ad4:	lsl	x0, x0, #4
    7ad8:	add	x0, x1, x0
    7adc:	add	x0, x0, #0xc, lsl #12
    7ae0:	ldr	w0, [x0, #2492]
    7ae4:	add	w20, w20, w0
    7ae8:	mov	w0, w22
    7aec:	ldr	x1, [sp, #56]
    7af0:	sxtw	x0, w0
    7af4:	lsl	x0, x0, #4
    7af8:	add	x0, x1, x0
    7afc:	add	x0, x0, #0xc, lsl #12
    7b00:	ldr	w0, [x0, #2496]
    7b04:	add	w19, w19, w0
    7b08:	ldrsw	x0, [sp, #236]
    7b0c:	add	x0, x0, #0x18
    7b10:	lsl	x0, x0, #1
    7b14:	ldr	x1, [sp, #168]
    7b18:	add	x0, x1, x0
    7b1c:	ldrh	w22, [x0]
    7b20:	mov	w0, w22
    7b24:	ldr	x1, [sp, #56]
    7b28:	sxtw	x0, w0
    7b2c:	add	x0, x0, #0xc9b
    7b30:	lsl	x0, x0, #4
    7b34:	add	x0, x1, x0
    7b38:	ldr	w0, [x0, #8]
    7b3c:	add	w21, w21, w0
    7b40:	mov	w0, w22
    7b44:	ldr	x1, [sp, #56]
    7b48:	sxtw	x0, w0
    7b4c:	lsl	x0, x0, #4
    7b50:	add	x0, x1, x0
    7b54:	add	x0, x0, #0xc, lsl #12
    7b58:	ldr	w0, [x0, #2492]
    7b5c:	add	w20, w20, w0
    7b60:	mov	w0, w22
    7b64:	ldr	x1, [sp, #56]
    7b68:	sxtw	x0, w0
    7b6c:	lsl	x0, x0, #4
    7b70:	add	x0, x1, x0
    7b74:	add	x0, x0, #0xc, lsl #12
    7b78:	ldr	w0, [x0, #2496]
    7b7c:	add	w19, w19, w0
    7b80:	ldrsw	x0, [sp, #236]
    7b84:	add	x0, x0, #0x19
    7b88:	lsl	x0, x0, #1
    7b8c:	ldr	x1, [sp, #168]
    7b90:	add	x0, x1, x0
    7b94:	ldrh	w22, [x0]
    7b98:	mov	w0, w22
    7b9c:	ldr	x1, [sp, #56]
    7ba0:	sxtw	x0, w0
    7ba4:	add	x0, x0, #0xc9b
    7ba8:	lsl	x0, x0, #4
    7bac:	add	x0, x1, x0
    7bb0:	ldr	w0, [x0, #8]
    7bb4:	add	w21, w21, w0
    7bb8:	mov	w0, w22
    7bbc:	ldr	x1, [sp, #56]
    7bc0:	sxtw	x0, w0
    7bc4:	lsl	x0, x0, #4
    7bc8:	add	x0, x1, x0
    7bcc:	add	x0, x0, #0xc, lsl #12
    7bd0:	ldr	w0, [x0, #2492]
    7bd4:	add	w20, w20, w0
    7bd8:	mov	w0, w22
    7bdc:	ldr	x1, [sp, #56]
    7be0:	sxtw	x0, w0
    7be4:	lsl	x0, x0, #4
    7be8:	add	x0, x1, x0
    7bec:	add	x0, x0, #0xc, lsl #12
    7bf0:	ldr	w0, [x0, #2496]
    7bf4:	add	w19, w19, w0
    7bf8:	ldrsw	x0, [sp, #236]
    7bfc:	add	x0, x0, #0x1a
    7c00:	lsl	x0, x0, #1
    7c04:	ldr	x1, [sp, #168]
    7c08:	add	x0, x1, x0
    7c0c:	ldrh	w22, [x0]
    7c10:	mov	w0, w22
    7c14:	ldr	x1, [sp, #56]
    7c18:	sxtw	x0, w0
    7c1c:	add	x0, x0, #0xc9b
    7c20:	lsl	x0, x0, #4
    7c24:	add	x0, x1, x0
    7c28:	ldr	w0, [x0, #8]
    7c2c:	add	w21, w21, w0
    7c30:	mov	w0, w22
    7c34:	ldr	x1, [sp, #56]
    7c38:	sxtw	x0, w0
    7c3c:	lsl	x0, x0, #4
    7c40:	add	x0, x1, x0
    7c44:	add	x0, x0, #0xc, lsl #12
    7c48:	ldr	w0, [x0, #2492]
    7c4c:	add	w20, w20, w0
    7c50:	mov	w0, w22
    7c54:	ldr	x1, [sp, #56]
    7c58:	sxtw	x0, w0
    7c5c:	lsl	x0, x0, #4
    7c60:	add	x0, x1, x0
    7c64:	add	x0, x0, #0xc, lsl #12
    7c68:	ldr	w0, [x0, #2496]
    7c6c:	add	w19, w19, w0
    7c70:	ldrsw	x0, [sp, #236]
    7c74:	add	x0, x0, #0x1b
    7c78:	lsl	x0, x0, #1
    7c7c:	ldr	x1, [sp, #168]
    7c80:	add	x0, x1, x0
    7c84:	ldrh	w22, [x0]
    7c88:	mov	w0, w22
    7c8c:	ldr	x1, [sp, #56]
    7c90:	sxtw	x0, w0
    7c94:	add	x0, x0, #0xc9b
    7c98:	lsl	x0, x0, #4
    7c9c:	add	x0, x1, x0
    7ca0:	ldr	w0, [x0, #8]
    7ca4:	add	w21, w21, w0
    7ca8:	mov	w0, w22
    7cac:	ldr	x1, [sp, #56]
    7cb0:	sxtw	x0, w0
    7cb4:	lsl	x0, x0, #4
    7cb8:	add	x0, x1, x0
    7cbc:	add	x0, x0, #0xc, lsl #12
    7cc0:	ldr	w0, [x0, #2492]
    7cc4:	add	w20, w20, w0
    7cc8:	mov	w0, w22
    7ccc:	ldr	x1, [sp, #56]
    7cd0:	sxtw	x0, w0
    7cd4:	lsl	x0, x0, #4
    7cd8:	add	x0, x1, x0
    7cdc:	add	x0, x0, #0xc, lsl #12
    7ce0:	ldr	w0, [x0, #2496]
    7ce4:	add	w19, w19, w0
    7ce8:	ldrsw	x0, [sp, #236]
    7cec:	add	x0, x0, #0x1c
    7cf0:	lsl	x0, x0, #1
    7cf4:	ldr	x1, [sp, #168]
    7cf8:	add	x0, x1, x0
    7cfc:	ldrh	w22, [x0]
    7d00:	mov	w0, w22
    7d04:	ldr	x1, [sp, #56]
    7d08:	sxtw	x0, w0
    7d0c:	add	x0, x0, #0xc9b
    7d10:	lsl	x0, x0, #4
    7d14:	add	x0, x1, x0
    7d18:	ldr	w0, [x0, #8]
    7d1c:	add	w21, w21, w0
    7d20:	mov	w0, w22
    7d24:	ldr	x1, [sp, #56]
    7d28:	sxtw	x0, w0
    7d2c:	lsl	x0, x0, #4
    7d30:	add	x0, x1, x0
    7d34:	add	x0, x0, #0xc, lsl #12
    7d38:	ldr	w0, [x0, #2492]
    7d3c:	add	w20, w20, w0
    7d40:	mov	w0, w22
    7d44:	ldr	x1, [sp, #56]
    7d48:	sxtw	x0, w0
    7d4c:	lsl	x0, x0, #4
    7d50:	add	x0, x1, x0
    7d54:	add	x0, x0, #0xc, lsl #12
    7d58:	ldr	w0, [x0, #2496]
    7d5c:	add	w19, w19, w0
    7d60:	ldrsw	x0, [sp, #236]
    7d64:	add	x0, x0, #0x1d
    7d68:	lsl	x0, x0, #1
    7d6c:	ldr	x1, [sp, #168]
    7d70:	add	x0, x1, x0
    7d74:	ldrh	w22, [x0]
    7d78:	mov	w0, w22
    7d7c:	ldr	x1, [sp, #56]
    7d80:	sxtw	x0, w0
    7d84:	add	x0, x0, #0xc9b
    7d88:	lsl	x0, x0, #4
    7d8c:	add	x0, x1, x0
    7d90:	ldr	w0, [x0, #8]
    7d94:	add	w21, w21, w0
    7d98:	mov	w0, w22
    7d9c:	ldr	x1, [sp, #56]
    7da0:	sxtw	x0, w0
    7da4:	lsl	x0, x0, #4
    7da8:	add	x0, x1, x0
    7dac:	add	x0, x0, #0xc, lsl #12
    7db0:	ldr	w0, [x0, #2492]
    7db4:	add	w20, w20, w0
    7db8:	mov	w0, w22
    7dbc:	ldr	x1, [sp, #56]
    7dc0:	sxtw	x0, w0
    7dc4:	lsl	x0, x0, #4
    7dc8:	add	x0, x1, x0
    7dcc:	add	x0, x0, #0xc, lsl #12
    7dd0:	ldr	w0, [x0, #2496]
    7dd4:	add	w19, w19, w0
    7dd8:	ldrsw	x0, [sp, #236]
    7ddc:	add	x0, x0, #0x1e
    7de0:	lsl	x0, x0, #1
    7de4:	ldr	x1, [sp, #168]
    7de8:	add	x0, x1, x0
    7dec:	ldrh	w22, [x0]
    7df0:	mov	w0, w22
    7df4:	ldr	x1, [sp, #56]
    7df8:	sxtw	x0, w0
    7dfc:	add	x0, x0, #0xc9b
    7e00:	lsl	x0, x0, #4
    7e04:	add	x0, x1, x0
    7e08:	ldr	w0, [x0, #8]
    7e0c:	add	w21, w21, w0
    7e10:	mov	w0, w22
    7e14:	ldr	x1, [sp, #56]
    7e18:	sxtw	x0, w0
    7e1c:	lsl	x0, x0, #4
    7e20:	add	x0, x1, x0
    7e24:	add	x0, x0, #0xc, lsl #12
    7e28:	ldr	w0, [x0, #2492]
    7e2c:	add	w20, w20, w0
    7e30:	mov	w0, w22
    7e34:	ldr	x1, [sp, #56]
    7e38:	sxtw	x0, w0
    7e3c:	lsl	x0, x0, #4
    7e40:	add	x0, x1, x0
    7e44:	add	x0, x0, #0xc, lsl #12
    7e48:	ldr	w0, [x0, #2496]
    7e4c:	add	w19, w19, w0
    7e50:	ldrsw	x0, [sp, #236]
    7e54:	add	x0, x0, #0x1f
    7e58:	lsl	x0, x0, #1
    7e5c:	ldr	x1, [sp, #168]
    7e60:	add	x0, x1, x0
    7e64:	ldrh	w22, [x0]
    7e68:	mov	w0, w22
    7e6c:	ldr	x1, [sp, #56]
    7e70:	sxtw	x0, w0
    7e74:	add	x0, x0, #0xc9b
    7e78:	lsl	x0, x0, #4
    7e7c:	add	x0, x1, x0
    7e80:	ldr	w0, [x0, #8]
    7e84:	add	w21, w21, w0
    7e88:	mov	w0, w22
    7e8c:	ldr	x1, [sp, #56]
    7e90:	sxtw	x0, w0
    7e94:	lsl	x0, x0, #4
    7e98:	add	x0, x1, x0
    7e9c:	add	x0, x0, #0xc, lsl #12
    7ea0:	ldr	w0, [x0, #2492]
    7ea4:	add	w20, w20, w0
    7ea8:	mov	w0, w22
    7eac:	ldr	x1, [sp, #56]
    7eb0:	sxtw	x0, w0
    7eb4:	lsl	x0, x0, #4
    7eb8:	add	x0, x1, x0
    7ebc:	add	x0, x0, #0xc, lsl #12
    7ec0:	ldr	w0, [x0, #2496]
    7ec4:	add	w19, w19, w0
    7ec8:	ldrsw	x0, [sp, #236]
    7ecc:	add	x0, x0, #0x20
    7ed0:	lsl	x0, x0, #1
    7ed4:	ldr	x1, [sp, #168]
    7ed8:	add	x0, x1, x0
    7edc:	ldrh	w22, [x0]
    7ee0:	mov	w0, w22
    7ee4:	ldr	x1, [sp, #56]
    7ee8:	sxtw	x0, w0
    7eec:	add	x0, x0, #0xc9b
    7ef0:	lsl	x0, x0, #4
    7ef4:	add	x0, x1, x0
    7ef8:	ldr	w0, [x0, #8]
    7efc:	add	w21, w21, w0
    7f00:	mov	w0, w22
    7f04:	ldr	x1, [sp, #56]
    7f08:	sxtw	x0, w0
    7f0c:	lsl	x0, x0, #4
    7f10:	add	x0, x1, x0
    7f14:	add	x0, x0, #0xc, lsl #12
    7f18:	ldr	w0, [x0, #2492]
    7f1c:	add	w20, w20, w0
    7f20:	mov	w0, w22
    7f24:	ldr	x1, [sp, #56]
    7f28:	sxtw	x0, w0
    7f2c:	lsl	x0, x0, #4
    7f30:	add	x0, x1, x0
    7f34:	add	x0, x0, #0xc, lsl #12
    7f38:	ldr	w0, [x0, #2496]
    7f3c:	add	w19, w19, w0
    7f40:	ldrsw	x0, [sp, #236]
    7f44:	add	x0, x0, #0x21
    7f48:	lsl	x0, x0, #1
    7f4c:	ldr	x1, [sp, #168]
    7f50:	add	x0, x1, x0
    7f54:	ldrh	w22, [x0]
    7f58:	mov	w0, w22
    7f5c:	ldr	x1, [sp, #56]
    7f60:	sxtw	x0, w0
    7f64:	add	x0, x0, #0xc9b
    7f68:	lsl	x0, x0, #4
    7f6c:	add	x0, x1, x0
    7f70:	ldr	w0, [x0, #8]
    7f74:	add	w21, w21, w0
    7f78:	mov	w0, w22
    7f7c:	ldr	x1, [sp, #56]
    7f80:	sxtw	x0, w0
    7f84:	lsl	x0, x0, #4
    7f88:	add	x0, x1, x0
    7f8c:	add	x0, x0, #0xc, lsl #12
    7f90:	ldr	w0, [x0, #2492]
    7f94:	add	w20, w20, w0
    7f98:	mov	w0, w22
    7f9c:	ldr	x1, [sp, #56]
    7fa0:	sxtw	x0, w0
    7fa4:	lsl	x0, x0, #4
    7fa8:	add	x0, x1, x0
    7fac:	add	x0, x0, #0xc, lsl #12
    7fb0:	ldr	w0, [x0, #2496]
    7fb4:	add	w19, w19, w0
    7fb8:	ldrsw	x0, [sp, #236]
    7fbc:	add	x0, x0, #0x22
    7fc0:	lsl	x0, x0, #1
    7fc4:	ldr	x1, [sp, #168]
    7fc8:	add	x0, x1, x0
    7fcc:	ldrh	w22, [x0]
    7fd0:	mov	w0, w22
    7fd4:	ldr	x1, [sp, #56]
    7fd8:	sxtw	x0, w0
    7fdc:	add	x0, x0, #0xc9b
    7fe0:	lsl	x0, x0, #4
    7fe4:	add	x0, x1, x0
    7fe8:	ldr	w0, [x0, #8]
    7fec:	add	w21, w21, w0
    7ff0:	mov	w0, w22
    7ff4:	ldr	x1, [sp, #56]
    7ff8:	sxtw	x0, w0
    7ffc:	lsl	x0, x0, #4
    8000:	add	x0, x1, x0
    8004:	add	x0, x0, #0xc, lsl #12
    8008:	ldr	w0, [x0, #2492]
    800c:	add	w20, w20, w0
    8010:	mov	w0, w22
    8014:	ldr	x1, [sp, #56]
    8018:	sxtw	x0, w0
    801c:	lsl	x0, x0, #4
    8020:	add	x0, x1, x0
    8024:	add	x0, x0, #0xc, lsl #12
    8028:	ldr	w0, [x0, #2496]
    802c:	add	w19, w19, w0
    8030:	ldrsw	x0, [sp, #236]
    8034:	add	x0, x0, #0x23
    8038:	lsl	x0, x0, #1
    803c:	ldr	x1, [sp, #168]
    8040:	add	x0, x1, x0
    8044:	ldrh	w22, [x0]
    8048:	mov	w0, w22
    804c:	ldr	x1, [sp, #56]
    8050:	sxtw	x0, w0
    8054:	add	x0, x0, #0xc9b
    8058:	lsl	x0, x0, #4
    805c:	add	x0, x1, x0
    8060:	ldr	w0, [x0, #8]
    8064:	add	w21, w21, w0
    8068:	mov	w0, w22
    806c:	ldr	x1, [sp, #56]
    8070:	sxtw	x0, w0
    8074:	lsl	x0, x0, #4
    8078:	add	x0, x1, x0
    807c:	add	x0, x0, #0xc, lsl #12
    8080:	ldr	w0, [x0, #2492]
    8084:	add	w20, w20, w0
    8088:	mov	w0, w22
    808c:	ldr	x1, [sp, #56]
    8090:	sxtw	x0, w0
    8094:	lsl	x0, x0, #4
    8098:	add	x0, x1, x0
    809c:	add	x0, x0, #0xc, lsl #12
    80a0:	ldr	w0, [x0, #2496]
    80a4:	add	w19, w19, w0
    80a8:	ldrsw	x0, [sp, #236]
    80ac:	add	x0, x0, #0x24
    80b0:	lsl	x0, x0, #1
    80b4:	ldr	x1, [sp, #168]
    80b8:	add	x0, x1, x0
    80bc:	ldrh	w22, [x0]
    80c0:	mov	w0, w22
    80c4:	ldr	x1, [sp, #56]
    80c8:	sxtw	x0, w0
    80cc:	add	x0, x0, #0xc9b
    80d0:	lsl	x0, x0, #4
    80d4:	add	x0, x1, x0
    80d8:	ldr	w0, [x0, #8]
    80dc:	add	w21, w21, w0
    80e0:	mov	w0, w22
    80e4:	ldr	x1, [sp, #56]
    80e8:	sxtw	x0, w0
    80ec:	lsl	x0, x0, #4
    80f0:	add	x0, x1, x0
    80f4:	add	x0, x0, #0xc, lsl #12
    80f8:	ldr	w0, [x0, #2492]
    80fc:	add	w20, w20, w0
    8100:	mov	w0, w22
    8104:	ldr	x1, [sp, #56]
    8108:	sxtw	x0, w0
    810c:	lsl	x0, x0, #4
    8110:	add	x0, x1, x0
    8114:	add	x0, x0, #0xc, lsl #12
    8118:	ldr	w0, [x0, #2496]
    811c:	add	w19, w19, w0
    8120:	ldrsw	x0, [sp, #236]
    8124:	add	x0, x0, #0x25
    8128:	lsl	x0, x0, #1
    812c:	ldr	x1, [sp, #168]
    8130:	add	x0, x1, x0
    8134:	ldrh	w22, [x0]
    8138:	mov	w0, w22
    813c:	ldr	x1, [sp, #56]
    8140:	sxtw	x0, w0
    8144:	add	x0, x0, #0xc9b
    8148:	lsl	x0, x0, #4
    814c:	add	x0, x1, x0
    8150:	ldr	w0, [x0, #8]
    8154:	add	w21, w21, w0
    8158:	mov	w0, w22
    815c:	ldr	x1, [sp, #56]
    8160:	sxtw	x0, w0
    8164:	lsl	x0, x0, #4
    8168:	add	x0, x1, x0
    816c:	add	x0, x0, #0xc, lsl #12
    8170:	ldr	w0, [x0, #2492]
    8174:	add	w20, w20, w0
    8178:	mov	w0, w22
    817c:	ldr	x1, [sp, #56]
    8180:	sxtw	x0, w0
    8184:	lsl	x0, x0, #4
    8188:	add	x0, x1, x0
    818c:	add	x0, x0, #0xc, lsl #12
    8190:	ldr	w0, [x0, #2496]
    8194:	add	w19, w19, w0
    8198:	ldrsw	x0, [sp, #236]
    819c:	add	x0, x0, #0x26
    81a0:	lsl	x0, x0, #1
    81a4:	ldr	x1, [sp, #168]
    81a8:	add	x0, x1, x0
    81ac:	ldrh	w22, [x0]
    81b0:	mov	w0, w22
    81b4:	ldr	x1, [sp, #56]
    81b8:	sxtw	x0, w0
    81bc:	add	x0, x0, #0xc9b
    81c0:	lsl	x0, x0, #4
    81c4:	add	x0, x1, x0
    81c8:	ldr	w0, [x0, #8]
    81cc:	add	w21, w21, w0
    81d0:	mov	w0, w22
    81d4:	ldr	x1, [sp, #56]
    81d8:	sxtw	x0, w0
    81dc:	lsl	x0, x0, #4
    81e0:	add	x0, x1, x0
    81e4:	add	x0, x0, #0xc, lsl #12
    81e8:	ldr	w0, [x0, #2492]
    81ec:	add	w20, w20, w0
    81f0:	mov	w0, w22
    81f4:	ldr	x1, [sp, #56]
    81f8:	sxtw	x0, w0
    81fc:	lsl	x0, x0, #4
    8200:	add	x0, x1, x0
    8204:	add	x0, x0, #0xc, lsl #12
    8208:	ldr	w0, [x0, #2496]
    820c:	add	w19, w19, w0
    8210:	ldrsw	x0, [sp, #236]
    8214:	add	x0, x0, #0x27
    8218:	lsl	x0, x0, #1
    821c:	ldr	x1, [sp, #168]
    8220:	add	x0, x1, x0
    8224:	ldrh	w22, [x0]
    8228:	mov	w0, w22
    822c:	ldr	x1, [sp, #56]
    8230:	sxtw	x0, w0
    8234:	add	x0, x0, #0xc9b
    8238:	lsl	x0, x0, #4
    823c:	add	x0, x1, x0
    8240:	ldr	w0, [x0, #8]
    8244:	add	w21, w21, w0
    8248:	mov	w0, w22
    824c:	ldr	x1, [sp, #56]
    8250:	sxtw	x0, w0
    8254:	lsl	x0, x0, #4
    8258:	add	x0, x1, x0
    825c:	add	x0, x0, #0xc, lsl #12
    8260:	ldr	w0, [x0, #2492]
    8264:	add	w20, w20, w0
    8268:	mov	w0, w22
    826c:	ldr	x1, [sp, #56]
    8270:	sxtw	x0, w0
    8274:	lsl	x0, x0, #4
    8278:	add	x0, x1, x0
    827c:	add	x0, x0, #0xc, lsl #12
    8280:	ldr	w0, [x0, #2496]
    8284:	add	w19, w19, w0
    8288:	ldrsw	x0, [sp, #236]
    828c:	add	x0, x0, #0x28
    8290:	lsl	x0, x0, #1
    8294:	ldr	x1, [sp, #168]
    8298:	add	x0, x1, x0
    829c:	ldrh	w22, [x0]
    82a0:	mov	w0, w22
    82a4:	ldr	x1, [sp, #56]
    82a8:	sxtw	x0, w0
    82ac:	add	x0, x0, #0xc9b
    82b0:	lsl	x0, x0, #4
    82b4:	add	x0, x1, x0
    82b8:	ldr	w0, [x0, #8]
    82bc:	add	w21, w21, w0
    82c0:	mov	w0, w22
    82c4:	ldr	x1, [sp, #56]
    82c8:	sxtw	x0, w0
    82cc:	lsl	x0, x0, #4
    82d0:	add	x0, x1, x0
    82d4:	add	x0, x0, #0xc, lsl #12
    82d8:	ldr	w0, [x0, #2492]
    82dc:	add	w20, w20, w0
    82e0:	mov	w0, w22
    82e4:	ldr	x1, [sp, #56]
    82e8:	sxtw	x0, w0
    82ec:	lsl	x0, x0, #4
    82f0:	add	x0, x1, x0
    82f4:	add	x0, x0, #0xc, lsl #12
    82f8:	ldr	w0, [x0, #2496]
    82fc:	add	w19, w19, w0
    8300:	ldrsw	x0, [sp, #236]
    8304:	add	x0, x0, #0x29
    8308:	lsl	x0, x0, #1
    830c:	ldr	x1, [sp, #168]
    8310:	add	x0, x1, x0
    8314:	ldrh	w22, [x0]
    8318:	mov	w0, w22
    831c:	ldr	x1, [sp, #56]
    8320:	sxtw	x0, w0
    8324:	add	x0, x0, #0xc9b
    8328:	lsl	x0, x0, #4
    832c:	add	x0, x1, x0
    8330:	ldr	w0, [x0, #8]
    8334:	add	w21, w21, w0
    8338:	mov	w0, w22
    833c:	ldr	x1, [sp, #56]
    8340:	sxtw	x0, w0
    8344:	lsl	x0, x0, #4
    8348:	add	x0, x1, x0
    834c:	add	x0, x0, #0xc, lsl #12
    8350:	ldr	w0, [x0, #2492]
    8354:	add	w20, w20, w0
    8358:	mov	w0, w22
    835c:	ldr	x1, [sp, #56]
    8360:	sxtw	x0, w0
    8364:	lsl	x0, x0, #4
    8368:	add	x0, x1, x0
    836c:	add	x0, x0, #0xc, lsl #12
    8370:	ldr	w0, [x0, #2496]
    8374:	add	w19, w19, w0
    8378:	ldrsw	x0, [sp, #236]
    837c:	add	x0, x0, #0x2a
    8380:	lsl	x0, x0, #1
    8384:	ldr	x1, [sp, #168]
    8388:	add	x0, x1, x0
    838c:	ldrh	w22, [x0]
    8390:	mov	w0, w22
    8394:	ldr	x1, [sp, #56]
    8398:	sxtw	x0, w0
    839c:	add	x0, x0, #0xc9b
    83a0:	lsl	x0, x0, #4
    83a4:	add	x0, x1, x0
    83a8:	ldr	w0, [x0, #8]
    83ac:	add	w21, w21, w0
    83b0:	mov	w0, w22
    83b4:	ldr	x1, [sp, #56]
    83b8:	sxtw	x0, w0
    83bc:	lsl	x0, x0, #4
    83c0:	add	x0, x1, x0
    83c4:	add	x0, x0, #0xc, lsl #12
    83c8:	ldr	w0, [x0, #2492]
    83cc:	add	w20, w20, w0
    83d0:	mov	w0, w22
    83d4:	ldr	x1, [sp, #56]
    83d8:	sxtw	x0, w0
    83dc:	lsl	x0, x0, #4
    83e0:	add	x0, x1, x0
    83e4:	add	x0, x0, #0xc, lsl #12
    83e8:	ldr	w0, [x0, #2496]
    83ec:	add	w19, w19, w0
    83f0:	ldrsw	x0, [sp, #236]
    83f4:	add	x0, x0, #0x2b
    83f8:	lsl	x0, x0, #1
    83fc:	ldr	x1, [sp, #168]
    8400:	add	x0, x1, x0
    8404:	ldrh	w22, [x0]
    8408:	mov	w0, w22
    840c:	ldr	x1, [sp, #56]
    8410:	sxtw	x0, w0
    8414:	add	x0, x0, #0xc9b
    8418:	lsl	x0, x0, #4
    841c:	add	x0, x1, x0
    8420:	ldr	w0, [x0, #8]
    8424:	add	w21, w21, w0
    8428:	mov	w0, w22
    842c:	ldr	x1, [sp, #56]
    8430:	sxtw	x0, w0
    8434:	lsl	x0, x0, #4
    8438:	add	x0, x1, x0
    843c:	add	x0, x0, #0xc, lsl #12
    8440:	ldr	w0, [x0, #2492]
    8444:	add	w20, w20, w0
    8448:	mov	w0, w22
    844c:	ldr	x1, [sp, #56]
    8450:	sxtw	x0, w0
    8454:	lsl	x0, x0, #4
    8458:	add	x0, x1, x0
    845c:	add	x0, x0, #0xc, lsl #12
    8460:	ldr	w0, [x0, #2496]
    8464:	add	w19, w19, w0
    8468:	ldrsw	x0, [sp, #236]
    846c:	add	x0, x0, #0x2c
    8470:	lsl	x0, x0, #1
    8474:	ldr	x1, [sp, #168]
    8478:	add	x0, x1, x0
    847c:	ldrh	w22, [x0]
    8480:	mov	w0, w22
    8484:	ldr	x1, [sp, #56]
    8488:	sxtw	x0, w0
    848c:	add	x0, x0, #0xc9b
    8490:	lsl	x0, x0, #4
    8494:	add	x0, x1, x0
    8498:	ldr	w0, [x0, #8]
    849c:	add	w21, w21, w0
    84a0:	mov	w0, w22
    84a4:	ldr	x1, [sp, #56]
    84a8:	sxtw	x0, w0
    84ac:	lsl	x0, x0, #4
    84b0:	add	x0, x1, x0
    84b4:	add	x0, x0, #0xc, lsl #12
    84b8:	ldr	w0, [x0, #2492]
    84bc:	add	w20, w20, w0
    84c0:	mov	w0, w22
    84c4:	ldr	x1, [sp, #56]
    84c8:	sxtw	x0, w0
    84cc:	lsl	x0, x0, #4
    84d0:	add	x0, x1, x0
    84d4:	add	x0, x0, #0xc, lsl #12
    84d8:	ldr	w0, [x0, #2496]
    84dc:	add	w19, w19, w0
    84e0:	ldrsw	x0, [sp, #236]
    84e4:	add	x0, x0, #0x2d
    84e8:	lsl	x0, x0, #1
    84ec:	ldr	x1, [sp, #168]
    84f0:	add	x0, x1, x0
    84f4:	ldrh	w22, [x0]
    84f8:	mov	w0, w22
    84fc:	ldr	x1, [sp, #56]
    8500:	sxtw	x0, w0
    8504:	add	x0, x0, #0xc9b
    8508:	lsl	x0, x0, #4
    850c:	add	x0, x1, x0
    8510:	ldr	w0, [x0, #8]
    8514:	add	w21, w21, w0
    8518:	mov	w0, w22
    851c:	ldr	x1, [sp, #56]
    8520:	sxtw	x0, w0
    8524:	lsl	x0, x0, #4
    8528:	add	x0, x1, x0
    852c:	add	x0, x0, #0xc, lsl #12
    8530:	ldr	w0, [x0, #2492]
    8534:	add	w20, w20, w0
    8538:	mov	w0, w22
    853c:	ldr	x1, [sp, #56]
    8540:	sxtw	x0, w0
    8544:	lsl	x0, x0, #4
    8548:	add	x0, x1, x0
    854c:	add	x0, x0, #0xc, lsl #12
    8550:	ldr	w0, [x0, #2496]
    8554:	add	w19, w19, w0
    8558:	ldrsw	x0, [sp, #236]
    855c:	add	x0, x0, #0x2e
    8560:	lsl	x0, x0, #1
    8564:	ldr	x1, [sp, #168]
    8568:	add	x0, x1, x0
    856c:	ldrh	w22, [x0]
    8570:	mov	w0, w22
    8574:	ldr	x1, [sp, #56]
    8578:	sxtw	x0, w0
    857c:	add	x0, x0, #0xc9b
    8580:	lsl	x0, x0, #4
    8584:	add	x0, x1, x0
    8588:	ldr	w0, [x0, #8]
    858c:	add	w21, w21, w0
    8590:	mov	w0, w22
    8594:	ldr	x1, [sp, #56]
    8598:	sxtw	x0, w0
    859c:	lsl	x0, x0, #4
    85a0:	add	x0, x1, x0
    85a4:	add	x0, x0, #0xc, lsl #12
    85a8:	ldr	w0, [x0, #2492]
    85ac:	add	w20, w20, w0
    85b0:	mov	w0, w22
    85b4:	ldr	x1, [sp, #56]
    85b8:	sxtw	x0, w0
    85bc:	lsl	x0, x0, #4
    85c0:	add	x0, x1, x0
    85c4:	add	x0, x0, #0xc, lsl #12
    85c8:	ldr	w0, [x0, #2496]
    85cc:	add	w19, w19, w0
    85d0:	ldrsw	x0, [sp, #236]
    85d4:	add	x0, x0, #0x2f
    85d8:	lsl	x0, x0, #1
    85dc:	ldr	x1, [sp, #168]
    85e0:	add	x0, x1, x0
    85e4:	ldrh	w22, [x0]
    85e8:	mov	w0, w22
    85ec:	ldr	x1, [sp, #56]
    85f0:	sxtw	x0, w0
    85f4:	add	x0, x0, #0xc9b
    85f8:	lsl	x0, x0, #4
    85fc:	add	x0, x1, x0
    8600:	ldr	w0, [x0, #8]
    8604:	add	w21, w21, w0
    8608:	mov	w0, w22
    860c:	ldr	x1, [sp, #56]
    8610:	sxtw	x0, w0
    8614:	lsl	x0, x0, #4
    8618:	add	x0, x1, x0
    861c:	add	x0, x0, #0xc, lsl #12
    8620:	ldr	w0, [x0, #2492]
    8624:	add	w20, w20, w0
    8628:	mov	w0, w22
    862c:	ldr	x1, [sp, #56]
    8630:	sxtw	x0, w0
    8634:	lsl	x0, x0, #4
    8638:	add	x0, x1, x0
    863c:	add	x0, x0, #0xc, lsl #12
    8640:	ldr	w0, [x0, #2496]
    8644:	add	w19, w19, w0
    8648:	ldrsw	x0, [sp, #236]
    864c:	add	x0, x0, #0x30
    8650:	lsl	x0, x0, #1
    8654:	ldr	x1, [sp, #168]
    8658:	add	x0, x1, x0
    865c:	ldrh	w22, [x0]
    8660:	mov	w0, w22
    8664:	ldr	x1, [sp, #56]
    8668:	sxtw	x0, w0
    866c:	add	x0, x0, #0xc9b
    8670:	lsl	x0, x0, #4
    8674:	add	x0, x1, x0
    8678:	ldr	w0, [x0, #8]
    867c:	add	w21, w21, w0
    8680:	mov	w0, w22
    8684:	ldr	x1, [sp, #56]
    8688:	sxtw	x0, w0
    868c:	lsl	x0, x0, #4
    8690:	add	x0, x1, x0
    8694:	add	x0, x0, #0xc, lsl #12
    8698:	ldr	w0, [x0, #2492]
    869c:	add	w20, w20, w0
    86a0:	mov	w0, w22
    86a4:	ldr	x1, [sp, #56]
    86a8:	sxtw	x0, w0
    86ac:	lsl	x0, x0, #4
    86b0:	add	x0, x1, x0
    86b4:	add	x0, x0, #0xc, lsl #12
    86b8:	ldr	w0, [x0, #2496]
    86bc:	add	w19, w19, w0
    86c0:	ldrsw	x0, [sp, #236]
    86c4:	add	x0, x0, #0x31
    86c8:	lsl	x0, x0, #1
    86cc:	ldr	x1, [sp, #168]
    86d0:	add	x0, x1, x0
    86d4:	ldrh	w22, [x0]
    86d8:	mov	w0, w22
    86dc:	ldr	x1, [sp, #56]
    86e0:	sxtw	x0, w0
    86e4:	add	x0, x0, #0xc9b
    86e8:	lsl	x0, x0, #4
    86ec:	add	x0, x1, x0
    86f0:	ldr	w0, [x0, #8]
    86f4:	add	w21, w21, w0
    86f8:	mov	w0, w22
    86fc:	ldr	x1, [sp, #56]
    8700:	sxtw	x0, w0
    8704:	lsl	x0, x0, #4
    8708:	add	x0, x1, x0
    870c:	add	x0, x0, #0xc, lsl #12
    8710:	ldr	w0, [x0, #2492]
    8714:	add	w20, w20, w0
    8718:	mov	w0, w22
    871c:	ldr	x1, [sp, #56]
    8720:	sxtw	x0, w0
    8724:	lsl	x0, x0, #4
    8728:	add	x0, x1, x0
    872c:	add	x0, x0, #0xc, lsl #12
    8730:	ldr	w0, [x0, #2496]
    8734:	add	w19, w19, w0
    8738:	and	w0, w21, #0xffff
    873c:	strh	w0, [sp, #120]
    8740:	lsr	w0, w21, #16
    8744:	and	w0, w0, #0xffff
    8748:	strh	w0, [sp, #122]
    874c:	and	w0, w20, #0xffff
    8750:	strh	w0, [sp, #124]
    8754:	lsr	w0, w20, #16
    8758:	and	w0, w0, #0xffff
    875c:	strh	w0, [sp, #126]
    8760:	and	w0, w19, #0xffff
    8764:	strh	w0, [sp, #128]
    8768:	lsr	w0, w19, #16
    876c:	and	w0, w0, #0xffff
    8770:	strh	w0, [sp, #130]
    8774:	b	8838 <BZ2_bsInitWrite@@Base+0x25ac>
    8778:	ldr	w0, [sp, #236]
    877c:	str	w0, [sp, #244]
    8780:	b	8828 <BZ2_bsInitWrite@@Base+0x259c>
    8784:	ldrsw	x0, [sp, #244]
    8788:	lsl	x0, x0, #1
    878c:	ldr	x1, [sp, #168]
    8790:	add	x0, x1, x0
    8794:	ldrh	w0, [x0]
    8798:	strh	w0, [sp, #138]
    879c:	str	wzr, [sp, #248]
    87a0:	b	880c <BZ2_bsInitWrite@@Base+0x2580>
    87a4:	ldrsw	x0, [sp, #248]
    87a8:	lsl	x0, x0, #1
    87ac:	add	x1, sp, #0x78
    87b0:	ldrh	w2, [x1, x0]
    87b4:	ldrh	w0, [sp, #138]
    87b8:	ldr	x4, [sp, #56]
    87bc:	sxtw	x3, w0
    87c0:	ldrsw	x1, [sp, #248]
    87c4:	mov	x0, x1
    87c8:	lsl	x0, x0, #7
    87cc:	add	x0, x0, x1
    87d0:	lsl	x0, x0, #1
    87d4:	add	x0, x4, x0
    87d8:	add	x0, x0, x3
    87dc:	add	x0, x0, #0x9, lsl #12
    87e0:	ldrb	w0, [x0, #844]
    87e4:	and	w0, w0, #0xffff
    87e8:	add	w0, w2, w0
    87ec:	and	w2, w0, #0xffff
    87f0:	ldrsw	x0, [sp, #248]
    87f4:	lsl	x0, x0, #1
    87f8:	add	x1, sp, #0x78
    87fc:	strh	w2, [x1, x0]
    8800:	ldr	w0, [sp, #248]
    8804:	add	w0, w0, #0x1
    8808:	str	w0, [sp, #248]
    880c:	ldr	w1, [sp, #248]
    8810:	ldr	w0, [sp, #196]
    8814:	cmp	w1, w0
    8818:	b.lt	87a4 <BZ2_bsInitWrite@@Base+0x2518>  // b.tstop
    881c:	ldr	w0, [sp, #244]
    8820:	add	w0, w0, #0x1
    8824:	str	w0, [sp, #244]
    8828:	ldr	w1, [sp, #244]
    882c:	ldr	w0, [sp, #232]
    8830:	cmp	w1, w0
    8834:	b.le	8784 <BZ2_bsInitWrite@@Base+0x24f8>
    8838:	mov	w0, #0xc9ff                	// #51711
    883c:	movk	w0, #0x3b9a, lsl #16
    8840:	str	w0, [sp, #220]
    8844:	mov	w0, #0xffffffff            	// #-1
    8848:	str	w0, [sp, #224]
    884c:	str	wzr, [sp, #248]
    8850:	b	889c <BZ2_bsInitWrite@@Base+0x2610>
    8854:	ldrsw	x0, [sp, #248]
    8858:	lsl	x0, x0, #1
    885c:	add	x1, sp, #0x78
    8860:	ldrh	w0, [x1, x0]
    8864:	mov	w1, w0
    8868:	ldr	w0, [sp, #220]
    886c:	cmp	w0, w1
    8870:	b.le	8890 <BZ2_bsInitWrite@@Base+0x2604>
    8874:	ldrsw	x0, [sp, #248]
    8878:	lsl	x0, x0, #1
    887c:	add	x1, sp, #0x78
    8880:	ldrh	w0, [x1, x0]
    8884:	str	w0, [sp, #220]
    8888:	ldr	w0, [sp, #248]
    888c:	str	w0, [sp, #224]
    8890:	ldr	w0, [sp, #248]
    8894:	add	w0, w0, #0x1
    8898:	str	w0, [sp, #248]
    889c:	ldr	w1, [sp, #248]
    88a0:	ldr	w0, [sp, #196]
    88a4:	cmp	w1, w0
    88a8:	b.lt	8854 <BZ2_bsInitWrite@@Base+0x25c8>  // b.tstop
    88ac:	ldr	w1, [sp, #228]
    88b0:	ldr	w0, [sp, #220]
    88b4:	add	w0, w1, w0
    88b8:	str	w0, [sp, #228]
    88bc:	ldrsw	x0, [sp, #224]
    88c0:	lsl	x0, x0, #2
    88c4:	add	x1, sp, #0x60
    88c8:	ldr	w0, [x1, x0]
    88cc:	add	w2, w0, #0x1
    88d0:	ldrsw	x0, [sp, #224]
    88d4:	lsl	x0, x0, #2
    88d8:	add	x1, sp, #0x60
    88dc:	str	w2, [x1, x0]
    88e0:	ldr	w0, [sp, #224]
    88e4:	and	w2, w0, #0xff
    88e8:	ldr	x1, [sp, #56]
    88ec:	ldrsw	x0, [sp, #212]
    88f0:	add	x0, x1, x0
    88f4:	mov	w1, w2
    88f8:	strb	w1, [x0, #1704]
    88fc:	ldr	w0, [sp, #212]
    8900:	add	w0, w0, #0x1
    8904:	str	w0, [sp, #212]
    8908:	ldr	w0, [sp, #196]
    890c:	cmp	w0, #0x6
    8910:	b.ne	a3b8 <BZ2_bsInitWrite@@Base+0x412c>  // b.any
    8914:	ldr	w1, [sp, #232]
    8918:	ldr	w0, [sp, #236]
    891c:	sub	w0, w1, w0
    8920:	cmp	w0, #0x31
    8924:	b.ne	a3b8 <BZ2_bsInitWrite@@Base+0x412c>  // b.any
    8928:	ldrsw	x0, [sp, #236]
    892c:	lsl	x0, x0, #1
    8930:	ldr	x1, [sp, #168]
    8934:	add	x0, x1, x0
    8938:	ldrh	w0, [x0]
    893c:	mov	w4, w0
    8940:	ldr	x2, [sp, #56]
    8944:	sxtw	x3, w4
    8948:	ldrsw	x1, [sp, #224]
    894c:	mov	x0, x1
    8950:	lsl	x0, x0, #7
    8954:	add	x0, x0, x1
    8958:	lsl	x0, x0, #1
    895c:	add	x1, x0, x3
    8960:	mov	x0, #0x2c60                	// #11360
    8964:	add	x0, x1, x0
    8968:	lsl	x0, x0, #2
    896c:	add	x0, x2, x0
    8970:	ldr	w0, [x0, #8]
    8974:	add	w2, w0, #0x1
    8978:	ldr	x3, [sp, #56]
    897c:	sxtw	x4, w4
    8980:	ldrsw	x1, [sp, #224]
    8984:	mov	x0, x1
    8988:	lsl	x0, x0, #7
    898c:	add	x0, x0, x1
    8990:	lsl	x0, x0, #1
    8994:	add	x1, x0, x4
    8998:	mov	x0, #0x2c60                	// #11360
    899c:	add	x0, x1, x0
    89a0:	lsl	x0, x0, #2
    89a4:	add	x0, x3, x0
    89a8:	str	w2, [x0, #8]
    89ac:	ldrsw	x0, [sp, #236]
    89b0:	add	x0, x0, #0x1
    89b4:	lsl	x0, x0, #1
    89b8:	ldr	x1, [sp, #168]
    89bc:	add	x0, x1, x0
    89c0:	ldrh	w0, [x0]
    89c4:	mov	w4, w0
    89c8:	ldr	x2, [sp, #56]
    89cc:	sxtw	x3, w4
    89d0:	ldrsw	x1, [sp, #224]
    89d4:	mov	x0, x1
    89d8:	lsl	x0, x0, #7
    89dc:	add	x0, x0, x1
    89e0:	lsl	x0, x0, #1
    89e4:	add	x1, x0, x3
    89e8:	mov	x0, #0x2c60                	// #11360
    89ec:	add	x0, x1, x0
    89f0:	lsl	x0, x0, #2
    89f4:	add	x0, x2, x0
    89f8:	ldr	w0, [x0, #8]
    89fc:	add	w2, w0, #0x1
    8a00:	ldr	x3, [sp, #56]
    8a04:	sxtw	x4, w4
    8a08:	ldrsw	x1, [sp, #224]
    8a0c:	mov	x0, x1
    8a10:	lsl	x0, x0, #7
    8a14:	add	x0, x0, x1
    8a18:	lsl	x0, x0, #1
    8a1c:	add	x1, x0, x4
    8a20:	mov	x0, #0x2c60                	// #11360
    8a24:	add	x0, x1, x0
    8a28:	lsl	x0, x0, #2
    8a2c:	add	x0, x3, x0
    8a30:	str	w2, [x0, #8]
    8a34:	ldrsw	x0, [sp, #236]
    8a38:	add	x0, x0, #0x2
    8a3c:	lsl	x0, x0, #1
    8a40:	ldr	x1, [sp, #168]
    8a44:	add	x0, x1, x0
    8a48:	ldrh	w0, [x0]
    8a4c:	mov	w4, w0
    8a50:	ldr	x2, [sp, #56]
    8a54:	sxtw	x3, w4
    8a58:	ldrsw	x1, [sp, #224]
    8a5c:	mov	x0, x1
    8a60:	lsl	x0, x0, #7
    8a64:	add	x0, x0, x1
    8a68:	lsl	x0, x0, #1
    8a6c:	add	x1, x0, x3
    8a70:	mov	x0, #0x2c60                	// #11360
    8a74:	add	x0, x1, x0
    8a78:	lsl	x0, x0, #2
    8a7c:	add	x0, x2, x0
    8a80:	ldr	w0, [x0, #8]
    8a84:	add	w2, w0, #0x1
    8a88:	ldr	x3, [sp, #56]
    8a8c:	sxtw	x4, w4
    8a90:	ldrsw	x1, [sp, #224]
    8a94:	mov	x0, x1
    8a98:	lsl	x0, x0, #7
    8a9c:	add	x0, x0, x1
    8aa0:	lsl	x0, x0, #1
    8aa4:	add	x1, x0, x4
    8aa8:	mov	x0, #0x2c60                	// #11360
    8aac:	add	x0, x1, x0
    8ab0:	lsl	x0, x0, #2
    8ab4:	add	x0, x3, x0
    8ab8:	str	w2, [x0, #8]
    8abc:	ldrsw	x0, [sp, #236]
    8ac0:	add	x0, x0, #0x3
    8ac4:	lsl	x0, x0, #1
    8ac8:	ldr	x1, [sp, #168]
    8acc:	add	x0, x1, x0
    8ad0:	ldrh	w0, [x0]
    8ad4:	mov	w4, w0
    8ad8:	ldr	x2, [sp, #56]
    8adc:	sxtw	x3, w4
    8ae0:	ldrsw	x1, [sp, #224]
    8ae4:	mov	x0, x1
    8ae8:	lsl	x0, x0, #7
    8aec:	add	x0, x0, x1
    8af0:	lsl	x0, x0, #1
    8af4:	add	x1, x0, x3
    8af8:	mov	x0, #0x2c60                	// #11360
    8afc:	add	x0, x1, x0
    8b00:	lsl	x0, x0, #2
    8b04:	add	x0, x2, x0
    8b08:	ldr	w0, [x0, #8]
    8b0c:	add	w2, w0, #0x1
    8b10:	ldr	x3, [sp, #56]
    8b14:	sxtw	x4, w4
    8b18:	ldrsw	x1, [sp, #224]
    8b1c:	mov	x0, x1
    8b20:	lsl	x0, x0, #7
    8b24:	add	x0, x0, x1
    8b28:	lsl	x0, x0, #1
    8b2c:	add	x1, x0, x4
    8b30:	mov	x0, #0x2c60                	// #11360
    8b34:	add	x0, x1, x0
    8b38:	lsl	x0, x0, #2
    8b3c:	add	x0, x3, x0
    8b40:	str	w2, [x0, #8]
    8b44:	ldrsw	x0, [sp, #236]
    8b48:	add	x0, x0, #0x4
    8b4c:	lsl	x0, x0, #1
    8b50:	ldr	x1, [sp, #168]
    8b54:	add	x0, x1, x0
    8b58:	ldrh	w0, [x0]
    8b5c:	mov	w4, w0
    8b60:	ldr	x2, [sp, #56]
    8b64:	sxtw	x3, w4
    8b68:	ldrsw	x1, [sp, #224]
    8b6c:	mov	x0, x1
    8b70:	lsl	x0, x0, #7
    8b74:	add	x0, x0, x1
    8b78:	lsl	x0, x0, #1
    8b7c:	add	x1, x0, x3
    8b80:	mov	x0, #0x2c60                	// #11360
    8b84:	add	x0, x1, x0
    8b88:	lsl	x0, x0, #2
    8b8c:	add	x0, x2, x0
    8b90:	ldr	w0, [x0, #8]
    8b94:	add	w2, w0, #0x1
    8b98:	ldr	x3, [sp, #56]
    8b9c:	sxtw	x4, w4
    8ba0:	ldrsw	x1, [sp, #224]
    8ba4:	mov	x0, x1
    8ba8:	lsl	x0, x0, #7
    8bac:	add	x0, x0, x1
    8bb0:	lsl	x0, x0, #1
    8bb4:	add	x1, x0, x4
    8bb8:	mov	x0, #0x2c60                	// #11360
    8bbc:	add	x0, x1, x0
    8bc0:	lsl	x0, x0, #2
    8bc4:	add	x0, x3, x0
    8bc8:	str	w2, [x0, #8]
    8bcc:	ldrsw	x0, [sp, #236]
    8bd0:	add	x0, x0, #0x5
    8bd4:	lsl	x0, x0, #1
    8bd8:	ldr	x1, [sp, #168]
    8bdc:	add	x0, x1, x0
    8be0:	ldrh	w0, [x0]
    8be4:	mov	w4, w0
    8be8:	ldr	x2, [sp, #56]
    8bec:	sxtw	x3, w4
    8bf0:	ldrsw	x1, [sp, #224]
    8bf4:	mov	x0, x1
    8bf8:	lsl	x0, x0, #7
    8bfc:	add	x0, x0, x1
    8c00:	lsl	x0, x0, #1
    8c04:	add	x1, x0, x3
    8c08:	mov	x0, #0x2c60                	// #11360
    8c0c:	add	x0, x1, x0
    8c10:	lsl	x0, x0, #2
    8c14:	add	x0, x2, x0
    8c18:	ldr	w0, [x0, #8]
    8c1c:	add	w2, w0, #0x1
    8c20:	ldr	x3, [sp, #56]
    8c24:	sxtw	x4, w4
    8c28:	ldrsw	x1, [sp, #224]
    8c2c:	mov	x0, x1
    8c30:	lsl	x0, x0, #7
    8c34:	add	x0, x0, x1
    8c38:	lsl	x0, x0, #1
    8c3c:	add	x1, x0, x4
    8c40:	mov	x0, #0x2c60                	// #11360
    8c44:	add	x0, x1, x0
    8c48:	lsl	x0, x0, #2
    8c4c:	add	x0, x3, x0
    8c50:	str	w2, [x0, #8]
    8c54:	ldrsw	x0, [sp, #236]
    8c58:	add	x0, x0, #0x6
    8c5c:	lsl	x0, x0, #1
    8c60:	ldr	x1, [sp, #168]
    8c64:	add	x0, x1, x0
    8c68:	ldrh	w0, [x0]
    8c6c:	mov	w4, w0
    8c70:	ldr	x2, [sp, #56]
    8c74:	sxtw	x3, w4
    8c78:	ldrsw	x1, [sp, #224]
    8c7c:	mov	x0, x1
    8c80:	lsl	x0, x0, #7
    8c84:	add	x0, x0, x1
    8c88:	lsl	x0, x0, #1
    8c8c:	add	x1, x0, x3
    8c90:	mov	x0, #0x2c60                	// #11360
    8c94:	add	x0, x1, x0
    8c98:	lsl	x0, x0, #2
    8c9c:	add	x0, x2, x0
    8ca0:	ldr	w0, [x0, #8]
    8ca4:	add	w2, w0, #0x1
    8ca8:	ldr	x3, [sp, #56]
    8cac:	sxtw	x4, w4
    8cb0:	ldrsw	x1, [sp, #224]
    8cb4:	mov	x0, x1
    8cb8:	lsl	x0, x0, #7
    8cbc:	add	x0, x0, x1
    8cc0:	lsl	x0, x0, #1
    8cc4:	add	x1, x0, x4
    8cc8:	mov	x0, #0x2c60                	// #11360
    8ccc:	add	x0, x1, x0
    8cd0:	lsl	x0, x0, #2
    8cd4:	add	x0, x3, x0
    8cd8:	str	w2, [x0, #8]
    8cdc:	ldrsw	x0, [sp, #236]
    8ce0:	add	x0, x0, #0x7
    8ce4:	lsl	x0, x0, #1
    8ce8:	ldr	x1, [sp, #168]
    8cec:	add	x0, x1, x0
    8cf0:	ldrh	w0, [x0]
    8cf4:	mov	w4, w0
    8cf8:	ldr	x2, [sp, #56]
    8cfc:	sxtw	x3, w4
    8d00:	ldrsw	x1, [sp, #224]
    8d04:	mov	x0, x1
    8d08:	lsl	x0, x0, #7
    8d0c:	add	x0, x0, x1
    8d10:	lsl	x0, x0, #1
    8d14:	add	x1, x0, x3
    8d18:	mov	x0, #0x2c60                	// #11360
    8d1c:	add	x0, x1, x0
    8d20:	lsl	x0, x0, #2
    8d24:	add	x0, x2, x0
    8d28:	ldr	w0, [x0, #8]
    8d2c:	add	w2, w0, #0x1
    8d30:	ldr	x3, [sp, #56]
    8d34:	sxtw	x4, w4
    8d38:	ldrsw	x1, [sp, #224]
    8d3c:	mov	x0, x1
    8d40:	lsl	x0, x0, #7
    8d44:	add	x0, x0, x1
    8d48:	lsl	x0, x0, #1
    8d4c:	add	x1, x0, x4
    8d50:	mov	x0, #0x2c60                	// #11360
    8d54:	add	x0, x1, x0
    8d58:	lsl	x0, x0, #2
    8d5c:	add	x0, x3, x0
    8d60:	str	w2, [x0, #8]
    8d64:	ldrsw	x0, [sp, #236]
    8d68:	add	x0, x0, #0x8
    8d6c:	lsl	x0, x0, #1
    8d70:	ldr	x1, [sp, #168]
    8d74:	add	x0, x1, x0
    8d78:	ldrh	w0, [x0]
    8d7c:	mov	w4, w0
    8d80:	ldr	x2, [sp, #56]
    8d84:	sxtw	x3, w4
    8d88:	ldrsw	x1, [sp, #224]
    8d8c:	mov	x0, x1
    8d90:	lsl	x0, x0, #7
    8d94:	add	x0, x0, x1
    8d98:	lsl	x0, x0, #1
    8d9c:	add	x1, x0, x3
    8da0:	mov	x0, #0x2c60                	// #11360
    8da4:	add	x0, x1, x0
    8da8:	lsl	x0, x0, #2
    8dac:	add	x0, x2, x0
    8db0:	ldr	w0, [x0, #8]
    8db4:	add	w2, w0, #0x1
    8db8:	ldr	x3, [sp, #56]
    8dbc:	sxtw	x4, w4
    8dc0:	ldrsw	x1, [sp, #224]
    8dc4:	mov	x0, x1
    8dc8:	lsl	x0, x0, #7
    8dcc:	add	x0, x0, x1
    8dd0:	lsl	x0, x0, #1
    8dd4:	add	x1, x0, x4
    8dd8:	mov	x0, #0x2c60                	// #11360
    8ddc:	add	x0, x1, x0
    8de0:	lsl	x0, x0, #2
    8de4:	add	x0, x3, x0
    8de8:	str	w2, [x0, #8]
    8dec:	ldrsw	x0, [sp, #236]
    8df0:	add	x0, x0, #0x9
    8df4:	lsl	x0, x0, #1
    8df8:	ldr	x1, [sp, #168]
    8dfc:	add	x0, x1, x0
    8e00:	ldrh	w0, [x0]
    8e04:	mov	w4, w0
    8e08:	ldr	x2, [sp, #56]
    8e0c:	sxtw	x3, w4
    8e10:	ldrsw	x1, [sp, #224]
    8e14:	mov	x0, x1
    8e18:	lsl	x0, x0, #7
    8e1c:	add	x0, x0, x1
    8e20:	lsl	x0, x0, #1
    8e24:	add	x1, x0, x3
    8e28:	mov	x0, #0x2c60                	// #11360
    8e2c:	add	x0, x1, x0
    8e30:	lsl	x0, x0, #2
    8e34:	add	x0, x2, x0
    8e38:	ldr	w0, [x0, #8]
    8e3c:	add	w2, w0, #0x1
    8e40:	ldr	x3, [sp, #56]
    8e44:	sxtw	x4, w4
    8e48:	ldrsw	x1, [sp, #224]
    8e4c:	mov	x0, x1
    8e50:	lsl	x0, x0, #7
    8e54:	add	x0, x0, x1
    8e58:	lsl	x0, x0, #1
    8e5c:	add	x1, x0, x4
    8e60:	mov	x0, #0x2c60                	// #11360
    8e64:	add	x0, x1, x0
    8e68:	lsl	x0, x0, #2
    8e6c:	add	x0, x3, x0
    8e70:	str	w2, [x0, #8]
    8e74:	ldrsw	x0, [sp, #236]
    8e78:	add	x0, x0, #0xa
    8e7c:	lsl	x0, x0, #1
    8e80:	ldr	x1, [sp, #168]
    8e84:	add	x0, x1, x0
    8e88:	ldrh	w0, [x0]
    8e8c:	mov	w4, w0
    8e90:	ldr	x2, [sp, #56]
    8e94:	sxtw	x3, w4
    8e98:	ldrsw	x1, [sp, #224]
    8e9c:	mov	x0, x1
    8ea0:	lsl	x0, x0, #7
    8ea4:	add	x0, x0, x1
    8ea8:	lsl	x0, x0, #1
    8eac:	add	x1, x0, x3
    8eb0:	mov	x0, #0x2c60                	// #11360
    8eb4:	add	x0, x1, x0
    8eb8:	lsl	x0, x0, #2
    8ebc:	add	x0, x2, x0
    8ec0:	ldr	w0, [x0, #8]
    8ec4:	add	w2, w0, #0x1
    8ec8:	ldr	x3, [sp, #56]
    8ecc:	sxtw	x4, w4
    8ed0:	ldrsw	x1, [sp, #224]
    8ed4:	mov	x0, x1
    8ed8:	lsl	x0, x0, #7
    8edc:	add	x0, x0, x1
    8ee0:	lsl	x0, x0, #1
    8ee4:	add	x1, x0, x4
    8ee8:	mov	x0, #0x2c60                	// #11360
    8eec:	add	x0, x1, x0
    8ef0:	lsl	x0, x0, #2
    8ef4:	add	x0, x3, x0
    8ef8:	str	w2, [x0, #8]
    8efc:	ldrsw	x0, [sp, #236]
    8f00:	add	x0, x0, #0xb
    8f04:	lsl	x0, x0, #1
    8f08:	ldr	x1, [sp, #168]
    8f0c:	add	x0, x1, x0
    8f10:	ldrh	w0, [x0]
    8f14:	mov	w4, w0
    8f18:	ldr	x2, [sp, #56]
    8f1c:	sxtw	x3, w4
    8f20:	ldrsw	x1, [sp, #224]
    8f24:	mov	x0, x1
    8f28:	lsl	x0, x0, #7
    8f2c:	add	x0, x0, x1
    8f30:	lsl	x0, x0, #1
    8f34:	add	x1, x0, x3
    8f38:	mov	x0, #0x2c60                	// #11360
    8f3c:	add	x0, x1, x0
    8f40:	lsl	x0, x0, #2
    8f44:	add	x0, x2, x0
    8f48:	ldr	w0, [x0, #8]
    8f4c:	add	w2, w0, #0x1
    8f50:	ldr	x3, [sp, #56]
    8f54:	sxtw	x4, w4
    8f58:	ldrsw	x1, [sp, #224]
    8f5c:	mov	x0, x1
    8f60:	lsl	x0, x0, #7
    8f64:	add	x0, x0, x1
    8f68:	lsl	x0, x0, #1
    8f6c:	add	x1, x0, x4
    8f70:	mov	x0, #0x2c60                	// #11360
    8f74:	add	x0, x1, x0
    8f78:	lsl	x0, x0, #2
    8f7c:	add	x0, x3, x0
    8f80:	str	w2, [x0, #8]
    8f84:	ldrsw	x0, [sp, #236]
    8f88:	add	x0, x0, #0xc
    8f8c:	lsl	x0, x0, #1
    8f90:	ldr	x1, [sp, #168]
    8f94:	add	x0, x1, x0
    8f98:	ldrh	w0, [x0]
    8f9c:	mov	w4, w0
    8fa0:	ldr	x2, [sp, #56]
    8fa4:	sxtw	x3, w4
    8fa8:	ldrsw	x1, [sp, #224]
    8fac:	mov	x0, x1
    8fb0:	lsl	x0, x0, #7
    8fb4:	add	x0, x0, x1
    8fb8:	lsl	x0, x0, #1
    8fbc:	add	x1, x0, x3
    8fc0:	mov	x0, #0x2c60                	// #11360
    8fc4:	add	x0, x1, x0
    8fc8:	lsl	x0, x0, #2
    8fcc:	add	x0, x2, x0
    8fd0:	ldr	w0, [x0, #8]
    8fd4:	add	w2, w0, #0x1
    8fd8:	ldr	x3, [sp, #56]
    8fdc:	sxtw	x4, w4
    8fe0:	ldrsw	x1, [sp, #224]
    8fe4:	mov	x0, x1
    8fe8:	lsl	x0, x0, #7
    8fec:	add	x0, x0, x1
    8ff0:	lsl	x0, x0, #1
    8ff4:	add	x1, x0, x4
    8ff8:	mov	x0, #0x2c60                	// #11360
    8ffc:	add	x0, x1, x0
    9000:	lsl	x0, x0, #2
    9004:	add	x0, x3, x0
    9008:	str	w2, [x0, #8]
    900c:	ldrsw	x0, [sp, #236]
    9010:	add	x0, x0, #0xd
    9014:	lsl	x0, x0, #1
    9018:	ldr	x1, [sp, #168]
    901c:	add	x0, x1, x0
    9020:	ldrh	w0, [x0]
    9024:	mov	w4, w0
    9028:	ldr	x2, [sp, #56]
    902c:	sxtw	x3, w4
    9030:	ldrsw	x1, [sp, #224]
    9034:	mov	x0, x1
    9038:	lsl	x0, x0, #7
    903c:	add	x0, x0, x1
    9040:	lsl	x0, x0, #1
    9044:	add	x1, x0, x3
    9048:	mov	x0, #0x2c60                	// #11360
    904c:	add	x0, x1, x0
    9050:	lsl	x0, x0, #2
    9054:	add	x0, x2, x0
    9058:	ldr	w0, [x0, #8]
    905c:	add	w2, w0, #0x1
    9060:	ldr	x3, [sp, #56]
    9064:	sxtw	x4, w4
    9068:	ldrsw	x1, [sp, #224]
    906c:	mov	x0, x1
    9070:	lsl	x0, x0, #7
    9074:	add	x0, x0, x1
    9078:	lsl	x0, x0, #1
    907c:	add	x1, x0, x4
    9080:	mov	x0, #0x2c60                	// #11360
    9084:	add	x0, x1, x0
    9088:	lsl	x0, x0, #2
    908c:	add	x0, x3, x0
    9090:	str	w2, [x0, #8]
    9094:	ldrsw	x0, [sp, #236]
    9098:	add	x0, x0, #0xe
    909c:	lsl	x0, x0, #1
    90a0:	ldr	x1, [sp, #168]
    90a4:	add	x0, x1, x0
    90a8:	ldrh	w0, [x0]
    90ac:	mov	w4, w0
    90b0:	ldr	x2, [sp, #56]
    90b4:	sxtw	x3, w4
    90b8:	ldrsw	x1, [sp, #224]
    90bc:	mov	x0, x1
    90c0:	lsl	x0, x0, #7
    90c4:	add	x0, x0, x1
    90c8:	lsl	x0, x0, #1
    90cc:	add	x1, x0, x3
    90d0:	mov	x0, #0x2c60                	// #11360
    90d4:	add	x0, x1, x0
    90d8:	lsl	x0, x0, #2
    90dc:	add	x0, x2, x0
    90e0:	ldr	w0, [x0, #8]
    90e4:	add	w2, w0, #0x1
    90e8:	ldr	x3, [sp, #56]
    90ec:	sxtw	x4, w4
    90f0:	ldrsw	x1, [sp, #224]
    90f4:	mov	x0, x1
    90f8:	lsl	x0, x0, #7
    90fc:	add	x0, x0, x1
    9100:	lsl	x0, x0, #1
    9104:	add	x1, x0, x4
    9108:	mov	x0, #0x2c60                	// #11360
    910c:	add	x0, x1, x0
    9110:	lsl	x0, x0, #2
    9114:	add	x0, x3, x0
    9118:	str	w2, [x0, #8]
    911c:	ldrsw	x0, [sp, #236]
    9120:	add	x0, x0, #0xf
    9124:	lsl	x0, x0, #1
    9128:	ldr	x1, [sp, #168]
    912c:	add	x0, x1, x0
    9130:	ldrh	w0, [x0]
    9134:	mov	w4, w0
    9138:	ldr	x2, [sp, #56]
    913c:	sxtw	x3, w4
    9140:	ldrsw	x1, [sp, #224]
    9144:	mov	x0, x1
    9148:	lsl	x0, x0, #7
    914c:	add	x0, x0, x1
    9150:	lsl	x0, x0, #1
    9154:	add	x1, x0, x3
    9158:	mov	x0, #0x2c60                	// #11360
    915c:	add	x0, x1, x0
    9160:	lsl	x0, x0, #2
    9164:	add	x0, x2, x0
    9168:	ldr	w0, [x0, #8]
    916c:	add	w2, w0, #0x1
    9170:	ldr	x3, [sp, #56]
    9174:	sxtw	x4, w4
    9178:	ldrsw	x1, [sp, #224]
    917c:	mov	x0, x1
    9180:	lsl	x0, x0, #7
    9184:	add	x0, x0, x1
    9188:	lsl	x0, x0, #1
    918c:	add	x1, x0, x4
    9190:	mov	x0, #0x2c60                	// #11360
    9194:	add	x0, x1, x0
    9198:	lsl	x0, x0, #2
    919c:	add	x0, x3, x0
    91a0:	str	w2, [x0, #8]
    91a4:	ldrsw	x0, [sp, #236]
    91a8:	add	x0, x0, #0x10
    91ac:	lsl	x0, x0, #1
    91b0:	ldr	x1, [sp, #168]
    91b4:	add	x0, x1, x0
    91b8:	ldrh	w0, [x0]
    91bc:	mov	w4, w0
    91c0:	ldr	x2, [sp, #56]
    91c4:	sxtw	x3, w4
    91c8:	ldrsw	x1, [sp, #224]
    91cc:	mov	x0, x1
    91d0:	lsl	x0, x0, #7
    91d4:	add	x0, x0, x1
    91d8:	lsl	x0, x0, #1
    91dc:	add	x1, x0, x3
    91e0:	mov	x0, #0x2c60                	// #11360
    91e4:	add	x0, x1, x0
    91e8:	lsl	x0, x0, #2
    91ec:	add	x0, x2, x0
    91f0:	ldr	w0, [x0, #8]
    91f4:	add	w2, w0, #0x1
    91f8:	ldr	x3, [sp, #56]
    91fc:	sxtw	x4, w4
    9200:	ldrsw	x1, [sp, #224]
    9204:	mov	x0, x1
    9208:	lsl	x0, x0, #7
    920c:	add	x0, x0, x1
    9210:	lsl	x0, x0, #1
    9214:	add	x1, x0, x4
    9218:	mov	x0, #0x2c60                	// #11360
    921c:	add	x0, x1, x0
    9220:	lsl	x0, x0, #2
    9224:	add	x0, x3, x0
    9228:	str	w2, [x0, #8]
    922c:	ldrsw	x0, [sp, #236]
    9230:	add	x0, x0, #0x11
    9234:	lsl	x0, x0, #1
    9238:	ldr	x1, [sp, #168]
    923c:	add	x0, x1, x0
    9240:	ldrh	w0, [x0]
    9244:	mov	w4, w0
    9248:	ldr	x2, [sp, #56]
    924c:	sxtw	x3, w4
    9250:	ldrsw	x1, [sp, #224]
    9254:	mov	x0, x1
    9258:	lsl	x0, x0, #7
    925c:	add	x0, x0, x1
    9260:	lsl	x0, x0, #1
    9264:	add	x1, x0, x3
    9268:	mov	x0, #0x2c60                	// #11360
    926c:	add	x0, x1, x0
    9270:	lsl	x0, x0, #2
    9274:	add	x0, x2, x0
    9278:	ldr	w0, [x0, #8]
    927c:	add	w2, w0, #0x1
    9280:	ldr	x3, [sp, #56]
    9284:	sxtw	x4, w4
    9288:	ldrsw	x1, [sp, #224]
    928c:	mov	x0, x1
    9290:	lsl	x0, x0, #7
    9294:	add	x0, x0, x1
    9298:	lsl	x0, x0, #1
    929c:	add	x1, x0, x4
    92a0:	mov	x0, #0x2c60                	// #11360
    92a4:	add	x0, x1, x0
    92a8:	lsl	x0, x0, #2
    92ac:	add	x0, x3, x0
    92b0:	str	w2, [x0, #8]
    92b4:	ldrsw	x0, [sp, #236]
    92b8:	add	x0, x0, #0x12
    92bc:	lsl	x0, x0, #1
    92c0:	ldr	x1, [sp, #168]
    92c4:	add	x0, x1, x0
    92c8:	ldrh	w0, [x0]
    92cc:	mov	w4, w0
    92d0:	ldr	x2, [sp, #56]
    92d4:	sxtw	x3, w4
    92d8:	ldrsw	x1, [sp, #224]
    92dc:	mov	x0, x1
    92e0:	lsl	x0, x0, #7
    92e4:	add	x0, x0, x1
    92e8:	lsl	x0, x0, #1
    92ec:	add	x1, x0, x3
    92f0:	mov	x0, #0x2c60                	// #11360
    92f4:	add	x0, x1, x0
    92f8:	lsl	x0, x0, #2
    92fc:	add	x0, x2, x0
    9300:	ldr	w0, [x0, #8]
    9304:	add	w2, w0, #0x1
    9308:	ldr	x3, [sp, #56]
    930c:	sxtw	x4, w4
    9310:	ldrsw	x1, [sp, #224]
    9314:	mov	x0, x1
    9318:	lsl	x0, x0, #7
    931c:	add	x0, x0, x1
    9320:	lsl	x0, x0, #1
    9324:	add	x1, x0, x4
    9328:	mov	x0, #0x2c60                	// #11360
    932c:	add	x0, x1, x0
    9330:	lsl	x0, x0, #2
    9334:	add	x0, x3, x0
    9338:	str	w2, [x0, #8]
    933c:	ldrsw	x0, [sp, #236]
    9340:	add	x0, x0, #0x13
    9344:	lsl	x0, x0, #1
    9348:	ldr	x1, [sp, #168]
    934c:	add	x0, x1, x0
    9350:	ldrh	w0, [x0]
    9354:	mov	w4, w0
    9358:	ldr	x2, [sp, #56]
    935c:	sxtw	x3, w4
    9360:	ldrsw	x1, [sp, #224]
    9364:	mov	x0, x1
    9368:	lsl	x0, x0, #7
    936c:	add	x0, x0, x1
    9370:	lsl	x0, x0, #1
    9374:	add	x1, x0, x3
    9378:	mov	x0, #0x2c60                	// #11360
    937c:	add	x0, x1, x0
    9380:	lsl	x0, x0, #2
    9384:	add	x0, x2, x0
    9388:	ldr	w0, [x0, #8]
    938c:	add	w2, w0, #0x1
    9390:	ldr	x3, [sp, #56]
    9394:	sxtw	x4, w4
    9398:	ldrsw	x1, [sp, #224]
    939c:	mov	x0, x1
    93a0:	lsl	x0, x0, #7
    93a4:	add	x0, x0, x1
    93a8:	lsl	x0, x0, #1
    93ac:	add	x1, x0, x4
    93b0:	mov	x0, #0x2c60                	// #11360
    93b4:	add	x0, x1, x0
    93b8:	lsl	x0, x0, #2
    93bc:	add	x0, x3, x0
    93c0:	str	w2, [x0, #8]
    93c4:	ldrsw	x0, [sp, #236]
    93c8:	add	x0, x0, #0x14
    93cc:	lsl	x0, x0, #1
    93d0:	ldr	x1, [sp, #168]
    93d4:	add	x0, x1, x0
    93d8:	ldrh	w0, [x0]
    93dc:	mov	w4, w0
    93e0:	ldr	x2, [sp, #56]
    93e4:	sxtw	x3, w4
    93e8:	ldrsw	x1, [sp, #224]
    93ec:	mov	x0, x1
    93f0:	lsl	x0, x0, #7
    93f4:	add	x0, x0, x1
    93f8:	lsl	x0, x0, #1
    93fc:	add	x1, x0, x3
    9400:	mov	x0, #0x2c60                	// #11360
    9404:	add	x0, x1, x0
    9408:	lsl	x0, x0, #2
    940c:	add	x0, x2, x0
    9410:	ldr	w0, [x0, #8]
    9414:	add	w2, w0, #0x1
    9418:	ldr	x3, [sp, #56]
    941c:	sxtw	x4, w4
    9420:	ldrsw	x1, [sp, #224]
    9424:	mov	x0, x1
    9428:	lsl	x0, x0, #7
    942c:	add	x0, x0, x1
    9430:	lsl	x0, x0, #1
    9434:	add	x1, x0, x4
    9438:	mov	x0, #0x2c60                	// #11360
    943c:	add	x0, x1, x0
    9440:	lsl	x0, x0, #2
    9444:	add	x0, x3, x0
    9448:	str	w2, [x0, #8]
    944c:	ldrsw	x0, [sp, #236]
    9450:	add	x0, x0, #0x15
    9454:	lsl	x0, x0, #1
    9458:	ldr	x1, [sp, #168]
    945c:	add	x0, x1, x0
    9460:	ldrh	w0, [x0]
    9464:	mov	w4, w0
    9468:	ldr	x2, [sp, #56]
    946c:	sxtw	x3, w4
    9470:	ldrsw	x1, [sp, #224]
    9474:	mov	x0, x1
    9478:	lsl	x0, x0, #7
    947c:	add	x0, x0, x1
    9480:	lsl	x0, x0, #1
    9484:	add	x1, x0, x3
    9488:	mov	x0, #0x2c60                	// #11360
    948c:	add	x0, x1, x0
    9490:	lsl	x0, x0, #2
    9494:	add	x0, x2, x0
    9498:	ldr	w0, [x0, #8]
    949c:	add	w2, w0, #0x1
    94a0:	ldr	x3, [sp, #56]
    94a4:	sxtw	x4, w4
    94a8:	ldrsw	x1, [sp, #224]
    94ac:	mov	x0, x1
    94b0:	lsl	x0, x0, #7
    94b4:	add	x0, x0, x1
    94b8:	lsl	x0, x0, #1
    94bc:	add	x1, x0, x4
    94c0:	mov	x0, #0x2c60                	// #11360
    94c4:	add	x0, x1, x0
    94c8:	lsl	x0, x0, #2
    94cc:	add	x0, x3, x0
    94d0:	str	w2, [x0, #8]
    94d4:	ldrsw	x0, [sp, #236]
    94d8:	add	x0, x0, #0x16
    94dc:	lsl	x0, x0, #1
    94e0:	ldr	x1, [sp, #168]
    94e4:	add	x0, x1, x0
    94e8:	ldrh	w0, [x0]
    94ec:	mov	w4, w0
    94f0:	ldr	x2, [sp, #56]
    94f4:	sxtw	x3, w4
    94f8:	ldrsw	x1, [sp, #224]
    94fc:	mov	x0, x1
    9500:	lsl	x0, x0, #7
    9504:	add	x0, x0, x1
    9508:	lsl	x0, x0, #1
    950c:	add	x1, x0, x3
    9510:	mov	x0, #0x2c60                	// #11360
    9514:	add	x0, x1, x0
    9518:	lsl	x0, x0, #2
    951c:	add	x0, x2, x0
    9520:	ldr	w0, [x0, #8]
    9524:	add	w2, w0, #0x1
    9528:	ldr	x3, [sp, #56]
    952c:	sxtw	x4, w4
    9530:	ldrsw	x1, [sp, #224]
    9534:	mov	x0, x1
    9538:	lsl	x0, x0, #7
    953c:	add	x0, x0, x1
    9540:	lsl	x0, x0, #1
    9544:	add	x1, x0, x4
    9548:	mov	x0, #0x2c60                	// #11360
    954c:	add	x0, x1, x0
    9550:	lsl	x0, x0, #2
    9554:	add	x0, x3, x0
    9558:	str	w2, [x0, #8]
    955c:	ldrsw	x0, [sp, #236]
    9560:	add	x0, x0, #0x17
    9564:	lsl	x0, x0, #1
    9568:	ldr	x1, [sp, #168]
    956c:	add	x0, x1, x0
    9570:	ldrh	w0, [x0]
    9574:	mov	w4, w0
    9578:	ldr	x2, [sp, #56]
    957c:	sxtw	x3, w4
    9580:	ldrsw	x1, [sp, #224]
    9584:	mov	x0, x1
    9588:	lsl	x0, x0, #7
    958c:	add	x0, x0, x1
    9590:	lsl	x0, x0, #1
    9594:	add	x1, x0, x3
    9598:	mov	x0, #0x2c60                	// #11360
    959c:	add	x0, x1, x0
    95a0:	lsl	x0, x0, #2
    95a4:	add	x0, x2, x0
    95a8:	ldr	w0, [x0, #8]
    95ac:	add	w2, w0, #0x1
    95b0:	ldr	x3, [sp, #56]
    95b4:	sxtw	x4, w4
    95b8:	ldrsw	x1, [sp, #224]
    95bc:	mov	x0, x1
    95c0:	lsl	x0, x0, #7
    95c4:	add	x0, x0, x1
    95c8:	lsl	x0, x0, #1
    95cc:	add	x1, x0, x4
    95d0:	mov	x0, #0x2c60                	// #11360
    95d4:	add	x0, x1, x0
    95d8:	lsl	x0, x0, #2
    95dc:	add	x0, x3, x0
    95e0:	str	w2, [x0, #8]
    95e4:	ldrsw	x0, [sp, #236]
    95e8:	add	x0, x0, #0x18
    95ec:	lsl	x0, x0, #1
    95f0:	ldr	x1, [sp, #168]
    95f4:	add	x0, x1, x0
    95f8:	ldrh	w0, [x0]
    95fc:	mov	w4, w0
    9600:	ldr	x2, [sp, #56]
    9604:	sxtw	x3, w4
    9608:	ldrsw	x1, [sp, #224]
    960c:	mov	x0, x1
    9610:	lsl	x0, x0, #7
    9614:	add	x0, x0, x1
    9618:	lsl	x0, x0, #1
    961c:	add	x1, x0, x3
    9620:	mov	x0, #0x2c60                	// #11360
    9624:	add	x0, x1, x0
    9628:	lsl	x0, x0, #2
    962c:	add	x0, x2, x0
    9630:	ldr	w0, [x0, #8]
    9634:	add	w2, w0, #0x1
    9638:	ldr	x3, [sp, #56]
    963c:	sxtw	x4, w4
    9640:	ldrsw	x1, [sp, #224]
    9644:	mov	x0, x1
    9648:	lsl	x0, x0, #7
    964c:	add	x0, x0, x1
    9650:	lsl	x0, x0, #1
    9654:	add	x1, x0, x4
    9658:	mov	x0, #0x2c60                	// #11360
    965c:	add	x0, x1, x0
    9660:	lsl	x0, x0, #2
    9664:	add	x0, x3, x0
    9668:	str	w2, [x0, #8]
    966c:	ldrsw	x0, [sp, #236]
    9670:	add	x0, x0, #0x19
    9674:	lsl	x0, x0, #1
    9678:	ldr	x1, [sp, #168]
    967c:	add	x0, x1, x0
    9680:	ldrh	w0, [x0]
    9684:	mov	w4, w0
    9688:	ldr	x2, [sp, #56]
    968c:	sxtw	x3, w4
    9690:	ldrsw	x1, [sp, #224]
    9694:	mov	x0, x1
    9698:	lsl	x0, x0, #7
    969c:	add	x0, x0, x1
    96a0:	lsl	x0, x0, #1
    96a4:	add	x1, x0, x3
    96a8:	mov	x0, #0x2c60                	// #11360
    96ac:	add	x0, x1, x0
    96b0:	lsl	x0, x0, #2
    96b4:	add	x0, x2, x0
    96b8:	ldr	w0, [x0, #8]
    96bc:	add	w2, w0, #0x1
    96c0:	ldr	x3, [sp, #56]
    96c4:	sxtw	x4, w4
    96c8:	ldrsw	x1, [sp, #224]
    96cc:	mov	x0, x1
    96d0:	lsl	x0, x0, #7
    96d4:	add	x0, x0, x1
    96d8:	lsl	x0, x0, #1
    96dc:	add	x1, x0, x4
    96e0:	mov	x0, #0x2c60                	// #11360
    96e4:	add	x0, x1, x0
    96e8:	lsl	x0, x0, #2
    96ec:	add	x0, x3, x0
    96f0:	str	w2, [x0, #8]
    96f4:	ldrsw	x0, [sp, #236]
    96f8:	add	x0, x0, #0x1a
    96fc:	lsl	x0, x0, #1
    9700:	ldr	x1, [sp, #168]
    9704:	add	x0, x1, x0
    9708:	ldrh	w0, [x0]
    970c:	mov	w4, w0
    9710:	ldr	x2, [sp, #56]
    9714:	sxtw	x3, w4
    9718:	ldrsw	x1, [sp, #224]
    971c:	mov	x0, x1
    9720:	lsl	x0, x0, #7
    9724:	add	x0, x0, x1
    9728:	lsl	x0, x0, #1
    972c:	add	x1, x0, x3
    9730:	mov	x0, #0x2c60                	// #11360
    9734:	add	x0, x1, x0
    9738:	lsl	x0, x0, #2
    973c:	add	x0, x2, x0
    9740:	ldr	w0, [x0, #8]
    9744:	add	w2, w0, #0x1
    9748:	ldr	x3, [sp, #56]
    974c:	sxtw	x4, w4
    9750:	ldrsw	x1, [sp, #224]
    9754:	mov	x0, x1
    9758:	lsl	x0, x0, #7
    975c:	add	x0, x0, x1
    9760:	lsl	x0, x0, #1
    9764:	add	x1, x0, x4
    9768:	mov	x0, #0x2c60                	// #11360
    976c:	add	x0, x1, x0
    9770:	lsl	x0, x0, #2
    9774:	add	x0, x3, x0
    9778:	str	w2, [x0, #8]
    977c:	ldrsw	x0, [sp, #236]
    9780:	add	x0, x0, #0x1b
    9784:	lsl	x0, x0, #1
    9788:	ldr	x1, [sp, #168]
    978c:	add	x0, x1, x0
    9790:	ldrh	w0, [x0]
    9794:	mov	w4, w0
    9798:	ldr	x2, [sp, #56]
    979c:	sxtw	x3, w4
    97a0:	ldrsw	x1, [sp, #224]
    97a4:	mov	x0, x1
    97a8:	lsl	x0, x0, #7
    97ac:	add	x0, x0, x1
    97b0:	lsl	x0, x0, #1
    97b4:	add	x1, x0, x3
    97b8:	mov	x0, #0x2c60                	// #11360
    97bc:	add	x0, x1, x0
    97c0:	lsl	x0, x0, #2
    97c4:	add	x0, x2, x0
    97c8:	ldr	w0, [x0, #8]
    97cc:	add	w2, w0, #0x1
    97d0:	ldr	x3, [sp, #56]
    97d4:	sxtw	x4, w4
    97d8:	ldrsw	x1, [sp, #224]
    97dc:	mov	x0, x1
    97e0:	lsl	x0, x0, #7
    97e4:	add	x0, x0, x1
    97e8:	lsl	x0, x0, #1
    97ec:	add	x1, x0, x4
    97f0:	mov	x0, #0x2c60                	// #11360
    97f4:	add	x0, x1, x0
    97f8:	lsl	x0, x0, #2
    97fc:	add	x0, x3, x0
    9800:	str	w2, [x0, #8]
    9804:	ldrsw	x0, [sp, #236]
    9808:	add	x0, x0, #0x1c
    980c:	lsl	x0, x0, #1
    9810:	ldr	x1, [sp, #168]
    9814:	add	x0, x1, x0
    9818:	ldrh	w0, [x0]
    981c:	mov	w4, w0
    9820:	ldr	x2, [sp, #56]
    9824:	sxtw	x3, w4
    9828:	ldrsw	x1, [sp, #224]
    982c:	mov	x0, x1
    9830:	lsl	x0, x0, #7
    9834:	add	x0, x0, x1
    9838:	lsl	x0, x0, #1
    983c:	add	x1, x0, x3
    9840:	mov	x0, #0x2c60                	// #11360
    9844:	add	x0, x1, x0
    9848:	lsl	x0, x0, #2
    984c:	add	x0, x2, x0
    9850:	ldr	w0, [x0, #8]
    9854:	add	w2, w0, #0x1
    9858:	ldr	x3, [sp, #56]
    985c:	sxtw	x4, w4
    9860:	ldrsw	x1, [sp, #224]
    9864:	mov	x0, x1
    9868:	lsl	x0, x0, #7
    986c:	add	x0, x0, x1
    9870:	lsl	x0, x0, #1
    9874:	add	x1, x0, x4
    9878:	mov	x0, #0x2c60                	// #11360
    987c:	add	x0, x1, x0
    9880:	lsl	x0, x0, #2
    9884:	add	x0, x3, x0
    9888:	str	w2, [x0, #8]
    988c:	ldrsw	x0, [sp, #236]
    9890:	add	x0, x0, #0x1d
    9894:	lsl	x0, x0, #1
    9898:	ldr	x1, [sp, #168]
    989c:	add	x0, x1, x0
    98a0:	ldrh	w0, [x0]
    98a4:	mov	w4, w0
    98a8:	ldr	x2, [sp, #56]
    98ac:	sxtw	x3, w4
    98b0:	ldrsw	x1, [sp, #224]
    98b4:	mov	x0, x1
    98b8:	lsl	x0, x0, #7
    98bc:	add	x0, x0, x1
    98c0:	lsl	x0, x0, #1
    98c4:	add	x1, x0, x3
    98c8:	mov	x0, #0x2c60                	// #11360
    98cc:	add	x0, x1, x0
    98d0:	lsl	x0, x0, #2
    98d4:	add	x0, x2, x0
    98d8:	ldr	w0, [x0, #8]
    98dc:	add	w2, w0, #0x1
    98e0:	ldr	x3, [sp, #56]
    98e4:	sxtw	x4, w4
    98e8:	ldrsw	x1, [sp, #224]
    98ec:	mov	x0, x1
    98f0:	lsl	x0, x0, #7
    98f4:	add	x0, x0, x1
    98f8:	lsl	x0, x0, #1
    98fc:	add	x1, x0, x4
    9900:	mov	x0, #0x2c60                	// #11360
    9904:	add	x0, x1, x0
    9908:	lsl	x0, x0, #2
    990c:	add	x0, x3, x0
    9910:	str	w2, [x0, #8]
    9914:	ldrsw	x0, [sp, #236]
    9918:	add	x0, x0, #0x1e
    991c:	lsl	x0, x0, #1
    9920:	ldr	x1, [sp, #168]
    9924:	add	x0, x1, x0
    9928:	ldrh	w0, [x0]
    992c:	mov	w4, w0
    9930:	ldr	x2, [sp, #56]
    9934:	sxtw	x3, w4
    9938:	ldrsw	x1, [sp, #224]
    993c:	mov	x0, x1
    9940:	lsl	x0, x0, #7
    9944:	add	x0, x0, x1
    9948:	lsl	x0, x0, #1
    994c:	add	x1, x0, x3
    9950:	mov	x0, #0x2c60                	// #11360
    9954:	add	x0, x1, x0
    9958:	lsl	x0, x0, #2
    995c:	add	x0, x2, x0
    9960:	ldr	w0, [x0, #8]
    9964:	add	w2, w0, #0x1
    9968:	ldr	x3, [sp, #56]
    996c:	sxtw	x4, w4
    9970:	ldrsw	x1, [sp, #224]
    9974:	mov	x0, x1
    9978:	lsl	x0, x0, #7
    997c:	add	x0, x0, x1
    9980:	lsl	x0, x0, #1
    9984:	add	x1, x0, x4
    9988:	mov	x0, #0x2c60                	// #11360
    998c:	add	x0, x1, x0
    9990:	lsl	x0, x0, #2
    9994:	add	x0, x3, x0
    9998:	str	w2, [x0, #8]
    999c:	ldrsw	x0, [sp, #236]
    99a0:	add	x0, x0, #0x1f
    99a4:	lsl	x0, x0, #1
    99a8:	ldr	x1, [sp, #168]
    99ac:	add	x0, x1, x0
    99b0:	ldrh	w0, [x0]
    99b4:	mov	w4, w0
    99b8:	ldr	x2, [sp, #56]
    99bc:	sxtw	x3, w4
    99c0:	ldrsw	x1, [sp, #224]
    99c4:	mov	x0, x1
    99c8:	lsl	x0, x0, #7
    99cc:	add	x0, x0, x1
    99d0:	lsl	x0, x0, #1
    99d4:	add	x1, x0, x3
    99d8:	mov	x0, #0x2c60                	// #11360
    99dc:	add	x0, x1, x0
    99e0:	lsl	x0, x0, #2
    99e4:	add	x0, x2, x0
    99e8:	ldr	w0, [x0, #8]
    99ec:	add	w2, w0, #0x1
    99f0:	ldr	x3, [sp, #56]
    99f4:	sxtw	x4, w4
    99f8:	ldrsw	x1, [sp, #224]
    99fc:	mov	x0, x1
    9a00:	lsl	x0, x0, #7
    9a04:	add	x0, x0, x1
    9a08:	lsl	x0, x0, #1
    9a0c:	add	x1, x0, x4
    9a10:	mov	x0, #0x2c60                	// #11360
    9a14:	add	x0, x1, x0
    9a18:	lsl	x0, x0, #2
    9a1c:	add	x0, x3, x0
    9a20:	str	w2, [x0, #8]
    9a24:	ldrsw	x0, [sp, #236]
    9a28:	add	x0, x0, #0x20
    9a2c:	lsl	x0, x0, #1
    9a30:	ldr	x1, [sp, #168]
    9a34:	add	x0, x1, x0
    9a38:	ldrh	w0, [x0]
    9a3c:	mov	w4, w0
    9a40:	ldr	x2, [sp, #56]
    9a44:	sxtw	x3, w4
    9a48:	ldrsw	x1, [sp, #224]
    9a4c:	mov	x0, x1
    9a50:	lsl	x0, x0, #7
    9a54:	add	x0, x0, x1
    9a58:	lsl	x0, x0, #1
    9a5c:	add	x1, x0, x3
    9a60:	mov	x0, #0x2c60                	// #11360
    9a64:	add	x0, x1, x0
    9a68:	lsl	x0, x0, #2
    9a6c:	add	x0, x2, x0
    9a70:	ldr	w0, [x0, #8]
    9a74:	add	w2, w0, #0x1
    9a78:	ldr	x3, [sp, #56]
    9a7c:	sxtw	x4, w4
    9a80:	ldrsw	x1, [sp, #224]
    9a84:	mov	x0, x1
    9a88:	lsl	x0, x0, #7
    9a8c:	add	x0, x0, x1
    9a90:	lsl	x0, x0, #1
    9a94:	add	x1, x0, x4
    9a98:	mov	x0, #0x2c60                	// #11360
    9a9c:	add	x0, x1, x0
    9aa0:	lsl	x0, x0, #2
    9aa4:	add	x0, x3, x0
    9aa8:	str	w2, [x0, #8]
    9aac:	ldrsw	x0, [sp, #236]
    9ab0:	add	x0, x0, #0x21
    9ab4:	lsl	x0, x0, #1
    9ab8:	ldr	x1, [sp, #168]
    9abc:	add	x0, x1, x0
    9ac0:	ldrh	w0, [x0]
    9ac4:	mov	w4, w0
    9ac8:	ldr	x2, [sp, #56]
    9acc:	sxtw	x3, w4
    9ad0:	ldrsw	x1, [sp, #224]
    9ad4:	mov	x0, x1
    9ad8:	lsl	x0, x0, #7
    9adc:	add	x0, x0, x1
    9ae0:	lsl	x0, x0, #1
    9ae4:	add	x1, x0, x3
    9ae8:	mov	x0, #0x2c60                	// #11360
    9aec:	add	x0, x1, x0
    9af0:	lsl	x0, x0, #2
    9af4:	add	x0, x2, x0
    9af8:	ldr	w0, [x0, #8]
    9afc:	add	w2, w0, #0x1
    9b00:	ldr	x3, [sp, #56]
    9b04:	sxtw	x4, w4
    9b08:	ldrsw	x1, [sp, #224]
    9b0c:	mov	x0, x1
    9b10:	lsl	x0, x0, #7
    9b14:	add	x0, x0, x1
    9b18:	lsl	x0, x0, #1
    9b1c:	add	x1, x0, x4
    9b20:	mov	x0, #0x2c60                	// #11360
    9b24:	add	x0, x1, x0
    9b28:	lsl	x0, x0, #2
    9b2c:	add	x0, x3, x0
    9b30:	str	w2, [x0, #8]
    9b34:	ldrsw	x0, [sp, #236]
    9b38:	add	x0, x0, #0x22
    9b3c:	lsl	x0, x0, #1
    9b40:	ldr	x1, [sp, #168]
    9b44:	add	x0, x1, x0
    9b48:	ldrh	w0, [x0]
    9b4c:	mov	w4, w0
    9b50:	ldr	x2, [sp, #56]
    9b54:	sxtw	x3, w4
    9b58:	ldrsw	x1, [sp, #224]
    9b5c:	mov	x0, x1
    9b60:	lsl	x0, x0, #7
    9b64:	add	x0, x0, x1
    9b68:	lsl	x0, x0, #1
    9b6c:	add	x1, x0, x3
    9b70:	mov	x0, #0x2c60                	// #11360
    9b74:	add	x0, x1, x0
    9b78:	lsl	x0, x0, #2
    9b7c:	add	x0, x2, x0
    9b80:	ldr	w0, [x0, #8]
    9b84:	add	w2, w0, #0x1
    9b88:	ldr	x3, [sp, #56]
    9b8c:	sxtw	x4, w4
    9b90:	ldrsw	x1, [sp, #224]
    9b94:	mov	x0, x1
    9b98:	lsl	x0, x0, #7
    9b9c:	add	x0, x0, x1
    9ba0:	lsl	x0, x0, #1
    9ba4:	add	x1, x0, x4
    9ba8:	mov	x0, #0x2c60                	// #11360
    9bac:	add	x0, x1, x0
    9bb0:	lsl	x0, x0, #2
    9bb4:	add	x0, x3, x0
    9bb8:	str	w2, [x0, #8]
    9bbc:	ldrsw	x0, [sp, #236]
    9bc0:	add	x0, x0, #0x23
    9bc4:	lsl	x0, x0, #1
    9bc8:	ldr	x1, [sp, #168]
    9bcc:	add	x0, x1, x0
    9bd0:	ldrh	w0, [x0]
    9bd4:	mov	w4, w0
    9bd8:	ldr	x2, [sp, #56]
    9bdc:	sxtw	x3, w4
    9be0:	ldrsw	x1, [sp, #224]
    9be4:	mov	x0, x1
    9be8:	lsl	x0, x0, #7
    9bec:	add	x0, x0, x1
    9bf0:	lsl	x0, x0, #1
    9bf4:	add	x1, x0, x3
    9bf8:	mov	x0, #0x2c60                	// #11360
    9bfc:	add	x0, x1, x0
    9c00:	lsl	x0, x0, #2
    9c04:	add	x0, x2, x0
    9c08:	ldr	w0, [x0, #8]
    9c0c:	add	w2, w0, #0x1
    9c10:	ldr	x3, [sp, #56]
    9c14:	sxtw	x4, w4
    9c18:	ldrsw	x1, [sp, #224]
    9c1c:	mov	x0, x1
    9c20:	lsl	x0, x0, #7
    9c24:	add	x0, x0, x1
    9c28:	lsl	x0, x0, #1
    9c2c:	add	x1, x0, x4
    9c30:	mov	x0, #0x2c60                	// #11360
    9c34:	add	x0, x1, x0
    9c38:	lsl	x0, x0, #2
    9c3c:	add	x0, x3, x0
    9c40:	str	w2, [x0, #8]
    9c44:	ldrsw	x0, [sp, #236]
    9c48:	add	x0, x0, #0x24
    9c4c:	lsl	x0, x0, #1
    9c50:	ldr	x1, [sp, #168]
    9c54:	add	x0, x1, x0
    9c58:	ldrh	w0, [x0]
    9c5c:	mov	w4, w0
    9c60:	ldr	x2, [sp, #56]
    9c64:	sxtw	x3, w4
    9c68:	ldrsw	x1, [sp, #224]
    9c6c:	mov	x0, x1
    9c70:	lsl	x0, x0, #7
    9c74:	add	x0, x0, x1
    9c78:	lsl	x0, x0, #1
    9c7c:	add	x1, x0, x3
    9c80:	mov	x0, #0x2c60                	// #11360
    9c84:	add	x0, x1, x0
    9c88:	lsl	x0, x0, #2
    9c8c:	add	x0, x2, x0
    9c90:	ldr	w0, [x0, #8]
    9c94:	add	w2, w0, #0x1
    9c98:	ldr	x3, [sp, #56]
    9c9c:	sxtw	x4, w4
    9ca0:	ldrsw	x1, [sp, #224]
    9ca4:	mov	x0, x1
    9ca8:	lsl	x0, x0, #7
    9cac:	add	x0, x0, x1
    9cb0:	lsl	x0, x0, #1
    9cb4:	add	x1, x0, x4
    9cb8:	mov	x0, #0x2c60                	// #11360
    9cbc:	add	x0, x1, x0
    9cc0:	lsl	x0, x0, #2
    9cc4:	add	x0, x3, x0
    9cc8:	str	w2, [x0, #8]
    9ccc:	ldrsw	x0, [sp, #236]
    9cd0:	add	x0, x0, #0x25
    9cd4:	lsl	x0, x0, #1
    9cd8:	ldr	x1, [sp, #168]
    9cdc:	add	x0, x1, x0
    9ce0:	ldrh	w0, [x0]
    9ce4:	mov	w4, w0
    9ce8:	ldr	x2, [sp, #56]
    9cec:	sxtw	x3, w4
    9cf0:	ldrsw	x1, [sp, #224]
    9cf4:	mov	x0, x1
    9cf8:	lsl	x0, x0, #7
    9cfc:	add	x0, x0, x1
    9d00:	lsl	x0, x0, #1
    9d04:	add	x1, x0, x3
    9d08:	mov	x0, #0x2c60                	// #11360
    9d0c:	add	x0, x1, x0
    9d10:	lsl	x0, x0, #2
    9d14:	add	x0, x2, x0
    9d18:	ldr	w0, [x0, #8]
    9d1c:	add	w2, w0, #0x1
    9d20:	ldr	x3, [sp, #56]
    9d24:	sxtw	x4, w4
    9d28:	ldrsw	x1, [sp, #224]
    9d2c:	mov	x0, x1
    9d30:	lsl	x0, x0, #7
    9d34:	add	x0, x0, x1
    9d38:	lsl	x0, x0, #1
    9d3c:	add	x1, x0, x4
    9d40:	mov	x0, #0x2c60                	// #11360
    9d44:	add	x0, x1, x0
    9d48:	lsl	x0, x0, #2
    9d4c:	add	x0, x3, x0
    9d50:	str	w2, [x0, #8]
    9d54:	ldrsw	x0, [sp, #236]
    9d58:	add	x0, x0, #0x26
    9d5c:	lsl	x0, x0, #1
    9d60:	ldr	x1, [sp, #168]
    9d64:	add	x0, x1, x0
    9d68:	ldrh	w0, [x0]
    9d6c:	mov	w4, w0
    9d70:	ldr	x2, [sp, #56]
    9d74:	sxtw	x3, w4
    9d78:	ldrsw	x1, [sp, #224]
    9d7c:	mov	x0, x1
    9d80:	lsl	x0, x0, #7
    9d84:	add	x0, x0, x1
    9d88:	lsl	x0, x0, #1
    9d8c:	add	x1, x0, x3
    9d90:	mov	x0, #0x2c60                	// #11360
    9d94:	add	x0, x1, x0
    9d98:	lsl	x0, x0, #2
    9d9c:	add	x0, x2, x0
    9da0:	ldr	w0, [x0, #8]
    9da4:	add	w2, w0, #0x1
    9da8:	ldr	x3, [sp, #56]
    9dac:	sxtw	x4, w4
    9db0:	ldrsw	x1, [sp, #224]
    9db4:	mov	x0, x1
    9db8:	lsl	x0, x0, #7
    9dbc:	add	x0, x0, x1
    9dc0:	lsl	x0, x0, #1
    9dc4:	add	x1, x0, x4
    9dc8:	mov	x0, #0x2c60                	// #11360
    9dcc:	add	x0, x1, x0
    9dd0:	lsl	x0, x0, #2
    9dd4:	add	x0, x3, x0
    9dd8:	str	w2, [x0, #8]
    9ddc:	ldrsw	x0, [sp, #236]
    9de0:	add	x0, x0, #0x27
    9de4:	lsl	x0, x0, #1
    9de8:	ldr	x1, [sp, #168]
    9dec:	add	x0, x1, x0
    9df0:	ldrh	w0, [x0]
    9df4:	mov	w4, w0
    9df8:	ldr	x2, [sp, #56]
    9dfc:	sxtw	x3, w4
    9e00:	ldrsw	x1, [sp, #224]
    9e04:	mov	x0, x1
    9e08:	lsl	x0, x0, #7
    9e0c:	add	x0, x0, x1
    9e10:	lsl	x0, x0, #1
    9e14:	add	x1, x0, x3
    9e18:	mov	x0, #0x2c60                	// #11360
    9e1c:	add	x0, x1, x0
    9e20:	lsl	x0, x0, #2
    9e24:	add	x0, x2, x0
    9e28:	ldr	w0, [x0, #8]
    9e2c:	add	w2, w0, #0x1
    9e30:	ldr	x3, [sp, #56]
    9e34:	sxtw	x4, w4
    9e38:	ldrsw	x1, [sp, #224]
    9e3c:	mov	x0, x1
    9e40:	lsl	x0, x0, #7
    9e44:	add	x0, x0, x1
    9e48:	lsl	x0, x0, #1
    9e4c:	add	x1, x0, x4
    9e50:	mov	x0, #0x2c60                	// #11360
    9e54:	add	x0, x1, x0
    9e58:	lsl	x0, x0, #2
    9e5c:	add	x0, x3, x0
    9e60:	str	w2, [x0, #8]
    9e64:	ldrsw	x0, [sp, #236]
    9e68:	add	x0, x0, #0x28
    9e6c:	lsl	x0, x0, #1
    9e70:	ldr	x1, [sp, #168]
    9e74:	add	x0, x1, x0
    9e78:	ldrh	w0, [x0]
    9e7c:	mov	w4, w0
    9e80:	ldr	x2, [sp, #56]
    9e84:	sxtw	x3, w4
    9e88:	ldrsw	x1, [sp, #224]
    9e8c:	mov	x0, x1
    9e90:	lsl	x0, x0, #7
    9e94:	add	x0, x0, x1
    9e98:	lsl	x0, x0, #1
    9e9c:	add	x1, x0, x3
    9ea0:	mov	x0, #0x2c60                	// #11360
    9ea4:	add	x0, x1, x0
    9ea8:	lsl	x0, x0, #2
    9eac:	add	x0, x2, x0
    9eb0:	ldr	w0, [x0, #8]
    9eb4:	add	w2, w0, #0x1
    9eb8:	ldr	x3, [sp, #56]
    9ebc:	sxtw	x4, w4
    9ec0:	ldrsw	x1, [sp, #224]
    9ec4:	mov	x0, x1
    9ec8:	lsl	x0, x0, #7
    9ecc:	add	x0, x0, x1
    9ed0:	lsl	x0, x0, #1
    9ed4:	add	x1, x0, x4
    9ed8:	mov	x0, #0x2c60                	// #11360
    9edc:	add	x0, x1, x0
    9ee0:	lsl	x0, x0, #2
    9ee4:	add	x0, x3, x0
    9ee8:	str	w2, [x0, #8]
    9eec:	ldrsw	x0, [sp, #236]
    9ef0:	add	x0, x0, #0x29
    9ef4:	lsl	x0, x0, #1
    9ef8:	ldr	x1, [sp, #168]
    9efc:	add	x0, x1, x0
    9f00:	ldrh	w0, [x0]
    9f04:	mov	w4, w0
    9f08:	ldr	x2, [sp, #56]
    9f0c:	sxtw	x3, w4
    9f10:	ldrsw	x1, [sp, #224]
    9f14:	mov	x0, x1
    9f18:	lsl	x0, x0, #7
    9f1c:	add	x0, x0, x1
    9f20:	lsl	x0, x0, #1
    9f24:	add	x1, x0, x3
    9f28:	mov	x0, #0x2c60                	// #11360
    9f2c:	add	x0, x1, x0
    9f30:	lsl	x0, x0, #2
    9f34:	add	x0, x2, x0
    9f38:	ldr	w0, [x0, #8]
    9f3c:	add	w2, w0, #0x1
    9f40:	ldr	x3, [sp, #56]
    9f44:	sxtw	x4, w4
    9f48:	ldrsw	x1, [sp, #224]
    9f4c:	mov	x0, x1
    9f50:	lsl	x0, x0, #7
    9f54:	add	x0, x0, x1
    9f58:	lsl	x0, x0, #1
    9f5c:	add	x1, x0, x4
    9f60:	mov	x0, #0x2c60                	// #11360
    9f64:	add	x0, x1, x0
    9f68:	lsl	x0, x0, #2
    9f6c:	add	x0, x3, x0
    9f70:	str	w2, [x0, #8]
    9f74:	ldrsw	x0, [sp, #236]
    9f78:	add	x0, x0, #0x2a
    9f7c:	lsl	x0, x0, #1
    9f80:	ldr	x1, [sp, #168]
    9f84:	add	x0, x1, x0
    9f88:	ldrh	w0, [x0]
    9f8c:	mov	w4, w0
    9f90:	ldr	x2, [sp, #56]
    9f94:	sxtw	x3, w4
    9f98:	ldrsw	x1, [sp, #224]
    9f9c:	mov	x0, x1
    9fa0:	lsl	x0, x0, #7
    9fa4:	add	x0, x0, x1
    9fa8:	lsl	x0, x0, #1
    9fac:	add	x1, x0, x3
    9fb0:	mov	x0, #0x2c60                	// #11360
    9fb4:	add	x0, x1, x0
    9fb8:	lsl	x0, x0, #2
    9fbc:	add	x0, x2, x0
    9fc0:	ldr	w0, [x0, #8]
    9fc4:	add	w2, w0, #0x1
    9fc8:	ldr	x3, [sp, #56]
    9fcc:	sxtw	x4, w4
    9fd0:	ldrsw	x1, [sp, #224]
    9fd4:	mov	x0, x1
    9fd8:	lsl	x0, x0, #7
    9fdc:	add	x0, x0, x1
    9fe0:	lsl	x0, x0, #1
    9fe4:	add	x1, x0, x4
    9fe8:	mov	x0, #0x2c60                	// #11360
    9fec:	add	x0, x1, x0
    9ff0:	lsl	x0, x0, #2
    9ff4:	add	x0, x3, x0
    9ff8:	str	w2, [x0, #8]
    9ffc:	ldrsw	x0, [sp, #236]
    a000:	add	x0, x0, #0x2b
    a004:	lsl	x0, x0, #1
    a008:	ldr	x1, [sp, #168]
    a00c:	add	x0, x1, x0
    a010:	ldrh	w0, [x0]
    a014:	mov	w4, w0
    a018:	ldr	x2, [sp, #56]
    a01c:	sxtw	x3, w4
    a020:	ldrsw	x1, [sp, #224]
    a024:	mov	x0, x1
    a028:	lsl	x0, x0, #7
    a02c:	add	x0, x0, x1
    a030:	lsl	x0, x0, #1
    a034:	add	x1, x0, x3
    a038:	mov	x0, #0x2c60                	// #11360
    a03c:	add	x0, x1, x0
    a040:	lsl	x0, x0, #2
    a044:	add	x0, x2, x0
    a048:	ldr	w0, [x0, #8]
    a04c:	add	w2, w0, #0x1
    a050:	ldr	x3, [sp, #56]
    a054:	sxtw	x4, w4
    a058:	ldrsw	x1, [sp, #224]
    a05c:	mov	x0, x1
    a060:	lsl	x0, x0, #7
    a064:	add	x0, x0, x1
    a068:	lsl	x0, x0, #1
    a06c:	add	x1, x0, x4
    a070:	mov	x0, #0x2c60                	// #11360
    a074:	add	x0, x1, x0
    a078:	lsl	x0, x0, #2
    a07c:	add	x0, x3, x0
    a080:	str	w2, [x0, #8]
    a084:	ldrsw	x0, [sp, #236]
    a088:	add	x0, x0, #0x2c
    a08c:	lsl	x0, x0, #1
    a090:	ldr	x1, [sp, #168]
    a094:	add	x0, x1, x0
    a098:	ldrh	w0, [x0]
    a09c:	mov	w4, w0
    a0a0:	ldr	x2, [sp, #56]
    a0a4:	sxtw	x3, w4
    a0a8:	ldrsw	x1, [sp, #224]
    a0ac:	mov	x0, x1
    a0b0:	lsl	x0, x0, #7
    a0b4:	add	x0, x0, x1
    a0b8:	lsl	x0, x0, #1
    a0bc:	add	x1, x0, x3
    a0c0:	mov	x0, #0x2c60                	// #11360
    a0c4:	add	x0, x1, x0
    a0c8:	lsl	x0, x0, #2
    a0cc:	add	x0, x2, x0
    a0d0:	ldr	w0, [x0, #8]
    a0d4:	add	w2, w0, #0x1
    a0d8:	ldr	x3, [sp, #56]
    a0dc:	sxtw	x4, w4
    a0e0:	ldrsw	x1, [sp, #224]
    a0e4:	mov	x0, x1
    a0e8:	lsl	x0, x0, #7
    a0ec:	add	x0, x0, x1
    a0f0:	lsl	x0, x0, #1
    a0f4:	add	x1, x0, x4
    a0f8:	mov	x0, #0x2c60                	// #11360
    a0fc:	add	x0, x1, x0
    a100:	lsl	x0, x0, #2
    a104:	add	x0, x3, x0
    a108:	str	w2, [x0, #8]
    a10c:	ldrsw	x0, [sp, #236]
    a110:	add	x0, x0, #0x2d
    a114:	lsl	x0, x0, #1
    a118:	ldr	x1, [sp, #168]
    a11c:	add	x0, x1, x0
    a120:	ldrh	w0, [x0]
    a124:	mov	w4, w0
    a128:	ldr	x2, [sp, #56]
    a12c:	sxtw	x3, w4
    a130:	ldrsw	x1, [sp, #224]
    a134:	mov	x0, x1
    a138:	lsl	x0, x0, #7
    a13c:	add	x0, x0, x1
    a140:	lsl	x0, x0, #1
    a144:	add	x1, x0, x3
    a148:	mov	x0, #0x2c60                	// #11360
    a14c:	add	x0, x1, x0
    a150:	lsl	x0, x0, #2
    a154:	add	x0, x2, x0
    a158:	ldr	w0, [x0, #8]
    a15c:	add	w2, w0, #0x1
    a160:	ldr	x3, [sp, #56]
    a164:	sxtw	x4, w4
    a168:	ldrsw	x1, [sp, #224]
    a16c:	mov	x0, x1
    a170:	lsl	x0, x0, #7
    a174:	add	x0, x0, x1
    a178:	lsl	x0, x0, #1
    a17c:	add	x1, x0, x4
    a180:	mov	x0, #0x2c60                	// #11360
    a184:	add	x0, x1, x0
    a188:	lsl	x0, x0, #2
    a18c:	add	x0, x3, x0
    a190:	str	w2, [x0, #8]
    a194:	ldrsw	x0, [sp, #236]
    a198:	add	x0, x0, #0x2e
    a19c:	lsl	x0, x0, #1
    a1a0:	ldr	x1, [sp, #168]
    a1a4:	add	x0, x1, x0
    a1a8:	ldrh	w0, [x0]
    a1ac:	mov	w4, w0
    a1b0:	ldr	x2, [sp, #56]
    a1b4:	sxtw	x3, w4
    a1b8:	ldrsw	x1, [sp, #224]
    a1bc:	mov	x0, x1
    a1c0:	lsl	x0, x0, #7
    a1c4:	add	x0, x0, x1
    a1c8:	lsl	x0, x0, #1
    a1cc:	add	x1, x0, x3
    a1d0:	mov	x0, #0x2c60                	// #11360
    a1d4:	add	x0, x1, x0
    a1d8:	lsl	x0, x0, #2
    a1dc:	add	x0, x2, x0
    a1e0:	ldr	w0, [x0, #8]
    a1e4:	add	w2, w0, #0x1
    a1e8:	ldr	x3, [sp, #56]
    a1ec:	sxtw	x4, w4
    a1f0:	ldrsw	x1, [sp, #224]
    a1f4:	mov	x0, x1
    a1f8:	lsl	x0, x0, #7
    a1fc:	add	x0, x0, x1
    a200:	lsl	x0, x0, #1
    a204:	add	x1, x0, x4
    a208:	mov	x0, #0x2c60                	// #11360
    a20c:	add	x0, x1, x0
    a210:	lsl	x0, x0, #2
    a214:	add	x0, x3, x0
    a218:	str	w2, [x0, #8]
    a21c:	ldrsw	x0, [sp, #236]
    a220:	add	x0, x0, #0x2f
    a224:	lsl	x0, x0, #1
    a228:	ldr	x1, [sp, #168]
    a22c:	add	x0, x1, x0
    a230:	ldrh	w0, [x0]
    a234:	mov	w4, w0
    a238:	ldr	x2, [sp, #56]
    a23c:	sxtw	x3, w4
    a240:	ldrsw	x1, [sp, #224]
    a244:	mov	x0, x1
    a248:	lsl	x0, x0, #7
    a24c:	add	x0, x0, x1
    a250:	lsl	x0, x0, #1
    a254:	add	x1, x0, x3
    a258:	mov	x0, #0x2c60                	// #11360
    a25c:	add	x0, x1, x0
    a260:	lsl	x0, x0, #2
    a264:	add	x0, x2, x0
    a268:	ldr	w0, [x0, #8]
    a26c:	add	w2, w0, #0x1
    a270:	ldr	x3, [sp, #56]
    a274:	sxtw	x4, w4
    a278:	ldrsw	x1, [sp, #224]
    a27c:	mov	x0, x1
    a280:	lsl	x0, x0, #7
    a284:	add	x0, x0, x1
    a288:	lsl	x0, x0, #1
    a28c:	add	x1, x0, x4
    a290:	mov	x0, #0x2c60                	// #11360
    a294:	add	x0, x1, x0
    a298:	lsl	x0, x0, #2
    a29c:	add	x0, x3, x0
    a2a0:	str	w2, [x0, #8]
    a2a4:	ldrsw	x0, [sp, #236]
    a2a8:	add	x0, x0, #0x30
    a2ac:	lsl	x0, x0, #1
    a2b0:	ldr	x1, [sp, #168]
    a2b4:	add	x0, x1, x0
    a2b8:	ldrh	w0, [x0]
    a2bc:	mov	w4, w0
    a2c0:	ldr	x2, [sp, #56]
    a2c4:	sxtw	x3, w4
    a2c8:	ldrsw	x1, [sp, #224]
    a2cc:	mov	x0, x1
    a2d0:	lsl	x0, x0, #7
    a2d4:	add	x0, x0, x1
    a2d8:	lsl	x0, x0, #1
    a2dc:	add	x1, x0, x3
    a2e0:	mov	x0, #0x2c60                	// #11360
    a2e4:	add	x0, x1, x0
    a2e8:	lsl	x0, x0, #2
    a2ec:	add	x0, x2, x0
    a2f0:	ldr	w0, [x0, #8]
    a2f4:	add	w2, w0, #0x1
    a2f8:	ldr	x3, [sp, #56]
    a2fc:	sxtw	x4, w4
    a300:	ldrsw	x1, [sp, #224]
    a304:	mov	x0, x1
    a308:	lsl	x0, x0, #7
    a30c:	add	x0, x0, x1
    a310:	lsl	x0, x0, #1
    a314:	add	x1, x0, x4
    a318:	mov	x0, #0x2c60                	// #11360
    a31c:	add	x0, x1, x0
    a320:	lsl	x0, x0, #2
    a324:	add	x0, x3, x0
    a328:	str	w2, [x0, #8]
    a32c:	ldrsw	x0, [sp, #236]
    a330:	add	x0, x0, #0x31
    a334:	lsl	x0, x0, #1
    a338:	ldr	x1, [sp, #168]
    a33c:	add	x0, x1, x0
    a340:	ldrh	w0, [x0]
    a344:	mov	w4, w0
    a348:	ldr	x2, [sp, #56]
    a34c:	sxtw	x3, w4
    a350:	ldrsw	x1, [sp, #224]
    a354:	mov	x0, x1
    a358:	lsl	x0, x0, #7
    a35c:	add	x0, x0, x1
    a360:	lsl	x0, x0, #1
    a364:	add	x1, x0, x3
    a368:	mov	x0, #0x2c60                	// #11360
    a36c:	add	x0, x1, x0
    a370:	lsl	x0, x0, #2
    a374:	add	x0, x2, x0
    a378:	ldr	w0, [x0, #8]
    a37c:	add	w2, w0, #0x1
    a380:	ldr	x3, [sp, #56]
    a384:	sxtw	x4, w4
    a388:	ldrsw	x1, [sp, #224]
    a38c:	mov	x0, x1
    a390:	lsl	x0, x0, #7
    a394:	add	x0, x0, x1
    a398:	lsl	x0, x0, #1
    a39c:	add	x1, x0, x4
    a3a0:	mov	x0, #0x2c60                	// #11360
    a3a4:	add	x0, x1, x0
    a3a8:	lsl	x0, x0, #2
    a3ac:	add	x0, x3, x0
    a3b0:	str	w2, [x0, #8]
    a3b4:	b	a464 <BZ2_bsInitWrite@@Base+0x41d8>
    a3b8:	ldr	w0, [sp, #236]
    a3bc:	str	w0, [sp, #244]
    a3c0:	b	a454 <BZ2_bsInitWrite@@Base+0x41c8>
    a3c4:	ldrsw	x0, [sp, #244]
    a3c8:	lsl	x0, x0, #1
    a3cc:	ldr	x1, [sp, #168]
    a3d0:	add	x0, x1, x0
    a3d4:	ldrh	w0, [x0]
    a3d8:	mov	w4, w0
    a3dc:	ldr	x2, [sp, #56]
    a3e0:	sxtw	x3, w4
    a3e4:	ldrsw	x1, [sp, #224]
    a3e8:	mov	x0, x1
    a3ec:	lsl	x0, x0, #7
    a3f0:	add	x0, x0, x1
    a3f4:	lsl	x0, x0, #1
    a3f8:	add	x1, x0, x3
    a3fc:	mov	x0, #0x2c60                	// #11360
    a400:	add	x0, x1, x0
    a404:	lsl	x0, x0, #2
    a408:	add	x0, x2, x0
    a40c:	ldr	w0, [x0, #8]
    a410:	add	w2, w0, #0x1
    a414:	ldr	x3, [sp, #56]
    a418:	sxtw	x4, w4
    a41c:	ldrsw	x1, [sp, #224]
    a420:	mov	x0, x1
    a424:	lsl	x0, x0, #7
    a428:	add	x0, x0, x1
    a42c:	lsl	x0, x0, #1
    a430:	add	x1, x0, x4
    a434:	mov	x0, #0x2c60                	// #11360
    a438:	add	x0, x1, x0
    a43c:	lsl	x0, x0, #2
    a440:	add	x0, x3, x0
    a444:	str	w2, [x0, #8]
    a448:	ldr	w0, [sp, #244]
    a44c:	add	w0, w0, #0x1
    a450:	str	w0, [sp, #244]
    a454:	ldr	w1, [sp, #244]
    a458:	ldr	w0, [sp, #232]
    a45c:	cmp	w1, w0
    a460:	b.le	a3c4 <BZ2_bsInitWrite@@Base+0x4138>
    a464:	ldr	w0, [sp, #232]
    a468:	add	w0, w0, #0x1
    a46c:	str	w0, [sp, #236]
    a470:	b	6f28 <BZ2_bsInitWrite@@Base+0xc9c>
    a474:	nop
    a478:	ldr	x0, [sp, #56]
    a47c:	ldr	w0, [x0, #656]
    a480:	cmp	w0, #0x2
    a484:	b.le	a530 <BZ2_bsInitWrite@@Base+0x42a4>
    a488:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    a48c:	ldr	x0, [x0, #4016]
    a490:	ldr	x4, [x0]
    a494:	ldr	w0, [sp, #216]
    a498:	add	w2, w0, #0x1
    a49c:	ldr	w0, [sp, #228]
    a4a0:	add	w1, w0, #0x7
    a4a4:	cmp	w0, #0x0
    a4a8:	csel	w0, w1, w0, lt  // lt = tstop
    a4ac:	asr	w0, w0, #3
    a4b0:	mov	w3, w0
    a4b4:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    a4b8:	add	x1, x0, #0xc8
    a4bc:	mov	x0, x4
    a4c0:	bl	1730 <fprintf@plt>
    a4c4:	str	wzr, [sp, #248]
    a4c8:	b	a508 <BZ2_bsInitWrite@@Base+0x427c>
    a4cc:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    a4d0:	ldr	x0, [x0, #4016]
    a4d4:	ldr	x3, [x0]
    a4d8:	ldrsw	x0, [sp, #248]
    a4dc:	lsl	x0, x0, #2
    a4e0:	add	x1, sp, #0x60
    a4e4:	ldr	w0, [x1, x0]
    a4e8:	mov	w2, w0
    a4ec:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    a4f0:	add	x1, x0, #0xf8
    a4f4:	mov	x0, x3
    a4f8:	bl	1730 <fprintf@plt>
    a4fc:	ldr	w0, [sp, #248]
    a500:	add	w0, w0, #0x1
    a504:	str	w0, [sp, #248]
    a508:	ldr	w1, [sp, #248]
    a50c:	ldr	w0, [sp, #196]
    a510:	cmp	w1, w0
    a514:	b.lt	a4cc <BZ2_bsInitWrite@@Base+0x4240>  // b.tstop
    a518:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    a51c:	ldr	x0, [x0, #4016]
    a520:	ldr	x0, [x0]
    a524:	mov	x1, x0
    a528:	mov	w0, #0xa                   	// #10
    a52c:	bl	1500 <fputc@plt>
    a530:	str	wzr, [sp, #248]
    a534:	b	a5a8 <BZ2_bsInitWrite@@Base+0x431c>
    a538:	ldrsw	x1, [sp, #248]
    a53c:	mov	x0, x1
    a540:	lsl	x0, x0, #7
    a544:	add	x0, x0, x1
    a548:	lsl	x0, x0, #1
    a54c:	mov	x1, #0x9340                	// #37696
    a550:	add	x0, x0, x1
    a554:	ldr	x1, [sp, #56]
    a558:	add	x0, x1, x0
    a55c:	add	x4, x0, #0xc
    a560:	ldrsw	x1, [sp, #248]
    a564:	mov	x0, x1
    a568:	lsl	x0, x0, #7
    a56c:	add	x0, x0, x1
    a570:	lsl	x0, x0, #3
    a574:	mov	x1, #0xb180                	// #45440
    a578:	add	x0, x0, x1
    a57c:	ldr	x1, [sp, #56]
    a580:	add	x0, x1, x0
    a584:	add	x0, x0, #0x8
    a588:	mov	w3, #0x11                  	// #17
    a58c:	ldr	w2, [sp, #164]
    a590:	mov	x1, x0
    a594:	mov	x0, x4
    a598:	bl	14c0 <BZ2_hbMakeCodeLengths@plt>
    a59c:	ldr	w0, [sp, #248]
    a5a0:	add	w0, w0, #0x1
    a5a4:	str	w0, [sp, #248]
    a5a8:	ldr	w1, [sp, #248]
    a5ac:	ldr	w0, [sp, #196]
    a5b0:	cmp	w1, w0
    a5b4:	b.lt	a538 <BZ2_bsInitWrite@@Base+0x42ac>  // b.tstop
    a5b8:	ldr	w0, [sp, #216]
    a5bc:	add	w0, w0, #0x1
    a5c0:	str	w0, [sp, #216]
    a5c4:	ldr	w0, [sp, #216]
    a5c8:	cmp	w0, #0x3
    a5cc:	b.le	6d58 <BZ2_bsInitWrite@@Base+0xacc>
    a5d0:	ldr	w0, [sp, #196]
    a5d4:	cmp	w0, #0x7
    a5d8:	b.le	a5e4 <BZ2_bsInitWrite@@Base+0x4358>
    a5dc:	mov	w0, #0xbba                 	// #3002
    a5e0:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    a5e4:	ldr	w1, [sp, #212]
    a5e8:	mov	w0, #0x7fff                	// #32767
    a5ec:	cmp	w1, w0
    a5f0:	b.gt	a604 <BZ2_bsInitWrite@@Base+0x4378>
    a5f4:	ldr	w1, [sp, #212]
    a5f8:	mov	w0, #0x4652                	// #18002
    a5fc:	cmp	w1, w0
    a600:	b.le	a60c <BZ2_bsInitWrite@@Base+0x4380>
    a604:	mov	w0, #0xbbb                 	// #3003
    a608:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    a60c:	str	wzr, [sp, #244]
    a610:	b	a634 <BZ2_bsInitWrite@@Base+0x43a8>
    a614:	ldr	w0, [sp, #244]
    a618:	and	w2, w0, #0xff
    a61c:	ldrsw	x0, [sp, #244]
    a620:	add	x1, sp, #0x58
    a624:	strb	w2, [x1, x0]
    a628:	ldr	w0, [sp, #244]
    a62c:	add	w0, w0, #0x1
    a630:	str	w0, [sp, #244]
    a634:	ldr	w1, [sp, #244]
    a638:	ldr	w0, [sp, #196]
    a63c:	cmp	w1, w0
    a640:	b.lt	a614 <BZ2_bsInitWrite@@Base+0x4388>  // b.tstop
    a644:	str	wzr, [sp, #244]
    a648:	b	a6f0 <BZ2_bsInitWrite@@Base+0x4464>
    a64c:	ldr	x1, [sp, #56]
    a650:	ldrsw	x0, [sp, #244]
    a654:	add	x0, x1, x0
    a658:	ldrb	w0, [x0, #1704]
    a65c:	strb	w0, [sp, #141]
    a660:	str	wzr, [sp, #240]
    a664:	ldrsw	x0, [sp, #240]
    a668:	add	x1, sp, #0x58
    a66c:	ldrb	w0, [x1, x0]
    a670:	strb	w0, [sp, #183]
    a674:	b	a6ac <BZ2_bsInitWrite@@Base+0x4420>
    a678:	ldr	w0, [sp, #240]
    a67c:	add	w0, w0, #0x1
    a680:	str	w0, [sp, #240]
    a684:	ldrb	w0, [sp, #183]
    a688:	strb	w0, [sp, #140]
    a68c:	ldrsw	x0, [sp, #240]
    a690:	add	x1, sp, #0x58
    a694:	ldrb	w0, [x1, x0]
    a698:	strb	w0, [sp, #183]
    a69c:	ldrsw	x0, [sp, #240]
    a6a0:	add	x1, sp, #0x58
    a6a4:	ldrb	w2, [sp, #140]
    a6a8:	strb	w2, [x1, x0]
    a6ac:	ldrb	w1, [sp, #141]
    a6b0:	ldrb	w0, [sp, #183]
    a6b4:	cmp	w1, w0
    a6b8:	b.ne	a678 <BZ2_bsInitWrite@@Base+0x43ec>  // b.any
    a6bc:	ldrb	w0, [sp, #183]
    a6c0:	strb	w0, [sp, #88]
    a6c4:	ldr	w0, [sp, #240]
    a6c8:	and	w2, w0, #0xff
    a6cc:	ldr	x1, [sp, #56]
    a6d0:	ldrsw	x0, [sp, #244]
    a6d4:	add	x0, x1, x0
    a6d8:	add	x0, x0, #0x4, lsl #12
    a6dc:	mov	w1, w2
    a6e0:	strb	w1, [x0, #3322]
    a6e4:	ldr	w0, [sp, #244]
    a6e8:	add	w0, w0, #0x1
    a6ec:	str	w0, [sp, #244]
    a6f0:	ldr	w1, [sp, #244]
    a6f4:	ldr	w0, [sp, #212]
    a6f8:	cmp	w1, w0
    a6fc:	b.lt	a64c <BZ2_bsInitWrite@@Base+0x43c0>  // b.tstop
    a700:	str	wzr, [sp, #248]
    a704:	b	a8ac <BZ2_bsInitWrite@@Base+0x4620>
    a708:	mov	w0, #0x20                  	// #32
    a70c:	str	w0, [sp, #208]
    a710:	str	wzr, [sp, #204]
    a714:	str	wzr, [sp, #244]
    a718:	b	a800 <BZ2_bsInitWrite@@Base+0x4574>
    a71c:	ldr	x3, [sp, #56]
    a720:	ldrsw	x2, [sp, #244]
    a724:	ldrsw	x1, [sp, #248]
    a728:	mov	x0, x1
    a72c:	lsl	x0, x0, #7
    a730:	add	x0, x0, x1
    a734:	lsl	x0, x0, #1
    a738:	add	x0, x3, x0
    a73c:	add	x0, x0, x2
    a740:	add	x0, x0, #0x9, lsl #12
    a744:	ldrb	w0, [x0, #844]
    a748:	mov	w1, w0
    a74c:	ldr	w0, [sp, #204]
    a750:	cmp	w0, w1
    a754:	b.ge	a788 <BZ2_bsInitWrite@@Base+0x44fc>  // b.tcont
    a758:	ldr	x3, [sp, #56]
    a75c:	ldrsw	x2, [sp, #244]
    a760:	ldrsw	x1, [sp, #248]
    a764:	mov	x0, x1
    a768:	lsl	x0, x0, #7
    a76c:	add	x0, x0, x1
    a770:	lsl	x0, x0, #1
    a774:	add	x0, x3, x0
    a778:	add	x0, x0, x2
    a77c:	add	x0, x0, #0x9, lsl #12
    a780:	ldrb	w0, [x0, #844]
    a784:	str	w0, [sp, #204]
    a788:	ldr	x3, [sp, #56]
    a78c:	ldrsw	x2, [sp, #244]
    a790:	ldrsw	x1, [sp, #248]
    a794:	mov	x0, x1
    a798:	lsl	x0, x0, #7
    a79c:	add	x0, x0, x1
    a7a0:	lsl	x0, x0, #1
    a7a4:	add	x0, x3, x0
    a7a8:	add	x0, x0, x2
    a7ac:	add	x0, x0, #0x9, lsl #12
    a7b0:	ldrb	w0, [x0, #844]
    a7b4:	mov	w1, w0
    a7b8:	ldr	w0, [sp, #208]
    a7bc:	cmp	w0, w1
    a7c0:	b.le	a7f4 <BZ2_bsInitWrite@@Base+0x4568>
    a7c4:	ldr	x3, [sp, #56]
    a7c8:	ldrsw	x2, [sp, #244]
    a7cc:	ldrsw	x1, [sp, #248]
    a7d0:	mov	x0, x1
    a7d4:	lsl	x0, x0, #7
    a7d8:	add	x0, x0, x1
    a7dc:	lsl	x0, x0, #1
    a7e0:	add	x0, x3, x0
    a7e4:	add	x0, x0, x2
    a7e8:	add	x0, x0, #0x9, lsl #12
    a7ec:	ldrb	w0, [x0, #844]
    a7f0:	str	w0, [sp, #208]
    a7f4:	ldr	w0, [sp, #244]
    a7f8:	add	w0, w0, #0x1
    a7fc:	str	w0, [sp, #244]
    a800:	ldr	w1, [sp, #244]
    a804:	ldr	w0, [sp, #164]
    a808:	cmp	w1, w0
    a80c:	b.lt	a71c <BZ2_bsInitWrite@@Base+0x4490>  // b.tstop
    a810:	ldr	w0, [sp, #204]
    a814:	cmp	w0, #0x11
    a818:	b.le	a824 <BZ2_bsInitWrite@@Base+0x4598>
    a81c:	mov	w0, #0xbbc                 	// #3004
    a820:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    a824:	ldr	w0, [sp, #208]
    a828:	cmp	w0, #0x0
    a82c:	b.gt	a838 <BZ2_bsInitWrite@@Base+0x45ac>
    a830:	mov	w0, #0xbbd                 	// #3005
    a834:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    a838:	ldrsw	x1, [sp, #248]
    a83c:	mov	x0, x1
    a840:	lsl	x0, x0, #7
    a844:	add	x0, x0, x1
    a848:	lsl	x0, x0, #3
    a84c:	mov	x1, #0x9950                	// #39248
    a850:	add	x0, x0, x1
    a854:	ldr	x1, [sp, #56]
    a858:	add	x0, x1, x0
    a85c:	add	x5, x0, #0x8
    a860:	ldrsw	x1, [sp, #248]
    a864:	mov	x0, x1
    a868:	lsl	x0, x0, #7
    a86c:	add	x0, x0, x1
    a870:	lsl	x0, x0, #1
    a874:	mov	x1, #0x9340                	// #37696
    a878:	add	x0, x0, x1
    a87c:	ldr	x1, [sp, #56]
    a880:	add	x0, x1, x0
    a884:	add	x0, x0, #0xc
    a888:	ldr	w4, [sp, #164]
    a88c:	ldr	w3, [sp, #204]
    a890:	ldr	w2, [sp, #208]
    a894:	mov	x1, x0
    a898:	mov	x0, x5
    a89c:	bl	16c0 <BZ2_hbAssignCodes@plt>
    a8a0:	ldr	w0, [sp, #248]
    a8a4:	add	w0, w0, #0x1
    a8a8:	str	w0, [sp, #248]
    a8ac:	ldr	w1, [sp, #248]
    a8b0:	ldr	w0, [sp, #196]
    a8b4:	cmp	w1, w0
    a8b8:	b.lt	a708 <BZ2_bsInitWrite@@Base+0x447c>  // b.tstop
    a8bc:	str	wzr, [sp, #244]
    a8c0:	b	a934 <BZ2_bsInitWrite@@Base+0x46a8>
    a8c4:	ldrsw	x0, [sp, #244]
    a8c8:	add	x1, sp, #0x48
    a8cc:	strb	wzr, [x1, x0]
    a8d0:	str	wzr, [sp, #240]
    a8d4:	b	a91c <BZ2_bsInitWrite@@Base+0x4690>
    a8d8:	ldr	w0, [sp, #244]
    a8dc:	lsl	w1, w0, #4
    a8e0:	ldr	w0, [sp, #240]
    a8e4:	add	w0, w1, w0
    a8e8:	ldr	x1, [sp, #56]
    a8ec:	sxtw	x0, w0
    a8f0:	add	x0, x1, x0
    a8f4:	ldrb	w0, [x0, #128]
    a8f8:	cmp	w0, #0x0
    a8fc:	b.eq	a910 <BZ2_bsInitWrite@@Base+0x4684>  // b.none
    a900:	ldrsw	x0, [sp, #244]
    a904:	add	x1, sp, #0x48
    a908:	mov	w2, #0x1                   	// #1
    a90c:	strb	w2, [x1, x0]
    a910:	ldr	w0, [sp, #240]
    a914:	add	w0, w0, #0x1
    a918:	str	w0, [sp, #240]
    a91c:	ldr	w0, [sp, #240]
    a920:	cmp	w0, #0xf
    a924:	b.le	a8d8 <BZ2_bsInitWrite@@Base+0x464c>
    a928:	ldr	w0, [sp, #244]
    a92c:	add	w0, w0, #0x1
    a930:	str	w0, [sp, #244]
    a934:	ldr	w0, [sp, #244]
    a938:	cmp	w0, #0xf
    a93c:	b.le	a8c4 <BZ2_bsInitWrite@@Base+0x4638>
    a940:	ldr	x0, [sp, #56]
    a944:	ldr	w0, [x0, #116]
    a948:	str	w0, [sp, #160]
    a94c:	str	wzr, [sp, #244]
    a950:	b	a998 <BZ2_bsInitWrite@@Base+0x470c>
    a954:	ldrsw	x0, [sp, #244]
    a958:	add	x1, sp, #0x48
    a95c:	ldrb	w0, [x1, x0]
    a960:	cmp	w0, #0x0
    a964:	b.eq	a97c <BZ2_bsInitWrite@@Base+0x46f0>  // b.none
    a968:	mov	w2, #0x1                   	// #1
    a96c:	mov	w1, #0x1                   	// #1
    a970:	ldr	x0, [sp, #56]
    a974:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    a978:	b	a98c <BZ2_bsInitWrite@@Base+0x4700>
    a97c:	mov	w2, #0x0                   	// #0
    a980:	mov	w1, #0x1                   	// #1
    a984:	ldr	x0, [sp, #56]
    a988:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    a98c:	ldr	w0, [sp, #244]
    a990:	add	w0, w0, #0x1
    a994:	str	w0, [sp, #244]
    a998:	ldr	w0, [sp, #244]
    a99c:	cmp	w0, #0xf
    a9a0:	b.le	a954 <BZ2_bsInitWrite@@Base+0x46c8>
    a9a4:	str	wzr, [sp, #244]
    a9a8:	b	aa38 <BZ2_bsInitWrite@@Base+0x47ac>
    a9ac:	ldrsw	x0, [sp, #244]
    a9b0:	add	x1, sp, #0x48
    a9b4:	ldrb	w0, [x1, x0]
    a9b8:	cmp	w0, #0x0
    a9bc:	b.eq	aa2c <BZ2_bsInitWrite@@Base+0x47a0>  // b.none
    a9c0:	str	wzr, [sp, #240]
    a9c4:	b	aa20 <BZ2_bsInitWrite@@Base+0x4794>
    a9c8:	ldr	w0, [sp, #244]
    a9cc:	lsl	w1, w0, #4
    a9d0:	ldr	w0, [sp, #240]
    a9d4:	add	w0, w1, w0
    a9d8:	ldr	x1, [sp, #56]
    a9dc:	sxtw	x0, w0
    a9e0:	add	x0, x1, x0
    a9e4:	ldrb	w0, [x0, #128]
    a9e8:	cmp	w0, #0x0
    a9ec:	b.eq	aa04 <BZ2_bsInitWrite@@Base+0x4778>  // b.none
    a9f0:	mov	w2, #0x1                   	// #1
    a9f4:	mov	w1, #0x1                   	// #1
    a9f8:	ldr	x0, [sp, #56]
    a9fc:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    aa00:	b	aa14 <BZ2_bsInitWrite@@Base+0x4788>
    aa04:	mov	w2, #0x0                   	// #0
    aa08:	mov	w1, #0x1                   	// #1
    aa0c:	ldr	x0, [sp, #56]
    aa10:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    aa14:	ldr	w0, [sp, #240]
    aa18:	add	w0, w0, #0x1
    aa1c:	str	w0, [sp, #240]
    aa20:	ldr	w0, [sp, #240]
    aa24:	cmp	w0, #0xf
    aa28:	b.le	a9c8 <BZ2_bsInitWrite@@Base+0x473c>
    aa2c:	ldr	w0, [sp, #244]
    aa30:	add	w0, w0, #0x1
    aa34:	str	w0, [sp, #244]
    aa38:	ldr	w0, [sp, #244]
    aa3c:	cmp	w0, #0xf
    aa40:	b.le	a9ac <BZ2_bsInitWrite@@Base+0x4720>
    aa44:	ldr	x0, [sp, #56]
    aa48:	ldr	w0, [x0, #656]
    aa4c:	cmp	w0, #0x2
    aa50:	b.le	aa84 <BZ2_bsInitWrite@@Base+0x47f8>
    aa54:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    aa58:	ldr	x0, [x0, #4016]
    aa5c:	ldr	x3, [x0]
    aa60:	ldr	x0, [sp, #56]
    aa64:	ldr	w1, [x0, #116]
    aa68:	ldr	w0, [sp, #160]
    aa6c:	sub	w0, w1, w0
    aa70:	mov	w2, w0
    aa74:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    aa78:	add	x1, x0, #0x100
    aa7c:	mov	x0, x3
    aa80:	bl	1730 <fprintf@plt>
    aa84:	ldr	x0, [sp, #56]
    aa88:	ldr	w0, [x0, #116]
    aa8c:	str	w0, [sp, #160]
    aa90:	ldr	w0, [sp, #196]
    aa94:	mov	w2, w0
    aa98:	mov	w1, #0x3                   	// #3
    aa9c:	ldr	x0, [sp, #56]
    aaa0:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    aaa4:	ldr	w0, [sp, #212]
    aaa8:	mov	w2, w0
    aaac:	mov	w1, #0xf                   	// #15
    aab0:	ldr	x0, [sp, #56]
    aab4:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    aab8:	str	wzr, [sp, #244]
    aabc:	b	ab24 <BZ2_bsInitWrite@@Base+0x4898>
    aac0:	str	wzr, [sp, #240]
    aac4:	b	aae4 <BZ2_bsInitWrite@@Base+0x4858>
    aac8:	mov	w2, #0x1                   	// #1
    aacc:	mov	w1, #0x1                   	// #1
    aad0:	ldr	x0, [sp, #56]
    aad4:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    aad8:	ldr	w0, [sp, #240]
    aadc:	add	w0, w0, #0x1
    aae0:	str	w0, [sp, #240]
    aae4:	ldr	x1, [sp, #56]
    aae8:	ldrsw	x0, [sp, #244]
    aaec:	add	x0, x1, x0
    aaf0:	add	x0, x0, #0x4, lsl #12
    aaf4:	ldrb	w0, [x0, #3322]
    aaf8:	mov	w1, w0
    aafc:	ldr	w0, [sp, #240]
    ab00:	cmp	w0, w1
    ab04:	b.lt	aac8 <BZ2_bsInitWrite@@Base+0x483c>  // b.tstop
    ab08:	mov	w2, #0x0                   	// #0
    ab0c:	mov	w1, #0x1                   	// #1
    ab10:	ldr	x0, [sp, #56]
    ab14:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    ab18:	ldr	w0, [sp, #244]
    ab1c:	add	w0, w0, #0x1
    ab20:	str	w0, [sp, #244]
    ab24:	ldr	w1, [sp, #244]
    ab28:	ldr	w0, [sp, #212]
    ab2c:	cmp	w1, w0
    ab30:	b.lt	aac0 <BZ2_bsInitWrite@@Base+0x4834>  // b.tstop
    ab34:	ldr	x0, [sp, #56]
    ab38:	ldr	w0, [x0, #656]
    ab3c:	cmp	w0, #0x2
    ab40:	b.le	ab74 <BZ2_bsInitWrite@@Base+0x48e8>
    ab44:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    ab48:	ldr	x0, [x0, #4016]
    ab4c:	ldr	x3, [x0]
    ab50:	ldr	x0, [sp, #56]
    ab54:	ldr	w1, [x0, #116]
    ab58:	ldr	w0, [sp, #160]
    ab5c:	sub	w0, w1, w0
    ab60:	mov	w2, w0
    ab64:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    ab68:	add	x1, x0, #0x120
    ab6c:	mov	x0, x3
    ab70:	bl	1730 <fprintf@plt>
    ab74:	ldr	x0, [sp, #56]
    ab78:	ldr	w0, [x0, #116]
    ab7c:	str	w0, [sp, #160]
    ab80:	str	wzr, [sp, #248]
    ab84:	b	acb8 <BZ2_bsInitWrite@@Base+0x4a2c>
    ab88:	ldr	x2, [sp, #56]
    ab8c:	ldrsw	x1, [sp, #248]
    ab90:	mov	x0, x1
    ab94:	lsl	x0, x0, #7
    ab98:	add	x0, x0, x1
    ab9c:	lsl	x0, x0, #1
    aba0:	add	x0, x2, x0
    aba4:	add	x0, x0, #0x9, lsl #12
    aba8:	ldrb	w0, [x0, #844]
    abac:	str	w0, [sp, #176]
    abb0:	ldr	w0, [sp, #176]
    abb4:	mov	w2, w0
    abb8:	mov	w1, #0x5                   	// #5
    abbc:	ldr	x0, [sp, #56]
    abc0:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    abc4:	str	wzr, [sp, #244]
    abc8:	b	ac9c <BZ2_bsInitWrite@@Base+0x4a10>
    abcc:	mov	w2, #0x2                   	// #2
    abd0:	mov	w1, #0x2                   	// #2
    abd4:	ldr	x0, [sp, #56]
    abd8:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    abdc:	ldr	w0, [sp, #176]
    abe0:	add	w0, w0, #0x1
    abe4:	str	w0, [sp, #176]
    abe8:	ldr	x3, [sp, #56]
    abec:	ldrsw	x2, [sp, #244]
    abf0:	ldrsw	x1, [sp, #248]
    abf4:	mov	x0, x1
    abf8:	lsl	x0, x0, #7
    abfc:	add	x0, x0, x1
    ac00:	lsl	x0, x0, #1
    ac04:	add	x0, x3, x0
    ac08:	add	x0, x0, x2
    ac0c:	add	x0, x0, #0x9, lsl #12
    ac10:	ldrb	w0, [x0, #844]
    ac14:	mov	w1, w0
    ac18:	ldr	w0, [sp, #176]
    ac1c:	cmp	w0, w1
    ac20:	b.lt	abcc <BZ2_bsInitWrite@@Base+0x4940>  // b.tstop
    ac24:	b	ac44 <BZ2_bsInitWrite@@Base+0x49b8>
    ac28:	mov	w2, #0x3                   	// #3
    ac2c:	mov	w1, #0x2                   	// #2
    ac30:	ldr	x0, [sp, #56]
    ac34:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    ac38:	ldr	w0, [sp, #176]
    ac3c:	sub	w0, w0, #0x1
    ac40:	str	w0, [sp, #176]
    ac44:	ldr	x3, [sp, #56]
    ac48:	ldrsw	x2, [sp, #244]
    ac4c:	ldrsw	x1, [sp, #248]
    ac50:	mov	x0, x1
    ac54:	lsl	x0, x0, #7
    ac58:	add	x0, x0, x1
    ac5c:	lsl	x0, x0, #1
    ac60:	add	x0, x3, x0
    ac64:	add	x0, x0, x2
    ac68:	add	x0, x0, #0x9, lsl #12
    ac6c:	ldrb	w0, [x0, #844]
    ac70:	mov	w1, w0
    ac74:	ldr	w0, [sp, #176]
    ac78:	cmp	w0, w1
    ac7c:	b.gt	ac28 <BZ2_bsInitWrite@@Base+0x499c>
    ac80:	mov	w2, #0x0                   	// #0
    ac84:	mov	w1, #0x1                   	// #1
    ac88:	ldr	x0, [sp, #56]
    ac8c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    ac90:	ldr	w0, [sp, #244]
    ac94:	add	w0, w0, #0x1
    ac98:	str	w0, [sp, #244]
    ac9c:	ldr	w1, [sp, #244]
    aca0:	ldr	w0, [sp, #164]
    aca4:	cmp	w1, w0
    aca8:	b.lt	abe8 <BZ2_bsInitWrite@@Base+0x495c>  // b.tstop
    acac:	ldr	w0, [sp, #248]
    acb0:	add	w0, w0, #0x1
    acb4:	str	w0, [sp, #248]
    acb8:	ldr	w1, [sp, #248]
    acbc:	ldr	w0, [sp, #196]
    acc0:	cmp	w1, w0
    acc4:	b.lt	ab88 <BZ2_bsInitWrite@@Base+0x48fc>  // b.tstop
    acc8:	ldr	x0, [sp, #56]
    accc:	ldr	w0, [x0, #656]
    acd0:	cmp	w0, #0x2
    acd4:	b.le	ad08 <BZ2_bsInitWrite@@Base+0x4a7c>
    acd8:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    acdc:	ldr	x0, [x0, #4016]
    ace0:	ldr	x3, [x0]
    ace4:	ldr	x0, [sp, #56]
    ace8:	ldr	w1, [x0, #116]
    acec:	ldr	w0, [sp, #160]
    acf0:	sub	w0, w1, w0
    acf4:	mov	w2, w0
    acf8:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    acfc:	add	x1, x0, #0x130
    ad00:	mov	x0, x3
    ad04:	bl	1730 <fprintf@plt>
    ad08:	ldr	x0, [sp, #56]
    ad0c:	ldr	w0, [x0, #116]
    ad10:	str	w0, [sp, #160]
    ad14:	str	wzr, [sp, #200]
    ad18:	str	wzr, [sp, #236]
    ad1c:	ldr	x0, [sp, #56]
    ad20:	ldr	w0, [x0, #668]
    ad24:	ldr	w1, [sp, #236]
    ad28:	cmp	w1, w0
    ad2c:	b.ge	bf90 <BZ2_bsInitWrite@@Base+0x5d04>  // b.tcont
    ad30:	ldr	w0, [sp, #236]
    ad34:	add	w0, w0, #0x31
    ad38:	str	w0, [sp, #232]
    ad3c:	ldr	x0, [sp, #56]
    ad40:	ldr	w0, [x0, #668]
    ad44:	ldr	w1, [sp, #232]
    ad48:	cmp	w1, w0
    ad4c:	b.lt	ad60 <BZ2_bsInitWrite@@Base+0x4ad4>  // b.tstop
    ad50:	ldr	x0, [sp, #56]
    ad54:	ldr	w0, [x0, #668]
    ad58:	sub	w0, w0, #0x1
    ad5c:	str	w0, [sp, #232]
    ad60:	ldr	x1, [sp, #56]
    ad64:	ldrsw	x0, [sp, #200]
    ad68:	add	x0, x1, x0
    ad6c:	ldrb	w0, [x0, #1704]
    ad70:	mov	w1, w0
    ad74:	ldr	w0, [sp, #196]
    ad78:	cmp	w0, w1
    ad7c:	b.gt	ad88 <BZ2_bsInitWrite@@Base+0x4afc>
    ad80:	mov	w0, #0xbbe                 	// #3006
    ad84:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    ad88:	ldr	w0, [sp, #196]
    ad8c:	cmp	w0, #0x6
    ad90:	b.ne	be88 <BZ2_bsInitWrite@@Base+0x5bfc>  // b.any
    ad94:	ldr	w1, [sp, #232]
    ad98:	ldr	w0, [sp, #236]
    ad9c:	sub	w0, w1, w0
    ada0:	cmp	w0, #0x31
    ada4:	b.ne	be88 <BZ2_bsInitWrite@@Base+0x5bfc>  // b.any
    ada8:	ldr	x1, [sp, #56]
    adac:	ldrsw	x0, [sp, #200]
    adb0:	add	x0, x1, x0
    adb4:	ldrb	w0, [x0, #1704]
    adb8:	sxtw	x1, w0
    adbc:	mov	x0, x1
    adc0:	lsl	x0, x0, #7
    adc4:	add	x0, x0, x1
    adc8:	lsl	x0, x0, #1
    adcc:	mov	x1, #0x9340                	// #37696
    add0:	add	x0, x0, x1
    add4:	ldr	x1, [sp, #56]
    add8:	add	x0, x1, x0
    addc:	add	x0, x0, #0xc
    ade0:	str	x0, [sp, #152]
    ade4:	ldr	x1, [sp, #56]
    ade8:	ldrsw	x0, [sp, #200]
    adec:	add	x0, x1, x0
    adf0:	ldrb	w0, [x0, #1704]
    adf4:	sxtw	x1, w0
    adf8:	mov	x0, x1
    adfc:	lsl	x0, x0, #7
    ae00:	add	x0, x0, x1
    ae04:	lsl	x0, x0, #3
    ae08:	mov	x1, #0x9950                	// #39248
    ae0c:	add	x0, x0, x1
    ae10:	ldr	x1, [sp, #56]
    ae14:	add	x0, x1, x0
    ae18:	add	x0, x0, #0x8
    ae1c:	str	x0, [sp, #144]
    ae20:	ldrsw	x0, [sp, #236]
    ae24:	lsl	x0, x0, #1
    ae28:	ldr	x1, [sp, #168]
    ae2c:	add	x0, x1, x0
    ae30:	ldrh	w0, [x0]
    ae34:	strh	w0, [sp, #142]
    ae38:	ldrh	w0, [sp, #142]
    ae3c:	ldr	x1, [sp, #152]
    ae40:	add	x0, x1, x0
    ae44:	ldrb	w0, [x0]
    ae48:	mov	w3, w0
    ae4c:	ldrh	w0, [sp, #142]
    ae50:	lsl	x0, x0, #2
    ae54:	ldr	x1, [sp, #144]
    ae58:	add	x0, x1, x0
    ae5c:	ldr	w0, [x0]
    ae60:	mov	w2, w0
    ae64:	mov	w1, w3
    ae68:	ldr	x0, [sp, #56]
    ae6c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    ae70:	ldrsw	x0, [sp, #236]
    ae74:	add	x0, x0, #0x1
    ae78:	lsl	x0, x0, #1
    ae7c:	ldr	x1, [sp, #168]
    ae80:	add	x0, x1, x0
    ae84:	ldrh	w0, [x0]
    ae88:	strh	w0, [sp, #142]
    ae8c:	ldrh	w0, [sp, #142]
    ae90:	ldr	x1, [sp, #152]
    ae94:	add	x0, x1, x0
    ae98:	ldrb	w0, [x0]
    ae9c:	mov	w3, w0
    aea0:	ldrh	w0, [sp, #142]
    aea4:	lsl	x0, x0, #2
    aea8:	ldr	x1, [sp, #144]
    aeac:	add	x0, x1, x0
    aeb0:	ldr	w0, [x0]
    aeb4:	mov	w2, w0
    aeb8:	mov	w1, w3
    aebc:	ldr	x0, [sp, #56]
    aec0:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    aec4:	ldrsw	x0, [sp, #236]
    aec8:	add	x0, x0, #0x2
    aecc:	lsl	x0, x0, #1
    aed0:	ldr	x1, [sp, #168]
    aed4:	add	x0, x1, x0
    aed8:	ldrh	w0, [x0]
    aedc:	strh	w0, [sp, #142]
    aee0:	ldrh	w0, [sp, #142]
    aee4:	ldr	x1, [sp, #152]
    aee8:	add	x0, x1, x0
    aeec:	ldrb	w0, [x0]
    aef0:	mov	w3, w0
    aef4:	ldrh	w0, [sp, #142]
    aef8:	lsl	x0, x0, #2
    aefc:	ldr	x1, [sp, #144]
    af00:	add	x0, x1, x0
    af04:	ldr	w0, [x0]
    af08:	mov	w2, w0
    af0c:	mov	w1, w3
    af10:	ldr	x0, [sp, #56]
    af14:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    af18:	ldrsw	x0, [sp, #236]
    af1c:	add	x0, x0, #0x3
    af20:	lsl	x0, x0, #1
    af24:	ldr	x1, [sp, #168]
    af28:	add	x0, x1, x0
    af2c:	ldrh	w0, [x0]
    af30:	strh	w0, [sp, #142]
    af34:	ldrh	w0, [sp, #142]
    af38:	ldr	x1, [sp, #152]
    af3c:	add	x0, x1, x0
    af40:	ldrb	w0, [x0]
    af44:	mov	w3, w0
    af48:	ldrh	w0, [sp, #142]
    af4c:	lsl	x0, x0, #2
    af50:	ldr	x1, [sp, #144]
    af54:	add	x0, x1, x0
    af58:	ldr	w0, [x0]
    af5c:	mov	w2, w0
    af60:	mov	w1, w3
    af64:	ldr	x0, [sp, #56]
    af68:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    af6c:	ldrsw	x0, [sp, #236]
    af70:	add	x0, x0, #0x4
    af74:	lsl	x0, x0, #1
    af78:	ldr	x1, [sp, #168]
    af7c:	add	x0, x1, x0
    af80:	ldrh	w0, [x0]
    af84:	strh	w0, [sp, #142]
    af88:	ldrh	w0, [sp, #142]
    af8c:	ldr	x1, [sp, #152]
    af90:	add	x0, x1, x0
    af94:	ldrb	w0, [x0]
    af98:	mov	w3, w0
    af9c:	ldrh	w0, [sp, #142]
    afa0:	lsl	x0, x0, #2
    afa4:	ldr	x1, [sp, #144]
    afa8:	add	x0, x1, x0
    afac:	ldr	w0, [x0]
    afb0:	mov	w2, w0
    afb4:	mov	w1, w3
    afb8:	ldr	x0, [sp, #56]
    afbc:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    afc0:	ldrsw	x0, [sp, #236]
    afc4:	add	x0, x0, #0x5
    afc8:	lsl	x0, x0, #1
    afcc:	ldr	x1, [sp, #168]
    afd0:	add	x0, x1, x0
    afd4:	ldrh	w0, [x0]
    afd8:	strh	w0, [sp, #142]
    afdc:	ldrh	w0, [sp, #142]
    afe0:	ldr	x1, [sp, #152]
    afe4:	add	x0, x1, x0
    afe8:	ldrb	w0, [x0]
    afec:	mov	w3, w0
    aff0:	ldrh	w0, [sp, #142]
    aff4:	lsl	x0, x0, #2
    aff8:	ldr	x1, [sp, #144]
    affc:	add	x0, x1, x0
    b000:	ldr	w0, [x0]
    b004:	mov	w2, w0
    b008:	mov	w1, w3
    b00c:	ldr	x0, [sp, #56]
    b010:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b014:	ldrsw	x0, [sp, #236]
    b018:	add	x0, x0, #0x6
    b01c:	lsl	x0, x0, #1
    b020:	ldr	x1, [sp, #168]
    b024:	add	x0, x1, x0
    b028:	ldrh	w0, [x0]
    b02c:	strh	w0, [sp, #142]
    b030:	ldrh	w0, [sp, #142]
    b034:	ldr	x1, [sp, #152]
    b038:	add	x0, x1, x0
    b03c:	ldrb	w0, [x0]
    b040:	mov	w3, w0
    b044:	ldrh	w0, [sp, #142]
    b048:	lsl	x0, x0, #2
    b04c:	ldr	x1, [sp, #144]
    b050:	add	x0, x1, x0
    b054:	ldr	w0, [x0]
    b058:	mov	w2, w0
    b05c:	mov	w1, w3
    b060:	ldr	x0, [sp, #56]
    b064:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b068:	ldrsw	x0, [sp, #236]
    b06c:	add	x0, x0, #0x7
    b070:	lsl	x0, x0, #1
    b074:	ldr	x1, [sp, #168]
    b078:	add	x0, x1, x0
    b07c:	ldrh	w0, [x0]
    b080:	strh	w0, [sp, #142]
    b084:	ldrh	w0, [sp, #142]
    b088:	ldr	x1, [sp, #152]
    b08c:	add	x0, x1, x0
    b090:	ldrb	w0, [x0]
    b094:	mov	w3, w0
    b098:	ldrh	w0, [sp, #142]
    b09c:	lsl	x0, x0, #2
    b0a0:	ldr	x1, [sp, #144]
    b0a4:	add	x0, x1, x0
    b0a8:	ldr	w0, [x0]
    b0ac:	mov	w2, w0
    b0b0:	mov	w1, w3
    b0b4:	ldr	x0, [sp, #56]
    b0b8:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b0bc:	ldrsw	x0, [sp, #236]
    b0c0:	add	x0, x0, #0x8
    b0c4:	lsl	x0, x0, #1
    b0c8:	ldr	x1, [sp, #168]
    b0cc:	add	x0, x1, x0
    b0d0:	ldrh	w0, [x0]
    b0d4:	strh	w0, [sp, #142]
    b0d8:	ldrh	w0, [sp, #142]
    b0dc:	ldr	x1, [sp, #152]
    b0e0:	add	x0, x1, x0
    b0e4:	ldrb	w0, [x0]
    b0e8:	mov	w3, w0
    b0ec:	ldrh	w0, [sp, #142]
    b0f0:	lsl	x0, x0, #2
    b0f4:	ldr	x1, [sp, #144]
    b0f8:	add	x0, x1, x0
    b0fc:	ldr	w0, [x0]
    b100:	mov	w2, w0
    b104:	mov	w1, w3
    b108:	ldr	x0, [sp, #56]
    b10c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b110:	ldrsw	x0, [sp, #236]
    b114:	add	x0, x0, #0x9
    b118:	lsl	x0, x0, #1
    b11c:	ldr	x1, [sp, #168]
    b120:	add	x0, x1, x0
    b124:	ldrh	w0, [x0]
    b128:	strh	w0, [sp, #142]
    b12c:	ldrh	w0, [sp, #142]
    b130:	ldr	x1, [sp, #152]
    b134:	add	x0, x1, x0
    b138:	ldrb	w0, [x0]
    b13c:	mov	w3, w0
    b140:	ldrh	w0, [sp, #142]
    b144:	lsl	x0, x0, #2
    b148:	ldr	x1, [sp, #144]
    b14c:	add	x0, x1, x0
    b150:	ldr	w0, [x0]
    b154:	mov	w2, w0
    b158:	mov	w1, w3
    b15c:	ldr	x0, [sp, #56]
    b160:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b164:	ldrsw	x0, [sp, #236]
    b168:	add	x0, x0, #0xa
    b16c:	lsl	x0, x0, #1
    b170:	ldr	x1, [sp, #168]
    b174:	add	x0, x1, x0
    b178:	ldrh	w0, [x0]
    b17c:	strh	w0, [sp, #142]
    b180:	ldrh	w0, [sp, #142]
    b184:	ldr	x1, [sp, #152]
    b188:	add	x0, x1, x0
    b18c:	ldrb	w0, [x0]
    b190:	mov	w3, w0
    b194:	ldrh	w0, [sp, #142]
    b198:	lsl	x0, x0, #2
    b19c:	ldr	x1, [sp, #144]
    b1a0:	add	x0, x1, x0
    b1a4:	ldr	w0, [x0]
    b1a8:	mov	w2, w0
    b1ac:	mov	w1, w3
    b1b0:	ldr	x0, [sp, #56]
    b1b4:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b1b8:	ldrsw	x0, [sp, #236]
    b1bc:	add	x0, x0, #0xb
    b1c0:	lsl	x0, x0, #1
    b1c4:	ldr	x1, [sp, #168]
    b1c8:	add	x0, x1, x0
    b1cc:	ldrh	w0, [x0]
    b1d0:	strh	w0, [sp, #142]
    b1d4:	ldrh	w0, [sp, #142]
    b1d8:	ldr	x1, [sp, #152]
    b1dc:	add	x0, x1, x0
    b1e0:	ldrb	w0, [x0]
    b1e4:	mov	w3, w0
    b1e8:	ldrh	w0, [sp, #142]
    b1ec:	lsl	x0, x0, #2
    b1f0:	ldr	x1, [sp, #144]
    b1f4:	add	x0, x1, x0
    b1f8:	ldr	w0, [x0]
    b1fc:	mov	w2, w0
    b200:	mov	w1, w3
    b204:	ldr	x0, [sp, #56]
    b208:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b20c:	ldrsw	x0, [sp, #236]
    b210:	add	x0, x0, #0xc
    b214:	lsl	x0, x0, #1
    b218:	ldr	x1, [sp, #168]
    b21c:	add	x0, x1, x0
    b220:	ldrh	w0, [x0]
    b224:	strh	w0, [sp, #142]
    b228:	ldrh	w0, [sp, #142]
    b22c:	ldr	x1, [sp, #152]
    b230:	add	x0, x1, x0
    b234:	ldrb	w0, [x0]
    b238:	mov	w3, w0
    b23c:	ldrh	w0, [sp, #142]
    b240:	lsl	x0, x0, #2
    b244:	ldr	x1, [sp, #144]
    b248:	add	x0, x1, x0
    b24c:	ldr	w0, [x0]
    b250:	mov	w2, w0
    b254:	mov	w1, w3
    b258:	ldr	x0, [sp, #56]
    b25c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b260:	ldrsw	x0, [sp, #236]
    b264:	add	x0, x0, #0xd
    b268:	lsl	x0, x0, #1
    b26c:	ldr	x1, [sp, #168]
    b270:	add	x0, x1, x0
    b274:	ldrh	w0, [x0]
    b278:	strh	w0, [sp, #142]
    b27c:	ldrh	w0, [sp, #142]
    b280:	ldr	x1, [sp, #152]
    b284:	add	x0, x1, x0
    b288:	ldrb	w0, [x0]
    b28c:	mov	w3, w0
    b290:	ldrh	w0, [sp, #142]
    b294:	lsl	x0, x0, #2
    b298:	ldr	x1, [sp, #144]
    b29c:	add	x0, x1, x0
    b2a0:	ldr	w0, [x0]
    b2a4:	mov	w2, w0
    b2a8:	mov	w1, w3
    b2ac:	ldr	x0, [sp, #56]
    b2b0:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b2b4:	ldrsw	x0, [sp, #236]
    b2b8:	add	x0, x0, #0xe
    b2bc:	lsl	x0, x0, #1
    b2c0:	ldr	x1, [sp, #168]
    b2c4:	add	x0, x1, x0
    b2c8:	ldrh	w0, [x0]
    b2cc:	strh	w0, [sp, #142]
    b2d0:	ldrh	w0, [sp, #142]
    b2d4:	ldr	x1, [sp, #152]
    b2d8:	add	x0, x1, x0
    b2dc:	ldrb	w0, [x0]
    b2e0:	mov	w3, w0
    b2e4:	ldrh	w0, [sp, #142]
    b2e8:	lsl	x0, x0, #2
    b2ec:	ldr	x1, [sp, #144]
    b2f0:	add	x0, x1, x0
    b2f4:	ldr	w0, [x0]
    b2f8:	mov	w2, w0
    b2fc:	mov	w1, w3
    b300:	ldr	x0, [sp, #56]
    b304:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b308:	ldrsw	x0, [sp, #236]
    b30c:	add	x0, x0, #0xf
    b310:	lsl	x0, x0, #1
    b314:	ldr	x1, [sp, #168]
    b318:	add	x0, x1, x0
    b31c:	ldrh	w0, [x0]
    b320:	strh	w0, [sp, #142]
    b324:	ldrh	w0, [sp, #142]
    b328:	ldr	x1, [sp, #152]
    b32c:	add	x0, x1, x0
    b330:	ldrb	w0, [x0]
    b334:	mov	w3, w0
    b338:	ldrh	w0, [sp, #142]
    b33c:	lsl	x0, x0, #2
    b340:	ldr	x1, [sp, #144]
    b344:	add	x0, x1, x0
    b348:	ldr	w0, [x0]
    b34c:	mov	w2, w0
    b350:	mov	w1, w3
    b354:	ldr	x0, [sp, #56]
    b358:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b35c:	ldrsw	x0, [sp, #236]
    b360:	add	x0, x0, #0x10
    b364:	lsl	x0, x0, #1
    b368:	ldr	x1, [sp, #168]
    b36c:	add	x0, x1, x0
    b370:	ldrh	w0, [x0]
    b374:	strh	w0, [sp, #142]
    b378:	ldrh	w0, [sp, #142]
    b37c:	ldr	x1, [sp, #152]
    b380:	add	x0, x1, x0
    b384:	ldrb	w0, [x0]
    b388:	mov	w3, w0
    b38c:	ldrh	w0, [sp, #142]
    b390:	lsl	x0, x0, #2
    b394:	ldr	x1, [sp, #144]
    b398:	add	x0, x1, x0
    b39c:	ldr	w0, [x0]
    b3a0:	mov	w2, w0
    b3a4:	mov	w1, w3
    b3a8:	ldr	x0, [sp, #56]
    b3ac:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b3b0:	ldrsw	x0, [sp, #236]
    b3b4:	add	x0, x0, #0x11
    b3b8:	lsl	x0, x0, #1
    b3bc:	ldr	x1, [sp, #168]
    b3c0:	add	x0, x1, x0
    b3c4:	ldrh	w0, [x0]
    b3c8:	strh	w0, [sp, #142]
    b3cc:	ldrh	w0, [sp, #142]
    b3d0:	ldr	x1, [sp, #152]
    b3d4:	add	x0, x1, x0
    b3d8:	ldrb	w0, [x0]
    b3dc:	mov	w3, w0
    b3e0:	ldrh	w0, [sp, #142]
    b3e4:	lsl	x0, x0, #2
    b3e8:	ldr	x1, [sp, #144]
    b3ec:	add	x0, x1, x0
    b3f0:	ldr	w0, [x0]
    b3f4:	mov	w2, w0
    b3f8:	mov	w1, w3
    b3fc:	ldr	x0, [sp, #56]
    b400:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b404:	ldrsw	x0, [sp, #236]
    b408:	add	x0, x0, #0x12
    b40c:	lsl	x0, x0, #1
    b410:	ldr	x1, [sp, #168]
    b414:	add	x0, x1, x0
    b418:	ldrh	w0, [x0]
    b41c:	strh	w0, [sp, #142]
    b420:	ldrh	w0, [sp, #142]
    b424:	ldr	x1, [sp, #152]
    b428:	add	x0, x1, x0
    b42c:	ldrb	w0, [x0]
    b430:	mov	w3, w0
    b434:	ldrh	w0, [sp, #142]
    b438:	lsl	x0, x0, #2
    b43c:	ldr	x1, [sp, #144]
    b440:	add	x0, x1, x0
    b444:	ldr	w0, [x0]
    b448:	mov	w2, w0
    b44c:	mov	w1, w3
    b450:	ldr	x0, [sp, #56]
    b454:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b458:	ldrsw	x0, [sp, #236]
    b45c:	add	x0, x0, #0x13
    b460:	lsl	x0, x0, #1
    b464:	ldr	x1, [sp, #168]
    b468:	add	x0, x1, x0
    b46c:	ldrh	w0, [x0]
    b470:	strh	w0, [sp, #142]
    b474:	ldrh	w0, [sp, #142]
    b478:	ldr	x1, [sp, #152]
    b47c:	add	x0, x1, x0
    b480:	ldrb	w0, [x0]
    b484:	mov	w3, w0
    b488:	ldrh	w0, [sp, #142]
    b48c:	lsl	x0, x0, #2
    b490:	ldr	x1, [sp, #144]
    b494:	add	x0, x1, x0
    b498:	ldr	w0, [x0]
    b49c:	mov	w2, w0
    b4a0:	mov	w1, w3
    b4a4:	ldr	x0, [sp, #56]
    b4a8:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b4ac:	ldrsw	x0, [sp, #236]
    b4b0:	add	x0, x0, #0x14
    b4b4:	lsl	x0, x0, #1
    b4b8:	ldr	x1, [sp, #168]
    b4bc:	add	x0, x1, x0
    b4c0:	ldrh	w0, [x0]
    b4c4:	strh	w0, [sp, #142]
    b4c8:	ldrh	w0, [sp, #142]
    b4cc:	ldr	x1, [sp, #152]
    b4d0:	add	x0, x1, x0
    b4d4:	ldrb	w0, [x0]
    b4d8:	mov	w3, w0
    b4dc:	ldrh	w0, [sp, #142]
    b4e0:	lsl	x0, x0, #2
    b4e4:	ldr	x1, [sp, #144]
    b4e8:	add	x0, x1, x0
    b4ec:	ldr	w0, [x0]
    b4f0:	mov	w2, w0
    b4f4:	mov	w1, w3
    b4f8:	ldr	x0, [sp, #56]
    b4fc:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b500:	ldrsw	x0, [sp, #236]
    b504:	add	x0, x0, #0x15
    b508:	lsl	x0, x0, #1
    b50c:	ldr	x1, [sp, #168]
    b510:	add	x0, x1, x0
    b514:	ldrh	w0, [x0]
    b518:	strh	w0, [sp, #142]
    b51c:	ldrh	w0, [sp, #142]
    b520:	ldr	x1, [sp, #152]
    b524:	add	x0, x1, x0
    b528:	ldrb	w0, [x0]
    b52c:	mov	w3, w0
    b530:	ldrh	w0, [sp, #142]
    b534:	lsl	x0, x0, #2
    b538:	ldr	x1, [sp, #144]
    b53c:	add	x0, x1, x0
    b540:	ldr	w0, [x0]
    b544:	mov	w2, w0
    b548:	mov	w1, w3
    b54c:	ldr	x0, [sp, #56]
    b550:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b554:	ldrsw	x0, [sp, #236]
    b558:	add	x0, x0, #0x16
    b55c:	lsl	x0, x0, #1
    b560:	ldr	x1, [sp, #168]
    b564:	add	x0, x1, x0
    b568:	ldrh	w0, [x0]
    b56c:	strh	w0, [sp, #142]
    b570:	ldrh	w0, [sp, #142]
    b574:	ldr	x1, [sp, #152]
    b578:	add	x0, x1, x0
    b57c:	ldrb	w0, [x0]
    b580:	mov	w3, w0
    b584:	ldrh	w0, [sp, #142]
    b588:	lsl	x0, x0, #2
    b58c:	ldr	x1, [sp, #144]
    b590:	add	x0, x1, x0
    b594:	ldr	w0, [x0]
    b598:	mov	w2, w0
    b59c:	mov	w1, w3
    b5a0:	ldr	x0, [sp, #56]
    b5a4:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b5a8:	ldrsw	x0, [sp, #236]
    b5ac:	add	x0, x0, #0x17
    b5b0:	lsl	x0, x0, #1
    b5b4:	ldr	x1, [sp, #168]
    b5b8:	add	x0, x1, x0
    b5bc:	ldrh	w0, [x0]
    b5c0:	strh	w0, [sp, #142]
    b5c4:	ldrh	w0, [sp, #142]
    b5c8:	ldr	x1, [sp, #152]
    b5cc:	add	x0, x1, x0
    b5d0:	ldrb	w0, [x0]
    b5d4:	mov	w3, w0
    b5d8:	ldrh	w0, [sp, #142]
    b5dc:	lsl	x0, x0, #2
    b5e0:	ldr	x1, [sp, #144]
    b5e4:	add	x0, x1, x0
    b5e8:	ldr	w0, [x0]
    b5ec:	mov	w2, w0
    b5f0:	mov	w1, w3
    b5f4:	ldr	x0, [sp, #56]
    b5f8:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b5fc:	ldrsw	x0, [sp, #236]
    b600:	add	x0, x0, #0x18
    b604:	lsl	x0, x0, #1
    b608:	ldr	x1, [sp, #168]
    b60c:	add	x0, x1, x0
    b610:	ldrh	w0, [x0]
    b614:	strh	w0, [sp, #142]
    b618:	ldrh	w0, [sp, #142]
    b61c:	ldr	x1, [sp, #152]
    b620:	add	x0, x1, x0
    b624:	ldrb	w0, [x0]
    b628:	mov	w3, w0
    b62c:	ldrh	w0, [sp, #142]
    b630:	lsl	x0, x0, #2
    b634:	ldr	x1, [sp, #144]
    b638:	add	x0, x1, x0
    b63c:	ldr	w0, [x0]
    b640:	mov	w2, w0
    b644:	mov	w1, w3
    b648:	ldr	x0, [sp, #56]
    b64c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b650:	ldrsw	x0, [sp, #236]
    b654:	add	x0, x0, #0x19
    b658:	lsl	x0, x0, #1
    b65c:	ldr	x1, [sp, #168]
    b660:	add	x0, x1, x0
    b664:	ldrh	w0, [x0]
    b668:	strh	w0, [sp, #142]
    b66c:	ldrh	w0, [sp, #142]
    b670:	ldr	x1, [sp, #152]
    b674:	add	x0, x1, x0
    b678:	ldrb	w0, [x0]
    b67c:	mov	w3, w0
    b680:	ldrh	w0, [sp, #142]
    b684:	lsl	x0, x0, #2
    b688:	ldr	x1, [sp, #144]
    b68c:	add	x0, x1, x0
    b690:	ldr	w0, [x0]
    b694:	mov	w2, w0
    b698:	mov	w1, w3
    b69c:	ldr	x0, [sp, #56]
    b6a0:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b6a4:	ldrsw	x0, [sp, #236]
    b6a8:	add	x0, x0, #0x1a
    b6ac:	lsl	x0, x0, #1
    b6b0:	ldr	x1, [sp, #168]
    b6b4:	add	x0, x1, x0
    b6b8:	ldrh	w0, [x0]
    b6bc:	strh	w0, [sp, #142]
    b6c0:	ldrh	w0, [sp, #142]
    b6c4:	ldr	x1, [sp, #152]
    b6c8:	add	x0, x1, x0
    b6cc:	ldrb	w0, [x0]
    b6d0:	mov	w3, w0
    b6d4:	ldrh	w0, [sp, #142]
    b6d8:	lsl	x0, x0, #2
    b6dc:	ldr	x1, [sp, #144]
    b6e0:	add	x0, x1, x0
    b6e4:	ldr	w0, [x0]
    b6e8:	mov	w2, w0
    b6ec:	mov	w1, w3
    b6f0:	ldr	x0, [sp, #56]
    b6f4:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b6f8:	ldrsw	x0, [sp, #236]
    b6fc:	add	x0, x0, #0x1b
    b700:	lsl	x0, x0, #1
    b704:	ldr	x1, [sp, #168]
    b708:	add	x0, x1, x0
    b70c:	ldrh	w0, [x0]
    b710:	strh	w0, [sp, #142]
    b714:	ldrh	w0, [sp, #142]
    b718:	ldr	x1, [sp, #152]
    b71c:	add	x0, x1, x0
    b720:	ldrb	w0, [x0]
    b724:	mov	w3, w0
    b728:	ldrh	w0, [sp, #142]
    b72c:	lsl	x0, x0, #2
    b730:	ldr	x1, [sp, #144]
    b734:	add	x0, x1, x0
    b738:	ldr	w0, [x0]
    b73c:	mov	w2, w0
    b740:	mov	w1, w3
    b744:	ldr	x0, [sp, #56]
    b748:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b74c:	ldrsw	x0, [sp, #236]
    b750:	add	x0, x0, #0x1c
    b754:	lsl	x0, x0, #1
    b758:	ldr	x1, [sp, #168]
    b75c:	add	x0, x1, x0
    b760:	ldrh	w0, [x0]
    b764:	strh	w0, [sp, #142]
    b768:	ldrh	w0, [sp, #142]
    b76c:	ldr	x1, [sp, #152]
    b770:	add	x0, x1, x0
    b774:	ldrb	w0, [x0]
    b778:	mov	w3, w0
    b77c:	ldrh	w0, [sp, #142]
    b780:	lsl	x0, x0, #2
    b784:	ldr	x1, [sp, #144]
    b788:	add	x0, x1, x0
    b78c:	ldr	w0, [x0]
    b790:	mov	w2, w0
    b794:	mov	w1, w3
    b798:	ldr	x0, [sp, #56]
    b79c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b7a0:	ldrsw	x0, [sp, #236]
    b7a4:	add	x0, x0, #0x1d
    b7a8:	lsl	x0, x0, #1
    b7ac:	ldr	x1, [sp, #168]
    b7b0:	add	x0, x1, x0
    b7b4:	ldrh	w0, [x0]
    b7b8:	strh	w0, [sp, #142]
    b7bc:	ldrh	w0, [sp, #142]
    b7c0:	ldr	x1, [sp, #152]
    b7c4:	add	x0, x1, x0
    b7c8:	ldrb	w0, [x0]
    b7cc:	mov	w3, w0
    b7d0:	ldrh	w0, [sp, #142]
    b7d4:	lsl	x0, x0, #2
    b7d8:	ldr	x1, [sp, #144]
    b7dc:	add	x0, x1, x0
    b7e0:	ldr	w0, [x0]
    b7e4:	mov	w2, w0
    b7e8:	mov	w1, w3
    b7ec:	ldr	x0, [sp, #56]
    b7f0:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b7f4:	ldrsw	x0, [sp, #236]
    b7f8:	add	x0, x0, #0x1e
    b7fc:	lsl	x0, x0, #1
    b800:	ldr	x1, [sp, #168]
    b804:	add	x0, x1, x0
    b808:	ldrh	w0, [x0]
    b80c:	strh	w0, [sp, #142]
    b810:	ldrh	w0, [sp, #142]
    b814:	ldr	x1, [sp, #152]
    b818:	add	x0, x1, x0
    b81c:	ldrb	w0, [x0]
    b820:	mov	w3, w0
    b824:	ldrh	w0, [sp, #142]
    b828:	lsl	x0, x0, #2
    b82c:	ldr	x1, [sp, #144]
    b830:	add	x0, x1, x0
    b834:	ldr	w0, [x0]
    b838:	mov	w2, w0
    b83c:	mov	w1, w3
    b840:	ldr	x0, [sp, #56]
    b844:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b848:	ldrsw	x0, [sp, #236]
    b84c:	add	x0, x0, #0x1f
    b850:	lsl	x0, x0, #1
    b854:	ldr	x1, [sp, #168]
    b858:	add	x0, x1, x0
    b85c:	ldrh	w0, [x0]
    b860:	strh	w0, [sp, #142]
    b864:	ldrh	w0, [sp, #142]
    b868:	ldr	x1, [sp, #152]
    b86c:	add	x0, x1, x0
    b870:	ldrb	w0, [x0]
    b874:	mov	w3, w0
    b878:	ldrh	w0, [sp, #142]
    b87c:	lsl	x0, x0, #2
    b880:	ldr	x1, [sp, #144]
    b884:	add	x0, x1, x0
    b888:	ldr	w0, [x0]
    b88c:	mov	w2, w0
    b890:	mov	w1, w3
    b894:	ldr	x0, [sp, #56]
    b898:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b89c:	ldrsw	x0, [sp, #236]
    b8a0:	add	x0, x0, #0x20
    b8a4:	lsl	x0, x0, #1
    b8a8:	ldr	x1, [sp, #168]
    b8ac:	add	x0, x1, x0
    b8b0:	ldrh	w0, [x0]
    b8b4:	strh	w0, [sp, #142]
    b8b8:	ldrh	w0, [sp, #142]
    b8bc:	ldr	x1, [sp, #152]
    b8c0:	add	x0, x1, x0
    b8c4:	ldrb	w0, [x0]
    b8c8:	mov	w3, w0
    b8cc:	ldrh	w0, [sp, #142]
    b8d0:	lsl	x0, x0, #2
    b8d4:	ldr	x1, [sp, #144]
    b8d8:	add	x0, x1, x0
    b8dc:	ldr	w0, [x0]
    b8e0:	mov	w2, w0
    b8e4:	mov	w1, w3
    b8e8:	ldr	x0, [sp, #56]
    b8ec:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b8f0:	ldrsw	x0, [sp, #236]
    b8f4:	add	x0, x0, #0x21
    b8f8:	lsl	x0, x0, #1
    b8fc:	ldr	x1, [sp, #168]
    b900:	add	x0, x1, x0
    b904:	ldrh	w0, [x0]
    b908:	strh	w0, [sp, #142]
    b90c:	ldrh	w0, [sp, #142]
    b910:	ldr	x1, [sp, #152]
    b914:	add	x0, x1, x0
    b918:	ldrb	w0, [x0]
    b91c:	mov	w3, w0
    b920:	ldrh	w0, [sp, #142]
    b924:	lsl	x0, x0, #2
    b928:	ldr	x1, [sp, #144]
    b92c:	add	x0, x1, x0
    b930:	ldr	w0, [x0]
    b934:	mov	w2, w0
    b938:	mov	w1, w3
    b93c:	ldr	x0, [sp, #56]
    b940:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b944:	ldrsw	x0, [sp, #236]
    b948:	add	x0, x0, #0x22
    b94c:	lsl	x0, x0, #1
    b950:	ldr	x1, [sp, #168]
    b954:	add	x0, x1, x0
    b958:	ldrh	w0, [x0]
    b95c:	strh	w0, [sp, #142]
    b960:	ldrh	w0, [sp, #142]
    b964:	ldr	x1, [sp, #152]
    b968:	add	x0, x1, x0
    b96c:	ldrb	w0, [x0]
    b970:	mov	w3, w0
    b974:	ldrh	w0, [sp, #142]
    b978:	lsl	x0, x0, #2
    b97c:	ldr	x1, [sp, #144]
    b980:	add	x0, x1, x0
    b984:	ldr	w0, [x0]
    b988:	mov	w2, w0
    b98c:	mov	w1, w3
    b990:	ldr	x0, [sp, #56]
    b994:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b998:	ldrsw	x0, [sp, #236]
    b99c:	add	x0, x0, #0x23
    b9a0:	lsl	x0, x0, #1
    b9a4:	ldr	x1, [sp, #168]
    b9a8:	add	x0, x1, x0
    b9ac:	ldrh	w0, [x0]
    b9b0:	strh	w0, [sp, #142]
    b9b4:	ldrh	w0, [sp, #142]
    b9b8:	ldr	x1, [sp, #152]
    b9bc:	add	x0, x1, x0
    b9c0:	ldrb	w0, [x0]
    b9c4:	mov	w3, w0
    b9c8:	ldrh	w0, [sp, #142]
    b9cc:	lsl	x0, x0, #2
    b9d0:	ldr	x1, [sp, #144]
    b9d4:	add	x0, x1, x0
    b9d8:	ldr	w0, [x0]
    b9dc:	mov	w2, w0
    b9e0:	mov	w1, w3
    b9e4:	ldr	x0, [sp, #56]
    b9e8:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    b9ec:	ldrsw	x0, [sp, #236]
    b9f0:	add	x0, x0, #0x24
    b9f4:	lsl	x0, x0, #1
    b9f8:	ldr	x1, [sp, #168]
    b9fc:	add	x0, x1, x0
    ba00:	ldrh	w0, [x0]
    ba04:	strh	w0, [sp, #142]
    ba08:	ldrh	w0, [sp, #142]
    ba0c:	ldr	x1, [sp, #152]
    ba10:	add	x0, x1, x0
    ba14:	ldrb	w0, [x0]
    ba18:	mov	w3, w0
    ba1c:	ldrh	w0, [sp, #142]
    ba20:	lsl	x0, x0, #2
    ba24:	ldr	x1, [sp, #144]
    ba28:	add	x0, x1, x0
    ba2c:	ldr	w0, [x0]
    ba30:	mov	w2, w0
    ba34:	mov	w1, w3
    ba38:	ldr	x0, [sp, #56]
    ba3c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    ba40:	ldrsw	x0, [sp, #236]
    ba44:	add	x0, x0, #0x25
    ba48:	lsl	x0, x0, #1
    ba4c:	ldr	x1, [sp, #168]
    ba50:	add	x0, x1, x0
    ba54:	ldrh	w0, [x0]
    ba58:	strh	w0, [sp, #142]
    ba5c:	ldrh	w0, [sp, #142]
    ba60:	ldr	x1, [sp, #152]
    ba64:	add	x0, x1, x0
    ba68:	ldrb	w0, [x0]
    ba6c:	mov	w3, w0
    ba70:	ldrh	w0, [sp, #142]
    ba74:	lsl	x0, x0, #2
    ba78:	ldr	x1, [sp, #144]
    ba7c:	add	x0, x1, x0
    ba80:	ldr	w0, [x0]
    ba84:	mov	w2, w0
    ba88:	mov	w1, w3
    ba8c:	ldr	x0, [sp, #56]
    ba90:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    ba94:	ldrsw	x0, [sp, #236]
    ba98:	add	x0, x0, #0x26
    ba9c:	lsl	x0, x0, #1
    baa0:	ldr	x1, [sp, #168]
    baa4:	add	x0, x1, x0
    baa8:	ldrh	w0, [x0]
    baac:	strh	w0, [sp, #142]
    bab0:	ldrh	w0, [sp, #142]
    bab4:	ldr	x1, [sp, #152]
    bab8:	add	x0, x1, x0
    babc:	ldrb	w0, [x0]
    bac0:	mov	w3, w0
    bac4:	ldrh	w0, [sp, #142]
    bac8:	lsl	x0, x0, #2
    bacc:	ldr	x1, [sp, #144]
    bad0:	add	x0, x1, x0
    bad4:	ldr	w0, [x0]
    bad8:	mov	w2, w0
    badc:	mov	w1, w3
    bae0:	ldr	x0, [sp, #56]
    bae4:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bae8:	ldrsw	x0, [sp, #236]
    baec:	add	x0, x0, #0x27
    baf0:	lsl	x0, x0, #1
    baf4:	ldr	x1, [sp, #168]
    baf8:	add	x0, x1, x0
    bafc:	ldrh	w0, [x0]
    bb00:	strh	w0, [sp, #142]
    bb04:	ldrh	w0, [sp, #142]
    bb08:	ldr	x1, [sp, #152]
    bb0c:	add	x0, x1, x0
    bb10:	ldrb	w0, [x0]
    bb14:	mov	w3, w0
    bb18:	ldrh	w0, [sp, #142]
    bb1c:	lsl	x0, x0, #2
    bb20:	ldr	x1, [sp, #144]
    bb24:	add	x0, x1, x0
    bb28:	ldr	w0, [x0]
    bb2c:	mov	w2, w0
    bb30:	mov	w1, w3
    bb34:	ldr	x0, [sp, #56]
    bb38:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bb3c:	ldrsw	x0, [sp, #236]
    bb40:	add	x0, x0, #0x28
    bb44:	lsl	x0, x0, #1
    bb48:	ldr	x1, [sp, #168]
    bb4c:	add	x0, x1, x0
    bb50:	ldrh	w0, [x0]
    bb54:	strh	w0, [sp, #142]
    bb58:	ldrh	w0, [sp, #142]
    bb5c:	ldr	x1, [sp, #152]
    bb60:	add	x0, x1, x0
    bb64:	ldrb	w0, [x0]
    bb68:	mov	w3, w0
    bb6c:	ldrh	w0, [sp, #142]
    bb70:	lsl	x0, x0, #2
    bb74:	ldr	x1, [sp, #144]
    bb78:	add	x0, x1, x0
    bb7c:	ldr	w0, [x0]
    bb80:	mov	w2, w0
    bb84:	mov	w1, w3
    bb88:	ldr	x0, [sp, #56]
    bb8c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bb90:	ldrsw	x0, [sp, #236]
    bb94:	add	x0, x0, #0x29
    bb98:	lsl	x0, x0, #1
    bb9c:	ldr	x1, [sp, #168]
    bba0:	add	x0, x1, x0
    bba4:	ldrh	w0, [x0]
    bba8:	strh	w0, [sp, #142]
    bbac:	ldrh	w0, [sp, #142]
    bbb0:	ldr	x1, [sp, #152]
    bbb4:	add	x0, x1, x0
    bbb8:	ldrb	w0, [x0]
    bbbc:	mov	w3, w0
    bbc0:	ldrh	w0, [sp, #142]
    bbc4:	lsl	x0, x0, #2
    bbc8:	ldr	x1, [sp, #144]
    bbcc:	add	x0, x1, x0
    bbd0:	ldr	w0, [x0]
    bbd4:	mov	w2, w0
    bbd8:	mov	w1, w3
    bbdc:	ldr	x0, [sp, #56]
    bbe0:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bbe4:	ldrsw	x0, [sp, #236]
    bbe8:	add	x0, x0, #0x2a
    bbec:	lsl	x0, x0, #1
    bbf0:	ldr	x1, [sp, #168]
    bbf4:	add	x0, x1, x0
    bbf8:	ldrh	w0, [x0]
    bbfc:	strh	w0, [sp, #142]
    bc00:	ldrh	w0, [sp, #142]
    bc04:	ldr	x1, [sp, #152]
    bc08:	add	x0, x1, x0
    bc0c:	ldrb	w0, [x0]
    bc10:	mov	w3, w0
    bc14:	ldrh	w0, [sp, #142]
    bc18:	lsl	x0, x0, #2
    bc1c:	ldr	x1, [sp, #144]
    bc20:	add	x0, x1, x0
    bc24:	ldr	w0, [x0]
    bc28:	mov	w2, w0
    bc2c:	mov	w1, w3
    bc30:	ldr	x0, [sp, #56]
    bc34:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bc38:	ldrsw	x0, [sp, #236]
    bc3c:	add	x0, x0, #0x2b
    bc40:	lsl	x0, x0, #1
    bc44:	ldr	x1, [sp, #168]
    bc48:	add	x0, x1, x0
    bc4c:	ldrh	w0, [x0]
    bc50:	strh	w0, [sp, #142]
    bc54:	ldrh	w0, [sp, #142]
    bc58:	ldr	x1, [sp, #152]
    bc5c:	add	x0, x1, x0
    bc60:	ldrb	w0, [x0]
    bc64:	mov	w3, w0
    bc68:	ldrh	w0, [sp, #142]
    bc6c:	lsl	x0, x0, #2
    bc70:	ldr	x1, [sp, #144]
    bc74:	add	x0, x1, x0
    bc78:	ldr	w0, [x0]
    bc7c:	mov	w2, w0
    bc80:	mov	w1, w3
    bc84:	ldr	x0, [sp, #56]
    bc88:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bc8c:	ldrsw	x0, [sp, #236]
    bc90:	add	x0, x0, #0x2c
    bc94:	lsl	x0, x0, #1
    bc98:	ldr	x1, [sp, #168]
    bc9c:	add	x0, x1, x0
    bca0:	ldrh	w0, [x0]
    bca4:	strh	w0, [sp, #142]
    bca8:	ldrh	w0, [sp, #142]
    bcac:	ldr	x1, [sp, #152]
    bcb0:	add	x0, x1, x0
    bcb4:	ldrb	w0, [x0]
    bcb8:	mov	w3, w0
    bcbc:	ldrh	w0, [sp, #142]
    bcc0:	lsl	x0, x0, #2
    bcc4:	ldr	x1, [sp, #144]
    bcc8:	add	x0, x1, x0
    bccc:	ldr	w0, [x0]
    bcd0:	mov	w2, w0
    bcd4:	mov	w1, w3
    bcd8:	ldr	x0, [sp, #56]
    bcdc:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bce0:	ldrsw	x0, [sp, #236]
    bce4:	add	x0, x0, #0x2d
    bce8:	lsl	x0, x0, #1
    bcec:	ldr	x1, [sp, #168]
    bcf0:	add	x0, x1, x0
    bcf4:	ldrh	w0, [x0]
    bcf8:	strh	w0, [sp, #142]
    bcfc:	ldrh	w0, [sp, #142]
    bd00:	ldr	x1, [sp, #152]
    bd04:	add	x0, x1, x0
    bd08:	ldrb	w0, [x0]
    bd0c:	mov	w3, w0
    bd10:	ldrh	w0, [sp, #142]
    bd14:	lsl	x0, x0, #2
    bd18:	ldr	x1, [sp, #144]
    bd1c:	add	x0, x1, x0
    bd20:	ldr	w0, [x0]
    bd24:	mov	w2, w0
    bd28:	mov	w1, w3
    bd2c:	ldr	x0, [sp, #56]
    bd30:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bd34:	ldrsw	x0, [sp, #236]
    bd38:	add	x0, x0, #0x2e
    bd3c:	lsl	x0, x0, #1
    bd40:	ldr	x1, [sp, #168]
    bd44:	add	x0, x1, x0
    bd48:	ldrh	w0, [x0]
    bd4c:	strh	w0, [sp, #142]
    bd50:	ldrh	w0, [sp, #142]
    bd54:	ldr	x1, [sp, #152]
    bd58:	add	x0, x1, x0
    bd5c:	ldrb	w0, [x0]
    bd60:	mov	w3, w0
    bd64:	ldrh	w0, [sp, #142]
    bd68:	lsl	x0, x0, #2
    bd6c:	ldr	x1, [sp, #144]
    bd70:	add	x0, x1, x0
    bd74:	ldr	w0, [x0]
    bd78:	mov	w2, w0
    bd7c:	mov	w1, w3
    bd80:	ldr	x0, [sp, #56]
    bd84:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bd88:	ldrsw	x0, [sp, #236]
    bd8c:	add	x0, x0, #0x2f
    bd90:	lsl	x0, x0, #1
    bd94:	ldr	x1, [sp, #168]
    bd98:	add	x0, x1, x0
    bd9c:	ldrh	w0, [x0]
    bda0:	strh	w0, [sp, #142]
    bda4:	ldrh	w0, [sp, #142]
    bda8:	ldr	x1, [sp, #152]
    bdac:	add	x0, x1, x0
    bdb0:	ldrb	w0, [x0]
    bdb4:	mov	w3, w0
    bdb8:	ldrh	w0, [sp, #142]
    bdbc:	lsl	x0, x0, #2
    bdc0:	ldr	x1, [sp, #144]
    bdc4:	add	x0, x1, x0
    bdc8:	ldr	w0, [x0]
    bdcc:	mov	w2, w0
    bdd0:	mov	w1, w3
    bdd4:	ldr	x0, [sp, #56]
    bdd8:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bddc:	ldrsw	x0, [sp, #236]
    bde0:	add	x0, x0, #0x30
    bde4:	lsl	x0, x0, #1
    bde8:	ldr	x1, [sp, #168]
    bdec:	add	x0, x1, x0
    bdf0:	ldrh	w0, [x0]
    bdf4:	strh	w0, [sp, #142]
    bdf8:	ldrh	w0, [sp, #142]
    bdfc:	ldr	x1, [sp, #152]
    be00:	add	x0, x1, x0
    be04:	ldrb	w0, [x0]
    be08:	mov	w3, w0
    be0c:	ldrh	w0, [sp, #142]
    be10:	lsl	x0, x0, #2
    be14:	ldr	x1, [sp, #144]
    be18:	add	x0, x1, x0
    be1c:	ldr	w0, [x0]
    be20:	mov	w2, w0
    be24:	mov	w1, w3
    be28:	ldr	x0, [sp, #56]
    be2c:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    be30:	ldrsw	x0, [sp, #236]
    be34:	add	x0, x0, #0x31
    be38:	lsl	x0, x0, #1
    be3c:	ldr	x1, [sp, #168]
    be40:	add	x0, x1, x0
    be44:	ldrh	w0, [x0]
    be48:	strh	w0, [sp, #142]
    be4c:	ldrh	w0, [sp, #142]
    be50:	ldr	x1, [sp, #152]
    be54:	add	x0, x1, x0
    be58:	ldrb	w0, [x0]
    be5c:	mov	w3, w0
    be60:	ldrh	w0, [sp, #142]
    be64:	lsl	x0, x0, #2
    be68:	ldr	x1, [sp, #144]
    be6c:	add	x0, x1, x0
    be70:	ldr	w0, [x0]
    be74:	mov	w2, w0
    be78:	mov	w1, w3
    be7c:	ldr	x0, [sp, #56]
    be80:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    be84:	b	bf74 <BZ2_bsInitWrite@@Base+0x5ce8>
    be88:	ldr	w0, [sp, #236]
    be8c:	str	w0, [sp, #244]
    be90:	b	bf64 <BZ2_bsInitWrite@@Base+0x5cd8>
    be94:	ldr	x1, [sp, #56]
    be98:	ldrsw	x0, [sp, #200]
    be9c:	add	x0, x1, x0
    bea0:	ldrb	w0, [x0, #1704]
    bea4:	mov	w4, w0
    bea8:	ldrsw	x0, [sp, #244]
    beac:	lsl	x0, x0, #1
    beb0:	ldr	x1, [sp, #168]
    beb4:	add	x0, x1, x0
    beb8:	ldrh	w0, [x0]
    bebc:	ldr	x3, [sp, #56]
    bec0:	sxtw	x2, w0
    bec4:	sxtw	x1, w4
    bec8:	mov	x0, x1
    becc:	lsl	x0, x0, #7
    bed0:	add	x0, x0, x1
    bed4:	lsl	x0, x0, #1
    bed8:	add	x0, x3, x0
    bedc:	add	x0, x0, x2
    bee0:	add	x0, x0, #0x9, lsl #12
    bee4:	ldrb	w0, [x0, #844]
    bee8:	mov	w4, w0
    beec:	ldr	x1, [sp, #56]
    bef0:	ldrsw	x0, [sp, #200]
    bef4:	add	x0, x1, x0
    bef8:	ldrb	w0, [x0, #1704]
    befc:	mov	w5, w0
    bf00:	ldrsw	x0, [sp, #244]
    bf04:	lsl	x0, x0, #1
    bf08:	ldr	x1, [sp, #168]
    bf0c:	add	x0, x1, x0
    bf10:	ldrh	w0, [x0]
    bf14:	ldr	x2, [sp, #56]
    bf18:	sxtw	x3, w0
    bf1c:	sxtw	x1, w5
    bf20:	mov	x0, x1
    bf24:	lsl	x0, x0, #7
    bf28:	add	x0, x0, x1
    bf2c:	lsl	x0, x0, #1
    bf30:	add	x1, x0, x3
    bf34:	mov	x0, #0x2654                	// #9812
    bf38:	add	x0, x1, x0
    bf3c:	lsl	x0, x0, #2
    bf40:	add	x0, x2, x0
    bf44:	ldr	w0, [x0, #8]
    bf48:	mov	w2, w0
    bf4c:	mov	w1, w4
    bf50:	ldr	x0, [sp, #56]
    bf54:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    bf58:	ldr	w0, [sp, #244]
    bf5c:	add	w0, w0, #0x1
    bf60:	str	w0, [sp, #244]
    bf64:	ldr	w1, [sp, #244]
    bf68:	ldr	w0, [sp, #232]
    bf6c:	cmp	w1, w0
    bf70:	b.le	be94 <BZ2_bsInitWrite@@Base+0x5c08>
    bf74:	ldr	w0, [sp, #232]
    bf78:	add	w0, w0, #0x1
    bf7c:	str	w0, [sp, #236]
    bf80:	ldr	w0, [sp, #200]
    bf84:	add	w0, w0, #0x1
    bf88:	str	w0, [sp, #200]
    bf8c:	b	ad1c <BZ2_bsInitWrite@@Base+0x4a90>
    bf90:	nop
    bf94:	ldr	w1, [sp, #200]
    bf98:	ldr	w0, [sp, #212]
    bf9c:	cmp	w1, w0
    bfa0:	b.eq	bfac <BZ2_bsInitWrite@@Base+0x5d20>  // b.none
    bfa4:	mov	w0, #0xbbf                 	// #3007
    bfa8:	bl	1720 <BZ2_bz__AssertH__fail@plt>
    bfac:	ldr	x0, [sp, #56]
    bfb0:	ldr	w0, [x0, #656]
    bfb4:	cmp	w0, #0x2
    bfb8:	b.le	bfec <BZ2_bsInitWrite@@Base+0x5d60>
    bfbc:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    bfc0:	ldr	x0, [x0, #4016]
    bfc4:	ldr	x3, [x0]
    bfc8:	ldr	x0, [sp, #56]
    bfcc:	ldr	w1, [x0, #116]
    bfd0:	ldr	w0, [sp, #160]
    bfd4:	sub	w0, w1, w0
    bfd8:	mov	w2, w0
    bfdc:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    bfe0:	add	x1, x0, #0x148
    bfe4:	mov	x0, x3
    bfe8:	bl	1730 <fprintf@plt>
    bfec:	nop
    bff0:	ldp	x19, x20, [sp, #16]
    bff4:	ldp	x21, x22, [sp, #32]
    bff8:	ldp	x29, x30, [sp], #256
    bffc:	ret

000000000000c000 <BZ2_compressBlock@@Base>:
    c000:	stp	x29, x30, [sp, #-32]!
    c004:	mov	x29, sp
    c008:	str	x0, [sp, #24]
    c00c:	strb	w1, [sp, #23]
    c010:	ldr	x0, [sp, #24]
    c014:	ldr	w0, [x0, #108]
    c018:	cmp	w0, #0x0
    c01c:	b.le	c0e0 <BZ2_compressBlock@@Base+0xe0>
    c020:	ldr	x0, [sp, #24]
    c024:	ldr	w0, [x0, #648]
    c028:	mvn	w1, w0
    c02c:	ldr	x0, [sp, #24]
    c030:	str	w1, [x0, #648]
    c034:	ldr	x0, [sp, #24]
    c038:	ldr	w0, [x0, #652]
    c03c:	ror	w1, w0, #31
    c040:	ldr	x0, [sp, #24]
    c044:	str	w1, [x0, #652]
    c048:	ldr	x0, [sp, #24]
    c04c:	ldr	w1, [x0, #652]
    c050:	ldr	x0, [sp, #24]
    c054:	ldr	w0, [x0, #648]
    c058:	eor	w1, w1, w0
    c05c:	ldr	x0, [sp, #24]
    c060:	str	w1, [x0, #652]
    c064:	ldr	x0, [sp, #24]
    c068:	ldr	w0, [x0, #660]
    c06c:	cmp	w0, #0x1
    c070:	b.le	c07c <BZ2_compressBlock@@Base+0x7c>
    c074:	ldr	x0, [sp, #24]
    c078:	str	wzr, [x0, #116]
    c07c:	ldr	x0, [sp, #24]
    c080:	ldr	w0, [x0, #656]
    c084:	cmp	w0, #0x1
    c088:	b.le	c0d8 <BZ2_compressBlock@@Base+0xd8>
    c08c:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    c090:	ldr	x0, [x0, #4016]
    c094:	ldr	x6, [x0]
    c098:	ldr	x0, [sp, #24]
    c09c:	ldr	w1, [x0, #660]
    c0a0:	ldr	x0, [sp, #24]
    c0a4:	ldr	w2, [x0, #648]
    c0a8:	ldr	x0, [sp, #24]
    c0ac:	ldr	w3, [x0, #652]
    c0b0:	ldr	x0, [sp, #24]
    c0b4:	ldr	w0, [x0, #108]
    c0b8:	mov	w5, w0
    c0bc:	mov	w4, w3
    c0c0:	mov	w3, w2
    c0c4:	mov	w2, w1
    c0c8:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    c0cc:	add	x1, x0, #0x158
    c0d0:	mov	x0, x6
    c0d4:	bl	1730 <fprintf@plt>
    c0d8:	ldr	x0, [sp, #24]
    c0dc:	bl	1690 <BZ2_blockSort@plt>
    c0e0:	ldr	x0, [sp, #24]
    c0e4:	ldr	x1, [x0, #32]
    c0e8:	ldr	x0, [sp, #24]
    c0ec:	ldr	w0, [x0, #108]
    c0f0:	sxtw	x0, w0
    c0f4:	add	x1, x1, x0
    c0f8:	ldr	x0, [sp, #24]
    c0fc:	str	x1, [x0, #80]
    c100:	ldr	x0, [sp, #24]
    c104:	ldr	w0, [x0, #660]
    c108:	cmp	w0, #0x1
    c10c:	b.ne	c15c <BZ2_compressBlock@@Base+0x15c>  // b.any
    c110:	ldr	x0, [sp, #24]
    c114:	bl	1650 <BZ2_bsInitWrite@plt>
    c118:	mov	w1, #0x42                  	// #66
    c11c:	ldr	x0, [sp, #24]
    c120:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c124:	mov	w1, #0x5a                  	// #90
    c128:	ldr	x0, [sp, #24]
    c12c:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c130:	mov	w1, #0x68                  	// #104
    c134:	ldr	x0, [sp, #24]
    c138:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c13c:	ldr	x0, [sp, #24]
    c140:	ldr	w0, [x0, #664]
    c144:	and	w0, w0, #0xff
    c148:	add	w0, w0, #0x30
    c14c:	and	w0, w0, #0xff
    c150:	mov	w1, w0
    c154:	ldr	x0, [sp, #24]
    c158:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c15c:	ldr	x0, [sp, #24]
    c160:	ldr	w0, [x0, #108]
    c164:	cmp	w0, #0x0
    c168:	b.le	c200 <BZ2_compressBlock@@Base+0x200>
    c16c:	mov	w1, #0x31                  	// #49
    c170:	ldr	x0, [sp, #24]
    c174:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c178:	mov	w1, #0x41                  	// #65
    c17c:	ldr	x0, [sp, #24]
    c180:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c184:	mov	w1, #0x59                  	// #89
    c188:	ldr	x0, [sp, #24]
    c18c:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c190:	mov	w1, #0x26                  	// #38
    c194:	ldr	x0, [sp, #24]
    c198:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c19c:	mov	w1, #0x53                  	// #83
    c1a0:	ldr	x0, [sp, #24]
    c1a4:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c1a8:	mov	w1, #0x59                  	// #89
    c1ac:	ldr	x0, [sp, #24]
    c1b0:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c1b4:	ldr	x0, [sp, #24]
    c1b8:	ldr	w0, [x0, #648]
    c1bc:	mov	w1, w0
    c1c0:	ldr	x0, [sp, #24]
    c1c4:	bl	6428 <BZ2_bsInitWrite@@Base+0x19c>
    c1c8:	mov	w2, #0x0                   	// #0
    c1cc:	mov	w1, #0x1                   	// #1
    c1d0:	ldr	x0, [sp, #24]
    c1d4:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    c1d8:	ldr	x0, [sp, #24]
    c1dc:	ldr	w0, [x0, #48]
    c1e0:	mov	w2, w0
    c1e4:	mov	w1, #0x18                  	// #24
    c1e8:	ldr	x0, [sp, #24]
    c1ec:	bl	6344 <BZ2_bsInitWrite@@Base+0xb8>
    c1f0:	ldr	x0, [sp, #24]
    c1f4:	bl	6568 <BZ2_bsInitWrite@@Base+0x2dc>
    c1f8:	ldr	x0, [sp, #24]
    c1fc:	bl	697c <BZ2_bsInitWrite@@Base+0x6f0>
    c200:	ldrb	w0, [sp, #23]
    c204:	cmp	w0, #0x0
    c208:	b.eq	c2a8 <BZ2_compressBlock@@Base+0x2a8>  // b.none
    c20c:	mov	w1, #0x17                  	// #23
    c210:	ldr	x0, [sp, #24]
    c214:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c218:	mov	w1, #0x72                  	// #114
    c21c:	ldr	x0, [sp, #24]
    c220:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c224:	mov	w1, #0x45                  	// #69
    c228:	ldr	x0, [sp, #24]
    c22c:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c230:	mov	w1, #0x38                  	// #56
    c234:	ldr	x0, [sp, #24]
    c238:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c23c:	mov	w1, #0x50                  	// #80
    c240:	ldr	x0, [sp, #24]
    c244:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c248:	mov	w1, #0xffffff90            	// #-112
    c24c:	ldr	x0, [sp, #24]
    c250:	bl	64ac <BZ2_bsInitWrite@@Base+0x220>
    c254:	ldr	x0, [sp, #24]
    c258:	ldr	w0, [x0, #652]
    c25c:	mov	w1, w0
    c260:	ldr	x0, [sp, #24]
    c264:	bl	6428 <BZ2_bsInitWrite@@Base+0x19c>
    c268:	ldr	x0, [sp, #24]
    c26c:	ldr	w0, [x0, #656]
    c270:	cmp	w0, #0x1
    c274:	b.le	c2a0 <BZ2_compressBlock@@Base+0x2a0>
    c278:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    c27c:	ldr	x0, [x0, #4016]
    c280:	ldr	x3, [x0]
    c284:	ldr	x0, [sp, #24]
    c288:	ldr	w0, [x0, #652]
    c28c:	mov	w2, w0
    c290:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    c294:	add	x1, x0, #0x198
    c298:	mov	x0, x3
    c29c:	bl	1730 <fprintf@plt>
    c2a0:	ldr	x0, [sp, #24]
    c2a4:	bl	62b0 <BZ2_bsInitWrite@@Base+0x24>
    c2a8:	nop
    c2ac:	ldp	x29, x30, [sp], #32
    c2b0:	ret
    c2b4:	sub	sp, sp, #0x20
    c2b8:	str	x0, [sp, #8]
    c2bc:	ldr	x0, [sp, #8]
    c2c0:	str	wzr, [x0, #3192]
    c2c4:	str	wzr, [sp, #28]
    c2c8:	b	c328 <BZ2_compressBlock@@Base+0x328>
    c2cc:	ldr	x1, [sp, #8]
    c2d0:	ldrsw	x0, [sp, #28]
    c2d4:	add	x0, x1, x0
    c2d8:	ldrb	w0, [x0, #3196]
    c2dc:	cmp	w0, #0x0
    c2e0:	b.eq	c31c <BZ2_compressBlock@@Base+0x31c>  // b.none
    c2e4:	ldr	x0, [sp, #8]
    c2e8:	ldr	w0, [x0, #3192]
    c2ec:	ldr	w1, [sp, #28]
    c2f0:	and	w2, w1, #0xff
    c2f4:	ldr	x1, [sp, #8]
    c2f8:	sxtw	x0, w0
    c2fc:	add	x0, x1, x0
    c300:	mov	w1, w2
    c304:	strb	w1, [x0, #3468]
    c308:	ldr	x0, [sp, #8]
    c30c:	ldr	w0, [x0, #3192]
    c310:	add	w1, w0, #0x1
    c314:	ldr	x0, [sp, #8]
    c318:	str	w1, [x0, #3192]
    c31c:	ldr	w0, [sp, #28]
    c320:	add	w0, w0, #0x1
    c324:	str	w0, [sp, #28]
    c328:	ldr	w0, [sp, #28]
    c32c:	cmp	w0, #0xff
    c330:	b.le	c2cc <BZ2_compressBlock@@Base+0x2cc>
    c334:	nop
    c338:	nop
    c33c:	add	sp, sp, #0x20
    c340:	ret

000000000000c344 <BZ2_decompress@@Base>:
    c344:	stp	x29, x30, [sp, #-400]!
    c348:	mov	x29, sp
    c34c:	str	x0, [sp, #24]
    c350:	ldr	x0, [sp, #24]
    c354:	ldr	x0, [x0]
    c358:	str	x0, [sp, #232]
    c35c:	ldr	x0, [sp, #24]
    c360:	ldr	w0, [x0, #8]
    c364:	cmp	w0, #0xa
    c368:	b.ne	c48c <BZ2_decompress@@Base+0x148>  // b.any
    c36c:	ldr	x0, [sp, #24]
    c370:	add	x0, x0, #0xc, lsl #12
    c374:	str	wzr, [x0, #14884]
    c378:	ldr	x0, [sp, #24]
    c37c:	add	x0, x0, #0xc, lsl #12
    c380:	str	wzr, [x0, #14888]
    c384:	ldr	x0, [sp, #24]
    c388:	add	x0, x0, #0xc, lsl #12
    c38c:	str	wzr, [x0, #14892]
    c390:	ldr	x0, [sp, #24]
    c394:	add	x0, x0, #0xc, lsl #12
    c398:	str	wzr, [x0, #14896]
    c39c:	ldr	x0, [sp, #24]
    c3a0:	add	x0, x0, #0xc, lsl #12
    c3a4:	str	wzr, [x0, #14900]
    c3a8:	ldr	x0, [sp, #24]
    c3ac:	add	x0, x0, #0xc, lsl #12
    c3b0:	str	wzr, [x0, #14904]
    c3b4:	ldr	x0, [sp, #24]
    c3b8:	add	x0, x0, #0xc, lsl #12
    c3bc:	str	wzr, [x0, #14908]
    c3c0:	ldr	x0, [sp, #24]
    c3c4:	add	x0, x0, #0xc, lsl #12
    c3c8:	str	wzr, [x0, #14912]
    c3cc:	ldr	x0, [sp, #24]
    c3d0:	add	x0, x0, #0xc, lsl #12
    c3d4:	str	wzr, [x0, #14916]
    c3d8:	ldr	x0, [sp, #24]
    c3dc:	add	x0, x0, #0xc, lsl #12
    c3e0:	str	wzr, [x0, #14920]
    c3e4:	ldr	x0, [sp, #24]
    c3e8:	add	x0, x0, #0xc, lsl #12
    c3ec:	str	wzr, [x0, #14924]
    c3f0:	ldr	x0, [sp, #24]
    c3f4:	add	x0, x0, #0xc, lsl #12
    c3f8:	str	wzr, [x0, #14928]
    c3fc:	ldr	x0, [sp, #24]
    c400:	add	x0, x0, #0xc, lsl #12
    c404:	str	wzr, [x0, #14932]
    c408:	ldr	x0, [sp, #24]
    c40c:	add	x0, x0, #0xc, lsl #12
    c410:	str	wzr, [x0, #14936]
    c414:	ldr	x0, [sp, #24]
    c418:	add	x0, x0, #0xc, lsl #12
    c41c:	str	wzr, [x0, #14940]
    c420:	ldr	x0, [sp, #24]
    c424:	add	x0, x0, #0xc, lsl #12
    c428:	str	wzr, [x0, #14944]
    c42c:	ldr	x0, [sp, #24]
    c430:	add	x0, x0, #0xc, lsl #12
    c434:	str	wzr, [x0, #14948]
    c438:	ldr	x0, [sp, #24]
    c43c:	add	x0, x0, #0xc, lsl #12
    c440:	str	wzr, [x0, #14952]
    c444:	ldr	x0, [sp, #24]
    c448:	add	x0, x0, #0xc, lsl #12
    c44c:	str	wzr, [x0, #14956]
    c450:	ldr	x0, [sp, #24]
    c454:	add	x0, x0, #0xc, lsl #12
    c458:	str	wzr, [x0, #14960]
    c45c:	ldr	x0, [sp, #24]
    c460:	add	x0, x0, #0xc, lsl #12
    c464:	str	wzr, [x0, #14964]
    c468:	ldr	x0, [sp, #24]
    c46c:	add	x0, x0, #0x8, lsl #12
    c470:	str	xzr, [x0, #31352]
    c474:	ldr	x0, [sp, #24]
    c478:	add	x0, x0, #0x8, lsl #12
    c47c:	str	xzr, [x0, #31360]
    c480:	ldr	x0, [sp, #24]
    c484:	add	x0, x0, #0x8, lsl #12
    c488:	str	xzr, [x0, #31368]
    c48c:	ldr	x0, [sp, #24]
    c490:	add	x0, x0, #0xc, lsl #12
    c494:	ldr	w0, [x0, #14884]
    c498:	str	w0, [sp, #380]
    c49c:	ldr	x0, [sp, #24]
    c4a0:	add	x0, x0, #0xc, lsl #12
    c4a4:	ldr	w0, [x0, #14888]
    c4a8:	str	w0, [sp, #376]
    c4ac:	ldr	x0, [sp, #24]
    c4b0:	add	x0, x0, #0xc, lsl #12
    c4b4:	ldr	w0, [x0, #14892]
    c4b8:	str	w0, [sp, #372]
    c4bc:	ldr	x0, [sp, #24]
    c4c0:	add	x0, x0, #0xc, lsl #12
    c4c4:	ldr	w0, [x0, #14896]
    c4c8:	str	w0, [sp, #368]
    c4cc:	ldr	x0, [sp, #24]
    c4d0:	add	x0, x0, #0xc, lsl #12
    c4d4:	ldr	w0, [x0, #14900]
    c4d8:	str	w0, [sp, #364]
    c4dc:	ldr	x0, [sp, #24]
    c4e0:	add	x0, x0, #0xc, lsl #12
    c4e4:	ldr	w0, [x0, #14904]
    c4e8:	str	w0, [sp, #360]
    c4ec:	ldr	x0, [sp, #24]
    c4f0:	add	x0, x0, #0xc, lsl #12
    c4f4:	ldr	w0, [x0, #14908]
    c4f8:	str	w0, [sp, #356]
    c4fc:	ldr	x0, [sp, #24]
    c500:	add	x0, x0, #0xc, lsl #12
    c504:	ldr	w0, [x0, #14912]
    c508:	str	w0, [sp, #352]
    c50c:	ldr	x0, [sp, #24]
    c510:	add	x0, x0, #0xc, lsl #12
    c514:	ldr	w0, [x0, #14916]
    c518:	str	w0, [sp, #348]
    c51c:	ldr	x0, [sp, #24]
    c520:	add	x0, x0, #0xc, lsl #12
    c524:	ldr	w0, [x0, #14920]
    c528:	str	w0, [sp, #344]
    c52c:	ldr	x0, [sp, #24]
    c530:	add	x0, x0, #0xc, lsl #12
    c534:	ldr	w0, [x0, #14924]
    c538:	str	w0, [sp, #340]
    c53c:	ldr	x0, [sp, #24]
    c540:	add	x0, x0, #0xc, lsl #12
    c544:	ldr	w0, [x0, #14928]
    c548:	str	w0, [sp, #336]
    c54c:	ldr	x0, [sp, #24]
    c550:	add	x0, x0, #0xc, lsl #12
    c554:	ldr	w0, [x0, #14932]
    c558:	str	w0, [sp, #332]
    c55c:	ldr	x0, [sp, #24]
    c560:	add	x0, x0, #0xc, lsl #12
    c564:	ldr	w0, [x0, #14936]
    c568:	str	w0, [sp, #328]
    c56c:	ldr	x0, [sp, #24]
    c570:	add	x0, x0, #0xc, lsl #12
    c574:	ldr	w0, [x0, #14940]
    c578:	str	w0, [sp, #324]
    c57c:	ldr	x0, [sp, #24]
    c580:	add	x0, x0, #0xc, lsl #12
    c584:	ldr	w0, [x0, #14944]
    c588:	str	w0, [sp, #228]
    c58c:	ldr	x0, [sp, #24]
    c590:	add	x0, x0, #0xc, lsl #12
    c594:	ldr	w0, [x0, #14948]
    c598:	str	w0, [sp, #320]
    c59c:	ldr	x0, [sp, #24]
    c5a0:	add	x0, x0, #0xc, lsl #12
    c5a4:	ldr	w0, [x0, #14952]
    c5a8:	str	w0, [sp, #316]
    c5ac:	ldr	x0, [sp, #24]
    c5b0:	add	x0, x0, #0xc, lsl #12
    c5b4:	ldr	w0, [x0, #14956]
    c5b8:	str	w0, [sp, #312]
    c5bc:	ldr	x0, [sp, #24]
    c5c0:	add	x0, x0, #0xc, lsl #12
    c5c4:	ldr	w0, [x0, #14960]
    c5c8:	str	w0, [sp, #308]
    c5cc:	ldr	x0, [sp, #24]
    c5d0:	add	x0, x0, #0xc, lsl #12
    c5d4:	ldr	w0, [x0, #14964]
    c5d8:	str	w0, [sp, #304]
    c5dc:	ldr	x0, [sp, #24]
    c5e0:	add	x0, x0, #0x8, lsl #12
    c5e4:	ldr	x0, [x0, #31352]
    c5e8:	str	x0, [sp, #296]
    c5ec:	ldr	x0, [sp, #24]
    c5f0:	add	x0, x0, #0x8, lsl #12
    c5f4:	ldr	x0, [x0, #31360]
    c5f8:	str	x0, [sp, #288]
    c5fc:	ldr	x0, [sp, #24]
    c600:	add	x0, x0, #0x8, lsl #12
    c604:	ldr	x0, [x0, #31368]
    c608:	str	x0, [sp, #280]
    c60c:	str	wzr, [sp, #392]
    c610:	ldr	x0, [sp, #24]
    c614:	ldr	w0, [x0, #8]
    c618:	sub	w0, w0, #0xa
    c61c:	cmp	w0, #0x28
    c620:	b.hi	119dc <BZ2_decompress@@Base+0x5698>  // b.pmore
    c624:	adrp	x1, 17000 <BZ2_bzerror@@Base+0x180>
    c628:	add	x1, x1, #0x1e0
    c62c:	ldr	w0, [x1, w0, uxtw #2]
    c630:	adr	x1, c63c <BZ2_decompress@@Base+0x2f8>
    c634:	add	x0, x1, w0, sxtw #2
    c638:	br	x0
    c63c:	ldr	x0, [sp, #24]
    c640:	mov	w1, #0xa                   	// #10
    c644:	str	w1, [x0, #8]
    c648:	ldr	x0, [sp, #24]
    c64c:	ldr	w0, [x0, #36]
    c650:	cmp	w0, #0x7
    c654:	b.le	c6a8 <BZ2_decompress@@Base+0x364>
    c658:	ldr	x0, [sp, #24]
    c65c:	ldr	w1, [x0, #32]
    c660:	ldr	x0, [sp, #24]
    c664:	ldr	w0, [x0, #36]
    c668:	sub	w0, w0, #0x8
    c66c:	lsr	w0, w1, w0
    c670:	and	w0, w0, #0xff
    c674:	str	w0, [sp, #224]
    c678:	ldr	x0, [sp, #24]
    c67c:	ldr	w0, [x0, #36]
    c680:	sub	w1, w0, #0x8
    c684:	ldr	x0, [sp, #24]
    c688:	str	w1, [x0, #36]
    c68c:	ldr	w0, [sp, #224]
    c690:	strb	w0, [sp, #399]
    c694:	nop
    c698:	ldrb	w0, [sp, #399]
    c69c:	cmp	w0, #0x42
    c6a0:	b.eq	c774 <BZ2_decompress@@Base+0x430>  // b.none
    c6a4:	b	c768 <BZ2_decompress@@Base+0x424>
    c6a8:	ldr	x0, [sp, #24]
    c6ac:	ldr	x0, [x0]
    c6b0:	ldr	w0, [x0, #8]
    c6b4:	cmp	w0, #0x0
    c6b8:	b.ne	c6c4 <BZ2_decompress@@Base+0x380>  // b.any
    c6bc:	str	wzr, [sp, #392]
    c6c0:	b	119ec <BZ2_decompress@@Base+0x56a8>
    c6c4:	ldr	x0, [sp, #24]
    c6c8:	ldr	w0, [x0, #32]
    c6cc:	lsl	w0, w0, #8
    c6d0:	ldr	x1, [sp, #24]
    c6d4:	ldr	x1, [x1]
    c6d8:	ldr	x1, [x1]
    c6dc:	ldrb	w1, [x1]
    c6e0:	orr	w1, w0, w1
    c6e4:	ldr	x0, [sp, #24]
    c6e8:	str	w1, [x0, #32]
    c6ec:	ldr	x0, [sp, #24]
    c6f0:	ldr	w0, [x0, #36]
    c6f4:	add	w1, w0, #0x8
    c6f8:	ldr	x0, [sp, #24]
    c6fc:	str	w1, [x0, #36]
    c700:	ldr	x0, [sp, #24]
    c704:	ldr	x0, [x0]
    c708:	ldr	x1, [x0]
    c70c:	add	x1, x1, #0x1
    c710:	str	x1, [x0]
    c714:	ldr	x0, [sp, #24]
    c718:	ldr	x0, [x0]
    c71c:	ldr	w1, [x0, #8]
    c720:	sub	w1, w1, #0x1
    c724:	str	w1, [x0, #8]
    c728:	ldr	x0, [sp, #24]
    c72c:	ldr	x0, [x0]
    c730:	ldr	w1, [x0, #12]
    c734:	add	w1, w1, #0x1
    c738:	str	w1, [x0, #12]
    c73c:	ldr	x0, [sp, #24]
    c740:	ldr	x0, [x0]
    c744:	ldr	w0, [x0, #12]
    c748:	cmp	w0, #0x0
    c74c:	b.ne	c648 <BZ2_decompress@@Base+0x304>  // b.any
    c750:	ldr	x0, [sp, #24]
    c754:	ldr	x0, [x0]
    c758:	ldr	w1, [x0, #16]
    c75c:	add	w1, w1, #0x1
    c760:	str	w1, [x0, #16]
    c764:	b	c648 <BZ2_decompress@@Base+0x304>
    c768:	mov	w0, #0xfffffffb            	// #-5
    c76c:	str	w0, [sp, #392]
    c770:	b	119ec <BZ2_decompress@@Base+0x56a8>
    c774:	ldr	x0, [sp, #24]
    c778:	mov	w1, #0xb                   	// #11
    c77c:	str	w1, [x0, #8]
    c780:	ldr	x0, [sp, #24]
    c784:	ldr	w0, [x0, #36]
    c788:	cmp	w0, #0x7
    c78c:	b.le	c7e0 <BZ2_decompress@@Base+0x49c>
    c790:	ldr	x0, [sp, #24]
    c794:	ldr	w1, [x0, #32]
    c798:	ldr	x0, [sp, #24]
    c79c:	ldr	w0, [x0, #36]
    c7a0:	sub	w0, w0, #0x8
    c7a4:	lsr	w0, w1, w0
    c7a8:	and	w0, w0, #0xff
    c7ac:	str	w0, [sp, #220]
    c7b0:	ldr	x0, [sp, #24]
    c7b4:	ldr	w0, [x0, #36]
    c7b8:	sub	w1, w0, #0x8
    c7bc:	ldr	x0, [sp, #24]
    c7c0:	str	w1, [x0, #36]
    c7c4:	ldr	w0, [sp, #220]
    c7c8:	strb	w0, [sp, #399]
    c7cc:	nop
    c7d0:	ldrb	w0, [sp, #399]
    c7d4:	cmp	w0, #0x5a
    c7d8:	b.eq	c8ac <BZ2_decompress@@Base+0x568>  // b.none
    c7dc:	b	c8a0 <BZ2_decompress@@Base+0x55c>
    c7e0:	ldr	x0, [sp, #24]
    c7e4:	ldr	x0, [x0]
    c7e8:	ldr	w0, [x0, #8]
    c7ec:	cmp	w0, #0x0
    c7f0:	b.ne	c7fc <BZ2_decompress@@Base+0x4b8>  // b.any
    c7f4:	str	wzr, [sp, #392]
    c7f8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    c7fc:	ldr	x0, [sp, #24]
    c800:	ldr	w0, [x0, #32]
    c804:	lsl	w0, w0, #8
    c808:	ldr	x1, [sp, #24]
    c80c:	ldr	x1, [x1]
    c810:	ldr	x1, [x1]
    c814:	ldrb	w1, [x1]
    c818:	orr	w1, w0, w1
    c81c:	ldr	x0, [sp, #24]
    c820:	str	w1, [x0, #32]
    c824:	ldr	x0, [sp, #24]
    c828:	ldr	w0, [x0, #36]
    c82c:	add	w1, w0, #0x8
    c830:	ldr	x0, [sp, #24]
    c834:	str	w1, [x0, #36]
    c838:	ldr	x0, [sp, #24]
    c83c:	ldr	x0, [x0]
    c840:	ldr	x1, [x0]
    c844:	add	x1, x1, #0x1
    c848:	str	x1, [x0]
    c84c:	ldr	x0, [sp, #24]
    c850:	ldr	x0, [x0]
    c854:	ldr	w1, [x0, #8]
    c858:	sub	w1, w1, #0x1
    c85c:	str	w1, [x0, #8]
    c860:	ldr	x0, [sp, #24]
    c864:	ldr	x0, [x0]
    c868:	ldr	w1, [x0, #12]
    c86c:	add	w1, w1, #0x1
    c870:	str	w1, [x0, #12]
    c874:	ldr	x0, [sp, #24]
    c878:	ldr	x0, [x0]
    c87c:	ldr	w0, [x0, #12]
    c880:	cmp	w0, #0x0
    c884:	b.ne	c780 <BZ2_decompress@@Base+0x43c>  // b.any
    c888:	ldr	x0, [sp, #24]
    c88c:	ldr	x0, [x0]
    c890:	ldr	w1, [x0, #16]
    c894:	add	w1, w1, #0x1
    c898:	str	w1, [x0, #16]
    c89c:	b	c780 <BZ2_decompress@@Base+0x43c>
    c8a0:	mov	w0, #0xfffffffb            	// #-5
    c8a4:	str	w0, [sp, #392]
    c8a8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    c8ac:	ldr	x0, [sp, #24]
    c8b0:	mov	w1, #0xc                   	// #12
    c8b4:	str	w1, [x0, #8]
    c8b8:	ldr	x0, [sp, #24]
    c8bc:	ldr	w0, [x0, #36]
    c8c0:	cmp	w0, #0x7
    c8c4:	b.le	c918 <BZ2_decompress@@Base+0x5d4>
    c8c8:	ldr	x0, [sp, #24]
    c8cc:	ldr	w1, [x0, #32]
    c8d0:	ldr	x0, [sp, #24]
    c8d4:	ldr	w0, [x0, #36]
    c8d8:	sub	w0, w0, #0x8
    c8dc:	lsr	w0, w1, w0
    c8e0:	and	w0, w0, #0xff
    c8e4:	str	w0, [sp, #216]
    c8e8:	ldr	x0, [sp, #24]
    c8ec:	ldr	w0, [x0, #36]
    c8f0:	sub	w1, w0, #0x8
    c8f4:	ldr	x0, [sp, #24]
    c8f8:	str	w1, [x0, #36]
    c8fc:	ldr	w0, [sp, #216]
    c900:	strb	w0, [sp, #399]
    c904:	nop
    c908:	ldrb	w0, [sp, #399]
    c90c:	cmp	w0, #0x68
    c910:	b.eq	c9e4 <BZ2_decompress@@Base+0x6a0>  // b.none
    c914:	b	c9d8 <BZ2_decompress@@Base+0x694>
    c918:	ldr	x0, [sp, #24]
    c91c:	ldr	x0, [x0]
    c920:	ldr	w0, [x0, #8]
    c924:	cmp	w0, #0x0
    c928:	b.ne	c934 <BZ2_decompress@@Base+0x5f0>  // b.any
    c92c:	str	wzr, [sp, #392]
    c930:	b	119ec <BZ2_decompress@@Base+0x56a8>
    c934:	ldr	x0, [sp, #24]
    c938:	ldr	w0, [x0, #32]
    c93c:	lsl	w0, w0, #8
    c940:	ldr	x1, [sp, #24]
    c944:	ldr	x1, [x1]
    c948:	ldr	x1, [x1]
    c94c:	ldrb	w1, [x1]
    c950:	orr	w1, w0, w1
    c954:	ldr	x0, [sp, #24]
    c958:	str	w1, [x0, #32]
    c95c:	ldr	x0, [sp, #24]
    c960:	ldr	w0, [x0, #36]
    c964:	add	w1, w0, #0x8
    c968:	ldr	x0, [sp, #24]
    c96c:	str	w1, [x0, #36]
    c970:	ldr	x0, [sp, #24]
    c974:	ldr	x0, [x0]
    c978:	ldr	x1, [x0]
    c97c:	add	x1, x1, #0x1
    c980:	str	x1, [x0]
    c984:	ldr	x0, [sp, #24]
    c988:	ldr	x0, [x0]
    c98c:	ldr	w1, [x0, #8]
    c990:	sub	w1, w1, #0x1
    c994:	str	w1, [x0, #8]
    c998:	ldr	x0, [sp, #24]
    c99c:	ldr	x0, [x0]
    c9a0:	ldr	w1, [x0, #12]
    c9a4:	add	w1, w1, #0x1
    c9a8:	str	w1, [x0, #12]
    c9ac:	ldr	x0, [sp, #24]
    c9b0:	ldr	x0, [x0]
    c9b4:	ldr	w0, [x0, #12]
    c9b8:	cmp	w0, #0x0
    c9bc:	b.ne	c8b8 <BZ2_decompress@@Base+0x574>  // b.any
    c9c0:	ldr	x0, [sp, #24]
    c9c4:	ldr	x0, [x0]
    c9c8:	ldr	w1, [x0, #16]
    c9cc:	add	w1, w1, #0x1
    c9d0:	str	w1, [x0, #16]
    c9d4:	b	c8b8 <BZ2_decompress@@Base+0x574>
    c9d8:	mov	w0, #0xfffffffb            	// #-5
    c9dc:	str	w0, [sp, #392]
    c9e0:	b	119ec <BZ2_decompress@@Base+0x56a8>
    c9e4:	ldr	x0, [sp, #24]
    c9e8:	mov	w1, #0xd                   	// #13
    c9ec:	str	w1, [x0, #8]
    c9f0:	ldr	x0, [sp, #24]
    c9f4:	ldr	w0, [x0, #36]
    c9f8:	cmp	w0, #0x7
    c9fc:	b.le	ca58 <BZ2_decompress@@Base+0x714>
    ca00:	ldr	x0, [sp, #24]
    ca04:	ldr	w1, [x0, #32]
    ca08:	ldr	x0, [sp, #24]
    ca0c:	ldr	w0, [x0, #36]
    ca10:	sub	w0, w0, #0x8
    ca14:	lsr	w0, w1, w0
    ca18:	and	w0, w0, #0xff
    ca1c:	str	w0, [sp, #212]
    ca20:	ldr	x0, [sp, #24]
    ca24:	ldr	w0, [x0, #36]
    ca28:	sub	w1, w0, #0x8
    ca2c:	ldr	x0, [sp, #24]
    ca30:	str	w1, [x0, #36]
    ca34:	ldr	w1, [sp, #212]
    ca38:	ldr	x0, [sp, #24]
    ca3c:	str	w1, [x0, #40]
    ca40:	nop
    ca44:	ldr	x0, [sp, #24]
    ca48:	ldr	w0, [x0, #40]
    ca4c:	cmp	w0, #0x30
    ca50:	b.le	cb28 <BZ2_decompress@@Base+0x7e4>
    ca54:	b	cb18 <BZ2_decompress@@Base+0x7d4>
    ca58:	ldr	x0, [sp, #24]
    ca5c:	ldr	x0, [x0]
    ca60:	ldr	w0, [x0, #8]
    ca64:	cmp	w0, #0x0
    ca68:	b.ne	ca74 <BZ2_decompress@@Base+0x730>  // b.any
    ca6c:	str	wzr, [sp, #392]
    ca70:	b	119ec <BZ2_decompress@@Base+0x56a8>
    ca74:	ldr	x0, [sp, #24]
    ca78:	ldr	w0, [x0, #32]
    ca7c:	lsl	w0, w0, #8
    ca80:	ldr	x1, [sp, #24]
    ca84:	ldr	x1, [x1]
    ca88:	ldr	x1, [x1]
    ca8c:	ldrb	w1, [x1]
    ca90:	orr	w1, w0, w1
    ca94:	ldr	x0, [sp, #24]
    ca98:	str	w1, [x0, #32]
    ca9c:	ldr	x0, [sp, #24]
    caa0:	ldr	w0, [x0, #36]
    caa4:	add	w1, w0, #0x8
    caa8:	ldr	x0, [sp, #24]
    caac:	str	w1, [x0, #36]
    cab0:	ldr	x0, [sp, #24]
    cab4:	ldr	x0, [x0]
    cab8:	ldr	x1, [x0]
    cabc:	add	x1, x1, #0x1
    cac0:	str	x1, [x0]
    cac4:	ldr	x0, [sp, #24]
    cac8:	ldr	x0, [x0]
    cacc:	ldr	w1, [x0, #8]
    cad0:	sub	w1, w1, #0x1
    cad4:	str	w1, [x0, #8]
    cad8:	ldr	x0, [sp, #24]
    cadc:	ldr	x0, [x0]
    cae0:	ldr	w1, [x0, #12]
    cae4:	add	w1, w1, #0x1
    cae8:	str	w1, [x0, #12]
    caec:	ldr	x0, [sp, #24]
    caf0:	ldr	x0, [x0]
    caf4:	ldr	w0, [x0, #12]
    caf8:	cmp	w0, #0x0
    cafc:	b.ne	c9f0 <BZ2_decompress@@Base+0x6ac>  // b.any
    cb00:	ldr	x0, [sp, #24]
    cb04:	ldr	x0, [x0]
    cb08:	ldr	w1, [x0, #16]
    cb0c:	add	w1, w1, #0x1
    cb10:	str	w1, [x0, #16]
    cb14:	b	c9f0 <BZ2_decompress@@Base+0x6ac>
    cb18:	ldr	x0, [sp, #24]
    cb1c:	ldr	w0, [x0, #40]
    cb20:	cmp	w0, #0x39
    cb24:	b.le	cb34 <BZ2_decompress@@Base+0x7f0>
    cb28:	mov	w0, #0xfffffffb            	// #-5
    cb2c:	str	w0, [sp, #392]
    cb30:	b	119ec <BZ2_decompress@@Base+0x56a8>
    cb34:	ldr	x0, [sp, #24]
    cb38:	ldr	w0, [x0, #40]
    cb3c:	sub	w1, w0, #0x30
    cb40:	ldr	x0, [sp, #24]
    cb44:	str	w1, [x0, #40]
    cb48:	ldr	x0, [sp, #24]
    cb4c:	ldrb	w0, [x0, #44]
    cb50:	cmp	w0, #0x0
    cb54:	b.eq	cc14 <BZ2_decompress@@Base+0x8d0>  // b.none
    cb58:	ldr	x0, [sp, #232]
    cb5c:	ldr	x3, [x0, #56]
    cb60:	ldr	x0, [sp, #232]
    cb64:	ldr	x4, [x0, #72]
    cb68:	ldr	x0, [sp, #24]
    cb6c:	ldr	w1, [x0, #40]
    cb70:	mov	w0, #0x86a0                	// #34464
    cb74:	movk	w0, #0x1, lsl #16
    cb78:	mul	w0, w1, w0
    cb7c:	sxtw	x0, w0
    cb80:	lsl	w0, w0, #1
    cb84:	mov	w2, #0x1                   	// #1
    cb88:	mov	w1, w0
    cb8c:	mov	x0, x4
    cb90:	blr	x3
    cb94:	mov	x1, x0
    cb98:	ldr	x0, [sp, #24]
    cb9c:	str	x1, [x0, #3160]
    cba0:	ldr	x0, [sp, #232]
    cba4:	ldr	x3, [x0, #56]
    cba8:	ldr	x0, [sp, #232]
    cbac:	ldr	x4, [x0, #72]
    cbb0:	ldr	x0, [sp, #24]
    cbb4:	ldr	w1, [x0, #40]
    cbb8:	mov	w0, #0x86a0                	// #34464
    cbbc:	movk	w0, #0x1, lsl #16
    cbc0:	mul	w0, w1, w0
    cbc4:	add	w0, w0, #0x1
    cbc8:	asr	w0, w0, #1
    cbcc:	mov	w2, #0x1                   	// #1
    cbd0:	mov	w1, w0
    cbd4:	mov	x0, x4
    cbd8:	blr	x3
    cbdc:	mov	x1, x0
    cbe0:	ldr	x0, [sp, #24]
    cbe4:	str	x1, [x0, #3168]
    cbe8:	ldr	x0, [sp, #24]
    cbec:	ldr	x0, [x0, #3160]
    cbf0:	cmp	x0, #0x0
    cbf4:	b.eq	cc08 <BZ2_decompress@@Base+0x8c4>  // b.none
    cbf8:	ldr	x0, [sp, #24]
    cbfc:	ldr	x0, [x0, #3168]
    cc00:	cmp	x0, #0x0
    cc04:	b.ne	cc78 <BZ2_decompress@@Base+0x934>  // b.any
    cc08:	mov	w0, #0xfffffffd            	// #-3
    cc0c:	str	w0, [sp, #392]
    cc10:	b	119ec <BZ2_decompress@@Base+0x56a8>
    cc14:	ldr	x0, [sp, #232]
    cc18:	ldr	x3, [x0, #56]
    cc1c:	ldr	x0, [sp, #232]
    cc20:	ldr	x4, [x0, #72]
    cc24:	ldr	x0, [sp, #24]
    cc28:	ldr	w1, [x0, #40]
    cc2c:	mov	w0, #0x86a0                	// #34464
    cc30:	movk	w0, #0x1, lsl #16
    cc34:	mul	w0, w1, w0
    cc38:	sxtw	x0, w0
    cc3c:	lsl	w0, w0, #2
    cc40:	mov	w2, #0x1                   	// #1
    cc44:	mov	w1, w0
    cc48:	mov	x0, x4
    cc4c:	blr	x3
    cc50:	mov	x1, x0
    cc54:	ldr	x0, [sp, #24]
    cc58:	str	x1, [x0, #3152]
    cc5c:	ldr	x0, [sp, #24]
    cc60:	ldr	x0, [x0, #3152]
    cc64:	cmp	x0, #0x0
    cc68:	b.ne	cc78 <BZ2_decompress@@Base+0x934>  // b.any
    cc6c:	mov	w0, #0xfffffffd            	// #-3
    cc70:	str	w0, [sp, #392]
    cc74:	b	119ec <BZ2_decompress@@Base+0x56a8>
    cc78:	ldr	x0, [sp, #24]
    cc7c:	mov	w1, #0xe                   	// #14
    cc80:	str	w1, [x0, #8]
    cc84:	ldr	x0, [sp, #24]
    cc88:	ldr	w0, [x0, #36]
    cc8c:	cmp	w0, #0x7
    cc90:	b.le	cce4 <BZ2_decompress@@Base+0x9a0>
    cc94:	ldr	x0, [sp, #24]
    cc98:	ldr	w1, [x0, #32]
    cc9c:	ldr	x0, [sp, #24]
    cca0:	ldr	w0, [x0, #36]
    cca4:	sub	w0, w0, #0x8
    cca8:	lsr	w0, w1, w0
    ccac:	and	w0, w0, #0xff
    ccb0:	str	w0, [sp, #208]
    ccb4:	ldr	x0, [sp, #24]
    ccb8:	ldr	w0, [x0, #36]
    ccbc:	sub	w1, w0, #0x8
    ccc0:	ldr	x0, [sp, #24]
    ccc4:	str	w1, [x0, #36]
    ccc8:	ldr	w0, [sp, #208]
    cccc:	strb	w0, [sp, #399]
    ccd0:	nop
    ccd4:	ldrb	w0, [sp, #399]
    ccd8:	cmp	w0, #0x17
    ccdc:	b.ne	cda4 <BZ2_decompress@@Base+0xa60>  // b.any
    cce0:	b	10eb8 <BZ2_decompress@@Base+0x4b74>
    cce4:	ldr	x0, [sp, #24]
    cce8:	ldr	x0, [x0]
    ccec:	ldr	w0, [x0, #8]
    ccf0:	cmp	w0, #0x0
    ccf4:	b.ne	cd00 <BZ2_decompress@@Base+0x9bc>  // b.any
    ccf8:	str	wzr, [sp, #392]
    ccfc:	b	119ec <BZ2_decompress@@Base+0x56a8>
    cd00:	ldr	x0, [sp, #24]
    cd04:	ldr	w0, [x0, #32]
    cd08:	lsl	w0, w0, #8
    cd0c:	ldr	x1, [sp, #24]
    cd10:	ldr	x1, [x1]
    cd14:	ldr	x1, [x1]
    cd18:	ldrb	w1, [x1]
    cd1c:	orr	w1, w0, w1
    cd20:	ldr	x0, [sp, #24]
    cd24:	str	w1, [x0, #32]
    cd28:	ldr	x0, [sp, #24]
    cd2c:	ldr	w0, [x0, #36]
    cd30:	add	w1, w0, #0x8
    cd34:	ldr	x0, [sp, #24]
    cd38:	str	w1, [x0, #36]
    cd3c:	ldr	x0, [sp, #24]
    cd40:	ldr	x0, [x0]
    cd44:	ldr	x1, [x0]
    cd48:	add	x1, x1, #0x1
    cd4c:	str	x1, [x0]
    cd50:	ldr	x0, [sp, #24]
    cd54:	ldr	x0, [x0]
    cd58:	ldr	w1, [x0, #8]
    cd5c:	sub	w1, w1, #0x1
    cd60:	str	w1, [x0, #8]
    cd64:	ldr	x0, [sp, #24]
    cd68:	ldr	x0, [x0]
    cd6c:	ldr	w1, [x0, #12]
    cd70:	add	w1, w1, #0x1
    cd74:	str	w1, [x0, #12]
    cd78:	ldr	x0, [sp, #24]
    cd7c:	ldr	x0, [x0]
    cd80:	ldr	w0, [x0, #12]
    cd84:	cmp	w0, #0x0
    cd88:	b.ne	cc84 <BZ2_decompress@@Base+0x940>  // b.any
    cd8c:	ldr	x0, [sp, #24]
    cd90:	ldr	x0, [x0]
    cd94:	ldr	w1, [x0, #16]
    cd98:	add	w1, w1, #0x1
    cd9c:	str	w1, [x0, #16]
    cda0:	b	cc84 <BZ2_decompress@@Base+0x940>
    cda4:	ldrb	w0, [sp, #399]
    cda8:	cmp	w0, #0x31
    cdac:	b.eq	cdbc <BZ2_decompress@@Base+0xa78>  // b.none
    cdb0:	mov	w0, #0xfffffffc            	// #-4
    cdb4:	str	w0, [sp, #392]
    cdb8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    cdbc:	ldr	x0, [sp, #24]
    cdc0:	mov	w1, #0xf                   	// #15
    cdc4:	str	w1, [x0, #8]
    cdc8:	ldr	x0, [sp, #24]
    cdcc:	ldr	w0, [x0, #36]
    cdd0:	cmp	w0, #0x7
    cdd4:	b.le	ce28 <BZ2_decompress@@Base+0xae4>
    cdd8:	ldr	x0, [sp, #24]
    cddc:	ldr	w1, [x0, #32]
    cde0:	ldr	x0, [sp, #24]
    cde4:	ldr	w0, [x0, #36]
    cde8:	sub	w0, w0, #0x8
    cdec:	lsr	w0, w1, w0
    cdf0:	and	w0, w0, #0xff
    cdf4:	str	w0, [sp, #204]
    cdf8:	ldr	x0, [sp, #24]
    cdfc:	ldr	w0, [x0, #36]
    ce00:	sub	w1, w0, #0x8
    ce04:	ldr	x0, [sp, #24]
    ce08:	str	w1, [x0, #36]
    ce0c:	ldr	w0, [sp, #204]
    ce10:	strb	w0, [sp, #399]
    ce14:	nop
    ce18:	ldrb	w0, [sp, #399]
    ce1c:	cmp	w0, #0x41
    ce20:	b.eq	cef4 <BZ2_decompress@@Base+0xbb0>  // b.none
    ce24:	b	cee8 <BZ2_decompress@@Base+0xba4>
    ce28:	ldr	x0, [sp, #24]
    ce2c:	ldr	x0, [x0]
    ce30:	ldr	w0, [x0, #8]
    ce34:	cmp	w0, #0x0
    ce38:	b.ne	ce44 <BZ2_decompress@@Base+0xb00>  // b.any
    ce3c:	str	wzr, [sp, #392]
    ce40:	b	119ec <BZ2_decompress@@Base+0x56a8>
    ce44:	ldr	x0, [sp, #24]
    ce48:	ldr	w0, [x0, #32]
    ce4c:	lsl	w0, w0, #8
    ce50:	ldr	x1, [sp, #24]
    ce54:	ldr	x1, [x1]
    ce58:	ldr	x1, [x1]
    ce5c:	ldrb	w1, [x1]
    ce60:	orr	w1, w0, w1
    ce64:	ldr	x0, [sp, #24]
    ce68:	str	w1, [x0, #32]
    ce6c:	ldr	x0, [sp, #24]
    ce70:	ldr	w0, [x0, #36]
    ce74:	add	w1, w0, #0x8
    ce78:	ldr	x0, [sp, #24]
    ce7c:	str	w1, [x0, #36]
    ce80:	ldr	x0, [sp, #24]
    ce84:	ldr	x0, [x0]
    ce88:	ldr	x1, [x0]
    ce8c:	add	x1, x1, #0x1
    ce90:	str	x1, [x0]
    ce94:	ldr	x0, [sp, #24]
    ce98:	ldr	x0, [x0]
    ce9c:	ldr	w1, [x0, #8]
    cea0:	sub	w1, w1, #0x1
    cea4:	str	w1, [x0, #8]
    cea8:	ldr	x0, [sp, #24]
    ceac:	ldr	x0, [x0]
    ceb0:	ldr	w1, [x0, #12]
    ceb4:	add	w1, w1, #0x1
    ceb8:	str	w1, [x0, #12]
    cebc:	ldr	x0, [sp, #24]
    cec0:	ldr	x0, [x0]
    cec4:	ldr	w0, [x0, #12]
    cec8:	cmp	w0, #0x0
    cecc:	b.ne	cdc8 <BZ2_decompress@@Base+0xa84>  // b.any
    ced0:	ldr	x0, [sp, #24]
    ced4:	ldr	x0, [x0]
    ced8:	ldr	w1, [x0, #16]
    cedc:	add	w1, w1, #0x1
    cee0:	str	w1, [x0, #16]
    cee4:	b	cdc8 <BZ2_decompress@@Base+0xa84>
    cee8:	mov	w0, #0xfffffffc            	// #-4
    ceec:	str	w0, [sp, #392]
    cef0:	b	119ec <BZ2_decompress@@Base+0x56a8>
    cef4:	ldr	x0, [sp, #24]
    cef8:	mov	w1, #0x10                  	// #16
    cefc:	str	w1, [x0, #8]
    cf00:	ldr	x0, [sp, #24]
    cf04:	ldr	w0, [x0, #36]
    cf08:	cmp	w0, #0x7
    cf0c:	b.le	cf60 <BZ2_decompress@@Base+0xc1c>
    cf10:	ldr	x0, [sp, #24]
    cf14:	ldr	w1, [x0, #32]
    cf18:	ldr	x0, [sp, #24]
    cf1c:	ldr	w0, [x0, #36]
    cf20:	sub	w0, w0, #0x8
    cf24:	lsr	w0, w1, w0
    cf28:	and	w0, w0, #0xff
    cf2c:	str	w0, [sp, #200]
    cf30:	ldr	x0, [sp, #24]
    cf34:	ldr	w0, [x0, #36]
    cf38:	sub	w1, w0, #0x8
    cf3c:	ldr	x0, [sp, #24]
    cf40:	str	w1, [x0, #36]
    cf44:	ldr	w0, [sp, #200]
    cf48:	strb	w0, [sp, #399]
    cf4c:	nop
    cf50:	ldrb	w0, [sp, #399]
    cf54:	cmp	w0, #0x59
    cf58:	b.eq	d02c <BZ2_decompress@@Base+0xce8>  // b.none
    cf5c:	b	d020 <BZ2_decompress@@Base+0xcdc>
    cf60:	ldr	x0, [sp, #24]
    cf64:	ldr	x0, [x0]
    cf68:	ldr	w0, [x0, #8]
    cf6c:	cmp	w0, #0x0
    cf70:	b.ne	cf7c <BZ2_decompress@@Base+0xc38>  // b.any
    cf74:	str	wzr, [sp, #392]
    cf78:	b	119ec <BZ2_decompress@@Base+0x56a8>
    cf7c:	ldr	x0, [sp, #24]
    cf80:	ldr	w0, [x0, #32]
    cf84:	lsl	w0, w0, #8
    cf88:	ldr	x1, [sp, #24]
    cf8c:	ldr	x1, [x1]
    cf90:	ldr	x1, [x1]
    cf94:	ldrb	w1, [x1]
    cf98:	orr	w1, w0, w1
    cf9c:	ldr	x0, [sp, #24]
    cfa0:	str	w1, [x0, #32]
    cfa4:	ldr	x0, [sp, #24]
    cfa8:	ldr	w0, [x0, #36]
    cfac:	add	w1, w0, #0x8
    cfb0:	ldr	x0, [sp, #24]
    cfb4:	str	w1, [x0, #36]
    cfb8:	ldr	x0, [sp, #24]
    cfbc:	ldr	x0, [x0]
    cfc0:	ldr	x1, [x0]
    cfc4:	add	x1, x1, #0x1
    cfc8:	str	x1, [x0]
    cfcc:	ldr	x0, [sp, #24]
    cfd0:	ldr	x0, [x0]
    cfd4:	ldr	w1, [x0, #8]
    cfd8:	sub	w1, w1, #0x1
    cfdc:	str	w1, [x0, #8]
    cfe0:	ldr	x0, [sp, #24]
    cfe4:	ldr	x0, [x0]
    cfe8:	ldr	w1, [x0, #12]
    cfec:	add	w1, w1, #0x1
    cff0:	str	w1, [x0, #12]
    cff4:	ldr	x0, [sp, #24]
    cff8:	ldr	x0, [x0]
    cffc:	ldr	w0, [x0, #12]
    d000:	cmp	w0, #0x0
    d004:	b.ne	cf00 <BZ2_decompress@@Base+0xbbc>  // b.any
    d008:	ldr	x0, [sp, #24]
    d00c:	ldr	x0, [x0]
    d010:	ldr	w1, [x0, #16]
    d014:	add	w1, w1, #0x1
    d018:	str	w1, [x0, #16]
    d01c:	b	cf00 <BZ2_decompress@@Base+0xbbc>
    d020:	mov	w0, #0xfffffffc            	// #-4
    d024:	str	w0, [sp, #392]
    d028:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d02c:	ldr	x0, [sp, #24]
    d030:	mov	w1, #0x11                  	// #17
    d034:	str	w1, [x0, #8]
    d038:	ldr	x0, [sp, #24]
    d03c:	ldr	w0, [x0, #36]
    d040:	cmp	w0, #0x7
    d044:	b.le	d098 <BZ2_decompress@@Base+0xd54>
    d048:	ldr	x0, [sp, #24]
    d04c:	ldr	w1, [x0, #32]
    d050:	ldr	x0, [sp, #24]
    d054:	ldr	w0, [x0, #36]
    d058:	sub	w0, w0, #0x8
    d05c:	lsr	w0, w1, w0
    d060:	and	w0, w0, #0xff
    d064:	str	w0, [sp, #196]
    d068:	ldr	x0, [sp, #24]
    d06c:	ldr	w0, [x0, #36]
    d070:	sub	w1, w0, #0x8
    d074:	ldr	x0, [sp, #24]
    d078:	str	w1, [x0, #36]
    d07c:	ldr	w0, [sp, #196]
    d080:	strb	w0, [sp, #399]
    d084:	nop
    d088:	ldrb	w0, [sp, #399]
    d08c:	cmp	w0, #0x26
    d090:	b.eq	d164 <BZ2_decompress@@Base+0xe20>  // b.none
    d094:	b	d158 <BZ2_decompress@@Base+0xe14>
    d098:	ldr	x0, [sp, #24]
    d09c:	ldr	x0, [x0]
    d0a0:	ldr	w0, [x0, #8]
    d0a4:	cmp	w0, #0x0
    d0a8:	b.ne	d0b4 <BZ2_decompress@@Base+0xd70>  // b.any
    d0ac:	str	wzr, [sp, #392]
    d0b0:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d0b4:	ldr	x0, [sp, #24]
    d0b8:	ldr	w0, [x0, #32]
    d0bc:	lsl	w0, w0, #8
    d0c0:	ldr	x1, [sp, #24]
    d0c4:	ldr	x1, [x1]
    d0c8:	ldr	x1, [x1]
    d0cc:	ldrb	w1, [x1]
    d0d0:	orr	w1, w0, w1
    d0d4:	ldr	x0, [sp, #24]
    d0d8:	str	w1, [x0, #32]
    d0dc:	ldr	x0, [sp, #24]
    d0e0:	ldr	w0, [x0, #36]
    d0e4:	add	w1, w0, #0x8
    d0e8:	ldr	x0, [sp, #24]
    d0ec:	str	w1, [x0, #36]
    d0f0:	ldr	x0, [sp, #24]
    d0f4:	ldr	x0, [x0]
    d0f8:	ldr	x1, [x0]
    d0fc:	add	x1, x1, #0x1
    d100:	str	x1, [x0]
    d104:	ldr	x0, [sp, #24]
    d108:	ldr	x0, [x0]
    d10c:	ldr	w1, [x0, #8]
    d110:	sub	w1, w1, #0x1
    d114:	str	w1, [x0, #8]
    d118:	ldr	x0, [sp, #24]
    d11c:	ldr	x0, [x0]
    d120:	ldr	w1, [x0, #12]
    d124:	add	w1, w1, #0x1
    d128:	str	w1, [x0, #12]
    d12c:	ldr	x0, [sp, #24]
    d130:	ldr	x0, [x0]
    d134:	ldr	w0, [x0, #12]
    d138:	cmp	w0, #0x0
    d13c:	b.ne	d038 <BZ2_decompress@@Base+0xcf4>  // b.any
    d140:	ldr	x0, [sp, #24]
    d144:	ldr	x0, [x0]
    d148:	ldr	w1, [x0, #16]
    d14c:	add	w1, w1, #0x1
    d150:	str	w1, [x0, #16]
    d154:	b	d038 <BZ2_decompress@@Base+0xcf4>
    d158:	mov	w0, #0xfffffffc            	// #-4
    d15c:	str	w0, [sp, #392]
    d160:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d164:	ldr	x0, [sp, #24]
    d168:	mov	w1, #0x12                  	// #18
    d16c:	str	w1, [x0, #8]
    d170:	ldr	x0, [sp, #24]
    d174:	ldr	w0, [x0, #36]
    d178:	cmp	w0, #0x7
    d17c:	b.le	d1d0 <BZ2_decompress@@Base+0xe8c>
    d180:	ldr	x0, [sp, #24]
    d184:	ldr	w1, [x0, #32]
    d188:	ldr	x0, [sp, #24]
    d18c:	ldr	w0, [x0, #36]
    d190:	sub	w0, w0, #0x8
    d194:	lsr	w0, w1, w0
    d198:	and	w0, w0, #0xff
    d19c:	str	w0, [sp, #192]
    d1a0:	ldr	x0, [sp, #24]
    d1a4:	ldr	w0, [x0, #36]
    d1a8:	sub	w1, w0, #0x8
    d1ac:	ldr	x0, [sp, #24]
    d1b0:	str	w1, [x0, #36]
    d1b4:	ldr	w0, [sp, #192]
    d1b8:	strb	w0, [sp, #399]
    d1bc:	nop
    d1c0:	ldrb	w0, [sp, #399]
    d1c4:	cmp	w0, #0x53
    d1c8:	b.eq	d29c <BZ2_decompress@@Base+0xf58>  // b.none
    d1cc:	b	d290 <BZ2_decompress@@Base+0xf4c>
    d1d0:	ldr	x0, [sp, #24]
    d1d4:	ldr	x0, [x0]
    d1d8:	ldr	w0, [x0, #8]
    d1dc:	cmp	w0, #0x0
    d1e0:	b.ne	d1ec <BZ2_decompress@@Base+0xea8>  // b.any
    d1e4:	str	wzr, [sp, #392]
    d1e8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d1ec:	ldr	x0, [sp, #24]
    d1f0:	ldr	w0, [x0, #32]
    d1f4:	lsl	w0, w0, #8
    d1f8:	ldr	x1, [sp, #24]
    d1fc:	ldr	x1, [x1]
    d200:	ldr	x1, [x1]
    d204:	ldrb	w1, [x1]
    d208:	orr	w1, w0, w1
    d20c:	ldr	x0, [sp, #24]
    d210:	str	w1, [x0, #32]
    d214:	ldr	x0, [sp, #24]
    d218:	ldr	w0, [x0, #36]
    d21c:	add	w1, w0, #0x8
    d220:	ldr	x0, [sp, #24]
    d224:	str	w1, [x0, #36]
    d228:	ldr	x0, [sp, #24]
    d22c:	ldr	x0, [x0]
    d230:	ldr	x1, [x0]
    d234:	add	x1, x1, #0x1
    d238:	str	x1, [x0]
    d23c:	ldr	x0, [sp, #24]
    d240:	ldr	x0, [x0]
    d244:	ldr	w1, [x0, #8]
    d248:	sub	w1, w1, #0x1
    d24c:	str	w1, [x0, #8]
    d250:	ldr	x0, [sp, #24]
    d254:	ldr	x0, [x0]
    d258:	ldr	w1, [x0, #12]
    d25c:	add	w1, w1, #0x1
    d260:	str	w1, [x0, #12]
    d264:	ldr	x0, [sp, #24]
    d268:	ldr	x0, [x0]
    d26c:	ldr	w0, [x0, #12]
    d270:	cmp	w0, #0x0
    d274:	b.ne	d170 <BZ2_decompress@@Base+0xe2c>  // b.any
    d278:	ldr	x0, [sp, #24]
    d27c:	ldr	x0, [x0]
    d280:	ldr	w1, [x0, #16]
    d284:	add	w1, w1, #0x1
    d288:	str	w1, [x0, #16]
    d28c:	b	d170 <BZ2_decompress@@Base+0xe2c>
    d290:	mov	w0, #0xfffffffc            	// #-4
    d294:	str	w0, [sp, #392]
    d298:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d29c:	ldr	x0, [sp, #24]
    d2a0:	mov	w1, #0x13                  	// #19
    d2a4:	str	w1, [x0, #8]
    d2a8:	ldr	x0, [sp, #24]
    d2ac:	ldr	w0, [x0, #36]
    d2b0:	cmp	w0, #0x7
    d2b4:	b.le	d308 <BZ2_decompress@@Base+0xfc4>
    d2b8:	ldr	x0, [sp, #24]
    d2bc:	ldr	w1, [x0, #32]
    d2c0:	ldr	x0, [sp, #24]
    d2c4:	ldr	w0, [x0, #36]
    d2c8:	sub	w0, w0, #0x8
    d2cc:	lsr	w0, w1, w0
    d2d0:	and	w0, w0, #0xff
    d2d4:	str	w0, [sp, #188]
    d2d8:	ldr	x0, [sp, #24]
    d2dc:	ldr	w0, [x0, #36]
    d2e0:	sub	w1, w0, #0x8
    d2e4:	ldr	x0, [sp, #24]
    d2e8:	str	w1, [x0, #36]
    d2ec:	ldr	w0, [sp, #188]
    d2f0:	strb	w0, [sp, #399]
    d2f4:	nop
    d2f8:	ldrb	w0, [sp, #399]
    d2fc:	cmp	w0, #0x59
    d300:	b.eq	d3d4 <BZ2_decompress@@Base+0x1090>  // b.none
    d304:	b	d3c8 <BZ2_decompress@@Base+0x1084>
    d308:	ldr	x0, [sp, #24]
    d30c:	ldr	x0, [x0]
    d310:	ldr	w0, [x0, #8]
    d314:	cmp	w0, #0x0
    d318:	b.ne	d324 <BZ2_decompress@@Base+0xfe0>  // b.any
    d31c:	str	wzr, [sp, #392]
    d320:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d324:	ldr	x0, [sp, #24]
    d328:	ldr	w0, [x0, #32]
    d32c:	lsl	w0, w0, #8
    d330:	ldr	x1, [sp, #24]
    d334:	ldr	x1, [x1]
    d338:	ldr	x1, [x1]
    d33c:	ldrb	w1, [x1]
    d340:	orr	w1, w0, w1
    d344:	ldr	x0, [sp, #24]
    d348:	str	w1, [x0, #32]
    d34c:	ldr	x0, [sp, #24]
    d350:	ldr	w0, [x0, #36]
    d354:	add	w1, w0, #0x8
    d358:	ldr	x0, [sp, #24]
    d35c:	str	w1, [x0, #36]
    d360:	ldr	x0, [sp, #24]
    d364:	ldr	x0, [x0]
    d368:	ldr	x1, [x0]
    d36c:	add	x1, x1, #0x1
    d370:	str	x1, [x0]
    d374:	ldr	x0, [sp, #24]
    d378:	ldr	x0, [x0]
    d37c:	ldr	w1, [x0, #8]
    d380:	sub	w1, w1, #0x1
    d384:	str	w1, [x0, #8]
    d388:	ldr	x0, [sp, #24]
    d38c:	ldr	x0, [x0]
    d390:	ldr	w1, [x0, #12]
    d394:	add	w1, w1, #0x1
    d398:	str	w1, [x0, #12]
    d39c:	ldr	x0, [sp, #24]
    d3a0:	ldr	x0, [x0]
    d3a4:	ldr	w0, [x0, #12]
    d3a8:	cmp	w0, #0x0
    d3ac:	b.ne	d2a8 <BZ2_decompress@@Base+0xf64>  // b.any
    d3b0:	ldr	x0, [sp, #24]
    d3b4:	ldr	x0, [x0]
    d3b8:	ldr	w1, [x0, #16]
    d3bc:	add	w1, w1, #0x1
    d3c0:	str	w1, [x0, #16]
    d3c4:	b	d2a8 <BZ2_decompress@@Base+0xf64>
    d3c8:	mov	w0, #0xfffffffc            	// #-4
    d3cc:	str	w0, [sp, #392]
    d3d0:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d3d4:	ldr	x0, [sp, #24]
    d3d8:	ldr	w0, [x0, #48]
    d3dc:	add	w1, w0, #0x1
    d3e0:	ldr	x0, [sp, #24]
    d3e4:	str	w1, [x0, #48]
    d3e8:	ldr	x0, [sp, #24]
    d3ec:	ldr	w0, [x0, #52]
    d3f0:	cmp	w0, #0x1
    d3f4:	b.le	d420 <BZ2_decompress@@Base+0x10dc>
    d3f8:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
    d3fc:	ldr	x0, [x0, #4016]
    d400:	ldr	x3, [x0]
    d404:	ldr	x0, [sp, #24]
    d408:	ldr	w0, [x0, #48]
    d40c:	mov	w2, w0
    d410:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
    d414:	add	x1, x0, #0x1c0
    d418:	mov	x0, x3
    d41c:	bl	1730 <fprintf@plt>
    d420:	ldr	x0, [sp, #24]
    d424:	str	wzr, [x0, #3176]
    d428:	ldr	x0, [sp, #24]
    d42c:	mov	w1, #0x14                  	// #20
    d430:	str	w1, [x0, #8]
    d434:	ldr	x0, [sp, #24]
    d438:	ldr	w0, [x0, #36]
    d43c:	cmp	w0, #0x7
    d440:	b.le	d4a4 <BZ2_decompress@@Base+0x1160>
    d444:	ldr	x0, [sp, #24]
    d448:	ldr	w1, [x0, #32]
    d44c:	ldr	x0, [sp, #24]
    d450:	ldr	w0, [x0, #36]
    d454:	sub	w0, w0, #0x8
    d458:	lsr	w0, w1, w0
    d45c:	and	w0, w0, #0xff
    d460:	str	w0, [sp, #184]
    d464:	ldr	x0, [sp, #24]
    d468:	ldr	w0, [x0, #36]
    d46c:	sub	w1, w0, #0x8
    d470:	ldr	x0, [sp, #24]
    d474:	str	w1, [x0, #36]
    d478:	ldr	w0, [sp, #184]
    d47c:	strb	w0, [sp, #399]
    d480:	nop
    d484:	ldr	x0, [sp, #24]
    d488:	ldr	w0, [x0, #3176]
    d48c:	lsl	w1, w0, #8
    d490:	ldrb	w0, [sp, #399]
    d494:	orr	w1, w1, w0
    d498:	ldr	x0, [sp, #24]
    d49c:	str	w1, [x0, #3176]
    d4a0:	b	d564 <BZ2_decompress@@Base+0x1220>
    d4a4:	ldr	x0, [sp, #24]
    d4a8:	ldr	x0, [x0]
    d4ac:	ldr	w0, [x0, #8]
    d4b0:	cmp	w0, #0x0
    d4b4:	b.ne	d4c0 <BZ2_decompress@@Base+0x117c>  // b.any
    d4b8:	str	wzr, [sp, #392]
    d4bc:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d4c0:	ldr	x0, [sp, #24]
    d4c4:	ldr	w0, [x0, #32]
    d4c8:	lsl	w0, w0, #8
    d4cc:	ldr	x1, [sp, #24]
    d4d0:	ldr	x1, [x1]
    d4d4:	ldr	x1, [x1]
    d4d8:	ldrb	w1, [x1]
    d4dc:	orr	w1, w0, w1
    d4e0:	ldr	x0, [sp, #24]
    d4e4:	str	w1, [x0, #32]
    d4e8:	ldr	x0, [sp, #24]
    d4ec:	ldr	w0, [x0, #36]
    d4f0:	add	w1, w0, #0x8
    d4f4:	ldr	x0, [sp, #24]
    d4f8:	str	w1, [x0, #36]
    d4fc:	ldr	x0, [sp, #24]
    d500:	ldr	x0, [x0]
    d504:	ldr	x1, [x0]
    d508:	add	x1, x1, #0x1
    d50c:	str	x1, [x0]
    d510:	ldr	x0, [sp, #24]
    d514:	ldr	x0, [x0]
    d518:	ldr	w1, [x0, #8]
    d51c:	sub	w1, w1, #0x1
    d520:	str	w1, [x0, #8]
    d524:	ldr	x0, [sp, #24]
    d528:	ldr	x0, [x0]
    d52c:	ldr	w1, [x0, #12]
    d530:	add	w1, w1, #0x1
    d534:	str	w1, [x0, #12]
    d538:	ldr	x0, [sp, #24]
    d53c:	ldr	x0, [x0]
    d540:	ldr	w0, [x0, #12]
    d544:	cmp	w0, #0x0
    d548:	b.ne	d434 <BZ2_decompress@@Base+0x10f0>  // b.any
    d54c:	ldr	x0, [sp, #24]
    d550:	ldr	x0, [x0]
    d554:	ldr	w1, [x0, #16]
    d558:	add	w1, w1, #0x1
    d55c:	str	w1, [x0, #16]
    d560:	b	d434 <BZ2_decompress@@Base+0x10f0>
    d564:	ldr	x0, [sp, #24]
    d568:	mov	w1, #0x15                  	// #21
    d56c:	str	w1, [x0, #8]
    d570:	ldr	x0, [sp, #24]
    d574:	ldr	w0, [x0, #36]
    d578:	cmp	w0, #0x7
    d57c:	b.le	d5e0 <BZ2_decompress@@Base+0x129c>
    d580:	ldr	x0, [sp, #24]
    d584:	ldr	w1, [x0, #32]
    d588:	ldr	x0, [sp, #24]
    d58c:	ldr	w0, [x0, #36]
    d590:	sub	w0, w0, #0x8
    d594:	lsr	w0, w1, w0
    d598:	and	w0, w0, #0xff
    d59c:	str	w0, [sp, #180]
    d5a0:	ldr	x0, [sp, #24]
    d5a4:	ldr	w0, [x0, #36]
    d5a8:	sub	w1, w0, #0x8
    d5ac:	ldr	x0, [sp, #24]
    d5b0:	str	w1, [x0, #36]
    d5b4:	ldr	w0, [sp, #180]
    d5b8:	strb	w0, [sp, #399]
    d5bc:	nop
    d5c0:	ldr	x0, [sp, #24]
    d5c4:	ldr	w0, [x0, #3176]
    d5c8:	lsl	w1, w0, #8
    d5cc:	ldrb	w0, [sp, #399]
    d5d0:	orr	w1, w1, w0
    d5d4:	ldr	x0, [sp, #24]
    d5d8:	str	w1, [x0, #3176]
    d5dc:	b	d6a0 <BZ2_decompress@@Base+0x135c>
    d5e0:	ldr	x0, [sp, #24]
    d5e4:	ldr	x0, [x0]
    d5e8:	ldr	w0, [x0, #8]
    d5ec:	cmp	w0, #0x0
    d5f0:	b.ne	d5fc <BZ2_decompress@@Base+0x12b8>  // b.any
    d5f4:	str	wzr, [sp, #392]
    d5f8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d5fc:	ldr	x0, [sp, #24]
    d600:	ldr	w0, [x0, #32]
    d604:	lsl	w0, w0, #8
    d608:	ldr	x1, [sp, #24]
    d60c:	ldr	x1, [x1]
    d610:	ldr	x1, [x1]
    d614:	ldrb	w1, [x1]
    d618:	orr	w1, w0, w1
    d61c:	ldr	x0, [sp, #24]
    d620:	str	w1, [x0, #32]
    d624:	ldr	x0, [sp, #24]
    d628:	ldr	w0, [x0, #36]
    d62c:	add	w1, w0, #0x8
    d630:	ldr	x0, [sp, #24]
    d634:	str	w1, [x0, #36]
    d638:	ldr	x0, [sp, #24]
    d63c:	ldr	x0, [x0]
    d640:	ldr	x1, [x0]
    d644:	add	x1, x1, #0x1
    d648:	str	x1, [x0]
    d64c:	ldr	x0, [sp, #24]
    d650:	ldr	x0, [x0]
    d654:	ldr	w1, [x0, #8]
    d658:	sub	w1, w1, #0x1
    d65c:	str	w1, [x0, #8]
    d660:	ldr	x0, [sp, #24]
    d664:	ldr	x0, [x0]
    d668:	ldr	w1, [x0, #12]
    d66c:	add	w1, w1, #0x1
    d670:	str	w1, [x0, #12]
    d674:	ldr	x0, [sp, #24]
    d678:	ldr	x0, [x0]
    d67c:	ldr	w0, [x0, #12]
    d680:	cmp	w0, #0x0
    d684:	b.ne	d570 <BZ2_decompress@@Base+0x122c>  // b.any
    d688:	ldr	x0, [sp, #24]
    d68c:	ldr	x0, [x0]
    d690:	ldr	w1, [x0, #16]
    d694:	add	w1, w1, #0x1
    d698:	str	w1, [x0, #16]
    d69c:	b	d570 <BZ2_decompress@@Base+0x122c>
    d6a0:	ldr	x0, [sp, #24]
    d6a4:	mov	w1, #0x16                  	// #22
    d6a8:	str	w1, [x0, #8]
    d6ac:	ldr	x0, [sp, #24]
    d6b0:	ldr	w0, [x0, #36]
    d6b4:	cmp	w0, #0x7
    d6b8:	b.le	d71c <BZ2_decompress@@Base+0x13d8>
    d6bc:	ldr	x0, [sp, #24]
    d6c0:	ldr	w1, [x0, #32]
    d6c4:	ldr	x0, [sp, #24]
    d6c8:	ldr	w0, [x0, #36]
    d6cc:	sub	w0, w0, #0x8
    d6d0:	lsr	w0, w1, w0
    d6d4:	and	w0, w0, #0xff
    d6d8:	str	w0, [sp, #176]
    d6dc:	ldr	x0, [sp, #24]
    d6e0:	ldr	w0, [x0, #36]
    d6e4:	sub	w1, w0, #0x8
    d6e8:	ldr	x0, [sp, #24]
    d6ec:	str	w1, [x0, #36]
    d6f0:	ldr	w0, [sp, #176]
    d6f4:	strb	w0, [sp, #399]
    d6f8:	nop
    d6fc:	ldr	x0, [sp, #24]
    d700:	ldr	w0, [x0, #3176]
    d704:	lsl	w1, w0, #8
    d708:	ldrb	w0, [sp, #399]
    d70c:	orr	w1, w1, w0
    d710:	ldr	x0, [sp, #24]
    d714:	str	w1, [x0, #3176]
    d718:	b	d7dc <BZ2_decompress@@Base+0x1498>
    d71c:	ldr	x0, [sp, #24]
    d720:	ldr	x0, [x0]
    d724:	ldr	w0, [x0, #8]
    d728:	cmp	w0, #0x0
    d72c:	b.ne	d738 <BZ2_decompress@@Base+0x13f4>  // b.any
    d730:	str	wzr, [sp, #392]
    d734:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d738:	ldr	x0, [sp, #24]
    d73c:	ldr	w0, [x0, #32]
    d740:	lsl	w0, w0, #8
    d744:	ldr	x1, [sp, #24]
    d748:	ldr	x1, [x1]
    d74c:	ldr	x1, [x1]
    d750:	ldrb	w1, [x1]
    d754:	orr	w1, w0, w1
    d758:	ldr	x0, [sp, #24]
    d75c:	str	w1, [x0, #32]
    d760:	ldr	x0, [sp, #24]
    d764:	ldr	w0, [x0, #36]
    d768:	add	w1, w0, #0x8
    d76c:	ldr	x0, [sp, #24]
    d770:	str	w1, [x0, #36]
    d774:	ldr	x0, [sp, #24]
    d778:	ldr	x0, [x0]
    d77c:	ldr	x1, [x0]
    d780:	add	x1, x1, #0x1
    d784:	str	x1, [x0]
    d788:	ldr	x0, [sp, #24]
    d78c:	ldr	x0, [x0]
    d790:	ldr	w1, [x0, #8]
    d794:	sub	w1, w1, #0x1
    d798:	str	w1, [x0, #8]
    d79c:	ldr	x0, [sp, #24]
    d7a0:	ldr	x0, [x0]
    d7a4:	ldr	w1, [x0, #12]
    d7a8:	add	w1, w1, #0x1
    d7ac:	str	w1, [x0, #12]
    d7b0:	ldr	x0, [sp, #24]
    d7b4:	ldr	x0, [x0]
    d7b8:	ldr	w0, [x0, #12]
    d7bc:	cmp	w0, #0x0
    d7c0:	b.ne	d6ac <BZ2_decompress@@Base+0x1368>  // b.any
    d7c4:	ldr	x0, [sp, #24]
    d7c8:	ldr	x0, [x0]
    d7cc:	ldr	w1, [x0, #16]
    d7d0:	add	w1, w1, #0x1
    d7d4:	str	w1, [x0, #16]
    d7d8:	b	d6ac <BZ2_decompress@@Base+0x1368>
    d7dc:	ldr	x0, [sp, #24]
    d7e0:	mov	w1, #0x17                  	// #23
    d7e4:	str	w1, [x0, #8]
    d7e8:	ldr	x0, [sp, #24]
    d7ec:	ldr	w0, [x0, #36]
    d7f0:	cmp	w0, #0x7
    d7f4:	b.le	d858 <BZ2_decompress@@Base+0x1514>
    d7f8:	ldr	x0, [sp, #24]
    d7fc:	ldr	w1, [x0, #32]
    d800:	ldr	x0, [sp, #24]
    d804:	ldr	w0, [x0, #36]
    d808:	sub	w0, w0, #0x8
    d80c:	lsr	w0, w1, w0
    d810:	and	w0, w0, #0xff
    d814:	str	w0, [sp, #172]
    d818:	ldr	x0, [sp, #24]
    d81c:	ldr	w0, [x0, #36]
    d820:	sub	w1, w0, #0x8
    d824:	ldr	x0, [sp, #24]
    d828:	str	w1, [x0, #36]
    d82c:	ldr	w0, [sp, #172]
    d830:	strb	w0, [sp, #399]
    d834:	nop
    d838:	ldr	x0, [sp, #24]
    d83c:	ldr	w0, [x0, #3176]
    d840:	lsl	w1, w0, #8
    d844:	ldrb	w0, [sp, #399]
    d848:	orr	w1, w1, w0
    d84c:	ldr	x0, [sp, #24]
    d850:	str	w1, [x0, #3176]
    d854:	b	d918 <BZ2_decompress@@Base+0x15d4>
    d858:	ldr	x0, [sp, #24]
    d85c:	ldr	x0, [x0]
    d860:	ldr	w0, [x0, #8]
    d864:	cmp	w0, #0x0
    d868:	b.ne	d874 <BZ2_decompress@@Base+0x1530>  // b.any
    d86c:	str	wzr, [sp, #392]
    d870:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d874:	ldr	x0, [sp, #24]
    d878:	ldr	w0, [x0, #32]
    d87c:	lsl	w0, w0, #8
    d880:	ldr	x1, [sp, #24]
    d884:	ldr	x1, [x1]
    d888:	ldr	x1, [x1]
    d88c:	ldrb	w1, [x1]
    d890:	orr	w1, w0, w1
    d894:	ldr	x0, [sp, #24]
    d898:	str	w1, [x0, #32]
    d89c:	ldr	x0, [sp, #24]
    d8a0:	ldr	w0, [x0, #36]
    d8a4:	add	w1, w0, #0x8
    d8a8:	ldr	x0, [sp, #24]
    d8ac:	str	w1, [x0, #36]
    d8b0:	ldr	x0, [sp, #24]
    d8b4:	ldr	x0, [x0]
    d8b8:	ldr	x1, [x0]
    d8bc:	add	x1, x1, #0x1
    d8c0:	str	x1, [x0]
    d8c4:	ldr	x0, [sp, #24]
    d8c8:	ldr	x0, [x0]
    d8cc:	ldr	w1, [x0, #8]
    d8d0:	sub	w1, w1, #0x1
    d8d4:	str	w1, [x0, #8]
    d8d8:	ldr	x0, [sp, #24]
    d8dc:	ldr	x0, [x0]
    d8e0:	ldr	w1, [x0, #12]
    d8e4:	add	w1, w1, #0x1
    d8e8:	str	w1, [x0, #12]
    d8ec:	ldr	x0, [sp, #24]
    d8f0:	ldr	x0, [x0]
    d8f4:	ldr	w0, [x0, #12]
    d8f8:	cmp	w0, #0x0
    d8fc:	b.ne	d7e8 <BZ2_decompress@@Base+0x14a4>  // b.any
    d900:	ldr	x0, [sp, #24]
    d904:	ldr	x0, [x0]
    d908:	ldr	w1, [x0, #16]
    d90c:	add	w1, w1, #0x1
    d910:	str	w1, [x0, #16]
    d914:	b	d7e8 <BZ2_decompress@@Base+0x14a4>
    d918:	ldr	x0, [sp, #24]
    d91c:	mov	w1, #0x18                  	// #24
    d920:	str	w1, [x0, #8]
    d924:	ldr	x0, [sp, #24]
    d928:	ldr	w0, [x0, #36]
    d92c:	cmp	w0, #0x0
    d930:	b.le	d988 <BZ2_decompress@@Base+0x1644>
    d934:	ldr	x0, [sp, #24]
    d938:	ldr	w1, [x0, #32]
    d93c:	ldr	x0, [sp, #24]
    d940:	ldr	w0, [x0, #36]
    d944:	sub	w0, w0, #0x1
    d948:	lsr	w0, w1, w0
    d94c:	and	w0, w0, #0x1
    d950:	str	w0, [sp, #168]
    d954:	ldr	x0, [sp, #24]
    d958:	ldr	w0, [x0, #36]
    d95c:	sub	w1, w0, #0x1
    d960:	ldr	x0, [sp, #24]
    d964:	str	w1, [x0, #36]
    d968:	ldr	w0, [sp, #168]
    d96c:	and	w1, w0, #0xff
    d970:	ldr	x0, [sp, #24]
    d974:	strb	w1, [x0, #20]
    d978:	nop
    d97c:	ldr	x0, [sp, #24]
    d980:	str	wzr, [x0, #56]
    d984:	b	da48 <BZ2_decompress@@Base+0x1704>
    d988:	ldr	x0, [sp, #24]
    d98c:	ldr	x0, [x0]
    d990:	ldr	w0, [x0, #8]
    d994:	cmp	w0, #0x0
    d998:	b.ne	d9a4 <BZ2_decompress@@Base+0x1660>  // b.any
    d99c:	str	wzr, [sp, #392]
    d9a0:	b	119ec <BZ2_decompress@@Base+0x56a8>
    d9a4:	ldr	x0, [sp, #24]
    d9a8:	ldr	w0, [x0, #32]
    d9ac:	lsl	w0, w0, #8
    d9b0:	ldr	x1, [sp, #24]
    d9b4:	ldr	x1, [x1]
    d9b8:	ldr	x1, [x1]
    d9bc:	ldrb	w1, [x1]
    d9c0:	orr	w1, w0, w1
    d9c4:	ldr	x0, [sp, #24]
    d9c8:	str	w1, [x0, #32]
    d9cc:	ldr	x0, [sp, #24]
    d9d0:	ldr	w0, [x0, #36]
    d9d4:	add	w1, w0, #0x8
    d9d8:	ldr	x0, [sp, #24]
    d9dc:	str	w1, [x0, #36]
    d9e0:	ldr	x0, [sp, #24]
    d9e4:	ldr	x0, [x0]
    d9e8:	ldr	x1, [x0]
    d9ec:	add	x1, x1, #0x1
    d9f0:	str	x1, [x0]
    d9f4:	ldr	x0, [sp, #24]
    d9f8:	ldr	x0, [x0]
    d9fc:	ldr	w1, [x0, #8]
    da00:	sub	w1, w1, #0x1
    da04:	str	w1, [x0, #8]
    da08:	ldr	x0, [sp, #24]
    da0c:	ldr	x0, [x0]
    da10:	ldr	w1, [x0, #12]
    da14:	add	w1, w1, #0x1
    da18:	str	w1, [x0, #12]
    da1c:	ldr	x0, [sp, #24]
    da20:	ldr	x0, [x0]
    da24:	ldr	w0, [x0, #12]
    da28:	cmp	w0, #0x0
    da2c:	b.ne	d924 <BZ2_decompress@@Base+0x15e0>  // b.any
    da30:	ldr	x0, [sp, #24]
    da34:	ldr	x0, [x0]
    da38:	ldr	w1, [x0, #16]
    da3c:	add	w1, w1, #0x1
    da40:	str	w1, [x0, #16]
    da44:	b	d924 <BZ2_decompress@@Base+0x15e0>
    da48:	ldr	x0, [sp, #24]
    da4c:	mov	w1, #0x19                  	// #25
    da50:	str	w1, [x0, #8]
    da54:	ldr	x0, [sp, #24]
    da58:	ldr	w0, [x0, #36]
    da5c:	cmp	w0, #0x7
    da60:	b.le	dac4 <BZ2_decompress@@Base+0x1780>
    da64:	ldr	x0, [sp, #24]
    da68:	ldr	w1, [x0, #32]
    da6c:	ldr	x0, [sp, #24]
    da70:	ldr	w0, [x0, #36]
    da74:	sub	w0, w0, #0x8
    da78:	lsr	w0, w1, w0
    da7c:	and	w0, w0, #0xff
    da80:	str	w0, [sp, #164]
    da84:	ldr	x0, [sp, #24]
    da88:	ldr	w0, [x0, #36]
    da8c:	sub	w1, w0, #0x8
    da90:	ldr	x0, [sp, #24]
    da94:	str	w1, [x0, #36]
    da98:	ldr	w0, [sp, #164]
    da9c:	strb	w0, [sp, #399]
    daa0:	nop
    daa4:	ldr	x0, [sp, #24]
    daa8:	ldr	w0, [x0, #56]
    daac:	lsl	w1, w0, #8
    dab0:	ldrb	w0, [sp, #399]
    dab4:	orr	w1, w1, w0
    dab8:	ldr	x0, [sp, #24]
    dabc:	str	w1, [x0, #56]
    dac0:	b	db84 <BZ2_decompress@@Base+0x1840>
    dac4:	ldr	x0, [sp, #24]
    dac8:	ldr	x0, [x0]
    dacc:	ldr	w0, [x0, #8]
    dad0:	cmp	w0, #0x0
    dad4:	b.ne	dae0 <BZ2_decompress@@Base+0x179c>  // b.any
    dad8:	str	wzr, [sp, #392]
    dadc:	b	119ec <BZ2_decompress@@Base+0x56a8>
    dae0:	ldr	x0, [sp, #24]
    dae4:	ldr	w0, [x0, #32]
    dae8:	lsl	w0, w0, #8
    daec:	ldr	x1, [sp, #24]
    daf0:	ldr	x1, [x1]
    daf4:	ldr	x1, [x1]
    daf8:	ldrb	w1, [x1]
    dafc:	orr	w1, w0, w1
    db00:	ldr	x0, [sp, #24]
    db04:	str	w1, [x0, #32]
    db08:	ldr	x0, [sp, #24]
    db0c:	ldr	w0, [x0, #36]
    db10:	add	w1, w0, #0x8
    db14:	ldr	x0, [sp, #24]
    db18:	str	w1, [x0, #36]
    db1c:	ldr	x0, [sp, #24]
    db20:	ldr	x0, [x0]
    db24:	ldr	x1, [x0]
    db28:	add	x1, x1, #0x1
    db2c:	str	x1, [x0]
    db30:	ldr	x0, [sp, #24]
    db34:	ldr	x0, [x0]
    db38:	ldr	w1, [x0, #8]
    db3c:	sub	w1, w1, #0x1
    db40:	str	w1, [x0, #8]
    db44:	ldr	x0, [sp, #24]
    db48:	ldr	x0, [x0]
    db4c:	ldr	w1, [x0, #12]
    db50:	add	w1, w1, #0x1
    db54:	str	w1, [x0, #12]
    db58:	ldr	x0, [sp, #24]
    db5c:	ldr	x0, [x0]
    db60:	ldr	w0, [x0, #12]
    db64:	cmp	w0, #0x0
    db68:	b.ne	da54 <BZ2_decompress@@Base+0x1710>  // b.any
    db6c:	ldr	x0, [sp, #24]
    db70:	ldr	x0, [x0]
    db74:	ldr	w1, [x0, #16]
    db78:	add	w1, w1, #0x1
    db7c:	str	w1, [x0, #16]
    db80:	b	da54 <BZ2_decompress@@Base+0x1710>
    db84:	ldr	x0, [sp, #24]
    db88:	mov	w1, #0x1a                  	// #26
    db8c:	str	w1, [x0, #8]
    db90:	ldr	x0, [sp, #24]
    db94:	ldr	w0, [x0, #36]
    db98:	cmp	w0, #0x7
    db9c:	b.le	dc00 <BZ2_decompress@@Base+0x18bc>
    dba0:	ldr	x0, [sp, #24]
    dba4:	ldr	w1, [x0, #32]
    dba8:	ldr	x0, [sp, #24]
    dbac:	ldr	w0, [x0, #36]
    dbb0:	sub	w0, w0, #0x8
    dbb4:	lsr	w0, w1, w0
    dbb8:	and	w0, w0, #0xff
    dbbc:	str	w0, [sp, #160]
    dbc0:	ldr	x0, [sp, #24]
    dbc4:	ldr	w0, [x0, #36]
    dbc8:	sub	w1, w0, #0x8
    dbcc:	ldr	x0, [sp, #24]
    dbd0:	str	w1, [x0, #36]
    dbd4:	ldr	w0, [sp, #160]
    dbd8:	strb	w0, [sp, #399]
    dbdc:	nop
    dbe0:	ldr	x0, [sp, #24]
    dbe4:	ldr	w0, [x0, #56]
    dbe8:	lsl	w1, w0, #8
    dbec:	ldrb	w0, [sp, #399]
    dbf0:	orr	w1, w1, w0
    dbf4:	ldr	x0, [sp, #24]
    dbf8:	str	w1, [x0, #56]
    dbfc:	b	dcc0 <BZ2_decompress@@Base+0x197c>
    dc00:	ldr	x0, [sp, #24]
    dc04:	ldr	x0, [x0]
    dc08:	ldr	w0, [x0, #8]
    dc0c:	cmp	w0, #0x0
    dc10:	b.ne	dc1c <BZ2_decompress@@Base+0x18d8>  // b.any
    dc14:	str	wzr, [sp, #392]
    dc18:	b	119ec <BZ2_decompress@@Base+0x56a8>
    dc1c:	ldr	x0, [sp, #24]
    dc20:	ldr	w0, [x0, #32]
    dc24:	lsl	w0, w0, #8
    dc28:	ldr	x1, [sp, #24]
    dc2c:	ldr	x1, [x1]
    dc30:	ldr	x1, [x1]
    dc34:	ldrb	w1, [x1]
    dc38:	orr	w1, w0, w1
    dc3c:	ldr	x0, [sp, #24]
    dc40:	str	w1, [x0, #32]
    dc44:	ldr	x0, [sp, #24]
    dc48:	ldr	w0, [x0, #36]
    dc4c:	add	w1, w0, #0x8
    dc50:	ldr	x0, [sp, #24]
    dc54:	str	w1, [x0, #36]
    dc58:	ldr	x0, [sp, #24]
    dc5c:	ldr	x0, [x0]
    dc60:	ldr	x1, [x0]
    dc64:	add	x1, x1, #0x1
    dc68:	str	x1, [x0]
    dc6c:	ldr	x0, [sp, #24]
    dc70:	ldr	x0, [x0]
    dc74:	ldr	w1, [x0, #8]
    dc78:	sub	w1, w1, #0x1
    dc7c:	str	w1, [x0, #8]
    dc80:	ldr	x0, [sp, #24]
    dc84:	ldr	x0, [x0]
    dc88:	ldr	w1, [x0, #12]
    dc8c:	add	w1, w1, #0x1
    dc90:	str	w1, [x0, #12]
    dc94:	ldr	x0, [sp, #24]
    dc98:	ldr	x0, [x0]
    dc9c:	ldr	w0, [x0, #12]
    dca0:	cmp	w0, #0x0
    dca4:	b.ne	db90 <BZ2_decompress@@Base+0x184c>  // b.any
    dca8:	ldr	x0, [sp, #24]
    dcac:	ldr	x0, [x0]
    dcb0:	ldr	w1, [x0, #16]
    dcb4:	add	w1, w1, #0x1
    dcb8:	str	w1, [x0, #16]
    dcbc:	b	db90 <BZ2_decompress@@Base+0x184c>
    dcc0:	ldr	x0, [sp, #24]
    dcc4:	mov	w1, #0x1b                  	// #27
    dcc8:	str	w1, [x0, #8]
    dccc:	ldr	x0, [sp, #24]
    dcd0:	ldr	w0, [x0, #36]
    dcd4:	cmp	w0, #0x7
    dcd8:	b.le	dd4c <BZ2_decompress@@Base+0x1a08>
    dcdc:	ldr	x0, [sp, #24]
    dce0:	ldr	w1, [x0, #32]
    dce4:	ldr	x0, [sp, #24]
    dce8:	ldr	w0, [x0, #36]
    dcec:	sub	w0, w0, #0x8
    dcf0:	lsr	w0, w1, w0
    dcf4:	and	w0, w0, #0xff
    dcf8:	str	w0, [sp, #156]
    dcfc:	ldr	x0, [sp, #24]
    dd00:	ldr	w0, [x0, #36]
    dd04:	sub	w1, w0, #0x8
    dd08:	ldr	x0, [sp, #24]
    dd0c:	str	w1, [x0, #36]
    dd10:	ldr	w0, [sp, #156]
    dd14:	strb	w0, [sp, #399]
    dd18:	nop
    dd1c:	ldr	x0, [sp, #24]
    dd20:	ldr	w0, [x0, #56]
    dd24:	lsl	w1, w0, #8
    dd28:	ldrb	w0, [sp, #399]
    dd2c:	orr	w1, w1, w0
    dd30:	ldr	x0, [sp, #24]
    dd34:	str	w1, [x0, #56]
    dd38:	ldr	x0, [sp, #24]
    dd3c:	ldr	w0, [x0, #56]
    dd40:	cmp	w0, #0x0
    dd44:	b.ge	de18 <BZ2_decompress@@Base+0x1ad4>  // b.tcont
    dd48:	b	de0c <BZ2_decompress@@Base+0x1ac8>
    dd4c:	ldr	x0, [sp, #24]
    dd50:	ldr	x0, [x0]
    dd54:	ldr	w0, [x0, #8]
    dd58:	cmp	w0, #0x0
    dd5c:	b.ne	dd68 <BZ2_decompress@@Base+0x1a24>  // b.any
    dd60:	str	wzr, [sp, #392]
    dd64:	b	119ec <BZ2_decompress@@Base+0x56a8>
    dd68:	ldr	x0, [sp, #24]
    dd6c:	ldr	w0, [x0, #32]
    dd70:	lsl	w0, w0, #8
    dd74:	ldr	x1, [sp, #24]
    dd78:	ldr	x1, [x1]
    dd7c:	ldr	x1, [x1]
    dd80:	ldrb	w1, [x1]
    dd84:	orr	w1, w0, w1
    dd88:	ldr	x0, [sp, #24]
    dd8c:	str	w1, [x0, #32]
    dd90:	ldr	x0, [sp, #24]
    dd94:	ldr	w0, [x0, #36]
    dd98:	add	w1, w0, #0x8
    dd9c:	ldr	x0, [sp, #24]
    dda0:	str	w1, [x0, #36]
    dda4:	ldr	x0, [sp, #24]
    dda8:	ldr	x0, [x0]
    ddac:	ldr	x1, [x0]
    ddb0:	add	x1, x1, #0x1
    ddb4:	str	x1, [x0]
    ddb8:	ldr	x0, [sp, #24]
    ddbc:	ldr	x0, [x0]
    ddc0:	ldr	w1, [x0, #8]
    ddc4:	sub	w1, w1, #0x1
    ddc8:	str	w1, [x0, #8]
    ddcc:	ldr	x0, [sp, #24]
    ddd0:	ldr	x0, [x0]
    ddd4:	ldr	w1, [x0, #12]
    ddd8:	add	w1, w1, #0x1
    dddc:	str	w1, [x0, #12]
    dde0:	ldr	x0, [sp, #24]
    dde4:	ldr	x0, [x0]
    dde8:	ldr	w0, [x0, #12]
    ddec:	cmp	w0, #0x0
    ddf0:	b.ne	dccc <BZ2_decompress@@Base+0x1988>  // b.any
    ddf4:	ldr	x0, [sp, #24]
    ddf8:	ldr	x0, [x0]
    ddfc:	ldr	w1, [x0, #16]
    de00:	add	w1, w1, #0x1
    de04:	str	w1, [x0, #16]
    de08:	b	dccc <BZ2_decompress@@Base+0x1988>
    de0c:	mov	w0, #0xfffffffc            	// #-4
    de10:	str	w0, [sp, #392]
    de14:	b	119ec <BZ2_decompress@@Base+0x56a8>
    de18:	ldr	x0, [sp, #24]
    de1c:	ldr	w1, [x0, #56]
    de20:	ldr	x0, [sp, #24]
    de24:	ldr	w2, [x0, #40]
    de28:	mov	w0, #0x86a0                	// #34464
    de2c:	movk	w0, #0x1, lsl #16
    de30:	mul	w0, w2, w0
    de34:	add	w0, w0, #0xa
    de38:	cmp	w1, w0
    de3c:	b.le	de4c <BZ2_decompress@@Base+0x1b08>
    de40:	mov	w0, #0xfffffffc            	// #-4
    de44:	str	w0, [sp, #392]
    de48:	b	119ec <BZ2_decompress@@Base+0x56a8>
    de4c:	str	wzr, [sp, #380]
    de50:	b	dfb4 <BZ2_decompress@@Base+0x1c70>
    de54:	ldr	x0, [sp, #24]
    de58:	mov	w1, #0x1c                  	// #28
    de5c:	str	w1, [x0, #8]
    de60:	ldr	x0, [sp, #24]
    de64:	ldr	w0, [x0, #36]
    de68:	cmp	w0, #0x0
    de6c:	b.le	dec0 <BZ2_decompress@@Base+0x1b7c>
    de70:	ldr	x0, [sp, #24]
    de74:	ldr	w1, [x0, #32]
    de78:	ldr	x0, [sp, #24]
    de7c:	ldr	w0, [x0, #36]
    de80:	sub	w0, w0, #0x1
    de84:	lsr	w0, w1, w0
    de88:	and	w0, w0, #0x1
    de8c:	str	w0, [sp, #84]
    de90:	ldr	x0, [sp, #24]
    de94:	ldr	w0, [x0, #36]
    de98:	sub	w1, w0, #0x1
    de9c:	ldr	x0, [sp, #24]
    dea0:	str	w1, [x0, #36]
    dea4:	ldr	w0, [sp, #84]
    dea8:	strb	w0, [sp, #399]
    deac:	nop
    deb0:	ldrb	w0, [sp, #399]
    deb4:	cmp	w0, #0x1
    deb8:	b.ne	df98 <BZ2_decompress@@Base+0x1c54>  // b.any
    debc:	b	df80 <BZ2_decompress@@Base+0x1c3c>
    dec0:	ldr	x0, [sp, #24]
    dec4:	ldr	x0, [x0]
    dec8:	ldr	w0, [x0, #8]
    decc:	cmp	w0, #0x0
    ded0:	b.ne	dedc <BZ2_decompress@@Base+0x1b98>  // b.any
    ded4:	str	wzr, [sp, #392]
    ded8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    dedc:	ldr	x0, [sp, #24]
    dee0:	ldr	w0, [x0, #32]
    dee4:	lsl	w0, w0, #8
    dee8:	ldr	x1, [sp, #24]
    deec:	ldr	x1, [x1]
    def0:	ldr	x1, [x1]
    def4:	ldrb	w1, [x1]
    def8:	orr	w1, w0, w1
    defc:	ldr	x0, [sp, #24]
    df00:	str	w1, [x0, #32]
    df04:	ldr	x0, [sp, #24]
    df08:	ldr	w0, [x0, #36]
    df0c:	add	w1, w0, #0x8
    df10:	ldr	x0, [sp, #24]
    df14:	str	w1, [x0, #36]
    df18:	ldr	x0, [sp, #24]
    df1c:	ldr	x0, [x0]
    df20:	ldr	x1, [x0]
    df24:	add	x1, x1, #0x1
    df28:	str	x1, [x0]
    df2c:	ldr	x0, [sp, #24]
    df30:	ldr	x0, [x0]
    df34:	ldr	w1, [x0, #8]
    df38:	sub	w1, w1, #0x1
    df3c:	str	w1, [x0, #8]
    df40:	ldr	x0, [sp, #24]
    df44:	ldr	x0, [x0]
    df48:	ldr	w1, [x0, #12]
    df4c:	add	w1, w1, #0x1
    df50:	str	w1, [x0, #12]
    df54:	ldr	x0, [sp, #24]
    df58:	ldr	x0, [x0]
    df5c:	ldr	w0, [x0, #12]
    df60:	cmp	w0, #0x0
    df64:	b.ne	de60 <BZ2_decompress@@Base+0x1b1c>  // b.any
    df68:	ldr	x0, [sp, #24]
    df6c:	ldr	x0, [x0]
    df70:	ldr	w1, [x0, #16]
    df74:	add	w1, w1, #0x1
    df78:	str	w1, [x0, #16]
    df7c:	b	de60 <BZ2_decompress@@Base+0x1b1c>
    df80:	ldr	x1, [sp, #24]
    df84:	ldrsw	x0, [sp, #380]
    df88:	add	x0, x1, x0
    df8c:	mov	w1, #0x1                   	// #1
    df90:	strb	w1, [x0, #3452]
    df94:	b	dfa8 <BZ2_decompress@@Base+0x1c64>
    df98:	ldr	x1, [sp, #24]
    df9c:	ldrsw	x0, [sp, #380]
    dfa0:	add	x0, x1, x0
    dfa4:	strb	wzr, [x0, #3452]
    dfa8:	ldr	w0, [sp, #380]
    dfac:	add	w0, w0, #0x1
    dfb0:	str	w0, [sp, #380]
    dfb4:	ldr	w0, [sp, #380]
    dfb8:	cmp	w0, #0xf
    dfbc:	b.le	de54 <BZ2_decompress@@Base+0x1b10>
    dfc0:	str	wzr, [sp, #380]
    dfc4:	b	dfe4 <BZ2_decompress@@Base+0x1ca0>
    dfc8:	ldr	x1, [sp, #24]
    dfcc:	ldrsw	x0, [sp, #380]
    dfd0:	add	x0, x1, x0
    dfd4:	strb	wzr, [x0, #3196]
    dfd8:	ldr	w0, [sp, #380]
    dfdc:	add	w0, w0, #0x1
    dfe0:	str	w0, [sp, #380]
    dfe4:	ldr	w0, [sp, #380]
    dfe8:	cmp	w0, #0xff
    dfec:	b.le	dfc8 <BZ2_decompress@@Base+0x1c84>
    dff0:	str	wzr, [sp, #380]
    dff4:	b	e18c <BZ2_decompress@@Base+0x1e48>
    dff8:	ldr	x1, [sp, #24]
    dffc:	ldrsw	x0, [sp, #380]
    e000:	add	x0, x1, x0
    e004:	ldrb	w0, [x0, #3452]
    e008:	cmp	w0, #0x0
    e00c:	b.eq	e180 <BZ2_decompress@@Base+0x1e3c>  // b.none
    e010:	str	wzr, [sp, #376]
    e014:	b	e174 <BZ2_decompress@@Base+0x1e30>
    e018:	ldr	x0, [sp, #24]
    e01c:	mov	w1, #0x1d                  	// #29
    e020:	str	w1, [x0, #8]
    e024:	ldr	x0, [sp, #24]
    e028:	ldr	w0, [x0, #36]
    e02c:	cmp	w0, #0x0
    e030:	b.le	e084 <BZ2_decompress@@Base+0x1d40>
    e034:	ldr	x0, [sp, #24]
    e038:	ldr	w1, [x0, #32]
    e03c:	ldr	x0, [sp, #24]
    e040:	ldr	w0, [x0, #36]
    e044:	sub	w0, w0, #0x1
    e048:	lsr	w0, w1, w0
    e04c:	and	w0, w0, #0x1
    e050:	str	w0, [sp, #88]
    e054:	ldr	x0, [sp, #24]
    e058:	ldr	w0, [x0, #36]
    e05c:	sub	w1, w0, #0x1
    e060:	ldr	x0, [sp, #24]
    e064:	str	w1, [x0, #36]
    e068:	ldr	w0, [sp, #88]
    e06c:	strb	w0, [sp, #399]
    e070:	nop
    e074:	ldrb	w0, [sp, #399]
    e078:	cmp	w0, #0x1
    e07c:	b.ne	e168 <BZ2_decompress@@Base+0x1e24>  // b.any
    e080:	b	e144 <BZ2_decompress@@Base+0x1e00>
    e084:	ldr	x0, [sp, #24]
    e088:	ldr	x0, [x0]
    e08c:	ldr	w0, [x0, #8]
    e090:	cmp	w0, #0x0
    e094:	b.ne	e0a0 <BZ2_decompress@@Base+0x1d5c>  // b.any
    e098:	str	wzr, [sp, #392]
    e09c:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e0a0:	ldr	x0, [sp, #24]
    e0a4:	ldr	w0, [x0, #32]
    e0a8:	lsl	w0, w0, #8
    e0ac:	ldr	x1, [sp, #24]
    e0b0:	ldr	x1, [x1]
    e0b4:	ldr	x1, [x1]
    e0b8:	ldrb	w1, [x1]
    e0bc:	orr	w1, w0, w1
    e0c0:	ldr	x0, [sp, #24]
    e0c4:	str	w1, [x0, #32]
    e0c8:	ldr	x0, [sp, #24]
    e0cc:	ldr	w0, [x0, #36]
    e0d0:	add	w1, w0, #0x8
    e0d4:	ldr	x0, [sp, #24]
    e0d8:	str	w1, [x0, #36]
    e0dc:	ldr	x0, [sp, #24]
    e0e0:	ldr	x0, [x0]
    e0e4:	ldr	x1, [x0]
    e0e8:	add	x1, x1, #0x1
    e0ec:	str	x1, [x0]
    e0f0:	ldr	x0, [sp, #24]
    e0f4:	ldr	x0, [x0]
    e0f8:	ldr	w1, [x0, #8]
    e0fc:	sub	w1, w1, #0x1
    e100:	str	w1, [x0, #8]
    e104:	ldr	x0, [sp, #24]
    e108:	ldr	x0, [x0]
    e10c:	ldr	w1, [x0, #12]
    e110:	add	w1, w1, #0x1
    e114:	str	w1, [x0, #12]
    e118:	ldr	x0, [sp, #24]
    e11c:	ldr	x0, [x0]
    e120:	ldr	w0, [x0, #12]
    e124:	cmp	w0, #0x0
    e128:	b.ne	e024 <BZ2_decompress@@Base+0x1ce0>  // b.any
    e12c:	ldr	x0, [sp, #24]
    e130:	ldr	x0, [x0]
    e134:	ldr	w1, [x0, #16]
    e138:	add	w1, w1, #0x1
    e13c:	str	w1, [x0, #16]
    e140:	b	e024 <BZ2_decompress@@Base+0x1ce0>
    e144:	ldr	w0, [sp, #380]
    e148:	lsl	w1, w0, #4
    e14c:	ldr	w0, [sp, #376]
    e150:	add	w0, w1, w0
    e154:	ldr	x1, [sp, #24]
    e158:	sxtw	x0, w0
    e15c:	add	x0, x1, x0
    e160:	mov	w1, #0x1                   	// #1
    e164:	strb	w1, [x0, #3196]
    e168:	ldr	w0, [sp, #376]
    e16c:	add	w0, w0, #0x1
    e170:	str	w0, [sp, #376]
    e174:	ldr	w0, [sp, #376]
    e178:	cmp	w0, #0xf
    e17c:	b.le	e018 <BZ2_decompress@@Base+0x1cd4>
    e180:	ldr	w0, [sp, #380]
    e184:	add	w0, w0, #0x1
    e188:	str	w0, [sp, #380]
    e18c:	ldr	w0, [sp, #380]
    e190:	cmp	w0, #0xf
    e194:	b.le	dff8 <BZ2_decompress@@Base+0x1cb4>
    e198:	ldr	x0, [sp, #24]
    e19c:	bl	c2b4 <BZ2_compressBlock@@Base+0x2b4>
    e1a0:	ldr	x0, [sp, #24]
    e1a4:	ldr	w0, [x0, #3192]
    e1a8:	cmp	w0, #0x0
    e1ac:	b.ne	e1bc <BZ2_decompress@@Base+0x1e78>  // b.any
    e1b0:	mov	w0, #0xfffffffc            	// #-4
    e1b4:	str	w0, [sp, #392]
    e1b8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e1bc:	ldr	x0, [sp, #24]
    e1c0:	ldr	w0, [x0, #3192]
    e1c4:	add	w0, w0, #0x2
    e1c8:	str	w0, [sp, #368]
    e1cc:	ldr	x0, [sp, #24]
    e1d0:	mov	w1, #0x1e                  	// #30
    e1d4:	str	w1, [x0, #8]
    e1d8:	ldr	x0, [sp, #24]
    e1dc:	ldr	w0, [x0, #36]
    e1e0:	cmp	w0, #0x2
    e1e4:	b.le	e238 <BZ2_decompress@@Base+0x1ef4>
    e1e8:	ldr	x0, [sp, #24]
    e1ec:	ldr	w1, [x0, #32]
    e1f0:	ldr	x0, [sp, #24]
    e1f4:	ldr	w0, [x0, #36]
    e1f8:	sub	w0, w0, #0x3
    e1fc:	lsr	w0, w1, w0
    e200:	and	w0, w0, #0x7
    e204:	str	w0, [sp, #152]
    e208:	ldr	x0, [sp, #24]
    e20c:	ldr	w0, [x0, #36]
    e210:	sub	w1, w0, #0x3
    e214:	ldr	x0, [sp, #24]
    e218:	str	w1, [x0, #36]
    e21c:	ldr	w0, [sp, #152]
    e220:	str	w0, [sp, #364]
    e224:	nop
    e228:	ldr	w0, [sp, #364]
    e22c:	cmp	w0, #0x1
    e230:	b.le	e304 <BZ2_decompress@@Base+0x1fc0>
    e234:	b	e2f8 <BZ2_decompress@@Base+0x1fb4>
    e238:	ldr	x0, [sp, #24]
    e23c:	ldr	x0, [x0]
    e240:	ldr	w0, [x0, #8]
    e244:	cmp	w0, #0x0
    e248:	b.ne	e254 <BZ2_decompress@@Base+0x1f10>  // b.any
    e24c:	str	wzr, [sp, #392]
    e250:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e254:	ldr	x0, [sp, #24]
    e258:	ldr	w0, [x0, #32]
    e25c:	lsl	w0, w0, #8
    e260:	ldr	x1, [sp, #24]
    e264:	ldr	x1, [x1]
    e268:	ldr	x1, [x1]
    e26c:	ldrb	w1, [x1]
    e270:	orr	w1, w0, w1
    e274:	ldr	x0, [sp, #24]
    e278:	str	w1, [x0, #32]
    e27c:	ldr	x0, [sp, #24]
    e280:	ldr	w0, [x0, #36]
    e284:	add	w1, w0, #0x8
    e288:	ldr	x0, [sp, #24]
    e28c:	str	w1, [x0, #36]
    e290:	ldr	x0, [sp, #24]
    e294:	ldr	x0, [x0]
    e298:	ldr	x1, [x0]
    e29c:	add	x1, x1, #0x1
    e2a0:	str	x1, [x0]
    e2a4:	ldr	x0, [sp, #24]
    e2a8:	ldr	x0, [x0]
    e2ac:	ldr	w1, [x0, #8]
    e2b0:	sub	w1, w1, #0x1
    e2b4:	str	w1, [x0, #8]
    e2b8:	ldr	x0, [sp, #24]
    e2bc:	ldr	x0, [x0]
    e2c0:	ldr	w1, [x0, #12]
    e2c4:	add	w1, w1, #0x1
    e2c8:	str	w1, [x0, #12]
    e2cc:	ldr	x0, [sp, #24]
    e2d0:	ldr	x0, [x0]
    e2d4:	ldr	w0, [x0, #12]
    e2d8:	cmp	w0, #0x0
    e2dc:	b.ne	e1d8 <BZ2_decompress@@Base+0x1e94>  // b.any
    e2e0:	ldr	x0, [sp, #24]
    e2e4:	ldr	x0, [x0]
    e2e8:	ldr	w1, [x0, #16]
    e2ec:	add	w1, w1, #0x1
    e2f0:	str	w1, [x0, #16]
    e2f4:	b	e1d8 <BZ2_decompress@@Base+0x1e94>
    e2f8:	ldr	w0, [sp, #364]
    e2fc:	cmp	w0, #0x6
    e300:	b.le	e310 <BZ2_decompress@@Base+0x1fcc>
    e304:	mov	w0, #0xfffffffc            	// #-4
    e308:	str	w0, [sp, #392]
    e30c:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e310:	ldr	x0, [sp, #24]
    e314:	mov	w1, #0x1f                  	// #31
    e318:	str	w1, [x0, #8]
    e31c:	ldr	x0, [sp, #24]
    e320:	ldr	w0, [x0, #36]
    e324:	cmp	w0, #0xe
    e328:	b.le	e37c <BZ2_decompress@@Base+0x2038>
    e32c:	ldr	x0, [sp, #24]
    e330:	ldr	w1, [x0, #32]
    e334:	ldr	x0, [sp, #24]
    e338:	ldr	w0, [x0, #36]
    e33c:	sub	w0, w0, #0xf
    e340:	lsr	w0, w1, w0
    e344:	and	w0, w0, #0x7fff
    e348:	str	w0, [sp, #148]
    e34c:	ldr	x0, [sp, #24]
    e350:	ldr	w0, [x0, #36]
    e354:	sub	w1, w0, #0xf
    e358:	ldr	x0, [sp, #24]
    e35c:	str	w1, [x0, #36]
    e360:	ldr	w0, [sp, #148]
    e364:	str	w0, [sp, #360]
    e368:	nop
    e36c:	ldr	w0, [sp, #360]
    e370:	cmp	w0, #0x0
    e374:	b.gt	e448 <BZ2_decompress@@Base+0x2104>
    e378:	b	e43c <BZ2_decompress@@Base+0x20f8>
    e37c:	ldr	x0, [sp, #24]
    e380:	ldr	x0, [x0]
    e384:	ldr	w0, [x0, #8]
    e388:	cmp	w0, #0x0
    e38c:	b.ne	e398 <BZ2_decompress@@Base+0x2054>  // b.any
    e390:	str	wzr, [sp, #392]
    e394:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e398:	ldr	x0, [sp, #24]
    e39c:	ldr	w0, [x0, #32]
    e3a0:	lsl	w0, w0, #8
    e3a4:	ldr	x1, [sp, #24]
    e3a8:	ldr	x1, [x1]
    e3ac:	ldr	x1, [x1]
    e3b0:	ldrb	w1, [x1]
    e3b4:	orr	w1, w0, w1
    e3b8:	ldr	x0, [sp, #24]
    e3bc:	str	w1, [x0, #32]
    e3c0:	ldr	x0, [sp, #24]
    e3c4:	ldr	w0, [x0, #36]
    e3c8:	add	w1, w0, #0x8
    e3cc:	ldr	x0, [sp, #24]
    e3d0:	str	w1, [x0, #36]
    e3d4:	ldr	x0, [sp, #24]
    e3d8:	ldr	x0, [x0]
    e3dc:	ldr	x1, [x0]
    e3e0:	add	x1, x1, #0x1
    e3e4:	str	x1, [x0]
    e3e8:	ldr	x0, [sp, #24]
    e3ec:	ldr	x0, [x0]
    e3f0:	ldr	w1, [x0, #8]
    e3f4:	sub	w1, w1, #0x1
    e3f8:	str	w1, [x0, #8]
    e3fc:	ldr	x0, [sp, #24]
    e400:	ldr	x0, [x0]
    e404:	ldr	w1, [x0, #12]
    e408:	add	w1, w1, #0x1
    e40c:	str	w1, [x0, #12]
    e410:	ldr	x0, [sp, #24]
    e414:	ldr	x0, [x0]
    e418:	ldr	w0, [x0, #12]
    e41c:	cmp	w0, #0x0
    e420:	b.ne	e31c <BZ2_decompress@@Base+0x1fd8>  // b.any
    e424:	ldr	x0, [sp, #24]
    e428:	ldr	x0, [x0]
    e42c:	ldr	w1, [x0, #16]
    e430:	add	w1, w1, #0x1
    e434:	str	w1, [x0, #16]
    e438:	b	e31c <BZ2_decompress@@Base+0x1fd8>
    e43c:	mov	w0, #0xfffffffc            	// #-4
    e440:	str	w0, [sp, #392]
    e444:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e448:	str	wzr, [sp, #380]
    e44c:	b	e5e4 <BZ2_decompress@@Base+0x22a0>
    e450:	str	wzr, [sp, #376]
    e454:	ldr	x0, [sp, #24]
    e458:	mov	w1, #0x20                  	// #32
    e45c:	str	w1, [x0, #8]
    e460:	ldr	x0, [sp, #24]
    e464:	ldr	w0, [x0, #36]
    e468:	cmp	w0, #0x0
    e46c:	b.le	e4c0 <BZ2_decompress@@Base+0x217c>
    e470:	ldr	x0, [sp, #24]
    e474:	ldr	w1, [x0, #32]
    e478:	ldr	x0, [sp, #24]
    e47c:	ldr	w0, [x0, #36]
    e480:	sub	w0, w0, #0x1
    e484:	lsr	w0, w1, w0
    e488:	and	w0, w0, #0x1
    e48c:	str	w0, [sp, #92]
    e490:	ldr	x0, [sp, #24]
    e494:	ldr	w0, [x0, #36]
    e498:	sub	w1, w0, #0x1
    e49c:	ldr	x0, [sp, #24]
    e4a0:	str	w1, [x0, #36]
    e4a4:	ldr	w0, [sp, #92]
    e4a8:	strb	w0, [sp, #399]
    e4ac:	nop
    e4b0:	ldrb	w0, [sp, #399]
    e4b4:	cmp	w0, #0x0
    e4b8:	b.ne	e580 <BZ2_decompress@@Base+0x223c>  // b.any
    e4bc:	b	e5a8 <BZ2_decompress@@Base+0x2264>
    e4c0:	ldr	x0, [sp, #24]
    e4c4:	ldr	x0, [x0]
    e4c8:	ldr	w0, [x0, #8]
    e4cc:	cmp	w0, #0x0
    e4d0:	b.ne	e4dc <BZ2_decompress@@Base+0x2198>  // b.any
    e4d4:	str	wzr, [sp, #392]
    e4d8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e4dc:	ldr	x0, [sp, #24]
    e4e0:	ldr	w0, [x0, #32]
    e4e4:	lsl	w0, w0, #8
    e4e8:	ldr	x1, [sp, #24]
    e4ec:	ldr	x1, [x1]
    e4f0:	ldr	x1, [x1]
    e4f4:	ldrb	w1, [x1]
    e4f8:	orr	w1, w0, w1
    e4fc:	ldr	x0, [sp, #24]
    e500:	str	w1, [x0, #32]
    e504:	ldr	x0, [sp, #24]
    e508:	ldr	w0, [x0, #36]
    e50c:	add	w1, w0, #0x8
    e510:	ldr	x0, [sp, #24]
    e514:	str	w1, [x0, #36]
    e518:	ldr	x0, [sp, #24]
    e51c:	ldr	x0, [x0]
    e520:	ldr	x1, [x0]
    e524:	add	x1, x1, #0x1
    e528:	str	x1, [x0]
    e52c:	ldr	x0, [sp, #24]
    e530:	ldr	x0, [x0]
    e534:	ldr	w1, [x0, #8]
    e538:	sub	w1, w1, #0x1
    e53c:	str	w1, [x0, #8]
    e540:	ldr	x0, [sp, #24]
    e544:	ldr	x0, [x0]
    e548:	ldr	w1, [x0, #12]
    e54c:	add	w1, w1, #0x1
    e550:	str	w1, [x0, #12]
    e554:	ldr	x0, [sp, #24]
    e558:	ldr	x0, [x0]
    e55c:	ldr	w0, [x0, #12]
    e560:	cmp	w0, #0x0
    e564:	b.ne	e460 <BZ2_decompress@@Base+0x211c>  // b.any
    e568:	ldr	x0, [sp, #24]
    e56c:	ldr	x0, [x0]
    e570:	ldr	w1, [x0, #16]
    e574:	add	w1, w1, #0x1
    e578:	str	w1, [x0, #16]
    e57c:	b	e460 <BZ2_decompress@@Base+0x211c>
    e580:	ldr	w0, [sp, #376]
    e584:	add	w0, w0, #0x1
    e588:	str	w0, [sp, #376]
    e58c:	ldr	w1, [sp, #376]
    e590:	ldr	w0, [sp, #364]
    e594:	cmp	w1, w0
    e598:	b.lt	e454 <BZ2_decompress@@Base+0x2110>  // b.tstop
    e59c:	mov	w0, #0xfffffffc            	// #-4
    e5a0:	str	w0, [sp, #392]
    e5a4:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e5a8:	ldr	w1, [sp, #380]
    e5ac:	mov	w0, #0x4651                	// #18001
    e5b0:	cmp	w1, w0
    e5b4:	b.gt	e5d8 <BZ2_decompress@@Base+0x2294>
    e5b8:	ldr	w0, [sp, #376]
    e5bc:	and	w2, w0, #0xff
    e5c0:	ldr	x1, [sp, #24]
    e5c4:	ldrsw	x0, [sp, #380]
    e5c8:	add	x0, x1, x0
    e5cc:	add	x0, x0, #0x6, lsl #12
    e5d0:	mov	w1, w2
    e5d4:	strb	w1, [x0, #1310]
    e5d8:	ldr	w0, [sp, #380]
    e5dc:	add	w0, w0, #0x1
    e5e0:	str	w0, [sp, #380]
    e5e4:	ldr	w1, [sp, #380]
    e5e8:	ldr	w0, [sp, #360]
    e5ec:	cmp	w1, w0
    e5f0:	b.lt	e450 <BZ2_decompress@@Base+0x210c>  // b.tstop
    e5f4:	ldr	w1, [sp, #360]
    e5f8:	mov	w0, #0x4652                	// #18002
    e5fc:	cmp	w1, w0
    e600:	b.le	e60c <BZ2_decompress@@Base+0x22c8>
    e604:	mov	w0, #0x4652                	// #18002
    e608:	str	w0, [sp, #360]
    e60c:	strb	wzr, [sp, #279]
    e610:	b	e634 <BZ2_decompress@@Base+0x22f0>
    e614:	ldrb	w0, [sp, #279]
    e618:	sxtw	x0, w0
    e61c:	add	x1, sp, #0x28
    e620:	ldrb	w2, [sp, #279]
    e624:	strb	w2, [x1, x0]
    e628:	ldrb	w0, [sp, #279]
    e62c:	add	w0, w0, #0x1
    e630:	strb	w0, [sp, #279]
    e634:	ldrb	w0, [sp, #279]
    e638:	ldr	w1, [sp, #364]
    e63c:	cmp	w1, w0
    e640:	b.gt	e614 <BZ2_decompress@@Base+0x22d0>
    e644:	str	wzr, [sp, #380]
    e648:	b	e6e4 <BZ2_decompress@@Base+0x23a0>
    e64c:	ldr	x1, [sp, #24]
    e650:	ldrsw	x0, [sp, #380]
    e654:	add	x0, x1, x0
    e658:	add	x0, x0, #0x6, lsl #12
    e65c:	ldrb	w0, [x0, #1310]
    e660:	strb	w0, [sp, #279]
    e664:	ldrb	w0, [sp, #279]
    e668:	sxtw	x0, w0
    e66c:	add	x1, sp, #0x28
    e670:	ldrb	w0, [x1, x0]
    e674:	strb	w0, [sp, #147]
    e678:	b	e6ac <BZ2_decompress@@Base+0x2368>
    e67c:	ldrb	w0, [sp, #279]
    e680:	sub	w0, w0, #0x1
    e684:	ldrb	w3, [sp, #279]
    e688:	sxtw	x0, w0
    e68c:	add	x1, sp, #0x28
    e690:	ldrb	w2, [x1, x0]
    e694:	sxtw	x0, w3
    e698:	add	x1, sp, #0x28
    e69c:	strb	w2, [x1, x0]
    e6a0:	ldrb	w0, [sp, #279]
    e6a4:	sub	w0, w0, #0x1
    e6a8:	strb	w0, [sp, #279]
    e6ac:	ldrb	w0, [sp, #279]
    e6b0:	cmp	w0, #0x0
    e6b4:	b.ne	e67c <BZ2_decompress@@Base+0x2338>  // b.any
    e6b8:	ldrb	w0, [sp, #147]
    e6bc:	strb	w0, [sp, #40]
    e6c0:	ldr	x1, [sp, #24]
    e6c4:	ldrsw	x0, [sp, #380]
    e6c8:	add	x0, x1, x0
    e6cc:	add	x0, x0, #0x1, lsl #12
    e6d0:	ldrb	w1, [sp, #147]
    e6d4:	strb	w1, [x0, #3788]
    e6d8:	ldr	w0, [sp, #380]
    e6dc:	add	w0, w0, #0x1
    e6e0:	str	w0, [sp, #380]
    e6e4:	ldr	w1, [sp, #380]
    e6e8:	ldr	w0, [sp, #360]
    e6ec:	cmp	w1, w0
    e6f0:	b.lt	e64c <BZ2_decompress@@Base+0x2308>  // b.tstop
    e6f4:	str	wzr, [sp, #372]
    e6f8:	b	eb1c <BZ2_decompress@@Base+0x27d8>
    e6fc:	ldr	x0, [sp, #24]
    e700:	mov	w1, #0x21                  	// #33
    e704:	str	w1, [x0, #8]
    e708:	ldr	x0, [sp, #24]
    e70c:	ldr	w0, [x0, #36]
    e710:	cmp	w0, #0x4
    e714:	b.le	e760 <BZ2_decompress@@Base+0x241c>
    e718:	ldr	x0, [sp, #24]
    e71c:	ldr	w1, [x0, #32]
    e720:	ldr	x0, [sp, #24]
    e724:	ldr	w0, [x0, #36]
    e728:	sub	w0, w0, #0x5
    e72c:	lsr	w0, w1, w0
    e730:	and	w0, w0, #0x1f
    e734:	str	w0, [sp, #104]
    e738:	ldr	x0, [sp, #24]
    e73c:	ldr	w0, [x0, #36]
    e740:	sub	w1, w0, #0x5
    e744:	ldr	x0, [sp, #24]
    e748:	str	w1, [x0, #36]
    e74c:	ldr	w0, [sp, #104]
    e750:	str	w0, [sp, #324]
    e754:	nop
    e758:	str	wzr, [sp, #380]
    e75c:	b	eb00 <BZ2_decompress@@Base+0x27bc>
    e760:	ldr	x0, [sp, #24]
    e764:	ldr	x0, [x0]
    e768:	ldr	w0, [x0, #8]
    e76c:	cmp	w0, #0x0
    e770:	b.ne	e77c <BZ2_decompress@@Base+0x2438>  // b.any
    e774:	str	wzr, [sp, #392]
    e778:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e77c:	ldr	x0, [sp, #24]
    e780:	ldr	w0, [x0, #32]
    e784:	lsl	w0, w0, #8
    e788:	ldr	x1, [sp, #24]
    e78c:	ldr	x1, [x1]
    e790:	ldr	x1, [x1]
    e794:	ldrb	w1, [x1]
    e798:	orr	w1, w0, w1
    e79c:	ldr	x0, [sp, #24]
    e7a0:	str	w1, [x0, #32]
    e7a4:	ldr	x0, [sp, #24]
    e7a8:	ldr	w0, [x0, #36]
    e7ac:	add	w1, w0, #0x8
    e7b0:	ldr	x0, [sp, #24]
    e7b4:	str	w1, [x0, #36]
    e7b8:	ldr	x0, [sp, #24]
    e7bc:	ldr	x0, [x0]
    e7c0:	ldr	x1, [x0]
    e7c4:	add	x1, x1, #0x1
    e7c8:	str	x1, [x0]
    e7cc:	ldr	x0, [sp, #24]
    e7d0:	ldr	x0, [x0]
    e7d4:	ldr	w1, [x0, #8]
    e7d8:	sub	w1, w1, #0x1
    e7dc:	str	w1, [x0, #8]
    e7e0:	ldr	x0, [sp, #24]
    e7e4:	ldr	x0, [x0]
    e7e8:	ldr	w1, [x0, #12]
    e7ec:	add	w1, w1, #0x1
    e7f0:	str	w1, [x0, #12]
    e7f4:	ldr	x0, [sp, #24]
    e7f8:	ldr	x0, [x0]
    e7fc:	ldr	w0, [x0, #12]
    e800:	cmp	w0, #0x0
    e804:	b.ne	e708 <BZ2_decompress@@Base+0x23c4>  // b.any
    e808:	ldr	x0, [sp, #24]
    e80c:	ldr	x0, [x0]
    e810:	ldr	w1, [x0, #16]
    e814:	add	w1, w1, #0x1
    e818:	str	w1, [x0, #16]
    e81c:	b	e708 <BZ2_decompress@@Base+0x23c4>
    e820:	ldr	w0, [sp, #324]
    e824:	cmp	w0, #0x0
    e828:	b.le	e838 <BZ2_decompress@@Base+0x24f4>
    e82c:	ldr	w0, [sp, #324]
    e830:	cmp	w0, #0x14
    e834:	b.le	e844 <BZ2_decompress@@Base+0x2500>
    e838:	mov	w0, #0xfffffffc            	// #-4
    e83c:	str	w0, [sp, #392]
    e840:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e844:	ldr	x0, [sp, #24]
    e848:	mov	w1, #0x22                  	// #34
    e84c:	str	w1, [x0, #8]
    e850:	ldr	x0, [sp, #24]
    e854:	ldr	w0, [x0, #36]
    e858:	cmp	w0, #0x0
    e85c:	b.le	e8b0 <BZ2_decompress@@Base+0x256c>
    e860:	ldr	x0, [sp, #24]
    e864:	ldr	w1, [x0, #32]
    e868:	ldr	x0, [sp, #24]
    e86c:	ldr	w0, [x0, #36]
    e870:	sub	w0, w0, #0x1
    e874:	lsr	w0, w1, w0
    e878:	and	w0, w0, #0x1
    e87c:	str	w0, [sp, #100]
    e880:	ldr	x0, [sp, #24]
    e884:	ldr	w0, [x0, #36]
    e888:	sub	w1, w0, #0x1
    e88c:	ldr	x0, [sp, #24]
    e890:	str	w1, [x0, #36]
    e894:	ldr	w0, [sp, #100]
    e898:	strb	w0, [sp, #399]
    e89c:	nop
    e8a0:	ldrb	w0, [sp, #399]
    e8a4:	cmp	w0, #0x0
    e8a8:	b.ne	e970 <BZ2_decompress@@Base+0x262c>  // b.any
    e8ac:	b	eabc <BZ2_decompress@@Base+0x2778>
    e8b0:	ldr	x0, [sp, #24]
    e8b4:	ldr	x0, [x0]
    e8b8:	ldr	w0, [x0, #8]
    e8bc:	cmp	w0, #0x0
    e8c0:	b.ne	e8cc <BZ2_decompress@@Base+0x2588>  // b.any
    e8c4:	str	wzr, [sp, #392]
    e8c8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e8cc:	ldr	x0, [sp, #24]
    e8d0:	ldr	w0, [x0, #32]
    e8d4:	lsl	w0, w0, #8
    e8d8:	ldr	x1, [sp, #24]
    e8dc:	ldr	x1, [x1]
    e8e0:	ldr	x1, [x1]
    e8e4:	ldrb	w1, [x1]
    e8e8:	orr	w1, w0, w1
    e8ec:	ldr	x0, [sp, #24]
    e8f0:	str	w1, [x0, #32]
    e8f4:	ldr	x0, [sp, #24]
    e8f8:	ldr	w0, [x0, #36]
    e8fc:	add	w1, w0, #0x8
    e900:	ldr	x0, [sp, #24]
    e904:	str	w1, [x0, #36]
    e908:	ldr	x0, [sp, #24]
    e90c:	ldr	x0, [x0]
    e910:	ldr	x1, [x0]
    e914:	add	x1, x1, #0x1
    e918:	str	x1, [x0]
    e91c:	ldr	x0, [sp, #24]
    e920:	ldr	x0, [x0]
    e924:	ldr	w1, [x0, #8]
    e928:	sub	w1, w1, #0x1
    e92c:	str	w1, [x0, #8]
    e930:	ldr	x0, [sp, #24]
    e934:	ldr	x0, [x0]
    e938:	ldr	w1, [x0, #12]
    e93c:	add	w1, w1, #0x1
    e940:	str	w1, [x0, #12]
    e944:	ldr	x0, [sp, #24]
    e948:	ldr	x0, [x0]
    e94c:	ldr	w0, [x0, #12]
    e950:	cmp	w0, #0x0
    e954:	b.ne	e850 <BZ2_decompress@@Base+0x250c>  // b.any
    e958:	ldr	x0, [sp, #24]
    e95c:	ldr	x0, [x0]
    e960:	ldr	w1, [x0, #16]
    e964:	add	w1, w1, #0x1
    e968:	str	w1, [x0, #16]
    e96c:	b	e850 <BZ2_decompress@@Base+0x250c>
    e970:	ldr	x0, [sp, #24]
    e974:	mov	w1, #0x23                  	// #35
    e978:	str	w1, [x0, #8]
    e97c:	ldr	x0, [sp, #24]
    e980:	ldr	w0, [x0, #36]
    e984:	cmp	w0, #0x0
    e988:	b.le	e9dc <BZ2_decompress@@Base+0x2698>
    e98c:	ldr	x0, [sp, #24]
    e990:	ldr	w1, [x0, #32]
    e994:	ldr	x0, [sp, #24]
    e998:	ldr	w0, [x0, #36]
    e99c:	sub	w0, w0, #0x1
    e9a0:	lsr	w0, w1, w0
    e9a4:	and	w0, w0, #0x1
    e9a8:	str	w0, [sp, #96]
    e9ac:	ldr	x0, [sp, #24]
    e9b0:	ldr	w0, [x0, #36]
    e9b4:	sub	w1, w0, #0x1
    e9b8:	ldr	x0, [sp, #24]
    e9bc:	str	w1, [x0, #36]
    e9c0:	ldr	w0, [sp, #96]
    e9c4:	strb	w0, [sp, #399]
    e9c8:	nop
    e9cc:	ldrb	w0, [sp, #399]
    e9d0:	cmp	w0, #0x0
    e9d4:	b.ne	eaac <BZ2_decompress@@Base+0x2768>  // b.any
    e9d8:	b	ea9c <BZ2_decompress@@Base+0x2758>
    e9dc:	ldr	x0, [sp, #24]
    e9e0:	ldr	x0, [x0]
    e9e4:	ldr	w0, [x0, #8]
    e9e8:	cmp	w0, #0x0
    e9ec:	b.ne	e9f8 <BZ2_decompress@@Base+0x26b4>  // b.any
    e9f0:	str	wzr, [sp, #392]
    e9f4:	b	119ec <BZ2_decompress@@Base+0x56a8>
    e9f8:	ldr	x0, [sp, #24]
    e9fc:	ldr	w0, [x0, #32]
    ea00:	lsl	w0, w0, #8
    ea04:	ldr	x1, [sp, #24]
    ea08:	ldr	x1, [x1]
    ea0c:	ldr	x1, [x1]
    ea10:	ldrb	w1, [x1]
    ea14:	orr	w1, w0, w1
    ea18:	ldr	x0, [sp, #24]
    ea1c:	str	w1, [x0, #32]
    ea20:	ldr	x0, [sp, #24]
    ea24:	ldr	w0, [x0, #36]
    ea28:	add	w1, w0, #0x8
    ea2c:	ldr	x0, [sp, #24]
    ea30:	str	w1, [x0, #36]
    ea34:	ldr	x0, [sp, #24]
    ea38:	ldr	x0, [x0]
    ea3c:	ldr	x1, [x0]
    ea40:	add	x1, x1, #0x1
    ea44:	str	x1, [x0]
    ea48:	ldr	x0, [sp, #24]
    ea4c:	ldr	x0, [x0]
    ea50:	ldr	w1, [x0, #8]
    ea54:	sub	w1, w1, #0x1
    ea58:	str	w1, [x0, #8]
    ea5c:	ldr	x0, [sp, #24]
    ea60:	ldr	x0, [x0]
    ea64:	ldr	w1, [x0, #12]
    ea68:	add	w1, w1, #0x1
    ea6c:	str	w1, [x0, #12]
    ea70:	ldr	x0, [sp, #24]
    ea74:	ldr	x0, [x0]
    ea78:	ldr	w0, [x0, #12]
    ea7c:	cmp	w0, #0x0
    ea80:	b.ne	e97c <BZ2_decompress@@Base+0x2638>  // b.any
    ea84:	ldr	x0, [sp, #24]
    ea88:	ldr	x0, [x0]
    ea8c:	ldr	w1, [x0, #16]
    ea90:	add	w1, w1, #0x1
    ea94:	str	w1, [x0, #16]
    ea98:	b	e97c <BZ2_decompress@@Base+0x2638>
    ea9c:	ldr	w0, [sp, #324]
    eaa0:	add	w0, w0, #0x1
    eaa4:	str	w0, [sp, #324]
    eaa8:	b	e820 <BZ2_decompress@@Base+0x24dc>
    eaac:	ldr	w0, [sp, #324]
    eab0:	sub	w0, w0, #0x1
    eab4:	str	w0, [sp, #324]
    eab8:	b	e820 <BZ2_decompress@@Base+0x24dc>
    eabc:	ldr	w0, [sp, #324]
    eac0:	and	w4, w0, #0xff
    eac4:	ldr	x3, [sp, #24]
    eac8:	ldrsw	x2, [sp, #380]
    eacc:	ldrsw	x1, [sp, #372]
    ead0:	mov	x0, x1
    ead4:	lsl	x0, x0, #7
    ead8:	add	x0, x0, x1
    eadc:	lsl	x0, x0, #1
    eae0:	add	x0, x3, x0
    eae4:	add	x0, x0, x2
    eae8:	add	x0, x0, #0xa, lsl #12
    eaec:	mov	w1, w4
    eaf0:	strb	w1, [x0, #2928]
    eaf4:	ldr	w0, [sp, #380]
    eaf8:	add	w0, w0, #0x1
    eafc:	str	w0, [sp, #380]
    eb00:	ldr	w1, [sp, #380]
    eb04:	ldr	w0, [sp, #368]
    eb08:	cmp	w1, w0
    eb0c:	b.lt	e820 <BZ2_decompress@@Base+0x24dc>  // b.tstop
    eb10:	ldr	w0, [sp, #372]
    eb14:	add	w0, w0, #0x1
    eb18:	str	w0, [sp, #372]
    eb1c:	ldr	w1, [sp, #372]
    eb20:	ldr	w0, [sp, #364]
    eb24:	cmp	w1, w0
    eb28:	b.lt	e6fc <BZ2_decompress@@Base+0x23b8>  // b.tstop
    eb2c:	str	wzr, [sp, #372]
    eb30:	b	ed20 <BZ2_decompress@@Base+0x29dc>
    eb34:	mov	w0, #0x20                  	// #32
    eb38:	str	w0, [sp, #388]
    eb3c:	str	wzr, [sp, #384]
    eb40:	str	wzr, [sp, #380]
    eb44:	b	ec2c <BZ2_decompress@@Base+0x28e8>
    eb48:	ldr	x3, [sp, #24]
    eb4c:	ldrsw	x2, [sp, #380]
    eb50:	ldrsw	x1, [sp, #372]
    eb54:	mov	x0, x1
    eb58:	lsl	x0, x0, #7
    eb5c:	add	x0, x0, x1
    eb60:	lsl	x0, x0, #1
    eb64:	add	x0, x3, x0
    eb68:	add	x0, x0, x2
    eb6c:	add	x0, x0, #0xa, lsl #12
    eb70:	ldrb	w0, [x0, #2928]
    eb74:	mov	w1, w0
    eb78:	ldr	w0, [sp, #384]
    eb7c:	cmp	w0, w1
    eb80:	b.ge	ebb4 <BZ2_decompress@@Base+0x2870>  // b.tcont
    eb84:	ldr	x3, [sp, #24]
    eb88:	ldrsw	x2, [sp, #380]
    eb8c:	ldrsw	x1, [sp, #372]
    eb90:	mov	x0, x1
    eb94:	lsl	x0, x0, #7
    eb98:	add	x0, x0, x1
    eb9c:	lsl	x0, x0, #1
    eba0:	add	x0, x3, x0
    eba4:	add	x0, x0, x2
    eba8:	add	x0, x0, #0xa, lsl #12
    ebac:	ldrb	w0, [x0, #2928]
    ebb0:	str	w0, [sp, #384]
    ebb4:	ldr	x3, [sp, #24]
    ebb8:	ldrsw	x2, [sp, #380]
    ebbc:	ldrsw	x1, [sp, #372]
    ebc0:	mov	x0, x1
    ebc4:	lsl	x0, x0, #7
    ebc8:	add	x0, x0, x1
    ebcc:	lsl	x0, x0, #1
    ebd0:	add	x0, x3, x0
    ebd4:	add	x0, x0, x2
    ebd8:	add	x0, x0, #0xa, lsl #12
    ebdc:	ldrb	w0, [x0, #2928]
    ebe0:	mov	w1, w0
    ebe4:	ldr	w0, [sp, #388]
    ebe8:	cmp	w0, w1
    ebec:	b.le	ec20 <BZ2_decompress@@Base+0x28dc>
    ebf0:	ldr	x3, [sp, #24]
    ebf4:	ldrsw	x2, [sp, #380]
    ebf8:	ldrsw	x1, [sp, #372]
    ebfc:	mov	x0, x1
    ec00:	lsl	x0, x0, #7
    ec04:	add	x0, x0, x1
    ec08:	lsl	x0, x0, #1
    ec0c:	add	x0, x3, x0
    ec10:	add	x0, x0, x2
    ec14:	add	x0, x0, #0xa, lsl #12
    ec18:	ldrb	w0, [x0, #2928]
    ec1c:	str	w0, [sp, #388]
    ec20:	ldr	w0, [sp, #380]
    ec24:	add	w0, w0, #0x1
    ec28:	str	w0, [sp, #380]
    ec2c:	ldr	w1, [sp, #380]
    ec30:	ldr	w0, [sp, #368]
    ec34:	cmp	w1, w0
    ec38:	b.lt	eb48 <BZ2_decompress@@Base+0x2804>  // b.tstop
    ec3c:	ldrsw	x1, [sp, #372]
    ec40:	mov	x0, x1
    ec44:	lsl	x0, x0, #7
    ec48:	add	x0, x0, x1
    ec4c:	lsl	x0, x0, #3
    ec50:	mov	x1, #0xb170                	// #45424
    ec54:	add	x0, x0, x1
    ec58:	ldr	x1, [sp, #24]
    ec5c:	add	x0, x1, x0
    ec60:	add	x7, x0, #0xc
    ec64:	ldrsw	x1, [sp, #372]
    ec68:	mov	x0, x1
    ec6c:	lsl	x0, x0, #7
    ec70:	add	x0, x0, x1
    ec74:	lsl	x0, x0, #3
    ec78:	mov	x1, #0xc9a0                	// #51616
    ec7c:	add	x0, x0, x1
    ec80:	ldr	x1, [sp, #24]
    ec84:	add	x0, x1, x0
    ec88:	add	x8, x0, #0xc
    ec8c:	ldrsw	x1, [sp, #372]
    ec90:	mov	x0, x1
    ec94:	lsl	x0, x0, #7
    ec98:	add	x0, x0, x1
    ec9c:	lsl	x0, x0, #3
    eca0:	mov	x1, #0xe1d0                	// #57808
    eca4:	add	x0, x0, x1
    eca8:	ldr	x1, [sp, #24]
    ecac:	add	x0, x1, x0
    ecb0:	add	x2, x0, #0xc
    ecb4:	ldrsw	x1, [sp, #372]
    ecb8:	mov	x0, x1
    ecbc:	lsl	x0, x0, #7
    ecc0:	add	x0, x0, x1
    ecc4:	lsl	x0, x0, #1
    ecc8:	mov	x1, #0xab70                	// #43888
    eccc:	add	x0, x0, x1
    ecd0:	ldr	x1, [sp, #24]
    ecd4:	add	x0, x1, x0
    ecd8:	ldr	w6, [sp, #368]
    ecdc:	ldr	w5, [sp, #384]
    ece0:	ldr	w4, [sp, #388]
    ece4:	mov	x3, x0
    ece8:	mov	x1, x8
    ecec:	mov	x0, x7
    ecf0:	bl	15c0 <BZ2_hbCreateDecodeTables@plt>
    ecf4:	ldr	x1, [sp, #24]
    ecf8:	ldrsw	x2, [sp, #372]
    ecfc:	mov	x0, #0x3e80                	// #16000
    ed00:	add	x0, x2, x0
    ed04:	lsl	x0, x0, #2
    ed08:	add	x0, x1, x0
    ed0c:	ldr	w1, [sp, #388]
    ed10:	str	w1, [x0, #12]
    ed14:	ldr	w0, [sp, #372]
    ed18:	add	w0, w0, #0x1
    ed1c:	str	w0, [sp, #372]
    ed20:	ldr	w1, [sp, #372]
    ed24:	ldr	w0, [sp, #364]
    ed28:	cmp	w1, w0
    ed2c:	b.lt	eb34 <BZ2_decompress@@Base+0x27f0>  // b.tstop
    ed30:	ldr	x0, [sp, #24]
    ed34:	ldr	w0, [x0, #3192]
    ed38:	add	w0, w0, #0x1
    ed3c:	str	w0, [sp, #356]
    ed40:	ldr	x0, [sp, #24]
    ed44:	ldr	w1, [x0, #40]
    ed48:	mov	w0, #0x86a0                	// #34464
    ed4c:	movk	w0, #0x1, lsl #16
    ed50:	mul	w0, w1, w0
    ed54:	str	w0, [sp, #340]
    ed58:	mov	w0, #0xffffffff            	// #-1
    ed5c:	str	w0, [sp, #352]
    ed60:	str	wzr, [sp, #348]
    ed64:	str	wzr, [sp, #380]
    ed68:	b	ed90 <BZ2_decompress@@Base+0x2a4c>
    ed6c:	ldr	x1, [sp, #24]
    ed70:	ldrsw	x0, [sp, #380]
    ed74:	add	x0, x0, #0x10
    ed78:	lsl	x0, x0, #2
    ed7c:	add	x0, x1, x0
    ed80:	str	wzr, [x0, #4]
    ed84:	ldr	w0, [sp, #380]
    ed88:	add	w0, w0, #0x1
    ed8c:	str	w0, [sp, #380]
    ed90:	ldr	w0, [sp, #380]
    ed94:	cmp	w0, #0xff
    ed98:	b.le	ed6c <BZ2_decompress@@Base+0x2a28>
    ed9c:	mov	w0, #0xfff                 	// #4095
    eda0:	str	w0, [sp, #264]
    eda4:	mov	w0, #0xf                   	// #15
    eda8:	str	w0, [sp, #272]
    edac:	b	ee40 <BZ2_decompress@@Base+0x2afc>
    edb0:	mov	w0, #0xf                   	// #15
    edb4:	str	w0, [sp, #268]
    edb8:	b	ee08 <BZ2_decompress@@Base+0x2ac4>
    edbc:	ldr	w0, [sp, #272]
    edc0:	and	w0, w0, #0xff
    edc4:	ubfiz	w0, w0, #4, #4
    edc8:	and	w1, w0, #0xff
    edcc:	ldr	w0, [sp, #268]
    edd0:	and	w0, w0, #0xff
    edd4:	add	w0, w1, w0
    edd8:	and	w2, w0, #0xff
    eddc:	ldr	x1, [sp, #24]
    ede0:	ldrsw	x0, [sp, #264]
    ede4:	add	x0, x1, x0
    ede8:	mov	w1, w2
    edec:	strb	w1, [x0, #3724]
    edf0:	ldr	w0, [sp, #264]
    edf4:	sub	w0, w0, #0x1
    edf8:	str	w0, [sp, #264]
    edfc:	ldr	w0, [sp, #268]
    ee00:	sub	w0, w0, #0x1
    ee04:	str	w0, [sp, #268]
    ee08:	ldr	w0, [sp, #268]
    ee0c:	cmp	w0, #0x0
    ee10:	b.ge	edbc <BZ2_decompress@@Base+0x2a78>  // b.tcont
    ee14:	ldr	w0, [sp, #264]
    ee18:	add	w1, w0, #0x1
    ee1c:	ldr	x2, [sp, #24]
    ee20:	ldrsw	x0, [sp, #272]
    ee24:	add	x0, x0, #0x7a0
    ee28:	lsl	x0, x0, #2
    ee2c:	add	x0, x2, x0
    ee30:	str	w1, [x0, #12]
    ee34:	ldr	w0, [sp, #272]
    ee38:	sub	w0, w0, #0x1
    ee3c:	str	w0, [sp, #272]
    ee40:	ldr	w0, [sp, #272]
    ee44:	cmp	w0, #0x0
    ee48:	b.ge	edb0 <BZ2_decompress@@Base+0x2a6c>  // b.tcont
    ee4c:	str	wzr, [sp, #336]
    ee50:	ldr	w0, [sp, #348]
    ee54:	cmp	w0, #0x0
    ee58:	b.ne	ef48 <BZ2_decompress@@Base+0x2c04>  // b.any
    ee5c:	ldr	w0, [sp, #352]
    ee60:	add	w0, w0, #0x1
    ee64:	str	w0, [sp, #352]
    ee68:	ldr	w1, [sp, #352]
    ee6c:	ldr	w0, [sp, #360]
    ee70:	cmp	w1, w0
    ee74:	b.lt	ee84 <BZ2_decompress@@Base+0x2b40>  // b.tstop
    ee78:	mov	w0, #0xfffffffc            	// #-4
    ee7c:	str	w0, [sp, #392]
    ee80:	b	119ec <BZ2_decompress@@Base+0x56a8>
    ee84:	mov	w0, #0x32                  	// #50
    ee88:	str	w0, [sp, #348]
    ee8c:	ldr	x1, [sp, #24]
    ee90:	ldrsw	x0, [sp, #352]
    ee94:	add	x0, x1, x0
    ee98:	add	x0, x0, #0x1, lsl #12
    ee9c:	ldrb	w0, [x0, #3788]
    eea0:	str	w0, [sp, #308]
    eea4:	ldr	x1, [sp, #24]
    eea8:	ldrsw	x2, [sp, #308]
    eeac:	mov	x0, #0x3e80                	// #16000
    eeb0:	add	x0, x2, x0
    eeb4:	lsl	x0, x0, #2
    eeb8:	add	x0, x1, x0
    eebc:	ldr	w0, [x0, #12]
    eec0:	str	w0, [sp, #304]
    eec4:	ldrsw	x1, [sp, #308]
    eec8:	mov	x0, x1
    eecc:	lsl	x0, x0, #7
    eed0:	add	x0, x0, x1
    eed4:	lsl	x0, x0, #3
    eed8:	mov	x1, #0xb170                	// #45424
    eedc:	add	x0, x0, x1
    eee0:	ldr	x1, [sp, #24]
    eee4:	add	x0, x1, x0
    eee8:	add	x0, x0, #0xc
    eeec:	str	x0, [sp, #296]
    eef0:	ldrsw	x1, [sp, #308]
    eef4:	mov	x0, x1
    eef8:	lsl	x0, x0, #7
    eefc:	add	x0, x0, x1
    ef00:	lsl	x0, x0, #3
    ef04:	mov	x1, #0xe1d0                	// #57808
    ef08:	add	x0, x0, x1
    ef0c:	ldr	x1, [sp, #24]
    ef10:	add	x0, x1, x0
    ef14:	add	x0, x0, #0xc
    ef18:	str	x0, [sp, #280]
    ef1c:	ldrsw	x1, [sp, #308]
    ef20:	mov	x0, x1
    ef24:	lsl	x0, x0, #7
    ef28:	add	x0, x0, x1
    ef2c:	lsl	x0, x0, #3
    ef30:	mov	x1, #0xc9a0                	// #51616
    ef34:	add	x0, x0, x1
    ef38:	ldr	x1, [sp, #24]
    ef3c:	add	x0, x1, x0
    ef40:	add	x0, x0, #0xc
    ef44:	str	x0, [sp, #288]
    ef48:	ldr	w0, [sp, #348]
    ef4c:	sub	w0, w0, #0x1
    ef50:	str	w0, [sp, #348]
    ef54:	ldr	w0, [sp, #304]
    ef58:	str	w0, [sp, #320]
    ef5c:	ldr	x0, [sp, #24]
    ef60:	mov	w1, #0x24                  	// #36
    ef64:	str	w1, [x0, #8]
    ef68:	ldr	x0, [sp, #24]
    ef6c:	ldr	w0, [x0, #36]
    ef70:	ldr	w1, [sp, #320]
    ef74:	cmp	w1, w0
    ef78:	b.gt	efd4 <BZ2_decompress@@Base+0x2c90>
    ef7c:	ldr	x0, [sp, #24]
    ef80:	ldr	w1, [x0, #32]
    ef84:	ldr	x0, [sp, #24]
    ef88:	ldr	w2, [x0, #36]
    ef8c:	ldr	w0, [sp, #320]
    ef90:	sub	w0, w2, w0
    ef94:	lsr	w0, w1, w0
    ef98:	ldr	w1, [sp, #320]
    ef9c:	mov	w2, #0x1                   	// #1
    efa0:	lsl	w1, w2, w1
    efa4:	sub	w1, w1, #0x1
    efa8:	and	w0, w0, w1
    efac:	str	w0, [sp, #140]
    efb0:	ldr	x0, [sp, #24]
    efb4:	ldr	w1, [x0, #36]
    efb8:	ldr	w0, [sp, #320]
    efbc:	sub	w1, w1, w0
    efc0:	ldr	x0, [sp, #24]
    efc4:	str	w1, [x0, #36]
    efc8:	ldr	w0, [sp, #140]
    efcc:	str	w0, [sp, #316]
    efd0:	b	f094 <BZ2_decompress@@Base+0x2d50>
    efd4:	ldr	x0, [sp, #24]
    efd8:	ldr	x0, [x0]
    efdc:	ldr	w0, [x0, #8]
    efe0:	cmp	w0, #0x0
    efe4:	b.ne	eff0 <BZ2_decompress@@Base+0x2cac>  // b.any
    efe8:	str	wzr, [sp, #392]
    efec:	b	119ec <BZ2_decompress@@Base+0x56a8>
    eff0:	ldr	x0, [sp, #24]
    eff4:	ldr	w0, [x0, #32]
    eff8:	lsl	w0, w0, #8
    effc:	ldr	x1, [sp, #24]
    f000:	ldr	x1, [x1]
    f004:	ldr	x1, [x1]
    f008:	ldrb	w1, [x1]
    f00c:	orr	w1, w0, w1
    f010:	ldr	x0, [sp, #24]
    f014:	str	w1, [x0, #32]
    f018:	ldr	x0, [sp, #24]
    f01c:	ldr	w0, [x0, #36]
    f020:	add	w1, w0, #0x8
    f024:	ldr	x0, [sp, #24]
    f028:	str	w1, [x0, #36]
    f02c:	ldr	x0, [sp, #24]
    f030:	ldr	x0, [x0]
    f034:	ldr	x1, [x0]
    f038:	add	x1, x1, #0x1
    f03c:	str	x1, [x0]
    f040:	ldr	x0, [sp, #24]
    f044:	ldr	x0, [x0]
    f048:	ldr	w1, [x0, #8]
    f04c:	sub	w1, w1, #0x1
    f050:	str	w1, [x0, #8]
    f054:	ldr	x0, [sp, #24]
    f058:	ldr	x0, [x0]
    f05c:	ldr	w1, [x0, #12]
    f060:	add	w1, w1, #0x1
    f064:	str	w1, [x0, #12]
    f068:	ldr	x0, [sp, #24]
    f06c:	ldr	x0, [x0]
    f070:	ldr	w0, [x0, #12]
    f074:	cmp	w0, #0x0
    f078:	b.ne	ef68 <BZ2_decompress@@Base+0x2c24>  // b.any
    f07c:	ldr	x0, [sp, #24]
    f080:	ldr	x0, [x0]
    f084:	ldr	w1, [x0, #16]
    f088:	add	w1, w1, #0x1
    f08c:	str	w1, [x0, #16]
    f090:	b	ef68 <BZ2_decompress@@Base+0x2c24>
    f094:	ldr	w0, [sp, #320]
    f098:	cmp	w0, #0x14
    f09c:	b.le	f0ac <BZ2_decompress@@Base+0x2d68>
    f0a0:	mov	w0, #0xfffffffc            	// #-4
    f0a4:	str	w0, [sp, #392]
    f0a8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f0ac:	ldrsw	x0, [sp, #320]
    f0b0:	lsl	x0, x0, #2
    f0b4:	ldr	x1, [sp, #296]
    f0b8:	add	x0, x1, x0
    f0bc:	ldr	w0, [x0]
    f0c0:	ldr	w1, [sp, #316]
    f0c4:	cmp	w1, w0
    f0c8:	b.le	f20c <BZ2_decompress@@Base+0x2ec8>
    f0cc:	ldr	w0, [sp, #320]
    f0d0:	add	w0, w0, #0x1
    f0d4:	str	w0, [sp, #320]
    f0d8:	ldr	x0, [sp, #24]
    f0dc:	mov	w1, #0x25                  	// #37
    f0e0:	str	w1, [x0, #8]
    f0e4:	ldr	x0, [sp, #24]
    f0e8:	ldr	w0, [x0, #36]
    f0ec:	cmp	w0, #0x0
    f0f0:	b.le	f14c <BZ2_decompress@@Base+0x2e08>
    f0f4:	ldr	x0, [sp, #24]
    f0f8:	ldr	w1, [x0, #32]
    f0fc:	ldr	x0, [sp, #24]
    f100:	ldr	w0, [x0, #36]
    f104:	sub	w0, w0, #0x1
    f108:	lsr	w0, w1, w0
    f10c:	and	w0, w0, #0x1
    f110:	str	w0, [sp, #136]
    f114:	ldr	x0, [sp, #24]
    f118:	ldr	w0, [x0, #36]
    f11c:	sub	w1, w0, #0x1
    f120:	ldr	x0, [sp, #24]
    f124:	str	w1, [x0, #36]
    f128:	ldr	w0, [sp, #136]
    f12c:	str	w0, [sp, #312]
    f130:	nop
    f134:	ldr	w0, [sp, #316]
    f138:	lsl	w0, w0, #1
    f13c:	ldr	w1, [sp, #312]
    f140:	orr	w0, w1, w0
    f144:	str	w0, [sp, #316]
    f148:	b	f094 <BZ2_decompress@@Base+0x2d50>
    f14c:	ldr	x0, [sp, #24]
    f150:	ldr	x0, [x0]
    f154:	ldr	w0, [x0, #8]
    f158:	cmp	w0, #0x0
    f15c:	b.ne	f168 <BZ2_decompress@@Base+0x2e24>  // b.any
    f160:	str	wzr, [sp, #392]
    f164:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f168:	ldr	x0, [sp, #24]
    f16c:	ldr	w0, [x0, #32]
    f170:	lsl	w0, w0, #8
    f174:	ldr	x1, [sp, #24]
    f178:	ldr	x1, [x1]
    f17c:	ldr	x1, [x1]
    f180:	ldrb	w1, [x1]
    f184:	orr	w1, w0, w1
    f188:	ldr	x0, [sp, #24]
    f18c:	str	w1, [x0, #32]
    f190:	ldr	x0, [sp, #24]
    f194:	ldr	w0, [x0, #36]
    f198:	add	w1, w0, #0x8
    f19c:	ldr	x0, [sp, #24]
    f1a0:	str	w1, [x0, #36]
    f1a4:	ldr	x0, [sp, #24]
    f1a8:	ldr	x0, [x0]
    f1ac:	ldr	x1, [x0]
    f1b0:	add	x1, x1, #0x1
    f1b4:	str	x1, [x0]
    f1b8:	ldr	x0, [sp, #24]
    f1bc:	ldr	x0, [x0]
    f1c0:	ldr	w1, [x0, #8]
    f1c4:	sub	w1, w1, #0x1
    f1c8:	str	w1, [x0, #8]
    f1cc:	ldr	x0, [sp, #24]
    f1d0:	ldr	x0, [x0]
    f1d4:	ldr	w1, [x0, #12]
    f1d8:	add	w1, w1, #0x1
    f1dc:	str	w1, [x0, #12]
    f1e0:	ldr	x0, [sp, #24]
    f1e4:	ldr	x0, [x0]
    f1e8:	ldr	w0, [x0, #12]
    f1ec:	cmp	w0, #0x0
    f1f0:	b.ne	f0e4 <BZ2_decompress@@Base+0x2da0>  // b.any
    f1f4:	ldr	x0, [sp, #24]
    f1f8:	ldr	x0, [x0]
    f1fc:	ldr	w1, [x0, #16]
    f200:	add	w1, w1, #0x1
    f204:	str	w1, [x0, #16]
    f208:	b	f0e4 <BZ2_decompress@@Base+0x2da0>
    f20c:	nop
    f210:	ldrsw	x0, [sp, #320]
    f214:	lsl	x0, x0, #2
    f218:	ldr	x1, [sp, #288]
    f21c:	add	x0, x1, x0
    f220:	ldr	w0, [x0]
    f224:	ldr	w1, [sp, #316]
    f228:	sub	w0, w1, w0
    f22c:	cmp	w0, #0x0
    f230:	b.lt	f258 <BZ2_decompress@@Base+0x2f14>  // b.tstop
    f234:	ldrsw	x0, [sp, #320]
    f238:	lsl	x0, x0, #2
    f23c:	ldr	x1, [sp, #288]
    f240:	add	x0, x1, x0
    f244:	ldr	w0, [x0]
    f248:	ldr	w1, [sp, #316]
    f24c:	sub	w0, w1, w0
    f250:	cmp	w0, #0x101
    f254:	b.le	f264 <BZ2_decompress@@Base+0x2f20>
    f258:	mov	w0, #0xfffffffc            	// #-4
    f25c:	str	w0, [sp, #392]
    f260:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f264:	ldrsw	x0, [sp, #320]
    f268:	lsl	x0, x0, #2
    f26c:	ldr	x1, [sp, #288]
    f270:	add	x0, x1, x0
    f274:	ldr	w0, [x0]
    f278:	ldr	w1, [sp, #316]
    f27c:	sub	w0, w1, w0
    f280:	sxtw	x0, w0
    f284:	lsl	x0, x0, #2
    f288:	ldr	x1, [sp, #280]
    f28c:	add	x0, x1, x0
    f290:	ldr	w0, [x0]
    f294:	str	w0, [sp, #344]
    f298:	ldr	w1, [sp, #344]
    f29c:	ldr	w0, [sp, #356]
    f2a0:	cmp	w1, w0
    f2a4:	b.eq	10260 <BZ2_decompress@@Base+0x3f1c>  // b.none
    f2a8:	ldr	w0, [sp, #344]
    f2ac:	cmp	w0, #0x0
    f2b0:	b.eq	f2c0 <BZ2_decompress@@Base+0x2f7c>  // b.none
    f2b4:	ldr	w0, [sp, #344]
    f2b8:	cmp	w0, #0x1
    f2bc:	b.ne	f8e8 <BZ2_decompress@@Base+0x35a4>  // b.any
    f2c0:	mov	w0, #0xffffffff            	// #-1
    f2c4:	str	w0, [sp, #332]
    f2c8:	mov	w0, #0x1                   	// #1
    f2cc:	str	w0, [sp, #328]
    f2d0:	ldr	w1, [sp, #328]
    f2d4:	mov	w0, #0x1fffff              	// #2097151
    f2d8:	cmp	w1, w0
    f2dc:	b.le	f2ec <BZ2_decompress@@Base+0x2fa8>
    f2e0:	mov	w0, #0xfffffffc            	// #-4
    f2e4:	str	w0, [sp, #392]
    f2e8:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f2ec:	ldr	w0, [sp, #344]
    f2f0:	cmp	w0, #0x0
    f2f4:	b.ne	f30c <BZ2_decompress@@Base+0x2fc8>  // b.any
    f2f8:	ldr	w1, [sp, #332]
    f2fc:	ldr	w0, [sp, #328]
    f300:	add	w0, w1, w0
    f304:	str	w0, [sp, #332]
    f308:	b	f32c <BZ2_decompress@@Base+0x2fe8>
    f30c:	ldr	w0, [sp, #344]
    f310:	cmp	w0, #0x1
    f314:	b.ne	f32c <BZ2_decompress@@Base+0x2fe8>  // b.any
    f318:	ldr	w0, [sp, #328]
    f31c:	lsl	w0, w0, #1
    f320:	ldr	w1, [sp, #332]
    f324:	add	w0, w1, w0
    f328:	str	w0, [sp, #332]
    f32c:	ldr	w0, [sp, #328]
    f330:	lsl	w0, w0, #1
    f334:	str	w0, [sp, #328]
    f338:	ldr	w0, [sp, #348]
    f33c:	cmp	w0, #0x0
    f340:	b.ne	f430 <BZ2_decompress@@Base+0x30ec>  // b.any
    f344:	ldr	w0, [sp, #352]
    f348:	add	w0, w0, #0x1
    f34c:	str	w0, [sp, #352]
    f350:	ldr	w1, [sp, #352]
    f354:	ldr	w0, [sp, #360]
    f358:	cmp	w1, w0
    f35c:	b.lt	f36c <BZ2_decompress@@Base+0x3028>  // b.tstop
    f360:	mov	w0, #0xfffffffc            	// #-4
    f364:	str	w0, [sp, #392]
    f368:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f36c:	mov	w0, #0x32                  	// #50
    f370:	str	w0, [sp, #348]
    f374:	ldr	x1, [sp, #24]
    f378:	ldrsw	x0, [sp, #352]
    f37c:	add	x0, x1, x0
    f380:	add	x0, x0, #0x1, lsl #12
    f384:	ldrb	w0, [x0, #3788]
    f388:	str	w0, [sp, #308]
    f38c:	ldr	x1, [sp, #24]
    f390:	ldrsw	x2, [sp, #308]
    f394:	mov	x0, #0x3e80                	// #16000
    f398:	add	x0, x2, x0
    f39c:	lsl	x0, x0, #2
    f3a0:	add	x0, x1, x0
    f3a4:	ldr	w0, [x0, #12]
    f3a8:	str	w0, [sp, #304]
    f3ac:	ldrsw	x1, [sp, #308]
    f3b0:	mov	x0, x1
    f3b4:	lsl	x0, x0, #7
    f3b8:	add	x0, x0, x1
    f3bc:	lsl	x0, x0, #3
    f3c0:	mov	x1, #0xb170                	// #45424
    f3c4:	add	x0, x0, x1
    f3c8:	ldr	x1, [sp, #24]
    f3cc:	add	x0, x1, x0
    f3d0:	add	x0, x0, #0xc
    f3d4:	str	x0, [sp, #296]
    f3d8:	ldrsw	x1, [sp, #308]
    f3dc:	mov	x0, x1
    f3e0:	lsl	x0, x0, #7
    f3e4:	add	x0, x0, x1
    f3e8:	lsl	x0, x0, #3
    f3ec:	mov	x1, #0xe1d0                	// #57808
    f3f0:	add	x0, x0, x1
    f3f4:	ldr	x1, [sp, #24]
    f3f8:	add	x0, x1, x0
    f3fc:	add	x0, x0, #0xc
    f400:	str	x0, [sp, #280]
    f404:	ldrsw	x1, [sp, #308]
    f408:	mov	x0, x1
    f40c:	lsl	x0, x0, #7
    f410:	add	x0, x0, x1
    f414:	lsl	x0, x0, #3
    f418:	mov	x1, #0xc9a0                	// #51616
    f41c:	add	x0, x0, x1
    f420:	ldr	x1, [sp, #24]
    f424:	add	x0, x1, x0
    f428:	add	x0, x0, #0xc
    f42c:	str	x0, [sp, #288]
    f430:	ldr	w0, [sp, #348]
    f434:	sub	w0, w0, #0x1
    f438:	str	w0, [sp, #348]
    f43c:	ldr	w0, [sp, #304]
    f440:	str	w0, [sp, #320]
    f444:	ldr	x0, [sp, #24]
    f448:	mov	w1, #0x26                  	// #38
    f44c:	str	w1, [x0, #8]
    f450:	ldr	x0, [sp, #24]
    f454:	ldr	w0, [x0, #36]
    f458:	ldr	w1, [sp, #320]
    f45c:	cmp	w1, w0
    f460:	b.gt	f4bc <BZ2_decompress@@Base+0x3178>
    f464:	ldr	x0, [sp, #24]
    f468:	ldr	w1, [x0, #32]
    f46c:	ldr	x0, [sp, #24]
    f470:	ldr	w2, [x0, #36]
    f474:	ldr	w0, [sp, #320]
    f478:	sub	w0, w2, w0
    f47c:	lsr	w0, w1, w0
    f480:	ldr	w1, [sp, #320]
    f484:	mov	w2, #0x1                   	// #1
    f488:	lsl	w1, w2, w1
    f48c:	sub	w1, w1, #0x1
    f490:	and	w0, w0, w1
    f494:	str	w0, [sp, #112]
    f498:	ldr	x0, [sp, #24]
    f49c:	ldr	w1, [x0, #36]
    f4a0:	ldr	w0, [sp, #320]
    f4a4:	sub	w1, w1, w0
    f4a8:	ldr	x0, [sp, #24]
    f4ac:	str	w1, [x0, #36]
    f4b0:	ldr	w0, [sp, #112]
    f4b4:	str	w0, [sp, #316]
    f4b8:	b	f57c <BZ2_decompress@@Base+0x3238>
    f4bc:	ldr	x0, [sp, #24]
    f4c0:	ldr	x0, [x0]
    f4c4:	ldr	w0, [x0, #8]
    f4c8:	cmp	w0, #0x0
    f4cc:	b.ne	f4d8 <BZ2_decompress@@Base+0x3194>  // b.any
    f4d0:	str	wzr, [sp, #392]
    f4d4:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f4d8:	ldr	x0, [sp, #24]
    f4dc:	ldr	w0, [x0, #32]
    f4e0:	lsl	w0, w0, #8
    f4e4:	ldr	x1, [sp, #24]
    f4e8:	ldr	x1, [x1]
    f4ec:	ldr	x1, [x1]
    f4f0:	ldrb	w1, [x1]
    f4f4:	orr	w1, w0, w1
    f4f8:	ldr	x0, [sp, #24]
    f4fc:	str	w1, [x0, #32]
    f500:	ldr	x0, [sp, #24]
    f504:	ldr	w0, [x0, #36]
    f508:	add	w1, w0, #0x8
    f50c:	ldr	x0, [sp, #24]
    f510:	str	w1, [x0, #36]
    f514:	ldr	x0, [sp, #24]
    f518:	ldr	x0, [x0]
    f51c:	ldr	x1, [x0]
    f520:	add	x1, x1, #0x1
    f524:	str	x1, [x0]
    f528:	ldr	x0, [sp, #24]
    f52c:	ldr	x0, [x0]
    f530:	ldr	w1, [x0, #8]
    f534:	sub	w1, w1, #0x1
    f538:	str	w1, [x0, #8]
    f53c:	ldr	x0, [sp, #24]
    f540:	ldr	x0, [x0]
    f544:	ldr	w1, [x0, #12]
    f548:	add	w1, w1, #0x1
    f54c:	str	w1, [x0, #12]
    f550:	ldr	x0, [sp, #24]
    f554:	ldr	x0, [x0]
    f558:	ldr	w0, [x0, #12]
    f55c:	cmp	w0, #0x0
    f560:	b.ne	f450 <BZ2_decompress@@Base+0x310c>  // b.any
    f564:	ldr	x0, [sp, #24]
    f568:	ldr	x0, [x0]
    f56c:	ldr	w1, [x0, #16]
    f570:	add	w1, w1, #0x1
    f574:	str	w1, [x0, #16]
    f578:	b	f450 <BZ2_decompress@@Base+0x310c>
    f57c:	ldr	w0, [sp, #320]
    f580:	cmp	w0, #0x14
    f584:	b.le	f594 <BZ2_decompress@@Base+0x3250>
    f588:	mov	w0, #0xfffffffc            	// #-4
    f58c:	str	w0, [sp, #392]
    f590:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f594:	ldrsw	x0, [sp, #320]
    f598:	lsl	x0, x0, #2
    f59c:	ldr	x1, [sp, #296]
    f5a0:	add	x0, x1, x0
    f5a4:	ldr	w0, [x0]
    f5a8:	ldr	w1, [sp, #316]
    f5ac:	cmp	w1, w0
    f5b0:	b.le	f6f4 <BZ2_decompress@@Base+0x33b0>
    f5b4:	ldr	w0, [sp, #320]
    f5b8:	add	w0, w0, #0x1
    f5bc:	str	w0, [sp, #320]
    f5c0:	ldr	x0, [sp, #24]
    f5c4:	mov	w1, #0x27                  	// #39
    f5c8:	str	w1, [x0, #8]
    f5cc:	ldr	x0, [sp, #24]
    f5d0:	ldr	w0, [x0, #36]
    f5d4:	cmp	w0, #0x0
    f5d8:	b.le	f634 <BZ2_decompress@@Base+0x32f0>
    f5dc:	ldr	x0, [sp, #24]
    f5e0:	ldr	w1, [x0, #32]
    f5e4:	ldr	x0, [sp, #24]
    f5e8:	ldr	w0, [x0, #36]
    f5ec:	sub	w0, w0, #0x1
    f5f0:	lsr	w0, w1, w0
    f5f4:	and	w0, w0, #0x1
    f5f8:	str	w0, [sp, #108]
    f5fc:	ldr	x0, [sp, #24]
    f600:	ldr	w0, [x0, #36]
    f604:	sub	w1, w0, #0x1
    f608:	ldr	x0, [sp, #24]
    f60c:	str	w1, [x0, #36]
    f610:	ldr	w0, [sp, #108]
    f614:	str	w0, [sp, #312]
    f618:	nop
    f61c:	ldr	w0, [sp, #316]
    f620:	lsl	w0, w0, #1
    f624:	ldr	w1, [sp, #312]
    f628:	orr	w0, w1, w0
    f62c:	str	w0, [sp, #316]
    f630:	b	f57c <BZ2_decompress@@Base+0x3238>
    f634:	ldr	x0, [sp, #24]
    f638:	ldr	x0, [x0]
    f63c:	ldr	w0, [x0, #8]
    f640:	cmp	w0, #0x0
    f644:	b.ne	f650 <BZ2_decompress@@Base+0x330c>  // b.any
    f648:	str	wzr, [sp, #392]
    f64c:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f650:	ldr	x0, [sp, #24]
    f654:	ldr	w0, [x0, #32]
    f658:	lsl	w0, w0, #8
    f65c:	ldr	x1, [sp, #24]
    f660:	ldr	x1, [x1]
    f664:	ldr	x1, [x1]
    f668:	ldrb	w1, [x1]
    f66c:	orr	w1, w0, w1
    f670:	ldr	x0, [sp, #24]
    f674:	str	w1, [x0, #32]
    f678:	ldr	x0, [sp, #24]
    f67c:	ldr	w0, [x0, #36]
    f680:	add	w1, w0, #0x8
    f684:	ldr	x0, [sp, #24]
    f688:	str	w1, [x0, #36]
    f68c:	ldr	x0, [sp, #24]
    f690:	ldr	x0, [x0]
    f694:	ldr	x1, [x0]
    f698:	add	x1, x1, #0x1
    f69c:	str	x1, [x0]
    f6a0:	ldr	x0, [sp, #24]
    f6a4:	ldr	x0, [x0]
    f6a8:	ldr	w1, [x0, #8]
    f6ac:	sub	w1, w1, #0x1
    f6b0:	str	w1, [x0, #8]
    f6b4:	ldr	x0, [sp, #24]
    f6b8:	ldr	x0, [x0]
    f6bc:	ldr	w1, [x0, #12]
    f6c0:	add	w1, w1, #0x1
    f6c4:	str	w1, [x0, #12]
    f6c8:	ldr	x0, [sp, #24]
    f6cc:	ldr	x0, [x0]
    f6d0:	ldr	w0, [x0, #12]
    f6d4:	cmp	w0, #0x0
    f6d8:	b.ne	f5cc <BZ2_decompress@@Base+0x3288>  // b.any
    f6dc:	ldr	x0, [sp, #24]
    f6e0:	ldr	x0, [x0]
    f6e4:	ldr	w1, [x0, #16]
    f6e8:	add	w1, w1, #0x1
    f6ec:	str	w1, [x0, #16]
    f6f0:	b	f5cc <BZ2_decompress@@Base+0x3288>
    f6f4:	nop
    f6f8:	ldrsw	x0, [sp, #320]
    f6fc:	lsl	x0, x0, #2
    f700:	ldr	x1, [sp, #288]
    f704:	add	x0, x1, x0
    f708:	ldr	w0, [x0]
    f70c:	ldr	w1, [sp, #316]
    f710:	sub	w0, w1, w0
    f714:	cmp	w0, #0x0
    f718:	b.lt	f740 <BZ2_decompress@@Base+0x33fc>  // b.tstop
    f71c:	ldrsw	x0, [sp, #320]
    f720:	lsl	x0, x0, #2
    f724:	ldr	x1, [sp, #288]
    f728:	add	x0, x1, x0
    f72c:	ldr	w0, [x0]
    f730:	ldr	w1, [sp, #316]
    f734:	sub	w0, w1, w0
    f738:	cmp	w0, #0x101
    f73c:	b.le	f74c <BZ2_decompress@@Base+0x3408>
    f740:	mov	w0, #0xfffffffc            	// #-4
    f744:	str	w0, [sp, #392]
    f748:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f74c:	ldrsw	x0, [sp, #320]
    f750:	lsl	x0, x0, #2
    f754:	ldr	x1, [sp, #288]
    f758:	add	x0, x1, x0
    f75c:	ldr	w0, [x0]
    f760:	ldr	w1, [sp, #316]
    f764:	sub	w0, w1, w0
    f768:	sxtw	x0, w0
    f76c:	lsl	x0, x0, #2
    f770:	ldr	x1, [sp, #280]
    f774:	add	x0, x1, x0
    f778:	ldr	w0, [x0]
    f77c:	str	w0, [sp, #344]
    f780:	ldr	w0, [sp, #344]
    f784:	cmp	w0, #0x0
    f788:	b.eq	f2d0 <BZ2_decompress@@Base+0x2f8c>  // b.none
    f78c:	ldr	w0, [sp, #344]
    f790:	cmp	w0, #0x1
    f794:	b.eq	f2d0 <BZ2_decompress@@Base+0x2f8c>  // b.none
    f798:	ldr	w0, [sp, #332]
    f79c:	add	w0, w0, #0x1
    f7a0:	str	w0, [sp, #332]
    f7a4:	ldr	x0, [sp, #24]
    f7a8:	ldr	w0, [x0, #7820]
    f7ac:	ldr	x1, [sp, #24]
    f7b0:	sxtw	x0, w0
    f7b4:	add	x0, x1, x0
    f7b8:	ldrb	w0, [x0, #3724]
    f7bc:	ldr	x1, [sp, #24]
    f7c0:	sxtw	x0, w0
    f7c4:	add	x0, x1, x0
    f7c8:	ldrb	w0, [x0, #3468]
    f7cc:	strb	w0, [sp, #399]
    f7d0:	ldrb	w0, [sp, #399]
    f7d4:	ldr	x1, [sp, #24]
    f7d8:	sxtw	x0, w0
    f7dc:	add	x0, x0, #0x10
    f7e0:	lsl	x0, x0, #2
    f7e4:	add	x0, x1, x0
    f7e8:	ldr	w1, [x0, #4]
    f7ec:	ldrb	w3, [sp, #399]
    f7f0:	ldr	w0, [sp, #332]
    f7f4:	add	w1, w1, w0
    f7f8:	ldr	x2, [sp, #24]
    f7fc:	sxtw	x0, w3
    f800:	add	x0, x0, #0x10
    f804:	lsl	x0, x0, #2
    f808:	add	x0, x2, x0
    f80c:	str	w1, [x0, #4]
    f810:	ldr	x0, [sp, #24]
    f814:	ldrb	w0, [x0, #44]
    f818:	cmp	w0, #0x0
    f81c:	b.eq	f8d8 <BZ2_decompress@@Base+0x3594>  // b.none
    f820:	b	f878 <BZ2_decompress@@Base+0x3534>
    f824:	ldr	w1, [sp, #336]
    f828:	ldr	w0, [sp, #340]
    f82c:	cmp	w1, w0
    f830:	b.lt	f840 <BZ2_decompress@@Base+0x34fc>  // b.tstop
    f834:	mov	w0, #0xfffffffc            	// #-4
    f838:	str	w0, [sp, #392]
    f83c:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f840:	ldr	x0, [sp, #24]
    f844:	ldr	x1, [x0, #3160]
    f848:	ldrsw	x0, [sp, #336]
    f84c:	lsl	x0, x0, #1
    f850:	add	x0, x1, x0
    f854:	ldrb	w1, [sp, #399]
    f858:	and	w1, w1, #0xffff
    f85c:	strh	w1, [x0]
    f860:	ldr	w0, [sp, #336]
    f864:	add	w0, w0, #0x1
    f868:	str	w0, [sp, #336]
    f86c:	ldr	w0, [sp, #332]
    f870:	sub	w0, w0, #0x1
    f874:	str	w0, [sp, #332]
    f878:	ldr	w0, [sp, #332]
    f87c:	cmp	w0, #0x0
    f880:	b.gt	f824 <BZ2_decompress@@Base+0x34e0>
    f884:	b	1025c <BZ2_decompress@@Base+0x3f18>
    f888:	ldr	w1, [sp, #336]
    f88c:	ldr	w0, [sp, #340]
    f890:	cmp	w1, w0
    f894:	b.lt	f8a4 <BZ2_decompress@@Base+0x3560>  // b.tstop
    f898:	mov	w0, #0xfffffffc            	// #-4
    f89c:	str	w0, [sp, #392]
    f8a0:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f8a4:	ldr	x0, [sp, #24]
    f8a8:	ldr	x1, [x0, #3152]
    f8ac:	ldrsw	x0, [sp, #336]
    f8b0:	lsl	x0, x0, #2
    f8b4:	add	x0, x1, x0
    f8b8:	ldrb	w1, [sp, #399]
    f8bc:	str	w1, [x0]
    f8c0:	ldr	w0, [sp, #336]
    f8c4:	add	w0, w0, #0x1
    f8c8:	str	w0, [sp, #336]
    f8cc:	ldr	w0, [sp, #332]
    f8d0:	sub	w0, w0, #0x1
    f8d4:	str	w0, [sp, #332]
    f8d8:	ldr	w0, [sp, #332]
    f8dc:	cmp	w0, #0x0
    f8e0:	b.gt	f888 <BZ2_decompress@@Base+0x3544>
    f8e4:	b	1025c <BZ2_decompress@@Base+0x3f18>
    f8e8:	ldr	w1, [sp, #336]
    f8ec:	ldr	w0, [sp, #340]
    f8f0:	cmp	w1, w0
    f8f4:	b.lt	f904 <BZ2_decompress@@Base+0x35c0>  // b.tstop
    f8f8:	mov	w0, #0xfffffffc            	// #-4
    f8fc:	str	w0, [sp, #392]
    f900:	b	119ec <BZ2_decompress@@Base+0x56a8>
    f904:	ldr	w0, [sp, #344]
    f908:	sub	w0, w0, #0x1
    f90c:	str	w0, [sp, #240]
    f910:	ldr	w0, [sp, #240]
    f914:	cmp	w0, #0xf
    f918:	b.hi	fab0 <BZ2_decompress@@Base+0x376c>  // b.pmore
    f91c:	ldr	x0, [sp, #24]
    f920:	ldr	w0, [x0, #7820]
    f924:	str	w0, [sp, #248]
    f928:	ldr	w1, [sp, #248]
    f92c:	ldr	w0, [sp, #240]
    f930:	add	w0, w1, w0
    f934:	ldr	x1, [sp, #24]
    f938:	mov	w0, w0
    f93c:	add	x0, x1, x0
    f940:	ldrb	w0, [x0, #3724]
    f944:	strb	w0, [sp, #399]
    f948:	b	fa30 <BZ2_decompress@@Base+0x36ec>
    f94c:	ldr	w1, [sp, #248]
    f950:	ldr	w0, [sp, #240]
    f954:	add	w0, w1, w0
    f958:	str	w0, [sp, #128]
    f95c:	ldr	w0, [sp, #128]
    f960:	sub	w0, w0, #0x1
    f964:	ldr	x1, [sp, #24]
    f968:	sxtw	x0, w0
    f96c:	add	x0, x1, x0
    f970:	ldrb	w2, [x0, #3724]
    f974:	ldr	x1, [sp, #24]
    f978:	ldrsw	x0, [sp, #128]
    f97c:	add	x0, x1, x0
    f980:	mov	w1, w2
    f984:	strb	w1, [x0, #3724]
    f988:	ldr	w0, [sp, #128]
    f98c:	sub	w2, w0, #0x2
    f990:	ldr	w0, [sp, #128]
    f994:	sub	w3, w0, #0x1
    f998:	ldr	x1, [sp, #24]
    f99c:	sxtw	x0, w2
    f9a0:	add	x0, x1, x0
    f9a4:	ldrb	w2, [x0, #3724]
    f9a8:	ldr	x1, [sp, #24]
    f9ac:	sxtw	x0, w3
    f9b0:	add	x0, x1, x0
    f9b4:	mov	w1, w2
    f9b8:	strb	w1, [x0, #3724]
    f9bc:	ldr	w0, [sp, #128]
    f9c0:	sub	w2, w0, #0x3
    f9c4:	ldr	w0, [sp, #128]
    f9c8:	sub	w3, w0, #0x2
    f9cc:	ldr	x1, [sp, #24]
    f9d0:	sxtw	x0, w2
    f9d4:	add	x0, x1, x0
    f9d8:	ldrb	w2, [x0, #3724]
    f9dc:	ldr	x1, [sp, #24]
    f9e0:	sxtw	x0, w3
    f9e4:	add	x0, x1, x0
    f9e8:	mov	w1, w2
    f9ec:	strb	w1, [x0, #3724]
    f9f0:	ldr	w0, [sp, #128]
    f9f4:	sub	w2, w0, #0x4
    f9f8:	ldr	w0, [sp, #128]
    f9fc:	sub	w3, w0, #0x3
    fa00:	ldr	x1, [sp, #24]
    fa04:	sxtw	x0, w2
    fa08:	add	x0, x1, x0
    fa0c:	ldrb	w2, [x0, #3724]
    fa10:	ldr	x1, [sp, #24]
    fa14:	sxtw	x0, w3
    fa18:	add	x0, x1, x0
    fa1c:	mov	w1, w2
    fa20:	strb	w1, [x0, #3724]
    fa24:	ldr	w0, [sp, #240]
    fa28:	sub	w0, w0, #0x4
    fa2c:	str	w0, [sp, #240]
    fa30:	ldr	w0, [sp, #240]
    fa34:	cmp	w0, #0x3
    fa38:	b.hi	f94c <BZ2_decompress@@Base+0x3608>  // b.pmore
    fa3c:	b	fa8c <BZ2_decompress@@Base+0x3748>
    fa40:	ldr	w1, [sp, #248]
    fa44:	ldr	w0, [sp, #240]
    fa48:	add	w0, w1, w0
    fa4c:	sub	w2, w0, #0x1
    fa50:	ldr	w1, [sp, #248]
    fa54:	ldr	w0, [sp, #240]
    fa58:	add	w3, w1, w0
    fa5c:	ldr	x1, [sp, #24]
    fa60:	mov	w0, w2
    fa64:	add	x0, x1, x0
    fa68:	ldrb	w2, [x0, #3724]
    fa6c:	ldr	x1, [sp, #24]
    fa70:	mov	w0, w3
    fa74:	add	x0, x1, x0
    fa78:	mov	w1, w2
    fa7c:	strb	w1, [x0, #3724]
    fa80:	ldr	w0, [sp, #240]
    fa84:	sub	w0, w0, #0x1
    fa88:	str	w0, [sp, #240]
    fa8c:	ldr	w0, [sp, #240]
    fa90:	cmp	w0, #0x0
    fa94:	b.ne	fa40 <BZ2_decompress@@Base+0x36fc>  // b.any
    fa98:	ldr	x1, [sp, #24]
    fa9c:	ldrsw	x0, [sp, #248]
    faa0:	add	x0, x1, x0
    faa4:	ldrb	w1, [sp, #399]
    faa8:	strb	w1, [x0, #3724]
    faac:	b	fd44 <BZ2_decompress@@Base+0x3a00>
    fab0:	ldr	w0, [sp, #240]
    fab4:	lsr	w0, w0, #4
    fab8:	str	w0, [sp, #244]
    fabc:	ldr	w0, [sp, #240]
    fac0:	and	w0, w0, #0xf
    fac4:	str	w0, [sp, #132]
    fac8:	ldr	x1, [sp, #24]
    facc:	ldrsw	x0, [sp, #244]
    fad0:	add	x0, x0, #0x7a0
    fad4:	lsl	x0, x0, #2
    fad8:	add	x0, x1, x0
    fadc:	ldr	w0, [x0, #12]
    fae0:	ldr	w1, [sp, #132]
    fae4:	add	w0, w1, w0
    fae8:	str	w0, [sp, #248]
    faec:	ldr	x1, [sp, #24]
    faf0:	ldrsw	x0, [sp, #248]
    faf4:	add	x0, x1, x0
    faf8:	ldrb	w0, [x0, #3724]
    fafc:	strb	w0, [sp, #399]
    fb00:	b	fb3c <BZ2_decompress@@Base+0x37f8>
    fb04:	ldr	w0, [sp, #248]
    fb08:	sub	w0, w0, #0x1
    fb0c:	ldr	x1, [sp, #24]
    fb10:	sxtw	x0, w0
    fb14:	add	x0, x1, x0
    fb18:	ldrb	w2, [x0, #3724]
    fb1c:	ldr	x1, [sp, #24]
    fb20:	ldrsw	x0, [sp, #248]
    fb24:	add	x0, x1, x0
    fb28:	mov	w1, w2
    fb2c:	strb	w1, [x0, #3724]
    fb30:	ldr	w0, [sp, #248]
    fb34:	sub	w0, w0, #0x1
    fb38:	str	w0, [sp, #248]
    fb3c:	ldr	x1, [sp, #24]
    fb40:	ldrsw	x0, [sp, #244]
    fb44:	add	x0, x0, #0x7a0
    fb48:	lsl	x0, x0, #2
    fb4c:	add	x0, x1, x0
    fb50:	ldr	w0, [x0, #12]
    fb54:	ldr	w1, [sp, #248]
    fb58:	cmp	w1, w0
    fb5c:	b.gt	fb04 <BZ2_decompress@@Base+0x37c0>
    fb60:	ldr	x1, [sp, #24]
    fb64:	ldrsw	x0, [sp, #244]
    fb68:	add	x0, x0, #0x7a0
    fb6c:	lsl	x0, x0, #2
    fb70:	add	x0, x1, x0
    fb74:	ldr	w0, [x0, #12]
    fb78:	add	w1, w0, #0x1
    fb7c:	ldr	x2, [sp, #24]
    fb80:	ldrsw	x0, [sp, #244]
    fb84:	add	x0, x0, #0x7a0
    fb88:	lsl	x0, x0, #2
    fb8c:	add	x0, x2, x0
    fb90:	str	w1, [x0, #12]
    fb94:	b	fc38 <BZ2_decompress@@Base+0x38f4>
    fb98:	ldr	x1, [sp, #24]
    fb9c:	ldrsw	x0, [sp, #244]
    fba0:	add	x0, x0, #0x7a0
    fba4:	lsl	x0, x0, #2
    fba8:	add	x0, x1, x0
    fbac:	ldr	w0, [x0, #12]
    fbb0:	sub	w1, w0, #0x1
    fbb4:	ldr	x2, [sp, #24]
    fbb8:	ldrsw	x0, [sp, #244]
    fbbc:	add	x0, x0, #0x7a0
    fbc0:	lsl	x0, x0, #2
    fbc4:	add	x0, x2, x0
    fbc8:	str	w1, [x0, #12]
    fbcc:	ldr	w0, [sp, #244]
    fbd0:	sub	w0, w0, #0x1
    fbd4:	ldr	x1, [sp, #24]
    fbd8:	sxtw	x0, w0
    fbdc:	add	x0, x0, #0x7a0
    fbe0:	lsl	x0, x0, #2
    fbe4:	add	x0, x1, x0
    fbe8:	ldr	w0, [x0, #12]
    fbec:	add	w2, w0, #0xf
    fbf0:	ldr	x1, [sp, #24]
    fbf4:	ldrsw	x0, [sp, #244]
    fbf8:	add	x0, x0, #0x7a0
    fbfc:	lsl	x0, x0, #2
    fc00:	add	x0, x1, x0
    fc04:	ldr	w3, [x0, #12]
    fc08:	ldr	x1, [sp, #24]
    fc0c:	sxtw	x0, w2
    fc10:	add	x0, x1, x0
    fc14:	ldrb	w2, [x0, #3724]
    fc18:	ldr	x1, [sp, #24]
    fc1c:	sxtw	x0, w3
    fc20:	add	x0, x1, x0
    fc24:	mov	w1, w2
    fc28:	strb	w1, [x0, #3724]
    fc2c:	ldr	w0, [sp, #244]
    fc30:	sub	w0, w0, #0x1
    fc34:	str	w0, [sp, #244]
    fc38:	ldr	w0, [sp, #244]
    fc3c:	cmp	w0, #0x0
    fc40:	b.gt	fb98 <BZ2_decompress@@Base+0x3854>
    fc44:	ldr	x0, [sp, #24]
    fc48:	ldr	w0, [x0, #7820]
    fc4c:	sub	w1, w0, #0x1
    fc50:	ldr	x0, [sp, #24]
    fc54:	str	w1, [x0, #7820]
    fc58:	ldr	x0, [sp, #24]
    fc5c:	ldr	w0, [x0, #7820]
    fc60:	ldr	x1, [sp, #24]
    fc64:	sxtw	x0, w0
    fc68:	add	x0, x1, x0
    fc6c:	ldrb	w1, [sp, #399]
    fc70:	strb	w1, [x0, #3724]
    fc74:	ldr	x0, [sp, #24]
    fc78:	ldr	w0, [x0, #7820]
    fc7c:	cmp	w0, #0x0
    fc80:	b.ne	fd44 <BZ2_decompress@@Base+0x3a00>  // b.any
    fc84:	mov	w0, #0xfff                 	// #4095
    fc88:	str	w0, [sp, #252]
    fc8c:	mov	w0, #0xf                   	// #15
    fc90:	str	w0, [sp, #260]
    fc94:	b	fd38 <BZ2_decompress@@Base+0x39f4>
    fc98:	mov	w0, #0xf                   	// #15
    fc9c:	str	w0, [sp, #256]
    fca0:	b	fd00 <BZ2_decompress@@Base+0x39bc>
    fca4:	ldr	x1, [sp, #24]
    fca8:	ldrsw	x0, [sp, #260]
    fcac:	add	x0, x0, #0x7a0
    fcb0:	lsl	x0, x0, #2
    fcb4:	add	x0, x1, x0
    fcb8:	ldr	w1, [x0, #12]
    fcbc:	ldr	w0, [sp, #256]
    fcc0:	add	w0, w1, w0
    fcc4:	ldr	x1, [sp, #24]
    fcc8:	sxtw	x0, w0
    fccc:	add	x0, x1, x0
    fcd0:	ldrb	w2, [x0, #3724]
    fcd4:	ldr	x1, [sp, #24]
    fcd8:	ldrsw	x0, [sp, #252]
    fcdc:	add	x0, x1, x0
    fce0:	mov	w1, w2
    fce4:	strb	w1, [x0, #3724]
    fce8:	ldr	w0, [sp, #252]
    fcec:	sub	w0, w0, #0x1
    fcf0:	str	w0, [sp, #252]
    fcf4:	ldr	w0, [sp, #256]
    fcf8:	sub	w0, w0, #0x1
    fcfc:	str	w0, [sp, #256]
    fd00:	ldr	w0, [sp, #256]
    fd04:	cmp	w0, #0x0
    fd08:	b.ge	fca4 <BZ2_decompress@@Base+0x3960>  // b.tcont
    fd0c:	ldr	w0, [sp, #252]
    fd10:	add	w1, w0, #0x1
    fd14:	ldr	x2, [sp, #24]
    fd18:	ldrsw	x0, [sp, #260]
    fd1c:	add	x0, x0, #0x7a0
    fd20:	lsl	x0, x0, #2
    fd24:	add	x0, x2, x0
    fd28:	str	w1, [x0, #12]
    fd2c:	ldr	w0, [sp, #260]
    fd30:	sub	w0, w0, #0x1
    fd34:	str	w0, [sp, #260]
    fd38:	ldr	w0, [sp, #260]
    fd3c:	cmp	w0, #0x0
    fd40:	b.ge	fc98 <BZ2_decompress@@Base+0x3954>  // b.tcont
    fd44:	ldrb	w0, [sp, #399]
    fd48:	ldr	x1, [sp, #24]
    fd4c:	sxtw	x0, w0
    fd50:	add	x0, x1, x0
    fd54:	ldrb	w0, [x0, #3468]
    fd58:	mov	w3, w0
    fd5c:	ldr	x1, [sp, #24]
    fd60:	sxtw	x0, w3
    fd64:	add	x0, x0, #0x10
    fd68:	lsl	x0, x0, #2
    fd6c:	add	x0, x1, x0
    fd70:	ldr	w0, [x0, #4]
    fd74:	add	w1, w0, #0x1
    fd78:	ldr	x2, [sp, #24]
    fd7c:	sxtw	x0, w3
    fd80:	add	x0, x0, #0x10
    fd84:	lsl	x0, x0, #2
    fd88:	add	x0, x2, x0
    fd8c:	str	w1, [x0, #4]
    fd90:	ldr	x0, [sp, #24]
    fd94:	ldrb	w0, [x0, #44]
    fd98:	cmp	w0, #0x0
    fd9c:	b.eq	fdd4 <BZ2_decompress@@Base+0x3a90>  // b.none
    fda0:	ldrb	w0, [sp, #399]
    fda4:	ldr	x1, [sp, #24]
    fda8:	sxtw	x0, w0
    fdac:	add	x0, x1, x0
    fdb0:	ldrb	w2, [x0, #3468]
    fdb4:	ldr	x0, [sp, #24]
    fdb8:	ldr	x1, [x0, #3160]
    fdbc:	ldrsw	x0, [sp, #336]
    fdc0:	lsl	x0, x0, #1
    fdc4:	add	x0, x1, x0
    fdc8:	and	w1, w2, #0xffff
    fdcc:	strh	w1, [x0]
    fdd0:	b	fe04 <BZ2_decompress@@Base+0x3ac0>
    fdd4:	ldrb	w0, [sp, #399]
    fdd8:	ldr	x1, [sp, #24]
    fddc:	sxtw	x0, w0
    fde0:	add	x0, x1, x0
    fde4:	ldrb	w2, [x0, #3468]
    fde8:	ldr	x0, [sp, #24]
    fdec:	ldr	x1, [x0, #3152]
    fdf0:	ldrsw	x0, [sp, #336]
    fdf4:	lsl	x0, x0, #2
    fdf8:	add	x0, x1, x0
    fdfc:	mov	w1, w2
    fe00:	str	w1, [x0]
    fe04:	ldr	w0, [sp, #336]
    fe08:	add	w0, w0, #0x1
    fe0c:	str	w0, [sp, #336]
    fe10:	ldr	w0, [sp, #348]
    fe14:	cmp	w0, #0x0
    fe18:	b.ne	ff08 <BZ2_decompress@@Base+0x3bc4>  // b.any
    fe1c:	ldr	w0, [sp, #352]
    fe20:	add	w0, w0, #0x1
    fe24:	str	w0, [sp, #352]
    fe28:	ldr	w1, [sp, #352]
    fe2c:	ldr	w0, [sp, #360]
    fe30:	cmp	w1, w0
    fe34:	b.lt	fe44 <BZ2_decompress@@Base+0x3b00>  // b.tstop
    fe38:	mov	w0, #0xfffffffc            	// #-4
    fe3c:	str	w0, [sp, #392]
    fe40:	b	119ec <BZ2_decompress@@Base+0x56a8>
    fe44:	mov	w0, #0x32                  	// #50
    fe48:	str	w0, [sp, #348]
    fe4c:	ldr	x1, [sp, #24]
    fe50:	ldrsw	x0, [sp, #352]
    fe54:	add	x0, x1, x0
    fe58:	add	x0, x0, #0x1, lsl #12
    fe5c:	ldrb	w0, [x0, #3788]
    fe60:	str	w0, [sp, #308]
    fe64:	ldr	x1, [sp, #24]
    fe68:	ldrsw	x2, [sp, #308]
    fe6c:	mov	x0, #0x3e80                	// #16000
    fe70:	add	x0, x2, x0
    fe74:	lsl	x0, x0, #2
    fe78:	add	x0, x1, x0
    fe7c:	ldr	w0, [x0, #12]
    fe80:	str	w0, [sp, #304]
    fe84:	ldrsw	x1, [sp, #308]
    fe88:	mov	x0, x1
    fe8c:	lsl	x0, x0, #7
    fe90:	add	x0, x0, x1
    fe94:	lsl	x0, x0, #3
    fe98:	mov	x1, #0xb170                	// #45424
    fe9c:	add	x0, x0, x1
    fea0:	ldr	x1, [sp, #24]
    fea4:	add	x0, x1, x0
    fea8:	add	x0, x0, #0xc
    feac:	str	x0, [sp, #296]
    feb0:	ldrsw	x1, [sp, #308]
    feb4:	mov	x0, x1
    feb8:	lsl	x0, x0, #7
    febc:	add	x0, x0, x1
    fec0:	lsl	x0, x0, #3
    fec4:	mov	x1, #0xe1d0                	// #57808
    fec8:	add	x0, x0, x1
    fecc:	ldr	x1, [sp, #24]
    fed0:	add	x0, x1, x0
    fed4:	add	x0, x0, #0xc
    fed8:	str	x0, [sp, #280]
    fedc:	ldrsw	x1, [sp, #308]
    fee0:	mov	x0, x1
    fee4:	lsl	x0, x0, #7
    fee8:	add	x0, x0, x1
    feec:	lsl	x0, x0, #3
    fef0:	mov	x1, #0xc9a0                	// #51616
    fef4:	add	x0, x0, x1
    fef8:	ldr	x1, [sp, #24]
    fefc:	add	x0, x1, x0
    ff00:	add	x0, x0, #0xc
    ff04:	str	x0, [sp, #288]
    ff08:	ldr	w0, [sp, #348]
    ff0c:	sub	w0, w0, #0x1
    ff10:	str	w0, [sp, #348]
    ff14:	ldr	w0, [sp, #304]
    ff18:	str	w0, [sp, #320]
    ff1c:	ldr	x0, [sp, #24]
    ff20:	mov	w1, #0x28                  	// #40
    ff24:	str	w1, [x0, #8]
    ff28:	ldr	x0, [sp, #24]
    ff2c:	ldr	w0, [x0, #36]
    ff30:	ldr	w1, [sp, #320]
    ff34:	cmp	w1, w0
    ff38:	b.gt	ff94 <BZ2_decompress@@Base+0x3c50>
    ff3c:	ldr	x0, [sp, #24]
    ff40:	ldr	w1, [x0, #32]
    ff44:	ldr	x0, [sp, #24]
    ff48:	ldr	w2, [x0, #36]
    ff4c:	ldr	w0, [sp, #320]
    ff50:	sub	w0, w2, w0
    ff54:	lsr	w0, w1, w0
    ff58:	ldr	w1, [sp, #320]
    ff5c:	mov	w2, #0x1                   	// #1
    ff60:	lsl	w1, w2, w1
    ff64:	sub	w1, w1, #0x1
    ff68:	and	w0, w0, w1
    ff6c:	str	w0, [sp, #120]
    ff70:	ldr	x0, [sp, #24]
    ff74:	ldr	w1, [x0, #36]
    ff78:	ldr	w0, [sp, #320]
    ff7c:	sub	w1, w1, w0
    ff80:	ldr	x0, [sp, #24]
    ff84:	str	w1, [x0, #36]
    ff88:	ldr	w0, [sp, #120]
    ff8c:	str	w0, [sp, #316]
    ff90:	b	10054 <BZ2_decompress@@Base+0x3d10>
    ff94:	ldr	x0, [sp, #24]
    ff98:	ldr	x0, [x0]
    ff9c:	ldr	w0, [x0, #8]
    ffa0:	cmp	w0, #0x0
    ffa4:	b.ne	ffb0 <BZ2_decompress@@Base+0x3c6c>  // b.any
    ffa8:	str	wzr, [sp, #392]
    ffac:	b	119ec <BZ2_decompress@@Base+0x56a8>
    ffb0:	ldr	x0, [sp, #24]
    ffb4:	ldr	w0, [x0, #32]
    ffb8:	lsl	w0, w0, #8
    ffbc:	ldr	x1, [sp, #24]
    ffc0:	ldr	x1, [x1]
    ffc4:	ldr	x1, [x1]
    ffc8:	ldrb	w1, [x1]
    ffcc:	orr	w1, w0, w1
    ffd0:	ldr	x0, [sp, #24]
    ffd4:	str	w1, [x0, #32]
    ffd8:	ldr	x0, [sp, #24]
    ffdc:	ldr	w0, [x0, #36]
    ffe0:	add	w1, w0, #0x8
    ffe4:	ldr	x0, [sp, #24]
    ffe8:	str	w1, [x0, #36]
    ffec:	ldr	x0, [sp, #24]
    fff0:	ldr	x0, [x0]
    fff4:	ldr	x1, [x0]
    fff8:	add	x1, x1, #0x1
    fffc:	str	x1, [x0]
   10000:	ldr	x0, [sp, #24]
   10004:	ldr	x0, [x0]
   10008:	ldr	w1, [x0, #8]
   1000c:	sub	w1, w1, #0x1
   10010:	str	w1, [x0, #8]
   10014:	ldr	x0, [sp, #24]
   10018:	ldr	x0, [x0]
   1001c:	ldr	w1, [x0, #12]
   10020:	add	w1, w1, #0x1
   10024:	str	w1, [x0, #12]
   10028:	ldr	x0, [sp, #24]
   1002c:	ldr	x0, [x0]
   10030:	ldr	w0, [x0, #12]
   10034:	cmp	w0, #0x0
   10038:	b.ne	ff28 <BZ2_decompress@@Base+0x3be4>  // b.any
   1003c:	ldr	x0, [sp, #24]
   10040:	ldr	x0, [x0]
   10044:	ldr	w1, [x0, #16]
   10048:	add	w1, w1, #0x1
   1004c:	str	w1, [x0, #16]
   10050:	b	ff28 <BZ2_decompress@@Base+0x3be4>
   10054:	ldr	w0, [sp, #320]
   10058:	cmp	w0, #0x14
   1005c:	b.le	1006c <BZ2_decompress@@Base+0x3d28>
   10060:	mov	w0, #0xfffffffc            	// #-4
   10064:	str	w0, [sp, #392]
   10068:	b	119ec <BZ2_decompress@@Base+0x56a8>
   1006c:	ldrsw	x0, [sp, #320]
   10070:	lsl	x0, x0, #2
   10074:	ldr	x1, [sp, #296]
   10078:	add	x0, x1, x0
   1007c:	ldr	w0, [x0]
   10080:	ldr	w1, [sp, #316]
   10084:	cmp	w1, w0
   10088:	b.le	101cc <BZ2_decompress@@Base+0x3e88>
   1008c:	ldr	w0, [sp, #320]
   10090:	add	w0, w0, #0x1
   10094:	str	w0, [sp, #320]
   10098:	ldr	x0, [sp, #24]
   1009c:	mov	w1, #0x29                  	// #41
   100a0:	str	w1, [x0, #8]
   100a4:	ldr	x0, [sp, #24]
   100a8:	ldr	w0, [x0, #36]
   100ac:	cmp	w0, #0x0
   100b0:	b.le	1010c <BZ2_decompress@@Base+0x3dc8>
   100b4:	ldr	x0, [sp, #24]
   100b8:	ldr	w1, [x0, #32]
   100bc:	ldr	x0, [sp, #24]
   100c0:	ldr	w0, [x0, #36]
   100c4:	sub	w0, w0, #0x1
   100c8:	lsr	w0, w1, w0
   100cc:	and	w0, w0, #0x1
   100d0:	str	w0, [sp, #116]
   100d4:	ldr	x0, [sp, #24]
   100d8:	ldr	w0, [x0, #36]
   100dc:	sub	w1, w0, #0x1
   100e0:	ldr	x0, [sp, #24]
   100e4:	str	w1, [x0, #36]
   100e8:	ldr	w0, [sp, #116]
   100ec:	str	w0, [sp, #312]
   100f0:	nop
   100f4:	ldr	w0, [sp, #316]
   100f8:	lsl	w0, w0, #1
   100fc:	ldr	w1, [sp, #312]
   10100:	orr	w0, w1, w0
   10104:	str	w0, [sp, #316]
   10108:	b	10054 <BZ2_decompress@@Base+0x3d10>
   1010c:	ldr	x0, [sp, #24]
   10110:	ldr	x0, [x0]
   10114:	ldr	w0, [x0, #8]
   10118:	cmp	w0, #0x0
   1011c:	b.ne	10128 <BZ2_decompress@@Base+0x3de4>  // b.any
   10120:	str	wzr, [sp, #392]
   10124:	b	119ec <BZ2_decompress@@Base+0x56a8>
   10128:	ldr	x0, [sp, #24]
   1012c:	ldr	w0, [x0, #32]
   10130:	lsl	w0, w0, #8
   10134:	ldr	x1, [sp, #24]
   10138:	ldr	x1, [x1]
   1013c:	ldr	x1, [x1]
   10140:	ldrb	w1, [x1]
   10144:	orr	w1, w0, w1
   10148:	ldr	x0, [sp, #24]
   1014c:	str	w1, [x0, #32]
   10150:	ldr	x0, [sp, #24]
   10154:	ldr	w0, [x0, #36]
   10158:	add	w1, w0, #0x8
   1015c:	ldr	x0, [sp, #24]
   10160:	str	w1, [x0, #36]
   10164:	ldr	x0, [sp, #24]
   10168:	ldr	x0, [x0]
   1016c:	ldr	x1, [x0]
   10170:	add	x1, x1, #0x1
   10174:	str	x1, [x0]
   10178:	ldr	x0, [sp, #24]
   1017c:	ldr	x0, [x0]
   10180:	ldr	w1, [x0, #8]
   10184:	sub	w1, w1, #0x1
   10188:	str	w1, [x0, #8]
   1018c:	ldr	x0, [sp, #24]
   10190:	ldr	x0, [x0]
   10194:	ldr	w1, [x0, #12]
   10198:	add	w1, w1, #0x1
   1019c:	str	w1, [x0, #12]
   101a0:	ldr	x0, [sp, #24]
   101a4:	ldr	x0, [x0]
   101a8:	ldr	w0, [x0, #12]
   101ac:	cmp	w0, #0x0
   101b0:	b.ne	100a4 <BZ2_decompress@@Base+0x3d60>  // b.any
   101b4:	ldr	x0, [sp, #24]
   101b8:	ldr	x0, [x0]
   101bc:	ldr	w1, [x0, #16]
   101c0:	add	w1, w1, #0x1
   101c4:	str	w1, [x0, #16]
   101c8:	b	100a4 <BZ2_decompress@@Base+0x3d60>
   101cc:	nop
   101d0:	ldrsw	x0, [sp, #320]
   101d4:	lsl	x0, x0, #2
   101d8:	ldr	x1, [sp, #288]
   101dc:	add	x0, x1, x0
   101e0:	ldr	w0, [x0]
   101e4:	ldr	w1, [sp, #316]
   101e8:	sub	w0, w1, w0
   101ec:	cmp	w0, #0x0
   101f0:	b.lt	10218 <BZ2_decompress@@Base+0x3ed4>  // b.tstop
   101f4:	ldrsw	x0, [sp, #320]
   101f8:	lsl	x0, x0, #2
   101fc:	ldr	x1, [sp, #288]
   10200:	add	x0, x1, x0
   10204:	ldr	w0, [x0]
   10208:	ldr	w1, [sp, #316]
   1020c:	sub	w0, w1, w0
   10210:	cmp	w0, #0x101
   10214:	b.le	10224 <BZ2_decompress@@Base+0x3ee0>
   10218:	mov	w0, #0xfffffffc            	// #-4
   1021c:	str	w0, [sp, #392]
   10220:	b	119ec <BZ2_decompress@@Base+0x56a8>
   10224:	ldrsw	x0, [sp, #320]
   10228:	lsl	x0, x0, #2
   1022c:	ldr	x1, [sp, #288]
   10230:	add	x0, x1, x0
   10234:	ldr	w0, [x0]
   10238:	ldr	w1, [sp, #316]
   1023c:	sub	w0, w1, w0
   10240:	sxtw	x0, w0
   10244:	lsl	x0, x0, #2
   10248:	ldr	x1, [sp, #280]
   1024c:	add	x0, x1, x0
   10250:	ldr	w0, [x0]
   10254:	str	w0, [sp, #344]
   10258:	nop
   1025c:	b	f298 <BZ2_decompress@@Base+0x2f54>
   10260:	nop
   10264:	ldr	x0, [sp, #24]
   10268:	ldr	w0, [x0, #56]
   1026c:	cmp	w0, #0x0
   10270:	b.lt	10288 <BZ2_decompress@@Base+0x3f44>  // b.tstop
   10274:	ldr	x0, [sp, #24]
   10278:	ldr	w0, [x0, #56]
   1027c:	ldr	w1, [sp, #336]
   10280:	cmp	w1, w0
   10284:	b.gt	10294 <BZ2_decompress@@Base+0x3f50>
   10288:	mov	w0, #0xfffffffc            	// #-4
   1028c:	str	w0, [sp, #392]
   10290:	b	119ec <BZ2_decompress@@Base+0x56a8>
   10294:	str	wzr, [sp, #380]
   10298:	b	102f8 <BZ2_decompress@@Base+0x3fb4>
   1029c:	ldr	x1, [sp, #24]
   102a0:	ldrsw	x0, [sp, #380]
   102a4:	add	x0, x0, #0x10
   102a8:	lsl	x0, x0, #2
   102ac:	add	x0, x1, x0
   102b0:	ldr	w0, [x0, #4]
   102b4:	cmp	w0, #0x0
   102b8:	b.lt	102e0 <BZ2_decompress@@Base+0x3f9c>  // b.tstop
   102bc:	ldr	x1, [sp, #24]
   102c0:	ldrsw	x0, [sp, #380]
   102c4:	add	x0, x0, #0x10
   102c8:	lsl	x0, x0, #2
   102cc:	add	x0, x1, x0
   102d0:	ldr	w0, [x0, #4]
   102d4:	ldr	w1, [sp, #336]
   102d8:	cmp	w1, w0
   102dc:	b.ge	102ec <BZ2_decompress@@Base+0x3fa8>  // b.tcont
   102e0:	mov	w0, #0xfffffffc            	// #-4
   102e4:	str	w0, [sp, #392]
   102e8:	b	119ec <BZ2_decompress@@Base+0x56a8>
   102ec:	ldr	w0, [sp, #380]
   102f0:	add	w0, w0, #0x1
   102f4:	str	w0, [sp, #380]
   102f8:	ldr	w0, [sp, #380]
   102fc:	cmp	w0, #0xff
   10300:	b.le	1029c <BZ2_decompress@@Base+0x3f58>
   10304:	ldr	x0, [sp, #24]
   10308:	str	wzr, [x0, #1096]
   1030c:	mov	w0, #0x1                   	// #1
   10310:	str	w0, [sp, #380]
   10314:	b	1035c <BZ2_decompress@@Base+0x4018>
   10318:	ldr	w0, [sp, #380]
   1031c:	sub	w0, w0, #0x1
   10320:	ldr	x1, [sp, #24]
   10324:	sxtw	x0, w0
   10328:	add	x0, x0, #0x10
   1032c:	lsl	x0, x0, #2
   10330:	add	x0, x1, x0
   10334:	ldr	w1, [x0, #4]
   10338:	ldr	x2, [sp, #24]
   1033c:	ldrsw	x0, [sp, #380]
   10340:	add	x0, x0, #0x110
   10344:	lsl	x0, x0, #2
   10348:	add	x0, x2, x0
   1034c:	str	w1, [x0, #8]
   10350:	ldr	w0, [sp, #380]
   10354:	add	w0, w0, #0x1
   10358:	str	w0, [sp, #380]
   1035c:	ldr	w0, [sp, #380]
   10360:	cmp	w0, #0x100
   10364:	b.le	10318 <BZ2_decompress@@Base+0x3fd4>
   10368:	mov	w0, #0x1                   	// #1
   1036c:	str	w0, [sp, #380]
   10370:	b	103d4 <BZ2_decompress@@Base+0x4090>
   10374:	ldr	x1, [sp, #24]
   10378:	ldrsw	x0, [sp, #380]
   1037c:	add	x0, x0, #0x110
   10380:	lsl	x0, x0, #2
   10384:	add	x0, x1, x0
   10388:	ldr	w1, [x0, #8]
   1038c:	ldr	w0, [sp, #380]
   10390:	sub	w0, w0, #0x1
   10394:	ldr	x2, [sp, #24]
   10398:	sxtw	x0, w0
   1039c:	add	x0, x0, #0x110
   103a0:	lsl	x0, x0, #2
   103a4:	add	x0, x2, x0
   103a8:	ldr	w0, [x0, #8]
   103ac:	add	w1, w1, w0
   103b0:	ldr	x2, [sp, #24]
   103b4:	ldrsw	x0, [sp, #380]
   103b8:	add	x0, x0, #0x110
   103bc:	lsl	x0, x0, #2
   103c0:	add	x0, x2, x0
   103c4:	str	w1, [x0, #8]
   103c8:	ldr	w0, [sp, #380]
   103cc:	add	w0, w0, #0x1
   103d0:	str	w0, [sp, #380]
   103d4:	ldr	w0, [sp, #380]
   103d8:	cmp	w0, #0x100
   103dc:	b.le	10374 <BZ2_decompress@@Base+0x4030>
   103e0:	str	wzr, [sp, #380]
   103e4:	b	10444 <BZ2_decompress@@Base+0x4100>
   103e8:	ldr	x1, [sp, #24]
   103ec:	ldrsw	x0, [sp, #380]
   103f0:	add	x0, x0, #0x110
   103f4:	lsl	x0, x0, #2
   103f8:	add	x0, x1, x0
   103fc:	ldr	w0, [x0, #8]
   10400:	cmp	w0, #0x0
   10404:	b.lt	1042c <BZ2_decompress@@Base+0x40e8>  // b.tstop
   10408:	ldr	x1, [sp, #24]
   1040c:	ldrsw	x0, [sp, #380]
   10410:	add	x0, x0, #0x110
   10414:	lsl	x0, x0, #2
   10418:	add	x0, x1, x0
   1041c:	ldr	w0, [x0, #8]
   10420:	ldr	w1, [sp, #336]
   10424:	cmp	w1, w0
   10428:	b.ge	10438 <BZ2_decompress@@Base+0x40f4>  // b.tcont
   1042c:	mov	w0, #0xfffffffc            	// #-4
   10430:	str	w0, [sp, #392]
   10434:	b	119ec <BZ2_decompress@@Base+0x56a8>
   10438:	ldr	w0, [sp, #380]
   1043c:	add	w0, w0, #0x1
   10440:	str	w0, [sp, #380]
   10444:	ldr	w0, [sp, #380]
   10448:	cmp	w0, #0x100
   1044c:	b.le	103e8 <BZ2_decompress@@Base+0x40a4>
   10450:	mov	w0, #0x1                   	// #1
   10454:	str	w0, [sp, #380]
   10458:	b	104b4 <BZ2_decompress@@Base+0x4170>
   1045c:	ldr	w0, [sp, #380]
   10460:	sub	w0, w0, #0x1
   10464:	ldr	x1, [sp, #24]
   10468:	sxtw	x0, w0
   1046c:	add	x0, x0, #0x110
   10470:	lsl	x0, x0, #2
   10474:	add	x0, x1, x0
   10478:	ldr	w1, [x0, #8]
   1047c:	ldr	x2, [sp, #24]
   10480:	ldrsw	x0, [sp, #380]
   10484:	add	x0, x0, #0x110
   10488:	lsl	x0, x0, #2
   1048c:	add	x0, x2, x0
   10490:	ldr	w0, [x0, #8]
   10494:	cmp	w1, w0
   10498:	b.le	104a8 <BZ2_decompress@@Base+0x4164>
   1049c:	mov	w0, #0xfffffffc            	// #-4
   104a0:	str	w0, [sp, #392]
   104a4:	b	119ec <BZ2_decompress@@Base+0x56a8>
   104a8:	ldr	w0, [sp, #380]
   104ac:	add	w0, w0, #0x1
   104b0:	str	w0, [sp, #380]
   104b4:	ldr	w0, [sp, #380]
   104b8:	cmp	w0, #0x100
   104bc:	b.le	1045c <BZ2_decompress@@Base+0x4118>
   104c0:	ldr	x0, [sp, #24]
   104c4:	str	wzr, [x0, #16]
   104c8:	ldr	x0, [sp, #24]
   104cc:	strb	wzr, [x0, #12]
   104d0:	ldr	x0, [sp, #24]
   104d4:	mov	w1, #0xffffffff            	// #-1
   104d8:	str	w1, [x0, #3184]
   104dc:	ldr	x0, [sp, #24]
   104e0:	mov	w1, #0x2                   	// #2
   104e4:	str	w1, [x0, #8]
   104e8:	ldr	x0, [sp, #24]
   104ec:	ldr	w0, [x0, #52]
   104f0:	cmp	w0, #0x1
   104f4:	b.le	1051c <BZ2_decompress@@Base+0x41d8>
   104f8:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   104fc:	ldr	x0, [x0, #4016]
   10500:	ldr	x0, [x0]
   10504:	mov	x3, x0
   10508:	mov	x2, #0x6                   	// #6
   1050c:	mov	x1, #0x1                   	// #1
   10510:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   10514:	add	x0, x0, #0x1d8
   10518:	bl	16d0 <fwrite@plt>
   1051c:	ldr	x0, [sp, #24]
   10520:	ldrb	w0, [x0, #44]
   10524:	cmp	w0, #0x0
   10528:	b.eq	10ba0 <BZ2_decompress@@Base+0x485c>  // b.none
   1052c:	str	wzr, [sp, #380]
   10530:	b	10570 <BZ2_decompress@@Base+0x422c>
   10534:	ldr	x1, [sp, #24]
   10538:	ldrsw	x0, [sp, #380]
   1053c:	add	x0, x0, #0x110
   10540:	lsl	x0, x0, #2
   10544:	add	x0, x1, x0
   10548:	ldr	w1, [x0, #8]
   1054c:	ldr	x2, [sp, #24]
   10550:	ldrsw	x0, [sp, #380]
   10554:	add	x0, x0, #0x210
   10558:	lsl	x0, x0, #2
   1055c:	add	x0, x2, x0
   10560:	str	w1, [x0, #12]
   10564:	ldr	w0, [sp, #380]
   10568:	add	w0, w0, #0x1
   1056c:	str	w0, [sp, #380]
   10570:	ldr	w0, [sp, #380]
   10574:	cmp	w0, #0x100
   10578:	b.le	10534 <BZ2_decompress@@Base+0x41f0>
   1057c:	str	wzr, [sp, #380]
   10580:	b	1071c <BZ2_decompress@@Base+0x43d8>
   10584:	ldr	x0, [sp, #24]
   10588:	ldr	x1, [x0, #3160]
   1058c:	ldrsw	x0, [sp, #380]
   10590:	lsl	x0, x0, #1
   10594:	add	x0, x1, x0
   10598:	ldrh	w0, [x0]
   1059c:	strb	w0, [sp, #399]
   105a0:	ldrb	w0, [sp, #399]
   105a4:	ldr	x1, [sp, #24]
   105a8:	sxtw	x0, w0
   105ac:	add	x0, x0, #0x210
   105b0:	lsl	x0, x0, #2
   105b4:	add	x0, x1, x0
   105b8:	ldr	w2, [x0, #12]
   105bc:	ldr	x0, [sp, #24]
   105c0:	ldr	x1, [x0, #3160]
   105c4:	ldrsw	x0, [sp, #380]
   105c8:	lsl	x0, x0, #1
   105cc:	add	x0, x1, x0
   105d0:	and	w1, w2, #0xffff
   105d4:	strh	w1, [x0]
   105d8:	ldr	w0, [sp, #380]
   105dc:	and	w0, w0, #0x1
   105e0:	cmp	w0, #0x0
   105e4:	b.ne	10660 <BZ2_decompress@@Base+0x431c>  // b.any
   105e8:	ldr	x0, [sp, #24]
   105ec:	ldr	x1, [x0, #3168]
   105f0:	ldr	w0, [sp, #380]
   105f4:	asr	w0, w0, #1
   105f8:	sxtw	x0, w0
   105fc:	add	x0, x1, x0
   10600:	ldrb	w0, [x0]
   10604:	sxtb	w0, w0
   10608:	and	w0, w0, #0xfffffff0
   1060c:	sxtb	w1, w0
   10610:	ldrb	w0, [sp, #399]
   10614:	ldr	x2, [sp, #24]
   10618:	sxtw	x0, w0
   1061c:	add	x0, x0, #0x210
   10620:	lsl	x0, x0, #2
   10624:	add	x0, x2, x0
   10628:	ldr	w0, [x0, #12]
   1062c:	asr	w0, w0, #16
   10630:	sxtb	w0, w0
   10634:	orr	w0, w1, w0
   10638:	sxtb	w2, w0
   1063c:	ldr	x0, [sp, #24]
   10640:	ldr	x1, [x0, #3168]
   10644:	ldr	w0, [sp, #380]
   10648:	asr	w0, w0, #1
   1064c:	sxtw	x0, w0
   10650:	add	x0, x1, x0
   10654:	and	w1, w2, #0xff
   10658:	strb	w1, [x0]
   1065c:	b	106d8 <BZ2_decompress@@Base+0x4394>
   10660:	ldr	x0, [sp, #24]
   10664:	ldr	x1, [x0, #3168]
   10668:	ldr	w0, [sp, #380]
   1066c:	asr	w0, w0, #1
   10670:	sxtw	x0, w0
   10674:	add	x0, x1, x0
   10678:	ldrb	w0, [x0]
   1067c:	sxtb	w0, w0
   10680:	and	w0, w0, #0xf
   10684:	sxtb	w1, w0
   10688:	ldrb	w0, [sp, #399]
   1068c:	ldr	x2, [sp, #24]
   10690:	sxtw	x0, w0
   10694:	add	x0, x0, #0x210
   10698:	lsl	x0, x0, #2
   1069c:	add	x0, x2, x0
   106a0:	ldr	w0, [x0, #12]
   106a4:	asr	w0, w0, #16
   106a8:	lsl	w0, w0, #4
   106ac:	sxtb	w0, w0
   106b0:	orr	w0, w1, w0
   106b4:	sxtb	w2, w0
   106b8:	ldr	x0, [sp, #24]
   106bc:	ldr	x1, [x0, #3168]
   106c0:	ldr	w0, [sp, #380]
   106c4:	asr	w0, w0, #1
   106c8:	sxtw	x0, w0
   106cc:	add	x0, x1, x0
   106d0:	and	w1, w2, #0xff
   106d4:	strb	w1, [x0]
   106d8:	ldrb	w3, [sp, #399]
   106dc:	ldr	x1, [sp, #24]
   106e0:	sxtw	x0, w3
   106e4:	add	x0, x0, #0x210
   106e8:	lsl	x0, x0, #2
   106ec:	add	x0, x1, x0
   106f0:	ldr	w0, [x0, #12]
   106f4:	add	w1, w0, #0x1
   106f8:	ldr	x2, [sp, #24]
   106fc:	sxtw	x0, w3
   10700:	add	x0, x0, #0x210
   10704:	lsl	x0, x0, #2
   10708:	add	x0, x2, x0
   1070c:	str	w1, [x0, #12]
   10710:	ldr	w0, [sp, #380]
   10714:	add	w0, w0, #0x1
   10718:	str	w0, [sp, #380]
   1071c:	ldr	w1, [sp, #380]
   10720:	ldr	w0, [sp, #336]
   10724:	cmp	w1, w0
   10728:	b.lt	10584 <BZ2_decompress@@Base+0x4240>  // b.tstop
   1072c:	ldr	x0, [sp, #24]
   10730:	ldr	w0, [x0, #56]
   10734:	str	w0, [sp, #380]
   10738:	ldr	x0, [sp, #24]
   1073c:	ldr	x1, [x0, #3160]
   10740:	ldrsw	x0, [sp, #380]
   10744:	lsl	x0, x0, #1
   10748:	add	x0, x1, x0
   1074c:	ldrh	w0, [x0]
   10750:	mov	w2, w0
   10754:	ldr	x0, [sp, #24]
   10758:	ldr	x1, [x0, #3168]
   1075c:	ldr	w0, [sp, #380]
   10760:	asr	w0, w0, #1
   10764:	sxtw	x0, w0
   10768:	add	x0, x1, x0
   1076c:	ldrb	w0, [x0]
   10770:	mov	w1, w0
   10774:	ldr	w0, [sp, #380]
   10778:	lsl	w0, w0, #2
   1077c:	and	w0, w0, #0x4
   10780:	lsr	w0, w1, w0
   10784:	lsl	w0, w0, #16
   10788:	and	w0, w0, #0xf0000
   1078c:	orr	w0, w2, w0
   10790:	str	w0, [sp, #376]
   10794:	ldr	x0, [sp, #24]
   10798:	ldr	x1, [x0, #3160]
   1079c:	ldrsw	x0, [sp, #376]
   107a0:	lsl	x0, x0, #1
   107a4:	add	x0, x1, x0
   107a8:	ldrh	w0, [x0]
   107ac:	mov	w2, w0
   107b0:	ldr	x0, [sp, #24]
   107b4:	ldr	x1, [x0, #3168]
   107b8:	ldr	w0, [sp, #376]
   107bc:	asr	w0, w0, #1
   107c0:	sxtw	x0, w0
   107c4:	add	x0, x1, x0
   107c8:	ldrb	w0, [x0]
   107cc:	mov	w1, w0
   107d0:	ldr	w0, [sp, #376]
   107d4:	lsl	w0, w0, #2
   107d8:	and	w0, w0, #0x4
   107dc:	lsr	w0, w1, w0
   107e0:	lsl	w0, w0, #16
   107e4:	and	w0, w0, #0xf0000
   107e8:	orr	w0, w2, w0
   107ec:	str	w0, [sp, #124]
   107f0:	ldr	x0, [sp, #24]
   107f4:	ldr	x1, [x0, #3160]
   107f8:	ldrsw	x0, [sp, #376]
   107fc:	lsl	x0, x0, #1
   10800:	add	x0, x1, x0
   10804:	ldr	w1, [sp, #380]
   10808:	and	w1, w1, #0xffff
   1080c:	strh	w1, [x0]
   10810:	ldr	w0, [sp, #376]
   10814:	and	w0, w0, #0x1
   10818:	cmp	w0, #0x0
   1081c:	b.ne	10880 <BZ2_decompress@@Base+0x453c>  // b.any
   10820:	ldr	x0, [sp, #24]
   10824:	ldr	x1, [x0, #3168]
   10828:	ldr	w0, [sp, #376]
   1082c:	asr	w0, w0, #1
   10830:	sxtw	x0, w0
   10834:	add	x0, x1, x0
   10838:	ldrb	w0, [x0]
   1083c:	sxtb	w0, w0
   10840:	and	w0, w0, #0xfffffff0
   10844:	sxtb	w1, w0
   10848:	ldr	w0, [sp, #380]
   1084c:	asr	w0, w0, #16
   10850:	sxtb	w0, w0
   10854:	orr	w0, w1, w0
   10858:	sxtb	w2, w0
   1085c:	ldr	x0, [sp, #24]
   10860:	ldr	x1, [x0, #3168]
   10864:	ldr	w0, [sp, #376]
   10868:	asr	w0, w0, #1
   1086c:	sxtw	x0, w0
   10870:	add	x0, x1, x0
   10874:	and	w1, w2, #0xff
   10878:	strb	w1, [x0]
   1087c:	b	108e0 <BZ2_decompress@@Base+0x459c>
   10880:	ldr	x0, [sp, #24]
   10884:	ldr	x1, [x0, #3168]
   10888:	ldr	w0, [sp, #376]
   1088c:	asr	w0, w0, #1
   10890:	sxtw	x0, w0
   10894:	add	x0, x1, x0
   10898:	ldrb	w0, [x0]
   1089c:	sxtb	w0, w0
   108a0:	and	w0, w0, #0xf
   108a4:	sxtb	w1, w0
   108a8:	ldr	w0, [sp, #380]
   108ac:	asr	w0, w0, #16
   108b0:	lsl	w0, w0, #4
   108b4:	sxtb	w0, w0
   108b8:	orr	w0, w1, w0
   108bc:	sxtb	w2, w0
   108c0:	ldr	x0, [sp, #24]
   108c4:	ldr	x1, [x0, #3168]
   108c8:	ldr	w0, [sp, #376]
   108cc:	asr	w0, w0, #1
   108d0:	sxtw	x0, w0
   108d4:	add	x0, x1, x0
   108d8:	and	w1, w2, #0xff
   108dc:	strb	w1, [x0]
   108e0:	ldr	w0, [sp, #376]
   108e4:	str	w0, [sp, #380]
   108e8:	ldr	w0, [sp, #124]
   108ec:	str	w0, [sp, #376]
   108f0:	ldr	x0, [sp, #24]
   108f4:	ldr	w0, [x0, #56]
   108f8:	ldr	w1, [sp, #380]
   108fc:	cmp	w1, w0
   10900:	b.ne	10794 <BZ2_decompress@@Base+0x4450>  // b.any
   10904:	ldr	x0, [sp, #24]
   10908:	ldr	w0, [x0, #56]
   1090c:	mov	w1, w0
   10910:	ldr	x0, [sp, #24]
   10914:	str	w1, [x0, #60]
   10918:	ldr	x0, [sp, #24]
   1091c:	str	wzr, [x0, #1092]
   10920:	ldr	x0, [sp, #24]
   10924:	ldrb	w0, [x0, #20]
   10928:	cmp	w0, #0x0
   1092c:	b.eq	10abc <BZ2_decompress@@Base+0x4778>  // b.none
   10930:	ldr	x0, [sp, #24]
   10934:	str	wzr, [x0, #24]
   10938:	ldr	x0, [sp, #24]
   1093c:	str	wzr, [x0, #28]
   10940:	ldr	x0, [sp, #24]
   10944:	ldr	w1, [x0, #60]
   10948:	ldr	x0, [sp, #24]
   1094c:	ldr	w0, [x0, #40]
   10950:	mov	w2, w0
   10954:	mov	w0, #0x86a0                	// #34464
   10958:	movk	w0, #0x1, lsl #16
   1095c:	mul	w0, w2, w0
   10960:	cmp	w1, w0
   10964:	b.cc	10970 <BZ2_decompress@@Base+0x462c>  // b.lo, b.ul, b.last
   10968:	mov	w0, #0x1                   	// #1
   1096c:	b	11b70 <BZ2_decompress@@Base+0x582c>
   10970:	ldr	x0, [sp, #24]
   10974:	ldr	w0, [x0, #60]
   10978:	mov	w2, w0
   1097c:	ldr	x0, [sp, #24]
   10980:	add	x0, x0, #0x448
   10984:	mov	x1, x0
   10988:	mov	w0, w2
   1098c:	bl	16b0 <BZ2_indexIntoF@plt>
   10990:	mov	w1, w0
   10994:	ldr	x0, [sp, #24]
   10998:	str	w1, [x0, #64]
   1099c:	ldr	x0, [sp, #24]
   109a0:	ldr	x1, [x0, #3160]
   109a4:	ldr	x0, [sp, #24]
   109a8:	ldr	w0, [x0, #60]
   109ac:	mov	w0, w0
   109b0:	lsl	x0, x0, #1
   109b4:	add	x0, x1, x0
   109b8:	ldrh	w0, [x0]
   109bc:	mov	w2, w0
   109c0:	ldr	x0, [sp, #24]
   109c4:	ldr	x1, [x0, #3168]
   109c8:	ldr	x0, [sp, #24]
   109cc:	ldr	w0, [x0, #60]
   109d0:	lsr	w0, w0, #1
   109d4:	mov	w0, w0
   109d8:	add	x0, x1, x0
   109dc:	ldrb	w0, [x0]
   109e0:	mov	w1, w0
   109e4:	ldr	x0, [sp, #24]
   109e8:	ldr	w0, [x0, #60]
   109ec:	lsl	w0, w0, #2
   109f0:	and	w0, w0, #0x4
   109f4:	lsr	w0, w1, w0
   109f8:	lsl	w0, w0, #16
   109fc:	and	w0, w0, #0xf0000
   10a00:	orr	w1, w2, w0
   10a04:	ldr	x0, [sp, #24]
   10a08:	str	w1, [x0, #60]
   10a0c:	ldr	x0, [sp, #24]
   10a10:	ldr	w0, [x0, #1092]
   10a14:	add	w1, w0, #0x1
   10a18:	ldr	x0, [sp, #24]
   10a1c:	str	w1, [x0, #1092]
   10a20:	ldr	x0, [sp, #24]
   10a24:	ldr	w0, [x0, #24]
   10a28:	cmp	w0, #0x0
   10a2c:	b.ne	10a7c <BZ2_decompress@@Base+0x4738>  // b.any
   10a30:	ldr	x0, [sp, #24]
   10a34:	ldr	w1, [x0, #28]
   10a38:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   10a3c:	ldr	x0, [x0, #4048]
   10a40:	sxtw	x1, w1
   10a44:	ldr	w1, [x0, x1, lsl #2]
   10a48:	ldr	x0, [sp, #24]
   10a4c:	str	w1, [x0, #24]
   10a50:	ldr	x0, [sp, #24]
   10a54:	ldr	w0, [x0, #28]
   10a58:	add	w1, w0, #0x1
   10a5c:	ldr	x0, [sp, #24]
   10a60:	str	w1, [x0, #28]
   10a64:	ldr	x0, [sp, #24]
   10a68:	ldr	w0, [x0, #28]
   10a6c:	cmp	w0, #0x200
   10a70:	b.ne	10a7c <BZ2_decompress@@Base+0x4738>  // b.any
   10a74:	ldr	x0, [sp, #24]
   10a78:	str	wzr, [x0, #28]
   10a7c:	ldr	x0, [sp, #24]
   10a80:	ldr	w0, [x0, #24]
   10a84:	sub	w1, w0, #0x1
   10a88:	ldr	x0, [sp, #24]
   10a8c:	str	w1, [x0, #24]
   10a90:	ldr	x0, [sp, #24]
   10a94:	ldr	w0, [x0, #64]
   10a98:	ldr	x1, [sp, #24]
   10a9c:	ldr	w1, [x1, #24]
   10aa0:	cmp	w1, #0x1
   10aa4:	cset	w1, eq  // eq = none
   10aa8:	and	w1, w1, #0xff
   10aac:	eor	w1, w0, w1
   10ab0:	ldr	x0, [sp, #24]
   10ab4:	str	w1, [x0, #64]
   10ab8:	b	10eb0 <BZ2_decompress@@Base+0x4b6c>
   10abc:	ldr	x0, [sp, #24]
   10ac0:	ldr	w1, [x0, #60]
   10ac4:	ldr	x0, [sp, #24]
   10ac8:	ldr	w0, [x0, #40]
   10acc:	mov	w2, w0
   10ad0:	mov	w0, #0x86a0                	// #34464
   10ad4:	movk	w0, #0x1, lsl #16
   10ad8:	mul	w0, w2, w0
   10adc:	cmp	w1, w0
   10ae0:	b.cc	10aec <BZ2_decompress@@Base+0x47a8>  // b.lo, b.ul, b.last
   10ae4:	mov	w0, #0x1                   	// #1
   10ae8:	b	11b70 <BZ2_decompress@@Base+0x582c>
   10aec:	ldr	x0, [sp, #24]
   10af0:	ldr	w0, [x0, #60]
   10af4:	mov	w2, w0
   10af8:	ldr	x0, [sp, #24]
   10afc:	add	x0, x0, #0x448
   10b00:	mov	x1, x0
   10b04:	mov	w0, w2
   10b08:	bl	16b0 <BZ2_indexIntoF@plt>
   10b0c:	mov	w1, w0
   10b10:	ldr	x0, [sp, #24]
   10b14:	str	w1, [x0, #64]
   10b18:	ldr	x0, [sp, #24]
   10b1c:	ldr	x1, [x0, #3160]
   10b20:	ldr	x0, [sp, #24]
   10b24:	ldr	w0, [x0, #60]
   10b28:	mov	w0, w0
   10b2c:	lsl	x0, x0, #1
   10b30:	add	x0, x1, x0
   10b34:	ldrh	w0, [x0]
   10b38:	mov	w2, w0
   10b3c:	ldr	x0, [sp, #24]
   10b40:	ldr	x1, [x0, #3168]
   10b44:	ldr	x0, [sp, #24]
   10b48:	ldr	w0, [x0, #60]
   10b4c:	lsr	w0, w0, #1
   10b50:	mov	w0, w0
   10b54:	add	x0, x1, x0
   10b58:	ldrb	w0, [x0]
   10b5c:	mov	w1, w0
   10b60:	ldr	x0, [sp, #24]
   10b64:	ldr	w0, [x0, #60]
   10b68:	lsl	w0, w0, #2
   10b6c:	and	w0, w0, #0x4
   10b70:	lsr	w0, w1, w0
   10b74:	lsl	w0, w0, #16
   10b78:	and	w0, w0, #0xf0000
   10b7c:	orr	w1, w2, w0
   10b80:	ldr	x0, [sp, #24]
   10b84:	str	w1, [x0, #60]
   10b88:	ldr	x0, [sp, #24]
   10b8c:	ldr	w0, [x0, #1092]
   10b90:	add	w1, w0, #0x1
   10b94:	ldr	x0, [sp, #24]
   10b98:	str	w1, [x0, #1092]
   10b9c:	b	10eb0 <BZ2_decompress@@Base+0x4b6c>
   10ba0:	str	wzr, [sp, #380]
   10ba4:	b	10c80 <BZ2_decompress@@Base+0x493c>
   10ba8:	ldr	x0, [sp, #24]
   10bac:	ldr	x1, [x0, #3152]
   10bb0:	ldrsw	x0, [sp, #380]
   10bb4:	lsl	x0, x0, #2
   10bb8:	add	x0, x1, x0
   10bbc:	ldr	w0, [x0]
   10bc0:	strb	w0, [sp, #399]
   10bc4:	ldr	x0, [sp, #24]
   10bc8:	ldr	x1, [x0, #3152]
   10bcc:	ldrb	w0, [sp, #399]
   10bd0:	ldr	x2, [sp, #24]
   10bd4:	sxtw	x0, w0
   10bd8:	add	x0, x0, #0x110
   10bdc:	lsl	x0, x0, #2
   10be0:	add	x0, x2, x0
   10be4:	ldr	w0, [x0, #8]
   10be8:	sxtw	x0, w0
   10bec:	lsl	x0, x0, #2
   10bf0:	add	x0, x1, x0
   10bf4:	ldr	w1, [x0]
   10bf8:	ldr	w0, [sp, #380]
   10bfc:	lsl	w0, w0, #8
   10c00:	mov	w4, w0
   10c04:	ldr	x0, [sp, #24]
   10c08:	ldr	x2, [x0, #3152]
   10c0c:	ldrb	w0, [sp, #399]
   10c10:	ldr	x3, [sp, #24]
   10c14:	sxtw	x0, w0
   10c18:	add	x0, x0, #0x110
   10c1c:	lsl	x0, x0, #2
   10c20:	add	x0, x3, x0
   10c24:	ldr	w0, [x0, #8]
   10c28:	sxtw	x0, w0
   10c2c:	lsl	x0, x0, #2
   10c30:	add	x0, x2, x0
   10c34:	orr	w1, w1, w4
   10c38:	str	w1, [x0]
   10c3c:	ldrb	w3, [sp, #399]
   10c40:	ldr	x1, [sp, #24]
   10c44:	sxtw	x0, w3
   10c48:	add	x0, x0, #0x110
   10c4c:	lsl	x0, x0, #2
   10c50:	add	x0, x1, x0
   10c54:	ldr	w0, [x0, #8]
   10c58:	add	w1, w0, #0x1
   10c5c:	ldr	x2, [sp, #24]
   10c60:	sxtw	x0, w3
   10c64:	add	x0, x0, #0x110
   10c68:	lsl	x0, x0, #2
   10c6c:	add	x0, x2, x0
   10c70:	str	w1, [x0, #8]
   10c74:	ldr	w0, [sp, #380]
   10c78:	add	w0, w0, #0x1
   10c7c:	str	w0, [sp, #380]
   10c80:	ldr	w1, [sp, #380]
   10c84:	ldr	w0, [sp, #336]
   10c88:	cmp	w1, w0
   10c8c:	b.lt	10ba8 <BZ2_decompress@@Base+0x4864>  // b.tstop
   10c90:	ldr	x0, [sp, #24]
   10c94:	ldr	x1, [x0, #3152]
   10c98:	ldr	x0, [sp, #24]
   10c9c:	ldr	w0, [x0, #56]
   10ca0:	sxtw	x0, w0
   10ca4:	lsl	x0, x0, #2
   10ca8:	add	x0, x1, x0
   10cac:	ldr	w0, [x0]
   10cb0:	lsr	w1, w0, #8
   10cb4:	ldr	x0, [sp, #24]
   10cb8:	str	w1, [x0, #60]
   10cbc:	ldr	x0, [sp, #24]
   10cc0:	str	wzr, [x0, #1092]
   10cc4:	ldr	x0, [sp, #24]
   10cc8:	ldrb	w0, [x0, #20]
   10ccc:	cmp	w0, #0x0
   10cd0:	b.eq	10e18 <BZ2_decompress@@Base+0x4ad4>  // b.none
   10cd4:	ldr	x0, [sp, #24]
   10cd8:	str	wzr, [x0, #24]
   10cdc:	ldr	x0, [sp, #24]
   10ce0:	str	wzr, [x0, #28]
   10ce4:	ldr	x0, [sp, #24]
   10ce8:	ldr	w1, [x0, #60]
   10cec:	ldr	x0, [sp, #24]
   10cf0:	ldr	w0, [x0, #40]
   10cf4:	mov	w2, w0
   10cf8:	mov	w0, #0x86a0                	// #34464
   10cfc:	movk	w0, #0x1, lsl #16
   10d00:	mul	w0, w2, w0
   10d04:	cmp	w1, w0
   10d08:	b.cc	10d14 <BZ2_decompress@@Base+0x49d0>  // b.lo, b.ul, b.last
   10d0c:	mov	w0, #0x1                   	// #1
   10d10:	b	11b70 <BZ2_decompress@@Base+0x582c>
   10d14:	ldr	x0, [sp, #24]
   10d18:	ldr	x1, [x0, #3152]
   10d1c:	ldr	x0, [sp, #24]
   10d20:	ldr	w0, [x0, #60]
   10d24:	mov	w0, w0
   10d28:	lsl	x0, x0, #2
   10d2c:	add	x0, x1, x0
   10d30:	ldr	w1, [x0]
   10d34:	ldr	x0, [sp, #24]
   10d38:	str	w1, [x0, #60]
   10d3c:	ldr	x0, [sp, #24]
   10d40:	ldr	w0, [x0, #60]
   10d44:	and	w0, w0, #0xff
   10d48:	mov	w1, w0
   10d4c:	ldr	x0, [sp, #24]
   10d50:	str	w1, [x0, #64]
   10d54:	ldr	x0, [sp, #24]
   10d58:	ldr	w0, [x0, #60]
   10d5c:	lsr	w1, w0, #8
   10d60:	ldr	x0, [sp, #24]
   10d64:	str	w1, [x0, #60]
   10d68:	ldr	x0, [sp, #24]
   10d6c:	ldr	w0, [x0, #1092]
   10d70:	add	w1, w0, #0x1
   10d74:	ldr	x0, [sp, #24]
   10d78:	str	w1, [x0, #1092]
   10d7c:	ldr	x0, [sp, #24]
   10d80:	ldr	w0, [x0, #24]
   10d84:	cmp	w0, #0x0
   10d88:	b.ne	10dd8 <BZ2_decompress@@Base+0x4a94>  // b.any
   10d8c:	ldr	x0, [sp, #24]
   10d90:	ldr	w1, [x0, #28]
   10d94:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   10d98:	ldr	x0, [x0, #4048]
   10d9c:	sxtw	x1, w1
   10da0:	ldr	w1, [x0, x1, lsl #2]
   10da4:	ldr	x0, [sp, #24]
   10da8:	str	w1, [x0, #24]
   10dac:	ldr	x0, [sp, #24]
   10db0:	ldr	w0, [x0, #28]
   10db4:	add	w1, w0, #0x1
   10db8:	ldr	x0, [sp, #24]
   10dbc:	str	w1, [x0, #28]
   10dc0:	ldr	x0, [sp, #24]
   10dc4:	ldr	w0, [x0, #28]
   10dc8:	cmp	w0, #0x200
   10dcc:	b.ne	10dd8 <BZ2_decompress@@Base+0x4a94>  // b.any
   10dd0:	ldr	x0, [sp, #24]
   10dd4:	str	wzr, [x0, #28]
   10dd8:	ldr	x0, [sp, #24]
   10ddc:	ldr	w0, [x0, #24]
   10de0:	sub	w1, w0, #0x1
   10de4:	ldr	x0, [sp, #24]
   10de8:	str	w1, [x0, #24]
   10dec:	ldr	x0, [sp, #24]
   10df0:	ldr	w0, [x0, #64]
   10df4:	ldr	x1, [sp, #24]
   10df8:	ldr	w1, [x1, #24]
   10dfc:	cmp	w1, #0x1
   10e00:	cset	w1, eq  // eq = none
   10e04:	and	w1, w1, #0xff
   10e08:	eor	w1, w0, w1
   10e0c:	ldr	x0, [sp, #24]
   10e10:	str	w1, [x0, #64]
   10e14:	b	10eb0 <BZ2_decompress@@Base+0x4b6c>
   10e18:	ldr	x0, [sp, #24]
   10e1c:	ldr	w1, [x0, #60]
   10e20:	ldr	x0, [sp, #24]
   10e24:	ldr	w0, [x0, #40]
   10e28:	mov	w2, w0
   10e2c:	mov	w0, #0x86a0                	// #34464
   10e30:	movk	w0, #0x1, lsl #16
   10e34:	mul	w0, w2, w0
   10e38:	cmp	w1, w0
   10e3c:	b.cc	10e48 <BZ2_decompress@@Base+0x4b04>  // b.lo, b.ul, b.last
   10e40:	mov	w0, #0x1                   	// #1
   10e44:	b	11b70 <BZ2_decompress@@Base+0x582c>
   10e48:	ldr	x0, [sp, #24]
   10e4c:	ldr	x1, [x0, #3152]
   10e50:	ldr	x0, [sp, #24]
   10e54:	ldr	w0, [x0, #60]
   10e58:	mov	w0, w0
   10e5c:	lsl	x0, x0, #2
   10e60:	add	x0, x1, x0
   10e64:	ldr	w1, [x0]
   10e68:	ldr	x0, [sp, #24]
   10e6c:	str	w1, [x0, #60]
   10e70:	ldr	x0, [sp, #24]
   10e74:	ldr	w0, [x0, #60]
   10e78:	and	w0, w0, #0xff
   10e7c:	mov	w1, w0
   10e80:	ldr	x0, [sp, #24]
   10e84:	str	w1, [x0, #64]
   10e88:	ldr	x0, [sp, #24]
   10e8c:	ldr	w0, [x0, #60]
   10e90:	lsr	w1, w0, #8
   10e94:	ldr	x0, [sp, #24]
   10e98:	str	w1, [x0, #60]
   10e9c:	ldr	x0, [sp, #24]
   10ea0:	ldr	w0, [x0, #1092]
   10ea4:	add	w1, w0, #0x1
   10ea8:	ldr	x0, [sp, #24]
   10eac:	str	w1, [x0, #1092]
   10eb0:	str	wzr, [sp, #392]
   10eb4:	b	119ec <BZ2_decompress@@Base+0x56a8>
   10eb8:	ldr	x0, [sp, #24]
   10ebc:	mov	w1, #0x2a                  	// #42
   10ec0:	str	w1, [x0, #8]
   10ec4:	ldr	x0, [sp, #24]
   10ec8:	ldr	w0, [x0, #36]
   10ecc:	cmp	w0, #0x7
   10ed0:	b.le	10f24 <BZ2_decompress@@Base+0x4be0>
   10ed4:	ldr	x0, [sp, #24]
   10ed8:	ldr	w1, [x0, #32]
   10edc:	ldr	x0, [sp, #24]
   10ee0:	ldr	w0, [x0, #36]
   10ee4:	sub	w0, w0, #0x8
   10ee8:	lsr	w0, w1, w0
   10eec:	and	w0, w0, #0xff
   10ef0:	str	w0, [sp, #80]
   10ef4:	ldr	x0, [sp, #24]
   10ef8:	ldr	w0, [x0, #36]
   10efc:	sub	w1, w0, #0x8
   10f00:	ldr	x0, [sp, #24]
   10f04:	str	w1, [x0, #36]
   10f08:	ldr	w0, [sp, #80]
   10f0c:	strb	w0, [sp, #399]
   10f10:	nop
   10f14:	ldrb	w0, [sp, #399]
   10f18:	cmp	w0, #0x72
   10f1c:	b.eq	10ff0 <BZ2_decompress@@Base+0x4cac>  // b.none
   10f20:	b	10fe4 <BZ2_decompress@@Base+0x4ca0>
   10f24:	ldr	x0, [sp, #24]
   10f28:	ldr	x0, [x0]
   10f2c:	ldr	w0, [x0, #8]
   10f30:	cmp	w0, #0x0
   10f34:	b.ne	10f40 <BZ2_decompress@@Base+0x4bfc>  // b.any
   10f38:	str	wzr, [sp, #392]
   10f3c:	b	119ec <BZ2_decompress@@Base+0x56a8>
   10f40:	ldr	x0, [sp, #24]
   10f44:	ldr	w0, [x0, #32]
   10f48:	lsl	w0, w0, #8
   10f4c:	ldr	x1, [sp, #24]
   10f50:	ldr	x1, [x1]
   10f54:	ldr	x1, [x1]
   10f58:	ldrb	w1, [x1]
   10f5c:	orr	w1, w0, w1
   10f60:	ldr	x0, [sp, #24]
   10f64:	str	w1, [x0, #32]
   10f68:	ldr	x0, [sp, #24]
   10f6c:	ldr	w0, [x0, #36]
   10f70:	add	w1, w0, #0x8
   10f74:	ldr	x0, [sp, #24]
   10f78:	str	w1, [x0, #36]
   10f7c:	ldr	x0, [sp, #24]
   10f80:	ldr	x0, [x0]
   10f84:	ldr	x1, [x0]
   10f88:	add	x1, x1, #0x1
   10f8c:	str	x1, [x0]
   10f90:	ldr	x0, [sp, #24]
   10f94:	ldr	x0, [x0]
   10f98:	ldr	w1, [x0, #8]
   10f9c:	sub	w1, w1, #0x1
   10fa0:	str	w1, [x0, #8]
   10fa4:	ldr	x0, [sp, #24]
   10fa8:	ldr	x0, [x0]
   10fac:	ldr	w1, [x0, #12]
   10fb0:	add	w1, w1, #0x1
   10fb4:	str	w1, [x0, #12]
   10fb8:	ldr	x0, [sp, #24]
   10fbc:	ldr	x0, [x0]
   10fc0:	ldr	w0, [x0, #12]
   10fc4:	cmp	w0, #0x0
   10fc8:	b.ne	10ec4 <BZ2_decompress@@Base+0x4b80>  // b.any
   10fcc:	ldr	x0, [sp, #24]
   10fd0:	ldr	x0, [x0]
   10fd4:	ldr	w1, [x0, #16]
   10fd8:	add	w1, w1, #0x1
   10fdc:	str	w1, [x0, #16]
   10fe0:	b	10ec4 <BZ2_decompress@@Base+0x4b80>
   10fe4:	mov	w0, #0xfffffffc            	// #-4
   10fe8:	str	w0, [sp, #392]
   10fec:	b	119ec <BZ2_decompress@@Base+0x56a8>
   10ff0:	ldr	x0, [sp, #24]
   10ff4:	mov	w1, #0x2b                  	// #43
   10ff8:	str	w1, [x0, #8]
   10ffc:	ldr	x0, [sp, #24]
   11000:	ldr	w0, [x0, #36]
   11004:	cmp	w0, #0x7
   11008:	b.le	1105c <BZ2_decompress@@Base+0x4d18>
   1100c:	ldr	x0, [sp, #24]
   11010:	ldr	w1, [x0, #32]
   11014:	ldr	x0, [sp, #24]
   11018:	ldr	w0, [x0, #36]
   1101c:	sub	w0, w0, #0x8
   11020:	lsr	w0, w1, w0
   11024:	and	w0, w0, #0xff
   11028:	str	w0, [sp, #76]
   1102c:	ldr	x0, [sp, #24]
   11030:	ldr	w0, [x0, #36]
   11034:	sub	w1, w0, #0x8
   11038:	ldr	x0, [sp, #24]
   1103c:	str	w1, [x0, #36]
   11040:	ldr	w0, [sp, #76]
   11044:	strb	w0, [sp, #399]
   11048:	nop
   1104c:	ldrb	w0, [sp, #399]
   11050:	cmp	w0, #0x45
   11054:	b.eq	11128 <BZ2_decompress@@Base+0x4de4>  // b.none
   11058:	b	1111c <BZ2_decompress@@Base+0x4dd8>
   1105c:	ldr	x0, [sp, #24]
   11060:	ldr	x0, [x0]
   11064:	ldr	w0, [x0, #8]
   11068:	cmp	w0, #0x0
   1106c:	b.ne	11078 <BZ2_decompress@@Base+0x4d34>  // b.any
   11070:	str	wzr, [sp, #392]
   11074:	b	119ec <BZ2_decompress@@Base+0x56a8>
   11078:	ldr	x0, [sp, #24]
   1107c:	ldr	w0, [x0, #32]
   11080:	lsl	w0, w0, #8
   11084:	ldr	x1, [sp, #24]
   11088:	ldr	x1, [x1]
   1108c:	ldr	x1, [x1]
   11090:	ldrb	w1, [x1]
   11094:	orr	w1, w0, w1
   11098:	ldr	x0, [sp, #24]
   1109c:	str	w1, [x0, #32]
   110a0:	ldr	x0, [sp, #24]
   110a4:	ldr	w0, [x0, #36]
   110a8:	add	w1, w0, #0x8
   110ac:	ldr	x0, [sp, #24]
   110b0:	str	w1, [x0, #36]
   110b4:	ldr	x0, [sp, #24]
   110b8:	ldr	x0, [x0]
   110bc:	ldr	x1, [x0]
   110c0:	add	x1, x1, #0x1
   110c4:	str	x1, [x0]
   110c8:	ldr	x0, [sp, #24]
   110cc:	ldr	x0, [x0]
   110d0:	ldr	w1, [x0, #8]
   110d4:	sub	w1, w1, #0x1
   110d8:	str	w1, [x0, #8]
   110dc:	ldr	x0, [sp, #24]
   110e0:	ldr	x0, [x0]
   110e4:	ldr	w1, [x0, #12]
   110e8:	add	w1, w1, #0x1
   110ec:	str	w1, [x0, #12]
   110f0:	ldr	x0, [sp, #24]
   110f4:	ldr	x0, [x0]
   110f8:	ldr	w0, [x0, #12]
   110fc:	cmp	w0, #0x0
   11100:	b.ne	10ffc <BZ2_decompress@@Base+0x4cb8>  // b.any
   11104:	ldr	x0, [sp, #24]
   11108:	ldr	x0, [x0]
   1110c:	ldr	w1, [x0, #16]
   11110:	add	w1, w1, #0x1
   11114:	str	w1, [x0, #16]
   11118:	b	10ffc <BZ2_decompress@@Base+0x4cb8>
   1111c:	mov	w0, #0xfffffffc            	// #-4
   11120:	str	w0, [sp, #392]
   11124:	b	119ec <BZ2_decompress@@Base+0x56a8>
   11128:	ldr	x0, [sp, #24]
   1112c:	mov	w1, #0x2c                  	// #44
   11130:	str	w1, [x0, #8]
   11134:	ldr	x0, [sp, #24]
   11138:	ldr	w0, [x0, #36]
   1113c:	cmp	w0, #0x7
   11140:	b.le	11194 <BZ2_decompress@@Base+0x4e50>
   11144:	ldr	x0, [sp, #24]
   11148:	ldr	w1, [x0, #32]
   1114c:	ldr	x0, [sp, #24]
   11150:	ldr	w0, [x0, #36]
   11154:	sub	w0, w0, #0x8
   11158:	lsr	w0, w1, w0
   1115c:	and	w0, w0, #0xff
   11160:	str	w0, [sp, #72]
   11164:	ldr	x0, [sp, #24]
   11168:	ldr	w0, [x0, #36]
   1116c:	sub	w1, w0, #0x8
   11170:	ldr	x0, [sp, #24]
   11174:	str	w1, [x0, #36]
   11178:	ldr	w0, [sp, #72]
   1117c:	strb	w0, [sp, #399]
   11180:	nop
   11184:	ldrb	w0, [sp, #399]
   11188:	cmp	w0, #0x38
   1118c:	b.eq	11260 <BZ2_decompress@@Base+0x4f1c>  // b.none
   11190:	b	11254 <BZ2_decompress@@Base+0x4f10>
   11194:	ldr	x0, [sp, #24]
   11198:	ldr	x0, [x0]
   1119c:	ldr	w0, [x0, #8]
   111a0:	cmp	w0, #0x0
   111a4:	b.ne	111b0 <BZ2_decompress@@Base+0x4e6c>  // b.any
   111a8:	str	wzr, [sp, #392]
   111ac:	b	119ec <BZ2_decompress@@Base+0x56a8>
   111b0:	ldr	x0, [sp, #24]
   111b4:	ldr	w0, [x0, #32]
   111b8:	lsl	w0, w0, #8
   111bc:	ldr	x1, [sp, #24]
   111c0:	ldr	x1, [x1]
   111c4:	ldr	x1, [x1]
   111c8:	ldrb	w1, [x1]
   111cc:	orr	w1, w0, w1
   111d0:	ldr	x0, [sp, #24]
   111d4:	str	w1, [x0, #32]
   111d8:	ldr	x0, [sp, #24]
   111dc:	ldr	w0, [x0, #36]
   111e0:	add	w1, w0, #0x8
   111e4:	ldr	x0, [sp, #24]
   111e8:	str	w1, [x0, #36]
   111ec:	ldr	x0, [sp, #24]
   111f0:	ldr	x0, [x0]
   111f4:	ldr	x1, [x0]
   111f8:	add	x1, x1, #0x1
   111fc:	str	x1, [x0]
   11200:	ldr	x0, [sp, #24]
   11204:	ldr	x0, [x0]
   11208:	ldr	w1, [x0, #8]
   1120c:	sub	w1, w1, #0x1
   11210:	str	w1, [x0, #8]
   11214:	ldr	x0, [sp, #24]
   11218:	ldr	x0, [x0]
   1121c:	ldr	w1, [x0, #12]
   11220:	add	w1, w1, #0x1
   11224:	str	w1, [x0, #12]
   11228:	ldr	x0, [sp, #24]
   1122c:	ldr	x0, [x0]
   11230:	ldr	w0, [x0, #12]
   11234:	cmp	w0, #0x0
   11238:	b.ne	11134 <BZ2_decompress@@Base+0x4df0>  // b.any
   1123c:	ldr	x0, [sp, #24]
   11240:	ldr	x0, [x0]
   11244:	ldr	w1, [x0, #16]
   11248:	add	w1, w1, #0x1
   1124c:	str	w1, [x0, #16]
   11250:	b	11134 <BZ2_decompress@@Base+0x4df0>
   11254:	mov	w0, #0xfffffffc            	// #-4
   11258:	str	w0, [sp, #392]
   1125c:	b	119ec <BZ2_decompress@@Base+0x56a8>
   11260:	ldr	x0, [sp, #24]
   11264:	mov	w1, #0x2d                  	// #45
   11268:	str	w1, [x0, #8]
   1126c:	ldr	x0, [sp, #24]
   11270:	ldr	w0, [x0, #36]
   11274:	cmp	w0, #0x7
   11278:	b.le	112cc <BZ2_decompress@@Base+0x4f88>
   1127c:	ldr	x0, [sp, #24]
   11280:	ldr	w1, [x0, #32]
   11284:	ldr	x0, [sp, #24]
   11288:	ldr	w0, [x0, #36]
   1128c:	sub	w0, w0, #0x8
   11290:	lsr	w0, w1, w0
   11294:	and	w0, w0, #0xff
   11298:	str	w0, [sp, #68]
   1129c:	ldr	x0, [sp, #24]
   112a0:	ldr	w0, [x0, #36]
   112a4:	sub	w1, w0, #0x8
   112a8:	ldr	x0, [sp, #24]
   112ac:	str	w1, [x0, #36]
   112b0:	ldr	w0, [sp, #68]
   112b4:	strb	w0, [sp, #399]
   112b8:	nop
   112bc:	ldrb	w0, [sp, #399]
   112c0:	cmp	w0, #0x50
   112c4:	b.eq	11398 <BZ2_decompress@@Base+0x5054>  // b.none
   112c8:	b	1138c <BZ2_decompress@@Base+0x5048>
   112cc:	ldr	x0, [sp, #24]
   112d0:	ldr	x0, [x0]
   112d4:	ldr	w0, [x0, #8]
   112d8:	cmp	w0, #0x0
   112dc:	b.ne	112e8 <BZ2_decompress@@Base+0x4fa4>  // b.any
   112e0:	str	wzr, [sp, #392]
   112e4:	b	119ec <BZ2_decompress@@Base+0x56a8>
   112e8:	ldr	x0, [sp, #24]
   112ec:	ldr	w0, [x0, #32]
   112f0:	lsl	w0, w0, #8
   112f4:	ldr	x1, [sp, #24]
   112f8:	ldr	x1, [x1]
   112fc:	ldr	x1, [x1]
   11300:	ldrb	w1, [x1]
   11304:	orr	w1, w0, w1
   11308:	ldr	x0, [sp, #24]
   1130c:	str	w1, [x0, #32]
   11310:	ldr	x0, [sp, #24]
   11314:	ldr	w0, [x0, #36]
   11318:	add	w1, w0, #0x8
   1131c:	ldr	x0, [sp, #24]
   11320:	str	w1, [x0, #36]
   11324:	ldr	x0, [sp, #24]
   11328:	ldr	x0, [x0]
   1132c:	ldr	x1, [x0]
   11330:	add	x1, x1, #0x1
   11334:	str	x1, [x0]
   11338:	ldr	x0, [sp, #24]
   1133c:	ldr	x0, [x0]
   11340:	ldr	w1, [x0, #8]
   11344:	sub	w1, w1, #0x1
   11348:	str	w1, [x0, #8]
   1134c:	ldr	x0, [sp, #24]
   11350:	ldr	x0, [x0]
   11354:	ldr	w1, [x0, #12]
   11358:	add	w1, w1, #0x1
   1135c:	str	w1, [x0, #12]
   11360:	ldr	x0, [sp, #24]
   11364:	ldr	x0, [x0]
   11368:	ldr	w0, [x0, #12]
   1136c:	cmp	w0, #0x0
   11370:	b.ne	1126c <BZ2_decompress@@Base+0x4f28>  // b.any
   11374:	ldr	x0, [sp, #24]
   11378:	ldr	x0, [x0]
   1137c:	ldr	w1, [x0, #16]
   11380:	add	w1, w1, #0x1
   11384:	str	w1, [x0, #16]
   11388:	b	1126c <BZ2_decompress@@Base+0x4f28>
   1138c:	mov	w0, #0xfffffffc            	// #-4
   11390:	str	w0, [sp, #392]
   11394:	b	119ec <BZ2_decompress@@Base+0x56a8>
   11398:	ldr	x0, [sp, #24]
   1139c:	mov	w1, #0x2e                  	// #46
   113a0:	str	w1, [x0, #8]
   113a4:	ldr	x0, [sp, #24]
   113a8:	ldr	w0, [x0, #36]
   113ac:	cmp	w0, #0x7
   113b0:	b.le	11404 <BZ2_decompress@@Base+0x50c0>
   113b4:	ldr	x0, [sp, #24]
   113b8:	ldr	w1, [x0, #32]
   113bc:	ldr	x0, [sp, #24]
   113c0:	ldr	w0, [x0, #36]
   113c4:	sub	w0, w0, #0x8
   113c8:	lsr	w0, w1, w0
   113cc:	and	w0, w0, #0xff
   113d0:	str	w0, [sp, #64]
   113d4:	ldr	x0, [sp, #24]
   113d8:	ldr	w0, [x0, #36]
   113dc:	sub	w1, w0, #0x8
   113e0:	ldr	x0, [sp, #24]
   113e4:	str	w1, [x0, #36]
   113e8:	ldr	w0, [sp, #64]
   113ec:	strb	w0, [sp, #399]
   113f0:	nop
   113f4:	ldrb	w0, [sp, #399]
   113f8:	cmp	w0, #0x90
   113fc:	b.eq	114d0 <BZ2_decompress@@Base+0x518c>  // b.none
   11400:	b	114c4 <BZ2_decompress@@Base+0x5180>
   11404:	ldr	x0, [sp, #24]
   11408:	ldr	x0, [x0]
   1140c:	ldr	w0, [x0, #8]
   11410:	cmp	w0, #0x0
   11414:	b.ne	11420 <BZ2_decompress@@Base+0x50dc>  // b.any
   11418:	str	wzr, [sp, #392]
   1141c:	b	119ec <BZ2_decompress@@Base+0x56a8>
   11420:	ldr	x0, [sp, #24]
   11424:	ldr	w0, [x0, #32]
   11428:	lsl	w0, w0, #8
   1142c:	ldr	x1, [sp, #24]
   11430:	ldr	x1, [x1]
   11434:	ldr	x1, [x1]
   11438:	ldrb	w1, [x1]
   1143c:	orr	w1, w0, w1
   11440:	ldr	x0, [sp, #24]
   11444:	str	w1, [x0, #32]
   11448:	ldr	x0, [sp, #24]
   1144c:	ldr	w0, [x0, #36]
   11450:	add	w1, w0, #0x8
   11454:	ldr	x0, [sp, #24]
   11458:	str	w1, [x0, #36]
   1145c:	ldr	x0, [sp, #24]
   11460:	ldr	x0, [x0]
   11464:	ldr	x1, [x0]
   11468:	add	x1, x1, #0x1
   1146c:	str	x1, [x0]
   11470:	ldr	x0, [sp, #24]
   11474:	ldr	x0, [x0]
   11478:	ldr	w1, [x0, #8]
   1147c:	sub	w1, w1, #0x1
   11480:	str	w1, [x0, #8]
   11484:	ldr	x0, [sp, #24]
   11488:	ldr	x0, [x0]
   1148c:	ldr	w1, [x0, #12]
   11490:	add	w1, w1, #0x1
   11494:	str	w1, [x0, #12]
   11498:	ldr	x0, [sp, #24]
   1149c:	ldr	x0, [x0]
   114a0:	ldr	w0, [x0, #12]
   114a4:	cmp	w0, #0x0
   114a8:	b.ne	113a4 <BZ2_decompress@@Base+0x5060>  // b.any
   114ac:	ldr	x0, [sp, #24]
   114b0:	ldr	x0, [x0]
   114b4:	ldr	w1, [x0, #16]
   114b8:	add	w1, w1, #0x1
   114bc:	str	w1, [x0, #16]
   114c0:	b	113a4 <BZ2_decompress@@Base+0x5060>
   114c4:	mov	w0, #0xfffffffc            	// #-4
   114c8:	str	w0, [sp, #392]
   114cc:	b	119ec <BZ2_decompress@@Base+0x56a8>
   114d0:	ldr	x0, [sp, #24]
   114d4:	str	wzr, [x0, #3180]
   114d8:	ldr	x0, [sp, #24]
   114dc:	mov	w1, #0x2f                  	// #47
   114e0:	str	w1, [x0, #8]
   114e4:	ldr	x0, [sp, #24]
   114e8:	ldr	w0, [x0, #36]
   114ec:	cmp	w0, #0x7
   114f0:	b.le	11554 <BZ2_decompress@@Base+0x5210>
   114f4:	ldr	x0, [sp, #24]
   114f8:	ldr	w1, [x0, #32]
   114fc:	ldr	x0, [sp, #24]
   11500:	ldr	w0, [x0, #36]
   11504:	sub	w0, w0, #0x8
   11508:	lsr	w0, w1, w0
   1150c:	and	w0, w0, #0xff
   11510:	str	w0, [sp, #60]
   11514:	ldr	x0, [sp, #24]
   11518:	ldr	w0, [x0, #36]
   1151c:	sub	w1, w0, #0x8
   11520:	ldr	x0, [sp, #24]
   11524:	str	w1, [x0, #36]
   11528:	ldr	w0, [sp, #60]
   1152c:	strb	w0, [sp, #399]
   11530:	nop
   11534:	ldr	x0, [sp, #24]
   11538:	ldr	w0, [x0, #3180]
   1153c:	lsl	w1, w0, #8
   11540:	ldrb	w0, [sp, #399]
   11544:	orr	w1, w1, w0
   11548:	ldr	x0, [sp, #24]
   1154c:	str	w1, [x0, #3180]
   11550:	b	11614 <BZ2_decompress@@Base+0x52d0>
   11554:	ldr	x0, [sp, #24]
   11558:	ldr	x0, [x0]
   1155c:	ldr	w0, [x0, #8]
   11560:	cmp	w0, #0x0
   11564:	b.ne	11570 <BZ2_decompress@@Base+0x522c>  // b.any
   11568:	str	wzr, [sp, #392]
   1156c:	b	119ec <BZ2_decompress@@Base+0x56a8>
   11570:	ldr	x0, [sp, #24]
   11574:	ldr	w0, [x0, #32]
   11578:	lsl	w0, w0, #8
   1157c:	ldr	x1, [sp, #24]
   11580:	ldr	x1, [x1]
   11584:	ldr	x1, [x1]
   11588:	ldrb	w1, [x1]
   1158c:	orr	w1, w0, w1
   11590:	ldr	x0, [sp, #24]
   11594:	str	w1, [x0, #32]
   11598:	ldr	x0, [sp, #24]
   1159c:	ldr	w0, [x0, #36]
   115a0:	add	w1, w0, #0x8
   115a4:	ldr	x0, [sp, #24]
   115a8:	str	w1, [x0, #36]
   115ac:	ldr	x0, [sp, #24]
   115b0:	ldr	x0, [x0]
   115b4:	ldr	x1, [x0]
   115b8:	add	x1, x1, #0x1
   115bc:	str	x1, [x0]
   115c0:	ldr	x0, [sp, #24]
   115c4:	ldr	x0, [x0]
   115c8:	ldr	w1, [x0, #8]
   115cc:	sub	w1, w1, #0x1
   115d0:	str	w1, [x0, #8]
   115d4:	ldr	x0, [sp, #24]
   115d8:	ldr	x0, [x0]
   115dc:	ldr	w1, [x0, #12]
   115e0:	add	w1, w1, #0x1
   115e4:	str	w1, [x0, #12]
   115e8:	ldr	x0, [sp, #24]
   115ec:	ldr	x0, [x0]
   115f0:	ldr	w0, [x0, #12]
   115f4:	cmp	w0, #0x0
   115f8:	b.ne	114e4 <BZ2_decompress@@Base+0x51a0>  // b.any
   115fc:	ldr	x0, [sp, #24]
   11600:	ldr	x0, [x0]
   11604:	ldr	w1, [x0, #16]
   11608:	add	w1, w1, #0x1
   1160c:	str	w1, [x0, #16]
   11610:	b	114e4 <BZ2_decompress@@Base+0x51a0>
   11614:	ldr	x0, [sp, #24]
   11618:	mov	w1, #0x30                  	// #48
   1161c:	str	w1, [x0, #8]
   11620:	ldr	x0, [sp, #24]
   11624:	ldr	w0, [x0, #36]
   11628:	cmp	w0, #0x7
   1162c:	b.le	11690 <BZ2_decompress@@Base+0x534c>
   11630:	ldr	x0, [sp, #24]
   11634:	ldr	w1, [x0, #32]
   11638:	ldr	x0, [sp, #24]
   1163c:	ldr	w0, [x0, #36]
   11640:	sub	w0, w0, #0x8
   11644:	lsr	w0, w1, w0
   11648:	and	w0, w0, #0xff
   1164c:	str	w0, [sp, #56]
   11650:	ldr	x0, [sp, #24]
   11654:	ldr	w0, [x0, #36]
   11658:	sub	w1, w0, #0x8
   1165c:	ldr	x0, [sp, #24]
   11660:	str	w1, [x0, #36]
   11664:	ldr	w0, [sp, #56]
   11668:	strb	w0, [sp, #399]
   1166c:	nop
   11670:	ldr	x0, [sp, #24]
   11674:	ldr	w0, [x0, #3180]
   11678:	lsl	w1, w0, #8
   1167c:	ldrb	w0, [sp, #399]
   11680:	orr	w1, w1, w0
   11684:	ldr	x0, [sp, #24]
   11688:	str	w1, [x0, #3180]
   1168c:	b	11750 <BZ2_decompress@@Base+0x540c>
   11690:	ldr	x0, [sp, #24]
   11694:	ldr	x0, [x0]
   11698:	ldr	w0, [x0, #8]
   1169c:	cmp	w0, #0x0
   116a0:	b.ne	116ac <BZ2_decompress@@Base+0x5368>  // b.any
   116a4:	str	wzr, [sp, #392]
   116a8:	b	119ec <BZ2_decompress@@Base+0x56a8>
   116ac:	ldr	x0, [sp, #24]
   116b0:	ldr	w0, [x0, #32]
   116b4:	lsl	w0, w0, #8
   116b8:	ldr	x1, [sp, #24]
   116bc:	ldr	x1, [x1]
   116c0:	ldr	x1, [x1]
   116c4:	ldrb	w1, [x1]
   116c8:	orr	w1, w0, w1
   116cc:	ldr	x0, [sp, #24]
   116d0:	str	w1, [x0, #32]
   116d4:	ldr	x0, [sp, #24]
   116d8:	ldr	w0, [x0, #36]
   116dc:	add	w1, w0, #0x8
   116e0:	ldr	x0, [sp, #24]
   116e4:	str	w1, [x0, #36]
   116e8:	ldr	x0, [sp, #24]
   116ec:	ldr	x0, [x0]
   116f0:	ldr	x1, [x0]
   116f4:	add	x1, x1, #0x1
   116f8:	str	x1, [x0]
   116fc:	ldr	x0, [sp, #24]
   11700:	ldr	x0, [x0]
   11704:	ldr	w1, [x0, #8]
   11708:	sub	w1, w1, #0x1
   1170c:	str	w1, [x0, #8]
   11710:	ldr	x0, [sp, #24]
   11714:	ldr	x0, [x0]
   11718:	ldr	w1, [x0, #12]
   1171c:	add	w1, w1, #0x1
   11720:	str	w1, [x0, #12]
   11724:	ldr	x0, [sp, #24]
   11728:	ldr	x0, [x0]
   1172c:	ldr	w0, [x0, #12]
   11730:	cmp	w0, #0x0
   11734:	b.ne	11620 <BZ2_decompress@@Base+0x52dc>  // b.any
   11738:	ldr	x0, [sp, #24]
   1173c:	ldr	x0, [x0]
   11740:	ldr	w1, [x0, #16]
   11744:	add	w1, w1, #0x1
   11748:	str	w1, [x0, #16]
   1174c:	b	11620 <BZ2_decompress@@Base+0x52dc>
   11750:	ldr	x0, [sp, #24]
   11754:	mov	w1, #0x31                  	// #49
   11758:	str	w1, [x0, #8]
   1175c:	ldr	x0, [sp, #24]
   11760:	ldr	w0, [x0, #36]
   11764:	cmp	w0, #0x7
   11768:	b.le	117cc <BZ2_decompress@@Base+0x5488>
   1176c:	ldr	x0, [sp, #24]
   11770:	ldr	w1, [x0, #32]
   11774:	ldr	x0, [sp, #24]
   11778:	ldr	w0, [x0, #36]
   1177c:	sub	w0, w0, #0x8
   11780:	lsr	w0, w1, w0
   11784:	and	w0, w0, #0xff
   11788:	str	w0, [sp, #52]
   1178c:	ldr	x0, [sp, #24]
   11790:	ldr	w0, [x0, #36]
   11794:	sub	w1, w0, #0x8
   11798:	ldr	x0, [sp, #24]
   1179c:	str	w1, [x0, #36]
   117a0:	ldr	w0, [sp, #52]
   117a4:	strb	w0, [sp, #399]
   117a8:	nop
   117ac:	ldr	x0, [sp, #24]
   117b0:	ldr	w0, [x0, #3180]
   117b4:	lsl	w1, w0, #8
   117b8:	ldrb	w0, [sp, #399]
   117bc:	orr	w1, w1, w0
   117c0:	ldr	x0, [sp, #24]
   117c4:	str	w1, [x0, #3180]
   117c8:	b	1188c <BZ2_decompress@@Base+0x5548>
   117cc:	ldr	x0, [sp, #24]
   117d0:	ldr	x0, [x0]
   117d4:	ldr	w0, [x0, #8]
   117d8:	cmp	w0, #0x0
   117dc:	b.ne	117e8 <BZ2_decompress@@Base+0x54a4>  // b.any
   117e0:	str	wzr, [sp, #392]
   117e4:	b	119ec <BZ2_decompress@@Base+0x56a8>
   117e8:	ldr	x0, [sp, #24]
   117ec:	ldr	w0, [x0, #32]
   117f0:	lsl	w0, w0, #8
   117f4:	ldr	x1, [sp, #24]
   117f8:	ldr	x1, [x1]
   117fc:	ldr	x1, [x1]
   11800:	ldrb	w1, [x1]
   11804:	orr	w1, w0, w1
   11808:	ldr	x0, [sp, #24]
   1180c:	str	w1, [x0, #32]
   11810:	ldr	x0, [sp, #24]
   11814:	ldr	w0, [x0, #36]
   11818:	add	w1, w0, #0x8
   1181c:	ldr	x0, [sp, #24]
   11820:	str	w1, [x0, #36]
   11824:	ldr	x0, [sp, #24]
   11828:	ldr	x0, [x0]
   1182c:	ldr	x1, [x0]
   11830:	add	x1, x1, #0x1
   11834:	str	x1, [x0]
   11838:	ldr	x0, [sp, #24]
   1183c:	ldr	x0, [x0]
   11840:	ldr	w1, [x0, #8]
   11844:	sub	w1, w1, #0x1
   11848:	str	w1, [x0, #8]
   1184c:	ldr	x0, [sp, #24]
   11850:	ldr	x0, [x0]
   11854:	ldr	w1, [x0, #12]
   11858:	add	w1, w1, #0x1
   1185c:	str	w1, [x0, #12]
   11860:	ldr	x0, [sp, #24]
   11864:	ldr	x0, [x0]
   11868:	ldr	w0, [x0, #12]
   1186c:	cmp	w0, #0x0
   11870:	b.ne	1175c <BZ2_decompress@@Base+0x5418>  // b.any
   11874:	ldr	x0, [sp, #24]
   11878:	ldr	x0, [x0]
   1187c:	ldr	w1, [x0, #16]
   11880:	add	w1, w1, #0x1
   11884:	str	w1, [x0, #16]
   11888:	b	1175c <BZ2_decompress@@Base+0x5418>
   1188c:	ldr	x0, [sp, #24]
   11890:	mov	w1, #0x32                  	// #50
   11894:	str	w1, [x0, #8]
   11898:	ldr	x0, [sp, #24]
   1189c:	ldr	w0, [x0, #36]
   118a0:	cmp	w0, #0x7
   118a4:	b.le	1191c <BZ2_decompress@@Base+0x55d8>
   118a8:	ldr	x0, [sp, #24]
   118ac:	ldr	w1, [x0, #32]
   118b0:	ldr	x0, [sp, #24]
   118b4:	ldr	w0, [x0, #36]
   118b8:	sub	w0, w0, #0x8
   118bc:	lsr	w0, w1, w0
   118c0:	and	w0, w0, #0xff
   118c4:	str	w0, [sp, #48]
   118c8:	ldr	x0, [sp, #24]
   118cc:	ldr	w0, [x0, #36]
   118d0:	sub	w1, w0, #0x8
   118d4:	ldr	x0, [sp, #24]
   118d8:	str	w1, [x0, #36]
   118dc:	ldr	w0, [sp, #48]
   118e0:	strb	w0, [sp, #399]
   118e4:	nop
   118e8:	ldr	x0, [sp, #24]
   118ec:	ldr	w0, [x0, #3180]
   118f0:	lsl	w1, w0, #8
   118f4:	ldrb	w0, [sp, #399]
   118f8:	orr	w1, w1, w0
   118fc:	ldr	x0, [sp, #24]
   11900:	str	w1, [x0, #3180]
   11904:	ldr	x0, [sp, #24]
   11908:	mov	w1, #0x1                   	// #1
   1190c:	str	w1, [x0, #8]
   11910:	mov	w0, #0x4                   	// #4
   11914:	str	w0, [sp, #392]
   11918:	b	119ec <BZ2_decompress@@Base+0x56a8>
   1191c:	ldr	x0, [sp, #24]
   11920:	ldr	x0, [x0]
   11924:	ldr	w0, [x0, #8]
   11928:	cmp	w0, #0x0
   1192c:	b.ne	11938 <BZ2_decompress@@Base+0x55f4>  // b.any
   11930:	str	wzr, [sp, #392]
   11934:	b	119ec <BZ2_decompress@@Base+0x56a8>
   11938:	ldr	x0, [sp, #24]
   1193c:	ldr	w0, [x0, #32]
   11940:	lsl	w0, w0, #8
   11944:	ldr	x1, [sp, #24]
   11948:	ldr	x1, [x1]
   1194c:	ldr	x1, [x1]
   11950:	ldrb	w1, [x1]
   11954:	orr	w1, w0, w1
   11958:	ldr	x0, [sp, #24]
   1195c:	str	w1, [x0, #32]
   11960:	ldr	x0, [sp, #24]
   11964:	ldr	w0, [x0, #36]
   11968:	add	w1, w0, #0x8
   1196c:	ldr	x0, [sp, #24]
   11970:	str	w1, [x0, #36]
   11974:	ldr	x0, [sp, #24]
   11978:	ldr	x0, [x0]
   1197c:	ldr	x1, [x0]
   11980:	add	x1, x1, #0x1
   11984:	str	x1, [x0]
   11988:	ldr	x0, [sp, #24]
   1198c:	ldr	x0, [x0]
   11990:	ldr	w1, [x0, #8]
   11994:	sub	w1, w1, #0x1
   11998:	str	w1, [x0, #8]
   1199c:	ldr	x0, [sp, #24]
   119a0:	ldr	x0, [x0]
   119a4:	ldr	w1, [x0, #12]
   119a8:	add	w1, w1, #0x1
   119ac:	str	w1, [x0, #12]
   119b0:	ldr	x0, [sp, #24]
   119b4:	ldr	x0, [x0]
   119b8:	ldr	w0, [x0, #12]
   119bc:	cmp	w0, #0x0
   119c0:	b.ne	11898 <BZ2_decompress@@Base+0x5554>  // b.any
   119c4:	ldr	x0, [sp, #24]
   119c8:	ldr	x0, [x0]
   119cc:	ldr	w1, [x0, #16]
   119d0:	add	w1, w1, #0x1
   119d4:	str	w1, [x0, #16]
   119d8:	b	11898 <BZ2_decompress@@Base+0x5554>
   119dc:	mov	w0, #0xfa1                 	// #4001
   119e0:	bl	1720 <BZ2_bz__AssertH__fail@plt>
   119e4:	mov	w0, #0xfa2                 	// #4002
   119e8:	bl	1720 <BZ2_bz__AssertH__fail@plt>
   119ec:	ldr	x0, [sp, #24]
   119f0:	add	x0, x0, #0xc, lsl #12
   119f4:	ldr	w1, [sp, #380]
   119f8:	str	w1, [x0, #14884]
   119fc:	ldr	x0, [sp, #24]
   11a00:	add	x0, x0, #0xc, lsl #12
   11a04:	ldr	w1, [sp, #376]
   11a08:	str	w1, [x0, #14888]
   11a0c:	ldr	x0, [sp, #24]
   11a10:	add	x0, x0, #0xc, lsl #12
   11a14:	ldr	w1, [sp, #372]
   11a18:	str	w1, [x0, #14892]
   11a1c:	ldr	x0, [sp, #24]
   11a20:	add	x0, x0, #0xc, lsl #12
   11a24:	ldr	w1, [sp, #368]
   11a28:	str	w1, [x0, #14896]
   11a2c:	ldr	x0, [sp, #24]
   11a30:	add	x0, x0, #0xc, lsl #12
   11a34:	ldr	w1, [sp, #364]
   11a38:	str	w1, [x0, #14900]
   11a3c:	ldr	x0, [sp, #24]
   11a40:	add	x0, x0, #0xc, lsl #12
   11a44:	ldr	w1, [sp, #360]
   11a48:	str	w1, [x0, #14904]
   11a4c:	ldr	x0, [sp, #24]
   11a50:	add	x0, x0, #0xc, lsl #12
   11a54:	ldr	w1, [sp, #356]
   11a58:	str	w1, [x0, #14908]
   11a5c:	ldr	x0, [sp, #24]
   11a60:	add	x0, x0, #0xc, lsl #12
   11a64:	ldr	w1, [sp, #352]
   11a68:	str	w1, [x0, #14912]
   11a6c:	ldr	x0, [sp, #24]
   11a70:	add	x0, x0, #0xc, lsl #12
   11a74:	ldr	w1, [sp, #348]
   11a78:	str	w1, [x0, #14916]
   11a7c:	ldr	x0, [sp, #24]
   11a80:	add	x0, x0, #0xc, lsl #12
   11a84:	ldr	w1, [sp, #344]
   11a88:	str	w1, [x0, #14920]
   11a8c:	ldr	x0, [sp, #24]
   11a90:	add	x0, x0, #0xc, lsl #12
   11a94:	ldr	w1, [sp, #340]
   11a98:	str	w1, [x0, #14924]
   11a9c:	ldr	x0, [sp, #24]
   11aa0:	add	x0, x0, #0xc, lsl #12
   11aa4:	ldr	w1, [sp, #336]
   11aa8:	str	w1, [x0, #14928]
   11aac:	ldr	x0, [sp, #24]
   11ab0:	add	x0, x0, #0xc, lsl #12
   11ab4:	ldr	w1, [sp, #332]
   11ab8:	str	w1, [x0, #14932]
   11abc:	ldr	x0, [sp, #24]
   11ac0:	add	x0, x0, #0xc, lsl #12
   11ac4:	ldr	w1, [sp, #328]
   11ac8:	str	w1, [x0, #14936]
   11acc:	ldr	x0, [sp, #24]
   11ad0:	add	x0, x0, #0xc, lsl #12
   11ad4:	ldr	w1, [sp, #324]
   11ad8:	str	w1, [x0, #14940]
   11adc:	ldr	x0, [sp, #24]
   11ae0:	add	x0, x0, #0xc, lsl #12
   11ae4:	ldr	w1, [sp, #228]
   11ae8:	str	w1, [x0, #14944]
   11aec:	ldr	x0, [sp, #24]
   11af0:	add	x0, x0, #0xc, lsl #12
   11af4:	ldr	w1, [sp, #320]
   11af8:	str	w1, [x0, #14948]
   11afc:	ldr	x0, [sp, #24]
   11b00:	add	x0, x0, #0xc, lsl #12
   11b04:	ldr	w1, [sp, #316]
   11b08:	str	w1, [x0, #14952]
   11b0c:	ldr	x0, [sp, #24]
   11b10:	add	x0, x0, #0xc, lsl #12
   11b14:	ldr	w1, [sp, #312]
   11b18:	str	w1, [x0, #14956]
   11b1c:	ldr	x0, [sp, #24]
   11b20:	add	x0, x0, #0xc, lsl #12
   11b24:	ldr	w1, [sp, #308]
   11b28:	str	w1, [x0, #14960]
   11b2c:	ldr	x0, [sp, #24]
   11b30:	add	x0, x0, #0xc, lsl #12
   11b34:	ldr	w1, [sp, #304]
   11b38:	str	w1, [x0, #14964]
   11b3c:	ldr	x0, [sp, #24]
   11b40:	add	x0, x0, #0x8, lsl #12
   11b44:	ldr	x1, [sp, #296]
   11b48:	str	x1, [x0, #31352]
   11b4c:	ldr	x0, [sp, #24]
   11b50:	add	x0, x0, #0x8, lsl #12
   11b54:	ldr	x1, [sp, #288]
   11b58:	str	x1, [x0, #31360]
   11b5c:	ldr	x0, [sp, #24]
   11b60:	add	x0, x0, #0x8, lsl #12
   11b64:	ldr	x1, [sp, #280]
   11b68:	str	x1, [x0, #31368]
   11b6c:	ldr	w0, [sp, #392]
   11b70:	ldp	x29, x30, [sp], #400
   11b74:	ret

0000000000011b78 <BZ2_bz__AssertH__fail@@Base>:
   11b78:	stp	x29, x30, [sp, #-48]!
   11b7c:	mov	x29, sp
   11b80:	str	x19, [sp, #16]
   11b84:	str	w0, [sp, #44]
   11b88:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   11b8c:	ldr	x0, [x0, #4016]
   11b90:	ldr	x19, [x0]
   11b94:	bl	14f0 <BZ2_bzlibVersion@plt>
   11b98:	mov	x3, x0
   11b9c:	ldr	w2, [sp, #44]
   11ba0:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   11ba4:	add	x1, x0, #0x288
   11ba8:	mov	x0, x19
   11bac:	bl	1730 <fprintf@plt>
   11bb0:	ldr	w0, [sp, #44]
   11bb4:	cmp	w0, #0x3ef
   11bb8:	b.ne	11be0 <BZ2_bz__AssertH__fail@@Base+0x68>  // b.any
   11bbc:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   11bc0:	ldr	x0, [x0, #4016]
   11bc4:	ldr	x0, [x0]
   11bc8:	mov	x3, x0
   11bcc:	mov	x2, #0x420                 	// #1056
   11bd0:	mov	x1, #0x1                   	// #1
   11bd4:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   11bd8:	add	x0, x0, #0x428
   11bdc:	bl	16d0 <fwrite@plt>
   11be0:	mov	w0, #0x3                   	// #3
   11be4:	bl	14d0 <exit@plt>
   11be8:	mov	w0, #0x1                   	// #1
   11bec:	ret
   11bf0:	stp	x29, x30, [sp, #-48]!
   11bf4:	mov	x29, sp
   11bf8:	str	x0, [sp, #24]
   11bfc:	str	w1, [sp, #20]
   11c00:	str	w2, [sp, #16]
   11c04:	ldr	w1, [sp, #20]
   11c08:	ldr	w0, [sp, #16]
   11c0c:	mul	w0, w1, w0
   11c10:	sxtw	x0, w0
   11c14:	bl	1520 <malloc@plt>
   11c18:	str	x0, [sp, #40]
   11c1c:	ldr	x0, [sp, #40]
   11c20:	ldp	x29, x30, [sp], #48
   11c24:	ret
   11c28:	stp	x29, x30, [sp, #-32]!
   11c2c:	mov	x29, sp
   11c30:	str	x0, [sp, #24]
   11c34:	str	x1, [sp, #16]
   11c38:	ldr	x0, [sp, #16]
   11c3c:	cmp	x0, #0x0
   11c40:	b.eq	11c4c <BZ2_bz__AssertH__fail@@Base+0xd4>  // b.none
   11c44:	ldr	x0, [sp, #16]
   11c48:	bl	1660 <free@plt>
   11c4c:	nop
   11c50:	ldp	x29, x30, [sp], #32
   11c54:	ret
   11c58:	sub	sp, sp, #0x20
   11c5c:	str	x0, [sp, #8]
   11c60:	ldr	x0, [sp, #8]
   11c64:	str	wzr, [x0, #108]
   11c68:	ldr	x0, [sp, #8]
   11c6c:	str	wzr, [x0, #116]
   11c70:	ldr	x0, [sp, #8]
   11c74:	str	wzr, [x0, #120]
   11c78:	ldr	x0, [sp, #8]
   11c7c:	mov	w1, #0xffffffff            	// #-1
   11c80:	str	w1, [x0, #648]
   11c84:	str	wzr, [sp, #28]
   11c88:	b	11ca8 <BZ2_bz__AssertH__fail@@Base+0x130>
   11c8c:	ldr	x1, [sp, #8]
   11c90:	ldrsw	x0, [sp, #28]
   11c94:	add	x0, x1, x0
   11c98:	strb	wzr, [x0, #128]
   11c9c:	ldr	w0, [sp, #28]
   11ca0:	add	w0, w0, #0x1
   11ca4:	str	w0, [sp, #28]
   11ca8:	ldr	w0, [sp, #28]
   11cac:	cmp	w0, #0xff
   11cb0:	b.le	11c8c <BZ2_bz__AssertH__fail@@Base+0x114>
   11cb4:	ldr	x0, [sp, #8]
   11cb8:	ldr	w0, [x0, #660]
   11cbc:	add	w1, w0, #0x1
   11cc0:	ldr	x0, [sp, #8]
   11cc4:	str	w1, [x0, #660]
   11cc8:	nop
   11ccc:	add	sp, sp, #0x20
   11cd0:	ret
   11cd4:	sub	sp, sp, #0x10
   11cd8:	str	x0, [sp, #8]
   11cdc:	ldr	x0, [sp, #8]
   11ce0:	mov	w1, #0x100                 	// #256
   11ce4:	str	w1, [x0, #92]
   11ce8:	ldr	x0, [sp, #8]
   11cec:	str	wzr, [x0, #96]
   11cf0:	nop
   11cf4:	add	sp, sp, #0x10
   11cf8:	ret
   11cfc:	sub	sp, sp, #0x10
   11d00:	str	x0, [sp, #8]
   11d04:	ldr	x0, [sp, #8]
   11d08:	ldr	w0, [x0, #92]
   11d0c:	cmp	w0, #0xff
   11d10:	b.hi	11d2c <BZ2_bz__AssertH__fail@@Base+0x1b4>  // b.pmore
   11d14:	ldr	x0, [sp, #8]
   11d18:	ldr	w0, [x0, #96]
   11d1c:	cmp	w0, #0x0
   11d20:	b.le	11d2c <BZ2_bz__AssertH__fail@@Base+0x1b4>
   11d24:	mov	w0, #0x0                   	// #0
   11d28:	b	11d30 <BZ2_bz__AssertH__fail@@Base+0x1b8>
   11d2c:	mov	w0, #0x1                   	// #1
   11d30:	add	sp, sp, #0x10
   11d34:	ret

0000000000011d38 <BZ2_bzCompressInit@@Base>:
   11d38:	stp	x29, x30, [sp, #-64]!
   11d3c:	mov	x29, sp
   11d40:	str	x0, [sp, #40]
   11d44:	str	w1, [sp, #36]
   11d48:	str	w2, [sp, #32]
   11d4c:	str	w3, [sp, #28]
   11d50:	bl	11be8 <BZ2_bz__AssertH__fail@@Base+0x70>
   11d54:	cmp	w0, #0x0
   11d58:	b.ne	11d64 <BZ2_bzCompressInit@@Base+0x2c>  // b.any
   11d5c:	mov	w0, #0xfffffff7            	// #-9
   11d60:	b	120d0 <BZ2_bzCompressInit@@Base+0x398>
   11d64:	ldr	x0, [sp, #40]
   11d68:	cmp	x0, #0x0
   11d6c:	b.eq	11da0 <BZ2_bzCompressInit@@Base+0x68>  // b.none
   11d70:	ldr	w0, [sp, #36]
   11d74:	cmp	w0, #0x0
   11d78:	b.le	11da0 <BZ2_bzCompressInit@@Base+0x68>
   11d7c:	ldr	w0, [sp, #36]
   11d80:	cmp	w0, #0x9
   11d84:	b.gt	11da0 <BZ2_bzCompressInit@@Base+0x68>
   11d88:	ldr	w0, [sp, #28]
   11d8c:	cmp	w0, #0x0
   11d90:	b.lt	11da0 <BZ2_bzCompressInit@@Base+0x68>  // b.tstop
   11d94:	ldr	w0, [sp, #28]
   11d98:	cmp	w0, #0xfa
   11d9c:	b.le	11da8 <BZ2_bzCompressInit@@Base+0x70>
   11da0:	mov	w0, #0xfffffffe            	// #-2
   11da4:	b	120d0 <BZ2_bzCompressInit@@Base+0x398>
   11da8:	ldr	w0, [sp, #28]
   11dac:	cmp	w0, #0x0
   11db0:	b.ne	11dbc <BZ2_bzCompressInit@@Base+0x84>  // b.any
   11db4:	mov	w0, #0x1e                  	// #30
   11db8:	str	w0, [sp, #28]
   11dbc:	ldr	x0, [sp, #40]
   11dc0:	ldr	x0, [x0, #56]
   11dc4:	cmp	x0, #0x0
   11dc8:	b.ne	11ddc <BZ2_bzCompressInit@@Base+0xa4>  // b.any
   11dcc:	ldr	x0, [sp, #40]
   11dd0:	adrp	x1, 11000 <BZ2_decompress@@Base+0x4cbc>
   11dd4:	add	x1, x1, #0xbf0
   11dd8:	str	x1, [x0, #56]
   11ddc:	ldr	x0, [sp, #40]
   11de0:	ldr	x0, [x0, #64]
   11de4:	cmp	x0, #0x0
   11de8:	b.ne	11dfc <BZ2_bzCompressInit@@Base+0xc4>  // b.any
   11dec:	ldr	x0, [sp, #40]
   11df0:	adrp	x1, 11000 <BZ2_decompress@@Base+0x4cbc>
   11df4:	add	x1, x1, #0xc28
   11df8:	str	x1, [x0, #64]
   11dfc:	ldr	x0, [sp, #40]
   11e00:	ldr	x3, [x0, #56]
   11e04:	ldr	x0, [sp, #40]
   11e08:	ldr	x0, [x0, #72]
   11e0c:	mov	w2, #0x1                   	// #1
   11e10:	mov	w1, #0xd9d8                	// #55768
   11e14:	blr	x3
   11e18:	str	x0, [sp, #56]
   11e1c:	ldr	x0, [sp, #56]
   11e20:	cmp	x0, #0x0
   11e24:	b.ne	11e30 <BZ2_bzCompressInit@@Base+0xf8>  // b.any
   11e28:	mov	w0, #0xfffffffd            	// #-3
   11e2c:	b	120d0 <BZ2_bzCompressInit@@Base+0x398>
   11e30:	ldr	x0, [sp, #56]
   11e34:	ldr	x1, [sp, #40]
   11e38:	str	x1, [x0]
   11e3c:	ldr	x0, [sp, #56]
   11e40:	str	xzr, [x0, #24]
   11e44:	ldr	x0, [sp, #56]
   11e48:	str	xzr, [x0, #32]
   11e4c:	ldr	x0, [sp, #56]
   11e50:	str	xzr, [x0, #40]
   11e54:	ldr	w1, [sp, #36]
   11e58:	mov	w0, #0x86a0                	// #34464
   11e5c:	movk	w0, #0x1, lsl #16
   11e60:	mul	w0, w1, w0
   11e64:	str	w0, [sp, #52]
   11e68:	ldr	x0, [sp, #40]
   11e6c:	ldr	x3, [x0, #56]
   11e70:	ldr	x0, [sp, #40]
   11e74:	ldr	x0, [x0, #72]
   11e78:	ldrsw	x1, [sp, #52]
   11e7c:	lsl	w1, w1, #2
   11e80:	mov	w2, #0x1                   	// #1
   11e84:	blr	x3
   11e88:	mov	x1, x0
   11e8c:	ldr	x0, [sp, #56]
   11e90:	str	x1, [x0, #24]
   11e94:	ldr	x0, [sp, #40]
   11e98:	ldr	x3, [x0, #56]
   11e9c:	ldr	x0, [sp, #40]
   11ea0:	ldr	x4, [x0, #72]
   11ea4:	ldr	w0, [sp, #52]
   11ea8:	add	w0, w0, #0x22
   11eac:	sxtw	x0, w0
   11eb0:	lsl	w0, w0, #2
   11eb4:	mov	w2, #0x1                   	// #1
   11eb8:	mov	w1, w0
   11ebc:	mov	x0, x4
   11ec0:	blr	x3
   11ec4:	mov	x1, x0
   11ec8:	ldr	x0, [sp, #56]
   11ecc:	str	x1, [x0, #32]
   11ed0:	ldr	x0, [sp, #40]
   11ed4:	ldr	x3, [x0, #56]
   11ed8:	ldr	x0, [sp, #40]
   11edc:	ldr	x0, [x0, #72]
   11ee0:	mov	w2, #0x1                   	// #1
   11ee4:	mov	w1, #0x40004               	// #262148
   11ee8:	blr	x3
   11eec:	mov	x1, x0
   11ef0:	ldr	x0, [sp, #56]
   11ef4:	str	x1, [x0, #40]
   11ef8:	ldr	x0, [sp, #56]
   11efc:	ldr	x0, [x0, #24]
   11f00:	cmp	x0, #0x0
   11f04:	b.eq	11f28 <BZ2_bzCompressInit@@Base+0x1f0>  // b.none
   11f08:	ldr	x0, [sp, #56]
   11f0c:	ldr	x0, [x0, #32]
   11f10:	cmp	x0, #0x0
   11f14:	b.eq	11f28 <BZ2_bzCompressInit@@Base+0x1f0>  // b.none
   11f18:	ldr	x0, [sp, #56]
   11f1c:	ldr	x0, [x0, #40]
   11f20:	cmp	x0, #0x0
   11f24:	b.ne	11ff0 <BZ2_bzCompressInit@@Base+0x2b8>  // b.any
   11f28:	ldr	x0, [sp, #56]
   11f2c:	ldr	x0, [x0, #24]
   11f30:	cmp	x0, #0x0
   11f34:	b.eq	11f5c <BZ2_bzCompressInit@@Base+0x224>  // b.none
   11f38:	ldr	x0, [sp, #40]
   11f3c:	ldr	x2, [x0, #64]
   11f40:	ldr	x0, [sp, #40]
   11f44:	ldr	x3, [x0, #72]
   11f48:	ldr	x0, [sp, #56]
   11f4c:	ldr	x0, [x0, #24]
   11f50:	mov	x1, x0
   11f54:	mov	x0, x3
   11f58:	blr	x2
   11f5c:	ldr	x0, [sp, #56]
   11f60:	ldr	x0, [x0, #32]
   11f64:	cmp	x0, #0x0
   11f68:	b.eq	11f90 <BZ2_bzCompressInit@@Base+0x258>  // b.none
   11f6c:	ldr	x0, [sp, #40]
   11f70:	ldr	x2, [x0, #64]
   11f74:	ldr	x0, [sp, #40]
   11f78:	ldr	x3, [x0, #72]
   11f7c:	ldr	x0, [sp, #56]
   11f80:	ldr	x0, [x0, #32]
   11f84:	mov	x1, x0
   11f88:	mov	x0, x3
   11f8c:	blr	x2
   11f90:	ldr	x0, [sp, #56]
   11f94:	ldr	x0, [x0, #40]
   11f98:	cmp	x0, #0x0
   11f9c:	b.eq	11fc4 <BZ2_bzCompressInit@@Base+0x28c>  // b.none
   11fa0:	ldr	x0, [sp, #40]
   11fa4:	ldr	x2, [x0, #64]
   11fa8:	ldr	x0, [sp, #40]
   11fac:	ldr	x3, [x0, #72]
   11fb0:	ldr	x0, [sp, #56]
   11fb4:	ldr	x0, [x0, #40]
   11fb8:	mov	x1, x0
   11fbc:	mov	x0, x3
   11fc0:	blr	x2
   11fc4:	ldr	x0, [sp, #56]
   11fc8:	cmp	x0, #0x0
   11fcc:	b.eq	11fe8 <BZ2_bzCompressInit@@Base+0x2b0>  // b.none
   11fd0:	ldr	x0, [sp, #40]
   11fd4:	ldr	x2, [x0, #64]
   11fd8:	ldr	x0, [sp, #40]
   11fdc:	ldr	x0, [x0, #72]
   11fe0:	ldr	x1, [sp, #56]
   11fe4:	blr	x2
   11fe8:	mov	w0, #0xfffffffd            	// #-3
   11fec:	b	120d0 <BZ2_bzCompressInit@@Base+0x398>
   11ff0:	ldr	x0, [sp, #56]
   11ff4:	str	wzr, [x0, #660]
   11ff8:	ldr	x0, [sp, #56]
   11ffc:	mov	w1, #0x2                   	// #2
   12000:	str	w1, [x0, #12]
   12004:	ldr	x0, [sp, #56]
   12008:	mov	w1, #0x2                   	// #2
   1200c:	str	w1, [x0, #8]
   12010:	ldr	x0, [sp, #56]
   12014:	str	wzr, [x0, #652]
   12018:	ldr	x0, [sp, #56]
   1201c:	ldr	w1, [sp, #36]
   12020:	str	w1, [x0, #664]
   12024:	ldr	w1, [sp, #36]
   12028:	mov	w0, #0x86a0                	// #34464
   1202c:	movk	w0, #0x1, lsl #16
   12030:	mul	w0, w1, w0
   12034:	sub	w1, w0, #0x13
   12038:	ldr	x0, [sp, #56]
   1203c:	str	w1, [x0, #112]
   12040:	ldr	x0, [sp, #56]
   12044:	ldr	w1, [sp, #32]
   12048:	str	w1, [x0, #656]
   1204c:	ldr	x0, [sp, #56]
   12050:	ldr	w1, [sp, #28]
   12054:	str	w1, [x0, #88]
   12058:	ldr	x0, [sp, #56]
   1205c:	ldr	x1, [x0, #32]
   12060:	ldr	x0, [sp, #56]
   12064:	str	x1, [x0, #64]
   12068:	ldr	x0, [sp, #56]
   1206c:	ldr	x1, [x0, #24]
   12070:	ldr	x0, [sp, #56]
   12074:	str	x1, [x0, #72]
   12078:	ldr	x0, [sp, #56]
   1207c:	str	xzr, [x0, #80]
   12080:	ldr	x0, [sp, #56]
   12084:	ldr	x1, [x0, #24]
   12088:	ldr	x0, [sp, #56]
   1208c:	str	x1, [x0, #56]
   12090:	ldr	x0, [sp, #40]
   12094:	ldr	x1, [sp, #56]
   12098:	str	x1, [x0, #48]
   1209c:	ldr	x0, [sp, #40]
   120a0:	str	wzr, [x0, #12]
   120a4:	ldr	x0, [sp, #40]
   120a8:	str	wzr, [x0, #16]
   120ac:	ldr	x0, [sp, #40]
   120b0:	str	wzr, [x0, #36]
   120b4:	ldr	x0, [sp, #40]
   120b8:	str	wzr, [x0, #40]
   120bc:	ldr	x0, [sp, #56]
   120c0:	bl	11cd4 <BZ2_bz__AssertH__fail@@Base+0x15c>
   120c4:	ldr	x0, [sp, #56]
   120c8:	bl	11c58 <BZ2_bz__AssertH__fail@@Base+0xe0>
   120cc:	mov	w0, #0x0                   	// #0
   120d0:	ldp	x29, x30, [sp], #64
   120d4:	ret
   120d8:	sub	sp, sp, #0x20
   120dc:	str	x0, [sp, #8]
   120e0:	ldr	x0, [sp, #8]
   120e4:	ldr	w0, [x0, #92]
   120e8:	strb	w0, [sp, #27]
   120ec:	str	wzr, [sp, #28]
   120f0:	b	1213c <BZ2_bzCompressInit@@Base+0x404>
   120f4:	ldr	x0, [sp, #8]
   120f8:	ldr	w0, [x0, #648]
   120fc:	lsl	w1, w0, #8
   12100:	ldr	x0, [sp, #8]
   12104:	ldr	w0, [x0, #648]
   12108:	lsr	w2, w0, #24
   1210c:	ldrb	w0, [sp, #27]
   12110:	eor	w2, w2, w0
   12114:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   12118:	ldr	x0, [x0, #4024]
   1211c:	mov	w2, w2
   12120:	ldr	w0, [x0, x2, lsl #2]
   12124:	eor	w1, w1, w0
   12128:	ldr	x0, [sp, #8]
   1212c:	str	w1, [x0, #648]
   12130:	ldr	w0, [sp, #28]
   12134:	add	w0, w0, #0x1
   12138:	str	w0, [sp, #28]
   1213c:	ldr	x0, [sp, #8]
   12140:	ldr	w0, [x0, #96]
   12144:	ldr	w1, [sp, #28]
   12148:	cmp	w1, w0
   1214c:	b.lt	120f4 <BZ2_bzCompressInit@@Base+0x3bc>  // b.tstop
   12150:	ldr	x0, [sp, #8]
   12154:	ldr	w0, [x0, #92]
   12158:	ldr	x1, [sp, #8]
   1215c:	mov	w0, w0
   12160:	add	x0, x1, x0
   12164:	mov	w1, #0x1                   	// #1
   12168:	strb	w1, [x0, #128]
   1216c:	ldr	x0, [sp, #8]
   12170:	ldr	w0, [x0, #96]
   12174:	cmp	w0, #0x3
   12178:	b.eq	1223c <BZ2_bzCompressInit@@Base+0x504>  // b.none
   1217c:	cmp	w0, #0x3
   12180:	b.gt	122dc <BZ2_bzCompressInit@@Base+0x5a4>
   12184:	cmp	w0, #0x1
   12188:	b.eq	12198 <BZ2_bzCompressInit@@Base+0x460>  // b.none
   1218c:	cmp	w0, #0x2
   12190:	b.eq	121d0 <BZ2_bzCompressInit@@Base+0x498>  // b.none
   12194:	b	122dc <BZ2_bzCompressInit@@Base+0x5a4>
   12198:	ldr	x0, [sp, #8]
   1219c:	ldr	x1, [x0, #64]
   121a0:	ldr	x0, [sp, #8]
   121a4:	ldr	w0, [x0, #108]
   121a8:	sxtw	x0, w0
   121ac:	add	x0, x1, x0
   121b0:	ldrb	w1, [sp, #27]
   121b4:	strb	w1, [x0]
   121b8:	ldr	x0, [sp, #8]
   121bc:	ldr	w0, [x0, #108]
   121c0:	add	w1, w0, #0x1
   121c4:	ldr	x0, [sp, #8]
   121c8:	str	w1, [x0, #108]
   121cc:	b	12414 <BZ2_bzCompressInit@@Base+0x6dc>
   121d0:	ldr	x0, [sp, #8]
   121d4:	ldr	x1, [x0, #64]
   121d8:	ldr	x0, [sp, #8]
   121dc:	ldr	w0, [x0, #108]
   121e0:	sxtw	x0, w0
   121e4:	add	x0, x1, x0
   121e8:	ldrb	w1, [sp, #27]
   121ec:	strb	w1, [x0]
   121f0:	ldr	x0, [sp, #8]
   121f4:	ldr	w0, [x0, #108]
   121f8:	add	w1, w0, #0x1
   121fc:	ldr	x0, [sp, #8]
   12200:	str	w1, [x0, #108]
   12204:	ldr	x0, [sp, #8]
   12208:	ldr	x1, [x0, #64]
   1220c:	ldr	x0, [sp, #8]
   12210:	ldr	w0, [x0, #108]
   12214:	sxtw	x0, w0
   12218:	add	x0, x1, x0
   1221c:	ldrb	w1, [sp, #27]
   12220:	strb	w1, [x0]
   12224:	ldr	x0, [sp, #8]
   12228:	ldr	w0, [x0, #108]
   1222c:	add	w1, w0, #0x1
   12230:	ldr	x0, [sp, #8]
   12234:	str	w1, [x0, #108]
   12238:	b	12414 <BZ2_bzCompressInit@@Base+0x6dc>
   1223c:	ldr	x0, [sp, #8]
   12240:	ldr	x1, [x0, #64]
   12244:	ldr	x0, [sp, #8]
   12248:	ldr	w0, [x0, #108]
   1224c:	sxtw	x0, w0
   12250:	add	x0, x1, x0
   12254:	ldrb	w1, [sp, #27]
   12258:	strb	w1, [x0]
   1225c:	ldr	x0, [sp, #8]
   12260:	ldr	w0, [x0, #108]
   12264:	add	w1, w0, #0x1
   12268:	ldr	x0, [sp, #8]
   1226c:	str	w1, [x0, #108]
   12270:	ldr	x0, [sp, #8]
   12274:	ldr	x1, [x0, #64]
   12278:	ldr	x0, [sp, #8]
   1227c:	ldr	w0, [x0, #108]
   12280:	sxtw	x0, w0
   12284:	add	x0, x1, x0
   12288:	ldrb	w1, [sp, #27]
   1228c:	strb	w1, [x0]
   12290:	ldr	x0, [sp, #8]
   12294:	ldr	w0, [x0, #108]
   12298:	add	w1, w0, #0x1
   1229c:	ldr	x0, [sp, #8]
   122a0:	str	w1, [x0, #108]
   122a4:	ldr	x0, [sp, #8]
   122a8:	ldr	x1, [x0, #64]
   122ac:	ldr	x0, [sp, #8]
   122b0:	ldr	w0, [x0, #108]
   122b4:	sxtw	x0, w0
   122b8:	add	x0, x1, x0
   122bc:	ldrb	w1, [sp, #27]
   122c0:	strb	w1, [x0]
   122c4:	ldr	x0, [sp, #8]
   122c8:	ldr	w0, [x0, #108]
   122cc:	add	w1, w0, #0x1
   122d0:	ldr	x0, [sp, #8]
   122d4:	str	w1, [x0, #108]
   122d8:	b	12414 <BZ2_bzCompressInit@@Base+0x6dc>
   122dc:	ldr	x0, [sp, #8]
   122e0:	ldr	w0, [x0, #96]
   122e4:	sub	w0, w0, #0x4
   122e8:	ldr	x1, [sp, #8]
   122ec:	sxtw	x0, w0
   122f0:	add	x0, x1, x0
   122f4:	mov	w1, #0x1                   	// #1
   122f8:	strb	w1, [x0, #128]
   122fc:	ldr	x0, [sp, #8]
   12300:	ldr	x1, [x0, #64]
   12304:	ldr	x0, [sp, #8]
   12308:	ldr	w0, [x0, #108]
   1230c:	sxtw	x0, w0
   12310:	add	x0, x1, x0
   12314:	ldrb	w1, [sp, #27]
   12318:	strb	w1, [x0]
   1231c:	ldr	x0, [sp, #8]
   12320:	ldr	w0, [x0, #108]
   12324:	add	w1, w0, #0x1
   12328:	ldr	x0, [sp, #8]
   1232c:	str	w1, [x0, #108]
   12330:	ldr	x0, [sp, #8]
   12334:	ldr	x1, [x0, #64]
   12338:	ldr	x0, [sp, #8]
   1233c:	ldr	w0, [x0, #108]
   12340:	sxtw	x0, w0
   12344:	add	x0, x1, x0
   12348:	ldrb	w1, [sp, #27]
   1234c:	strb	w1, [x0]
   12350:	ldr	x0, [sp, #8]
   12354:	ldr	w0, [x0, #108]
   12358:	add	w1, w0, #0x1
   1235c:	ldr	x0, [sp, #8]
   12360:	str	w1, [x0, #108]
   12364:	ldr	x0, [sp, #8]
   12368:	ldr	x1, [x0, #64]
   1236c:	ldr	x0, [sp, #8]
   12370:	ldr	w0, [x0, #108]
   12374:	sxtw	x0, w0
   12378:	add	x0, x1, x0
   1237c:	ldrb	w1, [sp, #27]
   12380:	strb	w1, [x0]
   12384:	ldr	x0, [sp, #8]
   12388:	ldr	w0, [x0, #108]
   1238c:	add	w1, w0, #0x1
   12390:	ldr	x0, [sp, #8]
   12394:	str	w1, [x0, #108]
   12398:	ldr	x0, [sp, #8]
   1239c:	ldr	x1, [x0, #64]
   123a0:	ldr	x0, [sp, #8]
   123a4:	ldr	w0, [x0, #108]
   123a8:	sxtw	x0, w0
   123ac:	add	x0, x1, x0
   123b0:	ldrb	w1, [sp, #27]
   123b4:	strb	w1, [x0]
   123b8:	ldr	x0, [sp, #8]
   123bc:	ldr	w0, [x0, #108]
   123c0:	add	w1, w0, #0x1
   123c4:	ldr	x0, [sp, #8]
   123c8:	str	w1, [x0, #108]
   123cc:	ldr	x0, [sp, #8]
   123d0:	ldr	w0, [x0, #96]
   123d4:	and	w1, w0, #0xff
   123d8:	ldr	x0, [sp, #8]
   123dc:	ldr	x2, [x0, #64]
   123e0:	ldr	x0, [sp, #8]
   123e4:	ldr	w0, [x0, #108]
   123e8:	sxtw	x0, w0
   123ec:	add	x0, x2, x0
   123f0:	sub	w1, w1, #0x4
   123f4:	and	w1, w1, #0xff
   123f8:	strb	w1, [x0]
   123fc:	ldr	x0, [sp, #8]
   12400:	ldr	w0, [x0, #108]
   12404:	add	w1, w0, #0x1
   12408:	ldr	x0, [sp, #8]
   1240c:	str	w1, [x0, #108]
   12410:	nop
   12414:	nop
   12418:	add	sp, sp, #0x20
   1241c:	ret
   12420:	stp	x29, x30, [sp, #-32]!
   12424:	mov	x29, sp
   12428:	str	x0, [sp, #24]
   1242c:	ldr	x0, [sp, #24]
   12430:	ldr	w0, [x0, #92]
   12434:	cmp	w0, #0xff
   12438:	b.hi	12444 <BZ2_bzCompressInit@@Base+0x70c>  // b.pmore
   1243c:	ldr	x0, [sp, #24]
   12440:	bl	120d8 <BZ2_bzCompressInit@@Base+0x3a0>
   12444:	ldr	x0, [sp, #24]
   12448:	bl	11cd4 <BZ2_bz__AssertH__fail@@Base+0x15c>
   1244c:	nop
   12450:	ldp	x29, x30, [sp], #32
   12454:	ret
   12458:	stp	x29, x30, [sp, #-64]!
   1245c:	mov	x29, sp
   12460:	str	x0, [sp, #24]
   12464:	strb	wzr, [sp, #63]
   12468:	ldr	x0, [sp, #24]
   1246c:	ldr	w0, [x0, #8]
   12470:	cmp	w0, #0x2
   12474:	b.ne	12660 <BZ2_bzCompressInit@@Base+0x928>  // b.any
   12478:	ldr	x0, [sp, #24]
   1247c:	ldr	w1, [x0, #108]
   12480:	ldr	x0, [sp, #24]
   12484:	ldr	w0, [x0, #112]
   12488:	cmp	w1, w0
   1248c:	b.ge	1286c <BZ2_bzCompressInit@@Base+0xb34>  // b.tcont
   12490:	ldr	x0, [sp, #24]
   12494:	ldr	x0, [x0]
   12498:	ldr	w0, [x0, #8]
   1249c:	cmp	w0, #0x0
   124a0:	b.eq	12874 <BZ2_bzCompressInit@@Base+0xb3c>  // b.none
   124a4:	mov	w0, #0x1                   	// #1
   124a8:	strb	w0, [sp, #63]
   124ac:	ldr	x0, [sp, #24]
   124b0:	ldr	x0, [x0]
   124b4:	ldr	x0, [x0]
   124b8:	ldrb	w0, [x0]
   124bc:	str	w0, [sp, #48]
   124c0:	ldr	x0, [sp, #24]
   124c4:	ldr	w0, [x0, #92]
   124c8:	ldr	w1, [sp, #48]
   124cc:	cmp	w1, w0
   124d0:	b.eq	1258c <BZ2_bzCompressInit@@Base+0x854>  // b.none
   124d4:	ldr	x0, [sp, #24]
   124d8:	ldr	w0, [x0, #96]
   124dc:	cmp	w0, #0x1
   124e0:	b.ne	1258c <BZ2_bzCompressInit@@Base+0x854>  // b.any
   124e4:	ldr	x0, [sp, #24]
   124e8:	ldr	w0, [x0, #92]
   124ec:	strb	w0, [sp, #47]
   124f0:	ldr	x0, [sp, #24]
   124f4:	ldr	w0, [x0, #648]
   124f8:	lsl	w1, w0, #8
   124fc:	ldr	x0, [sp, #24]
   12500:	ldr	w0, [x0, #648]
   12504:	lsr	w2, w0, #24
   12508:	ldrb	w0, [sp, #47]
   1250c:	eor	w2, w2, w0
   12510:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   12514:	ldr	x0, [x0, #4024]
   12518:	mov	w2, w2
   1251c:	ldr	w0, [x0, x2, lsl #2]
   12520:	eor	w1, w1, w0
   12524:	ldr	x0, [sp, #24]
   12528:	str	w1, [x0, #648]
   1252c:	ldr	x0, [sp, #24]
   12530:	ldr	w0, [x0, #92]
   12534:	ldr	x1, [sp, #24]
   12538:	mov	w0, w0
   1253c:	add	x0, x1, x0
   12540:	mov	w1, #0x1                   	// #1
   12544:	strb	w1, [x0, #128]
   12548:	ldr	x0, [sp, #24]
   1254c:	ldr	x1, [x0, #64]
   12550:	ldr	x0, [sp, #24]
   12554:	ldr	w0, [x0, #108]
   12558:	sxtw	x0, w0
   1255c:	add	x0, x1, x0
   12560:	ldrb	w1, [sp, #47]
   12564:	strb	w1, [x0]
   12568:	ldr	x0, [sp, #24]
   1256c:	ldr	w0, [x0, #108]
   12570:	add	w1, w0, #0x1
   12574:	ldr	x0, [sp, #24]
   12578:	str	w1, [x0, #108]
   1257c:	ldr	x0, [sp, #24]
   12580:	ldr	w1, [sp, #48]
   12584:	str	w1, [x0, #92]
   12588:	b	125f8 <BZ2_bzCompressInit@@Base+0x8c0>
   1258c:	ldr	x0, [sp, #24]
   12590:	ldr	w0, [x0, #92]
   12594:	ldr	w1, [sp, #48]
   12598:	cmp	w1, w0
   1259c:	b.ne	125b0 <BZ2_bzCompressInit@@Base+0x878>  // b.any
   125a0:	ldr	x0, [sp, #24]
   125a4:	ldr	w0, [x0, #96]
   125a8:	cmp	w0, #0xff
   125ac:	b.ne	125e4 <BZ2_bzCompressInit@@Base+0x8ac>  // b.any
   125b0:	ldr	x0, [sp, #24]
   125b4:	ldr	w0, [x0, #92]
   125b8:	cmp	w0, #0xff
   125bc:	b.hi	125c8 <BZ2_bzCompressInit@@Base+0x890>  // b.pmore
   125c0:	ldr	x0, [sp, #24]
   125c4:	bl	120d8 <BZ2_bzCompressInit@@Base+0x3a0>
   125c8:	ldr	x0, [sp, #24]
   125cc:	ldr	w1, [sp, #48]
   125d0:	str	w1, [x0, #92]
   125d4:	ldr	x0, [sp, #24]
   125d8:	mov	w1, #0x1                   	// #1
   125dc:	str	w1, [x0, #96]
   125e0:	b	125f8 <BZ2_bzCompressInit@@Base+0x8c0>
   125e4:	ldr	x0, [sp, #24]
   125e8:	ldr	w0, [x0, #96]
   125ec:	add	w1, w0, #0x1
   125f0:	ldr	x0, [sp, #24]
   125f4:	str	w1, [x0, #96]
   125f8:	ldr	x0, [sp, #24]
   125fc:	ldr	x0, [x0]
   12600:	ldr	x1, [x0]
   12604:	add	x1, x1, #0x1
   12608:	str	x1, [x0]
   1260c:	ldr	x0, [sp, #24]
   12610:	ldr	x0, [x0]
   12614:	ldr	w1, [x0, #8]
   12618:	sub	w1, w1, #0x1
   1261c:	str	w1, [x0, #8]
   12620:	ldr	x0, [sp, #24]
   12624:	ldr	x0, [x0]
   12628:	ldr	w1, [x0, #12]
   1262c:	add	w1, w1, #0x1
   12630:	str	w1, [x0, #12]
   12634:	ldr	x0, [sp, #24]
   12638:	ldr	x0, [x0]
   1263c:	ldr	w0, [x0, #12]
   12640:	cmp	w0, #0x0
   12644:	b.ne	12478 <BZ2_bzCompressInit@@Base+0x740>  // b.any
   12648:	ldr	x0, [sp, #24]
   1264c:	ldr	x0, [x0]
   12650:	ldr	w1, [x0, #16]
   12654:	add	w1, w1, #0x1
   12658:	str	w1, [x0, #16]
   1265c:	b	12478 <BZ2_bzCompressInit@@Base+0x740>
   12660:	ldr	x0, [sp, #24]
   12664:	ldr	w1, [x0, #108]
   12668:	ldr	x0, [sp, #24]
   1266c:	ldr	w0, [x0, #112]
   12670:	cmp	w1, w0
   12674:	b.ge	1287c <BZ2_bzCompressInit@@Base+0xb44>  // b.tcont
   12678:	ldr	x0, [sp, #24]
   1267c:	ldr	x0, [x0]
   12680:	ldr	w0, [x0, #8]
   12684:	cmp	w0, #0x0
   12688:	b.eq	12884 <BZ2_bzCompressInit@@Base+0xb4c>  // b.none
   1268c:	ldr	x0, [sp, #24]
   12690:	ldr	w0, [x0, #16]
   12694:	cmp	w0, #0x0
   12698:	b.eq	1288c <BZ2_bzCompressInit@@Base+0xb54>  // b.none
   1269c:	mov	w0, #0x1                   	// #1
   126a0:	strb	w0, [sp, #63]
   126a4:	ldr	x0, [sp, #24]
   126a8:	ldr	x0, [x0]
   126ac:	ldr	x0, [x0]
   126b0:	ldrb	w0, [x0]
   126b4:	str	w0, [sp, #56]
   126b8:	ldr	x0, [sp, #24]
   126bc:	ldr	w0, [x0, #92]
   126c0:	ldr	w1, [sp, #56]
   126c4:	cmp	w1, w0
   126c8:	b.eq	12784 <BZ2_bzCompressInit@@Base+0xa4c>  // b.none
   126cc:	ldr	x0, [sp, #24]
   126d0:	ldr	w0, [x0, #96]
   126d4:	cmp	w0, #0x1
   126d8:	b.ne	12784 <BZ2_bzCompressInit@@Base+0xa4c>  // b.any
   126dc:	ldr	x0, [sp, #24]
   126e0:	ldr	w0, [x0, #92]
   126e4:	strb	w0, [sp, #55]
   126e8:	ldr	x0, [sp, #24]
   126ec:	ldr	w0, [x0, #648]
   126f0:	lsl	w1, w0, #8
   126f4:	ldr	x0, [sp, #24]
   126f8:	ldr	w0, [x0, #648]
   126fc:	lsr	w2, w0, #24
   12700:	ldrb	w0, [sp, #55]
   12704:	eor	w2, w2, w0
   12708:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   1270c:	ldr	x0, [x0, #4024]
   12710:	mov	w2, w2
   12714:	ldr	w0, [x0, x2, lsl #2]
   12718:	eor	w1, w1, w0
   1271c:	ldr	x0, [sp, #24]
   12720:	str	w1, [x0, #648]
   12724:	ldr	x0, [sp, #24]
   12728:	ldr	w0, [x0, #92]
   1272c:	ldr	x1, [sp, #24]
   12730:	mov	w0, w0
   12734:	add	x0, x1, x0
   12738:	mov	w1, #0x1                   	// #1
   1273c:	strb	w1, [x0, #128]
   12740:	ldr	x0, [sp, #24]
   12744:	ldr	x1, [x0, #64]
   12748:	ldr	x0, [sp, #24]
   1274c:	ldr	w0, [x0, #108]
   12750:	sxtw	x0, w0
   12754:	add	x0, x1, x0
   12758:	ldrb	w1, [sp, #55]
   1275c:	strb	w1, [x0]
   12760:	ldr	x0, [sp, #24]
   12764:	ldr	w0, [x0, #108]
   12768:	add	w1, w0, #0x1
   1276c:	ldr	x0, [sp, #24]
   12770:	str	w1, [x0, #108]
   12774:	ldr	x0, [sp, #24]
   12778:	ldr	w1, [sp, #56]
   1277c:	str	w1, [x0, #92]
   12780:	b	127f0 <BZ2_bzCompressInit@@Base+0xab8>
   12784:	ldr	x0, [sp, #24]
   12788:	ldr	w0, [x0, #92]
   1278c:	ldr	w1, [sp, #56]
   12790:	cmp	w1, w0
   12794:	b.ne	127a8 <BZ2_bzCompressInit@@Base+0xa70>  // b.any
   12798:	ldr	x0, [sp, #24]
   1279c:	ldr	w0, [x0, #96]
   127a0:	cmp	w0, #0xff
   127a4:	b.ne	127dc <BZ2_bzCompressInit@@Base+0xaa4>  // b.any
   127a8:	ldr	x0, [sp, #24]
   127ac:	ldr	w0, [x0, #92]
   127b0:	cmp	w0, #0xff
   127b4:	b.hi	127c0 <BZ2_bzCompressInit@@Base+0xa88>  // b.pmore
   127b8:	ldr	x0, [sp, #24]
   127bc:	bl	120d8 <BZ2_bzCompressInit@@Base+0x3a0>
   127c0:	ldr	x0, [sp, #24]
   127c4:	ldr	w1, [sp, #56]
   127c8:	str	w1, [x0, #92]
   127cc:	ldr	x0, [sp, #24]
   127d0:	mov	w1, #0x1                   	// #1
   127d4:	str	w1, [x0, #96]
   127d8:	b	127f0 <BZ2_bzCompressInit@@Base+0xab8>
   127dc:	ldr	x0, [sp, #24]
   127e0:	ldr	w0, [x0, #96]
   127e4:	add	w1, w0, #0x1
   127e8:	ldr	x0, [sp, #24]
   127ec:	str	w1, [x0, #96]
   127f0:	ldr	x0, [sp, #24]
   127f4:	ldr	x0, [x0]
   127f8:	ldr	x1, [x0]
   127fc:	add	x1, x1, #0x1
   12800:	str	x1, [x0]
   12804:	ldr	x0, [sp, #24]
   12808:	ldr	x0, [x0]
   1280c:	ldr	w1, [x0, #8]
   12810:	sub	w1, w1, #0x1
   12814:	str	w1, [x0, #8]
   12818:	ldr	x0, [sp, #24]
   1281c:	ldr	x0, [x0]
   12820:	ldr	w1, [x0, #12]
   12824:	add	w1, w1, #0x1
   12828:	str	w1, [x0, #12]
   1282c:	ldr	x0, [sp, #24]
   12830:	ldr	x0, [x0]
   12834:	ldr	w0, [x0, #12]
   12838:	cmp	w0, #0x0
   1283c:	b.ne	12854 <BZ2_bzCompressInit@@Base+0xb1c>  // b.any
   12840:	ldr	x0, [sp, #24]
   12844:	ldr	x0, [x0]
   12848:	ldr	w1, [x0, #16]
   1284c:	add	w1, w1, #0x1
   12850:	str	w1, [x0, #16]
   12854:	ldr	x0, [sp, #24]
   12858:	ldr	w0, [x0, #16]
   1285c:	sub	w1, w0, #0x1
   12860:	ldr	x0, [sp, #24]
   12864:	str	w1, [x0, #16]
   12868:	b	12660 <BZ2_bzCompressInit@@Base+0x928>
   1286c:	nop
   12870:	b	12890 <BZ2_bzCompressInit@@Base+0xb58>
   12874:	nop
   12878:	b	12890 <BZ2_bzCompressInit@@Base+0xb58>
   1287c:	nop
   12880:	b	12890 <BZ2_bzCompressInit@@Base+0xb58>
   12884:	nop
   12888:	b	12890 <BZ2_bzCompressInit@@Base+0xb58>
   1288c:	nop
   12890:	ldrb	w0, [sp, #63]
   12894:	ldp	x29, x30, [sp], #64
   12898:	ret
   1289c:	sub	sp, sp, #0x20
   128a0:	str	x0, [sp, #8]
   128a4:	strb	wzr, [sp, #31]
   128a8:	ldr	x0, [sp, #8]
   128ac:	ldr	x0, [x0]
   128b0:	ldr	w0, [x0, #32]
   128b4:	cmp	w0, #0x0
   128b8:	b.eq	12984 <BZ2_bzCompressInit@@Base+0xc4c>  // b.none
   128bc:	ldr	x0, [sp, #8]
   128c0:	ldr	w1, [x0, #120]
   128c4:	ldr	x0, [sp, #8]
   128c8:	ldr	w0, [x0, #116]
   128cc:	cmp	w1, w0
   128d0:	b.ge	1298c <BZ2_bzCompressInit@@Base+0xc54>  // b.tcont
   128d4:	mov	w0, #0x1                   	// #1
   128d8:	strb	w0, [sp, #31]
   128dc:	ldr	x0, [sp, #8]
   128e0:	ldr	x1, [x0, #80]
   128e4:	ldr	x0, [sp, #8]
   128e8:	ldr	w0, [x0, #120]
   128ec:	sxtw	x0, w0
   128f0:	add	x1, x1, x0
   128f4:	ldr	x0, [sp, #8]
   128f8:	ldr	x0, [x0]
   128fc:	ldr	x0, [x0, #24]
   12900:	ldrb	w1, [x1]
   12904:	strb	w1, [x0]
   12908:	ldr	x0, [sp, #8]
   1290c:	ldr	w0, [x0, #120]
   12910:	add	w1, w0, #0x1
   12914:	ldr	x0, [sp, #8]
   12918:	str	w1, [x0, #120]
   1291c:	ldr	x0, [sp, #8]
   12920:	ldr	x0, [x0]
   12924:	ldr	w1, [x0, #32]
   12928:	sub	w1, w1, #0x1
   1292c:	str	w1, [x0, #32]
   12930:	ldr	x0, [sp, #8]
   12934:	ldr	x0, [x0]
   12938:	ldr	x1, [x0, #24]
   1293c:	add	x1, x1, #0x1
   12940:	str	x1, [x0, #24]
   12944:	ldr	x0, [sp, #8]
   12948:	ldr	x0, [x0]
   1294c:	ldr	w1, [x0, #36]
   12950:	add	w1, w1, #0x1
   12954:	str	w1, [x0, #36]
   12958:	ldr	x0, [sp, #8]
   1295c:	ldr	x0, [x0]
   12960:	ldr	w0, [x0, #36]
   12964:	cmp	w0, #0x0
   12968:	b.ne	128a8 <BZ2_bzCompressInit@@Base+0xb70>  // b.any
   1296c:	ldr	x0, [sp, #8]
   12970:	ldr	x0, [x0]
   12974:	ldr	w1, [x0, #40]
   12978:	add	w1, w1, #0x1
   1297c:	str	w1, [x0, #40]
   12980:	b	128a8 <BZ2_bzCompressInit@@Base+0xb70>
   12984:	nop
   12988:	b	12990 <BZ2_bzCompressInit@@Base+0xc58>
   1298c:	nop
   12990:	ldrb	w0, [sp, #31]
   12994:	add	sp, sp, #0x20
   12998:	ret
   1299c:	stp	x29, x30, [sp, #-48]!
   129a0:	mov	x29, sp
   129a4:	str	x0, [sp, #24]
   129a8:	strb	wzr, [sp, #47]
   129ac:	strb	wzr, [sp, #46]
   129b0:	ldr	x0, [sp, #24]
   129b4:	ldr	x0, [x0, #48]
   129b8:	str	x0, [sp, #32]
   129bc:	ldr	x0, [sp, #32]
   129c0:	ldr	w0, [x0, #12]
   129c4:	cmp	w0, #0x1
   129c8:	b.ne	12a78 <BZ2_bzCompressInit@@Base+0xd40>  // b.any
   129cc:	ldr	x0, [sp, #32]
   129d0:	bl	1289c <BZ2_bzCompressInit@@Base+0xb64>
   129d4:	and	w1, w0, #0xff
   129d8:	ldrb	w0, [sp, #46]
   129dc:	orr	w0, w1, w0
   129e0:	strb	w0, [sp, #46]
   129e4:	ldr	x0, [sp, #32]
   129e8:	ldr	w1, [x0, #120]
   129ec:	ldr	x0, [sp, #32]
   129f0:	ldr	w0, [x0, #116]
   129f4:	cmp	w1, w0
   129f8:	b.lt	12b44 <BZ2_bzCompressInit@@Base+0xe0c>  // b.tstop
   129fc:	ldr	x0, [sp, #32]
   12a00:	ldr	w0, [x0, #8]
   12a04:	cmp	w0, #0x4
   12a08:	b.ne	12a30 <BZ2_bzCompressInit@@Base+0xcf8>  // b.any
   12a0c:	ldr	x0, [sp, #32]
   12a10:	ldr	w0, [x0, #16]
   12a14:	cmp	w0, #0x0
   12a18:	b.ne	12a30 <BZ2_bzCompressInit@@Base+0xcf8>  // b.any
   12a1c:	ldr	x0, [sp, #32]
   12a20:	bl	11cfc <BZ2_bz__AssertH__fail@@Base+0x184>
   12a24:	and	w0, w0, #0xff
   12a28:	cmp	w0, #0x0
   12a2c:	b.ne	12b4c <BZ2_bzCompressInit@@Base+0xe14>  // b.any
   12a30:	ldr	x0, [sp, #32]
   12a34:	bl	11c58 <BZ2_bz__AssertH__fail@@Base+0xe0>
   12a38:	ldr	x0, [sp, #32]
   12a3c:	mov	w1, #0x2                   	// #2
   12a40:	str	w1, [x0, #12]
   12a44:	ldr	x0, [sp, #32]
   12a48:	ldr	w0, [x0, #8]
   12a4c:	cmp	w0, #0x3
   12a50:	b.ne	12a78 <BZ2_bzCompressInit@@Base+0xd40>  // b.any
   12a54:	ldr	x0, [sp, #32]
   12a58:	ldr	w0, [x0, #16]
   12a5c:	cmp	w0, #0x0
   12a60:	b.ne	12a78 <BZ2_bzCompressInit@@Base+0xd40>  // b.any
   12a64:	ldr	x0, [sp, #32]
   12a68:	bl	11cfc <BZ2_bz__AssertH__fail@@Base+0x184>
   12a6c:	and	w0, w0, #0xff
   12a70:	cmp	w0, #0x0
   12a74:	b.ne	12b54 <BZ2_bzCompressInit@@Base+0xe1c>  // b.any
   12a78:	ldr	x0, [sp, #32]
   12a7c:	ldr	w0, [x0, #12]
   12a80:	cmp	w0, #0x2
   12a84:	b.ne	129bc <BZ2_bzCompressInit@@Base+0xc84>  // b.any
   12a88:	ldr	x0, [sp, #32]
   12a8c:	bl	12458 <BZ2_bzCompressInit@@Base+0x720>
   12a90:	and	w1, w0, #0xff
   12a94:	ldrb	w0, [sp, #47]
   12a98:	orr	w0, w1, w0
   12a9c:	strb	w0, [sp, #47]
   12aa0:	ldr	x0, [sp, #32]
   12aa4:	ldr	w0, [x0, #8]
   12aa8:	cmp	w0, #0x2
   12aac:	b.eq	12af8 <BZ2_bzCompressInit@@Base+0xdc0>  // b.none
   12ab0:	ldr	x0, [sp, #32]
   12ab4:	ldr	w0, [x0, #16]
   12ab8:	cmp	w0, #0x0
   12abc:	b.ne	12af8 <BZ2_bzCompressInit@@Base+0xdc0>  // b.any
   12ac0:	ldr	x0, [sp, #32]
   12ac4:	bl	12420 <BZ2_bzCompressInit@@Base+0x6e8>
   12ac8:	ldr	x0, [sp, #32]
   12acc:	ldr	w0, [x0, #8]
   12ad0:	cmp	w0, #0x4
   12ad4:	cset	w0, eq  // eq = none
   12ad8:	and	w0, w0, #0xff
   12adc:	mov	w1, w0
   12ae0:	ldr	x0, [sp, #32]
   12ae4:	bl	1630 <BZ2_compressBlock@plt>
   12ae8:	ldr	x0, [sp, #32]
   12aec:	mov	w1, #0x1                   	// #1
   12af0:	str	w1, [x0, #12]
   12af4:	b	12b40 <BZ2_bzCompressInit@@Base+0xe08>
   12af8:	ldr	x0, [sp, #32]
   12afc:	ldr	w1, [x0, #108]
   12b00:	ldr	x0, [sp, #32]
   12b04:	ldr	w0, [x0, #112]
   12b08:	cmp	w1, w0
   12b0c:	b.lt	12b2c <BZ2_bzCompressInit@@Base+0xdf4>  // b.tstop
   12b10:	mov	w1, #0x0                   	// #0
   12b14:	ldr	x0, [sp, #32]
   12b18:	bl	1630 <BZ2_compressBlock@plt>
   12b1c:	ldr	x0, [sp, #32]
   12b20:	mov	w1, #0x1                   	// #1
   12b24:	str	w1, [x0, #12]
   12b28:	b	129bc <BZ2_bzCompressInit@@Base+0xc84>
   12b2c:	ldr	x0, [sp, #32]
   12b30:	ldr	x0, [x0]
   12b34:	ldr	w0, [x0, #8]
   12b38:	cmp	w0, #0x0
   12b3c:	b.eq	12b5c <BZ2_bzCompressInit@@Base+0xe24>  // b.none
   12b40:	b	129bc <BZ2_bzCompressInit@@Base+0xc84>
   12b44:	nop
   12b48:	b	12b60 <BZ2_bzCompressInit@@Base+0xe28>
   12b4c:	nop
   12b50:	b	12b60 <BZ2_bzCompressInit@@Base+0xe28>
   12b54:	nop
   12b58:	b	12b60 <BZ2_bzCompressInit@@Base+0xe28>
   12b5c:	nop
   12b60:	ldrb	w0, [sp, #47]
   12b64:	cmp	w0, #0x0
   12b68:	b.ne	12b78 <BZ2_bzCompressInit@@Base+0xe40>  // b.any
   12b6c:	ldrb	w0, [sp, #46]
   12b70:	cmp	w0, #0x0
   12b74:	b.eq	12b80 <BZ2_bzCompressInit@@Base+0xe48>  // b.none
   12b78:	mov	w0, #0x1                   	// #1
   12b7c:	b	12b84 <BZ2_bzCompressInit@@Base+0xe4c>
   12b80:	mov	w0, #0x0                   	// #0
   12b84:	and	w0, w0, #0xff
   12b88:	ldp	x29, x30, [sp], #48
   12b8c:	ret

0000000000012b90 <BZ2_bzCompress@@Base>:
   12b90:	stp	x29, x30, [sp, #-48]!
   12b94:	mov	x29, sp
   12b98:	str	x0, [sp, #24]
   12b9c:	str	w1, [sp, #20]
   12ba0:	ldr	x0, [sp, #24]
   12ba4:	cmp	x0, #0x0
   12ba8:	b.ne	12bb4 <BZ2_bzCompress@@Base+0x24>  // b.any
   12bac:	mov	w0, #0xfffffffe            	// #-2
   12bb0:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12bb4:	ldr	x0, [sp, #24]
   12bb8:	ldr	x0, [x0, #48]
   12bbc:	str	x0, [sp, #40]
   12bc0:	ldr	x0, [sp, #40]
   12bc4:	cmp	x0, #0x0
   12bc8:	b.ne	12bd4 <BZ2_bzCompress@@Base+0x44>  // b.any
   12bcc:	mov	w0, #0xfffffffe            	// #-2
   12bd0:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12bd4:	ldr	x0, [sp, #40]
   12bd8:	ldr	x0, [x0]
   12bdc:	ldr	x1, [sp, #24]
   12be0:	cmp	x1, x0
   12be4:	b.eq	12bf0 <BZ2_bzCompress@@Base+0x60>  // b.none
   12be8:	mov	w0, #0xfffffffe            	// #-2
   12bec:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12bf0:	nop
   12bf4:	ldr	x0, [sp, #40]
   12bf8:	ldr	w0, [x0, #8]
   12bfc:	cmp	w0, #0x4
   12c00:	b.eq	12d68 <BZ2_bzCompress@@Base+0x1d8>  // b.none
   12c04:	cmp	w0, #0x4
   12c08:	b.gt	12e18 <BZ2_bzCompress@@Base+0x288>
   12c0c:	cmp	w0, #0x3
   12c10:	b.eq	12ccc <BZ2_bzCompress@@Base+0x13c>  // b.none
   12c14:	cmp	w0, #0x3
   12c18:	b.gt	12e18 <BZ2_bzCompress@@Base+0x288>
   12c1c:	cmp	w0, #0x1
   12c20:	b.eq	12c30 <BZ2_bzCompress@@Base+0xa0>  // b.none
   12c24:	cmp	w0, #0x2
   12c28:	b.eq	12c38 <BZ2_bzCompress@@Base+0xa8>  // b.none
   12c2c:	b	12e18 <BZ2_bzCompress@@Base+0x288>
   12c30:	mov	w0, #0xffffffff            	// #-1
   12c34:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12c38:	ldr	w0, [sp, #20]
   12c3c:	cmp	w0, #0x0
   12c40:	b.ne	12c6c <BZ2_bzCompress@@Base+0xdc>  // b.any
   12c44:	ldr	x0, [sp, #24]
   12c48:	bl	1299c <BZ2_bzCompressInit@@Base+0xc64>
   12c4c:	strb	w0, [sp, #39]
   12c50:	ldrb	w0, [sp, #39]
   12c54:	cmp	w0, #0x0
   12c58:	b.eq	12c64 <BZ2_bzCompress@@Base+0xd4>  // b.none
   12c5c:	mov	w0, #0x1                   	// #1
   12c60:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12c64:	mov	w0, #0xfffffffe            	// #-2
   12c68:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12c6c:	ldr	w0, [sp, #20]
   12c70:	cmp	w0, #0x1
   12c74:	b.ne	12c98 <BZ2_bzCompress@@Base+0x108>  // b.any
   12c78:	ldr	x0, [sp, #24]
   12c7c:	ldr	w1, [x0, #8]
   12c80:	ldr	x0, [sp, #40]
   12c84:	str	w1, [x0, #16]
   12c88:	ldr	x0, [sp, #40]
   12c8c:	mov	w1, #0x3                   	// #3
   12c90:	str	w1, [x0, #8]
   12c94:	b	12bf4 <BZ2_bzCompress@@Base+0x64>
   12c98:	ldr	w0, [sp, #20]
   12c9c:	cmp	w0, #0x2
   12ca0:	b.ne	12cc4 <BZ2_bzCompress@@Base+0x134>  // b.any
   12ca4:	ldr	x0, [sp, #24]
   12ca8:	ldr	w1, [x0, #8]
   12cac:	ldr	x0, [sp, #40]
   12cb0:	str	w1, [x0, #16]
   12cb4:	ldr	x0, [sp, #40]
   12cb8:	mov	w1, #0x4                   	// #4
   12cbc:	str	w1, [x0, #8]
   12cc0:	b	12bf4 <BZ2_bzCompress@@Base+0x64>
   12cc4:	mov	w0, #0xfffffffe            	// #-2
   12cc8:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12ccc:	ldr	w0, [sp, #20]
   12cd0:	cmp	w0, #0x1
   12cd4:	b.eq	12ce0 <BZ2_bzCompress@@Base+0x150>  // b.none
   12cd8:	mov	w0, #0xffffffff            	// #-1
   12cdc:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12ce0:	ldr	x0, [sp, #40]
   12ce4:	ldr	w1, [x0, #16]
   12ce8:	ldr	x0, [sp, #40]
   12cec:	ldr	x0, [x0]
   12cf0:	ldr	w0, [x0, #8]
   12cf4:	cmp	w1, w0
   12cf8:	b.eq	12d04 <BZ2_bzCompress@@Base+0x174>  // b.none
   12cfc:	mov	w0, #0xffffffff            	// #-1
   12d00:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12d04:	ldr	x0, [sp, #24]
   12d08:	bl	1299c <BZ2_bzCompressInit@@Base+0xc64>
   12d0c:	strb	w0, [sp, #39]
   12d10:	ldr	x0, [sp, #40]
   12d14:	ldr	w0, [x0, #16]
   12d18:	cmp	w0, #0x0
   12d1c:	b.ne	12d4c <BZ2_bzCompress@@Base+0x1bc>  // b.any
   12d20:	ldr	x0, [sp, #40]
   12d24:	bl	11cfc <BZ2_bz__AssertH__fail@@Base+0x184>
   12d28:	and	w0, w0, #0xff
   12d2c:	cmp	w0, #0x0
   12d30:	b.eq	12d4c <BZ2_bzCompress@@Base+0x1bc>  // b.none
   12d34:	ldr	x0, [sp, #40]
   12d38:	ldr	w1, [x0, #120]
   12d3c:	ldr	x0, [sp, #40]
   12d40:	ldr	w0, [x0, #116]
   12d44:	cmp	w1, w0
   12d48:	b.ge	12d54 <BZ2_bzCompress@@Base+0x1c4>  // b.tcont
   12d4c:	mov	w0, #0x2                   	// #2
   12d50:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12d54:	ldr	x0, [sp, #40]
   12d58:	mov	w1, #0x2                   	// #2
   12d5c:	str	w1, [x0, #8]
   12d60:	mov	w0, #0x1                   	// #1
   12d64:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12d68:	ldr	w0, [sp, #20]
   12d6c:	cmp	w0, #0x2
   12d70:	b.eq	12d7c <BZ2_bzCompress@@Base+0x1ec>  // b.none
   12d74:	mov	w0, #0xffffffff            	// #-1
   12d78:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12d7c:	ldr	x0, [sp, #40]
   12d80:	ldr	w1, [x0, #16]
   12d84:	ldr	x0, [sp, #40]
   12d88:	ldr	x0, [x0]
   12d8c:	ldr	w0, [x0, #8]
   12d90:	cmp	w1, w0
   12d94:	b.eq	12da0 <BZ2_bzCompress@@Base+0x210>  // b.none
   12d98:	mov	w0, #0xffffffff            	// #-1
   12d9c:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12da0:	ldr	x0, [sp, #24]
   12da4:	bl	1299c <BZ2_bzCompressInit@@Base+0xc64>
   12da8:	strb	w0, [sp, #39]
   12dac:	ldrb	w0, [sp, #39]
   12db0:	cmp	w0, #0x0
   12db4:	b.ne	12dc0 <BZ2_bzCompress@@Base+0x230>  // b.any
   12db8:	mov	w0, #0xffffffff            	// #-1
   12dbc:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12dc0:	ldr	x0, [sp, #40]
   12dc4:	ldr	w0, [x0, #16]
   12dc8:	cmp	w0, #0x0
   12dcc:	b.ne	12dfc <BZ2_bzCompress@@Base+0x26c>  // b.any
   12dd0:	ldr	x0, [sp, #40]
   12dd4:	bl	11cfc <BZ2_bz__AssertH__fail@@Base+0x184>
   12dd8:	and	w0, w0, #0xff
   12ddc:	cmp	w0, #0x0
   12de0:	b.eq	12dfc <BZ2_bzCompress@@Base+0x26c>  // b.none
   12de4:	ldr	x0, [sp, #40]
   12de8:	ldr	w1, [x0, #120]
   12dec:	ldr	x0, [sp, #40]
   12df0:	ldr	w0, [x0, #116]
   12df4:	cmp	w1, w0
   12df8:	b.ge	12e04 <BZ2_bzCompress@@Base+0x274>  // b.tcont
   12dfc:	mov	w0, #0x3                   	// #3
   12e00:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12e04:	ldr	x0, [sp, #40]
   12e08:	mov	w1, #0x1                   	// #1
   12e0c:	str	w1, [x0, #8]
   12e10:	mov	w0, #0x4                   	// #4
   12e14:	b	12e1c <BZ2_bzCompress@@Base+0x28c>
   12e18:	mov	w0, #0x0                   	// #0
   12e1c:	ldp	x29, x30, [sp], #48
   12e20:	ret

0000000000012e24 <BZ2_bzCompressEnd@@Base>:
   12e24:	stp	x29, x30, [sp, #-48]!
   12e28:	mov	x29, sp
   12e2c:	str	x0, [sp, #24]
   12e30:	ldr	x0, [sp, #24]
   12e34:	cmp	x0, #0x0
   12e38:	b.ne	12e44 <BZ2_bzCompressEnd@@Base+0x20>  // b.any
   12e3c:	mov	w0, #0xfffffffe            	// #-2
   12e40:	b	12f4c <BZ2_bzCompressEnd@@Base+0x128>
   12e44:	ldr	x0, [sp, #24]
   12e48:	ldr	x0, [x0, #48]
   12e4c:	str	x0, [sp, #40]
   12e50:	ldr	x0, [sp, #40]
   12e54:	cmp	x0, #0x0
   12e58:	b.ne	12e64 <BZ2_bzCompressEnd@@Base+0x40>  // b.any
   12e5c:	mov	w0, #0xfffffffe            	// #-2
   12e60:	b	12f4c <BZ2_bzCompressEnd@@Base+0x128>
   12e64:	ldr	x0, [sp, #40]
   12e68:	ldr	x0, [x0]
   12e6c:	ldr	x1, [sp, #24]
   12e70:	cmp	x1, x0
   12e74:	b.eq	12e80 <BZ2_bzCompressEnd@@Base+0x5c>  // b.none
   12e78:	mov	w0, #0xfffffffe            	// #-2
   12e7c:	b	12f4c <BZ2_bzCompressEnd@@Base+0x128>
   12e80:	ldr	x0, [sp, #40]
   12e84:	ldr	x0, [x0, #24]
   12e88:	cmp	x0, #0x0
   12e8c:	b.eq	12eb4 <BZ2_bzCompressEnd@@Base+0x90>  // b.none
   12e90:	ldr	x0, [sp, #24]
   12e94:	ldr	x2, [x0, #64]
   12e98:	ldr	x0, [sp, #24]
   12e9c:	ldr	x3, [x0, #72]
   12ea0:	ldr	x0, [sp, #40]
   12ea4:	ldr	x0, [x0, #24]
   12ea8:	mov	x1, x0
   12eac:	mov	x0, x3
   12eb0:	blr	x2
   12eb4:	ldr	x0, [sp, #40]
   12eb8:	ldr	x0, [x0, #32]
   12ebc:	cmp	x0, #0x0
   12ec0:	b.eq	12ee8 <BZ2_bzCompressEnd@@Base+0xc4>  // b.none
   12ec4:	ldr	x0, [sp, #24]
   12ec8:	ldr	x2, [x0, #64]
   12ecc:	ldr	x0, [sp, #24]
   12ed0:	ldr	x3, [x0, #72]
   12ed4:	ldr	x0, [sp, #40]
   12ed8:	ldr	x0, [x0, #32]
   12edc:	mov	x1, x0
   12ee0:	mov	x0, x3
   12ee4:	blr	x2
   12ee8:	ldr	x0, [sp, #40]
   12eec:	ldr	x0, [x0, #40]
   12ef0:	cmp	x0, #0x0
   12ef4:	b.eq	12f1c <BZ2_bzCompressEnd@@Base+0xf8>  // b.none
   12ef8:	ldr	x0, [sp, #24]
   12efc:	ldr	x2, [x0, #64]
   12f00:	ldr	x0, [sp, #24]
   12f04:	ldr	x3, [x0, #72]
   12f08:	ldr	x0, [sp, #40]
   12f0c:	ldr	x0, [x0, #40]
   12f10:	mov	x1, x0
   12f14:	mov	x0, x3
   12f18:	blr	x2
   12f1c:	ldr	x0, [sp, #24]
   12f20:	ldr	x2, [x0, #64]
   12f24:	ldr	x0, [sp, #24]
   12f28:	ldr	x3, [x0, #72]
   12f2c:	ldr	x0, [sp, #24]
   12f30:	ldr	x0, [x0, #48]
   12f34:	mov	x1, x0
   12f38:	mov	x0, x3
   12f3c:	blr	x2
   12f40:	ldr	x0, [sp, #24]
   12f44:	str	xzr, [x0, #48]
   12f48:	mov	w0, #0x0                   	// #0
   12f4c:	ldp	x29, x30, [sp], #48
   12f50:	ret

0000000000012f54 <BZ2_bzDecompressInit@@Base>:
   12f54:	stp	x29, x30, [sp, #-48]!
   12f58:	mov	x29, sp
   12f5c:	str	x0, [sp, #24]
   12f60:	str	w1, [sp, #20]
   12f64:	str	w2, [sp, #16]
   12f68:	bl	11be8 <BZ2_bz__AssertH__fail@@Base+0x70>
   12f6c:	cmp	w0, #0x0
   12f70:	b.ne	12f7c <BZ2_bzDecompressInit@@Base+0x28>  // b.any
   12f74:	mov	w0, #0xfffffff7            	// #-9
   12f78:	b	130e0 <BZ2_bzDecompressInit@@Base+0x18c>
   12f7c:	ldr	x0, [sp, #24]
   12f80:	cmp	x0, #0x0
   12f84:	b.ne	12f90 <BZ2_bzDecompressInit@@Base+0x3c>  // b.any
   12f88:	mov	w0, #0xfffffffe            	// #-2
   12f8c:	b	130e0 <BZ2_bzDecompressInit@@Base+0x18c>
   12f90:	ldr	w0, [sp, #16]
   12f94:	cmp	w0, #0x0
   12f98:	b.eq	12fb0 <BZ2_bzDecompressInit@@Base+0x5c>  // b.none
   12f9c:	ldr	w0, [sp, #16]
   12fa0:	cmp	w0, #0x1
   12fa4:	b.eq	12fb0 <BZ2_bzDecompressInit@@Base+0x5c>  // b.none
   12fa8:	mov	w0, #0xfffffffe            	// #-2
   12fac:	b	130e0 <BZ2_bzDecompressInit@@Base+0x18c>
   12fb0:	ldr	w0, [sp, #20]
   12fb4:	cmp	w0, #0x0
   12fb8:	b.lt	12fc8 <BZ2_bzDecompressInit@@Base+0x74>  // b.tstop
   12fbc:	ldr	w0, [sp, #20]
   12fc0:	cmp	w0, #0x4
   12fc4:	b.le	12fd0 <BZ2_bzDecompressInit@@Base+0x7c>
   12fc8:	mov	w0, #0xfffffffe            	// #-2
   12fcc:	b	130e0 <BZ2_bzDecompressInit@@Base+0x18c>
   12fd0:	ldr	x0, [sp, #24]
   12fd4:	ldr	x0, [x0, #56]
   12fd8:	cmp	x0, #0x0
   12fdc:	b.ne	12ff0 <BZ2_bzDecompressInit@@Base+0x9c>  // b.any
   12fe0:	ldr	x0, [sp, #24]
   12fe4:	adrp	x1, 11000 <BZ2_decompress@@Base+0x4cbc>
   12fe8:	add	x1, x1, #0xbf0
   12fec:	str	x1, [x0, #56]
   12ff0:	ldr	x0, [sp, #24]
   12ff4:	ldr	x0, [x0, #64]
   12ff8:	cmp	x0, #0x0
   12ffc:	b.ne	13010 <BZ2_bzDecompressInit@@Base+0xbc>  // b.any
   13000:	ldr	x0, [sp, #24]
   13004:	adrp	x1, 11000 <BZ2_decompress@@Base+0x4cbc>
   13008:	add	x1, x1, #0xc28
   1300c:	str	x1, [x0, #64]
   13010:	ldr	x0, [sp, #24]
   13014:	ldr	x3, [x0, #56]
   13018:	ldr	x0, [sp, #24]
   1301c:	ldr	x0, [x0, #72]
   13020:	mov	w2, #0x1                   	// #1
   13024:	mov	w1, #0xfa90                	// #64144
   13028:	blr	x3
   1302c:	str	x0, [sp, #40]
   13030:	ldr	x0, [sp, #40]
   13034:	cmp	x0, #0x0
   13038:	b.ne	13044 <BZ2_bzDecompressInit@@Base+0xf0>  // b.any
   1303c:	mov	w0, #0xfffffffd            	// #-3
   13040:	b	130e0 <BZ2_bzDecompressInit@@Base+0x18c>
   13044:	ldr	x0, [sp, #40]
   13048:	ldr	x1, [sp, #24]
   1304c:	str	x1, [x0]
   13050:	ldr	x0, [sp, #24]
   13054:	ldr	x1, [sp, #40]
   13058:	str	x1, [x0, #48]
   1305c:	ldr	x0, [sp, #40]
   13060:	mov	w1, #0xa                   	// #10
   13064:	str	w1, [x0, #8]
   13068:	ldr	x0, [sp, #40]
   1306c:	str	wzr, [x0, #36]
   13070:	ldr	x0, [sp, #40]
   13074:	str	wzr, [x0, #32]
   13078:	ldr	x0, [sp, #40]
   1307c:	str	wzr, [x0, #3188]
   13080:	ldr	x0, [sp, #24]
   13084:	str	wzr, [x0, #12]
   13088:	ldr	x0, [sp, #24]
   1308c:	str	wzr, [x0, #16]
   13090:	ldr	x0, [sp, #24]
   13094:	str	wzr, [x0, #36]
   13098:	ldr	x0, [sp, #24]
   1309c:	str	wzr, [x0, #40]
   130a0:	ldr	w0, [sp, #16]
   130a4:	and	w1, w0, #0xff
   130a8:	ldr	x0, [sp, #40]
   130ac:	strb	w1, [x0, #44]
   130b0:	ldr	x0, [sp, #40]
   130b4:	str	xzr, [x0, #3168]
   130b8:	ldr	x0, [sp, #40]
   130bc:	str	xzr, [x0, #3160]
   130c0:	ldr	x0, [sp, #40]
   130c4:	str	xzr, [x0, #3152]
   130c8:	ldr	x0, [sp, #40]
   130cc:	str	wzr, [x0, #48]
   130d0:	ldr	x0, [sp, #40]
   130d4:	ldr	w1, [sp, #20]
   130d8:	str	w1, [x0, #52]
   130dc:	mov	w0, #0x0                   	// #0
   130e0:	ldp	x29, x30, [sp], #48
   130e4:	ret
   130e8:	sub	sp, sp, #0x60
   130ec:	str	x0, [sp, #8]
   130f0:	ldr	x0, [sp, #8]
   130f4:	ldrb	w0, [x0, #20]
   130f8:	cmp	w0, #0x0
   130fc:	b.eq	13944 <BZ2_bzDecompressInit@@Base+0x9f0>  // b.none
   13100:	ldr	x0, [sp, #8]
   13104:	ldr	x0, [x0]
   13108:	ldr	w0, [x0, #32]
   1310c:	cmp	w0, #0x0
   13110:	b.ne	1311c <BZ2_bzDecompressInit@@Base+0x1c8>  // b.any
   13114:	mov	w0, #0x0                   	// #0
   13118:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   1311c:	ldr	x0, [sp, #8]
   13120:	ldr	w0, [x0, #16]
   13124:	cmp	w0, #0x0
   13128:	b.eq	13200 <BZ2_bzDecompressInit@@Base+0x2ac>  // b.none
   1312c:	ldr	x0, [sp, #8]
   13130:	ldr	x0, [x0]
   13134:	ldr	x0, [x0, #24]
   13138:	ldr	x1, [sp, #8]
   1313c:	ldrb	w1, [x1, #12]
   13140:	strb	w1, [x0]
   13144:	ldr	x0, [sp, #8]
   13148:	ldr	w0, [x0, #3184]
   1314c:	lsl	w1, w0, #8
   13150:	ldr	x0, [sp, #8]
   13154:	ldr	w0, [x0, #3184]
   13158:	lsr	w0, w0, #24
   1315c:	ldr	x2, [sp, #8]
   13160:	ldrb	w2, [x2, #12]
   13164:	eor	w2, w0, w2
   13168:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   1316c:	ldr	x0, [x0, #4024]
   13170:	mov	w2, w2
   13174:	ldr	w0, [x0, x2, lsl #2]
   13178:	eor	w1, w1, w0
   1317c:	ldr	x0, [sp, #8]
   13180:	str	w1, [x0, #3184]
   13184:	ldr	x0, [sp, #8]
   13188:	ldr	w0, [x0, #16]
   1318c:	sub	w1, w0, #0x1
   13190:	ldr	x0, [sp, #8]
   13194:	str	w1, [x0, #16]
   13198:	ldr	x0, [sp, #8]
   1319c:	ldr	x0, [x0]
   131a0:	ldr	x1, [x0, #24]
   131a4:	add	x1, x1, #0x1
   131a8:	str	x1, [x0, #24]
   131ac:	ldr	x0, [sp, #8]
   131b0:	ldr	x0, [x0]
   131b4:	ldr	w1, [x0, #32]
   131b8:	sub	w1, w1, #0x1
   131bc:	str	w1, [x0, #32]
   131c0:	ldr	x0, [sp, #8]
   131c4:	ldr	x0, [x0]
   131c8:	ldr	w1, [x0, #36]
   131cc:	add	w1, w1, #0x1
   131d0:	str	w1, [x0, #36]
   131d4:	ldr	x0, [sp, #8]
   131d8:	ldr	x0, [x0]
   131dc:	ldr	w0, [x0, #36]
   131e0:	cmp	w0, #0x0
   131e4:	b.ne	13100 <BZ2_bzDecompressInit@@Base+0x1ac>  // b.any
   131e8:	ldr	x0, [sp, #8]
   131ec:	ldr	x0, [x0]
   131f0:	ldr	w1, [x0, #40]
   131f4:	add	w1, w1, #0x1
   131f8:	str	w1, [x0, #40]
   131fc:	b	13100 <BZ2_bzDecompressInit@@Base+0x1ac>
   13200:	nop
   13204:	ldr	x0, [sp, #8]
   13208:	ldr	w1, [x0, #1092]
   1320c:	ldr	x0, [sp, #8]
   13210:	add	x0, x0, #0xc, lsl #12
   13214:	ldr	w0, [x0, #14928]
   13218:	add	w0, w0, #0x1
   1321c:	cmp	w1, w0
   13220:	b.ne	1322c <BZ2_bzDecompressInit@@Base+0x2d8>  // b.any
   13224:	mov	w0, #0x0                   	// #0
   13228:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   1322c:	ldr	x0, [sp, #8]
   13230:	ldr	w1, [x0, #1092]
   13234:	ldr	x0, [sp, #8]
   13238:	add	x0, x0, #0xc, lsl #12
   1323c:	ldr	w0, [x0, #14928]
   13240:	add	w0, w0, #0x1
   13244:	cmp	w1, w0
   13248:	b.le	13254 <BZ2_bzDecompressInit@@Base+0x300>
   1324c:	mov	w0, #0x1                   	// #1
   13250:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13254:	ldr	x0, [sp, #8]
   13258:	mov	w1, #0x1                   	// #1
   1325c:	str	w1, [x0, #16]
   13260:	ldr	x0, [sp, #8]
   13264:	ldr	w0, [x0, #64]
   13268:	and	w1, w0, #0xff
   1326c:	ldr	x0, [sp, #8]
   13270:	strb	w1, [x0, #12]
   13274:	ldr	x0, [sp, #8]
   13278:	ldr	w1, [x0, #60]
   1327c:	ldr	x0, [sp, #8]
   13280:	ldr	w0, [x0, #40]
   13284:	mov	w2, w0
   13288:	mov	w0, #0x86a0                	// #34464
   1328c:	movk	w0, #0x1, lsl #16
   13290:	mul	w0, w2, w0
   13294:	cmp	w1, w0
   13298:	b.cc	132a4 <BZ2_bzDecompressInit@@Base+0x350>  // b.lo, b.ul, b.last
   1329c:	mov	w0, #0x1                   	// #1
   132a0:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   132a4:	ldr	x0, [sp, #8]
   132a8:	ldr	x1, [x0, #3152]
   132ac:	ldr	x0, [sp, #8]
   132b0:	ldr	w0, [x0, #60]
   132b4:	mov	w0, w0
   132b8:	lsl	x0, x0, #2
   132bc:	add	x0, x1, x0
   132c0:	ldr	w1, [x0]
   132c4:	ldr	x0, [sp, #8]
   132c8:	str	w1, [x0, #60]
   132cc:	ldr	x0, [sp, #8]
   132d0:	ldr	w0, [x0, #60]
   132d4:	strb	w0, [sp, #35]
   132d8:	ldr	x0, [sp, #8]
   132dc:	ldr	w0, [x0, #60]
   132e0:	lsr	w1, w0, #8
   132e4:	ldr	x0, [sp, #8]
   132e8:	str	w1, [x0, #60]
   132ec:	ldr	x0, [sp, #8]
   132f0:	ldr	w0, [x0, #24]
   132f4:	cmp	w0, #0x0
   132f8:	b.ne	13348 <BZ2_bzDecompressInit@@Base+0x3f4>  // b.any
   132fc:	ldr	x0, [sp, #8]
   13300:	ldr	w1, [x0, #28]
   13304:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   13308:	ldr	x0, [x0, #4048]
   1330c:	sxtw	x1, w1
   13310:	ldr	w1, [x0, x1, lsl #2]
   13314:	ldr	x0, [sp, #8]
   13318:	str	w1, [x0, #24]
   1331c:	ldr	x0, [sp, #8]
   13320:	ldr	w0, [x0, #28]
   13324:	add	w1, w0, #0x1
   13328:	ldr	x0, [sp, #8]
   1332c:	str	w1, [x0, #28]
   13330:	ldr	x0, [sp, #8]
   13334:	ldr	w0, [x0, #28]
   13338:	cmp	w0, #0x200
   1333c:	b.ne	13348 <BZ2_bzDecompressInit@@Base+0x3f4>  // b.any
   13340:	ldr	x0, [sp, #8]
   13344:	str	wzr, [x0, #28]
   13348:	ldr	x0, [sp, #8]
   1334c:	ldr	w0, [x0, #24]
   13350:	sub	w1, w0, #0x1
   13354:	ldr	x0, [sp, #8]
   13358:	str	w1, [x0, #24]
   1335c:	ldr	x0, [sp, #8]
   13360:	ldr	w0, [x0, #24]
   13364:	cmp	w0, #0x1
   13368:	cset	w0, eq  // eq = none
   1336c:	and	w0, w0, #0xff
   13370:	sxtb	w1, w0
   13374:	ldrsb	w0, [sp, #35]
   13378:	eor	w0, w1, w0
   1337c:	sxtb	w0, w0
   13380:	strb	w0, [sp, #35]
   13384:	ldr	x0, [sp, #8]
   13388:	ldr	w0, [x0, #1092]
   1338c:	add	w1, w0, #0x1
   13390:	ldr	x0, [sp, #8]
   13394:	str	w1, [x0, #1092]
   13398:	ldr	x0, [sp, #8]
   1339c:	ldr	w1, [x0, #1092]
   133a0:	ldr	x0, [sp, #8]
   133a4:	add	x0, x0, #0xc, lsl #12
   133a8:	ldr	w0, [x0, #14928]
   133ac:	add	w0, w0, #0x1
   133b0:	cmp	w1, w0
   133b4:	b.eq	1392c <BZ2_bzDecompressInit@@Base+0x9d8>  // b.none
   133b8:	ldrb	w1, [sp, #35]
   133bc:	ldr	x0, [sp, #8]
   133c0:	ldr	w0, [x0, #64]
   133c4:	cmp	w1, w0
   133c8:	b.eq	133dc <BZ2_bzDecompressInit@@Base+0x488>  // b.none
   133cc:	ldrb	w1, [sp, #35]
   133d0:	ldr	x0, [sp, #8]
   133d4:	str	w1, [x0, #64]
   133d8:	b	13940 <BZ2_bzDecompressInit@@Base+0x9ec>
   133dc:	ldr	x0, [sp, #8]
   133e0:	mov	w1, #0x2                   	// #2
   133e4:	str	w1, [x0, #16]
   133e8:	ldr	x0, [sp, #8]
   133ec:	ldr	w1, [x0, #60]
   133f0:	ldr	x0, [sp, #8]
   133f4:	ldr	w0, [x0, #40]
   133f8:	mov	w2, w0
   133fc:	mov	w0, #0x86a0                	// #34464
   13400:	movk	w0, #0x1, lsl #16
   13404:	mul	w0, w2, w0
   13408:	cmp	w1, w0
   1340c:	b.cc	13418 <BZ2_bzDecompressInit@@Base+0x4c4>  // b.lo, b.ul, b.last
   13410:	mov	w0, #0x1                   	// #1
   13414:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13418:	ldr	x0, [sp, #8]
   1341c:	ldr	x1, [x0, #3152]
   13420:	ldr	x0, [sp, #8]
   13424:	ldr	w0, [x0, #60]
   13428:	mov	w0, w0
   1342c:	lsl	x0, x0, #2
   13430:	add	x0, x1, x0
   13434:	ldr	w1, [x0]
   13438:	ldr	x0, [sp, #8]
   1343c:	str	w1, [x0, #60]
   13440:	ldr	x0, [sp, #8]
   13444:	ldr	w0, [x0, #60]
   13448:	strb	w0, [sp, #35]
   1344c:	ldr	x0, [sp, #8]
   13450:	ldr	w0, [x0, #60]
   13454:	lsr	w1, w0, #8
   13458:	ldr	x0, [sp, #8]
   1345c:	str	w1, [x0, #60]
   13460:	ldr	x0, [sp, #8]
   13464:	ldr	w0, [x0, #24]
   13468:	cmp	w0, #0x0
   1346c:	b.ne	134bc <BZ2_bzDecompressInit@@Base+0x568>  // b.any
   13470:	ldr	x0, [sp, #8]
   13474:	ldr	w1, [x0, #28]
   13478:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   1347c:	ldr	x0, [x0, #4048]
   13480:	sxtw	x1, w1
   13484:	ldr	w1, [x0, x1, lsl #2]
   13488:	ldr	x0, [sp, #8]
   1348c:	str	w1, [x0, #24]
   13490:	ldr	x0, [sp, #8]
   13494:	ldr	w0, [x0, #28]
   13498:	add	w1, w0, #0x1
   1349c:	ldr	x0, [sp, #8]
   134a0:	str	w1, [x0, #28]
   134a4:	ldr	x0, [sp, #8]
   134a8:	ldr	w0, [x0, #28]
   134ac:	cmp	w0, #0x200
   134b0:	b.ne	134bc <BZ2_bzDecompressInit@@Base+0x568>  // b.any
   134b4:	ldr	x0, [sp, #8]
   134b8:	str	wzr, [x0, #28]
   134bc:	ldr	x0, [sp, #8]
   134c0:	ldr	w0, [x0, #24]
   134c4:	sub	w1, w0, #0x1
   134c8:	ldr	x0, [sp, #8]
   134cc:	str	w1, [x0, #24]
   134d0:	ldr	x0, [sp, #8]
   134d4:	ldr	w0, [x0, #24]
   134d8:	cmp	w0, #0x1
   134dc:	cset	w0, eq  // eq = none
   134e0:	and	w0, w0, #0xff
   134e4:	sxtb	w1, w0
   134e8:	ldrsb	w0, [sp, #35]
   134ec:	eor	w0, w1, w0
   134f0:	sxtb	w0, w0
   134f4:	strb	w0, [sp, #35]
   134f8:	ldr	x0, [sp, #8]
   134fc:	ldr	w0, [x0, #1092]
   13500:	add	w1, w0, #0x1
   13504:	ldr	x0, [sp, #8]
   13508:	str	w1, [x0, #1092]
   1350c:	ldr	x0, [sp, #8]
   13510:	ldr	w1, [x0, #1092]
   13514:	ldr	x0, [sp, #8]
   13518:	add	x0, x0, #0xc, lsl #12
   1351c:	ldr	w0, [x0, #14928]
   13520:	add	w0, w0, #0x1
   13524:	cmp	w1, w0
   13528:	b.eq	13934 <BZ2_bzDecompressInit@@Base+0x9e0>  // b.none
   1352c:	ldrb	w1, [sp, #35]
   13530:	ldr	x0, [sp, #8]
   13534:	ldr	w0, [x0, #64]
   13538:	cmp	w1, w0
   1353c:	b.eq	13550 <BZ2_bzDecompressInit@@Base+0x5fc>  // b.none
   13540:	ldrb	w1, [sp, #35]
   13544:	ldr	x0, [sp, #8]
   13548:	str	w1, [x0, #64]
   1354c:	b	13940 <BZ2_bzDecompressInit@@Base+0x9ec>
   13550:	ldr	x0, [sp, #8]
   13554:	mov	w1, #0x3                   	// #3
   13558:	str	w1, [x0, #16]
   1355c:	ldr	x0, [sp, #8]
   13560:	ldr	w1, [x0, #60]
   13564:	ldr	x0, [sp, #8]
   13568:	ldr	w0, [x0, #40]
   1356c:	mov	w2, w0
   13570:	mov	w0, #0x86a0                	// #34464
   13574:	movk	w0, #0x1, lsl #16
   13578:	mul	w0, w2, w0
   1357c:	cmp	w1, w0
   13580:	b.cc	1358c <BZ2_bzDecompressInit@@Base+0x638>  // b.lo, b.ul, b.last
   13584:	mov	w0, #0x1                   	// #1
   13588:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   1358c:	ldr	x0, [sp, #8]
   13590:	ldr	x1, [x0, #3152]
   13594:	ldr	x0, [sp, #8]
   13598:	ldr	w0, [x0, #60]
   1359c:	mov	w0, w0
   135a0:	lsl	x0, x0, #2
   135a4:	add	x0, x1, x0
   135a8:	ldr	w1, [x0]
   135ac:	ldr	x0, [sp, #8]
   135b0:	str	w1, [x0, #60]
   135b4:	ldr	x0, [sp, #8]
   135b8:	ldr	w0, [x0, #60]
   135bc:	strb	w0, [sp, #35]
   135c0:	ldr	x0, [sp, #8]
   135c4:	ldr	w0, [x0, #60]
   135c8:	lsr	w1, w0, #8
   135cc:	ldr	x0, [sp, #8]
   135d0:	str	w1, [x0, #60]
   135d4:	ldr	x0, [sp, #8]
   135d8:	ldr	w0, [x0, #24]
   135dc:	cmp	w0, #0x0
   135e0:	b.ne	13630 <BZ2_bzDecompressInit@@Base+0x6dc>  // b.any
   135e4:	ldr	x0, [sp, #8]
   135e8:	ldr	w1, [x0, #28]
   135ec:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   135f0:	ldr	x0, [x0, #4048]
   135f4:	sxtw	x1, w1
   135f8:	ldr	w1, [x0, x1, lsl #2]
   135fc:	ldr	x0, [sp, #8]
   13600:	str	w1, [x0, #24]
   13604:	ldr	x0, [sp, #8]
   13608:	ldr	w0, [x0, #28]
   1360c:	add	w1, w0, #0x1
   13610:	ldr	x0, [sp, #8]
   13614:	str	w1, [x0, #28]
   13618:	ldr	x0, [sp, #8]
   1361c:	ldr	w0, [x0, #28]
   13620:	cmp	w0, #0x200
   13624:	b.ne	13630 <BZ2_bzDecompressInit@@Base+0x6dc>  // b.any
   13628:	ldr	x0, [sp, #8]
   1362c:	str	wzr, [x0, #28]
   13630:	ldr	x0, [sp, #8]
   13634:	ldr	w0, [x0, #24]
   13638:	sub	w1, w0, #0x1
   1363c:	ldr	x0, [sp, #8]
   13640:	str	w1, [x0, #24]
   13644:	ldr	x0, [sp, #8]
   13648:	ldr	w0, [x0, #24]
   1364c:	cmp	w0, #0x1
   13650:	cset	w0, eq  // eq = none
   13654:	and	w0, w0, #0xff
   13658:	sxtb	w1, w0
   1365c:	ldrsb	w0, [sp, #35]
   13660:	eor	w0, w1, w0
   13664:	sxtb	w0, w0
   13668:	strb	w0, [sp, #35]
   1366c:	ldr	x0, [sp, #8]
   13670:	ldr	w0, [x0, #1092]
   13674:	add	w1, w0, #0x1
   13678:	ldr	x0, [sp, #8]
   1367c:	str	w1, [x0, #1092]
   13680:	ldr	x0, [sp, #8]
   13684:	ldr	w1, [x0, #1092]
   13688:	ldr	x0, [sp, #8]
   1368c:	add	x0, x0, #0xc, lsl #12
   13690:	ldr	w0, [x0, #14928]
   13694:	add	w0, w0, #0x1
   13698:	cmp	w1, w0
   1369c:	b.eq	1393c <BZ2_bzDecompressInit@@Base+0x9e8>  // b.none
   136a0:	ldrb	w1, [sp, #35]
   136a4:	ldr	x0, [sp, #8]
   136a8:	ldr	w0, [x0, #64]
   136ac:	cmp	w1, w0
   136b0:	b.eq	136c4 <BZ2_bzDecompressInit@@Base+0x770>  // b.none
   136b4:	ldrb	w1, [sp, #35]
   136b8:	ldr	x0, [sp, #8]
   136bc:	str	w1, [x0, #64]
   136c0:	b	13940 <BZ2_bzDecompressInit@@Base+0x9ec>
   136c4:	ldr	x0, [sp, #8]
   136c8:	ldr	w1, [x0, #60]
   136cc:	ldr	x0, [sp, #8]
   136d0:	ldr	w0, [x0, #40]
   136d4:	mov	w2, w0
   136d8:	mov	w0, #0x86a0                	// #34464
   136dc:	movk	w0, #0x1, lsl #16
   136e0:	mul	w0, w2, w0
   136e4:	cmp	w1, w0
   136e8:	b.cc	136f4 <BZ2_bzDecompressInit@@Base+0x7a0>  // b.lo, b.ul, b.last
   136ec:	mov	w0, #0x1                   	// #1
   136f0:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   136f4:	ldr	x0, [sp, #8]
   136f8:	ldr	x1, [x0, #3152]
   136fc:	ldr	x0, [sp, #8]
   13700:	ldr	w0, [x0, #60]
   13704:	mov	w0, w0
   13708:	lsl	x0, x0, #2
   1370c:	add	x0, x1, x0
   13710:	ldr	w1, [x0]
   13714:	ldr	x0, [sp, #8]
   13718:	str	w1, [x0, #60]
   1371c:	ldr	x0, [sp, #8]
   13720:	ldr	w0, [x0, #60]
   13724:	strb	w0, [sp, #35]
   13728:	ldr	x0, [sp, #8]
   1372c:	ldr	w0, [x0, #60]
   13730:	lsr	w1, w0, #8
   13734:	ldr	x0, [sp, #8]
   13738:	str	w1, [x0, #60]
   1373c:	ldr	x0, [sp, #8]
   13740:	ldr	w0, [x0, #24]
   13744:	cmp	w0, #0x0
   13748:	b.ne	13798 <BZ2_bzDecompressInit@@Base+0x844>  // b.any
   1374c:	ldr	x0, [sp, #8]
   13750:	ldr	w1, [x0, #28]
   13754:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   13758:	ldr	x0, [x0, #4048]
   1375c:	sxtw	x1, w1
   13760:	ldr	w1, [x0, x1, lsl #2]
   13764:	ldr	x0, [sp, #8]
   13768:	str	w1, [x0, #24]
   1376c:	ldr	x0, [sp, #8]
   13770:	ldr	w0, [x0, #28]
   13774:	add	w1, w0, #0x1
   13778:	ldr	x0, [sp, #8]
   1377c:	str	w1, [x0, #28]
   13780:	ldr	x0, [sp, #8]
   13784:	ldr	w0, [x0, #28]
   13788:	cmp	w0, #0x200
   1378c:	b.ne	13798 <BZ2_bzDecompressInit@@Base+0x844>  // b.any
   13790:	ldr	x0, [sp, #8]
   13794:	str	wzr, [x0, #28]
   13798:	ldr	x0, [sp, #8]
   1379c:	ldr	w0, [x0, #24]
   137a0:	sub	w1, w0, #0x1
   137a4:	ldr	x0, [sp, #8]
   137a8:	str	w1, [x0, #24]
   137ac:	ldr	x0, [sp, #8]
   137b0:	ldr	w0, [x0, #24]
   137b4:	cmp	w0, #0x1
   137b8:	cset	w0, eq  // eq = none
   137bc:	and	w0, w0, #0xff
   137c0:	sxtb	w1, w0
   137c4:	ldrsb	w0, [sp, #35]
   137c8:	eor	w0, w1, w0
   137cc:	sxtb	w0, w0
   137d0:	strb	w0, [sp, #35]
   137d4:	ldr	x0, [sp, #8]
   137d8:	ldr	w0, [x0, #1092]
   137dc:	add	w1, w0, #0x1
   137e0:	ldr	x0, [sp, #8]
   137e4:	str	w1, [x0, #1092]
   137e8:	ldrb	w0, [sp, #35]
   137ec:	add	w1, w0, #0x4
   137f0:	ldr	x0, [sp, #8]
   137f4:	str	w1, [x0, #16]
   137f8:	ldr	x0, [sp, #8]
   137fc:	ldr	w1, [x0, #60]
   13800:	ldr	x0, [sp, #8]
   13804:	ldr	w0, [x0, #40]
   13808:	mov	w2, w0
   1380c:	mov	w0, #0x86a0                	// #34464
   13810:	movk	w0, #0x1, lsl #16
   13814:	mul	w0, w2, w0
   13818:	cmp	w1, w0
   1381c:	b.cc	13828 <BZ2_bzDecompressInit@@Base+0x8d4>  // b.lo, b.ul, b.last
   13820:	mov	w0, #0x1                   	// #1
   13824:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13828:	ldr	x0, [sp, #8]
   1382c:	ldr	x1, [x0, #3152]
   13830:	ldr	x0, [sp, #8]
   13834:	ldr	w0, [x0, #60]
   13838:	mov	w0, w0
   1383c:	lsl	x0, x0, #2
   13840:	add	x0, x1, x0
   13844:	ldr	w1, [x0]
   13848:	ldr	x0, [sp, #8]
   1384c:	str	w1, [x0, #60]
   13850:	ldr	x0, [sp, #8]
   13854:	ldr	w0, [x0, #60]
   13858:	and	w0, w0, #0xff
   1385c:	mov	w1, w0
   13860:	ldr	x0, [sp, #8]
   13864:	str	w1, [x0, #64]
   13868:	ldr	x0, [sp, #8]
   1386c:	ldr	w0, [x0, #60]
   13870:	lsr	w1, w0, #8
   13874:	ldr	x0, [sp, #8]
   13878:	str	w1, [x0, #60]
   1387c:	ldr	x0, [sp, #8]
   13880:	ldr	w0, [x0, #24]
   13884:	cmp	w0, #0x0
   13888:	b.ne	138d8 <BZ2_bzDecompressInit@@Base+0x984>  // b.any
   1388c:	ldr	x0, [sp, #8]
   13890:	ldr	w1, [x0, #28]
   13894:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   13898:	ldr	x0, [x0, #4048]
   1389c:	sxtw	x1, w1
   138a0:	ldr	w1, [x0, x1, lsl #2]
   138a4:	ldr	x0, [sp, #8]
   138a8:	str	w1, [x0, #24]
   138ac:	ldr	x0, [sp, #8]
   138b0:	ldr	w0, [x0, #28]
   138b4:	add	w1, w0, #0x1
   138b8:	ldr	x0, [sp, #8]
   138bc:	str	w1, [x0, #28]
   138c0:	ldr	x0, [sp, #8]
   138c4:	ldr	w0, [x0, #28]
   138c8:	cmp	w0, #0x200
   138cc:	b.ne	138d8 <BZ2_bzDecompressInit@@Base+0x984>  // b.any
   138d0:	ldr	x0, [sp, #8]
   138d4:	str	wzr, [x0, #28]
   138d8:	ldr	x0, [sp, #8]
   138dc:	ldr	w0, [x0, #24]
   138e0:	sub	w1, w0, #0x1
   138e4:	ldr	x0, [sp, #8]
   138e8:	str	w1, [x0, #24]
   138ec:	ldr	x0, [sp, #8]
   138f0:	ldr	w0, [x0, #64]
   138f4:	ldr	x1, [sp, #8]
   138f8:	ldr	w1, [x1, #24]
   138fc:	cmp	w1, #0x1
   13900:	cset	w1, eq  // eq = none
   13904:	and	w1, w1, #0xff
   13908:	eor	w1, w0, w1
   1390c:	ldr	x0, [sp, #8]
   13910:	str	w1, [x0, #64]
   13914:	ldr	x0, [sp, #8]
   13918:	ldr	w0, [x0, #1092]
   1391c:	add	w1, w0, #0x1
   13920:	ldr	x0, [sp, #8]
   13924:	str	w1, [x0, #1092]
   13928:	b	13100 <BZ2_bzDecompressInit@@Base+0x1ac>
   1392c:	nop
   13930:	b	13100 <BZ2_bzDecompressInit@@Base+0x1ac>
   13934:	nop
   13938:	b	13100 <BZ2_bzDecompressInit@@Base+0x1ac>
   1393c:	nop
   13940:	b	13100 <BZ2_bzDecompressInit@@Base+0x1ac>
   13944:	ldr	x0, [sp, #8]
   13948:	ldr	w0, [x0, #3184]
   1394c:	str	w0, [sp, #92]
   13950:	ldr	x0, [sp, #8]
   13954:	ldrb	w0, [x0, #12]
   13958:	strb	w0, [sp, #91]
   1395c:	ldr	x0, [sp, #8]
   13960:	ldr	w0, [x0, #16]
   13964:	str	w0, [sp, #84]
   13968:	ldr	x0, [sp, #8]
   1396c:	ldr	w0, [x0, #1092]
   13970:	str	w0, [sp, #80]
   13974:	ldr	x0, [sp, #8]
   13978:	ldr	w0, [x0, #64]
   1397c:	str	w0, [sp, #76]
   13980:	ldr	x0, [sp, #8]
   13984:	ldr	x0, [x0, #3152]
   13988:	str	x0, [sp, #48]
   1398c:	ldr	x0, [sp, #8]
   13990:	ldr	w0, [x0, #60]
   13994:	str	w0, [sp, #72]
   13998:	ldr	x0, [sp, #8]
   1399c:	ldr	x0, [x0]
   139a0:	ldr	x0, [x0, #24]
   139a4:	str	x0, [sp, #64]
   139a8:	ldr	x0, [sp, #8]
   139ac:	ldr	x0, [x0]
   139b0:	ldr	w0, [x0, #32]
   139b4:	str	w0, [sp, #60]
   139b8:	ldr	x0, [sp, #8]
   139bc:	ldr	w0, [x0, #40]
   139c0:	str	w0, [sp, #44]
   139c4:	ldr	w0, [sp, #60]
   139c8:	str	w0, [sp, #40]
   139cc:	ldr	x0, [sp, #8]
   139d0:	add	x0, x0, #0xc, lsl #12
   139d4:	ldr	w0, [x0, #14928]
   139d8:	add	w0, w0, #0x1
   139dc:	str	w0, [sp, #36]
   139e0:	ldr	w0, [sp, #84]
   139e4:	cmp	w0, #0x0
   139e8:	b.le	13ae0 <BZ2_bzDecompressInit@@Base+0xb8c>
   139ec:	ldr	w0, [sp, #60]
   139f0:	cmp	w0, #0x0
   139f4:	b.eq	13d9c <BZ2_bzDecompressInit@@Base+0xe48>  // b.none
   139f8:	ldr	w0, [sp, #84]
   139fc:	cmp	w0, #0x1
   13a00:	b.eq	13a68 <BZ2_bzDecompressInit@@Base+0xb14>  // b.none
   13a04:	ldr	x0, [sp, #64]
   13a08:	ldrb	w1, [sp, #91]
   13a0c:	strb	w1, [x0]
   13a10:	ldr	w0, [sp, #92]
   13a14:	lsl	w1, w0, #8
   13a18:	ldr	w0, [sp, #92]
   13a1c:	lsr	w2, w0, #24
   13a20:	ldrb	w0, [sp, #91]
   13a24:	eor	w2, w2, w0
   13a28:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   13a2c:	ldr	x0, [x0, #4024]
   13a30:	mov	w2, w2
   13a34:	ldr	w0, [x0, x2, lsl #2]
   13a38:	eor	w0, w1, w0
   13a3c:	str	w0, [sp, #92]
   13a40:	ldr	w0, [sp, #84]
   13a44:	sub	w0, w0, #0x1
   13a48:	str	w0, [sp, #84]
   13a4c:	ldr	x0, [sp, #64]
   13a50:	add	x0, x0, #0x1
   13a54:	str	x0, [sp, #64]
   13a58:	ldr	w0, [sp, #60]
   13a5c:	sub	w0, w0, #0x1
   13a60:	str	w0, [sp, #60]
   13a64:	b	139ec <BZ2_bzDecompressInit@@Base+0xa98>
   13a68:	nop
   13a6c:	b	13a74 <BZ2_bzDecompressInit@@Base+0xb20>
   13a70:	nop
   13a74:	ldr	w0, [sp, #60]
   13a78:	cmp	w0, #0x0
   13a7c:	b.ne	13a8c <BZ2_bzDecompressInit@@Base+0xb38>  // b.any
   13a80:	mov	w0, #0x1                   	// #1
   13a84:	str	w0, [sp, #84]
   13a88:	b	13da0 <BZ2_bzDecompressInit@@Base+0xe4c>
   13a8c:	ldr	x0, [sp, #64]
   13a90:	ldrb	w1, [sp, #91]
   13a94:	strb	w1, [x0]
   13a98:	ldr	w0, [sp, #92]
   13a9c:	lsl	w1, w0, #8
   13aa0:	ldr	w0, [sp, #92]
   13aa4:	lsr	w2, w0, #24
   13aa8:	ldrb	w0, [sp, #91]
   13aac:	eor	w2, w2, w0
   13ab0:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   13ab4:	ldr	x0, [x0, #4024]
   13ab8:	mov	w2, w2
   13abc:	ldr	w0, [x0, x2, lsl #2]
   13ac0:	eor	w0, w1, w0
   13ac4:	str	w0, [sp, #92]
   13ac8:	ldr	x0, [sp, #64]
   13acc:	add	x0, x0, #0x1
   13ad0:	str	x0, [sp, #64]
   13ad4:	ldr	w0, [sp, #60]
   13ad8:	sub	w0, w0, #0x1
   13adc:	str	w0, [sp, #60]
   13ae0:	ldr	w1, [sp, #80]
   13ae4:	ldr	w0, [sp, #36]
   13ae8:	cmp	w1, w0
   13aec:	b.le	13af8 <BZ2_bzDecompressInit@@Base+0xba4>
   13af0:	mov	w0, #0x1                   	// #1
   13af4:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13af8:	ldr	w1, [sp, #80]
   13afc:	ldr	w0, [sp, #36]
   13b00:	cmp	w1, w0
   13b04:	b.ne	13b10 <BZ2_bzDecompressInit@@Base+0xbbc>  // b.any
   13b08:	str	wzr, [sp, #84]
   13b0c:	b	13da0 <BZ2_bzDecompressInit@@Base+0xe4c>
   13b10:	ldr	w0, [sp, #76]
   13b14:	strb	w0, [sp, #91]
   13b18:	ldr	w1, [sp, #44]
   13b1c:	mov	w0, #0x86a0                	// #34464
   13b20:	movk	w0, #0x1, lsl #16
   13b24:	mul	w0, w1, w0
   13b28:	ldr	w1, [sp, #72]
   13b2c:	cmp	w1, w0
   13b30:	b.cc	13b3c <BZ2_bzDecompressInit@@Base+0xbe8>  // b.lo, b.ul, b.last
   13b34:	mov	w0, #0x1                   	// #1
   13b38:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13b3c:	ldr	w0, [sp, #72]
   13b40:	lsl	x0, x0, #2
   13b44:	ldr	x1, [sp, #48]
   13b48:	add	x0, x1, x0
   13b4c:	ldr	w0, [x0]
   13b50:	str	w0, [sp, #72]
   13b54:	ldr	w0, [sp, #72]
   13b58:	strb	w0, [sp, #35]
   13b5c:	ldr	w0, [sp, #72]
   13b60:	lsr	w0, w0, #8
   13b64:	str	w0, [sp, #72]
   13b68:	ldr	w0, [sp, #80]
   13b6c:	add	w0, w0, #0x1
   13b70:	str	w0, [sp, #80]
   13b74:	ldrb	w0, [sp, #35]
   13b78:	ldr	w1, [sp, #76]
   13b7c:	cmp	w1, w0
   13b80:	b.eq	13b90 <BZ2_bzDecompressInit@@Base+0xc3c>  // b.none
   13b84:	ldrb	w0, [sp, #35]
   13b88:	str	w0, [sp, #76]
   13b8c:	b	13a74 <BZ2_bzDecompressInit@@Base+0xb20>
   13b90:	ldr	w1, [sp, #80]
   13b94:	ldr	w0, [sp, #36]
   13b98:	cmp	w1, w0
   13b9c:	b.eq	13a70 <BZ2_bzDecompressInit@@Base+0xb1c>  // b.none
   13ba0:	mov	w0, #0x2                   	// #2
   13ba4:	str	w0, [sp, #84]
   13ba8:	ldr	w1, [sp, #44]
   13bac:	mov	w0, #0x86a0                	// #34464
   13bb0:	movk	w0, #0x1, lsl #16
   13bb4:	mul	w0, w1, w0
   13bb8:	ldr	w1, [sp, #72]
   13bbc:	cmp	w1, w0
   13bc0:	b.cc	13bcc <BZ2_bzDecompressInit@@Base+0xc78>  // b.lo, b.ul, b.last
   13bc4:	mov	w0, #0x1                   	// #1
   13bc8:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13bcc:	ldr	w0, [sp, #72]
   13bd0:	lsl	x0, x0, #2
   13bd4:	ldr	x1, [sp, #48]
   13bd8:	add	x0, x1, x0
   13bdc:	ldr	w0, [x0]
   13be0:	str	w0, [sp, #72]
   13be4:	ldr	w0, [sp, #72]
   13be8:	strb	w0, [sp, #35]
   13bec:	ldr	w0, [sp, #72]
   13bf0:	lsr	w0, w0, #8
   13bf4:	str	w0, [sp, #72]
   13bf8:	ldr	w0, [sp, #80]
   13bfc:	add	w0, w0, #0x1
   13c00:	str	w0, [sp, #80]
   13c04:	ldr	w1, [sp, #80]
   13c08:	ldr	w0, [sp, #36]
   13c0c:	cmp	w1, w0
   13c10:	b.eq	13d8c <BZ2_bzDecompressInit@@Base+0xe38>  // b.none
   13c14:	ldrb	w0, [sp, #35]
   13c18:	ldr	w1, [sp, #76]
   13c1c:	cmp	w1, w0
   13c20:	b.eq	13c30 <BZ2_bzDecompressInit@@Base+0xcdc>  // b.none
   13c24:	ldrb	w0, [sp, #35]
   13c28:	str	w0, [sp, #76]
   13c2c:	b	13d98 <BZ2_bzDecompressInit@@Base+0xe44>
   13c30:	mov	w0, #0x3                   	// #3
   13c34:	str	w0, [sp, #84]
   13c38:	ldr	w1, [sp, #44]
   13c3c:	mov	w0, #0x86a0                	// #34464
   13c40:	movk	w0, #0x1, lsl #16
   13c44:	mul	w0, w1, w0
   13c48:	ldr	w1, [sp, #72]
   13c4c:	cmp	w1, w0
   13c50:	b.cc	13c5c <BZ2_bzDecompressInit@@Base+0xd08>  // b.lo, b.ul, b.last
   13c54:	mov	w0, #0x1                   	// #1
   13c58:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13c5c:	ldr	w0, [sp, #72]
   13c60:	lsl	x0, x0, #2
   13c64:	ldr	x1, [sp, #48]
   13c68:	add	x0, x1, x0
   13c6c:	ldr	w0, [x0]
   13c70:	str	w0, [sp, #72]
   13c74:	ldr	w0, [sp, #72]
   13c78:	strb	w0, [sp, #35]
   13c7c:	ldr	w0, [sp, #72]
   13c80:	lsr	w0, w0, #8
   13c84:	str	w0, [sp, #72]
   13c88:	ldr	w0, [sp, #80]
   13c8c:	add	w0, w0, #0x1
   13c90:	str	w0, [sp, #80]
   13c94:	ldr	w1, [sp, #80]
   13c98:	ldr	w0, [sp, #36]
   13c9c:	cmp	w1, w0
   13ca0:	b.eq	13d94 <BZ2_bzDecompressInit@@Base+0xe40>  // b.none
   13ca4:	ldrb	w0, [sp, #35]
   13ca8:	ldr	w1, [sp, #76]
   13cac:	cmp	w1, w0
   13cb0:	b.eq	13cc0 <BZ2_bzDecompressInit@@Base+0xd6c>  // b.none
   13cb4:	ldrb	w0, [sp, #35]
   13cb8:	str	w0, [sp, #76]
   13cbc:	b	13d98 <BZ2_bzDecompressInit@@Base+0xe44>
   13cc0:	ldr	w1, [sp, #44]
   13cc4:	mov	w0, #0x86a0                	// #34464
   13cc8:	movk	w0, #0x1, lsl #16
   13ccc:	mul	w0, w1, w0
   13cd0:	ldr	w1, [sp, #72]
   13cd4:	cmp	w1, w0
   13cd8:	b.cc	13ce4 <BZ2_bzDecompressInit@@Base+0xd90>  // b.lo, b.ul, b.last
   13cdc:	mov	w0, #0x1                   	// #1
   13ce0:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13ce4:	ldr	w0, [sp, #72]
   13ce8:	lsl	x0, x0, #2
   13cec:	ldr	x1, [sp, #48]
   13cf0:	add	x0, x1, x0
   13cf4:	ldr	w0, [x0]
   13cf8:	str	w0, [sp, #72]
   13cfc:	ldr	w0, [sp, #72]
   13d00:	strb	w0, [sp, #35]
   13d04:	ldr	w0, [sp, #72]
   13d08:	lsr	w0, w0, #8
   13d0c:	str	w0, [sp, #72]
   13d10:	ldr	w0, [sp, #80]
   13d14:	add	w0, w0, #0x1
   13d18:	str	w0, [sp, #80]
   13d1c:	ldrb	w0, [sp, #35]
   13d20:	add	w0, w0, #0x4
   13d24:	str	w0, [sp, #84]
   13d28:	ldr	w1, [sp, #44]
   13d2c:	mov	w0, #0x86a0                	// #34464
   13d30:	movk	w0, #0x1, lsl #16
   13d34:	mul	w0, w1, w0
   13d38:	ldr	w1, [sp, #72]
   13d3c:	cmp	w1, w0
   13d40:	b.cc	13d4c <BZ2_bzDecompressInit@@Base+0xdf8>  // b.lo, b.ul, b.last
   13d44:	mov	w0, #0x1                   	// #1
   13d48:	b	13e7c <BZ2_bzDecompressInit@@Base+0xf28>
   13d4c:	ldr	w0, [sp, #72]
   13d50:	lsl	x0, x0, #2
   13d54:	ldr	x1, [sp, #48]
   13d58:	add	x0, x1, x0
   13d5c:	ldr	w0, [x0]
   13d60:	str	w0, [sp, #72]
   13d64:	ldr	w0, [sp, #72]
   13d68:	and	w0, w0, #0xff
   13d6c:	str	w0, [sp, #76]
   13d70:	ldr	w0, [sp, #72]
   13d74:	lsr	w0, w0, #8
   13d78:	str	w0, [sp, #72]
   13d7c:	ldr	w0, [sp, #80]
   13d80:	add	w0, w0, #0x1
   13d84:	str	w0, [sp, #80]
   13d88:	b	139e0 <BZ2_bzDecompressInit@@Base+0xa8c>
   13d8c:	nop
   13d90:	b	139e0 <BZ2_bzDecompressInit@@Base+0xa8c>
   13d94:	nop
   13d98:	b	139e0 <BZ2_bzDecompressInit@@Base+0xa8c>
   13d9c:	nop
   13da0:	ldr	x0, [sp, #8]
   13da4:	ldr	x0, [x0]
   13da8:	ldr	w0, [x0, #36]
   13dac:	str	w0, [sp, #28]
   13db0:	ldr	x0, [sp, #8]
   13db4:	ldr	x0, [x0]
   13db8:	ldr	w2, [x0, #36]
   13dbc:	ldr	w1, [sp, #40]
   13dc0:	ldr	w0, [sp, #60]
   13dc4:	sub	w1, w1, w0
   13dc8:	ldr	x0, [sp, #8]
   13dcc:	ldr	x0, [x0]
   13dd0:	add	w1, w2, w1
   13dd4:	str	w1, [x0, #36]
   13dd8:	ldr	x0, [sp, #8]
   13ddc:	ldr	x0, [x0]
   13de0:	ldr	w0, [x0, #36]
   13de4:	ldr	w1, [sp, #28]
   13de8:	cmp	w1, w0
   13dec:	b.ls	13e04 <BZ2_bzDecompressInit@@Base+0xeb0>  // b.plast
   13df0:	ldr	x0, [sp, #8]
   13df4:	ldr	x0, [x0]
   13df8:	ldr	w1, [x0, #40]
   13dfc:	add	w1, w1, #0x1
   13e00:	str	w1, [x0, #40]
   13e04:	ldr	x0, [sp, #8]
   13e08:	ldr	w1, [sp, #92]
   13e0c:	str	w1, [x0, #3184]
   13e10:	ldr	x0, [sp, #8]
   13e14:	ldrb	w1, [sp, #91]
   13e18:	strb	w1, [x0, #12]
   13e1c:	ldr	x0, [sp, #8]
   13e20:	ldr	w1, [sp, #84]
   13e24:	str	w1, [x0, #16]
   13e28:	ldr	x0, [sp, #8]
   13e2c:	ldr	w1, [sp, #80]
   13e30:	str	w1, [x0, #1092]
   13e34:	ldr	x0, [sp, #8]
   13e38:	ldr	w1, [sp, #76]
   13e3c:	str	w1, [x0, #64]
   13e40:	ldr	x0, [sp, #8]
   13e44:	ldr	x1, [sp, #48]
   13e48:	str	x1, [x0, #3152]
   13e4c:	ldr	x0, [sp, #8]
   13e50:	ldr	w1, [sp, #72]
   13e54:	str	w1, [x0, #60]
   13e58:	ldr	x0, [sp, #8]
   13e5c:	ldr	x0, [x0]
   13e60:	ldr	x1, [sp, #64]
   13e64:	str	x1, [x0, #24]
   13e68:	ldr	x0, [sp, #8]
   13e6c:	ldr	x0, [x0]
   13e70:	ldr	w1, [sp, #60]
   13e74:	str	w1, [x0, #32]
   13e78:	mov	w0, #0x0                   	// #0
   13e7c:	add	sp, sp, #0x60
   13e80:	ret

0000000000013e84 <BZ2_indexIntoF@@Base>:
   13e84:	sub	sp, sp, #0x20
   13e88:	str	w0, [sp, #12]
   13e8c:	str	x1, [sp]
   13e90:	str	wzr, [sp, #28]
   13e94:	mov	w0, #0x100                 	// #256
   13e98:	str	w0, [sp, #24]
   13e9c:	ldr	w1, [sp, #28]
   13ea0:	ldr	w0, [sp, #24]
   13ea4:	add	w0, w1, w0
   13ea8:	asr	w0, w0, #1
   13eac:	str	w0, [sp, #20]
   13eb0:	ldrsw	x0, [sp, #20]
   13eb4:	lsl	x0, x0, #2
   13eb8:	ldr	x1, [sp]
   13ebc:	add	x0, x1, x0
   13ec0:	ldr	w0, [x0]
   13ec4:	ldr	w1, [sp, #12]
   13ec8:	cmp	w1, w0
   13ecc:	b.lt	13edc <BZ2_indexIntoF@@Base+0x58>  // b.tstop
   13ed0:	ldr	w0, [sp, #20]
   13ed4:	str	w0, [sp, #28]
   13ed8:	b	13ee4 <BZ2_indexIntoF@@Base+0x60>
   13edc:	ldr	w0, [sp, #20]
   13ee0:	str	w0, [sp, #24]
   13ee4:	ldr	w1, [sp, #24]
   13ee8:	ldr	w0, [sp, #28]
   13eec:	sub	w0, w1, w0
   13ef0:	cmp	w0, #0x1
   13ef4:	b.ne	13e9c <BZ2_indexIntoF@@Base+0x18>  // b.any
   13ef8:	ldr	w0, [sp, #28]
   13efc:	add	sp, sp, #0x20
   13f00:	ret
   13f04:	stp	x29, x30, [sp, #-48]!
   13f08:	mov	x29, sp
   13f0c:	str	x0, [sp, #24]
   13f10:	ldr	x0, [sp, #24]
   13f14:	ldrb	w0, [x0, #20]
   13f18:	cmp	w0, #0x0
   13f1c:	b.eq	148dc <BZ2_indexIntoF@@Base+0xa58>  // b.none
   13f20:	ldr	x0, [sp, #24]
   13f24:	ldr	x0, [x0]
   13f28:	ldr	w0, [x0, #32]
   13f2c:	cmp	w0, #0x0
   13f30:	b.ne	13f3c <BZ2_indexIntoF@@Base+0xb8>  // b.any
   13f34:	mov	w0, #0x0                   	// #0
   13f38:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   13f3c:	ldr	x0, [sp, #24]
   13f40:	ldr	w0, [x0, #16]
   13f44:	cmp	w0, #0x0
   13f48:	b.eq	14020 <BZ2_indexIntoF@@Base+0x19c>  // b.none
   13f4c:	ldr	x0, [sp, #24]
   13f50:	ldr	x0, [x0]
   13f54:	ldr	x0, [x0, #24]
   13f58:	ldr	x1, [sp, #24]
   13f5c:	ldrb	w1, [x1, #12]
   13f60:	strb	w1, [x0]
   13f64:	ldr	x0, [sp, #24]
   13f68:	ldr	w0, [x0, #3184]
   13f6c:	lsl	w1, w0, #8
   13f70:	ldr	x0, [sp, #24]
   13f74:	ldr	w0, [x0, #3184]
   13f78:	lsr	w0, w0, #24
   13f7c:	ldr	x2, [sp, #24]
   13f80:	ldrb	w2, [x2, #12]
   13f84:	eor	w2, w0, w2
   13f88:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   13f8c:	ldr	x0, [x0, #4024]
   13f90:	mov	w2, w2
   13f94:	ldr	w0, [x0, x2, lsl #2]
   13f98:	eor	w1, w1, w0
   13f9c:	ldr	x0, [sp, #24]
   13fa0:	str	w1, [x0, #3184]
   13fa4:	ldr	x0, [sp, #24]
   13fa8:	ldr	w0, [x0, #16]
   13fac:	sub	w1, w0, #0x1
   13fb0:	ldr	x0, [sp, #24]
   13fb4:	str	w1, [x0, #16]
   13fb8:	ldr	x0, [sp, #24]
   13fbc:	ldr	x0, [x0]
   13fc0:	ldr	x1, [x0, #24]
   13fc4:	add	x1, x1, #0x1
   13fc8:	str	x1, [x0, #24]
   13fcc:	ldr	x0, [sp, #24]
   13fd0:	ldr	x0, [x0]
   13fd4:	ldr	w1, [x0, #32]
   13fd8:	sub	w1, w1, #0x1
   13fdc:	str	w1, [x0, #32]
   13fe0:	ldr	x0, [sp, #24]
   13fe4:	ldr	x0, [x0]
   13fe8:	ldr	w1, [x0, #36]
   13fec:	add	w1, w1, #0x1
   13ff0:	str	w1, [x0, #36]
   13ff4:	ldr	x0, [sp, #24]
   13ff8:	ldr	x0, [x0]
   13ffc:	ldr	w0, [x0, #36]
   14000:	cmp	w0, #0x0
   14004:	b.ne	13f20 <BZ2_indexIntoF@@Base+0x9c>  // b.any
   14008:	ldr	x0, [sp, #24]
   1400c:	ldr	x0, [x0]
   14010:	ldr	w1, [x0, #40]
   14014:	add	w1, w1, #0x1
   14018:	str	w1, [x0, #40]
   1401c:	b	13f20 <BZ2_indexIntoF@@Base+0x9c>
   14020:	nop
   14024:	ldr	x0, [sp, #24]
   14028:	ldr	w1, [x0, #1092]
   1402c:	ldr	x0, [sp, #24]
   14030:	add	x0, x0, #0xc, lsl #12
   14034:	ldr	w0, [x0, #14928]
   14038:	add	w0, w0, #0x1
   1403c:	cmp	w1, w0
   14040:	b.ne	1404c <BZ2_indexIntoF@@Base+0x1c8>  // b.any
   14044:	mov	w0, #0x0                   	// #0
   14048:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   1404c:	ldr	x0, [sp, #24]
   14050:	ldr	w1, [x0, #1092]
   14054:	ldr	x0, [sp, #24]
   14058:	add	x0, x0, #0xc, lsl #12
   1405c:	ldr	w0, [x0, #14928]
   14060:	add	w0, w0, #0x1
   14064:	cmp	w1, w0
   14068:	b.le	14074 <BZ2_indexIntoF@@Base+0x1f0>
   1406c:	mov	w0, #0x1                   	// #1
   14070:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14074:	ldr	x0, [sp, #24]
   14078:	mov	w1, #0x1                   	// #1
   1407c:	str	w1, [x0, #16]
   14080:	ldr	x0, [sp, #24]
   14084:	ldr	w0, [x0, #64]
   14088:	and	w1, w0, #0xff
   1408c:	ldr	x0, [sp, #24]
   14090:	strb	w1, [x0, #12]
   14094:	ldr	x0, [sp, #24]
   14098:	ldr	w1, [x0, #60]
   1409c:	ldr	x0, [sp, #24]
   140a0:	ldr	w0, [x0, #40]
   140a4:	mov	w2, w0
   140a8:	mov	w0, #0x86a0                	// #34464
   140ac:	movk	w0, #0x1, lsl #16
   140b0:	mul	w0, w2, w0
   140b4:	cmp	w1, w0
   140b8:	b.cc	140c4 <BZ2_indexIntoF@@Base+0x240>  // b.lo, b.ul, b.last
   140bc:	mov	w0, #0x1                   	// #1
   140c0:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   140c4:	ldr	x0, [sp, #24]
   140c8:	ldr	w0, [x0, #60]
   140cc:	mov	w2, w0
   140d0:	ldr	x0, [sp, #24]
   140d4:	add	x0, x0, #0x448
   140d8:	mov	x1, x0
   140dc:	mov	w0, w2
   140e0:	bl	13e84 <BZ2_indexIntoF@@Base>
   140e4:	strb	w0, [sp, #47]
   140e8:	ldr	x0, [sp, #24]
   140ec:	ldr	x1, [x0, #3160]
   140f0:	ldr	x0, [sp, #24]
   140f4:	ldr	w0, [x0, #60]
   140f8:	mov	w0, w0
   140fc:	lsl	x0, x0, #1
   14100:	add	x0, x1, x0
   14104:	ldrh	w0, [x0]
   14108:	mov	w2, w0
   1410c:	ldr	x0, [sp, #24]
   14110:	ldr	x1, [x0, #3168]
   14114:	ldr	x0, [sp, #24]
   14118:	ldr	w0, [x0, #60]
   1411c:	lsr	w0, w0, #1
   14120:	mov	w0, w0
   14124:	add	x0, x1, x0
   14128:	ldrb	w0, [x0]
   1412c:	mov	w1, w0
   14130:	ldr	x0, [sp, #24]
   14134:	ldr	w0, [x0, #60]
   14138:	lsl	w0, w0, #2
   1413c:	and	w0, w0, #0x4
   14140:	lsr	w0, w1, w0
   14144:	lsl	w0, w0, #16
   14148:	and	w0, w0, #0xf0000
   1414c:	orr	w1, w2, w0
   14150:	ldr	x0, [sp, #24]
   14154:	str	w1, [x0, #60]
   14158:	ldr	x0, [sp, #24]
   1415c:	ldr	w0, [x0, #24]
   14160:	cmp	w0, #0x0
   14164:	b.ne	141b4 <BZ2_indexIntoF@@Base+0x330>  // b.any
   14168:	ldr	x0, [sp, #24]
   1416c:	ldr	w1, [x0, #28]
   14170:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   14174:	ldr	x0, [x0, #4048]
   14178:	sxtw	x1, w1
   1417c:	ldr	w1, [x0, x1, lsl #2]
   14180:	ldr	x0, [sp, #24]
   14184:	str	w1, [x0, #24]
   14188:	ldr	x0, [sp, #24]
   1418c:	ldr	w0, [x0, #28]
   14190:	add	w1, w0, #0x1
   14194:	ldr	x0, [sp, #24]
   14198:	str	w1, [x0, #28]
   1419c:	ldr	x0, [sp, #24]
   141a0:	ldr	w0, [x0, #28]
   141a4:	cmp	w0, #0x200
   141a8:	b.ne	141b4 <BZ2_indexIntoF@@Base+0x330>  // b.any
   141ac:	ldr	x0, [sp, #24]
   141b0:	str	wzr, [x0, #28]
   141b4:	ldr	x0, [sp, #24]
   141b8:	ldr	w0, [x0, #24]
   141bc:	sub	w1, w0, #0x1
   141c0:	ldr	x0, [sp, #24]
   141c4:	str	w1, [x0, #24]
   141c8:	ldr	x0, [sp, #24]
   141cc:	ldr	w0, [x0, #24]
   141d0:	cmp	w0, #0x1
   141d4:	cset	w0, eq  // eq = none
   141d8:	and	w0, w0, #0xff
   141dc:	sxtb	w1, w0
   141e0:	ldrsb	w0, [sp, #47]
   141e4:	eor	w0, w1, w0
   141e8:	sxtb	w0, w0
   141ec:	strb	w0, [sp, #47]
   141f0:	ldr	x0, [sp, #24]
   141f4:	ldr	w0, [x0, #1092]
   141f8:	add	w1, w0, #0x1
   141fc:	ldr	x0, [sp, #24]
   14200:	str	w1, [x0, #1092]
   14204:	ldr	x0, [sp, #24]
   14208:	ldr	w1, [x0, #1092]
   1420c:	ldr	x0, [sp, #24]
   14210:	add	x0, x0, #0xc, lsl #12
   14214:	ldr	w0, [x0, #14928]
   14218:	add	w0, w0, #0x1
   1421c:	cmp	w1, w0
   14220:	b.eq	148c4 <BZ2_indexIntoF@@Base+0xa40>  // b.none
   14224:	ldrb	w1, [sp, #47]
   14228:	ldr	x0, [sp, #24]
   1422c:	ldr	w0, [x0, #64]
   14230:	cmp	w1, w0
   14234:	b.eq	14248 <BZ2_indexIntoF@@Base+0x3c4>  // b.none
   14238:	ldrb	w1, [sp, #47]
   1423c:	ldr	x0, [sp, #24]
   14240:	str	w1, [x0, #64]
   14244:	b	148d8 <BZ2_indexIntoF@@Base+0xa54>
   14248:	ldr	x0, [sp, #24]
   1424c:	mov	w1, #0x2                   	// #2
   14250:	str	w1, [x0, #16]
   14254:	ldr	x0, [sp, #24]
   14258:	ldr	w1, [x0, #60]
   1425c:	ldr	x0, [sp, #24]
   14260:	ldr	w0, [x0, #40]
   14264:	mov	w2, w0
   14268:	mov	w0, #0x86a0                	// #34464
   1426c:	movk	w0, #0x1, lsl #16
   14270:	mul	w0, w2, w0
   14274:	cmp	w1, w0
   14278:	b.cc	14284 <BZ2_indexIntoF@@Base+0x400>  // b.lo, b.ul, b.last
   1427c:	mov	w0, #0x1                   	// #1
   14280:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14284:	ldr	x0, [sp, #24]
   14288:	ldr	w0, [x0, #60]
   1428c:	mov	w2, w0
   14290:	ldr	x0, [sp, #24]
   14294:	add	x0, x0, #0x448
   14298:	mov	x1, x0
   1429c:	mov	w0, w2
   142a0:	bl	13e84 <BZ2_indexIntoF@@Base>
   142a4:	strb	w0, [sp, #47]
   142a8:	ldr	x0, [sp, #24]
   142ac:	ldr	x1, [x0, #3160]
   142b0:	ldr	x0, [sp, #24]
   142b4:	ldr	w0, [x0, #60]
   142b8:	mov	w0, w0
   142bc:	lsl	x0, x0, #1
   142c0:	add	x0, x1, x0
   142c4:	ldrh	w0, [x0]
   142c8:	mov	w2, w0
   142cc:	ldr	x0, [sp, #24]
   142d0:	ldr	x1, [x0, #3168]
   142d4:	ldr	x0, [sp, #24]
   142d8:	ldr	w0, [x0, #60]
   142dc:	lsr	w0, w0, #1
   142e0:	mov	w0, w0
   142e4:	add	x0, x1, x0
   142e8:	ldrb	w0, [x0]
   142ec:	mov	w1, w0
   142f0:	ldr	x0, [sp, #24]
   142f4:	ldr	w0, [x0, #60]
   142f8:	lsl	w0, w0, #2
   142fc:	and	w0, w0, #0x4
   14300:	lsr	w0, w1, w0
   14304:	lsl	w0, w0, #16
   14308:	and	w0, w0, #0xf0000
   1430c:	orr	w1, w2, w0
   14310:	ldr	x0, [sp, #24]
   14314:	str	w1, [x0, #60]
   14318:	ldr	x0, [sp, #24]
   1431c:	ldr	w0, [x0, #24]
   14320:	cmp	w0, #0x0
   14324:	b.ne	14374 <BZ2_indexIntoF@@Base+0x4f0>  // b.any
   14328:	ldr	x0, [sp, #24]
   1432c:	ldr	w1, [x0, #28]
   14330:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   14334:	ldr	x0, [x0, #4048]
   14338:	sxtw	x1, w1
   1433c:	ldr	w1, [x0, x1, lsl #2]
   14340:	ldr	x0, [sp, #24]
   14344:	str	w1, [x0, #24]
   14348:	ldr	x0, [sp, #24]
   1434c:	ldr	w0, [x0, #28]
   14350:	add	w1, w0, #0x1
   14354:	ldr	x0, [sp, #24]
   14358:	str	w1, [x0, #28]
   1435c:	ldr	x0, [sp, #24]
   14360:	ldr	w0, [x0, #28]
   14364:	cmp	w0, #0x200
   14368:	b.ne	14374 <BZ2_indexIntoF@@Base+0x4f0>  // b.any
   1436c:	ldr	x0, [sp, #24]
   14370:	str	wzr, [x0, #28]
   14374:	ldr	x0, [sp, #24]
   14378:	ldr	w0, [x0, #24]
   1437c:	sub	w1, w0, #0x1
   14380:	ldr	x0, [sp, #24]
   14384:	str	w1, [x0, #24]
   14388:	ldr	x0, [sp, #24]
   1438c:	ldr	w0, [x0, #24]
   14390:	cmp	w0, #0x1
   14394:	cset	w0, eq  // eq = none
   14398:	and	w0, w0, #0xff
   1439c:	sxtb	w1, w0
   143a0:	ldrsb	w0, [sp, #47]
   143a4:	eor	w0, w1, w0
   143a8:	sxtb	w0, w0
   143ac:	strb	w0, [sp, #47]
   143b0:	ldr	x0, [sp, #24]
   143b4:	ldr	w0, [x0, #1092]
   143b8:	add	w1, w0, #0x1
   143bc:	ldr	x0, [sp, #24]
   143c0:	str	w1, [x0, #1092]
   143c4:	ldr	x0, [sp, #24]
   143c8:	ldr	w1, [x0, #1092]
   143cc:	ldr	x0, [sp, #24]
   143d0:	add	x0, x0, #0xc, lsl #12
   143d4:	ldr	w0, [x0, #14928]
   143d8:	add	w0, w0, #0x1
   143dc:	cmp	w1, w0
   143e0:	b.eq	148cc <BZ2_indexIntoF@@Base+0xa48>  // b.none
   143e4:	ldrb	w1, [sp, #47]
   143e8:	ldr	x0, [sp, #24]
   143ec:	ldr	w0, [x0, #64]
   143f0:	cmp	w1, w0
   143f4:	b.eq	14408 <BZ2_indexIntoF@@Base+0x584>  // b.none
   143f8:	ldrb	w1, [sp, #47]
   143fc:	ldr	x0, [sp, #24]
   14400:	str	w1, [x0, #64]
   14404:	b	148d8 <BZ2_indexIntoF@@Base+0xa54>
   14408:	ldr	x0, [sp, #24]
   1440c:	mov	w1, #0x3                   	// #3
   14410:	str	w1, [x0, #16]
   14414:	ldr	x0, [sp, #24]
   14418:	ldr	w1, [x0, #60]
   1441c:	ldr	x0, [sp, #24]
   14420:	ldr	w0, [x0, #40]
   14424:	mov	w2, w0
   14428:	mov	w0, #0x86a0                	// #34464
   1442c:	movk	w0, #0x1, lsl #16
   14430:	mul	w0, w2, w0
   14434:	cmp	w1, w0
   14438:	b.cc	14444 <BZ2_indexIntoF@@Base+0x5c0>  // b.lo, b.ul, b.last
   1443c:	mov	w0, #0x1                   	// #1
   14440:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14444:	ldr	x0, [sp, #24]
   14448:	ldr	w0, [x0, #60]
   1444c:	mov	w2, w0
   14450:	ldr	x0, [sp, #24]
   14454:	add	x0, x0, #0x448
   14458:	mov	x1, x0
   1445c:	mov	w0, w2
   14460:	bl	13e84 <BZ2_indexIntoF@@Base>
   14464:	strb	w0, [sp, #47]
   14468:	ldr	x0, [sp, #24]
   1446c:	ldr	x1, [x0, #3160]
   14470:	ldr	x0, [sp, #24]
   14474:	ldr	w0, [x0, #60]
   14478:	mov	w0, w0
   1447c:	lsl	x0, x0, #1
   14480:	add	x0, x1, x0
   14484:	ldrh	w0, [x0]
   14488:	mov	w2, w0
   1448c:	ldr	x0, [sp, #24]
   14490:	ldr	x1, [x0, #3168]
   14494:	ldr	x0, [sp, #24]
   14498:	ldr	w0, [x0, #60]
   1449c:	lsr	w0, w0, #1
   144a0:	mov	w0, w0
   144a4:	add	x0, x1, x0
   144a8:	ldrb	w0, [x0]
   144ac:	mov	w1, w0
   144b0:	ldr	x0, [sp, #24]
   144b4:	ldr	w0, [x0, #60]
   144b8:	lsl	w0, w0, #2
   144bc:	and	w0, w0, #0x4
   144c0:	lsr	w0, w1, w0
   144c4:	lsl	w0, w0, #16
   144c8:	and	w0, w0, #0xf0000
   144cc:	orr	w1, w2, w0
   144d0:	ldr	x0, [sp, #24]
   144d4:	str	w1, [x0, #60]
   144d8:	ldr	x0, [sp, #24]
   144dc:	ldr	w0, [x0, #24]
   144e0:	cmp	w0, #0x0
   144e4:	b.ne	14534 <BZ2_indexIntoF@@Base+0x6b0>  // b.any
   144e8:	ldr	x0, [sp, #24]
   144ec:	ldr	w1, [x0, #28]
   144f0:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   144f4:	ldr	x0, [x0, #4048]
   144f8:	sxtw	x1, w1
   144fc:	ldr	w1, [x0, x1, lsl #2]
   14500:	ldr	x0, [sp, #24]
   14504:	str	w1, [x0, #24]
   14508:	ldr	x0, [sp, #24]
   1450c:	ldr	w0, [x0, #28]
   14510:	add	w1, w0, #0x1
   14514:	ldr	x0, [sp, #24]
   14518:	str	w1, [x0, #28]
   1451c:	ldr	x0, [sp, #24]
   14520:	ldr	w0, [x0, #28]
   14524:	cmp	w0, #0x200
   14528:	b.ne	14534 <BZ2_indexIntoF@@Base+0x6b0>  // b.any
   1452c:	ldr	x0, [sp, #24]
   14530:	str	wzr, [x0, #28]
   14534:	ldr	x0, [sp, #24]
   14538:	ldr	w0, [x0, #24]
   1453c:	sub	w1, w0, #0x1
   14540:	ldr	x0, [sp, #24]
   14544:	str	w1, [x0, #24]
   14548:	ldr	x0, [sp, #24]
   1454c:	ldr	w0, [x0, #24]
   14550:	cmp	w0, #0x1
   14554:	cset	w0, eq  // eq = none
   14558:	and	w0, w0, #0xff
   1455c:	sxtb	w1, w0
   14560:	ldrsb	w0, [sp, #47]
   14564:	eor	w0, w1, w0
   14568:	sxtb	w0, w0
   1456c:	strb	w0, [sp, #47]
   14570:	ldr	x0, [sp, #24]
   14574:	ldr	w0, [x0, #1092]
   14578:	add	w1, w0, #0x1
   1457c:	ldr	x0, [sp, #24]
   14580:	str	w1, [x0, #1092]
   14584:	ldr	x0, [sp, #24]
   14588:	ldr	w1, [x0, #1092]
   1458c:	ldr	x0, [sp, #24]
   14590:	add	x0, x0, #0xc, lsl #12
   14594:	ldr	w0, [x0, #14928]
   14598:	add	w0, w0, #0x1
   1459c:	cmp	w1, w0
   145a0:	b.eq	148d4 <BZ2_indexIntoF@@Base+0xa50>  // b.none
   145a4:	ldrb	w1, [sp, #47]
   145a8:	ldr	x0, [sp, #24]
   145ac:	ldr	w0, [x0, #64]
   145b0:	cmp	w1, w0
   145b4:	b.eq	145c8 <BZ2_indexIntoF@@Base+0x744>  // b.none
   145b8:	ldrb	w1, [sp, #47]
   145bc:	ldr	x0, [sp, #24]
   145c0:	str	w1, [x0, #64]
   145c4:	b	148d8 <BZ2_indexIntoF@@Base+0xa54>
   145c8:	ldr	x0, [sp, #24]
   145cc:	ldr	w1, [x0, #60]
   145d0:	ldr	x0, [sp, #24]
   145d4:	ldr	w0, [x0, #40]
   145d8:	mov	w2, w0
   145dc:	mov	w0, #0x86a0                	// #34464
   145e0:	movk	w0, #0x1, lsl #16
   145e4:	mul	w0, w2, w0
   145e8:	cmp	w1, w0
   145ec:	b.cc	145f8 <BZ2_indexIntoF@@Base+0x774>  // b.lo, b.ul, b.last
   145f0:	mov	w0, #0x1                   	// #1
   145f4:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   145f8:	ldr	x0, [sp, #24]
   145fc:	ldr	w0, [x0, #60]
   14600:	mov	w2, w0
   14604:	ldr	x0, [sp, #24]
   14608:	add	x0, x0, #0x448
   1460c:	mov	x1, x0
   14610:	mov	w0, w2
   14614:	bl	13e84 <BZ2_indexIntoF@@Base>
   14618:	strb	w0, [sp, #47]
   1461c:	ldr	x0, [sp, #24]
   14620:	ldr	x1, [x0, #3160]
   14624:	ldr	x0, [sp, #24]
   14628:	ldr	w0, [x0, #60]
   1462c:	mov	w0, w0
   14630:	lsl	x0, x0, #1
   14634:	add	x0, x1, x0
   14638:	ldrh	w0, [x0]
   1463c:	mov	w2, w0
   14640:	ldr	x0, [sp, #24]
   14644:	ldr	x1, [x0, #3168]
   14648:	ldr	x0, [sp, #24]
   1464c:	ldr	w0, [x0, #60]
   14650:	lsr	w0, w0, #1
   14654:	mov	w0, w0
   14658:	add	x0, x1, x0
   1465c:	ldrb	w0, [x0]
   14660:	mov	w1, w0
   14664:	ldr	x0, [sp, #24]
   14668:	ldr	w0, [x0, #60]
   1466c:	lsl	w0, w0, #2
   14670:	and	w0, w0, #0x4
   14674:	lsr	w0, w1, w0
   14678:	lsl	w0, w0, #16
   1467c:	and	w0, w0, #0xf0000
   14680:	orr	w1, w2, w0
   14684:	ldr	x0, [sp, #24]
   14688:	str	w1, [x0, #60]
   1468c:	ldr	x0, [sp, #24]
   14690:	ldr	w0, [x0, #24]
   14694:	cmp	w0, #0x0
   14698:	b.ne	146e8 <BZ2_indexIntoF@@Base+0x864>  // b.any
   1469c:	ldr	x0, [sp, #24]
   146a0:	ldr	w1, [x0, #28]
   146a4:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   146a8:	ldr	x0, [x0, #4048]
   146ac:	sxtw	x1, w1
   146b0:	ldr	w1, [x0, x1, lsl #2]
   146b4:	ldr	x0, [sp, #24]
   146b8:	str	w1, [x0, #24]
   146bc:	ldr	x0, [sp, #24]
   146c0:	ldr	w0, [x0, #28]
   146c4:	add	w1, w0, #0x1
   146c8:	ldr	x0, [sp, #24]
   146cc:	str	w1, [x0, #28]
   146d0:	ldr	x0, [sp, #24]
   146d4:	ldr	w0, [x0, #28]
   146d8:	cmp	w0, #0x200
   146dc:	b.ne	146e8 <BZ2_indexIntoF@@Base+0x864>  // b.any
   146e0:	ldr	x0, [sp, #24]
   146e4:	str	wzr, [x0, #28]
   146e8:	ldr	x0, [sp, #24]
   146ec:	ldr	w0, [x0, #24]
   146f0:	sub	w1, w0, #0x1
   146f4:	ldr	x0, [sp, #24]
   146f8:	str	w1, [x0, #24]
   146fc:	ldr	x0, [sp, #24]
   14700:	ldr	w0, [x0, #24]
   14704:	cmp	w0, #0x1
   14708:	cset	w0, eq  // eq = none
   1470c:	and	w0, w0, #0xff
   14710:	sxtb	w1, w0
   14714:	ldrsb	w0, [sp, #47]
   14718:	eor	w0, w1, w0
   1471c:	sxtb	w0, w0
   14720:	strb	w0, [sp, #47]
   14724:	ldr	x0, [sp, #24]
   14728:	ldr	w0, [x0, #1092]
   1472c:	add	w1, w0, #0x1
   14730:	ldr	x0, [sp, #24]
   14734:	str	w1, [x0, #1092]
   14738:	ldrb	w0, [sp, #47]
   1473c:	add	w1, w0, #0x4
   14740:	ldr	x0, [sp, #24]
   14744:	str	w1, [x0, #16]
   14748:	ldr	x0, [sp, #24]
   1474c:	ldr	w1, [x0, #60]
   14750:	ldr	x0, [sp, #24]
   14754:	ldr	w0, [x0, #40]
   14758:	mov	w2, w0
   1475c:	mov	w0, #0x86a0                	// #34464
   14760:	movk	w0, #0x1, lsl #16
   14764:	mul	w0, w2, w0
   14768:	cmp	w1, w0
   1476c:	b.cc	14778 <BZ2_indexIntoF@@Base+0x8f4>  // b.lo, b.ul, b.last
   14770:	mov	w0, #0x1                   	// #1
   14774:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14778:	ldr	x0, [sp, #24]
   1477c:	ldr	w0, [x0, #60]
   14780:	mov	w2, w0
   14784:	ldr	x0, [sp, #24]
   14788:	add	x0, x0, #0x448
   1478c:	mov	x1, x0
   14790:	mov	w0, w2
   14794:	bl	13e84 <BZ2_indexIntoF@@Base>
   14798:	mov	w1, w0
   1479c:	ldr	x0, [sp, #24]
   147a0:	str	w1, [x0, #64]
   147a4:	ldr	x0, [sp, #24]
   147a8:	ldr	x1, [x0, #3160]
   147ac:	ldr	x0, [sp, #24]
   147b0:	ldr	w0, [x0, #60]
   147b4:	mov	w0, w0
   147b8:	lsl	x0, x0, #1
   147bc:	add	x0, x1, x0
   147c0:	ldrh	w0, [x0]
   147c4:	mov	w2, w0
   147c8:	ldr	x0, [sp, #24]
   147cc:	ldr	x1, [x0, #3168]
   147d0:	ldr	x0, [sp, #24]
   147d4:	ldr	w0, [x0, #60]
   147d8:	lsr	w0, w0, #1
   147dc:	mov	w0, w0
   147e0:	add	x0, x1, x0
   147e4:	ldrb	w0, [x0]
   147e8:	mov	w1, w0
   147ec:	ldr	x0, [sp, #24]
   147f0:	ldr	w0, [x0, #60]
   147f4:	lsl	w0, w0, #2
   147f8:	and	w0, w0, #0x4
   147fc:	lsr	w0, w1, w0
   14800:	lsl	w0, w0, #16
   14804:	and	w0, w0, #0xf0000
   14808:	orr	w1, w2, w0
   1480c:	ldr	x0, [sp, #24]
   14810:	str	w1, [x0, #60]
   14814:	ldr	x0, [sp, #24]
   14818:	ldr	w0, [x0, #24]
   1481c:	cmp	w0, #0x0
   14820:	b.ne	14870 <BZ2_indexIntoF@@Base+0x9ec>  // b.any
   14824:	ldr	x0, [sp, #24]
   14828:	ldr	w1, [x0, #28]
   1482c:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   14830:	ldr	x0, [x0, #4048]
   14834:	sxtw	x1, w1
   14838:	ldr	w1, [x0, x1, lsl #2]
   1483c:	ldr	x0, [sp, #24]
   14840:	str	w1, [x0, #24]
   14844:	ldr	x0, [sp, #24]
   14848:	ldr	w0, [x0, #28]
   1484c:	add	w1, w0, #0x1
   14850:	ldr	x0, [sp, #24]
   14854:	str	w1, [x0, #28]
   14858:	ldr	x0, [sp, #24]
   1485c:	ldr	w0, [x0, #28]
   14860:	cmp	w0, #0x200
   14864:	b.ne	14870 <BZ2_indexIntoF@@Base+0x9ec>  // b.any
   14868:	ldr	x0, [sp, #24]
   1486c:	str	wzr, [x0, #28]
   14870:	ldr	x0, [sp, #24]
   14874:	ldr	w0, [x0, #24]
   14878:	sub	w1, w0, #0x1
   1487c:	ldr	x0, [sp, #24]
   14880:	str	w1, [x0, #24]
   14884:	ldr	x0, [sp, #24]
   14888:	ldr	w0, [x0, #64]
   1488c:	ldr	x1, [sp, #24]
   14890:	ldr	w1, [x1, #24]
   14894:	cmp	w1, #0x1
   14898:	cset	w1, eq  // eq = none
   1489c:	and	w1, w1, #0xff
   148a0:	eor	w1, w0, w1
   148a4:	ldr	x0, [sp, #24]
   148a8:	str	w1, [x0, #64]
   148ac:	ldr	x0, [sp, #24]
   148b0:	ldr	w0, [x0, #1092]
   148b4:	add	w1, w0, #0x1
   148b8:	ldr	x0, [sp, #24]
   148bc:	str	w1, [x0, #1092]
   148c0:	b	13f20 <BZ2_indexIntoF@@Base+0x9c>
   148c4:	nop
   148c8:	b	13f20 <BZ2_indexIntoF@@Base+0x9c>
   148cc:	nop
   148d0:	b	13f20 <BZ2_indexIntoF@@Base+0x9c>
   148d4:	nop
   148d8:	b	13f20 <BZ2_indexIntoF@@Base+0x9c>
   148dc:	ldr	x0, [sp, #24]
   148e0:	ldr	x0, [x0]
   148e4:	ldr	w0, [x0, #32]
   148e8:	cmp	w0, #0x0
   148ec:	b.ne	148f8 <BZ2_indexIntoF@@Base+0xa74>  // b.any
   148f0:	mov	w0, #0x0                   	// #0
   148f4:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   148f8:	ldr	x0, [sp, #24]
   148fc:	ldr	w0, [x0, #16]
   14900:	cmp	w0, #0x0
   14904:	b.eq	149dc <BZ2_indexIntoF@@Base+0xb58>  // b.none
   14908:	ldr	x0, [sp, #24]
   1490c:	ldr	x0, [x0]
   14910:	ldr	x0, [x0, #24]
   14914:	ldr	x1, [sp, #24]
   14918:	ldrb	w1, [x1, #12]
   1491c:	strb	w1, [x0]
   14920:	ldr	x0, [sp, #24]
   14924:	ldr	w0, [x0, #3184]
   14928:	lsl	w1, w0, #8
   1492c:	ldr	x0, [sp, #24]
   14930:	ldr	w0, [x0, #3184]
   14934:	lsr	w0, w0, #24
   14938:	ldr	x2, [sp, #24]
   1493c:	ldrb	w2, [x2, #12]
   14940:	eor	w2, w0, w2
   14944:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   14948:	ldr	x0, [x0, #4024]
   1494c:	mov	w2, w2
   14950:	ldr	w0, [x0, x2, lsl #2]
   14954:	eor	w1, w1, w0
   14958:	ldr	x0, [sp, #24]
   1495c:	str	w1, [x0, #3184]
   14960:	ldr	x0, [sp, #24]
   14964:	ldr	w0, [x0, #16]
   14968:	sub	w1, w0, #0x1
   1496c:	ldr	x0, [sp, #24]
   14970:	str	w1, [x0, #16]
   14974:	ldr	x0, [sp, #24]
   14978:	ldr	x0, [x0]
   1497c:	ldr	x1, [x0, #24]
   14980:	add	x1, x1, #0x1
   14984:	str	x1, [x0, #24]
   14988:	ldr	x0, [sp, #24]
   1498c:	ldr	x0, [x0]
   14990:	ldr	w1, [x0, #32]
   14994:	sub	w1, w1, #0x1
   14998:	str	w1, [x0, #32]
   1499c:	ldr	x0, [sp, #24]
   149a0:	ldr	x0, [x0]
   149a4:	ldr	w1, [x0, #36]
   149a8:	add	w1, w1, #0x1
   149ac:	str	w1, [x0, #36]
   149b0:	ldr	x0, [sp, #24]
   149b4:	ldr	x0, [x0]
   149b8:	ldr	w0, [x0, #36]
   149bc:	cmp	w0, #0x0
   149c0:	b.ne	148dc <BZ2_indexIntoF@@Base+0xa58>  // b.any
   149c4:	ldr	x0, [sp, #24]
   149c8:	ldr	x0, [x0]
   149cc:	ldr	w1, [x0, #40]
   149d0:	add	w1, w1, #0x1
   149d4:	str	w1, [x0, #40]
   149d8:	b	148dc <BZ2_indexIntoF@@Base+0xa58>
   149dc:	nop
   149e0:	ldr	x0, [sp, #24]
   149e4:	ldr	w1, [x0, #1092]
   149e8:	ldr	x0, [sp, #24]
   149ec:	add	x0, x0, #0xc, lsl #12
   149f0:	ldr	w0, [x0, #14928]
   149f4:	add	w0, w0, #0x1
   149f8:	cmp	w1, w0
   149fc:	b.ne	14a08 <BZ2_indexIntoF@@Base+0xb84>  // b.any
   14a00:	mov	w0, #0x0                   	// #0
   14a04:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14a08:	ldr	x0, [sp, #24]
   14a0c:	ldr	w1, [x0, #1092]
   14a10:	ldr	x0, [sp, #24]
   14a14:	add	x0, x0, #0xc, lsl #12
   14a18:	ldr	w0, [x0, #14928]
   14a1c:	add	w0, w0, #0x1
   14a20:	cmp	w1, w0
   14a24:	b.le	14a30 <BZ2_indexIntoF@@Base+0xbac>
   14a28:	mov	w0, #0x1                   	// #1
   14a2c:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14a30:	ldr	x0, [sp, #24]
   14a34:	mov	w1, #0x1                   	// #1
   14a38:	str	w1, [x0, #16]
   14a3c:	ldr	x0, [sp, #24]
   14a40:	ldr	w0, [x0, #64]
   14a44:	and	w1, w0, #0xff
   14a48:	ldr	x0, [sp, #24]
   14a4c:	strb	w1, [x0, #12]
   14a50:	ldr	x0, [sp, #24]
   14a54:	ldr	w1, [x0, #60]
   14a58:	ldr	x0, [sp, #24]
   14a5c:	ldr	w0, [x0, #40]
   14a60:	mov	w2, w0
   14a64:	mov	w0, #0x86a0                	// #34464
   14a68:	movk	w0, #0x1, lsl #16
   14a6c:	mul	w0, w2, w0
   14a70:	cmp	w1, w0
   14a74:	b.cc	14a80 <BZ2_indexIntoF@@Base+0xbfc>  // b.lo, b.ul, b.last
   14a78:	mov	w0, #0x1                   	// #1
   14a7c:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14a80:	ldr	x0, [sp, #24]
   14a84:	ldr	w0, [x0, #60]
   14a88:	mov	w2, w0
   14a8c:	ldr	x0, [sp, #24]
   14a90:	add	x0, x0, #0x448
   14a94:	mov	x1, x0
   14a98:	mov	w0, w2
   14a9c:	bl	13e84 <BZ2_indexIntoF@@Base>
   14aa0:	strb	w0, [sp, #47]
   14aa4:	ldr	x0, [sp, #24]
   14aa8:	ldr	x1, [x0, #3160]
   14aac:	ldr	x0, [sp, #24]
   14ab0:	ldr	w0, [x0, #60]
   14ab4:	mov	w0, w0
   14ab8:	lsl	x0, x0, #1
   14abc:	add	x0, x1, x0
   14ac0:	ldrh	w0, [x0]
   14ac4:	mov	w2, w0
   14ac8:	ldr	x0, [sp, #24]
   14acc:	ldr	x1, [x0, #3168]
   14ad0:	ldr	x0, [sp, #24]
   14ad4:	ldr	w0, [x0, #60]
   14ad8:	lsr	w0, w0, #1
   14adc:	mov	w0, w0
   14ae0:	add	x0, x1, x0
   14ae4:	ldrb	w0, [x0]
   14ae8:	mov	w1, w0
   14aec:	ldr	x0, [sp, #24]
   14af0:	ldr	w0, [x0, #60]
   14af4:	lsl	w0, w0, #2
   14af8:	and	w0, w0, #0x4
   14afc:	lsr	w0, w1, w0
   14b00:	lsl	w0, w0, #16
   14b04:	and	w0, w0, #0xf0000
   14b08:	orr	w1, w2, w0
   14b0c:	ldr	x0, [sp, #24]
   14b10:	str	w1, [x0, #60]
   14b14:	ldr	x0, [sp, #24]
   14b18:	ldr	w0, [x0, #1092]
   14b1c:	add	w1, w0, #0x1
   14b20:	ldr	x0, [sp, #24]
   14b24:	str	w1, [x0, #1092]
   14b28:	ldr	x0, [sp, #24]
   14b2c:	ldr	w1, [x0, #1092]
   14b30:	ldr	x0, [sp, #24]
   14b34:	add	x0, x0, #0xc, lsl #12
   14b38:	ldr	w0, [x0, #14928]
   14b3c:	add	w0, w0, #0x1
   14b40:	cmp	w1, w0
   14b44:	b.eq	14f88 <BZ2_indexIntoF@@Base+0x1104>  // b.none
   14b48:	ldrb	w1, [sp, #47]
   14b4c:	ldr	x0, [sp, #24]
   14b50:	ldr	w0, [x0, #64]
   14b54:	cmp	w1, w0
   14b58:	b.eq	14b6c <BZ2_indexIntoF@@Base+0xce8>  // b.none
   14b5c:	ldrb	w1, [sp, #47]
   14b60:	ldr	x0, [sp, #24]
   14b64:	str	w1, [x0, #64]
   14b68:	b	14f9c <BZ2_indexIntoF@@Base+0x1118>
   14b6c:	ldr	x0, [sp, #24]
   14b70:	mov	w1, #0x2                   	// #2
   14b74:	str	w1, [x0, #16]
   14b78:	ldr	x0, [sp, #24]
   14b7c:	ldr	w1, [x0, #60]
   14b80:	ldr	x0, [sp, #24]
   14b84:	ldr	w0, [x0, #40]
   14b88:	mov	w2, w0
   14b8c:	mov	w0, #0x86a0                	// #34464
   14b90:	movk	w0, #0x1, lsl #16
   14b94:	mul	w0, w2, w0
   14b98:	cmp	w1, w0
   14b9c:	b.cc	14ba8 <BZ2_indexIntoF@@Base+0xd24>  // b.lo, b.ul, b.last
   14ba0:	mov	w0, #0x1                   	// #1
   14ba4:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14ba8:	ldr	x0, [sp, #24]
   14bac:	ldr	w0, [x0, #60]
   14bb0:	mov	w2, w0
   14bb4:	ldr	x0, [sp, #24]
   14bb8:	add	x0, x0, #0x448
   14bbc:	mov	x1, x0
   14bc0:	mov	w0, w2
   14bc4:	bl	13e84 <BZ2_indexIntoF@@Base>
   14bc8:	strb	w0, [sp, #47]
   14bcc:	ldr	x0, [sp, #24]
   14bd0:	ldr	x1, [x0, #3160]
   14bd4:	ldr	x0, [sp, #24]
   14bd8:	ldr	w0, [x0, #60]
   14bdc:	mov	w0, w0
   14be0:	lsl	x0, x0, #1
   14be4:	add	x0, x1, x0
   14be8:	ldrh	w0, [x0]
   14bec:	mov	w2, w0
   14bf0:	ldr	x0, [sp, #24]
   14bf4:	ldr	x1, [x0, #3168]
   14bf8:	ldr	x0, [sp, #24]
   14bfc:	ldr	w0, [x0, #60]
   14c00:	lsr	w0, w0, #1
   14c04:	mov	w0, w0
   14c08:	add	x0, x1, x0
   14c0c:	ldrb	w0, [x0]
   14c10:	mov	w1, w0
   14c14:	ldr	x0, [sp, #24]
   14c18:	ldr	w0, [x0, #60]
   14c1c:	lsl	w0, w0, #2
   14c20:	and	w0, w0, #0x4
   14c24:	lsr	w0, w1, w0
   14c28:	lsl	w0, w0, #16
   14c2c:	and	w0, w0, #0xf0000
   14c30:	orr	w1, w2, w0
   14c34:	ldr	x0, [sp, #24]
   14c38:	str	w1, [x0, #60]
   14c3c:	ldr	x0, [sp, #24]
   14c40:	ldr	w0, [x0, #1092]
   14c44:	add	w1, w0, #0x1
   14c48:	ldr	x0, [sp, #24]
   14c4c:	str	w1, [x0, #1092]
   14c50:	ldr	x0, [sp, #24]
   14c54:	ldr	w1, [x0, #1092]
   14c58:	ldr	x0, [sp, #24]
   14c5c:	add	x0, x0, #0xc, lsl #12
   14c60:	ldr	w0, [x0, #14928]
   14c64:	add	w0, w0, #0x1
   14c68:	cmp	w1, w0
   14c6c:	b.eq	14f90 <BZ2_indexIntoF@@Base+0x110c>  // b.none
   14c70:	ldrb	w1, [sp, #47]
   14c74:	ldr	x0, [sp, #24]
   14c78:	ldr	w0, [x0, #64]
   14c7c:	cmp	w1, w0
   14c80:	b.eq	14c94 <BZ2_indexIntoF@@Base+0xe10>  // b.none
   14c84:	ldrb	w1, [sp, #47]
   14c88:	ldr	x0, [sp, #24]
   14c8c:	str	w1, [x0, #64]
   14c90:	b	14f9c <BZ2_indexIntoF@@Base+0x1118>
   14c94:	ldr	x0, [sp, #24]
   14c98:	mov	w1, #0x3                   	// #3
   14c9c:	str	w1, [x0, #16]
   14ca0:	ldr	x0, [sp, #24]
   14ca4:	ldr	w1, [x0, #60]
   14ca8:	ldr	x0, [sp, #24]
   14cac:	ldr	w0, [x0, #40]
   14cb0:	mov	w2, w0
   14cb4:	mov	w0, #0x86a0                	// #34464
   14cb8:	movk	w0, #0x1, lsl #16
   14cbc:	mul	w0, w2, w0
   14cc0:	cmp	w1, w0
   14cc4:	b.cc	14cd0 <BZ2_indexIntoF@@Base+0xe4c>  // b.lo, b.ul, b.last
   14cc8:	mov	w0, #0x1                   	// #1
   14ccc:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14cd0:	ldr	x0, [sp, #24]
   14cd4:	ldr	w0, [x0, #60]
   14cd8:	mov	w2, w0
   14cdc:	ldr	x0, [sp, #24]
   14ce0:	add	x0, x0, #0x448
   14ce4:	mov	x1, x0
   14ce8:	mov	w0, w2
   14cec:	bl	13e84 <BZ2_indexIntoF@@Base>
   14cf0:	strb	w0, [sp, #47]
   14cf4:	ldr	x0, [sp, #24]
   14cf8:	ldr	x1, [x0, #3160]
   14cfc:	ldr	x0, [sp, #24]
   14d00:	ldr	w0, [x0, #60]
   14d04:	mov	w0, w0
   14d08:	lsl	x0, x0, #1
   14d0c:	add	x0, x1, x0
   14d10:	ldrh	w0, [x0]
   14d14:	mov	w2, w0
   14d18:	ldr	x0, [sp, #24]
   14d1c:	ldr	x1, [x0, #3168]
   14d20:	ldr	x0, [sp, #24]
   14d24:	ldr	w0, [x0, #60]
   14d28:	lsr	w0, w0, #1
   14d2c:	mov	w0, w0
   14d30:	add	x0, x1, x0
   14d34:	ldrb	w0, [x0]
   14d38:	mov	w1, w0
   14d3c:	ldr	x0, [sp, #24]
   14d40:	ldr	w0, [x0, #60]
   14d44:	lsl	w0, w0, #2
   14d48:	and	w0, w0, #0x4
   14d4c:	lsr	w0, w1, w0
   14d50:	lsl	w0, w0, #16
   14d54:	and	w0, w0, #0xf0000
   14d58:	orr	w1, w2, w0
   14d5c:	ldr	x0, [sp, #24]
   14d60:	str	w1, [x0, #60]
   14d64:	ldr	x0, [sp, #24]
   14d68:	ldr	w0, [x0, #1092]
   14d6c:	add	w1, w0, #0x1
   14d70:	ldr	x0, [sp, #24]
   14d74:	str	w1, [x0, #1092]
   14d78:	ldr	x0, [sp, #24]
   14d7c:	ldr	w1, [x0, #1092]
   14d80:	ldr	x0, [sp, #24]
   14d84:	add	x0, x0, #0xc, lsl #12
   14d88:	ldr	w0, [x0, #14928]
   14d8c:	add	w0, w0, #0x1
   14d90:	cmp	w1, w0
   14d94:	b.eq	14f98 <BZ2_indexIntoF@@Base+0x1114>  // b.none
   14d98:	ldrb	w1, [sp, #47]
   14d9c:	ldr	x0, [sp, #24]
   14da0:	ldr	w0, [x0, #64]
   14da4:	cmp	w1, w0
   14da8:	b.eq	14dbc <BZ2_indexIntoF@@Base+0xf38>  // b.none
   14dac:	ldrb	w1, [sp, #47]
   14db0:	ldr	x0, [sp, #24]
   14db4:	str	w1, [x0, #64]
   14db8:	b	14f9c <BZ2_indexIntoF@@Base+0x1118>
   14dbc:	ldr	x0, [sp, #24]
   14dc0:	ldr	w1, [x0, #60]
   14dc4:	ldr	x0, [sp, #24]
   14dc8:	ldr	w0, [x0, #40]
   14dcc:	mov	w2, w0
   14dd0:	mov	w0, #0x86a0                	// #34464
   14dd4:	movk	w0, #0x1, lsl #16
   14dd8:	mul	w0, w2, w0
   14ddc:	cmp	w1, w0
   14de0:	b.cc	14dec <BZ2_indexIntoF@@Base+0xf68>  // b.lo, b.ul, b.last
   14de4:	mov	w0, #0x1                   	// #1
   14de8:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14dec:	ldr	x0, [sp, #24]
   14df0:	ldr	w0, [x0, #60]
   14df4:	mov	w2, w0
   14df8:	ldr	x0, [sp, #24]
   14dfc:	add	x0, x0, #0x448
   14e00:	mov	x1, x0
   14e04:	mov	w0, w2
   14e08:	bl	13e84 <BZ2_indexIntoF@@Base>
   14e0c:	strb	w0, [sp, #47]
   14e10:	ldr	x0, [sp, #24]
   14e14:	ldr	x1, [x0, #3160]
   14e18:	ldr	x0, [sp, #24]
   14e1c:	ldr	w0, [x0, #60]
   14e20:	mov	w0, w0
   14e24:	lsl	x0, x0, #1
   14e28:	add	x0, x1, x0
   14e2c:	ldrh	w0, [x0]
   14e30:	mov	w2, w0
   14e34:	ldr	x0, [sp, #24]
   14e38:	ldr	x1, [x0, #3168]
   14e3c:	ldr	x0, [sp, #24]
   14e40:	ldr	w0, [x0, #60]
   14e44:	lsr	w0, w0, #1
   14e48:	mov	w0, w0
   14e4c:	add	x0, x1, x0
   14e50:	ldrb	w0, [x0]
   14e54:	mov	w1, w0
   14e58:	ldr	x0, [sp, #24]
   14e5c:	ldr	w0, [x0, #60]
   14e60:	lsl	w0, w0, #2
   14e64:	and	w0, w0, #0x4
   14e68:	lsr	w0, w1, w0
   14e6c:	lsl	w0, w0, #16
   14e70:	and	w0, w0, #0xf0000
   14e74:	orr	w1, w2, w0
   14e78:	ldr	x0, [sp, #24]
   14e7c:	str	w1, [x0, #60]
   14e80:	ldr	x0, [sp, #24]
   14e84:	ldr	w0, [x0, #1092]
   14e88:	add	w1, w0, #0x1
   14e8c:	ldr	x0, [sp, #24]
   14e90:	str	w1, [x0, #1092]
   14e94:	ldrb	w0, [sp, #47]
   14e98:	add	w1, w0, #0x4
   14e9c:	ldr	x0, [sp, #24]
   14ea0:	str	w1, [x0, #16]
   14ea4:	ldr	x0, [sp, #24]
   14ea8:	ldr	w1, [x0, #60]
   14eac:	ldr	x0, [sp, #24]
   14eb0:	ldr	w0, [x0, #40]
   14eb4:	mov	w2, w0
   14eb8:	mov	w0, #0x86a0                	// #34464
   14ebc:	movk	w0, #0x1, lsl #16
   14ec0:	mul	w0, w2, w0
   14ec4:	cmp	w1, w0
   14ec8:	b.cc	14ed4 <BZ2_indexIntoF@@Base+0x1050>  // b.lo, b.ul, b.last
   14ecc:	mov	w0, #0x1                   	// #1
   14ed0:	b	14fa0 <BZ2_indexIntoF@@Base+0x111c>
   14ed4:	ldr	x0, [sp, #24]
   14ed8:	ldr	w0, [x0, #60]
   14edc:	mov	w2, w0
   14ee0:	ldr	x0, [sp, #24]
   14ee4:	add	x0, x0, #0x448
   14ee8:	mov	x1, x0
   14eec:	mov	w0, w2
   14ef0:	bl	13e84 <BZ2_indexIntoF@@Base>
   14ef4:	mov	w1, w0
   14ef8:	ldr	x0, [sp, #24]
   14efc:	str	w1, [x0, #64]
   14f00:	ldr	x0, [sp, #24]
   14f04:	ldr	x1, [x0, #3160]
   14f08:	ldr	x0, [sp, #24]
   14f0c:	ldr	w0, [x0, #60]
   14f10:	mov	w0, w0
   14f14:	lsl	x0, x0, #1
   14f18:	add	x0, x1, x0
   14f1c:	ldrh	w0, [x0]
   14f20:	mov	w2, w0
   14f24:	ldr	x0, [sp, #24]
   14f28:	ldr	x1, [x0, #3168]
   14f2c:	ldr	x0, [sp, #24]
   14f30:	ldr	w0, [x0, #60]
   14f34:	lsr	w0, w0, #1
   14f38:	mov	w0, w0
   14f3c:	add	x0, x1, x0
   14f40:	ldrb	w0, [x0]
   14f44:	mov	w1, w0
   14f48:	ldr	x0, [sp, #24]
   14f4c:	ldr	w0, [x0, #60]
   14f50:	lsl	w0, w0, #2
   14f54:	and	w0, w0, #0x4
   14f58:	lsr	w0, w1, w0
   14f5c:	lsl	w0, w0, #16
   14f60:	and	w0, w0, #0xf0000
   14f64:	orr	w1, w2, w0
   14f68:	ldr	x0, [sp, #24]
   14f6c:	str	w1, [x0, #60]
   14f70:	ldr	x0, [sp, #24]
   14f74:	ldr	w0, [x0, #1092]
   14f78:	add	w1, w0, #0x1
   14f7c:	ldr	x0, [sp, #24]
   14f80:	str	w1, [x0, #1092]
   14f84:	b	148dc <BZ2_indexIntoF@@Base+0xa58>
   14f88:	nop
   14f8c:	b	148dc <BZ2_indexIntoF@@Base+0xa58>
   14f90:	nop
   14f94:	b	148dc <BZ2_indexIntoF@@Base+0xa58>
   14f98:	nop
   14f9c:	b	148dc <BZ2_indexIntoF@@Base+0xa58>
   14fa0:	ldp	x29, x30, [sp], #48
   14fa4:	ret

0000000000014fa8 <BZ2_bzDecompress@@Base>:
   14fa8:	stp	x29, x30, [sp, #-64]!
   14fac:	mov	x29, sp
   14fb0:	str	x0, [sp, #24]
   14fb4:	ldr	x0, [sp, #24]
   14fb8:	cmp	x0, #0x0
   14fbc:	b.ne	14fc8 <BZ2_bzDecompress@@Base+0x20>  // b.any
   14fc0:	mov	w0, #0xfffffffe            	// #-2
   14fc4:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   14fc8:	ldr	x0, [sp, #24]
   14fcc:	ldr	x0, [x0, #48]
   14fd0:	str	x0, [sp, #48]
   14fd4:	ldr	x0, [sp, #48]
   14fd8:	cmp	x0, #0x0
   14fdc:	b.ne	14fe8 <BZ2_bzDecompress@@Base+0x40>  // b.any
   14fe0:	mov	w0, #0xfffffffe            	// #-2
   14fe4:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   14fe8:	ldr	x0, [sp, #48]
   14fec:	ldr	x0, [x0]
   14ff0:	ldr	x1, [sp, #24]
   14ff4:	cmp	x1, x0
   14ff8:	b.eq	15004 <BZ2_bzDecompress@@Base+0x5c>  // b.none
   14ffc:	mov	w0, #0xfffffffe            	// #-2
   15000:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   15004:	ldr	x0, [sp, #48]
   15008:	ldr	w0, [x0, #8]
   1500c:	cmp	w0, #0x1
   15010:	b.ne	1501c <BZ2_bzDecompress@@Base+0x74>  // b.any
   15014:	mov	w0, #0xffffffff            	// #-1
   15018:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   1501c:	ldr	x0, [sp, #48]
   15020:	ldr	w0, [x0, #8]
   15024:	cmp	w0, #0x2
   15028:	b.ne	15184 <BZ2_bzDecompress@@Base+0x1dc>  // b.any
   1502c:	ldr	x0, [sp, #48]
   15030:	ldrb	w0, [x0, #44]
   15034:	cmp	w0, #0x0
   15038:	b.eq	1504c <BZ2_bzDecompress@@Base+0xa4>  // b.none
   1503c:	ldr	x0, [sp, #48]
   15040:	bl	13f04 <BZ2_indexIntoF@@Base+0x80>
   15044:	strb	w0, [sp, #63]
   15048:	b	15058 <BZ2_bzDecompress@@Base+0xb0>
   1504c:	ldr	x0, [sp, #48]
   15050:	bl	130e8 <BZ2_bzDecompressInit@@Base+0x194>
   15054:	strb	w0, [sp, #63]
   15058:	ldrb	w0, [sp, #63]
   1505c:	cmp	w0, #0x0
   15060:	b.eq	1506c <BZ2_bzDecompress@@Base+0xc4>  // b.none
   15064:	mov	w0, #0xfffffffc            	// #-4
   15068:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   1506c:	ldr	x0, [sp, #48]
   15070:	ldr	w1, [x0, #1092]
   15074:	ldr	x0, [sp, #48]
   15078:	add	x0, x0, #0xc, lsl #12
   1507c:	ldr	w0, [x0, #14928]
   15080:	add	w0, w0, #0x1
   15084:	cmp	w1, w0
   15088:	b.ne	1517c <BZ2_bzDecompress@@Base+0x1d4>  // b.any
   1508c:	ldr	x0, [sp, #48]
   15090:	ldr	w0, [x0, #16]
   15094:	cmp	w0, #0x0
   15098:	b.ne	1517c <BZ2_bzDecompress@@Base+0x1d4>  // b.any
   1509c:	ldr	x0, [sp, #48]
   150a0:	ldr	w0, [x0, #3184]
   150a4:	mvn	w1, w0
   150a8:	ldr	x0, [sp, #48]
   150ac:	str	w1, [x0, #3184]
   150b0:	ldr	x0, [sp, #48]
   150b4:	ldr	w0, [x0, #52]
   150b8:	cmp	w0, #0x2
   150bc:	b.le	150f4 <BZ2_bzDecompress@@Base+0x14c>
   150c0:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   150c4:	ldr	x0, [x0, #4016]
   150c8:	ldr	x4, [x0]
   150cc:	ldr	x0, [sp, #48]
   150d0:	ldr	w1, [x0, #3176]
   150d4:	ldr	x0, [sp, #48]
   150d8:	ldr	w0, [x0, #3184]
   150dc:	mov	w3, w0
   150e0:	mov	w2, w1
   150e4:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   150e8:	add	x1, x0, #0x850
   150ec:	mov	x0, x4
   150f0:	bl	1730 <fprintf@plt>
   150f4:	ldr	x0, [sp, #48]
   150f8:	ldr	w0, [x0, #52]
   150fc:	cmp	w0, #0x1
   15100:	b.le	1511c <BZ2_bzDecompress@@Base+0x174>
   15104:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   15108:	ldr	x0, [x0, #4016]
   1510c:	ldr	x0, [x0]
   15110:	mov	x1, x0
   15114:	mov	w0, #0x5d                  	// #93
   15118:	bl	1500 <fputc@plt>
   1511c:	ldr	x0, [sp, #48]
   15120:	ldr	w1, [x0, #3184]
   15124:	ldr	x0, [sp, #48]
   15128:	ldr	w0, [x0, #3176]
   1512c:	cmp	w1, w0
   15130:	b.eq	1513c <BZ2_bzDecompress@@Base+0x194>  // b.none
   15134:	mov	w0, #0xfffffffc            	// #-4
   15138:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   1513c:	ldr	x0, [sp, #48]
   15140:	ldr	w0, [x0, #3188]
   15144:	ror	w1, w0, #31
   15148:	ldr	x0, [sp, #48]
   1514c:	str	w1, [x0, #3188]
   15150:	ldr	x0, [sp, #48]
   15154:	ldr	w1, [x0, #3188]
   15158:	ldr	x0, [sp, #48]
   1515c:	ldr	w0, [x0, #3184]
   15160:	eor	w1, w1, w0
   15164:	ldr	x0, [sp, #48]
   15168:	str	w1, [x0, #3188]
   1516c:	ldr	x0, [sp, #48]
   15170:	mov	w1, #0xe                   	// #14
   15174:	str	w1, [x0, #8]
   15178:	b	15184 <BZ2_bzDecompress@@Base+0x1dc>
   1517c:	mov	w0, #0x0                   	// #0
   15180:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   15184:	ldr	x0, [sp, #48]
   15188:	ldr	w0, [x0, #8]
   1518c:	cmp	w0, #0x9
   15190:	b.le	15004 <BZ2_bzDecompress@@Base+0x5c>
   15194:	ldr	x0, [sp, #48]
   15198:	bl	15e0 <BZ2_decompress@plt>
   1519c:	str	w0, [sp, #44]
   151a0:	ldr	w0, [sp, #44]
   151a4:	cmp	w0, #0x4
   151a8:	b.ne	15218 <BZ2_bzDecompress@@Base+0x270>  // b.any
   151ac:	ldr	x0, [sp, #48]
   151b0:	ldr	w0, [x0, #52]
   151b4:	cmp	w0, #0x2
   151b8:	b.le	151f0 <BZ2_bzDecompress@@Base+0x248>
   151bc:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   151c0:	ldr	x0, [x0, #4016]
   151c4:	ldr	x4, [x0]
   151c8:	ldr	x0, [sp, #48]
   151cc:	ldr	w1, [x0, #3180]
   151d0:	ldr	x0, [sp, #48]
   151d4:	ldr	w0, [x0, #3188]
   151d8:	mov	w3, w0
   151dc:	mov	w2, w1
   151e0:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   151e4:	add	x1, x0, #0x868
   151e8:	mov	x0, x4
   151ec:	bl	1730 <fprintf@plt>
   151f0:	ldr	x0, [sp, #48]
   151f4:	ldr	w1, [x0, #3188]
   151f8:	ldr	x0, [sp, #48]
   151fc:	ldr	w0, [x0, #3180]
   15200:	cmp	w1, w0
   15204:	b.eq	15210 <BZ2_bzDecompress@@Base+0x268>  // b.none
   15208:	mov	w0, #0xfffffffc            	// #-4
   1520c:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   15210:	ldr	w0, [sp, #44]
   15214:	b	1522c <BZ2_bzDecompress@@Base+0x284>
   15218:	ldr	x0, [sp, #48]
   1521c:	ldr	w0, [x0, #8]
   15220:	cmp	w0, #0x2
   15224:	b.eq	15004 <BZ2_bzDecompress@@Base+0x5c>  // b.none
   15228:	ldr	w0, [sp, #44]
   1522c:	ldp	x29, x30, [sp], #64
   15230:	ret

0000000000015234 <BZ2_bzDecompressEnd@@Base>:
   15234:	stp	x29, x30, [sp, #-48]!
   15238:	mov	x29, sp
   1523c:	str	x0, [sp, #24]
   15240:	ldr	x0, [sp, #24]
   15244:	cmp	x0, #0x0
   15248:	b.ne	15254 <BZ2_bzDecompressEnd@@Base+0x20>  // b.any
   1524c:	mov	w0, #0xfffffffe            	// #-2
   15250:	b	1535c <BZ2_bzDecompressEnd@@Base+0x128>
   15254:	ldr	x0, [sp, #24]
   15258:	ldr	x0, [x0, #48]
   1525c:	str	x0, [sp, #40]
   15260:	ldr	x0, [sp, #40]
   15264:	cmp	x0, #0x0
   15268:	b.ne	15274 <BZ2_bzDecompressEnd@@Base+0x40>  // b.any
   1526c:	mov	w0, #0xfffffffe            	// #-2
   15270:	b	1535c <BZ2_bzDecompressEnd@@Base+0x128>
   15274:	ldr	x0, [sp, #40]
   15278:	ldr	x0, [x0]
   1527c:	ldr	x1, [sp, #24]
   15280:	cmp	x1, x0
   15284:	b.eq	15290 <BZ2_bzDecompressEnd@@Base+0x5c>  // b.none
   15288:	mov	w0, #0xfffffffe            	// #-2
   1528c:	b	1535c <BZ2_bzDecompressEnd@@Base+0x128>
   15290:	ldr	x0, [sp, #40]
   15294:	ldr	x0, [x0, #3152]
   15298:	cmp	x0, #0x0
   1529c:	b.eq	152c4 <BZ2_bzDecompressEnd@@Base+0x90>  // b.none
   152a0:	ldr	x0, [sp, #24]
   152a4:	ldr	x2, [x0, #64]
   152a8:	ldr	x0, [sp, #24]
   152ac:	ldr	x3, [x0, #72]
   152b0:	ldr	x0, [sp, #40]
   152b4:	ldr	x0, [x0, #3152]
   152b8:	mov	x1, x0
   152bc:	mov	x0, x3
   152c0:	blr	x2
   152c4:	ldr	x0, [sp, #40]
   152c8:	ldr	x0, [x0, #3160]
   152cc:	cmp	x0, #0x0
   152d0:	b.eq	152f8 <BZ2_bzDecompressEnd@@Base+0xc4>  // b.none
   152d4:	ldr	x0, [sp, #24]
   152d8:	ldr	x2, [x0, #64]
   152dc:	ldr	x0, [sp, #24]
   152e0:	ldr	x3, [x0, #72]
   152e4:	ldr	x0, [sp, #40]
   152e8:	ldr	x0, [x0, #3160]
   152ec:	mov	x1, x0
   152f0:	mov	x0, x3
   152f4:	blr	x2
   152f8:	ldr	x0, [sp, #40]
   152fc:	ldr	x0, [x0, #3168]
   15300:	cmp	x0, #0x0
   15304:	b.eq	1532c <BZ2_bzDecompressEnd@@Base+0xf8>  // b.none
   15308:	ldr	x0, [sp, #24]
   1530c:	ldr	x2, [x0, #64]
   15310:	ldr	x0, [sp, #24]
   15314:	ldr	x3, [x0, #72]
   15318:	ldr	x0, [sp, #40]
   1531c:	ldr	x0, [x0, #3168]
   15320:	mov	x1, x0
   15324:	mov	x0, x3
   15328:	blr	x2
   1532c:	ldr	x0, [sp, #24]
   15330:	ldr	x2, [x0, #64]
   15334:	ldr	x0, [sp, #24]
   15338:	ldr	x3, [x0, #72]
   1533c:	ldr	x0, [sp, #24]
   15340:	ldr	x0, [x0, #48]
   15344:	mov	x1, x0
   15348:	mov	x0, x3
   1534c:	blr	x2
   15350:	ldr	x0, [sp, #24]
   15354:	str	xzr, [x0, #48]
   15358:	mov	w0, #0x0                   	// #0
   1535c:	ldp	x29, x30, [sp], #48
   15360:	ret
   15364:	stp	x29, x30, [sp, #-48]!
   15368:	mov	x29, sp
   1536c:	str	x0, [sp, #24]
   15370:	ldr	x0, [sp, #24]
   15374:	bl	1570 <fgetc@plt>
   15378:	str	w0, [sp, #44]
   1537c:	ldr	w0, [sp, #44]
   15380:	cmn	w0, #0x1
   15384:	b.ne	15390 <BZ2_bzDecompressEnd@@Base+0x15c>  // b.any
   15388:	mov	w0, #0x1                   	// #1
   1538c:	b	153a0 <BZ2_bzDecompressEnd@@Base+0x16c>
   15390:	ldr	x1, [sp, #24]
   15394:	ldr	w0, [sp, #44]
   15398:	bl	1670 <ungetc@plt>
   1539c:	mov	w0, #0x0                   	// #0
   153a0:	ldp	x29, x30, [sp], #48
   153a4:	ret

00000000000153a8 <BZ2_bzWriteOpen@@Base>:
   153a8:	stp	x29, x30, [sp, #-64]!
   153ac:	mov	x29, sp
   153b0:	str	x0, [sp, #40]
   153b4:	str	x1, [sp, #32]
   153b8:	str	w2, [sp, #28]
   153bc:	str	w3, [sp, #24]
   153c0:	str	w4, [sp, #20]
   153c4:	str	xzr, [sp, #56]
   153c8:	ldr	x0, [sp, #40]
   153cc:	cmp	x0, #0x0
   153d0:	b.eq	153dc <BZ2_bzWriteOpen@@Base+0x34>  // b.none
   153d4:	ldr	x0, [sp, #40]
   153d8:	str	wzr, [x0]
   153dc:	ldr	x0, [sp, #56]
   153e0:	cmp	x0, #0x0
   153e4:	b.eq	153f0 <BZ2_bzWriteOpen@@Base+0x48>  // b.none
   153e8:	ldr	x0, [sp, #56]
   153ec:	str	wzr, [x0, #5096]
   153f0:	ldr	x0, [sp, #32]
   153f4:	cmp	x0, #0x0
   153f8:	b.eq	15444 <BZ2_bzWriteOpen@@Base+0x9c>  // b.none
   153fc:	ldr	w0, [sp, #28]
   15400:	cmp	w0, #0x0
   15404:	b.le	15444 <BZ2_bzWriteOpen@@Base+0x9c>
   15408:	ldr	w0, [sp, #28]
   1540c:	cmp	w0, #0x9
   15410:	b.gt	15444 <BZ2_bzWriteOpen@@Base+0x9c>
   15414:	ldr	w0, [sp, #20]
   15418:	cmp	w0, #0x0
   1541c:	b.lt	15444 <BZ2_bzWriteOpen@@Base+0x9c>  // b.tstop
   15420:	ldr	w0, [sp, #20]
   15424:	cmp	w0, #0xfa
   15428:	b.gt	15444 <BZ2_bzWriteOpen@@Base+0x9c>
   1542c:	ldr	w0, [sp, #24]
   15430:	cmp	w0, #0x0
   15434:	b.lt	15444 <BZ2_bzWriteOpen@@Base+0x9c>  // b.tstop
   15438:	ldr	w0, [sp, #24]
   1543c:	cmp	w0, #0x4
   15440:	b.le	1547c <BZ2_bzWriteOpen@@Base+0xd4>
   15444:	ldr	x0, [sp, #40]
   15448:	cmp	x0, #0x0
   1544c:	b.eq	1545c <BZ2_bzWriteOpen@@Base+0xb4>  // b.none
   15450:	ldr	x0, [sp, #40]
   15454:	mov	w1, #0xfffffffe            	// #-2
   15458:	str	w1, [x0]
   1545c:	ldr	x0, [sp, #56]
   15460:	cmp	x0, #0x0
   15464:	b.eq	15474 <BZ2_bzWriteOpen@@Base+0xcc>  // b.none
   15468:	ldr	x0, [sp, #56]
   1546c:	mov	w1, #0xfffffffe            	// #-2
   15470:	str	w1, [x0, #5096]
   15474:	mov	x0, #0x0                   	// #0
   15478:	b	15620 <BZ2_bzWriteOpen@@Base+0x278>
   1547c:	ldr	x0, [sp, #32]
   15480:	bl	1740 <ferror@plt>
   15484:	cmp	w0, #0x0
   15488:	b.eq	154c4 <BZ2_bzWriteOpen@@Base+0x11c>  // b.none
   1548c:	ldr	x0, [sp, #40]
   15490:	cmp	x0, #0x0
   15494:	b.eq	154a4 <BZ2_bzWriteOpen@@Base+0xfc>  // b.none
   15498:	ldr	x0, [sp, #40]
   1549c:	mov	w1, #0xfffffffa            	// #-6
   154a0:	str	w1, [x0]
   154a4:	ldr	x0, [sp, #56]
   154a8:	cmp	x0, #0x0
   154ac:	b.eq	154bc <BZ2_bzWriteOpen@@Base+0x114>  // b.none
   154b0:	ldr	x0, [sp, #56]
   154b4:	mov	w1, #0xfffffffa            	// #-6
   154b8:	str	w1, [x0, #5096]
   154bc:	mov	x0, #0x0                   	// #0
   154c0:	b	15620 <BZ2_bzWriteOpen@@Base+0x278>
   154c4:	mov	x0, #0x13f0                	// #5104
   154c8:	bl	1520 <malloc@plt>
   154cc:	str	x0, [sp, #56]
   154d0:	ldr	x0, [sp, #56]
   154d4:	cmp	x0, #0x0
   154d8:	b.ne	15514 <BZ2_bzWriteOpen@@Base+0x16c>  // b.any
   154dc:	ldr	x0, [sp, #40]
   154e0:	cmp	x0, #0x0
   154e4:	b.eq	154f4 <BZ2_bzWriteOpen@@Base+0x14c>  // b.none
   154e8:	ldr	x0, [sp, #40]
   154ec:	mov	w1, #0xfffffffd            	// #-3
   154f0:	str	w1, [x0]
   154f4:	ldr	x0, [sp, #56]
   154f8:	cmp	x0, #0x0
   154fc:	b.eq	1550c <BZ2_bzWriteOpen@@Base+0x164>  // b.none
   15500:	ldr	x0, [sp, #56]
   15504:	mov	w1, #0xfffffffd            	// #-3
   15508:	str	w1, [x0, #5096]
   1550c:	mov	x0, #0x0                   	// #0
   15510:	b	15620 <BZ2_bzWriteOpen@@Base+0x278>
   15514:	ldr	x0, [sp, #40]
   15518:	cmp	x0, #0x0
   1551c:	b.eq	15528 <BZ2_bzWriteOpen@@Base+0x180>  // b.none
   15520:	ldr	x0, [sp, #40]
   15524:	str	wzr, [x0]
   15528:	ldr	x0, [sp, #56]
   1552c:	cmp	x0, #0x0
   15530:	b.eq	1553c <BZ2_bzWriteOpen@@Base+0x194>  // b.none
   15534:	ldr	x0, [sp, #56]
   15538:	str	wzr, [x0, #5096]
   1553c:	ldr	x0, [sp, #56]
   15540:	add	x0, x0, #0x1, lsl #12
   15544:	strb	wzr, [x0, #1004]
   15548:	ldr	x0, [sp, #56]
   1554c:	str	wzr, [x0, #5008]
   15550:	ldr	x0, [sp, #56]
   15554:	ldr	x1, [sp, #32]
   15558:	str	x1, [x0]
   1555c:	ldr	x0, [sp, #56]
   15560:	add	x0, x0, #0x1, lsl #12
   15564:	mov	w1, #0x1                   	// #1
   15568:	strb	w1, [x0, #916]
   1556c:	ldr	x0, [sp, #56]
   15570:	str	xzr, [x0, #5072]
   15574:	ldr	x0, [sp, #56]
   15578:	str	xzr, [x0, #5080]
   1557c:	ldr	x0, [sp, #56]
   15580:	str	xzr, [x0, #5088]
   15584:	ldr	w0, [sp, #20]
   15588:	cmp	w0, #0x0
   1558c:	b.ne	15598 <BZ2_bzWriteOpen@@Base+0x1f0>  // b.any
   15590:	mov	w0, #0x1e                  	// #30
   15594:	str	w0, [sp, #20]
   15598:	ldr	x1, [sp, #56]
   1559c:	mov	x0, #0x1398                	// #5016
   155a0:	add	x0, x1, x0
   155a4:	ldr	w3, [sp, #20]
   155a8:	ldr	w2, [sp, #24]
   155ac:	ldr	w1, [sp, #28]
   155b0:	bl	15a0 <BZ2_bzCompressInit@plt>
   155b4:	str	w0, [sp, #52]
   155b8:	ldr	w0, [sp, #52]
   155bc:	cmp	w0, #0x0
   155c0:	b.eq	15604 <BZ2_bzWriteOpen@@Base+0x25c>  // b.none
   155c4:	ldr	x0, [sp, #40]
   155c8:	cmp	x0, #0x0
   155cc:	b.eq	155dc <BZ2_bzWriteOpen@@Base+0x234>  // b.none
   155d0:	ldr	x0, [sp, #40]
   155d4:	ldr	w1, [sp, #52]
   155d8:	str	w1, [x0]
   155dc:	ldr	x0, [sp, #56]
   155e0:	cmp	x0, #0x0
   155e4:	b.eq	155f4 <BZ2_bzWriteOpen@@Base+0x24c>  // b.none
   155e8:	ldr	x0, [sp, #56]
   155ec:	ldr	w1, [sp, #52]
   155f0:	str	w1, [x0, #5096]
   155f4:	ldr	x0, [sp, #56]
   155f8:	bl	1660 <free@plt>
   155fc:	mov	x0, #0x0                   	// #0
   15600:	b	15620 <BZ2_bzWriteOpen@@Base+0x278>
   15604:	ldr	x0, [sp, #56]
   15608:	str	wzr, [x0, #5024]
   1560c:	ldr	x0, [sp, #56]
   15610:	add	x0, x0, #0x1, lsl #12
   15614:	mov	w1, #0x1                   	// #1
   15618:	strb	w1, [x0, #1004]
   1561c:	ldr	x0, [sp, #56]
   15620:	ldp	x29, x30, [sp], #64
   15624:	ret

0000000000015628 <BZ2_bzWrite@@Base>:
   15628:	stp	x29, x30, [sp, #-80]!
   1562c:	mov	x29, sp
   15630:	str	x0, [sp, #40]
   15634:	str	x1, [sp, #32]
   15638:	str	x2, [sp, #24]
   1563c:	str	w3, [sp, #20]
   15640:	ldr	x0, [sp, #32]
   15644:	str	x0, [sp, #72]
   15648:	ldr	x0, [sp, #40]
   1564c:	cmp	x0, #0x0
   15650:	b.eq	1565c <BZ2_bzWrite@@Base+0x34>  // b.none
   15654:	ldr	x0, [sp, #40]
   15658:	str	wzr, [x0]
   1565c:	ldr	x0, [sp, #72]
   15660:	cmp	x0, #0x0
   15664:	b.eq	15670 <BZ2_bzWrite@@Base+0x48>  // b.none
   15668:	ldr	x0, [sp, #72]
   1566c:	str	wzr, [x0, #5096]
   15670:	ldr	x0, [sp, #72]
   15674:	cmp	x0, #0x0
   15678:	b.eq	15694 <BZ2_bzWrite@@Base+0x6c>  // b.none
   1567c:	ldr	x0, [sp, #24]
   15680:	cmp	x0, #0x0
   15684:	b.eq	15694 <BZ2_bzWrite@@Base+0x6c>  // b.none
   15688:	ldr	w0, [sp, #20]
   1568c:	cmp	w0, #0x0
   15690:	b.ge	156c8 <BZ2_bzWrite@@Base+0xa0>  // b.tcont
   15694:	ldr	x0, [sp, #40]
   15698:	cmp	x0, #0x0
   1569c:	b.eq	156ac <BZ2_bzWrite@@Base+0x84>  // b.none
   156a0:	ldr	x0, [sp, #40]
   156a4:	mov	w1, #0xfffffffe            	// #-2
   156a8:	str	w1, [x0]
   156ac:	ldr	x0, [sp, #72]
   156b0:	cmp	x0, #0x0
   156b4:	b.eq	15904 <BZ2_bzWrite@@Base+0x2dc>  // b.none
   156b8:	ldr	x0, [sp, #72]
   156bc:	mov	w1, #0xfffffffe            	// #-2
   156c0:	str	w1, [x0, #5096]
   156c4:	b	15904 <BZ2_bzWrite@@Base+0x2dc>
   156c8:	ldr	x0, [sp, #72]
   156cc:	add	x0, x0, #0x1, lsl #12
   156d0:	ldrb	w0, [x0, #916]
   156d4:	cmp	w0, #0x0
   156d8:	b.ne	15710 <BZ2_bzWrite@@Base+0xe8>  // b.any
   156dc:	ldr	x0, [sp, #40]
   156e0:	cmp	x0, #0x0
   156e4:	b.eq	156f4 <BZ2_bzWrite@@Base+0xcc>  // b.none
   156e8:	ldr	x0, [sp, #40]
   156ec:	mov	w1, #0xffffffff            	// #-1
   156f0:	str	w1, [x0]
   156f4:	ldr	x0, [sp, #72]
   156f8:	cmp	x0, #0x0
   156fc:	b.eq	1590c <BZ2_bzWrite@@Base+0x2e4>  // b.none
   15700:	ldr	x0, [sp, #72]
   15704:	mov	w1, #0xffffffff            	// #-1
   15708:	str	w1, [x0, #5096]
   1570c:	b	1590c <BZ2_bzWrite@@Base+0x2e4>
   15710:	ldr	x0, [sp, #72]
   15714:	ldr	x0, [x0]
   15718:	bl	1740 <ferror@plt>
   1571c:	cmp	w0, #0x0
   15720:	b.eq	15758 <BZ2_bzWrite@@Base+0x130>  // b.none
   15724:	ldr	x0, [sp, #40]
   15728:	cmp	x0, #0x0
   1572c:	b.eq	1573c <BZ2_bzWrite@@Base+0x114>  // b.none
   15730:	ldr	x0, [sp, #40]
   15734:	mov	w1, #0xfffffffa            	// #-6
   15738:	str	w1, [x0]
   1573c:	ldr	x0, [sp, #72]
   15740:	cmp	x0, #0x0
   15744:	b.eq	15914 <BZ2_bzWrite@@Base+0x2ec>  // b.none
   15748:	ldr	x0, [sp, #72]
   1574c:	mov	w1, #0xfffffffa            	// #-6
   15750:	str	w1, [x0, #5096]
   15754:	b	15914 <BZ2_bzWrite@@Base+0x2ec>
   15758:	ldr	w0, [sp, #20]
   1575c:	cmp	w0, #0x0
   15760:	b.ne	15790 <BZ2_bzWrite@@Base+0x168>  // b.any
   15764:	ldr	x0, [sp, #40]
   15768:	cmp	x0, #0x0
   1576c:	b.eq	15778 <BZ2_bzWrite@@Base+0x150>  // b.none
   15770:	ldr	x0, [sp, #40]
   15774:	str	wzr, [x0]
   15778:	ldr	x0, [sp, #72]
   1577c:	cmp	x0, #0x0
   15780:	b.eq	1591c <BZ2_bzWrite@@Base+0x2f4>  // b.none
   15784:	ldr	x0, [sp, #72]
   15788:	str	wzr, [x0, #5096]
   1578c:	b	1591c <BZ2_bzWrite@@Base+0x2f4>
   15790:	ldr	w1, [sp, #20]
   15794:	ldr	x0, [sp, #72]
   15798:	str	w1, [x0, #5024]
   1579c:	ldr	x0, [sp, #72]
   157a0:	ldr	x1, [sp, #24]
   157a4:	str	x1, [x0, #5016]
   157a8:	ldr	x0, [sp, #72]
   157ac:	mov	w1, #0x1388                	// #5000
   157b0:	str	w1, [x0, #5048]
   157b4:	ldr	x0, [sp, #72]
   157b8:	add	x1, x0, #0x8
   157bc:	ldr	x0, [sp, #72]
   157c0:	str	x1, [x0, #5040]
   157c4:	ldr	x1, [sp, #72]
   157c8:	mov	x0, #0x1398                	// #5016
   157cc:	add	x0, x1, x0
   157d0:	mov	w1, #0x0                   	// #0
   157d4:	bl	1600 <BZ2_bzCompress@plt>
   157d8:	str	w0, [sp, #68]
   157dc:	ldr	w0, [sp, #68]
   157e0:	cmp	w0, #0x1
   157e4:	b.eq	1581c <BZ2_bzWrite@@Base+0x1f4>  // b.none
   157e8:	ldr	x0, [sp, #40]
   157ec:	cmp	x0, #0x0
   157f0:	b.eq	15800 <BZ2_bzWrite@@Base+0x1d8>  // b.none
   157f4:	ldr	x0, [sp, #40]
   157f8:	ldr	w1, [sp, #68]
   157fc:	str	w1, [x0]
   15800:	ldr	x0, [sp, #72]
   15804:	cmp	x0, #0x0
   15808:	b.eq	15924 <BZ2_bzWrite@@Base+0x2fc>  // b.none
   1580c:	ldr	x0, [sp, #72]
   15810:	ldr	w1, [sp, #68]
   15814:	str	w1, [x0, #5096]
   15818:	b	15924 <BZ2_bzWrite@@Base+0x2fc>
   1581c:	ldr	x0, [sp, #72]
   15820:	ldr	w1, [x0, #5048]
   15824:	mov	w0, #0x1387                	// #4999
   15828:	cmp	w1, w0
   1582c:	b.hi	158c8 <BZ2_bzWrite@@Base+0x2a0>  // b.pmore
   15830:	ldr	x0, [sp, #72]
   15834:	ldr	w0, [x0, #5048]
   15838:	mov	w1, #0x1388                	// #5000
   1583c:	sub	w0, w1, w0
   15840:	str	w0, [sp, #64]
   15844:	ldr	x0, [sp, #72]
   15848:	add	x4, x0, #0x8
   1584c:	ldrsw	x1, [sp, #64]
   15850:	ldr	x0, [sp, #72]
   15854:	ldr	x0, [x0]
   15858:	mov	x3, x0
   1585c:	mov	x2, x1
   15860:	mov	x1, #0x1                   	// #1
   15864:	mov	x0, x4
   15868:	bl	16d0 <fwrite@plt>
   1586c:	str	w0, [sp, #60]
   15870:	ldr	w1, [sp, #64]
   15874:	ldr	w0, [sp, #60]
   15878:	cmp	w1, w0
   1587c:	b.ne	15894 <BZ2_bzWrite@@Base+0x26c>  // b.any
   15880:	ldr	x0, [sp, #72]
   15884:	ldr	x0, [x0]
   15888:	bl	1740 <ferror@plt>
   1588c:	cmp	w0, #0x0
   15890:	b.eq	158c8 <BZ2_bzWrite@@Base+0x2a0>  // b.none
   15894:	ldr	x0, [sp, #40]
   15898:	cmp	x0, #0x0
   1589c:	b.eq	158ac <BZ2_bzWrite@@Base+0x284>  // b.none
   158a0:	ldr	x0, [sp, #40]
   158a4:	mov	w1, #0xfffffffa            	// #-6
   158a8:	str	w1, [x0]
   158ac:	ldr	x0, [sp, #72]
   158b0:	cmp	x0, #0x0
   158b4:	b.eq	1592c <BZ2_bzWrite@@Base+0x304>  // b.none
   158b8:	ldr	x0, [sp, #72]
   158bc:	mov	w1, #0xfffffffa            	// #-6
   158c0:	str	w1, [x0, #5096]
   158c4:	b	1592c <BZ2_bzWrite@@Base+0x304>
   158c8:	ldr	x0, [sp, #72]
   158cc:	ldr	w0, [x0, #5024]
   158d0:	cmp	w0, #0x0
   158d4:	b.ne	157a8 <BZ2_bzWrite@@Base+0x180>  // b.any
   158d8:	ldr	x0, [sp, #40]
   158dc:	cmp	x0, #0x0
   158e0:	b.eq	158ec <BZ2_bzWrite@@Base+0x2c4>  // b.none
   158e4:	ldr	x0, [sp, #40]
   158e8:	str	wzr, [x0]
   158ec:	ldr	x0, [sp, #72]
   158f0:	cmp	x0, #0x0
   158f4:	b.eq	15934 <BZ2_bzWrite@@Base+0x30c>  // b.none
   158f8:	ldr	x0, [sp, #72]
   158fc:	str	wzr, [x0, #5096]
   15900:	b	15934 <BZ2_bzWrite@@Base+0x30c>
   15904:	nop
   15908:	b	15938 <BZ2_bzWrite@@Base+0x310>
   1590c:	nop
   15910:	b	15938 <BZ2_bzWrite@@Base+0x310>
   15914:	nop
   15918:	b	15938 <BZ2_bzWrite@@Base+0x310>
   1591c:	nop
   15920:	b	15938 <BZ2_bzWrite@@Base+0x310>
   15924:	nop
   15928:	b	15938 <BZ2_bzWrite@@Base+0x310>
   1592c:	nop
   15930:	b	15938 <BZ2_bzWrite@@Base+0x310>
   15934:	nop
   15938:	ldp	x29, x30, [sp], #80
   1593c:	ret

0000000000015940 <BZ2_bzWriteClose@@Base>:
   15940:	stp	x29, x30, [sp, #-64]!
   15944:	mov	x29, sp
   15948:	str	x0, [sp, #56]
   1594c:	str	x1, [sp, #48]
   15950:	str	w2, [sp, #44]
   15954:	str	x3, [sp, #32]
   15958:	str	x4, [sp, #24]
   1595c:	mov	x6, #0x0                   	// #0
   15960:	ldr	x5, [sp, #24]
   15964:	mov	x4, #0x0                   	// #0
   15968:	ldr	x3, [sp, #32]
   1596c:	ldr	w2, [sp, #44]
   15970:	ldr	x1, [sp, #48]
   15974:	ldr	x0, [sp, #56]
   15978:	bl	16a0 <BZ2_bzWriteClose64@plt>
   1597c:	nop
   15980:	ldp	x29, x30, [sp], #64
   15984:	ret

0000000000015988 <BZ2_bzWriteClose64@@Base>:
   15988:	stp	x29, x30, [sp, #-112]!
   1598c:	mov	x29, sp
   15990:	str	x0, [sp, #72]
   15994:	str	x1, [sp, #64]
   15998:	str	w2, [sp, #60]
   1599c:	str	x3, [sp, #48]
   159a0:	str	x4, [sp, #40]
   159a4:	str	x5, [sp, #32]
   159a8:	str	x6, [sp, #24]
   159ac:	ldr	x0, [sp, #64]
   159b0:	str	x0, [sp, #104]
   159b4:	ldr	x0, [sp, #104]
   159b8:	cmp	x0, #0x0
   159bc:	b.ne	159ec <BZ2_bzWriteClose64@@Base+0x64>  // b.any
   159c0:	ldr	x0, [sp, #72]
   159c4:	cmp	x0, #0x0
   159c8:	b.eq	159d4 <BZ2_bzWriteClose64@@Base+0x4c>  // b.none
   159cc:	ldr	x0, [sp, #72]
   159d0:	str	wzr, [x0]
   159d4:	ldr	x0, [sp, #104]
   159d8:	cmp	x0, #0x0
   159dc:	b.eq	15d50 <BZ2_bzWriteClose64@@Base+0x3c8>  // b.none
   159e0:	ldr	x0, [sp, #104]
   159e4:	str	wzr, [x0, #5096]
   159e8:	b	15d50 <BZ2_bzWriteClose64@@Base+0x3c8>
   159ec:	ldr	x0, [sp, #104]
   159f0:	add	x0, x0, #0x1, lsl #12
   159f4:	ldrb	w0, [x0, #916]
   159f8:	cmp	w0, #0x0
   159fc:	b.ne	15a34 <BZ2_bzWriteClose64@@Base+0xac>  // b.any
   15a00:	ldr	x0, [sp, #72]
   15a04:	cmp	x0, #0x0
   15a08:	b.eq	15a18 <BZ2_bzWriteClose64@@Base+0x90>  // b.none
   15a0c:	ldr	x0, [sp, #72]
   15a10:	mov	w1, #0xffffffff            	// #-1
   15a14:	str	w1, [x0]
   15a18:	ldr	x0, [sp, #104]
   15a1c:	cmp	x0, #0x0
   15a20:	b.eq	15d58 <BZ2_bzWriteClose64@@Base+0x3d0>  // b.none
   15a24:	ldr	x0, [sp, #104]
   15a28:	mov	w1, #0xffffffff            	// #-1
   15a2c:	str	w1, [x0, #5096]
   15a30:	b	15d58 <BZ2_bzWriteClose64@@Base+0x3d0>
   15a34:	ldr	x0, [sp, #104]
   15a38:	ldr	x0, [x0]
   15a3c:	bl	1740 <ferror@plt>
   15a40:	cmp	w0, #0x0
   15a44:	b.eq	15a7c <BZ2_bzWriteClose64@@Base+0xf4>  // b.none
   15a48:	ldr	x0, [sp, #72]
   15a4c:	cmp	x0, #0x0
   15a50:	b.eq	15a60 <BZ2_bzWriteClose64@@Base+0xd8>  // b.none
   15a54:	ldr	x0, [sp, #72]
   15a58:	mov	w1, #0xfffffffa            	// #-6
   15a5c:	str	w1, [x0]
   15a60:	ldr	x0, [sp, #104]
   15a64:	cmp	x0, #0x0
   15a68:	b.eq	15d60 <BZ2_bzWriteClose64@@Base+0x3d8>  // b.none
   15a6c:	ldr	x0, [sp, #104]
   15a70:	mov	w1, #0xfffffffa            	// #-6
   15a74:	str	w1, [x0, #5096]
   15a78:	b	15d60 <BZ2_bzWriteClose64@@Base+0x3d8>
   15a7c:	ldr	x0, [sp, #48]
   15a80:	cmp	x0, #0x0
   15a84:	b.eq	15a90 <BZ2_bzWriteClose64@@Base+0x108>  // b.none
   15a88:	ldr	x0, [sp, #48]
   15a8c:	str	wzr, [x0]
   15a90:	ldr	x0, [sp, #40]
   15a94:	cmp	x0, #0x0
   15a98:	b.eq	15aa4 <BZ2_bzWriteClose64@@Base+0x11c>  // b.none
   15a9c:	ldr	x0, [sp, #40]
   15aa0:	str	wzr, [x0]
   15aa4:	ldr	x0, [sp, #32]
   15aa8:	cmp	x0, #0x0
   15aac:	b.eq	15ab8 <BZ2_bzWriteClose64@@Base+0x130>  // b.none
   15ab0:	ldr	x0, [sp, #32]
   15ab4:	str	wzr, [x0]
   15ab8:	ldr	x0, [sp, #24]
   15abc:	cmp	x0, #0x0
   15ac0:	b.eq	15acc <BZ2_bzWriteClose64@@Base+0x144>  // b.none
   15ac4:	ldr	x0, [sp, #24]
   15ac8:	str	wzr, [x0]
   15acc:	ldr	w0, [sp, #60]
   15ad0:	cmp	w0, #0x0
   15ad4:	b.ne	15c28 <BZ2_bzWriteClose64@@Base+0x2a0>  // b.any
   15ad8:	ldr	x0, [sp, #104]
   15adc:	ldr	w0, [x0, #5096]
   15ae0:	cmp	w0, #0x0
   15ae4:	b.ne	15c28 <BZ2_bzWriteClose64@@Base+0x2a0>  // b.any
   15ae8:	ldr	x0, [sp, #104]
   15aec:	mov	w1, #0x1388                	// #5000
   15af0:	str	w1, [x0, #5048]
   15af4:	ldr	x0, [sp, #104]
   15af8:	add	x1, x0, #0x8
   15afc:	ldr	x0, [sp, #104]
   15b00:	str	x1, [x0, #5040]
   15b04:	ldr	x1, [sp, #104]
   15b08:	mov	x0, #0x1398                	// #5016
   15b0c:	add	x0, x1, x0
   15b10:	mov	w1, #0x2                   	// #2
   15b14:	bl	1600 <BZ2_bzCompress@plt>
   15b18:	str	w0, [sp, #100]
   15b1c:	ldr	w0, [sp, #100]
   15b20:	cmp	w0, #0x3
   15b24:	b.eq	15b68 <BZ2_bzWriteClose64@@Base+0x1e0>  // b.none
   15b28:	ldr	w0, [sp, #100]
   15b2c:	cmp	w0, #0x4
   15b30:	b.eq	15b68 <BZ2_bzWriteClose64@@Base+0x1e0>  // b.none
   15b34:	ldr	x0, [sp, #72]
   15b38:	cmp	x0, #0x0
   15b3c:	b.eq	15b4c <BZ2_bzWriteClose64@@Base+0x1c4>  // b.none
   15b40:	ldr	x0, [sp, #72]
   15b44:	ldr	w1, [sp, #100]
   15b48:	str	w1, [x0]
   15b4c:	ldr	x0, [sp, #104]
   15b50:	cmp	x0, #0x0
   15b54:	b.eq	15d68 <BZ2_bzWriteClose64@@Base+0x3e0>  // b.none
   15b58:	ldr	x0, [sp, #104]
   15b5c:	ldr	w1, [sp, #100]
   15b60:	str	w1, [x0, #5096]
   15b64:	b	15d68 <BZ2_bzWriteClose64@@Base+0x3e0>
   15b68:	ldr	x0, [sp, #104]
   15b6c:	ldr	w1, [x0, #5048]
   15b70:	mov	w0, #0x1387                	// #4999
   15b74:	cmp	w1, w0
   15b78:	b.hi	15c14 <BZ2_bzWriteClose64@@Base+0x28c>  // b.pmore
   15b7c:	ldr	x0, [sp, #104]
   15b80:	ldr	w0, [x0, #5048]
   15b84:	mov	w1, #0x1388                	// #5000
   15b88:	sub	w0, w1, w0
   15b8c:	str	w0, [sp, #96]
   15b90:	ldr	x0, [sp, #104]
   15b94:	add	x4, x0, #0x8
   15b98:	ldrsw	x1, [sp, #96]
   15b9c:	ldr	x0, [sp, #104]
   15ba0:	ldr	x0, [x0]
   15ba4:	mov	x3, x0
   15ba8:	mov	x2, x1
   15bac:	mov	x1, #0x1                   	// #1
   15bb0:	mov	x0, x4
   15bb4:	bl	16d0 <fwrite@plt>
   15bb8:	str	w0, [sp, #92]
   15bbc:	ldr	w1, [sp, #96]
   15bc0:	ldr	w0, [sp, #92]
   15bc4:	cmp	w1, w0
   15bc8:	b.ne	15be0 <BZ2_bzWriteClose64@@Base+0x258>  // b.any
   15bcc:	ldr	x0, [sp, #104]
   15bd0:	ldr	x0, [x0]
   15bd4:	bl	1740 <ferror@plt>
   15bd8:	cmp	w0, #0x0
   15bdc:	b.eq	15c14 <BZ2_bzWriteClose64@@Base+0x28c>  // b.none
   15be0:	ldr	x0, [sp, #72]
   15be4:	cmp	x0, #0x0
   15be8:	b.eq	15bf8 <BZ2_bzWriteClose64@@Base+0x270>  // b.none
   15bec:	ldr	x0, [sp, #72]
   15bf0:	mov	w1, #0xfffffffa            	// #-6
   15bf4:	str	w1, [x0]
   15bf8:	ldr	x0, [sp, #104]
   15bfc:	cmp	x0, #0x0
   15c00:	b.eq	15d70 <BZ2_bzWriteClose64@@Base+0x3e8>  // b.none
   15c04:	ldr	x0, [sp, #104]
   15c08:	mov	w1, #0xfffffffa            	// #-6
   15c0c:	str	w1, [x0, #5096]
   15c10:	b	15d70 <BZ2_bzWriteClose64@@Base+0x3e8>
   15c14:	ldr	w0, [sp, #100]
   15c18:	cmp	w0, #0x4
   15c1c:	b.eq	15c24 <BZ2_bzWriteClose64@@Base+0x29c>  // b.none
   15c20:	b	15ae8 <BZ2_bzWriteClose64@@Base+0x160>
   15c24:	nop
   15c28:	ldr	w0, [sp, #60]
   15c2c:	cmp	w0, #0x0
   15c30:	b.ne	15c9c <BZ2_bzWriteClose64@@Base+0x314>  // b.any
   15c34:	ldr	x0, [sp, #104]
   15c38:	ldr	x0, [x0]
   15c3c:	bl	1740 <ferror@plt>
   15c40:	cmp	w0, #0x0
   15c44:	b.ne	15c9c <BZ2_bzWriteClose64@@Base+0x314>  // b.any
   15c48:	ldr	x0, [sp, #104]
   15c4c:	ldr	x0, [x0]
   15c50:	bl	16e0 <fflush@plt>
   15c54:	ldr	x0, [sp, #104]
   15c58:	ldr	x0, [x0]
   15c5c:	bl	1740 <ferror@plt>
   15c60:	cmp	w0, #0x0
   15c64:	b.eq	15c9c <BZ2_bzWriteClose64@@Base+0x314>  // b.none
   15c68:	ldr	x0, [sp, #72]
   15c6c:	cmp	x0, #0x0
   15c70:	b.eq	15c80 <BZ2_bzWriteClose64@@Base+0x2f8>  // b.none
   15c74:	ldr	x0, [sp, #72]
   15c78:	mov	w1, #0xfffffffa            	// #-6
   15c7c:	str	w1, [x0]
   15c80:	ldr	x0, [sp, #104]
   15c84:	cmp	x0, #0x0
   15c88:	b.eq	15d78 <BZ2_bzWriteClose64@@Base+0x3f0>  // b.none
   15c8c:	ldr	x0, [sp, #104]
   15c90:	mov	w1, #0xfffffffa            	// #-6
   15c94:	str	w1, [x0, #5096]
   15c98:	b	15d78 <BZ2_bzWriteClose64@@Base+0x3f0>
   15c9c:	ldr	x0, [sp, #48]
   15ca0:	cmp	x0, #0x0
   15ca4:	b.eq	15cb8 <BZ2_bzWriteClose64@@Base+0x330>  // b.none
   15ca8:	ldr	x0, [sp, #104]
   15cac:	ldr	w1, [x0, #5028]
   15cb0:	ldr	x0, [sp, #48]
   15cb4:	str	w1, [x0]
   15cb8:	ldr	x0, [sp, #40]
   15cbc:	cmp	x0, #0x0
   15cc0:	b.eq	15cd4 <BZ2_bzWriteClose64@@Base+0x34c>  // b.none
   15cc4:	ldr	x0, [sp, #104]
   15cc8:	ldr	w1, [x0, #5032]
   15ccc:	ldr	x0, [sp, #40]
   15cd0:	str	w1, [x0]
   15cd4:	ldr	x0, [sp, #32]
   15cd8:	cmp	x0, #0x0
   15cdc:	b.eq	15cf0 <BZ2_bzWriteClose64@@Base+0x368>  // b.none
   15ce0:	ldr	x0, [sp, #104]
   15ce4:	ldr	w1, [x0, #5052]
   15ce8:	ldr	x0, [sp, #32]
   15cec:	str	w1, [x0]
   15cf0:	ldr	x0, [sp, #24]
   15cf4:	cmp	x0, #0x0
   15cf8:	b.eq	15d0c <BZ2_bzWriteClose64@@Base+0x384>  // b.none
   15cfc:	ldr	x0, [sp, #104]
   15d00:	ldr	w1, [x0, #5056]
   15d04:	ldr	x0, [sp, #24]
   15d08:	str	w1, [x0]
   15d0c:	ldr	x0, [sp, #72]
   15d10:	cmp	x0, #0x0
   15d14:	b.eq	15d20 <BZ2_bzWriteClose64@@Base+0x398>  // b.none
   15d18:	ldr	x0, [sp, #72]
   15d1c:	str	wzr, [x0]
   15d20:	ldr	x0, [sp, #104]
   15d24:	cmp	x0, #0x0
   15d28:	b.eq	15d34 <BZ2_bzWriteClose64@@Base+0x3ac>  // b.none
   15d2c:	ldr	x0, [sp, #104]
   15d30:	str	wzr, [x0, #5096]
   15d34:	ldr	x1, [sp, #104]
   15d38:	mov	x0, #0x1398                	// #5016
   15d3c:	add	x0, x1, x0
   15d40:	bl	15b0 <BZ2_bzCompressEnd@plt>
   15d44:	ldr	x0, [sp, #104]
   15d48:	bl	1660 <free@plt>
   15d4c:	b	15d7c <BZ2_bzWriteClose64@@Base+0x3f4>
   15d50:	nop
   15d54:	b	15d7c <BZ2_bzWriteClose64@@Base+0x3f4>
   15d58:	nop
   15d5c:	b	15d7c <BZ2_bzWriteClose64@@Base+0x3f4>
   15d60:	nop
   15d64:	b	15d7c <BZ2_bzWriteClose64@@Base+0x3f4>
   15d68:	nop
   15d6c:	b	15d7c <BZ2_bzWriteClose64@@Base+0x3f4>
   15d70:	nop
   15d74:	b	15d7c <BZ2_bzWriteClose64@@Base+0x3f4>
   15d78:	nop
   15d7c:	ldp	x29, x30, [sp], #112
   15d80:	ret

0000000000015d84 <BZ2_bzReadOpen@@Base>:
   15d84:	stp	x29, x30, [sp, #-80]!
   15d88:	mov	x29, sp
   15d8c:	str	x0, [sp, #56]
   15d90:	str	x1, [sp, #48]
   15d94:	str	w2, [sp, #44]
   15d98:	str	w3, [sp, #40]
   15d9c:	str	x4, [sp, #32]
   15da0:	str	w5, [sp, #28]
   15da4:	str	xzr, [sp, #72]
   15da8:	ldr	x0, [sp, #56]
   15dac:	cmp	x0, #0x0
   15db0:	b.eq	15dbc <BZ2_bzReadOpen@@Base+0x38>  // b.none
   15db4:	ldr	x0, [sp, #56]
   15db8:	str	wzr, [x0]
   15dbc:	ldr	x0, [sp, #72]
   15dc0:	cmp	x0, #0x0
   15dc4:	b.eq	15dd0 <BZ2_bzReadOpen@@Base+0x4c>  // b.none
   15dc8:	ldr	x0, [sp, #72]
   15dcc:	str	wzr, [x0, #5096]
   15dd0:	ldr	x0, [sp, #48]
   15dd4:	cmp	x0, #0x0
   15dd8:	b.eq	15e4c <BZ2_bzReadOpen@@Base+0xc8>  // b.none
   15ddc:	ldr	w0, [sp, #40]
   15de0:	cmp	w0, #0x0
   15de4:	b.eq	15df4 <BZ2_bzReadOpen@@Base+0x70>  // b.none
   15de8:	ldr	w0, [sp, #40]
   15dec:	cmp	w0, #0x1
   15df0:	b.ne	15e4c <BZ2_bzReadOpen@@Base+0xc8>  // b.any
   15df4:	ldr	w0, [sp, #44]
   15df8:	cmp	w0, #0x0
   15dfc:	b.lt	15e4c <BZ2_bzReadOpen@@Base+0xc8>  // b.tstop
   15e00:	ldr	w0, [sp, #44]
   15e04:	cmp	w0, #0x4
   15e08:	b.gt	15e4c <BZ2_bzReadOpen@@Base+0xc8>
   15e0c:	ldr	x0, [sp, #32]
   15e10:	cmp	x0, #0x0
   15e14:	b.ne	15e24 <BZ2_bzReadOpen@@Base+0xa0>  // b.any
   15e18:	ldr	w0, [sp, #28]
   15e1c:	cmp	w0, #0x0
   15e20:	b.ne	15e4c <BZ2_bzReadOpen@@Base+0xc8>  // b.any
   15e24:	ldr	x0, [sp, #32]
   15e28:	cmp	x0, #0x0
   15e2c:	b.eq	15e84 <BZ2_bzReadOpen@@Base+0x100>  // b.none
   15e30:	ldr	w0, [sp, #28]
   15e34:	cmp	w0, #0x0
   15e38:	b.lt	15e4c <BZ2_bzReadOpen@@Base+0xc8>  // b.tstop
   15e3c:	ldr	w1, [sp, #28]
   15e40:	mov	w0, #0x1388                	// #5000
   15e44:	cmp	w1, w0
   15e48:	b.le	15e84 <BZ2_bzReadOpen@@Base+0x100>
   15e4c:	ldr	x0, [sp, #56]
   15e50:	cmp	x0, #0x0
   15e54:	b.eq	15e64 <BZ2_bzReadOpen@@Base+0xe0>  // b.none
   15e58:	ldr	x0, [sp, #56]
   15e5c:	mov	w1, #0xfffffffe            	// #-2
   15e60:	str	w1, [x0]
   15e64:	ldr	x0, [sp, #72]
   15e68:	cmp	x0, #0x0
   15e6c:	b.eq	15e7c <BZ2_bzReadOpen@@Base+0xf8>  // b.none
   15e70:	ldr	x0, [sp, #72]
   15e74:	mov	w1, #0xfffffffe            	// #-2
   15e78:	str	w1, [x0, #5096]
   15e7c:	mov	x0, #0x0                   	// #0
   15e80:	b	16088 <BZ2_bzReadOpen@@Base+0x304>
   15e84:	ldr	x0, [sp, #48]
   15e88:	bl	1740 <ferror@plt>
   15e8c:	cmp	w0, #0x0
   15e90:	b.eq	15ecc <BZ2_bzReadOpen@@Base+0x148>  // b.none
   15e94:	ldr	x0, [sp, #56]
   15e98:	cmp	x0, #0x0
   15e9c:	b.eq	15eac <BZ2_bzReadOpen@@Base+0x128>  // b.none
   15ea0:	ldr	x0, [sp, #56]
   15ea4:	mov	w1, #0xfffffffa            	// #-6
   15ea8:	str	w1, [x0]
   15eac:	ldr	x0, [sp, #72]
   15eb0:	cmp	x0, #0x0
   15eb4:	b.eq	15ec4 <BZ2_bzReadOpen@@Base+0x140>  // b.none
   15eb8:	ldr	x0, [sp, #72]
   15ebc:	mov	w1, #0xfffffffa            	// #-6
   15ec0:	str	w1, [x0, #5096]
   15ec4:	mov	x0, #0x0                   	// #0
   15ec8:	b	16088 <BZ2_bzReadOpen@@Base+0x304>
   15ecc:	mov	x0, #0x13f0                	// #5104
   15ed0:	bl	1520 <malloc@plt>
   15ed4:	str	x0, [sp, #72]
   15ed8:	ldr	x0, [sp, #72]
   15edc:	cmp	x0, #0x0
   15ee0:	b.ne	15f1c <BZ2_bzReadOpen@@Base+0x198>  // b.any
   15ee4:	ldr	x0, [sp, #56]
   15ee8:	cmp	x0, #0x0
   15eec:	b.eq	15efc <BZ2_bzReadOpen@@Base+0x178>  // b.none
   15ef0:	ldr	x0, [sp, #56]
   15ef4:	mov	w1, #0xfffffffd            	// #-3
   15ef8:	str	w1, [x0]
   15efc:	ldr	x0, [sp, #72]
   15f00:	cmp	x0, #0x0
   15f04:	b.eq	15f14 <BZ2_bzReadOpen@@Base+0x190>  // b.none
   15f08:	ldr	x0, [sp, #72]
   15f0c:	mov	w1, #0xfffffffd            	// #-3
   15f10:	str	w1, [x0, #5096]
   15f14:	mov	x0, #0x0                   	// #0
   15f18:	b	16088 <BZ2_bzReadOpen@@Base+0x304>
   15f1c:	ldr	x0, [sp, #56]
   15f20:	cmp	x0, #0x0
   15f24:	b.eq	15f30 <BZ2_bzReadOpen@@Base+0x1ac>  // b.none
   15f28:	ldr	x0, [sp, #56]
   15f2c:	str	wzr, [x0]
   15f30:	ldr	x0, [sp, #72]
   15f34:	cmp	x0, #0x0
   15f38:	b.eq	15f44 <BZ2_bzReadOpen@@Base+0x1c0>  // b.none
   15f3c:	ldr	x0, [sp, #72]
   15f40:	str	wzr, [x0, #5096]
   15f44:	ldr	x0, [sp, #72]
   15f48:	add	x0, x0, #0x1, lsl #12
   15f4c:	strb	wzr, [x0, #1004]
   15f50:	ldr	x0, [sp, #72]
   15f54:	ldr	x1, [sp, #48]
   15f58:	str	x1, [x0]
   15f5c:	ldr	x0, [sp, #72]
   15f60:	str	wzr, [x0, #5008]
   15f64:	ldr	x0, [sp, #72]
   15f68:	add	x0, x0, #0x1, lsl #12
   15f6c:	strb	wzr, [x0, #916]
   15f70:	ldr	x0, [sp, #72]
   15f74:	str	xzr, [x0, #5072]
   15f78:	ldr	x0, [sp, #72]
   15f7c:	str	xzr, [x0, #5080]
   15f80:	ldr	x0, [sp, #72]
   15f84:	str	xzr, [x0, #5088]
   15f88:	b	15fdc <BZ2_bzReadOpen@@Base+0x258>
   15f8c:	ldr	x0, [sp, #72]
   15f90:	ldr	w3, [x0, #5008]
   15f94:	ldr	x0, [sp, #32]
   15f98:	ldrb	w2, [x0]
   15f9c:	ldr	x1, [sp, #72]
   15fa0:	sxtw	x0, w3
   15fa4:	add	x0, x1, x0
   15fa8:	mov	w1, w2
   15fac:	strb	w1, [x0, #8]
   15fb0:	ldr	x0, [sp, #72]
   15fb4:	ldr	w0, [x0, #5008]
   15fb8:	add	w1, w0, #0x1
   15fbc:	ldr	x0, [sp, #72]
   15fc0:	str	w1, [x0, #5008]
   15fc4:	ldr	x0, [sp, #32]
   15fc8:	add	x0, x0, #0x1
   15fcc:	str	x0, [sp, #32]
   15fd0:	ldr	w0, [sp, #28]
   15fd4:	sub	w0, w0, #0x1
   15fd8:	str	w0, [sp, #28]
   15fdc:	ldr	w0, [sp, #28]
   15fe0:	cmp	w0, #0x0
   15fe4:	b.gt	15f8c <BZ2_bzReadOpen@@Base+0x208>
   15fe8:	ldr	x1, [sp, #72]
   15fec:	mov	x0, #0x1398                	// #5016
   15ff0:	add	x0, x1, x0
   15ff4:	ldr	w2, [sp, #40]
   15ff8:	ldr	w1, [sp, #44]
   15ffc:	bl	1530 <BZ2_bzDecompressInit@plt>
   16000:	str	w0, [sp, #68]
   16004:	ldr	w0, [sp, #68]
   16008:	cmp	w0, #0x0
   1600c:	b.eq	16050 <BZ2_bzReadOpen@@Base+0x2cc>  // b.none
   16010:	ldr	x0, [sp, #56]
   16014:	cmp	x0, #0x0
   16018:	b.eq	16028 <BZ2_bzReadOpen@@Base+0x2a4>  // b.none
   1601c:	ldr	x0, [sp, #56]
   16020:	ldr	w1, [sp, #68]
   16024:	str	w1, [x0]
   16028:	ldr	x0, [sp, #72]
   1602c:	cmp	x0, #0x0
   16030:	b.eq	16040 <BZ2_bzReadOpen@@Base+0x2bc>  // b.none
   16034:	ldr	x0, [sp, #72]
   16038:	ldr	w1, [sp, #68]
   1603c:	str	w1, [x0, #5096]
   16040:	ldr	x0, [sp, #72]
   16044:	bl	1660 <free@plt>
   16048:	mov	x0, #0x0                   	// #0
   1604c:	b	16088 <BZ2_bzReadOpen@@Base+0x304>
   16050:	ldr	x0, [sp, #72]
   16054:	ldr	w0, [x0, #5008]
   16058:	mov	w1, w0
   1605c:	ldr	x0, [sp, #72]
   16060:	str	w1, [x0, #5024]
   16064:	ldr	x0, [sp, #72]
   16068:	add	x1, x0, #0x8
   1606c:	ldr	x0, [sp, #72]
   16070:	str	x1, [x0, #5016]
   16074:	ldr	x0, [sp, #72]
   16078:	add	x0, x0, #0x1, lsl #12
   1607c:	mov	w1, #0x1                   	// #1
   16080:	strb	w1, [x0, #1004]
   16084:	ldr	x0, [sp, #72]
   16088:	ldp	x29, x30, [sp], #80
   1608c:	ret

0000000000016090 <BZ2_bzReadClose@@Base>:
   16090:	stp	x29, x30, [sp, #-48]!
   16094:	mov	x29, sp
   16098:	str	x0, [sp, #24]
   1609c:	str	x1, [sp, #16]
   160a0:	ldr	x0, [sp, #16]
   160a4:	str	x0, [sp, #40]
   160a8:	ldr	x0, [sp, #24]
   160ac:	cmp	x0, #0x0
   160b0:	b.eq	160bc <BZ2_bzReadClose@@Base+0x2c>  // b.none
   160b4:	ldr	x0, [sp, #24]
   160b8:	str	wzr, [x0]
   160bc:	ldr	x0, [sp, #40]
   160c0:	cmp	x0, #0x0
   160c4:	b.eq	160d0 <BZ2_bzReadClose@@Base+0x40>  // b.none
   160c8:	ldr	x0, [sp, #40]
   160cc:	str	wzr, [x0, #5096]
   160d0:	ldr	x0, [sp, #40]
   160d4:	cmp	x0, #0x0
   160d8:	b.ne	16108 <BZ2_bzReadClose@@Base+0x78>  // b.any
   160dc:	ldr	x0, [sp, #24]
   160e0:	cmp	x0, #0x0
   160e4:	b.eq	160f0 <BZ2_bzReadClose@@Base+0x60>  // b.none
   160e8:	ldr	x0, [sp, #24]
   160ec:	str	wzr, [x0]
   160f0:	ldr	x0, [sp, #40]
   160f4:	cmp	x0, #0x0
   160f8:	b.eq	16180 <BZ2_bzReadClose@@Base+0xf0>  // b.none
   160fc:	ldr	x0, [sp, #40]
   16100:	str	wzr, [x0, #5096]
   16104:	b	16180 <BZ2_bzReadClose@@Base+0xf0>
   16108:	ldr	x0, [sp, #40]
   1610c:	add	x0, x0, #0x1, lsl #12
   16110:	ldrb	w0, [x0, #916]
   16114:	cmp	w0, #0x0
   16118:	b.eq	16150 <BZ2_bzReadClose@@Base+0xc0>  // b.none
   1611c:	ldr	x0, [sp, #24]
   16120:	cmp	x0, #0x0
   16124:	b.eq	16134 <BZ2_bzReadClose@@Base+0xa4>  // b.none
   16128:	ldr	x0, [sp, #24]
   1612c:	mov	w1, #0xffffffff            	// #-1
   16130:	str	w1, [x0]
   16134:	ldr	x0, [sp, #40]
   16138:	cmp	x0, #0x0
   1613c:	b.eq	16188 <BZ2_bzReadClose@@Base+0xf8>  // b.none
   16140:	ldr	x0, [sp, #40]
   16144:	mov	w1, #0xffffffff            	// #-1
   16148:	str	w1, [x0, #5096]
   1614c:	b	16188 <BZ2_bzReadClose@@Base+0xf8>
   16150:	ldr	x0, [sp, #40]
   16154:	add	x0, x0, #0x1, lsl #12
   16158:	ldrb	w0, [x0, #1004]
   1615c:	cmp	w0, #0x0
   16160:	b.eq	16174 <BZ2_bzReadClose@@Base+0xe4>  // b.none
   16164:	ldr	x1, [sp, #40]
   16168:	mov	x0, #0x1398                	// #5016
   1616c:	add	x0, x1, x0
   16170:	bl	1540 <BZ2_bzDecompressEnd@plt>
   16174:	ldr	x0, [sp, #40]
   16178:	bl	1660 <free@plt>
   1617c:	b	1618c <BZ2_bzReadClose@@Base+0xfc>
   16180:	nop
   16184:	b	1618c <BZ2_bzReadClose@@Base+0xfc>
   16188:	nop
   1618c:	ldp	x29, x30, [sp], #48
   16190:	ret

0000000000016194 <BZ2_bzRead@@Base>:
   16194:	stp	x29, x30, [sp, #-64]!
   16198:	mov	x29, sp
   1619c:	str	x0, [sp, #40]
   161a0:	str	x1, [sp, #32]
   161a4:	str	x2, [sp, #24]
   161a8:	str	w3, [sp, #20]
   161ac:	ldr	x0, [sp, #32]
   161b0:	str	x0, [sp, #56]
   161b4:	ldr	x0, [sp, #40]
   161b8:	cmp	x0, #0x0
   161bc:	b.eq	161c8 <BZ2_bzRead@@Base+0x34>  // b.none
   161c0:	ldr	x0, [sp, #40]
   161c4:	str	wzr, [x0]
   161c8:	ldr	x0, [sp, #56]
   161cc:	cmp	x0, #0x0
   161d0:	b.eq	161dc <BZ2_bzRead@@Base+0x48>  // b.none
   161d4:	ldr	x0, [sp, #56]
   161d8:	str	wzr, [x0, #5096]
   161dc:	ldr	x0, [sp, #56]
   161e0:	cmp	x0, #0x0
   161e4:	b.eq	16200 <BZ2_bzRead@@Base+0x6c>  // b.none
   161e8:	ldr	x0, [sp, #24]
   161ec:	cmp	x0, #0x0
   161f0:	b.eq	16200 <BZ2_bzRead@@Base+0x6c>  // b.none
   161f4:	ldr	w0, [sp, #20]
   161f8:	cmp	w0, #0x0
   161fc:	b.ge	16238 <BZ2_bzRead@@Base+0xa4>  // b.tcont
   16200:	ldr	x0, [sp, #40]
   16204:	cmp	x0, #0x0
   16208:	b.eq	16218 <BZ2_bzRead@@Base+0x84>  // b.none
   1620c:	ldr	x0, [sp, #40]
   16210:	mov	w1, #0xfffffffe            	// #-2
   16214:	str	w1, [x0]
   16218:	ldr	x0, [sp, #56]
   1621c:	cmp	x0, #0x0
   16220:	b.eq	16230 <BZ2_bzRead@@Base+0x9c>  // b.none
   16224:	ldr	x0, [sp, #56]
   16228:	mov	w1, #0xfffffffe            	// #-2
   1622c:	str	w1, [x0, #5096]
   16230:	mov	w0, #0x0                   	// #0
   16234:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   16238:	ldr	x0, [sp, #56]
   1623c:	add	x0, x0, #0x1, lsl #12
   16240:	ldrb	w0, [x0, #916]
   16244:	cmp	w0, #0x0
   16248:	b.eq	16284 <BZ2_bzRead@@Base+0xf0>  // b.none
   1624c:	ldr	x0, [sp, #40]
   16250:	cmp	x0, #0x0
   16254:	b.eq	16264 <BZ2_bzRead@@Base+0xd0>  // b.none
   16258:	ldr	x0, [sp, #40]
   1625c:	mov	w1, #0xffffffff            	// #-1
   16260:	str	w1, [x0]
   16264:	ldr	x0, [sp, #56]
   16268:	cmp	x0, #0x0
   1626c:	b.eq	1627c <BZ2_bzRead@@Base+0xe8>  // b.none
   16270:	ldr	x0, [sp, #56]
   16274:	mov	w1, #0xffffffff            	// #-1
   16278:	str	w1, [x0, #5096]
   1627c:	mov	w0, #0x0                   	// #0
   16280:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   16284:	ldr	w0, [sp, #20]
   16288:	cmp	w0, #0x0
   1628c:	b.ne	162c0 <BZ2_bzRead@@Base+0x12c>  // b.any
   16290:	ldr	x0, [sp, #40]
   16294:	cmp	x0, #0x0
   16298:	b.eq	162a4 <BZ2_bzRead@@Base+0x110>  // b.none
   1629c:	ldr	x0, [sp, #40]
   162a0:	str	wzr, [x0]
   162a4:	ldr	x0, [sp, #56]
   162a8:	cmp	x0, #0x0
   162ac:	b.eq	162b8 <BZ2_bzRead@@Base+0x124>  // b.none
   162b0:	ldr	x0, [sp, #56]
   162b4:	str	wzr, [x0, #5096]
   162b8:	mov	w0, #0x0                   	// #0
   162bc:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   162c0:	ldr	w1, [sp, #20]
   162c4:	ldr	x0, [sp, #56]
   162c8:	str	w1, [x0, #5048]
   162cc:	ldr	x0, [sp, #56]
   162d0:	ldr	x1, [sp, #24]
   162d4:	str	x1, [x0, #5040]
   162d8:	ldr	x0, [sp, #56]
   162dc:	ldr	x0, [x0]
   162e0:	bl	1740 <ferror@plt>
   162e4:	cmp	w0, #0x0
   162e8:	b.eq	16324 <BZ2_bzRead@@Base+0x190>  // b.none
   162ec:	ldr	x0, [sp, #40]
   162f0:	cmp	x0, #0x0
   162f4:	b.eq	16304 <BZ2_bzRead@@Base+0x170>  // b.none
   162f8:	ldr	x0, [sp, #40]
   162fc:	mov	w1, #0xfffffffa            	// #-6
   16300:	str	w1, [x0]
   16304:	ldr	x0, [sp, #56]
   16308:	cmp	x0, #0x0
   1630c:	b.eq	1631c <BZ2_bzRead@@Base+0x188>  // b.none
   16310:	ldr	x0, [sp, #56]
   16314:	mov	w1, #0xfffffffa            	// #-6
   16318:	str	w1, [x0, #5096]
   1631c:	mov	w0, #0x0                   	// #0
   16320:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   16324:	ldr	x0, [sp, #56]
   16328:	ldr	w0, [x0, #5024]
   1632c:	cmp	w0, #0x0
   16330:	b.ne	163f0 <BZ2_bzRead@@Base+0x25c>  // b.any
   16334:	ldr	x0, [sp, #56]
   16338:	ldr	x0, [x0]
   1633c:	bl	15364 <BZ2_bzDecompressEnd@@Base+0x130>
   16340:	and	w0, w0, #0xff
   16344:	cmp	w0, #0x0
   16348:	b.ne	163f0 <BZ2_bzRead@@Base+0x25c>  // b.any
   1634c:	ldr	x0, [sp, #56]
   16350:	add	x4, x0, #0x8
   16354:	ldr	x0, [sp, #56]
   16358:	ldr	x0, [x0]
   1635c:	mov	x3, x0
   16360:	mov	x2, #0x1388                	// #5000
   16364:	mov	x1, #0x1                   	// #1
   16368:	mov	x0, x4
   1636c:	bl	1640 <fread@plt>
   16370:	str	w0, [sp, #52]
   16374:	ldr	x0, [sp, #56]
   16378:	ldr	x0, [x0]
   1637c:	bl	1740 <ferror@plt>
   16380:	cmp	w0, #0x0
   16384:	b.eq	163c0 <BZ2_bzRead@@Base+0x22c>  // b.none
   16388:	ldr	x0, [sp, #40]
   1638c:	cmp	x0, #0x0
   16390:	b.eq	163a0 <BZ2_bzRead@@Base+0x20c>  // b.none
   16394:	ldr	x0, [sp, #40]
   16398:	mov	w1, #0xfffffffa            	// #-6
   1639c:	str	w1, [x0]
   163a0:	ldr	x0, [sp, #56]
   163a4:	cmp	x0, #0x0
   163a8:	b.eq	163b8 <BZ2_bzRead@@Base+0x224>  // b.none
   163ac:	ldr	x0, [sp, #56]
   163b0:	mov	w1, #0xfffffffa            	// #-6
   163b4:	str	w1, [x0, #5096]
   163b8:	mov	w0, #0x0                   	// #0
   163bc:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   163c0:	ldr	x0, [sp, #56]
   163c4:	ldr	w1, [sp, #52]
   163c8:	str	w1, [x0, #5008]
   163cc:	ldr	x0, [sp, #56]
   163d0:	ldr	w0, [x0, #5008]
   163d4:	mov	w1, w0
   163d8:	ldr	x0, [sp, #56]
   163dc:	str	w1, [x0, #5024]
   163e0:	ldr	x0, [sp, #56]
   163e4:	add	x1, x0, #0x8
   163e8:	ldr	x0, [sp, #56]
   163ec:	str	x1, [x0, #5016]
   163f0:	ldr	x1, [sp, #56]
   163f4:	mov	x0, #0x1398                	// #5016
   163f8:	add	x0, x1, x0
   163fc:	bl	1680 <BZ2_bzDecompress@plt>
   16400:	str	w0, [sp, #48]
   16404:	ldr	w0, [sp, #48]
   16408:	cmp	w0, #0x0
   1640c:	b.eq	16454 <BZ2_bzRead@@Base+0x2c0>  // b.none
   16410:	ldr	w0, [sp, #48]
   16414:	cmp	w0, #0x4
   16418:	b.eq	16454 <BZ2_bzRead@@Base+0x2c0>  // b.none
   1641c:	ldr	x0, [sp, #40]
   16420:	cmp	x0, #0x0
   16424:	b.eq	16434 <BZ2_bzRead@@Base+0x2a0>  // b.none
   16428:	ldr	x0, [sp, #40]
   1642c:	ldr	w1, [sp, #48]
   16430:	str	w1, [x0]
   16434:	ldr	x0, [sp, #56]
   16438:	cmp	x0, #0x0
   1643c:	b.eq	1644c <BZ2_bzRead@@Base+0x2b8>  // b.none
   16440:	ldr	x0, [sp, #56]
   16444:	ldr	w1, [sp, #48]
   16448:	str	w1, [x0, #5096]
   1644c:	mov	w0, #0x0                   	// #0
   16450:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   16454:	ldr	w0, [sp, #48]
   16458:	cmp	w0, #0x0
   1645c:	b.ne	164d0 <BZ2_bzRead@@Base+0x33c>  // b.any
   16460:	ldr	x0, [sp, #56]
   16464:	ldr	x0, [x0]
   16468:	bl	15364 <BZ2_bzDecompressEnd@@Base+0x130>
   1646c:	and	w0, w0, #0xff
   16470:	cmp	w0, #0x0
   16474:	b.eq	164d0 <BZ2_bzRead@@Base+0x33c>  // b.none
   16478:	ldr	x0, [sp, #56]
   1647c:	ldr	w0, [x0, #5024]
   16480:	cmp	w0, #0x0
   16484:	b.ne	164d0 <BZ2_bzRead@@Base+0x33c>  // b.any
   16488:	ldr	x0, [sp, #56]
   1648c:	ldr	w0, [x0, #5048]
   16490:	cmp	w0, #0x0
   16494:	b.eq	164d0 <BZ2_bzRead@@Base+0x33c>  // b.none
   16498:	ldr	x0, [sp, #40]
   1649c:	cmp	x0, #0x0
   164a0:	b.eq	164b0 <BZ2_bzRead@@Base+0x31c>  // b.none
   164a4:	ldr	x0, [sp, #40]
   164a8:	mov	w1, #0xfffffff9            	// #-7
   164ac:	str	w1, [x0]
   164b0:	ldr	x0, [sp, #56]
   164b4:	cmp	x0, #0x0
   164b8:	b.eq	164c8 <BZ2_bzRead@@Base+0x334>  // b.none
   164bc:	ldr	x0, [sp, #56]
   164c0:	mov	w1, #0xfffffff9            	// #-7
   164c4:	str	w1, [x0, #5096]
   164c8:	mov	w0, #0x0                   	// #0
   164cc:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   164d0:	ldr	w0, [sp, #48]
   164d4:	cmp	w0, #0x4
   164d8:	b.ne	16520 <BZ2_bzRead@@Base+0x38c>  // b.any
   164dc:	ldr	x0, [sp, #40]
   164e0:	cmp	x0, #0x0
   164e4:	b.eq	164f4 <BZ2_bzRead@@Base+0x360>  // b.none
   164e8:	ldr	x0, [sp, #40]
   164ec:	mov	w1, #0x4                   	// #4
   164f0:	str	w1, [x0]
   164f4:	ldr	x0, [sp, #56]
   164f8:	cmp	x0, #0x0
   164fc:	b.eq	1650c <BZ2_bzRead@@Base+0x378>  // b.none
   16500:	ldr	x0, [sp, #56]
   16504:	mov	w1, #0x4                   	// #4
   16508:	str	w1, [x0, #5096]
   1650c:	ldr	w1, [sp, #20]
   16510:	ldr	x0, [sp, #56]
   16514:	ldr	w0, [x0, #5048]
   16518:	sub	w0, w1, w0
   1651c:	b	1655c <BZ2_bzRead@@Base+0x3c8>
   16520:	ldr	x0, [sp, #56]
   16524:	ldr	w0, [x0, #5048]
   16528:	cmp	w0, #0x0
   1652c:	b.ne	162d8 <BZ2_bzRead@@Base+0x144>  // b.any
   16530:	ldr	x0, [sp, #40]
   16534:	cmp	x0, #0x0
   16538:	b.eq	16544 <BZ2_bzRead@@Base+0x3b0>  // b.none
   1653c:	ldr	x0, [sp, #40]
   16540:	str	wzr, [x0]
   16544:	ldr	x0, [sp, #56]
   16548:	cmp	x0, #0x0
   1654c:	b.eq	16558 <BZ2_bzRead@@Base+0x3c4>  // b.none
   16550:	ldr	x0, [sp, #56]
   16554:	str	wzr, [x0, #5096]
   16558:	ldr	w0, [sp, #20]
   1655c:	ldp	x29, x30, [sp], #64
   16560:	ret

0000000000016564 <BZ2_bzReadGetUnused@@Base>:
   16564:	sub	sp, sp, #0x30
   16568:	str	x0, [sp, #24]
   1656c:	str	x1, [sp, #16]
   16570:	str	x2, [sp, #8]
   16574:	str	x3, [sp]
   16578:	ldr	x0, [sp, #16]
   1657c:	str	x0, [sp, #40]
   16580:	ldr	x0, [sp, #40]
   16584:	cmp	x0, #0x0
   16588:	b.ne	165c0 <BZ2_bzReadGetUnused@@Base+0x5c>  // b.any
   1658c:	ldr	x0, [sp, #24]
   16590:	cmp	x0, #0x0
   16594:	b.eq	165a4 <BZ2_bzReadGetUnused@@Base+0x40>  // b.none
   16598:	ldr	x0, [sp, #24]
   1659c:	mov	w1, #0xfffffffe            	// #-2
   165a0:	str	w1, [x0]
   165a4:	ldr	x0, [sp, #40]
   165a8:	cmp	x0, #0x0
   165ac:	b.eq	166a0 <BZ2_bzReadGetUnused@@Base+0x13c>  // b.none
   165b0:	ldr	x0, [sp, #40]
   165b4:	mov	w1, #0xfffffffe            	// #-2
   165b8:	str	w1, [x0, #5096]
   165bc:	b	166a0 <BZ2_bzReadGetUnused@@Base+0x13c>
   165c0:	ldr	x0, [sp, #40]
   165c4:	ldr	w0, [x0, #5096]
   165c8:	cmp	w0, #0x4
   165cc:	b.eq	16604 <BZ2_bzReadGetUnused@@Base+0xa0>  // b.none
   165d0:	ldr	x0, [sp, #24]
   165d4:	cmp	x0, #0x0
   165d8:	b.eq	165e8 <BZ2_bzReadGetUnused@@Base+0x84>  // b.none
   165dc:	ldr	x0, [sp, #24]
   165e0:	mov	w1, #0xffffffff            	// #-1
   165e4:	str	w1, [x0]
   165e8:	ldr	x0, [sp, #40]
   165ec:	cmp	x0, #0x0
   165f0:	b.eq	166a8 <BZ2_bzReadGetUnused@@Base+0x144>  // b.none
   165f4:	ldr	x0, [sp, #40]
   165f8:	mov	w1, #0xffffffff            	// #-1
   165fc:	str	w1, [x0, #5096]
   16600:	b	166a8 <BZ2_bzReadGetUnused@@Base+0x144>
   16604:	ldr	x0, [sp, #8]
   16608:	cmp	x0, #0x0
   1660c:	b.eq	1661c <BZ2_bzReadGetUnused@@Base+0xb8>  // b.none
   16610:	ldr	x0, [sp]
   16614:	cmp	x0, #0x0
   16618:	b.ne	16650 <BZ2_bzReadGetUnused@@Base+0xec>  // b.any
   1661c:	ldr	x0, [sp, #24]
   16620:	cmp	x0, #0x0
   16624:	b.eq	16634 <BZ2_bzReadGetUnused@@Base+0xd0>  // b.none
   16628:	ldr	x0, [sp, #24]
   1662c:	mov	w1, #0xfffffffe            	// #-2
   16630:	str	w1, [x0]
   16634:	ldr	x0, [sp, #40]
   16638:	cmp	x0, #0x0
   1663c:	b.eq	166b0 <BZ2_bzReadGetUnused@@Base+0x14c>  // b.none
   16640:	ldr	x0, [sp, #40]
   16644:	mov	w1, #0xfffffffe            	// #-2
   16648:	str	w1, [x0, #5096]
   1664c:	b	166b0 <BZ2_bzReadGetUnused@@Base+0x14c>
   16650:	ldr	x0, [sp, #24]
   16654:	cmp	x0, #0x0
   16658:	b.eq	16664 <BZ2_bzReadGetUnused@@Base+0x100>  // b.none
   1665c:	ldr	x0, [sp, #24]
   16660:	str	wzr, [x0]
   16664:	ldr	x0, [sp, #40]
   16668:	cmp	x0, #0x0
   1666c:	b.eq	16678 <BZ2_bzReadGetUnused@@Base+0x114>  // b.none
   16670:	ldr	x0, [sp, #40]
   16674:	str	wzr, [x0, #5096]
   16678:	ldr	x0, [sp, #40]
   1667c:	ldr	w0, [x0, #5024]
   16680:	mov	w1, w0
   16684:	ldr	x0, [sp]
   16688:	str	w1, [x0]
   1668c:	ldr	x0, [sp, #40]
   16690:	ldr	x1, [x0, #5016]
   16694:	ldr	x0, [sp, #8]
   16698:	str	x1, [x0]
   1669c:	b	166b4 <BZ2_bzReadGetUnused@@Base+0x150>
   166a0:	nop
   166a4:	b	166b4 <BZ2_bzReadGetUnused@@Base+0x150>
   166a8:	nop
   166ac:	b	166b4 <BZ2_bzReadGetUnused@@Base+0x150>
   166b0:	nop
   166b4:	add	sp, sp, #0x30
   166b8:	ret

00000000000166bc <BZ2_bzBuffToBuffCompress@@Base>:
   166bc:	stp	x29, x30, [sp, #-160]!
   166c0:	mov	x29, sp
   166c4:	str	x0, [sp, #56]
   166c8:	str	x1, [sp, #48]
   166cc:	str	x2, [sp, #40]
   166d0:	str	w3, [sp, #36]
   166d4:	str	w4, [sp, #32]
   166d8:	str	w5, [sp, #28]
   166dc:	str	w6, [sp, #24]
   166e0:	ldr	x0, [sp, #56]
   166e4:	cmp	x0, #0x0
   166e8:	b.eq	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>  // b.none
   166ec:	ldr	x0, [sp, #48]
   166f0:	cmp	x0, #0x0
   166f4:	b.eq	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>  // b.none
   166f8:	ldr	x0, [sp, #40]
   166fc:	cmp	x0, #0x0
   16700:	b.eq	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>  // b.none
   16704:	ldr	w0, [sp, #32]
   16708:	cmp	w0, #0x0
   1670c:	b.le	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>
   16710:	ldr	w0, [sp, #32]
   16714:	cmp	w0, #0x9
   16718:	b.gt	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>
   1671c:	ldr	w0, [sp, #28]
   16720:	cmp	w0, #0x0
   16724:	b.lt	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>  // b.tstop
   16728:	ldr	w0, [sp, #28]
   1672c:	cmp	w0, #0x4
   16730:	b.gt	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>
   16734:	ldr	w0, [sp, #24]
   16738:	cmp	w0, #0x0
   1673c:	b.lt	1674c <BZ2_bzBuffToBuffCompress@@Base+0x90>  // b.tstop
   16740:	ldr	w0, [sp, #24]
   16744:	cmp	w0, #0xfa
   16748:	b.le	16754 <BZ2_bzBuffToBuffCompress@@Base+0x98>
   1674c:	mov	w0, #0xfffffffe            	// #-2
   16750:	b	16838 <BZ2_bzBuffToBuffCompress@@Base+0x17c>
   16754:	ldr	w0, [sp, #24]
   16758:	cmp	w0, #0x0
   1675c:	b.ne	16768 <BZ2_bzBuffToBuffCompress@@Base+0xac>  // b.any
   16760:	mov	w0, #0x1e                  	// #30
   16764:	str	w0, [sp, #24]
   16768:	str	xzr, [sp, #128]
   1676c:	str	xzr, [sp, #136]
   16770:	str	xzr, [sp, #144]
   16774:	add	x0, sp, #0x48
   16778:	ldr	w3, [sp, #24]
   1677c:	ldr	w2, [sp, #28]
   16780:	ldr	w1, [sp, #32]
   16784:	bl	15a0 <BZ2_bzCompressInit@plt>
   16788:	str	w0, [sp, #156]
   1678c:	ldr	w0, [sp, #156]
   16790:	cmp	w0, #0x0
   16794:	b.eq	167a0 <BZ2_bzBuffToBuffCompress@@Base+0xe4>  // b.none
   16798:	ldr	w0, [sp, #156]
   1679c:	b	16838 <BZ2_bzBuffToBuffCompress@@Base+0x17c>
   167a0:	ldr	x0, [sp, #40]
   167a4:	str	x0, [sp, #72]
   167a8:	ldr	x0, [sp, #56]
   167ac:	str	x0, [sp, #96]
   167b0:	ldr	w0, [sp, #36]
   167b4:	str	w0, [sp, #80]
   167b8:	ldr	x0, [sp, #48]
   167bc:	ldr	w0, [x0]
   167c0:	str	w0, [sp, #104]
   167c4:	add	x0, sp, #0x48
   167c8:	mov	w1, #0x2                   	// #2
   167cc:	bl	1600 <BZ2_bzCompress@plt>
   167d0:	str	w0, [sp, #156]
   167d4:	ldr	w0, [sp, #156]
   167d8:	cmp	w0, #0x3
   167dc:	b.eq	16814 <BZ2_bzBuffToBuffCompress@@Base+0x158>  // b.none
   167e0:	ldr	w0, [sp, #156]
   167e4:	cmp	w0, #0x4
   167e8:	b.ne	16828 <BZ2_bzBuffToBuffCompress@@Base+0x16c>  // b.any
   167ec:	ldr	x0, [sp, #48]
   167f0:	ldr	w1, [x0]
   167f4:	ldr	w0, [sp, #104]
   167f8:	sub	w1, w1, w0
   167fc:	ldr	x0, [sp, #48]
   16800:	str	w1, [x0]
   16804:	add	x0, sp, #0x48
   16808:	bl	15b0 <BZ2_bzCompressEnd@plt>
   1680c:	mov	w0, #0x0                   	// #0
   16810:	b	16838 <BZ2_bzBuffToBuffCompress@@Base+0x17c>
   16814:	nop
   16818:	add	x0, sp, #0x48
   1681c:	bl	15b0 <BZ2_bzCompressEnd@plt>
   16820:	mov	w0, #0xfffffff8            	// #-8
   16824:	b	16838 <BZ2_bzBuffToBuffCompress@@Base+0x17c>
   16828:	nop
   1682c:	add	x0, sp, #0x48
   16830:	bl	15b0 <BZ2_bzCompressEnd@plt>
   16834:	ldr	w0, [sp, #156]
   16838:	ldp	x29, x30, [sp], #160
   1683c:	ret

0000000000016840 <BZ2_bzBuffToBuffDecompress@@Base>:
   16840:	stp	x29, x30, [sp, #-160]!
   16844:	mov	x29, sp
   16848:	str	x0, [sp, #56]
   1684c:	str	x1, [sp, #48]
   16850:	str	x2, [sp, #40]
   16854:	str	w3, [sp, #36]
   16858:	str	w4, [sp, #32]
   1685c:	str	w5, [sp, #28]
   16860:	ldr	x0, [sp, #56]
   16864:	cmp	x0, #0x0
   16868:	b.eq	168b4 <BZ2_bzBuffToBuffDecompress@@Base+0x74>  // b.none
   1686c:	ldr	x0, [sp, #48]
   16870:	cmp	x0, #0x0
   16874:	b.eq	168b4 <BZ2_bzBuffToBuffDecompress@@Base+0x74>  // b.none
   16878:	ldr	x0, [sp, #40]
   1687c:	cmp	x0, #0x0
   16880:	b.eq	168b4 <BZ2_bzBuffToBuffDecompress@@Base+0x74>  // b.none
   16884:	ldr	w0, [sp, #32]
   16888:	cmp	w0, #0x0
   1688c:	b.eq	1689c <BZ2_bzBuffToBuffDecompress@@Base+0x5c>  // b.none
   16890:	ldr	w0, [sp, #32]
   16894:	cmp	w0, #0x1
   16898:	b.ne	168b4 <BZ2_bzBuffToBuffDecompress@@Base+0x74>  // b.any
   1689c:	ldr	w0, [sp, #28]
   168a0:	cmp	w0, #0x0
   168a4:	b.lt	168b4 <BZ2_bzBuffToBuffDecompress@@Base+0x74>  // b.tstop
   168a8:	ldr	w0, [sp, #28]
   168ac:	cmp	w0, #0x4
   168b0:	b.le	168bc <BZ2_bzBuffToBuffDecompress@@Base+0x7c>
   168b4:	mov	w0, #0xfffffffe            	// #-2
   168b8:	b	169a0 <BZ2_bzBuffToBuffDecompress@@Base+0x160>
   168bc:	str	xzr, [sp, #128]
   168c0:	str	xzr, [sp, #136]
   168c4:	str	xzr, [sp, #144]
   168c8:	add	x0, sp, #0x48
   168cc:	ldr	w2, [sp, #32]
   168d0:	ldr	w1, [sp, #28]
   168d4:	bl	1530 <BZ2_bzDecompressInit@plt>
   168d8:	str	w0, [sp, #156]
   168dc:	ldr	w0, [sp, #156]
   168e0:	cmp	w0, #0x0
   168e4:	b.eq	168f0 <BZ2_bzBuffToBuffDecompress@@Base+0xb0>  // b.none
   168e8:	ldr	w0, [sp, #156]
   168ec:	b	169a0 <BZ2_bzBuffToBuffDecompress@@Base+0x160>
   168f0:	ldr	x0, [sp, #40]
   168f4:	str	x0, [sp, #72]
   168f8:	ldr	x0, [sp, #56]
   168fc:	str	x0, [sp, #96]
   16900:	ldr	w0, [sp, #36]
   16904:	str	w0, [sp, #80]
   16908:	ldr	x0, [sp, #48]
   1690c:	ldr	w0, [x0]
   16910:	str	w0, [sp, #104]
   16914:	add	x0, sp, #0x48
   16918:	bl	1680 <BZ2_bzDecompress@plt>
   1691c:	str	w0, [sp, #156]
   16920:	ldr	w0, [sp, #156]
   16924:	cmp	w0, #0x0
   16928:	b.eq	16960 <BZ2_bzBuffToBuffDecompress@@Base+0x120>  // b.none
   1692c:	ldr	w0, [sp, #156]
   16930:	cmp	w0, #0x4
   16934:	b.ne	16990 <BZ2_bzBuffToBuffDecompress@@Base+0x150>  // b.any
   16938:	ldr	x0, [sp, #48]
   1693c:	ldr	w1, [x0]
   16940:	ldr	w0, [sp, #104]
   16944:	sub	w1, w1, w0
   16948:	ldr	x0, [sp, #48]
   1694c:	str	w1, [x0]
   16950:	add	x0, sp, #0x48
   16954:	bl	1540 <BZ2_bzDecompressEnd@plt>
   16958:	mov	w0, #0x0                   	// #0
   1695c:	b	169a0 <BZ2_bzBuffToBuffDecompress@@Base+0x160>
   16960:	nop
   16964:	ldr	w0, [sp, #104]
   16968:	cmp	w0, #0x0
   1696c:	b.eq	16980 <BZ2_bzBuffToBuffDecompress@@Base+0x140>  // b.none
   16970:	add	x0, sp, #0x48
   16974:	bl	1540 <BZ2_bzDecompressEnd@plt>
   16978:	mov	w0, #0xfffffff9            	// #-7
   1697c:	b	169a0 <BZ2_bzBuffToBuffDecompress@@Base+0x160>
   16980:	add	x0, sp, #0x48
   16984:	bl	1540 <BZ2_bzDecompressEnd@plt>
   16988:	mov	w0, #0xfffffff8            	// #-8
   1698c:	b	169a0 <BZ2_bzBuffToBuffDecompress@@Base+0x160>
   16990:	nop
   16994:	add	x0, sp, #0x48
   16998:	bl	1540 <BZ2_bzDecompressEnd@plt>
   1699c:	ldr	w0, [sp, #156]
   169a0:	ldp	x29, x30, [sp], #160
   169a4:	ret

00000000000169a8 <BZ2_bzlibVersion@@Base>:
   169a8:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   169ac:	add	x0, x0, #0x8a0
   169b0:	ret
   169b4:	mov	x12, #0x1400                	// #5120
   169b8:	sub	sp, sp, x12
   169bc:	stp	x29, x30, [sp]
   169c0:	mov	x29, sp
   169c4:	str	x0, [sp, #40]
   169c8:	str	w1, [sp, #36]
   169cc:	str	x2, [sp, #24]
   169d0:	str	w3, [sp, #32]
   169d4:	mov	w0, #0x9                   	// #9
   169d8:	str	w0, [sp, #5116]
   169dc:	str	wzr, [sp, #5112]
   169e0:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   169e4:	add	x0, x0, #0x8c8
   169e8:	ldrb	w0, [x0]
   169ec:	strb	w0, [sp, #56]
   169f0:	stur	xzr, [sp, #57]
   169f4:	strb	wzr, [sp, #65]
   169f8:	str	xzr, [sp, #5104]
   169fc:	str	xzr, [sp, #5096]
   16a00:	str	wzr, [sp, #5088]
   16a04:	mov	w0, #0x1e                  	// #30
   16a08:	str	w0, [sp, #5084]
   16a0c:	str	wzr, [sp, #5092]
   16a10:	str	wzr, [sp, #5080]
   16a14:	ldr	x0, [sp, #24]
   16a18:	cmp	x0, #0x0
   16a1c:	b.ne	16abc <BZ2_bzlibVersion@@Base+0x114>  // b.any
   16a20:	mov	x0, #0x0                   	// #0
   16a24:	b	16c80 <BZ2_bzlibVersion@@Base+0x2d8>
   16a28:	ldr	x0, [sp, #24]
   16a2c:	ldrb	w0, [x0]
   16a30:	cmp	w0, #0x77
   16a34:	b.eq	16a5c <BZ2_bzlibVersion@@Base+0xb4>  // b.none
   16a38:	cmp	w0, #0x77
   16a3c:	b.gt	16a74 <BZ2_bzlibVersion@@Base+0xcc>
   16a40:	cmp	w0, #0x72
   16a44:	b.eq	16a54 <BZ2_bzlibVersion@@Base+0xac>  // b.none
   16a48:	cmp	w0, #0x73
   16a4c:	b.eq	16a68 <BZ2_bzlibVersion@@Base+0xc0>  // b.none
   16a50:	b	16a74 <BZ2_bzlibVersion@@Base+0xcc>
   16a54:	str	wzr, [sp, #5112]
   16a58:	b	16ab0 <BZ2_bzlibVersion@@Base+0x108>
   16a5c:	mov	w0, #0x1                   	// #1
   16a60:	str	w0, [sp, #5112]
   16a64:	b	16ab0 <BZ2_bzlibVersion@@Base+0x108>
   16a68:	mov	w0, #0x1                   	// #1
   16a6c:	str	w0, [sp, #5092]
   16a70:	b	16ab0 <BZ2_bzlibVersion@@Base+0x108>
   16a74:	bl	1620 <__ctype_b_loc@plt>
   16a78:	ldr	x1, [x0]
   16a7c:	ldr	x0, [sp, #24]
   16a80:	ldrb	w0, [x0]
   16a84:	and	x0, x0, #0xff
   16a88:	lsl	x0, x0, #1
   16a8c:	add	x0, x1, x0
   16a90:	ldrh	w0, [x0]
   16a94:	and	w0, w0, #0x800
   16a98:	cmp	w0, #0x0
   16a9c:	b.eq	16ab0 <BZ2_bzlibVersion@@Base+0x108>  // b.none
   16aa0:	ldr	x0, [sp, #24]
   16aa4:	ldrb	w0, [x0]
   16aa8:	sub	w0, w0, #0x30
   16aac:	str	w0, [sp, #5116]
   16ab0:	ldr	x0, [sp, #24]
   16ab4:	add	x0, x0, #0x1
   16ab8:	str	x0, [sp, #24]
   16abc:	ldr	x0, [sp, #24]
   16ac0:	ldrb	w0, [x0]
   16ac4:	cmp	w0, #0x0
   16ac8:	b.ne	16a28 <BZ2_bzlibVersion@@Base+0x80>  // b.any
   16acc:	ldr	w0, [sp, #5112]
   16ad0:	cmp	w0, #0x0
   16ad4:	b.eq	16ae4 <BZ2_bzlibVersion@@Base+0x13c>  // b.none
   16ad8:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   16adc:	add	x0, x0, #0x8b8
   16ae0:	b	16aec <BZ2_bzlibVersion@@Base+0x144>
   16ae4:	adrp	x0, 17000 <BZ2_bzerror@@Base+0x180>
   16ae8:	add	x0, x0, #0x8c0
   16aec:	add	x2, sp, #0x38
   16af0:	mov	x1, x0
   16af4:	mov	x0, x2
   16af8:	bl	1560 <strcat@plt>
   16afc:	add	x0, sp, #0x38
   16b00:	bl	14b0 <strlen@plt>
   16b04:	mov	x1, x0
   16b08:	add	x0, sp, #0x38
   16b0c:	add	x0, x0, x1
   16b10:	mov	w1, #0x62                  	// #98
   16b14:	strh	w1, [x0]
   16b18:	ldr	w0, [sp, #32]
   16b1c:	cmp	w0, #0x0
   16b20:	b.ne	16b88 <BZ2_bzlibVersion@@Base+0x1e0>  // b.any
   16b24:	ldr	x0, [sp, #40]
   16b28:	cmp	x0, #0x0
   16b2c:	b.eq	16b40 <BZ2_bzlibVersion@@Base+0x198>  // b.none
   16b30:	ldr	x0, [sp, #40]
   16b34:	ldrb	w0, [x0]
   16b38:	cmp	w0, #0x0
   16b3c:	b.ne	16b70 <BZ2_bzlibVersion@@Base+0x1c8>  // b.any
   16b40:	ldr	w0, [sp, #5112]
   16b44:	cmp	w0, #0x0
   16b48:	b.eq	16b5c <BZ2_bzlibVersion@@Base+0x1b4>  // b.none
   16b4c:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   16b50:	ldr	x0, [x0, #4032]
   16b54:	ldr	x0, [x0]
   16b58:	b	16b68 <BZ2_bzlibVersion@@Base+0x1c0>
   16b5c:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   16b60:	ldr	x0, [x0, #4040]
   16b64:	ldr	x0, [x0]
   16b68:	str	x0, [sp, #5104]
   16b6c:	b	16b9c <BZ2_bzlibVersion@@Base+0x1f4>
   16b70:	add	x0, sp, #0x38
   16b74:	mov	x1, x0
   16b78:	ldr	x0, [sp, #40]
   16b7c:	bl	16f0 <fopen64@plt>
   16b80:	str	x0, [sp, #5104]
   16b84:	b	16b9c <BZ2_bzlibVersion@@Base+0x1f4>
   16b88:	add	x0, sp, #0x38
   16b8c:	mov	x1, x0
   16b90:	ldr	w0, [sp, #36]
   16b94:	bl	1580 <fdopen@plt>
   16b98:	str	x0, [sp, #5104]
   16b9c:	ldr	x0, [sp, #5104]
   16ba0:	cmp	x0, #0x0
   16ba4:	b.ne	16bb0 <BZ2_bzlibVersion@@Base+0x208>  // b.any
   16ba8:	mov	x0, #0x0                   	// #0
   16bac:	b	16c80 <BZ2_bzlibVersion@@Base+0x2d8>
   16bb0:	ldr	w0, [sp, #5112]
   16bb4:	cmp	w0, #0x0
   16bb8:	b.eq	16c08 <BZ2_bzlibVersion@@Base+0x260>  // b.none
   16bbc:	ldr	w0, [sp, #5116]
   16bc0:	cmp	w0, #0x0
   16bc4:	b.gt	16bd0 <BZ2_bzlibVersion@@Base+0x228>
   16bc8:	mov	w0, #0x1                   	// #1
   16bcc:	str	w0, [sp, #5116]
   16bd0:	ldr	w0, [sp, #5116]
   16bd4:	cmp	w0, #0x9
   16bd8:	b.le	16be4 <BZ2_bzlibVersion@@Base+0x23c>
   16bdc:	mov	w0, #0x9                   	// #9
   16be0:	str	w0, [sp, #5116]
   16be4:	add	x0, sp, #0x1, lsl #12
   16be8:	add	x0, x0, #0x3d4
   16bec:	ldr	w4, [sp, #5084]
   16bf0:	ldr	w3, [sp, #5088]
   16bf4:	ldr	w2, [sp, #5116]
   16bf8:	ldr	x1, [sp, #5104]
   16bfc:	bl	1590 <BZ2_bzWriteOpen@plt>
   16c00:	str	x0, [sp, #5096]
   16c04:	b	16c30 <BZ2_bzlibVersion@@Base+0x288>
   16c08:	add	x1, sp, #0x48
   16c0c:	add	x0, sp, #0x1, lsl #12
   16c10:	add	x0, x0, #0x3d4
   16c14:	ldr	w5, [sp, #5080]
   16c18:	mov	x4, x1
   16c1c:	ldr	w3, [sp, #5092]
   16c20:	ldr	w2, [sp, #5088]
   16c24:	ldr	x1, [sp, #5104]
   16c28:	bl	1700 <BZ2_bzReadOpen@plt>
   16c2c:	str	x0, [sp, #5096]
   16c30:	ldr	x0, [sp, #5096]
   16c34:	cmp	x0, #0x0
   16c38:	b.ne	16c7c <BZ2_bzlibVersion@@Base+0x2d4>  // b.any
   16c3c:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   16c40:	ldr	x0, [x0, #4040]
   16c44:	ldr	x0, [x0]
   16c48:	ldr	x1, [sp, #5104]
   16c4c:	cmp	x1, x0
   16c50:	b.eq	16c74 <BZ2_bzlibVersion@@Base+0x2cc>  // b.none
   16c54:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   16c58:	ldr	x0, [x0, #4032]
   16c5c:	ldr	x0, [x0]
   16c60:	ldr	x1, [sp, #5104]
   16c64:	cmp	x1, x0
   16c68:	b.eq	16c74 <BZ2_bzlibVersion@@Base+0x2cc>  // b.none
   16c6c:	ldr	x0, [sp, #5104]
   16c70:	bl	1510 <fclose@plt>
   16c74:	mov	x0, #0x0                   	// #0
   16c78:	b	16c80 <BZ2_bzlibVersion@@Base+0x2d8>
   16c7c:	ldr	x0, [sp, #5096]
   16c80:	ldp	x29, x30, [sp]
   16c84:	mov	x12, #0x1400                	// #5120
   16c88:	add	sp, sp, x12
   16c8c:	ret

0000000000016c90 <BZ2_bzopen@@Base>:
   16c90:	stp	x29, x30, [sp, #-32]!
   16c94:	mov	x29, sp
   16c98:	str	x0, [sp, #24]
   16c9c:	str	x1, [sp, #16]
   16ca0:	mov	w3, #0x0                   	// #0
   16ca4:	ldr	x2, [sp, #16]
   16ca8:	mov	w1, #0xffffffff            	// #-1
   16cac:	ldr	x0, [sp, #24]
   16cb0:	bl	169b4 <BZ2_bzlibVersion@@Base+0xc>
   16cb4:	ldp	x29, x30, [sp], #32
   16cb8:	ret

0000000000016cbc <BZ2_bzdopen@@Base>:
   16cbc:	stp	x29, x30, [sp, #-32]!
   16cc0:	mov	x29, sp
   16cc4:	str	w0, [sp, #28]
   16cc8:	str	x1, [sp, #16]
   16ccc:	mov	w3, #0x1                   	// #1
   16cd0:	ldr	x2, [sp, #16]
   16cd4:	ldr	w1, [sp, #28]
   16cd8:	mov	x0, #0x0                   	// #0
   16cdc:	bl	169b4 <BZ2_bzlibVersion@@Base+0xc>
   16ce0:	ldp	x29, x30, [sp], #32
   16ce4:	ret

0000000000016ce8 <BZ2_bzread@@Base>:
   16ce8:	stp	x29, x30, [sp, #-64]!
   16cec:	mov	x29, sp
   16cf0:	str	x0, [sp, #40]
   16cf4:	str	x1, [sp, #32]
   16cf8:	str	w2, [sp, #28]
   16cfc:	ldr	x0, [sp, #40]
   16d00:	ldr	w0, [x0, #5096]
   16d04:	cmp	w0, #0x4
   16d08:	b.ne	16d14 <BZ2_bzread@@Base+0x2c>  // b.any
   16d0c:	mov	w0, #0x0                   	// #0
   16d10:	b	16d50 <BZ2_bzread@@Base+0x68>
   16d14:	add	x0, sp, #0x38
   16d18:	ldr	w3, [sp, #28]
   16d1c:	ldr	x2, [sp, #32]
   16d20:	ldr	x1, [sp, #40]
   16d24:	bl	1710 <BZ2_bzRead@plt>
   16d28:	str	w0, [sp, #60]
   16d2c:	ldr	w0, [sp, #56]
   16d30:	cmp	w0, #0x0
   16d34:	b.eq	16d44 <BZ2_bzread@@Base+0x5c>  // b.none
   16d38:	ldr	w0, [sp, #56]
   16d3c:	cmp	w0, #0x4
   16d40:	b.ne	16d4c <BZ2_bzread@@Base+0x64>  // b.any
   16d44:	ldr	w0, [sp, #60]
   16d48:	b	16d50 <BZ2_bzread@@Base+0x68>
   16d4c:	mov	w0, #0xffffffff            	// #-1
   16d50:	ldp	x29, x30, [sp], #64
   16d54:	ret

0000000000016d58 <BZ2_bzwrite@@Base>:
   16d58:	stp	x29, x30, [sp, #-64]!
   16d5c:	mov	x29, sp
   16d60:	str	x0, [sp, #40]
   16d64:	str	x1, [sp, #32]
   16d68:	str	w2, [sp, #28]
   16d6c:	add	x0, sp, #0x3c
   16d70:	ldr	w3, [sp, #28]
   16d74:	ldr	x2, [sp, #32]
   16d78:	ldr	x1, [sp, #40]
   16d7c:	bl	1610 <BZ2_bzWrite@plt>
   16d80:	ldr	w0, [sp, #60]
   16d84:	cmp	w0, #0x0
   16d88:	b.ne	16d94 <BZ2_bzwrite@@Base+0x3c>  // b.any
   16d8c:	ldr	w0, [sp, #28]
   16d90:	b	16d98 <BZ2_bzwrite@@Base+0x40>
   16d94:	mov	w0, #0xffffffff            	// #-1
   16d98:	ldp	x29, x30, [sp], #64
   16d9c:	ret

0000000000016da0 <BZ2_bzflush@@Base>:
   16da0:	sub	sp, sp, #0x10
   16da4:	str	x0, [sp, #8]
   16da8:	mov	w0, #0x0                   	// #0
   16dac:	add	sp, sp, #0x10
   16db0:	ret

0000000000016db4 <BZ2_bzclose@@Base>:
   16db4:	stp	x29, x30, [sp, #-48]!
   16db8:	mov	x29, sp
   16dbc:	str	x0, [sp, #24]
   16dc0:	ldr	x0, [sp, #24]
   16dc4:	cmp	x0, #0x0
   16dc8:	b.eq	16e74 <BZ2_bzclose@@Base+0xc0>  // b.none
   16dcc:	ldr	x0, [sp, #24]
   16dd0:	ldr	x0, [x0]
   16dd4:	str	x0, [sp, #40]
   16dd8:	ldr	x0, [sp, #24]
   16ddc:	add	x0, x0, #0x1, lsl #12
   16de0:	ldrb	w0, [x0, #916]
   16de4:	cmp	w0, #0x0
   16de8:	b.eq	16e2c <BZ2_bzclose@@Base+0x78>  // b.none
   16dec:	add	x0, sp, #0x24
   16df0:	mov	x4, #0x0                   	// #0
   16df4:	mov	x3, #0x0                   	// #0
   16df8:	mov	w2, #0x0                   	// #0
   16dfc:	ldr	x1, [sp, #24]
   16e00:	bl	15f0 <BZ2_bzWriteClose@plt>
   16e04:	ldr	w0, [sp, #36]
   16e08:	cmp	w0, #0x0
   16e0c:	b.eq	16e38 <BZ2_bzclose@@Base+0x84>  // b.none
   16e10:	mov	x4, #0x0                   	// #0
   16e14:	mov	x3, #0x0                   	// #0
   16e18:	mov	w2, #0x1                   	// #1
   16e1c:	ldr	x1, [sp, #24]
   16e20:	mov	x0, #0x0                   	// #0
   16e24:	bl	15f0 <BZ2_bzWriteClose@plt>
   16e28:	b	16e38 <BZ2_bzclose@@Base+0x84>
   16e2c:	add	x0, sp, #0x24
   16e30:	ldr	x1, [sp, #24]
   16e34:	bl	1550 <BZ2_bzReadClose@plt>
   16e38:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   16e3c:	ldr	x0, [x0, #4040]
   16e40:	ldr	x0, [x0]
   16e44:	ldr	x1, [sp, #40]
   16e48:	cmp	x1, x0
   16e4c:	b.eq	16e78 <BZ2_bzclose@@Base+0xc4>  // b.none
   16e50:	adrp	x0, 28000 <BZ2_bzerror@@Base+0x11180>
   16e54:	ldr	x0, [x0, #4032]
   16e58:	ldr	x0, [x0]
   16e5c:	ldr	x1, [sp, #40]
   16e60:	cmp	x1, x0
   16e64:	b.eq	16e78 <BZ2_bzclose@@Base+0xc4>  // b.none
   16e68:	ldr	x0, [sp, #40]
   16e6c:	bl	1510 <fclose@plt>
   16e70:	b	16e78 <BZ2_bzclose@@Base+0xc4>
   16e74:	nop
   16e78:	ldp	x29, x30, [sp], #48
   16e7c:	ret

0000000000016e80 <BZ2_bzerror@@Base>:
   16e80:	sub	sp, sp, #0x20
   16e84:	str	x0, [sp, #8]
   16e88:	str	x1, [sp]
   16e8c:	ldr	x0, [sp, #8]
   16e90:	ldr	w0, [x0, #5096]
   16e94:	str	w0, [sp, #28]
   16e98:	ldr	w0, [sp, #28]
   16e9c:	cmp	w0, #0x0
   16ea0:	b.le	16ea8 <BZ2_bzerror@@Base+0x28>
   16ea4:	str	wzr, [sp, #28]
   16ea8:	ldr	x0, [sp]
   16eac:	ldr	w1, [sp, #28]
   16eb0:	str	w1, [x0]
   16eb4:	ldr	w0, [sp, #28]
   16eb8:	neg	w1, w0
   16ebc:	adrp	x0, 29000 <BZ2_bzerror@@Base+0x12180>
   16ec0:	add	x0, x0, #0xd90
   16ec4:	sxtw	x1, w1
   16ec8:	ldr	x0, [x0, x1, lsl #3]
   16ecc:	add	sp, sp, #0x20
   16ed0:	ret

Disassembly of section .fini:

0000000000016ed4 <.fini>:
   16ed4:	stp	x29, x30, [sp, #-16]!
   16ed8:	mov	x29, sp
   16edc:	ldp	x29, x30, [sp], #16
   16ee0:	ret
