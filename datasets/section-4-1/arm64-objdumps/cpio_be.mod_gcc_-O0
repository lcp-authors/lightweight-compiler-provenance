
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cpio_be.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x7b0>:
   0:	sub	sp, sp, #0x10
   4:	strh	w0, [sp, #14]
   8:	ldrh	w0, [sp, #14]
   c:	lsl	w0, w0, #8
  10:	sxth	w1, w0
  14:	ldrh	w0, [sp, #14]
  18:	lsr	w0, w0, #8
  1c:	and	w0, w0, #0xffff
  20:	sxth	w0, w0
  24:	orr	w0, w1, w0
  28:	sxth	w0, w0
  2c:	and	w0, w0, #0xffff
  30:	add	sp, sp, #0x10
  34:	ret
  38:	stp	x29, x30, [sp, #-64]!
  3c:	mov	x29, sp
  40:	str	x19, [sp, #16]
  44:	str	x0, [sp, #40]
  48:	str	x1, [sp, #32]
  4c:	str	xzr, [sp, #56]
  50:	b	80 <grub_mod_init-0x730>
  54:	ldr	x0, [sp, #56]
  58:	lsl	x19, x0, #16
  5c:	ldr	x0, [sp, #40]
  60:	add	x1, x0, #0x2
  64:	str	x1, [sp, #40]
  68:	ldrh	w0, [x0]
  6c:	bl	0 <grub_mod_init-0x7b0>
  70:	and	w0, w0, #0xffff
  74:	and	x0, x0, #0xffff
  78:	orr	x0, x19, x0
  7c:	str	x0, [sp, #56]
  80:	ldr	x0, [sp, #32]
  84:	sub	x1, x0, #0x1
  88:	str	x1, [sp, #32]
  8c:	cmp	x0, #0x0
  90:	b.ne	54 <grub_mod_init-0x75c>  // b.any
  94:	ldr	x0, [sp, #56]
  98:	ldr	x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #64
  a0:	ret
  a4:	stp	x29, x30, [sp, #-32]!
  a8:	mov	x29, sp
  ac:	str	x0, [sp, #24]
  b0:	ldr	x1, [sp, #24]
  b4:	adrp	x0, 0 <grub_mod_init-0x7b0>
  b8:	add	x0, x0, #0x0
  bc:	ldr	x0, [x0]
  c0:	bl	0 <grub_list_push>
  c4:	nop
  c8:	ldp	x29, x30, [sp], #32
  cc:	ret
	...
  d8:	stp	x29, x30, [sp, #-32]!
  dc:	mov	x29, sp
  e0:	str	x0, [sp, #24]
  e4:	ldr	x0, [sp, #24]
  e8:	bl	0 <grub_list_remove>
  ec:	nop
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret
  f8:	stp	x29, x30, [sp, #-96]!
  fc:	mov	x29, sp
 100:	str	x0, [sp, #40]
 104:	str	x1, [sp, #32]
 108:	str	x2, [sp, #24]
 10c:	str	x3, [sp, #16]
 110:	ldr	x0, [sp, #40]
 114:	ldr	x1, [x0, #16]
 118:	ldr	x0, [sp, #40]
 11c:	str	x1, [x0, #8]
 120:	ldr	x0, [sp, #40]
 124:	ldr	x5, [x0]
 128:	ldr	x0, [sp, #40]
 12c:	ldr	x0, [x0, #8]
 130:	add	x1, sp, #0x30
 134:	mov	x4, x1
 138:	mov	x3, #0x1a                  	// #26
 13c:	mov	x2, x0
 140:	mov	x1, #0x0                   	// #0
 144:	mov	x0, x5
 148:	bl	0 <grub_disk_read>
 14c:	cmp	w0, #0x0
 150:	b.eq	168 <grub_mod_init-0x648>  // b.none
 154:	adrp	x0, 0 <grub_mod_init-0x7b0>
 158:	add	x0, x0, #0x0
 15c:	ldr	x0, [x0]
 160:	ldr	w0, [x0]
 164:	b	3a4 <grub_mod_init-0x40c>
 168:	add	x3, sp, #0x30
 16c:	mov	x2, #0x2                   	// #2
 170:	adrp	x0, 0 <grub_mod_init-0x7b0>
 174:	add	x0, x0, #0x0
 178:	ldr	x1, [x0]
 17c:	mov	x0, x3
 180:	bl	0 <grub_memcmp>
 184:	cmp	w0, #0x0
 188:	b.eq	1a4 <grub_mod_init-0x60c>  // b.none
 18c:	adrp	x0, 0 <grub_mod_init-0x7b0>
 190:	add	x0, x0, #0x0
 194:	ldr	x1, [x0]
 198:	mov	w0, #0x9                   	// #9
 19c:	bl	0 <grub_error>
 1a0:	b	3a4 <grub_mod_init-0x40c>
 1a4:	add	x0, sp, #0x30
 1a8:	add	x0, x0, #0x16
 1ac:	mov	x1, #0x2                   	// #2
 1b0:	bl	38 <grub_mod_init-0x778>
 1b4:	mov	x1, x0
 1b8:	ldr	x0, [sp, #40]
 1bc:	str	x1, [x0, #32]
 1c0:	ldr	x0, [sp, #24]
 1c4:	cmp	x0, #0x0
 1c8:	b.eq	1e8 <grub_mod_init-0x5c8>  // b.none
 1cc:	add	x0, sp, #0x30
 1d0:	add	x0, x0, #0x10
 1d4:	mov	x1, #0x2                   	// #2
 1d8:	bl	38 <grub_mod_init-0x778>
 1dc:	mov	w1, w0
 1e0:	ldr	x0, [sp, #24]
 1e4:	str	w1, [x0]
 1e8:	add	x0, sp, #0x30
 1ec:	add	x0, x0, #0x6
 1f0:	mov	x1, #0x1                   	// #1
 1f4:	bl	38 <grub_mod_init-0x778>
 1f8:	str	w0, [sp, #92]
 1fc:	add	x0, sp, #0x30
 200:	add	x0, x0, #0x14
 204:	mov	x1, #0x1                   	// #1
 208:	bl	38 <grub_mod_init-0x778>
 20c:	str	x0, [sp, #80]
 210:	ldr	x1, [sp, #80]
 214:	mov	x0, #0x7fffffff            	// #2147483647
 218:	cmp	x1, x0
 21c:	b.ls	234 <grub_mod_init-0x57c>  // b.plast
 220:	ldr	x0, [sp, #16]
 224:	mov	w1, #0xffffffff            	// #-1
 228:	str	w1, [x0]
 22c:	mov	w0, #0x0                   	// #0
 230:	b	3a4 <grub_mod_init-0x40c>
 234:	ldr	x0, [sp, #16]
 238:	ldr	w1, [sp, #92]
 23c:	str	w1, [x0]
 240:	ldr	x0, [sp, #80]
 244:	add	x0, x0, #0x1
 248:	bl	0 <grub_malloc>
 24c:	mov	x1, x0
 250:	ldr	x0, [sp, #32]
 254:	str	x1, [x0]
 258:	ldr	x0, [sp, #32]
 25c:	ldr	x0, [x0]
 260:	cmp	x0, #0x0
 264:	b.ne	27c <grub_mod_init-0x534>  // b.any
 268:	adrp	x0, 0 <grub_mod_init-0x7b0>
 26c:	add	x0, x0, #0x0
 270:	ldr	x0, [x0]
 274:	ldr	w0, [x0]
 278:	b	3a4 <grub_mod_init-0x40c>
 27c:	ldr	x0, [sp, #40]
 280:	ldr	x5, [x0]
 284:	ldr	x0, [sp, #40]
 288:	ldr	x0, [x0, #8]
 28c:	add	x1, x0, #0x1a
 290:	ldr	x0, [sp, #32]
 294:	ldr	x0, [x0]
 298:	mov	x4, x0
 29c:	ldr	x3, [sp, #80]
 2a0:	mov	x2, x1
 2a4:	mov	x1, #0x0                   	// #0
 2a8:	mov	x0, x5
 2ac:	bl	0 <grub_disk_read>
 2b0:	cmp	w0, #0x0
 2b4:	b.eq	2d8 <grub_mod_init-0x4d8>  // b.none
 2b8:	ldr	x0, [sp, #32]
 2bc:	ldr	x0, [x0]
 2c0:	bl	0 <grub_free>
 2c4:	adrp	x0, 0 <grub_mod_init-0x7b0>
 2c8:	add	x0, x0, #0x0
 2cc:	ldr	x0, [x0]
 2d0:	ldr	w0, [x0]
 2d4:	b	3a4 <grub_mod_init-0x40c>
 2d8:	ldr	x0, [sp, #32]
 2dc:	ldr	x1, [x0]
 2e0:	ldr	x0, [sp, #80]
 2e4:	add	x0, x1, x0
 2e8:	strb	wzr, [x0]
 2ec:	ldr	x0, [sp, #40]
 2f0:	ldr	x0, [x0, #32]
 2f4:	cmp	x0, #0x0
 2f8:	b.ne	35c <grub_mod_init-0x454>  // b.any
 2fc:	ldr	w0, [sp, #92]
 300:	cmp	w0, #0x0
 304:	b.ne	35c <grub_mod_init-0x454>  // b.any
 308:	ldr	x0, [sp, #80]
 30c:	cmp	x0, #0xb
 310:	b.ne	35c <grub_mod_init-0x454>  // b.any
 314:	ldr	x0, [sp, #32]
 318:	ldr	x3, [x0]
 31c:	mov	x2, #0xb                   	// #11
 320:	adrp	x0, 0 <grub_mod_init-0x7b0>
 324:	add	x0, x0, #0x0
 328:	ldr	x1, [x0]
 32c:	mov	x0, x3
 330:	bl	0 <grub_memcmp>
 334:	cmp	w0, #0x0
 338:	b.ne	35c <grub_mod_init-0x454>  // b.any
 33c:	ldr	x0, [sp, #16]
 340:	mov	w1, #0xffffffff            	// #-1
 344:	str	w1, [x0]
 348:	ldr	x0, [sp, #32]
 34c:	ldr	x0, [x0]
 350:	bl	0 <grub_free>
 354:	mov	w0, #0x0                   	// #0
 358:	b	3a4 <grub_mod_init-0x40c>
 35c:	ldr	x0, [sp, #40]
 360:	ldr	x1, [x0, #8]
 364:	ldr	x0, [sp, #80]
 368:	add	x0, x0, #0x1b
 36c:	and	x0, x0, #0xfffffffffffffffe
 370:	add	x1, x1, x0
 374:	ldr	x0, [sp, #40]
 378:	str	x1, [x0, #24]
 37c:	ldr	x0, [sp, #40]
 380:	ldr	x1, [x0, #24]
 384:	ldr	x0, [sp, #40]
 388:	ldr	x0, [x0, #32]
 38c:	add	x0, x0, #0x1
 390:	and	x0, x0, #0xfffffffffffffffe
 394:	add	x1, x1, x0
 398:	ldr	x0, [sp, #40]
 39c:	str	x1, [x0, #16]
 3a0:	mov	w0, #0x0                   	// #0
 3a4:	ldp	x29, x30, [sp], #96
 3a8:	ret
 3ac:	nop
	...
 3d0:	stp	x29, x30, [sp, #-48]!
 3d4:	mov	x29, sp
 3d8:	str	x0, [sp, #24]
 3dc:	ldr	x0, [sp, #24]
 3e0:	ldr	x0, [x0, #32]
 3e4:	cmp	x0, #0x0
 3e8:	b.ne	400 <grub_mod_init-0x3b0>  // b.any
 3ec:	adrp	x0, 0 <grub_mod_init-0x7b0>
 3f0:	add	x0, x0, #0x0
 3f4:	ldr	x0, [x0]
 3f8:	bl	0 <grub_strdup>
 3fc:	b	490 <grub_mod_init-0x320>
 400:	ldr	x0, [sp, #24]
 404:	ldr	x0, [x0, #32]
 408:	add	x0, x0, #0x1
 40c:	bl	0 <grub_malloc>
 410:	str	x0, [sp, #40]
 414:	ldr	x0, [sp, #40]
 418:	cmp	x0, #0x0
 41c:	b.ne	428 <grub_mod_init-0x388>  // b.any
 420:	mov	x0, #0x0                   	// #0
 424:	b	490 <grub_mod_init-0x320>
 428:	ldr	x0, [sp, #24]
 42c:	ldr	x5, [x0]
 430:	ldr	x0, [sp, #24]
 434:	ldr	x1, [x0, #24]
 438:	ldr	x0, [sp, #24]
 43c:	ldr	x0, [x0, #32]
 440:	ldr	x4, [sp, #40]
 444:	mov	x3, x0
 448:	mov	x2, x1
 44c:	mov	x1, #0x0                   	// #0
 450:	mov	x0, x5
 454:	bl	0 <grub_disk_read>
 458:	str	w0, [sp, #36]
 45c:	ldr	w0, [sp, #36]
 460:	cmp	w0, #0x0
 464:	b.eq	478 <grub_mod_init-0x338>  // b.none
 468:	ldr	x0, [sp, #40]
 46c:	bl	0 <grub_free>
 470:	mov	x0, #0x0                   	// #0
 474:	b	490 <grub_mod_init-0x320>
 478:	ldr	x0, [sp, #24]
 47c:	ldr	x0, [x0, #32]
 480:	ldr	x1, [sp, #40]
 484:	add	x0, x1, x0
 488:	strb	wzr, [x0]
 48c:	ldr	x0, [sp, #40]
 490:	ldp	x29, x30, [sp], #48
 494:	ret
	...
 4a0:	sub	sp, sp, #0x10
 4a4:	str	x0, [sp, #8]
 4a8:	ldr	x0, [sp, #8]
 4ac:	str	xzr, [x0, #16]
 4b0:	nop
 4b4:	add	sp, sp, #0x10
 4b8:	ret
 4bc:	stp	x29, x30, [sp, #-80]!
 4c0:	mov	x29, sp
 4c4:	str	x0, [sp, #24]
 4c8:	add	x0, sp, #0x28
 4cc:	mov	x4, x0
 4d0:	mov	x3, #0x1a                  	// #26
 4d4:	mov	x2, #0x0                   	// #0
 4d8:	mov	x1, #0x0                   	// #0
 4dc:	ldr	x0, [sp, #24]
 4e0:	bl	0 <grub_disk_read>
 4e4:	cmp	w0, #0x0
 4e8:	b.ne	53c <grub_mod_init-0x274>  // b.any
 4ec:	add	x3, sp, #0x28
 4f0:	mov	x2, #0x2                   	// #2
 4f4:	adrp	x0, 0 <grub_mod_init-0x7b0>
 4f8:	add	x0, x0, #0x0
 4fc:	ldr	x1, [x0]
 500:	mov	x0, x3
 504:	bl	0 <grub_memcmp>
 508:	cmp	w0, #0x0
 50c:	b.ne	544 <grub_mod_init-0x26c>  // b.any
 510:	mov	x0, #0x28                  	// #40
 514:	bl	0 <grub_zalloc>
 518:	str	x0, [sp, #72]
 51c:	ldr	x0, [sp, #72]
 520:	cmp	x0, #0x0
 524:	b.eq	54c <grub_mod_init-0x264>  // b.none
 528:	ldr	x0, [sp, #72]
 52c:	ldr	x1, [sp, #24]
 530:	str	x1, [x0]
 534:	ldr	x0, [sp, #72]
 538:	b	568 <grub_mod_init-0x248>
 53c:	nop
 540:	b	550 <grub_mod_init-0x260>
 544:	nop
 548:	b	550 <grub_mod_init-0x260>
 54c:	nop
 550:	adrp	x0, 0 <grub_mod_init-0x7b0>
 554:	add	x0, x0, #0x0
 558:	ldr	x1, [x0]
 55c:	mov	w0, #0x9                   	// #9
 560:	bl	0 <grub_error>
 564:	mov	x0, #0x0                   	// #0
 568:	ldp	x29, x30, [sp], #80
 56c:	ret
	...
 580:	stp	x29, x30, [sp, #-64]!
 584:	mov	x29, sp
 588:	str	x0, [sp, #40]
 58c:	str	x1, [sp, #32]
 590:	str	x2, [sp, #24]
 594:	str	x3, [sp, #16]
 598:	ldr	x0, [sp, #40]
 59c:	ldr	x0, [x0]
 5a0:	bl	4bc <grub_mod_init-0x2f4>
 5a4:	str	x0, [sp, #56]
 5a8:	ldr	x0, [sp, #56]
 5ac:	cmp	x0, #0x0
 5b0:	b.ne	5c8 <grub_mod_init-0x1e8>  // b.any
 5b4:	adrp	x0, 0 <grub_mod_init-0x7b0>
 5b8:	add	x0, x0, #0x0
 5bc:	ldr	x0, [x0]
 5c0:	ldr	w0, [x0]
 5c4:	b	5f8 <grub_mod_init-0x1b8>
 5c8:	ldr	x4, [sp, #16]
 5cc:	ldr	x3, [sp, #24]
 5d0:	ldr	x2, [sp, #32]
 5d4:	adrp	x0, 0 <grub_mod_init-0x7b0>
 5d8:	add	x0, x0, #0x0
 5dc:	ldr	x1, [x0]
 5e0:	ldr	x0, [sp, #56]
 5e4:	bl	0 <grub_archelp_dir>
 5e8:	str	w0, [sp, #52]
 5ec:	ldr	x0, [sp, #56]
 5f0:	bl	0 <grub_free>
 5f4:	ldr	w0, [sp, #52]
 5f8:	ldp	x29, x30, [sp], #64
 5fc:	ret
	...
 610:	stp	x29, x30, [sp, #-48]!
 614:	mov	x29, sp
 618:	str	x0, [sp, #24]
 61c:	str	x1, [sp, #16]
 620:	ldr	x0, [sp, #24]
 624:	ldr	x0, [x0, #8]
 628:	ldr	x0, [x0]
 62c:	bl	4bc <grub_mod_init-0x2f4>
 630:	str	x0, [sp, #40]
 634:	ldr	x0, [sp, #40]
 638:	cmp	x0, #0x0
 63c:	b.ne	654 <grub_mod_init-0x15c>  // b.any
 640:	adrp	x0, 0 <grub_mod_init-0x7b0>
 644:	add	x0, x0, #0x0
 648:	ldr	x0, [x0]
 64c:	ldr	w0, [x0]
 650:	b	6a8 <grub_mod_init-0x108>
 654:	ldr	x2, [sp, #16]
 658:	adrp	x0, 0 <grub_mod_init-0x7b0>
 65c:	add	x0, x0, #0x0
 660:	ldr	x1, [x0]
 664:	ldr	x0, [sp, #40]
 668:	bl	0 <grub_archelp_open>
 66c:	str	w0, [sp, #36]
 670:	ldr	w0, [sp, #36]
 674:	cmp	w0, #0x0
 678:	b.eq	688 <grub_mod_init-0x128>  // b.none
 67c:	ldr	x0, [sp, #40]
 680:	bl	0 <grub_free>
 684:	b	6a4 <grub_mod_init-0x10c>
 688:	ldr	x0, [sp, #24]
 68c:	ldr	x1, [sp, #40]
 690:	str	x1, [x0, #80]
 694:	ldr	x0, [sp, #40]
 698:	ldr	x1, [x0, #32]
 69c:	ldr	x0, [sp, #24]
 6a0:	str	x1, [x0, #64]
 6a4:	ldr	w0, [sp, #36]
 6a8:	ldp	x29, x30, [sp], #48
 6ac:	ret
	...
 6c0:	stp	x29, x30, [sp, #-64]!
 6c4:	mov	x29, sp
 6c8:	str	x0, [sp, #40]
 6cc:	str	x1, [sp, #32]
 6d0:	str	x2, [sp, #24]
 6d4:	ldr	x0, [sp, #40]
 6d8:	ldr	x0, [x0, #80]
 6dc:	str	x0, [sp, #56]
 6e0:	ldr	x0, [sp, #56]
 6e4:	ldr	x0, [x0]
 6e8:	ldr	x1, [sp, #40]
 6ec:	ldr	x1, [x1, #88]
 6f0:	str	x1, [x0, #48]
 6f4:	ldr	x0, [sp, #56]
 6f8:	ldr	x0, [x0]
 6fc:	ldr	x1, [sp, #40]
 700:	ldr	x1, [x1, #96]
 704:	str	x1, [x0, #56]
 708:	ldr	x0, [sp, #56]
 70c:	ldr	x5, [x0]
 710:	ldr	x0, [sp, #56]
 714:	ldr	x1, [x0, #24]
 718:	ldr	x0, [sp, #40]
 71c:	ldr	x0, [x0, #24]
 720:	add	x0, x1, x0
 724:	ldr	x4, [sp, #32]
 728:	ldr	x3, [sp, #24]
 72c:	mov	x2, x0
 730:	mov	x1, #0x0                   	// #0
 734:	mov	x0, x5
 738:	bl	0 <grub_disk_read>
 73c:	cmp	w0, #0x0
 740:	b.ne	74c <grub_mod_init-0x64>  // b.any
 744:	ldr	x0, [sp, #24]
 748:	b	750 <grub_mod_init-0x60>
 74c:	mov	x0, #0xffffffffffffffff    	// #-1
 750:	str	x0, [sp, #48]
 754:	ldr	x0, [sp, #56]
 758:	ldr	x0, [x0]
 75c:	str	xzr, [x0, #48]
 760:	ldr	x0, [sp, #48]
 764:	ldp	x29, x30, [sp], #64
 768:	ret
 76c:	stp	x29, x30, [sp, #-48]!
 770:	mov	x29, sp
 774:	str	x0, [sp, #24]
 778:	ldr	x0, [sp, #24]
 77c:	ldr	x0, [x0, #80]
 780:	str	x0, [sp, #40]
 784:	ldr	x0, [sp, #40]
 788:	bl	0 <grub_free>
 78c:	adrp	x0, 0 <grub_mod_init-0x7b0>
 790:	add	x0, x0, #0x0
 794:	ldr	x0, [x0]
 798:	ldr	w0, [x0]
 79c:	ldp	x29, x30, [sp], #48
 7a0:	ret
 7a4:	nop
	...

00000000000007b0 <grub_mod_init>:
 7b0:	stp	x29, x30, [sp, #-32]!
 7b4:	mov	x29, sp
 7b8:	str	x0, [sp, #24]
 7bc:	adrp	x0, 0 <grub_mod_init-0x7b0>
 7c0:	add	x0, x0, #0x0
 7c4:	ldr	x0, [x0]
 7c8:	bl	a4 <grub_mod_init-0x70c>
 7cc:	nop
 7d0:	ldp	x29, x30, [sp], #32
 7d4:	ret
	...

00000000000007e0 <grub_mod_fini>:
 7e0:	stp	x29, x30, [sp, #-16]!
 7e4:	mov	x29, sp
 7e8:	adrp	x0, 0 <grub_mod_init-0x7b0>
 7ec:	add	x0, x0, #0x0
 7f0:	ldr	x0, [x0]
 7f4:	bl	d8 <grub_mod_init-0x6d8>
 7f8:	nop
 7fc:	ldp	x29, x30, [sp], #16
 800:	ret
 804:	nop
	...
