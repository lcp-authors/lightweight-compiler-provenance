
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libelf-0.178.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002fe8 <.init>:
    2fe8:	stp	x29, x30, [sp, #-16]!
    2fec:	mov	x29, sp
    2ff0:	bl	3370 <*ABS*@plt+0x20>
    2ff4:	ldp	x29, x30, [sp], #16
    2ff8:	ret

Disassembly of section .plt:

0000000000003000 <memcpy@plt-0x20>:
    3000:	stp	x16, x30, [sp, #-16]!
    3004:	adrp	x16, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    3008:	ldr	x17, [x16, #4088]
    300c:	add	x16, x16, #0xff8
    3010:	br	x17
    3014:	nop
    3018:	nop
    301c:	nop

0000000000003020 <memcpy@plt>:
    3020:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3024:	ldr	x17, [x16]
    3028:	add	x16, x16, #0x0
    302c:	br	x17

0000000000003030 <memmove@plt>:
    3030:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3034:	ldr	x17, [x16, #8]
    3038:	add	x16, x16, #0x8
    303c:	br	x17

0000000000003040 <msync@plt>:
    3040:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3044:	ldr	x17, [x16, #16]
    3048:	add	x16, x16, #0x10
    304c:	br	x17

0000000000003050 <posix_fallocate@plt>:
    3050:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3054:	ldr	x17, [x16, #24]
    3058:	add	x16, x16, #0x18
    305c:	br	x17

0000000000003060 <memccpy@plt>:
    3060:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16, #32]
    3068:	add	x16, x16, #0x20
    306c:	br	x17

0000000000003070 <inflate@plt>:
    3070:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #40]
    3078:	add	x16, x16, #0x28
    307c:	br	x17

0000000000003080 <mremap@plt>:
    3080:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #48]
    3088:	add	x16, x16, #0x30
    308c:	br	x17

0000000000003090 <elf32_getchdr@plt>:
    3090:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #56]
    3098:	add	x16, x16, #0x38
    309c:	br	x17

00000000000030a0 <__cxa_finalize@plt>:
    30a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #64]
    30a8:	add	x16, x16, #0x40
    30ac:	br	x17

00000000000030b0 <qsort@plt>:
    30b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #72]
    30b8:	add	x16, x16, #0x48
    30bc:	br	x17

00000000000030c0 <malloc@plt>:
    30c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #80]
    30c8:	add	x16, x16, #0x50
    30cc:	br	x17

00000000000030d0 <open@plt>:
    30d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #88]
    30d8:	add	x16, x16, #0x58
    30dc:	br	x17

00000000000030e0 <deflate@plt>:
    30e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #96]
    30e8:	add	x16, x16, #0x60
    30ec:	br	x17

00000000000030f0 <strncmp@plt>:
    30f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #104]
    30f8:	add	x16, x16, #0x68
    30fc:	br	x17

0000000000003100 <memset@plt>:
    3100:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #112]
    3108:	add	x16, x16, #0x70
    310c:	br	x17

0000000000003110 <elf64_getshdr@plt>:
    3110:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #120]
    3118:	add	x16, x16, #0x78
    311c:	br	x17

0000000000003120 <fchmod@plt>:
    3120:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #128]
    3128:	add	x16, x16, #0x80
    312c:	br	x17

0000000000003130 <posix_memalign@plt>:
    3130:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #136]
    3138:	add	x16, x16, #0x88
    313c:	br	x17

0000000000003140 <calloc@plt>:
    3140:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #144]
    3148:	add	x16, x16, #0x90
    314c:	br	x17

0000000000003150 <gelf_xlatetof@plt>:
    3150:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #152]
    3158:	add	x16, x16, #0x98
    315c:	br	x17

0000000000003160 <realloc@plt>:
    3160:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #160]
    3168:	add	x16, x16, #0xa0
    316c:	br	x17

0000000000003170 <deflateInit_@plt>:
    3170:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #168]
    3178:	add	x16, x16, #0xa8
    317c:	br	x17

0000000000003180 <close@plt>:
    3180:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #176]
    3188:	add	x16, x16, #0xb0
    318c:	br	x17

0000000000003190 <elf64_getchdr@plt>:
    3190:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #184]
    3198:	add	x16, x16, #0xb8
    319c:	br	x17

00000000000031a0 <__gmon_start__@plt>:
    31a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #192]
    31a8:	add	x16, x16, #0xc0
    31ac:	br	x17

00000000000031b0 <inflateEnd@plt>:
    31b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #200]
    31b8:	add	x16, x16, #0xc8
    31bc:	br	x17

00000000000031c0 <strcmp@plt>:
    31c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #208]
    31c8:	add	x16, x16, #0xd0
    31cc:	br	x17

00000000000031d0 <__ctype_b_loc@plt>:
    31d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #216]
    31d8:	add	x16, x16, #0xd8
    31dc:	br	x17

00000000000031e0 <mmap@plt>:
    31e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #224]
    31e8:	add	x16, x16, #0xe0
    31ec:	br	x17

00000000000031f0 <strtol@plt>:
    31f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #232]
    31f8:	add	x16, x16, #0xe8
    31fc:	br	x17

0000000000003200 <free@plt>:
    3200:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #240]
    3208:	add	x16, x16, #0xf0
    320c:	br	x17

0000000000003210 <rawmemchr@plt>:
    3210:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #248]
    3218:	add	x16, x16, #0xf8
    321c:	br	x17

0000000000003220 <pwrite@plt>:
    3220:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #256]
    3228:	add	x16, x16, #0x100
    322c:	br	x17

0000000000003230 <deflateEnd@plt>:
    3230:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #264]
    3238:	add	x16, x16, #0x108
    323c:	br	x17

0000000000003240 <gelf_getchdr@plt>:
    3240:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #272]
    3248:	add	x16, x16, #0x110
    324c:	br	x17

0000000000003250 <pread@plt>:
    3250:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #280]
    3258:	add	x16, x16, #0x118
    325c:	br	x17

0000000000003260 <memrchr@plt>:
    3260:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #288]
    3268:	add	x16, x16, #0x120
    326c:	br	x17

0000000000003270 <inflateInit_@plt>:
    3270:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #296]
    3278:	add	x16, x16, #0x128
    327c:	br	x17

0000000000003280 <fcntl@plt>:
    3280:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #304]
    3288:	add	x16, x16, #0x130
    328c:	br	x17

0000000000003290 <elf32_getshdr@plt>:
    3290:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #312]
    3298:	add	x16, x16, #0x138
    329c:	br	x17

00000000000032a0 <munmap@plt>:
    32a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #320]
    32a8:	add	x16, x16, #0x140
    32ac:	br	x17

00000000000032b0 <gelf_getehdr@plt>:
    32b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #328]
    32b8:	add	x16, x16, #0x148
    32bc:	br	x17

00000000000032c0 <memchr@plt>:
    32c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #336]
    32c8:	add	x16, x16, #0x150
    32cc:	br	x17

00000000000032d0 <sysconf@plt>:
    32d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #344]
    32d8:	add	x16, x16, #0x158
    32dc:	br	x17

00000000000032e0 <elf_getdata@plt>:
    32e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #352]
    32e8:	add	x16, x16, #0x160
    32ec:	br	x17

00000000000032f0 <__fxstat@plt>:
    32f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #360]
    32f8:	add	x16, x16, #0x168
    32fc:	br	x17

0000000000003300 <dcgettext@plt>:
    3300:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #368]
    3308:	add	x16, x16, #0x170
    330c:	br	x17

0000000000003310 <inflateReset@plt>:
    3310:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #376]
    3318:	add	x16, x16, #0x178
    331c:	br	x17

0000000000003320 <ftruncate@plt>:
    3320:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #384]
    3328:	add	x16, x16, #0x180
    332c:	br	x17

0000000000003330 <__assert_fail@plt>:
    3330:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #392]
    3338:	add	x16, x16, #0x188
    333c:	br	x17

0000000000003340 <__errno_location@plt>:
    3340:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #400]
    3348:	add	x16, x16, #0x190
    334c:	br	x17

0000000000003350 <*ABS*@plt>:
    3350:	stp	x2, x3, [sp, #-16]!
    3354:	adrp	x2, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    3358:	adrp	x3, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    335c:	ldr	x2, [x2, #4064]
    3360:	add	x3, x3, #0xfe8
    3364:	br	x2
    3368:	nop
    336c:	nop

Disassembly of section .text:

0000000000003370 <elf_version@@ELFUTILS_1.0-0xd8>:
    3370:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    3374:	ldr	x0, [x0, #4048]
    3378:	cbz	x0, 3380 <*ABS*@plt+0x30>
    337c:	b	31a0 <__gmon_start__@plt>
    3380:	ret
    3384:	nop
    3388:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    338c:	add	x0, x0, #0x1b0
    3390:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    3394:	add	x1, x1, #0x1b0
    3398:	cmp	x1, x0
    339c:	b.eq	33b4 <*ABS*@plt+0x64>  // b.none
    33a0:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    33a4:	ldr	x1, [x1, #4032]
    33a8:	cbz	x1, 33b4 <*ABS*@plt+0x64>
    33ac:	mov	x16, x1
    33b0:	br	x16
    33b4:	ret
    33b8:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    33bc:	add	x0, x0, #0x1b0
    33c0:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    33c4:	add	x1, x1, #0x1b0
    33c8:	sub	x1, x1, x0
    33cc:	lsr	x2, x1, #63
    33d0:	add	x1, x2, x1, asr #3
    33d4:	cmp	xzr, x1, asr #1
    33d8:	asr	x1, x1, #1
    33dc:	b.eq	33f4 <*ABS*@plt+0xa4>  // b.none
    33e0:	adrp	x2, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    33e4:	ldr	x2, [x2, #4056]
    33e8:	cbz	x2, 33f4 <*ABS*@plt+0xa4>
    33ec:	mov	x16, x2
    33f0:	br	x16
    33f4:	ret
    33f8:	stp	x29, x30, [sp, #-32]!
    33fc:	mov	x29, sp
    3400:	str	x19, [sp, #16]
    3404:	adrp	x19, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    3408:	ldrb	w0, [x19, #432]
    340c:	cbnz	w0, 3434 <*ABS*@plt+0xe4>
    3410:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    3414:	ldr	x0, [x0, #4040]
    3418:	cbz	x0, 3428 <*ABS*@plt+0xd8>
    341c:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    3420:	ldr	x0, [x0, #424]
    3424:	bl	30a0 <__cxa_finalize@plt>
    3428:	bl	3388 <*ABS*@plt+0x38>
    342c:	mov	w0, #0x1                   	// #1
    3430:	strb	w0, [x19, #432]
    3434:	ldr	x19, [sp, #16]
    3438:	ldp	x29, x30, [sp], #32
    343c:	ret
    3440:	b	33b8 <*ABS*@plt+0x68>
    3444:	nop

0000000000003448 <elf_version@@ELFUTILS_1.0>:
    3448:	cbz	w0, 3460 <elf_version@@ELFUTILS_1.0+0x18>
    344c:	cmp	w0, #0x1
    3450:	b.ne	3468 <elf_version@@ELFUTILS_1.0+0x20>  // b.any
    3454:	adrp	x2, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    3458:	str	w0, [x2, #436]
    345c:	ret
    3460:	mov	w0, #0x1                   	// #1
    3464:	ret
    3468:	stp	x29, x30, [sp, #-16]!
    346c:	mov	w0, #0x2                   	// #2
    3470:	mov	x29, sp
    3474:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3478:	mov	w0, #0x0                   	// #0
    347c:	ldp	x29, x30, [sp], #16
    3480:	ret
    3484:	nop

0000000000003488 <elf_hash@@ELFUTILS_1.0>:
    3488:	mov	x1, x0
    348c:	ldrb	w0, [x0]
    3490:	cbz	x0, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    3494:	ldrb	w2, [x1, #1]
    3498:	cbz	w2, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    349c:	ldrb	w3, [x1, #2]
    34a0:	and	x2, x2, #0xff
    34a4:	add	x0, x2, x0, lsl #4
    34a8:	cbz	w3, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34ac:	ldrb	w2, [x1, #3]
    34b0:	and	x3, x3, #0xff
    34b4:	add	x0, x3, x0, lsl #4
    34b8:	cbz	w2, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34bc:	ldrb	w4, [x1, #4]
    34c0:	and	x2, x2, #0xff
    34c4:	add	x0, x2, x0, lsl #4
    34c8:	cbz	w4, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34cc:	ldrb	w3, [x1, #5]
    34d0:	and	x4, x4, #0xff
    34d4:	add	x0, x4, x0, lsl #4
    34d8:	add	x1, x1, #0x5
    34dc:	cbz	w3, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34e0:	and	x2, x3, #0xff
    34e4:	ldrb	w3, [x1, #1]!
    34e8:	add	x0, x2, x0, lsl #4
    34ec:	lsr	x2, x0, #24
    34f0:	and	x2, x2, #0xf0
    34f4:	eor	x0, x0, x2
    34f8:	cbnz	w3, 34e0 <elf_hash@@ELFUTILS_1.0+0x58>
    34fc:	and	x0, x0, #0xfffffff
    3500:	ret
    3504:	nop

0000000000003508 <elf_errno@@ELFUTILS_1.0>:
    3508:	stp	x29, x30, [sp, #-16]!
    350c:	mrs	x1, tpidr_el0
    3510:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    3514:	ldr	x2, [x0, #408]
    3518:	add	x0, x0, #0x198
    351c:	blr	x2
    3520:	mov	x29, sp
    3524:	ldr	w2, [x1, x0]
    3528:	str	wzr, [x1, x0]
    352c:	mov	w0, w2
    3530:	ldp	x29, x30, [sp], #16
    3534:	ret
    3538:	stp	x29, x30, [sp, #-16]!
    353c:	cmp	w0, #0x33
    3540:	mrs	x2, tpidr_el0
    3544:	mov	x29, sp
    3548:	csinc	w1, w0, wzr, cc  // cc = lo, ul, last
    354c:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    3550:	ldr	x3, [x0, #408]
    3554:	add	x0, x0, #0x198
    3558:	blr	x3
    355c:	str	w1, [x2, x0]
    3560:	ldp	x29, x30, [sp], #16
    3564:	ret

0000000000003568 <elf_errmsg@@ELFUTILS_1.0>:
    3568:	stp	x29, x30, [sp, #-16]!
    356c:	mrs	x2, tpidr_el0
    3570:	mov	w1, w0
    3574:	mov	x29, sp
    3578:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    357c:	ldr	x3, [x0, #408]
    3580:	add	x0, x0, #0x198
    3584:	blr	x3
    3588:	ldr	w0, [x2, x0]
    358c:	cbnz	w1, 35b4 <elf_errmsg@@ELFUTILS_1.0+0x4c>
    3590:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    3594:	add	x3, x3, #0x528
    3598:	ldr	x1, [x3, w0, sxtw #3]
    359c:	cmp	x1, #0x4f1
    35a0:	b.hi	3618 <elf_errmsg@@ELFUTILS_1.0+0xb0>  // b.pmore
    35a4:	cbnz	w0, 35dc <elf_errmsg@@ELFUTILS_1.0+0x74>
    35a8:	mov	x0, #0x0                   	// #0
    35ac:	ldp	x29, x30, [sp], #16
    35b0:	ret
    35b4:	add	w2, w1, #0x1
    35b8:	cmp	w2, #0x33
    35bc:	b.hi	35f8 <elf_errmsg@@ELFUTILS_1.0+0x90>  // b.pmore
    35c0:	cmn	w1, #0x1
    35c4:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    35c8:	csel	w0, w0, w1, eq  // eq = none
    35cc:	add	x3, x3, #0x528
    35d0:	ldr	x1, [x3, w0, sxtw #3]
    35d4:	cmp	x1, #0x4f1
    35d8:	b.hi	3634 <elf_errmsg@@ELFUTILS_1.0+0xcc>  // b.pmore
    35dc:	ldp	x29, x30, [sp], #16
    35e0:	add	x3, x3, #0x1a8
    35e4:	add	x1, x3, x1
    35e8:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    35ec:	mov	w2, #0x5                   	// #5
    35f0:	add	x0, x0, #0x4d8
    35f4:	b	3300 <dcgettext@plt>
    35f8:	ldp	x29, x30, [sp], #16
    35fc:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    3600:	add	x1, x1, #0x528
    3604:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    3608:	add	x1, x1, #0x1b1
    360c:	add	x0, x0, #0x4d8
    3610:	mov	w2, #0x5                   	// #5
    3614:	b	3300 <dcgettext@plt>
    3618:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    361c:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    3620:	add	x3, x3, #0x198
    3624:	add	x1, x1, #0x4a0
    3628:	add	x0, x0, #0x4b0
    362c:	mov	w2, #0x15b                 	// #347
    3630:	bl	3330 <__assert_fail@plt>
    3634:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    3638:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    363c:	add	x3, x3, #0x198
    3640:	add	x1, x1, #0x4a0
    3644:	add	x0, x0, #0x4e8
    3648:	mov	w2, #0x161                 	// #353
    364c:	bl	3330 <__assert_fail@plt>

0000000000003650 <elf_fill@@ELFUTILS_1.0>:
    3650:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    3654:	str	w0, [x1, #440]
    3658:	ret
    365c:	nop
    3660:	stp	x29, x30, [sp, #-192]!
    3664:	mov	x29, sp
    3668:	stp	x19, x20, [sp, #16]
    366c:	mov	x20, x2
    3670:	stp	x25, x26, [sp, #64]
    3674:	mov	w26, w0
    3678:	ldrb	w2, [x2, #4]
    367c:	sub	w0, w2, #0x1
    3680:	and	w0, w0, #0xff
    3684:	cmp	w0, #0x1
    3688:	b.hi	3a98 <elf_fill@@ELFUTILS_1.0+0x448>  // b.pmore
    368c:	stp	x27, x28, [sp, #80]
    3690:	mov	x27, x6
    3694:	ldrb	w6, [x20, #5]
    3698:	sub	w0, w6, #0x1
    369c:	and	w0, w0, #0xff
    36a0:	cmp	w0, #0x1
    36a4:	b.hi	3a94 <elf_fill@@ELFUTILS_1.0+0x444>  // b.pmore
    36a8:	stp	x21, x22, [sp, #32]
    36ac:	mov	x25, x3
    36b0:	mov	x22, x1
    36b4:	stp	x23, x24, [sp, #48]
    36b8:	cmp	w6, #0x1
    36bc:	mov	x23, x4
    36c0:	mov	w24, w5
    36c4:	b.eq	38bc <elf_fill@@ELFUTILS_1.0+0x26c>  // b.none
    36c8:	cmp	w2, #0x1
    36cc:	b.eq	3a1c <elf_fill@@ELFUTILS_1.0+0x3cc>  // b.none
    36d0:	ldp	x0, x1, [x20, #32]
    36d4:	stp	x0, x1, [sp, #160]
    36d8:	ldp	x0, x1, [x20, #48]
    36dc:	stp	x0, x1, [sp, #176]
    36e0:	ldrh	w1, [sp, #188]
    36e4:	ldr	x0, [sp, #168]
    36e8:	rev16	w1, w1
    36ec:	and	w7, w1, #0xffff
    36f0:	strh	w1, [sp, #188]
    36f4:	ldp	x4, x5, [x20]
    36f8:	rev	x0, x0
    36fc:	ldp	x2, x3, [x20, #16]
    3700:	stp	x4, x5, [sp, #128]
    3704:	stp	x2, x3, [sp, #144]
    3708:	str	x0, [sp, #168]
    370c:	add	x21, sp, #0x80
    3710:	and	x28, x7, #0xffff
    3714:	cbz	w7, 3c10 <elf_fill@@ELFUTILS_1.0+0x5c0>
    3718:	cmp	x23, x0
    371c:	b.cs	38f8 <elf_fill@@ELFUTILS_1.0+0x2a8>  // b.hs, b.nlast
    3720:	cmp	w24, #0x2
    3724:	mov	x21, #0x0                   	// #0
    3728:	ccmp	w24, #0x9, #0x4, ne  // ne = any
    372c:	cset	x28, eq  // eq = none
    3730:	add	x1, x28, x28, lsl #1
    3734:	mov	x0, #0x1                   	// #1
    3738:	add	x1, x28, x1, lsl #2
    373c:	lsl	x1, x1, #4
    3740:	add	x1, x1, #0x108
    3744:	bl	3140 <calloc@plt>
    3748:	mov	x19, x0
    374c:	cbz	x0, 3f88 <elf_fill@@ELFUTILS_1.0+0x938>
    3750:	ldrb	w0, [x20, #4]
    3754:	mov	w3, #0x1                   	// #1
    3758:	mov	w4, #0x3                   	// #3
    375c:	mov	w1, #0xa                   	// #10
    3760:	stp	x22, x27, [x19]
    3764:	cmp	w0, w3
    3768:	add	x2, x22, x25
    376c:	stp	w4, w24, [x19, #24]
    3770:	stp	w0, w26, [x19, #32]
    3774:	stp	x25, x23, [x19, #40]
    3778:	str	w3, [x19, #60]
    377c:	str	w1, [x19, #112]
    3780:	stp	w21, w28, [x19, #200]
    3784:	b.eq	3910 <elf_fill@@ELFUTILS_1.0+0x2c0>  // b.none
    3788:	cbz	x22, 3acc <elf_fill@@ELFUTILS_1.0+0x47c>
    378c:	ldrb	w3, [x20, #5]
    3790:	cmp	w3, #0x1
    3794:	b.eq	3ab8 <elf_fill@@ELFUTILS_1.0+0x468>  // b.none
    3798:	ldp	x0, x1, [x20]
    379c:	stp	x0, x1, [x19, #136]
    37a0:	add	x4, x19, #0x88
    37a4:	ldp	x0, x1, [x20, #16]
    37a8:	stp	x0, x1, [x19, #152]
    37ac:	mov	x5, x4
    37b0:	ldp	x0, x1, [x20, #32]
    37b4:	stp	x0, x1, [x19, #168]
    37b8:	ldp	x0, x1, [x20, #48]
    37bc:	str	x4, [x19, #72]
    37c0:	stp	x0, x1, [x19, #184]
    37c4:	ldrh	w0, [x19, #152]
    37c8:	ldp	x12, x11, [x19, #160]
    37cc:	rev16	w0, w0
    37d0:	ldr	x10, [x19, #176]
    37d4:	strh	w0, [x19, #152]
    37d8:	ldrh	w14, [x19, #154]
    37dc:	ldrh	w8, [x19, #188]
    37e0:	rev	x10, x10
    37e4:	ldrh	w7, [x19, #190]
    37e8:	rev16	w14, w14
    37ec:	ldrh	w6, [x19, #192]
    37f0:	rev16	w8, w8
    37f4:	ldrh	w4, [x19, #194]
    37f8:	rev16	w7, w7
    37fc:	ldrh	w1, [x19, #196]
    3800:	rev16	w6, w6
    3804:	ldrh	w0, [x19, #198]
    3808:	rev16	w4, w4
    380c:	ldr	w13, [x19, #156]
    3810:	rev16	w1, w1
    3814:	ldr	w9, [x19, #184]
    3818:	rev16	w0, w0
    381c:	rev	w13, w13
    3820:	rev	x12, x12
    3824:	rev	w9, w9
    3828:	rev	x11, x11
    382c:	strh	w14, [x19, #154]
    3830:	str	w13, [x19, #156]
    3834:	stp	x12, x11, [x19, #160]
    3838:	str	x10, [x19, #176]
    383c:	str	w9, [x19, #184]
    3840:	strh	w8, [x19, #188]
    3844:	strh	w7, [x19, #190]
    3848:	strh	w6, [x19, #192]
    384c:	strh	w4, [x19, #194]
    3850:	strh	w1, [x19, #196]
    3854:	strh	w0, [x19, #198]
    3858:	cbz	x22, 386c <elf_fill@@ELFUTILS_1.0+0x21c>
    385c:	ldr	x0, [x5, #40]
    3860:	cmp	w24, #0x8
    3864:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    3868:	b.eq	3b08 <elf_fill@@ELFUTILS_1.0+0x4b8>  // b.none
    386c:	add	x3, x19, #0xc8
    3870:	add	x0, x19, #0x158
    3874:	mov	x1, #0x0                   	// #0
    3878:	cbz	x21, 3898 <elf_fill@@ELFUTILS_1.0+0x248>
    387c:	nop
    3880:	stp	x1, x19, [x0]
    3884:	add	x1, x1, #0x1
    3888:	cmp	x1, x21
    388c:	str	x3, [x0, #72]
    3890:	add	x0, x0, #0xd0
    3894:	b.ne	3880 <elf_fill@@ELFUTILS_1.0+0x230>  // b.any
    3898:	ldp	x21, x22, [sp, #32]
    389c:	ldp	x23, x24, [sp, #48]
    38a0:	ldp	x27, x28, [sp, #80]
    38a4:	str	x3, [x19, #96]
    38a8:	mov	x0, x19
    38ac:	ldp	x19, x20, [sp, #16]
    38b0:	ldp	x25, x26, [sp, #64]
    38b4:	ldp	x29, x30, [sp], #192
    38b8:	ret
    38bc:	cmp	w2, #0x1
    38c0:	b.eq	3a58 <elf_fill@@ELFUTILS_1.0+0x408>  // b.none
    38c4:	tst	x20, #0x7
    38c8:	b.eq	3fa0 <elf_fill@@ELFUTILS_1.0+0x950>  // b.none
    38cc:	ldp	x0, x1, [x20, #32]
    38d0:	stp	x0, x1, [sp, #160]
    38d4:	ldp	x0, x1, [x20, #48]
    38d8:	stp	x0, x1, [sp, #176]
    38dc:	ldp	x0, x1, [x20]
    38e0:	stp	x0, x1, [sp, #128]
    38e4:	ldrh	w7, [sp, #188]
    38e8:	ldp	x0, x1, [x20, #16]
    38ec:	stp	x0, x1, [sp, #144]
    38f0:	ldr	x0, [sp, #168]
    38f4:	b	370c <elf_fill@@ELFUTILS_1.0+0xbc>
    38f8:	sub	x0, x23, x0
    38fc:	cmp	x0, x28, lsl #6
    3900:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    3904:	mov	x21, x28
    3908:	cbnz	x28, 3730 <elf_fill@@ELFUTILS_1.0+0xe0>
    390c:	b	3720 <elf_fill@@ELFUTILS_1.0+0xd0>
    3910:	cbz	x22, 3c68 <elf_fill@@ELFUTILS_1.0+0x618>
    3914:	ldrb	w3, [x20, #5]
    3918:	cmp	w3, #0x1
    391c:	b.eq	3bcc <elf_fill@@ELFUTILS_1.0+0x57c>  // b.none
    3920:	ldp	x0, x1, [x20]
    3924:	add	x4, x19, #0x88
    3928:	stp	x0, x1, [x19, #136]
    392c:	mov	x5, x4
    3930:	ldr	w6, [x20, #48]
    3934:	ldp	x0, x1, [x20, #16]
    3938:	stp	x0, x1, [x19, #152]
    393c:	ldp	x0, x1, [x20, #32]
    3940:	str	x4, [x19, #72]
    3944:	stp	x0, x1, [x19, #168]
    3948:	str	w6, [x19, #184]
    394c:	ldrh	w0, [x19, #152]
    3950:	ldp	w13, w12, [x19, #156]
    3954:	rev16	w0, w0
    3958:	ldp	w11, w10, [x19, #164]
    395c:	strh	w0, [x19, #152]
    3960:	ldrh	w14, [x19, #154]
    3964:	rev	w13, w13
    3968:	ldrh	w8, [x19, #176]
    396c:	rev	w12, w12
    3970:	ldrh	w7, [x19, #178]
    3974:	rev16	w14, w14
    3978:	ldrh	w6, [x19, #180]
    397c:	rev16	w8, w8
    3980:	ldrh	w4, [x19, #182]
    3984:	rev16	w7, w7
    3988:	ldrh	w1, [x19, #184]
    398c:	rev16	w6, w6
    3990:	ldrh	w0, [x19, #186]
    3994:	rev16	w4, w4
    3998:	ldr	w9, [x19, #172]
    399c:	rev16	w1, w1
    39a0:	rev16	w0, w0
    39a4:	rev	w11, w11
    39a8:	rev	w10, w10
    39ac:	rev	w9, w9
    39b0:	strh	w14, [x19, #154]
    39b4:	stp	w13, w12, [x19, #156]
    39b8:	stp	w11, w10, [x19, #164]
    39bc:	str	w9, [x19, #172]
    39c0:	strh	w8, [x19, #176]
    39c4:	strh	w7, [x19, #178]
    39c8:	strh	w6, [x19, #180]
    39cc:	strh	w4, [x19, #182]
    39d0:	strh	w1, [x19, #184]
    39d4:	strh	w0, [x19, #186]
    39d8:	cbz	x22, 39ec <elf_fill@@ELFUTILS_1.0+0x39c>
    39dc:	ldr	w0, [x5, #32]
    39e0:	cmp	w24, #0x8
    39e4:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    39e8:	b.eq	3d00 <elf_fill@@ELFUTILS_1.0+0x6b0>  // b.none
    39ec:	add	x3, x19, #0xc8
    39f0:	add	x0, x19, #0x158
    39f4:	mov	x1, #0x0                   	// #0
    39f8:	cbz	x21, 3898 <elf_fill@@ELFUTILS_1.0+0x248>
    39fc:	nop
    3a00:	stp	x1, x19, [x0]
    3a04:	add	x1, x1, #0x1
    3a08:	cmp	x1, x21
    3a0c:	str	x3, [x0, #72]
    3a10:	add	x0, x0, #0xd0
    3a14:	b.ne	3a00 <elf_fill@@ELFUTILS_1.0+0x3b0>  // b.any
    3a18:	b	3898 <elf_fill@@ELFUTILS_1.0+0x248>
    3a1c:	ldp	x7, x1, [x20, #32]
    3a20:	stp	x7, x1, [sp, #160]
    3a24:	ldr	w0, [x20, #48]
    3a28:	str	w0, [sp, #176]
    3a2c:	add	x19, sp, #0x80
    3a30:	rev16	w0, w0
    3a34:	strh	w0, [sp, #176]
    3a38:	ldp	x4, x5, [x20]
    3a3c:	rev	w7, w7
    3a40:	ldp	x2, x3, [x20, #16]
    3a44:	and	w8, w0, #0xffff
    3a48:	stp	x4, x5, [sp, #128]
    3a4c:	stp	x2, x3, [sp, #144]
    3a50:	str	w7, [sp, #160]
    3a54:	b	3a6c <elf_fill@@ELFUTILS_1.0+0x41c>
    3a58:	tst	x20, #0x3
    3a5c:	b.ne	3cd4 <elf_fill@@ELFUTILS_1.0+0x684>  // b.any
    3a60:	ldrh	w8, [x20, #48]
    3a64:	mov	x19, x20
    3a68:	ldr	w7, [x20, #32]
    3a6c:	mov	w0, w7
    3a70:	and	x28, x8, #0xffff
    3a74:	cbz	w8, 3dcc <elf_fill@@ELFUTILS_1.0+0x77c>
    3a78:	cmp	x23, x0
    3a7c:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    3a80:	add	x1, x28, x28, lsl #2
    3a84:	sub	x0, x23, x0
    3a88:	cmp	x0, x1, lsl #3
    3a8c:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    3a90:	b	3904 <elf_fill@@ELFUTILS_1.0+0x2b4>
    3a94:	ldp	x27, x28, [sp, #80]
    3a98:	mov	w0, #0xa                   	// #10
    3a9c:	mov	x19, #0x0                   	// #0
    3aa0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3aa4:	mov	x0, x19
    3aa8:	ldp	x19, x20, [sp, #16]
    3aac:	ldp	x25, x26, [sp, #64]
    3ab0:	ldp	x29, x30, [sp], #192
    3ab4:	ret
    3ab8:	tst	x2, #0x7
    3abc:	b.ne	3be0 <elf_fill@@ELFUTILS_1.0+0x590>  // b.any
    3ac0:	str	x2, [x19, #72]
    3ac4:	ldr	x0, [x2, #40]
    3ac8:	b	3860 <elf_fill@@ELFUTILS_1.0+0x210>
    3acc:	ldp	x0, x1, [x20]
    3ad0:	stp	x0, x1, [x19, #136]
    3ad4:	add	x4, x19, #0x88
    3ad8:	ldp	x0, x1, [x20, #16]
    3adc:	stp	x0, x1, [x19, #152]
    3ae0:	ldrb	w3, [x20, #5]
    3ae4:	ldp	x0, x1, [x20, #32]
    3ae8:	stp	x0, x1, [x19, #168]
    3aec:	mov	x5, x4
    3af0:	ldp	x0, x1, [x20, #48]
    3af4:	str	x4, [x19, #72]
    3af8:	stp	x0, x1, [x19, #184]
    3afc:	cmp	w3, #0x1
    3b00:	b.eq	386c <elf_fill@@ELFUTILS_1.0+0x21c>  // b.none
    3b04:	b	37c4 <elf_fill@@ELFUTILS_1.0+0x174>
    3b08:	add	x2, x2, x0
    3b0c:	ands	x4, x2, #0x7
    3b10:	b.ne	386c <elf_fill@@ELFUTILS_1.0+0x21c>  // b.any
    3b14:	cmp	x21, #0x0
    3b18:	ccmp	x23, x0, #0x2, ne  // ne = any
    3b1c:	b.ls	3e08 <elf_fill@@ELFUTILS_1.0+0x7b8>  // b.plast
    3b20:	sub	x0, x23, x0
    3b24:	cmp	x0, x21, lsl #6
    3b28:	b.cc	3e08 <elf_fill@@ELFUTILS_1.0+0x7b8>  // b.lo, b.ul, b.last
    3b2c:	str	x2, [x19, #80]
    3b30:	add	x3, x19, #0xc8
    3b34:	cbz	x21, 3898 <elf_fill@@ELFUTILS_1.0+0x248>
    3b38:	add	x0, x19, #0x154
    3b3c:	mov	w7, #0xffffffff            	// #-1
    3b40:	b	3b64 <elf_fill@@ELFUTILS_1.0+0x514>
    3b44:	ldr	w1, [x0]
    3b48:	add	x4, x4, #0x1
    3b4c:	add	x2, x2, #0x40
    3b50:	cmp	x4, x21
    3b54:	cbnz	w1, 3b5c <elf_fill@@ELFUTILS_1.0+0x50c>
    3b58:	str	w7, [x0]
    3b5c:	add	x0, x0, #0xd0
    3b60:	b.eq	3898 <elf_fill@@ELFUTILS_1.0+0x248>  // b.none
    3b64:	ldr	x5, [x2, #24]
    3b68:	stur	x4, [x0, #4]
    3b6c:	stur	x19, [x0, #12]
    3b70:	stur	x2, [x0, #20]
    3b74:	add	x1, x5, x25
    3b78:	add	x1, x22, x1
    3b7c:	sub	x6, x23, x5
    3b80:	cmp	x5, x23
    3b84:	b.cs	3b9c <elf_fill@@ELFUTILS_1.0+0x54c>  // b.hs, b.nlast
    3b88:	ldr	x5, [x2, #32]
    3b8c:	cmp	x5, x6
    3b90:	b.hi	3b9c <elf_fill@@ELFUTILS_1.0+0x54c>  // b.pmore
    3b94:	stur	x1, [x0, #36]
    3b98:	stur	x1, [x0, #44]
    3b9c:	ldr	w1, [x2, #4]
    3ba0:	stur	x3, [x0, #76]
    3ba4:	cmp	w1, #0x12
    3ba8:	b.ne	3b44 <elf_fill@@ELFUTILS_1.0+0x4f4>  // b.any
    3bac:	ldr	w1, [x2, #40]
    3bb0:	cmp	x1, x21
    3bb4:	b.cs	3b44 <elf_fill@@ELFUTILS_1.0+0x4f4>  // b.hs, b.nlast
    3bb8:	add	x5, x1, x1, lsl #1
    3bbc:	add	x1, x1, x5, lsl #2
    3bc0:	add	x1, x19, x1, lsl #4
    3bc4:	str	w4, [x1, #340]
    3bc8:	b	3b44 <elf_fill@@ELFUTILS_1.0+0x4f4>
    3bcc:	tst	x2, #0x3
    3bd0:	b.ne	3ca4 <elf_fill@@ELFUTILS_1.0+0x654>  // b.any
    3bd4:	ldr	w0, [x2, #32]
    3bd8:	str	x2, [x19, #72]
    3bdc:	b	39e0 <elf_fill@@ELFUTILS_1.0+0x390>
    3be0:	ldp	x0, x1, [x20]
    3be4:	stp	x0, x1, [x19, #136]
    3be8:	add	x4, x19, #0x88
    3bec:	ldp	x0, x1, [x20, #16]
    3bf0:	stp	x0, x1, [x19, #152]
    3bf4:	mov	x5, x4
    3bf8:	ldp	x0, x1, [x20, #32]
    3bfc:	stp	x0, x1, [x19, #168]
    3c00:	ldp	x0, x1, [x20, #48]
    3c04:	str	x4, [x19, #72]
    3c08:	stp	x0, x1, [x19, #184]
    3c0c:	b	385c <elf_fill@@ELFUTILS_1.0+0x20c>
    3c10:	cbz	x0, 3720 <elf_fill@@ELFUTILS_1.0+0xd0>
    3c14:	cmp	x0, x23
    3c18:	b.cs	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.hs, b.nlast
    3c1c:	add	x1, x0, #0x40
    3c20:	cmp	x23, x1
    3c24:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    3c28:	cbz	x22, 3e38 <elf_fill@@ELFUTILS_1.0+0x7e8>
    3c2c:	add	x0, x22, x0
    3c30:	cmp	w6, #0x1
    3c34:	add	x1, x0, x25
    3c38:	ldr	x28, [x1, #32]
    3c3c:	str	x28, [sp, #120]
    3c40:	b.eq	3e2c <elf_fill@@ELFUTILS_1.0+0x7dc>  // b.none
    3c44:	cmp	w6, #0x1
    3c48:	b.eq	3c54 <elf_fill@@ELFUTILS_1.0+0x604>  // b.none
    3c4c:	rev	x28, x28
    3c50:	str	x28, [sp, #120]
    3c54:	mov	x0, #0xffffffff            	// #4294967295
    3c58:	cmp	x28, x0
    3c5c:	b.hi	3e10 <elf_fill@@ELFUTILS_1.0+0x7c0>  // b.pmore
    3c60:	ldr	x0, [x21, #40]
    3c64:	b	3718 <elf_fill@@ELFUTILS_1.0+0xc8>
    3c68:	ldp	x0, x1, [x20]
    3c6c:	stp	x0, x1, [x19, #136]
    3c70:	ldr	w6, [x20, #48]
    3c74:	ldp	x0, x1, [x20, #16]
    3c78:	stp	x0, x1, [x19, #152]
    3c7c:	add	x4, x19, #0x88
    3c80:	ldp	x0, x1, [x20, #32]
    3c84:	str	x4, [x19, #72]
    3c88:	ldrb	w3, [x20, #5]
    3c8c:	mov	x5, x4
    3c90:	stp	x0, x1, [x19, #168]
    3c94:	cmp	w3, #0x1
    3c98:	str	w6, [x19, #184]
    3c9c:	b.eq	39ec <elf_fill@@ELFUTILS_1.0+0x39c>  // b.none
    3ca0:	b	394c <elf_fill@@ELFUTILS_1.0+0x2fc>
    3ca4:	ldp	x0, x1, [x20]
    3ca8:	stp	x0, x1, [x19, #136]
    3cac:	add	x4, x19, #0x88
    3cb0:	ldp	x0, x1, [x20, #16]
    3cb4:	stp	x0, x1, [x19, #152]
    3cb8:	ldr	w6, [x20, #48]
    3cbc:	ldp	x0, x1, [x20, #32]
    3cc0:	mov	x5, x4
    3cc4:	str	x4, [x19, #72]
    3cc8:	stp	x0, x1, [x19, #168]
    3ccc:	str	w6, [x19, #184]
    3cd0:	b	39dc <elf_fill@@ELFUTILS_1.0+0x38c>
    3cd4:	ldr	w4, [x20, #48]
    3cd8:	add	x19, sp, #0x80
    3cdc:	ldp	x0, x1, [x20]
    3ce0:	and	w8, w4, #0xffff
    3ce4:	ldp	x2, x3, [x20, #16]
    3ce8:	stp	x0, x1, [sp, #128]
    3cec:	ldp	x7, x5, [x20, #32]
    3cf0:	stp	x2, x3, [sp, #144]
    3cf4:	stp	x7, x5, [sp, #160]
    3cf8:	str	w4, [sp, #176]
    3cfc:	b	3a6c <elf_fill@@ELFUTILS_1.0+0x41c>
    3d00:	mov	w0, w0
    3d04:	add	x2, x2, x0
    3d08:	ands	x4, x2, #0x3
    3d0c:	b.ne	39ec <elf_fill@@ELFUTILS_1.0+0x39c>  // b.any
    3d10:	cmp	x21, #0x0
    3d14:	ccmp	x0, x23, #0x0, ne  // ne = any
    3d18:	b.cs	3e08 <elf_fill@@ELFUTILS_1.0+0x7b8>  // b.hs, b.nlast
    3d1c:	add	x1, x21, x21, lsl #2
    3d20:	sub	x0, x23, x0
    3d24:	cmp	x0, x1, lsl #3
    3d28:	b.cc	3e08 <elf_fill@@ELFUTILS_1.0+0x7b8>  // b.lo, b.ul, b.last
    3d2c:	str	x2, [x19, #80]
    3d30:	add	x3, x19, #0xc8
    3d34:	cbz	x21, 3898 <elf_fill@@ELFUTILS_1.0+0x248>
    3d38:	add	x0, x19, #0x154
    3d3c:	mov	w7, #0xffffffff            	// #-1
    3d40:	b	3d64 <elf_fill@@ELFUTILS_1.0+0x714>
    3d44:	ldr	w1, [x0]
    3d48:	add	x4, x4, #0x1
    3d4c:	add	x2, x2, #0x28
    3d50:	cmp	x4, x21
    3d54:	cbnz	w1, 3d5c <elf_fill@@ELFUTILS_1.0+0x70c>
    3d58:	str	w7, [x0]
    3d5c:	add	x0, x0, #0xd0
    3d60:	b.eq	3898 <elf_fill@@ELFUTILS_1.0+0x248>  // b.none
    3d64:	ldr	w5, [x2, #16]
    3d68:	stur	x4, [x0, #4]
    3d6c:	stur	x19, [x0, #12]
    3d70:	add	x1, x5, x25
    3d74:	stur	x2, [x0, #20]
    3d78:	add	x1, x22, x1
    3d7c:	sub	x6, x23, x5
    3d80:	cmp	x5, x23
    3d84:	b.cs	3d9c <elf_fill@@ELFUTILS_1.0+0x74c>  // b.hs, b.nlast
    3d88:	ldr	w5, [x2, #20]
    3d8c:	cmp	x5, x6
    3d90:	b.hi	3d9c <elf_fill@@ELFUTILS_1.0+0x74c>  // b.pmore
    3d94:	stur	x1, [x0, #36]
    3d98:	stur	x1, [x0, #44]
    3d9c:	ldr	w1, [x2, #4]
    3da0:	stur	x3, [x0, #76]
    3da4:	cmp	w1, #0x12
    3da8:	b.ne	3d44 <elf_fill@@ELFUTILS_1.0+0x6f4>  // b.any
    3dac:	ldr	w1, [x2, #24]
    3db0:	cmp	x1, x21
    3db4:	b.cs	3d44 <elf_fill@@ELFUTILS_1.0+0x6f4>  // b.hs, b.nlast
    3db8:	add	x5, x1, x1, lsl #1
    3dbc:	add	x1, x1, x5, lsl #2
    3dc0:	add	x1, x19, x1, lsl #4
    3dc4:	str	w4, [x1, #340]
    3dc8:	b	3d44 <elf_fill@@ELFUTILS_1.0+0x6f4>
    3dcc:	cbz	w7, 3720 <elf_fill@@ELFUTILS_1.0+0xd0>
    3dd0:	cmp	x23, x0
    3dd4:	b.ls	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.plast
    3dd8:	sub	x1, x23, x0
    3ddc:	cmp	x1, #0x27
    3de0:	b.ls	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.plast
    3de4:	cbz	x22, 3eac <elf_fill@@ELFUTILS_1.0+0x85c>
    3de8:	add	x1, x22, x0
    3dec:	cmp	w6, #0x1
    3df0:	add	x2, x1, x25
    3df4:	ldr	w28, [x2, #20]
    3df8:	b.eq	3e00 <elf_fill@@ELFUTILS_1.0+0x7b0>  // b.none
    3dfc:	rev	w28, w28
    3e00:	mov	w28, w28
    3e04:	b	3a78 <elf_fill@@ELFUTILS_1.0+0x428>
    3e08:	mov	x0, x19
    3e0c:	bl	3200 <free@plt>
    3e10:	mov	w0, #0xa                   	// #10
    3e14:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3e18:	mov	x19, #0x0                   	// #0
    3e1c:	ldp	x21, x22, [sp, #32]
    3e20:	ldp	x23, x24, [sp, #48]
    3e24:	ldp	x27, x28, [sp, #80]
    3e28:	b	38a8 <elf_fill@@ELFUTILS_1.0+0x258>
    3e2c:	tst	x0, #0x7
    3e30:	b.ne	3c44 <elf_fill@@ELFUTILS_1.0+0x5f4>  // b.any
    3e34:	b	3c54 <elf_fill@@ELFUTILS_1.0+0x604>
    3e38:	add	x19, x25, #0x20
    3e3c:	add	x1, sp, #0x78
    3e40:	add	x0, x19, x0
    3e44:	mov	x28, #0x0                   	// #0
    3e48:	mov	x19, x0
    3e4c:	stp	x1, x0, [sp, #96]
    3e50:	mov	x0, #0x8                   	// #8
    3e54:	sub	x2, x0, x28
    3e58:	mov	x3, x19
    3e5c:	ldr	x0, [sp, #96]
    3e60:	add	x1, x0, x28
    3e64:	mov	w0, w26
    3e68:	bl	3250 <pread@plt>
    3e6c:	cmn	x0, #0x1
    3e70:	b.eq	3e94 <elf_fill@@ELFUTILS_1.0+0x844>  // b.none
    3e74:	add	x28, x28, x0
    3e78:	cmp	x0, #0x0
    3e7c:	b.le	3f48 <elf_fill@@ELFUTILS_1.0+0x8f8>
    3e80:	cmp	x28, #0x7
    3e84:	b.gt	3f34 <elf_fill@@ELFUTILS_1.0+0x8e4>
    3e88:	ldr	x0, [sp, #104]
    3e8c:	add	x19, x0, x28
    3e90:	b	3e50 <elf_fill@@ELFUTILS_1.0+0x800>
    3e94:	bl	3340 <__errno_location@plt>
    3e98:	ldr	w0, [x0]
    3e9c:	cmp	w0, #0x4
    3ea0:	b.eq	3e50 <elf_fill@@ELFUTILS_1.0+0x800>  // b.none
    3ea4:	mov	w0, #0x9                   	// #9
    3ea8:	b	3e14 <elf_fill@@ELFUTILS_1.0+0x7c4>
    3eac:	add	x0, x0, x25
    3eb0:	add	x1, sp, #0x78
    3eb4:	add	x0, x0, #0x14
    3eb8:	mov	x21, #0x0                   	// #0
    3ebc:	mov	x28, x0
    3ec0:	stp	x1, x0, [sp, #96]
    3ec4:	mov	x0, #0x4                   	// #4
    3ec8:	sub	x2, x0, x21
    3ecc:	mov	x3, x28
    3ed0:	ldr	x0, [sp, #96]
    3ed4:	add	x1, x0, x21
    3ed8:	mov	w0, w26
    3edc:	bl	3250 <pread@plt>
    3ee0:	cmn	x0, #0x1
    3ee4:	b.eq	3f08 <elf_fill@@ELFUTILS_1.0+0x8b8>  // b.none
    3ee8:	add	x21, x21, x0
    3eec:	cmp	x0, #0x0
    3ef0:	b.le	3f78 <elf_fill@@ELFUTILS_1.0+0x928>
    3ef4:	cmp	x21, #0x3
    3ef8:	b.gt	3f54 <elf_fill@@ELFUTILS_1.0+0x904>
    3efc:	ldr	x0, [sp, #104]
    3f00:	add	x28, x0, x21
    3f04:	b	3ec4 <elf_fill@@ELFUTILS_1.0+0x874>
    3f08:	bl	3340 <__errno_location@plt>
    3f0c:	ldr	w0, [x0]
    3f10:	cmp	w0, #0x4
    3f14:	b.eq	3ec4 <elf_fill@@ELFUTILS_1.0+0x874>  // b.none
    3f18:	mov	w0, #0x9                   	// #9
    3f1c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3f20:	mov	x19, #0x0                   	// #0
    3f24:	ldp	x21, x22, [sp, #32]
    3f28:	ldp	x23, x24, [sp, #48]
    3f2c:	ldp	x27, x28, [sp, #80]
    3f30:	b	38a8 <elf_fill@@ELFUTILS_1.0+0x258>
    3f34:	cmp	x28, #0x8
    3f38:	b.ne	3e10 <elf_fill@@ELFUTILS_1.0+0x7c0>  // b.any
    3f3c:	ldrb	w6, [x20, #5]
    3f40:	ldr	x28, [sp, #120]
    3f44:	b	3c44 <elf_fill@@ELFUTILS_1.0+0x5f4>
    3f48:	b.eq	3e10 <elf_fill@@ELFUTILS_1.0+0x7c0>  // b.none
    3f4c:	mov	w0, #0x9                   	// #9
    3f50:	b	3e14 <elf_fill@@ELFUTILS_1.0+0x7c4>
    3f54:	cmp	x21, #0x4
    3f58:	b.ne	3f7c <elf_fill@@ELFUTILS_1.0+0x92c>  // b.any
    3f5c:	ldrb	w6, [x20, #5]
    3f60:	ldr	w0, [x19, #32]
    3f64:	ldr	w28, [sp, #120]
    3f68:	cmp	w6, #0x1
    3f6c:	b.ne	3dfc <elf_fill@@ELFUTILS_1.0+0x7ac>  // b.any
    3f70:	mov	w28, w28
    3f74:	b	3a78 <elf_fill@@ELFUTILS_1.0+0x428>
    3f78:	b.ne	3f18 <elf_fill@@ELFUTILS_1.0+0x8c8>  // b.any
    3f7c:	mov	w0, #0xa                   	// #10
    3f80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3f84:	b	3f20 <elf_fill@@ELFUTILS_1.0+0x8d0>
    3f88:	mov	w0, #0x8                   	// #8
    3f8c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3f90:	ldp	x21, x22, [sp, #32]
    3f94:	ldp	x23, x24, [sp, #48]
    3f98:	ldp	x27, x28, [sp, #80]
    3f9c:	b	38a8 <elf_fill@@ELFUTILS_1.0+0x258>
    3fa0:	ldrh	w7, [x20, #60]
    3fa4:	mov	x21, x20
    3fa8:	ldr	x0, [x20, #40]
    3fac:	b	3710 <elf_fill@@ELFUTILS_1.0+0xc0>
    3fb0:	stp	x29, x30, [sp, #-64]!
    3fb4:	cmp	x3, #0x7
    3fb8:	mov	x29, sp
    3fbc:	stp	x19, x20, [sp, #16]
    3fc0:	mov	x19, x2
    3fc4:	mov	x20, x1
    3fc8:	stp	x21, x22, [sp, #32]
    3fcc:	mov	x21, x5
    3fd0:	mov	w22, w0
    3fd4:	stp	x23, x24, [sp, #48]
    3fd8:	mov	x24, x3
    3fdc:	mov	w23, w4
    3fe0:	b.hi	4020 <elf_fill@@ELFUTILS_1.0+0x9d0>  // b.pmore
    3fe4:	mov	x1, #0x108                 	// #264
    3fe8:	mov	x0, #0x1                   	// #1
    3fec:	bl	3140 <calloc@plt>
    3ff0:	cbz	x0, 40f4 <elf_fill@@ELFUTILS_1.0+0xaa4>
    3ff4:	mov	w1, #0x1                   	// #1
    3ff8:	stp	x20, x21, [x0]
    3ffc:	stp	wzr, w23, [x0, #24]
    4000:	str	w22, [x0, #36]
    4004:	stp	x19, x24, [x0, #40]
    4008:	str	w1, [x0, #60]
    400c:	ldp	x19, x20, [sp, #16]
    4010:	ldp	x21, x22, [sp, #32]
    4014:	ldp	x23, x24, [sp, #48]
    4018:	ldp	x29, x30, [sp], #64
    401c:	ret
    4020:	mov	x3, #0x3c21                	// #15393
    4024:	ldr	x4, [x1, x2]
    4028:	movk	x3, #0x7261, lsl #16
    402c:	movk	x3, #0x6863, lsl #32
    4030:	add	x2, x1, x2
    4034:	movk	x3, #0xa3e, lsl #48
    4038:	cmp	x4, x3
    403c:	b.eq	40a8 <elf_fill@@ELFUTILS_1.0+0xa58>  // b.none
    4040:	cmp	x24, #0xf
    4044:	b.ls	3fe4 <elf_fill@@ELFUTILS_1.0+0x994>  // b.plast
    4048:	ldr	w4, [x1, x19]
    404c:	mov	w3, #0x457f                	// #17791
    4050:	movk	w3, #0x464c, lsl #16
    4054:	cmp	w4, w3
    4058:	b.ne	3fe4 <elf_fill@@ELFUTILS_1.0+0x994>  // b.any
    405c:	ldrb	w3, [x2, #4]
    4060:	sub	w3, w3, #0x1
    4064:	cmp	w3, #0x1
    4068:	b.hi	3fe4 <elf_fill@@ELFUTILS_1.0+0x994>  // b.pmore
    406c:	ldrb	w3, [x2, #5]
    4070:	ldrb	w4, [x2, #6]
    4074:	sub	w3, w3, #0x1
    4078:	cmp	w3, #0x1
    407c:	ccmp	w4, #0x1, #0x0, ls  // ls = plast
    4080:	b.ne	3fe4 <elf_fill@@ELFUTILS_1.0+0x994>  // b.any
    4084:	mov	x6, x5
    4088:	mov	x4, x24
    408c:	mov	w5, w23
    4090:	mov	x3, x19
    4094:	ldp	x19, x20, [sp, #16]
    4098:	ldp	x21, x22, [sp, #32]
    409c:	ldp	x23, x24, [sp, #48]
    40a0:	ldp	x29, x30, [sp], #64
    40a4:	b	3660 <elf_fill@@ELFUTILS_1.0+0x10>
    40a8:	mov	x1, #0x108                 	// #264
    40ac:	mov	x0, #0x1                   	// #1
    40b0:	bl	3140 <calloc@plt>
    40b4:	cbz	x0, 40f4 <elf_fill@@ELFUTILS_1.0+0xaa4>
    40b8:	add	x3, x19, #0x8
    40bc:	mov	w1, #0x1                   	// #1
    40c0:	add	x2, x0, #0xf4
    40c4:	stp	x20, x21, [x0]
    40c8:	stp	w1, w23, [x0, #24]
    40cc:	str	w22, [x0, #36]
    40d0:	stp	x19, x24, [x0, #40]
    40d4:	str	w1, [x0, #60]
    40d8:	str	x3, [x0, #112]
    40dc:	str	x2, [x0, #160]
    40e0:	ldp	x19, x20, [sp, #16]
    40e4:	ldp	x21, x22, [sp, #32]
    40e8:	ldp	x23, x24, [sp, #48]
    40ec:	ldp	x29, x30, [sp], #64
    40f0:	ret
    40f4:	mov	w0, #0x8                   	// #8
    40f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    40fc:	mov	x0, #0x0                   	// #0
    4100:	b	400c <elf_fill@@ELFUTILS_1.0+0x9bc>
    4104:	nop
    4108:	stp	x29, x30, [sp, #-224]!
    410c:	cmn	x2, #0x1
    4110:	mov	x29, sp
    4114:	stp	x19, x20, [sp, #16]
    4118:	mov	x20, x2
    411c:	sub	w19, w3, #0x8
    4120:	stp	x21, x22, [sp, #32]
    4124:	mov	x21, x1
    4128:	mov	x22, x4
    412c:	stp	x23, x24, [sp, #48]
    4130:	mov	w23, w3
    4134:	mov	w24, w0
    4138:	cbz	x4, 4284 <elf_fill@@ELFUTILS_1.0+0xc34>
    413c:	b.eq	4444 <elf_fill@@ELFUTILS_1.0+0xdf4>  // b.none
    4140:	cmp	w19, #0x3
    4144:	b.hi	4188 <elf_fill@@ELFUTILS_1.0+0xb38>  // b.pmore
    4148:	ldr	x19, [x22]
    414c:	cbz	x19, 4188 <elf_fill@@ELFUTILS_1.0+0xb38>
    4150:	cmn	x19, #0x1
    4154:	b.eq	446c <elf_fill@@ELFUTILS_1.0+0xe1c>  // b.none
    4158:	mov	w4, w23
    415c:	mov	x2, x21
    4160:	mov	x5, x22
    4164:	mov	x3, x20
    4168:	mov	x1, x19
    416c:	bl	3fb0 <elf_fill@@ELFUTILS_1.0+0x960>
    4170:	cbz	x0, 43a4 <elf_fill@@ELFUTILS_1.0+0xd54>
    4174:	ldp	x19, x20, [sp, #16]
    4178:	ldp	x21, x22, [sp, #32]
    417c:	ldp	x23, x24, [sp, #48]
    4180:	ldp	x29, x30, [sp], #224
    4184:	ret
    4188:	cmp	x20, #0x40
    418c:	stp	x25, x26, [sp, #64]
    4190:	mov	x25, #0x40                  	// #64
    4194:	csel	x25, x20, x25, ls  // ls = plast
    4198:	mov	x26, x21
    419c:	stp	x27, x28, [sp, #80]
    41a0:	add	x28, sp, #0x60
    41a4:	mov	x27, x25
    41a8:	mov	x19, #0x0                   	// #0
    41ac:	add	x1, x28, x19
    41b0:	mov	x3, x26
    41b4:	mov	x2, x27
    41b8:	mov	w0, w24
    41bc:	bl	3250 <pread@plt>
    41c0:	cmn	x0, #0x1
    41c4:	mov	x1, x19
    41c8:	b.eq	420c <elf_fill@@ELFUTILS_1.0+0xbbc>  // b.none
    41cc:	cmp	x0, #0x0
    41d0:	b.le	4234 <elf_fill@@ELFUTILS_1.0+0xbe4>
    41d4:	add	x19, x19, x0
    41d8:	cmp	x25, x19
    41dc:	mov	x1, x19
    41e0:	b.ls	4238 <elf_fill@@ELFUTILS_1.0+0xbe8>  // b.plast
    41e4:	add	x26, x21, x19
    41e8:	sub	x27, x25, x19
    41ec:	add	x1, x28, x19
    41f0:	mov	x3, x26
    41f4:	mov	x2, x27
    41f8:	mov	w0, w24
    41fc:	bl	3250 <pread@plt>
    4200:	cmn	x0, #0x1
    4204:	mov	x1, x19
    4208:	b.ne	41cc <elf_fill@@ELFUTILS_1.0+0xb7c>  // b.any
    420c:	bl	3340 <__errno_location@plt>
    4210:	ldr	w0, [x0]
    4214:	cmp	w0, #0x4
    4218:	b.eq	41ac <elf_fill@@ELFUTILS_1.0+0xb5c>  // b.none
    421c:	mov	w0, #0x9                   	// #9
    4220:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4224:	mov	x0, #0x0                   	// #0
    4228:	ldp	x25, x26, [sp, #64]
    422c:	ldp	x27, x28, [sp, #80]
    4230:	b	4174 <elf_fill@@ELFUTILS_1.0+0xb24>
    4234:	b.ne	42fc <elf_fill@@ELFUTILS_1.0+0xcac>  // b.any
    4238:	cmp	x19, #0x7
    423c:	b.hi	4300 <elf_fill@@ELFUTILS_1.0+0xcb0>  // b.pmore
    4240:	mov	x1, #0x108                 	// #264
    4244:	mov	x0, #0x1                   	// #1
    4248:	bl	3140 <calloc@plt>
    424c:	cbz	x0, 4494 <elf_fill@@ELFUTILS_1.0+0xe44>
    4250:	mov	w1, #0x1                   	// #1
    4254:	ldp	x25, x26, [sp, #64]
    4258:	ldp	x27, x28, [sp, #80]
    425c:	stp	xzr, x22, [x0]
    4260:	stp	wzr, w23, [x0, #24]
    4264:	str	w24, [x0, #36]
    4268:	stp	x21, x20, [x0, #40]
    426c:	str	w1, [x0, #60]
    4270:	ldp	x19, x20, [sp, #16]
    4274:	ldp	x21, x22, [sp, #32]
    4278:	ldp	x23, x24, [sp, #48]
    427c:	ldp	x29, x30, [sp], #224
    4280:	ret
    4284:	b.eq	4424 <elf_fill@@ELFUTILS_1.0+0xdd4>  // b.none
    4288:	cmp	w19, #0x3
    428c:	b.hi	4188 <elf_fill@@ELFUTILS_1.0+0xb38>  // b.pmore
    4290:	cmp	w23, #0x8
    4294:	b.eq	4418 <elf_fill@@ELFUTILS_1.0+0xdc8>  // b.none
    4298:	cmp	w23, #0xb
    429c:	mov	w3, #0x2                   	// #2
    42a0:	csinc	w3, w3, wzr, eq  // eq = none
    42a4:	mov	w2, #0x3                   	// #3
    42a8:	mov	x5, x21
    42ac:	mov	w4, w24
    42b0:	mov	x1, x20
    42b4:	mov	x0, #0x0                   	// #0
    42b8:	bl	31e0 <mmap@plt>
    42bc:	mov	x19, x0
    42c0:	sub	x0, x0, #0x1
    42c4:	cmn	x0, #0x3
    42c8:	b.hi	4188 <elf_fill@@ELFUTILS_1.0+0xb38>  // b.pmore
    42cc:	mov	w4, w23
    42d0:	mov	x2, x21
    42d4:	mov	w0, w24
    42d8:	mov	x3, x20
    42dc:	mov	x1, x19
    42e0:	mov	x5, #0x0                   	// #0
    42e4:	bl	3fb0 <elf_fill@@ELFUTILS_1.0+0x960>
    42e8:	cbz	x0, 43b0 <elf_fill@@ELFUTILS_1.0+0xd60>
    42ec:	ldr	w1, [x0, #56]
    42f0:	orr	w1, w1, #0x40
    42f4:	str	w1, [x0, #56]
    42f8:	b	4174 <elf_fill@@ELFUTILS_1.0+0xb24>
    42fc:	mov	x1, x0
    4300:	mov	x0, #0x3c21                	// #15393
    4304:	ldr	x2, [sp, #96]
    4308:	movk	x0, #0x7261, lsl #16
    430c:	movk	x0, #0x6863, lsl #32
    4310:	movk	x0, #0xa3e, lsl #48
    4314:	cmp	x2, x0
    4318:	b.eq	43c4 <elf_fill@@ELFUTILS_1.0+0xd74>  // b.none
    431c:	cmp	x1, #0xf
    4320:	b.ls	4240 <elf_fill@@ELFUTILS_1.0+0xbf0>  // b.plast
    4324:	ldr	w2, [sp, #96]
    4328:	mov	w0, #0x457f                	// #17791
    432c:	movk	w0, #0x464c, lsl #16
    4330:	cmp	w2, w0
    4334:	b.ne	4240 <elf_fill@@ELFUTILS_1.0+0xbf0>  // b.any
    4338:	ldrb	w0, [sp, #100]
    433c:	sub	w2, w0, #0x1
    4340:	cmp	w2, #0x1
    4344:	b.hi	4240 <elf_fill@@ELFUTILS_1.0+0xbf0>  // b.pmore
    4348:	ldrb	w2, [sp, #101]
    434c:	ldrb	w3, [sp, #102]
    4350:	sub	w2, w2, #0x1
    4354:	cmp	w2, #0x1
    4358:	ccmp	w3, #0x1, #0x0, ls  // ls = plast
    435c:	b.ne	4240 <elf_fill@@ELFUTILS_1.0+0xbf0>  // b.any
    4360:	cmp	w0, #0x1
    4364:	mov	x2, #0x40                  	// #64
    4368:	mov	x0, #0x34                  	// #52
    436c:	csel	x0, x0, x2, eq  // eq = none
    4370:	cmp	x1, x0
    4374:	b.cc	4240 <elf_fill@@ELFUTILS_1.0+0xbf0>  // b.lo, b.ul, b.last
    4378:	mov	x2, x28
    437c:	mov	x6, x22
    4380:	mov	w5, w23
    4384:	mov	x4, x20
    4388:	mov	x3, x21
    438c:	mov	w0, w24
    4390:	mov	x1, #0x0                   	// #0
    4394:	bl	3660 <elf_fill@@ELFUTILS_1.0+0x10>
    4398:	ldp	x25, x26, [sp, #64]
    439c:	ldp	x27, x28, [sp, #80]
    43a0:	b	4174 <elf_fill@@ELFUTILS_1.0+0xb24>
    43a4:	ldr	x1, [x22]
    43a8:	cmp	x1, x19
    43ac:	b.eq	4174 <elf_fill@@ELFUTILS_1.0+0xb24>  // b.none
    43b0:	mov	x1, x20
    43b4:	mov	x0, x19
    43b8:	bl	32a0 <munmap@plt>
    43bc:	mov	x0, #0x0                   	// #0
    43c0:	b	4174 <elf_fill@@ELFUTILS_1.0+0xb24>
    43c4:	mov	x1, #0x108                 	// #264
    43c8:	mov	x0, #0x1                   	// #1
    43cc:	bl	3140 <calloc@plt>
    43d0:	cbz	x0, 4494 <elf_fill@@ELFUTILS_1.0+0xe44>
    43d4:	add	x3, x21, #0x8
    43d8:	mov	w1, #0x1                   	// #1
    43dc:	add	x2, x0, #0xf4
    43e0:	ldp	x25, x26, [sp, #64]
    43e4:	ldp	x27, x28, [sp, #80]
    43e8:	stp	xzr, x22, [x0]
    43ec:	stp	w1, w23, [x0, #24]
    43f0:	str	w24, [x0, #36]
    43f4:	stp	x21, x20, [x0, #40]
    43f8:	str	w1, [x0, #60]
    43fc:	str	x3, [x0, #112]
    4400:	str	x2, [x0, #160]
    4404:	ldp	x19, x20, [sp, #16]
    4408:	ldp	x21, x22, [sp, #32]
    440c:	ldp	x23, x24, [sp, #48]
    4410:	ldp	x29, x30, [sp], #224
    4414:	ret
    4418:	mov	w2, #0x1                   	// #1
    441c:	mov	w3, #0x2                   	// #2
    4420:	b	42a8 <elf_fill@@ELFUTILS_1.0+0xc58>
    4424:	mov	w1, w0
    4428:	add	x2, sp, #0x60
    442c:	mov	w0, #0x0                   	// #0
    4430:	bl	32f0 <__fxstat@plt>
    4434:	ldr	x1, [sp, #144]
    4438:	cmp	w0, #0x0
    443c:	csel	x20, x1, x20, eq  // eq = none
    4440:	b	4288 <elf_fill@@ELFUTILS_1.0+0xc38>
    4444:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4448:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    444c:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4450:	add	x3, x3, #0xc68
    4454:	add	x1, x1, #0xbc8
    4458:	add	x0, x0, #0xbd8
    445c:	mov	w2, #0x291                 	// #657
    4460:	stp	x25, x26, [sp, #64]
    4464:	stp	x27, x28, [sp, #80]
    4468:	bl	3330 <__assert_fail@plt>
    446c:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4470:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4474:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4478:	add	x3, x3, #0xc68
    447c:	add	x1, x1, #0xbc8
    4480:	add	x0, x0, #0xbf8
    4484:	mov	w2, #0x2ad                 	// #685
    4488:	stp	x25, x26, [sp, #64]
    448c:	stp	x27, x28, [sp, #80]
    4490:	bl	3330 <__assert_fail@plt>
    4494:	mov	w0, #0x8                   	// #8
    4498:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    449c:	mov	x0, #0x0                   	// #0
    44a0:	ldp	x25, x26, [sp, #64]
    44a4:	ldp	x27, x28, [sp, #80]
    44a8:	b	4174 <elf_fill@@ELFUTILS_1.0+0xb24>
    44ac:	nop
    44b0:	stp	x29, x30, [sp, #-192]!
    44b4:	mov	x29, sp
    44b8:	stp	x19, x20, [sp, #16]
    44bc:	mov	x20, x0
    44c0:	ldr	x19, [x0]
    44c4:	stp	x21, x22, [sp, #32]
    44c8:	ldr	x22, [x0, #112]
    44cc:	cbz	x19, 4590 <elf_fill@@ELFUTILS_1.0+0xf40>
    44d0:	ldp	x0, x1, [x0, #40]
    44d4:	add	x0, x0, x1
    44d8:	cmp	x22, x0
    44dc:	b.hi	461c <elf_fill@@ELFUTILS_1.0+0xfcc>  // b.pmore
    44e0:	sub	x0, x0, x22
    44e4:	cmp	x0, #0x3b
    44e8:	b.ls	461c <elf_fill@@ELFUTILS_1.0+0xfcc>  // b.plast
    44ec:	add	x19, x19, x22
    44f0:	ldrh	w0, [x19, #58]
    44f4:	cmp	w0, #0xa60
    44f8:	b.ne	491c <elf_fill@@ELFUTILS_1.0+0x12cc>  // b.any
    44fc:	add	x0, x20, #0xf4
    4500:	ldp	x2, x3, [x19]
    4504:	stp	x2, x3, [x0]
    4508:	strb	wzr, [x20, #260]
    450c:	ldrb	w0, [x19]
    4510:	cmp	w0, #0x2f
    4514:	b.ne	4638 <elf_fill@@ELFUTILS_1.0+0xfe8>  // b.any
    4518:	ldrb	w21, [x19, #1]
    451c:	cmp	w21, #0x20
    4520:	b.eq	481c <elf_fill@@ELFUTILS_1.0+0x11cc>  // b.none
    4524:	cmp	w21, #0x53
    4528:	b.eq	47bc <elf_fill@@ELFUTILS_1.0+0x116c>  // b.none
    452c:	cmp	w21, #0x2f
    4530:	b.ne	4548 <elf_fill@@ELFUTILS_1.0+0xef8>  // b.any
    4534:	ldr	x1, [x19]
    4538:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    453c:	movk	x0, #0x2f2f
    4540:	cmp	x1, x0
    4544:	b.eq	492c <elf_fill@@ELFUTILS_1.0+0x12dc>  // b.none
    4548:	bl	31d0 <__ctype_b_loc@plt>
    454c:	ubfiz	x21, x21, #1, #8
    4550:	ldr	x0, [x0]
    4554:	ldrh	w0, [x0, x21]
    4558:	tbz	w0, #11, 48d4 <elf_fill@@ELFUTILS_1.0+0x1284>
    455c:	ldr	x0, [x20, #96]
    4560:	cbz	x0, 4960 <elf_fill@@ELFUTILS_1.0+0x1310>
    4564:	mov	x1, #0x0                   	// #0
    4568:	add	x0, x19, #0x1
    456c:	mov	w2, #0xa                   	// #10
    4570:	bl	31f0 <strtol@plt>
    4574:	ldr	x1, [x20, #104]
    4578:	cmp	x1, x0
    457c:	b.ls	48d4 <elf_fill@@ELFUTILS_1.0+0x1284>  // b.plast
    4580:	ldr	x1, [x20, #96]
    4584:	add	x0, x1, x0
    4588:	str	x0, [x20, #120]
    458c:	b	465c <elf_fill@@ELFUTILS_1.0+0x100c>
    4590:	add	x19, x0, #0xa8
    4594:	stp	x25, x26, [sp, #64]
    4598:	ldr	w26, [x0, #36]
    459c:	stp	x23, x24, [sp, #48]
    45a0:	mov	x24, x19
    45a4:	mov	x23, x22
    45a8:	mov	x21, #0x0                   	// #0
    45ac:	mov	x25, #0x3c                  	// #60
    45b0:	mov	x3, x23
    45b4:	sub	x2, x25, x21
    45b8:	mov	x1, x24
    45bc:	mov	w0, w26
    45c0:	bl	3250 <pread@plt>
    45c4:	cmn	x0, #0x1
    45c8:	b.eq	4604 <elf_fill@@ELFUTILS_1.0+0xfb4>  // b.none
    45cc:	add	x21, x21, x0
    45d0:	cmp	x0, #0x0
    45d4:	b.le	4614 <elf_fill@@ELFUTILS_1.0+0xfc4>
    45d8:	cmp	x21, #0x3b
    45dc:	b.gt	4808 <elf_fill@@ELFUTILS_1.0+0x11b8>
    45e0:	add	x23, x21, x22
    45e4:	add	x24, x19, x21
    45e8:	mov	x3, x23
    45ec:	sub	x2, x25, x21
    45f0:	mov	x1, x24
    45f4:	mov	w0, w26
    45f8:	bl	3250 <pread@plt>
    45fc:	cmn	x0, #0x1
    4600:	b.ne	45cc <elf_fill@@ELFUTILS_1.0+0xf7c>  // b.any
    4604:	bl	3340 <__errno_location@plt>
    4608:	ldr	w0, [x0]
    460c:	cmp	w0, #0x4
    4610:	b.eq	45b0 <elf_fill@@ELFUTILS_1.0+0xf60>  // b.none
    4614:	ldp	x23, x24, [sp, #48]
    4618:	ldp	x25, x26, [sp, #64]
    461c:	mov	w0, #0xe                   	// #14
    4620:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4624:	mov	w0, #0xffffffff            	// #-1
    4628:	ldp	x19, x20, [sp, #16]
    462c:	ldp	x21, x22, [sp, #32]
    4630:	ldp	x29, x30, [sp], #192
    4634:	ret
    4638:	add	x21, x20, #0xe4
    463c:	mov	x1, x19
    4640:	mov	x0, x21
    4644:	mov	x3, #0x10                  	// #16
    4648:	mov	w2, #0x2f                  	// #47
    464c:	bl	3060 <memccpy@plt>
    4650:	cbz	x0, 48f0 <elf_fill@@ELFUTILS_1.0+0x12a0>
    4654:	sturb	wzr, [x0, #-1]
    4658:	str	x21, [x20, #120]
    465c:	ldrb	w0, [x19, #48]
    4660:	cmp	w0, #0x20
    4664:	b.eq	48d4 <elf_fill@@ELFUTILS_1.0+0x1284>  // b.none
    4668:	ldrb	w1, [x19, #27]
    466c:	add	x0, x19, #0x10
    4670:	cmp	w1, #0x20
    4674:	b.eq	4690 <elf_fill@@ELFUTILS_1.0+0x1040>  // b.none
    4678:	ldr	x1, [x19, #16]
    467c:	str	x1, [sp, #128]
    4680:	ldr	w1, [x0, #8]
    4684:	add	x0, sp, #0x80
    4688:	str	w1, [sp, #136]
    468c:	strb	wzr, [sp, #140]
    4690:	add	x21, x20, #0x78
    4694:	mov	x1, #0x0                   	// #0
    4698:	mov	w2, #0xa                   	// #10
    469c:	bl	31f0 <strtol@plt>
    46a0:	str	x0, [x21, #8]
    46a4:	add	x0, x19, #0x1c
    46a8:	ldrb	w1, [x19, #33]
    46ac:	cmp	w1, #0x20
    46b0:	b.eq	46cc <elf_fill@@ELFUTILS_1.0+0x107c>  // b.none
    46b4:	ldr	w1, [x19, #28]
    46b8:	str	w1, [sp, #128]
    46bc:	ldrh	w1, [x0, #4]
    46c0:	add	x0, sp, #0x80
    46c4:	strh	w1, [sp, #132]
    46c8:	strb	wzr, [sp, #134]
    46cc:	mov	x1, #0x0                   	// #0
    46d0:	mov	w2, #0xa                   	// #10
    46d4:	bl	31f0 <strtol@plt>
    46d8:	str	w0, [x21, #16]
    46dc:	add	x0, x19, #0x22
    46e0:	ldrb	w1, [x19, #39]
    46e4:	cmp	w1, #0x20
    46e8:	b.eq	4704 <elf_fill@@ELFUTILS_1.0+0x10b4>  // b.none
    46ec:	ldur	w1, [x19, #34]
    46f0:	str	w1, [sp, #128]
    46f4:	ldrh	w1, [x0, #4]
    46f8:	add	x0, sp, #0x80
    46fc:	strh	w1, [sp, #132]
    4700:	strb	wzr, [sp, #134]
    4704:	mov	w2, #0xa                   	// #10
    4708:	mov	x1, #0x0                   	// #0
    470c:	bl	31f0 <strtol@plt>
    4710:	str	w0, [x21, #20]
    4714:	ldrb	w0, [x19, #47]
    4718:	cmp	w0, #0x20
    471c:	b.eq	47b4 <elf_fill@@ELFUTILS_1.0+0x1164>  // b.none
    4720:	add	x0, sp, #0x80
    4724:	ldr	x1, [x19, #40]
    4728:	str	x1, [sp, #128]
    472c:	strb	wzr, [sp, #136]
    4730:	mov	x1, #0x0                   	// #0
    4734:	mov	w2, #0xa                   	// #10
    4738:	bl	31f0 <strtol@plt>
    473c:	str	w0, [x21, #24]
    4740:	add	x0, x19, #0x30
    4744:	ldrb	w1, [x19, #57]
    4748:	cmp	w1, #0x20
    474c:	b.eq	4768 <elf_fill@@ELFUTILS_1.0+0x1118>  // b.none
    4750:	ldr	x1, [x19, #48]
    4754:	str	x1, [sp, #128]
    4758:	ldrh	w1, [x0, #8]
    475c:	add	x0, sp, #0x80
    4760:	strh	w1, [sp, #136]
    4764:	strb	wzr, [sp, #138]
    4768:	mov	w2, #0xa                   	// #10
    476c:	mov	x1, #0x0                   	// #0
    4770:	bl	31f0 <strtol@plt>
    4774:	str	x0, [x21, #32]
    4778:	mov	x2, x0
    477c:	tbnz	x0, #63, 48d4 <elf_fill@@ELFUTILS_1.0+0x1284>
    4780:	ldp	x1, x3, [x20, #40]
    4784:	mov	w0, #0x0                   	// #0
    4788:	ldr	x4, [x20, #112]
    478c:	sub	x3, x3, #0x3c
    4790:	sub	x1, x1, x4
    4794:	add	x1, x1, x3
    4798:	cmp	x2, x1
    479c:	b.ls	4628 <elf_fill@@ELFUTILS_1.0+0xfd8>  // b.plast
    47a0:	str	x1, [x21, #32]
    47a4:	ldp	x19, x20, [sp, #16]
    47a8:	ldp	x21, x22, [sp, #32]
    47ac:	ldp	x29, x30, [sp], #192
    47b0:	ret
    47b4:	add	x0, x19, #0x28
    47b8:	b	4730 <elf_fill@@ELFUTILS_1.0+0x10e0>
    47bc:	mov	x0, #0x532f                	// #21295
    47c0:	ldr	x1, [x19]
    47c4:	movk	x0, #0x4d59, lsl #16
    47c8:	movk	x0, #0x3436, lsl #32
    47cc:	movk	x0, #0x202f, lsl #48
    47d0:	cmp	x1, x0
    47d4:	b.ne	4548 <elf_fill@@ELFUTILS_1.0+0xef8>  // b.any
    47d8:	ldr	x1, [x19, #8]
    47dc:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    47e0:	cmp	x1, x0
    47e4:	b.ne	4548 <elf_fill@@ELFUTILS_1.0+0xef8>  // b.any
    47e8:	mov	x0, #0x532f                	// #21295
    47ec:	add	x1, x20, #0xe4
    47f0:	movk	x0, #0x4d59, lsl #16
    47f4:	str	x1, [x20, #120]
    47f8:	movk	x0, #0x3436, lsl #32
    47fc:	movk	x0, #0x2f, lsl #48
    4800:	stur	x0, [x20, #228]
    4804:	b	465c <elf_fill@@ELFUTILS_1.0+0x100c>
    4808:	cmp	x21, #0x3c
    480c:	b.ne	4614 <elf_fill@@ELFUTILS_1.0+0xfc4>  // b.any
    4810:	ldp	x23, x24, [sp, #48]
    4814:	ldp	x25, x26, [sp, #64]
    4818:	b	44f0 <elf_fill@@ELFUTILS_1.0+0xea0>
    481c:	ldr	x2, [x19]
    4820:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    4824:	movk	x1, #0x202f
    4828:	cmp	x2, x1
    482c:	b.ne	4548 <elf_fill@@ELFUTILS_1.0+0xef8>  // b.any
    4830:	ldr	x2, [x19, #8]
    4834:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    4838:	cmp	x2, x1
    483c:	b.ne	4548 <elf_fill@@ELFUTILS_1.0+0xef8>  // b.any
    4840:	add	x1, x20, #0xe4
    4844:	str	x1, [x20, #120]
    4848:	strh	w0, [x20, #228]
    484c:	b	465c <elf_fill@@ELFUTILS_1.0+0x100c>
    4850:	ldr	x22, [x20, #40]
    4854:	mov	x27, #0x0                   	// #0
    4858:	ldr	w25, [x20, #36]
    485c:	mov	x24, #0x3c                  	// #60
    4860:	add	x22, x21, x22
    4864:	mov	x28, x22
    4868:	mov	x3, x28
    486c:	sub	x2, x24, x27
    4870:	add	x1, x23, x27
    4874:	mov	w0, w25
    4878:	bl	3250 <pread@plt>
    487c:	cmn	x0, #0x1
    4880:	b.eq	48b8 <elf_fill@@ELFUTILS_1.0+0x1268>  // b.none
    4884:	add	x27, x27, x0
    4888:	cmp	x0, #0x0
    488c:	b.le	48c8 <elf_fill@@ELFUTILS_1.0+0x1278>
    4890:	cmp	x27, #0x3b
    4894:	b.gt	4a9c <elf_fill@@ELFUTILS_1.0+0x144c>
    4898:	add	x28, x22, x27
    489c:	sub	x2, x24, x27
    48a0:	mov	x3, x28
    48a4:	add	x1, x23, x27
    48a8:	mov	w0, w25
    48ac:	bl	3250 <pread@plt>
    48b0:	cmn	x0, #0x1
    48b4:	b.ne	4884 <elf_fill@@ELFUTILS_1.0+0x1234>  // b.any
    48b8:	bl	3340 <__errno_location@plt>
    48bc:	ldr	w0, [x0]
    48c0:	cmp	w0, #0x4
    48c4:	b.eq	4868 <elf_fill@@ELFUTILS_1.0+0x1218>  // b.none
    48c8:	ldp	x23, x24, [sp, #48]
    48cc:	ldp	x25, x26, [sp, #64]
    48d0:	ldp	x27, x28, [sp, #80]
    48d4:	mov	w0, #0x10                  	// #16
    48d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    48dc:	mov	w0, #0xffffffff            	// #-1
    48e0:	ldp	x19, x20, [sp, #16]
    48e4:	ldp	x21, x22, [sp, #32]
    48e8:	ldp	x29, x30, [sp], #192
    48ec:	ret
    48f0:	add	x0, x20, #0xf2
    48f4:	add	x2, x20, #0xe3
    48f8:	strb	wzr, [x20, #243]
    48fc:	nop
    4900:	ldrb	w1, [x0]
    4904:	cmp	w1, #0x20
    4908:	b.ne	4658 <elf_fill@@ELFUTILS_1.0+0x1008>  // b.any
    490c:	strb	wzr, [x0], #-1
    4910:	cmp	x2, x0
    4914:	b.ne	4900 <elf_fill@@ELFUTILS_1.0+0x12b0>  // b.any
    4918:	b	4658 <elf_fill@@ELFUTILS_1.0+0x1008>
    491c:	mov	w0, #0xf                   	// #15
    4920:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4924:	mov	w0, #0xffffffff            	// #-1
    4928:	b	4628 <elf_fill@@ELFUTILS_1.0+0xfd8>
    492c:	ldr	x1, [x19, #8]
    4930:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    4934:	cmp	x1, x0
    4938:	b.ne	4548 <elf_fill@@ELFUTILS_1.0+0xef8>  // b.any
    493c:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4940:	add	x0, x0, #0xc60
    4944:	add	x1, x20, #0xe4
    4948:	str	x1, [x20, #120]
    494c:	ldrh	w2, [x0]
    4950:	ldrb	w0, [x0, #2]
    4954:	strh	w2, [x20, #228]
    4958:	strb	w0, [x20, #230]
    495c:	b	465c <elf_fill@@ELFUTILS_1.0+0x100c>
    4960:	mov	x21, #0x8                   	// #8
    4964:	stp	x23, x24, [sp, #48]
    4968:	add	x23, sp, #0x80
    496c:	stp	x25, x26, [sp, #64]
    4970:	add	x26, sp, #0x70
    4974:	stp	x27, x28, [sp, #80]
    4978:	b	498c <elf_fill@@ELFUTILS_1.0+0x133c>
    497c:	add	x22, x22, #0x1
    4980:	add	x21, x21, #0x3c
    4984:	and	x22, x22, #0xfffffffffffffffe
    4988:	add	x21, x22, x21
    498c:	ldr	x24, [x20]
    4990:	cbz	x24, 4850 <elf_fill@@ELFUTILS_1.0+0x1200>
    4994:	ldr	x0, [x20, #48]
    4998:	cmp	x0, x21
    499c:	b.cc	48c8 <elf_fill@@ELFUTILS_1.0+0x1278>  // b.lo, b.ul, b.last
    49a0:	sub	x0, x0, x21
    49a4:	cmp	x0, #0x3b
    49a8:	b.ls	48c8 <elf_fill@@ELFUTILS_1.0+0x1278>  // b.plast
    49ac:	add	x24, x24, x21
    49b0:	ldrb	w1, [x24, #57]
    49b4:	add	x0, x24, #0x30
    49b8:	cmp	w1, #0x20
    49bc:	b.eq	49d8 <elf_fill@@ELFUTILS_1.0+0x1388>  // b.none
    49c0:	ldr	x1, [x24, #48]
    49c4:	str	x1, [x26]
    49c8:	ldrh	w1, [x0, #8]
    49cc:	mov	x0, x26
    49d0:	strh	w1, [x26, #8]
    49d4:	strb	wzr, [x26, #10]
    49d8:	mov	w2, #0xa                   	// #10
    49dc:	mov	x1, #0x0                   	// #0
    49e0:	bl	31f0 <strtol@plt>
    49e4:	mov	x22, x0
    49e8:	ldr	x1, [x24]
    49ec:	mov	x2, #0x2020202020202020    	// #2314885530818453536
    49f0:	movk	x2, #0x2f2f
    49f4:	cmp	x1, x2
    49f8:	b.ne	497c <elf_fill@@ELFUTILS_1.0+0x132c>  // b.any
    49fc:	ldr	x2, [x24, #8]
    4a00:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    4a04:	cmp	x2, x1
    4a08:	b.ne	497c <elf_fill@@ELFUTILS_1.0+0x132c>  // b.any
    4a0c:	ldr	x24, [x20]
    4a10:	cbz	x24, 4abc <elf_fill@@ELFUTILS_1.0+0x146c>
    4a14:	ldr	x1, [x20, #48]
    4a18:	sub	x1, x1, #0x3c
    4a1c:	sub	x1, x1, x21
    4a20:	cmp	x0, x1
    4a24:	b.hi	48c8 <elf_fill@@ELFUTILS_1.0+0x1278>  // b.pmore
    4a28:	bl	30c0 <malloc@plt>
    4a2c:	mov	x23, x0
    4a30:	cbz	x0, 48c8 <elf_fill@@ELFUTILS_1.0+0x1278>
    4a34:	add	x1, x21, #0x3c
    4a38:	mov	x2, x22
    4a3c:	add	x1, x24, x1
    4a40:	bl	3020 <memcpy@plt>
    4a44:	str	x0, [x20, #96]
    4a48:	add	x24, x23, x22
    4a4c:	str	x22, [x20, #104]
    4a50:	b	4a64 <elf_fill@@ELFUTILS_1.0+0x1414>
    4a54:	mov	x23, x0
    4a58:	strb	wzr, [x23], #1
    4a5c:	cmp	x24, x23
    4a60:	b.ls	4aac <elf_fill@@ELFUTILS_1.0+0x145c>  // b.plast
    4a64:	sub	x21, x24, x23
    4a68:	mov	x0, x23
    4a6c:	mov	x2, x21
    4a70:	mov	w1, #0x2f                  	// #47
    4a74:	bl	32c0 <memchr@plt>
    4a78:	cbnz	x0, 4a54 <elf_fill@@ELFUTILS_1.0+0x1404>
    4a7c:	mov	x0, x23
    4a80:	mov	x2, x21
    4a84:	mov	w1, #0x0                   	// #0
    4a88:	bl	3100 <memset@plt>
    4a8c:	ldp	x23, x24, [sp, #48]
    4a90:	ldp	x25, x26, [sp, #64]
    4a94:	ldp	x27, x28, [sp, #80]
    4a98:	b	4564 <elf_fill@@ELFUTILS_1.0+0xf14>
    4a9c:	cmp	x27, #0x3c
    4aa0:	b.ne	48c8 <elf_fill@@ELFUTILS_1.0+0x1278>  // b.any
    4aa4:	mov	x24, x23
    4aa8:	b	49b0 <elf_fill@@ELFUTILS_1.0+0x1360>
    4aac:	ldp	x23, x24, [sp, #48]
    4ab0:	ldp	x25, x26, [sp, #64]
    4ab4:	ldp	x27, x28, [sp, #80]
    4ab8:	b	4564 <elf_fill@@ELFUTILS_1.0+0xf14>
    4abc:	bl	30c0 <malloc@plt>
    4ac0:	mov	x23, x0
    4ac4:	cbz	x0, 48c8 <elf_fill@@ELFUTILS_1.0+0x1278>
    4ac8:	ldr	x27, [x20, #40]
    4acc:	mov	x25, x22
    4ad0:	ldr	w26, [x20, #36]
    4ad4:	mov	x24, x23
    4ad8:	add	x21, x21, x27
    4adc:	mov	x27, #0x0                   	// #0
    4ae0:	add	x0, x21, #0x3c
    4ae4:	str	x0, [sp, #104]
    4ae8:	mov	x28, x0
    4aec:	mov	x3, x28
    4af0:	mov	x2, x25
    4af4:	mov	x1, x24
    4af8:	mov	w0, w26
    4afc:	bl	3250 <pread@plt>
    4b00:	mov	x21, x0
    4b04:	cmn	x0, #0x1
    4b08:	b.eq	4b50 <elf_fill@@ELFUTILS_1.0+0x1500>  // b.none
    4b0c:	cmp	x0, #0x0
    4b10:	b.le	4b78 <elf_fill@@ELFUTILS_1.0+0x1528>
    4b14:	add	x27, x27, x0
    4b18:	cmp	x22, x27
    4b1c:	b.ls	4b70 <elf_fill@@ELFUTILS_1.0+0x1520>  // b.plast
    4b20:	ldr	x0, [sp, #104]
    4b24:	sub	x25, x22, x27
    4b28:	add	x24, x23, x27
    4b2c:	mov	x2, x25
    4b30:	add	x28, x0, x27
    4b34:	mov	x1, x24
    4b38:	mov	x3, x28
    4b3c:	mov	w0, w26
    4b40:	bl	3250 <pread@plt>
    4b44:	mov	x21, x0
    4b48:	cmn	x0, #0x1
    4b4c:	b.ne	4b0c <elf_fill@@ELFUTILS_1.0+0x14bc>  // b.any
    4b50:	bl	3340 <__errno_location@plt>
    4b54:	ldr	w0, [x0]
    4b58:	cmp	w0, #0x4
    4b5c:	b.eq	4aec <elf_fill@@ELFUTILS_1.0+0x149c>  // b.none
    4b60:	cmp	x22, x21
    4b64:	b.ne	4b80 <elf_fill@@ELFUTILS_1.0+0x1530>  // b.any
    4b68:	str	x23, [x20, #96]
    4b6c:	b	4a48 <elf_fill@@ELFUTILS_1.0+0x13f8>
    4b70:	mov	x21, x27
    4b74:	b	4b60 <elf_fill@@ELFUTILS_1.0+0x1510>
    4b78:	csel	x21, x0, x27, ne  // ne = any
    4b7c:	b	4b60 <elf_fill@@ELFUTILS_1.0+0x1510>
    4b80:	mov	x0, x23
    4b84:	bl	3200 <free@plt>
    4b88:	ldp	x23, x24, [sp, #48]
    4b8c:	ldp	x25, x26, [sp, #64]
    4b90:	ldp	x27, x28, [sp, #80]
    4b94:	str	xzr, [x20, #96]
    4b98:	b	48d4 <elf_fill@@ELFUTILS_1.0+0x1284>
    4b9c:	nop
    4ba0:	stp	x29, x30, [sp, #-48]!
    4ba4:	cmn	w0, #0x1
    4ba8:	mov	x29, sp
    4bac:	stp	x19, x20, [sp, #16]
    4bb0:	mov	w20, w0
    4bb4:	mov	x19, x2
    4bb8:	stp	x21, x22, [sp, #32]
    4bbc:	mov	w22, w1
    4bc0:	ldr	w0, [x2, #36]
    4bc4:	b.eq	4c68 <elf_fill@@ELFUTILS_1.0+0x1618>  // b.none
    4bc8:	cmp	w0, w20
    4bcc:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    4bd0:	b.ne	4c80 <elf_fill@@ELFUTILS_1.0+0x1630>  // b.any
    4bd4:	ldr	w0, [x19, #28]
    4bd8:	sub	w2, w0, #0x1
    4bdc:	sub	w0, w0, #0x8
    4be0:	cmp	w2, #0x2
    4be4:	ccmp	w0, #0x3, #0x0, hi  // hi = pmore
    4be8:	b.hi	4c90 <elf_fill@@ELFUTILS_1.0+0x1640>  // b.pmore
    4bec:	ldr	w0, [x19, #24]
    4bf0:	cmp	w0, #0x1
    4bf4:	b.ne	4c44 <elf_fill@@ELFUTILS_1.0+0x15f4>  // b.any
    4bf8:	ldr	x21, [x19, #120]
    4bfc:	cbz	x21, 4c70 <elf_fill@@ELFUTILS_1.0+0x1620>
    4c00:	ldr	x2, [x19, #152]
    4c04:	mov	w3, w22
    4c08:	ldr	x1, [x19, #112]
    4c0c:	mov	w0, w20
    4c10:	mov	x4, x19
    4c14:	add	x1, x1, #0x3c
    4c18:	bl	4108 <elf_fill@@ELFUTILS_1.0+0xab8>
    4c1c:	mov	x21, x0
    4c20:	cbz	x0, 4c30 <elf_fill@@ELFUTILS_1.0+0x15e0>
    4c24:	ldr	x0, [x19, #72]
    4c28:	str	x0, [x21, #16]
    4c2c:	str	x21, [x19, #72]
    4c30:	mov	x0, x21
    4c34:	ldp	x19, x20, [sp, #16]
    4c38:	ldp	x21, x22, [sp, #32]
    4c3c:	ldp	x29, x30, [sp], #48
    4c40:	ret
    4c44:	ldr	w0, [x19, #60]
    4c48:	mov	x21, x19
    4c4c:	add	w0, w0, #0x1
    4c50:	str	w0, [x19, #60]
    4c54:	mov	x0, x21
    4c58:	ldp	x19, x20, [sp, #16]
    4c5c:	ldp	x21, x22, [sp, #32]
    4c60:	ldp	x29, x30, [sp], #48
    4c64:	ret
    4c68:	mov	w20, w0
    4c6c:	b	4bd4 <elf_fill@@ELFUTILS_1.0+0x1584>
    4c70:	mov	x0, x19
    4c74:	bl	44b0 <elf_fill@@ELFUTILS_1.0+0xe60>
    4c78:	cbz	w0, 4c00 <elf_fill@@ELFUTILS_1.0+0x15b0>
    4c7c:	b	4c30 <elf_fill@@ELFUTILS_1.0+0x15e0>
    4c80:	mov	w0, #0x1c                  	// #28
    4c84:	mov	x21, #0x0                   	// #0
    4c88:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4c8c:	b	4c30 <elf_fill@@ELFUTILS_1.0+0x15e0>
    4c90:	mov	w0, #0xb                   	// #11
    4c94:	mov	x21, #0x0                   	// #0
    4c98:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4c9c:	b	4c30 <elf_fill@@ELFUTILS_1.0+0x15e0>

0000000000004ca0 <elf_begin@@ELFUTILS_1.0>:
    4ca0:	stp	x29, x30, [sp, #-48]!
    4ca4:	adrp	x3, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    4ca8:	mov	x29, sp
    4cac:	ldr	w3, [x3, #436]
    4cb0:	str	x21, [sp, #32]
    4cb4:	cmp	w3, #0x1
    4cb8:	b.ne	4e48 <elf_begin@@ELFUTILS_1.0+0x1a8>  // b.any
    4cbc:	stp	x19, x20, [sp, #16]
    4cc0:	mov	w19, w1
    4cc4:	mov	w20, w0
    4cc8:	cbz	x2, 4dd8 <elf_begin@@ELFUTILS_1.0+0x138>
    4ccc:	cmp	w1, #0x8
    4cd0:	b.eq	4dc0 <elf_begin@@ELFUTILS_1.0+0x120>  // b.none
    4cd4:	b.hi	4d4c <elf_begin@@ELFUTILS_1.0+0xac>  // b.pmore
    4cd8:	cmp	w1, #0x1
    4cdc:	b.eq	4dc0 <elf_begin@@ELFUTILS_1.0+0x120>  // b.none
    4ce0:	b.ls	4d8c <elf_begin@@ELFUTILS_1.0+0xec>  // b.plast
    4ce4:	cmp	w1, #0x2
    4ce8:	b.eq	4da8 <elf_begin@@ELFUTILS_1.0+0x108>  // b.none
    4cec:	cmp	w19, #0x3
    4cf0:	b.ne	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4cf4:	mov	x1, #0x928                 	// #2344
    4cf8:	mov	x0, #0x1                   	// #1
    4cfc:	bl	3140 <calloc@plt>
    4d00:	mov	x21, x0
    4d04:	cbz	x0, 4e74 <elf_begin@@ELFUTILS_1.0+0x1d4>
    4d08:	mov	w3, #0x3                   	// #3
    4d0c:	stp	w3, w19, [x21, #24]
    4d10:	str	w20, [x21, #36]
    4d14:	mov	w0, #0xa                   	// #10
    4d18:	ldp	x19, x20, [sp, #16]
    4d1c:	add	x1, x21, #0xc8
    4d20:	mov	x2, #0x100000001           	// #4294967297
    4d24:	stp	xzr, xzr, [x21]
    4d28:	stp	xzr, xzr, [x21, #40]
    4d2c:	str	x2, [x21, #56]
    4d30:	str	x1, [x21, #96]
    4d34:	str	w0, [x21, #112]
    4d38:	str	w0, [x21, #204]
    4d3c:	mov	x0, x21
    4d40:	ldr	x21, [sp, #32]
    4d44:	ldp	x29, x30, [sp], #48
    4d48:	ret
    4d4c:	cmp	w1, #0xb
    4d50:	b.eq	4e64 <elf_begin@@ELFUTILS_1.0+0x1c4>  // b.none
    4d54:	b.ls	4d78 <elf_begin@@ELFUTILS_1.0+0xd8>  // b.plast
    4d58:	mov	w0, #0xd                   	// #13
    4d5c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4d60:	mov	x21, #0x0                   	// #0
    4d64:	mov	x0, x21
    4d68:	ldp	x19, x20, [sp, #16]
    4d6c:	ldr	x21, [sp, #32]
    4d70:	ldp	x29, x30, [sp], #48
    4d74:	ret
    4d78:	cmp	w1, #0x9
    4d7c:	b.eq	4da8 <elf_begin@@ELFUTILS_1.0+0x108>  // b.none
    4d80:	cmp	w1, #0xa
    4d84:	b.eq	4cf4 <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4d88:	b	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>
    4d8c:	cbnz	w19, 4d58 <elf_begin@@ELFUTILS_1.0+0xb8>
    4d90:	mov	x21, #0x0                   	// #0
    4d94:	mov	x0, x21
    4d98:	ldp	x19, x20, [sp, #16]
    4d9c:	ldr	x21, [sp, #32]
    4da0:	ldp	x29, x30, [sp], #48
    4da4:	ret
    4da8:	ldr	w0, [x2, #28]
    4dac:	sub	w1, w0, #0x9
    4db0:	sub	w0, w0, #0x2
    4db4:	cmp	w1, #0x1
    4db8:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    4dbc:	b.hi	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.pmore
    4dc0:	mov	w1, w19
    4dc4:	mov	w0, w20
    4dc8:	ldp	x19, x20, [sp, #16]
    4dcc:	ldr	x21, [sp, #32]
    4dd0:	ldp	x29, x30, [sp], #48
    4dd4:	b	4ba0 <elf_fill@@ELFUTILS_1.0+0x1550>
    4dd8:	mov	w1, w3
    4ddc:	bl	3280 <fcntl@plt>
    4de0:	cmn	w0, #0x1
    4de4:	b.eq	4e84 <elf_begin@@ELFUTILS_1.0+0x1e4>  // b.none
    4de8:	cmp	w19, #0x8
    4dec:	b.eq	4e08 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4df0:	b.hi	4e2c <elf_begin@@ELFUTILS_1.0+0x18c>  // b.pmore
    4df4:	cmp	w19, #0x1
    4df8:	b.eq	4e08 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4dfc:	b.ls	4d8c <elf_begin@@ELFUTILS_1.0+0xec>  // b.plast
    4e00:	cmp	w19, #0x2
    4e04:	b.ne	4cec <elf_begin@@ELFUTILS_1.0+0x4c>  // b.any
    4e08:	mov	w3, w19
    4e0c:	mov	w0, w20
    4e10:	ldp	x19, x20, [sp, #16]
    4e14:	mov	x4, #0x0                   	// #0
    4e18:	ldr	x21, [sp, #32]
    4e1c:	mov	x2, #0xffffffffffffffff    	// #-1
    4e20:	ldp	x29, x30, [sp], #48
    4e24:	mov	x1, #0x0                   	// #0
    4e28:	b	4108 <elf_fill@@ELFUTILS_1.0+0xab8>
    4e2c:	cmp	w19, #0xa
    4e30:	b.eq	4cf4 <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4e34:	cmp	w19, #0xb
    4e38:	b.eq	4e08 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4e3c:	cmp	w19, #0x9
    4e40:	b.ne	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4e44:	b	4e08 <elf_begin@@ELFUTILS_1.0+0x168>
    4e48:	mov	w0, #0xc                   	// #12
    4e4c:	mov	x21, #0x0                   	// #0
    4e50:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4e54:	mov	x0, x21
    4e58:	ldr	x21, [sp, #32]
    4e5c:	ldp	x29, x30, [sp], #48
    4e60:	ret
    4e64:	ldr	w0, [x2, #28]
    4e68:	cmp	w0, #0xb
    4e6c:	b.eq	4dc0 <elf_begin@@ELFUTILS_1.0+0x120>  // b.none
    4e70:	b	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>
    4e74:	mov	w0, #0x8                   	// #8
    4e78:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4e7c:	ldp	x19, x20, [sp, #16]
    4e80:	b	4d3c <elf_begin@@ELFUTILS_1.0+0x9c>
    4e84:	bl	3340 <__errno_location@plt>
    4e88:	ldr	w0, [x0]
    4e8c:	cmp	w0, #0x9
    4e90:	b.eq	4d5c <elf_begin@@ELFUTILS_1.0+0xbc>  // b.none
    4e94:	cmp	w19, #0x9
    4e98:	b.eq	4e08 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4e9c:	b.hi	4ebc <elf_begin@@ELFUTILS_1.0+0x21c>  // b.pmore
    4ea0:	cmp	w19, #0x2
    4ea4:	b.eq	4e08 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4ea8:	b.hi	4ed0 <elf_begin@@ELFUTILS_1.0+0x230>  // b.pmore
    4eac:	cbz	w19, 4d90 <elf_begin@@ELFUTILS_1.0+0xf0>
    4eb0:	cmp	w19, #0x1
    4eb4:	b.ne	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4eb8:	b	4e08 <elf_begin@@ELFUTILS_1.0+0x168>
    4ebc:	cmp	w19, #0xa
    4ec0:	b.eq	4cf4 <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4ec4:	cmp	w19, #0xb
    4ec8:	b.eq	4e08 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4ecc:	b	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>
    4ed0:	cmp	w19, #0x3
    4ed4:	b.eq	4cf4 <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4ed8:	cmp	w19, #0x8
    4edc:	b.ne	4d58 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4ee0:	b	4e08 <elf_begin@@ELFUTILS_1.0+0x168>
    4ee4:	nop

0000000000004ee8 <elf_next@@ELFUTILS_1.0>:
    4ee8:	cbz	x0, 4f60 <elf_next@@ELFUTILS_1.0+0x78>
    4eec:	stp	x29, x30, [sp, #-32]!
    4ef0:	mov	x29, sp
    4ef4:	stp	x19, x20, [sp, #16]
    4ef8:	mov	x20, x0
    4efc:	ldr	x19, [x0, #8]
    4f00:	cbz	x19, 4f68 <elf_next@@ELFUTILS_1.0+0x80>
    4f04:	ldr	w0, [x19, #24]
    4f08:	cmp	w0, #0x1
    4f0c:	b.ne	4f78 <elf_next@@ELFUTILS_1.0+0x90>  // b.any
    4f10:	ldr	x1, [x19, #152]
    4f14:	mov	x0, x19
    4f18:	ldr	x2, [x19, #112]
    4f1c:	add	x1, x1, #0x1
    4f20:	and	x1, x1, #0xfffffffffffffffe
    4f24:	add	x2, x2, #0x3c
    4f28:	add	x1, x1, x2
    4f2c:	str	x1, [x19, #112]
    4f30:	bl	44b0 <elf_fill@@ELFUTILS_1.0+0xe60>
    4f34:	cbz	w0, 4f4c <elf_next@@ELFUTILS_1.0+0x64>
    4f38:	str	xzr, [x19, #120]
    4f3c:	mov	w0, #0x0                   	// #0
    4f40:	ldp	x19, x20, [sp, #16]
    4f44:	ldp	x29, x30, [sp], #32
    4f48:	ret
    4f4c:	ldr	w0, [x20, #28]
    4f50:	cbz	w0, 4f38 <elf_next@@ELFUTILS_1.0+0x50>
    4f54:	ldp	x19, x20, [sp, #16]
    4f58:	ldp	x29, x30, [sp], #32
    4f5c:	ret
    4f60:	mov	w0, #0x0                   	// #0
    4f64:	ret
    4f68:	mov	w0, #0x0                   	// #0
    4f6c:	ldp	x19, x20, [sp, #16]
    4f70:	ldp	x29, x30, [sp], #32
    4f74:	ret
    4f78:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4f7c:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4f80:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    4f84:	add	x3, x3, #0xca8
    4f88:	add	x1, x1, #0xc78
    4f8c:	add	x0, x0, #0xc88
    4f90:	mov	w2, #0x35                  	// #53
    4f94:	bl	3330 <__assert_fail@plt>

0000000000004f98 <elf_rand@@ELFUTILS_1.0>:
    4f98:	cbz	x0, 4ff4 <elf_rand@@ELFUTILS_1.0+0x5c>
    4f9c:	stp	x29, x30, [sp, #-32]!
    4fa0:	mov	x29, sp
    4fa4:	ldr	w2, [x0, #24]
    4fa8:	stp	x19, x20, [sp, #16]
    4fac:	mov	x20, x1
    4fb0:	mov	x19, x0
    4fb4:	cmp	w2, #0x1
    4fb8:	mov	x1, #0x0                   	// #0
    4fbc:	b.eq	4fd0 <elf_rand@@ELFUTILS_1.0+0x38>  // b.none
    4fc0:	mov	x0, x1
    4fc4:	ldp	x19, x20, [sp, #16]
    4fc8:	ldp	x29, x30, [sp], #32
    4fcc:	ret
    4fd0:	ldr	x1, [x0, #40]
    4fd4:	add	x1, x1, x20
    4fd8:	str	x1, [x0, #112]
    4fdc:	bl	44b0 <elf_fill@@ELFUTILS_1.0+0xe60>
    4fe0:	mov	x1, x20
    4fe4:	cbz	w0, 4fc0 <elf_rand@@ELFUTILS_1.0+0x28>
    4fe8:	mov	x1, #0x0                   	// #0
    4fec:	str	xzr, [x19, #120]
    4ff0:	b	4fc0 <elf_rand@@ELFUTILS_1.0+0x28>
    4ff4:	mov	x1, #0x0                   	// #0
    4ff8:	mov	x0, x1
    4ffc:	ret

0000000000005000 <elf_end@@ELFUTILS_1.0>:
    5000:	stp	x29, x30, [sp, #-80]!
    5004:	mov	x29, sp
    5008:	stp	x19, x20, [sp, #16]
    500c:	stp	x21, x22, [sp, #32]
    5010:	mov	x22, x0
    5014:	stp	x23, x24, [sp, #48]
    5018:	stp	x25, x26, [sp, #64]
    501c:	mov	w25, #0xd0                  	// #208
    5020:	cbz	x22, 51cc <elf_end@@ELFUTILS_1.0+0x1cc>
    5024:	ldr	w0, [x22, #60]
    5028:	cbz	w0, 5038 <elf_end@@ELFUTILS_1.0+0x38>
    502c:	sub	w0, w0, #0x1
    5030:	str	w0, [x22, #60]
    5034:	cbnz	w0, 51d0 <elf_end@@ELFUTILS_1.0+0x1d0>
    5038:	ldr	w1, [x22, #24]
    503c:	cmp	w1, #0x1
    5040:	b.eq	5240 <elf_end@@ELFUTILS_1.0+0x240>  // b.none
    5044:	ldr	x26, [x22, #8]
    5048:	cbz	x26, 5068 <elf_end@@ELFUTILS_1.0+0x68>
    504c:	ldr	x0, [x26, #72]
    5050:	ldr	x3, [x22, #16]
    5054:	cmp	x0, x22
    5058:	b.ne	5180 <elf_end@@ELFUTILS_1.0+0x180>  // b.any
    505c:	str	x3, [x26, #72]
    5060:	cmp	w1, #0x1
    5064:	b.eq	519c <elf_end@@ELFUTILS_1.0+0x19c>  // b.none
    5068:	cmp	w1, #0x3
    506c:	b.ne	51a8 <elf_end@@ELFUTILS_1.0+0x1a8>  // b.any
    5070:	ldr	x19, [x22, #104]
    5074:	cbnz	x19, 5088 <elf_end@@ELFUTILS_1.0+0x88>
    5078:	b	50ac <elf_end@@ELFUTILS_1.0+0xac>
    507c:	mov	x0, x20
    5080:	bl	3200 <free@plt>
    5084:	cbz	x19, 50ac <elf_end@@ELFUTILS_1.0+0xac>
    5088:	ldr	w0, [x19, #204]
    508c:	mov	x20, x19
    5090:	ldr	x19, [x19, #48]
    5094:	tbz	w0, #7, 507c <elf_end@@ELFUTILS_1.0+0x7c>
    5098:	ldr	x0, [x20]
    509c:	bl	3200 <free@plt>
    50a0:	mov	x0, x20
    50a4:	bl	3200 <free@plt>
    50a8:	cbnz	x19, 5088 <elf_end@@ELFUTILS_1.0+0x88>
    50ac:	add	x24, x22, #0xc8
    50b0:	mov	x23, x24
    50b4:	nop
    50b8:	ldr	w20, [x23, #4]
    50bc:	mov	w0, w20
    50c0:	sub	x21, x0, #0x1
    50c4:	umaddl	x20, w20, w25, x23
    50c8:	cbz	x0, 515c <elf_end@@ELFUTILS_1.0+0x15c>
    50cc:	nop
    50d0:	ldur	w0, [x20, #-40]
    50d4:	tbnz	w0, #7, 5208 <elf_end@@ELFUTILS_1.0+0x208>
    50d8:	ldur	x1, [x20, #-32]
    50dc:	ldur	x0, [x20, #-16]
    50e0:	cmp	x0, x1
    50e4:	b.eq	50f0 <elf_end@@ELFUTILS_1.0+0xf0>  // b.none
    50e8:	bl	3200 <free@plt>
    50ec:	ldur	x1, [x20, #-32]
    50f0:	ldur	x0, [x20, #-24]
    50f4:	cmp	x0, x1
    50f8:	b.eq	5104 <elf_end@@ELFUTILS_1.0+0x104>  // b.none
    50fc:	bl	3200 <free@plt>
    5100:	ldur	x1, [x20, #-32]
    5104:	ldr	x0, [x22]
    5108:	cbz	x0, 5120 <elf_end@@ELFUTILS_1.0+0x120>
    510c:	ldur	x0, [x20, #-16]
    5110:	cmp	x0, x1
    5114:	b.eq	5120 <elf_end@@ELFUTILS_1.0+0x120>  // b.none
    5118:	ldur	w0, [x20, #-36]
    511c:	tbz	w0, #7, 5128 <elf_end@@ELFUTILS_1.0+0x128>
    5120:	mov	x0, x1
    5124:	bl	3200 <free@plt>
    5128:	ldur	x19, [x20, #-144]
    512c:	nop
    5130:	cbz	x19, 514c <elf_end@@ELFUTILS_1.0+0x14c>
    5134:	ldr	w1, [x19, #56]
    5138:	mov	x0, x19
    513c:	ldr	x19, [x19, #48]
    5140:	tbz	w1, #7, 5130 <elf_end@@ELFUTILS_1.0+0x130>
    5144:	bl	3200 <free@plt>
    5148:	cbnz	x19, 5134 <elf_end@@ELFUTILS_1.0+0x134>
    514c:	sub	x21, x21, #0x1
    5150:	sub	x20, x20, #0xd0
    5154:	cmn	x21, #0x1
    5158:	b.ne	50d0 <elf_end@@ELFUTILS_1.0+0xd0>  // b.any
    515c:	ldr	x19, [x23, #8]
    5160:	cbz	x19, 5214 <elf_end@@ELFUTILS_1.0+0x214>
    5164:	ldp	w1, w0, [x23]
    5168:	cmp	w1, w0
    516c:	b.ne	52a4 <elf_end@@ELFUTILS_1.0+0x2a4>  // b.any
    5170:	cmp	x23, x24
    5174:	b.ne	51f8 <elf_end@@ELFUTILS_1.0+0x1f8>  // b.any
    5178:	mov	x23, x19
    517c:	b	50b8 <elf_end@@ELFUTILS_1.0+0xb8>
    5180:	mov	x2, x0
    5184:	ldr	x0, [x0, #16]
    5188:	cmp	x0, x22
    518c:	b.ne	5180 <elf_end@@ELFUTILS_1.0+0x180>  // b.any
    5190:	str	x3, [x2, #16]
    5194:	cmp	w1, #0x1
    5198:	b.ne	5068 <elf_end@@ELFUTILS_1.0+0x68>  // b.any
    519c:	ldr	x0, [x22, #96]
    51a0:	cbz	x0, 51a8 <elf_end@@ELFUTILS_1.0+0x1a8>
    51a4:	bl	3200 <free@plt>
    51a8:	ldr	x0, [x22]
    51ac:	cbz	x0, 51e8 <elf_end@@ELFUTILS_1.0+0x1e8>
    51b0:	cbz	x26, 526c <elf_end@@ELFUTILS_1.0+0x26c>
    51b4:	mov	x0, x22
    51b8:	bl	3200 <free@plt>
    51bc:	ldr	w0, [x26, #60]
    51c0:	cbnz	w0, 51cc <elf_end@@ELFUTILS_1.0+0x1cc>
    51c4:	mov	x22, x26
    51c8:	cbnz	x22, 5024 <elf_end@@ELFUTILS_1.0+0x24>
    51cc:	mov	w0, #0x0                   	// #0
    51d0:	ldp	x19, x20, [sp, #16]
    51d4:	ldp	x21, x22, [sp, #32]
    51d8:	ldp	x23, x24, [sp, #48]
    51dc:	ldp	x25, x26, [sp, #64]
    51e0:	ldp	x29, x30, [sp], #80
    51e4:	ret
    51e8:	mov	x0, x22
    51ec:	bl	3200 <free@plt>
    51f0:	cbnz	x26, 51bc <elf_end@@ELFUTILS_1.0+0x1bc>
    51f4:	b	51cc <elf_end@@ELFUTILS_1.0+0x1cc>
    51f8:	mov	x0, x23
    51fc:	mov	x23, x19
    5200:	bl	3200 <free@plt>
    5204:	b	50b8 <elf_end@@ELFUTILS_1.0+0xb8>
    5208:	ldur	x0, [x20, #-48]
    520c:	bl	3200 <free@plt>
    5210:	b	50d8 <elf_end@@ELFUTILS_1.0+0xd8>
    5214:	cmp	x23, x24
    5218:	b.eq	5224 <elf_end@@ELFUTILS_1.0+0x224>  // b.none
    521c:	mov	x0, x23
    5220:	bl	3200 <free@plt>
    5224:	ldr	w0, [x22, #124]
    5228:	cbnz	w0, 5284 <elf_end@@ELFUTILS_1.0+0x284>
    522c:	ldr	w0, [x22, #120]
    5230:	tbz	w0, #7, 51a8 <elf_end@@ELFUTILS_1.0+0x1a8>
    5234:	ldr	x0, [x22, #88]
    5238:	bl	3200 <free@plt>
    523c:	b	51a8 <elf_end@@ELFUTILS_1.0+0x1a8>
    5240:	ldr	x0, [x22, #80]
    5244:	cmn	x0, #0x1
    5248:	b.eq	5250 <elf_end@@ELFUTILS_1.0+0x250>  // b.none
    524c:	bl	3200 <free@plt>
    5250:	ldr	x0, [x22, #72]
    5254:	str	xzr, [x22, #80]
    5258:	cbnz	x0, 51cc <elf_end@@ELFUTILS_1.0+0x1cc>
    525c:	ldr	x26, [x22, #8]
    5260:	ldr	w1, [x22, #24]
    5264:	cbnz	x26, 504c <elf_end@@ELFUTILS_1.0+0x4c>
    5268:	b	5060 <elf_end@@ELFUTILS_1.0+0x60>
    526c:	ldr	w1, [x22, #56]
    5270:	tbnz	w1, #7, 5290 <elf_end@@ELFUTILS_1.0+0x290>
    5274:	tbnz	w1, #6, 5298 <elf_end@@ELFUTILS_1.0+0x298>
    5278:	mov	x0, x22
    527c:	bl	3200 <free@plt>
    5280:	b	51cc <elf_end@@ELFUTILS_1.0+0x1cc>
    5284:	ldr	x0, [x22, #80]
    5288:	bl	3200 <free@plt>
    528c:	b	522c <elf_end@@ELFUTILS_1.0+0x22c>
    5290:	bl	3200 <free@plt>
    5294:	b	5278 <elf_end@@ELFUTILS_1.0+0x278>
    5298:	ldr	x1, [x22, #48]
    529c:	bl	32a0 <munmap@plt>
    52a0:	b	5278 <elf_end@@ELFUTILS_1.0+0x278>
    52a4:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    52a8:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    52ac:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    52b0:	add	x3, x3, #0xcf0
    52b4:	add	x1, x1, #0xcb8
    52b8:	add	x0, x0, #0xcc8
    52bc:	mov	w2, #0xbd                  	// #189
    52c0:	bl	3330 <__assert_fail@plt>
    52c4:	nop

00000000000052c8 <elf_kind@@ELFUTILS_1.0>:
    52c8:	cbz	x0, 52d4 <elf_kind@@ELFUTILS_1.0+0xc>
    52cc:	ldr	w0, [x0, #24]
    52d0:	ret
    52d4:	mov	w0, #0x0                   	// #0
    52d8:	ret
    52dc:	nop

00000000000052e0 <gelf_getclass@@ELFUTILS_1.0>:
    52e0:	mov	x1, x0
    52e4:	mov	w0, #0x0                   	// #0
    52e8:	cbz	x1, 52fc <gelf_getclass@@ELFUTILS_1.0+0x1c>
    52ec:	ldr	w2, [x1, #24]
    52f0:	mov	w0, #0x0                   	// #0
    52f4:	cmp	w2, #0x3
    52f8:	b.eq	5300 <gelf_getclass@@ELFUTILS_1.0+0x20>  // b.none
    52fc:	ret
    5300:	ldr	w0, [x1, #32]
    5304:	ret

0000000000005308 <elf_getbase@@ELFUTILS_1.0>:
    5308:	cbz	x0, 5314 <elf_getbase@@ELFUTILS_1.0+0xc>
    530c:	ldr	x0, [x0, #40]
    5310:	ret
    5314:	mov	x0, #0xffffffffffffffff    	// #-1
    5318:	ret
    531c:	nop

0000000000005320 <elf_getident@@ELFUTILS_1.0>:
    5320:	cbz	x0, 5344 <elf_getident@@ELFUTILS_1.0+0x24>
    5324:	ldr	w2, [x0, #24]
    5328:	cmp	w2, #0x3
    532c:	b.ne	5344 <elf_getident@@ELFUTILS_1.0+0x24>  // b.any
    5330:	cbz	x1, 533c <elf_getident@@ELFUTILS_1.0+0x1c>
    5334:	mov	x2, #0x10                  	// #16
    5338:	str	x2, [x1]
    533c:	ldr	x0, [x0, #72]
    5340:	ret
    5344:	mov	x0, #0x0                   	// #0
    5348:	cbz	x1, 5340 <elf_getident@@ELFUTILS_1.0+0x20>
    534c:	str	xzr, [x1]
    5350:	ret
    5354:	nop

0000000000005358 <elf32_fsize@@ELFUTILS_1.0>:
    5358:	stp	x29, x30, [sp, #-16]!
    535c:	cmp	w2, #0x1
    5360:	mov	x29, sp
    5364:	b.ne	5388 <elf32_fsize@@ELFUTILS_1.0+0x30>  // b.any
    5368:	cmp	w0, #0x1a
    536c:	b.hi	539c <elf32_fsize@@ELFUTILS_1.0+0x44>  // b.pmore
    5370:	adrp	x2, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    5374:	add	x2, x2, #0xcf8
    5378:	ldr	x0, [x2, w0, uxtw #3]
    537c:	mul	x0, x1, x0
    5380:	ldp	x29, x30, [sp], #16
    5384:	ret
    5388:	mov	w0, #0x2                   	// #2
    538c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5390:	mov	x0, #0x0                   	// #0
    5394:	ldp	x29, x30, [sp], #16
    5398:	ret
    539c:	mov	w0, #0x3                   	// #3
    53a0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    53a4:	mov	x0, #0x0                   	// #0
    53a8:	b	5380 <elf32_fsize@@ELFUTILS_1.0+0x28>
    53ac:	nop

00000000000053b0 <elf64_fsize@@ELFUTILS_1.0>:
    53b0:	stp	x29, x30, [sp, #-16]!
    53b4:	cmp	w2, #0x1
    53b8:	mov	x29, sp
    53bc:	b.ne	53e4 <elf64_fsize@@ELFUTILS_1.0+0x34>  // b.any
    53c0:	cmp	w0, #0x1a
    53c4:	b.hi	53f8 <elf64_fsize@@ELFUTILS_1.0+0x48>  // b.pmore
    53c8:	adrp	x2, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    53cc:	add	x2, x2, #0xcf8
    53d0:	add	x0, x2, w0, uxtw #3
    53d4:	ldr	x0, [x0, #216]
    53d8:	mul	x0, x1, x0
    53dc:	ldp	x29, x30, [sp], #16
    53e0:	ret
    53e4:	mov	w0, #0x2                   	// #2
    53e8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    53ec:	mov	x0, #0x0                   	// #0
    53f0:	ldp	x29, x30, [sp], #16
    53f4:	ret
    53f8:	mov	w0, #0x3                   	// #3
    53fc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5400:	mov	x0, #0x0                   	// #0
    5404:	b	53dc <elf64_fsize@@ELFUTILS_1.0+0x2c>

0000000000005408 <gelf_fsize@@ELFUTILS_1.0>:
    5408:	cbz	x0, 5480 <gelf_fsize@@ELFUTILS_1.0+0x78>
    540c:	stp	x29, x30, [sp, #-16]!
    5410:	cmp	w3, #0x1
    5414:	mov	x29, sp
    5418:	b.ne	5458 <gelf_fsize@@ELFUTILS_1.0+0x50>  // b.any
    541c:	cmp	w1, #0x1a
    5420:	b.hi	546c <gelf_fsize@@ELFUTILS_1.0+0x64>  // b.pmore
    5424:	ldr	w0, [x0, #32]
    5428:	adrp	x4, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    542c:	add	x4, x4, #0xcf8
    5430:	sub	w3, w0, #0x1
    5434:	ldp	x29, x30, [sp], #16
    5438:	lsl	x0, x3, #3
    543c:	sub	x0, x0, x3
    5440:	lsl	x0, x0, #2
    5444:	sub	x0, x0, x3
    5448:	add	x1, x0, w1, uxtw
    544c:	ldr	x0, [x4, x1, lsl #3]
    5450:	mul	x0, x2, x0
    5454:	ret
    5458:	mov	w0, #0x2                   	// #2
    545c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5460:	mov	x0, #0x0                   	// #0
    5464:	ldp	x29, x30, [sp], #16
    5468:	ret
    546c:	mov	w0, #0x3                   	// #3
    5470:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5474:	mov	x0, #0x0                   	// #0
    5478:	ldp	x29, x30, [sp], #16
    547c:	ret
    5480:	mov	x0, #0x0                   	// #0
    5484:	ret

0000000000005488 <elf32_xlatetof@@ELFUTILS_1.0>:
    5488:	stp	x29, x30, [sp, #-32]!
    548c:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    5490:	mov	x29, sp
    5494:	stp	x19, x20, [sp, #16]
    5498:	mov	x19, x1
    549c:	add	x1, x3, #0xcf8
    54a0:	mov	x20, x0
    54a4:	mov	w0, w2
    54a8:	ldr	w3, [x19, #8]
    54ac:	ldr	x2, [x19, #16]
    54b0:	mov	w5, w3
    54b4:	ldr	x4, [x1, x5, lsl #3]
    54b8:	udiv	x1, x2, x4
    54bc:	msub	x1, x1, x4, x2
    54c0:	cbnz	x1, 5550 <elf32_xlatetof@@ELFUTILS_1.0+0xc8>
    54c4:	ldr	x1, [x20, #16]
    54c8:	cmp	x2, x1
    54cc:	b.hi	5560 <elf32_xlatetof@@ELFUTILS_1.0+0xd8>  // b.pmore
    54d0:	sub	w1, w0, #0x1
    54d4:	cmp	w1, #0x1
    54d8:	b.hi	5538 <elf32_xlatetof@@ELFUTILS_1.0+0xb0>  // b.pmore
    54dc:	cmp	w0, #0x1
    54e0:	ldr	x1, [x19]
    54e4:	ldr	x0, [x20]
    54e8:	b.eq	5520 <elf32_xlatetof@@ELFUTILS_1.0+0x98>  // b.none
    54ec:	adrp	x4, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    54f0:	add	x4, x4, #0xbd8
    54f4:	mov	w3, #0x1                   	// #1
    54f8:	ldr	x4, [x4, x5, lsl #3]
    54fc:	blr	x4
    5500:	ldr	w3, [x19, #8]
    5504:	ldr	x2, [x19, #16]
    5508:	mov	x0, x20
    550c:	str	w3, [x20, #8]
    5510:	str	x2, [x20, #16]
    5514:	ldp	x19, x20, [sp, #16]
    5518:	ldp	x29, x30, [sp], #32
    551c:	ret
    5520:	cmp	x0, x1
    5524:	b.eq	5508 <elf32_xlatetof@@ELFUTILS_1.0+0x80>  // b.none
    5528:	bl	3030 <memmove@plt>
    552c:	ldr	w3, [x19, #8]
    5530:	ldr	x2, [x19, #16]
    5534:	b	5508 <elf32_xlatetof@@ELFUTILS_1.0+0x80>
    5538:	mov	w0, #0x7                   	// #7
    553c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5540:	mov	x0, #0x0                   	// #0
    5544:	ldp	x19, x20, [sp, #16]
    5548:	ldp	x29, x30, [sp], #32
    554c:	ret
    5550:	mov	w0, #0x21                  	// #33
    5554:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5558:	mov	x0, #0x0                   	// #0
    555c:	b	5514 <elf32_xlatetof@@ELFUTILS_1.0+0x8c>
    5560:	mov	w0, #0x6                   	// #6
    5564:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5568:	mov	x0, #0x0                   	// #0
    556c:	b	5514 <elf32_xlatetof@@ELFUTILS_1.0+0x8c>

0000000000005570 <elf32_xlatetom@@ELFUTILS_1.0>:
    5570:	stp	x29, x30, [sp, #-32]!
    5574:	mov	x29, sp
    5578:	ldr	w4, [x1, #8]
    557c:	stp	x19, x20, [sp, #16]
    5580:	mov	x20, x0
    5584:	cmp	w4, #0x13
    5588:	mov	w0, w2
    558c:	mov	x19, x1
    5590:	ccmp	w4, #0x1a, #0x4, ne  // ne = any
    5594:	ldr	x2, [x1, #16]
    5598:	b.eq	55b4 <elf32_xlatetom@@ELFUTILS_1.0+0x44>  // b.none
    559c:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    55a0:	add	x1, x1, #0xcf8
    55a4:	ldr	x3, [x1, w4, uxtw #3]
    55a8:	udiv	x1, x2, x3
    55ac:	msub	x1, x1, x3, x2
    55b0:	cbnz	x1, 5650 <elf32_xlatetom@@ELFUTILS_1.0+0xe0>
    55b4:	ldr	x1, [x20, #16]
    55b8:	cmp	x1, x2
    55bc:	b.cc	5640 <elf32_xlatetom@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    55c0:	sub	w1, w0, #0x1
    55c4:	cmp	w1, #0x1
    55c8:	b.hi	5628 <elf32_xlatetom@@ELFUTILS_1.0+0xb8>  // b.pmore
    55cc:	cmp	w0, #0x1
    55d0:	ldr	x1, [x19]
    55d4:	ldr	x0, [x20]
    55d8:	b.eq	5610 <elf32_xlatetom@@ELFUTILS_1.0+0xa0>  // b.none
    55dc:	adrp	x5, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    55e0:	add	x5, x5, #0xbd8
    55e4:	mov	w3, #0x0                   	// #0
    55e8:	ldr	x4, [x5, w4, uxtw #3]
    55ec:	blr	x4
    55f0:	ldr	w4, [x19, #8]
    55f4:	ldr	x2, [x19, #16]
    55f8:	mov	x0, x20
    55fc:	str	w4, [x20, #8]
    5600:	str	x2, [x20, #16]
    5604:	ldp	x19, x20, [sp, #16]
    5608:	ldp	x29, x30, [sp], #32
    560c:	ret
    5610:	cmp	x0, x1
    5614:	b.eq	55f8 <elf32_xlatetom@@ELFUTILS_1.0+0x88>  // b.none
    5618:	bl	3030 <memmove@plt>
    561c:	ldr	w4, [x19, #8]
    5620:	ldr	x2, [x19, #16]
    5624:	b	55f8 <elf32_xlatetom@@ELFUTILS_1.0+0x88>
    5628:	mov	w0, #0x7                   	// #7
    562c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5630:	mov	x0, #0x0                   	// #0
    5634:	ldp	x19, x20, [sp, #16]
    5638:	ldp	x29, x30, [sp], #32
    563c:	ret
    5640:	mov	w0, #0x6                   	// #6
    5644:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5648:	mov	x0, #0x0                   	// #0
    564c:	b	5604 <elf32_xlatetom@@ELFUTILS_1.0+0x94>
    5650:	mov	w0, #0x21                  	// #33
    5654:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5658:	mov	x0, #0x0                   	// #0
    565c:	b	5604 <elf32_xlatetom@@ELFUTILS_1.0+0x94>

0000000000005660 <elf64_xlatetof@@ELFUTILS_1.0>:
    5660:	stp	x29, x30, [sp, #-32]!
    5664:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    5668:	mov	x29, sp
    566c:	stp	x19, x20, [sp, #16]
    5670:	mov	x19, x1
    5674:	add	x1, x3, #0xcf8
    5678:	mov	x20, x0
    567c:	mov	w0, w2
    5680:	ldr	w3, [x19, #8]
    5684:	ldr	x2, [x19, #16]
    5688:	mov	w4, w3
    568c:	add	x4, x4, #0x1b
    5690:	ldr	x5, [x1, x4, lsl #3]
    5694:	udiv	x1, x2, x5
    5698:	msub	x1, x1, x5, x2
    569c:	cbnz	x1, 572c <elf64_xlatetof@@ELFUTILS_1.0+0xcc>
    56a0:	ldr	x1, [x20, #16]
    56a4:	cmp	x2, x1
    56a8:	b.hi	573c <elf64_xlatetof@@ELFUTILS_1.0+0xdc>  // b.pmore
    56ac:	sub	w1, w0, #0x1
    56b0:	cmp	w1, #0x1
    56b4:	b.hi	5714 <elf64_xlatetof@@ELFUTILS_1.0+0xb4>  // b.pmore
    56b8:	cmp	w0, #0x1
    56bc:	ldr	x1, [x19]
    56c0:	ldr	x0, [x20]
    56c4:	b.eq	56fc <elf64_xlatetof@@ELFUTILS_1.0+0x9c>  // b.none
    56c8:	adrp	x5, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    56cc:	add	x5, x5, #0xbd8
    56d0:	mov	w3, #0x1                   	// #1
    56d4:	ldr	x4, [x5, x4, lsl #3]
    56d8:	blr	x4
    56dc:	ldr	w3, [x19, #8]
    56e0:	ldr	x2, [x19, #16]
    56e4:	mov	x0, x20
    56e8:	str	w3, [x20, #8]
    56ec:	str	x2, [x20, #16]
    56f0:	ldp	x19, x20, [sp, #16]
    56f4:	ldp	x29, x30, [sp], #32
    56f8:	ret
    56fc:	cmp	x0, x1
    5700:	b.eq	56e4 <elf64_xlatetof@@ELFUTILS_1.0+0x84>  // b.none
    5704:	bl	3030 <memmove@plt>
    5708:	ldr	w3, [x19, #8]
    570c:	ldr	x2, [x19, #16]
    5710:	b	56e4 <elf64_xlatetof@@ELFUTILS_1.0+0x84>
    5714:	mov	w0, #0x7                   	// #7
    5718:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    571c:	mov	x0, #0x0                   	// #0
    5720:	ldp	x19, x20, [sp, #16]
    5724:	ldp	x29, x30, [sp], #32
    5728:	ret
    572c:	mov	w0, #0x21                  	// #33
    5730:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5734:	mov	x0, #0x0                   	// #0
    5738:	b	56f0 <elf64_xlatetof@@ELFUTILS_1.0+0x90>
    573c:	mov	w0, #0x6                   	// #6
    5740:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5744:	mov	x0, #0x0                   	// #0
    5748:	b	56f0 <elf64_xlatetof@@ELFUTILS_1.0+0x90>
    574c:	nop

0000000000005750 <elf64_xlatetom@@ELFUTILS_1.0>:
    5750:	stp	x29, x30, [sp, #-32]!
    5754:	mov	x29, sp
    5758:	ldr	w3, [x1, #8]
    575c:	stp	x19, x20, [sp, #16]
    5760:	mov	x20, x0
    5764:	cmp	w3, #0x13
    5768:	mov	w0, w2
    576c:	mov	x19, x1
    5770:	ccmp	w3, #0x1a, #0x4, ne  // ne = any
    5774:	ldr	x2, [x1, #16]
    5778:	b.eq	5798 <elf64_xlatetom@@ELFUTILS_1.0+0x48>  // b.none
    577c:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    5780:	add	x1, x1, #0xcf8
    5784:	add	x1, x1, w3, uxtw #3
    5788:	ldr	x4, [x1, #216]
    578c:	udiv	x1, x2, x4
    5790:	msub	x1, x1, x4, x2
    5794:	cbnz	x1, 5838 <elf64_xlatetom@@ELFUTILS_1.0+0xe8>
    5798:	ldr	x1, [x20, #16]
    579c:	cmp	x1, x2
    57a0:	b.cc	5828 <elf64_xlatetom@@ELFUTILS_1.0+0xd8>  // b.lo, b.ul, b.last
    57a4:	sub	w1, w0, #0x1
    57a8:	cmp	w1, #0x1
    57ac:	b.hi	5810 <elf64_xlatetom@@ELFUTILS_1.0+0xc0>  // b.pmore
    57b0:	cmp	w0, #0x1
    57b4:	ldr	x1, [x19]
    57b8:	ldr	x0, [x20]
    57bc:	b.eq	57f8 <elf64_xlatetom@@ELFUTILS_1.0+0xa8>  // b.none
    57c0:	adrp	x4, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    57c4:	add	x4, x4, #0xbd8
    57c8:	add	x4, x4, w3, uxtw #3
    57cc:	mov	w3, #0x0                   	// #0
    57d0:	ldr	x4, [x4, #216]
    57d4:	blr	x4
    57d8:	ldr	w3, [x19, #8]
    57dc:	ldr	x2, [x19, #16]
    57e0:	mov	x0, x20
    57e4:	str	w3, [x20, #8]
    57e8:	str	x2, [x20, #16]
    57ec:	ldp	x19, x20, [sp, #16]
    57f0:	ldp	x29, x30, [sp], #32
    57f4:	ret
    57f8:	cmp	x0, x1
    57fc:	b.eq	57e0 <elf64_xlatetom@@ELFUTILS_1.0+0x90>  // b.none
    5800:	bl	3030 <memmove@plt>
    5804:	ldr	w3, [x19, #8]
    5808:	ldr	x2, [x19, #16]
    580c:	b	57e0 <elf64_xlatetom@@ELFUTILS_1.0+0x90>
    5810:	mov	w0, #0x7                   	// #7
    5814:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5818:	mov	x0, #0x0                   	// #0
    581c:	ldp	x19, x20, [sp, #16]
    5820:	ldp	x29, x30, [sp], #32
    5824:	ret
    5828:	mov	w0, #0x6                   	// #6
    582c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5830:	mov	x0, #0x0                   	// #0
    5834:	b	57ec <elf64_xlatetom@@ELFUTILS_1.0+0x9c>
    5838:	mov	w0, #0x21                  	// #33
    583c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5840:	mov	x0, #0x0                   	// #0
    5844:	b	57ec <elf64_xlatetom@@ELFUTILS_1.0+0x9c>
    5848:	cbnz	x2, 5850 <elf64_xlatetom@@ELFUTILS_1.0+0x100>
    584c:	ret
    5850:	b	3030 <memmove@plt>
    5854:	nop
    5858:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    585c:	cmp	x2, #0x13
    5860:	movk	x3, #0xcccd
    5864:	umulh	x2, x2, x3
    5868:	lsr	x3, x2, #4
    586c:	b.ls	58c4 <elf64_xlatetom@@ELFUTILS_1.0+0x174>  // b.plast
    5870:	add	x3, x3, x3, lsl #2
    5874:	add	x3, x0, x3, lsl #2
    5878:	ldr	w2, [x1]
    587c:	add	x0, x0, #0x14
    5880:	add	x1, x1, #0x14
    5884:	rev	w2, w2
    5888:	stur	w2, [x0, #-20]
    588c:	ldur	w2, [x1, #-16]
    5890:	rev	w2, w2
    5894:	stur	w2, [x0, #-16]
    5898:	ldur	w2, [x1, #-12]
    589c:	rev	w2, w2
    58a0:	stur	w2, [x0, #-12]
    58a4:	ldur	w2, [x1, #-8]
    58a8:	rev	w2, w2
    58ac:	stur	w2, [x0, #-8]
    58b0:	ldur	w2, [x1, #-4]
    58b4:	rev	w2, w2
    58b8:	stur	w2, [x0, #-4]
    58bc:	cmp	x3, x0
    58c0:	b.ne	5878 <elf64_xlatetom@@ELFUTILS_1.0+0x128>  // b.any
    58c4:	ret
    58c8:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    58cc:	cmp	x2, #0x13
    58d0:	movk	x3, #0xcccd
    58d4:	umulh	x2, x2, x3
    58d8:	lsr	x3, x2, #4
    58dc:	b.ls	5934 <elf64_xlatetom@@ELFUTILS_1.0+0x1e4>  // b.plast
    58e0:	add	x3, x3, x3, lsl #2
    58e4:	add	x3, x0, x3, lsl #2
    58e8:	ldr	w2, [x1]
    58ec:	add	x0, x0, #0x14
    58f0:	add	x1, x1, #0x14
    58f4:	rev	w2, w2
    58f8:	stur	w2, [x0, #-20]
    58fc:	ldur	w2, [x1, #-16]
    5900:	rev	w2, w2
    5904:	stur	w2, [x0, #-16]
    5908:	ldur	w2, [x1, #-12]
    590c:	rev	w2, w2
    5910:	stur	w2, [x0, #-12]
    5914:	ldur	w2, [x1, #-8]
    5918:	rev	w2, w2
    591c:	stur	w2, [x0, #-8]
    5920:	ldur	w2, [x1, #-4]
    5924:	rev	w2, w2
    5928:	stur	w2, [x0, #-4]
    592c:	cmp	x3, x0
    5930:	b.ne	58e8 <elf64_xlatetom@@ELFUTILS_1.0+0x198>  // b.any
    5934:	ret
    5938:	cmp	xzr, x2, lsr #3
    593c:	lsr	x2, x2, #3
    5940:	b.eq	5970 <elf64_xlatetom@@ELFUTILS_1.0+0x220>  // b.none
    5944:	add	x3, x0, x2, lsl #3
    5948:	ldr	w2, [x1]
    594c:	add	x0, x0, #0x8
    5950:	add	x1, x1, #0x8
    5954:	rev	w2, w2
    5958:	stur	w2, [x0, #-8]
    595c:	ldur	w2, [x1, #-4]
    5960:	rev	w2, w2
    5964:	stur	w2, [x0, #-4]
    5968:	cmp	x3, x0
    596c:	b.ne	5948 <elf64_xlatetom@@ELFUTILS_1.0+0x1f8>  // b.any
    5970:	ret
    5974:	nop
    5978:	cmp	xzr, x2, lsr #3
    597c:	lsr	x2, x2, #3
    5980:	b.eq	59b0 <elf64_xlatetom@@ELFUTILS_1.0+0x260>  // b.none
    5984:	add	x3, x0, x2, lsl #3
    5988:	ldr	w2, [x1]
    598c:	add	x0, x0, #0x8
    5990:	add	x1, x1, #0x8
    5994:	rev	w2, w2
    5998:	stur	w2, [x0, #-8]
    599c:	ldur	w2, [x1, #-4]
    59a0:	rev	w2, w2
    59a4:	stur	w2, [x0, #-4]
    59a8:	cmp	x3, x0
    59ac:	b.ne	5988 <elf64_xlatetom@@ELFUTILS_1.0+0x238>  // b.any
    59b0:	ret
    59b4:	nop
    59b8:	lsr	x4, x2, #2
    59bc:	cmp	x0, x1
    59c0:	sub	x3, x4, #0x1
    59c4:	b.cs	59f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2a4>  // b.hs, b.nlast
    59c8:	lsl	x5, x4, #2
    59cc:	mov	x2, #0x0                   	// #0
    59d0:	cbz	x4, 59f0 <elf64_xlatetom@@ELFUTILS_1.0+0x2a0>
    59d4:	nop
    59d8:	ldr	w3, [x1, x2]
    59dc:	rev	w3, w3
    59e0:	str	w3, [x0, x2]
    59e4:	add	x2, x2, #0x4
    59e8:	cmp	x5, x2
    59ec:	b.ne	59d8 <elf64_xlatetom@@ELFUTILS_1.0+0x288>  // b.any
    59f0:	ret
    59f4:	cbz	x4, 59f0 <elf64_xlatetom@@ELFUTILS_1.0+0x2a0>
    59f8:	sub	x4, x2, x4, lsl #2
    59fc:	add	x2, x1, x4
    5a00:	add	x1, x0, x4
    5a04:	nop
    5a08:	ldr	w0, [x2, x3, lsl #2]
    5a0c:	rev	w0, w0
    5a10:	str	w0, [x1, x3, lsl #2]
    5a14:	sub	x3, x3, #0x1
    5a18:	cmn	x3, #0x1
    5a1c:	b.ne	5a08 <elf64_xlatetom@@ELFUTILS_1.0+0x2b8>  // b.any
    5a20:	ret
    5a24:	nop
    5a28:	b	59b8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>
    5a2c:	nop
    5a30:	b	59b8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>
    5a34:	nop
    5a38:	b	59b8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>
    5a3c:	nop
    5a40:	b	59b8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>
    5a44:	nop
    5a48:	b	59b8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>
    5a4c:	nop
    5a50:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5a54:	cmp	x2, #0xb
    5a58:	movk	x3, #0xaaab
    5a5c:	umulh	x2, x2, x3
    5a60:	lsr	x3, x2, #3
    5a64:	b.ls	5aa4 <elf64_xlatetom@@ELFUTILS_1.0+0x354>  // b.plast
    5a68:	add	x3, x3, x3, lsl #1
    5a6c:	add	x3, x0, x3, lsl #2
    5a70:	ldr	w2, [x1]
    5a74:	add	x0, x0, #0xc
    5a78:	add	x1, x1, #0xc
    5a7c:	rev	w2, w2
    5a80:	stur	w2, [x0, #-12]
    5a84:	ldur	w2, [x1, #-8]
    5a88:	rev	w2, w2
    5a8c:	stur	w2, [x0, #-8]
    5a90:	ldur	w2, [x1, #-4]
    5a94:	rev	w2, w2
    5a98:	stur	w2, [x0, #-4]
    5a9c:	cmp	x3, x0
    5aa0:	b.ne	5a70 <elf64_xlatetom@@ELFUTILS_1.0+0x320>  // b.any
    5aa4:	ret
    5aa8:	cmp	xzr, x2, lsr #3
    5aac:	lsr	x2, x2, #3
    5ab0:	b.eq	5ae0 <elf64_xlatetom@@ELFUTILS_1.0+0x390>  // b.none
    5ab4:	add	x3, x0, x2, lsl #3
    5ab8:	ldr	w2, [x1]
    5abc:	add	x0, x0, #0x8
    5ac0:	add	x1, x1, #0x8
    5ac4:	rev	w2, w2
    5ac8:	stur	w2, [x0, #-8]
    5acc:	ldur	w2, [x1, #-4]
    5ad0:	rev	w2, w2
    5ad4:	stur	w2, [x0, #-4]
    5ad8:	cmp	x3, x0
    5adc:	b.ne	5ab8 <elf64_xlatetom@@ELFUTILS_1.0+0x368>  // b.any
    5ae0:	ret
    5ae4:	nop
    5ae8:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    5aec:	cmp	x2, #0x27
    5af0:	movk	x3, #0xcccd
    5af4:	umulh	x2, x2, x3
    5af8:	lsr	x3, x2, #5
    5afc:	b.ls	5b90 <elf64_xlatetom@@ELFUTILS_1.0+0x440>  // b.plast
    5b00:	add	x3, x3, x3, lsl #2
    5b04:	add	x3, x0, x3, lsl #3
    5b08:	ldr	w2, [x1]
    5b0c:	add	x0, x0, #0x28
    5b10:	add	x1, x1, #0x28
    5b14:	rev	w2, w2
    5b18:	stur	w2, [x0, #-40]
    5b1c:	ldur	w2, [x1, #-36]
    5b20:	rev	w2, w2
    5b24:	stur	w2, [x0, #-36]
    5b28:	ldur	w2, [x1, #-32]
    5b2c:	rev	w2, w2
    5b30:	stur	w2, [x0, #-32]
    5b34:	ldur	w2, [x1, #-28]
    5b38:	rev	w2, w2
    5b3c:	stur	w2, [x0, #-28]
    5b40:	ldur	w2, [x1, #-24]
    5b44:	rev	w2, w2
    5b48:	stur	w2, [x0, #-24]
    5b4c:	ldur	w2, [x1, #-20]
    5b50:	rev	w2, w2
    5b54:	stur	w2, [x0, #-20]
    5b58:	ldur	w2, [x1, #-16]
    5b5c:	rev	w2, w2
    5b60:	stur	w2, [x0, #-16]
    5b64:	ldur	w2, [x1, #-12]
    5b68:	rev	w2, w2
    5b6c:	stur	w2, [x0, #-12]
    5b70:	ldur	w2, [x1, #-8]
    5b74:	rev	w2, w2
    5b78:	stur	w2, [x0, #-8]
    5b7c:	ldur	w2, [x1, #-4]
    5b80:	rev	w2, w2
    5b84:	stur	w2, [x0, #-4]
    5b88:	cmp	x3, x0
    5b8c:	b.ne	5b08 <elf64_xlatetom@@ELFUTILS_1.0+0x3b8>  // b.any
    5b90:	ret
    5b94:	nop
    5b98:	cmp	xzr, x2, lsr #5
    5b9c:	lsr	x2, x2, #5
    5ba0:	b.eq	5c18 <elf64_xlatetom@@ELFUTILS_1.0+0x4c8>  // b.none
    5ba4:	add	x3, x0, x2, lsl #5
    5ba8:	ldr	w2, [x1]
    5bac:	add	x0, x0, #0x20
    5bb0:	add	x1, x1, #0x20
    5bb4:	rev	w2, w2
    5bb8:	stur	w2, [x0, #-32]
    5bbc:	ldur	w2, [x1, #-28]
    5bc0:	rev	w2, w2
    5bc4:	stur	w2, [x0, #-28]
    5bc8:	ldur	w2, [x1, #-24]
    5bcc:	rev	w2, w2
    5bd0:	stur	w2, [x0, #-24]
    5bd4:	ldur	w2, [x1, #-20]
    5bd8:	rev	w2, w2
    5bdc:	stur	w2, [x0, #-20]
    5be0:	ldur	w2, [x1, #-16]
    5be4:	rev	w2, w2
    5be8:	stur	w2, [x0, #-16]
    5bec:	ldur	w2, [x1, #-12]
    5bf0:	rev	w2, w2
    5bf4:	stur	w2, [x0, #-12]
    5bf8:	ldur	w2, [x1, #-8]
    5bfc:	rev	w2, w2
    5c00:	stur	w2, [x0, #-8]
    5c04:	ldur	w2, [x1, #-4]
    5c08:	rev	w2, w2
    5c0c:	stur	w2, [x0, #-4]
    5c10:	cmp	x3, x0
    5c14:	b.ne	5ba8 <elf64_xlatetom@@ELFUTILS_1.0+0x458>  // b.any
    5c18:	ret
    5c1c:	nop
    5c20:	cmp	xzr, x2, lsr #4
    5c24:	lsr	x2, x2, #4
    5c28:	b.eq	5c58 <elf64_xlatetom@@ELFUTILS_1.0+0x508>  // b.none
    5c2c:	add	x3, x0, x2, lsl #4
    5c30:	ldr	x2, [x1]
    5c34:	add	x0, x0, #0x10
    5c38:	add	x1, x1, #0x10
    5c3c:	rev	x2, x2
    5c40:	stur	x2, [x0, #-16]
    5c44:	ldur	x2, [x1, #-8]
    5c48:	rev	x2, x2
    5c4c:	stur	x2, [x0, #-8]
    5c50:	cmp	x3, x0
    5c54:	b.ne	5c30 <elf64_xlatetom@@ELFUTILS_1.0+0x4e0>  // b.any
    5c58:	ret
    5c5c:	nop
    5c60:	cmp	xzr, x2, lsr #4
    5c64:	lsr	x2, x2, #4
    5c68:	b.eq	5c98 <elf64_xlatetom@@ELFUTILS_1.0+0x548>  // b.none
    5c6c:	add	x3, x0, x2, lsl #4
    5c70:	ldr	x2, [x1]
    5c74:	add	x0, x0, #0x10
    5c78:	add	x1, x1, #0x10
    5c7c:	rev	x2, x2
    5c80:	stur	x2, [x0, #-16]
    5c84:	ldur	x2, [x1, #-8]
    5c88:	rev	x2, x2
    5c8c:	stur	x2, [x0, #-8]
    5c90:	cmp	x3, x0
    5c94:	b.ne	5c70 <elf64_xlatetom@@ELFUTILS_1.0+0x520>  // b.any
    5c98:	ret
    5c9c:	nop
    5ca0:	cmp	xzr, x2, lsr #4
    5ca4:	lsr	x2, x2, #4
    5ca8:	b.eq	5cd8 <elf64_xlatetom@@ELFUTILS_1.0+0x588>  // b.none
    5cac:	add	x3, x0, x2, lsl #4
    5cb0:	ldr	x2, [x1]
    5cb4:	add	x0, x0, #0x10
    5cb8:	add	x1, x1, #0x10
    5cbc:	rev	x2, x2
    5cc0:	stur	x2, [x0, #-16]
    5cc4:	ldur	x2, [x1, #-8]
    5cc8:	rev	x2, x2
    5ccc:	stur	x2, [x0, #-8]
    5cd0:	cmp	x3, x0
    5cd4:	b.ne	5cb0 <elf64_xlatetom@@ELFUTILS_1.0+0x560>  // b.any
    5cd8:	ret
    5cdc:	nop
    5ce0:	mov	x4, #0x0                   	// #0
    5ce4:	cmp	x2, #0x3
    5ce8:	b.ls	5d90 <elf64_xlatetom@@ELFUTILS_1.0+0x640>  // b.plast
    5cec:	ldr	w5, [x1, x4]
    5cf0:	sub	x2, x2, #0x4
    5cf4:	rev	w5, w5
    5cf8:	str	w5, [x0, x4]
    5cfc:	add	x4, x4, #0x4
    5d00:	cmp	x4, #0x10
    5d04:	b.ne	5ce4 <elf64_xlatetom@@ELFUTILS_1.0+0x594>  // b.any
    5d08:	cbz	w3, 5d94 <elf64_xlatetom@@ELFUTILS_1.0+0x644>
    5d0c:	ldr	w6, [x1, #8]
    5d10:	cbz	w6, 5d50 <elf64_xlatetom@@ELFUTILS_1.0+0x600>
    5d14:	cmp	x2, #0x7
    5d18:	b.ls	5d90 <elf64_xlatetom@@ELFUTILS_1.0+0x640>  // b.plast
    5d1c:	sub	w5, w6, #0x1
    5d20:	add	x5, x5, #0x2
    5d24:	lsl	x5, x5, #3
    5d28:	b	5d34 <elf64_xlatetom@@ELFUTILS_1.0+0x5e4>
    5d2c:	cmp	x2, #0x7
    5d30:	b.ls	5d90 <elf64_xlatetom@@ELFUTILS_1.0+0x640>  // b.plast
    5d34:	ldr	x3, [x1, x4]
    5d38:	cmp	x4, x5
    5d3c:	sub	x2, x2, #0x8
    5d40:	rev	x3, x3
    5d44:	str	x3, [x0, x4]
    5d48:	add	x4, x4, #0x8
    5d4c:	b.ne	5d2c <elf64_xlatetom@@ELFUTILS_1.0+0x5dc>  // b.any
    5d50:	ubfiz	x3, x6, #3, #32
    5d54:	cmp	x2, #0x3
    5d58:	add	x3, x3, #0x10
    5d5c:	add	x1, x1, x3
    5d60:	add	x3, x0, x3
    5d64:	b.ls	5d90 <elf64_xlatetom@@ELFUTILS_1.0+0x640>  // b.plast
    5d68:	sub	x0, x2, #0x4
    5d6c:	mov	x2, #0x0                   	// #0
    5d70:	and	x0, x0, #0xfffffffffffffffc
    5d74:	add	x0, x0, #0x4
    5d78:	ldr	w4, [x1, x2]
    5d7c:	rev	w4, w4
    5d80:	str	w4, [x3, x2]
    5d84:	add	x2, x2, #0x4
    5d88:	cmp	x2, x0
    5d8c:	b.ne	5d78 <elf64_xlatetom@@ELFUTILS_1.0+0x628>  // b.any
    5d90:	ret
    5d94:	ldr	w6, [x0, #8]
    5d98:	b	5d10 <elf64_xlatetom@@ELFUTILS_1.0+0x5c0>
    5d9c:	nop
    5da0:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5da4:	cmp	x2, #0x17
    5da8:	movk	x3, #0xaaab
    5dac:	umulh	x2, x2, x3
    5db0:	lsr	x3, x2, #4
    5db4:	b.ls	5df4 <elf64_xlatetom@@ELFUTILS_1.0+0x6a4>  // b.plast
    5db8:	add	x3, x3, x3, lsl #1
    5dbc:	add	x3, x0, x3, lsl #3
    5dc0:	ldr	x2, [x1]
    5dc4:	add	x0, x0, #0x18
    5dc8:	add	x1, x1, #0x18
    5dcc:	rev	x2, x2
    5dd0:	stur	x2, [x0, #-24]
    5dd4:	ldur	x2, [x1, #-16]
    5dd8:	rev	x2, x2
    5ddc:	stur	x2, [x0, #-16]
    5de0:	ldur	x2, [x1, #-8]
    5de4:	rev	x2, x2
    5de8:	stur	x2, [x0, #-8]
    5dec:	cmp	x3, x0
    5df0:	b.ne	5dc0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>  // b.any
    5df4:	ret
    5df8:	cmp	xzr, x2, lsr #6
    5dfc:	lsr	x2, x2, #6
    5e00:	b.eq	5e90 <elf64_xlatetom@@ELFUTILS_1.0+0x740>  // b.none
    5e04:	add	x3, x0, x2, lsl #6
    5e08:	ldr	w2, [x1]
    5e0c:	add	x0, x0, #0x40
    5e10:	add	x1, x1, #0x40
    5e14:	rev	w2, w2
    5e18:	stur	w2, [x0, #-64]
    5e1c:	ldur	w2, [x1, #-60]
    5e20:	rev	w2, w2
    5e24:	stur	w2, [x0, #-60]
    5e28:	ldur	x2, [x1, #-56]
    5e2c:	rev	x2, x2
    5e30:	stur	x2, [x0, #-56]
    5e34:	ldur	x2, [x1, #-48]
    5e38:	rev	x2, x2
    5e3c:	stur	x2, [x0, #-48]
    5e40:	ldur	x2, [x1, #-40]
    5e44:	rev	x2, x2
    5e48:	stur	x2, [x0, #-40]
    5e4c:	ldur	x2, [x1, #-32]
    5e50:	rev	x2, x2
    5e54:	stur	x2, [x0, #-32]
    5e58:	ldur	w2, [x1, #-24]
    5e5c:	rev	w2, w2
    5e60:	stur	w2, [x0, #-24]
    5e64:	ldur	w2, [x1, #-20]
    5e68:	rev	w2, w2
    5e6c:	stur	w2, [x0, #-20]
    5e70:	ldur	x2, [x1, #-16]
    5e74:	rev	x2, x2
    5e78:	stur	x2, [x0, #-16]
    5e7c:	ldur	x2, [x1, #-8]
    5e80:	rev	x2, x2
    5e84:	stur	x2, [x0, #-8]
    5e88:	cmp	x3, x0
    5e8c:	b.ne	5e08 <elf64_xlatetom@@ELFUTILS_1.0+0x6b8>  // b.any
    5e90:	ret
    5e94:	nop
    5e98:	mov	x3, #0x2493                	// #9363
    5e9c:	cmp	x2, #0x37
    5ea0:	movk	x3, #0x9249, lsl #16
    5ea4:	lsr	x2, x2, #3
    5ea8:	movk	x3, #0x4924, lsl #32
    5eac:	movk	x3, #0x2492, lsl #48
    5eb0:	umulh	x2, x2, x3
    5eb4:	b.ls	5f38 <elf64_xlatetom@@ELFUTILS_1.0+0x7e8>  // b.plast
    5eb8:	lsl	x3, x2, #3
    5ebc:	sub	x3, x3, x2
    5ec0:	add	x3, x0, x3, lsl #3
    5ec4:	nop
    5ec8:	ldr	w2, [x1]
    5ecc:	add	x0, x0, #0x38
    5ed0:	add	x1, x1, #0x38
    5ed4:	rev	w2, w2
    5ed8:	stur	w2, [x0, #-56]
    5edc:	ldur	w2, [x1, #-52]
    5ee0:	rev	w2, w2
    5ee4:	stur	w2, [x0, #-52]
    5ee8:	ldur	x2, [x1, #-48]
    5eec:	rev	x2, x2
    5ef0:	stur	x2, [x0, #-48]
    5ef4:	ldur	x2, [x1, #-40]
    5ef8:	rev	x2, x2
    5efc:	stur	x2, [x0, #-40]
    5f00:	ldur	x2, [x1, #-32]
    5f04:	rev	x2, x2
    5f08:	stur	x2, [x0, #-32]
    5f0c:	ldur	x2, [x1, #-24]
    5f10:	rev	x2, x2
    5f14:	stur	x2, [x0, #-24]
    5f18:	ldur	x2, [x1, #-16]
    5f1c:	rev	x2, x2
    5f20:	stur	x2, [x0, #-16]
    5f24:	ldur	x2, [x1, #-8]
    5f28:	rev	x2, x2
    5f2c:	stur	x2, [x0, #-8]
    5f30:	cmp	x3, x0
    5f34:	b.ne	5ec8 <elf64_xlatetom@@ELFUTILS_1.0+0x778>  // b.any
    5f38:	ret
    5f3c:	nop
    5f40:	lsr	x4, x2, #3
    5f44:	cmp	x0, x1
    5f48:	sub	x3, x4, #0x1
    5f4c:	b.cs	5f7c <elf64_xlatetom@@ELFUTILS_1.0+0x82c>  // b.hs, b.nlast
    5f50:	lsl	x5, x4, #3
    5f54:	mov	x2, #0x0                   	// #0
    5f58:	cbz	x4, 5f78 <elf64_xlatetom@@ELFUTILS_1.0+0x828>
    5f5c:	nop
    5f60:	ldr	x3, [x1, x2]
    5f64:	rev	x3, x3
    5f68:	str	x3, [x0, x2]
    5f6c:	add	x2, x2, #0x8
    5f70:	cmp	x5, x2
    5f74:	b.ne	5f60 <elf64_xlatetom@@ELFUTILS_1.0+0x810>  // b.any
    5f78:	ret
    5f7c:	cbz	x4, 5f78 <elf64_xlatetom@@ELFUTILS_1.0+0x828>
    5f80:	sub	x4, x2, x4, lsl #3
    5f84:	add	x2, x1, x4
    5f88:	add	x1, x0, x4
    5f8c:	nop
    5f90:	ldr	x0, [x2, x3, lsl #3]
    5f94:	rev	x0, x0
    5f98:	str	x0, [x1, x3, lsl #3]
    5f9c:	sub	x3, x3, #0x1
    5fa0:	cmn	x3, #0x1
    5fa4:	b.ne	5f90 <elf64_xlatetom@@ELFUTILS_1.0+0x840>  // b.any
    5fa8:	ret
    5fac:	nop
    5fb0:	b	5f40 <elf64_xlatetom@@ELFUTILS_1.0+0x7f0>
    5fb4:	nop
    5fb8:	b	5f40 <elf64_xlatetom@@ELFUTILS_1.0+0x7f0>
    5fbc:	nop
    5fc0:	b	5f40 <elf64_xlatetom@@ELFUTILS_1.0+0x7f0>
    5fc4:	nop
    5fc8:	b	5f40 <elf64_xlatetom@@ELFUTILS_1.0+0x7f0>
    5fcc:	nop
    5fd0:	b	5f40 <elf64_xlatetom@@ELFUTILS_1.0+0x7f0>
    5fd4:	nop
    5fd8:	cmp	xzr, x2, lsr #5
    5fdc:	lsr	x2, x2, #5
    5fe0:	b.eq	6034 <elf64_xlatetom@@ELFUTILS_1.0+0x8e4>  // b.none
    5fe4:	add	x3, x0, x2, lsl #5
    5fe8:	ldr	x2, [x1]
    5fec:	add	x0, x0, #0x20
    5ff0:	add	x1, x1, #0x20
    5ff4:	rev	x2, x2
    5ff8:	stur	x2, [x0, #-32]
    5ffc:	ldur	x2, [x1, #-24]
    6000:	rev	x2, x2
    6004:	stur	x2, [x0, #-24]
    6008:	ldur	x2, [x1, #-16]
    600c:	rev	x2, x2
    6010:	stur	x2, [x0, #-16]
    6014:	ldurh	w2, [x1, #-8]
    6018:	rev16	w2, w2
    601c:	sturh	w2, [x0, #-8]
    6020:	ldurh	w2, [x1, #-6]
    6024:	rev16	w2, w2
    6028:	sturh	w2, [x0, #-6]
    602c:	cmp	x3, x0
    6030:	b.ne	5fe8 <elf64_xlatetom@@ELFUTILS_1.0+0x898>  // b.any
    6034:	ret
    6038:	cmp	xzr, x2, lsr #2
    603c:	lsr	x2, x2, #2
    6040:	b.eq	6070 <elf64_xlatetom@@ELFUTILS_1.0+0x920>  // b.none
    6044:	add	x3, x0, x2, lsl #2
    6048:	ldrh	w2, [x1]
    604c:	add	x0, x0, #0x4
    6050:	add	x1, x1, #0x4
    6054:	rev16	w2, w2
    6058:	sturh	w2, [x0, #-4]
    605c:	ldurh	w2, [x1, #-2]
    6060:	rev16	w2, w2
    6064:	sturh	w2, [x0, #-2]
    6068:	cmp	x3, x0
    606c:	b.ne	6048 <elf64_xlatetom@@ELFUTILS_1.0+0x8f8>  // b.any
    6070:	ret
    6074:	nop
    6078:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    607c:	cmp	x2, #0x17
    6080:	movk	x3, #0xaaab
    6084:	umulh	x2, x2, x3
    6088:	lsr	x3, x2, #4
    608c:	b.ls	60e8 <elf64_xlatetom@@ELFUTILS_1.0+0x998>  // b.plast
    6090:	add	x3, x3, x3, lsl #1
    6094:	add	x3, x0, x3, lsl #3
    6098:	ldr	w2, [x1]
    609c:	add	x0, x0, #0x18
    60a0:	add	x1, x1, #0x18
    60a4:	rev	w2, w2
    60a8:	stur	w2, [x0, #-24]
    60ac:	ldurb	w2, [x1, #-20]
    60b0:	sturb	w2, [x0, #-20]
    60b4:	ldurb	w2, [x1, #-19]
    60b8:	sturb	w2, [x0, #-19]
    60bc:	ldurh	w2, [x1, #-18]
    60c0:	rev16	w2, w2
    60c4:	sturh	w2, [x0, #-18]
    60c8:	ldur	x2, [x1, #-16]
    60cc:	rev	x2, x2
    60d0:	stur	x2, [x0, #-16]
    60d4:	ldur	x2, [x1, #-8]
    60d8:	rev	x2, x2
    60dc:	stur	x2, [x0, #-8]
    60e0:	cmp	x3, x0
    60e4:	b.ne	6098 <elf64_xlatetom@@ELFUTILS_1.0+0x948>  // b.any
    60e8:	ret
    60ec:	nop
    60f0:	cmp	xzr, x2, lsr #6
    60f4:	lsr	x2, x2, #6
    60f8:	b.eq	61b4 <elf64_xlatetom@@ELFUTILS_1.0+0xa64>  // b.none
    60fc:	add	x3, x0, x2, lsl #6
    6100:	ldp	x4, x5, [x1]
    6104:	stp	x4, x5, [x0]
    6108:	add	x0, x0, #0x40
    610c:	ldrh	w2, [x1, #16]
    6110:	add	x1, x1, #0x40
    6114:	rev16	w2, w2
    6118:	sturh	w2, [x0, #-48]
    611c:	ldurh	w2, [x1, #-46]
    6120:	rev16	w2, w2
    6124:	sturh	w2, [x0, #-46]
    6128:	ldur	w2, [x1, #-44]
    612c:	rev	w2, w2
    6130:	stur	w2, [x0, #-44]
    6134:	ldur	x2, [x1, #-40]
    6138:	rev	x2, x2
    613c:	stur	x2, [x0, #-40]
    6140:	ldur	x2, [x1, #-32]
    6144:	rev	x2, x2
    6148:	stur	x2, [x0, #-32]
    614c:	ldur	x2, [x1, #-24]
    6150:	rev	x2, x2
    6154:	stur	x2, [x0, #-24]
    6158:	ldur	w2, [x1, #-16]
    615c:	rev	w2, w2
    6160:	stur	w2, [x0, #-16]
    6164:	ldurh	w2, [x1, #-12]
    6168:	rev16	w2, w2
    616c:	sturh	w2, [x0, #-12]
    6170:	ldurh	w2, [x1, #-10]
    6174:	rev16	w2, w2
    6178:	sturh	w2, [x0, #-10]
    617c:	ldurh	w2, [x1, #-8]
    6180:	rev16	w2, w2
    6184:	sturh	w2, [x0, #-8]
    6188:	ldurh	w2, [x1, #-6]
    618c:	rev16	w2, w2
    6190:	sturh	w2, [x0, #-6]
    6194:	ldurh	w2, [x1, #-4]
    6198:	rev16	w2, w2
    619c:	sturh	w2, [x0, #-4]
    61a0:	ldurh	w2, [x1, #-2]
    61a4:	rev16	w2, w2
    61a8:	sturh	w2, [x0, #-2]
    61ac:	cmp	x3, x0
    61b0:	b.ne	6100 <elf64_xlatetom@@ELFUTILS_1.0+0x9b0>  // b.any
    61b4:	ret
    61b8:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    61bc:	cmp	x2, #0x17
    61c0:	movk	x3, #0xaaab
    61c4:	umulh	x2, x2, x3
    61c8:	lsr	x3, x2, #4
    61cc:	b.ls	6224 <elf64_xlatetom@@ELFUTILS_1.0+0xad4>  // b.plast
    61d0:	add	x3, x3, x3, lsl #1
    61d4:	add	x3, x0, x3, lsl #3
    61d8:	ldr	x2, [x1]
    61dc:	add	x0, x0, #0x18
    61e0:	add	x1, x1, #0x18
    61e4:	rev	x2, x2
    61e8:	stur	x2, [x0, #-24]
    61ec:	ldur	x2, [x1, #-16]
    61f0:	rev	x2, x2
    61f4:	stur	x2, [x0, #-16]
    61f8:	ldur	x2, [x1, #-12]
    61fc:	rev	x2, x2
    6200:	stur	x2, [x0, #-12]
    6204:	ldurh	w2, [x1, #-8]
    6208:	rev16	w2, w2
    620c:	sturh	w2, [x0, #-8]
    6210:	ldurh	w2, [x1, #-6]
    6214:	rev16	w2, w2
    6218:	sturh	w2, [x0, #-6]
    621c:	cmp	x3, x0
    6220:	b.ne	61d8 <elf64_xlatetom@@ELFUTILS_1.0+0xa88>  // b.any
    6224:	ret
    6228:	cmp	xzr, x2, lsr #2
    622c:	lsr	x2, x2, #2
    6230:	b.eq	6260 <elf64_xlatetom@@ELFUTILS_1.0+0xb10>  // b.none
    6234:	add	x3, x0, x2, lsl #2
    6238:	ldrh	w2, [x1]
    623c:	add	x0, x0, #0x4
    6240:	add	x1, x1, #0x4
    6244:	rev16	w2, w2
    6248:	sturh	w2, [x0, #-4]
    624c:	ldurh	w2, [x1, #-2]
    6250:	rev16	w2, w2
    6254:	sturh	w2, [x0, #-2]
    6258:	cmp	x3, x0
    625c:	b.ne	6238 <elf64_xlatetom@@ELFUTILS_1.0+0xae8>  // b.any
    6260:	ret
    6264:	nop
    6268:	cmp	xzr, x2, lsr #4
    626c:	lsr	x2, x2, #4
    6270:	b.eq	62c8 <elf64_xlatetom@@ELFUTILS_1.0+0xb78>  // b.none
    6274:	add	x3, x0, x2, lsl #4
    6278:	ldr	w2, [x1]
    627c:	add	x0, x0, #0x10
    6280:	add	x1, x1, #0x10
    6284:	rev	w2, w2
    6288:	stur	w2, [x0, #-16]
    628c:	ldur	w2, [x1, #-12]
    6290:	rev	w2, w2
    6294:	stur	w2, [x0, #-12]
    6298:	ldur	w2, [x1, #-8]
    629c:	rev	w2, w2
    62a0:	stur	w2, [x0, #-8]
    62a4:	ldurb	w2, [x1, #-4]
    62a8:	sturb	w2, [x0, #-4]
    62ac:	ldurb	w2, [x1, #-3]
    62b0:	sturb	w2, [x0, #-3]
    62b4:	ldurh	w2, [x1, #-2]
    62b8:	rev16	w2, w2
    62bc:	sturh	w2, [x0, #-2]
    62c0:	cmp	x3, x0
    62c4:	b.ne	6278 <elf64_xlatetom@@ELFUTILS_1.0+0xb28>  // b.any
    62c8:	ret
    62cc:	nop
    62d0:	cmp	x0, x1
    62d4:	lsr	x4, x2, #1
    62d8:	b.cs	6304 <elf64_xlatetom@@ELFUTILS_1.0+0xbb4>  // b.hs, b.nlast
    62dc:	lsl	x5, x4, #1
    62e0:	mov	x2, #0x0                   	// #0
    62e4:	cbz	x4, 6300 <elf64_xlatetom@@ELFUTILS_1.0+0xbb0>
    62e8:	ldrh	w3, [x1, x2]
    62ec:	rev16	w3, w3
    62f0:	strh	w3, [x0, x2]
    62f4:	add	x2, x2, #0x2
    62f8:	cmp	x5, x2
    62fc:	b.ne	62e8 <elf64_xlatetom@@ELFUTILS_1.0+0xb98>  // b.any
    6300:	ret
    6304:	add	x3, x0, x2
    6308:	add	x2, x1, x2
    630c:	cbz	x4, 6300 <elf64_xlatetom@@ELFUTILS_1.0+0xbb0>
    6310:	mvn	x4, x4
    6314:	mov	x0, #0xfffffffffffffffe    	// #-2
    6318:	lsl	x4, x4, #1
    631c:	nop
    6320:	ldrh	w1, [x2, x0]
    6324:	rev16	w1, w1
    6328:	strh	w1, [x3, x0]
    632c:	sub	x0, x0, #0x2
    6330:	cmp	x0, x4
    6334:	b.ne	6320 <elf64_xlatetom@@ELFUTILS_1.0+0xbd0>  // b.any
    6338:	ret
    633c:	nop
    6340:	b	62d0 <elf64_xlatetom@@ELFUTILS_1.0+0xb80>
    6344:	nop
    6348:	mov	x3, #0x4ec5                	// #20165
    634c:	cmp	x2, #0x33
    6350:	movk	x3, #0xc4ec, lsl #16
    6354:	movk	x3, #0xec4e, lsl #32
    6358:	movk	x3, #0x4ec4, lsl #48
    635c:	umulh	x2, x2, x3
    6360:	lsr	x2, x2, #4
    6364:	b.ls	642c <elf64_xlatetom@@ELFUTILS_1.0+0xcdc>  // b.plast
    6368:	add	x3, x2, x2, lsl #1
    636c:	add	x3, x2, x3, lsl #2
    6370:	add	x3, x0, x3, lsl #2
    6374:	nop
    6378:	ldp	x4, x5, [x1]
    637c:	stp	x4, x5, [x0]
    6380:	add	x0, x0, #0x34
    6384:	ldrh	w2, [x1, #16]
    6388:	add	x1, x1, #0x34
    638c:	rev16	w2, w2
    6390:	sturh	w2, [x0, #-36]
    6394:	ldurh	w2, [x1, #-34]
    6398:	rev16	w2, w2
    639c:	sturh	w2, [x0, #-34]
    63a0:	ldur	w2, [x1, #-32]
    63a4:	rev	w2, w2
    63a8:	stur	w2, [x0, #-32]
    63ac:	ldur	w2, [x1, #-28]
    63b0:	rev	w2, w2
    63b4:	stur	w2, [x0, #-28]
    63b8:	ldur	w2, [x1, #-24]
    63bc:	rev	w2, w2
    63c0:	stur	w2, [x0, #-24]
    63c4:	ldur	w2, [x1, #-20]
    63c8:	rev	w2, w2
    63cc:	stur	w2, [x0, #-20]
    63d0:	ldur	w2, [x1, #-16]
    63d4:	rev	w2, w2
    63d8:	stur	w2, [x0, #-16]
    63dc:	ldurh	w2, [x1, #-12]
    63e0:	rev16	w2, w2
    63e4:	sturh	w2, [x0, #-12]
    63e8:	ldurh	w2, [x1, #-10]
    63ec:	rev16	w2, w2
    63f0:	sturh	w2, [x0, #-10]
    63f4:	ldurh	w2, [x1, #-8]
    63f8:	rev16	w2, w2
    63fc:	sturh	w2, [x0, #-8]
    6400:	ldurh	w2, [x1, #-6]
    6404:	rev16	w2, w2
    6408:	sturh	w2, [x0, #-6]
    640c:	ldurh	w2, [x1, #-4]
    6410:	rev16	w2, w2
    6414:	sturh	w2, [x0, #-4]
    6418:	ldurh	w2, [x1, #-2]
    641c:	rev16	w2, w2
    6420:	sturh	w2, [x0, #-2]
    6424:	cmp	x3, x0
    6428:	b.ne	6378 <elf64_xlatetom@@ELFUTILS_1.0+0xc28>  // b.any
    642c:	ret
    6430:	stp	x29, x30, [sp, #-64]!
    6434:	cmp	x2, #0xb
    6438:	mov	x29, sp
    643c:	stp	x19, x20, [sp, #16]
    6440:	mov	x19, x2
    6444:	mov	x20, x0
    6448:	stp	x21, x22, [sp, #32]
    644c:	mov	x21, x1
    6450:	b.hi	6470 <elf64_xlatetom@@ELFUTILS_1.0+0xd20>  // b.pmore
    6454:	cmp	x19, #0x0
    6458:	ccmp	x20, x21, #0x4, ne  // ne = any
    645c:	b.ne	6540 <elf64_xlatetom@@ELFUTILS_1.0+0xdf0>  // b.any
    6460:	ldp	x19, x20, [sp, #16]
    6464:	ldp	x21, x22, [sp, #32]
    6468:	ldp	x29, x30, [sp], #64
    646c:	ret
    6470:	stp	x23, x24, [sp, #48]
    6474:	mov	w23, w3
    6478:	and	w24, w4, #0xff
    647c:	ldr	w0, [x21]
    6480:	cmp	w23, #0x0
    6484:	csel	x3, x21, x20, ne  // ne = any
    6488:	rev	w1, w0
    648c:	str	w1, [x20]
    6490:	csel	w0, w0, w1, ne  // ne = any
    6494:	ldr	w1, [x21, #4]
    6498:	mov	w0, w0
    649c:	add	x22, x0, #0xf
    64a0:	rev	w1, w1
    64a4:	str	w1, [x20, #4]
    64a8:	and	x1, x22, #0xfffffffc
    64ac:	ldr	w2, [x21, #8]
    64b0:	cmp	x1, #0xb
    64b4:	ccmp	x1, x19, #0x2, hi  // hi = pmore
    64b8:	rev	w2, w2
    64bc:	str	w2, [x20, #8]
    64c0:	cbz	w24, 6528 <elf64_xlatetom@@ELFUTILS_1.0+0xdd8>
    64c4:	add	x0, x0, #0x13
    64c8:	and	x0, x0, #0xfffffff8
    64cc:	cmp	x0, #0xb
    64d0:	ccmp	x0, x19, #0x2, hi  // hi = pmore
    64d4:	b.hi	655c <elf64_xlatetom@@ELFUTILS_1.0+0xe0c>  // b.pmore
    64d8:	ldr	w22, [x3, #4]
    64dc:	add	x22, x22, #0x7
    64e0:	add	x22, x22, x0
    64e4:	and	x22, x22, #0xfffffff8
    64e8:	cmp	x22, x19
    64ec:	add	x1, x21, #0xc
    64f0:	ccmp	x22, #0xb, #0x0, ls  // ls = plast
    64f4:	add	x0, x20, #0xc
    64f8:	b.ls	6570 <elf64_xlatetom@@ELFUTILS_1.0+0xe20>  // b.plast
    64fc:	sub	x19, x19, x22
    6500:	cmp	x1, x0
    6504:	b.eq	6510 <elf64_xlatetom@@ELFUTILS_1.0+0xdc0>  // b.none
    6508:	sub	x2, x22, #0xc
    650c:	bl	3020 <memcpy@plt>
    6510:	cmp	x19, #0xb
    6514:	add	x21, x21, x22
    6518:	add	x20, x20, x22
    651c:	b.hi	647c <elf64_xlatetom@@ELFUTILS_1.0+0xd2c>  // b.pmore
    6520:	ldp	x23, x24, [sp, #48]
    6524:	b	6454 <elf64_xlatetom@@ELFUTILS_1.0+0xd04>
    6528:	b.hi	655c <elf64_xlatetom@@ELFUTILS_1.0+0xe0c>  // b.pmore
    652c:	ldr	w22, [x3, #4]
    6530:	add	x22, x22, #0x3
    6534:	add	x22, x22, x1
    6538:	and	x22, x22, #0xfffffffc
    653c:	b	64e8 <elf64_xlatetom@@ELFUTILS_1.0+0xd98>
    6540:	mov	x2, x19
    6544:	mov	x1, x21
    6548:	mov	x0, x20
    654c:	ldp	x19, x20, [sp, #16]
    6550:	ldp	x21, x22, [sp, #32]
    6554:	ldp	x29, x30, [sp], #64
    6558:	b	3020 <memcpy@plt>
    655c:	sub	x19, x19, #0xc
    6560:	add	x21, x21, #0xc
    6564:	add	x20, x20, #0xc
    6568:	ldp	x23, x24, [sp, #48]
    656c:	b	6454 <elf64_xlatetom@@ELFUTILS_1.0+0xd04>
    6570:	sub	x19, x19, #0xc
    6574:	mov	x21, x1
    6578:	mov	x20, x0
    657c:	ldp	x23, x24, [sp, #48]
    6580:	b	6454 <elf64_xlatetom@@ELFUTILS_1.0+0xd04>
    6584:	nop
    6588:	mov	w4, #0x1                   	// #1
    658c:	b	6430 <elf64_xlatetom@@ELFUTILS_1.0+0xce0>
    6590:	mov	w4, #0x0                   	// #0
    6594:	b	6430 <elf64_xlatetom@@ELFUTILS_1.0+0xce0>
    6598:	cbz	x2, 6610 <elf64_xlatetom@@ELFUTILS_1.0+0xec0>
    659c:	stp	x29, x30, [sp, #-48]!
    65a0:	cmp	x0, x1
    65a4:	mov	x29, sp
    65a8:	stp	x19, x20, [sp, #16]
    65ac:	mov	x20, x0
    65b0:	mov	x19, x2
    65b4:	str	x21, [sp, #32]
    65b8:	mov	x21, x1
    65bc:	b.eq	65c4 <elf64_xlatetom@@ELFUTILS_1.0+0xe74>  // b.none
    65c0:	bl	3030 <memmove@plt>
    65c4:	cmp	x19, #0xb
    65c8:	b.hi	65dc <elf64_xlatetom@@ELFUTILS_1.0+0xe8c>  // b.pmore
    65cc:	ldp	x19, x20, [sp, #16]
    65d0:	ldr	x21, [sp, #32]
    65d4:	ldp	x29, x30, [sp], #48
    65d8:	ret
    65dc:	ldr	w0, [x21]
    65e0:	rev	w0, w0
    65e4:	str	w0, [x20]
    65e8:	ldr	w0, [x21, #4]
    65ec:	rev	w0, w0
    65f0:	str	w0, [x20, #4]
    65f4:	ldr	w0, [x21, #8]
    65f8:	ldr	x21, [sp, #32]
    65fc:	rev	w0, w0
    6600:	str	w0, [x20, #8]
    6604:	ldp	x19, x20, [sp, #16]
    6608:	ldp	x29, x30, [sp], #48
    660c:	ret
    6610:	ret
    6614:	nop
    6618:	cbz	x2, 669c <elf64_xlatetom@@ELFUTILS_1.0+0xf4c>
    661c:	stp	x29, x30, [sp, #-48]!
    6620:	cmp	x0, x1
    6624:	mov	x29, sp
    6628:	stp	x19, x20, [sp, #16]
    662c:	mov	x20, x0
    6630:	mov	x19, x2
    6634:	str	x21, [sp, #32]
    6638:	mov	x21, x1
    663c:	b.eq	6644 <elf64_xlatetom@@ELFUTILS_1.0+0xef4>  // b.none
    6640:	bl	3030 <memmove@plt>
    6644:	cmp	x19, #0x17
    6648:	b.hi	665c <elf64_xlatetom@@ELFUTILS_1.0+0xf0c>  // b.pmore
    664c:	ldp	x19, x20, [sp, #16]
    6650:	ldr	x21, [sp, #32]
    6654:	ldp	x29, x30, [sp], #48
    6658:	ret
    665c:	ldr	w0, [x21]
    6660:	rev	w0, w0
    6664:	str	w0, [x20]
    6668:	ldr	w0, [x21, #4]
    666c:	rev	w0, w0
    6670:	str	w0, [x20, #4]
    6674:	ldr	x0, [x21, #8]
    6678:	rev	x0, x0
    667c:	str	x0, [x20, #8]
    6680:	ldr	x0, [x21, #16]
    6684:	ldr	x21, [sp, #32]
    6688:	rev	x0, x0
    668c:	str	x0, [x20, #16]
    6690:	ldp	x19, x20, [sp, #16]
    6694:	ldp	x29, x30, [sp], #48
    6698:	ret
    669c:	ret
    66a0:	cbnz	x2, 66a8 <elf64_xlatetom@@ELFUTILS_1.0+0xf58>
    66a4:	ret
    66a8:	stp	x29, x30, [sp, #-48]!
    66ac:	mov	x29, sp
    66b0:	stp	x19, x20, [sp, #16]
    66b4:	mov	x20, x1
    66b8:	mov	x19, x2
    66bc:	stp	x21, x22, [sp, #32]
    66c0:	mov	w22, w3
    66c4:	mov	x21, x0
    66c8:	bl	3030 <memmove@plt>
    66cc:	mov	x12, #0x0                   	// #0
    66d0:	sub	x0, x19, x12
    66d4:	cmp	x0, #0xf
    66d8:	b.ls	67bc <elf64_xlatetom@@ELFUTILS_1.0+0x106c>  // b.plast
    66dc:	add	x13, x20, x12
    66e0:	add	x14, x21, x12
    66e4:	ldr	w4, [x13, #8]
    66e8:	cbnz	w22, 67cc <elf64_xlatetom@@ELFUTILS_1.0+0x107c>
    66ec:	ldrh	w3, [x20, x12]
    66f0:	rev	w5, w4
    66f4:	ldrh	w2, [x13, #2]
    66f8:	ldr	w1, [x13, #4]
    66fc:	rev16	w3, w3
    6700:	ldr	w0, [x13, #12]
    6704:	rev16	w2, w2
    6708:	strh	w3, [x21, x12]
    670c:	rev	w1, w1
    6710:	rev	w0, w0
    6714:	add	x4, x12, w5, uxtw
    6718:	strh	w2, [x14, #2]
    671c:	stp	w1, w5, [x14, #4]
    6720:	str	w0, [x14, #12]
    6724:	b	6744 <elf64_xlatetom@@ELFUTILS_1.0+0xff4>
    6728:	stp	w7, w2, [x6, #8]
    672c:	add	x4, x4, w11, uxtw
    6730:	str	w10, [x6]
    6734:	ldr	w2, [x5, #12]
    6738:	strh	w9, [x6, #4]
    673c:	strh	w8, [x6, #6]
    6740:	cbz	w2, 67a0 <elf64_xlatetom@@ELFUTILS_1.0+0x1050>
    6744:	add	x5, x20, x4
    6748:	subs	x2, x19, x4
    674c:	b.cc	67bc <elf64_xlatetom@@ELFUTILS_1.0+0x106c>  // b.lo, b.ul, b.last
    6750:	cmp	x2, #0xf
    6754:	b.ls	67bc <elf64_xlatetom@@ELFUTILS_1.0+0x106c>  // b.plast
    6758:	ldp	w7, w11, [x5, #8]
    675c:	add	x6, x21, x4
    6760:	ldr	w10, [x20, x4]
    6764:	ldrh	w9, [x5, #4]
    6768:	rev	w7, w7
    676c:	ldrh	w8, [x5, #6]
    6770:	rev	w10, w10
    6774:	rev16	w9, w9
    6778:	rev	w2, w11
    677c:	rev16	w8, w8
    6780:	cbnz	w22, 6728 <elf64_xlatetom@@ELFUTILS_1.0+0xfd8>
    6784:	str	w10, [x21, x4]
    6788:	add	x4, x4, w2, uxtw
    678c:	stp	w7, w2, [x6, #8]
    6790:	strh	w9, [x6, #4]
    6794:	ldr	w2, [x5, #12]
    6798:	strh	w8, [x6, #6]
    679c:	cbnz	w2, 6744 <elf64_xlatetom@@ELFUTILS_1.0+0xff4>
    67a0:	ldr	w0, [x13, #12]
    67a4:	cbnz	w22, 67d4 <elf64_xlatetom@@ELFUTILS_1.0+0x1084>
    67a8:	ldr	w1, [x14, #12]
    67ac:	add	x12, x12, x1
    67b0:	cmp	w0, #0x0
    67b4:	ccmp	x19, x12, #0x0, ne  // ne = any
    67b8:	b.cs	66d0 <elf64_xlatetom@@ELFUTILS_1.0+0xf80>  // b.hs, b.nlast
    67bc:	ldp	x19, x20, [sp, #16]
    67c0:	ldp	x21, x22, [sp, #32]
    67c4:	ldp	x29, x30, [sp], #48
    67c8:	ret
    67cc:	add	x4, x12, w4, uxtw
    67d0:	b	6744 <elf64_xlatetom@@ELFUTILS_1.0+0xff4>
    67d4:	rev	w4, w0
    67d8:	add	x12, x12, w0, uxtw
    67dc:	ldp	w1, w0, [x13, #4]
    67e0:	ldrh	w3, [x13]
    67e4:	ldrh	w2, [x13, #2]
    67e8:	rev	w0, w0
    67ec:	str	w4, [x14, #12]
    67f0:	rev16	w3, w3
    67f4:	rev16	w2, w2
    67f8:	rev	w1, w1
    67fc:	strh	w3, [x14]
    6800:	strh	w2, [x14, #2]
    6804:	stp	w1, w0, [x14, #4]
    6808:	ldr	w0, [x13, #12]
    680c:	b	67b0 <elf64_xlatetom@@ELFUTILS_1.0+0x1060>
    6810:	cbnz	x2, 6818 <elf64_xlatetom@@ELFUTILS_1.0+0x10c8>
    6814:	ret
    6818:	stp	x29, x30, [sp, #-48]!
    681c:	mov	x29, sp
    6820:	stp	x19, x20, [sp, #16]
    6824:	mov	x20, x1
    6828:	mov	x19, x2
    682c:	stp	x21, x22, [sp, #32]
    6830:	mov	w22, w3
    6834:	mov	x21, x0
    6838:	bl	3030 <memmove@plt>
    683c:	mov	x9, #0x0                   	// #0
    6840:	sub	x0, x19, x9
    6844:	cmp	x0, #0x13
    6848:	b.ls	691c <elf64_xlatetom@@ELFUTILS_1.0+0x11cc>  // b.plast
    684c:	add	x10, x20, x9
    6850:	add	x11, x21, x9
    6854:	ldr	w4, [x10, #12]
    6858:	cbnz	w22, 692c <elf64_xlatetom@@ELFUTILS_1.0+0x11dc>
    685c:	ldrh	w6, [x20, x9]
    6860:	rev	w7, w4
    6864:	ldrh	w5, [x10, #2]
    6868:	ldrh	w3, [x10, #4]
    686c:	rev16	w6, w6
    6870:	ldrh	w2, [x10, #6]
    6874:	rev16	w5, w5
    6878:	ldr	w1, [x10, #8]
    687c:	rev16	w3, w3
    6880:	ldr	w0, [x10, #16]
    6884:	rev16	w2, w2
    6888:	strh	w6, [x21, x9]
    688c:	rev	w1, w1
    6890:	rev	w0, w0
    6894:	add	x4, x9, w7, uxtw
    6898:	strh	w5, [x11, #2]
    689c:	strh	w3, [x11, #4]
    68a0:	strh	w2, [x11, #6]
    68a4:	stp	w1, w7, [x11, #8]
    68a8:	str	w0, [x11, #16]
    68ac:	b	68c0 <elf64_xlatetom@@ELFUTILS_1.0+0x1170>
    68b0:	stp	w5, w7, [x2]
    68b4:	add	x4, x4, w8, uxtw
    68b8:	ldr	w2, [x6, #4]
    68bc:	cbz	w2, 6900 <elf64_xlatetom@@ELFUTILS_1.0+0x11b0>
    68c0:	add	x6, x20, x4
    68c4:	subs	x2, x19, x4
    68c8:	b.cc	691c <elf64_xlatetom@@ELFUTILS_1.0+0x11cc>  // b.lo, b.ul, b.last
    68cc:	cmp	x2, #0x7
    68d0:	b.ls	691c <elf64_xlatetom@@ELFUTILS_1.0+0x11cc>  // b.plast
    68d4:	ldr	w5, [x20, x4]
    68d8:	add	x2, x21, x4
    68dc:	ldr	w8, [x6, #4]
    68e0:	rev	w5, w5
    68e4:	rev	w7, w8
    68e8:	cbnz	w22, 68b0 <elf64_xlatetom@@ELFUTILS_1.0+0x1160>
    68ec:	str	w5, [x21, x4]
    68f0:	add	x4, x4, w7, uxtw
    68f4:	str	w7, [x2, #4]
    68f8:	ldr	w2, [x6, #4]
    68fc:	cbnz	w2, 68c0 <elf64_xlatetom@@ELFUTILS_1.0+0x1170>
    6900:	ldr	w0, [x10, #16]
    6904:	cbnz	w22, 6934 <elf64_xlatetom@@ELFUTILS_1.0+0x11e4>
    6908:	ldr	w1, [x11, #16]
    690c:	add	x9, x9, x1
    6910:	cmp	w0, #0x0
    6914:	ccmp	x19, x9, #0x0, ne  // ne = any
    6918:	b.cs	6840 <elf64_xlatetom@@ELFUTILS_1.0+0x10f0>  // b.hs, b.nlast
    691c:	ldp	x19, x20, [sp, #16]
    6920:	ldp	x21, x22, [sp, #32]
    6924:	ldp	x29, x30, [sp], #48
    6928:	ret
    692c:	add	x4, x9, w4, uxtw
    6930:	b	68c0 <elf64_xlatetom@@ELFUTILS_1.0+0x1170>
    6934:	rev	w6, w0
    6938:	add	x9, x9, w0, uxtw
    693c:	ldp	w1, w0, [x10, #8]
    6940:	ldrh	w5, [x10]
    6944:	ldrh	w4, [x10, #2]
    6948:	rev	w0, w0
    694c:	ldrh	w3, [x10, #4]
    6950:	rev16	w5, w5
    6954:	ldrh	w2, [x10, #6]
    6958:	rev16	w4, w4
    695c:	str	w6, [x11, #16]
    6960:	rev16	w3, w3
    6964:	rev16	w2, w2
    6968:	rev	w1, w1
    696c:	strh	w5, [x11]
    6970:	strh	w4, [x11, #2]
    6974:	strh	w3, [x11, #4]
    6978:	strh	w2, [x11, #6]
    697c:	stp	w1, w0, [x11, #8]
    6980:	ldr	w0, [x10, #16]
    6984:	b	6910 <elf64_xlatetom@@ELFUTILS_1.0+0x11c0>
    6988:	cbz	x0, 69cc <elf64_xlatetom@@ELFUTILS_1.0+0x127c>
    698c:	stp	x29, x30, [sp, #-16]!
    6990:	mov	x29, sp
    6994:	ldr	w1, [x0, #24]
    6998:	cmp	w1, #0x3
    699c:	b.ne	69bc <elf64_xlatetom@@ELFUTILS_1.0+0x126c>  // b.any
    69a0:	ldr	w1, [x0, #32]
    69a4:	cbnz	w1, 69d4 <elf64_xlatetom@@ELFUTILS_1.0+0x1284>
    69a8:	mov	w1, #0x1                   	// #1
    69ac:	str	w1, [x0, #32]
    69b0:	ldr	x0, [x0, #72]
    69b4:	ldp	x29, x30, [sp], #16
    69b8:	ret
    69bc:	mov	w0, #0x4                   	// #4
    69c0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    69c4:	mov	x0, #0x0                   	// #0
    69c8:	b	69b4 <elf64_xlatetom@@ELFUTILS_1.0+0x1264>
    69cc:	mov	x0, #0x0                   	// #0
    69d0:	ret
    69d4:	cmp	w1, #0x1
    69d8:	b.eq	69b0 <elf64_xlatetom@@ELFUTILS_1.0+0x1260>  // b.none
    69dc:	mov	w0, #0x15                  	// #21
    69e0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    69e4:	mov	x0, #0x0                   	// #0
    69e8:	b	69b4 <elf64_xlatetom@@ELFUTILS_1.0+0x1264>
    69ec:	nop

00000000000069f0 <elf32_getehdr@@ELFUTILS_1.0>:
    69f0:	cbz	x0, 6a24 <elf32_getehdr@@ELFUTILS_1.0+0x34>
    69f4:	stp	x29, x30, [sp, #-16]!
    69f8:	mov	x29, sp
    69fc:	ldr	w1, [x0, #24]
    6a00:	cmp	w1, #0x3
    6a04:	b.ne	6a2c <elf32_getehdr@@ELFUTILS_1.0+0x3c>  // b.any
    6a08:	ldr	w1, [x0, #32]
    6a0c:	cbnz	w1, 6a3c <elf32_getehdr@@ELFUTILS_1.0+0x4c>
    6a10:	mov	w1, #0x1                   	// #1
    6a14:	str	w1, [x0, #32]
    6a18:	ldr	x0, [x0, #72]
    6a1c:	ldp	x29, x30, [sp], #16
    6a20:	ret
    6a24:	mov	x0, #0x0                   	// #0
    6a28:	ret
    6a2c:	mov	w0, #0x4                   	// #4
    6a30:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6a34:	mov	x0, #0x0                   	// #0
    6a38:	b	6a1c <elf32_getehdr@@ELFUTILS_1.0+0x2c>
    6a3c:	cmp	w1, #0x1
    6a40:	b.eq	6a18 <elf32_getehdr@@ELFUTILS_1.0+0x28>  // b.none
    6a44:	mov	w0, #0x15                  	// #21
    6a48:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6a4c:	mov	x0, #0x0                   	// #0
    6a50:	b	6a1c <elf32_getehdr@@ELFUTILS_1.0+0x2c>
    6a54:	nop
    6a58:	cbz	x0, 6a9c <elf32_getehdr@@ELFUTILS_1.0+0xac>
    6a5c:	stp	x29, x30, [sp, #-16]!
    6a60:	mov	x29, sp
    6a64:	ldr	w1, [x0, #24]
    6a68:	cmp	w1, #0x3
    6a6c:	b.ne	6a8c <elf32_getehdr@@ELFUTILS_1.0+0x9c>  // b.any
    6a70:	ldr	w1, [x0, #32]
    6a74:	cbnz	w1, 6aa4 <elf32_getehdr@@ELFUTILS_1.0+0xb4>
    6a78:	mov	w1, #0x2                   	// #2
    6a7c:	str	w1, [x0, #32]
    6a80:	ldr	x0, [x0, #72]
    6a84:	ldp	x29, x30, [sp], #16
    6a88:	ret
    6a8c:	mov	w0, #0x4                   	// #4
    6a90:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6a94:	mov	x0, #0x0                   	// #0
    6a98:	b	6a84 <elf32_getehdr@@ELFUTILS_1.0+0x94>
    6a9c:	mov	x0, #0x0                   	// #0
    6aa0:	ret
    6aa4:	cmp	w1, #0x2
    6aa8:	b.eq	6a80 <elf32_getehdr@@ELFUTILS_1.0+0x90>  // b.none
    6aac:	mov	w0, #0x15                  	// #21
    6ab0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6ab4:	mov	x0, #0x0                   	// #0
    6ab8:	b	6a84 <elf32_getehdr@@ELFUTILS_1.0+0x94>
    6abc:	nop

0000000000006ac0 <elf64_getehdr@@ELFUTILS_1.0>:
    6ac0:	cbz	x0, 6af4 <elf64_getehdr@@ELFUTILS_1.0+0x34>
    6ac4:	stp	x29, x30, [sp, #-16]!
    6ac8:	mov	x29, sp
    6acc:	ldr	w1, [x0, #24]
    6ad0:	cmp	w1, #0x3
    6ad4:	b.ne	6afc <elf64_getehdr@@ELFUTILS_1.0+0x3c>  // b.any
    6ad8:	ldr	w1, [x0, #32]
    6adc:	cbnz	w1, 6b0c <elf64_getehdr@@ELFUTILS_1.0+0x4c>
    6ae0:	mov	w1, #0x2                   	// #2
    6ae4:	str	w1, [x0, #32]
    6ae8:	ldr	x0, [x0, #72]
    6aec:	ldp	x29, x30, [sp], #16
    6af0:	ret
    6af4:	mov	x0, #0x0                   	// #0
    6af8:	ret
    6afc:	mov	w0, #0x4                   	// #4
    6b00:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6b04:	mov	x0, #0x0                   	// #0
    6b08:	b	6aec <elf64_getehdr@@ELFUTILS_1.0+0x2c>
    6b0c:	cmp	w1, #0x2
    6b10:	b.eq	6ae8 <elf64_getehdr@@ELFUTILS_1.0+0x28>  // b.none
    6b14:	mov	w0, #0x15                  	// #21
    6b18:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6b1c:	mov	x0, #0x0                   	// #0
    6b20:	b	6aec <elf64_getehdr@@ELFUTILS_1.0+0x2c>
    6b24:	nop
    6b28:	stp	x29, x30, [sp, #-32]!
    6b2c:	mov	x29, sp
    6b30:	str	x19, [sp, #16]
    6b34:	cbz	x0, 6c0c <elf64_getehdr@@ELFUTILS_1.0+0x14c>
    6b38:	ldr	w2, [x0, #24]
    6b3c:	cmp	w2, #0x3
    6b40:	b.ne	6bfc <elf64_getehdr@@ELFUTILS_1.0+0x13c>  // b.any
    6b44:	ldr	x19, [x0, #72]
    6b48:	cbz	x19, 6c14 <elf64_getehdr@@ELFUTILS_1.0+0x154>
    6b4c:	ldp	x2, x3, [x19]
    6b50:	ldr	w0, [x0, #32]
    6b54:	stp	x2, x3, [x1]
    6b58:	cmp	w0, #0x1
    6b5c:	b.eq	6b8c <elf64_getehdr@@ELFUTILS_1.0+0xcc>  // b.none
    6b60:	ldp	x2, x3, [x19, #16]
    6b64:	stp	x2, x3, [x1, #16]
    6b68:	ldp	x2, x3, [x19, #32]
    6b6c:	stp	x2, x3, [x1, #32]
    6b70:	ldp	x2, x3, [x19, #48]
    6b74:	mov	x19, x1
    6b78:	stp	x2, x3, [x1, #48]
    6b7c:	mov	x0, x19
    6b80:	ldr	x19, [sp, #16]
    6b84:	ldp	x29, x30, [sp], #32
    6b88:	ret
    6b8c:	ldrh	w0, [x19, #50]
    6b90:	ldrh	w13, [x19, #16]
    6b94:	ldrh	w12, [x19, #18]
    6b98:	ldrh	w6, [x19, #40]
    6b9c:	ldrh	w5, [x19, #42]
    6ba0:	ldrh	w4, [x19, #44]
    6ba4:	ldrh	w3, [x19, #46]
    6ba8:	ldrh	w2, [x19, #48]
    6bac:	ldp	w11, w10, [x19, #20]
    6bb0:	ldp	w9, w8, [x19, #28]
    6bb4:	ldr	w7, [x19, #36]
    6bb8:	mov	x19, x1
    6bbc:	strh	w13, [x1, #16]
    6bc0:	strh	w12, [x1, #18]
    6bc4:	str	w11, [x1, #20]
    6bc8:	stp	x10, x9, [x1, #24]
    6bcc:	str	x8, [x1, #40]
    6bd0:	str	w7, [x1, #48]
    6bd4:	strh	w6, [x1, #52]
    6bd8:	strh	w5, [x1, #54]
    6bdc:	strh	w4, [x1, #56]
    6be0:	strh	w3, [x1, #58]
    6be4:	strh	w2, [x1, #60]
    6be8:	strh	w0, [x1, #62]
    6bec:	mov	x0, x19
    6bf0:	ldr	x19, [sp, #16]
    6bf4:	ldp	x29, x30, [sp], #32
    6bf8:	ret
    6bfc:	mov	w0, #0x4                   	// #4
    6c00:	mov	x19, #0x0                   	// #0
    6c04:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6c08:	b	6b7c <elf64_getehdr@@ELFUTILS_1.0+0xbc>
    6c0c:	mov	x19, #0x0                   	// #0
    6c10:	b	6b7c <elf64_getehdr@@ELFUTILS_1.0+0xbc>
    6c14:	mov	w0, #0x1a                  	// #26
    6c18:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6c1c:	b	6b7c <elf64_getehdr@@ELFUTILS_1.0+0xbc>

0000000000006c20 <gelf_getehdr@@ELFUTILS_1.0>:
    6c20:	cbz	x0, 6c28 <gelf_getehdr@@ELFUTILS_1.0+0x8>
    6c24:	b	6b28 <elf64_getehdr@@ELFUTILS_1.0+0x68>
    6c28:	ret
    6c2c:	nop

0000000000006c30 <elf32_newehdr@@ELFUTILS_1.0>:
    6c30:	cbz	x0, 6cb8 <elf32_newehdr@@ELFUTILS_1.0+0x88>
    6c34:	stp	x29, x30, [sp, #-16]!
    6c38:	mov	x1, x0
    6c3c:	mov	x29, sp
    6c40:	ldr	w0, [x0, #24]
    6c44:	cmp	w0, #0x3
    6c48:	b.ne	6ca8 <elf32_newehdr@@ELFUTILS_1.0+0x78>  // b.any
    6c4c:	ldr	w0, [x1, #32]
    6c50:	cbz	w0, 6c6c <elf32_newehdr@@ELFUTILS_1.0+0x3c>
    6c54:	cmp	w0, #0x1
    6c58:	b.ne	6cc0 <elf32_newehdr@@ELFUTILS_1.0+0x90>  // b.any
    6c5c:	ldr	x0, [x1, #72]
    6c60:	cbz	x0, 6c7c <elf32_newehdr@@ELFUTILS_1.0+0x4c>
    6c64:	ldp	x29, x30, [sp], #16
    6c68:	ret
    6c6c:	mov	w0, #0x1                   	// #1
    6c70:	str	w0, [x1, #32]
    6c74:	ldr	x0, [x1, #72]
    6c78:	cbnz	x0, 6c64 <elf32_newehdr@@ELFUTILS_1.0+0x34>
    6c7c:	add	x0, x1, #0x88
    6c80:	str	x0, [x1, #72]
    6c84:	stp	xzr, xzr, [x1, #136]
    6c88:	stp	xzr, xzr, [x0, #16]
    6c8c:	stp	xzr, xzr, [x0, #32]
    6c90:	str	wzr, [x0, #48]
    6c94:	ldr	w2, [x1, #116]
    6c98:	orr	w2, w2, #0x1
    6c9c:	str	w2, [x1, #116]
    6ca0:	ldp	x29, x30, [sp], #16
    6ca4:	ret
    6ca8:	mov	w0, #0x4                   	// #4
    6cac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6cb0:	mov	x0, #0x0                   	// #0
    6cb4:	b	6c64 <elf32_newehdr@@ELFUTILS_1.0+0x34>
    6cb8:	mov	x0, #0x0                   	// #0
    6cbc:	ret
    6cc0:	mov	w0, #0x15                  	// #21
    6cc4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6cc8:	mov	x0, #0x0                   	// #0
    6ccc:	b	6c64 <elf32_newehdr@@ELFUTILS_1.0+0x34>

0000000000006cd0 <elf64_newehdr@@ELFUTILS_1.0>:
    6cd0:	cbz	x0, 6d58 <elf64_newehdr@@ELFUTILS_1.0+0x88>
    6cd4:	stp	x29, x30, [sp, #-16]!
    6cd8:	mov	x1, x0
    6cdc:	mov	x29, sp
    6ce0:	ldr	w0, [x0, #24]
    6ce4:	cmp	w0, #0x3
    6ce8:	b.ne	6d48 <elf64_newehdr@@ELFUTILS_1.0+0x78>  // b.any
    6cec:	ldr	w0, [x1, #32]
    6cf0:	cbz	w0, 6d0c <elf64_newehdr@@ELFUTILS_1.0+0x3c>
    6cf4:	cmp	w0, #0x2
    6cf8:	b.ne	6d60 <elf64_newehdr@@ELFUTILS_1.0+0x90>  // b.any
    6cfc:	ldr	x0, [x1, #72]
    6d00:	cbz	x0, 6d1c <elf64_newehdr@@ELFUTILS_1.0+0x4c>
    6d04:	ldp	x29, x30, [sp], #16
    6d08:	ret
    6d0c:	mov	w0, #0x2                   	// #2
    6d10:	str	w0, [x1, #32]
    6d14:	ldr	x0, [x1, #72]
    6d18:	cbnz	x0, 6d04 <elf64_newehdr@@ELFUTILS_1.0+0x34>
    6d1c:	add	x0, x1, #0x88
    6d20:	str	x0, [x1, #72]
    6d24:	stp	xzr, xzr, [x1, #136]
    6d28:	stp	xzr, xzr, [x0, #16]
    6d2c:	stp	xzr, xzr, [x0, #32]
    6d30:	stp	xzr, xzr, [x0, #48]
    6d34:	ldr	w2, [x1, #116]
    6d38:	orr	w2, w2, #0x1
    6d3c:	str	w2, [x1, #116]
    6d40:	ldp	x29, x30, [sp], #16
    6d44:	ret
    6d48:	mov	w0, #0x4                   	// #4
    6d4c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6d50:	mov	x0, #0x0                   	// #0
    6d54:	b	6d04 <elf64_newehdr@@ELFUTILS_1.0+0x34>
    6d58:	mov	x0, #0x0                   	// #0
    6d5c:	ret
    6d60:	mov	w0, #0x15                  	// #21
    6d64:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6d68:	mov	x0, #0x0                   	// #0
    6d6c:	b	6d04 <elf64_newehdr@@ELFUTILS_1.0+0x34>

0000000000006d70 <gelf_newehdr@@ELFUTILS_1.0>:
    6d70:	cmp	w1, #0x1
    6d74:	b.eq	6d7c <gelf_newehdr@@ELFUTILS_1.0+0xc>  // b.none
    6d78:	b	6cd0 <elf64_newehdr@@ELFUTILS_1.0>
    6d7c:	b	6c30 <elf32_newehdr@@ELFUTILS_1.0>

0000000000006d80 <gelf_update_ehdr@@ELFUTILS_1.0>:
    6d80:	cbz	x0, 6e8c <gelf_update_ehdr@@ELFUTILS_1.0+0x10c>
    6d84:	stp	x29, x30, [sp, #-16]!
    6d88:	mov	x2, x0
    6d8c:	mov	x29, sp
    6d90:	ldr	w0, [x0, #24]
    6d94:	cmp	w0, #0x3
    6d98:	b.ne	6ea8 <gelf_update_ehdr@@ELFUTILS_1.0+0x128>  // b.any
    6d9c:	ldr	w3, [x2, #32]
    6da0:	ldr	x0, [x2, #72]
    6da4:	cmp	w3, #0x1
    6da8:	b.eq	6de8 <gelf_update_ehdr@@ELFUTILS_1.0+0x68>  // b.none
    6dac:	cbz	x0, 6e94 <gelf_update_ehdr@@ELFUTILS_1.0+0x114>
    6db0:	ldp	x4, x5, [x1]
    6db4:	stp	x4, x5, [x0]
    6db8:	ldp	x4, x5, [x1, #16]
    6dbc:	stp	x4, x5, [x0, #16]
    6dc0:	ldp	x4, x5, [x1, #32]
    6dc4:	stp	x4, x5, [x0, #32]
    6dc8:	ldp	x4, x5, [x1, #48]
    6dcc:	stp	x4, x5, [x0, #48]
    6dd0:	ldr	w1, [x2, #116]
    6dd4:	mov	w0, #0x1                   	// #1
    6dd8:	orr	w1, w1, w0
    6ddc:	str	w1, [x2, #116]
    6de0:	ldp	x29, x30, [sp], #16
    6de4:	ret
    6de8:	cbz	x0, 6e94 <gelf_update_ehdr@@ELFUTILS_1.0+0x114>
    6dec:	ldr	x4, [x1, #24]
    6df0:	mov	x3, #0xffffffff            	// #4294967295
    6df4:	cmp	x4, x3
    6df8:	b.hi	6e7c <gelf_update_ehdr@@ELFUTILS_1.0+0xfc>  // b.pmore
    6dfc:	ldr	x4, [x1, #32]
    6e00:	cmp	x4, x3
    6e04:	b.hi	6e7c <gelf_update_ehdr@@ELFUTILS_1.0+0xfc>  // b.pmore
    6e08:	ldr	x4, [x1, #40]
    6e0c:	cmp	x4, x3
    6e10:	b.hi	6e7c <gelf_update_ehdr@@ELFUTILS_1.0+0xfc>  // b.pmore
    6e14:	ldp	x4, x5, [x1]
    6e18:	stp	x4, x5, [x0]
    6e1c:	ldrh	w5, [x1, #16]
    6e20:	ldrh	w4, [x1, #18]
    6e24:	ldr	w3, [x1, #20]
    6e28:	ldrh	w7, [x1, #52]
    6e2c:	ldrh	w6, [x1, #54]
    6e30:	ldr	w8, [x1, #48]
    6e34:	ldp	x11, x10, [x1, #24]
    6e38:	ldr	x9, [x1, #40]
    6e3c:	strh	w5, [x0, #16]
    6e40:	ldrh	w5, [x1, #56]
    6e44:	strh	w4, [x0, #18]
    6e48:	ldrh	w4, [x1, #58]
    6e4c:	str	w3, [x0, #20]
    6e50:	ldrh	w3, [x1, #60]
    6e54:	ldrh	w1, [x1, #62]
    6e58:	stp	w11, w10, [x0, #24]
    6e5c:	stp	w9, w8, [x0, #32]
    6e60:	strh	w7, [x0, #40]
    6e64:	strh	w6, [x0, #42]
    6e68:	strh	w5, [x0, #44]
    6e6c:	strh	w4, [x0, #46]
    6e70:	strh	w3, [x0, #48]
    6e74:	strh	w1, [x0, #50]
    6e78:	b	6dd0 <gelf_update_ehdr@@ELFUTILS_1.0+0x50>
    6e7c:	mov	w0, #0x21                  	// #33
    6e80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6e84:	mov	w0, #0x0                   	// #0
    6e88:	b	6de0 <gelf_update_ehdr@@ELFUTILS_1.0+0x60>
    6e8c:	mov	w0, #0x0                   	// #0
    6e90:	ret
    6e94:	mov	w0, #0x1a                  	// #26
    6e98:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6e9c:	mov	w0, #0x0                   	// #0
    6ea0:	ldp	x29, x30, [sp], #16
    6ea4:	ret
    6ea8:	mov	w0, #0x4                   	// #4
    6eac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6eb0:	mov	w0, #0x0                   	// #0
    6eb4:	b	6de0 <gelf_update_ehdr@@ELFUTILS_1.0+0x60>
    6eb8:	stp	x29, x30, [sp, #-128]!
    6ebc:	mov	x29, sp
    6ec0:	stp	x19, x20, [sp, #16]
    6ec4:	ldr	x20, [x0, #88]
    6ec8:	cbz	x20, 6edc <gelf_update_ehdr@@ELFUTILS_1.0+0x15c>
    6ecc:	mov	x0, x20
    6ed0:	ldp	x19, x20, [sp, #16]
    6ed4:	ldp	x29, x30, [sp], #128
    6ed8:	ret
    6edc:	mov	x19, x0
    6ee0:	ldr	w0, [x0, #32]
    6ee4:	cbnz	w0, 6f8c <gelf_update_ehdr@@ELFUTILS_1.0+0x20c>
    6ee8:	stp	x21, x22, [sp, #32]
    6eec:	mov	w0, #0x1                   	// #1
    6ef0:	str	w0, [x19, #32]
    6ef4:	add	x1, sp, #0x78
    6ef8:	mov	x0, x19
    6efc:	ldr	x22, [x19, #72]
    6f00:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    6f04:	cbnz	w0, 6fb8 <gelf_update_ehdr@@ELFUTILS_1.0+0x238>
    6f08:	ldr	x21, [sp, #120]
    6f0c:	cbz	x21, 6f9c <gelf_update_ehdr@@ELFUTILS_1.0+0x21c>
    6f10:	ldr	w0, [x22, #28]
    6f14:	cbz	w0, 6f9c <gelf_update_ehdr@@ELFUTILS_1.0+0x21c>
    6f18:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
    6f1c:	cmp	x21, x1
    6f20:	b.hi	6fc4 <gelf_update_ehdr@@ELFUTILS_1.0+0x244>  // b.pmore
    6f24:	ldr	x1, [x19, #48]
    6f28:	mov	w2, w0
    6f2c:	cmp	x1, w0, uxtw
    6f30:	b.cc	6fc4 <gelf_update_ehdr@@ELFUTILS_1.0+0x244>  // b.lo, b.ul, b.last
    6f34:	stp	x23, x24, [sp, #48]
    6f38:	sub	x0, x1, x2
    6f3c:	lsl	x23, x21, #5
    6f40:	cmp	x0, x21, lsl #5
    6f44:	b.cc	6fc0 <gelf_update_ehdr@@ELFUTILS_1.0+0x240>  // b.lo, b.ul, b.last
    6f48:	ldr	x24, [x19]
    6f4c:	cbz	x24, 70ac <gelf_update_ehdr@@ELFUTILS_1.0+0x32c>
    6f50:	cmp	x2, x1
    6f54:	b.eq	727c <gelf_update_ehdr@@ELFUTILS_1.0+0x4fc>  // b.none
    6f58:	ldr	x1, [x19, #40]
    6f5c:	ldrb	w0, [x22, #5]
    6f60:	add	x2, x2, x1
    6f64:	cmp	w0, #0x1
    6f68:	add	x24, x24, x2
    6f6c:	b.ne	6fd4 <gelf_update_ehdr@@ELFUTILS_1.0+0x254>  // b.any
    6f70:	tst	x24, #0x3
    6f74:	b.ne	6fd4 <gelf_update_ehdr@@ELFUTILS_1.0+0x254>  // b.any
    6f78:	mov	x20, x24
    6f7c:	ldp	x21, x22, [sp, #32]
    6f80:	str	x24, [x19, #88]
    6f84:	ldp	x23, x24, [sp, #48]
    6f88:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    6f8c:	cmp	w0, #0x1
    6f90:	b.ne	6fac <gelf_update_ehdr@@ELFUTILS_1.0+0x22c>  // b.any
    6f94:	stp	x21, x22, [sp, #32]
    6f98:	b	6ef4 <gelf_update_ehdr@@ELFUTILS_1.0+0x174>
    6f9c:	mov	w0, #0x2a                  	// #42
    6fa0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6fa4:	ldp	x21, x22, [sp, #32]
    6fa8:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    6fac:	mov	w0, #0x15                  	// #21
    6fb0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6fb4:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    6fb8:	ldp	x21, x22, [sp, #32]
    6fbc:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    6fc0:	ldp	x23, x24, [sp, #48]
    6fc4:	mov	w0, #0x21                  	// #33
    6fc8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    6fcc:	ldp	x21, x22, [sp, #32]
    6fd0:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    6fd4:	mov	x0, x23
    6fd8:	stp	x25, x26, [sp, #64]
    6fdc:	bl	30c0 <malloc@plt>
    6fe0:	str	x0, [x19, #88]
    6fe4:	mov	x25, x0
    6fe8:	cbz	x0, 72a8 <gelf_update_ehdr@@ELFUTILS_1.0+0x528>
    6fec:	ldr	w1, [x19, #120]
    6ff0:	mov	w2, #0x81                  	// #129
    6ff4:	orr	w1, w1, w2
    6ff8:	str	w1, [x19, #120]
    6ffc:	ldrb	w1, [x22, #5]
    7000:	cmp	w1, #0x1
    7004:	b.eq	725c <gelf_update_ehdr@@ELFUTILS_1.0+0x4dc>  // b.none
    7008:	ands	x22, x24, #0x3
    700c:	b.ne	7220 <gelf_update_ehdr@@ELFUTILS_1.0+0x4a0>  // b.any
    7010:	mov	x1, x24
    7014:	mov	x0, x25
    7018:	mov	x3, #0x0                   	// #0
    701c:	nop
    7020:	ldr	w2, [x1]
    7024:	add	x3, x3, #0x1
    7028:	cmp	x21, x3
    702c:	add	x1, x1, #0x20
    7030:	rev	w2, w2
    7034:	str	w2, [x0]
    7038:	add	x0, x0, #0x20
    703c:	ldur	w2, [x1, #-28]
    7040:	rev	w2, w2
    7044:	stur	w2, [x0, #-28]
    7048:	ldur	w2, [x1, #-24]
    704c:	rev	w2, w2
    7050:	stur	w2, [x0, #-24]
    7054:	ldur	w2, [x1, #-20]
    7058:	rev	w2, w2
    705c:	stur	w2, [x0, #-20]
    7060:	ldur	w2, [x1, #-16]
    7064:	rev	w2, w2
    7068:	stur	w2, [x0, #-16]
    706c:	ldur	w2, [x1, #-12]
    7070:	rev	w2, w2
    7074:	stur	w2, [x0, #-12]
    7078:	ldur	w2, [x1, #-8]
    707c:	rev	w2, w2
    7080:	stur	w2, [x0, #-8]
    7084:	ldur	w2, [x1, #-4]
    7088:	rev	w2, w2
    708c:	stur	w2, [x0, #-4]
    7090:	b.hi	7020 <gelf_update_ehdr@@ELFUTILS_1.0+0x2a0>  // b.pmore
    7094:	mov	x20, x25
    7098:	cbnz	x22, 7240 <gelf_update_ehdr@@ELFUTILS_1.0+0x4c0>
    709c:	ldp	x21, x22, [sp, #32]
    70a0:	ldp	x23, x24, [sp, #48]
    70a4:	ldp	x25, x26, [sp, #64]
    70a8:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    70ac:	stp	x25, x26, [sp, #64]
    70b0:	ldr	w26, [x19, #36]
    70b4:	cmn	w26, #0x1
    70b8:	b.eq	7290 <gelf_update_ehdr@@ELFUTILS_1.0+0x510>  // b.none
    70bc:	mov	x0, x23
    70c0:	bl	30c0 <malloc@plt>
    70c4:	str	x0, [x19, #88]
    70c8:	mov	x24, x0
    70cc:	str	x0, [sp, #104]
    70d0:	cbz	x0, 72a8 <gelf_update_ehdr@@ELFUTILS_1.0+0x528>
    70d4:	ldr	w0, [x19, #120]
    70d8:	mov	x25, #0x0                   	// #0
    70dc:	stp	x27, x28, [sp, #80]
    70e0:	mov	x28, x23
    70e4:	orr	w0, w0, #0x80
    70e8:	str	w0, [x19, #120]
    70ec:	ldr	x1, [x19, #40]
    70f0:	ldr	w27, [x22, #28]
    70f4:	add	x27, x27, x1
    70f8:	mov	x21, x27
    70fc:	mov	x3, x21
    7100:	mov	x2, x28
    7104:	mov	x1, x24
    7108:	mov	w0, w26
    710c:	bl	3250 <pread@plt>
    7110:	cmn	x0, #0x1
    7114:	b.eq	7158 <gelf_update_ehdr@@ELFUTILS_1.0+0x3d8>  // b.none
    7118:	cmp	x0, #0x0
    711c:	b.le	7190 <gelf_update_ehdr@@ELFUTILS_1.0+0x410>
    7120:	add	x25, x25, x0
    7124:	cmp	x23, x25
    7128:	b.ls	7194 <gelf_update_ehdr@@ELFUTILS_1.0+0x414>  // b.plast
    712c:	ldr	x0, [sp, #104]
    7130:	add	x21, x27, x25
    7134:	sub	x28, x23, x25
    7138:	mov	x3, x21
    713c:	add	x24, x0, x25
    7140:	mov	x2, x28
    7144:	mov	x1, x24
    7148:	mov	w0, w26
    714c:	bl	3250 <pread@plt>
    7150:	cmn	x0, #0x1
    7154:	b.ne	7118 <gelf_update_ehdr@@ELFUTILS_1.0+0x398>  // b.any
    7158:	bl	3340 <__errno_location@plt>
    715c:	ldr	w0, [x0]
    7160:	cmp	w0, #0x4
    7164:	b.eq	70fc <gelf_update_ehdr@@ELFUTILS_1.0+0x37c>  // b.none
    7168:	mov	w0, #0x13                  	// #19
    716c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7170:	ldr	x0, [x19, #88]
    7174:	bl	3200 <free@plt>
    7178:	ldp	x21, x22, [sp, #32]
    717c:	ldp	x23, x24, [sp, #48]
    7180:	ldp	x25, x26, [sp, #64]
    7184:	ldp	x27, x28, [sp, #80]
    7188:	str	xzr, [x19, #88]
    718c:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    7190:	csel	x25, x25, x0, eq  // eq = none
    7194:	cmp	x23, x25
    7198:	b.ne	7168 <gelf_update_ehdr@@ELFUTILS_1.0+0x3e8>  // b.any
    719c:	ldrb	w0, [x22, #5]
    71a0:	ldr	x20, [x19, #88]
    71a4:	cmp	w0, #0x1
    71a8:	b.eq	720c <gelf_update_ehdr@@ELFUTILS_1.0+0x48c>  // b.none
    71ac:	ldr	x9, [sp, #120]
    71b0:	cbz	x9, 720c <gelf_update_ehdr@@ELFUTILS_1.0+0x48c>
    71b4:	add	x9, x20, x9, lsl #5
    71b8:	mov	x0, x20
    71bc:	nop
    71c0:	ldp	w8, w7, [x0]
    71c4:	ldp	w6, w5, [x0, #8]
    71c8:	rev	w8, w8
    71cc:	ldp	w4, w3, [x0, #16]
    71d0:	rev	w7, w7
    71d4:	ldp	w2, w1, [x0, #24]
    71d8:	rev	w6, w6
    71dc:	rev	w5, w5
    71e0:	rev	w4, w4
    71e4:	rev	w3, w3
    71e8:	rev	w2, w2
    71ec:	rev	w1, w1
    71f0:	stp	w8, w7, [x0]
    71f4:	stp	w6, w5, [x0, #8]
    71f8:	stp	w4, w3, [x0, #16]
    71fc:	stp	w2, w1, [x0, #24]
    7200:	add	x0, x0, #0x20
    7204:	cmp	x9, x0
    7208:	b.ne	71c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x440>  // b.any
    720c:	ldp	x21, x22, [sp, #32]
    7210:	ldp	x23, x24, [sp, #48]
    7214:	ldp	x25, x26, [sp, #64]
    7218:	ldp	x27, x28, [sp, #80]
    721c:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    7220:	mov	x0, x23
    7224:	bl	30c0 <malloc@plt>
    7228:	cbz	x0, 72a8 <gelf_update_ehdr@@ELFUTILS_1.0+0x528>
    722c:	mov	x1, x24
    7230:	mov	x2, x23
    7234:	mov	x24, x0
    7238:	bl	3020 <memcpy@plt>
    723c:	b	7010 <gelf_update_ehdr@@ELFUTILS_1.0+0x290>
    7240:	mov	x0, x24
    7244:	bl	3200 <free@plt>
    7248:	ldp	x21, x22, [sp, #32]
    724c:	ldp	x23, x24, [sp, #48]
    7250:	ldp	x25, x26, [sp, #64]
    7254:	ldr	x20, [x19, #88]
    7258:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    725c:	mov	x2, x23
    7260:	mov	x1, x24
    7264:	mov	x20, x0
    7268:	bl	3020 <memcpy@plt>
    726c:	ldp	x21, x22, [sp, #32]
    7270:	ldp	x23, x24, [sp, #48]
    7274:	ldp	x25, x26, [sp, #64]
    7278:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    727c:	mov	w0, #0x29                  	// #41
    7280:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7284:	ldp	x21, x22, [sp, #32]
    7288:	ldp	x23, x24, [sp, #48]
    728c:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    7290:	mov	w0, #0x1b                  	// #27
    7294:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7298:	ldp	x21, x22, [sp, #32]
    729c:	ldp	x23, x24, [sp, #48]
    72a0:	ldp	x25, x26, [sp, #64]
    72a4:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    72a8:	mov	w0, #0x8                   	// #8
    72ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    72b0:	ldp	x21, x22, [sp, #32]
    72b4:	ldp	x23, x24, [sp, #48]
    72b8:	ldp	x25, x26, [sp, #64]
    72bc:	b	6ecc <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>

00000000000072c0 <elf32_getphdr@@ELFUTILS_1.0>:
    72c0:	cbz	x0, 7300 <elf32_getphdr@@ELFUTILS_1.0+0x40>
    72c4:	ldr	w2, [x0, #24]
    72c8:	cmp	w2, #0x3
    72cc:	b.ne	72e0 <elf32_getphdr@@ELFUTILS_1.0+0x20>  // b.any
    72d0:	ldr	x1, [x0, #88]
    72d4:	cbz	x1, 7308 <elf32_getphdr@@ELFUTILS_1.0+0x48>
    72d8:	mov	x0, x1
    72dc:	ret
    72e0:	stp	x29, x30, [sp, #-16]!
    72e4:	mov	w0, #0x4                   	// #4
    72e8:	mov	x29, sp
    72ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    72f0:	mov	x1, #0x0                   	// #0
    72f4:	mov	x0, x1
    72f8:	ldp	x29, x30, [sp], #16
    72fc:	ret
    7300:	mov	x1, #0x0                   	// #0
    7304:	b	72d8 <elf32_getphdr@@ELFUTILS_1.0+0x18>
    7308:	b	6eb8 <gelf_update_ehdr@@ELFUTILS_1.0+0x138>
    730c:	nop
    7310:	stp	x29, x30, [sp, #-128]!
    7314:	mov	x29, sp
    7318:	stp	x19, x20, [sp, #16]
    731c:	ldr	x20, [x0, #88]
    7320:	cbz	x20, 7334 <elf32_getphdr@@ELFUTILS_1.0+0x74>
    7324:	mov	x0, x20
    7328:	ldp	x19, x20, [sp, #16]
    732c:	ldp	x29, x30, [sp], #128
    7330:	ret
    7334:	mov	x19, x0
    7338:	ldr	w0, [x0, #32]
    733c:	cbnz	w0, 73f4 <elf32_getphdr@@ELFUTILS_1.0+0x134>
    7340:	stp	x23, x24, [sp, #48]
    7344:	mov	w0, #0x2                   	// #2
    7348:	str	w0, [x19, #32]
    734c:	add	x1, sp, #0x78
    7350:	mov	x0, x19
    7354:	ldr	x23, [x19, #72]
    7358:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    735c:	cbnz	w0, 7424 <elf32_getphdr@@ELFUTILS_1.0+0x164>
    7360:	stp	x21, x22, [sp, #32]
    7364:	ldr	x21, [sp, #120]
    7368:	cbz	x21, 7404 <elf32_getphdr@@ELFUTILS_1.0+0x144>
    736c:	ldr	x0, [x23, #32]
    7370:	cbz	x0, 7404 <elf32_getphdr@@ELFUTILS_1.0+0x144>
    7374:	mov	x1, #0x2492                	// #9362
    7378:	movk	x1, #0x9249, lsl #16
    737c:	movk	x1, #0x4924, lsl #32
    7380:	movk	x1, #0x492, lsl #48
    7384:	cmp	x21, x1
    7388:	b.hi	742c <elf32_getphdr@@ELFUTILS_1.0+0x16c>  // b.pmore
    738c:	ldr	x1, [x19, #48]
    7390:	cmp	x0, x1
    7394:	b.hi	742c <elf32_getphdr@@ELFUTILS_1.0+0x16c>  // b.pmore
    7398:	lsl	x22, x21, #3
    739c:	sub	x2, x1, x0
    73a0:	sub	x22, x22, x21
    73a4:	cmp	x2, x22, lsl #3
    73a8:	lsl	x22, x22, #3
    73ac:	b.cc	742c <elf32_getphdr@@ELFUTILS_1.0+0x16c>  // b.lo, b.ul, b.last
    73b0:	ldr	x24, [x19]
    73b4:	cbz	x24, 7514 <elf32_getphdr@@ELFUTILS_1.0+0x254>
    73b8:	cmp	x0, x1
    73bc:	b.eq	76ec <elf32_getphdr@@ELFUTILS_1.0+0x42c>  // b.none
    73c0:	ldr	x2, [x19, #40]
    73c4:	ldrb	w1, [x23, #5]
    73c8:	add	x0, x0, x2
    73cc:	cmp	w1, #0x1
    73d0:	add	x24, x24, x0
    73d4:	b.ne	7440 <elf32_getphdr@@ELFUTILS_1.0+0x180>  // b.any
    73d8:	tst	x24, #0x7
    73dc:	b.ne	7440 <elf32_getphdr@@ELFUTILS_1.0+0x180>  // b.any
    73e0:	mov	x20, x24
    73e4:	ldp	x21, x22, [sp, #32]
    73e8:	str	x24, [x19, #88]
    73ec:	ldp	x23, x24, [sp, #48]
    73f0:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    73f4:	cmp	w0, #0x2
    73f8:	b.ne	7418 <elf32_getphdr@@ELFUTILS_1.0+0x158>  // b.any
    73fc:	stp	x23, x24, [sp, #48]
    7400:	b	734c <elf32_getphdr@@ELFUTILS_1.0+0x8c>
    7404:	mov	w0, #0x2a                  	// #42
    7408:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    740c:	ldp	x21, x22, [sp, #32]
    7410:	ldp	x23, x24, [sp, #48]
    7414:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    7418:	mov	w0, #0x15                  	// #21
    741c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7420:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    7424:	ldp	x23, x24, [sp, #48]
    7428:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    742c:	mov	w0, #0x21                  	// #33
    7430:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7434:	ldp	x21, x22, [sp, #32]
    7438:	ldp	x23, x24, [sp, #48]
    743c:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    7440:	mov	x0, x22
    7444:	stp	x25, x26, [sp, #64]
    7448:	bl	30c0 <malloc@plt>
    744c:	str	x0, [x19, #88]
    7450:	mov	x25, x0
    7454:	cbz	x0, 7718 <elf32_getphdr@@ELFUTILS_1.0+0x458>
    7458:	ldr	w1, [x19, #120]
    745c:	mov	w2, #0x81                  	// #129
    7460:	orr	w1, w1, w2
    7464:	str	w1, [x19, #120]
    7468:	ldrb	w1, [x23, #5]
    746c:	cmp	w1, #0x1
    7470:	b.eq	76cc <elf32_getphdr@@ELFUTILS_1.0+0x40c>  // b.none
    7474:	ands	x23, x24, #0x7
    7478:	b.ne	7690 <elf32_getphdr@@ELFUTILS_1.0+0x3d0>  // b.any
    747c:	mov	x1, x24
    7480:	mov	x0, x25
    7484:	mov	x4, #0x0                   	// #0
    7488:	ldr	x3, [x1, #8]
    748c:	add	x4, x4, #0x1
    7490:	ldr	w2, [x1]
    7494:	cmp	x21, x4
    7498:	rev	x3, x3
    749c:	str	x3, [x0, #8]
    74a0:	rev	w2, w2
    74a4:	str	w2, [x0]
    74a8:	ldr	x2, [x1, #16]
    74ac:	add	x0, x0, #0x38
    74b0:	ldr	w3, [x1, #4]
    74b4:	add	x1, x1, #0x38
    74b8:	rev	x2, x2
    74bc:	stur	x2, [x0, #-40]
    74c0:	rev	w3, w3
    74c4:	ldur	x2, [x1, #-32]
    74c8:	rev	x2, x2
    74cc:	stur	x2, [x0, #-32]
    74d0:	ldur	x2, [x1, #-24]
    74d4:	rev	x2, x2
    74d8:	stur	x2, [x0, #-24]
    74dc:	ldur	x2, [x1, #-16]
    74e0:	stur	w3, [x0, #-52]
    74e4:	rev	x2, x2
    74e8:	stur	x2, [x0, #-16]
    74ec:	ldur	x2, [x1, #-8]
    74f0:	rev	x2, x2
    74f4:	stur	x2, [x0, #-8]
    74f8:	b.hi	7488 <elf32_getphdr@@ELFUTILS_1.0+0x1c8>  // b.pmore
    74fc:	mov	x20, x25
    7500:	cbnz	x23, 76b0 <elf32_getphdr@@ELFUTILS_1.0+0x3f0>
    7504:	ldp	x21, x22, [sp, #32]
    7508:	ldp	x23, x24, [sp, #48]
    750c:	ldp	x25, x26, [sp, #64]
    7510:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    7514:	stp	x25, x26, [sp, #64]
    7518:	ldr	w26, [x19, #36]
    751c:	cmn	w26, #0x1
    7520:	b.eq	7700 <elf32_getphdr@@ELFUTILS_1.0+0x440>  // b.none
    7524:	mov	x0, x22
    7528:	bl	30c0 <malloc@plt>
    752c:	str	x0, [x19, #88]
    7530:	mov	x25, x0
    7534:	cbz	x0, 7718 <elf32_getphdr@@ELFUTILS_1.0+0x458>
    7538:	mov	x24, x0
    753c:	ldr	w0, [x19, #120]
    7540:	stp	x27, x28, [sp, #80]
    7544:	mov	x28, x22
    7548:	orr	w0, w0, #0x80
    754c:	str	w0, [x19, #120]
    7550:	mov	x27, #0x0                   	// #0
    7554:	ldr	x1, [x19, #40]
    7558:	ldr	x0, [x23, #32]
    755c:	add	x0, x1, x0
    7560:	str	x0, [sp, #104]
    7564:	mov	x21, x0
    7568:	mov	x3, x21
    756c:	mov	x2, x28
    7570:	mov	x1, x24
    7574:	mov	w0, w26
    7578:	bl	3250 <pread@plt>
    757c:	cmn	x0, #0x1
    7580:	b.eq	75c4 <elf32_getphdr@@ELFUTILS_1.0+0x304>  // b.none
    7584:	cmp	x0, #0x0
    7588:	b.le	75fc <elf32_getphdr@@ELFUTILS_1.0+0x33c>
    758c:	add	x27, x27, x0
    7590:	cmp	x22, x27
    7594:	b.ls	7600 <elf32_getphdr@@ELFUTILS_1.0+0x340>  // b.plast
    7598:	ldr	x0, [sp, #104]
    759c:	sub	x28, x22, x27
    75a0:	add	x24, x25, x27
    75a4:	mov	x2, x28
    75a8:	add	x21, x0, x27
    75ac:	mov	x1, x24
    75b0:	mov	x3, x21
    75b4:	mov	w0, w26
    75b8:	bl	3250 <pread@plt>
    75bc:	cmn	x0, #0x1
    75c0:	b.ne	7584 <elf32_getphdr@@ELFUTILS_1.0+0x2c4>  // b.any
    75c4:	bl	3340 <__errno_location@plt>
    75c8:	ldr	w0, [x0]
    75cc:	cmp	w0, #0x4
    75d0:	b.eq	7568 <elf32_getphdr@@ELFUTILS_1.0+0x2a8>  // b.none
    75d4:	mov	w0, #0x13                  	// #19
    75d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    75dc:	ldr	x0, [x19, #88]
    75e0:	bl	3200 <free@plt>
    75e4:	ldp	x21, x22, [sp, #32]
    75e8:	ldp	x23, x24, [sp, #48]
    75ec:	ldp	x25, x26, [sp, #64]
    75f0:	ldp	x27, x28, [sp, #80]
    75f4:	str	xzr, [x19, #88]
    75f8:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    75fc:	csel	x27, x27, x0, eq  // eq = none
    7600:	cmp	x22, x27
    7604:	b.ne	75d4 <elf32_getphdr@@ELFUTILS_1.0+0x314>  // b.any
    7608:	ldrb	w0, [x23, #5]
    760c:	ldr	x20, [x19, #88]
    7610:	cmp	w0, #0x1
    7614:	b.eq	767c <elf32_getphdr@@ELFUTILS_1.0+0x3bc>  // b.none
    7618:	ldr	x1, [sp, #120]
    761c:	cbz	x1, 767c <elf32_getphdr@@ELFUTILS_1.0+0x3bc>
    7620:	lsl	x9, x1, #3
    7624:	mov	x0, x20
    7628:	sub	x9, x9, x1
    762c:	add	x9, x20, x9, lsl #3
    7630:	ldp	x6, x5, [x0, #8]
    7634:	ldp	x4, x3, [x0, #24]
    7638:	ldp	x2, x1, [x0, #40]
    763c:	ldp	w8, w7, [x0]
    7640:	rev	x6, x6
    7644:	rev	x5, x5
    7648:	rev	x4, x4
    764c:	rev	w8, w8
    7650:	rev	w7, w7
    7654:	rev	x3, x3
    7658:	rev	x2, x2
    765c:	rev	x1, x1
    7660:	stp	w8, w7, [x0]
    7664:	stp	x6, x5, [x0, #8]
    7668:	stp	x4, x3, [x0, #24]
    766c:	stp	x2, x1, [x0, #40]
    7670:	add	x0, x0, #0x38
    7674:	cmp	x9, x0
    7678:	b.ne	7630 <elf32_getphdr@@ELFUTILS_1.0+0x370>  // b.any
    767c:	ldp	x21, x22, [sp, #32]
    7680:	ldp	x23, x24, [sp, #48]
    7684:	ldp	x25, x26, [sp, #64]
    7688:	ldp	x27, x28, [sp, #80]
    768c:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    7690:	mov	x0, x22
    7694:	bl	30c0 <malloc@plt>
    7698:	cbz	x0, 7718 <elf32_getphdr@@ELFUTILS_1.0+0x458>
    769c:	mov	x1, x24
    76a0:	mov	x2, x22
    76a4:	mov	x24, x0
    76a8:	bl	3020 <memcpy@plt>
    76ac:	b	747c <elf32_getphdr@@ELFUTILS_1.0+0x1bc>
    76b0:	mov	x0, x24
    76b4:	bl	3200 <free@plt>
    76b8:	ldp	x21, x22, [sp, #32]
    76bc:	ldp	x23, x24, [sp, #48]
    76c0:	ldp	x25, x26, [sp, #64]
    76c4:	ldr	x20, [x19, #88]
    76c8:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    76cc:	mov	x2, x22
    76d0:	mov	x1, x24
    76d4:	mov	x20, x0
    76d8:	bl	3020 <memcpy@plt>
    76dc:	ldp	x21, x22, [sp, #32]
    76e0:	ldp	x23, x24, [sp, #48]
    76e4:	ldp	x25, x26, [sp, #64]
    76e8:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    76ec:	mov	w0, #0x29                  	// #41
    76f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    76f4:	ldp	x21, x22, [sp, #32]
    76f8:	ldp	x23, x24, [sp, #48]
    76fc:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    7700:	mov	w0, #0x1b                  	// #27
    7704:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7708:	ldp	x21, x22, [sp, #32]
    770c:	ldp	x23, x24, [sp, #48]
    7710:	ldp	x25, x26, [sp, #64]
    7714:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>
    7718:	mov	w0, #0x8                   	// #8
    771c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7720:	ldp	x21, x22, [sp, #32]
    7724:	ldp	x23, x24, [sp, #48]
    7728:	ldp	x25, x26, [sp, #64]
    772c:	b	7324 <elf32_getphdr@@ELFUTILS_1.0+0x64>

0000000000007730 <elf64_getphdr@@ELFUTILS_1.0>:
    7730:	cbz	x0, 7770 <elf64_getphdr@@ELFUTILS_1.0+0x40>
    7734:	ldr	w2, [x0, #24]
    7738:	cmp	w2, #0x3
    773c:	b.ne	7750 <elf64_getphdr@@ELFUTILS_1.0+0x20>  // b.any
    7740:	ldr	x1, [x0, #88]
    7744:	cbz	x1, 7778 <elf64_getphdr@@ELFUTILS_1.0+0x48>
    7748:	mov	x0, x1
    774c:	ret
    7750:	stp	x29, x30, [sp, #-16]!
    7754:	mov	w0, #0x4                   	// #4
    7758:	mov	x29, sp
    775c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7760:	mov	x1, #0x0                   	// #0
    7764:	mov	x0, x1
    7768:	ldp	x29, x30, [sp], #16
    776c:	ret
    7770:	mov	x1, #0x0                   	// #0
    7774:	b	7748 <elf64_getphdr@@ELFUTILS_1.0+0x18>
    7778:	b	7310 <elf32_getphdr@@ELFUTILS_1.0+0x50>
    777c:	nop

0000000000007780 <gelf_getphdr@@ELFUTILS_1.0>:
    7780:	stp	x29, x30, [sp, #-64]!
    7784:	mov	x29, sp
    7788:	stp	x21, x22, [sp, #32]
    778c:	cbz	x0, 78e0 <gelf_getphdr@@ELFUTILS_1.0+0x160>
    7790:	mov	w21, w1
    7794:	ldr	w1, [x0, #24]
    7798:	stp	x19, x20, [sp, #16]
    779c:	mov	x19, x0
    77a0:	cmp	w1, #0x3
    77a4:	b.ne	78cc <gelf_getphdr@@ELFUTILS_1.0+0x14c>  // b.any
    77a8:	mov	x20, x2
    77ac:	cbz	x2, 78e8 <gelf_getphdr@@ELFUTILS_1.0+0x168>
    77b0:	ldr	w1, [x0, #32]
    77b4:	ldr	x22, [x0, #88]
    77b8:	cmp	w1, #0x1
    77bc:	b.eq	7820 <gelf_getphdr@@ELFUTILS_1.0+0xa0>  // b.none
    77c0:	cbz	x22, 78b8 <gelf_getphdr@@ELFUTILS_1.0+0x138>
    77c4:	mov	x0, x19
    77c8:	add	x1, sp, #0x38
    77cc:	bl	10838 <gelf_update_verdaux@@ELFUTILS_1.0+0x128>
    77d0:	cbnz	w0, 7850 <gelf_getphdr@@ELFUTILS_1.0+0xd0>
    77d4:	ldr	x0, [sp, #56]
    77d8:	cmp	x0, w21, sxtw
    77dc:	b.ls	7850 <gelf_getphdr@@ELFUTILS_1.0+0xd0>  // b.plast
    77e0:	mov	w1, #0x38                  	// #56
    77e4:	smaddl	x21, w21, w1, x22
    77e8:	mov	x22, x20
    77ec:	ldp	x0, x1, [x21]
    77f0:	stp	x0, x1, [x20]
    77f4:	ldp	x0, x1, [x21, #16]
    77f8:	stp	x0, x1, [x20, #16]
    77fc:	ldp	x0, x1, [x21, #32]
    7800:	stp	x0, x1, [x20, #32]
    7804:	ldr	x0, [x21, #48]
    7808:	str	x0, [x20, #48]
    780c:	ldp	x19, x20, [sp, #16]
    7810:	mov	x0, x22
    7814:	ldp	x21, x22, [sp, #32]
    7818:	ldp	x29, x30, [sp], #64
    781c:	ret
    7820:	cbnz	x22, 7830 <gelf_getphdr@@ELFUTILS_1.0+0xb0>
    7824:	bl	72c0 <elf32_getphdr@@ELFUTILS_1.0>
    7828:	mov	x22, x0
    782c:	cbz	x0, 78c4 <gelf_getphdr@@ELFUTILS_1.0+0x144>
    7830:	mov	x0, x19
    7834:	add	x1, sp, #0x38
    7838:	bl	10838 <gelf_update_verdaux@@ELFUTILS_1.0+0x128>
    783c:	cbnz	w0, 7850 <gelf_getphdr@@ELFUTILS_1.0+0xd0>
    7840:	ldr	x0, [sp, #56]
    7844:	sxtw	x1, w21
    7848:	cmp	x0, w21, sxtw
    784c:	b.hi	7870 <gelf_getphdr@@ELFUTILS_1.0+0xf0>  // b.pmore
    7850:	mov	w0, #0x16                  	// #22
    7854:	mov	x22, #0x0                   	// #0
    7858:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    785c:	mov	x0, x22
    7860:	ldp	x19, x20, [sp, #16]
    7864:	ldp	x21, x22, [sp, #32]
    7868:	ldp	x29, x30, [sp], #64
    786c:	ret
    7870:	lsl	x1, x1, #5
    7874:	add	x0, x22, x1
    7878:	ldr	w7, [x22, x1]
    787c:	mov	x22, x20
    7880:	ldp	w6, w5, [x0, #4]
    7884:	ldp	w4, w3, [x0, #12]
    7888:	ldr	w2, [x0, #20]
    788c:	ldr	w1, [x0, #28]
    7890:	ldr	w0, [x0, #24]
    7894:	stp	w7, w0, [x20]
    7898:	mov	x0, x22
    789c:	stp	x6, x5, [x20, #8]
    78a0:	stp	x4, x3, [x20, #24]
    78a4:	stp	x2, x1, [x20, #40]
    78a8:	ldp	x19, x20, [sp, #16]
    78ac:	ldp	x21, x22, [sp, #32]
    78b0:	ldp	x29, x30, [sp], #64
    78b4:	ret
    78b8:	bl	7730 <elf64_getphdr@@ELFUTILS_1.0>
    78bc:	mov	x22, x0
    78c0:	cbnz	x0, 77c4 <gelf_getphdr@@ELFUTILS_1.0+0x44>
    78c4:	ldp	x19, x20, [sp, #16]
    78c8:	b	7810 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    78cc:	mov	w0, #0x4                   	// #4
    78d0:	mov	x22, #0x0                   	// #0
    78d4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    78d8:	ldp	x19, x20, [sp, #16]
    78dc:	b	7810 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    78e0:	mov	x22, #0x0                   	// #0
    78e4:	b	7810 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    78e8:	mov	w0, #0x17                  	// #23
    78ec:	mov	x22, #0x0                   	// #0
    78f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    78f4:	ldp	x19, x20, [sp, #16]
    78f8:	b	7810 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    78fc:	nop

0000000000007900 <elf32_newphdr@@ELFUTILS_1.0>:
    7900:	stp	x29, x30, [sp, #-64]!
    7904:	mov	x29, sp
    7908:	stp	x21, x22, [sp, #32]
    790c:	cbz	x0, 7a84 <elf32_newphdr@@ELFUTILS_1.0+0x184>
    7910:	stp	x19, x20, [sp, #16]
    7914:	mov	x19, x0
    7918:	ldr	w0, [x0, #24]
    791c:	cmp	w0, #0x3
    7920:	b.ne	7a98 <elf32_newphdr@@ELFUTILS_1.0+0x198>  // b.any
    7924:	mov	x20, x1
    7928:	tst	x1, #0xffffffff00000000
    792c:	b.ne	7aac <elf32_newphdr@@ELFUTILS_1.0+0x1ac>  // b.any
    7930:	ldr	w0, [x19, #32]
    7934:	cbz	w0, 79b0 <elf32_newphdr@@ELFUTILS_1.0+0xb0>
    7938:	cmp	w0, #0x1
    793c:	b.ne	7b10 <elf32_newphdr@@ELFUTILS_1.0+0x210>  // b.any
    7940:	ldr	x21, [x19, #72]
    7944:	cbz	x21, 7b00 <elf32_newphdr@@ELFUTILS_1.0+0x200>
    7948:	cbnz	x20, 79bc <elf32_newphdr@@ELFUTILS_1.0+0xbc>
    794c:	ldr	x0, [x19, #88]
    7950:	cbz	x0, 7a80 <elf32_newphdr@@ELFUTILS_1.0+0x180>
    7954:	ldr	w1, [x19, #120]
    7958:	tbnz	w1, #7, 7a74 <elf32_newphdr@@ELFUTILS_1.0+0x174>
    795c:	str	xzr, [x19, #88]
    7960:	strh	wzr, [x21, #44]
    7964:	ldr	w0, [x19, #200]
    7968:	cbnz	w0, 7a50 <elf32_newphdr@@ELFUTILS_1.0+0x150>
    796c:	ldr	x2, [x19, #72]
    7970:	mov	w3, #0x20                  	// #32
    7974:	ldr	w1, [x19, #56]
    7978:	mov	w0, #0x0                   	// #0
    797c:	mov	x21, #0x0                   	// #0
    7980:	strh	w3, [x2, #42]
    7984:	orr	w1, w1, #0x1
    7988:	str	w1, [x19, #56]
    798c:	ldr	w1, [x19, #120]
    7990:	orr	w1, w1, #0x1
    7994:	str	w1, [x19, #120]
    7998:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    799c:	ldp	x19, x20, [sp, #16]
    79a0:	mov	x0, x21
    79a4:	ldp	x21, x22, [sp, #32]
    79a8:	ldp	x29, x30, [sp], #64
    79ac:	ret
    79b0:	mov	w0, #0x1                   	// #1
    79b4:	str	w0, [x19, #32]
    79b8:	b	7940 <elf32_newphdr@@ELFUTILS_1.0+0x40>
    79bc:	ldrh	w1, [x21, #44]
    79c0:	mov	x0, #0xffff                	// #65535
    79c4:	cmp	x1, x20
    79c8:	ccmp	x20, x0, #0x4, eq  // eq = none
    79cc:	b.ne	7ac0 <elf32_newphdr@@ELFUTILS_1.0+0x1c0>  // b.any
    79d0:	mov	x0, #0xfffe                	// #65534
    79d4:	cmp	x20, x0
    79d8:	b.hi	7b24 <elf32_newphdr@@ELFUTILS_1.0+0x224>  // b.pmore
    79dc:	ldr	x0, [x19, #88]
    79e0:	lsl	x22, x20, #5
    79e4:	mov	x1, x22
    79e8:	bl	3160 <realloc@plt>
    79ec:	mov	x21, x0
    79f0:	cbz	x0, 7a60 <elf32_newphdr@@ELFUTILS_1.0+0x160>
    79f4:	ldr	x0, [x19, #72]
    79f8:	str	x21, [x19, #88]
    79fc:	strh	w20, [x0, #44]
    7a00:	mov	x2, x22
    7a04:	mov	x0, x21
    7a08:	mov	w1, #0x0                   	// #0
    7a0c:	bl	3100 <memset@plt>
    7a10:	ldr	x0, [x19, #72]
    7a14:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7a18:	ldr	w1, [x19, #56]
    7a1c:	mov	w2, #0x81                  	// #129
    7a20:	ldr	x3, [x3, #3368]
    7a24:	strh	w3, [x0, #42]
    7a28:	orr	w1, w1, #0x1
    7a2c:	str	w1, [x19, #56]
    7a30:	ldr	w0, [x19, #120]
    7a34:	orr	w0, w0, w2
    7a38:	str	w0, [x19, #120]
    7a3c:	mov	x0, x21
    7a40:	ldp	x19, x20, [sp, #16]
    7a44:	ldp	x21, x22, [sp, #32]
    7a48:	ldp	x29, x30, [sp], #64
    7a4c:	ret
    7a50:	ldr	x0, [x19, #360]
    7a54:	str	wzr, [x0, #28]
    7a58:	b	796c <elf32_newphdr@@ELFUTILS_1.0+0x6c>
    7a5c:	ldr	x23, [sp, #48]
    7a60:	mov	w0, #0x8                   	// #8
    7a64:	mov	x21, #0x0                   	// #0
    7a68:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7a6c:	ldp	x19, x20, [sp, #16]
    7a70:	b	79a0 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    7a74:	bl	3200 <free@plt>
    7a78:	ldr	x21, [x19, #72]
    7a7c:	b	795c <elf32_newphdr@@ELFUTILS_1.0+0x5c>
    7a80:	ldp	x19, x20, [sp, #16]
    7a84:	mov	x21, #0x0                   	// #0
    7a88:	mov	x0, x21
    7a8c:	ldp	x21, x22, [sp, #32]
    7a90:	ldp	x29, x30, [sp], #64
    7a94:	ret
    7a98:	mov	w0, #0x4                   	// #4
    7a9c:	mov	x21, #0x0                   	// #0
    7aa0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7aa4:	ldp	x19, x20, [sp, #16]
    7aa8:	b	79a0 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    7aac:	mov	w0, #0x17                  	// #23
    7ab0:	mov	x21, #0x0                   	// #0
    7ab4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7ab8:	ldp	x19, x20, [sp, #16]
    7abc:	b	79a0 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    7ac0:	ldr	x0, [x19, #88]
    7ac4:	cbz	x0, 79d0 <elf32_newphdr@@ELFUTILS_1.0+0xd0>
    7ac8:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7acc:	ldrh	w2, [x21, #42]
    7ad0:	ldr	x1, [x1, #3368]
    7ad4:	cmp	x2, x1
    7ad8:	b.ne	7ba4 <elf32_newphdr@@ELFUTILS_1.0+0x2a4>  // b.any
    7adc:	ldr	w3, [x19, #120]
    7ae0:	lsl	x2, x20, #5
    7ae4:	mov	x21, x0
    7ae8:	mov	w1, #0x0                   	// #0
    7aec:	orr	w3, w3, #0x1
    7af0:	str	w3, [x19, #120]
    7af4:	bl	3100 <memset@plt>
    7af8:	ldp	x19, x20, [sp, #16]
    7afc:	b	79a0 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    7b00:	mov	w0, #0x1a                  	// #26
    7b04:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7b08:	ldp	x19, x20, [sp, #16]
    7b0c:	b	79a0 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    7b10:	mov	w0, #0x15                  	// #21
    7b14:	mov	x21, #0x0                   	// #0
    7b18:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7b1c:	ldp	x19, x20, [sp, #16]
    7b20:	b	79a0 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    7b24:	str	x23, [sp, #48]
    7b28:	add	x23, x19, #0xd8
    7b2c:	ldr	x21, [x23, #144]
    7b30:	cbz	x21, 7b90 <elf32_newphdr@@ELFUTILS_1.0+0x290>
    7b34:	ldr	x0, [x19, #88]
    7b38:	lsl	x22, x20, #5
    7b3c:	mov	x1, x22
    7b40:	bl	3160 <realloc@plt>
    7b44:	mov	x21, x0
    7b48:	cbz	x0, 7a5c <elf32_newphdr@@ELFUTILS_1.0+0x15c>
    7b4c:	ldr	w0, [x19, #200]
    7b50:	str	x21, [x19, #88]
    7b54:	cbnz	w0, 7b68 <elf32_newphdr@@ELFUTILS_1.0+0x268>
    7b58:	ldr	w0, [x19, #204]
    7b5c:	cbz	w0, 7bc8 <elf32_newphdr@@ELFUTILS_1.0+0x2c8>
    7b60:	mov	w0, #0x1                   	// #1
    7b64:	str	w0, [x19, #200]
    7b68:	ldr	x2, [x23, #144]
    7b6c:	mov	w1, #0xffffffff            	// #-1
    7b70:	ldr	w0, [x23, #152]
    7b74:	str	w20, [x2, #28]
    7b78:	orr	w0, w0, #0x1
    7b7c:	str	w0, [x23, #152]
    7b80:	ldr	x23, [sp, #48]
    7b84:	ldr	x0, [x19, #72]
    7b88:	strh	w1, [x0, #44]
    7b8c:	b	7a00 <elf32_newphdr@@ELFUTILS_1.0+0x100>
    7b90:	mov	w0, #0x20                  	// #32
    7b94:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7b98:	ldp	x19, x20, [sp, #16]
    7b9c:	ldr	x23, [sp, #48]
    7ba0:	b	79a0 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    7ba4:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7ba8:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7bac:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7bb0:	add	x3, x3, #0xf48
    7bb4:	add	x1, x1, #0xea8
    7bb8:	add	x0, x0, #0xee8
    7bbc:	mov	w2, #0xb2                  	// #178
    7bc0:	str	x23, [sp, #48]
    7bc4:	bl	3330 <__assert_fail@plt>
    7bc8:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7bcc:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7bd0:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7bd4:	add	x3, x3, #0xf48
    7bd8:	add	x1, x1, #0xea8
    7bdc:	add	x0, x0, #0xeb8
    7be0:	mov	w2, #0x97                  	// #151
    7be4:	bl	3330 <__assert_fail@plt>

0000000000007be8 <elf64_newphdr@@ELFUTILS_1.0>:
    7be8:	stp	x29, x30, [sp, #-64]!
    7bec:	mov	x29, sp
    7bf0:	stp	x21, x22, [sp, #32]
    7bf4:	cbz	x0, 7d74 <elf64_newphdr@@ELFUTILS_1.0+0x18c>
    7bf8:	stp	x19, x20, [sp, #16]
    7bfc:	mov	x19, x0
    7c00:	ldr	w0, [x0, #24]
    7c04:	cmp	w0, #0x3
    7c08:	b.ne	7d88 <elf64_newphdr@@ELFUTILS_1.0+0x1a0>  // b.any
    7c0c:	mov	x20, x1
    7c10:	tst	x1, #0xffffffff00000000
    7c14:	b.ne	7d9c <elf64_newphdr@@ELFUTILS_1.0+0x1b4>  // b.any
    7c18:	ldr	w0, [x19, #32]
    7c1c:	cbz	w0, 7c98 <elf64_newphdr@@ELFUTILS_1.0+0xb0>
    7c20:	cmp	w0, #0x2
    7c24:	b.ne	7e08 <elf64_newphdr@@ELFUTILS_1.0+0x220>  // b.any
    7c28:	ldr	x22, [x19, #72]
    7c2c:	cbz	x22, 7df8 <elf64_newphdr@@ELFUTILS_1.0+0x210>
    7c30:	cbnz	x20, 7ca4 <elf64_newphdr@@ELFUTILS_1.0+0xbc>
    7c34:	ldr	x0, [x19, #88]
    7c38:	cbz	x0, 7d70 <elf64_newphdr@@ELFUTILS_1.0+0x188>
    7c3c:	ldr	w1, [x19, #120]
    7c40:	tbnz	w1, #7, 7d64 <elf64_newphdr@@ELFUTILS_1.0+0x17c>
    7c44:	str	xzr, [x19, #88]
    7c48:	strh	wzr, [x22, #56]
    7c4c:	ldr	w0, [x19, #200]
    7c50:	cbnz	w0, 7d40 <elf64_newphdr@@ELFUTILS_1.0+0x158>
    7c54:	ldr	x2, [x19, #72]
    7c58:	mov	w3, #0x38                  	// #56
    7c5c:	ldr	w1, [x19, #56]
    7c60:	mov	w0, #0x0                   	// #0
    7c64:	mov	x22, #0x0                   	// #0
    7c68:	strh	w3, [x2, #54]
    7c6c:	orr	w1, w1, #0x1
    7c70:	str	w1, [x19, #56]
    7c74:	ldr	w1, [x19, #120]
    7c78:	orr	w1, w1, #0x1
    7c7c:	str	w1, [x19, #120]
    7c80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7c84:	ldp	x19, x20, [sp, #16]
    7c88:	mov	x0, x22
    7c8c:	ldp	x21, x22, [sp, #32]
    7c90:	ldp	x29, x30, [sp], #64
    7c94:	ret
    7c98:	mov	w0, #0x2                   	// #2
    7c9c:	str	w0, [x19, #32]
    7ca0:	b	7c28 <elf64_newphdr@@ELFUTILS_1.0+0x40>
    7ca4:	ldrh	w1, [x22, #56]
    7ca8:	mov	x0, #0xffff                	// #65535
    7cac:	cmp	x1, x20
    7cb0:	ccmp	x20, x0, #0x4, eq  // eq = none
    7cb4:	b.ne	7db0 <elf64_newphdr@@ELFUTILS_1.0+0x1c8>  // b.any
    7cb8:	mov	x0, #0xfffe                	// #65534
    7cbc:	cmp	x20, x0
    7cc0:	b.hi	7e1c <elf64_newphdr@@ELFUTILS_1.0+0x234>  // b.pmore
    7cc4:	lsl	x21, x20, #3
    7cc8:	ldr	x0, [x19, #88]
    7ccc:	sub	x21, x21, x20
    7cd0:	lsl	x21, x21, #3
    7cd4:	mov	x1, x21
    7cd8:	bl	3160 <realloc@plt>
    7cdc:	mov	x22, x0
    7ce0:	cbz	x0, 7d50 <elf64_newphdr@@ELFUTILS_1.0+0x168>
    7ce4:	ldr	x0, [x19, #72]
    7ce8:	str	x22, [x19, #88]
    7cec:	strh	w20, [x0, #56]
    7cf0:	mov	x2, x21
    7cf4:	mov	x0, x22
    7cf8:	mov	w1, #0x0                   	// #0
    7cfc:	bl	3100 <memset@plt>
    7d00:	ldr	x0, [x19, #72]
    7d04:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7d08:	ldr	w1, [x19, #56]
    7d0c:	mov	w2, #0x81                  	// #129
    7d10:	ldr	x3, [x3, #3584]
    7d14:	strh	w3, [x0, #54]
    7d18:	orr	w1, w1, #0x1
    7d1c:	str	w1, [x19, #56]
    7d20:	ldr	w0, [x19, #120]
    7d24:	orr	w0, w0, w2
    7d28:	str	w0, [x19, #120]
    7d2c:	mov	x0, x22
    7d30:	ldp	x19, x20, [sp, #16]
    7d34:	ldp	x21, x22, [sp, #32]
    7d38:	ldp	x29, x30, [sp], #64
    7d3c:	ret
    7d40:	ldr	x0, [x19, #360]
    7d44:	str	wzr, [x0, #44]
    7d48:	b	7c54 <elf64_newphdr@@ELFUTILS_1.0+0x6c>
    7d4c:	ldr	x23, [sp, #48]
    7d50:	mov	w0, #0x8                   	// #8
    7d54:	mov	x22, #0x0                   	// #0
    7d58:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7d5c:	ldp	x19, x20, [sp, #16]
    7d60:	b	7c88 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    7d64:	bl	3200 <free@plt>
    7d68:	ldr	x22, [x19, #72]
    7d6c:	b	7c44 <elf64_newphdr@@ELFUTILS_1.0+0x5c>
    7d70:	ldp	x19, x20, [sp, #16]
    7d74:	mov	x22, #0x0                   	// #0
    7d78:	mov	x0, x22
    7d7c:	ldp	x21, x22, [sp, #32]
    7d80:	ldp	x29, x30, [sp], #64
    7d84:	ret
    7d88:	mov	w0, #0x4                   	// #4
    7d8c:	mov	x22, #0x0                   	// #0
    7d90:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7d94:	ldp	x19, x20, [sp, #16]
    7d98:	b	7c88 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    7d9c:	mov	w0, #0x17                  	// #23
    7da0:	mov	x22, #0x0                   	// #0
    7da4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7da8:	ldp	x19, x20, [sp, #16]
    7dac:	b	7c88 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    7db0:	ldr	x0, [x19, #88]
    7db4:	cbz	x0, 7cb8 <elf64_newphdr@@ELFUTILS_1.0+0xd0>
    7db8:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7dbc:	ldrh	w2, [x22, #54]
    7dc0:	ldr	x1, [x1, #3584]
    7dc4:	cmp	x2, x1
    7dc8:	b.ne	7ea4 <elf64_newphdr@@ELFUTILS_1.0+0x2bc>  // b.any
    7dcc:	ldr	w3, [x19, #120]
    7dd0:	lsl	x2, x20, #3
    7dd4:	sub	x2, x2, x20
    7dd8:	mov	x22, x0
    7ddc:	orr	w3, w3, #0x1
    7de0:	str	w3, [x19, #120]
    7de4:	lsl	x2, x2, #3
    7de8:	mov	w1, #0x0                   	// #0
    7dec:	bl	3100 <memset@plt>
    7df0:	ldp	x19, x20, [sp, #16]
    7df4:	b	7c88 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    7df8:	mov	w0, #0x1a                  	// #26
    7dfc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7e00:	ldp	x19, x20, [sp, #16]
    7e04:	b	7c88 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    7e08:	mov	w0, #0x15                  	// #21
    7e0c:	mov	x22, #0x0                   	// #0
    7e10:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7e14:	ldp	x19, x20, [sp, #16]
    7e18:	b	7c88 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    7e1c:	str	x23, [sp, #48]
    7e20:	add	x23, x19, #0xd8
    7e24:	ldr	x22, [x23, #144]
    7e28:	cbz	x22, 7e90 <elf64_newphdr@@ELFUTILS_1.0+0x2a8>
    7e2c:	lsl	x21, x20, #3
    7e30:	ldr	x0, [x19, #88]
    7e34:	sub	x21, x21, x20
    7e38:	lsl	x21, x21, #3
    7e3c:	mov	x1, x21
    7e40:	bl	3160 <realloc@plt>
    7e44:	mov	x22, x0
    7e48:	cbz	x0, 7d4c <elf64_newphdr@@ELFUTILS_1.0+0x164>
    7e4c:	ldr	w0, [x19, #200]
    7e50:	str	x22, [x19, #88]
    7e54:	cbnz	w0, 7e68 <elf64_newphdr@@ELFUTILS_1.0+0x280>
    7e58:	ldr	w0, [x19, #204]
    7e5c:	cbz	w0, 7ec8 <elf64_newphdr@@ELFUTILS_1.0+0x2e0>
    7e60:	mov	w0, #0x1                   	// #1
    7e64:	str	w0, [x19, #200]
    7e68:	ldr	x2, [x23, #144]
    7e6c:	mov	w1, #0xffffffff            	// #-1
    7e70:	ldr	w0, [x23, #152]
    7e74:	str	w20, [x2, #44]
    7e78:	orr	w0, w0, #0x1
    7e7c:	str	w0, [x23, #152]
    7e80:	ldr	x23, [sp, #48]
    7e84:	ldr	x0, [x19, #72]
    7e88:	strh	w1, [x0, #56]
    7e8c:	b	7cf0 <elf64_newphdr@@ELFUTILS_1.0+0x108>
    7e90:	mov	w0, #0x20                  	// #32
    7e94:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    7e98:	ldp	x19, x20, [sp, #16]
    7e9c:	ldr	x23, [sp, #48]
    7ea0:	b	7c88 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    7ea4:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7ea8:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7eac:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7eb0:	add	x3, x3, #0xf58
    7eb4:	add	x1, x1, #0xea8
    7eb8:	add	x0, x0, #0xee8
    7ebc:	mov	w2, #0xb2                  	// #178
    7ec0:	str	x23, [sp, #48]
    7ec4:	bl	3330 <__assert_fail@plt>
    7ec8:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7ecc:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7ed0:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    7ed4:	add	x3, x3, #0xf58
    7ed8:	add	x1, x1, #0xea8
    7edc:	add	x0, x0, #0xeb8
    7ee0:	mov	w2, #0x97                  	// #151
    7ee4:	bl	3330 <__assert_fail@plt>

0000000000007ee8 <gelf_newphdr@@ELFUTILS_1.0>:
    7ee8:	ldr	w2, [x0, #32]
    7eec:	cmp	w2, #0x1
    7ef0:	b.eq	7ef8 <gelf_newphdr@@ELFUTILS_1.0+0x10>  // b.none
    7ef4:	b	7be8 <elf64_newphdr@@ELFUTILS_1.0>
    7ef8:	b	7900 <elf32_newphdr@@ELFUTILS_1.0>
    7efc:	nop

0000000000007f00 <gelf_update_phdr@@ELFUTILS_1.0>:
    7f00:	cbz	x0, 80bc <gelf_update_phdr@@ELFUTILS_1.0+0x1bc>
    7f04:	stp	x29, x30, [sp, #-64]!
    7f08:	mov	x29, sp
    7f0c:	stp	x19, x20, [sp, #16]
    7f10:	mov	x19, x0
    7f14:	stp	x21, x22, [sp, #32]
    7f18:	mov	w21, w1
    7f1c:	ldr	w1, [x0, #24]
    7f20:	cmp	w1, #0x3
    7f24:	b.ne	80d4 <gelf_update_phdr@@ELFUTILS_1.0+0x1d4>  // b.any
    7f28:	ldr	w1, [x0, #32]
    7f2c:	mov	x20, x2
    7f30:	ldr	x22, [x0, #88]
    7f34:	cmp	w1, #0x1
    7f38:	b.eq	7fc0 <gelf_update_phdr@@ELFUTILS_1.0+0xc0>  // b.none
    7f3c:	cbz	x22, 80c4 <gelf_update_phdr@@ELFUTILS_1.0+0x1c4>
    7f40:	ldr	x0, [x19, #72]
    7f44:	ldrh	w0, [x0, #56]
    7f48:	cmp	w0, w21
    7f4c:	b.gt	7f78 <gelf_update_phdr@@ELFUTILS_1.0+0x78>
    7f50:	mov	w1, #0xffff                	// #65535
    7f54:	cmp	w0, w1
    7f58:	b.ne	8094 <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.any
    7f5c:	add	x1, sp, #0x38
    7f60:	mov	x0, x19
    7f64:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    7f68:	cbnz	w0, 8094 <gelf_update_phdr@@ELFUTILS_1.0+0x194>
    7f6c:	ldr	x0, [sp, #56]
    7f70:	cmp	x0, w21, sxtw
    7f74:	b.ls	8094 <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.plast
    7f78:	mov	w2, #0x38                  	// #56
    7f7c:	ldp	x0, x1, [x20]
    7f80:	smaddl	x21, w21, w2, x22
    7f84:	stp	x0, x1, [x21]
    7f88:	ldp	x0, x1, [x20, #16]
    7f8c:	stp	x0, x1, [x21, #16]
    7f90:	ldp	x0, x1, [x20, #32]
    7f94:	stp	x0, x1, [x21, #32]
    7f98:	ldr	x0, [x20, #48]
    7f9c:	str	x0, [x21, #48]
    7fa0:	ldr	w1, [x19, #120]
    7fa4:	mov	w0, #0x1                   	// #1
    7fa8:	ldp	x21, x22, [sp, #32]
    7fac:	orr	w1, w1, w0
    7fb0:	str	w1, [x19, #120]
    7fb4:	ldp	x19, x20, [sp, #16]
    7fb8:	ldp	x29, x30, [sp], #64
    7fbc:	ret
    7fc0:	ldr	x1, [x2, #8]
    7fc4:	mov	x0, #0xffffffff            	// #4294967295
    7fc8:	cmp	x1, x0
    7fcc:	b.hi	80b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    7fd0:	ldr	x1, [x2, #16]
    7fd4:	cmp	x1, x0
    7fd8:	b.hi	80b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    7fdc:	ldr	x1, [x2, #24]
    7fe0:	cmp	x1, x0
    7fe4:	b.hi	80b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    7fe8:	ldr	x1, [x2, #32]
    7fec:	cmp	x1, x0
    7ff0:	b.hi	80b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    7ff4:	ldr	x1, [x2, #40]
    7ff8:	cmp	x1, x0
    7ffc:	b.hi	80b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    8000:	ldr	x1, [x2, #48]
    8004:	cmp	x1, x0
    8008:	b.hi	80b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    800c:	cbz	x22, 80e4 <gelf_update_phdr@@ELFUTILS_1.0+0x1e4>
    8010:	ldr	x0, [x19, #72]
    8014:	sxtw	x1, w21
    8018:	ldrh	w0, [x0, #44]
    801c:	cmp	w0, w21
    8020:	b.gt	8050 <gelf_update_phdr@@ELFUTILS_1.0+0x150>
    8024:	mov	w1, #0xffff                	// #65535
    8028:	cmp	w0, w1
    802c:	b.ne	8094 <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.any
    8030:	add	x1, sp, #0x38
    8034:	mov	x0, x19
    8038:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    803c:	cbnz	w0, 8094 <gelf_update_phdr@@ELFUTILS_1.0+0x194>
    8040:	ldr	x0, [sp, #56]
    8044:	sxtw	x1, w21
    8048:	cmp	x0, w21, sxtw
    804c:	b.ls	8094 <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.plast
    8050:	lsl	x1, x1, #5
    8054:	add	x0, x22, x1
    8058:	ldp	w4, w2, [x20]
    805c:	ldr	x3, [x20, #8]
    8060:	str	w4, [x22, x1]
    8064:	ldr	x1, [x20, #16]
    8068:	str	w3, [x0, #4]
    806c:	ldr	x3, [x20, #24]
    8070:	str	w1, [x0, #8]
    8074:	ldr	x1, [x20, #32]
    8078:	str	w3, [x0, #12]
    807c:	ldr	x3, [x20, #40]
    8080:	str	w1, [x0, #16]
    8084:	ldr	x1, [x20, #48]
    8088:	stp	w3, w2, [x0, #20]
    808c:	str	w1, [x0, #28]
    8090:	b	7fa0 <gelf_update_phdr@@ELFUTILS_1.0+0xa0>
    8094:	mov	w0, #0x16                  	// #22
    8098:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    809c:	mov	w0, #0x0                   	// #0
    80a0:	ldp	x19, x20, [sp, #16]
    80a4:	ldp	x21, x22, [sp, #32]
    80a8:	ldp	x29, x30, [sp], #64
    80ac:	ret
    80b0:	mov	w0, #0x21                  	// #33
    80b4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    80b8:	b	809c <gelf_update_phdr@@ELFUTILS_1.0+0x19c>
    80bc:	mov	w0, #0x0                   	// #0
    80c0:	ret
    80c4:	bl	7310 <elf32_getphdr@@ELFUTILS_1.0+0x50>
    80c8:	mov	x22, x0
    80cc:	cbnz	x0, 7f40 <gelf_update_phdr@@ELFUTILS_1.0+0x40>
    80d0:	b	809c <gelf_update_phdr@@ELFUTILS_1.0+0x19c>
    80d4:	mov	w0, #0x4                   	// #4
    80d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    80dc:	mov	w0, #0x0                   	// #0
    80e0:	b	80a0 <gelf_update_phdr@@ELFUTILS_1.0+0x1a0>
    80e4:	mov	x0, x19
    80e8:	bl	6eb8 <gelf_update_ehdr@@ELFUTILS_1.0+0x138>
    80ec:	mov	x22, x0
    80f0:	cbnz	x0, 8010 <gelf_update_phdr@@ELFUTILS_1.0+0x110>
    80f4:	b	809c <gelf_update_phdr@@ELFUTILS_1.0+0x19c>

00000000000080f8 <elf_getarhdr@@ELFUTILS_1.0>:
    80f8:	stp	x29, x30, [sp, #-32]!
    80fc:	mov	x29, sp
    8100:	str	x19, [sp, #16]
    8104:	cbz	x0, 8150 <elf_getarhdr@@ELFUTILS_1.0+0x58>
    8108:	ldr	x19, [x0, #8]
    810c:	cbz	x19, 8158 <elf_getarhdr@@ELFUTILS_1.0+0x60>
    8110:	ldr	x0, [x19, #120]
    8114:	cbz	x0, 8138 <elf_getarhdr@@ELFUTILS_1.0+0x40>
    8118:	ldr	w0, [x19, #24]
    811c:	add	x19, x19, #0x78
    8120:	cmp	w0, #0x1
    8124:	b.ne	8164 <elf_getarhdr@@ELFUTILS_1.0+0x6c>  // b.any
    8128:	mov	x0, x19
    812c:	ldr	x19, [sp, #16]
    8130:	ldp	x29, x30, [sp], #32
    8134:	ret
    8138:	mov	x0, x19
    813c:	bl	44b0 <elf_fill@@ELFUTILS_1.0+0xe60>
    8140:	cbz	w0, 8118 <elf_getarhdr@@ELFUTILS_1.0+0x20>
    8144:	mov	x0, x19
    8148:	bl	44b0 <elf_fill@@ELFUTILS_1.0+0xe60>
    814c:	cbz	w0, 8118 <elf_getarhdr@@ELFUTILS_1.0+0x20>
    8150:	mov	x19, #0x0                   	// #0
    8154:	b	8128 <elf_getarhdr@@ELFUTILS_1.0+0x30>
    8158:	mov	w0, #0xb                   	// #11
    815c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8160:	b	8128 <elf_getarhdr@@ELFUTILS_1.0+0x30>
    8164:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8168:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    816c:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8170:	add	x3, x3, #0xf78
    8174:	add	x1, x1, #0xf68
    8178:	add	x0, x0, #0xc88
    817c:	mov	w2, #0x46                  	// #70
    8180:	bl	3330 <__assert_fail@plt>
    8184:	nop

0000000000008188 <elf_getarsym@@ELFUTILS_1.0>:
    8188:	stp	x29, x30, [sp, #-176]!
    818c:	mov	x29, sp
    8190:	stp	x19, x20, [sp, #16]
    8194:	stp	x25, x26, [sp, #64]
    8198:	mov	x25, x0
    819c:	ldr	w0, [x0, #24]
    81a0:	cmp	w0, #0x1
    81a4:	b.ne	8324 <elf_getarsym@@ELFUTILS_1.0+0x19c>  // b.any
    81a8:	mov	x19, x1
    81ac:	cbz	x1, 81b8 <elf_getarsym@@ELFUTILS_1.0+0x30>
    81b0:	ldr	x0, [x25, #88]
    81b4:	str	x0, [x1]
    81b8:	ldr	x20, [x25, #80]
    81bc:	cmn	x20, #0x1
    81c0:	b.eq	85b8 <elf_getarsym@@ELFUTILS_1.0+0x430>  // b.none
    81c4:	cbz	x20, 81e8 <elf_getarsym@@ELFUTILS_1.0+0x60>
    81c8:	cbz	x19, 81d4 <elf_getarsym@@ELFUTILS_1.0+0x4c>
    81cc:	ldr	x0, [x25, #88]
    81d0:	str	x0, [x19]
    81d4:	mov	x0, x20
    81d8:	ldp	x19, x20, [sp, #16]
    81dc:	ldp	x25, x26, [sp, #64]
    81e0:	ldp	x29, x30, [sp], #176
    81e4:	ret
    81e8:	stp	x21, x22, [sp, #32]
    81ec:	mov	x0, #0xffffffffffffffff    	// #-1
    81f0:	ldr	x21, [x25]
    81f4:	str	x0, [x25, #80]
    81f8:	cbz	x21, 8270 <elf_getarsym@@ELFUTILS_1.0+0xe8>
    81fc:	ldr	x0, [x25, #48]
    8200:	cmp	x0, #0x43
    8204:	b.ls	8254 <elf_getarsym@@ELFUTILS_1.0+0xcc>  // b.plast
    8208:	ldr	x26, [x25, #40]
    820c:	add	x26, x26, #0x8
    8210:	add	x26, x21, x26
    8214:	ldrh	w0, [x26, #58]
    8218:	cmp	w0, #0xa60
    821c:	b.ne	85a8 <elf_getarsym@@ELFUTILS_1.0+0x420>  // b.any
    8220:	stp	x23, x24, [sp, #48]
    8224:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    8228:	movk	x1, #0x202f
    822c:	ldr	x0, [x26]
    8230:	cmp	x0, x1
    8234:	b.eq	855c <elf_getarsym@@ELFUTILS_1.0+0x3d4>  // b.none
    8238:	mov	x1, #0x532f                	// #21295
    823c:	movk	x1, #0x4d59, lsl #16
    8240:	movk	x1, #0x3436, lsl #32
    8244:	movk	x1, #0x202f, lsl #48
    8248:	cmp	x0, x1
    824c:	b.eq	8344 <elf_getarsym@@ELFUTILS_1.0+0x1bc>  // b.none
    8250:	ldp	x23, x24, [sp, #48]
    8254:	mov	w0, #0x12                  	// #18
    8258:	mov	x21, #0x0                   	// #0
    825c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8260:	mov	x0, x21
    8264:	bl	3200 <free@plt>
    8268:	ldp	x21, x22, [sp, #32]
    826c:	b	81c8 <elf_getarsym@@ELFUTILS_1.0+0x40>
    8270:	stp	x23, x24, [sp, #48]
    8274:	ldr	w23, [x25, #36]
    8278:	stp	x27, x28, [sp, #80]
    827c:	cmn	w23, #0x1
    8280:	b.eq	887c <elf_getarsym@@ELFUTILS_1.0+0x6f4>  // b.none
    8284:	ldr	x24, [x25, #40]
    8288:	add	x26, x25, #0xa8
    828c:	mov	x27, x26
    8290:	mov	x28, #0x0                   	// #0
    8294:	add	x0, x24, #0x8
    8298:	mov	x24, #0x3c                  	// #60
    829c:	mov	x22, x0
    82a0:	str	x0, [sp, #96]
    82a4:	mov	x3, x22
    82a8:	sub	x2, x24, x28
    82ac:	mov	x1, x27
    82b0:	mov	w0, w23
    82b4:	bl	3250 <pread@plt>
    82b8:	cmn	x0, #0x1
    82bc:	b.eq	82fc <elf_getarsym@@ELFUTILS_1.0+0x174>  // b.none
    82c0:	cmp	x0, #0x0
    82c4:	b.le	830c <elf_getarsym@@ELFUTILS_1.0+0x184>
    82c8:	add	x28, x28, x0
    82cc:	cmp	x28, #0x3b
    82d0:	b.gt	8594 <elf_getarsym@@ELFUTILS_1.0+0x40c>
    82d4:	ldr	x0, [sp, #96]
    82d8:	add	x27, x26, x28
    82dc:	sub	x2, x24, x28
    82e0:	mov	x1, x27
    82e4:	add	x22, x0, x28
    82e8:	mov	w0, w23
    82ec:	mov	x3, x22
    82f0:	bl	3250 <pread@plt>
    82f4:	cmn	x0, #0x1
    82f8:	b.ne	82c0 <elf_getarsym@@ELFUTILS_1.0+0x138>  // b.any
    82fc:	bl	3340 <__errno_location@plt>
    8300:	ldr	w0, [x0]
    8304:	cmp	w0, #0x4
    8308:	b.eq	82a4 <elf_getarsym@@ELFUTILS_1.0+0x11c>  // b.none
    830c:	mov	w0, #0x13                  	// #19
    8310:	mov	x20, #0x0                   	// #0
    8314:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8318:	ldp	x23, x24, [sp, #48]
    831c:	ldp	x27, x28, [sp, #80]
    8320:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    8324:	mov	w0, #0x11                  	// #17
    8328:	mov	x20, #0x0                   	// #0
    832c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8330:	mov	x0, x20
    8334:	ldp	x19, x20, [sp, #16]
    8338:	ldp	x25, x26, [sp, #64]
    833c:	ldp	x29, x30, [sp], #176
    8340:	ret
    8344:	ldr	x1, [x26, #8]
    8348:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    834c:	cmp	x1, x0
    8350:	b.ne	8250 <elf_getarsym@@ELFUTILS_1.0+0xc8>  // b.any
    8354:	ldr	x23, [x25, #40]
    8358:	mov	w0, #0x1                   	// #1
    835c:	ldr	x21, [x25]
    8360:	str	w0, [sp, #108]
    8364:	add	x0, x23, #0x44
    8368:	mov	x23, #0x8                   	// #8
    836c:	stp	x27, x28, [sp, #80]
    8370:	str	x0, [sp, #96]
    8374:	mov	w0, #0x8                   	// #8
    8378:	str	w0, [sp, #120]
    837c:	cbz	x21, 85c8 <elf_getarsym@@ELFUTILS_1.0+0x440>
    8380:	ldr	x0, [sp, #96]
    8384:	add	x27, sp, #0x98
    8388:	ldr	x0, [x21, x0]
    838c:	str	x0, [sp, #152]
    8390:	ldr	w0, [sp, #108]
    8394:	cbz	w0, 8550 <elf_getarsym@@ELFUTILS_1.0+0x3c8>
    8398:	ldr	x22, [sp, #152]
    839c:	rev	x22, x22
    83a0:	ldr	x0, [x26, #48]
    83a4:	str	x0, [sp, #152]
    83a8:	mov	w2, #0xa                   	// #10
    83ac:	mov	x0, x27
    83b0:	ldrh	w3, [x26, #56]
    83b4:	mov	x1, #0x0                   	// #0
    83b8:	strh	w3, [sp, #160]
    83bc:	strb	wzr, [sp, #162]
    83c0:	bl	31f0 <strtol@plt>
    83c4:	mov	x27, x0
    83c8:	ldr	x2, [x25, #48]
    83cc:	cmp	x2, x0
    83d0:	b.cc	8544 <elf_getarsym@@ELFUTILS_1.0+0x3bc>  // b.lo, b.ul, b.last
    83d4:	sub	x2, x2, x0
    83d8:	cmp	x2, #0x43
    83dc:	b.ls	8544 <elf_getarsym@@ELFUTILS_1.0+0x3bc>  // b.plast
    83e0:	ldrsw	x24, [sp, #120]
    83e4:	udiv	x0, x0, x24
    83e8:	cmp	x0, x22
    83ec:	b.cc	8544 <elf_getarsym@@ELFUTILS_1.0+0x3bc>  // b.lo, b.ul, b.last
    83f0:	add	x0, x22, #0x1
    83f4:	str	x0, [sp, #120]
    83f8:	add	x26, x0, x0, lsl #1
    83fc:	lsl	x0, x26, #3
    8400:	str	x0, [sp, #112]
    8404:	bl	30c0 <malloc@plt>
    8408:	str	x0, [x25, #80]
    840c:	mov	x5, x0
    8410:	cbz	x0, 88bc <elf_getarsym@@ELFUTILS_1.0+0x734>
    8414:	ldr	x6, [x25]
    8418:	mul	x24, x24, x22
    841c:	ldr	x0, [sp, #96]
    8420:	add	x23, x23, x0
    8424:	cbz	x6, 86a8 <elf_getarsym@@ELFUTILS_1.0+0x520>
    8428:	add	x26, x6, x23
    842c:	neg	x0, x22
    8430:	tst	x26, x0
    8434:	b.ne	8670 <elf_getarsym@@ELFUTILS_1.0+0x4e8>  // b.any
    8438:	add	x23, x24, x23
    843c:	mov	x21, x20
    8440:	add	x28, x6, x23
    8444:	mov	x20, x5
    8448:	mov	x23, x20
    844c:	mov	x24, #0x0                   	// #0
    8450:	cbz	x22, 850c <elf_getarsym@@ELFUTILS_1.0+0x384>
    8454:	nop
    8458:	ldr	w0, [sp, #108]
    845c:	str	x28, [x23]
    8460:	cbz	w0, 8538 <elf_getarsym@@ELFUTILS_1.0+0x3b0>
    8464:	ldr	x1, [x26, x24, lsl #3]
    8468:	rev	x1, x1
    846c:	str	x1, [x23, #8]
    8470:	ldrb	w1, [x28]
    8474:	cbz	x1, 84e8 <elf_getarsym@@ELFUTILS_1.0+0x360>
    8478:	ldrb	w2, [x28, #1]
    847c:	cbz	w2, 84e8 <elf_getarsym@@ELFUTILS_1.0+0x360>
    8480:	ldrb	w0, [x28, #2]
    8484:	and	x2, x2, #0xff
    8488:	add	x1, x2, x1, lsl #4
    848c:	cbz	w0, 84e8 <elf_getarsym@@ELFUTILS_1.0+0x360>
    8490:	ldrb	w2, [x28, #3]
    8494:	and	x0, x0, #0xff
    8498:	add	x1, x0, x1, lsl #4
    849c:	cbz	w2, 84e8 <elf_getarsym@@ELFUTILS_1.0+0x360>
    84a0:	ldrb	w0, [x28, #4]
    84a4:	and	x2, x2, #0xff
    84a8:	add	x1, x2, x1, lsl #4
    84ac:	cbz	w0, 84e8 <elf_getarsym@@ELFUTILS_1.0+0x360>
    84b0:	ldrb	w2, [x28, #5]
    84b4:	and	x0, x0, #0xff
    84b8:	add	x1, x0, x1, lsl #4
    84bc:	add	x5, x28, #0x5
    84c0:	cbz	w2, 84e4 <elf_getarsym@@ELFUTILS_1.0+0x35c>
    84c4:	nop
    84c8:	and	x0, x2, #0xff
    84cc:	ldrb	w2, [x5, #1]!
    84d0:	add	x1, x0, x1, lsl #4
    84d4:	lsr	x0, x1, #24
    84d8:	and	x0, x0, #0xf0
    84dc:	eor	x1, x1, x0
    84e0:	cbnz	w2, 84c8 <elf_getarsym@@ELFUTILS_1.0+0x340>
    84e4:	and	x1, x1, #0xfffffff
    84e8:	str	x1, [x23, #16]
    84ec:	mov	x0, x28
    84f0:	add	x24, x24, #0x1
    84f4:	mov	w1, #0x0                   	// #0
    84f8:	bl	3210 <rawmemchr@plt>
    84fc:	add	x23, x23, #0x18
    8500:	cmp	x22, x24
    8504:	add	x28, x0, #0x1
    8508:	b.ne	8458 <elf_getarsym@@ELFUTILS_1.0+0x2d0>  // b.any
    850c:	ldr	x0, [sp, #112]
    8510:	mov	x1, #0xffffffffffffffff    	// #-1
    8514:	ldp	x23, x24, [sp, #48]
    8518:	sub	x26, x0, #0x18
    851c:	add	x0, x20, x26
    8520:	ldp	x27, x28, [sp, #80]
    8524:	str	xzr, [x20, x26]
    8528:	stp	xzr, x1, [x0, #8]
    852c:	ldr	x0, [sp, #120]
    8530:	str	x0, [x25, #88]
    8534:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    8538:	ldr	w1, [x26, x24, lsl #2]
    853c:	rev	w1, w1
    8540:	b	846c <elf_getarsym@@ELFUTILS_1.0+0x2e4>
    8544:	ldp	x23, x24, [sp, #48]
    8548:	ldp	x27, x28, [sp, #80]
    854c:	b	8254 <elf_getarsym@@ELFUTILS_1.0+0xcc>
    8550:	ldr	w22, [sp, #152]
    8554:	rev	w22, w22
    8558:	b	83a0 <elf_getarsym@@ELFUTILS_1.0+0x218>
    855c:	ldr	x2, [x26, #8]
    8560:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    8564:	cmp	x2, x1
    8568:	b.ne	8238 <elf_getarsym@@ELFUTILS_1.0+0xb0>  // b.any
    856c:	stp	x27, x28, [sp, #80]
    8570:	mov	w0, #0x4                   	// #4
    8574:	mov	x23, #0x4                   	// #4
    8578:	ldr	x28, [x25, #40]
    857c:	str	wzr, [sp, #108]
    8580:	str	w0, [sp, #120]
    8584:	add	x0, x28, #0x44
    8588:	str	x0, [sp, #96]
    858c:	ldr	x21, [x25]
    8590:	b	837c <elf_getarsym@@ELFUTILS_1.0+0x1f4>
    8594:	cmp	x28, #0x3c
    8598:	b.ne	830c <elf_getarsym@@ELFUTILS_1.0+0x184>  // b.any
    859c:	ldp	x23, x24, [sp, #48]
    85a0:	ldp	x27, x28, [sp, #80]
    85a4:	b	8214 <elf_getarsym@@ELFUTILS_1.0+0x8c>
    85a8:	mov	w0, #0xf                   	// #15
    85ac:	mov	x21, #0x0                   	// #0
    85b0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    85b4:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    85b8:	mov	w0, #0x12                  	// #18
    85bc:	mov	x20, #0x0                   	// #0
    85c0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    85c4:	b	81d4 <elf_getarsym@@ELFUTILS_1.0+0x4c>
    85c8:	ldr	x28, [sp, #96]
    85cc:	mov	x22, x23
    85d0:	ldr	w0, [x25, #36]
    85d4:	add	x27, sp, #0x98
    85d8:	mov	x24, #0x0                   	// #0
    85dc:	str	w0, [sp, #112]
    85e0:	ldr	w0, [sp, #112]
    85e4:	mov	x3, x28
    85e8:	mov	x2, x22
    85ec:	add	x1, x27, x24
    85f0:	bl	3250 <pread@plt>
    85f4:	cmn	x0, #0x1
    85f8:	b.eq	8638 <elf_getarsym@@ELFUTILS_1.0+0x4b0>  // b.none
    85fc:	cmp	x0, #0x0
    8600:	b.le	8660 <elf_getarsym@@ELFUTILS_1.0+0x4d8>
    8604:	add	x24, x24, x0
    8608:	cmp	x23, x24
    860c:	b.ls	8664 <elf_getarsym@@ELFUTILS_1.0+0x4dc>  // b.plast
    8610:	ldr	x0, [sp, #96]
    8614:	sub	x22, x23, x24
    8618:	mov	x2, x22
    861c:	add	x1, x27, x24
    8620:	add	x28, x0, x24
    8624:	ldr	w0, [sp, #112]
    8628:	mov	x3, x28
    862c:	bl	3250 <pread@plt>
    8630:	cmn	x0, #0x1
    8634:	b.ne	85fc <elf_getarsym@@ELFUTILS_1.0+0x474>  // b.any
    8638:	bl	3340 <__errno_location@plt>
    863c:	ldr	w0, [x0]
    8640:	cmp	w0, #0x4
    8644:	b.eq	85e0 <elf_getarsym@@ELFUTILS_1.0+0x458>  // b.none
    8648:	mov	w0, #0x12                  	// #18
    864c:	mov	x20, #0x0                   	// #0
    8650:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8654:	ldp	x23, x24, [sp, #48]
    8658:	ldp	x27, x28, [sp, #80]
    865c:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    8660:	b.ne	8648 <elf_getarsym@@ELFUTILS_1.0+0x4c0>  // b.any
    8664:	cmp	x23, x24
    8668:	b.eq	8390 <elf_getarsym@@ELFUTILS_1.0+0x208>  // b.none
    866c:	b	8648 <elf_getarsym@@ELFUTILS_1.0+0x4c0>
    8670:	mov	x0, x24
    8674:	str	x5, [sp, #96]
    8678:	str	x6, [sp, #128]
    867c:	bl	30c0 <malloc@plt>
    8680:	mov	x21, x0
    8684:	cbz	x0, 8854 <elf_getarsym@@ELFUTILS_1.0+0x6cc>
    8688:	mov	x1, x26
    868c:	mov	x2, x24
    8690:	bl	3020 <memcpy@plt>
    8694:	mov	x20, x21
    8698:	mov	x26, x0
    869c:	ldr	x5, [sp, #96]
    86a0:	ldr	x6, [sp, #128]
    86a4:	b	8438 <elf_getarsym@@ELFUTILS_1.0+0x2b0>
    86a8:	mov	x0, x24
    86ac:	str	x5, [sp, #96]
    86b0:	bl	30c0 <malloc@plt>
    86b4:	mov	x21, x0
    86b8:	ldr	x5, [sp, #96]
    86bc:	cbz	x0, 8854 <elf_getarsym@@ELFUTILS_1.0+0x6cc>
    86c0:	ldr	x2, [sp, #112]
    86c4:	sub	x1, x27, x24
    86c8:	mov	x0, x5
    86cc:	str	x5, [sp, #96]
    86d0:	str	x1, [sp, #136]
    86d4:	add	x1, x1, x2
    86d8:	bl	3160 <realloc@plt>
    86dc:	mov	x20, x0
    86e0:	ldr	x5, [sp, #96]
    86e4:	cbz	x0, 889c <elf_getarsym@@ELFUTILS_1.0+0x714>
    86e8:	ldr	w0, [x25, #36]
    86ec:	mov	x3, x23
    86f0:	mov	x27, x24
    86f4:	mov	x28, x21
    86f8:	mov	x26, #0x0                   	// #0
    86fc:	str	x20, [x25, #80]
    8700:	str	w0, [sp, #128]
    8704:	ldr	w0, [sp, #128]
    8708:	mov	x2, x27
    870c:	mov	x1, x28
    8710:	str	x3, [sp, #96]
    8714:	bl	3250 <pread@plt>
    8718:	cmn	x0, #0x1
    871c:	b.eq	875c <elf_getarsym@@ELFUTILS_1.0+0x5d4>  // b.none
    8720:	cmp	x0, #0x0
    8724:	b.le	8794 <elf_getarsym@@ELFUTILS_1.0+0x60c>
    8728:	add	x26, x26, x0
    872c:	cmp	x24, x26
    8730:	b.ls	8798 <elf_getarsym@@ELFUTILS_1.0+0x610>  // b.plast
    8734:	ldr	w0, [sp, #128]
    8738:	sub	x27, x24, x26
    873c:	add	x28, x21, x26
    8740:	add	x3, x23, x26
    8744:	mov	x2, x27
    8748:	mov	x1, x28
    874c:	str	x3, [sp, #96]
    8750:	bl	3250 <pread@plt>
    8754:	cmn	x0, #0x1
    8758:	b.ne	8720 <elf_getarsym@@ELFUTILS_1.0+0x598>  // b.any
    875c:	bl	3340 <__errno_location@plt>
    8760:	ldr	w0, [x0]
    8764:	ldr	x3, [sp, #96]
    8768:	cmp	w0, #0x4
    876c:	b.eq	8704 <elf_getarsym@@ELFUTILS_1.0+0x57c>  // b.none
    8770:	ldr	x0, [x25, #80]
    8774:	mov	x20, #0x0                   	// #0
    8778:	bl	3200 <free@plt>
    877c:	str	xzr, [x25, #80]
    8780:	mov	w0, #0x12                  	// #18
    8784:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8788:	ldp	x23, x24, [sp, #48]
    878c:	ldp	x27, x28, [sp, #80]
    8790:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    8794:	csel	x26, x26, x0, eq  // eq = none
    8798:	cmp	x24, x26
    879c:	b.ne	8770 <elf_getarsym@@ELFUTILS_1.0+0x5e8>  // b.any
    87a0:	ldr	x0, [sp, #112]
    87a4:	add	x27, x24, x23
    87a8:	mov	x24, x27
    87ac:	mov	x23, #0x0                   	// #0
    87b0:	add	x28, x20, x0
    87b4:	ldr	w0, [x25, #36]
    87b8:	ldr	x20, [sp, #136]
    87bc:	mov	x1, x28
    87c0:	str	w0, [sp, #128]
    87c4:	ldr	w0, [sp, #128]
    87c8:	mov	x3, x24
    87cc:	mov	x2, x20
    87d0:	str	x1, [sp, #96]
    87d4:	bl	3250 <pread@plt>
    87d8:	mov	x26, x0
    87dc:	cmn	x0, #0x1
    87e0:	b.eq	8828 <elf_getarsym@@ELFUTILS_1.0+0x6a0>  // b.none
    87e4:	cmp	x0, #0x0
    87e8:	b.le	8874 <elf_getarsym@@ELFUTILS_1.0+0x6ec>
    87ec:	add	x23, x23, x0
    87f0:	ldr	x0, [sp, #136]
    87f4:	cmp	x0, x23
    87f8:	b.ls	886c <elf_getarsym@@ELFUTILS_1.0+0x6e4>  // b.plast
    87fc:	sub	x20, x0, x23
    8800:	ldr	w0, [sp, #128]
    8804:	add	x24, x27, x23
    8808:	add	x1, x28, x23
    880c:	mov	x3, x24
    8810:	mov	x2, x20
    8814:	str	x1, [sp, #96]
    8818:	bl	3250 <pread@plt>
    881c:	mov	x26, x0
    8820:	cmn	x0, #0x1
    8824:	b.ne	87e4 <elf_getarsym@@ELFUTILS_1.0+0x65c>  // b.any
    8828:	bl	3340 <__errno_location@plt>
    882c:	ldr	w0, [x0]
    8830:	ldr	x1, [sp, #96]
    8834:	cmp	w0, #0x4
    8838:	b.eq	87c4 <elf_getarsym@@ELFUTILS_1.0+0x63c>  // b.none
    883c:	ldr	x0, [sp, #136]
    8840:	cmp	x0, x26
    8844:	b.ne	8770 <elf_getarsym@@ELFUTILS_1.0+0x5e8>  // b.any
    8848:	mov	x26, x21
    884c:	ldr	x20, [x25, #80]
    8850:	b	8448 <elf_getarsym@@ELFUTILS_1.0+0x2c0>
    8854:	mov	w0, #0x8                   	// #8
    8858:	mov	x21, #0x0                   	// #0
    885c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8860:	ldp	x23, x24, [sp, #48]
    8864:	ldp	x27, x28, [sp, #80]
    8868:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    886c:	mov	x26, x23
    8870:	b	883c <elf_getarsym@@ELFUTILS_1.0+0x6b4>
    8874:	csel	x26, x0, x23, ne  // ne = any
    8878:	b	883c <elf_getarsym@@ELFUTILS_1.0+0x6b4>
    887c:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8880:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8884:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8888:	add	x3, x3, #0xfb0
    888c:	add	x1, x1, #0xf88
    8890:	add	x0, x0, #0xf98
    8894:	mov	w2, #0x72                  	// #114
    8898:	bl	3330 <__assert_fail@plt>
    889c:	mov	x0, x5
    88a0:	bl	3200 <free@plt>
    88a4:	str	xzr, [x25, #80]
    88a8:	mov	w0, #0x8                   	// #8
    88ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    88b0:	ldp	x23, x24, [sp, #48]
    88b4:	ldp	x27, x28, [sp, #80]
    88b8:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    88bc:	mov	x20, #0x0                   	// #0
    88c0:	mov	x21, #0x0                   	// #0
    88c4:	ldp	x23, x24, [sp, #48]
    88c8:	ldp	x27, x28, [sp, #80]
    88cc:	b	8260 <elf_getarsym@@ELFUTILS_1.0+0xd8>

00000000000088d0 <elf_rawfile@@ELFUTILS_1.0>:
    88d0:	stp	x29, x30, [sp, #-32]!
    88d4:	mov	x29, sp
    88d8:	stp	x19, x20, [sp, #16]
    88dc:	mov	x20, x1
    88e0:	cbz	x0, 8920 <elf_rawfile@@ELFUTILS_1.0+0x50>
    88e4:	ldr	x2, [x0]
    88e8:	mov	x19, x0
    88ec:	cbz	x2, 8910 <elf_rawfile@@ELFUTILS_1.0+0x40>
    88f0:	cbz	x20, 88fc <elf_rawfile@@ELFUTILS_1.0+0x2c>
    88f4:	ldr	x0, [x19, #48]
    88f8:	str	x0, [x20]
    88fc:	ldr	x0, [x19, #40]
    8900:	add	x0, x2, x0
    8904:	ldp	x19, x20, [sp, #16]
    8908:	ldp	x29, x30, [sp], #32
    890c:	ret
    8910:	bl	8a68 <elf_rawfile@@ELFUTILS_1.0+0x198>
    8914:	cbz	x0, 8928 <elf_rawfile@@ELFUTILS_1.0+0x58>
    8918:	ldr	x2, [x19]
    891c:	b	88f0 <elf_rawfile@@ELFUTILS_1.0+0x20>
    8920:	mov	w0, #0x4                   	// #4
    8924:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8928:	mov	x0, #0x0                   	// #0
    892c:	cbz	x20, 8904 <elf_rawfile@@ELFUTILS_1.0+0x34>
    8930:	str	xzr, [x20]
    8934:	b	8904 <elf_rawfile@@ELFUTILS_1.0+0x34>
    8938:	stp	x29, x30, [sp, #-48]!
    893c:	mov	x29, sp
    8940:	stp	x19, x20, [sp, #16]
    8944:	mov	x20, x0
    8948:	ldr	w0, [x0, #24]
    894c:	cmp	w0, #0x1
    8950:	b.eq	8960 <elf_rawfile@@ELFUTILS_1.0+0x90>  // b.none
    8954:	ldp	x19, x20, [sp, #16]
    8958:	ldp	x29, x30, [sp], #48
    895c:	ret
    8960:	ldr	x19, [x20, #72]
    8964:	str	x21, [sp, #32]
    8968:	mov	x21, x1
    896c:	cbz	x19, 8980 <elf_rawfile@@ELFUTILS_1.0+0xb0>
    8970:	ldr	x0, [x19]
    8974:	cbz	x0, 8990 <elf_rawfile@@ELFUTILS_1.0+0xc0>
    8978:	ldr	x19, [x19, #16]
    897c:	cbnz	x19, 8970 <elf_rawfile@@ELFUTILS_1.0+0xa0>
    8980:	ldp	x19, x20, [sp, #16]
    8984:	ldr	x21, [sp, #32]
    8988:	ldp	x29, x30, [sp], #48
    898c:	ret
    8990:	ldr	x2, [x19, #40]
    8994:	mov	x0, x19
    8998:	ldr	x1, [x20]
    899c:	sub	x2, x2, x21
    89a0:	str	x1, [x19]
    89a4:	mov	x1, x21
    89a8:	str	x2, [x19, #40]
    89ac:	ldr	w2, [x19, #24]
    89b0:	cmp	w2, #0x1
    89b4:	b.eq	89c0 <elf_rawfile@@ELFUTILS_1.0+0xf0>  // b.none
    89b8:	bl	8938 <elf_rawfile@@ELFUTILS_1.0+0x68>
    89bc:	b	8978 <elf_rawfile@@ELFUTILS_1.0+0xa8>
    89c0:	ldr	x2, [x19, #112]
    89c4:	sub	x2, x2, x21
    89c8:	str	x2, [x19, #112]
    89cc:	bl	8938 <elf_rawfile@@ELFUTILS_1.0+0x68>
    89d0:	b	8978 <elf_rawfile@@ELFUTILS_1.0+0xa8>
    89d4:	nop
    89d8:	stp	x29, x30, [sp, #-32]!
    89dc:	mov	x29, sp
    89e0:	str	x19, [sp, #16]
    89e4:	ldr	x19, [x0]
    89e8:	cbz	x19, 89fc <elf_rawfile@@ELFUTILS_1.0+0x12c>
    89ec:	ldr	w0, [x19, #60]
    89f0:	cbnz	w0, 8a08 <elf_rawfile@@ELFUTILS_1.0+0x138>
    89f4:	ldr	x19, [x19, #16]
    89f8:	cbnz	x19, 89ec <elf_rawfile@@ELFUTILS_1.0+0x11c>
    89fc:	ldr	x19, [sp, #16]
    8a00:	ldp	x29, x30, [sp], #32
    8a04:	ret
    8a08:	ldr	w0, [x19, #24]
    8a0c:	cmp	w0, #0x1
    8a10:	b.ne	89f4 <elf_rawfile@@ELFUTILS_1.0+0x124>  // b.any
    8a14:	add	x0, x19, #0x48
    8a18:	bl	89d8 <elf_rawfile@@ELFUTILS_1.0+0x108>
    8a1c:	b	89f4 <elf_rawfile@@ELFUTILS_1.0+0x124>
    8a20:	stp	x29, x30, [sp, #-32]!
    8a24:	mov	x29, sp
    8a28:	str	x19, [sp, #16]
    8a2c:	ldr	x19, [x0]
    8a30:	cbz	x19, 8a44 <elf_rawfile@@ELFUTILS_1.0+0x174>
    8a34:	ldr	w0, [x19, #60]
    8a38:	cbnz	w0, 8a50 <elf_rawfile@@ELFUTILS_1.0+0x180>
    8a3c:	ldr	x19, [x19, #16]
    8a40:	cbnz	x19, 8a34 <elf_rawfile@@ELFUTILS_1.0+0x164>
    8a44:	ldr	x19, [sp, #16]
    8a48:	ldp	x29, x30, [sp], #32
    8a4c:	ret
    8a50:	ldr	w0, [x19, #24]
    8a54:	cmp	w0, #0x1
    8a58:	b.ne	8a3c <elf_rawfile@@ELFUTILS_1.0+0x16c>  // b.any
    8a5c:	add	x0, x19, #0x48
    8a60:	bl	8a20 <elf_rawfile@@ELFUTILS_1.0+0x150>
    8a64:	b	8a3c <elf_rawfile@@ELFUTILS_1.0+0x16c>
    8a68:	stp	x29, x30, [sp, #-240]!
    8a6c:	mov	x29, sp
    8a70:	stp	x27, x28, [sp, #80]
    8a74:	ldr	x27, [x0]
    8a78:	cbz	x27, 8a8c <elf_rawfile@@ELFUTILS_1.0+0x1bc>
    8a7c:	mov	x0, x27
    8a80:	ldp	x27, x28, [sp, #80]
    8a84:	ldp	x29, x30, [sp], #240
    8a88:	ret
    8a8c:	ldr	w1, [x0, #36]
    8a90:	stp	x19, x20, [sp, #16]
    8a94:	mov	x19, x0
    8a98:	cmn	w1, #0x1
    8a9c:	b.eq	8c48 <elf_rawfile@@ELFUTILS_1.0+0x378>  // b.none
    8aa0:	add	x2, x0, #0x48
    8aa4:	ldr	w0, [x0, #24]
    8aa8:	stp	x21, x22, [sp, #32]
    8aac:	cmp	w0, #0x1
    8ab0:	str	x2, [sp, #104]
    8ab4:	b.eq	8bf8 <elf_rawfile@@ELFUTILS_1.0+0x328>  // b.none
    8ab8:	ldr	x21, [x19, #48]
    8abc:	cmn	x21, #0x1
    8ac0:	b.eq	8bdc <elf_rawfile@@ELFUTILS_1.0+0x30c>  // b.none
    8ac4:	mov	x0, x21
    8ac8:	bl	30c0 <malloc@plt>
    8acc:	mov	x27, x0
    8ad0:	cbz	x0, 8c58 <elf_rawfile@@ELFUTILS_1.0+0x388>
    8ad4:	stp	x25, x26, [sp, #64]
    8ad8:	mov	x28, #0x0                   	// #0
    8adc:	ldr	w26, [x19, #36]
    8ae0:	ldr	x25, [x19, #40]
    8ae4:	stp	x23, x24, [sp, #48]
    8ae8:	mov	x24, x21
    8aec:	mov	x23, x0
    8af0:	mov	x22, x25
    8af4:	mov	x3, x22
    8af8:	mov	x2, x24
    8afc:	mov	x1, x23
    8b00:	mov	w0, w26
    8b04:	bl	3250 <pread@plt>
    8b08:	mov	x20, x0
    8b0c:	cmn	x0, #0x1
    8b10:	b.eq	8b54 <elf_rawfile@@ELFUTILS_1.0+0x284>  // b.none
    8b14:	cmp	x0, #0x0
    8b18:	b.le	8c20 <elf_rawfile@@ELFUTILS_1.0+0x350>
    8b1c:	add	x28, x28, x0
    8b20:	cmp	x21, x28
    8b24:	b.ls	8c18 <elf_rawfile@@ELFUTILS_1.0+0x348>  // b.plast
    8b28:	add	x22, x25, x28
    8b2c:	sub	x24, x21, x28
    8b30:	add	x23, x27, x28
    8b34:	mov	x3, x22
    8b38:	mov	x2, x24
    8b3c:	mov	x1, x23
    8b40:	mov	w0, w26
    8b44:	bl	3250 <pread@plt>
    8b48:	mov	x20, x0
    8b4c:	cmn	x0, #0x1
    8b50:	b.ne	8b14 <elf_rawfile@@ELFUTILS_1.0+0x244>  // b.any
    8b54:	bl	3340 <__errno_location@plt>
    8b58:	ldr	w0, [x0]
    8b5c:	cmp	w0, #0x4
    8b60:	b.eq	8af4 <elf_rawfile@@ELFUTILS_1.0+0x224>  // b.none
    8b64:	ldr	x0, [x19, #48]
    8b68:	cmp	x0, x20
    8b6c:	b.ne	8c28 <elf_rawfile@@ELFUTILS_1.0+0x358>  // b.any
    8b70:	ldr	w2, [x19, #56]
    8b74:	mov	x0, x19
    8b78:	ldr	x1, [x19, #40]
    8b7c:	orr	w2, w2, #0x80
    8b80:	str	x27, [x19]
    8b84:	str	w2, [x19, #56]
    8b88:	bl	8938 <elf_rawfile@@ELFUTILS_1.0+0x68>
    8b8c:	ldr	w0, [x19, #24]
    8b90:	cmp	w0, #0x1
    8b94:	b.eq	8c04 <elf_rawfile@@ELFUTILS_1.0+0x334>  // b.none
    8b98:	ldp	x23, x24, [sp, #48]
    8b9c:	ldp	x25, x26, [sp, #64]
    8ba0:	str	xzr, [x19, #40]
    8ba4:	cmp	w0, #0x1
    8ba8:	ldr	x27, [x19]
    8bac:	b.eq	8bc8 <elf_rawfile@@ELFUTILS_1.0+0x2f8>  // b.none
    8bb0:	mov	x0, x27
    8bb4:	ldp	x19, x20, [sp, #16]
    8bb8:	ldp	x21, x22, [sp, #32]
    8bbc:	ldp	x27, x28, [sp, #80]
    8bc0:	ldp	x29, x30, [sp], #240
    8bc4:	ret
    8bc8:	ldr	x0, [sp, #104]
    8bcc:	bl	8a20 <elf_rawfile@@ELFUTILS_1.0+0x150>
    8bd0:	ldp	x19, x20, [sp, #16]
    8bd4:	ldp	x21, x22, [sp, #32]
    8bd8:	b	8a7c <elf_rawfile@@ELFUTILS_1.0+0x1ac>
    8bdc:	add	x2, sp, #0x70
    8be0:	mov	w0, #0x0                   	// #0
    8be4:	bl	32f0 <__fxstat@plt>
    8be8:	tbnz	w0, #31, 8c30 <elf_rawfile@@ELFUTILS_1.0+0x360>
    8bec:	ldr	x21, [sp, #160]
    8bf0:	str	x21, [x19, #48]
    8bf4:	b	8ac4 <elf_rawfile@@ELFUTILS_1.0+0x1f4>
    8bf8:	mov	x0, x2
    8bfc:	bl	89d8 <elf_rawfile@@ELFUTILS_1.0+0x108>
    8c00:	b	8ab8 <elf_rawfile@@ELFUTILS_1.0+0x1e8>
    8c04:	ldr	x2, [x19, #40]
    8c08:	ldr	x1, [x19, #112]
    8c0c:	sub	x1, x1, x2
    8c10:	str	x1, [x19, #112]
    8c14:	b	8b98 <elf_rawfile@@ELFUTILS_1.0+0x2c8>
    8c18:	mov	x20, x28
    8c1c:	b	8b64 <elf_rawfile@@ELFUTILS_1.0+0x294>
    8c20:	csel	x20, x0, x28, ne  // ne = any
    8c24:	b	8b64 <elf_rawfile@@ELFUTILS_1.0+0x294>
    8c28:	ldp	x23, x24, [sp, #48]
    8c2c:	ldp	x25, x26, [sp, #64]
    8c30:	mov	w0, #0x13                  	// #19
    8c34:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8c38:	mov	x0, x27
    8c3c:	bl	3200 <free@plt>
    8c40:	ldr	w0, [x19, #24]
    8c44:	b	8ba4 <elf_rawfile@@ELFUTILS_1.0+0x2d4>
    8c48:	mov	w0, #0x4                   	// #4
    8c4c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8c50:	ldp	x19, x20, [sp, #16]
    8c54:	b	8a7c <elf_rawfile@@ELFUTILS_1.0+0x1ac>
    8c58:	mov	w0, #0x8                   	// #8
    8c5c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8c60:	ldr	w0, [x19, #24]
    8c64:	b	8ba4 <elf_rawfile@@ELFUTILS_1.0+0x2d4>

0000000000008c68 <elf_cntl@@ELFUTILS_1.0>:
    8c68:	stp	x29, x30, [sp, #-32]!
    8c6c:	mov	x29, sp
    8c70:	stp	x19, x20, [sp, #16]
    8c74:	cbz	x0, 8ce4 <elf_cntl@@ELFUTILS_1.0+0x7c>
    8c78:	ldr	w20, [x0, #36]
    8c7c:	mov	x19, x0
    8c80:	cmn	w20, #0x1
    8c84:	b.eq	8cec <elf_cntl@@ELFUTILS_1.0+0x84>  // b.none
    8c88:	cmp	w1, #0x6
    8c8c:	b.eq	8cc8 <elf_cntl@@ELFUTILS_1.0+0x60>  // b.none
    8c90:	cmp	w1, #0x7
    8c94:	b.eq	8cb4 <elf_cntl@@ELFUTILS_1.0+0x4c>  // b.none
    8c98:	mov	w20, #0xffffffff            	// #-1
    8c9c:	mov	w0, #0xd                   	// #13
    8ca0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8ca4:	mov	w0, w20
    8ca8:	ldp	x19, x20, [sp, #16]
    8cac:	ldp	x29, x30, [sp], #32
    8cb0:	ret
    8cb4:	ldr	x1, [x0]
    8cb8:	cbnz	x1, 8cc8 <elf_cntl@@ELFUTILS_1.0+0x60>
    8cbc:	bl	8a68 <elf_rawfile@@ELFUTILS_1.0+0x198>
    8cc0:	cbz	x0, 8ce4 <elf_cntl@@ELFUTILS_1.0+0x7c>
    8cc4:	nop
    8cc8:	mov	w0, #0xffffffff            	// #-1
    8ccc:	mov	w20, #0x0                   	// #0
    8cd0:	str	w0, [x19, #36]
    8cd4:	mov	w0, w20
    8cd8:	ldp	x19, x20, [sp, #16]
    8cdc:	ldp	x29, x30, [sp], #32
    8ce0:	ret
    8ce4:	mov	w20, #0xffffffff            	// #-1
    8ce8:	b	8cd4 <elf_cntl@@ELFUTILS_1.0+0x6c>
    8cec:	mov	w0, #0x4                   	// #4
    8cf0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8cf4:	b	8cd4 <elf_cntl@@ELFUTILS_1.0+0x6c>

0000000000008cf8 <elf_getscn@@ELFUTILS_1.0>:
    8cf8:	cbz	x0, 8df8 <elf_getscn@@ELFUTILS_1.0+0x100>
    8cfc:	stp	x29, x30, [sp, #-48]!
    8d00:	mov	x29, sp
    8d04:	str	x21, [sp, #32]
    8d08:	mov	x21, x0
    8d0c:	ldr	w0, [x0, #24]
    8d10:	cmp	w0, #0x3
    8d14:	b.ne	8de8 <elf_getscn@@ELFUTILS_1.0+0xf0>  // b.any
    8d18:	stp	x19, x20, [sp, #16]
    8d1c:	mov	x20, x1
    8d20:	add	x19, x21, #0xc8
    8d24:	cbnz	x1, 8d94 <elf_getscn@@ELFUTILS_1.0+0x9c>
    8d28:	ldr	w0, [x21, #200]
    8d2c:	cbnz	w0, 8d94 <elf_getscn@@ELFUTILS_1.0+0x9c>
    8d30:	ldr	w0, [x21, #204]
    8d34:	cbz	w0, 8d94 <elf_getscn@@ELFUTILS_1.0+0x9c>
    8d38:	ldr	w0, [x21, #32]
    8d3c:	cmp	w0, #0x1
    8d40:	b.eq	8e00 <elf_getscn@@ELFUTILS_1.0+0x108>  // b.none
    8d44:	mov	x1, #0x40                  	// #64
    8d48:	mov	x0, #0x1                   	// #1
    8d4c:	bl	3140 <calloc@plt>
    8d50:	str	x0, [x21, #360]
    8d54:	add	x1, x21, #0xd8
    8d58:	cbz	x0, 8e18 <elf_getscn@@ELFUTILS_1.0+0x120>
    8d5c:	mov	w0, #0x81                  	// #129
    8d60:	str	x21, [x1, #136]
    8d64:	str	w0, [x1, #152]
    8d68:	mov	w0, #0x1                   	// #1
    8d6c:	ldr	x2, [x21, #96]
    8d70:	str	w0, [x1, #120]
    8d74:	str	x2, [x1, #200]
    8d78:	str	w0, [x21, #200]
    8d7c:	ldr	w0, [x19, #4]
    8d80:	cmp	x0, x20
    8d84:	b.hi	8da0 <elf_getscn@@ELFUTILS_1.0+0xa8>  // b.pmore
    8d88:	ldr	x19, [x19, #8]
    8d8c:	sub	x20, x20, x0
    8d90:	cbz	x19, 8dcc <elf_getscn@@ELFUTILS_1.0+0xd4>
    8d94:	ldr	w0, [x19, #4]
    8d98:	cmp	x0, x20
    8d9c:	b.ls	8d88 <elf_getscn@@ELFUTILS_1.0+0x90>  // b.plast
    8da0:	ldr	w0, [x19]
    8da4:	cmp	x0, x20
    8da8:	b.ls	8dcc <elf_getscn@@ELFUTILS_1.0+0xd4>  // b.plast
    8dac:	add	x0, x20, x20, lsl #1
    8db0:	add	x0, x20, x0, lsl #2
    8db4:	add	x0, x19, x0, lsl #4
    8db8:	ldp	x19, x20, [sp, #16]
    8dbc:	add	x0, x0, #0x10
    8dc0:	ldr	x21, [sp, #32]
    8dc4:	ldp	x29, x30, [sp], #48
    8dc8:	ret
    8dcc:	mov	w0, #0x16                  	// #22
    8dd0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8dd4:	mov	x0, #0x0                   	// #0
    8dd8:	ldp	x19, x20, [sp, #16]
    8ddc:	ldr	x21, [sp, #32]
    8de0:	ldp	x29, x30, [sp], #48
    8de4:	ret
    8de8:	mov	w0, #0x4                   	// #4
    8dec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8df0:	mov	x0, #0x0                   	// #0
    8df4:	b	8dc0 <elf_getscn@@ELFUTILS_1.0+0xc8>
    8df8:	mov	x0, #0x0                   	// #0
    8dfc:	ret
    8e00:	mov	x1, #0x28                  	// #40
    8e04:	mov	x0, #0x1                   	// #1
    8e08:	bl	3140 <calloc@plt>
    8e0c:	str	x0, [x21, #360]
    8e10:	add	x1, x21, #0xd8
    8e14:	cbnz	x0, 8d5c <elf_getscn@@ELFUTILS_1.0+0x64>
    8e18:	mov	w0, #0x8                   	// #8
    8e1c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8e20:	mov	x0, #0x0                   	// #0
    8e24:	ldp	x19, x20, [sp, #16]
    8e28:	b	8dc0 <elf_getscn@@ELFUTILS_1.0+0xc8>
    8e2c:	nop

0000000000008e30 <elf_nextscn@@ELFUTILS_1.0>:
    8e30:	cbz	x0, 8e84 <elf_nextscn@@ELFUTILS_1.0+0x54>
    8e34:	cbz	x1, 8e8c <elf_nextscn@@ELFUTILS_1.0+0x5c>
    8e38:	ldr	x3, [x1, #200]
    8e3c:	mov	w5, #0xd0                  	// #208
    8e40:	ldr	w2, [x3]
    8e44:	mov	x4, #0x10                  	// #16
    8e48:	add	x0, x1, #0xd0
    8e4c:	umaddl	x1, w2, w5, x4
    8e50:	add	x1, x3, x1
    8e54:	cmp	x0, x1
    8e58:	b.cc	8e80 <elf_nextscn@@ELFUTILS_1.0+0x50>  // b.lo, b.ul, b.last
    8e5c:	ldr	w1, [x3, #4]
    8e60:	umaddl	x1, w1, w5, x4
    8e64:	add	x1, x3, x1
    8e68:	cmp	x0, x1
    8e6c:	b.ne	8e84 <elf_nextscn@@ELFUTILS_1.0+0x54>  // b.any
    8e70:	ldr	x0, [x3, #8]
    8e74:	cbz	x0, 8e80 <elf_nextscn@@ELFUTILS_1.0+0x50>
    8e78:	ldr	w1, [x0], #16
    8e7c:	cbz	w1, 8e98 <elf_nextscn@@ELFUTILS_1.0+0x68>
    8e80:	ret
    8e84:	mov	x0, #0x0                   	// #0
    8e88:	ret
    8e8c:	add	x3, x0, #0xc8
    8e90:	add	x1, x0, #0xd8
    8e94:	b	8e3c <elf_nextscn@@ELFUTILS_1.0+0xc>
    8e98:	stp	x29, x30, [sp, #-16]!
    8e9c:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8ea0:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8ea4:	mov	x29, sp
    8ea8:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    8eac:	add	x3, x3, #0xfe0
    8eb0:	add	x1, x1, #0xfc0
    8eb4:	add	x0, x0, #0xfd0
    8eb8:	mov	w2, #0x4b                  	// #75
    8ebc:	bl	3330 <__assert_fail@plt>

0000000000008ec0 <elf_ndxscn@@ELFUTILS_1.0>:
    8ec0:	cbz	x0, 8ecc <elf_ndxscn@@ELFUTILS_1.0+0xc>
    8ec4:	ldr	x0, [x0, #128]
    8ec8:	ret
    8ecc:	mov	x0, #0x0                   	// #0
    8ed0:	ret
    8ed4:	nop

0000000000008ed8 <elf_newscn@@ELFUTILS_1.0>:
    8ed8:	stp	x29, x30, [sp, #-80]!
    8edc:	mov	x29, sp
    8ee0:	stp	x19, x20, [sp, #16]
    8ee4:	cbz	x0, 9068 <elf_newscn@@ELFUTILS_1.0+0x190>
    8ee8:	stp	x23, x24, [sp, #48]
    8eec:	add	x23, x0, #0xc8
    8ef0:	mov	x19, #0x0                   	// #0
    8ef4:	stp	x25, x26, [sp, #64]
    8ef8:	mov	x26, x0
    8efc:	stp	x21, x22, [sp, #32]
    8f00:	mov	w22, #0xd0                  	// #208
    8f04:	mov	x21, #0x10                  	// #16
    8f08:	ldr	x20, [x26, #96]
    8f0c:	ldp	w1, w0, [x20]
    8f10:	cmp	w1, w0
    8f14:	b.cs	8f98 <elf_newscn@@ELFUTILS_1.0+0xc0>  // b.hs, b.nlast
    8f18:	add	w24, w1, #0x1
    8f1c:	umaddl	x19, w1, w22, x21
    8f20:	str	w24, [x20]
    8f24:	cmp	w24, #0x1
    8f28:	add	x19, x20, x19
    8f2c:	ldr	x0, [x26, #96]
    8f30:	b.eq	905c <elf_newscn@@ELFUTILS_1.0+0x184>  // b.none
    8f34:	ldr	w0, [x0]
    8f38:	cmp	w0, #0x1
    8f3c:	b.ls	9090 <elf_newscn@@ELFUTILS_1.0+0x1b8>  // b.plast
    8f40:	mov	w2, w1
    8f44:	mov	w24, #0x0                   	// #0
    8f48:	add	x1, x2, w1, uxtw #1
    8f4c:	ldur	x0, [x19, #-80]
    8f50:	add	x1, x2, x1, lsl #2
    8f54:	add	x1, x20, x1, lsl #4
    8f58:	add	x0, x0, #0x1
    8f5c:	str	x0, [x1, #144]
    8f60:	ldr	w0, [x26, #32]
    8f64:	cmp	w0, #0x1
    8f68:	b.ne	9000 <elf_newscn@@ELFUTILS_1.0+0x128>  // b.any
    8f6c:	mov	x1, #0x28                  	// #40
    8f70:	mov	x0, #0x1                   	// #1
    8f74:	bl	3140 <calloc@plt>
    8f78:	str	x0, [x19, #144]
    8f7c:	cbnz	x0, 9014 <elf_newscn@@ELFUTILS_1.0+0x13c>
    8f80:	mov	w0, #0x8                   	// #8
    8f84:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8f88:	ldp	x21, x22, [sp, #32]
    8f8c:	ldp	x23, x24, [sp, #48]
    8f90:	ldp	x25, x26, [sp, #64]
    8f94:	b	904c <elf_newscn@@ELFUTILS_1.0+0x174>
    8f98:	ldr	w25, [x26, #112]
    8f9c:	cbz	w25, 9070 <elf_newscn@@ELFUTILS_1.0+0x198>
    8fa0:	lsl	w25, w25, #1
    8fa4:	str	w25, [x26, #112]
    8fa8:	mov	x1, #0x1                   	// #1
    8fac:	umaddl	x0, w25, w22, x21
    8fb0:	bl	3140 <calloc@plt>
    8fb4:	cbz	x0, 8f80 <elf_newscn@@ELFUTILS_1.0+0xa8>
    8fb8:	mov	x19, x0
    8fbc:	mov	w24, #0x0                   	// #0
    8fc0:	ldr	w1, [x19], #16
    8fc4:	add	w1, w1, #0x1
    8fc8:	stp	w1, w25, [x0]
    8fcc:	ldr	w1, [x20, #4]
    8fd0:	sub	w2, w1, #0x1
    8fd4:	add	x1, x2, x2, lsl #1
    8fd8:	add	x1, x2, x1, lsl #2
    8fdc:	add	x1, x20, x1, lsl #4
    8fe0:	ldr	x1, [x1, #144]
    8fe4:	add	x1, x1, #0x1
    8fe8:	str	x1, [x0, #144]
    8fec:	str	x0, [x20, #8]
    8ff0:	str	x0, [x26, #96]
    8ff4:	ldr	w0, [x26, #32]
    8ff8:	cmp	w0, #0x1
    8ffc:	b.eq	8f6c <elf_newscn@@ELFUTILS_1.0+0x94>  // b.none
    9000:	mov	x1, #0x40                  	// #64
    9004:	mov	x0, #0x1                   	// #1
    9008:	bl	3140 <calloc@plt>
    900c:	str	x0, [x19, #144]
    9010:	cbz	x0, 8f80 <elf_newscn@@ELFUTILS_1.0+0xa8>
    9014:	mov	w0, #0x81                  	// #129
    9018:	str	x26, [x19, #136]
    901c:	str	w0, [x19, #152]
    9020:	mov	w1, #0x1                   	// #1
    9024:	ldr	x0, [x26, #96]
    9028:	str	w1, [x19, #120]
    902c:	str	x0, [x19, #200]
    9030:	cbnz	w24, 8f08 <elf_newscn@@ELFUTILS_1.0+0x30>
    9034:	ldr	w0, [x19, #156]
    9038:	ldp	x21, x22, [sp, #32]
    903c:	orr	w0, w0, w1
    9040:	ldp	x23, x24, [sp, #48]
    9044:	ldp	x25, x26, [sp, #64]
    9048:	str	w0, [x19, #156]
    904c:	mov	x0, x19
    9050:	ldp	x19, x20, [sp, #16]
    9054:	ldp	x29, x30, [sp], #80
    9058:	ret
    905c:	cmp	x0, x23
    9060:	b.ne	8f34 <elf_newscn@@ELFUTILS_1.0+0x5c>  // b.any
    9064:	b	8ff4 <elf_newscn@@ELFUTILS_1.0+0x11c>
    9068:	mov	x19, #0x0                   	// #0
    906c:	b	904c <elf_newscn@@ELFUTILS_1.0+0x174>
    9070:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9074:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    9078:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    907c:	add	x3, x3, #0x48
    9080:	add	x1, x1, #0xff0
    9084:	add	x0, x0, #0x28
    9088:	mov	w2, #0x57                  	// #87
    908c:	bl	3330 <__assert_fail@plt>
    9090:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9094:	adrp	x1, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    9098:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    909c:	add	x3, x3, #0x48
    90a0:	add	x1, x1, #0xff0
    90a4:	add	x0, x0, #0x0
    90a8:	mov	w2, #0x4e                  	// #78
    90ac:	bl	3330 <__assert_fail@plt>
    90b0:	cbz	x0, 90e0 <elf_newscn@@ELFUTILS_1.0+0x208>
    90b4:	stp	x29, x30, [sp, #-16]!
    90b8:	mov	x29, sp
    90bc:	ldr	x0, [x0, #136]
    90c0:	ldr	x1, [x0, #72]
    90c4:	cbz	x1, 90e8 <elf_newscn@@ELFUTILS_1.0+0x210>
    90c8:	ldr	w1, [x0, #32]
    90cc:	mov	w0, #0x1                   	// #1
    90d0:	cmp	w1, w0
    90d4:	b.ne	90f8 <elf_newscn@@ELFUTILS_1.0+0x220>  // b.any
    90d8:	ldp	x29, x30, [sp], #16
    90dc:	ret
    90e0:	mov	w0, #0x0                   	// #0
    90e4:	ret
    90e8:	mov	w0, #0x1a                  	// #26
    90ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    90f0:	mov	w0, #0x0                   	// #0
    90f4:	b	90d8 <elf_newscn@@ELFUTILS_1.0+0x200>
    90f8:	mov	w0, #0x15                  	// #21
    90fc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9100:	mov	w0, #0x0                   	// #0
    9104:	b	90d8 <elf_newscn@@ELFUTILS_1.0+0x200>
    9108:	stp	x29, x30, [sp, #-128]!
    910c:	mov	x29, sp
    9110:	stp	x21, x22, [sp, #32]
    9114:	ldr	x22, [x1]
    9118:	cbz	x22, 912c <elf_newscn@@ELFUTILS_1.0+0x254>
    911c:	mov	x0, x22
    9120:	ldp	x21, x22, [sp, #32]
    9124:	ldp	x29, x30, [sp], #128
    9128:	ret
    912c:	ldr	x2, [x0, #72]
    9130:	mov	x21, x1
    9134:	add	x1, sp, #0x78
    9138:	stp	x19, x20, [sp, #16]
    913c:	mov	x19, x0
    9140:	str	x2, [sp, #96]
    9144:	bl	10918 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
    9148:	cbnz	w0, 92c8 <elf_newscn@@ELFUTILS_1.0+0x3f0>
    914c:	stp	x23, x24, [sp, #48]
    9150:	mov	x0, #0x6666666666666666    	// #7378697629483820646
    9154:	movk	x0, #0x666, lsl #48
    9158:	ldr	x23, [sp, #120]
    915c:	cmp	x23, x0
    9160:	b.hi	92bc <elf_newscn@@ELFUTILS_1.0+0x3e4>  // b.pmore
    9164:	add	x24, x23, x23, lsl #2
    9168:	lsl	x24, x24, #3
    916c:	mov	x0, x24
    9170:	bl	30c0 <malloc@plt>
    9174:	str	x0, [x19, #80]
    9178:	mov	x20, x0
    917c:	cbz	x0, 955c <elf_newscn@@ELFUTILS_1.0+0x684>
    9180:	ldr	x2, [x19]
    9184:	mov	w0, #0x1                   	// #1
    9188:	str	w0, [x19, #124]
    918c:	cbz	x2, 92d0 <elf_newscn@@ELFUTILS_1.0+0x3f8>
    9190:	ldr	x0, [sp, #96]
    9194:	ldr	x1, [x19, #48]
    9198:	ldr	w0, [x0, #32]
    919c:	cmp	x0, x1
    91a0:	b.cs	94fc <elf_newscn@@ELFUTILS_1.0+0x624>  // b.hs, b.nlast
    91a4:	sub	x1, x1, x0
    91a8:	cmp	x24, x1
    91ac:	b.hi	94fc <elf_newscn@@ELFUTILS_1.0+0x624>  // b.pmore
    91b0:	ldr	x1, [x19, #40]
    91b4:	stp	x25, x26, [sp, #64]
    91b8:	ldr	w3, [x19, #56]
    91bc:	add	x0, x0, x1
    91c0:	ldr	x1, [sp, #96]
    91c4:	add	x26, x2, x0
    91c8:	ldrb	w1, [x1, #5]
    91cc:	tbnz	w3, #7, 93a4 <elf_newscn@@ELFUTILS_1.0+0x4cc>
    91d0:	cmp	w1, #0x1
    91d4:	b.eq	9508 <elf_newscn@@ELFUTILS_1.0+0x630>  // b.none
    91d8:	ands	x25, x26, #0x3
    91dc:	b.ne	94cc <elf_newscn@@ELFUTILS_1.0+0x5f4>  // b.any
    91e0:	cbz	x23, 93ec <elf_newscn@@ELFUTILS_1.0+0x514>
    91e4:	mov	x3, x26
    91e8:	mov	x2, x20
    91ec:	add	x1, x19, #0x154
    91f0:	mov	x5, #0x0                   	// #0
    91f4:	mov	w6, #0xffffffff            	// #-1
    91f8:	b	9220 <elf_newscn@@ELFUTILS_1.0+0x348>
    91fc:	ldr	w0, [x1]
    9200:	cbnz	w0, 9208 <elf_newscn@@ELFUTILS_1.0+0x330>
    9204:	str	w6, [x1]
    9208:	add	x5, x5, #0x1
    920c:	add	x3, x3, #0x28
    9210:	cmp	x23, x5
    9214:	add	x2, x2, #0x28
    9218:	add	x1, x1, #0xd0
    921c:	b.eq	9420 <elf_newscn@@ELFUTILS_1.0+0x548>  // b.none
    9220:	ldr	w0, [x3]
    9224:	rev	w0, w0
    9228:	str	w0, [x2]
    922c:	ldr	w0, [x3, #4]
    9230:	rev	w0, w0
    9234:	str	w0, [x2, #4]
    9238:	cmp	w0, #0x12
    923c:	ldr	w0, [x3, #8]
    9240:	rev	w0, w0
    9244:	str	w0, [x2, #8]
    9248:	ldr	w0, [x3, #12]
    924c:	rev	w0, w0
    9250:	str	w0, [x2, #12]
    9254:	ldr	w0, [x3, #16]
    9258:	rev	w0, w0
    925c:	str	w0, [x2, #16]
    9260:	ldr	w0, [x3, #20]
    9264:	rev	w0, w0
    9268:	str	w0, [x2, #20]
    926c:	ldr	w0, [x3, #24]
    9270:	rev	w0, w0
    9274:	str	w0, [x2, #24]
    9278:	ldr	w4, [x3, #28]
    927c:	rev	w4, w4
    9280:	str	w4, [x2, #28]
    9284:	ldr	w4, [x3, #32]
    9288:	rev	w4, w4
    928c:	str	w4, [x2, #32]
    9290:	ldr	w4, [x3, #36]
    9294:	rev	w4, w4
    9298:	str	w4, [x2, #36]
    929c:	b.ne	91fc <elf_newscn@@ELFUTILS_1.0+0x324>  // b.any
    92a0:	cmp	x23, w0, uxtw
    92a4:	b.ls	91fc <elf_newscn@@ELFUTILS_1.0+0x324>  // b.plast
    92a8:	add	x4, x0, x0, lsl #1
    92ac:	add	x0, x0, x4, lsl #2
    92b0:	add	x0, x19, x0, lsl #4
    92b4:	str	w5, [x0, #340]
    92b8:	b	91fc <elf_newscn@@ELFUTILS_1.0+0x324>
    92bc:	ldp	x19, x20, [sp, #16]
    92c0:	ldp	x23, x24, [sp, #48]
    92c4:	b	911c <elf_newscn@@ELFUTILS_1.0+0x244>
    92c8:	ldp	x19, x20, [sp, #16]
    92cc:	b	911c <elf_newscn@@ELFUTILS_1.0+0x244>
    92d0:	stp	x27, x28, [sp, #80]
    92d4:	ldr	w27, [x19, #36]
    92d8:	cmn	w27, #0x1
    92dc:	b.eq	9410 <elf_newscn@@ELFUTILS_1.0+0x538>  // b.none
    92e0:	ldr	x0, [sp, #96]
    92e4:	stp	x25, x26, [sp, #64]
    92e8:	mov	x26, x24
    92ec:	ldr	x1, [x19, #40]
    92f0:	mov	x25, x20
    92f4:	ldr	w0, [x0, #32]
    92f8:	mov	x28, #0x0                   	// #0
    92fc:	add	x0, x0, x1
    9300:	str	x0, [sp, #104]
    9304:	mov	x23, x0
    9308:	mov	x3, x23
    930c:	mov	x2, x26
    9310:	mov	x1, x25
    9314:	mov	w0, w27
    9318:	bl	3250 <pread@plt>
    931c:	cmn	x0, #0x1
    9320:	b.eq	9364 <elf_newscn@@ELFUTILS_1.0+0x48c>  // b.none
    9324:	cmp	x0, #0x0
    9328:	b.le	9438 <elf_newscn@@ELFUTILS_1.0+0x560>
    932c:	add	x28, x28, x0
    9330:	cmp	x24, x28
    9334:	b.ls	943c <elf_newscn@@ELFUTILS_1.0+0x564>  // b.plast
    9338:	ldr	x0, [sp, #104]
    933c:	sub	x26, x24, x28
    9340:	add	x25, x20, x28
    9344:	mov	x2, x26
    9348:	add	x23, x0, x28
    934c:	mov	x1, x25
    9350:	mov	x3, x23
    9354:	mov	w0, w27
    9358:	bl	3250 <pread@plt>
    935c:	cmn	x0, #0x1
    9360:	b.ne	9324 <elf_newscn@@ELFUTILS_1.0+0x44c>  // b.any
    9364:	bl	3340 <__errno_location@plt>
    9368:	ldr	w0, [x0]
    936c:	cmp	w0, #0x4
    9370:	b.eq	9308 <elf_newscn@@ELFUTILS_1.0+0x430>  // b.none
    9374:	mov	w0, #0x13                  	// #19
    9378:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    937c:	ldp	x25, x26, [sp, #64]
    9380:	ldp	x27, x28, [sp, #80]
    9384:	nop
    9388:	mov	x0, x20
    938c:	bl	3200 <free@plt>
    9390:	ldp	x23, x24, [sp, #48]
    9394:	str	xzr, [x19, #80]
    9398:	str	wzr, [x19, #124]
    939c:	ldp	x19, x20, [sp, #16]
    93a0:	b	911c <elf_newscn@@ELFUTILS_1.0+0x244>
    93a4:	cmp	w1, #0x1
    93a8:	b.ne	91d8 <elf_newscn@@ELFUTILS_1.0+0x300>  // b.any
    93ac:	nop
    93b0:	mov	x2, x24
    93b4:	mov	x1, x26
    93b8:	mov	x0, x20
    93bc:	bl	3020 <memcpy@plt>
    93c0:	cbz	x23, 93ec <elf_newscn@@ELFUTILS_1.0+0x514>
    93c4:	ldr	x20, [x19, #80]
    93c8:	mov	x0, x20
    93cc:	add	x19, x19, #0x168
    93d0:	mov	x2, #0x0                   	// #0
    93d4:	nop
    93d8:	str	x0, [x19], #208
    93dc:	add	x2, x2, #0x1
    93e0:	cmp	x23, x2
    93e4:	add	x0, x0, #0x28
    93e8:	b.hi	93d8 <elf_newscn@@ELFUTILS_1.0+0x500>  // b.pmore
    93ec:	ldr	x22, [x21]
    93f0:	cbz	x22, 9570 <elf_newscn@@ELFUTILS_1.0+0x698>
    93f4:	mov	x0, x22
    93f8:	ldp	x19, x20, [sp, #16]
    93fc:	ldp	x21, x22, [sp, #32]
    9400:	ldp	x23, x24, [sp, #48]
    9404:	ldp	x25, x26, [sp, #64]
    9408:	ldp	x29, x30, [sp], #128
    940c:	ret
    9410:	mov	w0, #0x1b                  	// #27
    9414:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9418:	ldp	x27, x28, [sp, #80]
    941c:	b	9388 <elf_newscn@@ELFUTILS_1.0+0x4b0>
    9420:	cbz	x25, 93c8 <elf_newscn@@ELFUTILS_1.0+0x4f0>
    9424:	mov	x0, x26
    9428:	bl	3200 <free@plt>
    942c:	ldr	x23, [sp, #120]
    9430:	cbnz	x23, 93c4 <elf_newscn@@ELFUTILS_1.0+0x4ec>
    9434:	b	93ec <elf_newscn@@ELFUTILS_1.0+0x514>
    9438:	csel	x28, x28, x0, eq  // eq = none
    943c:	cmp	x24, x28
    9440:	b.ne	9374 <elf_newscn@@ELFUTILS_1.0+0x49c>  // b.any
    9444:	ldr	x0, [sp, #96]
    9448:	ldr	x23, [sp, #120]
    944c:	ldrb	w0, [x0, #5]
    9450:	cmp	w0, #0x1
    9454:	b.eq	9540 <elf_newscn@@ELFUTILS_1.0+0x668>  // b.none
    9458:	cbz	x23, 954c <elf_newscn@@ELFUTILS_1.0+0x674>
    945c:	add	x11, x23, x23, lsl #2
    9460:	mov	x0, x20
    9464:	add	x11, x20, x11, lsl #3
    9468:	ldp	w10, w9, [x0]
    946c:	ldp	w8, w7, [x0, #8]
    9470:	rev	w10, w10
    9474:	ldp	w6, w5, [x0, #16]
    9478:	rev	w9, w9
    947c:	ldp	w4, w3, [x0, #24]
    9480:	rev	w8, w8
    9484:	ldp	w2, w1, [x0, #32]
    9488:	rev	w7, w7
    948c:	rev	w6, w6
    9490:	rev	w5, w5
    9494:	rev	w4, w4
    9498:	rev	w3, w3
    949c:	rev	w2, w2
    94a0:	rev	w1, w1
    94a4:	stp	w10, w9, [x0]
    94a8:	stp	w8, w7, [x0, #8]
    94ac:	stp	w6, w5, [x0, #16]
    94b0:	stp	w4, w3, [x0, #24]
    94b4:	stp	w2, w1, [x0, #32]
    94b8:	add	x0, x0, #0x28
    94bc:	cmp	x0, x11
    94c0:	b.ne	9468 <elf_newscn@@ELFUTILS_1.0+0x590>  // b.any
    94c4:	ldp	x27, x28, [sp, #80]
    94c8:	b	93c4 <elf_newscn@@ELFUTILS_1.0+0x4ec>
    94cc:	mov	x0, x24
    94d0:	stp	x27, x28, [sp, #80]
    94d4:	bl	30c0 <malloc@plt>
    94d8:	mov	x27, x0
    94dc:	cbz	x0, 9554 <elf_newscn@@ELFUTILS_1.0+0x67c>
    94e0:	mov	x1, x26
    94e4:	mov	x2, x24
    94e8:	mov	x26, x27
    94ec:	bl	3020 <memcpy@plt>
    94f0:	ldp	x27, x28, [sp, #80]
    94f4:	cbnz	x23, 91e4 <elf_newscn@@ELFUTILS_1.0+0x30c>
    94f8:	b	9424 <elf_newscn@@ELFUTILS_1.0+0x54c>
    94fc:	mov	w0, #0x20                  	// #32
    9500:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9504:	b	9388 <elf_newscn@@ELFUTILS_1.0+0x4b0>
    9508:	ldr	w0, [x19, #28]
    950c:	cmp	w0, #0x8
    9510:	b.eq	93b0 <elf_newscn@@ELFUTILS_1.0+0x4d8>  // b.none
    9514:	tst	x26, #0x3
    9518:	b.ne	93b0 <elf_newscn@@ELFUTILS_1.0+0x4d8>  // b.any
    951c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9520:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9524:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9528:	add	x3, x3, #0x148
    952c:	add	x1, x1, #0x58
    9530:	add	x0, x0, #0x68
    9534:	mov	w2, #0x64                  	// #100
    9538:	stp	x27, x28, [sp, #80]
    953c:	bl	3330 <__assert_fail@plt>
    9540:	ldp	x27, x28, [sp, #80]
    9544:	cbnz	x23, 93c4 <elf_newscn@@ELFUTILS_1.0+0x4ec>
    9548:	b	93ec <elf_newscn@@ELFUTILS_1.0+0x514>
    954c:	ldp	x27, x28, [sp, #80]
    9550:	b	93ec <elf_newscn@@ELFUTILS_1.0+0x514>
    9554:	ldp	x25, x26, [sp, #64]
    9558:	ldp	x27, x28, [sp, #80]
    955c:	mov	w0, #0x8                   	// #8
    9560:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9564:	ldp	x19, x20, [sp, #16]
    9568:	ldp	x23, x24, [sp, #48]
    956c:	b	911c <elf_newscn@@ELFUTILS_1.0+0x244>
    9570:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9574:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9578:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    957c:	add	x3, x3, #0x148
    9580:	add	x1, x1, #0x58
    9584:	add	x0, x0, #0x138
    9588:	mov	w2, #0xdd                  	// #221
    958c:	stp	x27, x28, [sp, #80]
    9590:	bl	3330 <__assert_fail@plt>
    9594:	nop
    9598:	stp	x29, x30, [sp, #-32]!
    959c:	mov	x29, sp
    95a0:	str	x19, [sp, #16]
    95a4:	mov	x19, x0
    95a8:	bl	90b0 <elf_newscn@@ELFUTILS_1.0+0x1d8>
    95ac:	tst	w0, #0xff
    95b0:	b.eq	95c8 <elf_newscn@@ELFUTILS_1.0+0x6f0>  // b.none
    95b4:	ldr	x0, [x19, #144]
    95b8:	cbz	x0, 95d8 <elf_newscn@@ELFUTILS_1.0+0x700>
    95bc:	ldr	x19, [sp, #16]
    95c0:	ldp	x29, x30, [sp], #32
    95c4:	ret
    95c8:	mov	x0, #0x0                   	// #0
    95cc:	ldr	x19, [sp, #16]
    95d0:	ldp	x29, x30, [sp], #32
    95d4:	ret
    95d8:	add	x1, x19, #0x90
    95dc:	ldr	x0, [x19, #136]
    95e0:	ldr	x19, [sp, #16]
    95e4:	ldp	x29, x30, [sp], #32
    95e8:	b	9108 <elf_newscn@@ELFUTILS_1.0+0x230>
    95ec:	nop
    95f0:	stp	x29, x30, [sp, #-32]!
    95f4:	mov	x29, sp
    95f8:	str	x19, [sp, #16]
    95fc:	mov	x19, x0
    9600:	bl	90b0 <elf_newscn@@ELFUTILS_1.0+0x1d8>
    9604:	tst	w0, #0xff
    9608:	b.eq	9620 <elf_newscn@@ELFUTILS_1.0+0x748>  // b.none
    960c:	ldr	x0, [x19, #144]
    9610:	cbz	x0, 9630 <elf_newscn@@ELFUTILS_1.0+0x758>
    9614:	ldr	x19, [sp, #16]
    9618:	ldp	x29, x30, [sp], #32
    961c:	ret
    9620:	mov	x0, #0x0                   	// #0
    9624:	ldr	x19, [sp, #16]
    9628:	ldp	x29, x30, [sp], #32
    962c:	ret
    9630:	add	x1, x19, #0x90
    9634:	ldr	x0, [x19, #136]
    9638:	ldr	x19, [sp, #16]
    963c:	ldp	x29, x30, [sp], #32
    9640:	b	9108 <elf_newscn@@ELFUTILS_1.0+0x230>
    9644:	nop

0000000000009648 <elf32_getshdr@@ELFUTILS_1.0>:
    9648:	stp	x29, x30, [sp, #-32]!
    964c:	mov	x29, sp
    9650:	str	x19, [sp, #16]
    9654:	mov	x19, x0
    9658:	bl	90b0 <elf_newscn@@ELFUTILS_1.0+0x1d8>
    965c:	tst	w0, #0xff
    9660:	b.eq	9674 <elf32_getshdr@@ELFUTILS_1.0+0x2c>  // b.none
    9664:	mov	x0, x19
    9668:	ldr	x19, [sp, #16]
    966c:	ldp	x29, x30, [sp], #32
    9670:	b	9598 <elf_newscn@@ELFUTILS_1.0+0x6c0>
    9674:	mov	x0, #0x0                   	// #0
    9678:	ldr	x19, [sp, #16]
    967c:	ldp	x29, x30, [sp], #32
    9680:	ret
    9684:	nop
    9688:	cbz	x0, 96b8 <elf32_getshdr@@ELFUTILS_1.0+0x70>
    968c:	stp	x29, x30, [sp, #-16]!
    9690:	mov	x29, sp
    9694:	ldr	x0, [x0, #136]
    9698:	ldr	x1, [x0, #72]
    969c:	cbz	x1, 96c0 <elf32_getshdr@@ELFUTILS_1.0+0x78>
    96a0:	ldr	w1, [x0, #32]
    96a4:	mov	w0, #0x1                   	// #1
    96a8:	cmp	w1, #0x2
    96ac:	b.ne	96d0 <elf32_getshdr@@ELFUTILS_1.0+0x88>  // b.any
    96b0:	ldp	x29, x30, [sp], #16
    96b4:	ret
    96b8:	mov	w0, #0x0                   	// #0
    96bc:	ret
    96c0:	mov	w0, #0x1a                  	// #26
    96c4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    96c8:	mov	w0, #0x0                   	// #0
    96cc:	b	96b0 <elf32_getshdr@@ELFUTILS_1.0+0x68>
    96d0:	mov	w0, #0x15                  	// #21
    96d4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    96d8:	mov	w0, #0x0                   	// #0
    96dc:	b	96b0 <elf32_getshdr@@ELFUTILS_1.0+0x68>
    96e0:	stp	x29, x30, [sp, #-128]!
    96e4:	mov	x29, sp
    96e8:	stp	x21, x22, [sp, #32]
    96ec:	ldr	x22, [x1]
    96f0:	cbz	x22, 9704 <elf32_getshdr@@ELFUTILS_1.0+0xbc>
    96f4:	mov	x0, x22
    96f8:	ldp	x21, x22, [sp, #32]
    96fc:	ldp	x29, x30, [sp], #128
    9700:	ret
    9704:	ldr	x2, [x0, #72]
    9708:	mov	x21, x1
    970c:	add	x1, sp, #0x78
    9710:	stp	x19, x20, [sp, #16]
    9714:	mov	x19, x0
    9718:	str	x2, [sp, #96]
    971c:	bl	10918 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
    9720:	cbnz	w0, 9898 <elf32_getshdr@@ELFUTILS_1.0+0x250>
    9724:	stp	x23, x24, [sp, #48]
    9728:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
    972c:	ldr	x23, [sp, #120]
    9730:	cmp	x23, x0
    9734:	b.hi	988c <elf32_getshdr@@ELFUTILS_1.0+0x244>  // b.pmore
    9738:	lsl	x24, x23, #6
    973c:	mov	x0, x24
    9740:	bl	30c0 <malloc@plt>
    9744:	str	x0, [x19, #80]
    9748:	mov	x20, x0
    974c:	cbz	x0, 9b2c <elf32_getshdr@@ELFUTILS_1.0+0x4e4>
    9750:	ldr	x2, [x19]
    9754:	mov	w0, #0x1                   	// #1
    9758:	str	w0, [x19, #124]
    975c:	cbz	x2, 98a0 <elf32_getshdr@@ELFUTILS_1.0+0x258>
    9760:	ldr	x0, [sp, #96]
    9764:	ldr	x1, [x19, #48]
    9768:	ldr	x0, [x0, #40]
    976c:	cmp	x0, x1
    9770:	b.cs	9acc <elf32_getshdr@@ELFUTILS_1.0+0x484>  // b.hs, b.nlast
    9774:	sub	x1, x1, x0
    9778:	cmp	x24, x1
    977c:	b.hi	9acc <elf32_getshdr@@ELFUTILS_1.0+0x484>  // b.pmore
    9780:	ldr	x1, [x19, #40]
    9784:	stp	x25, x26, [sp, #64]
    9788:	ldr	w3, [x19, #56]
    978c:	add	x0, x0, x1
    9790:	ldr	x1, [sp, #96]
    9794:	add	x26, x2, x0
    9798:	ldrb	w1, [x1, #5]
    979c:	tbnz	w3, #7, 9974 <elf32_getshdr@@ELFUTILS_1.0+0x32c>
    97a0:	cmp	w1, #0x1
    97a4:	b.eq	9ad8 <elf32_getshdr@@ELFUTILS_1.0+0x490>  // b.none
    97a8:	ands	x25, x26, #0x7
    97ac:	b.ne	9a9c <elf32_getshdr@@ELFUTILS_1.0+0x454>  // b.any
    97b0:	cbz	x23, 99bc <elf32_getshdr@@ELFUTILS_1.0+0x374>
    97b4:	mov	x3, x26
    97b8:	mov	x2, x20
    97bc:	add	x6, x19, #0x154
    97c0:	mov	x7, #0x0                   	// #0
    97c4:	mov	w8, #0xffffffff            	// #-1
    97c8:	b	97f0 <elf32_getshdr@@ELFUTILS_1.0+0x1a8>
    97cc:	ldr	w0, [x6]
    97d0:	cbnz	w0, 97d8 <elf32_getshdr@@ELFUTILS_1.0+0x190>
    97d4:	str	w8, [x6]
    97d8:	add	x7, x7, #0x1
    97dc:	add	x3, x3, #0x40
    97e0:	cmp	x23, x7
    97e4:	add	x2, x2, #0x40
    97e8:	add	x6, x6, #0xd0
    97ec:	b.eq	99f0 <elf32_getshdr@@ELFUTILS_1.0+0x3a8>  // b.none
    97f0:	ldr	w0, [x3]
    97f4:	ldr	x1, [x3, #8]
    97f8:	rev	w0, w0
    97fc:	str	w0, [x2]
    9800:	rev	x1, x1
    9804:	ldr	w0, [x3, #4]
    9808:	str	x1, [x2, #8]
    980c:	rev	w0, w0
    9810:	str	w0, [x2, #4]
    9814:	ldr	x1, [x3, #16]
    9818:	cmp	w0, #0x12
    981c:	ldr	w0, [x3, #40]
    9820:	rev	x1, x1
    9824:	str	x1, [x2, #16]
    9828:	rev	w0, w0
    982c:	ldr	x4, [x3, #24]
    9830:	rev	x4, x4
    9834:	str	x4, [x2, #24]
    9838:	ldr	x4, [x3, #32]
    983c:	str	w0, [x2, #40]
    9840:	rev	x4, x4
    9844:	str	x4, [x2, #32]
    9848:	ldr	w5, [x3, #44]
    984c:	ldr	x4, [x3, #48]
    9850:	rev	w5, w5
    9854:	str	w5, [x2, #44]
    9858:	rev	x4, x4
    985c:	str	x4, [x2, #48]
    9860:	ldr	x4, [x3, #56]
    9864:	rev	x4, x4
    9868:	str	x4, [x2, #56]
    986c:	b.ne	97cc <elf32_getshdr@@ELFUTILS_1.0+0x184>  // b.any
    9870:	cmp	x23, w0, uxtw
    9874:	b.ls	97cc <elf32_getshdr@@ELFUTILS_1.0+0x184>  // b.plast
    9878:	add	x1, x0, x0, lsl #1
    987c:	add	x0, x0, x1, lsl #2
    9880:	add	x0, x19, x0, lsl #4
    9884:	str	w7, [x0, #340]
    9888:	b	97cc <elf32_getshdr@@ELFUTILS_1.0+0x184>
    988c:	ldp	x19, x20, [sp, #16]
    9890:	ldp	x23, x24, [sp, #48]
    9894:	b	96f4 <elf32_getshdr@@ELFUTILS_1.0+0xac>
    9898:	ldp	x19, x20, [sp, #16]
    989c:	b	96f4 <elf32_getshdr@@ELFUTILS_1.0+0xac>
    98a0:	stp	x27, x28, [sp, #80]
    98a4:	ldr	w27, [x19, #36]
    98a8:	cmn	w27, #0x1
    98ac:	b.eq	99e0 <elf32_getshdr@@ELFUTILS_1.0+0x398>  // b.none
    98b0:	ldr	x0, [sp, #96]
    98b4:	stp	x25, x26, [sp, #64]
    98b8:	mov	x26, x24
    98bc:	ldr	x1, [x19, #40]
    98c0:	mov	x25, x20
    98c4:	ldr	x0, [x0, #40]
    98c8:	mov	x28, #0x0                   	// #0
    98cc:	add	x0, x1, x0
    98d0:	str	x0, [sp, #104]
    98d4:	mov	x23, x0
    98d8:	mov	x3, x23
    98dc:	mov	x2, x26
    98e0:	mov	x1, x25
    98e4:	mov	w0, w27
    98e8:	bl	3250 <pread@plt>
    98ec:	cmn	x0, #0x1
    98f0:	b.eq	9934 <elf32_getshdr@@ELFUTILS_1.0+0x2ec>  // b.none
    98f4:	cmp	x0, #0x0
    98f8:	b.le	9a08 <elf32_getshdr@@ELFUTILS_1.0+0x3c0>
    98fc:	add	x28, x28, x0
    9900:	cmp	x24, x28
    9904:	b.ls	9a0c <elf32_getshdr@@ELFUTILS_1.0+0x3c4>  // b.plast
    9908:	ldr	x0, [sp, #104]
    990c:	sub	x26, x24, x28
    9910:	add	x25, x20, x28
    9914:	mov	x2, x26
    9918:	add	x23, x0, x28
    991c:	mov	x1, x25
    9920:	mov	x3, x23
    9924:	mov	w0, w27
    9928:	bl	3250 <pread@plt>
    992c:	cmn	x0, #0x1
    9930:	b.ne	98f4 <elf32_getshdr@@ELFUTILS_1.0+0x2ac>  // b.any
    9934:	bl	3340 <__errno_location@plt>
    9938:	ldr	w0, [x0]
    993c:	cmp	w0, #0x4
    9940:	b.eq	98d8 <elf32_getshdr@@ELFUTILS_1.0+0x290>  // b.none
    9944:	mov	w0, #0x13                  	// #19
    9948:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    994c:	ldp	x25, x26, [sp, #64]
    9950:	ldp	x27, x28, [sp, #80]
    9954:	nop
    9958:	mov	x0, x20
    995c:	bl	3200 <free@plt>
    9960:	ldp	x23, x24, [sp, #48]
    9964:	str	xzr, [x19, #80]
    9968:	str	wzr, [x19, #124]
    996c:	ldp	x19, x20, [sp, #16]
    9970:	b	96f4 <elf32_getshdr@@ELFUTILS_1.0+0xac>
    9974:	cmp	w1, #0x1
    9978:	b.ne	97a8 <elf32_getshdr@@ELFUTILS_1.0+0x160>  // b.any
    997c:	nop
    9980:	mov	x2, x24
    9984:	mov	x1, x26
    9988:	mov	x0, x20
    998c:	bl	3020 <memcpy@plt>
    9990:	cbz	x23, 99bc <elf32_getshdr@@ELFUTILS_1.0+0x374>
    9994:	ldr	x20, [x19, #80]
    9998:	mov	x0, x20
    999c:	add	x19, x19, #0x168
    99a0:	mov	x2, #0x0                   	// #0
    99a4:	nop
    99a8:	str	x0, [x19], #208
    99ac:	add	x2, x2, #0x1
    99b0:	cmp	x23, x2
    99b4:	add	x0, x0, #0x40
    99b8:	b.hi	99a8 <elf32_getshdr@@ELFUTILS_1.0+0x360>  // b.pmore
    99bc:	ldr	x22, [x21]
    99c0:	cbz	x22, 9b40 <elf32_getshdr@@ELFUTILS_1.0+0x4f8>
    99c4:	mov	x0, x22
    99c8:	ldp	x19, x20, [sp, #16]
    99cc:	ldp	x21, x22, [sp, #32]
    99d0:	ldp	x23, x24, [sp, #48]
    99d4:	ldp	x25, x26, [sp, #64]
    99d8:	ldp	x29, x30, [sp], #128
    99dc:	ret
    99e0:	mov	w0, #0x1b                  	// #27
    99e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    99e8:	ldp	x27, x28, [sp, #80]
    99ec:	b	9958 <elf32_getshdr@@ELFUTILS_1.0+0x310>
    99f0:	cbz	x25, 9998 <elf32_getshdr@@ELFUTILS_1.0+0x350>
    99f4:	mov	x0, x26
    99f8:	bl	3200 <free@plt>
    99fc:	ldr	x23, [sp, #120]
    9a00:	cbnz	x23, 9994 <elf32_getshdr@@ELFUTILS_1.0+0x34c>
    9a04:	b	99bc <elf32_getshdr@@ELFUTILS_1.0+0x374>
    9a08:	csel	x28, x28, x0, eq  // eq = none
    9a0c:	cmp	x24, x28
    9a10:	b.ne	9944 <elf32_getshdr@@ELFUTILS_1.0+0x2fc>  // b.any
    9a14:	ldr	x0, [sp, #96]
    9a18:	ldr	x23, [sp, #120]
    9a1c:	ldrb	w0, [x0, #5]
    9a20:	cmp	w0, #0x1
    9a24:	b.eq	9b10 <elf32_getshdr@@ELFUTILS_1.0+0x4c8>  // b.none
    9a28:	cbz	x23, 9b1c <elf32_getshdr@@ELFUTILS_1.0+0x4d4>
    9a2c:	mov	x0, x20
    9a30:	add	x11, x20, x23, lsl #6
    9a34:	nop
    9a38:	ldp	x8, x7, [x0, #8]
    9a3c:	ldp	x6, x5, [x0, #24]
    9a40:	ldp	x2, x1, [x0, #48]
    9a44:	ldp	w10, w9, [x0]
    9a48:	rev	x8, x8
    9a4c:	ldp	w4, w3, [x0, #40]
    9a50:	rev	w10, w10
    9a54:	rev	w9, w9
    9a58:	rev	x7, x7
    9a5c:	rev	w4, w4
    9a60:	rev	w3, w3
    9a64:	rev	x6, x6
    9a68:	rev	x5, x5
    9a6c:	rev	x2, x2
    9a70:	rev	x1, x1
    9a74:	stp	w10, w9, [x0]
    9a78:	stp	x8, x7, [x0, #8]
    9a7c:	stp	x6, x5, [x0, #24]
    9a80:	stp	w4, w3, [x0, #40]
    9a84:	stp	x2, x1, [x0, #48]
    9a88:	add	x0, x0, #0x40
    9a8c:	cmp	x0, x11
    9a90:	b.ne	9a38 <elf32_getshdr@@ELFUTILS_1.0+0x3f0>  // b.any
    9a94:	ldp	x27, x28, [sp, #80]
    9a98:	b	9994 <elf32_getshdr@@ELFUTILS_1.0+0x34c>
    9a9c:	mov	x0, x24
    9aa0:	stp	x27, x28, [sp, #80]
    9aa4:	bl	30c0 <malloc@plt>
    9aa8:	mov	x27, x0
    9aac:	cbz	x0, 9b24 <elf32_getshdr@@ELFUTILS_1.0+0x4dc>
    9ab0:	mov	x1, x26
    9ab4:	mov	x2, x24
    9ab8:	mov	x26, x27
    9abc:	bl	3020 <memcpy@plt>
    9ac0:	ldp	x27, x28, [sp, #80]
    9ac4:	cbnz	x23, 97b4 <elf32_getshdr@@ELFUTILS_1.0+0x16c>
    9ac8:	b	99f4 <elf32_getshdr@@ELFUTILS_1.0+0x3ac>
    9acc:	mov	w0, #0x20                  	// #32
    9ad0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9ad4:	b	9958 <elf32_getshdr@@ELFUTILS_1.0+0x310>
    9ad8:	ldr	w0, [x19, #28]
    9adc:	cmp	w0, #0x8
    9ae0:	b.eq	9980 <elf32_getshdr@@ELFUTILS_1.0+0x338>  // b.none
    9ae4:	tst	x26, #0x7
    9ae8:	b.ne	9980 <elf32_getshdr@@ELFUTILS_1.0+0x338>  // b.any
    9aec:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9af0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9af4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9af8:	add	x3, x3, #0x160
    9afc:	add	x1, x1, #0x58
    9b00:	add	x0, x0, #0x68
    9b04:	mov	w2, #0x64                  	// #100
    9b08:	stp	x27, x28, [sp, #80]
    9b0c:	bl	3330 <__assert_fail@plt>
    9b10:	ldp	x27, x28, [sp, #80]
    9b14:	cbnz	x23, 9994 <elf32_getshdr@@ELFUTILS_1.0+0x34c>
    9b18:	b	99bc <elf32_getshdr@@ELFUTILS_1.0+0x374>
    9b1c:	ldp	x27, x28, [sp, #80]
    9b20:	b	99bc <elf32_getshdr@@ELFUTILS_1.0+0x374>
    9b24:	ldp	x25, x26, [sp, #64]
    9b28:	ldp	x27, x28, [sp, #80]
    9b2c:	mov	w0, #0x8                   	// #8
    9b30:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9b34:	ldp	x19, x20, [sp, #16]
    9b38:	ldp	x23, x24, [sp, #48]
    9b3c:	b	96f4 <elf32_getshdr@@ELFUTILS_1.0+0xac>
    9b40:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9b44:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9b48:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    9b4c:	add	x3, x3, #0x160
    9b50:	add	x1, x1, #0x58
    9b54:	add	x0, x0, #0x138
    9b58:	mov	w2, #0xdd                  	// #221
    9b5c:	stp	x27, x28, [sp, #80]
    9b60:	bl	3330 <__assert_fail@plt>
    9b64:	nop
    9b68:	stp	x29, x30, [sp, #-32]!
    9b6c:	mov	x29, sp
    9b70:	str	x19, [sp, #16]
    9b74:	mov	x19, x0
    9b78:	bl	9688 <elf32_getshdr@@ELFUTILS_1.0+0x40>
    9b7c:	tst	w0, #0xff
    9b80:	b.eq	9b98 <elf32_getshdr@@ELFUTILS_1.0+0x550>  // b.none
    9b84:	ldr	x0, [x19, #144]
    9b88:	cbz	x0, 9ba8 <elf32_getshdr@@ELFUTILS_1.0+0x560>
    9b8c:	ldr	x19, [sp, #16]
    9b90:	ldp	x29, x30, [sp], #32
    9b94:	ret
    9b98:	mov	x0, #0x0                   	// #0
    9b9c:	ldr	x19, [sp, #16]
    9ba0:	ldp	x29, x30, [sp], #32
    9ba4:	ret
    9ba8:	add	x1, x19, #0x90
    9bac:	ldr	x0, [x19, #136]
    9bb0:	ldr	x19, [sp, #16]
    9bb4:	ldp	x29, x30, [sp], #32
    9bb8:	b	96e0 <elf32_getshdr@@ELFUTILS_1.0+0x98>
    9bbc:	nop
    9bc0:	stp	x29, x30, [sp, #-32]!
    9bc4:	mov	x29, sp
    9bc8:	str	x19, [sp, #16]
    9bcc:	mov	x19, x0
    9bd0:	bl	9688 <elf32_getshdr@@ELFUTILS_1.0+0x40>
    9bd4:	tst	w0, #0xff
    9bd8:	b.eq	9bf0 <elf32_getshdr@@ELFUTILS_1.0+0x5a8>  // b.none
    9bdc:	ldr	x0, [x19, #144]
    9be0:	cbz	x0, 9c00 <elf32_getshdr@@ELFUTILS_1.0+0x5b8>
    9be4:	ldr	x19, [sp, #16]
    9be8:	ldp	x29, x30, [sp], #32
    9bec:	ret
    9bf0:	mov	x0, #0x0                   	// #0
    9bf4:	ldr	x19, [sp, #16]
    9bf8:	ldp	x29, x30, [sp], #32
    9bfc:	ret
    9c00:	add	x1, x19, #0x90
    9c04:	ldr	x0, [x19, #136]
    9c08:	ldr	x19, [sp, #16]
    9c0c:	ldp	x29, x30, [sp], #32
    9c10:	b	96e0 <elf32_getshdr@@ELFUTILS_1.0+0x98>
    9c14:	nop

0000000000009c18 <elf64_getshdr@@ELFUTILS_1.0>:
    9c18:	stp	x29, x30, [sp, #-32]!
    9c1c:	mov	x29, sp
    9c20:	str	x19, [sp, #16]
    9c24:	mov	x19, x0
    9c28:	bl	9688 <elf32_getshdr@@ELFUTILS_1.0+0x40>
    9c2c:	tst	w0, #0xff
    9c30:	b.eq	9c44 <elf64_getshdr@@ELFUTILS_1.0+0x2c>  // b.none
    9c34:	mov	x0, x19
    9c38:	ldr	x19, [sp, #16]
    9c3c:	ldp	x29, x30, [sp], #32
    9c40:	b	9b68 <elf32_getshdr@@ELFUTILS_1.0+0x520>
    9c44:	mov	x0, #0x0                   	// #0
    9c48:	ldr	x19, [sp, #16]
    9c4c:	ldp	x29, x30, [sp], #32
    9c50:	ret
    9c54:	nop

0000000000009c58 <gelf_getshdr@@ELFUTILS_1.0>:
    9c58:	cbz	x0, 9d18 <gelf_getshdr@@ELFUTILS_1.0+0xc0>
    9c5c:	stp	x29, x30, [sp, #-32]!
    9c60:	mov	x29, sp
    9c64:	str	x19, [sp, #16]
    9c68:	mov	x19, x1
    9c6c:	cbz	x1, 9d00 <gelf_getshdr@@ELFUTILS_1.0+0xa8>
    9c70:	ldp	x2, x1, [x0, #136]
    9c74:	ldr	w2, [x2, #32]
    9c78:	cmp	w2, #0x1
    9c7c:	b.eq	9cb4 <gelf_getshdr@@ELFUTILS_1.0+0x5c>  // b.none
    9c80:	cbz	x1, 9cf4 <gelf_getshdr@@ELFUTILS_1.0+0x9c>
    9c84:	ldp	x2, x3, [x1]
    9c88:	stp	x2, x3, [x19]
    9c8c:	mov	x0, x19
    9c90:	ldp	x2, x3, [x1, #16]
    9c94:	stp	x2, x3, [x19, #16]
    9c98:	ldp	x2, x3, [x1, #32]
    9c9c:	stp	x2, x3, [x19, #32]
    9ca0:	ldp	x2, x3, [x1, #48]
    9ca4:	stp	x2, x3, [x19, #48]
    9ca8:	ldr	x19, [sp, #16]
    9cac:	ldp	x29, x30, [sp], #32
    9cb0:	ret
    9cb4:	cbz	x1, 9d20 <gelf_getshdr@@ELFUTILS_1.0+0xc8>
    9cb8:	ldp	w10, w9, [x1]
    9cbc:	mov	x0, x19
    9cc0:	ldp	w8, w7, [x1, #8]
    9cc4:	ldp	w6, w5, [x1, #16]
    9cc8:	ldr	w4, [x1, #24]
    9ccc:	ldp	w3, w2, [x1, #32]
    9cd0:	ldr	w1, [x1, #28]
    9cd4:	stp	w10, w9, [x19]
    9cd8:	stp	x8, x7, [x19, #8]
    9cdc:	stp	x6, x5, [x19, #24]
    9ce0:	stp	w4, w1, [x19, #40]
    9ce4:	stp	x3, x2, [x19, #48]
    9ce8:	ldr	x19, [sp, #16]
    9cec:	ldp	x29, x30, [sp], #32
    9cf0:	ret
    9cf4:	bl	9b68 <elf32_getshdr@@ELFUTILS_1.0+0x520>
    9cf8:	mov	x1, x0
    9cfc:	cbnz	x0, 9c84 <gelf_getshdr@@ELFUTILS_1.0+0x2c>
    9d00:	mov	w0, #0x17                  	// #23
    9d04:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9d08:	mov	x0, #0x0                   	// #0
    9d0c:	ldr	x19, [sp, #16]
    9d10:	ldp	x29, x30, [sp], #32
    9d14:	ret
    9d18:	mov	x0, #0x0                   	// #0
    9d1c:	ret
    9d20:	bl	9598 <elf_newscn@@ELFUTILS_1.0+0x6c0>
    9d24:	mov	x1, x0
    9d28:	cbz	x0, 9d00 <gelf_getshdr@@ELFUTILS_1.0+0xa8>
    9d2c:	b	9cb8 <gelf_getshdr@@ELFUTILS_1.0+0x60>

0000000000009d30 <gelf_update_shdr@@ELFUTILS_1.0>:
    9d30:	cmp	x0, #0x0
    9d34:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    9d38:	b.eq	9e10 <gelf_update_shdr@@ELFUTILS_1.0+0xe0>  // b.none
    9d3c:	stp	x29, x30, [sp, #-32]!
    9d40:	mov	x29, sp
    9d44:	stp	x19, x20, [sp, #16]
    9d48:	mov	x19, x1
    9d4c:	mov	x20, x0
    9d50:	ldp	x2, x1, [x0, #136]
    9d54:	ldr	w2, [x2, #32]
    9d58:	cmp	w2, #0x1
    9d5c:	b.eq	9da0 <gelf_update_shdr@@ELFUTILS_1.0+0x70>  // b.none
    9d60:	cbz	x1, 9e28 <gelf_update_shdr@@ELFUTILS_1.0+0xf8>
    9d64:	ldp	x2, x3, [x19]
    9d68:	stp	x2, x3, [x1]
    9d6c:	ldp	x2, x3, [x19, #16]
    9d70:	stp	x2, x3, [x1, #16]
    9d74:	ldp	x2, x3, [x19, #32]
    9d78:	stp	x2, x3, [x1, #32]
    9d7c:	ldp	x2, x3, [x19, #48]
    9d80:	stp	x2, x3, [x1, #48]
    9d84:	ldr	w1, [x20, #152]
    9d88:	mov	w0, #0x1                   	// #1
    9d8c:	orr	w1, w1, w0
    9d90:	str	w1, [x20, #152]
    9d94:	ldp	x19, x20, [sp, #16]
    9d98:	ldp	x29, x30, [sp], #32
    9d9c:	ret
    9da0:	cbz	x1, 9e4c <gelf_update_shdr@@ELFUTILS_1.0+0x11c>
    9da4:	ldr	x2, [x19, #8]
    9da8:	mov	x0, #0xffffffff            	// #4294967295
    9dac:	cmp	x2, x0
    9db0:	b.hi	9e18 <gelf_update_shdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    9db4:	ldr	x3, [x19, #16]
    9db8:	cmp	x3, x0
    9dbc:	b.hi	9e18 <gelf_update_shdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    9dc0:	ldr	x4, [x19, #24]
    9dc4:	cmp	x4, x0
    9dc8:	b.hi	9e18 <gelf_update_shdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    9dcc:	ldr	x5, [x19, #32]
    9dd0:	cmp	x5, x0
    9dd4:	b.hi	9e18 <gelf_update_shdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    9dd8:	ldr	x6, [x19, #48]
    9ddc:	cmp	x6, x0
    9de0:	b.hi	9e18 <gelf_update_shdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    9de4:	ldr	x7, [x19, #56]
    9de8:	cmp	x7, x0
    9dec:	b.hi	9e18 <gelf_update_shdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    9df0:	ldp	w10, w9, [x19]
    9df4:	ldp	w8, w0, [x19, #40]
    9df8:	stp	w10, w9, [x1]
    9dfc:	stp	w2, w3, [x1, #8]
    9e00:	stp	w4, w5, [x1, #16]
    9e04:	stp	w8, w0, [x1, #24]
    9e08:	stp	w6, w7, [x1, #32]
    9e0c:	b	9d84 <gelf_update_shdr@@ELFUTILS_1.0+0x54>
    9e10:	mov	w0, #0x0                   	// #0
    9e14:	ret
    9e18:	mov	w0, #0x21                  	// #33
    9e1c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9e20:	mov	w0, #0x0                   	// #0
    9e24:	b	9d94 <gelf_update_shdr@@ELFUTILS_1.0+0x64>
    9e28:	bl	9bc0 <elf32_getshdr@@ELFUTILS_1.0+0x578>
    9e2c:	mov	x1, x0
    9e30:	cbnz	x0, 9d64 <gelf_update_shdr@@ELFUTILS_1.0+0x34>
    9e34:	mov	w0, #0x17                  	// #23
    9e38:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9e3c:	mov	w0, #0x0                   	// #0
    9e40:	ldp	x19, x20, [sp, #16]
    9e44:	ldp	x29, x30, [sp], #32
    9e48:	ret
    9e4c:	bl	95f0 <elf_newscn@@ELFUTILS_1.0+0x718>
    9e50:	mov	x1, x0
    9e54:	cbz	x0, 9e34 <gelf_update_shdr@@ELFUTILS_1.0+0x104>
    9e58:	b	9da4 <gelf_update_shdr@@ELFUTILS_1.0+0x74>
    9e5c:	nop
    9e60:	stp	x29, x30, [sp, #-48]!
    9e64:	mov	x29, sp
    9e68:	add	x2, sp, #0x28
    9e6c:	add	x1, sp, #0x20
    9e70:	str	x19, [sp, #16]
    9e74:	mov	x19, x0
    9e78:	bl	11d70 <gelf_getchdr@@ELFUTILS_1.7+0x618>
    9e7c:	cbz	x0, 9e8c <gelf_update_shdr@@ELFUTILS_1.0+0x15c>
    9e80:	ldp	x2, x1, [sp, #32]
    9e84:	stp	x0, x2, [x19, #176]
    9e88:	str	x1, [x19, #192]
    9e8c:	ldr	x19, [sp, #16]
    9e90:	ldp	x29, x30, [sp], #48
    9e94:	ret

0000000000009e98 <elf_strptr@@ELFUTILS_1.0>:
    9e98:	stp	x29, x30, [sp, #-64]!
    9e9c:	mov	x29, sp
    9ea0:	stp	x19, x20, [sp, #16]
    9ea4:	cbz	x0, a094 <elf_strptr@@ELFUTILS_1.0+0x1fc>
    9ea8:	mov	x20, x1
    9eac:	ldr	w1, [x0, #24]
    9eb0:	stp	x23, x24, [sp, #48]
    9eb4:	add	x19, x0, #0xc8
    9eb8:	mov	x23, x2
    9ebc:	cmp	w1, #0x3
    9ec0:	b.eq	9ed4 <elf_strptr@@ELFUTILS_1.0+0x3c>  // b.none
    9ec4:	b	a038 <elf_strptr@@ELFUTILS_1.0+0x1a0>
    9ec8:	ldr	x19, [x19, #8]
    9ecc:	sub	x20, x20, x1
    9ed0:	cbz	x19, 9fe8 <elf_strptr@@ELFUTILS_1.0+0x150>
    9ed4:	ldr	w1, [x19, #4]
    9ed8:	cmp	x1, x20
    9edc:	b.ls	9ec8 <elf_strptr@@ELFUTILS_1.0+0x30>  // b.plast
    9ee0:	ldr	w1, [x19]
    9ee4:	cmp	x1, x20
    9ee8:	b.ls	9fe8 <elf_strptr@@ELFUTILS_1.0+0x150>  // b.plast
    9eec:	stp	x21, x22, [sp, #32]
    9ef0:	lsl	x22, x20, #1
    9ef4:	add	x21, x22, x20
    9ef8:	ldr	w0, [x0, #32]
    9efc:	add	x21, x20, x21, lsl #2
    9f00:	cmp	w0, #0x1
    9f04:	lsl	x21, x21, #4
    9f08:	add	x0, x19, x21
    9f0c:	add	x21, x21, #0x10
    9f10:	add	x21, x19, x21
    9f14:	ldr	x0, [x0, #160]
    9f18:	b.eq	a058 <elf_strptr@@ELFUTILS_1.0+0x1c0>  // b.none
    9f1c:	cbz	x0, a0a8 <elf_strptr@@ELFUTILS_1.0+0x210>
    9f20:	ldr	w1, [x0, #4]
    9f24:	cmp	w1, #0x3
    9f28:	b.ne	a0b4 <elf_strptr@@ELFUTILS_1.0+0x21c>  // b.any
    9f2c:	ldr	x1, [x0, #8]
    9f30:	tbz	w1, #11, a030 <elf_strptr@@ELFUTILS_1.0+0x198>
    9f34:	add	x0, x22, x20
    9f38:	add	x0, x20, x0, lsl #2
    9f3c:	add	x0, x19, x0, lsl #4
    9f40:	ldr	x0, [x0, #192]
    9f44:	cbz	x0, a104 <elf_strptr@@ELFUTILS_1.0+0x26c>
    9f48:	add	x0, x22, x20
    9f4c:	add	x0, x20, x0, lsl #2
    9f50:	add	x0, x19, x0, lsl #4
    9f54:	ldr	x24, [x0, #200]
    9f58:	cmp	x24, x23
    9f5c:	b.ls	a0cc <elf_strptr@@ELFUTILS_1.0+0x234>  // b.plast
    9f60:	add	x0, x22, x20
    9f64:	add	x0, x20, x0, lsl #2
    9f68:	add	x0, x19, x0, lsl #4
    9f6c:	ldr	x1, [x0, #176]
    9f70:	cbz	x1, a078 <elf_strptr@@ELFUTILS_1.0+0x1e0>
    9f74:	add	x22, x22, x20
    9f78:	add	x20, x20, x22, lsl #2
    9f7c:	add	x19, x19, x20, lsl #4
    9f80:	ldr	x0, [x19, #192]
    9f84:	cbnz	x0, a0e4 <elf_strptr@@ELFUTILS_1.0+0x24c>
    9f88:	ldr	x0, [x19, #80]
    9f8c:	cbnz	x0, a008 <elf_strptr@@ELFUTILS_1.0+0x170>
    9f90:	ldr	x19, [x19, #176]
    9f94:	sub	x2, x24, x23
    9f98:	mov	w1, #0x0                   	// #0
    9f9c:	add	x19, x19, x23
    9fa0:	mov	x0, x19
    9fa4:	bl	3260 <memrchr@plt>
    9fa8:	cbz	x0, 9fe4 <elf_strptr@@ELFUTILS_1.0+0x14c>
    9fac:	mov	x0, x19
    9fb0:	ldp	x19, x20, [sp, #16]
    9fb4:	ldp	x21, x22, [sp, #32]
    9fb8:	ldp	x23, x24, [sp, #48]
    9fbc:	ldp	x29, x30, [sp], #64
    9fc0:	ret
    9fc4:	ldr	x19, [x21]
    9fc8:	sub	x0, x23, x0
    9fcc:	sub	x2, x2, x23
    9fd0:	mov	w1, #0x0                   	// #0
    9fd4:	add	x19, x19, x0
    9fd8:	mov	x0, x19
    9fdc:	bl	3260 <memrchr@plt>
    9fe0:	cbnz	x0, 9fac <elf_strptr@@ELFUTILS_1.0+0x114>
    9fe4:	ldp	x21, x22, [sp, #32]
    9fe8:	mov	w0, #0x16                  	// #22
    9fec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9ff0:	mov	x19, #0x0                   	// #0
    9ff4:	ldp	x23, x24, [sp, #48]
    9ff8:	mov	x0, x19
    9ffc:	ldp	x19, x20, [sp, #16]
    a000:	ldp	x29, x30, [sp], #64
    a004:	ret
    a008:	ldr	x0, [x21, #24]
    a00c:	cmp	x0, x23
    a010:	b.hi	a024 <elf_strptr@@ELFUTILS_1.0+0x18c>  // b.pmore
    a014:	ldr	x2, [x21, #16]
    a018:	add	x2, x0, x2
    a01c:	cmp	x2, x23
    a020:	b.hi	9fc4 <elf_strptr@@ELFUTILS_1.0+0x12c>  // b.pmore
    a024:	ldr	x21, [x21, #48]
    a028:	cbnz	x21, a008 <elf_strptr@@ELFUTILS_1.0+0x170>
    a02c:	b	a08c <elf_strptr@@ELFUTILS_1.0+0x1f4>
    a030:	ldr	x24, [x0, #32]
    a034:	b	9f58 <elf_strptr@@ELFUTILS_1.0+0xc0>
    a038:	mov	w0, #0x4                   	// #4
    a03c:	mov	x19, #0x0                   	// #0
    a040:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a044:	mov	x0, x19
    a048:	ldp	x19, x20, [sp, #16]
    a04c:	ldp	x23, x24, [sp, #48]
    a050:	ldp	x29, x30, [sp], #64
    a054:	ret
    a058:	cbz	x0, a114 <elf_strptr@@ELFUTILS_1.0+0x27c>
    a05c:	ldr	w1, [x0, #4]
    a060:	cmp	w1, #0x3
    a064:	b.ne	a0b4 <elf_strptr@@ELFUTILS_1.0+0x21c>  // b.any
    a068:	ldr	w1, [x0, #8]
    a06c:	tbnz	w1, #11, 9f34 <elf_strptr@@ELFUTILS_1.0+0x9c>
    a070:	ldr	w24, [x0, #20]
    a074:	b	9f58 <elf_strptr@@ELFUTILS_1.0+0xc0>
    a078:	ldr	w0, [x0, #136]
    a07c:	cbnz	w0, 9f74 <elf_strptr@@ELFUTILS_1.0+0xdc>
    a080:	mov	x0, x21
    a084:	bl	a270 <elf_rawdata@@ELFUTILS_1.0+0x150>
    a088:	cbz	w0, 9f74 <elf_strptr@@ELFUTILS_1.0+0xdc>
    a08c:	ldp	x21, x22, [sp, #32]
    a090:	ldp	x23, x24, [sp, #48]
    a094:	mov	x19, #0x0                   	// #0
    a098:	mov	x0, x19
    a09c:	ldp	x19, x20, [sp, #16]
    a0a0:	ldp	x29, x30, [sp], #64
    a0a4:	ret
    a0a8:	mov	x0, x21
    a0ac:	bl	9b68 <elf32_getshdr@@ELFUTILS_1.0+0x520>
    a0b0:	b	9f20 <elf_strptr@@ELFUTILS_1.0+0x88>
    a0b4:	mov	w0, #0x18                  	// #24
    a0b8:	mov	x19, #0x0                   	// #0
    a0bc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a0c0:	ldp	x21, x22, [sp, #32]
    a0c4:	ldp	x23, x24, [sp, #48]
    a0c8:	b	9ff8 <elf_strptr@@ELFUTILS_1.0+0x160>
    a0cc:	mov	w0, #0x1d                  	// #29
    a0d0:	mov	x19, #0x0                   	// #0
    a0d4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a0d8:	ldp	x21, x22, [sp, #32]
    a0dc:	ldp	x23, x24, [sp, #48]
    a0e0:	b	9ff8 <elf_strptr@@ELFUTILS_1.0+0x160>
    a0e4:	add	x19, x0, x23
    a0e8:	sub	x2, x24, x23
    a0ec:	mov	x0, x19
    a0f0:	mov	w1, #0x0                   	// #0
    a0f4:	bl	3260 <memrchr@plt>
    a0f8:	cbnz	x0, 9fac <elf_strptr@@ELFUTILS_1.0+0x114>
    a0fc:	ldp	x21, x22, [sp, #32]
    a100:	b	9fe8 <elf_strptr@@ELFUTILS_1.0+0x150>
    a104:	mov	x0, x21
    a108:	bl	9e60 <gelf_update_shdr@@ELFUTILS_1.0+0x130>
    a10c:	cbnz	x0, 9f48 <elf_strptr@@ELFUTILS_1.0+0xb0>
    a110:	b	a08c <elf_strptr@@ELFUTILS_1.0+0x1f4>
    a114:	mov	x0, x21
    a118:	bl	9598 <elf_newscn@@ELFUTILS_1.0+0x6c0>
    a11c:	b	a05c <elf_strptr@@ELFUTILS_1.0+0x1c4>

000000000000a120 <elf_rawdata@@ELFUTILS_1.0>:
    a120:	stp	x29, x30, [sp, #-32]!
    a124:	mov	x29, sp
    a128:	cbz	x0, a16c <elf_rawdata@@ELFUTILS_1.0+0x4c>
    a12c:	ldr	x2, [x0, #136]
    a130:	str	x19, [sp, #16]
    a134:	mov	x19, x0
    a138:	ldr	w2, [x2, #24]
    a13c:	cmp	w2, #0x3
    a140:	b.ne	a168 <elf_rawdata@@ELFUTILS_1.0+0x48>  // b.any
    a144:	cbnz	x1, a194 <elf_rawdata@@ELFUTILS_1.0+0x74>
    a148:	ldr	w1, [x0, #120]
    a14c:	cbz	w1, a180 <elf_rawdata@@ELFUTILS_1.0+0x60>
    a150:	ldr	w0, [x0, #156]
    a154:	tbz	w0, #8, a194 <elf_rawdata@@ELFUTILS_1.0+0x74>
    a158:	add	x0, x19, #0x48
    a15c:	ldr	x19, [sp, #16]
    a160:	ldp	x29, x30, [sp], #32
    a164:	ret
    a168:	ldr	x19, [sp, #16]
    a16c:	mov	w0, #0x4                   	// #4
    a170:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a174:	mov	x0, #0x0                   	// #0
    a178:	ldp	x29, x30, [sp], #32
    a17c:	ret
    a180:	bl	a670 <elf_rawdata@@ELFUTILS_1.0+0x550>
    a184:	cbz	w0, a158 <elf_rawdata@@ELFUTILS_1.0+0x38>
    a188:	mov	x0, #0x0                   	// #0
    a18c:	ldr	x19, [sp, #16]
    a190:	b	a160 <elf_rawdata@@ELFUTILS_1.0+0x40>
    a194:	mov	w0, #0x1f                  	// #31
    a198:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a19c:	mov	x0, #0x0                   	// #0
    a1a0:	ldr	x19, [sp, #16]
    a1a4:	ldp	x29, x30, [sp], #32
    a1a8:	ret
    a1ac:	nop
    a1b0:	cmp	w1, #0x5
    a1b4:	b.ne	a1d0 <elf_rawdata@@ELFUTILS_1.0+0xb0>  // b.any
    a1b8:	ldr	w1, [x0, #32]
    a1bc:	mov	w3, #0xc                   	// #12
    a1c0:	cmp	w1, #0x2
    a1c4:	b.eq	a220 <elf_rawdata@@ELFUTILS_1.0+0x100>  // b.none
    a1c8:	mov	w0, w3
    a1cc:	ret
    a1d0:	cmp	w1, #0x12
    a1d4:	b.ls	a1fc <elf_rawdata@@ELFUTILS_1.0+0xdc>  // b.plast
    a1d8:	mov	w0, #0xa                   	// #10
    a1dc:	mov	w3, #0x0                   	// #0
    a1e0:	movk	w0, #0x9000, lsl #16
    a1e4:	add	w0, w1, w0
    a1e8:	cmp	w0, #0x9
    a1ec:	b.hi	a1c8 <elf_rawdata@@ELFUTILS_1.0+0xa8>  // b.pmore
    a1f0:	mov	w0, #0x1d                  	// #29
    a1f4:	movk	w0, #0x9000, lsl #16
    a1f8:	add	w1, w1, w0
    a1fc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    a200:	add	x0, x0, #0x178
    a204:	mov	w4, #0x1a                  	// #26
    a208:	ldr	w3, [x0, w1, sxtw #2]
    a20c:	cmp	w3, #0x13
    a210:	ccmp	x2, #0x8, #0x0, eq  // eq = none
    a214:	csel	w3, w3, w4, ne  // ne = any
    a218:	mov	w0, w3
    a21c:	ret
    a220:	stp	x29, x30, [sp, #-80]!
    a224:	add	x1, sp, #0x10
    a228:	mov	x29, sp
    a22c:	bl	6b28 <elf64_getehdr@@ELFUTILS_1.0+0x68>
    a230:	ldrh	w1, [x0, #18]
    a234:	mov	w2, #0x9026                	// #36902
    a238:	mov	w3, #0xd                   	// #13
    a23c:	cmp	w1, w2
    a240:	b.eq	a250 <elf_rawdata@@ELFUTILS_1.0+0x130>  // b.none
    a244:	cmp	w1, #0x16
    a248:	mov	w3, #0xc                   	// #12
    a24c:	b.eq	a25c <elf_rawdata@@ELFUTILS_1.0+0x13c>  // b.none
    a250:	mov	w0, w3
    a254:	ldp	x29, x30, [sp], #80
    a258:	ret
    a25c:	ldrb	w0, [x0, #4]
    a260:	cmp	w0, #0x2
    a264:	cset	w3, eq  // eq = none
    a268:	add	w3, w3, #0xc
    a26c:	b	a250 <elf_rawdata@@ELFUTILS_1.0+0x130>
    a270:	stp	x29, x30, [sp, #-208]!
    a274:	mov	x29, sp
    a278:	stp	x27, x28, [sp, #80]
    a27c:	ldp	x28, x1, [x0, #136]
    a280:	stp	x19, x20, [sp, #16]
    a284:	mov	x19, x0
    a288:	stp	x21, x22, [sp, #32]
    a28c:	stp	x23, x24, [sp, #48]
    a290:	ldr	w2, [x28, #32]
    a294:	stp	x25, x26, [sp, #64]
    a298:	cmp	w2, #0x1
    a29c:	b.eq	a3c4 <elf_rawdata@@ELFUTILS_1.0+0x2a4>  // b.none
    a2a0:	cbz	x1, a434 <elf_rawdata@@ELFUTILS_1.0+0x314>
    a2a4:	ldp	x26, x24, [x1, #24]
    a2a8:	ldr	w27, [x1, #4]
    a2ac:	ldr	x22, [x1, #8]
    a2b0:	ldr	x20, [x1, #48]
    a2b4:	cmp	w27, #0x8
    a2b8:	and	x0, x22, #0x800
    a2bc:	str	x0, [sp, #112]
    a2c0:	cset	w23, ne  // ne = any
    a2c4:	cmp	x24, #0x0
    a2c8:	ccmp	w23, #0x0, #0x4, ne  // ne = any
    a2cc:	b.eq	a33c <elf_rawdata@@ELFUTILS_1.0+0x21c>  // b.none
    a2d0:	cbz	x0, a3d8 <elf_rawdata@@ELFUTILS_1.0+0x2b8>
    a2d4:	ldr	w1, [x28, #32]
    a2d8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    a2dc:	add	x0, x0, #0x178
    a2e0:	sub	w1, w1, #0x1
    a2e4:	add	x2, x0, #0x78
    a2e8:	lsl	x0, x1, #3
    a2ec:	sub	x0, x0, x1
    a2f0:	add	x0, x2, x0, lsl #2
    a2f4:	sub	x0, x0, x1
    a2f8:	ldrb	w20, [x0, #25]
    a2fc:	cmp	w20, #0x0
    a300:	and	x20, x20, #0xff
    a304:	csinc	x20, x20, xzr, ne  // ne = any
    a308:	ldr	x0, [x28]
    a30c:	cbz	x0, a460 <elf_rawdata@@ELFUTILS_1.0+0x340>
    a310:	ldr	x1, [x28, #48]
    a314:	cmp	x1, x26
    a318:	b.cc	a588 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    a31c:	sub	x1, x1, x26
    a320:	cmp	x1, x24
    a324:	b.cc	a588 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    a328:	ldr	x1, [x28, #40]
    a32c:	add	x1, x26, x1
    a330:	add	x0, x0, x1
    a334:	str	x0, [x19, #72]
    a338:	str	x0, [x19, #160]
    a33c:	ldr	x0, [sp, #112]
    a340:	str	x24, [x19, #88]
    a344:	cbz	x0, a3ac <elf_rawdata@@ELFUTILS_1.0+0x28c>
    a348:	mov	w0, #0x19                  	// #25
    a34c:	str	w0, [x19, #80]
    a350:	cmp	x20, #0x0
    a354:	mov	x2, #0x1                   	// #1
    a358:	csel	x20, x20, x2, ne  // ne = any
    a35c:	cmp	w23, #0x0
    a360:	ccmp	x26, x20, #0x2, ne  // ne = any
    a364:	ldr	w1, [x19, #156]
    a368:	csel	x26, x26, x20, cc  // cc = lo, ul, last
    a36c:	stp	xzr, x26, [x19, #96]
    a370:	orr	w1, w1, #0x100
    a374:	ldr	x3, [x28, #72]
    a378:	mov	w0, #0x0                   	// #0
    a37c:	ldrb	w3, [x3, #6]
    a380:	str	w3, [x19, #84]
    a384:	str	x19, [x19, #112]
    a388:	str	w2, [x19, #120]
    a38c:	str	w1, [x19, #156]
    a390:	ldp	x19, x20, [sp, #16]
    a394:	ldp	x21, x22, [sp, #32]
    a398:	ldp	x23, x24, [sp, #48]
    a39c:	ldp	x25, x26, [sp, #64]
    a3a0:	ldp	x27, x28, [sp, #80]
    a3a4:	ldp	x29, x30, [sp], #208
    a3a8:	ret
    a3ac:	mov	w1, w27
    a3b0:	mov	x2, x20
    a3b4:	mov	x0, x28
    a3b8:	bl	a1b0 <elf_rawdata@@ELFUTILS_1.0+0x90>
    a3bc:	str	w0, [x19, #80]
    a3c0:	b	a350 <elf_rawdata@@ELFUTILS_1.0+0x230>
    a3c4:	cbz	x1, a598 <elf_rawdata@@ELFUTILS_1.0+0x478>
    a3c8:	ldp	w27, w22, [x1, #4]
    a3cc:	ldp	w26, w24, [x1, #16]
    a3d0:	ldr	w20, [x1, #32]
    a3d4:	b	a2b4 <elf_rawdata@@ELFUTILS_1.0+0x194>
    a3d8:	cmp	w27, #0x5
    a3dc:	b.eq	a5ac <elf_rawdata@@ELFUTILS_1.0+0x48c>  // b.none
    a3e0:	cmp	w27, #0x12
    a3e4:	b.ls	a564 <elf_rawdata@@ELFUTILS_1.0+0x444>  // b.plast
    a3e8:	mov	w0, #0xa                   	// #10
    a3ec:	movk	w0, #0x9000, lsl #16
    a3f0:	add	w0, w27, w0
    a3f4:	cmp	w0, #0x9
    a3f8:	b.ls	a604 <elf_rawdata@@ELFUTILS_1.0+0x4e4>  // b.plast
    a3fc:	ldr	w1, [x28, #32]
    a400:	mov	w0, #0x0                   	// #0
    a404:	sub	w2, w1, #0x1
    a408:	adrp	x3, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    a40c:	add	x3, x3, #0xcf8
    a410:	lsl	x1, x2, #3
    a414:	sub	x1, x1, x2
    a418:	lsl	x1, x1, #2
    a41c:	sub	x1, x1, x2
    a420:	add	x0, x1, w0, uxtw
    a424:	ldr	x1, [x3, x0, lsl #3]
    a428:	cmp	x1, #0x0
    a42c:	csinc	x1, x1, xzr, ne  // ne = any
    a430:	b	a5e8 <elf_rawdata@@ELFUTILS_1.0+0x4c8>
    a434:	bl	9bc0 <elf32_getshdr@@ELFUTILS_1.0+0x578>
    a438:	mov	x1, x0
    a43c:	cbnz	x0, a2a4 <elf_rawdata@@ELFUTILS_1.0+0x184>
    a440:	mov	w0, #0x1                   	// #1
    a444:	ldp	x19, x20, [sp, #16]
    a448:	ldp	x21, x22, [sp, #32]
    a44c:	ldp	x23, x24, [sp, #48]
    a450:	ldp	x25, x26, [sp, #64]
    a454:	ldp	x27, x28, [sp, #80]
    a458:	ldp	x29, x30, [sp], #208
    a45c:	ret
    a460:	ldr	w0, [x28, #36]
    a464:	str	w0, [sp, #124]
    a468:	cmn	w0, #0x1
    a46c:	b.eq	a64c <elf_rawdata@@ELFUTILS_1.0+0x52c>  // b.none
    a470:	ldr	x0, [x28, #48]
    a474:	cmp	x0, x26
    a478:	b.cc	a588 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    a47c:	sub	x0, x0, x26
    a480:	cmp	x0, x24
    a484:	b.cc	a588 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    a488:	mov	x0, x24
    a48c:	bl	30c0 <malloc@plt>
    a490:	str	x0, [x19, #72]
    a494:	str	x0, [sp, #128]
    a498:	str	x0, [x19, #160]
    a49c:	cbz	x0, a65c <elf_rawdata@@ELFUTILS_1.0+0x53c>
    a4a0:	ldr	x0, [x28, #40]
    a4a4:	mov	x2, x24
    a4a8:	ldr	x25, [sp, #128]
    a4ac:	add	x0, x26, x0
    a4b0:	mov	x3, x0
    a4b4:	mov	x22, #0x0                   	// #0
    a4b8:	str	x0, [sp, #136]
    a4bc:	ldr	w0, [sp, #124]
    a4c0:	mov	x1, x25
    a4c4:	stp	x2, x3, [sp, #96]
    a4c8:	bl	3250 <pread@plt>
    a4cc:	mov	x21, x0
    a4d0:	cmn	x0, #0x1
    a4d4:	ldp	x2, x3, [sp, #96]
    a4d8:	b.eq	a524 <elf_rawdata@@ELFUTILS_1.0+0x404>  // b.none
    a4dc:	cmp	x0, #0x0
    a4e0:	b.le	a644 <elf_rawdata@@ELFUTILS_1.0+0x524>
    a4e4:	add	x22, x22, x0
    a4e8:	cmp	x24, x22
    a4ec:	b.ls	a63c <elf_rawdata@@ELFUTILS_1.0+0x51c>  // b.plast
    a4f0:	ldr	x0, [sp, #136]
    a4f4:	sub	x2, x24, x22
    a4f8:	add	x3, x0, x22
    a4fc:	stp	x2, x3, [sp, #96]
    a500:	ldr	x0, [sp, #128]
    a504:	add	x25, x0, x22
    a508:	ldr	w0, [sp, #124]
    a50c:	mov	x1, x25
    a510:	bl	3250 <pread@plt>
    a514:	mov	x21, x0
    a518:	cmn	x0, #0x1
    a51c:	ldp	x2, x3, [sp, #96]
    a520:	b.ne	a4dc <elf_rawdata@@ELFUTILS_1.0+0x3bc>  // b.any
    a524:	stp	x3, x2, [sp, #96]
    a528:	bl	3340 <__errno_location@plt>
    a52c:	ldr	w0, [x0]
    a530:	ldp	x3, x2, [sp, #96]
    a534:	cmp	w0, #0x4
    a538:	b.eq	a4bc <elf_rawdata@@ELFUTILS_1.0+0x39c>  // b.none
    a53c:	cmp	x24, x21
    a540:	b.eq	a33c <elf_rawdata@@ELFUTILS_1.0+0x21c>  // b.none
    a544:	ldr	x0, [x19, #72]
    a548:	bl	3200 <free@plt>
    a54c:	str	xzr, [x19, #72]
    a550:	str	xzr, [x19, #160]
    a554:	mov	w0, #0x13                  	// #19
    a558:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a55c:	mov	w0, #0x1                   	// #1
    a560:	b	a444 <elf_rawdata@@ELFUTILS_1.0+0x324>
    a564:	mov	w1, w27
    a568:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    a56c:	add	x0, x0, #0x178
    a570:	ldr	w0, [x0, w1, sxtw #2]
    a574:	cmp	w0, #0x13
    a578:	ccmp	x20, #0x8, #0x0, eq  // eq = none
    a57c:	b.ne	a614 <elf_rawdata@@ELFUTILS_1.0+0x4f4>  // b.any
    a580:	mov	x20, #0x8                   	// #8
    a584:	b	a308 <elf_rawdata@@ELFUTILS_1.0+0x1e8>
    a588:	mov	w0, #0x20                  	// #32
    a58c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a590:	mov	w0, #0x1                   	// #1
    a594:	b	a390 <elf_rawdata@@ELFUTILS_1.0+0x270>
    a598:	bl	95f0 <elf_newscn@@ELFUTILS_1.0+0x718>
    a59c:	mov	x1, x0
    a5a0:	cbnz	x0, a3c8 <elf_rawdata@@ELFUTILS_1.0+0x2a8>
    a5a4:	mov	w0, #0x1                   	// #1
    a5a8:	b	a444 <elf_rawdata@@ELFUTILS_1.0+0x324>
    a5ac:	add	x1, sp, #0x90
    a5b0:	mov	x0, x28
    a5b4:	bl	6b28 <elf64_getehdr@@ELFUTILS_1.0+0x68>
    a5b8:	ldrh	w2, [x0, #18]
    a5bc:	mov	w3, #0x9026                	// #36902
    a5c0:	mov	x1, #0x8                   	// #8
    a5c4:	cmp	w2, w3
    a5c8:	b.eq	a5e8 <elf_rawdata@@ELFUTILS_1.0+0x4c8>  // b.none
    a5cc:	cmp	w2, #0x16
    a5d0:	mov	x1, #0x4                   	// #4
    a5d4:	b.ne	a5e8 <elf_rawdata@@ELFUTILS_1.0+0x4c8>  // b.any
    a5d8:	ldrb	w2, [x0, #4]
    a5dc:	mov	x0, #0x8                   	// #8
    a5e0:	cmp	w2, #0x2
    a5e4:	csel	x1, x1, x0, ne  // ne = any
    a5e8:	udiv	x0, x24, x1
    a5ec:	msub	x1, x0, x1, x24
    a5f0:	cbz	x1, a308 <elf_rawdata@@ELFUTILS_1.0+0x1e8>
    a5f4:	mov	w0, #0x21                  	// #33
    a5f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a5fc:	mov	w0, #0x1                   	// #1
    a600:	b	a390 <elf_rawdata@@ELFUTILS_1.0+0x270>
    a604:	mov	w1, #0x1d                  	// #29
    a608:	movk	w1, #0x9000, lsl #16
    a60c:	add	w1, w27, w1
    a610:	b	a568 <elf_rawdata@@ELFUTILS_1.0+0x448>
    a614:	sub	w1, w0, #0xf
    a618:	tst	w1, #0xfffffffb
    a61c:	ccmp	w0, #0x1a, #0x4, ne  // ne = any
    a620:	b.eq	a308 <elf_rawdata@@ELFUTILS_1.0+0x1e8>  // b.none
    a624:	ldr	w1, [x28, #32]
    a628:	cmp	w0, #0x17
    a62c:	b.ne	a404 <elf_rawdata@@ELFUTILS_1.0+0x2e4>  // b.any
    a630:	cmp	w1, #0x2
    a634:	b.ne	a404 <elf_rawdata@@ELFUTILS_1.0+0x2e4>  // b.any
    a638:	b	a308 <elf_rawdata@@ELFUTILS_1.0+0x1e8>
    a63c:	mov	x21, x22
    a640:	b	a53c <elf_rawdata@@ELFUTILS_1.0+0x41c>
    a644:	csel	x21, x0, x22, ne  // ne = any
    a648:	b	a53c <elf_rawdata@@ELFUTILS_1.0+0x41c>
    a64c:	mov	w0, #0x1b                  	// #27
    a650:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a654:	mov	w0, #0x1                   	// #1
    a658:	b	a390 <elf_rawdata@@ELFUTILS_1.0+0x270>
    a65c:	mov	w0, #0x8                   	// #8
    a660:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a664:	mov	w0, #0x1                   	// #1
    a668:	b	a390 <elf_rawdata@@ELFUTILS_1.0+0x270>
    a66c:	nop
    a670:	cbz	x0, a678 <elf_rawdata@@ELFUTILS_1.0+0x558>
    a674:	b	a270 <elf_rawdata@@ELFUTILS_1.0+0x150>
    a678:	mov	w0, #0x1                   	// #1
    a67c:	ret
    a680:	stp	x29, x30, [sp, #-80]!
    a684:	mov	x29, sp
    a688:	stp	x19, x20, [sp, #16]
    a68c:	mov	x19, x0
    a690:	ldr	x0, [x0, #72]
    a694:	cbz	x0, a6c4 <elf_rawdata@@ELFUTILS_1.0+0x5a4>
    a698:	stp	x21, x22, [sp, #32]
    a69c:	ldr	x21, [x19, #88]
    a6a0:	cbz	x21, a6c0 <elf_rawdata@@ELFUTILS_1.0+0x5a0>
    a6a4:	cbnz	w1, a6ec <elf_rawdata@@ELFUTILS_1.0+0x5cc>
    a6a8:	ldr	x0, [x19, #64]
    a6ac:	cbz	x0, a6ec <elf_rawdata@@ELFUTILS_1.0+0x5cc>
    a6b0:	ldp	x19, x20, [sp, #16]
    a6b4:	ldp	x21, x22, [sp, #32]
    a6b8:	ldp	x29, x30, [sp], #80
    a6bc:	ret
    a6c0:	ldp	x21, x22, [sp, #32]
    a6c4:	ldp	x2, x3, [x19, #72]
    a6c8:	stp	x2, x3, [x19]
    a6cc:	ldp	x2, x3, [x19, #88]
    a6d0:	stp	x2, x3, [x19, #16]
    a6d4:	ldr	x0, [x19, #104]
    a6d8:	stp	x0, x19, [x19, #32]
    a6dc:	str	x19, [x19, #64]
    a6e0:	ldp	x19, x20, [sp, #16]
    a6e4:	ldp	x29, x30, [sp], #80
    a6e8:	ret
    a6ec:	ldr	x2, [x19, #136]
    a6f0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    a6f4:	add	x0, x0, #0x178
    a6f8:	stp	x23, x24, [sp, #48]
    a6fc:	add	x1, x0, #0x78
    a700:	ldr	w0, [x2, #32]
    a704:	ldr	w22, [x19, #80]
    a708:	sub	w0, w0, #0x1
    a70c:	ldr	x2, [x2, #72]
    a710:	sxtw	x23, w0
    a714:	sbfiz	x0, x0, #3, #32
    a718:	sub	x0, x0, x23
    a71c:	ldrb	w2, [x2, #5]
    a720:	add	x0, x1, x0, lsl #2
    a724:	sub	x0, x0, x23
    a728:	ldrb	w0, [x0, w22, uxtw]
    a72c:	cmp	w0, #0x0
    a730:	csinc	w0, w0, wzr, ne  // ne = any
    a734:	cmp	w22, #0x0
    a738:	and	x20, x0, #0xff
    a73c:	ccmp	w2, #0x1, #0x4, ne  // ne = any
    a740:	b.ne	a77c <elf_rawdata@@ELFUTILS_1.0+0x65c>  // b.any
    a744:	ldr	x23, [x19, #160]
    a748:	sub	x0, x20, #0x1
    a74c:	tst	x23, x0
    a750:	b.ne	a818 <elf_rawdata@@ELFUTILS_1.0+0x6f8>  // b.any
    a754:	str	x23, [x19, #168]
    a758:	ldr	w2, [x19, #84]
    a75c:	ldp	x1, x0, [x19, #96]
    a760:	str	x23, [x19]
    a764:	stp	w22, w2, [x19, #8]
    a768:	stp	x21, x1, [x19, #16]
    a76c:	stp	x0, x19, [x19, #32]
    a770:	ldp	x21, x22, [sp, #32]
    a774:	ldp	x23, x24, [sp, #48]
    a778:	b	a6dc <elf_rawdata@@ELFUTILS_1.0+0x5bc>
    a77c:	mov	x0, x21
    a780:	bl	30c0 <malloc@plt>
    a784:	str	x0, [x19, #168]
    a788:	mov	x24, x0
    a78c:	cbz	x0, a840 <elf_rawdata@@ELFUTILS_1.0+0x720>
    a790:	str	x25, [sp, #64]
    a794:	sub	x20, x20, #0x1
    a798:	ldr	x25, [x19, #160]
    a79c:	tst	x25, x20
    a7a0:	b.ne	a7f8 <elf_rawdata@@ELFUTILS_1.0+0x6d8>  // b.any
    a7a4:	lsl	x1, x23, #3
    a7a8:	adrp	x4, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    a7ac:	sub	x1, x1, x23
    a7b0:	add	x4, x4, #0xbd8
    a7b4:	mov	x0, x24
    a7b8:	mov	x2, x21
    a7bc:	lsl	x1, x1, #2
    a7c0:	mov	w3, #0x0                   	// #0
    a7c4:	sub	x23, x1, x23
    a7c8:	mov	x1, x25
    a7cc:	add	x23, x23, w22, uxtw
    a7d0:	ldr	x4, [x4, x23, lsl #3]
    a7d4:	blr	x4
    a7d8:	ldr	x0, [x19, #160]
    a7dc:	cmp	x25, x0
    a7e0:	b.eq	a7ec <elf_rawdata@@ELFUTILS_1.0+0x6cc>  // b.none
    a7e4:	mov	x0, x25
    a7e8:	bl	3200 <free@plt>
    a7ec:	ldr	x25, [sp, #64]
    a7f0:	ldr	x23, [x19, #168]
    a7f4:	b	a758 <elf_rawdata@@ELFUTILS_1.0+0x638>
    a7f8:	mov	x0, x21
    a7fc:	bl	30c0 <malloc@plt>
    a800:	cbz	x0, a83c <elf_rawdata@@ELFUTILS_1.0+0x71c>
    a804:	mov	x1, x25
    a808:	mov	x2, x21
    a80c:	mov	x25, x0
    a810:	bl	3020 <memcpy@plt>
    a814:	b	a7a4 <elf_rawdata@@ELFUTILS_1.0+0x684>
    a818:	mov	x0, x21
    a81c:	bl	30c0 <malloc@plt>
    a820:	str	x0, [x19, #168]
    a824:	cbz	x0, a840 <elf_rawdata@@ELFUTILS_1.0+0x720>
    a828:	mov	x1, x23
    a82c:	mov	x2, x21
    a830:	mov	x23, x0
    a834:	bl	3020 <memcpy@plt>
    a838:	b	a758 <elf_rawdata@@ELFUTILS_1.0+0x638>
    a83c:	ldr	x25, [sp, #64]
    a840:	mov	w0, #0x8                   	// #8
    a844:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a848:	ldp	x21, x22, [sp, #32]
    a84c:	ldp	x23, x24, [sp, #48]
    a850:	b	a6dc <elf_rawdata@@ELFUTILS_1.0+0x5bc>
    a854:	nop
    a858:	cbz	x0, a92c <elf_rawdata@@ELFUTILS_1.0+0x80c>
    a85c:	stp	x29, x30, [sp, #-32]!
    a860:	mov	x29, sp
    a864:	ldr	x2, [x0, #136]
    a868:	str	x19, [sp, #16]
    a86c:	mov	x19, x0
    a870:	ldr	w2, [x2, #24]
    a874:	cmp	w2, #0x3
    a878:	b.ne	a90c <elf_rawdata@@ELFUTILS_1.0+0x7ec>  // b.any
    a87c:	cbz	x1, a8c8 <elf_rawdata@@ELFUTILS_1.0+0x7a8>
    a880:	ldr	x0, [x0, #64]
    a884:	cbz	x0, a8b0 <elf_rawdata@@ELFUTILS_1.0+0x790>
    a888:	ldr	x0, [x1, #40]
    a88c:	cmp	x0, x19
    a890:	b.ne	a8b0 <elf_rawdata@@ELFUTILS_1.0+0x790>  // b.any
    a894:	cmp	x1, x0
    a898:	b.ne	a8a4 <elf_rawdata@@ELFUTILS_1.0+0x784>  // b.any
    a89c:	b	a8ec <elf_rawdata@@ELFUTILS_1.0+0x7cc>
    a8a0:	b.eq	a8ec <elf_rawdata@@ELFUTILS_1.0+0x7cc>  // b.none
    a8a4:	ldr	x0, [x0, #48]
    a8a8:	cmp	x0, x1
    a8ac:	cbnz	x0, a8a0 <elf_rawdata@@ELFUTILS_1.0+0x780>
    a8b0:	mov	w0, #0x1f                  	// #31
    a8b4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a8b8:	mov	x0, #0x0                   	// #0
    a8bc:	ldr	x19, [sp, #16]
    a8c0:	ldp	x29, x30, [sp], #32
    a8c4:	ret
    a8c8:	ldr	w2, [x0, #120]
    a8cc:	mov	w1, #0x0                   	// #0
    a8d0:	cbz	w2, a8fc <elf_rawdata@@ELFUTILS_1.0+0x7dc>
    a8d4:	ldr	x0, [x19, #64]
    a8d8:	cbz	x0, a91c <elf_rawdata@@ELFUTILS_1.0+0x7fc>
    a8dc:	mov	x0, x19
    a8e0:	ldr	x19, [sp, #16]
    a8e4:	ldp	x29, x30, [sp], #32
    a8e8:	ret
    a8ec:	ldr	x19, [sp, #16]
    a8f0:	ldp	x29, x30, [sp], #32
    a8f4:	ldr	x0, [x0, #48]
    a8f8:	ret
    a8fc:	bl	a270 <elf_rawdata@@ELFUTILS_1.0+0x150>
    a900:	cbnz	w0, a8b8 <elf_rawdata@@ELFUTILS_1.0+0x798>
    a904:	mov	w1, #0x1                   	// #1
    a908:	b	a8d4 <elf_rawdata@@ELFUTILS_1.0+0x7b4>
    a90c:	mov	w0, #0x4                   	// #4
    a910:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a914:	mov	x0, #0x0                   	// #0
    a918:	b	a8bc <elf_rawdata@@ELFUTILS_1.0+0x79c>
    a91c:	mov	x0, x19
    a920:	bl	a680 <elf_rawdata@@ELFUTILS_1.0+0x560>
    a924:	mov	x0, x19
    a928:	b	a8e0 <elf_rawdata@@ELFUTILS_1.0+0x7c0>
    a92c:	mov	x0, #0x0                   	// #0
    a930:	ret
    a934:	nop

000000000000a938 <elf_getdata@@ELFUTILS_1.0>:
    a938:	cbz	x0, a940 <elf_getdata@@ELFUTILS_1.0+0x8>
    a93c:	b	a858 <elf_rawdata@@ELFUTILS_1.0+0x738>
    a940:	ret
    a944:	nop

000000000000a948 <elf_newdata@@ELFUTILS_1.0>:
    a948:	stp	x29, x30, [sp, #-32]!
    a94c:	mov	x29, sp
    a950:	stp	x19, x20, [sp, #16]
    a954:	cbz	x0, a9dc <elf_newdata@@ELFUTILS_1.0+0x94>
    a958:	ldr	x1, [x0, #128]
    a95c:	mov	x19, x0
    a960:	cbz	x1, aa34 <elf_newdata@@ELFUTILS_1.0+0xec>
    a964:	ldr	x1, [x0, #136]
    a968:	ldr	x20, [x1, #72]
    a96c:	cbz	x20, aa44 <elf_newdata@@ELFUTILS_1.0+0xfc>
    a970:	ldr	w1, [x0, #120]
    a974:	cbz	w1, a9d0 <elf_newdata@@ELFUTILS_1.0+0x88>
    a978:	ldr	x2, [x0, #160]
    a97c:	ldr	x1, [x0, #64]
    a980:	cbz	x2, aa14 <elf_newdata@@ELFUTILS_1.0+0xcc>
    a984:	cbz	x1, aa00 <elf_newdata@@ELFUTILS_1.0+0xb8>
    a988:	mov	x1, #0x40                  	// #64
    a98c:	mov	x0, #0x1                   	// #1
    a990:	bl	3140 <calloc@plt>
    a994:	cbz	x0, aa50 <elf_newdata@@ELFUTILS_1.0+0x108>
    a998:	ldr	x1, [x19, #64]
    a99c:	mov	w2, #0x81                  	// #129
    a9a0:	mov	w3, #0x1                   	// #1
    a9a4:	str	w3, [x0, #12]
    a9a8:	str	x19, [x0, #40]
    a9ac:	mov	x20, x0
    a9b0:	str	w2, [x0, #56]
    a9b4:	cbz	x1, a9bc <elf_newdata@@ELFUTILS_1.0+0x74>
    a9b8:	str	x0, [x1, #48]
    a9bc:	str	x0, [x19, #64]
    a9c0:	mov	x0, x20
    a9c4:	ldp	x19, x20, [sp, #16]
    a9c8:	ldp	x29, x30, [sp], #32
    a9cc:	ret
    a9d0:	mov	x0, x19
    a9d4:	bl	a270 <elf_rawdata@@ELFUTILS_1.0+0x150>
    a9d8:	cbz	w0, a9f0 <elf_newdata@@ELFUTILS_1.0+0xa8>
    a9dc:	mov	x20, #0x0                   	// #0
    a9e0:	mov	x0, x20
    a9e4:	ldp	x19, x20, [sp, #16]
    a9e8:	ldp	x29, x30, [sp], #32
    a9ec:	ret
    a9f0:	mov	x0, x19
    a9f4:	mov	w1, #0x1                   	// #1
    a9f8:	bl	a680 <elf_rawdata@@ELFUTILS_1.0+0x560>
    a9fc:	b	a988 <elf_newdata@@ELFUTILS_1.0+0x40>
    aa00:	mov	w1, #0x1                   	// #1
    aa04:	bl	a680 <elf_rawdata@@ELFUTILS_1.0+0x560>
    aa08:	ldr	w0, [x19, #120]
    aa0c:	cbz	w0, a9d0 <elf_newdata@@ELFUTILS_1.0+0x88>
    aa10:	ldr	x1, [x19, #64]
    aa14:	cbnz	x1, a988 <elf_newdata@@ELFUTILS_1.0+0x40>
    aa18:	mov	w1, #0x1                   	// #1
    aa1c:	mov	x0, x19
    aa20:	mov	x20, x19
    aa24:	str	w1, [x19, #12]
    aa28:	str	x19, [x19, #40]
    aa2c:	str	w1, [x19, #56]
    aa30:	b	a9bc <elf_newdata@@ELFUTILS_1.0+0x74>
    aa34:	mov	w0, #0x1e                  	// #30
    aa38:	mov	x20, #0x0                   	// #0
    aa3c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    aa40:	b	a9c0 <elf_newdata@@ELFUTILS_1.0+0x78>
    aa44:	mov	w0, #0x1a                  	// #26
    aa48:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    aa4c:	b	a9c0 <elf_newdata@@ELFUTILS_1.0+0x78>
    aa50:	mov	w0, #0x8                   	// #8
    aa54:	mov	x20, #0x0                   	// #0
    aa58:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    aa5c:	b	a9c0 <elf_newdata@@ELFUTILS_1.0+0x78>

000000000000aa60 <elf_getdata_rawchunk@@ELFUTILS_1.3>:
    aa60:	stp	x29, x30, [sp, #-128]!
    aa64:	mov	x29, sp
    aa68:	stp	x27, x28, [sp, #80]
    aa6c:	cbz	x0, ad58 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2f8>
    aa70:	stp	x19, x20, [sp, #16]
    aa74:	mov	x19, x0
    aa78:	ldr	w0, [x0, #24]
    aa7c:	cmp	w0, #0x3
    aa80:	b.ne	ad6c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x30c>  // b.any
    aa84:	stp	x21, x22, [sp, #32]
    aa88:	mov	x21, x1
    aa8c:	tbnz	x1, #63, abd0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x170>
    aa90:	ldr	x1, [x19, #48]
    aa94:	cmp	x1, x21
    aa98:	b.cc	abd0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x170>  // b.lo, b.ul, b.last
    aa9c:	sub	x1, x1, x21
    aaa0:	mov	x20, x2
    aaa4:	cmp	x1, x2
    aaa8:	b.cc	abd0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x170>  // b.lo, b.ul, b.last
    aaac:	stp	x23, x24, [sp, #48]
    aab0:	cmp	w3, #0x1a
    aab4:	mov	w23, w3
    aab8:	b.hi	ad80 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x320>  // b.pmore
    aabc:	ldr	w4, [x19, #32]
    aac0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    aac4:	add	x1, x0, #0x1f0
    aac8:	stp	x25, x26, [sp, #64]
    aacc:	sub	w22, w4, #0x1
    aad0:	ldr	x28, [x19]
    aad4:	lsl	x0, x22, #3
    aad8:	sub	x0, x0, x22
    aadc:	add	x0, x1, x0, lsl #2
    aae0:	sub	x0, x0, x22
    aae4:	ldrb	w24, [x0, w3, uxtw]
    aae8:	cmp	w24, #0x0
    aaec:	csinc	w24, w24, wzr, ne  // ne = any
    aaf0:	and	x0, x24, #0xff
    aaf4:	str	x0, [sp, #112]
    aaf8:	cbz	x28, ac10 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1b0>
    aafc:	ldr	x1, [x19, #40]
    ab00:	sub	x26, x0, #0x1
    ab04:	add	x21, x21, x1
    ab08:	add	x21, x28, x21
    ab0c:	tst	x21, x26
    ab10:	b.ne	ace0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x280>  // b.any
    ab14:	ldr	x0, [x19, #72]
    ab18:	ldrb	w0, [x0, #5]
    ab1c:	cmp	w0, #0x1
    ab20:	b.eq	abf4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x194>  // b.none
    ab24:	mov	x0, x2
    ab28:	bl	30c0 <malloc@plt>
    ab2c:	mov	x25, x0
    ab30:	cbz	x0, ad38 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    ab34:	lsl	x4, x22, #3
    ab38:	adrp	x5, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    ab3c:	sub	x4, x4, x22
    ab40:	add	x5, x5, #0xbd8
    ab44:	mov	x2, x20
    ab48:	mov	w3, #0x0                   	// #0
    ab4c:	lsl	x4, x4, #2
    ab50:	mov	x1, x21
    ab54:	sub	x4, x4, x22
    ab58:	mov	x0, x25
    ab5c:	add	x4, x4, w23, uxtw
    ab60:	ldr	x4, [x5, x4, lsl #3]
    ab64:	blr	x4
    ab68:	mov	x1, #0x100                 	// #256
    ab6c:	mov	x0, #0x1                   	// #1
    ab70:	bl	3140 <calloc@plt>
    ab74:	cbz	x0, ad2c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2cc>
    ab78:	mov	w1, #0x80                  	// #128
    ab7c:	mov	w4, #0x1                   	// #1
    ab80:	add	x3, x0, #0x30
    ab84:	ldp	x21, x22, [sp, #32]
    ab88:	stp	w23, w4, [x0, #8]
    ab8c:	ldr	x2, [x19, #104]
    ab90:	str	x25, [x0]
    ab94:	ldr	x4, [sp, #112]
    ab98:	str	x20, [x0, #16]
    ab9c:	stp	x3, x2, [x0, #40]
    aba0:	mov	x28, x0
    aba4:	str	x19, [x0, #184]
    aba8:	str	w1, [x0, #204]
    abac:	ldp	x23, x24, [sp, #48]
    abb0:	ldp	x25, x26, [sp, #64]
    abb4:	str	x4, [x0, #32]
    abb8:	str	x0, [x19, #104]
    abbc:	mov	x0, x28
    abc0:	ldp	x19, x20, [sp, #16]
    abc4:	ldp	x27, x28, [sp, #80]
    abc8:	ldp	x29, x30, [sp], #128
    abcc:	ret
    abd0:	mov	w0, #0xb                   	// #11
    abd4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    abd8:	ldp	x19, x20, [sp, #16]
    abdc:	mov	x28, #0x0                   	// #0
    abe0:	ldp	x21, x22, [sp, #32]
    abe4:	mov	x0, x28
    abe8:	ldp	x27, x28, [sp, #80]
    abec:	ldp	x29, x30, [sp], #128
    abf0:	ret
    abf4:	mov	x1, #0x100                 	// #256
    abf8:	mov	x0, #0x1                   	// #1
    abfc:	bl	3140 <calloc@plt>
    ac00:	cbz	x0, ad38 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    ac04:	mov	x25, x21
    ac08:	mov	w1, #0x0                   	// #0
    ac0c:	b	ab7c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x11c>
    ac10:	mov	x0, x2
    ac14:	bl	30c0 <malloc@plt>
    ac18:	mov	x25, x0
    ac1c:	cbz	x0, ad38 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    ac20:	mov	x27, x0
    ac24:	ldr	w1, [x19, #36]
    ac28:	ldr	x0, [x19, #40]
    ac2c:	mov	x24, x20
    ac30:	str	w1, [sp, #108]
    ac34:	add	x0, x21, x0
    ac38:	mov	x21, #0x0                   	// #0
    ac3c:	mov	x26, x0
    ac40:	str	x0, [sp, #120]
    ac44:	ldr	w0, [sp, #108]
    ac48:	mov	x3, x26
    ac4c:	mov	x2, x24
    ac50:	mov	x1, x27
    ac54:	bl	3250 <pread@plt>
    ac58:	mov	x22, x0
    ac5c:	cmn	x0, #0x1
    ac60:	b.eq	aca8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x248>  // b.none
    ac64:	cmp	x0, #0x0
    ac68:	b.le	adac <elf_getdata_rawchunk@@ELFUTILS_1.3+0x34c>
    ac6c:	add	x21, x21, x0
    ac70:	cmp	x20, x21
    ac74:	b.ls	ad98 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x338>  // b.plast
    ac78:	ldr	x0, [sp, #120]
    ac7c:	sub	x24, x20, x21
    ac80:	add	x27, x25, x21
    ac84:	mov	x2, x24
    ac88:	add	x26, x0, x21
    ac8c:	ldr	w0, [sp, #108]
    ac90:	mov	x3, x26
    ac94:	mov	x1, x27
    ac98:	bl	3250 <pread@plt>
    ac9c:	mov	x22, x0
    aca0:	cmn	x0, #0x1
    aca4:	b.ne	ac64 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x204>  // b.any
    aca8:	bl	3340 <__errno_location@plt>
    acac:	ldr	w0, [x0]
    acb0:	cmp	w0, #0x4
    acb4:	b.eq	ac44 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1e4>  // b.none
    acb8:	cmp	x20, x22
    acbc:	b.ne	adb4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x354>  // b.any
    acc0:	ldr	x0, [x19, #72]
    acc4:	ldrb	w0, [x0, #5]
    acc8:	cmp	w0, #0x1
    accc:	b.eq	ada0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x340>  // b.none
    acd0:	ldr	w4, [x19, #32]
    acd4:	mov	x21, x25
    acd8:	sub	w22, w4, #0x1
    acdc:	b	ab34 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd4>
    ace0:	mov	x0, x2
    ace4:	bl	30c0 <malloc@plt>
    ace8:	mov	x25, x0
    acec:	cbz	x0, ad38 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    acf0:	mov	x1, x21
    acf4:	mov	x2, x20
    acf8:	bl	3020 <memcpy@plt>
    acfc:	mov	x21, x25
    ad00:	ldr	x0, [x19, #72]
    ad04:	ldrb	w0, [x0, #5]
    ad08:	cmp	w0, #0x1
    ad0c:	b.ne	ab34 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd4>  // b.any
    ad10:	tst	x25, x26
    ad14:	b.ne	adc4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x364>  // b.any
    ad18:	mov	x1, #0x100                 	// #256
    ad1c:	mov	x0, #0x1                   	// #1
    ad20:	bl	3140 <calloc@plt>
    ad24:	mov	w1, #0x80                  	// #128
    ad28:	cbnz	x0, ab7c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x11c>
    ad2c:	mov	x0, x25
    ad30:	bl	3200 <free@plt>
    ad34:	nop
    ad38:	mov	w0, #0x8                   	// #8
    ad3c:	mov	x28, #0x0                   	// #0
    ad40:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ad44:	ldp	x19, x20, [sp, #16]
    ad48:	ldp	x21, x22, [sp, #32]
    ad4c:	ldp	x23, x24, [sp, #48]
    ad50:	ldp	x25, x26, [sp, #64]
    ad54:	b	abe4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x184>
    ad58:	mov	x28, #0x0                   	// #0
    ad5c:	mov	x0, x28
    ad60:	ldp	x27, x28, [sp, #80]
    ad64:	ldp	x29, x30, [sp], #128
    ad68:	ret
    ad6c:	mov	w0, #0x4                   	// #4
    ad70:	mov	x28, #0x0                   	// #0
    ad74:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ad78:	ldp	x19, x20, [sp, #16]
    ad7c:	b	abe4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x184>
    ad80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ad84:	mov	x28, #0x0                   	// #0
    ad88:	ldp	x19, x20, [sp, #16]
    ad8c:	ldp	x21, x22, [sp, #32]
    ad90:	ldp	x23, x24, [sp, #48]
    ad94:	b	abe4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x184>
    ad98:	mov	x22, x21
    ad9c:	b	acb8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x258>
    ada0:	ldr	x0, [sp, #112]
    ada4:	sub	x26, x0, #0x1
    ada8:	b	ad10 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2b0>
    adac:	csel	x22, x0, x21, ne  // ne = any
    adb0:	b	acb8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x258>
    adb4:	mov	x0, x25
    adb8:	bl	3200 <free@plt>
    adbc:	mov	w0, #0x13                  	// #19
    adc0:	b	ad40 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2e0>
    adc4:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    adc8:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    adcc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    add0:	add	x3, x3, #0x250
    add4:	add	x1, x1, #0x228
    add8:	add	x0, x0, #0x240
    addc:	mov	w2, #0x82                  	// #130
    ade0:	bl	3330 <__assert_fail@plt>
    ade4:	nop

000000000000ade8 <elf_flagelf@@ELFUTILS_1.0>:
    ade8:	cbz	x0, ae28 <elf_flagelf@@ELFUTILS_1.0+0x40>
    adec:	stp	x29, x30, [sp, #-16]!
    adf0:	mov	x3, x0
    adf4:	mov	x29, sp
    adf8:	ldr	w0, [x0, #24]
    adfc:	cmp	w0, #0x3
    ae00:	b.ne	ae30 <elf_flagelf@@ELFUTILS_1.0+0x48>  // b.any
    ae04:	cmp	w1, #0x5
    ae08:	b.ne	ae40 <elf_flagelf@@ELFUTILS_1.0+0x58>  // b.any
    ae0c:	ldr	w0, [x3, #56]
    ae10:	mov	w1, #0xd                   	// #13
    ae14:	and	w2, w2, w1
    ae18:	orr	w0, w2, w0
    ae1c:	str	w0, [x3, #56]
    ae20:	ldp	x29, x30, [sp], #16
    ae24:	ret
    ae28:	mov	w0, #0x0                   	// #0
    ae2c:	ret
    ae30:	mov	w0, #0x4                   	// #4
    ae34:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ae38:	mov	w0, #0x0                   	// #0
    ae3c:	b	ae20 <elf_flagelf@@ELFUTILS_1.0+0x38>
    ae40:	cmp	w1, #0x4
    ae44:	b.ne	ae60 <elf_flagelf@@ELFUTILS_1.0+0x78>  // b.any
    ae48:	ldr	w0, [x3, #56]
    ae4c:	mov	w1, #0xd                   	// #13
    ae50:	and	w2, w2, w1
    ae54:	bic	w0, w0, w2
    ae58:	str	w0, [x3, #56]
    ae5c:	b	ae20 <elf_flagelf@@ELFUTILS_1.0+0x38>
    ae60:	mov	w0, #0x19                  	// #25
    ae64:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ae68:	mov	w0, #0x0                   	// #0
    ae6c:	b	ae20 <elf_flagelf@@ELFUTILS_1.0+0x38>

000000000000ae70 <elf_flagehdr@@ELFUTILS_1.0>:
    ae70:	cbz	x0, aeac <elf_flagehdr@@ELFUTILS_1.0+0x3c>
    ae74:	stp	x29, x30, [sp, #-16]!
    ae78:	mov	x3, x0
    ae7c:	mov	x29, sp
    ae80:	ldr	w0, [x0, #24]
    ae84:	cmp	w0, #0x3
    ae88:	b.ne	aeb4 <elf_flagehdr@@ELFUTILS_1.0+0x44>  // b.any
    ae8c:	cmp	w1, #0x5
    ae90:	b.ne	aec4 <elf_flagehdr@@ELFUTILS_1.0+0x54>  // b.any
    ae94:	ldr	w0, [x3, #116]
    ae98:	and	w2, w2, #0x1
    ae9c:	orr	w0, w2, w0
    aea0:	str	w0, [x3, #116]
    aea4:	ldp	x29, x30, [sp], #16
    aea8:	ret
    aeac:	mov	w0, #0x0                   	// #0
    aeb0:	ret
    aeb4:	mov	w0, #0x4                   	// #4
    aeb8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    aebc:	mov	w0, #0x0                   	// #0
    aec0:	b	aea4 <elf_flagehdr@@ELFUTILS_1.0+0x34>
    aec4:	cmp	w1, #0x4
    aec8:	b.ne	aee0 <elf_flagehdr@@ELFUTILS_1.0+0x70>  // b.any
    aecc:	ldr	w0, [x3, #116]
    aed0:	and	w2, w2, #0x1
    aed4:	bic	w0, w0, w2
    aed8:	str	w0, [x3, #116]
    aedc:	b	aea4 <elf_flagehdr@@ELFUTILS_1.0+0x34>
    aee0:	mov	w0, #0x19                  	// #25
    aee4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    aee8:	mov	w0, #0x0                   	// #0
    aeec:	b	aea4 <elf_flagehdr@@ELFUTILS_1.0+0x34>

000000000000aef0 <elf_flagphdr@@ELFUTILS_1.0>:
    aef0:	cbz	x0, af2c <elf_flagphdr@@ELFUTILS_1.0+0x3c>
    aef4:	stp	x29, x30, [sp, #-16]!
    aef8:	mov	x3, x0
    aefc:	mov	x29, sp
    af00:	ldr	w0, [x0, #24]
    af04:	cmp	w0, #0x3
    af08:	b.ne	af34 <elf_flagphdr@@ELFUTILS_1.0+0x44>  // b.any
    af0c:	cmp	w1, #0x5
    af10:	b.ne	af44 <elf_flagphdr@@ELFUTILS_1.0+0x54>  // b.any
    af14:	ldr	w0, [x3, #120]
    af18:	and	w2, w2, #0x1
    af1c:	orr	w0, w2, w0
    af20:	str	w0, [x3, #120]
    af24:	ldp	x29, x30, [sp], #16
    af28:	ret
    af2c:	mov	w0, #0x0                   	// #0
    af30:	ret
    af34:	mov	w0, #0x4                   	// #4
    af38:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    af3c:	mov	w0, #0x0                   	// #0
    af40:	b	af24 <elf_flagphdr@@ELFUTILS_1.0+0x34>
    af44:	cmp	w1, #0x4
    af48:	b.ne	af60 <elf_flagphdr@@ELFUTILS_1.0+0x70>  // b.any
    af4c:	ldr	w0, [x3, #120]
    af50:	and	w2, w2, #0x1
    af54:	bic	w0, w0, w2
    af58:	str	w0, [x3, #120]
    af5c:	b	af24 <elf_flagphdr@@ELFUTILS_1.0+0x34>
    af60:	mov	w0, #0x19                  	// #25
    af64:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    af68:	mov	w0, #0x0                   	// #0
    af6c:	b	af24 <elf_flagphdr@@ELFUTILS_1.0+0x34>

000000000000af70 <elf_flagscn@@ELFUTILS_1.0>:
    af70:	cbz	x0, afb0 <elf_flagscn@@ELFUTILS_1.0+0x40>
    af74:	stp	x29, x30, [sp, #-16]!
    af78:	mov	x3, x0
    af7c:	mov	x29, sp
    af80:	ldr	x0, [x0, #136]
    af84:	ldr	w0, [x0, #24]
    af88:	cmp	w0, #0x3
    af8c:	b.ne	afb8 <elf_flagscn@@ELFUTILS_1.0+0x48>  // b.any
    af90:	cmp	w1, #0x5
    af94:	b.ne	afc8 <elf_flagscn@@ELFUTILS_1.0+0x58>  // b.any
    af98:	ldr	w0, [x3, #156]
    af9c:	and	w2, w2, #0x1
    afa0:	orr	w0, w2, w0
    afa4:	str	w0, [x3, #156]
    afa8:	ldp	x29, x30, [sp], #16
    afac:	ret
    afb0:	mov	w0, #0x0                   	// #0
    afb4:	ret
    afb8:	mov	w0, #0x4                   	// #4
    afbc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    afc0:	mov	w0, #0x0                   	// #0
    afc4:	b	afa8 <elf_flagscn@@ELFUTILS_1.0+0x38>
    afc8:	cmp	w1, #0x4
    afcc:	b.ne	afe4 <elf_flagscn@@ELFUTILS_1.0+0x74>  // b.any
    afd0:	ldr	w0, [x3, #156]
    afd4:	and	w2, w2, #0x1
    afd8:	bic	w0, w0, w2
    afdc:	str	w0, [x3, #156]
    afe0:	b	afa8 <elf_flagscn@@ELFUTILS_1.0+0x38>
    afe4:	mov	w0, #0x19                  	// #25
    afe8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    afec:	mov	w0, #0x0                   	// #0
    aff0:	b	afa8 <elf_flagscn@@ELFUTILS_1.0+0x38>
    aff4:	nop

000000000000aff8 <elf_flagshdr@@ELFUTILS_1.0>:
    aff8:	cbz	x0, b038 <elf_flagshdr@@ELFUTILS_1.0+0x40>
    affc:	stp	x29, x30, [sp, #-16]!
    b000:	mov	x3, x0
    b004:	mov	x29, sp
    b008:	ldr	x0, [x0, #136]
    b00c:	ldr	w0, [x0, #24]
    b010:	cmp	w0, #0x3
    b014:	b.ne	b040 <elf_flagshdr@@ELFUTILS_1.0+0x48>  // b.any
    b018:	cmp	w1, #0x5
    b01c:	b.ne	b050 <elf_flagshdr@@ELFUTILS_1.0+0x58>  // b.any
    b020:	ldr	w0, [x3, #152]
    b024:	and	w2, w2, #0x1
    b028:	orr	w0, w2, w0
    b02c:	str	w0, [x3, #152]
    b030:	ldp	x29, x30, [sp], #16
    b034:	ret
    b038:	mov	w0, #0x0                   	// #0
    b03c:	ret
    b040:	mov	w0, #0x4                   	// #4
    b044:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b048:	mov	w0, #0x0                   	// #0
    b04c:	b	b030 <elf_flagshdr@@ELFUTILS_1.0+0x38>
    b050:	cmp	w1, #0x4
    b054:	b.ne	b06c <elf_flagshdr@@ELFUTILS_1.0+0x74>  // b.any
    b058:	ldr	w0, [x3, #152]
    b05c:	and	w2, w2, #0x1
    b060:	bic	w0, w0, w2
    b064:	str	w0, [x3, #152]
    b068:	b	b030 <elf_flagshdr@@ELFUTILS_1.0+0x38>
    b06c:	mov	w0, #0x19                  	// #25
    b070:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b074:	mov	w0, #0x0                   	// #0
    b078:	b	b030 <elf_flagshdr@@ELFUTILS_1.0+0x38>
    b07c:	nop

000000000000b080 <elf_flagdata@@ELFUTILS_1.0>:
    b080:	cbz	x0, b0c0 <elf_flagdata@@ELFUTILS_1.0+0x40>
    b084:	stp	x29, x30, [sp, #-16]!
    b088:	mov	x29, sp
    b08c:	ldr	x3, [x0, #40]
    b090:	ldr	x0, [x3, #136]
    b094:	ldr	w0, [x0, #24]
    b098:	cmp	w0, #0x3
    b09c:	b.ne	b0c8 <elf_flagdata@@ELFUTILS_1.0+0x48>  // b.any
    b0a0:	cmp	w1, #0x5
    b0a4:	b.ne	b0d8 <elf_flagdata@@ELFUTILS_1.0+0x58>  // b.any
    b0a8:	ldr	w0, [x3, #156]
    b0ac:	and	w2, w2, #0x1
    b0b0:	orr	w0, w2, w0
    b0b4:	str	w0, [x3, #156]
    b0b8:	ldp	x29, x30, [sp], #16
    b0bc:	ret
    b0c0:	mov	w0, #0x0                   	// #0
    b0c4:	ret
    b0c8:	mov	w0, #0x4                   	// #4
    b0cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b0d0:	mov	w0, #0x0                   	// #0
    b0d4:	b	b0b8 <elf_flagdata@@ELFUTILS_1.0+0x38>
    b0d8:	cmp	w1, #0x4
    b0dc:	b.ne	b0f4 <elf_flagdata@@ELFUTILS_1.0+0x74>  // b.any
    b0e0:	ldr	w0, [x3, #156]
    b0e4:	and	w2, w2, #0x1
    b0e8:	bic	w0, w0, w2
    b0ec:	str	w0, [x3, #156]
    b0f0:	b	b0b8 <elf_flagdata@@ELFUTILS_1.0+0x38>
    b0f4:	mov	w0, #0x19                  	// #25
    b0f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b0fc:	mov	w0, #0x0                   	// #0
    b100:	b	b0b8 <elf_flagdata@@ELFUTILS_1.0+0x38>
    b104:	nop

000000000000b108 <elf_memory@@ELFUTILS_1.0>:
    b108:	cbz	x0, b128 <elf_memory@@ELFUTILS_1.0+0x20>
    b10c:	mov	x3, x1
    b110:	mov	x5, #0x0                   	// #0
    b114:	mov	x1, x0
    b118:	mov	w4, #0x1                   	// #1
    b11c:	mov	x2, #0x0                   	// #0
    b120:	mov	w0, #0xffffffff            	// #-1
    b124:	b	3fb0 <elf_fill@@ELFUTILS_1.0+0x960>
    b128:	stp	x29, x30, [sp, #-16]!
    b12c:	mov	w0, #0x17                  	// #23
    b130:	mov	x29, sp
    b134:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b138:	mov	x0, #0x0                   	// #0
    b13c:	ldp	x29, x30, [sp], #16
    b140:	ret
    b144:	nop

000000000000b148 <elf_update@@ELFUTILS_1.0>:
    b148:	stp	x29, x30, [sp, #-208]!
    b14c:	cmp	w1, #0x0
    b150:	ccmp	w1, #0x3, #0x4, ne  // ne = any
    b154:	mov	x29, sp
    b158:	stp	x21, x22, [sp, #32]
    b15c:	ccmp	w1, #0xa, #0x4, ne  // ne = any
    b160:	str	wzr, [sp, #76]
    b164:	b.ne	b3c4 <elf_update@@ELFUTILS_1.0+0x27c>  // b.any
    b168:	stp	x19, x20, [sp, #16]
    b16c:	mov	x19, x0
    b170:	cbz	x0, b3b8 <elf_update@@ELFUTILS_1.0+0x270>
    b174:	ldr	w0, [x0, #24]
    b178:	cmp	w0, #0x3
    b17c:	b.ne	b4e4 <elf_update@@ELFUTILS_1.0+0x39c>  // b.any
    b180:	ldr	x0, [x19, #72]
    b184:	cbz	x0, b4f8 <elf_update@@ELFUTILS_1.0+0x3b0>
    b188:	ldr	x2, [x19, #96]
    b18c:	mov	w20, w1
    b190:	mov	x22, #0x0                   	// #0
    b194:	ldr	w0, [x2]
    b198:	cbnz	w0, b270 <elf_update@@ELFUTILS_1.0+0x128>
    b19c:	ldr	w0, [x19, #32]
    b1a0:	mov	x2, x22
    b1a4:	add	x1, sp, #0x4c
    b1a8:	cmp	w0, #0x1
    b1ac:	mov	x0, x19
    b1b0:	b.eq	b2a0 <elf_update@@ELFUTILS_1.0+0x158>  // b.none
    b1b4:	bl	bd58 <elf_update@@ELFUTILS_1.0+0xc10>
    b1b8:	mov	x21, x0
    b1bc:	cmn	x21, #0x1
    b1c0:	b.eq	b3b8 <elf_update@@ELFUTILS_1.0+0x270>  // b.none
    b1c4:	cmp	w20, #0x3
    b1c8:	ccmp	w20, #0xa, #0x4, ne  // ne = any
    b1cc:	b.ne	b2ac <elf_update@@ELFUTILS_1.0+0x164>  // b.any
    b1d0:	ldr	w0, [x19, #28]
    b1d4:	sub	w1, w0, #0x2
    b1d8:	sub	w0, w0, #0x9
    b1dc:	cmp	w1, #0x1
    b1e0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    b1e4:	b.hi	b4d0 <elf_update@@ELFUTILS_1.0+0x388>  // b.pmore
    b1e8:	ldr	w1, [x19, #36]
    b1ec:	cmn	w1, #0x1
    b1f0:	b.eq	b400 <elf_update@@ELFUTILS_1.0+0x2b8>  // b.none
    b1f4:	ldr	w20, [x19, #32]
    b1f8:	add	x2, sp, #0x50
    b1fc:	mov	w0, #0x0                   	// #0
    b200:	str	x23, [sp, #48]
    b204:	ldr	w23, [sp, #76]
    b208:	bl	32f0 <__fxstat@plt>
    b20c:	cbnz	w0, b3e8 <elf_update@@ELFUTILS_1.0+0x2a0>
    b210:	ldr	x0, [x19, #8]
    b214:	cbz	x0, b2ec <elf_update@@ELFUTILS_1.0+0x1a4>
    b218:	ldr	x0, [x19]
    b21c:	cbz	x0, b308 <elf_update@@ELFUTILS_1.0+0x1c0>
    b220:	mov	x2, x22
    b224:	mov	w1, w23
    b228:	mov	x0, x19
    b22c:	cmp	w20, #0x1
    b230:	b.eq	b2c0 <elf_update@@ELFUTILS_1.0+0x178>  // b.none
    b234:	bl	dcb8 <elf_update@@ELFUTILS_1.0+0x2b70>
    b238:	cmp	w0, #0x0
    b23c:	cset	w0, ne  // ne = any
    b240:	cbnz	w0, b2d0 <elf_update@@ELFUTILS_1.0+0x188>
    b244:	ldr	x0, [x19, #8]
    b248:	cbz	x0, b430 <elf_update@@ELFUTILS_1.0+0x2e8>
    b24c:	ldr	w1, [sp, #96]
    b250:	tst	w1, #0xc00
    b254:	b.ne	b47c <elf_update@@ELFUTILS_1.0+0x334>  // b.any
    b258:	mov	x0, x21
    b25c:	ldp	x19, x20, [sp, #16]
    b260:	ldp	x21, x22, [sp, #32]
    b264:	ldr	x23, [sp, #48]
    b268:	ldp	x29, x30, [sp], #208
    b26c:	ret
    b270:	sub	w0, w0, #0x1
    b274:	add	x1, x0, x0, lsl #1
    b278:	add	x0, x0, x1, lsl #2
    b27c:	add	x1, sp, #0x4c
    b280:	add	x0, x2, x0, lsl #4
    b284:	ldr	x22, [x0, #144]
    b288:	ldr	w0, [x19, #32]
    b28c:	add	x22, x22, #0x1
    b290:	cmp	w0, #0x1
    b294:	mov	x2, x22
    b298:	mov	x0, x19
    b29c:	b.ne	b1b4 <elf_update@@ELFUTILS_1.0+0x6c>  // b.any
    b2a0:	bl	b518 <elf_update@@ELFUTILS_1.0+0x3d0>
    b2a4:	mov	x21, x0
    b2a8:	b	b1bc <elf_update@@ELFUTILS_1.0+0x74>
    b2ac:	ldp	x19, x20, [sp, #16]
    b2b0:	mov	x0, x21
    b2b4:	ldp	x21, x22, [sp, #32]
    b2b8:	ldp	x29, x30, [sp], #208
    b2bc:	ret
    b2c0:	bl	c790 <elf_update@@ELFUTILS_1.0+0x1648>
    b2c4:	cmp	w0, #0x0
    b2c8:	cset	w0, ne  // ne = any
    b2cc:	cbz	w0, b244 <elf_update@@ELFUTILS_1.0+0xfc>
    b2d0:	mov	x21, #0xffffffffffffffff    	// #-1
    b2d4:	mov	x0, x21
    b2d8:	ldp	x19, x20, [sp, #16]
    b2dc:	ldp	x21, x22, [sp, #32]
    b2e0:	ldr	x23, [sp, #48]
    b2e4:	ldp	x29, x30, [sp], #208
    b2e8:	ret
    b2ec:	ldr	x0, [x19, #48]
    b2f0:	cmn	x0, #0x1
    b2f4:	b.eq	b338 <elf_update@@ELFUTILS_1.0+0x1f0>  // b.none
    b2f8:	cmp	x0, x21
    b2fc:	b.cc	b338 <elf_update@@ELFUTILS_1.0+0x1f0>  // b.lo, b.ul, b.last
    b300:	ldr	x1, [x19]
    b304:	cbnz	x1, b35c <elf_update@@ELFUTILS_1.0+0x214>
    b308:	ldr	w0, [x19, #28]
    b30c:	cmp	w0, #0xa
    b310:	b.eq	b494 <elf_update@@ELFUTILS_1.0+0x34c>  // b.none
    b314:	cmp	w20, #0x1
    b318:	b.eq	b414 <elf_update@@ELFUTILS_1.0+0x2cc>  // b.none
    b31c:	mov	x2, x22
    b320:	mov	w1, w23
    b324:	mov	x0, x19
    b328:	bl	e678 <elf_update@@ELFUTILS_1.0+0x3530>
    b32c:	cmp	w0, #0x0
    b330:	cset	w0, ne  // ne = any
    b334:	b	b240 <elf_update@@ELFUTILS_1.0+0xf8>
    b338:	ldr	w0, [x19, #36]
    b33c:	mov	x1, x21
    b340:	bl	3320 <ftruncate@plt>
    b344:	cbnz	w0, b3e8 <elf_update@@ELFUTILS_1.0+0x2a0>
    b348:	ldr	x0, [x19]
    b34c:	cbz	x0, b308 <elf_update@@ELFUTILS_1.0+0x1c0>
    b350:	ldr	x0, [x19, #8]
    b354:	cbnz	x0, b220 <elf_update@@ELFUTILS_1.0+0xd8>
    b358:	ldr	x0, [x19, #48]
    b35c:	cmn	x0, #0x1
    b360:	b.eq	b36c <elf_update@@ELFUTILS_1.0+0x224>  // b.none
    b364:	cmp	x0, x21
    b368:	b.cs	b220 <elf_update@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    b36c:	ldr	w0, [x19, #36]
    b370:	mov	x2, x21
    b374:	mov	x1, #0x0                   	// #0
    b378:	bl	3050 <posix_fallocate@plt>
    b37c:	cbnz	w0, b3d4 <elf_update@@ELFUTILS_1.0+0x28c>
    b380:	ldr	w0, [x19, #28]
    b384:	cmp	w0, #0x9
    b388:	b.ne	b220 <elf_update@@ELFUTILS_1.0+0xd8>  // b.any
    b38c:	ldr	x1, [x19, #48]
    b390:	cmp	x1, x21
    b394:	b.cs	b220 <elf_update@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    b398:	ldr	x0, [x19]
    b39c:	mov	x2, x21
    b3a0:	mov	w3, #0x0                   	// #0
    b3a4:	bl	3080 <mremap@plt>
    b3a8:	cmn	x0, #0x1
    b3ac:	b.eq	b3e8 <elf_update@@ELFUTILS_1.0+0x2a0>  // b.none
    b3b0:	str	x21, [x19, #48]
    b3b4:	b	b220 <elf_update@@ELFUTILS_1.0+0xd8>
    b3b8:	mov	x21, #0xffffffffffffffff    	// #-1
    b3bc:	ldp	x19, x20, [sp, #16]
    b3c0:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b3c4:	mov	w0, #0xd                   	// #13
    b3c8:	mov	x21, #0xffffffffffffffff    	// #-1
    b3cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b3d0:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b3d4:	bl	3340 <__errno_location@plt>
    b3d8:	ldr	w0, [x0]
    b3dc:	cmp	w0, #0x1c
    b3e0:	b.ne	b380 <elf_update@@ELFUTILS_1.0+0x238>  // b.any
    b3e4:	nop
    b3e8:	mov	w0, #0x14                  	// #20
    b3ec:	mov	x21, #0xffffffffffffffff    	// #-1
    b3f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b3f4:	ldp	x19, x20, [sp, #16]
    b3f8:	ldr	x23, [sp, #48]
    b3fc:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b400:	mov	w0, #0x1b                  	// #27
    b404:	mov	x21, #0xffffffffffffffff    	// #-1
    b408:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b40c:	ldp	x19, x20, [sp, #16]
    b410:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b414:	mov	x2, x22
    b418:	mov	w1, w23
    b41c:	mov	x0, x19
    b420:	bl	d148 <elf_update@@ELFUTILS_1.0+0x2000>
    b424:	cmp	w0, #0x0
    b428:	cset	w0, ne  // ne = any
    b42c:	b	b240 <elf_update@@ELFUTILS_1.0+0xf8>
    b430:	ldr	x0, [x19, #48]
    b434:	cmn	x0, #0x1
    b438:	b.eq	b444 <elf_update@@ELFUTILS_1.0+0x2fc>  // b.none
    b43c:	cmp	x0, x21
    b440:	b.hi	b460 <elf_update@@ELFUTILS_1.0+0x318>  // b.pmore
    b444:	ldr	w1, [sp, #96]
    b448:	tst	w1, #0xc00
    b44c:	b.ne	b47c <elf_update@@ELFUTILS_1.0+0x334>  // b.any
    b450:	ldr	x23, [sp, #48]
    b454:	str	x21, [x19, #48]
    b458:	ldp	x19, x20, [sp, #16]
    b45c:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b460:	ldr	w0, [x19, #36]
    b464:	mov	x1, x21
    b468:	bl	3320 <ftruncate@plt>
    b46c:	cbnz	w0, b3e8 <elf_update@@ELFUTILS_1.0+0x2a0>
    b470:	ldr	w1, [sp, #96]
    b474:	tst	w1, #0xc00
    b478:	b.eq	b488 <elf_update@@ELFUTILS_1.0+0x340>  // b.none
    b47c:	ldr	w0, [x19, #36]
    b480:	bl	3120 <fchmod@plt>
    b484:	cbnz	w0, b3e8 <elf_update@@ELFUTILS_1.0+0x2a0>
    b488:	ldr	x0, [x19, #8]
    b48c:	cbnz	x0, b258 <elf_update@@ELFUTILS_1.0+0x110>
    b490:	b	b450 <elf_update@@ELFUTILS_1.0+0x308>
    b494:	ldr	w4, [x19, #36]
    b498:	mov	x1, x21
    b49c:	mov	x5, #0x0                   	// #0
    b4a0:	mov	w3, #0x1                   	// #1
    b4a4:	mov	w2, #0x3                   	// #3
    b4a8:	mov	x0, #0x0                   	// #0
    b4ac:	bl	31e0 <mmap@plt>
    b4b0:	str	x0, [x19]
    b4b4:	cmn	x0, #0x1
    b4b8:	b.eq	b50c <elf_update@@ELFUTILS_1.0+0x3c4>  // b.none
    b4bc:	ldr	w1, [x19, #56]
    b4c0:	orr	w1, w1, #0x40
    b4c4:	str	w1, [x19, #56]
    b4c8:	cbz	x0, b314 <elf_update@@ELFUTILS_1.0+0x1cc>
    b4cc:	b	b350 <elf_update@@ELFUTILS_1.0+0x208>
    b4d0:	mov	w0, #0x26                  	// #38
    b4d4:	mov	x21, #0xffffffffffffffff    	// #-1
    b4d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b4dc:	ldp	x19, x20, [sp, #16]
    b4e0:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b4e4:	mov	w0, #0x4                   	// #4
    b4e8:	mov	x21, #0xffffffffffffffff    	// #-1
    b4ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b4f0:	ldp	x19, x20, [sp, #16]
    b4f4:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b4f8:	mov	w0, #0x1a                  	// #26
    b4fc:	mov	x21, #0xffffffffffffffff    	// #-1
    b500:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b504:	ldp	x19, x20, [sp, #16]
    b508:	b	b2b0 <elf_update@@ELFUTILS_1.0+0x168>
    b50c:	str	xzr, [x19]
    b510:	b	b314 <elf_update@@ELFUTILS_1.0+0x1cc>
    b514:	nop
    b518:	stp	x29, x30, [sp, #-144]!
    b51c:	mov	x29, sp
    b520:	stp	x19, x20, [sp, #16]
    b524:	mov	x20, x1
    b528:	mov	x19, x0
    b52c:	stp	x23, x24, [sp, #48]
    b530:	mov	x23, x2
    b534:	stp	x25, x26, [sp, #64]
    b538:	bl	6988 <elf64_xlatetom@@ELFUTILS_1.0+0x1238>
    b53c:	mov	x25, x0
    b540:	mov	w0, #0x457f                	// #17791
    b544:	movk	w0, #0x464c, lsl #16
    b548:	ldr	w1, [x25]
    b54c:	cmp	w1, w0
    b550:	b.ne	b9f0 <elf_update@@ELFUTILS_1.0+0x8a8>  // b.any
    b554:	ldrb	w0, [x25, #4]
    b558:	cmp	w0, #0x1
    b55c:	b.eq	b574 <elf_update@@ELFUTILS_1.0+0x42c>  // b.none
    b560:	mov	w0, #0x1                   	// #1
    b564:	strb	w0, [x25, #4]
    b568:	ldr	w0, [x19, #116]
    b56c:	orr	w0, w0, #0x1
    b570:	str	w0, [x19, #116]
    b574:	ldrb	w0, [x25, #5]
    b578:	cbz	w0, bb00 <elf_update@@ELFUTILS_1.0+0x9b8>
    b57c:	cmp	w0, #0x2
    b580:	b.hi	bb38 <elf_update@@ELFUTILS_1.0+0x9f0>  // b.pmore
    b584:	cmp	w0, #0x1
    b588:	cset	w0, ne  // ne = any
    b58c:	str	w0, [x20]
    b590:	ldrb	w0, [x25, #6]
    b594:	cmp	w0, #0x1
    b598:	b.eq	b5b0 <elf_update@@ELFUTILS_1.0+0x468>  // b.none
    b59c:	mov	w0, #0x1                   	// #1
    b5a0:	strb	w0, [x25, #6]
    b5a4:	ldr	w0, [x19, #116]
    b5a8:	orr	w0, w0, #0x1
    b5ac:	str	w0, [x19, #116]
    b5b0:	ldr	w0, [x25, #20]
    b5b4:	cbz	w0, bb18 <elf_update@@ELFUTILS_1.0+0x9d0>
    b5b8:	cmp	w0, #0x1
    b5bc:	b.ne	b9a8 <elf_update@@ELFUTILS_1.0+0x860>  // b.any
    b5c0:	stp	x21, x22, [sp, #32]
    b5c4:	stp	x27, x28, [sp, #80]
    b5c8:	mov	x0, #0xfeff                	// #65279
    b5cc:	ldrh	w1, [x25, #48]
    b5d0:	cmp	x23, x0
    b5d4:	b.hi	bb5c <elf_update@@ELFUTILS_1.0+0xa14>  // b.pmore
    b5d8:	cmp	x23, w1, uxth
    b5dc:	b.eq	b5f0 <elf_update@@ELFUTILS_1.0+0x4a8>  // b.none
    b5e0:	ldr	w0, [x19, #116]
    b5e4:	strh	w23, [x25, #48]
    b5e8:	orr	w0, w0, #0x1
    b5ec:	str	w0, [x19, #116]
    b5f0:	adrp	x24, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    b5f4:	add	x1, x24, #0xcf8
    b5f8:	ldrh	w0, [x25, #40]
    b5fc:	ldr	x20, [x1, #24]
    b600:	cmp	x0, x20
    b604:	b.ne	bb48 <elf_update@@ELFUTILS_1.0+0xa00>  // b.any
    b608:	ldrh	w0, [x25, #44]
    b60c:	cbz	w0, b814 <elf_update@@ELFUTILS_1.0+0x6cc>
    b610:	ldr	x0, [x19, #88]
    b614:	mov	w26, w20
    b618:	cbz	x0, b838 <elf_update@@ELFUTILS_1.0+0x6f0>
    b61c:	add	x1, sp, #0x88
    b620:	mov	x0, x19
    b624:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    b628:	mov	w28, w0
    b62c:	cbnz	w0, ba3c <elf_update@@ELFUTILS_1.0+0x8f4>
    b630:	ldr	w2, [x19, #56]
    b634:	add	x1, x24, #0xcf8
    b638:	ldr	w21, [x25, #28]
    b63c:	ldr	x26, [sp, #136]
    b640:	ldr	x0, [x1, #48]
    b644:	tbz	w2, #2, b87c <elf_update@@ELFUTILS_1.0+0x734>
    b648:	madd	x0, x0, x26, x21
    b64c:	and	x26, x20, #0xffffffff
    b650:	cmp	x0, w20, uxtw
    b654:	csel	x26, x0, x26, cs  // cs = hs, nlast
    b658:	cbz	x23, b850 <elf_update@@ELFUTILS_1.0+0x708>
    b65c:	ldr	w0, [x19, #200]
    b660:	cbz	w0, bcec <elf_update@@ELFUTILS_1.0+0xba4>
    b664:	mov	x1, #0xfeff                	// #65279
    b668:	cmp	x23, x1
    b66c:	b.ls	b694 <elf_update@@ELFUTILS_1.0+0x54c>  // b.plast
    b670:	ldr	x2, [x19, #360]
    b674:	ldr	w3, [x2, #20]
    b678:	cmp	x3, x23
    b67c:	b.eq	b694 <elf_update@@ELFUTILS_1.0+0x54c>  // b.none
    b680:	str	w23, [x2, #20]
    b684:	ldr	w2, [x19, #368]
    b688:	ldr	w0, [x19, #200]
    b68c:	orr	w2, w2, #0x1
    b690:	str	w2, [x19, #368]
    b694:	cmp	w0, #0x1
    b698:	add	x5, x19, #0xc8
    b69c:	b.ls	bae8 <elf_update@@ELFUTILS_1.0+0x9a0>  // b.plast
    b6a0:	add	x0, x19, #0x1a8
    b6a4:	ldr	x1, [x0, #144]
    b6a8:	cbz	x1, bb74 <elf_update@@ELFUTILS_1.0+0xa2c>
    b6ac:	mov	w0, #0x1                   	// #1
    b6b0:	mov	w7, #0xfffa                	// #65530
    b6b4:	mov	w6, w0
    b6b8:	mov	w9, #0x0                   	// #0
    b6bc:	movk	w7, #0x6fff, lsl #16
    b6c0:	ldr	w1, [x5]
    b6c4:	and	x2, x0, #0xff
    b6c8:	cmp	w1, w0
    b6cc:	b.ls	b7f4 <elf_update@@ELFUTILS_1.0+0x6ac>  // b.plast
    b6d0:	lsl	x20, x2, #1
    b6d4:	mov	w10, #0xfffc                	// #65532
    b6d8:	add	x20, x20, x2
    b6dc:	add	x8, x24, #0xcf8
    b6e0:	movk	w10, #0x6fff, lsl #16
    b6e4:	add	x20, x2, x20, lsl #2
    b6e8:	add	x20, x5, x20, lsl #4
    b6ec:	add	x20, x20, #0x10
    b6f0:	ldr	x27, [x20, #144]
    b6f4:	cbz	x27, bccc <elf_update@@ELFUTILS_1.0+0xb84>
    b6f8:	ldp	w21, w3, [x27, #32]
    b6fc:	cmp	w21, #0x0
    b700:	csel	w21, w21, w6, ne  // ne = any
    b704:	sub	w0, w21, #0x1
    b708:	tst	w0, w21
    b70c:	b.ne	b894 <elf_update@@ELFUTILS_1.0+0x74c>  // b.any
    b710:	ldr	w1, [x27, #4]
    b714:	cmp	w1, #0xb
    b718:	b.eq	baf8 <elf_update@@ELFUTILS_1.0+0x9b0>  // b.none
    b71c:	b.hi	b8d4 <elf_update@@ELFUTILS_1.0+0x78c>  // b.pmore
    b720:	cmp	w1, #0x5
    b724:	b.eq	bbb8 <elf_update@@ELFUTILS_1.0+0xa70>  // b.none
    b728:	b.ls	b8bc <elf_update@@ELFUTILS_1.0+0x774>  // b.plast
    b72c:	cmp	w1, #0x6
    b730:	b.eq	bbb0 <elf_update@@ELFUTILS_1.0+0xa68>  // b.none
    b734:	cmp	w1, #0x9
    b738:	b.ne	b758 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    b73c:	ldr	w0, [x8, #64]
    b740:	cmp	w0, w3
    b744:	b.eq	b758 <elf_update@@ELFUTILS_1.0+0x610>  // b.none
    b748:	str	w0, [x27, #36]
    b74c:	ldr	w0, [x20, #152]
    b750:	orr	w0, w0, #0x1
    b754:	str	w0, [x20, #152]
    b758:	ldr	w0, [x20, #120]
    b75c:	cbz	w0, ba04 <elf_update@@ELFUTILS_1.0+0x8bc>
    b760:	ldr	x0, [x20, #64]
    b764:	cbnz	x0, b908 <elf_update@@ELFUTILS_1.0+0x7c0>
    b768:	ldr	w12, [x19, #56]
    b76c:	ldr	x22, [x20, #88]
    b770:	and	w12, w12, #0x4
    b774:	ldr	w0, [x27, #32]
    b778:	cbz	w12, ba5c <elf_update@@ELFUTILS_1.0+0x914>
    b77c:	ldr	w1, [x27, #4]
    b780:	cmp	w1, #0x8
    b784:	b.eq	b798 <elf_update@@ELFUTILS_1.0+0x650>  // b.none
    b788:	ldp	w1, w3, [x27, #16]
    b78c:	add	w1, w1, w3
    b790:	cmp	w26, w1
    b794:	csel	w26, w26, w1, cs  // cs = hs, nlast
    b798:	sub	w1, w0, #0x1
    b79c:	tst	w1, w0
    b7a0:	b.ne	b894 <elf_update@@ELFUTILS_1.0+0x74c>  // b.any
    b7a4:	cmp	w0, #0x0
    b7a8:	csel	w0, w0, w6, ne  // ne = any
    b7ac:	cmp	w21, w0
    b7b0:	b.hi	b894 <elf_update@@ELFUTILS_1.0+0x74c>  // b.pmore
    b7b4:	ldr	w0, [x27, #36]
    b7b8:	cmp	w0, #0x1
    b7bc:	b.ls	b7e0 <elf_update@@ELFUTILS_1.0+0x698>  // b.plast
    b7c0:	ldr	w1, [x19, #56]
    b7c4:	tbnz	w1, #3, b7e0 <elf_update@@ELFUTILS_1.0+0x698>
    b7c8:	ldr	w1, [x27, #8]
    b7cc:	tbnz	w1, #11, bc10 <elf_update@@ELFUTILS_1.0+0xac8>
    b7d0:	ldr	w3, [x27, #20]
    b7d4:	udiv	w1, w3, w0
    b7d8:	msub	w0, w1, w0, w3
    b7dc:	cbnz	w0, bbf8 <elf_update@@ELFUTILS_1.0+0xab0>
    b7e0:	ldr	w1, [x5]
    b7e4:	add	x2, x2, #0x1
    b7e8:	add	x20, x20, #0xd0
    b7ec:	cmp	x2, w1, uxtw
    b7f0:	b.cc	b6f0 <elf_update@@ELFUTILS_1.0+0x5a8>  // b.lo, b.ul, b.last
    b7f4:	ldr	x2, [x5, #8]
    b7f8:	cbz	x2, bc8c <elf_update@@ELFUTILS_1.0+0xb44>
    b7fc:	ldr	w3, [x5, #4]
    b800:	mov	w0, #0x0                   	// #0
    b804:	cmp	w3, w1
    b808:	b.ne	bd34 <elf_update@@ELFUTILS_1.0+0xbec>  // b.any
    b80c:	mov	x5, x2
    b810:	b	b6c0 <elf_update@@ELFUTILS_1.0+0x578>
    b814:	ldr	w0, [x25, #28]
    b818:	cbz	w0, b610 <elf_update@@ELFUTILS_1.0+0x4c8>
    b81c:	str	wzr, [x25, #28]
    b820:	mov	w26, w20
    b824:	ldr	w0, [x19, #116]
    b828:	orr	w0, w0, #0x1
    b82c:	str	w0, [x19, #116]
    b830:	ldr	x0, [x19, #88]
    b834:	cbnz	x0, b61c <elf_update@@ELFUTILS_1.0+0x4d4>
    b838:	mov	x0, x19
    b83c:	bl	6eb8 <gelf_update_ehdr@@ELFUTILS_1.0+0x138>
    b840:	ldr	x0, [x19, #88]
    b844:	cbnz	x0, b61c <elf_update@@ELFUTILS_1.0+0x4d4>
    b848:	mov	w28, #0x0                   	// #0
    b84c:	cbnz	x23, b65c <elf_update@@ELFUTILS_1.0+0x514>
    b850:	ldr	w1, [x19, #116]
    b854:	mov	w0, w26
    b858:	ldp	x21, x22, [sp, #32]
    b85c:	orr	w28, w1, w28
    b860:	str	w28, [x19, #116]
    b864:	ldp	x19, x20, [sp, #16]
    b868:	ldp	x23, x24, [sp, #48]
    b86c:	ldp	x25, x26, [sp, #64]
    b870:	ldp	x27, x28, [sp, #80]
    b874:	ldp	x29, x30, [sp], #144
    b878:	ret
    b87c:	cmp	x21, x20
    b880:	b.eq	b88c <elf_update@@ELFUTILS_1.0+0x744>  // b.none
    b884:	mov	w28, #0x1                   	// #1
    b888:	str	w20, [x25, #28]
    b88c:	madd	w26, w0, w26, w20
    b890:	b	b658 <elf_update@@ELFUTILS_1.0+0x510>
    b894:	mov	w0, #0x24                  	// #36
    b898:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b89c:	ldp	x21, x22, [sp, #32]
    b8a0:	mov	x0, #0xffffffffffffffff    	// #-1
    b8a4:	ldp	x27, x28, [sp, #80]
    b8a8:	ldp	x19, x20, [sp, #16]
    b8ac:	ldp	x23, x24, [sp, #48]
    b8b0:	ldp	x25, x26, [sp, #64]
    b8b4:	ldp	x29, x30, [sp], #144
    b8b8:	ret
    b8bc:	cmp	w1, #0x2
    b8c0:	b.eq	baf8 <elf_update@@ELFUTILS_1.0+0x9b0>  // b.none
    b8c4:	cmp	w1, #0x4
    b8c8:	b.ne	b758 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    b8cc:	ldr	w0, [x8, #56]
    b8d0:	b	b740 <elf_update@@ELFUTILS_1.0+0x5f8>
    b8d4:	cmp	w1, w7
    b8d8:	b.eq	bb84 <elf_update@@ELFUTILS_1.0+0xa3c>  // b.none
    b8dc:	b.ls	b8f0 <elf_update@@ELFUTILS_1.0+0x7a8>  // b.plast
    b8e0:	cmp	w1, w10
    b8e4:	b.ne	b758 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    b8e8:	ldr	w0, [x8, #160]
    b8ec:	b	b740 <elf_update@@ELFUTILS_1.0+0x5f8>
    b8f0:	cmp	w1, #0x11
    b8f4:	b.eq	bb8c <elf_update@@ELFUTILS_1.0+0xa44>  // b.none
    b8f8:	cmp	w1, #0x12
    b8fc:	b.ne	b758 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    b900:	ldr	w0, [x8, #96]
    b904:	b	b740 <elf_update@@ELFUTILS_1.0+0x5f8>
    b908:	mov	x4, x20
    b90c:	add	x14, x20, #0x48
    b910:	cmp	x20, x4
    b914:	mov	x3, x4
    b918:	mov	x22, #0x0                   	// #0
    b91c:	b.eq	b97c <elf_update@@ELFUTILS_1.0+0x834>  // b.none
    b920:	ldr	w13, [x3, #12]
    b924:	cmp	w13, #0x1
    b928:	b.ne	b9a0 <elf_update@@ELFUTILS_1.0+0x858>  // b.any
    b92c:	ldr	x1, [x3, #32]
    b930:	sub	x0, x1, #0x1
    b934:	tst	x0, x1
    b938:	b.ne	b894 <elf_update@@ELFUTILS_1.0+0x74c>  // b.any
    b93c:	mov	w21, w21
    b940:	ldr	w0, [x19, #56]
    b944:	cmp	x21, x1
    b948:	csel	x21, x21, x1, cs  // cs = hs, nlast
    b94c:	and	w12, w0, #0x4
    b950:	ldp	x11, x15, [x3, #16]
    b954:	tbz	w0, #2, b9c8 <elf_update@@ELFUTILS_1.0+0x880>
    b958:	ldr	w0, [x27, #20]
    b95c:	add	w11, w15, w11
    b960:	cmp	w11, w0
    b964:	b.hi	bbec <elf_update@@ELFUTILS_1.0+0xaa4>  // b.pmore
    b968:	ldr	x4, [x4, #48]
    b96c:	cbz	x4, b774 <elf_update@@ELFUTILS_1.0+0x62c>
    b970:	cmp	x20, x4
    b974:	mov	x3, x4
    b978:	b.ne	b920 <elf_update@@ELFUTILS_1.0+0x7d8>  // b.any
    b97c:	ldr	x0, [x20]
    b980:	cbnz	x0, b920 <elf_update@@ELFUTILS_1.0+0x7d8>
    b984:	ldr	x0, [x20, #72]
    b988:	cmp	x0, #0x0
    b98c:	csel	x3, x20, x14, eq  // eq = none
    b990:	ldr	w13, [x3, #12]
    b994:	cmp	w13, #0x1
    b998:	b.eq	b92c <elf_update@@ELFUTILS_1.0+0x7e4>  // b.none
    b99c:	nop
    b9a0:	ldp	x21, x22, [sp, #32]
    b9a4:	ldp	x27, x28, [sp, #80]
    b9a8:	mov	w0, #0x2                   	// #2
    b9ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b9b0:	mov	x0, #0xffffffffffffffff    	// #-1
    b9b4:	ldp	x19, x20, [sp, #16]
    b9b8:	ldp	x23, x24, [sp, #48]
    b9bc:	ldp	x25, x26, [sp, #64]
    b9c0:	ldp	x29, x30, [sp], #144
    b9c4:	ret
    b9c8:	sub	x22, x22, #0x1
    b9cc:	neg	x0, x1
    b9d0:	add	x22, x22, x1
    b9d4:	and	x22, x22, x0
    b9d8:	cmp	x15, x22
    b9dc:	b.eq	b9e8 <elf_update@@ELFUTILS_1.0+0x8a0>  // b.none
    b9e0:	mov	w9, w13
    b9e4:	str	x22, [x3, #24]
    b9e8:	add	x22, x11, x22
    b9ec:	b	b968 <elf_update@@ELFUTILS_1.0+0x820>
    b9f0:	str	w0, [x25]
    b9f4:	ldr	w0, [x19, #116]
    b9f8:	orr	w0, w0, #0x1
    b9fc:	str	w0, [x19, #116]
    ba00:	b	b554 <elf_update@@ELFUTILS_1.0+0x40c>
    ba04:	mov	x0, x20
    ba08:	str	w9, [sp, #96]
    ba0c:	stp	x5, x2, [sp, #104]
    ba10:	str	x8, [sp, #120]
    ba14:	bl	a270 <elf_rawdata@@ELFUTILS_1.0+0x150>
    ba18:	mov	w10, #0xfffc                	// #65532
    ba1c:	mov	w7, #0xfffa                	// #65530
    ba20:	ldr	w9, [sp, #96]
    ba24:	movk	w10, #0x6fff, lsl #16
    ba28:	mov	w6, #0x1                   	// #1
    ba2c:	movk	w7, #0x6fff, lsl #16
    ba30:	ldp	x5, x2, [sp, #104]
    ba34:	ldr	x8, [sp, #120]
    ba38:	cbz	w0, b760 <elf_update@@ELFUTILS_1.0+0x618>
    ba3c:	mov	x0, #0xffffffffffffffff    	// #-1
    ba40:	ldp	x19, x20, [sp, #16]
    ba44:	ldp	x21, x22, [sp, #32]
    ba48:	ldp	x23, x24, [sp, #48]
    ba4c:	ldp	x25, x26, [sp, #64]
    ba50:	ldp	x27, x28, [sp, #80]
    ba54:	ldp	x29, x30, [sp], #144
    ba58:	ret
    ba5c:	cmp	w0, w21
    ba60:	b.eq	ba74 <elf_update@@ELFUTILS_1.0+0x92c>  // b.none
    ba64:	str	w21, [x27, #32]
    ba68:	ldr	w0, [x20, #152]
    ba6c:	orr	w0, w0, #0x1
    ba70:	str	w0, [x20, #152]
    ba74:	sub	w0, w26, #0x1
    ba78:	ldr	w1, [x27, #16]
    ba7c:	neg	w26, w21
    ba80:	add	w0, w0, w21
    ba84:	and	w26, w26, w0
    ba88:	cmp	w1, w26
    ba8c:	b.eq	baa4 <elf_update@@ELFUTILS_1.0+0x95c>  // b.none
    ba90:	str	w26, [x27, #16]
    ba94:	ldr	x0, [x20, #64]
    ba98:	cbz	x0, bc54 <elf_update@@ELFUTILS_1.0+0xb0c>
    ba9c:	mov	w9, #0x1                   	// #1
    baa0:	mov	w12, w9
    baa4:	ldr	w0, [x27, #20]
    baa8:	mov	w3, w22
    baac:	cmp	w0, w22
    bab0:	b.eq	bac0 <elf_update@@ELFUTILS_1.0+0x978>  // b.none
    bab4:	mov	w9, #0x1                   	// #1
    bab8:	mov	w12, w9
    babc:	str	w22, [x27, #20]
    bac0:	ldr	w0, [x27, #4]
    bac4:	add	w3, w26, w3
    bac8:	ldr	w1, [x20, #152]
    bacc:	cmp	w0, #0x8
    bad0:	ldr	w0, [x20, #156]
    bad4:	orr	w12, w1, w12
    bad8:	csel	w26, w3, w26, ne  // ne = any
    badc:	orr	w0, w0, w9
    bae0:	stp	w12, w0, [x20, #152]
    bae4:	b	b7b4 <elf_update@@ELFUTILS_1.0+0x66c>
    bae8:	ldr	x0, [x19, #208]
    baec:	cbz	x0, b6ac <elf_update@@ELFUTILS_1.0+0x564>
    baf0:	add	x0, x0, #0x10
    baf4:	b	b6a4 <elf_update@@ELFUTILS_1.0+0x55c>
    baf8:	ldr	w0, [x8, #88]
    bafc:	b	b740 <elf_update@@ELFUTILS_1.0+0x5f8>
    bb00:	mov	w0, #0x1                   	// #1
    bb04:	strb	w0, [x25, #5]
    bb08:	ldr	w0, [x19, #116]
    bb0c:	orr	w0, w0, #0x1
    bb10:	str	w0, [x19, #116]
    bb14:	b	b590 <elf_update@@ELFUTILS_1.0+0x448>
    bb18:	stp	x21, x22, [sp, #32]
    bb1c:	mov	w0, #0x1                   	// #1
    bb20:	stp	x27, x28, [sp, #80]
    bb24:	str	w0, [x25, #20]
    bb28:	ldr	w0, [x19, #116]
    bb2c:	orr	w0, w0, #0x1
    bb30:	str	w0, [x19, #116]
    bb34:	b	b5c8 <elf_update@@ELFUTILS_1.0+0x480>
    bb38:	mov	w0, #0x22                  	// #34
    bb3c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bb40:	mov	x0, #0xffffffffffffffff    	// #-1
    bb44:	b	b8a8 <elf_update@@ELFUTILS_1.0+0x760>
    bb48:	ldr	w0, [x19, #116]
    bb4c:	strh	w20, [x25, #40]
    bb50:	orr	w0, w0, #0x1
    bb54:	str	w0, [x19, #116]
    bb58:	b	b608 <elf_update@@ELFUTILS_1.0+0x4c0>
    bb5c:	cbz	w1, b5f0 <elf_update@@ELFUTILS_1.0+0x4a8>
    bb60:	ldr	w0, [x19, #116]
    bb64:	strh	wzr, [x25, #48]
    bb68:	orr	w0, w0, #0x1
    bb6c:	str	w0, [x19, #116]
    bb70:	b	b5f0 <elf_update@@ELFUTILS_1.0+0x4a8>
    bb74:	str	x5, [sp, #96]
    bb78:	bl	95f0 <elf_newscn@@ELFUTILS_1.0+0x718>
    bb7c:	ldr	x5, [sp, #96]
    bb80:	b	b6ac <elf_update@@ELFUTILS_1.0+0x564>
    bb84:	ldr	w0, [x8, #168]
    bb88:	b	b740 <elf_update@@ELFUTILS_1.0+0x5f8>
    bb8c:	ldrh	w0, [x25, #16]
    bb90:	cmp	w0, #0x1
    bb94:	b.eq	b900 <elf_update@@ELFUTILS_1.0+0x7b8>  // b.none
    bb98:	mov	w0, #0x28                  	// #40
    bb9c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bba0:	mov	x0, #0xffffffffffffffff    	// #-1
    bba4:	ldp	x21, x22, [sp, #32]
    bba8:	ldp	x27, x28, [sp, #80]
    bbac:	b	b8a8 <elf_update@@ELFUTILS_1.0+0x760>
    bbb0:	ldr	w0, [x8, #16]
    bbb4:	b	b740 <elf_update@@ELFUTILS_1.0+0x5f8>
    bbb8:	ldrh	w1, [x25, #18]
    bbbc:	mov	w4, #0x9026                	// #36902
    bbc0:	mov	w0, #0x8                   	// #8
    bbc4:	cmp	w1, w4
    bbc8:	b.eq	b740 <elf_update@@ELFUTILS_1.0+0x5f8>  // b.none
    bbcc:	cmp	w1, #0x16
    bbd0:	mov	w0, #0x4                   	// #4
    bbd4:	b.ne	b740 <elf_update@@ELFUTILS_1.0+0x5f8>  // b.any
    bbd8:	ldrb	w4, [x25, #4]
    bbdc:	mov	w1, #0x8                   	// #8
    bbe0:	cmp	w4, #0x2
    bbe4:	csel	w0, w0, w1, ne  // ne = any
    bbe8:	b	b740 <elf_update@@ELFUTILS_1.0+0x5f8>
    bbec:	mov	w0, #0x23                  	// #35
    bbf0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bbf4:	b	ba3c <elf_update@@ELFUTILS_1.0+0x8f4>
    bbf8:	mov	w0, #0x25                  	// #37
    bbfc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bc00:	mov	x0, #0xffffffffffffffff    	// #-1
    bc04:	ldp	x21, x22, [sp, #32]
    bc08:	ldp	x27, x28, [sp, #80]
    bc0c:	b	b8a8 <elf_update@@ELFUTILS_1.0+0x760>
    bc10:	mov	x0, x20
    bc14:	str	w9, [sp, #96]
    bc18:	stp	x5, x2, [sp, #104]
    bc1c:	str	x8, [sp, #120]
    bc20:	bl	3090 <elf32_getchdr@plt>
    bc24:	cbz	x0, ba3c <elf_update@@ELFUTILS_1.0+0x8f4>
    bc28:	mov	w7, #0xfffa                	// #65530
    bc2c:	mov	w10, #0xfffc                	// #65532
    bc30:	ldr	w3, [x0, #4]
    bc34:	movk	w7, #0x6fff, lsl #16
    bc38:	ldr	w0, [x27, #36]
    bc3c:	mov	w6, #0x1                   	// #1
    bc40:	ldr	w9, [sp, #96]
    bc44:	movk	w10, #0x6fff, lsl #16
    bc48:	ldp	x5, x2, [sp, #104]
    bc4c:	ldr	x8, [sp, #120]
    bc50:	b	b7d4 <elf_update@@ELFUTILS_1.0+0x68c>
    bc54:	mov	x0, x20
    bc58:	mov	x1, #0x0                   	// #0
    bc5c:	stp	x5, x2, [sp, #96]
    bc60:	str	x8, [sp, #112]
    bc64:	bl	a858 <elf_rawdata@@ELFUTILS_1.0+0x738>
    bc68:	mov	w10, #0xfffc                	// #65532
    bc6c:	mov	w7, #0xfffa                	// #65530
    bc70:	movk	w10, #0x6fff, lsl #16
    bc74:	mov	w6, #0x1                   	// #1
    bc78:	movk	w7, #0x6fff, lsl #16
    bc7c:	ldp	x5, x2, [sp, #96]
    bc80:	ldr	x8, [sp, #112]
    bc84:	cbnz	x0, ba9c <elf_update@@ELFUTILS_1.0+0x954>
    bc88:	b	ba3c <elf_update@@ELFUTILS_1.0+0x8f4>
    bc8c:	add	x24, x24, #0xcf8
    bc90:	ldrh	w0, [x25, #46]
    bc94:	ldr	x1, [x24, #72]
    bc98:	cmp	x0, x1
    bc9c:	b.eq	bca8 <elf_update@@ELFUTILS_1.0+0xb60>  // b.none
    bca0:	mov	w28, #0x1                   	// #1
    bca4:	strh	w1, [x25, #46]
    bca8:	ldr	w0, [x19, #56]
    bcac:	ldr	w2, [x25, #32]
    bcb0:	tbz	w0, #2, bd0c <elf_update@@ELFUTILS_1.0+0xbc4>
    bcb4:	mov	w2, w2
    bcb8:	mov	w0, w26
    bcbc:	madd	x1, x23, x1, x2
    bcc0:	cmp	x1, w26, uxtw
    bcc4:	csel	x26, x1, x0, cs  // cs = hs, nlast
    bcc8:	b	b850 <elf_update@@ELFUTILS_1.0+0x708>
    bccc:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bcd0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bcd4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bcd8:	add	x3, x3, #0x2f0
    bcdc:	add	x1, x1, #0x268
    bce0:	add	x0, x0, #0x2b0
    bce4:	mov	w2, #0xd6                  	// #214
    bce8:	bl	3330 <__assert_fail@plt>
    bcec:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bcf0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bcf4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bcf8:	add	x3, x3, #0x2f0
    bcfc:	add	x1, x1, #0x268
    bd00:	add	x0, x0, #0x280
    bd04:	mov	w2, #0xb4                  	// #180
    bd08:	bl	3330 <__assert_fail@plt>
    bd0c:	add	w0, w26, #0x3
    bd10:	and	w0, w0, #0xfffffffc
    bd14:	cmp	w2, w0
    bd18:	b.eq	bd2c <elf_update@@ELFUTILS_1.0+0xbe4>  // b.none
    bd1c:	str	w0, [x25, #32]
    bd20:	ldr	w2, [x19, #56]
    bd24:	orr	w2, w2, #0x1
    bd28:	str	w2, [x19, #56]
    bd2c:	madd	w26, w1, w23, w0
    bd30:	b	b850 <elf_update@@ELFUTILS_1.0+0x708>
    bd34:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bd38:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bd3c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    bd40:	add	x3, x3, #0x2f0
    bd44:	add	x1, x1, #0x268
    bd48:	add	x0, x0, #0x2c0
    bd4c:	mov	w2, #0x19b                 	// #411
    bd50:	bl	3330 <__assert_fail@plt>
    bd54:	nop
    bd58:	stp	x29, x30, [sp, #-144]!
    bd5c:	mov	x29, sp
    bd60:	stp	x19, x20, [sp, #16]
    bd64:	mov	x20, x1
    bd68:	mov	x19, x0
    bd6c:	stp	x23, x24, [sp, #48]
    bd70:	mov	x23, x2
    bd74:	stp	x25, x26, [sp, #64]
    bd78:	bl	6a58 <elf32_getehdr@@ELFUTILS_1.0+0x68>
    bd7c:	mov	x25, x0
    bd80:	mov	w0, #0x457f                	// #17791
    bd84:	movk	w0, #0x464c, lsl #16
    bd88:	ldr	w1, [x25]
    bd8c:	cmp	w1, w0
    bd90:	b.ne	c228 <elf_update@@ELFUTILS_1.0+0x10e0>  // b.any
    bd94:	ldrb	w0, [x25, #4]
    bd98:	cmp	w0, #0x2
    bd9c:	b.eq	bdb4 <elf_update@@ELFUTILS_1.0+0xc6c>  // b.none
    bda0:	mov	w0, #0x2                   	// #2
    bda4:	strb	w0, [x25, #4]
    bda8:	ldr	w0, [x19, #116]
    bdac:	orr	w0, w0, #0x1
    bdb0:	str	w0, [x19, #116]
    bdb4:	ldrb	w0, [x25, #5]
    bdb8:	cbz	w0, c324 <elf_update@@ELFUTILS_1.0+0x11dc>
    bdbc:	cmp	w0, #0x2
    bdc0:	b.hi	c358 <elf_update@@ELFUTILS_1.0+0x1210>  // b.pmore
    bdc4:	cmp	w0, #0x1
    bdc8:	cset	w0, ne  // ne = any
    bdcc:	str	w0, [x20]
    bdd0:	ldrb	w0, [x25, #6]
    bdd4:	cmp	w0, #0x1
    bdd8:	b.eq	bdf0 <elf_update@@ELFUTILS_1.0+0xca8>  // b.none
    bddc:	mov	w0, #0x1                   	// #1
    bde0:	strb	w0, [x25, #6]
    bde4:	ldr	w0, [x19, #116]
    bde8:	orr	w0, w0, #0x1
    bdec:	str	w0, [x19, #116]
    bdf0:	ldr	w0, [x25, #20]
    bdf4:	cbz	w0, c33c <elf_update@@ELFUTILS_1.0+0x11f4>
    bdf8:	cmp	w0, #0x1
    bdfc:	b.ne	c1e0 <elf_update@@ELFUTILS_1.0+0x1098>  // b.any
    be00:	stp	x27, x28, [sp, #80]
    be04:	mov	x0, #0xfeff                	// #65279
    be08:	ldrh	w1, [x25, #60]
    be0c:	cmp	x23, x0
    be10:	b.hi	c37c <elf_update@@ELFUTILS_1.0+0x1234>  // b.pmore
    be14:	cmp	x23, w1, uxth
    be18:	b.eq	be2c <elf_update@@ELFUTILS_1.0+0xce4>  // b.none
    be1c:	ldr	w0, [x19, #116]
    be20:	strh	w23, [x25, #60]
    be24:	orr	w0, w0, #0x1
    be28:	str	w0, [x19, #116]
    be2c:	adrp	x24, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    be30:	add	x1, x24, #0xcf8
    be34:	ldrh	w0, [x25, #52]
    be38:	ldr	x26, [x1, #240]
    be3c:	cmp	x0, x26
    be40:	b.ne	c368 <elf_update@@ELFUTILS_1.0+0x1220>  // b.any
    be44:	ldrh	w0, [x25, #56]
    be48:	cbz	w0, c04c <elf_update@@ELFUTILS_1.0+0xf04>
    be4c:	ldr	x0, [x19, #88]
    be50:	cbz	x0, c06c <elf_update@@ELFUTILS_1.0+0xf24>
    be54:	add	x1, sp, #0x88
    be58:	mov	x0, x19
    be5c:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    be60:	mov	w28, w0
    be64:	cbnz	w0, c420 <elf_update@@ELFUTILS_1.0+0x12d8>
    be68:	add	x1, x24, #0xcf8
    be6c:	ldr	w2, [x19, #56]
    be70:	ldr	x0, [sp, #136]
    be74:	ldr	x1, [x1, #264]
    be78:	ldr	x3, [x25, #32]
    be7c:	mul	x0, x0, x1
    be80:	tbz	w2, #2, c0ac <elf_update@@ELFUTILS_1.0+0xf64>
    be84:	add	x0, x0, x3
    be88:	cmp	x26, x0
    be8c:	csel	x26, x26, x0, cs  // cs = hs, nlast
    be90:	cbz	x23, c084 <elf_update@@ELFUTILS_1.0+0xf3c>
    be94:	ldr	w0, [x19, #200]
    be98:	stp	x21, x22, [sp, #32]
    be9c:	cbz	w0, c510 <elf_update@@ELFUTILS_1.0+0x13c8>
    bea0:	mov	x1, #0xfeff                	// #65279
    bea4:	cmp	x23, x1
    bea8:	b.ls	becc <elf_update@@ELFUTILS_1.0+0xd84>  // b.plast
    beac:	ldr	x2, [x19, #360]
    beb0:	ldr	x3, [x2, #32]
    beb4:	cmp	x3, x23
    beb8:	b.eq	becc <elf_update@@ELFUTILS_1.0+0xd84>  // b.none
    bebc:	ldr	w3, [x19, #368]
    bec0:	str	x23, [x2, #32]
    bec4:	orr	w2, w3, #0x1
    bec8:	str	w2, [x19, #368]
    becc:	cmp	w0, #0x1
    bed0:	add	x5, x19, #0xc8
    bed4:	b.ls	c308 <elf_update@@ELFUTILS_1.0+0x11c0>  // b.plast
    bed8:	add	x0, x19, #0x1a8
    bedc:	ldr	x1, [x0, #144]
    bee0:	cbz	x1, c394 <elf_update@@ELFUTILS_1.0+0x124c>
    bee4:	mov	w7, #0xfffa                	// #65530
    bee8:	mov	w1, #0x1                   	// #1
    beec:	mov	w8, #0x0                   	// #0
    bef0:	movk	w7, #0x6fff, lsl #16
    bef4:	ldr	w0, [x5]
    bef8:	and	x4, x1, #0xff
    befc:	cmp	w0, w1
    bf00:	b.ls	c02c <elf_update@@ELFUTILS_1.0+0xee4>  // b.plast
    bf04:	lsl	x20, x4, #1
    bf08:	mov	w9, #0xfffc                	// #65532
    bf0c:	add	x20, x20, x4
    bf10:	mov	x6, #0x1                   	// #1
    bf14:	movk	w9, #0x6fff, lsl #16
    bf18:	add	x20, x4, x20, lsl #2
    bf1c:	add	x20, x5, x20, lsl #4
    bf20:	add	x20, x20, #0x10
    bf24:	ldr	x27, [x20, #144]
    bf28:	cbz	x27, c4f0 <elf_update@@ELFUTILS_1.0+0x13a8>
    bf2c:	ldp	x21, x2, [x27, #48]
    bf30:	cmp	x21, #0x0
    bf34:	csel	x21, x21, x6, ne  // ne = any
    bf38:	sub	x0, x21, #0x1
    bf3c:	tst	x0, x21
    bf40:	b.ne	c0c4 <elf_update@@ELFUTILS_1.0+0xf7c>  // b.any
    bf44:	ldr	w1, [x27, #4]
    bf48:	cmp	w1, #0xb
    bf4c:	b.eq	c318 <elf_update@@ELFUTILS_1.0+0x11d0>  // b.none
    bf50:	b.hi	c108 <elf_update@@ELFUTILS_1.0+0xfc0>  // b.pmore
    bf54:	cmp	w1, #0x5
    bf58:	b.eq	c3d4 <elf_update@@ELFUTILS_1.0+0x128c>  // b.none
    bf5c:	b.ls	c0ec <elf_update@@ELFUTILS_1.0+0xfa4>  // b.plast
    bf60:	cmp	w1, #0x6
    bf64:	b.eq	c3a4 <elf_update@@ELFUTILS_1.0+0x125c>  // b.none
    bf68:	cmp	w1, #0x9
    bf6c:	b.ne	bf90 <elf_update@@ELFUTILS_1.0+0xe48>  // b.any
    bf70:	add	x0, x24, #0xcf8
    bf74:	ldr	x0, [x0, #280]
    bf78:	cmp	x0, x2
    bf7c:	b.eq	bf90 <elf_update@@ELFUTILS_1.0+0xe48>  // b.none
    bf80:	str	x0, [x27, #56]
    bf84:	ldr	w0, [x20, #152]
    bf88:	orr	w0, w0, #0x1
    bf8c:	str	w0, [x20, #152]
    bf90:	ldr	w0, [x20, #120]
    bf94:	cbz	w0, c23c <elf_update@@ELFUTILS_1.0+0x10f4>
    bf98:	ldr	x0, [x20, #64]
    bf9c:	cbnz	x0, c144 <elf_update@@ELFUTILS_1.0+0xffc>
    bfa0:	ldr	w11, [x19, #56]
    bfa4:	ldr	x22, [x20, #88]
    bfa8:	and	w11, w11, #0x4
    bfac:	ldr	x0, [x27, #48]
    bfb0:	cbz	w11, c280 <elf_update@@ELFUTILS_1.0+0x1138>
    bfb4:	ldr	w1, [x27, #4]
    bfb8:	cmp	w1, #0x8
    bfbc:	b.eq	bfd0 <elf_update@@ELFUTILS_1.0+0xe88>  // b.none
    bfc0:	ldp	x1, x2, [x27, #24]
    bfc4:	add	x1, x1, x2
    bfc8:	cmp	x26, x1
    bfcc:	csel	x26, x26, x1, cs  // cs = hs, nlast
    bfd0:	sub	x1, x0, #0x1
    bfd4:	tst	x1, x0
    bfd8:	b.ne	c0c4 <elf_update@@ELFUTILS_1.0+0xf7c>  // b.any
    bfdc:	cmp	x0, #0x0
    bfe0:	csel	x0, x0, x6, ne  // ne = any
    bfe4:	cmp	x21, x0
    bfe8:	b.hi	c0c4 <elf_update@@ELFUTILS_1.0+0xf7c>  // b.pmore
    bfec:	ldr	x0, [x27, #56]
    bff0:	cmp	x0, #0x1
    bff4:	b.ls	c018 <elf_update@@ELFUTILS_1.0+0xed0>  // b.plast
    bff8:	ldr	w1, [x19, #56]
    bffc:	tbnz	w1, #3, c018 <elf_update@@ELFUTILS_1.0+0xed0>
    c000:	ldr	x1, [x27, #8]
    c004:	tbnz	w1, #11, c444 <elf_update@@ELFUTILS_1.0+0x12fc>
    c008:	ldr	x2, [x27, #32]
    c00c:	udiv	x1, x2, x0
    c010:	msub	x0, x1, x0, x2
    c014:	cbnz	x0, c42c <elf_update@@ELFUTILS_1.0+0x12e4>
    c018:	ldr	w0, [x5]
    c01c:	add	x4, x4, #0x1
    c020:	add	x20, x20, #0xd0
    c024:	cmp	x4, w0, uxtw
    c028:	b.cc	bf24 <elf_update@@ELFUTILS_1.0+0xddc>  // b.lo, b.ul, b.last
    c02c:	ldr	x2, [x5, #8]
    c030:	cbz	x2, c4b0 <elf_update@@ELFUTILS_1.0+0x1368>
    c034:	ldr	w3, [x5, #4]
    c038:	mov	w1, #0x0                   	// #0
    c03c:	cmp	w3, w0
    c040:	b.ne	c558 <elf_update@@ELFUTILS_1.0+0x1410>  // b.any
    c044:	mov	x5, x2
    c048:	b	bef4 <elf_update@@ELFUTILS_1.0+0xdac>
    c04c:	ldr	x0, [x25, #32]
    c050:	cbz	x0, be4c <elf_update@@ELFUTILS_1.0+0xd04>
    c054:	ldr	w0, [x19, #116]
    c058:	str	xzr, [x25, #32]
    c05c:	orr	w0, w0, #0x1
    c060:	str	w0, [x19, #116]
    c064:	ldr	x0, [x19, #88]
    c068:	cbnz	x0, be54 <elf_update@@ELFUTILS_1.0+0xd0c>
    c06c:	mov	x0, x19
    c070:	bl	7310 <elf32_getphdr@@ELFUTILS_1.0+0x50>
    c074:	ldr	x0, [x19, #88]
    c078:	cbnz	x0, be54 <elf_update@@ELFUTILS_1.0+0xd0c>
    c07c:	mov	w28, #0x0                   	// #0
    c080:	cbnz	x23, be94 <elf_update@@ELFUTILS_1.0+0xd4c>
    c084:	ldr	w1, [x19, #116]
    c088:	mov	x0, x26
    c08c:	ldp	x23, x24, [sp, #48]
    c090:	orr	w28, w1, w28
    c094:	str	w28, [x19, #116]
    c098:	ldp	x19, x20, [sp, #16]
    c09c:	ldp	x25, x26, [sp, #64]
    c0a0:	ldp	x27, x28, [sp, #80]
    c0a4:	ldp	x29, x30, [sp], #144
    c0a8:	ret
    c0ac:	cmp	x3, x26
    c0b0:	b.eq	c0bc <elf_update@@ELFUTILS_1.0+0xf74>  // b.none
    c0b4:	mov	w28, #0x1                   	// #1
    c0b8:	str	x26, [x25, #32]
    c0bc:	add	x26, x26, x0
    c0c0:	b	be90 <elf_update@@ELFUTILS_1.0+0xd48>
    c0c4:	mov	w0, #0x24                  	// #36
    c0c8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c0cc:	ldp	x21, x22, [sp, #32]
    c0d0:	mov	x0, #0xffffffffffffffff    	// #-1
    c0d4:	ldp	x27, x28, [sp, #80]
    c0d8:	ldp	x19, x20, [sp, #16]
    c0dc:	ldp	x23, x24, [sp, #48]
    c0e0:	ldp	x25, x26, [sp, #64]
    c0e4:	ldp	x29, x30, [sp], #144
    c0e8:	ret
    c0ec:	cmp	w1, #0x2
    c0f0:	b.eq	c318 <elf_update@@ELFUTILS_1.0+0x11d0>  // b.none
    c0f4:	cmp	w1, #0x4
    c0f8:	b.ne	bf90 <elf_update@@ELFUTILS_1.0+0xe48>  // b.any
    c0fc:	add	x0, x24, #0xcf8
    c100:	ldr	x0, [x0, #272]
    c104:	b	bf78 <elf_update@@ELFUTILS_1.0+0xe30>
    c108:	cmp	w1, w7
    c10c:	b.eq	c408 <elf_update@@ELFUTILS_1.0+0x12c0>  // b.none
    c110:	b.ls	c128 <elf_update@@ELFUTILS_1.0+0xfe0>  // b.plast
    c114:	cmp	w1, w9
    c118:	b.ne	bf90 <elf_update@@ELFUTILS_1.0+0xe48>  // b.any
    c11c:	add	x0, x24, #0xcf8
    c120:	ldr	x0, [x0, #376]
    c124:	b	bf78 <elf_update@@ELFUTILS_1.0+0xe30>
    c128:	cmp	w1, #0x11
    c12c:	b.eq	c3b0 <elf_update@@ELFUTILS_1.0+0x1268>  // b.none
    c130:	cmp	w1, #0x12
    c134:	b.ne	bf90 <elf_update@@ELFUTILS_1.0+0xe48>  // b.any
    c138:	add	x0, x24, #0xcf8
    c13c:	ldr	x0, [x0, #96]
    c140:	b	bf78 <elf_update@@ELFUTILS_1.0+0xe30>
    c144:	mov	x3, x20
    c148:	add	x14, x20, #0x48
    c14c:	cmp	x20, x3
    c150:	mov	x2, x3
    c154:	mov	x22, #0x0                   	// #0
    c158:	b.eq	c1b8 <elf_update@@ELFUTILS_1.0+0x1070>  // b.none
    c15c:	nop
    c160:	ldr	w12, [x2, #12]
    c164:	cmp	w12, #0x1
    c168:	b.ne	c1d8 <elf_update@@ELFUTILS_1.0+0x1090>  // b.any
    c16c:	ldr	x1, [x2, #32]
    c170:	sub	x0, x1, #0x1
    c174:	tst	x0, x1
    c178:	b.ne	c0c4 <elf_update@@ELFUTILS_1.0+0xf7c>  // b.any
    c17c:	ldr	w0, [x19, #56]
    c180:	cmp	x21, x1
    c184:	csel	x21, x21, x1, cs  // cs = hs, nlast
    c188:	and	w11, w0, #0x4
    c18c:	ldp	x13, x10, [x2, #16]
    c190:	tbz	w0, #2, c200 <elf_update@@ELFUTILS_1.0+0x10b8>
    c194:	ldr	x0, [x27, #32]
    c198:	add	x10, x10, x13
    c19c:	cmp	x10, x0
    c1a0:	b.hi	c414 <elf_update@@ELFUTILS_1.0+0x12cc>  // b.pmore
    c1a4:	ldr	x3, [x3, #48]
    c1a8:	cbz	x3, bfac <elf_update@@ELFUTILS_1.0+0xe64>
    c1ac:	cmp	x20, x3
    c1b0:	mov	x2, x3
    c1b4:	b.ne	c160 <elf_update@@ELFUTILS_1.0+0x1018>  // b.any
    c1b8:	ldr	x0, [x20]
    c1bc:	cbnz	x0, c160 <elf_update@@ELFUTILS_1.0+0x1018>
    c1c0:	ldr	x0, [x20, #72]
    c1c4:	cmp	x0, #0x0
    c1c8:	csel	x2, x20, x14, eq  // eq = none
    c1cc:	ldr	w12, [x2, #12]
    c1d0:	cmp	w12, #0x1
    c1d4:	b.eq	c16c <elf_update@@ELFUTILS_1.0+0x1024>  // b.none
    c1d8:	ldp	x21, x22, [sp, #32]
    c1dc:	ldp	x27, x28, [sp, #80]
    c1e0:	mov	w0, #0x2                   	// #2
    c1e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c1e8:	mov	x0, #0xffffffffffffffff    	// #-1
    c1ec:	ldp	x19, x20, [sp, #16]
    c1f0:	ldp	x23, x24, [sp, #48]
    c1f4:	ldp	x25, x26, [sp, #64]
    c1f8:	ldp	x29, x30, [sp], #144
    c1fc:	ret
    c200:	sub	x22, x22, #0x1
    c204:	neg	x0, x1
    c208:	add	x22, x22, x1
    c20c:	and	x22, x22, x0
    c210:	cmp	x10, x22
    c214:	b.eq	c220 <elf_update@@ELFUTILS_1.0+0x10d8>  // b.none
    c218:	mov	w8, w12
    c21c:	str	x22, [x2, #24]
    c220:	add	x22, x22, x13
    c224:	b	c1a4 <elf_update@@ELFUTILS_1.0+0x105c>
    c228:	str	w0, [x25]
    c22c:	ldr	w0, [x19, #116]
    c230:	orr	w0, w0, #0x1
    c234:	str	w0, [x19, #116]
    c238:	b	bd94 <elf_update@@ELFUTILS_1.0+0xc4c>
    c23c:	mov	x0, x20
    c240:	str	w8, [sp, #104]
    c244:	stp	x5, x4, [sp, #112]
    c248:	bl	a270 <elf_rawdata@@ELFUTILS_1.0+0x150>
    c24c:	mov	w9, #0xfffc                	// #65532
    c250:	mov	w7, #0xfffa                	// #65530
    c254:	ldr	w8, [sp, #104]
    c258:	mov	x6, #0x1                   	// #1
    c25c:	movk	w9, #0x6fff, lsl #16
    c260:	movk	w7, #0x6fff, lsl #16
    c264:	ldp	x5, x4, [sp, #112]
    c268:	cbz	w0, bf98 <elf_update@@ELFUTILS_1.0+0xe50>
    c26c:	nop
    c270:	mov	x0, #0xffffffffffffffff    	// #-1
    c274:	ldp	x21, x22, [sp, #32]
    c278:	ldp	x27, x28, [sp, #80]
    c27c:	b	c0d8 <elf_update@@ELFUTILS_1.0+0xf90>
    c280:	cmp	x0, x21
    c284:	b.eq	c298 <elf_update@@ELFUTILS_1.0+0x1150>  // b.none
    c288:	str	x21, [x27, #48]
    c28c:	ldr	w0, [x20, #152]
    c290:	orr	w0, w0, #0x1
    c294:	str	w0, [x20, #152]
    c298:	sub	x0, x26, #0x1
    c29c:	neg	x26, x21
    c2a0:	ldr	x1, [x27, #24]
    c2a4:	add	x0, x0, x21
    c2a8:	and	x26, x26, x0
    c2ac:	cmp	x1, x26
    c2b0:	b.eq	c2c8 <elf_update@@ELFUTILS_1.0+0x1180>  // b.none
    c2b4:	str	x26, [x27, #24]
    c2b8:	ldr	x0, [x20, #64]
    c2bc:	cbz	x0, c480 <elf_update@@ELFUTILS_1.0+0x1338>
    c2c0:	mov	w8, #0x1                   	// #1
    c2c4:	mov	w11, w8
    c2c8:	ldr	x0, [x27, #32]
    c2cc:	cmp	x0, x22
    c2d0:	b.eq	c2e0 <elf_update@@ELFUTILS_1.0+0x1198>  // b.none
    c2d4:	mov	w8, #0x1                   	// #1
    c2d8:	mov	w11, w8
    c2dc:	str	x22, [x27, #32]
    c2e0:	ldr	w0, [x27, #4]
    c2e4:	add	x22, x26, x22
    c2e8:	ldr	w1, [x20, #152]
    c2ec:	cmp	w0, #0x8
    c2f0:	ldr	w0, [x20, #156]
    c2f4:	orr	w11, w1, w11
    c2f8:	csel	x26, x22, x26, ne  // ne = any
    c2fc:	orr	w0, w0, w8
    c300:	stp	w11, w0, [x20, #152]
    c304:	b	bfec <elf_update@@ELFUTILS_1.0+0xea4>
    c308:	ldr	x0, [x19, #208]
    c30c:	cbz	x0, bee4 <elf_update@@ELFUTILS_1.0+0xd9c>
    c310:	add	x0, x0, #0x10
    c314:	b	bedc <elf_update@@ELFUTILS_1.0+0xd94>
    c318:	add	x0, x24, #0xcf8
    c31c:	ldr	x0, [x0, #304]
    c320:	b	bf78 <elf_update@@ELFUTILS_1.0+0xe30>
    c324:	mov	w0, #0x1                   	// #1
    c328:	strb	w0, [x25, #5]
    c32c:	ldr	w0, [x19, #116]
    c330:	orr	w0, w0, #0x1
    c334:	str	w0, [x19, #116]
    c338:	b	bdd0 <elf_update@@ELFUTILS_1.0+0xc88>
    c33c:	stp	x27, x28, [sp, #80]
    c340:	mov	w0, #0x1                   	// #1
    c344:	str	w0, [x25, #20]
    c348:	ldr	w0, [x19, #116]
    c34c:	orr	w0, w0, #0x1
    c350:	str	w0, [x19, #116]
    c354:	b	be04 <elf_update@@ELFUTILS_1.0+0xcbc>
    c358:	mov	w0, #0x22                  	// #34
    c35c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c360:	mov	x0, #0xffffffffffffffff    	// #-1
    c364:	b	c0d8 <elf_update@@ELFUTILS_1.0+0xf90>
    c368:	ldr	w0, [x19, #116]
    c36c:	strh	w26, [x25, #52]
    c370:	orr	w0, w0, #0x1
    c374:	str	w0, [x19, #116]
    c378:	b	be44 <elf_update@@ELFUTILS_1.0+0xcfc>
    c37c:	cbz	w1, be2c <elf_update@@ELFUTILS_1.0+0xce4>
    c380:	ldr	w0, [x19, #116]
    c384:	strh	wzr, [x25, #60]
    c388:	orr	w0, w0, #0x1
    c38c:	str	w0, [x19, #116]
    c390:	b	be2c <elf_update@@ELFUTILS_1.0+0xce4>
    c394:	str	x5, [sp, #104]
    c398:	bl	9bc0 <elf32_getshdr@@ELFUTILS_1.0+0x578>
    c39c:	ldr	x5, [sp, #104]
    c3a0:	b	bee4 <elf_update@@ELFUTILS_1.0+0xd9c>
    c3a4:	add	x0, x24, #0xcf8
    c3a8:	ldr	x0, [x0, #232]
    c3ac:	b	bf78 <elf_update@@ELFUTILS_1.0+0xe30>
    c3b0:	ldrh	w0, [x25, #16]
    c3b4:	cmp	w0, #0x1
    c3b8:	b.eq	c138 <elf_update@@ELFUTILS_1.0+0xff0>  // b.none
    c3bc:	mov	w0, #0x28                  	// #40
    c3c0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c3c4:	mov	x0, #0xffffffffffffffff    	// #-1
    c3c8:	ldp	x21, x22, [sp, #32]
    c3cc:	ldp	x27, x28, [sp, #80]
    c3d0:	b	c0d8 <elf_update@@ELFUTILS_1.0+0xf90>
    c3d4:	ldrh	w1, [x25, #18]
    c3d8:	mov	w3, #0x9026                	// #36902
    c3dc:	mov	x0, #0x8                   	// #8
    c3e0:	cmp	w1, w3
    c3e4:	b.eq	bf78 <elf_update@@ELFUTILS_1.0+0xe30>  // b.none
    c3e8:	cmp	w1, #0x16
    c3ec:	mov	x0, #0x4                   	// #4
    c3f0:	b.ne	bf78 <elf_update@@ELFUTILS_1.0+0xe30>  // b.any
    c3f4:	ldrb	w3, [x25, #4]
    c3f8:	mov	x1, #0x8                   	// #8
    c3fc:	cmp	w3, #0x2
    c400:	csel	x0, x0, x1, ne  // ne = any
    c404:	b	bf78 <elf_update@@ELFUTILS_1.0+0xe30>
    c408:	add	x0, x24, #0xcf8
    c40c:	ldr	x0, [x0, #384]
    c410:	b	bf78 <elf_update@@ELFUTILS_1.0+0xe30>
    c414:	mov	w0, #0x23                  	// #35
    c418:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c41c:	b	c270 <elf_update@@ELFUTILS_1.0+0x1128>
    c420:	mov	x0, #0xffffffffffffffff    	// #-1
    c424:	ldp	x27, x28, [sp, #80]
    c428:	b	c0d8 <elf_update@@ELFUTILS_1.0+0xf90>
    c42c:	mov	w0, #0x25                  	// #37
    c430:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c434:	mov	x0, #0xffffffffffffffff    	// #-1
    c438:	ldp	x21, x22, [sp, #32]
    c43c:	ldp	x27, x28, [sp, #80]
    c440:	b	c0d8 <elf_update@@ELFUTILS_1.0+0xf90>
    c444:	mov	x0, x20
    c448:	str	w8, [sp, #104]
    c44c:	stp	x5, x4, [sp, #112]
    c450:	bl	3190 <elf64_getchdr@plt>
    c454:	cbz	x0, c270 <elf_update@@ELFUTILS_1.0+0x1128>
    c458:	mov	w7, #0xfffa                	// #65530
    c45c:	mov	w9, #0xfffc                	// #65532
    c460:	ldr	w8, [sp, #104]
    c464:	movk	w7, #0x6fff, lsl #16
    c468:	movk	w9, #0x6fff, lsl #16
    c46c:	mov	x6, #0x1                   	// #1
    c470:	ldr	x2, [x0, #8]
    c474:	ldr	x0, [x27, #56]
    c478:	ldp	x5, x4, [sp, #112]
    c47c:	b	c00c <elf_update@@ELFUTILS_1.0+0xec4>
    c480:	mov	x0, x20
    c484:	mov	x1, #0x0                   	// #0
    c488:	stp	x5, x4, [sp, #104]
    c48c:	bl	a858 <elf_rawdata@@ELFUTILS_1.0+0x738>
    c490:	mov	w9, #0xfffc                	// #65532
    c494:	mov	w7, #0xfffa                	// #65530
    c498:	mov	x6, #0x1                   	// #1
    c49c:	movk	w9, #0x6fff, lsl #16
    c4a0:	movk	w7, #0x6fff, lsl #16
    c4a4:	ldp	x5, x4, [sp, #104]
    c4a8:	cbnz	x0, c2c0 <elf_update@@ELFUTILS_1.0+0x1178>
    c4ac:	b	c270 <elf_update@@ELFUTILS_1.0+0x1128>
    c4b0:	add	x24, x24, #0xcf8
    c4b4:	ldrh	w1, [x25, #58]
    c4b8:	ldr	x0, [x24, #288]
    c4bc:	cmp	x1, x0
    c4c0:	b.eq	c4cc <elf_update@@ELFUTILS_1.0+0x1384>  // b.none
    c4c4:	mov	w28, #0x1                   	// #1
    c4c8:	strh	w0, [x25, #58]
    c4cc:	ldr	w2, [x19, #56]
    c4d0:	mul	x23, x23, x0
    c4d4:	ldr	x1, [x25, #40]
    c4d8:	tbz	w2, #2, c530 <elf_update@@ELFUTILS_1.0+0x13e8>
    c4dc:	add	x23, x1, x23
    c4e0:	cmp	x26, x23
    c4e4:	csel	x26, x26, x23, cs  // cs = hs, nlast
    c4e8:	ldp	x21, x22, [sp, #32]
    c4ec:	b	c084 <elf_update@@ELFUTILS_1.0+0xf3c>
    c4f0:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c4f4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c4f8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c4fc:	add	x3, x3, #0x310
    c500:	add	x1, x1, #0x268
    c504:	add	x0, x0, #0x2b0
    c508:	mov	w2, #0xd6                  	// #214
    c50c:	bl	3330 <__assert_fail@plt>
    c510:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c514:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c518:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c51c:	add	x3, x3, #0x310
    c520:	add	x1, x1, #0x268
    c524:	add	x0, x0, #0x280
    c528:	mov	w2, #0xb4                  	// #180
    c52c:	bl	3330 <__assert_fail@plt>
    c530:	add	x0, x26, #0x7
    c534:	and	x0, x0, #0xfffffffffffffff8
    c538:	cmp	x1, x0
    c53c:	b.eq	c54c <elf_update@@ELFUTILS_1.0+0x1404>  // b.none
    c540:	str	x0, [x25, #40]
    c544:	orr	w2, w2, #0x1
    c548:	str	w2, [x19, #56]
    c54c:	add	x26, x23, x0
    c550:	ldp	x21, x22, [sp, #32]
    c554:	b	c084 <elf_update@@ELFUTILS_1.0+0xf3c>
    c558:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c55c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c560:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    c564:	add	x3, x3, #0x310
    c568:	add	x1, x1, #0x268
    c56c:	add	x0, x0, #0x2c0
    c570:	mov	w2, #0x19b                 	// #411
    c574:	bl	3330 <__assert_fail@plt>
    c578:	ldr	x4, [x0]
    c57c:	ldr	x3, [x1]
    c580:	ldr	x2, [x4, #144]
    c584:	ldr	x1, [x3, #144]
    c588:	ldr	w5, [x2, #16]
    c58c:	ldr	w0, [x1, #16]
    c590:	cmp	w5, w0
    c594:	b.cc	c5d8 <elf_update@@ELFUTILS_1.0+0x1490>  // b.lo, b.ul, b.last
    c598:	mov	w0, #0x1                   	// #1
    c59c:	b.hi	c5d4 <elf_update@@ELFUTILS_1.0+0x148c>  // b.pmore
    c5a0:	ldr	w1, [x1, #20]
    c5a4:	mov	w0, #0xffffffff            	// #-1
    c5a8:	ldr	w2, [x2, #20]
    c5ac:	cmp	w2, w1
    c5b0:	b.cc	c5d4 <elf_update@@ELFUTILS_1.0+0x148c>  // b.lo, b.ul, b.last
    c5b4:	mov	w0, #0x1                   	// #1
    c5b8:	b.hi	c5d4 <elf_update@@ELFUTILS_1.0+0x148c>  // b.pmore
    c5bc:	ldr	x2, [x4, #128]
    c5c0:	mov	w4, #0xffffffff            	// #-1
    c5c4:	ldr	x1, [x3, #128]
    c5c8:	cmp	x2, x1
    c5cc:	cset	w0, hi  // hi = pmore
    c5d0:	csel	w0, w0, w4, cs  // cs = hs, nlast
    c5d4:	ret
    c5d8:	mov	w0, #0xffffffff            	// #-1
    c5dc:	ret
    c5e0:	mov	x2, x0
    c5e4:	nop
    c5e8:	ldr	w4, [x1]
    c5ec:	cbz	x4, c608 <elf_update@@ELFUTILS_1.0+0x14c0>
    c5f0:	add	x4, x2, x4, lsl #3
    c5f4:	add	x3, x1, #0x10
    c5f8:	str	x3, [x2], #8
    c5fc:	add	x3, x3, #0xd0
    c600:	cmp	x4, x2
    c604:	b.ne	c5f8 <elf_update@@ELFUTILS_1.0+0x14b0>  // b.any
    c608:	ldr	x1, [x1, #8]
    c60c:	cbnz	x1, c5e8 <elf_update@@ELFUTILS_1.0+0x14a0>
    c610:	sub	x1, x2, x0
    c614:	adrp	x3, c000 <elf_update@@ELFUTILS_1.0+0xeb8>
    c618:	mov	x2, #0x8                   	// #8
    c61c:	add	x3, x3, #0x578
    c620:	asr	x1, x1, #3
    c624:	b	30b0 <qsort@plt>
    c628:	stp	x29, x30, [sp, #-112]!
    c62c:	cmp	x2, #0x1, lsl #12
    c630:	mov	x29, sp
    c634:	stp	x25, x26, [sp, #64]
    c638:	mov	x25, x3
    c63c:	ldr	x26, [x4]
    c640:	stp	x19, x20, [sp, #16]
    c644:	mov	x19, #0x1000                	// #4096
    c648:	stp	x21, x22, [sp, #32]
    c64c:	csel	x19, x2, x19, ls  // ls = plast
    c650:	mov	x22, x1
    c654:	stp	x23, x24, [sp, #48]
    c658:	cmp	x26, x19
    c65c:	stp	x27, x28, [sp, #80]
    c660:	mov	x27, x2
    c664:	str	w0, [sp, #100]
    c668:	b.cc	c768 <elf_update@@ELFUTILS_1.0+0x1620>  // b.lo, b.ul, b.last
    c66c:	nop
    c670:	cmp	x27, x26
    c674:	mov	x28, x22
    c678:	csel	x21, x27, x26, ls  // ls = plast
    c67c:	mov	x24, x25
    c680:	mov	x23, x21
    c684:	mov	x20, #0x0                   	// #0
    c688:	ldr	w0, [sp, #100]
    c68c:	mov	x3, x28
    c690:	mov	x2, x23
    c694:	mov	x1, x24
    c698:	bl	3220 <pwrite@plt>
    c69c:	mov	x19, x0
    c6a0:	cmn	x0, #0x1
    c6a4:	b.eq	c6e8 <elf_update@@ELFUTILS_1.0+0x15a0>  // b.none
    c6a8:	cmp	x0, #0x0
    c6ac:	b.le	c760 <elf_update@@ELFUTILS_1.0+0x1618>
    c6b0:	add	x20, x20, x0
    c6b4:	cmp	x21, x20
    c6b8:	b.ls	c72c <elf_update@@ELFUTILS_1.0+0x15e4>  // b.plast
    c6bc:	ldr	w0, [sp, #100]
    c6c0:	add	x28, x22, x20
    c6c4:	sub	x23, x21, x20
    c6c8:	add	x24, x25, x20
    c6cc:	mov	x3, x28
    c6d0:	mov	x2, x23
    c6d4:	mov	x1, x24
    c6d8:	bl	3220 <pwrite@plt>
    c6dc:	mov	x19, x0
    c6e0:	cmn	x0, #0x1
    c6e4:	b.ne	c6a8 <elf_update@@ELFUTILS_1.0+0x1560>  // b.any
    c6e8:	bl	3340 <__errno_location@plt>
    c6ec:	ldr	w0, [x0]
    c6f0:	cmp	w0, #0x4
    c6f4:	b.eq	c688 <elf_update@@ELFUTILS_1.0+0x1540>  // b.none
    c6f8:	cmp	x21, x19
    c6fc:	b.ne	c738 <elf_update@@ELFUTILS_1.0+0x15f0>  // b.any
    c700:	add	x22, x22, x21
    c704:	subs	x27, x27, x21
    c708:	b.ne	c670 <elf_update@@ELFUTILS_1.0+0x1528>  // b.any
    c70c:	mov	w0, #0x0                   	// #0
    c710:	ldp	x19, x20, [sp, #16]
    c714:	ldp	x21, x22, [sp, #32]
    c718:	ldp	x23, x24, [sp, #48]
    c71c:	ldp	x25, x26, [sp, #64]
    c720:	ldp	x27, x28, [sp, #80]
    c724:	ldp	x29, x30, [sp], #112
    c728:	ret
    c72c:	mov	x19, x20
    c730:	cmp	x21, x19
    c734:	b.eq	c700 <elf_update@@ELFUTILS_1.0+0x15b8>  // b.none
    c738:	mov	w0, #0x14                  	// #20
    c73c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c740:	mov	w0, #0x1                   	// #1
    c744:	ldp	x19, x20, [sp, #16]
    c748:	ldp	x21, x22, [sp, #32]
    c74c:	ldp	x23, x24, [sp, #48]
    c750:	ldp	x25, x26, [sp, #64]
    c754:	ldp	x27, x28, [sp, #80]
    c758:	ldp	x29, x30, [sp], #112
    c75c:	ret
    c760:	csel	x19, x0, x20, ne  // ne = any
    c764:	b	c6f8 <elf_update@@ELFUTILS_1.0+0x15b0>
    c768:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    c76c:	sub	x2, x19, x26
    c770:	add	x0, x3, x26
    c774:	str	x4, [sp, #104]
    c778:	ldr	w1, [x1, #440]
    c77c:	mov	x26, x19
    c780:	bl	3100 <memset@plt>
    c784:	ldr	x4, [sp, #104]
    c788:	str	x19, [x4]
    c78c:	b	c670 <elf_update@@ELFUTILS_1.0+0x1528>
    c790:	stp	x29, x30, [sp, #-208]!
    c794:	mov	x29, sp
    c798:	stp	x25, x26, [sp, #64]
    c79c:	mov	x26, x0
    c7a0:	ldr	w0, [x0, #56]
    c7a4:	str	x2, [sp, #128]
    c7a8:	ldr	x2, [x26, #72]
    c7ac:	stp	x19, x20, [sp, #16]
    c7b0:	stp	x21, x22, [sp, #32]
    c7b4:	mov	w21, w1
    c7b8:	ldr	w1, [x26, #116]
    c7bc:	str	x2, [sp, #120]
    c7c0:	orr	w0, w1, w0
    c7c4:	tbz	w0, #0, ccd4 <elf_update@@ELFUTILS_1.0+0x1b8c>
    c7c8:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    c7cc:	ldr	x2, [x0, #3344]
    c7d0:	cmp	x2, #0x34
    c7d4:	b.ne	d098 <elf_update@@ELFUTILS_1.0+0x1f50>  // b.any
    c7d8:	ldr	x0, [x26]
    c7dc:	ldr	x3, [x26, #40]
    c7e0:	add	x0, x0, x3
    c7e4:	cbnz	w21, cec4 <elf_update@@ELFUTILS_1.0+0x1d7c>
    c7e8:	ldr	x2, [sp, #120]
    c7ec:	cmp	x2, x0
    c7f0:	b.eq	c81c <elf_update@@ELFUTILS_1.0+0x16d4>  // b.none
    c7f4:	mov	x1, x2
    c7f8:	ldp	x2, x3, [x2]
    c7fc:	stp	x2, x3, [x0]
    c800:	ldp	x2, x3, [x1, #16]
    c804:	stp	x2, x3, [x0, #16]
    c808:	ldp	x2, x3, [x1, #32]
    c80c:	stp	x2, x3, [x0, #32]
    c810:	ldr	w1, [x1, #48]
    c814:	str	w1, [x0, #48]
    c818:	ldr	w1, [x26, #116]
    c81c:	ldr	x0, [x26, #88]
    c820:	and	w1, w1, #0xfffffffe
    c824:	str	w1, [x26, #116]
    c828:	cmp	x0, #0x0
    c82c:	cset	w20, eq  // eq = none
    c830:	add	x1, sp, #0xc0
    c834:	mov	x0, x26
    c838:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    c83c:	str	w0, [sp, #140]
    c840:	cbnz	w0, ce88 <elf_update@@ELFUTILS_1.0+0x1d40>
    c844:	adrp	x19, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    c848:	add	x0, x19, #0xcf8
    c84c:	ldr	x1, [x26, #88]
    c850:	ldr	x3, [x0, #48]
    c854:	str	x3, [sp, #160]
    c858:	cbz	x1, c8b8 <elf_update@@ELFUTILS_1.0+0x1770>
    c85c:	ldr	w2, [x26, #56]
    c860:	ldr	w0, [x26, #120]
    c864:	orr	w0, w0, w2
    c868:	tbz	w0, #0, c8b8 <elf_update@@ELFUTILS_1.0+0x1770>
    c86c:	cmp	x3, #0x20
    c870:	b.ne	d0c0 <elf_update@@ELFUTILS_1.0+0x1f78>  // b.any
    c874:	ldr	x0, [sp, #120]
    c878:	ldr	x3, [x26, #40]
    c87c:	ldrh	w4, [x0, #40]
    c880:	ldr	w2, [x0, #28]
    c884:	ldr	x0, [x26]
    c888:	cmp	w2, w4
    c88c:	b.hi	ce94 <elf_update@@ELFUTILS_1.0+0x1d4c>  // b.pmore
    c890:	add	x2, x3, w2, uxtw
    c894:	ldr	x3, [sp, #192]
    c898:	add	x0, x0, x2
    c89c:	lsl	x2, x3, #5
    c8a0:	cbnz	w21, cf68 <elf_update@@ELFUTILS_1.0+0x1e20>
    c8a4:	bl	3030 <memmove@plt>
    c8a8:	ldr	w0, [x26, #120]
    c8ac:	mov	w20, #0x1                   	// #1
    c8b0:	and	w0, w0, #0xfffffffe
    c8b4:	str	w0, [x26, #120]
    c8b8:	ldr	x0, [x26]
    c8bc:	str	x0, [sp, #144]
    c8c0:	ldr	x1, [sp, #128]
    c8c4:	ldr	x0, [x26, #40]
    c8c8:	str	x0, [sp, #104]
    c8cc:	cbz	x1, cc30 <elf_update@@ELFUTILS_1.0+0x1ae8>
    c8d0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    c8d4:	cmp	x1, x0
    c8d8:	b.hi	cee0 <elf_update@@ELFUTILS_1.0+0x1d98>  // b.pmore
    c8dc:	stp	x23, x24, [sp, #48]
    c8e0:	lsl	x24, x1, #3
    c8e4:	add	x19, x19, #0xcf8
    c8e8:	ldr	x1, [sp, #120]
    c8ec:	mov	x0, x24
    c8f0:	stp	x27, x28, [sp, #80]
    c8f4:	add	x28, x26, #0xc8
    c8f8:	ldr	w1, [x1, #28]
    c8fc:	str	w1, [sp, #168]
    c900:	ldr	x1, [sp, #192]
    c904:	str	x1, [sp, #184]
    c908:	ldr	x1, [x19, #24]
    c90c:	str	x1, [sp, #176]
    c910:	bl	30c0 <malloc@plt>
    c914:	str	x0, [sp, #152]
    c918:	cbz	x0, cca4 <elf_update@@ELFUTILS_1.0+0x1b5c>
    c91c:	ldr	x3, [sp, #120]
    c920:	mov	x1, x28
    c924:	ldr	x23, [sp, #152]
    c928:	str	x23, [sp, #112]
    c92c:	ldr	w2, [x3, #32]
    c930:	add	x4, x24, x23
    c934:	ldrh	w3, [x3, #46]
    c938:	str	x4, [sp, #96]
    c93c:	ldr	x4, [sp, #104]
    c940:	mov	w28, w3
    c944:	ldr	x3, [sp, #144]
    c948:	add	x2, x2, x4
    c94c:	add	x19, x3, x2
    c950:	bl	c5e0 <elf_update@@ELFUTILS_1.0+0x1498>
    c954:	ldr	x22, [x26, #40]
    c958:	b	c96c <elf_update@@ELFUTILS_1.0+0x1824>
    c95c:	ldr	x0, [sp, #96]
    c960:	add	x23, x23, #0x8
    c964:	cmp	x0, x23
    c968:	b.eq	ca5c <elf_update@@ELFUTILS_1.0+0x1914>  // b.none
    c96c:	ldr	w0, [x26, #124]
    c970:	ldr	x24, [x23]
    c974:	cbnz	w0, c9e8 <elf_update@@ELFUTILS_1.0+0x18a0>
    c978:	ldr	w0, [x24, #152]
    c97c:	tbnz	w0, #7, c9e8 <elf_update@@ELFUTILS_1.0+0x18a0>
    c980:	ldr	x0, [x24, #128]
    c984:	ldr	x25, [x24, #144]
    c988:	add	x0, x0, x0, lsl #2
    c98c:	add	x0, x19, x0, lsl #3
    c990:	cmp	x25, x0
    c994:	b.eq	c9e8 <elf_update@@ELFUTILS_1.0+0x18a0>  // b.none
    c998:	ldr	x0, [x26]
    c99c:	add	x2, x0, x22
    c9a0:	cmp	x25, x2
    c9a4:	b.ls	d108 <elf_update@@ELFUTILS_1.0+0x1fc0>  // b.plast
    c9a8:	ldr	x2, [x26, #48]
    c9ac:	add	x2, x22, x2
    c9b0:	add	x0, x0, x2
    c9b4:	cmp	x25, x0
    c9b8:	b.cs	d128 <elf_update@@ELFUTILS_1.0+0x1fe0>  // b.hs, b.nlast
    c9bc:	mov	x0, #0x28                  	// #40
    c9c0:	bl	30c0 <malloc@plt>
    c9c4:	cbz	x0, cc9c <elf_update@@ELFUTILS_1.0+0x1b54>
    c9c8:	ldp	x8, x9, [x25]
    c9cc:	stp	x8, x9, [x0]
    c9d0:	ldp	x8, x9, [x25, #16]
    c9d4:	stp	x8, x9, [x0, #16]
    c9d8:	ldr	x1, [x25, #32]
    c9dc:	str	x1, [x0, #32]
    c9e0:	str	x0, [x24, #144]
    c9e4:	nop
    c9e8:	ldr	x0, [x26]
    c9ec:	ldr	x25, [x24]
    c9f0:	add	x2, x0, x22
    c9f4:	cmp	x25, x2
    c9f8:	b.cc	c95c <elf_update@@ELFUTILS_1.0+0x1814>  // b.lo, b.ul, b.last
    c9fc:	ldr	x2, [x26, #48]
    ca00:	add	x2, x22, x2
    ca04:	add	x2, x0, x2
    ca08:	cmp	x25, x2
    ca0c:	b.cs	c95c <elf_update@@ELFUTILS_1.0+0x1814>  // b.hs, b.nlast
    ca10:	ldr	x2, [x24, #144]
    ca14:	ldr	w2, [x2, #16]
    ca18:	add	x2, x2, x22
    ca1c:	add	x0, x0, x2
    ca20:	cmp	x25, x0
    ca24:	b.cs	c95c <elf_update@@ELFUTILS_1.0+0x1814>  // b.hs, b.nlast
    ca28:	ldr	x27, [x24, #16]
    ca2c:	mov	x0, x27
    ca30:	bl	30c0 <malloc@plt>
    ca34:	cbz	x0, cc9c <elf_update@@ELFUTILS_1.0+0x1b54>
    ca38:	mov	x2, x27
    ca3c:	mov	x1, x25
    ca40:	bl	3020 <memcpy@plt>
    ca44:	str	x0, [x24]
    ca48:	str	x0, [x24, #168]
    ca4c:	add	x23, x23, #0x8
    ca50:	ldr	x0, [sp, #96]
    ca54:	cmp	x0, x23
    ca58:	b.ne	c96c <elf_update@@ELFUTILS_1.0+0x1824>  // b.any
    ca5c:	ldp	x2, x3, [sp, #176]
    ca60:	and	x1, x28, #0xffff
    ca64:	ldr	x5, [sp, #104]
    ca68:	ldr	x4, [sp, #160]
    ca6c:	ldr	w0, [sp, #168]
    ca70:	madd	x22, x3, x4, x5
    ca74:	cmp	x0, x2
    ca78:	ldr	x3, [sp, #128]
    ca7c:	csel	x0, x0, x2, cs  // cs = hs, nlast
    ca80:	add	x0, x22, x0
    ca84:	adrp	x2, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    ca88:	ldr	x22, [sp, #152]
    ca8c:	madd	x1, x1, x3, x19
    ca90:	str	x1, [sp, #104]
    ca94:	ldr	x1, [sp, #144]
    ca98:	add	x0, x1, x0
    ca9c:	add	x1, x2, #0x1f0
    caa0:	str	x1, [sp, #160]
    caa4:	add	x1, sp, #0xc8
    caa8:	str	x1, [sp, #168]
    caac:	b	cac8 <elf_update@@ELFUTILS_1.0+0x1980>
    cab0:	ldr	w1, [x27, #156]
    cab4:	tbnz	w1, #0, d0e8 <elf_update@@ELFUTILS_1.0+0x1fa0>
    cab8:	ldr	x1, [sp, #96]
    cabc:	add	x22, x22, #0x8
    cac0:	cmp	x1, x22
    cac4:	b.eq	cb34 <elf_update@@ELFUTILS_1.0+0x19ec>  // b.none
    cac8:	ldr	x27, [x22]
    cacc:	ldr	x1, [x27, #128]
    cad0:	cbz	x1, cab0 <elf_update@@ELFUTILS_1.0+0x1968>
    cad4:	ldr	x25, [x27, #144]
    cad8:	ldr	w1, [x25, #4]
    cadc:	cmp	w1, #0x8
    cae0:	b.eq	cb18 <elf_update@@ELFUTILS_1.0+0x19d0>  // b.none
    cae4:	ldr	x3, [x26, #40]
    cae8:	ldr	x2, [x27, #64]
    caec:	ldr	w1, [x25, #16]
    caf0:	ldr	x5, [x26]
    caf4:	add	x1, x1, x3
    caf8:	add	x28, x5, x1
    cafc:	cbnz	x2, ccdc <elf_update@@ELFUTILS_1.0+0x1b94>
    cb00:	cmp	w20, #0x0
    cb04:	ccmp	x0, x28, #0x2, ne  // ne = any
    cb08:	b.cc	ce2c <elf_update@@ELFUTILS_1.0+0x1ce4>  // b.lo, b.ul, b.last
    cb0c:	ldr	w0, [x25, #20]
    cb10:	mov	w20, #0x0                   	// #0
    cb14:	add	x0, x28, x0
    cb18:	ldr	w1, [x27, #156]
    cb1c:	add	x22, x22, #0x8
    cb20:	and	w1, w1, #0xfffffffe
    cb24:	str	w1, [x27, #156]
    cb28:	ldr	x1, [sp, #96]
    cb2c:	cmp	x1, x22
    cb30:	b.ne	cac8 <elf_update@@ELFUTILS_1.0+0x1980>  // b.any
    cb34:	ldr	w1, [x26, #56]
    cb38:	tbz	w1, #0, cb5c <elf_update@@ELFUTILS_1.0+0x1a14>
    cb3c:	ldr	x2, [sp, #120]
    cb40:	ldr	x4, [x26, #40]
    cb44:	ldr	w3, [x2, #32]
    cb48:	ldr	x2, [x26]
    cb4c:	add	x3, x3, x4
    cb50:	add	x2, x2, x3
    cb54:	cmp	x2, x0
    cb58:	b.hi	cf50 <elf_update@@ELFUTILS_1.0+0x1e08>  // b.pmore
    cb5c:	adrp	x22, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    cb60:	add	x22, x22, #0xbd8
    cb64:	b	cb6c <elf_update@@ELFUTILS_1.0+0x1a24>
    cb68:	ldr	w1, [x26, #56]
    cb6c:	ldr	x0, [sp, #112]
    cb70:	ldr	x20, [x0]
    cb74:	ldr	w0, [x20, #152]
    cb78:	orr	w1, w1, w0
    cb7c:	tbz	w1, #0, cbf8 <elf_update@@ELFUTILS_1.0+0x1ab0>
    cb80:	ldr	x0, [x20, #128]
    cb84:	ldr	x1, [x20, #144]
    cb88:	add	x0, x0, x0, lsl #2
    cb8c:	add	x0, x19, x0, lsl #3
    cb90:	cbnz	w21, ceec <elf_update@@ELFUTILS_1.0+0x1da4>
    cb94:	ldp	x2, x3, [x1]
    cb98:	stp	x2, x3, [x0]
    cb9c:	ldp	x2, x3, [x1, #16]
    cba0:	stp	x2, x3, [x0, #16]
    cba4:	ldr	x1, [x1, #32]
    cba8:	str	x1, [x0, #32]
    cbac:	ldr	w1, [x20, #152]
    cbb0:	ldr	w2, [x26, #124]
    cbb4:	and	w0, w1, #0x80
    cbb8:	orr	w0, w0, w2
    cbbc:	cbnz	w0, cbf0 <elf_update@@ELFUTILS_1.0+0x1aa8>
    cbc0:	ldr	x2, [x20, #128]
    cbc4:	ldr	x0, [x20, #144]
    cbc8:	add	x2, x2, x2, lsl #2
    cbcc:	add	x2, x19, x2, lsl #3
    cbd0:	cmp	x0, x2
    cbd4:	b.eq	cbf0 <elf_update@@ELFUTILS_1.0+0x1aa8>  // b.none
    cbd8:	bl	3200 <free@plt>
    cbdc:	ldr	x0, [x20, #128]
    cbe0:	ldr	w1, [x20, #152]
    cbe4:	add	x0, x0, x0, lsl #2
    cbe8:	add	x0, x19, x0, lsl #3
    cbec:	str	x0, [x20, #144]
    cbf0:	and	w1, w1, #0xfffffffe
    cbf4:	str	w1, [x20, #152]
    cbf8:	ldr	x0, [sp, #112]
    cbfc:	ldr	x1, [sp, #96]
    cc00:	add	x0, x0, #0x8
    cc04:	str	x0, [sp, #112]
    cc08:	cmp	x1, x0
    cc0c:	b.ne	cb68 <elf_update@@ELFUTILS_1.0+0x1a20>  // b.any
    cc10:	ldr	x0, [sp, #152]
    cc14:	bl	3200 <free@plt>
    cc18:	ldp	x23, x24, [sp, #48]
    cc1c:	ldp	x27, x28, [sp, #80]
    cc20:	ldr	x0, [x26]
    cc24:	str	x0, [sp, #144]
    cc28:	ldr	x0, [x26, #40]
    cc2c:	str	x0, [sp, #104]
    cc30:	ldr	w1, [x26, #56]
    cc34:	mov	w0, #0x1e                  	// #30
    cc38:	and	w1, w1, #0xfffffffe
    cc3c:	str	w1, [x26, #56]
    cc40:	bl	32d0 <sysconf@plt>
    cc44:	neg	x0, x0
    cc48:	ldp	x2, x5, [sp, #120]
    cc4c:	ldr	x3, [sp, #104]
    cc50:	ldr	x1, [x26, #40]
    cc54:	and	x0, x0, x3
    cc58:	ldr	w4, [x2, #32]
    cc5c:	ldrh	w3, [x2, #46]
    cc60:	add	x4, x4, x1
    cc64:	ldr	x1, [x26]
    cc68:	ldr	x2, [sp, #144]
    cc6c:	madd	x26, x3, x5, x4
    cc70:	add	x0, x2, x0
    cc74:	add	x1, x1, x26
    cc78:	sub	x1, x1, x0
    cc7c:	mov	w2, #0x4                   	// #4
    cc80:	bl	3040 <msync@plt>
    cc84:	ldr	w0, [sp, #140]
    cc88:	ldp	x19, x20, [sp, #16]
    cc8c:	ldp	x21, x22, [sp, #32]
    cc90:	ldp	x25, x26, [sp, #64]
    cc94:	ldp	x29, x30, [sp], #208
    cc98:	ret
    cc9c:	ldr	x0, [sp, #152]
    cca0:	bl	3200 <free@plt>
    cca4:	mov	w1, #0xffffffff            	// #-1
    cca8:	mov	w0, #0x8                   	// #8
    ccac:	str	w1, [sp, #140]
    ccb0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ccb4:	ldp	x23, x24, [sp, #48]
    ccb8:	ldp	x27, x28, [sp, #80]
    ccbc:	ldr	w0, [sp, #140]
    ccc0:	ldp	x19, x20, [sp, #16]
    ccc4:	ldp	x21, x22, [sp, #32]
    ccc8:	ldp	x25, x26, [sp, #64]
    cccc:	ldp	x29, x30, [sp], #208
    ccd0:	ret
    ccd4:	mov	w20, #0x0                   	// #0
    ccd8:	b	c830 <elf_update@@ELFUTILS_1.0+0x16e8>
    ccdc:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    cce0:	mov	x24, x27
    cce4:	add	x1, x1, #0xbd8
    cce8:	mov	w20, #0x0                   	// #0
    ccec:	str	x1, [sp, #144]
    ccf0:	b	cd14 <elf_update@@ELFUTILS_1.0+0x1bcc>
    ccf4:	mov	x0, x23
    ccf8:	mov	w20, #0x1                   	// #1
    ccfc:	cbnz	w21, ce00 <elf_update@@ELFUTILS_1.0+0x1cb8>
    cd00:	cbnz	x2, ce10 <elf_update@@ELFUTILS_1.0+0x1cc8>
    cd04:	and	w1, w1, #0xfffffffe
    cd08:	str	w1, [x24, #56]
    cd0c:	ldr	x24, [x24, #48]
    cd10:	cbz	x24, cb18 <elf_update@@ELFUTILS_1.0+0x19d0>
    cd14:	ldr	x1, [x24, #24]
    cd18:	tbnz	x1, #63, cfbc <elf_update@@ELFUTILS_1.0+0x1e74>
    cd1c:	ldr	w3, [x25, #20]
    cd20:	mov	x10, x1
    cd24:	cmp	x1, x3
    cd28:	b.hi	cfdc <elf_update@@ELFUTILS_1.0+0x1e94>  // b.pmore
    cd2c:	ldr	x2, [x24, #16]
    cd30:	sub	x1, x3, x1
    cd34:	cmp	x2, x1
    cd38:	b.hi	cf7c <elf_update@@ELFUTILS_1.0+0x1e34>  // b.pmore
    cd3c:	add	x23, x28, x10
    cd40:	cmp	x23, x0
    cd44:	b.ls	cd8c <elf_update@@ELFUTILS_1.0+0x1c44>  // b.plast
    cd48:	cbz	x10, cd64 <elf_update@@ELFUTILS_1.0+0x1c1c>
    cd4c:	ldr	w11, [x26, #56]
    cd50:	ldr	w1, [x27, #156]
    cd54:	ldr	w3, [x24, #56]
    cd58:	orr	w1, w1, w11
    cd5c:	orr	w1, w1, w3
    cd60:	tbz	w1, #0, cda4 <elf_update@@ELFUTILS_1.0+0x1c5c>
    cd64:	cmp	x0, x19
    cd68:	b.cs	cdd4 <elf_update@@ELFUTILS_1.0+0x1c8c>  // b.hs, b.nlast
    cd6c:	cmp	x23, x19
    cd70:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    cd74:	b.cs	cdc0 <elf_update@@ELFUTILS_1.0+0x1c78>  // b.hs, b.nlast
    cd78:	ldr	w1, [x1, #440]
    cd7c:	sub	x2, x23, x0
    cd80:	bl	3100 <memset@plt>
    cd84:	ldp	x2, x10, [x24, #16]
    cd88:	add	x23, x28, x10
    cd8c:	ldr	w3, [x26, #56]
    cd90:	ldr	w0, [x27, #156]
    cd94:	ldr	w1, [x24, #56]
    cd98:	orr	w0, w0, w3
    cd9c:	orr	w0, w0, w1
    cda0:	tbnz	w0, #0, ccf4 <elf_update@@ELFUTILS_1.0+0x1bac>
    cda4:	add	x0, x23, x2
    cda8:	add	x2, x2, x10
    cdac:	add	x2, x28, x2
    cdb0:	cmp	x0, x2
    cdb4:	b.ne	cf9c <elf_update@@ELFUTILS_1.0+0x1e54>  // b.any
    cdb8:	ldr	w1, [x24, #56]
    cdbc:	b	cd04 <elf_update@@ELFUTILS_1.0+0x1bbc>
    cdc0:	ldr	w1, [x1, #440]
    cdc4:	sub	x2, x19, x0
    cdc8:	bl	3100 <memset@plt>
    cdcc:	cmp	x23, x19
    cdd0:	b.eq	cd84 <elf_update@@ELFUTILS_1.0+0x1c3c>  // b.none
    cdd4:	ldr	x0, [sp, #104]
    cdd8:	cmp	x23, x0
    cddc:	b.ls	cd84 <elf_update@@ELFUTILS_1.0+0x1c3c>  // b.plast
    cde0:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    cde4:	ldr	x0, [sp, #104]
    cde8:	ldr	w1, [x1, #440]
    cdec:	cmp	x0, x28
    cdf0:	csel	x0, x0, x28, cs  // cs = hs, nlast
    cdf4:	sub	x2, x23, x0
    cdf8:	bl	3100 <memset@plt>
    cdfc:	b	cd84 <elf_update@@ELFUTILS_1.0+0x1c3c>
    ce00:	cbz	x2, cd04 <elf_update@@ELFUTILS_1.0+0x1bbc>
    ce04:	ldr	w0, [x24, #8]
    ce08:	cbnz	w0, cf00 <elf_update@@ELFUTILS_1.0+0x1db8>
    ce0c:	nop
    ce10:	ldr	x1, [x24]
    ce14:	mov	x0, x23
    ce18:	mov	w20, #0x1                   	// #1
    ce1c:	bl	3030 <memmove@plt>
    ce20:	ldp	x2, x10, [x24, #16]
    ce24:	add	x0, x23, x2
    ce28:	b	cda8 <elf_update@@ELFUTILS_1.0+0x1c60>
    ce2c:	cmp	x0, x19
    ce30:	b.cs	ce64 <elf_update@@ELFUTILS_1.0+0x1d1c>  // b.hs, b.nlast
    ce34:	cmp	x19, x28
    ce38:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    ce3c:	b.ls	ce50 <elf_update@@ELFUTILS_1.0+0x1d08>  // b.plast
    ce40:	ldr	w1, [x1, #440]
    ce44:	sub	x2, x28, x0
    ce48:	bl	3100 <memset@plt>
    ce4c:	b	cb0c <elf_update@@ELFUTILS_1.0+0x19c4>
    ce50:	ldr	w1, [x1, #440]
    ce54:	sub	x2, x19, x0
    ce58:	bl	3100 <memset@plt>
    ce5c:	cmp	x19, x28
    ce60:	b.eq	cb0c <elf_update@@ELFUTILS_1.0+0x19c4>  // b.none
    ce64:	ldr	x0, [sp, #104]
    ce68:	cmp	x0, x28
    ce6c:	b.cs	cb0c <elf_update@@ELFUTILS_1.0+0x19c4>  // b.hs, b.nlast
    ce70:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    ce74:	mov	x0, x28
    ce78:	mov	x2, #0x0                   	// #0
    ce7c:	ldr	w1, [x1, #440]
    ce80:	bl	3100 <memset@plt>
    ce84:	b	cb0c <elf_update@@ELFUTILS_1.0+0x19c4>
    ce88:	mov	w0, #0xffffffff            	// #-1
    ce8c:	str	w0, [sp, #140]
    ce90:	b	ccbc <elf_update@@ELFUTILS_1.0+0x1b74>
    ce94:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    ce98:	add	x3, x3, w4, uxth
    ce9c:	add	x0, x0, x3
    cea0:	sub	w2, w2, w4
    cea4:	ldr	w1, [x1, #440]
    cea8:	bl	3100 <memset@plt>
    ceac:	ldr	x0, [sp, #120]
    ceb0:	ldr	x3, [x26, #40]
    ceb4:	ldr	w2, [x0, #28]
    ceb8:	ldr	x0, [x26]
    cebc:	ldr	x1, [x26, #88]
    cec0:	b	c890 <elf_update@@ELFUTILS_1.0+0x1748>
    cec4:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    cec8:	mov	w3, #0x1                   	// #1
    cecc:	ldr	x4, [x1, #3056]
    ced0:	ldr	x1, [sp, #120]
    ced4:	blr	x4
    ced8:	ldr	w1, [x26, #116]
    cedc:	b	c81c <elf_update@@ELFUTILS_1.0+0x16d4>
    cee0:	mov	w0, #0x1                   	// #1
    cee4:	str	w0, [sp, #140]
    cee8:	b	ccbc <elf_update@@ELFUTILS_1.0+0x1b74>
    ceec:	ldr	x4, [x22, #72]
    cef0:	mov	w3, #0x1                   	// #1
    cef4:	mov	x2, #0x28                  	// #40
    cef8:	blr	x4
    cefc:	b	cbac <elf_update@@ELFUTILS_1.0+0x1a64>
    cf00:	ldr	x1, [sp, #160]
    cf04:	mov	w4, w0
    cf08:	str	x4, [sp, #176]
    cf0c:	ldrb	w3, [x1, w0, uxtw]
    cf10:	cmp	w3, #0x0
    cf14:	csel	w1, w20, w3, eq  // eq = none
    cf18:	and	x1, x1, #0xff
    cf1c:	sub	x0, x1, #0x1
    cf20:	tst	x23, x0
    cf24:	b.ne	cffc <elf_update@@ELFUTILS_1.0+0x1eb4>  // b.any
    cf28:	ldr	x0, [sp, #144]
    cf2c:	mov	w3, w20
    cf30:	ldr	x1, [x24]
    cf34:	ldr	x10, [x0, x4, lsl #3]
    cf38:	mov	x0, x23
    cf3c:	blr	x10
    cf40:	ldp	x2, x10, [x24, #16]
    cf44:	mov	w20, #0x1                   	// #1
    cf48:	add	x0, x23, x2
    cf4c:	b	cda8 <elf_update@@ELFUTILS_1.0+0x1c60>
    cf50:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    cf54:	sub	x2, x2, x0
    cf58:	ldr	w1, [x1, #440]
    cf5c:	bl	3100 <memset@plt>
    cf60:	ldr	w1, [x26, #56]
    cf64:	b	cb5c <elf_update@@ELFUTILS_1.0+0x1a14>
    cf68:	adrp	x3, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    cf6c:	ldr	x4, [x3, #3080]
    cf70:	mov	w3, #0x1                   	// #1
    cf74:	blr	x4
    cf78:	b	c8a8 <elf_update@@ELFUTILS_1.0+0x1760>
    cf7c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cf80:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cf84:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cf88:	add	x3, x3, #0x5a8
    cf8c:	add	x1, x1, #0x330
    cf90:	add	x0, x0, #0x518
    cf94:	mov	w2, #0x141                 	// #321
    cf98:	bl	3330 <__assert_fail@plt>
    cf9c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfa0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfa4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfa8:	add	x3, x3, #0x5a8
    cfac:	add	x1, x1, #0x330
    cfb0:	add	x0, x0, #0x560
    cfb4:	mov	w2, #0x197                 	// #407
    cfb8:	bl	3330 <__assert_fail@plt>
    cfbc:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfc0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfc4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfc8:	add	x3, x3, #0x5a8
    cfcc:	add	x1, x1, #0x330
    cfd0:	add	x0, x0, #0x4d0
    cfd4:	mov	w2, #0x13f                 	// #319
    cfd8:	bl	3330 <__assert_fail@plt>
    cfdc:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfe0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfe4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    cfe8:	add	x3, x3, #0x5a8
    cfec:	add	x1, x1, #0x330
    cff0:	add	x0, x0, #0x4e8
    cff4:	mov	w2, #0x140                 	// #320
    cff8:	bl	3330 <__assert_fail@plt>
    cffc:	cmp	w3, #0x7
    d000:	b.hi	d058 <elf_update@@ELFUTILS_1.0+0x1f10>  // b.pmore
    d004:	mov	x0, x2
    d008:	str	x2, [sp, #184]
    d00c:	bl	30c0 <malloc@plt>
    d010:	mov	x20, x0
    d014:	ldr	x2, [sp, #184]
    d018:	cbz	x20, d06c <elf_update@@ELFUTILS_1.0+0x1f24>
    d01c:	ldr	x0, [sp, #144]
    d020:	mov	w3, #0x1                   	// #1
    d024:	ldr	x1, [sp, #176]
    d028:	str	x2, [sp, #176]
    d02c:	ldr	x10, [x0, x1, lsl #3]
    d030:	mov	x0, x20
    d034:	ldr	x1, [x24]
    d038:	blr	x10
    d03c:	ldr	x2, [sp, #176]
    d040:	mov	x1, x20
    d044:	mov	x0, x23
    d048:	bl	3020 <memcpy@plt>
    d04c:	mov	x0, x20
    d050:	bl	3200 <free@plt>
    d054:	b	cf40 <elf_update@@ELFUTILS_1.0+0x1df8>
    d058:	ldr	x0, [sp, #168]
    d05c:	str	x2, [sp, #184]
    d060:	bl	3130 <posix_memalign@plt>
    d064:	ldr	x2, [sp, #184]
    d068:	cbz	w0, d090 <elf_update@@ELFUTILS_1.0+0x1f48>
    d06c:	ldr	x0, [sp, #152]
    d070:	bl	3200 <free@plt>
    d074:	mov	w1, #0x1                   	// #1
    d078:	mov	w0, #0x8                   	// #8
    d07c:	str	w1, [sp, #140]
    d080:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d084:	ldp	x23, x24, [sp, #48]
    d088:	ldp	x27, x28, [sp, #80]
    d08c:	b	ccbc <elf_update@@ELFUTILS_1.0+0x1b74>
    d090:	ldr	x20, [sp, #200]
    d094:	b	d018 <elf_update@@ELFUTILS_1.0+0x1ed0>
    d098:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d09c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0a0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0a4:	add	x3, x3, #0x5a8
    d0a8:	add	x1, x1, #0x330
    d0ac:	add	x0, x0, #0x348
    d0b0:	mov	w2, #0x8c                  	// #140
    d0b4:	stp	x23, x24, [sp, #48]
    d0b8:	stp	x27, x28, [sp, #80]
    d0bc:	bl	3330 <__assert_fail@plt>
    d0c0:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0c4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0c8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0cc:	add	x3, x3, #0x5a8
    d0d0:	add	x1, x1, #0x330
    d0d4:	add	x0, x0, #0x398
    d0d8:	mov	w2, #0xaf                  	// #175
    d0dc:	stp	x23, x24, [sp, #48]
    d0e0:	stp	x27, x28, [sp, #80]
    d0e4:	bl	3330 <__assert_fail@plt>
    d0e8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0ec:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0f0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d0f4:	add	x3, x3, #0x5a8
    d0f8:	add	x1, x1, #0x330
    d0fc:	add	x0, x0, #0x4b0
    d100:	mov	w2, #0x12f                 	// #303
    d104:	bl	3330 <__assert_fail@plt>
    d108:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d10c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d110:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d114:	add	x3, x3, #0x5a8
    d118:	add	x1, x1, #0x330
    d11c:	add	x0, x0, #0x3e8
    d120:	mov	w2, #0xf8                  	// #248
    d124:	bl	3330 <__assert_fail@plt>
    d128:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d12c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d130:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d134:	add	x3, x3, #0x5a8
    d138:	add	x1, x1, #0x330
    d13c:	add	x0, x0, #0x440
    d140:	mov	w2, #0xfa                  	// #250
    d144:	bl	3330 <__assert_fail@plt>
    d148:	mov	x12, #0x9100                	// #37120
    d14c:	sub	sp, sp, x12
    d150:	stp	x29, x30, [sp]
    d154:	mov	x29, sp
    d158:	stp	x19, x20, [sp, #16]
    d15c:	mov	x19, x0
    d160:	stp	x21, x22, [sp, #32]
    d164:	str	w1, [sp, #128]
    d168:	ldr	w1, [x0, #56]
    d16c:	ldr	x22, [x0, #72]
    d170:	stp	x23, x24, [sp, #48]
    d174:	ldr	w0, [x0, #116]
    d178:	stp	x25, x26, [sp, #64]
    d17c:	orr	w0, w0, w1
    d180:	and	w1, w0, #0x1
    d184:	str	w1, [sp, #148]
    d188:	str	x2, [sp, #152]
    d18c:	str	xzr, [sp, #240]
    d190:	tbz	w0, #0, d254 <elf_update@@ELFUTILS_1.0+0x210c>
    d194:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    d198:	str	x0, [sp, #112]
    d19c:	add	x0, x0, #0xcf8
    d1a0:	ldr	x2, [x0, #24]
    d1a4:	cmp	x2, #0x34
    d1a8:	b.ne	d8d8 <elf_update@@ELFUTILS_1.0+0x2790>  // b.any
    d1ac:	ldr	w0, [sp, #128]
    d1b0:	mov	x21, x22
    d1b4:	cbnz	w0, d900 <elf_update@@ELFUTILS_1.0+0x27b8>
    d1b8:	ldr	w25, [x19, #36]
    d1bc:	mov	x26, x21
    d1c0:	mov	x20, #0x0                   	// #0
    d1c4:	mov	x23, #0x34                  	// #52
    d1c8:	mov	x3, x20
    d1cc:	sub	x2, x23, x20
    d1d0:	mov	x1, x26
    d1d4:	mov	w0, w25
    d1d8:	bl	3220 <pwrite@plt>
    d1dc:	cmn	x0, #0x1
    d1e0:	b.eq	d218 <elf_update@@ELFUTILS_1.0+0x20d0>  // b.none
    d1e4:	cmp	x0, #0x0
    d1e8:	b.le	d228 <elf_update@@ELFUTILS_1.0+0x20e0>
    d1ec:	add	x20, x20, x0
    d1f0:	cmp	x20, #0x33
    d1f4:	b.gt	d5b0 <elf_update@@ELFUTILS_1.0+0x2468>
    d1f8:	add	x26, x21, x20
    d1fc:	mov	x3, x20
    d200:	sub	x2, x23, x20
    d204:	mov	x1, x26
    d208:	mov	w0, w25
    d20c:	bl	3220 <pwrite@plt>
    d210:	cmn	x0, #0x1
    d214:	b.ne	d1e4 <elf_update@@ELFUTILS_1.0+0x209c>  // b.any
    d218:	bl	3340 <__errno_location@plt>
    d21c:	ldr	w0, [x0]
    d220:	cmp	w0, #0x4
    d224:	b.eq	d1c8 <elf_update@@ELFUTILS_1.0+0x2080>  // b.none
    d228:	mov	w0, #0x14                  	// #20
    d22c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d230:	ldr	w0, [sp, #148]
    d234:	mov	x12, #0x9100                	// #37120
    d238:	ldp	x29, x30, [sp]
    d23c:	ldp	x19, x20, [sp, #16]
    d240:	ldp	x21, x22, [sp, #32]
    d244:	ldp	x23, x24, [sp, #48]
    d248:	ldp	x25, x26, [sp, #64]
    d24c:	add	sp, sp, x12
    d250:	ret
    d254:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    d258:	str	x0, [sp, #112]
    d25c:	str	wzr, [sp, #144]
    d260:	ldr	x0, [sp, #112]
    d264:	add	x0, x0, #0xcf8
    d268:	ldr	x0, [x0, #48]
    d26c:	cmp	x0, #0x20
    d270:	b.ne	da50 <elf_update@@ELFUTILS_1.0+0x2908>  // b.any
    d274:	add	x1, sp, #0xf8
    d278:	mov	x0, x19
    d27c:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    d280:	str	w0, [sp, #148]
    d284:	cbnz	w0, d878 <elf_update@@ELFUTILS_1.0+0x2730>
    d288:	ldr	x21, [x19, #88]
    d28c:	stp	x27, x28, [sp, #80]
    d290:	cbz	x21, d7dc <elf_update@@ELFUTILS_1.0+0x2694>
    d294:	ldr	w1, [x19, #56]
    d298:	ldr	w0, [x19, #120]
    d29c:	ldr	w2, [x22, #28]
    d2a0:	orr	w0, w0, w1
    d2a4:	and	w27, w0, #0x1
    d2a8:	tbz	w0, #0, d39c <elf_update@@ELFUTILS_1.0+0x2254>
    d2ac:	ldrh	w1, [x22, #40]
    d2b0:	cmp	w1, w2
    d2b4:	b.cc	d848 <elf_update@@ELFUTILS_1.0+0x2700>  // b.lo, b.ul, b.last
    d2b8:	ldr	w0, [sp, #128]
    d2bc:	ldr	x20, [sp, #248]
    d2c0:	lsl	x20, x20, #5
    d2c4:	cbnz	w0, d9e4 <elf_update@@ELFUTILS_1.0+0x289c>
    d2c8:	str	xzr, [sp, #120]
    d2cc:	ldr	w0, [x22, #28]
    d2d0:	mov	x25, x20
    d2d4:	ldr	w23, [x19, #36]
    d2d8:	mov	x24, x21
    d2dc:	mov	x28, x0
    d2e0:	mov	x26, #0x0                   	// #0
    d2e4:	str	x0, [sp, #104]
    d2e8:	mov	x3, x28
    d2ec:	mov	x2, x25
    d2f0:	mov	x1, x24
    d2f4:	mov	w0, w23
    d2f8:	bl	3220 <pwrite@plt>
    d2fc:	cmn	x0, #0x1
    d300:	b.eq	d344 <elf_update@@ELFUTILS_1.0+0x21fc>  // b.none
    d304:	cmp	x0, #0x0
    d308:	b.le	d368 <elf_update@@ELFUTILS_1.0+0x2220>
    d30c:	add	x26, x26, x0
    d310:	cmp	x20, x26
    d314:	b.ls	d36c <elf_update@@ELFUTILS_1.0+0x2224>  // b.plast
    d318:	ldr	x0, [sp, #104]
    d31c:	sub	x25, x20, x26
    d320:	add	x24, x21, x26
    d324:	mov	x2, x25
    d328:	add	x28, x0, x26
    d32c:	mov	x1, x24
    d330:	mov	x3, x28
    d334:	mov	w0, w23
    d338:	bl	3220 <pwrite@plt>
    d33c:	cmn	x0, #0x1
    d340:	b.ne	d304 <elf_update@@ELFUTILS_1.0+0x21bc>  // b.any
    d344:	bl	3340 <__errno_location@plt>
    d348:	ldr	w0, [x0]
    d34c:	cmp	w0, #0x4
    d350:	b.eq	d2e8 <elf_update@@ELFUTILS_1.0+0x21a0>  // b.none
    d354:	mov	w0, #0x14                  	// #20
    d358:	str	w27, [sp, #148]
    d35c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d360:	ldp	x27, x28, [sp, #80]
    d364:	b	d230 <elf_update@@ELFUTILS_1.0+0x20e8>
    d368:	csel	x26, x26, x0, eq  // eq = none
    d36c:	cmp	x20, x26
    d370:	b.ne	d354 <elf_update@@ELFUTILS_1.0+0x220c>  // b.any
    d374:	ldr	x0, [sp, #120]
    d378:	bl	3200 <free@plt>
    d37c:	ldr	w0, [x19, #120]
    d380:	ldr	x1, [x19, #88]
    d384:	and	w0, w0, #0xfffffffe
    d388:	str	w0, [x19, #120]
    d38c:	mov	w0, #0x1                   	// #1
    d390:	str	w0, [sp, #144]
    d394:	cbz	x1, d7dc <elf_update@@ELFUTILS_1.0+0x2694>
    d398:	ldr	w2, [x22, #28]
    d39c:	ldr	x5, [sp, #248]
    d3a0:	mov	w2, w2
    d3a4:	add	x21, x2, x5, lsl #5
    d3a8:	ldr	x1, [sp, #152]
    d3ac:	cbz	x1, d418 <elf_update@@ELFUTILS_1.0+0x22d0>
    d3b0:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    d3b4:	movk	x0, #0x555, lsl #48
    d3b8:	cmp	x1, x0
    d3bc:	b.hi	d868 <elf_update@@ELFUTILS_1.0+0x2720>  // b.pmore
    d3c0:	ldr	w0, [x22, #32]
    d3c4:	str	w0, [sp, #236]
    d3c8:	ldr	x0, [x19, #40]
    d3cc:	str	x0, [sp, #224]
    d3d0:	ldr	w0, [sp, #128]
    d3d4:	cbnz	w0, d42c <elf_update@@ELFUTILS_1.0+0x22e4>
    d3d8:	ldr	x0, [x19, #80]
    d3dc:	str	x0, [sp, #176]
    d3e0:	cbz	x0, d42c <elf_update@@ELFUTILS_1.0+0x22e4>
    d3e4:	ldr	w0, [x19, #56]
    d3e8:	str	w0, [sp, #136]
    d3ec:	tbnz	w0, #0, d42c <elf_update@@ELFUTILS_1.0+0x22e4>
    d3f0:	str	xzr, [sp, #208]
    d3f4:	b	d450 <elf_update@@ELFUTILS_1.0+0x2308>
    d3f8:	csel	x0, x26, x0, eq  // eq = none
    d3fc:	cmp	x20, x0
    d400:	b.ne	d7b4 <elf_update@@ELFUTILS_1.0+0x266c>  // b.any
    d404:	ldr	x0, [sp, #208]
    d408:	bl	3200 <free@plt>
    d40c:	ldr	x0, [sp, #200]
    d410:	bl	3200 <free@plt>
    d414:	nop
    d418:	ldr	w0, [x19, #56]
    d41c:	ldp	x27, x28, [sp, #80]
    d420:	and	w0, w0, #0xfffffffe
    d424:	str	w0, [x19, #56]
    d428:	b	d230 <elf_update@@ELFUTILS_1.0+0x20e8>
    d42c:	ldr	x0, [sp, #152]
    d430:	add	x0, x0, x0, lsl #2
    d434:	lsl	x0, x0, #3
    d438:	bl	30c0 <malloc@plt>
    d43c:	str	x0, [sp, #176]
    d440:	cbz	x0, d89c <elf_update@@ELFUTILS_1.0+0x2754>
    d444:	str	x0, [sp, #208]
    d448:	ldr	w0, [x19, #56]
    d44c:	str	w0, [sp, #136]
    d450:	ldr	x0, [sp, #152]
    d454:	add	x22, x19, #0xc8
    d458:	lsl	x20, x0, #3
    d45c:	mov	x0, x20
    d460:	bl	30c0 <malloc@plt>
    d464:	str	x0, [sp, #200]
    d468:	cbz	x0, d894 <elf_update@@ELFUTILS_1.0+0x274c>
    d46c:	mov	x1, x22
    d470:	ldr	x22, [sp, #200]
    d474:	add	x2, x20, x22
    d478:	str	x2, [sp, #160]
    d47c:	bl	c5e0 <elf_update@@ELFUTILS_1.0+0x1498>
    d480:	str	x22, [sp, #120]
    d484:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    d488:	mov	x1, #0x1100                	// #4352
    d48c:	add	x0, x0, #0xbd8
    d490:	add	x1, sp, x1
    d494:	mov	x22, x21
    d498:	str	x1, [sp, #168]
    d49c:	str	x0, [sp, #216]
    d4a0:	b	d520 <elf_update@@ELFUTILS_1.0+0x23d8>
    d4a4:	ldr	w0, [x21, #156]
    d4a8:	tbnz	w0, #0, da78 <elf_update@@ELFUTILS_1.0+0x2930>
    d4ac:	ldr	w0, [sp, #128]
    d4b0:	cbnz	w0, d584 <elf_update@@ELFUTILS_1.0+0x243c>
    d4b4:	ldr	x0, [x19, #80]
    d4b8:	cbz	x0, d4c4 <elf_update@@ELFUTILS_1.0+0x237c>
    d4bc:	ldr	w0, [x19, #56]
    d4c0:	tbz	w0, #0, d4f0 <elf_update@@ELFUTILS_1.0+0x23a8>
    d4c4:	ldr	x0, [x21, #128]
    d4c8:	ldr	x2, [sp, #176]
    d4cc:	add	x0, x0, x0, lsl #2
    d4d0:	ldr	x1, [x21, #144]
    d4d4:	add	x0, x2, x0, lsl #3
    d4d8:	ldp	x2, x3, [x1]
    d4dc:	stp	x2, x3, [x0]
    d4e0:	ldp	x2, x3, [x1, #16]
    d4e4:	stp	x2, x3, [x0, #16]
    d4e8:	ldr	x1, [x1, #32]
    d4ec:	str	x1, [x0, #32]
    d4f0:	ldr	x1, [sp, #120]
    d4f4:	ldr	x2, [sp, #160]
    d4f8:	add	x1, x1, #0x8
    d4fc:	ldr	w0, [x21, #152]
    d500:	cmp	x2, x1
    d504:	str	x1, [sp, #120]
    d508:	and	w1, w0, #0xfffffffe
    d50c:	str	w1, [x21, #152]
    d510:	ldr	w1, [sp, #136]
    d514:	orr	w0, w1, w0
    d518:	str	w0, [sp, #136]
    d51c:	b.eq	d924 <elf_update@@ELFUTILS_1.0+0x27dc>  // b.none
    d520:	ldr	x0, [sp, #120]
    d524:	ldr	x21, [x0]
    d528:	ldr	x0, [x21, #128]
    d52c:	cbz	x0, d4a4 <elf_update@@ELFUTILS_1.0+0x235c>
    d530:	ldr	x20, [x21, #144]
    d534:	ldr	w0, [x20, #4]
    d538:	cmp	w0, #0x8
    d53c:	b.eq	d4ac <elf_update@@ELFUTILS_1.0+0x2364>  // b.none
    d540:	ldr	x1, [x19, #40]
    d544:	ldr	w26, [x20, #16]
    d548:	ldr	x0, [x21, #64]
    d54c:	add	x1, x26, x1
    d550:	str	x1, [sp, #112]
    d554:	cbnz	x0, d5d8 <elf_update@@ELFUTILS_1.0+0x2490>
    d558:	ldr	w0, [sp, #144]
    d55c:	cmp	w0, #0x0
    d560:	ldr	x0, [sp, #112]
    d564:	ccmp	x22, x0, #0x0, ne  // ne = any
    d568:	b.lt	d824 <elf_update@@ELFUTILS_1.0+0x26dc>  // b.tstop
    d56c:	ldr	x0, [sp, #112]
    d570:	str	wzr, [sp, #144]
    d574:	ldr	w5, [x20, #20]
    d578:	add	x22, x5, x0
    d57c:	ldr	w0, [sp, #128]
    d580:	cbz	w0, d4b4 <elf_update@@ELFUTILS_1.0+0x236c>
    d584:	ldr	x1, [sp, #216]
    d588:	mov	w3, #0x1                   	// #1
    d58c:	ldr	x0, [x21, #128]
    d590:	mov	x2, #0x28                  	// #40
    d594:	ldr	x4, [x1, #72]
    d598:	ldr	x1, [x21, #144]
    d59c:	add	x0, x0, x0, lsl #2
    d5a0:	ldr	x5, [sp, #176]
    d5a4:	add	x0, x5, x0, lsl #3
    d5a8:	blr	x4
    d5ac:	b	d4f0 <elf_update@@ELFUTILS_1.0+0x23a8>
    d5b0:	cmp	x20, #0x34
    d5b4:	b.ne	d228 <elf_update@@ELFUTILS_1.0+0x20e0>  // b.any
    d5b8:	ldr	x1, [x19, #88]
    d5bc:	ldr	w0, [x19, #116]
    d5c0:	cmp	x1, #0x0
    d5c4:	and	w0, w0, #0xfffffffe
    d5c8:	cset	w1, eq  // eq = none
    d5cc:	str	w0, [x19, #116]
    d5d0:	str	w1, [sp, #144]
    d5d4:	b	d260 <elf_update@@ELFUTILS_1.0+0x2118>
    d5d8:	add	x0, sp, #0xf0
    d5dc:	mov	x1, x22
    d5e0:	mov	w20, #0x0                   	// #0
    d5e4:	mov	x22, x21
    d5e8:	str	x19, [sp, #104]
    d5ec:	str	x0, [sp, #184]
    d5f0:	add	x0, sp, #0x100
    d5f4:	str	x0, [sp, #192]
    d5f8:	b	d640 <elf_update@@ELFUTILS_1.0+0x24f8>
    d5fc:	cmp	x0, #0x0
    d600:	ldr	w0, [sp, #144]
    d604:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    d608:	b.ne	d760 <elf_update@@ELFUTILS_1.0+0x2618>  // b.any
    d60c:	ldr	x0, [sp, #104]
    d610:	ldr	w2, [x21, #156]
    d614:	ldr	w3, [x0, #56]
    d618:	ldr	w0, [x22, #56]
    d61c:	orr	w2, w2, w3
    d620:	orr	w2, w2, w0
    d624:	tbnz	w2, #0, d760 <elf_update@@ELFUTILS_1.0+0x2618>
    d628:	ldr	x27, [x22, #16]
    d62c:	and	w0, w0, #0xfffffffe
    d630:	str	w0, [x22, #56]
    d634:	add	x1, x26, x27
    d638:	ldr	x22, [x22, #48]
    d63c:	cbz	x22, d884 <elf_update@@ELFUTILS_1.0+0x273c>
    d640:	ldr	x0, [x22, #24]
    d644:	ldr	x2, [sp, #112]
    d648:	add	x26, x0, x2
    d64c:	cmp	x26, x1
    d650:	b.gt	d5fc <elf_update@@ELFUTILS_1.0+0x24b4>
    d654:	ldr	x0, [sp, #104]
    d658:	ldr	w1, [x21, #156]
    d65c:	ldr	x27, [x22, #16]
    d660:	ldr	w2, [x0, #56]
    d664:	ldr	w0, [x22, #56]
    d668:	orr	w1, w1, w2
    d66c:	orr	w1, w1, w0
    d670:	tbz	w1, #0, d62c <elf_update@@ELFUTILS_1.0+0x24e4>
    d674:	ldr	w0, [sp, #128]
    d678:	ldr	x20, [x22]
    d67c:	cbnz	w0, d7ec <elf_update@@ELFUTILS_1.0+0x26a4>
    d680:	ldr	x0, [sp, #168]
    d684:	cmp	x20, x0
    d688:	cset	w0, ne  // ne = any
    d68c:	str	w0, [sp, #232]
    d690:	ldr	x0, [sp, #104]
    d694:	mov	x25, x26
    d698:	mov	x19, x27
    d69c:	mov	x24, x20
    d6a0:	mov	x28, #0x0                   	// #0
    d6a4:	ldr	w0, [x0, #36]
    d6a8:	str	w0, [sp, #132]
    d6ac:	ldr	w0, [sp, #132]
    d6b0:	mov	x3, x25
    d6b4:	mov	x2, x19
    d6b8:	mov	x1, x24
    d6bc:	bl	3220 <pwrite@plt>
    d6c0:	mov	x23, x0
    d6c4:	cmn	x0, #0x1
    d6c8:	b.eq	d710 <elf_update@@ELFUTILS_1.0+0x25c8>  // b.none
    d6cc:	cmp	x0, #0x0
    d6d0:	b.le	d788 <elf_update@@ELFUTILS_1.0+0x2640>
    d6d4:	add	x28, x28, x0
    d6d8:	cmp	x28, x27
    d6dc:	mov	x2, x28
    d6e0:	b.cs	d724 <elf_update@@ELFUTILS_1.0+0x25dc>  // b.hs, b.nlast
    d6e4:	ldr	w0, [sp, #132]
    d6e8:	add	x25, x28, x26
    d6ec:	sub	x19, x27, x28
    d6f0:	add	x24, x20, x28
    d6f4:	mov	x3, x25
    d6f8:	mov	x2, x19
    d6fc:	mov	x1, x24
    d700:	bl	3220 <pwrite@plt>
    d704:	mov	x23, x0
    d708:	cmn	x0, #0x1
    d70c:	b.ne	d6cc <elf_update@@ELFUTILS_1.0+0x2584>  // b.any
    d710:	bl	3340 <__errno_location@plt>
    d714:	ldr	w0, [x0]
    d718:	cmp	w0, #0x4
    d71c:	b.eq	d6ac <elf_update@@ELFUTILS_1.0+0x2564>  // b.none
    d720:	mov	x2, x23
    d724:	ldr	x0, [x22]
    d728:	ldr	x4, [x22, #16]
    d72c:	cmp	x0, x20
    d730:	ldr	w0, [sp, #232]
    d734:	csel	w27, w0, wzr, ne  // ne = any
    d738:	cmp	x4, x2
    d73c:	b.ne	d7a8 <elf_update@@ELFUTILS_1.0+0x2660>  // b.any
    d740:	cbz	w27, d750 <elf_update@@ELFUTILS_1.0+0x2608>
    d744:	mov	x0, x20
    d748:	bl	3200 <free@plt>
    d74c:	ldr	x4, [x22, #16]
    d750:	mov	x27, x4
    d754:	ldr	w0, [x22, #56]
    d758:	mov	w20, #0x1                   	// #1
    d75c:	b	d62c <elf_update@@ELFUTILS_1.0+0x24e4>
    d760:	ldr	x0, [sp, #104]
    d764:	sub	x2, x26, x1
    d768:	ldp	x4, x3, [sp, #184]
    d76c:	ldr	w0, [x0, #36]
    d770:	bl	c628 <elf_update@@ELFUTILS_1.0+0x14e0>
    d774:	cbnz	w0, d7bc <elf_update@@ELFUTILS_1.0+0x2674>
    d778:	ldr	x7, [x22, #24]
    d77c:	ldr	x0, [sp, #112]
    d780:	add	x26, x0, x7
    d784:	b	d654 <elf_update@@ELFUTILS_1.0+0x250c>
    d788:	csel	x2, x28, x0, eq  // eq = none
    d78c:	ldr	x0, [x22]
    d790:	ldr	x4, [x22, #16]
    d794:	cmp	x0, x20
    d798:	ldr	w0, [sp, #232]
    d79c:	csel	w27, w0, wzr, ne  // ne = any
    d7a0:	cmp	x4, x2
    d7a4:	b.eq	d740 <elf_update@@ELFUTILS_1.0+0x25f8>  // b.none
    d7a8:	cbz	w27, d7b4 <elf_update@@ELFUTILS_1.0+0x266c>
    d7ac:	mov	x0, x20
    d7b0:	bl	3200 <free@plt>
    d7b4:	mov	w0, #0x14                  	// #20
    d7b8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d7bc:	ldr	x0, [sp, #208]
    d7c0:	mov	w1, #0x1                   	// #1
    d7c4:	str	w1, [sp, #148]
    d7c8:	bl	3200 <free@plt>
    d7cc:	ldr	x0, [sp, #200]
    d7d0:	bl	3200 <free@plt>
    d7d4:	ldp	x27, x28, [sp, #80]
    d7d8:	b	d230 <elf_update@@ELFUTILS_1.0+0x20e8>
    d7dc:	ldr	x0, [sp, #112]
    d7e0:	add	x24, x0, #0xcf8
    d7e4:	ldr	x21, [x24, #24]
    d7e8:	b	d3a8 <elf_update@@ELFUTILS_1.0+0x2260>
    d7ec:	str	wzr, [sp, #232]
    d7f0:	cmp	x27, #0x8, lsl #12
    d7f4:	ldr	x0, [sp, #168]
    d7f8:	b.hi	d8b4 <elf_update@@ELFUTILS_1.0+0x276c>  // b.pmore
    d7fc:	ldr	w6, [x22, #8]
    d800:	mov	x2, x27
    d804:	ldr	x4, [sp, #216]
    d808:	mov	x1, x20
    d80c:	mov	w3, #0x1                   	// #1
    d810:	mov	x20, x0
    d814:	ldr	x4, [x4, x6, lsl #3]
    d818:	blr	x4
    d81c:	ldr	x27, [x22, #16]
    d820:	b	d690 <elf_update@@ELFUTILS_1.0+0x2548>
    d824:	ldr	w0, [x19, #36]
    d828:	add	x4, sp, #0xf0
    d82c:	ldr	x1, [sp, #112]
    d830:	add	x3, sp, #0x100
    d834:	sub	x2, x1, x22
    d838:	mov	x1, x22
    d83c:	bl	c628 <elf_update@@ELFUTILS_1.0+0x14e0>
    d840:	cbz	w0, d56c <elf_update@@ELFUTILS_1.0+0x2424>
    d844:	b	d7bc <elf_update@@ELFUTILS_1.0+0x2674>
    d848:	ldr	w0, [x19, #36]
    d84c:	sub	w2, w2, w1
    d850:	add	x4, sp, #0xf0
    d854:	and	x1, x1, #0xffff
    d858:	add	x3, sp, #0x100
    d85c:	bl	c628 <elf_update@@ELFUTILS_1.0+0x14e0>
    d860:	cbz	w0, d2b8 <elf_update@@ELFUTILS_1.0+0x2170>
    d864:	nop
    d868:	mov	w0, #0x1                   	// #1
    d86c:	str	w0, [sp, #148]
    d870:	ldp	x27, x28, [sp, #80]
    d874:	b	d230 <elf_update@@ELFUTILS_1.0+0x20e8>
    d878:	mov	w0, #0xffffffff            	// #-1
    d87c:	str	w0, [sp, #148]
    d880:	b	d230 <elf_update@@ELFUTILS_1.0+0x20e8>
    d884:	mov	x22, x1
    d888:	str	w20, [sp, #144]
    d88c:	ldr	x19, [sp, #104]
    d890:	b	d4ac <elf_update@@ELFUTILS_1.0+0x2364>
    d894:	ldr	x0, [sp, #208]
    d898:	bl	3200 <free@plt>
    d89c:	mov	w1, #0xffffffff            	// #-1
    d8a0:	mov	w0, #0x8                   	// #8
    d8a4:	str	w1, [sp, #148]
    d8a8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d8ac:	ldp	x27, x28, [sp, #80]
    d8b0:	b	d230 <elf_update@@ELFUTILS_1.0+0x20e8>
    d8b4:	mov	x0, x27
    d8b8:	bl	30c0 <malloc@plt>
    d8bc:	cbz	x0, d8cc <elf_update@@ELFUTILS_1.0+0x2784>
    d8c0:	mov	w1, #0x1                   	// #1
    d8c4:	str	w1, [sp, #232]
    d8c8:	b	d7fc <elf_update@@ELFUTILS_1.0+0x26b4>
    d8cc:	mov	w0, #0x8                   	// #8
    d8d0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d8d4:	b	d7bc <elf_update@@ELFUTILS_1.0+0x2674>
    d8d8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d8dc:	add	x3, x3, #0x5a8
    d8e0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d8e4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    d8e8:	add	x3, x3, #0x18
    d8ec:	add	x1, x1, #0x330
    d8f0:	add	x0, x0, #0x348
    d8f4:	mov	w2, #0x228                 	// #552
    d8f8:	stp	x27, x28, [sp, #80]
    d8fc:	bl	3330 <__assert_fail@plt>
    d900:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    d904:	mov	x3, #0x1100                	// #4352
    d908:	add	x0, sp, x3
    d90c:	mov	w3, #0x1                   	// #1
    d910:	ldr	x4, [x1, #3056]
    d914:	mov	x21, x0
    d918:	mov	x1, x22
    d91c:	blr	x4
    d920:	b	d1b8 <elf_update@@ELFUTILS_1.0+0x2070>
    d924:	ldr	x1, [sp, #224]
    d928:	mov	x21, x22
    d92c:	ldr	w0, [sp, #236]
    d930:	add	x22, x1, w0, uxtw
    d934:	ldr	w1, [x19, #56]
    d938:	cmp	x21, x22
    d93c:	cset	w0, lt  // lt = tstop
    d940:	tst	w1, w0
    d944:	b.ne	da1c <elf_update@@ELFUTILS_1.0+0x28d4>  // b.any
    d948:	ldr	x0, [sp, #136]
    d94c:	tbz	w0, #0, d404 <elf_update@@ELFUTILS_1.0+0x22bc>
    d950:	ldr	x0, [sp, #152]
    d954:	mov	x24, x22
    d958:	ldr	w23, [x19, #36]
    d95c:	mov	x26, #0x0                   	// #0
    d960:	ldr	x21, [sp, #176]
    d964:	add	x20, x0, x0, lsl #2
    d968:	lsl	x20, x20, #3
    d96c:	mov	x25, x20
    d970:	mov	x3, x24
    d974:	mov	x2, x25
    d978:	mov	x1, x21
    d97c:	mov	w0, w23
    d980:	bl	3220 <pwrite@plt>
    d984:	cmn	x0, #0x1
    d988:	b.eq	d9d0 <elf_update@@ELFUTILS_1.0+0x2888>  // b.none
    d98c:	cmp	x0, #0x0
    d990:	b.le	d3f8 <elf_update@@ELFUTILS_1.0+0x22b0>
    d994:	add	x26, x26, x0
    d998:	cmp	x20, x26
    d99c:	mov	x0, x26
    d9a0:	b.ls	d3fc <elf_update@@ELFUTILS_1.0+0x22b4>  // b.plast
    d9a4:	ldr	x0, [sp, #176]
    d9a8:	add	x24, x22, x26
    d9ac:	sub	x25, x20, x26
    d9b0:	mov	x3, x24
    d9b4:	add	x21, x0, x26
    d9b8:	mov	x2, x25
    d9bc:	mov	x1, x21
    d9c0:	mov	w0, w23
    d9c4:	bl	3220 <pwrite@plt>
    d9c8:	cmn	x0, #0x1
    d9cc:	b.ne	d98c <elf_update@@ELFUTILS_1.0+0x2844>  // b.any
    d9d0:	bl	3340 <__errno_location@plt>
    d9d4:	ldr	w0, [x0]
    d9d8:	cmp	w0, #0x4
    d9dc:	b.ne	d7b4 <elf_update@@ELFUTILS_1.0+0x266c>  // b.any
    d9e0:	b	d970 <elf_update@@ELFUTILS_1.0+0x2828>
    d9e4:	mov	x0, x20
    d9e8:	bl	30c0 <malloc@plt>
    d9ec:	str	x0, [sp, #120]
    d9f0:	cbz	x0, da3c <elf_update@@ELFUTILS_1.0+0x28f4>
    d9f4:	adrp	x4, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    d9f8:	mov	x2, x20
    d9fc:	ldr	x1, [x19, #88]
    da00:	mov	w3, #0x1                   	// #1
    da04:	ldr	x4, [x4, #3080]
    da08:	ldr	x21, [sp, #120]
    da0c:	blr	x4
    da10:	ldr	x20, [sp, #248]
    da14:	lsl	x20, x20, #5
    da18:	b	d2cc <elf_update@@ELFUTILS_1.0+0x2184>
    da1c:	ldr	w0, [x19, #36]
    da20:	add	x4, sp, #0xf0
    da24:	add	x3, sp, #0x100
    da28:	sub	x2, x22, x21
    da2c:	mov	x1, x21
    da30:	bl	c628 <elf_update@@ELFUTILS_1.0+0x14e0>
    da34:	cbz	w0, d948 <elf_update@@ELFUTILS_1.0+0x2800>
    da38:	b	d7bc <elf_update@@ELFUTILS_1.0+0x2674>
    da3c:	mov	w0, #0x8                   	// #8
    da40:	str	w27, [sp, #148]
    da44:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    da48:	ldp	x27, x28, [sp, #80]
    da4c:	b	d230 <elf_update@@ELFUTILS_1.0+0x20e8>
    da50:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    da54:	add	x3, x3, #0x5a8
    da58:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    da5c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    da60:	add	x3, x3, #0x18
    da64:	add	x1, x1, #0x330
    da68:	add	x0, x0, #0x398
    da6c:	mov	w2, #0x24a                 	// #586
    da70:	stp	x27, x28, [sp, #80]
    da74:	bl	3330 <__assert_fail@plt>
    da78:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    da7c:	add	x3, x3, #0x5a8
    da80:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    da84:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    da88:	add	x3, x3, #0x18
    da8c:	add	x1, x1, #0x330
    da90:	add	x0, x0, #0x4b0
    da94:	mov	w2, #0x2c3                 	// #707
    da98:	bl	3330 <__assert_fail@plt>
    da9c:	nop
    daa0:	ldr	x4, [x0]
    daa4:	ldr	x3, [x1]
    daa8:	ldr	x2, [x4, #144]
    daac:	ldr	x1, [x3, #144]
    dab0:	ldr	x5, [x2, #24]
    dab4:	ldr	x0, [x1, #24]
    dab8:	cmp	x5, x0
    dabc:	b.cc	db00 <elf_update@@ELFUTILS_1.0+0x29b8>  // b.lo, b.ul, b.last
    dac0:	mov	w0, #0x1                   	// #1
    dac4:	b.hi	dafc <elf_update@@ELFUTILS_1.0+0x29b4>  // b.pmore
    dac8:	ldr	x1, [x1, #32]
    dacc:	mov	w0, #0xffffffff            	// #-1
    dad0:	ldr	x2, [x2, #32]
    dad4:	cmp	x2, x1
    dad8:	b.cc	dafc <elf_update@@ELFUTILS_1.0+0x29b4>  // b.lo, b.ul, b.last
    dadc:	mov	w0, #0x1                   	// #1
    dae0:	b.hi	dafc <elf_update@@ELFUTILS_1.0+0x29b4>  // b.pmore
    dae4:	ldr	x2, [x4, #128]
    dae8:	mov	w4, #0xffffffff            	// #-1
    daec:	ldr	x1, [x3, #128]
    daf0:	cmp	x2, x1
    daf4:	cset	w0, hi  // hi = pmore
    daf8:	csel	w0, w0, w4, cs  // cs = hs, nlast
    dafc:	ret
    db00:	mov	w0, #0xffffffff            	// #-1
    db04:	ret
    db08:	mov	x2, x0
    db0c:	nop
    db10:	ldr	w4, [x1]
    db14:	cbz	x4, db30 <elf_update@@ELFUTILS_1.0+0x29e8>
    db18:	add	x4, x2, x4, lsl #3
    db1c:	add	x3, x1, #0x10
    db20:	str	x3, [x2], #8
    db24:	add	x3, x3, #0xd0
    db28:	cmp	x4, x2
    db2c:	b.ne	db20 <elf_update@@ELFUTILS_1.0+0x29d8>  // b.any
    db30:	ldr	x1, [x1, #8]
    db34:	cbnz	x1, db10 <elf_update@@ELFUTILS_1.0+0x29c8>
    db38:	sub	x1, x2, x0
    db3c:	adrp	x3, d000 <elf_update@@ELFUTILS_1.0+0x1eb8>
    db40:	mov	x2, #0x8                   	// #8
    db44:	add	x3, x3, #0xaa0
    db48:	asr	x1, x1, #3
    db4c:	b	30b0 <qsort@plt>
    db50:	stp	x29, x30, [sp, #-112]!
    db54:	cmp	x2, #0x1, lsl #12
    db58:	mov	x29, sp
    db5c:	stp	x25, x26, [sp, #64]
    db60:	mov	x25, x3
    db64:	ldr	x26, [x4]
    db68:	stp	x19, x20, [sp, #16]
    db6c:	mov	x19, #0x1000                	// #4096
    db70:	stp	x21, x22, [sp, #32]
    db74:	csel	x19, x2, x19, ls  // ls = plast
    db78:	mov	x22, x1
    db7c:	stp	x23, x24, [sp, #48]
    db80:	cmp	x26, x19
    db84:	stp	x27, x28, [sp, #80]
    db88:	mov	x27, x2
    db8c:	str	w0, [sp, #100]
    db90:	b.cc	dc90 <elf_update@@ELFUTILS_1.0+0x2b48>  // b.lo, b.ul, b.last
    db94:	nop
    db98:	cmp	x27, x26
    db9c:	mov	x28, x22
    dba0:	csel	x21, x27, x26, ls  // ls = plast
    dba4:	mov	x24, x25
    dba8:	mov	x23, x21
    dbac:	mov	x20, #0x0                   	// #0
    dbb0:	ldr	w0, [sp, #100]
    dbb4:	mov	x3, x28
    dbb8:	mov	x2, x23
    dbbc:	mov	x1, x24
    dbc0:	bl	3220 <pwrite@plt>
    dbc4:	mov	x19, x0
    dbc8:	cmn	x0, #0x1
    dbcc:	b.eq	dc10 <elf_update@@ELFUTILS_1.0+0x2ac8>  // b.none
    dbd0:	cmp	x0, #0x0
    dbd4:	b.le	dc88 <elf_update@@ELFUTILS_1.0+0x2b40>
    dbd8:	add	x20, x20, x0
    dbdc:	cmp	x21, x20
    dbe0:	b.ls	dc54 <elf_update@@ELFUTILS_1.0+0x2b0c>  // b.plast
    dbe4:	ldr	w0, [sp, #100]
    dbe8:	add	x28, x22, x20
    dbec:	sub	x23, x21, x20
    dbf0:	add	x24, x25, x20
    dbf4:	mov	x3, x28
    dbf8:	mov	x2, x23
    dbfc:	mov	x1, x24
    dc00:	bl	3220 <pwrite@plt>
    dc04:	mov	x19, x0
    dc08:	cmn	x0, #0x1
    dc0c:	b.ne	dbd0 <elf_update@@ELFUTILS_1.0+0x2a88>  // b.any
    dc10:	bl	3340 <__errno_location@plt>
    dc14:	ldr	w0, [x0]
    dc18:	cmp	w0, #0x4
    dc1c:	b.eq	dbb0 <elf_update@@ELFUTILS_1.0+0x2a68>  // b.none
    dc20:	cmp	x21, x19
    dc24:	b.ne	dc60 <elf_update@@ELFUTILS_1.0+0x2b18>  // b.any
    dc28:	add	x22, x22, x21
    dc2c:	subs	x27, x27, x21
    dc30:	b.ne	db98 <elf_update@@ELFUTILS_1.0+0x2a50>  // b.any
    dc34:	mov	w0, #0x0                   	// #0
    dc38:	ldp	x19, x20, [sp, #16]
    dc3c:	ldp	x21, x22, [sp, #32]
    dc40:	ldp	x23, x24, [sp, #48]
    dc44:	ldp	x25, x26, [sp, #64]
    dc48:	ldp	x27, x28, [sp, #80]
    dc4c:	ldp	x29, x30, [sp], #112
    dc50:	ret
    dc54:	mov	x19, x20
    dc58:	cmp	x21, x19
    dc5c:	b.eq	dc28 <elf_update@@ELFUTILS_1.0+0x2ae0>  // b.none
    dc60:	mov	w0, #0x14                  	// #20
    dc64:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    dc68:	mov	w0, #0x1                   	// #1
    dc6c:	ldp	x19, x20, [sp, #16]
    dc70:	ldp	x21, x22, [sp, #32]
    dc74:	ldp	x23, x24, [sp, #48]
    dc78:	ldp	x25, x26, [sp, #64]
    dc7c:	ldp	x27, x28, [sp, #80]
    dc80:	ldp	x29, x30, [sp], #112
    dc84:	ret
    dc88:	csel	x19, x0, x20, ne  // ne = any
    dc8c:	b	dc20 <elf_update@@ELFUTILS_1.0+0x2ad8>
    dc90:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    dc94:	sub	x2, x19, x26
    dc98:	add	x0, x3, x26
    dc9c:	str	x4, [sp, #104]
    dca0:	ldr	w1, [x1, #440]
    dca4:	mov	x26, x19
    dca8:	bl	3100 <memset@plt>
    dcac:	ldr	x4, [sp, #104]
    dcb0:	str	x19, [x4]
    dcb4:	b	db98 <elf_update@@ELFUTILS_1.0+0x2a50>
    dcb8:	stp	x29, x30, [sp, #-208]!
    dcbc:	mov	x29, sp
    dcc0:	stp	x25, x26, [sp, #64]
    dcc4:	mov	x26, x0
    dcc8:	ldr	w0, [x0, #56]
    dccc:	str	x2, [sp, #128]
    dcd0:	ldr	x2, [x26, #72]
    dcd4:	stp	x19, x20, [sp, #16]
    dcd8:	stp	x21, x22, [sp, #32]
    dcdc:	mov	w21, w1
    dce0:	ldr	w1, [x26, #116]
    dce4:	str	x2, [sp, #120]
    dce8:	orr	w0, w1, w0
    dcec:	tbz	w0, #0, e1fc <elf_update@@ELFUTILS_1.0+0x30b4>
    dcf0:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    dcf4:	ldr	x2, [x0, #3560]
    dcf8:	cmp	x2, #0x40
    dcfc:	b.ne	e5c8 <elf_update@@ELFUTILS_1.0+0x3480>  // b.any
    dd00:	ldr	x0, [x26]
    dd04:	ldr	x3, [x26, #40]
    dd08:	add	x0, x0, x3
    dd0c:	cbnz	w21, e3ec <elf_update@@ELFUTILS_1.0+0x32a4>
    dd10:	ldr	x2, [sp, #120]
    dd14:	cmp	x2, x0
    dd18:	b.eq	dd44 <elf_update@@ELFUTILS_1.0+0x2bfc>  // b.none
    dd1c:	mov	x1, x2
    dd20:	ldp	x2, x3, [x2]
    dd24:	stp	x2, x3, [x0]
    dd28:	ldp	x2, x3, [x1, #16]
    dd2c:	stp	x2, x3, [x0, #16]
    dd30:	ldp	x2, x3, [x1, #32]
    dd34:	stp	x2, x3, [x0, #32]
    dd38:	ldp	x2, x3, [x1, #48]
    dd3c:	stp	x2, x3, [x0, #48]
    dd40:	ldr	w1, [x26, #116]
    dd44:	ldr	x0, [x26, #88]
    dd48:	and	w1, w1, #0xfffffffe
    dd4c:	str	w1, [x26, #116]
    dd50:	cmp	x0, #0x0
    dd54:	cset	w20, eq  // eq = none
    dd58:	add	x1, sp, #0xc0
    dd5c:	mov	x0, x26
    dd60:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    dd64:	str	w0, [sp, #140]
    dd68:	cbnz	w0, e3b0 <elf_update@@ELFUTILS_1.0+0x3268>
    dd6c:	adrp	x19, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    dd70:	add	x0, x19, #0xcf8
    dd74:	ldr	x1, [x26, #88]
    dd78:	ldr	x3, [x0, #264]
    dd7c:	str	x3, [sp, #160]
    dd80:	cbz	x1, dde8 <elf_update@@ELFUTILS_1.0+0x2ca0>
    dd84:	ldr	w2, [x26, #56]
    dd88:	ldr	w0, [x26, #120]
    dd8c:	orr	w0, w0, w2
    dd90:	tbz	w0, #0, dde8 <elf_update@@ELFUTILS_1.0+0x2ca0>
    dd94:	cmp	x3, #0x38
    dd98:	b.ne	e5f0 <elf_update@@ELFUTILS_1.0+0x34a8>  // b.any
    dd9c:	ldr	x0, [sp, #120]
    dda0:	ldr	x3, [x26, #40]
    dda4:	ldr	x2, [x0, #32]
    dda8:	ldrh	w4, [x0, #52]
    ddac:	ldr	x0, [x26]
    ddb0:	cmp	x2, x4
    ddb4:	b.hi	e3bc <elf_update@@ELFUTILS_1.0+0x3274>  // b.pmore
    ddb8:	ldr	x4, [sp, #192]
    ddbc:	add	x3, x3, x2
    ddc0:	add	x0, x0, x3
    ddc4:	lsl	x2, x4, #3
    ddc8:	sub	x2, x2, x4
    ddcc:	lsl	x2, x2, #3
    ddd0:	cbnz	w21, e494 <elf_update@@ELFUTILS_1.0+0x334c>
    ddd4:	bl	3030 <memmove@plt>
    ddd8:	ldr	w0, [x26, #120]
    dddc:	mov	w20, #0x1                   	// #1
    dde0:	and	w0, w0, #0xfffffffe
    dde4:	str	w0, [x26, #120]
    dde8:	ldr	x0, [x26]
    ddec:	str	x0, [sp, #144]
    ddf0:	ldr	x1, [sp, #128]
    ddf4:	ldr	x0, [x26, #40]
    ddf8:	str	x0, [sp, #104]
    ddfc:	cbz	x1, e158 <elf_update@@ELFUTILS_1.0+0x3010>
    de00:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    de04:	cmp	x1, x0
    de08:	b.hi	e408 <elf_update@@ELFUTILS_1.0+0x32c0>  // b.pmore
    de0c:	stp	x23, x24, [sp, #48]
    de10:	lsl	x24, x1, #3
    de14:	add	x19, x19, #0xcf8
    de18:	ldr	x1, [sp, #192]
    de1c:	str	x1, [sp, #184]
    de20:	ldr	x1, [sp, #120]
    de24:	mov	x0, x24
    de28:	stp	x27, x28, [sp, #80]
    de2c:	add	x28, x26, #0xc8
    de30:	ldr	x1, [x1, #32]
    de34:	str	x1, [sp, #168]
    de38:	ldr	x1, [x19, #240]
    de3c:	str	x1, [sp, #176]
    de40:	bl	30c0 <malloc@plt>
    de44:	str	x0, [sp, #152]
    de48:	cbz	x0, e1cc <elf_update@@ELFUTILS_1.0+0x3084>
    de4c:	ldr	x3, [sp, #120]
    de50:	mov	x1, x28
    de54:	ldr	x23, [sp, #152]
    de58:	str	x23, [sp, #112]
    de5c:	ldr	x2, [x3, #40]
    de60:	add	x4, x24, x23
    de64:	ldrh	w3, [x3, #58]
    de68:	str	x4, [sp, #96]
    de6c:	ldr	x4, [sp, #104]
    de70:	mov	w28, w3
    de74:	ldr	x3, [sp, #144]
    de78:	add	x2, x4, x2
    de7c:	add	x19, x3, x2
    de80:	bl	db08 <elf_update@@ELFUTILS_1.0+0x29c0>
    de84:	ldr	x22, [x26, #40]
    de88:	b	de9c <elf_update@@ELFUTILS_1.0+0x2d54>
    de8c:	ldr	x0, [sp, #96]
    de90:	add	x23, x23, #0x8
    de94:	cmp	x0, x23
    de98:	b.eq	df8c <elf_update@@ELFUTILS_1.0+0x2e44>  // b.none
    de9c:	ldr	w0, [x26, #124]
    dea0:	ldr	x24, [x23]
    dea4:	cbnz	w0, df18 <elf_update@@ELFUTILS_1.0+0x2dd0>
    dea8:	ldr	w0, [x24, #152]
    deac:	tbnz	w0, #7, df18 <elf_update@@ELFUTILS_1.0+0x2dd0>
    deb0:	ldr	x0, [x24, #128]
    deb4:	ldr	x25, [x24, #144]
    deb8:	add	x0, x19, x0, lsl #6
    debc:	cmp	x25, x0
    dec0:	b.eq	df18 <elf_update@@ELFUTILS_1.0+0x2dd0>  // b.none
    dec4:	ldr	x0, [x26]
    dec8:	add	x2, x0, x22
    decc:	cmp	x25, x2
    ded0:	b.ls	e638 <elf_update@@ELFUTILS_1.0+0x34f0>  // b.plast
    ded4:	ldr	x2, [x26, #48]
    ded8:	add	x2, x22, x2
    dedc:	add	x0, x0, x2
    dee0:	cmp	x25, x0
    dee4:	b.cs	e658 <elf_update@@ELFUTILS_1.0+0x3510>  // b.hs, b.nlast
    dee8:	mov	x0, #0x40                  	// #64
    deec:	bl	30c0 <malloc@plt>
    def0:	cbz	x0, e1c4 <elf_update@@ELFUTILS_1.0+0x307c>
    def4:	ldp	x8, x9, [x25]
    def8:	stp	x8, x9, [x0]
    defc:	ldp	x8, x9, [x25, #16]
    df00:	stp	x8, x9, [x0, #16]
    df04:	ldp	x8, x9, [x25, #32]
    df08:	stp	x8, x9, [x0, #32]
    df0c:	ldp	x8, x9, [x25, #48]
    df10:	stp	x8, x9, [x0, #48]
    df14:	str	x0, [x24, #144]
    df18:	ldr	x0, [x26]
    df1c:	ldr	x25, [x24]
    df20:	add	x2, x0, x22
    df24:	cmp	x25, x2
    df28:	b.cc	de8c <elf_update@@ELFUTILS_1.0+0x2d44>  // b.lo, b.ul, b.last
    df2c:	ldr	x2, [x26, #48]
    df30:	add	x2, x22, x2
    df34:	add	x2, x0, x2
    df38:	cmp	x25, x2
    df3c:	b.cs	de8c <elf_update@@ELFUTILS_1.0+0x2d44>  // b.hs, b.nlast
    df40:	ldr	x2, [x24, #144]
    df44:	ldr	x2, [x2, #24]
    df48:	add	x2, x22, x2
    df4c:	add	x0, x0, x2
    df50:	cmp	x25, x0
    df54:	b.cs	de8c <elf_update@@ELFUTILS_1.0+0x2d44>  // b.hs, b.nlast
    df58:	ldr	x27, [x24, #16]
    df5c:	mov	x0, x27
    df60:	bl	30c0 <malloc@plt>
    df64:	cbz	x0, e1c4 <elf_update@@ELFUTILS_1.0+0x307c>
    df68:	mov	x2, x27
    df6c:	mov	x1, x25
    df70:	bl	3020 <memcpy@plt>
    df74:	str	x0, [x24]
    df78:	str	x0, [x24, #168]
    df7c:	add	x23, x23, #0x8
    df80:	ldr	x0, [sp, #96]
    df84:	cmp	x0, x23
    df88:	b.ne	de9c <elf_update@@ELFUTILS_1.0+0x2d54>  // b.any
    df8c:	ldp	x22, x4, [sp, #152]
    df90:	and	x2, x28, #0xffff
    df94:	ldp	x1, x3, [sp, #168]
    df98:	ldr	x5, [sp, #104]
    df9c:	ldr	x0, [sp, #184]
    dfa0:	cmp	x1, x3
    dfa4:	csel	x1, x1, x3, cs  // cs = hs, nlast
    dfa8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    dfac:	madd	x0, x0, x4, x5
    dfb0:	add	x0, x0, x1
    dfb4:	ldr	x1, [sp, #128]
    dfb8:	madd	x1, x2, x1, x19
    dfbc:	str	x1, [sp, #104]
    dfc0:	ldr	x1, [sp, #144]
    dfc4:	add	x0, x1, x0
    dfc8:	add	x1, x3, #0x1f0
    dfcc:	str	x1, [sp, #160]
    dfd0:	add	x1, sp, #0xc8
    dfd4:	str	x1, [sp, #168]
    dfd8:	b	dff4 <elf_update@@ELFUTILS_1.0+0x2eac>
    dfdc:	ldr	w1, [x27, #156]
    dfe0:	tbnz	w1, #0, e618 <elf_update@@ELFUTILS_1.0+0x34d0>
    dfe4:	ldr	x1, [sp, #96]
    dfe8:	add	x22, x22, #0x8
    dfec:	cmp	x1, x22
    dff0:	b.eq	e060 <elf_update@@ELFUTILS_1.0+0x2f18>  // b.none
    dff4:	ldr	x27, [x22]
    dff8:	ldr	x1, [x27, #128]
    dffc:	cbz	x1, dfdc <elf_update@@ELFUTILS_1.0+0x2e94>
    e000:	ldr	x25, [x27, #144]
    e004:	ldr	w1, [x25, #4]
    e008:	cmp	w1, #0x8
    e00c:	b.eq	e044 <elf_update@@ELFUTILS_1.0+0x2efc>  // b.none
    e010:	ldr	x1, [x25, #24]
    e014:	ldr	x5, [x26, #40]
    e018:	ldr	x2, [x27, #64]
    e01c:	add	x1, x5, x1
    e020:	ldr	x5, [x26]
    e024:	add	x28, x5, x1
    e028:	cbnz	x2, e204 <elf_update@@ELFUTILS_1.0+0x30bc>
    e02c:	cmp	w20, #0x0
    e030:	ccmp	x0, x28, #0x2, ne  // ne = any
    e034:	b.cc	e354 <elf_update@@ELFUTILS_1.0+0x320c>  // b.lo, b.ul, b.last
    e038:	ldr	x0, [x25, #32]
    e03c:	mov	w20, #0x0                   	// #0
    e040:	add	x0, x28, x0
    e044:	ldr	w1, [x27, #156]
    e048:	add	x22, x22, #0x8
    e04c:	and	w1, w1, #0xfffffffe
    e050:	str	w1, [x27, #156]
    e054:	ldr	x1, [sp, #96]
    e058:	cmp	x1, x22
    e05c:	b.ne	dff4 <elf_update@@ELFUTILS_1.0+0x2eac>  // b.any
    e060:	ldr	w1, [x26, #56]
    e064:	tbz	w1, #0, e088 <elf_update@@ELFUTILS_1.0+0x2f40>
    e068:	ldr	x2, [sp, #120]
    e06c:	ldr	x3, [x26, #40]
    e070:	ldr	x4, [x2, #40]
    e074:	ldr	x2, [x26]
    e078:	add	x3, x3, x4
    e07c:	add	x2, x2, x3
    e080:	cmp	x2, x0
    e084:	b.hi	e47c <elf_update@@ELFUTILS_1.0+0x3334>  // b.pmore
    e088:	adrp	x22, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    e08c:	add	x22, x22, #0xbd8
    e090:	b	e098 <elf_update@@ELFUTILS_1.0+0x2f50>
    e094:	ldr	w1, [x26, #56]
    e098:	ldr	x0, [sp, #112]
    e09c:	ldr	x20, [x0]
    e0a0:	ldr	w0, [x20, #152]
    e0a4:	orr	w1, w1, w0
    e0a8:	tbz	w1, #0, e120 <elf_update@@ELFUTILS_1.0+0x2fd8>
    e0ac:	ldr	x0, [x20, #128]
    e0b0:	ldr	x1, [x20, #144]
    e0b4:	add	x0, x19, x0, lsl #6
    e0b8:	cbnz	w21, e414 <elf_update@@ELFUTILS_1.0+0x32cc>
    e0bc:	ldp	x2, x3, [x1]
    e0c0:	stp	x2, x3, [x0]
    e0c4:	ldp	x2, x3, [x1, #16]
    e0c8:	stp	x2, x3, [x0, #16]
    e0cc:	ldp	x2, x3, [x1, #32]
    e0d0:	stp	x2, x3, [x0, #32]
    e0d4:	ldp	x2, x3, [x1, #48]
    e0d8:	stp	x2, x3, [x0, #48]
    e0dc:	ldr	w1, [x20, #152]
    e0e0:	ldr	w2, [x26, #124]
    e0e4:	and	w0, w1, #0x80
    e0e8:	orr	w0, w0, w2
    e0ec:	cbnz	w0, e118 <elf_update@@ELFUTILS_1.0+0x2fd0>
    e0f0:	ldr	x2, [x20, #128]
    e0f4:	ldr	x0, [x20, #144]
    e0f8:	add	x2, x19, x2, lsl #6
    e0fc:	cmp	x0, x2
    e100:	b.eq	e118 <elf_update@@ELFUTILS_1.0+0x2fd0>  // b.none
    e104:	bl	3200 <free@plt>
    e108:	ldr	x0, [x20, #128]
    e10c:	ldr	w1, [x20, #152]
    e110:	add	x0, x19, x0, lsl #6
    e114:	str	x0, [x20, #144]
    e118:	and	w1, w1, #0xfffffffe
    e11c:	str	w1, [x20, #152]
    e120:	ldr	x0, [sp, #112]
    e124:	ldr	x1, [sp, #96]
    e128:	add	x0, x0, #0x8
    e12c:	str	x0, [sp, #112]
    e130:	cmp	x1, x0
    e134:	b.ne	e094 <elf_update@@ELFUTILS_1.0+0x2f4c>  // b.any
    e138:	ldr	x0, [sp, #152]
    e13c:	bl	3200 <free@plt>
    e140:	ldp	x23, x24, [sp, #48]
    e144:	ldp	x27, x28, [sp, #80]
    e148:	ldr	x0, [x26]
    e14c:	str	x0, [sp, #144]
    e150:	ldr	x0, [x26, #40]
    e154:	str	x0, [sp, #104]
    e158:	ldr	w1, [x26, #56]
    e15c:	mov	w0, #0x1e                  	// #30
    e160:	and	w1, w1, #0xfffffffe
    e164:	str	w1, [x26, #56]
    e168:	bl	32d0 <sysconf@plt>
    e16c:	neg	x0, x0
    e170:	ldp	x2, x5, [sp, #120]
    e174:	ldr	x3, [sp, #104]
    e178:	ldr	x4, [x26, #40]
    e17c:	and	x0, x0, x3
    e180:	ldr	x1, [x2, #40]
    e184:	ldrh	w3, [x2, #58]
    e188:	add	x4, x4, x1
    e18c:	ldr	x1, [x26]
    e190:	ldr	x2, [sp, #144]
    e194:	madd	x26, x3, x5, x4
    e198:	add	x0, x2, x0
    e19c:	add	x1, x1, x26
    e1a0:	sub	x1, x1, x0
    e1a4:	mov	w2, #0x4                   	// #4
    e1a8:	bl	3040 <msync@plt>
    e1ac:	ldr	w0, [sp, #140]
    e1b0:	ldp	x19, x20, [sp, #16]
    e1b4:	ldp	x21, x22, [sp, #32]
    e1b8:	ldp	x25, x26, [sp, #64]
    e1bc:	ldp	x29, x30, [sp], #208
    e1c0:	ret
    e1c4:	ldr	x0, [sp, #152]
    e1c8:	bl	3200 <free@plt>
    e1cc:	mov	w1, #0xffffffff            	// #-1
    e1d0:	mov	w0, #0x8                   	// #8
    e1d4:	str	w1, [sp, #140]
    e1d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e1dc:	ldp	x23, x24, [sp, #48]
    e1e0:	ldp	x27, x28, [sp, #80]
    e1e4:	ldr	w0, [sp, #140]
    e1e8:	ldp	x19, x20, [sp, #16]
    e1ec:	ldp	x21, x22, [sp, #32]
    e1f0:	ldp	x25, x26, [sp, #64]
    e1f4:	ldp	x29, x30, [sp], #208
    e1f8:	ret
    e1fc:	mov	w20, #0x0                   	// #0
    e200:	b	dd58 <elf_update@@ELFUTILS_1.0+0x2c10>
    e204:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    e208:	mov	x24, x27
    e20c:	add	x1, x1, #0xbd8
    e210:	mov	w20, #0x0                   	// #0
    e214:	str	x1, [sp, #144]
    e218:	b	e23c <elf_update@@ELFUTILS_1.0+0x30f4>
    e21c:	mov	x0, x23
    e220:	mov	w20, #0x1                   	// #1
    e224:	cbnz	w21, e328 <elf_update@@ELFUTILS_1.0+0x31e0>
    e228:	cbnz	x2, e338 <elf_update@@ELFUTILS_1.0+0x31f0>
    e22c:	and	w1, w1, #0xfffffffe
    e230:	str	w1, [x24, #56]
    e234:	ldr	x24, [x24, #48]
    e238:	cbz	x24, e044 <elf_update@@ELFUTILS_1.0+0x2efc>
    e23c:	ldr	x1, [x24, #24]
    e240:	tbnz	x1, #63, e4e8 <elf_update@@ELFUTILS_1.0+0x33a0>
    e244:	ldr	x3, [x25, #32]
    e248:	mov	x10, x1
    e24c:	cmp	x1, x3
    e250:	b.hi	e508 <elf_update@@ELFUTILS_1.0+0x33c0>  // b.pmore
    e254:	ldr	x2, [x24, #16]
    e258:	sub	x1, x3, x1
    e25c:	cmp	x2, x1
    e260:	b.hi	e4a8 <elf_update@@ELFUTILS_1.0+0x3360>  // b.pmore
    e264:	add	x23, x28, x10
    e268:	cmp	x23, x0
    e26c:	b.ls	e2b4 <elf_update@@ELFUTILS_1.0+0x316c>  // b.plast
    e270:	cbz	x10, e28c <elf_update@@ELFUTILS_1.0+0x3144>
    e274:	ldr	w11, [x26, #56]
    e278:	ldr	w1, [x27, #156]
    e27c:	ldr	w3, [x24, #56]
    e280:	orr	w1, w1, w11
    e284:	orr	w1, w1, w3
    e288:	tbz	w1, #0, e2cc <elf_update@@ELFUTILS_1.0+0x3184>
    e28c:	cmp	x0, x19
    e290:	b.cs	e2fc <elf_update@@ELFUTILS_1.0+0x31b4>  // b.hs, b.nlast
    e294:	cmp	x23, x19
    e298:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    e29c:	b.cs	e2e8 <elf_update@@ELFUTILS_1.0+0x31a0>  // b.hs, b.nlast
    e2a0:	ldr	w1, [x1, #440]
    e2a4:	sub	x2, x23, x0
    e2a8:	bl	3100 <memset@plt>
    e2ac:	ldp	x2, x10, [x24, #16]
    e2b0:	add	x23, x28, x10
    e2b4:	ldr	w3, [x26, #56]
    e2b8:	ldr	w0, [x27, #156]
    e2bc:	ldr	w1, [x24, #56]
    e2c0:	orr	w0, w0, w3
    e2c4:	orr	w0, w0, w1
    e2c8:	tbnz	w0, #0, e21c <elf_update@@ELFUTILS_1.0+0x30d4>
    e2cc:	add	x0, x23, x2
    e2d0:	add	x2, x2, x10
    e2d4:	add	x2, x28, x2
    e2d8:	cmp	x0, x2
    e2dc:	b.ne	e4c8 <elf_update@@ELFUTILS_1.0+0x3380>  // b.any
    e2e0:	ldr	w1, [x24, #56]
    e2e4:	b	e22c <elf_update@@ELFUTILS_1.0+0x30e4>
    e2e8:	ldr	w1, [x1, #440]
    e2ec:	sub	x2, x19, x0
    e2f0:	bl	3100 <memset@plt>
    e2f4:	cmp	x23, x19
    e2f8:	b.eq	e2ac <elf_update@@ELFUTILS_1.0+0x3164>  // b.none
    e2fc:	ldr	x0, [sp, #104]
    e300:	cmp	x23, x0
    e304:	b.ls	e2ac <elf_update@@ELFUTILS_1.0+0x3164>  // b.plast
    e308:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    e30c:	ldr	x0, [sp, #104]
    e310:	ldr	w1, [x1, #440]
    e314:	cmp	x0, x28
    e318:	csel	x0, x0, x28, cs  // cs = hs, nlast
    e31c:	sub	x2, x23, x0
    e320:	bl	3100 <memset@plt>
    e324:	b	e2ac <elf_update@@ELFUTILS_1.0+0x3164>
    e328:	cbz	x2, e22c <elf_update@@ELFUTILS_1.0+0x30e4>
    e32c:	ldr	w0, [x24, #8]
    e330:	cbnz	w0, e428 <elf_update@@ELFUTILS_1.0+0x32e0>
    e334:	nop
    e338:	ldr	x1, [x24]
    e33c:	mov	x0, x23
    e340:	mov	w20, #0x1                   	// #1
    e344:	bl	3030 <memmove@plt>
    e348:	ldp	x2, x10, [x24, #16]
    e34c:	add	x0, x23, x2
    e350:	b	e2d0 <elf_update@@ELFUTILS_1.0+0x3188>
    e354:	cmp	x0, x19
    e358:	b.cs	e38c <elf_update@@ELFUTILS_1.0+0x3244>  // b.hs, b.nlast
    e35c:	cmp	x19, x28
    e360:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    e364:	b.ls	e378 <elf_update@@ELFUTILS_1.0+0x3230>  // b.plast
    e368:	ldr	w1, [x1, #440]
    e36c:	sub	x2, x28, x0
    e370:	bl	3100 <memset@plt>
    e374:	b	e038 <elf_update@@ELFUTILS_1.0+0x2ef0>
    e378:	ldr	w1, [x1, #440]
    e37c:	sub	x2, x19, x0
    e380:	bl	3100 <memset@plt>
    e384:	cmp	x19, x28
    e388:	b.eq	e038 <elf_update@@ELFUTILS_1.0+0x2ef0>  // b.none
    e38c:	ldr	x0, [sp, #104]
    e390:	cmp	x0, x28
    e394:	b.cs	e038 <elf_update@@ELFUTILS_1.0+0x2ef0>  // b.hs, b.nlast
    e398:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    e39c:	mov	x0, x28
    e3a0:	mov	x2, #0x0                   	// #0
    e3a4:	ldr	w1, [x1, #440]
    e3a8:	bl	3100 <memset@plt>
    e3ac:	b	e038 <elf_update@@ELFUTILS_1.0+0x2ef0>
    e3b0:	mov	w0, #0xffffffff            	// #-1
    e3b4:	str	w0, [sp, #140]
    e3b8:	b	e1e4 <elf_update@@ELFUTILS_1.0+0x309c>
    e3bc:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    e3c0:	add	x3, x4, x3
    e3c4:	add	x0, x0, x3
    e3c8:	sub	x2, x2, x4
    e3cc:	ldr	w1, [x1, #440]
    e3d0:	bl	3100 <memset@plt>
    e3d4:	ldr	x1, [sp, #120]
    e3d8:	ldr	x0, [x26]
    e3dc:	ldr	x2, [x1, #32]
    e3e0:	ldr	x3, [x26, #40]
    e3e4:	ldr	x1, [x26, #88]
    e3e8:	b	ddb8 <elf_update@@ELFUTILS_1.0+0x2c70>
    e3ec:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    e3f0:	mov	w3, #0x1                   	// #1
    e3f4:	ldr	x4, [x1, #3272]
    e3f8:	ldr	x1, [sp, #120]
    e3fc:	blr	x4
    e400:	ldr	w1, [x26, #116]
    e404:	b	dd44 <elf_update@@ELFUTILS_1.0+0x2bfc>
    e408:	mov	w0, #0x1                   	// #1
    e40c:	str	w0, [sp, #140]
    e410:	b	e1e4 <elf_update@@ELFUTILS_1.0+0x309c>
    e414:	ldr	x4, [x22, #288]
    e418:	mov	w3, #0x1                   	// #1
    e41c:	mov	x2, #0x40                  	// #64
    e420:	blr	x4
    e424:	b	e0dc <elf_update@@ELFUTILS_1.0+0x2f94>
    e428:	mov	w3, w0
    e42c:	ldr	x0, [sp, #160]
    e430:	add	x0, x0, x3
    e434:	ldrb	w0, [x0, #27]
    e438:	cmp	w0, #0x0
    e43c:	csel	w1, w20, w0, eq  // eq = none
    e440:	and	x1, x1, #0xff
    e444:	sub	x10, x1, #0x1
    e448:	tst	x23, x10
    e44c:	b.ne	e528 <elf_update@@ELFUTILS_1.0+0x33e0>  // b.any
    e450:	ldr	x4, [sp, #144]
    e454:	add	x0, x3, #0x1b
    e458:	ldr	x1, [x24]
    e45c:	mov	w3, w20
    e460:	ldr	x10, [x4, x0, lsl #3]
    e464:	mov	x0, x23
    e468:	blr	x10
    e46c:	ldp	x2, x10, [x24, #16]
    e470:	mov	w20, #0x1                   	// #1
    e474:	add	x0, x23, x2
    e478:	b	e2d0 <elf_update@@ELFUTILS_1.0+0x3188>
    e47c:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15e08>
    e480:	sub	x2, x2, x0
    e484:	ldr	w1, [x1, #440]
    e488:	bl	3100 <memset@plt>
    e48c:	ldr	w1, [x26, #56]
    e490:	b	e088 <elf_update@@ELFUTILS_1.0+0x2f40>
    e494:	adrp	x3, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    e498:	ldr	x4, [x3, #3296]
    e49c:	mov	w3, #0x1                   	// #1
    e4a0:	blr	x4
    e4a4:	b	ddd8 <elf_update@@ELFUTILS_1.0+0x2c90>
    e4a8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4ac:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4b0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4b4:	add	x3, x3, #0x5d8
    e4b8:	add	x1, x1, #0x330
    e4bc:	add	x0, x0, #0x518
    e4c0:	mov	w2, #0x141                 	// #321
    e4c4:	bl	3330 <__assert_fail@plt>
    e4c8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4cc:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4d0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4d4:	add	x3, x3, #0x5d8
    e4d8:	add	x1, x1, #0x330
    e4dc:	add	x0, x0, #0x560
    e4e0:	mov	w2, #0x197                 	// #407
    e4e4:	bl	3330 <__assert_fail@plt>
    e4e8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4ec:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4f0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e4f4:	add	x3, x3, #0x5d8
    e4f8:	add	x1, x1, #0x330
    e4fc:	add	x0, x0, #0x4d0
    e500:	mov	w2, #0x13f                 	// #319
    e504:	bl	3330 <__assert_fail@plt>
    e508:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e50c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e510:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e514:	add	x3, x3, #0x5d8
    e518:	add	x1, x1, #0x330
    e51c:	add	x0, x0, #0x4e8
    e520:	mov	w2, #0x140                 	// #320
    e524:	bl	3330 <__assert_fail@plt>
    e528:	str	x3, [sp, #184]
    e52c:	cmp	w0, #0x7
    e530:	b.hi	e588 <elf_update@@ELFUTILS_1.0+0x3440>  // b.pmore
    e534:	mov	x0, x2
    e538:	str	x2, [sp, #176]
    e53c:	bl	30c0 <malloc@plt>
    e540:	mov	x20, x0
    e544:	ldp	x2, x3, [sp, #176]
    e548:	cbz	x20, e59c <elf_update@@ELFUTILS_1.0+0x3454>
    e54c:	ldr	x4, [sp, #144]
    e550:	add	x0, x3, #0x1b
    e554:	ldr	x1, [x24]
    e558:	mov	w3, #0x1                   	// #1
    e55c:	ldr	x10, [x4, x0, lsl #3]
    e560:	mov	x0, x20
    e564:	str	x2, [sp, #176]
    e568:	blr	x10
    e56c:	ldr	x2, [sp, #176]
    e570:	mov	x1, x20
    e574:	mov	x0, x23
    e578:	bl	3020 <memcpy@plt>
    e57c:	mov	x0, x20
    e580:	bl	3200 <free@plt>
    e584:	b	e46c <elf_update@@ELFUTILS_1.0+0x3324>
    e588:	ldr	x0, [sp, #168]
    e58c:	str	x2, [sp, #176]
    e590:	bl	3130 <posix_memalign@plt>
    e594:	ldp	x2, x3, [sp, #176]
    e598:	cbz	w0, e5c0 <elf_update@@ELFUTILS_1.0+0x3478>
    e59c:	ldr	x0, [sp, #152]
    e5a0:	bl	3200 <free@plt>
    e5a4:	mov	w1, #0x1                   	// #1
    e5a8:	mov	w0, #0x8                   	// #8
    e5ac:	str	w1, [sp, #140]
    e5b0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e5b4:	ldp	x23, x24, [sp, #48]
    e5b8:	ldp	x27, x28, [sp, #80]
    e5bc:	b	e1e4 <elf_update@@ELFUTILS_1.0+0x309c>
    e5c0:	ldr	x20, [sp, #200]
    e5c4:	b	e548 <elf_update@@ELFUTILS_1.0+0x3400>
    e5c8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e5cc:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e5d0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e5d4:	add	x3, x3, #0x5d8
    e5d8:	add	x1, x1, #0x330
    e5dc:	add	x0, x0, #0x348
    e5e0:	mov	w2, #0x8c                  	// #140
    e5e4:	stp	x23, x24, [sp, #48]
    e5e8:	stp	x27, x28, [sp, #80]
    e5ec:	bl	3330 <__assert_fail@plt>
    e5f0:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e5f4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e5f8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e5fc:	add	x3, x3, #0x5d8
    e600:	add	x1, x1, #0x330
    e604:	add	x0, x0, #0x398
    e608:	mov	w2, #0xaf                  	// #175
    e60c:	stp	x23, x24, [sp, #48]
    e610:	stp	x27, x28, [sp, #80]
    e614:	bl	3330 <__assert_fail@plt>
    e618:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e61c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e620:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e624:	add	x3, x3, #0x5d8
    e628:	add	x1, x1, #0x330
    e62c:	add	x0, x0, #0x4b0
    e630:	mov	w2, #0x12f                 	// #303
    e634:	bl	3330 <__assert_fail@plt>
    e638:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e63c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e640:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e644:	add	x3, x3, #0x5d8
    e648:	add	x1, x1, #0x330
    e64c:	add	x0, x0, #0x3e8
    e650:	mov	w2, #0xf8                  	// #248
    e654:	bl	3330 <__assert_fail@plt>
    e658:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e65c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e660:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    e664:	add	x3, x3, #0x5d8
    e668:	add	x1, x1, #0x330
    e66c:	add	x0, x0, #0x440
    e670:	mov	w2, #0xfa                  	// #250
    e674:	bl	3330 <__assert_fail@plt>
    e678:	mov	x12, #0x9100                	// #37120
    e67c:	sub	sp, sp, x12
    e680:	stp	x29, x30, [sp]
    e684:	mov	x29, sp
    e688:	stp	x19, x20, [sp, #16]
    e68c:	mov	x19, x0
    e690:	stp	x21, x22, [sp, #32]
    e694:	str	w1, [sp, #124]
    e698:	ldr	w1, [x0, #56]
    e69c:	ldr	x22, [x0, #72]
    e6a0:	stp	x23, x24, [sp, #48]
    e6a4:	ldr	w0, [x0, #116]
    e6a8:	stp	x25, x26, [sp, #64]
    e6ac:	orr	w0, w0, w1
    e6b0:	and	w1, w0, #0x1
    e6b4:	str	w1, [sp, #144]
    e6b8:	str	x2, [sp, #152]
    e6bc:	str	xzr, [sp, #240]
    e6c0:	tbz	w0, #0, e784 <elf_update@@ELFUTILS_1.0+0x363c>
    e6c4:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    e6c8:	str	x0, [sp, #104]
    e6cc:	add	x0, x0, #0xcf8
    e6d0:	ldr	x2, [x0, #240]
    e6d4:	cmp	x2, #0x40
    e6d8:	b.ne	ee10 <elf_update@@ELFUTILS_1.0+0x3cc8>  // b.any
    e6dc:	ldr	w0, [sp, #124]
    e6e0:	mov	x21, x22
    e6e4:	cbnz	w0, ee38 <elf_update@@ELFUTILS_1.0+0x3cf0>
    e6e8:	ldr	w25, [x19, #36]
    e6ec:	mov	x26, x21
    e6f0:	mov	x20, #0x0                   	// #0
    e6f4:	mov	x23, #0x40                  	// #64
    e6f8:	mov	x3, x20
    e6fc:	sub	x2, x23, x20
    e700:	mov	x1, x26
    e704:	mov	w0, w25
    e708:	bl	3220 <pwrite@plt>
    e70c:	cmn	x0, #0x1
    e710:	b.eq	e748 <elf_update@@ELFUTILS_1.0+0x3600>  // b.none
    e714:	cmp	x0, #0x0
    e718:	b.le	e758 <elf_update@@ELFUTILS_1.0+0x3610>
    e71c:	add	x20, x20, x0
    e720:	cmp	x20, #0x3f
    e724:	b.gt	eaec <elf_update@@ELFUTILS_1.0+0x39a4>
    e728:	add	x26, x21, x20
    e72c:	mov	x3, x20
    e730:	sub	x2, x23, x20
    e734:	mov	x1, x26
    e738:	mov	w0, w25
    e73c:	bl	3220 <pwrite@plt>
    e740:	cmn	x0, #0x1
    e744:	b.ne	e714 <elf_update@@ELFUTILS_1.0+0x35cc>  // b.any
    e748:	bl	3340 <__errno_location@plt>
    e74c:	ldr	w0, [x0]
    e750:	cmp	w0, #0x4
    e754:	b.eq	e6f8 <elf_update@@ELFUTILS_1.0+0x35b0>  // b.none
    e758:	mov	w0, #0x14                  	// #20
    e75c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e760:	ldr	w0, [sp, #144]
    e764:	mov	x12, #0x9100                	// #37120
    e768:	ldp	x29, x30, [sp]
    e76c:	ldp	x19, x20, [sp, #16]
    e770:	ldp	x21, x22, [sp, #32]
    e774:	ldp	x23, x24, [sp, #48]
    e778:	ldp	x25, x26, [sp, #64]
    e77c:	add	sp, sp, x12
    e780:	ret
    e784:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
    e788:	str	x0, [sp, #104]
    e78c:	str	wzr, [sp, #132]
    e790:	ldr	x0, [sp, #104]
    e794:	add	x0, x0, #0xcf8
    e798:	ldr	x0, [x0, #264]
    e79c:	cmp	x0, #0x38
    e7a0:	b.ne	ef88 <elf_update@@ELFUTILS_1.0+0x3e40>  // b.any
    e7a4:	add	x1, sp, #0xf8
    e7a8:	mov	x0, x19
    e7ac:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    e7b0:	str	w0, [sp, #144]
    e7b4:	cbnz	w0, edb0 <elf_update@@ELFUTILS_1.0+0x3c68>
    e7b8:	ldr	x21, [x19, #88]
    e7bc:	stp	x27, x28, [sp, #80]
    e7c0:	cbz	x21, ed18 <elf_update@@ELFUTILS_1.0+0x3bd0>
    e7c4:	ldr	w1, [x19, #56]
    e7c8:	ldr	w0, [x19, #120]
    e7cc:	ldr	x2, [x22, #32]
    e7d0:	orr	w0, w0, w1
    e7d4:	and	w27, w0, #0x1
    e7d8:	tbz	w0, #0, e8d4 <elf_update@@ELFUTILS_1.0+0x378c>
    e7dc:	ldrh	w1, [x22, #52]
    e7e0:	cmp	x1, x2
    e7e4:	b.cc	ed88 <elf_update@@ELFUTILS_1.0+0x3c40>  // b.lo, b.ul, b.last
    e7e8:	ldr	x0, [sp, #248]
    e7ec:	lsl	x20, x0, #3
    e7f0:	sub	x20, x20, x0
    e7f4:	ldr	w0, [sp, #124]
    e7f8:	lsl	x20, x20, #3
    e7fc:	cbnz	w0, ef14 <elf_update@@ELFUTILS_1.0+0x3dcc>
    e800:	str	xzr, [sp, #112]
    e804:	ldr	x0, [x22, #32]
    e808:	mov	x25, x20
    e80c:	ldr	w23, [x19, #36]
    e810:	mov	x24, x21
    e814:	mov	x28, x0
    e818:	mov	x26, #0x0                   	// #0
    e81c:	str	x0, [sp, #96]
    e820:	mov	x3, x28
    e824:	mov	x2, x25
    e828:	mov	x1, x24
    e82c:	mov	w0, w23
    e830:	bl	3220 <pwrite@plt>
    e834:	cmn	x0, #0x1
    e838:	b.eq	e87c <elf_update@@ELFUTILS_1.0+0x3734>  // b.none
    e83c:	cmp	x0, #0x0
    e840:	b.le	e8a0 <elf_update@@ELFUTILS_1.0+0x3758>
    e844:	add	x26, x26, x0
    e848:	cmp	x26, x20
    e84c:	b.cs	e8a4 <elf_update@@ELFUTILS_1.0+0x375c>  // b.hs, b.nlast
    e850:	ldr	x0, [sp, #96]
    e854:	sub	x25, x20, x26
    e858:	add	x24, x21, x26
    e85c:	mov	x2, x25
    e860:	add	x28, x0, x26
    e864:	mov	x1, x24
    e868:	mov	x3, x28
    e86c:	mov	w0, w23
    e870:	bl	3220 <pwrite@plt>
    e874:	cmn	x0, #0x1
    e878:	b.ne	e83c <elf_update@@ELFUTILS_1.0+0x36f4>  // b.any
    e87c:	bl	3340 <__errno_location@plt>
    e880:	ldr	w0, [x0]
    e884:	cmp	w0, #0x4
    e888:	b.eq	e820 <elf_update@@ELFUTILS_1.0+0x36d8>  // b.none
    e88c:	mov	w0, #0x14                  	// #20
    e890:	str	w27, [sp, #144]
    e894:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e898:	ldp	x27, x28, [sp, #80]
    e89c:	b	e760 <elf_update@@ELFUTILS_1.0+0x3618>
    e8a0:	csel	x26, x26, x0, eq  // eq = none
    e8a4:	cmp	x20, x26
    e8a8:	b.ne	e88c <elf_update@@ELFUTILS_1.0+0x3744>  // b.any
    e8ac:	ldr	x0, [sp, #112]
    e8b0:	bl	3200 <free@plt>
    e8b4:	ldr	w0, [x19, #120]
    e8b8:	ldr	x1, [x19, #88]
    e8bc:	and	w0, w0, #0xfffffffe
    e8c0:	str	w0, [x19, #120]
    e8c4:	mov	w0, #0x1                   	// #1
    e8c8:	str	w0, [sp, #132]
    e8cc:	cbz	x1, ed18 <elf_update@@ELFUTILS_1.0+0x3bd0>
    e8d0:	ldr	x2, [x22, #32]
    e8d4:	ldr	x21, [sp, #248]
    e8d8:	lsl	x5, x21, #3
    e8dc:	sub	x5, x5, x21
    e8e0:	add	x21, x2, x5, lsl #3
    e8e4:	ldr	x1, [sp, #152]
    e8e8:	cbz	x1, e958 <elf_update@@ELFUTILS_1.0+0x3810>
    e8ec:	mov	x0, #0xe38e                	// #58254
    e8f0:	movk	x0, #0x8e38, lsl #16
    e8f4:	movk	x0, #0x38e3, lsl #32
    e8f8:	movk	x0, #0x38e, lsl #48
    e8fc:	cmp	x1, x0
    e900:	b.hi	eda0 <elf_update@@ELFUTILS_1.0+0x3c58>  // b.pmore
    e904:	ldr	x0, [x22, #40]
    e908:	str	x0, [sp, #232]
    e90c:	ldr	x0, [x19, #40]
    e910:	str	x0, [sp, #224]
    e914:	ldr	w0, [sp, #124]
    e918:	cbnz	w0, e96c <elf_update@@ELFUTILS_1.0+0x3824>
    e91c:	ldr	x0, [x19, #80]
    e920:	str	x0, [sp, #176]
    e924:	cbz	x0, e96c <elf_update@@ELFUTILS_1.0+0x3824>
    e928:	ldr	w0, [x19, #56]
    e92c:	str	w0, [sp, #136]
    e930:	tbnz	w0, #0, e96c <elf_update@@ELFUTILS_1.0+0x3824>
    e934:	str	xzr, [sp, #208]
    e938:	b	e98c <elf_update@@ELFUTILS_1.0+0x3844>
    e93c:	csel	x0, x26, x0, eq  // eq = none
    e940:	cmp	x20, x0
    e944:	b.ne	ecf0 <elf_update@@ELFUTILS_1.0+0x3ba8>  // b.any
    e948:	ldr	x0, [sp, #208]
    e94c:	bl	3200 <free@plt>
    e950:	ldr	x0, [sp, #200]
    e954:	bl	3200 <free@plt>
    e958:	ldr	w0, [x19, #56]
    e95c:	ldp	x27, x28, [sp, #80]
    e960:	and	w0, w0, #0xfffffffe
    e964:	str	w0, [x19, #56]
    e968:	b	e760 <elf_update@@ELFUTILS_1.0+0x3618>
    e96c:	ldr	x0, [sp, #152]
    e970:	lsl	x0, x0, #6
    e974:	bl	30c0 <malloc@plt>
    e978:	str	x0, [sp, #176]
    e97c:	cbz	x0, edd4 <elf_update@@ELFUTILS_1.0+0x3c8c>
    e980:	str	x0, [sp, #208]
    e984:	ldr	w0, [x19, #56]
    e988:	str	w0, [sp, #136]
    e98c:	ldr	x0, [sp, #152]
    e990:	add	x22, x19, #0xc8
    e994:	lsl	x20, x0, #3
    e998:	mov	x0, x20
    e99c:	bl	30c0 <malloc@plt>
    e9a0:	str	x0, [sp, #200]
    e9a4:	cbz	x0, edcc <elf_update@@ELFUTILS_1.0+0x3c84>
    e9a8:	mov	x1, x22
    e9ac:	ldr	x22, [sp, #200]
    e9b0:	add	x2, x20, x22
    e9b4:	str	x2, [sp, #160]
    e9b8:	bl	db08 <elf_update@@ELFUTILS_1.0+0x29c0>
    e9bc:	str	x22, [sp, #112]
    e9c0:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    e9c4:	mov	x1, #0x1100                	// #4352
    e9c8:	add	x0, x0, #0xbd8
    e9cc:	add	x1, sp, x1
    e9d0:	mov	x22, x21
    e9d4:	str	x1, [sp, #168]
    e9d8:	str	x0, [sp, #216]
    e9dc:	b	ea60 <elf_update@@ELFUTILS_1.0+0x3918>
    e9e0:	ldr	w0, [x21, #156]
    e9e4:	tbnz	w0, #0, efb0 <elf_update@@ELFUTILS_1.0+0x3e68>
    e9e8:	ldr	w0, [sp, #124]
    e9ec:	cbnz	w0, eac4 <elf_update@@ELFUTILS_1.0+0x397c>
    e9f0:	ldr	x0, [x19, #80]
    e9f4:	cbz	x0, ea00 <elf_update@@ELFUTILS_1.0+0x38b8>
    e9f8:	ldr	w0, [x19, #56]
    e9fc:	tbz	w0, #0, ea30 <elf_update@@ELFUTILS_1.0+0x38e8>
    ea00:	ldr	x0, [x21, #128]
    ea04:	ldr	x2, [sp, #176]
    ea08:	ldr	x1, [x21, #144]
    ea0c:	add	x0, x2, x0, lsl #6
    ea10:	ldp	x2, x3, [x1]
    ea14:	stp	x2, x3, [x0]
    ea18:	ldp	x2, x3, [x1, #16]
    ea1c:	stp	x2, x3, [x0, #16]
    ea20:	ldp	x2, x3, [x1, #32]
    ea24:	stp	x2, x3, [x0, #32]
    ea28:	ldp	x2, x3, [x1, #48]
    ea2c:	stp	x2, x3, [x0, #48]
    ea30:	ldr	w0, [x21, #152]
    ea34:	ldr	x1, [sp, #112]
    ea38:	add	x2, x1, #0x8
    ea3c:	and	w1, w0, #0xfffffffe
    ea40:	str	w1, [x21, #152]
    ea44:	ldr	x1, [sp, #160]
    ea48:	str	x2, [sp, #112]
    ea4c:	cmp	x1, x2
    ea50:	ldr	w1, [sp, #136]
    ea54:	orr	w0, w1, w0
    ea58:	str	w0, [sp, #136]
    ea5c:	b.eq	ee5c <elf_update@@ELFUTILS_1.0+0x3d14>  // b.none
    ea60:	ldr	x0, [sp, #112]
    ea64:	ldr	x21, [x0]
    ea68:	ldr	x0, [x21, #128]
    ea6c:	cbz	x0, e9e0 <elf_update@@ELFUTILS_1.0+0x3898>
    ea70:	ldr	x20, [x21, #144]
    ea74:	ldr	w0, [x20, #4]
    ea78:	cmp	w0, #0x8
    ea7c:	b.eq	e9e8 <elf_update@@ELFUTILS_1.0+0x38a0>  // b.none
    ea80:	ldr	x1, [x20, #24]
    ea84:	ldr	x26, [x19, #40]
    ea88:	ldr	x0, [x21, #64]
    ea8c:	add	x1, x26, x1
    ea90:	str	x1, [sp, #104]
    ea94:	cbnz	x0, eb14 <elf_update@@ELFUTILS_1.0+0x39cc>
    ea98:	ldr	w0, [sp, #132]
    ea9c:	cmp	w0, #0x0
    eaa0:	ldr	x0, [sp, #104]
    eaa4:	ccmp	x22, x0, #0x0, ne  // ne = any
    eaa8:	b.lt	ed64 <elf_update@@ELFUTILS_1.0+0x3c1c>  // b.tstop
    eaac:	ldr	x5, [x20, #32]
    eab0:	str	wzr, [sp, #132]
    eab4:	ldr	x0, [sp, #104]
    eab8:	add	x22, x0, x5
    eabc:	ldr	w0, [sp, #124]
    eac0:	cbz	w0, e9f0 <elf_update@@ELFUTILS_1.0+0x38a8>
    eac4:	ldr	x4, [sp, #216]
    eac8:	mov	w3, #0x1                   	// #1
    eacc:	ldr	x0, [x21, #128]
    ead0:	mov	x2, #0x40                  	// #64
    ead4:	ldr	x1, [x21, #144]
    ead8:	ldr	x5, [sp, #176]
    eadc:	ldr	x4, [x4, #288]
    eae0:	add	x0, x5, x0, lsl #6
    eae4:	blr	x4
    eae8:	b	ea30 <elf_update@@ELFUTILS_1.0+0x38e8>
    eaec:	cmp	x20, #0x40
    eaf0:	b.ne	e758 <elf_update@@ELFUTILS_1.0+0x3610>  // b.any
    eaf4:	ldr	x1, [x19, #88]
    eaf8:	ldr	w0, [x19, #116]
    eafc:	cmp	x1, #0x0
    eb00:	and	w0, w0, #0xfffffffe
    eb04:	cset	w1, eq  // eq = none
    eb08:	str	w0, [x19, #116]
    eb0c:	str	w1, [sp, #132]
    eb10:	b	e790 <elf_update@@ELFUTILS_1.0+0x3648>
    eb14:	add	x0, sp, #0xf0
    eb18:	mov	x1, x22
    eb1c:	mov	w20, #0x0                   	// #0
    eb20:	mov	x22, x21
    eb24:	str	x19, [sp, #96]
    eb28:	str	x0, [sp, #184]
    eb2c:	add	x0, sp, #0x100
    eb30:	str	x0, [sp, #192]
    eb34:	b	eb7c <elf_update@@ELFUTILS_1.0+0x3a34>
    eb38:	cmp	x0, #0x0
    eb3c:	ldr	w0, [sp, #132]
    eb40:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    eb44:	b.ne	ec9c <elf_update@@ELFUTILS_1.0+0x3b54>  // b.any
    eb48:	ldr	x0, [sp, #96]
    eb4c:	ldr	w2, [x21, #156]
    eb50:	ldr	w3, [x0, #56]
    eb54:	ldr	w0, [x22, #56]
    eb58:	orr	w2, w2, w3
    eb5c:	orr	w2, w2, w0
    eb60:	tbnz	w2, #0, ec9c <elf_update@@ELFUTILS_1.0+0x3b54>
    eb64:	ldr	x27, [x22, #16]
    eb68:	and	w0, w0, #0xfffffffe
    eb6c:	str	w0, [x22, #56]
    eb70:	add	x1, x26, x27
    eb74:	ldr	x22, [x22, #48]
    eb78:	cbz	x22, edbc <elf_update@@ELFUTILS_1.0+0x3c74>
    eb7c:	ldr	x0, [x22, #24]
    eb80:	ldr	x2, [sp, #104]
    eb84:	add	x26, x0, x2
    eb88:	cmp	x26, x1
    eb8c:	b.gt	eb38 <elf_update@@ELFUTILS_1.0+0x39f0>
    eb90:	ldr	x0, [sp, #96]
    eb94:	ldr	w1, [x21, #156]
    eb98:	ldr	x27, [x22, #16]
    eb9c:	ldr	w2, [x0, #56]
    eba0:	ldr	w0, [x22, #56]
    eba4:	orr	w1, w1, w2
    eba8:	orr	w1, w1, w0
    ebac:	tbz	w1, #0, eb68 <elf_update@@ELFUTILS_1.0+0x3a20>
    ebb0:	ldr	w0, [sp, #124]
    ebb4:	ldr	x20, [x22]
    ebb8:	cbnz	w0, ed28 <elf_update@@ELFUTILS_1.0+0x3be0>
    ebbc:	ldr	x0, [sp, #168]
    ebc0:	cmp	x20, x0
    ebc4:	cset	w0, ne  // ne = any
    ebc8:	str	w0, [sp, #148]
    ebcc:	ldr	x0, [sp, #96]
    ebd0:	mov	x25, x26
    ebd4:	mov	x19, x27
    ebd8:	mov	x24, x20
    ebdc:	mov	x28, #0x0                   	// #0
    ebe0:	ldr	w0, [x0, #36]
    ebe4:	str	w0, [sp, #128]
    ebe8:	ldr	w0, [sp, #128]
    ebec:	mov	x3, x25
    ebf0:	mov	x2, x19
    ebf4:	mov	x1, x24
    ebf8:	bl	3220 <pwrite@plt>
    ebfc:	mov	x23, x0
    ec00:	cmn	x0, #0x1
    ec04:	b.eq	ec4c <elf_update@@ELFUTILS_1.0+0x3b04>  // b.none
    ec08:	cmp	x0, #0x0
    ec0c:	b.le	ecc4 <elf_update@@ELFUTILS_1.0+0x3b7c>
    ec10:	add	x28, x28, x0
    ec14:	cmp	x27, x28
    ec18:	mov	x2, x28
    ec1c:	b.ls	ec60 <elf_update@@ELFUTILS_1.0+0x3b18>  // b.plast
    ec20:	ldr	w0, [sp, #128]
    ec24:	add	x25, x26, x28
    ec28:	sub	x19, x27, x28
    ec2c:	add	x24, x20, x28
    ec30:	mov	x3, x25
    ec34:	mov	x2, x19
    ec38:	mov	x1, x24
    ec3c:	bl	3220 <pwrite@plt>
    ec40:	mov	x23, x0
    ec44:	cmn	x0, #0x1
    ec48:	b.ne	ec08 <elf_update@@ELFUTILS_1.0+0x3ac0>  // b.any
    ec4c:	bl	3340 <__errno_location@plt>
    ec50:	ldr	w0, [x0]
    ec54:	cmp	w0, #0x4
    ec58:	b.eq	ebe8 <elf_update@@ELFUTILS_1.0+0x3aa0>  // b.none
    ec5c:	mov	x2, x23
    ec60:	ldr	x0, [x22]
    ec64:	ldr	x4, [x22, #16]
    ec68:	cmp	x0, x20
    ec6c:	ldr	w0, [sp, #148]
    ec70:	csel	w27, w0, wzr, ne  // ne = any
    ec74:	cmp	x4, x2
    ec78:	b.ne	ece4 <elf_update@@ELFUTILS_1.0+0x3b9c>  // b.any
    ec7c:	cbz	w27, ec8c <elf_update@@ELFUTILS_1.0+0x3b44>
    ec80:	mov	x0, x20
    ec84:	bl	3200 <free@plt>
    ec88:	ldr	x4, [x22, #16]
    ec8c:	mov	x27, x4
    ec90:	ldr	w0, [x22, #56]
    ec94:	mov	w20, #0x1                   	// #1
    ec98:	b	eb68 <elf_update@@ELFUTILS_1.0+0x3a20>
    ec9c:	ldr	x0, [sp, #96]
    eca0:	sub	x2, x26, x1
    eca4:	ldp	x4, x3, [sp, #184]
    eca8:	ldr	w0, [x0, #36]
    ecac:	bl	db50 <elf_update@@ELFUTILS_1.0+0x2a08>
    ecb0:	cbnz	w0, ecf8 <elf_update@@ELFUTILS_1.0+0x3bb0>
    ecb4:	ldr	x7, [x22, #24]
    ecb8:	ldr	x0, [sp, #104]
    ecbc:	add	x26, x0, x7
    ecc0:	b	eb90 <elf_update@@ELFUTILS_1.0+0x3a48>
    ecc4:	csel	x2, x28, x0, eq  // eq = none
    ecc8:	ldr	x0, [x22]
    eccc:	ldr	x4, [x22, #16]
    ecd0:	cmp	x0, x20
    ecd4:	ldr	w0, [sp, #148]
    ecd8:	csel	w27, w0, wzr, ne  // ne = any
    ecdc:	cmp	x4, x2
    ece0:	b.eq	ec7c <elf_update@@ELFUTILS_1.0+0x3b34>  // b.none
    ece4:	cbz	w27, ecf0 <elf_update@@ELFUTILS_1.0+0x3ba8>
    ece8:	mov	x0, x20
    ecec:	bl	3200 <free@plt>
    ecf0:	mov	w0, #0x14                  	// #20
    ecf4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ecf8:	ldr	x0, [sp, #208]
    ecfc:	mov	w1, #0x1                   	// #1
    ed00:	str	w1, [sp, #144]
    ed04:	bl	3200 <free@plt>
    ed08:	ldr	x0, [sp, #200]
    ed0c:	bl	3200 <free@plt>
    ed10:	ldp	x27, x28, [sp, #80]
    ed14:	b	e760 <elf_update@@ELFUTILS_1.0+0x3618>
    ed18:	ldr	x0, [sp, #104]
    ed1c:	add	x24, x0, #0xcf8
    ed20:	ldr	x21, [x24, #240]
    ed24:	b	e8e4 <elf_update@@ELFUTILS_1.0+0x379c>
    ed28:	str	wzr, [sp, #148]
    ed2c:	cmp	x27, #0x8, lsl #12
    ed30:	ldr	x0, [sp, #168]
    ed34:	b.hi	edec <elf_update@@ELFUTILS_1.0+0x3ca4>  // b.pmore
    ed38:	ldr	w6, [x22, #8]
    ed3c:	mov	x2, x27
    ed40:	ldr	x5, [sp, #216]
    ed44:	add	x4, x6, #0x1b
    ed48:	mov	x1, x20
    ed4c:	mov	w3, #0x1                   	// #1
    ed50:	mov	x20, x0
    ed54:	ldr	x4, [x5, x4, lsl #3]
    ed58:	blr	x4
    ed5c:	ldr	x27, [x22, #16]
    ed60:	b	ebcc <elf_update@@ELFUTILS_1.0+0x3a84>
    ed64:	ldr	w0, [x19, #36]
    ed68:	add	x4, sp, #0xf0
    ed6c:	ldr	x1, [sp, #104]
    ed70:	add	x3, sp, #0x100
    ed74:	sub	x2, x1, x22
    ed78:	mov	x1, x22
    ed7c:	bl	db50 <elf_update@@ELFUTILS_1.0+0x2a08>
    ed80:	cbz	w0, eaac <elf_update@@ELFUTILS_1.0+0x3964>
    ed84:	b	ecf8 <elf_update@@ELFUTILS_1.0+0x3bb0>
    ed88:	ldr	w0, [x19, #36]
    ed8c:	sub	x2, x2, x1
    ed90:	add	x4, sp, #0xf0
    ed94:	add	x3, sp, #0x100
    ed98:	bl	db50 <elf_update@@ELFUTILS_1.0+0x2a08>
    ed9c:	cbz	w0, e7e8 <elf_update@@ELFUTILS_1.0+0x36a0>
    eda0:	mov	w0, #0x1                   	// #1
    eda4:	str	w0, [sp, #144]
    eda8:	ldp	x27, x28, [sp, #80]
    edac:	b	e760 <elf_update@@ELFUTILS_1.0+0x3618>
    edb0:	mov	w0, #0xffffffff            	// #-1
    edb4:	str	w0, [sp, #144]
    edb8:	b	e760 <elf_update@@ELFUTILS_1.0+0x3618>
    edbc:	mov	x22, x1
    edc0:	str	w20, [sp, #132]
    edc4:	ldr	x19, [sp, #96]
    edc8:	b	e9e8 <elf_update@@ELFUTILS_1.0+0x38a0>
    edcc:	ldr	x0, [sp, #208]
    edd0:	bl	3200 <free@plt>
    edd4:	mov	w1, #0xffffffff            	// #-1
    edd8:	mov	w0, #0x8                   	// #8
    eddc:	str	w1, [sp, #144]
    ede0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ede4:	ldp	x27, x28, [sp, #80]
    ede8:	b	e760 <elf_update@@ELFUTILS_1.0+0x3618>
    edec:	mov	x0, x27
    edf0:	bl	30c0 <malloc@plt>
    edf4:	cbz	x0, ee04 <elf_update@@ELFUTILS_1.0+0x3cbc>
    edf8:	mov	w1, #0x1                   	// #1
    edfc:	str	w1, [sp, #148]
    ee00:	b	ed38 <elf_update@@ELFUTILS_1.0+0x3bf0>
    ee04:	mov	w0, #0x8                   	// #8
    ee08:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ee0c:	b	ecf8 <elf_update@@ELFUTILS_1.0+0x3bb0>
    ee10:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    ee14:	add	x3, x3, #0x5d8
    ee18:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    ee1c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    ee20:	add	x3, x3, #0x18
    ee24:	add	x1, x1, #0x330
    ee28:	add	x0, x0, #0x348
    ee2c:	mov	w2, #0x228                 	// #552
    ee30:	stp	x27, x28, [sp, #80]
    ee34:	bl	3330 <__assert_fail@plt>
    ee38:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    ee3c:	mov	x3, #0x1100                	// #4352
    ee40:	add	x0, sp, x3
    ee44:	mov	w3, #0x1                   	// #1
    ee48:	ldr	x4, [x1, #3272]
    ee4c:	mov	x21, x0
    ee50:	mov	x1, x22
    ee54:	blr	x4
    ee58:	b	e6e8 <elf_update@@ELFUTILS_1.0+0x35a0>
    ee5c:	ldp	x0, x1, [sp, #224]
    ee60:	mov	x21, x22
    ee64:	add	x22, x0, x1
    ee68:	ldr	w1, [x19, #56]
    ee6c:	cmp	x21, x22
    ee70:	cset	w0, lt  // lt = tstop
    ee74:	tst	w1, w0
    ee78:	b.ne	ef54 <elf_update@@ELFUTILS_1.0+0x3e0c>  // b.any
    ee7c:	ldr	x0, [sp, #136]
    ee80:	tbz	w0, #0, e948 <elf_update@@ELFUTILS_1.0+0x3800>
    ee84:	ldr	x0, [sp, #152]
    ee88:	mov	x23, x22
    ee8c:	ldr	w24, [x19, #36]
    ee90:	mov	x26, #0x0                   	// #0
    ee94:	ldr	x21, [sp, #176]
    ee98:	lsl	x20, x0, #6
    ee9c:	mov	x25, x20
    eea0:	mov	x3, x23
    eea4:	mov	x2, x25
    eea8:	mov	x1, x21
    eeac:	mov	w0, w24
    eeb0:	bl	3220 <pwrite@plt>
    eeb4:	cmn	x0, #0x1
    eeb8:	b.eq	ef00 <elf_update@@ELFUTILS_1.0+0x3db8>  // b.none
    eebc:	cmp	x0, #0x0
    eec0:	b.le	e93c <elf_update@@ELFUTILS_1.0+0x37f4>
    eec4:	add	x26, x26, x0
    eec8:	cmp	x20, x26
    eecc:	mov	x0, x26
    eed0:	b.ls	e940 <elf_update@@ELFUTILS_1.0+0x37f8>  // b.plast
    eed4:	ldr	x0, [sp, #176]
    eed8:	add	x23, x22, x26
    eedc:	sub	x25, x20, x26
    eee0:	mov	x3, x23
    eee4:	add	x21, x0, x26
    eee8:	mov	x2, x25
    eeec:	mov	x1, x21
    eef0:	mov	w0, w24
    eef4:	bl	3220 <pwrite@plt>
    eef8:	cmn	x0, #0x1
    eefc:	b.ne	eebc <elf_update@@ELFUTILS_1.0+0x3d74>  // b.any
    ef00:	bl	3340 <__errno_location@plt>
    ef04:	ldr	w0, [x0]
    ef08:	cmp	w0, #0x4
    ef0c:	b.ne	ecf0 <elf_update@@ELFUTILS_1.0+0x3ba8>  // b.any
    ef10:	b	eea0 <elf_update@@ELFUTILS_1.0+0x3d58>
    ef14:	mov	x0, x20
    ef18:	bl	30c0 <malloc@plt>
    ef1c:	str	x0, [sp, #112]
    ef20:	cbz	x0, ef74 <elf_update@@ELFUTILS_1.0+0x3e2c>
    ef24:	adrp	x4, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14e08>
    ef28:	mov	x2, x20
    ef2c:	ldr	x1, [x19, #88]
    ef30:	mov	w3, #0x1                   	// #1
    ef34:	ldr	x4, [x4, #3296]
    ef38:	ldr	x21, [sp, #112]
    ef3c:	blr	x4
    ef40:	ldr	x0, [sp, #248]
    ef44:	lsl	x20, x0, #3
    ef48:	sub	x20, x20, x0
    ef4c:	lsl	x20, x20, #3
    ef50:	b	e804 <elf_update@@ELFUTILS_1.0+0x36bc>
    ef54:	ldr	w0, [x19, #36]
    ef58:	add	x4, sp, #0xf0
    ef5c:	add	x3, sp, #0x100
    ef60:	sub	x2, x22, x21
    ef64:	mov	x1, x21
    ef68:	bl	db50 <elf_update@@ELFUTILS_1.0+0x2a08>
    ef6c:	cbz	w0, ee7c <elf_update@@ELFUTILS_1.0+0x3d34>
    ef70:	b	ecf8 <elf_update@@ELFUTILS_1.0+0x3bb0>
    ef74:	mov	w0, #0x8                   	// #8
    ef78:	str	w27, [sp, #144]
    ef7c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ef80:	ldp	x27, x28, [sp, #80]
    ef84:	b	e760 <elf_update@@ELFUTILS_1.0+0x3618>
    ef88:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    ef8c:	add	x3, x3, #0x5d8
    ef90:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    ef94:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    ef98:	add	x3, x3, #0x18
    ef9c:	add	x1, x1, #0x330
    efa0:	add	x0, x0, #0x398
    efa4:	mov	w2, #0x24a                 	// #586
    efa8:	stp	x27, x28, [sp, #80]
    efac:	bl	3330 <__assert_fail@plt>
    efb0:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    efb4:	add	x3, x3, #0x5d8
    efb8:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    efbc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    efc0:	add	x3, x3, #0x18
    efc4:	add	x1, x1, #0x330
    efc8:	add	x0, x0, #0x4b0
    efcc:	mov	w2, #0x2c3                 	// #707
    efd0:	bl	3330 <__assert_fail@plt>
    efd4:	nop

000000000000efd8 <gelf_getsym@@ELFUTILS_1.0>:
    efd8:	cbz	x0, f0b0 <gelf_getsym@@ELFUTILS_1.0+0xd8>
    efdc:	stp	x29, x30, [sp, #-16]!
    efe0:	mov	x29, sp
    efe4:	ldr	w3, [x0, #8]
    efe8:	cmp	w3, #0xb
    efec:	b.ne	f0a0 <gelf_getsym@@ELFUTILS_1.0+0xc8>  // b.any
    eff0:	ldr	x4, [x0, #40]
    eff4:	mov	w5, w1
    eff8:	ldr	x3, [x0, #16]
    effc:	ldr	x4, [x4, #136]
    f000:	ldr	w4, [x4, #32]
    f004:	cmp	w4, #0x1
    f008:	b.eq	f048 <gelf_getsym@@ELFUTILS_1.0+0x70>  // b.none
    f00c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f010:	movk	x4, #0xaaab
    f014:	umulh	x3, x3, x4
    f018:	cmp	x5, x3, lsr #4
    f01c:	b.cs	f090 <gelf_getsym@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
    f020:	ldr	x3, [x0]
    f024:	mov	w4, #0x18                  	// #24
    f028:	mov	x0, x2
    f02c:	smaddl	x1, w1, w4, x3
    f030:	ldp	x4, x5, [x1]
    f034:	stp	x4, x5, [x2]
    f038:	ldr	x1, [x1, #16]
    f03c:	str	x1, [x2, #16]
    f040:	ldp	x29, x30, [sp], #16
    f044:	ret
    f048:	cmp	x5, x3, lsr #4
    f04c:	b.cs	f090 <gelf_getsym@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
    f050:	ldr	x4, [x0]
    f054:	sbfiz	x1, x1, #4, #32
    f058:	mov	x0, x2
    f05c:	add	x3, x4, x1
    f060:	ldr	w1, [x4, x1]
    f064:	str	w1, [x2]
    f068:	ldp	x29, x30, [sp], #16
    f06c:	ldrb	w1, [x3, #12]
    f070:	strb	w1, [x2, #4]
    f074:	ldrb	w1, [x3, #13]
    f078:	strb	w1, [x2, #5]
    f07c:	ldp	w4, w1, [x3, #4]
    f080:	ldrh	w3, [x3, #14]
    f084:	strh	w3, [x2, #6]
    f088:	stp	x4, x1, [x2, #8]
    f08c:	ret
    f090:	mov	w0, #0x16                  	// #22
    f094:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f098:	mov	x0, #0x0                   	// #0
    f09c:	b	f040 <gelf_getsym@@ELFUTILS_1.0+0x68>
    f0a0:	mov	w0, #0x4                   	// #4
    f0a4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f0a8:	mov	x0, #0x0                   	// #0
    f0ac:	b	f040 <gelf_getsym@@ELFUTILS_1.0+0x68>
    f0b0:	mov	x0, #0x0                   	// #0
    f0b4:	ret

000000000000f0b8 <gelf_update_sym@@ELFUTILS_1.0>:
    f0b8:	cbz	x0, f1a4 <gelf_update_sym@@ELFUTILS_1.0+0xec>
    f0bc:	stp	x29, x30, [sp, #-16]!
    f0c0:	mov	x29, sp
    f0c4:	ldr	w3, [x0, #8]
    f0c8:	cmp	w3, #0xb
    f0cc:	b.ne	f1ac <gelf_update_sym@@ELFUTILS_1.0+0xf4>  // b.any
    f0d0:	ldr	x3, [x0, #40]
    f0d4:	ldr	x4, [x3, #136]
    f0d8:	ldr	w4, [x4, #32]
    f0dc:	cmp	w4, #0x1
    f0e0:	b.eq	f134 <gelf_update_sym@@ELFUTILS_1.0+0x7c>  // b.none
    f0e4:	ldr	x5, [x0, #16]
    f0e8:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f0ec:	movk	x6, #0xaaab
    f0f0:	mov	w4, w1
    f0f4:	umulh	x5, x5, x6
    f0f8:	cmp	x4, x5, lsr #4
    f0fc:	b.cs	f194 <gelf_update_sym@@ELFUTILS_1.0+0xdc>  // b.hs, b.nlast
    f100:	ldr	x0, [x0]
    f104:	mov	w6, #0x18                  	// #24
    f108:	ldp	x4, x5, [x2]
    f10c:	smaddl	x1, w1, w6, x0
    f110:	stp	x4, x5, [x1]
    f114:	ldr	x0, [x2, #16]
    f118:	str	x0, [x1, #16]
    f11c:	ldr	w1, [x3, #156]
    f120:	mov	w0, #0x1                   	// #1
    f124:	orr	w1, w1, w0
    f128:	str	w1, [x3, #156]
    f12c:	ldp	x29, x30, [sp], #16
    f130:	ret
    f134:	ldr	x5, [x2, #8]
    f138:	mov	x4, #0xffffffff            	// #4294967295
    f13c:	cmp	x5, x4
    f140:	b.hi	f1bc <gelf_update_sym@@ELFUTILS_1.0+0x104>  // b.pmore
    f144:	ldr	x6, [x2, #16]
    f148:	cmp	x6, x4
    f14c:	b.hi	f1bc <gelf_update_sym@@ELFUTILS_1.0+0x104>  // b.pmore
    f150:	ldr	x7, [x0, #16]
    f154:	mov	w4, w1
    f158:	cmp	x4, x7, lsr #4
    f15c:	b.cs	f194 <gelf_update_sym@@ELFUTILS_1.0+0xdc>  // b.hs, b.nlast
    f160:	ldr	x4, [x0]
    f164:	sbfiz	x1, x1, #4, #32
    f168:	ldr	w7, [x2]
    f16c:	add	x0, x4, x1
    f170:	str	w7, [x4, x1]
    f174:	stp	w5, w6, [x0, #4]
    f178:	ldrb	w1, [x2, #4]
    f17c:	strb	w1, [x0, #12]
    f180:	ldrb	w1, [x2, #5]
    f184:	strb	w1, [x0, #13]
    f188:	ldrh	w1, [x2, #6]
    f18c:	strh	w1, [x0, #14]
    f190:	b	f11c <gelf_update_sym@@ELFUTILS_1.0+0x64>
    f194:	mov	w0, #0x16                  	// #22
    f198:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f19c:	mov	w0, #0x0                   	// #0
    f1a0:	b	f12c <gelf_update_sym@@ELFUTILS_1.0+0x74>
    f1a4:	mov	w0, #0x0                   	// #0
    f1a8:	ret
    f1ac:	mov	w0, #0x1f                  	// #31
    f1b0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f1b4:	mov	w0, #0x0                   	// #0
    f1b8:	b	f12c <gelf_update_sym@@ELFUTILS_1.0+0x74>
    f1bc:	mov	w0, #0x21                  	// #33
    f1c0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f1c4:	mov	w0, #0x0                   	// #0
    f1c8:	b	f12c <gelf_update_sym@@ELFUTILS_1.0+0x74>
    f1cc:	nop

000000000000f1d0 <gelf_getversym@@ELFUTILS_1.0>:
    f1d0:	cbz	x0, f220 <gelf_getversym@@ELFUTILS_1.0+0x50>
    f1d4:	stp	x29, x30, [sp, #-16]!
    f1d8:	mov	x29, sp
    f1dc:	ldr	w3, [x0, #8]
    f1e0:	cmp	w3, #0x4
    f1e4:	b.ne	f210 <gelf_getversym@@ELFUTILS_1.0+0x40>  // b.any
    f1e8:	ldr	x4, [x0, #16]
    f1ec:	mov	w3, w1
    f1f0:	cmp	x3, x4, lsr #1
    f1f4:	b.cs	f228 <gelf_getversym@@ELFUTILS_1.0+0x58>  // b.hs, b.nlast
    f1f8:	ldr	x3, [x0]
    f1fc:	mov	x0, x2
    f200:	ldrh	w1, [x3, w1, sxtw #1]
    f204:	strh	w1, [x2]
    f208:	ldp	x29, x30, [sp], #16
    f20c:	ret
    f210:	mov	w0, #0x4                   	// #4
    f214:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f218:	mov	x0, #0x0                   	// #0
    f21c:	b	f208 <gelf_getversym@@ELFUTILS_1.0+0x38>
    f220:	mov	x0, #0x0                   	// #0
    f224:	ret
    f228:	mov	w0, #0x16                  	// #22
    f22c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f230:	mov	x0, #0x0                   	// #0
    f234:	b	f208 <gelf_getversym@@ELFUTILS_1.0+0x38>

000000000000f238 <gelf_getverneed@@ELFUTILS_1.0>:
    f238:	cbz	x0, f2b0 <gelf_getverneed@@ELFUTILS_1.0+0x78>
    f23c:	stp	x29, x30, [sp, #-16]!
    f240:	mov	x29, sp
    f244:	ldr	w3, [x0, #8]
    f248:	cmp	w3, #0x11
    f24c:	b.ne	f2a0 <gelf_getverneed@@ELFUTILS_1.0+0x68>  // b.any
    f250:	tbnz	w1, #31, f28c <gelf_getverneed@@ELFUTILS_1.0+0x54>
    f254:	ldr	x4, [x0, #16]
    f258:	sxtw	x3, w1
    f25c:	add	x5, x3, #0x10
    f260:	cmp	x5, x4
    f264:	b.hi	f28c <gelf_getverneed@@ELFUTILS_1.0+0x54>  // b.pmore
    f268:	tst	x1, #0xf
    f26c:	b.ne	f28c <gelf_getverneed@@ELFUTILS_1.0+0x54>  // b.any
    f270:	ldr	x1, [x0]
    f274:	mov	x0, x2
    f278:	add	x1, x1, x3
    f27c:	ldp	x4, x5, [x1]
    f280:	stp	x4, x5, [x2]
    f284:	ldp	x29, x30, [sp], #16
    f288:	ret
    f28c:	mov	w0, #0x1d                  	// #29
    f290:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f294:	mov	x0, #0x0                   	// #0
    f298:	ldp	x29, x30, [sp], #16
    f29c:	ret
    f2a0:	mov	w0, #0x4                   	// #4
    f2a4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f2a8:	mov	x0, #0x0                   	// #0
    f2ac:	b	f284 <gelf_getverneed@@ELFUTILS_1.0+0x4c>
    f2b0:	mov	x0, #0x0                   	// #0
    f2b4:	ret

000000000000f2b8 <gelf_getvernaux@@ELFUTILS_1.0>:
    f2b8:	cbz	x0, f330 <gelf_getvernaux@@ELFUTILS_1.0+0x78>
    f2bc:	stp	x29, x30, [sp, #-16]!
    f2c0:	mov	x29, sp
    f2c4:	ldr	w3, [x0, #8]
    f2c8:	cmp	w3, #0x11
    f2cc:	b.ne	f320 <gelf_getvernaux@@ELFUTILS_1.0+0x68>  // b.any
    f2d0:	tbnz	w1, #31, f30c <gelf_getvernaux@@ELFUTILS_1.0+0x54>
    f2d4:	ldr	x4, [x0, #16]
    f2d8:	sxtw	x3, w1
    f2dc:	add	x5, x3, #0x10
    f2e0:	cmp	x5, x4
    f2e4:	b.hi	f30c <gelf_getvernaux@@ELFUTILS_1.0+0x54>  // b.pmore
    f2e8:	tst	x1, #0xf
    f2ec:	b.ne	f30c <gelf_getvernaux@@ELFUTILS_1.0+0x54>  // b.any
    f2f0:	ldr	x1, [x0]
    f2f4:	mov	x0, x2
    f2f8:	add	x1, x1, x3
    f2fc:	ldp	x4, x5, [x1]
    f300:	stp	x4, x5, [x2]
    f304:	ldp	x29, x30, [sp], #16
    f308:	ret
    f30c:	mov	w0, #0x1d                  	// #29
    f310:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f314:	mov	x0, #0x0                   	// #0
    f318:	ldp	x29, x30, [sp], #16
    f31c:	ret
    f320:	mov	w0, #0x4                   	// #4
    f324:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f328:	mov	x0, #0x0                   	// #0
    f32c:	b	f304 <gelf_getvernaux@@ELFUTILS_1.0+0x4c>
    f330:	mov	x0, #0x0                   	// #0
    f334:	ret

000000000000f338 <gelf_getverdef@@ELFUTILS_1.0>:
    f338:	cbz	x0, f3b8 <gelf_getverdef@@ELFUTILS_1.0+0x80>
    f33c:	stp	x29, x30, [sp, #-16]!
    f340:	mov	x29, sp
    f344:	ldr	w3, [x0, #8]
    f348:	cmp	w3, #0xf
    f34c:	b.ne	f3a8 <gelf_getverdef@@ELFUTILS_1.0+0x70>  // b.any
    f350:	tbnz	w1, #31, f394 <gelf_getverdef@@ELFUTILS_1.0+0x5c>
    f354:	ldr	x4, [x0, #16]
    f358:	sxtw	x3, w1
    f35c:	add	x5, x3, #0x14
    f360:	cmp	x5, x4
    f364:	b.hi	f394 <gelf_getverdef@@ELFUTILS_1.0+0x5c>  // b.pmore
    f368:	tst	x1, #0x3
    f36c:	b.ne	f394 <gelf_getverdef@@ELFUTILS_1.0+0x5c>  // b.any
    f370:	ldr	x1, [x0]
    f374:	mov	x0, x2
    f378:	add	x1, x1, x3
    f37c:	ldp	x4, x5, [x1]
    f380:	stp	x4, x5, [x2]
    f384:	ldr	w1, [x1, #16]
    f388:	str	w1, [x2, #16]
    f38c:	ldp	x29, x30, [sp], #16
    f390:	ret
    f394:	mov	w0, #0x1d                  	// #29
    f398:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f39c:	mov	x0, #0x0                   	// #0
    f3a0:	ldp	x29, x30, [sp], #16
    f3a4:	ret
    f3a8:	mov	w0, #0x4                   	// #4
    f3ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f3b0:	mov	x0, #0x0                   	// #0
    f3b4:	b	f38c <gelf_getverdef@@ELFUTILS_1.0+0x54>
    f3b8:	mov	x0, #0x0                   	// #0
    f3bc:	ret

000000000000f3c0 <gelf_getverdaux@@ELFUTILS_1.0>:
    f3c0:	cbz	x0, f434 <gelf_getverdaux@@ELFUTILS_1.0+0x74>
    f3c4:	stp	x29, x30, [sp, #-16]!
    f3c8:	mov	x29, sp
    f3cc:	ldr	w3, [x0, #8]
    f3d0:	cmp	w3, #0xf
    f3d4:	b.ne	f424 <gelf_getverdaux@@ELFUTILS_1.0+0x64>  // b.any
    f3d8:	tbnz	w1, #31, f410 <gelf_getverdaux@@ELFUTILS_1.0+0x50>
    f3dc:	ldr	x4, [x0, #16]
    f3e0:	sxtw	x3, w1
    f3e4:	add	x3, x3, #0x8
    f3e8:	cmp	x3, x4
    f3ec:	b.hi	f410 <gelf_getverdaux@@ELFUTILS_1.0+0x50>  // b.pmore
    f3f0:	tst	x1, #0x3
    f3f4:	b.ne	f410 <gelf_getverdaux@@ELFUTILS_1.0+0x50>  // b.any
    f3f8:	ldr	x3, [x0]
    f3fc:	mov	x0, x2
    f400:	ldr	x1, [x3, w1, sxtw]
    f404:	str	x1, [x2]
    f408:	ldp	x29, x30, [sp], #16
    f40c:	ret
    f410:	mov	w0, #0x1d                  	// #29
    f414:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f418:	mov	x0, #0x0                   	// #0
    f41c:	ldp	x29, x30, [sp], #16
    f420:	ret
    f424:	mov	w0, #0x4                   	// #4
    f428:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f42c:	mov	x0, #0x0                   	// #0
    f430:	b	f408 <gelf_getverdaux@@ELFUTILS_1.0+0x48>
    f434:	mov	x0, #0x0                   	// #0
    f438:	ret
    f43c:	nop

000000000000f440 <gelf_getrel@@ELFUTILS_1.0>:
    f440:	cbz	x0, f4f4 <gelf_getrel@@ELFUTILS_1.0+0xb4>
    f444:	stp	x29, x30, [sp, #-16]!
    f448:	mov	x29, sp
    f44c:	ldr	w3, [x0, #8]
    f450:	cmp	w3, #0x8
    f454:	b.ne	f4e4 <gelf_getrel@@ELFUTILS_1.0+0xa4>  // b.any
    f458:	ldr	x3, [x0, #40]
    f45c:	mov	w4, w1
    f460:	ldr	x5, [x0, #16]
    f464:	ldr	x3, [x3, #136]
    f468:	ldr	w3, [x3, #32]
    f46c:	cmp	w3, #0x1
    f470:	b.eq	f498 <gelf_getrel@@ELFUTILS_1.0+0x58>  // b.none
    f474:	cmp	x4, x5, lsr #4
    f478:	b.cs	f4d4 <gelf_getrel@@ELFUTILS_1.0+0x94>  // b.hs, b.nlast
    f47c:	ldr	x3, [x0]
    f480:	mov	x0, x2
    f484:	add	x1, x3, w1, sxtw #4
    f488:	ldp	x4, x5, [x1]
    f48c:	stp	x4, x5, [x2]
    f490:	ldp	x29, x30, [sp], #16
    f494:	ret
    f498:	cmp	x4, x5, lsr #3
    f49c:	b.cs	f4d4 <gelf_getrel@@ELFUTILS_1.0+0x94>  // b.hs, b.nlast
    f4a0:	ldr	x3, [x0]
    f4a4:	sbfiz	x1, x1, #3, #32
    f4a8:	mov	x0, x2
    f4ac:	add	x4, x3, x1
    f4b0:	ldr	w1, [x3, x1]
    f4b4:	str	x1, [x2]
    f4b8:	ldr	w1, [x4, #4]
    f4bc:	ldp	x29, x30, [sp], #16
    f4c0:	and	x3, x1, #0xff
    f4c4:	lsr	w1, w1, #8
    f4c8:	add	x1, x3, x1, lsl #32
    f4cc:	str	x1, [x2, #8]
    f4d0:	ret
    f4d4:	mov	w0, #0x16                  	// #22
    f4d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f4dc:	mov	x0, #0x0                   	// #0
    f4e0:	b	f490 <gelf_getrel@@ELFUTILS_1.0+0x50>
    f4e4:	mov	w0, #0x4                   	// #4
    f4e8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f4ec:	mov	x0, #0x0                   	// #0
    f4f0:	b	f490 <gelf_getrel@@ELFUTILS_1.0+0x50>
    f4f4:	mov	x0, #0x0                   	// #0
    f4f8:	ret
    f4fc:	nop

000000000000f500 <gelf_getrela@@ELFUTILS_1.0>:
    f500:	cbz	x0, f5d8 <gelf_getrela@@ELFUTILS_1.0+0xd8>
    f504:	stp	x29, x30, [sp, #-16]!
    f508:	mov	x3, x0
    f50c:	mov	x29, sp
    f510:	ldr	w0, [x0, #8]
    f514:	cmp	w0, #0x7
    f518:	b.ne	f5c8 <gelf_getrela@@ELFUTILS_1.0+0xc8>  // b.any
    f51c:	ldr	x4, [x3, #40]
    f520:	mov	w5, w1
    f524:	ldr	x0, [x3, #16]
    f528:	ldr	x4, [x4, #136]
    f52c:	ldr	w4, [x4, #32]
    f530:	cmp	w4, #0x1
    f534:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f538:	movk	x4, #0xaaab
    f53c:	umulh	x0, x0, x4
    f540:	b.eq	f574 <gelf_getrela@@ELFUTILS_1.0+0x74>  // b.none
    f544:	cmp	x5, x0, lsr #4
    f548:	b.cs	f5b8 <gelf_getrela@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
    f54c:	ldr	x3, [x3]
    f550:	mov	w4, #0x18                  	// #24
    f554:	mov	x0, x2
    f558:	smaddl	x1, w1, w4, x3
    f55c:	ldp	x4, x5, [x1]
    f560:	stp	x4, x5, [x2]
    f564:	ldr	x1, [x1, #16]
    f568:	str	x1, [x2, #16]
    f56c:	ldp	x29, x30, [sp], #16
    f570:	ret
    f574:	cmp	x5, x0, lsr #3
    f578:	b.cs	f5b8 <gelf_getrela@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
    f57c:	mov	w5, #0xc                   	// #12
    f580:	mov	x0, x2
    f584:	ldr	x4, [x3]
    f588:	smull	x1, w1, w5
    f58c:	ldp	x29, x30, [sp], #16
    f590:	add	x3, x4, x1
    f594:	ldr	w5, [x4, x1]
    f598:	ldr	w1, [x3, #4]
    f59c:	ldrsw	x4, [x3, #8]
    f5a0:	and	x3, x1, #0xff
    f5a4:	str	x4, [x2, #16]
    f5a8:	lsr	w1, w1, #8
    f5ac:	add	x1, x3, x1, lsl #32
    f5b0:	stp	x5, x1, [x2]
    f5b4:	ret
    f5b8:	mov	w0, #0x16                  	// #22
    f5bc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f5c0:	mov	x0, #0x0                   	// #0
    f5c4:	b	f56c <gelf_getrela@@ELFUTILS_1.0+0x6c>
    f5c8:	mov	w0, #0x4                   	// #4
    f5cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f5d0:	mov	x0, #0x0                   	// #0
    f5d4:	b	f56c <gelf_getrela@@ELFUTILS_1.0+0x6c>
    f5d8:	mov	x0, #0x0                   	// #0
    f5dc:	ret

000000000000f5e0 <gelf_update_rel@@ELFUTILS_1.0>:
    f5e0:	cbz	x0, f6b0 <gelf_update_rel@@ELFUTILS_1.0+0xd0>
    f5e4:	stp	x29, x30, [sp, #-16]!
    f5e8:	mov	x29, sp
    f5ec:	ldr	w3, [x0, #8]
    f5f0:	cmp	w3, #0x8
    f5f4:	b.ne	f6b8 <gelf_update_rel@@ELFUTILS_1.0+0xd8>  // b.any
    f5f8:	ldr	x3, [x0, #40]
    f5fc:	ldr	x4, [x3, #136]
    f600:	ldr	w4, [x4, #32]
    f604:	cmp	w4, #0x1
    f608:	b.eq	f644 <gelf_update_rel@@ELFUTILS_1.0+0x64>  // b.none
    f60c:	ldr	x5, [x0, #16]
    f610:	mov	w4, w1
    f614:	cmp	x4, x5, lsr #4
    f618:	b.cs	f6c8 <gelf_update_rel@@ELFUTILS_1.0+0xe8>  // b.hs, b.nlast
    f61c:	ldr	x0, [x0]
    f620:	ldp	x4, x5, [x2]
    f624:	add	x1, x0, w1, sxtw #4
    f628:	stp	x4, x5, [x1]
    f62c:	ldr	w1, [x3, #156]
    f630:	mov	w0, #0x1                   	// #1
    f634:	orr	w1, w1, w0
    f638:	str	w1, [x3, #156]
    f63c:	ldp	x29, x30, [sp], #16
    f640:	ret
    f644:	ldr	x5, [x2]
    f648:	mov	x4, #0xffffffff            	// #4294967295
    f64c:	cmp	x5, x4
    f650:	b.hi	f6a0 <gelf_update_rel@@ELFUTILS_1.0+0xc0>  // b.pmore
    f654:	ldr	x2, [x2, #8]
    f658:	mov	x4, #0xffffff              	// #16777215
    f65c:	cmp	x4, x2, lsr #32
    f660:	lsr	x4, x2, #32
    f664:	b.cc	f6a0 <gelf_update_rel@@ELFUTILS_1.0+0xc0>  // b.lo, b.ul, b.last
    f668:	tst	x2, #0xffffff00
    f66c:	b.ne	f6a0 <gelf_update_rel@@ELFUTILS_1.0+0xc0>  // b.any
    f670:	ldr	x7, [x0, #16]
    f674:	mov	w6, w1
    f678:	cmp	x6, x7, lsr #3
    f67c:	b.cs	f6c8 <gelf_update_rel@@ELFUTILS_1.0+0xe8>  // b.hs, b.nlast
    f680:	ldr	x0, [x0]
    f684:	sbfiz	x1, x1, #3, #32
    f688:	and	w2, w2, #0xff
    f68c:	add	x6, x0, x1
    f690:	add	w2, w2, w4, lsl #8
    f694:	str	w5, [x0, x1]
    f698:	str	w2, [x6, #4]
    f69c:	b	f62c <gelf_update_rel@@ELFUTILS_1.0+0x4c>
    f6a0:	mov	w0, #0x21                  	// #33
    f6a4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f6a8:	mov	w0, #0x0                   	// #0
    f6ac:	b	f63c <gelf_update_rel@@ELFUTILS_1.0+0x5c>
    f6b0:	mov	w0, #0x0                   	// #0
    f6b4:	ret
    f6b8:	mov	w0, #0x1f                  	// #31
    f6bc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f6c0:	mov	w0, #0x0                   	// #0
    f6c4:	b	f63c <gelf_update_rel@@ELFUTILS_1.0+0x5c>
    f6c8:	mov	w0, #0x16                  	// #22
    f6cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f6d0:	mov	w0, #0x0                   	// #0
    f6d4:	b	f63c <gelf_update_rel@@ELFUTILS_1.0+0x5c>

000000000000f6d8 <gelf_update_rela@@ELFUTILS_1.0>:
    f6d8:	cbz	x0, f7e8 <gelf_update_rela@@ELFUTILS_1.0+0x110>
    f6dc:	stp	x29, x30, [sp, #-16]!
    f6e0:	mov	x29, sp
    f6e4:	ldr	w3, [x0, #8]
    f6e8:	cmp	w3, #0x7
    f6ec:	b.ne	f7f0 <gelf_update_rela@@ELFUTILS_1.0+0x118>  // b.any
    f6f0:	ldr	x3, [x0, #40]
    f6f4:	ldr	x4, [x3, #136]
    f6f8:	ldr	w4, [x4, #32]
    f6fc:	cmp	w4, #0x1
    f700:	b.eq	f754 <gelf_update_rela@@ELFUTILS_1.0+0x7c>  // b.none
    f704:	ldr	x5, [x0, #16]
    f708:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f70c:	movk	x6, #0xaaab
    f710:	mov	w4, w1
    f714:	umulh	x5, x5, x6
    f718:	cmp	x4, x5, lsr #4
    f71c:	b.cs	f800 <gelf_update_rela@@ELFUTILS_1.0+0x128>  // b.hs, b.nlast
    f720:	ldr	x0, [x0]
    f724:	mov	w6, #0x18                  	// #24
    f728:	ldp	x4, x5, [x2]
    f72c:	smaddl	x1, w1, w6, x0
    f730:	stp	x4, x5, [x1]
    f734:	ldr	x0, [x2, #16]
    f738:	str	x0, [x1, #16]
    f73c:	ldr	w1, [x3, #156]
    f740:	mov	w0, #0x1                   	// #1
    f744:	orr	w1, w1, w0
    f748:	str	w1, [x3, #156]
    f74c:	ldp	x29, x30, [sp], #16
    f750:	ret
    f754:	ldr	x6, [x2]
    f758:	mov	x5, #0xffffffff            	// #4294967295
    f75c:	cmp	x6, x5
    f760:	b.hi	f7d4 <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.pmore
    f764:	ldr	x4, [x2, #8]
    f768:	mov	x7, #0xffffff              	// #16777215
    f76c:	cmp	x7, x4, lsr #32
    f770:	lsr	x7, x4, #32
    f774:	b.cc	f7d4 <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.lo, b.ul, b.last
    f778:	tst	x4, #0xffffff00
    f77c:	b.ne	f7d4 <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.any
    f780:	ldr	x8, [x2, #16]
    f784:	mov	x2, #0x80000000            	// #2147483648
    f788:	add	x2, x8, x2
    f78c:	cmp	x2, x5
    f790:	b.hi	f7d4 <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.pmore
    f794:	ldr	x5, [x0, #16]
    f798:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f79c:	movk	x9, #0xaaab
    f7a0:	mov	w2, w1
    f7a4:	umulh	x5, x5, x9
    f7a8:	cmp	x2, x5, lsr #3
    f7ac:	b.cs	f800 <gelf_update_rela@@ELFUTILS_1.0+0x128>  // b.hs, b.nlast
    f7b0:	mov	w2, #0xc                   	// #12
    f7b4:	and	w4, w4, #0xff
    f7b8:	ldr	x5, [x0]
    f7bc:	smull	x1, w1, w2
    f7c0:	add	w4, w4, w7, lsl #8
    f7c4:	add	x0, x5, x1
    f7c8:	str	w6, [x5, x1]
    f7cc:	stp	w4, w8, [x0, #4]
    f7d0:	b	f73c <gelf_update_rela@@ELFUTILS_1.0+0x64>
    f7d4:	mov	w0, #0x21                  	// #33
    f7d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f7dc:	mov	w0, #0x0                   	// #0
    f7e0:	ldp	x29, x30, [sp], #16
    f7e4:	ret
    f7e8:	mov	w0, #0x0                   	// #0
    f7ec:	ret
    f7f0:	mov	w0, #0x1f                  	// #31
    f7f4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f7f8:	mov	w0, #0x0                   	// #0
    f7fc:	b	f74c <gelf_update_rela@@ELFUTILS_1.0+0x74>
    f800:	mov	w0, #0x16                  	// #22
    f804:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f808:	mov	w0, #0x0                   	// #0
    f80c:	b	f74c <gelf_update_rela@@ELFUTILS_1.0+0x74>

000000000000f810 <gelf_getdyn@@ELFUTILS_1.0>:
    f810:	cbz	x0, f8b8 <gelf_getdyn@@ELFUTILS_1.0+0xa8>
    f814:	stp	x29, x30, [sp, #-16]!
    f818:	mov	x29, sp
    f81c:	ldr	w3, [x0, #8]
    f820:	cmp	w3, #0x2
    f824:	b.ne	f8a8 <gelf_getdyn@@ELFUTILS_1.0+0x98>  // b.any
    f828:	ldr	x3, [x0, #40]
    f82c:	mov	w4, w1
    f830:	ldr	x5, [x0, #16]
    f834:	ldr	x3, [x3, #136]
    f838:	ldr	w3, [x3, #32]
    f83c:	cmp	w3, #0x1
    f840:	b.eq	f868 <gelf_getdyn@@ELFUTILS_1.0+0x58>  // b.none
    f844:	cmp	x4, x5, lsr #4
    f848:	b.cs	f898 <gelf_getdyn@@ELFUTILS_1.0+0x88>  // b.hs, b.nlast
    f84c:	ldr	x3, [x0]
    f850:	mov	x0, x2
    f854:	add	x1, x3, w1, sxtw #4
    f858:	ldp	x4, x5, [x1]
    f85c:	stp	x4, x5, [x2]
    f860:	ldp	x29, x30, [sp], #16
    f864:	ret
    f868:	cmp	x4, x5, lsr #3
    f86c:	b.cs	f898 <gelf_getdyn@@ELFUTILS_1.0+0x88>  // b.hs, b.nlast
    f870:	ldr	x3, [x0]
    f874:	sbfiz	x1, x1, #3, #32
    f878:	mov	x0, x2
    f87c:	add	x4, x3, x1
    f880:	ldrsw	x1, [x3, x1]
    f884:	str	x1, [x2]
    f888:	ldr	w1, [x4, #4]
    f88c:	ldp	x29, x30, [sp], #16
    f890:	str	x1, [x2, #8]
    f894:	ret
    f898:	mov	w0, #0x16                  	// #22
    f89c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f8a0:	mov	x0, #0x0                   	// #0
    f8a4:	b	f860 <gelf_getdyn@@ELFUTILS_1.0+0x50>
    f8a8:	mov	w0, #0x4                   	// #4
    f8ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f8b0:	mov	x0, #0x0                   	// #0
    f8b4:	b	f860 <gelf_getdyn@@ELFUTILS_1.0+0x50>
    f8b8:	mov	x0, #0x0                   	// #0
    f8bc:	ret

000000000000f8c0 <gelf_update_dyn@@ELFUTILS_1.0>:
    f8c0:	cbz	x0, f980 <gelf_update_dyn@@ELFUTILS_1.0+0xc0>
    f8c4:	stp	x29, x30, [sp, #-16]!
    f8c8:	mov	x29, sp
    f8cc:	ldr	w3, [x0, #8]
    f8d0:	cmp	w3, #0x2
    f8d4:	b.ne	f988 <gelf_update_dyn@@ELFUTILS_1.0+0xc8>  // b.any
    f8d8:	ldr	x3, [x0, #40]
    f8dc:	ldr	x4, [x3, #136]
    f8e0:	ldr	w4, [x4, #32]
    f8e4:	cmp	w4, #0x1
    f8e8:	b.eq	f924 <gelf_update_dyn@@ELFUTILS_1.0+0x64>  // b.none
    f8ec:	ldr	x5, [x0, #16]
    f8f0:	mov	w4, w1
    f8f4:	cmp	x4, x5, lsr #4
    f8f8:	b.cs	f998 <gelf_update_dyn@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    f8fc:	ldr	x0, [x0]
    f900:	ldp	x4, x5, [x2]
    f904:	add	x1, x0, w1, sxtw #4
    f908:	stp	x4, x5, [x1]
    f90c:	ldr	w1, [x3, #156]
    f910:	mov	w0, #0x1                   	// #1
    f914:	orr	w1, w1, w0
    f918:	str	w1, [x3, #156]
    f91c:	ldp	x29, x30, [sp], #16
    f920:	ret
    f924:	ldr	x6, [x2]
    f928:	mov	x4, #0x80000000            	// #2147483648
    f92c:	mov	x5, #0xffffffff            	// #4294967295
    f930:	add	x4, x6, x4
    f934:	cmp	x4, x5
    f938:	b.hi	f970 <gelf_update_dyn@@ELFUTILS_1.0+0xb0>  // b.pmore
    f93c:	ldr	x2, [x2, #8]
    f940:	cmp	x2, x5
    f944:	b.hi	f970 <gelf_update_dyn@@ELFUTILS_1.0+0xb0>  // b.pmore
    f948:	ldr	x5, [x0, #16]
    f94c:	mov	w4, w1
    f950:	cmp	x4, x5, lsr #3
    f954:	b.cs	f998 <gelf_update_dyn@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    f958:	ldr	x0, [x0]
    f95c:	sbfiz	x1, x1, #3, #32
    f960:	add	x4, x0, x1
    f964:	str	w6, [x0, x1]
    f968:	str	w2, [x4, #4]
    f96c:	b	f90c <gelf_update_dyn@@ELFUTILS_1.0+0x4c>
    f970:	mov	w0, #0x21                  	// #33
    f974:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f978:	mov	w0, #0x0                   	// #0
    f97c:	b	f91c <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
    f980:	mov	w0, #0x0                   	// #0
    f984:	ret
    f988:	mov	w0, #0x1f                  	// #31
    f98c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f990:	mov	w0, #0x0                   	// #0
    f994:	b	f91c <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
    f998:	mov	w0, #0x16                  	// #22
    f99c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f9a0:	mov	w0, #0x0                   	// #0
    f9a4:	b	f91c <gelf_update_dyn@@ELFUTILS_1.0+0x5c>

000000000000f9a8 <gelf_getmove@@ELFUTILS_1.0>:
    f9a8:	cbz	x0, f9f4 <gelf_getmove@@ELFUTILS_1.0+0x4c>
    f9ac:	stp	x29, x30, [sp, #-16]!
    f9b0:	mov	x29, sp
    f9b4:	ldr	w0, [x0, #8]
    f9b8:	cmp	w0, #0x15
    f9bc:	b.ne	f9e0 <gelf_getmove@@ELFUTILS_1.0+0x38>  // b.any
    f9c0:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    f9c4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    f9c8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    f9cc:	add	x3, x3, #0x648
    f9d0:	add	x1, x1, #0x608
    f9d4:	add	x0, x0, #0x618
    f9d8:	mov	w2, #0x39                  	// #57
    f9dc:	bl	3330 <__assert_fail@plt>
    f9e0:	mov	w0, #0x4                   	// #4
    f9e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f9e8:	mov	x0, #0x0                   	// #0
    f9ec:	ldp	x29, x30, [sp], #16
    f9f0:	ret
    f9f4:	mov	x0, #0x0                   	// #0
    f9f8:	ret
    f9fc:	nop

000000000000fa00 <gelf_update_move@@ELFUTILS_1.0>:
    fa00:	cbnz	x0, fa0c <gelf_update_move@@ELFUTILS_1.0+0xc>
    fa04:	mov	w0, #0x0                   	// #0
    fa08:	ret
    fa0c:	stp	x29, x30, [sp, #-16]!
    fa10:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    fa14:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    fa18:	mov	x29, sp
    fa1c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
    fa20:	add	x3, x3, #0x670
    fa24:	add	x1, x1, #0x658
    fa28:	add	x0, x0, #0x618
    fa2c:	mov	w2, #0x32                  	// #50
    fa30:	bl	3330 <__assert_fail@plt>
    fa34:	nop

000000000000fa38 <gelf_getsyminfo@@ELFUTILS_1.0>:
    fa38:	cbz	x0, fa88 <gelf_getsyminfo@@ELFUTILS_1.0+0x50>
    fa3c:	stp	x29, x30, [sp, #-16]!
    fa40:	mov	x29, sp
    fa44:	ldr	w3, [x0, #8]
    fa48:	cmp	w3, #0x14
    fa4c:	b.ne	fa78 <gelf_getsyminfo@@ELFUTILS_1.0+0x40>  // b.any
    fa50:	ldr	x4, [x0, #16]
    fa54:	mov	w3, w1
    fa58:	cmp	x3, x4, lsr #2
    fa5c:	b.cs	fa90 <gelf_getsyminfo@@ELFUTILS_1.0+0x58>  // b.hs, b.nlast
    fa60:	ldr	x3, [x0]
    fa64:	mov	x0, x2
    fa68:	ldr	w1, [x3, w1, sxtw #2]
    fa6c:	str	w1, [x2]
    fa70:	ldp	x29, x30, [sp], #16
    fa74:	ret
    fa78:	mov	w0, #0x4                   	// #4
    fa7c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fa80:	mov	x0, #0x0                   	// #0
    fa84:	b	fa70 <gelf_getsyminfo@@ELFUTILS_1.0+0x38>
    fa88:	mov	x0, #0x0                   	// #0
    fa8c:	ret
    fa90:	mov	w0, #0x16                  	// #22
    fa94:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fa98:	mov	x0, #0x0                   	// #0
    fa9c:	b	fa70 <gelf_getsyminfo@@ELFUTILS_1.0+0x38>

000000000000faa0 <gelf_update_syminfo@@ELFUTILS_1.0>:
    faa0:	cbz	x0, faf0 <gelf_update_syminfo@@ELFUTILS_1.0+0x50>
    faa4:	stp	x29, x30, [sp, #-16]!
    faa8:	mov	x29, sp
    faac:	ldr	w3, [x0, #8]
    fab0:	cmp	w3, #0x14
    fab4:	b.ne	faf8 <gelf_update_syminfo@@ELFUTILS_1.0+0x58>  // b.any
    fab8:	ldr	x5, [x0, #16]
    fabc:	mov	w3, w1
    fac0:	ldr	x4, [x0, #40]
    fac4:	cmp	x3, x5, lsr #2
    fac8:	b.cs	fb08 <gelf_update_syminfo@@ELFUTILS_1.0+0x68>  // b.hs, b.nlast
    facc:	ldr	x3, [x0]
    fad0:	mov	w0, #0x1                   	// #1
    fad4:	ldr	w5, [x2]
    fad8:	ldr	w2, [x4, #156]
    fadc:	str	w5, [x3, w1, sxtw #2]
    fae0:	orr	w1, w2, w0
    fae4:	str	w1, [x4, #156]
    fae8:	ldp	x29, x30, [sp], #16
    faec:	ret
    faf0:	mov	w0, #0x0                   	// #0
    faf4:	ret
    faf8:	mov	w0, #0x1f                  	// #31
    fafc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fb00:	mov	w0, #0x0                   	// #0
    fb04:	b	fae8 <gelf_update_syminfo@@ELFUTILS_1.0+0x48>
    fb08:	mov	w0, #0x16                  	// #22
    fb0c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fb10:	mov	w0, #0x0                   	// #0
    fb14:	b	fae8 <gelf_update_syminfo@@ELFUTILS_1.0+0x48>

000000000000fb18 <gelf_getauxv@@ELFUTILS_1.3>:
    fb18:	cbz	x0, fbc8 <gelf_getauxv@@ELFUTILS_1.3+0xb0>
    fb1c:	stp	x29, x30, [sp, #-16]!
    fb20:	mov	x29, sp
    fb24:	ldr	w3, [x0, #8]
    fb28:	cmp	w3, #0x18
    fb2c:	b.ne	fbb8 <gelf_getauxv@@ELFUTILS_1.3+0xa0>  // b.any
    fb30:	ldr	x3, [x0, #40]
    fb34:	add	w1, w1, #0x1
    fb38:	ldr	x4, [x0, #16]
    fb3c:	ldr	x3, [x3, #136]
    fb40:	ldr	w3, [x3, #32]
    fb44:	cmp	w3, #0x1
    fb48:	b.eq	fb74 <gelf_getauxv@@ELFUTILS_1.3+0x5c>  // b.none
    fb4c:	cmp	x4, w1, sxtw #4
    fb50:	sbfiz	x1, x1, #4, #32
    fb54:	b.cc	fba8 <gelf_getauxv@@ELFUTILS_1.3+0x90>  // b.lo, b.ul, b.last
    fb58:	ldr	x3, [x0]
    fb5c:	mov	x0, x2
    fb60:	add	x1, x3, x1
    fb64:	ldp	x4, x5, [x1, #-16]
    fb68:	stp	x4, x5, [x2]
    fb6c:	ldp	x29, x30, [sp], #16
    fb70:	ret
    fb74:	cmp	x4, w1, sxtw #3
    fb78:	sbfiz	x1, x1, #3, #32
    fb7c:	b.cc	fba8 <gelf_getauxv@@ELFUTILS_1.3+0x90>  // b.lo, b.ul, b.last
    fb80:	ldr	x3, [x0]
    fb84:	sub	x1, x1, #0x8
    fb88:	mov	x0, x2
    fb8c:	add	x4, x3, x1
    fb90:	ldr	w1, [x3, x1]
    fb94:	str	x1, [x2]
    fb98:	ldr	w1, [x4, #4]
    fb9c:	ldp	x29, x30, [sp], #16
    fba0:	str	x1, [x2, #8]
    fba4:	ret
    fba8:	mov	w0, #0x16                  	// #22
    fbac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fbb0:	mov	x0, #0x0                   	// #0
    fbb4:	b	fb6c <gelf_getauxv@@ELFUTILS_1.3+0x54>
    fbb8:	mov	w0, #0x4                   	// #4
    fbbc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fbc0:	mov	x0, #0x0                   	// #0
    fbc4:	b	fb6c <gelf_getauxv@@ELFUTILS_1.3+0x54>
    fbc8:	mov	x0, #0x0                   	// #0
    fbcc:	ret

000000000000fbd0 <gelf_update_auxv@@ELFUTILS_1.3>:
    fbd0:	cbz	x0, fc84 <gelf_update_auxv@@ELFUTILS_1.3+0xb4>
    fbd4:	stp	x29, x30, [sp, #-16]!
    fbd8:	mov	x29, sp
    fbdc:	tbnz	w1, #31, fc8c <gelf_update_auxv@@ELFUTILS_1.3+0xbc>
    fbe0:	ldr	w3, [x0, #8]
    fbe4:	cmp	w3, #0x18
    fbe8:	b.ne	fca0 <gelf_update_auxv@@ELFUTILS_1.3+0xd0>  // b.any
    fbec:	ldr	x3, [x0, #40]
    fbf0:	ldr	x4, [x3, #136]
    fbf4:	ldr	w4, [x4, #32]
    fbf8:	cmp	w4, #0x1
    fbfc:	b.eq	fc3c <gelf_update_auxv@@ELFUTILS_1.3+0x6c>  // b.none
    fc00:	ldr	x4, [x0, #16]
    fc04:	add	w1, w1, #0x1
    fc08:	sbfiz	x5, x1, #4, #32
    fc0c:	cmp	x4, w1, sxtw #4
    fc10:	b.cc	fc8c <gelf_update_auxv@@ELFUTILS_1.3+0xbc>  // b.lo, b.ul, b.last
    fc14:	ldr	x0, [x0]
    fc18:	ldp	x6, x7, [x2]
    fc1c:	add	x0, x0, x5
    fc20:	stp	x6, x7, [x0, #-16]
    fc24:	ldr	w1, [x3, #156]
    fc28:	mov	w0, #0x1                   	// #1
    fc2c:	orr	w1, w1, w0
    fc30:	str	w1, [x3, #156]
    fc34:	ldp	x29, x30, [sp], #16
    fc38:	ret
    fc3c:	ldr	x5, [x2]
    fc40:	mov	x4, #0xffffffff            	// #4294967295
    fc44:	cmp	x5, x4
    fc48:	b.hi	fcb0 <gelf_update_auxv@@ELFUTILS_1.3+0xe0>  // b.pmore
    fc4c:	ldr	x6, [x2, #8]
    fc50:	cmp	x6, x4
    fc54:	b.hi	fcb0 <gelf_update_auxv@@ELFUTILS_1.3+0xe0>  // b.pmore
    fc58:	ldr	x4, [x0, #16]
    fc5c:	add	w1, w1, #0x1
    fc60:	sbfiz	x2, x1, #3, #32
    fc64:	cmp	x4, w1, sxtw #3
    fc68:	b.cc	fc8c <gelf_update_auxv@@ELFUTILS_1.3+0xbc>  // b.lo, b.ul, b.last
    fc6c:	ldr	x1, [x0]
    fc70:	sub	x0, x2, #0x8
    fc74:	add	x2, x1, x0
    fc78:	str	w5, [x1, x0]
    fc7c:	str	w6, [x2, #4]
    fc80:	b	fc24 <gelf_update_auxv@@ELFUTILS_1.3+0x54>
    fc84:	mov	w0, #0x0                   	// #0
    fc88:	ret
    fc8c:	mov	w0, #0x16                  	// #22
    fc90:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fc94:	mov	w0, #0x0                   	// #0
    fc98:	ldp	x29, x30, [sp], #16
    fc9c:	ret
    fca0:	mov	w0, #0x1f                  	// #31
    fca4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fca8:	mov	w0, #0x0                   	// #0
    fcac:	b	fc34 <gelf_update_auxv@@ELFUTILS_1.3+0x64>
    fcb0:	mov	w0, #0x21                  	// #33
    fcb4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fcb8:	mov	w0, #0x0                   	// #0
    fcbc:	b	fc34 <gelf_update_auxv@@ELFUTILS_1.3+0x64>

000000000000fcc0 <gelf_getnote@@ELFUTILS_1.3>:
    fcc0:	cbz	x0, fda0 <gelf_getnote@@ELFUTILS_1.3+0xe0>
    fcc4:	stp	x29, x30, [sp, #-16]!
    fcc8:	mov	x29, sp
    fccc:	ldr	w6, [x0, #8]
    fcd0:	cmp	w6, #0x13
    fcd4:	ccmp	w6, #0x1a, #0x4, ne  // ne = any
    fcd8:	b.ne	fda8 <gelf_getnote@@ELFUTILS_1.3+0xe8>  // b.any
    fcdc:	ldr	x5, [x0, #16]
    fce0:	cmp	x5, x1
    fce4:	b.cc	fd8c <gelf_getnote@@ELFUTILS_1.3+0xcc>  // b.lo, b.ul, b.last
    fce8:	sub	x7, x5, x1
    fcec:	cmp	x7, #0xb
    fcf0:	b.ls	fd8c <gelf_getnote@@ELFUTILS_1.3+0xcc>  // b.plast
    fcf4:	add	x7, x1, #0xc
    fcf8:	cmp	x5, x7
    fcfc:	b.cs	fd0c <gelf_getnote@@ELFUTILS_1.3+0x4c>  // b.hs, b.nlast
    fd00:	mov	x0, #0x0                   	// #0
    fd04:	ldp	x29, x30, [sp], #16
    fd08:	ret
    fd0c:	ldr	x8, [x0]
    fd10:	str	x7, [x3]
    fd14:	ldr	x5, [x0, #16]
    fd18:	add	x9, x8, x1
    fd1c:	ldr	w0, [x8, x1]
    fd20:	cmp	x0, x5
    fd24:	b.hi	fd00 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.pmore
    fd28:	sub	x3, x5, x0
    fd2c:	cmp	x3, x7
    fd30:	b.cc	fd00 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.lo, b.ul, b.last
    fd34:	ldr	w10, [x9, #4]
    fd38:	add	x7, x0, x7
    fd3c:	cmp	w6, #0x1a
    fd40:	b.eq	fdb4 <gelf_getnote@@ELFUTILS_1.3+0xf4>  // b.none
    fd44:	add	x0, x7, #0x3
    fd48:	add	w6, w10, #0x3
    fd4c:	and	x3, x0, #0xfffffffc
    fd50:	and	w6, w6, #0xfffffffc
    fd54:	cmp	x5, x3
    fd58:	b.cc	fd00 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.lo, b.ul, b.last
    fd5c:	sub	x5, x5, x3
    fd60:	mov	w0, w6
    fd64:	cmp	x5, w6, uxtw
    fd68:	b.cc	fd00 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.lo, b.ul, b.last
    fd6c:	cbz	w6, fdc8 <gelf_getnote@@ELFUTILS_1.3+0x108>
    fd70:	ldr	x1, [x8, x1]
    fd74:	str	x3, [x4]
    fd78:	str	x1, [x2]
    fd7c:	add	x0, x0, x3
    fd80:	ldr	w1, [x9, #8]
    fd84:	str	w1, [x2, #8]
    fd88:	b	fd04 <gelf_getnote@@ELFUTILS_1.3+0x44>
    fd8c:	mov	w0, #0x1d                  	// #29
    fd90:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fd94:	mov	x0, #0x0                   	// #0
    fd98:	ldp	x29, x30, [sp], #16
    fd9c:	ret
    fda0:	mov	x0, #0x0                   	// #0
    fda4:	ret
    fda8:	mov	w0, #0x4                   	// #4
    fdac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fdb0:	b	fd00 <gelf_getnote@@ELFUTILS_1.3+0x40>
    fdb4:	add	x0, x7, #0x7
    fdb8:	add	w6, w10, #0x7
    fdbc:	and	x3, x0, #0xfffffff8
    fdc0:	and	w6, w6, #0xfffffff8
    fdc4:	b	fd54 <gelf_getnote@@ELFUTILS_1.3+0x94>
    fdc8:	cbz	w10, fd70 <gelf_getnote@@ELFUTILS_1.3+0xb0>
    fdcc:	b	fd00 <gelf_getnote@@ELFUTILS_1.3+0x40>

000000000000fdd0 <gelf_xlatetof@@ELFUTILS_1.0>:
    fdd0:	mov	x5, x1
    fdd4:	mov	x1, x2
    fdd8:	mov	w2, w3
    fddc:	cbz	x0, fdf8 <gelf_xlatetof@@ELFUTILS_1.0+0x28>
    fde0:	ldr	w0, [x0, #32]
    fde4:	cmp	w0, #0x1
    fde8:	mov	x0, x5
    fdec:	b.eq	fdf4 <gelf_xlatetof@@ELFUTILS_1.0+0x24>  // b.none
    fdf0:	b	5660 <elf64_xlatetof@@ELFUTILS_1.0>
    fdf4:	b	5488 <elf32_xlatetof@@ELFUTILS_1.0>
    fdf8:	ret
    fdfc:	nop

000000000000fe00 <gelf_xlatetom@@ELFUTILS_1.0>:
    fe00:	mov	x5, x1
    fe04:	mov	x1, x2
    fe08:	mov	w2, w3
    fe0c:	cbz	x0, fe28 <gelf_xlatetom@@ELFUTILS_1.0+0x28>
    fe10:	ldr	w0, [x0, #32]
    fe14:	cmp	w0, #0x1
    fe18:	mov	x0, x5
    fe1c:	b.eq	fe24 <gelf_xlatetom@@ELFUTILS_1.0+0x24>  // b.none
    fe20:	b	5750 <elf64_xlatetom@@ELFUTILS_1.0>
    fe24:	b	5570 <elf32_xlatetom@@ELFUTILS_1.0>
    fe28:	ret
    fe2c:	nop
    fe30:	stp	x29, x30, [sp, #-96]!
    fe34:	mov	x29, sp
    fe38:	str	x27, [sp, #80]
    fe3c:	ldr	x27, [x0]
    fe40:	stp	x25, x26, [sp, #64]
    fe44:	mov	x26, x0
    fe48:	stp	x19, x20, [sp, #16]
    fe4c:	mov	x25, x1
    fe50:	udiv	x0, x1, x27
    fe54:	stp	x21, x22, [sp, #32]
    fe58:	msub	x0, x0, x27, x1
    fe5c:	add	x19, x0, #0x1
    fe60:	add	x0, x0, x0, lsl #2
    fe64:	lsl	x21, x19, #2
    fe68:	add	x1, x26, x0, lsl #3
    fe6c:	ldr	x0, [x1, #48]
    fe70:	cbz	x0, fecc <gelf_xlatetom@@ELFUTILS_1.0+0xcc>
    fe74:	stp	x23, x24, [sp, #48]
    fe78:	cmp	x25, x0
    fe7c:	mov	x24, x2
    fe80:	b.eq	ff24 <gelf_xlatetom@@ELFUTILS_1.0+0x124>  // b.none
    fe84:	sub	x0, x27, #0x2
    fe88:	udiv	x23, x25, x0
    fe8c:	msub	x23, x23, x0, x25
    fe90:	add	x23, x23, #0x1
    fe94:	sub	x27, x27, x23
    fe98:	cmp	x23, x19
    fe9c:	add	x1, x19, x27
    fea0:	sub	x19, x19, x23
    fea4:	csel	x19, x19, x1, cc  // cc = lo, ul, last
    fea8:	lsl	x21, x19, #2
    feac:	add	x20, x21, x19
    feb0:	lsl	x20, x20, #3
    feb4:	add	x2, x26, x20
    feb8:	ldr	x22, [x2, #8]
    febc:	cmp	x25, x22
    fec0:	b.eq	fef0 <gelf_xlatetom@@ELFUTILS_1.0+0xf0>  // b.none
    fec4:	cbnz	x22, fe98 <gelf_xlatetom@@ELFUTILS_1.0+0x98>
    fec8:	ldp	x23, x24, [sp, #48]
    fecc:	add	x19, x21, x19
    fed0:	add	x0, x26, x19, lsl #3
    fed4:	add	x0, x0, #0x8
    fed8:	ldp	x19, x20, [sp, #16]
    fedc:	ldp	x21, x22, [sp, #32]
    fee0:	ldp	x25, x26, [sp, #64]
    fee4:	ldr	x27, [sp, #80]
    fee8:	ldp	x29, x30, [sp], #96
    feec:	ret
    fef0:	ldr	x0, [x24]
    fef4:	ldr	x1, [x2, #16]
    fef8:	bl	31c0 <strcmp@plt>
    fefc:	cbnz	w0, fec4 <gelf_xlatetom@@ELFUTILS_1.0+0xc4>
    ff00:	add	x20, x20, #0x8
    ff04:	add	x0, x26, x20
    ff08:	ldp	x19, x20, [sp, #16]
    ff0c:	ldp	x21, x22, [sp, #32]
    ff10:	ldp	x23, x24, [sp, #48]
    ff14:	ldp	x25, x26, [sp, #64]
    ff18:	ldr	x27, [sp, #80]
    ff1c:	ldp	x29, x30, [sp], #96
    ff20:	ret
    ff24:	ldr	x0, [x2]
    ff28:	ldr	x1, [x1, #56]
    ff2c:	bl	31c0 <strcmp@plt>
    ff30:	cbnz	w0, fe84 <gelf_xlatetom@@ELFUTILS_1.0+0x84>
    ff34:	add	x19, x19, x19, lsl #2
    ff38:	ldp	x23, x24, [sp, #48]
    ff3c:	add	x0, x26, x19, lsl #3
    ff40:	add	x0, x0, #0x8
    ff44:	b	fed8 <gelf_xlatetom@@ELFUTILS_1.0+0xd8>

000000000000ff48 <nlist@@ELFUTILS_1.0>:
    ff48:	stp	x29, x30, [sp, #-208]!
    ff4c:	mov	x29, sp
    ff50:	stp	x19, x20, [sp, #16]
    ff54:	mov	x19, x1
    ff58:	mov	w1, #0x0                   	// #0
    ff5c:	bl	30d0 <open@plt>
    ff60:	cmn	w0, #0x1
    ff64:	b.eq	1018c <nlist@@ELFUTILS_1.0+0x244>  // b.none
    ff68:	stp	x23, x24, [sp, #48]
    ff6c:	mov	w24, w0
    ff70:	mov	w0, #0x1                   	// #1
    ff74:	bl	3448 <elf_version@@ELFUTILS_1.0>
    ff78:	mov	w0, w24
    ff7c:	mov	x2, #0x0                   	// #0
    ff80:	mov	w1, #0x8                   	// #8
    ff84:	bl	4ca0 <elf_begin@@ELFUTILS_1.0>
    ff88:	mov	x23, x0
    ff8c:	cbz	x0, fff4 <nlist@@ELFUTILS_1.0+0xac>
    ff90:	mov	x20, #0x0                   	// #0
    ff94:	stp	x21, x22, [sp, #32]
    ff98:	mov	x22, #0x0                   	// #0
    ff9c:	stp	x25, x26, [sp, #64]
    ffa0:	add	x25, sp, #0x90
    ffa4:	b	ffc8 <nlist@@ELFUTILS_1.0+0x80>
    ffa8:	bl	9c58 <gelf_getshdr@@ELFUTILS_1.0>
    ffac:	mov	x21, x0
    ffb0:	cbz	x0, ffe4 <nlist@@ELFUTILS_1.0+0x9c>
    ffb4:	ldr	w1, [x0, #4]
    ffb8:	cmp	w1, #0x2
    ffbc:	b.eq	10058 <nlist@@ELFUTILS_1.0+0x110>  // b.none
    ffc0:	cmp	w1, #0xb
    ffc4:	csel	x22, x22, x20, ne  // ne = any
    ffc8:	mov	x1, x20
    ffcc:	mov	x0, x23
    ffd0:	bl	8e30 <elf_nextscn@@ELFUTILS_1.0>
    ffd4:	mov	x20, x0
    ffd8:	mov	x1, x25
    ffdc:	cbnz	x0, ffa8 <nlist@@ELFUTILS_1.0+0x60>
    ffe0:	cbnz	x22, 10040 <nlist@@ELFUTILS_1.0+0xf8>
    ffe4:	mov	x0, x23
    ffe8:	bl	5000 <elf_end@@ELFUTILS_1.0>
    ffec:	ldp	x21, x22, [sp, #32]
    fff0:	ldp	x25, x26, [sp, #64]
    fff4:	mov	w0, w24
    fff8:	bl	3180 <close@plt>
    fffc:	ldp	x23, x24, [sp, #48]
   10000:	ldr	x0, [x19]
   10004:	cbnz	x0, 10028 <nlist@@ELFUTILS_1.0+0xe0>
   10008:	b	10030 <nlist@@ELFUTILS_1.0+0xe8>
   1000c:	strb	wzr, [x19, #20]
   10010:	strb	wzr, [x19, #21]
   10014:	str	xzr, [x19, #8]
   10018:	strh	wzr, [x19, #16]
   1001c:	strh	wzr, [x19, #18]
   10020:	ldr	x0, [x19, #24]!
   10024:	cbz	x0, 10030 <nlist@@ELFUTILS_1.0+0xe8>
   10028:	ldrb	w0, [x0]
   1002c:	cbnz	w0, 1000c <nlist@@ELFUTILS_1.0+0xc4>
   10030:	mov	w0, #0xffffffff            	// #-1
   10034:	ldp	x19, x20, [sp, #16]
   10038:	ldp	x29, x30, [sp], #208
   1003c:	ret
   10040:	add	x1, sp, #0x90
   10044:	mov	x0, x22
   10048:	bl	9c58 <gelf_getshdr@@ELFUTILS_1.0>
   1004c:	mov	x21, x0
   10050:	cbz	x0, ffe4 <nlist@@ELFUTILS_1.0+0x9c>
   10054:	mov	x20, x22
   10058:	mov	x0, x20
   1005c:	mov	x1, #0x0                   	// #0
   10060:	bl	a938 <elf_getdata@@ELFUTILS_1.0>
   10064:	mov	x22, x0
   10068:	cbz	x0, ffe4 <nlist@@ELFUTILS_1.0+0x9c>
   1006c:	ldr	x20, [x21, #32]
   10070:	mov	w1, #0xb                   	// #11
   10074:	mov	x0, x23
   10078:	mov	w3, #0x1                   	// #1
   1007c:	mov	x2, #0x1                   	// #1
   10080:	stp	x27, x28, [sp, #80]
   10084:	bl	5408 <gelf_fsize@@ELFUTILS_1.0>
   10088:	udiv	x27, x20, x0
   1008c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10090:	mov	x28, x0
   10094:	cmp	x27, x1
   10098:	b.cs	1024c <nlist@@ELFUTILS_1.0+0x304>  // b.hs, b.nlast
   1009c:	add	x1, x27, x27, lsl #1
   100a0:	mov	x0, #0xa                   	// #10
   100a4:	cmp	x1, #0x15
   100a8:	lsr	x1, x1, #1
   100ac:	csel	x0, x1, x0, hi  // hi = pmore
   100b0:	bl	110a8 <elf64_checksum@@ELFUTILS_1.0+0x210>
   100b4:	mov	x25, x0
   100b8:	mov	x1, #0x1                   	// #1
   100bc:	add	x2, x0, x1
   100c0:	add	x2, x2, x2, lsl #2
   100c4:	lsl	x2, x2, #3
   100c8:	add	x0, x2, #0x8
   100cc:	bl	3140 <calloc@plt>
   100d0:	mov	x26, x0
   100d4:	cbz	x0, 10258 <nlist@@ELFUTILS_1.0+0x310>
   100d8:	str	x25, [x0]
   100dc:	add	x25, sp, #0x70
   100e0:	cmp	x20, x28
   100e4:	add	x28, x25, #0x8
   100e8:	mov	x20, #0x0                   	// #0
   100ec:	b.cs	10150 <nlist@@ELFUTILS_1.0+0x208>  // b.hs, b.nlast
   100f0:	b	10198 <nlist@@ELFUTILS_1.0+0x250>
   100f4:	ldr	w2, [x2]
   100f8:	ldr	w1, [x21, #40]
   100fc:	bl	9e98 <elf_strptr@@ELFUTILS_1.0>
   10100:	str	x0, [sp, #112]
   10104:	cbz	x0, 1016c <nlist@@ELFUTILS_1.0+0x224>
   10108:	ldrb	w1, [x0]
   1010c:	cbz	w1, 10144 <nlist@@ELFUTILS_1.0+0x1fc>
   10110:	bl	3488 <elf_hash@@ELFUTILS_1.0>
   10114:	mov	x1, x0
   10118:	mov	x2, x25
   1011c:	mov	x0, x26
   10120:	str	x1, [sp, #104]
   10124:	bl	fe30 <gelf_xlatetom@@ELFUTILS_1.0+0x30>
   10128:	mov	x2, x0
   1012c:	ldr	x1, [sp, #104]
   10130:	str	x1, [x2], #8
   10134:	ldp	x4, x5, [x25]
   10138:	stp	x4, x5, [x0, #8]
   1013c:	ldp	x0, x1, [x25, #16]
   10140:	stp	x0, x1, [x2, #16]
   10144:	add	x20, x20, #0x1
   10148:	cmp	x27, x20
   1014c:	b.ls	10198 <nlist@@ELFUTILS_1.0+0x250>  // b.plast
   10150:	mov	x2, x28
   10154:	mov	w1, w20
   10158:	mov	x0, x22
   1015c:	bl	efd8 <gelf_getsym@@ELFUTILS_1.0>
   10160:	mov	x2, x0
   10164:	mov	x0, x23
   10168:	cbnz	x2, 100f4 <nlist@@ELFUTILS_1.0+0x1ac>
   1016c:	mov	x0, x26
   10170:	bl	3200 <free@plt>
   10174:	mov	x0, x23
   10178:	ldp	x27, x28, [sp, #80]
   1017c:	bl	5000 <elf_end@@ELFUTILS_1.0>
   10180:	ldp	x21, x22, [sp, #32]
   10184:	ldp	x25, x26, [sp, #64]
   10188:	b	fff4 <nlist@@ELFUTILS_1.0+0xac>
   1018c:	mov	w0, #0x27                  	// #39
   10190:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10194:	b	10000 <nlist@@ELFUTILS_1.0+0xb8>
   10198:	ldr	x1, [x19]
   1019c:	add	x20, sp, #0x70
   101a0:	cbnz	x1, 101d4 <nlist@@ELFUTILS_1.0+0x28c>
   101a4:	b	1021c <nlist@@ELFUTILS_1.0+0x2d4>
   101a8:	ldrh	w0, [x1, #14]
   101ac:	ldr	x2, [x1, #16]
   101b0:	str	x2, [x19, #8]
   101b4:	strh	w0, [x19, #16]
   101b8:	ldrb	w0, [x1, #12]
   101bc:	strb	wzr, [x19, #20]
   101c0:	and	w0, w0, #0xf
   101c4:	strh	w0, [x19, #18]
   101c8:	strb	wzr, [x19, #21]
   101cc:	ldr	x1, [x19, #24]!
   101d0:	cbz	x1, 1021c <nlist@@ELFUTILS_1.0+0x2d4>
   101d4:	ldrb	w2, [x1]
   101d8:	mov	x0, x1
   101dc:	cbz	w2, 1021c <nlist@@ELFUTILS_1.0+0x2d4>
   101e0:	str	x1, [sp, #112]
   101e4:	bl	3488 <elf_hash@@ELFUTILS_1.0>
   101e8:	mov	x1, x0
   101ec:	mov	x2, x20
   101f0:	mov	x0, x26
   101f4:	bl	fe30 <gelf_xlatetom@@ELFUTILS_1.0+0x30>
   101f8:	add	x1, x0, #0x8
   101fc:	ldr	x0, [x0]
   10200:	cbnz	x0, 101a8 <nlist@@ELFUTILS_1.0+0x260>
   10204:	str	xzr, [x19, #8]
   10208:	strh	wzr, [x19, #16]
   1020c:	strh	wzr, [x19, #18]
   10210:	strb	wzr, [x19, #20]
   10214:	strb	wzr, [x19, #21]
   10218:	b	101cc <nlist@@ELFUTILS_1.0+0x284>
   1021c:	mov	x0, x26
   10220:	bl	3200 <free@plt>
   10224:	mov	x0, x23
   10228:	bl	5000 <elf_end@@ELFUTILS_1.0>
   1022c:	mov	w0, w24
   10230:	bl	3180 <close@plt>
   10234:	mov	w0, #0x0                   	// #0
   10238:	ldp	x21, x22, [sp, #32]
   1023c:	ldp	x23, x24, [sp, #48]
   10240:	ldp	x25, x26, [sp, #64]
   10244:	ldp	x27, x28, [sp, #80]
   10248:	b	10034 <nlist@@ELFUTILS_1.0+0xec>
   1024c:	bl	3340 <__errno_location@plt>
   10250:	mov	w1, #0x16                  	// #22
   10254:	str	w1, [x0]
   10258:	mov	w0, #0x8                   	// #8
   1025c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10260:	ldp	x27, x28, [sp, #80]
   10264:	b	ffe4 <nlist@@ELFUTILS_1.0+0x9c>

0000000000010268 <gelf_getsymshndx@@ELFUTILS_1.0>:
   10268:	cbz	x0, 10370 <gelf_getsymshndx@@ELFUTILS_1.0+0x108>
   1026c:	stp	x29, x30, [sp, #-16]!
   10270:	mov	x29, sp
   10274:	ldr	w5, [x0, #8]
   10278:	cmp	w5, #0xb
   1027c:	b.ne	10348 <gelf_getsymshndx@@ELFUTILS_1.0+0xe0>  // b.any
   10280:	cbz	x1, 10378 <gelf_getsymshndx@@ELFUTILS_1.0+0x110>
   10284:	ldr	w5, [x1, #8]
   10288:	cmp	w5, #0xc
   1028c:	b.ne	10348 <gelf_getsymshndx@@ELFUTILS_1.0+0xe0>  // b.any
   10290:	ldr	x5, [x1, #16]
   10294:	mov	w6, w2
   10298:	ldr	x7, [x0, #40]
   1029c:	lsr	x5, x5, #2
   102a0:	cmp	x5, w2, uxtw
   102a4:	ldr	x5, [x7, #136]
   102a8:	b.ls	1035c <gelf_getsymshndx@@ELFUTILS_1.0+0xf4>  // b.plast
   102ac:	ldr	x1, [x1]
   102b0:	ldr	w7, [x1, w2, sxtw #2]
   102b4:	ldr	w5, [x5, #32]
   102b8:	ldr	x1, [x0, #16]
   102bc:	cmp	w5, #0x1
   102c0:	b.eq	10308 <gelf_getsymshndx@@ELFUTILS_1.0+0xa0>  // b.none
   102c4:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   102c8:	movk	x5, #0xaaab
   102cc:	umulh	x1, x1, x5
   102d0:	cmp	x6, x1, lsr #4
   102d4:	b.cs	1035c <gelf_getsymshndx@@ELFUTILS_1.0+0xf4>  // b.hs, b.nlast
   102d8:	ldr	x0, [x0]
   102dc:	mov	w1, #0x18                  	// #24
   102e0:	smaddl	x2, w2, w1, x0
   102e4:	ldp	x0, x1, [x2]
   102e8:	stp	x0, x1, [x3]
   102ec:	ldr	x0, [x2, #16]
   102f0:	str	x0, [x3, #16]
   102f4:	mov	x0, x3
   102f8:	cbz	x4, 10300 <gelf_getsymshndx@@ELFUTILS_1.0+0x98>
   102fc:	str	w7, [x4]
   10300:	ldp	x29, x30, [sp], #16
   10304:	ret
   10308:	cmp	x6, x1, lsr #4
   1030c:	b.cs	1035c <gelf_getsymshndx@@ELFUTILS_1.0+0xf4>  // b.hs, b.nlast
   10310:	ldr	x1, [x0]
   10314:	sbfiz	x2, x2, #4, #32
   10318:	add	x0, x1, x2
   1031c:	ldr	w1, [x1, x2]
   10320:	str	w1, [x3]
   10324:	ldrb	w1, [x0, #12]
   10328:	strb	w1, [x3, #4]
   1032c:	ldrb	w1, [x0, #13]
   10330:	strb	w1, [x3, #5]
   10334:	ldp	w2, w1, [x0, #4]
   10338:	ldrh	w0, [x0, #14]
   1033c:	strh	w0, [x3, #6]
   10340:	stp	x2, x1, [x3, #8]
   10344:	b	102f4 <gelf_getsymshndx@@ELFUTILS_1.0+0x8c>
   10348:	mov	w0, #0x4                   	// #4
   1034c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10350:	mov	x0, #0x0                   	// #0
   10354:	ldp	x29, x30, [sp], #16
   10358:	ret
   1035c:	mov	w0, #0x16                  	// #22
   10360:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10364:	mov	x0, #0x0                   	// #0
   10368:	ldp	x29, x30, [sp], #16
   1036c:	ret
   10370:	mov	x0, #0x0                   	// #0
   10374:	ret
   10378:	ldr	x1, [x0, #40]
   1037c:	mov	w6, w2
   10380:	mov	w7, #0x0                   	// #0
   10384:	ldr	x5, [x1, #136]
   10388:	b	102b4 <gelf_getsymshndx@@ELFUTILS_1.0+0x4c>
   1038c:	nop

0000000000010390 <gelf_update_symshndx@@ELFUTILS_1.0>:
   10390:	cbz	x0, 104b0 <gelf_update_symshndx@@ELFUTILS_1.0+0x120>
   10394:	stp	x29, x30, [sp, #-16]!
   10398:	mov	x29, sp
   1039c:	ldr	w5, [x0, #8]
   103a0:	cmp	w5, #0xb
   103a4:	b.ne	104b8 <gelf_update_symshndx@@ELFUTILS_1.0+0x128>  // b.any
   103a8:	ldr	x9, [x0, #40]
   103ac:	ldr	x7, [x9, #136]
   103b0:	cbz	x1, 10498 <gelf_update_symshndx@@ELFUTILS_1.0+0x108>
   103b4:	ldr	x8, [x1, #16]
   103b8:	add	w6, w2, #0x1
   103bc:	sbfiz	x5, x6, #2, #32
   103c0:	cmp	x8, w6, sxtw #2
   103c4:	b.cc	1049c <gelf_update_symshndx@@ELFUTILS_1.0+0x10c>  // b.lo, b.ul, b.last
   103c8:	ldr	x1, [x1]
   103cc:	sub	x5, x5, #0x4
   103d0:	add	x1, x1, x5
   103d4:	ldr	w5, [x7, #32]
   103d8:	cmp	w5, #0x1
   103dc:	b.eq	10438 <gelf_update_symshndx@@ELFUTILS_1.0+0xa8>  // b.none
   103e0:	ldr	x6, [x0, #16]
   103e4:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   103e8:	movk	x7, #0xaaab
   103ec:	mov	w5, w2
   103f0:	umulh	x6, x6, x7
   103f4:	cmp	x5, x6, lsr #4
   103f8:	b.cs	1049c <gelf_update_symshndx@@ELFUTILS_1.0+0x10c>  // b.hs, b.nlast
   103fc:	ldr	x0, [x0]
   10400:	mov	w5, #0x18                  	// #24
   10404:	ldp	x6, x7, [x3]
   10408:	smaddl	x2, w2, w5, x0
   1040c:	stp	x6, x7, [x2]
   10410:	ldr	x0, [x3, #16]
   10414:	str	x0, [x2, #16]
   10418:	cbz	x1, 10420 <gelf_update_symshndx@@ELFUTILS_1.0+0x90>
   1041c:	str	w4, [x1]
   10420:	ldr	w1, [x9, #156]
   10424:	mov	w0, #0x1                   	// #1
   10428:	orr	w1, w1, w0
   1042c:	str	w1, [x9, #156]
   10430:	ldp	x29, x30, [sp], #16
   10434:	ret
   10438:	ldr	x6, [x3, #8]
   1043c:	mov	x5, #0xffffffff            	// #4294967295
   10440:	cmp	x6, x5
   10444:	b.hi	104c8 <gelf_update_symshndx@@ELFUTILS_1.0+0x138>  // b.pmore
   10448:	ldr	x7, [x3, #16]
   1044c:	cmp	x7, x5
   10450:	b.hi	104c8 <gelf_update_symshndx@@ELFUTILS_1.0+0x138>  // b.pmore
   10454:	ldr	x8, [x0, #16]
   10458:	mov	w5, w2
   1045c:	cmp	x5, x8, lsr #4
   10460:	b.cs	1049c <gelf_update_symshndx@@ELFUTILS_1.0+0x10c>  // b.hs, b.nlast
   10464:	ldr	x5, [x0]
   10468:	sbfiz	x2, x2, #4, #32
   1046c:	ldr	w8, [x3]
   10470:	add	x0, x5, x2
   10474:	str	w8, [x5, x2]
   10478:	stp	w6, w7, [x0, #4]
   1047c:	ldrb	w2, [x3, #4]
   10480:	strb	w2, [x0, #12]
   10484:	ldrb	w2, [x3, #5]
   10488:	strb	w2, [x0, #13]
   1048c:	ldrh	w2, [x3, #6]
   10490:	strh	w2, [x0, #14]
   10494:	b	10418 <gelf_update_symshndx@@ELFUTILS_1.0+0x88>
   10498:	cbz	w4, 103d4 <gelf_update_symshndx@@ELFUTILS_1.0+0x44>
   1049c:	mov	w0, #0x16                  	// #22
   104a0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   104a4:	mov	w0, #0x0                   	// #0
   104a8:	ldp	x29, x30, [sp], #16
   104ac:	ret
   104b0:	mov	w0, #0x0                   	// #0
   104b4:	ret
   104b8:	mov	w0, #0x1f                  	// #31
   104bc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   104c0:	mov	w0, #0x0                   	// #0
   104c4:	b	10430 <gelf_update_symshndx@@ELFUTILS_1.0+0xa0>
   104c8:	mov	w0, #0x21                  	// #33
   104cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   104d0:	mov	w0, #0x0                   	// #0
   104d4:	b	10430 <gelf_update_symshndx@@ELFUTILS_1.0+0xa0>

00000000000104d8 <gelf_update_versym@@ELFUTILS_1.0>:
   104d8:	cbz	x0, 1052c <gelf_update_versym@@ELFUTILS_1.0+0x54>
   104dc:	mov	x3, x0
   104e0:	stp	x29, x30, [sp, #-16]!
   104e4:	mov	w0, w1
   104e8:	mov	x29, sp
   104ec:	ldr	x4, [x3, #16]
   104f0:	cmp	x0, x4, lsr #1
   104f4:	b.cs	10534 <gelf_update_versym@@ELFUTILS_1.0+0x5c>  // b.hs, b.nlast
   104f8:	ldr	w0, [x3, #8]
   104fc:	cmp	w0, #0x4
   10500:	b.ne	10544 <gelf_update_versym@@ELFUTILS_1.0+0x6c>  // b.any
   10504:	ldr	x4, [x3, #40]
   10508:	mov	w0, #0x1                   	// #1
   1050c:	ldr	x3, [x3]
   10510:	ldrh	w5, [x2]
   10514:	ldr	w2, [x4, #156]
   10518:	strh	w5, [x3, w1, sxtw #1]
   1051c:	orr	w1, w2, w0
   10520:	str	w1, [x4, #156]
   10524:	ldp	x29, x30, [sp], #16
   10528:	ret
   1052c:	mov	w0, #0x0                   	// #0
   10530:	ret
   10534:	mov	w0, #0x16                  	// #22
   10538:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1053c:	mov	w0, #0x0                   	// #0
   10540:	b	10524 <gelf_update_versym@@ELFUTILS_1.0+0x4c>
   10544:	mov	w0, #0x1f                  	// #31
   10548:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1054c:	mov	w0, #0x0                   	// #0
   10550:	b	10524 <gelf_update_versym@@ELFUTILS_1.0+0x4c>
   10554:	nop

0000000000010558 <gelf_update_verneed@@ELFUTILS_1.0>:
   10558:	cbz	x0, 105b8 <gelf_update_verneed@@ELFUTILS_1.0+0x60>
   1055c:	stp	x29, x30, [sp, #-16]!
   10560:	mov	x29, sp
   10564:	tbnz	w1, #31, 105c0 <gelf_update_verneed@@ELFUTILS_1.0+0x68>
   10568:	mov	x3, x0
   1056c:	sxtw	x1, w1
   10570:	ldr	x0, [x0, #16]
   10574:	add	x4, x1, #0x10
   10578:	cmp	x4, x0
   1057c:	b.hi	105c0 <gelf_update_verneed@@ELFUTILS_1.0+0x68>  // b.pmore
   10580:	ldr	w0, [x3, #8]
   10584:	cmp	w0, #0x11
   10588:	b.ne	105d4 <gelf_update_verneed@@ELFUTILS_1.0+0x7c>  // b.any
   1058c:	ldr	x4, [x3]
   10590:	mov	w0, #0x1                   	// #1
   10594:	ldp	x6, x7, [x2]
   10598:	add	x1, x4, x1
   1059c:	stp	x6, x7, [x1]
   105a0:	ldr	x2, [x3, #40]
   105a4:	ldr	w1, [x2, #156]
   105a8:	orr	w1, w1, w0
   105ac:	str	w1, [x2, #156]
   105b0:	ldp	x29, x30, [sp], #16
   105b4:	ret
   105b8:	mov	w0, #0x0                   	// #0
   105bc:	ret
   105c0:	mov	w0, #0x16                  	// #22
   105c4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   105c8:	mov	w0, #0x0                   	// #0
   105cc:	ldp	x29, x30, [sp], #16
   105d0:	ret
   105d4:	mov	w0, #0x1f                  	// #31
   105d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   105dc:	mov	w0, #0x0                   	// #0
   105e0:	b	105b0 <gelf_update_verneed@@ELFUTILS_1.0+0x58>
   105e4:	nop

00000000000105e8 <gelf_update_vernaux@@ELFUTILS_1.0>:
   105e8:	cbz	x0, 10648 <gelf_update_vernaux@@ELFUTILS_1.0+0x60>
   105ec:	stp	x29, x30, [sp, #-16]!
   105f0:	mov	x29, sp
   105f4:	tbnz	w1, #31, 10650 <gelf_update_vernaux@@ELFUTILS_1.0+0x68>
   105f8:	mov	x3, x0
   105fc:	sxtw	x1, w1
   10600:	ldr	x0, [x0, #16]
   10604:	add	x4, x1, #0x10
   10608:	cmp	x4, x0
   1060c:	b.hi	10650 <gelf_update_vernaux@@ELFUTILS_1.0+0x68>  // b.pmore
   10610:	ldr	w0, [x3, #8]
   10614:	cmp	w0, #0x11
   10618:	b.ne	10664 <gelf_update_vernaux@@ELFUTILS_1.0+0x7c>  // b.any
   1061c:	ldr	x4, [x3]
   10620:	mov	w0, #0x1                   	// #1
   10624:	ldp	x6, x7, [x2]
   10628:	add	x1, x4, x1
   1062c:	stp	x6, x7, [x1]
   10630:	ldr	x2, [x3, #40]
   10634:	ldr	w1, [x2, #156]
   10638:	orr	w1, w1, w0
   1063c:	str	w1, [x2, #156]
   10640:	ldp	x29, x30, [sp], #16
   10644:	ret
   10648:	mov	w0, #0x0                   	// #0
   1064c:	ret
   10650:	mov	w0, #0x16                  	// #22
   10654:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10658:	mov	w0, #0x0                   	// #0
   1065c:	ldp	x29, x30, [sp], #16
   10660:	ret
   10664:	mov	w0, #0x1f                  	// #31
   10668:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1066c:	mov	w0, #0x0                   	// #0
   10670:	b	10640 <gelf_update_vernaux@@ELFUTILS_1.0+0x58>
   10674:	nop

0000000000010678 <gelf_update_verdef@@ELFUTILS_1.0>:
   10678:	cbz	x0, 106e0 <gelf_update_verdef@@ELFUTILS_1.0+0x68>
   1067c:	stp	x29, x30, [sp, #-16]!
   10680:	mov	x29, sp
   10684:	tbnz	w1, #31, 106e8 <gelf_update_verdef@@ELFUTILS_1.0+0x70>
   10688:	mov	x3, x0
   1068c:	sxtw	x1, w1
   10690:	ldr	x0, [x0, #16]
   10694:	add	x4, x1, #0x14
   10698:	cmp	x4, x0
   1069c:	b.hi	106e8 <gelf_update_verdef@@ELFUTILS_1.0+0x70>  // b.pmore
   106a0:	ldr	w0, [x3, #8]
   106a4:	cmp	w0, #0xf
   106a8:	b.ne	106fc <gelf_update_verdef@@ELFUTILS_1.0+0x84>  // b.any
   106ac:	ldr	x4, [x3]
   106b0:	mov	w0, #0x1                   	// #1
   106b4:	ldp	x6, x7, [x2]
   106b8:	add	x1, x4, x1
   106bc:	stp	x6, x7, [x1]
   106c0:	ldr	w2, [x2, #16]
   106c4:	str	w2, [x1, #16]
   106c8:	ldr	x2, [x3, #40]
   106cc:	ldr	w1, [x2, #156]
   106d0:	orr	w1, w1, w0
   106d4:	str	w1, [x2, #156]
   106d8:	ldp	x29, x30, [sp], #16
   106dc:	ret
   106e0:	mov	w0, #0x0                   	// #0
   106e4:	ret
   106e8:	mov	w0, #0x16                  	// #22
   106ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   106f0:	mov	w0, #0x0                   	// #0
   106f4:	ldp	x29, x30, [sp], #16
   106f8:	ret
   106fc:	mov	w0, #0x1f                  	// #31
   10700:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10704:	mov	w0, #0x0                   	// #0
   10708:	b	106d8 <gelf_update_verdef@@ELFUTILS_1.0+0x60>
   1070c:	nop

0000000000010710 <gelf_update_verdaux@@ELFUTILS_1.0>:
   10710:	cbz	x0, 1076c <gelf_update_verdaux@@ELFUTILS_1.0+0x5c>
   10714:	stp	x29, x30, [sp, #-16]!
   10718:	mov	x29, sp
   1071c:	tbnz	w1, #31, 10774 <gelf_update_verdaux@@ELFUTILS_1.0+0x64>
   10720:	mov	x3, x0
   10724:	sxtw	x0, w1
   10728:	add	x0, x0, #0x8
   1072c:	ldr	x4, [x3, #16]
   10730:	cmp	x0, x4
   10734:	b.hi	10774 <gelf_update_verdaux@@ELFUTILS_1.0+0x64>  // b.pmore
   10738:	ldr	w0, [x3, #8]
   1073c:	cmp	w0, #0xf
   10740:	b.ne	10788 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>  // b.any
   10744:	ldr	x4, [x3]
   10748:	mov	w0, #0x1                   	// #1
   1074c:	ldr	x2, [x2]
   10750:	str	x2, [x4, w1, sxtw]
   10754:	ldr	x2, [x3, #40]
   10758:	ldr	w1, [x2, #156]
   1075c:	orr	w1, w1, w0
   10760:	str	w1, [x2, #156]
   10764:	ldp	x29, x30, [sp], #16
   10768:	ret
   1076c:	mov	w0, #0x0                   	// #0
   10770:	ret
   10774:	mov	w0, #0x16                  	// #22
   10778:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1077c:	mov	w0, #0x0                   	// #0
   10780:	ldp	x29, x30, [sp], #16
   10784:	ret
   10788:	mov	w0, #0x1f                  	// #31
   1078c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10790:	mov	w0, #0x0                   	// #0
   10794:	b	10764 <gelf_update_verdaux@@ELFUTILS_1.0+0x54>
   10798:	ldr	x2, [x0, #72]
   1079c:	cbz	x2, 1081c <gelf_update_verdaux@@ELFUTILS_1.0+0x10c>
   107a0:	ldr	w3, [x0, #32]
   107a4:	cmp	w3, #0x1
   107a8:	b.eq	107e8 <gelf_update_verdaux@@ELFUTILS_1.0+0xd8>  // b.none
   107ac:	ldrh	w2, [x2, #56]
   107b0:	mov	x3, #0xffff                	// #65535
   107b4:	str	x2, [x1]
   107b8:	cmp	x2, x3
   107bc:	b.eq	107c8 <gelf_update_verdaux@@ELFUTILS_1.0+0xb8>  // b.none
   107c0:	mov	w0, #0x0                   	// #0
   107c4:	ret
   107c8:	ldr	w2, [x0, #200]
   107cc:	cbz	w2, 107c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   107d0:	ldr	x0, [x0, #360]
   107d4:	cbz	x0, 107c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   107d8:	ldr	w2, [x0, #44]
   107dc:	mov	w0, #0x0                   	// #0
   107e0:	str	x2, [x1]
   107e4:	ret
   107e8:	ldrh	w2, [x2, #44]
   107ec:	mov	x3, #0xffff                	// #65535
   107f0:	str	x2, [x1]
   107f4:	cmp	x2, x3
   107f8:	b.ne	107c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>  // b.any
   107fc:	ldr	w2, [x0, #200]
   10800:	cbz	w2, 107c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   10804:	ldr	x0, [x0, #360]
   10808:	cbz	x0, 107c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   1080c:	ldr	w2, [x0, #28]
   10810:	mov	w0, #0x0                   	// #0
   10814:	str	x2, [x1]
   10818:	ret
   1081c:	stp	x29, x30, [sp, #-16]!
   10820:	mov	w0, #0x1a                  	// #26
   10824:	mov	x29, sp
   10828:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1082c:	mov	w0, #0xffffffff            	// #-1
   10830:	ldp	x29, x30, [sp], #16
   10834:	ret
   10838:	stp	x29, x30, [sp, #-32]!
   1083c:	mov	x29, sp
   10840:	stp	x19, x20, [sp, #16]
   10844:	mov	x19, x0
   10848:	mov	x20, x1
   1084c:	bl	10798 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
   10850:	ldr	x2, [x19, #88]
   10854:	cbz	x2, 10864 <gelf_update_verdaux@@ELFUTILS_1.0+0x154>
   10858:	ldp	x19, x20, [sp, #16]
   1085c:	ldp	x29, x30, [sp], #32
   10860:	ret
   10864:	ldr	w2, [x19, #32]
   10868:	ldr	x1, [x19, #72]
   1086c:	cmp	w2, #0x1
   10870:	b.eq	108c0 <gelf_update_verdaux@@ELFUTILS_1.0+0x1b0>  // b.none
   10874:	ldr	x4, [x1, #32]
   10878:	cbz	x4, 108d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x1c8>
   1087c:	ldr	x1, [x19, #48]
   10880:	cmp	x1, x4
   10884:	b.ls	108c8 <gelf_update_verdaux@@ELFUTILS_1.0+0x1b8>  // b.plast
   10888:	cmp	w2, #0x1
   1088c:	mov	x5, #0x38                  	// #56
   10890:	ldr	x3, [x20]
   10894:	mov	x2, #0x20                  	// #32
   10898:	csel	x2, x2, x5, eq  // eq = none
   1089c:	umulh	x5, x3, x2
   108a0:	cbnz	x5, 108c8 <gelf_update_verdaux@@ELFUTILS_1.0+0x1b8>
   108a4:	mul	x3, x3, x2
   108a8:	sub	x1, x1, x4
   108ac:	cmp	x1, x3
   108b0:	b.cs	10858 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>  // b.hs, b.nlast
   108b4:	udiv	x1, x1, x2
   108b8:	str	x1, [x20]
   108bc:	b	10858 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>
   108c0:	ldr	w4, [x1, #28]
   108c4:	b	10878 <gelf_update_verdaux@@ELFUTILS_1.0+0x168>
   108c8:	mov	w0, #0x21                  	// #33
   108cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   108d0:	mov	w0, #0xffffffff            	// #-1
   108d4:	b	10858 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>
   108d8:	str	xzr, [x20]
   108dc:	b	10858 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>

00000000000108e0 <elf_getphdrnum@@ELFUTILS_1.6>:
   108e0:	cbz	x0, 10910 <elf_getphdrnum@@ELFUTILS_1.6+0x30>
   108e4:	ldr	w2, [x0, #24]
   108e8:	cmp	w2, #0x3
   108ec:	b.ne	108f4 <elf_getphdrnum@@ELFUTILS_1.6+0x14>  // b.any
   108f0:	b	10838 <gelf_update_verdaux@@ELFUTILS_1.0+0x128>
   108f4:	stp	x29, x30, [sp, #-16]!
   108f8:	mov	w0, #0x4                   	// #4
   108fc:	mov	x29, sp
   10900:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10904:	mov	w0, #0xffffffff            	// #-1
   10908:	ldp	x29, x30, [sp], #16
   1090c:	ret
   10910:	mov	w0, #0xffffffff            	// #-1
   10914:	ret
   10918:	cbz	x0, 10990 <elf_getphdrnum@@ELFUTILS_1.6+0xb0>
   1091c:	mov	x2, x0
   10920:	ldr	w0, [x0, #24]
   10924:	cmp	w0, #0x3
   10928:	b.ne	10974 <elf_getphdrnum@@ELFUTILS_1.6+0x94>  // b.any
   1092c:	ldr	x3, [x2, #96]
   10930:	ldr	w0, [x3]
   10934:	cbz	w0, 10960 <elf_getphdrnum@@ELFUTILS_1.6+0x80>
   10938:	sub	w2, w0, #0x1
   1093c:	mov	w0, #0x0                   	// #0
   10940:	sxtw	x4, w2
   10944:	add	x2, x4, w2, sxtw #1
   10948:	add	x2, x4, x2, lsl #2
   1094c:	add	x2, x3, x2, lsl #4
   10950:	ldr	x2, [x2, #144]
   10954:	add	x2, x2, #0x1
   10958:	str	x2, [x1]
   1095c:	ret
   10960:	add	x2, x2, #0xc8
   10964:	cmp	x3, x2
   10968:	b.ne	10938 <elf_getphdrnum@@ELFUTILS_1.6+0x58>  // b.any
   1096c:	str	xzr, [x1]
   10970:	ret
   10974:	stp	x29, x30, [sp, #-16]!
   10978:	mov	w0, #0x4                   	// #4
   1097c:	mov	x29, sp
   10980:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10984:	mov	w0, #0xffffffff            	// #-1
   10988:	ldp	x29, x30, [sp], #16
   1098c:	ret
   10990:	mov	w0, #0xffffffff            	// #-1
   10994:	ret

0000000000010998 <elf_getshdrnum@@ELFUTILS_1.5>:
   10998:	cbz	x0, 109a0 <elf_getshdrnum@@ELFUTILS_1.5+0x8>
   1099c:	b	10918 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
   109a0:	mov	w0, #0xffffffff            	// #-1
   109a4:	ret

00000000000109a8 <elf_getshdrstrndx@@ELFUTILS_1.5>:
   109a8:	cbz	x0, 10c54 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2ac>
   109ac:	stp	x29, x30, [sp, #-144]!
   109b0:	mov	x29, sp
   109b4:	stp	x19, x20, [sp, #16]
   109b8:	mov	x19, x0
   109bc:	ldr	w0, [x0, #24]
   109c0:	cmp	w0, #0x3
   109c4:	b.ne	10a48 <elf_getshdrstrndx@@ELFUTILS_1.5+0xa0>  // b.any
   109c8:	ldr	x2, [x19, #72]
   109cc:	cbz	x2, 10a58 <elf_getshdrstrndx@@ELFUTILS_1.5+0xb0>
   109d0:	ldr	w0, [x19, #32]
   109d4:	mov	x20, x1
   109d8:	cmp	w0, #0x1
   109dc:	b.eq	10a08 <elf_getshdrstrndx@@ELFUTILS_1.5+0x60>  // b.none
   109e0:	ldrh	w0, [x2, #62]
   109e4:	mov	w1, #0xffff                	// #65535
   109e8:	cmp	w0, w1
   109ec:	b.eq	10a30 <elf_getshdrstrndx@@ELFUTILS_1.5+0x88>  // b.none
   109f0:	mov	w2, w0
   109f4:	mov	w0, #0x0                   	// #0
   109f8:	str	x2, [x20]
   109fc:	ldp	x19, x20, [sp, #16]
   10a00:	ldp	x29, x30, [sp], #144
   10a04:	ret
   10a08:	ldrh	w0, [x2, #50]
   10a0c:	mov	w1, #0xffff                	// #65535
   10a10:	cmp	w0, w1
   10a14:	b.ne	109f0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>  // b.any
   10a18:	ldr	w0, [x19, #200]
   10a1c:	cbz	w0, 10a6c <elf_getshdrstrndx@@ELFUTILS_1.5+0xc4>
   10a20:	ldr	x0, [x19, #360]
   10a24:	cbz	x0, 10b30 <elf_getshdrstrndx@@ELFUTILS_1.5+0x188>
   10a28:	ldr	w0, [x0, #24]
   10a2c:	b	109f0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   10a30:	ldr	w0, [x19, #200]
   10a34:	cbz	w0, 10a6c <elf_getshdrstrndx@@ELFUTILS_1.5+0xc4>
   10a38:	ldr	x0, [x19, #360]
   10a3c:	cbz	x0, 10a7c <elf_getshdrstrndx@@ELFUTILS_1.5+0xd4>
   10a40:	ldr	w0, [x0, #40]
   10a44:	b	109f0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   10a48:	mov	w0, #0x4                   	// #4
   10a4c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10a50:	mov	w0, #0xffffffff            	// #-1
   10a54:	b	109fc <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   10a58:	mov	w0, #0x1a                  	// #26
   10a5c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10a60:	mov	w0, #0xffffffff            	// #-1
   10a64:	b	109fc <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   10a68:	ldp	x25, x26, [sp, #64]
   10a6c:	mov	w0, #0x20                  	// #32
   10a70:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10a74:	mov	w0, #0xffffffff            	// #-1
   10a78:	b	109fc <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   10a7c:	ldr	x0, [x19]
   10a80:	stp	x25, x26, [sp, #64]
   10a84:	ldr	x25, [x2, #40]
   10a88:	cbz	x0, 10a98 <elf_getshdrstrndx@@ELFUTILS_1.5+0xf0>
   10a8c:	ldrb	w1, [x2, #5]
   10a90:	cmp	w1, #0x1
   10a94:	b.eq	10c10 <elf_getshdrstrndx@@ELFUTILS_1.5+0x268>  // b.none
   10a98:	ldr	w26, [x19, #36]
   10a9c:	stp	x21, x22, [sp, #32]
   10aa0:	mov	x22, x25
   10aa4:	mov	x21, #0x0                   	// #0
   10aa8:	stp	x23, x24, [sp, #48]
   10aac:	add	x23, sp, #0x50
   10ab0:	mov	x24, #0x40                  	// #64
   10ab4:	mov	x3, x22
   10ab8:	sub	x2, x24, x21
   10abc:	add	x1, x23, x21
   10ac0:	mov	w0, w26
   10ac4:	bl	3250 <pread@plt>
   10ac8:	cmn	x0, #0x1
   10acc:	b.eq	10b04 <elf_getshdrstrndx@@ELFUTILS_1.5+0x15c>  // b.none
   10ad0:	add	x21, x21, x0
   10ad4:	cmp	x0, #0x0
   10ad8:	b.le	10c00 <elf_getshdrstrndx@@ELFUTILS_1.5+0x258>
   10adc:	cmp	x21, #0x3f
   10ae0:	b.gt	10bd0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x228>
   10ae4:	add	x22, x25, x21
   10ae8:	sub	x2, x24, x21
   10aec:	mov	x3, x22
   10af0:	add	x1, x23, x21
   10af4:	mov	w0, w26
   10af8:	bl	3250 <pread@plt>
   10afc:	cmn	x0, #0x1
   10b00:	b.ne	10ad0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x128>  // b.any
   10b04:	bl	3340 <__errno_location@plt>
   10b08:	ldr	w0, [x0]
   10b0c:	cmp	w0, #0x4
   10b10:	b.eq	10ab4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x10c>  // b.none
   10b14:	mov	w0, #0x9                   	// #9
   10b18:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10b1c:	mov	w0, #0xffffffff            	// #-1
   10b20:	ldp	x21, x22, [sp, #32]
   10b24:	ldp	x23, x24, [sp, #48]
   10b28:	ldp	x25, x26, [sp, #64]
   10b2c:	b	109fc <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   10b30:	ldr	x0, [x19]
   10b34:	stp	x23, x24, [sp, #48]
   10b38:	ldr	w24, [x2, #32]
   10b3c:	cbz	x0, 10c8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x2e4>
   10b40:	ldrb	w1, [x2, #5]
   10b44:	mov	w24, w24
   10b48:	cmp	w1, #0x1
   10b4c:	b.eq	10c5c <elf_getshdrstrndx@@ELFUTILS_1.5+0x2b4>  // b.none
   10b50:	stp	x21, x22, [sp, #32]
   10b54:	stp	x25, x26, [sp, #64]
   10b58:	ldr	w26, [x19, #36]
   10b5c:	mov	x22, x24
   10b60:	add	x23, sp, #0x50
   10b64:	mov	x21, #0x0                   	// #0
   10b68:	mov	x25, #0x28                  	// #40
   10b6c:	mov	x3, x22
   10b70:	sub	x2, x25, x21
   10b74:	add	x1, x23, x21
   10b78:	mov	w0, w26
   10b7c:	bl	3250 <pread@plt>
   10b80:	cmn	x0, #0x1
   10b84:	b.eq	10bbc <elf_getshdrstrndx@@ELFUTILS_1.5+0x214>  // b.none
   10b88:	add	x21, x21, x0
   10b8c:	cmp	x0, #0x0
   10b90:	b.le	10c00 <elf_getshdrstrndx@@ELFUTILS_1.5+0x258>
   10b94:	cmp	x21, #0x27
   10b98:	b.gt	10c40 <elf_getshdrstrndx@@ELFUTILS_1.5+0x298>
   10b9c:	add	x22, x24, x21
   10ba0:	sub	x2, x25, x21
   10ba4:	mov	x3, x22
   10ba8:	add	x1, x23, x21
   10bac:	mov	w0, w26
   10bb0:	bl	3250 <pread@plt>
   10bb4:	cmn	x0, #0x1
   10bb8:	b.ne	10b88 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1e0>  // b.any
   10bbc:	bl	3340 <__errno_location@plt>
   10bc0:	ldr	w0, [x0]
   10bc4:	cmp	w0, #0x4
   10bc8:	b.ne	10b14 <elf_getshdrstrndx@@ELFUTILS_1.5+0x16c>  // b.any
   10bcc:	b	10b6c <elf_getshdrstrndx@@ELFUTILS_1.5+0x1c4>
   10bd0:	cmp	x21, #0x40
   10bd4:	b.ne	10c04 <elf_getshdrstrndx@@ELFUTILS_1.5+0x25c>  // b.any
   10bd8:	ldr	w0, [sp, #120]
   10bdc:	ldr	x1, [x19, #72]
   10be0:	ldrb	w2, [x1, #5]
   10be4:	rev	w1, w0
   10be8:	ldp	x21, x22, [sp, #32]
   10bec:	cmp	w2, #0x1
   10bf0:	csel	w0, w1, w0, ne  // ne = any
   10bf4:	ldp	x23, x24, [sp, #48]
   10bf8:	ldp	x25, x26, [sp, #64]
   10bfc:	b	109f0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   10c00:	b.ne	10b14 <elf_getshdrstrndx@@ELFUTILS_1.5+0x16c>  // b.any
   10c04:	mov	w0, #0xa                   	// #10
   10c08:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10c0c:	b	10b1c <elf_getshdrstrndx@@ELFUTILS_1.5+0x174>
   10c10:	ldr	x1, [x19, #40]
   10c14:	add	x1, x25, x1
   10c18:	add	x0, x0, x1
   10c1c:	tst	x0, #0x7
   10c20:	b.ne	10a98 <elf_getshdrstrndx@@ELFUTILS_1.5+0xf0>  // b.any
   10c24:	ldr	x1, [x19, #48]
   10c28:	sub	x25, x1, x25
   10c2c:	cmp	x25, #0x3f
   10c30:	b.ls	10a68 <elf_getshdrstrndx@@ELFUTILS_1.5+0xc0>  // b.plast
   10c34:	ldr	w0, [x0, #40]
   10c38:	ldp	x25, x26, [sp, #64]
   10c3c:	b	109f0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   10c40:	cmp	x21, #0x28
   10c44:	b.ne	10c04 <elf_getshdrstrndx@@ELFUTILS_1.5+0x25c>  // b.any
   10c48:	ldr	w0, [sp, #104]
   10c4c:	ldr	x1, [x19, #72]
   10c50:	b	10be0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x238>
   10c54:	mov	w0, #0xffffffff            	// #-1
   10c58:	ret
   10c5c:	ldr	x1, [x19, #40]
   10c60:	add	x1, x24, x1
   10c64:	add	x0, x0, x1
   10c68:	tst	x0, #0x3
   10c6c:	b.ne	10b50 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1a8>  // b.any
   10c70:	ldr	x1, [x19, #48]
   10c74:	sub	x24, x1, x24
   10c78:	cmp	x24, #0x27
   10c7c:	b.ls	10c9c <elf_getshdrstrndx@@ELFUTILS_1.5+0x2f4>  // b.plast
   10c80:	ldr	w0, [x0, #24]
   10c84:	ldp	x23, x24, [sp, #48]
   10c88:	b	109f0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   10c8c:	mov	w24, w24
   10c90:	stp	x21, x22, [sp, #32]
   10c94:	stp	x25, x26, [sp, #64]
   10c98:	b	10b58 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1b0>
   10c9c:	ldp	x23, x24, [sp, #48]
   10ca0:	b	10a6c <elf_getshdrstrndx@@ELFUTILS_1.5+0xc4>
   10ca4:	nop

0000000000010ca8 <gelf_checksum@@ELFUTILS_1.0>:
   10ca8:	cbz	x0, 10cc0 <gelf_checksum@@ELFUTILS_1.0+0x18>
   10cac:	ldr	w1, [x0, #32]
   10cb0:	cmp	w1, #0x1
   10cb4:	b.eq	10cbc <gelf_checksum@@ELFUTILS_1.0+0x14>  // b.none
   10cb8:	b	10e98 <elf64_checksum@@ELFUTILS_1.0>
   10cbc:	b	10cc8 <elf32_checksum@@ELFUTILS_1.0>
   10cc0:	mov	x0, #0xffffffffffffffff    	// #-1
   10cc4:	ret

0000000000010cc8 <elf32_checksum@@ELFUTILS_1.0>:
   10cc8:	stp	x29, x30, [sp, #-160]!
   10ccc:	mov	x29, sp
   10cd0:	stp	x19, x20, [sp, #16]
   10cd4:	cbz	x0, 10e78 <elf32_checksum@@ELFUTILS_1.0+0x1b0>
   10cd8:	add	x1, sp, #0x58
   10cdc:	stp	x23, x24, [sp, #48]
   10ce0:	mov	x23, x0
   10ce4:	bl	109a8 <elf_getshdrstrndx@@ELFUTILS_1.5>
   10ce8:	tbnz	w0, #31, 10e80 <elf32_checksum@@ELFUTILS_1.0+0x1b8>
   10cec:	stp	x25, x26, [sp, #64]
   10cf0:	add	x24, sp, #0x60
   10cf4:	adrp	x26, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   10cf8:	ldr	x25, [x23, #72]
   10cfc:	stp	x21, x22, [sp, #32]
   10d00:	add	x26, x26, #0x688
   10d04:	mov	x20, #0x0                   	// #0
   10d08:	mov	x21, #0x0                   	// #0
   10d0c:	ldrb	w22, [x25, #5]
   10d10:	mov	x1, x21
   10d14:	mov	x0, x23
   10d18:	bl	8e30 <elf_nextscn@@ELFUTILS_1.0>
   10d1c:	mov	x21, x0
   10d20:	cbz	x0, 10e50 <elf32_checksum@@ELFUTILS_1.0+0x188>
   10d24:	mov	x1, x24
   10d28:	bl	9c58 <gelf_getshdr@@ELFUTILS_1.0>
   10d2c:	mov	x19, x0
   10d30:	cbz	x0, 10e6c <elf32_checksum@@ELFUTILS_1.0+0x1a4>
   10d34:	ldr	x1, [x19, #8]
   10d38:	ldr	w0, [x0, #4]
   10d3c:	tbnz	w1, #1, 10d88 <elf32_checksum@@ELFUTILS_1.0+0xc0>
   10d40:	cmp	w0, #0x7
   10d44:	b.eq	10d90 <elf32_checksum@@ELFUTILS_1.0+0xc8>  // b.none
   10d48:	cmp	w0, #0x1
   10d4c:	b.ne	10d10 <elf32_checksum@@ELFUTILS_1.0+0x48>  // b.any
   10d50:	ldr	w2, [x19]
   10d54:	mov	x0, x23
   10d58:	ldr	x1, [sp, #88]
   10d5c:	bl	9e98 <elf_strptr@@ELFUTILS_1.0>
   10d60:	cbz	x0, 10d84 <elf32_checksum@@ELFUTILS_1.0+0xbc>
   10d64:	ldr	w2, [x19]
   10d68:	mov	x0, x23
   10d6c:	ldr	x1, [sp, #88]
   10d70:	bl	9e98 <elf_strptr@@ELFUTILS_1.0>
   10d74:	mov	x1, x26
   10d78:	mov	x2, #0xd                   	// #13
   10d7c:	bl	30f0 <strncmp@plt>
   10d80:	cbnz	w0, 10d10 <elf32_checksum@@ELFUTILS_1.0+0x48>
   10d84:	ldr	w0, [x19, #4]
   10d88:	cmp	w0, #0x8
   10d8c:	b.eq	10d10 <elf32_checksum@@ELFUTILS_1.0+0x48>  // b.none
   10d90:	mov	x0, x21
   10d94:	mov	x1, #0x0                   	// #0
   10d98:	bl	a120 <elf_rawdata@@ELFUTILS_1.0>
   10d9c:	mov	x19, x0
   10da0:	cbz	x0, 10dd0 <elf32_checksum@@ELFUTILS_1.0+0x108>
   10da4:	ldr	x1, [x19]
   10da8:	mov	w0, w20
   10dac:	ldr	x2, [x19, #16]
   10db0:	bl	11068 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   10db4:	mov	w20, w0
   10db8:	b	10dd0 <elf32_checksum@@ELFUTILS_1.0+0x108>
   10dbc:	ldr	x1, [x19]
   10dc0:	mov	w0, w20
   10dc4:	ldr	x2, [x19, #16]
   10dc8:	bl	11068 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   10dcc:	mov	w20, w0
   10dd0:	mov	x1, x19
   10dd4:	mov	x0, x21
   10dd8:	bl	a938 <elf_getdata@@ELFUTILS_1.0>
   10ddc:	mov	x19, x0
   10de0:	cbz	x0, 10d10 <elf32_checksum@@ELFUTILS_1.0+0x48>
   10de4:	cmp	w22, #0x1
   10de8:	b.eq	10dbc <elf32_checksum@@ELFUTILS_1.0+0xf4>  // b.none
   10dec:	ldr	w1, [x19, #8]
   10df0:	cbz	w1, 10dbc <elf32_checksum@@ELFUTILS_1.0+0xf4>
   10df4:	ldrb	w2, [x25, #5]
   10df8:	mov	x1, x19
   10dfc:	bl	5488 <elf32_xlatetof@@ELFUTILS_1.0>
   10e00:	mov	x1, x0
   10e04:	mov	w0, w20
   10e08:	cbz	x1, 10e30 <elf32_checksum@@ELFUTILS_1.0+0x168>
   10e0c:	ldr	x1, [x19]
   10e10:	ldr	x2, [x19, #16]
   10e14:	bl	11068 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   10e18:	mov	w20, w0
   10e1c:	ldrb	w2, [x25, #5]
   10e20:	mov	x1, x19
   10e24:	mov	x0, x19
   10e28:	bl	5570 <elf32_xlatetom@@ELFUTILS_1.0>
   10e2c:	cbnz	x0, 10dd0 <elf32_checksum@@ELFUTILS_1.0+0x108>
   10e30:	ldp	x21, x22, [sp, #32]
   10e34:	mov	x20, #0xffffffffffffffff    	// #-1
   10e38:	ldp	x23, x24, [sp, #48]
   10e3c:	ldp	x25, x26, [sp, #64]
   10e40:	mov	x0, x20
   10e44:	ldp	x19, x20, [sp, #16]
   10e48:	ldp	x29, x30, [sp], #160
   10e4c:	ret
   10e50:	mov	x0, x20
   10e54:	ldp	x19, x20, [sp, #16]
   10e58:	ldp	x21, x22, [sp, #32]
   10e5c:	ldp	x23, x24, [sp, #48]
   10e60:	ldp	x25, x26, [sp, #64]
   10e64:	ldp	x29, x30, [sp], #160
   10e68:	ret
   10e6c:	mov	w0, #0x20                  	// #32
   10e70:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10e74:	b	10e30 <elf32_checksum@@ELFUTILS_1.0+0x168>
   10e78:	mov	x20, #0xffffffffffffffff    	// #-1
   10e7c:	b	10e40 <elf32_checksum@@ELFUTILS_1.0+0x178>
   10e80:	mov	w0, #0x4                   	// #4
   10e84:	mov	x20, #0xffffffffffffffff    	// #-1
   10e88:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10e8c:	ldp	x23, x24, [sp, #48]
   10e90:	b	10e40 <elf32_checksum@@ELFUTILS_1.0+0x178>
   10e94:	nop

0000000000010e98 <elf64_checksum@@ELFUTILS_1.0>:
   10e98:	stp	x29, x30, [sp, #-160]!
   10e9c:	mov	x29, sp
   10ea0:	stp	x19, x20, [sp, #16]
   10ea4:	cbz	x0, 11048 <elf64_checksum@@ELFUTILS_1.0+0x1b0>
   10ea8:	add	x1, sp, #0x58
   10eac:	stp	x23, x24, [sp, #48]
   10eb0:	mov	x23, x0
   10eb4:	bl	109a8 <elf_getshdrstrndx@@ELFUTILS_1.5>
   10eb8:	tbnz	w0, #31, 11050 <elf64_checksum@@ELFUTILS_1.0+0x1b8>
   10ebc:	stp	x25, x26, [sp, #64]
   10ec0:	add	x24, sp, #0x60
   10ec4:	adrp	x26, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   10ec8:	ldr	x25, [x23, #72]
   10ecc:	stp	x21, x22, [sp, #32]
   10ed0:	add	x26, x26, #0x688
   10ed4:	mov	x20, #0x0                   	// #0
   10ed8:	mov	x21, #0x0                   	// #0
   10edc:	ldrb	w22, [x25, #5]
   10ee0:	mov	x1, x21
   10ee4:	mov	x0, x23
   10ee8:	bl	8e30 <elf_nextscn@@ELFUTILS_1.0>
   10eec:	mov	x21, x0
   10ef0:	cbz	x0, 11020 <elf64_checksum@@ELFUTILS_1.0+0x188>
   10ef4:	mov	x1, x24
   10ef8:	bl	9c58 <gelf_getshdr@@ELFUTILS_1.0>
   10efc:	mov	x19, x0
   10f00:	cbz	x0, 1103c <elf64_checksum@@ELFUTILS_1.0+0x1a4>
   10f04:	ldr	x1, [x19, #8]
   10f08:	ldr	w0, [x0, #4]
   10f0c:	tbnz	w1, #1, 10f58 <elf64_checksum@@ELFUTILS_1.0+0xc0>
   10f10:	cmp	w0, #0x7
   10f14:	b.eq	10f60 <elf64_checksum@@ELFUTILS_1.0+0xc8>  // b.none
   10f18:	cmp	w0, #0x1
   10f1c:	b.ne	10ee0 <elf64_checksum@@ELFUTILS_1.0+0x48>  // b.any
   10f20:	ldr	w2, [x19]
   10f24:	mov	x0, x23
   10f28:	ldr	x1, [sp, #88]
   10f2c:	bl	9e98 <elf_strptr@@ELFUTILS_1.0>
   10f30:	cbz	x0, 10f54 <elf64_checksum@@ELFUTILS_1.0+0xbc>
   10f34:	ldr	w2, [x19]
   10f38:	mov	x0, x23
   10f3c:	ldr	x1, [sp, #88]
   10f40:	bl	9e98 <elf_strptr@@ELFUTILS_1.0>
   10f44:	mov	x1, x26
   10f48:	mov	x2, #0xd                   	// #13
   10f4c:	bl	30f0 <strncmp@plt>
   10f50:	cbnz	w0, 10ee0 <elf64_checksum@@ELFUTILS_1.0+0x48>
   10f54:	ldr	w0, [x19, #4]
   10f58:	cmp	w0, #0x8
   10f5c:	b.eq	10ee0 <elf64_checksum@@ELFUTILS_1.0+0x48>  // b.none
   10f60:	mov	x0, x21
   10f64:	mov	x1, #0x0                   	// #0
   10f68:	bl	a120 <elf_rawdata@@ELFUTILS_1.0>
   10f6c:	mov	x19, x0
   10f70:	cbz	x0, 10fa0 <elf64_checksum@@ELFUTILS_1.0+0x108>
   10f74:	ldr	x1, [x19]
   10f78:	mov	w0, w20
   10f7c:	ldr	x2, [x19, #16]
   10f80:	bl	11068 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   10f84:	mov	w20, w0
   10f88:	b	10fa0 <elf64_checksum@@ELFUTILS_1.0+0x108>
   10f8c:	ldr	x1, [x19]
   10f90:	mov	w0, w20
   10f94:	ldr	x2, [x19, #16]
   10f98:	bl	11068 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   10f9c:	mov	w20, w0
   10fa0:	mov	x1, x19
   10fa4:	mov	x0, x21
   10fa8:	bl	a938 <elf_getdata@@ELFUTILS_1.0>
   10fac:	mov	x19, x0
   10fb0:	cbz	x0, 10ee0 <elf64_checksum@@ELFUTILS_1.0+0x48>
   10fb4:	cmp	w22, #0x1
   10fb8:	b.eq	10f8c <elf64_checksum@@ELFUTILS_1.0+0xf4>  // b.none
   10fbc:	ldr	w1, [x19, #8]
   10fc0:	cbz	w1, 10f8c <elf64_checksum@@ELFUTILS_1.0+0xf4>
   10fc4:	ldrb	w2, [x25, #5]
   10fc8:	mov	x1, x19
   10fcc:	bl	5660 <elf64_xlatetof@@ELFUTILS_1.0>
   10fd0:	mov	x1, x0
   10fd4:	mov	w0, w20
   10fd8:	cbz	x1, 11000 <elf64_checksum@@ELFUTILS_1.0+0x168>
   10fdc:	ldr	x1, [x19]
   10fe0:	ldr	x2, [x19, #16]
   10fe4:	bl	11068 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   10fe8:	mov	w20, w0
   10fec:	ldrb	w2, [x25, #5]
   10ff0:	mov	x1, x19
   10ff4:	mov	x0, x19
   10ff8:	bl	5750 <elf64_xlatetom@@ELFUTILS_1.0>
   10ffc:	cbnz	x0, 10fa0 <elf64_checksum@@ELFUTILS_1.0+0x108>
   11000:	ldp	x21, x22, [sp, #32]
   11004:	mov	x20, #0xffffffffffffffff    	// #-1
   11008:	ldp	x23, x24, [sp, #48]
   1100c:	ldp	x25, x26, [sp, #64]
   11010:	mov	x0, x20
   11014:	ldp	x19, x20, [sp, #16]
   11018:	ldp	x29, x30, [sp], #160
   1101c:	ret
   11020:	mov	x0, x20
   11024:	ldp	x19, x20, [sp, #16]
   11028:	ldp	x21, x22, [sp, #32]
   1102c:	ldp	x23, x24, [sp, #48]
   11030:	ldp	x25, x26, [sp, #64]
   11034:	ldp	x29, x30, [sp], #160
   11038:	ret
   1103c:	mov	w0, #0x20                  	// #32
   11040:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11044:	b	11000 <elf64_checksum@@ELFUTILS_1.0+0x168>
   11048:	mov	x20, #0xffffffffffffffff    	// #-1
   1104c:	b	11010 <elf64_checksum@@ELFUTILS_1.0+0x178>
   11050:	mov	w0, #0x4                   	// #4
   11054:	mov	x20, #0xffffffffffffffff    	// #-1
   11058:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1105c:	ldp	x23, x24, [sp, #48]
   11060:	b	11010 <elf64_checksum@@ELFUTILS_1.0+0x178>
   11064:	nop
   11068:	add	x2, x1, x2
   1106c:	mvn	w4, w0
   11070:	cmp	x1, x2
   11074:	b.cs	110a0 <elf64_checksum@@ELFUTILS_1.0+0x208>  // b.hs, b.nlast
   11078:	adrp	x5, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   1107c:	add	x5, x5, #0x698
   11080:	ldrb	w3, [x1], #1
   11084:	eor	w3, w3, w4
   11088:	cmp	x2, x1
   1108c:	and	x3, x3, #0xff
   11090:	ldr	w0, [x5, x3, lsl #2]
   11094:	eor	w4, w0, w4, lsr #8
   11098:	b.ne	11080 <elf64_checksum@@ELFUTILS_1.0+0x1e8>  // b.any
   1109c:	mvn	w0, w4
   110a0:	ret
   110a4:	nop
   110a8:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   110ac:	orr	x0, x0, #0x1
   110b0:	movk	x6, #0xaaab
   110b4:	nop
   110b8:	umulh	x2, x0, x6
   110bc:	cmp	x0, #0x9
   110c0:	and	x1, x2, #0xfffffffffffffffe
   110c4:	add	x2, x1, x2, lsr #1
   110c8:	sub	x2, x0, x2
   110cc:	b.ls	1110c <elf64_checksum@@ELFUTILS_1.0+0x274>  // b.plast
   110d0:	mov	x3, #0x19                  	// #25
   110d4:	mov	x4, #0x3                   	// #3
   110d8:	cbnz	x2, 110ec <elf64_checksum@@ELFUTILS_1.0+0x254>
   110dc:	b	11110 <elf64_checksum@@ELFUTILS_1.0+0x278>
   110e0:	adds	x3, x1, x3
   110e4:	cbz	x2, 11110 <elf64_checksum@@ELFUTILS_1.0+0x278>
   110e8:	b.cs	11118 <elf64_checksum@@ELFUTILS_1.0+0x280>  // b.hs, b.nlast
   110ec:	mov	x2, x4
   110f0:	add	x4, x4, #0x2
   110f4:	add	x2, x2, #0x3
   110f8:	cmp	x0, x3
   110fc:	udiv	x5, x0, x4
   11100:	lsl	x1, x2, #2
   11104:	msub	x2, x5, x4, x0
   11108:	b.hi	110e0 <elf64_checksum@@ELFUTILS_1.0+0x248>  // b.pmore
   1110c:	cbnz	x2, 11118 <elf64_checksum@@ELFUTILS_1.0+0x280>
   11110:	add	x0, x0, #0x2
   11114:	b	110b8 <elf64_checksum@@ELFUTILS_1.0+0x220>
   11118:	ret
   1111c:	nop

0000000000011120 <elf_clone@@ELFUTILS_1.0>:
   11120:	stp	x29, x30, [sp, #-96]!
   11124:	cmp	x0, #0x0
   11128:	ccmp	w1, #0xc, #0x0, ne  // ne = any
   1112c:	mov	x29, sp
   11130:	stp	x19, x20, [sp, #16]
   11134:	mov	x19, #0x0                   	// #0
   11138:	b.ne	111c4 <elf_clone@@ELFUTILS_1.0+0xa4>  // b.any
   1113c:	mov	x20, x0
   11140:	stp	x21, x22, [sp, #32]
   11144:	mov	w2, #0xd0                  	// #208
   11148:	mov	x1, #0x108                 	// #264
   1114c:	stp	x23, x24, [sp, #48]
   11150:	ldr	w21, [x20, #204]
   11154:	ldr	w24, [x20, #36]
   11158:	mov	x0, #0x1                   	// #1
   1115c:	stp	x25, x26, [sp, #64]
   11160:	umaddl	x1, w21, w2, x1
   11164:	ldr	x26, [x20, #8]
   11168:	ldp	x23, x22, [x20, #40]
   1116c:	str	x27, [sp, #80]
   11170:	ldr	x27, [x20]
   11174:	ldr	x25, [x20, #24]
   11178:	bl	3140 <calloc@plt>
   1117c:	mov	x19, x0
   11180:	cbz	x0, 111d4 <elf_clone@@ELFUTILS_1.0+0xb4>
   11184:	str	x25, [x19, #24]
   11188:	add	x1, x19, #0xc8
   1118c:	ldr	w3, [x20, #32]
   11190:	mov	x2, #0x100000001           	// #4294967297
   11194:	stp	x27, x26, [x19]
   11198:	mov	w0, #0xa                   	// #10
   1119c:	stp	w3, w24, [x19, #32]
   111a0:	stp	x23, x22, [x19, #40]
   111a4:	str	w21, [x19, #204]
   111a8:	ldp	x21, x22, [sp, #32]
   111ac:	str	x2, [x19, #56]
   111b0:	ldp	x23, x24, [sp, #48]
   111b4:	str	x1, [x19, #96]
   111b8:	ldp	x25, x26, [sp, #64]
   111bc:	str	w0, [x19, #112]
   111c0:	ldr	x27, [sp, #80]
   111c4:	mov	x0, x19
   111c8:	ldp	x19, x20, [sp, #16]
   111cc:	ldp	x29, x30, [sp], #96
   111d0:	ret
   111d4:	mov	w0, #0x8                   	// #8
   111d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   111dc:	ldp	x21, x22, [sp, #32]
   111e0:	ldp	x23, x24, [sp, #48]
   111e4:	ldp	x25, x26, [sp, #64]
   111e8:	ldr	x27, [sp, #80]
   111ec:	b	111c4 <elf_clone@@ELFUTILS_1.0+0xa4>

00000000000111f0 <gelf_getlib@@ELFUTILS_1.1>:
   111f0:	cbz	x0, 1125c <gelf_getlib@@ELFUTILS_1.1+0x6c>
   111f4:	stp	x29, x30, [sp, #-16]!
   111f8:	mov	x29, sp
   111fc:	ldr	w5, [x0, #8]
   11200:	cmp	w5, #0x16
   11204:	b.ne	1124c <gelf_getlib@@ELFUTILS_1.1+0x5c>  // b.any
   11208:	ldr	x4, [x0, #16]
   1120c:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   11210:	movk	x6, #0xcccd
   11214:	mov	w3, w1
   11218:	umulh	x4, x4, x6
   1121c:	cmp	x3, x4, lsr #4
   11220:	b.cs	11264 <gelf_getlib@@ELFUTILS_1.1+0x74>  // b.hs, b.nlast
   11224:	ldr	x3, [x0]
   11228:	mov	w4, #0x14                  	// #20
   1122c:	mov	x0, x2
   11230:	smaddl	x1, w1, w4, x3
   11234:	ldp	x4, x5, [x1]
   11238:	stp	x4, x5, [x2]
   1123c:	ldr	w1, [x1, #16]
   11240:	str	w1, [x2, #16]
   11244:	ldp	x29, x30, [sp], #16
   11248:	ret
   1124c:	mov	w0, #0x4                   	// #4
   11250:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11254:	mov	x0, #0x0                   	// #0
   11258:	b	11244 <gelf_getlib@@ELFUTILS_1.1+0x54>
   1125c:	mov	x0, #0x0                   	// #0
   11260:	ret
   11264:	mov	w0, w5
   11268:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1126c:	mov	x0, #0x0                   	// #0
   11270:	b	11244 <gelf_getlib@@ELFUTILS_1.1+0x54>
   11274:	nop

0000000000011278 <gelf_update_lib@@ELFUTILS_1.1>:
   11278:	cbz	x0, 112e4 <gelf_update_lib@@ELFUTILS_1.1+0x6c>
   1127c:	stp	x29, x30, [sp, #-16]!
   11280:	mov	x29, sp
   11284:	ldr	w6, [x0, #8]
   11288:	cmp	w6, #0x16
   1128c:	b.ne	112ec <gelf_update_lib@@ELFUTILS_1.1+0x74>  // b.any
   11290:	ldr	x4, [x0, #16]
   11294:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   11298:	movk	x7, #0xcccd
   1129c:	mov	w3, w1
   112a0:	ldr	x5, [x0, #40]
   112a4:	umulh	x4, x4, x7
   112a8:	cmp	x3, x4, lsr #4
   112ac:	b.cs	112fc <gelf_update_lib@@ELFUTILS_1.1+0x84>  // b.hs, b.nlast
   112b0:	ldr	x3, [x0]
   112b4:	mov	w4, #0x14                  	// #20
   112b8:	ldp	x6, x7, [x2]
   112bc:	mov	w0, #0x1                   	// #1
   112c0:	smaddl	x1, w1, w4, x3
   112c4:	ldr	w3, [x5, #156]
   112c8:	orr	w3, w3, w0
   112cc:	stp	x6, x7, [x1]
   112d0:	ldr	w2, [x2, #16]
   112d4:	str	w2, [x1, #16]
   112d8:	str	w3, [x5, #156]
   112dc:	ldp	x29, x30, [sp], #16
   112e0:	ret
   112e4:	mov	w0, #0x0                   	// #0
   112e8:	ret
   112ec:	mov	w0, #0x1f                  	// #31
   112f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   112f4:	mov	w0, #0x0                   	// #0
   112f8:	b	112dc <gelf_update_lib@@ELFUTILS_1.1+0x64>
   112fc:	mov	w0, w6
   11300:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11304:	mov	w0, #0x0                   	// #0
   11308:	b	112dc <gelf_update_lib@@ELFUTILS_1.1+0x64>
   1130c:	nop

0000000000011310 <elf32_offscn@@ELFUTILS_1.1.1>:
   11310:	cbz	x0, 113f8 <elf32_offscn@@ELFUTILS_1.1.1+0xe8>
   11314:	stp	x29, x30, [sp, #-48]!
   11318:	mov	x29, sp
   1131c:	ldr	w2, [x0, #24]
   11320:	cmp	w2, #0x3
   11324:	b.ne	113e8 <elf32_offscn@@ELFUTILS_1.1.1+0xd8>  // b.any
   11328:	ldr	w2, [x0, #200]
   1132c:	stp	x19, x20, [sp, #16]
   11330:	add	x20, x0, #0xc8
   11334:	cbnz	w2, 113c0 <elf32_offscn@@ELFUTILS_1.1.1+0xb0>
   11338:	mov	x19, #0x0                   	// #0
   1133c:	mov	w6, #0xd0                  	// #208
   11340:	ldr	w5, [x20]
   11344:	cbz	w5, 113a0 <elf32_offscn@@ELFUTILS_1.1.1+0x90>
   11348:	sub	w5, w5, #0x1
   1134c:	add	x0, x20, #0xe0
   11350:	add	x2, x20, #0x10
   11354:	umaddl	x5, w5, w6, x0
   11358:	b	11368 <elf32_offscn@@ELFUTILS_1.1.1+0x58>
   1135c:	add	x2, x2, #0xd0
   11360:	cmp	x2, x5
   11364:	b.eq	113a0 <elf32_offscn@@ELFUTILS_1.1.1+0x90>  // b.none
   11368:	ldr	x3, [x2, #144]
   1136c:	mov	x0, x2
   11370:	ldr	w4, [x3, #16]
   11374:	cmp	w4, w1
   11378:	b.ne	1135c <elf32_offscn@@ELFUTILS_1.1.1+0x4c>  // b.any
   1137c:	ldr	w4, [x3, #20]
   11380:	mov	x19, x2
   11384:	cbz	w4, 1135c <elf32_offscn@@ELFUTILS_1.1.1+0x4c>
   11388:	ldr	w3, [x3, #4]
   1138c:	cmp	w3, #0x8
   11390:	b.eq	1135c <elf32_offscn@@ELFUTILS_1.1.1+0x4c>  // b.none
   11394:	ldp	x19, x20, [sp, #16]
   11398:	ldp	x29, x30, [sp], #48
   1139c:	ret
   113a0:	ldr	x20, [x20, #8]
   113a4:	cbnz	x20, 11340 <elf32_offscn@@ELFUTILS_1.1.1+0x30>
   113a8:	mov	w0, #0x2b                  	// #43
   113ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   113b0:	mov	x0, x19
   113b4:	ldp	x19, x20, [sp, #16]
   113b8:	ldp	x29, x30, [sp], #48
   113bc:	ret
   113c0:	ldr	x2, [x0, #360]
   113c4:	cbnz	x2, 11338 <elf32_offscn@@ELFUTILS_1.1.1+0x28>
   113c8:	add	x0, x0, #0xd8
   113cc:	str	w1, [sp, #44]
   113d0:	bl	3290 <elf32_getshdr@plt>
   113d4:	ldr	w1, [sp, #44]
   113d8:	cbnz	x0, 11338 <elf32_offscn@@ELFUTILS_1.1.1+0x28>
   113dc:	mov	x0, #0x0                   	// #0
   113e0:	ldp	x19, x20, [sp, #16]
   113e4:	b	11398 <elf32_offscn@@ELFUTILS_1.1.1+0x88>
   113e8:	mov	w0, #0x4                   	// #4
   113ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   113f0:	mov	x0, #0x0                   	// #0
   113f4:	b	11398 <elf32_offscn@@ELFUTILS_1.1.1+0x88>
   113f8:	mov	x0, #0x0                   	// #0
   113fc:	ret

0000000000011400 <elf64_offscn@@ELFUTILS_1.1.1>:
   11400:	cbz	x0, 114e8 <elf64_offscn@@ELFUTILS_1.1.1+0xe8>
   11404:	stp	x29, x30, [sp, #-48]!
   11408:	mov	x29, sp
   1140c:	ldr	w2, [x0, #24]
   11410:	cmp	w2, #0x3
   11414:	b.ne	114d8 <elf64_offscn@@ELFUTILS_1.1.1+0xd8>  // b.any
   11418:	ldr	w2, [x0, #200]
   1141c:	stp	x19, x20, [sp, #16]
   11420:	add	x20, x0, #0xc8
   11424:	cbnz	w2, 114b0 <elf64_offscn@@ELFUTILS_1.1.1+0xb0>
   11428:	mov	x19, #0x0                   	// #0
   1142c:	mov	w6, #0xd0                  	// #208
   11430:	ldr	w5, [x20]
   11434:	cbz	w5, 11490 <elf64_offscn@@ELFUTILS_1.1.1+0x90>
   11438:	sub	w5, w5, #0x1
   1143c:	add	x0, x20, #0xe0
   11440:	add	x2, x20, #0x10
   11444:	umaddl	x5, w5, w6, x0
   11448:	b	11458 <elf64_offscn@@ELFUTILS_1.1.1+0x58>
   1144c:	add	x2, x2, #0xd0
   11450:	cmp	x2, x5
   11454:	b.eq	11490 <elf64_offscn@@ELFUTILS_1.1.1+0x90>  // b.none
   11458:	ldr	x3, [x2, #144]
   1145c:	mov	x0, x2
   11460:	ldr	x4, [x3, #24]
   11464:	cmp	x4, x1
   11468:	b.ne	1144c <elf64_offscn@@ELFUTILS_1.1.1+0x4c>  // b.any
   1146c:	ldr	x4, [x3, #32]
   11470:	mov	x19, x2
   11474:	cbz	x4, 1144c <elf64_offscn@@ELFUTILS_1.1.1+0x4c>
   11478:	ldr	w3, [x3, #4]
   1147c:	cmp	w3, #0x8
   11480:	b.eq	1144c <elf64_offscn@@ELFUTILS_1.1.1+0x4c>  // b.none
   11484:	ldp	x19, x20, [sp, #16]
   11488:	ldp	x29, x30, [sp], #48
   1148c:	ret
   11490:	ldr	x20, [x20, #8]
   11494:	cbnz	x20, 11430 <elf64_offscn@@ELFUTILS_1.1.1+0x30>
   11498:	mov	w0, #0x2b                  	// #43
   1149c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   114a0:	mov	x0, x19
   114a4:	ldp	x19, x20, [sp, #16]
   114a8:	ldp	x29, x30, [sp], #48
   114ac:	ret
   114b0:	ldr	x2, [x0, #360]
   114b4:	cbnz	x2, 11428 <elf64_offscn@@ELFUTILS_1.1.1+0x28>
   114b8:	add	x0, x0, #0xd8
   114bc:	str	x1, [sp, #40]
   114c0:	bl	3110 <elf64_getshdr@plt>
   114c4:	ldr	x1, [sp, #40]
   114c8:	cbnz	x0, 11428 <elf64_offscn@@ELFUTILS_1.1.1+0x28>
   114cc:	mov	x0, #0x0                   	// #0
   114d0:	ldp	x19, x20, [sp, #16]
   114d4:	b	11488 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
   114d8:	mov	w0, #0x4                   	// #4
   114dc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   114e0:	mov	x0, #0x0                   	// #0
   114e4:	b	11488 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
   114e8:	mov	x0, #0x0                   	// #0
   114ec:	ret

00000000000114f0 <gelf_offscn@@ELFUTILS_1.1.1>:
   114f0:	ldr	w3, [x0, #32]
   114f4:	cmp	w3, #0x1
   114f8:	b.ne	11524 <gelf_offscn@@ELFUTILS_1.1.1+0x34>  // b.any
   114fc:	tst	x1, #0xffffffff00000000
   11500:	b.ne	11508 <gelf_offscn@@ELFUTILS_1.1.1+0x18>  // b.any
   11504:	b	11310 <elf32_offscn@@ELFUTILS_1.1.1>
   11508:	stp	x29, x30, [sp, #-16]!
   1150c:	mov	w0, #0x2b                  	// #43
   11510:	mov	x29, sp
   11514:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11518:	mov	x0, #0x0                   	// #0
   1151c:	ldp	x29, x30, [sp], #16
   11520:	ret
   11524:	b	11400 <elf64_offscn@@ELFUTILS_1.1.1>

0000000000011528 <elf_getaroff@@ELFUTILS_1.1.1>:
   11528:	cbz	x0, 11554 <elf_getaroff@@ELFUTILS_1.1.1+0x2c>
   1152c:	ldr	x1, [x0, #8]
   11530:	cbz	x1, 11554 <elf_getaroff@@ELFUTILS_1.1.1+0x2c>
   11534:	ldr	w2, [x1, #24]
   11538:	cmp	w2, #0x1
   1153c:	b.ne	1155c <elf_getaroff@@ELFUTILS_1.1.1+0x34>  // b.any
   11540:	ldr	x0, [x0, #40]
   11544:	ldr	x1, [x1, #40]
   11548:	sub	x0, x0, #0x3c
   1154c:	sub	x0, x0, x1
   11550:	ret
   11554:	mov	x0, #0x0                   	// #0
   11558:	ret
   1155c:	stp	x29, x30, [sp, #-16]!
   11560:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   11564:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   11568:	mov	x29, sp
   1156c:	adrp	x0, 12000 <elf_compress@@ELFUTILS_1.7+0x118>
   11570:	add	x3, x3, #0xaa8
   11574:	add	x1, x1, #0xa98
   11578:	add	x0, x0, #0xc88
   1157c:	mov	w2, #0x32                  	// #50
   11580:	bl	3330 <__assert_fail@plt>
   11584:	nop

0000000000011588 <elf_gnu_hash@@ELFUTILS_1.2>:
   11588:	ldrb	w2, [x0]
   1158c:	cbz	w2, 115b0 <elf_gnu_hash@@ELFUTILS_1.2+0x28>
   11590:	mov	x1, #0x1505                	// #5381
   11594:	nop
   11598:	add	x1, x1, x1, lsl #5
   1159c:	add	x1, x1, w2, uxtb
   115a0:	ldrb	w2, [x0, #1]!
   115a4:	cbnz	w2, 11598 <elf_gnu_hash@@ELFUTILS_1.2+0x10>
   115a8:	and	x0, x1, #0xffffffff
   115ac:	ret
   115b0:	mov	x0, #0x1505                	// #5381
   115b4:	ret

00000000000115b8 <elf_scnshndx@@ELFUTILS_1.4>:
   115b8:	ldr	w1, [x0, #124]
   115bc:	cbz	w1, 115c8 <elf_scnshndx@@ELFUTILS_1.4+0x10>
   115c0:	mov	w0, w1
   115c4:	ret
   115c8:	stp	x29, x30, [sp, #-96]!
   115cc:	mov	x29, sp
   115d0:	str	x19, [sp, #16]
   115d4:	mov	x19, x0
   115d8:	add	x1, sp, #0x20
   115dc:	bl	9c58 <gelf_getshdr@@ELFUTILS_1.0>
   115e0:	ldr	w1, [x19, #124]
   115e4:	ldr	x19, [sp, #16]
   115e8:	mov	w0, w1
   115ec:	ldp	x29, x30, [sp], #96
   115f0:	ret
   115f4:	nop

00000000000115f8 <elf32_getchdr@@ELFUTILS_1.7>:
   115f8:	stp	x29, x30, [sp, #-32]!
   115fc:	mov	x29, sp
   11600:	str	x19, [sp, #16]
   11604:	mov	x19, x0
   11608:	bl	3290 <elf32_getshdr@plt>
   1160c:	cbz	x0, 11660 <elf32_getchdr@@ELFUTILS_1.7+0x68>
   11610:	ldr	w1, [x0, #8]
   11614:	tbnz	w1, #1, 11688 <elf32_getchdr@@ELFUTILS_1.7+0x90>
   11618:	ldr	w0, [x0, #4]
   1161c:	tst	w0, #0xfffffff7
   11620:	b.eq	11698 <elf32_getchdr@@ELFUTILS_1.7+0xa0>  // b.none
   11624:	tbz	w1, #11, 11670 <elf32_getchdr@@ELFUTILS_1.7+0x78>
   11628:	mov	x0, x19
   1162c:	mov	x1, #0x0                   	// #0
   11630:	bl	32e0 <elf_getdata@plt>
   11634:	cbz	x0, 11660 <elf32_getchdr@@ELFUTILS_1.7+0x68>
   11638:	ldr	x1, [x0, #16]
   1163c:	cmp	x1, #0xb
   11640:	b.ls	11658 <elf32_getchdr@@ELFUTILS_1.7+0x60>  // b.plast
   11644:	ldr	x0, [x0]
   11648:	cbz	x0, 11658 <elf32_getchdr@@ELFUTILS_1.7+0x60>
   1164c:	ldr	x19, [sp, #16]
   11650:	ldp	x29, x30, [sp], #32
   11654:	ret
   11658:	mov	w0, #0x21                  	// #33
   1165c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11660:	mov	x0, #0x0                   	// #0
   11664:	ldr	x19, [sp, #16]
   11668:	ldp	x29, x30, [sp], #32
   1166c:	ret
   11670:	mov	w0, #0x2e                  	// #46
   11674:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11678:	mov	x0, #0x0                   	// #0
   1167c:	ldr	x19, [sp, #16]
   11680:	ldp	x29, x30, [sp], #32
   11684:	ret
   11688:	mov	w0, #0x2d                  	// #45
   1168c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11690:	mov	x0, #0x0                   	// #0
   11694:	b	1164c <elf32_getchdr@@ELFUTILS_1.7+0x54>
   11698:	mov	w0, #0x2c                  	// #44
   1169c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   116a0:	mov	x0, #0x0                   	// #0
   116a4:	b	1164c <elf32_getchdr@@ELFUTILS_1.7+0x54>

00000000000116a8 <elf64_getchdr@@ELFUTILS_1.7>:
   116a8:	stp	x29, x30, [sp, #-32]!
   116ac:	mov	x29, sp
   116b0:	str	x19, [sp, #16]
   116b4:	mov	x19, x0
   116b8:	bl	3110 <elf64_getshdr@plt>
   116bc:	cbz	x0, 11710 <elf64_getchdr@@ELFUTILS_1.7+0x68>
   116c0:	ldr	x1, [x0, #8]
   116c4:	tbnz	w1, #1, 11738 <elf64_getchdr@@ELFUTILS_1.7+0x90>
   116c8:	ldr	w0, [x0, #4]
   116cc:	tst	w0, #0xfffffff7
   116d0:	b.eq	11748 <elf64_getchdr@@ELFUTILS_1.7+0xa0>  // b.none
   116d4:	tbz	w1, #11, 11720 <elf64_getchdr@@ELFUTILS_1.7+0x78>
   116d8:	mov	x0, x19
   116dc:	mov	x1, #0x0                   	// #0
   116e0:	bl	32e0 <elf_getdata@plt>
   116e4:	cbz	x0, 11710 <elf64_getchdr@@ELFUTILS_1.7+0x68>
   116e8:	ldr	x1, [x0, #16]
   116ec:	cmp	x1, #0x17
   116f0:	b.ls	11708 <elf64_getchdr@@ELFUTILS_1.7+0x60>  // b.plast
   116f4:	ldr	x0, [x0]
   116f8:	cbz	x0, 11708 <elf64_getchdr@@ELFUTILS_1.7+0x60>
   116fc:	ldr	x19, [sp, #16]
   11700:	ldp	x29, x30, [sp], #32
   11704:	ret
   11708:	mov	w0, #0x21                  	// #33
   1170c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11710:	mov	x0, #0x0                   	// #0
   11714:	ldr	x19, [sp, #16]
   11718:	ldp	x29, x30, [sp], #32
   1171c:	ret
   11720:	mov	w0, #0x2e                  	// #46
   11724:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11728:	mov	x0, #0x0                   	// #0
   1172c:	ldr	x19, [sp, #16]
   11730:	ldp	x29, x30, [sp], #32
   11734:	ret
   11738:	mov	w0, #0x2d                  	// #45
   1173c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11740:	mov	x0, #0x0                   	// #0
   11744:	b	116fc <elf64_getchdr@@ELFUTILS_1.7+0x54>
   11748:	mov	w0, #0x2c                  	// #44
   1174c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11750:	mov	x0, #0x0                   	// #0
   11754:	b	116fc <elf64_getchdr@@ELFUTILS_1.7+0x54>

0000000000011758 <gelf_getchdr@@ELFUTILS_1.7>:
   11758:	cbz	x0, 117f0 <gelf_getchdr@@ELFUTILS_1.7+0x98>
   1175c:	stp	x29, x30, [sp, #-32]!
   11760:	mov	x29, sp
   11764:	str	x19, [sp, #16]
   11768:	mov	x19, x1
   1176c:	cbz	x1, 117d8 <gelf_getchdr@@ELFUTILS_1.7+0x80>
   11770:	ldr	x1, [x0, #136]
   11774:	ldr	w1, [x1, #32]
   11778:	cmp	w1, #0x1
   1177c:	b.eq	117ac <gelf_getchdr@@ELFUTILS_1.7+0x54>  // b.none
   11780:	bl	3190 <elf64_getchdr@plt>
   11784:	mov	x1, x0
   11788:	cbz	x0, 117e0 <gelf_getchdr@@ELFUTILS_1.7+0x88>
   1178c:	ldp	x2, x3, [x0]
   11790:	stp	x2, x3, [x19]
   11794:	mov	x0, x19
   11798:	ldr	x1, [x1, #16]
   1179c:	str	x1, [x19, #16]
   117a0:	ldr	x19, [sp, #16]
   117a4:	ldp	x29, x30, [sp], #32
   117a8:	ret
   117ac:	bl	3090 <elf32_getchdr@plt>
   117b0:	mov	x1, x0
   117b4:	cbz	x0, 117e0 <gelf_getchdr@@ELFUTILS_1.7+0x88>
   117b8:	ldp	w3, w2, [x1, #4]
   117bc:	mov	x0, x19
   117c0:	ldr	w1, [x1]
   117c4:	str	w1, [x19]
   117c8:	stp	x3, x2, [x19, #8]
   117cc:	ldr	x19, [sp, #16]
   117d0:	ldp	x29, x30, [sp], #32
   117d4:	ret
   117d8:	mov	w0, #0x17                  	// #23
   117dc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   117e0:	mov	x0, #0x0                   	// #0
   117e4:	ldr	x19, [sp, #16]
   117e8:	ldp	x29, x30, [sp], #32
   117ec:	ret
   117f0:	mov	x0, #0x0                   	// #0
   117f4:	ret
   117f8:	stp	x29, x30, [sp, #-320]!
   117fc:	mov	x29, sp
   11800:	stp	x19, x20, [sp, #16]
   11804:	and	w20, w6, #0xff
   11808:	mov	x19, x0
   1180c:	stp	x21, x22, [sp, #32]
   11810:	mov	x22, x3
   11814:	stp	x25, x26, [sp, #64]
   11818:	mov	x26, x1
   1181c:	mov	x1, #0x0                   	// #0
   11820:	stp	x27, x28, [sp, #80]
   11824:	str	w2, [sp, #108]
   11828:	str	x4, [sp, #112]
   1182c:	str	x0, [sp, #128]
   11830:	str	x5, [sp, #152]
   11834:	bl	32e0 <elf_getdata@plt>
   11838:	mov	x27, x0
   1183c:	cbz	x0, 119f4 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
   11840:	mov	x1, x0
   11844:	eor	w20, w20, #0x1
   11848:	mov	x0, x19
   1184c:	stp	x23, x24, [sp, #48]
   11850:	bl	32e0 <elf_getdata@plt>
   11854:	cmp	x0, #0x0
   11858:	mov	x24, x0
   1185c:	ccmp	w20, #0x0, #0x4, eq  // eq = none
   11860:	b.eq	11874 <gelf_getchdr@@ELFUTILS_1.7+0x11c>  // b.none
   11864:	ldr	x1, [x27, #16]
   11868:	add	x0, x26, #0xb
   1186c:	cmp	x1, x0
   11870:	b.ls	11ae0 <gelf_getchdr@@ELFUTILS_1.7+0x388>  // b.plast
   11874:	ldr	x1, [sp, #112]
   11878:	ldr	x0, [x27, #32]
   1187c:	str	x0, [x1]
   11880:	ldr	x23, [x27, #16]
   11884:	str	x23, [x22]
   11888:	add	x23, x26, x23, lsr #3
   1188c:	lsl	x28, x23, #1
   11890:	mov	x0, x28
   11894:	bl	30c0 <malloc@plt>
   11898:	mov	x19, x0
   1189c:	cbz	x0, 11be8 <gelf_getchdr@@ELFUTILS_1.7+0x490>
   118a0:	add	x21, sp, #0xd0
   118a4:	adrp	x2, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   118a8:	mov	x0, x21
   118ac:	add	x2, x2, #0xab8
   118b0:	mov	w3, #0x70                  	// #112
   118b4:	mov	w1, #0x9                   	// #9
   118b8:	stp	xzr, xzr, [sp, #272]
   118bc:	str	xzr, [sp, #288]
   118c0:	bl	3170 <deflateInit_@plt>
   118c4:	cbnz	w0, 11b74 <gelf_getchdr@@ELFUTILS_1.7+0x41c>
   118c8:	add	x0, sp, #0xa8
   118cc:	mov	w25, #0x0                   	// #0
   118d0:	str	x0, [sp, #120]
   118d4:	str	xzr, [sp, #168]
   118d8:	ldr	x2, [sp, #120]
   118dc:	ldp	x0, x1, [x27]
   118e0:	stp	x0, x1, [x2]
   118e4:	ldr	w0, [sp, #108]
   118e8:	cmp	w0, #0x1
   118ec:	ldp	x0, x1, [x27, #16]
   118f0:	stp	x0, x1, [x2, #16]
   118f4:	ldr	x0, [x27, #32]
   118f8:	str	x0, [x2, #32]
   118fc:	b.eq	11908 <gelf_getchdr@@ELFUTILS_1.7+0x1b0>  // b.none
   11900:	ldr	x0, [x27, #16]
   11904:	cbnz	x0, 11a10 <gelf_getchdr@@ELFUTILS_1.7+0x2b8>
   11908:	ldr	x0, [sp, #168]
   1190c:	str	x0, [sp, #208]
   11910:	ldr	x0, [sp, #184]
   11914:	stp	wzr, wzr, [sp, #144]
   11918:	str	w0, [sp, #216]
   1191c:	cbz	x24, 11a54 <gelf_getchdr@@ELFUTILS_1.7+0x2fc>
   11920:	ldr	x4, [sp, #112]
   11924:	mov	x1, x24
   11928:	ldr	x2, [x24, #32]
   1192c:	ldr	x3, [x4]
   11930:	ldr	x0, [sp, #128]
   11934:	cmp	x2, x3
   11938:	csel	x2, x2, x3, cs  // cs = hs, nlast
   1193c:	str	x2, [x4]
   11940:	ldr	x2, [x22]
   11944:	ldr	x3, [x24, #16]
   11948:	add	x2, x2, x3
   1194c:	str	x2, [x22]
   11950:	bl	32e0 <elf_getdata@plt>
   11954:	str	x0, [sp, #136]
   11958:	sub	w2, w28, w26
   1195c:	add	x7, x19, x26
   11960:	mov	w1, w25
   11964:	mov	x0, x21
   11968:	str	x7, [sp, #232]
   1196c:	str	w2, [sp, #240]
   11970:	bl	30e0 <deflate@plt>
   11974:	cmn	w0, #0x2
   11978:	b.eq	11a60 <gelf_getchdr@@ELFUTILS_1.7+0x308>  // b.none
   1197c:	ldr	w0, [sp, #240]
   11980:	cmp	w20, #0x0
   11984:	ccmp	w25, #0x4, #0x0, ne  // ne = any
   11988:	sub	x26, x28, w0, uxtw
   1198c:	b.ne	1199c <gelf_getchdr@@ELFUTILS_1.7+0x244>  // b.any
   11990:	ldr	x1, [x22]
   11994:	cmp	x1, x26
   11998:	b.ls	11b04 <gelf_getchdr@@ELFUTILS_1.7+0x3ac>  // b.plast
   1199c:	cbz	w0, 119b8 <gelf_getchdr@@ELFUTILS_1.7+0x260>
   119a0:	ldr	w0, [sp, #148]
   119a4:	cbnz	w0, 11b28 <gelf_getchdr@@ELFUTILS_1.7+0x3d0>
   119a8:	mov	x27, x24
   119ac:	cbnz	w25, 119d8 <gelf_getchdr@@ELFUTILS_1.7+0x280>
   119b0:	ldr	x24, [sp, #136]
   119b4:	b	118d8 <gelf_getchdr@@ELFUTILS_1.7+0x180>
   119b8:	add	x28, x28, x23
   119bc:	mov	x0, x19
   119c0:	mov	x1, x28
   119c4:	bl	3160 <realloc@plt>
   119c8:	mov	x27, x0
   119cc:	cbz	x0, 11bb0 <gelf_getchdr@@ELFUTILS_1.7+0x458>
   119d0:	mov	x19, x27
   119d4:	b	11958 <gelf_getchdr@@ELFUTILS_1.7+0x200>
   119d8:	mov	x0, x21
   119dc:	bl	3230 <deflateEnd@plt>
   119e0:	cbnz	w0, 11bd8 <gelf_getchdr@@ELFUTILS_1.7+0x480>
   119e4:	ldr	x0, [sp, #152]
   119e8:	mov	x27, x19
   119ec:	ldp	x23, x24, [sp, #48]
   119f0:	str	x26, [x0]
   119f4:	mov	x0, x27
   119f8:	ldp	x19, x20, [sp, #16]
   119fc:	ldp	x21, x22, [sp, #32]
   11a00:	ldp	x25, x26, [sp, #64]
   11a04:	ldp	x27, x28, [sp, #80]
   11a08:	ldp	x29, x30, [sp], #320
   11a0c:	ret
   11a10:	bl	30c0 <malloc@plt>
   11a14:	str	x0, [sp, #168]
   11a18:	cbz	x0, 11bfc <gelf_getchdr@@ELFUTILS_1.7+0x4a4>
   11a1c:	ldp	x1, x0, [sp, #120]
   11a20:	mov	x2, x27
   11a24:	ldr	w3, [sp, #108]
   11a28:	ldr	x0, [x0, #136]
   11a2c:	bl	3150 <gelf_xlatetof@plt>
   11a30:	mov	x27, x0
   11a34:	cbz	x0, 11b90 <gelf_getchdr@@ELFUTILS_1.7+0x438>
   11a38:	mov	w0, #0x1                   	// #1
   11a3c:	stp	w0, w0, [sp, #144]
   11a40:	ldr	x0, [sp, #168]
   11a44:	str	x0, [sp, #208]
   11a48:	ldr	x0, [sp, #184]
   11a4c:	str	w0, [sp, #216]
   11a50:	cbnz	x24, 11920 <gelf_getchdr@@ELFUTILS_1.7+0x1c8>
   11a54:	mov	w25, #0x4                   	// #4
   11a58:	str	xzr, [sp, #136]
   11a5c:	b	11958 <gelf_getchdr@@ELFUTILS_1.7+0x200>
   11a60:	mov	w0, #0x31                  	// #49
   11a64:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11a68:	ldr	w0, [sp, #144]
   11a6c:	cbz	w0, 11aac <gelf_getchdr@@ELFUTILS_1.7+0x354>
   11a70:	mov	x0, x21
   11a74:	bl	3230 <deflateEnd@plt>
   11a78:	mov	x0, x19
   11a7c:	bl	3200 <free@plt>
   11a80:	ldr	x0, [sp, #168]
   11a84:	mov	x27, #0x0                   	// #0
   11a88:	bl	3200 <free@plt>
   11a8c:	mov	x0, x27
   11a90:	ldp	x19, x20, [sp, #16]
   11a94:	ldp	x21, x22, [sp, #32]
   11a98:	ldp	x23, x24, [sp, #48]
   11a9c:	ldp	x25, x26, [sp, #64]
   11aa0:	ldp	x27, x28, [sp, #80]
   11aa4:	ldp	x29, x30, [sp], #320
   11aa8:	ret
   11aac:	mov	x0, x21
   11ab0:	bl	3230 <deflateEnd@plt>
   11ab4:	mov	x0, x19
   11ab8:	mov	x27, #0x0                   	// #0
   11abc:	bl	3200 <free@plt>
   11ac0:	mov	x0, x27
   11ac4:	ldp	x19, x20, [sp, #16]
   11ac8:	ldp	x21, x22, [sp, #32]
   11acc:	ldp	x23, x24, [sp, #48]
   11ad0:	ldp	x25, x26, [sp, #64]
   11ad4:	ldp	x27, x28, [sp, #80]
   11ad8:	ldp	x29, x30, [sp], #320
   11adc:	ret
   11ae0:	mov	x27, #0xffffffffffffffff    	// #-1
   11ae4:	mov	x0, x27
   11ae8:	ldp	x19, x20, [sp, #16]
   11aec:	ldp	x21, x22, [sp, #32]
   11af0:	ldp	x23, x24, [sp, #48]
   11af4:	ldp	x25, x26, [sp, #64]
   11af8:	ldp	x27, x28, [sp, #80]
   11afc:	ldp	x29, x30, [sp], #320
   11b00:	ret
   11b04:	ldr	w0, [sp, #144]
   11b08:	cbnz	w0, 11b38 <gelf_getchdr@@ELFUTILS_1.7+0x3e0>
   11b0c:	mov	x0, x21
   11b10:	bl	3230 <deflateEnd@plt>
   11b14:	mov	x0, x19
   11b18:	mov	x27, #0xffffffffffffffff    	// #-1
   11b1c:	bl	3200 <free@plt>
   11b20:	ldp	x23, x24, [sp, #48]
   11b24:	b	119f4 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
   11b28:	ldr	x0, [sp, #168]
   11b2c:	bl	3200 <free@plt>
   11b30:	str	xzr, [sp, #168]
   11b34:	b	119a8 <gelf_getchdr@@ELFUTILS_1.7+0x250>
   11b38:	mov	x0, x21
   11b3c:	bl	3230 <deflateEnd@plt>
   11b40:	mov	x0, x19
   11b44:	bl	3200 <free@plt>
   11b48:	ldr	x0, [sp, #168]
   11b4c:	mov	x27, #0xffffffffffffffff    	// #-1
   11b50:	bl	3200 <free@plt>
   11b54:	mov	x0, x27
   11b58:	ldp	x19, x20, [sp, #16]
   11b5c:	ldp	x21, x22, [sp, #32]
   11b60:	ldp	x23, x24, [sp, #48]
   11b64:	ldp	x25, x26, [sp, #64]
   11b68:	ldp	x27, x28, [sp, #80]
   11b6c:	ldp	x29, x30, [sp], #320
   11b70:	ret
   11b74:	mov	x0, x19
   11b78:	bl	3200 <free@plt>
   11b7c:	mov	w0, #0x31                  	// #49
   11b80:	mov	x27, #0x0                   	// #0
   11b84:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11b88:	ldp	x23, x24, [sp, #48]
   11b8c:	b	119f4 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
   11b90:	mov	x0, x21
   11b94:	bl	3230 <deflateEnd@plt>
   11b98:	mov	x0, x19
   11b9c:	bl	3200 <free@plt>
   11ba0:	ldr	x0, [sp, #168]
   11ba4:	bl	3200 <free@plt>
   11ba8:	ldp	x23, x24, [sp, #48]
   11bac:	b	119f4 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
   11bb0:	mov	w0, #0x8                   	// #8
   11bb4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11bb8:	ldr	w0, [sp, #144]
   11bbc:	cbnz	w0, 11b90 <gelf_getchdr@@ELFUTILS_1.7+0x438>
   11bc0:	mov	x0, x21
   11bc4:	bl	3230 <deflateEnd@plt>
   11bc8:	mov	x0, x19
   11bcc:	bl	3200 <free@plt>
   11bd0:	ldp	x23, x24, [sp, #48]
   11bd4:	b	119f4 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
   11bd8:	mov	w0, #0x31                  	// #49
   11bdc:	mov	x27, #0x0                   	// #0
   11be0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11be4:	b	11bc0 <gelf_getchdr@@ELFUTILS_1.7+0x468>
   11be8:	mov	w0, #0x8                   	// #8
   11bec:	mov	x27, #0x0                   	// #0
   11bf0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11bf4:	ldp	x23, x24, [sp, #48]
   11bf8:	b	119f4 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
   11bfc:	mov	w0, #0x8                   	// #8
   11c00:	b	11bdc <gelf_getchdr@@ELFUTILS_1.7+0x484>
   11c04:	nop
   11c08:	mov	x3, #0x80ff                	// #33023
   11c0c:	stp	x29, x30, [sp, #-176]!
   11c10:	movk	x3, #0xe03f, lsl #16
   11c14:	movk	x3, #0xf80f, lsl #32
   11c18:	mov	x29, sp
   11c1c:	movk	x3, #0xfe03, lsl #48
   11c20:	stp	x19, x20, [sp, #16]
   11c24:	umulh	x3, x2, x3
   11c28:	cmp	x1, x3, lsr #10
   11c2c:	b.cc	11d3c <gelf_getchdr@@ELFUTILS_1.7+0x5e4>  // b.lo, b.ul, b.last
   11c30:	cmp	x2, #0x0
   11c34:	mov	x20, x2
   11c38:	stp	x21, x22, [sp, #32]
   11c3c:	mov	x22, x1
   11c40:	str	x23, [sp, #48]
   11c44:	mov	x23, x0
   11c48:	csinc	x0, x2, xzr, ne  // ne = any
   11c4c:	bl	30c0 <malloc@plt>
   11c50:	mov	x19, x0
   11c54:	cbz	x0, 11d58 <gelf_getchdr@@ELFUTILS_1.7+0x600>
   11c58:	add	x21, sp, #0x40
   11c5c:	stp	xzr, xzr, [sp, #72]
   11c60:	mov	x0, x21
   11c64:	stp	xzr, xzr, [sp, #88]
   11c68:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   11c6c:	mov	w2, #0x70                  	// #112
   11c70:	add	x1, x1, #0xab8
   11c74:	str	x23, [sp, #64]
   11c78:	str	w22, [sp, #72]
   11c7c:	str	x19, [sp, #88]
   11c80:	str	w20, [sp, #96]
   11c84:	stp	xzr, xzr, [sp, #104]
   11c88:	stp	xzr, xzr, [sp, #120]
   11c8c:	stp	xzr, xzr, [sp, #136]
   11c90:	stp	xzr, xzr, [sp, #152]
   11c94:	str	xzr, [sp, #168]
   11c98:	bl	3270 <inflateInit_@plt>
   11c9c:	ldr	w1, [sp, #72]
   11ca0:	cbz	w1, 11ce0 <gelf_getchdr@@ELFUTILS_1.7+0x588>
   11ca4:	cbnz	w0, 11d10 <gelf_getchdr@@ELFUTILS_1.7+0x5b8>
   11ca8:	ldr	w3, [sp, #96]
   11cac:	mov	w1, #0x4                   	// #4
   11cb0:	mov	x0, x21
   11cb4:	sub	x3, x20, x3
   11cb8:	add	x3, x19, x3
   11cbc:	str	x3, [sp, #88]
   11cc0:	bl	3070 <inflate@plt>
   11cc4:	mov	w1, w0
   11cc8:	cmp	w1, #0x1
   11ccc:	mov	x0, x21
   11cd0:	b.ne	11d10 <gelf_getchdr@@ELFUTILS_1.7+0x5b8>  // b.any
   11cd4:	bl	3310 <inflateReset@plt>
   11cd8:	ldr	w1, [sp, #72]
   11cdc:	cbnz	w1, 11ca4 <gelf_getchdr@@ELFUTILS_1.7+0x54c>
   11ce0:	cbnz	w0, 11d10 <gelf_getchdr@@ELFUTILS_1.7+0x5b8>
   11ce4:	mov	x0, x21
   11ce8:	bl	31b0 <inflateEnd@plt>
   11cec:	ldr	w1, [sp, #96]
   11cf0:	orr	w0, w0, w1
   11cf4:	cbnz	w0, 11d10 <gelf_getchdr@@ELFUTILS_1.7+0x5b8>
   11cf8:	ldp	x21, x22, [sp, #32]
   11cfc:	ldr	x23, [sp, #48]
   11d00:	mov	x0, x19
   11d04:	ldp	x19, x20, [sp, #16]
   11d08:	ldp	x29, x30, [sp], #176
   11d0c:	ret
   11d10:	mov	x0, x19
   11d14:	bl	3200 <free@plt>
   11d18:	mov	w0, #0x32                  	// #50
   11d1c:	mov	x19, #0x0                   	// #0
   11d20:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11d24:	mov	x0, x19
   11d28:	ldp	x19, x20, [sp, #16]
   11d2c:	ldp	x21, x22, [sp, #32]
   11d30:	ldr	x23, [sp, #48]
   11d34:	ldp	x29, x30, [sp], #176
   11d38:	ret
   11d3c:	mov	w0, #0x21                  	// #33
   11d40:	mov	x19, #0x0                   	// #0
   11d44:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11d48:	mov	x0, x19
   11d4c:	ldp	x19, x20, [sp, #16]
   11d50:	ldp	x29, x30, [sp], #176
   11d54:	ret
   11d58:	mov	w0, #0x8                   	// #8
   11d5c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11d60:	ldp	x21, x22, [sp, #32]
   11d64:	ldr	x23, [sp, #48]
   11d68:	b	11d00 <gelf_getchdr@@ELFUTILS_1.7+0x5a8>
   11d6c:	nop
   11d70:	stp	x29, x30, [sp, #-80]!
   11d74:	mov	x29, sp
   11d78:	stp	x19, x20, [sp, #16]
   11d7c:	mov	x20, x2
   11d80:	mov	x19, x0
   11d84:	str	x21, [sp, #32]
   11d88:	mov	x21, x1
   11d8c:	add	x1, sp, #0x38
   11d90:	bl	3240 <gelf_getchdr@plt>
   11d94:	cbz	x0, 11e1c <gelf_getchdr@@ELFUTILS_1.7+0x6c4>
   11d98:	ldr	w0, [sp, #56]
   11d9c:	cmp	w0, #0x1
   11da0:	b.ne	11e14 <gelf_getchdr@@ELFUTILS_1.7+0x6bc>  // b.any
   11da4:	ldr	x0, [sp, #72]
   11da8:	sub	x1, x0, #0x1
   11dac:	tst	x1, x0
   11db0:	b.ne	11e30 <gelf_getchdr@@ELFUTILS_1.7+0x6d8>  // b.any
   11db4:	mov	x0, x19
   11db8:	mov	x1, #0x0                   	// #0
   11dbc:	bl	32e0 <elf_getdata@plt>
   11dc0:	cbz	x0, 11e1c <gelf_getchdr@@ELFUTILS_1.7+0x6c4>
   11dc4:	ldr	x4, [x19, #136]
   11dc8:	mov	x3, #0xc                   	// #12
   11dcc:	ldr	x5, [x0]
   11dd0:	mov	x1, #0x18                  	// #24
   11dd4:	ldr	w4, [x4, #32]
   11dd8:	ldr	x2, [sp, #64]
   11ddc:	cmp	w4, #0x1
   11de0:	ldr	x4, [x0, #16]
   11de4:	csel	x1, x3, x1, eq  // eq = none
   11de8:	add	x0, x5, x1
   11dec:	sub	x1, x4, x1
   11df0:	bl	11c08 <gelf_getchdr@@ELFUTILS_1.7+0x4b0>
   11df4:	ldr	x1, [sp, #64]
   11df8:	str	x1, [x21]
   11dfc:	ldr	x1, [sp, #72]
   11e00:	str	x1, [x20]
   11e04:	ldp	x19, x20, [sp, #16]
   11e08:	ldr	x21, [sp, #32]
   11e0c:	ldp	x29, x30, [sp], #80
   11e10:	ret
   11e14:	mov	w0, #0x30                  	// #48
   11e18:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11e1c:	mov	x0, #0x0                   	// #0
   11e20:	ldp	x19, x20, [sp, #16]
   11e24:	ldr	x21, [sp, #32]
   11e28:	ldp	x29, x30, [sp], #80
   11e2c:	ret
   11e30:	mov	w0, #0x24                  	// #36
   11e34:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11e38:	mov	x0, #0x0                   	// #0
   11e3c:	ldp	x19, x20, [sp, #16]
   11e40:	ldr	x21, [sp, #32]
   11e44:	ldp	x29, x30, [sp], #80
   11e48:	ret
   11e4c:	nop
   11e50:	stp	x29, x30, [sp, #-32]!
   11e54:	mov	w5, #0x1                   	// #1
   11e58:	mov	x29, sp
   11e5c:	stp	x19, x20, [sp, #16]
   11e60:	mov	x19, x0
   11e64:	mov	x20, x1
   11e68:	ldr	x0, [x0, #160]
   11e6c:	stp	xzr, x20, [x19, #64]
   11e70:	ldr	x1, [x19, #168]
   11e74:	stp	w4, w5, [x19, #80]
   11e78:	stp	x2, xzr, [x19, #88]
   11e7c:	cmp	x1, x0
   11e80:	str	x3, [x19, #104]
   11e84:	b.eq	11e94 <gelf_getchdr@@ELFUTILS_1.7+0x73c>  // b.none
   11e88:	mov	x0, x1
   11e8c:	bl	3200 <free@plt>
   11e90:	ldr	x0, [x19, #160]
   11e94:	ldr	x1, [x19, #136]
   11e98:	ldr	x1, [x1]
   11e9c:	str	xzr, [x19, #168]
   11ea0:	cbz	x1, 11eb8 <gelf_getchdr@@ELFUTILS_1.7+0x760>
   11ea4:	ldr	x1, [x19, #176]
   11ea8:	cmp	x1, x0
   11eac:	b.eq	11eb8 <gelf_getchdr@@ELFUTILS_1.7+0x760>  // b.none
   11eb0:	ldr	w1, [x19, #156]
   11eb4:	tbz	w1, #7, 11ec0 <gelf_getchdr@@ELFUTILS_1.7+0x768>
   11eb8:	bl	3200 <free@plt>
   11ebc:	ldr	w1, [x19, #156]
   11ec0:	orr	w0, w1, #0x180
   11ec4:	mov	w1, #0x1                   	// #1
   11ec8:	str	w1, [x19, #120]
   11ecc:	str	w0, [x19, #156]
   11ed0:	mov	x0, x19
   11ed4:	str	x20, [x19, #160]
   11ed8:	ldp	x19, x20, [sp, #16]
   11edc:	ldp	x29, x30, [sp], #32
   11ee0:	b	a680 <elf_rawdata@@ELFUTILS_1.0+0x560>
   11ee4:	nop

0000000000011ee8 <elf_compress@@ELFUTILS_1.7>:
   11ee8:	cbz	x0, 12124 <elf_compress@@ELFUTILS_1.7+0x23c>
   11eec:	stp	x29, x30, [sp, #-176]!
   11ef0:	tst	w2, #0xfffffffe
   11ef4:	mov	x29, sp
   11ef8:	stp	x19, x20, [sp, #16]
   11efc:	mov	w20, w2
   11f00:	b.ne	12008 <elf_compress@@ELFUTILS_1.7+0x120>  // b.any
   11f04:	stp	x21, x22, [sp, #32]
   11f08:	mov	x19, x0
   11f0c:	mov	w21, w1
   11f10:	ldr	x22, [x0, #136]
   11f14:	add	x1, sp, #0x70
   11f18:	mov	x0, x22
   11f1c:	bl	32b0 <gelf_getehdr@plt>
   11f20:	cbz	x0, 11ff4 <elf_compress@@ELFUTILS_1.7+0x10c>
   11f24:	stp	x23, x24, [sp, #48]
   11f28:	mov	x0, x19
   11f2c:	ldr	w23, [x22, #32]
   11f30:	stp	x25, x26, [sp, #64]
   11f34:	ldrb	w24, [sp, #117]
   11f38:	cmp	w23, #0x1
   11f3c:	b.eq	12110 <elf_compress@@ELFUTILS_1.7+0x228>  // b.none
   11f40:	bl	3110 <elf64_getshdr@plt>
   11f44:	cbz	x0, 11fec <elf_compress@@ELFUTILS_1.7+0x104>
   11f48:	ldr	w25, [x0, #4]
   11f4c:	ldr	x1, [x0, #8]
   11f50:	ldr	x26, [x0, #48]
   11f54:	mov	w0, #0x2d                  	// #45
   11f58:	tbnz	w1, #1, 120f0 <elf_compress@@ELFUTILS_1.7+0x208>
   11f5c:	tst	w25, #0xfffffff7
   11f60:	mov	w0, #0x2c                  	// #44
   11f64:	b.eq	120f0 <elf_compress@@ELFUTILS_1.7+0x208>  // b.none
   11f68:	cmp	w21, #0x1
   11f6c:	b.eq	12020 <elf_compress@@ELFUTILS_1.7+0x138>  // b.none
   11f70:	cbnz	w21, 120ec <elf_compress@@ELFUTILS_1.7+0x204>
   11f74:	mov	w0, #0x2e                  	// #46
   11f78:	tbz	w1, #11, 120f0 <elf_compress@@ELFUTILS_1.7+0x208>
   11f7c:	ldr	x0, [x19, #176]
   11f80:	cbz	x0, 1215c <elf_compress@@ELFUTILS_1.7+0x274>
   11f84:	mov	x0, x19
   11f88:	cmp	w23, #0x1
   11f8c:	b.eq	1213c <elf_compress@@ELFUTILS_1.7+0x254>  // b.none
   11f90:	bl	3110 <elf64_getshdr@plt>
   11f94:	ldr	x1, [x0, #8]
   11f98:	ldp	x21, x20, [x19, #184]
   11f9c:	and	x1, x1, #0xfffffffffffff7ff
   11fa0:	str	x1, [x0, #8]
   11fa4:	str	x21, [x0, #32]
   11fa8:	str	x20, [x0, #48]
   11fac:	ldr	x23, [x19, #176]
   11fb0:	mov	w1, w25
   11fb4:	mov	x0, x22
   11fb8:	mov	x2, x20
   11fbc:	bl	a1b0 <elf_rawdata@@ELFUTILS_1.0+0x90>
   11fc0:	mov	w4, w0
   11fc4:	mov	x2, x21
   11fc8:	mov	x1, x23
   11fcc:	mov	x0, x19
   11fd0:	mov	x3, x20
   11fd4:	bl	11e50 <gelf_getchdr@@ELFUTILS_1.7+0x6f8>
   11fd8:	mov	w0, #0x1                   	// #1
   11fdc:	ldp	x21, x22, [sp, #32]
   11fe0:	ldp	x23, x24, [sp, #48]
   11fe4:	ldp	x25, x26, [sp, #64]
   11fe8:	b	11ffc <elf_compress@@ELFUTILS_1.7+0x114>
   11fec:	ldp	x23, x24, [sp, #48]
   11ff0:	ldp	x25, x26, [sp, #64]
   11ff4:	mov	w0, #0xffffffff            	// #-1
   11ff8:	ldp	x21, x22, [sp, #32]
   11ffc:	ldp	x19, x20, [sp, #16]
   12000:	ldp	x29, x30, [sp], #176
   12004:	ret
   12008:	mov	w0, #0x17                  	// #23
   1200c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12010:	mov	w0, #0xffffffff            	// #-1
   12014:	ldp	x19, x20, [sp, #16]
   12018:	ldp	x29, x30, [sp], #176
   1201c:	ret
   12020:	cmp	w23, #0x1
   12024:	mov	x0, #0x18                  	// #24
   12028:	and	w6, w20, #0x1
   1202c:	add	x5, sp, #0x68
   12030:	add	x4, sp, #0x60
   12034:	add	x3, sp, #0x58
   12038:	mov	w2, w24
   1203c:	mov	x1, #0xc                   	// #12
   12040:	csel	x1, x1, x0, eq  // eq = none
   12044:	mov	x0, x19
   12048:	bl	117f8 <gelf_getchdr@@ELFUTILS_1.7+0xa0>
   1204c:	mov	x20, x0
   12050:	cmn	x0, #0x1
   12054:	b.eq	121e0 <elf_compress@@ELFUTILS_1.7+0x2f8>  // b.none
   12058:	mov	w0, #0xffffffff            	// #-1
   1205c:	cbz	x20, 1212c <elf_compress@@ELFUTILS_1.7+0x244>
   12060:	cmp	w23, #0x1
   12064:	ldr	x2, [sp, #88]
   12068:	b.eq	12184 <elf_compress@@ELFUTILS_1.7+0x29c>  // b.none
   1206c:	mov	w1, w21
   12070:	cmp	w24, #0x1
   12074:	b.eq	12084 <elf_compress@@ELFUTILS_1.7+0x19c>  // b.none
   12078:	rev	x2, x2
   1207c:	rev	x26, x26
   12080:	mov	w1, #0x1000000             	// #16777216
   12084:	stp	w1, wzr, [x20]
   12088:	mov	x0, x19
   1208c:	stp	x2, x26, [x20, #8]
   12090:	bl	3110 <elf64_getshdr@plt>
   12094:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   12098:	ldr	x3, [x0, #8]
   1209c:	ldrb	w1, [x1, #548]
   120a0:	ldr	x2, [sp, #104]
   120a4:	cmp	w1, #0x0
   120a8:	csinc	w1, w1, wzr, ne  // ne = any
   120ac:	orr	x3, x3, #0x800
   120b0:	and	x1, x1, #0xff
   120b4:	str	x3, [x0, #8]
   120b8:	str	x2, [x0, #32]
   120bc:	str	x1, [x0, #48]
   120c0:	mov	x0, x19
   120c4:	mov	x1, x20
   120c8:	mov	w4, #0x19                  	// #25
   120cc:	mov	x3, #0x1                   	// #1
   120d0:	bl	11e50 <gelf_getchdr@@ELFUTILS_1.7+0x6f8>
   120d4:	mov	w0, #0x1                   	// #1
   120d8:	ldp	x21, x22, [sp, #32]
   120dc:	ldp	x23, x24, [sp, #48]
   120e0:	ldp	x25, x26, [sp, #64]
   120e4:	str	xzr, [x19, #176]
   120e8:	b	11ffc <elf_compress@@ELFUTILS_1.7+0x114>
   120ec:	mov	w0, #0x30                  	// #48
   120f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   120f4:	mov	w0, #0xffffffff            	// #-1
   120f8:	ldp	x19, x20, [sp, #16]
   120fc:	ldp	x21, x22, [sp, #32]
   12100:	ldp	x23, x24, [sp, #48]
   12104:	ldp	x25, x26, [sp, #64]
   12108:	ldp	x29, x30, [sp], #176
   1210c:	ret
   12110:	bl	3290 <elf32_getshdr@plt>
   12114:	cbz	x0, 11fec <elf_compress@@ELFUTILS_1.7+0x104>
   12118:	ldp	w25, w1, [x0, #4]
   1211c:	ldr	w26, [x0, #32]
   12120:	b	11f54 <elf_compress@@ELFUTILS_1.7+0x6c>
   12124:	mov	w0, #0xffffffff            	// #-1
   12128:	ret
   1212c:	ldp	x21, x22, [sp, #32]
   12130:	ldp	x23, x24, [sp, #48]
   12134:	ldp	x25, x26, [sp, #64]
   12138:	b	11ffc <elf_compress@@ELFUTILS_1.7+0x114>
   1213c:	bl	3290 <elf32_getshdr@plt>
   12140:	ldr	w1, [x0, #8]
   12144:	ldp	x21, x20, [x19, #184]
   12148:	and	w1, w1, #0xfffff7ff
   1214c:	str	w1, [x0, #8]
   12150:	str	w21, [x0, #20]
   12154:	str	w20, [x0, #32]
   12158:	b	11fac <elf_compress@@ELFUTILS_1.7+0xc4>
   1215c:	add	x2, sp, #0x68
   12160:	add	x1, sp, #0x60
   12164:	mov	x0, x19
   12168:	bl	11d70 <gelf_getchdr@@ELFUTILS_1.7+0x618>
   1216c:	cbz	x0, 120f4 <elf_compress@@ELFUTILS_1.7+0x20c>
   12170:	ldr	x1, [sp, #96]
   12174:	stp	x0, x1, [x19, #176]
   12178:	ldr	x0, [sp, #104]
   1217c:	str	x0, [x19, #192]
   12180:	b	11f84 <elf_compress@@ELFUTILS_1.7+0x9c>
   12184:	ldr	x0, [sp, #96]
   12188:	cmp	w24, #0x1
   1218c:	mov	w3, w2
   12190:	mov	w1, w0
   12194:	b.eq	121a4 <elf_compress@@ELFUTILS_1.7+0x2bc>  // b.none
   12198:	rev	w3, w2
   1219c:	rev	w1, w0
   121a0:	mov	w23, #0x1000000             	// #16777216
   121a4:	stp	w23, w3, [x20]
   121a8:	mov	x0, x19
   121ac:	str	w1, [x20, #8]
   121b0:	bl	3290 <elf32_getshdr@plt>
   121b4:	ldr	w3, [x0, #8]
   121b8:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0xe08>
   121bc:	ldr	x2, [sp, #104]
   121c0:	orr	w3, w3, #0x800
   121c4:	ldrb	w1, [x1, #521]
   121c8:	str	w3, [x0, #8]
   121cc:	cmp	w1, #0x0
   121d0:	str	w2, [x0, #20]
   121d4:	csinc	w1, w1, wzr, ne  // ne = any
   121d8:	str	w1, [x0, #32]
   121dc:	b	120c0 <elf_compress@@ELFUTILS_1.7+0x1d8>
   121e0:	mov	w0, #0x0                   	// #0
   121e4:	ldp	x21, x22, [sp, #32]
   121e8:	ldp	x23, x24, [sp, #48]
   121ec:	ldp	x25, x26, [sp, #64]
   121f0:	b	11ffc <elf_compress@@ELFUTILS_1.7+0x114>
   121f4:	nop

00000000000121f8 <elf_compress_gnu@@ELFUTILS_1.7>:
   121f8:	cbz	x0, 123b8 <elf_compress_gnu@@ELFUTILS_1.7+0x1c0>
   121fc:	stp	x29, x30, [sp, #-176]!
   12200:	tst	w2, #0xfffffffe
   12204:	mov	x29, sp
   12208:	stp	x19, x20, [sp, #16]
   1220c:	mov	w20, w2
   12210:	b.ne	12358 <elf_compress_gnu@@ELFUTILS_1.7+0x160>  // b.any
   12214:	stp	x21, x22, [sp, #32]
   12218:	mov	x19, x0
   1221c:	mov	w21, w1
   12220:	ldr	x22, [x0, #136]
   12224:	add	x1, sp, #0x70
   12228:	mov	x0, x22
   1222c:	bl	32b0 <gelf_getehdr@plt>
   12230:	cbz	x0, 12344 <elf_compress_gnu@@ELFUTILS_1.7+0x14c>
   12234:	stp	x23, x24, [sp, #48]
   12238:	mov	x0, x19
   1223c:	ldr	w23, [x22, #32]
   12240:	stp	x25, x26, [sp, #64]
   12244:	ldrb	w24, [sp, #117]
   12248:	cmp	w23, #0x1
   1224c:	b.eq	1239c <elf_compress_gnu@@ELFUTILS_1.7+0x1a4>  // b.none
   12250:	bl	3110 <elf64_getshdr@plt>
   12254:	cbz	x0, 1233c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   12258:	ldr	w25, [x0, #4]
   1225c:	ldr	x1, [x0, #8]
   12260:	ldr	x26, [x0, #48]
   12264:	mov	x0, #0x802                 	// #2050
   12268:	tst	x1, x0
   1226c:	b.ne	123b0 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>  // b.any
   12270:	tst	w25, #0xfffffff7
   12274:	mov	w0, #0x2c                  	// #44
   12278:	b.eq	12374 <elf_compress_gnu@@ELFUTILS_1.7+0x17c>  // b.none
   1227c:	cmp	w21, #0x1
   12280:	b.eq	123c0 <elf_compress_gnu@@ELFUTILS_1.7+0x1c8>  // b.none
   12284:	cbnz	w21, 12370 <elf_compress_gnu@@ELFUTILS_1.7+0x178>
   12288:	mov	x0, x19
   1228c:	mov	x1, #0x0                   	// #0
   12290:	bl	32e0 <elf_getdata@plt>
   12294:	cbz	x0, 1233c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   12298:	ldr	x1, [x0, #16]
   1229c:	cmp	x1, #0xb
   122a0:	b.ls	12394 <elf_compress_gnu@@ELFUTILS_1.7+0x19c>  // b.plast
   122a4:	ldr	x0, [x0]
   122a8:	mov	w2, #0x4c5a                	// #19546
   122ac:	movk	w2, #0x4249, lsl #16
   122b0:	ldr	w3, [x0]
   122b4:	cmp	w3, w2
   122b8:	b.ne	12394 <elf_compress_gnu@@ELFUTILS_1.7+0x19c>  // b.any
   122bc:	ldur	x20, [x0, #4]
   122c0:	rev	x20, x20
   122c4:	add	x2, x20, #0x17
   122c8:	cmp	x1, x2
   122cc:	b.hi	12394 <elf_compress_gnu@@ELFUTILS_1.7+0x19c>  // b.pmore
   122d0:	sub	x1, x1, #0xc
   122d4:	add	x0, x0, #0xc
   122d8:	mov	x2, x20
   122dc:	bl	11c08 <gelf_getchdr@@ELFUTILS_1.7+0x4b0>
   122e0:	mov	x21, x0
   122e4:	cbz	x0, 1233c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   122e8:	mov	x0, x19
   122ec:	cmp	w23, #0x1
   122f0:	b.eq	12474 <elf_compress_gnu@@ELFUTILS_1.7+0x27c>  // b.none
   122f4:	bl	3110 <elf64_getshdr@plt>
   122f8:	str	x20, [x0, #32]
   122fc:	mov	w1, w25
   12300:	mov	x2, x26
   12304:	mov	x0, x22
   12308:	bl	a1b0 <elf_rawdata@@ELFUTILS_1.0+0x90>
   1230c:	mov	x3, x26
   12310:	mov	w4, w0
   12314:	mov	x1, x21
   12318:	mov	x0, x19
   1231c:	mov	x2, x20
   12320:	bl	11e50 <gelf_getchdr@@ELFUTILS_1.7+0x6f8>
   12324:	mov	w0, #0x1                   	// #1
   12328:	ldp	x23, x24, [sp, #48]
   1232c:	ldp	x25, x26, [sp, #64]
   12330:	str	x21, [x19, #176]
   12334:	ldp	x21, x22, [sp, #32]
   12338:	b	1234c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   1233c:	ldp	x23, x24, [sp, #48]
   12340:	ldp	x25, x26, [sp, #64]
   12344:	mov	w0, #0xffffffff            	// #-1
   12348:	ldp	x21, x22, [sp, #32]
   1234c:	ldp	x19, x20, [sp, #16]
   12350:	ldp	x29, x30, [sp], #176
   12354:	ret
   12358:	mov	w0, #0x17                  	// #23
   1235c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12360:	mov	w0, #0xffffffff            	// #-1
   12364:	ldp	x19, x20, [sp, #16]
   12368:	ldp	x29, x30, [sp], #176
   1236c:	ret
   12370:	mov	w0, #0x30                  	// #48
   12374:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12378:	mov	w0, #0xffffffff            	// #-1
   1237c:	ldp	x19, x20, [sp, #16]
   12380:	ldp	x21, x22, [sp, #32]
   12384:	ldp	x23, x24, [sp, #48]
   12388:	ldp	x25, x26, [sp, #64]
   1238c:	ldp	x29, x30, [sp], #176
   12390:	ret
   12394:	mov	w0, #0x2e                  	// #46
   12398:	b	12374 <elf_compress_gnu@@ELFUTILS_1.7+0x17c>
   1239c:	bl	3290 <elf32_getshdr@plt>
   123a0:	cbz	x0, 1233c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   123a4:	ldp	w25, w1, [x0, #4]
   123a8:	ldr	w26, [x0, #32]
   123ac:	b	12264 <elf_compress_gnu@@ELFUTILS_1.7+0x6c>
   123b0:	mov	w0, #0x2d                  	// #45
   123b4:	b	12374 <elf_compress_gnu@@ELFUTILS_1.7+0x17c>
   123b8:	mov	w0, #0xffffffff            	// #-1
   123bc:	ret
   123c0:	and	w6, w20, #0x1
   123c4:	mov	w2, w24
   123c8:	add	x5, sp, #0x60
   123cc:	add	x4, sp, #0x68
   123d0:	add	x3, sp, #0x58
   123d4:	mov	x0, x19
   123d8:	mov	x1, #0xc                   	// #12
   123dc:	bl	117f8 <gelf_getchdr@@ELFUTILS_1.7+0xa0>
   123e0:	mov	x20, x0
   123e4:	cmn	x0, #0x1
   123e8:	b.eq	12460 <elf_compress_gnu@@ELFUTILS_1.7+0x268>  // b.none
   123ec:	mov	w0, #0xffffffff            	// #-1
   123f0:	cbz	x20, 12450 <elf_compress_gnu@@ELFUTILS_1.7+0x258>
   123f4:	ldr	x0, [sp, #88]
   123f8:	mov	w1, #0x4c5a                	// #19546
   123fc:	movk	w1, #0x4249, lsl #16
   12400:	str	w1, [x20]
   12404:	rev	x0, x0
   12408:	stur	x0, [x20, #4]
   1240c:	cmp	w23, #0x1
   12410:	mov	x0, x19
   12414:	b.eq	12480 <elf_compress_gnu@@ELFUTILS_1.7+0x288>  // b.none
   12418:	bl	3110 <elf64_getshdr@plt>
   1241c:	ldr	x2, [sp, #96]
   12420:	str	x2, [x0, #32]
   12424:	mov	x0, x19
   12428:	mov	x1, x20
   1242c:	mov	w4, #0x0                   	// #0
   12430:	mov	x3, #0x1                   	// #1
   12434:	bl	11e50 <gelf_getchdr@@ELFUTILS_1.7+0x6f8>
   12438:	mov	w0, #0x1                   	// #1
   1243c:	ldp	x21, x22, [sp, #32]
   12440:	ldp	x23, x24, [sp, #48]
   12444:	ldp	x25, x26, [sp, #64]
   12448:	str	xzr, [x19, #176]
   1244c:	b	1234c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   12450:	ldp	x21, x22, [sp, #32]
   12454:	ldp	x23, x24, [sp, #48]
   12458:	ldp	x25, x26, [sp, #64]
   1245c:	b	1234c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   12460:	mov	w0, #0x0                   	// #0
   12464:	ldp	x21, x22, [sp, #32]
   12468:	ldp	x23, x24, [sp, #48]
   1246c:	ldp	x25, x26, [sp, #64]
   12470:	b	1234c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   12474:	bl	3290 <elf32_getshdr@plt>
   12478:	str	w20, [x0, #20]
   1247c:	b	122fc <elf_compress_gnu@@ELFUTILS_1.7+0x104>
   12480:	bl	3290 <elf32_getshdr@plt>
   12484:	ldr	x2, [sp, #96]
   12488:	str	w2, [x0, #20]
   1248c:	b	12424 <elf_compress_gnu@@ELFUTILS_1.7+0x22c>

Disassembly of section .fini:

0000000000012490 <.fini>:
   12490:	stp	x29, x30, [sp, #-16]!
   12494:	mov	x29, sp
   12498:	ldp	x29, x30, [sp], #16
   1249c:	ret
