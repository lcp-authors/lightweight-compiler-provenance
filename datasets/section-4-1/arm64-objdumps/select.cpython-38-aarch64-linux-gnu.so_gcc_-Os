
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//select.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001e98 <.init>:
    1e98:	stp	x29, x30, [sp, #-16]!
    1e9c:	mov	x29, sp
    1ea0:	bl	2240 <PySequence_Fast@plt+0x10>
    1ea4:	ldp	x29, x30, [sp], #16
    1ea8:	ret

Disassembly of section .plt:

0000000000001eb0 <PyList_New@plt-0x20>:
    1eb0:	stp	x16, x30, [sp, #-16]!
    1eb4:	adrp	x16, 15000 <PyInit_select@@Base+0x11484>
    1eb8:	ldr	x17, [x16, #4088]
    1ebc:	add	x16, x16, #0xff8
    1ec0:	br	x17
    1ec4:	nop
    1ec8:	nop
    1ecc:	nop

0000000000001ed0 <PyList_New@plt>:
    1ed0:	adrp	x16, 16000 <PyList_New>
    1ed4:	ldr	x17, [x16]
    1ed8:	add	x16, x16, #0x0
    1edc:	br	x17

0000000000001ee0 <PyModule_AddIntConstant@plt>:
    1ee0:	adrp	x16, 16000 <PyList_New>
    1ee4:	ldr	x17, [x16, #8]
    1ee8:	add	x16, x16, #0x8
    1eec:	br	x17

0000000000001ef0 <_PyTime_FromMillisecondsObject@plt>:
    1ef0:	adrp	x16, 16000 <PyList_New>
    1ef4:	ldr	x17, [x16, #16]
    1ef8:	add	x16, x16, #0x10
    1efc:	br	x17

0000000000001f00 <PyEval_RestoreThread@plt>:
    1f00:	adrp	x16, 16000 <PyList_New>
    1f04:	ldr	x17, [x16, #24]
    1f08:	add	x16, x16, #0x18
    1f0c:	br	x17

0000000000001f10 <PyMem_Free@plt>:
    1f10:	adrp	x16, 16000 <PyList_New>
    1f14:	ldr	x17, [x16, #32]
    1f18:	add	x16, x16, #0x20
    1f1c:	br	x17

0000000000001f20 <PyErr_SetFromErrno@plt>:
    1f20:	adrp	x16, 16000 <PyList_New>
    1f24:	ldr	x17, [x16, #40]
    1f28:	add	x16, x16, #0x28
    1f2c:	br	x17

0000000000001f30 <__cxa_finalize@plt>:
    1f30:	adrp	x16, 16000 <PyList_New>
    1f34:	ldr	x17, [x16, #48]
    1f38:	add	x16, x16, #0x30
    1f3c:	br	x17

0000000000001f40 <_Py_Dealloc@plt>:
    1f40:	adrp	x16, 16000 <PyList_New>
    1f44:	ldr	x17, [x16, #56]
    1f48:	add	x16, x16, #0x38
    1f4c:	br	x17

0000000000001f50 <PyErr_NoMemory@plt>:
    1f50:	adrp	x16, 16000 <PyList_New>
    1f54:	ldr	x17, [x16, #64]
    1f58:	add	x16, x16, #0x40
    1f5c:	br	x17

0000000000001f60 <_PyArg_UnpackKeywords@plt>:
    1f60:	adrp	x16, 16000 <PyList_New>
    1f64:	ldr	x17, [x16, #72]
    1f68:	add	x16, x16, #0x48
    1f6c:	br	x17

0000000000001f70 <PyErr_SetString@plt>:
    1f70:	adrp	x16, 16000 <PyList_New>
    1f74:	ldr	x17, [x16, #80]
    1f78:	add	x16, x16, #0x50
    1f7c:	br	x17

0000000000001f80 <poll@plt>:
    1f80:	adrp	x16, 16000 <PyList_New>
    1f84:	ldr	x17, [x16, #88]
    1f88:	add	x16, x16, #0x58
    1f8c:	br	x17

0000000000001f90 <PyMem_Realloc@plt>:
    1f90:	adrp	x16, 16000 <PyList_New>
    1f94:	ldr	x17, [x16, #96]
    1f98:	add	x16, x16, #0x60
    1f9c:	br	x17

0000000000001fa0 <PyErr_ExceptionMatches@plt>:
    1fa0:	adrp	x16, 16000 <PyList_New>
    1fa4:	ldr	x17, [x16, #104]
    1fa8:	add	x16, x16, #0x68
    1fac:	br	x17

0000000000001fb0 <_PyTime_FromSecondsObject@plt>:
    1fb0:	adrp	x16, 16000 <PyList_New>
    1fb4:	ldr	x17, [x16, #112]
    1fb8:	add	x16, x16, #0x70
    1fbc:	br	x17

0000000000001fc0 <PyObject_Free@plt>:
    1fc0:	adrp	x16, 16000 <PyList_New>
    1fc4:	ldr	x17, [x16, #120]
    1fc8:	add	x16, x16, #0x78
    1fcc:	br	x17

0000000000001fd0 <_PyTime_AsMilliseconds@plt>:
    1fd0:	adrp	x16, 16000 <PyList_New>
    1fd4:	ldr	x17, [x16, #128]
    1fd8:	add	x16, x16, #0x80
    1fdc:	br	x17

0000000000001fe0 <PyType_Ready@plt>:
    1fe0:	adrp	x16, 16000 <PyList_New>
    1fe4:	ldr	x17, [x16, #136]
    1fe8:	add	x16, x16, #0x88
    1fec:	br	x17

0000000000001ff0 <PyLong_FromLong@plt>:
    1ff0:	adrp	x16, 16000 <PyList_New>
    1ff4:	ldr	x17, [x16, #144]
    1ff8:	add	x16, x16, #0x90
    1ffc:	br	x17

0000000000002000 <epoll_wait@plt>:
    2000:	adrp	x16, 16000 <PyList_New>
    2004:	ldr	x17, [x16, #152]
    2008:	add	x16, x16, #0x98
    200c:	br	x17

0000000000002010 <close@plt>:
    2010:	adrp	x16, 16000 <PyList_New>
    2014:	ldr	x17, [x16, #160]
    2018:	add	x16, x16, #0xa0
    201c:	br	x17

0000000000002020 <PyLong_AsUnsignedLongMask@plt>:
    2020:	adrp	x16, 16000 <PyList_New>
    2024:	ldr	x17, [x16, #168]
    2028:	add	x16, x16, #0xa8
    202c:	br	x17

0000000000002030 <__gmon_start__@plt>:
    2030:	adrp	x16, 16000 <PyList_New>
    2034:	ldr	x17, [x16, #176]
    2038:	add	x16, x16, #0xb0
    203c:	br	x17

0000000000002040 <PyTuple_New@plt>:
    2040:	adrp	x16, 16000 <PyList_New>
    2044:	ldr	x17, [x16, #184]
    2048:	add	x16, x16, #0xb8
    204c:	br	x17

0000000000002050 <_PyArg_CheckPositional@plt>:
    2050:	adrp	x16, 16000 <PyList_New>
    2054:	ldr	x17, [x16, #192]
    2058:	add	x16, x16, #0xc0
    205c:	br	x17

0000000000002060 <PyDict_DelItem@plt>:
    2060:	adrp	x16, 16000 <PyList_New>
    2064:	ldr	x17, [x16, #200]
    2068:	add	x16, x16, #0xc8
    206c:	br	x17

0000000000002070 <Py_BuildValue@plt>:
    2070:	adrp	x16, 16000 <PyList_New>
    2074:	ldr	x17, [x16, #208]
    2078:	add	x16, x16, #0xd0
    207c:	br	x17

0000000000002080 <PyErr_Occurred@plt>:
    2080:	adrp	x16, 16000 <PyList_New>
    2084:	ldr	x17, [x16, #216]
    2088:	add	x16, x16, #0xd8
    208c:	br	x17

0000000000002090 <PyModule_Create2@plt>:
    2090:	adrp	x16, 16000 <PyList_New>
    2094:	ldr	x17, [x16, #224]
    2098:	add	x16, x16, #0xe0
    209c:	br	x17

00000000000020a0 <PyLong_AsLong@plt>:
    20a0:	adrp	x16, 16000 <PyList_New>
    20a4:	ldr	x17, [x16, #232]
    20a8:	add	x16, x16, #0xe8
    20ac:	br	x17

00000000000020b0 <_PyTime_AsTimeval_noraise@plt>:
    20b0:	adrp	x16, 16000 <PyList_New>
    20b4:	ldr	x17, [x16, #240]
    20b8:	add	x16, x16, #0xf0
    20bc:	br	x17

00000000000020c0 <PyList_SetItem@plt>:
    20c0:	adrp	x16, 16000 <PyList_New>
    20c4:	ldr	x17, [x16, #248]
    20c8:	add	x16, x16, #0xf8
    20cc:	br	x17

00000000000020d0 <epoll_create1@plt>:
    20d0:	adrp	x16, 16000 <PyList_New>
    20d4:	ldr	x17, [x16, #256]
    20d8:	add	x16, x16, #0x100
    20dc:	br	x17

00000000000020e0 <_PyObject_CallMethodId@plt>:
    20e0:	adrp	x16, 16000 <PyList_New>
    20e4:	ldr	x17, [x16, #264]
    20e8:	add	x16, x16, #0x108
    20ec:	br	x17

00000000000020f0 <_PyLong_UnsignedShort_Converter@plt>:
    20f0:	adrp	x16, 16000 <PyList_New>
    20f4:	ldr	x17, [x16, #272]
    20f8:	add	x16, x16, #0x110
    20fc:	br	x17

0000000000002100 <PyDict_New@plt>:
    2100:	adrp	x16, 16000 <PyList_New>
    2104:	ldr	x17, [x16, #280]
    2108:	add	x16, x16, #0x118
    210c:	br	x17

0000000000002110 <PyDict_Next@plt>:
    2110:	adrp	x16, 16000 <PyList_New>
    2114:	ldr	x17, [x16, #288]
    2118:	add	x16, x16, #0x120
    211c:	br	x17

0000000000002120 <epoll_ctl@plt>:
    2120:	adrp	x16, 16000 <PyList_New>
    2124:	ldr	x17, [x16, #296]
    2128:	add	x16, x16, #0x128
    212c:	br	x17

0000000000002130 <_PyObject_New@plt>:
    2130:	adrp	x16, 16000 <PyList_New>
    2134:	ldr	x17, [x16, #304]
    2138:	add	x16, x16, #0x130
    213c:	br	x17

0000000000002140 <PyEval_SaveThread@plt>:
    2140:	adrp	x16, 16000 <PyList_New>
    2144:	ldr	x17, [x16, #312]
    2148:	add	x16, x16, #0x138
    214c:	br	x17

0000000000002150 <PyModule_AddObject@plt>:
    2150:	adrp	x16, 16000 <PyList_New>
    2154:	ldr	x17, [x16, #320]
    2158:	add	x16, x16, #0x140
    215c:	br	x17

0000000000002160 <PyDict_SetItem@plt>:
    2160:	adrp	x16, 16000 <PyList_New>
    2164:	ldr	x17, [x16, #328]
    2168:	add	x16, x16, #0x148
    216c:	br	x17

0000000000002170 <select@plt>:
    2170:	adrp	x16, 16000 <PyList_New>
    2174:	ldr	x17, [x16, #336]
    2178:	add	x16, x16, #0x150
    217c:	br	x17

0000000000002180 <PyObject_AsFileDescriptor@plt>:
    2180:	adrp	x16, 16000 <PyList_New>
    2184:	ldr	x17, [x16, #344]
    2188:	add	x16, x16, #0x158
    218c:	br	x17

0000000000002190 <_PyTime_AsTimeval@plt>:
    2190:	adrp	x16, 16000 <PyList_New>
    2194:	ldr	x17, [x16, #352]
    2198:	add	x16, x16, #0x160
    219c:	br	x17

00000000000021a0 <PyErr_CheckSignals@plt>:
    21a0:	adrp	x16, 16000 <PyList_New>
    21a4:	ldr	x17, [x16, #360]
    21a8:	add	x16, x16, #0x168
    21ac:	br	x17

00000000000021b0 <PyType_IsSubtype@plt>:
    21b0:	adrp	x16, 16000 <PyList_New>
    21b4:	ldr	x17, [x16, #368]
    21b8:	add	x16, x16, #0x170
    21bc:	br	x17

00000000000021c0 <PyErr_Format@plt>:
    21c0:	adrp	x16, 16000 <PyList_New>
    21c4:	ldr	x17, [x16, #376]
    21c8:	add	x16, x16, #0x178
    21cc:	br	x17

00000000000021d0 <__errno_location@plt>:
    21d0:	adrp	x16, 16000 <PyList_New>
    21d4:	ldr	x17, [x16, #384]
    21d8:	add	x16, x16, #0x180
    21dc:	br	x17

00000000000021e0 <_PyLong_AsInt@plt>:
    21e0:	adrp	x16, 16000 <PyList_New>
    21e4:	ldr	x17, [x16, #392]
    21e8:	add	x16, x16, #0x188
    21ec:	br	x17

00000000000021f0 <PyMem_Malloc@plt>:
    21f0:	adrp	x16, 16000 <PyList_New>
    21f4:	ldr	x17, [x16, #400]
    21f8:	add	x16, x16, #0x190
    21fc:	br	x17

0000000000002200 <_PyTime_GetMonotonicClock@plt>:
    2200:	adrp	x16, 16000 <PyList_New>
    2204:	ldr	x17, [x16, #408]
    2208:	add	x16, x16, #0x198
    220c:	br	x17

0000000000002210 <PyTuple_Pack@plt>:
    2210:	adrp	x16, 16000 <PyList_New>
    2214:	ldr	x17, [x16, #416]
    2218:	add	x16, x16, #0x1a0
    221c:	br	x17

0000000000002220 <PyDict_GetItemWithError@plt>:
    2220:	adrp	x16, 16000 <PyList_New>
    2224:	ldr	x17, [x16, #424]
    2228:	add	x16, x16, #0x1a8
    222c:	br	x17

0000000000002230 <PySequence_Fast@plt>:
    2230:	adrp	x16, 16000 <PyList_New>
    2234:	ldr	x17, [x16, #432]
    2238:	add	x16, x16, #0x1b0
    223c:	br	x17

Disassembly of section .text:

0000000000002240 <PyInit_select@@Base-0x193c>:
    2240:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2244:	ldr	x0, [x0, #4024]
    2248:	cbz	x0, 2250 <PySequence_Fast@plt+0x20>
    224c:	b	2030 <__gmon_start__@plt>
    2250:	ret
    2254:	adrp	x0, 16000 <PyInit_select@@Base+0x12484>
    2258:	add	x0, x0, #0x950
    225c:	adrp	x1, 16000 <PyInit_select@@Base+0x12484>
    2260:	add	x1, x1, #0x950
    2264:	cmp	x1, x0
    2268:	b.eq	2280 <PySequence_Fast@plt+0x50>  // b.none
    226c:	adrp	x1, 15000 <PyInit_select@@Base+0x11484>
    2270:	ldr	x1, [x1, #3960]
    2274:	cbz	x1, 2280 <PySequence_Fast@plt+0x50>
    2278:	mov	x16, x1
    227c:	br	x16
    2280:	ret
    2284:	adrp	x0, 16000 <PyInit_select@@Base+0x12484>
    2288:	add	x0, x0, #0x950
    228c:	adrp	x1, 16000 <PyInit_select@@Base+0x12484>
    2290:	add	x1, x1, #0x950
    2294:	sub	x1, x1, x0
    2298:	mov	x2, #0x2                   	// #2
    229c:	asr	x1, x1, #3
    22a0:	sdiv	x1, x1, x2
    22a4:	cbz	x1, 22bc <PySequence_Fast@plt+0x8c>
    22a8:	adrp	x2, 15000 <PyInit_select@@Base+0x11484>
    22ac:	ldr	x2, [x2, #4064]
    22b0:	cbz	x2, 22bc <PySequence_Fast@plt+0x8c>
    22b4:	mov	x16, x2
    22b8:	br	x16
    22bc:	ret
    22c0:	adrp	x0, 16000 <PyInit_select@@Base+0x12484>
    22c4:	ldrb	w1, [x0, #2384]
    22c8:	cbnz	w1, 230c <PySequence_Fast@plt+0xdc>
    22cc:	stp	x29, x30, [sp, #-32]!
    22d0:	mov	x29, sp
    22d4:	str	x19, [sp, #16]
    22d8:	mov	x19, x0
    22dc:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    22e0:	ldr	x0, [x0, #3976]
    22e4:	cbz	x0, 22f4 <PySequence_Fast@plt+0xc4>
    22e8:	adrp	x0, 16000 <PyInit_select@@Base+0x12484>
    22ec:	ldr	x0, [x0, #440]
    22f0:	bl	1f30 <__cxa_finalize@plt>
    22f4:	bl	2254 <PySequence_Fast@plt+0x24>
    22f8:	mov	w0, #0x1                   	// #1
    22fc:	strb	w0, [x19, #2384]
    2300:	ldr	x19, [sp, #16]
    2304:	ldp	x29, x30, [sp], #32
    2308:	ret
    230c:	ret
    2310:	b	2284 <PySequence_Fast@plt+0x54>
    2314:	stp	x29, x30, [sp, #-16]!
    2318:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    231c:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    2320:	mov	x29, sp
    2324:	ldr	x0, [x0, #3992]
    2328:	add	x1, x1, #0xe74
    232c:	ldr	x0, [x0]
    2330:	bl	1f70 <PyErr_SetString@plt>
    2334:	mov	x0, #0x0                   	// #0
    2338:	ldp	x29, x30, [sp], #16
    233c:	ret
    2340:	ldr	w2, [x0, #16]
    2344:	tbz	w2, #31, 234c <PySequence_Fast@plt+0x11c>
    2348:	b	2314 <PySequence_Fast@plt+0xe4>
    234c:	ldr	x2, [x0]
    2350:	add	x2, x2, #0x1
    2354:	str	x2, [x0]
    2358:	ret
    235c:	stp	x29, x30, [sp, #-32]!
    2360:	mov	x29, sp
    2364:	str	x19, [sp, #16]
    2368:	mov	x19, x1
    236c:	bl	2180 <PyObject_AsFileDescriptor@plt>
    2370:	cmn	w0, #0x1
    2374:	b.eq	238c <PySequence_Fast@plt+0x15c>  // b.none
    2378:	str	w0, [x19]
    237c:	mov	w0, #0x1                   	// #1
    2380:	ldr	x19, [sp, #16]
    2384:	ldp	x29, x30, [sp], #32
    2388:	ret
    238c:	mov	w0, #0x0                   	// #0
    2390:	b	2380 <PySequence_Fast@plt+0x150>
    2394:	stp	x29, x30, [sp, #-80]!
    2398:	mov	x29, sp
    239c:	stp	x19, x20, [sp, #16]
    23a0:	mov	w19, w0
    23a4:	stp	x21, x22, [sp, #32]
    23a8:	str	x23, [sp, #48]
    23ac:	tbz	w0, #31, 23c8 <PySequence_Fast@plt+0x198>
    23b0:	bl	2314 <PySequence_Fast@plt+0xe4>
    23b4:	ldp	x19, x20, [sp, #16]
    23b8:	ldp	x21, x22, [sp, #32]
    23bc:	ldr	x23, [sp, #48]
    23c0:	ldp	x29, x30, [sp], #80
    23c4:	ret
    23c8:	mov	w20, w1
    23cc:	mov	w21, w2
    23d0:	cmp	w1, #0x2
    23d4:	add	x23, sp, #0x40
    23d8:	b.eq	2428 <PySequence_Fast@plt+0x1f8>  // b.none
    23dc:	str	w3, [sp, #64]
    23e0:	str	w2, [sp, #72]
    23e4:	bl	2140 <PyEval_SaveThread@plt>
    23e8:	mov	x3, x23
    23ec:	mov	x22, x0
    23f0:	mov	w2, w21
    23f4:	mov	w0, w19
    23f8:	mov	w1, w20
    23fc:	bl	2120 <epoll_ctl@plt>
    2400:	mov	w19, w0
    2404:	mov	x0, x22
    2408:	bl	1f00 <PyEval_RestoreThread@plt>
    240c:	tbz	w19, #31, 2464 <PySequence_Fast@plt+0x234>
    2410:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2414:	ldr	x0, [x0, #4008]
    2418:	ldr	x0, [x0]
    241c:	bl	1f20 <PyErr_SetFromErrno@plt>
    2420:	mov	x0, #0x0                   	// #0
    2424:	b	23b4 <PySequence_Fast@plt+0x184>
    2428:	bl	2140 <PyEval_SaveThread@plt>
    242c:	mov	x22, x0
    2430:	mov	w1, w20
    2434:	mov	x3, x23
    2438:	mov	w2, w21
    243c:	mov	w0, w19
    2440:	bl	2120 <epoll_ctl@plt>
    2444:	mov	w19, w0
    2448:	bl	21d0 <__errno_location@plt>
    244c:	ldr	w1, [x0]
    2450:	cmp	w1, #0x9
    2454:	b.ne	2404 <PySequence_Fast@plt+0x1d4>  // b.any
    2458:	mov	w19, #0x0                   	// #0
    245c:	str	wzr, [x0]
    2460:	b	2404 <PySequence_Fast@plt+0x1d4>
    2464:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2468:	ldr	x0, [x0, #4048]
    246c:	ldr	x1, [x0]
    2470:	add	x1, x1, #0x1
    2474:	str	x1, [x0]
    2478:	b	23b4 <PySequence_Fast@plt+0x184>
    247c:	ldr	w0, [x0, #16]
    2480:	tbz	w0, #31, 249c <PySequence_Fast@plt+0x26c>
    2484:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2488:	ldr	x0, [x0, #4056]
    248c:	ldr	x1, [x0]
    2490:	add	x1, x1, #0x1
    2494:	str	x1, [x0]
    2498:	ret
    249c:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    24a0:	ldr	x0, [x0, #4016]
    24a4:	b	248c <PySequence_Fast@plt+0x25c>
    24a8:	ldr	x1, [x0]
    24ac:	sub	x1, x1, #0x1
    24b0:	str	x1, [x0]
    24b4:	cbnz	x1, 24bc <PySequence_Fast@plt+0x28c>
    24b8:	b	1f40 <_Py_Dealloc@plt>
    24bc:	ret
    24c0:	cbz	x0, 24c8 <PySequence_Fast@plt+0x298>
    24c4:	b	24a8 <PySequence_Fast@plt+0x278>
    24c8:	ret
    24cc:	stp	x29, x30, [sp, #-32]!
    24d0:	mov	x29, sp
    24d4:	str	x19, [sp, #16]
    24d8:	mov	x19, x0
    24dc:	ldr	x0, [x0, #32]
    24e0:	cbz	x0, 24e8 <PySequence_Fast@plt+0x2b8>
    24e4:	bl	1f10 <PyMem_Free@plt>
    24e8:	ldr	x0, [x19, #16]
    24ec:	bl	24c0 <PySequence_Fast@plt+0x290>
    24f0:	mov	x0, x19
    24f4:	ldr	x19, [sp, #16]
    24f8:	ldp	x29, x30, [sp], #32
    24fc:	b	1fc0 <PyObject_Free@plt>
    2500:	stp	x29, x30, [sp, #-48]!
    2504:	mov	x1, #0x4010                	// #16400
    2508:	mov	x29, sp
    250c:	stp	x19, x20, [sp, #16]
    2510:	mov	x20, x0
    2514:	mov	x19, x0
    2518:	str	x21, [sp, #32]
    251c:	add	x21, x0, x1
    2520:	ldr	w0, [x19, #12]
    2524:	tbnz	w0, #31, 2544 <PySequence_Fast@plt+0x314>
    2528:	ldr	x0, [x19]
    252c:	cbz	x0, 2538 <PySequence_Fast@plt+0x308>
    2530:	str	xzr, [x19]
    2534:	bl	24a8 <PySequence_Fast@plt+0x278>
    2538:	add	x19, x19, #0x10
    253c:	cmp	x19, x21
    2540:	b.ne	2520 <PySequence_Fast@plt+0x2f0>  // b.any
    2544:	mov	w0, #0xffffffff            	// #-1
    2548:	ldr	x21, [sp, #32]
    254c:	str	w0, [x20, #12]
    2550:	ldp	x19, x20, [sp, #16]
    2554:	ldp	x29, x30, [sp], #48
    2558:	ret
    255c:	stp	x29, x30, [sp, #-112]!
    2560:	cmp	x2, #0x1
    2564:	mov	x29, sp
    2568:	stp	x19, x20, [sp, #16]
    256c:	mov	x19, x0
    2570:	mov	x20, x2
    2574:	stp	x21, x22, [sp, #32]
    2578:	mov	x21, x1
    257c:	stp	x23, x24, [sp, #48]
    2580:	stp	x25, x26, [sp, #64]
    2584:	b.hi	259c <PySequence_Fast@plt+0x36c>  // b.pmore
    2588:	cmp	x20, #0x0
    258c:	adrp	x2, 15000 <PyInit_select@@Base+0x11484>
    2590:	b.gt	25d8 <PySequence_Fast@plt+0x3a8>
    2594:	ldr	x1, [x2, #4048]
    2598:	b	25dc <PySequence_Fast@plt+0x3ac>
    259c:	adrp	x0, 4000 <PyInit_select@@Base+0x484>
    25a0:	mov	x1, x20
    25a4:	add	x0, x0, #0x158
    25a8:	mov	x3, #0x1                   	// #1
    25ac:	mov	x2, #0x0                   	// #0
    25b0:	bl	2050 <_PyArg_CheckPositional@plt>
    25b4:	cbnz	w0, 2588 <PySequence_Fast@plt+0x358>
    25b8:	mov	x20, #0x0                   	// #0
    25bc:	mov	x0, x20
    25c0:	ldp	x19, x20, [sp, #16]
    25c4:	ldp	x21, x22, [sp, #32]
    25c8:	ldp	x23, x24, [sp, #48]
    25cc:	ldp	x25, x26, [sp, #64]
    25d0:	ldp	x29, x30, [sp], #112
    25d4:	ret
    25d8:	ldr	x1, [x21]
    25dc:	mov	x20, #0xffffffffffffffff    	// #-1
    25e0:	ldr	x2, [x2, #4048]
    25e4:	str	x20, [sp, #80]
    25e8:	cmp	x1, x2
    25ec:	b.eq	26a4 <PySequence_Fast@plt+0x474>  // b.none
    25f0:	add	x0, sp, #0x50
    25f4:	mov	w2, #0x3                   	// #3
    25f8:	bl	1ef0 <_PyTime_FromMillisecondsObject@plt>
    25fc:	tbz	w0, #31, 2628 <PySequence_Fast@plt+0x3f8>
    2600:	adrp	x19, 15000 <PyInit_select@@Base+0x11484>
    2604:	ldr	x19, [x19, #4000]
    2608:	ldr	x0, [x19]
    260c:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    2610:	cbz	w0, 25b8 <PySequence_Fast@plt+0x388>
    2614:	ldr	x0, [x19]
    2618:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    261c:	add	x1, x1, #0xe99
    2620:	bl	1f70 <PyErr_SetString@plt>
    2624:	b	25b8 <PySequence_Fast@plt+0x388>
    2628:	ldr	x0, [sp, #80]
    262c:	mov	w1, #0x3                   	// #3
    2630:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    2634:	mov	x20, x0
    2638:	mov	x0, #0x80000000            	// #2147483648
    263c:	add	x0, x20, x0
    2640:	mov	x1, #0xffffffff            	// #4294967295
    2644:	cmp	x0, x1
    2648:	b.ls	2664 <PySequence_Fast@plt+0x434>  // b.plast
    264c:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2650:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    2654:	add	x1, x1, #0xebc
    2658:	ldr	x0, [x0, #4032]
    265c:	ldr	x0, [x0]
    2660:	b	2620 <PySequence_Fast@plt+0x3f0>
    2664:	ldr	x0, [sp, #80]
    2668:	tbnz	x0, #63, 269c <PySequence_Fast@plt+0x46c>
    266c:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    2670:	ldr	x1, [sp, #80]
    2674:	add	x24, x0, x1
    2678:	cmp	x20, #0x0
    267c:	csinv	x20, x20, xzr, ge  // ge = tcont
    2680:	ldr	w22, [x19, #40]
    2684:	cbz	w22, 26ac <PySequence_Fast@plt+0x47c>
    2688:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    268c:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    2690:	add	x1, x1, #0xed1
    2694:	ldr	x0, [x0, #3984]
    2698:	b	265c <PySequence_Fast@plt+0x42c>
    269c:	mov	x24, #0x0                   	// #0
    26a0:	b	2678 <PySequence_Fast@plt+0x448>
    26a4:	mov	x24, #0x0                   	// #0
    26a8:	b	2680 <PySequence_Fast@plt+0x450>
    26ac:	ldr	w0, [x19, #24]
    26b0:	cbnz	w0, 271c <PySequence_Fast@plt+0x4ec>
    26b4:	ldr	x0, [x19, #16]
    26b8:	ldr	x21, [x19, #32]
    26bc:	ldr	x1, [x0, #16]
    26c0:	str	w1, [x19, #28]
    26c4:	tbz	w1, #31, 26d4 <PySequence_Fast@plt+0x4a4>
    26c8:	str	x21, [x19, #32]
    26cc:	bl	1f50 <PyErr_NoMemory@plt>
    26d0:	b	25b8 <PySequence_Fast@plt+0x388>
    26d4:	sbfiz	x1, x1, #3, #32
    26d8:	mov	x0, x21
    26dc:	bl	1f90 <PyMem_Realloc@plt>
    26e0:	str	x0, [x19, #32]
    26e4:	cbz	x0, 26c8 <PySequence_Fast@plt+0x498>
    26e8:	add	x26, sp, #0x68
    26ec:	add	x25, sp, #0x60
    26f0:	add	x23, sp, #0x58
    26f4:	mov	x21, #0x0                   	// #0
    26f8:	str	xzr, [sp, #88]
    26fc:	ldr	x0, [x19, #16]
    2700:	mov	x3, x26
    2704:	mov	x2, x25
    2708:	mov	x1, x23
    270c:	bl	2110 <PyDict_Next@plt>
    2710:	cbnz	w0, 2794 <PySequence_Fast@plt+0x564>
    2714:	mov	w0, #0x1                   	// #1
    2718:	str	w0, [x19, #24]
    271c:	mov	w0, #0x1                   	// #1
    2720:	str	w0, [x19, #40]
    2724:	bl	2140 <PyEval_SaveThread@plt>
    2728:	mov	x25, x0
    272c:	bl	21d0 <__errno_location@plt>
    2730:	mov	x21, x0
    2734:	ldr	x0, [x19, #32]
    2738:	mov	w2, w20
    273c:	str	wzr, [x21]
    2740:	ldrsw	x1, [x19, #28]
    2744:	bl	1f80 <poll@plt>
    2748:	mov	w23, w0
    274c:	mov	x0, x25
    2750:	bl	1f00 <PyEval_RestoreThread@plt>
    2754:	ldr	w0, [x21]
    2758:	cmp	w0, #0x4
    275c:	b.ne	27c0 <PySequence_Fast@plt+0x590>  // b.any
    2760:	bl	21a0 <PyErr_CheckSignals@plt>
    2764:	mov	w21, w0
    2768:	cbnz	w0, 27e4 <PySequence_Fast@plt+0x5b4>
    276c:	ldr	x0, [sp, #80]
    2770:	tbnz	x0, #63, 2724 <PySequence_Fast@plt+0x4f4>
    2774:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    2778:	sub	x0, x24, x0
    277c:	str	x0, [sp, #80]
    2780:	tbnz	x0, #63, 27ec <PySequence_Fast@plt+0x5bc>
    2784:	mov	w1, #0x1                   	// #1
    2788:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    278c:	mov	x20, x0
    2790:	b	2724 <PySequence_Fast@plt+0x4f4>
    2794:	ldr	x0, [sp, #96]
    2798:	bl	20a0 <PyLong_AsLong@plt>
    279c:	ldr	x1, [x19, #32]
    27a0:	str	w0, [x1, x21]
    27a4:	ldr	x0, [sp, #104]
    27a8:	bl	20a0 <PyLong_AsLong@plt>
    27ac:	ldr	x1, [x19, #32]
    27b0:	add	x1, x1, x21
    27b4:	add	x21, x21, #0x8
    27b8:	strh	w0, [x1, #4]
    27bc:	b	26fc <PySequence_Fast@plt+0x4cc>
    27c0:	mov	w21, #0x0                   	// #0
    27c4:	str	wzr, [x19, #40]
    27c8:	tbz	w23, #31, 27f4 <PySequence_Fast@plt+0x5c4>
    27cc:	cbnz	w21, 25b8 <PySequence_Fast@plt+0x388>
    27d0:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    27d4:	ldr	x0, [x0, #4008]
    27d8:	ldr	x0, [x0]
    27dc:	bl	1f20 <PyErr_SetFromErrno@plt>
    27e0:	b	25b8 <PySequence_Fast@plt+0x388>
    27e4:	mov	w21, #0x1                   	// #1
    27e8:	b	27c4 <PySequence_Fast@plt+0x594>
    27ec:	mov	w23, #0x0                   	// #0
    27f0:	b	27c4 <PySequence_Fast@plt+0x594>
    27f4:	sxtw	x0, w23
    27f8:	bl	1ed0 <PyList_New@plt>
    27fc:	mov	x20, x0
    2800:	cbz	x0, 25b8 <PySequence_Fast@plt+0x388>
    2804:	mov	x24, #0x0                   	// #0
    2808:	cmp	w23, w24
    280c:	b.le	25bc <PySequence_Fast@plt+0x38c>
    2810:	ldr	x0, [x19, #32]
    2814:	b	281c <PySequence_Fast@plt+0x5ec>
    2818:	add	w22, w22, #0x1
    281c:	add	x1, x0, w22, sxtw #3
    2820:	sbfiz	x25, x22, #3, #32
    2824:	ldrsh	w1, [x1, #6]
    2828:	cbz	w1, 2818 <PySequence_Fast@plt+0x5e8>
    282c:	mov	x0, #0x2                   	// #2
    2830:	bl	2040 <PyTuple_New@plt>
    2834:	mov	x21, x0
    2838:	cbz	x0, 2854 <PySequence_Fast@plt+0x624>
    283c:	ldr	x0, [x19, #32]
    2840:	ldrsw	x0, [x0, x25]
    2844:	bl	1ff0 <PyLong_FromLong@plt>
    2848:	cbnz	x0, 2860 <PySequence_Fast@plt+0x630>
    284c:	mov	x0, x21
    2850:	bl	24a8 <PySequence_Fast@plt+0x278>
    2854:	mov	x0, x20
    2858:	bl	24a8 <PySequence_Fast@plt+0x278>
    285c:	b	25b8 <PySequence_Fast@plt+0x388>
    2860:	str	x0, [x21, #24]
    2864:	ldr	x0, [x19, #32]
    2868:	add	x0, x0, x25
    286c:	ldrh	w0, [x0, #6]
    2870:	bl	1ff0 <PyLong_FromLong@plt>
    2874:	cbz	x0, 284c <PySequence_Fast@plt+0x61c>
    2878:	str	x0, [x21, #32]
    287c:	add	w22, w22, #0x1
    2880:	ldr	x0, [x20, #24]
    2884:	str	x21, [x0, x24, lsl #3]
    2888:	add	x24, x24, #0x1
    288c:	b	2808 <PySequence_Fast@plt+0x5d8>
    2890:	stp	x29, x30, [sp, #-48]!
    2894:	mov	x29, sp
    2898:	stp	x19, x20, [sp, #16]
    289c:	mov	x20, x0
    28a0:	mov	x0, x1
    28a4:	add	x1, sp, #0x2c
    28a8:	bl	235c <PySequence_Fast@plt+0x12c>
    28ac:	cbnz	w0, 28c0 <PySequence_Fast@plt+0x690>
    28b0:	mov	x0, #0x0                   	// #0
    28b4:	ldp	x19, x20, [sp, #16]
    28b8:	ldp	x29, x30, [sp], #48
    28bc:	ret
    28c0:	ldrsw	x0, [sp, #44]
    28c4:	bl	1ff0 <PyLong_FromLong@plt>
    28c8:	mov	x19, x0
    28cc:	cbz	x0, 28b0 <PySequence_Fast@plt+0x680>
    28d0:	mov	x1, x0
    28d4:	ldr	x0, [x20, #16]
    28d8:	bl	2060 <PyDict_DelItem@plt>
    28dc:	cmn	w0, #0x1
    28e0:	mov	x0, x19
    28e4:	b.ne	28f0 <PySequence_Fast@plt+0x6c0>  // b.any
    28e8:	bl	24a8 <PySequence_Fast@plt+0x278>
    28ec:	b	28b0 <PySequence_Fast@plt+0x680>
    28f0:	bl	24a8 <PySequence_Fast@plt+0x278>
    28f4:	str	wzr, [x20, #24]
    28f8:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    28fc:	ldr	x0, [x0, #4048]
    2900:	ldr	x1, [x0]
    2904:	add	x1, x1, #0x1
    2908:	str	x1, [x0]
    290c:	b	28b4 <PySequence_Fast@plt+0x684>
    2910:	stp	x29, x30, [sp, #-64]!
    2914:	cmp	x2, #0x2
    2918:	mov	x29, sp
    291c:	stp	x19, x20, [sp, #16]
    2920:	mov	x19, x1
    2924:	stp	x21, x22, [sp, #32]
    2928:	mov	x21, x0
    292c:	b.ne	2958 <PySequence_Fast@plt+0x728>  // b.any
    2930:	ldr	x0, [x19]
    2934:	add	x1, sp, #0x3c
    2938:	bl	235c <PySequence_Fast@plt+0x12c>
    293c:	cbnz	w0, 2978 <PySequence_Fast@plt+0x748>
    2940:	mov	x19, #0x0                   	// #0
    2944:	mov	x0, x19
    2948:	ldp	x19, x20, [sp, #16]
    294c:	ldp	x21, x22, [sp, #32]
    2950:	ldp	x29, x30, [sp], #64
    2954:	ret
    2958:	mov	x1, x2
    295c:	mov	x3, #0x2                   	// #2
    2960:	adrp	x0, 3000 <PySequence_Fast@plt+0xdd0>
    2964:	mov	x2, x3
    2968:	add	x0, x0, #0xeee
    296c:	bl	2050 <_PyArg_CheckPositional@plt>
    2970:	cbnz	w0, 2930 <PySequence_Fast@plt+0x700>
    2974:	b	2940 <PySequence_Fast@plt+0x710>
    2978:	ldr	x0, [x19, #8]
    297c:	add	x1, sp, #0x3a
    2980:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    2984:	cbz	w0, 2940 <PySequence_Fast@plt+0x710>
    2988:	ldrsw	x0, [sp, #60]
    298c:	ldrh	w22, [sp, #58]
    2990:	bl	1ff0 <PyLong_FromLong@plt>
    2994:	mov	x20, x0
    2998:	cbz	x0, 2940 <PySequence_Fast@plt+0x710>
    299c:	mov	x1, x0
    29a0:	ldr	x0, [x21, #16]
    29a4:	bl	2220 <PyDict_GetItemWithError@plt>
    29a8:	mov	x19, x0
    29ac:	cbnz	x0, 29e0 <PySequence_Fast@plt+0x7b0>
    29b0:	bl	2080 <PyErr_Occurred@plt>
    29b4:	cbnz	x0, 29d4 <PySequence_Fast@plt+0x7a4>
    29b8:	bl	21d0 <__errno_location@plt>
    29bc:	mov	w1, #0x2                   	// #2
    29c0:	str	w1, [x0]
    29c4:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    29c8:	ldr	x0, [x0, #4008]
    29cc:	ldr	x0, [x0]
    29d0:	bl	1f20 <PyErr_SetFromErrno@plt>
    29d4:	mov	x0, x20
    29d8:	bl	24a8 <PySequence_Fast@plt+0x278>
    29dc:	b	2944 <PySequence_Fast@plt+0x714>
    29e0:	and	x0, x22, #0xffff
    29e4:	bl	1ff0 <PyLong_FromLong@plt>
    29e8:	mov	x19, x0
    29ec:	cbz	x0, 29d4 <PySequence_Fast@plt+0x7a4>
    29f0:	mov	x2, x0
    29f4:	mov	x1, x20
    29f8:	ldr	x0, [x21, #16]
    29fc:	bl	2160 <PyDict_SetItem@plt>
    2a00:	mov	w22, w0
    2a04:	mov	x0, x20
    2a08:	bl	24a8 <PySequence_Fast@plt+0x278>
    2a0c:	mov	x0, x19
    2a10:	bl	24a8 <PySequence_Fast@plt+0x278>
    2a14:	tbnz	w22, #31, 2940 <PySequence_Fast@plt+0x710>
    2a18:	adrp	x19, 15000 <PyInit_select@@Base+0x11484>
    2a1c:	str	wzr, [x21, #24]
    2a20:	ldr	x19, [x19, #4048]
    2a24:	ldr	x0, [x19]
    2a28:	add	x0, x0, #0x1
    2a2c:	str	x0, [x19]
    2a30:	b	2944 <PySequence_Fast@plt+0x714>
    2a34:	stp	x29, x30, [sp, #-64]!
    2a38:	mov	x29, sp
    2a3c:	stp	x19, x20, [sp, #16]
    2a40:	mov	x20, x1
    2a44:	mov	x19, x2
    2a48:	stp	x21, x22, [sp, #32]
    2a4c:	mov	x21, x0
    2a50:	mov	w0, #0x7                   	// #7
    2a54:	strh	w0, [sp, #58]
    2a58:	sub	x0, x2, #0x1
    2a5c:	cmp	x0, #0x1
    2a60:	b.hi	2a8c <PySequence_Fast@plt+0x85c>  // b.pmore
    2a64:	ldr	x0, [x20]
    2a68:	add	x1, sp, #0x3c
    2a6c:	bl	235c <PySequence_Fast@plt+0x12c>
    2a70:	cbnz	w0, 2aac <PySequence_Fast@plt+0x87c>
    2a74:	mov	x19, #0x0                   	// #0
    2a78:	mov	x0, x19
    2a7c:	ldp	x19, x20, [sp, #16]
    2a80:	ldp	x21, x22, [sp, #32]
    2a84:	ldp	x29, x30, [sp], #64
    2a88:	ret
    2a8c:	adrp	x0, 4000 <PyInit_select@@Base+0x484>
    2a90:	mov	x1, x19
    2a94:	add	x0, x0, #0xe7
    2a98:	mov	x3, #0x2                   	// #2
    2a9c:	mov	x2, #0x1                   	// #1
    2aa0:	bl	2050 <_PyArg_CheckPositional@plt>
    2aa4:	cbnz	w0, 2a64 <PySequence_Fast@plt+0x834>
    2aa8:	b	2a74 <PySequence_Fast@plt+0x844>
    2aac:	cmp	x19, #0x1
    2ab0:	b.gt	2ae4 <PySequence_Fast@plt+0x8b4>
    2ab4:	ldrsw	x0, [sp, #60]
    2ab8:	ldrh	w19, [sp, #58]
    2abc:	bl	1ff0 <PyLong_FromLong@plt>
    2ac0:	mov	x20, x0
    2ac4:	cbz	x0, 2a74 <PySequence_Fast@plt+0x844>
    2ac8:	and	x0, x19, #0xffff
    2acc:	bl	1ff0 <PyLong_FromLong@plt>
    2ad0:	mov	x19, x0
    2ad4:	cbnz	x0, 2af8 <PySequence_Fast@plt+0x8c8>
    2ad8:	mov	x0, x20
    2adc:	bl	24a8 <PySequence_Fast@plt+0x278>
    2ae0:	b	2a78 <PySequence_Fast@plt+0x848>
    2ae4:	ldr	x0, [x20, #8]
    2ae8:	add	x1, sp, #0x3a
    2aec:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    2af0:	cbnz	w0, 2ab4 <PySequence_Fast@plt+0x884>
    2af4:	b	2a74 <PySequence_Fast@plt+0x844>
    2af8:	mov	x2, x0
    2afc:	mov	x1, x20
    2b00:	ldr	x0, [x21, #16]
    2b04:	bl	2160 <PyDict_SetItem@plt>
    2b08:	mov	w22, w0
    2b0c:	mov	x0, x20
    2b10:	bl	24a8 <PySequence_Fast@plt+0x278>
    2b14:	mov	x0, x19
    2b18:	bl	24a8 <PySequence_Fast@plt+0x278>
    2b1c:	tbnz	w22, #31, 2a74 <PySequence_Fast@plt+0x844>
    2b20:	adrp	x19, 15000 <PyInit_select@@Base+0x11484>
    2b24:	str	wzr, [x21, #24]
    2b28:	ldr	x19, [x19, #4048]
    2b2c:	ldr	x0, [x19]
    2b30:	add	x0, x0, #0x1
    2b34:	str	x0, [x19]
    2b38:	b	2a78 <PySequence_Fast@plt+0x848>
    2b3c:	stp	x29, x30, [sp, #-32]!
    2b40:	adrp	x0, 16000 <PyInit_select@@Base+0x12484>
    2b44:	add	x0, x0, #0x360
    2b48:	mov	x29, sp
    2b4c:	str	x19, [sp, #16]
    2b50:	bl	2130 <_PyObject_New@plt>
    2b54:	mov	x19, x0
    2b58:	cbz	x0, 2b80 <PySequence_Fast@plt+0x950>
    2b5c:	str	wzr, [x0, #24]
    2b60:	str	xzr, [x0, #32]
    2b64:	str	wzr, [x0, #40]
    2b68:	bl	2100 <PyDict_New@plt>
    2b6c:	str	x0, [x19, #16]
    2b70:	cbnz	x0, 2b80 <PySequence_Fast@plt+0x950>
    2b74:	mov	x0, x19
    2b78:	mov	x19, #0x0                   	// #0
    2b7c:	bl	24a8 <PySequence_Fast@plt+0x278>
    2b80:	mov	x0, x19
    2b84:	ldr	x19, [sp, #16]
    2b88:	ldp	x29, x30, [sp], #32
    2b8c:	ret
    2b90:	stp	x29, x30, [sp, #-96]!
    2b94:	mov	x29, sp
    2b98:	stp	x19, x20, [sp, #16]
    2b9c:	mov	x19, x2
    2ba0:	stp	x21, x22, [sp, #32]
    2ba4:	stp	x23, x24, [sp, #48]
    2ba8:	mov	x24, x1
    2bac:	mov	x1, #0x0                   	// #0
    2bb0:	stp	x25, x26, [sp, #64]
    2bb4:	str	xzr, [x2]
    2bb8:	str	x27, [sp, #80]
    2bbc:	str	xzr, [x24, x1, lsl #3]
    2bc0:	add	x1, x1, #0x1
    2bc4:	cmp	x1, #0x10
    2bc8:	b.ne	2bbc <PySequence_Fast@plt+0x98c>  // b.any
    2bcc:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    2bd0:	add	x1, x1, #0xef5
    2bd4:	bl	2230 <PySequence_Fast@plt>
    2bd8:	mov	x21, x0
    2bdc:	cbz	x0, 2c8c <PySequence_Fast@plt+0xa5c>
    2be0:	mov	w20, #0xffffffff            	// #-1
    2be4:	add	x25, x0, #0x18
    2be8:	mov	w27, w20
    2bec:	mov	x23, #0x0                   	// #0
    2bf0:	mov	x26, #0x1                   	// #1
    2bf4:	ldr	x0, [x21, #16]
    2bf8:	cmp	x0, x23
    2bfc:	b.gt	2c28 <PySequence_Fast@plt+0x9f8>
    2c00:	mov	x0, x21
    2c04:	bl	24a8 <PySequence_Fast@plt+0x278>
    2c08:	add	w0, w20, #0x1
    2c0c:	ldp	x19, x20, [sp, #16]
    2c10:	ldp	x21, x22, [sp, #32]
    2c14:	ldp	x23, x24, [sp, #48]
    2c18:	ldp	x25, x26, [sp, #64]
    2c1c:	ldr	x27, [sp, #80]
    2c20:	ldp	x29, x30, [sp], #96
    2c24:	ret
    2c28:	ldr	x0, [x21, #8]
    2c2c:	ldr	x0, [x0, #168]
    2c30:	tbz	w0, #25, 2c94 <PySequence_Fast@plt+0xa64>
    2c34:	ldr	x0, [x21, #24]
    2c38:	ldr	x22, [x0, x23, lsl #3]
    2c3c:	cbz	x22, 2c7c <PySequence_Fast@plt+0xa4c>
    2c40:	ldr	x0, [x22]
    2c44:	add	x0, x0, #0x1
    2c48:	str	x0, [x22]
    2c4c:	mov	x0, x22
    2c50:	bl	2180 <PyObject_AsFileDescriptor@plt>
    2c54:	cmn	w0, #0x1
    2c58:	b.eq	2c7c <PySequence_Fast@plt+0xa4c>  // b.none
    2c5c:	cmp	w0, #0x3ff
    2c60:	b.ls	2c9c <PySequence_Fast@plt+0xa6c>  // b.plast
    2c64:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    2c68:	add	x1, x1, #0xf15
    2c6c:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2c70:	ldr	x0, [x0, #3992]
    2c74:	ldr	x0, [x0]
    2c78:	bl	1f70 <PyErr_SetString@plt>
    2c7c:	mov	x0, x22
    2c80:	bl	24c0 <PySequence_Fast@plt+0x290>
    2c84:	mov	x0, x21
    2c88:	bl	24a8 <PySequence_Fast@plt+0x278>
    2c8c:	mov	w0, #0xffffffff            	// #-1
    2c90:	b	2c0c <PySequence_Fast@plt+0x9dc>
    2c94:	ldr	x22, [x25, x23, lsl #3]
    2c98:	b	2c3c <PySequence_Fast@plt+0xa0c>
    2c9c:	asr	w1, w0, #6
    2ca0:	lsl	x2, x26, x0
    2ca4:	cmp	w20, w0
    2ca8:	sbfiz	x1, x1, #3, #32
    2cac:	csel	w20, w20, w0, ge  // ge = tcont
    2cb0:	cmp	x23, #0x400
    2cb4:	ldr	x3, [x24, x1]
    2cb8:	orr	x2, x3, x2
    2cbc:	str	x2, [x24, x1]
    2cc0:	b.ne	2cd0 <PySequence_Fast@plt+0xaa0>  // b.any
    2cc4:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    2cc8:	add	x1, x1, #0xf3d
    2ccc:	b	2c6c <PySequence_Fast@plt+0xa3c>
    2cd0:	add	x23, x23, #0x1
    2cd4:	str	x22, [x19]
    2cd8:	stp	w0, wzr, [x19, #8]
    2cdc:	add	x19, x19, #0x10
    2ce0:	str	w27, [x19, #12]
    2ce4:	b	2bf4 <PySequence_Fast@plt+0x9c4>
    2ce8:	stp	x29, x30, [sp, #-80]!
    2cec:	mov	w3, #0x0                   	// #0
    2cf0:	mov	w4, #0x40                  	// #64
    2cf4:	mov	x29, sp
    2cf8:	stp	x21, x22, [sp, #32]
    2cfc:	mov	x21, x1
    2d00:	mov	x5, #0x1                   	// #1
    2d04:	stp	x19, x20, [sp, #16]
    2d08:	mov	x20, x0
    2d0c:	mov	w0, #0x0                   	// #0
    2d10:	stp	x23, x24, [sp, #48]
    2d14:	str	x25, [sp, #64]
    2d18:	add	x1, x21, w3, sxtw #4
    2d1c:	ldr	w2, [x1, #12]
    2d20:	tbz	w2, #31, 2dbc <PySequence_Fast@plt+0xb8c>
    2d24:	sxtw	x0, w0
    2d28:	bl	1ed0 <PyList_New@plt>
    2d2c:	mov	x19, x0
    2d30:	cbz	x0, 2da0 <PySequence_Fast@plt+0xb70>
    2d34:	mov	w22, #0x0                   	// #0
    2d38:	mov	w23, #0x0                   	// #0
    2d3c:	mov	w24, #0x40                  	// #64
    2d40:	mov	x25, #0x1                   	// #1
    2d44:	add	x0, x21, w22, sxtw #4
    2d48:	sbfiz	x1, x22, #4, #32
    2d4c:	ldr	w2, [x0, #12]
    2d50:	tbnz	w2, #31, 2da0 <PySequence_Fast@plt+0xb70>
    2d54:	ldr	w0, [x0, #8]
    2d58:	negs	w2, w0
    2d5c:	and	w2, w2, #0x3f
    2d60:	sdiv	w3, w0, w24
    2d64:	and	w0, w0, #0x3f
    2d68:	csneg	w2, w0, w2, mi  // mi = first
    2d6c:	lsl	x2, x25, x2
    2d70:	ldr	x0, [x20, w3, sxtw #3]
    2d74:	tst	x2, x0
    2d78:	b.eq	2df0 <PySequence_Fast@plt+0xbc0>  // b.none
    2d7c:	ldr	x2, [x21, x1]
    2d80:	str	xzr, [x21, x1]
    2d84:	mov	x0, x19
    2d88:	sxtw	x1, w23
    2d8c:	bl	20c0 <PyList_SetItem@plt>
    2d90:	tbz	w0, #31, 2dec <PySequence_Fast@plt+0xbbc>
    2d94:	mov	x0, x19
    2d98:	mov	x19, #0x0                   	// #0
    2d9c:	bl	24a8 <PySequence_Fast@plt+0x278>
    2da0:	mov	x0, x19
    2da4:	ldp	x19, x20, [sp, #16]
    2da8:	ldp	x21, x22, [sp, #32]
    2dac:	ldp	x23, x24, [sp, #48]
    2db0:	ldr	x25, [sp, #64]
    2db4:	ldp	x29, x30, [sp], #80
    2db8:	ret
    2dbc:	ldr	w1, [x1, #8]
    2dc0:	add	w3, w3, #0x1
    2dc4:	negs	w2, w1
    2dc8:	and	w2, w2, #0x3f
    2dcc:	sdiv	w6, w1, w4
    2dd0:	and	w1, w1, #0x3f
    2dd4:	csneg	w2, w1, w2, mi  // mi = first
    2dd8:	lsl	x2, x5, x2
    2ddc:	ldr	x1, [x20, w6, sxtw #3]
    2de0:	tst	x2, x1
    2de4:	cinc	w0, w0, ne  // ne = any
    2de8:	b	2d18 <PySequence_Fast@plt+0xae8>
    2dec:	add	w23, w23, #0x1
    2df0:	add	w22, w22, #0x1
    2df4:	b	2d44 <PySequence_Fast@plt+0xb14>
    2df8:	stp	x29, x30, [sp, #-32]!
    2dfc:	mov	x29, sp
    2e00:	ldr	x2, [x0, #304]
    2e04:	stp	x19, x20, [sp, #16]
    2e08:	mov	w20, w1
    2e0c:	mov	x1, #0x0                   	// #0
    2e10:	blr	x2
    2e14:	mov	x19, x0
    2e18:	cbz	x0, 2e64 <PySequence_Fast@plt+0xc34>
    2e1c:	cmn	w20, #0x1
    2e20:	b.ne	2e74 <PySequence_Fast@plt+0xc44>  // b.any
    2e24:	bl	2140 <PyEval_SaveThread@plt>
    2e28:	mov	x20, x0
    2e2c:	mov	w0, #0x80000               	// #524288
    2e30:	bl	20d0 <epoll_create1@plt>
    2e34:	str	w0, [x19, #16]
    2e38:	mov	x0, x20
    2e3c:	bl	1f00 <PyEval_RestoreThread@plt>
    2e40:	ldr	w0, [x19, #16]
    2e44:	tbz	w0, #31, 2e64 <PySequence_Fast@plt+0xc34>
    2e48:	mov	x0, x19
    2e4c:	bl	24a8 <PySequence_Fast@plt+0x278>
    2e50:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2e54:	mov	x19, #0x0                   	// #0
    2e58:	ldr	x0, [x0, #4008]
    2e5c:	ldr	x0, [x0]
    2e60:	bl	1f20 <PyErr_SetFromErrno@plt>
    2e64:	mov	x0, x19
    2e68:	ldp	x19, x20, [sp, #16]
    2e6c:	ldp	x29, x30, [sp], #32
    2e70:	ret
    2e74:	str	w20, [x0, #16]
    2e78:	b	2e40 <PySequence_Fast@plt+0xc10>
    2e7c:	sub	sp, sp, #0x60
    2e80:	stp	x29, x30, [sp, #16]
    2e84:	add	x29, sp, #0x10
    2e88:	stp	x19, x20, [sp, #32]
    2e8c:	mov	x19, x1
    2e90:	stp	x21, x22, [sp, #48]
    2e94:	mov	x21, x0
    2e98:	ldr	x1, [x1, #16]
    2e9c:	str	x23, [sp, #64]
    2ea0:	cbz	x2, 2f0c <PySequence_Fast@plt+0xcdc>
    2ea4:	ldr	x22, [x2, #16]
    2ea8:	add	x22, x22, x1
    2eac:	add	x19, x19, #0x18
    2eb0:	cbnz	x2, 2ebc <PySequence_Fast@plt+0xc8c>
    2eb4:	cmp	x1, #0x2
    2eb8:	b.ls	2f14 <PySequence_Fast@plt+0xce4>  // b.plast
    2ebc:	add	x0, sp, #0x50
    2ec0:	str	x0, [sp]
    2ec4:	adrp	x4, 16000 <PyInit_select@@Base+0x12484>
    2ec8:	add	x4, x4, #0x360
    2ecc:	mov	x0, x19
    2ed0:	add	x4, x4, #0x1a0
    2ed4:	mov	w7, #0x0                   	// #0
    2ed8:	mov	w6, #0x2                   	// #2
    2edc:	mov	w5, #0x0                   	// #0
    2ee0:	mov	x3, #0x0                   	// #0
    2ee4:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2ee8:	mov	x19, x0
    2eec:	cbnz	x0, 2f14 <PySequence_Fast@plt+0xce4>
    2ef0:	mov	x0, #0x0                   	// #0
    2ef4:	ldp	x29, x30, [sp, #16]
    2ef8:	ldp	x19, x20, [sp, #32]
    2efc:	ldp	x21, x22, [sp, #48]
    2f00:	ldr	x23, [sp, #64]
    2f04:	add	sp, sp, #0x60
    2f08:	ret
    2f0c:	mov	x22, #0x0                   	// #0
    2f10:	b	2ea8 <PySequence_Fast@plt+0xc78>
    2f14:	cbz	x22, 2f90 <PySequence_Fast@plt+0xd60>
    2f18:	ldr	x0, [x19]
    2f1c:	adrp	x23, 15000 <PyInit_select@@Base+0x11484>
    2f20:	cbz	x0, 2fa0 <PySequence_Fast@plt+0xd70>
    2f24:	ldr	x1, [x23, #3968]
    2f28:	ldr	x0, [x0, #8]
    2f2c:	cmp	x0, x1
    2f30:	b.ne	2f50 <PySequence_Fast@plt+0xd20>  // b.any
    2f34:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    2f38:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    2f3c:	add	x1, x1, #0xf63
    2f40:	ldr	x0, [x0, #4000]
    2f44:	ldr	x0, [x0]
    2f48:	bl	1f70 <PyErr_SetString@plt>
    2f4c:	b	2ef0 <PySequence_Fast@plt+0xcc0>
    2f50:	bl	21b0 <PyType_IsSubtype@plt>
    2f54:	cbnz	w0, 2f34 <PySequence_Fast@plt+0xd04>
    2f58:	ldr	x0, [x19]
    2f5c:	bl	21e0 <_PyLong_AsInt@plt>
    2f60:	mov	w20, w0
    2f64:	cmn	w0, #0x1
    2f68:	b.ne	2f80 <PySequence_Fast@plt+0xd50>  // b.any
    2f6c:	bl	2080 <PyErr_Occurred@plt>
    2f70:	cbnz	x0, 2ef0 <PySequence_Fast@plt+0xcc0>
    2f74:	cmp	x22, #0x1
    2f78:	b.ne	2fa4 <PySequence_Fast@plt+0xd74>  // b.any
    2f7c:	b	2f90 <PySequence_Fast@plt+0xd60>
    2f80:	cmp	x22, #0x1
    2f84:	b.ne	2fa4 <PySequence_Fast@plt+0xd74>  // b.any
    2f88:	cmp	w0, #0x0
    2f8c:	b.le	2ffc <PySequence_Fast@plt+0xdcc>
    2f90:	mov	x0, x21
    2f94:	mov	w1, #0xffffffff            	// #-1
    2f98:	bl	2df8 <PySequence_Fast@plt+0xbc8>
    2f9c:	b	2ef4 <PySequence_Fast@plt+0xcc4>
    2fa0:	mov	w20, #0xffffffff            	// #-1
    2fa4:	ldr	x0, [x19, #8]
    2fa8:	ldr	x1, [x23, #3968]
    2fac:	ldr	x0, [x0, #8]
    2fb0:	cmp	x0, x1
    2fb4:	b.eq	2f34 <PySequence_Fast@plt+0xd04>  // b.none
    2fb8:	bl	21b0 <PyType_IsSubtype@plt>
    2fbc:	cbnz	w0, 2f34 <PySequence_Fast@plt+0xd04>
    2fc0:	ldr	x0, [x19, #8]
    2fc4:	bl	21e0 <_PyLong_AsInt@plt>
    2fc8:	cmn	w0, #0x1
    2fcc:	b.ne	2fec <PySequence_Fast@plt+0xdbc>  // b.any
    2fd0:	bl	2080 <PyErr_Occurred@plt>
    2fd4:	cbnz	x0, 2ef0 <PySequence_Fast@plt+0xcc0>
    2fd8:	cmn	w20, #0x1
    2fdc:	b.eq	3018 <PySequence_Fast@plt+0xde8>  // b.none
    2fe0:	cmp	w20, #0x0
    2fe4:	b.gt	3018 <PySequence_Fast@plt+0xde8>
    2fe8:	b	2ffc <PySequence_Fast@plt+0xdcc>
    2fec:	cmn	w20, #0x1
    2ff0:	b.eq	3010 <PySequence_Fast@plt+0xde0>  // b.none
    2ff4:	cmp	w20, #0x0
    2ff8:	b.gt	3010 <PySequence_Fast@plt+0xde0>
    2ffc:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    3000:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    3004:	add	x1, x1, #0xf88
    3008:	ldr	x0, [x0, #3992]
    300c:	b	2f44 <PySequence_Fast@plt+0xd14>
    3010:	tst	w0, #0xfff7ffff
    3014:	b.eq	2f90 <PySequence_Fast@plt+0xd60>  // b.none
    3018:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    301c:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    3020:	add	x1, x1, #0xf9a
    3024:	ldr	x0, [x0, #4008]
    3028:	b	2f44 <PySequence_Fast@plt+0xd14>
    302c:	stp	x29, x30, [sp, #-32]!
    3030:	mov	x29, sp
    3034:	stp	x19, x20, [sp, #16]
    3038:	mov	x20, x0
    303c:	mov	x19, x1
    3040:	ldr	x0, [x1, #8]
    3044:	adrp	x1, 15000 <PyInit_select@@Base+0x11484>
    3048:	ldr	x1, [x1, #3968]
    304c:	cmp	x0, x1
    3050:	b.ne	307c <PySequence_Fast@plt+0xe4c>  // b.any
    3054:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    3058:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    305c:	add	x1, x1, #0xf63
    3060:	ldr	x0, [x0, #4000]
    3064:	ldr	x0, [x0]
    3068:	bl	1f70 <PyErr_SetString@plt>
    306c:	mov	x0, #0x0                   	// #0
    3070:	ldp	x19, x20, [sp, #16]
    3074:	ldp	x29, x30, [sp], #32
    3078:	ret
    307c:	bl	21b0 <PyType_IsSubtype@plt>
    3080:	cbnz	w0, 3054 <PySequence_Fast@plt+0xe24>
    3084:	mov	x0, x19
    3088:	bl	21e0 <_PyLong_AsInt@plt>
    308c:	mov	w19, w0
    3090:	cmn	w0, #0x1
    3094:	b.eq	30ac <PySequence_Fast@plt+0xe7c>  // b.none
    3098:	mov	w1, w19
    309c:	mov	x0, x20
    30a0:	ldp	x19, x20, [sp, #16]
    30a4:	ldp	x29, x30, [sp], #32
    30a8:	b	2df8 <PySequence_Fast@plt+0xbc8>
    30ac:	bl	2080 <PyErr_Occurred@plt>
    30b0:	cbz	x0, 3098 <PySequence_Fast@plt+0xe68>
    30b4:	b	306c <PySequence_Fast@plt+0xe3c>
    30b8:	stp	x29, x30, [sp, #-32]!
    30bc:	cmp	x2, #0x3
    30c0:	mov	x29, sp
    30c4:	str	x19, [sp, #16]
    30c8:	mov	x19, x0
    30cc:	b.hi	30f0 <PySequence_Fast@plt+0xec0>  // b.pmore
    30d0:	mov	x0, x19
    30d4:	adrp	x1, 16000 <PyInit_select@@Base+0x12484>
    30d8:	ldr	x19, [sp, #16]
    30dc:	add	x1, x1, #0x360
    30e0:	ldp	x29, x30, [sp], #32
    30e4:	add	x1, x1, #0x1e0
    30e8:	mov	x2, #0x0                   	// #0
    30ec:	b	20e0 <_PyObject_CallMethodId@plt>
    30f0:	mov	x1, x2
    30f4:	adrp	x0, 3000 <PySequence_Fast@plt+0xdd0>
    30f8:	mov	x3, #0x3                   	// #3
    30fc:	add	x0, x0, #0xfa8
    3100:	mov	x2, #0x0                   	// #0
    3104:	bl	2050 <_PyArg_CheckPositional@plt>
    3108:	cbnz	w0, 30d0 <PySequence_Fast@plt+0xea0>
    310c:	mov	x0, #0x0                   	// #0
    3110:	ldr	x19, [sp, #16]
    3114:	ldp	x29, x30, [sp], #32
    3118:	ret
    311c:	sub	sp, sp, #0x80
    3120:	stp	x29, x30, [sp, #16]
    3124:	add	x29, sp, #0x10
    3128:	stp	x19, x20, [sp, #32]
    312c:	mov	x19, x1
    3130:	mov	x1, x2
    3134:	stp	x21, x22, [sp, #48]
    3138:	stp	x23, x24, [sp, #64]
    313c:	mov	x23, x0
    3140:	stp	x25, x26, [sp, #80]
    3144:	cbz	x3, 319c <PySequence_Fast@plt+0xf6c>
    3148:	ldr	x20, [x3, #16]
    314c:	add	x20, x20, x1
    3150:	cbnz	x3, 3160 <PySequence_Fast@plt+0xf30>
    3154:	cmp	x19, #0x0
    3158:	ccmp	x1, #0x2, #0x2, ne  // ne = any
    315c:	b.ls	31a4 <PySequence_Fast@plt+0xf74>  // b.plast
    3160:	add	x0, sp, #0x70
    3164:	str	x0, [sp]
    3168:	adrp	x4, 16000 <PyInit_select@@Base+0x12484>
    316c:	add	x4, x4, #0x360
    3170:	mov	x0, x19
    3174:	add	x4, x4, #0x1f8
    3178:	mov	w7, #0x0                   	// #0
    317c:	mov	w6, #0x2                   	// #2
    3180:	mov	w5, #0x0                   	// #0
    3184:	mov	x2, #0x0                   	// #0
    3188:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    318c:	mov	x19, x0
    3190:	cbnz	x0, 31a4 <PySequence_Fast@plt+0xf74>
    3194:	mov	x19, #0x0                   	// #0
    3198:	b	3234 <PySequence_Fast@plt+0x1004>
    319c:	mov	x20, #0x0                   	// #0
    31a0:	b	314c <PySequence_Fast@plt+0xf1c>
    31a4:	cbz	x20, 3254 <PySequence_Fast@plt+0x1024>
    31a8:	ldr	x21, [x19]
    31ac:	cbz	x21, 31c0 <PySequence_Fast@plt+0xf90>
    31b0:	cmp	x20, #0x1
    31b4:	b.ne	31c8 <PySequence_Fast@plt+0xf98>  // b.any
    31b8:	mov	w20, #0xffffffff            	// #-1
    31bc:	b	321c <PySequence_Fast@plt+0xfec>
    31c0:	adrp	x21, 15000 <PyInit_select@@Base+0x11484>
    31c4:	ldr	x21, [x21, #4048]
    31c8:	adrp	x1, 15000 <PyInit_select@@Base+0x11484>
    31cc:	ldr	x0, [x19, #8]
    31d0:	ldr	x1, [x1, #3968]
    31d4:	ldr	x0, [x0, #8]
    31d8:	cmp	x0, x1
    31dc:	b.ne	31f8 <PySequence_Fast@plt+0xfc8>  // b.any
    31e0:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    31e4:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    31e8:	add	x1, x1, #0xf63
    31ec:	ldr	x0, [x0, #4000]
    31f0:	ldr	x0, [x0]
    31f4:	b	32a8 <PySequence_Fast@plt+0x1078>
    31f8:	bl	21b0 <PyType_IsSubtype@plt>
    31fc:	cbnz	w0, 31e0 <PySequence_Fast@plt+0xfb0>
    3200:	ldr	x0, [x19, #8]
    3204:	bl	21e0 <_PyLong_AsInt@plt>
    3208:	mov	w20, w0
    320c:	cmn	w0, #0x1
    3210:	b.ne	321c <PySequence_Fast@plt+0xfec>  // b.any
    3214:	bl	2080 <PyErr_Occurred@plt>
    3218:	cbnz	x0, 3194 <PySequence_Fast@plt+0xf64>
    321c:	ldr	w0, [x23, #16]
    3220:	mov	x22, #0xffffffffffffffff    	// #-1
    3224:	str	x22, [sp, #104]
    3228:	tbz	w0, #31, 3264 <PySequence_Fast@plt+0x1034>
    322c:	bl	2314 <PySequence_Fast@plt+0xe4>
    3230:	mov	x19, x0
    3234:	mov	x0, x19
    3238:	ldp	x29, x30, [sp, #16]
    323c:	ldp	x19, x20, [sp, #32]
    3240:	ldp	x21, x22, [sp, #48]
    3244:	ldp	x23, x24, [sp, #64]
    3248:	ldp	x25, x26, [sp, #80]
    324c:	add	sp, sp, #0x80
    3250:	ret
    3254:	adrp	x21, 15000 <PyInit_select@@Base+0x11484>
    3258:	mov	w20, #0xffffffff            	// #-1
    325c:	ldr	x21, [x21, #4048]
    3260:	b	321c <PySequence_Fast@plt+0xfec>
    3264:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    3268:	ldr	x0, [x0, #4048]
    326c:	cmp	x21, x0
    3270:	b.eq	3330 <PySequence_Fast@plt+0x1100>  // b.none
    3274:	mov	x1, x21
    3278:	add	x0, sp, #0x68
    327c:	mov	w2, #0x3                   	// #3
    3280:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    3284:	tbz	w0, #31, 32b0 <PySequence_Fast@plt+0x1080>
    3288:	adrp	x19, 15000 <PyInit_select@@Base+0x11484>
    328c:	ldr	x19, [x19, #4000]
    3290:	ldr	x0, [x19]
    3294:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    3298:	cbz	w0, 3194 <PySequence_Fast@plt+0xf64>
    329c:	ldr	x0, [x19]
    32a0:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    32a4:	add	x1, x1, #0xe99
    32a8:	bl	1f70 <PyErr_SetString@plt>
    32ac:	b	3194 <PySequence_Fast@plt+0xf64>
    32b0:	ldr	x0, [sp, #104]
    32b4:	mov	w1, #0x1                   	// #1
    32b8:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    32bc:	mov	x1, #0x80000000            	// #2147483648
    32c0:	add	x1, x0, x1
    32c4:	mov	x2, #0xffffffff            	// #4294967295
    32c8:	cmp	x1, x2
    32cc:	b.ls	32e4 <PySequence_Fast@plt+0x10b4>  // b.plast
    32d0:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    32d4:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    32d8:	add	x1, x1, #0xebc
    32dc:	ldr	x0, [x0, #4032]
    32e0:	b	31f0 <PySequence_Fast@plt+0xfc0>
    32e4:	cmp	x0, #0x0
    32e8:	csel	x22, x0, x22, ge  // ge = tcont
    32ec:	ldr	x0, [sp, #104]
    32f0:	tbnz	x0, #63, 3330 <PySequence_Fast@plt+0x1100>
    32f4:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    32f8:	ldr	x1, [sp, #104]
    32fc:	add	x24, x0, x1
    3300:	cmn	w20, #0x1
    3304:	b.eq	3338 <PySequence_Fast@plt+0x1108>  // b.none
    3308:	cmp	w20, #0x0
    330c:	b.gt	333c <PySequence_Fast@plt+0x110c>
    3310:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    3314:	mov	w2, w20
    3318:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    331c:	add	x1, x1, #0xfb1
    3320:	ldr	x0, [x0, #3992]
    3324:	ldr	x0, [x0]
    3328:	bl	21c0 <PyErr_Format@plt>
    332c:	b	3194 <PySequence_Fast@plt+0xf64>
    3330:	mov	x24, #0x0                   	// #0
    3334:	b	3300 <PySequence_Fast@plt+0x10d0>
    3338:	mov	w20, #0x3ff                 	// #1023
    333c:	sbfiz	x0, x20, #4, #32
    3340:	bl	21f0 <PyMem_Malloc@plt>
    3344:	mov	x19, x0
    3348:	cbnz	x0, 3378 <PySequence_Fast@plt+0x1148>
    334c:	bl	1f50 <PyErr_NoMemory@plt>
    3350:	b	3234 <PySequence_Fast@plt+0x1004>
    3354:	ldr	x0, [sp, #104]
    3358:	tbnz	x0, #63, 3378 <PySequence_Fast@plt+0x1148>
    335c:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3360:	sub	x0, x24, x0
    3364:	str	x0, [sp, #104]
    3368:	tbnz	x0, #63, 33f0 <PySequence_Fast@plt+0x11c0>
    336c:	mov	w1, #0x1                   	// #1
    3370:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    3374:	mov	x22, x0
    3378:	bl	2140 <PyEval_SaveThread@plt>
    337c:	mov	x26, x0
    3380:	bl	21d0 <__errno_location@plt>
    3384:	str	wzr, [x0]
    3388:	mov	x25, x0
    338c:	mov	w3, w22
    3390:	ldr	w0, [x23, #16]
    3394:	mov	w2, w20
    3398:	mov	x1, x19
    339c:	bl	2000 <epoll_wait@plt>
    33a0:	mov	w21, w0
    33a4:	mov	x0, x26
    33a8:	bl	1f00 <PyEval_RestoreThread@plt>
    33ac:	ldr	w0, [x25]
    33b0:	cmp	w0, #0x4
    33b4:	b.ne	33d8 <PySequence_Fast@plt+0x11a8>  // b.any
    33b8:	bl	21a0 <PyErr_CheckSignals@plt>
    33bc:	mov	w21, w0
    33c0:	cbz	w0, 3354 <PySequence_Fast@plt+0x1124>
    33c4:	mov	x20, #0x0                   	// #0
    33c8:	mov	x0, x19
    33cc:	mov	x19, x20
    33d0:	bl	1f10 <PyMem_Free@plt>
    33d4:	b	3234 <PySequence_Fast@plt+0x1004>
    33d8:	tbz	w21, #31, 33f0 <PySequence_Fast@plt+0x11c0>
    33dc:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    33e0:	ldr	x0, [x0, #4008]
    33e4:	ldr	x0, [x0]
    33e8:	bl	1f20 <PyErr_SetFromErrno@plt>
    33ec:	b	33c4 <PySequence_Fast@plt+0x1194>
    33f0:	sxtw	x0, w21
    33f4:	bl	1ed0 <PyList_New@plt>
    33f8:	mov	x20, x0
    33fc:	cbz	x0, 33c4 <PySequence_Fast@plt+0x1194>
    3400:	adrp	x24, 3000 <PySequence_Fast@plt+0xdd0>
    3404:	mov	x23, x19
    3408:	add	x24, x24, #0xfda
    340c:	mov	x22, #0x0                   	// #0
    3410:	cmp	w21, w22
    3414:	b.le	33c8 <PySequence_Fast@plt+0x1198>
    3418:	ldr	w2, [x23]
    341c:	mov	x0, x24
    3420:	ldr	w1, [x23, #8]
    3424:	add	x23, x23, #0x10
    3428:	bl	2070 <Py_BuildValue@plt>
    342c:	cbnz	x0, 343c <PySequence_Fast@plt+0x120c>
    3430:	mov	x0, x20
    3434:	bl	24a8 <PySequence_Fast@plt+0x278>
    3438:	b	33c4 <PySequence_Fast@plt+0x1194>
    343c:	ldr	x1, [x20, #24]
    3440:	str	x0, [x1, x22, lsl #3]
    3444:	add	x22, x22, #0x1
    3448:	b	3410 <PySequence_Fast@plt+0x11e0>
    344c:	sub	sp, sp, #0x40
    3450:	cmp	x3, #0x0
    3454:	ccmp	x2, #0x1, #0x0, eq  // eq = none
    3458:	stp	x29, x30, [sp, #16]
    345c:	add	x29, sp, #0x10
    3460:	str	x19, [sp, #32]
    3464:	mov	x19, x0
    3468:	mov	x0, x1
    346c:	mov	x1, x2
    3470:	b.ne	3478 <PySequence_Fast@plt+0x1248>  // b.any
    3474:	cbnz	x0, 34b8 <PySequence_Fast@plt+0x1288>
    3478:	add	x2, sp, #0x38
    347c:	str	x2, [sp]
    3480:	adrp	x4, 16000 <PyInit_select@@Base+0x12484>
    3484:	add	x4, x4, #0x360
    3488:	mov	w6, #0x1                   	// #1
    348c:	add	x4, x4, #0x238
    3490:	mov	w5, w6
    3494:	mov	w7, #0x0                   	// #0
    3498:	mov	x2, #0x0                   	// #0
    349c:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    34a0:	cbnz	x0, 34b8 <PySequence_Fast@plt+0x1288>
    34a4:	mov	x0, #0x0                   	// #0
    34a8:	ldp	x29, x30, [sp, #16]
    34ac:	ldr	x19, [sp, #32]
    34b0:	add	sp, sp, #0x40
    34b4:	ret
    34b8:	ldr	x0, [x0]
    34bc:	add	x1, sp, #0x34
    34c0:	bl	235c <PySequence_Fast@plt+0x12c>
    34c4:	cbz	w0, 34a4 <PySequence_Fast@plt+0x1274>
    34c8:	ldr	w0, [x19, #16]
    34cc:	mov	w3, #0x0                   	// #0
    34d0:	ldr	w2, [sp, #52]
    34d4:	mov	w1, #0x2                   	// #2
    34d8:	bl	2394 <PySequence_Fast@plt+0x164>
    34dc:	b	34a8 <PySequence_Fast@plt+0x1278>
    34e0:	sub	sp, sp, #0x60
    34e4:	stp	x29, x30, [sp, #16]
    34e8:	add	x29, sp, #0x10
    34ec:	stp	x19, x20, [sp, #32]
    34f0:	mov	x19, x1
    34f4:	mov	x20, x2
    34f8:	stp	x21, x22, [sp, #48]
    34fc:	mov	x21, x0
    3500:	cbz	x3, 3558 <PySequence_Fast@plt+0x1328>
    3504:	ldr	x22, [x3, #16]
    3508:	add	x0, sp, #0x50
    350c:	str	x0, [sp]
    3510:	adrp	x4, 16000 <PyInit_select@@Base+0x12484>
    3514:	add	x4, x4, #0x360
    3518:	mov	x0, x19
    351c:	add	x4, x4, #0x278
    3520:	mov	x1, x20
    3524:	mov	w7, #0x0                   	// #0
    3528:	mov	w6, #0x2                   	// #2
    352c:	mov	w5, #0x1                   	// #1
    3530:	mov	x2, #0x0                   	// #0
    3534:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    3538:	mov	x19, x0
    353c:	cbnz	x0, 356c <PySequence_Fast@plt+0x133c>
    3540:	mov	x0, #0x0                   	// #0
    3544:	ldp	x29, x30, [sp, #16]
    3548:	ldp	x19, x20, [sp, #32]
    354c:	ldp	x21, x22, [sp, #48]
    3550:	add	sp, sp, #0x60
    3554:	ret
    3558:	sub	x0, x2, #0x1
    355c:	mov	x22, #0x0                   	// #0
    3560:	cmp	x0, #0x1
    3564:	b.hi	3508 <PySequence_Fast@plt+0x12d8>  // b.pmore
    3568:	cbz	x1, 3508 <PySequence_Fast@plt+0x12d8>
    356c:	ldr	x0, [x19]
    3570:	add	x1, sp, #0x4c
    3574:	bl	235c <PySequence_Fast@plt+0x12c>
    3578:	cbz	w0, 3540 <PySequence_Fast@plt+0x1310>
    357c:	add	x20, x20, x22
    3580:	cmp	x20, #0x1
    3584:	b.eq	35f8 <PySequence_Fast@plt+0x13c8>  // b.none
    3588:	ldr	x0, [x19, #8]
    358c:	adrp	x1, 15000 <PyInit_select@@Base+0x11484>
    3590:	ldr	x1, [x1, #3968]
    3594:	ldr	x0, [x0, #8]
    3598:	cmp	x0, x1
    359c:	b.ne	35bc <PySequence_Fast@plt+0x138c>  // b.any
    35a0:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    35a4:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    35a8:	add	x1, x1, #0xf63
    35ac:	ldr	x0, [x0, #4000]
    35b0:	ldr	x0, [x0]
    35b4:	bl	1f70 <PyErr_SetString@plt>
    35b8:	b	3540 <PySequence_Fast@plt+0x1310>
    35bc:	bl	21b0 <PyType_IsSubtype@plt>
    35c0:	cbnz	w0, 35a0 <PySequence_Fast@plt+0x1370>
    35c4:	ldr	x0, [x19, #8]
    35c8:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    35cc:	mov	w19, w0
    35d0:	cmn	w0, #0x1
    35d4:	b.ne	35e0 <PySequence_Fast@plt+0x13b0>  // b.any
    35d8:	bl	2080 <PyErr_Occurred@plt>
    35dc:	cbnz	x0, 3540 <PySequence_Fast@plt+0x1310>
    35e0:	ldr	w0, [x21, #16]
    35e4:	mov	w3, w19
    35e8:	ldr	w2, [sp, #76]
    35ec:	mov	w1, #0x1                   	// #1
    35f0:	bl	2394 <PySequence_Fast@plt+0x164>
    35f4:	b	3544 <PySequence_Fast@plt+0x1314>
    35f8:	mov	w19, #0x7                   	// #7
    35fc:	b	35e0 <PySequence_Fast@plt+0x13b0>
    3600:	sub	sp, sp, #0x50
    3604:	cmp	x3, #0x0
    3608:	ccmp	x2, #0x2, #0x0, eq  // eq = none
    360c:	stp	x29, x30, [sp, #16]
    3610:	add	x29, sp, #0x10
    3614:	stp	x19, x20, [sp, #32]
    3618:	mov	x19, x1
    361c:	mov	x20, x0
    3620:	mov	x1, x2
    3624:	b.ne	362c <PySequence_Fast@plt+0x13fc>  // b.any
    3628:	cbnz	x19, 3674 <PySequence_Fast@plt+0x1444>
    362c:	add	x0, sp, #0x40
    3630:	str	x0, [sp]
    3634:	adrp	x4, 16000 <PyInit_select@@Base+0x12484>
    3638:	add	x4, x4, #0x360
    363c:	mov	x0, x19
    3640:	mov	w6, #0x2                   	// #2
    3644:	add	x4, x4, #0x2b8
    3648:	mov	w5, w6
    364c:	mov	w7, #0x0                   	// #0
    3650:	mov	x2, #0x0                   	// #0
    3654:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    3658:	mov	x19, x0
    365c:	cbnz	x0, 3674 <PySequence_Fast@plt+0x1444>
    3660:	mov	x0, #0x0                   	// #0
    3664:	ldp	x29, x30, [sp, #16]
    3668:	ldp	x19, x20, [sp, #32]
    366c:	add	sp, sp, #0x50
    3670:	ret
    3674:	ldr	x0, [x19]
    3678:	add	x1, sp, #0x3c
    367c:	bl	235c <PySequence_Fast@plt+0x12c>
    3680:	cbz	w0, 3660 <PySequence_Fast@plt+0x1430>
    3684:	ldr	x0, [x19, #8]
    3688:	adrp	x1, 15000 <PyInit_select@@Base+0x11484>
    368c:	ldr	x1, [x1, #3968]
    3690:	ldr	x0, [x0, #8]
    3694:	cmp	x0, x1
    3698:	b.ne	36b8 <PySequence_Fast@plt+0x1488>  // b.any
    369c:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    36a0:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    36a4:	add	x1, x1, #0xf63
    36a8:	ldr	x0, [x0, #4000]
    36ac:	ldr	x0, [x0]
    36b0:	bl	1f70 <PyErr_SetString@plt>
    36b4:	b	3660 <PySequence_Fast@plt+0x1430>
    36b8:	bl	21b0 <PyType_IsSubtype@plt>
    36bc:	cbnz	w0, 369c <PySequence_Fast@plt+0x146c>
    36c0:	ldr	x0, [x19, #8]
    36c4:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    36c8:	mov	x19, x0
    36cc:	cmn	w0, #0x1
    36d0:	b.eq	36ec <PySequence_Fast@plt+0x14bc>  // b.none
    36d4:	ldr	w0, [x20, #16]
    36d8:	mov	w3, w19
    36dc:	ldr	w2, [sp, #60]
    36e0:	mov	w1, #0x3                   	// #3
    36e4:	bl	2394 <PySequence_Fast@plt+0x164>
    36e8:	b	3664 <PySequence_Fast@plt+0x1434>
    36ec:	bl	2080 <PyErr_Occurred@plt>
    36f0:	cbz	x0, 36d4 <PySequence_Fast@plt+0x14a4>
    36f4:	b	3660 <PySequence_Fast@plt+0x1430>
    36f8:	ldr	w0, [x0, #16]
    36fc:	tbz	w0, #31, 3704 <PySequence_Fast@plt+0x14d4>
    3700:	b	2314 <PySequence_Fast@plt+0xe4>
    3704:	sxtw	x0, w0
    3708:	b	1ff0 <PyLong_FromLong@plt>
    370c:	stp	x29, x30, [sp, #-32]!
    3710:	mov	x29, sp
    3714:	stp	x19, x20, [sp, #16]
    3718:	ldr	w19, [x0]
    371c:	tbnz	w19, #31, 3764 <PySequence_Fast@plt+0x1534>
    3720:	mov	w1, #0xffffffff            	// #-1
    3724:	str	w1, [x0]
    3728:	bl	2140 <PyEval_SaveThread@plt>
    372c:	mov	x20, x0
    3730:	mov	w0, w19
    3734:	bl	2010 <close@plt>
    3738:	tbz	w0, #31, 375c <PySequence_Fast@plt+0x152c>
    373c:	bl	21d0 <__errno_location@plt>
    3740:	ldr	w19, [x0]
    3744:	mov	x0, x20
    3748:	bl	1f00 <PyEval_RestoreThread@plt>
    374c:	mov	w0, w19
    3750:	ldp	x19, x20, [sp, #16]
    3754:	ldp	x29, x30, [sp], #32
    3758:	ret
    375c:	mov	w19, #0x0                   	// #0
    3760:	b	3744 <PySequence_Fast@plt+0x1514>
    3764:	mov	w19, #0x0                   	// #0
    3768:	b	374c <PySequence_Fast@plt+0x151c>
    376c:	stp	x29, x30, [sp, #-32]!
    3770:	mov	x29, sp
    3774:	stp	x19, x20, [sp, #16]
    3778:	mov	x20, x0
    377c:	bl	21d0 <__errno_location@plt>
    3780:	mov	x19, x0
    3784:	add	x0, x20, #0x10
    3788:	bl	370c <PySequence_Fast@plt+0x14dc>
    378c:	str	w0, [x19]
    3790:	tbz	w0, #31, 37b4 <PySequence_Fast@plt+0x1584>
    3794:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    3798:	ldr	x0, [x0, #4008]
    379c:	ldr	x0, [x0]
    37a0:	bl	1f20 <PyErr_SetFromErrno@plt>
    37a4:	mov	x0, #0x0                   	// #0
    37a8:	ldp	x19, x20, [sp, #16]
    37ac:	ldp	x29, x30, [sp], #32
    37b0:	ret
    37b4:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    37b8:	ldr	x0, [x0, #4048]
    37bc:	ldr	x1, [x0]
    37c0:	add	x1, x1, #0x1
    37c4:	str	x1, [x0]
    37c8:	b	37a8 <PySequence_Fast@plt+0x1578>
    37cc:	stp	x29, x30, [sp, #-32]!
    37d0:	mov	x29, sp
    37d4:	str	x19, [sp, #16]
    37d8:	mov	x19, x0
    37dc:	add	x0, x0, #0x10
    37e0:	bl	370c <PySequence_Fast@plt+0x14dc>
    37e4:	ldr	x0, [x19, #8]
    37e8:	ldr	x1, [x0, #320]
    37ec:	mov	x0, x19
    37f0:	ldr	x19, [sp, #16]
    37f4:	mov	x16, x1
    37f8:	ldp	x29, x30, [sp], #32
    37fc:	br	x16
    3800:	mov	x12, #0xc250                	// #49744
    3804:	sub	sp, sp, x12
    3808:	stp	x29, x30, [sp]
    380c:	mov	x29, sp
    3810:	stp	x19, x20, [sp, #16]
    3814:	mov	x19, x0
    3818:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    381c:	stp	x21, x22, [sp, #32]
    3820:	mov	x21, x1
    3824:	ldr	x0, [x0, #4048]
    3828:	stp	x23, x24, [sp, #48]
    382c:	stp	x25, x26, [sp, #64]
    3830:	cmp	x3, x0
    3834:	stp	x27, x28, [sp, #80]
    3838:	mov	x27, x2
    383c:	b.eq	38e4 <PySequence_Fast@plt+0x16b4>  // b.none
    3840:	mov	x1, x3
    3844:	add	x0, sp, #0x88
    3848:	mov	w2, #0x3                   	// #3
    384c:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    3850:	tbz	w0, #31, 38a8 <PySequence_Fast@plt+0x1678>
    3854:	adrp	x19, 15000 <PyInit_select@@Base+0x11484>
    3858:	ldr	x19, [x19, #4000]
    385c:	ldr	x0, [x19]
    3860:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    3864:	cbnz	w0, 3894 <PySequence_Fast@plt+0x1664>
    3868:	mov	x19, #0x0                   	// #0
    386c:	mov	x0, x19
    3870:	mov	x12, #0xc250                	// #49744
    3874:	ldp	x29, x30, [sp]
    3878:	ldp	x19, x20, [sp, #16]
    387c:	ldp	x21, x22, [sp, #32]
    3880:	ldp	x23, x24, [sp, #48]
    3884:	ldp	x25, x26, [sp, #64]
    3888:	ldp	x27, x28, [sp, #80]
    388c:	add	sp, sp, x12
    3890:	ret
    3894:	ldr	x0, [x19]
    3898:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    389c:	add	x1, x1, #0xfdd
    38a0:	bl	1f70 <PyErr_SetString@plt>
    38a4:	b	3868 <PySequence_Fast@plt+0x1638>
    38a8:	ldr	x0, [sp, #136]
    38ac:	add	x20, sp, #0x90
    38b0:	mov	x1, x20
    38b4:	mov	w2, #0x3                   	// #3
    38b8:	bl	2190 <_PyTime_AsTimeval@plt>
    38bc:	cmn	w0, #0x1
    38c0:	b.eq	3868 <PySequence_Fast@plt+0x1638>  // b.none
    38c4:	ldr	x0, [sp, #144]
    38c8:	tbz	x0, #63, 38e8 <PySequence_Fast@plt+0x16b8>
    38cc:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    38d0:	adrp	x1, 3000 <PySequence_Fast@plt+0xdd0>
    38d4:	add	x1, x1, #0xffd
    38d8:	ldr	x0, [x0, #3992]
    38dc:	ldr	x0, [x0]
    38e0:	b	38a0 <PySequence_Fast@plt+0x1670>
    38e4:	mov	x20, #0x0                   	// #0
    38e8:	mov	x1, #0x4020                	// #16416
    38ec:	add	x1, sp, x1
    38f0:	mov	w0, #0xffffffff            	// #-1
    38f4:	mov	x5, #0x8020                	// #32800
    38f8:	mov	x3, #0x4230                	// #16944
    38fc:	mov	x4, #0x8240                	// #33344
    3900:	str	w0, [x1, #540]
    3904:	add	x1, sp, x5
    3908:	add	x23, sp, #0x220
    390c:	add	x25, sp, #0xa0
    3910:	mov	x2, x23
    3914:	add	x24, sp, x3
    3918:	str	w0, [x1, #556]
    391c:	add	x22, sp, x4
    3920:	mov	x1, x25
    3924:	str	w0, [sp, #556]
    3928:	mov	x0, x19
    392c:	bl	2b90 <PySequence_Fast@plt+0x960>
    3930:	mov	w19, w0
    3934:	tbz	w0, #31, 3958 <PySequence_Fast@plt+0x1728>
    3938:	mov	x19, #0x0                   	// #0
    393c:	mov	x0, x23
    3940:	bl	2500 <PySequence_Fast@plt+0x2d0>
    3944:	mov	x0, x24
    3948:	bl	2500 <PySequence_Fast@plt+0x2d0>
    394c:	mov	x0, x22
    3950:	bl	2500 <PySequence_Fast@plt+0x2d0>
    3954:	b	386c <PySequence_Fast@plt+0x163c>
    3958:	add	x26, sp, #0x120
    395c:	mov	x2, x24
    3960:	mov	x1, x26
    3964:	mov	x0, x21
    3968:	bl	2b90 <PySequence_Fast@plt+0x960>
    396c:	mov	w28, w0
    3970:	tbnz	w0, #31, 3938 <PySequence_Fast@plt+0x1708>
    3974:	add	x21, sp, #0x1a0
    3978:	mov	x2, x22
    397c:	mov	x1, x21
    3980:	mov	x0, x27
    3984:	bl	2b90 <PySequence_Fast@plt+0x960>
    3988:	tbnz	w0, #31, 3938 <PySequence_Fast@plt+0x1708>
    398c:	cmp	w19, w28
    3990:	csel	w19, w19, w28, ge  // ge = tcont
    3994:	cmp	w0, w19
    3998:	csel	w19, w0, w19, ge  // ge = tcont
    399c:	cbz	x20, 3acc <PySequence_Fast@plt+0x189c>
    39a0:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    39a4:	ldr	x1, [sp, #136]
    39a8:	add	x27, x0, x1
    39ac:	add	x28, sp, #0x90
    39b0:	bl	2140 <PyEval_SaveThread@plt>
    39b4:	str	x0, [sp, #120]
    39b8:	bl	21d0 <__errno_location@plt>
    39bc:	mov	x5, x0
    39c0:	mov	x4, x20
    39c4:	mov	x3, x21
    39c8:	mov	x2, x26
    39cc:	mov	x1, x25
    39d0:	str	wzr, [x5]
    39d4:	mov	w0, w19
    39d8:	str	x5, [sp, #112]
    39dc:	bl	2170 <select@plt>
    39e0:	mov	w1, w0
    39e4:	ldr	x6, [sp, #120]
    39e8:	str	w1, [sp, #108]
    39ec:	mov	x0, x6
    39f0:	bl	1f00 <PyEval_RestoreThread@plt>
    39f4:	ldr	x5, [sp, #112]
    39f8:	ldr	w1, [sp, #108]
    39fc:	ldr	w0, [x5]
    3a00:	cmp	w0, #0x4
    3a04:	b.ne	3ae4 <PySequence_Fast@plt+0x18b4>  // b.any
    3a08:	bl	21a0 <PyErr_CheckSignals@plt>
    3a0c:	cbnz	w0, 3938 <PySequence_Fast@plt+0x1708>
    3a10:	cbz	x20, 39b0 <PySequence_Fast@plt+0x1780>
    3a14:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3a18:	sub	x0, x27, x0
    3a1c:	str	x0, [sp, #136]
    3a20:	tbz	x0, #63, 3ad4 <PySequence_Fast@plt+0x18a4>
    3a24:	mov	x0, #0x0                   	// #0
    3a28:	str	xzr, [x25, x0, lsl #3]
    3a2c:	add	x0, x0, #0x1
    3a30:	cmp	x0, #0x10
    3a34:	b.ne	3a28 <PySequence_Fast@plt+0x17f8>  // b.any
    3a38:	mov	x0, #0x0                   	// #0
    3a3c:	str	xzr, [x26, x0, lsl #3]
    3a40:	add	x0, x0, #0x1
    3a44:	cmp	x0, #0x10
    3a48:	b.ne	3a3c <PySequence_Fast@plt+0x180c>  // b.any
    3a4c:	mov	x0, #0x0                   	// #0
    3a50:	str	xzr, [x21, x0, lsl #3]
    3a54:	add	x0, x0, #0x1
    3a58:	cmp	x0, #0x10
    3a5c:	b.ne	3a50 <PySequence_Fast@plt+0x1820>  // b.any
    3a60:	mov	x1, x23
    3a64:	mov	x0, x25
    3a68:	bl	2ce8 <PySequence_Fast@plt+0xab8>
    3a6c:	mov	x27, x0
    3a70:	mov	x1, x24
    3a74:	mov	x0, x26
    3a78:	bl	2ce8 <PySequence_Fast@plt+0xab8>
    3a7c:	mov	x25, x0
    3a80:	mov	x1, x22
    3a84:	mov	x0, x21
    3a88:	bl	2ce8 <PySequence_Fast@plt+0xab8>
    3a8c:	mov	x20, x0
    3a90:	bl	2080 <PyErr_Occurred@plt>
    3a94:	cbnz	x0, 3afc <PySequence_Fast@plt+0x18cc>
    3a98:	mov	x3, x20
    3a9c:	mov	x2, x25
    3aa0:	mov	x1, x27
    3aa4:	mov	x0, #0x3                   	// #3
    3aa8:	bl	2210 <PyTuple_Pack@plt>
    3aac:	mov	x19, x0
    3ab0:	mov	x0, x27
    3ab4:	bl	24c0 <PySequence_Fast@plt+0x290>
    3ab8:	mov	x0, x25
    3abc:	bl	24c0 <PySequence_Fast@plt+0x290>
    3ac0:	mov	x0, x20
    3ac4:	bl	24c0 <PySequence_Fast@plt+0x290>
    3ac8:	b	393c <PySequence_Fast@plt+0x170c>
    3acc:	mov	x27, #0x0                   	// #0
    3ad0:	b	39ac <PySequence_Fast@plt+0x177c>
    3ad4:	mov	x1, x28
    3ad8:	mov	w2, #0x1                   	// #1
    3adc:	bl	20b0 <_PyTime_AsTimeval_noraise@plt>
    3ae0:	b	39b0 <PySequence_Fast@plt+0x1780>
    3ae4:	tbz	w1, #31, 3a60 <PySequence_Fast@plt+0x1830>
    3ae8:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    3aec:	ldr	x0, [x0, #4008]
    3af0:	ldr	x0, [x0]
    3af4:	bl	1f20 <PyErr_SetFromErrno@plt>
    3af8:	b	3938 <PySequence_Fast@plt+0x1708>
    3afc:	mov	x19, #0x0                   	// #0
    3b00:	b	3ab0 <PySequence_Fast@plt+0x1880>
    3b04:	stp	x29, x30, [sp, #-32]!
    3b08:	sub	x0, x2, #0x3
    3b0c:	cmp	x0, #0x1
    3b10:	mov	x29, sp
    3b14:	stp	x19, x20, [sp, #16]
    3b18:	mov	x19, x1
    3b1c:	mov	x20, x2
    3b20:	b.hi	3b40 <PySequence_Fast@plt+0x1910>  // b.pmore
    3b24:	cmp	x20, #0x3
    3b28:	ldp	x0, x1, [x19]
    3b2c:	ldr	x2, [x19, #16]
    3b30:	b.gt	3b6c <PySequence_Fast@plt+0x193c>
    3b34:	adrp	x3, 15000 <PyInit_select@@Base+0x11484>
    3b38:	ldr	x3, [x3, #4048]
    3b3c:	b	3b70 <PySequence_Fast@plt+0x1940>
    3b40:	adrp	x0, 4000 <PyInit_select@@Base+0x484>
    3b44:	mov	x1, x20
    3b48:	add	x0, x0, #0x1a
    3b4c:	mov	x3, #0x4                   	// #4
    3b50:	mov	x2, #0x3                   	// #3
    3b54:	bl	2050 <_PyArg_CheckPositional@plt>
    3b58:	cbnz	w0, 3b24 <PySequence_Fast@plt+0x18f4>
    3b5c:	mov	x0, #0x0                   	// #0
    3b60:	ldp	x19, x20, [sp, #16]
    3b64:	ldp	x29, x30, [sp], #32
    3b68:	ret
    3b6c:	ldr	x3, [x19, #24]
    3b70:	ldp	x19, x20, [sp, #16]
    3b74:	ldp	x29, x30, [sp], #32
    3b78:	b	3800 <PySequence_Fast@plt+0x15d0>

0000000000003b7c <PyInit_select@@Base>:
    3b7c:	stp	x29, x30, [sp, #-48]!
    3b80:	mov	w1, #0x3f5                 	// #1013
    3b84:	mov	x29, sp
    3b88:	stp	x19, x20, [sp, #16]
    3b8c:	adrp	x20, 16000 <PyInit_select@@Base+0x12484>
    3b90:	add	x20, x20, #0x360
    3b94:	add	x0, x20, #0x2f8
    3b98:	str	x21, [sp, #32]
    3b9c:	bl	2090 <PyModule_Create2@plt>
    3ba0:	cbnz	x0, 3bbc <PyInit_select@@Base+0x40>
    3ba4:	mov	x19, #0x0                   	// #0
    3ba8:	mov	x0, x19
    3bac:	ldp	x19, x20, [sp, #16]
    3bb0:	ldr	x21, [sp, #32]
    3bb4:	ldp	x29, x30, [sp], #48
    3bb8:	ret
    3bbc:	adrp	x1, 15000 <PyInit_select@@Base+0x11484>
    3bc0:	mov	x19, x0
    3bc4:	ldr	x1, [x1, #4008]
    3bc8:	ldr	x2, [x1]
    3bcc:	ldr	x1, [x2]
    3bd0:	add	x1, x1, #0x1
    3bd4:	str	x1, [x2]
    3bd8:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3bdc:	add	x1, x1, #0x21
    3be0:	bl	2150 <PyModule_AddObject@plt>
    3be4:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3be8:	add	x1, x1, #0x27
    3bec:	mov	x2, #0x1000                	// #4096
    3bf0:	mov	x0, x19
    3bf4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3bf8:	mov	x0, x20
    3bfc:	bl	1fe0 <PyType_Ready@plt>
    3c00:	tbnz	w0, #31, 3ba4 <PyInit_select@@Base+0x28>
    3c04:	mov	x2, #0x1                   	// #1
    3c08:	mov	x0, x19
    3c0c:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3c10:	add	x1, x1, #0x3a
    3c14:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3c18:	adrp	x21, 16000 <PyInit_select@@Base+0x12484>
    3c1c:	mov	x2, #0x2                   	// #2
    3c20:	mov	x0, x19
    3c24:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3c28:	add	x1, x1, #0x4b
    3c2c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3c30:	add	x20, x21, #0x1c0
    3c34:	mov	x2, #0x4                   	// #4
    3c38:	mov	x0, x19
    3c3c:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3c40:	add	x1, x1, #0x42
    3c44:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3c48:	mov	x2, #0x8                   	// #8
    3c4c:	mov	x0, x19
    3c50:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3c54:	add	x1, x1, #0x54
    3c58:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3c5c:	mov	x2, #0x10                  	// #16
    3c60:	mov	x0, x19
    3c64:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3c68:	add	x1, x1, #0x5d
    3c6c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3c70:	mov	x2, #0x20                  	// #32
    3c74:	mov	x0, x19
    3c78:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3c7c:	add	x1, x1, #0x30
    3c80:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3c84:	mov	x2, #0x40                  	// #64
    3c88:	mov	x0, x19
    3c8c:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3c90:	add	x1, x1, #0x95
    3c94:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3c98:	mov	x2, #0x80                  	// #128
    3c9c:	mov	x0, x19
    3ca0:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3ca4:	add	x1, x1, #0xa1
    3ca8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3cac:	mov	x2, #0x100                 	// #256
    3cb0:	mov	x0, x19
    3cb4:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3cb8:	add	x1, x1, #0xad
    3cbc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3cc0:	mov	x2, #0x200                 	// #512
    3cc4:	mov	x0, x19
    3cc8:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3ccc:	add	x1, x1, #0xb9
    3cd0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3cd4:	mov	x2, #0x400                 	// #1024
    3cd8:	mov	x0, x19
    3cdc:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3ce0:	add	x1, x1, #0xc5
    3ce4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3ce8:	mov	x0, x19
    3cec:	mov	x2, #0x2000                	// #8192
    3cf0:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3cf4:	add	x1, x1, #0x66
    3cf8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3cfc:	adrp	x0, 15000 <PyInit_select@@Base+0x11484>
    3d00:	ldr	x0, [x0, #4040]
    3d04:	str	x0, [x20, #8]
    3d08:	mov	x0, x20
    3d0c:	bl	1fe0 <PyType_Ready@plt>
    3d10:	tbnz	w0, #31, 3ba4 <PyInit_select@@Base+0x28>
    3d14:	ldr	x0, [x21, #448]
    3d18:	mov	x2, x20
    3d1c:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3d20:	add	x1, x1, #0x14b
    3d24:	add	x0, x0, #0x1
    3d28:	str	x0, [x21, #448]
    3d2c:	mov	x0, x19
    3d30:	bl	2150 <PyModule_AddObject@plt>
    3d34:	mov	x0, x19
    3d38:	mov	x2, #0x1                   	// #1
    3d3c:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3d40:	add	x1, x1, #0x39
    3d44:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3d48:	mov	x0, x19
    3d4c:	mov	x2, #0x4                   	// #4
    3d50:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3d54:	add	x1, x1, #0x41
    3d58:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3d5c:	mov	x0, x19
    3d60:	mov	x2, #0x2                   	// #2
    3d64:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3d68:	add	x1, x1, #0x4a
    3d6c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3d70:	mov	x0, x19
    3d74:	mov	x2, #0x8                   	// #8
    3d78:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3d7c:	add	x1, x1, #0x53
    3d80:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3d84:	mov	x0, x19
    3d88:	mov	x2, #0x10                  	// #16
    3d8c:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3d90:	add	x1, x1, #0x5c
    3d94:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3d98:	mov	x0, x19
    3d9c:	mov	x2, #0x2000                	// #8192
    3da0:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3da4:	add	x1, x1, #0x65
    3da8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3dac:	mov	x0, x19
    3db0:	mov	x2, #0x80000000            	// #2147483648
    3db4:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3db8:	add	x1, x1, #0x70
    3dbc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3dc0:	mov	x0, x19
    3dc4:	mov	x2, #0x40000000            	// #1073741824
    3dc8:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3dcc:	add	x1, x1, #0x78
    3dd0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3dd4:	mov	x0, x19
    3dd8:	mov	x2, #0x10000000            	// #268435456
    3ddc:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3de0:	add	x1, x1, #0x85
    3de4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3de8:	mov	x0, x19
    3dec:	mov	x2, #0x40                  	// #64
    3df0:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3df4:	add	x1, x1, #0x94
    3df8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3dfc:	mov	x0, x19
    3e00:	mov	x2, #0x80                  	// #128
    3e04:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3e08:	add	x1, x1, #0xa0
    3e0c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3e10:	mov	x0, x19
    3e14:	mov	x2, #0x100                 	// #256
    3e18:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3e1c:	add	x1, x1, #0xac
    3e20:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3e24:	mov	x0, x19
    3e28:	mov	x2, #0x200                 	// #512
    3e2c:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3e30:	add	x1, x1, #0xb8
    3e34:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3e38:	mov	x0, x19
    3e3c:	mov	x2, #0x400                 	// #1024
    3e40:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3e44:	add	x1, x1, #0xc4
    3e48:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3e4c:	mov	x0, x19
    3e50:	mov	x2, #0x80000               	// #524288
    3e54:	adrp	x1, 4000 <PyInit_select@@Base+0x484>
    3e58:	add	x1, x1, #0xcd
    3e5c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    3e60:	b	3ba8 <PyInit_select@@Base+0x2c>

Disassembly of section .fini:

0000000000003e64 <.fini>:
    3e64:	stp	x29, x30, [sp, #-16]!
    3e68:	mov	x29, sp
    3e6c:	ldp	x29, x30, [sp], #16
    3e70:	ret
