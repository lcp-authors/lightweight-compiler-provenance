
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//pbkdf2.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_crypto_pbkdf2>:
   0:	stp	x29, x30, [sp, #-304]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x21, x0
  18:	mov	x23, x1
  1c:	mov	x24, x2
  20:	str	x4, [sp, #112]
  24:	str	x6, [sp, #144]
  28:	ldr	x0, [x0, #32]
  2c:	sub	x19, x7, #0x1
  30:	sub	x2, x0, #0x1
  34:	cmp	w5, #0x0
  38:	mov	x1, #0xfffffffe            	// #4294967294
  3c:	ccmp	x19, x1, #0x2, ne  // ne = any
  40:	mov	x1, #0x3f                  	// #63
  44:	ccmp	x2, x1, #0x2, ls  // ls = plast
  48:	b.ls	68 <grub_crypto_pbkdf2+0x68>  // b.plast
  4c:	mov	w19, #0xa                   	// #10
  50:	mov	w0, w19
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldp	x23, x24, [sp, #48]
  60:	ldp	x29, x30, [sp], #304
  64:	ret
  68:	stp	x25, x26, [sp, #64]
  6c:	stp	x27, x28, [sp, #80]
  70:	mov	x20, x3
  74:	mov	w22, w5
  78:	mov	w28, w0
  7c:	str	w0, [sp, #160]
  80:	mov	x26, x4
  84:	add	x1, x4, #0x4
  88:	str	x1, [sp, #136]
  8c:	and	x3, x0, #0xffffffff
  90:	str	x3, [sp, #104]
  94:	udiv	x19, x19, x3
  98:	add	w2, w19, #0x1
  9c:	str	w2, [sp, #164]
  a0:	msub	w0, w0, w19, w7
  a4:	str	w0, [sp, #168]
  a8:	mov	x0, x1
  ac:	bl	0 <grub_malloc>
  b0:	mov	x25, x0
  b4:	cbz	x0, 21c <grub_crypto_pbkdf2+0x21c>
  b8:	mov	x2, x26
  bc:	mov	x1, x20
  c0:	bl	0 <grub_memmove>
  c4:	add	w0, w19, #0x2
  c8:	str	w0, [sp, #172]
  cc:	str	wzr, [sp, #156]
  d0:	mov	w27, #0x1                   	// #1
  d4:	sub	w28, w28, #0x1
  d8:	ldr	x2, [sp, #104]
  dc:	mov	w1, #0x0                   	// #0
  e0:	add	x0, sp, #0xb0
  e4:	bl	0 <grub_memset>
  e8:	lsr	w0, w27, #24
  ec:	str	w0, [sp, #152]
  f0:	ubfx	x0, x27, #16, #8
  f4:	str	x0, [sp, #120]
  f8:	ubfx	x0, x27, #8, #8
  fc:	str	x0, [sp, #128]
 100:	mov	w20, #0x0                   	// #0
 104:	ldr	x0, [sp, #112]
 108:	add	x26, x25, x0
 10c:	b	188 <grub_crypto_pbkdf2+0x188>
 110:	ldr	x0, [sp, #112]
 114:	ldrb	w1, [sp, #152]
 118:	strb	w1, [x25, x0]
 11c:	ldrb	w0, [sp, #120]
 120:	strb	w0, [x26, #1]
 124:	ldrb	w0, [sp, #128]
 128:	strb	w0, [x26, #2]
 12c:	strb	w27, [x26, #3]
 130:	add	x5, sp, #0xf0
 134:	ldr	x4, [sp, #136]
 138:	mov	x3, x25
 13c:	mov	x2, x24
 140:	mov	x1, x23
 144:	mov	x0, x21
 148:	bl	0 <grub_crypto_hmac_buffer>
 14c:	mov	w19, w0
 150:	cbnz	w19, 1b0 <grub_crypto_pbkdf2+0x1b0>
 154:	add	x0, sp, #0xb0
 158:	add	x2, sp, #0xf0
 15c:	add	x4, x0, #0x1
 160:	add	x4, x28, x4
 164:	ldrb	w1, [x0]
 168:	ldrb	w3, [x2], #1
 16c:	eor	w1, w1, w3
 170:	strb	w1, [x0], #1
 174:	cmp	x0, x4
 178:	b.ne	164 <grub_crypto_pbkdf2+0x164>  // b.any
 17c:	add	w20, w20, #0x1
 180:	cmp	w22, w20
 184:	b.ls	1c4 <grub_crypto_pbkdf2+0x1c4>  // b.plast
 188:	cbz	w20, 110 <grub_crypto_pbkdf2+0x110>
 18c:	add	x5, sp, #0xf0
 190:	ldr	x4, [sp, #104]
 194:	mov	x3, x5
 198:	mov	x2, x24
 19c:	mov	x1, x23
 1a0:	mov	x0, x21
 1a4:	bl	0 <grub_crypto_hmac_buffer>
 1a8:	mov	w19, w0
 1ac:	b	150 <grub_crypto_pbkdf2+0x150>
 1b0:	mov	x0, x25
 1b4:	bl	0 <grub_free>
 1b8:	ldp	x25, x26, [sp, #64]
 1bc:	ldp	x27, x28, [sp, #80]
 1c0:	b	50 <grub_crypto_pbkdf2+0x50>
 1c4:	ldr	w2, [sp, #168]
 1c8:	ldr	w0, [sp, #164]
 1cc:	cmp	w0, w27
 1d0:	ldr	x0, [sp, #104]
 1d4:	csel	x2, x2, x0, eq  // eq = none
 1d8:	add	x1, sp, #0xb0
 1dc:	ldr	w20, [sp, #156]
 1e0:	ldr	x3, [sp, #144]
 1e4:	add	x0, x3, w20, uxtw
 1e8:	bl	0 <grub_memmove>
 1ec:	add	w27, w27, #0x1
 1f0:	ldr	w1, [sp, #160]
 1f4:	add	w0, w20, w1
 1f8:	str	w0, [sp, #156]
 1fc:	ldr	w0, [sp, #172]
 200:	cmp	w27, w0
 204:	b.ne	d8 <grub_crypto_pbkdf2+0xd8>  // b.any
 208:	mov	x0, x25
 20c:	bl	0 <grub_free>
 210:	ldp	x25, x26, [sp, #64]
 214:	ldp	x27, x28, [sp, #80]
 218:	b	50 <grub_crypto_pbkdf2+0x50>
 21c:	mov	w19, #0x22                  	// #34
 220:	ldp	x25, x26, [sp, #64]
 224:	ldp	x27, x28, [sp, #80]
 228:	b	50 <grub_crypto_pbkdf2+0x50>
