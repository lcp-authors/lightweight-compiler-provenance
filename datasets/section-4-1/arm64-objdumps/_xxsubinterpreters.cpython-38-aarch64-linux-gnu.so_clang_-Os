
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0xd4>:
    2940:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	nop
    2958:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    295c:	add	x0, x0, #0x928
    2960:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2964:	add	x1, x1, #0x928
    2968:	cmp	x1, x0
    296c:	b.eq	2984 <PyThread_free_lock@plt+0x54>  // b.none
    2970:	adrp	x1, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2974:	ldr	x1, [x1, #3952]
    2978:	cbz	x1, 2984 <PyThread_free_lock@plt+0x54>
    297c:	mov	x16, x1
    2980:	br	x16
    2984:	ret
    2988:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    298c:	add	x0, x0, #0x928
    2990:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2994:	add	x1, x1, #0x928
    2998:	sub	x1, x1, x0
    299c:	lsr	x2, x1, #63
    29a0:	add	x1, x2, x1, asr #3
    29a4:	cmp	xzr, x1, asr #1
    29a8:	asr	x1, x1, #1
    29ac:	b.eq	29c4 <PyThread_free_lock@plt+0x94>  // b.none
    29b0:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29b4:	ldr	x2, [x2, #4064]
    29b8:	cbz	x2, 29c4 <PyThread_free_lock@plt+0x94>
    29bc:	mov	x16, x2
    29c0:	br	x16
    29c4:	ret
    29c8:	stp	x29, x30, [sp, #-32]!
    29cc:	mov	x29, sp
    29d0:	str	x19, [sp, #16]
    29d4:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29d8:	ldrb	w0, [x19, #2344]
    29dc:	cbnz	w0, 2a04 <PyThread_free_lock@plt+0xd4>
    29e0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29e4:	ldr	x0, [x0, #3968]
    29e8:	cbz	x0, 29f8 <PyThread_free_lock@plt+0xc8>
    29ec:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29f0:	ldr	x0, [x0, #552]
    29f4:	bl	25c0 <__cxa_finalize@plt>
    29f8:	bl	2958 <PyThread_free_lock@plt+0x28>
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	strb	w0, [x19, #2344]
    2a04:	ldr	x19, [sp, #16]
    2a08:	ldp	x29, x30, [sp], #32
    2a0c:	ret
    2a10:	b	2988 <PyThread_free_lock@plt+0x58>

0000000000002a14 <PyInit__xxsubinterpreters@@Base>:
    2a14:	stp	x29, x30, [sp, #-64]!
    2a18:	str	x23, [sp, #16]
    2a1c:	stp	x22, x21, [sp, #32]
    2a20:	stp	x20, x19, [sp, #48]
    2a24:	mov	x29, sp
    2a28:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a2c:	ldr	x8, [x19, #2352]
    2a30:	cbnz	x8, 2a40 <PyInit__xxsubinterpreters@@Base+0x2c>
    2a34:	bl	2790 <PyThread_allocate_lock@plt>
    2a38:	str	x0, [x19, #2352]
    2a3c:	cbz	x0, 2c24 <PyInit__xxsubinterpreters@@Base+0x210>
    2a40:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a44:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a48:	add	x20, x20, #0x230
    2a4c:	add	x8, x8, #0x938
    2a50:	mov	x0, x20
    2a54:	stp	xzr, xzr, [x8]
    2a58:	str	xzr, [x8, #16]
    2a5c:	bl	26c0 <PyType_Ready@plt>
    2a60:	mov	w8, w0
    2a64:	mov	x0, xzr
    2a68:	cbnz	w8, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2a6c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a70:	add	x0, x0, #0x3d0
    2a74:	mov	w1, #0x3f5                 	// #1013
    2a78:	bl	2740 <PyModule_Create2@plt>
    2a7c:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2a80:	mov	x19, x0
    2a84:	bl	28d0 <PyModule_GetDict@plt>
    2a88:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a8c:	adrp	x22, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2a90:	ldr	x8, [x23, #2400]
    2a94:	ldr	x22, [x22, #4000]
    2a98:	mov	x21, x0
    2a9c:	cbz	x8, 2c50 <PyInit__xxsubinterpreters@@Base+0x23c>
    2aa0:	ldr	x1, [x22]
    2aa4:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2aa8:	add	x0, x0, #0x389
    2aac:	mov	x2, xzr
    2ab0:	bl	26e0 <PyErr_NewException@plt>
    2ab4:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ab8:	str	x0, [x22, #2384]
    2abc:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2ac0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ac4:	mov	x2, x0
    2ac8:	add	x1, x1, #0x39c
    2acc:	mov	x0, x21
    2ad0:	bl	2510 <PyDict_SetItemString@plt>
    2ad4:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2ad8:	ldr	x1, [x22, #2384]
    2adc:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ae0:	add	x0, x0, #0x3a9
    2ae4:	mov	x2, xzr
    2ae8:	bl	26e0 <PyErr_NewException@plt>
    2aec:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2af0:	str	x0, [x8, #2392]
    2af4:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2af8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2afc:	mov	x2, x0
    2b00:	add	x1, x1, #0x3bc
    2b04:	mov	x0, x21
    2b08:	bl	2510 <PyDict_SetItemString@plt>
    2b0c:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2b10:	ldr	x1, [x22, #2384]
    2b14:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b18:	add	x0, x0, #0x3d1
    2b1c:	mov	x2, xzr
    2b20:	bl	26e0 <PyErr_NewException@plt>
    2b24:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2b28:	str	x0, [x8, #2408]
    2b2c:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2b30:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b34:	mov	x2, x0
    2b38:	add	x1, x1, #0x3e4
    2b3c:	mov	x0, x21
    2b40:	bl	2510 <PyDict_SetItemString@plt>
    2b44:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2b48:	ldr	x1, [x22, #2384]
    2b4c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b50:	add	x0, x0, #0x3f7
    2b54:	mov	x2, xzr
    2b58:	bl	26e0 <PyErr_NewException@plt>
    2b5c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2b60:	str	x0, [x8, #2416]
    2b64:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2b68:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b6c:	mov	x2, x0
    2b70:	add	x1, x1, #0x40a
    2b74:	mov	x0, x21
    2b78:	bl	2510 <PyDict_SetItemString@plt>
    2b7c:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2b80:	ldr	x1, [x22, #2384]
    2b84:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b88:	add	x0, x0, #0x41c
    2b8c:	mov	x2, xzr
    2b90:	bl	26e0 <PyErr_NewException@plt>
    2b94:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2b98:	str	x0, [x8, #2424]
    2b9c:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2ba0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ba4:	mov	x2, x0
    2ba8:	add	x1, x1, #0x42f
    2bac:	mov	x0, x21
    2bb0:	bl	2510 <PyDict_SetItemString@plt>
    2bb4:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2bb8:	ldr	x8, [x20]
    2bbc:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2bc0:	add	x1, x1, #0xeab
    2bc4:	mov	x0, x21
    2bc8:	add	x8, x8, #0x1
    2bcc:	mov	x2, x20
    2bd0:	str	x8, [x20]
    2bd4:	bl	2510 <PyDict_SetItemString@plt>
    2bd8:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2bdc:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2be0:	ldr	x2, [x2, #3984]
    2be4:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2be8:	add	x1, x1, #0xe5c
    2bec:	mov	x0, x21
    2bf0:	ldr	x8, [x2]
    2bf4:	add	x8, x8, #0x1
    2bf8:	str	x8, [x2]
    2bfc:	bl	2510 <PyDict_SetItemString@plt>
    2c00:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2c04:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c08:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    2c0c:	add	x0, x0, #0x230
    2c10:	add	x1, x1, #0xc88
    2c14:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    2c18:	cmp	w0, #0x0
    2c1c:	csel	x0, x19, xzr, eq  // eq = none
    2c20:	b	2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2c24:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c28:	ldr	x0, [x8, #2384]
    2c2c:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2c30:	add	x1, x1, #0xe6a
    2c34:	bl	2670 <PyErr_SetString@plt>
    2c38:	mov	x0, xzr
    2c3c:	ldp	x20, x19, [sp, #48]
    2c40:	ldp	x22, x21, [sp, #32]
    2c44:	ldr	x23, [sp, #16]
    2c48:	ldp	x29, x30, [sp], #64
    2c4c:	ret
    2c50:	ldr	x1, [x22]
    2c54:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c58:	add	x0, x0, #0x367
    2c5c:	mov	x2, xzr
    2c60:	bl	26e0 <PyErr_NewException@plt>
    2c64:	str	x0, [x23, #2400]
    2c68:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2c6c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c70:	mov	x2, x0
    2c74:	add	x1, x1, #0x37a
    2c78:	mov	x0, x21
    2c7c:	bl	2510 <PyDict_SetItemString@plt>
    2c80:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2c84:	b	2aa0 <PyInit__xxsubinterpreters@@Base+0x8c>
    2c88:	stp	x29, x30, [sp, #-32]!
    2c8c:	stp	x20, x19, [sp, #16]
    2c90:	mov	x29, sp
    2c94:	mov	x20, x0
    2c98:	mov	w0, #0x10                  	// #16
    2c9c:	mov	x19, x1
    2ca0:	bl	2910 <PyMem_Malloc@plt>
    2ca4:	cbz	x0, 2cec <PyInit__xxsubinterpreters@@Base+0x2d8>
    2ca8:	ldr	x9, [x20, #16]
    2cac:	mov	x8, x0
    2cb0:	adrp	x10, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2cb4:	mov	w0, wzr
    2cb8:	str	x9, [x8]
    2cbc:	ldr	x9, [x20, #24]
    2cc0:	str	x9, [x8, #8]
    2cc4:	str	x8, [x19]
    2cc8:	ldr	x8, [x20]
    2ccc:	ldr	x10, [x10, #3960]
    2cd0:	adrp	x9, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2cd4:	add	x9, x9, #0xd20
    2cd8:	add	x8, x8, #0x1
    2cdc:	str	x8, [x20]
    2ce0:	str	x20, [x19, #8]
    2ce4:	stp	x9, x10, [x19, #24]
    2ce8:	b	2cf0 <PyInit__xxsubinterpreters@@Base+0x2dc>
    2cec:	mov	w0, #0xffffffff            	// #-1
    2cf0:	ldp	x20, x19, [sp, #16]
    2cf4:	ldp	x29, x30, [sp], #32
    2cf8:	ret
    2cfc:	sub	sp, sp, #0x30
    2d00:	stp	x29, x30, [sp, #16]
    2d04:	stp	x20, x19, [sp, #32]
    2d08:	add	x29, sp, #0x10
    2d0c:	ldp	x8, x20, [x0, #8]
    2d10:	ldr	x19, [x0, #32]
    2d14:	ldr	x8, [x8, #320]
    2d18:	blr	x8
    2d1c:	ldr	x0, [x19]
    2d20:	mov	w1, #0x1                   	// #1
    2d24:	bl	2640 <PyThread_acquire_lock@plt>
    2d28:	ldr	x1, [x19, #8]
    2d2c:	cbz	x1, 2d88 <PyInit__xxsubinterpreters@@Base+0x374>
    2d30:	ldr	x8, [x1]
    2d34:	cmp	x8, x20
    2d38:	b.ne	2d44 <PyInit__xxsubinterpreters@@Base+0x330>  // b.any
    2d3c:	mov	x2, xzr
    2d40:	b	2d5c <PyInit__xxsubinterpreters@@Base+0x348>
    2d44:	mov	x2, x1
    2d48:	ldr	x1, [x1, #16]
    2d4c:	cbz	x1, 2d88 <PyInit__xxsubinterpreters@@Base+0x374>
    2d50:	ldr	x8, [x1]
    2d54:	cmp	x8, x20
    2d58:	b.ne	2d44 <PyInit__xxsubinterpreters@@Base+0x330>  // b.any
    2d5c:	ldr	x8, [x1, #24]
    2d60:	subs	x8, x8, #0x1
    2d64:	str	x8, [x1, #24]
    2d68:	b.ne	2d88 <PyInit__xxsubinterpreters@@Base+0x374>  // b.any
    2d6c:	add	x3, sp, #0x8
    2d70:	mov	x0, x19
    2d74:	str	xzr, [sp, #8]
    2d78:	bl	2ffc <PyInit__xxsubinterpreters@@Base+0x5e8>
    2d7c:	ldr	x0, [sp, #8]
    2d80:	cbz	x0, 2d88 <PyInit__xxsubinterpreters@@Base+0x374>
    2d84:	bl	3058 <PyInit__xxsubinterpreters@@Base+0x644>
    2d88:	ldr	x0, [x19]
    2d8c:	bl	27b0 <PyThread_release_lock@plt>
    2d90:	ldp	x20, x19, [sp, #32]
    2d94:	ldp	x29, x30, [sp, #16]
    2d98:	add	sp, sp, #0x30
    2d9c:	ret
    2da0:	stp	x29, x30, [sp, #-32]!
    2da4:	str	x19, [sp, #16]
    2da8:	mov	x29, sp
    2dac:	mov	x19, x0
    2db0:	ldr	x0, [x0, #8]
    2db4:	bl	2630 <_PyType_Name@plt>
    2db8:	ldr	w8, [x19, #24]
    2dbc:	adrp	x9, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2dc0:	adrp	x10, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2dc4:	add	x9, x9, #0xedb
    2dc8:	add	x10, x10, #0xec8
    2dcc:	adrp	x11, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2dd0:	ldr	x2, [x19, #16]
    2dd4:	cmn	w8, #0x1
    2dd8:	ldr	x19, [sp, #16]
    2ddc:	add	x11, x11, #0xeb5
    2de0:	csel	x9, x10, x9, eq  // eq = none
    2de4:	cmp	w8, #0x1
    2de8:	csel	x8, x11, x9, eq  // eq = none
    2dec:	mov	x1, x0
    2df0:	mov	x0, x8
    2df4:	ldp	x29, x30, [sp], #32
    2df8:	b	24f0 <PyUnicode_FromFormat@plt>
    2dfc:	stp	x29, x30, [sp, #-32]!
    2e00:	stp	x20, x19, [sp, #16]
    2e04:	mov	x29, sp
    2e08:	ldr	x0, [x0, #16]
    2e0c:	bl	28e0 <PyLong_FromLongLong@plt>
    2e10:	cbz	x0, 2e3c <PyInit__xxsubinterpreters@@Base+0x428>
    2e14:	mov	x20, x0
    2e18:	bl	27a0 <PyObject_Hash@plt>
    2e1c:	ldr	x8, [x20]
    2e20:	mov	x19, x0
    2e24:	subs	x8, x8, #0x1
    2e28:	str	x8, [x20]
    2e2c:	b.ne	2e40 <PyInit__xxsubinterpreters@@Base+0x42c>  // b.any
    2e30:	mov	x0, x20
    2e34:	bl	25e0 <_Py_Dealloc@plt>
    2e38:	b	2e40 <PyInit__xxsubinterpreters@@Base+0x42c>
    2e3c:	mov	x19, #0xffffffffffffffff    	// #-1
    2e40:	mov	x0, x19
    2e44:	ldp	x20, x19, [sp, #16]
    2e48:	ldp	x29, x30, [sp], #32
    2e4c:	ret
    2e50:	ldr	x1, [x0, #16]
    2e54:	adrp	x0, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2e58:	add	x0, x0, #0xee3
    2e5c:	b	24f0 <PyUnicode_FromFormat@plt>
    2e60:	sub	sp, sp, #0x40
    2e64:	stp	x29, x30, [sp, #16]
    2e68:	stp	x22, x21, [sp, #32]
    2e6c:	stp	x20, x19, [sp, #48]
    2e70:	add	x29, sp, #0x10
    2e74:	orr	w8, w2, #0x1
    2e78:	cmp	w8, #0x3
    2e7c:	b.ne	2f88 <PyInit__xxsubinterpreters@@Base+0x574>  // b.any
    2e80:	mov	x20, x0
    2e84:	ldr	x0, [x0, #8]
    2e88:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2e8c:	add	x22, x22, #0x230
    2e90:	mov	w19, w2
    2e94:	mov	x21, x1
    2e98:	cmp	x0, x22
    2e9c:	b.eq	2eb0 <PyInit__xxsubinterpreters@@Base+0x49c>  // b.none
    2ea0:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ea4:	add	x1, x1, #0x230
    2ea8:	bl	28a0 <PyType_IsSubtype@plt>
    2eac:	cbz	w0, 2f88 <PyInit__xxsubinterpreters@@Base+0x574>
    2eb0:	ldr	x0, [x21, #8]
    2eb4:	cmp	x0, x22
    2eb8:	b.eq	2ecc <PyInit__xxsubinterpreters@@Base+0x4b8>  // b.none
    2ebc:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ec0:	add	x1, x1, #0x230
    2ec4:	bl	28a0 <PyType_IsSubtype@plt>
    2ec8:	cbz	w0, 2f34 <PyInit__xxsubinterpreters@@Base+0x520>
    2ecc:	ldr	w8, [x20, #24]
    2ed0:	ldr	w9, [x21, #24]
    2ed4:	cmp	w8, w9
    2ed8:	b.ne	2f20 <PyInit__xxsubinterpreters@@Base+0x50c>  // b.any
    2edc:	ldr	x8, [x20, #16]
    2ee0:	ldr	x9, [x21, #16]
    2ee4:	cmp	x8, x9
    2ee8:	cset	w8, eq  // eq = none
    2eec:	cmp	w19, #0x3
    2ef0:	cset	w9, ne  // ne = any
    2ef4:	cmp	w19, #0x2
    2ef8:	cset	w10, eq  // eq = none
    2efc:	cmp	w8, #0x0
    2f00:	cset	w8, ne  // ne = any
    2f04:	and	w10, w10, w8
    2f08:	orr	w8, w9, w8
    2f0c:	cmp	w10, w8
    2f10:	b.eq	2f28 <PyInit__xxsubinterpreters@@Base+0x514>  // b.none
    2f14:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f18:	ldr	x19, [x19, #4032]
    2f1c:	b	2f90 <PyInit__xxsubinterpreters@@Base+0x57c>
    2f20:	cmp	w19, #0x3
    2f24:	b.ne	2f14 <PyInit__xxsubinterpreters@@Base+0x500>  // b.any
    2f28:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f2c:	ldr	x19, [x19, #4056]
    2f30:	b	2f90 <PyInit__xxsubinterpreters@@Base+0x57c>
    2f34:	ldr	x8, [x21, #8]
    2f38:	ldrb	w8, [x8, #171]
    2f3c:	tbnz	w8, #0, 2fb4 <PyInit__xxsubinterpreters@@Base+0x5a0>
    2f40:	mov	x0, x21
    2f44:	bl	2880 <PyNumber_Check@plt>
    2f48:	cbz	w0, 2f88 <PyInit__xxsubinterpreters@@Base+0x574>
    2f4c:	ldr	x0, [x20, #16]
    2f50:	bl	28e0 <PyLong_FromLongLong@plt>
    2f54:	cbz	x0, 2fec <PyInit__xxsubinterpreters@@Base+0x5d8>
    2f58:	mov	x1, x21
    2f5c:	mov	w2, w19
    2f60:	mov	x20, x0
    2f64:	bl	2650 <PyObject_RichCompare@plt>
    2f68:	ldr	x8, [x20]
    2f6c:	mov	x19, x0
    2f70:	subs	x8, x8, #0x1
    2f74:	str	x8, [x20]
    2f78:	b.ne	2f9c <PyInit__xxsubinterpreters@@Base+0x588>  // b.any
    2f7c:	mov	x0, x20
    2f80:	bl	25e0 <_Py_Dealloc@plt>
    2f84:	b	2f9c <PyInit__xxsubinterpreters@@Base+0x588>
    2f88:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f8c:	ldr	x19, [x19, #3992]
    2f90:	ldr	x8, [x19]
    2f94:	add	x8, x8, #0x1
    2f98:	str	x8, [x19]
    2f9c:	mov	x0, x19
    2fa0:	ldp	x20, x19, [sp, #48]
    2fa4:	ldp	x22, x21, [sp, #32]
    2fa8:	ldp	x29, x30, [sp, #16]
    2fac:	add	sp, sp, #0x40
    2fb0:	ret
    2fb4:	sub	x1, x29, #0x4
    2fb8:	mov	x0, x21
    2fbc:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    2fc0:	cmn	x0, #0x1
    2fc4:	b.eq	2fe4 <PyInit__xxsubinterpreters@@Base+0x5d0>  // b.none
    2fc8:	mov	w8, wzr
    2fcc:	tbnz	x0, #63, 2eec <PyInit__xxsubinterpreters@@Base+0x4d8>
    2fd0:	ldur	w9, [x29, #-4]
    2fd4:	cbnz	w9, 2eec <PyInit__xxsubinterpreters@@Base+0x4d8>
    2fd8:	ldr	x8, [x20, #16]
    2fdc:	cmp	x8, x0
    2fe0:	b	2ee8 <PyInit__xxsubinterpreters@@Base+0x4d4>
    2fe4:	bl	2730 <PyErr_Occurred@plt>
    2fe8:	cbz	x0, 2ff4 <PyInit__xxsubinterpreters@@Base+0x5e0>
    2fec:	mov	x19, xzr
    2ff0:	b	2f9c <PyInit__xxsubinterpreters@@Base+0x588>
    2ff4:	mov	w8, wzr
    2ff8:	b	2eec <PyInit__xxsubinterpreters@@Base+0x4d8>
    2ffc:	stp	x29, x30, [sp, #-32]!
    3000:	str	x19, [sp, #16]
    3004:	mov	x29, sp
    3008:	ldr	x9, [x0, #8]!
    300c:	ldr	x10, [x1, #16]
    3010:	add	x8, x2, #0x10
    3014:	mov	x19, x1
    3018:	cmp	x9, x1
    301c:	csel	x8, x0, x8, eq  // eq = none
    3020:	str	x10, [x8]
    3024:	ldr	x8, [x0, #8]
    3028:	sub	x8, x8, #0x1
    302c:	str	x8, [x0, #8]
    3030:	cbz	x3, 303c <PyInit__xxsubinterpreters@@Base+0x628>
    3034:	ldr	x8, [x19, #8]
    3038:	str	x8, [x3]
    303c:	ldr	x0, [x19, #8]
    3040:	cbz	x0, 3048 <PyInit__xxsubinterpreters@@Base+0x634>
    3044:	bl	30f4 <PyInit__xxsubinterpreters@@Base+0x6e0>
    3048:	mov	x0, x19
    304c:	ldr	x19, [sp, #16]
    3050:	ldp	x29, x30, [sp], #32
    3054:	b	2590 <PyMem_Free@plt>
    3058:	stp	x29, x30, [sp, #-48]!
    305c:	str	x21, [sp, #16]
    3060:	stp	x20, x19, [sp, #32]
    3064:	mov	x29, sp
    3068:	mov	x19, x0
    306c:	bl	30f4 <PyInit__xxsubinterpreters@@Base+0x6e0>
    3070:	ldr	x0, [x19]
    3074:	mov	w1, #0x1                   	// #1
    3078:	bl	2640 <PyThread_acquire_lock@plt>
    307c:	ldr	x0, [x19, #8]
    3080:	bl	3130 <PyInit__xxsubinterpreters@@Base+0x71c>
    3084:	ldr	x20, [x19, #16]
    3088:	ldr	x0, [x20, #16]
    308c:	cbz	x0, 30a0 <PyInit__xxsubinterpreters@@Base+0x68c>
    3090:	ldr	x21, [x0]
    3094:	bl	2590 <PyMem_Free@plt>
    3098:	mov	x0, x21
    309c:	cbnz	x21, 3090 <PyInit__xxsubinterpreters@@Base+0x67c>
    30a0:	ldr	x0, [x20, #24]
    30a4:	str	xzr, [x20, #16]
    30a8:	str	xzr, [x20]
    30ac:	cbz	x0, 30c0 <PyInit__xxsubinterpreters@@Base+0x6ac>
    30b0:	ldr	x21, [x0]
    30b4:	bl	2590 <PyMem_Free@plt>
    30b8:	mov	x0, x21
    30bc:	cbnz	x21, 30b0 <PyInit__xxsubinterpreters@@Base+0x69c>
    30c0:	mov	x0, x20
    30c4:	str	xzr, [x20, #24]
    30c8:	str	xzr, [x20, #8]
    30cc:	bl	2590 <PyMem_Free@plt>
    30d0:	ldr	x0, [x19]
    30d4:	bl	27b0 <PyThread_release_lock@plt>
    30d8:	ldr	x0, [x19]
    30dc:	bl	2930 <PyThread_free_lock@plt>
    30e0:	mov	x0, x19
    30e4:	ldp	x20, x19, [sp, #32]
    30e8:	ldr	x21, [sp, #16]
    30ec:	ldp	x29, x30, [sp], #48
    30f0:	b	2590 <PyMem_Free@plt>
    30f4:	stp	x29, x30, [sp, #-32]!
    30f8:	str	x19, [sp, #16]
    30fc:	mov	x29, sp
    3100:	mov	x19, x0
    3104:	ldr	x0, [x0]
    3108:	mov	w1, #0x1                   	// #1
    310c:	bl	2640 <PyThread_acquire_lock@plt>
    3110:	ldr	x0, [x19, #32]
    3114:	cbz	x0, 3120 <PyInit__xxsubinterpreters@@Base+0x70c>
    3118:	bl	2590 <PyMem_Free@plt>
    311c:	str	xzr, [x19, #32]
    3120:	ldr	x0, [x19]
    3124:	ldr	x19, [sp, #16]
    3128:	ldp	x29, x30, [sp], #32
    312c:	b	27b0 <PyThread_release_lock@plt>
    3130:	stp	x29, x30, [sp, #-32]!
    3134:	stp	x20, x19, [sp, #16]
    3138:	mov	x29, sp
    313c:	mov	x19, x0
    3140:	ldr	x0, [x0, #8]
    3144:	cbz	x0, 3158 <PyInit__xxsubinterpreters@@Base+0x744>
    3148:	ldr	x20, [x0, #8]
    314c:	bl	3170 <PyInit__xxsubinterpreters@@Base+0x75c>
    3150:	mov	x0, x20
    3154:	cbnz	x20, 3148 <PyInit__xxsubinterpreters@@Base+0x734>
    3158:	stp	xzr, xzr, [x19]
    315c:	str	xzr, [x19, #16]
    3160:	mov	x0, x19
    3164:	ldp	x20, x19, [sp, #16]
    3168:	ldp	x29, x30, [sp], #32
    316c:	b	2590 <PyMem_Free@plt>
    3170:	stp	x29, x30, [sp, #-32]!
    3174:	str	x19, [sp, #16]
    3178:	mov	x29, sp
    317c:	mov	x19, x0
    3180:	ldr	x0, [x0]
    3184:	cbz	x0, 3198 <PyInit__xxsubinterpreters@@Base+0x784>
    3188:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    318c:	ldr	x0, [x19]
    3190:	bl	2590 <PyMem_Free@plt>
    3194:	str	xzr, [x19]
    3198:	str	xzr, [x19, #8]
    319c:	mov	x0, x19
    31a0:	ldr	x19, [sp, #16]
    31a4:	ldp	x29, x30, [sp], #32
    31a8:	b	2590 <PyMem_Free@plt>
    31ac:	ldr	x0, [x0, #16]
    31b0:	b	28e0 <PyLong_FromLongLong@plt>
    31b4:	cbz	x1, 31d8 <PyInit__xxsubinterpreters@@Base+0x7c4>
    31b8:	ldp	x8, x9, [x0, #8]
    31bc:	ldr	w2, [x1]
    31c0:	ldr	x3, [x0, #32]
    31c4:	ldr	w5, [x0, #28]
    31c8:	mov	w4, #0x1                   	// #1
    31cc:	mov	x0, x8
    31d0:	mov	x1, x9
    31d4:	b	3210 <PyInit__xxsubinterpreters@@Base+0x7fc>
    31d8:	ldr	w8, [x0, #24]
    31dc:	cmn	w8, #0x1
    31e0:	b.eq	31f8 <PyInit__xxsubinterpreters@@Base+0x7e4>  // b.none
    31e4:	cmp	w8, #0x1
    31e8:	b.ne	3204 <PyInit__xxsubinterpreters@@Base+0x7f0>  // b.any
    31ec:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    31f0:	add	x0, x0, #0x255
    31f4:	b	2850 <PyUnicode_InternFromString@plt>
    31f8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    31fc:	add	x0, x0, #0x29e
    3200:	b	2850 <PyUnicode_InternFromString@plt>
    3204:	adrp	x0, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3208:	add	x0, x0, #0xf3d
    320c:	b	2850 <PyUnicode_InternFromString@plt>
    3210:	stp	x29, x30, [sp, #-64]!
    3214:	stp	x24, x23, [sp, #16]
    3218:	stp	x22, x21, [sp, #32]
    321c:	stp	x20, x19, [sp, #48]
    3220:	mov	x29, sp
    3224:	mov	w23, w5
    3228:	mov	w20, w4
    322c:	mov	x21, x3
    3230:	mov	w24, w2
    3234:	mov	x22, x1
    3238:	bl	2830 <_PyObject_New@plt>
    323c:	mov	x19, x0
    3240:	cbz	x0, 32e4 <PyInit__xxsubinterpreters@@Base+0x8d0>
    3244:	str	x22, [x19, #16]
    3248:	stp	w24, w23, [x19, #24]
    324c:	str	x21, [x19, #32]
    3250:	ldr	x0, [x21]
    3254:	mov	w1, #0x1                   	// #1
    3258:	bl	2640 <PyThread_acquire_lock@plt>
    325c:	ldr	x8, [x21, #8]
    3260:	cbz	x8, 3278 <PyInit__xxsubinterpreters@@Base+0x864>
    3264:	ldr	x9, [x8]
    3268:	cmp	x9, x22
    326c:	b.eq	32d0 <PyInit__xxsubinterpreters@@Base+0x8bc>  // b.none
    3270:	ldr	x8, [x8, #16]
    3274:	cbnz	x8, 3264 <PyInit__xxsubinterpreters@@Base+0x850>
    3278:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    327c:	ldr	x0, [x23, #2392]
    3280:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3284:	add	x1, x1, #0xf42
    3288:	mov	x2, x22
    328c:	bl	28c0 <PyErr_Format@plt>
    3290:	ldr	x0, [x21]
    3294:	bl	27b0 <PyThread_release_lock@plt>
    3298:	cbz	w20, 32b0 <PyInit__xxsubinterpreters@@Base+0x89c>
    329c:	ldr	x0, [x23, #2392]
    32a0:	bl	26a0 <PyErr_ExceptionMatches@plt>
    32a4:	cbz	w0, 32b0 <PyInit__xxsubinterpreters@@Base+0x89c>
    32a8:	bl	26f0 <PyErr_Clear@plt>
    32ac:	b	32e4 <PyInit__xxsubinterpreters@@Base+0x8d0>
    32b0:	ldr	x8, [x19]
    32b4:	subs	x8, x8, #0x1
    32b8:	str	x8, [x19]
    32bc:	b.ne	32c8 <PyInit__xxsubinterpreters@@Base+0x8b4>  // b.any
    32c0:	mov	x0, x19
    32c4:	bl	25e0 <_Py_Dealloc@plt>
    32c8:	mov	x19, xzr
    32cc:	b	32e4 <PyInit__xxsubinterpreters@@Base+0x8d0>
    32d0:	ldr	x9, [x8, #24]
    32d4:	add	x9, x9, #0x1
    32d8:	str	x9, [x8, #24]
    32dc:	ldr	x0, [x21]
    32e0:	bl	27b0 <PyThread_release_lock@plt>
    32e4:	mov	x0, x19
    32e8:	ldp	x20, x19, [sp, #48]
    32ec:	ldp	x22, x21, [sp, #32]
    32f0:	ldp	x24, x23, [sp, #16]
    32f4:	ldp	x29, x30, [sp], #64
    32f8:	ret
    32fc:	stp	x29, x30, [sp, #-32]!
    3300:	stp	x20, x19, [sp, #16]
    3304:	mov	x29, sp
    3308:	mov	x0, x1
    330c:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3310:	add	x1, x1, #0xf88
    3314:	mov	x2, xzr
    3318:	mov	x3, xzr
    331c:	bl	2720 <PyArg_UnpackTuple@plt>
    3320:	cbz	w0, 339c <PyInit__xxsubinterpreters@@Base+0x988>
    3324:	mov	x0, xzr
    3328:	bl	2920 <PyThreadState_Swap@plt>
    332c:	mov	x20, x0
    3330:	bl	26b0 <Py_NewInterpreter@plt>
    3334:	mov	x19, x0
    3338:	mov	x0, x20
    333c:	bl	2920 <PyThreadState_Swap@plt>
    3340:	cbz	x19, 3364 <PyInit__xxsubinterpreters@@Base+0x950>
    3344:	ldr	x0, [x19, #16]
    3348:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    334c:	cbz	x0, 3380 <PyInit__xxsubinterpreters@@Base+0x96c>
    3350:	mov	x20, x0
    3354:	ldr	x0, [x19, #16]
    3358:	mov	w1, #0x1                   	// #1
    335c:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    3360:	b	33a0 <PyInit__xxsubinterpreters@@Base+0x98c>
    3364:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3368:	ldr	x8, [x8, #4000]
    336c:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3370:	add	x1, x1, #0xfac
    3374:	ldr	x0, [x8]
    3378:	bl	2670 <PyErr_SetString@plt>
    337c:	b	339c <PyInit__xxsubinterpreters@@Base+0x988>
    3380:	mov	x0, x19
    3384:	bl	2920 <PyThreadState_Swap@plt>
    3388:	mov	x20, x0
    338c:	mov	x0, x19
    3390:	bl	25d0 <Py_EndInterpreter@plt>
    3394:	mov	x0, x20
    3398:	bl	2920 <PyThreadState_Swap@plt>
    339c:	mov	x20, xzr
    33a0:	mov	x0, x20
    33a4:	ldp	x20, x19, [sp, #16]
    33a8:	ldp	x29, x30, [sp], #32
    33ac:	ret
    33b0:	sub	sp, sp, #0x30
    33b4:	stp	x29, x30, [sp, #16]
    33b8:	stp	x20, x19, [sp, #32]
    33bc:	add	x29, sp, #0x10
    33c0:	mov	x8, x2
    33c4:	adrp	x2, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    33c8:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    33cc:	mov	x0, x1
    33d0:	add	x2, x2, #0xfc8
    33d4:	add	x3, x3, #0x820
    33d8:	add	x4, sp, #0x8
    33dc:	mov	x1, x8
    33e0:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    33e4:	cbz	w0, 3468 <PyInit__xxsubinterpreters@@Base+0xa54>
    33e8:	ldr	x0, [sp, #8]
    33ec:	bl	2550 <_PyInterpreterID_LookUp@plt>
    33f0:	cbz	x0, 346c <PyInit__xxsubinterpreters@@Base+0xa58>
    33f4:	mov	x19, x0
    33f8:	bl	2800 <_PyInterpreterState_Get@plt>
    33fc:	cbz	x0, 346c <PyInit__xxsubinterpreters@@Base+0xa58>
    3400:	cmp	x19, x0
    3404:	b.eq	3450 <PyInit__xxsubinterpreters@@Base+0xa3c>  // b.none
    3408:	mov	x0, x19
    340c:	bl	4818 <PyInit__xxsubinterpreters@@Base+0x1e04>
    3410:	tbnz	w0, #31, 3468 <PyInit__xxsubinterpreters@@Base+0xa54>
    3414:	mov	x0, x19
    3418:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    341c:	mov	x19, x0
    3420:	bl	2920 <PyThreadState_Swap@plt>
    3424:	mov	x20, x0
    3428:	mov	x0, x19
    342c:	bl	25d0 <Py_EndInterpreter@plt>
    3430:	mov	x0, x20
    3434:	bl	2920 <PyThreadState_Swap@plt>
    3438:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    343c:	ldr	x0, [x0, #4048]
    3440:	ldr	x8, [x0]
    3444:	add	x8, x8, #0x1
    3448:	str	x8, [x0]
    344c:	b	346c <PyInit__xxsubinterpreters@@Base+0xa58>
    3450:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3454:	ldr	x8, [x8, #4000]
    3458:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    345c:	add	x1, x1, #0xfd2
    3460:	ldr	x0, [x8]
    3464:	bl	2670 <PyErr_SetString@plt>
    3468:	mov	x0, xzr
    346c:	ldp	x20, x19, [sp, #32]
    3470:	ldp	x29, x30, [sp, #16]
    3474:	add	sp, sp, #0x30
    3478:	ret
    347c:	stp	x29, x30, [sp, #-48]!
    3480:	stp	x22, x21, [sp, #16]
    3484:	stp	x20, x19, [sp, #32]
    3488:	mov	x29, sp
    348c:	mov	x0, xzr
    3490:	bl	2500 <PyList_New@plt>
    3494:	mov	x19, x0
    3498:	cbz	x0, 3518 <PyInit__xxsubinterpreters@@Base+0xb04>
    349c:	bl	28f0 <PyInterpreterState_Head@plt>
    34a0:	cbz	x0, 3518 <PyInit__xxsubinterpreters@@Base+0xb04>
    34a4:	mov	x20, x0
    34a8:	mov	x0, x20
    34ac:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    34b0:	cbz	x0, 34fc <PyInit__xxsubinterpreters@@Base+0xae8>
    34b4:	mov	x21, x0
    34b8:	mov	x0, x19
    34bc:	mov	x1, xzr
    34c0:	mov	x2, x21
    34c4:	bl	2580 <PyList_Insert@plt>
    34c8:	ldr	x8, [x21]
    34cc:	mov	w22, w0
    34d0:	subs	x8, x8, #0x1
    34d4:	str	x8, [x21]
    34d8:	b.ne	34e4 <PyInit__xxsubinterpreters@@Base+0xad0>  // b.any
    34dc:	mov	x0, x21
    34e0:	bl	25e0 <_Py_Dealloc@plt>
    34e4:	tbnz	w22, #31, 34fc <PyInit__xxsubinterpreters@@Base+0xae8>
    34e8:	mov	x0, x20
    34ec:	bl	25f0 <PyInterpreterState_Next@plt>
    34f0:	mov	x20, x0
    34f4:	cbnz	x0, 34a8 <PyInit__xxsubinterpreters@@Base+0xa94>
    34f8:	b	3518 <PyInit__xxsubinterpreters@@Base+0xb04>
    34fc:	ldr	x8, [x19]
    3500:	subs	x8, x8, #0x1
    3504:	str	x8, [x19]
    3508:	b.ne	3514 <PyInit__xxsubinterpreters@@Base+0xb00>  // b.any
    350c:	mov	x0, x19
    3510:	bl	25e0 <_Py_Dealloc@plt>
    3514:	mov	x19, xzr
    3518:	mov	x0, x19
    351c:	ldp	x20, x19, [sp, #32]
    3520:	ldp	x22, x21, [sp, #16]
    3524:	ldp	x29, x30, [sp], #48
    3528:	ret
    352c:	stp	x29, x30, [sp, #-16]!
    3530:	mov	x29, sp
    3534:	bl	2800 <_PyInterpreterState_Get@plt>
    3538:	cbz	x0, 3544 <PyInit__xxsubinterpreters@@Base+0xb30>
    353c:	ldp	x29, x30, [sp], #16
    3540:	b	2620 <_PyInterpreterState_GetIDObject@plt>
    3544:	ldp	x29, x30, [sp], #16
    3548:	ret
    354c:	mov	x0, xzr
    3550:	b	2810 <_PyInterpreterID_New@plt>
    3554:	sub	sp, sp, #0x20
    3558:	stp	x29, x30, [sp, #16]
    355c:	add	x29, sp, #0x10
    3560:	mov	x8, x2
    3564:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3568:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    356c:	mov	x0, x1
    3570:	add	x2, x2, #0x3a
    3574:	add	x3, x3, #0x830
    3578:	add	x4, sp, #0x8
    357c:	mov	x1, x8
    3580:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3584:	cbz	w0, 35ac <PyInit__xxsubinterpreters@@Base+0xb98>
    3588:	ldr	x0, [sp, #8]
    358c:	bl	2550 <_PyInterpreterID_LookUp@plt>
    3590:	cbz	x0, 35c8 <PyInit__xxsubinterpreters@@Base+0xbb4>
    3594:	bl	4850 <PyInit__xxsubinterpreters@@Base+0x1e3c>
    3598:	tbnz	w0, #31, 35ac <PyInit__xxsubinterpreters@@Base+0xb98>
    359c:	cbz	w0, 35b4 <PyInit__xxsubinterpreters@@Base+0xba0>
    35a0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    35a4:	ldr	x0, [x0, #4056]
    35a8:	b	35bc <PyInit__xxsubinterpreters@@Base+0xba8>
    35ac:	mov	x0, xzr
    35b0:	b	35c8 <PyInit__xxsubinterpreters@@Base+0xbb4>
    35b4:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    35b8:	ldr	x0, [x0, #4032]
    35bc:	ldr	x8, [x0]
    35c0:	add	x8, x8, #0x1
    35c4:	str	x8, [x0]
    35c8:	ldp	x29, x30, [sp, #16]
    35cc:	add	sp, sp, #0x20
    35d0:	ret
    35d4:	sub	sp, sp, #0xa0
    35d8:	stp	x29, x30, [sp, #64]
    35dc:	stp	x28, x27, [sp, #80]
    35e0:	stp	x26, x25, [sp, #96]
    35e4:	stp	x24, x23, [sp, #112]
    35e8:	stp	x22, x21, [sp, #128]
    35ec:	stp	x20, x19, [sp, #144]
    35f0:	add	x29, sp, #0x40
    35f4:	mov	x8, x2
    35f8:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    35fc:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3600:	mov	x0, x1
    3604:	add	x2, x2, #0x55
    3608:	add	x3, x3, #0x840
    360c:	add	x4, sp, #0x20
    3610:	add	x5, sp, #0x18
    3614:	add	x6, sp, #0x10
    3618:	mov	x1, x8
    361c:	str	xzr, [sp, #16]
    3620:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3624:	cbz	w0, 36d8 <PyInit__xxsubinterpreters@@Base+0xcc4>
    3628:	ldr	x0, [sp, #32]
    362c:	bl	2550 <_PyInterpreterID_LookUp@plt>
    3630:	cbz	x0, 36dc <PyInit__xxsubinterpreters@@Base+0xcc8>
    3634:	mov	x22, x0
    3638:	ldr	x0, [sp, #24]
    363c:	add	x1, sp, #0x8
    3640:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    3644:	cbz	x0, 36dc <PyInit__xxsubinterpreters@@Base+0xcc8>
    3648:	mov	x21, x0
    364c:	bl	2530 <strlen@plt>
    3650:	ldr	x8, [sp, #8]
    3654:	cmp	x0, x8
    3658:	b.ne	36c0 <PyInit__xxsubinterpreters@@Base+0xcac>  // b.any
    365c:	ldr	x20, [sp, #16]
    3660:	mov	x0, x22
    3664:	bl	4818 <PyInit__xxsubinterpreters@@Base+0x1e04>
    3668:	tbnz	w0, #31, 36d8 <PyInit__xxsubinterpreters@@Base+0xcc4>
    366c:	cbz	x20, 3798 <PyInit__xxsubinterpreters@@Base+0xd84>
    3670:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3674:	ldr	x8, [x8, #4048]
    3678:	cmp	x20, x8
    367c:	b.eq	3798 <PyInit__xxsubinterpreters@@Base+0xd84>  // b.none
    3680:	mov	x0, x20
    3684:	bl	2540 <PyDict_Size@plt>
    3688:	cbz	x0, 3798 <PyInit__xxsubinterpreters@@Base+0xd84>
    368c:	mov	x23, x0
    3690:	mov	w0, #0x10                  	// #16
    3694:	bl	2910 <PyMem_Malloc@plt>
    3698:	cbz	x0, 36fc <PyInit__xxsubinterpreters@@Base+0xce8>
    369c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    36a0:	movk	x8, #0xaaab
    36a4:	movk	x8, #0x2aa, lsl #48
    36a8:	mov	x19, x0
    36ac:	cmp	x23, x8
    36b0:	str	x23, [x0]
    36b4:	b.cc	3704 <PyInit__xxsubinterpreters@@Base+0xcf0>  // b.lo, b.ul, b.last
    36b8:	str	xzr, [x19, #8]
    36bc:	b	3770 <PyInit__xxsubinterpreters@@Base+0xd5c>
    36c0:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    36c4:	ldr	x8, [x8, #4016]
    36c8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    36cc:	add	x1, x1, #0x65
    36d0:	ldr	x0, [x8]
    36d4:	bl	2670 <PyErr_SetString@plt>
    36d8:	mov	x0, xzr
    36dc:	ldp	x20, x19, [sp, #144]
    36e0:	ldp	x22, x21, [sp, #128]
    36e4:	ldp	x24, x23, [sp, #112]
    36e8:	ldp	x26, x25, [sp, #96]
    36ec:	ldp	x28, x27, [sp, #80]
    36f0:	ldp	x29, x30, [sp, #64]
    36f4:	add	sp, sp, #0xa0
    36f8:	ret
    36fc:	bl	2600 <PyErr_NoMemory@plt>
    3700:	b	3798 <PyInit__xxsubinterpreters@@Base+0xd84>
    3704:	add	x8, x23, x23, lsl #1
    3708:	lsl	x0, x8, #4
    370c:	bl	2910 <PyMem_Malloc@plt>
    3710:	str	x0, [x19, #8]
    3714:	cbz	x0, 3770 <PyInit__xxsubinterpreters@@Base+0xd5c>
    3718:	mov	x26, xzr
    371c:	stur	xzr, [x29, #-8]
    3720:	sub	x1, x29, #0x8
    3724:	sub	x2, x29, #0x10
    3728:	sub	x3, x29, #0x18
    372c:	mov	x0, x20
    3730:	bl	27d0 <PyDict_Next@plt>
    3734:	cbz	w0, 3788 <PyInit__xxsubinterpreters@@Base+0xd74>
    3738:	ldp	x24, x0, [x29, #-24]
    373c:	ldr	x25, [x19, #8]
    3740:	bl	4918 <PyInit__xxsubinterpreters@@Base+0x1f04>
    3744:	str	x0, [x25, x26]
    3748:	cbz	x0, 3788 <PyInit__xxsubinterpreters@@Base+0xd74>
    374c:	add	x25, x25, x26
    3750:	add	x1, x25, #0x8
    3754:	mov	x0, x24
    3758:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    375c:	cbnz	w0, 3780 <PyInit__xxsubinterpreters@@Base+0xd6c>
    3760:	subs	x23, x23, #0x1
    3764:	add	x26, x26, #0x30
    3768:	b.ne	3720 <PyInit__xxsubinterpreters@@Base+0xd0c>  // b.any
    376c:	b	3788 <PyInit__xxsubinterpreters@@Base+0xd74>
    3770:	bl	2600 <PyErr_NoMemory@plt>
    3774:	mov	x0, x19
    3778:	bl	2590 <PyMem_Free@plt>
    377c:	b	3798 <PyInit__xxsubinterpreters@@Base+0xd84>
    3780:	mov	x0, x25
    3784:	bl	4960 <PyInit__xxsubinterpreters@@Base+0x1f4c>
    3788:	bl	2730 <PyErr_Occurred@plt>
    378c:	cbz	x0, 3914 <PyInit__xxsubinterpreters@@Base+0xf00>
    3790:	mov	x0, x19
    3794:	bl	48b4 <PyInit__xxsubinterpreters@@Base+0x1ea0>
    3798:	bl	2730 <PyErr_Occurred@plt>
    379c:	mov	x8, x0
    37a0:	mov	x0, xzr
    37a4:	cbnz	x8, 36dc <PyInit__xxsubinterpreters@@Base+0xcc8>
    37a8:	mov	x19, xzr
    37ac:	mov	w26, #0x1                   	// #1
    37b0:	bl	2800 <_PyInterpreterState_Get@plt>
    37b4:	cmp	x0, x22
    37b8:	b.eq	37d0 <PyInit__xxsubinterpreters@@Base+0xdbc>  // b.none
    37bc:	mov	x0, x22
    37c0:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    37c4:	bl	2920 <PyThreadState_Swap@plt>
    37c8:	mov	x20, x0
    37cc:	b	37d4 <PyInit__xxsubinterpreters@@Base+0xdc0>
    37d0:	mov	x20, xzr
    37d4:	mov	x0, x22
    37d8:	stp	xzr, xzr, [x29, #-16]
    37dc:	stur	xzr, [x29, #-24]
    37e0:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    37e4:	cbz	x0, 394c <PyInit__xxsubinterpreters@@Base+0xf38>
    37e8:	mov	x23, x0
    37ec:	bl	28d0 <PyModule_GetDict@plt>
    37f0:	ldr	x8, [x23]
    37f4:	mov	x22, x0
    37f8:	subs	x8, x8, #0x1
    37fc:	str	x8, [x23]
    3800:	b.ne	380c <PyInit__xxsubinterpreters@@Base+0xdf8>  // b.any
    3804:	mov	x0, x23
    3808:	bl	25e0 <_Py_Dealloc@plt>
    380c:	cbz	x22, 394c <PyInit__xxsubinterpreters@@Base+0xf38>
    3810:	ldr	x8, [x22]
    3814:	add	x8, x8, #0x1
    3818:	str	x8, [x22]
    381c:	tbnz	w26, #0, 38b8 <PyInit__xxsubinterpreters@@Base+0xea4>
    3820:	ldr	x8, [x19]
    3824:	cmp	x8, #0x1
    3828:	b.lt	38b8 <PyInit__xxsubinterpreters@@Base+0xea4>  // b.tstop
    382c:	mov	x27, xzr
    3830:	mov	x28, xzr
    3834:	ldr	x24, [x19, #8]
    3838:	ldr	x0, [x24, x27]
    383c:	bl	2840 <PyUnicode_FromString@plt>
    3840:	cbz	x0, 3934 <PyInit__xxsubinterpreters@@Base+0xf20>
    3844:	add	x8, x24, x27
    3848:	mov	x23, x0
    384c:	add	x0, x8, #0x8
    3850:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    3854:	cbz	x0, 391c <PyInit__xxsubinterpreters@@Base+0xf08>
    3858:	mov	x24, x0
    385c:	mov	x0, x22
    3860:	mov	x1, x23
    3864:	mov	x2, x24
    3868:	bl	2870 <PyDict_SetItem@plt>
    386c:	ldr	x8, [x23]
    3870:	mov	w25, w0
    3874:	subs	x8, x8, #0x1
    3878:	str	x8, [x23]
    387c:	b.ne	3888 <PyInit__xxsubinterpreters@@Base+0xe74>  // b.any
    3880:	mov	x0, x23
    3884:	bl	25e0 <_Py_Dealloc@plt>
    3888:	ldr	x8, [x24]
    388c:	subs	x8, x8, #0x1
    3890:	str	x8, [x24]
    3894:	b.ne	38a0 <PyInit__xxsubinterpreters@@Base+0xe8c>  // b.any
    3898:	mov	x0, x24
    389c:	bl	25e0 <_Py_Dealloc@plt>
    38a0:	cbnz	w25, 3934 <PyInit__xxsubinterpreters@@Base+0xf20>
    38a4:	ldr	x8, [x19]
    38a8:	add	x28, x28, #0x1
    38ac:	add	x27, x27, #0x30
    38b0:	cmp	x28, x8
    38b4:	b.lt	3834 <PyInit__xxsubinterpreters@@Base+0xe20>  // b.tstop
    38b8:	mov	w1, #0x101                 	// #257
    38bc:	mov	x0, x21
    38c0:	mov	x2, x22
    38c4:	mov	x3, x22
    38c8:	mov	x4, xzr
    38cc:	bl	2760 <PyRun_StringFlags@plt>
    38d0:	ldr	x8, [x22]
    38d4:	mov	x21, x0
    38d8:	subs	x8, x8, #0x1
    38dc:	str	x8, [x22]
    38e0:	b.ne	38ec <PyInit__xxsubinterpreters@@Base+0xed8>  // b.any
    38e4:	mov	x0, x22
    38e8:	bl	25e0 <_Py_Dealloc@plt>
    38ec:	cbz	x21, 394c <PyInit__xxsubinterpreters@@Base+0xf38>
    38f0:	ldr	x8, [x21]
    38f4:	subs	x8, x8, #0x1
    38f8:	str	x8, [x21]
    38fc:	b.ne	3908 <PyInit__xxsubinterpreters@@Base+0xef4>  // b.any
    3900:	mov	x0, x21
    3904:	bl	25e0 <_Py_Dealloc@plt>
    3908:	mov	x21, xzr
    390c:	mov	w22, wzr
    3910:	b	3ac0 <PyInit__xxsubinterpreters@@Base+0x10ac>
    3914:	mov	w26, wzr
    3918:	b	37b0 <PyInit__xxsubinterpreters@@Base+0xd9c>
    391c:	ldr	x8, [x23]
    3920:	subs	x8, x8, #0x1
    3924:	str	x8, [x23]
    3928:	b.ne	3934 <PyInit__xxsubinterpreters@@Base+0xf20>  // b.any
    392c:	mov	x0, x23
    3930:	bl	25e0 <_Py_Dealloc@plt>
    3934:	ldr	x8, [x22]
    3938:	subs	x8, x8, #0x1
    393c:	str	x8, [x22]
    3940:	b.ne	394c <PyInit__xxsubinterpreters@@Base+0xf38>  // b.any
    3944:	mov	x0, x22
    3948:	bl	25e0 <_Py_Dealloc@plt>
    394c:	sub	x0, x29, #0x8
    3950:	sub	x1, x29, #0x10
    3954:	sub	x2, x29, #0x18
    3958:	bl	2820 <PyErr_Fetch@plt>
    395c:	ldp	x22, x23, [x29, #-16]
    3960:	mov	w0, #0x10                  	// #16
    3964:	bl	2910 <PyMem_Malloc@plt>
    3968:	mov	x21, x0
    396c:	cbz	x0, 3a14 <PyInit__xxsubinterpreters@@Base+0x1000>
    3970:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3974:	add	x0, x0, #0xc6
    3978:	mov	x1, x23
    397c:	stp	xzr, xzr, [x21]
    3980:	bl	24f0 <PyUnicode_FromFormat@plt>
    3984:	cbz	x0, 3a1c <PyInit__xxsubinterpreters@@Base+0x1008>
    3988:	mov	x23, x0
    398c:	bl	4918 <PyInit__xxsubinterpreters@@Base+0x1f04>
    3990:	str	x0, [x21]
    3994:	ldr	x8, [x23]
    3998:	subs	x8, x8, #0x1
    399c:	str	x8, [x23]
    39a0:	b.ne	39b0 <PyInit__xxsubinterpreters@@Base+0xf9c>  // b.any
    39a4:	mov	x0, x23
    39a8:	bl	25e0 <_Py_Dealloc@plt>
    39ac:	ldr	x0, [x21]
    39b0:	cbz	x0, 3a28 <PyInit__xxsubinterpreters@@Base+0x1014>
    39b4:	cbz	x22, 3a64 <PyInit__xxsubinterpreters@@Base+0x1050>
    39b8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    39bc:	add	x0, x0, #0xc6
    39c0:	mov	x1, x22
    39c4:	bl	24f0 <PyUnicode_FromFormat@plt>
    39c8:	cbz	x0, 3a44 <PyInit__xxsubinterpreters@@Base+0x1030>
    39cc:	mov	x22, x0
    39d0:	bl	4918 <PyInit__xxsubinterpreters@@Base+0x1f04>
    39d4:	str	x0, [x21, #8]
    39d8:	ldr	x8, [x22]
    39dc:	subs	x8, x8, #0x1
    39e0:	str	x8, [x22]
    39e4:	b.ne	39f4 <PyInit__xxsubinterpreters@@Base+0xfe0>  // b.any
    39e8:	mov	x0, x22
    39ec:	bl	25e0 <_Py_Dealloc@plt>
    39f0:	ldr	x0, [x21, #8]
    39f4:	cbnz	x0, 3a64 <PyInit__xxsubinterpreters@@Base+0x1050>
    39f8:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    39fc:	ldr	x8, [x8, #4008]
    3a00:	ldr	x0, [x8]
    3a04:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3a08:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3a0c:	add	x22, x22, #0x13f
    3a10:	b	3a4c <PyInit__xxsubinterpreters@@Base+0x1038>
    3a14:	bl	2600 <PyErr_NoMemory@plt>
    3a18:	b	3a64 <PyInit__xxsubinterpreters@@Base+0x1050>
    3a1c:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3a20:	add	x22, x22, #0xc9
    3a24:	b	3a4c <PyInit__xxsubinterpreters@@Base+0x1038>
    3a28:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3a2c:	ldr	x8, [x8, #4008]
    3a30:	ldr	x0, [x8]
    3a34:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3a38:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3a3c:	add	x22, x22, #0xee
    3a40:	b	3a4c <PyInit__xxsubinterpreters@@Base+0x1038>
    3a44:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3a48:	add	x22, x22, #0x11c
    3a4c:	bl	26f0 <PyErr_Clear@plt>
    3a50:	ldr	x0, [x21]
    3a54:	cbz	x0, 3a60 <PyInit__xxsubinterpreters@@Base+0x104c>
    3a58:	bl	2590 <PyMem_Free@plt>
    3a5c:	str	xzr, [x21]
    3a60:	str	x22, [x21, #8]
    3a64:	ldur	x0, [x29, #-8]
    3a68:	cbz	x0, 3a80 <PyInit__xxsubinterpreters@@Base+0x106c>
    3a6c:	ldr	x8, [x0]
    3a70:	subs	x8, x8, #0x1
    3a74:	str	x8, [x0]
    3a78:	b.ne	3a80 <PyInit__xxsubinterpreters@@Base+0x106c>  // b.any
    3a7c:	bl	25e0 <_Py_Dealloc@plt>
    3a80:	ldur	x0, [x29, #-16]
    3a84:	cbz	x0, 3a9c <PyInit__xxsubinterpreters@@Base+0x1088>
    3a88:	ldr	x8, [x0]
    3a8c:	subs	x8, x8, #0x1
    3a90:	str	x8, [x0]
    3a94:	b.ne	3a9c <PyInit__xxsubinterpreters@@Base+0x1088>  // b.any
    3a98:	bl	25e0 <_Py_Dealloc@plt>
    3a9c:	ldur	x0, [x29, #-24]
    3aa0:	cbz	x0, 3ab8 <PyInit__xxsubinterpreters@@Base+0x10a4>
    3aa4:	ldr	x8, [x0]
    3aa8:	subs	x8, x8, #0x1
    3aac:	str	x8, [x0]
    3ab0:	b.ne	3ab8 <PyInit__xxsubinterpreters@@Base+0x10a4>  // b.any
    3ab4:	bl	25e0 <_Py_Dealloc@plt>
    3ab8:	cbz	x21, 3b64 <PyInit__xxsubinterpreters@@Base+0x1150>
    3abc:	mov	w22, #0xffffffff            	// #-1
    3ac0:	cbz	x20, 3acc <PyInit__xxsubinterpreters@@Base+0x10b8>
    3ac4:	mov	x0, x20
    3ac8:	bl	2920 <PyThreadState_Swap@plt>
    3acc:	cbz	x21, 3af4 <PyInit__xxsubinterpreters@@Base+0x10e0>
    3ad0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3ad4:	ldr	x0, [x8, #2400]
    3ad8:	ldp	x2, x3, [x21]
    3adc:	cbz	x2, 3b00 <PyInit__xxsubinterpreters@@Base+0x10ec>
    3ae0:	cbz	x3, 3b0c <PyInit__xxsubinterpreters@@Base+0x10f8>
    3ae4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3ae8:	add	x1, x1, #0x16b
    3aec:	bl	28c0 <PyErr_Format@plt>
    3af0:	b	3b1c <PyInit__xxsubinterpreters@@Base+0x1108>
    3af4:	cbz	w22, 3b3c <PyInit__xxsubinterpreters@@Base+0x1128>
    3af8:	bl	2600 <PyErr_NoMemory@plt>
    3afc:	b	3b3c <PyInit__xxsubinterpreters@@Base+0x1128>
    3b00:	cbz	x3, 3b18 <PyInit__xxsubinterpreters@@Base+0x1104>
    3b04:	mov	x1, x3
    3b08:	b	3b10 <PyInit__xxsubinterpreters@@Base+0x10fc>
    3b0c:	mov	x1, x2
    3b10:	bl	2670 <PyErr_SetString@plt>
    3b14:	b	3b1c <PyInit__xxsubinterpreters@@Base+0x1108>
    3b18:	bl	2690 <PyErr_SetNone@plt>
    3b1c:	ldr	x0, [x21]
    3b20:	cbz	x0, 3b28 <PyInit__xxsubinterpreters@@Base+0x1114>
    3b24:	bl	2590 <PyMem_Free@plt>
    3b28:	ldr	x0, [x21, #8]
    3b2c:	cbz	x0, 3b34 <PyInit__xxsubinterpreters@@Base+0x1120>
    3b30:	bl	2590 <PyMem_Free@plt>
    3b34:	mov	x0, x21
    3b38:	bl	2590 <PyMem_Free@plt>
    3b3c:	tbnz	w26, #0, 3b48 <PyInit__xxsubinterpreters@@Base+0x1134>
    3b40:	mov	x0, x19
    3b44:	bl	48b4 <PyInit__xxsubinterpreters@@Base+0x1ea0>
    3b48:	cbnz	w22, 36d8 <PyInit__xxsubinterpreters@@Base+0xcc4>
    3b4c:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3b50:	ldr	x0, [x0, #4048]
    3b54:	ldr	x8, [x0]
    3b58:	add	x8, x8, #0x1
    3b5c:	str	x8, [x0]
    3b60:	b	36dc <PyInit__xxsubinterpreters@@Base+0xcc8>
    3b64:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3b68:	ldr	x8, [x8, #3976]
    3b6c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3b70:	add	x0, x0, #0x92
    3b74:	mov	w1, #0x33                  	// #51
    3b78:	ldr	x3, [x8]
    3b7c:	mov	w2, #0x1                   	// #1
    3b80:	bl	27c0 <fwrite@plt>
    3b84:	bl	26f0 <PyErr_Clear@plt>
    3b88:	b	3abc <PyInit__xxsubinterpreters@@Base+0x10a8>
    3b8c:	sub	sp, sp, #0x20
    3b90:	stp	x29, x30, [sp, #16]
    3b94:	add	x29, sp, #0x10
    3b98:	mov	x8, x2
    3b9c:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3ba0:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3ba4:	mov	x0, x1
    3ba8:	add	x2, x2, #0x176
    3bac:	add	x3, x3, #0x860
    3bb0:	add	x4, sp, #0x8
    3bb4:	mov	x1, x8
    3bb8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3bbc:	cbz	w0, 3bdc <PyInit__xxsubinterpreters@@Base+0x11c8>
    3bc0:	ldr	x0, [sp, #8]
    3bc4:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    3bc8:	cbz	w0, 3be4 <PyInit__xxsubinterpreters@@Base+0x11d0>
    3bcc:	bl	26f0 <PyErr_Clear@plt>
    3bd0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3bd4:	ldr	x0, [x0, #4032]
    3bd8:	b	3bec <PyInit__xxsubinterpreters@@Base+0x11d8>
    3bdc:	mov	x0, xzr
    3be0:	b	3bf8 <PyInit__xxsubinterpreters@@Base+0x11e4>
    3be4:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3be8:	ldr	x0, [x0, #4056]
    3bec:	ldr	x8, [x0]
    3bf0:	add	x8, x8, #0x1
    3bf4:	str	x8, [x0]
    3bf8:	ldp	x29, x30, [sp, #16]
    3bfc:	add	sp, sp, #0x20
    3c00:	ret
    3c04:	stp	x29, x30, [sp, #-48]!
    3c08:	str	x21, [sp, #16]
    3c0c:	stp	x20, x19, [sp, #32]
    3c10:	mov	x29, sp
    3c14:	mov	w0, #0x28                  	// #40
    3c18:	bl	2910 <PyMem_Malloc@plt>
    3c1c:	cbz	x0, 3d64 <PyInit__xxsubinterpreters@@Base+0x1350>
    3c20:	mov	x19, x0
    3c24:	bl	2790 <PyThread_allocate_lock@plt>
    3c28:	str	x0, [x19]
    3c2c:	cbz	x0, 3cf4 <PyInit__xxsubinterpreters@@Base+0x12e0>
    3c30:	mov	w0, #0x18                  	// #24
    3c34:	bl	2910 <PyMem_Malloc@plt>
    3c38:	cbz	x0, 3d14 <PyInit__xxsubinterpreters@@Base+0x1300>
    3c3c:	stp	xzr, xzr, [x0]
    3c40:	str	xzr, [x0, #16]
    3c44:	str	x0, [x19, #8]
    3c48:	mov	w0, #0x20                  	// #32
    3c4c:	bl	2910 <PyMem_Malloc@plt>
    3c50:	cbz	x0, 3d20 <PyInit__xxsubinterpreters@@Base+0x130c>
    3c54:	movi	v0.2d, #0x0
    3c58:	mov	w8, #0x1                   	// #1
    3c5c:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3c60:	stp	q0, q0, [x0]
    3c64:	str	x0, [x19, #16]
    3c68:	str	w8, [x19, #24]
    3c6c:	str	xzr, [x19, #32]
    3c70:	add	x21, x21, #0x930
    3c74:	ldr	x0, [x21]
    3c78:	mov	w1, #0x1                   	// #1
    3c7c:	bl	2640 <PyThread_acquire_lock@plt>
    3c80:	ldr	x20, [x21, #24]
    3c84:	tbnz	x20, #63, 3d38 <PyInit__xxsubinterpreters@@Base+0x1324>
    3c88:	add	x8, x20, #0x1
    3c8c:	adrp	x9, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3c90:	mov	w0, #0x20                  	// #32
    3c94:	str	x8, [x9, #2376]
    3c98:	bl	2910 <PyMem_Malloc@plt>
    3c9c:	cbz	x0, 3d4c <PyInit__xxsubinterpreters@@Base+0x1338>
    3ca0:	stp	x20, x19, [x0]
    3ca4:	ldr	x8, [x21, #8]
    3ca8:	stp	x8, xzr, [x0, #16]
    3cac:	ldr	x9, [x21, #16]
    3cb0:	ldr	x8, [x21]
    3cb4:	add	x9, x9, #0x1
    3cb8:	stp	x0, x9, [x21, #8]
    3cbc:	mov	x0, x8
    3cc0:	bl	27b0 <PyThread_release_lock@plt>
    3cc4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3cc8:	add	x0, x0, #0x230
    3ccc:	mov	x1, x20
    3cd0:	mov	w2, wzr
    3cd4:	mov	x3, x21
    3cd8:	mov	w4, wzr
    3cdc:	mov	w5, wzr
    3ce0:	bl	3210 <PyInit__xxsubinterpreters@@Base+0x7fc>
    3ce4:	cbnz	x0, 3d64 <PyInit__xxsubinterpreters@@Base+0x1350>
    3ce8:	mov	x0, x20
    3cec:	bl	4990 <PyInit__xxsubinterpreters@@Base+0x1f7c>
    3cf0:	b	3d60 <PyInit__xxsubinterpreters@@Base+0x134c>
    3cf4:	mov	x0, x19
    3cf8:	bl	2590 <PyMem_Free@plt>
    3cfc:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3d00:	ldr	x0, [x8, #2384]
    3d04:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3d08:	add	x1, x1, #0x185
    3d0c:	bl	2670 <PyErr_SetString@plt>
    3d10:	b	3d60 <PyInit__xxsubinterpreters@@Base+0x134c>
    3d14:	bl	2600 <PyErr_NoMemory@plt>
    3d18:	str	xzr, [x19, #8]
    3d1c:	b	3d2c <PyInit__xxsubinterpreters@@Base+0x1318>
    3d20:	ldr	x0, [x19, #8]
    3d24:	str	xzr, [x19, #16]
    3d28:	bl	3130 <PyInit__xxsubinterpreters@@Base+0x71c>
    3d2c:	mov	x0, x19
    3d30:	bl	2590 <PyMem_Free@plt>
    3d34:	b	3d60 <PyInit__xxsubinterpreters@@Base+0x134c>
    3d38:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3d3c:	ldr	x0, [x8, #2384]
    3d40:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3d44:	add	x1, x1, #0x1ac
    3d48:	bl	2670 <PyErr_SetString@plt>
    3d4c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3d50:	ldr	x0, [x8, #2352]
    3d54:	bl	27b0 <PyThread_release_lock@plt>
    3d58:	mov	x0, x19
    3d5c:	bl	3058 <PyInit__xxsubinterpreters@@Base+0x644>
    3d60:	mov	x0, xzr
    3d64:	ldp	x20, x19, [sp, #32]
    3d68:	ldr	x21, [sp, #16]
    3d6c:	ldp	x29, x30, [sp], #48
    3d70:	ret
    3d74:	sub	sp, sp, #0x20
    3d78:	stp	x29, x30, [sp, #16]
    3d7c:	add	x29, sp, #0x10
    3d80:	mov	x8, x2
    3d84:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3d88:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3d8c:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3d90:	mov	x0, x1
    3d94:	add	x2, x2, #0x1cb
    3d98:	add	x3, x3, #0x870
    3d9c:	add	x4, x4, #0xa54
    3da0:	add	x5, sp, #0x8
    3da4:	mov	x1, x8
    3da8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3dac:	cbz	w0, 3dbc <PyInit__xxsubinterpreters@@Base+0x13a8>
    3db0:	ldr	x0, [sp, #8]
    3db4:	bl	4990 <PyInit__xxsubinterpreters@@Base+0x1f7c>
    3db8:	cbz	w0, 3dc4 <PyInit__xxsubinterpreters@@Base+0x13b0>
    3dbc:	mov	x0, xzr
    3dc0:	b	3dd8 <PyInit__xxsubinterpreters@@Base+0x13c4>
    3dc4:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3dc8:	ldr	x0, [x0, #4048]
    3dcc:	ldr	x8, [x0]
    3dd0:	add	x8, x8, #0x1
    3dd4:	str	x8, [x0]
    3dd8:	ldp	x29, x30, [sp, #16]
    3ddc:	add	sp, sp, #0x20
    3de0:	ret
    3de4:	stp	x29, x30, [sp, #-64]!
    3de8:	stp	x24, x23, [sp, #16]
    3dec:	stp	x22, x21, [sp, #32]
    3df0:	stp	x20, x19, [sp, #48]
    3df4:	mov	x29, sp
    3df8:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3dfc:	add	x20, x20, #0x930
    3e00:	ldr	x0, [x20]
    3e04:	mov	w1, #0x1                   	// #1
    3e08:	bl	2640 <PyThread_acquire_lock@plt>
    3e0c:	ldr	x8, [x20, #16]
    3e10:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    3e14:	cmp	x8, x9
    3e18:	b.ne	3e38 <PyInit__xxsubinterpreters@@Base+0x1424>  // b.any
    3e1c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3e20:	ldr	x8, [x8, #4000]
    3e24:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3e28:	add	x1, x1, #0x232
    3e2c:	ldr	x0, [x8]
    3e30:	bl	2670 <PyErr_SetString@plt>
    3e34:	b	3ee0 <PyInit__xxsubinterpreters@@Base+0x14cc>
    3e38:	lsr	x9, x8, #60
    3e3c:	cbnz	x9, 3ee0 <PyInit__xxsubinterpreters@@Base+0x14cc>
    3e40:	lsl	x0, x8, #3
    3e44:	bl	2910 <PyMem_Malloc@plt>
    3e48:	cbz	x0, 3ee0 <PyInit__xxsubinterpreters@@Base+0x14cc>
    3e4c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3e50:	ldr	x8, [x8, #2360]
    3e54:	mov	x19, x0
    3e58:	cbz	x8, 3e70 <PyInit__xxsubinterpreters@@Base+0x145c>
    3e5c:	mov	x9, x19
    3e60:	ldr	x10, [x8]
    3e64:	str	x10, [x9], #8
    3e68:	ldr	x8, [x8, #16]
    3e6c:	cbnz	x8, 3e60 <PyInit__xxsubinterpreters@@Base+0x144c>
    3e70:	ldr	x0, [x20]
    3e74:	ldr	x21, [x20, #16]
    3e78:	bl	27b0 <PyThread_release_lock@plt>
    3e7c:	mov	x0, x21
    3e80:	bl	2500 <PyList_New@plt>
    3e84:	mov	x20, x0
    3e88:	cbz	x0, 3f20 <PyInit__xxsubinterpreters@@Base+0x150c>
    3e8c:	cmp	x21, #0x1
    3e90:	b.lt	3f20 <PyInit__xxsubinterpreters@@Base+0x150c>  // b.tstop
    3e94:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3e98:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3e9c:	mov	x24, xzr
    3ea0:	add	x22, x22, #0x230
    3ea4:	add	x23, x23, #0x930
    3ea8:	ldr	x1, [x19, x24, lsl #3]
    3eac:	mov	x0, x22
    3eb0:	mov	w2, wzr
    3eb4:	mov	x3, x23
    3eb8:	mov	w4, wzr
    3ebc:	mov	w5, wzr
    3ec0:	bl	3210 <PyInit__xxsubinterpreters@@Base+0x7fc>
    3ec4:	cbz	x0, 3f04 <PyInit__xxsubinterpreters@@Base+0x14f0>
    3ec8:	ldr	x8, [x20, #24]
    3ecc:	str	x0, [x8, x24, lsl #3]
    3ed0:	add	x24, x24, #0x1
    3ed4:	cmp	x21, x24
    3ed8:	b.ne	3ea8 <PyInit__xxsubinterpreters@@Base+0x1494>  // b.any
    3edc:	b	3f20 <PyInit__xxsubinterpreters@@Base+0x150c>
    3ee0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3ee4:	ldr	x0, [x8, #2352]
    3ee8:	bl	27b0 <PyThread_release_lock@plt>
    3eec:	ldp	x20, x19, [sp, #48]
    3ef0:	ldp	x22, x21, [sp, #32]
    3ef4:	ldp	x24, x23, [sp, #16]
    3ef8:	mov	x0, xzr
    3efc:	ldp	x29, x30, [sp], #64
    3f00:	b	2500 <PyList_New@plt>
    3f04:	ldr	x8, [x20]
    3f08:	subs	x8, x8, #0x1
    3f0c:	str	x8, [x20]
    3f10:	b.ne	3f1c <PyInit__xxsubinterpreters@@Base+0x1508>  // b.any
    3f14:	mov	x0, x20
    3f18:	bl	25e0 <_Py_Dealloc@plt>
    3f1c:	mov	x20, xzr
    3f20:	mov	x0, x19
    3f24:	bl	2590 <PyMem_Free@plt>
    3f28:	mov	x0, x20
    3f2c:	ldp	x20, x19, [sp, #48]
    3f30:	ldp	x22, x21, [sp, #32]
    3f34:	ldp	x24, x23, [sp, #16]
    3f38:	ldp	x29, x30, [sp], #64
    3f3c:	ret
    3f40:	sub	sp, sp, #0x50
    3f44:	stp	x29, x30, [sp, #32]
    3f48:	stp	x22, x21, [sp, #48]
    3f4c:	stp	x20, x19, [sp, #64]
    3f50:	add	x29, sp, #0x20
    3f54:	mov	x8, x2
    3f58:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3f5c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3f60:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3f64:	mov	x0, x1
    3f68:	add	x2, x2, #0x249
    3f6c:	add	x3, x3, #0x880
    3f70:	add	x4, x4, #0xa54
    3f74:	add	x5, sp, #0x10
    3f78:	add	x6, sp, #0x8
    3f7c:	mov	x1, x8
    3f80:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3f84:	cbz	w0, 40e0 <PyInit__xxsubinterpreters@@Base+0x16cc>
    3f88:	ldp	x22, x20, [sp, #8]
    3f8c:	bl	2800 <_PyInterpreterState_Get@plt>
    3f90:	cbz	x0, 40e4 <PyInit__xxsubinterpreters@@Base+0x16d0>
    3f94:	mov	x21, x0
    3f98:	sub	x1, x29, #0x8
    3f9c:	mov	x0, x20
    3fa0:	stur	xzr, [x29, #-8]
    3fa4:	bl	4b18 <PyInit__xxsubinterpreters@@Base+0x2104>
    3fa8:	cbz	x0, 40e0 <PyInit__xxsubinterpreters@@Base+0x16cc>
    3fac:	ldr	x8, [x0, #32]
    3fb0:	mov	x19, x0
    3fb4:	cbz	x8, 3fdc <PyInit__xxsubinterpreters@@Base+0x15c8>
    3fb8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3fbc:	ldr	x0, [x8, #2408]
    3fc0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3fc4:	add	x1, x1, #0x25a
    3fc8:	mov	x2, x20
    3fcc:	bl	28c0 <PyErr_Format@plt>
    3fd0:	ldur	x0, [x29, #-8]
    3fd4:	bl	27b0 <PyThread_release_lock@plt>
    3fd8:	b	40e0 <PyInit__xxsubinterpreters@@Base+0x16cc>
    3fdc:	mov	w0, #0x28                  	// #40
    3fe0:	bl	2910 <PyMem_Malloc@plt>
    3fe4:	cbz	x0, 3fd0 <PyInit__xxsubinterpreters@@Base+0x15bc>
    3fe8:	mov	x20, x0
    3fec:	mov	x0, x22
    3ff0:	mov	x1, x20
    3ff4:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    3ff8:	cbz	w0, 4008 <PyInit__xxsubinterpreters@@Base+0x15f4>
    3ffc:	ldur	x0, [x29, #-8]
    4000:	bl	27b0 <PyThread_release_lock@plt>
    4004:	b	40d8 <PyInit__xxsubinterpreters@@Base+0x16c4>
    4008:	mov	x0, x21
    400c:	bl	2680 <PyInterpreterState_GetID@plt>
    4010:	ldr	x8, [x19]
    4014:	mov	x21, x0
    4018:	mov	w1, #0x1                   	// #1
    401c:	mov	x0, x8
    4020:	bl	2640 <PyThread_acquire_lock@plt>
    4024:	ldr	w8, [x19, #24]
    4028:	cbz	w8, 40a4 <PyInit__xxsubinterpreters@@Base+0x1690>
    402c:	ldr	x0, [x19, #16]
    4030:	mov	w2, #0x1                   	// #1
    4034:	mov	x1, x21
    4038:	bl	4c0c <PyInit__xxsubinterpreters@@Base+0x21f8>
    403c:	cbnz	w0, 40c0 <PyInit__xxsubinterpreters@@Base+0x16ac>
    4040:	ldr	x21, [x19, #8]
    4044:	mov	w0, #0x10                  	// #16
    4048:	bl	2910 <PyMem_Malloc@plt>
    404c:	cbz	x0, 40bc <PyInit__xxsubinterpreters@@Base+0x16a8>
    4050:	stp	x20, xzr, [x0]
    4054:	ldr	x8, [x21]
    4058:	add	x9, x8, #0x1
    405c:	mov	x8, x21
    4060:	str	x9, [x8], #8
    4064:	ldr	x9, [x8]
    4068:	cbz	x9, 4074 <PyInit__xxsubinterpreters@@Base+0x1660>
    406c:	ldr	x8, [x21, #16]
    4070:	add	x8, x8, #0x8
    4074:	str	x0, [x8]
    4078:	str	x0, [x21, #16]
    407c:	ldr	x0, [x19]
    4080:	bl	27b0 <PyThread_release_lock@plt>
    4084:	ldur	x0, [x29, #-8]
    4088:	bl	27b0 <PyThread_release_lock@plt>
    408c:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4090:	ldr	x0, [x0, #4048]
    4094:	ldr	x8, [x0]
    4098:	add	x8, x8, #0x1
    409c:	str	x8, [x0]
    40a0:	b	40e4 <PyInit__xxsubinterpreters@@Base+0x16d0>
    40a4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    40a8:	ldr	x0, [x8, #2408]
    40ac:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    40b0:	add	x1, x1, #0x26d
    40b4:	bl	2670 <PyErr_SetString@plt>
    40b8:	b	40c0 <PyInit__xxsubinterpreters@@Base+0x16ac>
    40bc:	bl	2600 <PyErr_NoMemory@plt>
    40c0:	ldr	x0, [x19]
    40c4:	bl	27b0 <PyThread_release_lock@plt>
    40c8:	ldur	x0, [x29, #-8]
    40cc:	bl	27b0 <PyThread_release_lock@plt>
    40d0:	mov	x0, x20
    40d4:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    40d8:	mov	x0, x20
    40dc:	bl	2590 <PyMem_Free@plt>
    40e0:	mov	x0, xzr
    40e4:	ldp	x20, x19, [sp, #64]
    40e8:	ldp	x22, x21, [sp, #48]
    40ec:	ldp	x29, x30, [sp, #32]
    40f0:	add	sp, sp, #0x50
    40f4:	ret
    40f8:	sub	sp, sp, #0x40
    40fc:	stp	x29, x30, [sp, #16]
    4100:	stp	x22, x21, [sp, #32]
    4104:	stp	x20, x19, [sp, #48]
    4108:	add	x29, sp, #0x10
    410c:	mov	x8, x2
    4110:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4114:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4118:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    411c:	mov	x0, x1
    4120:	add	x2, x2, #0x293
    4124:	add	x3, x3, #0x898
    4128:	add	x4, x4, #0xa54
    412c:	mov	x5, sp
    4130:	mov	x1, x8
    4134:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4138:	cbz	w0, 4294 <PyInit__xxsubinterpreters@@Base+0x1880>
    413c:	ldr	x19, [sp]
    4140:	bl	2800 <_PyInterpreterState_Get@plt>
    4144:	cbz	x0, 4294 <PyInit__xxsubinterpreters@@Base+0x1880>
    4148:	mov	x21, x0
    414c:	add	x1, sp, #0x8
    4150:	mov	x0, x19
    4154:	str	xzr, [sp, #8]
    4158:	bl	4b18 <PyInit__xxsubinterpreters@@Base+0x2104>
    415c:	cbz	x0, 4294 <PyInit__xxsubinterpreters@@Base+0x1880>
    4160:	mov	x20, x0
    4164:	mov	x0, x21
    4168:	bl	2680 <PyInterpreterState_GetID@plt>
    416c:	ldr	x8, [x20]
    4170:	mov	x21, x0
    4174:	mov	w1, #0x1                   	// #1
    4178:	mov	x0, x8
    417c:	bl	2640 <PyThread_acquire_lock@plt>
    4180:	ldr	w8, [x20, #24]
    4184:	cbz	w8, 41f8 <PyInit__xxsubinterpreters@@Base+0x17e4>
    4188:	ldr	x0, [x20, #16]
    418c:	mov	x1, x21
    4190:	mov	w2, wzr
    4194:	bl	4c0c <PyInit__xxsubinterpreters@@Base+0x21f8>
    4198:	cbnz	w0, 420c <PyInit__xxsubinterpreters@@Base+0x17f8>
    419c:	ldr	x8, [x20, #8]
    41a0:	ldr	x0, [x8, #8]
    41a4:	cbz	x0, 41dc <PyInit__xxsubinterpreters@@Base+0x17c8>
    41a8:	ldr	x9, [x8, #16]
    41ac:	ldr	x10, [x0, #8]
    41b0:	cmp	x9, x0
    41b4:	str	x10, [x8, #8]
    41b8:	b.ne	41c0 <PyInit__xxsubinterpreters@@Base+0x17ac>  // b.any
    41bc:	str	xzr, [x8, #16]
    41c0:	ldr	x9, [x8]
    41c4:	sub	x9, x9, #0x1
    41c8:	str	x9, [x8]
    41cc:	ldr	x21, [x0]
    41d0:	str	xzr, [x0]
    41d4:	bl	3170 <PyInit__xxsubinterpreters@@Base+0x75c>
    41d8:	cbnz	x21, 4210 <PyInit__xxsubinterpreters@@Base+0x17fc>
    41dc:	bl	2730 <PyErr_Occurred@plt>
    41e0:	cbnz	x0, 420c <PyInit__xxsubinterpreters@@Base+0x17f8>
    41e4:	ldr	x8, [x20, #32]
    41e8:	cbz	x8, 420c <PyInit__xxsubinterpreters@@Base+0x17f8>
    41ec:	mov	x21, xzr
    41f0:	str	wzr, [x20, #24]
    41f4:	b	4210 <PyInit__xxsubinterpreters@@Base+0x17fc>
    41f8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    41fc:	ldr	x0, [x8, #2408]
    4200:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4204:	add	x1, x1, #0x26d
    4208:	bl	2670 <PyErr_SetString@plt>
    420c:	mov	x21, xzr
    4210:	ldr	x0, [x20]
    4214:	bl	27b0 <PyThread_release_lock@plt>
    4218:	ldr	x8, [x20, #8]
    421c:	ldr	x8, [x8]
    4220:	cbnz	x8, 4244 <PyInit__xxsubinterpreters@@Base+0x1830>
    4224:	ldr	x8, [x20, #32]
    4228:	cbz	x8, 4244 <PyInit__xxsubinterpreters@@Base+0x1830>
    422c:	ldr	x22, [x8]
    4230:	mov	x0, x20
    4234:	bl	30f4 <PyInit__xxsubinterpreters@@Base+0x6e0>
    4238:	mov	x0, x20
    423c:	str	xzr, [x22, #8]
    4240:	bl	3058 <PyInit__xxsubinterpreters@@Base+0x644>
    4244:	ldr	x0, [sp, #8]
    4248:	bl	27b0 <PyThread_release_lock@plt>
    424c:	cbz	x21, 4274 <PyInit__xxsubinterpreters@@Base+0x1860>
    4250:	mov	x0, x21
    4254:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    4258:	mov	x19, x0
    425c:	cbz	x0, 4298 <PyInit__xxsubinterpreters@@Base+0x1884>
    4260:	mov	x0, x21
    4264:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4268:	mov	x0, x21
    426c:	bl	2590 <PyMem_Free@plt>
    4270:	b	4298 <PyInit__xxsubinterpreters@@Base+0x1884>
    4274:	bl	2730 <PyErr_Occurred@plt>
    4278:	cbnz	x0, 4294 <PyInit__xxsubinterpreters@@Base+0x1880>
    427c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4280:	ldr	x0, [x8, #2416]
    4284:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4288:	add	x1, x1, #0x2a3
    428c:	mov	x2, x19
    4290:	bl	28c0 <PyErr_Format@plt>
    4294:	mov	x19, xzr
    4298:	mov	x0, x19
    429c:	ldp	x20, x19, [sp, #48]
    42a0:	ldp	x22, x21, [sp, #32]
    42a4:	ldp	x29, x30, [sp, #16]
    42a8:	add	sp, sp, #0x40
    42ac:	ret
    42b0:	sub	sp, sp, #0x60
    42b4:	stp	x29, x30, [sp, #32]
    42b8:	str	x23, [sp, #48]
    42bc:	stp	x22, x21, [sp, #64]
    42c0:	stp	x20, x19, [sp, #80]
    42c4:	add	x29, sp, #0x20
    42c8:	mov	x8, x2
    42cc:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    42d0:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    42d4:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    42d8:	mov	x0, x1
    42dc:	sub	x9, x29, #0xc
    42e0:	add	x2, x2, #0x2be
    42e4:	add	x3, x3, #0x8a8
    42e8:	add	x4, x4, #0xa54
    42ec:	add	x5, x29, #0x18
    42f0:	sub	x6, x29, #0x4
    42f4:	sub	x7, x29, #0x8
    42f8:	mov	x1, x8
    42fc:	stur	xzr, [x29, #-8]
    4300:	stur	wzr, [x29, #-12]
    4304:	str	x9, [sp]
    4308:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    430c:	cbz	w0, 43a4 <PyInit__xxsubinterpreters@@Base+0x1990>
    4310:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4314:	add	x20, x20, #0x930
    4318:	ldr	x0, [x20]
    431c:	ldr	x19, [x29, #24]
    4320:	ldp	w22, w21, [x29, #-8]
    4324:	ldur	w23, [x29, #-12]
    4328:	mov	w1, #0x1                   	// #1
    432c:	bl	2640 <PyThread_acquire_lock@plt>
    4330:	ldr	x20, [x20, #8]
    4334:	cbz	x20, 4350 <PyInit__xxsubinterpreters@@Base+0x193c>
    4338:	sub	w22, w21, w22
    433c:	ldr	x8, [x20]
    4340:	cmp	x8, x19
    4344:	b.eq	4364 <PyInit__xxsubinterpreters@@Base+0x1950>  // b.none
    4348:	ldr	x20, [x20, #16]
    434c:	cbnz	x20, 433c <PyInit__xxsubinterpreters@@Base+0x1928>
    4350:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4354:	ldr	x0, [x8, #2392]
    4358:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    435c:	add	x1, x1, #0xf42
    4360:	b	4390 <PyInit__xxsubinterpreters@@Base+0x197c>
    4364:	ldr	x21, [x20, #8]
    4368:	cbz	x21, 4380 <PyInit__xxsubinterpreters@@Base+0x196c>
    436c:	cmp	w22, #0x1
    4370:	b.ne	43c0 <PyInit__xxsubinterpreters@@Base+0x19ac>  // b.any
    4374:	cbnz	w23, 43c0 <PyInit__xxsubinterpreters@@Base+0x19ac>
    4378:	ldr	x8, [x21, #32]
    437c:	cbz	x8, 43c0 <PyInit__xxsubinterpreters@@Base+0x19ac>
    4380:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4384:	ldr	x0, [x8, #2408]
    4388:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    438c:	add	x1, x1, #0x25a
    4390:	mov	x2, x19
    4394:	bl	28c0 <PyErr_Format@plt>
    4398:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    439c:	ldr	x0, [x8, #2352]
    43a0:	bl	27b0 <PyThread_release_lock@plt>
    43a4:	mov	x0, xzr
    43a8:	ldp	x20, x19, [sp, #80]
    43ac:	ldp	x22, x21, [sp, #64]
    43b0:	ldr	x23, [sp, #48]
    43b4:	ldp	x29, x30, [sp, #32]
    43b8:	add	sp, sp, #0x60
    43bc:	ret
    43c0:	ldr	x0, [x21]
    43c4:	mov	w1, #0x1                   	// #1
    43c8:	bl	2640 <PyThread_acquire_lock@plt>
    43cc:	ldr	w8, [x21, #24]
    43d0:	cbz	w8, 4458 <PyInit__xxsubinterpreters@@Base+0x1a44>
    43d4:	cbz	w23, 446c <PyInit__xxsubinterpreters@@Base+0x1a58>
    43d8:	ldr	x8, [x21, #16]
    43dc:	str	wzr, [x21, #24]
    43e0:	ldr	x9, [x8, #16]
    43e4:	cbz	x9, 4400 <PyInit__xxsubinterpreters@@Base+0x19ec>
    43e8:	ldr	x10, [x8]
    43ec:	str	wzr, [x9, #16]
    43f0:	ldr	x9, [x9]
    43f4:	sub	x10, x10, #0x1
    43f8:	cbnz	x9, 43ec <PyInit__xxsubinterpreters@@Base+0x19d8>
    43fc:	str	x10, [x8]
    4400:	ldr	x9, [x8, #24]
    4404:	cbz	x9, 4420 <PyInit__xxsubinterpreters@@Base+0x1a0c>
    4408:	ldr	x10, [x8, #8]
    440c:	str	wzr, [x9, #16]
    4410:	ldr	x9, [x9]
    4414:	sub	x10, x10, #0x1
    4418:	cbnz	x9, 440c <PyInit__xxsubinterpreters@@Base+0x19f8>
    441c:	str	x10, [x8, #8]
    4420:	ldr	x0, [x21]
    4424:	bl	27b0 <PyThread_release_lock@plt>
    4428:	ldr	x0, [x20, #8]
    442c:	bl	3058 <PyInit__xxsubinterpreters@@Base+0x644>
    4430:	str	xzr, [x20, #8]
    4434:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4438:	ldr	x0, [x8, #2352]
    443c:	bl	27b0 <PyThread_release_lock@plt>
    4440:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4444:	ldr	x0, [x0, #4048]
    4448:	ldr	x8, [x0]
    444c:	add	x8, x8, #0x1
    4450:	str	x8, [x0]
    4454:	b	43a8 <PyInit__xxsubinterpreters@@Base+0x1994>
    4458:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    445c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4460:	add	x1, x1, #0x27c
    4464:	add	x8, x8, #0x968
    4468:	b	448c <PyInit__xxsubinterpreters@@Base+0x1a78>
    446c:	ldr	x8, [x21, #8]
    4470:	ldr	x8, [x8]
    4474:	cmp	x8, #0x0
    4478:	b.le	43d8 <PyInit__xxsubinterpreters@@Base+0x19c4>
    447c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4480:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4484:	add	x1, x1, #0x2d4
    4488:	add	x8, x8, #0x978
    448c:	ldr	x0, [x8]
    4490:	bl	2670 <PyErr_SetString@plt>
    4494:	ldr	x0, [x21]
    4498:	bl	27b0 <PyThread_release_lock@plt>
    449c:	cmp	w22, #0x1
    44a0:	b.ne	4398 <PyInit__xxsubinterpreters@@Base+0x1984>  // b.any
    44a4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    44a8:	ldr	x0, [x8, #2424]
    44ac:	bl	26a0 <PyErr_ExceptionMatches@plt>
    44b0:	cbz	w0, 4398 <PyInit__xxsubinterpreters@@Base+0x1984>
    44b4:	ldr	x8, [x20, #8]
    44b8:	ldr	x8, [x8, #32]
    44bc:	cbnz	x8, 4380 <PyInit__xxsubinterpreters@@Base+0x196c>
    44c0:	bl	26f0 <PyErr_Clear@plt>
    44c4:	ldr	x19, [x20, #8]
    44c8:	cbz	x19, 4434 <PyInit__xxsubinterpreters@@Base+0x1a20>
    44cc:	ldr	x0, [x19]
    44d0:	mov	w1, #0x1                   	// #1
    44d4:	bl	2640 <PyThread_acquire_lock@plt>
    44d8:	ldr	x8, [x19, #32]
    44dc:	cbz	x8, 4500 <PyInit__xxsubinterpreters@@Base+0x1aec>
    44e0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    44e4:	ldr	x0, [x8, #2408]
    44e8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    44ec:	add	x1, x1, #0x26d
    44f0:	bl	2670 <PyErr_SetString@plt>
    44f4:	ldr	x0, [x19]
    44f8:	bl	27b0 <PyThread_release_lock@plt>
    44fc:	b	4398 <PyInit__xxsubinterpreters@@Base+0x1984>
    4500:	mov	w0, #0x8                   	// #8
    4504:	bl	2910 <PyMem_Malloc@plt>
    4508:	str	x0, [x19, #32]
    450c:	cbz	x0, 44f4 <PyInit__xxsubinterpreters@@Base+0x1ae0>
    4510:	str	x20, [x0]
    4514:	ldr	x0, [x19]
    4518:	bl	27b0 <PyThread_release_lock@plt>
    451c:	b	4434 <PyInit__xxsubinterpreters@@Base+0x1a20>
    4520:	sub	sp, sp, #0x60
    4524:	stp	x29, x30, [sp, #32]
    4528:	str	x23, [sp, #48]
    452c:	stp	x22, x21, [sp, #64]
    4530:	stp	x20, x19, [sp, #80]
    4534:	add	x29, sp, #0x20
    4538:	mov	x8, x2
    453c:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4540:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4544:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4548:	mov	x0, x1
    454c:	add	x9, sp, #0xc
    4550:	add	x2, x2, #0x304
    4554:	add	x3, x3, #0x8d0
    4558:	add	x4, x4, #0xa54
    455c:	sub	x5, x29, #0x8
    4560:	sub	x6, x29, #0xc
    4564:	add	x7, sp, #0x10
    4568:	mov	x1, x8
    456c:	stur	wzr, [x29, #-12]
    4570:	stp	wzr, wzr, [sp, #12]
    4574:	str	x9, [sp]
    4578:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    457c:	cbz	w0, 470c <PyInit__xxsubinterpreters@@Base+0x1cf8>
    4580:	ldur	w23, [x29, #-12]
    4584:	ldr	w22, [sp, #16]
    4588:	orr	w8, w22, w23
    458c:	cbnz	w8, 45a0 <PyInit__xxsubinterpreters@@Base+0x1b8c>
    4590:	mov	w22, #0x1                   	// #1
    4594:	mov	w23, #0x1                   	// #1
    4598:	stur	w22, [x29, #-12]
    459c:	str	w22, [sp, #16]
    45a0:	ldur	x19, [x29, #-8]
    45a4:	bl	2800 <_PyInterpreterState_Get@plt>
    45a8:	cbz	x0, 4710 <PyInit__xxsubinterpreters@@Base+0x1cfc>
    45ac:	mov	x20, x0
    45b0:	add	x1, x29, #0x18
    45b4:	mov	x0, x19
    45b8:	str	xzr, [x29, #24]
    45bc:	bl	4b18 <PyInit__xxsubinterpreters@@Base+0x2104>
    45c0:	cbz	x0, 4710 <PyInit__xxsubinterpreters@@Base+0x1cfc>
    45c4:	mov	x19, x0
    45c8:	mov	x0, x20
    45cc:	bl	2680 <PyInterpreterState_GetID@plt>
    45d0:	ldr	x8, [x19]
    45d4:	mov	x21, x0
    45d8:	mov	w1, #0x1                   	// #1
    45dc:	mov	x0, x8
    45e0:	bl	2640 <PyThread_acquire_lock@plt>
    45e4:	ldr	w8, [x19, #24]
    45e8:	cbz	w8, 461c <PyInit__xxsubinterpreters@@Base+0x1c08>
    45ec:	ldr	x20, [x19, #16]
    45f0:	sub	w22, w23, w22
    45f4:	tbnz	w22, #31, 4668 <PyInit__xxsubinterpreters@@Base+0x1c54>
    45f8:	ldr	x8, [x20, #16]
    45fc:	cbz	x8, 4634 <PyInit__xxsubinterpreters@@Base+0x1c20>
    4600:	mov	x1, x8
    4604:	ldr	x8, [x8, #8]
    4608:	cmp	x8, x21
    460c:	b.eq	4650 <PyInit__xxsubinterpreters@@Base+0x1c3c>  // b.none
    4610:	ldr	x8, [x1]
    4614:	cbnz	x8, 4600 <PyInit__xxsubinterpreters@@Base+0x1bec>
    4618:	b	4638 <PyInit__xxsubinterpreters@@Base+0x1c24>
    461c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4620:	ldr	x0, [x8, #2408]
    4624:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4628:	add	x1, x1, #0x27c
    462c:	bl	2670 <PyErr_SetString@plt>
    4630:	b	46fc <PyInit__xxsubinterpreters@@Base+0x1ce8>
    4634:	mov	x1, xzr
    4638:	mov	w3, #0x1                   	// #1
    463c:	mov	x0, x20
    4640:	mov	x2, x21
    4644:	bl	4c94 <PyInit__xxsubinterpreters@@Base+0x2280>
    4648:	mov	x1, x0
    464c:	cbz	x0, 46fc <PyInit__xxsubinterpreters@@Base+0x1ce8>
    4650:	str	wzr, [x1, #16]
    4654:	ldr	x8, [x20]
    4658:	cmp	w22, #0x0
    465c:	sub	x8, x8, #0x1
    4660:	str	x8, [x20]
    4664:	b.gt	46b8 <PyInit__xxsubinterpreters@@Base+0x1ca4>
    4668:	ldr	x8, [x20, #24]
    466c:	cbz	x8, 468c <PyInit__xxsubinterpreters@@Base+0x1c78>
    4670:	mov	x1, x8
    4674:	ldr	x8, [x8, #8]
    4678:	cmp	x8, x21
    467c:	b.eq	46a8 <PyInit__xxsubinterpreters@@Base+0x1c94>  // b.none
    4680:	ldr	x8, [x1]
    4684:	cbnz	x8, 4670 <PyInit__xxsubinterpreters@@Base+0x1c5c>
    4688:	b	4690 <PyInit__xxsubinterpreters@@Base+0x1c7c>
    468c:	mov	x1, xzr
    4690:	mov	x0, x20
    4694:	mov	x2, x21
    4698:	mov	w3, wzr
    469c:	bl	4c94 <PyInit__xxsubinterpreters@@Base+0x2280>
    46a0:	mov	x1, x0
    46a4:	cbz	x0, 46fc <PyInit__xxsubinterpreters@@Base+0x1ce8>
    46a8:	str	wzr, [x1, #16]
    46ac:	ldr	x8, [x20, #8]
    46b0:	sub	x8, x8, #0x1
    46b4:	str	x8, [x20, #8]
    46b8:	ldr	x8, [x19, #16]
    46bc:	ldr	x9, [x8]
    46c0:	cbnz	x9, 46cc <PyInit__xxsubinterpreters@@Base+0x1cb8>
    46c4:	ldr	x9, [x8, #8]
    46c8:	cbz	x9, 4728 <PyInit__xxsubinterpreters@@Base+0x1d14>
    46cc:	mov	w8, #0x1                   	// #1
    46d0:	ldr	x0, [x19]
    46d4:	str	w8, [x19, #24]
    46d8:	bl	27b0 <PyThread_release_lock@plt>
    46dc:	ldr	x0, [x29, #24]
    46e0:	bl	27b0 <PyThread_release_lock@plt>
    46e4:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    46e8:	ldr	x0, [x0, #4048]
    46ec:	ldr	x8, [x0]
    46f0:	add	x8, x8, #0x1
    46f4:	str	x8, [x0]
    46f8:	b	4710 <PyInit__xxsubinterpreters@@Base+0x1cfc>
    46fc:	ldr	x0, [x19]
    4700:	bl	27b0 <PyThread_release_lock@plt>
    4704:	ldr	x0, [x29, #24]
    4708:	bl	27b0 <PyThread_release_lock@plt>
    470c:	mov	x0, xzr
    4710:	ldp	x20, x19, [sp, #80]
    4714:	ldp	x22, x21, [sp, #64]
    4718:	ldr	x23, [sp, #48]
    471c:	ldp	x29, x30, [sp, #32]
    4720:	add	sp, sp, #0x60
    4724:	ret
    4728:	ldr	x9, [x8, #16]
    472c:	cbnz	x9, 4738 <PyInit__xxsubinterpreters@@Base+0x1d24>
    4730:	ldr	x8, [x8, #24]
    4734:	cbz	x8, 46cc <PyInit__xxsubinterpreters@@Base+0x1cb8>
    4738:	mov	w8, wzr
    473c:	b	46d0 <PyInit__xxsubinterpreters@@Base+0x1cbc>
    4740:	sub	sp, sp, #0x40
    4744:	stp	x29, x30, [sp, #48]
    4748:	add	x29, sp, #0x30
    474c:	mov	x8, x2
    4750:	mov	w9, #0xffffffff            	// #-1
    4754:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4758:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    475c:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4760:	mov	x0, x1
    4764:	stp	wzr, w9, [x29, #-20]
    4768:	stur	w9, [x29, #-12]
    476c:	add	x9, sp, #0x18
    4770:	sub	x10, x29, #0x14
    4774:	add	x2, x2, #0x325
    4778:	add	x3, x3, #0x8f8
    477c:	add	x4, x4, #0xa54
    4780:	sub	x5, x29, #0x8
    4784:	sub	x6, x29, #0xc
    4788:	sub	x7, x29, #0x10
    478c:	mov	x1, x8
    4790:	str	wzr, [sp, #24]
    4794:	stp	x10, x9, [sp]
    4798:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    479c:	cbz	w0, 47dc <PyInit__xxsubinterpreters@@Base+0x1dc8>
    47a0:	ldp	w8, w9, [x29, #-16]
    47a4:	orr	w10, w8, w9
    47a8:	cbz	w10, 47c4 <PyInit__xxsubinterpreters@@Base+0x1db0>
    47ac:	cmp	w9, #0x1
    47b0:	b.ne	47e4 <PyInit__xxsubinterpreters@@Base+0x1dd0>  // b.any
    47b4:	add	w8, w8, #0x1
    47b8:	cmp	w8, #0x2
    47bc:	cset	w2, cc  // cc = lo, ul, last
    47c0:	b	47ec <PyInit__xxsubinterpreters@@Base+0x1dd8>
    47c4:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    47c8:	ldr	x8, [x8, #4016]
    47cc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    47d0:	add	x1, x1, #0x340
    47d4:	ldr	x0, [x8]
    47d8:	bl	2670 <PyErr_SetString@plt>
    47dc:	mov	x0, xzr
    47e0:	b	480c <PyInit__xxsubinterpreters@@Base+0x1df8>
    47e4:	cmp	w8, #0x1
    47e8:	csetm	w2, eq  // eq = none
    47ec:	ldur	x1, [x29, #-8]
    47f0:	ldur	w4, [x29, #-20]
    47f4:	ldr	w5, [sp, #24]
    47f8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    47fc:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4800:	add	x0, x0, #0x230
    4804:	add	x3, x3, #0x930
    4808:	bl	3210 <PyInit__xxsubinterpreters@@Base+0x7fc>
    480c:	ldp	x29, x30, [sp, #48]
    4810:	add	sp, sp, #0x40
    4814:	ret
    4818:	stp	x29, x30, [sp, #-16]!
    481c:	mov	x29, sp
    4820:	bl	4850 <PyInit__xxsubinterpreters@@Base+0x1e3c>
    4824:	tbnz	w0, #31, 4844 <PyInit__xxsubinterpreters@@Base+0x1e30>
    4828:	cbz	w0, 4848 <PyInit__xxsubinterpreters@@Base+0x1e34>
    482c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4830:	ldr	x8, [x8, #4000]
    4834:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4838:	add	x1, x1, #0xff9
    483c:	ldr	x0, [x8]
    4840:	bl	28c0 <PyErr_Format@plt>
    4844:	mov	w0, #0xffffffff            	// #-1
    4848:	ldp	x29, x30, [sp], #16
    484c:	ret
    4850:	stp	x29, x30, [sp, #-32]!
    4854:	str	x19, [sp, #16]
    4858:	mov	x29, sp
    485c:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    4860:	mov	x19, x0
    4864:	bl	2780 <PyThreadState_Next@plt>
    4868:	cbz	x0, 488c <PyInit__xxsubinterpreters@@Base+0x1e78>
    486c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4870:	ldr	x8, [x8, #4000]
    4874:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4878:	add	x1, x1, #0x15
    487c:	ldr	x0, [x8]
    4880:	bl	2670 <PyErr_SetString@plt>
    4884:	mov	w0, #0xffffffff            	// #-1
    4888:	b	48a8 <PyInit__xxsubinterpreters@@Base+0x1e94>
    488c:	ldr	x8, [x19, #24]
    4890:	cbz	x8, 489c <PyInit__xxsubinterpreters@@Base+0x1e88>
    4894:	ldrb	w0, [x8, #116]
    4898:	b	48a8 <PyInit__xxsubinterpreters@@Base+0x1e94>
    489c:	bl	2730 <PyErr_Occurred@plt>
    48a0:	cmp	x0, #0x0
    48a4:	csetm	w0, ne  // ne = any
    48a8:	ldr	x19, [sp, #16]
    48ac:	ldp	x29, x30, [sp], #32
    48b0:	ret
    48b4:	stp	x29, x30, [sp, #-48]!
    48b8:	str	x21, [sp, #16]
    48bc:	stp	x20, x19, [sp, #32]
    48c0:	mov	x29, sp
    48c4:	ldr	x8, [x0]
    48c8:	mov	x19, x0
    48cc:	cmp	x8, #0x1
    48d0:	b.lt	48fc <PyInit__xxsubinterpreters@@Base+0x1ee8>  // b.tstop
    48d4:	mov	x20, xzr
    48d8:	mov	x21, xzr
    48dc:	ldr	x8, [x19, #8]
    48e0:	add	x0, x8, x20
    48e4:	bl	4960 <PyInit__xxsubinterpreters@@Base+0x1f4c>
    48e8:	ldr	x8, [x19]
    48ec:	add	x21, x21, #0x1
    48f0:	add	x20, x20, #0x30
    48f4:	cmp	x21, x8
    48f8:	b.lt	48dc <PyInit__xxsubinterpreters@@Base+0x1ec8>  // b.tstop
    48fc:	ldr	x0, [x19, #8]
    4900:	bl	2590 <PyMem_Free@plt>
    4904:	mov	x0, x19
    4908:	ldp	x20, x19, [sp, #32]
    490c:	ldr	x21, [sp, #16]
    4910:	ldp	x29, x30, [sp], #48
    4914:	b	2590 <PyMem_Free@plt>
    4918:	stp	x29, x30, [sp, #-32]!
    491c:	str	x19, [sp, #16]
    4920:	mov	x29, sp
    4924:	bl	27e0 <PyUnicode_AsUTF8@plt>
    4928:	cbz	x0, 4954 <PyInit__xxsubinterpreters@@Base+0x1f40>
    492c:	mov	x19, x0
    4930:	bl	2530 <strlen@plt>
    4934:	add	x0, x0, #0x1
    4938:	bl	2910 <PyMem_Malloc@plt>
    493c:	cbz	x0, 494c <PyInit__xxsubinterpreters@@Base+0x1f38>
    4940:	mov	x1, x19
    4944:	bl	27f0 <strcpy@plt>
    4948:	b	4954 <PyInit__xxsubinterpreters@@Base+0x1f40>
    494c:	bl	2600 <PyErr_NoMemory@plt>
    4950:	mov	x0, xzr
    4954:	ldr	x19, [sp, #16]
    4958:	ldp	x29, x30, [sp], #32
    495c:	ret
    4960:	stp	x29, x30, [sp, #-32]!
    4964:	str	x19, [sp, #16]
    4968:	mov	x29, sp
    496c:	mov	x19, x0
    4970:	ldr	x0, [x0]
    4974:	cbz	x0, 4980 <PyInit__xxsubinterpreters@@Base+0x1f6c>
    4978:	bl	2590 <PyMem_Free@plt>
    497c:	str	xzr, [x19]
    4980:	add	x0, x19, #0x8
    4984:	ldr	x19, [sp, #16]
    4988:	ldp	x29, x30, [sp], #32
    498c:	b	2610 <_PyCrossInterpreterData_Release@plt>
    4990:	sub	sp, sp, #0x30
    4994:	stp	x29, x30, [sp, #16]
    4998:	stp	x20, x19, [sp, #32]
    499c:	add	x29, sp, #0x10
    49a0:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    49a4:	add	x19, x19, #0x930
    49a8:	ldr	x8, [x19]
    49ac:	mov	x20, x0
    49b0:	mov	w1, #0x1                   	// #1
    49b4:	mov	x0, x8
    49b8:	bl	2640 <PyThread_acquire_lock@plt>
    49bc:	ldr	x1, [x19, #8]
    49c0:	str	xzr, [sp, #8]
    49c4:	cbz	x1, 4a1c <PyInit__xxsubinterpreters@@Base+0x2008>
    49c8:	ldr	x8, [x1]
    49cc:	cmp	x8, x20
    49d0:	b.ne	49dc <PyInit__xxsubinterpreters@@Base+0x1fc8>  // b.any
    49d4:	mov	x2, xzr
    49d8:	b	49f4 <PyInit__xxsubinterpreters@@Base+0x1fe0>
    49dc:	mov	x2, x1
    49e0:	ldr	x1, [x1, #16]
    49e4:	cbz	x1, 4a1c <PyInit__xxsubinterpreters@@Base+0x2008>
    49e8:	ldr	x8, [x1]
    49ec:	cmp	x8, x20
    49f0:	b.ne	49dc <PyInit__xxsubinterpreters@@Base+0x1fc8>  // b.any
    49f4:	add	x3, sp, #0x8
    49f8:	mov	x0, x19
    49fc:	bl	2ffc <PyInit__xxsubinterpreters@@Base+0x5e8>
    4a00:	ldr	x0, [x19]
    4a04:	bl	27b0 <PyThread_release_lock@plt>
    4a08:	ldr	x0, [sp, #8]
    4a0c:	cbz	x0, 4a44 <PyInit__xxsubinterpreters@@Base+0x2030>
    4a10:	bl	3058 <PyInit__xxsubinterpreters@@Base+0x644>
    4a14:	mov	w0, wzr
    4a18:	b	4a44 <PyInit__xxsubinterpreters@@Base+0x2030>
    4a1c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a20:	ldr	x0, [x8, #2392]
    4a24:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4a28:	add	x1, x1, #0xf42
    4a2c:	mov	x2, x20
    4a30:	bl	28c0 <PyErr_Format@plt>
    4a34:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a38:	ldr	x0, [x8, #2352]
    4a3c:	bl	27b0 <PyThread_release_lock@plt>
    4a40:	mov	w0, #0xffffffff            	// #-1
    4a44:	ldp	x20, x19, [sp, #32]
    4a48:	ldp	x29, x30, [sp, #16]
    4a4c:	add	sp, sp, #0x30
    4a50:	ret
    4a54:	stp	x29, x30, [sp, #-32]!
    4a58:	stp	x20, x19, [sp, #16]
    4a5c:	mov	x29, sp
    4a60:	mov	x19, x0
    4a64:	ldr	x0, [x0, #8]
    4a68:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a6c:	add	x8, x8, #0x230
    4a70:	mov	x20, x1
    4a74:	cmp	x0, x8
    4a78:	b.eq	4a8c <PyInit__xxsubinterpreters@@Base+0x2078>  // b.none
    4a7c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a80:	add	x1, x1, #0x230
    4a84:	bl	28a0 <PyType_IsSubtype@plt>
    4a88:	cbz	w0, 4aa4 <PyInit__xxsubinterpreters@@Base+0x2090>
    4a8c:	ldr	x0, [x19, #16]
    4a90:	str	x0, [x20]
    4a94:	mov	w0, #0x1                   	// #1
    4a98:	ldp	x20, x19, [sp, #16]
    4a9c:	ldp	x29, x30, [sp], #32
    4aa0:	ret
    4aa4:	ldr	x8, [x19, #8]
    4aa8:	ldr	x9, [x8, #96]
    4aac:	cbz	x9, 4ad0 <PyInit__xxsubinterpreters@@Base+0x20bc>
    4ab0:	ldr	x9, [x9, #264]
    4ab4:	cbz	x9, 4ad0 <PyInit__xxsubinterpreters@@Base+0x20bc>
    4ab8:	mov	x0, x19
    4abc:	bl	2890 <PyLong_AsLongLong@plt>
    4ac0:	cmn	x0, #0x1
    4ac4:	b.eq	4aec <PyInit__xxsubinterpreters@@Base+0x20d8>  // b.none
    4ac8:	tbz	x0, #63, 4a90 <PyInit__xxsubinterpreters@@Base+0x207c>
    4acc:	b	4af4 <PyInit__xxsubinterpreters@@Base+0x20e0>
    4ad0:	adrp	x9, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4ad4:	ldr	x9, [x9, #4024]
    4ad8:	ldr	x2, [x8, #24]
    4adc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4ae0:	add	x1, x1, #0x20c
    4ae4:	ldr	x0, [x9]
    4ae8:	b	4b0c <PyInit__xxsubinterpreters@@Base+0x20f8>
    4aec:	bl	2730 <PyErr_Occurred@plt>
    4af0:	cbnz	x0, 4b10 <PyInit__xxsubinterpreters@@Base+0x20fc>
    4af4:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4af8:	ldr	x8, [x8, #4016]
    4afc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4b00:	add	x1, x1, #0x1de
    4b04:	mov	x2, x19
    4b08:	ldr	x0, [x8]
    4b0c:	bl	28c0 <PyErr_Format@plt>
    4b10:	mov	w0, wzr
    4b14:	b	4a98 <PyInit__xxsubinterpreters@@Base+0x2084>
    4b18:	stp	x29, x30, [sp, #-48]!
    4b1c:	stp	x22, x21, [sp, #16]
    4b20:	stp	x20, x19, [sp, #32]
    4b24:	mov	x29, sp
    4b28:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b2c:	ldr	x8, [x22, #2352]
    4b30:	mov	x19, x1
    4b34:	mov	x20, x0
    4b38:	mov	w1, #0x1                   	// #1
    4b3c:	mov	x0, x8
    4b40:	bl	2640 <PyThread_acquire_lock@plt>
    4b44:	cbz	x19, 4b4c <PyInit__xxsubinterpreters@@Base+0x2138>
    4b48:	str	xzr, [x19]
    4b4c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b50:	ldr	x9, [x8, #2360]
    4b54:	cbz	x9, 4b80 <PyInit__xxsubinterpreters@@Base+0x216c>
    4b58:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4b5c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b60:	add	x1, x1, #0xf42
    4b64:	add	x8, x8, #0x958
    4b68:	ldr	x10, [x9]
    4b6c:	cmp	x10, x20
    4b70:	b.eq	4b94 <PyInit__xxsubinterpreters@@Base+0x2180>  // b.none
    4b74:	ldr	x9, [x9, #16]
    4b78:	cbnz	x9, 4b68 <PyInit__xxsubinterpreters@@Base+0x2154>
    4b7c:	b	4bcc <PyInit__xxsubinterpreters@@Base+0x21b8>
    4b80:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4b84:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b88:	add	x1, x1, #0xf42
    4b8c:	add	x8, x8, #0x958
    4b90:	b	4bcc <PyInit__xxsubinterpreters@@Base+0x21b8>
    4b94:	ldr	x21, [x9, #8]
    4b98:	cbz	x21, 4bbc <PyInit__xxsubinterpreters@@Base+0x21a8>
    4b9c:	ldr	w8, [x21, #24]
    4ba0:	cbz	w8, 4bbc <PyInit__xxsubinterpreters@@Base+0x21a8>
    4ba4:	cbz	x19, 4bf0 <PyInit__xxsubinterpreters@@Base+0x21dc>
    4ba8:	ldr	x8, [x22, #2352]
    4bac:	str	x8, [x19]
    4bb0:	ldr	x21, [x9, #8]
    4bb4:	cbnz	x8, 4bf8 <PyInit__xxsubinterpreters@@Base+0x21e4>
    4bb8:	b	4bf0 <PyInit__xxsubinterpreters@@Base+0x21dc>
    4bbc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4bc0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4bc4:	add	x1, x1, #0x25a
    4bc8:	add	x8, x8, #0x968
    4bcc:	ldr	x0, [x8]
    4bd0:	mov	x2, x20
    4bd4:	bl	28c0 <PyErr_Format@plt>
    4bd8:	cbz	x19, 4bec <PyInit__xxsubinterpreters@@Base+0x21d8>
    4bdc:	ldr	x8, [x19]
    4be0:	mov	x21, xzr
    4be4:	cbnz	x8, 4bf8 <PyInit__xxsubinterpreters@@Base+0x21e4>
    4be8:	b	4bf0 <PyInit__xxsubinterpreters@@Base+0x21dc>
    4bec:	mov	x21, xzr
    4bf0:	ldr	x0, [x22, #2352]
    4bf4:	bl	27b0 <PyThread_release_lock@plt>
    4bf8:	mov	x0, x21
    4bfc:	ldp	x20, x19, [sp, #32]
    4c00:	ldp	x22, x21, [sp, #16]
    4c04:	ldp	x29, x30, [sp], #48
    4c08:	ret
    4c0c:	stp	x29, x30, [sp, #-16]!
    4c10:	mov	x29, sp
    4c14:	cmp	w2, #0x0
    4c18:	mov	w8, #0x10                  	// #16
    4c1c:	mov	w9, #0x18                  	// #24
    4c20:	csel	x8, x9, x8, eq  // eq = none
    4c24:	ldr	x8, [x0, x8]
    4c28:	mov	w3, w2
    4c2c:	mov	x2, x1
    4c30:	cbz	x8, 4c50 <PyInit__xxsubinterpreters@@Base+0x223c>
    4c34:	mov	x1, x8
    4c38:	ldr	x8, [x8, #8]
    4c3c:	cmp	x8, x2
    4c40:	b.eq	4c64 <PyInit__xxsubinterpreters@@Base+0x2250>  // b.none
    4c44:	ldr	x8, [x1]
    4c48:	cbnz	x8, 4c34 <PyInit__xxsubinterpreters@@Base+0x2220>
    4c4c:	b	4c54 <PyInit__xxsubinterpreters@@Base+0x2240>
    4c50:	mov	x1, xzr
    4c54:	bl	4c94 <PyInit__xxsubinterpreters@@Base+0x2280>
    4c58:	cmp	x0, #0x0
    4c5c:	csetm	w0, eq  // eq = none
    4c60:	b	4c8c <PyInit__xxsubinterpreters@@Base+0x2278>
    4c64:	ldr	w8, [x1, #16]
    4c68:	cbz	w8, 4c74 <PyInit__xxsubinterpreters@@Base+0x2260>
    4c6c:	mov	w0, wzr
    4c70:	b	4c8c <PyInit__xxsubinterpreters@@Base+0x2278>
    4c74:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4c78:	ldr	x0, [x8, #2408]
    4c7c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4c80:	add	x1, x1, #0x27c
    4c84:	bl	2670 <PyErr_SetString@plt>
    4c88:	mov	w0, #0xffffffff            	// #-1
    4c8c:	ldp	x29, x30, [sp], #16
    4c90:	ret
    4c94:	stp	x29, x30, [sp, #-48]!
    4c98:	stp	x22, x21, [sp, #16]
    4c9c:	stp	x20, x19, [sp, #32]
    4ca0:	mov	x29, sp
    4ca4:	mov	x19, x0
    4ca8:	mov	w0, #0x18                  	// #24
    4cac:	mov	w20, w3
    4cb0:	mov	x22, x2
    4cb4:	mov	x21, x1
    4cb8:	bl	2910 <PyMem_Malloc@plt>
    4cbc:	cbz	x0, 4cdc <PyInit__xxsubinterpreters@@Base+0x22c8>
    4cc0:	mov	w8, #0x1                   	// #1
    4cc4:	stp	xzr, x22, [x0]
    4cc8:	str	w8, [x0, #16]
    4ccc:	cbz	x21, 4ce8 <PyInit__xxsubinterpreters@@Base+0x22d4>
    4cd0:	str	x0, [x21]
    4cd4:	cbnz	w20, 4cf0 <PyInit__xxsubinterpreters@@Base+0x22dc>
    4cd8:	b	4d04 <PyInit__xxsubinterpreters@@Base+0x22f0>
    4cdc:	bl	2600 <PyErr_NoMemory@plt>
    4ce0:	mov	x0, xzr
    4ce4:	b	4d10 <PyInit__xxsubinterpreters@@Base+0x22fc>
    4ce8:	cbz	w20, 4d00 <PyInit__xxsubinterpreters@@Base+0x22ec>
    4cec:	str	x0, [x19, #16]
    4cf0:	ldr	x8, [x19]
    4cf4:	add	x8, x8, #0x1
    4cf8:	str	x8, [x19]
    4cfc:	b	4d10 <PyInit__xxsubinterpreters@@Base+0x22fc>
    4d00:	str	x0, [x19, #24]
    4d04:	ldr	x8, [x19, #8]
    4d08:	add	x8, x8, #0x1
    4d0c:	str	x8, [x19, #8]
    4d10:	ldp	x20, x19, [sp, #32]
    4d14:	ldp	x22, x21, [sp, #16]
    4d18:	ldp	x29, x30, [sp], #48
    4d1c:	ret
    4d20:	stp	x29, x30, [sp, #-48]!
    4d24:	str	x21, [sp, #16]
    4d28:	stp	x20, x19, [sp, #32]
    4d2c:	mov	x29, sp
    4d30:	ldr	x20, [x0]
    4d34:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4d38:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4d3c:	add	x0, x0, #0x230
    4d40:	ldr	x1, [x20]
    4d44:	ldr	w2, [x20, #8]
    4d48:	add	x3, x3, #0x930
    4d4c:	mov	w4, wzr
    4d50:	mov	w5, wzr
    4d54:	bl	3210 <PyInit__xxsubinterpreters@@Base+0x7fc>
    4d58:	ldr	w21, [x20, #8]
    4d5c:	mov	x19, x0
    4d60:	cbz	w21, 4e34 <PyInit__xxsubinterpreters@@Base+0x2420>
    4d64:	ldr	w8, [x20, #12]
    4d68:	cbz	w8, 4e34 <PyInit__xxsubinterpreters@@Base+0x2420>
    4d6c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4d70:	add	x0, x0, #0x451
    4d74:	bl	2750 <PyImport_ImportModule@plt>
    4d78:	mov	x20, x0
    4d7c:	cbnz	x0, 4d98 <PyInit__xxsubinterpreters@@Base+0x2384>
    4d80:	bl	26f0 <PyErr_Clear@plt>
    4d84:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4d88:	add	x0, x0, #0x444
    4d8c:	bl	2750 <PyImport_ImportModule@plt>
    4d90:	mov	x20, x0
    4d94:	cbz	x0, 4e30 <PyInit__xxsubinterpreters@@Base+0x241c>
    4d98:	adrp	x8, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4d9c:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4da0:	add	x8, x8, #0x46a
    4da4:	add	x9, x9, #0x45e
    4da8:	cmn	w21, #0x1
    4dac:	csel	x1, x9, x8, eq  // eq = none
    4db0:	mov	x0, x20
    4db4:	bl	25b0 <PyObject_GetAttrString@plt>
    4db8:	ldr	x8, [x20]
    4dbc:	mov	x21, x0
    4dc0:	subs	x8, x8, #0x1
    4dc4:	str	x8, [x20]
    4dc8:	b.eq	4dd4 <PyInit__xxsubinterpreters@@Base+0x23c0>  // b.none
    4dcc:	cbnz	x21, 4de0 <PyInit__xxsubinterpreters@@Base+0x23cc>
    4dd0:	b	4e30 <PyInit__xxsubinterpreters@@Base+0x241c>
    4dd4:	mov	x0, x20
    4dd8:	bl	25e0 <_Py_Dealloc@plt>
    4ddc:	cbz	x21, 4e30 <PyInit__xxsubinterpreters@@Base+0x241c>
    4de0:	mov	x0, x21
    4de4:	mov	x1, x19
    4de8:	mov	x2, xzr
    4dec:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    4df0:	ldr	x8, [x21]
    4df4:	mov	x20, x0
    4df8:	subs	x8, x8, #0x1
    4dfc:	str	x8, [x21]
    4e00:	b.eq	4e24 <PyInit__xxsubinterpreters@@Base+0x2410>  // b.none
    4e04:	cbz	x20, 4e30 <PyInit__xxsubinterpreters@@Base+0x241c>
    4e08:	ldr	x8, [x19]
    4e0c:	subs	x8, x8, #0x1
    4e10:	str	x8, [x19]
    4e14:	b.ne	4e38 <PyInit__xxsubinterpreters@@Base+0x2424>  // b.any
    4e18:	mov	x0, x19
    4e1c:	bl	25e0 <_Py_Dealloc@plt>
    4e20:	b	4e38 <PyInit__xxsubinterpreters@@Base+0x2424>
    4e24:	mov	x0, x21
    4e28:	bl	25e0 <_Py_Dealloc@plt>
    4e2c:	cbnz	x20, 4e08 <PyInit__xxsubinterpreters@@Base+0x23f4>
    4e30:	bl	26f0 <PyErr_Clear@plt>
    4e34:	mov	x20, x19
    4e38:	mov	x0, x20
    4e3c:	ldp	x20, x19, [sp, #32]
    4e40:	ldr	x21, [sp, #16]
    4e44:	ldp	x29, x30, [sp], #48
    4e48:	ret

Disassembly of section .fini:

0000000000004e4c <.fini>:
    4e4c:	stp	x29, x30, [sp, #-16]!
    4e50:	mov	x29, sp
    4e54:	ldp	x29, x30, [sp], #16
    4e58:	ret
