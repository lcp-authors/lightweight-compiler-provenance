
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//timedatectl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401d88 <.init>:
  401d88:	stp	x29, x30, [sp, #-16]!
  401d8c:	mov	x29, sp
  401d90:	bl	4022f0 <parse_ifindex@plt+0x60>
  401d94:	ldp	x29, x30, [sp], #16
  401d98:	ret

Disassembly of section .plt:

0000000000401da0 <__libc_start_main@plt-0x20>:
  401da0:	stp	x16, x30, [sp, #-16]!
  401da4:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401da8:	ldr	x17, [x16, #3464]
  401dac:	add	x16, x16, #0xd88
  401db0:	br	x17
  401db4:	nop
  401db8:	nop
  401dbc:	nop

0000000000401dc0 <__libc_start_main@plt>:
  401dc0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401dc4:	ldr	x17, [x16, #3472]
  401dc8:	add	x16, x16, #0xd90
  401dcc:	br	x17

0000000000401dd0 <abort@plt>:
  401dd0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401dd4:	ldr	x17, [x16, #3480]
  401dd8:	add	x16, x16, #0xd98
  401ddc:	br	x17

0000000000401de0 <__gmon_start__@plt>:
  401de0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401de4:	ldr	x17, [x16, #3488]
  401de8:	add	x16, x16, #0xda0
  401dec:	br	x17

0000000000401df0 <ask_password_agent_close@plt>:
  401df0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401df4:	ldr	x17, [x16, #3496]
  401df8:	add	x16, x16, #0xda8
  401dfc:	br	x17

0000000000401e00 <polkit_agent_close@plt>:
  401e00:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e04:	ldr	x17, [x16, #3504]
  401e08:	add	x16, x16, #0xdb0
  401e0c:	br	x17

0000000000401e10 <pager_close@plt>:
  401e10:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e14:	ldr	x17, [x16, #3512]
  401e18:	add	x16, x16, #0xdb8
  401e1c:	br	x17

0000000000401e20 <mac_selinux_finish@plt>:
  401e20:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e24:	ldr	x17, [x16, #3520]
  401e28:	add	x16, x16, #0xdc0
  401e2c:	br	x17

0000000000401e30 <setlocale@plt>:
  401e30:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e34:	ldr	x17, [x16, #3528]
  401e38:	add	x16, x16, #0xdc8
  401e3c:	br	x17

0000000000401e40 <log_show_color@plt>:
  401e40:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e44:	ldr	x17, [x16, #3536]
  401e48:	add	x16, x16, #0xdd0
  401e4c:	br	x17

0000000000401e50 <log_parse_environment_realm@plt>:
  401e50:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e54:	ldr	x17, [x16, #3544]
  401e58:	add	x16, x16, #0xdd8
  401e5c:	br	x17

0000000000401e60 <log_open@plt>:
  401e60:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e64:	ldr	x17, [x16, #3552]
  401e68:	add	x16, x16, #0xde0
  401e6c:	br	x17

0000000000401e70 <bus_connect_transport@plt>:
  401e70:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e74:	ldr	x17, [x16, #3560]
  401e78:	add	x16, x16, #0xde8
  401e7c:	br	x17

0000000000401e80 <log_get_max_level_realm@plt>:
  401e80:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e84:	ldr	x17, [x16, #3568]
  401e88:	add	x16, x16, #0xdf0
  401e8c:	br	x17

0000000000401e90 <log_internal_realm@plt>:
  401e90:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401e94:	ldr	x17, [x16, #3576]
  401e98:	add	x16, x16, #0xdf8
  401e9c:	br	x17

0000000000401ea0 <abs@plt>:
  401ea0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401ea4:	ldr	x17, [x16, #3584]
  401ea8:	add	x16, x16, #0xe00
  401eac:	br	x17

0000000000401eb0 <sd_bus_flush_close_unref@plt>:
  401eb0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401eb4:	ldr	x17, [x16, #3592]
  401eb8:	add	x16, x16, #0xe08
  401ebc:	br	x17

0000000000401ec0 <log_assert_failed_realm@plt>:
  401ec0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401ec4:	ldr	x17, [x16, #3600]
  401ec8:	add	x16, x16, #0xe10
  401ecc:	br	x17

0000000000401ed0 <getopt_long@plt>:
  401ed0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401ed4:	ldr	x17, [x16, #3608]
  401ed8:	add	x16, x16, #0xe18
  401edc:	br	x17

0000000000401ee0 <version@plt>:
  401ee0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401ee4:	ldr	x17, [x16, #3616]
  401ee8:	add	x16, x16, #0xe20
  401eec:	br	x17

0000000000401ef0 <strv_extend@plt>:
  401ef0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401ef4:	ldr	x17, [x16, #3624]
  401ef8:	add	x16, x16, #0xe28
  401efc:	br	x17

0000000000401f00 <log_oom_internal@plt>:
  401f00:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f04:	ldr	x17, [x16, #3632]
  401f08:	add	x16, x16, #0xe30
  401f0c:	br	x17

0000000000401f10 <log_assert_failed_unreachable_realm@plt>:
  401f10:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f14:	ldr	x17, [x16, #3640]
  401f18:	add	x16, x16, #0xe38
  401f1c:	br	x17

0000000000401f20 <dispatch_verb@plt>:
  401f20:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f24:	ldr	x17, [x16, #3648]
  401f28:	add	x16, x16, #0xe40
  401f2c:	br	x17

0000000000401f30 <terminal_urlify_man@plt>:
  401f30:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f34:	ldr	x17, [x16, #3656]
  401f38:	add	x16, x16, #0xe48
  401f3c:	br	x17

0000000000401f40 <printf@plt>:
  401f40:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f44:	ldr	x17, [x16, #3664]
  401f48:	add	x16, x16, #0xe50
  401f4c:	br	x17

0000000000401f50 <free@plt>:
  401f50:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f54:	ldr	x17, [x16, #3672]
  401f58:	add	x16, x16, #0xe58
  401f5c:	br	x17

0000000000401f60 <colors_enabled@plt>:
  401f60:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f64:	ldr	x17, [x16, #3680]
  401f68:	add	x16, x16, #0xe60
  401f6c:	br	x17

0000000000401f70 <memset@plt>:
  401f70:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f74:	ldr	x17, [x16, #3688]
  401f78:	add	x16, x16, #0xe68
  401f7c:	br	x17

0000000000401f80 <bus_map_all_properties@plt>:
  401f80:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f84:	ldr	x17, [x16, #3696]
  401f88:	add	x16, x16, #0xe70
  401f8c:	br	x17

0000000000401f90 <bus_error_message@plt>:
  401f90:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401f94:	ldr	x17, [x16, #3704]
  401f98:	add	x16, x16, #0xe78
  401f9c:	br	x17

0000000000401fa0 <sd_bus_error_free@plt>:
  401fa0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401fa4:	ldr	x17, [x16, #3712]
  401fa8:	add	x16, x16, #0xe80
  401fac:	br	x17

0000000000401fb0 <bus_print_all_properties@plt>:
  401fb0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401fb4:	ldr	x17, [x16, #3720]
  401fb8:	add	x16, x16, #0xe88
  401fbc:	br	x17

0000000000401fc0 <polkit_agent_open_if_enabled@plt>:
  401fc0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401fc4:	ldr	x17, [x16, #3728]
  401fc8:	add	x16, x16, #0xe90
  401fcc:	br	x17

0000000000401fd0 <parse_timestamp@plt>:
  401fd0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401fd4:	ldr	x17, [x16, #3736]
  401fd8:	add	x16, x16, #0xe98
  401fdc:	br	x17

0000000000401fe0 <sd_bus_call_method@plt>:
  401fe0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401fe4:	ldr	x17, [x16, #3744]
  401fe8:	add	x16, x16, #0xea0
  401fec:	br	x17

0000000000401ff0 <sd_bus_message_read_strv@plt>:
  401ff0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  401ff4:	ldr	x17, [x16, #3752]
  401ff8:	add	x16, x16, #0xea8
  401ffc:	br	x17

0000000000402000 <pager_open@plt>:
  402000:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402004:	ldr	x17, [x16, #3760]
  402008:	add	x16, x16, #0xeb0
  40200c:	br	x17

0000000000402010 <strv_print@plt>:
  402010:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402014:	ldr	x17, [x16, #3768]
  402018:	add	x16, x16, #0xeb8
  40201c:	br	x17

0000000000402020 <parse_boolean@plt>:
  402020:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402024:	ldr	x17, [x16, #3776]
  402028:	add	x16, x16, #0xec0
  40202c:	br	x17

0000000000402030 <sd_event_default@plt>:
  402030:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402034:	ldr	x17, [x16, #3784]
  402038:	add	x16, x16, #0xec8
  40203c:	br	x17

0000000000402040 <sd_bus_match_signal@plt>:
  402040:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402044:	ldr	x17, [x16, #3792]
  402048:	add	x16, x16, #0xed0
  40204c:	br	x17

0000000000402050 <sd_bus_attach_event@plt>:
  402050:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402054:	ldr	x17, [x16, #3800]
  402058:	add	x16, x16, #0xed8
  40205c:	br	x17

0000000000402060 <sd_event_loop@plt>:
  402060:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402064:	ldr	x17, [x16, #3808]
  402068:	add	x16, x16, #0xee0
  40206c:	br	x17

0000000000402070 <sd_bus_message_new_method_call@plt>:
  402070:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402074:	ldr	x17, [x16, #3816]
  402078:	add	x16, x16, #0xee8
  40207c:	br	x17

0000000000402080 <sd_bus_message_append@plt>:
  402080:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402084:	ldr	x17, [x16, #3824]
  402088:	add	x16, x16, #0xef0
  40208c:	br	x17

0000000000402090 <sd_bus_message_append_strv@plt>:
  402090:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402094:	ldr	x17, [x16, #3832]
  402098:	add	x16, x16, #0xef8
  40209c:	br	x17

00000000004020a0 <sd_bus_call@plt>:
  4020a0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4020a4:	ldr	x17, [x16, #3840]
  4020a8:	add	x16, x16, #0xf00
  4020ac:	br	x17

00000000004020b0 <sd_bus_message_unref@plt>:
  4020b0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4020b4:	ldr	x17, [x16, #3848]
  4020b8:	add	x16, x16, #0xf08
  4020bc:	br	x17

00000000004020c0 <getenv@plt>:
  4020c0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4020c4:	ldr	x17, [x16, #3856]
  4020c8:	add	x16, x16, #0xf10
  4020cc:	br	x17

00000000004020d0 <strlen@plt>:
  4020d0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4020d4:	ldr	x17, [x16, #3864]
  4020d8:	add	x16, x16, #0xf18
  4020dc:	br	x17

00000000004020e0 <memcpy@plt>:
  4020e0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4020e4:	ldr	x17, [x16, #3872]
  4020e8:	add	x16, x16, #0xf20
  4020ec:	br	x17

00000000004020f0 <stpcpy@plt>:
  4020f0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4020f4:	ldr	x17, [x16, #3880]
  4020f8:	add	x16, x16, #0xf28
  4020fc:	br	x17

0000000000402100 <setenv@plt>:
  402100:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402104:	ldr	x17, [x16, #3888]
  402108:	add	x16, x16, #0xf30
  40210c:	br	x17

0000000000402110 <__errno_location@plt>:
  402110:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402114:	ldr	x17, [x16, #3896]
  402118:	add	x16, x16, #0xf38
  40211c:	br	x17

0000000000402120 <tzset@plt>:
  402120:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402124:	ldr	x17, [x16, #3904]
  402128:	add	x16, x16, #0xf40
  40212c:	br	x17

0000000000402130 <time@plt>:
  402130:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402134:	ldr	x17, [x16, #3912]
  402138:	add	x16, x16, #0xf48
  40213c:	br	x17

0000000000402140 <localtime_r@plt>:
  402140:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402144:	ldr	x17, [x16, #3920]
  402148:	add	x16, x16, #0xf50
  40214c:	br	x17

0000000000402150 <strftime@plt>:
  402150:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402154:	ldr	x17, [x16, #3928]
  402158:	add	x16, x16, #0xf58
  40215c:	br	x17

0000000000402160 <gmtime_r@plt>:
  402160:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402164:	ldr	x17, [x16, #3936]
  402168:	add	x16, x16, #0xf60
  40216c:	br	x17

0000000000402170 <unsetenv@plt>:
  402170:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402174:	ldr	x17, [x16, #3944]
  402178:	add	x16, x16, #0xf68
  40217c:	br	x17

0000000000402180 <sd_event_unref@plt>:
  402180:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402184:	ldr	x17, [x16, #3952]
  402188:	add	x16, x16, #0xf70
  40218c:	br	x17

0000000000402190 <terminal_is_dumb@plt>:
  402190:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402194:	ldr	x17, [x16, #3960]
  402198:	add	x16, x16, #0xf78
  40219c:	br	x17

00000000004021a0 <fputs@plt>:
  4021a0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4021a4:	ldr	x17, [x16, #3968]
  4021a8:	add	x16, x16, #0xf80
  4021ac:	br	x17

00000000004021b0 <sd_bus_message_read@plt>:
  4021b0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4021b4:	ldr	x17, [x16, #3976]
  4021b8:	add	x16, x16, #0xf88
  4021bc:	br	x17

00000000004021c0 <sd_bus_message_get_bus@plt>:
  4021c0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4021c4:	ldr	x17, [x16, #3984]
  4021c8:	add	x16, x16, #0xf90
  4021cc:	br	x17

00000000004021d0 <sd_bus_message_enter_container@plt>:
  4021d0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4021d4:	ldr	x17, [x16, #3992]
  4021d8:	add	x16, x16, #0xf98
  4021dc:	br	x17

00000000004021e0 <sd_bus_message_read_array@plt>:
  4021e0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4021e4:	ldr	x17, [x16, #4000]
  4021e8:	add	x16, x16, #0xfa0
  4021ec:	br	x17

00000000004021f0 <sd_bus_message_exit_container@plt>:
  4021f0:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  4021f4:	ldr	x17, [x16, #4008]
  4021f8:	add	x16, x16, #0xfa8
  4021fc:	br	x17

0000000000402200 <in_addr_to_string@plt>:
  402200:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402204:	ldr	x17, [x16, #4016]
  402208:	add	x16, x16, #0xfb0
  40220c:	br	x17

0000000000402210 <format_timespan@plt>:
  402210:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402214:	ldr	x17, [x16, #4024]
  402218:	add	x16, x16, #0xfb8
  40221c:	br	x17

0000000000402220 <exp2@plt>:
  402220:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402224:	ldr	x17, [x16, #4032]
  402228:	add	x16, x16, #0xfc0
  40222c:	br	x17

0000000000402230 <strcmp_ptr@plt>:
  402230:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402234:	ldr	x17, [x16, #4040]
  402238:	add	x16, x16, #0xfc8
  40223c:	br	x17

0000000000402240 <sd_bus_message_peek_type@plt>:
  402240:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402244:	ldr	x17, [x16, #4048]
  402248:	add	x16, x16, #0xfd0
  40224c:	br	x17

0000000000402250 <strcmp@plt>:
  402250:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402254:	ldr	x17, [x16, #4056]
  402258:	add	x16, x16, #0xfd8
  40225c:	br	x17

0000000000402260 <fputc@plt>:
  402260:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402264:	ldr	x17, [x16, #4064]
  402268:	add	x16, x16, #0xfe0
  40226c:	br	x17

0000000000402270 <format_timestamp@plt>:
  402270:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402274:	ldr	x17, [x16, #4072]
  402278:	add	x16, x16, #0xfe8
  40227c:	br	x17

0000000000402280 <bus_print_property_value@plt>:
  402280:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402284:	ldr	x17, [x16, #4080]
  402288:	add	x16, x16, #0xff0
  40228c:	br	x17

0000000000402290 <parse_ifindex@plt>:
  402290:	adrp	x16, 41f000 <parse_ifindex@plt+0x1cd70>
  402294:	ldr	x17, [x16, #4088]
  402298:	add	x16, x16, #0xff8
  40229c:	br	x17

Disassembly of section .text:

00000000004022a0 <.text>:
  4022a0:	mov	x29, #0x0                   	// #0
  4022a4:	mov	x30, #0x0                   	// #0
  4022a8:	mov	x5, x0
  4022ac:	ldr	x1, [sp]
  4022b0:	add	x2, sp, #0x8
  4022b4:	mov	x6, sp
  4022b8:	movz	x0, #0x0, lsl #48
  4022bc:	movk	x0, #0x0, lsl #32
  4022c0:	movk	x0, #0x40, lsl #16
  4022c4:	movk	x0, #0x2468
  4022c8:	movz	x3, #0x0, lsl #48
  4022cc:	movk	x3, #0x0, lsl #32
  4022d0:	movk	x3, #0x40, lsl #16
  4022d4:	movk	x3, #0x6ba0
  4022d8:	movz	x4, #0x0, lsl #48
  4022dc:	movk	x4, #0x0, lsl #32
  4022e0:	movk	x4, #0x40, lsl #16
  4022e4:	movk	x4, #0x6c20
  4022e8:	bl	401dc0 <__libc_start_main@plt>
  4022ec:	bl	401dd0 <abort@plt>
  4022f0:	adrp	x0, 41f000 <parse_ifindex@plt+0x1cd70>
  4022f4:	ldr	x0, [x0, #3424]
  4022f8:	cbz	x0, 402300 <parse_ifindex@plt+0x70>
  4022fc:	b	401de0 <__gmon_start__@plt>
  402300:	ret
  402304:	stp	x29, x30, [sp, #-32]!
  402308:	mov	x29, sp
  40230c:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  402310:	add	x0, x0, #0x0
  402314:	str	x0, [sp, #24]
  402318:	ldr	x0, [sp, #24]
  40231c:	str	x0, [sp, #24]
  402320:	ldr	x1, [sp, #24]
  402324:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  402328:	add	x0, x0, #0x0
  40232c:	cmp	x1, x0
  402330:	b.eq	40236c <parse_ifindex@plt+0xdc>  // b.none
  402334:	adrp	x0, 406000 <parse_ifindex@plt+0x3d70>
  402338:	add	x0, x0, #0xc40
  40233c:	ldr	x0, [x0]
  402340:	str	x0, [sp, #16]
  402344:	ldr	x0, [sp, #16]
  402348:	str	x0, [sp, #16]
  40234c:	ldr	x0, [sp, #16]
  402350:	cmp	x0, #0x0
  402354:	b.eq	402370 <parse_ifindex@plt+0xe0>  // b.none
  402358:	ldr	x1, [sp, #16]
  40235c:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  402360:	add	x0, x0, #0x0
  402364:	blr	x1
  402368:	b	402370 <parse_ifindex@plt+0xe0>
  40236c:	nop
  402370:	ldp	x29, x30, [sp], #32
  402374:	ret
  402378:	stp	x29, x30, [sp, #-48]!
  40237c:	mov	x29, sp
  402380:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  402384:	add	x0, x0, #0x0
  402388:	str	x0, [sp, #40]
  40238c:	ldr	x0, [sp, #40]
  402390:	str	x0, [sp, #40]
  402394:	ldr	x1, [sp, #40]
  402398:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  40239c:	add	x0, x0, #0x0
  4023a0:	sub	x0, x1, x0
  4023a4:	asr	x0, x0, #3
  4023a8:	lsr	x1, x0, #63
  4023ac:	add	x0, x1, x0
  4023b0:	asr	x0, x0, #1
  4023b4:	str	x0, [sp, #32]
  4023b8:	ldr	x0, [sp, #32]
  4023bc:	cmp	x0, #0x0
  4023c0:	b.eq	402400 <parse_ifindex@plt+0x170>  // b.none
  4023c4:	adrp	x0, 406000 <parse_ifindex@plt+0x3d70>
  4023c8:	add	x0, x0, #0xc48
  4023cc:	ldr	x0, [x0]
  4023d0:	str	x0, [sp, #24]
  4023d4:	ldr	x0, [sp, #24]
  4023d8:	str	x0, [sp, #24]
  4023dc:	ldr	x0, [sp, #24]
  4023e0:	cmp	x0, #0x0
  4023e4:	b.eq	402404 <parse_ifindex@plt+0x174>  // b.none
  4023e8:	ldr	x2, [sp, #24]
  4023ec:	ldr	x1, [sp, #32]
  4023f0:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  4023f4:	add	x0, x0, #0x0
  4023f8:	blr	x2
  4023fc:	b	402404 <parse_ifindex@plt+0x174>
  402400:	nop
  402404:	ldp	x29, x30, [sp], #48
  402408:	ret
  40240c:	stp	x29, x30, [sp, #-16]!
  402410:	mov	x29, sp
  402414:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  402418:	add	x0, x0, #0x8
  40241c:	ldrb	w0, [x0]
  402420:	and	x0, x0, #0xff
  402424:	cmp	x0, #0x0
  402428:	b.ne	402444 <parse_ifindex@plt+0x1b4>  // b.any
  40242c:	bl	402304 <parse_ifindex@plt+0x74>
  402430:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  402434:	add	x0, x0, #0x8
  402438:	mov	w1, #0x1                   	// #1
  40243c:	strb	w1, [x0]
  402440:	b	402448 <parse_ifindex@plt+0x1b8>
  402444:	nop
  402448:	ldp	x29, x30, [sp], #16
  40244c:	ret
  402450:	stp	x29, x30, [sp, #-16]!
  402454:	mov	x29, sp
  402458:	bl	402378 <parse_ifindex@plt+0xe8>
  40245c:	nop
  402460:	ldp	x29, x30, [sp], #16
  402464:	ret
  402468:	sub	sp, sp, #0x30
  40246c:	stp	x29, x30, [sp, #32]
  402470:	add	x29, sp, #0x20
  402474:	mov	w8, wzr
  402478:	mov	w9, #0x1                   	// #1
  40247c:	stur	wzr, [x29, #-4]
  402480:	stur	w0, [x29, #-8]
  402484:	str	x1, [sp, #16]
  402488:	ldur	w0, [x29, #-8]
  40248c:	ldr	x1, [sp, #16]
  402490:	str	w8, [sp, #8]
  402494:	str	w9, [sp, #4]
  402498:	bl	4024e0 <parse_ifindex@plt+0x250>
  40249c:	ldur	w0, [x29, #-8]
  4024a0:	ldr	x1, [sp, #16]
  4024a4:	bl	402514 <parse_ifindex@plt+0x284>
  4024a8:	str	w0, [sp, #12]
  4024ac:	bl	401df0 <ask_password_agent_close@plt>
  4024b0:	bl	401e00 <polkit_agent_close@plt>
  4024b4:	bl	401e10 <pager_close@plt>
  4024b8:	bl	401e20 <mac_selinux_finish@plt>
  4024bc:	bl	4026bc <parse_ifindex@plt+0x42c>
  4024c0:	ldr	w8, [sp, #12]
  4024c4:	cmp	w8, #0x0
  4024c8:	ldr	w8, [sp, #4]
  4024cc:	ldr	w9, [sp, #8]
  4024d0:	csel	w0, w8, w9, lt  // lt = tstop
  4024d4:	ldp	x29, x30, [sp, #32]
  4024d8:	add	sp, sp, #0x30
  4024dc:	ret
  4024e0:	sub	sp, sp, #0x10
  4024e4:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4024e8:	add	x8, x8, #0x40
  4024ec:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  4024f0:	add	x9, x9, #0x48
  4024f4:	str	w0, [sp, #12]
  4024f8:	str	x1, [sp]
  4024fc:	ldr	w10, [sp, #12]
  402500:	str	w10, [x8]
  402504:	ldr	x8, [sp]
  402508:	str	x8, [x9]
  40250c:	add	sp, sp, #0x10
  402510:	ret
  402514:	sub	sp, sp, #0x60
  402518:	stp	x29, x30, [sp, #80]
  40251c:	add	x29, sp, #0x50
  402520:	mov	x8, xzr
  402524:	mov	w9, #0x6                   	// #6
  402528:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  40252c:	add	x10, x10, #0x220
  402530:	mov	w11, wzr
  402534:	mov	w12, #0x1                   	// #1
  402538:	adrp	x13, 407000 <parse_ifindex@plt+0x4d70>
  40253c:	add	x13, x13, #0x221
  402540:	add	x2, x13, #0x3
  402544:	stur	w0, [x29, #-8]
  402548:	stur	x1, [x29, #-16]
  40254c:	stur	x8, [x29, #-24]
  402550:	mov	w0, w9
  402554:	mov	x1, x10
  402558:	str	w11, [sp, #28]
  40255c:	str	w12, [sp, #24]
  402560:	str	x2, [sp, #16]
  402564:	bl	401e30 <setlocale@plt>
  402568:	ldr	w9, [sp, #24]
  40256c:	and	w11, w9, #0x1
  402570:	mov	w0, w11
  402574:	bl	401e40 <log_show_color@plt>
  402578:	ldr	w0, [sp, #28]
  40257c:	bl	401e50 <log_parse_environment_realm@plt>
  402580:	bl	401e60 <log_open@plt>
  402584:	ldur	w9, [x29, #-8]
  402588:	ldur	x1, [x29, #-16]
  40258c:	mov	w0, w9
  402590:	bl	402770 <parse_ifindex@plt+0x4e0>
  402594:	stur	w0, [x29, #-28]
  402598:	ldur	w9, [x29, #-28]
  40259c:	cmp	w9, #0x0
  4025a0:	cset	w9, gt
  4025a4:	tbnz	w9, #0, 4025bc <parse_ifindex@plt+0x32c>
  4025a8:	ldur	w8, [x29, #-28]
  4025ac:	stur	w8, [x29, #-4]
  4025b0:	mov	w8, #0x1                   	// #1
  4025b4:	stur	w8, [x29, #-32]
  4025b8:	b	4026a4 <parse_ifindex@plt+0x414>
  4025bc:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4025c0:	add	x8, x8, #0x10
  4025c4:	ldr	w0, [x8]
  4025c8:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4025cc:	add	x8, x8, #0x18
  4025d0:	ldr	x1, [x8]
  4025d4:	mov	w9, wzr
  4025d8:	and	w2, w9, #0x1
  4025dc:	sub	x3, x29, #0x18
  4025e0:	bl	401e70 <bus_connect_transport@plt>
  4025e4:	stur	w0, [x29, #-28]
  4025e8:	ldur	w9, [x29, #-28]
  4025ec:	cmp	w9, #0x0
  4025f0:	cset	w9, ge  // ge = tcont
  4025f4:	tbnz	w9, #0, 402688 <parse_ifindex@plt+0x3f8>
  4025f8:	mov	w8, #0x3                   	// #3
  4025fc:	stur	w8, [x29, #-36]
  402600:	ldur	w8, [x29, #-28]
  402604:	str	w8, [sp, #40]
  402608:	str	wzr, [sp, #36]
  40260c:	ldr	w0, [sp, #36]
  402610:	bl	401e80 <log_get_max_level_realm@plt>
  402614:	ldur	w8, [x29, #-36]
  402618:	and	w8, w8, #0x7
  40261c:	cmp	w0, w8
  402620:	b.lt	402658 <parse_ifindex@plt+0x3c8>  // b.tstop
  402624:	ldr	w8, [sp, #36]
  402628:	ldur	w9, [x29, #-36]
  40262c:	orr	w0, w9, w8, lsl #10
  402630:	ldr	w1, [sp, #40]
  402634:	ldr	x2, [sp, #16]
  402638:	mov	w3, #0x3d8                 	// #984
  40263c:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  402640:	add	x4, x4, #0x23f
  402644:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  402648:	add	x5, x5, #0x243
  40264c:	bl	401e90 <log_internal_realm@plt>
  402650:	str	w0, [sp, #12]
  402654:	b	40266c <parse_ifindex@plt+0x3dc>
  402658:	ldr	w0, [sp, #40]
  40265c:	bl	401ea0 <abs@plt>
  402660:	mov	w8, wzr
  402664:	subs	w8, w8, w0, uxtb
  402668:	str	w8, [sp, #12]
  40266c:	ldr	w8, [sp, #12]
  402670:	str	w8, [sp, #32]
  402674:	ldr	w8, [sp, #32]
  402678:	stur	w8, [x29, #-4]
  40267c:	mov	w8, #0x1                   	// #1
  402680:	stur	w8, [x29, #-32]
  402684:	b	4026a4 <parse_ifindex@plt+0x414>
  402688:	ldur	x0, [x29, #-24]
  40268c:	ldur	w1, [x29, #-8]
  402690:	ldur	x2, [x29, #-16]
  402694:	bl	402ac8 <parse_ifindex@plt+0x838>
  402698:	stur	w0, [x29, #-4]
  40269c:	mov	w8, #0x1                   	// #1
  4026a0:	stur	w8, [x29, #-32]
  4026a4:	sub	x0, x29, #0x18
  4026a8:	bl	40273c <parse_ifindex@plt+0x4ac>
  4026ac:	ldur	w0, [x29, #-4]
  4026b0:	ldp	x29, x30, [sp, #80]
  4026b4:	add	sp, sp, #0x60
  4026b8:	ret
  4026bc:	sub	sp, sp, #0x20
  4026c0:	stp	x29, x30, [sp, #16]
  4026c4:	add	x29, sp, #0x10
  4026c8:	adrp	x8, 41f000 <parse_ifindex@plt+0x1cd70>
  4026cc:	ldr	x8, [x8, #3432]
  4026d0:	str	x8, [sp]
  4026d4:	cbnz	x8, 4026dc <parse_ifindex@plt+0x44c>
  4026d8:	b	402730 <parse_ifindex@plt+0x4a0>
  4026dc:	ldr	x0, [sp]
  4026e0:	mov	x1, #0x8                   	// #8
  4026e4:	bl	406b70 <parse_ifindex@plt+0x48e0>
  4026e8:	str	x0, [sp, #8]
  4026ec:	ldr	x8, [sp, #8]
  4026f0:	adrp	x9, 41f000 <parse_ifindex@plt+0x1cd70>
  4026f4:	ldr	x9, [x9, #3440]
  4026f8:	cmp	x8, x9
  4026fc:	b.cs	402730 <parse_ifindex@plt+0x4a0>  // b.hs, b.nlast
  402700:	ldr	x8, [sp, #8]
  402704:	ldr	x8, [x8, #8]
  402708:	ldr	x9, [sp, #8]
  40270c:	ldr	x0, [x9]
  402710:	blr	x8
  402714:	ldr	x8, [sp, #8]
  402718:	add	x8, x8, #0x10
  40271c:	mov	x0, x8
  402720:	mov	x1, #0x8                   	// #8
  402724:	bl	406b70 <parse_ifindex@plt+0x48e0>
  402728:	str	x0, [sp, #8]
  40272c:	b	4026ec <parse_ifindex@plt+0x45c>
  402730:	ldp	x29, x30, [sp, #16]
  402734:	add	sp, sp, #0x20
  402738:	ret
  40273c:	sub	sp, sp, #0x20
  402740:	stp	x29, x30, [sp, #16]
  402744:	add	x29, sp, #0x10
  402748:	str	x0, [sp, #8]
  40274c:	ldr	x8, [sp, #8]
  402750:	ldr	x8, [x8]
  402754:	cbz	x8, 402764 <parse_ifindex@plt+0x4d4>
  402758:	ldr	x8, [sp, #8]
  40275c:	ldr	x0, [x8]
  402760:	bl	401eb0 <sd_bus_flush_close_unref@plt>
  402764:	ldp	x29, x30, [sp, #16]
  402768:	add	sp, sp, #0x20
  40276c:	ret
  402770:	sub	sp, sp, #0x50
  402774:	stp	x29, x30, [sp, #64]
  402778:	add	x29, sp, #0x40
  40277c:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402780:	add	x8, x8, #0x50
  402784:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  402788:	add	x9, x9, #0x221
  40278c:	add	x9, x9, #0x3
  402790:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  402794:	add	x10, x10, #0x2d3
  402798:	stur	w0, [x29, #-8]
  40279c:	stur	x1, [x29, #-16]
  4027a0:	str	x8, [sp, #32]
  4027a4:	str	x9, [sp, #24]
  4027a8:	str	x10, [sp, #16]
  4027ac:	ldur	w8, [x29, #-8]
  4027b0:	cmp	w8, #0x0
  4027b4:	cset	w8, ge  // ge = tcont
  4027b8:	mov	w9, #0x1                   	// #1
  4027bc:	eor	w8, w8, #0x1
  4027c0:	eor	w8, w8, w9
  4027c4:	eor	w8, w8, w9
  4027c8:	and	w8, w8, #0x1
  4027cc:	mov	w0, w8
  4027d0:	sxtw	x10, w0
  4027d4:	cbz	x10, 4027f8 <parse_ifindex@plt+0x568>
  4027d8:	mov	w8, wzr
  4027dc:	mov	w0, w8
  4027e0:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  4027e4:	add	x1, x1, #0x2c9
  4027e8:	ldr	x2, [sp, #24]
  4027ec:	mov	w3, #0x370                 	// #880
  4027f0:	ldr	x4, [sp, #16]
  4027f4:	bl	401ec0 <log_assert_failed_realm@plt>
  4027f8:	ldur	x8, [x29, #-16]
  4027fc:	cmp	x8, #0x0
  402800:	cset	w9, ne  // ne = any
  402804:	mov	w10, #0x1                   	// #1
  402808:	eor	w9, w9, #0x1
  40280c:	eor	w9, w9, w10
  402810:	eor	w9, w9, w10
  402814:	and	w9, w9, #0x1
  402818:	mov	w0, w9
  40281c:	sxtw	x8, w0
  402820:	cbz	x8, 402844 <parse_ifindex@plt+0x5b4>
  402824:	mov	w8, wzr
  402828:	mov	w0, w8
  40282c:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  402830:	add	x1, x1, #0x2f0
  402834:	ldr	x2, [sp, #24]
  402838:	mov	w3, #0x371                 	// #881
  40283c:	ldr	x4, [sp, #16]
  402840:	bl	401ec0 <log_assert_failed_realm@plt>
  402844:	ldur	w0, [x29, #-8]
  402848:	ldur	x1, [x29, #-16]
  40284c:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  402850:	add	x2, x2, #0x2f5
  402854:	adrp	x3, 406000 <parse_ifindex@plt+0x3d70>
  402858:	add	x3, x3, #0xc58
  40285c:	mov	x8, xzr
  402860:	mov	x4, x8
  402864:	bl	401ed0 <getopt_long@plt>
  402868:	stur	w0, [x29, #-20]
  40286c:	cmp	w0, #0x0
  402870:	cset	w9, lt  // lt = tstop
  402874:	tbnz	w9, #0, 402ab0 <parse_ifindex@plt+0x820>
  402878:	ldur	w8, [x29, #-20]
  40287c:	cmp	w8, #0x3f
  402880:	str	w8, [sp, #12]
  402884:	b.eq	402a80 <parse_ifindex@plt+0x7f0>  // b.none
  402888:	b	40288c <parse_ifindex@plt+0x5fc>
  40288c:	ldr	w8, [sp, #12]
  402890:	cmp	w8, #0x48
  402894:	b.eq	402954 <parse_ifindex@plt+0x6c4>  // b.none
  402898:	b	40289c <parse_ifindex@plt+0x60c>
  40289c:	ldr	w8, [sp, #12]
  4028a0:	cmp	w8, #0x4d
  4028a4:	b.eq	40297c <parse_ifindex@plt+0x6ec>  // b.none
  4028a8:	b	4028ac <parse_ifindex@plt+0x61c>
  4028ac:	ldr	w8, [sp, #12]
  4028b0:	cmp	w8, #0x61
  4028b4:	b.eq	402a58 <parse_ifindex@plt+0x7c8>  // b.none
  4028b8:	b	4028bc <parse_ifindex@plt+0x62c>
  4028bc:	ldr	w8, [sp, #12]
  4028c0:	cmp	w8, #0x68
  4028c4:	b.eq	40293c <parse_ifindex@plt+0x6ac>  // b.none
  4028c8:	b	4028cc <parse_ifindex@plt+0x63c>
  4028cc:	ldr	w8, [sp, #12]
  4028d0:	cmp	w8, #0x70
  4028d4:	b.eq	4029f8 <parse_ifindex@plt+0x768>  // b.none
  4028d8:	b	4028dc <parse_ifindex@plt+0x64c>
  4028dc:	ldr	w8, [sp, #12]
  4028e0:	cmp	w8, #0x100
  4028e4:	b.eq	402948 <parse_ifindex@plt+0x6b8>  // b.none
  4028e8:	b	4028ec <parse_ifindex@plt+0x65c>
  4028ec:	ldr	w8, [sp, #12]
  4028f0:	cmp	w8, #0x101
  4028f4:	b.eq	4029cc <parse_ifindex@plt+0x73c>  // b.none
  4028f8:	b	4028fc <parse_ifindex@plt+0x66c>
  4028fc:	ldr	w8, [sp, #12]
  402900:	cmp	w8, #0x102
  402904:	b.eq	4029b8 <parse_ifindex@plt+0x728>  // b.none
  402908:	b	40290c <parse_ifindex@plt+0x67c>
  40290c:	ldr	w8, [sp, #12]
  402910:	cmp	w8, #0x103
  402914:	b.eq	4029a4 <parse_ifindex@plt+0x714>  // b.none
  402918:	b	40291c <parse_ifindex@plt+0x68c>
  40291c:	ldr	w8, [sp, #12]
  402920:	cmp	w8, #0x104
  402924:	b.eq	4029e4 <parse_ifindex@plt+0x754>  // b.none
  402928:	b	40292c <parse_ifindex@plt+0x69c>
  40292c:	ldr	w8, [sp, #12]
  402930:	cmp	w8, #0x105
  402934:	b.eq	402a6c <parse_ifindex@plt+0x7dc>  // b.none
  402938:	b	402a8c <parse_ifindex@plt+0x7fc>
  40293c:	bl	402b08 <parse_ifindex@plt+0x878>
  402940:	stur	w0, [x29, #-4]
  402944:	b	402ab8 <parse_ifindex@plt+0x828>
  402948:	bl	401ee0 <version@plt>
  40294c:	stur	w0, [x29, #-4]
  402950:	b	402ab8 <parse_ifindex@plt+0x828>
  402954:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402958:	add	x8, x8, #0x10
  40295c:	mov	w9, #0x1                   	// #1
  402960:	str	w9, [x8]
  402964:	ldr	x8, [sp, #32]
  402968:	ldr	x10, [x8]
  40296c:	adrp	x11, 420000 <parse_ifindex@plt+0x1dd70>
  402970:	add	x11, x11, #0x18
  402974:	str	x10, [x11]
  402978:	b	402aac <parse_ifindex@plt+0x81c>
  40297c:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402980:	add	x8, x8, #0x10
  402984:	mov	w9, #0x2                   	// #2
  402988:	str	w9, [x8]
  40298c:	ldr	x8, [sp, #32]
  402990:	ldr	x10, [x8]
  402994:	adrp	x11, 420000 <parse_ifindex@plt+0x1dd70>
  402998:	add	x11, x11, #0x18
  40299c:	str	x10, [x11]
  4029a0:	b	402aac <parse_ifindex@plt+0x81c>
  4029a4:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4029a8:	add	x8, x8, #0x0
  4029ac:	mov	w9, #0x0                   	// #0
  4029b0:	strb	w9, [x8]
  4029b4:	b	402aac <parse_ifindex@plt+0x81c>
  4029b8:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4029bc:	add	x8, x8, #0x20
  4029c0:	mov	w9, #0x1                   	// #1
  4029c4:	strb	w9, [x8]
  4029c8:	b	402aac <parse_ifindex@plt+0x81c>
  4029cc:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4029d0:	add	x8, x8, #0x24
  4029d4:	ldr	w9, [x8]
  4029d8:	orr	w9, w9, #0x1
  4029dc:	str	w9, [x8]
  4029e0:	b	402aac <parse_ifindex@plt+0x81c>
  4029e4:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4029e8:	add	x8, x8, #0x28
  4029ec:	mov	w9, #0x1                   	// #1
  4029f0:	strb	w9, [x8]
  4029f4:	b	402aac <parse_ifindex@plt+0x81c>
  4029f8:	ldr	x8, [sp, #32]
  4029fc:	ldr	x1, [x8]
  402a00:	adrp	x0, 420000 <parse_ifindex@plt+0x1dd70>
  402a04:	add	x0, x0, #0x30
  402a08:	bl	401ef0 <strv_extend@plt>
  402a0c:	stur	w0, [x29, #-24]
  402a10:	ldur	w9, [x29, #-24]
  402a14:	cmp	w9, #0x0
  402a18:	cset	w9, ge  // ge = tcont
  402a1c:	tbnz	w9, #0, 402a44 <parse_ifindex@plt+0x7b4>
  402a20:	mov	w8, wzr
  402a24:	mov	w0, w8
  402a28:	ldr	x1, [sp, #24]
  402a2c:	mov	w2, #0x39a                 	// #922
  402a30:	adrp	x3, 407000 <parse_ifindex@plt+0x4d70>
  402a34:	add	x3, x3, #0x2fe
  402a38:	bl	401f00 <log_oom_internal@plt>
  402a3c:	stur	w0, [x29, #-4]
  402a40:	b	402ab8 <parse_ifindex@plt+0x828>
  402a44:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402a48:	add	x8, x8, #0x38
  402a4c:	mov	w9, #0x1                   	// #1
  402a50:	strb	w9, [x8]
  402a54:	b	402aac <parse_ifindex@plt+0x81c>
  402a58:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402a5c:	add	x8, x8, #0x38
  402a60:	mov	w9, #0x1                   	// #1
  402a64:	strb	w9, [x8]
  402a68:	b	402aac <parse_ifindex@plt+0x81c>
  402a6c:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402a70:	add	x8, x8, #0x39
  402a74:	mov	w9, #0x1                   	// #1
  402a78:	strb	w9, [x8]
  402a7c:	b	402aac <parse_ifindex@plt+0x81c>
  402a80:	mov	w8, #0xffffffea            	// #-22
  402a84:	stur	w8, [x29, #-4]
  402a88:	b	402ab8 <parse_ifindex@plt+0x828>
  402a8c:	mov	w8, wzr
  402a90:	mov	w0, w8
  402a94:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  402a98:	add	x1, x1, #0x309
  402a9c:	ldr	x2, [sp, #24]
  402aa0:	mov	w3, #0x3af                 	// #943
  402aa4:	ldr	x4, [sp, #16]
  402aa8:	bl	401f10 <log_assert_failed_unreachable_realm@plt>
  402aac:	b	402844 <parse_ifindex@plt+0x5b4>
  402ab0:	mov	w8, #0x1                   	// #1
  402ab4:	stur	w8, [x29, #-4]
  402ab8:	ldur	w0, [x29, #-4]
  402abc:	ldp	x29, x30, [sp, #64]
  402ac0:	add	sp, sp, #0x50
  402ac4:	ret
  402ac8:	sub	sp, sp, #0x30
  402acc:	stp	x29, x30, [sp, #32]
  402ad0:	add	x29, sp, #0x20
  402ad4:	adrp	x8, 406000 <parse_ifindex@plt+0x3d70>
  402ad8:	add	x8, x8, #0xdd8
  402adc:	stur	x0, [x29, #-8]
  402ae0:	stur	w1, [x29, #-12]
  402ae4:	str	x2, [sp, #8]
  402ae8:	ldur	w0, [x29, #-12]
  402aec:	ldr	x1, [sp, #8]
  402af0:	ldur	x3, [x29, #-8]
  402af4:	mov	x2, x8
  402af8:	bl	401f20 <dispatch_verb@plt>
  402afc:	ldp	x29, x30, [sp, #32]
  402b00:	add	sp, sp, #0x30
  402b04:	ret
  402b08:	sub	sp, sp, #0x50
  402b0c:	stp	x29, x30, [sp, #64]
  402b10:	add	x29, sp, #0x40
  402b14:	mov	x8, xzr
  402b18:	adrp	x0, 407000 <parse_ifindex@plt+0x4d70>
  402b1c:	add	x0, x0, #0x31a
  402b20:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  402b24:	add	x1, x1, #0x326
  402b28:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  402b2c:	add	x9, x9, #0x221
  402b30:	add	x9, x9, #0x3
  402b34:	sub	x2, x29, #0x10
  402b38:	stur	x8, [x29, #-16]
  402b3c:	str	x9, [sp, #32]
  402b40:	bl	401f30 <terminal_urlify_man@plt>
  402b44:	stur	w0, [x29, #-20]
  402b48:	ldur	w10, [x29, #-20]
  402b4c:	cmp	w10, #0x0
  402b50:	cset	w10, ge  // ge = tcont
  402b54:	tbnz	w10, #0, 402b84 <parse_ifindex@plt+0x8f4>
  402b58:	mov	w8, wzr
  402b5c:	mov	w0, w8
  402b60:	ldr	x1, [sp, #32]
  402b64:	mov	w2, #0x32b                 	// #811
  402b68:	adrp	x3, 407000 <parse_ifindex@plt+0x4d70>
  402b6c:	add	x3, x3, #0x267
  402b70:	bl	401f00 <log_oom_internal@plt>
  402b74:	stur	w0, [x29, #-4]
  402b78:	mov	w8, #0x1                   	// #1
  402b7c:	stur	w8, [x29, #-24]
  402b80:	b	402bd0 <parse_ifindex@plt+0x940>
  402b84:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402b88:	add	x8, x8, #0x58
  402b8c:	ldr	x1, [x8]
  402b90:	str	x1, [sp, #24]
  402b94:	bl	402c10 <parse_ifindex@plt+0x980>
  402b98:	str	x0, [sp, #16]
  402b9c:	bl	402c54 <parse_ifindex@plt+0x9c4>
  402ba0:	ldur	x4, [x29, #-16]
  402ba4:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  402ba8:	add	x8, x8, #0x328
  402bac:	str	x0, [sp, #8]
  402bb0:	mov	x0, x8
  402bb4:	ldr	x1, [sp, #24]
  402bb8:	ldr	x2, [sp, #16]
  402bbc:	ldr	x3, [sp, #8]
  402bc0:	bl	401f40 <printf@plt>
  402bc4:	stur	wzr, [x29, #-4]
  402bc8:	mov	w9, #0x1                   	// #1
  402bcc:	stur	w9, [x29, #-24]
  402bd0:	sub	x0, x29, #0x10
  402bd4:	bl	402be8 <parse_ifindex@plt+0x958>
  402bd8:	ldur	w0, [x29, #-4]
  402bdc:	ldp	x29, x30, [sp, #64]
  402be0:	add	sp, sp, #0x50
  402be4:	ret
  402be8:	sub	sp, sp, #0x20
  402bec:	stp	x29, x30, [sp, #16]
  402bf0:	add	x29, sp, #0x10
  402bf4:	str	x0, [sp, #8]
  402bf8:	ldr	x8, [sp, #8]
  402bfc:	ldr	x0, [x8]
  402c00:	bl	401f50 <free@plt>
  402c04:	ldp	x29, x30, [sp, #16]
  402c08:	add	sp, sp, #0x20
  402c0c:	ret
  402c10:	sub	sp, sp, #0x20
  402c14:	stp	x29, x30, [sp, #16]
  402c18:	add	x29, sp, #0x10
  402c1c:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  402c20:	add	x8, x8, #0x85d
  402c24:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  402c28:	add	x9, x9, #0x220
  402c2c:	str	x8, [sp, #8]
  402c30:	str	x9, [sp]
  402c34:	bl	401f60 <colors_enabled@plt>
  402c38:	tst	w0, #0x1
  402c3c:	ldr	x8, [sp, #8]
  402c40:	ldr	x9, [sp]
  402c44:	csel	x0, x8, x9, ne  // ne = any
  402c48:	ldp	x29, x30, [sp, #16]
  402c4c:	add	sp, sp, #0x20
  402c50:	ret
  402c54:	sub	sp, sp, #0x20
  402c58:	stp	x29, x30, [sp, #16]
  402c5c:	add	x29, sp, #0x10
  402c60:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  402c64:	add	x8, x8, #0x867
  402c68:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  402c6c:	add	x9, x9, #0x220
  402c70:	str	x8, [sp, #8]
  402c74:	str	x9, [sp]
  402c78:	bl	401f60 <colors_enabled@plt>
  402c7c:	tst	w0, #0x1
  402c80:	ldr	x8, [sp, #8]
  402c84:	ldr	x9, [sp]
  402c88:	csel	x0, x8, x9, ne  // ne = any
  402c8c:	ldp	x29, x30, [sp, #16]
  402c90:	add	sp, sp, #0x20
  402c94:	ret
  402c98:	sub	sp, sp, #0xc0
  402c9c:	stp	x29, x30, [sp, #176]
  402ca0:	add	x29, sp, #0xb0
  402ca4:	mov	x8, #0x20                  	// #32
  402ca8:	mov	x9, xzr
  402cac:	mov	w10, wzr
  402cb0:	adrp	x11, 407000 <parse_ifindex@plt+0x4d70>
  402cb4:	add	x11, x11, #0x221
  402cb8:	add	x11, x11, #0x3
  402cbc:	sub	x12, x29, #0x40
  402cc0:	stur	w0, [x29, #-8]
  402cc4:	stur	x1, [x29, #-16]
  402cc8:	stur	x2, [x29, #-24]
  402ccc:	mov	x0, x12
  402cd0:	mov	w1, w10
  402cd4:	mov	x2, x8
  402cd8:	str	x9, [sp, #40]
  402cdc:	str	x11, [sp, #32]
  402ce0:	bl	401f70 <memset@plt>
  402ce4:	str	xzr, [sp, #88]
  402ce8:	str	xzr, [sp, #96]
  402cec:	str	xzr, [sp, #104]
  402cf0:	ldr	x8, [sp, #40]
  402cf4:	str	x8, [sp, #80]
  402cf8:	ldur	x9, [x29, #-24]
  402cfc:	str	x9, [sp, #72]
  402d00:	ldr	x8, [sp, #72]
  402d04:	cmp	x8, #0x0
  402d08:	cset	w9, ne  // ne = any
  402d0c:	mov	w10, #0x1                   	// #1
  402d10:	eor	w9, w9, #0x1
  402d14:	eor	w9, w9, w10
  402d18:	eor	w9, w9, w10
  402d1c:	and	w9, w9, #0x1
  402d20:	mov	w0, w9
  402d24:	sxtw	x8, w0
  402d28:	cbz	x8, 402d50 <parse_ifindex@plt+0xac0>
  402d2c:	mov	w8, wzr
  402d30:	mov	w0, w8
  402d34:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  402d38:	add	x1, x1, #0x92c
  402d3c:	ldr	x2, [sp, #32]
  402d40:	mov	w3, #0x96                  	// #150
  402d44:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  402d48:	add	x4, x4, #0x930
  402d4c:	bl	401ec0 <log_assert_failed_realm@plt>
  402d50:	ldr	x0, [sp, #72]
  402d54:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  402d58:	add	x1, x1, #0x956
  402d5c:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  402d60:	add	x2, x2, #0x970
  402d64:	adrp	x3, 406000 <parse_ifindex@plt+0x3d70>
  402d68:	add	x3, x3, #0xf78
  402d6c:	mov	w4, #0x2                   	// #2
  402d70:	add	x5, sp, #0x58
  402d74:	add	x6, sp, #0x50
  402d78:	sub	x7, x29, #0x40
  402d7c:	bl	401f80 <bus_map_all_properties@plt>
  402d80:	str	w0, [sp, #68]
  402d84:	ldr	w8, [sp, #68]
  402d88:	cmp	w8, #0x0
  402d8c:	cset	w8, ge  // ge = tcont
  402d90:	tbnz	w8, #0, 402e54 <parse_ifindex@plt+0xbc4>
  402d94:	mov	w8, #0x3                   	// #3
  402d98:	str	w8, [sp, #64]
  402d9c:	ldr	w8, [sp, #68]
  402da0:	str	w8, [sp, #60]
  402da4:	str	wzr, [sp, #56]
  402da8:	ldr	w0, [sp, #56]
  402dac:	bl	401e80 <log_get_max_level_realm@plt>
  402db0:	ldr	w8, [sp, #64]
  402db4:	and	w8, w8, #0x7
  402db8:	cmp	w0, w8
  402dbc:	b.lt	402e24 <parse_ifindex@plt+0xb94>  // b.tstop
  402dc0:	ldr	w8, [sp, #56]
  402dc4:	ldr	w9, [sp, #64]
  402dc8:	orr	w0, w9, w8, lsl #10
  402dcc:	ldr	w1, [sp, #60]
  402dd0:	ldr	w8, [sp, #68]
  402dd4:	add	x10, sp, #0x58
  402dd8:	str	w0, [sp, #28]
  402ddc:	mov	x0, x10
  402de0:	str	w1, [sp, #24]
  402de4:	mov	w1, w8
  402de8:	bl	401f90 <bus_error_message@plt>
  402dec:	ldr	w8, [sp, #28]
  402df0:	str	x0, [sp, #16]
  402df4:	mov	w0, w8
  402df8:	ldr	w1, [sp, #24]
  402dfc:	ldr	x2, [sp, #32]
  402e00:	mov	w3, #0xa1                  	// #161
  402e04:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  402e08:	add	x4, x4, #0x98b
  402e0c:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  402e10:	add	x5, x5, #0x997
  402e14:	ldr	x6, [sp, #16]
  402e18:	bl	401e90 <log_internal_realm@plt>
  402e1c:	str	w0, [sp, #12]
  402e20:	b	402e38 <parse_ifindex@plt+0xba8>
  402e24:	ldr	w0, [sp, #60]
  402e28:	bl	401ea0 <abs@plt>
  402e2c:	mov	w8, wzr
  402e30:	subs	w8, w8, w0, uxtb
  402e34:	str	w8, [sp, #12]
  402e38:	ldr	w8, [sp, #12]
  402e3c:	str	w8, [sp, #52]
  402e40:	ldr	w8, [sp, #52]
  402e44:	stur	w8, [x29, #-4]
  402e48:	mov	w8, #0x1                   	// #1
  402e4c:	str	w8, [sp, #48]
  402e50:	b	402e6c <parse_ifindex@plt+0xbdc>
  402e54:	sub	x0, x29, #0x40
  402e58:	bl	404810 <parse_ifindex@plt+0x2580>
  402e5c:	ldr	w8, [sp, #68]
  402e60:	stur	w8, [x29, #-4]
  402e64:	mov	w8, #0x1                   	// #1
  402e68:	str	w8, [sp, #48]
  402e6c:	add	x0, sp, #0x50
  402e70:	bl	4047dc <parse_ifindex@plt+0x254c>
  402e74:	add	x0, sp, #0x58
  402e78:	bl	401fa0 <sd_bus_error_free@plt>
  402e7c:	ldur	w0, [x29, #-4]
  402e80:	ldp	x29, x30, [sp, #176]
  402e84:	add	sp, sp, #0xc0
  402e88:	ret
  402e8c:	sub	sp, sp, #0x60
  402e90:	stp	x29, x30, [sp, #80]
  402e94:	add	x29, sp, #0x50
  402e98:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  402e9c:	add	x8, x8, #0x221
  402ea0:	add	x8, x8, #0x3
  402ea4:	stur	w0, [x29, #-8]
  402ea8:	stur	x1, [x29, #-16]
  402eac:	stur	x2, [x29, #-24]
  402eb0:	ldur	x9, [x29, #-24]
  402eb4:	stur	x9, [x29, #-32]
  402eb8:	str	x8, [sp, #16]
  402ebc:	ldur	x8, [x29, #-32]
  402ec0:	cmp	x8, #0x0
  402ec4:	cset	w9, ne  // ne = any
  402ec8:	mov	w10, #0x1                   	// #1
  402ecc:	eor	w9, w9, #0x1
  402ed0:	eor	w9, w9, w10
  402ed4:	eor	w9, w9, w10
  402ed8:	and	w9, w9, #0x1
  402edc:	mov	w0, w9
  402ee0:	sxtw	x8, w0
  402ee4:	cbz	x8, 402f0c <parse_ifindex@plt+0xc7c>
  402ee8:	mov	w8, wzr
  402eec:	mov	w0, w8
  402ef0:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  402ef4:	add	x1, x1, #0x92c
  402ef8:	ldr	x2, [sp, #16]
  402efc:	mov	w3, #0xac                  	// #172
  402f00:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  402f04:	add	x4, x4, #0xda3
  402f08:	bl	401ec0 <log_assert_failed_realm@plt>
  402f0c:	ldur	x0, [x29, #-32]
  402f10:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402f14:	add	x8, x8, #0x30
  402f18:	ldr	x4, [x8]
  402f1c:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402f20:	add	x8, x8, #0x39
  402f24:	ldrb	w9, [x8]
  402f28:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  402f2c:	add	x8, x8, #0x38
  402f30:	ldrb	w10, [x8]
  402f34:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  402f38:	add	x1, x1, #0x956
  402f3c:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  402f40:	add	x2, x2, #0x970
  402f44:	mov	x8, xzr
  402f48:	mov	x3, x8
  402f4c:	and	w5, w9, #0x1
  402f50:	and	w6, w10, #0x1
  402f54:	mov	x7, x8
  402f58:	bl	401fb0 <bus_print_all_properties@plt>
  402f5c:	stur	w0, [x29, #-36]
  402f60:	ldur	w9, [x29, #-36]
  402f64:	cmp	w9, #0x0
  402f68:	cset	w9, ge  // ge = tcont
  402f6c:	tbnz	w9, #0, 402ff8 <parse_ifindex@plt+0xd68>
  402f70:	mov	w8, #0x3                   	// #3
  402f74:	str	w8, [sp, #40]
  402f78:	ldur	w8, [x29, #-36]
  402f7c:	str	w8, [sp, #36]
  402f80:	str	wzr, [sp, #32]
  402f84:	ldr	w0, [sp, #32]
  402f88:	bl	401e80 <log_get_max_level_realm@plt>
  402f8c:	ldr	w8, [sp, #40]
  402f90:	and	w8, w8, #0x7
  402f94:	cmp	w0, w8
  402f98:	b.lt	402fd0 <parse_ifindex@plt+0xd40>  // b.tstop
  402f9c:	ldr	w8, [sp, #32]
  402fa0:	ldr	w9, [sp, #40]
  402fa4:	orr	w0, w9, w8, lsl #10
  402fa8:	ldr	w1, [sp, #36]
  402fac:	ldr	x2, [sp, #16]
  402fb0:	mov	w3, #0xb7                  	// #183
  402fb4:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  402fb8:	add	x4, x4, #0xdcd
  402fbc:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  402fc0:	add	x5, x5, #0xddd
  402fc4:	bl	401e90 <log_internal_realm@plt>
  402fc8:	str	w0, [sp, #12]
  402fcc:	b	402fe4 <parse_ifindex@plt+0xd54>
  402fd0:	ldr	w0, [sp, #36]
  402fd4:	bl	401ea0 <abs@plt>
  402fd8:	mov	w8, wzr
  402fdc:	subs	w8, w8, w0, uxtb
  402fe0:	str	w8, [sp, #12]
  402fe4:	ldr	w8, [sp, #12]
  402fe8:	str	w8, [sp, #28]
  402fec:	ldr	w8, [sp, #28]
  402ff0:	stur	w8, [x29, #-4]
  402ff4:	b	402ffc <parse_ifindex@plt+0xd6c>
  402ff8:	stur	wzr, [x29, #-4]
  402ffc:	ldur	w0, [x29, #-4]
  403000:	ldp	x29, x30, [sp, #80]
  403004:	add	sp, sp, #0x60
  403008:	ret
  40300c:	sub	sp, sp, #0xd0
  403010:	stp	x29, x30, [sp, #192]
  403014:	add	x29, sp, #0xc0
  403018:	mov	w8, #0x0                   	// #0
  40301c:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  403020:	add	x9, x9, #0x0
  403024:	adrp	x10, 420000 <parse_ifindex@plt+0x1dd70>
  403028:	add	x10, x10, #0x10
  40302c:	mov	w11, #0x1                   	// #1
  403030:	adrp	x12, 407000 <parse_ifindex@plt+0x4d70>
  403034:	add	x12, x12, #0x221
  403038:	add	x12, x12, #0x3
  40303c:	sub	x13, x29, #0x48
  403040:	stur	w0, [x29, #-8]
  403044:	stur	x1, [x29, #-16]
  403048:	stur	x2, [x29, #-24]
  40304c:	stur	xzr, [x29, #-48]
  403050:	stur	xzr, [x29, #-40]
  403054:	stur	xzr, [x29, #-32]
  403058:	sturb	w8, [x29, #-49]
  40305c:	ldrb	w8, [x9]
  403060:	and	w8, w8, w11
  403064:	sturb	w8, [x29, #-50]
  403068:	ldur	x14, [x29, #-24]
  40306c:	stur	x14, [x29, #-64]
  403070:	ldr	w0, [x10]
  403074:	ldrb	w8, [x9]
  403078:	and	w1, w8, #0x1
  40307c:	str	x12, [sp, #72]
  403080:	str	x13, [sp, #64]
  403084:	bl	401fc0 <polkit_agent_open_if_enabled@plt>
  403088:	ldur	x9, [x29, #-16]
  40308c:	ldr	x9, [x9, #8]
  403090:	mov	x0, x9
  403094:	ldr	x1, [sp, #64]
  403098:	bl	401fd0 <parse_timestamp@plt>
  40309c:	stur	w0, [x29, #-76]
  4030a0:	ldur	w8, [x29, #-76]
  4030a4:	cmp	w8, #0x0
  4030a8:	cset	w8, ge  // ge = tcont
  4030ac:	tbnz	w8, #0, 403148 <parse_ifindex@plt+0xeb8>
  4030b0:	mov	w8, #0x3                   	// #3
  4030b4:	stur	w8, [x29, #-80]
  4030b8:	ldur	w8, [x29, #-76]
  4030bc:	stur	w8, [x29, #-84]
  4030c0:	stur	wzr, [x29, #-88]
  4030c4:	ldur	w0, [x29, #-88]
  4030c8:	bl	401e80 <log_get_max_level_realm@plt>
  4030cc:	ldur	w8, [x29, #-80]
  4030d0:	and	w8, w8, #0x7
  4030d4:	cmp	w0, w8
  4030d8:	b.lt	403118 <parse_ifindex@plt+0xe88>  // b.tstop
  4030dc:	ldur	w8, [x29, #-88]
  4030e0:	ldur	w9, [x29, #-80]
  4030e4:	orr	w0, w9, w8, lsl #10
  4030e8:	ldur	w1, [x29, #-84]
  4030ec:	ldur	x10, [x29, #-16]
  4030f0:	ldr	x6, [x10, #8]
  4030f4:	ldr	x2, [sp, #72]
  4030f8:	mov	w3, #0xc7                  	// #199
  4030fc:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403100:	add	x4, x4, #0xdfd
  403104:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  403108:	add	x5, x5, #0xe06
  40310c:	bl	401e90 <log_internal_realm@plt>
  403110:	str	w0, [sp, #60]
  403114:	b	40312c <parse_ifindex@plt+0xe9c>
  403118:	ldur	w0, [x29, #-84]
  40311c:	bl	401ea0 <abs@plt>
  403120:	mov	w8, wzr
  403124:	subs	w8, w8, w0, uxtb
  403128:	str	w8, [sp, #60]
  40312c:	ldr	w8, [sp, #60]
  403130:	stur	w8, [x29, #-92]
  403134:	ldur	w8, [x29, #-92]
  403138:	stur	w8, [x29, #-4]
  40313c:	mov	w8, #0x1                   	// #1
  403140:	str	w8, [sp, #96]
  403144:	b	403290 <parse_ifindex@plt+0x1000>
  403148:	ldur	x0, [x29, #-64]
  40314c:	ldur	x8, [x29, #-72]
  403150:	ldurb	w9, [x29, #-49]
  403154:	and	w9, w9, #0x1
  403158:	ldurb	w10, [x29, #-50]
  40315c:	and	w10, w10, #0x1
  403160:	adrp	x11, 407000 <parse_ifindex@plt+0x4d70>
  403164:	add	x11, x11, #0x956
  403168:	mov	x1, x11
  40316c:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  403170:	add	x2, x2, #0x970
  403174:	mov	x3, x11
  403178:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  40317c:	add	x4, x4, #0xe32
  403180:	sub	x5, x29, #0x30
  403184:	mov	x11, xzr
  403188:	mov	x6, x11
  40318c:	adrp	x7, 407000 <parse_ifindex@plt+0x4d70>
  403190:	add	x7, x7, #0xe3a
  403194:	mov	x11, sp
  403198:	str	x8, [x11]
  40319c:	mov	x8, sp
  4031a0:	str	w9, [x8, #8]
  4031a4:	mov	x8, sp
  4031a8:	str	w10, [x8, #16]
  4031ac:	bl	401fe0 <sd_bus_call_method@plt>
  4031b0:	stur	w0, [x29, #-76]
  4031b4:	ldur	w9, [x29, #-76]
  4031b8:	cmp	w9, #0x0
  4031bc:	cset	w9, ge  // ge = tcont
  4031c0:	tbnz	w9, #0, 403284 <parse_ifindex@plt+0xff4>
  4031c4:	mov	w8, #0x3                   	// #3
  4031c8:	str	w8, [sp, #92]
  4031cc:	ldur	w8, [x29, #-76]
  4031d0:	str	w8, [sp, #88]
  4031d4:	str	wzr, [sp, #84]
  4031d8:	ldr	w0, [sp, #84]
  4031dc:	bl	401e80 <log_get_max_level_realm@plt>
  4031e0:	ldr	w8, [sp, #92]
  4031e4:	and	w8, w8, #0x7
  4031e8:	cmp	w0, w8
  4031ec:	b.lt	403254 <parse_ifindex@plt+0xfc4>  // b.tstop
  4031f0:	ldr	w8, [sp, #84]
  4031f4:	ldr	w9, [sp, #92]
  4031f8:	orr	w0, w9, w8, lsl #10
  4031fc:	ldr	w1, [sp, #88]
  403200:	ldur	w8, [x29, #-76]
  403204:	sub	x10, x29, #0x30
  403208:	str	w0, [sp, #56]
  40320c:	mov	x0, x10
  403210:	str	w1, [sp, #52]
  403214:	mov	w1, w8
  403218:	bl	401f90 <bus_error_message@plt>
  40321c:	ldr	w8, [sp, #56]
  403220:	str	x0, [sp, #40]
  403224:	mov	w0, w8
  403228:	ldr	w1, [sp, #52]
  40322c:	ldr	x2, [sp, #72]
  403230:	mov	w3, #0xd2                  	// #210
  403234:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403238:	add	x4, x4, #0xdfd
  40323c:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  403240:	add	x5, x5, #0xe3e
  403244:	ldr	x6, [sp, #40]
  403248:	bl	401e90 <log_internal_realm@plt>
  40324c:	str	w0, [sp, #36]
  403250:	b	403268 <parse_ifindex@plt+0xfd8>
  403254:	ldr	w0, [sp, #88]
  403258:	bl	401ea0 <abs@plt>
  40325c:	mov	w8, wzr
  403260:	subs	w8, w8, w0, uxtb
  403264:	str	w8, [sp, #36]
  403268:	ldr	w8, [sp, #36]
  40326c:	str	w8, [sp, #80]
  403270:	ldr	w8, [sp, #80]
  403274:	stur	w8, [x29, #-4]
  403278:	mov	w8, #0x1                   	// #1
  40327c:	str	w8, [sp, #96]
  403280:	b	403290 <parse_ifindex@plt+0x1000>
  403284:	stur	wzr, [x29, #-4]
  403288:	mov	w8, #0x1                   	// #1
  40328c:	str	w8, [sp, #96]
  403290:	sub	x0, x29, #0x30
  403294:	bl	401fa0 <sd_bus_error_free@plt>
  403298:	ldur	w0, [x29, #-4]
  40329c:	ldp	x29, x30, [sp, #192]
  4032a0:	add	sp, sp, #0xd0
  4032a4:	ret
  4032a8:	sub	sp, sp, #0xd0
  4032ac:	stp	x29, x30, [sp, #192]
  4032b0:	add	x29, sp, #0xc0
  4032b4:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4032b8:	add	x8, x8, #0x10
  4032bc:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  4032c0:	add	x9, x9, #0x0
  4032c4:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  4032c8:	add	x10, x10, #0x956
  4032cc:	adrp	x11, 407000 <parse_ifindex@plt+0x4d70>
  4032d0:	add	x11, x11, #0x970
  4032d4:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  4032d8:	add	x4, x4, #0xe55
  4032dc:	mov	x12, xzr
  4032e0:	adrp	x7, 407000 <parse_ifindex@plt+0x4d70>
  4032e4:	add	x7, x7, #0xe61
  4032e8:	adrp	x13, 407000 <parse_ifindex@plt+0x4d70>
  4032ec:	add	x13, x13, #0x221
  4032f0:	add	x13, x13, #0x3
  4032f4:	sub	x5, x29, #0x30
  4032f8:	stur	w0, [x29, #-8]
  4032fc:	stur	x1, [x29, #-16]
  403300:	stur	x2, [x29, #-24]
  403304:	stur	xzr, [x29, #-48]
  403308:	stur	xzr, [x29, #-40]
  40330c:	stur	xzr, [x29, #-32]
  403310:	ldur	x14, [x29, #-24]
  403314:	stur	x14, [x29, #-56]
  403318:	ldr	w0, [x8]
  40331c:	ldrb	w15, [x9]
  403320:	and	w1, w15, #0x1
  403324:	stur	x9, [x29, #-88]
  403328:	str	x10, [sp, #96]
  40332c:	str	x11, [sp, #88]
  403330:	str	x4, [sp, #80]
  403334:	str	x12, [sp, #72]
  403338:	str	x7, [sp, #64]
  40333c:	str	x13, [sp, #56]
  403340:	str	x5, [sp, #48]
  403344:	bl	401fc0 <polkit_agent_open_if_enabled@plt>
  403348:	ldur	x8, [x29, #-56]
  40334c:	ldur	x9, [x29, #-16]
  403350:	ldr	x9, [x9, #8]
  403354:	ldur	x10, [x29, #-88]
  403358:	ldrb	w15, [x10]
  40335c:	and	w15, w15, #0x1
  403360:	mov	x0, x8
  403364:	ldr	x1, [sp, #96]
  403368:	ldr	x2, [sp, #88]
  40336c:	ldr	x3, [sp, #96]
  403370:	ldr	x4, [sp, #80]
  403374:	ldr	x5, [sp, #48]
  403378:	ldr	x6, [sp, #72]
  40337c:	ldr	x7, [sp, #64]
  403380:	mov	x8, sp
  403384:	str	x9, [x8]
  403388:	mov	x8, sp
  40338c:	str	w15, [x8, #8]
  403390:	bl	401fe0 <sd_bus_call_method@plt>
  403394:	stur	w0, [x29, #-60]
  403398:	ldur	w15, [x29, #-60]
  40339c:	cmp	w15, #0x0
  4033a0:	cset	w15, ge  // ge = tcont
  4033a4:	tbnz	w15, #0, 403468 <parse_ifindex@plt+0x11d8>
  4033a8:	mov	w8, #0x3                   	// #3
  4033ac:	stur	w8, [x29, #-64]
  4033b0:	ldur	w8, [x29, #-60]
  4033b4:	stur	w8, [x29, #-68]
  4033b8:	stur	wzr, [x29, #-72]
  4033bc:	ldur	w0, [x29, #-72]
  4033c0:	bl	401e80 <log_get_max_level_realm@plt>
  4033c4:	ldur	w8, [x29, #-64]
  4033c8:	and	w8, w8, #0x7
  4033cc:	cmp	w0, w8
  4033d0:	b.lt	403438 <parse_ifindex@plt+0x11a8>  // b.tstop
  4033d4:	ldur	w8, [x29, #-72]
  4033d8:	ldur	w9, [x29, #-64]
  4033dc:	orr	w0, w9, w8, lsl #10
  4033e0:	ldur	w1, [x29, #-68]
  4033e4:	ldur	w8, [x29, #-60]
  4033e8:	sub	x10, x29, #0x30
  4033ec:	str	w0, [sp, #44]
  4033f0:	mov	x0, x10
  4033f4:	str	w1, [sp, #40]
  4033f8:	mov	w1, w8
  4033fc:	bl	401f90 <bus_error_message@plt>
  403400:	ldr	w8, [sp, #44]
  403404:	str	x0, [sp, #32]
  403408:	mov	w0, w8
  40340c:	ldr	w1, [sp, #40]
  403410:	ldr	x2, [sp, #56]
  403414:	mov	w3, #0xe7                  	// #231
  403418:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  40341c:	add	x4, x4, #0xe64
  403420:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  403424:	add	x5, x5, #0xe71
  403428:	ldr	x6, [sp, #32]
  40342c:	bl	401e90 <log_internal_realm@plt>
  403430:	str	w0, [sp, #28]
  403434:	b	40344c <parse_ifindex@plt+0x11bc>
  403438:	ldur	w0, [x29, #-68]
  40343c:	bl	401ea0 <abs@plt>
  403440:	mov	w8, wzr
  403444:	subs	w8, w8, w0, uxtb
  403448:	str	w8, [sp, #28]
  40344c:	ldr	w8, [sp, #28]
  403450:	stur	w8, [x29, #-76]
  403454:	ldur	w8, [x29, #-76]
  403458:	stur	w8, [x29, #-4]
  40345c:	mov	w8, #0x1                   	// #1
  403460:	stur	w8, [x29, #-80]
  403464:	b	403474 <parse_ifindex@plt+0x11e4>
  403468:	stur	wzr, [x29, #-4]
  40346c:	mov	w8, #0x1                   	// #1
  403470:	stur	w8, [x29, #-80]
  403474:	sub	x0, x29, #0x30
  403478:	bl	401fa0 <sd_bus_error_free@plt>
  40347c:	ldur	w0, [x29, #-4]
  403480:	ldp	x29, x30, [sp, #192]
  403484:	add	sp, sp, #0xd0
  403488:	ret
  40348c:	sub	sp, sp, #0xb0
  403490:	stp	x29, x30, [sp, #160]
  403494:	add	x29, sp, #0xa0
  403498:	mov	x8, xzr
  40349c:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  4034a0:	add	x9, x9, #0x956
  4034a4:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  4034a8:	add	x10, x10, #0x970
  4034ac:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  4034b0:	add	x4, x4, #0xe8d
  4034b4:	mov	x3, x8
  4034b8:	adrp	x11, 407000 <parse_ifindex@plt+0x4d70>
  4034bc:	add	x11, x11, #0x221
  4034c0:	add	x11, x11, #0x3
  4034c4:	sub	x5, x29, #0x30
  4034c8:	sub	x6, x29, #0x40
  4034cc:	stur	w0, [x29, #-8]
  4034d0:	stur	x1, [x29, #-16]
  4034d4:	stur	x2, [x29, #-24]
  4034d8:	stur	xzr, [x29, #-48]
  4034dc:	stur	xzr, [x29, #-40]
  4034e0:	stur	xzr, [x29, #-32]
  4034e4:	ldur	x12, [x29, #-24]
  4034e8:	stur	x12, [x29, #-56]
  4034ec:	stur	x8, [x29, #-64]
  4034f0:	ldur	x0, [x29, #-56]
  4034f4:	mov	x1, x9
  4034f8:	mov	x2, x10
  4034fc:	str	x3, [sp, #32]
  403500:	mov	x3, x9
  403504:	ldr	x7, [sp, #32]
  403508:	str	x11, [sp, #24]
  40350c:	bl	401fe0 <sd_bus_call_method@plt>
  403510:	stur	w0, [x29, #-68]
  403514:	ldur	w13, [x29, #-68]
  403518:	cmp	w13, #0x0
  40351c:	cset	w13, ge  // ge = tcont
  403520:	tbnz	w13, #0, 4035e4 <parse_ifindex@plt+0x1354>
  403524:	mov	w8, #0x3                   	// #3
  403528:	str	w8, [sp, #76]
  40352c:	ldur	w8, [x29, #-68]
  403530:	str	w8, [sp, #72]
  403534:	str	wzr, [sp, #68]
  403538:	ldr	w0, [sp, #68]
  40353c:	bl	401e80 <log_get_max_level_realm@plt>
  403540:	ldr	w8, [sp, #76]
  403544:	and	w8, w8, #0x7
  403548:	cmp	w0, w8
  40354c:	b.lt	4035b4 <parse_ifindex@plt+0x1324>  // b.tstop
  403550:	ldr	w8, [sp, #68]
  403554:	ldr	w9, [sp, #76]
  403558:	orr	w0, w9, w8, lsl #10
  40355c:	ldr	w1, [sp, #72]
  403560:	ldur	w8, [x29, #-68]
  403564:	sub	x10, x29, #0x30
  403568:	str	w0, [sp, #20]
  40356c:	mov	x0, x10
  403570:	str	w1, [sp, #16]
  403574:	mov	w1, w8
  403578:	bl	401f90 <bus_error_message@plt>
  40357c:	ldr	w8, [sp, #20]
  403580:	str	x0, [sp, #8]
  403584:	mov	w0, w8
  403588:	ldr	w1, [sp, #16]
  40358c:	ldr	x2, [sp, #24]
  403590:	mov	w3, #0x12f                 	// #303
  403594:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403598:	add	x4, x4, #0xe9b
  40359c:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  4035a0:	add	x5, x5, #0xeaa
  4035a4:	ldr	x6, [sp, #8]
  4035a8:	bl	401e90 <log_internal_realm@plt>
  4035ac:	str	w0, [sp, #4]
  4035b0:	b	4035c8 <parse_ifindex@plt+0x1338>
  4035b4:	ldr	w0, [sp, #72]
  4035b8:	bl	401ea0 <abs@plt>
  4035bc:	mov	w8, wzr
  4035c0:	subs	w8, w8, w0, uxtb
  4035c4:	str	w8, [sp, #4]
  4035c8:	ldr	w8, [sp, #4]
  4035cc:	str	w8, [sp, #64]
  4035d0:	ldr	w8, [sp, #64]
  4035d4:	stur	w8, [x29, #-4]
  4035d8:	mov	w8, #0x1                   	// #1
  4035dc:	str	w8, [sp, #60]
  4035e0:	b	4036bc <parse_ifindex@plt+0x142c>
  4035e4:	ldur	x0, [x29, #-64]
  4035e8:	add	x1, sp, #0x50
  4035ec:	bl	401ff0 <sd_bus_message_read_strv@plt>
  4035f0:	stur	w0, [x29, #-68]
  4035f4:	ldur	w8, [x29, #-68]
  4035f8:	cmp	w8, #0x0
  4035fc:	cset	w8, ge  // ge = tcont
  403600:	tbnz	w8, #0, 403694 <parse_ifindex@plt+0x1404>
  403604:	mov	w8, #0x3                   	// #3
  403608:	str	w8, [sp, #56]
  40360c:	ldur	w8, [x29, #-68]
  403610:	str	w8, [sp, #52]
  403614:	str	wzr, [sp, #48]
  403618:	ldr	w0, [sp, #48]
  40361c:	bl	401e80 <log_get_max_level_realm@plt>
  403620:	ldr	w8, [sp, #56]
  403624:	and	w8, w8, #0x7
  403628:	cmp	w0, w8
  40362c:	b.lt	403664 <parse_ifindex@plt+0x13d4>  // b.tstop
  403630:	ldr	w8, [sp, #48]
  403634:	ldr	w9, [sp, #56]
  403638:	orr	w0, w9, w8, lsl #10
  40363c:	ldr	w1, [sp, #52]
  403640:	ldr	x2, [sp, #24]
  403644:	mov	w3, #0x133                 	// #307
  403648:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  40364c:	add	x4, x4, #0xe9b
  403650:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  403654:	add	x5, x5, #0xddd
  403658:	bl	401e90 <log_internal_realm@plt>
  40365c:	str	w0, [sp]
  403660:	b	403678 <parse_ifindex@plt+0x13e8>
  403664:	ldr	w0, [sp, #52]
  403668:	bl	401ea0 <abs@plt>
  40366c:	mov	w8, wzr
  403670:	subs	w8, w8, w0, uxtb
  403674:	str	w8, [sp]
  403678:	ldr	w8, [sp]
  40367c:	str	w8, [sp, #44]
  403680:	ldr	w8, [sp, #44]
  403684:	stur	w8, [x29, #-4]
  403688:	mov	w8, #0x1                   	// #1
  40368c:	str	w8, [sp, #60]
  403690:	b	4036bc <parse_ifindex@plt+0x142c>
  403694:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  403698:	add	x8, x8, #0x24
  40369c:	ldr	w0, [x8]
  4036a0:	bl	402000 <pager_open@plt>
  4036a4:	ldr	x8, [sp, #80]
  4036a8:	mov	x0, x8
  4036ac:	bl	402010 <strv_print@plt>
  4036b0:	stur	wzr, [x29, #-4]
  4036b4:	mov	w9, #0x1                   	// #1
  4036b8:	str	w9, [sp, #60]
  4036bc:	sub	x0, x29, #0x40
  4036c0:	bl	4047dc <parse_ifindex@plt+0x254c>
  4036c4:	sub	x0, x29, #0x30
  4036c8:	bl	401fa0 <sd_bus_error_free@plt>
  4036cc:	ldur	w0, [x29, #-4]
  4036d0:	ldp	x29, x30, [sp, #160]
  4036d4:	add	sp, sp, #0xb0
  4036d8:	ret
  4036dc:	sub	sp, sp, #0xc0
  4036e0:	stp	x29, x30, [sp, #176]
  4036e4:	add	x29, sp, #0xb0
  4036e8:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4036ec:	add	x8, x8, #0x10
  4036f0:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  4036f4:	add	x9, x9, #0x0
  4036f8:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  4036fc:	add	x10, x10, #0x221
  403700:	add	x10, x10, #0x3
  403704:	stur	w0, [x29, #-8]
  403708:	stur	x1, [x29, #-16]
  40370c:	stur	x2, [x29, #-24]
  403710:	stur	xzr, [x29, #-48]
  403714:	stur	xzr, [x29, #-40]
  403718:	stur	xzr, [x29, #-32]
  40371c:	ldur	x11, [x29, #-24]
  403720:	stur	x11, [x29, #-56]
  403724:	ldr	w0, [x8]
  403728:	ldrb	w12, [x9]
  40372c:	and	w1, w12, #0x1
  403730:	str	x10, [sp, #64]
  403734:	bl	401fc0 <polkit_agent_open_if_enabled@plt>
  403738:	ldur	x8, [x29, #-16]
  40373c:	ldr	x8, [x8, #8]
  403740:	mov	x0, x8
  403744:	bl	402020 <parse_boolean@plt>
  403748:	stur	w0, [x29, #-64]
  40374c:	ldur	w12, [x29, #-64]
  403750:	cmp	w12, #0x0
  403754:	cset	w12, ge  // ge = tcont
  403758:	tbnz	w12, #0, 4037f4 <parse_ifindex@plt+0x1564>
  40375c:	mov	w8, #0x3                   	// #3
  403760:	stur	w8, [x29, #-68]
  403764:	ldur	w8, [x29, #-64]
  403768:	stur	w8, [x29, #-72]
  40376c:	stur	wzr, [x29, #-76]
  403770:	ldur	w0, [x29, #-76]
  403774:	bl	401e80 <log_get_max_level_realm@plt>
  403778:	ldur	w8, [x29, #-68]
  40377c:	and	w8, w8, #0x7
  403780:	cmp	w0, w8
  403784:	b.lt	4037c4 <parse_ifindex@plt+0x1534>  // b.tstop
  403788:	ldur	w8, [x29, #-76]
  40378c:	ldur	w9, [x29, #-68]
  403790:	orr	w0, w9, w8, lsl #10
  403794:	ldur	w1, [x29, #-72]
  403798:	ldur	x10, [x29, #-16]
  40379c:	ldr	x6, [x10, #8]
  4037a0:	ldr	x2, [sp, #64]
  4037a4:	mov	w3, #0xf5                  	// #245
  4037a8:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  4037ac:	add	x4, x4, #0xed3
  4037b0:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  4037b4:	add	x5, x5, #0xee1
  4037b8:	bl	401e90 <log_internal_realm@plt>
  4037bc:	str	w0, [sp, #60]
  4037c0:	b	4037d8 <parse_ifindex@plt+0x1548>
  4037c4:	ldur	w0, [x29, #-72]
  4037c8:	bl	401ea0 <abs@plt>
  4037cc:	mov	w8, wzr
  4037d0:	subs	w8, w8, w0, uxtb
  4037d4:	str	w8, [sp, #60]
  4037d8:	ldr	w8, [sp, #60]
  4037dc:	stur	w8, [x29, #-80]
  4037e0:	ldur	w8, [x29, #-80]
  4037e4:	stur	w8, [x29, #-4]
  4037e8:	mov	w8, #0x1                   	// #1
  4037ec:	stur	w8, [x29, #-84]
  4037f0:	b	40394c <parse_ifindex@plt+0x16bc>
  4037f4:	ldur	x0, [x29, #-56]
  4037f8:	ldur	w8, [x29, #-64]
  4037fc:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  403800:	add	x9, x9, #0x20
  403804:	ldrb	w10, [x9]
  403808:	and	w10, w10, #0x1
  40380c:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  403810:	add	x9, x9, #0x0
  403814:	ldrb	w11, [x9]
  403818:	and	w11, w11, #0x1
  40381c:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  403820:	add	x9, x9, #0x956
  403824:	mov	x1, x9
  403828:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  40382c:	add	x2, x2, #0x970
  403830:	mov	x3, x9
  403834:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403838:	add	x4, x4, #0xf0c
  40383c:	sub	x5, x29, #0x30
  403840:	mov	x9, xzr
  403844:	mov	x6, x9
  403848:	adrp	x7, 407000 <parse_ifindex@plt+0x4d70>
  40384c:	add	x7, x7, #0xf18
  403850:	mov	x9, sp
  403854:	str	w8, [x9]
  403858:	mov	x9, sp
  40385c:	str	w10, [x9, #8]
  403860:	mov	x9, sp
  403864:	str	w11, [x9, #16]
  403868:	bl	401fe0 <sd_bus_call_method@plt>
  40386c:	stur	w0, [x29, #-60]
  403870:	ldur	w8, [x29, #-60]
  403874:	cmp	w8, #0x0
  403878:	cset	w8, ge  // ge = tcont
  40387c:	tbnz	w8, #0, 403940 <parse_ifindex@plt+0x16b0>
  403880:	mov	w8, #0x3                   	// #3
  403884:	str	w8, [sp, #88]
  403888:	ldur	w8, [x29, #-60]
  40388c:	str	w8, [sp, #84]
  403890:	str	wzr, [sp, #80]
  403894:	ldr	w0, [sp, #80]
  403898:	bl	401e80 <log_get_max_level_realm@plt>
  40389c:	ldr	w8, [sp, #88]
  4038a0:	and	w8, w8, #0x7
  4038a4:	cmp	w0, w8
  4038a8:	b.lt	403910 <parse_ifindex@plt+0x1680>  // b.tstop
  4038ac:	ldr	w8, [sp, #80]
  4038b0:	ldr	w9, [sp, #88]
  4038b4:	orr	w0, w9, w8, lsl #10
  4038b8:	ldr	w1, [sp, #84]
  4038bc:	ldur	w8, [x29, #-60]
  4038c0:	sub	x10, x29, #0x30
  4038c4:	str	w0, [sp, #56]
  4038c8:	mov	x0, x10
  4038cc:	str	w1, [sp, #52]
  4038d0:	mov	w1, w8
  4038d4:	bl	401f90 <bus_error_message@plt>
  4038d8:	ldr	w8, [sp, #56]
  4038dc:	str	x0, [sp, #40]
  4038e0:	mov	w0, w8
  4038e4:	ldr	w1, [sp, #52]
  4038e8:	ldr	x2, [sp, #64]
  4038ec:	mov	w3, #0x100                 	// #256
  4038f0:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  4038f4:	add	x4, x4, #0xed3
  4038f8:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  4038fc:	add	x5, x5, #0xf1c
  403900:	ldr	x6, [sp, #40]
  403904:	bl	401e90 <log_internal_realm@plt>
  403908:	str	w0, [sp, #36]
  40390c:	b	403924 <parse_ifindex@plt+0x1694>
  403910:	ldr	w0, [sp, #84]
  403914:	bl	401ea0 <abs@plt>
  403918:	mov	w8, wzr
  40391c:	subs	w8, w8, w0, uxtb
  403920:	str	w8, [sp, #36]
  403924:	ldr	w8, [sp, #36]
  403928:	str	w8, [sp, #76]
  40392c:	ldr	w8, [sp, #76]
  403930:	stur	w8, [x29, #-4]
  403934:	mov	w8, #0x1                   	// #1
  403938:	stur	w8, [x29, #-84]
  40393c:	b	40394c <parse_ifindex@plt+0x16bc>
  403940:	stur	wzr, [x29, #-4]
  403944:	mov	w8, #0x1                   	// #1
  403948:	stur	w8, [x29, #-84]
  40394c:	sub	x0, x29, #0x30
  403950:	bl	401fa0 <sd_bus_error_free@plt>
  403954:	ldur	w0, [x29, #-4]
  403958:	ldp	x29, x30, [sp, #176]
  40395c:	add	sp, sp, #0xc0
  403960:	ret
  403964:	sub	sp, sp, #0xb0
  403968:	stp	x29, x30, [sp, #160]
  40396c:	add	x29, sp, #0xa0
  403970:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  403974:	add	x8, x8, #0x10
  403978:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  40397c:	add	x9, x9, #0x0
  403980:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  403984:	add	x10, x10, #0x221
  403988:	add	x10, x10, #0x3
  40398c:	stur	w0, [x29, #-8]
  403990:	stur	x1, [x29, #-16]
  403994:	stur	x2, [x29, #-24]
  403998:	stur	xzr, [x29, #-48]
  40399c:	stur	xzr, [x29, #-40]
  4039a0:	stur	xzr, [x29, #-32]
  4039a4:	ldur	x11, [x29, #-24]
  4039a8:	stur	x11, [x29, #-56]
  4039ac:	ldr	w0, [x8]
  4039b0:	ldrb	w12, [x9]
  4039b4:	and	w1, w12, #0x1
  4039b8:	str	x10, [sp, #48]
  4039bc:	bl	401fc0 <polkit_agent_open_if_enabled@plt>
  4039c0:	ldur	x8, [x29, #-16]
  4039c4:	ldr	x8, [x8, #8]
  4039c8:	mov	x0, x8
  4039cc:	bl	402020 <parse_boolean@plt>
  4039d0:	stur	w0, [x29, #-60]
  4039d4:	ldur	w12, [x29, #-60]
  4039d8:	cmp	w12, #0x0
  4039dc:	cset	w12, ge  // ge = tcont
  4039e0:	tbnz	w12, #0, 403a7c <parse_ifindex@plt+0x17ec>
  4039e4:	mov	w8, #0x3                   	// #3
  4039e8:	stur	w8, [x29, #-68]
  4039ec:	ldur	w8, [x29, #-60]
  4039f0:	stur	w8, [x29, #-72]
  4039f4:	stur	wzr, [x29, #-76]
  4039f8:	ldur	w0, [x29, #-76]
  4039fc:	bl	401e80 <log_get_max_level_realm@plt>
  403a00:	ldur	w8, [x29, #-68]
  403a04:	and	w8, w8, #0x7
  403a08:	cmp	w0, w8
  403a0c:	b.lt	403a4c <parse_ifindex@plt+0x17bc>  // b.tstop
  403a10:	ldur	w8, [x29, #-76]
  403a14:	ldur	w9, [x29, #-68]
  403a18:	orr	w0, w9, w8, lsl #10
  403a1c:	ldur	w1, [x29, #-72]
  403a20:	ldur	x10, [x29, #-16]
  403a24:	ldr	x6, [x10, #8]
  403a28:	ldr	x2, [sp, #48]
  403a2c:	mov	w3, #0x10e                 	// #270
  403a30:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403a34:	add	x4, x4, #0xf38
  403a38:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  403a3c:	add	x5, x5, #0xf40
  403a40:	bl	401e90 <log_internal_realm@plt>
  403a44:	str	w0, [sp, #44]
  403a48:	b	403a60 <parse_ifindex@plt+0x17d0>
  403a4c:	ldur	w0, [x29, #-72]
  403a50:	bl	401ea0 <abs@plt>
  403a54:	mov	w8, wzr
  403a58:	subs	w8, w8, w0, uxtb
  403a5c:	str	w8, [sp, #44]
  403a60:	ldr	w8, [sp, #44]
  403a64:	str	w8, [sp, #80]
  403a68:	ldr	w8, [sp, #80]
  403a6c:	stur	w8, [x29, #-4]
  403a70:	mov	w8, #0x1                   	// #1
  403a74:	str	w8, [sp, #76]
  403a78:	b	403bbc <parse_ifindex@plt+0x192c>
  403a7c:	ldur	x0, [x29, #-56]
  403a80:	ldur	w8, [x29, #-60]
  403a84:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  403a88:	add	x9, x9, #0x0
  403a8c:	ldrb	w10, [x9]
  403a90:	and	w10, w10, #0x1
  403a94:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  403a98:	add	x9, x9, #0x956
  403a9c:	mov	x1, x9
  403aa0:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  403aa4:	add	x2, x2, #0x970
  403aa8:	mov	x3, x9
  403aac:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403ab0:	add	x4, x4, #0xf65
  403ab4:	sub	x5, x29, #0x30
  403ab8:	mov	x9, xzr
  403abc:	mov	x6, x9
  403ac0:	adrp	x7, 407000 <parse_ifindex@plt+0x4d70>
  403ac4:	add	x7, x7, #0xf6c
  403ac8:	mov	x9, sp
  403acc:	str	w8, [x9]
  403ad0:	mov	x9, sp
  403ad4:	str	w10, [x9, #8]
  403ad8:	bl	401fe0 <sd_bus_call_method@plt>
  403adc:	stur	w0, [x29, #-64]
  403ae0:	ldur	w8, [x29, #-64]
  403ae4:	cmp	w8, #0x0
  403ae8:	cset	w8, ge  // ge = tcont
  403aec:	tbnz	w8, #0, 403bb0 <parse_ifindex@plt+0x1920>
  403af0:	mov	w8, #0x3                   	// #3
  403af4:	str	w8, [sp, #72]
  403af8:	ldur	w8, [x29, #-64]
  403afc:	str	w8, [sp, #68]
  403b00:	str	wzr, [sp, #64]
  403b04:	ldr	w0, [sp, #64]
  403b08:	bl	401e80 <log_get_max_level_realm@plt>
  403b0c:	ldr	w8, [sp, #72]
  403b10:	and	w8, w8, #0x7
  403b14:	cmp	w0, w8
  403b18:	b.lt	403b80 <parse_ifindex@plt+0x18f0>  // b.tstop
  403b1c:	ldr	w8, [sp, #64]
  403b20:	ldr	w9, [sp, #72]
  403b24:	orr	w0, w9, w8, lsl #10
  403b28:	ldr	w1, [sp, #68]
  403b2c:	ldur	w8, [x29, #-64]
  403b30:	sub	x10, x29, #0x30
  403b34:	str	w0, [sp, #40]
  403b38:	mov	x0, x10
  403b3c:	str	w1, [sp, #36]
  403b40:	mov	w1, w8
  403b44:	bl	401f90 <bus_error_message@plt>
  403b48:	ldr	w8, [sp, #40]
  403b4c:	str	x0, [sp, #24]
  403b50:	mov	w0, w8
  403b54:	ldr	w1, [sp, #36]
  403b58:	ldr	x2, [sp, #48]
  403b5c:	mov	w3, #0x119                 	// #281
  403b60:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403b64:	add	x4, x4, #0xf38
  403b68:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  403b6c:	add	x5, x5, #0xf6f
  403b70:	ldr	x6, [sp, #24]
  403b74:	bl	401e90 <log_internal_realm@plt>
  403b78:	str	w0, [sp, #20]
  403b7c:	b	403b94 <parse_ifindex@plt+0x1904>
  403b80:	ldr	w0, [sp, #68]
  403b84:	bl	401ea0 <abs@plt>
  403b88:	mov	w8, wzr
  403b8c:	subs	w8, w8, w0, uxtb
  403b90:	str	w8, [sp, #20]
  403b94:	ldr	w8, [sp, #20]
  403b98:	str	w8, [sp, #60]
  403b9c:	ldr	w8, [sp, #60]
  403ba0:	stur	w8, [x29, #-4]
  403ba4:	mov	w8, #0x1                   	// #1
  403ba8:	str	w8, [sp, #76]
  403bac:	b	403bbc <parse_ifindex@plt+0x192c>
  403bb0:	stur	wzr, [x29, #-4]
  403bb4:	mov	w8, #0x1                   	// #1
  403bb8:	str	w8, [sp, #76]
  403bbc:	sub	x0, x29, #0x30
  403bc0:	bl	401fa0 <sd_bus_error_free@plt>
  403bc4:	ldur	w0, [x29, #-4]
  403bc8:	ldp	x29, x30, [sp, #160]
  403bcc:	add	sp, sp, #0xb0
  403bd0:	ret
  403bd4:	sub	sp, sp, #0xa0
  403bd8:	stp	x29, x30, [sp, #144]
  403bdc:	add	x29, sp, #0x90
  403be0:	mov	x8, xzr
  403be4:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  403be8:	add	x9, x9, #0x221
  403bec:	add	x9, x9, #0x3
  403bf0:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  403bf4:	add	x10, x10, #0xfb4
  403bf8:	stur	w0, [x29, #-8]
  403bfc:	stur	x1, [x29, #-16]
  403c00:	stur	x2, [x29, #-24]
  403c04:	stur	x8, [x29, #-32]
  403c08:	ldur	x8, [x29, #-24]
  403c0c:	stur	x8, [x29, #-40]
  403c10:	str	x9, [sp, #24]
  403c14:	str	x10, [sp, #16]
  403c18:	ldur	x8, [x29, #-40]
  403c1c:	cmp	x8, #0x0
  403c20:	cset	w9, ne  // ne = any
  403c24:	mov	w10, #0x1                   	// #1
  403c28:	eor	w9, w9, #0x1
  403c2c:	eor	w9, w9, w10
  403c30:	eor	w9, w9, w10
  403c34:	and	w9, w9, #0x1
  403c38:	mov	w0, w9
  403c3c:	sxtw	x8, w0
  403c40:	cbz	x8, 403c68 <parse_ifindex@plt+0x19d8>
  403c44:	mov	w8, wzr
  403c48:	mov	w0, w8
  403c4c:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  403c50:	add	x1, x1, #0x92c
  403c54:	ldr	x2, [sp, #24]
  403c58:	mov	w3, #0x23e                 	// #574
  403c5c:	adrp	x4, 407000 <parse_ifindex@plt+0x4d70>
  403c60:	add	x4, x4, #0xf85
  403c64:	bl	401ec0 <log_assert_failed_realm@plt>
  403c68:	ldur	x0, [x29, #-40]
  403c6c:	bl	405260 <parse_ifindex@plt+0x2fd0>
  403c70:	stur	w0, [x29, #-44]
  403c74:	ldur	w8, [x29, #-44]
  403c78:	cmp	w8, #0x0
  403c7c:	cset	w8, ge  // ge = tcont
  403c80:	tbnz	w8, #0, 403c98 <parse_ifindex@plt+0x1a08>
  403c84:	ldur	w8, [x29, #-44]
  403c88:	stur	w8, [x29, #-4]
  403c8c:	mov	w8, #0x1                   	// #1
  403c90:	stur	w8, [x29, #-48]
  403c94:	b	403fa4 <parse_ifindex@plt+0x1d14>
  403c98:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  403c9c:	add	x8, x8, #0x28
  403ca0:	ldrb	w9, [x8]
  403ca4:	tbnz	w9, #0, 403cb8 <parse_ifindex@plt+0x1a28>
  403ca8:	stur	wzr, [x29, #-4]
  403cac:	mov	w8, #0x1                   	// #1
  403cb0:	stur	w8, [x29, #-48]
  403cb4:	b	403fa4 <parse_ifindex@plt+0x1d14>
  403cb8:	sub	x0, x29, #0x20
  403cbc:	bl	402030 <sd_event_default@plt>
  403cc0:	stur	w0, [x29, #-44]
  403cc4:	ldur	w8, [x29, #-44]
  403cc8:	cmp	w8, #0x0
  403ccc:	cset	w8, ge  // ge = tcont
  403cd0:	tbnz	w8, #0, 403d60 <parse_ifindex@plt+0x1ad0>
  403cd4:	mov	w8, #0x3                   	// #3
  403cd8:	stur	w8, [x29, #-52]
  403cdc:	ldur	w8, [x29, #-44]
  403ce0:	stur	w8, [x29, #-56]
  403ce4:	stur	wzr, [x29, #-60]
  403ce8:	ldur	w0, [x29, #-60]
  403cec:	bl	401e80 <log_get_max_level_realm@plt>
  403cf0:	ldur	w8, [x29, #-52]
  403cf4:	and	w8, w8, #0x7
  403cf8:	cmp	w0, w8
  403cfc:	b.lt	403d30 <parse_ifindex@plt+0x1aa0>  // b.tstop
  403d00:	ldur	w8, [x29, #-60]
  403d04:	ldur	w9, [x29, #-52]
  403d08:	orr	w0, w9, w8, lsl #10
  403d0c:	ldur	w1, [x29, #-56]
  403d10:	ldr	x2, [sp, #24]
  403d14:	mov	w3, #0x249                 	// #585
  403d18:	ldr	x4, [sp, #16]
  403d1c:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  403d20:	add	x5, x5, #0xfc9
  403d24:	bl	401e90 <log_internal_realm@plt>
  403d28:	str	w0, [sp, #12]
  403d2c:	b	403d44 <parse_ifindex@plt+0x1ab4>
  403d30:	ldur	w0, [x29, #-56]
  403d34:	bl	401ea0 <abs@plt>
  403d38:	mov	w8, wzr
  403d3c:	subs	w8, w8, w0, uxtb
  403d40:	str	w8, [sp, #12]
  403d44:	ldr	w8, [sp, #12]
  403d48:	stur	w8, [x29, #-64]
  403d4c:	ldur	w8, [x29, #-64]
  403d50:	stur	w8, [x29, #-4]
  403d54:	mov	w8, #0x1                   	// #1
  403d58:	stur	w8, [x29, #-48]
  403d5c:	b	403fa4 <parse_ifindex@plt+0x1d14>
  403d60:	ldur	x0, [x29, #-40]
  403d64:	mov	x8, xzr
  403d68:	mov	x1, x8
  403d6c:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  403d70:	add	x2, x2, #0xfe6
  403d74:	adrp	x3, 408000 <parse_ifindex@plt+0x5d70>
  403d78:	add	x3, x3, #0x0
  403d7c:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  403d80:	add	x4, x4, #0x1b
  403d84:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  403d88:	add	x5, x5, #0x3b
  403d8c:	adrp	x6, 405000 <parse_ifindex@plt+0x2d70>
  403d90:	add	x6, x6, #0x480
  403d94:	mov	x7, x8
  403d98:	bl	402040 <sd_bus_match_signal@plt>
  403d9c:	stur	w0, [x29, #-44]
  403da0:	ldur	w9, [x29, #-44]
  403da4:	cmp	w9, #0x0
  403da8:	cset	w9, ge  // ge = tcont
  403dac:	tbnz	w9, #0, 403e3c <parse_ifindex@plt+0x1bac>
  403db0:	mov	w8, #0x3                   	// #3
  403db4:	stur	w8, [x29, #-68]
  403db8:	ldur	w8, [x29, #-44]
  403dbc:	str	w8, [sp, #72]
  403dc0:	str	wzr, [sp, #68]
  403dc4:	ldr	w0, [sp, #68]
  403dc8:	bl	401e80 <log_get_max_level_realm@plt>
  403dcc:	ldur	w8, [x29, #-68]
  403dd0:	and	w8, w8, #0x7
  403dd4:	cmp	w0, w8
  403dd8:	b.lt	403e0c <parse_ifindex@plt+0x1b7c>  // b.tstop
  403ddc:	ldr	w8, [sp, #68]
  403de0:	ldur	w9, [x29, #-68]
  403de4:	orr	w0, w9, w8, lsl #10
  403de8:	ldr	w1, [sp, #72]
  403dec:	ldr	x2, [sp, #24]
  403df0:	mov	w3, #0x253                 	// #595
  403df4:	ldr	x4, [sp, #16]
  403df8:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  403dfc:	add	x5, x5, #0x4d
  403e00:	bl	401e90 <log_internal_realm@plt>
  403e04:	str	w0, [sp, #8]
  403e08:	b	403e20 <parse_ifindex@plt+0x1b90>
  403e0c:	ldr	w0, [sp, #72]
  403e10:	bl	401ea0 <abs@plt>
  403e14:	mov	w8, wzr
  403e18:	subs	w8, w8, w0, uxtb
  403e1c:	str	w8, [sp, #8]
  403e20:	ldr	w8, [sp, #8]
  403e24:	str	w8, [sp, #64]
  403e28:	ldr	w8, [sp, #64]
  403e2c:	stur	w8, [x29, #-4]
  403e30:	mov	w8, #0x1                   	// #1
  403e34:	stur	w8, [x29, #-48]
  403e38:	b	403fa4 <parse_ifindex@plt+0x1d14>
  403e3c:	ldur	x0, [x29, #-40]
  403e40:	ldur	x1, [x29, #-32]
  403e44:	mov	w8, wzr
  403e48:	mov	w2, w8
  403e4c:	bl	402050 <sd_bus_attach_event@plt>
  403e50:	stur	w0, [x29, #-44]
  403e54:	ldur	w8, [x29, #-44]
  403e58:	cmp	w8, #0x0
  403e5c:	cset	w8, ge  // ge = tcont
  403e60:	tbnz	w8, #0, 403ef0 <parse_ifindex@plt+0x1c60>
  403e64:	mov	w8, #0x3                   	// #3
  403e68:	str	w8, [sp, #60]
  403e6c:	ldur	w8, [x29, #-44]
  403e70:	str	w8, [sp, #56]
  403e74:	str	wzr, [sp, #52]
  403e78:	ldr	w0, [sp, #52]
  403e7c:	bl	401e80 <log_get_max_level_realm@plt>
  403e80:	ldr	w8, [sp, #60]
  403e84:	and	w8, w8, #0x7
  403e88:	cmp	w0, w8
  403e8c:	b.lt	403ec0 <parse_ifindex@plt+0x1c30>  // b.tstop
  403e90:	ldr	w8, [sp, #52]
  403e94:	ldr	w9, [sp, #60]
  403e98:	orr	w0, w9, w8, lsl #10
  403e9c:	ldr	w1, [sp, #56]
  403ea0:	ldr	x2, [sp, #24]
  403ea4:	mov	w3, #0x257                 	// #599
  403ea8:	ldr	x4, [sp, #16]
  403eac:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  403eb0:	add	x5, x5, #0x86
  403eb4:	bl	401e90 <log_internal_realm@plt>
  403eb8:	str	w0, [sp, #4]
  403ebc:	b	403ed4 <parse_ifindex@plt+0x1c44>
  403ec0:	ldr	w0, [sp, #56]
  403ec4:	bl	401ea0 <abs@plt>
  403ec8:	mov	w8, wzr
  403ecc:	subs	w8, w8, w0, uxtb
  403ed0:	str	w8, [sp, #4]
  403ed4:	ldr	w8, [sp, #4]
  403ed8:	str	w8, [sp, #48]
  403edc:	ldr	w8, [sp, #48]
  403ee0:	stur	w8, [x29, #-4]
  403ee4:	mov	w8, #0x1                   	// #1
  403ee8:	stur	w8, [x29, #-48]
  403eec:	b	403fa4 <parse_ifindex@plt+0x1d14>
  403ef0:	ldur	x0, [x29, #-32]
  403ef4:	bl	402060 <sd_event_loop@plt>
  403ef8:	stur	w0, [x29, #-44]
  403efc:	ldur	w8, [x29, #-44]
  403f00:	cmp	w8, #0x0
  403f04:	cset	w8, ge  // ge = tcont
  403f08:	tbnz	w8, #0, 403f98 <parse_ifindex@plt+0x1d08>
  403f0c:	mov	w8, #0x3                   	// #3
  403f10:	str	w8, [sp, #44]
  403f14:	ldur	w8, [x29, #-44]
  403f18:	str	w8, [sp, #40]
  403f1c:	str	wzr, [sp, #36]
  403f20:	ldr	w0, [sp, #36]
  403f24:	bl	401e80 <log_get_max_level_realm@plt>
  403f28:	ldr	w8, [sp, #44]
  403f2c:	and	w8, w8, #0x7
  403f30:	cmp	w0, w8
  403f34:	b.lt	403f68 <parse_ifindex@plt+0x1cd8>  // b.tstop
  403f38:	ldr	w8, [sp, #36]
  403f3c:	ldr	w9, [sp, #44]
  403f40:	orr	w0, w9, w8, lsl #10
  403f44:	ldr	w1, [sp, #40]
  403f48:	ldr	x2, [sp, #24]
  403f4c:	mov	w3, #0x25b                 	// #603
  403f50:	ldr	x4, [sp, #16]
  403f54:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  403f58:	add	x5, x5, #0xad
  403f5c:	bl	401e90 <log_internal_realm@plt>
  403f60:	str	w0, [sp]
  403f64:	b	403f7c <parse_ifindex@plt+0x1cec>
  403f68:	ldr	w0, [sp, #40]
  403f6c:	bl	401ea0 <abs@plt>
  403f70:	mov	w8, wzr
  403f74:	subs	w8, w8, w0, uxtb
  403f78:	str	w8, [sp]
  403f7c:	ldr	w8, [sp]
  403f80:	str	w8, [sp, #32]
  403f84:	ldr	w8, [sp, #32]
  403f88:	stur	w8, [x29, #-4]
  403f8c:	mov	w8, #0x1                   	// #1
  403f90:	stur	w8, [x29, #-48]
  403f94:	b	403fa4 <parse_ifindex@plt+0x1d14>
  403f98:	stur	wzr, [x29, #-4]
  403f9c:	mov	w8, #0x1                   	// #1
  403fa0:	stur	w8, [x29, #-48]
  403fa4:	sub	x0, x29, #0x20
  403fa8:	bl	40522c <parse_ifindex@plt+0x2f9c>
  403fac:	ldur	w0, [x29, #-4]
  403fb0:	ldp	x29, x30, [sp, #144]
  403fb4:	add	sp, sp, #0xa0
  403fb8:	ret
  403fbc:	sub	sp, sp, #0x60
  403fc0:	stp	x29, x30, [sp, #80]
  403fc4:	add	x29, sp, #0x50
  403fc8:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  403fcc:	add	x8, x8, #0x221
  403fd0:	add	x8, x8, #0x3
  403fd4:	stur	w0, [x29, #-8]
  403fd8:	stur	x1, [x29, #-16]
  403fdc:	stur	x2, [x29, #-24]
  403fe0:	ldur	x9, [x29, #-24]
  403fe4:	stur	x9, [x29, #-32]
  403fe8:	str	x8, [sp, #16]
  403fec:	ldur	x8, [x29, #-32]
  403ff0:	cmp	x8, #0x0
  403ff4:	cset	w9, ne  // ne = any
  403ff8:	mov	w10, #0x1                   	// #1
  403ffc:	eor	w9, w9, #0x1
  404000:	eor	w9, w9, w10
  404004:	eor	w9, w9, w10
  404008:	and	w9, w9, #0x1
  40400c:	mov	w0, w9
  404010:	sxtw	x8, w0
  404014:	cbz	x8, 40403c <parse_ifindex@plt+0x1dac>
  404018:	mov	w8, wzr
  40401c:	mov	w0, w8
  404020:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  404024:	add	x1, x1, #0x92c
  404028:	ldr	x2, [sp, #16]
  40402c:	mov	w3, #0x2b0                 	// #688
  404030:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  404034:	add	x4, x4, #0x5c8
  404038:	bl	401ec0 <log_assert_failed_realm@plt>
  40403c:	ldur	x0, [x29, #-32]
  404040:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  404044:	add	x8, x8, #0x30
  404048:	ldr	x4, [x8]
  40404c:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  404050:	add	x8, x8, #0x39
  404054:	ldrb	w9, [x8]
  404058:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  40405c:	add	x8, x8, #0x38
  404060:	ldrb	w10, [x8]
  404064:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  404068:	add	x1, x1, #0xfe6
  40406c:	adrp	x2, 408000 <parse_ifindex@plt+0x5d70>
  404070:	add	x2, x2, #0x0
  404074:	adrp	x3, 406000 <parse_ifindex@plt+0x3d70>
  404078:	add	x3, x3, #0x334
  40407c:	and	w5, w9, #0x1
  404080:	and	w6, w10, #0x1
  404084:	mov	x8, xzr
  404088:	mov	x7, x8
  40408c:	bl	401fb0 <bus_print_all_properties@plt>
  404090:	stur	w0, [x29, #-36]
  404094:	ldur	w9, [x29, #-36]
  404098:	cmp	w9, #0x0
  40409c:	cset	w9, ge  // ge = tcont
  4040a0:	tbnz	w9, #0, 40412c <parse_ifindex@plt+0x1e9c>
  4040a4:	mov	w8, #0x3                   	// #3
  4040a8:	str	w8, [sp, #40]
  4040ac:	ldur	w8, [x29, #-36]
  4040b0:	str	w8, [sp, #36]
  4040b4:	str	wzr, [sp, #32]
  4040b8:	ldr	w0, [sp, #32]
  4040bc:	bl	401e80 <log_get_max_level_realm@plt>
  4040c0:	ldr	w8, [sp, #40]
  4040c4:	and	w8, w8, #0x7
  4040c8:	cmp	w0, w8
  4040cc:	b.lt	404104 <parse_ifindex@plt+0x1e74>  // b.tstop
  4040d0:	ldr	w8, [sp, #32]
  4040d4:	ldr	w9, [sp, #40]
  4040d8:	orr	w0, w9, w8, lsl #10
  4040dc:	ldr	w1, [sp, #36]
  4040e0:	ldr	x2, [sp, #16]
  4040e4:	mov	w3, #0x2bb                 	// #699
  4040e8:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  4040ec:	add	x4, x4, #0x5f0
  4040f0:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  4040f4:	add	x5, x5, #0xddd
  4040f8:	bl	401e90 <log_internal_realm@plt>
  4040fc:	str	w0, [sp, #12]
  404100:	b	404118 <parse_ifindex@plt+0x1e88>
  404104:	ldr	w0, [sp, #36]
  404108:	bl	401ea0 <abs@plt>
  40410c:	mov	w8, wzr
  404110:	subs	w8, w8, w0, uxtb
  404114:	str	w8, [sp, #12]
  404118:	ldr	w8, [sp, #12]
  40411c:	str	w8, [sp, #28]
  404120:	ldr	w8, [sp, #28]
  404124:	stur	w8, [x29, #-4]
  404128:	b	404130 <parse_ifindex@plt+0x1ea0>
  40412c:	stur	wzr, [x29, #-4]
  404130:	ldur	w0, [x29, #-4]
  404134:	ldp	x29, x30, [sp, #80]
  404138:	add	sp, sp, #0x60
  40413c:	ret
  404140:	sub	sp, sp, #0xe0
  404144:	stp	x29, x30, [sp, #208]
  404148:	add	x29, sp, #0xd0
  40414c:	mov	x8, xzr
  404150:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  404154:	add	x9, x9, #0x221
  404158:	add	x9, x9, #0x3
  40415c:	adrp	x10, 408000 <parse_ifindex@plt+0x5d70>
  404160:	add	x10, x10, #0x7ea
  404164:	adrp	x11, 408000 <parse_ifindex@plt+0x5d70>
  404168:	add	x11, x11, #0x7fb
  40416c:	stur	w0, [x29, #-8]
  404170:	stur	x1, [x29, #-16]
  404174:	stur	x2, [x29, #-24]
  404178:	stur	xzr, [x29, #-48]
  40417c:	stur	xzr, [x29, #-40]
  404180:	stur	xzr, [x29, #-32]
  404184:	stur	x8, [x29, #-56]
  404188:	ldur	x8, [x29, #-24]
  40418c:	stur	x8, [x29, #-64]
  404190:	str	x9, [sp, #56]
  404194:	str	x10, [sp, #48]
  404198:	str	x11, [sp, #40]
  40419c:	ldur	x8, [x29, #-64]
  4041a0:	cmp	x8, #0x0
  4041a4:	cset	w9, ne  // ne = any
  4041a8:	mov	w10, #0x1                   	// #1
  4041ac:	eor	w9, w9, #0x1
  4041b0:	eor	w9, w9, w10
  4041b4:	eor	w9, w9, w10
  4041b8:	and	w9, w9, #0x1
  4041bc:	mov	w0, w9
  4041c0:	sxtw	x8, w0
  4041c4:	cbz	x8, 4041ec <parse_ifindex@plt+0x1f5c>
  4041c8:	mov	w8, wzr
  4041cc:	mov	w0, w8
  4041d0:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  4041d4:	add	x1, x1, #0x92c
  4041d8:	ldr	x2, [sp, #56]
  4041dc:	mov	w3, #0x2e8                 	// #744
  4041e0:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  4041e4:	add	x4, x4, #0x760
  4041e8:	bl	401ec0 <log_assert_failed_realm@plt>
  4041ec:	ldur	x0, [x29, #-64]
  4041f0:	ldur	x8, [x29, #-16]
  4041f4:	ldr	x1, [x8, #8]
  4041f8:	sub	x2, x29, #0x44
  4041fc:	bl	4067f8 <parse_ifindex@plt+0x4568>
  404200:	stur	w0, [x29, #-72]
  404204:	ldur	w9, [x29, #-72]
  404208:	cmp	w9, #0x0
  40420c:	cset	w9, ge  // ge = tcont
  404210:	tbnz	w9, #0, 404228 <parse_ifindex@plt+0x1f98>
  404214:	ldur	w8, [x29, #-72]
  404218:	stur	w8, [x29, #-4]
  40421c:	mov	w8, #0x1                   	// #1
  404220:	stur	w8, [x29, #-76]
  404224:	b	404568 <parse_ifindex@plt+0x22d8>
  404228:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  40422c:	add	x8, x8, #0x10
  404230:	ldr	w0, [x8]
  404234:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  404238:	add	x8, x8, #0x0
  40423c:	ldrb	w9, [x8]
  404240:	and	w1, w9, #0x1
  404244:	bl	401fc0 <polkit_agent_open_if_enabled@plt>
  404248:	ldur	x8, [x29, #-64]
  40424c:	mov	x0, x8
  404250:	sub	x1, x29, #0x38
  404254:	adrp	x2, 408000 <parse_ifindex@plt+0x5d70>
  404258:	add	x2, x2, #0x78b
  40425c:	adrp	x3, 408000 <parse_ifindex@plt+0x5d70>
  404260:	add	x3, x3, #0x7a4
  404264:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  404268:	add	x4, x4, #0x7be
  40426c:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  404270:	add	x5, x5, #0x7df
  404274:	bl	402070 <sd_bus_message_new_method_call@plt>
  404278:	stur	w0, [x29, #-72]
  40427c:	ldur	w9, [x29, #-72]
  404280:	cmp	w9, #0x0
  404284:	cset	w9, ge  // ge = tcont
  404288:	tbnz	w9, #0, 404314 <parse_ifindex@plt+0x2084>
  40428c:	mov	w8, #0x3                   	// #3
  404290:	stur	w8, [x29, #-80]
  404294:	ldur	w8, [x29, #-72]
  404298:	stur	w8, [x29, #-84]
  40429c:	stur	wzr, [x29, #-88]
  4042a0:	ldur	w0, [x29, #-88]
  4042a4:	bl	401e80 <log_get_max_level_realm@plt>
  4042a8:	ldur	w8, [x29, #-80]
  4042ac:	and	w8, w8, #0x7
  4042b0:	cmp	w0, w8
  4042b4:	b.lt	4042e4 <parse_ifindex@plt+0x2054>  // b.tstop
  4042b8:	ldur	w8, [x29, #-88]
  4042bc:	ldur	w9, [x29, #-80]
  4042c0:	orr	w0, w9, w8, lsl #10
  4042c4:	ldur	w1, [x29, #-84]
  4042c8:	ldr	x2, [sp, #56]
  4042cc:	mov	w3, #0x2f8                 	// #760
  4042d0:	ldr	x4, [sp, #48]
  4042d4:	ldr	x5, [sp, #40]
  4042d8:	bl	401e90 <log_internal_realm@plt>
  4042dc:	str	w0, [sp, #36]
  4042e0:	b	4042f8 <parse_ifindex@plt+0x2068>
  4042e4:	ldur	w0, [x29, #-84]
  4042e8:	bl	401ea0 <abs@plt>
  4042ec:	mov	w8, wzr
  4042f0:	subs	w8, w8, w0, uxtb
  4042f4:	str	w8, [sp, #36]
  4042f8:	ldr	w8, [sp, #36]
  4042fc:	stur	w8, [x29, #-92]
  404300:	ldur	w8, [x29, #-92]
  404304:	stur	w8, [x29, #-4]
  404308:	mov	w8, #0x1                   	// #1
  40430c:	stur	w8, [x29, #-76]
  404310:	b	404568 <parse_ifindex@plt+0x22d8>
  404314:	ldur	x0, [x29, #-56]
  404318:	ldur	w2, [x29, #-68]
  40431c:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  404320:	add	x1, x1, #0x9b2
  404324:	bl	402080 <sd_bus_message_append@plt>
  404328:	stur	w0, [x29, #-72]
  40432c:	ldur	w8, [x29, #-72]
  404330:	cmp	w8, #0x0
  404334:	cset	w8, ge  // ge = tcont
  404338:	tbnz	w8, #0, 4043c4 <parse_ifindex@plt+0x2134>
  40433c:	mov	w8, #0x3                   	// #3
  404340:	stur	w8, [x29, #-96]
  404344:	ldur	w8, [x29, #-72]
  404348:	stur	w8, [x29, #-100]
  40434c:	str	wzr, [sp, #104]
  404350:	ldr	w0, [sp, #104]
  404354:	bl	401e80 <log_get_max_level_realm@plt>
  404358:	ldur	w8, [x29, #-96]
  40435c:	and	w8, w8, #0x7
  404360:	cmp	w0, w8
  404364:	b.lt	404394 <parse_ifindex@plt+0x2104>  // b.tstop
  404368:	ldr	w8, [sp, #104]
  40436c:	ldur	w9, [x29, #-96]
  404370:	orr	w0, w9, w8, lsl #10
  404374:	ldur	w1, [x29, #-100]
  404378:	ldr	x2, [sp, #56]
  40437c:	mov	w3, #0x2fc                 	// #764
  404380:	ldr	x4, [sp, #48]
  404384:	ldr	x5, [sp, #40]
  404388:	bl	401e90 <log_internal_realm@plt>
  40438c:	str	w0, [sp, #32]
  404390:	b	4043a8 <parse_ifindex@plt+0x2118>
  404394:	ldur	w0, [x29, #-100]
  404398:	bl	401ea0 <abs@plt>
  40439c:	mov	w8, wzr
  4043a0:	subs	w8, w8, w0, uxtb
  4043a4:	str	w8, [sp, #32]
  4043a8:	ldr	w8, [sp, #32]
  4043ac:	str	w8, [sp, #100]
  4043b0:	ldr	w8, [sp, #100]
  4043b4:	stur	w8, [x29, #-4]
  4043b8:	mov	w8, #0x1                   	// #1
  4043bc:	stur	w8, [x29, #-76]
  4043c0:	b	404568 <parse_ifindex@plt+0x22d8>
  4043c4:	ldur	x0, [x29, #-56]
  4043c8:	ldur	x8, [x29, #-16]
  4043cc:	add	x1, x8, #0x10
  4043d0:	bl	402090 <sd_bus_message_append_strv@plt>
  4043d4:	stur	w0, [x29, #-72]
  4043d8:	ldur	w9, [x29, #-72]
  4043dc:	cmp	w9, #0x0
  4043e0:	cset	w9, ge  // ge = tcont
  4043e4:	tbnz	w9, #0, 404470 <parse_ifindex@plt+0x21e0>
  4043e8:	mov	w8, #0x3                   	// #3
  4043ec:	str	w8, [sp, #96]
  4043f0:	ldur	w8, [x29, #-72]
  4043f4:	str	w8, [sp, #92]
  4043f8:	str	wzr, [sp, #88]
  4043fc:	ldr	w0, [sp, #88]
  404400:	bl	401e80 <log_get_max_level_realm@plt>
  404404:	ldr	w8, [sp, #96]
  404408:	and	w8, w8, #0x7
  40440c:	cmp	w0, w8
  404410:	b.lt	404440 <parse_ifindex@plt+0x21b0>  // b.tstop
  404414:	ldr	w8, [sp, #88]
  404418:	ldr	w9, [sp, #96]
  40441c:	orr	w0, w9, w8, lsl #10
  404420:	ldr	w1, [sp, #92]
  404424:	ldr	x2, [sp, #56]
  404428:	mov	w3, #0x300                 	// #768
  40442c:	ldr	x4, [sp, #48]
  404430:	ldr	x5, [sp, #40]
  404434:	bl	401e90 <log_internal_realm@plt>
  404438:	str	w0, [sp, #28]
  40443c:	b	404454 <parse_ifindex@plt+0x21c4>
  404440:	ldr	w0, [sp, #92]
  404444:	bl	401ea0 <abs@plt>
  404448:	mov	w8, wzr
  40444c:	subs	w8, w8, w0, uxtb
  404450:	str	w8, [sp, #28]
  404454:	ldr	w8, [sp, #28]
  404458:	str	w8, [sp, #84]
  40445c:	ldr	w8, [sp, #84]
  404460:	stur	w8, [x29, #-4]
  404464:	mov	w8, #0x1                   	// #1
  404468:	stur	w8, [x29, #-76]
  40446c:	b	404568 <parse_ifindex@plt+0x22d8>
  404470:	ldur	x0, [x29, #-64]
  404474:	ldur	x1, [x29, #-56]
  404478:	mov	x8, xzr
  40447c:	mov	x2, x8
  404480:	sub	x3, x29, #0x30
  404484:	mov	x4, x8
  404488:	bl	4020a0 <sd_bus_call@plt>
  40448c:	stur	w0, [x29, #-72]
  404490:	ldur	w9, [x29, #-72]
  404494:	cmp	w9, #0x0
  404498:	cset	w9, ge  // ge = tcont
  40449c:	tbnz	w9, #0, 40455c <parse_ifindex@plt+0x22cc>
  4044a0:	mov	w8, #0x3                   	// #3
  4044a4:	str	w8, [sp, #80]
  4044a8:	ldur	w8, [x29, #-72]
  4044ac:	str	w8, [sp, #76]
  4044b0:	str	wzr, [sp, #72]
  4044b4:	ldr	w0, [sp, #72]
  4044b8:	bl	401e80 <log_get_max_level_realm@plt>
  4044bc:	ldr	w8, [sp, #80]
  4044c0:	and	w8, w8, #0x7
  4044c4:	cmp	w0, w8
  4044c8:	b.lt	40452c <parse_ifindex@plt+0x229c>  // b.tstop
  4044cc:	ldr	w8, [sp, #72]
  4044d0:	ldr	w9, [sp, #80]
  4044d4:	orr	w0, w9, w8, lsl #10
  4044d8:	ldr	w1, [sp, #76]
  4044dc:	ldur	w8, [x29, #-72]
  4044e0:	sub	x10, x29, #0x30
  4044e4:	str	w0, [sp, #24]
  4044e8:	mov	x0, x10
  4044ec:	str	w1, [sp, #20]
  4044f0:	mov	w1, w8
  4044f4:	bl	401f90 <bus_error_message@plt>
  4044f8:	ldr	w8, [sp, #24]
  4044fc:	str	x0, [sp, #8]
  404500:	mov	w0, w8
  404504:	ldr	w1, [sp, #20]
  404508:	ldr	x2, [sp, #56]
  40450c:	mov	w3, #0x304                 	// #772
  404510:	ldr	x4, [sp, #48]
  404514:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  404518:	add	x5, x5, #0x81c
  40451c:	ldr	x6, [sp, #8]
  404520:	bl	401e90 <log_internal_realm@plt>
  404524:	str	w0, [sp, #4]
  404528:	b	404540 <parse_ifindex@plt+0x22b0>
  40452c:	ldr	w0, [sp, #76]
  404530:	bl	401ea0 <abs@plt>
  404534:	mov	w8, wzr
  404538:	subs	w8, w8, w0, uxtb
  40453c:	str	w8, [sp, #4]
  404540:	ldr	w8, [sp, #4]
  404544:	str	w8, [sp, #68]
  404548:	ldr	w8, [sp, #68]
  40454c:	stur	w8, [x29, #-4]
  404550:	mov	w8, #0x1                   	// #1
  404554:	stur	w8, [x29, #-76]
  404558:	b	404568 <parse_ifindex@plt+0x22d8>
  40455c:	stur	wzr, [x29, #-4]
  404560:	mov	w8, #0x1                   	// #1
  404564:	stur	w8, [x29, #-76]
  404568:	sub	x0, x29, #0x38
  40456c:	bl	4047dc <parse_ifindex@plt+0x254c>
  404570:	sub	x0, x29, #0x30
  404574:	bl	401fa0 <sd_bus_error_free@plt>
  404578:	ldur	w0, [x29, #-4]
  40457c:	ldp	x29, x30, [sp, #208]
  404580:	add	sp, sp, #0xe0
  404584:	ret
  404588:	sub	sp, sp, #0x90
  40458c:	stp	x29, x30, [sp, #128]
  404590:	add	x29, sp, #0x80
  404594:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  404598:	add	x8, x8, #0x221
  40459c:	add	x8, x8, #0x3
  4045a0:	stur	w0, [x29, #-8]
  4045a4:	stur	x1, [x29, #-16]
  4045a8:	stur	x2, [x29, #-24]
  4045ac:	stur	xzr, [x29, #-48]
  4045b0:	stur	xzr, [x29, #-40]
  4045b4:	stur	xzr, [x29, #-32]
  4045b8:	ldur	x9, [x29, #-24]
  4045bc:	stur	x9, [x29, #-56]
  4045c0:	str	x8, [sp, #32]
  4045c4:	ldur	x8, [x29, #-56]
  4045c8:	cmp	x8, #0x0
  4045cc:	cset	w9, ne  // ne = any
  4045d0:	mov	w10, #0x1                   	// #1
  4045d4:	eor	w9, w9, #0x1
  4045d8:	eor	w9, w9, w10
  4045dc:	eor	w9, w9, w10
  4045e0:	and	w9, w9, #0x1
  4045e4:	mov	w0, w9
  4045e8:	sxtw	x8, w0
  4045ec:	cbz	x8, 404614 <parse_ifindex@plt+0x2384>
  4045f0:	mov	w8, wzr
  4045f4:	mov	w0, w8
  4045f8:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  4045fc:	add	x1, x1, #0x92c
  404600:	ldr	x2, [sp, #32]
  404604:	mov	w3, #0x30e                 	// #782
  404608:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  40460c:	add	x4, x4, #0x8c5
  404610:	bl	401ec0 <log_assert_failed_realm@plt>
  404614:	ldur	x0, [x29, #-56]
  404618:	ldur	x8, [x29, #-16]
  40461c:	ldr	x1, [x8, #8]
  404620:	sub	x2, x29, #0x3c
  404624:	bl	4067f8 <parse_ifindex@plt+0x4568>
  404628:	str	w0, [sp, #64]
  40462c:	ldr	w9, [sp, #64]
  404630:	cmp	w9, #0x0
  404634:	cset	w9, ge  // ge = tcont
  404638:	tbnz	w9, #0, 404650 <parse_ifindex@plt+0x23c0>
  40463c:	ldr	w8, [sp, #64]
  404640:	stur	w8, [x29, #-4]
  404644:	mov	w8, #0x1                   	// #1
  404648:	str	w8, [sp, #60]
  40464c:	b	40479c <parse_ifindex@plt+0x250c>
  404650:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  404654:	add	x8, x8, #0x10
  404658:	ldr	w0, [x8]
  40465c:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  404660:	add	x8, x8, #0x0
  404664:	ldrb	w9, [x8]
  404668:	and	w1, w9, #0x1
  40466c:	bl	401fc0 <polkit_agent_open_if_enabled@plt>
  404670:	ldur	x8, [x29, #-56]
  404674:	ldur	w9, [x29, #-60]
  404678:	mov	x0, x8
  40467c:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  404680:	add	x1, x1, #0x78b
  404684:	adrp	x2, 408000 <parse_ifindex@plt+0x5d70>
  404688:	add	x2, x2, #0x7a4
  40468c:	adrp	x3, 408000 <parse_ifindex@plt+0x5d70>
  404690:	add	x3, x3, #0x7be
  404694:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  404698:	add	x4, x4, #0x8eb
  40469c:	sub	x5, x29, #0x30
  4046a0:	mov	x8, xzr
  4046a4:	mov	x6, x8
  4046a8:	adrp	x7, 407000 <parse_ifindex@plt+0x4d70>
  4046ac:	add	x7, x7, #0x9b2
  4046b0:	mov	x8, sp
  4046b4:	str	w9, [x8]
  4046b8:	bl	401fe0 <sd_bus_call_method@plt>
  4046bc:	str	w0, [sp, #64]
  4046c0:	ldr	w9, [sp, #64]
  4046c4:	cmp	w9, #0x0
  4046c8:	cset	w9, ge  // ge = tcont
  4046cc:	tbnz	w9, #0, 404790 <parse_ifindex@plt+0x2500>
  4046d0:	mov	w8, #0x3                   	// #3
  4046d4:	str	w8, [sp, #56]
  4046d8:	ldr	w8, [sp, #64]
  4046dc:	str	w8, [sp, #52]
  4046e0:	str	wzr, [sp, #48]
  4046e4:	ldr	w0, [sp, #48]
  4046e8:	bl	401e80 <log_get_max_level_realm@plt>
  4046ec:	ldr	w8, [sp, #56]
  4046f0:	and	w8, w8, #0x7
  4046f4:	cmp	w0, w8
  4046f8:	b.lt	404760 <parse_ifindex@plt+0x24d0>  // b.tstop
  4046fc:	ldr	w8, [sp, #48]
  404700:	ldr	w9, [sp, #56]
  404704:	orr	w0, w9, w8, lsl #10
  404708:	ldr	w1, [sp, #52]
  40470c:	ldr	w8, [sp, #64]
  404710:	sub	x10, x29, #0x30
  404714:	str	w0, [sp, #28]
  404718:	mov	x0, x10
  40471c:	str	w1, [sp, #24]
  404720:	mov	w1, w8
  404724:	bl	401f90 <bus_error_message@plt>
  404728:	ldr	w8, [sp, #28]
  40472c:	str	x0, [sp, #16]
  404730:	mov	w0, w8
  404734:	ldr	w1, [sp, #24]
  404738:	ldr	x2, [sp, #32]
  40473c:	mov	w3, #0x320                 	// #800
  404740:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  404744:	add	x4, x4, #0x8f9
  404748:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  40474c:	add	x5, x5, #0x905
  404750:	ldr	x6, [sp, #16]
  404754:	bl	401e90 <log_internal_realm@plt>
  404758:	str	w0, [sp, #12]
  40475c:	b	404774 <parse_ifindex@plt+0x24e4>
  404760:	ldr	w0, [sp, #52]
  404764:	bl	401ea0 <abs@plt>
  404768:	mov	w8, wzr
  40476c:	subs	w8, w8, w0, uxtb
  404770:	str	w8, [sp, #12]
  404774:	ldr	w8, [sp, #12]
  404778:	str	w8, [sp, #44]
  40477c:	ldr	w8, [sp, #44]
  404780:	stur	w8, [x29, #-4]
  404784:	mov	w8, #0x1                   	// #1
  404788:	str	w8, [sp, #60]
  40478c:	b	40479c <parse_ifindex@plt+0x250c>
  404790:	stur	wzr, [x29, #-4]
  404794:	mov	w8, #0x1                   	// #1
  404798:	str	w8, [sp, #60]
  40479c:	sub	x0, x29, #0x30
  4047a0:	bl	401fa0 <sd_bus_error_free@plt>
  4047a4:	ldur	w0, [x29, #-4]
  4047a8:	ldp	x29, x30, [sp, #128]
  4047ac:	add	sp, sp, #0x90
  4047b0:	ret
  4047b4:	sub	sp, sp, #0x30
  4047b8:	stp	x29, x30, [sp, #32]
  4047bc:	add	x29, sp, #0x20
  4047c0:	stur	w0, [x29, #-4]
  4047c4:	str	x1, [sp, #16]
  4047c8:	str	x2, [sp, #8]
  4047cc:	bl	402b08 <parse_ifindex@plt+0x878>
  4047d0:	ldp	x29, x30, [sp, #32]
  4047d4:	add	sp, sp, #0x30
  4047d8:	ret
  4047dc:	sub	sp, sp, #0x20
  4047e0:	stp	x29, x30, [sp, #16]
  4047e4:	add	x29, sp, #0x10
  4047e8:	str	x0, [sp, #8]
  4047ec:	ldr	x8, [sp, #8]
  4047f0:	ldr	x8, [x8]
  4047f4:	cbz	x8, 404804 <parse_ifindex@plt+0x2574>
  4047f8:	ldr	x8, [sp, #8]
  4047fc:	ldr	x0, [x8]
  404800:	bl	4020b0 <sd_bus_message_unref@plt>
  404804:	ldp	x29, x30, [sp, #16]
  404808:	add	sp, sp, #0x20
  40480c:	ret
  404810:	stp	x29, x30, [sp, #-32]!
  404814:	stp	x28, x19, [sp, #16]
  404818:	mov	x29, sp
  40481c:	sub	sp, sp, #0xa00
  404820:	mov	x19, sp
  404824:	mov	x8, xzr
  404828:	mov	w9, #0x0                   	// #0
  40482c:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  404830:	add	x10, x10, #0x9df
  404834:	adrp	x11, 407000 <parse_ifindex@plt+0x4d70>
  404838:	add	x11, x11, #0x221
  40483c:	add	x11, x11, #0x3
  404840:	adrp	x12, 407000 <parse_ifindex@plt+0x4d70>
  404844:	add	x12, x12, #0xa32
  404848:	adrp	x13, 407000 <parse_ifindex@plt+0x4d70>
  40484c:	add	x13, x13, #0xaf6
  404850:	adrp	x14, 407000 <parse_ifindex@plt+0x4d70>
  404854:	add	x14, x14, #0x9b4
  404858:	stur	x0, [x29, #-8]
  40485c:	stur	x8, [x29, #-16]
  404860:	sturb	w9, [x29, #-33]
  404864:	str	x10, [x19, #216]
  404868:	str	x11, [x19, #208]
  40486c:	str	x12, [x19, #200]
  404870:	str	x13, [x19, #192]
  404874:	str	x14, [x19, #184]
  404878:	ldur	x8, [x29, #-8]
  40487c:	cmp	x8, #0x0
  404880:	cset	w9, ne  // ne = any
  404884:	mov	w10, #0x1                   	// #1
  404888:	eor	w9, w9, #0x1
  40488c:	eor	w9, w9, w10
  404890:	eor	w9, w9, w10
  404894:	and	w9, w9, #0x1
  404898:	mov	w0, w9
  40489c:	sxtw	x8, w0
  4048a0:	cbz	x8, 4048c4 <parse_ifindex@plt+0x2634>
  4048a4:	mov	w8, wzr
  4048a8:	mov	w0, w8
  4048ac:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  4048b0:	add	x1, x1, #0x9b2
  4048b4:	ldr	x2, [x19, #208]
  4048b8:	mov	w3, #0x39                  	// #57
  4048bc:	ldr	x4, [x19, #184]
  4048c0:	bl	401ec0 <log_assert_failed_realm@plt>
  4048c4:	ldr	x0, [x19, #216]
  4048c8:	bl	4020c0 <getenv@plt>
  4048cc:	stur	x0, [x29, #-24]
  4048d0:	ldur	x8, [x29, #-24]
  4048d4:	cbz	x8, 40493c <parse_ifindex@plt+0x26ac>
  4048d8:	ldur	x8, [x29, #-24]
  4048dc:	str	x8, [x19, #384]
  4048e0:	ldr	x0, [x19, #384]
  4048e4:	bl	4020d0 <strlen@plt>
  4048e8:	mov	x8, #0x1                   	// #1
  4048ec:	add	x9, x0, #0x1
  4048f0:	str	x9, [x19, #376]
  4048f4:	ldr	x9, [x19, #376]
  4048f8:	mul	x8, x9, x8
  4048fc:	add	x8, x8, #0xf
  404900:	and	x8, x8, #0xfffffffffffffff0
  404904:	mov	x9, sp
  404908:	subs	x8, x9, x8
  40490c:	mov	sp, x8
  404910:	str	x8, [x19, #368]
  404914:	ldr	x8, [x19, #368]
  404918:	ldr	x1, [x19, #384]
  40491c:	ldr	x2, [x19, #376]
  404920:	mov	x0, x8
  404924:	str	x8, [x19, #176]
  404928:	bl	4020e0 <memcpy@plt>
  40492c:	ldr	x8, [x19, #176]
  404930:	str	x8, [x19, #360]
  404934:	ldr	x9, [x19, #360]
  404938:	stur	x9, [x29, #-16]
  40493c:	add	x8, x19, #0x158
  404940:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  404944:	add	x9, x9, #0x9e2
  404948:	str	x9, [x19, #344]
  40494c:	ldur	x9, [x29, #-8]
  404950:	ldr	x0, [x9, #8]
  404954:	str	x8, [x19, #168]
  404958:	bl	405118 <parse_ifindex@plt+0x2e88>
  40495c:	tbnz	w0, #0, 404964 <parse_ifindex@plt+0x26d4>
  404960:	b	404974 <parse_ifindex@plt+0x26e4>
  404964:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  404968:	add	x8, x8, #0x9e4
  40496c:	str	x8, [x19, #160]
  404970:	b	404980 <parse_ifindex@plt+0x26f0>
  404974:	ldur	x8, [x29, #-8]
  404978:	ldr	x8, [x8, #8]
  40497c:	str	x8, [x19, #160]
  404980:	ldr	x8, [x19, #160]
  404984:	ldr	x9, [x19, #168]
  404988:	str	x8, [x9, #8]
  40498c:	str	xzr, [x19, #320]
  404990:	str	xzr, [x19, #312]
  404994:	ldr	x8, [x19, #312]
  404998:	mov	w9, #0x0                   	// #0
  40499c:	cmp	x8, #0x2
  4049a0:	str	w9, [x19, #156]
  4049a4:	b.cs	4049cc <parse_ifindex@plt+0x273c>  // b.hs, b.nlast
  4049a8:	ldr	x8, [x19, #312]
  4049ac:	mov	x9, #0x8                   	// #8
  4049b0:	mul	x8, x9, x8
  4049b4:	add	x9, x19, #0x158
  4049b8:	add	x8, x9, x8
  4049bc:	ldr	x8, [x8]
  4049c0:	cmp	x8, #0x0
  4049c4:	cset	w10, ne  // ne = any
  4049c8:	str	w10, [x19, #156]
  4049cc:	ldr	w8, [x19, #156]
  4049d0:	tbnz	w8, #0, 4049d8 <parse_ifindex@plt+0x2748>
  4049d4:	b	404a10 <parse_ifindex@plt+0x2780>
  4049d8:	ldr	x8, [x19, #312]
  4049dc:	mov	x9, #0x8                   	// #8
  4049e0:	mul	x8, x9, x8
  4049e4:	add	x9, x19, #0x158
  4049e8:	add	x8, x9, x8
  4049ec:	ldr	x0, [x8]
  4049f0:	bl	4020d0 <strlen@plt>
  4049f4:	ldr	x8, [x19, #320]
  4049f8:	add	x8, x8, x0
  4049fc:	str	x8, [x19, #320]
  404a00:	ldr	x8, [x19, #312]
  404a04:	add	x8, x8, #0x1
  404a08:	str	x8, [x19, #312]
  404a0c:	b	404994 <parse_ifindex@plt+0x2704>
  404a10:	ldr	x8, [x19, #320]
  404a14:	add	x8, x8, #0x1
  404a18:	str	x8, [x19, #304]
  404a1c:	ldr	x1, [x19, #304]
  404a20:	mov	x0, #0x1                   	// #1
  404a24:	bl	405158 <parse_ifindex@plt+0x2ec8>
  404a28:	mov	w8, #0x1                   	// #1
  404a2c:	eor	w9, w0, #0x1
  404a30:	eor	w9, w9, w8
  404a34:	eor	w9, w9, w8
  404a38:	eor	w8, w9, w8
  404a3c:	and	w8, w8, #0x1
  404a40:	mov	w1, w8
  404a44:	sxtw	x10, w1
  404a48:	cbz	x10, 404a6c <parse_ifindex@plt+0x27dc>
  404a4c:	mov	w8, wzr
  404a50:	mov	w0, w8
  404a54:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  404a58:	add	x1, x1, #0x9e8
  404a5c:	ldr	x2, [x19, #208]
  404a60:	mov	w3, #0x41                  	// #65
  404a64:	ldr	x4, [x19, #184]
  404a68:	bl	401ec0 <log_assert_failed_realm@plt>
  404a6c:	ldr	x8, [x19, #304]
  404a70:	mov	x9, #0x1                   	// #1
  404a74:	mul	x8, x9, x8
  404a78:	cmp	x8, #0x400, lsl #12
  404a7c:	cset	w10, ls  // ls = plast
  404a80:	mov	w11, #0x1                   	// #1
  404a84:	eor	w10, w10, #0x1
  404a88:	eor	w10, w10, w11
  404a8c:	eor	w10, w10, w11
  404a90:	and	w10, w10, #0x1
  404a94:	mov	w0, w10
  404a98:	sxtw	x8, w0
  404a9c:	cbz	x8, 404ac0 <parse_ifindex@plt+0x2830>
  404aa0:	mov	w8, wzr
  404aa4:	mov	w0, w8
  404aa8:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  404aac:	add	x1, x1, #0xa13
  404ab0:	ldr	x2, [x19, #208]
  404ab4:	mov	w3, #0x41                  	// #65
  404ab8:	ldr	x4, [x19, #184]
  404abc:	bl	401ec0 <log_assert_failed_realm@plt>
  404ac0:	ldr	x8, [x19, #304]
  404ac4:	mov	x9, #0x1                   	// #1
  404ac8:	mul	x8, x9, x8
  404acc:	mul	x8, x8, x9
  404ad0:	add	x8, x8, #0xf
  404ad4:	and	x8, x8, #0xfffffffffffffff0
  404ad8:	mov	x9, sp
  404adc:	subs	x8, x9, x8
  404ae0:	mov	sp, x8
  404ae4:	str	x8, [x19, #296]
  404ae8:	ldr	x8, [x19, #296]
  404aec:	str	x8, [x19, #336]
  404af0:	str	x8, [x19, #328]
  404af4:	str	xzr, [x19, #312]
  404af8:	ldr	x8, [x19, #312]
  404afc:	mov	w9, #0x0                   	// #0
  404b00:	cmp	x8, #0x2
  404b04:	str	w9, [x19, #152]
  404b08:	b.cs	404b30 <parse_ifindex@plt+0x28a0>  // b.hs, b.nlast
  404b0c:	ldr	x8, [x19, #312]
  404b10:	mov	x9, #0x8                   	// #8
  404b14:	mul	x8, x9, x8
  404b18:	add	x9, x19, #0x158
  404b1c:	add	x8, x9, x8
  404b20:	ldr	x8, [x8]
  404b24:	cmp	x8, #0x0
  404b28:	cset	w10, ne  // ne = any
  404b2c:	str	w10, [x19, #152]
  404b30:	ldr	w8, [x19, #152]
  404b34:	tbnz	w8, #0, 404b3c <parse_ifindex@plt+0x28ac>
  404b38:	b	404b70 <parse_ifindex@plt+0x28e0>
  404b3c:	ldr	x0, [x19, #328]
  404b40:	ldr	x8, [x19, #312]
  404b44:	mov	x9, #0x8                   	// #8
  404b48:	mul	x8, x9, x8
  404b4c:	add	x9, x19, #0x158
  404b50:	add	x8, x9, x8
  404b54:	ldr	x1, [x8]
  404b58:	bl	4020f0 <stpcpy@plt>
  404b5c:	str	x0, [x19, #328]
  404b60:	ldr	x8, [x19, #312]
  404b64:	add	x8, x8, #0x1
  404b68:	str	x8, [x19, #312]
  404b6c:	b	404af8 <parse_ifindex@plt+0x2868>
  404b70:	ldr	x8, [x19, #328]
  404b74:	mov	w9, #0x0                   	// #0
  404b78:	strb	w9, [x8]
  404b7c:	ldr	x8, [x19, #336]
  404b80:	str	x8, [x19, #288]
  404b84:	ldr	x8, [x19, #288]
  404b88:	stur	x8, [x29, #-32]
  404b8c:	ldur	x1, [x29, #-32]
  404b90:	ldr	x0, [x19, #216]
  404b94:	mov	w2, #0x1                   	// #1
  404b98:	bl	402100 <setenv@plt>
  404b9c:	cmp	w0, #0x0
  404ba0:	cset	w9, ge  // ge = tcont
  404ba4:	tbnz	w9, #0, 404c28 <parse_ifindex@plt+0x2998>
  404ba8:	mov	w8, #0x4                   	// #4
  404bac:	str	w8, [x19, #284]
  404bb0:	bl	402110 <__errno_location@plt>
  404bb4:	ldr	w8, [x0]
  404bb8:	str	w8, [x19, #280]
  404bbc:	str	wzr, [x19, #276]
  404bc0:	ldr	w0, [x19, #276]
  404bc4:	bl	401e80 <log_get_max_level_realm@plt>
  404bc8:	ldr	w8, [x19, #284]
  404bcc:	and	w8, w8, #0x7
  404bd0:	cmp	w0, w8
  404bd4:	b.lt	404c08 <parse_ifindex@plt+0x2978>  // b.tstop
  404bd8:	ldr	w8, [x19, #276]
  404bdc:	ldr	w9, [x19, #284]
  404be0:	orr	w0, w9, w8, lsl #10
  404be4:	ldr	w1, [x19, #280]
  404be8:	ldr	x2, [x19, #208]
  404bec:	mov	w3, #0x43                  	// #67
  404bf0:	ldr	x4, [x19, #200]
  404bf4:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  404bf8:	add	x5, x5, #0xa44
  404bfc:	bl	401e90 <log_internal_realm@plt>
  404c00:	str	w0, [x19, #148]
  404c04:	b	404c1c <parse_ifindex@plt+0x298c>
  404c08:	ldr	w0, [x19, #280]
  404c0c:	bl	401ea0 <abs@plt>
  404c10:	mov	w8, wzr
  404c14:	subs	w8, w8, w0, uxtb
  404c18:	str	w8, [x19, #148]
  404c1c:	ldr	w8, [x19, #148]
  404c20:	str	w8, [x19, #272]
  404c24:	b	404c2c <parse_ifindex@plt+0x299c>
  404c28:	bl	402120 <tzset@plt>
  404c2c:	ldur	x8, [x29, #-8]
  404c30:	ldr	x8, [x8]
  404c34:	cbz	x8, 404c5c <parse_ifindex@plt+0x29cc>
  404c38:	ldur	x8, [x29, #-8]
  404c3c:	ldr	x8, [x8]
  404c40:	mov	x9, #0x4240                	// #16960
  404c44:	movk	x9, #0xf, lsl #16
  404c48:	udiv	x8, x8, x9
  404c4c:	str	x8, [x19, #408]
  404c50:	mov	w10, #0x1                   	// #1
  404c54:	sturb	w10, [x29, #-33]
  404c58:	b	404d48 <parse_ifindex@plt+0x2ab8>
  404c5c:	mov	w8, #0x0                   	// #0
  404c60:	strb	w8, [x19, #271]
  404c64:	adrp	x9, 420000 <parse_ifindex@plt+0x1dd70>
  404c68:	add	x9, x9, #0x10
  404c6c:	ldr	w8, [x9]
  404c70:	str	w8, [x19, #144]
  404c74:	cbz	w8, 404c94 <parse_ifindex@plt+0x2a04>
  404c78:	b	404c7c <parse_ifindex@plt+0x29ec>
  404c7c:	ldr	w8, [x19, #144]
  404c80:	cmp	w8, #0x2
  404c84:	cset	w9, eq  // eq = none
  404c88:	eor	w9, w9, #0x1
  404c8c:	tbnz	w9, #0, 404ca0 <parse_ifindex@plt+0x2a10>
  404c90:	b	404c94 <parse_ifindex@plt+0x2a04>
  404c94:	mov	w8, #0x1                   	// #1
  404c98:	strb	w8, [x19, #271]
  404c9c:	b	404ca0 <parse_ifindex@plt+0x2a10>
  404ca0:	ldrb	w8, [x19, #271]
  404ca4:	and	w8, w8, #0x1
  404ca8:	strb	w8, [x19, #270]
  404cac:	ldrb	w8, [x19, #270]
  404cb0:	tbnz	w8, #0, 404cb8 <parse_ifindex@plt+0x2a28>
  404cb4:	b	404cd4 <parse_ifindex@plt+0x2a44>
  404cb8:	mov	x8, xzr
  404cbc:	mov	x0, x8
  404cc0:	bl	402130 <time@plt>
  404cc4:	str	x0, [x19, #408]
  404cc8:	mov	w9, #0x1                   	// #1
  404ccc:	sturb	w9, [x29, #-33]
  404cd0:	b	404d48 <parse_ifindex@plt+0x2ab8>
  404cd4:	mov	w8, #0x4                   	// #4
  404cd8:	str	w8, [x19, #264]
  404cdc:	str	wzr, [x19, #260]
  404ce0:	str	wzr, [x19, #256]
  404ce4:	ldr	w0, [x19, #256]
  404ce8:	bl	401e80 <log_get_max_level_realm@plt>
  404cec:	ldr	w8, [x19, #264]
  404cf0:	and	w8, w8, #0x7
  404cf4:	cmp	w0, w8
  404cf8:	b.lt	404d2c <parse_ifindex@plt+0x2a9c>  // b.tstop
  404cfc:	ldr	w8, [x19, #256]
  404d00:	ldr	w9, [x19, #264]
  404d04:	orr	w0, w9, w8, lsl #10
  404d08:	ldr	w1, [x19, #260]
  404d0c:	ldr	x2, [x19, #208]
  404d10:	mov	w3, #0x4e                  	// #78
  404d14:	ldr	x4, [x19, #200]
  404d18:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  404d1c:	add	x5, x5, #0xa78
  404d20:	bl	401e90 <log_internal_realm@plt>
  404d24:	str	w0, [x19, #140]
  404d28:	b	404d40 <parse_ifindex@plt+0x2ab0>
  404d2c:	ldr	w0, [x19, #260]
  404d30:	bl	401ea0 <abs@plt>
  404d34:	mov	w8, wzr
  404d38:	subs	w8, w8, w0, uxtb
  404d3c:	str	w8, [x19, #140]
  404d40:	ldr	w8, [x19, #140]
  404d44:	str	w8, [x19, #252]
  404d48:	ldurb	w8, [x29, #-33]
  404d4c:	tbnz	w8, #0, 404d54 <parse_ifindex@plt+0x2ac4>
  404d50:	b	404e2c <parse_ifindex@plt+0x2b9c>
  404d54:	add	x0, x19, #0x198
  404d58:	add	x1, x19, #0x1a0
  404d5c:	bl	402140 <localtime_r@plt>
  404d60:	add	x8, x19, #0x1df
  404d64:	str	x0, [x19, #128]
  404d68:	mov	x0, x8
  404d6c:	mov	x1, #0x800                 	// #2048
  404d70:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  404d74:	add	x2, x2, #0xabf
  404d78:	ldr	x3, [x19, #128]
  404d7c:	bl	402150 <strftime@plt>
  404d80:	str	x0, [x19, #400]
  404d84:	ldr	x8, [x19, #400]
  404d88:	cmp	x8, #0x0
  404d8c:	cset	w9, ls  // ls = plast
  404d90:	tbnz	w9, #0, 404da0 <parse_ifindex@plt+0x2b10>
  404d94:	add	x8, x19, #0x1df
  404d98:	str	x8, [x19, #120]
  404d9c:	b	404da8 <parse_ifindex@plt+0x2b18>
  404da0:	ldr	x8, [x19, #192]
  404da4:	str	x8, [x19, #120]
  404da8:	ldr	x8, [x19, #120]
  404dac:	adrp	x0, 407000 <parse_ifindex@plt+0x4d70>
  404db0:	add	x0, x0, #0xad7
  404db4:	mov	x1, x8
  404db8:	bl	401f40 <printf@plt>
  404dbc:	add	x8, x19, #0x198
  404dc0:	mov	x0, x8
  404dc4:	add	x1, x19, #0x1a0
  404dc8:	bl	402160 <gmtime_r@plt>
  404dcc:	add	x8, x19, #0x1df
  404dd0:	str	x0, [x19, #112]
  404dd4:	mov	x0, x8
  404dd8:	mov	x1, #0x800                 	// #2048
  404ddc:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  404de0:	add	x2, x2, #0xafa
  404de4:	ldr	x3, [x19, #112]
  404de8:	bl	402150 <strftime@plt>
  404dec:	str	x0, [x19, #400]
  404df0:	ldr	x8, [x19, #400]
  404df4:	cmp	x8, #0x0
  404df8:	cset	w9, ls  // ls = plast
  404dfc:	tbnz	w9, #0, 404e0c <parse_ifindex@plt+0x2b7c>
  404e00:	add	x8, x19, #0x1df
  404e04:	str	x8, [x19, #104]
  404e08:	b	404e14 <parse_ifindex@plt+0x2b84>
  404e0c:	ldr	x8, [x19, #192]
  404e10:	str	x8, [x19, #104]
  404e14:	ldr	x8, [x19, #104]
  404e18:	adrp	x0, 407000 <parse_ifindex@plt+0x4d70>
  404e1c:	add	x0, x0, #0xb13
  404e20:	mov	x1, x8
  404e24:	bl	401f40 <printf@plt>
  404e28:	b	404e50 <parse_ifindex@plt+0x2bc0>
  404e2c:	adrp	x0, 407000 <parse_ifindex@plt+0x4d70>
  404e30:	add	x0, x0, #0xad7
  404e34:	ldr	x1, [x19, #192]
  404e38:	bl	401f40 <printf@plt>
  404e3c:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  404e40:	add	x8, x8, #0xb13
  404e44:	mov	x0, x8
  404e48:	ldr	x1, [x19, #192]
  404e4c:	bl	401f40 <printf@plt>
  404e50:	ldur	x8, [x29, #-8]
  404e54:	ldr	x8, [x8, #16]
  404e58:	cmp	x8, #0x0
  404e5c:	cset	w9, ls  // ls = plast
  404e60:	tbnz	w9, #0, 404ee8 <parse_ifindex@plt+0x2c58>
  404e64:	ldur	x8, [x29, #-8]
  404e68:	ldr	x8, [x8, #16]
  404e6c:	mov	x9, #0x4240                	// #16960
  404e70:	movk	x9, #0xf, lsl #16
  404e74:	udiv	x8, x8, x9
  404e78:	add	x0, x19, #0xf0
  404e7c:	str	x8, [x19, #240]
  404e80:	add	x1, x19, #0x1a0
  404e84:	bl	402160 <gmtime_r@plt>
  404e88:	add	x8, x19, #0x1df
  404e8c:	str	x0, [x19, #96]
  404e90:	mov	x0, x8
  404e94:	mov	x1, #0x800                 	// #2048
  404e98:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  404e9c:	add	x2, x2, #0xb32
  404ea0:	ldr	x3, [x19, #96]
  404ea4:	bl	402150 <strftime@plt>
  404ea8:	str	x0, [x19, #400]
  404eac:	ldr	x8, [x19, #400]
  404eb0:	cmp	x8, #0x0
  404eb4:	cset	w10, ls  // ls = plast
  404eb8:	tbnz	w10, #0, 404ec8 <parse_ifindex@plt+0x2c38>
  404ebc:	add	x8, x19, #0x1df
  404ec0:	str	x8, [x19, #88]
  404ec4:	b	404ed0 <parse_ifindex@plt+0x2c40>
  404ec8:	ldr	x8, [x19, #192]
  404ecc:	str	x8, [x19, #88]
  404ed0:	ldr	x8, [x19, #88]
  404ed4:	adrp	x0, 407000 <parse_ifindex@plt+0x4d70>
  404ed8:	add	x0, x0, #0xb47
  404edc:	mov	x1, x8
  404ee0:	bl	401f40 <printf@plt>
  404ee4:	b	404ef8 <parse_ifindex@plt+0x2c68>
  404ee8:	adrp	x0, 407000 <parse_ifindex@plt+0x4d70>
  404eec:	add	x0, x0, #0xb47
  404ef0:	ldr	x1, [x19, #192]
  404ef4:	bl	401f40 <printf@plt>
  404ef8:	ldurb	w8, [x29, #-33]
  404efc:	tbnz	w8, #0, 404f04 <parse_ifindex@plt+0x2c74>
  404f00:	b	404f34 <parse_ifindex@plt+0x2ca4>
  404f04:	add	x0, x19, #0x198
  404f08:	add	x1, x19, #0x1a0
  404f0c:	bl	402140 <localtime_r@plt>
  404f10:	add	x8, x19, #0x1df
  404f14:	str	x0, [x19, #80]
  404f18:	mov	x0, x8
  404f1c:	mov	x1, #0x800                 	// #2048
  404f20:	adrp	x2, 407000 <parse_ifindex@plt+0x4d70>
  404f24:	add	x2, x2, #0xb66
  404f28:	ldr	x3, [x19, #80]
  404f2c:	bl	402150 <strftime@plt>
  404f30:	str	x0, [x19, #400]
  404f34:	ldur	x8, [x29, #-16]
  404f38:	cbz	x8, 404f54 <parse_ifindex@plt+0x2cc4>
  404f3c:	ldur	x1, [x29, #-16]
  404f40:	ldr	x0, [x19, #216]
  404f44:	mov	w2, #0x1                   	// #1
  404f48:	bl	402100 <setenv@plt>
  404f4c:	str	w0, [x19, #396]
  404f50:	b	404f60 <parse_ifindex@plt+0x2cd0>
  404f54:	ldr	x0, [x19, #216]
  404f58:	bl	402170 <unsetenv@plt>
  404f5c:	str	w0, [x19, #396]
  404f60:	ldr	w8, [x19, #396]
  404f64:	cmp	w8, #0x0
  404f68:	cset	w8, ge  // ge = tcont
  404f6c:	tbnz	w8, #0, 404ff0 <parse_ifindex@plt+0x2d60>
  404f70:	mov	w8, #0x4                   	// #4
  404f74:	str	w8, [x19, #236]
  404f78:	bl	402110 <__errno_location@plt>
  404f7c:	ldr	w8, [x0]
  404f80:	str	w8, [x19, #232]
  404f84:	str	wzr, [x19, #228]
  404f88:	ldr	w0, [x19, #228]
  404f8c:	bl	401e80 <log_get_max_level_realm@plt>
  404f90:	ldr	w8, [x19, #236]
  404f94:	and	w8, w8, #0x7
  404f98:	cmp	w0, w8
  404f9c:	b.lt	404fd0 <parse_ifindex@plt+0x2d40>  // b.tstop
  404fa0:	ldr	w8, [x19, #228]
  404fa4:	ldr	w9, [x19, #236]
  404fa8:	orr	w0, w9, w8, lsl #10
  404fac:	ldr	w1, [x19, #232]
  404fb0:	ldr	x2, [x19, #208]
  404fb4:	mov	w3, #0x6d                  	// #109
  404fb8:	ldr	x4, [x19, #200]
  404fbc:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  404fc0:	add	x5, x5, #0xa44
  404fc4:	bl	401e90 <log_internal_realm@plt>
  404fc8:	str	w0, [x19, #76]
  404fcc:	b	404fe4 <parse_ifindex@plt+0x2d54>
  404fd0:	ldr	w0, [x19, #232]
  404fd4:	bl	401ea0 <abs@plt>
  404fd8:	mov	w8, wzr
  404fdc:	subs	w8, w8, w0, uxtb
  404fe0:	str	w8, [x19, #76]
  404fe4:	ldr	w8, [x19, #76]
  404fe8:	str	w8, [x19, #224]
  404fec:	b	404ff4 <parse_ifindex@plt+0x2d64>
  404ff0:	bl	402120 <tzset@plt>
  404ff4:	ldur	x8, [x29, #-8]
  404ff8:	ldr	x0, [x8, #8]
  404ffc:	bl	4051c0 <parse_ifindex@plt+0x2f30>
  405000:	ldurb	w9, [x29, #-33]
  405004:	str	x0, [x19, #64]
  405008:	tbnz	w9, #0, 405010 <parse_ifindex@plt+0x2d80>
  40500c:	b	40502c <parse_ifindex@plt+0x2d9c>
  405010:	ldr	x8, [x19, #400]
  405014:	cmp	x8, #0x0
  405018:	cset	w9, ls  // ls = plast
  40501c:	tbnz	w9, #0, 40502c <parse_ifindex@plt+0x2d9c>
  405020:	add	x8, x19, #0x1df
  405024:	str	x8, [x19, #56]
  405028:	b	405034 <parse_ifindex@plt+0x2da4>
  40502c:	ldr	x8, [x19, #192]
  405030:	str	x8, [x19, #56]
  405034:	ldr	x8, [x19, #56]
  405038:	ldur	x9, [x29, #-8]
  40503c:	ldrb	w10, [x9, #27]
  405040:	and	w0, w10, #0x1
  405044:	str	x8, [x19, #48]
  405048:	bl	4051fc <parse_ifindex@plt+0x2f6c>
  40504c:	ldur	x8, [x29, #-8]
  405050:	ldrb	w10, [x8, #25]
  405054:	str	x0, [x19, #40]
  405058:	tbnz	w10, #0, 405060 <parse_ifindex@plt+0x2dd0>
  40505c:	b	405088 <parse_ifindex@plt+0x2df8>
  405060:	ldur	x8, [x29, #-8]
  405064:	ldrb	w9, [x8, #26]
  405068:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  40506c:	add	x8, x8, #0xbf2
  405070:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  405074:	add	x10, x10, #0xbeb
  405078:	tst	w9, #0x1
  40507c:	csel	x8, x10, x8, ne  // ne = any
  405080:	str	x8, [x19, #32]
  405084:	b	405090 <parse_ifindex@plt+0x2e00>
  405088:	ldr	x8, [x19, #192]
  40508c:	str	x8, [x19, #32]
  405090:	ldr	x8, [x19, #32]
  405094:	ldur	x9, [x29, #-8]
  405098:	ldrb	w10, [x9, #24]
  40509c:	and	w0, w10, #0x1
  4050a0:	str	x8, [x19, #24]
  4050a4:	bl	4051fc <parse_ifindex@plt+0x2f6c>
  4050a8:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  4050ac:	add	x8, x8, #0xb6d
  4050b0:	str	x0, [x19, #16]
  4050b4:	mov	x0, x8
  4050b8:	ldr	x1, [x19, #64]
  4050bc:	ldr	x2, [x19, #48]
  4050c0:	ldr	x3, [x19, #40]
  4050c4:	ldr	x4, [x19, #24]
  4050c8:	ldr	x5, [x19, #16]
  4050cc:	bl	401f40 <printf@plt>
  4050d0:	ldur	x8, [x29, #-8]
  4050d4:	ldrb	w10, [x8, #24]
  4050d8:	tbnz	w10, #0, 4050e0 <parse_ifindex@plt+0x2e50>
  4050dc:	b	405108 <parse_ifindex@plt+0x2e78>
  4050e0:	bl	402c10 <parse_ifindex@plt+0x980>
  4050e4:	str	x0, [x19, #8]
  4050e8:	bl	402c54 <parse_ifindex@plt+0x9c4>
  4050ec:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  4050f0:	add	x8, x8, #0xbfb
  4050f4:	str	x0, [x19]
  4050f8:	mov	x0, x8
  4050fc:	ldr	x1, [x19, #8]
  405100:	ldr	x2, [x19]
  405104:	bl	401f40 <printf@plt>
  405108:	mov	sp, x29
  40510c:	ldp	x28, x19, [sp, #16]
  405110:	ldp	x29, x30, [sp], #32
  405114:	ret
  405118:	sub	sp, sp, #0x10
  40511c:	str	x0, [sp, #8]
  405120:	ldr	x8, [sp, #8]
  405124:	mov	w9, #0x1                   	// #1
  405128:	str	w9, [sp, #4]
  40512c:	cbz	x8, 405148 <parse_ifindex@plt+0x2eb8>
  405130:	ldr	x8, [sp, #8]
  405134:	ldrb	w9, [x8]
  405138:	cmp	w9, #0x0
  40513c:	cset	w9, ne  // ne = any
  405140:	eor	w9, w9, #0x1
  405144:	str	w9, [sp, #4]
  405148:	ldr	w8, [sp, #4]
  40514c:	and	w0, w8, #0x1
  405150:	add	sp, sp, #0x10
  405154:	ret
  405158:	sub	sp, sp, #0x20
  40515c:	str	x0, [sp, #24]
  405160:	str	x1, [sp, #16]
  405164:	ldr	x8, [sp, #16]
  405168:	mov	w9, #0x0                   	// #0
  40516c:	str	w9, [sp, #12]
  405170:	cbz	x8, 405190 <parse_ifindex@plt+0x2f00>
  405174:	ldr	x8, [sp, #24]
  405178:	ldr	x9, [sp, #16]
  40517c:	mov	x10, #0xffffffffffffffff    	// #-1
  405180:	udiv	x9, x10, x9
  405184:	cmp	x8, x9
  405188:	cset	w11, hi  // hi = pmore
  40518c:	str	w11, [sp, #12]
  405190:	ldr	w8, [sp, #12]
  405194:	mov	w9, #0x1                   	// #1
  405198:	eor	w8, w8, #0x1
  40519c:	eor	w8, w8, w9
  4051a0:	and	w8, w8, #0x1
  4051a4:	mov	w0, w8
  4051a8:	sxtw	x10, w0
  4051ac:	cmp	x10, #0x0
  4051b0:	cset	w8, ne  // ne = any
  4051b4:	and	w0, w8, #0x1
  4051b8:	add	sp, sp, #0x20
  4051bc:	ret
  4051c0:	sub	sp, sp, #0x20
  4051c4:	str	x0, [sp, #24]
  4051c8:	ldr	x8, [sp, #24]
  4051cc:	str	x8, [sp, #16]
  4051d0:	cbz	x8, 4051e0 <parse_ifindex@plt+0x2f50>
  4051d4:	ldr	x8, [sp, #16]
  4051d8:	str	x8, [sp, #8]
  4051dc:	b	4051ec <parse_ifindex@plt+0x2f5c>
  4051e0:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  4051e4:	add	x8, x8, #0xaf6
  4051e8:	str	x8, [sp, #8]
  4051ec:	ldr	x8, [sp, #8]
  4051f0:	mov	x0, x8
  4051f4:	add	sp, sp, #0x20
  4051f8:	ret
  4051fc:	sub	sp, sp, #0x10
  405200:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  405204:	add	x8, x8, #0xd9c
  405208:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  40520c:	add	x9, x9, #0xda0
  405210:	and	w10, w0, #0x1
  405214:	strb	w10, [sp, #15]
  405218:	ldrb	w10, [sp, #15]
  40521c:	tst	w10, #0x1
  405220:	csel	x0, x8, x9, ne  // ne = any
  405224:	add	sp, sp, #0x10
  405228:	ret
  40522c:	sub	sp, sp, #0x20
  405230:	stp	x29, x30, [sp, #16]
  405234:	add	x29, sp, #0x10
  405238:	str	x0, [sp, #8]
  40523c:	ldr	x8, [sp, #8]
  405240:	ldr	x8, [x8]
  405244:	cbz	x8, 405254 <parse_ifindex@plt+0x2fc4>
  405248:	ldr	x8, [sp, #8]
  40524c:	ldr	x0, [x8]
  405250:	bl	402180 <sd_event_unref@plt>
  405254:	ldp	x29, x30, [sp, #16]
  405258:	add	sp, sp, #0x20
  40525c:	ret
  405260:	sub	sp, sp, #0x130
  405264:	stp	x29, x30, [sp, #272]
  405268:	str	x28, [sp, #288]
  40526c:	add	x29, sp, #0x110
  405270:	mov	x2, #0xa0                  	// #160
  405274:	mov	x8, xzr
  405278:	mov	w9, wzr
  40527c:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  405280:	add	x10, x10, #0x221
  405284:	add	x10, x10, #0x3
  405288:	add	x11, sp, #0x60
  40528c:	stur	x0, [x29, #-16]
  405290:	mov	x0, x11
  405294:	mov	w1, w9
  405298:	str	x8, [sp, #32]
  40529c:	str	x10, [sp, #24]
  4052a0:	bl	401f70 <memset@plt>
  4052a4:	str	xzr, [sp, #72]
  4052a8:	str	xzr, [sp, #80]
  4052ac:	str	xzr, [sp, #88]
  4052b0:	ldr	x8, [sp, #32]
  4052b4:	str	x8, [sp, #64]
  4052b8:	ldur	x8, [x29, #-16]
  4052bc:	cmp	x8, #0x0
  4052c0:	cset	w9, ne  // ne = any
  4052c4:	mov	w10, #0x1                   	// #1
  4052c8:	eor	w9, w9, #0x1
  4052cc:	eor	w9, w9, w10
  4052d0:	eor	w9, w9, w10
  4052d4:	and	w9, w9, #0x1
  4052d8:	mov	w0, w9
  4052dc:	sxtw	x8, w0
  4052e0:	cbz	x8, 405308 <parse_ifindex@plt+0x3078>
  4052e4:	mov	w8, wzr
  4052e8:	mov	w0, w8
  4052ec:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  4052f0:	add	x1, x1, #0x92c
  4052f4:	ldr	x2, [sp, #24]
  4052f8:	mov	w3, #0x214                 	// #532
  4052fc:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  405300:	add	x4, x4, #0x160
  405304:	bl	401ec0 <log_assert_failed_realm@plt>
  405308:	ldur	x0, [x29, #-16]
  40530c:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  405310:	add	x1, x1, #0xfe6
  405314:	adrp	x2, 408000 <parse_ifindex@plt+0x5d70>
  405318:	add	x2, x2, #0x0
  40531c:	adrp	x3, 407000 <parse_ifindex@plt+0x4d70>
  405320:	add	x3, x3, #0xa0
  405324:	mov	w4, #0x2                   	// #2
  405328:	add	x5, sp, #0x48
  40532c:	add	x6, sp, #0x40
  405330:	add	x7, sp, #0x60
  405334:	bl	401f80 <bus_map_all_properties@plt>
  405338:	str	w0, [sp, #60]
  40533c:	ldr	w8, [sp, #60]
  405340:	cmp	w8, #0x0
  405344:	cset	w8, ge  // ge = tcont
  405348:	tbnz	w8, #0, 40540c <parse_ifindex@plt+0x317c>
  40534c:	mov	w8, #0x3                   	// #3
  405350:	str	w8, [sp, #56]
  405354:	ldr	w8, [sp, #60]
  405358:	str	w8, [sp, #52]
  40535c:	str	wzr, [sp, #48]
  405360:	ldr	w0, [sp, #48]
  405364:	bl	401e80 <log_get_max_level_realm@plt>
  405368:	ldr	w8, [sp, #56]
  40536c:	and	w8, w8, #0x7
  405370:	cmp	w0, w8
  405374:	b.lt	4053dc <parse_ifindex@plt+0x314c>  // b.tstop
  405378:	ldr	w8, [sp, #48]
  40537c:	ldr	w9, [sp, #56]
  405380:	orr	w0, w9, w8, lsl #10
  405384:	ldr	w1, [sp, #52]
  405388:	ldr	w8, [sp, #60]
  40538c:	add	x10, sp, #0x48
  405390:	str	w0, [sp, #20]
  405394:	mov	x0, x10
  405398:	str	w1, [sp, #16]
  40539c:	mov	w1, w8
  4053a0:	bl	401f90 <bus_error_message@plt>
  4053a4:	ldr	w8, [sp, #20]
  4053a8:	str	x0, [sp, #8]
  4053ac:	mov	w0, w8
  4053b0:	ldr	w1, [sp, #16]
  4053b4:	ldr	x2, [sp, #24]
  4053b8:	mov	w3, #0x21f                 	// #543
  4053bc:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  4053c0:	add	x4, x4, #0x188
  4053c4:	adrp	x5, 407000 <parse_ifindex@plt+0x4d70>
  4053c8:	add	x5, x5, #0x997
  4053cc:	ldr	x6, [sp, #8]
  4053d0:	bl	401e90 <log_internal_realm@plt>
  4053d4:	str	w0, [sp, #4]
  4053d8:	b	4053f0 <parse_ifindex@plt+0x3160>
  4053dc:	ldr	w0, [sp, #52]
  4053e0:	bl	401ea0 <abs@plt>
  4053e4:	mov	w8, wzr
  4053e8:	subs	w8, w8, w0, uxtb
  4053ec:	str	w8, [sp, #4]
  4053f0:	ldr	w8, [sp, #4]
  4053f4:	str	w8, [sp, #44]
  4053f8:	ldr	w8, [sp, #44]
  4053fc:	stur	w8, [x29, #-4]
  405400:	mov	w8, #0x1                   	// #1
  405404:	str	w8, [sp, #40]
  405408:	b	405454 <parse_ifindex@plt+0x31c4>
  40540c:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  405410:	add	x8, x8, #0x28
  405414:	ldrb	w9, [x8]
  405418:	tbnz	w9, #0, 405420 <parse_ifindex@plt+0x3190>
  40541c:	b	405440 <parse_ifindex@plt+0x31b0>
  405420:	bl	402190 <terminal_is_dumb@plt>
  405424:	tbnz	w0, #0, 405440 <parse_ifindex@plt+0x31b0>
  405428:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  40542c:	add	x8, x8, #0x60
  405430:	ldr	x1, [x8]
  405434:	adrp	x0, 408000 <parse_ifindex@plt+0x5d70>
  405438:	add	x0, x0, #0x1a2
  40543c:	bl	4021a0 <fputs@plt>
  405440:	add	x0, sp, #0x60
  405444:	bl	405ba8 <parse_ifindex@plt+0x3918>
  405448:	stur	wzr, [x29, #-4]
  40544c:	mov	w8, #0x1                   	// #1
  405450:	str	w8, [sp, #40]
  405454:	add	x0, sp, #0x40
  405458:	bl	4047dc <parse_ifindex@plt+0x254c>
  40545c:	add	x0, sp, #0x48
  405460:	bl	401fa0 <sd_bus_error_free@plt>
  405464:	add	x0, sp, #0x60
  405468:	bl	405b78 <parse_ifindex@plt+0x38e8>
  40546c:	ldur	w0, [x29, #-4]
  405470:	ldr	x28, [sp, #288]
  405474:	ldp	x29, x30, [sp, #272]
  405478:	add	sp, sp, #0x130
  40547c:	ret
  405480:	sub	sp, sp, #0x60
  405484:	stp	x29, x30, [sp, #80]
  405488:	add	x29, sp, #0x50
  40548c:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  405490:	add	x8, x8, #0x221
  405494:	add	x8, x8, #0x3
  405498:	stur	x0, [x29, #-16]
  40549c:	stur	x1, [x29, #-24]
  4054a0:	stur	x2, [x29, #-32]
  4054a4:	str	x8, [sp, #8]
  4054a8:	ldur	x8, [x29, #-16]
  4054ac:	cmp	x8, #0x0
  4054b0:	cset	w9, ne  // ne = any
  4054b4:	mov	w10, #0x1                   	// #1
  4054b8:	eor	w9, w9, #0x1
  4054bc:	eor	w9, w9, w10
  4054c0:	eor	w9, w9, w10
  4054c4:	and	w9, w9, #0x1
  4054c8:	mov	w0, w9
  4054cc:	sxtw	x8, w0
  4054d0:	cbz	x8, 4054f8 <parse_ifindex@plt+0x3268>
  4054d4:	mov	w8, wzr
  4054d8:	mov	w0, w8
  4054dc:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  4054e0:	add	x1, x1, #0x528
  4054e4:	ldr	x2, [sp, #8]
  4054e8:	mov	w3, #0x22d                 	// #557
  4054ec:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  4054f0:	add	x4, x4, #0x52a
  4054f4:	bl	401ec0 <log_assert_failed_realm@plt>
  4054f8:	ldur	x0, [x29, #-16]
  4054fc:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  405500:	add	x1, x1, #0x8ed
  405504:	add	x2, sp, #0x28
  405508:	bl	4021b0 <sd_bus_message_read@plt>
  40550c:	str	w0, [sp, #36]
  405510:	ldr	w8, [sp, #36]
  405514:	cmp	w8, #0x0
  405518:	cset	w8, ge  // ge = tcont
  40551c:	tbnz	w8, #0, 4055a8 <parse_ifindex@plt+0x3318>
  405520:	mov	w8, #0x3                   	// #3
  405524:	str	w8, [sp, #32]
  405528:	ldr	w8, [sp, #36]
  40552c:	str	w8, [sp, #28]
  405530:	str	wzr, [sp, #24]
  405534:	ldr	w0, [sp, #24]
  405538:	bl	401e80 <log_get_max_level_realm@plt>
  40553c:	ldr	w8, [sp, #32]
  405540:	and	w8, w8, #0x7
  405544:	cmp	w0, w8
  405548:	b.lt	405580 <parse_ifindex@plt+0x32f0>  // b.tstop
  40554c:	ldr	w8, [sp, #24]
  405550:	ldr	w9, [sp, #32]
  405554:	orr	w0, w9, w8, lsl #10
  405558:	ldr	w1, [sp, #28]
  40555c:	ldr	x2, [sp, #8]
  405560:	mov	w3, #0x231                 	// #561
  405564:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  405568:	add	x4, x4, #0x56e
  40556c:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  405570:	add	x5, x5, #0x584
  405574:	bl	401e90 <log_internal_realm@plt>
  405578:	str	w0, [sp, #4]
  40557c:	b	405594 <parse_ifindex@plt+0x3304>
  405580:	ldr	w0, [sp, #28]
  405584:	bl	401ea0 <abs@plt>
  405588:	mov	w8, wzr
  40558c:	subs	w8, w8, w0, uxtb
  405590:	str	w8, [sp, #4]
  405594:	ldr	w8, [sp, #4]
  405598:	str	w8, [sp, #20]
  40559c:	ldr	w8, [sp, #20]
  4055a0:	stur	w8, [x29, #-4]
  4055a4:	b	4055d4 <parse_ifindex@plt+0x3344>
  4055a8:	ldr	x0, [sp, #40]
  4055ac:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  4055b0:	add	x1, x1, #0x5a6
  4055b4:	bl	4062fc <parse_ifindex@plt+0x406c>
  4055b8:	tbnz	w0, #0, 4055c4 <parse_ifindex@plt+0x3334>
  4055bc:	stur	wzr, [x29, #-4]
  4055c0:	b	4055d4 <parse_ifindex@plt+0x3344>
  4055c4:	ldur	x0, [x29, #-16]
  4055c8:	bl	4021c0 <sd_bus_message_get_bus@plt>
  4055cc:	bl	405260 <parse_ifindex@plt+0x2fd0>
  4055d0:	stur	w0, [x29, #-4]
  4055d4:	ldur	w0, [x29, #-4]
  4055d8:	ldp	x29, x30, [sp, #80]
  4055dc:	add	sp, sp, #0x60
  4055e0:	ret
  4055e4:	sub	sp, sp, #0xb0
  4055e8:	stp	x29, x30, [sp, #160]
  4055ec:	add	x29, sp, #0xa0
  4055f0:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  4055f4:	add	x8, x8, #0x221
  4055f8:	add	x8, x8, #0x3
  4055fc:	stur	x0, [x29, #-16]
  405600:	stur	x1, [x29, #-24]
  405604:	stur	x2, [x29, #-32]
  405608:	stur	x3, [x29, #-40]
  40560c:	stur	x4, [x29, #-48]
  405610:	ldur	x9, [x29, #-48]
  405614:	stur	x9, [x29, #-56]
  405618:	str	x8, [sp, #32]
  40561c:	ldur	x8, [x29, #-56]
  405620:	cmp	x8, #0x0
  405624:	cset	w9, ne  // ne = any
  405628:	mov	w10, #0x1                   	// #1
  40562c:	eor	w9, w9, #0x1
  405630:	eor	w9, w9, w10
  405634:	eor	w9, w9, w10
  405638:	and	w9, w9, #0x1
  40563c:	mov	w0, w9
  405640:	sxtw	x8, w0
  405644:	cbz	x8, 40566c <parse_ifindex@plt+0x33dc>
  405648:	mov	w8, wzr
  40564c:	mov	w0, w8
  405650:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  405654:	add	x1, x1, #0x1aa
  405658:	ldr	x2, [sp, #32]
  40565c:	mov	w3, #0x1b2                 	// #434
  405660:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  405664:	add	x4, x4, #0x1ac
  405668:	bl	401ec0 <log_assert_failed_realm@plt>
  40566c:	ldur	x0, [x29, #-32]
  405670:	mov	w1, #0x72                  	// #114
  405674:	adrp	x2, 408000 <parse_ifindex@plt+0x5d70>
  405678:	add	x2, x2, #0x205
  40567c:	bl	4021d0 <sd_bus_message_enter_container@plt>
  405680:	stur	w0, [x29, #-72]
  405684:	ldur	w8, [x29, #-72]
  405688:	cmp	w8, #0x0
  40568c:	cset	w8, ge  // ge = tcont
  405690:	tbnz	w8, #0, 4056a0 <parse_ifindex@plt+0x3410>
  405694:	ldur	w8, [x29, #-72]
  405698:	stur	w8, [x29, #-4]
  40569c:	b	40591c <parse_ifindex@plt+0x368c>
  4056a0:	ldur	x0, [x29, #-32]
  4056a4:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  4056a8:	add	x1, x1, #0x9b2
  4056ac:	sub	x2, x29, #0x44
  4056b0:	bl	4021b0 <sd_bus_message_read@plt>
  4056b4:	stur	w0, [x29, #-72]
  4056b8:	ldur	w8, [x29, #-72]
  4056bc:	cmp	w8, #0x0
  4056c0:	cset	w8, ge  // ge = tcont
  4056c4:	tbnz	w8, #0, 4056d4 <parse_ifindex@plt+0x3444>
  4056c8:	ldur	w8, [x29, #-72]
  4056cc:	stur	w8, [x29, #-4]
  4056d0:	b	40591c <parse_ifindex@plt+0x368c>
  4056d4:	ldur	x0, [x29, #-32]
  4056d8:	mov	w1, #0x79                  	// #121
  4056dc:	sub	x2, x29, #0x40
  4056e0:	add	x3, sp, #0x50
  4056e4:	bl	4021e0 <sd_bus_message_read_array@plt>
  4056e8:	stur	w0, [x29, #-72]
  4056ec:	ldur	w8, [x29, #-72]
  4056f0:	cmp	w8, #0x0
  4056f4:	cset	w8, ge  // ge = tcont
  4056f8:	tbnz	w8, #0, 405708 <parse_ifindex@plt+0x3478>
  4056fc:	ldur	w8, [x29, #-72]
  405700:	stur	w8, [x29, #-4]
  405704:	b	40591c <parse_ifindex@plt+0x368c>
  405708:	ldur	x0, [x29, #-32]
  40570c:	bl	4021f0 <sd_bus_message_exit_container@plt>
  405710:	stur	w0, [x29, #-72]
  405714:	ldur	w8, [x29, #-72]
  405718:	cmp	w8, #0x0
  40571c:	cset	w8, ge  // ge = tcont
  405720:	tbnz	w8, #0, 405730 <parse_ifindex@plt+0x34a0>
  405724:	ldur	w8, [x29, #-72]
  405728:	stur	w8, [x29, #-4]
  40572c:	b	40591c <parse_ifindex@plt+0x368c>
  405730:	ldr	x8, [sp, #80]
  405734:	cbnz	x8, 40575c <parse_ifindex@plt+0x34cc>
  405738:	ldur	w8, [x29, #-68]
  40573c:	cbnz	w8, 40575c <parse_ifindex@plt+0x34cc>
  405740:	ldur	x8, [x29, #-56]
  405744:	ldr	x0, [x8]
  405748:	bl	40612c <parse_ifindex@plt+0x3e9c>
  40574c:	ldur	x8, [x29, #-56]
  405750:	str	x0, [x8]
  405754:	stur	wzr, [x29, #-4]
  405758:	b	40591c <parse_ifindex@plt+0x368c>
  40575c:	mov	w8, #0x0                   	// #0
  405760:	strb	w8, [sp, #79]
  405764:	ldur	w8, [x29, #-68]
  405768:	cmp	w8, #0x2
  40576c:	str	w8, [sp, #28]
  405770:	b.eq	405790 <parse_ifindex@plt+0x3500>  // b.none
  405774:	b	405778 <parse_ifindex@plt+0x34e8>
  405778:	ldr	w8, [sp, #28]
  40577c:	cmp	w8, #0xa
  405780:	cset	w9, eq  // eq = none
  405784:	eor	w9, w9, #0x1
  405788:	tbnz	w9, #0, 40579c <parse_ifindex@plt+0x350c>
  40578c:	b	405790 <parse_ifindex@plt+0x3500>
  405790:	mov	w8, #0x1                   	// #1
  405794:	strb	w8, [sp, #79]
  405798:	b	40579c <parse_ifindex@plt+0x350c>
  40579c:	ldrb	w8, [sp, #79]
  4057a0:	and	w8, w8, #0x1
  4057a4:	strb	w8, [sp, #78]
  4057a8:	ldrb	w8, [sp, #78]
  4057ac:	tbnz	w8, #0, 405840 <parse_ifindex@plt+0x35b0>
  4057b0:	mov	w8, #0x3                   	// #3
  4057b4:	str	w8, [sp, #72]
  4057b8:	mov	w8, #0x16                  	// #22
  4057bc:	movk	w8, #0x4000, lsl #16
  4057c0:	str	w8, [sp, #68]
  4057c4:	str	wzr, [sp, #64]
  4057c8:	ldr	w0, [sp, #64]
  4057cc:	bl	401e80 <log_get_max_level_realm@plt>
  4057d0:	ldr	w8, [sp, #72]
  4057d4:	and	w8, w8, #0x7
  4057d8:	cmp	w0, w8
  4057dc:	b.lt	405818 <parse_ifindex@plt+0x3588>  // b.tstop
  4057e0:	ldr	w8, [sp, #64]
  4057e4:	ldr	w9, [sp, #72]
  4057e8:	orr	w0, w9, w8, lsl #10
  4057ec:	ldr	w1, [sp, #68]
  4057f0:	ldur	w6, [x29, #-68]
  4057f4:	ldr	x2, [sp, #32]
  4057f8:	mov	w3, #0x1cb                 	// #459
  4057fc:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  405800:	add	x4, x4, #0x209
  405804:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  405808:	add	x5, x5, #0x21c
  40580c:	bl	401e90 <log_internal_realm@plt>
  405810:	str	w0, [sp, #24]
  405814:	b	40582c <parse_ifindex@plt+0x359c>
  405818:	ldr	w0, [sp, #68]
  40581c:	bl	401ea0 <abs@plt>
  405820:	mov	w8, wzr
  405824:	subs	w8, w8, w0, uxtb
  405828:	str	w8, [sp, #24]
  40582c:	ldr	w8, [sp, #24]
  405830:	str	w8, [sp, #60]
  405834:	ldr	w8, [sp, #60]
  405838:	stur	w8, [x29, #-4]
  40583c:	b	40591c <parse_ifindex@plt+0x368c>
  405840:	ldr	x8, [sp, #80]
  405844:	ldur	w0, [x29, #-68]
  405848:	str	x8, [sp, #16]
  40584c:	bl	40615c <parse_ifindex@plt+0x3ecc>
  405850:	ldr	x8, [sp, #16]
  405854:	cmp	x8, x0
  405858:	b.eq	4058e8 <parse_ifindex@plt+0x3658>  // b.none
  40585c:	mov	w8, #0x3                   	// #3
  405860:	str	w8, [sp, #56]
  405864:	mov	w8, #0x16                  	// #22
  405868:	movk	w8, #0x4000, lsl #16
  40586c:	str	w8, [sp, #52]
  405870:	str	wzr, [sp, #48]
  405874:	ldr	w0, [sp, #48]
  405878:	bl	401e80 <log_get_max_level_realm@plt>
  40587c:	ldr	w8, [sp, #56]
  405880:	and	w8, w8, #0x7
  405884:	cmp	w0, w8
  405888:	b.lt	4058c0 <parse_ifindex@plt+0x3630>  // b.tstop
  40588c:	ldr	w8, [sp, #48]
  405890:	ldr	w9, [sp, #56]
  405894:	orr	w0, w9, w8, lsl #10
  405898:	ldr	w1, [sp, #52]
  40589c:	ldr	x2, [sp, #32]
  4058a0:	mov	w3, #0x1cf                 	// #463
  4058a4:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  4058a8:	add	x4, x4, #0x209
  4058ac:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  4058b0:	add	x5, x5, #0x236
  4058b4:	bl	401e90 <log_internal_realm@plt>
  4058b8:	str	w0, [sp, #12]
  4058bc:	b	4058d4 <parse_ifindex@plt+0x3644>
  4058c0:	ldr	w0, [sp, #52]
  4058c4:	bl	401ea0 <abs@plt>
  4058c8:	mov	w8, wzr
  4058cc:	subs	w8, w8, w0, uxtb
  4058d0:	str	w8, [sp, #12]
  4058d4:	ldr	w8, [sp, #12]
  4058d8:	str	w8, [sp, #44]
  4058dc:	ldr	w8, [sp, #44]
  4058e0:	stur	w8, [x29, #-4]
  4058e4:	b	40591c <parse_ifindex@plt+0x368c>
  4058e8:	ldur	w0, [x29, #-68]
  4058ec:	ldur	x1, [x29, #-64]
  4058f0:	ldur	x2, [x29, #-56]
  4058f4:	bl	402200 <in_addr_to_string@plt>
  4058f8:	stur	w0, [x29, #-72]
  4058fc:	ldur	w8, [x29, #-72]
  405900:	cmp	w8, #0x0
  405904:	cset	w8, ge  // ge = tcont
  405908:	tbnz	w8, #0, 405918 <parse_ifindex@plt+0x3688>
  40590c:	ldur	w8, [x29, #-72]
  405910:	stur	w8, [x29, #-4]
  405914:	b	40591c <parse_ifindex@plt+0x368c>
  405918:	stur	wzr, [x29, #-4]
  40591c:	ldur	w0, [x29, #-4]
  405920:	ldp	x29, x30, [sp, #160]
  405924:	add	sp, sp, #0xb0
  405928:	ret
  40592c:	sub	sp, sp, #0x70
  405930:	stp	x29, x30, [sp, #96]
  405934:	add	x29, sp, #0x60
  405938:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  40593c:	add	x8, x8, #0x221
  405940:	add	x8, x8, #0x3
  405944:	stur	x0, [x29, #-16]
  405948:	stur	x1, [x29, #-24]
  40594c:	stur	x2, [x29, #-32]
  405950:	stur	x3, [x29, #-40]
  405954:	str	x4, [sp, #48]
  405958:	ldr	x9, [sp, #48]
  40595c:	str	x9, [sp, #40]
  405960:	str	x8, [sp, #8]
  405964:	ldr	x8, [sp, #40]
  405968:	cmp	x8, #0x0
  40596c:	cset	w9, ne  // ne = any
  405970:	mov	w10, #0x1                   	// #1
  405974:	eor	w9, w9, #0x1
  405978:	eor	w9, w9, w10
  40597c:	eor	w9, w9, w10
  405980:	and	w9, w9, #0x1
  405984:	mov	w0, w9
  405988:	sxtw	x8, w0
  40598c:	cbz	x8, 4059b4 <parse_ifindex@plt+0x3724>
  405990:	mov	w8, wzr
  405994:	mov	w0, w8
  405998:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  40599c:	add	x1, x1, #0x1aa
  4059a0:	ldr	x2, [sp, #8]
  4059a4:	mov	w3, #0x1df                 	// #479
  4059a8:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  4059ac:	add	x4, x4, #0x2a9
  4059b0:	bl	401ec0 <log_assert_failed_realm@plt>
  4059b4:	ldur	x0, [x29, #-32]
  4059b8:	mov	w1, #0x72                  	// #114
  4059bc:	adrp	x2, 408000 <parse_ifindex@plt+0x5d70>
  4059c0:	add	x2, x2, #0x2ff
  4059c4:	bl	4021d0 <sd_bus_message_enter_container@plt>
  4059c8:	str	w0, [sp, #16]
  4059cc:	ldr	w8, [sp, #16]
  4059d0:	cmp	w8, #0x0
  4059d4:	cset	w8, ge  // ge = tcont
  4059d8:	tbnz	w8, #0, 4059e8 <parse_ifindex@plt+0x3758>
  4059dc:	ldr	w8, [sp, #16]
  4059e0:	stur	w8, [x29, #-4]
  4059e4:	b	405b68 <parse_ifindex@plt+0x38d8>
  4059e8:	ldur	x0, [x29, #-32]
  4059ec:	ldr	x8, [sp, #40]
  4059f0:	add	x2, x8, #0x30
  4059f4:	ldr	x8, [sp, #40]
  4059f8:	add	x3, x8, #0x34
  4059fc:	ldr	x8, [sp, #40]
  405a00:	add	x4, x8, #0x38
  405a04:	ldr	x8, [sp, #40]
  405a08:	add	x5, x8, #0x3c
  405a0c:	ldr	x8, [sp, #40]
  405a10:	add	x6, x8, #0x40
  405a14:	ldr	x8, [sp, #40]
  405a18:	add	x7, x8, #0x48
  405a1c:	ldr	x8, [sp, #40]
  405a20:	add	x8, x8, #0x50
  405a24:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  405a28:	add	x1, x1, #0x310
  405a2c:	mov	x9, sp
  405a30:	str	x8, [x9]
  405a34:	bl	4021b0 <sd_bus_message_read@plt>
  405a38:	str	w0, [sp, #16]
  405a3c:	ldr	w10, [sp, #16]
  405a40:	cmp	w10, #0x0
  405a44:	cset	w10, ge  // ge = tcont
  405a48:	tbnz	w10, #0, 405a58 <parse_ifindex@plt+0x37c8>
  405a4c:	ldr	w8, [sp, #16]
  405a50:	stur	w8, [x29, #-4]
  405a54:	b	405b68 <parse_ifindex@plt+0x38d8>
  405a58:	ldur	x0, [x29, #-32]
  405a5c:	mov	w1, #0x79                  	// #121
  405a60:	add	x2, sp, #0x20
  405a64:	add	x3, sp, #0x18
  405a68:	bl	4021e0 <sd_bus_message_read_array@plt>
  405a6c:	str	w0, [sp, #16]
  405a70:	ldr	w8, [sp, #16]
  405a74:	cmp	w8, #0x0
  405a78:	cset	w8, ge  // ge = tcont
  405a7c:	tbnz	w8, #0, 405a8c <parse_ifindex@plt+0x37fc>
  405a80:	ldr	w8, [sp, #16]
  405a84:	stur	w8, [x29, #-4]
  405a88:	b	405b68 <parse_ifindex@plt+0x38d8>
  405a8c:	ldur	x0, [x29, #-32]
  405a90:	ldr	x8, [sp, #40]
  405a94:	add	x2, x8, #0x60
  405a98:	ldr	x8, [sp, #40]
  405a9c:	add	x3, x8, #0x68
  405aa0:	ldr	x8, [sp, #40]
  405aa4:	add	x4, x8, #0x70
  405aa8:	ldr	x8, [sp, #40]
  405aac:	add	x5, x8, #0x78
  405ab0:	ldr	x8, [sp, #40]
  405ab4:	add	x7, x8, #0x88
  405ab8:	ldr	x8, [sp, #40]
  405abc:	add	x8, x8, #0x90
  405ac0:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  405ac4:	add	x1, x1, #0x318
  405ac8:	add	x6, sp, #0x14
  405acc:	mov	x9, sp
  405ad0:	str	x8, [x9]
  405ad4:	bl	4021b0 <sd_bus_message_read@plt>
  405ad8:	str	w0, [sp, #16]
  405adc:	ldr	w10, [sp, #16]
  405ae0:	cmp	w10, #0x0
  405ae4:	cset	w10, ge  // ge = tcont
  405ae8:	tbnz	w10, #0, 405af8 <parse_ifindex@plt+0x3868>
  405aec:	ldr	w8, [sp, #16]
  405af0:	stur	w8, [x29, #-4]
  405af4:	b	405b68 <parse_ifindex@plt+0x38d8>
  405af8:	ldur	x0, [x29, #-32]
  405afc:	bl	4021f0 <sd_bus_message_exit_container@plt>
  405b00:	str	w0, [sp, #16]
  405b04:	ldr	w8, [sp, #16]
  405b08:	cmp	w8, #0x0
  405b0c:	cset	w8, ge  // ge = tcont
  405b10:	tbnz	w8, #0, 405b20 <parse_ifindex@plt+0x3890>
  405b14:	ldr	w8, [sp, #16]
  405b18:	stur	w8, [x29, #-4]
  405b1c:	b	405b68 <parse_ifindex@plt+0x38d8>
  405b20:	ldr	x8, [sp, #24]
  405b24:	cmp	x8, #0x4
  405b28:	b.eq	405b38 <parse_ifindex@plt+0x38a8>  // b.none
  405b2c:	mov	w8, #0xffffffea            	// #-22
  405b30:	stur	w8, [x29, #-4]
  405b34:	b	405b68 <parse_ifindex@plt+0x38d8>
  405b38:	ldr	x8, [sp, #40]
  405b3c:	add	x0, x8, #0x58
  405b40:	ldr	x1, [sp, #32]
  405b44:	ldr	x2, [sp, #24]
  405b48:	bl	4020e0 <memcpy@plt>
  405b4c:	ldr	w9, [sp, #20]
  405b50:	cmp	w9, #0x0
  405b54:	cset	w9, ne  // ne = any
  405b58:	ldr	x8, [sp, #40]
  405b5c:	and	w9, w9, #0x1
  405b60:	strb	w9, [x8, #128]
  405b64:	stur	wzr, [x29, #-4]
  405b68:	ldur	w0, [x29, #-4]
  405b6c:	ldp	x29, x30, [sp, #96]
  405b70:	add	sp, sp, #0x70
  405b74:	ret
  405b78:	sub	sp, sp, #0x20
  405b7c:	stp	x29, x30, [sp, #16]
  405b80:	add	x29, sp, #0x10
  405b84:	str	x0, [sp, #8]
  405b88:	ldr	x8, [sp, #8]
  405b8c:	ldr	x0, [x8, #8]
  405b90:	bl	40612c <parse_ifindex@plt+0x3e9c>
  405b94:	ldr	x8, [sp, #8]
  405b98:	str	x0, [x8, #8]
  405b9c:	ldp	x29, x30, [sp, #16]
  405ba0:	add	sp, sp, #0x20
  405ba4:	ret
  405ba8:	sub	sp, sp, #0x1e0
  405bac:	stp	x29, x30, [sp, #448]
  405bb0:	str	x28, [sp, #464]
  405bb4:	add	x29, sp, #0x1c0
  405bb8:	adrp	x8, 407000 <parse_ifindex@plt+0x4d70>
  405bbc:	add	x8, x8, #0x221
  405bc0:	add	x8, x8, #0x3
  405bc4:	stur	x0, [x29, #-8]
  405bc8:	str	x8, [sp, #152]
  405bcc:	ldur	x8, [x29, #-8]
  405bd0:	cmp	x8, #0x0
  405bd4:	cset	w9, ne  // ne = any
  405bd8:	mov	w10, #0x1                   	// #1
  405bdc:	eor	w9, w9, #0x1
  405be0:	eor	w9, w9, w10
  405be4:	eor	w9, w9, w10
  405be8:	and	w9, w9, #0x1
  405bec:	mov	w0, w9
  405bf0:	sxtw	x8, w0
  405bf4:	cbz	x8, 405c1c <parse_ifindex@plt+0x398c>
  405bf8:	mov	w8, wzr
  405bfc:	mov	w0, w8
  405c00:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  405c04:	add	x1, x1, #0x9b2
  405c08:	ldr	x2, [sp, #152]
  405c0c:	mov	w3, #0x166                 	// #358
  405c10:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  405c14:	add	x4, x4, #0x320
  405c18:	bl	401ec0 <log_assert_failed_realm@plt>
  405c1c:	ldur	x8, [x29, #-8]
  405c20:	ldr	x1, [x8, #8]
  405c24:	ldur	x8, [x29, #-8]
  405c28:	ldr	x2, [x8]
  405c2c:	adrp	x0, 408000 <parse_ifindex@plt+0x5d70>
  405c30:	add	x0, x0, #0x34c
  405c34:	bl	401f40 <printf@plt>
  405c38:	ldur	x8, [x29, #-8]
  405c3c:	ldr	x2, [x8, #16]
  405c40:	sub	x8, x29, #0x48
  405c44:	mov	x0, x8
  405c48:	mov	x8, #0x40                  	// #64
  405c4c:	mov	x1, x8
  405c50:	mov	x9, xzr
  405c54:	mov	x3, x9
  405c58:	str	x8, [sp, #144]
  405c5c:	str	x9, [sp, #136]
  405c60:	bl	402210 <format_timespan@plt>
  405c64:	ldur	x8, [x29, #-8]
  405c68:	ldr	x2, [x8, #32]
  405c6c:	sub	x8, x29, #0x88
  405c70:	str	x0, [sp, #128]
  405c74:	mov	x0, x8
  405c78:	ldr	x1, [sp, #144]
  405c7c:	ldr	x3, [sp, #136]
  405c80:	bl	402210 <format_timespan@plt>
  405c84:	ldur	x8, [x29, #-8]
  405c88:	ldr	x2, [x8, #24]
  405c8c:	sub	x8, x29, #0xc8
  405c90:	str	x0, [sp, #120]
  405c94:	mov	x0, x8
  405c98:	ldr	x1, [sp, #144]
  405c9c:	ldr	x3, [sp, #136]
  405ca0:	bl	402210 <format_timespan@plt>
  405ca4:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  405ca8:	add	x8, x8, #0x364
  405cac:	str	x0, [sp, #112]
  405cb0:	mov	x0, x8
  405cb4:	ldr	x1, [sp, #128]
  405cb8:	ldr	x2, [sp, #120]
  405cbc:	ldr	x3, [sp, #112]
  405cc0:	bl	401f40 <printf@plt>
  405cc4:	ldur	x8, [x29, #-8]
  405cc8:	ldr	x8, [x8, #136]
  405ccc:	cbnz	x8, 405ce0 <parse_ifindex@plt+0x3a50>
  405cd0:	adrp	x0, 408000 <parse_ifindex@plt+0x5d70>
  405cd4:	add	x0, x0, #0x389
  405cd8:	bl	401f40 <printf@plt>
  405cdc:	b	40611c <parse_ifindex@plt+0x3e8c>
  405ce0:	ldur	x8, [x29, #-8]
  405ce4:	ldr	x8, [x8, #120]
  405ce8:	ldur	x9, [x29, #-8]
  405cec:	ldr	x9, [x9, #96]
  405cf0:	cmp	x8, x9
  405cf4:	b.cc	405d40 <parse_ifindex@plt+0x3ab0>  // b.lo, b.ul, b.last
  405cf8:	ldur	x8, [x29, #-8]
  405cfc:	ldr	x8, [x8, #112]
  405d00:	ldur	x9, [x29, #-8]
  405d04:	ldr	x9, [x9, #104]
  405d08:	cmp	x8, x9
  405d0c:	b.cc	405d40 <parse_ifindex@plt+0x3ab0>  // b.lo, b.ul, b.last
  405d10:	ldur	x8, [x29, #-8]
  405d14:	ldr	x8, [x8, #120]
  405d18:	ldur	x9, [x29, #-8]
  405d1c:	ldr	x9, [x9, #96]
  405d20:	subs	x8, x8, x9
  405d24:	ldur	x9, [x29, #-8]
  405d28:	ldr	x9, [x9, #112]
  405d2c:	ldur	x10, [x29, #-8]
  405d30:	ldr	x10, [x10, #104]
  405d34:	subs	x9, x9, x10
  405d38:	cmp	x8, x9
  405d3c:	b.cs	405dbc <parse_ifindex@plt+0x3b2c>  // b.hs, b.nlast
  405d40:	mov	w8, #0x3                   	// #3
  405d44:	str	w8, [sp, #200]
  405d48:	str	wzr, [sp, #196]
  405d4c:	str	wzr, [sp, #192]
  405d50:	ldr	w0, [sp, #192]
  405d54:	bl	401e80 <log_get_max_level_realm@plt>
  405d58:	ldr	w8, [sp, #200]
  405d5c:	and	w8, w8, #0x7
  405d60:	cmp	w0, w8
  405d64:	b.lt	405d9c <parse_ifindex@plt+0x3b0c>  // b.tstop
  405d68:	ldr	w8, [sp, #192]
  405d6c:	ldr	w9, [sp, #200]
  405d70:	orr	w0, w9, w8, lsl #10
  405d74:	ldr	w1, [sp, #196]
  405d78:	ldr	x2, [sp, #152]
  405d7c:	mov	w3, #0x181                 	// #385
  405d80:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  405d84:	add	x4, x4, #0x39b
  405d88:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  405d8c:	add	x5, x5, #0x3b1
  405d90:	bl	401e90 <log_internal_realm@plt>
  405d94:	str	w0, [sp, #108]
  405d98:	b	405db0 <parse_ifindex@plt+0x3b20>
  405d9c:	ldr	w0, [sp, #196]
  405da0:	bl	401ea0 <abs@plt>
  405da4:	mov	w8, wzr
  405da8:	subs	w8, w8, w0, uxtb
  405dac:	str	w8, [sp, #108]
  405db0:	ldr	w8, [sp, #108]
  405db4:	str	w8, [sp, #188]
  405db8:	b	40611c <parse_ifindex@plt+0x3e8c>
  405dbc:	ldur	x8, [x29, #-8]
  405dc0:	ldr	x8, [x8, #120]
  405dc4:	ldur	x9, [x29, #-8]
  405dc8:	ldr	x9, [x9, #96]
  405dcc:	subs	x8, x8, x9
  405dd0:	ldur	x9, [x29, #-8]
  405dd4:	ldr	x9, [x9, #112]
  405dd8:	ldur	x10, [x29, #-8]
  405ddc:	ldr	x10, [x10, #104]
  405de0:	subs	x9, x9, x10
  405de4:	subs	x8, x8, x9
  405de8:	stur	x8, [x29, #-208]
  405dec:	ldur	x8, [x29, #-8]
  405df0:	ldr	x8, [x8, #96]
  405df4:	ldur	x9, [x29, #-8]
  405df8:	ldr	x9, [x9, #120]
  405dfc:	add	x8, x8, x9
  405e00:	stur	x8, [x29, #-216]
  405e04:	ldur	x8, [x29, #-8]
  405e08:	ldr	x8, [x8, #104]
  405e0c:	ldur	x9, [x29, #-8]
  405e10:	ldr	x9, [x9, #112]
  405e14:	add	x8, x8, x9
  405e18:	str	x8, [sp, #224]
  405e1c:	ldur	x8, [x29, #-216]
  405e20:	ldr	x9, [sp, #224]
  405e24:	cmp	x8, x9
  405e28:	cset	w11, cc  // cc = lo, ul, last
  405e2c:	and	w11, w11, #0x1
  405e30:	strb	w11, [sp, #207]
  405e34:	ldrb	w11, [sp, #207]
  405e38:	tbnz	w11, #0, 405e40 <parse_ifindex@plt+0x3bb0>
  405e3c:	b	405e54 <parse_ifindex@plt+0x3bc4>
  405e40:	ldr	x8, [sp, #224]
  405e44:	ldur	x9, [x29, #-216]
  405e48:	subs	x8, x8, x9
  405e4c:	str	x8, [sp, #96]
  405e50:	b	405e64 <parse_ifindex@plt+0x3bd4>
  405e54:	ldur	x8, [x29, #-216]
  405e58:	ldr	x9, [sp, #224]
  405e5c:	subs	x8, x8, x9
  405e60:	str	x8, [sp, #96]
  405e64:	ldr	x8, [sp, #96]
  405e68:	mov	x9, #0x2                   	// #2
  405e6c:	udiv	x8, x8, x9
  405e70:	str	x8, [sp, #216]
  405e74:	ldur	x8, [x29, #-8]
  405e78:	ldr	x8, [x8, #72]
  405e7c:	udiv	x8, x8, x9
  405e80:	ldur	x9, [x29, #-8]
  405e84:	ldr	x9, [x9, #80]
  405e88:	add	x8, x8, x9
  405e8c:	str	x8, [sp, #208]
  405e90:	ldur	x8, [x29, #-8]
  405e94:	ldr	w0, [x8, #48]
  405e98:	bl	406238 <parse_ifindex@plt+0x3fa8>
  405e9c:	ldur	x8, [x29, #-8]
  405ea0:	ldr	w2, [x8, #52]
  405ea4:	ldur	x8, [x29, #-8]
  405ea8:	ldr	w3, [x8, #60]
  405eac:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  405eb0:	add	x8, x8, #0x3c6
  405eb4:	str	x0, [sp, #88]
  405eb8:	mov	x0, x8
  405ebc:	ldr	x1, [sp, #88]
  405ec0:	bl	401f40 <printf@plt>
  405ec4:	ldur	x8, [x29, #-8]
  405ec8:	ldr	w10, [x8, #60]
  405ecc:	cmp	w10, #0x1
  405ed0:	b.hi	405eec <parse_ifindex@plt+0x3c5c>  // b.pmore
  405ed4:	ldur	x8, [x29, #-8]
  405ed8:	add	x1, x8, #0x58
  405edc:	adrp	x0, 408000 <parse_ifindex@plt+0x5d70>
  405ee0:	add	x0, x0, #0x3fd
  405ee4:	bl	401f40 <printf@plt>
  405ee8:	b	405f10 <parse_ifindex@plt+0x3c80>
  405eec:	ldur	x8, [x29, #-8]
  405ef0:	ldr	w0, [x8, #88]
  405ef4:	bl	406298 <parse_ifindex@plt+0x4008>
  405ef8:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  405efc:	add	x8, x8, #0x410
  405f00:	str	w0, [sp, #84]
  405f04:	mov	x0, x8
  405f08:	ldr	w1, [sp, #84]
  405f0c:	bl	401f40 <printf@plt>
  405f10:	ldur	x8, [x29, #-8]
  405f14:	ldr	w9, [x8, #64]
  405f18:	scvtf	d0, w9
  405f1c:	bl	402220 <exp2@plt>
  405f20:	mov	x8, #0xcd6500000000        	// #225833675390976
  405f24:	movk	x8, #0x41cd, lsl #48
  405f28:	fmov	d1, x8
  405f2c:	fmul	d0, d0, d1
  405f30:	fcvtzu	x8, d0
  405f34:	str	x8, [sp, #176]
  405f38:	mov	x8, #0x3e8                 	// #1000
  405f3c:	str	x8, [sp, #168]
  405f40:	ldr	x10, [sp, #176]
  405f44:	udiv	x10, x10, x8
  405f48:	ldr	x11, [sp, #176]
  405f4c:	udiv	x12, x11, x8
  405f50:	mul	x8, x12, x8
  405f54:	subs	x8, x11, x8
  405f58:	mov	x11, xzr
  405f5c:	cmp	x8, #0x0
  405f60:	cset	w9, ne  // ne = any
  405f64:	mov	w13, #0x1                   	// #1
  405f68:	eor	w9, w9, #0x1
  405f6c:	eor	w9, w9, w13
  405f70:	and	w9, w9, #0x1
  405f74:	add	x8, x10, w9, sxtw
  405f78:	str	x8, [sp, #160]
  405f7c:	ldr	x2, [sp, #160]
  405f80:	sub	x8, x29, #0x48
  405f84:	mov	x0, x8
  405f88:	mov	x10, #0x40                  	// #64
  405f8c:	mov	x1, x10
  405f90:	mov	x3, x11
  405f94:	str	x11, [sp, #72]
  405f98:	str	x8, [sp, #64]
  405f9c:	str	x10, [sp, #56]
  405fa0:	bl	402210 <format_timespan@plt>
  405fa4:	ldur	x8, [x29, #-8]
  405fa8:	ldr	w2, [x8, #64]
  405fac:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  405fb0:	add	x8, x8, #0x423
  405fb4:	str	x0, [sp, #48]
  405fb8:	mov	x0, x8
  405fbc:	ldr	x1, [sp, #48]
  405fc0:	bl	401f40 <printf@plt>
  405fc4:	ldr	x2, [sp, #208]
  405fc8:	ldr	x8, [sp, #64]
  405fcc:	mov	x0, x8
  405fd0:	ldr	x1, [sp, #56]
  405fd4:	ldr	x3, [sp, #72]
  405fd8:	bl	402210 <format_timespan@plt>
  405fdc:	ldur	x8, [x29, #-8]
  405fe0:	ldr	x2, [x8, #40]
  405fe4:	sub	x8, x29, #0xc8
  405fe8:	str	x0, [sp, #40]
  405fec:	mov	x0, x8
  405ff0:	ldr	x1, [sp, #56]
  405ff4:	ldr	x3, [sp, #72]
  405ff8:	bl	402210 <format_timespan@plt>
  405ffc:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  406000:	add	x8, x8, #0x43b
  406004:	str	x0, [sp, #32]
  406008:	mov	x0, x8
  40600c:	ldr	x1, [sp, #40]
  406010:	ldr	x2, [sp, #32]
  406014:	bl	401f40 <printf@plt>
  406018:	ldrb	w9, [sp, #207]
  40601c:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  406020:	add	x8, x8, #0x46f
  406024:	adrp	x10, 408000 <parse_ifindex@plt+0x5d70>
  406028:	add	x10, x10, #0x46d
  40602c:	tst	w9, #0x1
  406030:	csel	x1, x10, x8, ne  // ne = any
  406034:	ldr	x2, [sp, #216]
  406038:	ldr	x8, [sp, #64]
  40603c:	mov	x0, x8
  406040:	ldr	x10, [sp, #56]
  406044:	str	x1, [sp, #24]
  406048:	mov	x1, x10
  40604c:	ldr	x3, [sp, #72]
  406050:	bl	402210 <format_timespan@plt>
  406054:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  406058:	add	x8, x8, #0x458
  40605c:	str	x0, [sp, #16]
  406060:	mov	x0, x8
  406064:	ldr	x1, [sp, #24]
  406068:	ldr	x2, [sp, #16]
  40606c:	bl	401f40 <printf@plt>
  406070:	ldur	x2, [x29, #-208]
  406074:	ldr	x8, [sp, #64]
  406078:	mov	x0, x8
  40607c:	ldr	x1, [sp, #56]
  406080:	ldr	x3, [sp, #72]
  406084:	bl	402210 <format_timespan@plt>
  406088:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  40608c:	add	x8, x8, #0x471
  406090:	str	x0, [sp, #8]
  406094:	mov	x0, x8
  406098:	ldr	x1, [sp, #8]
  40609c:	bl	401f40 <printf@plt>
  4060a0:	ldur	x8, [x29, #-8]
  4060a4:	ldr	x2, [x8, #144]
  4060a8:	ldr	x8, [sp, #64]
  4060ac:	mov	x0, x8
  4060b0:	ldr	x1, [sp, #56]
  4060b4:	ldr	x3, [sp, #72]
  4060b8:	bl	402210 <format_timespan@plt>
  4060bc:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  4060c0:	add	x8, x8, #0x484
  4060c4:	str	x0, [sp]
  4060c8:	mov	x0, x8
  4060cc:	ldr	x1, [sp]
  4060d0:	bl	401f40 <printf@plt>
  4060d4:	ldur	x8, [x29, #-8]
  4060d8:	ldr	x1, [x8, #136]
  4060dc:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  4060e0:	add	x8, x8, #0x497
  4060e4:	mov	x0, x8
  4060e8:	bl	401f40 <printf@plt>
  4060ec:	ldur	x8, [x29, #-8]
  4060f0:	ldrb	w9, [x8, #128]
  4060f4:	tbnz	w9, #0, 40611c <parse_ifindex@plt+0x3e8c>
  4060f8:	ldur	x8, [x29, #-8]
  4060fc:	ldr	x8, [x8, #152]
  406100:	scvtf	d0, x8
  406104:	mov	x8, #0x40f0000000000000    	// #4679240012837945344
  406108:	fmov	d1, x8
  40610c:	fdiv	d0, d0, d1
  406110:	adrp	x0, 408000 <parse_ifindex@plt+0x5d70>
  406114:	add	x0, x0, #0x4ab
  406118:	bl	401f40 <printf@plt>
  40611c:	ldr	x28, [sp, #464]
  406120:	ldp	x29, x30, [sp, #448]
  406124:	add	sp, sp, #0x1e0
  406128:	ret
  40612c:	sub	sp, sp, #0x20
  406130:	stp	x29, x30, [sp, #16]
  406134:	add	x29, sp, #0x10
  406138:	mov	x8, xzr
  40613c:	str	x0, [sp, #8]
  406140:	ldr	x0, [sp, #8]
  406144:	str	x8, [sp]
  406148:	bl	401f50 <free@plt>
  40614c:	ldr	x0, [sp]
  406150:	ldp	x29, x30, [sp, #16]
  406154:	add	sp, sp, #0x20
  406158:	ret
  40615c:	sub	sp, sp, #0x30
  406160:	stp	x29, x30, [sp, #32]
  406164:	add	x29, sp, #0x20
  406168:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  40616c:	add	x8, x8, #0x26d
  406170:	add	x2, x8, #0x3
  406174:	stur	w0, [x29, #-4]
  406178:	str	x2, [sp, #16]
  40617c:	mov	w8, #0x0                   	// #0
  406180:	sturb	w8, [x29, #-5]
  406184:	ldur	w8, [x29, #-4]
  406188:	cmp	w8, #0x2
  40618c:	str	w8, [sp, #12]
  406190:	b.eq	4061b0 <parse_ifindex@plt+0x3f20>  // b.none
  406194:	b	406198 <parse_ifindex@plt+0x3f08>
  406198:	ldr	w8, [sp, #12]
  40619c:	cmp	w8, #0xa
  4061a0:	cset	w9, eq  // eq = none
  4061a4:	eor	w9, w9, #0x1
  4061a8:	tbnz	w9, #0, 4061bc <parse_ifindex@plt+0x3f2c>
  4061ac:	b	4061b0 <parse_ifindex@plt+0x3f20>
  4061b0:	mov	w8, #0x1                   	// #1
  4061b4:	sturb	w8, [x29, #-5]
  4061b8:	b	4061bc <parse_ifindex@plt+0x3f2c>
  4061bc:	ldurb	w8, [x29, #-5]
  4061c0:	mov	w9, #0x1                   	// #1
  4061c4:	and	w8, w8, w9
  4061c8:	sturb	w8, [x29, #-6]
  4061cc:	ldurb	w8, [x29, #-6]
  4061d0:	eor	w8, w8, #0x1
  4061d4:	eor	w8, w8, w9
  4061d8:	eor	w8, w8, w9
  4061dc:	and	w8, w8, #0x1
  4061e0:	mov	w0, w8
  4061e4:	sxtw	x10, w0
  4061e8:	cbz	x10, 406210 <parse_ifindex@plt+0x3f80>
  4061ec:	mov	w8, wzr
  4061f0:	mov	w0, w8
  4061f4:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  4061f8:	add	x1, x1, #0x24b
  4061fc:	ldr	x2, [sp, #16]
  406200:	mov	w3, #0x43                  	// #67
  406204:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  406208:	add	x4, x4, #0x289
  40620c:	bl	401ec0 <log_assert_failed_realm@plt>
  406210:	ldur	w8, [x29, #-4]
  406214:	mov	w9, #0x4                   	// #4
  406218:	mov	w10, #0x10                  	// #16
  40621c:	cmp	w8, #0xa
  406220:	csel	w8, w10, w9, eq  // eq = none
  406224:	mov	w0, w8
  406228:	sxtw	x0, w0
  40622c:	ldp	x29, x30, [sp, #32]
  406230:	add	sp, sp, #0x30
  406234:	ret
  406238:	sub	sp, sp, #0x10
  40623c:	str	w0, [sp, #4]
  406240:	ldr	w8, [sp, #4]
  406244:	cmp	w8, #0x0
  406248:	cset	w8, cc  // cc = lo, ul, last
  40624c:	tbnz	w8, #0, 40625c <parse_ifindex@plt+0x3fcc>
  406250:	ldr	w8, [sp, #4]
  406254:	cmp	w8, #0x4
  406258:	b.cc	406268 <parse_ifindex@plt+0x3fd8>  // b.lo, b.ul, b.last
  40625c:	mov	x8, xzr
  406260:	str	x8, [sp, #8]
  406264:	b	40628c <parse_ifindex@plt+0x3ffc>
  406268:	ldr	w8, [sp, #4]
  40626c:	mov	w9, w8
  406270:	mov	x10, #0x8                   	// #8
  406274:	mul	x9, x10, x9
  406278:	adrp	x10, 407000 <parse_ifindex@plt+0x4d70>
  40627c:	add	x10, x10, #0x200
  406280:	add	x9, x10, x9
  406284:	ldr	x9, [x9]
  406288:	str	x9, [sp, #8]
  40628c:	ldr	x0, [sp, #8]
  406290:	add	sp, sp, #0x10
  406294:	ret
  406298:	sub	sp, sp, #0x20
  40629c:	stp	x29, x30, [sp, #16]
  4062a0:	add	x29, sp, #0x10
  4062a4:	stur	w0, [x29, #-4]
  4062a8:	ldur	w0, [x29, #-4]
  4062ac:	bl	4062bc <parse_ifindex@plt+0x402c>
  4062b0:	ldp	x29, x30, [sp, #16]
  4062b4:	add	sp, sp, #0x20
  4062b8:	ret
  4062bc:	sub	sp, sp, #0x10
  4062c0:	str	w0, [sp, #12]
  4062c4:	ldr	w8, [sp, #12]
  4062c8:	and	w8, w8, #0xff000000
  4062cc:	ldr	w9, [sp, #12]
  4062d0:	and	w9, w9, #0xff0000
  4062d4:	lsr	w9, w9, #8
  4062d8:	orr	w8, w9, w8, lsr #24
  4062dc:	ldr	w9, [sp, #12]
  4062e0:	and	w9, w9, #0xff00
  4062e4:	orr	w8, w8, w9, lsl #8
  4062e8:	ldr	w9, [sp, #12]
  4062ec:	and	w9, w9, #0xff
  4062f0:	orr	w0, w8, w9, lsl #24
  4062f4:	add	sp, sp, #0x10
  4062f8:	ret
  4062fc:	sub	sp, sp, #0x20
  406300:	stp	x29, x30, [sp, #16]
  406304:	add	x29, sp, #0x10
  406308:	str	x0, [sp, #8]
  40630c:	str	x1, [sp]
  406310:	ldr	x0, [sp, #8]
  406314:	ldr	x1, [sp]
  406318:	bl	402230 <strcmp_ptr@plt>
  40631c:	cmp	w0, #0x0
  406320:	cset	w8, eq  // eq = none
  406324:	and	w0, w8, #0x1
  406328:	ldp	x29, x30, [sp, #16]
  40632c:	add	sp, sp, #0x20
  406330:	ret
  406334:	stp	x29, x30, [sp, #-32]!
  406338:	str	x28, [sp, #16]
  40633c:	mov	x29, sp
  406340:	sub	sp, sp, #0x1e0
  406344:	mov	w8, #0x1                   	// #1
  406348:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  40634c:	add	x9, x9, #0x221
  406350:	add	x9, x9, #0x3
  406354:	stur	x0, [x29, #-16]
  406358:	stur	x1, [x29, #-24]
  40635c:	stur	x2, [x29, #-32]
  406360:	and	w10, w3, w8
  406364:	sturb	w10, [x29, #-33]
  406368:	and	w8, w4, w8
  40636c:	sturb	w8, [x29, #-34]
  406370:	str	x9, [sp, #136]
  406374:	ldur	x8, [x29, #-16]
  406378:	cmp	x8, #0x0
  40637c:	cset	w9, ne  // ne = any
  406380:	mov	w10, #0x1                   	// #1
  406384:	eor	w9, w9, #0x1
  406388:	eor	w9, w9, w10
  40638c:	eor	w9, w9, w10
  406390:	and	w9, w9, #0x1
  406394:	mov	w0, w9
  406398:	sxtw	x8, w0
  40639c:	cbz	x8, 4063c4 <parse_ifindex@plt+0x4134>
  4063a0:	mov	w8, wzr
  4063a4:	mov	w0, w8
  4063a8:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  4063ac:	add	x1, x1, #0x5fe
  4063b0:	ldr	x2, [sp, #136]
  4063b4:	mov	w3, #0x265                 	// #613
  4063b8:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  4063bc:	add	x4, x4, #0x603
  4063c0:	bl	401ec0 <log_assert_failed_realm@plt>
  4063c4:	ldur	x8, [x29, #-32]
  4063c8:	cmp	x8, #0x0
  4063cc:	cset	w9, ne  // ne = any
  4063d0:	mov	w10, #0x1                   	// #1
  4063d4:	eor	w9, w9, #0x1
  4063d8:	eor	w9, w9, w10
  4063dc:	eor	w9, w9, w10
  4063e0:	and	w9, w9, #0x1
  4063e4:	mov	w0, w9
  4063e8:	sxtw	x8, w0
  4063ec:	cbz	x8, 406414 <parse_ifindex@plt+0x4184>
  4063f0:	mov	w8, wzr
  4063f4:	mov	w0, w8
  4063f8:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  4063fc:	add	x1, x1, #0x528
  406400:	ldr	x2, [sp, #136]
  406404:	mov	w3, #0x266                 	// #614
  406408:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  40640c:	add	x4, x4, #0x603
  406410:	bl	401ec0 <log_assert_failed_realm@plt>
  406414:	ldur	x0, [x29, #-32]
  406418:	sub	x1, x29, #0x23
  40641c:	sub	x2, x29, #0x30
  406420:	bl	402240 <sd_bus_message_peek_type@plt>
  406424:	stur	w0, [x29, #-52]
  406428:	ldur	w8, [x29, #-52]
  40642c:	cmp	w8, #0x0
  406430:	cset	w8, ge  // ge = tcont
  406434:	tbnz	w8, #0, 406444 <parse_ifindex@plt+0x41b4>
  406438:	ldur	w8, [x29, #-52]
  40643c:	stur	w8, [x29, #-4]
  406440:	b	4067e4 <parse_ifindex@plt+0x4554>
  406444:	ldurb	w8, [x29, #-35]
  406448:	cmp	w8, #0x72
  40644c:	cset	w8, eq  // eq = none
  406450:	eor	w8, w8, #0x1
  406454:	tbnz	w8, #0, 4067e0 <parse_ifindex@plt+0x4550>
  406458:	b	40645c <parse_ifindex@plt+0x41cc>
  40645c:	ldur	x0, [x29, #-16]
  406460:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  406464:	add	x1, x1, #0x136
  406468:	bl	402250 <strcmp@plt>
  40646c:	cbnz	w0, 406738 <parse_ifindex@plt+0x44a8>
  406470:	sub	x8, x29, #0xd8
  406474:	mov	x0, x8
  406478:	mov	w9, wzr
  40647c:	mov	w1, w9
  406480:	mov	x2, #0xa0                  	// #160
  406484:	str	x8, [sp, #128]
  406488:	bl	401f70 <memset@plt>
  40648c:	ldur	x2, [x29, #-32]
  406490:	mov	x8, xzr
  406494:	mov	x0, x8
  406498:	mov	x3, x8
  40649c:	mov	x1, x3
  4064a0:	mov	x3, x8
  4064a4:	ldr	x4, [sp, #128]
  4064a8:	bl	40592c <parse_ifindex@plt+0x369c>
  4064ac:	stur	w0, [x29, #-52]
  4064b0:	ldur	w9, [x29, #-52]
  4064b4:	cmp	w9, #0x0
  4064b8:	cset	w9, ge  // ge = tcont
  4064bc:	tbnz	w9, #0, 4064d4 <parse_ifindex@plt+0x4244>
  4064c0:	ldur	w8, [x29, #-52]
  4064c4:	stur	w8, [x29, #-4]
  4064c8:	mov	w8, #0x1                   	// #1
  4064cc:	str	w8, [sp, #156]
  4064d0:	b	40672c <parse_ifindex@plt+0x449c>
  4064d4:	ldur	x8, [x29, #-80]
  4064d8:	cbnz	x8, 4064ec <parse_ifindex@plt+0x425c>
  4064dc:	mov	w8, #0x1                   	// #1
  4064e0:	stur	w8, [x29, #-4]
  4064e4:	str	w8, [sp, #156]
  4064e8:	b	40672c <parse_ifindex@plt+0x449c>
  4064ec:	ldurb	w8, [x29, #-33]
  4064f0:	tbnz	w8, #0, 406520 <parse_ifindex@plt+0x4290>
  4064f4:	ldur	x0, [x29, #-16]
  4064f8:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  4064fc:	add	x8, x8, #0x60
  406500:	ldr	x1, [x8]
  406504:	str	x8, [sp, #120]
  406508:	bl	4021a0 <fputs@plt>
  40650c:	ldr	x8, [sp, #120]
  406510:	ldr	x1, [x8]
  406514:	mov	w9, #0x3d                  	// #61
  406518:	mov	w0, w9
  40651c:	bl	402260 <fputc@plt>
  406520:	ldur	w1, [x29, #-168]
  406524:	ldur	w2, [x29, #-164]
  406528:	ldur	w3, [x29, #-160]
  40652c:	ldur	w4, [x29, #-156]
  406530:	ldur	w5, [x29, #-152]
  406534:	adrp	x0, 408000 <parse_ifindex@plt+0x5d70>
  406538:	add	x0, x0, #0x65b
  40653c:	bl	401f40 <printf@plt>
  406540:	ldur	x2, [x29, #-144]
  406544:	add	x8, sp, #0xc8
  406548:	mov	x0, x8
  40654c:	mov	x9, #0x40                  	// #64
  406550:	mov	x1, x9
  406554:	mov	x10, xzr
  406558:	mov	x3, x10
  40655c:	str	x8, [sp, #112]
  406560:	str	x9, [sp, #104]
  406564:	str	x10, [sp, #96]
  406568:	bl	402210 <format_timespan@plt>
  40656c:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  406570:	add	x8, x8, #0x695
  406574:	str	x0, [sp, #88]
  406578:	mov	x0, x8
  40657c:	ldr	x1, [sp, #88]
  406580:	bl	401f40 <printf@plt>
  406584:	ldur	x2, [x29, #-136]
  406588:	ldr	x8, [sp, #112]
  40658c:	mov	x0, x8
  406590:	ldr	x1, [sp, #104]
  406594:	ldr	x3, [sp, #96]
  406598:	bl	402210 <format_timespan@plt>
  40659c:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  4065a0:	add	x8, x8, #0x6a4
  4065a4:	str	x0, [sp, #80]
  4065a8:	mov	x0, x8
  4065ac:	ldr	x1, [sp, #80]
  4065b0:	bl	401f40 <printf@plt>
  4065b4:	ldur	w11, [x29, #-156]
  4065b8:	cmp	w11, #0x1
  4065bc:	b.ne	4065d8 <parse_ifindex@plt+0x4348>  // b.any
  4065c0:	sub	x8, x29, #0xd8
  4065c4:	add	x1, x8, #0x58
  4065c8:	adrp	x0, 408000 <parse_ifindex@plt+0x5d70>
  4065cc:	add	x0, x0, #0x6b8
  4065d0:	bl	401f40 <printf@plt>
  4065d4:	b	4065f8 <parse_ifindex@plt+0x4368>
  4065d8:	ldur	w0, [x29, #-128]
  4065dc:	bl	406298 <parse_ifindex@plt+0x4008>
  4065e0:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  4065e4:	add	x8, x8, #0x6c7
  4065e8:	str	w0, [sp, #76]
  4065ec:	mov	x0, x8
  4065f0:	ldr	w1, [sp, #76]
  4065f4:	bl	401f40 <printf@plt>
  4065f8:	sub	x8, x29, #0xd8
  4065fc:	ldur	x2, [x29, #-120]
  406600:	add	x9, sp, #0xa2
  406604:	mov	x0, x9
  406608:	mov	x10, #0x26                  	// #38
  40660c:	mov	x1, x10
  406610:	str	x8, [sp, #64]
  406614:	str	x9, [sp, #56]
  406618:	str	x10, [sp, #48]
  40661c:	bl	402270 <format_timestamp@plt>
  406620:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  406624:	add	x8, x8, #0x6d6
  406628:	str	x0, [sp, #40]
  40662c:	mov	x0, x8
  406630:	ldr	x1, [sp, #40]
  406634:	bl	401f40 <printf@plt>
  406638:	ldur	x2, [x29, #-112]
  40663c:	ldr	x8, [sp, #56]
  406640:	mov	x0, x8
  406644:	ldr	x1, [sp, #48]
  406648:	bl	402270 <format_timestamp@plt>
  40664c:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  406650:	add	x8, x8, #0x6ee
  406654:	str	x0, [sp, #32]
  406658:	mov	x0, x8
  40665c:	ldr	x1, [sp, #32]
  406660:	bl	401f40 <printf@plt>
  406664:	ldur	x2, [x29, #-104]
  406668:	ldr	x8, [sp, #56]
  40666c:	mov	x0, x8
  406670:	ldr	x1, [sp, #48]
  406674:	bl	402270 <format_timestamp@plt>
  406678:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  40667c:	add	x8, x8, #0x704
  406680:	str	x0, [sp, #24]
  406684:	mov	x0, x8
  406688:	ldr	x1, [sp, #24]
  40668c:	bl	401f40 <printf@plt>
  406690:	ldur	x2, [x29, #-96]
  406694:	ldr	x8, [sp, #56]
  406698:	mov	x0, x8
  40669c:	ldr	x1, [sp, #48]
  4066a0:	bl	402270 <format_timestamp@plt>
  4066a4:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  4066a8:	add	x8, x8, #0x71b
  4066ac:	str	x0, [sp, #16]
  4066b0:	mov	x0, x8
  4066b4:	ldr	x1, [sp, #16]
  4066b8:	bl	401f40 <printf@plt>
  4066bc:	ldr	x8, [sp, #64]
  4066c0:	ldrb	w11, [x8, #128]
  4066c4:	and	w11, w11, #0x1
  4066c8:	mov	w0, w11
  4066cc:	bl	4051fc <parse_ifindex@plt+0x2f6c>
  4066d0:	ldur	x2, [x29, #-80]
  4066d4:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  4066d8:	add	x8, x8, #0x735
  4066dc:	str	x0, [sp, #8]
  4066e0:	mov	x0, x8
  4066e4:	ldr	x1, [sp, #8]
  4066e8:	bl	401f40 <printf@plt>
  4066ec:	ldur	x2, [x29, #-72]
  4066f0:	add	x8, sp, #0xc8
  4066f4:	mov	x0, x8
  4066f8:	mov	x1, #0x40                  	// #64
  4066fc:	mov	x8, xzr
  406700:	mov	x3, x8
  406704:	bl	402210 <format_timespan@plt>
  406708:	adrp	x8, 408000 <parse_ifindex@plt+0x5d70>
  40670c:	add	x8, x8, #0x752
  406710:	str	x0, [sp]
  406714:	mov	x0, x8
  406718:	ldr	x1, [sp]
  40671c:	bl	401f40 <printf@plt>
  406720:	mov	w11, #0x1                   	// #1
  406724:	stur	w11, [x29, #-4]
  406728:	str	w11, [sp, #156]
  40672c:	sub	x0, x29, #0xd8
  406730:	bl	405b78 <parse_ifindex@plt+0x38e8>
  406734:	b	4067e4 <parse_ifindex@plt+0x4554>
  406738:	ldur	x0, [x29, #-16]
  40673c:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  406740:	add	x1, x1, #0xd5
  406744:	bl	402250 <strcmp@plt>
  406748:	cbnz	w0, 4067e0 <parse_ifindex@plt+0x4550>
  40674c:	add	x4, sp, #0x90
  406750:	mov	x8, xzr
  406754:	str	x8, [sp, #144]
  406758:	ldur	x2, [x29, #-32]
  40675c:	mov	x0, x8
  406760:	mov	x1, x8
  406764:	mov	x3, x8
  406768:	bl	4055e4 <parse_ifindex@plt+0x3354>
  40676c:	stur	w0, [x29, #-52]
  406770:	ldur	w9, [x29, #-52]
  406774:	cmp	w9, #0x0
  406778:	cset	w9, ge  // ge = tcont
  40677c:	tbnz	w9, #0, 406794 <parse_ifindex@plt+0x4504>
  406780:	ldur	w8, [x29, #-52]
  406784:	stur	w8, [x29, #-4]
  406788:	mov	w8, #0x1                   	// #1
  40678c:	str	w8, [sp, #156]
  406790:	b	4067d4 <parse_ifindex@plt+0x4544>
  406794:	adrp	x8, 420000 <parse_ifindex@plt+0x1dd70>
  406798:	add	x8, x8, #0x38
  40679c:	ldrb	w9, [x8]
  4067a0:	tbnz	w9, #0, 4067b0 <parse_ifindex@plt+0x4520>
  4067a4:	ldr	x0, [sp, #144]
  4067a8:	bl	405118 <parse_ifindex@plt+0x2e88>
  4067ac:	tbnz	w0, #0, 4067c8 <parse_ifindex@plt+0x4538>
  4067b0:	ldur	x0, [x29, #-16]
  4067b4:	ldur	x1, [x29, #-24]
  4067b8:	ldurb	w8, [x29, #-33]
  4067bc:	ldr	x3, [sp, #144]
  4067c0:	and	w2, w8, #0x1
  4067c4:	bl	402280 <bus_print_property_value@plt>
  4067c8:	mov	w8, #0x1                   	// #1
  4067cc:	stur	w8, [x29, #-4]
  4067d0:	str	w8, [sp, #156]
  4067d4:	add	x0, sp, #0x90
  4067d8:	bl	402be8 <parse_ifindex@plt+0x958>
  4067dc:	b	4067e4 <parse_ifindex@plt+0x4554>
  4067e0:	stur	wzr, [x29, #-4]
  4067e4:	ldur	w0, [x29, #-4]
  4067e8:	add	sp, sp, #0x1e0
  4067ec:	ldr	x28, [sp, #16]
  4067f0:	ldp	x29, x30, [sp], #32
  4067f4:	ret
  4067f8:	sub	sp, sp, #0xc0
  4067fc:	stp	x29, x30, [sp, #176]
  406800:	add	x29, sp, #0xb0
  406804:	mov	x8, xzr
  406808:	adrp	x9, 407000 <parse_ifindex@plt+0x4d70>
  40680c:	add	x9, x9, #0x221
  406810:	add	x9, x9, #0x3
  406814:	adrp	x10, 408000 <parse_ifindex@plt+0x5d70>
  406818:	add	x10, x10, #0x83a
  40681c:	stur	x0, [x29, #-16]
  406820:	stur	x1, [x29, #-24]
  406824:	stur	x2, [x29, #-32]
  406828:	stur	xzr, [x29, #-56]
  40682c:	stur	xzr, [x29, #-48]
  406830:	stur	xzr, [x29, #-40]
  406834:	stur	x8, [x29, #-64]
  406838:	str	x9, [sp, #56]
  40683c:	str	x10, [sp, #48]
  406840:	ldur	x8, [x29, #-16]
  406844:	cmp	x8, #0x0
  406848:	cset	w9, ne  // ne = any
  40684c:	mov	w10, #0x1                   	// #1
  406850:	eor	w9, w9, #0x1
  406854:	eor	w9, w9, w10
  406858:	eor	w9, w9, w10
  40685c:	and	w9, w9, #0x1
  406860:	mov	w0, w9
  406864:	sxtw	x8, w0
  406868:	cbz	x8, 40688c <parse_ifindex@plt+0x45fc>
  40686c:	mov	w8, wzr
  406870:	mov	w0, w8
  406874:	adrp	x1, 407000 <parse_ifindex@plt+0x4d70>
  406878:	add	x1, x1, #0x92c
  40687c:	ldr	x2, [sp, #56]
  406880:	mov	w3, #0x2c6                 	// #710
  406884:	ldr	x4, [sp, #48]
  406888:	bl	401ec0 <log_assert_failed_realm@plt>
  40688c:	ldur	x8, [x29, #-24]
  406890:	cmp	x8, #0x0
  406894:	cset	w9, ne  // ne = any
  406898:	mov	w10, #0x1                   	// #1
  40689c:	eor	w9, w9, #0x1
  4068a0:	eor	w9, w9, w10
  4068a4:	eor	w9, w9, w10
  4068a8:	and	w9, w9, #0x1
  4068ac:	mov	w0, w9
  4068b0:	sxtw	x8, w0
  4068b4:	cbz	x8, 4068d8 <parse_ifindex@plt+0x4648>
  4068b8:	mov	w8, wzr
  4068bc:	mov	w0, w8
  4068c0:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  4068c4:	add	x1, x1, #0x86f
  4068c8:	ldr	x2, [sp, #56]
  4068cc:	mov	w3, #0x2c7                 	// #711
  4068d0:	ldr	x4, [sp, #48]
  4068d4:	bl	401ec0 <log_assert_failed_realm@plt>
  4068d8:	ldur	x8, [x29, #-32]
  4068dc:	cmp	x8, #0x0
  4068e0:	cset	w9, ne  // ne = any
  4068e4:	mov	w10, #0x1                   	// #1
  4068e8:	eor	w9, w9, #0x1
  4068ec:	eor	w9, w9, w10
  4068f0:	eor	w9, w9, w10
  4068f4:	and	w9, w9, #0x1
  4068f8:	mov	w0, w9
  4068fc:	sxtw	x8, w0
  406900:	cbz	x8, 406924 <parse_ifindex@plt+0x4694>
  406904:	mov	w8, wzr
  406908:	mov	w0, w8
  40690c:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  406910:	add	x1, x1, #0x873
  406914:	ldr	x2, [sp, #56]
  406918:	mov	w3, #0x2c8                 	// #712
  40691c:	ldr	x4, [sp, #48]
  406920:	bl	401ec0 <log_assert_failed_realm@plt>
  406924:	ldur	x0, [x29, #-24]
  406928:	ldur	x1, [x29, #-32]
  40692c:	bl	402290 <parse_ifindex@plt>
  406930:	stur	w0, [x29, #-72]
  406934:	ldur	w8, [x29, #-72]
  406938:	cmp	w8, #0x0
  40693c:	cset	w8, lt  // lt = tstop
  406940:	tbnz	w8, #0, 406954 <parse_ifindex@plt+0x46c4>
  406944:	stur	wzr, [x29, #-4]
  406948:	mov	w8, #0x1                   	// #1
  40694c:	stur	w8, [x29, #-76]
  406950:	b	406b50 <parse_ifindex@plt+0x48c0>
  406954:	ldur	x0, [x29, #-16]
  406958:	ldur	x8, [x29, #-24]
  40695c:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  406960:	add	x1, x1, #0x78b
  406964:	adrp	x2, 408000 <parse_ifindex@plt+0x5d70>
  406968:	add	x2, x2, #0x7a4
  40696c:	adrp	x3, 408000 <parse_ifindex@plt+0x5d70>
  406970:	add	x3, x3, #0x7be
  406974:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  406978:	add	x4, x4, #0x877
  40697c:	sub	x5, x29, #0x38
  406980:	sub	x6, x29, #0x40
  406984:	adrp	x7, 407000 <parse_ifindex@plt+0x4d70>
  406988:	add	x7, x7, #0x8ed
  40698c:	mov	x9, sp
  406990:	str	x8, [x9]
  406994:	bl	401fe0 <sd_bus_call_method@plt>
  406998:	stur	w0, [x29, #-72]
  40699c:	ldur	w10, [x29, #-72]
  4069a0:	cmp	w10, #0x0
  4069a4:	cset	w10, ge  // ge = tcont
  4069a8:	tbnz	w10, #0, 406a78 <parse_ifindex@plt+0x47e8>
  4069ac:	mov	w8, #0x3                   	// #3
  4069b0:	stur	w8, [x29, #-80]
  4069b4:	ldur	w8, [x29, #-72]
  4069b8:	stur	w8, [x29, #-84]
  4069bc:	str	wzr, [sp, #88]
  4069c0:	ldr	w0, [sp, #88]
  4069c4:	bl	401e80 <log_get_max_level_realm@plt>
  4069c8:	ldur	w8, [x29, #-80]
  4069cc:	and	w8, w8, #0x7
  4069d0:	cmp	w0, w8
  4069d4:	b.lt	406a48 <parse_ifindex@plt+0x47b8>  // b.tstop
  4069d8:	ldr	w8, [sp, #88]
  4069dc:	ldur	w9, [x29, #-80]
  4069e0:	orr	w0, w9, w8, lsl #10
  4069e4:	ldur	w1, [x29, #-84]
  4069e8:	ldur	x6, [x29, #-24]
  4069ec:	ldur	w8, [x29, #-72]
  4069f0:	sub	x10, x29, #0x38
  4069f4:	str	w0, [sp, #44]
  4069f8:	mov	x0, x10
  4069fc:	str	w1, [sp, #40]
  406a00:	mov	w1, w8
  406a04:	str	x6, [sp, #32]
  406a08:	bl	401f90 <bus_error_message@plt>
  406a0c:	ldr	w8, [sp, #44]
  406a10:	str	x0, [sp, #24]
  406a14:	mov	w0, w8
  406a18:	ldr	w1, [sp, #40]
  406a1c:	ldr	x2, [sp, #56]
  406a20:	mov	w3, #0x2d8                 	// #728
  406a24:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  406a28:	add	x4, x4, #0x885
  406a2c:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  406a30:	add	x5, x5, #0x897
  406a34:	ldr	x6, [sp, #32]
  406a38:	ldr	x7, [sp, #24]
  406a3c:	bl	401e90 <log_internal_realm@plt>
  406a40:	str	w0, [sp, #20]
  406a44:	b	406a5c <parse_ifindex@plt+0x47cc>
  406a48:	ldur	w0, [x29, #-84]
  406a4c:	bl	401ea0 <abs@plt>
  406a50:	mov	w8, wzr
  406a54:	subs	w8, w8, w0, uxtb
  406a58:	str	w8, [sp, #20]
  406a5c:	ldr	w8, [sp, #20]
  406a60:	str	w8, [sp, #84]
  406a64:	ldr	w8, [sp, #84]
  406a68:	stur	w8, [x29, #-4]
  406a6c:	mov	w8, #0x1                   	// #1
  406a70:	stur	w8, [x29, #-76]
  406a74:	b	406b50 <parse_ifindex@plt+0x48c0>
  406a78:	ldur	x0, [x29, #-64]
  406a7c:	adrp	x1, 408000 <parse_ifindex@plt+0x5d70>
  406a80:	add	x1, x1, #0x8c2
  406a84:	sub	x2, x29, #0x44
  406a88:	mov	x8, xzr
  406a8c:	mov	x3, x8
  406a90:	bl	4021b0 <sd_bus_message_read@plt>
  406a94:	stur	w0, [x29, #-72]
  406a98:	ldur	w9, [x29, #-72]
  406a9c:	cmp	w9, #0x0
  406aa0:	cset	w9, ge  // ge = tcont
  406aa4:	tbnz	w9, #0, 406b38 <parse_ifindex@plt+0x48a8>
  406aa8:	mov	w8, #0x3                   	// #3
  406aac:	str	w8, [sp, #80]
  406ab0:	ldur	w8, [x29, #-72]
  406ab4:	str	w8, [sp, #76]
  406ab8:	str	wzr, [sp, #72]
  406abc:	ldr	w0, [sp, #72]
  406ac0:	bl	401e80 <log_get_max_level_realm@plt>
  406ac4:	ldr	w8, [sp, #80]
  406ac8:	and	w8, w8, #0x7
  406acc:	cmp	w0, w8
  406ad0:	b.lt	406b08 <parse_ifindex@plt+0x4878>  // b.tstop
  406ad4:	ldr	w8, [sp, #72]
  406ad8:	ldr	w9, [sp, #80]
  406adc:	orr	w0, w9, w8, lsl #10
  406ae0:	ldr	w1, [sp, #76]
  406ae4:	ldr	x2, [sp, #56]
  406ae8:	mov	w3, #0x2dc                 	// #732
  406aec:	adrp	x4, 408000 <parse_ifindex@plt+0x5d70>
  406af0:	add	x4, x4, #0x885
  406af4:	adrp	x5, 408000 <parse_ifindex@plt+0x5d70>
  406af8:	add	x5, x5, #0x7fb
  406afc:	bl	401e90 <log_internal_realm@plt>
  406b00:	str	w0, [sp, #16]
  406b04:	b	406b1c <parse_ifindex@plt+0x488c>
  406b08:	ldr	w0, [sp, #76]
  406b0c:	bl	401ea0 <abs@plt>
  406b10:	mov	w8, wzr
  406b14:	subs	w8, w8, w0, uxtb
  406b18:	str	w8, [sp, #16]
  406b1c:	ldr	w8, [sp, #16]
  406b20:	str	w8, [sp, #68]
  406b24:	ldr	w8, [sp, #68]
  406b28:	stur	w8, [x29, #-4]
  406b2c:	mov	w8, #0x1                   	// #1
  406b30:	stur	w8, [x29, #-76]
  406b34:	b	406b50 <parse_ifindex@plt+0x48c0>
  406b38:	ldur	w8, [x29, #-68]
  406b3c:	ldur	x9, [x29, #-32]
  406b40:	str	w8, [x9]
  406b44:	stur	wzr, [x29, #-4]
  406b48:	mov	w8, #0x1                   	// #1
  406b4c:	stur	w8, [x29, #-76]
  406b50:	sub	x0, x29, #0x40
  406b54:	bl	4047dc <parse_ifindex@plt+0x254c>
  406b58:	sub	x0, x29, #0x38
  406b5c:	bl	401fa0 <sd_bus_error_free@plt>
  406b60:	ldur	w0, [x29, #-4]
  406b64:	ldp	x29, x30, [sp, #176]
  406b68:	add	sp, sp, #0xc0
  406b6c:	ret
  406b70:	sub	sp, sp, #0x10
  406b74:	str	x0, [sp, #8]
  406b78:	str	x1, [sp]
  406b7c:	ldr	x8, [sp, #8]
  406b80:	ldr	x9, [sp]
  406b84:	add	x8, x8, x9
  406b88:	subs	x8, x8, #0x1
  406b8c:	ldr	x9, [sp]
  406b90:	subs	x9, x9, #0x1
  406b94:	bic	x0, x8, x9
  406b98:	add	sp, sp, #0x10
  406b9c:	ret
  406ba0:	stp	x29, x30, [sp, #-64]!
  406ba4:	mov	x29, sp
  406ba8:	stp	x19, x20, [sp, #16]
  406bac:	adrp	x20, 41f000 <parse_ifindex@plt+0x1cd70>
  406bb0:	add	x20, x20, #0xb28
  406bb4:	stp	x21, x22, [sp, #32]
  406bb8:	adrp	x21, 41f000 <parse_ifindex@plt+0x1cd70>
  406bbc:	add	x21, x21, #0xb20
  406bc0:	sub	x20, x20, x21
  406bc4:	mov	w22, w0
  406bc8:	stp	x23, x24, [sp, #48]
  406bcc:	mov	x23, x1
  406bd0:	mov	x24, x2
  406bd4:	bl	401d88 <__libc_start_main@plt-0x38>
  406bd8:	cmp	xzr, x20, asr #3
  406bdc:	b.eq	406c08 <parse_ifindex@plt+0x4978>  // b.none
  406be0:	asr	x20, x20, #3
  406be4:	mov	x19, #0x0                   	// #0
  406be8:	ldr	x3, [x21, x19, lsl #3]
  406bec:	mov	x2, x24
  406bf0:	add	x19, x19, #0x1
  406bf4:	mov	x1, x23
  406bf8:	mov	w0, w22
  406bfc:	blr	x3
  406c00:	cmp	x20, x19
  406c04:	b.ne	406be8 <parse_ifindex@plt+0x4958>  // b.any
  406c08:	ldp	x19, x20, [sp, #16]
  406c0c:	ldp	x21, x22, [sp, #32]
  406c10:	ldp	x23, x24, [sp, #48]
  406c14:	ldp	x29, x30, [sp], #64
  406c18:	ret
  406c1c:	nop
  406c20:	ret

Disassembly of section .fini:

0000000000406c24 <.fini>:
  406c24:	stp	x29, x30, [sp, #-16]!
  406c28:	mov	x29, sp
  406c2c:	ldp	x29, x30, [sp], #16
  406c30:	ret
