
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000020a8 <.init>:
    20a8:	stp	x29, x30, [sp, #-16]!
    20ac:	mov	x29, sp
    20b0:	bl	21f0 <printf@plt+0x10>
    20b4:	ldp	x29, x30, [sp], #16
    20b8:	ret

Disassembly of section .plt:

00000000000020c0 <memcpy@plt-0x20>:
    20c0:	stp	x16, x30, [sp, #-16]!
    20c4:	adrp	x16, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    20c8:	ldr	x17, [x16, #4088]
    20cc:	add	x16, x16, #0xff8
    20d0:	br	x17
    20d4:	nop
    20d8:	nop
    20dc:	nop

00000000000020e0 <memcpy@plt>:
    20e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16]
    20e8:	add	x16, x16, #0x0
    20ec:	br	x17

00000000000020f0 <strtok@plt>:
    20f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #8]
    20f8:	add	x16, x16, #0x8
    20fc:	br	x17

0000000000002100 <strlen@plt>:
    2100:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #16]
    2108:	add	x16, x16, #0x10
    210c:	br	x17

0000000000002110 <__cxa_finalize@plt>:
    2110:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #24]
    2118:	add	x16, x16, #0x18
    211c:	br	x17

0000000000002120 <qsort@plt>:
    2120:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #32]
    2128:	add	x16, x16, #0x20
    212c:	br	x17

0000000000002130 <sqrt@plt>:
    2130:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #40]
    2138:	add	x16, x16, #0x28
    213c:	br	x17

0000000000002140 <malloc@plt>:
    2140:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #48]
    2148:	add	x16, x16, #0x30
    214c:	br	x17

0000000000002150 <wcslen@plt>:
    2150:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #56]
    2158:	add	x16, x16, #0x38
    215c:	br	x17

0000000000002160 <__gmon_start__@plt>:
    2160:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #64]
    2168:	add	x16, x16, #0x40
    216c:	br	x17

0000000000002170 <PyModule_Create2@plt>:
    2170:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #72]
    2178:	add	x16, x16, #0x48
    217c:	br	x17

0000000000002180 <puts@plt>:
    2180:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #80]
    2188:	add	x16, x16, #0x50
    218c:	br	x17

0000000000002190 <PyArg_ParseTuple@plt>:
    2190:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #88]
    2198:	add	x16, x16, #0x58
    219c:	br	x17

00000000000021a0 <free@plt>:
    21a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #96]
    21a8:	add	x16, x16, #0x60
    21ac:	br	x17

00000000000021b0 <strchr@plt>:
    21b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #104]
    21b8:	add	x16, x16, #0x68
    21bc:	br	x17

00000000000021c0 <strcpy@plt>:
    21c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #112]
    21c8:	add	x16, x16, #0x70
    21cc:	br	x17

00000000000021d0 <vfprintf@plt>:
    21d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #120]
    21d8:	add	x16, x16, #0x78
    21dc:	br	x17

00000000000021e0 <printf@plt>:
    21e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #128]
    21e8:	add	x16, x16, #0x80
    21ec:	br	x17

Disassembly of section .text:

00000000000021f0 <py_func@@Base-0x108>:
    21f0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    21f4:	ldr	x0, [x0, #4000]
    21f8:	cbz	x0, 2200 <printf@plt+0x20>
    21fc:	b	2160 <__gmon_start__@plt>
    2200:	ret
    2204:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    2208:	add	x0, x0, #0x1c0
    220c:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    2210:	add	x1, x1, #0x1c0
    2214:	cmp	x0, x1
    2218:	b.eq	2244 <printf@plt+0x64>  // b.none
    221c:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2220:	ldr	x1, [x1, #3952]
    2224:	cbz	x1, 2244 <printf@plt+0x64>
    2228:	stp	x29, x30, [sp, #-16]!
    222c:	mov	x29, sp
    2230:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    2234:	add	x0, x0, #0x1c0
    2238:	blr	x1
    223c:	ldp	x29, x30, [sp], #16
    2240:	ret
    2244:	ret
    2248:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    224c:	add	x0, x0, #0x1c0
    2250:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    2254:	add	x1, x1, #0x1c0
    2258:	sub	x0, x0, x1
    225c:	lsr	x1, x0, #63
    2260:	add	x0, x1, x0, asr #3
    2264:	cmp	xzr, x0, asr #1
    2268:	b.eq	2298 <printf@plt+0xb8>  // b.none
    226c:	asr	x1, x0, #1
    2270:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2274:	ldr	x2, [x2, #4048]
    2278:	cbz	x2, 2298 <printf@plt+0xb8>
    227c:	stp	x29, x30, [sp, #-16]!
    2280:	mov	x29, sp
    2284:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    2288:	add	x0, x0, #0x1c0
    228c:	blr	x2
    2290:	ldp	x29, x30, [sp], #16
    2294:	ret
    2298:	ret
    229c:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    22a0:	ldrb	w0, [x0, #448]
    22a4:	cbnz	w0, 22e0 <printf@plt+0x100>
    22a8:	stp	x29, x30, [sp, #-16]!
    22ac:	mov	x29, sp
    22b0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    22b4:	ldr	x0, [x0, #3960]
    22b8:	cbz	x0, 22c8 <printf@plt+0xe8>
    22bc:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    22c0:	ldr	x0, [x0, #136]
    22c4:	bl	2110 <__cxa_finalize@plt>
    22c8:	bl	2204 <printf@plt+0x24>
    22cc:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    22d0:	mov	w1, #0x1                   	// #1
    22d4:	strb	w1, [x0, #448]
    22d8:	ldp	x29, x30, [sp], #16
    22dc:	ret
    22e0:	ret
    22e4:	stp	x29, x30, [sp, #-16]!
    22e8:	mov	x29, sp
    22ec:	bl	2248 <printf@plt+0x68>
    22f0:	ldp	x29, x30, [sp], #16
    22f4:	ret

00000000000022f8 <py_func@@Base>:
    22f8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    22fc:	ldr	x0, [x0, #4008]
    2300:	ldr	x1, [x0]
    2304:	add	x1, x1, #0x1
    2308:	str	x1, [x0]
    230c:	ret
    2310:	stp	x29, x30, [sp, #-32]!
    2314:	mov	x29, sp
    2318:	stp	x19, x20, [sp, #16]
    231c:	mov	x20, x0
    2320:	mov	x19, x1
    2324:	mov	x2, x1
    2328:	mov	x1, x0
    232c:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    2330:	add	x0, x0, #0x5b0
    2334:	bl	21e0 <printf@plt>
    2338:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    233c:	add	x0, x0, #0x5c8
    2340:	bl	2180 <puts@plt>
    2344:	mov	w0, #0x20                  	// #32
    2348:	blr	x20
    234c:	mov	x20, x0
    2350:	blr	x19
    2354:	mov	x1, x20
    2358:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    235c:	add	x0, x0, #0x5d0
    2360:	bl	21e0 <printf@plt>
    2364:	ldp	x19, x20, [sp, #16]
    2368:	ldp	x29, x30, [sp], #32
    236c:	ret

0000000000002370 <py_func_si@@Base>:
    2370:	stp	x29, x30, [sp, #-32]!
    2374:	mov	x29, sp
    2378:	mov	x0, x1
    237c:	add	x3, sp, #0x14
    2380:	add	x2, sp, #0x18
    2384:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    2388:	add	x1, x1, #0x5e8
    238c:	bl	2190 <PyArg_ParseTuple@plt>
    2390:	cbz	w0, 23b0 <py_func_si@@Base+0x40>
    2394:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2398:	ldr	x0, [x0, #4008]
    239c:	ldr	x1, [x0]
    23a0:	add	x1, x1, #0x1
    23a4:	str	x1, [x0]
    23a8:	ldp	x29, x30, [sp], #32
    23ac:	ret
    23b0:	mov	x0, #0x0                   	// #0
    23b4:	b	23a8 <py_func_si@@Base+0x38>

00000000000023b8 <_testfunc_cbk_reg_int@@Base>:
    23b8:	stp	x29, x30, [sp, #-16]!
    23bc:	mov	x29, sp
    23c0:	mul	w4, w4, w4
    23c4:	mul	w3, w3, w3
    23c8:	mul	w2, w2, w2
    23cc:	mul	w1, w1, w1
    23d0:	mul	w0, w0, w0
    23d4:	blr	x5
    23d8:	ldp	x29, x30, [sp], #16
    23dc:	ret

00000000000023e0 <_testfunc_cbk_reg_double@@Base>:
    23e0:	stp	x29, x30, [sp, #-16]!
    23e4:	mov	x29, sp
    23e8:	fmul	d4, d4, d4
    23ec:	fmul	d3, d3, d3
    23f0:	fmul	d2, d2, d2
    23f4:	fmul	d1, d1, d1
    23f8:	fmul	d0, d0, d0
    23fc:	blr	x0
    2400:	ldp	x29, x30, [sp], #16
    2404:	ret

0000000000002408 <_testfunc_cbk_large_struct@@Base>:
    2408:	stp	x29, x30, [sp, #-48]!
    240c:	mov	x29, sp
    2410:	ldp	x2, x3, [x0]
    2414:	stp	x2, x3, [sp, #16]
    2418:	ldr	x0, [x0, #16]
    241c:	str	x0, [sp, #32]
    2420:	add	x0, sp, #0x10
    2424:	blr	x1
    2428:	ldp	x29, x30, [sp], #48
    242c:	ret

0000000000002430 <_testfunc_large_struct_update_value@@Base>:
    2430:	mov	x1, #0xf00d                	// #61453
    2434:	movk	x1, #0xbad, lsl #16
    2438:	str	x1, [x0]
    243c:	str	x1, [x0, #8]
    2440:	str	x1, [x0, #16]
    2444:	ret

0000000000002448 <_testfunc_reg_struct_update_value@@Base>:
    2448:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    244c:	ldr	x1, [x1, #4040]
    2450:	str	x0, [x1]
    2454:	ret

0000000000002458 <_testfunc_array_in_struct1@@Base>:
    2458:	sub	sp, sp, #0x10
    245c:	stp	x0, x1, [sp]
    2460:	mov	x1, sp
    2464:	add	x3, sp, #0x10
    2468:	mov	w0, #0x0                   	// #0
    246c:	ldrb	w2, [x1], #1
    2470:	add	w0, w0, w2
    2474:	cmp	x1, x3
    2478:	b.ne	246c <_testfunc_array_in_struct1@@Base+0x14>  // b.any
    247c:	add	sp, sp, #0x10
    2480:	ret

0000000000002484 <_testfunc_array_in_struct2@@Base>:
    2484:	movi	d2, #0x0
    2488:	fadd	d0, d0, d2
    248c:	fadd	d0, d0, d1
    2490:	ret

0000000000002494 <_testfunc_array_in_struct2a@@Base>:
    2494:	mov	x0, #0x0                   	// #0
    2498:	mov	x1, #0x0                   	// #0
    249c:	fmov	w2, s0
    24a0:	bfxil	x0, x2, #0, #32
    24a4:	fmov	w2, s1
    24a8:	bfi	x0, x2, #32, #32
    24ac:	fmov	w2, s2
    24b0:	bfxil	x1, x2, #0, #32
    24b4:	fmov	w2, s3
    24b8:	bfi	x1, x2, #32, #32
    24bc:	sxtw	x2, w0
    24c0:	fmov	d0, x2
    24c4:	fcvt	d0, s0
    24c8:	movi	d1, #0x0
    24cc:	fadd	d1, d0, d1
    24d0:	fmov	d0, x0
    24d4:	ushr	d0, d0, #32
    24d8:	fcvt	d0, s0
    24dc:	fadd	d0, d0, d1
    24e0:	sxtw	x0, w1
    24e4:	fmov	d1, x0
    24e8:	fcvt	d1, s1
    24ec:	fadd	d0, d1, d0
    24f0:	fmov	d1, x1
    24f4:	ushr	d1, d1, #32
    24f8:	fcvt	d1, s1
    24fc:	fadd	d0, d1, d0
    2500:	ret

0000000000002504 <_testfunc_union_by_value1@@Base>:
    2504:	asr	x1, x0, #32
    2508:	add	x1, x1, w0, sxtw
    250c:	add	x0, x1, x0
    2510:	ret

0000000000002514 <_testfunc_union_by_value2@@Base>:
    2514:	ldr	w1, [x0]
    2518:	ldr	w0, [x0, #8]
    251c:	add	w0, w1, w0
    2520:	sxtw	x0, w0
    2524:	ret

0000000000002528 <_testfunc_union_by_reference1@@Base>:
    2528:	mov	x1, x0
    252c:	ldr	x0, [x0]
    2530:	str	xzr, [x1]
    2534:	ret

0000000000002538 <_testfunc_union_by_reference2@@Base>:
    2538:	ldr	w1, [x0]
    253c:	ldr	w2, [x0, #4]
    2540:	add	w1, w1, w2
    2544:	str	xzr, [x0]
    2548:	sxtw	x0, w1
    254c:	ret

0000000000002550 <_testfunc_union_by_reference3@@Base>:
    2550:	ldr	w1, [x0]
    2554:	ldr	w2, [x0, #8]
    2558:	add	w1, w1, w2
    255c:	ldr	w2, [x0, #24]
    2560:	add	w1, w1, w2
    2564:	stp	xzr, xzr, [x0]
    2568:	stp	xzr, xzr, [x0, #16]
    256c:	sxtw	x0, w1
    2570:	ret

0000000000002574 <_testfunc_bitfield_by_value1@@Base>:
    2574:	sbfx	x1, x0, #0, #1
    2578:	sbfx	x2, x0, #1, #2
    257c:	add	w1, w1, w2
    2580:	sbfx	x2, x0, #3, #3
    2584:	sbfx	x0, x0, #6, #2
    2588:	add	w0, w2, w0
    258c:	add	w0, w1, w0
    2590:	sxtw	x0, w0
    2594:	ret

0000000000002598 <_testfunc_bitfield_by_reference1@@Base>:
    2598:	ldrb	w1, [x0]
    259c:	sbfx	x2, x1, #0, #1
    25a0:	sbfx	x3, x1, #1, #2
    25a4:	add	w2, w2, w3
    25a8:	sbfx	x3, x1, #3, #3
    25ac:	sbfx	x1, x1, #6, #2
    25b0:	add	w1, w3, w1
    25b4:	add	w1, w2, w1
    25b8:	str	wzr, [x0]
    25bc:	sxtw	x0, w1
    25c0:	ret

00000000000025c4 <_testfunc_bitfield_by_reference2@@Base>:
    25c4:	ldrb	w1, [x0]
    25c8:	and	w2, w1, #0x1
    25cc:	ubfx	x3, x1, #1, #2
    25d0:	add	w2, w2, w3
    25d4:	ubfx	x3, x1, #3, #3
    25d8:	ubfx	x1, x1, #6, #2
    25dc:	add	w1, w3, w1
    25e0:	add	w1, w2, w1
    25e4:	str	wzr, [x0]
    25e8:	sxtw	x0, w1
    25ec:	ret

00000000000025f0 <_testfunc_bitfield_by_value2@@Base>:
    25f0:	sbfx	x1, x0, #0, #1
    25f4:	sbfx	x2, x0, #0, #3
    25f8:	add	w1, w1, w2
    25fc:	sbfx	x0, x0, #0, #2
    2600:	add	w0, w1, w0, lsl #1
    2604:	sxtw	x0, w0
    2608:	ret

000000000000260c <testfunc_array@@Base>:
    260c:	stp	x29, x30, [sp, #-16]!
    2610:	mov	x29, sp
    2614:	ldr	w4, [x0, #12]
    2618:	ldr	w3, [x0, #8]
    261c:	ldr	w2, [x0, #4]
    2620:	ldr	w1, [x0]
    2624:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    2628:	add	x0, x0, #0x5f0
    262c:	bl	21e0 <printf@plt>
    2630:	ldp	x29, x30, [sp], #16
    2634:	ret

0000000000002638 <testfunc_Ddd@@Base>:
    2638:	stp	x29, x30, [sp, #-48]!
    263c:	mov	x29, sp
    2640:	str	d0, [sp, #40]
    2644:	str	d1, [sp, #32]
    2648:	fmul	d0, d0, d1
    264c:	bl	5430 <PyInit__ctypes_test@@Base+0x1ed8>
    2650:	str	q0, [sp, #16]
    2654:	add	x2, sp, #0x20
    2658:	add	x1, sp, #0x28
    265c:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    2660:	add	x0, x0, #0x610
    2664:	bl	21e0 <printf@plt>
    2668:	ldr	d1, [sp, #32]
    266c:	ldr	d0, [sp, #40]
    2670:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    2674:	add	x0, x0, #0x628
    2678:	bl	21e0 <printf@plt>
    267c:	ldr	q0, [sp, #16]
    2680:	ldp	x29, x30, [sp], #48
    2684:	ret

0000000000002688 <testfunc_DDD@@Base>:
    2688:	stp	x29, x30, [sp, #-64]!
    268c:	mov	x29, sp
    2690:	str	q0, [sp, #48]
    2694:	str	q1, [sp, #32]
    2698:	bl	4adc <PyInit__ctypes_test@@Base+0x1584>
    269c:	str	q0, [sp, #16]
    26a0:	add	x2, sp, #0x20
    26a4:	add	x1, sp, #0x30
    26a8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    26ac:	add	x0, x0, #0x640
    26b0:	bl	21e0 <printf@plt>
    26b4:	ldr	q1, [sp, #32]
    26b8:	ldr	q0, [sp, #48]
    26bc:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    26c0:	add	x0, x0, #0x658
    26c4:	bl	21e0 <printf@plt>
    26c8:	ldr	q0, [sp, #16]
    26cc:	ldp	x29, x30, [sp], #64
    26d0:	ret

00000000000026d4 <testfunc_iii@@Base>:
    26d4:	stp	x29, x30, [sp, #-48]!
    26d8:	mov	x29, sp
    26dc:	str	x19, [sp, #16]
    26e0:	str	w0, [sp, #44]
    26e4:	str	w1, [sp, #40]
    26e8:	mul	w19, w0, w1
    26ec:	add	x2, sp, #0x28
    26f0:	add	x1, sp, #0x2c
    26f4:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    26f8:	add	x0, x0, #0x670
    26fc:	bl	21e0 <printf@plt>
    2700:	mov	w0, w19
    2704:	ldr	x19, [sp, #16]
    2708:	ldp	x29, x30, [sp], #48
    270c:	ret

0000000000002710 <myprintf@@Base>:
    2710:	stp	x29, x30, [sp, #-304]!
    2714:	mov	x29, sp
    2718:	str	x1, [sp, #248]
    271c:	str	x2, [sp, #256]
    2720:	str	x3, [sp, #264]
    2724:	str	x4, [sp, #272]
    2728:	str	x5, [sp, #280]
    272c:	str	x6, [sp, #288]
    2730:	str	x7, [sp, #296]
    2734:	str	q0, [sp, #112]
    2738:	str	q1, [sp, #128]
    273c:	str	q2, [sp, #144]
    2740:	str	q3, [sp, #160]
    2744:	str	q4, [sp, #176]
    2748:	str	q5, [sp, #192]
    274c:	str	q6, [sp, #208]
    2750:	str	q7, [sp, #224]
    2754:	add	x1, sp, #0x130
    2758:	str	x1, [sp, #80]
    275c:	str	x1, [sp, #88]
    2760:	add	x1, sp, #0xf0
    2764:	str	x1, [sp, #96]
    2768:	mov	w1, #0xffffffc8            	// #-56
    276c:	str	w1, [sp, #104]
    2770:	mov	w1, #0xffffff80            	// #-128
    2774:	str	w1, [sp, #108]
    2778:	ldp	x4, x5, [sp, #80]
    277c:	stp	x4, x5, [sp, #48]
    2780:	ldp	x2, x3, [sp, #96]
    2784:	stp	x2, x3, [sp, #64]
    2788:	stp	x4, x5, [sp, #16]
    278c:	stp	x2, x3, [sp, #32]
    2790:	add	x2, sp, #0x10
    2794:	mov	x1, x0
    2798:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    279c:	ldr	x0, [x0, #3984]
    27a0:	ldr	x0, [x0]
    27a4:	bl	21d0 <vfprintf@plt>
    27a8:	ldp	x29, x30, [sp], #304
    27ac:	ret

00000000000027b0 <my_strtok@@Base>:
    27b0:	stp	x29, x30, [sp, #-16]!
    27b4:	mov	x29, sp
    27b8:	bl	20f0 <strtok@plt>
    27bc:	ldp	x29, x30, [sp], #16
    27c0:	ret

00000000000027c4 <my_strchr@@Base>:
    27c4:	stp	x29, x30, [sp, #-16]!
    27c8:	mov	x29, sp
    27cc:	bl	21b0 <strchr@plt>
    27d0:	ldp	x29, x30, [sp], #16
    27d4:	ret

00000000000027d8 <my_sqrt@@Base>:
    27d8:	stp	x29, x30, [sp, #-32]!
    27dc:	mov	x29, sp
    27e0:	str	d8, [sp, #16]
    27e4:	fsqrt	d8, d0
    27e8:	fcmp	d0, #0.0
    27ec:	b.mi	2800 <my_sqrt@@Base+0x28>  // b.first
    27f0:	fmov	d0, d8
    27f4:	ldr	d8, [sp, #16]
    27f8:	ldp	x29, x30, [sp], #32
    27fc:	ret
    2800:	bl	2130 <sqrt@plt>
    2804:	b	27f0 <my_sqrt@@Base+0x18>

0000000000002808 <my_qsort@@Base>:
    2808:	stp	x29, x30, [sp, #-16]!
    280c:	mov	x29, sp
    2810:	bl	2120 <qsort@plt>
    2814:	ldp	x29, x30, [sp], #16
    2818:	ret

000000000000281c <_testfunc_ai8@@Base>:
    281c:	ret

0000000000002820 <_testfunc_v@@Base>:
    2820:	add	w0, w0, w1
    2824:	str	w0, [x2]
    2828:	ret

000000000000282c <_testfunc_i_bhilfd@@Base>:
    282c:	add	w2, w2, w1, sxth
    2830:	add	w2, w2, w0, sxtb
    2834:	add	x2, x3, w2, sxtw
    2838:	scvtf	s2, x2
    283c:	fadd	s2, s2, s0
    2840:	fcvt	d2, s2
    2844:	fadd	d2, d2, d1
    2848:	fcvtzs	w0, d2
    284c:	ret

0000000000002850 <_testfunc_f_bhilfd@@Base>:
    2850:	add	w2, w2, w1, sxth
    2854:	add	w2, w2, w0, sxtb
    2858:	add	x2, x3, w2, sxtw
    285c:	scvtf	s2, x2
    2860:	fadd	s0, s2, s0
    2864:	fcvt	d0, s0
    2868:	fadd	d0, d0, d1
    286c:	fcvt	s0, d0
    2870:	ret

0000000000002874 <_testfunc_d_bhilfd@@Base>:
    2874:	add	w2, w2, w1, sxth
    2878:	add	w2, w2, w0, sxtb
    287c:	add	x2, x3, w2, sxtw
    2880:	scvtf	s2, x2
    2884:	fadd	s2, s2, s0
    2888:	fcvt	d2, s2
    288c:	fadd	d0, d2, d1
    2890:	ret

0000000000002894 <_testfunc_D_bhilfD@@Base>:
    2894:	stp	x29, x30, [sp, #-32]!
    2898:	mov	x29, sp
    289c:	str	q1, [sp, #16]
    28a0:	add	w2, w2, w1, sxth
    28a4:	add	w2, w2, w0, sxtb
    28a8:	add	x2, x3, w2, sxtw
    28ac:	scvtf	s1, x2
    28b0:	fadd	s0, s1, s0
    28b4:	bl	5374 <PyInit__ctypes_test@@Base+0x1e1c>
    28b8:	ldr	q1, [sp, #16]
    28bc:	bl	3578 <PyInit__ctypes_test@@Base+0x20>
    28c0:	ldp	x29, x30, [sp], #32
    28c4:	ret

00000000000028c8 <_testfunc_p_p@@Base>:
    28c8:	ret

00000000000028cc <_testfunc_c_p_p@@Base>:
    28cc:	ldrsw	x0, [x0]
    28d0:	add	x0, x1, x0, lsl #3
    28d4:	ldur	x0, [x0, #-8]
    28d8:	ret

00000000000028dc <get_strchr@@Base>:
    28dc:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    28e0:	ldr	x0, [x0, #4016]
    28e4:	ret

00000000000028e8 <my_strdup@@Base>:
    28e8:	stp	x29, x30, [sp, #-32]!
    28ec:	mov	x29, sp
    28f0:	stp	x19, x20, [sp, #16]
    28f4:	mov	x20, x0
    28f8:	bl	2100 <strlen@plt>
    28fc:	add	x0, x0, #0x1
    2900:	bl	2140 <malloc@plt>
    2904:	mov	x19, x0
    2908:	cbz	x0, 2914 <my_strdup@@Base+0x2c>
    290c:	mov	x1, x20
    2910:	bl	21c0 <strcpy@plt>
    2914:	mov	x0, x19
    2918:	ldp	x19, x20, [sp, #16]
    291c:	ldp	x29, x30, [sp], #32
    2920:	ret

0000000000002924 <my_free@@Base>:
    2924:	stp	x29, x30, [sp, #-16]!
    2928:	mov	x29, sp
    292c:	bl	21a0 <free@plt>
    2930:	ldp	x29, x30, [sp], #16
    2934:	ret

0000000000002938 <my_wcsdup@@Base>:
    2938:	stp	x29, x30, [sp, #-48]!
    293c:	mov	x29, sp
    2940:	stp	x19, x20, [sp, #16]
    2944:	str	x21, [sp, #32]
    2948:	mov	x21, x0
    294c:	bl	2150 <wcslen@plt>
    2950:	add	x19, x0, #0x1
    2954:	lsl	x19, x19, #2
    2958:	mov	x0, x19
    295c:	bl	2140 <malloc@plt>
    2960:	mov	x20, x0
    2964:	cbz	x0, 2974 <my_wcsdup@@Base+0x3c>
    2968:	mov	x2, x19
    296c:	mov	x1, x21
    2970:	bl	20e0 <memcpy@plt>
    2974:	mov	x0, x20
    2978:	ldp	x19, x20, [sp, #16]
    297c:	ldr	x21, [sp, #32]
    2980:	ldp	x29, x30, [sp], #48
    2984:	ret

0000000000002988 <my_wcslen@@Base>:
    2988:	stp	x29, x30, [sp, #-16]!
    298c:	mov	x29, sp
    2990:	bl	2150 <wcslen@plt>
    2994:	ldp	x29, x30, [sp], #16
    2998:	ret

000000000000299c <_testfunc_callfuncp@@Base>:
    299c:	stp	x29, x30, [sp, #-32]!
    29a0:	mov	x29, sp
    29a4:	str	x19, [sp, #16]
    29a8:	mov	x19, x0
    29ac:	ldr	x2, [x0]
    29b0:	mov	w1, #0x2                   	// #2
    29b4:	mov	w0, #0x1                   	// #1
    29b8:	blr	x2
    29bc:	ldr	x2, [x19, #8]
    29c0:	mov	w1, #0x4                   	// #4
    29c4:	mov	w0, #0x3                   	// #3
    29c8:	blr	x2
    29cc:	mov	w0, #0x0                   	// #0
    29d0:	ldr	x19, [sp, #16]
    29d4:	ldp	x29, x30, [sp], #32
    29d8:	ret

00000000000029dc <_testfunc_deref_pointer@@Base>:
    29dc:	ldr	w0, [x0]
    29e0:	ret

00000000000029e4 <_testfunc_callback_with_pointer@@Base>:
    29e4:	stp	x29, x30, [sp, #-64]!
    29e8:	mov	x29, sp
    29ec:	mov	x1, x0
    29f0:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    29f4:	add	x0, x0, #0x6f0
    29f8:	ldp	x2, x3, [x0]
    29fc:	stp	x2, x3, [sp, #24]
    2a00:	ldp	x2, x3, [x0, #16]
    2a04:	stp	x2, x3, [sp, #40]
    2a08:	ldr	x0, [x0, #32]
    2a0c:	str	x0, [sp, #56]
    2a10:	add	x0, sp, #0x18
    2a14:	blr	x1
    2a18:	ldp	x29, x30, [sp], #64
    2a1c:	ret

0000000000002a20 <_testfunc_q_bhilfdq@@Base>:
    2a20:	add	w2, w2, w1, sxth
    2a24:	add	w2, w2, w0, sxtb
    2a28:	add	x2, x3, w2, sxtw
    2a2c:	scvtf	s2, x2
    2a30:	fadd	s2, s2, s0
    2a34:	fcvt	d2, s2
    2a38:	fadd	d2, d2, d1
    2a3c:	scvtf	d1, x4
    2a40:	fadd	d2, d2, d1
    2a44:	fcvtzs	x0, d2
    2a48:	ret

0000000000002a4c <_testfunc_q_bhilfd@@Base>:
    2a4c:	add	w2, w2, w1, sxth
    2a50:	add	w2, w2, w0, sxtb
    2a54:	add	x2, x3, w2, sxtw
    2a58:	scvtf	s2, x2
    2a5c:	fadd	s2, s2, s0
    2a60:	fcvt	d2, s2
    2a64:	fadd	d2, d2, d1
    2a68:	fcvtzs	x0, d2
    2a6c:	ret

0000000000002a70 <_testfunc_callback_i_if@@Base>:
    2a70:	stp	x29, x30, [sp, #-48]!
    2a74:	mov	x29, sp
    2a78:	stp	x19, x20, [sp, #16]
    2a7c:	mov	w19, w0
    2a80:	cbz	w0, 2ac0 <_testfunc_callback_i_if@@Base+0x50>
    2a84:	str	x21, [sp, #32]
    2a88:	mov	x21, x1
    2a8c:	mov	w20, #0x0                   	// #0
    2a90:	mov	w0, w19
    2a94:	blr	x21
    2a98:	add	w20, w20, w0
    2a9c:	add	w0, w19, w19, lsr #31
    2aa0:	asr	w19, w0, #1
    2aa4:	cmp	wzr, w0, asr #1
    2aa8:	b.ne	2a90 <_testfunc_callback_i_if@@Base+0x20>  // b.any
    2aac:	ldr	x21, [sp, #32]
    2ab0:	mov	w0, w20
    2ab4:	ldp	x19, x20, [sp, #16]
    2ab8:	ldp	x29, x30, [sp], #48
    2abc:	ret
    2ac0:	mov	w20, w0
    2ac4:	b	2ab0 <_testfunc_callback_i_if@@Base+0x40>

0000000000002ac8 <_testfunc_callback_q_qf@@Base>:
    2ac8:	stp	x29, x30, [sp, #-48]!
    2acc:	mov	x29, sp
    2ad0:	stp	x19, x20, [sp, #16]
    2ad4:	mov	x19, x0
    2ad8:	cbz	x0, 2b18 <_testfunc_callback_q_qf@@Base+0x50>
    2adc:	str	x21, [sp, #32]
    2ae0:	mov	x21, x1
    2ae4:	mov	x20, #0x0                   	// #0
    2ae8:	mov	x0, x19
    2aec:	blr	x21
    2af0:	add	x20, x20, x0
    2af4:	add	x0, x19, x19, lsr #63
    2af8:	asr	x19, x0, #1
    2afc:	cmp	xzr, x0, asr #1
    2b00:	b.ne	2ae8 <_testfunc_callback_q_qf@@Base+0x20>  // b.any
    2b04:	ldr	x21, [sp, #32]
    2b08:	mov	x0, x20
    2b0c:	ldp	x19, x20, [sp, #16]
    2b10:	ldp	x29, x30, [sp], #48
    2b14:	ret
    2b18:	mov	x20, x0
    2b1c:	b	2b08 <_testfunc_callback_q_qf@@Base+0x40>

0000000000002b20 <getSPAMANDEGGS@@Base>:
    2b20:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2b24:	ldr	x1, [x1, #3992]
    2b28:	str	x1, [x0]
    2b2c:	mov	w0, #0x1                   	// #1
    2b30:	ret

0000000000002b34 <_testfunc_byval@@Base>:
    2b34:	asr	x2, x0, #32
    2b38:	cbz	x1, 2b44 <_testfunc_byval@@Base+0x10>
    2b3c:	str	w0, [x1]
    2b40:	str	w2, [x1, #4]
    2b44:	add	w0, w2, w0
    2b48:	ret

0000000000002b4c <get_an_integer@@Base>:
    2b4c:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2b50:	ldr	x0, [x0, #4056]
    2b54:	ldr	w0, [x0]
    2b58:	ret

0000000000002b5c <integrate@@Base>:
    2b5c:	stp	x29, x30, [sp, #-80]!
    2b60:	mov	x29, sp
    2b64:	str	x19, [sp, #16]
    2b68:	stp	d8, d9, [sp, #32]
    2b6c:	stp	d10, d11, [sp, #48]
    2b70:	stp	d12, d13, [sp, #64]
    2b74:	fmov	d10, d0
    2b78:	fmov	d11, d1
    2b7c:	mov	x19, x0
    2b80:	scvtf	d13, x1
    2b84:	fsub	d12, d1, d0
    2b88:	fdiv	d12, d12, d13
    2b8c:	fmov	d8, #5.000000000000000000e-01
    2b90:	fmul	d8, d12, d8
    2b94:	fadd	d8, d8, d0
    2b98:	fsub	d0, d1, d8
    2b9c:	fsub	d1, d8, d10
    2ba0:	fmul	d0, d0, d1
    2ba4:	movi	d9, #0x0
    2ba8:	fcmpe	d0, d9
    2bac:	b.le	2bf0 <integrate@@Base+0x94>
    2bb0:	fmov	d0, d8
    2bb4:	blr	x19
    2bb8:	fadd	d9, d9, d0
    2bbc:	fadd	d8, d8, d12
    2bc0:	fsub	d2, d11, d8
    2bc4:	fsub	d0, d8, d10
    2bc8:	fmul	d2, d2, d0
    2bcc:	fcmpe	d2, #0.0
    2bd0:	b.gt	2bb0 <integrate@@Base+0x54>
    2bd4:	fdiv	d0, d9, d13
    2bd8:	ldr	x19, [sp, #16]
    2bdc:	ldp	d8, d9, [sp, #32]
    2be0:	ldp	d10, d11, [sp, #48]
    2be4:	ldp	d12, d13, [sp, #64]
    2be8:	ldp	x29, x30, [sp], #80
    2bec:	ret
    2bf0:	movi	d9, #0x0
    2bf4:	b	2bd4 <integrate@@Base+0x78>

0000000000002bf8 <library_get@@Base>:
    2bf8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2bfc:	ldr	x0, [x0, #4064]
    2c00:	ret

0000000000002c04 <_py_func_si@@Base>:
    2c04:	ret

0000000000002c08 <_py_func@@Base>:
    2c08:	ret

0000000000002c0c <set_bitfields@@Base>:
    2c0c:	and	w1, w1, #0xff
    2c10:	cmp	w1, #0x49
    2c14:	b.eq	2d68 <set_bitfields@@Base+0x15c>  // b.none
    2c18:	cmp	w1, #0x49
    2c1c:	b.hi	2ca8 <set_bitfields@@Base+0x9c>  // b.pmore
    2c20:	cmp	w1, #0x45
    2c24:	b.eq	2d48 <set_bitfields@@Base+0x13c>  // b.none
    2c28:	cmp	w1, #0x45
    2c2c:	b.ls	2c48 <set_bitfields@@Base+0x3c>  // b.plast
    2c30:	cmp	w1, #0x47
    2c34:	b.eq	2d58 <set_bitfields@@Base+0x14c>  // b.none
    2c38:	cmp	w1, #0x48
    2c3c:	b.ne	2c90 <set_bitfields@@Base+0x84>  // b.any
    2c40:	strb	w2, [x0, #4]
    2c44:	b	2d34 <set_bitfields@@Base+0x128>
    2c48:	cmp	w1, #0x43
    2c4c:	b.eq	2d38 <set_bitfields@@Base+0x12c>  // b.none
    2c50:	cmp	w1, #0x43
    2c54:	b.ls	2c70 <set_bitfields@@Base+0x64>  // b.plast
    2c58:	cmp	w1, #0x44
    2c5c:	b.ne	2d34 <set_bitfields@@Base+0x128>  // b.any
    2c60:	ldrh	w1, [x0]
    2c64:	bfi	w1, w2, #6, #4
    2c68:	strh	w1, [x0]
    2c6c:	b	2d34 <set_bitfields@@Base+0x128>
    2c70:	cmp	w1, #0x41
    2c74:	b.eq	2d28 <set_bitfields@@Base+0x11c>  // b.none
    2c78:	cmp	w1, #0x42
    2c7c:	b.ne	2d34 <set_bitfields@@Base+0x128>  // b.any
    2c80:	ldrb	w1, [x0]
    2c84:	bfi	w1, w2, #1, #2
    2c88:	strb	w1, [x0]
    2c8c:	b	2d34 <set_bitfields@@Base+0x128>
    2c90:	cmp	w1, #0x46
    2c94:	b.ne	2d34 <set_bitfields@@Base+0x128>  // b.any
    2c98:	ldr	w1, [x0]
    2c9c:	bfi	w1, w2, #15, #6
    2ca0:	str	w1, [x0]
    2ca4:	b	2d34 <set_bitfields@@Base+0x128>
    2ca8:	cmp	w1, #0x50
    2cac:	b.eq	2d88 <set_bitfields@@Base+0x17c>  // b.none
    2cb0:	cmp	w1, #0x50
    2cb4:	b.ls	2cd8 <set_bitfields@@Base+0xcc>  // b.plast
    2cb8:	cmp	w1, #0x52
    2cbc:	b.eq	2d98 <set_bitfields@@Base+0x18c>  // b.none
    2cc0:	cmp	w1, #0x53
    2cc4:	b.ne	2d10 <set_bitfields@@Base+0x104>  // b.any
    2cc8:	ldrh	w1, [x0, #8]
    2ccc:	bfi	w1, w2, #6, #7
    2cd0:	strh	w1, [x0, #8]
    2cd4:	b	2d34 <set_bitfields@@Base+0x128>
    2cd8:	cmp	w1, #0x4e
    2cdc:	b.eq	2d78 <set_bitfields@@Base+0x16c>  // b.none
    2ce0:	cmp	w1, #0x4f
    2ce4:	b.ne	2cf8 <set_bitfields@@Base+0xec>  // b.any
    2ce8:	ldrb	w1, [x0, #6]
    2cec:	bfi	w1, w2, #4, #3
    2cf0:	strb	w1, [x0, #6]
    2cf4:	b	2d34 <set_bitfields@@Base+0x128>
    2cf8:	cmp	w1, #0x4d
    2cfc:	b.ne	2d34 <set_bitfields@@Base+0x128>  // b.any
    2d00:	ldrb	w1, [x0, #6]
    2d04:	bfi	w1, w2, #1, #1
    2d08:	strb	w1, [x0, #6]
    2d0c:	b	2d34 <set_bitfields@@Base+0x128>
    2d10:	cmp	w1, #0x51
    2d14:	b.ne	2d34 <set_bitfields@@Base+0x128>  // b.any
    2d18:	ldrb	w1, [x0, #7]
    2d1c:	bfi	w1, w2, #3, #5
    2d20:	strb	w1, [x0, #7]
    2d24:	b	2d34 <set_bitfields@@Base+0x128>
    2d28:	ldrb	w1, [x0]
    2d2c:	bfxil	w1, w2, #0, #1
    2d30:	strb	w1, [x0]
    2d34:	ret
    2d38:	ldrb	w1, [x0]
    2d3c:	bfi	w1, w2, #3, #3
    2d40:	strb	w1, [x0]
    2d44:	b	2d34 <set_bitfields@@Base+0x128>
    2d48:	ldrb	w1, [x0, #1]
    2d4c:	bfi	w1, w2, #2, #5
    2d50:	strb	w1, [x0, #1]
    2d54:	b	2d34 <set_bitfields@@Base+0x128>
    2d58:	ldrh	w1, [x0, #2]
    2d5c:	bfi	w1, w2, #5, #7
    2d60:	strh	w1, [x0, #2]
    2d64:	b	2d34 <set_bitfields@@Base+0x128>
    2d68:	ldr	w1, [x0, #4]
    2d6c:	bfi	w1, w2, #8, #9
    2d70:	str	w1, [x0, #4]
    2d74:	b	2d34 <set_bitfields@@Base+0x128>
    2d78:	ldrb	w1, [x0, #6]
    2d7c:	bfi	w1, w2, #2, #2
    2d80:	strb	w1, [x0, #6]
    2d84:	b	2d34 <set_bitfields@@Base+0x128>
    2d88:	ldrh	w1, [x0, #6]
    2d8c:	bfi	w1, w2, #7, #4
    2d90:	strh	w1, [x0, #6]
    2d94:	b	2d34 <set_bitfields@@Base+0x128>
    2d98:	ldrb	w1, [x0, #8]
    2d9c:	bfxil	w1, w2, #0, #6
    2da0:	strb	w1, [x0, #8]
    2da4:	b	2d34 <set_bitfields@@Base+0x128>

0000000000002da8 <unpack_bitfields@@Base>:
    2da8:	and	w1, w1, #0xff
    2dac:	cmp	w1, #0x49
    2db0:	b.eq	2ef0 <unpack_bitfields@@Base+0x148>  // b.none
    2db4:	b.hi	2e44 <unpack_bitfields@@Base+0x9c>  // b.pmore
    2db8:	cmp	w1, #0x45
    2dbc:	b.eq	2ed8 <unpack_bitfields@@Base+0x130>  // b.none
    2dc0:	b.ls	2ddc <unpack_bitfields@@Base+0x34>  // b.plast
    2dc4:	cmp	w1, #0x47
    2dc8:	b.eq	2ee4 <unpack_bitfields@@Base+0x13c>  // b.none
    2dcc:	cmp	w1, #0x48
    2dd0:	b.ne	2e28 <unpack_bitfields@@Base+0x80>  // b.any
    2dd4:	ldrsb	w0, [x0, #4]
    2dd8:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2ddc:	cmp	w1, #0x43
    2de0:	b.eq	2ecc <unpack_bitfields@@Base+0x124>  // b.none
    2de4:	b.ls	2dfc <unpack_bitfields@@Base+0x54>  // b.plast
    2de8:	cmp	w1, #0x44
    2dec:	b.ne	2e20 <unpack_bitfields@@Base+0x78>  // b.any
    2df0:	ldrh	w0, [x0]
    2df4:	sbfx	x0, x0, #6, #4
    2df8:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2dfc:	cmp	w1, #0x41
    2e00:	b.eq	2ec0 <unpack_bitfields@@Base+0x118>  // b.none
    2e04:	cmp	w1, #0x42
    2e08:	b.ne	2e18 <unpack_bitfields@@Base+0x70>  // b.any
    2e0c:	ldrb	w0, [x0]
    2e10:	sbfx	x0, x0, #1, #2
    2e14:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2e18:	mov	w0, #0x3e7                 	// #999
    2e1c:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2e20:	mov	w0, #0x3e7                 	// #999
    2e24:	ret
    2e28:	cmp	w1, #0x46
    2e2c:	b.ne	2e3c <unpack_bitfields@@Base+0x94>  // b.any
    2e30:	ldr	w0, [x0]
    2e34:	sbfx	x0, x0, #15, #6
    2e38:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2e3c:	mov	w0, #0x3e7                 	// #999
    2e40:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2e44:	cmp	w1, #0x50
    2e48:	b.eq	2f08 <unpack_bitfields@@Base+0x160>  // b.none
    2e4c:	b.ls	2e6c <unpack_bitfields@@Base+0xc4>  // b.plast
    2e50:	cmp	w1, #0x52
    2e54:	b.eq	2f14 <unpack_bitfields@@Base+0x16c>  // b.none
    2e58:	cmp	w1, #0x53
    2e5c:	b.ne	2ea4 <unpack_bitfields@@Base+0xfc>  // b.any
    2e60:	ldrh	w0, [x0, #8]
    2e64:	sbfx	x0, x0, #6, #7
    2e68:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2e6c:	cmp	w1, #0x4e
    2e70:	b.eq	2efc <unpack_bitfields@@Base+0x154>  // b.none
    2e74:	cmp	w1, #0x4f
    2e78:	b.ne	2e88 <unpack_bitfields@@Base+0xe0>  // b.any
    2e7c:	ldrb	w0, [x0, #6]
    2e80:	sbfx	x0, x0, #4, #3
    2e84:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2e88:	cmp	w1, #0x4d
    2e8c:	b.ne	2e9c <unpack_bitfields@@Base+0xf4>  // b.any
    2e90:	ldrb	w0, [x0, #6]
    2e94:	sbfx	x0, x0, #1, #1
    2e98:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2e9c:	mov	w0, #0x3e7                 	// #999
    2ea0:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2ea4:	cmp	w1, #0x51
    2ea8:	b.ne	2eb8 <unpack_bitfields@@Base+0x110>  // b.any
    2eac:	ldrb	w0, [x0, #7]
    2eb0:	sbfx	x0, x0, #3, #5
    2eb4:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2eb8:	mov	w0, #0x3e7                 	// #999
    2ebc:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2ec0:	ldrb	w0, [x0]
    2ec4:	sbfx	x0, x0, #0, #1
    2ec8:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2ecc:	ldrb	w0, [x0]
    2ed0:	sbfx	x0, x0, #3, #3
    2ed4:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2ed8:	ldrb	w0, [x0, #1]
    2edc:	sbfx	x0, x0, #2, #5
    2ee0:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2ee4:	ldrh	w0, [x0, #2]
    2ee8:	sbfx	x0, x0, #5, #7
    2eec:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2ef0:	ldr	w0, [x0, #4]
    2ef4:	sbfx	x0, x0, #8, #9
    2ef8:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2efc:	ldrb	w0, [x0, #6]
    2f00:	sbfx	x0, x0, #2, #2
    2f04:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2f08:	ldrh	w0, [x0, #6]
    2f0c:	sbfx	x0, x0, #7, #4
    2f10:	b	2e24 <unpack_bitfields@@Base+0x7c>
    2f14:	ldrb	w0, [x0, #8]
    2f18:	sbfx	x0, x0, #0, #6
    2f1c:	b	2e24 <unpack_bitfields@@Base+0x7c>

0000000000002f20 <tf_b@@Base>:
    2f20:	sxtb	w1, w0
    2f24:	sxtb	x0, w0
    2f28:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2f2c:	ldr	x2, [x2, #4024]
    2f30:	str	x0, [x2]
    2f34:	mov	w0, #0x5556                	// #21846
    2f38:	movk	w0, #0x5555, lsl #16
    2f3c:	smull	x0, w1, w0
    2f40:	lsr	x0, x0, #32
    2f44:	sub	w0, w0, w1, asr #31
    2f48:	ret

0000000000002f4c <tf_B@@Base>:
    2f4c:	and	w1, w0, #0xff
    2f50:	and	x0, x0, #0xff
    2f54:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2f58:	ldr	x2, [x2, #4032]
    2f5c:	str	x0, [x2]
    2f60:	mov	w0, #0xaaab                	// #43691
    2f64:	movk	w0, #0xaaaa, lsl #16
    2f68:	umull	x0, w1, w0
    2f6c:	ubfx	x0, x0, #33, #8
    2f70:	ret

0000000000002f74 <tf_h@@Base>:
    2f74:	sxth	w1, w0
    2f78:	sxth	x0, w0
    2f7c:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2f80:	ldr	x2, [x2, #4024]
    2f84:	str	x0, [x2]
    2f88:	mov	w0, #0x5556                	// #21846
    2f8c:	movk	w0, #0x5555, lsl #16
    2f90:	smull	x0, w1, w0
    2f94:	lsr	x0, x0, #32
    2f98:	sub	w0, w0, w1, asr #31
    2f9c:	ret

0000000000002fa0 <tf_H@@Base>:
    2fa0:	and	w1, w0, #0xffff
    2fa4:	and	x0, x0, #0xffff
    2fa8:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2fac:	ldr	x2, [x2, #4032]
    2fb0:	str	x0, [x2]
    2fb4:	mov	w0, #0xaaab                	// #43691
    2fb8:	movk	w0, #0xaaaa, lsl #16
    2fbc:	umull	x0, w1, w0
    2fc0:	ubfx	x0, x0, #33, #16
    2fc4:	ret

0000000000002fc8 <tf_i@@Base>:
    2fc8:	sxtw	x2, w0
    2fcc:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2fd0:	ldr	x1, [x1, #4024]
    2fd4:	str	x2, [x1]
    2fd8:	mov	w1, #0x5556                	// #21846
    2fdc:	movk	w1, #0x5555, lsl #16
    2fe0:	smull	x1, w0, w1
    2fe4:	lsr	x1, x1, #32
    2fe8:	sub	w0, w1, w0, asr #31
    2fec:	ret

0000000000002ff0 <tf_I@@Base>:
    2ff0:	mov	w2, w0
    2ff4:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    2ff8:	ldr	x1, [x1, #4032]
    2ffc:	str	x2, [x1]
    3000:	mov	w1, #0xaaab                	// #43691
    3004:	movk	w1, #0xaaaa, lsl #16
    3008:	umull	x0, w0, w1
    300c:	lsr	x0, x0, #33
    3010:	ret

0000000000003014 <tf_l@@Base>:
    3014:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3018:	ldr	x1, [x1, #4024]
    301c:	str	x0, [x1]
    3020:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    3024:	movk	x1, #0x5556
    3028:	smulh	x1, x0, x1
    302c:	sub	x0, x1, x0, asr #63
    3030:	ret

0000000000003034 <tf_L@@Base>:
    3034:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3038:	ldr	x1, [x1, #4032]
    303c:	str	x0, [x1]
    3040:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3044:	movk	x1, #0xaaab
    3048:	umulh	x0, x0, x1
    304c:	lsr	x0, x0, #1
    3050:	ret

0000000000003054 <tf_q@@Base>:
    3054:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3058:	ldr	x1, [x1, #4024]
    305c:	str	x0, [x1]
    3060:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    3064:	movk	x1, #0x5556
    3068:	smulh	x1, x0, x1
    306c:	sub	x0, x1, x0, asr #63
    3070:	ret

0000000000003074 <tf_Q@@Base>:
    3074:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3078:	ldr	x1, [x1, #4032]
    307c:	str	x0, [x1]
    3080:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3084:	movk	x1, #0xaaab
    3088:	umulh	x0, x0, x1
    308c:	lsr	x0, x0, #1
    3090:	ret

0000000000003094 <tf_f@@Base>:
    3094:	fcvtzs	x1, s0
    3098:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    309c:	ldr	x0, [x0, #4024]
    30a0:	str	x1, [x0]
    30a4:	fmov	s1, #3.000000000000000000e+00
    30a8:	fdiv	s0, s0, s1
    30ac:	ret

00000000000030b0 <tf_d@@Base>:
    30b0:	fcvtzs	d1, d0
    30b4:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    30b8:	ldr	x0, [x0, #4024]
    30bc:	str	d1, [x0]
    30c0:	fmov	d1, #3.000000000000000000e+00
    30c4:	fdiv	d0, d0, d1
    30c8:	ret

00000000000030cc <tf_D@@Base>:
    30cc:	stp	x29, x30, [sp, #-32]!
    30d0:	mov	x29, sp
    30d4:	str	q0, [sp, #16]
    30d8:	bl	5230 <PyInit__ctypes_test@@Base+0x1cd8>
    30dc:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    30e0:	ldr	x1, [x1, #4024]
    30e4:	str	x0, [x1]
    30e8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    30ec:	add	x0, x0, #0x6e0
    30f0:	ldr	q1, [x0]
    30f4:	ldr	q0, [sp, #16]
    30f8:	bl	4228 <PyInit__ctypes_test@@Base+0xcd0>
    30fc:	ldp	x29, x30, [sp], #32
    3100:	ret

0000000000003104 <tf_bb@@Base>:
    3104:	sxtb	w2, w1
    3108:	sxtb	x1, w1
    310c:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3110:	ldr	x0, [x0, #4024]
    3114:	str	x1, [x0]
    3118:	mov	w0, #0x5556                	// #21846
    311c:	movk	w0, #0x5555, lsl #16
    3120:	smull	x0, w2, w0
    3124:	lsr	x0, x0, #32
    3128:	sub	w0, w0, w2, asr #31
    312c:	ret

0000000000003130 <tf_bB@@Base>:
    3130:	and	w0, w1, #0xff
    3134:	and	x1, x1, #0xff
    3138:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    313c:	ldr	x2, [x2, #4032]
    3140:	str	x1, [x2]
    3144:	mov	w1, #0xaaab                	// #43691
    3148:	movk	w1, #0xaaaa, lsl #16
    314c:	umull	x0, w0, w1
    3150:	ubfx	x0, x0, #33, #8
    3154:	ret

0000000000003158 <tf_bh@@Base>:
    3158:	sxth	w2, w1
    315c:	sxth	x1, w1
    3160:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3164:	ldr	x0, [x0, #4024]
    3168:	str	x1, [x0]
    316c:	mov	w0, #0x5556                	// #21846
    3170:	movk	w0, #0x5555, lsl #16
    3174:	smull	x0, w2, w0
    3178:	lsr	x0, x0, #32
    317c:	sub	w0, w0, w2, asr #31
    3180:	ret

0000000000003184 <tf_bH@@Base>:
    3184:	and	w0, w1, #0xffff
    3188:	and	x1, x1, #0xffff
    318c:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3190:	ldr	x2, [x2, #4032]
    3194:	str	x1, [x2]
    3198:	mov	w1, #0xaaab                	// #43691
    319c:	movk	w1, #0xaaaa, lsl #16
    31a0:	umull	x0, w0, w1
    31a4:	ubfx	x0, x0, #33, #16
    31a8:	ret

00000000000031ac <tf_bi@@Base>:
    31ac:	sxtw	x2, w1
    31b0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    31b4:	ldr	x0, [x0, #4024]
    31b8:	str	x2, [x0]
    31bc:	mov	w0, #0x5556                	// #21846
    31c0:	movk	w0, #0x5555, lsl #16
    31c4:	smull	x0, w1, w0
    31c8:	lsr	x0, x0, #32
    31cc:	sub	w0, w0, w1, asr #31
    31d0:	ret

00000000000031d4 <tf_bI@@Base>:
    31d4:	mov	w2, w1
    31d8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    31dc:	ldr	x0, [x0, #4032]
    31e0:	str	x2, [x0]
    31e4:	mov	w0, #0xaaab                	// #43691
    31e8:	movk	w0, #0xaaaa, lsl #16
    31ec:	umull	x0, w1, w0
    31f0:	lsr	x0, x0, #33
    31f4:	ret

00000000000031f8 <tf_bl@@Base>:
    31f8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    31fc:	ldr	x0, [x0, #4024]
    3200:	str	x1, [x0]
    3204:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    3208:	movk	x0, #0x5556
    320c:	smulh	x0, x1, x0
    3210:	sub	x0, x0, x1, asr #63
    3214:	ret

0000000000003218 <tf_bL@@Base>:
    3218:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    321c:	ldr	x0, [x0, #4032]
    3220:	str	x1, [x0]
    3224:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3228:	movk	x0, #0xaaab
    322c:	umulh	x0, x1, x0
    3230:	lsr	x0, x0, #1
    3234:	ret

0000000000003238 <tf_bq@@Base>:
    3238:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    323c:	ldr	x0, [x0, #4024]
    3240:	str	x1, [x0]
    3244:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    3248:	movk	x0, #0x5556
    324c:	smulh	x0, x1, x0
    3250:	sub	x0, x0, x1, asr #63
    3254:	ret

0000000000003258 <tf_bQ@@Base>:
    3258:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    325c:	ldr	x0, [x0, #4032]
    3260:	str	x1, [x0]
    3264:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3268:	movk	x0, #0xaaab
    326c:	umulh	x0, x1, x0
    3270:	lsr	x0, x0, #1
    3274:	ret

0000000000003278 <tf_bf@@Base>:
    3278:	fcvtzs	x1, s0
    327c:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3280:	ldr	x0, [x0, #4024]
    3284:	str	x1, [x0]
    3288:	fmov	s1, #3.000000000000000000e+00
    328c:	fdiv	s0, s0, s1
    3290:	ret

0000000000003294 <tf_bd@@Base>:
    3294:	fcvtzs	d1, d0
    3298:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    329c:	ldr	x0, [x0, #4024]
    32a0:	str	d1, [x0]
    32a4:	fmov	d1, #3.000000000000000000e+00
    32a8:	fdiv	d0, d0, d1
    32ac:	ret

00000000000032b0 <tf_bD@@Base>:
    32b0:	stp	x29, x30, [sp, #-32]!
    32b4:	mov	x29, sp
    32b8:	str	q0, [sp, #16]
    32bc:	bl	5230 <PyInit__ctypes_test@@Base+0x1cd8>
    32c0:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    32c4:	ldr	x1, [x1, #4024]
    32c8:	str	x0, [x1]
    32cc:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1aa8>
    32d0:	add	x0, x0, #0x6e0
    32d4:	ldr	q1, [x0]
    32d8:	ldr	q0, [sp, #16]
    32dc:	bl	4228 <PyInit__ctypes_test@@Base+0xcd0>
    32e0:	ldp	x29, x30, [sp], #32
    32e4:	ret

00000000000032e8 <tv_i@@Base>:
    32e8:	sxtw	x0, w0
    32ec:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    32f0:	ldr	x1, [x1, #4024]
    32f4:	str	x0, [x1]
    32f8:	ret

00000000000032fc <PointInRect@@Base>:
    32fc:	mov	x3, x0
    3300:	ldr	x0, [x0]
    3304:	cmp	x0, x1
    3308:	b.gt	3338 <PointInRect@@Base+0x3c>
    330c:	ldr	x4, [x3, #16]
    3310:	mov	w0, #0x0                   	// #0
    3314:	cmp	x4, x1
    3318:	b.lt	333c <PointInRect@@Base+0x40>  // b.tstop
    331c:	ldr	x1, [x3, #8]
    3320:	cmp	x1, x2
    3324:	b.gt	333c <PointInRect@@Base+0x40>
    3328:	ldr	x0, [x3, #24]
    332c:	cmp	x0, x2
    3330:	cset	w0, ge  // ge = tcont
    3334:	b	333c <PointInRect@@Base+0x40>
    3338:	mov	w0, #0x0                   	// #0
    333c:	ret

0000000000003340 <ReturnRect@@Base>:
    3340:	ldr	x13, [sp]
    3344:	ldr	x12, [sp, #8]
    3348:	ldr	x11, [sp, #16]
    334c:	ldr	x10, [x1]
    3350:	ldr	x7, [x6]
    3354:	ldr	x9, [x11]
    3358:	add	x7, x7, x9
    335c:	ldr	x9, [x5]
    3360:	add	x9, x10, x9
    3364:	add	x7, x7, x9
    3368:	ldr	x9, [x2]
    336c:	add	x7, x7, x9
    3370:	adrp	x9, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    3374:	ldr	x9, [x9, #3968]
    3378:	ldr	x9, [x9]
    337c:	add	x9, x9, x9, lsl #2
    3380:	cmp	x7, x9
    3384:	b.eq	33a4 <ReturnRect@@Base+0x64>  // b.none
    3388:	mov	x0, #0x64                  	// #100
    338c:	str	x0, [x1]
    3390:	ldp	x2, x3, [x1]
    3394:	stp	x2, x3, [x8]
    3398:	ldp	x0, x1, [x1, #16]
    339c:	stp	x0, x1, [x8, #16]
    33a0:	ret
    33a4:	ldr	x7, [x5, #16]
    33a8:	ldr	x9, [x1, #16]
    33ac:	add	x7, x7, x9
    33b0:	ldr	x6, [x6, #16]
    33b4:	ldr	x9, [x11, #16]
    33b8:	add	x6, x6, x9
    33bc:	add	x6, x7, x6
    33c0:	ldr	x2, [x2, #16]
    33c4:	add	x2, x6, x2
    33c8:	adrp	x6, 16000 <PyInit__ctypes_test@@Base+0x12aa8>
    33cc:	ldr	x6, [x6, #3976]
    33d0:	ldr	x6, [x6]
    33d4:	add	x6, x6, x6, lsl #2
    33d8:	cmp	x2, x6
    33dc:	b.eq	33fc <ReturnRect@@Base+0xbc>  // b.none
    33e0:	mov	x0, #0x64                  	// #100
    33e4:	str	x0, [x1, #16]
    33e8:	ldp	x2, x3, [x1]
    33ec:	stp	x2, x3, [x8]
    33f0:	ldp	x0, x1, [x1, #16]
    33f4:	stp	x0, x1, [x8, #16]
    33f8:	b	33a0 <ReturnRect@@Base+0x60>
    33fc:	cmp	x3, x13
    3400:	mov	x2, #0xffffffffffffff9c    	// #-100
    3404:	csel	x10, x10, x2, eq  // eq = none
    3408:	cmp	x4, x12
    340c:	mov	x2, #0xffffffffffffff38    	// #-200
    3410:	csel	x10, x10, x2, eq  // eq = none
    3414:	cmp	w0, #0x1
    3418:	b.eq	3458 <ReturnRect@@Base+0x118>  // b.none
    341c:	cmp	w0, #0x2
    3420:	b.eq	346c <ReturnRect@@Base+0x12c>  // b.none
    3424:	cbz	w0, 3440 <ReturnRect@@Base+0x100>
    3428:	str	x10, [x1]
    342c:	ldp	x2, x3, [x1]
    3430:	stp	x2, x3, [x8]
    3434:	ldp	x0, x1, [x1, #16]
    3438:	stp	x0, x1, [x8, #16]
    343c:	b	33a0 <ReturnRect@@Base+0x60>
    3440:	str	x10, [x1]
    3444:	ldp	x2, x3, [x1]
    3448:	stp	x2, x3, [x8]
    344c:	ldp	x0, x1, [x1, #16]
    3450:	stp	x0, x1, [x8, #16]
    3454:	b	33a0 <ReturnRect@@Base+0x60>
    3458:	ldp	x0, x1, [x5]
    345c:	stp	x0, x1, [x8]
    3460:	ldp	x0, x1, [x5, #16]
    3464:	stp	x0, x1, [x8, #16]
    3468:	b	33a0 <ReturnRect@@Base+0x60>
    346c:	ldp	x0, x1, [x11]
    3470:	stp	x0, x1, [x8]
    3474:	ldp	x0, x1, [x11, #16]
    3478:	stp	x0, x1, [x8, #16]
    347c:	b	33a0 <ReturnRect@@Base+0x60>

0000000000003480 <ret_2h_func@@Base>:
    3480:	sbfx	x2, x0, #16, #16
    3484:	ubfiz	w1, w2, #1, #15
    3488:	add	w1, w1, w2
    348c:	ubfiz	w0, w0, #1, #15
    3490:	orr	w0, w0, w1, lsl #16
    3494:	ret

0000000000003498 <ret_8i_func@@Base>:
    3498:	ldr	w1, [x0, #4]
    349c:	add	w4, w1, w1, lsl #1
    34a0:	ldr	w7, [x0, #8]
    34a4:	lsl	w7, w7, #2
    34a8:	ldr	w1, [x0, #12]
    34ac:	add	w3, w1, w1, lsl #2
    34b0:	ldr	w1, [x0, #16]
    34b4:	add	w1, w1, w1, lsl #1
    34b8:	lsl	w1, w1, #1
    34bc:	ldr	w2, [x0, #20]
    34c0:	lsl	w6, w2, #3
    34c4:	sub	w6, w6, w2
    34c8:	ldr	w5, [x0, #24]
    34cc:	lsl	w5, w5, #3
    34d0:	ldr	w2, [x0, #28]
    34d4:	add	w2, w2, w2, lsl #3
    34d8:	ldr	w0, [x0]
    34dc:	lsl	w0, w0, #1
    34e0:	str	w0, [x8]
    34e4:	str	w4, [x8, #4]
    34e8:	str	w7, [x8, #8]
    34ec:	str	w3, [x8, #12]
    34f0:	str	w1, [x8, #16]
    34f4:	str	w6, [x8, #20]
    34f8:	str	w5, [x8, #24]
    34fc:	str	w2, [x8, #28]
    3500:	ret

0000000000003504 <GetRectangle@@Base>:
    3504:	cbz	w0, 3538 <GetRectangle@@Base+0x34>
    3508:	sxtw	x2, w0
    350c:	str	x2, [x1]
    3510:	add	w2, w0, #0x1
    3514:	sxtw	x2, w2
    3518:	str	x2, [x1, #8]
    351c:	add	w2, w0, #0x2
    3520:	sxtw	x2, w2
    3524:	str	x2, [x1, #16]
    3528:	add	w0, w0, #0x3
    352c:	sxtw	x0, w0
    3530:	str	x0, [x1, #24]
    3534:	mov	w0, #0x1                   	// #1
    3538:	ret

000000000000353c <TwoOutArgs@@Base>:
    353c:	ldr	w4, [x1]
    3540:	add	w4, w4, w0
    3544:	str	w4, [x1]
    3548:	ldr	w0, [x3]
    354c:	add	w0, w0, w2
    3550:	str	w0, [x3]
    3554:	ret

0000000000003558 <PyInit__ctypes_test@@Base>:
    3558:	stp	x29, x30, [sp, #-16]!
    355c:	mov	x29, sp
    3560:	mov	w1, #0x3f5                 	// #1013
    3564:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13aa8>
    3568:	add	x0, x0, #0x130
    356c:	bl	2170 <PyModule_Create2@plt>
    3570:	ldp	x29, x30, [sp], #16
    3574:	ret
    3578:	stp	x29, x30, [sp, #-32]!
    357c:	mov	x29, sp
    3580:	str	q0, [sp, #16]
    3584:	ldr	x6, [sp, #16]
    3588:	ldr	x4, [sp, #24]
    358c:	str	q1, [sp, #16]
    3590:	ldr	x7, [sp, #16]
    3594:	ldr	x0, [sp, #24]
    3598:	mrs	x11, fpcr
    359c:	ubfx	x5, x4, #48, #15
    35a0:	mov	x9, x5
    35a4:	lsr	x10, x4, #63
    35a8:	ubfiz	x1, x4, #3, #48
    35ac:	orr	x1, x1, x6, lsr #61
    35b0:	lsl	x3, x6, #3
    35b4:	ubfx	x8, x0, #48, #15
    35b8:	mov	x13, x8
    35bc:	lsr	x14, x0, #63
    35c0:	ubfiz	x0, x0, #3, #48
    35c4:	orr	x2, x0, x7, lsr #61
    35c8:	lsl	x12, x7, #3
    35cc:	cmp	x14, x4, lsr #63
    35d0:	b.eq	3618 <PyInit__ctypes_test@@Base+0xc0>  // b.none
    35d4:	sub	w0, w5, w8
    35d8:	cmp	w0, #0x0
    35dc:	b.le	3b80 <PyInit__ctypes_test@@Base+0x628>
    35e0:	cbnz	x8, 3a70 <PyInit__ctypes_test@@Base+0x518>
    35e4:	orr	x4, x2, x12
    35e8:	cbz	x4, 3a38 <PyInit__ctypes_test@@Base+0x4e0>
    35ec:	subs	w0, w0, #0x1
    35f0:	b.eq	3a60 <PyInit__ctypes_test@@Base+0x508>  // b.none
    35f4:	mov	x4, #0x7fff                	// #32767
    35f8:	cmp	x5, x4
    35fc:	b.ne	3a80 <PyInit__ctypes_test@@Base+0x528>  // b.any
    3600:	orr	x0, x1, x3
    3604:	cbz	x0, 4180 <PyInit__ctypes_test@@Base+0xc28>
    3608:	lsr	x0, x1, #50
    360c:	eor	x0, x0, #0x1
    3610:	and	w0, w0, #0x1
    3614:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3618:	sub	w0, w5, w8
    361c:	cmp	w0, #0x0
    3620:	b.le	375c <PyInit__ctypes_test@@Base+0x204>
    3624:	cbnz	x8, 3690 <PyInit__ctypes_test@@Base+0x138>
    3628:	orr	x4, x2, x12
    362c:	cbz	x4, 365c <PyInit__ctypes_test@@Base+0x104>
    3630:	subs	w0, w0, #0x1
    3634:	b.eq	3684 <PyInit__ctypes_test@@Base+0x12c>  // b.none
    3638:	mov	x4, #0x7fff                	// #32767
    363c:	cmp	x5, x4
    3640:	b.ne	36a0 <PyInit__ctypes_test@@Base+0x148>  // b.any
    3644:	orr	x0, x1, x3
    3648:	cbz	x0, 40cc <PyInit__ctypes_test@@Base+0xb74>
    364c:	lsr	x0, x1, #50
    3650:	eor	x0, x0, #0x1
    3654:	and	w0, w0, #0x1
    3658:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    365c:	mov	x4, x3
    3660:	mov	x0, #0x7fff                	// #32767
    3664:	cmp	x5, x0
    3668:	b.ne	3ef0 <PyInit__ctypes_test@@Base+0x998>  // b.any
    366c:	orr	x0, x1, x3
    3670:	cbz	x0, 40bc <PyInit__ctypes_test@@Base+0xb64>
    3674:	lsr	x0, x1, #50
    3678:	eor	x0, x0, #0x1
    367c:	and	w0, w0, #0x1
    3680:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3684:	adds	x4, x3, x12
    3688:	adc	x1, x2, x1
    368c:	b	36e0 <PyInit__ctypes_test@@Base+0x188>
    3690:	orr	x2, x2, #0x8000000000000
    3694:	mov	x4, #0x7fff                	// #32767
    3698:	cmp	x5, x4
    369c:	b.eq	3710 <PyInit__ctypes_test@@Base+0x1b8>  // b.none
    36a0:	cmp	w0, #0x74
    36a4:	b.gt	4078 <PyInit__ctypes_test@@Base+0xb20>
    36a8:	cmp	w0, #0x3f
    36ac:	b.gt	3728 <PyInit__ctypes_test@@Base+0x1d0>
    36b0:	mov	w5, #0x40                  	// #64
    36b4:	sub	w5, w5, w0
    36b8:	lsl	x4, x2, x5
    36bc:	lsr	x6, x12, x0
    36c0:	orr	x4, x4, x6
    36c4:	lsl	x5, x12, x5
    36c8:	cmp	x5, #0x0
    36cc:	cset	x5, ne  // ne = any
    36d0:	orr	x4, x4, x5
    36d4:	lsr	x0, x2, x0
    36d8:	adds	x4, x4, x3
    36dc:	adc	x1, x0, x1
    36e0:	tbz	x1, #51, 3ef0 <PyInit__ctypes_test@@Base+0x998>
    36e4:	add	x9, x9, #0x1
    36e8:	mov	x0, #0x7fff                	// #32767
    36ec:	cmp	x9, x0
    36f0:	b.eq	3a00 <PyInit__ctypes_test@@Base+0x4a8>  // b.none
    36f4:	and	x0, x1, #0xfff7ffffffffffff
    36f8:	and	x3, x4, #0x1
    36fc:	orr	x3, x3, x4, lsr #1
    3700:	orr	x3, x3, x1, lsl #63
    3704:	lsr	x1, x0, #1
    3708:	mov	w0, #0x0                   	// #0
    370c:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3710:	orr	x0, x1, x3
    3714:	cbz	x0, 40dc <PyInit__ctypes_test@@Base+0xb84>
    3718:	lsr	x0, x1, #50
    371c:	eor	x0, x0, #0x1
    3720:	and	w0, w0, #0x1
    3724:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3728:	sub	w4, w0, #0x40
    372c:	lsr	x4, x2, x4
    3730:	mov	w5, #0x80                  	// #128
    3734:	sub	w5, w5, w0
    3738:	lsl	x2, x2, x5
    373c:	cmp	w0, #0x40
    3740:	csel	x0, x2, xzr, ne  // ne = any
    3744:	orr	x12, x0, x12
    3748:	cmp	x12, #0x0
    374c:	cset	x0, ne  // ne = any
    3750:	orr	x4, x4, x0
    3754:	mov	x0, #0x0                   	// #0
    3758:	b	36d8 <PyInit__ctypes_test@@Base+0x180>
    375c:	tbnz	w0, #31, 37a0 <PyInit__ctypes_test@@Base+0x248>
    3760:	add	x0, x5, #0x1
    3764:	tst	x0, #0x7ffe
    3768:	b.ne	39a0 <PyInit__ctypes_test@@Base+0x448>  // b.any
    376c:	cbnz	x5, 38ec <PyInit__ctypes_test@@Base+0x394>
    3770:	orr	x0, x1, x3
    3774:	cbz	x0, 406c <PyInit__ctypes_test@@Base+0xb14>
    3778:	orr	x0, x2, x12
    377c:	cbz	x0, 41e0 <PyInit__ctypes_test@@Base+0xc88>
    3780:	adds	x4, x3, x12
    3784:	adc	x1, x2, x1
    3788:	tbz	x1, #51, 3ef4 <PyInit__ctypes_test@@Base+0x99c>
    378c:	and	x1, x1, #0xfff7ffffffffffff
    3790:	mov	x3, x4
    3794:	mov	x9, #0x1                   	// #1
    3798:	mov	w0, #0x0                   	// #0
    379c:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    37a0:	cbnz	x5, 3838 <PyInit__ctypes_test@@Base+0x2e0>
    37a4:	orr	x4, x1, x3
    37a8:	cbz	x4, 37e8 <PyInit__ctypes_test@@Base+0x290>
    37ac:	cmn	w0, #0x1
    37b0:	b.eq	3828 <PyInit__ctypes_test@@Base+0x2d0>  // b.none
    37b4:	mvn	w0, w0
    37b8:	mov	x4, #0x7fff                	// #32767
    37bc:	cmp	x8, x4
    37c0:	b.ne	384c <PyInit__ctypes_test@@Base+0x2f4>  // b.any
    37c4:	orr	x3, x2, x12
    37c8:	cbz	x3, 40f8 <PyInit__ctypes_test@@Base+0xba0>
    37cc:	lsr	x0, x2, #50
    37d0:	eor	x0, x0, #0x1
    37d4:	and	w0, w0, #0x1
    37d8:	mov	x1, x2
    37dc:	mov	x3, x12
    37e0:	mov	x9, x8
    37e4:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    37e8:	mov	x0, #0x7fff                	// #32767
    37ec:	cmp	x8, x0
    37f0:	b.eq	3804 <PyInit__ctypes_test@@Base+0x2ac>  // b.none
    37f4:	mov	x1, x2
    37f8:	mov	x4, x12
    37fc:	mov	x9, x8
    3800:	b	3ef0 <PyInit__ctypes_test@@Base+0x998>
    3804:	orr	x3, x2, x12
    3808:	cbz	x3, 40ec <PyInit__ctypes_test@@Base+0xb94>
    380c:	lsr	x0, x2, #50
    3810:	eor	x0, x0, #0x1
    3814:	and	w0, w0, #0x1
    3818:	mov	x1, x2
    381c:	mov	x3, x12
    3820:	mov	x9, x8
    3824:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3828:	adds	x4, x3, x12
    382c:	adc	x1, x2, x1
    3830:	mov	x9, x8
    3834:	b	36e0 <PyInit__ctypes_test@@Base+0x188>
    3838:	neg	w0, w0
    383c:	orr	x1, x1, #0x8000000000000
    3840:	mov	x4, #0x7fff                	// #32767
    3844:	cmp	x8, x4
    3848:	b.eq	3894 <PyInit__ctypes_test@@Base+0x33c>  // b.none
    384c:	cmp	w0, #0x74
    3850:	b.gt	4084 <PyInit__ctypes_test@@Base+0xb2c>
    3854:	cmp	w0, #0x3f
    3858:	b.gt	38b8 <PyInit__ctypes_test@@Base+0x360>
    385c:	mov	w5, #0x40                  	// #64
    3860:	sub	w5, w5, w0
    3864:	lsl	x4, x1, x5
    3868:	lsr	x6, x3, x0
    386c:	orr	x4, x4, x6
    3870:	lsl	x3, x3, x5
    3874:	cmp	x3, #0x0
    3878:	cset	x3, ne  // ne = any
    387c:	orr	x4, x4, x3
    3880:	lsr	x1, x1, x0
    3884:	adds	x4, x4, x12
    3888:	adc	x1, x1, x2
    388c:	mov	x9, x13
    3890:	b	36e0 <PyInit__ctypes_test@@Base+0x188>
    3894:	orr	x3, x2, x12
    3898:	cbz	x3, 4104 <PyInit__ctypes_test@@Base+0xbac>
    389c:	lsr	x0, x2, #50
    38a0:	eor	x0, x0, #0x1
    38a4:	and	w0, w0, #0x1
    38a8:	mov	x1, x2
    38ac:	mov	x3, x12
    38b0:	mov	x9, x8
    38b4:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    38b8:	sub	w4, w0, #0x40
    38bc:	lsr	x4, x1, x4
    38c0:	mov	w5, #0x80                  	// #128
    38c4:	sub	w5, w5, w0
    38c8:	lsl	x1, x1, x5
    38cc:	cmp	w0, #0x40
    38d0:	csel	x0, x1, xzr, ne  // ne = any
    38d4:	orr	x3, x0, x3
    38d8:	cmp	x3, #0x0
    38dc:	cset	x0, ne  // ne = any
    38e0:	orr	x4, x4, x0
    38e4:	mov	x1, #0x0                   	// #0
    38e8:	b	3884 <PyInit__ctypes_test@@Base+0x32c>
    38ec:	mov	x0, #0x7fff                	// #32767
    38f0:	cmp	x5, x0
    38f4:	b.eq	3950 <PyInit__ctypes_test@@Base+0x3f8>  // b.none
    38f8:	mov	w0, #0x0                   	// #0
    38fc:	mov	x4, #0x7fff                	// #32767
    3900:	cmp	x8, x4
    3904:	b.eq	3970 <PyInit__ctypes_test@@Base+0x418>  // b.none
    3908:	orr	x4, x1, x3
    390c:	cbz	x4, 405c <PyInit__ctypes_test@@Base+0xb04>
    3910:	orr	x12, x2, x12
    3914:	mov	x9, #0x7fff                	// #32767
    3918:	cbz	x12, 402c <PyInit__ctypes_test@@Base+0xad4>
    391c:	bfi	x6, x1, #61, #3
    3920:	lsr	x3, x1, #3
    3924:	tbz	x1, #50, 3940 <PyInit__ctypes_test@@Base+0x3e8>
    3928:	lsr	x1, x2, #3
    392c:	tbnz	x2, #50, 3940 <PyInit__ctypes_test@@Base+0x3e8>
    3930:	mov	x6, x7
    3934:	bfi	x6, x2, #61, #3
    3938:	mov	x3, x1
    393c:	mov	x10, x14
    3940:	extr	x1, x3, x6, #61
    3944:	lsl	x3, x6, #3
    3948:	mov	x9, #0x7fff                	// #32767
    394c:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3950:	orr	x0, x1, x3
    3954:	cbz	x0, 420c <PyInit__ctypes_test@@Base+0xcb4>
    3958:	lsr	x0, x1, #50
    395c:	eor	x0, x0, #0x1
    3960:	and	w0, w0, #0x1
    3964:	mov	x4, #0x7fff                	// #32767
    3968:	cmp	x8, x4
    396c:	b.ne	3910 <PyInit__ctypes_test@@Base+0x3b8>  // b.any
    3970:	orr	x4, x2, x12
    3974:	cbz	x4, 3908 <PyInit__ctypes_test@@Base+0x3b0>
    3978:	tst	x2, #0x4000000000000
    397c:	csinc	w0, w0, wzr, ne  // ne = any
    3980:	orr	x3, x1, x3
    3984:	cbnz	x3, 391c <PyInit__ctypes_test@@Base+0x3c4>
    3988:	mov	x1, x2
    398c:	mov	x3, x12
    3990:	mov	x9, #0x7fff                	// #32767
    3994:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3998:	mov	w0, #0x0                   	// #0
    399c:	b	3970 <PyInit__ctypes_test@@Base+0x418>
    39a0:	mov	x4, #0x7fff                	// #32767
    39a4:	cmp	x0, x4
    39a8:	b.eq	39c8 <PyInit__ctypes_test@@Base+0x470>  // b.none
    39ac:	adds	x3, x3, x12
    39b0:	adc	x1, x2, x1
    39b4:	extr	x3, x1, x3, #1
    39b8:	lsr	x1, x1, #1
    39bc:	mov	x9, x0
    39c0:	mov	w0, #0x0                   	// #0
    39c4:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    39c8:	ands	x3, x11, #0xc00000
    39cc:	b.eq	4110 <PyInit__ctypes_test@@Base+0xbb8>  // b.none
    39d0:	cmp	x3, #0x400, lsl #12
    39d4:	ccmp	x10, #0x0, #0x0, eq  // eq = none
    39d8:	b.eq	411c <PyInit__ctypes_test@@Base+0xbc4>  // b.none
    39dc:	cmp	x3, #0x800, lsl #12
    39e0:	ccmp	x10, #0x0, #0x4, eq  // eq = none
    39e4:	b.ne	4130 <PyInit__ctypes_test@@Base+0xbd8>  // b.any
    39e8:	mov	w4, #0x0                   	// #0
    39ec:	mov	x1, #0xffffffffffffffff    	// #-1
    39f0:	mov	x3, x1
    39f4:	mov	x9, #0x7ffe                	// #32766
    39f8:	mov	w0, #0x14                  	// #20
    39fc:	b	4038 <PyInit__ctypes_test@@Base+0xae0>
    3a00:	ands	x3, x11, #0xc00000
    3a04:	b.eq	4140 <PyInit__ctypes_test@@Base+0xbe8>  // b.none
    3a08:	cmp	x3, #0x400, lsl #12
    3a0c:	ccmp	x10, #0x0, #0x0, eq  // eq = none
    3a10:	b.eq	414c <PyInit__ctypes_test@@Base+0xbf4>  // b.none
    3a14:	cmp	x3, #0x800, lsl #12
    3a18:	ccmp	x10, #0x0, #0x4, eq  // eq = none
    3a1c:	b.ne	4160 <PyInit__ctypes_test@@Base+0xc08>  // b.any
    3a20:	mov	w4, #0x0                   	// #0
    3a24:	mov	x1, #0xffffffffffffffff    	// #-1
    3a28:	mov	x3, x1
    3a2c:	mov	x9, #0x7ffe                	// #32766
    3a30:	mov	w0, #0x14                  	// #20
    3a34:	b	4038 <PyInit__ctypes_test@@Base+0xae0>
    3a38:	mov	x4, x3
    3a3c:	mov	x0, #0x7fff                	// #32767
    3a40:	cmp	x5, x0
    3a44:	b.ne	3ef0 <PyInit__ctypes_test@@Base+0x998>  // b.any
    3a48:	orr	x0, x1, x3
    3a4c:	cbz	x0, 4170 <PyInit__ctypes_test@@Base+0xc18>
    3a50:	lsr	x0, x1, #50
    3a54:	eor	x0, x0, #0x1
    3a58:	and	w0, w0, #0x1
    3a5c:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3a60:	sub	x4, x3, x12
    3a64:	cmp	x3, x4
    3a68:	sbc	x1, x1, x2
    3a6c:	b	3ac4 <PyInit__ctypes_test@@Base+0x56c>
    3a70:	orr	x2, x2, #0x8000000000000
    3a74:	mov	x4, #0x7fff                	// #32767
    3a78:	cmp	x5, x4
    3a7c:	b.eq	3b34 <PyInit__ctypes_test@@Base+0x5dc>  // b.none
    3a80:	cmp	w0, #0x74
    3a84:	b.gt	4090 <PyInit__ctypes_test@@Base+0xb38>
    3a88:	cmp	w0, #0x3f
    3a8c:	b.gt	3b4c <PyInit__ctypes_test@@Base+0x5f4>
    3a90:	mov	w5, #0x40                  	// #64
    3a94:	sub	w5, w5, w0
    3a98:	lsl	x4, x2, x5
    3a9c:	lsr	x6, x12, x0
    3aa0:	orr	x4, x4, x6
    3aa4:	lsl	x12, x12, x5
    3aa8:	cmp	x12, #0x0
    3aac:	cset	x5, ne  // ne = any
    3ab0:	orr	x4, x4, x5
    3ab4:	lsr	x0, x2, x0
    3ab8:	sub	x4, x3, x4
    3abc:	cmp	x3, x4
    3ac0:	sbc	x1, x1, x0
    3ac4:	tbz	x1, #51, 3ef0 <PyInit__ctypes_test@@Base+0x998>
    3ac8:	and	x5, x1, #0x7ffffffffffff
    3acc:	cbz	x5, 3e94 <PyInit__ctypes_test@@Base+0x93c>
    3ad0:	clz	x0, x5
    3ad4:	sub	w0, w0, #0xc
    3ad8:	lsl	x5, x5, x0
    3adc:	neg	w1, w0
    3ae0:	lsr	x1, x4, x1
    3ae4:	orr	x1, x1, x5
    3ae8:	lsl	x5, x4, x0
    3aec:	sxtw	x2, w0
    3af0:	cmp	x9, w0, sxtw
    3af4:	b.gt	3ee4 <PyInit__ctypes_test@@Base+0x98c>
    3af8:	sub	w9, w0, w9
    3afc:	add	w6, w9, #0x1
    3b00:	cmp	w6, #0x3f
    3b04:	b.gt	3eb0 <PyInit__ctypes_test@@Base+0x958>
    3b08:	mov	w0, #0x40                  	// #64
    3b0c:	sub	w0, w0, w6
    3b10:	lsl	x4, x1, x0
    3b14:	lsr	x2, x5, x6
    3b18:	orr	x4, x4, x2
    3b1c:	lsl	x5, x5, x0
    3b20:	cmp	x5, #0x0
    3b24:	cset	x3, ne  // ne = any
    3b28:	orr	x4, x4, x3
    3b2c:	lsr	x1, x1, x6
    3b30:	b	3ef4 <PyInit__ctypes_test@@Base+0x99c>
    3b34:	orr	x0, x1, x3
    3b38:	cbz	x0, 4190 <PyInit__ctypes_test@@Base+0xc38>
    3b3c:	lsr	x0, x1, #50
    3b40:	eor	x0, x0, #0x1
    3b44:	and	w0, w0, #0x1
    3b48:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3b4c:	sub	w4, w0, #0x40
    3b50:	lsr	x4, x2, x4
    3b54:	mov	w5, #0x80                  	// #128
    3b58:	sub	w5, w5, w0
    3b5c:	lsl	x2, x2, x5
    3b60:	cmp	w0, #0x40
    3b64:	csel	x2, x2, xzr, ne  // ne = any
    3b68:	orr	x12, x2, x12
    3b6c:	cmp	x12, #0x0
    3b70:	cset	x0, ne  // ne = any
    3b74:	orr	x4, x4, x0
    3b78:	mov	x0, #0x0                   	// #0
    3b7c:	b	3ab8 <PyInit__ctypes_test@@Base+0x560>
    3b80:	tbnz	w0, #31, 3bc8 <PyInit__ctypes_test@@Base+0x670>
    3b84:	add	x0, x5, #0x1
    3b88:	ands	x4, x0, #0x7ffe
    3b8c:	b.ne	3e54 <PyInit__ctypes_test@@Base+0x8fc>  // b.any
    3b90:	cbnz	x5, 3d6c <PyInit__ctypes_test@@Base+0x814>
    3b94:	orr	x0, x1, x3
    3b98:	cbz	x0, 3d34 <PyInit__ctypes_test@@Base+0x7dc>
    3b9c:	orr	x0, x2, x12
    3ba0:	cbz	x0, 41e0 <PyInit__ctypes_test@@Base+0xc88>
    3ba4:	sub	x0, x3, x12
    3ba8:	cmp	x3, x0
    3bac:	sbc	x5, x1, x2
    3bb0:	tbz	x5, #51, 3d50 <PyInit__ctypes_test@@Base+0x7f8>
    3bb4:	sub	x4, x12, x3
    3bb8:	cmp	x12, x4
    3bbc:	sbc	x1, x2, x1
    3bc0:	mov	x10, x14
    3bc4:	b	3ef4 <PyInit__ctypes_test@@Base+0x99c>
    3bc8:	cbnz	x5, 3c74 <PyInit__ctypes_test@@Base+0x71c>
    3bcc:	orr	x4, x1, x3
    3bd0:	cbz	x4, 3c14 <PyInit__ctypes_test@@Base+0x6bc>
    3bd4:	cmn	w0, #0x1
    3bd8:	b.eq	3c5c <PyInit__ctypes_test@@Base+0x704>  // b.none
    3bdc:	mvn	w0, w0
    3be0:	mov	x4, #0x7fff                	// #32767
    3be4:	cmp	x8, x4
    3be8:	b.ne	3c88 <PyInit__ctypes_test@@Base+0x730>  // b.any
    3bec:	orr	x3, x2, x12
    3bf0:	cbz	x3, 41b4 <PyInit__ctypes_test@@Base+0xc5c>
    3bf4:	lsr	x0, x2, #50
    3bf8:	eor	x0, x0, #0x1
    3bfc:	and	w0, w0, #0x1
    3c00:	mov	x1, x2
    3c04:	mov	x3, x12
    3c08:	mov	x9, x8
    3c0c:	mov	x10, x14
    3c10:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3c14:	mov	x0, #0x7fff                	// #32767
    3c18:	cmp	x8, x0
    3c1c:	b.eq	3c34 <PyInit__ctypes_test@@Base+0x6dc>  // b.none
    3c20:	mov	x1, x2
    3c24:	mov	x4, x12
    3c28:	mov	x9, x8
    3c2c:	mov	x10, x14
    3c30:	b	3ef0 <PyInit__ctypes_test@@Base+0x998>
    3c34:	orr	x3, x2, x12
    3c38:	cbz	x3, 41a4 <PyInit__ctypes_test@@Base+0xc4c>
    3c3c:	lsr	x0, x2, #50
    3c40:	eor	x0, x0, #0x1
    3c44:	and	w0, w0, #0x1
    3c48:	mov	x1, x2
    3c4c:	mov	x3, x12
    3c50:	mov	x9, x8
    3c54:	mov	x10, x14
    3c58:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3c5c:	sub	x4, x12, x3
    3c60:	cmp	x12, x4
    3c64:	sbc	x1, x2, x1
    3c68:	mov	x9, x8
    3c6c:	mov	x10, x14
    3c70:	b	3ac4 <PyInit__ctypes_test@@Base+0x56c>
    3c74:	neg	w0, w0
    3c78:	orr	x1, x1, #0x8000000000000
    3c7c:	mov	x4, #0x7fff                	// #32767
    3c80:	cmp	x8, x4
    3c84:	b.eq	3cd8 <PyInit__ctypes_test@@Base+0x780>  // b.none
    3c88:	cmp	w0, #0x74
    3c8c:	b.gt	409c <PyInit__ctypes_test@@Base+0xb44>
    3c90:	cmp	w0, #0x3f
    3c94:	b.gt	3d00 <PyInit__ctypes_test@@Base+0x7a8>
    3c98:	mov	w5, #0x40                  	// #64
    3c9c:	sub	w5, w5, w0
    3ca0:	lsl	x4, x1, x5
    3ca4:	lsr	x6, x3, x0
    3ca8:	orr	x4, x4, x6
    3cac:	lsl	x3, x3, x5
    3cb0:	cmp	x3, #0x0
    3cb4:	cset	x3, ne  // ne = any
    3cb8:	orr	x4, x4, x3
    3cbc:	lsr	x1, x1, x0
    3cc0:	sub	x4, x12, x4
    3cc4:	cmp	x12, x4
    3cc8:	sbc	x1, x2, x1
    3ccc:	mov	x9, x13
    3cd0:	mov	x10, x14
    3cd4:	b	3ac4 <PyInit__ctypes_test@@Base+0x56c>
    3cd8:	orr	x3, x2, x12
    3cdc:	cbz	x3, 41c4 <PyInit__ctypes_test@@Base+0xc6c>
    3ce0:	lsr	x0, x2, #50
    3ce4:	eor	x0, x0, #0x1
    3ce8:	and	w0, w0, #0x1
    3cec:	mov	x1, x2
    3cf0:	mov	x3, x12
    3cf4:	mov	x9, x8
    3cf8:	mov	x10, x14
    3cfc:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3d00:	sub	w4, w0, #0x40
    3d04:	lsr	x4, x1, x4
    3d08:	mov	w5, #0x80                  	// #128
    3d0c:	sub	w5, w5, w0
    3d10:	lsl	x1, x1, x5
    3d14:	cmp	w0, #0x40
    3d18:	csel	x0, x1, xzr, ne  // ne = any
    3d1c:	orr	x3, x0, x3
    3d20:	cmp	x3, #0x0
    3d24:	cset	x0, ne  // ne = any
    3d28:	orr	x4, x4, x0
    3d2c:	mov	x1, #0x0                   	// #0
    3d30:	b	3cc0 <PyInit__ctypes_test@@Base+0x768>
    3d34:	orr	x4, x2, x12
    3d38:	cbnz	x4, 41d4 <PyInit__ctypes_test@@Base+0xc7c>
    3d3c:	and	x0, x11, #0xc00000
    3d40:	cmp	x0, #0x800, lsl #12
    3d44:	cset	x10, eq  // eq = none
    3d48:	mov	x1, x4
    3d4c:	b	3ef4 <PyInit__ctypes_test@@Base+0x99c>
    3d50:	orr	x4, x0, x5
    3d54:	cbnz	x4, 4200 <PyInit__ctypes_test@@Base+0xca8>
    3d58:	and	x0, x11, #0xc00000
    3d5c:	cmp	x0, #0x800, lsl #12
    3d60:	cset	x10, eq  // eq = none
    3d64:	mov	x1, x4
    3d68:	b	3ef4 <PyInit__ctypes_test@@Base+0x99c>
    3d6c:	mov	x0, #0x7fff                	// #32767
    3d70:	cmp	x5, x0
    3d74:	b.eq	3dac <PyInit__ctypes_test@@Base+0x854>  // b.none
    3d78:	mov	w0, #0x0                   	// #0
    3d7c:	mov	x5, #0x7fff                	// #32767
    3d80:	cmp	x8, x5
    3d84:	b.eq	3e00 <PyInit__ctypes_test@@Base+0x8a8>  // b.none
    3d88:	orr	x5, x1, x3
    3d8c:	cbnz	x5, 3dcc <PyInit__ctypes_test@@Base+0x874>
    3d90:	orr	x1, x2, x12
    3d94:	cbnz	x1, 3e2c <PyInit__ctypes_test@@Base+0x8d4>
    3d98:	mov	x10, x4
    3d9c:	mov	x1, #0x7ffffffffffff       	// #2251799813685247
    3da0:	mov	x3, #0xfffffffffffffff8    	// #-8
    3da4:	mov	w0, #0x1                   	// #1
    3da8:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    3dac:	orr	x0, x1, x3
    3db0:	cbz	x0, 40a8 <PyInit__ctypes_test@@Base+0xb50>
    3db4:	lsr	x0, x1, #50
    3db8:	eor	x0, x0, #0x1
    3dbc:	and	w0, w0, #0x1
    3dc0:	mov	x5, #0x7fff                	// #32767
    3dc4:	cmp	x8, x5
    3dc8:	b.eq	3e00 <PyInit__ctypes_test@@Base+0x8a8>  // b.none
    3dcc:	orr	x12, x2, x12
    3dd0:	mov	x9, #0x7fff                	// #32767
    3dd4:	cbz	x12, 402c <PyInit__ctypes_test@@Base+0xad4>
    3dd8:	lsr	x3, x1, #3
    3ddc:	tbz	x1, #50, 3e40 <PyInit__ctypes_test@@Base+0x8e8>
    3de0:	lsr	x4, x2, #3
    3de4:	tbnz	x2, #50, 3e40 <PyInit__ctypes_test@@Base+0x8e8>
    3de8:	mov	x6, x7
    3dec:	bfi	x6, x2, #61, #3
    3df0:	mov	x3, x4
    3df4:	mov	x10, x14
    3df8:	b	3e44 <PyInit__ctypes_test@@Base+0x8ec>
    3dfc:	mov	w0, #0x0                   	// #0
    3e00:	orr	x5, x2, x12
    3e04:	cbz	x5, 3d88 <PyInit__ctypes_test@@Base+0x830>
    3e08:	tst	x2, #0x4000000000000
    3e0c:	csinc	w0, w0, wzr, ne  // ne = any
    3e10:	orr	x4, x1, x3
    3e14:	cbnz	x4, 3dcc <PyInit__ctypes_test@@Base+0x874>
    3e18:	mov	x1, x2
    3e1c:	mov	x3, x12
    3e20:	mov	x10, x14
    3e24:	mov	x9, #0x7fff                	// #32767
    3e28:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3e2c:	mov	x1, x2
    3e30:	mov	x3, x12
    3e34:	mov	x10, x14
    3e38:	mov	x9, #0x7fff                	// #32767
    3e3c:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3e40:	bfi	x6, x1, #61, #3
    3e44:	extr	x1, x3, x6, #61
    3e48:	lsl	x3, x6, #3
    3e4c:	mov	x9, #0x7fff                	// #32767
    3e50:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    3e54:	sub	x4, x3, x12
    3e58:	cmp	x3, x4
    3e5c:	sbc	x5, x1, x2
    3e60:	tbnz	x5, #51, 3e80 <PyInit__ctypes_test@@Base+0x928>
    3e64:	orr	x1, x4, x5
    3e68:	cbnz	x1, 3acc <PyInit__ctypes_test@@Base+0x574>
    3e6c:	and	x0, x11, #0xc00000
    3e70:	cmp	x0, #0x800, lsl #12
    3e74:	cset	x10, eq  // eq = none
    3e78:	mov	x4, x1
    3e7c:	b	3ef4 <PyInit__ctypes_test@@Base+0x99c>
    3e80:	sub	x4, x12, x3
    3e84:	cmp	x12, x4
    3e88:	sbc	x5, x2, x1
    3e8c:	mov	x10, x14
    3e90:	b	3acc <PyInit__ctypes_test@@Base+0x574>
    3e94:	clz	x1, x4
    3e98:	add	w0, w1, #0x34
    3e9c:	cmp	w0, #0x3f
    3ea0:	b.le	3ad8 <PyInit__ctypes_test@@Base+0x580>
    3ea4:	sub	w1, w1, #0xc
    3ea8:	lsl	x1, x4, x1
    3eac:	b	3aec <PyInit__ctypes_test@@Base+0x594>
    3eb0:	sub	w9, w9, #0x3f
    3eb4:	lsr	x0, x1, x9
    3eb8:	mov	w2, #0x80                  	// #128
    3ebc:	sub	w2, w2, w6
    3ec0:	lsl	x1, x1, x2
    3ec4:	cmp	w6, #0x40
    3ec8:	csel	x2, x1, xzr, ne  // ne = any
    3ecc:	orr	x2, x5, x2
    3ed0:	cmp	x2, #0x0
    3ed4:	cset	x4, ne  // ne = any
    3ed8:	orr	x4, x0, x4
    3edc:	mov	x1, #0x0                   	// #0
    3ee0:	b	3ef4 <PyInit__ctypes_test@@Base+0x99c>
    3ee4:	sub	x9, x9, x2
    3ee8:	and	x1, x1, #0xfff7ffffffffffff
    3eec:	mov	x4, x5
    3ef0:	cbnz	x9, 4024 <PyInit__ctypes_test@@Base+0xacc>
    3ef4:	orr	x3, x4, x1
    3ef8:	cbnz	x3, 41e4 <PyInit__ctypes_test@@Base+0xc8c>
    3efc:	mov	x1, x3
    3f00:	mov	x9, #0x0                   	// #0
    3f04:	mov	w0, #0x0                   	// #0
    3f08:	b	3f3c <PyInit__ctypes_test@@Base+0x9e4>
    3f0c:	mov	x3, x4
    3f10:	mov	w4, #0x1                   	// #1
    3f14:	mov	x9, #0x0                   	// #0
    3f18:	mov	w0, #0x0                   	// #0
    3f1c:	b	4038 <PyInit__ctypes_test@@Base+0xae0>
    3f20:	and	x2, x3, #0xf
    3f24:	cmp	x2, #0x4
    3f28:	b.eq	3f34 <PyInit__ctypes_test@@Base+0x9dc>  // b.none
    3f2c:	adds	x3, x3, #0x4
    3f30:	cinc	x1, x1, cs  // cs = hs, nlast
    3f34:	cbz	w4, 3f3c <PyInit__ctypes_test@@Base+0x9e4>
    3f38:	orr	w0, w0, #0x8
    3f3c:	tbz	x1, #51, 3fe8 <PyInit__ctypes_test@@Base+0xa90>
    3f40:	add	x9, x9, #0x1
    3f44:	mov	x2, #0x7fff                	// #32767
    3f48:	cmp	x9, x2
    3f4c:	b.eq	3fb4 <PyInit__ctypes_test@@Base+0xa5c>  // b.none
    3f50:	and	x2, x1, #0xfff7ffffffffffff
    3f54:	extr	x4, x1, x3, #3
    3f58:	lsr	x1, x2, #3
    3f5c:	mov	x3, #0x0                   	// #0
    3f60:	mov	x2, x4
    3f64:	bfxil	x3, x1, #0, #48
    3f68:	bfi	x3, x9, #48, #15
    3f6c:	bfi	x3, x10, #63, #1
    3f70:	stp	x2, x3, [sp, #16]
    3f74:	cbnz	w0, 401c <PyInit__ctypes_test@@Base+0xac4>
    3f78:	ldr	q0, [sp, #16]
    3f7c:	ldp	x29, x30, [sp], #32
    3f80:	ret
    3f84:	cbnz	x10, 3f34 <PyInit__ctypes_test@@Base+0x9dc>
    3f88:	adds	x3, x3, #0x8
    3f8c:	cinc	x1, x1, cs  // cs = hs, nlast
    3f90:	b	3f34 <PyInit__ctypes_test@@Base+0x9dc>
    3f94:	cbz	x10, 3f34 <PyInit__ctypes_test@@Base+0x9dc>
    3f98:	adds	x3, x3, #0x8
    3f9c:	cinc	x1, x1, cs  // cs = hs, nlast
    3fa0:	b	3f34 <PyInit__ctypes_test@@Base+0x9dc>
    3fa4:	mov	x3, x4
    3fa8:	mov	x9, #0x0                   	// #0
    3fac:	mov	w0, #0x0                   	// #0
    3fb0:	b	3f38 <PyInit__ctypes_test@@Base+0x9e0>
    3fb4:	ands	x3, x11, #0xc00000
    3fb8:	b.eq	3fdc <PyInit__ctypes_test@@Base+0xa84>  // b.none
    3fbc:	cmp	x3, #0x400, lsl #12
    3fc0:	ccmp	x10, #0x0, #0x0, eq  // eq = none
    3fc4:	b.eq	4014 <PyInit__ctypes_test@@Base+0xabc>  // b.none
    3fc8:	cmp	x3, #0x800, lsl #12
    3fcc:	ccmp	x10, #0x0, #0x4, eq  // eq = none
    3fd0:	csetm	x3, eq  // eq = none
    3fd4:	mov	x1, #0x7ffe                	// #32766
    3fd8:	csel	x9, x9, x1, ne  // ne = any
    3fdc:	mov	w1, #0x14                  	// #20
    3fe0:	orr	w0, w0, w1
    3fe4:	mov	x1, x3
    3fe8:	extr	x4, x1, x3, #3
    3fec:	lsr	x1, x1, #3
    3ff0:	mov	x2, #0x7fff                	// #32767
    3ff4:	cmp	x9, x2
    3ff8:	b.ne	3f5c <PyInit__ctypes_test@@Base+0xa04>  // b.any
    3ffc:	orr	x2, x4, x1
    4000:	orr	x1, x1, #0x800000000000
    4004:	cbnz	x2, 3f5c <PyInit__ctypes_test@@Base+0xa04>
    4008:	mov	x4, x2
    400c:	mov	x1, x2
    4010:	b	3f5c <PyInit__ctypes_test@@Base+0xa04>
    4014:	mov	x3, #0x0                   	// #0
    4018:	b	3fdc <PyInit__ctypes_test@@Base+0xa84>
    401c:	bl	5524 <PyInit__ctypes_test@@Base+0x1fcc>
    4020:	b	3f78 <PyInit__ctypes_test@@Base+0xa20>
    4024:	mov	x3, x4
    4028:	mov	w0, #0x0                   	// #0
    402c:	mov	w4, #0x0                   	// #0
    4030:	tst	x3, #0x7
    4034:	b.eq	3f3c <PyInit__ctypes_test@@Base+0x9e4>  // b.none
    4038:	orr	w0, w0, #0x10
    403c:	and	x2, x11, #0xc00000
    4040:	cmp	x2, #0x400, lsl #12
    4044:	b.eq	3f84 <PyInit__ctypes_test@@Base+0xa2c>  // b.none
    4048:	cmp	x2, #0x800, lsl #12
    404c:	b.eq	3f94 <PyInit__ctypes_test@@Base+0xa3c>  // b.none
    4050:	cbz	x2, 3f20 <PyInit__ctypes_test@@Base+0x9c8>
    4054:	cbnz	w4, 3f38 <PyInit__ctypes_test@@Base+0x9e0>
    4058:	b	3f3c <PyInit__ctypes_test@@Base+0x9e4>
    405c:	mov	x1, x2
    4060:	mov	x3, x12
    4064:	mov	x9, #0x7fff                	// #32767
    4068:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    406c:	mov	x1, x2
    4070:	mov	x4, x12
    4074:	b	3ef4 <PyInit__ctypes_test@@Base+0x99c>
    4078:	mov	x0, #0x0                   	// #0
    407c:	mov	x4, #0x1                   	// #1
    4080:	b	36d8 <PyInit__ctypes_test@@Base+0x180>
    4084:	mov	x1, #0x0                   	// #0
    4088:	mov	x4, #0x1                   	// #1
    408c:	b	3884 <PyInit__ctypes_test@@Base+0x32c>
    4090:	mov	x0, #0x0                   	// #0
    4094:	mov	x4, #0x1                   	// #1
    4098:	b	3ab8 <PyInit__ctypes_test@@Base+0x560>
    409c:	mov	x1, #0x0                   	// #0
    40a0:	mov	x4, #0x1                   	// #1
    40a4:	b	3cc0 <PyInit__ctypes_test@@Base+0x768>
    40a8:	mov	x0, #0x7fff                	// #32767
    40ac:	cmp	x8, x0
    40b0:	b.eq	3dfc <PyInit__ctypes_test@@Base+0x8a4>  // b.none
    40b4:	mov	w0, #0x0                   	// #0
    40b8:	b	3d90 <PyInit__ctypes_test@@Base+0x838>
    40bc:	mov	x1, x0
    40c0:	mov	x3, x0
    40c4:	mov	w0, #0x0                   	// #0
    40c8:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    40cc:	mov	x1, x0
    40d0:	mov	x3, x0
    40d4:	mov	w0, #0x0                   	// #0
    40d8:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    40dc:	mov	x1, x0
    40e0:	mov	x3, x0
    40e4:	mov	w0, #0x0                   	// #0
    40e8:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    40ec:	mov	x1, x3
    40f0:	mov	w0, #0x0                   	// #0
    40f4:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    40f8:	mov	x1, x3
    40fc:	mov	w0, #0x0                   	// #0
    4100:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4104:	mov	x1, x3
    4108:	mov	w0, #0x0                   	// #0
    410c:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4110:	mov	x1, x3
    4114:	mov	w0, #0x14                  	// #20
    4118:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    411c:	mov	x1, #0x0                   	// #0
    4120:	mov	x3, #0x0                   	// #0
    4124:	mov	x10, #0x0                   	// #0
    4128:	mov	w0, #0x14                  	// #20
    412c:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4130:	mov	x1, #0x0                   	// #0
    4134:	mov	x3, #0x0                   	// #0
    4138:	mov	w0, #0x14                  	// #20
    413c:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4140:	mov	x1, x3
    4144:	mov	w0, #0x14                  	// #20
    4148:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    414c:	mov	x1, #0x0                   	// #0
    4150:	mov	x3, #0x0                   	// #0
    4154:	mov	x10, #0x0                   	// #0
    4158:	mov	w0, #0x14                  	// #20
    415c:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4160:	mov	x1, #0x0                   	// #0
    4164:	mov	x3, #0x0                   	// #0
    4168:	mov	w0, #0x14                  	// #20
    416c:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4170:	mov	x1, x0
    4174:	mov	x3, x0
    4178:	mov	w0, #0x0                   	// #0
    417c:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4180:	mov	x1, x0
    4184:	mov	x3, x0
    4188:	mov	w0, #0x0                   	// #0
    418c:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    4190:	mov	x1, x0
    4194:	mov	x3, x0
    4198:	mov	w0, #0x0                   	// #0
    419c:	mov	x9, #0x7fff                	// #32767
    41a0:	b	3f3c <PyInit__ctypes_test@@Base+0x9e4>
    41a4:	mov	x1, x3
    41a8:	mov	x10, x14
    41ac:	mov	w0, #0x0                   	// #0
    41b0:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    41b4:	mov	x1, x3
    41b8:	mov	x10, x14
    41bc:	mov	w0, #0x0                   	// #0
    41c0:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    41c4:	mov	x1, x3
    41c8:	mov	x10, x14
    41cc:	mov	w0, #0x0                   	// #0
    41d0:	b	419c <PyInit__ctypes_test@@Base+0xc44>
    41d4:	mov	x1, x2
    41d8:	mov	x3, x12
    41dc:	mov	x10, x14
    41e0:	mov	x4, x3
    41e4:	tst	x4, #0x7
    41e8:	b.ne	3f0c <PyInit__ctypes_test@@Base+0x9b4>  // b.any
    41ec:	tbnz	w11, #11, 3fa4 <PyInit__ctypes_test@@Base+0xa4c>
    41f0:	mov	x3, x4
    41f4:	mov	x9, #0x0                   	// #0
    41f8:	mov	w0, #0x0                   	// #0
    41fc:	b	3f3c <PyInit__ctypes_test@@Base+0x9e4>
    4200:	mov	x1, x5
    4204:	mov	x3, x0
    4208:	b	41e0 <PyInit__ctypes_test@@Base+0xc88>
    420c:	mov	x0, #0x7fff                	// #32767
    4210:	cmp	x8, x0
    4214:	b.eq	3998 <PyInit__ctypes_test@@Base+0x440>  // b.none
    4218:	mov	x1, x2
    421c:	mov	x3, x12
    4220:	mov	w0, #0x0                   	// #0
    4224:	b	402c <PyInit__ctypes_test@@Base+0xad4>
    4228:	stp	x29, x30, [sp, #-32]!
    422c:	mov	x29, sp
    4230:	str	q0, [sp, #16]
    4234:	ldr	x2, [sp, #16]
    4238:	ldr	x0, [sp, #24]
    423c:	str	q1, [sp, #16]
    4240:	ldr	x7, [sp, #16]
    4244:	ldr	x1, [sp, #24]
    4248:	mrs	x12, fpcr
    424c:	ubfx	x3, x0, #0, #48
    4250:	ubfx	x6, x0, #48, #15
    4254:	lsr	x0, x0, #63
    4258:	and	w9, w0, #0xff
    425c:	cbz	w6, 4310 <PyInit__ctypes_test@@Base+0xdb8>
    4260:	mov	x10, x3
    4264:	mov	w5, #0x7fff                	// #32767
    4268:	cmp	w6, w5
    426c:	b.eq	4378 <PyInit__ctypes_test@@Base+0xe20>  // b.none
    4270:	extr	x3, x3, x2, #61
    4274:	orr	x10, x3, #0x8000000000000
    4278:	lsl	x13, x2, #3
    427c:	and	x6, x6, #0xffff
    4280:	sub	x6, x6, #0x3, lsl #12
    4284:	sub	x6, x6, #0xfff
    4288:	mov	x14, #0x0                   	// #0
    428c:	mov	w3, #0x0                   	// #0
    4290:	ubfx	x8, x1, #0, #48
    4294:	mov	x4, x8
    4298:	ubfx	x11, x1, #48, #15
    429c:	lsr	x2, x1, #63
    42a0:	and	w1, w2, #0xff
    42a4:	cbz	w11, 43c0 <PyInit__ctypes_test@@Base+0xe68>
    42a8:	mov	w15, #0x7fff                	// #32767
    42ac:	cmp	w11, w15
    42b0:	b.eq	4420 <PyInit__ctypes_test@@Base+0xec8>  // b.none
    42b4:	extr	x4, x8, x7, #61
    42b8:	orr	x4, x4, #0x8000000000000
    42bc:	lsl	x5, x7, #3
    42c0:	and	x11, x11, #0xffff
    42c4:	sub	x11, x11, #0x3, lsl #12
    42c8:	sub	x11, x11, #0xfff
    42cc:	eor	w9, w9, w1
    42d0:	and	x9, x9, #0xff
    42d4:	sub	x6, x6, x11
    42d8:	lsl	x1, x14, #2
    42dc:	mov	x7, #0x0                   	// #0
    42e0:	cmp	x1, #0x7
    42e4:	b.le	4478 <PyInit__ctypes_test@@Base+0xf20>
    42e8:	cmp	x1, #0xe
    42ec:	b.gt	47e4 <PyInit__ctypes_test@@Base+0x128c>
    42f0:	cmp	x1, #0xb
    42f4:	b.gt	4808 <PyInit__ctypes_test@@Base+0x12b0>
    42f8:	cmp	x1, #0x9
    42fc:	b.gt	4544 <PyInit__ctypes_test@@Base+0xfec>
    4300:	mov	x4, #0x0                   	// #0
    4304:	mov	x5, #0x0                   	// #0
    4308:	mov	x6, #0x7fff                	// #32767
    430c:	b	4a74 <PyInit__ctypes_test@@Base+0x151c>
    4310:	orr	x13, x3, x2
    4314:	cbz	x13, 4398 <PyInit__ctypes_test@@Base+0xe40>
    4318:	cbz	x3, 4354 <PyInit__ctypes_test@@Base+0xdfc>
    431c:	clz	x6, x3
    4320:	sub	x10, x6, #0xf
    4324:	add	w13, w10, #0x3
    4328:	lsl	x3, x3, x13
    432c:	mov	w4, #0x3d                  	// #61
    4330:	sub	w10, w4, w10
    4334:	lsr	x10, x2, x10
    4338:	orr	x10, x10, x3
    433c:	lsl	x13, x2, x13
    4340:	mov	x2, #0xffffffffffffc011    	// #-16367
    4344:	sub	x6, x2, x6
    4348:	mov	x14, #0x0                   	// #0
    434c:	mov	w3, #0x0                   	// #0
    4350:	b	4290 <PyInit__ctypes_test@@Base+0xd38>
    4354:	clz	x10, x2
    4358:	add	x6, x10, #0x40
    435c:	add	x10, x10, #0x31
    4360:	cmp	x10, #0x3c
    4364:	b.le	4324 <PyInit__ctypes_test@@Base+0xdcc>
    4368:	sub	w10, w10, #0x3d
    436c:	mov	x13, x3
    4370:	lsl	x10, x2, x10
    4374:	b	4340 <PyInit__ctypes_test@@Base+0xde8>
    4378:	orr	x13, x3, x2
    437c:	cbz	x13, 43ac <PyInit__ctypes_test@@Base+0xe54>
    4380:	lsr	x3, x3, #47
    4384:	eor	w3, w3, #0x1
    4388:	mov	x13, x2
    438c:	mov	x6, #0x7fff                	// #32767
    4390:	mov	x14, #0x3                   	// #3
    4394:	b	4290 <PyInit__ctypes_test@@Base+0xd38>
    4398:	mov	x10, x13
    439c:	mov	x6, #0x0                   	// #0
    43a0:	mov	x14, #0x1                   	// #1
    43a4:	mov	w3, #0x0                   	// #0
    43a8:	b	4290 <PyInit__ctypes_test@@Base+0xd38>
    43ac:	mov	x10, x13
    43b0:	mov	x6, #0x7fff                	// #32767
    43b4:	mov	x14, #0x2                   	// #2
    43b8:	mov	w3, #0x0                   	// #0
    43bc:	b	4290 <PyInit__ctypes_test@@Base+0xd38>
    43c0:	orr	x5, x8, x7
    43c4:	cbz	x5, 4440 <PyInit__ctypes_test@@Base+0xee8>
    43c8:	cbz	x8, 43fc <PyInit__ctypes_test@@Base+0xea4>
    43cc:	clz	x16, x8
    43d0:	sub	x4, x16, #0xf
    43d4:	add	w5, w4, #0x3
    43d8:	lsl	x8, x8, x5
    43dc:	mov	w15, #0x3d                  	// #61
    43e0:	sub	w4, w15, w4
    43e4:	lsr	x4, x7, x4
    43e8:	orr	x4, x4, x8
    43ec:	lsl	x5, x7, x5
    43f0:	mov	x11, #0xffffffffffffc011    	// #-16367
    43f4:	sub	x11, x11, x16
    43f8:	b	42cc <PyInit__ctypes_test@@Base+0xd74>
    43fc:	clz	x4, x7
    4400:	add	x16, x4, #0x40
    4404:	add	x4, x4, #0x31
    4408:	cmp	x4, #0x3c
    440c:	b.le	43d4 <PyInit__ctypes_test@@Base+0xe7c>
    4410:	sub	w4, w4, #0x3d
    4414:	mov	x5, x8
    4418:	lsl	x4, x7, x4
    441c:	b	43f0 <PyInit__ctypes_test@@Base+0xe98>
    4420:	orr	x5, x8, x7
    4424:	cbz	x5, 4468 <PyInit__ctypes_test@@Base+0xf10>
    4428:	mov	x5, x7
    442c:	mov	x11, #0x7fff                	// #32767
    4430:	mov	x7, #0x3                   	// #3
    4434:	tst	x8, #0x800000000000
    4438:	csinc	w3, w3, wzr, ne  // ne = any
    443c:	b	444c <PyInit__ctypes_test@@Base+0xef4>
    4440:	mov	x4, x5
    4444:	mov	x11, #0x0                   	// #0
    4448:	mov	x7, #0x1                   	// #1
    444c:	eor	w9, w9, w1
    4450:	and	x9, x9, #0xff
    4454:	sub	x6, x6, x11
    4458:	orr	x1, x7, x14, lsl #2
    445c:	cmp	x1, #0x7
    4460:	b.ne	42e0 <PyInit__ctypes_test@@Base+0xd88>  // b.any
    4464:	b	44c0 <PyInit__ctypes_test@@Base+0xf68>
    4468:	mov	x4, x5
    446c:	mov	x11, #0x7fff                	// #32767
    4470:	mov	x7, #0x2                   	// #2
    4474:	b	444c <PyInit__ctypes_test@@Base+0xef4>
    4478:	cmp	x1, #0x1
    447c:	b.eq	4800 <PyInit__ctypes_test@@Base+0x12a8>  // b.none
    4480:	b.le	4560 <PyInit__ctypes_test@@Base+0x1008>
    4484:	cmp	x1, #0x4
    4488:	b.eq	4a58 <PyInit__ctypes_test@@Base+0x1500>  // b.none
    448c:	b.le	44b8 <PyInit__ctypes_test@@Base+0xf60>
    4490:	cmp	x1, #0x5
    4494:	b.ne	4534 <PyInit__ctypes_test@@Base+0xfdc>  // b.any
    4498:	mov	x4, #0xffffffffffff        	// #281474976710655
    449c:	mov	x5, #0xffffffffffffffff    	// #-1
    44a0:	mov	x2, #0x0                   	// #0
    44a4:	mov	w3, #0x1                   	// #1
    44a8:	orr	x4, x4, #0x800000000000
    44ac:	mov	x9, x2
    44b0:	mov	x6, #0x7fff                	// #32767
    44b4:	b	4a74 <PyInit__ctypes_test@@Base+0x151c>
    44b8:	cmp	x1, #0x2
    44bc:	b.eq	4a68 <PyInit__ctypes_test@@Base+0x1510>  // b.none
    44c0:	cmp	x7, #0x1
    44c4:	b.eq	4a9c <PyInit__ctypes_test@@Base+0x1544>  // b.none
    44c8:	b.gt	481c <PyInit__ctypes_test@@Base+0x12c4>
    44cc:	mov	x9, x2
    44d0:	cbnz	x7, 4a74 <PyInit__ctypes_test@@Base+0x151c>
    44d4:	add	x0, x6, #0x3, lsl #12
    44d8:	add	x0, x0, #0xfff
    44dc:	cmp	x0, #0x0
    44e0:	b.le	48e8 <PyInit__ctypes_test@@Base+0x1390>
    44e4:	tst	x5, #0x7
    44e8:	b.eq	4508 <PyInit__ctypes_test@@Base+0xfb0>  // b.none
    44ec:	orr	w3, w3, #0x10
    44f0:	and	x1, x12, #0xc00000
    44f4:	cmp	x1, #0x400, lsl #12
    44f8:	b.eq	4844 <PyInit__ctypes_test@@Base+0x12ec>  // b.none
    44fc:	cmp	x1, #0x800, lsl #12
    4500:	b.eq	4854 <PyInit__ctypes_test@@Base+0x12fc>  // b.none
    4504:	cbz	x1, 482c <PyInit__ctypes_test@@Base+0x12d4>
    4508:	tbz	x4, #52, 4514 <PyInit__ctypes_test@@Base+0xfbc>
    450c:	and	x4, x4, #0xffefffffffffffff
    4510:	add	x0, x6, #0x4, lsl #12
    4514:	mov	x1, #0x7ffe                	// #32766
    4518:	cmp	x0, x1
    451c:	b.gt	4864 <PyInit__ctypes_test@@Base+0x130c>
    4520:	extr	x5, x4, x5, #3
    4524:	lsr	x4, x4, #3
    4528:	mov	x9, x2
    452c:	mov	x6, x0
    4530:	b	4a74 <PyInit__ctypes_test@@Base+0x151c>
    4534:	mov	x4, #0x0                   	// #0
    4538:	mov	x5, #0x0                   	// #0
    453c:	mov	x6, #0x0                   	// #0
    4540:	b	4a74 <PyInit__ctypes_test@@Base+0x151c>
    4544:	cmp	x1, #0xa
    4548:	b.ne	44c0 <PyInit__ctypes_test@@Base+0xf68>  // b.any
    454c:	mov	x4, #0xffffffffffff        	// #281474976710655
    4550:	mov	x5, #0xffffffffffffffff    	// #-1
    4554:	mov	x2, #0x0                   	// #0
    4558:	mov	w3, #0x1                   	// #1
    455c:	b	44a8 <PyInit__ctypes_test@@Base+0xf50>
    4560:	cmp	x10, x4
    4564:	b.hi	4570 <PyInit__ctypes_test@@Base+0x1018>  // b.pmore
    4568:	ccmp	x13, x5, #0x0, eq  // eq = none
    456c:	b.cc	4794 <PyInit__ctypes_test@@Base+0x123c>  // b.lo, b.ul, b.last
    4570:	lsr	x2, x10, #1
    4574:	extr	x0, x10, x13, #1
    4578:	lsl	x13, x13, #63
    457c:	extr	x7, x4, x5, #52
    4580:	lsl	x8, x5, #12
    4584:	ubfx	x10, x4, #20, #32
    4588:	and	x11, x7, #0xffffffff
    458c:	udiv	x4, x2, x10
    4590:	mul	x5, x11, x4
    4594:	msub	x2, x4, x10, x2
    4598:	extr	x1, x2, x0, #32
    459c:	cmp	x5, x1
    45a0:	b.ls	45b8 <PyInit__ctypes_test@@Base+0x1060>  // b.plast
    45a4:	add	x1, x1, x7
    45a8:	cmp	x5, x1
    45ac:	ccmp	x7, x1, #0x2, hi  // hi = pmore
    45b0:	b.ls	47a8 <PyInit__ctypes_test@@Base+0x1250>  // b.plast
    45b4:	sub	x4, x4, #0x1
    45b8:	sub	x1, x1, x5
    45bc:	udiv	x15, x1, x10
    45c0:	mul	x2, x11, x15
    45c4:	msub	x1, x15, x10, x1
    45c8:	bfi	x0, x1, #32, #32
    45cc:	cmp	x2, x0
    45d0:	b.ls	45e8 <PyInit__ctypes_test@@Base+0x1090>  // b.plast
    45d4:	add	x0, x0, x7
    45d8:	cmp	x2, x0
    45dc:	ccmp	x7, x0, #0x2, hi  // hi = pmore
    45e0:	b.ls	47b4 <PyInit__ctypes_test@@Base+0x125c>  // b.plast
    45e4:	sub	x15, x15, #0x1
    45e8:	sub	x0, x0, x2
    45ec:	orr	x15, x15, x4, lsl #32
    45f0:	lsr	x1, x15, #32
    45f4:	lsr	x14, x8, #32
    45f8:	and	x2, x15, #0xffffffff
    45fc:	and	x16, x8, #0xffffffff
    4600:	mul	x4, x2, x16
    4604:	mul	x17, x1, x16
    4608:	mul	x1, x1, x14
    460c:	madd	x2, x14, x2, x17
    4610:	add	x2, x2, x4, lsr #32
    4614:	mov	x5, #0x100000000           	// #4294967296
    4618:	add	x5, x1, x5
    461c:	cmp	x17, x2
    4620:	csel	x1, x5, x1, hi  // hi = pmore
    4624:	add	x1, x1, x2, lsr #32
    4628:	and	x4, x4, #0xffffffff
    462c:	add	x2, x4, x2, lsl #32
    4630:	cmp	x0, x1
    4634:	b.cc	4644 <PyInit__ctypes_test@@Base+0x10ec>  // b.lo, b.ul, b.last
    4638:	mov	x4, x15
    463c:	ccmp	x13, x2, #0x2, eq  // eq = none
    4640:	b.cs	467c <PyInit__ctypes_test@@Base+0x1124>  // b.hs, b.nlast
    4644:	sub	x4, x15, #0x1
    4648:	adds	x13, x13, x8
    464c:	adc	x0, x0, x7
    4650:	cmp	x7, x0
    4654:	b.cc	4660 <PyInit__ctypes_test@@Base+0x1108>  // b.lo, b.ul, b.last
    4658:	ccmp	x8, x13, #0x2, eq  // eq = none
    465c:	b.hi	467c <PyInit__ctypes_test@@Base+0x1124>  // b.pmore
    4660:	cmp	x1, x0
    4664:	b.hi	4670 <PyInit__ctypes_test@@Base+0x1118>  // b.pmore
    4668:	ccmp	x2, x13, #0x0, eq  // eq = none
    466c:	b.ls	467c <PyInit__ctypes_test@@Base+0x1124>  // b.plast
    4670:	sub	x4, x15, #0x2
    4674:	adds	x13, x13, x8
    4678:	adc	x0, x0, x7
    467c:	sub	x2, x13, x2
    4680:	cmp	x13, x2
    4684:	sbc	x0, x0, x1
    4688:	mov	x5, #0xffffffffffffffff    	// #-1
    468c:	cmp	x7, x0
    4690:	b.eq	478c <PyInit__ctypes_test@@Base+0x1234>  // b.none
    4694:	udiv	x1, x0, x10
    4698:	mul	x5, x11, x1
    469c:	msub	x0, x1, x10, x0
    46a0:	extr	x0, x0, x2, #32
    46a4:	cmp	x5, x0
    46a8:	b.ls	46c0 <PyInit__ctypes_test@@Base+0x1168>  // b.plast
    46ac:	add	x0, x0, x7
    46b0:	cmp	x5, x0
    46b4:	ccmp	x7, x0, #0x2, hi  // hi = pmore
    46b8:	b.ls	47c0 <PyInit__ctypes_test@@Base+0x1268>  // b.plast
    46bc:	sub	x1, x1, #0x1
    46c0:	sub	x0, x0, x5
    46c4:	udiv	x5, x0, x10
    46c8:	mul	x11, x11, x5
    46cc:	msub	x0, x5, x10, x0
    46d0:	bfi	x2, x0, #32, #32
    46d4:	mov	x0, x2
    46d8:	cmp	x11, x2
    46dc:	b.ls	46f4 <PyInit__ctypes_test@@Base+0x119c>  // b.plast
    46e0:	add	x0, x2, x7
    46e4:	cmp	x11, x0
    46e8:	ccmp	x7, x0, #0x2, hi  // hi = pmore
    46ec:	b.ls	47cc <PyInit__ctypes_test@@Base+0x1274>  // b.plast
    46f0:	sub	x5, x5, #0x1
    46f4:	sub	x0, x0, x11
    46f8:	orr	x2, x5, x1, lsl #32
    46fc:	lsr	x1, x2, #32
    4700:	and	x10, x2, #0xffffffff
    4704:	mul	x5, x16, x10
    4708:	mul	x16, x1, x16
    470c:	mul	x1, x14, x1
    4710:	madd	x14, x14, x10, x16
    4714:	add	x14, x14, x5, lsr #32
    4718:	mov	x10, #0x100000000           	// #4294967296
    471c:	add	x10, x1, x10
    4720:	cmp	x16, x14
    4724:	csel	x1, x10, x1, hi  // hi = pmore
    4728:	add	x1, x1, x14, lsr #32
    472c:	and	x5, x5, #0xffffffff
    4730:	add	x14, x5, x14, lsl #32
    4734:	cmp	x0, x1
    4738:	b.cc	4748 <PyInit__ctypes_test@@Base+0x11f0>  // b.lo, b.ul, b.last
    473c:	cmp	x14, #0x0
    4740:	ccmp	x0, x1, #0x0, ne  // ne = any
    4744:	b.ne	47d8 <PyInit__ctypes_test@@Base+0x1280>  // b.any
    4748:	sub	x5, x2, #0x1
    474c:	adds	x0, x0, x7
    4750:	b.cs	477c <PyInit__ctypes_test@@Base+0x1224>  // b.hs, b.nlast
    4754:	cmp	x0, x1
    4758:	b.cc	4764 <PyInit__ctypes_test@@Base+0x120c>  // b.lo, b.ul, b.last
    475c:	ccmp	x8, x14, #0x2, eq  // eq = none
    4760:	b.cs	477c <PyInit__ctypes_test@@Base+0x1224>  // b.hs, b.nlast
    4764:	sub	x5, x2, #0x2
    4768:	lsl	x2, x8, #1
    476c:	cmp	x8, x2
    4770:	cinc	x7, x7, hi  // hi = pmore
    4774:	add	x0, x0, x7
    4778:	mov	x8, x2
    477c:	cmp	x0, x1
    4780:	orr	x0, x5, #0x1
    4784:	ccmp	x8, x14, #0x0, eq  // eq = none
    4788:	csel	x5, x0, x5, ne  // ne = any
    478c:	mov	x2, x9
    4790:	b	44d4 <PyInit__ctypes_test@@Base+0xf7c>
    4794:	sub	x6, x6, #0x1
    4798:	mov	x0, x13
    479c:	mov	x2, x10
    47a0:	mov	x13, #0x0                   	// #0
    47a4:	b	457c <PyInit__ctypes_test@@Base+0x1024>
    47a8:	sub	x4, x4, #0x2
    47ac:	add	x1, x1, x7
    47b0:	b	45b8 <PyInit__ctypes_test@@Base+0x1060>
    47b4:	sub	x15, x15, #0x2
    47b8:	add	x0, x0, x7
    47bc:	b	45e8 <PyInit__ctypes_test@@Base+0x1090>
    47c0:	sub	x1, x1, #0x2
    47c4:	add	x0, x0, x7
    47c8:	b	46c0 <PyInit__ctypes_test@@Base+0x1168>
    47cc:	sub	x5, x5, #0x2
    47d0:	add	x0, x0, x7
    47d4:	b	46f4 <PyInit__ctypes_test@@Base+0x119c>
    47d8:	mov	x5, x2
    47dc:	mov	x8, #0x0                   	// #0
    47e0:	b	477c <PyInit__ctypes_test@@Base+0x1224>
    47e4:	tbz	x10, #47, 4abc <PyInit__ctypes_test@@Base+0x1564>
    47e8:	ands	x1, x4, #0x800000000000
    47ec:	csel	x4, x10, x4, ne  // ne = any
    47f0:	cmp	x1, #0x0
    47f4:	csel	x5, x13, x5, ne  // ne = any
    47f8:	csel	x2, x0, x2, ne  // ne = any
    47fc:	b	44a8 <PyInit__ctypes_test@@Base+0xf50>
    4800:	orr	w3, w3, #0x2
    4804:	b	4300 <PyInit__ctypes_test@@Base+0xda8>
    4808:	mov	x4, x10
    480c:	mov	x5, x13
    4810:	mov	x2, x0
    4814:	mov	x7, x14
    4818:	b	44c0 <PyInit__ctypes_test@@Base+0xf68>
    481c:	cmp	x7, #0x2
    4820:	b.ne	44a8 <PyInit__ctypes_test@@Base+0xf50>  // b.any
    4824:	mov	x9, x2
    4828:	b	4300 <PyInit__ctypes_test@@Base+0xda8>
    482c:	and	x1, x5, #0xf
    4830:	cmp	x1, #0x4
    4834:	b.eq	4508 <PyInit__ctypes_test@@Base+0xfb0>  // b.none
    4838:	adds	x5, x5, #0x4
    483c:	cinc	x4, x4, cs  // cs = hs, nlast
    4840:	b	4508 <PyInit__ctypes_test@@Base+0xfb0>
    4844:	cbnz	x2, 4508 <PyInit__ctypes_test@@Base+0xfb0>
    4848:	adds	x5, x5, #0x8
    484c:	cinc	x4, x4, cs  // cs = hs, nlast
    4850:	b	4508 <PyInit__ctypes_test@@Base+0xfb0>
    4854:	cbz	x2, 4508 <PyInit__ctypes_test@@Base+0xfb0>
    4858:	adds	x5, x5, #0x8
    485c:	cinc	x4, x4, cs  // cs = hs, nlast
    4860:	b	4508 <PyInit__ctypes_test@@Base+0xfb0>
    4864:	and	x5, x12, #0xc00000
    4868:	cmp	x5, #0x400, lsl #12
    486c:	b.eq	48b8 <PyInit__ctypes_test@@Base+0x1360>  // b.none
    4870:	cmp	x5, #0x800, lsl #12
    4874:	b.eq	48d0 <PyInit__ctypes_test@@Base+0x1378>  // b.none
    4878:	mov	x6, #0x7fff                	// #32767
    487c:	cbz	x5, 4888 <PyInit__ctypes_test@@Base+0x1330>
    4880:	mov	x5, #0xffffffffffffffff    	// #-1
    4884:	mov	x6, #0x7ffe                	// #32766
    4888:	mov	w0, #0x14                  	// #20
    488c:	orr	w3, w3, w0
    4890:	mov	x4, x5
    4894:	mov	x1, #0x0                   	// #0
    4898:	mov	x0, x5
    489c:	bfxil	x1, x4, #0, #48
    48a0:	bfi	x1, x6, #48, #15
    48a4:	bfi	x1, x2, #63, #1
    48a8:	stp	x0, x1, [sp, #16]
    48ac:	mov	w0, w3
    48b0:	bl	5524 <PyInit__ctypes_test@@Base+0x1fcc>
    48b4:	b	4a90 <PyInit__ctypes_test@@Base+0x1538>
    48b8:	cmp	x2, #0x0
    48bc:	csetm	x5, ne  // ne = any
    48c0:	mov	x6, #0x7ffe                	// #32766
    48c4:	mov	x0, #0x7fff                	// #32767
    48c8:	csel	x6, x6, x0, ne  // ne = any
    48cc:	b	4888 <PyInit__ctypes_test@@Base+0x1330>
    48d0:	cmp	x2, #0x0
    48d4:	csetm	x5, eq  // eq = none
    48d8:	mov	x6, #0x7ffe                	// #32766
    48dc:	mov	x0, #0x7fff                	// #32767
    48e0:	csel	x6, x6, x0, eq  // eq = none
    48e4:	b	4888 <PyInit__ctypes_test@@Base+0x1330>
    48e8:	mov	x1, #0x1                   	// #1
    48ec:	sub	x0, x1, x0
    48f0:	cmp	x0, #0x74
    48f4:	b.gt	49f8 <PyInit__ctypes_test@@Base+0x14a0>
    48f8:	cmp	x0, #0x3f
    48fc:	b.gt	4940 <PyInit__ctypes_test@@Base+0x13e8>
    4900:	mov	w6, #0x40                  	// #64
    4904:	sub	w6, w6, w0
    4908:	lsl	x1, x4, x6
    490c:	lsr	x7, x5, x0
    4910:	orr	x1, x1, x7
    4914:	lsl	x5, x5, x6
    4918:	cmp	x5, #0x0
    491c:	cset	x5, ne  // ne = any
    4920:	orr	x1, x1, x5
    4924:	lsr	x0, x4, x0
    4928:	tst	x1, #0x7
    492c:	b.ne	4988 <PyInit__ctypes_test@@Base+0x1430>  // b.any
    4930:	tbnz	x0, #51, 49a8 <PyInit__ctypes_test@@Base+0x1450>
    4934:	extr	x5, x0, x1, #3
    4938:	lsr	x4, x0, #3
    493c:	b	4978 <PyInit__ctypes_test@@Base+0x1420>
    4940:	sub	w6, w0, #0x40
    4944:	lsr	x6, x4, x6
    4948:	mov	w1, #0x80                  	// #128
    494c:	sub	w1, w1, w0
    4950:	lsl	x4, x4, x1
    4954:	cmp	x0, #0x40
    4958:	csel	x0, x4, xzr, ne  // ne = any
    495c:	orr	x5, x0, x5
    4960:	cmp	x5, #0x0
    4964:	cset	x1, ne  // ne = any
    4968:	orr	x1, x6, x1
    496c:	lsr	x5, x6, #3
    4970:	ands	x4, x1, #0x7
    4974:	b.ne	4984 <PyInit__ctypes_test@@Base+0x142c>  // b.any
    4978:	tbz	w12, #11, 4ab0 <PyInit__ctypes_test@@Base+0x1558>
    497c:	mov	x6, #0x0                   	// #0
    4980:	b	49b8 <PyInit__ctypes_test@@Base+0x1460>
    4984:	mov	x0, #0x0                   	// #0
    4988:	orr	w3, w3, #0x10
    498c:	and	x12, x12, #0xc00000
    4990:	cmp	x12, #0x400, lsl #12
    4994:	b.eq	49d8 <PyInit__ctypes_test@@Base+0x1480>  // b.none
    4998:	cmp	x12, #0x800, lsl #12
    499c:	b.eq	49e8 <PyInit__ctypes_test@@Base+0x1490>  // b.none
    49a0:	cbz	x12, 49c0 <PyInit__ctypes_test@@Base+0x1468>
    49a4:	tbz	x0, #51, 4acc <PyInit__ctypes_test@@Base+0x1574>
    49a8:	orr	w3, w3, #0x10
    49ac:	mov	x4, #0x0                   	// #0
    49b0:	mov	x5, #0x0                   	// #0
    49b4:	mov	x6, #0x1                   	// #1
    49b8:	orr	w3, w3, #0x8
    49bc:	b	4894 <PyInit__ctypes_test@@Base+0x133c>
    49c0:	and	x4, x1, #0xf
    49c4:	cmp	x4, #0x4
    49c8:	b.eq	49a4 <PyInit__ctypes_test@@Base+0x144c>  // b.none
    49cc:	adds	x1, x1, #0x4
    49d0:	cinc	x0, x0, cs  // cs = hs, nlast
    49d4:	b	49a4 <PyInit__ctypes_test@@Base+0x144c>
    49d8:	cbnz	x2, 49a4 <PyInit__ctypes_test@@Base+0x144c>
    49dc:	adds	x1, x1, #0x8
    49e0:	cinc	x0, x0, cs  // cs = hs, nlast
    49e4:	b	49a4 <PyInit__ctypes_test@@Base+0x144c>
    49e8:	cbz	x2, 49a4 <PyInit__ctypes_test@@Base+0x144c>
    49ec:	adds	x1, x1, #0x8
    49f0:	cinc	x0, x0, cs  // cs = hs, nlast
    49f4:	b	49a4 <PyInit__ctypes_test@@Base+0x144c>
    49f8:	orr	x5, x5, x4
    49fc:	cbz	x5, 4a28 <PyInit__ctypes_test@@Base+0x14d0>
    4a00:	orr	w3, w3, #0x10
    4a04:	and	x12, x12, #0xc00000
    4a08:	cmp	x12, #0x400, lsl #12
    4a0c:	b.eq	4a38 <PyInit__ctypes_test@@Base+0x14e0>  // b.none
    4a10:	cmp	x12, #0x800, lsl #12
    4a14:	b.eq	4a48 <PyInit__ctypes_test@@Base+0x14f0>  // b.none
    4a18:	cmp	x12, #0x0
    4a1c:	mov	x5, #0x5                   	// #5
    4a20:	csinc	x5, x5, xzr, eq  // eq = none
    4a24:	lsr	x5, x5, #3
    4a28:	orr	w3, w3, #0x8
    4a2c:	mov	x4, #0x0                   	// #0
    4a30:	mov	x6, #0x0                   	// #0
    4a34:	b	4894 <PyInit__ctypes_test@@Base+0x133c>
    4a38:	cmp	x2, #0x0
    4a3c:	mov	x5, #0x9                   	// #9
    4a40:	csinc	x5, x5, xzr, eq  // eq = none
    4a44:	b	4a24 <PyInit__ctypes_test@@Base+0x14cc>
    4a48:	cmp	x2, #0x0
    4a4c:	mov	x5, #0x9                   	// #9
    4a50:	csinc	x5, x5, xzr, ne  // ne = any
    4a54:	b	4a24 <PyInit__ctypes_test@@Base+0x14cc>
    4a58:	mov	x4, #0x0                   	// #0
    4a5c:	mov	x5, #0x0                   	// #0
    4a60:	mov	x6, #0x0                   	// #0
    4a64:	b	4a74 <PyInit__ctypes_test@@Base+0x151c>
    4a68:	mov	x4, #0x0                   	// #0
    4a6c:	mov	x5, #0x0                   	// #0
    4a70:	mov	x6, #0x0                   	// #0
    4a74:	mov	x1, #0x0                   	// #0
    4a78:	mov	x0, x5
    4a7c:	bfxil	x1, x4, #0, #48
    4a80:	bfi	x1, x6, #48, #15
    4a84:	bfi	x1, x9, #63, #1
    4a88:	stp	x0, x1, [sp, #16]
    4a8c:	cbnz	w3, 48ac <PyInit__ctypes_test@@Base+0x1354>
    4a90:	ldr	q0, [sp, #16]
    4a94:	ldp	x29, x30, [sp], #32
    4a98:	ret
    4a9c:	mov	x9, x2
    4aa0:	mov	x4, #0x0                   	// #0
    4aa4:	mov	x5, #0x0                   	// #0
    4aa8:	mov	x6, #0x0                   	// #0
    4aac:	b	4a74 <PyInit__ctypes_test@@Base+0x151c>
    4ab0:	mov	x9, x2
    4ab4:	mov	x6, #0x0                   	// #0
    4ab8:	b	4a74 <PyInit__ctypes_test@@Base+0x151c>
    4abc:	mov	x4, x10
    4ac0:	mov	x5, x13
    4ac4:	mov	x2, x0
    4ac8:	b	44a8 <PyInit__ctypes_test@@Base+0xf50>
    4acc:	extr	x5, x0, x1, #3
    4ad0:	lsr	x4, x0, #3
    4ad4:	mov	x6, #0x0                   	// #0
    4ad8:	b	49b8 <PyInit__ctypes_test@@Base+0x1460>
    4adc:	stp	x29, x30, [sp, #-32]!
    4ae0:	mov	x29, sp
    4ae4:	str	q0, [sp, #16]
    4ae8:	ldr	x2, [sp, #16]
    4aec:	ldr	x0, [sp, #24]
    4af0:	str	q1, [sp, #16]
    4af4:	ldr	x7, [sp, #16]
    4af8:	ldr	x1, [sp, #24]
    4afc:	mrs	x13, fpcr
    4b00:	ubfx	x8, x0, #0, #48
    4b04:	ubfx	x9, x0, #48, #15
    4b08:	lsr	x0, x0, #63
    4b0c:	and	w11, w0, #0xff
    4b10:	cbz	w9, 4bf8 <PyInit__ctypes_test@@Base+0x16a0>
    4b14:	mov	x4, x8
    4b18:	mov	w5, #0x7fff                	// #32767
    4b1c:	cmp	w9, w5
    4b20:	b.eq	4c60 <PyInit__ctypes_test@@Base+0x1708>  // b.none
    4b24:	extr	x4, x8, x2, #61
    4b28:	orr	x4, x4, #0x8000000000000
    4b2c:	lsl	x5, x2, #3
    4b30:	and	x9, x9, #0xffff
    4b34:	sub	x9, x9, #0x3, lsl #12
    4b38:	sub	x9, x9, #0xfff
    4b3c:	mov	x6, #0x0                   	// #0
    4b40:	mov	w8, #0x0                   	// #0
    4b44:	ubfx	x14, x1, #0, #48
    4b48:	ubfx	x12, x1, #48, #15
    4b4c:	lsr	x1, x1, #63
    4b50:	and	w3, w1, #0xff
    4b54:	cbz	w12, 4ca8 <PyInit__ctypes_test@@Base+0x1750>
    4b58:	mov	w10, #0x7fff                	// #32767
    4b5c:	cmp	w12, w10
    4b60:	b.eq	4d0c <PyInit__ctypes_test@@Base+0x17b4>  // b.none
    4b64:	extr	x10, x14, x7, #61
    4b68:	orr	x10, x10, #0x8000000000000
    4b6c:	lsl	x7, x7, #3
    4b70:	and	x12, x12, #0xffff
    4b74:	sub	x12, x12, #0x3, lsl #12
    4b78:	sub	x12, x12, #0xfff
    4b7c:	mov	x14, #0x0                   	// #0
    4b80:	eor	w11, w11, w3
    4b84:	and	x11, x11, #0xff
    4b88:	add	x12, x9, x12
    4b8c:	add	x9, x12, #0x1
    4b90:	orr	x3, x14, x6, lsl #2
    4b94:	cmp	x3, #0xa
    4b98:	b.le	4dac <PyInit__ctypes_test@@Base+0x1854>
    4b9c:	cmp	x3, #0xc
    4ba0:	csel	x1, x1, x0, lt  // lt = tstop
    4ba4:	csel	x4, x10, x4, lt  // lt = tstop
    4ba8:	csel	x5, x7, x5, lt  // lt = tstop
    4bac:	csel	x6, x14, x6, lt  // lt = tstop
    4bb0:	cmp	x6, #0x2
    4bb4:	b.eq	5194 <PyInit__ctypes_test@@Base+0x1c3c>  // b.none
    4bb8:	b.gt	4df8 <PyInit__ctypes_test@@Base+0x18a0>
    4bbc:	cbz	x6, 51b4 <PyInit__ctypes_test@@Base+0x1c5c>
    4bc0:	cmp	x6, #0x1
    4bc4:	csel	x4, x4, xzr, ne  // ne = any
    4bc8:	csel	x5, x5, xzr, ne  // ne = any
    4bcc:	csel	x9, x9, xzr, ne  // ne = any
    4bd0:	mov	x3, #0x0                   	// #0
    4bd4:	mov	x2, x5
    4bd8:	bfxil	x3, x4, #0, #48
    4bdc:	bfi	x3, x9, #48, #15
    4be0:	bfi	x3, x1, #63, #1
    4be4:	stp	x2, x3, [sp, #16]
    4be8:	cbnz	w8, 4fe8 <PyInit__ctypes_test@@Base+0x1a90>
    4bec:	ldr	q0, [sp, #16]
    4bf0:	ldp	x29, x30, [sp], #32
    4bf4:	ret
    4bf8:	orr	x5, x8, x2
    4bfc:	cbz	x5, 4c80 <PyInit__ctypes_test@@Base+0x1728>
    4c00:	cbz	x8, 4c3c <PyInit__ctypes_test@@Base+0x16e4>
    4c04:	clz	x6, x8
    4c08:	sub	x4, x6, #0xf
    4c0c:	add	w5, w4, #0x3
    4c10:	lsl	x8, x8, x5
    4c14:	mov	w3, #0x3d                  	// #61
    4c18:	sub	w4, w3, w4
    4c1c:	lsr	x4, x2, x4
    4c20:	orr	x4, x4, x8
    4c24:	lsl	x5, x2, x5
    4c28:	mov	x9, #0xffffffffffffc011    	// #-16367
    4c2c:	sub	x9, x9, x6
    4c30:	mov	x6, #0x0                   	// #0
    4c34:	mov	w8, #0x0                   	// #0
    4c38:	b	4b44 <PyInit__ctypes_test@@Base+0x15ec>
    4c3c:	clz	x4, x2
    4c40:	add	x6, x4, #0x40
    4c44:	add	x4, x4, #0x31
    4c48:	cmp	x4, #0x3c
    4c4c:	b.le	4c0c <PyInit__ctypes_test@@Base+0x16b4>
    4c50:	sub	w4, w4, #0x3d
    4c54:	mov	x5, x8
    4c58:	lsl	x4, x2, x4
    4c5c:	b	4c28 <PyInit__ctypes_test@@Base+0x16d0>
    4c60:	orr	x5, x8, x2
    4c64:	cbz	x5, 4c94 <PyInit__ctypes_test@@Base+0x173c>
    4c68:	lsr	x8, x8, #47
    4c6c:	eor	w8, w8, #0x1
    4c70:	mov	x5, x2
    4c74:	mov	x9, #0x7fff                	// #32767
    4c78:	mov	x6, #0x3                   	// #3
    4c7c:	b	4b44 <PyInit__ctypes_test@@Base+0x15ec>
    4c80:	mov	x4, x5
    4c84:	mov	x9, #0x0                   	// #0
    4c88:	mov	x6, #0x1                   	// #1
    4c8c:	mov	w8, #0x0                   	// #0
    4c90:	b	4b44 <PyInit__ctypes_test@@Base+0x15ec>
    4c94:	mov	x4, x5
    4c98:	mov	x9, #0x7fff                	// #32767
    4c9c:	mov	x6, #0x2                   	// #2
    4ca0:	mov	w8, #0x0                   	// #0
    4ca4:	b	4b44 <PyInit__ctypes_test@@Base+0x15ec>
    4ca8:	orr	x10, x14, x7
    4cac:	cbz	x10, 5220 <PyInit__ctypes_test@@Base+0x1cc8>
    4cb0:	cbz	x14, 4ce8 <PyInit__ctypes_test@@Base+0x1790>
    4cb4:	clz	x15, x14
    4cb8:	sub	x10, x15, #0xf
    4cbc:	add	w12, w10, #0x3
    4cc0:	lsl	x14, x14, x12
    4cc4:	mov	w2, #0x3d                  	// #61
    4cc8:	sub	w10, w2, w10
    4ccc:	lsr	x10, x7, x10
    4cd0:	orr	x10, x10, x14
    4cd4:	lsl	x7, x7, x12
    4cd8:	mov	x12, #0xffffffffffffc011    	// #-16367
    4cdc:	sub	x12, x12, x15
    4ce0:	mov	x14, #0x0                   	// #0
    4ce4:	b	4b80 <PyInit__ctypes_test@@Base+0x1628>
    4ce8:	clz	x10, x7
    4cec:	add	x15, x10, #0x40
    4cf0:	add	x10, x10, #0x31
    4cf4:	cmp	x10, #0x3c
    4cf8:	b.le	4cbc <PyInit__ctypes_test@@Base+0x1764>
    4cfc:	sub	w10, w10, #0x3d
    4d00:	lsl	x10, x7, x10
    4d04:	mov	x7, x14
    4d08:	b	4cd8 <PyInit__ctypes_test@@Base+0x1780>
    4d0c:	orr	x10, x14, x7
    4d10:	cbz	x10, 4d80 <PyInit__ctypes_test@@Base+0x1828>
    4d14:	tst	x14, #0x800000000000
    4d18:	csinc	w8, w8, wzr, ne  // ne = any
    4d1c:	eor	w11, w11, w3
    4d20:	and	x11, x11, #0xff
    4d24:	add	x9, x9, #0x8, lsl #12
    4d28:	lsl	x2, x6, #2
    4d2c:	orr	x3, x2, #0x3
    4d30:	cmp	x3, #0xa
    4d34:	b.gt	4e04 <PyInit__ctypes_test@@Base+0x18ac>
    4d38:	mov	x10, x14
    4d3c:	mov	x14, #0x3                   	// #3
    4d40:	mov	x2, #0x1                   	// #1
    4d44:	lsl	x2, x2, x3
    4d48:	mov	x0, #0x530                 	// #1328
    4d4c:	tst	x2, x0
    4d50:	b.ne	4f60 <PyInit__ctypes_test@@Base+0x1a08>  // b.any
    4d54:	mov	x0, #0x240                 	// #576
    4d58:	ands	x2, x2, x0
    4d5c:	mov	x4, #0xffffffffffff        	// #281474976710655
    4d60:	csel	x4, x10, x4, eq  // eq = none
    4d64:	cmp	x2, #0x0
    4d68:	csinv	x5, x7, xzr, eq  // eq = none
    4d6c:	csel	x1, x1, xzr, eq  // eq = none
    4d70:	mov	x6, #0x3                   	// #3
    4d74:	csel	x6, x14, x6, eq  // eq = none
    4d78:	csinc	w8, w8, wzr, eq  // eq = none
    4d7c:	b	4bb0 <PyInit__ctypes_test@@Base+0x1658>
    4d80:	eor	w11, w11, w3
    4d84:	and	x11, x11, #0xff
    4d88:	add	x12, x9, #0x7, lsl #12
    4d8c:	add	x12, x12, #0xfff
    4d90:	add	x9, x9, #0x8, lsl #12
    4d94:	lsl	x2, x6, #2
    4d98:	orr	x3, x2, #0x2
    4d9c:	cmp	x3, #0xa
    4da0:	b.gt	4dcc <PyInit__ctypes_test@@Base+0x1874>
    4da4:	mov	x7, x10
    4da8:	mov	x14, #0x2                   	// #2
    4dac:	cmp	x3, #0x2
    4db0:	b.gt	4d40 <PyInit__ctypes_test@@Base+0x17e8>
    4db4:	cbz	x3, 4e10 <PyInit__ctypes_test@@Base+0x18b8>
    4db8:	mov	x4, x10
    4dbc:	mov	x5, x7
    4dc0:	mov	x1, x11
    4dc4:	mov	x6, x14
    4dc8:	b	4bb0 <PyInit__ctypes_test@@Base+0x1658>
    4dcc:	mov	x7, x10
    4dd0:	mov	x14, #0x2                   	// #2
    4dd4:	cmp	x3, #0xe
    4dd8:	b.le	4b9c <PyInit__ctypes_test@@Base+0x1644>
    4ddc:	tbz	x4, #47, 4df4 <PyInit__ctypes_test@@Base+0x189c>
    4de0:	ands	x2, x10, #0x800000000000
    4de4:	csel	x4, x4, x10, ne  // ne = any
    4de8:	cmp	x2, #0x0
    4dec:	csel	x5, x5, x7, ne  // ne = any
    4df0:	csel	x0, x0, x1, ne  // ne = any
    4df4:	mov	x1, x0
    4df8:	orr	x4, x4, #0x800000000000
    4dfc:	mov	x9, #0x7fff                	// #32767
    4e00:	b	4bd0 <PyInit__ctypes_test@@Base+0x1678>
    4e04:	mov	x10, x14
    4e08:	mov	x14, #0x3                   	// #3
    4e0c:	b	4dd4 <PyInit__ctypes_test@@Base+0x187c>
    4e10:	lsr	x6, x5, #32
    4e14:	lsr	x1, x7, #32
    4e18:	and	x2, x5, #0xffffffff
    4e1c:	and	x7, x7, #0xffffffff
    4e20:	mul	x14, x7, x2
    4e24:	mul	x3, x6, x7
    4e28:	mul	x5, x6, x1
    4e2c:	madd	x16, x1, x2, x3
    4e30:	add	x16, x16, x14, lsr #32
    4e34:	mov	x0, #0x100000000           	// #4294967296
    4e38:	add	x0, x5, x0
    4e3c:	cmp	x3, x16
    4e40:	csel	x5, x0, x5, hi  // hi = pmore
    4e44:	and	x14, x14, #0xffffffff
    4e48:	add	x14, x14, x16, lsl #32
    4e4c:	lsr	x0, x10, #32
    4e50:	and	x10, x10, #0xffffffff
    4e54:	mul	x3, x2, x10
    4e58:	mul	x17, x6, x10
    4e5c:	mul	x6, x6, x0
    4e60:	madd	x2, x0, x2, x17
    4e64:	add	x2, x2, x3, lsr #32
    4e68:	mov	x15, #0x100000000           	// #4294967296
    4e6c:	add	x15, x6, x15
    4e70:	cmp	x17, x2
    4e74:	csel	x6, x15, x6, hi  // hi = pmore
    4e78:	add	x15, x6, x2, lsr #32
    4e7c:	and	x3, x3, #0xffffffff
    4e80:	add	x3, x3, x2, lsl #32
    4e84:	add	x16, x3, x16, lsr #32
    4e88:	lsr	x2, x4, #32
    4e8c:	and	x4, x4, #0xffffffff
    4e90:	mul	x6, x7, x4
    4e94:	mul	x7, x2, x7
    4e98:	mul	x17, x1, x2
    4e9c:	madd	x1, x1, x4, x7
    4ea0:	add	x1, x1, x6, lsr #32
    4ea4:	mov	x18, #0x100000000           	// #4294967296
    4ea8:	add	x18, x17, x18
    4eac:	cmp	x7, x1
    4eb0:	csel	x17, x18, x17, hi  // hi = pmore
    4eb4:	add	x7, x17, x1, lsr #32
    4eb8:	and	x6, x6, #0xffffffff
    4ebc:	add	x1, x6, x1, lsl #32
    4ec0:	mul	x6, x4, x10
    4ec4:	mul	x10, x2, x10
    4ec8:	mul	x2, x0, x2
    4ecc:	madd	x0, x0, x4, x10
    4ed0:	add	x0, x0, x6, lsr #32
    4ed4:	mov	x4, #0x100000000           	// #4294967296
    4ed8:	add	x4, x2, x4
    4edc:	cmp	x10, x0
    4ee0:	csel	x2, x4, x2, hi  // hi = pmore
    4ee4:	add	x5, x5, x16
    4ee8:	cmp	x5, x3
    4eec:	cset	x16, cc  // cc = lo, ul, last
    4ef0:	and	x3, x6, #0xffffffff
    4ef4:	add	x3, x3, x0, lsl #32
    4ef8:	add	x3, x3, x15
    4efc:	cinc	x10, x3, cc  // cc = lo, ul, last
    4f00:	adds	x1, x5, x1
    4f04:	cset	x5, cs  // cs = hs, nlast
    4f08:	add	x4, x10, x7
    4f0c:	cinc	x6, x4, cs  // cs = hs, nlast
    4f10:	cmp	x3, x15
    4f14:	ccmp	x10, x16, #0x0, cs  // cs = hs, nlast
    4f18:	lsr	x0, x0, #32
    4f1c:	cinc	x0, x0, cc  // cc = lo, ul, last
    4f20:	cmp	x4, x7
    4f24:	ccmp	x6, x5, #0x0, cs  // cs = hs, nlast
    4f28:	cinc	x2, x2, cc  // cc = lo, ul, last
    4f2c:	add	x0, x0, x2
    4f30:	extr	x4, x0, x6, #51
    4f34:	orr	x14, x14, x1, lsl #13
    4f38:	cmp	x14, #0x0
    4f3c:	cset	x5, ne  // ne = any
    4f40:	extr	x1, x6, x1, #51
    4f44:	orr	x5, x5, x1
    4f48:	tbz	x0, #39, 51ac <PyInit__ctypes_test@@Base+0x1c54>
    4f4c:	and	x0, x5, #0x1
    4f50:	orr	x5, x0, x5, lsr #1
    4f54:	orr	x5, x5, x4, lsl #63
    4f58:	lsr	x4, x4, #1
    4f5c:	b	51b0 <PyInit__ctypes_test@@Base+0x1c58>
    4f60:	mov	x1, x11
    4f64:	b	4bb0 <PyInit__ctypes_test@@Base+0x1658>
    4f68:	and	x2, x5, #0xf
    4f6c:	cmp	x2, #0x4
    4f70:	b.eq	51e8 <PyInit__ctypes_test@@Base+0x1c90>  // b.none
    4f74:	adds	x5, x5, #0x4
    4f78:	cinc	x4, x4, cs  // cs = hs, nlast
    4f7c:	b	51e8 <PyInit__ctypes_test@@Base+0x1c90>
    4f80:	cbnz	x1, 51e8 <PyInit__ctypes_test@@Base+0x1c90>
    4f84:	adds	x5, x5, #0x8
    4f88:	cinc	x4, x4, cs  // cs = hs, nlast
    4f8c:	b	51e8 <PyInit__ctypes_test@@Base+0x1c90>
    4f90:	cbz	x1, 51e8 <PyInit__ctypes_test@@Base+0x1c90>
    4f94:	adds	x5, x5, #0x8
    4f98:	cinc	x4, x4, cs  // cs = hs, nlast
    4f9c:	b	51e8 <PyInit__ctypes_test@@Base+0x1c90>
    4fa0:	and	x5, x13, #0xc00000
    4fa4:	cmp	x5, #0x400, lsl #12
    4fa8:	b.eq	4ff4 <PyInit__ctypes_test@@Base+0x1a9c>  // b.none
    4fac:	cmp	x5, #0x800, lsl #12
    4fb0:	b.eq	500c <PyInit__ctypes_test@@Base+0x1ab4>  // b.none
    4fb4:	mov	x0, #0x7fff                	// #32767
    4fb8:	cbz	x5, 4fc4 <PyInit__ctypes_test@@Base+0x1a6c>
    4fbc:	mov	x5, #0xffffffffffffffff    	// #-1
    4fc0:	mov	x0, #0x7ffe                	// #32766
    4fc4:	mov	w2, #0x14                  	// #20
    4fc8:	orr	w8, w8, w2
    4fcc:	mov	x4, x5
    4fd0:	mov	x3, #0x0                   	// #0
    4fd4:	mov	x2, x5
    4fd8:	bfxil	x3, x4, #0, #48
    4fdc:	bfi	x3, x0, #48, #15
    4fe0:	bfi	x3, x1, #63, #1
    4fe4:	stp	x2, x3, [sp, #16]
    4fe8:	mov	w0, w8
    4fec:	bl	5524 <PyInit__ctypes_test@@Base+0x1fcc>
    4ff0:	b	4bec <PyInit__ctypes_test@@Base+0x1694>
    4ff4:	cmp	x1, #0x0
    4ff8:	csetm	x5, ne  // ne = any
    4ffc:	mov	x0, #0x7ffe                	// #32766
    5000:	mov	x2, #0x7fff                	// #32767
    5004:	csel	x0, x0, x2, ne  // ne = any
    5008:	b	4fc4 <PyInit__ctypes_test@@Base+0x1a6c>
    500c:	cmp	x1, #0x0
    5010:	csetm	x5, eq  // eq = none
    5014:	mov	x0, #0x7ffe                	// #32766
    5018:	mov	x2, #0x7fff                	// #32767
    501c:	csel	x0, x0, x2, eq  // eq = none
    5020:	b	4fc4 <PyInit__ctypes_test@@Base+0x1a6c>
    5024:	mov	x2, #0x1                   	// #1
    5028:	sub	x0, x2, x0
    502c:	cmp	x0, #0x74
    5030:	b.gt	5134 <PyInit__ctypes_test@@Base+0x1bdc>
    5034:	cmp	x0, #0x3f
    5038:	b.gt	507c <PyInit__ctypes_test@@Base+0x1b24>
    503c:	mov	w3, #0x40                  	// #64
    5040:	sub	w3, w3, w0
    5044:	lsl	x2, x4, x3
    5048:	lsr	x6, x5, x0
    504c:	orr	x2, x2, x6
    5050:	lsl	x3, x5, x3
    5054:	cmp	x3, #0x0
    5058:	cset	x3, ne  // ne = any
    505c:	orr	x2, x2, x3
    5060:	lsr	x0, x4, x0
    5064:	tst	x2, #0x7
    5068:	b.ne	50c4 <PyInit__ctypes_test@@Base+0x1b6c>  // b.any
    506c:	tbnz	x0, #51, 50e4 <PyInit__ctypes_test@@Base+0x1b8c>
    5070:	extr	x5, x0, x2, #3
    5074:	lsr	x4, x0, #3
    5078:	b	50b4 <PyInit__ctypes_test@@Base+0x1b5c>
    507c:	sub	w3, w0, #0x40
    5080:	lsr	x3, x4, x3
    5084:	mov	w2, #0x80                  	// #128
    5088:	sub	w2, w2, w0
    508c:	lsl	x4, x4, x2
    5090:	cmp	x0, #0x40
    5094:	csel	x0, x4, xzr, ne  // ne = any
    5098:	orr	x5, x0, x5
    509c:	cmp	x5, #0x0
    50a0:	cset	x2, ne  // ne = any
    50a4:	orr	x2, x3, x2
    50a8:	lsr	x5, x3, #3
    50ac:	ands	x4, x2, #0x7
    50b0:	b.ne	50c0 <PyInit__ctypes_test@@Base+0x1b68>  // b.any
    50b4:	tbz	w13, #11, 51a4 <PyInit__ctypes_test@@Base+0x1c4c>
    50b8:	mov	x0, #0x0                   	// #0
    50bc:	b	50f4 <PyInit__ctypes_test@@Base+0x1b9c>
    50c0:	mov	x0, #0x0                   	// #0
    50c4:	orr	w8, w8, #0x10
    50c8:	and	x13, x13, #0xc00000
    50cc:	cmp	x13, #0x400, lsl #12
    50d0:	b.eq	5114 <PyInit__ctypes_test@@Base+0x1bbc>  // b.none
    50d4:	cmp	x13, #0x800, lsl #12
    50d8:	b.eq	5124 <PyInit__ctypes_test@@Base+0x1bcc>  // b.none
    50dc:	cbz	x13, 50fc <PyInit__ctypes_test@@Base+0x1ba4>
    50e0:	tbz	x0, #51, 5210 <PyInit__ctypes_test@@Base+0x1cb8>
    50e4:	orr	w8, w8, #0x10
    50e8:	mov	x4, #0x0                   	// #0
    50ec:	mov	x5, #0x0                   	// #0
    50f0:	mov	x0, #0x1                   	// #1
    50f4:	orr	w8, w8, #0x8
    50f8:	b	4fd0 <PyInit__ctypes_test@@Base+0x1a78>
    50fc:	and	x3, x2, #0xf
    5100:	cmp	x3, #0x4
    5104:	b.eq	50e0 <PyInit__ctypes_test@@Base+0x1b88>  // b.none
    5108:	adds	x2, x2, #0x4
    510c:	cinc	x0, x0, cs  // cs = hs, nlast
    5110:	b	50e0 <PyInit__ctypes_test@@Base+0x1b88>
    5114:	cbnz	x1, 50e0 <PyInit__ctypes_test@@Base+0x1b88>
    5118:	adds	x2, x2, #0x8
    511c:	cinc	x0, x0, cs  // cs = hs, nlast
    5120:	b	50e0 <PyInit__ctypes_test@@Base+0x1b88>
    5124:	cbz	x1, 50e0 <PyInit__ctypes_test@@Base+0x1b88>
    5128:	adds	x2, x2, #0x8
    512c:	cinc	x0, x0, cs  // cs = hs, nlast
    5130:	b	50e0 <PyInit__ctypes_test@@Base+0x1b88>
    5134:	orr	x5, x5, x4
    5138:	cbz	x5, 5164 <PyInit__ctypes_test@@Base+0x1c0c>
    513c:	orr	w8, w8, #0x10
    5140:	and	x13, x13, #0xc00000
    5144:	cmp	x13, #0x400, lsl #12
    5148:	b.eq	5174 <PyInit__ctypes_test@@Base+0x1c1c>  // b.none
    514c:	cmp	x13, #0x800, lsl #12
    5150:	b.eq	5184 <PyInit__ctypes_test@@Base+0x1c2c>  // b.none
    5154:	cmp	x13, #0x0
    5158:	mov	x5, #0x5                   	// #5
    515c:	csinc	x5, x5, xzr, eq  // eq = none
    5160:	lsr	x5, x5, #3
    5164:	orr	w8, w8, #0x8
    5168:	mov	x4, #0x0                   	// #0
    516c:	mov	x0, #0x0                   	// #0
    5170:	b	4fd0 <PyInit__ctypes_test@@Base+0x1a78>
    5174:	cmp	x1, #0x0
    5178:	mov	x5, #0x9                   	// #9
    517c:	csinc	x5, x5, xzr, eq  // eq = none
    5180:	b	5160 <PyInit__ctypes_test@@Base+0x1c08>
    5184:	cmp	x1, #0x0
    5188:	mov	x5, #0x9                   	// #9
    518c:	csinc	x5, x5, xzr, ne  // ne = any
    5190:	b	5160 <PyInit__ctypes_test@@Base+0x1c08>
    5194:	mov	x4, #0x0                   	// #0
    5198:	mov	x5, #0x0                   	// #0
    519c:	mov	x9, #0x7fff                	// #32767
    51a0:	b	4bd0 <PyInit__ctypes_test@@Base+0x1678>
    51a4:	mov	x9, #0x0                   	// #0
    51a8:	b	4bd0 <PyInit__ctypes_test@@Base+0x1678>
    51ac:	mov	x9, x12
    51b0:	mov	x1, x11
    51b4:	add	x0, x9, #0x3, lsl #12
    51b8:	add	x0, x0, #0xfff
    51bc:	cmp	x0, #0x0
    51c0:	b.le	5024 <PyInit__ctypes_test@@Base+0x1acc>
    51c4:	tst	x5, #0x7
    51c8:	b.eq	51e8 <PyInit__ctypes_test@@Base+0x1c90>  // b.none
    51cc:	orr	w8, w8, #0x10
    51d0:	and	x2, x13, #0xc00000
    51d4:	cmp	x2, #0x400, lsl #12
    51d8:	b.eq	4f80 <PyInit__ctypes_test@@Base+0x1a28>  // b.none
    51dc:	cmp	x2, #0x800, lsl #12
    51e0:	b.eq	4f90 <PyInit__ctypes_test@@Base+0x1a38>  // b.none
    51e4:	cbz	x2, 4f68 <PyInit__ctypes_test@@Base+0x1a10>
    51e8:	tbz	x4, #52, 51f4 <PyInit__ctypes_test@@Base+0x1c9c>
    51ec:	and	x4, x4, #0xffefffffffffffff
    51f0:	add	x0, x9, #0x4, lsl #12
    51f4:	mov	x2, #0x7ffe                	// #32766
    51f8:	cmp	x0, x2
    51fc:	b.gt	4fa0 <PyInit__ctypes_test@@Base+0x1a48>
    5200:	extr	x5, x4, x5, #3
    5204:	lsr	x4, x4, #3
    5208:	mov	x9, x0
    520c:	b	4bd0 <PyInit__ctypes_test@@Base+0x1678>
    5210:	extr	x5, x0, x2, #3
    5214:	lsr	x4, x0, #3
    5218:	mov	x0, #0x0                   	// #0
    521c:	b	50f4 <PyInit__ctypes_test@@Base+0x1b9c>
    5220:	mov	x7, x10
    5224:	mov	x12, #0x0                   	// #0
    5228:	mov	x14, #0x1                   	// #1
    522c:	b	4b80 <PyInit__ctypes_test@@Base+0x1628>
    5230:	stp	x29, x30, [sp, #-48]!
    5234:	mov	x29, sp
    5238:	str	x19, [sp, #16]
    523c:	str	q0, [sp, #32]
    5240:	ldr	x19, [sp, #32]
    5244:	ldr	x0, [sp, #40]
    5248:	mrs	x1, fpcr
    524c:	mov	x1, x19
    5250:	ubfx	x3, x0, #0, #48
    5254:	ubfx	x5, x0, #48, #15
    5258:	mov	x4, #0x3ffe                	// #16382
    525c:	cmp	x5, x4
    5260:	b.gt	5280 <PyInit__ctypes_test@@Base+0x1d28>
    5264:	cbnz	x5, 5348 <PyInit__ctypes_test@@Base+0x1df0>
    5268:	orr	x19, x19, x3
    526c:	cbnz	x19, 5358 <PyInit__ctypes_test@@Base+0x1e00>
    5270:	mov	x0, x19
    5274:	ldr	x19, [sp, #16]
    5278:	ldp	x29, x30, [sp], #48
    527c:	ret
    5280:	lsr	x0, x0, #63
    5284:	and	w0, w0, #0xff
    5288:	and	x4, x0, #0xff
    528c:	mov	x6, #0x403d                	// #16445
    5290:	cmp	x5, x6
    5294:	b.le	52c8 <PyInit__ctypes_test@@Base+0x1d70>
    5298:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
    529c:	add	x19, x4, x19
    52a0:	cmp	x4, #0x0
    52a4:	mov	x0, #0x403e                	// #16446
    52a8:	ccmp	x5, x0, #0x0, ne  // ne = any
    52ac:	b.ne	5364 <PyInit__ctypes_test@@Base+0x1e0c>  // b.any
    52b0:	extr	x3, x3, x1, #49
    52b4:	cbnz	x3, 536c <PyInit__ctypes_test@@Base+0x1e14>
    52b8:	cmp	xzr, x1, lsl #15
    52bc:	b.eq	5270 <PyInit__ctypes_test@@Base+0x1d18>  // b.none
    52c0:	mov	w0, #0x10                  	// #16
    52c4:	b	5350 <PyInit__ctypes_test@@Base+0x1df8>
    52c8:	orr	x3, x3, #0x1000000000000
    52cc:	mov	x0, #0x406f                	// #16495
    52d0:	sub	x2, x0, x5
    52d4:	cmp	x2, #0x3f
    52d8:	b.gt	5318 <PyInit__ctypes_test@@Base+0x1dc0>
    52dc:	sub	w2, w5, #0x4, lsl #12
    52e0:	sub	w2, w2, #0x2f
    52e4:	lsl	x0, x19, x2
    52e8:	cmp	x0, #0x0
    52ec:	cset	w0, ne  // ne = any
    52f0:	mov	w19, #0x406f                	// #16495
    52f4:	sub	w19, w19, w5
    52f8:	lsr	x19, x1, x19
    52fc:	lsl	x3, x3, x2
    5300:	orr	x19, x19, x3
    5304:	cmp	x4, #0x0
    5308:	cneg	x19, x19, ne  // ne = any
    530c:	cbz	w0, 5270 <PyInit__ctypes_test@@Base+0x1d18>
    5310:	mov	w0, #0x10                  	// #16
    5314:	b	5350 <PyInit__ctypes_test@@Base+0x1df8>
    5318:	sub	w19, w5, #0x3, lsl #12
    531c:	sub	w19, w19, #0xfef
    5320:	lsl	x19, x3, x19
    5324:	cmp	x2, #0x40
    5328:	csel	x19, x19, xzr, ne  // ne = any
    532c:	orr	x19, x19, x1
    5330:	cmp	x19, #0x0
    5334:	cset	w0, ne  // ne = any
    5338:	mov	w19, #0x402f                	// #16431
    533c:	sub	w19, w19, w5
    5340:	lsr	x19, x3, x19
    5344:	b	5304 <PyInit__ctypes_test@@Base+0x1dac>
    5348:	mov	x19, #0x0                   	// #0
    534c:	mov	w0, #0x10                  	// #16
    5350:	bl	5524 <PyInit__ctypes_test@@Base+0x1fcc>
    5354:	b	5270 <PyInit__ctypes_test@@Base+0x1d18>
    5358:	mov	x19, #0x0                   	// #0
    535c:	mov	w0, #0x10                  	// #16
    5360:	b	5350 <PyInit__ctypes_test@@Base+0x1df8>
    5364:	mov	w0, #0x1                   	// #1
    5368:	b	5350 <PyInit__ctypes_test@@Base+0x1df8>
    536c:	mov	w0, #0x1                   	// #1
    5370:	b	5350 <PyInit__ctypes_test@@Base+0x1df8>
    5374:	stp	x29, x30, [sp, #-32]!
    5378:	mov	x29, sp
    537c:	mrs	x0, fpcr
    5380:	fmov	w0, s0
    5384:	ubfx	x5, x0, #0, #23
    5388:	and	x4, x0, #0x7fffff
    538c:	ubfx	x1, x0, #23, #8
    5390:	lsr	w0, w0, #31
    5394:	add	x2, x1, #0x1
    5398:	tst	x2, #0xfe
    539c:	b.eq	53d0 <PyInit__ctypes_test@@Base+0x1e78>  // b.none
    53a0:	add	x1, x1, #0x3, lsl #12
    53a4:	add	x1, x1, #0xf80
    53a8:	lsl	x4, x4, #25
    53ac:	mov	x2, #0x0                   	// #0
    53b0:	mov	x3, #0x0                   	// #0
    53b4:	bfxil	x3, x4, #0, #48
    53b8:	bfi	x3, x1, #48, #15
    53bc:	bfi	x3, x0, #63, #1
    53c0:	stp	x2, x3, [sp, #16]
    53c4:	ldr	q0, [sp, #16]
    53c8:	ldp	x29, x30, [sp], #32
    53cc:	ret
    53d0:	cbnz	x1, 53f4 <PyInit__ctypes_test@@Base+0x1e9c>
    53d4:	cbz	x4, 53ac <PyInit__ctypes_test@@Base+0x1e54>
    53d8:	clz	x2, x4
    53dc:	sub	w1, w2, #0xf
    53e0:	lsl	x4, x4, x1
    53e4:	mov	w1, #0x3fa9                	// #16297
    53e8:	sub	w1, w1, w2
    53ec:	sxtw	x1, w1
    53f0:	b	53ac <PyInit__ctypes_test@@Base+0x1e54>
    53f4:	cbz	x4, 5428 <PyInit__ctypes_test@@Base+0x1ed0>
    53f8:	lsl	x4, x4, #25
    53fc:	mov	x2, #0x0                   	// #0
    5400:	mov	x3, #0x0                   	// #0
    5404:	orr	x4, x4, #0x800000000000
    5408:	bfxil	x3, x4, #0, #48
    540c:	orr	x3, x3, #0x7fff000000000000
    5410:	bfi	x3, x0, #63, #1
    5414:	stp	x2, x3, [sp, #16]
    5418:	tbnz	w5, #22, 53c4 <PyInit__ctypes_test@@Base+0x1e6c>
    541c:	mov	w0, #0x1                   	// #1
    5420:	bl	5524 <PyInit__ctypes_test@@Base+0x1fcc>
    5424:	b	53c4 <PyInit__ctypes_test@@Base+0x1e6c>
    5428:	mov	x1, #0x7fff                	// #32767
    542c:	b	53ac <PyInit__ctypes_test@@Base+0x1e54>
    5430:	stp	x29, x30, [sp, #-32]!
    5434:	mov	x29, sp
    5438:	mrs	x0, fpcr
    543c:	fmov	x0, d0
    5440:	ubfx	x4, x0, #0, #52
    5444:	ubfx	x1, x0, #52, #11
    5448:	lsr	x0, x0, #63
    544c:	and	w0, w0, #0xff
    5450:	add	x2, x1, #0x1
    5454:	tst	x2, #0x7fe
    5458:	b.eq	5490 <PyInit__ctypes_test@@Base+0x1f38>  // b.none
    545c:	add	x1, x1, #0x3, lsl #12
    5460:	add	x1, x1, #0xc00
    5464:	lsr	x6, x4, #4
    5468:	lsl	x5, x4, #60
    546c:	mov	x3, #0x0                   	// #0
    5470:	mov	x2, x5
    5474:	bfxil	x3, x6, #0, #48
    5478:	bfi	x3, x1, #48, #15
    547c:	bfi	x3, x0, #63, #1
    5480:	stp	x2, x3, [sp, #16]
    5484:	ldr	q0, [sp, #16]
    5488:	ldp	x29, x30, [sp], #32
    548c:	ret
    5490:	mov	x5, x4
    5494:	cbnz	x1, 54e0 <PyInit__ctypes_test@@Base+0x1f88>
    5498:	mov	x6, x4
    549c:	cbz	x4, 546c <PyInit__ctypes_test@@Base+0x1f14>
    54a0:	clz	x2, x4
    54a4:	cmp	w2, #0xe
    54a8:	b.gt	54d0 <PyInit__ctypes_test@@Base+0x1f78>
    54ac:	mov	w6, #0xf                   	// #15
    54b0:	sub	w6, w6, w2
    54b4:	lsr	x6, x4, x6
    54b8:	add	w5, w2, #0x31
    54bc:	lsl	x5, x4, x5
    54c0:	mov	w1, #0x3c0c                	// #15372
    54c4:	sub	w1, w1, w2
    54c8:	sxtw	x1, w1
    54cc:	b	546c <PyInit__ctypes_test@@Base+0x1f14>
    54d0:	sub	w6, w2, #0xf
    54d4:	lsl	x6, x4, x6
    54d8:	mov	x5, #0x0                   	// #0
    54dc:	b	54c0 <PyInit__ctypes_test@@Base+0x1f68>
    54e0:	cbz	x4, 5518 <PyInit__ctypes_test@@Base+0x1fc0>
    54e4:	mov	x3, #0x0                   	// #0
    54e8:	lsl	x2, x4, #60
    54ec:	lsr	x1, x4, #4
    54f0:	orr	x1, x1, #0x800000000000
    54f4:	bfxil	x3, x1, #0, #48
    54f8:	orr	x3, x3, #0x7fff000000000000
    54fc:	bfi	x3, x0, #63, #1
    5500:	stp	x2, x3, [sp, #16]
    5504:	tst	x4, #0x8000000000000
    5508:	b.ne	5484 <PyInit__ctypes_test@@Base+0x1f2c>  // b.any
    550c:	mov	w0, #0x1                   	// #1
    5510:	bl	5524 <PyInit__ctypes_test@@Base+0x1fcc>
    5514:	b	5484 <PyInit__ctypes_test@@Base+0x1f2c>
    5518:	mov	x6, x4
    551c:	mov	x1, #0x7fff                	// #32767
    5520:	b	546c <PyInit__ctypes_test@@Base+0x1f14>
    5524:	tbz	w0, #0, 5534 <PyInit__ctypes_test@@Base+0x1fdc>
    5528:	movi	v1.2s, #0x0
    552c:	fdiv	s0, s1, s1
    5530:	mrs	x1, fpsr
    5534:	tbz	w0, #1, 5548 <PyInit__ctypes_test@@Base+0x1ff0>
    5538:	fmov	s1, #1.000000000000000000e+00
    553c:	movi	v2.2s, #0x0
    5540:	fdiv	s0, s1, s2
    5544:	mrs	x1, fpsr
    5548:	tbz	w0, #2, 5568 <PyInit__ctypes_test@@Base+0x2010>
    554c:	mov	w1, #0x7f7fffff            	// #2139095039
    5550:	fmov	s1, w1
    5554:	mov	w1, #0xc5ae                	// #50606
    5558:	movk	w1, #0x749d, lsl #16
    555c:	fmov	s2, w1
    5560:	fadd	s0, s1, s2
    5564:	mrs	x1, fpsr
    5568:	tbz	w0, #3, 5578 <PyInit__ctypes_test@@Base+0x2020>
    556c:	movi	v1.2s, #0x80, lsl #16
    5570:	fmul	s0, s1, s1
    5574:	mrs	x1, fpsr
    5578:	tbz	w0, #4, 5590 <PyInit__ctypes_test@@Base+0x2038>
    557c:	mov	w0, #0x7f7fffff            	// #2139095039
    5580:	fmov	s1, w0
    5584:	fmov	s2, #1.000000000000000000e+00
    5588:	fsub	s0, s1, s2
    558c:	mrs	x0, fpsr
    5590:	ret

Disassembly of section .fini:

0000000000005594 <.fini>:
    5594:	stp	x29, x30, [sp, #-16]!
    5598:	mov	x29, sp
    559c:	ldp	x29, x30, [sp], #16
    55a0:	ret
