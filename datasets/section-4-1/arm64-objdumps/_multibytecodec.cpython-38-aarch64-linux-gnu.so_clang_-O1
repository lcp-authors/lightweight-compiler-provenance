
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_multibytecodec.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002930 <.init>:
    2930:	stp	x29, x30, [sp, #-16]!
    2934:	mov	x29, sp
    2938:	bl	2e20 <PyUnicode_Substring@plt+0x10>
    293c:	ldp	x29, x30, [sp], #16
    2940:	ret

Disassembly of section .plt:

0000000000002950 <memcpy@plt-0x20>:
    2950:	stp	x16, x30, [sp, #-16]!
    2954:	adrp	x16, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2958:	ldr	x17, [x16, #4088]
    295c:	add	x16, x16, #0xff8
    2960:	br	x17
    2964:	nop
    2968:	nop
    296c:	nop

0000000000002970 <memcpy@plt>:
    2970:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2974:	ldr	x17, [x16]
    2978:	add	x16, x16, #0x0
    297c:	br	x17

0000000000002980 <_PyUnicode_Ready@plt>:
    2980:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2984:	ldr	x17, [x16, #8]
    2988:	add	x16, x16, #0x8
    298c:	br	x17

0000000000002990 <PySequence_Check@plt>:
    2990:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2994:	ldr	x17, [x16, #16]
    2998:	add	x16, x16, #0x10
    299c:	br	x17

00000000000029a0 <strlen@plt>:
    29a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29a4:	ldr	x17, [x16, #24]
    29a8:	add	x16, x16, #0x18
    29ac:	br	x17

00000000000029b0 <PyUnicodeDecodeError_SetStart@plt>:
    29b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29b4:	ldr	x17, [x16, #32]
    29b8:	add	x16, x16, #0x20
    29bc:	br	x17

00000000000029c0 <_PyBytes_Resize@plt>:
    29c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29c4:	ldr	x17, [x16, #40]
    29c8:	add	x16, x16, #0x28
    29cc:	br	x17

00000000000029d0 <PyMem_Free@plt>:
    29d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29d4:	ldr	x17, [x16, #48]
    29d8:	add	x16, x16, #0x30
    29dc:	br	x17

00000000000029e0 <PyBuffer_Release@plt>:
    29e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29e4:	ldr	x17, [x16, #56]
    29e8:	add	x16, x16, #0x38
    29ec:	br	x17

00000000000029f0 <PyUnicodeEncodeError_SetReason@plt>:
    29f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29f4:	ldr	x17, [x16, #64]
    29f8:	add	x16, x16, #0x40
    29fc:	br	x17

0000000000002a00 <PyObject_GetAttrString@plt>:
    2a00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a04:	ldr	x17, [x16, #72]
    2a08:	add	x16, x16, #0x48
    2a0c:	br	x17

0000000000002a10 <__cxa_finalize@plt>:
    2a10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a14:	ldr	x17, [x16, #80]
    2a18:	add	x16, x16, #0x50
    2a1c:	br	x17

0000000000002a20 <PyBuffer_IsContiguous@plt>:
    2a20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a24:	ldr	x17, [x16, #88]
    2a28:	add	x16, x16, #0x58
    2a2c:	br	x17

0000000000002a30 <PyBytes_FromStringAndSize@plt>:
    2a30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a34:	ldr	x17, [x16, #96]
    2a38:	add	x16, x16, #0x60
    2a3c:	br	x17

0000000000002a40 <PyUnicodeEncodeError_SetStart@plt>:
    2a40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a44:	ldr	x17, [x16, #104]
    2a48:	add	x16, x16, #0x68
    2a4c:	br	x17

0000000000002a50 <_Py_Dealloc@plt>:
    2a50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a54:	ldr	x17, [x16, #112]
    2a58:	add	x16, x16, #0x70
    2a5c:	br	x17

0000000000002a60 <PyUnicodeDecodeError_SetReason@plt>:
    2a60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a64:	ldr	x17, [x16, #120]
    2a68:	add	x16, x16, #0x78
    2a6c:	br	x17

0000000000002a70 <PyErr_NoMemory@plt>:
    2a70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a74:	ldr	x17, [x16, #128]
    2a78:	add	x16, x16, #0x80
    2a7c:	br	x17

0000000000002a80 <_PyObject_CallFunction_SizeT@plt>:
    2a80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a84:	ldr	x17, [x16, #136]
    2a88:	add	x16, x16, #0x88
    2a8c:	br	x17

0000000000002a90 <PyUnicodeEncodeError_SetEnd@plt>:
    2a90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a94:	ldr	x17, [x16, #144]
    2a98:	add	x16, x16, #0x90
    2a9c:	br	x17

0000000000002aa0 <PyObject_Str@plt>:
    2aa0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2aa4:	ldr	x17, [x16, #152]
    2aa8:	add	x16, x16, #0x98
    2aac:	br	x17

0000000000002ab0 <PyUnicode_Append@plt>:
    2ab0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ab4:	ldr	x17, [x16, #160]
    2ab8:	add	x16, x16, #0xa0
    2abc:	br	x17

0000000000002ac0 <_PyUnicodeWriter_Dealloc@plt>:
    2ac0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ac4:	ldr	x17, [x16, #168]
    2ac8:	add	x16, x16, #0xa8
    2acc:	br	x17

0000000000002ad0 <_PyArg_UnpackKeywords@plt>:
    2ad0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ad4:	ldr	x17, [x16, #176]
    2ad8:	add	x16, x16, #0xb0
    2adc:	br	x17

0000000000002ae0 <PyErr_SetString@plt>:
    2ae0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ae4:	ldr	x17, [x16, #184]
    2ae8:	add	x16, x16, #0xb8
    2aec:	br	x17

0000000000002af0 <_PyLong_FromByteArray@plt>:
    2af0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2af4:	ldr	x17, [x16, #192]
    2af8:	add	x16, x16, #0xc0
    2afc:	br	x17

0000000000002b00 <PySequence_GetItem@plt>:
    2b00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b04:	ldr	x17, [x16, #200]
    2b08:	add	x16, x16, #0xc8
    2b0c:	br	x17

0000000000002b10 <_PyUnicodeWriter_Init@plt>:
    2b10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b14:	ldr	x17, [x16, #208]
    2b18:	add	x16, x16, #0xd0
    2b1c:	br	x17

0000000000002b20 <PyObject_Free@plt>:
    2b20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b24:	ldr	x17, [x16, #216]
    2b28:	add	x16, x16, #0xd8
    2b2c:	br	x17

0000000000002b30 <PyLong_FromSsize_t@plt>:
    2b30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b34:	ldr	x17, [x16, #224]
    2b38:	add	x16, x16, #0xe0
    2b3c:	br	x17

0000000000002b40 <PyType_Ready@plt>:
    2b40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b44:	ldr	x17, [x16, #232]
    2b48:	add	x16, x16, #0xe8
    2b4c:	br	x17

0000000000002b50 <PyLong_AsSsize_t@plt>:
    2b50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b54:	ldr	x17, [x16, #240]
    2b58:	add	x16, x16, #0xf0
    2b5c:	br	x17

0000000000002b60 <PyBytes_Size@plt>:
    2b60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b64:	ldr	x17, [x16, #248]
    2b68:	add	x16, x16, #0xf8
    2b6c:	br	x17

0000000000002b70 <_PyArg_BadArgument@plt>:
    2b70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b74:	ldr	x17, [x16, #256]
    2b78:	add	x16, x16, #0x100
    2b7c:	br	x17

0000000000002b80 <PySequence_Size@plt>:
    2b80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b84:	ldr	x17, [x16, #264]
    2b88:	add	x16, x16, #0x108
    2b8c:	br	x17

0000000000002b90 <PyErr_Clear@plt>:
    2b90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b94:	ldr	x17, [x16, #272]
    2b98:	add	x16, x16, #0x110
    2b9c:	br	x17

0000000000002ba0 <PyCapsule_IsValid@plt>:
    2ba0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x17, [x16, #280]
    2ba8:	add	x16, x16, #0x118
    2bac:	br	x17

0000000000002bb0 <__gmon_start__@plt>:
    2bb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x17, [x16, #288]
    2bb8:	add	x16, x16, #0x120
    2bbc:	br	x17

0000000000002bc0 <PyCodec_StrictErrors@plt>:
    2bc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bc4:	ldr	x17, [x16, #296]
    2bc8:	add	x16, x16, #0x128
    2bcc:	br	x17

0000000000002bd0 <PyTuple_New@plt>:
    2bd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bd4:	ldr	x17, [x16, #304]
    2bd8:	add	x16, x16, #0x130
    2bdc:	br	x17

0000000000002be0 <_PyArg_CheckPositional@plt>:
    2be0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2be4:	ldr	x17, [x16, #312]
    2be8:	add	x16, x16, #0x138
    2bec:	br	x17

0000000000002bf0 <PyErr_Occurred@plt>:
    2bf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bf4:	ldr	x17, [x16, #320]
    2bf8:	add	x16, x16, #0x140
    2bfc:	br	x17

0000000000002c00 <PyModule_Create2@plt>:
    2c00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c04:	ldr	x17, [x16, #328]
    2c08:	add	x16, x16, #0x148
    2c0c:	br	x17

0000000000002c10 <PyUnicodeDecodeError_SetEnd@plt>:
    2c10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c14:	ldr	x17, [x16, #336]
    2c18:	add	x16, x16, #0x150
    2c1c:	br	x17

0000000000002c20 <PyObject_CallObject@plt>:
    2c20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c24:	ldr	x17, [x16, #344]
    2c28:	add	x16, x16, #0x158
    2c2c:	br	x17

0000000000002c30 <strcmp@plt>:
    2c30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c34:	ldr	x17, [x16, #352]
    2c38:	add	x16, x16, #0x160
    2c3c:	br	x17

0000000000002c40 <_PyObject_CallMethod_SizeT@plt>:
    2c40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c44:	ldr	x17, [x16, #360]
    2c48:	add	x16, x16, #0x168
    2c4c:	br	x17

0000000000002c50 <_PyArg_ParseTuple_SizeT@plt>:
    2c50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c54:	ldr	x17, [x16, #368]
    2c58:	add	x16, x16, #0x170
    2c5c:	br	x17

0000000000002c60 <PyUnicode_DecodeUTF8@plt>:
    2c60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c64:	ldr	x17, [x16, #376]
    2c68:	add	x16, x16, #0x178
    2c6c:	br	x17

0000000000002c70 <Py_FatalError@plt>:
    2c70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c74:	ldr	x17, [x16, #384]
    2c78:	add	x16, x16, #0x180
    2c7c:	br	x17

0000000000002c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2c80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c84:	ldr	x17, [x16, #392]
    2c88:	add	x16, x16, #0x188
    2c8c:	br	x17

0000000000002c90 <_PyUnicodeWriter_WriteStr@plt>:
    2c90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c94:	ldr	x17, [x16, #400]
    2c98:	add	x16, x16, #0x190
    2c9c:	br	x17

0000000000002ca0 <_PyUnicodeWriter_WriteChar@plt>:
    2ca0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ca4:	ldr	x17, [x16, #408]
    2ca8:	add	x16, x16, #0x198
    2cac:	br	x17

0000000000002cb0 <PyObject_GetBuffer@plt>:
    2cb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cb4:	ldr	x17, [x16, #416]
    2cb8:	add	x16, x16, #0x1a0
    2cbc:	br	x17

0000000000002cc0 <PyUnicode_AsUTF8@plt>:
    2cc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cc4:	ldr	x17, [x16, #424]
    2cc8:	add	x16, x16, #0x1a8
    2ccc:	br	x17

0000000000002cd0 <_PyObject_New@plt>:
    2cd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cd4:	ldr	x17, [x16, #432]
    2cd8:	add	x16, x16, #0x1b0
    2cdc:	br	x17

0000000000002ce0 <PyUnicode_FromString@plt>:
    2ce0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ce4:	ldr	x17, [x16, #440]
    2ce8:	add	x16, x16, #0x1b8
    2cec:	br	x17

0000000000002cf0 <_PyObject_CallMethodIdObjArgs@plt>:
    2cf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cf4:	ldr	x17, [x16, #448]
    2cf8:	add	x16, x16, #0x1c0
    2cfc:	br	x17

0000000000002d00 <PyModule_AddObject@plt>:
    2d00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d04:	ldr	x17, [x16, #456]
    2d08:	add	x16, x16, #0x1c8
    2d0c:	br	x17

0000000000002d10 <PyBytes_AsString@plt>:
    2d10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d14:	ldr	x17, [x16, #464]
    2d18:	add	x16, x16, #0x1d0
    2d1c:	br	x17

0000000000002d20 <PyType_IsSubtype@plt>:
    2d20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d24:	ldr	x17, [x16, #472]
    2d28:	add	x16, x16, #0x1d8
    2d2c:	br	x17

0000000000002d30 <_PyLong_AsByteArray@plt>:
    2d30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d34:	ldr	x17, [x16, #480]
    2d38:	add	x16, x16, #0x1e0
    2d3c:	br	x17

0000000000002d40 <PyUnicode_AsUTF8AndSize@plt>:
    2d40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d44:	ldr	x17, [x16, #488]
    2d48:	add	x16, x16, #0x1e8
    2d4c:	br	x17

0000000000002d50 <PyErr_Format@plt>:
    2d50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d54:	ldr	x17, [x16, #496]
    2d58:	add	x16, x16, #0x1f0
    2d5c:	br	x17

0000000000002d60 <PyCapsule_GetPointer@plt>:
    2d60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d64:	ldr	x17, [x16, #504]
    2d68:	add	x16, x16, #0x1f8
    2d6c:	br	x17

0000000000002d70 <_Py_BuildValue_SizeT@plt>:
    2d70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d74:	ldr	x17, [x16, #512]
    2d78:	add	x16, x16, #0x200
    2d7c:	br	x17

0000000000002d80 <PyUnicode_FromOrdinal@plt>:
    2d80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d84:	ldr	x17, [x16, #520]
    2d88:	add	x16, x16, #0x208
    2d8c:	br	x17

0000000000002d90 <PyUnicodeDecodeError_Create@plt>:
    2d90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d94:	ldr	x17, [x16, #528]
    2d98:	add	x16, x16, #0x210
    2d9c:	br	x17

0000000000002da0 <_PyLong_AsInt@plt>:
    2da0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2da4:	ldr	x17, [x16, #536]
    2da8:	add	x16, x16, #0x218
    2dac:	br	x17

0000000000002db0 <_PyUnicodeWriter_Finish@plt>:
    2db0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2db4:	ldr	x17, [x16, #544]
    2db8:	add	x16, x16, #0x220
    2dbc:	br	x17

0000000000002dc0 <PyUnicode_Splitlines@plt>:
    2dc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2dc4:	ldr	x17, [x16, #552]
    2dc8:	add	x16, x16, #0x228
    2dcc:	br	x17

0000000000002dd0 <PyMem_Malloc@plt>:
    2dd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2dd4:	ldr	x17, [x16, #560]
    2dd8:	add	x16, x16, #0x230
    2ddc:	br	x17

0000000000002de0 <PyUnicode_New@plt>:
    2de0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2de4:	ldr	x17, [x16, #568]
    2de8:	add	x16, x16, #0x238
    2dec:	br	x17

0000000000002df0 <PyCodec_LookupError@plt>:
    2df0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2df4:	ldr	x17, [x16, #576]
    2df8:	add	x16, x16, #0x240
    2dfc:	br	x17

0000000000002e00 <PyObject_GC_UnTrack@plt>:
    2e00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2e04:	ldr	x17, [x16, #584]
    2e08:	add	x16, x16, #0x248
    2e0c:	br	x17

0000000000002e10 <PyUnicode_Substring@plt>:
    2e10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2e14:	ldr	x17, [x16, #592]
    2e18:	add	x16, x16, #0x250
    2e1c:	br	x17

Disassembly of section .text:

0000000000002e20 <PyInit__multibytecodec@@Base-0xd4>:
    2e20:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2e24:	ldr	x0, [x0, #4008]
    2e28:	cbz	x0, 2e30 <PyUnicode_Substring@plt+0x20>
    2e2c:	b	2bb0 <__gmon_start__@plt>
    2e30:	ret
    2e34:	nop
    2e38:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e3c:	add	x0, x0, #0x18
    2e40:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e44:	add	x1, x1, #0x18
    2e48:	cmp	x1, x0
    2e4c:	b.eq	2e64 <PyUnicode_Substring@plt+0x54>  // b.none
    2e50:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2e54:	ldr	x1, [x1, #3960]
    2e58:	cbz	x1, 2e64 <PyUnicode_Substring@plt+0x54>
    2e5c:	mov	x16, x1
    2e60:	br	x16
    2e64:	ret
    2e68:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e6c:	add	x0, x0, #0x18
    2e70:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e74:	add	x1, x1, #0x18
    2e78:	sub	x1, x1, x0
    2e7c:	lsr	x2, x1, #63
    2e80:	add	x1, x2, x1, asr #3
    2e84:	cmp	xzr, x1, asr #1
    2e88:	asr	x1, x1, #1
    2e8c:	b.eq	2ea4 <PyUnicode_Substring@plt+0x94>  // b.none
    2e90:	adrp	x2, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2e94:	ldr	x2, [x2, #4064]
    2e98:	cbz	x2, 2ea4 <PyUnicode_Substring@plt+0x94>
    2e9c:	mov	x16, x2
    2ea0:	br	x16
    2ea4:	ret
    2ea8:	stp	x29, x30, [sp, #-32]!
    2eac:	mov	x29, sp
    2eb0:	str	x19, [sp, #16]
    2eb4:	adrp	x19, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2eb8:	ldrb	w0, [x19, #24]
    2ebc:	cbnz	w0, 2ee4 <PyUnicode_Substring@plt+0xd4>
    2ec0:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2ec4:	ldr	x0, [x0, #3976]
    2ec8:	cbz	x0, 2ed8 <PyUnicode_Substring@plt+0xc8>
    2ecc:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    2ed0:	ldr	x0, [x0, #600]
    2ed4:	bl	2a10 <__cxa_finalize@plt>
    2ed8:	bl	2e38 <PyUnicode_Substring@plt+0x28>
    2edc:	mov	w0, #0x1                   	// #1
    2ee0:	strb	w0, [x19, #24]
    2ee4:	ldr	x19, [sp, #16]
    2ee8:	ldp	x29, x30, [sp], #32
    2eec:	ret
    2ef0:	b	2e68 <PyUnicode_Substring@plt+0x58>

0000000000002ef4 <PyInit__multibytecodec@@Base>:
    2ef4:	stp	x29, x30, [sp, #-48]!
    2ef8:	stp	x22, x21, [sp, #16]
    2efc:	stp	x20, x19, [sp, #32]
    2f00:	mov	x29, sp
    2f04:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    2f08:	add	x0, x0, #0x8e0
    2f0c:	bl	2b40 <PyType_Ready@plt>
    2f10:	tbnz	w0, #31, 2f80 <PyInit__multibytecodec@@Base+0x8c>
    2f14:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    2f18:	add	x0, x0, #0xa80
    2f1c:	mov	w1, #0x3f5                 	// #1013
    2f20:	bl	2c00 <PyModule_Create2@plt>
    2f24:	mov	x19, x0
    2f28:	cbz	x0, 2f84 <PyInit__multibytecodec@@Base+0x90>
    2f2c:	adrp	x22, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2f30:	mov	x21, xzr
    2f34:	add	x22, x22, #0xcf0
    2f38:	ldr	x20, [x22, x21]
    2f3c:	mov	x0, x20
    2f40:	bl	2b40 <PyType_Ready@plt>
    2f44:	tbnz	w0, #31, 2f80 <PyInit__multibytecodec@@Base+0x8c>
    2f48:	mov	x0, x20
    2f4c:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    2f50:	ldr	x1, [x20, #24]
    2f54:	mov	x0, x19
    2f58:	mov	x2, x20
    2f5c:	bl	2d00 <PyModule_AddObject@plt>
    2f60:	add	x21, x21, #0x8
    2f64:	cmp	x21, #0x20
    2f68:	b.ne	2f38 <PyInit__multibytecodec@@Base+0x44>  // b.any
    2f6c:	bl	2bf0 <PyErr_Occurred@plt>
    2f70:	cbz	x0, 2f84 <PyInit__multibytecodec@@Base+0x90>
    2f74:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    2f78:	add	x0, x0, #0x37d
    2f7c:	bl	2c70 <Py_FatalError@plt>
    2f80:	mov	x19, xzr
    2f84:	mov	x0, x19
    2f88:	ldp	x20, x19, [sp, #32]
    2f8c:	ldp	x22, x21, [sp, #16]
    2f90:	ldp	x29, x30, [sp], #48
    2f94:	ret
    2f98:	ldr	x8, [x0]
    2f9c:	add	x8, x8, #0x1
    2fa0:	str	x8, [x0]
    2fa4:	ret
    2fa8:	stp	x29, x30, [sp, #-32]!
    2fac:	str	x19, [sp, #16]
    2fb0:	mov	x29, sp
    2fb4:	mov	x19, x0
    2fb8:	bl	2e00 <PyObject_GC_UnTrack@plt>
    2fbc:	ldr	x0, [x19, #32]
    2fc0:	cbz	x0, 2fd4 <PyInit__multibytecodec@@Base+0xe0>
    2fc4:	cbz	x0, 2fd0 <PyInit__multibytecodec@@Base+0xdc>
    2fc8:	cmp	x0, #0x4
    2fcc:	b.cc	2fd4 <PyInit__multibytecodec@@Base+0xe0>  // b.lo, b.ul, b.last
    2fd0:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    2fd4:	ldr	x0, [x19, #40]
    2fd8:	cbz	x0, 2fe4 <PyInit__multibytecodec@@Base+0xf0>
    2fdc:	str	xzr, [x19, #40]
    2fe0:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    2fe4:	ldr	x8, [x19, #8]
    2fe8:	mov	x0, x19
    2fec:	ldr	x8, [x8, #320]
    2ff0:	blr	x8
    2ff4:	ldr	x19, [sp, #16]
    2ff8:	ldp	x29, x30, [sp], #32
    2ffc:	ret
    3000:	stp	x29, x30, [sp, #-16]!
    3004:	mov	x29, sp
    3008:	ldr	x0, [x0, #32]
    300c:	cmp	x0, #0x0
    3010:	cset	w9, ne  // ne = any
    3014:	cmp	x0, #0x4
    3018:	cset	w10, cc  // cc = lo, ul, last
    301c:	cbz	x0, 3040 <PyInit__multibytecodec@@Base+0x14c>
    3020:	and	w9, w10, w9
    3024:	tbnz	w9, #0, 3040 <PyInit__multibytecodec@@Base+0x14c>
    3028:	mov	x8, x1
    302c:	mov	x1, x2
    3030:	blr	x8
    3034:	cbz	w0, 3040 <PyInit__multibytecodec@@Base+0x14c>
    3038:	ldp	x29, x30, [sp], #16
    303c:	ret
    3040:	mov	w0, wzr
    3044:	ldp	x29, x30, [sp], #16
    3048:	ret
    304c:	mov	w0, wzr
    3050:	ret
    3054:	sub	sp, sp, #0x30
    3058:	stp	x29, x30, [sp, #16]
    305c:	stp	x20, x19, [sp, #32]
    3060:	add	x29, sp, #0x10
    3064:	mov	x8, x2
    3068:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    306c:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    3070:	mov	x20, x0
    3074:	add	x2, x2, #0x594
    3078:	add	x3, x3, #0xc18
    307c:	add	x4, sp, #0x8
    3080:	mov	x0, x1
    3084:	mov	x1, x8
    3088:	str	xzr, [sp, #8]
    308c:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3090:	cbz	w0, 3100 <PyInit__multibytecodec@@Base+0x20c>
    3094:	ldr	x8, [x20, #304]
    3098:	mov	x0, x20
    309c:	mov	x1, xzr
    30a0:	blr	x8
    30a4:	mov	x19, x0
    30a8:	cbz	x0, 3104 <PyInit__multibytecodec@@Base+0x210>
    30ac:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    30b0:	add	x1, x1, #0x7ef
    30b4:	mov	x0, x20
    30b8:	bl	2a00 <PyObject_GetAttrString@plt>
    30bc:	mov	x20, x0
    30c0:	cbz	x0, 30f0 <PyInit__multibytecodec@@Base+0x1fc>
    30c4:	ldr	x8, [x20, #8]
    30c8:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    30cc:	add	x9, x9, #0x8e0
    30d0:	cmp	x8, x9
    30d4:	b.eq	3118 <PyInit__multibytecodec@@Base+0x224>  // b.none
    30d8:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    30dc:	ldr	x8, [x8, #4000]
    30e0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    30e4:	add	x1, x1, #0x5aa
    30e8:	ldr	x0, [x8]
    30ec:	bl	2ae0 <PyErr_SetString@plt>
    30f0:	mov	x0, x19
    30f4:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    30f8:	mov	x0, x20
    30fc:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3100:	mov	x19, xzr
    3104:	mov	x0, x19
    3108:	ldp	x20, x19, [sp, #32]
    310c:	ldp	x29, x30, [sp, #16]
    3110:	add	sp, sp, #0x30
    3114:	ret
    3118:	ldr	x8, [x20, #16]
    311c:	str	xzr, [x19, #40]
    3120:	str	x8, [x19, #16]
    3124:	ldr	x0, [sp, #8]
    3128:	bl	3ffc <PyInit__multibytecodec@@Base+0x1108>
    312c:	str	x0, [x19, #32]
    3130:	cbz	x0, 30f0 <PyInit__multibytecodec@@Base+0x1fc>
    3134:	ldr	x9, [x19, #16]
    3138:	ldr	x8, [x9, #32]
    313c:	cbz	x8, 3150 <PyInit__multibytecodec@@Base+0x25c>
    3140:	ldr	x1, [x9, #8]
    3144:	add	x0, x19, #0x18
    3148:	blr	x8
    314c:	cbnz	w0, 30f0 <PyInit__multibytecodec@@Base+0x1fc>
    3150:	mov	x0, x20
    3154:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3158:	b	3104 <PyInit__multibytecodec@@Base+0x210>
    315c:	stp	x29, x30, [sp, #-16]!
    3160:	mov	x29, sp
    3164:	ldr	x8, [x0]
    3168:	subs	x8, x8, #0x1
    316c:	str	x8, [x0]
    3170:	b.eq	317c <PyInit__multibytecodec@@Base+0x288>  // b.none
    3174:	ldp	x29, x30, [sp], #16
    3178:	ret
    317c:	bl	2a50 <_Py_Dealloc@plt>
    3180:	ldp	x29, x30, [sp], #16
    3184:	ret
    3188:	sub	sp, sp, #0x60
    318c:	stp	x29, x30, [sp, #32]
    3190:	str	x23, [sp, #48]
    3194:	stp	x22, x21, [sp, #64]
    3198:	stp	x20, x19, [sp, #80]
    319c:	add	x29, sp, #0x20
    31a0:	mov	x21, x2
    31a4:	mov	x20, x1
    31a8:	mov	x19, x0
    31ac:	cbz	x3, 31bc <PyInit__multibytecodec@@Base+0x2c8>
    31b0:	ldr	x23, [x3, #16]
    31b4:	cbnz	x20, 31c4 <PyInit__multibytecodec@@Base+0x2d0>
    31b8:	b	31dc <PyInit__multibytecodec@@Base+0x2e8>
    31bc:	mov	x23, xzr
    31c0:	cbz	x20, 31dc <PyInit__multibytecodec@@Base+0x2e8>
    31c4:	sub	x8, x21, #0x1
    31c8:	cmp	x8, #0x1
    31cc:	b.hi	31dc <PyInit__multibytecodec@@Base+0x2e8>  // b.pmore
    31d0:	cbnz	x3, 31dc <PyInit__multibytecodec@@Base+0x2e8>
    31d4:	cbnz	x20, 3210 <PyInit__multibytecodec@@Base+0x31c>
    31d8:	b	3274 <PyInit__multibytecodec@@Base+0x380>
    31dc:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    31e0:	add	x8, sp, #0x10
    31e4:	add	x4, x4, #0xbd8
    31e8:	mov	w5, #0x1                   	// #1
    31ec:	mov	w6, #0x2                   	// #2
    31f0:	mov	x0, x20
    31f4:	mov	x1, x21
    31f8:	mov	x2, xzr
    31fc:	mov	w7, wzr
    3200:	str	x8, [sp]
    3204:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    3208:	mov	x20, x0
    320c:	cbz	x20, 3274 <PyInit__multibytecodec@@Base+0x380>
    3210:	ldr	x22, [x20]
    3214:	add	x8, x23, x21
    3218:	cmp	x8, #0x1
    321c:	b.ne	3234 <PyInit__multibytecodec@@Base+0x340>  // b.any
    3220:	mov	w2, wzr
    3224:	mov	x0, x19
    3228:	mov	x1, x22
    322c:	bl	332c <PyInit__multibytecodec@@Base+0x438>
    3230:	b	3278 <PyInit__multibytecodec@@Base+0x384>
    3234:	ldr	x8, [x20, #8]
    3238:	ldr	x0, [x8, #8]
    323c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3240:	ldr	x8, [x8, #3968]
    3244:	cmp	x0, x8
    3248:	b.eq	325c <PyInit__multibytecodec@@Base+0x368>  // b.none
    324c:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3250:	ldr	x1, [x1, #3968]
    3254:	bl	2d20 <PyType_IsSubtype@plt>
    3258:	cbz	w0, 3290 <PyInit__multibytecodec@@Base+0x39c>
    325c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3260:	ldr	x8, [x8, #4000]
    3264:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3268:	add	x1, x1, #0x3f0
    326c:	ldr	x0, [x8]
    3270:	bl	2ae0 <PyErr_SetString@plt>
    3274:	mov	x0, xzr
    3278:	ldp	x20, x19, [sp, #80]
    327c:	ldp	x22, x21, [sp, #64]
    3280:	ldr	x23, [sp, #48]
    3284:	ldp	x29, x30, [sp, #32]
    3288:	add	sp, sp, #0x60
    328c:	ret
    3290:	ldr	x0, [x20, #8]
    3294:	bl	2da0 <_PyLong_AsInt@plt>
    3298:	mov	w2, w0
    329c:	cmn	w0, #0x1
    32a0:	b.ne	3224 <PyInit__multibytecodec@@Base+0x330>  // b.any
    32a4:	bl	2bf0 <PyErr_Occurred@plt>
    32a8:	cbnz	x0, 3274 <PyInit__multibytecodec@@Base+0x380>
    32ac:	mov	w2, #0xffffffff            	// #-1
    32b0:	b	3224 <PyInit__multibytecodec@@Base+0x330>
    32b4:	stp	x29, x30, [sp, #-16]!
    32b8:	mov	x29, sp
    32bc:	bl	3d1c <PyInit__multibytecodec@@Base+0xe28>
    32c0:	ldp	x29, x30, [sp], #16
    32c4:	ret
    32c8:	stp	x29, x30, [sp, #-16]!
    32cc:	mov	x29, sp
    32d0:	ldr	x8, [x1, #8]
    32d4:	mov	x3, x1
    32d8:	ldrb	w8, [x8, #171]
    32dc:	tbnz	w8, #0, 3308 <PyInit__multibytecodec@@Base+0x414>
    32e0:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    32e4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    32e8:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    32ec:	add	x0, x0, #0x3d5
    32f0:	add	x1, x1, #0x65e
    32f4:	add	x2, x2, #0x536
    32f8:	bl	2b70 <_PyArg_BadArgument@plt>
    32fc:	mov	x0, xzr
    3300:	ldp	x29, x30, [sp], #16
    3304:	ret
    3308:	mov	x1, x3
    330c:	bl	3dc8 <PyInit__multibytecodec@@Base+0xed4>
    3310:	ldp	x29, x30, [sp], #16
    3314:	ret
    3318:	stp	x29, x30, [sp, #-16]!
    331c:	mov	x29, sp
    3320:	bl	3ea0 <PyInit__multibytecodec@@Base+0xfac>
    3324:	ldp	x29, x30, [sp], #16
    3328:	ret
    332c:	stp	x29, x30, [sp, #-16]!
    3330:	mov	x29, sp
    3334:	bl	3340 <PyInit__multibytecodec@@Base+0x44c>
    3338:	ldp	x29, x30, [sp], #16
    333c:	ret
    3340:	sub	sp, sp, #0x50
    3344:	stp	x29, x30, [sp, #16]
    3348:	stp	x24, x23, [sp, #32]
    334c:	stp	x22, x21, [sp, #48]
    3350:	stp	x20, x19, [sp, #64]
    3354:	add	x29, sp, #0x10
    3358:	ldr	x8, [x1, #8]
    335c:	mov	w23, w2
    3360:	mov	x20, x1
    3364:	mov	x22, x0
    3368:	ldrb	w8, [x8, #171]
    336c:	tbnz	w8, #4, 33b0 <PyInit__multibytecodec@@Base+0x4bc>
    3370:	mov	x0, x20
    3374:	bl	2aa0 <PyObject_Str@plt>
    3378:	cbz	x0, 34ec <PyInit__multibytecodec@@Base+0x5f8>
    337c:	ldr	x8, [x0, #8]
    3380:	mov	x19, x0
    3384:	ldrb	w8, [x8, #171]
    3388:	tbnz	w8, #4, 3408 <PyInit__multibytecodec@@Base+0x514>
    338c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3390:	ldr	x8, [x8, #4000]
    3394:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3398:	add	x1, x1, #0x415
    339c:	ldr	x0, [x8]
    33a0:	bl	2ae0 <PyErr_SetString@plt>
    33a4:	mov	x0, x19
    33a8:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    33ac:	b	34ec <PyInit__multibytecodec@@Base+0x5f8>
    33b0:	mov	x19, xzr
    33b4:	ldr	x0, [x22, #40]
    33b8:	cbz	x0, 3414 <PyInit__multibytecodec@@Base+0x520>
    33bc:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    33c0:	ldr	x21, [x22, #40]
    33c4:	mov	x0, x21
    33c8:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    33cc:	ldr	x8, [x22, #40]
    33d0:	add	x0, sp, #0x8
    33d4:	mov	x1, x20
    33d8:	str	x8, [sp, #8]
    33dc:	bl	2ab0 <PyUnicode_Append@plt>
    33e0:	ldr	x8, [sp, #8]
    33e4:	cbz	x8, 342c <PyInit__multibytecodec@@Base+0x538>
    33e8:	ldr	x0, [x22, #40]
    33ec:	cbz	x0, 33f8 <PyInit__multibytecodec@@Base+0x504>
    33f0:	str	xzr, [x22, #40]
    33f4:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    33f8:	ldr	x20, [sp, #8]
    33fc:	mov	w8, #0x1                   	// #1
    3400:	tbz	w8, #0, 34b4 <PyInit__multibytecodec@@Base+0x5c0>
    3404:	b	3434 <PyInit__multibytecodec@@Base+0x540>
    3408:	mov	x20, x19
    340c:	ldr	x0, [x22, #40]
    3410:	cbnz	x0, 33bc <PyInit__multibytecodec@@Base+0x4c8>
    3414:	mov	x0, x20
    3418:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    341c:	mov	x21, xzr
    3420:	ldrb	w8, [x20, #32]
    3424:	tbnz	w8, #7, 3448 <PyInit__multibytecodec@@Base+0x554>
    3428:	b	343c <PyInit__multibytecodec@@Base+0x548>
    342c:	mov	x20, xzr
    3430:	tbz	w8, #0, 34b4 <PyInit__multibytecodec@@Base+0x5c0>
    3434:	ldrb	w8, [x20, #32]
    3438:	tbnz	w8, #7, 3448 <PyInit__multibytecodec@@Base+0x554>
    343c:	mov	x0, x20
    3440:	bl	2980 <_PyUnicode_Ready@plt>
    3444:	tbnz	w0, #31, 34b4 <PyInit__multibytecodec@@Base+0x5c0>
    3448:	str	xzr, [sp, #8]
    344c:	ldr	x0, [x22, #16]
    3450:	ldr	x4, [x22, #32]
    3454:	ldr	x24, [x20, #16]
    3458:	cmp	w23, #0x0
    345c:	mov	w8, #0x3                   	// #3
    3460:	add	x1, x22, #0x18
    3464:	csel	w5, wzr, w8, eq  // eq = none
    3468:	add	x3, sp, #0x8
    346c:	mov	x2, x20
    3470:	bl	3534 <PyInit__multibytecodec@@Base+0x640>
    3474:	mov	x23, x0
    3478:	cbz	x0, 34bc <PyInit__multibytecodec@@Base+0x5c8>
    347c:	mov	x0, x21
    3480:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3484:	ldr	x1, [sp, #8]
    3488:	subs	x8, x24, x1
    348c:	b.le	3520 <PyInit__multibytecodec@@Base+0x62c>
    3490:	cmp	x8, #0x3
    3494:	b.lt	350c <PyInit__multibytecodec@@Base+0x618>  // b.tstop
    3498:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    349c:	ldr	x8, [x8, #4048]
    34a0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    34a4:	add	x1, x1, #0x439
    34a8:	ldr	x0, [x8]
    34ac:	bl	2ae0 <PyErr_SetString@plt>
    34b0:	b	34cc <PyInit__multibytecodec@@Base+0x5d8>
    34b4:	mov	x23, xzr
    34b8:	b	34cc <PyInit__multibytecodec@@Base+0x5d8>
    34bc:	ldr	x0, [x22, #40]
    34c0:	str	x21, [x22, #40]
    34c4:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    34c8:	mov	x21, xzr
    34cc:	mov	x0, x23
    34d0:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    34d4:	mov	x0, x19
    34d8:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    34dc:	mov	x0, x21
    34e0:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    34e4:	mov	x0, x20
    34e8:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    34ec:	mov	x23, xzr
    34f0:	mov	x0, x23
    34f4:	ldp	x20, x19, [sp, #64]
    34f8:	ldp	x22, x21, [sp, #48]
    34fc:	ldp	x24, x23, [sp, #32]
    3500:	ldp	x29, x30, [sp, #16]
    3504:	add	sp, sp, #0x50
    3508:	ret
    350c:	mov	x0, x20
    3510:	mov	x2, x24
    3514:	bl	2e10 <PyUnicode_Substring@plt>
    3518:	str	x0, [x22, #40]
    351c:	cbz	x0, 34cc <PyInit__multibytecodec@@Base+0x5d8>
    3520:	mov	x0, x20
    3524:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3528:	mov	x0, x19
    352c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3530:	b	34f0 <PyInit__multibytecodec@@Base+0x5fc>
    3534:	sub	sp, sp, #0xb0
    3538:	stp	x29, x30, [sp, #80]
    353c:	stp	x28, x27, [sp, #96]
    3540:	stp	x26, x25, [sp, #112]
    3544:	stp	x24, x23, [sp, #128]
    3548:	stp	x22, x21, [sp, #144]
    354c:	stp	x20, x19, [sp, #160]
    3550:	add	x29, sp, #0x50
    3554:	ldrb	w8, [x2, #32]
    3558:	mov	w23, w5
    355c:	mov	x20, x4
    3560:	mov	x19, x3
    3564:	mov	x24, x2
    3568:	mov	x21, x1
    356c:	mov	x22, x0
    3570:	tbnz	w8, #7, 3580 <PyInit__multibytecodec@@Base+0x68c>
    3574:	mov	x0, x24
    3578:	bl	2980 <_PyUnicode_Ready@plt>
    357c:	tbnz	w0, #31, 3788 <PyInit__multibytecodec@@Base+0x894>
    3580:	ldr	x8, [x24, #16]
    3584:	tbnz	w23, #1, 359c <PyInit__multibytecodec@@Base+0x6a8>
    3588:	cbnz	x8, 359c <PyInit__multibytecodec@@Base+0x6a8>
    358c:	mov	x0, xzr
    3590:	mov	x1, xzr
    3594:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    3598:	b	378c <PyInit__multibytecodec@@Base+0x898>
    359c:	stp	xzr, xzr, [sp, #64]
    35a0:	stp	x24, xzr, [sp, #24]
    35a4:	str	x8, [sp, #40]
    35a8:	ldr	w25, [x24, #32]
    35ac:	tbnz	w25, #5, 35b8 <PyInit__multibytecodec@@Base+0x6c4>
    35b0:	ldr	x26, [x24, #72]
    35b4:	b	35c8 <PyInit__multibytecodec@@Base+0x6d4>
    35b8:	add	x9, x24, #0x30
    35bc:	add	x10, x24, #0x48
    35c0:	tst	w25, #0x40
    35c4:	csel	x26, x10, x9, eq  // eq = none
    35c8:	mov	x9, #0x3ffffffffffffff8    	// #4611686018427387896
    35cc:	cmp	x8, x9
    35d0:	b.lt	35dc <PyInit__multibytecodec@@Base+0x6e8>  // b.tstop
    35d4:	bl	2a70 <PyErr_NoMemory@plt>
    35d8:	b	3778 <PyInit__multibytecodec@@Base+0x884>
    35dc:	lsl	x8, x8, #1
    35e0:	add	x1, x8, #0x10
    35e4:	mov	x0, xzr
    35e8:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    35ec:	str	x0, [sp, #72]
    35f0:	cbz	x0, 3778 <PyInit__multibytecodec@@Base+0x884>
    35f4:	ldr	x9, [sp, #72]
    35f8:	add	x10, x0, #0x20
    35fc:	str	x10, [sp, #48]
    3600:	add	x8, sp, #0x18
    3604:	ldr	x9, [x9, #16]
    3608:	add	x11, sp, #0x18
    360c:	ubfx	w27, w25, #2, #3
    3610:	add	x12, x8, #0x30
    3614:	add	x28, x8, #0x8
    3618:	add	x25, x11, #0x18
    361c:	add	x8, x10, x9
    3620:	str	x12, [sp, #16]
    3624:	str	x8, [sp, #56]
    3628:	b	3634 <PyInit__multibytecodec@@Base+0x740>
    362c:	mov	w8, #0x4                   	// #4
    3630:	cbnz	w8, 36b0 <PyInit__multibytecodec@@Base+0x7bc>
    3634:	ldp	x8, x5, [sp, #32]
    3638:	cmp	x8, x5
    363c:	b.ge	36c0 <PyInit__multibytecodec@@Base+0x7cc>  // b.tcont
    3640:	ldp	x9, x8, [sp, #48]
    3644:	ldr	x10, [x22, #24]
    3648:	ldr	x1, [x22, #8]
    364c:	mov	x0, x21
    3650:	sub	x7, x8, x9
    3654:	mov	w2, w27
    3658:	mov	x3, x26
    365c:	mov	x4, x28
    3660:	mov	x6, x25
    3664:	str	w23, [sp]
    3668:	blr	x10
    366c:	cbz	x0, 362c <PyInit__multibytecodec@@Base+0x738>
    3670:	mov	x4, x0
    3674:	tbnz	w23, #0, 3680 <PyInit__multibytecodec@@Base+0x78c>
    3678:	cmn	x4, #0x2
    367c:	b.eq	362c <PyInit__multibytecodec@@Base+0x738>  // b.none
    3680:	cmn	x4, #0x2
    3684:	add	x2, sp, #0x18
    3688:	mov	x0, x22
    368c:	mov	x1, x21
    3690:	mov	x3, x20
    3694:	cset	w24, eq  // eq = none
    3698:	bl	37c8 <PyInit__multibytecodec@@Base+0x8d4>
    369c:	lsl	w8, w24, #2
    36a0:	cmp	w0, #0x0
    36a4:	mov	w9, #0x2                   	// #2
    36a8:	csel	w8, w8, w9, eq  // eq = none
    36ac:	cbz	w8, 3634 <PyInit__multibytecodec@@Base+0x740>
    36b0:	cmp	w8, #0x2
    36b4:	b.eq	3778 <PyInit__multibytecodec@@Base+0x884>  // b.none
    36b8:	cmp	w8, #0x4
    36bc:	b.ne	37ac <PyInit__multibytecodec@@Base+0x8b8>  // b.any
    36c0:	tbz	w23, #1, 3730 <PyInit__multibytecodec@@Base+0x83c>
    36c4:	ldr	x8, [x22, #40]
    36c8:	cbnz	x8, 36d8 <PyInit__multibytecodec@@Base+0x7e4>
    36cc:	b	3730 <PyInit__multibytecodec@@Base+0x83c>
    36d0:	mov	w8, #0x5                   	// #5
    36d4:	cbnz	w8, 3720 <PyInit__multibytecodec@@Base+0x82c>
    36d8:	ldp	x9, x8, [sp, #48]
    36dc:	ldr	x10, [x22, #40]
    36e0:	ldr	x1, [x22, #8]
    36e4:	mov	x0, x21
    36e8:	sub	x3, x8, x9
    36ec:	mov	x2, x25
    36f0:	blr	x10
    36f4:	cbz	x0, 36d0 <PyInit__multibytecodec@@Base+0x7dc>
    36f8:	mov	x4, x0
    36fc:	add	x2, sp, #0x18
    3700:	mov	x0, x22
    3704:	mov	x1, x21
    3708:	mov	x3, x20
    370c:	bl	37c8 <PyInit__multibytecodec@@Base+0x8d4>
    3710:	cmp	w0, #0x0
    3714:	cset	w8, ne  // ne = any
    3718:	lsl	w8, w8, #1
    371c:	cbz	w8, 36d8 <PyInit__multibytecodec@@Base+0x7e4>
    3720:	cmp	w8, #0x2
    3724:	b.eq	3778 <PyInit__multibytecodec@@Base+0x884>  // b.none
    3728:	cmp	w8, #0x5
    372c:	b.ne	37ac <PyInit__multibytecodec@@Base+0x8b8>  // b.any
    3730:	ldr	x8, [sp, #72]
    3734:	ldr	x9, [sp, #48]
    3738:	ldr	x10, [x8, #16]
    373c:	sub	x8, x9, x8
    3740:	sub	x1, x8, #0x20
    3744:	cmp	x1, x10
    3748:	b.eq	375c <PyInit__multibytecodec@@Base+0x868>  // b.none
    374c:	ldr	x0, [sp, #16]
    3750:	bl	29c0 <_PyBytes_Resize@plt>
    3754:	cmn	w0, #0x1
    3758:	b.eq	3778 <PyInit__multibytecodec@@Base+0x884>  // b.none
    375c:	cbz	x19, 3768 <PyInit__multibytecodec@@Base+0x874>
    3760:	ldr	x8, [sp, #32]
    3764:	str	x8, [x19]
    3768:	ldr	x0, [sp, #64]
    376c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3770:	ldr	x0, [sp, #72]
    3774:	b	378c <PyInit__multibytecodec@@Base+0x898>
    3778:	ldr	x0, [sp, #64]
    377c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3780:	ldr	x0, [sp, #72]
    3784:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3788:	mov	x0, xzr
    378c:	ldp	x20, x19, [sp, #160]
    3790:	ldp	x22, x21, [sp, #144]
    3794:	ldp	x24, x23, [sp, #128]
    3798:	ldp	x26, x25, [sp, #112]
    379c:	ldp	x28, x27, [sp, #96]
    37a0:	ldp	x29, x30, [sp, #80]
    37a4:	add	sp, sp, #0xb0
    37a8:	ret
    37ac:	b	378c <PyInit__multibytecodec@@Base+0x898>
    37b0:	cbz	x0, 37c4 <PyInit__multibytecodec@@Base+0x8d0>
    37b4:	stp	x29, x30, [sp, #-16]!
    37b8:	mov	x29, sp
    37bc:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    37c0:	ldp	x29, x30, [sp], #16
    37c4:	ret
    37c8:	sub	sp, sp, #0x90
    37cc:	stp	x29, x30, [sp, #48]
    37d0:	stp	x28, x27, [sp, #64]
    37d4:	stp	x26, x25, [sp, #80]
    37d8:	stp	x24, x23, [sp, #96]
    37dc:	stp	x22, x21, [sp, #112]
    37e0:	stp	x20, x19, [sp, #128]
    37e4:	add	x29, sp, #0x30
    37e8:	mov	x24, x4
    37ec:	mov	x22, x3
    37f0:	mov	x19, x2
    37f4:	mov	x20, x1
    37f8:	cmp	x4, #0x0
    37fc:	mov	x21, x0
    3800:	b.le	3834 <PyInit__multibytecodec@@Base+0x940>
    3804:	adrp	x25, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3808:	add	x25, x25, #0x451
    380c:	cmp	x22, #0x3
    3810:	b.eq	3970 <PyInit__multibytecodec@@Base+0xa7c>  // b.none
    3814:	ldr	x4, [x19, #8]
    3818:	and	x8, x22, #0xfffffffffffffffe
    381c:	cmp	x8, #0x2
    3820:	add	x23, x4, x24
    3824:	b.ne	3868 <PyInit__multibytecodec@@Base+0x974>  // b.any
    3828:	mov	w0, wzr
    382c:	str	x23, [x19, #8]
    3830:	b	3ae0 <PyInit__multibytecodec@@Base+0xbec>
    3834:	cmn	x24, #0x3
    3838:	b.eq	3948 <PyInit__multibytecodec@@Base+0xa54>  // b.none
    383c:	cmn	x24, #0x2
    3840:	b.eq	395c <PyInit__multibytecodec@@Base+0xa68>  // b.none
    3844:	cmn	x24, #0x1
    3848:	b.ne	39a8 <PyInit__multibytecodec@@Base+0xab4>  // b.any
    384c:	mov	x1, #0xffffffffffffffff    	// #-1
    3850:	mov	x0, x19
    3854:	bl	3c00 <PyInit__multibytecodec@@Base+0xd0c>
    3858:	cmn	w0, #0x1
    385c:	b.eq	3ac4 <PyInit__multibytecodec@@Base+0xbd0>  // b.none
    3860:	mov	w0, wzr
    3864:	b	3ae0 <PyInit__multibytecodec@@Base+0xbec>
    3868:	ldr	x0, [x19, #40]
    386c:	cbz	x0, 38a0 <PyInit__multibytecodec@@Base+0x9ac>
    3870:	mov	x1, x4
    3874:	bl	2a40 <PyUnicodeEncodeError_SetStart@plt>
    3878:	cbnz	w0, 3ac4 <PyInit__multibytecodec@@Base+0xbd0>
    387c:	ldr	x0, [x19, #40]
    3880:	mov	x1, x23
    3884:	bl	2a90 <PyUnicodeEncodeError_SetEnd@plt>
    3888:	cbnz	w0, 3ac4 <PyInit__multibytecodec@@Base+0xbd0>
    388c:	ldr	x0, [x19, #40]
    3890:	mov	x1, x25
    3894:	bl	29f0 <PyUnicodeEncodeError_SetReason@plt>
    3898:	cbnz	w0, 3ac4 <PyInit__multibytecodec@@Base+0xbd0>
    389c:	b	38d0 <PyInit__multibytecodec@@Base+0x9dc>
    38a0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    38a4:	ldr	x8, [x8, #4024]
    38a8:	ldr	x2, [x21]
    38ac:	ldr	x3, [x19]
    38b0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    38b4:	ldr	x0, [x8]
    38b8:	add	x1, x1, #0x4b5
    38bc:	mov	x5, x23
    38c0:	mov	x6, x25
    38c4:	bl	2a80 <_PyObject_CallFunction_SizeT@plt>
    38c8:	str	x0, [x19, #40]
    38cc:	cbz	x0, 3ac4 <PyInit__multibytecodec@@Base+0xbd0>
    38d0:	ldr	x1, [x19, #40]
    38d4:	cmp	x22, #0x1
    38d8:	b.eq	3abc <PyInit__multibytecodec@@Base+0xbc8>  // b.none
    38dc:	mov	x0, x22
    38e0:	bl	3c94 <PyInit__multibytecodec@@Base+0xda0>
    38e4:	mov	x22, x0
    38e8:	cbz	x0, 3b00 <PyInit__multibytecodec@@Base+0xc0c>
    38ec:	ldr	x8, [x22, #8]
    38f0:	ldrb	w8, [x8, #171]
    38f4:	tbz	w8, #2, 3928 <PyInit__multibytecodec@@Base+0xa34>
    38f8:	ldr	x8, [x22, #16]
    38fc:	cmp	x8, #0x2
    3900:	b.ne	3928 <PyInit__multibytecodec@@Base+0xa34>  // b.any
    3904:	ldr	x23, [x22, #24]
    3908:	ldr	x8, [x23, #8]
    390c:	ldr	x8, [x8, #168]
    3910:	tst	x8, #0x18000000
    3914:	b.eq	3928 <PyInit__multibytecodec@@Base+0xa34>  // b.none
    3918:	ldr	x9, [x22, #32]
    391c:	ldr	x9, [x9, #8]
    3920:	ldrb	w9, [x9, #171]
    3924:	tbnz	w9, #0, 3b10 <PyInit__multibytecodec@@Base+0xc1c>
    3928:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    392c:	ldr	x8, [x8, #4000]
    3930:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3934:	add	x1, x1, #0x4bb
    3938:	ldr	x0, [x8]
    393c:	bl	2ae0 <PyErr_SetString@plt>
    3940:	mov	x23, xzr
    3944:	b	3acc <PyInit__multibytecodec@@Base+0xbd8>
    3948:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    394c:	ldr	x8, [x8, #3984]
    3950:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3954:	add	x1, x1, #0x48a
    3958:	b	39b8 <PyInit__multibytecodec@@Base+0xac4>
    395c:	ldr	x24, [x19, #8]
    3960:	adrp	x25, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3964:	add	x25, x25, #0x46c
    3968:	cmp	x22, #0x3
    396c:	b.ne	3814 <PyInit__multibytecodec@@Base+0x920>  // b.any
    3970:	mov	w0, #0x3f                  	// #63
    3974:	bl	2d80 <PyUnicode_FromOrdinal@plt>
    3978:	cbz	x0, 3998 <PyInit__multibytecodec@@Base+0xaa4>
    397c:	ldr	w8, [x0, #32]
    3980:	stur	x22, [x29, #-16]
    3984:	stp	x0, x25, [sp, #16]
    3988:	ubfx	w27, w8, #2, #3
    398c:	tbnz	w8, #5, 39c4 <PyInit__multibytecodec@@Base+0xad0>
    3990:	ldr	x28, [x0, #72]
    3994:	b	39d4 <PyInit__multibytecodec@@Base+0xae0>
    3998:	mov	w8, #0x5                   	// #5
    399c:	cmp	w8, #0x5
    39a0:	b.ne	3ab4 <PyInit__multibytecodec@@Base+0xbc0>  // b.any
    39a4:	b	3ac4 <PyInit__multibytecodec@@Base+0xbd0>
    39a8:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    39ac:	ldr	x8, [x8, #3984]
    39b0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    39b4:	add	x1, x1, #0x49f
    39b8:	ldr	x0, [x8]
    39bc:	bl	2ae0 <PyErr_SetString@plt>
    39c0:	b	3adc <PyInit__multibytecodec@@Base+0xbe8>
    39c4:	add	x9, x0, #0x30
    39c8:	add	x10, x0, #0x48
    39cc:	tst	w8, #0x40
    39d0:	csel	x28, x10, x9, eq  // eq = none
    39d4:	add	x25, x19, #0x18
    39d8:	mov	w22, #0x7                   	// #7
    39dc:	mov	w26, #0x5                   	// #5
    39e0:	stur	xzr, [x29, #-8]
    39e4:	b	3a04 <PyInit__multibytecodec@@Base+0xb10>
    39e8:	mov	x1, #0xffffffffffffffff    	// #-1
    39ec:	mov	x0, x19
    39f0:	bl	3c00 <PyInit__multibytecodec@@Base+0xd0c>
    39f4:	cmn	w0, #0x1
    39f8:	csel	w8, w26, w22, eq  // eq = none
    39fc:	cmp	w8, #0x7
    3a00:	b.ne	3a4c <PyInit__multibytecodec@@Base+0xb58>  // b.any
    3a04:	ldp	x9, x8, [x19, #24]
    3a08:	ldr	x10, [x21, #24]
    3a0c:	ldr	x1, [x21, #8]
    3a10:	sub	x4, x29, #0x8
    3a14:	sub	x7, x8, x9
    3a18:	mov	w5, #0x1                   	// #1
    3a1c:	mov	x0, x20
    3a20:	mov	w2, w27
    3a24:	mov	x3, x28
    3a28:	mov	x6, x25
    3a2c:	str	wzr, [sp]
    3a30:	blr	x10
    3a34:	mov	x23, x0
    3a38:	cmn	x0, #0x1
    3a3c:	b.eq	39e8 <PyInit__multibytecodec@@Base+0xaf4>  // b.none
    3a40:	mov	w8, #0x6                   	// #6
    3a44:	cmp	w8, #0x7
    3a48:	b.eq	3a04 <PyInit__multibytecodec@@Base+0xb10>  // b.none
    3a4c:	cmp	w8, #0x6
    3a50:	b.ne	3aa4 <PyInit__multibytecodec@@Base+0xbb0>  // b.any
    3a54:	ldr	x0, [sp, #16]
    3a58:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3a5c:	cbz	x23, 3aa0 <PyInit__multibytecodec@@Base+0xbac>
    3a60:	ldp	x9, x8, [x19, #24]
    3a64:	sub	x8, x8, x9
    3a68:	cmp	x8, #0x0
    3a6c:	b.gt	3a84 <PyInit__multibytecodec@@Base+0xb90>
    3a70:	mov	w1, #0x1                   	// #1
    3a74:	mov	x0, x19
    3a78:	bl	3c00 <PyInit__multibytecodec@@Base+0xd0c>
    3a7c:	cmn	w0, #0x1
    3a80:	b.eq	3b08 <PyInit__multibytecodec@@Base+0xc14>  // b.none
    3a84:	ldr	x9, [x25]
    3a88:	mov	w8, wzr
    3a8c:	mov	w10, #0x3f                  	// #63
    3a90:	add	x11, x9, #0x1
    3a94:	str	x11, [x25]
    3a98:	strb	w10, [x9]
    3a9c:	b	3aa4 <PyInit__multibytecodec@@Base+0xbb0>
    3aa0:	mov	w8, wzr
    3aa4:	ldur	x22, [x29, #-16]
    3aa8:	ldr	x25, [sp, #24]
    3aac:	cmp	w8, #0x5
    3ab0:	b.eq	3ac4 <PyInit__multibytecodec@@Base+0xbd0>  // b.none
    3ab4:	cbz	w8, 3814 <PyInit__multibytecodec@@Base+0x920>
    3ab8:	b	3ae0 <PyInit__multibytecodec@@Base+0xbec>
    3abc:	mov	x0, x1
    3ac0:	bl	2bc0 <PyCodec_StrictErrors@plt>
    3ac4:	mov	x23, xzr
    3ac8:	mov	x22, xzr
    3acc:	mov	x0, x22
    3ad0:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3ad4:	mov	x0, x23
    3ad8:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3adc:	mov	w0, #0xffffffff            	// #-1
    3ae0:	ldp	x20, x19, [sp, #128]
    3ae4:	ldp	x22, x21, [sp, #112]
    3ae8:	ldp	x24, x23, [sp, #96]
    3aec:	ldp	x26, x25, [sp, #80]
    3af0:	ldp	x28, x27, [sp, #64]
    3af4:	ldp	x29, x30, [sp, #48]
    3af8:	add	sp, sp, #0x90
    3afc:	ret
    3b00:	mov	x23, xzr
    3b04:	b	3acc <PyInit__multibytecodec@@Base+0xbd8>
    3b08:	mov	w8, #0x5                   	// #5
    3b0c:	b	3aa4 <PyInit__multibytecodec@@Base+0xbb0>
    3b10:	tbnz	w8, #28, 3b20 <PyInit__multibytecodec@@Base+0xc2c>
    3b14:	mov	x0, x23
    3b18:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    3b1c:	b	3b44 <PyInit__multibytecodec@@Base+0xc50>
    3b20:	sub	x3, x29, #0x8
    3b24:	mov	w4, #0x1                   	// #1
    3b28:	mov	w5, #0x1                   	// #1
    3b2c:	mov	x0, x21
    3b30:	mov	x1, x20
    3b34:	mov	x2, x23
    3b38:	bl	3534 <PyInit__multibytecodec@@Base+0x640>
    3b3c:	mov	x23, x0
    3b40:	cbz	x0, 3acc <PyInit__multibytecodec@@Base+0xbd8>
    3b44:	ldr	x20, [x23, #16]
    3b48:	cmp	x20, #0x1
    3b4c:	b.lt	3b90 <PyInit__multibytecodec@@Base+0xc9c>  // b.tstop
    3b50:	ldp	x9, x8, [x19, #24]
    3b54:	sub	x8, x8, x9
    3b58:	cmp	x20, x8
    3b5c:	b.le	3b74 <PyInit__multibytecodec@@Base+0xc80>
    3b60:	mov	x0, x19
    3b64:	mov	x1, x20
    3b68:	bl	3c00 <PyInit__multibytecodec@@Base+0xd0c>
    3b6c:	cmn	w0, #0x1
    3b70:	b.eq	3acc <PyInit__multibytecodec@@Base+0xbd8>  // b.none
    3b74:	ldr	x0, [x19, #24]
    3b78:	add	x1, x23, #0x20
    3b7c:	mov	x2, x20
    3b80:	bl	2970 <memcpy@plt>
    3b84:	ldr	x8, [x19, #24]
    3b88:	add	x8, x8, x20
    3b8c:	str	x8, [x19, #24]
    3b90:	ldr	x0, [x22, #32]
    3b94:	bl	2b50 <PyLong_AsSsize_t@plt>
    3b98:	mov	x20, x0
    3b9c:	tbz	x0, #63, 3bb0 <PyInit__multibytecodec@@Base+0xcbc>
    3ba0:	bl	2bf0 <PyErr_Occurred@plt>
    3ba4:	cbnz	x0, 3bb0 <PyInit__multibytecodec@@Base+0xcbc>
    3ba8:	ldr	x8, [x19, #16]
    3bac:	add	x20, x8, x20
    3bb0:	tbnz	x20, #63, 3bc0 <PyInit__multibytecodec@@Base+0xccc>
    3bb4:	ldr	x8, [x19, #16]
    3bb8:	cmp	x20, x8
    3bbc:	b.le	3be4 <PyInit__multibytecodec@@Base+0xcf0>
    3bc0:	bl	2b90 <PyErr_Clear@plt>
    3bc4:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3bc8:	ldr	x8, [x8, #4032]
    3bcc:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3bd0:	add	x1, x1, #0x4ef
    3bd4:	mov	x2, x20
    3bd8:	ldr	x0, [x8]
    3bdc:	bl	2d50 <PyErr_Format@plt>
    3be0:	b	3acc <PyInit__multibytecodec@@Base+0xbd8>
    3be4:	mov	x0, x22
    3be8:	str	x20, [x19, #8]
    3bec:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3bf0:	mov	x0, x23
    3bf4:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3bf8:	mov	w0, wzr
    3bfc:	b	3ae0 <PyInit__multibytecodec@@Base+0xbec>
    3c00:	stp	x29, x30, [sp, #-48]!
    3c04:	str	x21, [sp, #16]
    3c08:	stp	x20, x19, [sp, #32]
    3c0c:	mov	x29, sp
    3c10:	mov	x19, x0
    3c14:	ldr	x20, [x0, #48]!
    3c18:	ldr	x8, [x20, #16]
    3c1c:	asr	x9, x8, #1
    3c20:	orr	x10, x9, #0x1
    3c24:	cmp	x9, x1
    3c28:	csel	x9, x10, x1, gt
    3c2c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    3c30:	sub	x10, x10, x9
    3c34:	cmp	x8, x10
    3c38:	b.le	3c48 <PyInit__multibytecodec@@Base+0xd54>
    3c3c:	bl	2a70 <PyErr_NoMemory@plt>
    3c40:	mov	w0, #0xffffffff            	// #-1
    3c44:	b	3c84 <PyInit__multibytecodec@@Base+0xd90>
    3c48:	ldur	x21, [x0, #-24]
    3c4c:	add	x1, x9, x8
    3c50:	bl	29c0 <_PyBytes_Resize@plt>
    3c54:	cmn	w0, #0x1
    3c58:	b.eq	3c84 <PyInit__multibytecodec@@Base+0xd90>  // b.none
    3c5c:	ldr	x8, [x19, #48]
    3c60:	sub	x9, x21, x20
    3c64:	sub	x9, x9, #0x20
    3c68:	mov	w0, wzr
    3c6c:	add	x10, x8, #0x20
    3c70:	add	x9, x10, x9
    3c74:	str	x9, [x19, #24]
    3c78:	ldr	x8, [x8, #16]
    3c7c:	add	x8, x10, x8
    3c80:	str	x8, [x19, #32]
    3c84:	ldp	x20, x19, [sp, #32]
    3c88:	ldr	x21, [sp, #16]
    3c8c:	ldp	x29, x30, [sp], #48
    3c90:	ret
    3c94:	stp	x29, x30, [sp, #-48]!
    3c98:	str	x21, [sp, #16]
    3c9c:	stp	x20, x19, [sp, #32]
    3ca0:	mov	x29, sp
    3ca4:	mov	x20, x1
    3ca8:	bl	2cc0 <PyUnicode_AsUTF8@plt>
    3cac:	cbz	x0, 3d04 <PyInit__multibytecodec@@Base+0xe10>
    3cb0:	bl	2df0 <PyCodec_LookupError@plt>
    3cb4:	cbz	x0, 3d04 <PyInit__multibytecodec@@Base+0xe10>
    3cb8:	mov	x19, x0
    3cbc:	mov	w0, #0x1                   	// #1
    3cc0:	bl	2bd0 <PyTuple_New@plt>
    3cc4:	cbz	x0, 3cfc <PyInit__multibytecodec@@Base+0xe08>
    3cc8:	mov	x21, x0
    3ccc:	str	x20, [x0, #24]
    3cd0:	mov	x0, x20
    3cd4:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    3cd8:	mov	x0, x19
    3cdc:	mov	x1, x21
    3ce0:	bl	2c20 <PyObject_CallObject@plt>
    3ce4:	mov	x20, x0
    3ce8:	mov	x0, x21
    3cec:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3cf0:	mov	x0, x19
    3cf4:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3cf8:	b	3d08 <PyInit__multibytecodec@@Base+0xe14>
    3cfc:	mov	x0, x19
    3d00:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3d04:	mov	x20, xzr
    3d08:	mov	x0, x20
    3d0c:	ldp	x20, x19, [sp, #32]
    3d10:	ldr	x21, [sp, #16]
    3d14:	ldp	x29, x30, [sp], #48
    3d18:	ret
    3d1c:	sub	sp, sp, #0x40
    3d20:	stp	x29, x30, [sp, #32]
    3d24:	stp	x20, x19, [sp, #48]
    3d28:	add	x29, sp, #0x20
    3d2c:	mov	x19, x0
    3d30:	ldr	x0, [x0, #40]
    3d34:	cbz	x0, 3d70 <PyInit__multibytecodec@@Base+0xe7c>
    3d38:	mov	x1, sp
    3d3c:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    3d40:	cbz	x0, 3db8 <PyInit__multibytecodec@@Base+0xec4>
    3d44:	ldr	x20, [sp]
    3d48:	cmp	x20, #0x9
    3d4c:	b.lt	3d7c <PyInit__multibytecodec@@Base+0xe88>  // b.tstop
    3d50:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3d54:	ldr	x8, [x8, #4048]
    3d58:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3d5c:	add	x1, x1, #0x51d
    3d60:	ldr	x0, [x8]
    3d64:	bl	2ae0 <PyErr_SetString@plt>
    3d68:	mov	x0, xzr
    3d6c:	b	3db8 <PyInit__multibytecodec@@Base+0xec4>
    3d70:	mov	w8, #0x1                   	// #1
    3d74:	strb	wzr, [sp, #12]
    3d78:	b	3d98 <PyInit__multibytecodec@@Base+0xea4>
    3d7c:	add	x8, sp, #0xc
    3d80:	mov	x1, x0
    3d84:	orr	x0, x8, #0x1
    3d88:	mov	x2, x20
    3d8c:	strb	w20, [sp, #12]
    3d90:	bl	2970 <memcpy@plt>
    3d94:	add	x8, x20, #0x1
    3d98:	ldr	x9, [x19, #24]
    3d9c:	add	x10, sp, #0xc
    3da0:	add	x1, x8, #0x8
    3da4:	add	x0, sp, #0xc
    3da8:	mov	w2, #0x1                   	// #1
    3dac:	mov	w3, wzr
    3db0:	str	x9, [x10, x8]
    3db4:	bl	2af0 <_PyLong_FromByteArray@plt>
    3db8:	ldp	x20, x19, [sp, #48]
    3dbc:	ldp	x29, x30, [sp, #32]
    3dc0:	add	sp, sp, #0x40
    3dc4:	ret
    3dc8:	sub	sp, sp, #0x50
    3dcc:	stp	x29, x30, [sp, #32]
    3dd0:	str	x21, [sp, #48]
    3dd4:	stp	x20, x19, [sp, #64]
    3dd8:	add	x29, sp, #0x20
    3ddc:	mov	x8, x1
    3de0:	mov	x19, x0
    3de4:	add	x1, sp, #0xc
    3de8:	mov	w2, #0x11                  	// #17
    3dec:	mov	w3, #0x1                   	// #1
    3df0:	mov	x0, x8
    3df4:	mov	w4, wzr
    3df8:	bl	2d30 <_PyLong_AsByteArray@plt>
    3dfc:	tbnz	w0, #31, 3e7c <PyInit__multibytecodec@@Base+0xf88>
    3e00:	ldrb	w1, [sp, #12]
    3e04:	cmp	x1, #0x9
    3e08:	b.cc	3e28 <PyInit__multibytecodec@@Base+0xf34>  // b.lo, b.ul, b.last
    3e0c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3e10:	ldr	x8, [x8, #4048]
    3e14:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3e18:	add	x1, x1, #0x51d
    3e1c:	ldr	x0, [x8]
    3e20:	bl	2ae0 <PyErr_SetString@plt>
    3e24:	b	3e84 <PyInit__multibytecodec@@Base+0xf90>
    3e28:	add	x8, sp, #0xc
    3e2c:	orr	x20, x8, #0x1
    3e30:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3e34:	add	x2, x2, #0x53a
    3e38:	mov	x0, x20
    3e3c:	bl	2c60 <PyUnicode_DecodeUTF8@plt>
    3e40:	cbz	x0, 3e7c <PyInit__multibytecodec@@Base+0xf88>
    3e44:	mov	x21, x0
    3e48:	ldr	x0, [x19, #40]
    3e4c:	cbz	x0, 3e58 <PyInit__multibytecodec@@Base+0xf64>
    3e50:	str	xzr, [x19, #40]
    3e54:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3e58:	str	x21, [x19, #40]
    3e5c:	ldrb	w8, [sp, #12]
    3e60:	ldr	x8, [x20, x8]
    3e64:	str	x8, [x19, #24]
    3e68:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3e6c:	ldr	x19, [x19, #4016]
    3e70:	mov	x0, x19
    3e74:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    3e78:	b	3e88 <PyInit__multibytecodec@@Base+0xf94>
    3e7c:	mov	x0, xzr
    3e80:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    3e84:	mov	x19, xzr
    3e88:	mov	x0, x19
    3e8c:	ldp	x20, x19, [sp, #64]
    3e90:	ldr	x21, [sp, #48]
    3e94:	ldp	x29, x30, [sp, #32]
    3e98:	add	sp, sp, #0x50
    3e9c:	ret
    3ea0:	sub	sp, sp, #0x30
    3ea4:	stp	x29, x30, [sp, #16]
    3ea8:	str	x19, [sp, #32]
    3eac:	add	x29, sp, #0x10
    3eb0:	ldr	x9, [x0, #16]
    3eb4:	mov	x19, x0
    3eb8:	ldr	x8, [x9, #40]
    3ebc:	cbz	x8, 3ee8 <PyInit__multibytecodec@@Base+0xff4>
    3ec0:	add	x10, x29, #0x1c
    3ec4:	str	x10, [sp, #8]
    3ec8:	ldr	x1, [x9, #8]
    3ecc:	add	x0, x19, #0x18
    3ed0:	add	x2, sp, #0x8
    3ed4:	mov	w3, #0x4                   	// #4
    3ed8:	blr	x8
    3edc:	cbz	x0, 3ee8 <PyInit__multibytecodec@@Base+0xff4>
    3ee0:	mov	x19, xzr
    3ee4:	b	3f08 <PyInit__multibytecodec@@Base+0x1014>
    3ee8:	ldr	x0, [x19, #40]
    3eec:	cbz	x0, 3ef8 <PyInit__multibytecodec@@Base+0x1004>
    3ef0:	str	xzr, [x19, #40]
    3ef4:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3ef8:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3efc:	ldr	x19, [x19, #4016]
    3f00:	mov	x0, x19
    3f04:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    3f08:	mov	x0, x19
    3f0c:	ldr	x19, [sp, #32]
    3f10:	ldp	x29, x30, [sp, #16]
    3f14:	add	sp, sp, #0x30
    3f18:	ret
    3f1c:	stp	x29, x30, [sp, #-32]!
    3f20:	str	x19, [sp, #16]
    3f24:	mov	x29, sp
    3f28:	mov	x19, x0
    3f2c:	ldr	x0, [x0, #32]
    3f30:	sub	x8, x0, #0x1
    3f34:	cmp	x8, #0x3
    3f38:	b.cs	3f50 <PyInit__multibytecodec@@Base+0x105c>  // b.hs, b.nlast
    3f3c:	adrp	x9, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3f40:	add	x9, x9, #0xd78
    3f44:	ldr	x0, [x9, x8, lsl #3]
    3f48:	bl	2ce0 <PyUnicode_FromString@plt>
    3f4c:	b	3f58 <PyInit__multibytecodec@@Base+0x1064>
    3f50:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    3f54:	ldr	x0, [x19, #32]
    3f58:	ldr	x19, [sp, #16]
    3f5c:	ldp	x29, x30, [sp], #32
    3f60:	ret
    3f64:	stp	x29, x30, [sp, #-32]!
    3f68:	stp	x20, x19, [sp, #16]
    3f6c:	mov	x29, sp
    3f70:	cbz	x1, 3f94 <PyInit__multibytecodec@@Base+0x10a0>
    3f74:	ldr	x8, [x1, #8]
    3f78:	ldrb	w8, [x8, #171]
    3f7c:	tbnz	w8, #4, 3fbc <PyInit__multibytecodec@@Base+0x10c8>
    3f80:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3f84:	ldr	x8, [x8, #4000]
    3f88:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3f8c:	add	x1, x1, #0x57c
    3f90:	b	3fa4 <PyInit__multibytecodec@@Base+0x10b0>
    3f94:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3f98:	ldr	x8, [x8, #4056]
    3f9c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3fa0:	add	x1, x1, #0x564
    3fa4:	ldr	x0, [x8]
    3fa8:	bl	2ae0 <PyErr_SetString@plt>
    3fac:	mov	w0, #0xffffffff            	// #-1
    3fb0:	ldp	x20, x19, [sp, #16]
    3fb4:	ldp	x29, x30, [sp], #32
    3fb8:	ret
    3fbc:	mov	x19, x0
    3fc0:	mov	x0, x1
    3fc4:	bl	2cc0 <PyUnicode_AsUTF8@plt>
    3fc8:	cbz	x0, 3fac <PyInit__multibytecodec@@Base+0x10b8>
    3fcc:	bl	3ffc <PyInit__multibytecodec@@Base+0x1108>
    3fd0:	cbz	x0, 3fac <PyInit__multibytecodec@@Base+0x10b8>
    3fd4:	mov	x20, x0
    3fd8:	ldr	x0, [x19, #32]
    3fdc:	cbz	x0, 3ff0 <PyInit__multibytecodec@@Base+0x10fc>
    3fe0:	cbz	x0, 3fec <PyInit__multibytecodec@@Base+0x10f8>
    3fe4:	cmp	x0, #0x4
    3fe8:	b.cc	3ff0 <PyInit__multibytecodec@@Base+0x10fc>  // b.lo, b.ul, b.last
    3fec:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    3ff0:	mov	w0, wzr
    3ff4:	str	x20, [x19, #32]
    3ff8:	b	3fb0 <PyInit__multibytecodec@@Base+0x10bc>
    3ffc:	stp	x29, x30, [sp, #-32]!
    4000:	str	x19, [sp, #16]
    4004:	mov	x29, sp
    4008:	cbz	x0, 4054 <PyInit__multibytecodec@@Base+0x1160>
    400c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4010:	add	x1, x1, #0x53a
    4014:	mov	x19, x0
    4018:	bl	2c30 <strcmp@plt>
    401c:	cbz	w0, 4054 <PyInit__multibytecodec@@Base+0x1160>
    4020:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4024:	add	x1, x1, #0x555
    4028:	mov	x0, x19
    402c:	bl	2c30 <strcmp@plt>
    4030:	cbz	w0, 4064 <PyInit__multibytecodec@@Base+0x1170>
    4034:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4038:	add	x1, x1, #0x55c
    403c:	mov	x0, x19
    4040:	bl	2c30 <strcmp@plt>
    4044:	cbz	w0, 406c <PyInit__multibytecodec@@Base+0x1178>
    4048:	mov	x0, x19
    404c:	bl	2ce0 <PyUnicode_FromString@plt>
    4050:	b	4058 <PyInit__multibytecodec@@Base+0x1164>
    4054:	mov	w0, #0x1                   	// #1
    4058:	ldr	x19, [sp, #16]
    405c:	ldp	x29, x30, [sp], #32
    4060:	ret
    4064:	mov	w0, #0x2                   	// #2
    4068:	b	4058 <PyInit__multibytecodec@@Base+0x1164>
    406c:	mov	w0, #0x3                   	// #3
    4070:	b	4058 <PyInit__multibytecodec@@Base+0x1164>
    4074:	stp	x29, x30, [sp, #-32]!
    4078:	str	x19, [sp, #16]
    407c:	mov	x29, sp
    4080:	mov	x19, x0
    4084:	bl	2e00 <PyObject_GC_UnTrack@plt>
    4088:	ldr	x0, [x19, #32]
    408c:	cbz	x0, 40a0 <PyInit__multibytecodec@@Base+0x11ac>
    4090:	cbz	x0, 409c <PyInit__multibytecodec@@Base+0x11a8>
    4094:	cmp	x0, #0x4
    4098:	b.cc	40a0 <PyInit__multibytecodec@@Base+0x11ac>  // b.lo, b.ul, b.last
    409c:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    40a0:	ldr	x8, [x19, #8]
    40a4:	mov	x0, x19
    40a8:	ldr	x8, [x8, #320]
    40ac:	blr	x8
    40b0:	ldr	x19, [sp, #16]
    40b4:	ldp	x29, x30, [sp], #32
    40b8:	ret
    40bc:	stp	x29, x30, [sp, #-16]!
    40c0:	mov	x29, sp
    40c4:	ldr	x0, [x0, #32]
    40c8:	cmp	x0, #0x0
    40cc:	cset	w9, ne  // ne = any
    40d0:	cmp	x0, #0x4
    40d4:	cset	w10, cc  // cc = lo, ul, last
    40d8:	cbz	x0, 40fc <PyInit__multibytecodec@@Base+0x1208>
    40dc:	and	w9, w10, w9
    40e0:	tbnz	w9, #0, 40fc <PyInit__multibytecodec@@Base+0x1208>
    40e4:	mov	x8, x1
    40e8:	mov	x1, x2
    40ec:	blr	x8
    40f0:	cbz	w0, 40fc <PyInit__multibytecodec@@Base+0x1208>
    40f4:	ldp	x29, x30, [sp], #16
    40f8:	ret
    40fc:	mov	w0, wzr
    4100:	ldp	x29, x30, [sp], #16
    4104:	ret
    4108:	mov	w0, wzr
    410c:	ret
    4110:	sub	sp, sp, #0x30
    4114:	stp	x29, x30, [sp, #16]
    4118:	stp	x20, x19, [sp, #32]
    411c:	add	x29, sp, #0x10
    4120:	mov	x8, x2
    4124:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4128:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    412c:	mov	x20, x0
    4130:	add	x2, x2, #0x667
    4134:	add	x3, x3, #0xc18
    4138:	add	x4, sp, #0x8
    413c:	mov	x0, x1
    4140:	mov	x1, x8
    4144:	str	xzr, [sp, #8]
    4148:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    414c:	cbz	w0, 41bc <PyInit__multibytecodec@@Base+0x12c8>
    4150:	ldr	x8, [x20, #304]
    4154:	mov	x0, x20
    4158:	mov	x1, xzr
    415c:	blr	x8
    4160:	mov	x19, x0
    4164:	cbz	x0, 41c0 <PyInit__multibytecodec@@Base+0x12cc>
    4168:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    416c:	add	x1, x1, #0x7ef
    4170:	mov	x0, x20
    4174:	bl	2a00 <PyObject_GetAttrString@plt>
    4178:	mov	x20, x0
    417c:	cbz	x0, 41ac <PyInit__multibytecodec@@Base+0x12b8>
    4180:	ldr	x8, [x20, #8]
    4184:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    4188:	add	x9, x9, #0x8e0
    418c:	cmp	x8, x9
    4190:	b.eq	41d4 <PyInit__multibytecodec@@Base+0x12e0>  // b.none
    4194:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4198:	ldr	x8, [x8, #4000]
    419c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    41a0:	add	x1, x1, #0x5aa
    41a4:	ldr	x0, [x8]
    41a8:	bl	2ae0 <PyErr_SetString@plt>
    41ac:	mov	x0, x19
    41b0:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    41b4:	mov	x0, x20
    41b8:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    41bc:	mov	x19, xzr
    41c0:	mov	x0, x19
    41c4:	ldp	x20, x19, [sp, #32]
    41c8:	ldp	x29, x30, [sp, #16]
    41cc:	add	sp, sp, #0x30
    41d0:	ret
    41d4:	ldr	x8, [x20, #16]
    41d8:	str	xzr, [x19, #48]
    41dc:	str	x8, [x19, #16]
    41e0:	ldr	x0, [sp, #8]
    41e4:	bl	3ffc <PyInit__multibytecodec@@Base+0x1108>
    41e8:	str	x0, [x19, #32]
    41ec:	cbz	x0, 41ac <PyInit__multibytecodec@@Base+0x12b8>
    41f0:	ldr	x9, [x19, #16]
    41f4:	ldr	x8, [x9, #56]
    41f8:	cbz	x8, 420c <PyInit__multibytecodec@@Base+0x1318>
    41fc:	ldr	x1, [x9, #8]
    4200:	add	x0, x19, #0x18
    4204:	blr	x8
    4208:	cbnz	w0, 41ac <PyInit__multibytecodec@@Base+0x12b8>
    420c:	mov	x0, x20
    4210:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    4214:	b	41c0 <PyInit__multibytecodec@@Base+0x12cc>
    4218:	sub	sp, sp, #0xa0
    421c:	stp	x29, x30, [sp, #112]
    4220:	stp	x22, x21, [sp, #128]
    4224:	stp	x20, x19, [sp, #144]
    4228:	add	x29, sp, #0x70
    422c:	mov	x21, x2
    4230:	mov	x20, x1
    4234:	mov	x19, x0
    4238:	cbz	x3, 4244 <PyInit__multibytecodec@@Base+0x1350>
    423c:	ldr	x22, [x3, #16]
    4240:	b	4248 <PyInit__multibytecodec@@Base+0x1354>
    4244:	mov	x22, xzr
    4248:	movi	v0.2d, #0x0
    424c:	stp	q0, q0, [sp, #64]
    4250:	stp	q0, q0, [sp, #32]
    4254:	str	q0, [sp, #16]
    4258:	cbz	x20, 4274 <PyInit__multibytecodec@@Base+0x1380>
    425c:	sub	x8, x21, #0x1
    4260:	cmp	x8, #0x1
    4264:	b.hi	4274 <PyInit__multibytecodec@@Base+0x1380>  // b.pmore
    4268:	cbnz	x3, 4274 <PyInit__multibytecodec@@Base+0x1380>
    426c:	cbnz	x20, 42a8 <PyInit__multibytecodec@@Base+0x13b4>
    4270:	b	42bc <PyInit__multibytecodec@@Base+0x13c8>
    4274:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    4278:	sub	x8, x29, #0x10
    427c:	add	x4, x4, #0xcc8
    4280:	mov	w5, #0x1                   	// #1
    4284:	mov	w6, #0x2                   	// #2
    4288:	mov	x0, x20
    428c:	mov	x1, x21
    4290:	mov	x2, xzr
    4294:	mov	w7, wzr
    4298:	str	x8, [sp]
    429c:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    42a0:	mov	x20, x0
    42a4:	cbz	x20, 42bc <PyInit__multibytecodec@@Base+0x13c8>
    42a8:	ldr	x0, [x20]
    42ac:	add	x1, sp, #0x10
    42b0:	mov	w2, wzr
    42b4:	bl	2cb0 <PyObject_GetBuffer@plt>
    42b8:	cbz	w0, 42e8 <PyInit__multibytecodec@@Base+0x13f4>
    42bc:	mov	x19, xzr
    42c0:	ldr	x8, [sp, #24]
    42c4:	cbz	x8, 42d0 <PyInit__multibytecodec@@Base+0x13dc>
    42c8:	add	x0, sp, #0x10
    42cc:	bl	29e0 <PyBuffer_Release@plt>
    42d0:	mov	x0, x19
    42d4:	ldp	x20, x19, [sp, #144]
    42d8:	ldp	x22, x21, [sp, #128]
    42dc:	ldp	x29, x30, [sp, #112]
    42e0:	add	sp, sp, #0xa0
    42e4:	ret
    42e8:	add	x0, sp, #0x10
    42ec:	mov	w1, #0x43                  	// #67
    42f0:	bl	2a20 <PyBuffer_IsContiguous@plt>
    42f4:	cbz	w0, 4324 <PyInit__multibytecodec@@Base+0x1430>
    42f8:	add	x8, x22, x21
    42fc:	cmp	x8, #0x1
    4300:	b.ne	4348 <PyInit__multibytecodec@@Base+0x1454>  // b.any
    4304:	mov	w2, wzr
    4308:	add	x1, sp, #0x10
    430c:	mov	x0, x19
    4310:	bl	4428 <PyInit__multibytecodec@@Base+0x1534>
    4314:	mov	x19, x0
    4318:	ldr	x8, [sp, #24]
    431c:	cbnz	x8, 42c8 <PyInit__multibytecodec@@Base+0x13d4>
    4320:	b	42d0 <PyInit__multibytecodec@@Base+0x13dc>
    4324:	ldr	x3, [x20]
    4328:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    432c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4330:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4334:	add	x0, x0, #0x5df
    4338:	add	x1, x1, #0x5e6
    433c:	add	x2, x2, #0x5f7
    4340:	bl	2b70 <_PyArg_BadArgument@plt>
    4344:	b	42bc <PyInit__multibytecodec@@Base+0x13c8>
    4348:	ldr	x8, [x20, #8]
    434c:	ldr	x0, [x8, #8]
    4350:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4354:	ldr	x8, [x8, #3968]
    4358:	cmp	x0, x8
    435c:	b.eq	4370 <PyInit__multibytecodec@@Base+0x147c>  // b.none
    4360:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4364:	ldr	x1, [x1, #3968]
    4368:	bl	2d20 <PyType_IsSubtype@plt>
    436c:	cbz	w0, 438c <PyInit__multibytecodec@@Base+0x1498>
    4370:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4374:	ldr	x8, [x8, #4000]
    4378:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    437c:	add	x1, x1, #0x3f0
    4380:	ldr	x0, [x8]
    4384:	bl	2ae0 <PyErr_SetString@plt>
    4388:	b	42bc <PyInit__multibytecodec@@Base+0x13c8>
    438c:	ldr	x0, [x20, #8]
    4390:	bl	2da0 <_PyLong_AsInt@plt>
    4394:	mov	w2, w0
    4398:	cmn	w0, #0x1
    439c:	b.ne	4308 <PyInit__multibytecodec@@Base+0x1414>  // b.any
    43a0:	bl	2bf0 <PyErr_Occurred@plt>
    43a4:	cbnz	x0, 42bc <PyInit__multibytecodec@@Base+0x13c8>
    43a8:	mov	w2, #0xffffffff            	// #-1
    43ac:	b	4308 <PyInit__multibytecodec@@Base+0x1414>
    43b0:	stp	x29, x30, [sp, #-16]!
    43b4:	mov	x29, sp
    43b8:	bl	4978 <PyInit__multibytecodec@@Base+0x1a84>
    43bc:	ldp	x29, x30, [sp], #16
    43c0:	ret
    43c4:	stp	x29, x30, [sp, #-16]!
    43c8:	mov	x29, sp
    43cc:	ldr	x8, [x1, #8]
    43d0:	mov	x3, x1
    43d4:	ldrb	w8, [x8, #171]
    43d8:	tbnz	w8, #2, 4404 <PyInit__multibytecodec@@Base+0x1510>
    43dc:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    43e0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    43e4:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    43e8:	add	x0, x0, #0x3d5
    43ec:	add	x1, x1, #0x65e
    43f0:	add	x2, x2, #0x637
    43f4:	bl	2b70 <_PyArg_BadArgument@plt>
    43f8:	mov	x0, xzr
    43fc:	ldp	x29, x30, [sp], #16
    4400:	ret
    4404:	mov	x1, x3
    4408:	bl	49e4 <PyInit__multibytecodec@@Base+0x1af0>
    440c:	ldp	x29, x30, [sp], #16
    4410:	ret
    4414:	stp	x29, x30, [sp, #-16]!
    4418:	mov	x29, sp
    441c:	bl	4ac8 <PyInit__multibytecodec@@Base+0x1bd4>
    4420:	ldp	x29, x30, [sp], #16
    4424:	ret
    4428:	sub	sp, sp, #0xb0
    442c:	stp	x29, x30, [sp, #96]
    4430:	stp	x26, x25, [sp, #112]
    4434:	stp	x24, x23, [sp, #128]
    4438:	stp	x22, x21, [sp, #144]
    443c:	stp	x20, x19, [sp, #160]
    4440:	add	x29, sp, #0x60
    4444:	ldr	x20, [x1]
    4448:	ldr	x25, [x1, #16]
    444c:	add	x8, sp, #0x8
    4450:	add	x19, x8, #0x20
    4454:	mov	x22, x0
    4458:	mov	x0, x19
    445c:	mov	w24, w2
    4460:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    4464:	str	xzr, [sp, #32]
    4468:	ldr	x23, [x22, #48]
    446c:	cbz	x23, 448c <PyInit__multibytecodec@@Base+0x1598>
    4470:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    4474:	sub	x8, x8, x23
    4478:	cmp	x25, x8
    447c:	b.le	4494 <PyInit__multibytecodec@@Base+0x15a0>
    4480:	bl	2a70 <PyErr_NoMemory@plt>
    4484:	mov	x21, xzr
    4488:	b	4588 <PyInit__multibytecodec@@Base+0x1694>
    448c:	mov	x21, x20
    4490:	b	44d4 <PyInit__multibytecodec@@Base+0x15e0>
    4494:	add	x26, x23, x25
    4498:	mov	x0, x26
    449c:	bl	2dd0 <PyMem_Malloc@plt>
    44a0:	mov	x21, x0
    44a4:	cbz	x0, 4584 <PyInit__multibytecodec@@Base+0x1690>
    44a8:	ldr	x2, [x22, #48]
    44ac:	add	x1, x22, #0x28
    44b0:	mov	x0, x21
    44b4:	bl	2970 <memcpy@plt>
    44b8:	ldr	x8, [x22, #48]
    44bc:	mov	x1, x20
    44c0:	mov	x2, x25
    44c4:	add	x0, x21, x8
    44c8:	bl	2970 <memcpy@plt>
    44cc:	mov	x25, x26
    44d0:	str	xzr, [x22, #48]
    44d4:	add	x0, sp, #0x8
    44d8:	mov	x1, x21
    44dc:	mov	x2, x25
    44e0:	bl	45d0 <PyInit__multibytecodec@@Base+0x16dc>
    44e4:	add	x1, sp, #0x8
    44e8:	mov	x0, x22
    44ec:	bl	45ec <PyInit__multibytecodec@@Base+0x16f8>
    44f0:	cbnz	w0, 4588 <PyInit__multibytecodec@@Base+0x1694>
    44f4:	cbz	w24, 4538 <PyInit__multibytecodec@@Base+0x1644>
    44f8:	ldr	x8, [sp, #8]
    44fc:	ldr	x9, [sp, #24]
    4500:	cmp	x8, x9
    4504:	b.cs	4538 <PyInit__multibytecodec@@Base+0x1644>  // b.hs, b.nlast
    4508:	ldr	x0, [x22, #16]
    450c:	ldr	x2, [x22, #32]
    4510:	add	x1, sp, #0x8
    4514:	mov	x3, #0xfffffffffffffffe    	// #-2
    4518:	bl	4690 <PyInit__multibytecodec@@Base+0x179c>
    451c:	cbz	w0, 4538 <PyInit__multibytecodec@@Base+0x1644>
    4520:	add	x0, x22, #0x28
    4524:	mov	x1, x21
    4528:	mov	x2, x23
    452c:	bl	2970 <memcpy@plt>
    4530:	str	x23, [x22, #48]
    4534:	b	4588 <PyInit__multibytecodec@@Base+0x1694>
    4538:	ldr	x8, [sp, #8]
    453c:	ldr	x9, [sp, #24]
    4540:	cmp	x8, x9
    4544:	b.cs	4558 <PyInit__multibytecodec@@Base+0x1664>  // b.hs, b.nlast
    4548:	add	x1, sp, #0x8
    454c:	mov	x0, x22
    4550:	bl	48f0 <PyInit__multibytecodec@@Base+0x19fc>
    4554:	cbnz	w0, 4588 <PyInit__multibytecodec@@Base+0x1694>
    4558:	mov	x0, x19
    455c:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    4560:	cbz	x0, 4588 <PyInit__multibytecodec@@Base+0x1694>
    4564:	mov	x22, x0
    4568:	cmp	x21, x20
    456c:	b.eq	4578 <PyInit__multibytecodec@@Base+0x1684>  // b.none
    4570:	mov	x0, x21
    4574:	bl	29d0 <PyMem_Free@plt>
    4578:	ldr	x0, [sp, #32]
    457c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    4580:	b	45b0 <PyInit__multibytecodec@@Base+0x16bc>
    4584:	bl	2a70 <PyErr_NoMemory@plt>
    4588:	cbz	x21, 459c <PyInit__multibytecodec@@Base+0x16a8>
    458c:	cmp	x21, x20
    4590:	b.eq	459c <PyInit__multibytecodec@@Base+0x16a8>  // b.none
    4594:	mov	x0, x21
    4598:	bl	29d0 <PyMem_Free@plt>
    459c:	ldr	x0, [sp, #32]
    45a0:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    45a4:	mov	x0, x19
    45a8:	bl	2ac0 <_PyUnicodeWriter_Dealloc@plt>
    45ac:	mov	x22, xzr
    45b0:	mov	x0, x22
    45b4:	ldp	x20, x19, [sp, #160]
    45b8:	ldp	x22, x21, [sp, #144]
    45bc:	ldp	x24, x23, [sp, #128]
    45c0:	ldp	x26, x25, [sp, #112]
    45c4:	ldp	x29, x30, [sp, #96]
    45c8:	add	sp, sp, #0xb0
    45cc:	ret
    45d0:	ldr	x8, [x0, #72]
    45d4:	add	x9, x1, x2
    45d8:	stp	x1, x1, [x0]
    45dc:	str	x9, [x0, #16]
    45e0:	add	x8, x8, x2
    45e4:	str	x8, [x0, #72]
    45e8:	ret
    45ec:	stp	x29, x30, [sp, #-48]!
    45f0:	stp	x22, x21, [sp, #16]
    45f4:	stp	x20, x19, [sp, #32]
    45f8:	mov	x29, sp
    45fc:	mov	x19, x1
    4600:	mov	x20, x0
    4604:	add	x21, x0, #0x18
    4608:	add	x22, x1, #0x20
    460c:	ldr	x8, [x19]
    4610:	ldr	x9, [x19, #16]
    4614:	cmp	x8, x9
    4618:	b.cs	467c <PyInit__multibytecodec@@Base+0x1788>  // b.hs, b.nlast
    461c:	ldr	x10, [x20, #16]
    4620:	sub	x3, x9, x8
    4624:	mov	x0, x21
    4628:	mov	x2, x19
    462c:	ldr	x11, [x10, #48]
    4630:	ldr	x1, [x10, #8]
    4634:	mov	x4, x22
    4638:	blr	x11
    463c:	cmn	x0, #0x2
    4640:	mov	w8, #0x3                   	// #3
    4644:	b.eq	4668 <PyInit__multibytecodec@@Base+0x1774>  // b.none
    4648:	mov	x3, x0
    464c:	cbz	x0, 4668 <PyInit__multibytecodec@@Base+0x1774>
    4650:	ldr	x0, [x20, #16]
    4654:	ldr	x2, [x20, #32]
    4658:	mov	x1, x19
    465c:	bl	4690 <PyInit__multibytecodec@@Base+0x179c>
    4660:	cmp	w0, #0x0
    4664:	cset	w8, ne  // ne = any
    4668:	cbz	w8, 460c <PyInit__multibytecodec@@Base+0x1718>
    466c:	cmp	w8, #0x3
    4670:	b.eq	467c <PyInit__multibytecodec@@Base+0x1788>  // b.none
    4674:	mov	w0, #0xffffffff            	// #-1
    4678:	b	4680 <PyInit__multibytecodec@@Base+0x178c>
    467c:	mov	w0, wzr
    4680:	ldp	x20, x19, [sp, #32]
    4684:	ldp	x22, x21, [sp, #16]
    4688:	ldp	x29, x30, [sp], #48
    468c:	ret
    4690:	stp	x29, x30, [sp, #-64]!
    4694:	str	x23, [sp, #16]
    4698:	stp	x22, x21, [sp, #32]
    469c:	stp	x20, x19, [sp, #48]
    46a0:	mov	x29, sp
    46a4:	mov	x23, x3
    46a8:	mov	x20, x2
    46ac:	mov	x19, x1
    46b0:	cmp	x3, #0x0
    46b4:	mov	x22, x0
    46b8:	b.le	46e0 <PyInit__multibytecodec@@Base+0x17ec>
    46bc:	adrp	x21, 6000 <PyInit__multibytecodec@@Base+0x310c>
    46c0:	add	x21, x21, #0x451
    46c4:	cmp	x20, #0x3
    46c8:	b.ne	4754 <PyInit__multibytecodec@@Base+0x1860>  // b.any
    46cc:	add	x0, x19, #0x20
    46d0:	mov	w1, #0xfffd                	// #65533
    46d4:	bl	2ca0 <_PyUnicodeWriter_WriteChar@plt>
    46d8:	tbz	w0, #31, 4754 <PyInit__multibytecodec@@Base+0x1860>
    46dc:	b	4850 <PyInit__multibytecodec@@Base+0x195c>
    46e0:	add	x8, x23, #0x4
    46e4:	cmp	x8, #0x3
    46e8:	b.hi	471c <PyInit__multibytecodec@@Base+0x1828>  // b.pmore
    46ec:	adrp	x9, 5000 <PyInit__multibytecodec@@Base+0x210c>
    46f0:	add	x9, x9, #0xe98
    46f4:	adr	x10, 4708 <PyInit__multibytecodec@@Base+0x1814>
    46f8:	ldrb	w11, [x9, x8]
    46fc:	add	x10, x10, x11, lsl #2
    4700:	mov	w0, wzr
    4704:	br	x10
    4708:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    470c:	ldr	x8, [x8, #3984]
    4710:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4714:	add	x1, x1, #0x48a
    4718:	b	472c <PyInit__multibytecodec@@Base+0x1838>
    471c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4720:	ldr	x8, [x8, #3984]
    4724:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4728:	add	x1, x1, #0x49f
    472c:	ldr	x0, [x8]
    4730:	bl	2ae0 <PyErr_SetString@plt>
    4734:	b	485c <PyInit__multibytecodec@@Base+0x1968>
    4738:	ldr	x8, [x19, #16]
    473c:	ldr	x9, [x19]
    4740:	adrp	x21, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4744:	add	x21, x21, #0x46c
    4748:	sub	x23, x8, x9
    474c:	cmp	x20, #0x3
    4750:	b.eq	46cc <PyInit__multibytecodec@@Base+0x17d8>  // b.none
    4754:	and	x8, x20, #0xfffffffffffffffe
    4758:	cmp	x8, #0x2
    475c:	b.ne	4774 <PyInit__multibytecodec@@Base+0x1880>  // b.any
    4760:	ldr	x8, [x19]
    4764:	mov	w0, wzr
    4768:	add	x8, x8, x23
    476c:	str	x8, [x19]
    4770:	b	4860 <PyInit__multibytecodec@@Base+0x196c>
    4774:	ldp	x8, x1, [x19]
    4778:	ldr	x0, [x19, #24]
    477c:	sub	x3, x8, x1
    4780:	add	x23, x3, x23
    4784:	cbz	x0, 47b8 <PyInit__multibytecodec@@Base+0x18c4>
    4788:	mov	x1, x3
    478c:	bl	29b0 <PyUnicodeDecodeError_SetStart@plt>
    4790:	cbnz	w0, 4850 <PyInit__multibytecodec@@Base+0x195c>
    4794:	ldr	x0, [x19, #24]
    4798:	mov	x1, x23
    479c:	bl	2c10 <PyUnicodeDecodeError_SetEnd@plt>
    47a0:	cbnz	w0, 4850 <PyInit__multibytecodec@@Base+0x195c>
    47a4:	ldr	x0, [x19, #24]
    47a8:	mov	x1, x21
    47ac:	bl	2a60 <PyUnicodeDecodeError_SetReason@plt>
    47b0:	cbnz	w0, 4850 <PyInit__multibytecodec@@Base+0x195c>
    47b4:	b	47d8 <PyInit__multibytecodec@@Base+0x18e4>
    47b8:	ldr	x8, [x19, #16]
    47bc:	ldr	x0, [x22]
    47c0:	mov	x4, x23
    47c4:	mov	x5, x21
    47c8:	sub	x2, x8, x1
    47cc:	bl	2d90 <PyUnicodeDecodeError_Create@plt>
    47d0:	str	x0, [x19, #24]
    47d4:	cbz	x0, 4850 <PyInit__multibytecodec@@Base+0x195c>
    47d8:	ldr	x1, [x19, #24]
    47dc:	cmp	x20, #0x1
    47e0:	b.eq	4848 <PyInit__multibytecodec@@Base+0x1954>  // b.none
    47e4:	mov	x0, x20
    47e8:	bl	3c94 <PyInit__multibytecodec@@Base+0xda0>
    47ec:	mov	x20, x0
    47f0:	cbz	x0, 4854 <PyInit__multibytecodec@@Base+0x1960>
    47f4:	ldr	x8, [x20, #8]
    47f8:	ldrb	w8, [x8, #171]
    47fc:	tbz	w8, #2, 482c <PyInit__multibytecodec@@Base+0x1938>
    4800:	ldr	x8, [x20, #16]
    4804:	cmp	x8, #0x2
    4808:	b.ne	482c <PyInit__multibytecodec@@Base+0x1938>  // b.any
    480c:	ldr	x1, [x20, #24]
    4810:	ldr	x8, [x1, #8]
    4814:	ldrb	w8, [x8, #171]
    4818:	tbz	w8, #4, 482c <PyInit__multibytecodec@@Base+0x1938>
    481c:	ldr	x8, [x20, #32]
    4820:	ldr	x8, [x8, #8]
    4824:	ldrb	w8, [x8, #171]
    4828:	tbnz	w8, #0, 4874 <PyInit__multibytecodec@@Base+0x1980>
    482c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4830:	ldr	x8, [x8, #4000]
    4834:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4838:	add	x1, x1, #0x609
    483c:	ldr	x0, [x8]
    4840:	bl	2ae0 <PyErr_SetString@plt>
    4844:	b	4854 <PyInit__multibytecodec@@Base+0x1960>
    4848:	mov	x0, x1
    484c:	bl	2bc0 <PyCodec_StrictErrors@plt>
    4850:	mov	x20, xzr
    4854:	mov	x0, x20
    4858:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    485c:	mov	w0, #0xffffffff            	// #-1
    4860:	ldp	x20, x19, [sp, #48]
    4864:	ldp	x22, x21, [sp, #32]
    4868:	ldr	x23, [sp, #16]
    486c:	ldp	x29, x30, [sp], #64
    4870:	ret
    4874:	add	x0, x19, #0x20
    4878:	bl	2c90 <_PyUnicodeWriter_WriteStr@plt>
    487c:	tbnz	w0, #31, 4854 <PyInit__multibytecodec@@Base+0x1960>
    4880:	ldr	x0, [x20, #32]
    4884:	bl	2b50 <PyLong_AsSsize_t@plt>
    4888:	mov	x21, x0
    488c:	tbz	x0, #63, 48a4 <PyInit__multibytecodec@@Base+0x19b0>
    4890:	bl	2bf0 <PyErr_Occurred@plt>
    4894:	cbnz	x0, 48a4 <PyInit__multibytecodec@@Base+0x19b0>
    4898:	ldp	x9, x8, [x19, #8]
    489c:	add	x8, x8, x21
    48a0:	sub	x21, x8, x9
    48a4:	tbnz	x21, #63, 48b8 <PyInit__multibytecodec@@Base+0x19c4>
    48a8:	ldp	x8, x9, [x19, #8]
    48ac:	add	x8, x8, x21
    48b0:	cmp	x8, x9
    48b4:	b.ls	48dc <PyInit__multibytecodec@@Base+0x19e8>  // b.plast
    48b8:	bl	2b90 <PyErr_Clear@plt>
    48bc:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    48c0:	ldr	x8, [x8, #4032]
    48c4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    48c8:	add	x1, x1, #0x4ef
    48cc:	mov	x2, x21
    48d0:	ldr	x0, [x8]
    48d4:	bl	2d50 <PyErr_Format@plt>
    48d8:	b	4854 <PyInit__multibytecodec@@Base+0x1960>
    48dc:	mov	x0, x20
    48e0:	str	x8, [x19]
    48e4:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    48e8:	mov	w0, wzr
    48ec:	b	4860 <PyInit__multibytecodec@@Base+0x196c>
    48f0:	stp	x29, x30, [sp, #-32]!
    48f4:	stp	x20, x19, [sp, #16]
    48f8:	mov	x29, sp
    48fc:	ldr	x9, [x1, #16]
    4900:	ldr	x1, [x1]
    4904:	ldr	x8, [x0, #48]
    4908:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    490c:	sub	x20, x9, x1
    4910:	sub	x9, x10, x8
    4914:	cmp	x20, x9
    4918:	b.gt	4950 <PyInit__multibytecodec@@Base+0x1a5c>
    491c:	add	x9, x20, x8
    4920:	cmp	x9, #0x9
    4924:	b.ge	4950 <PyInit__multibytecodec@@Base+0x1a5c>  // b.tcont
    4928:	add	x8, x0, x8
    492c:	mov	x19, x0
    4930:	add	x0, x8, #0x28
    4934:	mov	x2, x20
    4938:	bl	2970 <memcpy@plt>
    493c:	ldr	x8, [x19, #48]
    4940:	mov	w0, wzr
    4944:	add	x8, x8, x20
    4948:	str	x8, [x19, #48]
    494c:	b	496c <PyInit__multibytecodec@@Base+0x1a78>
    4950:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4954:	ldr	x8, [x8, #4048]
    4958:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    495c:	add	x1, x1, #0x439
    4960:	ldr	x0, [x8]
    4964:	bl	2ae0 <PyErr_SetString@plt>
    4968:	mov	w0, #0xffffffff            	// #-1
    496c:	ldp	x20, x19, [sp, #16]
    4970:	ldp	x29, x30, [sp], #32
    4974:	ret
    4978:	stp	x29, x30, [sp, #-32]!
    497c:	stp	x20, x19, [sp, #16]
    4980:	mov	x29, sp
    4984:	ldr	x1, [x0, #48]
    4988:	mov	x20, x0
    498c:	add	x0, x0, #0x28
    4990:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    4994:	cbz	x0, 49d8 <PyInit__multibytecodec@@Base+0x1ae4>
    4998:	mov	x19, x0
    499c:	add	x0, x20, #0x18
    49a0:	mov	w1, #0x8                   	// #8
    49a4:	mov	w2, #0x1                   	// #1
    49a8:	mov	w3, wzr
    49ac:	bl	2af0 <_PyLong_FromByteArray@plt>
    49b0:	cbz	x0, 49cc <PyInit__multibytecodec@@Base+0x1ad8>
    49b4:	mov	x2, x0
    49b8:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    49bc:	add	x0, x0, #0x63d
    49c0:	mov	x1, x19
    49c4:	bl	2d70 <_Py_BuildValue_SizeT@plt>
    49c8:	b	49d8 <PyInit__multibytecodec@@Base+0x1ae4>
    49cc:	mov	x0, x19
    49d0:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    49d4:	mov	x0, xzr
    49d8:	ldp	x20, x19, [sp, #16]
    49dc:	ldp	x29, x30, [sp], #32
    49e0:	ret
    49e4:	sub	sp, sp, #0x40
    49e8:	stp	x29, x30, [sp, #32]
    49ec:	stp	x20, x19, [sp, #48]
    49f0:	add	x29, sp, #0x20
    49f4:	adrp	x3, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    49f8:	ldr	x3, [x3, #4040]
    49fc:	mov	x8, x1
    4a00:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4a04:	mov	x19, x0
    4a08:	add	x1, x1, #0x640
    4a0c:	sub	x2, x29, #0x8
    4a10:	add	x4, sp, #0x10
    4a14:	mov	x0, x8
    4a18:	bl	2c50 <_PyArg_ParseTuple_SizeT@plt>
    4a1c:	cbz	w0, 4ab0 <PyInit__multibytecodec@@Base+0x1bbc>
    4a20:	ldr	x0, [sp, #16]
    4a24:	add	x1, sp, #0x8
    4a28:	mov	w2, #0x8                   	// #8
    4a2c:	mov	w3, #0x1                   	// #1
    4a30:	mov	w4, wzr
    4a34:	bl	2d30 <_PyLong_AsByteArray@plt>
    4a38:	tbnz	w0, #31, 4ab0 <PyInit__multibytecodec@@Base+0x1bbc>
    4a3c:	ldur	x0, [x29, #-8]
    4a40:	bl	2b60 <PyBytes_Size@plt>
    4a44:	cmn	x0, #0x1
    4a48:	b.eq	4ab0 <PyInit__multibytecodec@@Base+0x1bbc>  // b.none
    4a4c:	mov	x20, x0
    4a50:	cmp	x0, #0x9
    4a54:	b.lt	4a74 <PyInit__multibytecodec@@Base+0x1b80>  // b.tstop
    4a58:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4a5c:	ldr	x8, [x8, #4048]
    4a60:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4a64:	add	x1, x1, #0x51d
    4a68:	ldr	x0, [x8]
    4a6c:	bl	2ae0 <PyErr_SetString@plt>
    4a70:	b	4ab0 <PyInit__multibytecodec@@Base+0x1bbc>
    4a74:	ldur	x0, [x29, #-8]
    4a78:	bl	2d10 <PyBytes_AsString@plt>
    4a7c:	cbz	x0, 4ab0 <PyInit__multibytecodec@@Base+0x1bbc>
    4a80:	mov	x1, x0
    4a84:	add	x0, x19, #0x28
    4a88:	mov	x2, x20
    4a8c:	str	x20, [x19, #48]
    4a90:	bl	2970 <memcpy@plt>
    4a94:	ldr	x8, [sp, #8]
    4a98:	str	x8, [x19, #24]
    4a9c:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4aa0:	ldr	x19, [x19, #4016]
    4aa4:	mov	x0, x19
    4aa8:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    4aac:	b	4ab4 <PyInit__multibytecodec@@Base+0x1bc0>
    4ab0:	mov	x19, xzr
    4ab4:	mov	x0, x19
    4ab8:	ldp	x20, x19, [sp, #48]
    4abc:	ldp	x29, x30, [sp, #32]
    4ac0:	add	sp, sp, #0x40
    4ac4:	ret
    4ac8:	stp	x29, x30, [sp, #-32]!
    4acc:	str	x19, [sp, #16]
    4ad0:	mov	x29, sp
    4ad4:	ldr	x9, [x0, #16]
    4ad8:	mov	x19, x0
    4adc:	ldr	x8, [x9, #64]
    4ae0:	cbz	x8, 4afc <PyInit__multibytecodec@@Base+0x1c08>
    4ae4:	ldr	x1, [x9, #8]
    4ae8:	add	x0, x19, #0x18
    4aec:	blr	x8
    4af0:	cbz	x0, 4afc <PyInit__multibytecodec@@Base+0x1c08>
    4af4:	mov	x19, xzr
    4af8:	b	4b10 <PyInit__multibytecodec@@Base+0x1c1c>
    4afc:	str	xzr, [x19, #48]
    4b00:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4b04:	ldr	x19, [x19, #4016]
    4b08:	mov	x0, x19
    4b0c:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    4b10:	mov	x0, x19
    4b14:	ldr	x19, [sp, #16]
    4b18:	ldp	x29, x30, [sp], #32
    4b1c:	ret
    4b20:	stp	x29, x30, [sp, #-32]!
    4b24:	str	x19, [sp, #16]
    4b28:	mov	x29, sp
    4b2c:	mov	x19, x0
    4b30:	bl	2e00 <PyObject_GC_UnTrack@plt>
    4b34:	ldr	x0, [x19, #32]
    4b38:	cbz	x0, 4b4c <PyInit__multibytecodec@@Base+0x1c58>
    4b3c:	cbz	x0, 4b48 <PyInit__multibytecodec@@Base+0x1c54>
    4b40:	cmp	x0, #0x4
    4b44:	b.cc	4b4c <PyInit__multibytecodec@@Base+0x1c58>  // b.lo, b.ul, b.last
    4b48:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    4b4c:	ldr	x0, [x19, #56]
    4b50:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    4b54:	ldr	x8, [x19, #8]
    4b58:	mov	x0, x19
    4b5c:	ldr	x8, [x8, #320]
    4b60:	blr	x8
    4b64:	ldr	x19, [sp, #16]
    4b68:	ldp	x29, x30, [sp], #32
    4b6c:	ret
    4b70:	stp	x29, x30, [sp, #-48]!
    4b74:	stp	x22, x21, [sp, #16]
    4b78:	stp	x20, x19, [sp, #32]
    4b7c:	mov	x29, sp
    4b80:	mov	x22, x0
    4b84:	ldr	x0, [x0, #32]
    4b88:	mov	x20, x2
    4b8c:	mov	x19, x1
    4b90:	cmp	x0, #0x0
    4b94:	cset	w8, ne  // ne = any
    4b98:	cmp	x0, #0x4
    4b9c:	cset	w9, cc  // cc = lo, ul, last
    4ba0:	cbz	x0, 4bbc <PyInit__multibytecodec@@Base+0x1cc8>
    4ba4:	and	w8, w9, w8
    4ba8:	tbnz	w8, #0, 4bbc <PyInit__multibytecodec@@Base+0x1cc8>
    4bac:	mov	x1, x20
    4bb0:	blr	x19
    4bb4:	mov	w21, w0
    4bb8:	cbnz	w0, 4bdc <PyInit__multibytecodec@@Base+0x1ce8>
    4bbc:	ldr	x0, [x22, #56]
    4bc0:	cbz	x0, 4bd8 <PyInit__multibytecodec@@Base+0x1ce4>
    4bc4:	mov	x1, x20
    4bc8:	blr	x19
    4bcc:	cmp	w0, #0x0
    4bd0:	csel	w21, w21, w0, eq  // eq = none
    4bd4:	cbnz	w0, 4bdc <PyInit__multibytecodec@@Base+0x1ce8>
    4bd8:	mov	w21, wzr
    4bdc:	mov	w0, w21
    4be0:	ldp	x20, x19, [sp, #32]
    4be4:	ldp	x22, x21, [sp, #16]
    4be8:	ldp	x29, x30, [sp], #48
    4bec:	ret
    4bf0:	mov	w0, wzr
    4bf4:	ret
    4bf8:	sub	sp, sp, #0x30
    4bfc:	stp	x29, x30, [sp, #16]
    4c00:	stp	x20, x19, [sp, #32]
    4c04:	add	x29, sp, #0x10
    4c08:	mov	x8, x2
    4c0c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4c10:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    4c14:	mov	x20, x0
    4c18:	add	x2, x2, #0x702
    4c1c:	add	x3, x3, #0xdf8
    4c20:	add	x4, sp, #0x8
    4c24:	mov	x5, sp
    4c28:	mov	x0, x1
    4c2c:	mov	x1, x8
    4c30:	str	xzr, [sp]
    4c34:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    4c38:	cbz	w0, 4ca8 <PyInit__multibytecodec@@Base+0x1db4>
    4c3c:	ldr	x8, [x20, #304]
    4c40:	mov	x0, x20
    4c44:	mov	x1, xzr
    4c48:	blr	x8
    4c4c:	mov	x19, x0
    4c50:	cbz	x0, 4cac <PyInit__multibytecodec@@Base+0x1db8>
    4c54:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4c58:	add	x1, x1, #0x7ef
    4c5c:	mov	x0, x20
    4c60:	bl	2a00 <PyObject_GetAttrString@plt>
    4c64:	mov	x20, x0
    4c68:	cbz	x0, 4c98 <PyInit__multibytecodec@@Base+0x1da4>
    4c6c:	ldr	x8, [x20, #8]
    4c70:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    4c74:	add	x9, x9, #0x8e0
    4c78:	cmp	x8, x9
    4c7c:	b.eq	4cc0 <PyInit__multibytecodec@@Base+0x1dcc>  // b.none
    4c80:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4c84:	ldr	x8, [x8, #4000]
    4c88:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4c8c:	add	x1, x1, #0x5aa
    4c90:	ldr	x0, [x8]
    4c94:	bl	2ae0 <PyErr_SetString@plt>
    4c98:	mov	x0, x19
    4c9c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    4ca0:	mov	x0, x20
    4ca4:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    4ca8:	mov	x19, xzr
    4cac:	mov	x0, x19
    4cb0:	ldp	x20, x19, [sp, #32]
    4cb4:	ldp	x29, x30, [sp, #16]
    4cb8:	add	sp, sp, #0x30
    4cbc:	ret
    4cc0:	ldr	x8, [x20, #16]
    4cc4:	str	x8, [x19, #16]
    4cc8:	ldr	x0, [sp, #8]
    4ccc:	str	x0, [x19, #56]
    4cd0:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    4cd4:	str	xzr, [x19, #48]
    4cd8:	ldr	x0, [sp]
    4cdc:	bl	3ffc <PyInit__multibytecodec@@Base+0x1108>
    4ce0:	str	x0, [x19, #32]
    4ce4:	cbz	x0, 4c98 <PyInit__multibytecodec@@Base+0x1da4>
    4ce8:	ldr	x9, [x19, #16]
    4cec:	ldr	x8, [x9, #56]
    4cf0:	cbz	x8, 4d04 <PyInit__multibytecodec@@Base+0x1e10>
    4cf4:	ldr	x1, [x9, #8]
    4cf8:	add	x0, x19, #0x18
    4cfc:	blr	x8
    4d00:	cbnz	w0, 4c98 <PyInit__multibytecodec@@Base+0x1da4>
    4d04:	mov	x0, x20
    4d08:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    4d0c:	b	4cac <PyInit__multibytecodec@@Base+0x1db8>
    4d10:	stp	x29, x30, [sp, #-48]!
    4d14:	str	x21, [sp, #16]
    4d18:	stp	x20, x19, [sp, #32]
    4d1c:	mov	x29, sp
    4d20:	mov	x21, x2
    4d24:	mov	x20, x1
    4d28:	cmp	x2, #0x2
    4d2c:	mov	x19, x0
    4d30:	b.cc	4d50 <PyInit__multibytecodec@@Base+0x1e5c>  // b.lo, b.ul, b.last
    4d34:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4d38:	add	x0, x0, #0x693
    4d3c:	mov	w3, #0x1                   	// #1
    4d40:	mov	x1, x21
    4d44:	mov	x2, xzr
    4d48:	bl	2be0 <_PyArg_CheckPositional@plt>
    4d4c:	cbz	w0, 4d74 <PyInit__multibytecodec@@Base+0x1e80>
    4d50:	cmp	x21, #0x1
    4d54:	b.lt	4d60 <PyInit__multibytecodec@@Base+0x1e6c>  // b.tstop
    4d58:	ldr	x1, [x20]
    4d5c:	b	4d68 <PyInit__multibytecodec@@Base+0x1e74>
    4d60:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4d64:	ldr	x1, [x1, #4016]
    4d68:	mov	x0, x19
    4d6c:	bl	4e8c <PyInit__multibytecodec@@Base+0x1f98>
    4d70:	b	4d78 <PyInit__multibytecodec@@Base+0x1e84>
    4d74:	mov	x0, xzr
    4d78:	ldp	x20, x19, [sp, #32]
    4d7c:	ldr	x21, [sp, #16]
    4d80:	ldp	x29, x30, [sp], #48
    4d84:	ret
    4d88:	stp	x29, x30, [sp, #-48]!
    4d8c:	str	x21, [sp, #16]
    4d90:	stp	x20, x19, [sp, #32]
    4d94:	mov	x29, sp
    4d98:	mov	x21, x2
    4d9c:	mov	x20, x1
    4da0:	cmp	x2, #0x2
    4da4:	mov	x19, x0
    4da8:	b.cc	4dc8 <PyInit__multibytecodec@@Base+0x1ed4>  // b.lo, b.ul, b.last
    4dac:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4db0:	add	x0, x0, #0x698
    4db4:	mov	w3, #0x1                   	// #1
    4db8:	mov	x1, x21
    4dbc:	mov	x2, xzr
    4dc0:	bl	2be0 <_PyArg_CheckPositional@plt>
    4dc4:	cbz	w0, 4dec <PyInit__multibytecodec@@Base+0x1ef8>
    4dc8:	cmp	x21, #0x1
    4dcc:	b.lt	4dd8 <PyInit__multibytecodec@@Base+0x1ee4>  // b.tstop
    4dd0:	ldr	x1, [x20]
    4dd4:	b	4de0 <PyInit__multibytecodec@@Base+0x1eec>
    4dd8:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4ddc:	ldr	x1, [x1, #4016]
    4de0:	mov	x0, x19
    4de4:	bl	51cc <PyInit__multibytecodec@@Base+0x22d8>
    4de8:	b	4df0 <PyInit__multibytecodec@@Base+0x1efc>
    4dec:	mov	x0, xzr
    4df0:	ldp	x20, x19, [sp, #32]
    4df4:	ldr	x21, [sp, #16]
    4df8:	ldp	x29, x30, [sp], #48
    4dfc:	ret
    4e00:	stp	x29, x30, [sp, #-48]!
    4e04:	str	x21, [sp, #16]
    4e08:	stp	x20, x19, [sp, #32]
    4e0c:	mov	x29, sp
    4e10:	mov	x21, x2
    4e14:	mov	x20, x1
    4e18:	cmp	x2, #0x2
    4e1c:	mov	x19, x0
    4e20:	b.cc	4e40 <PyInit__multibytecodec@@Base+0x1f4c>  // b.lo, b.ul, b.last
    4e24:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4e28:	add	x0, x0, #0x6a1
    4e2c:	mov	w3, #0x1                   	// #1
    4e30:	mov	x1, x21
    4e34:	mov	x2, xzr
    4e38:	bl	2be0 <_PyArg_CheckPositional@plt>
    4e3c:	cbz	w0, 4e64 <PyInit__multibytecodec@@Base+0x1f70>
    4e40:	cmp	x21, #0x1
    4e44:	b.lt	4e50 <PyInit__multibytecodec@@Base+0x1f5c>  // b.tstop
    4e48:	ldr	x1, [x20]
    4e4c:	b	4e58 <PyInit__multibytecodec@@Base+0x1f64>
    4e50:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4e54:	ldr	x1, [x1, #4016]
    4e58:	mov	x0, x19
    4e5c:	bl	526c <PyInit__multibytecodec@@Base+0x2378>
    4e60:	b	4e68 <PyInit__multibytecodec@@Base+0x1f74>
    4e64:	mov	x0, xzr
    4e68:	ldp	x20, x19, [sp, #32]
    4e6c:	ldr	x21, [sp, #16]
    4e70:	ldp	x29, x30, [sp], #48
    4e74:	ret
    4e78:	stp	x29, x30, [sp, #-16]!
    4e7c:	mov	x29, sp
    4e80:	bl	5328 <PyInit__multibytecodec@@Base+0x2434>
    4e84:	ldp	x29, x30, [sp], #16
    4e88:	ret
    4e8c:	stp	x29, x30, [sp, #-32]!
    4e90:	stp	x20, x19, [sp, #16]
    4e94:	mov	x29, sp
    4e98:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4e9c:	ldr	x8, [x8, #4016]
    4ea0:	mov	x19, x0
    4ea4:	cmp	x1, x8
    4ea8:	b.eq	4ed8 <PyInit__multibytecodec@@Base+0x1fe4>  // b.none
    4eac:	ldr	x8, [x1, #8]
    4eb0:	ldrb	w8, [x8, #171]
    4eb4:	tbnz	w8, #0, 4ee8 <PyInit__multibytecodec@@Base+0x1ff4>
    4eb8:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4ebc:	ldr	x8, [x8, #4000]
    4ec0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4ec4:	add	x1, x1, #0x6ab
    4ec8:	ldr	x0, [x8]
    4ecc:	bl	2ae0 <PyErr_SetString@plt>
    4ed0:	mov	x0, xzr
    4ed4:	b	4f20 <PyInit__multibytecodec@@Base+0x202c>
    4ed8:	mov	x20, #0xffffffffffffffff    	// #-1
    4edc:	cmn	x20, #0x1
    4ee0:	b.ne	4f0c <PyInit__multibytecodec@@Base+0x2018>  // b.any
    4ee4:	b	4efc <PyInit__multibytecodec@@Base+0x2008>
    4ee8:	mov	x0, x1
    4eec:	bl	2b50 <PyLong_AsSsize_t@plt>
    4ef0:	mov	x20, x0
    4ef4:	cmn	x20, #0x1
    4ef8:	b.ne	4f0c <PyInit__multibytecodec@@Base+0x2018>  // b.any
    4efc:	bl	2bf0 <PyErr_Occurred@plt>
    4f00:	cbz	x0, 4f0c <PyInit__multibytecodec@@Base+0x2018>
    4f04:	mov	x0, xzr
    4f08:	b	4f20 <PyInit__multibytecodec@@Base+0x202c>
    4f0c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4f10:	add	x1, x1, #0x693
    4f14:	mov	x0, x19
    4f18:	mov	x2, x20
    4f1c:	bl	4f2c <PyInit__multibytecodec@@Base+0x2038>
    4f20:	ldp	x20, x19, [sp, #16]
    4f24:	ldp	x29, x30, [sp], #32
    4f28:	ret
    4f2c:	sub	sp, sp, #0xd0
    4f30:	stp	x29, x30, [sp, #112]
    4f34:	stp	x28, x27, [sp, #128]
    4f38:	stp	x26, x25, [sp, #144]
    4f3c:	stp	x24, x23, [sp, #160]
    4f40:	stp	x22, x21, [sp, #176]
    4f44:	stp	x20, x19, [sp, #192]
    4f48:	add	x29, sp, #0x70
    4f4c:	cbz	x2, 5174 <PyInit__multibytecodec@@Base+0x2280>
    4f50:	add	x8, sp, #0x18
    4f54:	mov	x22, x0
    4f58:	add	x0, x8, #0x20
    4f5c:	mov	x20, x2
    4f60:	mov	x21, x1
    4f64:	str	x0, [sp, #8]
    4f68:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    4f6c:	add	x8, x22, #0x28
    4f70:	str	xzr, [sp, #48]
    4f74:	str	x8, [sp, #16]
    4f78:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4f7c:	ldr	x19, [x19, #4000]
    4f80:	adrp	x24, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4f84:	adrp	x25, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4f88:	add	x24, x24, #0x6c6
    4f8c:	mov	x28, #0x7fffffffffffffff    	// #9223372036854775807
    4f90:	add	x25, x25, #0x6c4
    4f94:	b	4fb0 <PyInit__multibytecodec@@Base+0x20bc>
    4f98:	ldr	x0, [x19]
    4f9c:	ldr	x2, [x8, #24]
    4fa0:	mov	x1, x24
    4fa4:	bl	2d50 <PyErr_Format@plt>
    4fa8:	mov	w8, #0x4                   	// #4
    4fac:	cbnz	w8, 5140 <PyInit__multibytecodec@@Base+0x224c>
    4fb0:	ldr	x0, [x22, #56]
    4fb4:	mov	x1, x21
    4fb8:	tbnz	x20, #63, 4fd4 <PyInit__multibytecodec@@Base+0x20e0>
    4fbc:	mov	x2, x25
    4fc0:	mov	x3, x20
    4fc4:	bl	2c40 <_PyObject_CallMethod_SizeT@plt>
    4fc8:	mov	x26, x0
    4fcc:	cbnz	x0, 4fe4 <PyInit__multibytecodec@@Base+0x20f0>
    4fd0:	b	4fa8 <PyInit__multibytecodec@@Base+0x20b4>
    4fd4:	mov	x2, xzr
    4fd8:	bl	2c40 <_PyObject_CallMethod_SizeT@plt>
    4fdc:	mov	x26, x0
    4fe0:	cbz	x0, 4fa8 <PyInit__multibytecodec@@Base+0x20b4>
    4fe4:	ldr	x8, [x26, #8]
    4fe8:	ldrb	w9, [x8, #171]
    4fec:	tbz	w9, #3, 4f98 <PyInit__multibytecodec@@Base+0x20a4>
    4ff0:	ldr	x8, [x22, #48]
    4ff4:	ldr	x23, [x26, #16]
    4ff8:	cmp	x8, #0x1
    4ffc:	b.lt	5080 <PyInit__multibytecodec@@Base+0x218c>  // b.tstop
    5000:	sub	x9, x28, x8
    5004:	cmp	x23, x9
    5008:	b.le	501c <PyInit__multibytecodec@@Base+0x2128>
    500c:	bl	2a70 <PyErr_NoMemory@plt>
    5010:	mov	w8, #0x4                   	// #4
    5014:	cbnz	w8, 4fac <PyInit__multibytecodec@@Base+0x20b8>
    5018:	b	5080 <PyInit__multibytecodec@@Base+0x218c>
    501c:	add	x1, x8, x23
    5020:	mov	x0, xzr
    5024:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    5028:	cbz	x0, 5078 <PyInit__multibytecodec@@Base+0x2184>
    502c:	ldr	x2, [x22, #48]
    5030:	ldr	x1, [sp, #16]
    5034:	add	x28, x0, #0x20
    5038:	mov	x27, x0
    503c:	mov	x0, x28
    5040:	bl	2970 <memcpy@plt>
    5044:	ldr	x8, [x22, #48]
    5048:	ldr	x2, [x26, #16]
    504c:	add	x1, x26, #0x20
    5050:	add	x0, x28, x8
    5054:	mov	x28, #0x7fffffffffffffff    	// #9223372036854775807
    5058:	bl	2970 <memcpy@plt>
    505c:	mov	x0, x26
    5060:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5064:	mov	w8, wzr
    5068:	mov	x26, x27
    506c:	str	xzr, [x22, #48]
    5070:	cbnz	w8, 4fac <PyInit__multibytecodec@@Base+0x20b8>
    5074:	b	5080 <PyInit__multibytecodec@@Base+0x218c>
    5078:	mov	w8, #0x4                   	// #4
    507c:	cbnz	w8, 4fac <PyInit__multibytecodec@@Base+0x20b8>
    5080:	ldr	x27, [x26, #16]
    5084:	add	x1, x26, #0x20
    5088:	add	x0, sp, #0x18
    508c:	mov	x2, x27
    5090:	bl	45d0 <PyInit__multibytecodec@@Base+0x16dc>
    5094:	cmp	x27, #0x1
    5098:	b.lt	50ac <PyInit__multibytecodec@@Base+0x21b8>  // b.tstop
    509c:	add	x1, sp, #0x18
    50a0:	mov	x0, x22
    50a4:	bl	45ec <PyInit__multibytecodec@@Base+0x16f8>
    50a8:	cbnz	w0, 4fa8 <PyInit__multibytecodec@@Base+0x20b4>
    50ac:	tbnz	x20, #63, 50b4 <PyInit__multibytecodec@@Base+0x21c0>
    50b0:	cbnz	x23, 50dc <PyInit__multibytecodec@@Base+0x21e8>
    50b4:	ldr	x8, [sp, #24]
    50b8:	ldr	x9, [sp, #40]
    50bc:	cmp	x8, x9
    50c0:	b.cs	50dc <PyInit__multibytecodec@@Base+0x21e8>  // b.hs, b.nlast
    50c4:	ldr	x0, [x22, #16]
    50c8:	ldr	x2, [x22, #32]
    50cc:	add	x1, sp, #0x18
    50d0:	mov	x3, #0xfffffffffffffffe    	// #-2
    50d4:	bl	4690 <PyInit__multibytecodec@@Base+0x179c>
    50d8:	cbnz	w0, 4fa8 <PyInit__multibytecodec@@Base+0x20b4>
    50dc:	ldr	x8, [sp, #24]
    50e0:	ldr	x9, [sp, #40]
    50e4:	cmp	x8, x9
    50e8:	b.cs	50fc <PyInit__multibytecodec@@Base+0x2208>  // b.hs, b.nlast
    50ec:	add	x1, sp, #0x18
    50f0:	mov	x0, x22
    50f4:	bl	48f0 <PyInit__multibytecodec@@Base+0x19fc>
    50f8:	cbnz	w0, 4fa8 <PyInit__multibytecodec@@Base+0x20b4>
    50fc:	mov	x0, x26
    5100:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5104:	mov	x26, xzr
    5108:	tbnz	x20, #63, 5138 <PyInit__multibytecodec@@Base+0x2244>
    510c:	ldr	x8, [sp, #88]
    5110:	cmp	x8, #0x0
    5114:	cset	w8, ne  // ne = any
    5118:	cmp	x27, #0x0
    511c:	cset	w9, eq  // eq = none
    5120:	orr	w8, w9, w8
    5124:	cmp	w8, #0x0
    5128:	mov	w8, #0x2                   	// #2
    512c:	csel	w8, w8, wzr, ne  // ne = any
    5130:	csinc	x20, x20, xzr, ne  // ne = any
    5134:	b	4fac <PyInit__multibytecodec@@Base+0x20b8>
    5138:	mov	w8, #0x2                   	// #2
    513c:	b	4fac <PyInit__multibytecodec@@Base+0x20b8>
    5140:	cmp	w8, #0x4
    5144:	b.eq	5188 <PyInit__multibytecodec@@Base+0x2294>  // b.none
    5148:	cmp	w8, #0x2
    514c:	b.ne	51a8 <PyInit__multibytecodec@@Base+0x22b4>  // b.any
    5150:	ldr	x0, [sp, #8]
    5154:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    5158:	cbz	x0, 5188 <PyInit__multibytecodec@@Base+0x2294>
    515c:	mov	x20, x0
    5160:	mov	x0, x26
    5164:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5168:	ldr	x0, [sp, #48]
    516c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5170:	b	51a8 <PyInit__multibytecodec@@Base+0x22b4>
    5174:	mov	x0, xzr
    5178:	mov	w1, wzr
    517c:	bl	2de0 <PyUnicode_New@plt>
    5180:	mov	x20, x0
    5184:	b	51a8 <PyInit__multibytecodec@@Base+0x22b4>
    5188:	mov	x0, x26
    518c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5190:	ldr	x0, [sp, #48]
    5194:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5198:	ldr	x0, [sp, #8]
    519c:	bl	2ac0 <_PyUnicodeWriter_Dealloc@plt>
    51a0:	mov	x20, xzr
    51a4:	b	51a8 <PyInit__multibytecodec@@Base+0x22b4>
    51a8:	mov	x0, x20
    51ac:	ldp	x20, x19, [sp, #192]
    51b0:	ldp	x22, x21, [sp, #176]
    51b4:	ldp	x24, x23, [sp, #160]
    51b8:	ldp	x26, x25, [sp, #144]
    51bc:	ldp	x28, x27, [sp, #128]
    51c0:	ldp	x29, x30, [sp, #112]
    51c4:	add	sp, sp, #0xd0
    51c8:	ret
    51cc:	stp	x29, x30, [sp, #-32]!
    51d0:	stp	x20, x19, [sp, #16]
    51d4:	mov	x29, sp
    51d8:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    51dc:	ldr	x8, [x8, #4016]
    51e0:	mov	x19, x0
    51e4:	cmp	x1, x8
    51e8:	b.eq	5218 <PyInit__multibytecodec@@Base+0x2324>  // b.none
    51ec:	ldr	x8, [x1, #8]
    51f0:	ldrb	w8, [x8, #171]
    51f4:	tbnz	w8, #0, 5228 <PyInit__multibytecodec@@Base+0x2334>
    51f8:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    51fc:	ldr	x8, [x8, #4000]
    5200:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5204:	add	x1, x1, #0x6ab
    5208:	ldr	x0, [x8]
    520c:	bl	2ae0 <PyErr_SetString@plt>
    5210:	mov	x0, xzr
    5214:	b	5260 <PyInit__multibytecodec@@Base+0x236c>
    5218:	mov	x20, #0xffffffffffffffff    	// #-1
    521c:	cmn	x20, #0x1
    5220:	b.ne	524c <PyInit__multibytecodec@@Base+0x2358>  // b.any
    5224:	b	523c <PyInit__multibytecodec@@Base+0x2348>
    5228:	mov	x0, x1
    522c:	bl	2b50 <PyLong_AsSsize_t@plt>
    5230:	mov	x20, x0
    5234:	cmn	x20, #0x1
    5238:	b.ne	524c <PyInit__multibytecodec@@Base+0x2358>  // b.any
    523c:	bl	2bf0 <PyErr_Occurred@plt>
    5240:	cbz	x0, 524c <PyInit__multibytecodec@@Base+0x2358>
    5244:	mov	x0, xzr
    5248:	b	5260 <PyInit__multibytecodec@@Base+0x236c>
    524c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5250:	add	x1, x1, #0x698
    5254:	mov	x0, x19
    5258:	mov	x2, x20
    525c:	bl	4f2c <PyInit__multibytecodec@@Base+0x2038>
    5260:	ldp	x20, x19, [sp, #16]
    5264:	ldp	x29, x30, [sp], #32
    5268:	ret
    526c:	stp	x29, x30, [sp, #-32]!
    5270:	stp	x20, x19, [sp, #16]
    5274:	mov	x29, sp
    5278:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    527c:	ldr	x8, [x8, #4016]
    5280:	mov	x19, x0
    5284:	cmp	x1, x8
    5288:	b.eq	52b4 <PyInit__multibytecodec@@Base+0x23c0>  // b.none
    528c:	ldr	x8, [x1, #8]
    5290:	ldrb	w8, [x8, #171]
    5294:	tbnz	w8, #0, 52c4 <PyInit__multibytecodec@@Base+0x23d0>
    5298:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    529c:	ldr	x8, [x8, #4000]
    52a0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    52a4:	add	x1, x1, #0x6ab
    52a8:	ldr	x0, [x8]
    52ac:	bl	2ae0 <PyErr_SetString@plt>
    52b0:	b	5314 <PyInit__multibytecodec@@Base+0x2420>
    52b4:	mov	x20, #0xffffffffffffffff    	// #-1
    52b8:	cmn	x20, #0x1
    52bc:	b.ne	52e0 <PyInit__multibytecodec@@Base+0x23ec>  // b.any
    52c0:	b	52d8 <PyInit__multibytecodec@@Base+0x23e4>
    52c4:	mov	x0, x1
    52c8:	bl	2b50 <PyLong_AsSsize_t@plt>
    52cc:	mov	x20, x0
    52d0:	cmn	x20, #0x1
    52d4:	b.ne	52e0 <PyInit__multibytecodec@@Base+0x23ec>  // b.any
    52d8:	bl	2bf0 <PyErr_Occurred@plt>
    52dc:	cbnz	x0, 5314 <PyInit__multibytecodec@@Base+0x2420>
    52e0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    52e4:	add	x1, x1, #0x693
    52e8:	mov	x0, x19
    52ec:	mov	x2, x20
    52f0:	bl	4f2c <PyInit__multibytecodec@@Base+0x2038>
    52f4:	cbz	x0, 5314 <PyInit__multibytecodec@@Base+0x2420>
    52f8:	mov	w1, #0x1                   	// #1
    52fc:	mov	x20, x0
    5300:	bl	2dc0 <PyUnicode_Splitlines@plt>
    5304:	mov	x19, x0
    5308:	mov	x0, x20
    530c:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5310:	b	5318 <PyInit__multibytecodec@@Base+0x2424>
    5314:	mov	x19, xzr
    5318:	mov	x0, x19
    531c:	ldp	x20, x19, [sp, #16]
    5320:	ldp	x29, x30, [sp], #32
    5324:	ret
    5328:	stp	x29, x30, [sp, #-32]!
    532c:	str	x19, [sp, #16]
    5330:	mov	x29, sp
    5334:	ldr	x9, [x0, #16]
    5338:	mov	x19, x0
    533c:	ldr	x8, [x9, #64]
    5340:	cbz	x8, 535c <PyInit__multibytecodec@@Base+0x2468>
    5344:	ldr	x1, [x9, #8]
    5348:	add	x0, x19, #0x18
    534c:	blr	x8
    5350:	cbz	x0, 535c <PyInit__multibytecodec@@Base+0x2468>
    5354:	mov	x19, xzr
    5358:	b	5370 <PyInit__multibytecodec@@Base+0x247c>
    535c:	str	xzr, [x19, #48]
    5360:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5364:	ldr	x19, [x19, #4016]
    5368:	mov	x0, x19
    536c:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    5370:	mov	x0, x19
    5374:	ldr	x19, [sp, #16]
    5378:	ldp	x29, x30, [sp], #32
    537c:	ret
    5380:	stp	x29, x30, [sp, #-32]!
    5384:	str	x19, [sp, #16]
    5388:	mov	x29, sp
    538c:	mov	x19, x0
    5390:	bl	2e00 <PyObject_GC_UnTrack@plt>
    5394:	ldr	x0, [x19, #32]
    5398:	cbz	x0, 53ac <PyInit__multibytecodec@@Base+0x24b8>
    539c:	cbz	x0, 53a8 <PyInit__multibytecodec@@Base+0x24b4>
    53a0:	cmp	x0, #0x4
    53a4:	b.cc	53ac <PyInit__multibytecodec@@Base+0x24b8>  // b.lo, b.ul, b.last
    53a8:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    53ac:	ldr	x0, [x19, #48]
    53b0:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    53b4:	ldr	x8, [x19, #8]
    53b8:	mov	x0, x19
    53bc:	ldr	x8, [x8, #320]
    53c0:	blr	x8
    53c4:	ldr	x19, [sp, #16]
    53c8:	ldp	x29, x30, [sp], #32
    53cc:	ret
    53d0:	stp	x29, x30, [sp, #-48]!
    53d4:	stp	x22, x21, [sp, #16]
    53d8:	stp	x20, x19, [sp, #32]
    53dc:	mov	x29, sp
    53e0:	mov	x22, x0
    53e4:	ldr	x0, [x0, #32]
    53e8:	mov	x20, x2
    53ec:	mov	x19, x1
    53f0:	cmp	x0, #0x0
    53f4:	cset	w8, ne  // ne = any
    53f8:	cmp	x0, #0x4
    53fc:	cset	w9, cc  // cc = lo, ul, last
    5400:	cbz	x0, 541c <PyInit__multibytecodec@@Base+0x2528>
    5404:	and	w8, w9, w8
    5408:	tbnz	w8, #0, 541c <PyInit__multibytecodec@@Base+0x2528>
    540c:	mov	x1, x20
    5410:	blr	x19
    5414:	mov	w21, w0
    5418:	cbnz	w0, 543c <PyInit__multibytecodec@@Base+0x2548>
    541c:	ldr	x0, [x22, #48]
    5420:	cbz	x0, 5438 <PyInit__multibytecodec@@Base+0x2544>
    5424:	mov	x1, x20
    5428:	blr	x19
    542c:	cmp	w0, #0x0
    5430:	csel	w21, w21, w0, eq  // eq = none
    5434:	cbnz	w0, 543c <PyInit__multibytecodec@@Base+0x2548>
    5438:	mov	w21, wzr
    543c:	mov	w0, w21
    5440:	ldp	x20, x19, [sp, #32]
    5444:	ldp	x22, x21, [sp, #16]
    5448:	ldp	x29, x30, [sp], #48
    544c:	ret
    5450:	mov	w0, wzr
    5454:	ret
    5458:	sub	sp, sp, #0x30
    545c:	stp	x29, x30, [sp, #16]
    5460:	stp	x20, x19, [sp, #32]
    5464:	add	x29, sp, #0x10
    5468:	mov	x8, x2
    546c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5470:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5474:	mov	x20, x0
    5478:	add	x2, x2, #0x758
    547c:	add	x3, x3, #0xdf8
    5480:	add	x4, sp, #0x8
    5484:	mov	x5, sp
    5488:	mov	x0, x1
    548c:	mov	x1, x8
    5490:	str	xzr, [sp]
    5494:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    5498:	cbz	w0, 5508 <PyInit__multibytecodec@@Base+0x2614>
    549c:	ldr	x8, [x20, #304]
    54a0:	mov	x0, x20
    54a4:	mov	x1, xzr
    54a8:	blr	x8
    54ac:	mov	x19, x0
    54b0:	cbz	x0, 550c <PyInit__multibytecodec@@Base+0x2618>
    54b4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    54b8:	add	x1, x1, #0x7ef
    54bc:	mov	x0, x20
    54c0:	bl	2a00 <PyObject_GetAttrString@plt>
    54c4:	mov	x20, x0
    54c8:	cbz	x0, 54f8 <PyInit__multibytecodec@@Base+0x2604>
    54cc:	ldr	x8, [x20, #8]
    54d0:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    54d4:	add	x9, x9, #0x8e0
    54d8:	cmp	x8, x9
    54dc:	b.eq	5520 <PyInit__multibytecodec@@Base+0x262c>  // b.none
    54e0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    54e4:	ldr	x8, [x8, #4000]
    54e8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    54ec:	add	x1, x1, #0x5aa
    54f0:	ldr	x0, [x8]
    54f4:	bl	2ae0 <PyErr_SetString@plt>
    54f8:	mov	x0, x19
    54fc:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5500:	mov	x0, x20
    5504:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5508:	mov	x19, xzr
    550c:	mov	x0, x19
    5510:	ldp	x20, x19, [sp, #32]
    5514:	ldp	x29, x30, [sp, #16]
    5518:	add	sp, sp, #0x30
    551c:	ret
    5520:	ldr	x8, [x20, #16]
    5524:	str	x8, [x19, #16]
    5528:	ldr	x0, [sp, #8]
    552c:	str	x0, [x19, #48]
    5530:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    5534:	str	xzr, [x19, #40]
    5538:	ldr	x0, [sp]
    553c:	bl	3ffc <PyInit__multibytecodec@@Base+0x1108>
    5540:	str	x0, [x19, #32]
    5544:	cbz	x0, 54f8 <PyInit__multibytecodec@@Base+0x2604>
    5548:	ldr	x9, [x19, #16]
    554c:	ldr	x8, [x9, #32]
    5550:	cbz	x8, 5564 <PyInit__multibytecodec@@Base+0x2670>
    5554:	ldr	x1, [x9, #8]
    5558:	add	x0, x19, #0x18
    555c:	blr	x8
    5560:	cbnz	w0, 54f8 <PyInit__multibytecodec@@Base+0x2604>
    5564:	mov	x0, x20
    5568:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    556c:	b	550c <PyInit__multibytecodec@@Base+0x2618>
    5570:	stp	x29, x30, [sp, #-32]!
    5574:	str	x19, [sp, #16]
    5578:	mov	x29, sp
    557c:	bl	569c <PyInit__multibytecodec@@Base+0x27a8>
    5580:	cbz	w0, 558c <PyInit__multibytecodec@@Base+0x2698>
    5584:	mov	x19, xzr
    5588:	b	559c <PyInit__multibytecodec@@Base+0x26a8>
    558c:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5590:	ldr	x19, [x19, #4016]
    5594:	mov	x0, x19
    5598:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    559c:	mov	x0, x19
    55a0:	ldr	x19, [sp, #16]
    55a4:	ldp	x29, x30, [sp], #32
    55a8:	ret
    55ac:	stp	x29, x30, [sp, #-64]!
    55b0:	str	x23, [sp, #16]
    55b4:	stp	x22, x21, [sp, #32]
    55b8:	stp	x20, x19, [sp, #48]
    55bc:	mov	x29, sp
    55c0:	mov	x20, x0
    55c4:	mov	x0, x1
    55c8:	mov	x19, x1
    55cc:	bl	2990 <PySequence_Check@plt>
    55d0:	cbz	w0, 5654 <PyInit__multibytecodec@@Base+0x2760>
    55d4:	mov	x0, x19
    55d8:	bl	2b80 <PySequence_Size@plt>
    55dc:	cmp	x0, #0x1
    55e0:	b.lt	5638 <PyInit__multibytecodec@@Base+0x2744>  // b.tstop
    55e4:	mov	x21, xzr
    55e8:	mov	w23, #0x1                   	// #1
    55ec:	mov	x0, x19
    55f0:	mov	x1, x21
    55f4:	bl	2b00 <PySequence_GetItem@plt>
    55f8:	cbz	x0, 566c <PyInit__multibytecodec@@Base+0x2778>
    55fc:	mov	x21, x0
    5600:	mov	x0, x20
    5604:	mov	x1, x21
    5608:	bl	569c <PyInit__multibytecodec@@Base+0x27a8>
    560c:	mov	w22, w0
    5610:	mov	x0, x21
    5614:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5618:	cmn	w22, #0x1
    561c:	b.eq	566c <PyInit__multibytecodec@@Base+0x2778>  // b.none
    5620:	mov	x0, x19
    5624:	sxtw	x21, w23
    5628:	bl	2b80 <PySequence_Size@plt>
    562c:	cmp	x0, x21
    5630:	add	w23, w23, #0x1
    5634:	b.gt	55ec <PyInit__multibytecodec@@Base+0x26f8>
    5638:	bl	2bf0 <PyErr_Occurred@plt>
    563c:	cbnz	x0, 566c <PyInit__multibytecodec@@Base+0x2778>
    5640:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5644:	ldr	x19, [x19, #4016]
    5648:	mov	x0, x19
    564c:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    5650:	b	5670 <PyInit__multibytecodec@@Base+0x277c>
    5654:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5658:	ldr	x8, [x8, #4000]
    565c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5660:	add	x1, x1, #0x73a
    5664:	ldr	x0, [x8]
    5668:	bl	2ae0 <PyErr_SetString@plt>
    566c:	mov	x19, xzr
    5670:	mov	x0, x19
    5674:	ldp	x20, x19, [sp, #48]
    5678:	ldp	x22, x21, [sp, #32]
    567c:	ldr	x23, [sp, #16]
    5680:	ldp	x29, x30, [sp], #64
    5684:	ret
    5688:	stp	x29, x30, [sp, #-16]!
    568c:	mov	x29, sp
    5690:	bl	5704 <PyInit__multibytecodec@@Base+0x2810>
    5694:	ldp	x29, x30, [sp], #16
    5698:	ret
    569c:	stp	x29, x30, [sp, #-32]!
    56a0:	stp	x20, x19, [sp, #16]
    56a4:	mov	x29, sp
    56a8:	mov	w2, wzr
    56ac:	mov	x20, x0
    56b0:	bl	3340 <PyInit__multibytecodec@@Base+0x44c>
    56b4:	cbz	x0, 56f4 <PyInit__multibytecodec@@Base+0x2800>
    56b8:	mov	x19, x0
    56bc:	ldr	x0, [x20, #48]
    56c0:	adrp	x1, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    56c4:	add	x1, x1, #0xee0
    56c8:	mov	x2, x19
    56cc:	mov	x3, xzr
    56d0:	bl	2cf0 <_PyObject_CallMethodIdObjArgs@plt>
    56d4:	mov	x20, x0
    56d8:	mov	x0, x19
    56dc:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    56e0:	cbz	x20, 56f4 <PyInit__multibytecodec@@Base+0x2800>
    56e4:	mov	x0, x20
    56e8:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    56ec:	mov	w0, wzr
    56f0:	b	56f8 <PyInit__multibytecodec@@Base+0x2804>
    56f4:	mov	w0, #0xffffffff            	// #-1
    56f8:	ldp	x20, x19, [sp, #16]
    56fc:	ldp	x29, x30, [sp], #32
    5700:	ret
    5704:	stp	x29, x30, [sp, #-32]!
    5708:	stp	x20, x19, [sp, #16]
    570c:	mov	x29, sp
    5710:	ldr	x2, [x0, #40]
    5714:	cbz	x2, 5780 <PyInit__multibytecodec@@Base+0x288c>
    5718:	mov	x19, x0
    571c:	ldr	x0, [x0, #16]
    5720:	ldr	x4, [x19, #32]
    5724:	add	x1, x19, #0x18
    5728:	mov	w5, #0x3                   	// #3
    572c:	mov	x3, xzr
    5730:	bl	3534 <PyInit__multibytecodec@@Base+0x640>
    5734:	ldr	x8, [x19, #40]
    5738:	mov	x20, x0
    573c:	cbz	x8, 574c <PyInit__multibytecodec@@Base+0x2858>
    5740:	mov	x0, x8
    5744:	str	xzr, [x19, #40]
    5748:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    574c:	cbz	x20, 579c <PyInit__multibytecodec@@Base+0x28a8>
    5750:	mov	x0, x20
    5754:	bl	2b60 <PyBytes_Size@plt>
    5758:	cmp	x0, #0x1
    575c:	b.lt	5778 <PyInit__multibytecodec@@Base+0x2884>  // b.tstop
    5760:	ldr	x0, [x19, #48]
    5764:	adrp	x1, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5768:	add	x1, x1, #0xee0
    576c:	mov	x2, x20
    5770:	bl	2cf0 <_PyObject_CallMethodIdObjArgs@plt>
    5774:	cbz	x0, 5794 <PyInit__multibytecodec@@Base+0x28a0>
    5778:	mov	x0, x20
    577c:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5780:	adrp	x19, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5784:	ldr	x19, [x19, #4016]
    5788:	mov	x0, x19
    578c:	bl	2f98 <PyInit__multibytecodec@@Base+0xa4>
    5790:	b	57a0 <PyInit__multibytecodec@@Base+0x28ac>
    5794:	mov	x0, x20
    5798:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    579c:	mov	x19, xzr
    57a0:	mov	x0, x19
    57a4:	ldp	x20, x19, [sp, #16]
    57a8:	ldp	x29, x30, [sp], #32
    57ac:	ret
    57b0:	stp	x29, x30, [sp, #-16]!
    57b4:	mov	x29, sp
    57b8:	bl	2b20 <PyObject_Free@plt>
    57bc:	ldp	x29, x30, [sp], #16
    57c0:	ret
    57c4:	sub	sp, sp, #0x50
    57c8:	stp	x29, x30, [sp, #32]
    57cc:	stp	x22, x21, [sp, #48]
    57d0:	stp	x20, x19, [sp, #64]
    57d4:	add	x29, sp, #0x20
    57d8:	mov	x20, x2
    57dc:	mov	x19, x0
    57e0:	cbz	x3, 57f0 <PyInit__multibytecodec@@Base+0x28fc>
    57e4:	ldr	x22, [x3, #16]
    57e8:	cbnz	x1, 57f8 <PyInit__multibytecodec@@Base+0x2904>
    57ec:	b	5810 <PyInit__multibytecodec@@Base+0x291c>
    57f0:	mov	x22, xzr
    57f4:	cbz	x1, 5810 <PyInit__multibytecodec@@Base+0x291c>
    57f8:	sub	x8, x20, #0x1
    57fc:	cmp	x8, #0x1
    5800:	b.hi	5810 <PyInit__multibytecodec@@Base+0x291c>  // b.pmore
    5804:	cbnz	x3, 5810 <PyInit__multibytecodec@@Base+0x291c>
    5808:	cbnz	x1, 5844 <PyInit__multibytecodec@@Base+0x2950>
    580c:	b	58e8 <PyInit__multibytecodec@@Base+0x29f4>
    5810:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5814:	add	x8, sp, #0x10
    5818:	add	x4, x4, #0xf58
    581c:	mov	w5, #0x1                   	// #1
    5820:	mov	w6, #0x2                   	// #2
    5824:	mov	x0, x1
    5828:	mov	x1, x20
    582c:	mov	x2, xzr
    5830:	mov	w7, wzr
    5834:	str	x8, [sp]
    5838:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    583c:	mov	x1, x0
    5840:	cbz	x1, 58e8 <PyInit__multibytecodec@@Base+0x29f4>
    5844:	ldr	x21, [x1]
    5848:	add	x8, x22, x20
    584c:	cmp	x8, #0x1
    5850:	b.eq	5894 <PyInit__multibytecodec@@Base+0x29a0>  // b.none
    5854:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5858:	ldr	x3, [x1, #8]
    585c:	ldr	x8, [x8, #4016]
    5860:	cmp	x3, x8
    5864:	b.eq	5894 <PyInit__multibytecodec@@Base+0x29a0>  // b.none
    5868:	ldr	x8, [x3, #8]
    586c:	ldrb	w8, [x8, #171]
    5870:	tbnz	w8, #4, 58ac <PyInit__multibytecodec@@Base+0x29b8>
    5874:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5878:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    587c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5880:	add	x0, x0, #0x3c5
    5884:	add	x1, x1, #0x790
    5888:	add	x2, x2, #0x7a2
    588c:	bl	2b70 <_PyArg_BadArgument@plt>
    5890:	b	58e8 <PyInit__multibytecodec@@Base+0x29f4>
    5894:	mov	x20, xzr
    5898:	mov	x0, x19
    589c:	mov	x1, x21
    58a0:	mov	x2, x20
    58a4:	bl	5aac <PyInit__multibytecodec@@Base+0x2bb8>
    58a8:	b	58ec <PyInit__multibytecodec@@Base+0x29f8>
    58ac:	ldr	x0, [x1, #8]
    58b0:	add	x1, sp, #0x8
    58b4:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    58b8:	cbz	x0, 58ec <PyInit__multibytecodec@@Base+0x29f8>
    58bc:	mov	x20, x0
    58c0:	bl	29a0 <strlen@plt>
    58c4:	ldr	x8, [sp, #8]
    58c8:	cmp	x0, x8
    58cc:	b.eq	5898 <PyInit__multibytecodec@@Base+0x29a4>  // b.none
    58d0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    58d4:	ldr	x8, [x8, #3992]
    58d8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    58dc:	add	x1, x1, #0x778
    58e0:	ldr	x0, [x8]
    58e4:	bl	2ae0 <PyErr_SetString@plt>
    58e8:	mov	x0, xzr
    58ec:	ldp	x20, x19, [sp, #64]
    58f0:	ldp	x22, x21, [sp, #48]
    58f4:	ldp	x29, x30, [sp, #32]
    58f8:	add	sp, sp, #0x50
    58fc:	ret
    5900:	sub	sp, sp, #0xa0
    5904:	stp	x29, x30, [sp, #112]
    5908:	stp	x22, x21, [sp, #128]
    590c:	stp	x20, x19, [sp, #144]
    5910:	add	x29, sp, #0x70
    5914:	mov	x21, x2
    5918:	mov	x20, x1
    591c:	mov	x19, x0
    5920:	cbz	x3, 592c <PyInit__multibytecodec@@Base+0x2a38>
    5924:	ldr	x22, [x3, #16]
    5928:	b	5930 <PyInit__multibytecodec@@Base+0x2a3c>
    592c:	mov	x22, xzr
    5930:	movi	v0.2d, #0x0
    5934:	stp	q0, q0, [sp, #64]
    5938:	stp	q0, q0, [sp, #32]
    593c:	str	q0, [sp, #16]
    5940:	cbz	x20, 595c <PyInit__multibytecodec@@Base+0x2a68>
    5944:	sub	x8, x21, #0x1
    5948:	cmp	x8, #0x1
    594c:	b.hi	595c <PyInit__multibytecodec@@Base+0x2a68>  // b.pmore
    5950:	cbnz	x3, 595c <PyInit__multibytecodec@@Base+0x2a68>
    5954:	cbnz	x20, 5990 <PyInit__multibytecodec@@Base+0x2a9c>
    5958:	b	5a40 <PyInit__multibytecodec@@Base+0x2b4c>
    595c:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5960:	sub	x8, x29, #0x10
    5964:	add	x4, x4, #0xf98
    5968:	mov	w5, #0x1                   	// #1
    596c:	mov	w6, #0x2                   	// #2
    5970:	mov	x0, x20
    5974:	mov	x1, x21
    5978:	mov	x2, xzr
    597c:	mov	w7, wzr
    5980:	str	x8, [sp]
    5984:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    5988:	mov	x20, x0
    598c:	cbz	x20, 5a40 <PyInit__multibytecodec@@Base+0x2b4c>
    5990:	ldr	x0, [x20]
    5994:	add	x1, sp, #0x10
    5998:	mov	w2, wzr
    599c:	bl	2cb0 <PyObject_GetBuffer@plt>
    59a0:	cbnz	w0, 5a40 <PyInit__multibytecodec@@Base+0x2b4c>
    59a4:	add	x0, sp, #0x10
    59a8:	mov	w1, #0x43                  	// #67
    59ac:	bl	2a20 <PyBuffer_IsContiguous@plt>
    59b0:	cbz	w0, 5a20 <PyInit__multibytecodec@@Base+0x2b2c>
    59b4:	add	x8, x22, x21
    59b8:	cmp	x8, #0x1
    59bc:	b.eq	59fc <PyInit__multibytecodec@@Base+0x2b08>  // b.none
    59c0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    59c4:	ldr	x3, [x20, #8]
    59c8:	ldr	x8, [x8, #4016]
    59cc:	cmp	x3, x8
    59d0:	b.eq	59fc <PyInit__multibytecodec@@Base+0x2b08>  // b.none
    59d4:	ldr	x8, [x3, #8]
    59d8:	ldrb	w8, [x8, #171]
    59dc:	tbnz	w8, #4, 5a6c <PyInit__multibytecodec@@Base+0x2b78>
    59e0:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    59e4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    59e8:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    59ec:	add	x0, x0, #0x5df
    59f0:	add	x1, x1, #0x790
    59f4:	add	x2, x2, #0x7a2
    59f8:	b	5a3c <PyInit__multibytecodec@@Base+0x2b48>
    59fc:	mov	x20, xzr
    5a00:	add	x1, sp, #0x10
    5a04:	mov	x0, x19
    5a08:	mov	x2, x20
    5a0c:	bl	5c64 <PyInit__multibytecodec@@Base+0x2d70>
    5a10:	mov	x19, x0
    5a14:	ldr	x8, [sp, #24]
    5a18:	cbnz	x8, 5a4c <PyInit__multibytecodec@@Base+0x2b58>
    5a1c:	b	5a54 <PyInit__multibytecodec@@Base+0x2b60>
    5a20:	ldr	x3, [x20]
    5a24:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5a28:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5a2c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5a30:	add	x0, x0, #0x5df
    5a34:	add	x1, x1, #0x5e6
    5a38:	add	x2, x2, #0x5f7
    5a3c:	bl	2b70 <_PyArg_BadArgument@plt>
    5a40:	mov	x19, xzr
    5a44:	ldr	x8, [sp, #24]
    5a48:	cbz	x8, 5a54 <PyInit__multibytecodec@@Base+0x2b60>
    5a4c:	add	x0, sp, #0x10
    5a50:	bl	29e0 <PyBuffer_Release@plt>
    5a54:	mov	x0, x19
    5a58:	ldp	x20, x19, [sp, #144]
    5a5c:	ldp	x22, x21, [sp, #128]
    5a60:	ldp	x29, x30, [sp, #112]
    5a64:	add	sp, sp, #0xa0
    5a68:	ret
    5a6c:	ldr	x0, [x20, #8]
    5a70:	add	x1, sp, #0x8
    5a74:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    5a78:	cbz	x0, 5a40 <PyInit__multibytecodec@@Base+0x2b4c>
    5a7c:	mov	x20, x0
    5a80:	bl	29a0 <strlen@plt>
    5a84:	ldr	x8, [sp, #8]
    5a88:	cmp	x0, x8
    5a8c:	b.eq	5a00 <PyInit__multibytecodec@@Base+0x2b0c>  // b.none
    5a90:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5a94:	ldr	x8, [x8, #3992]
    5a98:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5a9c:	add	x1, x1, #0x778
    5aa0:	ldr	x0, [x8]
    5aa4:	bl	2ae0 <PyErr_SetString@plt>
    5aa8:	b	5a40 <PyInit__multibytecodec@@Base+0x2b4c>
    5aac:	stp	x29, x30, [sp, #-64]!
    5ab0:	str	x23, [sp, #16]
    5ab4:	stp	x22, x21, [sp, #32]
    5ab8:	stp	x20, x19, [sp, #48]
    5abc:	mov	x29, sp
    5ac0:	ldr	x8, [x1, #8]
    5ac4:	mov	x23, x2
    5ac8:	mov	x20, x1
    5acc:	mov	x21, x0
    5ad0:	ldrb	w8, [x8, #171]
    5ad4:	tbnz	w8, #4, 5b18 <PyInit__multibytecodec@@Base+0x2c24>
    5ad8:	mov	x0, x20
    5adc:	bl	2aa0 <PyObject_Str@plt>
    5ae0:	cbz	x0, 5be0 <PyInit__multibytecodec@@Base+0x2cec>
    5ae4:	ldr	x8, [x0, #8]
    5ae8:	mov	x20, x0
    5aec:	ldrb	w8, [x8, #171]
    5af0:	tbnz	w8, #4, 5b28 <PyInit__multibytecodec@@Base+0x2c34>
    5af4:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5af8:	ldr	x8, [x8, #4000]
    5afc:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5b00:	add	x1, x1, #0x7ae
    5b04:	ldr	x0, [x8]
    5b08:	bl	2ae0 <PyErr_SetString@plt>
    5b0c:	mov	x0, x20
    5b10:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5b14:	b	5bdc <PyInit__multibytecodec@@Base+0x2ce8>
    5b18:	mov	x19, xzr
    5b1c:	ldrb	w8, [x20, #32]
    5b20:	tbz	w8, #7, 5b34 <PyInit__multibytecodec@@Base+0x2c40>
    5b24:	b	5b40 <PyInit__multibytecodec@@Base+0x2c4c>
    5b28:	mov	x19, x20
    5b2c:	ldrb	w8, [x20, #32]
    5b30:	tbnz	w8, #7, 5b40 <PyInit__multibytecodec@@Base+0x2c4c>
    5b34:	mov	x0, x20
    5b38:	bl	2980 <_PyUnicode_Ready@plt>
    5b3c:	tbnz	w0, #31, 5bd4 <PyInit__multibytecodec@@Base+0x2ce0>
    5b40:	ldr	x22, [x20, #16]
    5b44:	mov	x0, x23
    5b48:	bl	3ffc <PyInit__multibytecodec@@Base+0x1108>
    5b4c:	cbz	x0, 5bd4 <PyInit__multibytecodec@@Base+0x2ce0>
    5b50:	ldr	x9, [x21, #16]
    5b54:	mov	x23, x0
    5b58:	ldr	x8, [x9, #32]
    5b5c:	cbz	x8, 5b70 <PyInit__multibytecodec@@Base+0x2c7c>
    5b60:	ldr	x1, [x9, #8]
    5b64:	add	x0, x29, #0x18
    5b68:	blr	x8
    5b6c:	cbnz	w0, 5bc0 <PyInit__multibytecodec@@Base+0x2ccc>
    5b70:	ldr	x0, [x21, #16]
    5b74:	add	x1, x29, #0x18
    5b78:	mov	w5, #0x3                   	// #3
    5b7c:	mov	x2, x20
    5b80:	mov	x3, xzr
    5b84:	mov	x4, x23
    5b88:	bl	3534 <PyInit__multibytecodec@@Base+0x640>
    5b8c:	cbz	x0, 5bc0 <PyInit__multibytecodec@@Base+0x2ccc>
    5b90:	mov	x20, x0
    5b94:	cbz	x23, 5ba0 <PyInit__multibytecodec@@Base+0x2cac>
    5b98:	cmp	x23, #0x4
    5b9c:	b.cc	5ba8 <PyInit__multibytecodec@@Base+0x2cb4>  // b.lo, b.ul, b.last
    5ba0:	mov	x0, x23
    5ba4:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5ba8:	mov	x0, x19
    5bac:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5bb0:	mov	x0, x20
    5bb4:	mov	x1, x22
    5bb8:	bl	5bf4 <PyInit__multibytecodec@@Base+0x2d00>
    5bbc:	b	5be0 <PyInit__multibytecodec@@Base+0x2cec>
    5bc0:	cbz	x23, 5bcc <PyInit__multibytecodec@@Base+0x2cd8>
    5bc4:	cmp	x23, #0x4
    5bc8:	b.cc	5bd4 <PyInit__multibytecodec@@Base+0x2ce0>  // b.lo, b.ul, b.last
    5bcc:	mov	x0, x23
    5bd0:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5bd4:	mov	x0, x19
    5bd8:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5bdc:	mov	x0, xzr
    5be0:	ldp	x20, x19, [sp, #48]
    5be4:	ldp	x22, x21, [sp, #32]
    5be8:	ldr	x23, [sp, #16]
    5bec:	ldp	x29, x30, [sp], #64
    5bf0:	ret
    5bf4:	stp	x29, x30, [sp, #-48]!
    5bf8:	str	x21, [sp, #16]
    5bfc:	stp	x20, x19, [sp, #32]
    5c00:	mov	x29, sp
    5c04:	cbz	x0, 5c4c <PyInit__multibytecodec@@Base+0x2d58>
    5c08:	mov	x21, x0
    5c0c:	mov	w0, #0x2                   	// #2
    5c10:	mov	x20, x1
    5c14:	bl	2bd0 <PyTuple_New@plt>
    5c18:	mov	x19, x0
    5c1c:	cbz	x0, 5c38 <PyInit__multibytecodec@@Base+0x2d44>
    5c20:	mov	x0, x20
    5c24:	str	x21, [x19, #24]
    5c28:	bl	2b30 <PyLong_FromSsize_t@plt>
    5c2c:	cbz	x0, 5c44 <PyInit__multibytecodec@@Base+0x2d50>
    5c30:	str	x0, [x19, #32]
    5c34:	b	5c50 <PyInit__multibytecodec@@Base+0x2d5c>
    5c38:	mov	x0, x21
    5c3c:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5c40:	b	5c50 <PyInit__multibytecodec@@Base+0x2d5c>
    5c44:	mov	x0, x19
    5c48:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5c4c:	mov	x19, xzr
    5c50:	mov	x0, x19
    5c54:	ldp	x20, x19, [sp, #32]
    5c58:	ldr	x21, [sp, #16]
    5c5c:	ldp	x29, x30, [sp], #48
    5c60:	ret
    5c64:	sub	sp, sp, #0xa0
    5c68:	stp	x29, x30, [sp, #96]
    5c6c:	str	x23, [sp, #112]
    5c70:	stp	x22, x21, [sp, #128]
    5c74:	stp	x20, x19, [sp, #144]
    5c78:	add	x29, sp, #0x60
    5c7c:	ldr	x23, [x1]
    5c80:	ldr	x20, [x1, #16]
    5c84:	mov	x22, x0
    5c88:	mov	x0, x2
    5c8c:	bl	3ffc <PyInit__multibytecodec@@Base+0x1108>
    5c90:	cbz	x0, 5dd8 <PyInit__multibytecodec@@Base+0x2ee4>
    5c94:	mov	x19, x0
    5c98:	cbz	x20, 5db0 <PyInit__multibytecodec@@Base+0x2ebc>
    5c9c:	add	x8, sp, #0x8
    5ca0:	add	x21, x8, #0x20
    5ca4:	mov	x0, x21
    5ca8:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    5cac:	add	x8, x23, x20
    5cb0:	str	x20, [sp, #80]
    5cb4:	stp	x23, x23, [sp, #8]
    5cb8:	stp	x8, xzr, [sp, #24]
    5cbc:	ldr	x9, [x22, #16]
    5cc0:	ldr	x8, [x9, #56]
    5cc4:	cbz	x8, 5ce4 <PyInit__multibytecodec@@Base+0x2df0>
    5cc8:	ldr	x1, [x9, #8]
    5ccc:	add	x0, x29, #0x18
    5cd0:	blr	x8
    5cd4:	cbnz	w0, 5d84 <PyInit__multibytecodec@@Base+0x2e90>
    5cd8:	b	5ce4 <PyInit__multibytecodec@@Base+0x2df0>
    5cdc:	mov	w8, #0x6                   	// #6
    5ce0:	cbnz	w8, 5d3c <PyInit__multibytecodec@@Base+0x2e48>
    5ce4:	ldr	x8, [sp, #8]
    5ce8:	ldr	x9, [sp, #24]
    5cec:	cmp	x8, x9
    5cf0:	b.cs	5d4c <PyInit__multibytecodec@@Base+0x2e58>  // b.hs, b.nlast
    5cf4:	ldr	x10, [x22, #16]
    5cf8:	sub	x3, x9, x8
    5cfc:	add	x0, x29, #0x18
    5d00:	add	x2, sp, #0x8
    5d04:	ldr	x11, [x10, #48]
    5d08:	ldr	x1, [x10, #8]
    5d0c:	mov	x4, x21
    5d10:	blr	x11
    5d14:	cbz	x0, 5cdc <PyInit__multibytecodec@@Base+0x2de8>
    5d18:	mov	x3, x0
    5d1c:	ldr	x0, [x22, #16]
    5d20:	add	x1, sp, #0x8
    5d24:	mov	x2, x19
    5d28:	bl	4690 <PyInit__multibytecodec@@Base+0x179c>
    5d2c:	cmp	w0, #0x0
    5d30:	cset	w8, ne  // ne = any
    5d34:	lsl	w8, w8, #2
    5d38:	cbz	w8, 5ce4 <PyInit__multibytecodec@@Base+0x2df0>
    5d3c:	cmp	w8, #0x4
    5d40:	b.eq	5d84 <PyInit__multibytecodec@@Base+0x2e90>  // b.none
    5d44:	cmp	w8, #0x6
    5d48:	b.ne	5df0 <PyInit__multibytecodec@@Base+0x2efc>  // b.any
    5d4c:	mov	x0, x21
    5d50:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    5d54:	cbz	x0, 5d84 <PyInit__multibytecodec@@Base+0x2e90>
    5d58:	mov	x22, x0
    5d5c:	ldr	x0, [sp, #32]
    5d60:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5d64:	cbz	x19, 5d70 <PyInit__multibytecodec@@Base+0x2e7c>
    5d68:	cmp	x19, #0x4
    5d6c:	b.cc	5d78 <PyInit__multibytecodec@@Base+0x2e84>  // b.lo, b.ul, b.last
    5d70:	mov	x0, x19
    5d74:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5d78:	mov	x0, x22
    5d7c:	mov	x1, x20
    5d80:	b	5dd4 <PyInit__multibytecodec@@Base+0x2ee0>
    5d84:	cbz	x19, 5d90 <PyInit__multibytecodec@@Base+0x2e9c>
    5d88:	cmp	x19, #0x4
    5d8c:	b.cc	5d98 <PyInit__multibytecodec@@Base+0x2ea4>  // b.lo, b.ul, b.last
    5d90:	mov	x0, x19
    5d94:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5d98:	ldr	x0, [sp, #32]
    5d9c:	bl	37b0 <PyInit__multibytecodec@@Base+0x8bc>
    5da0:	mov	x0, x21
    5da4:	bl	2ac0 <_PyUnicodeWriter_Dealloc@plt>
    5da8:	mov	x0, xzr
    5dac:	b	5dd8 <PyInit__multibytecodec@@Base+0x2ee4>
    5db0:	cbz	x19, 5dbc <PyInit__multibytecodec@@Base+0x2ec8>
    5db4:	cmp	x19, #0x4
    5db8:	b.cc	5dc4 <PyInit__multibytecodec@@Base+0x2ed0>  // b.lo, b.ul, b.last
    5dbc:	mov	x0, x19
    5dc0:	bl	315c <PyInit__multibytecodec@@Base+0x268>
    5dc4:	mov	x0, xzr
    5dc8:	mov	w1, wzr
    5dcc:	bl	2de0 <PyUnicode_New@plt>
    5dd0:	mov	x1, xzr
    5dd4:	bl	5bf4 <PyInit__multibytecodec@@Base+0x2d00>
    5dd8:	ldp	x20, x19, [sp, #144]
    5ddc:	ldp	x22, x21, [sp, #128]
    5de0:	ldr	x23, [sp, #112]
    5de4:	ldp	x29, x30, [sp, #96]
    5de8:	add	sp, sp, #0xa0
    5dec:	ret
    5df0:	b	5dd8 <PyInit__multibytecodec@@Base+0x2ee4>
    5df4:	stp	x29, x30, [sp, #-32]!
    5df8:	str	x19, [sp, #16]
    5dfc:	mov	x29, sp
    5e00:	mov	x19, x1
    5e04:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5e08:	add	x1, x1, #0x7f5
    5e0c:	mov	x0, x19
    5e10:	bl	2ba0 <PyCapsule_IsValid@plt>
    5e14:	cbz	w0, 5e48 <PyInit__multibytecodec@@Base+0x2f54>
    5e18:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5e1c:	add	x1, x1, #0x7f5
    5e20:	mov	x0, x19
    5e24:	bl	2d60 <PyCapsule_GetPointer@plt>
    5e28:	ldr	x8, [x0, #16]
    5e2c:	mov	x19, x0
    5e30:	cbz	x8, 5e68 <PyInit__multibytecodec@@Base+0x2f74>
    5e34:	ldr	x0, [x19, #8]
    5e38:	blr	x8
    5e3c:	cbz	w0, 5e68 <PyInit__multibytecodec@@Base+0x2f74>
    5e40:	mov	x0, xzr
    5e44:	b	5e7c <PyInit__multibytecodec@@Base+0x2f88>
    5e48:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5e4c:	ldr	x8, [x8, #3992]
    5e50:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5e54:	add	x1, x1, #0x80c
    5e58:	ldr	x0, [x8]
    5e5c:	bl	2ae0 <PyErr_SetString@plt>
    5e60:	mov	x0, xzr
    5e64:	b	5e7c <PyInit__multibytecodec@@Base+0x2f88>
    5e68:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5e6c:	add	x0, x0, #0x8e0
    5e70:	bl	2cd0 <_PyObject_New@plt>
    5e74:	cbz	x0, 5e7c <PyInit__multibytecodec@@Base+0x2f88>
    5e78:	str	x19, [x0, #16]
    5e7c:	ldr	x19, [sp, #16]
    5e80:	ldp	x29, x30, [sp], #32
    5e84:	ret

Disassembly of section .fini:

0000000000005e88 <.fini>:
    5e88:	stp	x29, x30, [sp, #-16]!
    5e8c:	mov	x29, sp
    5e90:	ldp	x29, x30, [sp], #16
    5e94:	ret
